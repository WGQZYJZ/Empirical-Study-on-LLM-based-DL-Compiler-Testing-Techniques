import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_188 = relay.var("var_188", dtype = "float64", shape = (8, 4, 2))#candidate|188|(8, 4, 2)|var|float64
var_189 = relay.var("var_189", dtype = "float64", shape = (8, 4, 2))#candidate|189|(8, 4, 2)|var|float64
bop_190 = relay.less(var_188.astype('bool'), relay.reshape(var_189.astype('bool'), relay.shape_of(var_188))) # shape=(8, 4, 2)
uop_197 = relay.acos(var_188.astype('float64')) # shape=(8, 4, 2)
uop_204 = relay.asin(var_189.astype('float64')) # shape=(8, 4, 2)
bop_216 = relay.subtract(uop_204.astype('int64'), relay.reshape(var_189.astype('int64'), relay.shape_of(uop_204))) # shape=(8, 4, 2)
output = relay.Tuple([bop_190,uop_197,bop_216,])
output2 = relay.Tuple([bop_190,uop_197,bop_216,])
func_222 = relay.Function([var_188,var_189,], output)
mod['func_222'] = func_222
mod = relay.transform.InferType()(mod)
mutated_mod['func_222'] = func_222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_222_call = mutated_mod.get_global_var('func_222')
var_224 = relay.var("var_224", dtype = "float64", shape = (8, 4, 2))#candidate|224|(8, 4, 2)|var|float64
var_225 = relay.var("var_225", dtype = "float64", shape = (8, 4, 2))#candidate|225|(8, 4, 2)|var|float64
call_223 = func_222_call(var_224,var_225,)
output = call_223
func_226 = relay.Function([var_224,var_225,], output)
mutated_mod['func_226'] = func_226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_341 = relay.var("var_341", dtype = "float32", shape = (8, 12, 5))#candidate|341|(8, 12, 5)|var|float32
uop_342 = relay.acosh(var_341.astype('float32')) # shape=(8, 12, 5)
func_222_call = mod.get_global_var('func_222')
func_226_call = mutated_mod.get_global_var('func_226')
const_347 = relay.const([-6.306446,3.246873,-4.866769,-8.112676,5.432084,-7.605893,9.206398,-8.200317,6.029381,6.987386,-2.166206,-7.567054,-7.156881,6.608523,9.803964,-0.346793,-3.025221,5.352612,-6.885241,-6.339044,3.127081,-3.776997,6.689691,4.823246,-7.424270,-3.204534,-0.746217,-6.923102,-7.216775,-6.932017,-0.939834,7.524928,1.014822,0.978636,-1.365971,7.687245,1.450416,0.563621,-1.998674,6.077183,5.196109,6.924481,-8.449148,-7.465524,5.885885,-1.908143,4.989208,7.788733,8.519013,-5.730787,-5.387127,8.128207,0.376559,-0.634312,0.540727,-5.446684,6.381288,-0.338966,4.140307,-6.897314,-0.547840,7.079240,5.238574,-3.950103], dtype = "float64")#candidate|347|(64,)|const|float64
call_346 = relay.TupleGetItem(func_222_call(relay.reshape(const_347.astype('float64'), [8, 4, 2]), relay.reshape(const_347.astype('float64'), [8, 4, 2]), ), 1)
call_348 = relay.TupleGetItem(func_226_call(relay.reshape(const_347.astype('float64'), [8, 4, 2]), relay.reshape(const_347.astype('float64'), [8, 4, 2]), ), 1)
uop_350 = relay.erf(call_346.astype('float32')) # shape=(8, 4, 2)
uop_352 = relay.erf(call_348.astype('float32')) # shape=(8, 4, 2)
output = relay.Tuple([uop_342,const_347,uop_350,])
output2 = relay.Tuple([uop_342,const_347,uop_352,])
func_365 = relay.Function([var_341,], output)
mod['func_365'] = func_365
mod = relay.transform.InferType()(mod)
var_366 = relay.var("var_366", dtype = "float32", shape = (8, 12, 5))#candidate|366|(8, 12, 5)|var|float32
output = func_365(var_366)
func_367 = relay.Function([var_366], output)
mutated_mod['func_367'] = func_367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_380 = relay.var("var_380", dtype = "float64", shape = (8, 16, 5))#candidate|380|(8, 16, 5)|var|float64
uop_381 = relay.log10(var_380.astype('float64')) # shape=(8, 16, 5)
output = relay.Tuple([uop_381,])
output2 = relay.Tuple([uop_381,])
func_388 = relay.Function([var_380,], output)
mod['func_388'] = func_388
mod = relay.transform.InferType()(mod)
mutated_mod['func_388'] = func_388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_389 = relay.var("var_389", dtype = "float64", shape = (8, 16, 5))#candidate|389|(8, 16, 5)|var|float64
func_388_call = mutated_mod.get_global_var('func_388')
call_390 = func_388_call(var_389)
output = call_390
func_391 = relay.Function([var_389], output)
mutated_mod['func_391'] = func_391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_647 = relay.var("var_647", dtype = "float32", shape = (1, 8, 2))#candidate|647|(1, 8, 2)|var|float32
uop_648 = relay.sigmoid(var_647.astype('float32')) # shape=(1, 8, 2)
output = relay.Tuple([uop_648,])
output2 = relay.Tuple([uop_648,])
func_653 = relay.Function([var_647,], output)
mod['func_653'] = func_653
mod = relay.transform.InferType()(mod)
var_654 = relay.var("var_654", dtype = "float32", shape = (1, 8, 2))#candidate|654|(1, 8, 2)|var|float32
output = func_653(var_654)
func_655 = relay.Function([var_654], output)
mutated_mod['func_655'] = func_655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_952 = relay.var("var_952", dtype = "float32", shape = (7, 11, 8))#candidate|952|(7, 11, 8)|var|float32
var_953 = relay.var("var_953", dtype = "float32", shape = (7, 11, 8))#candidate|953|(7, 11, 8)|var|float32
bop_954 = relay.mod(var_952.astype('float32'), relay.reshape(var_953.astype('float32'), relay.shape_of(var_952))) # shape=(7, 11, 8)
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
const_958 = relay.const([4.638473,-1.733281,9.599451,6.314177,1.883777,1.538380,5.354069,-8.035437,4.703654,4.972136,-8.914613,8.879946,6.208328,-2.225748,9.696560,6.740797,-5.956768,-0.817133,-7.685663,6.103706,-5.975172,-4.528780,6.986169,-3.351495,-3.178158,2.755137,5.864601,-7.774318,-5.972302,9.330281,-0.435206,-5.053806,-8.752799,-9.581848,-9.657580,-1.456742,9.544322,9.148306,-5.078475,7.269383,2.740725,4.523505,5.147354,8.115940,9.433637,9.163638,-5.093342,-9.245924,-7.328040,9.638792,-5.765691,-5.109841,8.487246,-3.894519,8.668394,-4.415302,2.490646,2.278678,2.240054,-9.203296,7.273370,-6.685929,3.276745,-5.980883,9.022067,1.341869,3.835221,4.232006,9.672602,-7.071504,1.710543,9.157526,7.789892,7.386595,5.761210,1.007288,7.270474,-0.272076,-5.362736,7.156929,5.883958,4.864086,-7.903151,5.756824,9.428081,-0.469655,-7.889626,8.982177,-2.607081,-6.603968,-7.219877,-1.194544,1.086802,-0.789276,9.221613,3.721137,-0.457392,8.224623,-7.482987,-6.486320,6.915184,-6.602652,-1.822402,7.373251,9.318116,5.960730,3.617541,8.888419,-9.644067,-3.833124,0.532558,-2.940815,-1.705921,-6.243143,-2.621414,-5.965739,7.312246,5.241326,-7.638228,-2.255354,-9.749175,3.633527,2.883455,-0.441299,1.030079,1.513963,9.114440,-4.553349,-1.047595,-7.433680,-0.446697,-3.568995,3.464736,7.804614,-2.839428,9.398102,7.488254,-3.321273,-9.822902,8.898702,6.451757,-6.065560,-0.318252,-8.554366,-8.477889,-7.543828,-5.892612,-0.686252,-2.340091,0.405919,-9.617484,-5.945438,-3.363492,-6.097670,0.588317,-3.416938,2.215763,3.375505,0.785757,-5.429315,-4.215202,-0.089797,5.176298,1.255238,2.252392,-7.625227,6.312389,4.360995,1.978165,-5.343078,2.478408,0.080332,-6.213579,9.798289,-5.675576,5.764498,-1.149780,9.919642,-0.674248,6.176689,-2.578368,6.359797,-9.614999,0.487584,2.447128,3.511357,-0.227487,5.809654,5.666604,-8.447599,-8.856583,2.665655,-7.452781,-8.516339,0.922182,-7.494887,4.616563,2.795212,-2.306733,1.504931,7.984346,3.236384,4.284880,-6.514858,5.649062,-1.139082,-6.972774,-7.205301,9.357300,9.702137,-4.965818,-5.263796,-8.588104,-6.053291,-3.287025,-4.373084,-7.345369,5.095963,-8.965303,-5.339468,-9.675558,3.043488,-4.853226,1.893537,-7.756527,-8.967572,-7.567741,-9.626445,1.732947,-3.471100,-6.273963,7.986204,-1.942810,-8.206600,-4.019761,-6.856416,5.024171,2.130614,5.431514,0.679963,5.513248,-1.291330,-5.810769,-6.212796,2.650054,2.612078,9.742030,-3.115578,4.476842,-6.895883,-1.874289,0.207715,-7.716912,2.740964,8.806881,3.307098,9.558791,6.754450,-7.328971,7.402443,-5.723405,9.425391,9.205372,7.038538,-7.591164,-0.399762,-8.451374,9.694628,-7.257213,-8.913356,7.375538,-1.950938,2.057359,3.728435,-9.672283,-2.344258,4.269807,-4.847715,0.154472,-3.878052,-5.875657,-0.564536,-6.856679,6.189824,3.162418,-2.813128,-4.054669,2.038990,-9.237878,2.561800,2.206591,1.007003,-0.537453,4.709920,5.609799,1.908362,-8.845081,-0.178121,3.152151,7.048266,6.919475,-4.155436,-6.977138,-4.721888,-2.079103,1.229584,2.006454,-1.062609,1.135464,8.404671,0.917580,-1.123092,5.411863,-3.499767,-0.352647,7.125170,-1.278955,3.597475,9.126741,3.894196,-3.288272,3.135200,-5.968715,1.899009,5.002448,-8.026692,5.478252,-1.634542,-6.827736,-3.640857,-1.869623,-1.296472,0.353461,2.868220,7.379792,-4.315764,-2.606150,8.029865,0.808359,-6.806586,-2.852279,-2.277757,5.355116,-6.994545,1.798863,-7.761575,-2.974965,-5.627656,8.631561,-3.218750,7.671609,-5.804950,-6.427276,-7.236802,-6.954540,-1.499194,9.626507,-2.732171,1.402045,-4.712465,3.478195,-8.005922,-1.927129,9.536584,-6.786298,-2.025021,-2.366275,5.145502,0.043846,4.953765,-5.380445,-0.052541,-2.117509,-3.988729,4.813628,-4.525381,-5.060713,-3.057314,-3.697071,-9.930415,0.782139,-0.807050,6.135908,-6.372324,3.410328,-3.090975,8.078166,2.276639,1.822408,5.879109,3.527936,-7.621500,-3.115052,-3.458581,-7.166521,6.016642,4.049399,-3.422264,-5.215011,3.297961,-1.202886,7.166606,-0.818539,5.272348,7.509944,-1.044975,-8.617401,-3.337533,4.326356,8.096315,2.559230,8.047614,-7.562054,7.152105,-5.682057,-7.266959,-0.128315,-7.133244,3.428142,-9.369115,-1.007248,8.848567,4.496457,4.418057,-4.890444,6.744249,-3.626059,-6.224683,-0.237561,1.179365,0.271277,4.260741,3.022627,-2.807157,6.344735,6.430997,-9.666372,-2.203451,-5.558182,-0.685349,9.005283,-2.686025,9.454338,-4.077997,-8.249009,-3.732513,-6.610748,8.957707,-0.034593,-0.445541,2.024185,0.190607,-6.562176,6.235410,-6.469099,1.598259,1.844297,8.359649,-6.518032,-7.764283,6.286145,-2.896063,-2.589650,7.807865,-6.908477,-1.860953,-2.030722,7.004883,-5.123870,7.848926,-9.514637,-1.655105,8.685321,-3.033042,3.628729,-3.009222,-2.526130,-6.680604,9.300283,3.149770,3.924686,1.710189,4.462122,-6.579533,2.275748,-2.814526,-0.147933,-7.662579,-0.256252,-9.924953,1.947190,-4.191052,5.700418,1.635295,4.273648,-2.339815,-0.502823,-2.820180,-1.623256,6.756473,-3.528051,-1.667310,-0.630344,-6.413924,7.634543,2.672226,-5.578605,-3.866544,-0.307592,-9.280328,-2.779957,5.274139,-6.242234,9.130255,-6.956661,-8.304908,-8.814559,-0.086497,7.017787,-3.048200,7.180678,-1.230642,4.148764,9.823042,-3.774766,0.432960,8.810928,2.092441,-7.766010,-8.757298,-6.479739,-4.199174,1.423203,9.026551,2.430120,-3.139807,8.742157,-0.331710,1.203716,6.921191,0.297604,5.564613,1.414463,-4.032717,2.285906,-6.142037,-1.227486,-6.144759,5.907705,-8.408714,6.021799,2.541882,2.674705,-5.330121,-8.463422,-8.103498,-2.046009,-9.058603,7.926344,-5.437938,4.513949,-2.419461,8.433287,-7.245370,-1.097240,1.484666,3.035916,0.859027,4.233568,9.521113,1.972713,9.672971,0.893353,7.503486,6.393207,4.195020,-0.704437,-8.872619,9.166866,9.308812,7.947196,7.320054,3.142041,-7.181841,-7.922492,-5.661962,9.127550,-6.601543,0.983461,4.623979,0.675358,-3.502954,-9.585194,1.600357,4.051793,-5.516013,1.533277,4.594343,-7.859191,9.477337,0.045358,-5.780255,-5.964931,-2.026281,-6.154996,-4.671495,-1.308346,5.472286,8.382538,-7.275368,4.813571,5.349216,1.091709,-9.258503,-3.607809,-3.759901,3.216617,4.559158,7.113326,-5.589118,6.292579,1.758299,5.698815,2.990832,4.823012,6.790078,-1.349696,-5.096300,8.804686,8.092109,-2.223797,7.559748,-9.808720,0.424713,-6.158247,0.016638,-4.465218,-9.435909,3.783990,-0.443145], dtype = "float64")#candidate|958|(640,)|const|float64
call_957 = relay.TupleGetItem(func_388_call(relay.reshape(const_958.astype('float64'), [8, 16, 5])), 0)
call_959 = relay.TupleGetItem(func_391_call(relay.reshape(const_958.astype('float64'), [8, 16, 5])), 0)
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
call_976 = relay.TupleGetItem(func_388_call(relay.reshape(const_958.astype('float64'), [8, 16, 5])), 0)
call_977 = relay.TupleGetItem(func_391_call(relay.reshape(const_958.astype('float64'), [8, 16, 5])), 0)
output = relay.Tuple([bop_954,call_957,const_958,call_976,])
output2 = relay.Tuple([bop_954,call_959,const_958,call_977,])
func_979 = relay.Function([var_952,var_953,], output)
mod['func_979'] = func_979
mod = relay.transform.InferType()(mod)
mutated_mod['func_979'] = func_979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_979_call = mutated_mod.get_global_var('func_979')
var_981 = relay.var("var_981", dtype = "float32", shape = (7, 11, 8))#candidate|981|(7, 11, 8)|var|float32
var_982 = relay.var("var_982", dtype = "float32", shape = (7, 11, 8))#candidate|982|(7, 11, 8)|var|float32
call_980 = func_979_call(var_981,var_982,)
output = call_980
func_983 = relay.Function([var_981,var_982,], output)
mutated_mod['func_983'] = func_983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1114 = relay.var("var_1114", dtype = "float64", shape = (5, 2, 15))#candidate|1114|(5, 2, 15)|var|float64
const_1115 = relay.const([[[-5.838200,-4.904756,4.291902,-7.084310,-1.890616,-6.350512,-8.330880,3.115188,-4.496006,6.479855,1.895694,6.996370,8.820226,4.142210,5.414346],[-8.726001,2.878896,7.360741,-0.088580,9.750326,-1.510090,6.081044,-3.010317,7.704907,8.240795,8.795862,1.302314,-0.814058,3.051372,7.629378]],[[-7.958726,9.405634,-3.652979,-7.363839,-1.078743,-2.110394,8.658345,4.713274,-9.115117,8.276191,0.789505,3.027811,6.915841,2.319502,6.893202],[9.793874,-8.654607,6.799720,2.448115,5.802990,7.102833,-1.810513,8.170197,7.838866,1.732382,3.411743,6.247007,0.343806,7.337583,-7.896918]],[[-3.358513,-2.441019,-3.529380,2.441043,-8.439019,2.536540,-1.148605,-2.740586,1.487974,-5.020461,-2.178070,4.208414,-9.905771,-2.763855,5.622901],[-8.034968,-0.958051,-3.973324,-4.644930,-1.645497,-8.975666,7.928297,-1.950331,-1.983172,8.355903,-1.815677,-7.239760,3.210692,-6.836088,-0.837869]],[[-3.354697,7.802174,-1.838038,2.482987,-6.313739,6.907497,0.351661,4.938475,-5.492015,5.769283,-6.166225,-5.237243,3.031291,4.270223,3.105502],[7.390290,-1.507415,3.043631,-3.465417,-0.946415,-3.173007,7.998560,-6.064032,3.389922,-7.276410,-7.066059,-7.222518,-3.351300,-0.747875,-4.274591]],[[2.960004,-1.461816,-3.723250,-4.527487,-9.193832,1.099026,-7.476171,4.131441,-6.263221,-4.093123,0.097510,7.032399,3.825187,-3.731447,-3.107197],[9.802599,-4.349957,5.476729,7.734733,-0.980940,-3.545649,6.024535,-2.951068,0.266235,2.620362,-3.655571,-5.544412,6.528581,9.337924,-3.687445]]], dtype = "float64")#candidate|1115|(5, 2, 15)|const|float64
bop_1116 = relay.mod(var_1114.astype('float64'), relay.reshape(const_1115.astype('float64'), relay.shape_of(var_1114))) # shape=(5, 2, 15)
output = bop_1116
output2 = bop_1116
func_1125 = relay.Function([var_1114,], output)
mod['func_1125'] = func_1125
mod = relay.transform.InferType()(mod)
var_1126 = relay.var("var_1126", dtype = "float64", shape = (5, 2, 15))#candidate|1126|(5, 2, 15)|var|float64
output = func_1125(var_1126)
func_1127 = relay.Function([var_1126], output)
mutated_mod['func_1127'] = func_1127
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1181 = relay.const(-7, dtype = "uint64")#candidate|1181|()|const|uint64
var_1182 = relay.var("var_1182", dtype = "uint64", shape = (3, 15, 7))#candidate|1182|(3, 15, 7)|var|uint64
bop_1183 = relay.greater_equal(const_1181.astype('bool'), var_1182.astype('bool')) # shape=(3, 15, 7)
uop_1192 = relay.asin(var_1182.astype('float64')) # shape=(3, 15, 7)
func_365_call = mod.get_global_var('func_365')
func_367_call = mutated_mod.get_global_var('func_367')
const_1200 = relay.const([-4.098336,1.425201,2.726298,7.722026,4.870811,-4.095260,-6.047048,7.454517,-3.049623,3.886670,-5.705205,-2.479087,-7.541796,-4.530479,2.484948,5.598172,1.892411,-0.849523,2.099897,-2.953184,-3.487589,6.066621,-6.413359,-9.128672,7.386810,-3.183665,5.982777,-5.986557,0.715659,7.038028,1.202481,0.566697,1.493506,-7.963058,0.616784,-7.340979,2.599297,6.712547,-6.685337,-4.189170,0.808428,6.451407,9.764510,1.134070,4.437692,8.627502,4.957187,4.067395,-9.458873,7.687712,-1.114116,7.915561,0.827407,6.741354,7.681589,9.829226,1.652224,7.720264,-0.378938,2.265525,-1.405667,6.681325,8.110630,-0.872847,-7.452406,-5.488840,2.343814,-3.520992,-9.841589,4.734485,1.148488,-2.707146,9.003397,5.858538,-2.617861,1.149616,-8.672741,9.484588,-2.374654,4.332164,9.502620,7.279022,-3.462738,-8.216603,-5.090794,-8.134845,-8.693211,-7.813683,-2.692105,-9.836521,-9.173989,9.663000,-5.322572,4.818930,2.903142,6.924079,-9.991761,2.762508,-1.990032,0.925517,8.527428,-3.431084,-9.635027,-2.526108,-7.854353,-5.020144,-6.546357,2.881887,-8.152732,0.374659,-7.608261,-1.192831,-0.034889,7.949604,2.900919,4.435296,-5.192992,1.609917,-3.023387,9.218346,-5.839690,7.520200,-2.363540,3.339900,4.445647,-7.016220,7.758751,-0.430858,-8.578348,-4.708864,-8.333922,5.377667,7.991539,-1.245327,-8.718484,-7.081748,6.842260,7.792354,2.137855,-6.458568,-3.098576,-3.449126,3.387291,8.535368,-5.831579,-1.336199,5.555816,3.172518,-3.092061,-8.790308,1.295438,9.371303,-3.757661,-7.091547,8.055513,9.751301,9.602724,3.739754,-8.582520,1.935826,-3.652527,-8.879996,5.006128,-1.257688,7.567517,-2.143668,8.887365,3.259268,-3.189445,9.107828,-8.758882,9.483170,-4.414276,-5.301284,3.309558,9.599549,1.576814,9.055929,6.789636,-3.129218,-1.918463,-4.010888,-8.224969,-9.656427,7.086787,-1.782261,-0.238049,-2.107901,-9.665826,3.591795,-9.402882,5.489359,-8.723349,-6.122281,-1.483320,-3.689641,0.854749,8.172755,-0.822996,-1.683594,6.966355,6.177646,4.040330,8.627543,9.020508,5.230762,8.139009,2.652165,-0.931257,-2.090772,6.579401,8.800038,4.074317,-7.721181,-7.489520,9.159968,-7.731902,6.841680,-6.470016,4.657794,-3.260949,7.760367,-0.333151,6.474171,-2.983210,0.083091,1.426918,-7.804720,4.555690,-0.173463,-0.555651,-8.893133,8.518324,-5.148177,-9.311037,5.705752,-7.620765,-9.033094,2.436996,1.877107,9.664937,1.770522,-4.388113,7.161552,3.028797,4.351482,-4.377830,-7.560862,-0.539409,1.084230,-1.863288,2.703140,-0.827463,6.967916,4.437263,0.036104,-6.625784,9.577954,7.632114,-7.718593,5.525292,-3.224444,1.009131,3.104949,2.301828,-2.634387,5.135050,-5.432247,-3.387462,4.505112,6.591970,-3.888915,-0.070282,-0.930728,2.309493,-9.803489,-3.036551,-2.540647,9.986322,1.067538,-9.487072,-3.620001,8.978941,7.140238,1.350146,-7.659332,-1.795820,-6.582093,-1.932402,-5.785485,8.426677,-8.181866,0.892891,-5.270020,-3.836562,3.206968,6.993860,-2.784372,-6.200344,-7.543280,0.470286,-3.694934,-8.555294,-7.843271,1.238192,-8.187156,2.780257,7.796843,0.156606,8.594878,2.619985,-5.416654,-9.307582,-8.004948,2.213449,-3.209020,6.984413,-5.103072,1.677320,-6.085536,4.518094,-5.493993,-8.389588,6.884761,2.550647,8.524602,1.041507,4.469416,3.584945,-3.521222,2.818659,4.288068,-2.548154,-9.708252,-2.580815,-5.754352,7.669322,-9.146738,-1.596469,1.170511,-0.616616,4.195812,-9.355611,6.708466,-2.115577,-7.724975,2.614337,-4.248599,4.952428,7.617311,9.407503,9.876752,-0.538940,-1.351120,5.809335,-7.165468,6.131586,8.964982,5.497282,2.337543,6.034262,5.206318,1.287396,-2.904182,-1.620642,-9.859970,0.710836,-9.986942,3.511157,6.857459,-6.665048,-1.218134,6.184961,8.997452,-8.674101,-5.082564,1.216693,-8.355416,4.297324,8.246821,2.999087,5.147358,-2.979658,-3.884975,1.518809,-0.793612,-8.936156,5.982507,4.554996,-9.459977,8.370968,6.499686,-1.777686,0.775971,-7.311496,5.768699,-9.104139,-5.731328,-2.141532,-9.237059,-8.284341,0.856855,6.602208,-9.816557,2.442858,-3.386377,4.353724,1.878394,-8.657421,4.131854,-6.616211,-1.307723,-9.915059,0.229723,9.461669,-2.397450,-3.680372,-8.137747,-8.814811,-5.446570,5.905229,-2.753194,-8.978746,-8.804735,-4.796994,9.481332,-4.525203,4.611493,5.538959,2.398876,-7.254667,-1.553081,0.145440,-2.243878,-0.168953,-5.266999,1.336039,-6.715748,-2.776277,-0.346997,8.994860,0.964435,5.471054,-5.124028,2.800626,-0.500891,8.559158,2.047605,1.262443,-4.053036,-9.329848,-3.120806,3.322189,-6.496112,5.086593,-8.502037,-0.289978,6.949451,-7.341211,-5.396706,1.766893,7.674608,-3.561299,-5.937861,-7.321044,4.801799,0.959257,-6.444880,-8.096461,-4.862262,-7.540059,-3.443298,6.549782,-1.921447,9.857976,4.664550,9.995486,4.176798,0.166687,-0.950529], dtype = "float32")#candidate|1200|(480,)|const|float32
call_1199 = relay.TupleGetItem(func_365_call(relay.reshape(const_1200.astype('float32'), [8, 12, 5])), 1)
call_1201 = relay.TupleGetItem(func_367_call(relay.reshape(const_1200.astype('float32'), [8, 12, 5])), 1)
uop_1202 = relay.sinh(uop_1192.astype('float64')) # shape=(3, 15, 7)
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
var_1207 = relay.var("var_1207", dtype = "float64", shape = (2, 320))#candidate|1207|(2, 320)|var|float64
call_1206 = relay.TupleGetItem(func_388_call(relay.reshape(var_1207.astype('float64'), [8, 16, 5])), 0)
call_1208 = relay.TupleGetItem(func_391_call(relay.reshape(var_1207.astype('float64'), [8, 16, 5])), 0)
var_1209 = relay.var("var_1209", dtype = "float64", shape = (3, 15, 7))#candidate|1209|(3, 15, 7)|var|float64
bop_1210 = relay.right_shift(uop_1202.astype('int16'), relay.reshape(var_1209.astype('int16'), relay.shape_of(uop_1202))) # shape=(3, 15, 7)
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
call_1214 = relay.TupleGetItem(func_388_call(relay.reshape(call_1206.astype('float64'), [8, 16, 5])), 0)
call_1215 = relay.TupleGetItem(func_391_call(relay.reshape(call_1206.astype('float64'), [8, 16, 5])), 0)
var_1219 = relay.var("var_1219", dtype = "float64", shape = (3, 15, 7))#candidate|1219|(3, 15, 7)|var|float64
bop_1220 = relay.power(uop_1192.astype('float32'), relay.reshape(var_1219.astype('float32'), relay.shape_of(uop_1192))) # shape=(3, 15, 7)
bop_1223 = relay.bitwise_or(bop_1210.astype('int8'), relay.reshape(uop_1192.astype('int8'), relay.shape_of(bop_1210))) # shape=(3, 15, 7)
output = relay.Tuple([bop_1183,call_1199,const_1200,call_1206,var_1207,call_1214,bop_1220,bop_1223,])
output2 = relay.Tuple([bop_1183,call_1201,const_1200,call_1208,var_1207,call_1215,bop_1220,bop_1223,])
func_1232 = relay.Function([var_1182,var_1207,var_1209,var_1219,], output)
mod['func_1232'] = func_1232
mod = relay.transform.InferType()(mod)
var_1233 = relay.var("var_1233", dtype = "uint64", shape = (3, 15, 7))#candidate|1233|(3, 15, 7)|var|uint64
var_1234 = relay.var("var_1234", dtype = "float64", shape = (2, 320))#candidate|1234|(2, 320)|var|float64
var_1235 = relay.var("var_1235", dtype = "float64", shape = (3, 15, 7))#candidate|1235|(3, 15, 7)|var|float64
var_1236 = relay.var("var_1236", dtype = "float64", shape = (3, 15, 7))#candidate|1236|(3, 15, 7)|var|float64
output = func_1232(var_1233,var_1234,var_1235,var_1236,)
func_1237 = relay.Function([var_1233,var_1234,var_1235,var_1236,], output)
mutated_mod['func_1237'] = func_1237
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1778 = relay.const([[[0.903270,-3.309623,-3.715584,-5.841598,4.136026,-6.676276,7.035320,-9.039975],[2.946341,-1.396330,5.415802,5.116273,8.914062,-4.750546,-1.281328,-0.837942],[-3.494796,-3.993810,-1.675510,-1.029525,1.310027,-4.690740,-4.100124,4.897032],[6.415261,-7.274661,-4.579153,6.865731,5.268474,7.820240,3.507159,6.713561],[0.447315,-4.093532,6.513124,3.500502,8.739604,1.577022,-3.702980,9.267385],[-5.132376,-0.162196,7.842655,-0.736818,3.462419,-1.214256,-9.751791,-4.922999],[-6.585733,9.709081,1.127449,-2.334001,5.140108,7.700217,-0.144133,3.725506],[-0.354853,4.945349,5.383938,-8.885876,-0.125557,2.334579,1.957269,-9.920187],[-3.092465,5.544093,-9.528172,-6.529019,6.914604,6.668312,-6.196876,6.053601],[-0.962633,-7.752679,-6.193156,-7.814228,1.094282,6.712078,5.069410,-5.898753]],[[-7.742353,-7.087175,0.250427,-2.329605,-1.551415,-4.129265,-8.569806,6.843550],[8.105404,-4.626785,-8.712590,-6.531800,-4.569966,-2.161247,0.852952,3.580756],[-8.929033,-9.681987,-0.284557,9.481961,-2.153246,1.269706,7.250270,8.752859],[-1.244071,-8.629879,-6.754354,-7.140076,5.488152,-4.307060,-2.442986,-3.982137],[6.279344,-4.525784,3.996045,-0.237736,-9.626153,-3.458559,-8.862119,-6.183785],[0.471125,-9.699369,2.211728,-6.610246,0.326109,4.401268,-3.797144,6.462367],[-8.556712,2.469884,4.736141,0.559840,8.944531,7.516364,5.263637,-0.464254],[-0.299573,-9.419451,8.783084,-6.535444,2.498906,-6.144048,0.391806,-1.041477],[-6.204246,6.381235,9.046593,6.366646,-4.163750,4.552403,-0.590331,-1.824351],[-9.017509,-4.039028,6.472243,-8.162315,-3.444894,-5.641159,-1.405416,1.198410]],[[-0.931620,-9.867715,9.857676,-0.889777,-0.198955,7.882595,6.542208,-6.352166],[-7.765305,-9.870445,5.360511,-3.155328,0.398787,-6.756948,0.766599,-6.078560],[-0.388016,-4.322324,-9.651411,-4.077965,-6.939858,9.256746,5.706313,9.745858],[-5.520221,-6.970607,-3.792062,6.368463,9.075826,-0.124446,0.268531,7.595013],[2.298157,6.444336,-3.604927,1.063732,1.450728,4.576745,-7.820258,-6.375520],[-4.217113,-1.736426,-7.051258,-8.871571,4.555456,-8.291577,-2.558784,7.943513],[1.058387,8.059042,-4.775199,-5.527921,-4.146352,-4.928494,-5.123773,0.923904],[4.596856,-7.593138,-0.523744,-7.438580,5.798878,-8.903363,-5.662471,0.528787],[7.756879,0.669711,7.306427,6.440629,0.077958,-2.254418,7.303572,-4.454969],[-4.286841,-7.715426,-5.558039,-7.826133,8.455233,4.443199,-5.542856,-3.882195]],[[0.782059,4.683280,6.055376,-9.879421,4.517491,4.178093,3.122557,0.442178],[-1.275683,-5.864408,-5.018070,-1.048091,1.934972,8.605502,-7.031986,7.145595],[-2.444351,8.732519,-5.557945,-0.687481,-9.899514,-6.358216,-9.736059,8.125620],[2.102771,6.980500,6.727058,5.856876,9.755676,-1.956475,-4.735327,9.122063],[0.649382,6.322547,5.732171,0.039244,9.695220,3.374434,4.403304,-5.176638],[-2.969092,8.668864,9.258950,-6.741099,6.096578,-8.822299,7.529706,-0.467250],[-9.798148,-9.516318,-9.896316,-3.521252,1.573980,1.000703,-6.788922,5.882013],[6.692312,-9.276779,1.141718,5.937692,-9.804770,9.337365,9.469026,-3.187081],[0.773617,2.940091,-2.035543,3.131657,5.651740,-0.326782,-2.117845,-7.870056],[-7.189260,-4.043511,-2.431475,8.467552,6.996940,-1.876613,-4.962573,0.997542]],[[7.123253,7.779259,-1.235423,6.853386,5.319905,6.308985,4.797475,7.107103],[1.939635,4.605002,6.449210,-1.434034,6.214122,-2.191127,7.899016,4.966771],[-2.116347,-2.895791,4.657694,0.258082,7.331967,-6.302039,-6.337608,3.280188],[0.891139,7.539641,5.341022,-4.651455,-9.756336,-1.533594,-6.122244,-5.561054],[6.547494,2.340637,-9.038942,4.682820,3.108916,-2.353592,-2.689361,3.989156],[4.201322,-2.032899,-6.023826,4.872885,0.208282,-5.105941,-3.970028,7.391874],[2.833930,-6.324459,9.097731,-3.057471,-2.333843,-0.567075,-3.451798,-3.427450],[5.497430,-9.500757,2.389985,-9.492928,7.544598,-1.833625,-9.008440,7.128038],[-9.295494,7.023557,-4.129597,5.434638,6.089772,9.058383,3.511173,4.679599],[-9.178823,9.200053,7.491273,6.077153,-1.973602,-0.353114,7.597343,7.995649]]], dtype = "float32")#candidate|1778|(5, 10, 8)|const|float32
var_1779 = relay.var("var_1779", dtype = "float32", shape = (5, 10, 8))#candidate|1779|(5, 10, 8)|var|float32
bop_1780 = relay.floor_mod(const_1778.astype('float32'), relay.reshape(var_1779.astype('float32'), relay.shape_of(const_1778))) # shape=(5, 10, 8)
output = bop_1780
output2 = bop_1780
func_1804 = relay.Function([var_1779,], output)
mod['func_1804'] = func_1804
mod = relay.transform.InferType()(mod)
var_1805 = relay.var("var_1805", dtype = "float32", shape = (5, 10, 8))#candidate|1805|(5, 10, 8)|var|float32
output = func_1804(var_1805)
func_1806 = relay.Function([var_1805], output)
mutated_mod['func_1806'] = func_1806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1808 = relay.var("var_1808", dtype = "float64", shape = (10, 14, 10))#candidate|1808|(10, 14, 10)|var|float64
const_1809 = relay.const([[[-3.827180,9.656223,1.493604,-2.880460,-1.069988,-9.119281,1.560864,-9.886317,0.743536,-6.273578],[1.424744,-4.745973,1.641512,1.045943,-8.010822,-2.964918,-4.987664,-6.172585,1.932555,2.004150],[8.717288,1.264234,-5.718666,9.332587,6.928549,5.690817,-7.657779,8.641245,7.161045,-1.247461],[4.798891,-5.915262,-3.502373,8.606265,-7.459816,1.683888,-5.747117,-0.775723,-4.860925,-7.894138],[5.971874,8.289593,-5.308415,4.434913,7.295935,9.055675,-9.588862,2.816033,-5.242273,-1.729275],[4.152400,2.527621,7.964417,-6.934691,2.534088,0.838310,0.258535,0.106149,4.388829,7.713208],[-8.548104,8.654362,-1.501126,0.750689,8.718745,5.542669,-3.064298,-8.202887,-5.377227,6.505667],[-6.255491,-8.077434,1.726977,7.918900,-5.939309,-3.656318,1.698388,-0.375480,-0.275195,-2.376882],[7.327239,-1.679620,-9.997947,6.199328,1.262092,8.933849,-7.608377,1.611516,8.887710,-6.657575],[0.155448,-9.562278,1.996774,0.683158,-2.654742,7.986230,9.864477,1.203117,5.384996,2.783256],[-5.114409,-8.441677,-1.599928,-2.801448,-5.955298,-2.974927,7.190869,-6.518337,0.696560,-8.505420],[8.487216,4.846946,4.077839,1.436513,-2.309661,-0.010532,5.337627,0.063790,-4.208144,6.071113],[-5.178045,5.856427,-2.842262,-5.134132,2.636329,5.968886,9.159015,5.488794,-3.521489,6.405532],[8.151754,4.169395,-7.474317,9.039599,-9.904397,9.797211,-2.165863,9.120234,-9.554936,-2.730819]],[[-9.629062,-7.547738,-4.500682,7.808503,-7.893459,8.510248,-7.555831,-3.471540,8.793390,7.084875],[-9.342668,2.620970,8.181816,2.456075,-9.100709,0.270925,-0.363432,-8.670999,-9.690420,9.370077],[-3.334909,-0.805760,3.439596,4.918427,-4.540047,-6.620790,3.735611,2.139364,-5.126309,-4.608711],[-4.702118,-2.953803,-6.674434,-6.237838,-9.319356,3.936899,-9.827596,4.791618,5.706440,3.282133],[8.195749,-3.397556,5.904668,-1.656231,9.529747,-0.208898,-5.189364,-1.414651,-4.280962,1.455782],[-6.164804,0.532105,4.427191,-5.237817,-3.729575,-6.059021,9.856919,-8.602964,4.587691,8.510491],[-8.340332,-1.479593,-6.399463,3.751263,6.038552,9.170961,2.673282,6.431776,8.995207,2.099464],[9.752214,8.507922,4.970169,0.453240,-3.733890,3.324157,-6.909815,-6.480033,-8.270531,1.656928],[-1.698964,9.990456,-7.359558,-9.789861,-4.596532,7.231066,-3.558565,-8.213414,-4.025996,-6.671437],[-5.217962,0.208155,3.612434,9.837679,4.199156,-3.838980,6.887592,-1.039408,-5.192116,8.900487],[-6.245525,-1.951099,-2.171536,-4.397794,-9.400178,0.814834,-6.616322,4.650746,-7.249365,4.152247],[-1.896423,-9.930418,3.881136,5.084176,6.953024,-3.792284,9.784082,-5.068187,-8.870549,-4.599096],[1.781810,7.934928,7.111426,-8.706000,-6.885364,2.649583,5.696913,-5.376418,-9.539486,-7.112782],[3.019916,-0.283182,5.652898,-5.633203,8.280530,-9.855142,-4.078495,8.061320,-0.195615,-2.932150]],[[6.477374,7.331096,7.360992,-1.157297,9.393944,2.705541,5.836619,1.042151,2.052055,-3.214859],[1.461835,0.263617,7.138963,6.358512,-2.843019,-8.399083,4.559021,-8.981072,4.259248,6.890578],[5.367828,4.487892,-9.280420,0.623415,-9.404807,-7.320074,-1.471437,-0.779578,-6.065850,-4.057195],[7.875321,0.777091,-8.504337,4.400053,-4.142638,9.187440,5.733415,-0.847262,2.988790,9.692533],[-4.664938,8.041085,-0.735935,-3.292000,4.051150,0.713785,1.545706,-5.009927,1.754698,8.718434],[-2.643797,0.105587,-7.612357,1.932197,-6.290647,0.286202,-4.411103,5.923167,-5.443065,-4.740312],[-2.528360,-2.376796,-8.401693,-5.136400,-9.484631,7.919593,-8.531590,2.693754,-2.707634,-0.981087],[3.355527,9.120950,6.686259,-1.787106,-2.030978,4.576323,5.518622,-7.914936,-6.517399,6.287315],[0.333235,9.215350,8.914435,-6.931616,1.946578,-0.322783,-2.659774,3.015452,0.542487,-6.310524],[-2.416194,-8.945826,8.798029,1.470596,2.274397,4.524977,6.725829,-8.702474,1.656755,-7.857031],[-0.830974,3.880733,6.056212,-4.061820,8.740435,-4.379342,-8.007246,7.862133,-8.725239,-6.465093],[2.011992,-4.698448,-5.001239,2.189947,7.999895,1.591528,7.789768,-2.347296,6.676695,8.497027],[5.485664,-1.059986,-5.293418,-6.193518,-7.664739,7.905714,-0.948118,-4.062732,-0.628545,-5.705183],[9.145105,3.781145,-1.559923,0.899342,-4.935276,-9.145743,1.583968,-3.440050,-4.207637,-2.672146]],[[9.023401,-4.688006,8.620469,-2.145203,4.624704,8.306835,-3.788260,2.448568,-1.061202,-9.997721],[6.912944,8.555187,4.297410,-1.526803,-0.076118,-1.843230,-4.757549,6.077302,8.069418,-4.193702],[-3.799780,-3.507367,-1.192062,5.738425,-5.673425,-9.946053,0.831067,-7.333166,5.081150,-3.921692],[2.112757,2.540822,-9.605498,8.363800,-5.558327,-1.802942,0.685517,-2.610073,-6.151832,0.953256],[6.140805,-4.838769,7.298288,-7.877148,2.777609,-7.832795,7.949446,9.862099,-1.092191,-0.069420],[-8.688680,7.651599,8.078633,3.121891,5.443266,-1.331883,-9.628035,7.320996,-3.267582,-8.319811],[3.567307,-4.365878,-4.774101,-3.901087,2.164339,-8.876946,7.784501,6.588039,2.418691,-7.231823],[8.306497,6.505480,7.634354,8.987051,-6.425461,1.943316,-0.918929,2.896974,9.348949,4.610724],[-0.258311,-8.556473,8.466147,-3.410596,9.652272,-5.265967,8.304027,-8.690949,-9.238128,-3.228508],[-0.686054,-7.169245,-4.816956,8.572116,4.124486,-6.901199,-0.640118,3.259041,-5.130871,-7.083375],[-1.078037,0.998935,4.054967,-2.000225,2.405375,-2.523081,3.203905,1.372408,-4.946094,6.086333],[4.121043,2.582591,0.896324,-8.210725,-7.425783,8.695171,7.854106,4.160700,-3.353226,-7.882133],[-8.363248,8.753219,-9.570025,9.464895,-1.193020,-1.447076,-3.425107,9.642017,0.149586,-3.568017],[2.803193,-0.702034,-9.977654,0.107177,-0.487211,-4.246502,-6.609255,-4.446506,-8.045464,-1.229103]],[[-1.124275,1.698862,-4.522050,-3.319588,-4.259509,-8.471474,-1.806924,-2.677565,-3.779169,-7.064094],[4.402105,0.815586,-0.847714,-1.682040,-1.336967,3.911985,-8.495517,5.543554,-3.420977,-9.495621],[-3.478213,-4.367266,5.358511,1.713823,-1.808272,-8.903742,7.581060,9.525684,8.930656,-3.525852],[-7.198672,7.743606,-9.768143,-9.811015,-1.072840,5.889087,6.577313,-7.516669,-1.683351,-9.382668],[1.213500,7.118772,-7.878828,-0.390079,-8.733938,9.015912,6.734390,8.626402,-3.752868,-9.534775],[-1.577536,7.539496,5.448903,2.978981,-2.750655,-9.033861,-5.839081,-7.178993,-2.470120,3.940366],[2.687927,-4.738771,6.468349,0.794255,3.196286,-0.478665,4.622010,5.282921,7.372869,3.115579],[-6.770387,9.694920,6.596751,9.005147,6.305772,-3.281305,-6.630958,6.674249,9.462555,4.899986],[-8.216125,-7.775879,4.000342,-5.578010,-2.925637,-6.332740,0.083884,-6.767725,1.256707,-0.342899],[-3.629576,-6.942652,9.628255,-0.654141,-1.377073,2.302002,0.612762,-1.468177,1.201909,-2.610009],[-7.268755,-2.874988,-0.723519,-4.566103,5.662955,-5.768024,-1.279427,-4.642858,-7.693232,-2.555901],[-3.193723,4.008019,5.893695,-9.918076,-4.040963,7.133865,-9.729971,-5.759840,-5.601974,-8.747877],[-8.342031,5.471789,8.960499,-2.471416,-9.570722,-3.999955,7.163279,-7.127189,-9.842051,0.017864],[1.098481,7.651561,4.541711,3.594479,8.450196,6.640426,-1.038555,-7.747735,-8.427395,-5.710443]],[[3.541327,0.429406,-7.078639,2.631595,-8.657200,-8.443151,8.384286,6.057612,2.082422,-0.370031],[2.196769,-2.365676,-6.124567,2.973166,-6.411577,1.293514,4.807844,-8.894889,1.538818,-1.694956],[-8.622457,5.762114,-6.404545,-3.914764,8.912002,-7.761872,-0.417787,1.218438,8.960741,5.555880],[-3.615567,6.896905,3.359587,2.947579,-3.412687,0.086448,-9.704223,-1.367625,6.007732,0.287771],[-1.432095,4.779891,-1.228527,0.523615,-8.066284,1.756824,-4.229496,-5.644907,-5.069005,-2.002591],[0.755052,-6.719783,-3.364838,-1.365884,9.958833,0.203505,-3.236686,8.384665,1.215151,-4.282917],[1.518548,-7.573724,0.034071,-3.998300,-8.338662,-2.293754,-6.628914,-6.972532,4.370298,-7.262123],[-0.385507,-3.034647,4.879414,4.084369,1.190690,-7.571537,-6.720758,-0.322773,8.536443,6.881415],[7.908622,5.975956,-3.637258,-4.588343,-0.770080,5.913937,-4.388855,9.426743,7.918664,-7.250708],[5.606783,5.108358,8.530463,0.671095,-5.573407,6.619645,-3.034726,1.599094,-4.675098,-1.069688],[8.356414,3.261395,-8.464012,6.524643,0.803936,-9.920518,-2.289519,-0.890489,6.738852,-5.734358],[8.308808,8.646948,-2.535664,-7.687678,-7.766308,9.263832,-6.308487,-3.434881,-2.959847,-7.810052],[5.139594,-2.351468,3.096236,-0.547530,-4.985248,-2.576950,-0.499941,8.262826,6.805912,9.865953],[-6.409129,6.992068,4.284744,3.157875,9.637989,5.232909,-6.620018,-7.148711,9.065347,-1.604850]],[[4.958836,8.424101,-3.910082,-4.042487,-1.274090,-6.048253,-4.610179,-2.407409,2.573040,1.638401],[9.890012,0.832613,-8.398934,6.884977,-0.965353,9.916912,5.782438,0.208694,5.187090,9.350807],[4.818390,1.971592,4.102583,9.781226,2.382464,0.933899,-7.271812,9.159837,-6.213477,-3.337362],[-4.903992,-6.964372,-6.373035,-9.193595,6.292038,3.700167,1.000312,-1.735264,-0.519530,9.223103],[4.508377,5.748248,4.676989,-7.505060,2.074575,2.291203,8.350735,4.005562,8.861488,9.987944],[0.988578,-7.553660,6.174076,5.404038,-0.849156,-2.289882,4.043484,2.053599,-4.571401,-6.106080],[-8.103720,4.650503,8.414231,2.595813,-7.279453,9.064170,-7.423994,-3.759390,3.257182,4.661407],[-6.362607,7.654876,6.050909,6.731293,-6.278040,-9.250262,0.106929,-9.865400,-9.572299,4.858146],[1.506205,7.564952,-2.163216,5.901869,8.225099,-4.977150,-2.955788,-9.506603,-1.570168,8.986220],[3.126954,-8.888021,-1.868958,-1.923487,-4.178967,7.660636,-0.241459,6.617363,8.744381,-1.668443],[-1.703526,-4.469602,-3.252972,-9.685495,-2.928313,-4.931970,9.213327,-7.190161,0.418668,6.658367],[9.786028,3.899724,2.116781,-5.613296,-4.172089,7.611059,7.291055,8.460745,-7.102633,8.371053],[-2.129955,4.851575,-9.772189,0.548127,-3.785453,9.617349,6.545322,9.979883,-7.925833,7.654986],[2.935898,8.931171,3.226038,-4.847589,-4.770378,-6.088959,3.310630,3.982997,-5.570795,-9.454363]],[[1.363844,-4.892594,-8.691839,5.404819,4.389847,0.750078,0.636248,-3.604540,-6.795007,1.126902],[-3.184051,4.258506,6.284761,9.650537,5.681142,-6.563085,6.661188,2.670120,-8.396251,-5.120829],[-2.011113,-2.238243,-0.992430,-5.746440,-7.097356,-1.195278,9.505914,-8.027936,-4.735526,-5.956938],[5.239871,-1.365439,6.846199,5.803146,-5.081099,-1.192366,0.297860,-2.494778,5.675771,-8.432835],[-7.804770,-9.758487,-5.986521,-6.879071,-9.153950,-5.271319,1.765828,-7.589514,1.268195,5.943465],[-9.663643,-1.393378,-0.978182,1.394618,2.809554,1.237394,-4.680481,7.167810,4.011515,1.286216],[7.946755,8.291241,-9.283037,3.553781,1.026879,5.835786,-3.144704,-8.404871,2.716251,-4.527846],[4.567789,-5.371601,9.747439,6.150248,-1.090711,-6.776415,-7.698441,-4.362423,-1.685078,-7.406028],[-1.869805,6.351024,9.260655,-2.783965,8.254579,1.788263,-2.675898,6.567592,-4.398071,-9.300751],[4.719184,-2.568942,4.617170,1.851377,-7.278198,6.726791,1.183765,-2.223745,-9.357311,7.855766],[0.003976,4.472800,8.783419,-4.447312,4.830657,-3.244678,5.452238,-8.542948,8.324688,-2.263082],[-9.251007,6.198390,-5.868263,-0.880877,-2.180613,6.140505,3.593063,2.495131,5.007420,-9.083700],[8.493807,3.361233,5.564806,1.631565,9.290938,-3.315401,0.040423,-8.398451,1.593654,3.572023],[-2.862936,-0.904622,9.445771,-2.283084,9.211809,9.552958,8.117509,5.562888,-0.277082,-9.282639]],[[2.497534,9.752135,-9.101200,-9.715162,9.354309,2.988415,-5.262945,0.612293,9.927584,-0.358759],[-8.096993,3.999915,6.109244,-5.020703,2.049113,6.489556,4.928693,-8.597902,-7.145843,-5.852132],[-9.354453,-7.496732,9.121167,-8.426712,9.078075,5.915002,-0.402290,-7.950776,5.350076,6.569866],[7.354748,5.367509,-1.708427,-5.314055,6.965903,-7.129732,-4.268238,-0.184529,-1.392197,-6.427207],[-7.253347,1.138462,3.030596,-6.106903,-5.750403,9.455488,-6.051222,-6.175560,-5.331230,-7.938618],[0.760390,9.392908,1.985518,2.009623,-1.915358,5.900777,5.184712,5.896282,-1.678058,-7.808292],[-2.520875,-3.373152,-7.734706,3.472127,4.052516,-5.753055,-6.520494,-4.089144,-9.549600,7.137119],[-2.888642,3.511099,0.046247,-9.559268,-1.836646,-3.810790,-6.330102,6.293965,5.398895,-4.528817],[-0.484172,-2.465115,-7.285920,-8.761854,-1.264740,-5.596176,7.407352,8.757926,-3.865353,-2.177595],[-0.509508,9.403370,-3.904354,2.387331,2.652648,-2.471613,7.299738,-0.178284,-9.991367,-1.393532],[-2.731673,3.083927,-9.207226,-3.417545,-6.108755,5.991567,5.424943,5.589687,3.071110,-6.115678],[-3.007194,9.335014,9.629501,-7.071596,-3.042890,-2.401583,0.235698,-6.406298,-4.252847,-2.583430],[-7.849788,4.326048,6.239692,9.659924,-5.361319,4.496343,-5.766334,-8.948139,5.277159,5.046530],[4.012286,-1.373813,6.364734,-2.916148,-0.492162,-5.056865,-6.544596,-8.751902,3.669073,-1.980596]],[[5.769374,-7.252584,-7.543301,7.447842,9.114961,-0.703312,0.300322,5.985221,6.703942,-4.760639],[8.948015,-1.922626,8.110904,4.314849,-5.271308,-3.360081,2.284898,-9.734890,5.953793,7.902269],[-1.379763,4.285448,3.003034,8.583735,-2.768489,-5.488172,-9.560288,8.621272,2.931854,-4.655933],[-3.112728,-9.818353,-7.950633,-5.025957,-4.686352,-8.344521,4.701797,-8.587061,9.548329,7.903559],[-9.374557,5.930597,2.416813,-1.023553,3.553202,-4.725550,6.986253,0.476351,5.884206,7.620333],[-2.098120,4.333708,5.371386,-9.327817,7.871517,-7.885648,8.994914,-9.878024,-5.434532,0.277779],[-0.531324,0.245449,-2.432469,1.860614,-6.823625,-8.657193,-8.100746,-5.587988,7.274829,-6.672512],[2.622388,-6.975738,-0.972451,4.573157,4.681709,-0.607423,-0.778935,2.769700,9.583785,0.820757],[4.056586,-1.714944,9.046863,0.019113,3.432326,5.624853,-0.995908,3.250389,-5.018877,4.473855],[6.885009,8.431393,-8.861037,0.041025,8.542813,1.012107,-8.896592,8.518126,8.354703,-8.939800],[-6.428817,4.234385,-3.079991,-8.584110,1.754643,-7.495857,8.097313,-9.919399,3.318730,8.830422],[-1.754261,3.036386,-5.580806,-3.494177,-4.963707,-0.371063,-5.842603,7.954414,-7.308648,-8.682780],[-2.281482,6.385875,-4.402613,3.646610,4.547522,6.754135,6.956203,-7.384908,0.858597,6.650740],[5.194464,-5.901848,7.637937,-6.718777,1.900754,0.048579,-7.015657,-2.622105,9.536233,-1.919177]]], dtype = "float64")#candidate|1809|(10, 14, 10)|const|float64
bop_1810 = relay.minimum(var_1808.astype('float64'), relay.reshape(const_1809.astype('float64'), relay.shape_of(var_1808))) # shape=(10, 14, 10)
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
const_1826 = relay.const([[-4.735404,0.137464,-5.145408,8.385184,3.670962,-9.186719,3.103558,8.365848],[-2.461681,-5.266119,-0.263179,-7.547550,3.852770,7.348525,5.014822,6.611828]], dtype = "float32")#candidate|1826|(2, 8)|const|float32
call_1825 = relay.TupleGetItem(func_653_call(relay.reshape(const_1826.astype('float32'), [1, 8, 2])), 0)
call_1827 = relay.TupleGetItem(func_655_call(relay.reshape(const_1826.astype('float32'), [1, 8, 2])), 0)
output = relay.Tuple([bop_1810,call_1825,const_1826,])
output2 = relay.Tuple([bop_1810,call_1827,const_1826,])
func_1828 = relay.Function([var_1808,], output)
mod['func_1828'] = func_1828
mod = relay.transform.InferType()(mod)
mutated_mod['func_1828'] = func_1828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1829 = relay.var("var_1829", dtype = "float64", shape = (10, 14, 10))#candidate|1829|(10, 14, 10)|var|float64
func_1828_call = mutated_mod.get_global_var('func_1828')
call_1830 = func_1828_call(var_1829)
output = call_1830
func_1831 = relay.Function([var_1829], output)
mutated_mod['func_1831'] = func_1831
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1840 = relay.const([[[0.059141,4.874923,-3.168412,6.218223,5.332621,7.634845,-4.599464,1.197095,3.006014,-0.940914,-2.980264,4.089006,3.607866,-5.899270,-2.689449],[4.274689,-3.495855,0.580004,-8.710668,-2.234583,0.691594,-0.360122,6.065914,-0.504823,3.721710,0.646623,3.084920,-2.950869,0.177661,6.601600],[-0.108940,-8.633879,-9.574608,4.875163,-7.606533,-9.274344,-4.197612,0.280451,-1.255119,-8.142873,-4.055801,-6.290847,0.025326,-8.236940,3.344916],[-6.354132,-2.996458,-8.337886,-4.156190,7.178532,-1.477961,-6.855798,2.610393,-6.846506,-7.979926,4.883656,-0.686060,-3.411614,-6.031003,0.018873],[1.866799,-4.163219,-4.579504,-9.128703,-9.668590,0.781305,0.717885,7.976265,5.199945,-8.639564,5.680601,9.291228,4.499284,5.721384,-8.875498],[4.564027,-6.986676,-1.834489,1.523625,-1.770852,-5.334457,-4.322723,5.826838,-3.747914,1.900113,-6.242392,0.303602,-4.305251,-3.862290,-6.045870],[-3.052490,-6.429738,0.370147,3.263221,8.719735,5.047112,0.970502,6.856853,5.832067,-5.156140,-2.436507,6.774972,-1.446617,5.065997,3.284425],[6.091178,9.006890,2.793680,-7.802875,9.044562,-9.669941,-8.010142,-7.138578,-3.857623,2.661880,-0.857492,-4.477752,9.983288,-5.680335,5.190168],[4.360277,0.217537,-4.339531,0.043302,-5.291897,-9.919107,3.845824,-0.362665,-4.318589,-7.404222,0.548491,0.957625,-6.831451,-6.545082,1.673946]],[[0.941197,7.831117,-2.804586,8.967375,-6.203956,-1.998830,-6.091974,1.659324,-4.761788,8.481770,-6.887857,0.670183,-0.982928,-3.459456,-2.139751],[-8.422895,-4.461728,1.560590,1.614059,5.989712,-8.803752,-2.415253,6.751484,9.246735,3.246565,-4.501184,-5.688395,-7.568096,-8.236469,1.181550],[-6.272138,-3.381348,9.750331,8.589868,-6.330361,8.719208,5.816339,8.399309,9.161828,-1.195041,7.737157,-6.796546,-3.252336,6.110013,-9.382399],[-7.363948,-1.937771,5.633476,-8.803474,4.674968,9.797988,6.211644,-4.203259,-4.494340,4.251858,3.778408,6.698332,-1.023684,-0.861365,-1.468913],[8.970361,8.975930,7.976811,5.813790,-9.057313,-6.848561,5.050669,-5.151595,-4.213684,-4.496561,4.250429,5.354467,5.657750,-2.085202,7.716102],[-8.485607,6.443694,-3.171981,6.636446,-1.272728,-0.819813,0.040629,-6.732643,-2.479408,-6.838300,9.969128,-8.159846,1.361208,-0.464716,0.455642],[-4.159738,-2.848014,8.468925,3.713239,9.215766,-6.120584,-6.118027,0.163236,0.146340,-0.153119,-4.251487,2.115035,-7.547206,6.089433,3.271605],[-1.075686,-2.047157,7.633799,1.456139,-3.993542,8.268188,7.880084,1.008510,-2.100551,-8.461316,-1.209010,-9.950409,4.218148,-8.851494,-2.561754],[7.260106,-0.065607,8.283197,7.974829,-1.326212,9.320150,5.112532,6.698193,-2.246472,8.380507,-4.164037,8.100073,-9.733637,6.174016,8.978461]],[[-8.482396,-8.583565,2.382229,-3.142255,9.063383,-0.144113,-6.476184,1.655001,-8.321717,-6.662888,-9.718135,-3.637722,5.959313,-6.935707,4.780987],[-2.670773,-7.462711,-1.582175,8.207714,-9.626255,4.103554,4.030763,-3.201783,-9.698910,-1.997200,6.922206,4.918919,6.891346,-0.558130,-0.353344],[0.527347,6.386785,8.070621,1.516814,-1.011572,5.251095,3.902370,-8.811644,6.197696,-1.167283,5.838959,-8.600196,4.644318,7.887211,1.687420],[-1.896371,1.019549,-3.458578,8.942021,7.496828,-2.284234,-4.154766,5.309195,0.294592,1.358756,5.199302,8.852345,3.169576,5.077815,-3.250817],[-8.587527,6.180362,-3.521221,5.395697,-3.338094,-1.115277,5.160253,-6.391846,3.624470,-3.973294,6.363273,9.018920,5.469405,-9.470053,6.653601],[-2.340535,2.831872,4.438971,3.739911,9.381205,8.156181,-6.046382,-1.045770,-5.716361,1.208548,-8.102468,-6.269461,6.091626,5.360118,-7.981272],[4.216822,-7.628784,-8.038573,-9.848550,-7.943951,9.471214,3.036126,9.758604,-2.477478,7.495403,-2.806416,4.520356,5.451476,-5.226425,-2.571735],[-6.360659,7.252333,-7.134494,-2.080549,-3.498809,-1.550843,7.946989,9.794337,-1.307464,-0.664948,4.758583,4.857384,3.962561,-9.498942,7.659287],[-3.220920,-6.869143,1.171989,4.592099,1.813730,-5.330079,-5.852438,-7.119761,-0.123201,2.656610,-0.904525,5.465115,0.020946,5.355185,3.241983]],[[-6.702393,-4.532374,9.413124,2.639348,5.636453,-7.425184,1.010979,7.252095,0.789145,-6.753963,-2.082869,3.474307,-0.543344,-5.095134,-0.753690],[3.652112,5.001272,7.543507,9.980527,-9.276280,-9.304562,-3.789895,0.976197,6.114796,-6.708313,1.360461,-2.589667,-9.027358,-4.338897,-0.907955],[-7.939752,3.569057,8.720100,6.988005,-7.606667,-5.302102,-8.652319,-1.288656,-9.458626,-0.466748,1.763626,-3.746274,3.958964,-6.087160,2.116822],[-9.634449,-7.899465,-7.429555,0.791297,-0.321576,3.195599,-6.066495,-0.748991,7.995487,-1.455698,3.496539,5.593179,9.458190,-8.585758,-5.293950],[9.125778,-4.662618,0.230222,6.100910,-6.841792,-3.465716,-5.533352,0.214021,6.219815,-3.245522,4.465856,0.326633,0.418842,8.089618,-2.287043],[0.082436,-5.004338,-2.827925,-8.284743,-3.717915,1.494830,-3.707647,3.085998,-7.763423,-0.788475,-9.605187,-1.807593,3.605046,3.408216,-2.274262],[-8.968496,5.462839,7.124440,-8.849794,1.982810,-1.522501,6.557179,5.623923,-7.451315,3.915249,-5.702175,-3.077035,1.461609,-6.270984,-8.234180],[6.651299,-8.439704,-9.429826,-6.881073,-0.462178,0.215224,-0.488575,7.664258,-0.533691,-6.585133,4.615197,7.808332,4.340991,4.674906,7.954245],[-5.815062,-6.966812,9.188190,-3.963660,-9.615894,-4.358409,1.345443,-2.409623,-9.923014,2.649302,6.528169,4.317309,-7.939571,8.988748,-1.502349]],[[-1.194138,9.728089,7.646956,0.681251,-3.481335,-0.812830,6.319820,-3.043847,2.518738,-2.170054,9.786772,1.820948,7.243579,6.330830,5.281507],[9.402132,9.448159,-6.989701,-4.818352,-9.152750,4.722709,7.889457,6.502260,7.948680,-9.173892,9.092809,7.126509,-1.087799,-2.316473,5.756433],[4.023721,8.279156,-4.595260,2.925900,7.884736,3.396147,1.507474,-7.468576,-4.523397,0.622450,3.533375,-1.304729,3.064280,5.099725,7.880057],[3.801960,-9.450256,3.233912,-9.281270,6.973512,-0.708078,1.283187,1.609392,-1.562408,8.869856,-7.388772,-2.125785,7.189552,9.928200,-6.663482],[2.554970,1.580101,-0.672215,-3.749585,2.667470,8.377100,0.945786,3.087322,-1.797369,-4.677896,0.856342,-8.061516,-6.195360,4.072952,4.792852],[-6.903268,4.910734,-2.141717,-4.883083,7.661015,-5.643970,6.362996,2.927494,-5.750110,3.493457,8.563725,1.156992,-3.201698,4.262912,5.795308],[6.138268,3.839446,5.241733,3.067342,7.991154,0.977258,4.754717,0.343091,-0.246439,-6.197217,-9.170759,-2.932298,7.174702,3.679737,0.098377],[9.162220,-7.059267,4.778820,-2.113845,6.305205,8.547944,4.298970,-2.473099,0.815881,-8.668695,-4.834903,0.159994,-3.552892,3.424679,4.110538],[-7.458331,-3.357558,-0.300296,-0.846755,-5.189770,-7.436325,6.084406,-0.941865,-2.558917,-8.174483,7.837369,5.590895,7.470632,0.961483,-1.565973]],[[7.408841,-1.512894,4.307524,-4.875154,0.298633,-2.428219,-1.423798,-5.182172,8.253454,2.396313,8.467945,-1.333731,4.538621,3.985585,-3.282187],[-8.533850,-9.828120,8.851081,6.500486,-1.348276,-6.039218,-2.229237,-3.992370,0.155300,4.249135,0.693252,6.366807,4.184819,1.517872,-5.308779],[-4.681356,-0.743593,0.376016,6.890916,2.197224,1.750302,-2.579233,-8.752198,-6.978507,-6.527035,-9.144096,1.893982,5.116147,3.391033,6.729134],[-8.344102,-3.604604,-6.004772,9.337014,-7.173140,7.575692,-5.194651,1.855878,-2.699507,0.592720,9.050997,-1.270408,2.114357,0.970844,1.151889],[-2.562871,9.387836,-3.632146,-9.798333,9.260087,-8.471561,8.797308,-3.952520,1.156586,-4.142066,9.739976,2.617427,-9.543727,0.752711,8.054217],[-8.063367,-6.995931,-4.775205,-9.599324,-4.977835,5.044799,-1.540869,-3.219408,9.004555,-8.395890,-3.018883,4.407816,1.280728,-0.733804,8.522158],[3.544473,-0.544889,2.082199,-4.028682,0.280301,1.763351,2.519773,8.475680,-7.073657,-0.998475,1.527807,-3.207976,-2.772606,-9.076889,-6.177628],[-3.046600,-2.952430,-8.586650,7.870592,8.370747,8.761213,5.420860,-3.272920,-3.440192,7.196568,8.187416,7.592765,4.213582,-4.358127,1.078461],[5.933063,-2.680734,-5.959993,-2.004471,-6.177938,-9.961018,-0.553839,-3.355275,6.356543,-2.013014,7.099556,8.058132,5.199714,-9.942739,-9.989786]],[[1.736272,4.671304,7.445683,-8.753799,3.767436,9.520582,-7.893852,6.804379,3.524113,-4.827798,0.658424,6.795430,-7.329938,9.818990,-6.492708],[-7.885230,-6.187144,-4.918736,5.241457,0.210713,5.628032,3.132771,-4.709870,-0.305583,8.779152,5.943239,1.324849,1.536404,-4.101986,-8.416369],[-6.843713,-1.500767,5.052065,1.183482,9.019411,6.197327,3.431303,-9.324876,-0.833693,5.314716,9.607786,-8.528053,-8.632932,6.694265,1.515346],[9.263244,-0.320750,-3.741631,-3.479183,4.032661,-9.223806,-5.424891,1.814466,7.102791,-2.112844,8.058614,-7.095645,-2.153210,2.757246,1.005999],[1.562190,-9.763950,-7.549229,3.903017,-0.133231,-1.390664,-2.756744,6.461117,8.675945,1.269672,1.799171,-8.163199,-2.567924,-8.374721,-5.257215],[-1.782854,5.102360,5.787759,8.227282,-2.739843,7.517410,-8.341573,-0.064578,1.893225,0.140018,8.947169,3.727902,-7.177273,-4.578280,7.047817],[-2.665534,-2.755084,1.004583,4.153146,6.113220,-0.996843,-3.100208,-0.137375,-0.252967,-4.375223,-6.685200,0.442445,4.151514,3.936295,-2.941748],[-3.451817,0.776642,-0.707944,5.111047,1.185773,-8.656012,9.214549,0.597068,8.319461,-1.100694,9.007566,1.502473,-5.105070,-8.013733,-7.452472],[8.185223,3.096548,0.847464,4.693509,1.805055,8.549435,-1.237528,-5.139957,-6.224495,-1.783020,7.894749,1.348246,-3.290085,-0.922023,-9.684423]],[[2.352532,3.017961,-0.379090,6.064979,8.970338,-1.044593,-6.140069,-4.482195,-5.393756,-4.648606,3.418963,-8.782111,-3.676504,-8.469577,2.600064],[3.751305,-0.381895,5.731966,1.822416,-4.999427,5.898095,-3.239780,-4.808699,-7.860251,1.811687,3.207863,9.167555,-7.639064,-0.272689,-0.531897],[0.786082,-4.229487,-7.510821,-1.043944,-6.506361,3.273692,4.663127,7.456556,-6.919910,4.647198,-3.055765,-0.950156,-0.714332,0.312069,9.074884],[7.517302,9.382697,9.339376,4.135248,-9.746480,-8.618572,-9.074900,9.566751,1.452274,4.279079,2.059345,5.475693,3.227079,-0.983101,-9.401806],[-8.104002,-4.353529,-9.870847,-1.891702,6.331344,5.097357,-9.843667,-4.862677,-0.114375,5.686039,-7.669054,1.534000,-8.911880,2.154726,-7.822712],[-2.377605,7.368100,-2.981983,-4.744150,-4.063898,4.046165,-7.010716,8.478467,9.564568,-7.659572,6.609652,-1.753325,2.227416,-9.740400,8.858545],[-6.013196,9.493465,9.118899,7.808041,-1.429190,0.383269,-4.481477,5.420153,-8.787702,7.579682,1.199815,6.085020,4.703121,-2.381366,-7.275482],[-1.383963,-6.176068,-4.493864,-8.847213,0.299325,6.096540,-0.314441,-3.399364,1.742019,3.941991,-6.474201,-1.659970,-0.249332,-8.743208,7.445162],[-2.416079,3.089310,0.145814,-9.805954,-7.837423,8.413581,8.642584,5.418078,0.902386,-8.707839,3.468439,-5.822215,6.176207,6.507801,8.147382]],[[-1.427840,9.504979,-3.579252,3.398780,-9.218956,1.576253,-5.827148,8.894031,-2.140174,-7.274262,9.822718,7.762971,9.061997,-9.896588,-7.152385],[2.216117,-6.866942,0.228644,-5.508159,0.357499,-3.164283,-6.662754,4.387300,-0.857154,-3.154717,1.800730,-8.905734,0.218971,6.780510,-0.252092],[-8.712821,-2.447804,-4.994309,1.607887,-3.806063,2.967018,4.226634,3.609343,-7.524641,3.936388,9.538713,-3.621560,7.229350,0.693616,-8.814140],[2.661573,-6.267999,7.850398,6.808169,7.473161,8.343772,-9.355507,-1.614396,-3.167083,4.324924,6.474700,-2.978651,-5.214133,-1.844262,-1.111004],[9.255619,1.676622,4.163127,4.034300,1.341894,-2.564140,6.252184,-2.308744,1.136331,-8.725033,-8.955443,9.962466,-3.697453,-3.660903,9.419186],[3.824782,-4.642702,-2.956554,4.511506,-6.319302,-5.758933,7.477710,8.995733,4.229734,-4.211885,0.760303,-3.135690,9.556899,-9.243975,0.499032],[-3.021151,5.517977,0.818980,-9.181720,9.706140,0.422912,-2.043632,5.809263,-9.484089,-8.576515,3.962825,2.219803,-2.532404,-8.295931,2.337336],[-2.349848,-3.058646,-5.719434,-3.705329,-5.744558,-0.020194,5.375935,-4.973196,-3.857205,-4.900856,-1.023348,8.533175,2.397127,-4.138556,-5.960462],[1.733960,-6.216124,-0.817923,3.480246,2.493211,-1.598710,5.241458,-7.949434,2.208081,0.368844,2.914556,5.248738,0.325550,-1.757178,-3.260366]]], dtype = "float64")#candidate|1840|(9, 9, 15)|const|float64
uop_1841 = relay.exp(const_1840.astype('float64')) # shape=(9, 9, 15)
func_1828_call = mod.get_global_var('func_1828')
func_1831_call = mutated_mod.get_global_var('func_1831')
const_1847 = relay.const([[-4.529833,-8.432646,6.281782,-6.420129,2.773264,5.109480,-1.884916,7.675765,1.960577,-7.440485,5.458762,0.601332,2.395606,-9.144177,-5.328929,5.336584,-6.907834,-5.540041,-4.600074,0.169931,-6.088618,-7.226906,0.187644,-5.993313,-4.904519,-4.914793,3.812305,2.201288,-8.202661,5.782208,2.256229,9.684588,-9.458234,5.099538,-2.966163,-2.367452,1.033244,7.834790,-7.280623,-3.436511,-2.318315,5.840752,-7.811196,-9.654337,-7.951320,2.106155,-8.720818,3.165525,-6.526773,9.987382,8.686884,5.547339,7.853887,7.016559,-2.666913,-4.757141,-9.982849,6.871033,-6.577040,2.528001,0.083184,-5.722989,-5.028302,-9.755537,-6.591594,8.323456,-7.223280,8.574089,-5.826163,4.090368,-2.765023,9.580700,9.851317,7.148483,3.151327,-4.359904,2.716872,-1.995792,-1.602170,-4.009700,6.393368,-7.102751,-8.167861,5.234532,4.100528,-8.993426,-8.523460,-2.426114,-1.103679,3.595647,2.782257,-2.515896,-9.291475,-9.543025,3.452032,7.654751,-1.974899,-7.538515,0.687987,2.977904,0.743865,-0.187578,-6.327654,4.293036,-3.196420,-5.189431,0.395314,-0.669982,9.532811,-6.994465,0.342824,8.893199,-9.793306,1.896596,3.707959,-4.259176,-5.158617,-2.427457,8.982523,0.845460,-6.209238,8.944691,-6.187864,1.674295,-2.324320,-9.195247,-6.795542,-8.894458,-9.869856,-8.618008,-1.641031,-9.100611,-9.116966,2.287296,-5.842964,8.928839,-2.467454,-6.954996,2.026320,6.691831,-6.786034,9.060729,5.157545,0.114794,6.772063,-5.381566,-4.052600,-3.556575,0.810058,-4.860533,-5.323729,5.400930,4.626221,3.055684,7.312621,-4.096045,0.121374,-3.532407,0.706503,-0.209875,-3.764508,5.588712,5.613207,9.391227,1.287852,-7.937302,0.156676,3.472924,-6.252626,4.956692,1.650710,9.809521,-8.890746,3.430018,0.816971,-3.675106,-4.325517,-1.781125,-0.182470,0.597238,3.538033,5.933758,0.350689,6.804754,-5.293798,4.577074,9.984291,-4.442454,1.086292,6.296228,1.802700,-5.473264,0.897451,8.445946,-8.771271,-8.337615,-0.010463,-5.037065,-5.673435,6.917656,4.425358,-1.170090,5.658645,-3.130053,-6.864317,9.023772,6.360159,-5.942923,-9.916836,-2.882115,-9.468370,5.707925,6.105920,-3.302110,6.959629,-3.195249,-1.717085,7.886793,4.591142,-9.558285,-4.825524,9.269007,3.517432,-8.187356,3.202035,-7.148788,9.837755,-6.407801,-3.294459,-3.128294,2.910486,-8.103040,9.744414,3.600240,6.190178,2.530899,-3.713932,1.500241,-3.598251,0.670274,4.045206,9.145002,0.445165,0.996198,-2.779417,-3.495924,-4.509684,6.711469,-9.924913,-0.575617,0.673365,5.359117,-4.591242,0.243500,6.332739,-7.662172,1.661604,1.999434,5.554012,-3.761312,8.261373,1.781758,9.077842,2.416156,-5.982828,2.122487,5.557506,5.168530,7.622950,-3.005359,8.504812,7.991001,-3.986184,-7.701606,3.596453,8.309491,3.201869,-6.683467,-4.980159,-7.692990,4.933319,-1.472800,1.035313,-2.353718,-0.448098,9.890868,1.627885,-7.366492,1.867701,-4.542383,7.488543,8.406338,-0.989159,2.725737,-2.281221,3.247839,2.692332,-4.986065,8.240986,-0.849912,-5.458543,-3.948982,-1.150428,3.539887,7.632638,2.341845,-5.436931,0.831314,-0.659934,4.169399,-2.558427,3.782473,-6.896229,-3.483638,-5.272542,5.777751,-2.392720,1.037299,6.654532,7.524547,-1.248160,5.532273,3.958004,9.618482,-0.819942,-6.993640,-4.417906,-4.114214,-5.470627,-6.188412,9.802166,1.948366,9.966483,7.031696,8.099095,3.789846,0.030133,-7.755572,8.999777,-5.832866,-7.719054,0.803108,-1.563313,3.384823,-8.379893,-8.160292,-4.692271,-2.241872,-5.429660,-3.916101,-9.858154,7.162982,-3.235099,-5.632897,7.429973,1.377761,-0.461894,-0.574828,9.329485,4.959118,-9.112164,7.859438,5.478892,-8.154008,6.929216,0.658408,0.515140,2.538640,1.236781,9.975655,0.757825,-6.587322,9.202334,-3.320190,4.582965,8.478567,1.095515,-8.114462,-6.719597,-6.306499,6.157331,4.353426,-5.446491,-8.773396,-9.552435,2.884881,2.893840,0.155386,-2.542161,6.153445,1.790289,2.123238,2.035280,9.532875,2.077153,-1.452849,-9.549545,8.488628,-5.637448,-6.910368,9.029460,-4.693485,8.179595,-5.574865,-7.507615,3.643944,-1.745632,-1.825017,-6.370646,9.406302,-4.305663,-2.271812,1.109560,8.571063,-4.000770,-5.261308,7.639955,-5.301488,3.926651,0.215842,-5.768026,0.598027,1.777490,-6.167754,-6.338319,3.591321,9.493925,7.179685,4.279054,6.298799,-9.225911,-0.891227,-6.883272,-6.870526,3.045094,0.701468,6.675450,-7.297486,8.286955,-5.892489,-5.144187,-3.207733,-2.302150,-8.596730,-0.597507,5.501668,6.299458,7.208297,-4.687460,6.230886,1.793857,4.137575,-0.338643,6.602352,-8.517652,2.180443,-6.212936,0.357342,7.695155,-7.451258,3.536354,-3.503041,6.067510,-1.781531,6.281524,4.316420,3.545798,1.060367,-8.323938,5.967299,8.886272,8.246451,-4.699467,-8.875428,-7.645287,5.623493,-8.689528,1.153158,3.103988,5.432254,0.290293,3.812305,6.584968,-3.659906,-3.878549,-8.737479,-3.983903,9.815382,-5.172524,-8.393670,-9.254107,-0.077251,4.047567,1.524479,-3.736755,-6.812662,7.550696,-4.395459,-5.779640,9.087172,-2.410726,-0.127554,9.040810,4.249821,1.526062,8.774543,2.257916,-0.106685,2.224543,-1.316259,-1.439561,3.664104,-8.296598,-4.553740,5.391087,8.362944,-5.853048,-0.811492,5.062660,3.372949,-7.234227,9.551810,4.346599,-4.814723,9.973315,-3.056935,3.695083,1.080464,8.057219,7.028470,4.917143,-3.043495,-2.404581,-0.076570,-9.895427,7.365142,-2.087748,-6.436477,-0.700372,-4.366141,6.812488,-2.142059,-8.129676,1.003799,8.676168,-6.742887,7.080791,-0.315802,-3.332916,-0.100846,7.624443,6.679471,-3.170070,6.200021,-4.731856,-0.422642,-5.182820,5.882472,-7.680528,-4.184133,5.892979,0.548217,2.464999,-5.265121,-2.797275,-6.980000,-0.814846,8.119976,7.503748,-8.628321,-8.303841,-9.202148,5.330864,2.154346,-7.784345,6.982402,1.350543,-8.310635,1.670333,-9.479501,3.218688,1.790705,-6.851133,-1.026221,3.508714,6.855789,6.299530,-6.639480,5.101952,4.084583,5.257212,3.194352,2.065026,8.525225,2.014067,-0.165524,-3.832904,-7.021031,-3.560597,-0.398863,9.753375,8.071138,7.853523,3.880538,6.037860,-4.924902,-0.694188,8.843992,-9.957922,-8.594377,-8.128265,-1.174280,-6.232777,4.280058,-4.767190,-9.780719,-1.073606,-1.154698,2.502097,-7.691199,-2.212289,1.186367,4.524908,-6.880216,7.817497,0.354358,6.795039,-8.924569,-6.067171,-6.674161,1.765407,2.960231,-5.897365,-3.207655,1.356888,5.771450,1.570576,-4.255558,7.628864,-4.218456,6.007025,4.275773,-1.518332,-3.785400,7.681474,9.132936,2.088079,-5.623360,-8.121968,6.093462,-9.526761,-8.311760,6.975480,-9.433765,8.707545,5.226899,-5.570923,-4.166384,-4.396336,3.852670,1.177379,8.127833,4.855183,4.399724,-1.644814,-9.804097,1.218404,-0.527520,1.599923,3.935794,-9.492748,-7.953749,5.289603,1.729559,6.856175,-8.102130,3.437767,-6.809682,0.125894,-8.294475,-3.256292,-6.812490,3.099075,7.137073,5.570248,-7.043261,9.625710,-2.367039,4.504979,8.496653,9.311021,4.194011,5.435965,8.089816,5.377116,-6.496676,-8.303262,4.622372,1.877079,0.589495],[-5.552123,-9.379968,-8.550185,-7.124591,-5.973163,-8.472049,4.674177,-0.666137,5.350384,-7.697095,-3.488407,8.426114,4.407803,-3.389919,5.440893,-2.691356,3.477617,0.800476,1.582821,5.091071,6.418613,3.142794,-6.806406,8.486161,-1.160123,-4.056325,-6.111251,5.906843,3.905438,0.368864,5.835567,-0.119165,-1.462763,-4.661829,4.083028,-4.845224,-0.270979,-5.462386,8.234618,-2.637380,9.243857,-3.407709,-2.662092,1.192804,-3.466708,-2.171239,-9.603719,-2.795929,2.141160,0.726912,5.434485,5.558914,8.962087,-3.425161,-5.023851,-3.601143,8.350615,5.142616,7.344436,4.686899,1.189768,8.970371,-8.347540,5.837238,5.677714,2.278988,-3.645847,-1.332979,-3.553065,-4.247701,2.479377,-1.009565,-5.176061,1.247778,-0.280606,3.742266,-1.656504,-1.644661,-0.149293,-0.586954,-6.491672,-9.989694,1.993314,-7.217893,9.575238,-8.166582,-4.032896,-9.211288,-1.407485,-8.909421,-8.476842,4.197823,-1.548408,-5.324442,5.780432,-0.626844,-6.389572,-4.569082,9.367764,3.593671,3.225311,-6.533177,-3.657913,-2.311696,-3.029491,1.892161,-6.872068,4.996397,-7.812640,-9.163929,4.861276,8.476370,2.076787,8.846311,4.881305,-5.768536,-3.259051,-4.665864,7.341521,3.266520,1.580164,-9.151713,0.775206,-1.479102,6.309459,9.818618,-5.209723,-0.632277,-1.389630,-3.725807,-6.620753,2.327984,9.512517,6.385631,-0.211846,-6.308502,-7.376139,-4.442873,7.205086,7.891962,6.869184,4.495737,-7.832491,6.547422,8.950827,-0.934008,-4.063858,-5.998499,9.356701,-5.277617,-5.982264,7.056066,-6.937571,1.951863,-4.504501,-8.981515,7.107557,7.910000,-4.693066,4.760785,3.254912,4.742693,7.656197,9.133008,-6.019265,-3.337348,5.029952,2.357518,5.215114,1.324440,0.728849,5.801693,6.700217,-1.282306,-4.110371,0.485957,1.403488,0.497212,-7.521105,5.696101,4.710464,5.257831,8.945514,-6.346100,1.680421,0.546116,7.785489,-3.444078,5.330940,-8.945918,-3.616950,9.927226,8.101759,-2.189208,-0.919773,-2.269388,7.770799,-3.595846,-0.662233,-5.829605,-5.504144,-9.672234,-4.275819,-2.081090,-8.159439,5.147375,-5.515427,-0.570543,-2.682555,4.800583,1.312623,-1.304860,0.796400,7.173661,1.043698,-3.773792,9.839167,0.909968,5.605697,-3.004117,5.138449,-5.485913,-4.024513,3.760507,2.900121,1.029051,-8.339467,9.088536,-4.373021,8.351641,-9.817837,7.981993,-4.389177,-2.658381,-3.256907,1.442183,-2.665074,6.778481,0.324865,7.811316,2.184880,7.488261,-5.659166,-5.229996,6.630754,-3.047701,4.137022,-5.219360,7.423817,3.207875,1.858254,5.837929,-8.288962,-8.357869,8.893177,-2.208540,9.838478,-2.236113,-9.694090,-6.444928,-3.202307,-3.518417,3.235340,8.482627,4.076158,-4.807570,-7.426685,-5.443184,2.149327,-6.427078,8.278853,5.960394,-2.414343,-3.126794,-4.537844,-9.820977,-4.658992,-4.448131,7.778550,-2.846576,-2.388318,8.986332,-2.646778,8.007426,2.033530,-5.926263,-8.554570,3.963004,1.212631,-7.046750,-5.913312,-9.943356,9.482589,-5.410917,-5.362591,8.657350,-5.730958,9.270287,-3.605088,-8.533631,-4.744470,-8.226878,-1.092923,7.595893,-1.315186,-3.403326,4.732730,4.093726,3.352519,2.970603,-1.027559,9.327095,-4.464574,6.017120,1.606691,-4.557022,-0.566484,3.971256,-7.522338,-5.295009,-3.135854,7.933435,7.339209,-0.420951,7.486828,-4.870409,-4.319236,-8.479038,5.686827,1.821596,0.972855,-9.442978,6.736628,-2.505573,0.461706,-6.564637,9.904311,1.113378,-9.555030,-8.910249,9.210976,2.250502,-5.871117,-7.704401,7.875834,-8.460021,6.603251,-2.264772,-2.690461,-9.465545,4.577424,1.909266,6.826919,7.644049,-4.261686,7.840106,-3.465789,0.897839,-2.349565,-7.812602,-8.632954,-4.465480,-3.364100,-1.718876,5.105592,-1.021811,9.427345,-1.586254,-3.139823,-1.237381,8.671458,-5.839881,-2.732311,-4.466866,-1.834508,-9.283500,5.518850,-8.576933,5.577427,8.909190,-2.185682,6.061959,1.259311,-8.038256,2.084236,9.679089,-8.498566,-4.263782,8.544535,3.758210,-1.062933,-0.410876,-0.992181,4.255101,0.139435,-2.659463,-4.389719,6.711512,2.166753,9.485272,-3.960054,0.767566,-6.318907,1.818075,-5.085428,4.115883,-4.050251,7.913175,4.781069,-2.106516,4.435398,-7.130919,-2.387059,9.280953,7.558875,-6.019650,6.369129,-6.105728,-6.446487,-0.302495,-8.426820,6.104128,6.761237,9.317915,1.804898,-3.363197,-0.818291,-3.026270,-0.935767,0.443695,-5.396873,-7.090101,4.190154,4.340945,-5.201665,3.371432,-0.512113,-6.252861,1.796258,-2.725932,6.543023,0.861552,4.008638,2.015178,4.744647,7.497662,-3.024706,-5.490417,-6.705830,4.340191,9.998672,1.462449,7.549866,1.989930,2.869033,3.973160,-5.110702,-3.695219,-2.484380,-1.172087,-8.373179,4.970977,8.601463,9.158580,-8.552166,-8.021821,2.065330,2.032449,4.879302,9.894574,-9.939042,-9.208254,7.404317,-8.297556,-5.643707,1.615124,-2.796023,8.983576,-3.308948,6.750854,-6.013375,-3.706330,3.653901,-5.282487,1.478435,2.497019,4.709142,-7.005655,-0.315357,-5.298429,9.555257,-8.619304,5.870989,5.691913,-2.759406,-7.239692,5.154269,-8.610271,-2.698666,8.553237,-2.190467,4.436419,-6.837912,-7.191716,-6.033736,0.313756,-4.695283,4.156837,-5.963917,-7.966325,6.541898,9.694007,5.250850,4.795736,-5.376304,3.067856,3.197579,-2.292848,8.653337,-2.080103,-5.358415,6.620851,1.236408,-5.432601,-4.692421,-6.058387,5.977400,-8.839247,1.015856,-2.172923,-2.822174,-4.622702,-2.714196,-5.558309,8.702583,8.050143,-8.613187,2.409709,4.432534,5.077280,-3.420632,7.864826,7.089962,-5.513317,9.409908,9.644105,4.089381,1.552491,-4.466278,7.431534,-5.973100,4.037428,9.215961,4.944641,-7.587994,-6.868077,-8.694499,-8.550408,3.684310,1.527999,8.547384,9.576438,-8.887473,-8.213308,-0.125886,8.562230,-2.427857,2.130838,7.669507,-0.846669,-3.519350,-2.685748,-5.023861,-5.062333,4.493101,-0.187546,-2.416016,9.601419,-2.495917,-0.603256,6.984685,-3.423581,-4.351500,-6.356964,-4.942289,-0.858349,8.062485,7.120016,7.336386,-8.626888,4.145870,-6.836878,-7.842401,8.008183,6.436633,1.343304,8.856030,0.201151,7.765453,2.981236,-5.033153,-9.908353,-8.884841,-8.652976,-2.359140,-9.902620,5.668490,8.028176,1.435928,2.762902,-1.549431,0.440122,-5.899328,-4.651801,-5.772609,2.272456,1.733106,5.384280,0.860560,6.164757,-4.797780,-2.001849,-0.075147,8.214934,-2.916336,4.657920,4.005921,-7.101476,5.101298,6.347444,-6.424501,-1.149047,4.203016,9.427345,3.350275,-8.214876,-3.276843,-9.132568,-6.802968,-6.867889,-8.454781,-7.208906,3.080759,6.030289,2.605724,-9.720057,6.052345,1.960848,-4.392677,0.894090,1.239136,5.373741,-0.864861,6.141497,6.637762,5.751089,1.568112,7.294790,-1.269887,1.647758,-1.002697,1.722662,-0.086822,-4.856222,1.982217,4.070847,0.983239,8.999748,-5.969842,-7.843567,-3.346551,3.036512,0.327831,-3.418006,1.770286,6.702962,-4.629022,6.792431,5.816632,9.661470,0.366141,-2.780742,-6.390363,7.460223,-3.919888,-9.186972,1.654276,-7.816036,1.707940,0.243848,-7.268222,-7.186740,9.146952,5.149065,8.524389,-5.288731,1.046453,5.774973,-7.976471,-6.392144]], dtype = "float64")#candidate|1847|(2, 700)|const|float64
call_1846 = relay.TupleGetItem(func_1828_call(relay.reshape(const_1847.astype('float64'), [10, 14, 10])), 1)
call_1848 = relay.TupleGetItem(func_1831_call(relay.reshape(const_1847.astype('float64'), [10, 14, 10])), 1)
func_222_call = mod.get_global_var('func_222')
func_226_call = mutated_mod.get_global_var('func_226')
var_1864 = relay.var("var_1864", dtype = "float64", shape = (64,))#candidate|1864|(64,)|var|float64
call_1863 = relay.TupleGetItem(func_222_call(relay.reshape(var_1864.astype('float64'), [8, 4, 2]), relay.reshape(var_1864.astype('float64'), [8, 4, 2]), ), 0)
call_1865 = relay.TupleGetItem(func_226_call(relay.reshape(var_1864.astype('float64'), [8, 4, 2]), relay.reshape(var_1864.astype('float64'), [8, 4, 2]), ), 0)
output = relay.Tuple([uop_1841,call_1846,const_1847,call_1863,var_1864,])
output2 = relay.Tuple([uop_1841,call_1848,const_1847,call_1865,var_1864,])
func_1872 = relay.Function([var_1864,], output)
mod['func_1872'] = func_1872
mod = relay.transform.InferType()(mod)
var_1873 = relay.var("var_1873", dtype = "float64", shape = (64,))#candidate|1873|(64,)|var|float64
output = func_1872(var_1873)
func_1874 = relay.Function([var_1873], output)
mutated_mod['func_1874'] = func_1874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1919 = relay.var("var_1919", dtype = "float32", shape = (13, 6, 7))#candidate|1919|(13, 6, 7)|var|float32
var_1920 = relay.var("var_1920", dtype = "float32", shape = (13, 6, 7))#candidate|1920|(13, 6, 7)|var|float32
bop_1921 = relay.mod(var_1919.astype('float32'), relay.reshape(var_1920.astype('float32'), relay.shape_of(var_1919))) # shape=(13, 6, 7)
uop_1932 = relay.sqrt(var_1919.astype('float32')) # shape=(13, 6, 7)
output = relay.Tuple([bop_1921,uop_1932,])
output2 = relay.Tuple([bop_1921,uop_1932,])
func_1934 = relay.Function([var_1919,var_1920,], output)
mod['func_1934'] = func_1934
mod = relay.transform.InferType()(mod)
mutated_mod['func_1934'] = func_1934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1934_call = mutated_mod.get_global_var('func_1934')
var_1936 = relay.var("var_1936", dtype = "float32", shape = (13, 6, 7))#candidate|1936|(13, 6, 7)|var|float32
var_1937 = relay.var("var_1937", dtype = "float32", shape = (13, 6, 7))#candidate|1937|(13, 6, 7)|var|float32
call_1935 = func_1934_call(var_1936,var_1937,)
output = call_1935
func_1938 = relay.Function([var_1936,var_1937,], output)
mutated_mod['func_1938'] = func_1938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1951 = relay.var("var_1951", dtype = "uint8", shape = (11, 7, 9))#candidate|1951|(11, 7, 9)|var|uint8
const_1952 = relay.const([[[10,-10,-6,5,-4,9,-5,7,10],[-1,-7,-4,2,-6,1,-4,-6,2],[-5,5,7,9,-4,-4,-6,-7,6],[9,3,-2,3,-5,-10,10,-3,5],[10,-4,2,9,2,10,9,-5,-7],[5,3,-1,-7,10,-6,2,9,-8],[-5,-1,-5,7,2,-4,-9,1,1]],[[6,-2,9,-9,6,6,-1,3,10],[-2,-9,8,-7,4,-8,-1,4,1],[3,-4,-10,-5,3,-4,5,1,2],[9,6,-9,-10,-1,4,-8,1,-8],[-2,3,-2,-10,5,-2,1,-8,7],[-3,6,3,-5,-8,3,-9,-10,2],[-9,8,-6,-3,-6,-3,-8,1,-10]],[[5,3,2,-1,1,-5,-3,9,-10],[-4,1,-4,2,-1,-6,-5,-6,4],[6,-1,7,2,-2,-1,-4,-5,-4],[9,9,-9,1,-5,4,-5,7,7],[-3,1,-10,8,-7,10,10,-9,9],[5,2,7,1,8,9,9,-6,7],[-5,1,8,5,-1,8,-2,10,-2]],[[2,8,-1,-5,8,3,7,-10,9],[-10,-5,-9,-2,7,5,-6,5,6],[10,-8,-7,6,8,4,6,-4,-6],[-6,-3,8,-4,-4,-8,-7,-6,-9],[-4,6,-2,9,-6,-1,-5,-1,-9],[6,-5,4,-5,-4,-4,3,-9,-1],[-1,9,5,-10,-6,-1,-9,-10,-9]],[[8,5,-6,-6,-8,10,-5,10,-8],[3,-5,8,6,3,2,4,8,3],[-10,-1,-5,8,3,4,-2,9,8],[3,5,-3,10,8,-7,-9,1,3],[-2,3,-8,-7,6,8,-5,9,9],[-6,9,6,-4,-1,9,-8,7,-8],[-2,5,-3,3,8,-6,6,-7,-6]],[[9,1,3,-5,1,-6,-7,6,-6],[7,-6,3,-3,6,4,-4,-1,4],[-5,7,-9,6,9,9,10,-5,2],[-10,9,-4,7,-5,-5,2,-5,9],[-10,-1,-7,-4,-6,-3,9,3,1],[-10,-7,7,-3,5,8,4,-7,6],[-7,2,1,2,-1,9,-4,10,-5]],[[5,-6,8,4,-9,-8,6,-7,-9],[-4,-10,7,4,-2,3,1,-5,-10],[-8,-4,-5,4,-8,-8,1,9,6],[3,-7,4,2,10,2,-2,-2,9],[-9,-9,-6,-3,10,8,-5,-5,8],[4,7,-9,2,9,-8,-1,3,-1],[6,4,5,3,-5,-4,-10,-4,10]],[[5,-5,-6,-5,7,7,-7,-3,3],[4,-7,4,1,10,2,9,4,2],[-4,-10,-4,-2,-2,-3,10,-10,-4],[10,10,-1,2,10,3,-9,-10,1],[-6,7,5,-4,5,3,10,-7,5],[-3,-9,6,-4,8,-4,7,1,9],[-4,-10,-6,-10,-8,7,6,-4,-10]],[[6,5,-7,4,-6,-10,10,7,4],[-5,-2,-3,10,-8,4,-3,3,6],[-5,-5,-3,8,-10,-5,10,9,5],[-10,1,9,9,6,10,-3,-2,9],[-5,9,4,10,-4,-6,10,3,-4],[-9,-4,5,8,-2,8,6,-10,1],[-8,8,9,-2,7,-4,-8,6,-7]],[[10,10,-6,5,6,-6,9,-7,8],[8,8,-5,-8,3,-9,-6,-8,10],[9,-3,-1,1,2,5,-5,-10,-10],[-3,-8,-4,-9,-7,-1,10,-4,-4],[-3,-5,2,-5,-4,-9,-7,-5,-9],[5,1,6,9,-1,-10,-8,-1,-5],[2,1,-4,2,-1,8,6,-7,-5]],[[1,8,7,-9,10,-7,-3,5,-8],[-2,-2,-7,-4,-6,-2,-3,-5,4],[-10,8,-3,5,7,-9,10,-3,-6],[-5,-5,-1,-1,7,9,9,-4,-9],[3,2,5,3,7,-8,-10,3,-3],[10,3,2,-3,-3,-10,-6,6,1],[1,7,-3,1,9,9,-2,-7,-8]]], dtype = "uint8")#candidate|1952|(11, 7, 9)|const|uint8
bop_1953 = relay.left_shift(var_1951.astype('uint8'), relay.reshape(const_1952.astype('uint8'), relay.shape_of(var_1951))) # shape=(11, 7, 9)
uop_1960 = relay.asin(const_1952.astype('float64')) # shape=(11, 7, 9)
var_1966 = relay.var("var_1966", dtype = "float64", shape = (11, 7, 9))#candidate|1966|(11, 7, 9)|var|float64
bop_1967 = relay.logical_or(uop_1960.astype('bool'), relay.reshape(var_1966.astype('bool'), relay.shape_of(uop_1960))) # shape=(11, 7, 9)
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
var_1981 = relay.var("var_1981", dtype = "float64", shape = (640,))#candidate|1981|(640,)|var|float64
call_1980 = relay.TupleGetItem(func_388_call(relay.reshape(var_1981.astype('float64'), [8, 16, 5])), 0)
call_1982 = relay.TupleGetItem(func_391_call(relay.reshape(var_1981.astype('float64'), [8, 16, 5])), 0)
bop_1983 = relay.floor_mod(var_1966.astype('float64'), relay.reshape(bop_1953.astype('float64'), relay.shape_of(var_1966))) # shape=(11, 7, 9)
output = relay.Tuple([bop_1967,call_1980,var_1981,bop_1983,])
output2 = relay.Tuple([bop_1967,call_1982,var_1981,bop_1983,])
func_1988 = relay.Function([var_1951,var_1966,var_1981,], output)
mod['func_1988'] = func_1988
mod = relay.transform.InferType()(mod)
var_1989 = relay.var("var_1989", dtype = "uint8", shape = (11, 7, 9))#candidate|1989|(11, 7, 9)|var|uint8
var_1990 = relay.var("var_1990", dtype = "float64", shape = (11, 7, 9))#candidate|1990|(11, 7, 9)|var|float64
var_1991 = relay.var("var_1991", dtype = "float64", shape = (640,))#candidate|1991|(640,)|var|float64
output = func_1988(var_1989,var_1990,var_1991,)
func_1992 = relay.Function([var_1989,var_1990,var_1991,], output)
mutated_mod['func_1992'] = func_1992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2064 = relay.var("var_2064", dtype = "uint16", shape = (14, 5, 15))#candidate|2064|(14, 5, 15)|var|uint16
var_2065 = relay.var("var_2065", dtype = "uint16", shape = (14, 5, 15))#candidate|2065|(14, 5, 15)|var|uint16
bop_2066 = relay.not_equal(var_2064.astype('bool'), relay.reshape(var_2065.astype('bool'), relay.shape_of(var_2064))) # shape=(14, 5, 15)
func_222_call = mod.get_global_var('func_222')
func_226_call = mutated_mod.get_global_var('func_226')
const_2073 = relay.const([[-2.065210,6.844497,-8.768793,1.965959,7.803542,-9.391144,-5.567812,-3.140972,3.530512,3.237018,-1.308136,3.392850,1.163369,-8.015128,6.286417,-9.494879],[2.730592,-4.528242,1.861992,-5.809331,-0.948432,-0.143237,8.658724,0.272579,-4.832491,-5.290419,1.437919,-3.105578,-2.550548,-8.130052,-5.004642,-0.301407],[-9.827116,9.366298,-9.162377,-0.548868,5.566347,9.543925,-5.487844,2.214594,-9.008653,9.767158,9.994472,-3.432613,-6.002968,4.208388,9.763689,-1.263942],[5.112708,3.481538,6.102800,-4.116217,9.563922,7.025840,-0.578117,-1.713051,-0.679442,-6.409956,7.070114,-1.258645,9.480716,-3.642946,8.417232,-3.251313]], dtype = "float64")#candidate|2073|(4, 16)|const|float64
call_2072 = relay.TupleGetItem(func_222_call(relay.reshape(const_2073.astype('float64'), [8, 4, 2]), relay.reshape(const_2073.astype('float64'), [8, 4, 2]), ), 1)
call_2074 = relay.TupleGetItem(func_226_call(relay.reshape(const_2073.astype('float64'), [8, 4, 2]), relay.reshape(const_2073.astype('float64'), [8, 4, 2]), ), 1)
uop_2086 = relay.log10(call_2072.astype('float32')) # shape=(8, 4, 2)
uop_2088 = relay.log10(call_2074.astype('float32')) # shape=(8, 4, 2)
func_1232_call = mod.get_global_var('func_1232')
func_1237_call = mutated_mod.get_global_var('func_1237')
const_2090 = relay.const([[3,-8,9],[-3,8,-10],[-5,-8,-3],[5,-10,-4],[6,10,9],[-10,-6,-9],[4,-5,7],[-7,8,7],[8,1,-3],[-2,-6,6],[-8,8,-5],[-10,9,5],[-5,-8,8],[6,9,4],[2,-5,-10],[-6,9,6],[-2,-5,4],[-7,-2,1],[2,8,5],[-7,9,7],[-5,10,8],[-8,-2,9],[4,-4,3],[-8,3,8],[9,-6,9],[10,8,-8],[5,5,10],[3,2,-10],[-3,1,8],[5,-7,8],[4,-10,7],[7,3,-9],[-7,-6,-10],[-5,-9,-10],[-8,-4,5],[10,1,10],[-5,2,-2],[-10,-3,-10],[-5,7,-3],[-10,-1,-3],[6,4,3],[-7,-4,8],[-10,-4,7],[8,-1,5],[-4,-5,9],[1,-1,-5],[10,3,-3],[-1,1,7],[-1,1,2],[6,-3,10],[8,9,6],[-6,-8,-2],[1,-3,9],[2,7,-2],[1,2,10],[6,-3,9],[-9,-6,5],[-9,1,1],[-1,2,6],[6,3,-9],[-2,-10,8],[-2,4,5],[6,-6,-5],[7,-7,6],[2,-9,2],[7,-3,-6],[-6,-1,6],[10,1,9],[10,-3,-4],[2,-1,-2],[-1,6,5],[8,-2,-2],[6,-2,-7],[-2,-4,5],[4,-3,-10],[-9,-3,-8],[8,-10,4],[1,-3,8],[2,6,-5],[-4,-10,-5],[4,-1,10],[5,-5,8],[-6,-3,2],[8,9,1],[-7,-4,-4],[7,-4,4],[10,-4,2],[-6,3,-9],[9,10,-5],[6,8,9],[1,-9,-4],[1,-2,-9],[-6,-5,4],[-5,-5,-3],[-8,10,-10],[-7,5,-8],[-10,-1,3],[-7,4,-8],[-7,-1,8],[1,-4,-1],[2,-5,-5],[-3,9,7],[5,1,-5],[-8,-3,-5],[5,-8,-8]], dtype = "uint64")#candidate|2090|(105, 3)|const|uint64
const_2091 = relay.const([-1.235875,-3.233745,-7.154173,-3.496462,6.151841,3.318481,-6.938374,-9.162202,6.390278,-6.759979,-1.552638,-8.862380,4.515607,-9.391048,-0.737746,6.154664,8.529587,1.323955,-7.781509,-5.493421,-0.606279,-2.087046,7.114654,-9.082075,-1.864897,7.817614,-3.033355,-8.647830,-0.809307,-4.442627,-4.408461,-0.346071,9.304484,-4.620474,3.056655,-0.597349,-5.833348,-6.114300,2.166033,-3.365449,-6.626377,-0.552130,3.776194,-1.684199,-2.134871,-7.104086,-7.516431,-8.543181,-8.484342,-9.454103,4.887313,-5.343374,7.786678,-4.428540,0.212816,4.573331,-5.600188,-1.026663,-1.582710,8.898511,-7.020922,5.390616,-6.655420,-3.138429,-0.519457,7.443953,6.425446,6.152331,-9.779602,9.296989,3.175693,1.906284,3.616553,1.034586,-0.436332,-0.043667,2.223764,-6.720327,4.153211,-8.783107,5.537653,-3.728824,1.458325,2.634688,3.100705,-2.664513,9.355159,-6.938351,7.900713,-9.917887,-1.650901,-8.311169,6.831503,-0.842208,-8.026596,-3.622067,-9.839003,-6.191395,6.369387,8.124998,5.157728,5.736724,-2.626398,0.015832,3.119629,0.378498,-2.102841,1.650390,-7.033535,-2.918514,3.379646,-7.949893,2.208768,9.982897,7.482579,1.551562,-4.425882,9.439355,-7.656103,2.218610,1.203799,-9.170661,-4.976210,4.924697,0.203321,3.208759,-9.419481,-3.223285,4.296005,-4.612672,-1.299408,3.912981,-9.964527,2.599105,4.032570,6.014141,-4.362316,-9.232936,6.456391,2.709158,1.261376,2.900914,0.763676,-2.659028,-0.705061,6.539795,-0.896804,8.798507,8.239830,-7.018872,9.627094,1.398293,9.981516,6.519815,9.347672,4.507333,0.148821,0.311575,-1.954187,5.231795,-6.844790,2.515901,6.770841,-6.861986,-1.532492,8.993685,-0.431044,3.642915,-3.827720,-0.192029,2.639574,3.979302,6.696486,5.866838,-9.479935,-9.324529,9.504013,2.486284,-5.875304,-6.825822,-8.477949,8.215847,-2.565493,-3.725743,7.539103,7.816824,-5.521012,0.044848,0.419975,6.482008,-0.485517,-5.216536,-4.427696,-7.551081,8.321942,8.916158,1.311536,-6.063008,6.356899,-6.317445,-0.204809,3.838418,-9.096837,-6.054071,-9.325706,6.569324,0.808130,-9.255543,-7.504473,-7.898878,8.290406,3.681768,-6.838742,4.094484,9.171764,-4.299046,3.979489,-8.706880,7.930035,8.721661,4.675255,-9.819724,-1.008445,-1.258011,6.489001,0.121170,-4.367031,5.282762,-1.529009,-3.706707,0.464202,5.805910,-6.215750,-7.906522,-2.739271,8.056337,8.102798,-2.570628,6.646854,-4.371252,-3.207125,1.369100,-1.931897,6.990270,7.482467,-9.198881,4.753353,2.244339,-8.117607,2.245099,7.178679,-5.720211,-4.271850,9.138134,8.579163,-0.040109,1.549513,-0.706418,1.320322,-1.298495,7.709744,6.192249,1.308323,-9.805765,-6.595860,-5.745554,7.495616,-4.124949,-5.347139,1.282991,7.703514,9.724631,7.041723,1.837471,7.395812,-5.954533,-4.954714,2.558481,-8.662050,3.509343,6.589485,5.921993,-9.847003,-7.323037,2.965583,-8.724418,-8.517638,1.440196,7.635952,-9.651764,-3.048423,3.602362,-9.395303,-8.739167,9.854265,4.109113,-8.036086,6.282638,7.198975,3.645015,3.332311,8.466434,1.979091,8.054273,5.775472,1.974475,-7.630540,0.178630,-4.351457,-6.695219,8.718873,-8.709665,-3.057434,3.273434,-7.448435,-2.422075,-4.869058,0.022309,-5.165291,1.912516,-7.834708,5.786534,7.572560,5.214746,7.800410,1.551124,3.870390,-4.762364,7.640872,5.022620,-6.048099,3.507222,-9.376252,-8.332540,-1.160347,-4.297040,-4.928686,4.402808,-5.259735,9.461246,-9.146754,3.114171,2.289435,5.938857,1.895425,-0.525113,-2.809401,-3.240330,-7.517168,0.852807,-6.247365,6.147354,-6.393656,5.185279,6.688924,-4.518014,0.900623,9.699559,6.482076,-2.321146,-3.113499,-2.691499,-5.182295,4.089847,6.273649,4.146447,-3.677628,-1.854595,-3.002309,-9.442306,3.071555,4.864430,-9.930597,5.887665,-8.360650,-9.687274,-1.474814,7.625530,2.160852,5.190069,-7.216429,2.156922,5.794258,7.921927,3.370720,9.354931,-6.931448,2.525704,5.392476,-3.275792,-3.683418,-5.083899,5.973019,-4.967907,-3.201297,2.453254,-9.458150,-3.999769,-6.449592,8.799687,4.959703,-9.239537,-5.068330,-8.704849,-4.215187,5.249459,1.849169,6.469878,6.252753,4.730700,2.694092,-2.673211,7.551163,6.874661,-2.301128,4.986033,6.049378,1.673836,-2.296355,-4.703941,-6.717803,9.426894,6.035128,-1.608646,-2.305467,0.630101,-8.539742,-6.727987,-6.950148,-0.369592,-8.749573,-6.886139,9.220992,4.085652,8.542995,9.776226,9.458222,9.884766,2.157495,-0.885383,8.947345,-5.108838,2.827488,-3.909302,-7.057527,7.582094,-3.040791,2.018307,5.344656,6.503136,-1.455694,0.490701,-7.814344,-2.471304,-4.059549,9.002582,-3.495044,-1.794962,-2.341169,6.465495,5.332046,-5.806721,-9.499103,6.847706,-2.977123,-3.839868,4.042602,8.808679,-5.993104,-1.605292,-7.299091,2.194267,4.932021,-4.789233,-2.458014,-4.961902,-4.572229,1.354181,-5.020914,6.964578,-5.535447,7.476093,9.689031,3.525482,4.405872,-5.464292,4.624569,-5.296548,3.607753,1.476267,1.985599,7.898453,-6.079847,-5.655893,-3.392564,6.439164,-0.922445,-6.513915,2.195523,0.293113,6.797096,-1.417464,8.220581,7.453349,-8.501390,-6.034737,4.659855,1.239379,7.096560,-3.403582,8.138684,-4.630222,4.515220,9.319346,-5.477574,4.777937,0.040271,-5.636574,-4.015265,2.128121,-8.264310,-6.493409,-7.588682,2.726340,-5.983275,5.242740,-5.117106,7.180900,-9.448575,-4.273667,1.005330,2.199295,-7.749818,-3.718426,8.725701,8.324604,0.764716,0.896656,0.261795,6.942004,8.849973,-4.610518,-0.207864,4.217575,-0.621341,5.534935,2.781570,-0.124796,6.068866,-8.847744,3.779141,-5.929534,-3.818804,-0.053167,5.843775,3.791680,-9.294653,-1.785565,3.888885,9.967603,8.948737,8.680046,2.965447,-1.346534,-8.636318,-7.775152,-1.396340,5.572070,-0.794076,4.592384,0.072838,-1.851361,-3.152474,2.977321,-6.623579,7.394301,3.873120,-4.297303,5.079933,5.493017,-3.722668,0.186173,6.438712,3.137140,-6.637630,6.231555,8.339327,2.717044,-0.643327,6.966820,2.516821,-7.029580,6.395153,-5.887325,-0.963729,5.772234,0.821208,0.040584,3.005462,-0.391547,0.834477,8.021771,-9.815279,-2.455828,5.987246,8.035062,8.849105,-0.496881,2.562806,0.797379,-3.632253,-7.749477,4.156328,-9.422898,-6.089495,-1.894587,-8.645748,-9.002001,-8.177807,3.592711,-8.821665,-6.260784,0.788667,-1.311236,3.841547,-3.761712,-3.390180,7.547149,-1.537586,-8.027441,1.750124,1.765039,1.955766,-0.231004,-4.250444,9.001339,-7.493791,-4.800295,-2.264081,-0.631776], dtype = "float64")#candidate|2091|(640,)|const|float64
call_2089 = relay.TupleGetItem(func_1232_call(relay.reshape(const_2090.astype('uint64'), [3, 15, 7]), relay.reshape(const_2091.astype('float64'), [2, 320]), relay.reshape(const_2090.astype('float64'), [3, 15, 7]), relay.reshape(const_2090.astype('float64'), [3, 15, 7]), ), 6)
call_2092 = relay.TupleGetItem(func_1237_call(relay.reshape(const_2090.astype('uint64'), [3, 15, 7]), relay.reshape(const_2091.astype('float64'), [2, 320]), relay.reshape(const_2090.astype('float64'), [3, 15, 7]), relay.reshape(const_2090.astype('float64'), [3, 15, 7]), ), 6)
output = relay.Tuple([bop_2066,const_2073,uop_2086,call_2089,const_2090,const_2091,])
output2 = relay.Tuple([bop_2066,const_2073,uop_2088,call_2092,const_2090,const_2091,])
func_2093 = relay.Function([var_2064,var_2065,], output)
mod['func_2093'] = func_2093
mod = relay.transform.InferType()(mod)
var_2094 = relay.var("var_2094", dtype = "uint16", shape = (14, 5, 15))#candidate|2094|(14, 5, 15)|var|uint16
var_2095 = relay.var("var_2095", dtype = "uint16", shape = (14, 5, 15))#candidate|2095|(14, 5, 15)|var|uint16
output = func_2093(var_2094,var_2095,)
func_2096 = relay.Function([var_2094,var_2095,], output)
mutated_mod['func_2096'] = func_2096
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2118 = relay.var("var_2118", dtype = "float64", shape = (9, 3, 8))#candidate|2118|(9, 3, 8)|var|float64
uop_2119 = relay.sinh(var_2118.astype('float64')) # shape=(9, 3, 8)
output = relay.Tuple([uop_2119,])
output2 = relay.Tuple([uop_2119,])
func_2121 = relay.Function([var_2118,], output)
mod['func_2121'] = func_2121
mod = relay.transform.InferType()(mod)
var_2122 = relay.var("var_2122", dtype = "float64", shape = (9, 3, 8))#candidate|2122|(9, 3, 8)|var|float64
output = func_2121(var_2122)
func_2123 = relay.Function([var_2122], output)
mutated_mod['func_2123'] = func_2123
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2716 = relay.var("var_2716", dtype = "uint32", shape = (16, 14, 3))#candidate|2716|(16, 14, 3)|var|uint32
const_2717 = relay.const([[[2,3,1],[9,9,-8],[-5,-9,-1],[-10,-5,-8],[-10,-3,-10],[10,-4,5],[7,5,10],[-10,-10,5],[-5,8,1],[4,-10,2],[3,1,4],[-5,2,6],[-3,6,-7],[-7,-8,-2]],[[-10,-2,5],[-10,7,8],[-9,-2,-4],[2,7,3],[9,-4,-4],[7,7,6],[-5,-2,10],[-6,4,-10],[8,-6,-10],[-7,-8,9],[1,7,7],[-10,10,7],[-2,8,10],[-4,2,3]],[[10,2,-5],[9,-6,4],[10,10,-3],[-9,-9,-1],[-7,-9,-5],[-10,4,-3],[2,5,-10],[3,-2,-7],[9,2,-5],[9,7,10],[2,-9,1],[-5,5,10],[10,3,-6],[9,-10,-5]],[[5,8,4],[8,-1,4],[10,-4,-1],[10,10,5],[8,3,-8],[-5,-2,7],[-5,4,3],[-8,9,-9],[8,4,-7],[-6,-5,-2],[-7,8,-4],[-7,-1,2],[9,6,-2],[8,6,-10]],[[1,7,2],[10,8,9],[2,-10,-7],[6,2,3],[9,-6,5],[6,-9,-3],[4,-10,-3],[6,-5,8],[-9,-9,6],[-7,-7,-8],[10,-8,8],[-1,9,7],[-4,-7,7],[2,-8,7]],[[7,7,-8],[4,-10,8],[-8,-2,-4],[-8,2,-7],[1,-5,2],[-2,-7,-1],[-5,-4,1],[-5,-4,-7],[6,7,3],[6,-3,2],[4,-4,-5],[7,-4,-5],[6,-6,-6],[9,10,-9]],[[7,-6,8],[-8,4,-7],[-9,-6,-7],[9,-10,-4],[-10,8,6],[-5,-5,-5],[-1,-7,-7],[3,-9,10],[-2,1,-6],[8,-7,-7],[4,-6,-5],[1,-4,-4],[-3,8,7],[-9,-8,3]],[[-5,-1,-7],[-3,-4,-9],[-2,6,9],[8,8,3],[3,-6,-2],[5,2,-8],[-6,-2,-2],[9,1,1],[-7,9,4],[-1,-6,7],[8,5,-8],[8,6,4],[1,5,1],[2,-4,3]],[[5,-4,-1],[-8,3,-8],[6,6,-10],[-1,6,-2],[1,-4,5],[4,3,10],[9,4,9],[4,2,9],[-10,10,8],[4,-8,-6],[-8,-4,8],[-7,-1,-10],[3,-8,-6],[4,9,4]],[[9,-9,-8],[1,-3,7],[8,10,-4],[-10,8,3],[-6,2,4],[5,3,10],[6,7,6],[-3,-9,2],[7,4,1],[-7,-6,-2],[-4,6,10],[-1,7,8],[-4,-6,5],[-10,-1,6]],[[-4,8,-2],[2,9,5],[4,-6,4],[4,4,-2],[-9,9,-7],[-3,10,2],[-6,-1,-4],[4,2,1],[-3,-3,9],[6,-8,-10],[-4,7,-4],[7,5,5],[-4,-9,1],[2,9,3]],[[-1,-5,-5],[-5,6,2],[-2,10,-7],[-9,5,5],[2,-2,-3],[6,-3,2],[-6,7,-10],[3,-8,-1],[9,-5,-2],[10,10,-2],[6,-6,10],[9,6,7],[-4,9,-5],[-8,4,9]],[[-4,7,-1],[-6,8,-8],[-1,-4,2],[4,-2,-10],[7,9,9],[-5,-7,8],[3,6,3],[10,10,10],[5,-8,1],[4,-3,-7],[-3,9,9],[1,-9,-5],[-1,-8,-9],[3,-4,-3]],[[-6,-3,1],[3,-6,-5],[8,-7,3],[1,9,6],[-10,3,9],[-1,4,6],[-5,1,-1],[-6,-2,-10],[-7,2,-10],[5,7,-6],[-6,1,-10],[-5,-6,-8],[-1,-8,7],[2,8,-1]],[[2,10,4],[8,-10,9],[-6,7,-9],[8,7,-6],[5,2,2],[2,9,-5],[-8,4,10],[10,-6,-7],[-9,-6,3],[5,-10,1],[-2,5,-7],[-4,-3,-2],[2,8,-6],[4,2,-6]],[[-1,-4,9],[4,2,-1],[-2,-3,5],[-6,7,6],[1,-1,-1],[-1,-7,5],[2,-7,1],[-3,-5,5],[-10,-9,-9],[10,-7,4],[-7,10,9],[2,-5,4],[-9,8,-3],[-5,8,-10]]], dtype = "uint32")#candidate|2717|(16, 14, 3)|const|uint32
bop_2718 = relay.not_equal(var_2716.astype('bool'), relay.reshape(const_2717.astype('bool'), relay.shape_of(var_2716))) # shape=(16, 14, 3)
func_1872_call = mod.get_global_var('func_1872')
func_1874_call = mutated_mod.get_global_var('func_1874')
var_2723 = relay.var("var_2723", dtype = "float64", shape = (4, 16))#candidate|2723|(4, 16)|var|float64
call_2722 = relay.TupleGetItem(func_1872_call(relay.reshape(var_2723.astype('float64'), [64,])), 4)
call_2724 = relay.TupleGetItem(func_1874_call(relay.reshape(var_2723.astype('float64'), [64,])), 4)
uop_2733 = relay.sin(var_2716.astype('float32')) # shape=(16, 14, 3)
func_2093_call = mod.get_global_var('func_2093')
func_2096_call = mutated_mod.get_global_var('func_2096')
const_2738 = relay.const([9,-9,4,5,-10,-6,-7,4,7,9,9,9,4,-4,-8,-7,5,-9,5,3,-8,-10,-5,6,4,-9,7,-10,6,7,-7,1,10,2,-4,3,-5,9,-7,-4,-2,6,1,-10,2,-10,-2,2,1,-7,1,6,-3,8,2,1,-4,-3,2,3,1,-4,4,-4,2,-9,3,8,2,4,-9,10,-1,-10,8,-9,-9,-1,1,-8,-1,5,-4,-8,9,2,8,-1,7,-3,7,4,-5,8,4,-8,-5,-9,-5,5,10,4,-1,10,-8,-3,-5,10,-3,7,-4,-2,-5,8,-7,-6,8,6,4,-7,9,7,8,7,6,1,-6,-1,-4,-2,9,8,9,9,2,-8,-10,8,-4,1,6,2,-5,-4,1,7,-8,-9,1,-10,6,5,-5,-3,-7,-9,-6,-6,3,9,-7,-3,-5,2,10,10,-2,-9,-9,5,7,-8,4,-8,-3,-2,5,-5,-10,8,-9,-6,-5,-7,9,8,-6,3,-10,1,-7,-4,-2,5,-6,-2,3,-7,6,3,-5,-3,9,5,6,5,-8,-8,-9,-2,7,-3,5,1,3,-7,6,3,8,7,1,7,-2,-2,7,-8,-10,-5,3,6,-9,-6,5,-2,-7,-6,2,10,6,7,-5,-8,-7,2,10,-6,5,5,3,-4,6,-9,-3,2,-10,-5,-5,-4,7,-2,5,7,10,-1,-7,3,5,2,10,7,5,7,-4,-2,-6,-9,2,3,6,-5,1,6,2,3,-4,-4,-2,-8,-3,-1,-5,-3,4,9,2,-5,-5,-6,-9,-1,-1,1,-9,2,-1,2,-1,3,1,-9,7,5,-5,7,1,-8,-4,-6,9,-4,8,8,-10,-9,2,-5,4,-9,10,4,7,-2,2,-3,-5,-5,4,6,-4,-7,5,-5,10,7,-3,1,-4,10,-10,-10,1,-8,9,-9,9,9,-7,-2,-8,9,3,-1,1,-4,6,6,9,2,-7,1,8,1,-4,-4,-3,6,-3,2,10,-6,10,-4,5,-9,1,-10,1,6,-2,8,5,1,10,-1,9,-7,-9,-2,-10,-9,-2,-8,8,-8,6,8,-1,7,-4,2,-6,-4,3,-1,8,2,7,-5,-5,5,-1,3,4,3,-10,1,7,3,1,1,-4,-9,4,-5,-9,10,-3,-3,-5,-5,3,-3,9,-10,-1,-2,-5,-5,-7,6,3,7,1,5,8,10,-3,-4,8,7,-7,6,9,9,-4,-3,4,-4,-10,10,-8,1,-3,6,-9,3,-9,7,10,6,-2,-10,-7,-1,3,6,10,-3,-2,-6,-1,8,6,9,-3,10,4,-2,-4,9,-2,7,4,-7,-8,-9,10,8,-5,3,-2,3,-1,-8,-8,2,-3,4,-6,4,-5,-2,4,-2,7,-7,6,-8,7,-4,2,-6,3,-10,4,5,-1,-4,-7,2,-2,6,2,-7,-9,-5,6,-3,3,10,-9,7,-3,3,-7,-7,-7,-7,6,-8,-4,3,-4,9,-2,-7,5,3,6,10,-2,-4,-10,7,-6,3,6,10,-2,9,9,7,1,3,-7,-1,-10,7,6,7,9,-2,6,6,10,-6,-5,-4,-4,-4,-2,9,1,-3,1,1,-2,6,-4,7,-10,-4,7,-3,-6,9,3,-9,5,-3,4,4,-8,3,3,-7,-5,1,-10,-3,1,-2,2,-1,3,-1,10,2,-6,-10,-9,5,10,7,8,6,-4,8,-2,-2,6,4,9,-4,3,7,2,7,5,2,4,7,-10,5,-5,-9,-10,-7,-8,-5,6,2,-3,-10,3,-6,-3,6,-7,5,7,2,-6,-6,9,-7,3,-3,-8,-7,-6,-9,-5,2,9,-5,-1,4,6,-4,-3,-2,-10,-5,7,-1,-4,-1,9,-2,-1,5,-3,-1,-10,6,8,2,-2,-8,10,3,2,-4,9,9,2,-4,-4,-4,2,2,9,-7,2,9,5,-7,-7,-7,-4,4,2,-10,5,-5,-5,6,-10,4,-8,-3,6,9,-10,8,5,-9,-2,-7,5,3,-8,6,3,9,3,-4,1,-10,10,-4,-2,3,-6,-10,-2,-2,3,8,6,-5,9,-7,3,-1,5,-7,10,10,10,-6,-2,-3,-4,1,8,10,7,8,-3,2,-4,-5,-1,-10,-5,-7,5,-2,-3,-1,-10,8,8,-7,5,-1,2,-7,10,-8,-6,-2,5,1,8,8,-5,-7,-2,-4,-8,10,-10,3,-4,5,-5,2,2,5,7,1,-10,5,-5,-3,-3,-10,-9,2,-7,-5,5,-10,3,8,9,-4,-8,-2,-9,3,-7,-6,10,-10,-5,7,4,-7,-5,7,-4,4,1,2,-1,3,-10,4,6,-6,1,-1,3,2,-4,-3,-1,10,-2,-3,9,-1,-6,10,-1,5,4,-10,5,-6,-10,-5,5,-4,-8,-10,-6,8,7,6,-8,3,6,-2,5,9,-6,-8,-10,10,3,6,2,-3,-6,9,1,-8,5,-9,-8,8,1,-7,-10,10,6,5,4,4,-7,5,-7,7,5,-2,2,-8,-6,5,-1,-9,5,-4,-2,-8,-3,8,-8,-10,1,-7,-2,6,-2,-3,-8,-10,6,1,-2,6,-3,-5,-9,5,9,-3,-9,-10,-3,-1,-5,3,7,-1,4,6,4,-10,8,-5,7,9,-10,-4,4,-4,-8,-2,3,-6,3,-4,-3,3,10,-8,7,-3,-8,10,4,-1,-8,-9,-8,-8,7,9,-6,9,2,1,7,-6,2,-7,7,3,2,-8,9,1,-8,3,-5,-8,-4,-6,-4,7,10,4,-1,5], dtype = "uint16")#candidate|2738|(1050,)|const|uint16
call_2737 = relay.TupleGetItem(func_2093_call(relay.reshape(const_2738.astype('uint16'), [14, 5, 15]), relay.reshape(const_2738.astype('uint16'), [14, 5, 15]), ), 5)
call_2739 = relay.TupleGetItem(func_2096_call(relay.reshape(const_2738.astype('uint16'), [14, 5, 15]), relay.reshape(const_2738.astype('uint16'), [14, 5, 15]), ), 5)
output = relay.Tuple([bop_2718,call_2722,var_2723,uop_2733,call_2737,const_2738,])
output2 = relay.Tuple([bop_2718,call_2724,var_2723,uop_2733,call_2739,const_2738,])
func_2751 = relay.Function([var_2716,var_2723,], output)
mod['func_2751'] = func_2751
mod = relay.transform.InferType()(mod)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2751_call = mutated_mod.get_global_var('func_2751')
var_2753 = relay.var("var_2753", dtype = "uint32", shape = (16, 14, 3))#candidate|2753|(16, 14, 3)|var|uint32
var_2754 = relay.var("var_2754", dtype = "float64", shape = (4, 16))#candidate|2754|(4, 16)|var|float64
call_2752 = func_2751_call(var_2753,var_2754,)
output = call_2752
func_2755 = relay.Function([var_2753,var_2754,], output)
mutated_mod['func_2755'] = func_2755
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2826 = relay.const([[[4.085611,-0.786739,1.398848],[8.252902,3.993126,-1.414537],[-1.671699,8.105397,-3.280917],[3.381380,-0.558662,0.072281],[-3.352103,-2.992676,2.641779]],[[9.576383,-0.622420,1.939241],[3.661288,9.675773,-5.158640],[-4.098045,-2.482435,5.801875],[2.220404,5.789493,-0.479003],[-8.256321,-7.113932,-9.152236]],[[-6.580464,-5.144541,-4.544898],[-5.174183,-2.320014,-1.722870],[-9.945447,8.356601,-8.334962],[1.475074,3.083914,6.638308],[3.802949,-6.866780,4.604907]],[[-5.053171,-9.975988,-9.407922],[-3.331727,7.043330,6.233923],[8.454481,-3.702445,-3.761006],[4.929035,-1.367838,8.917833],[-2.534679,6.574480,-2.900609]],[[-0.253414,-5.842924,9.012018],[6.039700,-4.882048,-5.341541],[-3.997471,6.072209,-7.160760],[-8.363929,3.376427,-2.283072],[-5.670167,-6.689094,5.930613]],[[-2.276836,9.709610,4.305546],[-3.110856,-9.023011,1.956950],[-8.560166,8.510913,-2.703603],[7.563901,0.986348,-0.057614],[3.560734,1.261954,-2.363860]],[[-8.233318,-0.001459,-4.105327],[-1.822047,-2.020929,5.134834],[5.068085,5.199288,0.162010],[-3.635811,-7.220345,6.894522],[8.924366,-8.001872,-4.104250]],[[-6.459332,5.175648,-5.317922],[-1.005060,-1.668839,-7.939365],[-6.271318,6.556191,-1.455022],[9.497062,-5.807735,-3.691680],[-5.271665,-2.934162,-6.216808]],[[-1.889925,-7.204041,5.015606],[9.653721,5.028030,-9.662889],[5.422424,-6.682961,4.174223],[8.060150,7.401584,-8.382031],[0.396434,-2.695853,0.338780]],[[8.798333,1.786487,-7.243999],[-5.989552,-0.372452,2.376722],[6.980919,4.152398,-6.040539],[-1.703828,8.319144,6.431075],[-7.037085,5.445733,-9.206309]],[[6.101814,-3.240624,7.842876],[-6.172686,-3.291923,-9.573129],[6.972937,-0.477204,4.307281],[8.577652,-5.152666,5.913374],[2.373300,-7.017949,-0.288712]],[[3.566994,-8.314307,-1.517765],[-4.233257,-5.080346,8.509447],[4.339559,-6.161609,2.654306],[-5.697189,-9.854671,-1.550369],[-7.343941,2.419905,-4.921200]]], dtype = "float32")#candidate|2826|(12, 5, 3)|const|float32
const_2827 = relay.const([[[4.348167,4.825900,-0.602439],[-4.771801,-1.133710,2.789202],[4.865324,5.761444,8.871468],[1.489962,-2.036729,3.295427],[8.354272,2.100934,1.048943]],[[-1.360781,9.264838,-0.117958],[4.314870,-9.861080,8.654384],[3.639351,1.986238,1.839913],[-0.629367,-6.538340,-4.624997],[1.643893,-0.070867,2.836484]],[[-2.347926,8.827101,8.414651],[4.403009,-8.603086,-0.353674],[3.687490,-3.702165,-2.530029],[6.237378,1.741176,3.933656],[6.354935,0.514520,-1.401276]],[[9.423752,-0.656290,-6.842553],[6.618007,9.425016,6.404837],[3.002602,4.759700,4.848889],[7.541601,8.030042,0.951685],[3.828181,3.019052,-5.834781]],[[7.067301,-8.489718,-2.511247],[-2.133817,-6.333343,-4.374283],[1.724843,-1.338267,7.473148],[3.072044,-9.095525,7.874950],[9.302403,8.316763,-7.118954]],[[-9.567632,1.082262,9.306675],[2.003487,9.020982,4.545006],[6.027364,3.892020,-0.629221],[-4.243025,-8.670437,-6.183467],[-1.042700,-4.783433,-9.354556]],[[3.366102,-6.489814,-2.780065],[5.973385,8.522162,8.257265],[-9.668373,-8.004279,8.807386],[-9.576944,-5.309336,-8.188631],[0.600989,-9.175123,-8.068863]],[[-8.516246,-6.870747,7.612224],[-6.659370,-9.038820,8.461313],[6.100023,8.773780,-1.558666],[-8.798545,-7.481861,6.488554],[2.590589,3.530512,-4.068151]],[[-7.622813,9.998923,5.389058],[9.757544,3.002603,-7.045642],[-3.779630,-6.067245,5.072195],[-6.650218,-6.032178,-8.979031],[8.534349,-9.300876,9.444090]],[[4.717927,0.696610,-7.706728],[6.843480,-2.922768,-2.382901],[8.279160,-7.347136,-0.069198],[-3.948375,1.738754,8.989467],[-4.112619,3.924047,2.793479]],[[5.425284,4.367735,0.207087],[-7.693099,2.477723,-2.734318],[0.600946,-7.113812,7.097884],[5.788974,4.871666,-0.016407],[-0.563988,-1.113629,8.784453]],[[-4.111135,-5.451856,6.614388],[-6.409378,-0.561958,1.891381],[0.488242,-0.119811,-6.268061],[-1.718496,-6.762326,7.740281],[-1.957576,1.168354,7.953579]]], dtype = "float32")#candidate|2827|(12, 5, 3)|const|float32
bop_2828 = relay.divide(const_2826.astype('float32'), relay.reshape(const_2827.astype('float32'), relay.shape_of(const_2826))) # shape=(12, 5, 3)
output = relay.Tuple([bop_2828,])
output2 = relay.Tuple([bop_2828,])
func_2833 = relay.Function([], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mutated_mod.get_global_var('func_2833')
call_2834 = func_2833_call()
output = call_2834
func_2835 = relay.Function([], output)
mutated_mod['func_2835'] = func_2835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_2927 = relay.TupleGetItem(func_2833_call(), 0)
call_2928 = relay.TupleGetItem(func_2835_call(), 0)
uop_2933 = relay.asinh(call_2927.astype('float64')) # shape=(12, 5, 3)
uop_2935 = relay.asinh(call_2928.astype('float64')) # shape=(12, 5, 3)
uop_2939 = relay.cos(uop_2933.astype('float32')) # shape=(12, 5, 3)
uop_2941 = relay.cos(uop_2935.astype('float32')) # shape=(12, 5, 3)
var_2952 = relay.var("var_2952", dtype = "float32", shape = (12, 5, 3))#candidate|2952|(12, 5, 3)|var|float32
bop_2953 = relay.right_shift(call_2927.astype('int64'), relay.reshape(var_2952.astype('int64'), relay.shape_of(call_2927))) # shape=(12, 5, 3)
bop_2956 = relay.right_shift(call_2928.astype('int64'), relay.reshape(var_2952.astype('int64'), relay.shape_of(call_2928))) # shape=(12, 5, 3)
const_2962 = relay.const([[[-0.026396,0.144575,-3.416432],[-2.387159,0.370707,5.035305],[1.601035,-7.723501,-8.829735],[3.711112,0.149677,1.700086],[-7.124078,-0.313189,-5.234923]],[[7.103339,-8.702554,4.919842],[7.086556,2.867496,-6.682090],[9.585661,1.886880,4.520711],[1.355210,-9.726076,-3.114039],[-4.691296,-0.317442,-2.296422]],[[-0.928837,-5.150893,-6.100427],[2.732947,0.845205,-7.974386],[2.808701,2.460653,-9.732488],[-2.450096,9.315924,-0.612703],[4.811015,5.239864,8.448877]],[[-1.576372,4.757260,-3.293350],[-5.736494,-3.254620,9.283426],[2.357866,-4.006332,3.128188],[-9.353214,4.048532,-1.925959],[8.777104,-7.163249,-8.122406]],[[-0.833846,-1.383603,3.201909],[-4.639128,-0.423111,0.593079],[7.662363,0.673865,-0.717158],[-7.113143,-4.674462,-0.736771],[0.948561,-8.563951,-7.918608]],[[4.635300,8.581131,8.317911],[5.208466,7.693452,-6.588409],[0.002627,2.873665,5.539097],[3.548264,-2.111314,6.308520],[-8.007177,3.024557,6.299354]],[[0.354178,-3.938963,-3.604661],[6.755784,6.246700,0.420037],[-1.792079,-9.560783,0.187112],[1.773143,5.618934,6.966832],[-7.026809,-4.492600,-0.512545]],[[-3.540461,-0.285473,9.722940],[-3.311472,-3.451321,0.333717],[8.354714,-7.211148,2.794891],[5.121953,-6.911602,9.350401],[-6.317123,-7.874669,8.323131]],[[-1.957890,-1.849652,-4.277431],[5.718830,3.025694,7.827879],[2.341000,-8.701146,-5.657710],[-5.078815,-2.948933,-4.728623],[-5.703027,2.153533,3.535530]],[[1.975828,-8.885065,7.325455],[0.962869,8.874785,-3.697574],[9.866662,4.146508,-6.944614],[-8.054790,-6.126941,7.819751],[-8.557529,5.677317,-1.233315]],[[-9.074960,-0.572551,-3.739665],[7.527636,-5.508109,-9.786508],[0.482165,-0.467051,2.151417],[-3.152146,4.656055,-7.654288],[-1.169415,-3.022855,-8.747263]],[[-2.354509,6.387494,-2.172423],[-3.044947,4.638000,-9.291454],[-8.680171,-1.639010,7.095553],[3.054020,3.468040,-8.567808],[0.540878,-3.891539,-1.257761]]], dtype = "float32")#candidate|2962|(12, 5, 3)|const|float32
bop_2963 = relay.minimum(uop_2939.astype('uint64'), relay.reshape(const_2962.astype('uint64'), relay.shape_of(uop_2939))) # shape=(12, 5, 3)
bop_2966 = relay.minimum(uop_2941.astype('uint64'), relay.reshape(const_2962.astype('uint64'), relay.shape_of(uop_2941))) # shape=(12, 5, 3)
output = relay.Tuple([bop_2953,bop_2963,])
output2 = relay.Tuple([bop_2956,bop_2966,])
func_2968 = relay.Function([var_2952,], output)
mod['func_2968'] = func_2968
mod = relay.transform.InferType()(mod)
mutated_mod['func_2968'] = func_2968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2969 = relay.var("var_2969", dtype = "float32", shape = (12, 5, 3))#candidate|2969|(12, 5, 3)|var|float32
func_2968_call = mutated_mod.get_global_var('func_2968')
call_2970 = func_2968_call(var_2969)
output = call_2970
func_2971 = relay.Function([var_2969], output)
mutated_mod['func_2971'] = func_2971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_3011 = relay.TupleGetItem(func_2833_call(), 0)
call_3012 = relay.TupleGetItem(func_2835_call(), 0)
func_365_call = mod.get_global_var('func_365')
func_367_call = mutated_mod.get_global_var('func_367')
const_3019 = relay.const([[-0.383269,5.605503,-3.311100,5.574646,4.728197,-0.655012,1.390186,4.498569,-5.624833,1.247409,-7.166370,6.899427],[-3.391715,4.586029,-8.560028,-6.242453,1.429427,-1.474742,-5.314846,-9.444770,-2.933769,9.697794,-7.443830,9.507664],[-0.060018,0.752309,-6.466887,9.684002,6.438741,1.374704,4.329641,-1.923424,-2.094744,-2.741797,-4.928170,-4.256540],[-4.853633,4.410839,-2.145023,1.934764,1.510534,-0.306955,2.027674,9.937825,-8.249421,-0.771720,-9.746905,9.534163],[0.070922,4.770301,-7.509379,4.391573,2.509495,9.819198,0.193848,-1.190645,8.512500,-5.653436,-6.278794,-9.751894],[2.014944,0.689595,5.991914,-3.862394,-6.286463,0.371871,7.396251,5.965980,7.109404,-5.962106,2.304209,9.115148],[6.909799,2.751778,8.277190,5.898732,-2.572449,-5.108852,5.541477,2.338498,4.577169,-2.242682,0.333403,5.214443],[-6.639565,6.477390,5.621773,-8.182424,-7.158763,-4.647084,1.580138,-9.237404,-2.830993,-5.322907,3.756262,-8.793322],[-5.917866,9.184166,-6.922026,-3.199574,9.523675,8.486228,-3.274698,8.015652,8.287919,0.370716,9.789733,8.893397],[-4.219811,5.943517,0.939208,-9.474242,-1.016702,2.703829,4.422403,0.866323,1.733652,2.764439,5.940122,-8.471235],[-0.741258,9.828441,-4.002387,-7.211020,-0.204721,-8.666929,5.601327,7.895511,1.710675,-7.174545,-2.251764,0.588377],[-8.204903,-1.383684,1.398982,5.899664,-9.930487,-4.322043,5.739151,9.296888,-2.065659,6.899583,2.002012,-3.930668],[3.285649,4.023918,-8.747755,2.538848,0.071136,-1.102173,-1.253296,-2.572469,0.492923,8.634446,8.947600,-0.529269],[7.212535,7.643232,3.496526,1.683504,7.074924,-5.652152,3.380910,-9.167189,8.771125,3.408752,-1.715135,-2.213464],[-9.862774,-8.720608,1.645669,-3.367432,-0.623201,8.620317,9.144971,-8.517212,3.100958,-7.042080,-2.610935,4.170110],[-9.397808,-8.257512,-3.500703,-7.819996,-7.687689,1.274757,5.733337,-5.988460,6.533793,9.244712,-6.983163,7.771655],[6.266527,-1.176993,9.725931,4.070713,3.814244,-0.962479,5.840722,-0.173654,-7.696765,8.489454,8.995669,3.817019],[0.315495,5.515965,7.285258,1.863644,9.969674,-6.764163,2.235055,-0.226609,0.687828,-2.809574,2.063172,8.712161],[-9.206350,0.340542,-2.959146,1.685997,-3.326023,-7.874129,7.072065,-1.051108,6.422769,5.365421,-3.836996,1.823071],[6.860892,-5.299146,4.209124,-8.063184,-7.841741,5.507323,-0.879974,-3.982680,-0.035506,-2.356419,-1.256953,-3.005180],[-4.749092,-0.232654,7.445734,-4.992855,-1.056225,5.751928,-5.301780,7.881096,1.943016,-2.136208,8.815519,-3.326978],[1.878687,-1.537030,8.315313,6.017871,-4.474139,7.598099,-7.473246,-4.978799,-0.904364,-0.129980,4.797218,-9.888985],[-9.077766,1.713943,7.161422,3.523441,-7.219824,9.558251,-2.868041,6.926360,-5.922909,-6.412053,4.379571,8.572925],[-2.733766,-4.284605,-8.581891,8.554788,5.519339,-7.958186,-8.428736,4.523777,2.994446,5.585670,-7.583180,9.812224],[2.011044,1.450511,-9.898456,-6.508238,-2.096107,1.066844,3.660171,1.047561,6.204984,-9.208198,-7.542087,-3.639227],[-0.856007,0.237757,8.051508,7.126337,9.044543,2.794650,-3.050483,-1.569035,-1.770313,0.918615,-9.382801,0.974768],[-5.467317,-5.705834,2.781660,4.495832,-5.779124,-3.782108,7.835332,-9.905087,-5.004413,-8.879417,3.820492,8.067254],[-1.122707,-7.472861,-7.643092,-3.191614,4.744215,5.657363,-6.861783,-9.083951,3.179627,-6.096137,-7.946222,8.515883],[-7.239800,2.012300,3.384124,9.179415,1.006521,-8.438183,9.514975,9.688300,0.691707,-3.194599,7.313081,-5.514815],[2.563207,0.628748,1.662263,5.359533,-1.278712,-0.439430,4.546019,-0.403082,8.239547,-6.500041,4.146305,2.514106],[-5.952717,-4.395174,-6.010657,0.144860,9.329568,9.926026,7.896549,-8.268911,-8.306139,9.994823,1.344199,-6.906207],[7.294848,6.951575,-4.327920,8.917640,-3.700687,-3.653010,7.727119,2.235157,-0.034223,4.083463,2.995044,-8.312038],[-9.071251,0.230668,7.836753,-0.982704,8.483538,9.663101,-1.230760,-5.194480,6.217831,6.313644,-6.233572,5.606715],[-4.550377,7.910817,9.751362,6.105623,2.878407,5.362359,-8.962710,4.760153,7.052736,-6.425714,-4.149831,1.898057],[1.384465,-5.430887,4.591857,0.853046,-1.765852,0.386358,-8.649724,-1.722079,7.175796,-2.117011,0.594998,5.293513],[-4.892848,5.701879,6.176585,-1.456354,3.824118,-1.198070,2.321857,-6.023415,-7.470658,8.954680,-8.750040,6.928725],[2.294990,-9.084018,6.051089,2.354511,3.467804,-1.789312,2.945334,6.018069,6.836174,6.623515,4.151130,6.640674],[4.219954,-0.745670,-3.280882,-5.196104,1.871744,-2.729200,-6.263157,8.201691,-4.171039,-5.851623,-9.095049,8.286532],[-0.796911,-8.029231,-7.991151,0.913541,-1.448474,-6.335936,4.237289,-4.603195,6.466190,-8.609770,9.118673,6.380939],[6.206183,2.056622,2.422185,-2.507309,-9.745040,-4.244761,-3.985507,-6.650009,1.384237,2.570067,8.139066,-4.031170]], dtype = "float32")#candidate|3019|(40, 12)|const|float32
call_3018 = relay.TupleGetItem(func_365_call(relay.reshape(const_3019.astype('float32'), [8, 12, 5])), 0)
call_3020 = relay.TupleGetItem(func_367_call(relay.reshape(const_3019.astype('float32'), [8, 12, 5])), 0)
output = relay.Tuple([call_3011,call_3018,const_3019,])
output2 = relay.Tuple([call_3012,call_3020,const_3019,])
func_3022 = relay.Function([], output)
mod['func_3022'] = func_3022
mod = relay.transform.InferType()(mod)
output = func_3022()
func_3023 = relay.Function([], output)
mutated_mod['func_3023'] = func_3023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3027 = relay.TupleGetItem(func_3022_call(), 0)
call_3028 = relay.TupleGetItem(func_3023_call(), 0)
uop_3039 = relay.tan(call_3027.astype('float64')) # shape=(12, 5, 3)
uop_3041 = relay.tan(call_3028.astype('float64')) # shape=(12, 5, 3)
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
const_3048 = relay.const([[-8.978699,1.757162,9.526264,-3.389130,3.219557,-4.579844,6.385214,-9.321986],[-1.350037,4.764148,2.618267,3.771459,-9.019103,5.503789,7.360442,-8.605913],[7.064070,-5.237432,-2.977445,2.938384,-5.908478,-9.584861,-8.687573,-8.665712],[-0.037977,-1.422689,-1.330260,-3.754423,-0.531201,4.960443,-5.000854,8.356999],[7.101936,-1.868895,-7.569180,-1.975674,2.641201,3.231617,4.165724,7.540178],[8.632295,4.372864,7.680099,-9.893723,-9.052197,-7.495399,7.350335,-2.526270],[9.481453,-6.480989,0.713250,-4.410655,5.921597,-7.605452,5.703266,-1.681707],[3.550403,-3.008847,0.538757,2.752101,8.656127,-2.480686,0.913160,1.192149],[-5.301999,2.364219,-4.022977,-1.206135,5.031521,-9.599988,-0.999737,8.920402],[2.713756,1.805201,-6.854376,-5.999479,-7.400990,-8.015296,6.352886,-6.140436],[9.573901,6.867969,4.899816,5.069521,-0.352669,-9.620766,8.631375,4.326800],[4.718458,7.608568,8.634432,5.055345,4.276628,1.141593,-7.278962,-9.412328],[6.945870,1.577002,3.647618,1.392446,9.235351,1.532301,1.554372,2.525097],[1.858729,-9.721432,-7.291093,-4.594737,3.154805,-9.220491,1.468106,0.731057],[9.317841,9.859301,-4.203962,-7.856003,-3.404291,-6.028996,-0.672768,1.537958],[-9.583900,-0.195033,9.889869,-5.132363,5.338374,-9.915982,3.740328,5.572905],[4.572242,-7.907910,-8.490469,5.909091,-3.930107,-0.760405,8.646896,-2.785549],[-4.810102,-0.305122,6.589590,-1.020697,3.481908,0.916135,0.054993,9.955280],[2.562750,-9.757866,6.227329,1.096687,4.879375,-0.429037,1.387095,-7.834132],[-7.518462,4.466809,-6.259793,-8.850869,8.423330,-1.006973,-4.559919,2.506402],[8.138551,9.886940,9.030526,-3.280692,3.584631,6.488098,2.071858,-0.690271],[-9.178013,4.243655,2.379679,-0.795047,4.107969,0.741591,6.661140,-5.716290],[-4.900235,4.309571,-0.933558,-3.804471,-5.511705,-3.003812,-4.034561,9.943511],[-0.706810,1.175152,-7.043244,-5.864047,-3.653512,-8.567931,-7.509710,0.383534],[-3.189325,-4.423924,-6.070201,-3.040531,-0.095037,2.389323,8.602326,9.958656],[6.668943,-1.606285,7.557533,-6.431741,-0.349397,1.520335,8.808825,-7.670453],[7.014406,-7.352691,1.813788,-7.840733,7.423994,-7.389691,2.949767,-4.057184],[-2.490322,-6.641821,-1.344553,-3.026412,3.773426,8.908238,-0.673479,7.138870],[1.693548,1.187657,-0.732545,-2.808722,8.188490,6.691441,9.162621,-0.241410],[-6.967154,3.764387,9.214718,8.603859,4.095653,8.389628,-3.653275,8.847362],[-3.604153,7.294613,-3.827784,-4.366981,-6.379305,-1.789543,2.970380,-9.019852],[-3.688099,-4.747021,2.505465,-5.345318,1.424773,-6.219297,-4.589836,5.585134],[-2.078181,-0.357800,-6.584195,4.056218,-0.994276,-2.648358,-0.513003,8.156779],[-4.209163,-0.105510,9.212403,-3.162292,-4.077118,7.508858,-9.167602,4.197040],[3.410967,-9.552498,-7.369130,-7.844727,5.598777,-7.584215,4.918303,-8.374014],[-8.821579,9.848432,-6.322589,-5.112165,-5.393081,4.925196,-0.240651,-4.882034],[-7.144240,8.010271,-7.803413,4.416421,2.084674,7.819657,9.743272,-5.174193],[-3.751575,-5.041765,-8.746304,3.855451,-3.559757,4.846155,8.875720,-8.521255],[-4.339715,-8.594323,2.408156,6.420061,6.375012,-7.704360,-1.869580,-8.439393],[-2.080258,1.387616,2.941540,-3.672940,-6.460506,-3.511822,8.586824,5.669079],[9.996863,-1.280234,-3.772513,0.142458,-9.977051,-6.330194,-7.155897,7.399949],[4.877538,2.104306,9.968201,-6.033321,-3.258657,4.642357,3.776660,2.497728],[-0.623535,-6.881427,0.564738,-6.672621,3.950160,4.554875,-8.320825,-1.076240],[3.456225,-0.504097,5.465824,-2.917662,-0.489049,6.343152,5.157450,-7.066540],[-0.461711,-1.048913,-3.682642,9.275475,5.780215,9.328838,1.290081,-0.208662],[-1.864444,1.852340,8.673561,9.243272,6.729546,-6.799750,3.006111,-2.239915],[3.123033,-1.001353,-5.118568,6.141560,-1.698108,9.249842,-6.169235,-1.236436],[-9.661585,3.076101,-9.537207,1.706625,4.704665,-3.541103,-9.573885,6.568675],[3.184540,2.396473,7.631852,3.158295,-8.335401,-5.583475,-0.069357,9.602618],[-4.282075,4.639207,4.183664,2.414650,-0.781275,2.116379,-7.200577,-4.527613],[-7.516012,2.991313,-1.506047,4.435624,8.055806,1.162872,9.473850,0.023555],[3.820967,-6.194653,4.241311,-3.622568,0.586954,4.203288,-4.977103,8.620780],[1.564879,-3.045830,7.202795,-3.564698,7.842141,7.295202,-3.067361,2.422196],[9.286251,-8.799530,7.282871,-2.472474,3.043729,-1.425201,6.764140,-3.859218],[4.861604,-5.320555,6.759287,0.875048,-0.070652,8.466809,0.285343,2.628723],[-2.353602,-7.600449,-8.126941,-9.354852,-7.755219,2.310681,-9.249512,-2.877123],[-8.675607,-0.412745,-9.579353,5.324520,-6.063541,8.053150,0.312013,-2.363481],[6.882000,0.818351,5.740233,2.793185,-1.010006,1.866044,-3.553164,-7.877646],[-7.131106,-8.876817,0.596954,-9.730024,-4.047037,0.907425,-7.954653,0.050492],[-4.314395,5.411339,-5.792298,7.770670,9.242670,3.716536,4.776060,-5.822670],[6.222844,-6.237723,-9.997196,-2.179084,-8.577692,-8.193269,-2.092106,-4.088819],[-2.907676,-3.935957,-9.445409,-3.112256,3.255254,-3.529895,1.492973,-9.460008],[6.131766,6.305073,8.408350,5.594949,-4.440408,-4.182515,2.568713,1.638782],[-3.752498,8.789643,-5.281492,-4.137207,1.642928,-2.738726,-2.525884,0.532841],[8.815364,8.193637,1.502943,-6.116421,1.136755,-0.394372,-3.048058,-9.218550],[4.960526,7.827943,0.403868,3.096918,-6.807297,-6.339227,4.004226,5.153809],[-2.184219,0.998022,5.292285,7.970751,7.945684,5.968154,-5.814593,-9.165915],[2.564561,2.409868,-5.899543,-2.531949,-1.181521,9.947938,-1.342301,-0.292799],[1.217029,-6.589485,6.672013,8.085760,8.122817,-0.261415,0.240474,-8.434863],[5.878376,3.807252,-2.033884,-3.006344,-2.099392,-6.791054,-2.836838,-5.513906],[4.739139,-3.939276,-9.278868,4.250324,4.873934,9.447462,-5.228598,7.701356],[8.340841,0.537613,-2.977709,-1.800846,4.371748,-8.159450,7.666333,-7.276472],[0.706756,-8.884192,-9.482985,-3.257616,3.958826,-5.967341,2.306201,8.489058],[2.416729,-6.751986,0.199129,-2.881286,-6.992063,-5.537289,9.882288,-2.272623],[-5.970786,4.823926,-0.925969,-3.437600,6.835923,1.738131,-6.116149,-7.905151],[-5.558609,-7.983896,6.450829,-8.863100,4.599899,-0.998683,0.930353,5.569853],[0.702904,6.617609,-6.672250,4.475689,-2.249135,-7.734950,-9.729541,-4.765587],[-9.886066,-9.021167,-0.906577,6.353092,5.951958,-8.601993,-7.988080,-4.816921],[-8.459562,2.650034,4.114631,3.812634,0.527065,2.822757,-7.026096,-8.652873],[-8.782791,-7.139540,-7.795799,-1.681115,6.511231,-4.853131,-2.123543,5.725818]], dtype = "float64")#candidate|3048|(80, 8)|const|float64
call_3047 = relay.TupleGetItem(func_388_call(relay.reshape(const_3048.astype('float64'), [8, 16, 5])), 0)
call_3049 = relay.TupleGetItem(func_391_call(relay.reshape(const_3048.astype('float64'), [8, 16, 5])), 0)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_3053 = relay.TupleGetItem(func_2833_call(), 0)
call_3054 = relay.TupleGetItem(func_2835_call(), 0)
bop_3065 = relay.bitwise_or(uop_3039.astype('int8'), relay.reshape(call_3027.astype('int8'), relay.shape_of(uop_3039))) # shape=(12, 5, 3)
bop_3068 = relay.bitwise_or(uop_3041.astype('int8'), relay.reshape(call_3028.astype('int8'), relay.shape_of(uop_3041))) # shape=(12, 5, 3)
func_979_call = mod.get_global_var('func_979')
func_983_call = mutated_mod.get_global_var('func_983')
var_3073 = relay.var("var_3073", dtype = "float32", shape = (616,))#candidate|3073|(616,)|var|float32
call_3072 = relay.TupleGetItem(func_979_call(relay.reshape(var_3073.astype('float32'), [7, 11, 8]), relay.reshape(var_3073.astype('float32'), [7, 11, 8]), ), 0)
call_3074 = relay.TupleGetItem(func_983_call(relay.reshape(var_3073.astype('float32'), [7, 11, 8]), relay.reshape(var_3073.astype('float32'), [7, 11, 8]), ), 0)
uop_3075 = relay.sigmoid(call_3053.astype('float64')) # shape=(12, 5, 3)
uop_3077 = relay.sigmoid(call_3054.astype('float64')) # shape=(12, 5, 3)
func_222_call = mod.get_global_var('func_222')
func_226_call = mutated_mod.get_global_var('func_226')
var_3079 = relay.var("var_3079", dtype = "float64", shape = (64,))#candidate|3079|(64,)|var|float64
call_3078 = relay.TupleGetItem(func_222_call(relay.reshape(var_3079.astype('float64'), [8, 4, 2]), relay.reshape(var_3079.astype('float64'), [8, 4, 2]), ), 1)
call_3080 = relay.TupleGetItem(func_226_call(relay.reshape(var_3079.astype('float64'), [8, 4, 2]), relay.reshape(var_3079.astype('float64'), [8, 4, 2]), ), 1)
bop_3084 = relay.greater_equal(bop_3065.astype('bool'), relay.reshape(call_3027.astype('bool'), relay.shape_of(bop_3065))) # shape=(12, 5, 3)
bop_3087 = relay.greater_equal(bop_3068.astype('bool'), relay.reshape(call_3028.astype('bool'), relay.shape_of(bop_3068))) # shape=(12, 5, 3)
output = relay.Tuple([call_3047,const_3048,call_3072,var_3073,uop_3075,call_3078,var_3079,bop_3084,])
output2 = relay.Tuple([call_3049,const_3048,call_3074,var_3073,uop_3077,call_3080,var_3079,bop_3087,])
func_3096 = relay.Function([var_3073,var_3079,], output)
mod['func_3096'] = func_3096
mod = relay.transform.InferType()(mod)
mutated_mod['func_3096'] = func_3096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3096_call = mutated_mod.get_global_var('func_3096')
var_3098 = relay.var("var_3098", dtype = "float32", shape = (616,))#candidate|3098|(616,)|var|float32
var_3099 = relay.var("var_3099", dtype = "float64", shape = (64,))#candidate|3099|(64,)|var|float64
call_3097 = func_3096_call(var_3098,var_3099,)
output = call_3097
func_3100 = relay.Function([var_3098,var_3099,], output)
mutated_mod['func_3100'] = func_3100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_3114 = relay.TupleGetItem(func_2833_call(), 0)
call_3115 = relay.TupleGetItem(func_2835_call(), 0)
uop_3119 = relay.cosh(call_3114.astype('float64')) # shape=(12, 5, 3)
uop_3121 = relay.cosh(call_3115.astype('float64')) # shape=(12, 5, 3)
output = relay.Tuple([uop_3119,])
output2 = relay.Tuple([uop_3121,])
func_3124 = relay.Function([], output)
mod['func_3124'] = func_3124
mod = relay.transform.InferType()(mod)
output = func_3124()
func_3125 = relay.Function([], output)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3126 = relay.TupleGetItem(func_3124_call(), 0)
call_3127 = relay.TupleGetItem(func_3125_call(), 0)
func_2093_call = mod.get_global_var('func_2093')
func_2096_call = mutated_mod.get_global_var('func_2096')
const_3132 = relay.const([4,-8,10,-8,7,-3,5,1,2,7,8,8,-9,3,6,4,7,-1,-1,6,-9,1,4,7,7,8,4,-1,8,2,6,-6,-9,10,7,8,-4,-4,-2,-6,7,-6,-1,1,-9,-3,-8,-9,-9,-6,4,-6,4,7,-1,5,-7,6,-6,-7,-9,-3,1,-3,-9,-9,-1,-1,3,1,1,1,-6,5,-5,10,-3,10,-3,4,-1,6,8,-7,7,6,-5,-5,-5,5,-3,5,-6,-9,9,2,8,2,-5,-8,8,-10,2,-3,8,-6,-3,-6,-5,7,-2,-2,6,10,-4,6,4,-4,-3,-3,7,1,-10,8,-6,7,-3,-10,-4,2,9,-9,-6,-9,-10,-10,-2,6,2,5,-8,-7,5,1,10,-7,-3,-3,-9,-8,5,-7,-2,8,8,3,-10,-8,2,4,3,10,-8,-5,-5,8,-2,10,-8,10,-6,2,5,-2,-9,8,10,2,-3,6,1,-2,9,-8,10,4,3,3,8,-7,-2,3,-5,9,-1,7,-9,6,9,-6,4,-7,8,6,-3,-2,-10,-6,-9,4,-4,-1,-8,-2,1,-7,9,-1,-6,-2,-4,6,1,-10,1,-10,6,7,-6,-4,8,-1,7,-6,3,-2,4,10,1,6,7,-4,-7,9,-1,-10,4,8,7,4,1,4,5,-3,-7,8,-4,7,5,-5,-8,-7,-8,6,8,3,8,-5,5,-9,6,8,-10,-3,2,-3,-5,-5,-3,8,10,1,1,1,5,-10,-7,-2,5,2,-5,10,-5,-3,-7,-2,-4,-7,10,-3,-7,-5,-5,-1,-6,8,10,-3,6,-5,-7,-9,7,-8,-1,-1,5,-3,5,-1,-9,-2,8,3,-3,6,-3,-3,-1,9,-1,2,-6,-8,-1,4,9,-8,-3,-10,9,-6,-1,5,7,5,4,-6,4,-5,-3,2,5,9,-1,2,-7,2,-7,-1,3,-4,5,1,-6,-2,-3,2,-6,-6,2,-7,-8,8,-8,-10,8,7,-6,1,-3,2,1,4,5,-2,-9,7,-8,1,-7,-4,-6,8,-1,5,-4,-2,3,10,-7,6,-1,-1,1,4,6,-4,-1,6,1,-6,2,-10,3,4,4,5,-4,-8,-10,-4,-2,-9,-1,7,-10,-7,-10,-7,8,-4,-1,2,5,2,-2,-2,-7,9,9,9,8,10,-2,-4,8,7,-7,5,-8,-9,-7,9,5,-1,-4,2,6,-4,8,-1,6,-6,-4,6,1,-6,-8,2,3,-6,6,10,9,-8,-2,7,-6,10,5,-6,1,7,-7,3,-4,8,8,-10,4,7,-9,-3,-7,-7,-10,1,2,-3,8,-10,6,2,6,2,-2,-5,3,-7,10,3,6,-1,3,-9,1,-3,5,-2,7,-10,-3,1,-2,6,-2,-2,-4,-7,9,8,-5,-9,-6,3,5,2,10,-3,10,4,10,-10,-3,3,-3,1,4,10,1,3,9,-3,7,-1,5,10,-3,2,-9,7,-6,2,10,-9,-5,8,-6,-3,7,1,-3,-9,-3,-4,4,6,2,1,10,-5,-2,9,4,-2,-7,-2,6,-7,-10,3,2,5,7,-8,-6,2,-7,-6,4,-9,5,-3,3,-1,-1,-9,6,-1,-2,2,3,5,-6,9,1,2,1,6,-5,9,3,-1,5,-6,10,-2,3,-2,-10,-8,1,6,5,-6,-1,6,-4,-5,-8,6,10,-2,-7,3,-5,6,-2,6,4,-6,8,9,9,-2,6,7,-6,-10,-1,-10,-5,-2,1,-2,3,-10,-10,-2,-6,5,2,9,-1,3,-1,10,-9,2,-4,5,-4,8,-7,-4,7,-4,-3,7,1,6,2,7,-2,-1,3,4,2,-3,2,-1,-9,8,-7,6,6,7,9,9,-3,6,8,-5,-1,1,-8,-2,7,-8,4,2,5,-8,-5,6,9,6,-3,10,-3,-5,3,-7,7,7,-7,-1,-8,7,-6,-3,-6,-2,4,-10,3,8,-5,8,-8,5,-4,10,-5,-5,-1,-6,1,-5,-10,-2,4,-8,-2,-3,9,-8,4,5,6,-10,2,3,6,6,4,-8,7,9,2,10,10,4,-5,-3,3,-7,1,-8,-9,-4,4,3,-8,9,-4,1,6,-8,-6,-1,4,4,9,4,-6,-4,10,2,-10,8,-1,-8,4,-9,4,-3,-9,6,9,-7,-8,-7,-8,6,9,2,3,-6,-3,-1,-4,-7,-1,10,-5,-7,10,3,3,6,5,4,7,7,7,-8,2,6,10,-1,5,-2,-4,-2,6,2,5,1,8,-3,8,9,-7,-1,-3,4,2,4,2,-4,-6,-2,-2,5,3,-6,9,8,10,-7,-2,4,8,10,4,8,10,-10,-3,2,-5,4,4,2,-1,-1,-9,-9,-1,-6,-4,-6,2,-5,-3,10,5,-1,-8,-5,1,6,-8,-8,-5,-7,-7,-3,9,4,5,1,8,9,5,6,9,-6,6,-8,-6,-2,-8,-4,5,10,-1,-1,2,-6,-3,1,-6,-9,-2,-5,-1,-3,-4,-7,-4,8,-7,4,-9,6,-5,-6,-5,3,-3,8,-5,-3,8,7,-9,7,4,-5,4,-6,8,7,-6,-3,-9,3,1,-5,7,3,9,-2,-3,-5,-8,-3,-3,-2,-1,8,-5,5,10,-7,4,-3,-9,-5,3,7,-10,-10,1,2,6,-1,2,6,-10,8,-10,6,-9,-2,-10,4,9,5,-7,-1,8,3,-2,3,-2,5,-4,-3,-1,-5,-6,-4,-4,-5,5,-3,2,4,-7,-3,8,2,8,-6,2,3], dtype = "uint16")#candidate|3132|(1050,)|const|uint16
call_3131 = relay.TupleGetItem(func_2093_call(relay.reshape(const_3132.astype('uint16'), [14, 5, 15]), relay.reshape(const_3132.astype('uint16'), [14, 5, 15]), ), 3)
call_3133 = relay.TupleGetItem(func_2096_call(relay.reshape(const_3132.astype('uint16'), [14, 5, 15]), relay.reshape(const_3132.astype('uint16'), [14, 5, 15]), ), 3)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3136 = relay.TupleGetItem(func_3022_call(), 1)
call_3137 = relay.TupleGetItem(func_3023_call(), 1)
func_1125_call = mod.get_global_var('func_1125')
func_1127_call = mutated_mod.get_global_var('func_1127')
const_3141 = relay.const([1.358998,-1.628543,-6.454061,1.941168,-3.603437,4.825464,7.121188,-3.775284,0.866944,-8.653147,5.572083,4.123831,-0.996249,-6.228012,0.228587,2.821162,2.908427,8.993241,4.704966,-2.217850,-4.796104,-2.234226,-5.751913,-6.477164,5.737852,9.844294,2.778100,0.715775,-0.067362,-3.793856,3.140478,-6.163819,8.883883,-0.616595,3.674695,7.958068,-2.527317,9.752736,-9.312057,-2.108479,-6.846963,-2.092061,-4.205422,6.681388,1.546041,3.456414,-5.670441,-0.626714,3.279219,-8.665011,8.767644,-2.575717,5.835129,-5.278079,0.002412,0.795374,-2.257484,-9.124487,1.769295,6.385144,7.605044,2.866942,-1.098962,7.832585,2.585217,-7.989530,2.339060,-9.731093,-0.085318,-4.349064,-9.454561,3.475513,8.483184,2.482330,-9.069910,-3.908514,0.851465,2.228212,3.459795,1.467713,-6.789842,0.753299,5.094411,-6.958712,-0.502498,4.086703,3.596467,6.141422,-1.452184,4.264283,3.289276,-5.710334,-2.420925,-5.205547,4.197817,-2.935738,-7.369946,1.027654,2.567301,2.646316,7.394546,-8.338615,-3.706882,0.078130,6.194417,6.868761,-5.943615,1.810001,5.133900,-1.711453,-3.300132,-6.287979,-2.827518,-7.207350,2.003103,1.705509,-1.436117,1.156253,0.233745,-6.169391,-2.722978,5.597104,5.938951,1.845185,7.703359,5.771039,-9.921806,-4.438579,-8.657750,-1.805313,-5.571269,-4.152576,-5.208260,0.984342,-9.430075,-7.399473,4.765960,-7.187636,-7.864593,5.677529,6.662644,5.715333,-2.678761,3.837163,-8.772302,6.158595,0.865291,-7.133433,9.328102,-7.546739], dtype = "float64")#candidate|3141|(150,)|const|float64
call_3140 = func_1125_call(relay.reshape(const_3141.astype('float64'), [5, 2, 15]))
call_3142 = func_1125_call(relay.reshape(const_3141.astype('float64'), [5, 2, 15]))
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
var_3147 = relay.var("var_3147", dtype = "float64", shape = (640,))#candidate|3147|(640,)|var|float64
call_3146 = relay.TupleGetItem(func_388_call(relay.reshape(var_3147.astype('float64'), [8, 16, 5])), 0)
call_3148 = relay.TupleGetItem(func_391_call(relay.reshape(var_3147.astype('float64'), [8, 16, 5])), 0)
output = relay.Tuple([call_3126,call_3131,const_3132,call_3136,call_3140,const_3141,call_3146,var_3147,])
output2 = relay.Tuple([call_3127,call_3133,const_3132,call_3137,call_3142,const_3141,call_3148,var_3147,])
func_3150 = relay.Function([var_3147,], output)
mod['func_3150'] = func_3150
mod = relay.transform.InferType()(mod)
var_3151 = relay.var("var_3151", dtype = "float64", shape = (640,))#candidate|3151|(640,)|var|float64
output = func_3150(var_3151)
func_3152 = relay.Function([var_3151], output)
mutated_mod['func_3152'] = func_3152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3191 = relay.TupleGetItem(func_3124_call(), 0)
call_3192 = relay.TupleGetItem(func_3125_call(), 0)
output = call_3191
output2 = call_3192
func_3218 = relay.Function([], output)
mod['func_3218'] = func_3218
mod = relay.transform.InferType()(mod)
mutated_mod['func_3218'] = func_3218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3218_call = mutated_mod.get_global_var('func_3218')
call_3219 = func_3218_call()
output = call_3219
func_3220 = relay.Function([], output)
mutated_mod['func_3220'] = func_3220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_3276 = relay.TupleGetItem(func_2833_call(), 0)
call_3277 = relay.TupleGetItem(func_2835_call(), 0)
var_3278 = relay.var("var_3278", dtype = "float32", shape = (12, 5, 3))#candidate|3278|(12, 5, 3)|var|float32
bop_3279 = relay.multiply(call_3276.astype('int8'), relay.reshape(var_3278.astype('int8'), relay.shape_of(call_3276))) # shape=(12, 5, 3)
bop_3282 = relay.multiply(call_3277.astype('int8'), relay.reshape(var_3278.astype('int8'), relay.shape_of(call_3277))) # shape=(12, 5, 3)
output = bop_3279
output2 = bop_3282
func_3302 = relay.Function([var_3278,], output)
mod['func_3302'] = func_3302
mod = relay.transform.InferType()(mod)
var_3303 = relay.var("var_3303", dtype = "float32", shape = (12, 5, 3))#candidate|3303|(12, 5, 3)|var|float32
output = func_3302(var_3303)
func_3304 = relay.Function([var_3303], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_3328 = relay.TupleGetItem(func_2833_call(), 0)
call_3329 = relay.TupleGetItem(func_2835_call(), 0)
output = relay.Tuple([call_3328,])
output2 = relay.Tuple([call_3329,])
func_3352 = relay.Function([], output)
mod['func_3352'] = func_3352
mod = relay.transform.InferType()(mod)
mutated_mod['func_3352'] = func_3352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mutated_mod.get_global_var('func_3352')
call_3353 = func_3352_call()
output = call_3353
func_3354 = relay.Function([], output)
mutated_mod['func_3354'] = func_3354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3397 = relay.TupleGetItem(func_3124_call(), 0)
call_3398 = relay.TupleGetItem(func_3125_call(), 0)
output = call_3397
output2 = call_3398
func_3401 = relay.Function([], output)
mod['func_3401'] = func_3401
mod = relay.transform.InferType()(mod)
output = func_3401()
func_3402 = relay.Function([], output)
mutated_mod['func_3402'] = func_3402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3474 = relay.TupleGetItem(func_3022_call(), 1)
call_3475 = relay.TupleGetItem(func_3023_call(), 1)
var_3493 = relay.var("var_3493", dtype = "float32", shape = (8, 12, 5))#candidate|3493|(8, 12, 5)|var|float32
bop_3494 = relay.power(call_3474.astype('float32'), relay.reshape(var_3493.astype('float32'), relay.shape_of(call_3474))) # shape=(8, 12, 5)
bop_3497 = relay.power(call_3475.astype('float32'), relay.reshape(var_3493.astype('float32'), relay.shape_of(call_3475))) # shape=(8, 12, 5)
output = bop_3494
output2 = bop_3497
func_3505 = relay.Function([var_3493,], output)
mod['func_3505'] = func_3505
mod = relay.transform.InferType()(mod)
var_3506 = relay.var("var_3506", dtype = "float32", shape = (8, 12, 5))#candidate|3506|(8, 12, 5)|var|float32
output = func_3505(var_3506)
func_3507 = relay.Function([var_3506], output)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3531 = relay.TupleGetItem(func_3022_call(), 1)
call_3532 = relay.TupleGetItem(func_3023_call(), 1)
output = relay.Tuple([call_3531,])
output2 = relay.Tuple([call_3532,])
func_3535 = relay.Function([], output)
mod['func_3535'] = func_3535
mod = relay.transform.InferType()(mod)
output = func_3535()
func_3536 = relay.Function([], output)
mutated_mod['func_3536'] = func_3536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3218_call = mod.get_global_var('func_3218')
func_3220_call = mutated_mod.get_global_var('func_3220')
call_3551 = func_3218_call()
call_3552 = func_3218_call()
output = relay.Tuple([call_3551,])
output2 = relay.Tuple([call_3552,])
func_3560 = relay.Function([], output)
mod['func_3560'] = func_3560
mod = relay.transform.InferType()(mod)
mutated_mod['func_3560'] = func_3560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mutated_mod.get_global_var('func_3560')
call_3561 = func_3560_call()
output = call_3561
func_3562 = relay.Function([], output)
mutated_mod['func_3562'] = func_3562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3602 = relay.var("var_3602", dtype = "float64", shape = (13, 1, 2))#candidate|3602|(13, 1, 2)|var|float64
var_3603 = relay.var("var_3603", dtype = "float64", shape = (13, 13, 2))#candidate|3603|(13, 13, 2)|var|float64
bop_3604 = relay.floor_mod(var_3602.astype('float64'), var_3603.astype('float64')) # shape=(13, 13, 2)
uop_3620 = relay.exp(var_3603.astype('float32')) # shape=(13, 13, 2)
output = relay.Tuple([bop_3604,uop_3620,])
output2 = relay.Tuple([bop_3604,uop_3620,])
func_3626 = relay.Function([var_3602,var_3603,], output)
mod['func_3626'] = func_3626
mod = relay.transform.InferType()(mod)
mutated_mod['func_3626'] = func_3626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3626_call = mutated_mod.get_global_var('func_3626')
var_3628 = relay.var("var_3628", dtype = "float64", shape = (13, 1, 2))#candidate|3628|(13, 1, 2)|var|float64
var_3629 = relay.var("var_3629", dtype = "float64", shape = (13, 13, 2))#candidate|3629|(13, 13, 2)|var|float64
call_3627 = func_3626_call(var_3628,var_3629,)
output = call_3627
func_3630 = relay.Function([var_3628,var_3629,], output)
mutated_mod['func_3630'] = func_3630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3651 = relay.TupleGetItem(func_3022_call(), 2)
call_3652 = relay.TupleGetItem(func_3023_call(), 2)
func_2751_call = mod.get_global_var('func_2751')
func_2755_call = mutated_mod.get_global_var('func_2755')
var_3658 = relay.var("var_3658", dtype = "uint32", shape = (672,))#candidate|3658|(672,)|var|uint32
var_3659 = relay.var("var_3659", dtype = "float64", shape = (64,))#candidate|3659|(64,)|var|float64
call_3657 = relay.TupleGetItem(func_2751_call(relay.reshape(var_3658.astype('uint32'), [16, 14, 3]), relay.reshape(var_3659.astype('float64'), [4, 16]), ), 4)
call_3660 = relay.TupleGetItem(func_2755_call(relay.reshape(var_3658.astype('uint32'), [16, 14, 3]), relay.reshape(var_3659.astype('float64'), [4, 16]), ), 4)
uop_3668 = relay.sinh(call_3651.astype('float32')) # shape=(40, 12)
uop_3670 = relay.sinh(call_3652.astype('float32')) # shape=(40, 12)
uop_3671 = relay.asinh(uop_3668.astype('float32')) # shape=(40, 12)
uop_3673 = relay.asinh(uop_3670.astype('float32')) # shape=(40, 12)
output = relay.Tuple([call_3657,var_3658,var_3659,uop_3671,])
output2 = relay.Tuple([call_3660,var_3658,var_3659,uop_3673,])
func_3679 = relay.Function([var_3658,var_3659,], output)
mod['func_3679'] = func_3679
mod = relay.transform.InferType()(mod)
var_3680 = relay.var("var_3680", dtype = "uint32", shape = (672,))#candidate|3680|(672,)|var|uint32
var_3681 = relay.var("var_3681", dtype = "float64", shape = (64,))#candidate|3681|(64,)|var|float64
output = func_3679(var_3680,var_3681,)
func_3682 = relay.Function([var_3680,var_3681,], output)
mutated_mod['func_3682'] = func_3682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_3726 = relay.TupleGetItem(func_2833_call(), 0)
call_3727 = relay.TupleGetItem(func_2835_call(), 0)
output = relay.Tuple([call_3726,])
output2 = relay.Tuple([call_3727,])
func_3730 = relay.Function([], output)
mod['func_3730'] = func_3730
mod = relay.transform.InferType()(mod)
output = func_3730()
func_3731 = relay.Function([], output)
mutated_mod['func_3731'] = func_3731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_3751 = relay.TupleGetItem(func_3352_call(), 0)
call_3752 = relay.TupleGetItem(func_3354_call(), 0)
output = relay.Tuple([call_3751,])
output2 = relay.Tuple([call_3752,])
func_3772 = relay.Function([], output)
mod['func_3772'] = func_3772
mod = relay.transform.InferType()(mod)
output = func_3772()
func_3773 = relay.Function([], output)
mutated_mod['func_3773'] = func_3773
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3886 = relay.const([[[4,-8,1,-6,9,-3,-1,1,1,4,-6,8,-5],[3,9,9,4,-6,7,1,2,-10,-10,-6,2,2],[8,-7,5,10,6,9,-7,6,-7,-1,-10,1,-9],[-3,-6,8,-7,8,-7,-5,-8,-2,9,8,-6,4],[-9,7,1,-8,5,2,-2,-3,9,-9,-4,1,-8],[9,9,1,-8,5,-8,-8,-8,4,-1,7,5,-6],[-9,-2,7,3,5,-3,10,-2,-10,1,9,9,10],[-9,-2,-4,3,9,9,9,4,5,-1,-4,5,10],[-9,-5,5,-6,10,-9,7,-6,-10,8,-6,-7,2],[-9,-7,3,10,-4,4,3,9,-9,-1,-3,-2,2],[8,5,3,8,-5,-3,-1,-9,7,10,-5,6,-8],[5,-2,7,8,-1,-6,-10,-10,-5,10,-7,-7,6],[-10,7,1,-5,1,-4,-4,10,4,2,-3,-6,-4],[-3,-1,-10,-1,-8,-9,7,5,-10,8,2,2,-5],[-2,9,5,-6,10,9,4,-6,-2,-4,-6,-7,-4],[6,4,10,-4,3,-10,-8,-4,-4,6,-3,2,-5]],[[-2,3,-3,2,2,-3,-9,-8,3,1,-4,-10,-4],[-9,10,5,8,8,8,-9,1,9,-6,1,6,9],[-5,-2,-1,5,7,-5,-9,6,-4,10,-7,-7,9],[-2,-10,-6,-1,-3,-1,8,-10,3,-8,9,-6,-9],[-1,5,6,4,10,10,10,6,2,9,6,3,3],[-8,-2,-1,3,2,3,5,8,9,-9,-1,-10,4],[4,-10,9,7,4,4,-6,-1,4,6,-1,2,-9],[-2,-3,5,-6,-6,4,6,-5,-9,9,-2,6,-5],[-3,5,-9,-3,3,-4,4,4,5,-7,-2,-1,-8],[4,-3,9,5,9,2,8,9,-6,2,-2,2,7],[-8,7,-1,10,-7,9,-4,5,8,1,7,-2,-7],[-6,-4,5,9,-9,-2,-4,7,-2,-2,7,2,9],[5,-8,4,5,5,1,3,-8,-9,5,-8,7,4],[1,-3,-5,10,3,5,3,8,-8,1,6,-10,8],[-8,7,-10,-7,-9,-1,6,-2,-2,3,-8,-2,8],[-1,-1,-6,3,-10,-4,-7,-9,-9,-4,6,-5,-7]],[[1,-3,9,9,2,-10,1,-9,-7,5,7,-1,-4],[-7,7,3,5,-10,10,6,-5,7,8,-8,-2,-3],[6,10,-2,-10,-2,10,10,4,7,10,-8,-7,-4],[-3,7,-7,-1,-4,3,3,-8,-3,-3,8,8,-4],[-6,-5,6,-7,6,-8,1,2,-6,9,8,-4,-10],[-2,2,-7,7,-9,1,-7,-9,4,9,-2,-10,10],[-5,-10,-9,-3,8,-9,1,-9,-3,-1,-3,10,2],[-6,-5,2,-3,4,5,-4,7,-8,-1,-3,3,-7],[-9,-8,-1,3,3,7,-8,-9,-6,3,-6,2,-6],[-2,-8,-5,5,10,-8,-3,8,8,-1,-8,7,10],[2,1,-6,-7,1,3,-5,-6,-6,5,-9,10,7],[-6,-9,10,-8,-9,5,9,2,-3,-3,-2,-8,-2],[10,-8,2,-5,-10,-2,7,3,1,-9,-3,10,3],[-4,-8,9,-2,7,3,-5,-7,1,8,8,-5,-2],[1,-4,-3,7,-9,-1,5,3,8,-1,4,-10,6],[-2,5,9,6,-2,4,-2,8,-1,9,-3,3,1]],[[5,-10,9,2,-7,-2,2,4,5,-8,7,-8,-5],[-5,-4,-6,10,-10,9,3,-2,-9,-10,2,-8,8],[10,-4,-6,5,-7,-1,-6,-6,-4,1,5,-2,-4],[10,-5,-1,-6,-3,-6,-6,-9,8,9,-10,-2,-1],[-10,3,9,8,-4,10,4,4,-2,-2,7,-6,-3],[-1,7,3,-9,3,-2,2,2,7,7,-7,-2,-10],[9,7,-10,9,2,-5,8,9,-1,-5,-4,10,-4],[10,5,6,6,8,-2,3,8,-5,8,-8,4,1],[-8,1,7,9,-5,-8,8,5,2,4,-6,8,-4],[2,-10,9,-5,9,6,-5,-2,-10,-10,10,4,2],[6,5,-6,9,-9,5,9,-7,-3,3,-9,8,7],[1,-4,3,-5,-10,-3,-9,5,8,10,-8,2,-10],[4,10,6,3,4,-1,-2,10,-2,-2,4,3,-7],[-9,-2,-10,7,-8,-1,4,-8,-4,8,8,6,-6],[-1,-4,-10,9,-2,-6,1,3,-6,-7,3,-5,-9],[2,-4,-4,9,-5,-3,-9,-5,5,1,-8,-8,-1]],[[8,4,10,3,-6,9,6,-2,-10,5,10,-1,-9],[-9,-6,8,6,-3,9,10,-2,-9,-5,-7,-6,10],[2,8,-4,6,7,6,-5,-10,5,-8,-1,5,-1],[-10,-3,-4,6,4,-7,10,6,7,-6,-6,7,8],[-4,-5,-3,2,7,-3,-8,-3,-9,10,10,7,-6],[-7,-6,2,-5,-4,2,-8,-4,4,-8,-8,9,-2],[-5,4,-1,-4,-3,-8,-3,-1,-10,6,10,5,-6],[-4,-1,5,-5,-7,10,-5,10,-5,6,10,5,-10],[-5,-10,10,-5,2,6,8,4,-9,-1,10,3,-2],[-4,8,-1,-10,1,6,-10,-5,6,2,-9,6,-9],[8,6,5,-8,-3,4,-1,-5,1,5,-2,9,-10],[-6,-2,7,-6,-1,-3,4,9,3,-4,-9,4,1],[7,-3,-10,-5,3,-4,7,2,4,7,-5,-5,9],[-4,-8,-10,-6,-1,-1,1,-10,-4,8,-6,3,8],[-6,-5,-7,-9,-5,-7,1,9,6,-5,-5,-5,5],[7,-7,-4,-10,-9,1,1,8,-8,7,2,-7,2]],[[-5,5,10,-8,1,-1,4,-7,9,-10,5,7,-5],[-5,-5,-6,-4,2,5,1,3,-6,-4,-9,-10,-2],[-7,8,8,-6,-10,5,5,10,-7,-5,-4,7,-3],[-3,-7,9,5,-8,1,-8,-6,9,-10,1,-1,-10],[-9,-3,3,-7,-2,-4,6,-10,6,9,10,-5,-8],[-8,5,4,-4,6,4,8,2,4,2,6,-1,1],[-5,-2,3,4,9,-3,4,10,5,-7,-8,4,3],[9,6,-5,-6,-6,8,-8,5,-8,1,10,-6,2],[5,5,7,-6,-3,4,8,10,-9,3,-2,-4,10],[10,10,-9,9,7,-7,-10,1,-2,5,7,4,7],[-10,10,4,6,-1,1,9,5,8,-8,1,-10,-4],[10,6,4,10,-7,-4,-10,-8,-3,8,2,-7,-9],[-2,5,-7,-4,4,-10,-3,-9,-10,2,-2,4,6],[8,-8,-2,-5,6,3,4,1,-2,-10,3,-1,-7],[-9,3,-9,-9,-7,9,7,3,-9,-5,-2,5,9],[-10,-1,5,8,-7,10,-5,-4,-10,-2,-1,3,-9]],[[5,5,-2,-6,1,-6,9,5,-9,8,-5,-4,-3],[-7,-1,1,10,1,10,8,-7,10,6,-7,8,-10],[-4,-1,1,3,-4,-9,-10,-8,-8,-4,1,-2,1],[-3,3,-3,8,-5,-10,1,3,-10,-2,5,-7,4],[-3,4,-6,-5,10,7,10,7,10,-5,1,10,-6],[-1,4,-10,4,2,-10,-2,-5,-8,-2,-6,-6,7],[-8,9,2,8,9,-4,1,6,5,2,8,-2,9],[-3,8,-2,-9,-2,-5,8,8,9,-9,3,-3,-1],[-6,-9,2,-2,4,-9,-7,3,-1,5,4,-1,7],[5,8,10,9,-1,-1,-3,6,-9,3,4,4,7],[1,9,1,-9,9,5,9,1,10,7,6,-9,-10],[6,2,2,-3,-3,-6,-3,2,-5,5,-10,-1,-3],[5,-7,4,-8,9,10,-2,4,5,-3,9,-5,3],[1,4,-1,5,5,3,8,5,4,10,3,7,-10],[3,3,3,-10,-10,-8,-10,6,6,7,-1,7,9],[7,-6,-4,-4,-5,-3,-6,9,-7,4,-4,7,-10]],[[-10,-10,-8,5,-5,3,6,-8,6,-1,7,3,1],[-2,9,-7,-10,10,-5,2,-5,-1,4,9,3,-4],[-8,-10,4,-5,5,-6,8,-10,10,-3,6,8,-3],[-1,-7,-7,-2,1,-10,-1,-8,-7,-2,9,1,-8],[6,-9,3,5,5,-4,-10,4,-1,4,-3,-8,-10],[-8,-9,-7,4,-5,-10,-6,6,-3,-7,6,-6,-9],[-3,-6,4,-5,-2,-1,2,3,8,-6,-3,1,-6],[8,-1,-10,6,9,-10,6,-9,-10,2,-1,-7,7],[6,8,6,5,-4,4,-1,-1,-7,6,-3,7,10],[-10,-6,6,4,5,1,9,-5,7,-6,-8,5,-1],[10,6,9,-8,-2,7,8,7,-10,-7,9,-10,4],[10,-1,2,10,-1,3,-1,4,10,-8,3,5,-2],[8,1,-1,3,-1,-5,-2,-9,-8,9,-10,3,-8],[-7,-8,9,-2,-10,-1,-9,8,5,-10,7,7,-9],[-5,-7,3,-7,-5,-7,-5,2,-9,-10,4,-9,10],[-4,1,3,10,-10,2,-3,2,-5,-8,4,-7,6]],[[-10,8,2,6,-9,-9,7,-1,-7,-7,6,-9,-1],[2,9,-1,-3,-8,5,8,3,3,9,2,-10,-8],[-2,-1,-9,-1,10,-9,1,8,1,9,3,5,-8],[9,-5,6,-3,-8,-9,3,1,2,9,-9,6,-6],[2,3,6,1,1,9,-4,6,-6,-1,-1,10,-3],[-2,-8,9,8,3,-6,-7,2,8,-3,-9,5,7],[-5,8,9,-6,-8,9,9,-4,-6,1,-7,6,-5],[-10,-5,8,7,7,-6,10,-9,4,3,-2,-6,-9],[-4,-2,9,1,10,-3,3,-10,-4,5,-1,3,6],[3,10,7,-6,-3,1,-9,1,-8,4,5,8,3],[-10,5,4,10,-9,-6,-3,8,-2,7,-8,10,-2],[-2,-9,-2,-3,-7,-5,1,-1,9,-7,-2,-5,-4],[3,-7,-1,7,-5,-10,-8,-5,1,6,-4,-8,3],[2,8,-3,2,-7,-8,-4,5,-1,-9,5,4,-2],[10,9,-7,-3,9,-5,7,-3,-6,8,-8,-6,5],[7,-5,-8,-6,-10,10,-7,3,-9,1,3,-6,1]],[[-10,-1,8,-6,6,10,3,-4,-7,-3,10,-9,3],[-2,-5,-4,-10,1,4,3,-1,9,-6,8,-3,-4],[-10,-8,6,-1,3,-9,-2,-10,-10,-4,7,5,-8],[7,-4,6,3,-7,2,-2,-3,7,-1,-2,10,-2],[-1,8,-1,-3,-3,9,3,-7,-3,-1,7,-4,2],[1,-3,-7,-1,-6,-10,-7,9,3,1,-10,-6,-3],[-6,-5,-4,-10,-7,-3,-4,1,9,-10,-4,-4,-2],[1,3,3,2,10,2,5,9,-10,-7,10,10,8],[-5,-1,7,5,8,9,-5,6,-1,1,-8,-4,3],[-5,-5,9,7,7,3,-4,-1,1,-4,-5,9,-4],[6,-4,-3,2,-3,-10,-4,-2,10,-10,-1,-6,7],[9,-7,4,2,-10,8,4,6,2,2,9,-2,-2],[-7,7,10,-1,-8,8,-3,-6,4,-2,8,10,-8],[2,7,10,-2,9,2,7,-7,1,-5,10,-10,10],[6,8,1,3,-3,4,-1,-5,5,4,-9,3,-5],[3,-7,5,-7,7,-2,7,-5,-1,6,-1,2,-4]]], dtype = "uint32")#candidate|3886|(10, 16, 13)|const|uint32
var_3887 = relay.var("var_3887", dtype = "uint32", shape = (10, 16, 13))#candidate|3887|(10, 16, 13)|var|uint32
bop_3888 = relay.subtract(const_3886.astype('uint32'), relay.reshape(var_3887.astype('uint32'), relay.shape_of(const_3886))) # shape=(10, 16, 13)
output = bop_3888
output2 = bop_3888
func_3891 = relay.Function([var_3887,], output)
mod['func_3891'] = func_3891
mod = relay.transform.InferType()(mod)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3892 = relay.var("var_3892", dtype = "uint32", shape = (10, 16, 13))#candidate|3892|(10, 16, 13)|var|uint32
func_3891_call = mutated_mod.get_global_var('func_3891')
call_3893 = func_3891_call(var_3892)
output = call_3893
func_3894 = relay.Function([var_3892], output)
mutated_mod['func_3894'] = func_3894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3908 = relay.TupleGetItem(func_3124_call(), 0)
call_3909 = relay.TupleGetItem(func_3125_call(), 0)
var_3911 = relay.var("var_3911", dtype = "float64", shape = (12, 5, 3))#candidate|3911|(12, 5, 3)|var|float64
bop_3912 = relay.less(call_3908.astype('bool'), relay.reshape(var_3911.astype('bool'), relay.shape_of(call_3908))) # shape=(12, 5, 3)
bop_3915 = relay.less(call_3909.astype('bool'), relay.reshape(var_3911.astype('bool'), relay.shape_of(call_3909))) # shape=(12, 5, 3)
uop_3916 = relay.atan(call_3908.astype('float32')) # shape=(12, 5, 3)
uop_3918 = relay.atan(call_3909.astype('float32')) # shape=(12, 5, 3)
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
const_3934 = relay.const([[-2.487884],[8.257402],[1.992794],[6.094513],[-8.895219],[7.299964],[-4.477866],[-1.381165],[-7.554388],[-1.661353],[-5.968626],[-5.942493],[4.699237],[-2.804266],[-3.202137],[-1.670721],[4.883392],[-9.943346],[-1.956965],[0.846396],[0.231201],[-8.513826],[4.203928],[-1.665874],[-9.735577],[6.121324],[6.463145],[8.416534],[2.705422],[3.615962],[6.481581],[-3.244011],[5.845160],[9.062162],[-2.728108],[5.542347],[8.400276],[-2.382467],[-9.855714],[-3.470046],[6.502323],[7.316380],[3.025942],[7.680558],[-5.628624],[8.922453],[-4.464095],[-6.752585],[-0.685502],[-9.252181],[6.035381],[-6.395639],[7.231545],[0.633293],[7.058145],[-1.232570],[6.960083],[-6.527757],[-5.288155],[-6.810701],[-6.275675],[4.740403],[5.964235],[-9.489103],[5.524925],[8.442999],[-1.981829],[-6.303934],[-1.467476],[5.689253],[3.541475],[-8.136635],[7.300178],[-2.763115],[-9.834743],[4.009273],[-2.307823],[-9.663356],[-9.738100],[4.898248],[4.425272],[-1.376810],[5.438339],[9.287257],[0.897268],[8.106296],[6.504251],[3.347571],[-6.478604],[-6.304070],[-5.860748],[9.372037],[-8.201809],[0.010855],[8.602267],[7.239116],[3.387763],[-4.076689],[-9.590294],[-1.498255],[7.908376],[-3.319063],[7.460848],[4.947279],[8.581185],[-3.889129],[8.143012],[-4.027830],[0.723396],[9.831898],[0.357479],[8.953353],[-0.092766],[0.298651],[-9.015194],[-8.304529],[7.822068],[-4.579897],[6.275915],[2.032085],[6.678050],[-9.052181],[1.994654],[1.475139],[-3.047173],[2.023291],[0.846384],[-2.016873],[1.147597],[-1.974555],[6.027922],[2.208177],[8.131157],[6.438859],[0.892463],[-6.971012],[4.460264],[-7.781738],[2.537175],[6.205601],[-6.277752],[2.938383],[-0.661356],[4.955595],[6.884790],[2.749941],[7.351000],[-8.676736],[-5.661345],[1.306923],[-5.246128],[-5.717111],[-9.387905],[-5.551151],[-4.829175],[-2.235475],[9.502844],[-9.079464],[8.184743],[3.418982],[4.880142],[-3.300609],[2.258179],[-2.243857],[-1.352928],[1.110873],[6.125241],[-0.436972],[-2.055809],[5.284401],[7.910671],[6.761632],[-6.377272],[-3.485866],[-0.670521],[-8.095808],[-2.545636],[-6.555260],[4.019957],[4.366617],[-2.229037],[-8.890877],[-5.253071],[3.312271],[-6.093275],[-4.629985],[-7.657392],[-9.529752],[5.370090],[9.133967],[-6.316165],[-9.120988],[-5.869421],[-9.431152],[7.915165],[4.199707],[-3.372217],[4.183351],[8.211656],[-2.114275],[7.577281],[6.567683],[-9.652337],[-0.965350],[-1.295267],[6.389109],[-0.229024],[1.962529],[-2.076995],[-9.024579],[0.778364],[4.033927],[-4.173270],[-0.206801],[-8.735717],[1.262741]], dtype = "float64")#candidate|3934|(216, 1)|const|float64
call_3933 = relay.TupleGetItem(func_2121_call(relay.reshape(const_3934.astype('float64'), [9, 3, 8])), 0)
call_3935 = relay.TupleGetItem(func_2123_call(relay.reshape(const_3934.astype('float64'), [9, 3, 8])), 0)
output = relay.Tuple([bop_3912,uop_3916,call_3933,const_3934,])
output2 = relay.Tuple([bop_3915,uop_3918,call_3935,const_3934,])
func_3936 = relay.Function([var_3911,], output)
mod['func_3936'] = func_3936
mod = relay.transform.InferType()(mod)
mutated_mod['func_3936'] = func_3936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3937 = relay.var("var_3937", dtype = "float64", shape = (12, 5, 3))#candidate|3937|(12, 5, 3)|var|float64
func_3936_call = mutated_mod.get_global_var('func_3936')
call_3938 = func_3936_call(var_3937)
output = call_3938
func_3939 = relay.Function([var_3937], output)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_3969 = relay.TupleGetItem(func_3560_call(), 0)
call_3970 = relay.TupleGetItem(func_3562_call(), 0)
output = relay.Tuple([call_3969,])
output2 = relay.Tuple([call_3970,])
func_3978 = relay.Function([], output)
mod['func_3978'] = func_3978
mod = relay.transform.InferType()(mod)
output = func_3978()
func_3979 = relay.Function([], output)
mutated_mod['func_3979'] = func_3979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3993 = relay.var("var_3993", dtype = "int16", shape = (4, 16, 14))#candidate|3993|(4, 16, 14)|var|int16
var_3994 = relay.var("var_3994", dtype = "int16", shape = (4, 16, 14))#candidate|3994|(4, 16, 14)|var|int16
bop_3995 = relay.less(var_3993.astype('bool'), relay.reshape(var_3994.astype('bool'), relay.shape_of(var_3993))) # shape=(4, 16, 14)
func_2968_call = mod.get_global_var('func_2968')
func_2971_call = mutated_mod.get_global_var('func_2971')
var_4004 = relay.var("var_4004", dtype = "float32", shape = (180,))#candidate|4004|(180,)|var|float32
call_4003 = relay.TupleGetItem(func_2968_call(relay.reshape(var_4004.astype('float32'), [12, 5, 3])), 0)
call_4005 = relay.TupleGetItem(func_2971_call(relay.reshape(var_4004.astype('float32'), [12, 5, 3])), 0)
output = relay.Tuple([bop_3995,call_4003,var_4004,])
output2 = relay.Tuple([bop_3995,call_4005,var_4004,])
func_4019 = relay.Function([var_3993,var_3994,var_4004,], output)
mod['func_4019'] = func_4019
mod = relay.transform.InferType()(mod)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mutated_mod.get_global_var('func_4019')
var_4021 = relay.var("var_4021", dtype = "int16", shape = (4, 16, 14))#candidate|4021|(4, 16, 14)|var|int16
var_4022 = relay.var("var_4022", dtype = "int16", shape = (4, 16, 14))#candidate|4022|(4, 16, 14)|var|int16
var_4023 = relay.var("var_4023", dtype = "float32", shape = (180,))#candidate|4023|(180,)|var|float32
call_4020 = func_4019_call(var_4021,var_4022,var_4023,)
output = call_4020
func_4024 = relay.Function([var_4021,var_4022,var_4023,], output)
mutated_mod['func_4024'] = func_4024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4026 = relay.var("var_4026", dtype = "int32", shape = (5, 3, 1))#candidate|4026|(5, 3, 1)|var|int32
var_4027 = relay.var("var_4027", dtype = "int32", shape = (5, 3, 14))#candidate|4027|(5, 3, 14)|var|int32
bop_4028 = relay.minimum(var_4026.astype('int32'), var_4027.astype('int32')) # shape=(5, 3, 14)
output = bop_4028
output2 = bop_4028
func_4033 = relay.Function([var_4026,var_4027,], output)
mod['func_4033'] = func_4033
mod = relay.transform.InferType()(mod)
var_4034 = relay.var("var_4034", dtype = "int32", shape = (5, 3, 1))#candidate|4034|(5, 3, 1)|var|int32
var_4035 = relay.var("var_4035", dtype = "int32", shape = (5, 3, 14))#candidate|4035|(5, 3, 14)|var|int32
output = func_4033(var_4034,var_4035,)
func_4036 = relay.Function([var_4034,var_4035,], output)
mutated_mod['func_4036'] = func_4036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4038 = relay.TupleGetItem(func_3352_call(), 0)
call_4039 = relay.TupleGetItem(func_3354_call(), 0)
output = relay.Tuple([call_4038,])
output2 = relay.Tuple([call_4039,])
func_4053 = relay.Function([], output)
mod['func_4053'] = func_4053
mod = relay.transform.InferType()(mod)
output = func_4053()
func_4054 = relay.Function([], output)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_4087 = relay.TupleGetItem(func_3022_call(), 1)
call_4088 = relay.TupleGetItem(func_3023_call(), 1)
output = call_4087
output2 = call_4088
func_4089 = relay.Function([], output)
mod['func_4089'] = func_4089
mod = relay.transform.InferType()(mod)
mutated_mod['func_4089'] = func_4089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4089_call = mutated_mod.get_global_var('func_4089')
call_4090 = func_4089_call()
output = call_4090
func_4091 = relay.Function([], output)
mutated_mod['func_4091'] = func_4091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_4104 = relay.TupleGetItem(func_2833_call(), 0)
call_4105 = relay.TupleGetItem(func_2835_call(), 0)
output = relay.Tuple([call_4104,])
output2 = relay.Tuple([call_4105,])
func_4112 = relay.Function([], output)
mod['func_4112'] = func_4112
mod = relay.transform.InferType()(mod)
output = func_4112()
func_4113 = relay.Function([], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3730_call = mod.get_global_var('func_3730')
func_3731_call = mutated_mod.get_global_var('func_3731')
call_4135 = relay.TupleGetItem(func_3730_call(), 0)
call_4136 = relay.TupleGetItem(func_3731_call(), 0)
func_3150_call = mod.get_global_var('func_3150')
func_3152_call = mutated_mod.get_global_var('func_3152')
const_4166 = relay.const([1.105783,-1.498403,-9.414659,-7.157026,-6.613719,-8.610678,-1.443403,2.129393,-8.814890,-0.668813,6.151100,-4.482560,0.821181,-4.394553,-7.041186,8.913728,-6.965450,-7.341553,-2.218925,9.422484,-1.867639,9.401208,-9.281057,4.452598,9.372752,-7.017385,-3.076557,2.009707,5.866129,-4.150864,5.636199,4.145374,4.840623,-2.561250,-7.068572,6.610616,2.075290,0.101044,2.592345,5.411208,-4.243420,0.533548,-0.879760,-6.658066,4.656235,9.348765,0.224270,-0.413840,-9.980497,-0.585136,-4.247889,1.756837,-6.147764,-2.651405,-4.663669,-5.893239,3.207576,8.834029,-5.912204,8.171022,-4.362913,-8.281270,1.528025,-2.484778,-0.301460,3.077724,-4.855819,-7.975320,0.149009,1.181835,-8.218576,9.356271,3.268625,7.034540,-6.320278,5.055903,1.984013,-3.647492,-0.504683,7.520614,6.652856,-3.735874,7.850205,-8.339735,0.948079,-8.072057,9.358788,5.063354,-2.817622,1.279595,-9.842093,7.981357,-6.095639,-2.454475,7.220757,1.093364,-1.890641,-5.922794,5.306159,1.510263,-8.757767,-0.623403,1.318353,8.042598,5.268073,-8.775203,0.626281,7.175356,-0.239102,9.134096,5.169558,-3.163350,-7.746154,-3.975298,-7.099473,-9.780587,0.357097,-6.282384,-4.545167,5.373524,-5.484666,1.075791,4.763606,-4.764173,0.986021,0.358033,-5.076561,-9.494428,1.071051,-7.142966,-1.384978,-9.741573,-0.506952,-9.440435,-5.670923,-5.520558,-5.389580,9.159808,-6.771140,5.191907,0.758892,0.729667,-7.684030,-4.794318,-6.646619,2.254254,0.031820,-0.824220,2.649031,-2.338235,-2.993996,-3.232143,4.212086,8.039639,5.958892,1.723818,2.862064,3.113308,-0.929004,1.833640,-1.152863,-0.119101,0.136570,6.698017,7.775696,-2.452240,-7.930946,-5.994562,-1.613072,-7.428650,-1.823336,-2.258477,-8.229561,-4.629172,8.014881,9.013720,-8.818155,7.300548,-3.366081,-4.731815,4.126708,-2.773392,-9.380293,4.166657,-2.454280,-1.629034,1.605610,-7.973928,-4.769828,-1.583754,7.313213,-8.363808,3.048737,2.639321,-6.315518,-6.435085,-7.610345,-6.931984,7.137733,-6.951918,2.024031,5.032085,8.955435,-8.060179,-0.382786,-8.178293,-7.964312,4.239500,-6.810775,4.441335,5.992799,-2.284996,-1.615312,-9.068676,-8.747875,7.270719,8.718389,-5.258504,5.823006,1.967280,-0.167344,5.605129,-1.608163,-4.987442,8.551399,1.141684,8.250797,-6.328238,-9.385501,-5.679635,6.766663,-3.427301,-0.365305,-9.673084,1.337789,2.520396,6.017506,-4.621212,1.629925,-5.971618,7.792653,4.894088,-9.794715,-4.133784,-9.930003,8.222060,3.983681,3.948641,8.609141,3.725799,3.038191,-8.953884,1.015127,-3.752221,3.663069,0.016988,-3.722231,-3.998915,-7.624637,-7.859357,5.830889,8.899005,7.375331,-7.131491,-1.718012,-6.714563,-1.785277,-3.639654,3.473103,-6.715818,1.610386,3.364785,6.662214,-9.600383,8.232951,-1.022034,6.084430,0.450523,-2.253996,9.846909,0.514732,-5.403632,-4.392619,8.159419,5.261529,-0.568090,5.992435,2.726615,4.063076,-1.660994,-6.907016,4.606971,-8.376620,-3.808965,-9.125256,4.554785,4.881362,3.654212,-3.369341,-5.359829,4.939276,7.612317,-9.546506,9.491423,-3.296599,-8.466867,-1.534071,-4.742935,-2.593471,-3.341168,-3.781418,-2.550236,4.346983,8.830986,-5.471784,-9.377379,4.254558,-6.998554,-5.004398,9.429300,-2.666853,7.160548,-0.479334,6.949386,-2.621529,2.675801,-7.478523,6.710119,-9.835946,5.371444,-6.410644,-7.341160,0.299570,3.856104,-2.287081,5.683203,7.750136,2.023477,-4.276145,-1.428711,-5.213886,-9.424960,-7.755392,3.900230,-1.611624,3.433035,-6.696547,-0.497307,0.444254,3.846725,7.576657,-3.446919,9.393816,-9.196503,-9.694948,-3.368066,-1.595287,3.709345,-9.520293,7.406979,-7.787648,2.139059,-8.706963,-3.721886,-5.607445,1.911653,-3.119408,-8.471966,-8.254303,-1.295906,5.642950,6.373485,7.423652,-4.360216,9.209190,-9.666402,0.877949,-9.038081,-9.933831,5.119224,-1.403916,-3.701919,-8.661090,-1.576890,9.996339,3.193533,-4.002927,-5.778460,-7.881173,7.372675,0.393676,1.865005,-3.885697,-0.137029,-7.827634,8.414629,6.334240,-3.451737,-6.925092,-2.288226,9.081771,-0.365661,-4.539300,6.438115,-9.557388,6.909927,-3.732236,-3.207081,-6.182292,0.938204,-2.039624,-3.528573,-1.220731,5.882291,6.809815,-1.978112,4.052931,-9.114216,-5.968748,-1.975986,8.201921,-9.751157,-1.734908,-4.945417,2.512514,-7.543469,-1.413805,6.813693,2.271982,7.783621,-0.385613,9.049364,-0.032891,-6.734446,7.382457,5.145698,-1.539637,-5.382009,-6.846905,5.213394,4.494019,2.533960,-2.370675,-1.899495,4.023771,0.705685,-3.092911,-8.884597,-1.932916,2.248840,0.862287,-3.438350,-6.094153,4.548978,8.393540,-4.569370,-8.024398,-4.452562,1.848950,-9.971774,-0.277055,-2.877258,-2.919742,-7.112118,9.884149,-2.095040,-4.852570,-2.203160,6.494521,-2.981386,6.217389,2.025577,-4.030120,-6.813088,3.510474,1.248631,-8.344188,-5.723695,-2.722284,-9.818525,-9.781927,-1.269100,6.616062,9.339814,-1.394909,-3.041869,-1.168514,3.437844,0.050544,-9.229244,-7.019015,3.403451,-6.682162,3.288947,-0.286480,-4.857548,-1.719119,5.901581,-3.946503,9.524653,-0.956350,-8.581948,2.801185,-5.548986,8.617990,0.300803,-0.372372,4.046121,-6.770569,1.224310,-4.161420,6.500366,-9.448253,-8.973734,7.669668,-2.210278,4.642723,1.608413,-2.334712,-4.729625,-2.345175,-7.265415,-0.807184,6.373339,-7.179785,9.091070,2.582236,-7.630724,3.880708,-9.358833,-5.314172,6.297498,0.633525,-8.279982,-6.805275,0.867401,9.566957,8.423539,3.603914,-5.420877,6.825438,-5.504675,0.784525,-8.304425,-6.705580,8.546179,5.633261,-1.741510,0.420505,5.113899,7.467510,4.155402,-2.519734,-2.926259,8.014378,6.593605,-1.967562,2.102656,-6.330934,2.087191,-3.599470,9.925982,7.034837,-8.029554,8.422291,-2.331341,2.285336,1.023464,-8.875863,9.247093,-5.912437,-9.182236,8.193411,-5.349280,5.321596,-8.234001,5.189750,-9.295213,1.169428,0.897028,-6.782004,-1.535708,3.176194,9.111959,9.815369,-3.212006,0.211604,8.317828,-2.373507,2.709772,6.789387,-6.759639,0.679857,8.475005,8.167063,9.804242,-5.600245,2.515674,7.526687,0.746160,-9.674486,6.467843,-6.990089,-2.022405,-6.452783,-2.584013,2.441250,-9.310693,4.771034,0.303409,0.656768,-8.098476,-0.914369,0.993011,-8.984714,2.764324,-7.664845,9.420088,5.690051,-0.203170,9.762944,4.755850,1.672886,8.796706,0.060054,1.461153,-3.512180,-2.199420,-5.814618,-1.280198,-0.497303,8.172082,-5.948705,0.064713,-4.582620,-4.032801,-5.668347,-3.242967,5.558481,8.378142], dtype = "float64")#candidate|4166|(640,)|const|float64
call_4165 = relay.TupleGetItem(func_3150_call(relay.reshape(const_4166.astype('float64'), [640,])), 4)
call_4167 = relay.TupleGetItem(func_3152_call(relay.reshape(const_4166.astype('float64'), [640,])), 4)
func_222_call = mod.get_global_var('func_222')
func_226_call = mutated_mod.get_global_var('func_226')
var_4182 = relay.var("var_4182", dtype = "float64", shape = (32, 2))#candidate|4182|(32, 2)|var|float64
call_4181 = relay.TupleGetItem(func_222_call(relay.reshape(var_4182.astype('float64'), [8, 4, 2]), relay.reshape(var_4182.astype('float64'), [8, 4, 2]), ), 2)
call_4183 = relay.TupleGetItem(func_226_call(relay.reshape(var_4182.astype('float64'), [8, 4, 2]), relay.reshape(var_4182.astype('float64'), [8, 4, 2]), ), 2)
output = relay.Tuple([call_4135,call_4165,const_4166,call_4181,var_4182,])
output2 = relay.Tuple([call_4136,call_4167,const_4166,call_4183,var_4182,])
func_4189 = relay.Function([var_4182,], output)
mod['func_4189'] = func_4189
mod = relay.transform.InferType()(mod)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4190 = relay.var("var_4190", dtype = "float64", shape = (32, 2))#candidate|4190|(32, 2)|var|float64
func_4189_call = mutated_mod.get_global_var('func_4189')
call_4191 = func_4189_call(var_4190)
output = call_4191
func_4192 = relay.Function([var_4190], output)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_4201 = relay.TupleGetItem(func_2833_call(), 0)
call_4202 = relay.TupleGetItem(func_2835_call(), 0)
output = relay.Tuple([call_4201,])
output2 = relay.Tuple([call_4202,])
func_4213 = relay.Function([], output)
mod['func_4213'] = func_4213
mod = relay.transform.InferType()(mod)
mutated_mod['func_4213'] = func_4213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4213_call = mutated_mod.get_global_var('func_4213')
call_4214 = func_4213_call()
output = call_4214
func_4215 = relay.Function([], output)
mutated_mod['func_4215'] = func_4215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_4220 = relay.TupleGetItem(func_3022_call(), 0)
call_4221 = relay.TupleGetItem(func_3023_call(), 0)
var_4222 = relay.var("var_4222", dtype = "float32", shape = (12, 5, 3))#candidate|4222|(12, 5, 3)|var|float32
bop_4223 = relay.bitwise_and(call_4220.astype('int8'), relay.reshape(var_4222.astype('int8'), relay.shape_of(call_4220))) # shape=(12, 5, 3)
bop_4226 = relay.bitwise_and(call_4221.astype('int8'), relay.reshape(var_4222.astype('int8'), relay.shape_of(call_4221))) # shape=(12, 5, 3)
output = bop_4223
output2 = bop_4226
func_4236 = relay.Function([var_4222,], output)
mod['func_4236'] = func_4236
mod = relay.transform.InferType()(mod)
var_4237 = relay.var("var_4237", dtype = "float32", shape = (12, 5, 3))#candidate|4237|(12, 5, 3)|var|float32
output = func_4236(var_4237)
func_4238 = relay.Function([var_4237], output)
mutated_mod['func_4238'] = func_4238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4298 = relay.TupleGetItem(func_3352_call(), 0)
call_4299 = relay.TupleGetItem(func_3354_call(), 0)
output = relay.Tuple([call_4298,])
output2 = relay.Tuple([call_4299,])
func_4374 = relay.Function([], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
output = func_4374()
func_4375 = relay.Function([], output)
mutated_mod['func_4375'] = func_4375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4403 = relay.TupleGetItem(func_4112_call(), 0)
call_4404 = relay.TupleGetItem(func_4113_call(), 0)
output = call_4403
output2 = call_4404
func_4416 = relay.Function([], output)
mod['func_4416'] = func_4416
mod = relay.transform.InferType()(mod)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mutated_mod.get_global_var('func_4416')
call_4417 = func_4416_call()
output = call_4417
func_4418 = relay.Function([], output)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_4419 = relay.TupleGetItem(func_3124_call(), 0)
call_4420 = relay.TupleGetItem(func_3125_call(), 0)
var_4432 = relay.var("var_4432", dtype = "float64", shape = (12, 5, 3))#candidate|4432|(12, 5, 3)|var|float64
bop_4433 = relay.less_equal(call_4419.astype('bool'), relay.reshape(var_4432.astype('bool'), relay.shape_of(call_4419))) # shape=(12, 5, 3)
bop_4436 = relay.less_equal(call_4420.astype('bool'), relay.reshape(var_4432.astype('bool'), relay.shape_of(call_4420))) # shape=(12, 5, 3)
uop_4445 = relay.log10(bop_4433.astype('float64')) # shape=(12, 5, 3)
uop_4447 = relay.log10(bop_4436.astype('float64')) # shape=(12, 5, 3)
output = relay.Tuple([uop_4445,])
output2 = relay.Tuple([uop_4447,])
func_4448 = relay.Function([var_4432,], output)
mod['func_4448'] = func_4448
mod = relay.transform.InferType()(mod)
var_4449 = relay.var("var_4449", dtype = "float64", shape = (12, 5, 3))#candidate|4449|(12, 5, 3)|var|float64
output = func_4448(var_4449)
func_4450 = relay.Function([var_4449], output)
mutated_mod['func_4450'] = func_4450
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4475 = relay.const([[[8.665920,-4.322604,-0.586013],[4.983012,-9.005790,-7.468856],[4.419189,-8.603830,-5.547789],[7.219777,-5.325288,6.732102],[-7.432869,-2.395984,5.952000],[2.921201,6.033985,-4.060528],[-9.044082,0.590670,5.602762],[8.604075,6.921765,-4.855257],[-2.200898,5.057775,8.987306],[-0.884073,-4.148032,6.184631],[-4.365488,-4.854108,-8.939859],[0.328273,-6.475785,-4.886968],[-3.585348,-1.209060,5.324840]],[[5.459912,-4.497537,-3.890930],[-7.867807,-7.728452,-3.071239],[-5.299295,-7.067516,-9.411892],[6.501066,9.751518,-5.078994],[-2.332936,1.599482,-7.517607],[9.810598,-8.763967,2.701015],[5.802022,-4.736031,-7.796966],[-9.856704,3.406374,5.577251],[7.059261,-7.027944,3.508476],[-6.927513,8.385359,-0.525056],[-9.999416,-1.050061,-7.323575],[-7.768862,1.684251,7.061215],[7.050720,-1.240606,-9.673342]],[[-1.056020,3.342921,-1.885160],[4.587343,-1.311859,-7.280055],[-8.517190,-0.966430,1.178703],[-2.694283,-0.240424,-8.075162],[5.100572,3.711145,8.853355],[-0.017578,-1.769544,-7.614448],[-1.860986,2.449871,-9.550174],[5.721651,2.746796,5.352969],[-2.275492,-2.743382,5.652746],[-9.731816,-3.894101,4.684947],[0.466254,2.049533,4.380396],[-2.521454,3.899062,-7.731676],[8.787083,-0.824567,6.198825]],[[-7.411387,-8.918837,-9.949267],[2.417253,-1.379544,6.092087],[6.956296,5.375670,-5.701609],[-2.341473,-2.915964,-5.110506],[-0.228153,1.464890,-2.440598],[-3.781086,-5.514698,9.899278],[1.453428,-2.595555,-3.855212],[4.137304,-6.297590,-8.907418],[0.577693,-0.119045,-0.741306],[-6.478137,-3.924182,-3.972831],[-9.220401,1.265665,6.125264],[7.073754,-3.512097,-4.450370],[2.682348,-3.009545,8.855773]],[[-3.468389,-9.085929,-9.534144],[-8.603606,8.788571,-9.935045],[3.835557,-2.222408,-9.593732],[-6.360662,-3.900794,6.505330],[9.128612,-8.355830,-2.494866],[5.817632,-2.683141,5.861565],[-2.831243,3.286439,3.356733],[0.473747,-9.491963,9.549855],[0.106965,4.972737,-7.616440],[0.421939,3.167405,-6.883546],[7.276361,1.229295,2.593862],[-0.847461,-5.829257,6.899926],[-5.025458,-8.580138,-1.442583]],[[4.872122,5.384944,-8.524641],[7.914109,-1.900172,8.351568],[-8.050939,-3.895537,1.342796],[3.379094,8.688012,1.535439],[4.270060,-2.094251,2.470575],[4.134916,-5.178853,7.292898],[7.425608,-0.731086,5.346604],[-9.749062,-5.893103,1.608847],[-0.206599,-9.985881,-4.135587],[-0.039797,2.695420,-6.463942],[0.094250,1.380679,-0.670091],[-6.193141,9.640170,0.895750],[0.101187,-2.625032,-2.719784]],[[4.749500,-2.088900,1.255206],[8.269551,-3.994842,-6.486719],[9.861765,4.126719,7.263123],[9.743825,3.077056,6.368913],[-9.309586,-1.288231,-8.528564],[-1.281953,5.214089,7.363437],[-0.884873,-1.836061,4.137948],[5.862842,-0.287439,8.293655],[-7.155864,-8.639624,7.921312],[0.470101,-5.943364,3.119923],[-2.317529,-7.300513,-6.175432],[-9.345594,-2.653824,-7.267848],[0.510686,2.461143,-0.763217]],[[-2.074683,3.342759,-0.582189],[-9.876930,-0.164705,4.378579],[5.824963,-1.718692,5.565624],[-4.168472,5.379451,-8.025512],[-0.244014,2.434534,4.375871],[7.649903,-4.768924,-5.165966],[6.441509,-6.133430,5.317720],[3.384365,-1.495582,-1.350874],[1.832940,5.765437,-5.123576],[-7.545617,-2.940990,-4.436364],[6.967432,5.178983,-9.096337],[-6.929211,-0.167318,-5.332451],[-8.226071,-0.826538,3.312643]],[[-4.293966,8.401627,1.762566],[6.098130,1.324733,8.643015],[5.844421,0.738373,-8.206151],[3.182670,0.497117,-5.277163],[9.134861,-7.343549,7.364394],[2.497380,-3.889151,6.541432],[-0.242067,8.264864,-9.181844],[9.914308,5.399433,-9.256399],[-0.430321,-2.666917,8.884514],[5.672461,3.746669,2.180773],[8.043916,-4.680495,2.384575],[4.053083,-1.549922,1.709463],[4.940231,-5.987136,5.478148]],[[3.669133,-3.227344,-1.402307],[-0.821413,4.958409,1.826035],[-3.404798,8.047493,-1.970355],[-4.565784,-5.334977,-3.649713],[-1.999629,-8.983067,-5.240366],[7.105501,2.763188,5.586900],[-6.553640,-0.989465,1.238432],[-2.506043,-7.470964,-6.765964],[-5.812121,4.488671,7.869921],[6.132280,5.827671,-5.865296],[3.523176,2.236723,-5.670112],[-6.886945,-7.008160,-9.086750],[-7.773501,3.249781,-0.311902]],[[2.792963,0.743612,3.211738],[-9.668100,-2.974330,-9.215830],[3.081948,-4.980229,-8.019959],[7.784121,2.878201,2.520372],[6.322357,-8.398057,6.779085],[-4.857821,-1.683157,9.154177],[-5.403333,-3.511719,3.362280],[-4.744933,-8.489786,-4.871613],[0.513976,-4.965543,8.727930],[-5.534025,4.418571,-0.228919],[6.916529,-0.950426,-3.908749],[4.572949,6.398546,9.812437],[-4.615392,-0.376784,-5.659540]],[[8.340158,-2.520389,2.126894],[-5.765842,8.619294,-3.410208],[-7.869717,-1.047604,3.302395],[-4.290033,-4.182046,-4.388766],[-9.738178,5.633052,-0.542545],[1.951671,0.852307,4.704632],[-7.982899,-4.799660,4.451951],[5.660100,-8.880956,-1.958418],[-7.276323,-3.187978,3.912592],[-7.739824,4.191865,-4.559687],[3.674611,8.691438,2.287292],[7.365356,-4.052351,6.081833],[8.787082,7.045500,7.593085]],[[5.539697,-2.383895,-5.569387],[1.552895,-7.621683,-1.111028],[-2.078257,-9.674861,-1.863212],[-1.382371,8.911897,1.652903],[-7.350684,1.043014,-6.879201],[-1.850819,-0.274326,1.861840],[-0.253729,7.036601,5.644409],[0.993303,-2.945399,5.221354],[4.647487,-9.976776,9.565975],[-7.346596,-1.165989,2.308222],[-2.967127,9.987363,3.567727],[3.389696,4.624589,-3.926741],[-7.607088,-9.679442,2.696778]]], dtype = "float64")#candidate|4475|(13, 13, 3)|const|float64
var_4476 = relay.var("var_4476", dtype = "float64", shape = (13, 13, 3))#candidate|4476|(13, 13, 3)|var|float64
bop_4477 = relay.floor_mod(const_4475.astype('float64'), relay.reshape(var_4476.astype('float64'), relay.shape_of(const_4475))) # shape=(13, 13, 3)
func_1988_call = mod.get_global_var('func_1988')
func_1992_call = mutated_mod.get_global_var('func_1992')
var_4482 = relay.var("var_4482", dtype = "uint8", shape = (693,))#candidate|4482|(693,)|var|uint8
var_4483 = relay.var("var_4483", dtype = "float64", shape = (640,))#candidate|4483|(640,)|var|float64
call_4481 = relay.TupleGetItem(func_1988_call(relay.reshape(var_4482.astype('uint8'), [11, 7, 9]), relay.reshape(var_4482.astype('float64'), [11, 7, 9]), relay.reshape(var_4483.astype('float64'), [640,]), ), 1)
call_4484 = relay.TupleGetItem(func_1992_call(relay.reshape(var_4482.astype('uint8'), [11, 7, 9]), relay.reshape(var_4482.astype('float64'), [11, 7, 9]), relay.reshape(var_4483.astype('float64'), [640,]), ), 1)
func_3535_call = mod.get_global_var('func_3535')
func_3536_call = mutated_mod.get_global_var('func_3536')
call_4493 = relay.TupleGetItem(func_3535_call(), 0)
call_4494 = relay.TupleGetItem(func_3536_call(), 0)
func_3302_call = mod.get_global_var('func_3302')
func_3304_call = mutated_mod.get_global_var('func_3304')
var_4504 = relay.var("var_4504", dtype = "float32", shape = (180, 1))#candidate|4504|(180, 1)|var|float32
call_4503 = func_3302_call(relay.reshape(var_4504.astype('float32'), [12, 5, 3]))
call_4505 = func_3302_call(relay.reshape(var_4504.astype('float32'), [12, 5, 3]))
bop_4511 = relay.multiply(bop_4477.astype('int64'), relay.reshape(var_4476.astype('int64'), relay.shape_of(bop_4477))) # shape=(13, 13, 3)
bop_4523 = relay.multiply(var_4504.astype('int8'), var_4482.astype('int8')) # shape=(180, 693)
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
var_4535 = relay.var("var_4535", dtype = "float64", shape = (2, 108))#candidate|4535|(2, 108)|var|float64
call_4534 = relay.TupleGetItem(func_2121_call(relay.reshape(var_4535.astype('float64'), [9, 3, 8])), 0)
call_4536 = relay.TupleGetItem(func_2123_call(relay.reshape(var_4535.astype('float64'), [9, 3, 8])), 0)
func_3302_call = mod.get_global_var('func_3302')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_4541 = func_3302_call(relay.reshape(call_4503.astype('float32'), [12, 5, 3]))
call_4542 = func_3302_call(relay.reshape(call_4503.astype('float32'), [12, 5, 3]))
func_3626_call = mod.get_global_var('func_3626')
func_3630_call = mutated_mod.get_global_var('func_3630')
const_4547 = relay.const([[7.608199,5.408247],[5.521378,2.317268],[-2.019214,-3.796116],[-6.400855,-6.353952],[-7.217687,-2.501410],[7.668032,9.910179],[9.683092,9.174330],[8.956378,6.864038],[-8.664771,-4.743199],[8.621870,7.765048],[7.517275,-5.728220],[-9.130441,8.835178],[0.951979,5.104676]], dtype = "float64")#candidate|4547|(13, 2)|const|float64
var_4548 = relay.var("var_4548", dtype = "float64", shape = (338,))#candidate|4548|(338,)|var|float64
call_4546 = relay.TupleGetItem(func_3626_call(relay.reshape(const_4547.astype('float64'), [13, 1, 2]), relay.reshape(var_4548.astype('float64'), [13, 13, 2]), ), 1)
call_4549 = relay.TupleGetItem(func_3630_call(relay.reshape(const_4547.astype('float64'), [13, 1, 2]), relay.reshape(var_4548.astype('float64'), [13, 13, 2]), ), 1)
output = relay.Tuple([call_4481,var_4483,call_4493,call_4503,bop_4511,bop_4523,call_4534,var_4535,call_4541,call_4546,const_4547,var_4548,])
output2 = relay.Tuple([call_4484,var_4483,call_4494,call_4505,bop_4511,bop_4523,call_4536,var_4535,call_4542,call_4549,const_4547,var_4548,])
func_4556 = relay.Function([var_4476,var_4482,var_4483,var_4504,var_4535,var_4548,], output)
mod['func_4556'] = func_4556
mod = relay.transform.InferType()(mod)
var_4557 = relay.var("var_4557", dtype = "float64", shape = (13, 13, 3))#candidate|4557|(13, 13, 3)|var|float64
var_4558 = relay.var("var_4558", dtype = "uint8", shape = (693,))#candidate|4558|(693,)|var|uint8
var_4559 = relay.var("var_4559", dtype = "float64", shape = (640,))#candidate|4559|(640,)|var|float64
var_4560 = relay.var("var_4560", dtype = "float32", shape = (180, 1))#candidate|4560|(180, 1)|var|float32
var_4561 = relay.var("var_4561", dtype = "float64", shape = (2, 108))#candidate|4561|(2, 108)|var|float64
var_4562 = relay.var("var_4562", dtype = "float64", shape = (338,))#candidate|4562|(338,)|var|float64
output = func_4556(var_4557,var_4558,var_4559,var_4560,var_4561,var_4562,)
func_4563 = relay.Function([var_4557,var_4558,var_4559,var_4560,var_4561,var_4562,], output)
mutated_mod['func_4563'] = func_4563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3535_call = mod.get_global_var('func_3535')
func_3536_call = mutated_mod.get_global_var('func_3536')
call_4582 = relay.TupleGetItem(func_3535_call(), 0)
call_4583 = relay.TupleGetItem(func_3536_call(), 0)
uop_4584 = relay.sqrt(call_4582.astype('float64')) # shape=(8, 12, 5)
uop_4586 = relay.sqrt(call_4583.astype('float64')) # shape=(8, 12, 5)
func_365_call = mod.get_global_var('func_365')
func_367_call = mutated_mod.get_global_var('func_367')
call_4592 = relay.TupleGetItem(func_365_call(relay.reshape(uop_4584.astype('float32'), [8, 12, 5])), 2)
call_4593 = relay.TupleGetItem(func_367_call(relay.reshape(uop_4584.astype('float32'), [8, 12, 5])), 2)
func_1828_call = mod.get_global_var('func_1828')
func_1831_call = mutated_mod.get_global_var('func_1831')
const_4600 = relay.const([1.037049,1.428829,-5.571767,-1.355827,7.042407,6.264803,7.025499,-2.396815,-3.909070,-3.667605,-8.150983,-6.914746,4.033041,-6.708957,-8.090931,2.621787,0.937821,1.681850,8.032551,9.685155,-2.872334,3.921003,-9.010738,0.298584,-8.266411,4.805787,7.173741,-0.403626,4.944803,9.260816,-2.555201,8.057934,8.145538,8.476795,5.769534,-4.049282,-2.521211,1.771241,4.551997,1.501175,-4.743174,-5.645379,-6.843918,-7.232765,9.806183,-3.849558,-8.999893,5.663644,-9.521022,-5.731586,-0.365413,2.419731,-2.282032,1.449908,7.835547,7.148482,2.831685,9.868568,1.735878,8.888587,6.508427,-0.150242,-2.113274,0.427555,7.585240,-4.914789,-5.762885,-4.386506,-5.092419,-3.240746,-8.265245,1.620291,0.194420,8.357868,-6.908664,1.265890,-6.335147,2.189334,-9.087837,3.921372,-0.422400,7.055196,1.785711,5.469059,8.564858,2.543876,-9.770716,-8.514070,2.299679,-5.612707,-2.767061,6.302288,3.822446,9.656873,-2.555236,2.320597,-1.432724,4.309000,-0.072263,8.788878,1.900316,6.690733,5.862378,0.629168,-9.417717,-7.279586,-9.030752,1.829938,-4.468748,5.955795,-3.732490,1.137695,0.487843,-3.535719,-3.726844,1.765513,9.554951,7.496047,-9.998930,9.644262,-1.980056,-6.758386,-3.993839,-9.733342,-3.525169,6.039516,7.265938,-4.341132,7.224047,-6.677217,-3.799977,8.088314,2.839029,8.791659,-9.563956,-5.827789,-4.233418,5.377180,-7.774898,-1.525606,3.187320,8.559135,-7.485113,1.808505,9.200288,0.208567,2.146685,8.306709,6.556474,0.503102,7.403294,-0.583622,-1.540895,-8.938450,-3.343772,4.449639,-3.939275,-0.989579,-5.320932,1.411080,5.603041,-8.999007,6.955618,1.964414,-8.472583,-3.543545,-2.851078,5.782318,-0.509659,-2.913639,-2.473501,-0.321183,-4.468104,-8.312663,-8.387974,-3.000284,-8.711625,9.774076,-9.897097,2.053371,2.505966,9.691711,-0.112887,-2.616678,-2.515120,0.976979,-4.431235,-9.166073,-1.655901,-3.732102,-6.485124,2.360091,8.685944,-9.202027,1.970080,-6.070487,-4.209702,6.583507,-6.942059,6.021405,-7.315675,-3.239378,1.523109,2.719148,2.672433,-1.943639,3.815680,-9.565025,-7.894714,-0.791374,-9.164298,-7.517603,-2.973686,-6.156320,9.225803,-7.787241,-1.402846,8.668169,1.464726,-2.720745,-2.694083,-4.820310,-1.788152,-5.629119,0.444124,-6.932755,7.844065,-3.357409,-3.368899,-8.145682,6.552150,6.095067,5.907082,8.161547,-5.672017,2.677502,-1.468539,-9.574194,1.405453,-8.629487,7.471173,-5.352269,3.123482,4.839369,3.843576,-8.260913,-6.466732,0.740167,-9.037907,-1.394372,-6.114587,2.825067,7.600527,4.995125,-3.927862,8.662438,-4.026477,-9.275798,5.204764,-4.825109,2.830096,4.034736,-6.139832,-9.745432,9.257601,6.013143,-8.813099,-1.521075,-1.952798,-7.948679,0.093857,3.683032,-3.922253,-0.241002,1.195159,-7.900157,6.600606,-6.293438,-5.959687,-1.792869,3.708238,6.779899,-4.177089,0.125077,5.301519,8.923420,7.088377,9.082510,-9.511890,7.089583,-0.917988,-9.588754,6.021404,0.935709,0.229308,0.383843,-6.353540,7.491957,7.062945,5.929069,-2.392289,0.788055,5.097304,6.573731,-8.332307,7.528088,6.615346,-2.955817,-7.777411,-8.029368,3.023969,-7.566228,7.555572,-7.492896,-0.420955,5.338249,-1.836428,4.502203,9.674366,0.995565,9.738189,-0.364824,9.388978,-1.018037,5.624779,1.984438,-5.688628,-2.741749,1.200338,-9.881994,-4.220478,7.633602,3.365851,4.592852,9.181492,-0.581046,1.737913,6.441928,-3.107042,4.827104,6.769897,-1.519519,-6.344959,2.950953,-9.413901,-5.478452,8.646318,0.490063,-3.142176,-5.783327,-8.422549,-3.770932,5.489165,-4.743244,1.364904,6.479396,-0.903329,4.983040,-7.852655,1.449537,-5.747762,-6.069246,6.477013,-1.045838,-6.312024,5.498855,-9.991482,-0.591529,-7.579456,3.229844,-7.765632,-5.471358,-6.679052,-7.904752,-0.322290,4.883567,7.552874,-4.934316,-3.723974,-9.604068,1.391257,2.864961,5.307429,-9.017082,-2.202036,-1.243863,-8.474359,0.628472,-8.272303,-6.559371,5.838767,4.432871,7.375248,4.478159,7.792387,-7.209903,-7.151802,-4.828778,2.103106,8.839106,-7.948138,2.787323,-7.636906,7.669108,-6.289883,7.090119,-5.208702,-0.696797,-4.767595,6.241663,0.313750,5.849972,7.779154,9.575890,-8.965353,-6.525662,-8.590636,6.460839,-9.128571,9.390076,-5.851638,5.660913,-4.711408,-9.567596,0.771524,-6.003489,0.584762,-0.105199,3.132819,-3.870123,-3.534256,-4.523367,-4.528636,8.678826,-1.910714,9.812144,4.787485,7.871219,-3.430587,1.824470,0.677344,-1.915195,6.994215,8.066019,-5.461524,-2.649157,-4.532491,-3.994950,-1.540078,-0.755773,-3.278075,-1.436144,-0.565379,3.743056,2.591361,-2.907317,-3.858736,-4.567148,-3.198493,-6.891310,3.934545,4.167390,1.024530,-8.953284,-2.301015,7.905225,-1.484647,-2.361759,4.680165,6.661572,-4.292838,-4.608352,-9.856305,-7.963547,-4.758301,3.416437,9.440815,-0.638657,-6.798373,1.508386,3.362796,-3.252823,-7.273773,-5.767911,-1.881467,-0.619697,4.326600,-9.565399,3.623001,-0.348315,1.201437,1.388286,0.442608,-1.471755,-4.278848,-4.168025,-2.564647,0.343186,6.530887,-4.322689,1.149778,2.367899,7.000772,-7.954381,-0.779565,1.753281,3.765172,3.868595,-7.750385,-3.519179,3.052449,-6.889641,3.342378,-4.015689,5.849026,1.808332,5.399036,8.845351,-7.582878,-6.422790,4.881172,-9.085624,-6.009159,6.346586,1.846894,-5.016415,-2.016846,-0.643669,-2.064494,-9.870007,-6.889835,9.161193,-8.263118,-7.954564,-3.771418,-1.865912,-7.351154,-2.934662,-5.691636,2.768726,-9.911611,-4.472797,-2.313931,-6.363914,0.823009,-9.804267,-3.427312,8.410191,8.317998,4.327719,-5.450894,4.645521,0.222991,-3.361844,2.675716,4.346038,4.362464,-6.817850,8.581192,-4.406674,7.488752,-9.633547,-6.703587,0.252864,7.808285,-6.061970,-7.726011,5.860462,3.988324,6.080087,3.322161,-2.257081,-2.443403,4.726292,-0.967664,-1.992323,-2.727799,3.470034,-0.947953,-1.899764,-3.366717,-4.610059,-6.267403,-4.375914,5.051060,-6.358683,-4.843878,1.741221,2.465959,-8.257409,-0.487070,-0.396010,7.988332,-2.755329,-5.511589,-8.933614,0.585563,1.185778,-0.642244,5.971824,8.660681,-6.520946,8.561419,-5.989204,-2.507645,-3.313985,2.161019,-8.667346,-5.324485,-5.425604,1.613468,3.029486,6.152814,4.613456,-9.025832,6.080463,-7.094794,-5.082929,2.926421,7.623605,4.154902,7.719884,-7.182125,-5.780809,-8.768345,6.880461,1.180428,-7.923179,5.956265,-5.029054,-8.542289,4.850019,3.350580,-5.411321,-4.499055,7.727921,7.435941,-6.191210,-4.069283,2.213589,5.972765,-1.797191,7.561684,-5.061126,-2.198007,6.257482,-9.511916,-5.433290,-1.071368,7.955009,-2.208613,-0.061907,5.070281,5.880160,1.408304,-4.085857,7.178695,7.639471,8.213472,4.229164,-4.383664,-4.028501,6.552173,7.898688,-7.182138,-1.079523,3.839576,-6.522364,2.957994,-7.961782,-0.369924,4.897037,5.797371,5.535695,-7.758411,8.279792,1.997104,-2.812355,-7.648110,-7.218278,-0.541760,1.992163,3.808817,-9.655157,1.224037,-9.550361,9.021102,5.958103,-3.708015,8.413257,9.407327,-0.718054,-8.323918,1.895750,-0.408137,9.315061,-3.846961,-0.396928,9.195098,-8.433309,9.296255,-2.854594,-2.520452,6.921202,-7.767440,-4.088652,4.830672,-6.024318,3.878583,-2.106012,0.636015,-1.545161,-3.626903,-9.693258,0.048901,-3.965300,8.272714,2.228705,-5.046759,-0.783894,3.472345,-0.309254,2.197774,-2.986068,-5.196894,-7.493863,8.533295,3.439147,4.136819,4.936065,-5.980653,8.599223,-3.533763,-9.087820,-1.361221,-7.071192,9.534557,-8.675248,6.485163,0.764795,-7.436891,-1.571452,-3.370307,7.842637,5.467066,-6.958964,9.614872,5.119170,-3.199321,-6.005514,-3.984230,-3.413895,-5.986107,6.727688,6.312298,3.079684,-1.285927,3.234138,-7.694654,3.036186,9.413800,0.898569,9.927615,6.795201,-9.735252,-2.040735,-6.617086,-2.006234,-5.146175,-1.420775,-2.948836,6.183717,3.517970,1.340710,6.686331,6.468012,-1.225532,0.021578,7.779689,1.313035,5.638721,3.780638,-4.194744,-5.766250,5.250142,3.818432,-8.178511,-0.659308,0.632752,6.156357,-3.976299,-8.365165,-0.382496,2.704815,-1.969087,5.170785,-4.347500,0.924247,9.350268,5.864436,-2.539465,-3.265056,4.091175,8.484514,4.711258,-3.889782,7.361192,-5.410952,-2.942593,-8.275470,2.190832,-8.588463,-7.700300,-4.823113,1.772268,-4.545327,-9.164054,8.489458,0.713440,0.472820,4.091995,0.265149,-6.036868,-0.378214,2.133347,1.276258,7.979255,-4.633055,6.582281,6.503546,8.493002,-2.072948,-0.476158,5.637974,-7.540625,-7.740303,-2.934049,3.378577,-9.889641,-4.158455,-7.499754,-2.720715,7.235760,5.851943,8.616687,-0.022804,-7.165886,9.642020,-2.724029,-1.518946,1.498014,-4.777142,-9.139236,-3.126389,-8.240476,-2.986273,-2.516884,-6.389189,-2.004871,-9.269758,-4.570795,-0.322126,5.801002,1.666931,-2.090062,2.217950,1.737047,-4.395525,8.436435,-8.184281,9.425797,-3.250932,7.069616,4.235982,-5.163245,4.942947,-7.539906,5.937103,8.719478,1.679563,-3.653642,2.765818,8.512299,-0.797735,-5.560948,-7.986396,2.519263,4.444636,3.546069,-9.599729,-8.677963,-6.469742,0.004685,5.466767,-5.902595,0.654122,1.441449,-4.473443,-6.467743,5.866671,0.243838,-6.778645,-0.031135,5.325097,-4.733267,3.940629,-4.048265,-8.726442,9.085026,-9.777587,-4.071177,-2.372602,9.442225,-4.468162,0.229497,-2.785604,4.106293,-4.345983,5.665492,0.974948,7.643325,-0.801011,-5.687472,-1.723485,-0.433821,-9.704844,-1.350082,-6.183154,5.433113,1.593007,-2.972923,-6.917020,-2.201625,7.790158,-2.383085,7.617098,5.034038,2.532065,-4.962046,6.124316,6.991395,-6.580204,0.002147,5.843990,9.725605,5.886925,-2.516355,-1.381229,-5.323482,-9.734076,-1.864951,4.237605,-3.261171,-0.467159,-1.849510,7.297668,7.426787,0.814215,3.289864,4.059003,6.327601,-5.642160,-2.535789,-5.969650,3.111918,-6.283248,-5.093149,3.076189,-9.853638,-3.025970,-9.346718,-4.126204,9.970978,-2.382612,-9.158819,0.407952,-8.597444,-5.104055,-0.990704,-6.701492,2.082616,-0.941064,-9.580972,-8.520472,1.222027,0.756330,7.527080,5.010742,2.254494,0.814169,5.568758,5.825433,-1.724742,1.505381,-7.774132,-5.658288,-9.405425,7.639227,7.464093,9.753954,-6.728026,-7.487813,2.568790,-3.988136,3.535761,-3.956117,5.531889,-9.496424,0.763912,-5.666553,6.590529,-3.350890,0.778321,-3.749302,9.423033,7.119854,-5.232692,4.157389,9.209730,-3.780469,1.242515,-3.905149,-8.903467,2.986610,-9.024743,0.221595,-6.352217,9.056348,-2.570584,-6.461222,3.178521,8.950906,1.514252,0.157455,0.575391,8.429153,8.678060,6.956938,9.014713,1.570951,-3.885575,8.105096,-0.734567,1.843533,3.412161,4.703128,0.072463,-1.838785,6.272643,-1.126777,-4.541064,-4.505365,0.909996,4.353350,-8.059102,-2.839673,-9.191651,3.655950,-1.188698,4.674343,5.827864,-8.638727,6.511320,8.551500,2.572332,5.829673,-4.601124,2.516328,5.503619,-9.599763,3.391995,5.615007,-5.968417,2.429104,9.184084,-1.637220,8.239426,4.112230,-0.573551,4.168460,-2.849938,9.624142,-1.023174,-9.175970,6.858768,4.836092,2.480573,-3.880098,-5.355067,-8.135679,-9.930175,-4.640729,-2.580685,5.441580,-2.045933,-8.589405,3.843996,3.394004,-9.406208,-6.459570,-7.287312,-7.466548,-3.985535,-5.575045,-5.580962,-0.168590,7.930966,-0.237709,-1.240976,-4.220694,5.003822,-5.878291,-0.884465,-2.765425,1.658363,0.242047,4.110168,-4.949994,-6.380430,-4.274297,7.241927,-1.936217,4.575652,-5.784398,-2.265510,-7.036741,8.321583,-0.359228,7.417655,-6.427227,9.023414,-2.778825,-0.224670,-7.840642,8.118873,8.878152,3.765211,-5.843088,0.704792,8.728972,2.908294,3.829730,-1.866756,9.142363,-8.046846,-9.296230,6.725716,-9.308671,2.305105,-9.041360,5.175600,-3.866974,3.559247,5.667067,1.640634,-4.841829,3.619303,-4.133522,-2.874819,7.184393,6.911497,-0.234425,-6.377866,-1.721873,-8.652599,2.148946,3.586237,-0.306799,-2.645251,7.993363,-8.855941,-4.160193,3.838135,8.072905,-1.199408,-2.598067,8.441585,-8.458291,-6.940828,4.472406,-7.007965,-6.852337,-6.856629,-9.342006,3.255448,0.477182,-7.514546,5.652705,-7.855354,8.763024,4.334278,-4.172796,-6.666290,-0.450962,-5.207355,8.174908,-6.878272,-0.897368,3.142078,9.559665,-2.341204,-1.643752,6.030522,-3.992436,6.019461,-1.733078,3.161307,4.719238,-9.710663,-6.583260,2.586601,9.804869,-5.153179,2.943844,-9.525147,-4.122790,9.344120,0.232096,-4.485393,-0.469563,9.068097,-4.408762,9.512439,6.341011,9.145592,-4.026010,8.730058,7.329759,6.426165,0.817536,4.708637,-2.987175,7.939421,5.395102,8.574828,8.497184,4.415006,-8.052137,6.148704,-4.727941,9.088430,7.523794,-3.385419,-0.443642,7.314185,7.274565,6.624482,0.005353,-7.442899,-3.742536,-3.333370,-8.303452,3.736516,1.424673,-3.930307,-5.696288,-6.418349,3.584857,-3.094676,1.168266,5.172210,-1.906571,-3.381478,4.164651,9.532714,7.372500,7.723517,8.567686,-7.043260,5.093537,-2.290064,-4.443583,-6.631813,2.380706,-2.748525,-9.925352,0.392161,-4.452269,2.118277,-2.454896,-3.285968,-2.771566,-8.597658,-7.631620,-3.578382,5.562062,0.927431,-9.489788,4.837599,-4.719018,-5.233392,-0.269955,-8.663149,8.492215,-0.346717,-8.897801,8.495690,5.694016,-0.453490,-6.925890,8.578535,4.108851,-6.441167,-5.793950,6.646150,6.203476,-8.559526,8.656253,-4.238120,-5.597107,8.623373,2.077564,5.704790,-6.008321,2.186368,4.261849,-4.908841,1.874174,-7.307325,7.045902,8.542664,1.222568,-9.039724,-8.663191,8.723191,9.877522,0.372876,-3.631095,0.409988,-4.407049,6.012041,-3.391357,-0.001699,-5.257387,3.844606,-6.501763,-8.032901,-6.878820,-6.337960,-8.631345,1.190189,-6.236526,-5.550039,-3.950741,8.654063,-7.566757,-7.086541,9.305190,7.129439,8.627709,9.589345,4.362742,4.414413,-6.785364,-0.003703,5.613534,-1.470744,-3.194219,-4.060980,5.265937,9.744770,1.593866,-7.420725,-4.909457,-2.783508,-1.651973,9.056703,-4.121878,-2.834475,-9.829693,4.388389,-7.150848,-1.409957,-6.364249,2.058815,-5.275768,-8.875334,-4.008423,-3.885252,-3.520729,-6.415094,-6.159849,-0.199722,-1.781361,6.237721,3.458699,7.447392,6.570658,-1.893762,-7.948104,5.743080,-4.746311,-3.162825,-6.586020,0.464406,-7.277548,4.296214,2.599249,5.934919,-5.901613], dtype = "float64")#candidate|4600|(1400,)|const|float64
call_4599 = relay.TupleGetItem(func_1828_call(relay.reshape(const_4600.astype('float64'), [10, 14, 10])), 2)
call_4601 = relay.TupleGetItem(func_1831_call(relay.reshape(const_4600.astype('float64'), [10, 14, 10])), 2)
func_2968_call = mod.get_global_var('func_2968')
func_2971_call = mutated_mod.get_global_var('func_2971')
var_4604 = relay.var("var_4604", dtype = "float32", shape = (180,))#candidate|4604|(180,)|var|float32
call_4603 = relay.TupleGetItem(func_2968_call(relay.reshape(var_4604.astype('float32'), [12, 5, 3])), 1)
call_4605 = relay.TupleGetItem(func_2971_call(relay.reshape(var_4604.astype('float32'), [12, 5, 3])), 1)
bop_4607 = relay.floor_mod(uop_4584.astype('float32'), relay.reshape(call_4582.astype('float32'), relay.shape_of(uop_4584))) # shape=(8, 12, 5)
bop_4610 = relay.floor_mod(uop_4586.astype('float32'), relay.reshape(call_4583.astype('float32'), relay.shape_of(uop_4586))) # shape=(8, 12, 5)
output = relay.Tuple([call_4592,call_4599,const_4600,call_4603,var_4604,bop_4607,])
output2 = relay.Tuple([call_4593,call_4601,const_4600,call_4605,var_4604,bop_4610,])
func_4626 = relay.Function([var_4604,], output)
mod['func_4626'] = func_4626
mod = relay.transform.InferType()(mod)
var_4627 = relay.var("var_4627", dtype = "float32", shape = (180,))#candidate|4627|(180,)|var|float32
output = func_4626(var_4627)
func_4628 = relay.Function([var_4627], output)
mutated_mod['func_4628'] = func_4628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3401_call = mod.get_global_var('func_3401')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_4633 = func_3401_call()
call_4634 = func_3401_call()
output = relay.Tuple([call_4633,])
output2 = relay.Tuple([call_4634,])
func_4644 = relay.Function([], output)
mod['func_4644'] = func_4644
mod = relay.transform.InferType()(mod)
output = func_4644()
func_4645 = relay.Function([], output)
mutated_mod['func_4645'] = func_4645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3218_call = mod.get_global_var('func_3218')
func_3220_call = mutated_mod.get_global_var('func_3220')
call_4697 = func_3218_call()
call_4698 = func_3218_call()
output = relay.Tuple([call_4697,])
output2 = relay.Tuple([call_4698,])
func_4706 = relay.Function([], output)
mod['func_4706'] = func_4706
mod = relay.transform.InferType()(mod)
mutated_mod['func_4706'] = func_4706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mutated_mod.get_global_var('func_4706')
call_4707 = func_4706_call()
output = call_4707
func_4708 = relay.Function([], output)
mutated_mod['func_4708'] = func_4708
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4777 = relay.const([[[-5,-1,-1,4,-1,-10,-3,-4,8,-10,-7,7,-9],[8,-3,3,4,-6,1,2,10,-4,2,7,9,-5],[2,4,2,-7,8,2,3,7,-9,-5,-3,-2,-7],[9,10,-2,5,2,-9,2,-8,-1,4,5,9,4],[1,8,-7,-3,10,7,-5,-5,-7,-4,-1,6,-5],[1,-4,-5,-1,2,10,2,5,7,10,6,7,4],[7,5,4,-5,1,3,2,7,-5,4,-2,-9,3],[4,7,1,-10,5,2,-2,7,4,-3,3,-4,7],[8,-10,3,-2,-2,4,9,5,7,-6,-3,4,-3],[-3,6,3,-7,-6,7,-1,-10,8,-2,3,-10,-6]],[[1,-6,-8,1,10,7,-9,8,-10,-2,3,2,-4],[-7,-5,-7,4,1,4,-6,-10,-10,6,4,6,-8],[9,-6,-4,9,-7,-6,-10,5,-10,8,5,-10,7],[-9,-1,4,7,-3,7,10,8,7,2,-2,4,-4],[-8,-2,-10,10,7,1,7,5,-8,8,-3,-4,6],[9,5,-8,10,10,10,1,-5,1,8,6,3,10],[10,10,9,7,-7,-9,-5,-8,10,-2,2,8,3],[4,7,-1,9,4,-5,1,6,-8,8,7,5,-2],[-5,7,-4,4,-6,-10,-10,-2,-5,-6,5,-1,-2],[-3,-8,-6,-5,10,5,-3,-3,-5,-7,-10,3,3]],[[-2,3,3,-4,2,5,-4,-9,3,7,6,8,10],[6,-4,1,3,1,-3,10,-5,-5,2,-8,-5,-10],[7,-4,6,10,9,5,9,-2,2,-8,-7,-8,8],[-3,-10,-5,8,6,9,3,9,-4,7,3,-7,8],[5,-2,-1,5,5,8,9,-9,-10,-8,4,9,7],[-1,-4,-6,-5,1,3,-5,8,-4,-5,-5,7,4],[-7,-1,5,-7,-10,-10,-3,-1,9,-7,-9,-3,-3],[-1,-4,-10,-8,-3,4,3,-5,9,4,-6,-7,-9],[3,-3,8,7,-9,-3,9,-3,8,-6,-9,-2,-6],[5,1,-10,-3,1,8,-5,4,-5,4,5,-4,-4]],[[8,5,4,9,-1,2,-5,7,-2,2,10,10,-5],[-7,-7,-3,9,-3,7,10,3,4,-8,1,5,5],[-1,3,-1,-9,1,5,10,-3,-2,-7,-9,-2,3],[-7,7,6,-9,5,9,-8,6,2,-3,-2,-10,-1],[9,-5,9,3,-4,-5,7,-2,-6,9,-6,-7,-6],[6,-10,-6,-10,-1,3,-6,-2,9,-5,-8,-1,-4],[-9,-10,1,-2,4,-10,-9,5,7,-10,-4,-10,9],[-9,-8,9,-3,-4,-6,-7,-6,-5,10,-8,1,5],[6,2,7,6,-4,3,-6,4,-5,10,-8,8,-7],[4,-4,-3,6,4,9,-1,6,4,2,2,9,-9]],[[-1,6,1,5,-10,-6,6,-10,-1,-1,4,7,-3],[3,4,-10,7,2,7,5,-8,4,2,-10,-6,8],[-6,7,-7,-1,2,-8,1,-1,7,-6,9,-8,5],[-4,1,-2,-10,-6,9,9,-3,2,-5,2,9,9],[-7,10,9,4,9,-6,-3,5,-2,-3,1,8,-8],[-10,-8,8,-7,9,4,3,9,2,4,6,-2,-2],[6,-9,-10,-5,9,6,-2,10,-10,9,4,3,-1],[-5,-10,7,7,-2,6,-5,-9,-9,-6,8,3,5],[-1,7,-7,-6,-9,5,-9,-3,2,-10,-9,-5,9],[2,3,9,-8,-7,-9,4,-5,6,-3,1,-8,-10]],[[1,3,9,9,-3,-7,5,5,-6,-3,-7,-7,9],[8,8,-4,3,8,-3,3,7,6,-5,-5,-10,-4],[-7,-7,-8,4,5,6,7,10,-2,5,-5,1,-2],[3,-7,10,7,-10,4,-2,6,-7,-3,-3,1,6],[9,-8,-8,-4,7,8,-1,8,6,4,-9,5,7],[-8,-5,4,6,6,2,-8,2,-2,6,-8,-7,2],[-3,-9,4,9,-4,5,7,-5,-9,-8,10,-6,10],[-7,-8,5,8,2,-1,-1,-3,6,-6,-9,-3,10],[8,10,-1,7,7,-1,-5,-5,3,3,2,6,-10],[7,-5,-9,-4,-3,5,6,-1,7,1,2,9,2]],[[5,-3,4,-10,-8,3,5,9,-5,4,-4,-2,4],[-1,-9,8,2,9,-3,6,-6,-5,5,3,-1,-6],[7,-3,9,-5,8,2,-5,7,-8,9,-4,-6,-10],[-6,5,7,-9,-6,4,-9,-5,4,2,7,-4,3],[-3,-6,-8,-8,-6,9,-5,4,-6,-6,3,-2,1],[4,-8,-3,8,5,-4,2,-8,-5,-6,6,3,-7],[-10,-1,8,8,4,6,3,-9,6,8,2,1,-4],[2,-9,-4,-5,1,2,-9,1,8,1,-10,9,-3],[1,9,-2,-3,-9,1,-3,9,-4,-2,8,-8,9],[7,7,-9,5,6,-10,-8,7,4,4,7,-4,2]],[[1,10,-9,2,-7,6,10,7,4,-6,7,-3,3],[-6,9,8,7,3,-5,3,5,-3,-3,2,8,-10],[-10,-5,-3,2,10,-5,10,-2,-3,6,-4,1,-1],[-7,-3,-5,10,-7,-2,8,-9,-8,10,-3,-5,-9],[9,-10,-4,-1,-4,1,-8,-8,7,4,-8,2,-2],[-1,3,-8,3,-3,5,-6,-4,-2,5,-5,-3,-8],[-9,8,-5,-10,2,-3,8,-10,1,9,-2,8,-10],[-10,1,-3,-8,4,4,6,-4,9,-4,-2,-6,10],[3,-7,-10,3,7,-4,10,2,3,-8,-4,6,5],[-3,-10,-10,1,-3,8,-2,3,2,5,-7,-10,3]],[[1,4,-9,8,-1,10,10,3,-1,-3,-5,10,-8],[6,2,-2,9,1,-2,-7,1,-5,3,9,4,-10],[8,9,-9,-2,4,-5,1,-3,9,5,9,1,7],[6,3,-2,-10,-6,6,1,3,5,4,-4,9,-2],[-9,-8,4,-2,4,7,7,-4,-1,-6,-2,8,-10],[8,-4,-6,5,3,-2,6,1,9,-7,4,9,-4],[-1,-7,-5,-8,9,-1,-10,4,9,7,3,9,-10],[-8,1,9,4,-2,-5,5,-6,6,1,7,10,-2],[-9,-3,-4,-9,-4,-8,6,-5,-10,-5,-7,2,1],[-9,-3,-3,4,3,-6,-4,3,-7,3,10,-2,-10]],[[5,10,3,-8,2,1,7,5,-6,-4,-2,8,4],[-1,-10,-9,4,3,-1,-4,-2,1,8,-3,-7,-5],[-9,-6,-10,1,-7,7,2,-9,-10,-7,9,-2,-4],[-3,-5,1,3,8,2,5,2,1,3,6,-6,-8],[1,-3,-8,-7,7,6,5,3,-5,-7,2,2,1],[-9,-3,3,8,10,-4,-8,4,1,7,-7,4,-1],[3,2,-3,10,-9,-9,-8,-2,7,3,3,3,2],[4,5,2,3,3,-4,-4,-5,-1,-4,-5,-2,-2],[-6,7,-6,-4,8,-10,-2,9,-3,1,5,-3,5],[-10,8,-4,-9,-10,1,6,4,2,-9,1,1,-2]],[[-4,-5,-2,-7,-7,3,-9,-2,1,-4,6,-10,-9],[8,5,-8,4,-9,8,-7,7,2,-6,-8,2,9],[-10,-4,-10,-10,-2,-5,2,5,1,5,-3,-4,3],[6,-6,5,6,6,2,2,-2,2,-10,-4,-10,-9],[-7,-4,4,6,-6,7,-10,7,-7,-4,5,-3,-5],[-8,-5,10,9,-2,5,-5,9,-1,7,1,-7,4],[-2,-9,-5,2,3,4,7,4,-4,-2,-3,3,3],[3,-10,-3,6,-9,-8,-3,-6,-10,-2,4,-5,2],[1,7,9,3,-9,-4,-8,-7,6,7,6,-5,-4],[-6,-7,-7,4,-2,4,-4,4,9,9,-10,8,6]],[[-9,-2,-2,-1,7,-9,2,3,1,-10,-3,6,-6],[10,-6,-10,9,-7,2,-4,-8,9,-8,-7,-2,-1],[7,-9,-8,9,-7,-8,-2,-9,-6,3,-6,5,7],[-3,10,-3,3,-2,-5,4,9,-8,8,-5,-8,8],[3,10,-5,10,-6,4,9,2,-6,-3,10,-6,-7],[-5,-1,3,-8,5,-5,-1,-10,-2,-1,-2,-3,-2],[6,-3,10,10,-3,-7,-5,6,-9,-10,-4,-9,-9],[1,-6,4,10,-7,-7,4,-1,3,-5,-7,-8,5],[-1,6,-5,-1,8,5,3,2,10,-10,-7,8,-1],[-6,3,-2,6,-4,5,-4,-1,2,-10,3,-10,-10]],[[5,-1,-2,-7,8,1,7,7,-3,6,-7,-9,5],[-6,5,2,-3,-8,9,3,-7,3,10,-8,10,-6],[-2,-5,-6,-2,6,-3,-8,-5,-10,-6,3,-3,-1],[5,-4,-10,7,-3,-6,-4,-10,3,-9,5,-7,6],[-10,2,-9,7,-9,2,-2,-8,10,3,8,6,-4],[-7,-1,2,4,-7,2,-8,10,-8,-5,-3,6,-4],[1,4,-2,8,-5,-9,6,-4,7,-1,4,-1,4],[3,-1,-6,9,-10,2,6,-8,-8,8,-3,6,4],[-3,-6,-1,9,-5,6,7,-5,-2,8,-4,4,-10],[9,-3,5,-9,3,9,-2,8,-10,-4,6,6,7]],[[10,-3,10,-6,6,1,2,7,-7,-10,7,-2,5],[-8,-1,10,-8,-4,7,-3,1,10,9,7,-6,-3],[-4,-5,-2,-9,-8,6,2,-4,10,-1,3,-4,-9],[-8,-5,8,-3,-10,6,10,6,9,6,6,3,4],[-1,8,-9,-4,5,-6,5,-5,-5,2,-1,-1,4],[-2,7,3,-4,9,-7,-8,5,3,1,-10,5,8],[-4,-4,8,-7,9,4,-1,9,-6,-10,-2,-10,3],[1,-1,-5,-8,3,-2,-1,-8,-8,-8,7,-3,-4],[10,-10,-1,2,-10,4,5,-5,8,1,3,-5,6],[6,8,4,3,10,5,-7,-8,-4,-10,3,-5,4]]], dtype = "int64")#candidate|4777|(14, 10, 13)|const|int64
var_4778 = relay.var("var_4778", dtype = "int64", shape = (14, 10, 13))#candidate|4778|(14, 10, 13)|var|int64
bop_4779 = relay.maximum(const_4777.astype('int64'), relay.reshape(var_4778.astype('int64'), relay.shape_of(const_4777))) # shape=(14, 10, 13)
output = bop_4779
output2 = bop_4779
func_4783 = relay.Function([var_4778,], output)
mod['func_4783'] = func_4783
mod = relay.transform.InferType()(mod)
mutated_mod['func_4783'] = func_4783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4784 = relay.var("var_4784", dtype = "int64", shape = (14, 10, 13))#candidate|4784|(14, 10, 13)|var|int64
func_4783_call = mutated_mod.get_global_var('func_4783')
call_4785 = func_4783_call(var_4784)
output = call_4785
func_4786 = relay.Function([var_4784], output)
mutated_mod['func_4786'] = func_4786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_4800 = relay.TupleGetItem(func_3560_call(), 0)
call_4801 = relay.TupleGetItem(func_3562_call(), 0)
func_3679_call = mod.get_global_var('func_3679')
func_3682_call = mutated_mod.get_global_var('func_3682')
const_4807 = relay.const([8,-3,-8,8,2,2,5,-5,-6,7,4,-4,5,-7,8,-6,-6,1,-4,2,9,1,-2,2,7,-6,1,-9,7,9,-6,4,-5,-5,-3,6,5,-8,6,-4,9,-3,3,-9,10,6,4,-7,4,-2,3,1,-7,-4,8,5,2,-10,-10,5,-8,5,10,4,5,5,4,-3,-4,4,-7,-3,-5,-3,-3,-4,-9,4,-2,-5,4,5,5,-9,-7,3,1,2,-9,2,1,-3,-6,10,-5,5,5,7,7,9,8,7,-7,7,2,-10,-7,5,-9,-5,2,-4,-1,-4,-5,-2,4,4,10,1,-3,7,1,-7,-9,-7,-2,7,-9,2,4,1,-5,1,-6,-9,3,-1,2,-7,8,-1,2,-4,8,7,1,-10,-2,-4,-5,-9,1,-3,8,3,3,-8,3,-5,9,-3,-1,9,-7,-2,-5,3,1,-8,-7,6,-6,-4,-8,10,-3,10,-7,7,-1,6,-2,-4,6,-3,-5,-10,3,8,3,9,-10,-1,-7,10,-7,-5,-7,3,3,4,-5,8,10,-9,5,-2,8,-3,10,-2,10,-10,-8,-10,-9,10,-3,-1,-4,8,10,-6,3,-3,1,-2,3,-9,6,-2,4,-10,10,-9,-4,6,9,4,9,5,-3,2,10,8,1,-3,-4,3,4,10,1,4,8,-1,7,7,-6,7,2,-4,-5,-9,7,5,-6,-9,-9,-8,-3,3,7,-2,-1,-9,-4,8,-7,10,-1,-7,-8,-5,-1,5,3,6,10,-3,6,-5,-6,-10,10,-8,3,-7,2,-9,4,-1,-1,-7,4,1,-3,-10,7,-3,-10,-9,8,5,9,-5,7,10,-2,1,8,-7,8,1,9,-4,6,-3,1,-4,-1,3,-4,6,-1,-5,-8,-9,2,-2,5,2,-1,-6,1,1,9,-10,7,3,2,7,10,8,10,-5,-6,-6,1,9,4,-4,6,-9,9,-2,-8,4,-7,-2,-10,1,3,5,1,-6,8,9,-1,8,10,4,1,6,8,-4,-4,-6,-4,8,9,-2,3,8,2,5,-7,8,5,-5,-3,-1,4,1,-2,-5,3,5,-1,-10,-10,2,6,-3,-7,3,-7,-4,-6,1,6,-7,5,6,7,-8,-3,-4,4,9,8,-1,8,10,-10,2,-8,4,-2,-9,8,-6,10,9,1,-5,-10,8,2,4,8,8,6,9,-4,-5,-8,3,-4,3,-10,6,7,-10,9,-10,3,-3,2,4,-2,8,3,1,-6,3,-7,6,3,10,3,9,10,4,5,9,9,1,-1,-9,9,2,3,7,-7,5,8,5,-7,-9,-9,2,-8,-1,-5,5,-4,-7,5,10,4,-2,-3,-10,8,-3,-10,6,-7,-6,-9,6,7,2,-1,6,10,-8,8,3,9,-4,2,8,9,4,6,3,7,-7,-8,2,2,-2,7,-8,-3,9,4,-9,-5,1,4,5,7,-10,7,-4,-3,1,2,-10,4,2,-9,9,3,5,1,-1,-4,-5,6,-1,-6,10,-6,4,-10,-5,7,-4,5,-2,-9,-7,5,-3,-3,-1,-1,-8,-1,-6,-9,3,7,10,5,10,-4,-9,1,1,8,-3,-3,5,-1,9,2,-10,7,2,-2,10,-9,5,10,-4,-8,-9,-7,-6,-7,-10,5,1,10,8,4,-7,6,3,-10,6,3,10,4,-10,-9,2,-2,7,-6,5,-2,3,6,4,4,-5,-5,-8,-9,2,1,-3,8,-7,5,-4,-4,-5,-6,6,8,8,-6,-6,7,4], dtype = "uint32")#candidate|4807|(672,)|const|uint32
const_4808 = relay.const([-0.813667,6.510684,7.121439,-5.618112,-5.151824,3.565450,0.132727,4.195514,-8.554585,-8.416730,9.400039,-4.721381,1.693797,-3.173387,3.494264,7.102869,9.583432,0.772023,1.771854,-8.342481,6.344270,-1.586135,0.463917,-9.327818,-0.950954,7.010155,6.630175,5.666603,2.954321,0.791897,4.272102,4.390770,4.752597,2.687181,-4.814629,-4.361423,3.847364,-1.502334,3.851128,-8.093410,-0.033510,8.666438,-2.087206,-8.360757,-1.222561,-6.391003,-2.155768,-5.897279,-5.411636,-3.768902,-5.440194,-3.016889,-2.940415,-8.028674,-7.716375,9.427044,8.092111,-5.762697,0.852048,7.137160,-5.965152,6.574590,1.635180,2.383846], dtype = "float64")#candidate|4808|(64,)|const|float64
call_4806 = relay.TupleGetItem(func_3679_call(relay.reshape(const_4807.astype('uint32'), [672,]), relay.reshape(const_4808.astype('float64'), [64,]), ), 1)
call_4809 = relay.TupleGetItem(func_3682_call(relay.reshape(const_4807.astype('uint32'), [672,]), relay.reshape(const_4808.astype('float64'), [64,]), ), 1)
func_3302_call = mod.get_global_var('func_3302')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_4810 = func_3302_call(relay.reshape(call_4800.astype('float32'), [12, 5, 3]))
call_4811 = func_3302_call(relay.reshape(call_4800.astype('float32'), [12, 5, 3]))
func_222_call = mod.get_global_var('func_222')
func_226_call = mutated_mod.get_global_var('func_226')
call_4825 = relay.TupleGetItem(func_222_call(relay.reshape(const_4808.astype('float64'), [8, 4, 2]), relay.reshape(const_4808.astype('float64'), [8, 4, 2]), ), 2)
call_4826 = relay.TupleGetItem(func_226_call(relay.reshape(const_4808.astype('float64'), [8, 4, 2]), relay.reshape(const_4808.astype('float64'), [8, 4, 2]), ), 2)
func_4448_call = mod.get_global_var('func_4448')
func_4450_call = mutated_mod.get_global_var('func_4450')
call_4847 = relay.TupleGetItem(func_4448_call(relay.reshape(call_4810.astype('float64'), [12, 5, 3])), 0)
call_4848 = relay.TupleGetItem(func_4450_call(relay.reshape(call_4810.astype('float64'), [12, 5, 3])), 0)
output = relay.Tuple([call_4800,call_4806,const_4807,const_4808,call_4810,call_4825,call_4847,])
output2 = relay.Tuple([call_4801,call_4809,const_4807,const_4808,call_4811,call_4826,call_4848,])
func_4856 = relay.Function([], output)
mod['func_4856'] = func_4856
mod = relay.transform.InferType()(mod)
output = func_4856()
func_4857 = relay.Function([], output)
mutated_mod['func_4857'] = func_4857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4897 = relay.TupleGetItem(func_4112_call(), 0)
call_4898 = relay.TupleGetItem(func_4113_call(), 0)
func_3150_call = mod.get_global_var('func_3150')
func_3152_call = mutated_mod.get_global_var('func_3152')
var_4900 = relay.var("var_4900", dtype = "float64", shape = (640,))#candidate|4900|(640,)|var|float64
call_4899 = relay.TupleGetItem(func_3150_call(relay.reshape(var_4900.astype('float64'), [640,])), 4)
call_4901 = relay.TupleGetItem(func_3152_call(relay.reshape(var_4900.astype('float64'), [640,])), 4)
output = relay.Tuple([call_4897,call_4899,var_4900,])
output2 = relay.Tuple([call_4898,call_4901,var_4900,])
func_4913 = relay.Function([var_4900,], output)
mod['func_4913'] = func_4913
mod = relay.transform.InferType()(mod)
var_4914 = relay.var("var_4914", dtype = "float64", shape = (640,))#candidate|4914|(640,)|var|float64
output = func_4913(var_4914)
func_4915 = relay.Function([var_4914], output)
mutated_mod['func_4915'] = func_4915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_4929 = relay.TupleGetItem(func_3124_call(), 0)
call_4930 = relay.TupleGetItem(func_3125_call(), 0)
func_3150_call = mod.get_global_var('func_3150')
func_3152_call = mutated_mod.get_global_var('func_3152')
var_4938 = relay.var("var_4938", dtype = "float64", shape = (640,))#candidate|4938|(640,)|var|float64
call_4937 = relay.TupleGetItem(func_3150_call(relay.reshape(var_4938.astype('float64'), [640,])), 6)
call_4939 = relay.TupleGetItem(func_3152_call(relay.reshape(var_4938.astype('float64'), [640,])), 6)
var_4940 = relay.var("var_4940", dtype = "float64", shape = (8, 16, 5))#candidate|4940|(8, 16, 5)|var|float64
bop_4941 = relay.divide(call_4937.astype('float64'), relay.reshape(var_4940.astype('float64'), relay.shape_of(call_4937))) # shape=(8, 16, 5)
bop_4944 = relay.divide(call_4939.astype('float64'), relay.reshape(var_4940.astype('float64'), relay.shape_of(call_4939))) # shape=(8, 16, 5)
output = relay.Tuple([call_4929,var_4938,bop_4941,])
output2 = relay.Tuple([call_4930,var_4938,bop_4944,])
func_4960 = relay.Function([var_4938,var_4940,], output)
mod['func_4960'] = func_4960
mod = relay.transform.InferType()(mod)
var_4961 = relay.var("var_4961", dtype = "float64", shape = (640,))#candidate|4961|(640,)|var|float64
var_4962 = relay.var("var_4962", dtype = "float64", shape = (8, 16, 5))#candidate|4962|(8, 16, 5)|var|float64
output = func_4960(var_4961,var_4962,)
func_4963 = relay.Function([var_4961,var_4962,], output)
mutated_mod['func_4963'] = func_4963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4213_call = mod.get_global_var('func_4213')
func_4215_call = mutated_mod.get_global_var('func_4215')
call_4965 = relay.TupleGetItem(func_4213_call(), 0)
call_4966 = relay.TupleGetItem(func_4215_call(), 0)
var_4972 = relay.var("var_4972", dtype = "float32", shape = (12, 5, 3))#candidate|4972|(12, 5, 3)|var|float32
bop_4973 = relay.logical_and(call_4965.astype('bool'), relay.reshape(var_4972.astype('bool'), relay.shape_of(call_4965))) # shape=(12, 5, 3)
bop_4976 = relay.logical_and(call_4966.astype('bool'), relay.reshape(var_4972.astype('bool'), relay.shape_of(call_4966))) # shape=(12, 5, 3)
func_1804_call = mod.get_global_var('func_1804')
func_1806_call = mutated_mod.get_global_var('func_1806')
const_4981 = relay.const([8.376940,3.997304,2.658779,-0.588373,-7.938650,-2.502515,-1.234081,2.862644,-6.145699,3.035686,-4.322509,9.336873,-5.322398,-9.776599,-3.254629,0.278827,-3.757318,-9.577610,9.289448,2.236422,8.446917,-6.045819,7.488905,-0.784987,-2.893305,7.852826,0.435041,9.794376,8.658659,-0.994220,-1.955160,8.665408,-1.319134,-8.392412,1.924991,1.843886,1.590906,-5.220177,8.280694,-9.646842,9.598743,6.261219,-1.437352,-7.542850,-8.171297,2.657875,-4.500234,-9.501596,-1.919393,-6.315389,-0.353488,9.965232,2.823061,0.985375,-4.453868,-2.379241,7.657620,2.104007,-6.415159,1.874481,-4.596836,9.836875,-3.734826,8.095518,-9.186066,-9.075546,3.407145,-9.231952,0.394309,9.650514,0.795197,6.989041,8.298208,-4.499300,-2.555711,8.742676,-8.323056,8.251797,-6.002362,-4.809247,3.795223,6.246755,-3.909834,8.451236,1.852785,6.370309,3.682404,-9.028568,7.455019,-7.025130,-2.083627,-2.979640,9.717612,4.378895,-5.218092,-2.033000,-6.011130,-8.632066,-4.351142,5.275809,9.290817,-4.608017,9.360541,0.733713,-0.053431,0.755606,5.814241,7.410651,3.616643,-3.407742,-4.708558,2.775587,6.733504,8.947807,-0.130533,9.902679,-7.563257,-3.471793,-9.763427,-9.580041,0.357895,-6.982643,-1.391102,9.691006,-0.482230,4.974633,6.850237,-2.855426,6.179297,-5.061542,-5.109116,9.883557,6.440645,-8.327698,3.766302,-9.763849,-1.264607,-3.974216,9.933028,1.118234,3.662524,-1.103939,1.334562,7.617127,8.391220,-7.130342,-9.083095,-7.724286,8.684966,4.009955,6.111525,-9.083642,-0.164593,-5.263484,-8.794815,-4.246614,0.308590,-8.576759,8.376237,6.840247,5.483768,-2.369883,7.950199,-5.492856,2.539324,6.445822,0.606413,0.569084,-5.029374,3.210618,8.827755,2.874153,3.002254,7.298382,1.341156,9.749799,0.054132,-4.455607,-0.414272,9.367516,9.739069,-6.672573,-0.297396,-6.181891,-4.521016,-0.844848,5.156847,-5.980100,8.187913,7.329518,-8.147055,-4.640794,-1.532892,-8.161029,5.236771,5.267251,-3.708773,3.661119,5.590142,-8.046135,-5.820421,3.892593,-4.329740,-2.299665,9.383674,-1.613767,-2.294764,7.913677,-2.124045,5.821170,-2.810280,-6.383014,-7.560513,0.750380,0.142748,0.101900,-2.388539,-8.594349,-0.997083,6.371111,-2.966082,2.578962,-2.094744,-2.299947,-8.190522,-5.606936,-5.399676,-3.339246,-6.740251,-7.244523,3.957793,8.527691,-5.720534,-3.486614,-2.270627,-2.489080,1.314958,4.960014,2.791051,-2.339229,5.540910,-5.730908,7.049623,9.378132,-7.030091,-4.421148,8.360065,-0.621733,9.785189,8.055265,-2.046643,-8.397170,4.824877,5.644569,2.064350,3.685792,-6.037197,-6.347078,-5.701250,8.955773,9.721170,-8.475315,-1.725911,-1.526205,7.779743,1.064152,-0.532536,0.359487,-7.002206,-2.138065,2.704613,-9.779737,0.329787,6.802267,-8.173046,-3.466810,-6.578209,1.324138,7.939247,-9.904727,6.569754,-4.502730,-4.475760,9.863974,-6.651131,-8.849533,9.763288,4.214220,-2.076645,-9.093534,-9.244091,-4.718220,6.931115,4.517379,-3.071816,2.773213,7.267373,7.278246,-4.632089,-6.880762,-3.492116,-6.181830,-6.637936,-8.323272,-2.920604,1.286746,9.613659,-9.667996,5.893370,-3.064421,2.261473,9.865964,3.922007,-3.637671,-8.238284,4.037112,-2.153896,-6.965965,6.287605,9.274464,-3.762309,-2.917982,-8.491374,-2.806286,-2.889181,2.951519,7.033517,0.085470,1.833930,-0.343115,-4.378062,-1.005611,3.325557,2.832372,0.808842,-7.033733,-3.386280,-8.839892,7.428901,-8.253876,4.214349,-6.886869,5.632069,0.449397,8.343785,-2.379929,7.765823,-8.684303,4.855621,-2.851318,-8.517593,-0.813618,0.349423,-4.833594,-1.880023,8.645752,-5.911686,-1.788823,0.862133,3.174083,3.431873,-1.097130,-7.052642,5.992710,4.656982,9.774749,-6.943254,-8.007962,-2.234551,0.891855,2.593736,-0.941719,-6.835994,1.662412,-5.625895,-8.266672,-6.404104,7.943282,-7.014092,6.688202,-7.035889,9.076417,-5.410927,-9.152618,-2.776387,8.563658,-5.171670,-4.737127,-7.870021,-2.621077,-7.543213,-9.596257,-5.845239,3.289723,-3.472544,-0.470673,0.789182,-0.389555,3.861164,-9.069208], dtype = "float32")#candidate|4981|(400,)|const|float32
call_4980 = func_1804_call(relay.reshape(const_4981.astype('float32'), [5, 10, 8]))
call_4982 = func_1804_call(relay.reshape(const_4981.astype('float32'), [5, 10, 8]))
uop_4989 = relay.log2(call_4980.astype('float64')) # shape=(5, 10, 8)
uop_4991 = relay.log2(call_4982.astype('float64')) # shape=(5, 10, 8)
var_5010 = relay.var("var_5010", dtype = "float64", shape = (5, 10, 8))#candidate|5010|(5, 10, 8)|var|float64
bop_5011 = relay.mod(uop_4989.astype('float32'), relay.reshape(var_5010.astype('float32'), relay.shape_of(uop_4989))) # shape=(5, 10, 8)
bop_5014 = relay.mod(uop_4991.astype('float32'), relay.reshape(var_5010.astype('float32'), relay.shape_of(uop_4991))) # shape=(5, 10, 8)
output = relay.Tuple([bop_4973,const_4981,bop_5011,])
output2 = relay.Tuple([bop_4976,const_4981,bop_5014,])
func_5017 = relay.Function([var_4972,var_5010,], output)
mod['func_5017'] = func_5017
mod = relay.transform.InferType()(mod)
var_5018 = relay.var("var_5018", dtype = "float32", shape = (12, 5, 3))#candidate|5018|(12, 5, 3)|var|float32
var_5019 = relay.var("var_5019", dtype = "float64", shape = (5, 10, 8))#candidate|5019|(5, 10, 8)|var|float64
output = func_5017(var_5018,var_5019,)
func_5020 = relay.Function([var_5018,var_5019,], output)
mutated_mod['func_5020'] = func_5020
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5040 = relay.var("var_5040", dtype = "float64", shape = (4, 6, 4))#candidate|5040|(4, 6, 4)|var|float64
uop_5041 = relay.cos(var_5040.astype('float64')) # shape=(4, 6, 4)
bop_5052 = relay.bitwise_and(uop_5041.astype('uint16'), relay.reshape(var_5040.astype('uint16'), relay.shape_of(uop_5041))) # shape=(4, 6, 4)
output = bop_5052
output2 = bop_5052
func_5057 = relay.Function([var_5040,], output)
mod['func_5057'] = func_5057
mod = relay.transform.InferType()(mod)
mutated_mod['func_5057'] = func_5057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5058 = relay.var("var_5058", dtype = "float64", shape = (4, 6, 4))#candidate|5058|(4, 6, 4)|var|float64
func_5057_call = mutated_mod.get_global_var('func_5057')
call_5059 = func_5057_call(var_5058)
output = call_5059
func_5060 = relay.Function([var_5058], output)
mutated_mod['func_5060'] = func_5060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_5073 = relay.TupleGetItem(func_3022_call(), 0)
call_5074 = relay.TupleGetItem(func_3023_call(), 0)
output = call_5073
output2 = call_5074
func_5092 = relay.Function([], output)
mod['func_5092'] = func_5092
mod = relay.transform.InferType()(mod)
output = func_5092()
func_5093 = relay.Function([], output)
mutated_mod['func_5093'] = func_5093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mod.get_global_var('func_3022')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_5139 = relay.TupleGetItem(func_3022_call(), 0)
call_5140 = relay.TupleGetItem(func_3023_call(), 0)
func_979_call = mod.get_global_var('func_979')
func_983_call = mutated_mod.get_global_var('func_983')
var_5158 = relay.var("var_5158", dtype = "float32", shape = (616,))#candidate|5158|(616,)|var|float32
call_5157 = relay.TupleGetItem(func_979_call(relay.reshape(var_5158.astype('float32'), [7, 11, 8]), relay.reshape(var_5158.astype('float32'), [7, 11, 8]), ), 0)
call_5159 = relay.TupleGetItem(func_983_call(relay.reshape(var_5158.astype('float32'), [7, 11, 8]), relay.reshape(var_5158.astype('float32'), [7, 11, 8]), ), 0)
uop_5163 = relay.log2(call_5157.astype('float64')) # shape=(7, 11, 8)
uop_5165 = relay.log2(call_5159.astype('float64')) # shape=(7, 11, 8)
output = relay.Tuple([call_5139,var_5158,uop_5163,])
output2 = relay.Tuple([call_5140,var_5158,uop_5165,])
func_5173 = relay.Function([var_5158,], output)
mod['func_5173'] = func_5173
mod = relay.transform.InferType()(mod)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5174 = relay.var("var_5174", dtype = "float32", shape = (616,))#candidate|5174|(616,)|var|float32
func_5173_call = mutated_mod.get_global_var('func_5173')
call_5175 = func_5173_call(var_5174)
output = call_5175
func_5176 = relay.Function([var_5174], output)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_5192 = relay.TupleGetItem(func_3124_call(), 0)
call_5193 = relay.TupleGetItem(func_3125_call(), 0)
func_1804_call = mod.get_global_var('func_1804')
func_1806_call = mutated_mod.get_global_var('func_1806')
const_5208 = relay.const([4.254575,0.118297,2.337382,9.651967,-4.719175,9.769082,-6.200618,7.158824,-7.203504,7.474223,-6.538732,-7.554474,7.799502,7.118468,3.443711,0.377161,7.270783,-9.669016,9.908341,-3.146322,-0.205856,3.808491,1.516010,7.928632,-5.320226,1.322387,-9.215208,2.949397,-8.908418,-0.246311,-7.565763,-2.226758,-3.308721,-3.793340,-9.074791,-8.102201,7.938309,-4.225724,-1.374083,-9.414323,-6.529527,0.864359,9.821132,-0.014317,1.338553,1.185443,5.355479,1.554264,-2.982560,4.891097,1.255623,4.730858,2.106488,1.717565,2.105422,-6.635993,6.907568,-4.176427,7.163909,-2.867628,3.030172,-1.903165,4.095880,1.601344,8.560379,8.723358,-6.108726,3.664927,-9.252132,0.169666,-9.060651,9.270557,5.509509,-0.805073,-1.043139,-4.147435,-0.505882,-7.941870,-7.008629,6.921922,-0.545945,-5.989400,5.344458,0.412273,0.059377,3.902768,-2.308574,0.763630,-8.183407,-2.501618,3.580495,4.365351,7.082267,6.550051,1.667195,-6.272677,2.662564,-3.821464,-2.541771,-3.710544,-7.661902,-1.684555,-5.390299,-9.461264,1.211938,-7.836988,2.243129,3.633448,4.617838,9.986965,8.223218,2.116800,-2.672516,-2.450360,5.616009,-5.533891,-8.932302,-1.164270,1.539043,-4.404237,-1.411475,2.571584,-6.734250,-9.929950,0.616971,-1.456200,7.204604,-3.690078,6.840510,6.398143,4.090644,-7.243022,-7.569433,0.369087,8.829692,-0.507959,-2.746220,-1.557312,-8.029494,-4.495119,-0.776654,1.718418,-2.567996,8.933891,-6.990640,-5.290840,1.780805,0.108913,-0.976071,2.737011,-4.898260,1.476297,7.580276,1.719772,-0.815753,3.945934,-9.888856,4.953479,-1.124143,-1.513317,5.848637,3.850571,7.743481,-2.998520,0.808540,-6.030696,4.912050,-3.613477,5.115202,5.322611,2.265120,-9.793854,0.111303,2.383498,-5.586681,-4.219237,-1.702644,-6.062975,-0.646258,5.182994,-7.431790,-1.329551,8.547067,-5.873370,-0.567558,3.328684,3.980204,-9.934753,7.509113,-8.067848,5.206597,3.974600,-1.029728,-0.070970,-2.416044,-2.076309,0.459007,-3.376057,2.305772,1.196340,-9.508447,-9.467457,-1.148824,-9.275053,-5.324513,2.530454,0.095141,6.482003,9.660287,2.027912,-1.605603,-8.054026,-3.323247,-0.498238,-1.832570,6.411307,-2.137709,-6.800818,-3.426614,-5.914949,3.996910,8.352223,-2.721456,3.016320,-3.303685,4.480431,-3.882757,-4.484449,1.084247,5.423015,-4.735677,-4.008207,-7.222785,2.657083,-1.210971,4.539439,2.424087,-4.442997,2.733777,0.316097,-1.106105,-5.679716,7.161116,6.838822,-0.921986,-2.712199,-8.770223,0.380088,4.988340,6.735286,8.591707,3.567264,0.634211,-3.030953,6.840954,-5.792278,5.587809,5.923977,3.096216,5.526055,0.666319,-4.121100,-9.741786,-3.224842,-4.676169,4.465060,-9.163180,4.169751,4.789968,-2.931434,6.330684,-4.201094,-3.532647,5.130424,5.546000,5.214202,-6.783216,-9.562899,3.262080,-5.340730,-7.880926,7.773754,5.952231,3.449247,4.222151,9.015713,-9.866347,7.571118,9.524216,6.394694,9.630271,2.796200,-1.388509,-4.337161,-0.242385,-4.138347,4.348888,2.963582,-0.106683,8.184699,7.953366,-1.249910,-2.099219,-8.402165,6.471801,-6.595006,-8.911401,-9.394664,0.103544,-6.192942,-9.648731,9.788919,6.736900,-2.406367,2.518054,8.963369,-7.419581,-4.651665,5.100072,6.687374,-7.189957,3.443387,5.195303,-2.331858,-3.711702,3.426553,2.030699,-5.477748,4.252395,-8.181731,-5.783747,6.339070,7.636167,-1.723368,-7.366931,9.039302,7.995759,0.767730,0.957599,-0.015234,4.314956,-4.258291,-8.997098,1.967679,9.047236,-1.143741,4.201414,-6.822017,0.589095,5.827642,-6.726025,9.157031,6.561130,2.164972,-4.334500,-9.210981,5.827668,-9.812085,-8.870127,4.789339,6.237354,7.173871,-7.539600,3.139354,-8.456378,1.011746,-9.863678,9.473602,-3.706621,-6.324183,-2.937315,-5.072370,3.527046,9.688462,-3.988088,4.255094,-1.369441,-4.524814,-6.420099,-9.722423,-4.494738,-9.272424,-5.811748,-6.475527,-9.338443,8.086531,7.452227,-7.980660,-6.869011,-1.969699,-9.000399,-0.770876,6.555606,1.159922,2.172888,-2.090665,-7.227011,-6.688621,-7.172071,5.098162], dtype = "float32")#candidate|5208|(400,)|const|float32
call_5207 = func_1804_call(relay.reshape(const_5208.astype('float32'), [5, 10, 8]))
call_5209 = func_1804_call(relay.reshape(const_5208.astype('float32'), [5, 10, 8]))
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
const_5211 = relay.const([6.215258,4.761277,-5.405659,-5.428377,-4.407211,-3.035852,3.295621,7.558851,5.531001,-0.908071,-3.827742,-4.504681,-3.857515,8.375837,5.374645,-9.136231,9.236430,1.807278,-5.254887,8.903577,5.553824,4.361642,-8.153790,-4.613184,7.237724,-3.917460,-5.646037,5.876047,3.735215,-3.860210,-8.298050,5.994965,-4.979977,6.555682,-8.988573,0.901795,-3.649878,-2.606265,-9.200781,8.916678,9.311935,2.923425,-4.424880,6.231995,-6.911863,-5.764607,-6.648516,-9.669850,-6.184701,1.935709,-7.547511,-7.730255,4.967277,-9.963557,4.520601,2.385515,9.551472,-0.919067,-6.474517,-3.817674,8.095352,6.538069,-4.881909,-9.322541,7.257480,-5.296705,0.529443,7.125879,1.072175,-6.743350,2.673691,-3.315261,-2.266248,-2.037932,-2.941365,8.370548,2.658667,2.569026,-9.649695,6.195045,8.953646,-5.252521,-7.908553,2.855810,0.440491,1.276158,-8.168353,0.259969,-7.083471,0.095030,-0.558852,2.182816,6.875456,-8.028600,-6.854559,8.550253,3.160954,-3.347968,7.279236,2.553205,9.475625,9.206836,-4.324915,5.392736,-4.521811,9.274784,5.755091,7.101661,4.237507,8.056801,1.460338,3.175198,-7.620679,-1.076798,-2.473098,-1.391720,-9.922596,2.220653,-4.373105,-0.341852,0.600830,-8.624281,-2.409982,0.912882,1.720407,6.572067,0.366009,3.045298,5.687689,-0.836402,9.235473,9.330758,-8.249684,5.304439,4.110577,-6.893329,3.988557,-7.425275,-5.986817,-5.335546,-4.518474,-2.506697,-1.877456,9.184425,9.484155,3.739868,-6.676809,1.206837,0.219086,2.360417,-3.400797,4.251515,-3.912304,7.315134,4.401575,-0.688137,4.501512,-9.684208,-7.849436,0.608410,9.475290,0.121798,-7.869897,-8.363892,1.153868,-2.203145,6.653707,3.409113,2.436616,-9.188276,-8.133546,-0.895067,1.334453,-2.662009,-9.396369,-0.676321,-1.944706,2.055659,-5.560165,7.288535,-1.436955,2.217495,5.176217,2.743643,3.788943,-9.520038,0.596701,8.916667,4.862664,-8.313182,-2.487561,2.348208,-0.220248,4.209469,-9.379828,-0.857574,-4.651227,3.653623,5.151034,7.721892,-0.466118,-9.318406,-9.500891,4.929751,8.648910,-9.003179,-7.236695,7.216374,-2.102167,7.297099,6.671232,9.723555,8.564565,3.064011,-6.226089,1.058377,-9.161535,-5.672857,6.558837,-1.628989,2.978809,-7.604388,-9.642298,3.417215,-3.659806,-8.978360,-6.627651,-0.194778,-7.477777,-4.762539,-2.696001,2.054921,-5.871512,5.121845,3.739676,-3.397782,-1.712087,-1.100154,-6.391536,-6.428071,-8.116612,-9.912744,-3.850280,-2.467809,7.970362,0.675190,-6.024251,-6.861921,-5.825334,0.825880,-4.032742,4.625908,-1.804304,0.767502,0.517643,-2.804621,-2.210227,-4.574306,7.964774,3.934509,-1.075724,-6.413925,-6.438990,5.859447,-9.183394,-2.741232,-6.741401,-0.178853,-6.102846,-5.879221,5.265438,3.789754,5.409257,-9.196255,1.010213,7.713850,5.723736,-8.464499,0.805294,-5.300034,-2.922578,-8.912491,-3.592563,-1.049719,-0.562470,-9.311454,5.276844,-4.987497,-9.152048,9.491244,-4.760172,7.464009,-0.862983,2.485597,2.428580,8.217186,8.384673,-8.607811,-1.121829,-6.680053,9.708979,-6.219585,-9.839956,-0.629951,-4.882823,-2.786193,-8.911456,-0.543315,-7.019417,-4.993117,7.027942,6.418005,8.853070,1.826181,-9.624772,5.059352,-0.713912,-0.163466,-5.460716,4.523738,-8.396997,4.024741,5.745267,2.639814,-2.313030,0.621187,-4.478652,-9.540430,8.078934,7.156607,2.436667,8.409878,3.418269,-4.631877,-6.104868,-7.484813,-1.028134,-7.350425,2.033827,3.352720,3.228783,5.285828,6.367177,-3.724065,7.821444,1.177847,-6.795587,7.862431,-8.246449,3.289838,0.389141,-2.435732,6.522163,-3.798241,-7.094368,-6.669862,-3.268243,7.563082,8.279096,-0.313110,-6.673304,3.542141,4.510485,-2.795589,2.698310,-1.166335,7.236114,-4.815810,8.310429,0.873960,-3.180521,-0.563451,4.591288,-4.145223,6.900574,-0.658685,-9.502353,-9.235197,-9.741967,-0.653748,-0.916247,-5.743318,9.754989,-7.467912,5.546472,-4.537779,-4.672473,4.782922,0.542523,-8.360137,-7.525447,-4.816423,1.323636,-1.412754,4.935397,7.163458,-4.902706,2.815725,-0.199721,-9.374729,4.139675,3.287459,2.093149,7.132114,-1.108729,2.998807,-1.574515,-9.186651,-7.559953,9.585821,9.150391,8.829038,8.146228,7.578767,8.425577,6.779454,-9.876856,-9.470446,2.005005,-4.347166,3.324261,3.877155,4.422043,2.917835,-7.384314,8.056258,4.700694,4.586821,1.416273,-0.382536,8.413950,1.397590,-8.583793,7.190512,-2.353437,-3.777892,-9.745311,5.360350,6.578197,6.482184,-3.802403,8.484990,-7.929537,-6.593689,5.652005,-8.352998,-5.404016,-6.510568,3.480592,2.315657,-9.079931,2.621855,7.951510,-8.556058,-3.523336,-7.786929,8.253120,-7.787631,4.360534,7.232681,-7.217331,0.397670,-0.397593,6.682373,4.041882,3.457914,-3.388708,-3.839906,1.839232,-2.874864,3.961265,-7.860491,-1.207307,-1.912923,7.888098,-6.217928,9.070565,1.201250,-9.553262,0.874761,5.117513,6.865506,7.334656,8.272211,-4.084888,-5.084006,-1.323211,-6.963894,-8.618957,-3.072616,9.492127,2.349832,-1.848037,-2.035265,6.406982,6.747718,-1.718631,2.602643,-9.312623,-6.377991,-5.622883,-5.743854,-3.263515,-8.364460,4.522509,-5.061838,4.706560,9.190342,-0.058400,-1.775320,2.121807,-2.027554,-4.480518,-1.884334,-7.238152,-5.949488,2.588772,-5.387145,8.253646,-4.763748,9.909387,5.627642,-6.948220,6.554562,-0.488377,3.256544,9.595211,1.685982,2.000899,-1.237451,3.540179,-5.066022,-2.714291,-8.187074,8.879695,-0.491204,5.015511,-8.573646,8.172517,7.995444,1.862917,6.850475,-6.172743,2.963530,-6.897083,-6.655966,-6.089671,5.701632,4.599057,-4.780328,-5.038696,8.883218,3.092457,-7.873536,3.077132,-2.038353,-8.249764,4.056578,9.367407,-5.228943,9.941458,4.525895,3.073234,-7.268435,-5.684356,-1.932944,1.106703,-4.743991,9.285456,8.564443,-1.419452,5.179482,-3.781968,-5.135094,8.614780,6.149304,9.037889,-7.665077,8.093320,9.688667,-1.295611,9.850460,5.801820,-7.970981,-6.774475,-5.638752,2.683582,1.440643,-0.337626,9.800753,-6.472076,-2.758227,0.042903,-5.639781,7.333943,-6.896448,9.734487,-8.977985,-4.436268,9.064254,-3.861297,6.875776,-6.806804,9.776958,-2.414549,-9.599880,-4.563490,-2.482231,-2.237403,-6.482772,-5.504217,4.860627,-9.840755,5.221221,-8.524738,3.384324,-6.764779,-3.180333,7.144334,2.802227,0.971884,-8.934526,9.524131,2.121227,-7.701524,1.748305,4.609934,-1.632545,-3.101198,-5.121605,5.612522,-6.514737,-6.502719,-2.129357,-3.881455,-5.419623,9.652769,7.523944,5.525662,-6.497622], dtype = "float64")#candidate|5211|(640,)|const|float64
call_5210 = relay.TupleGetItem(func_388_call(relay.reshape(const_5211.astype('float64'), [8, 16, 5])), 0)
call_5212 = relay.TupleGetItem(func_391_call(relay.reshape(const_5211.astype('float64'), [8, 16, 5])), 0)
output = relay.Tuple([call_5192,call_5207,const_5208,call_5210,const_5211,])
output2 = relay.Tuple([call_5193,call_5209,const_5208,call_5212,const_5211,])
func_5231 = relay.Function([], output)
mod['func_5231'] = func_5231
mod = relay.transform.InferType()(mod)
mutated_mod['func_5231'] = func_5231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5231_call = mutated_mod.get_global_var('func_5231')
call_5232 = func_5231_call()
output = call_5232
func_5233 = relay.Function([], output)
mutated_mod['func_5233'] = func_5233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_5240 = relay.TupleGetItem(func_3124_call(), 0)
call_5241 = relay.TupleGetItem(func_3125_call(), 0)
func_3535_call = mod.get_global_var('func_3535')
func_3536_call = mutated_mod.get_global_var('func_3536')
call_5244 = relay.TupleGetItem(func_3535_call(), 0)
call_5245 = relay.TupleGetItem(func_3536_call(), 0)
output = relay.Tuple([call_5240,call_5244,])
output2 = relay.Tuple([call_5241,call_5245,])
func_5259 = relay.Function([], output)
mod['func_5259'] = func_5259
mod = relay.transform.InferType()(mod)
mutated_mod['func_5259'] = func_5259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5259_call = mutated_mod.get_global_var('func_5259')
call_5260 = func_5259_call()
output = call_5260
func_5261 = relay.Function([], output)
mutated_mod['func_5261'] = func_5261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3978_call = mod.get_global_var('func_3978')
func_3979_call = mutated_mod.get_global_var('func_3979')
call_5272 = relay.TupleGetItem(func_3978_call(), 0)
call_5273 = relay.TupleGetItem(func_3979_call(), 0)
const_5299 = relay.const([[[-1.441152,-5.191924,9.846481],[9.454191,3.453970,-7.744448],[-4.399940,-9.584302,2.985650],[5.361484,-6.671398,3.847623],[-4.276711,9.192917,5.013954]],[[1.607805,7.677044,-5.289403],[0.417911,-6.920738,3.147250],[7.994780,2.228650,-1.602098],[6.814212,8.460638,-8.042788],[-7.020345,-4.607818,0.845163]],[[-3.172407,-6.968605,9.498210],[-1.569797,-8.009689,2.208021],[-4.524345,2.394650,-0.947662],[-3.422868,4.419718,3.788474],[-4.010124,-9.752796,6.193145]],[[-6.829730,8.386566,8.383180],[4.044615,6.198102,-1.501997],[0.494567,0.920158,6.635157],[5.120154,-1.579122,2.384531],[-4.873737,4.248861,1.118585]],[[1.908690,-1.630037,-4.518732],[8.068523,4.202261,2.293247],[0.943934,-9.772028,4.777318],[-1.311672,7.902494,1.883102],[-4.942006,6.694091,0.194543]],[[-6.245022,-5.774517,7.844079],[-6.158345,2.244437,2.254441],[-5.556663,8.104123,-2.292096],[-1.591761,0.861188,3.674113],[-6.739659,6.200135,8.802879]],[[-9.610901,7.107410,-2.495967],[6.823439,6.229997,-7.469790],[4.210617,5.856762,-9.070495],[6.672974,-0.178760,-8.348947],[-7.857367,1.365286,-5.276166]],[[-3.782419,-5.929336,-3.443400],[-9.778021,4.383698,-5.814033],[-1.237163,-5.126168,-1.055560],[7.930109,4.685618,0.601410],[4.439782,1.506592,6.064153]],[[9.742587,-4.633024,1.482675],[-2.550502,0.687013,6.237021],[-9.804899,2.524587,0.661066],[4.554913,-5.568521,-4.338859],[-2.666809,8.371603,-3.458073]],[[-1.993416,-5.465555,7.274059],[6.041226,9.676573,5.902957],[-1.330619,-2.210363,1.636125],[8.086697,7.641980,2.150259],[9.511426,1.758475,2.607569]],[[6.392125,-1.536067,2.718032],[8.244979,7.176317,7.762471],[5.282780,-6.807229,5.562528],[4.785010,-0.971591,-9.993871],[-6.324342,-5.417410,-3.243816]],[[7.032427,3.082832,0.275323],[7.064232,1.321650,4.613604],[-5.726000,-9.626346,5.103067],[-5.957764,-5.610983,8.316741],[-7.782761,9.683254,5.132826]]], dtype = "float64")#candidate|5299|(12, 5, 3)|const|float64
bop_5300 = relay.greater(call_5272.astype('bool'), relay.reshape(const_5299.astype('bool'), relay.shape_of(call_5272))) # shape=(12, 5, 3)
bop_5303 = relay.greater(call_5273.astype('bool'), relay.reshape(const_5299.astype('bool'), relay.shape_of(call_5273))) # shape=(12, 5, 3)
output = relay.Tuple([bop_5300,])
output2 = relay.Tuple([bop_5303,])
func_5310 = relay.Function([], output)
mod['func_5310'] = func_5310
mod = relay.transform.InferType()(mod)
mutated_mod['func_5310'] = func_5310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5310_call = mutated_mod.get_global_var('func_5310')
call_5311 = func_5310_call()
output = call_5311
func_5312 = relay.Function([], output)
mutated_mod['func_5312'] = func_5312
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5350 = relay.const([[[6.790564,-6.501145,2.398663,-1.498843,5.897928,-8.556640,5.768941,-4.824556,-9.668985,0.105443,1.069516,0.238858,-3.335418,-2.581768,6.145296,-3.340863],[9.578926,-0.444398,6.930518,-1.910986,-1.743265,4.200914,-9.149765,-4.890618,3.316355,9.846803,6.054346,-0.291879,-5.267921,2.676537,-1.740466,-7.366960],[-9.239483,-1.117788,-7.836084,2.453016,-3.593136,-5.054991,-8.475839,9.056938,-8.389513,-8.764939,-3.042586,2.233997,2.427461,-7.170036,-0.489302,-2.209341],[9.193269,2.928228,6.814222,-3.261443,6.898612,-4.750848,-2.363305,4.408526,-2.118504,-9.392374,-6.162220,-6.361823,-5.443369,3.219933,7.936681,-0.965638],[0.680241,-3.049228,-8.255448,-5.269724,-9.631360,9.499507,-4.220803,4.509122,-7.138737,0.959051,-4.971920,-1.126829,-2.063773,2.181816,8.110338,-7.199959],[3.283195,9.507622,-9.333899,-8.718265,1.837479,6.312741,-9.250189,-6.705155,-5.816452,-1.194649,1.472880,-4.607305,-3.438715,-9.450100,4.687640,-4.232298],[4.026656,-9.122077,7.632789,-8.991940,-9.170180,5.267335,4.739350,2.999858,2.714428,-5.714686,-4.653577,7.353351,-1.462670,3.251040,-9.400616,2.044492],[2.778128,8.342032,-9.800431,8.631362,2.073999,2.196680,5.412841,1.876786,-6.754517,3.455912,-7.626948,-0.125822,-2.613049,-5.159460,9.946825,7.850593]],[[5.531796,-5.383075,-6.261702,-0.356311,-1.505255,-0.686410,-3.475511,-9.146725,0.269438,3.837542,-5.337564,6.629610,8.337848,-0.079458,8.782116,-7.271214],[-5.424980,-8.252602,-9.970099,8.515920,-7.372505,-3.773076,6.106648,-1.134267,7.931332,-5.761467,0.406886,-8.705329,0.890987,3.492339,-3.068602,3.502636],[-4.533592,-1.417776,-5.375004,6.116906,4.196104,4.920674,1.521181,-4.880595,7.469660,-1.328845,-6.684689,-5.455803,7.959374,-3.714921,4.233333,1.186324],[6.205861,-1.685058,4.818142,-8.953539,-9.482407,5.558060,5.602660,-9.476826,-2.084110,2.650093,5.562347,-0.230274,-0.157270,9.101024,-8.289019,6.242813],[-0.723235,0.564296,-5.484588,-8.185925,9.477152,-2.206424,0.215492,8.557066,3.337065,-8.278852,-1.784732,-8.817041,6.505072,-9.690093,-9.403132,3.064682],[-1.379031,-1.553068,2.221411,9.331523,-2.046631,7.383716,-4.466567,2.591213,-4.137943,-0.756607,-6.347278,8.398026,-7.239281,8.336827,4.605258,4.876318],[2.273348,-3.341042,7.893324,7.014777,0.767809,5.478442,0.979798,-5.956381,0.747911,0.707896,4.145058,2.758607,-0.383552,-9.550136,-4.896316,3.094805],[7.776786,-1.143032,1.971128,-0.906385,-4.038411,-0.766130,-0.863062,5.614843,-0.558084,5.603413,2.588553,4.659728,0.690139,-8.535919,-2.011866,9.864203]],[[0.779038,-7.834061,9.205870,-5.566607,-6.086431,0.339048,6.187539,-8.137964,4.062651,6.372839,1.662680,6.817912,-8.950317,-9.930783,0.554816,-5.130332],[6.130845,-0.503226,8.977900,-7.882479,9.096505,-3.038111,1.619422,-8.707735,-9.285138,7.654465,4.816095,-8.207000,-0.546187,-4.360234,-9.224755,5.510648],[9.615565,-0.799711,-3.760038,-2.967165,-5.759876,-9.784861,-1.244285,3.927478,-2.834360,-7.594078,6.303848,4.456715,2.565332,2.964112,-4.738353,8.662224],[-5.556068,-9.272172,-1.024240,9.736026,3.214175,-2.620023,-5.029914,-9.025986,0.275053,-9.937581,1.157199,-8.393080,9.486181,-2.956288,-5.885979,8.412969],[8.686416,9.217386,4.235203,-8.832514,-3.389724,-9.874840,-3.608928,5.681460,1.544657,-1.824489,5.402772,1.596914,0.845456,-6.766318,5.279123,-8.350247],[5.439500,-2.078998,-8.117939,4.161225,-1.074311,-2.679127,-4.443466,-6.833600,2.200382,-5.048035,3.449611,-6.454396,2.211381,3.879891,-9.561527,3.465121],[1.611717,-6.031001,1.193006,5.794090,1.580137,-6.854027,3.188209,0.916462,-4.869262,-2.962121,9.289100,-9.374581,9.006107,1.648398,9.650369,-2.612403],[1.935649,4.825632,-3.623001,-6.388538,-2.356490,-2.214843,7.141232,-3.563963,8.826959,6.496701,2.635616,-8.462368,3.021844,3.020165,-3.927747,-2.846555]],[[-9.969156,-4.667533,-6.303289,7.726664,-3.726400,-8.743006,7.344774,6.454575,7.545832,-4.651622,-2.441782,-1.816504,-7.007850,-6.242542,5.161872,-9.584135],[-4.742606,-6.381636,9.293337,7.542360,8.590542,6.381933,6.024312,-6.283041,-1.966868,3.269850,9.330318,-1.765904,2.412970,-6.020684,1.221581,2.291456],[-1.335332,-5.484713,2.583268,0.342756,-3.612780,6.219492,6.376916,-4.589623,-6.199177,-8.846163,6.868584,-0.254106,9.901867,9.687318,5.225680,5.496250],[6.700675,-9.519901,2.075903,1.987983,-1.862339,2.820538,-5.095921,7.390498,-9.160367,-5.250416,1.848388,-8.808001,-7.591254,5.518476,-4.731400,6.742120],[8.824635,-9.166680,0.691876,-2.090164,7.092505,2.490913,4.926257,-2.397915,-7.118035,-9.602964,4.918897,-0.842609,-8.227933,-0.692536,-5.760234,-9.327011],[1.492320,9.268058,3.247947,-9.087100,3.168142,-6.320069,6.748896,-7.759399,-2.399235,5.118034,-8.776415,1.427937,7.667400,4.250383,7.385599,1.312421],[6.624540,8.755451,-7.015396,7.883357,8.034020,2.406328,-3.338835,-3.095504,-9.811680,9.638835,0.063433,3.964206,-3.973591,7.453322,9.370138,-4.640705],[2.864094,3.180558,3.699179,2.192414,-9.296137,9.849625,3.616440,0.132011,9.082566,-2.778837,7.983732,-0.892500,-8.814416,0.935083,-2.754008,-9.288576]]], dtype = "float64")#candidate|5350|(4, 8, 16)|const|float64
var_5351 = relay.var("var_5351", dtype = "float64", shape = (4, 8, 16))#candidate|5351|(4, 8, 16)|var|float64
bop_5352 = relay.minimum(const_5350.astype('float64'), relay.reshape(var_5351.astype('float64'), relay.shape_of(const_5350))) # shape=(4, 8, 16)
uop_5358 = relay.exp(const_5350.astype('float32')) # shape=(4, 8, 16)
output = relay.Tuple([bop_5352,uop_5358,])
output2 = relay.Tuple([bop_5352,uop_5358,])
func_5364 = relay.Function([var_5351,], output)
mod['func_5364'] = func_5364
mod = relay.transform.InferType()(mod)
var_5365 = relay.var("var_5365", dtype = "float64", shape = (4, 8, 16))#candidate|5365|(4, 8, 16)|var|float64
output = func_5364(var_5365)
func_5366 = relay.Function([var_5365], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5375 = relay.var("var_5375", dtype = "uint32", shape = ())#candidate|5375|()|var|uint32
var_5376 = relay.var("var_5376", dtype = "uint32", shape = (11, 10, 10))#candidate|5376|(11, 10, 10)|var|uint32
bop_5377 = relay.maximum(var_5375.astype('uint32'), var_5376.astype('uint32')) # shape=(11, 10, 10)
uop_5384 = relay.rsqrt(var_5376.astype('float32')) # shape=(11, 10, 10)
func_3730_call = mod.get_global_var('func_3730')
func_3731_call = mutated_mod.get_global_var('func_3731')
call_5388 = relay.TupleGetItem(func_3730_call(), 0)
call_5389 = relay.TupleGetItem(func_3731_call(), 0)
func_4856_call = mod.get_global_var('func_4856')
func_4857_call = mutated_mod.get_global_var('func_4857')
call_5396 = relay.TupleGetItem(func_4856_call(), 5)
call_5397 = relay.TupleGetItem(func_4857_call(), 5)
bop_5399 = relay.logical_or(uop_5384.astype('bool'), relay.reshape(var_5376.astype('bool'), relay.shape_of(uop_5384))) # shape=(11, 10, 10)
bop_5407 = relay.bitwise_or(var_5375.astype('int64'), var_5376.astype('int64')) # shape=(11, 10, 10)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_5411 = func_5092_call()
call_5412 = func_5092_call()
func_1988_call = mod.get_global_var('func_1988')
func_1992_call = mutated_mod.get_global_var('func_1992')
var_5421 = relay.var("var_5421", dtype = "uint8", shape = (7, 99))#candidate|5421|(7, 99)|var|uint8
const_5422 = relay.const([-4.462910,5.735149,-5.998535,-0.821040,-4.113641,-2.610046,-7.849353,2.182104,4.919057,-8.811115,7.394943,-9.171763,9.139181,5.716099,4.236768,-6.070152,1.381354,4.215551,-4.769506,3.544800,-8.790685,-2.438171,-5.882260,1.676464,1.623920,4.715886,-5.926328,0.129192,-4.734028,-3.015850,8.341856,0.194596,-6.548602,-1.505506,-7.788087,5.974648,1.002456,2.747293,7.085478,3.694325,4.672322,-1.017697,-5.135915,3.010873,-2.213069,-4.024398,2.757681,-2.598625,0.006721,-4.413191,-0.597422,-1.838513,2.851325,9.954511,-3.160960,8.710575,8.564316,2.182849,5.485365,-8.407594,-8.943751,9.844438,8.313747,1.770468,-7.332739,-7.975750,-3.950440,-2.149465,4.103641,-4.588349,-4.437911,2.927818,8.801615,-1.043590,5.599065,-4.500759,2.727167,5.944094,2.054454,2.906728,6.828789,-7.804466,-9.132679,5.221696,-9.921211,3.501634,-2.351986,-3.900431,3.652849,-1.465464,-1.730613,-0.848807,1.797401,-9.792079,7.048494,-7.256102,5.637899,-5.280460,-4.025043,0.544248,5.965096,3.489390,1.277477,-3.884851,-6.489136,-8.001279,0.900231,2.362045,-7.580027,-3.400227,9.767033,-1.247774,1.291203,9.269654,9.281939,1.995917,1.650466,-4.240665,-0.863437,-4.800499,8.982069,9.772325,9.385799,0.165881,-8.790832,1.215187,8.141074,7.329917,-0.505575,-8.832055,3.402305,0.804901,-6.971823,-4.502309,-8.504892,-4.968163,3.832943,-9.687588,-2.648684,-7.817513,6.378745,-5.413181,-9.204556,-0.375455,-3.598760,-3.639714,-2.922293,8.896458,7.118096,1.864108,-4.051333,5.636349,-2.857759,-8.581066,-4.010768,9.975399,8.034555,-9.799176,7.993837,-6.093690,1.705426,-4.753955,-4.412653,-1.263564,5.205378,9.260990,0.581586,3.186083,9.014950,-8.155910,-0.810366,9.643668,-5.550531,2.861378,-6.438520,6.945078,-7.274208,6.009565,1.114988,-6.930654,-7.485140,-6.695833,4.113796,3.531682,-1.362012,-8.290426,0.981175,-1.851112,7.474014,-0.916679,9.273936,9.278128,9.261178,4.784314,-7.286133,5.796090,6.525327,2.964402,5.150227,0.336694,-9.417566,-2.024522,-6.718317,7.465906,4.433502,3.252313,-6.967413,-4.458403,-6.565115,-7.488765,-2.577201,3.180075,-4.553008,-7.010963,3.651422,1.980476,0.793356,9.465877,-0.780622,5.944163,-2.352052,-7.498951,3.610675,-8.182349,-4.138298,-9.241885,-6.041374,4.913435,-2.491318,-4.584759,4.740003,-1.576269,-1.482754,-8.495566,-4.902751,-6.000157,8.072035,6.125982,9.602992,-2.438640,5.974882,-3.142214,-2.493651,-3.868030,3.281755,-7.384017,-5.658255,3.758267,-2.799218,0.664018,1.714067,-3.613918,-5.481327,4.716390,8.493280,-6.937723,8.303137,3.152925,-3.769770,-8.076429,-8.602306,-4.237705,1.700407,6.382497,-4.141649,2.910575,-2.127549,-2.618351,7.195928,5.920577,0.990378,3.419187,-9.540011,-6.605229,-4.973460,2.932733,8.384703,5.694365,6.977167,-5.120311,4.840695,-2.184786,0.947537,9.353187,-2.431394,-8.618554,-0.054723,-9.746466,-1.079646,2.183023,-3.973826,4.051265,-2.563611,-9.660885,-2.659661,2.921051,-9.910322,8.307079,-2.792016,5.687898,2.359507,-7.310754,5.597296,5.280896,6.847918,6.905962,5.828828,4.502637,8.492252,0.533914,6.008418,-0.981373,-6.133828,3.968769,-6.049634,-4.152962,-9.414094,9.250871,5.818364,3.573385,1.124931,-8.268495,-6.488012,-9.982371,-1.331167,8.901488,7.603573,3.724669,9.521950,-7.750898,4.461235,-9.011907,-3.103579,-0.884321,-5.779985,-9.429656,-0.964637,-2.020225,4.433099,-7.493187,-6.688944,5.102394,1.983891,-3.108790,0.235408,-1.468276,9.402010,1.176733,-3.337908,9.254239,3.966580,-3.972631,0.230821,-8.703218,-2.392853,-6.232152,-2.573971,-7.101519,-2.715412,6.494657,1.795253,3.329576,-0.383605,-9.284044,-4.257107,2.167644,-6.039489,6.098845,-4.161783,-9.802482,-8.095643,0.637395,-3.686542,8.128773,-7.689331,-4.743448,-4.058591,-1.170667,-0.266964,-9.915456,6.791069,4.312571,6.184815,5.278091,-0.355034,-2.772692,-4.353546,-7.013823,5.404304,4.192650,-1.267830,-8.820889,6.222640,2.239771,6.940136,-6.712482,2.172197,-7.896813,-0.596667,-6.036641,5.855241,-3.839681,-6.571363,-2.944805,-0.160628,-6.033179,-0.918093,8.056457,9.765784,2.030965,-6.930389,5.134939,8.398995,5.872421,6.748580,3.051117,-5.702325,-3.875989,-2.257220,6.868162,1.994783,9.162632,-4.645914,9.529646,3.619010,-2.645337,1.136549,3.102915,-0.345944,-7.397217,-5.489410,-1.849432,4.034151,1.549803,-5.530866,-4.207096,-7.413646,7.056593,6.629512,2.300427,5.110240,-9.388491,3.044958,-5.562138,-1.100050,-2.891809,-1.667340,-7.690233,1.619847,4.452635,-8.865217,0.527541,0.555550,9.100795,-1.990998,7.407250,-7.758603,-0.077867,1.756207,9.276710,2.049648,-6.430026,3.789821,-4.599396,-9.382143,-7.086911,4.714594,-8.599391,-8.005960,9.023410,-8.424553,-4.813608,6.194765,-3.636169,6.931719,-0.306569,3.860085,-4.586568,8.145975,-6.083468,-2.253383,-2.431053,-3.726265,-3.840126,-9.625943,0.757398,-0.197921,-8.609710,-3.433625,-8.090328,-2.767942,0.516699,2.745548,-9.458389,-8.330468,3.759444,8.392465,-5.443268,-5.653315,-9.119358,1.634708,3.281115,-0.556615,0.293581,-3.622339,-7.651013,-1.598254,8.631835,-1.567323,2.481651,-9.301579,7.788254,-5.726174,2.276101,2.441742,-0.318401,-8.501420,-3.068396,9.029302,8.918342,-9.295703,-0.529955,5.316394,-5.725972,-4.789755,-1.405938,-2.898287,-8.425499,-0.451426,2.522519,-6.114475,-9.660178,4.794419,5.218062,-3.659588,6.345409,-3.193010,4.387265,6.442996,2.105256,9.853889,-5.037735,-8.060477,3.697626,-0.444023,-6.261709,-4.024662,8.721986,7.570941,-0.367607,-8.436133,-9.536518,7.880783,-7.785201,-3.163574,-7.160620,-7.724234,9.925132,-6.179598,1.444872,-9.906715,4.570873,-8.627540,-4.007513,9.300187,6.305358,-0.492531,-9.844611,4.432203,-5.319564,5.257160,-4.221717,7.843852,-5.963200,-6.321570,1.780295,7.266421,6.912072,3.905991,9.710932,-3.151257,-1.555573,7.504524,-2.310382,-5.138005,-2.098999,-3.321060,9.512486,-9.040912,0.657704,2.792877,4.806355,3.490925,-0.244529,1.239339,2.062087,-1.494759,-5.000567,-0.581141,-5.722375,-8.371314,-2.843482,9.900854,-6.225989,7.582513,-3.159815,-2.446103,4.200399,-9.381735,6.361843,-7.498518,6.701043,-7.368657,-4.062691,8.776775,3.678534,7.989522,-7.546937,2.831485,-1.040017,-8.498754,4.044920,5.311957,-3.441554,-1.772066,9.721796,-9.962716,4.427895,-6.529628,5.968303,8.531527,3.881279,9.719482,0.591240,6.203251,3.944676,7.364600,-2.717704,-4.248907,-5.904116], dtype = "float64")#candidate|5422|(640,)|const|float64
call_5420 = relay.TupleGetItem(func_1988_call(relay.reshape(var_5421.astype('uint8'), [11, 7, 9]), relay.reshape(var_5421.astype('float64'), [11, 7, 9]), relay.reshape(const_5422.astype('float64'), [640,]), ), 1)
call_5423 = relay.TupleGetItem(func_1992_call(relay.reshape(var_5421.astype('uint8'), [11, 7, 9]), relay.reshape(var_5421.astype('float64'), [11, 7, 9]), relay.reshape(const_5422.astype('float64'), [640,]), ), 1)
output = relay.Tuple([bop_5377,call_5388,call_5396,bop_5399,bop_5407,call_5411,call_5420,var_5421,const_5422,])
output2 = relay.Tuple([bop_5377,call_5389,call_5397,bop_5399,bop_5407,call_5412,call_5423,var_5421,const_5422,])
func_5425 = relay.Function([var_5375,var_5376,var_5421,], output)
mod['func_5425'] = func_5425
mod = relay.transform.InferType()(mod)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mutated_mod.get_global_var('func_5425')
var_5427 = relay.var("var_5427", dtype = "uint32", shape = ())#candidate|5427|()|var|uint32
var_5428 = relay.var("var_5428", dtype = "uint32", shape = (11, 10, 10))#candidate|5428|(11, 10, 10)|var|uint32
var_5429 = relay.var("var_5429", dtype = "uint8", shape = (7, 99))#candidate|5429|(7, 99)|var|uint8
call_5426 = func_5425_call(var_5427,var_5428,var_5429,)
output = call_5426
func_5430 = relay.Function([var_5427,var_5428,var_5429,], output)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5445 = relay.var("var_5445", dtype = "uint32", shape = (10, 6, 11))#candidate|5445|(10, 6, 11)|var|uint32
const_5446 = relay.const([[[-1,-3,-10,4,-2,-6,3,5,7,2,-2],[1,-2,7,8,-5,6,1,-2,8,5,3],[8,-3,7,-4,-6,7,5,-7,1,-3,10],[2,1,8,-4,6,-10,-8,2,-8,-9,8],[8,-9,7,-7,-6,-1,-9,-4,9,-4,9],[-7,-3,1,1,-8,-3,7,8,7,3,2]],[[-6,-4,8,-5,9,8,-9,4,8,-9,8],[3,2,-10,9,-6,10,-9,7,3,-7,9],[-2,6,-4,3,2,8,7,8,1,8,-3],[8,-2,-7,-6,5,-9,7,5,-5,-5,1],[-10,5,-3,3,-3,-6,-3,-2,-9,-6,7],[4,-5,-10,-2,2,10,-3,4,6,8,10]],[[9,2,-10,-8,4,-2,-9,-1,3,-4,3],[-5,5,4,-5,7,-8,-2,9,-9,2,-4],[-4,-3,-8,-10,-8,10,6,9,8,-5,-4],[9,9,-8,9,-3,7,-10,4,-10,2,-6],[-3,2,-10,10,-8,-9,6,9,9,6,9],[-5,-5,3,-2,-8,3,-6,8,9,4,-2]],[[-3,-4,4,-2,-8,-4,-9,-10,8,-6,9],[6,-10,1,2,4,6,-10,10,1,-7,8],[-4,9,-8,6,8,5,8,-4,1,6,6],[8,-7,3,-8,10,-3,7,-3,-1,7,-1],[-9,-7,-4,10,8,7,10,9,-5,9,9],[1,9,5,5,-2,2,7,-4,-6,-6,10]],[[-5,2,-10,-7,-9,1,8,5,-3,-10,-8],[-2,3,-5,-3,2,5,-9,9,4,-6,-5],[10,-10,8,-1,-4,-9,3,5,-10,-5,3],[10,1,9,8,4,5,-4,-1,-9,7,3],[5,-5,6,-2,5,-2,-7,-6,6,-4,3],[4,-2,-10,-3,7,2,7,-4,-1,-2,-5]],[[-4,3,-10,-1,-4,6,7,2,-2,2,-3],[-4,-5,-5,-7,-5,1,3,2,2,-10,-1],[-8,-9,-4,-4,7,5,4,10,-8,4,-10],[1,-2,7,5,9,2,4,8,-4,-8,8],[9,-3,10,8,-6,-3,4,-2,-9,-2,10],[7,-2,2,4,-3,-5,-1,6,6,-10,4]],[[-8,-3,-7,8,-9,-5,9,-2,-7,-5,-3],[-1,8,3,-6,-2,-1,-3,-9,10,-7,-10],[4,1,-9,6,-3,-3,4,-6,10,5,4],[4,9,3,8,-4,7,6,10,-10,-8,-3],[-8,3,1,-3,-7,8,10,-2,5,3,-1],[-2,10,5,6,4,-1,3,-6,6,-3,9]],[[-8,-6,-7,6,7,-1,9,-8,-6,-8,9],[10,10,-1,2,8,9,4,-4,-3,8,9],[10,4,-2,-4,6,8,-1,8,-7,5,2],[-5,2,7,-4,9,6,1,-8,8,-8,-9],[-5,4,5,1,1,-4,-4,2,7,-1,7],[-10,-6,8,-7,4,-3,-6,-8,-6,3,-1]],[[-8,6,-6,-10,-8,7,-1,7,-1,-9,-9],[-3,-6,-7,8,7,-1,-3,9,-10,-6,-10],[-10,-6,-7,-5,2,5,-8,6,-10,-2,-7],[8,10,2,4,4,8,-7,5,-1,-2,6],[1,-8,6,-2,6,-8,7,-4,-1,-7,8],[-5,-7,-3,-5,1,-10,4,8,10,5,2]],[[-9,7,7,-10,7,10,-2,-3,2,2,2],[2,4,-3,2,-3,4,-3,-3,5,-10,3],[10,10,1,-5,-10,2,9,-2,-3,-1,6],[-7,9,-10,1,-3,-1,-4,-7,-5,8,-10],[7,7,9,-8,-2,-6,8,-1,1,-1,-7],[5,6,2,9,10,-5,5,-4,1,-9,10]]], dtype = "uint32")#candidate|5446|(10, 6, 11)|const|uint32
bop_5447 = relay.bitwise_or(var_5445.astype('uint32'), relay.reshape(const_5446.astype('uint32'), relay.shape_of(var_5445))) # shape=(10, 6, 11)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_5450 = func_5092_call()
call_5451 = func_5092_call()
output = relay.Tuple([bop_5447,call_5450,])
output2 = relay.Tuple([bop_5447,call_5451,])
func_5454 = relay.Function([var_5445,], output)
mod['func_5454'] = func_5454
mod = relay.transform.InferType()(mod)
var_5455 = relay.var("var_5455", dtype = "uint32", shape = (10, 6, 11))#candidate|5455|(10, 6, 11)|var|uint32
output = func_5454(var_5455)
func_5456 = relay.Function([var_5455], output)
mutated_mod['func_5456'] = func_5456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3535_call = mod.get_global_var('func_3535')
func_3536_call = mutated_mod.get_global_var('func_3536')
call_5463 = relay.TupleGetItem(func_3535_call(), 0)
call_5464 = relay.TupleGetItem(func_3536_call(), 0)
func_3936_call = mod.get_global_var('func_3936')
func_3939_call = mutated_mod.get_global_var('func_3939')
const_5466 = relay.const([-4.621783,3.020843,-0.248176,9.321610,-8.963384,-4.085986,2.803827,-1.507099,-5.608569,-7.228470,-3.399497,-5.122894,2.667612,9.646951,-6.660087,-2.544917,-2.812474,6.480740,-7.604186,-9.056678,-2.867699,-3.837613,5.627518,2.554818,7.844075,0.881149,-3.851111,-1.845229,-6.272533,2.102808,-9.588136,3.582376,0.027194,1.402100,0.671799,-3.920659,-1.622489,8.083363,-9.328861,-4.352424,0.244865,3.118688,2.527796,1.283147,3.247452,3.860526,-5.284888,-2.166261,8.189017,-3.866946,4.866910,-1.949263,6.649319,1.100847,-0.619962,4.490817,1.616125,-3.678252,-9.361805,-4.981669,-7.516111,-0.969276,-8.565174,-9.492120,-9.404708,-1.415911,-8.983885,-6.776094,6.346738,6.287257,9.949540,8.060432,5.316122,0.064093,1.201666,5.039581,5.293011,0.553041,-7.330174,1.520484,-5.019556,-0.237661,-2.661101,-3.391022,-3.587275,-8.147201,0.103055,-4.521739,3.740470,-2.681611,-1.146707,-1.964931,3.060292,4.254791,5.724120,8.774929,2.740830,-9.545580,-0.018789,6.114476,-9.735651,-7.546039,6.468920,-5.675596,-8.005181,3.990028,-6.401643,4.224339,1.601426,7.224830,5.260189,-7.436296,-1.273077,5.347432,-2.581320,6.345045,-1.704602,-2.791917,5.148201,-4.244373,5.738589,-0.193304,8.735775,-8.504971,-1.982147,4.866267,-5.005933,-4.124619,0.046733,7.492460,-2.696581,-4.542721,-7.108660,-4.969046,-4.121568,5.478619,9.001733,7.136182,8.303083,2.382046,-8.398654,-1.929616,9.224627,9.412327,-6.806356,-3.616535,-7.358298,3.921322,7.812891,-1.102430,-2.223248,5.581700,6.160131,-6.762247,-6.928390,-0.633205,-4.879784,5.672531,-9.362141,-3.077882,4.936449,4.997346,-6.749858,-7.339531,3.112682,4.597463,9.383894,4.414098,0.920367,3.743654,1.472457,-5.178805,-7.213069,6.531106,8.666906,8.593931,-0.982785,-3.461172,4.484680,-1.093814], dtype = "float64")#candidate|5466|(180,)|const|float64
call_5465 = relay.TupleGetItem(func_3936_call(relay.reshape(const_5466.astype('float64'), [12, 5, 3])), 0)
call_5467 = relay.TupleGetItem(func_3939_call(relay.reshape(const_5466.astype('float64'), [12, 5, 3])), 0)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_5476 = relay.TupleGetItem(func_3352_call(), 0)
call_5477 = relay.TupleGetItem(func_3354_call(), 0)
func_4374_call = mod.get_global_var('func_4374')
func_4375_call = mutated_mod.get_global_var('func_4375')
call_5479 = relay.TupleGetItem(func_4374_call(), 0)
call_5480 = relay.TupleGetItem(func_4375_call(), 0)
output = relay.Tuple([call_5463,call_5465,const_5466,call_5476,call_5479,])
output2 = relay.Tuple([call_5464,call_5467,const_5466,call_5477,call_5480,])
func_5484 = relay.Function([], output)
mod['func_5484'] = func_5484
mod = relay.transform.InferType()(mod)
output = func_5484()
func_5485 = relay.Function([], output)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_5534 = func_4416_call()
call_5535 = func_4416_call()
func_979_call = mod.get_global_var('func_979')
func_983_call = mutated_mod.get_global_var('func_983')
var_5549 = relay.var("var_5549", dtype = "float32", shape = (616,))#candidate|5549|(616,)|var|float32
call_5548 = relay.TupleGetItem(func_979_call(relay.reshape(var_5549.astype('float32'), [7, 11, 8]), relay.reshape(var_5549.astype('float32'), [7, 11, 8]), ), 3)
call_5550 = relay.TupleGetItem(func_983_call(relay.reshape(var_5549.astype('float32'), [7, 11, 8]), relay.reshape(var_5549.astype('float32'), [7, 11, 8]), ), 3)
output = relay.Tuple([call_5534,call_5548,var_5549,])
output2 = relay.Tuple([call_5535,call_5550,var_5549,])
func_5551 = relay.Function([var_5549,], output)
mod['func_5551'] = func_5551
mod = relay.transform.InferType()(mod)
mutated_mod['func_5551'] = func_5551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5552 = relay.var("var_5552", dtype = "float32", shape = (616,))#candidate|5552|(616,)|var|float32
func_5551_call = mutated_mod.get_global_var('func_5551')
call_5553 = func_5551_call(var_5552)
output = call_5553
func_5554 = relay.Function([var_5552], output)
mutated_mod['func_5554'] = func_5554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4644_call = mod.get_global_var('func_4644')
func_4645_call = mutated_mod.get_global_var('func_4645')
call_5571 = relay.TupleGetItem(func_4644_call(), 0)
call_5572 = relay.TupleGetItem(func_4645_call(), 0)
output = relay.Tuple([call_5571,])
output2 = relay.Tuple([call_5572,])
func_5579 = relay.Function([], output)
mod['func_5579'] = func_5579
mod = relay.transform.InferType()(mod)
output = func_5579()
func_5580 = relay.Function([], output)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5581 = relay.var("var_5581", dtype = "float64", shape = (9, 1, 8))#candidate|5581|(9, 1, 8)|var|float64
uop_5582 = relay.tan(var_5581.astype('float64')) # shape=(9, 1, 8)
func_5454_call = mod.get_global_var('func_5454')
func_5456_call = mutated_mod.get_global_var('func_5456')
const_5587 = relay.const([-4,1,-5,4,9,8,-8,3,-10,10,3,1,-8,-7,-2,5,-9,1,-5,2,5,-8,-2,7,-3,10,-8,9,-7,-9,5,4,2,-7,-2,-9,-10,2,-1,-4,3,-10,2,8,-10,-8,-3,-8,-10,2,-6,9,-9,6,9,4,-3,-4,6,6,-1,10,7,-8,2,8,-10,-4,9,9,-9,9,-5,-8,-5,6,9,1,-1,4,9,-1,-1,8,-4,-8,-7,-6,-8,-5,7,2,-7,-5,-1,4,-2,-9,-10,5,-3,9,-7,-6,9,9,-5,3,3,-2,8,-2,-1,-3,7,8,-10,2,4,-4,1,1,6,8,4,2,6,-2,7,1,-5,6,8,3,-7,-4,-10,-4,9,-4,4,4,-1,8,-2,-4,9,-2,-1,8,-2,8,-7,6,8,10,-9,-1,-1,-10,1,-7,7,7,4,8,10,-8,2,-5,-6,-2,9,5,4,10,1,-6,-9,-8,10,9,-4,7,10,6,-6,3,2,3,5,-3,-3,7,-4,4,-3,-4,-1,2,-2,9,7,-3,-2,-4,10,-5,8,4,1,8,5,10,2,9,-2,-3,-2,7,3,-1,1,-7,-10,-1,-10,-4,10,3,5,9,10,-6,10,-4,-5,5,3,-4,-4,-3,-3,-9,10,-8,-4,4,-9,-6,-4,-2,-7,4,3,-2,-3,9,-3,-3,-2,10,6,-2,4,7,-10,6,8,-7,8,-5,-6,8,-7,-2,10,7,-6,4,-8,-6,10,6,-2,10,-6,-10,1,4,7,-9,10,4,6,3,-6,4,3,-5,-5,-4,10,-3,-9,1,5,-4,9,-8,-3,10,-4,-7,-6,-3,-7,-2,-10,-10,-4,-7,-4,-1,-7,7,-3,-3,-1,3,3,8,2,9,-7,-3,1,-7,8,-7,8,-7,10,8,-10,-1,-9,-7,3,5,6,-10,-7,-3,6,2,-3,-4,10,-8,-5,7,2,-6,-7,-2,10,-1,8,2,3,7,-4,1,-5,6,10,7,-7,-4,6,9,-9,-1,-2,10,-8,1,9,7,1,-5,9,2,5,-2,3,6,-2,8,3,-1,-4,-2,4,-9,7,7,-8,-3,4,-5,-7,-8,2,-4,1,-4,6,10,-9,7,6,3,-3,-8,-2,-4,6,9,-8,-10,6,6,2,-4,-8,7,4,-8,6,4,7,-8,-1,-8,8,8,4,8,1,-6,-4,10,5,-5,-4,-1,-10,-3,-6,10,10,9,-9,9,10,8,10,-2,-8,6,-7,-2,-5,-7,-7,-6,4,-3,4,-4,7,6,2,2,6,-1,-4,1,-7,10,-5,2,-2,4,-7,10,-10,3,6,-1,3,5,-2,-7,-5,2,-3,-1,9,3,-4,2,-9,6,-8,8,-1,-9,9,4,4,6,-2,2,-2,9,-8,-10,4,4,4,-5,7,10,3,2,9,5,-6,-5,4,4,5,-10,-1,4,8,-10,5,-5,-3,-6,-4,4,-9,-8,-4,-4,-6,7,1,-3,-1,6,-5,6,7,-8,4,2,-4,-8,-5,-5,-9,8,-6,-8,6,-4,-6,-6,-6,-5,10,-4,10,-1,6,-5,10,2,-4,2,-8,-10,-1,-7,-5,-5,-2,9,3,-4,-8,2,2,-4,8,-8,-4,-1,7,10,-2,6,8,-3,-5,-9,-8,1,-9,-8,-4,-3,7,3,-4,5,-2,8,-6,10,-2,6,-2,-1,5,9,-8,-8,-8,6,-6,6,3,7,-6,3,-9,-9,-8,-3,-2,10,5,-2], dtype = "uint32")#candidate|5587|(660,)|const|uint32
call_5586 = relay.TupleGetItem(func_5454_call(relay.reshape(const_5587.astype('uint32'), [10, 6, 11])), 0)
call_5588 = relay.TupleGetItem(func_5456_call(relay.reshape(const_5587.astype('uint32'), [10, 6, 11])), 0)
uop_5590 = relay.log(uop_5582.astype('float32')) # shape=(9, 1, 8)
bop_5595 = relay.multiply(uop_5590.astype('uint64'), relay.reshape(uop_5582.astype('uint64'), relay.shape_of(uop_5590))) # shape=(9, 1, 8)
output = relay.Tuple([call_5586,const_5587,bop_5595,])
output2 = relay.Tuple([call_5588,const_5587,bop_5595,])
func_5602 = relay.Function([var_5581,], output)
mod['func_5602'] = func_5602
mod = relay.transform.InferType()(mod)
var_5603 = relay.var("var_5603", dtype = "float64", shape = (9, 1, 8))#candidate|5603|(9, 1, 8)|var|float64
output = func_5602(var_5603)
func_5604 = relay.Function([var_5603], output)
mutated_mod['func_5604'] = func_5604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5639 = relay.var("var_5639", dtype = "float64", shape = (2, 9, 10))#candidate|5639|(2, 9, 10)|var|float64
uop_5640 = relay.cosh(var_5639.astype('float64')) # shape=(2, 9, 10)
func_5551_call = mod.get_global_var('func_5551')
func_5554_call = mutated_mod.get_global_var('func_5554')
const_5643 = relay.const([-2.461000,6.442512,7.759467,-6.064419,-2.970426,9.356782,-8.175040,8.556870,5.866452,-6.740872,9.504882,-4.570434,-1.864707,-4.258291,-1.335040,-2.746928,-3.426230,8.712503,-6.845675,-8.802997,-0.213030,-6.487031,-5.138915,9.983611,2.462574,2.638441,-0.052783,-9.612854,-8.592816,-9.606541,-0.179983,5.003141,5.874971,-9.751941,-9.429216,-3.639564,-1.213008,-1.193917,-2.018455,1.055275,4.092239,-8.717621,-3.914075,-8.847159,1.829802,2.019102,-6.580298,-2.832203,9.918335,7.972998,1.134929,-7.865214,-9.587122,0.850751,-0.373152,-6.458341,6.297927,4.008247,2.248640,-5.638463,8.273340,-9.063418,-1.340307,1.852412,5.413610,-1.882805,-2.474851,6.290941,6.488242,-7.257733,4.823623,1.642517,4.420134,-9.989954,-5.727287,-7.901192,-4.442747,4.326628,1.511969,-3.053037,-7.106122,-2.896093,8.180980,0.101619,-2.981419,-9.612572,8.065684,-7.459548,5.609895,9.796182,-1.388503,1.386116,2.062117,2.656724,7.239649,6.987745,-8.824830,-3.145635,4.644797,-5.128125,9.560572,0.322776,-6.850324,-7.139989,-6.078626,-2.969570,6.915905,9.325457,-0.095717,3.175302,-0.194550,5.835704,-4.768314,-6.017103,-8.074306,6.121224,-7.698309,-4.649215,9.992198,-0.977206,-2.145155,-3.139018,-2.946388,-2.429240,-1.808963,-7.673048,6.210206,-5.400720,7.691526,1.069934,0.862901,-4.548943,-4.112241,7.406619,3.905972,3.229236,-7.142223,4.745494,-5.081845,3.439101,2.688789,4.931805,-0.779031,2.244595,4.476291,1.161122,9.990591,-1.949588,-5.900099,9.408085,8.295588,7.928946,-7.937678,-5.163780,7.255356,-9.517754,3.627871,5.456337,6.973468,5.928483,6.172718,3.276999,-4.632548,-6.550157,7.634584,-8.686672,3.499176,-9.344156,-4.085718,-0.311101,7.146407,1.460969,-6.806435,-0.653814,8.105007,-4.920073,-7.835510,5.499122,0.793128,0.975446,-0.771527,9.236555,4.836138,2.154511,-6.011992,7.544468,-1.480255,-5.617292,9.895119,-6.850718,8.666141,-2.335208,5.153686,-4.195097,1.855334,7.222408,-7.599832,1.837768,6.796725,3.880452,-3.403560,1.794106,5.590924,-0.708881,-1.353403,5.862488,3.994967,3.333731,-2.730866,-2.885108,0.583452,8.247880,-9.681596,1.119687,4.632646,-6.132746,-9.218088,3.905219,4.264984,-5.465355,-9.158950,4.620660,9.203563,-3.259060,2.570474,-3.754753,3.762709,-7.122724,-4.876364,7.559069,-8.602056,-6.860877,9.821887,1.151842,1.218420,-8.733050,9.135755,3.902695,-9.700235,-8.628083,-0.849125,-9.241340,-5.558771,-4.577267,-2.515457,1.037868,0.644487,0.179780,5.122288,0.964684,9.274083,-6.435718,-8.658336,7.864472,-4.307468,-9.782440,-6.534919,-3.637584,6.049973,-2.187862,-0.805309,-7.235502,3.008743,-8.460053,-3.362658,0.053826,2.498066,0.650406,4.751012,-7.653582,-1.679085,1.996147,8.147113,-8.666290,-1.305693,-4.982868,-3.786605,-5.551433,4.677973,-4.253787,-2.075122,7.766926,2.917509,6.238285,4.814787,-4.482096,-3.424133,0.668867,7.140144,-8.507396,-8.746943,-3.915509,-6.380615,-4.969116,9.291301,4.821982,-8.494718,0.562729,4.147059,-1.369374,-0.108590,5.326299,-3.873275,-8.632764,-1.317595,1.170633,-0.926788,0.005194,-7.055910,-5.939284,-1.811834,-6.078382,-1.688537,-5.598888,-3.562448,-6.216314,-7.427775,-5.427544,-4.412690,-3.733258,6.945877,5.193226,-1.889899,-9.852089,-7.429071,-6.517551,9.179128,0.758456,8.195997,3.107110,5.976793,-2.908855,7.011752,-2.044566,-0.315041,-4.790992,9.967253,7.786226,-7.223558,-7.607959,-1.356613,1.823223,8.006615,7.390127,2.453449,7.487137,-1.529948,-9.701909,-6.401015,-7.559391,4.261975,-6.979288,-3.230491,-6.907221,-6.293087,-6.644259,-6.171638,-3.375680,-2.204750,-9.068978,-3.468622,-7.316961,6.709088,8.556388,-5.215420,-0.849467,-0.066607,-2.864652,-3.868558,-7.830601,1.746278,9.538047,-6.646864,-7.632281,2.546439,-0.618122,-5.210782,4.187463,4.920578,7.422281,-5.745893,-9.366142,-2.972398,2.806656,3.353271,5.898654,-2.923838,-8.222141,-3.772056,-1.329939,8.406149,-3.767741,5.707012,-7.688871,-3.176485,-4.172275,4.355278,4.478498,1.763841,6.703836,-3.767414,-8.949103,7.518997,-4.541314,9.864458,-3.836851,8.992897,-8.162623,-8.105260,-1.197914,-5.195902,0.307667,0.247361,1.489318,3.405490,5.719663,-5.838616,1.012900,7.758270,5.772954,-2.683585,5.672598,-3.458091,-1.355225,-8.720420,7.314665,-4.644674,7.584939,-7.712705,-1.210130,7.149279,7.742918,3.991899,6.296128,-7.245190,4.199094,-5.565968,7.811345,-7.016425,8.491029,-4.142654,9.014323,1.315791,-5.662588,-9.060008,-8.125280,-5.400966,0.315373,-5.054904,-7.336891,7.117518,1.982197,7.479182,8.871966,-5.924759,-8.559790,1.837273,1.334520,-3.070384,-5.979041,4.222040,-1.346908,7.856816,7.941264,8.404734,-9.396050,-3.387821,-1.479597,-5.554595,2.369234,5.313730,7.614197,-6.683510,1.284799,-7.351383,8.982577,-6.794516,-3.235719,7.782692,9.268774,8.214906,6.435572,5.209254,7.784184,8.784079,3.685932,1.413378,-9.022183,2.890374,-3.434127,4.339167,7.232595,-0.947053,9.731575,-2.254065,-0.799126,9.210825,5.680518,8.520075,-1.692792,5.945260,4.391570,1.408540,-8.584857,-8.772378,-2.665528,-7.514033,4.352648,3.337760,-0.011837,-2.391960,-4.366675,2.301555,-5.347041,-0.914677,2.651942,-5.585572,-3.581275,-5.046624,2.348359,-3.080618,2.142273,7.235289,1.691736,9.938319,-5.342682,-4.970247,1.387552,-9.558410,-4.133119,0.117925,7.182652,0.008677,6.985036,-4.014638,-2.498673,-0.667289,-3.994569,-6.545011,9.909770,0.175441,5.632576,-1.785061,1.401652,9.937897,0.219305,-4.019886,-3.437017,0.859408,3.530376,-0.451162,-2.519716,9.993124,4.732488,-5.648580,-9.696785,-4.446714,2.791834,-3.723363,-2.845973,-7.282615,-7.529111,-9.786598,-2.277554,-6.704958,6.206385,3.504893,-3.139973,-3.875163,1.552524,-8.008463,1.163795,8.714486,1.817468,3.590544,8.021075,2.176610,-4.593628,5.361128,6.736566,4.522639,-4.888641,-5.709594,1.000091,-0.844625,5.594500,-4.534250,-5.082791,0.096589,-7.158881,4.128276,8.758965,7.580151,-4.038610,-1.421310,7.300069,-9.280651,9.365390,-0.080030,-4.252917,9.614486,8.121658,-0.756251,0.707138,5.588893,-3.398600,-0.473287,9.148968,-5.947422,-8.701386,-4.064757,-0.905798,5.475906,8.247033,-6.435639,3.620951], dtype = "float32")#candidate|5643|(616,)|const|float32
call_5642 = relay.TupleGetItem(func_5551_call(relay.reshape(const_5643.astype('float32'), [616,])), 2)
call_5644 = relay.TupleGetItem(func_5554_call(relay.reshape(const_5643.astype('float32'), [616,])), 2)
output = relay.Tuple([uop_5640,call_5642,const_5643,])
output2 = relay.Tuple([uop_5640,call_5644,const_5643,])
func_5646 = relay.Function([var_5639,], output)
mod['func_5646'] = func_5646
mod = relay.transform.InferType()(mod)
mutated_mod['func_5646'] = func_5646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5647 = relay.var("var_5647", dtype = "float64", shape = (2, 9, 10))#candidate|5647|(2, 9, 10)|var|float64
func_5646_call = mutated_mod.get_global_var('func_5646')
call_5648 = func_5646_call(var_5647)
output = call_5648
func_5649 = relay.Function([var_5647], output)
mutated_mod['func_5649'] = func_5649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5484_call = mod.get_global_var('func_5484')
func_5485_call = mutated_mod.get_global_var('func_5485')
call_5687 = relay.TupleGetItem(func_5484_call(), 4)
call_5688 = relay.TupleGetItem(func_5485_call(), 4)
func_222_call = mod.get_global_var('func_222')
func_226_call = mutated_mod.get_global_var('func_226')
var_5704 = relay.var("var_5704", dtype = "float64", shape = (64,))#candidate|5704|(64,)|var|float64
call_5703 = relay.TupleGetItem(func_222_call(relay.reshape(var_5704.astype('float64'), [8, 4, 2]), relay.reshape(var_5704.astype('float64'), [8, 4, 2]), ), 2)
call_5705 = relay.TupleGetItem(func_226_call(relay.reshape(var_5704.astype('float64'), [8, 4, 2]), relay.reshape(var_5704.astype('float64'), [8, 4, 2]), ), 2)
output = relay.Tuple([call_5687,call_5703,var_5704,])
output2 = relay.Tuple([call_5688,call_5705,var_5704,])
func_5710 = relay.Function([var_5704,], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
var_5711 = relay.var("var_5711", dtype = "float64", shape = (64,))#candidate|5711|(64,)|var|float64
output = func_5710(var_5711)
func_5712 = relay.Function([var_5711], output)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5740 = relay.var("var_5740", dtype = "uint32", shape = (14, 14, 12))#candidate|5740|(14, 14, 12)|var|uint32
const_5741 = relay.const([[[-7,-2,-10,-7,3,10,4,4,-3,-1,-9,-4],[8,4,8,-8,5,-10,-8,9,-8,9,-2,4],[-1,-2,9,-9,-1,-1,-7,7,-8,6,-1,-7],[4,5,-8,9,-3,-2,-8,-1,6,-9,-10,4],[3,-4,-2,7,9,-10,-10,8,2,6,-1,-1],[9,-9,-8,9,-2,8,-5,8,5,-1,-8,8],[9,2,-1,8,-4,-8,-1,-4,1,-4,6,-10],[-1,6,2,-3,-10,-10,7,10,6,-4,7,9],[-1,-6,-7,8,9,-9,-9,-1,-7,-9,-10,8],[9,4,-1,5,4,-8,10,-8,1,-10,-2,-9],[-2,5,-9,10,4,-5,-7,-8,-4,3,-2,2],[10,4,-3,-3,3,-8,9,-2,4,-10,2,1],[4,-1,-6,-10,7,10,-6,4,1,4,10,4],[7,-4,-2,6,-8,10,2,-2,-3,6,5,3]],[[-1,-5,4,4,3,-2,-2,1,-5,-6,3,3],[-8,7,10,9,-6,-2,-4,-4,6,-4,-4,10],[9,6,2,10,-10,-3,-9,-2,9,-7,-2,-1],[-9,-7,-1,-4,-1,-4,10,4,3,10,2,-6],[6,3,6,-6,-9,10,2,-4,-2,7,-4,-4],[8,8,-8,10,-10,3,7,3,-4,9,4,-8],[-2,10,6,5,-10,4,9,-3,9,7,7,3],[10,9,3,-4,-4,5,10,4,2,7,3,10],[-6,-7,6,4,2,-2,1,-2,-10,-5,-6,10],[8,-9,9,-5,8,-8,4,2,7,10,10,5],[8,10,-8,2,-10,-8,-4,-6,7,-9,-7,-4],[5,-4,-6,6,-8,8,9,-3,4,-9,-6,-1],[10,3,-8,-6,1,-9,9,-10,10,-5,1,9],[9,2,-5,-8,2,6,6,-5,10,-5,7,-7]],[[5,-9,10,-2,8,-4,-6,1,2,9,7,-7],[10,-7,-9,-6,-8,1,-5,-7,-8,7,3,-3],[3,-7,8,7,-7,-4,1,-1,7,7,6,4],[-6,7,6,6,-3,-10,-8,10,-3,10,-6,-1],[4,6,1,-1,10,-6,-9,8,7,5,-8,1],[-1,5,3,-2,-3,6,-10,-3,-6,-9,-5,-8],[-8,8,-10,-5,-1,8,-6,10,1,-7,2,1],[1,4,8,8,7,-10,-6,-5,7,2,6,-5],[9,-7,-2,-10,10,-8,-6,-4,4,-9,9,9],[9,-9,5,-3,-6,5,3,-10,9,-1,4,-9],[9,9,4,-4,-9,-10,-9,-9,7,2,1,-1],[7,9,-7,-10,-8,4,4,7,-5,10,-3,-8],[6,8,-9,2,-3,9,-1,6,-5,1,2,-7],[-8,8,7,-10,5,2,9,2,-5,3,10,-5]],[[-2,8,-6,-9,-1,6,5,1,-7,6,7,7],[-8,7,-2,5,-1,-7,8,-3,-5,7,8,1],[-2,-1,-4,-2,1,-10,-2,-4,-10,9,-9,6],[-3,5,2,-5,3,-5,6,-9,7,-7,-8,1],[2,-5,4,4,-8,-9,4,-7,1,4,-9,2],[4,-6,-10,10,9,-2,9,-10,-6,-7,2,9],[-8,-1,-8,5,-4,-4,-8,-6,-2,-9,6,-7],[-6,-3,10,4,-7,-7,9,8,-2,8,9,-8],[4,-9,5,-3,10,-1,-7,8,-1,-10,-6,-6],[1,2,-9,10,-8,-4,-6,-7,-2,-9,-5,-5],[-4,9,-3,10,-10,-5,-3,-2,7,7,4,2],[-10,7,1,-4,-4,5,-7,-1,-9,5,3,-4],[-5,4,3,-5,8,-10,3,4,-6,-5,5,-1],[-4,8,-6,-6,1,2,7,-9,-9,-5,-5,-10]],[[-1,-6,-4,-3,-5,-6,1,-2,3,8,-1,-6],[-10,-5,-2,-5,-3,-1,8,-3,-3,4,10,-10],[-1,-4,7,-5,1,-9,-6,-7,-7,-3,-2,-8],[5,1,-9,10,-9,-2,-6,-3,-6,1,-1,10],[9,-1,-2,-8,-2,-4,-1,-8,-1,-9,9,4],[-8,-9,5,5,3,-5,-6,1,3,8,2,-4],[-10,1,-5,-5,2,-10,-3,3,2,10,2,-7],[-9,-8,-4,-5,3,2,-3,-3,-10,3,9,-9],[5,-10,-3,1,3,-4,-2,-1,-6,-5,3,5],[-2,-7,6,1,-7,10,9,3,-3,-10,7,9],[8,4,3,-5,8,5,9,-5,8,-6,9,10],[-8,4,-6,1,-9,5,4,7,3,-8,-10,7],[-10,-5,-6,-10,9,-10,-9,9,7,1,6,-5],[-2,1,8,9,5,-9,-1,5,-3,5,7,-9]],[[1,-8,-8,8,-8,1,9,5,4,-2,5,6],[-4,9,8,8,7,-8,8,4,-5,1,-5,-7],[-2,-7,-8,-4,-6,6,10,3,9,-2,-7,1],[3,5,10,-10,-3,-9,10,5,-4,-9,-6,-2],[6,-2,-2,7,6,-5,6,-7,10,1,-9,5],[-7,8,1,-8,3,9,2,-3,10,5,1,4],[-9,-3,-1,-2,5,2,9,2,-10,1,9,-10],[-10,-2,6,6,2,4,8,-2,5,8,3,-9],[-2,-5,-2,9,-10,7,-8,-3,-10,4,2,-2],[9,4,1,5,2,4,6,10,-6,-4,-9,5],[-6,9,2,-7,-3,-2,-4,8,10,-4,7,2],[10,-8,-5,-10,1,-10,-3,5,-10,2,6,10],[4,-2,-7,-4,2,-7,4,-9,9,9,8,9],[1,-2,1,-2,-9,6,1,-4,-4,2,-10,-5]],[[2,-2,6,-10,5,5,-7,3,-3,1,-10,9],[-6,2,-1,5,-10,6,10,-6,-10,-3,10,-3],[6,9,9,-2,8,-10,-2,4,2,10,8,9],[7,-6,-1,-9,3,4,7,-6,1,-4,1,-7],[-10,6,-2,-7,-10,-7,-4,-7,6,10,7,-6],[1,1,2,6,-4,-1,1,9,-2,2,3,-4],[3,10,-1,-10,10,8,-1,3,9,6,-3,3],[9,3,7,1,-5,-1,9,1,-3,1,-3,9],[-10,2,-10,-1,2,-1,3,-10,2,5,1,3],[4,7,-10,-9,-3,-8,-8,2,-4,9,-4,8],[-10,-9,10,4,8,1,-2,-10,1,-10,8,-9],[6,2,8,-9,-2,9,10,5,-9,-8,7,7],[-8,7,2,8,5,-1,-9,-3,-9,-4,10,-9],[-6,-1,4,10,-9,-8,2,-9,4,-4,-10,-6]],[[1,-10,-1,-9,3,-9,2,-9,-6,-9,2,7],[-10,1,-8,-9,-6,10,-7,4,3,-8,-5,-3],[3,1,-4,1,1,-3,8,-10,2,-4,10,-10],[-5,7,3,-3,4,2,-4,1,5,-6,10,1],[-7,3,-5,2,9,-10,-9,-1,-6,-2,-7,10],[1,-7,4,-4,-3,10,-8,-7,-2,-1,9,6],[6,10,5,7,5,-8,4,-2,7,-6,-4,1],[-10,-9,-4,-4,6,-4,-3,-6,7,-9,-6,-7],[-5,-7,5,-7,10,-4,2,7,-2,-9,-3,5],[-1,-10,-7,9,9,-5,5,1,-9,-4,-3,-8],[-1,3,-6,-4,3,5,1,6,-3,8,2,-5],[-4,-9,-9,5,-8,6,7,2,-5,1,-4,-8],[7,-4,3,7,10,6,7,-1,-10,-10,8,6],[-2,9,-8,-10,3,4,-3,5,9,3,5,-4]],[[3,-3,-7,-6,7,-4,4,-10,7,-3,6,-6],[-3,2,4,-4,-9,2,5,-6,5,9,-3,-6],[-4,-3,-1,5,9,-2,3,-2,1,10,-3,-10],[6,10,10,-4,-7,3,7,1,-5,-8,9,1],[-3,-7,9,5,-9,-7,-10,-3,9,6,6,-9],[-2,-1,9,10,5,8,-7,1,9,4,10,-8],[-7,-4,-4,6,-2,-5,-1,2,-4,-9,-5,-6],[-8,-6,10,-7,8,2,4,8,-4,-6,-9,10],[1,4,-10,2,1,-8,10,1,-9,-2,10,-1],[-4,-1,7,8,-1,-4,3,10,-2,6,-8,-3],[-10,1,6,6,1,7,-9,6,7,10,5,-3],[-2,2,8,6,2,-1,9,10,-7,8,2,-5],[-5,9,8,-7,-5,-8,-4,-2,-2,-5,-10,-3],[-4,2,-6,-6,-3,8,-1,10,6,8,4,6]],[[-10,-9,10,7,2,1,-6,6,4,-9,-1,-10],[10,-8,-5,-10,-9,-7,-10,2,-2,1,-10,7],[3,10,8,-2,5,3,-8,4,4,6,-6,8],[-1,-7,-6,-8,2,-4,5,9,7,1,4,5],[-7,-4,1,-2,-10,7,3,6,1,-8,-5,-8],[8,10,-7,2,7,-8,7,-3,8,7,-3,-1],[-1,3,-5,-8,2,-6,4,4,5,10,-1,1],[10,5,10,-10,-4,-7,-5,1,-5,-10,-7,10],[6,6,-4,-9,6,10,9,-7,4,-1,10,-8],[-10,-6,3,-1,-8,6,-5,-6,10,-6,-7,-3],[6,-10,7,3,-6,-6,-9,-8,7,10,-3,-2],[-4,4,-1,10,3,6,-10,9,10,-7,-4,5],[-2,-5,3,8,8,-9,-10,-8,9,-5,3,-6],[-9,1,9,7,2,4,9,-3,5,6,10,-10]],[[-8,-9,7,3,8,9,3,-9,-8,-2,-7,6],[4,-7,7,-5,-4,-5,10,7,3,7,4,1],[-9,10,8,7,-9,-8,4,1,-10,9,4,9],[-3,-3,2,-2,-7,-8,10,8,-10,6,-2,1],[3,1,7,-3,10,-1,2,-5,8,3,-7,-9],[-9,-2,-4,-10,-7,2,-3,-6,3,-7,-3,-3],[6,-10,8,1,-6,6,-9,7,-9,10,6,-7],[3,3,4,6,-1,-4,-8,6,-9,-6,-1,2],[3,-4,-6,-9,2,-7,-7,8,-1,-1,-7,-5],[-1,3,-7,2,7,-1,4,5,4,-4,-5,1],[5,5,8,8,-2,-1,-8,-10,-8,9,3,-2],[6,-9,10,-6,-1,9,-10,3,8,4,-9,-2],[-5,3,-4,6,10,-10,-5,-5,7,10,-9,-3],[6,-4,2,-4,-8,7,-1,-4,8,9,-10,4]],[[8,-9,6,7,-9,-9,-8,6,-9,8,7,10],[5,1,-6,5,8,5,5,-7,5,-3,-8,-9],[-3,-6,-10,-6,-8,4,-1,-9,2,4,-6,-2],[-9,-5,6,-4,2,9,-8,1,-3,9,-4,4],[2,5,-3,8,4,8,7,10,4,5,8,10],[-9,-7,7,8,1,7,2,5,9,7,5,-9],[-9,-5,-8,-8,5,-1,7,4,-3,-4,-8,-3],[2,5,9,10,-8,-5,-1,-5,-10,-1,-6,-7],[-7,5,1,2,-6,-3,-1,-3,10,-5,-4,-7],[9,-1,4,3,8,7,-4,3,8,-6,-2,7],[-8,-3,5,7,10,8,-6,5,6,3,3,-1],[3,9,8,-7,10,-1,2,10,5,-5,-6,-5],[6,-6,4,-9,5,-2,4,1,1,-9,-9,-2],[7,-5,10,9,6,5,1,6,-2,10,10,-9]],[[3,-4,9,9,5,-10,4,3,5,1,-1,-3],[-7,-10,6,10,1,4,-1,-7,4,1,9,9],[1,-1,7,7,8,-3,-9,6,6,-10,-10,1],[-4,-4,-8,8,-5,6,-2,-5,10,-7,-10,7],[-2,3,3,7,-8,-2,-6,-10,9,2,-8,-4],[-7,-9,5,-3,2,8,-9,5,-6,6,1,-2],[3,-4,2,-1,-10,-4,-6,-1,-2,-6,-1,-8],[1,-8,1,5,-5,5,6,6,8,-2,-8,5],[-9,9,-3,9,-1,8,-1,6,-1,-5,10,-4],[3,1,8,-1,6,-9,7,4,-8,-9,-7,-5],[9,5,1,-6,-5,6,-4,2,-7,10,10,-1],[8,7,9,4,-4,-7,-10,9,-1,-1,-4,-4],[6,4,-10,6,6,-5,-7,-3,10,6,-5,7],[2,3,-5,-8,3,-6,-6,10,8,-7,4,6]],[[1,4,-6,2,-3,5,-3,8,4,6,-8,2],[-10,1,-2,-8,8,9,-4,-4,-7,6,4,4],[8,10,6,2,-2,2,1,-6,-3,-2,7,6],[7,-2,6,8,7,9,-9,-1,-3,6,-4,-2],[-7,-6,10,-8,5,-7,7,-4,3,-10,-2,7],[6,1,6,-1,-8,9,10,-5,7,-8,9,-1],[-3,9,3,-5,9,-3,9,-10,-10,7,6,8],[5,-2,-8,-9,3,8,-1,-7,9,7,-1,-5],[8,2,3,1,-6,2,-5,4,-8,4,-5,2],[-10,-4,-8,3,-10,-3,-6,2,-5,-5,7,8],[2,-7,-4,5,-7,-6,-7,-4,5,1,-10,-3],[-9,-7,10,2,-9,10,-7,7,1,1,-4,6],[-2,3,2,-9,6,7,-9,-7,9,2,-4,2],[-6,-5,9,2,-8,3,2,-1,6,-6,9,3]]], dtype = "uint32")#candidate|5741|(14, 14, 12)|const|uint32
bop_5742 = relay.subtract(var_5740.astype('uint32'), relay.reshape(const_5741.astype('uint32'), relay.shape_of(var_5740))) # shape=(14, 14, 12)
output = relay.Tuple([bop_5742,])
output2 = relay.Tuple([bop_5742,])
func_5745 = relay.Function([var_5740,], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
var_5746 = relay.var("var_5746", dtype = "uint32", shape = (14, 14, 12))#candidate|5746|(14, 14, 12)|var|uint32
output = func_5745(var_5746)
func_5747 = relay.Function([var_5746], output)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5778 = relay.var("var_5778", dtype = "bool", shape = (6, 3, 4))#candidate|5778|(6, 3, 4)|var|bool
var_5779 = relay.var("var_5779", dtype = "bool", shape = (6, 3, 4))#candidate|5779|(6, 3, 4)|var|bool
bop_5780 = relay.logical_or(var_5778.astype('bool'), relay.reshape(var_5779.astype('bool'), relay.shape_of(var_5778))) # shape=(6, 3, 4)
bop_5787 = relay.power(var_5779.astype('float64'), relay.reshape(bop_5780.astype('float64'), relay.shape_of(var_5779))) # shape=(6, 3, 4)
output = bop_5787
output2 = bop_5787
func_5793 = relay.Function([var_5778,var_5779,], output)
mod['func_5793'] = func_5793
mod = relay.transform.InferType()(mod)
var_5794 = relay.var("var_5794", dtype = "bool", shape = (6, 3, 4))#candidate|5794|(6, 3, 4)|var|bool
var_5795 = relay.var("var_5795", dtype = "bool", shape = (6, 3, 4))#candidate|5795|(6, 3, 4)|var|bool
output = func_5793(var_5794,var_5795,)
func_5796 = relay.Function([var_5794,var_5795,], output)
mutated_mod['func_5796'] = func_5796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mod.get_global_var('func_4706')
func_4708_call = mutated_mod.get_global_var('func_4708')
call_5835 = relay.TupleGetItem(func_4706_call(), 0)
call_5836 = relay.TupleGetItem(func_4708_call(), 0)
func_2968_call = mod.get_global_var('func_2968')
func_2971_call = mutated_mod.get_global_var('func_2971')
call_5840 = relay.TupleGetItem(func_2968_call(relay.reshape(call_5835.astype('float32'), [12, 5, 3])), 1)
call_5841 = relay.TupleGetItem(func_2971_call(relay.reshape(call_5835.astype('float32'), [12, 5, 3])), 1)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_5845 = relay.TupleGetItem(func_2833_call(), 0)
call_5846 = relay.TupleGetItem(func_2835_call(), 0)
output = relay.Tuple([call_5835,call_5840,call_5845,])
output2 = relay.Tuple([call_5836,call_5841,call_5846,])
func_5870 = relay.Function([], output)
mod['func_5870'] = func_5870
mod = relay.transform.InferType()(mod)
mutated_mod['func_5870'] = func_5870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5870_call = mutated_mod.get_global_var('func_5870')
call_5871 = func_5870_call()
output = call_5871
func_5872 = relay.Function([], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4856_call = mod.get_global_var('func_4856')
func_4857_call = mutated_mod.get_global_var('func_4857')
call_5875 = relay.TupleGetItem(func_4856_call(), 1)
call_5876 = relay.TupleGetItem(func_4857_call(), 1)
func_5551_call = mod.get_global_var('func_5551')
func_5554_call = mutated_mod.get_global_var('func_5554')
var_5881 = relay.var("var_5881", dtype = "float32", shape = (14, 44))#candidate|5881|(14, 44)|var|float32
call_5880 = relay.TupleGetItem(func_5551_call(relay.reshape(var_5881.astype('float32'), [616,])), 0)
call_5882 = relay.TupleGetItem(func_5554_call(relay.reshape(var_5881.astype('float32'), [616,])), 0)
func_3626_call = mod.get_global_var('func_3626')
func_3630_call = mutated_mod.get_global_var('func_3630')
var_5889 = relay.var("var_5889", dtype = "float64", shape = (26,))#candidate|5889|(26,)|var|float64
const_5890 = relay.const([7.544344,-5.752655,-1.087903,0.904073,-2.251105,9.008910,-9.113702,-9.245689,-1.282344,-5.413875,-6.401970,-2.049183,2.801530,-6.791187,4.595565,8.359579,-0.076984,-9.291707,-9.337055,-5.075337,8.638407,1.354920,-8.596808,-5.645069,-7.668789,-1.356494,6.730594,1.424809,1.856873,4.861973,5.176582,3.092012,-3.909448,-3.531400,6.592457,7.199277,-4.801597,-1.132928,1.813620,-5.315646,1.670945,-8.817831,6.741049,9.201889,9.786847,-7.831902,7.531861,-9.050983,5.419075,3.326590,9.744070,4.565889,6.824364,-5.918305,-8.760485,-2.644099,-9.434800,5.984873,2.746520,-5.067793,8.714975,7.159230,-9.926040,1.336738,-9.899484,-9.515115,7.822010,-0.694747,9.303907,4.857405,3.289991,4.908595,-1.081356,9.715967,3.241910,8.658803,-9.287767,-6.344416,-0.243911,7.602308,-9.111869,9.008550,8.305341,-7.306841,-0.090974,8.083723,-9.594597,8.186299,9.381973,-3.391110,-1.182644,2.249956,-3.199405,4.449086,2.141824,7.957163,-2.213991,-7.514023,-0.075756,-4.781719,-6.144413,-6.104630,-1.180077,-4.212103,7.461366,4.913178,-5.437180,-6.017782,-2.700709,2.673569,-7.216734,2.769812,7.686891,1.142966,-8.087399,6.336891,9.258507,1.385322,8.888015,3.068087,-3.433865,2.240699,3.875908,5.801346,0.617431,-2.400537,-4.128238,2.980322,3.881980,2.884275,-1.340788,-4.311308,7.593369,-1.106710,5.094300,7.236340,-4.445362,-9.831366,-9.161681,6.461685,7.032907,-1.383806,0.667646,4.310037,-5.310625,-0.088282,4.071777,-0.932778,7.382193,-1.531116,-0.335734,-0.669031,-5.921706,-8.934439,2.939937,-6.651358,9.733489,-6.208509,-8.818201,2.697786,-7.995592,-4.945166,2.094065,-9.273682,4.652016,8.688773,-7.095795,-2.882180,9.630669,-0.772824,-3.811597,0.321242,1.716684,-1.336088,8.821167,-1.634691,2.462511,-2.625830,2.074344,7.786111,8.407315,-5.779364,0.128837,-9.871966,6.749189,6.187302,4.532460,-8.228979,-4.999975,5.437330,-1.869643,4.064192,-9.659216,-6.098095,0.533824,-8.232839,9.633621,-4.759498,2.851177,9.295490,9.368452,-7.839160,4.746575,2.586211,8.867741,1.417884,-0.677119,9.928330,-9.628626,-9.556941,-6.413086,-6.227092,6.172938,-7.837155,2.551380,-2.175510,-5.541894,-3.433509,4.345420,2.136796,-1.961988,-0.704414,5.295103,6.425022,-3.440048,4.125328,-9.191345,-6.517163,3.107144,-8.855801,-1.770397,6.224168,3.654340,-0.625301,-4.637999,6.939413,-1.020310,5.164120,2.997214,-2.894481,9.031025,-7.642305,3.873940,4.625803,0.708129,-7.534866,-4.412842,-3.088818,5.127472,-1.125965,-5.172566,-5.250506,-3.689955,4.361219,-8.056152,7.239103,7.059354,3.192445,-2.842059,5.980210,-5.449853,1.292766,-2.427012,-6.060219,-3.524225,4.433259,-2.296019,0.673015,4.473198,-7.992009,-8.687707,4.063344,-8.967724,4.651232,-9.797310,-0.257038,-4.216491,4.630984,-7.057670,-5.430588,8.830445,3.662171,6.285879,-2.628040,2.605120,-0.609805,-7.886676,-6.123848,-6.735853,2.253806,-1.138517,8.180813,4.521907,9.305637,-4.470014,-6.164521,9.537533,5.363598,-6.465282,-4.987770,-1.145713,-3.212809,-2.255742,3.525467,-9.564962,5.163524,5.890832,7.563165,-2.879995,-9.435726,-0.932795,-7.969337,-1.097752,-1.972345,9.448809,0.464854,4.882985,-2.949368,-6.780529,-9.717944,-3.262350,8.607841,-9.510948,-0.327179,-3.077329,9.513456,8.256223,-8.175262,4.550486,-2.994546,5.401460,-5.704287,7.504341,0.624660,5.038362,-1.016509,4.348616,1.848459], dtype = "float64")#candidate|5890|(338,)|const|float64
call_5888 = relay.TupleGetItem(func_3626_call(relay.reshape(var_5889.astype('float64'), [13, 1, 2]), relay.reshape(const_5890.astype('float64'), [13, 13, 2]), ), 1)
call_5891 = relay.TupleGetItem(func_3630_call(relay.reshape(var_5889.astype('float64'), [13, 1, 2]), relay.reshape(const_5890.astype('float64'), [13, 13, 2]), ), 1)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
const_5912 = relay.const([0.607368,-8.691238,-5.737200,-0.803888,-8.037811,-0.499990,-9.353318,8.007717,-4.082046,-9.975706,-7.774284,2.136105,-6.239551,2.130085,6.392551,4.251557,1.037930,3.632603,-1.255811,-8.000174,-5.022127,-7.005871,2.038990,-5.910229,9.090923,-9.685860,6.345077,4.785339,-2.802123,0.622000,-8.675104,-1.263158,5.236989,6.457676,-8.013134,-4.830629,-1.044281,8.577974,-4.798307,-0.631617,-3.147952,8.973270,-8.059475,-4.118212,-9.486577,-3.285649,-0.406372,-1.167099,-3.561450,9.210657,-9.313535,0.049198,-8.306683,-6.667214,-0.874622,-9.128245,7.638332,6.061742,-4.394311,-7.971267,3.517107,6.283597,-1.182264,0.451714,-5.380752,1.659558,5.726481,2.583851,7.517538,-6.369929,-0.395621,7.073729,4.099984,6.269795,-7.498282,-0.554644,8.223314,4.476393,6.792872,-0.861147,0.555573,-2.199286,1.604186,-0.767513,-1.900329,-9.341960,2.160107,-2.779833,-5.233454,9.740236,-2.572187,2.835760,3.028556,8.713620,7.008416,-0.903531,0.280214,3.334679,0.316566,1.438993,2.723163,-8.510237,7.254492,5.131583,5.689706,-7.475907,-7.167283,0.061705,-5.061851,-5.036190,-5.198918,-3.998894,-3.210914,-1.299020,6.073033,5.169883,-8.879538,-4.380031,-4.406945,8.682535,-9.717263,1.683657,5.591919,-0.190092,2.446610,-6.495747,-2.472786,8.036991,-9.652539,-1.531796,-5.359622,-7.802272,1.863650,-1.036825,-4.066689,6.895325,-6.334247,2.105658,3.299732,3.876075,2.126014,4.581569,4.454717,-8.094870,-4.881321,9.787059,-9.477515,2.406278,-8.820591,0.389676,-2.130814,5.611971,-9.569130,-9.398910,7.848722,-2.446488,0.673759,-9.935183,4.555568,8.525255,7.945052,-0.231683,-8.746112,0.933770,7.172689,-9.008517,-0.095948,-7.294667,-8.567765,-2.475808,5.427379,-7.558915,-5.971877,8.350402,4.007886,-8.705648,3.158302,-8.264023,-5.759943,9.255135,6.887077,4.289300,9.503570,-5.043787,6.281042,0.984583,1.866969,5.571822,-7.449118,3.564251,1.708369,-6.779706,-4.971014,8.579205,5.007044,5.595557,-3.694067,-2.189973,-6.190201,7.711024,7.001595,-4.995566,1.465544,5.288129,-9.206279,6.840415,-9.119784,8.678241,5.332148,5.925672,3.427376,1.343872,-3.936644,8.008876,-6.260283,-4.892938,-2.245183,-2.522651,-2.364455,6.014861,8.313149,7.651463,2.435685,-9.542408,6.357270,2.702159,-7.828746,-0.368784,-5.687431,-2.967821,-9.339054,-8.672836,2.569197,-6.533694,-5.630632,1.196000,7.836019,2.356444,7.536986,9.101148,-5.377383,2.979514,2.531382,3.717602,6.706207,-7.937662,-4.241993,-6.699006,4.517467,7.981250,0.552023,1.033314,4.937348,3.954297,4.703644,2.111981,0.631944,-3.547188,-5.680680,-2.956847,4.597337,-7.447192,0.766354,-0.117359,9.082191,7.190924,-3.871446,4.695602,4.657022,-6.922289,7.554538,-7.884257,-0.702357,8.380123,-3.629411,-3.913263,-4.130573,3.767113,-2.550362,2.975907,-6.523358,-7.549620,3.674460,-4.956080,-7.896285,1.477227,6.154482,-3.263430,8.418102,-2.302054,3.525405,7.536241,0.937419,2.794502,-8.197230,-5.911280,2.948689,5.444233,-9.619314,-6.300574,-0.065488,5.375578,3.307777,4.100216,7.121313,9.763601,5.180633,0.784794,5.092485,-3.325892,7.935471,-8.352240,3.377535,5.174930,-8.279982,-9.508759,-5.740667,-3.496417,0.882459,-3.481241,4.131972,1.415489,-8.632807,-1.961570,7.828775,-5.423635,6.576027,-4.976775,-0.485254,-0.234306,0.198766,-9.072426,-8.982054,5.013387,-4.223417,2.794120,6.369622,-7.268122,0.990140,-4.058718,3.524334,1.627090,5.740332,1.566878,6.914593,-2.329855,-2.931747,-5.989958,6.616952,-7.441401,3.083780,-2.234968,-9.656162,9.456501,1.084135,3.134393,-5.243567,5.456326,-7.945826,9.971119,-8.158325,-5.629672,-4.752992,-3.316654,-5.791236,-9.654290,-8.653652,5.735993,3.275289,-6.596596,-1.831249,-6.379028,-2.087301,-8.115851,-1.922863,-0.620713,-9.251290,-6.678506,-8.641602,-2.290311,4.543399,-4.409051,3.427097,9.206331,-5.618474,2.178867,4.066935,4.554106,2.760802,-1.591305,-0.787030,0.702990,7.480897,2.269001,-6.395833,-4.469883,-8.265339,7.052795,-8.445181,4.186476,-4.447371,4.547208,-9.725620,8.169272,8.457343,8.564950,-3.497663,-0.950487,-1.803518,8.947299,7.442732,2.887464,4.398195,-6.390294,7.958649,-5.290642,-5.988744,7.955327,8.370963,0.572193,-0.578738,-4.517229,8.801331,-0.234912,-8.404115,-6.687094,0.677094,-7.778989,-4.325141,2.796425,-3.375187,7.321366,6.683750,7.508780,2.236650,2.172760,0.400912,-1.383695,-9.031783,9.228377,3.513875,2.296677,0.744512,2.259141,-3.428323,1.790519,-4.685647,1.000227,4.635973,-1.754087,7.749751,-8.070785,9.002783,9.657184,7.699467,8.588952,-4.577373,6.190151,-8.889133,8.805239,3.559083,5.324971,0.868445,-1.529612,3.087821,1.253749,-9.536338,5.559856,3.872523,-8.343220,8.639299,3.201093,-6.351039,5.156879,6.724837,0.579818,1.551690,-6.490076,3.120447,7.980669], dtype = "float32")#candidate|5912|(480,)|const|float32
call_5911 = func_3505_call(relay.reshape(const_5912.astype('float32'), [8, 12, 5]))
call_5913 = func_3505_call(relay.reshape(const_5912.astype('float32'), [8, 12, 5]))
output = relay.Tuple([call_5875,call_5880,var_5881,call_5888,var_5889,const_5890,call_5911,const_5912,])
output2 = relay.Tuple([call_5876,call_5882,var_5881,call_5891,var_5889,const_5890,call_5913,const_5912,])
func_5925 = relay.Function([var_5881,var_5889,], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
var_5926 = relay.var("var_5926", dtype = "float32", shape = (14, 44))#candidate|5926|(14, 44)|var|float32
var_5927 = relay.var("var_5927", dtype = "float64", shape = (26,))#candidate|5927|(26,)|var|float64
output = func_5925(var_5926,var_5927,)
func_5928 = relay.Function([var_5926,var_5927,], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6034 = relay.var("var_6034", dtype = "bool", shape = (10, 10, 9))#candidate|6034|(10, 10, 9)|var|bool
const_6035 = relay.const([[[False,True,True,True,False,False,False,True,True],[True,False,False,True,True,False,True,False,False],[True,False,False,True,True,True,False,False,True],[True,True,True,True,True,True,False,False,True],[True,False,False,False,False,False,False,True,True],[False,False,False,False,False,False,False,True,True],[True,True,False,False,False,True,False,False,False],[True,False,False,False,True,False,False,True,False],[True,True,True,False,True,False,False,True,False],[True,True,True,False,True,False,False,True,False]],[[True,True,False,True,False,True,True,False,False],[False,True,False,False,False,True,False,False,True],[False,True,False,False,False,False,True,False,True],[True,True,False,True,False,False,False,False,False],[True,True,True,True,True,False,True,False,False],[True,False,False,False,False,True,False,False,True],[False,True,False,True,False,True,False,True,True],[False,True,True,False,False,True,True,False,False],[True,True,False,True,False,False,False,False,False],[True,True,False,True,True,True,True,True,True]],[[False,True,True,True,True,False,True,True,True],[False,True,True,False,False,False,True,False,True],[True,False,True,False,True,False,False,False,False],[False,True,True,True,True,False,False,True,True],[True,False,False,False,False,True,True,False,False],[True,True,False,False,True,False,False,True,True],[False,True,False,False,True,True,True,True,True],[True,True,False,False,False,False,True,False,False],[False,True,False,False,True,False,False,True,True],[False,True,False,False,False,True,False,False,True]],[[True,False,False,False,True,True,False,False,False],[False,True,False,False,True,False,True,False,True],[True,False,False,False,True,False,False,True,False],[True,True,False,False,False,False,False,True,False],[False,True,False,False,False,True,False,False,False],[False,True,False,True,False,True,False,False,False],[False,False,True,False,False,False,False,False,False],[True,True,True,True,True,True,True,True,True],[False,True,True,False,False,True,True,True,True],[False,True,False,False,True,False,True,True,False]],[[True,False,True,True,True,False,True,False,True],[False,True,False,True,True,True,False,True,True],[True,False,True,True,False,False,True,False,False],[True,True,True,False,False,True,True,False,False],[True,True,False,False,True,True,False,False,False],[True,False,False,True,False,False,False,True,True],[False,False,True,False,True,True,False,True,True],[True,False,True,False,True,False,False,True,True],[False,True,True,False,True,False,False,False,False],[True,False,True,False,False,True,True,True,False]],[[False,True,False,False,False,False,True,False,False],[False,True,True,True,True,True,True,True,False],[True,False,False,True,True,False,False,True,False],[True,False,True,True,True,False,True,True,True],[False,False,True,False,False,False,True,False,True],[False,True,True,False,False,True,False,True,False],[False,True,True,True,False,True,False,True,False],[True,True,True,False,True,False,True,True,False],[False,False,False,True,True,True,False,True,True],[True,False,False,True,False,True,False,True,True]],[[False,False,True,False,True,False,False,True,True],[False,False,False,False,False,False,True,False,True],[False,False,True,False,False,True,False,True,True],[False,False,True,True,False,True,False,False,False],[False,False,True,True,False,True,True,True,False],[False,False,False,True,False,False,False,False,False],[True,True,False,True,True,False,False,False,False],[True,True,False,True,True,True,False,True,True],[True,False,False,True,False,False,True,False,True],[False,False,True,False,False,False,False,True,True]],[[False,True,False,False,False,True,True,True,False],[False,True,True,True,False,False,False,False,False],[False,True,False,True,True,True,True,False,True],[True,False,False,True,True,True,True,True,True],[False,False,False,False,False,True,False,False,True],[False,False,True,False,False,True,True,False,False],[False,True,False,True,False,True,True,True,False],[False,False,True,True,False,False,True,True,False],[False,True,False,True,True,False,True,True,True],[False,False,True,False,False,False,True,True,False]],[[False,False,False,False,False,False,True,True,True],[True,False,False,False,False,True,False,False,False],[True,True,True,False,True,False,True,True,False],[True,False,False,True,False,False,True,False,True],[False,False,False,True,True,True,True,True,True],[False,False,True,False,True,False,True,True,True],[True,False,True,False,True,True,False,False,False],[False,False,False,True,False,False,False,True,False],[True,False,True,False,False,True,False,False,False],[False,True,True,False,True,True,True,True,False]],[[False,True,True,False,True,True,True,True,True],[True,True,False,True,False,False,True,False,False],[False,False,False,True,True,True,False,True,False],[False,False,True,False,False,False,True,True,False],[False,False,True,True,True,False,True,True,False],[True,False,False,True,False,True,True,True,False],[True,False,True,True,False,True,True,False,True],[True,False,False,True,False,False,False,False,False],[False,True,True,False,True,True,True,False,True],[False,False,True,False,True,True,True,False,True]]], dtype = "bool")#candidate|6035|(10, 10, 9)|const|bool
bop_6036 = relay.logical_and(var_6034.astype('bool'), relay.reshape(const_6035.astype('bool'), relay.shape_of(var_6034))) # shape=(10, 10, 9)
uop_6052 = relay.cos(var_6034.astype('float64')) # shape=(10, 10, 9)
uop_6063 = relay.tan(uop_6052.astype('float32')) # shape=(10, 10, 9)
func_5057_call = mod.get_global_var('func_5057')
func_5060_call = mutated_mod.get_global_var('func_5060')
var_6096 = relay.var("var_6096", dtype = "float64", shape = (2, 48))#candidate|6096|(2, 48)|var|float64
call_6095 = func_5057_call(relay.reshape(var_6096.astype('float64'), [4, 6, 4]))
call_6097 = func_5057_call(relay.reshape(var_6096.astype('float64'), [4, 6, 4]))
output = relay.Tuple([bop_6036,uop_6063,call_6095,var_6096,])
output2 = relay.Tuple([bop_6036,uop_6063,call_6097,var_6096,])
func_6102 = relay.Function([var_6034,var_6096,], output)
mod['func_6102'] = func_6102
mod = relay.transform.InferType()(mod)
var_6103 = relay.var("var_6103", dtype = "bool", shape = (10, 10, 9))#candidate|6103|(10, 10, 9)|var|bool
var_6104 = relay.var("var_6104", dtype = "float64", shape = (2, 48))#candidate|6104|(2, 48)|var|float64
output = func_6102(var_6103,var_6104,)
func_6105 = relay.Function([var_6103,var_6104,], output)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3535_call = mod.get_global_var('func_3535')
func_3536_call = mutated_mod.get_global_var('func_3536')
call_6223 = relay.TupleGetItem(func_3535_call(), 0)
call_6224 = relay.TupleGetItem(func_3536_call(), 0)
uop_6255 = relay.erf(call_6223.astype('float64')) # shape=(8, 12, 5)
uop_6257 = relay.erf(call_6224.astype('float64')) # shape=(8, 12, 5)
uop_6258 = relay.rsqrt(uop_6255.astype('float32')) # shape=(8, 12, 5)
uop_6260 = relay.rsqrt(uop_6257.astype('float32')) # shape=(8, 12, 5)
output = uop_6258
output2 = uop_6260
func_6264 = relay.Function([], output)
mod['func_6264'] = func_6264
mod = relay.transform.InferType()(mod)
mutated_mod['func_6264'] = func_6264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6264_call = mutated_mod.get_global_var('func_6264')
call_6265 = func_6264_call()
output = call_6265
func_6266 = relay.Function([], output)
mutated_mod['func_6266'] = func_6266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_6283 = relay.TupleGetItem(func_3560_call(), 0)
call_6284 = relay.TupleGetItem(func_3562_call(), 0)
func_5793_call = mod.get_global_var('func_5793')
func_5796_call = mutated_mod.get_global_var('func_5796')
var_6290 = relay.var("var_6290", dtype = "bool", shape = (72, 1))#candidate|6290|(72, 1)|var|bool
call_6289 = func_5793_call(relay.reshape(var_6290.astype('bool'), [6, 3, 4]), relay.reshape(var_6290.astype('bool'), [6, 3, 4]), )
call_6291 = func_5793_call(relay.reshape(var_6290.astype('bool'), [6, 3, 4]), relay.reshape(var_6290.astype('bool'), [6, 3, 4]), )
output = relay.Tuple([call_6283,call_6289,var_6290,])
output2 = relay.Tuple([call_6284,call_6291,var_6290,])
func_6303 = relay.Function([var_6290,], output)
mod['func_6303'] = func_6303
mod = relay.transform.InferType()(mod)
mutated_mod['func_6303'] = func_6303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6304 = relay.var("var_6304", dtype = "bool", shape = (72, 1))#candidate|6304|(72, 1)|var|bool
func_6303_call = mutated_mod.get_global_var('func_6303')
call_6305 = func_6303_call(var_6304)
output = call_6305
func_6306 = relay.Function([var_6304], output)
mutated_mod['func_6306'] = func_6306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4856_call = mod.get_global_var('func_4856')
func_4857_call = mutated_mod.get_global_var('func_4857')
call_6422 = relay.TupleGetItem(func_4856_call(), 3)
call_6423 = relay.TupleGetItem(func_4857_call(), 3)
output = relay.Tuple([call_6422,])
output2 = relay.Tuple([call_6423,])
func_6433 = relay.Function([], output)
mod['func_6433'] = func_6433
mod = relay.transform.InferType()(mod)
mutated_mod['func_6433'] = func_6433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6433_call = mutated_mod.get_global_var('func_6433')
call_6434 = func_6433_call()
output = call_6434
func_6435 = relay.Function([], output)
mutated_mod['func_6435'] = func_6435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3535_call = mod.get_global_var('func_3535')
func_3536_call = mutated_mod.get_global_var('func_3536')
call_6452 = relay.TupleGetItem(func_3535_call(), 0)
call_6453 = relay.TupleGetItem(func_3536_call(), 0)
func_4189_call = mod.get_global_var('func_4189')
func_4192_call = mutated_mod.get_global_var('func_4192')
const_6456 = relay.const([8.704840,0.335142,-0.040608,-7.862497,2.039613,-8.558886,5.512280,-1.742396,2.670502,-8.796321,-2.217174,-7.790146,1.383930,-2.293799,-2.185534,9.533079,-1.301822,-6.387628,2.243341,-1.626051,-7.866943,-5.123281,5.521335,-6.332135,-7.027680,6.371213,1.939055,-6.478301,-9.746903,2.876816,6.061363,5.315069,-7.278526,-5.430196,-9.571371,-5.308140,-5.226633,-9.900208,-1.693385,-3.191262,-3.863273,2.356278,7.332529,-7.278447,-9.083348,3.475603,-3.889445,6.426951,-1.795219,1.986164,1.948676,5.142554,-4.758412,2.775771,-1.437965,0.645289,8.822034,-1.890614,2.415362,0.231287,-8.890851,7.583470,9.114736,6.669327], dtype = "float64")#candidate|6456|(64,)|const|float64
call_6455 = relay.TupleGetItem(func_4189_call(relay.reshape(const_6456.astype('float64'), [32, 2])), 3)
call_6457 = relay.TupleGetItem(func_4192_call(relay.reshape(const_6456.astype('float64'), [32, 2])), 3)
var_6459 = relay.var("var_6459", dtype = "float32", shape = (8, 12, 5))#candidate|6459|(8, 12, 5)|var|float32
bop_6460 = relay.divide(call_6452.astype('float32'), relay.reshape(var_6459.astype('float32'), relay.shape_of(call_6452))) # shape=(8, 12, 5)
bop_6463 = relay.divide(call_6453.astype('float32'), relay.reshape(var_6459.astype('float32'), relay.shape_of(call_6453))) # shape=(8, 12, 5)
output = relay.Tuple([call_6455,const_6456,bop_6460,])
output2 = relay.Tuple([call_6457,const_6456,bop_6463,])
func_6464 = relay.Function([var_6459,], output)
mod['func_6464'] = func_6464
mod = relay.transform.InferType()(mod)
mutated_mod['func_6464'] = func_6464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6465 = relay.var("var_6465", dtype = "float32", shape = (8, 12, 5))#candidate|6465|(8, 12, 5)|var|float32
func_6464_call = mutated_mod.get_global_var('func_6464')
call_6466 = func_6464_call(var_6465)
output = call_6466
func_6467 = relay.Function([var_6465], output)
mutated_mod['func_6467'] = func_6467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4856_call = mod.get_global_var('func_4856')
func_4857_call = mutated_mod.get_global_var('func_4857')
call_6508 = relay.TupleGetItem(func_4856_call(), 0)
call_6509 = relay.TupleGetItem(func_4857_call(), 0)
output = call_6508
output2 = call_6509
func_6511 = relay.Function([], output)
mod['func_6511'] = func_6511
mod = relay.transform.InferType()(mod)
mutated_mod['func_6511'] = func_6511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6511_call = mutated_mod.get_global_var('func_6511')
call_6512 = func_6511_call()
output = call_6512
func_6513 = relay.Function([], output)
mutated_mod['func_6513'] = func_6513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mod.get_global_var('func_4706')
func_4708_call = mutated_mod.get_global_var('func_4708')
call_6532 = relay.TupleGetItem(func_4706_call(), 0)
call_6533 = relay.TupleGetItem(func_4708_call(), 0)
func_4448_call = mod.get_global_var('func_4448')
func_4450_call = mutated_mod.get_global_var('func_4450')
call_6536 = relay.TupleGetItem(func_4448_call(relay.reshape(call_6532.astype('float64'), [12, 5, 3])), 0)
call_6537 = relay.TupleGetItem(func_4450_call(relay.reshape(call_6532.astype('float64'), [12, 5, 3])), 0)
bop_6540 = relay.left_shift(call_6532.astype('int64'), relay.reshape(call_6536.astype('int64'), relay.shape_of(call_6532))) # shape=(12, 5, 3)
bop_6543 = relay.left_shift(call_6533.astype('int64'), relay.reshape(call_6537.astype('int64'), relay.shape_of(call_6533))) # shape=(12, 5, 3)
func_5173_call = mod.get_global_var('func_5173')
func_5176_call = mutated_mod.get_global_var('func_5176')
var_6548 = relay.var("var_6548", dtype = "float32", shape = (616,))#candidate|6548|(616,)|var|float32
call_6547 = relay.TupleGetItem(func_5173_call(relay.reshape(var_6548.astype('float32'), [616,])), 1)
call_6549 = relay.TupleGetItem(func_5176_call(relay.reshape(var_6548.astype('float32'), [616,])), 1)
output = relay.Tuple([bop_6540,call_6547,var_6548,])
output2 = relay.Tuple([bop_6543,call_6549,var_6548,])
func_6558 = relay.Function([var_6548,], output)
mod['func_6558'] = func_6558
mod = relay.transform.InferType()(mod)
mutated_mod['func_6558'] = func_6558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6559 = relay.var("var_6559", dtype = "float32", shape = (616,))#candidate|6559|(616,)|var|float32
func_6558_call = mutated_mod.get_global_var('func_6558')
call_6560 = func_6558_call(var_6559)
output = call_6560
func_6561 = relay.Function([var_6559], output)
mutated_mod['func_6561'] = func_6561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6567 = relay.var("var_6567", dtype = "uint8", shape = (14, 2, 1))#candidate|6567|(14, 2, 1)|var|uint8
var_6568 = relay.var("var_6568", dtype = "uint8", shape = (14, 2, 12))#candidate|6568|(14, 2, 12)|var|uint8
bop_6569 = relay.right_shift(var_6567.astype('uint8'), var_6568.astype('uint8')) # shape=(14, 2, 12)
output = bop_6569
output2 = bop_6569
func_6574 = relay.Function([var_6567,var_6568,], output)
mod['func_6574'] = func_6574
mod = relay.transform.InferType()(mod)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6574_call = mutated_mod.get_global_var('func_6574')
var_6576 = relay.var("var_6576", dtype = "uint8", shape = (14, 2, 1))#candidate|6576|(14, 2, 1)|var|uint8
var_6577 = relay.var("var_6577", dtype = "uint8", shape = (14, 2, 12))#candidate|6577|(14, 2, 12)|var|uint8
call_6575 = func_6574_call(var_6576,var_6577,)
output = call_6575
func_6578 = relay.Function([var_6576,var_6577,], output)
mutated_mod['func_6578'] = func_6578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5310_call = mod.get_global_var('func_5310')
func_5312_call = mutated_mod.get_global_var('func_5312')
call_6658 = relay.TupleGetItem(func_5310_call(), 0)
call_6659 = relay.TupleGetItem(func_5312_call(), 0)
var_6682 = relay.var("var_6682", dtype = "bool", shape = (12, 5, 3))#candidate|6682|(12, 5, 3)|var|bool
bop_6683 = relay.floor_mod(call_6658.astype('float32'), relay.reshape(var_6682.astype('float32'), relay.shape_of(call_6658))) # shape=(12, 5, 3)
bop_6686 = relay.floor_mod(call_6659.astype('float32'), relay.reshape(var_6682.astype('float32'), relay.shape_of(call_6659))) # shape=(12, 5, 3)
output = bop_6683
output2 = bop_6686
func_6691 = relay.Function([var_6682,], output)
mod['func_6691'] = func_6691
mod = relay.transform.InferType()(mod)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6692 = relay.var("var_6692", dtype = "bool", shape = (12, 5, 3))#candidate|6692|(12, 5, 3)|var|bool
func_6691_call = mutated_mod.get_global_var('func_6691')
call_6693 = func_6691_call(var_6692)
output = call_6693
func_6694 = relay.Function([var_6692], output)
mutated_mod['func_6694'] = func_6694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5231_call = mod.get_global_var('func_5231')
func_5233_call = mutated_mod.get_global_var('func_5233')
call_6749 = relay.TupleGetItem(func_5231_call(), 0)
call_6750 = relay.TupleGetItem(func_5233_call(), 0)
output = relay.Tuple([call_6749,])
output2 = relay.Tuple([call_6750,])
func_6769 = relay.Function([], output)
mod['func_6769'] = func_6769
mod = relay.transform.InferType()(mod)
mutated_mod['func_6769'] = func_6769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6769_call = mutated_mod.get_global_var('func_6769')
call_6770 = func_6769_call()
output = call_6770
func_6771 = relay.Function([], output)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_6869 = relay.TupleGetItem(func_3124_call(), 0)
call_6870 = relay.TupleGetItem(func_3125_call(), 0)
output = call_6869
output2 = call_6870
func_6871 = relay.Function([], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
output = func_6871()
func_6872 = relay.Function([], output)
mutated_mod['func_6872'] = func_6872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6769_call = mod.get_global_var('func_6769')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_6873 = relay.TupleGetItem(func_6769_call(), 0)
call_6874 = relay.TupleGetItem(func_6771_call(), 0)
func_5425_call = mod.get_global_var('func_5425')
func_5430_call = mutated_mod.get_global_var('func_5430')
const_6904 = relay.const(7, dtype = "uint32")#candidate|6904|()|const|uint32
var_6905 = relay.var("var_6905", dtype = "uint32", shape = (1100,))#candidate|6905|(1100,)|var|uint32
const_6906 = relay.const([1,-2,1,8,-1,7,-7,10,-9,-5,-9,6,-4,1,-2,-5,8,-10,9,7,8,-7,4,1,8,-8,4,-4,8,4,2,3,-7,7,10,7,7,-4,-9,6,2,-8,-7,-5,-8,5,10,-7,10,4,-9,9,-5,1,-8,5,9,6,-6,1,2,3,5,-1,-8,-6,-8,-7,7,-6,2,-5,-5,-9,4,4,-7,9,8,6,7,-3,8,-5,-7,-10,-2,-2,-7,-7,-2,-6,7,10,7,1,1,-6,-3,1,-4,1,-7,-5,3,-5,3,3,-9,5,-2,-10,10,9,7,-5,3,6,-8,-4,3,5,1,5,-2,5,-9,-6,-1,4,7,8,7,1,7,8,5,5,1,7,4,-9,9,2,10,-9,-7,-8,4,-2,7,10,-3,-9,9,-2,-1,4,6,-1,1,-5,10,-5,-5,5,6,3,4,-8,1,6,10,-2,-5,5,5,-6,-3,9,-9,9,2,9,-5,9,-6,6,6,-2,-2,-8,-7,10,-7,-8,-5,-4,-9,3,9,-2,6,10,-7,-4,1,4,8,8,6,4,2,-6,-2,-9,-10,5,-8,-9,-9,-3,-7,-6,2,-2,9,8,5,-6,-5,-7,3,-5,7,5,-9,6,-5,10,-8,6,8,3,-1,10,2,-5,1,6,-7,6,9,-1,6,-4,4,4,-7,7,5,-6,-7,2,2,-6,10,7,5,6,1,-6,1,9,6,-7,-3,8,7,-8,9,-10,-7,8,2,1,-5,8,-8,5,-3,7,-7,-6,6,-3,-7,1,9,5,-5,-7,-5,6,4,-9,6,-4,2,9,-5,2,7,-5,-5,10,-7,10,-1,-7,-2,1,2,-4,5,-2,-8,-4,10,-3,-2,-4,-7,-2,5,-3,-4,6,10,-10,-3,-7,9,-8,-1,-3,-6,-1,-3,1,-2,4,9,-4,10,-5,-10,-4,4,-7,6,9,7,3,4,-10,10,-4,6,9,-4,8,9,-1,5,1,8,-3,1,-6,2,1,4,3,5,-5,-8,-3,5,3,3,-3,-3,7,2,9,1,-10,-7,-4,-6,-1,2,-3,-9,-10,10,3,-10,7,6,-10,6,-4,2,7,-9,-10,4,1,-10,4,-4,3,-7,-8,4,10,7,-7,3,4,-4,-4,-2,10,6,1,-2,4,3,-4,1,1,9,-6,1,4,-8,2,5,-9,-5,-1,-5,8,-6,-4,-6,4,2,8,9,9,-2,5,-4,-8,-7,7,3,-9,-6,7,-10,7,-10,5,7,-7,6,8,-10,-8,3,-8,-9,-7,-2,8,5,3,-10,-5,2,-8,7,8,-2,6,-10,-4,-3,-5,-5,-6,8,-6,-6,5,-4,-8,-9,-8,-3,-8,9,3,3,7,-10,-10,10,7,8,8,5,3,-2,-6,-5,9,6,-8,-1,1,-7,2,-9,-5,-10,-9,1,-10,-4,10,-3,-7,-1,2,-9,-5,-5,6,-5,1,6,-2,-1,-9,-1,8,8,-4,8,2,8,4,6,7,2,9,-7,4,3,5,-2,9,8,-8,-9,4,8,3,9,-5,8,-1,-5,5,6,-4,-4,-8,-6,9,-7,-5,4,-10,9,-5,9,6,-9,-2,2,5,8,-8,-2,-10,-1,-5,-6,-9,-10,6,10,-3,-2,8,-2,-9,8,5,-6,10,-3,-4,8,3,-8,7,-10,9,-7,3,-1,10,-2,1,1,7,6,10,-5,-2,-4,2,-1,-4,-9,-6,3,-4,-2,-3,8,-4,1,8,10,10,-1,8,5,-10,2,9,-3,-10,-7,5,-5,10,6,-6,10,-2,8,4,-3,2,-10,1,-3,8,6,-5,-6,-10,3], dtype = "uint8")#candidate|6906|(693,)|const|uint8
call_6903 = relay.TupleGetItem(func_5425_call(relay.reshape(const_6904.astype('uint32'), []), relay.reshape(var_6905.astype('uint32'), [11, 10, 10]), relay.reshape(const_6906.astype('uint8'), [7, 99]), ), 8)
call_6907 = relay.TupleGetItem(func_5430_call(relay.reshape(const_6904.astype('uint32'), []), relay.reshape(var_6905.astype('uint32'), [11, 10, 10]), relay.reshape(const_6906.astype('uint8'), [7, 99]), ), 8)
uop_6909 = relay.tan(var_6905.astype('float64')) # shape=(1100,)
output = relay.Tuple([call_6873,call_6903,const_6904,const_6906,uop_6909,])
output2 = relay.Tuple([call_6874,call_6907,const_6904,const_6906,uop_6909,])
func_6914 = relay.Function([var_6905,], output)
mod['func_6914'] = func_6914
mod = relay.transform.InferType()(mod)
var_6915 = relay.var("var_6915", dtype = "uint32", shape = (1100,))#candidate|6915|(1100,)|var|uint32
output = func_6914(var_6915)
func_6916 = relay.Function([var_6915], output)
mutated_mod['func_6916'] = func_6916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6264_call = mod.get_global_var('func_6264')
func_6266_call = mutated_mod.get_global_var('func_6266')
call_6927 = func_6264_call()
call_6928 = func_6264_call()
output = relay.Tuple([call_6927,])
output2 = relay.Tuple([call_6928,])
func_6937 = relay.Function([], output)
mod['func_6937'] = func_6937
mod = relay.transform.InferType()(mod)
output = func_6937()
func_6938 = relay.Function([], output)
mutated_mod['func_6938'] = func_6938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_6973 = relay.TupleGetItem(func_3560_call(), 0)
call_6974 = relay.TupleGetItem(func_3562_call(), 0)
var_6977 = relay.var("var_6977", dtype = "float64", shape = (12, 5, 3))#candidate|6977|(12, 5, 3)|var|float64
bop_6978 = relay.not_equal(call_6973.astype('bool'), relay.reshape(var_6977.astype('bool'), relay.shape_of(call_6973))) # shape=(12, 5, 3)
bop_6981 = relay.not_equal(call_6974.astype('bool'), relay.reshape(var_6977.astype('bool'), relay.shape_of(call_6974))) # shape=(12, 5, 3)
func_2093_call = mod.get_global_var('func_2093')
func_2096_call = mutated_mod.get_global_var('func_2096')
var_7001 = relay.var("var_7001", dtype = "uint16", shape = (1050,))#candidate|7001|(1050,)|var|uint16
call_7000 = relay.TupleGetItem(func_2093_call(relay.reshape(var_7001.astype('uint16'), [14, 5, 15]), relay.reshape(var_7001.astype('uint16'), [14, 5, 15]), ), 3)
call_7002 = relay.TupleGetItem(func_2096_call(relay.reshape(var_7001.astype('uint16'), [14, 5, 15]), relay.reshape(var_7001.astype('uint16'), [14, 5, 15]), ), 3)
func_6102_call = mod.get_global_var('func_6102')
func_6105_call = mutated_mod.get_global_var('func_6105')
const_7005 = relay.const([True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True], dtype = "bool")#candidate|7005|(900,)|const|bool
const_7006 = relay.const([-9.986930,6.139527,-1.865386,-2.036463,3.566656,-1.971545,3.817164,-2.406709,-7.091777,-9.147847,-6.201103,-0.196213,-9.379954,-1.571840,1.728117,-6.354863,-2.934957,3.033979,-2.482418,-8.022837,2.434835,-1.579195,3.799414,8.119937,-9.799217,-1.054228,8.054640,-2.567365,-8.174763,5.270789,-0.455738,1.110306,-1.415231,6.989782,-6.805633,-3.213977,8.864030,-8.499849,7.861301,-3.735119,-1.972384,0.141721,3.714671,9.432063,-4.231337,-6.014186,5.542989,3.550996,-0.055796,-9.971554,-5.631002,-2.912740,-2.374922,3.217920,-3.794160,7.821864,-1.677099,8.006548,-9.232938,4.104130,6.478973,6.660205,4.252499,-1.357185,1.850607,-0.693044,-5.207674,7.468927,-4.716101,-7.433265,-0.696176,9.767662,-0.597888,7.501142,4.476968,-8.703015,-9.693688,4.396113,-0.887401,6.231229,7.023838,-2.052486,-5.342658,-0.124422,-1.848181,-8.666512,-6.814612,5.598799,-4.254299,6.958344,-4.701747,-4.630736,4.137584,-0.435478,-3.739916,7.812085], dtype = "float64")#candidate|7006|(96,)|const|float64
call_7004 = relay.TupleGetItem(func_6102_call(relay.reshape(const_7005.astype('bool'), [10, 10, 9]), relay.reshape(const_7006.astype('float64'), [2, 48]), ), 0)
call_7007 = relay.TupleGetItem(func_6105_call(relay.reshape(const_7005.astype('bool'), [10, 10, 9]), relay.reshape(const_7006.astype('float64'), [2, 48]), ), 0)
func_6464_call = mod.get_global_var('func_6464')
func_6467_call = mutated_mod.get_global_var('func_6467')
const_7022 = relay.const([-7.709585,0.079370,-6.377577,6.089086,-1.057403,5.989282,4.452104,-3.023561,-5.807400,-3.910834,7.630608,-5.678644,-3.691862,8.054481,-3.903644,6.339602,-9.484985,-1.902643,-0.811874,0.159137,3.738574,-0.900346,-0.658367,6.397407,-1.062375,-9.921806,8.920639,0.741251,0.172210,0.917577,8.431043,1.320471,5.006454,-1.977185,4.114568,4.162978,5.476342,0.658675,-6.288418,-1.082491,8.265423,7.314200,-8.601531,-7.029486,6.570814,2.697167,9.730740,-3.968839,3.882317,-4.741253,5.584225,7.572106,-1.373841,-9.227301,6.526803,5.374639,5.549532,5.941310,2.314325,-7.207628,9.921493,0.047566,-1.689387,-3.398236,-2.031874,-1.684230,-7.242639,-9.612620,1.482687,3.085169,-8.622471,9.352751,0.628362,4.197111,-8.737805,8.506607,0.644713,-2.406624,8.151943,3.759779,-6.662943,4.333687,7.821217,7.495992,-4.586096,6.603025,9.414198,4.195994,2.901575,4.217325,-3.684450,-0.117349,7.784847,2.168358,4.172690,-9.253761,-9.403514,-0.888205,-4.252806,-7.277941,-5.890802,5.913051,-7.571981,9.413168,6.360556,-3.112801,5.651757,3.018440,4.893154,4.508591,-9.569934,-7.183808,2.858103,-7.911983,-0.330891,6.556866,3.889348,-3.367792,5.848792,9.716635,-3.103724,-5.923882,-2.599280,-3.786008,-4.792536,-2.192063,-2.749562,8.002686,4.397891,0.958686,4.110182,4.700719,0.134167,-3.667107,3.435922,3.466281,9.456868,7.034651,5.912230,-8.004184,-2.917144,-3.891210,7.328724,-0.866790,-9.400206,8.209421,-0.348121,-9.479807,-5.914464,-9.438890,-2.611760,-1.106779,5.676290,-6.268480,5.149581,-4.671131,7.441684,-7.856995,1.739235,-6.692357,-6.148043,3.268952,-2.481923,-1.346840,-0.767051,-6.992098,-2.526481,0.243139,-2.173351,3.908271,-2.595702,2.071336,-0.118134,-2.170934,6.293180,8.786407,-1.936413,-1.393485,-8.720491,-9.513588,-9.658352,-6.668884,5.752973,-0.073338,9.953041,3.404361,-0.769270,1.071012,2.617024,-4.926586,-3.662562,-1.324188,-1.408056,5.137708,-1.809789,2.242673,-2.749045,9.673220,1.585418,-6.580785,4.828488,-4.735309,-5.028861,4.067127,-4.043651,-6.374291,2.505827,6.641548,-3.261280,8.836649,-6.941594,7.323077,-6.333592,-6.889224,-3.766142,-3.847987,6.224750,5.664732,-8.550519,5.763823,-7.679079,-1.729423,-6.753279,2.335740,-0.658647,2.007247,-0.351285,-9.468566,-6.859773,-8.435381,6.923576,-3.179698,-5.200689,-0.052237,-0.183119,2.378325,-0.602257,2.179090,0.975926,5.273477,1.501357,9.674698,5.995356,-3.000281,-1.344627,-5.792856,6.991903,-0.938746,0.396608,-7.139868,-0.253242,-5.796517,8.175336,-9.288938,1.791241,6.842653,-8.602545,-2.645047,-3.538919,6.408447,3.616797,-7.337418,1.554246,-5.521480,0.331632,-3.510185,-1.934050,-0.187271,-2.294720,5.254356,-2.116487,-0.822676,6.327716,-3.338892,7.981127,-6.084084,-1.618281,2.440820,-5.933126,-7.901402,5.406873,7.551347,6.552842,2.652993,-6.597210,1.980459,1.529196,-5.932480,-2.905277,-1.104508,-0.288495,9.766938,8.043911,-2.209660,-6.206265,-7.657082,-1.909163,-0.128497,0.658619,7.318440,-6.196237,8.752832,8.192869,-9.028408,-2.733970,7.741117,8.361597,0.354804,-5.493796,-7.820186,-0.676026,-1.001246,3.926196,1.385611,-7.321135,-7.286007,1.199940,7.549568,7.813762,6.086203,-4.534807,0.778391,6.399981,3.854018,-1.536805,-4.015838,-3.378980,3.119847,0.885651,-0.119733,-4.998664,-6.780385,-4.304442,-8.279805,1.561791,-7.388465,-9.318855,-1.659072,-3.734633,0.684448,7.451270,-3.670955,-2.582677,7.040742,-1.947850,-0.239808,1.294116,-4.953094,-8.282478,5.327950,-1.570922,3.892356,5.638873,-7.433307,1.478586,2.555705,-8.218162,-6.694889,7.073930,-5.901069,-1.900435,-3.592297,-6.467974,9.609338,9.820675,-9.389083,-7.041908,4.214217,3.201018,-0.601480,1.711008,-4.475996,1.949060,0.742216,-1.677258,-9.950985,-7.561636,-1.413208,9.102137,7.462637,2.812845,9.516599,0.573176,1.097916,-4.186515,-6.720124,3.464390,8.689027,2.835472,-1.994055,9.709296,-7.308444,9.865320,-0.284830,5.092049,-8.084685,9.124812,-3.769418,-2.573951,-3.286742,4.531669,-7.774873,5.100789,8.096816,-7.208858,-6.597987,-0.626407,5.267400,-4.548753,5.120379,7.770253,-7.891372,5.687662,-8.416468,-3.827435,-5.447749,7.815581,9.480760,7.615078,9.646544,-0.654315,8.087801,5.836008,-7.383262,-0.206262,1.199429,7.069684,-7.419598,-9.748549,-2.199809,5.217401,1.868761,-4.026972,1.297310,7.633473,8.134103,6.233445,0.086657,-5.827828,-3.549107,7.001147,-9.215233,3.945664,8.148530,4.542893,-8.969935,-5.226635,8.221656,-1.219445,-5.629421,-0.238413,9.192675,-0.863442,-5.451489,8.010344,9.865635,-1.499080,2.531759,9.415686,7.392441,4.698236,1.257688,7.065697,-5.986541,-1.329473,-4.423177,-1.771376,-5.600056,-8.642613,7.035556,1.349281,-0.342250,1.529352,9.068565,-6.772339,6.490586,-3.563776,2.684209,-6.807150,-5.882275], dtype = "float32")#candidate|7022|(480,)|const|float32
call_7021 = relay.TupleGetItem(func_6464_call(relay.reshape(const_7022.astype('float32'), [8, 12, 5])), 2)
call_7023 = relay.TupleGetItem(func_6467_call(relay.reshape(const_7022.astype('float32'), [8, 12, 5])), 2)
func_5057_call = mod.get_global_var('func_5057')
func_5060_call = mutated_mod.get_global_var('func_5060')
call_7049 = func_5057_call(relay.reshape(const_7006.astype('float64'), [4, 6, 4]))
call_7050 = func_5057_call(relay.reshape(const_7006.astype('float64'), [4, 6, 4]))
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
const_7057 = relay.const([2.975388,-6.950746,-8.614434,-0.340131,1.447177,-0.139176,-0.399264,-0.991940,4.850076,-8.153613,-7.913360,4.478928,-4.275873,-5.003790,-5.061460,-9.666271,-5.719628,8.626941,0.162867,4.431494,8.074962,7.525456,-2.957268,-2.900918,-9.176908,3.702501,-6.964927,9.240605,3.793992,-4.503485,3.602905,4.415962,5.595371,5.893194,-0.113313,9.869804,-7.104601,9.593782,0.118542,5.239671,-7.574152,-5.543656,0.759951,-4.259695,-8.631681,-2.024539,8.078603,3.355829,8.762845,-8.552686,7.311585,2.487723,-4.696880,-5.393284,-3.651965,3.903691,-6.974530,1.601230,0.918076,-9.639014,-7.935707,-5.475208,-0.252584,-6.231554,-0.329456,9.471935,9.782474,0.409702,6.407069,1.302858,3.430296,9.270929,-3.744972,8.055508,-7.940481,3.822880,7.253293,-4.784807,-4.045400,3.234377,4.777245,-7.559309,7.623023,-9.102054,-6.766473,4.264737,5.966537,3.760615,9.557105,9.578273,6.218487,1.147160,-6.647087,-6.437103,-9.876267,6.879923,3.989598,-3.994068,-0.156901,7.417854,-7.663305,-2.956397,0.666098,-1.159637,2.281589,-0.043339,-7.557116,6.355854,-7.606760,3.552373,9.143909,-7.187485,0.987415,6.018109,-8.886301,-5.994194,4.278823,-5.688983,-3.913639,-9.701356,-4.728052,-1.273331,-5.963868,-7.290011,-9.318619,2.602026,-6.907335,-7.162456,3.831184,6.377420,-7.953732,-0.381126,2.978635,5.570272,8.666741,0.876883,-1.269331,1.292495,4.778335,0.145202,8.599875,3.754130,7.540416,3.745567,8.743950,-0.136132,-9.153320,-4.541127,2.350057,-5.756789,2.530938,-4.453003,7.215417,-8.396189,3.484783,-5.832432,-3.779010,5.568443,1.695408,-6.499405,6.578119,0.075868,-9.311678,7.176319,6.000538,-4.586319,0.504570,-7.867940,-1.756542,2.463302,3.885710,2.613279,2.573150,1.629333,8.764262,-2.944280,-1.467635,3.304316,0.614587,-1.224168,-9.033811,6.393083,5.542794,-3.321120,-5.252213,-4.916166,-4.509657,7.348301,-0.174563,-1.301290,3.291122,-5.746188,-0.494461,-0.666382,9.429848,-2.619668,6.879520,9.842791,-3.281824,4.876838,-8.408441,-1.719579,2.222038,-3.701459,-2.232390,8.554186,5.770954,8.464625,9.963743,6.294977,-7.627819,-9.281250,2.879090,-7.888950,-0.303900,-6.183058], dtype = "float64")#candidate|7057|(216,)|const|float64
call_7056 = relay.TupleGetItem(func_2121_call(relay.reshape(const_7057.astype('float64'), [9, 3, 8])), 0)
call_7058 = relay.TupleGetItem(func_2123_call(relay.reshape(const_7057.astype('float64'), [9, 3, 8])), 0)
var_7067 = relay.var("var_7067", dtype = "float32", shape = (3, 15, 7))#candidate|7067|(3, 15, 7)|var|float32
bop_7068 = relay.multiply(call_7000.astype('int8'), relay.reshape(var_7067.astype('int8'), relay.shape_of(call_7000))) # shape=(3, 15, 7)
bop_7071 = relay.multiply(call_7002.astype('int8'), relay.reshape(var_7067.astype('int8'), relay.shape_of(call_7002))) # shape=(3, 15, 7)
func_6914_call = mod.get_global_var('func_6914')
func_6916_call = mutated_mod.get_global_var('func_6916')
const_7084 = relay.const([2,3,1,-10,10,4,-9,6,-4,-6,-3,-3,-4,2,10,5,5,6,7,3,-5,3,-1,4,4,-10,-5,-9,2,2,-5,8,6,5,9,3,7,9,-8,5,-3,8,10,6,-9,5,-7,3,8,-9,8,-2,1,-4,6,-1,-6,4,-6,-9,-1,8,-9,3,3,-4,-7,7,-8,7,10,-3,-8,-4,7,1,8,-6,-4,-2,-1,9,3,-6,-7,-6,-4,3,6,-8,9,-1,-3,-5,5,4,-6,-4,7,1,-6,10,8,3,1,6,-3,8,-3,-2,2,4,9,6,-1,-1,-6,8,6,-7,-3,8,2,-5,-1,-5,5,9,-9,-3,2,9,4,-3,9,9,6,9,3,5,10,-7,9,-10,-2,1,6,-3,7,3,9,7,9,-3,9,8,-8,-4,-2,-7,7,8,8,-4,-9,-9,10,4,-2,-2,5,-10,-5,-1,-1,1,6,3,-3,9,5,2,5,-3,-3,8,6,-2,-6,-10,-1,7,2,-1,7,9,-1,-7,7,3,-6,-9,-3,-3,-5,-6,-4,6,-10,-1,9,9,2,-6,6,10,-2,-4,1,-4,10,5,-10,2,-7,7,4,6,1,-5,-3,1,-6,-2,4,-5,3,-10,10,3,4,3,-5,2,-3,3,3,-3,8,-6,-9,-7,-1,-7,7,-6,9,9,-10,-10,-9,1,6,1,-7,-6,-7,1,10,-7,-8,-9,6,-5,-10,-1,7,-1,6,-6,-8,-1,5,-3,2,1,-6,-8,-8,-9,7,5,4,6,-9,-4,5,4,-9,-3,10,10,-4,-6,-3,-9,7,-4,-2,-2,5,2,3,-9,4,5,6,7,8,-10,-2,-1,5,-1,-10,-9,-9,4,-6,6,5,-3,-9,-8,-6,7,-9,7,8,10,1,2,2,-3,8,-8,5,3,2,10,-2,-7,7,-3,-4,-2,4,-6,-9,3,-2,-8,4,10,5,-5,-1,7,8,3,-5,-8,9,3,7,-5,1,-6,7,3,10,-6,-2,-8,-5,4,-8,-6,6,-4,7,2,3,3,7,-9,-5,7,9,8,6,3,4,-2,-9,5,-6,-6,-6,8,-6,-10,5,8,1,-10,-10,3,-10,-6,1,-9,-10,-7,-5,-10,5,1,5,6,7,-7,6,-3,-6,9,2,-6,4,-1,-10,1,-10,5,-4,-5,4,-10,-1,7,3,5,-4,10,-4,-7,1,-10,-10,8,4,7,-3,-8,-9,10,-3,-9,-5,4,-7,6,9,-9,-10,3,8,4,6,-6,1,8,2,-2,6,10,7,3,9,2,-1,-5,-6,2,3,6,-5,-9,-2,8,4,-3,-2,-6,-8,-2,5,8,8,-3,10,-6,-6,4,5,5,-9,-10,-5,-4,7,4,5,5,-3,-6,-8,8,7,-1,3,2,6,-5,-10,-6,6,1,3,7,-2,9,-7,-3,8,-9,-10,6,-4,-7,-9,1,4,-9,8,10,-10,2,-5,-2,-1,-7,1,-8,-4,9,-9,-9,4,7,3,-4,8,10,10,-10,2,-1,1,-8,-4,8,-9,6,4,-5,-1,-2,4,-4,-4,7,-4,-9,-10,9,7,-9,4,-10,-7,7,-4,8,-9,-4,9,-8,-2,7,7,-7,-3,9,-10,-6,-5,-8,10,-9,-2,-1,-8,3,10,-3,-6,-9,7,-6,10,5,-5,-4,-10,-3,10,3,-6,10,-8,1,1,5,-2,4,-5,5,3,4,-6,6,-2,6,7,2,-6,9,4,7,5,8,-2,9,-6,-3,-9,-10,9,-8,1,2,-6,-9,5,8,7,1,9,-9,2,-7,2,-3,-5,-7,-3,-6,-2,-9,10,10,-1,9,10,7,9,-4,-5,-1,-7,9,-9,-7,1,-7,-3,-8,-7,-8,-4,-10,3,3,-10,8,-5,7,1,3,2,-3,-5,1,8,9,-6,-7,5,-5,-6,-2,8,-5,3,-3,7,10,-6,4,-10,-8,-3,5,4,-3,-3,-1,4,1,3,-2,1,2,5,-1,-10,3,-3,3,8,-10,-3,-3,-9,6,-10,2,-2,-9,2,-4,-1,8,-7,3,-1,6,8,-2,-6,8,-7,-9,7,-8,8,-1,-10,4,4,-3,-2,10,10,6,-2,-4,-7,10,9,-2,1,-9,-4,6,-2,-6,8,4,-10,4,7,1,-8,-7,-10,-7,2,-9,1,-8,-4,7,10,2,4,-2,-3,-4,-5,-2,-9,3,5,2,9,8,4,-7,-9,-2,2,-5,-6,-8,1,3,8,-3,-10,-10,-5,-2,6,-1,6,-9,9,5,-4,-6,2,-4,7,-5,4,-6,4,8,-5,4,-4,2,-6,9,-2,2,6,6,5,2,7,-6,4,-8,3,-2,4,2,-3,-9,-8,2,-8,9,10,-3,-9,-7,-5,2,6,6,-10,-1,9,-1,-10,3,1,-1,5,-7,3,7,-8,5,-5,-5,9,-7,3,-9,10,1,6,-4,4,-7,-7,4,-5,1,-1,-4,-2,1,10,-10,-4,2,5,-4,7,-7,-6,-10,-1,1,-9,4,-8,9,-7,-8,4,-4,6,-7,7,-7,-4,-6,-10,-10,-1,-10,-1,7,-10,2,5,-10,-2,-3,-10,4,7,-2,4,-6,6,6,-5,-7,9,8,5,-4,4,6,8,-9,-7,-4,10,-9,-3,6,-9,-2,4,2,-9,-6,4,6,-1,6,5,10,9,-4,6,2,-2,-6,6,8,4,8,-6,-7,9,-5,-5,-10,8,-7,-3,-10,3,5,-3,5,-5,-5,-7,-7,8,-3,-9,-7,8,-1,-1,7,-6,5,3,7,3,8,6,10,-7,9,5,-5,8,-5,-9,-4,7,4,-9,10,5,-6,5,-5,7,10,-9,-9,3,7,6,-6,-1,3,-3,6,2,9,5,10,7,8,-9,3,10,-5,-1,1,3,-4,8,-4], dtype = "uint32")#candidate|7084|(1100,)|const|uint32
call_7083 = relay.TupleGetItem(func_6914_call(relay.reshape(const_7084.astype('uint32'), [1100,])), 2)
call_7085 = relay.TupleGetItem(func_6916_call(relay.reshape(const_7084.astype('uint32'), [1100,])), 2)
uop_7090 = relay.log(call_7056.astype('float64')) # shape=(9, 3, 8)
uop_7092 = relay.log(call_7058.astype('float64')) # shape=(9, 3, 8)
output = relay.Tuple([bop_6978,var_7001,call_7004,const_7005,const_7006,call_7021,const_7022,call_7049,const_7057,bop_7068,call_7083,const_7084,uop_7090,])
output2 = relay.Tuple([bop_6981,var_7001,call_7007,const_7005,const_7006,call_7023,const_7022,call_7050,const_7057,bop_7071,call_7085,const_7084,uop_7092,])
func_7097 = relay.Function([var_6977,var_7001,var_7067,], output)
mod['func_7097'] = func_7097
mod = relay.transform.InferType()(mod)
var_7098 = relay.var("var_7098", dtype = "float64", shape = (12, 5, 3))#candidate|7098|(12, 5, 3)|var|float64
var_7099 = relay.var("var_7099", dtype = "uint16", shape = (1050,))#candidate|7099|(1050,)|var|uint16
var_7100 = relay.var("var_7100", dtype = "float32", shape = (3, 15, 7))#candidate|7100|(3, 15, 7)|var|float32
output = func_7097(var_7098,var_7099,var_7100,)
func_7101 = relay.Function([var_7098,var_7099,var_7100,], output)
mutated_mod['func_7101'] = func_7101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4856_call = mod.get_global_var('func_4856')
func_4857_call = mutated_mod.get_global_var('func_4857')
call_7108 = relay.TupleGetItem(func_4856_call(), 1)
call_7109 = relay.TupleGetItem(func_4857_call(), 1)
output = call_7108
output2 = call_7109
func_7116 = relay.Function([], output)
mod['func_7116'] = func_7116
mod = relay.transform.InferType()(mod)
mutated_mod['func_7116'] = func_7116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7116_call = mutated_mod.get_global_var('func_7116')
call_7117 = func_7116_call()
output = call_7117
func_7118 = relay.Function([], output)
mutated_mod['func_7118'] = func_7118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6769_call = mod.get_global_var('func_6769')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_7119 = relay.TupleGetItem(func_6769_call(), 0)
call_7120 = relay.TupleGetItem(func_6771_call(), 0)
func_6102_call = mod.get_global_var('func_6102')
func_6105_call = mutated_mod.get_global_var('func_6105')
const_7122 = relay.const([False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True], dtype = "bool")#candidate|7122|(900,)|const|bool
const_7123 = relay.const([4.146834,6.245676,-7.243968,3.256828,-8.874794,8.856081,3.580875,7.511467,-0.846975,-3.371745,-5.537450,9.521159,5.360739,6.334121,-8.876128,-7.839825,-6.612408,-3.628099,-8.854822,-1.514300,9.932737,8.738098,3.553691,-9.747226,7.363883,-1.267678,3.902708,8.067177,-0.696763,1.938340,0.841674,-1.362876,-1.446627,5.432408,-1.151831,3.467551,8.377076,-0.491380,4.726401,-4.310800,6.942891,4.314522,-7.366261,-6.561932,2.299435,-4.216873,4.117599,-7.472592,6.394197,-0.763828,4.776510,8.167601,-5.097391,-7.809549,8.894107,-5.141963,7.898067,3.985963,-3.708205,-2.063508,6.949906,8.948113,-3.852994,-7.205623,1.848273,7.943477,-7.969820,7.105914,2.343533,3.663584,-5.530856,7.841873,6.766772,-6.088426,-4.647541,1.159162,7.789028,8.516007,-9.200009,7.133448,-9.556402,-2.618786,8.435656,-9.390162,2.881752,5.299625,1.502859,-8.172588,1.783909,2.002488,1.693203,-8.272304,3.381208,-4.328264,9.622562,4.627260], dtype = "float64")#candidate|7123|(96,)|const|float64
call_7121 = relay.TupleGetItem(func_6102_call(relay.reshape(const_7122.astype('bool'), [10, 10, 9]), relay.reshape(const_7123.astype('float64'), [2, 48]), ), 1)
call_7124 = relay.TupleGetItem(func_6105_call(relay.reshape(const_7122.astype('bool'), [10, 10, 9]), relay.reshape(const_7123.astype('float64'), [2, 48]), ), 1)
func_1934_call = mod.get_global_var('func_1934')
func_1938_call = mutated_mod.get_global_var('func_1938')
var_7133 = relay.var("var_7133", dtype = "float32", shape = (546,))#candidate|7133|(546,)|var|float32
call_7132 = relay.TupleGetItem(func_1934_call(relay.reshape(var_7133.astype('float32'), [13, 6, 7]), relay.reshape(var_7133.astype('float32'), [13, 6, 7]), ), 1)
call_7134 = relay.TupleGetItem(func_1938_call(relay.reshape(var_7133.astype('float32'), [13, 6, 7]), relay.reshape(var_7133.astype('float32'), [13, 6, 7]), ), 1)
uop_7135 = relay.exp(call_7119.astype('float64')) # shape=(12, 5, 3)
uop_7137 = relay.exp(call_7120.astype('float64')) # shape=(12, 5, 3)
func_5710_call = mod.get_global_var('func_5710')
func_5712_call = mutated_mod.get_global_var('func_5712')
var_7147 = relay.var("var_7147", dtype = "float64", shape = (64,))#candidate|7147|(64,)|var|float64
call_7146 = relay.TupleGetItem(func_5710_call(relay.reshape(var_7147.astype('float64'), [64,])), 1)
call_7148 = relay.TupleGetItem(func_5712_call(relay.reshape(var_7147.astype('float64'), [64,])), 1)
var_7162 = relay.var("var_7162", dtype = "float32", shape = (13, 6, 7))#candidate|7162|(13, 6, 7)|var|float32
bop_7163 = relay.logical_xor(call_7132.astype('int64'), relay.reshape(var_7162.astype('int64'), relay.shape_of(call_7132))) # shape=(13, 6, 7)
bop_7166 = relay.logical_xor(call_7134.astype('int64'), relay.reshape(var_7162.astype('int64'), relay.shape_of(call_7134))) # shape=(13, 6, 7)
output = relay.Tuple([call_7121,const_7122,const_7123,var_7133,uop_7135,call_7146,var_7147,bop_7163,])
output2 = relay.Tuple([call_7124,const_7122,const_7123,var_7133,uop_7137,call_7148,var_7147,bop_7166,])
func_7169 = relay.Function([var_7133,var_7147,var_7162,], output)
mod['func_7169'] = func_7169
mod = relay.transform.InferType()(mod)
var_7170 = relay.var("var_7170", dtype = "float32", shape = (546,))#candidate|7170|(546,)|var|float32
var_7171 = relay.var("var_7171", dtype = "float64", shape = (64,))#candidate|7171|(64,)|var|float64
var_7172 = relay.var("var_7172", dtype = "float32", shape = (13, 6, 7))#candidate|7172|(13, 6, 7)|var|float32
output = func_7169(var_7170,var_7171,var_7172,)
func_7173 = relay.Function([var_7170,var_7171,var_7172,], output)
mutated_mod['func_7173'] = func_7173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6937_call = mod.get_global_var('func_6937')
func_6938_call = mutated_mod.get_global_var('func_6938')
call_7193 = relay.TupleGetItem(func_6937_call(), 0)
call_7194 = relay.TupleGetItem(func_6938_call(), 0)
const_7209 = relay.const([[[-0.456239,4.344695,4.352995,4.661742,3.218780],[-1.758331,-9.118800,0.822406,6.814384,-4.369370],[-7.596725,4.557919,-3.621905,5.649673,7.622971],[0.436108,6.332815,-6.955894,-1.118058,-5.351679],[-7.099498,0.961734,4.739308,9.098998,-9.957974],[7.052017,6.394957,1.746016,-6.183719,2.199874],[2.551431,-8.000289,4.341629,8.086447,-5.301917],[1.883227,-0.934927,-6.679078,-5.080646,-8.692083],[6.426096,6.342206,-4.486733,9.229011,2.904880],[-2.385257,7.123867,8.729746,8.753588,7.899411],[-0.412319,1.709393,5.958552,-9.013178,6.703512],[-5.914513,-7.179977,-2.414086,-3.983704,2.403092]],[[-2.729226,-6.186766,-7.600180,-8.327906,-8.885152],[-0.084162,4.103096,-2.963820,3.839991,-6.050259],[3.465309,6.147468,-2.730902,8.680765,1.176683],[-9.345805,-1.462959,-8.421154,-4.930845,9.850270],[-6.474975,7.949079,8.065821,-2.790627,-1.265345],[7.497755,-1.844483,9.952039,-6.270476,7.582907],[8.267485,0.808415,9.285435,1.523402,2.495998],[-7.119314,-2.623809,6.217316,1.344260,-6.524587],[-1.222837,-6.708289,-0.470702,4.668557,-3.832557],[2.321491,-0.700779,6.557485,-7.605817,4.432548],[8.572251,7.362536,0.097514,5.741551,-1.841597],[-5.190507,-0.280730,2.630996,-3.504780,7.326530]],[[-4.239309,-4.889909,-2.523597,-8.075686,-4.361905],[-3.050600,1.321899,3.485778,-6.495587,-2.923027],[-0.869643,2.053235,9.827225,-5.496456,3.206184],[-0.248409,-3.394848,-1.826629,-7.598097,0.491846],[-5.737358,7.683286,9.287359,-7.632010,4.122440],[-7.265990,6.665814,-4.094769,5.872491,-7.535735],[6.984652,-2.308736,3.173721,-8.264202,6.360569],[9.512621,0.012686,3.278460,5.839437,-5.339745],[-7.810257,1.681940,-4.447263,-5.271771,-9.637558],[-8.480170,4.821365,2.545885,3.828337,9.261298],[3.927622,-2.983923,3.232226,0.163675,9.342917],[6.896322,-5.677656,0.085554,8.152190,-7.413315]],[[-6.721512,3.503842,4.357668,-4.632144,-6.947330],[8.904141,-6.871981,-2.988261,-7.759500,0.943088],[2.759873,4.113215,3.387547,-8.746076,4.717662],[-8.756247,3.342699,2.359125,-1.322600,7.226682],[9.582518,-3.752210,-1.533041,4.845802,-5.006153],[-6.780194,-8.186824,3.291463,-5.685172,-7.904455],[9.189664,3.806308,-8.014168,9.949504,-1.360573],[3.449460,-8.219241,-2.318789,-4.534984,0.371926],[-4.418732,-8.103853,8.957246,-2.412513,5.785357],[2.607272,4.524546,5.012394,-2.948306,-1.311737],[3.533315,-0.738630,5.042251,-5.844597,2.808415],[-6.597782,3.469130,-6.285822,-1.520613,-7.405557]],[[2.917017,-5.092782,-3.475481,-9.069589,2.835147],[0.650422,-3.340380,-9.468719,-9.459917,3.284569],[-4.822065,9.266887,-5.944317,-3.894055,-4.582914],[-7.791385,5.615153,-2.631465,-3.848797,-1.695961],[1.217644,-7.612559,2.056315,6.309496,0.776928],[9.533435,-8.034149,4.545351,-9.747352,-8.114478],[-8.869346,-9.802183,7.557520,2.651591,9.154618],[0.992719,7.900654,-5.202409,-4.539185,8.125023],[-4.270280,7.692541,8.562328,9.995703,6.732352],[4.611820,-5.569303,3.671103,-1.437300,1.126551],[-9.205182,0.940999,-8.606135,-7.424096,5.584106],[-4.829021,2.979054,6.326714,-1.961870,-4.962621]],[[-8.766031,9.687799,-7.143994,-6.545282,0.859069],[-4.694854,3.529619,-9.786167,-8.712642,-7.791720],[-9.040366,2.143654,6.541627,-8.600568,-4.580165],[3.849134,-4.639791,2.724163,4.907283,-9.506354],[-2.963642,-5.665517,-0.987900,8.889780,7.562326],[-9.633117,3.305511,2.832541,-6.765481,-5.806813],[3.239137,6.849120,0.116640,-5.161031,5.764599],[6.928744,4.470377,6.367867,-8.971742,-2.824860],[-6.472156,5.918219,9.425679,-7.647846,9.501274],[-3.255563,-4.993027,-4.423044,-1.880609,-3.423752],[0.247642,7.568721,8.412627,-2.197088,-5.284306],[-7.577177,-5.937535,-2.450174,-7.119313,6.966229]],[[6.507055,-5.730308,-6.447635,3.516055,6.749917],[-5.330972,-2.894616,-6.617828,-8.403875,1.060088],[3.298059,8.290725,-8.709510,4.663251,3.080889],[-6.833553,-8.931010,-7.020996,7.469635,-3.816646],[-9.801793,-1.227057,-3.798518,-2.313170,9.697209],[5.759739,8.769601,-8.448476,-1.694434,6.133371],[5.463386,4.007267,-9.964470,-8.928006,5.969069],[9.078072,8.721907,-1.178838,-3.958649,-4.913757],[3.012825,-1.034923,-0.070224,-0.930437,3.631500],[-0.115276,2.162935,-9.622244,-9.622678,6.499901],[6.880990,0.972892,-3.357538,0.958335,-4.806201],[7.896461,4.732454,9.579154,-0.780772,2.289639]],[[8.229174,-2.882176,7.290517,-2.438325,5.180275],[2.956685,-4.674077,9.734891,9.492798,5.666178],[-0.753072,6.480801,0.841467,-3.251046,-4.067939],[0.461682,0.971504,-5.290716,-2.512447,-4.062171],[-3.371129,2.960578,-7.076325,-6.539489,0.048430],[-2.147296,-0.456325,5.306170,-2.418743,3.145988],[0.459159,-9.743972,6.349621,6.887970,7.492034],[5.091888,-8.715720,9.141736,-8.051045,-3.263628],[4.723479,2.422046,-9.943029,6.551849,-3.666862],[6.627817,6.018189,2.876427,-3.513561,2.652334],[-7.023210,2.802557,9.886581,-5.154776,-2.182071],[6.415916,9.644987,6.140249,7.462162,-8.379417]]], dtype = "float32")#candidate|7209|(8, 12, 5)|const|float32
bop_7210 = relay.mod(call_7193.astype('float64'), relay.reshape(const_7209.astype('float64'), relay.shape_of(call_7193))) # shape=(8, 12, 5)
bop_7213 = relay.mod(call_7194.astype('float64'), relay.reshape(const_7209.astype('float64'), relay.shape_of(call_7194))) # shape=(8, 12, 5)
output = bop_7210
output2 = bop_7213
func_7219 = relay.Function([], output)
mod['func_7219'] = func_7219
mod = relay.transform.InferType()(mod)
output = func_7219()
func_7220 = relay.Function([], output)
mutated_mod['func_7220'] = func_7220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5579_call = mod.get_global_var('func_5579')
func_5580_call = mutated_mod.get_global_var('func_5580')
call_7242 = relay.TupleGetItem(func_5579_call(), 0)
call_7243 = relay.TupleGetItem(func_5580_call(), 0)
func_6769_call = mod.get_global_var('func_6769')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_7246 = relay.TupleGetItem(func_6769_call(), 0)
call_7247 = relay.TupleGetItem(func_6771_call(), 0)
func_1828_call = mod.get_global_var('func_1828')
func_1831_call = mutated_mod.get_global_var('func_1831')
var_7255 = relay.var("var_7255", dtype = "float64", shape = (700, 2))#candidate|7255|(700, 2)|var|float64
call_7254 = relay.TupleGetItem(func_1828_call(relay.reshape(var_7255.astype('float64'), [10, 14, 10])), 2)
call_7256 = relay.TupleGetItem(func_1831_call(relay.reshape(var_7255.astype('float64'), [10, 14, 10])), 2)
func_5646_call = mod.get_global_var('func_5646')
func_5649_call = mutated_mod.get_global_var('func_5649')
call_7260 = relay.TupleGetItem(func_5646_call(relay.reshape(call_7246.astype('float64'), [2, 9, 10])), 2)
call_7261 = relay.TupleGetItem(func_5649_call(relay.reshape(call_7246.astype('float64'), [2, 9, 10])), 2)
output = relay.Tuple([call_7242,call_7246,call_7254,var_7255,call_7260,])
output2 = relay.Tuple([call_7243,call_7247,call_7256,var_7255,call_7261,])
func_7263 = relay.Function([var_7255,], output)
mod['func_7263'] = func_7263
mod = relay.transform.InferType()(mod)
var_7264 = relay.var("var_7264", dtype = "float64", shape = (700, 2))#candidate|7264|(700, 2)|var|float64
output = func_7263(var_7264)
func_7265 = relay.Function([var_7264], output)
mutated_mod['func_7265'] = func_7265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6871_call = mod.get_global_var('func_6871')
func_6872_call = mutated_mod.get_global_var('func_6872')
call_7284 = func_6871_call()
call_7285 = func_6871_call()
output = call_7284
output2 = call_7285
func_7286 = relay.Function([], output)
mod['func_7286'] = func_7286
mod = relay.transform.InferType()(mod)
mutated_mod['func_7286'] = func_7286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7286_call = mutated_mod.get_global_var('func_7286')
call_7287 = func_7286_call()
output = call_7287
func_7288 = relay.Function([], output)
mutated_mod['func_7288'] = func_7288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_7291 = relay.TupleGetItem(func_3560_call(), 0)
call_7292 = relay.TupleGetItem(func_3562_call(), 0)
output = call_7291
output2 = call_7292
func_7293 = relay.Function([], output)
mod['func_7293'] = func_7293
mod = relay.transform.InferType()(mod)
mutated_mod['func_7293'] = func_7293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7293_call = mutated_mod.get_global_var('func_7293')
call_7294 = func_7293_call()
output = call_7294
func_7295 = relay.Function([], output)
mutated_mod['func_7295'] = func_7295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7341 = relay.var("var_7341", dtype = "float32", shape = (9, 10, 10))#candidate|7341|(9, 10, 10)|var|float32
uop_7342 = relay.atanh(var_7341.astype('float32')) # shape=(9, 10, 10)
output = relay.Tuple([uop_7342,])
output2 = relay.Tuple([uop_7342,])
func_7344 = relay.Function([var_7341,], output)
mod['func_7344'] = func_7344
mod = relay.transform.InferType()(mod)
mutated_mod['func_7344'] = func_7344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7345 = relay.var("var_7345", dtype = "float32", shape = (9, 10, 10))#candidate|7345|(9, 10, 10)|var|float32
func_7344_call = mutated_mod.get_global_var('func_7344')
call_7346 = func_7344_call(var_7345)
output = call_7346
func_7347 = relay.Function([var_7345], output)
mutated_mod['func_7347'] = func_7347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6937_call = mod.get_global_var('func_6937')
func_6938_call = mutated_mod.get_global_var('func_6938')
call_7418 = relay.TupleGetItem(func_6937_call(), 0)
call_7419 = relay.TupleGetItem(func_6938_call(), 0)
func_2751_call = mod.get_global_var('func_2751')
func_2755_call = mutated_mod.get_global_var('func_2755')
var_7426 = relay.var("var_7426", dtype = "uint32", shape = (2, 336))#candidate|7426|(2, 336)|var|uint32
var_7427 = relay.var("var_7427", dtype = "float64", shape = (64,))#candidate|7427|(64,)|var|float64
call_7425 = relay.TupleGetItem(func_2751_call(relay.reshape(var_7426.astype('uint32'), [16, 14, 3]), relay.reshape(var_7427.astype('float64'), [4, 16]), ), 1)
call_7428 = relay.TupleGetItem(func_2755_call(relay.reshape(var_7426.astype('uint32'), [16, 14, 3]), relay.reshape(var_7427.astype('float64'), [4, 16]), ), 1)
func_7293_call = mod.get_global_var('func_7293')
func_7295_call = mutated_mod.get_global_var('func_7295')
call_7432 = func_7293_call()
call_7433 = func_7293_call()
output = relay.Tuple([call_7418,call_7425,var_7426,var_7427,call_7432,])
output2 = relay.Tuple([call_7419,call_7428,var_7426,var_7427,call_7433,])
func_7437 = relay.Function([var_7426,var_7427,], output)
mod['func_7437'] = func_7437
mod = relay.transform.InferType()(mod)
mutated_mod['func_7437'] = func_7437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7437_call = mutated_mod.get_global_var('func_7437')
var_7439 = relay.var("var_7439", dtype = "uint32", shape = (2, 336))#candidate|7439|(2, 336)|var|uint32
var_7440 = relay.var("var_7440", dtype = "float64", shape = (64,))#candidate|7440|(64,)|var|float64
call_7438 = func_7437_call(var_7439,var_7440,)
output = call_7438
func_7441 = relay.Function([var_7439,var_7440,], output)
mutated_mod['func_7441'] = func_7441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3730_call = mod.get_global_var('func_3730')
func_3731_call = mutated_mod.get_global_var('func_3731')
call_7454 = relay.TupleGetItem(func_3730_call(), 0)
call_7455 = relay.TupleGetItem(func_3731_call(), 0)
func_5579_call = mod.get_global_var('func_5579')
func_5580_call = mutated_mod.get_global_var('func_5580')
call_7457 = relay.TupleGetItem(func_5579_call(), 0)
call_7458 = relay.TupleGetItem(func_5580_call(), 0)
func_7097_call = mod.get_global_var('func_7097')
func_7101_call = mutated_mod.get_global_var('func_7101')
const_7464 = relay.const([[8,3,-1,5,10,-6,-8,9,8,10,-6,1,1,-10,-9],[-1,-10,-6,-5,-4,1,-1,-5,-8,6,5,8,3,5,-2],[-4,9,7,4,8,-6,2,-9,2,9,7,9,10,-5,-5],[-9,-9,-4,6,10,-6,3,6,4,-9,-5,7,-2,-7,-1],[-5,3,9,-2,-5,-6,-9,-8,1,4,-7,8,4,-8,-6],[-5,-9,7,-6,-2,-3,2,9,8,4,-4,2,2,10,7],[10,9,10,7,6,7,-10,-1,8,1,-3,2,4,1,7],[4,-10,7,10,8,-3,-5,-1,-4,-8,-3,-9,-4,3,1],[-5,-5,7,-7,-8,-2,9,4,6,10,-2,-4,-8,-5,6],[-8,10,-8,-9,-3,9,8,5,-9,-1,-4,10,5,8,10],[6,7,-3,-3,9,9,-1,7,8,-8,4,9,2,3,-4],[6,-1,7,7,8,6,-3,2,-5,-7,-7,-5,-5,2,8],[1,9,-8,-9,6,2,-3,-1,6,-5,-8,-4,-3,-1,8],[-3,7,2,8,-2,-9,8,-9,8,2,-8,10,-5,-2,-7],[8,-1,4,2,-7,8,-9,9,-3,5,2,8,-7,4,1],[-2,-3,-6,6,-9,-2,-8,-1,-3,4,2,3,-10,2,2],[5,-2,6,-5,6,7,1,3,4,8,3,-6,9,9,-7],[-7,-6,1,9,-6,10,-6,-9,-6,-4,3,-4,6,-2,-9],[5,-1,6,-2,-10,3,2,-2,10,-5,10,-2,4,2,-2],[-7,8,9,-2,1,3,-1,-5,7,-8,-8,10,-7,-9,-4],[-1,-1,9,-2,-4,2,-7,2,5,-7,-4,5,8,-2,-10],[-1,5,7,3,6,2,-5,-10,-3,8,10,-9,-6,7,-6],[-4,8,-7,5,6,-9,1,9,1,-8,6,-1,-3,1,-6],[-6,2,-2,-1,-10,10,5,-3,5,-8,3,3,8,10,5],[-4,4,7,6,-3,-4,6,-6,-4,1,6,-8,7,-4,-5],[2,-1,7,4,-5,8,2,9,-2,-1,-6,8,-5,-2,-3],[9,8,4,8,-7,-5,-2,-10,6,-3,5,-1,5,-10,-4],[-6,8,3,-1,8,-3,4,1,-4,6,-4,-7,5,-3,-1],[-8,10,-4,6,5,3,8,-3,3,-5,-7,1,-6,-7,1],[-5,-6,-5,-9,6,-8,2,-6,4,-4,-8,10,2,8,-4],[-9,10,-6,-6,7,-1,-8,-10,9,6,6,2,-5,-3,-6],[-2,8,10,6,-2,-7,7,-7,-4,4,8,5,-6,-6,3],[-8,7,-4,1,-5,2,-6,-9,-9,-7,-2,3,-7,-8,-9],[-7,4,2,-2,-10,6,1,3,4,3,-5,8,-4,6,-10],[-3,-4,10,6,9,-1,8,-8,9,2,-3,9,-4,8,5],[7,-4,4,6,-8,-6,1,-10,-6,1,3,7,-3,6,-3],[9,10,10,1,-4,3,9,-5,-5,8,-8,-7,-6,6,-4],[-7,-8,8,1,-3,8,8,-2,-6,3,-10,-8,8,7,-8],[-4,4,1,9,1,8,10,9,-8,-6,1,-4,2,3,-7],[-10,5,2,-6,-8,4,8,-6,5,-2,-5,-6,-1,10,-8],[4,-7,-2,5,-1,-4,-10,1,9,-10,-7,-3,-5,-1,-8],[-3,7,-9,10,-4,6,-7,10,4,4,-10,2,-5,-8,3],[5,8,9,-10,1,1,-6,8,8,7,8,4,1,-7,8],[-6,-10,-7,-4,-8,-5,-4,1,6,4,3,1,9,9,-4],[8,1,6,6,7,5,-5,10,1,-7,-9,6,-10,-1,-1],[-7,5,-6,6,-1,6,-2,4,-8,9,-9,-6,8,10,-6],[-4,-1,-10,2,-8,8,8,6,-5,-9,10,1,-5,-1,-8],[-7,9,-5,-6,7,-9,-10,7,1,10,6,-7,5,8,8],[-2,-10,4,2,-2,6,5,10,-3,6,2,3,-9,-3,6],[-4,-4,-9,-2,10,1,-7,3,-8,2,-10,-6,-4,-3,5],[-8,-6,-3,-3,-8,-1,9,5,9,8,9,-6,1,3,8],[-3,-5,9,6,7,4,-4,7,-5,-5,10,1,1,5,-5],[-2,-9,7,-8,-7,8,-2,6,-4,-8,4,-4,-1,8,-1],[-10,1,-1,-5,-3,2,6,4,5,-3,-8,8,-3,-7,6],[-3,-2,-4,-3,1,-1,-7,-9,9,10,7,-8,-10,-4,1],[6,4,8,-10,-7,9,6,-9,9,-8,-9,-9,-10,9,5],[-3,3,10,7,2,-4,6,-7,4,-2,-6,-9,-9,3,2],[7,10,3,3,3,6,6,-7,4,10,-6,-6,-3,-6,4],[-4,-3,2,6,6,1,-9,3,-2,7,-4,10,10,6,10],[3,-10,8,-2,5,8,-1,3,-10,2,8,-2,5,-4,7],[-10,7,5,-2,-4,5,5,6,10,4,5,8,-2,9,-4],[1,-7,4,6,10,-4,-1,-3,-8,4,6,4,7,7,-6],[-4,-4,7,-6,-5,4,-3,10,-1,10,-10,5,10,-2,9],[7,6,6,-1,-6,-9,10,7,-10,8,-4,-8,-2,2,-7],[-5,2,-8,-5,-1,7,-3,-3,-7,-9,-3,-3,3,-1,-3],[-3,3,-8,-6,-9,-5,-6,-5,7,2,-7,10,-7,-7,-7],[7,9,-5,-10,-1,7,-7,-4,-4,4,-8,2,-5,10,-7],[4,-7,5,-1,5,4,-8,7,-3,3,-4,2,-7,-4,9],[-4,-9,-6,-2,-9,-9,-9,4,-8,-6,6,-2,-7,-3,7],[-4,5,-1,8,-7,10,-10,4,-4,2,-3,-9,7,3,-7]], dtype = "uint16")#candidate|7464|(70, 15)|const|uint16
var_7465 = relay.var("var_7465", dtype = "float32", shape = (315,))#candidate|7465|(315,)|var|float32
call_7463 = relay.TupleGetItem(func_7097_call(relay.reshape(call_7454.astype('float64'), [12, 5, 3]), relay.reshape(const_7464.astype('uint16'), [1050,]), relay.reshape(var_7465.astype('float32'), [3, 15, 7]), ), 12)
call_7466 = relay.TupleGetItem(func_7101_call(relay.reshape(call_7454.astype('float64'), [12, 5, 3]), relay.reshape(const_7464.astype('uint16'), [1050,]), relay.reshape(var_7465.astype('float32'), [3, 15, 7]), ), 12)
output = relay.Tuple([call_7454,call_7457,call_7463,const_7464,var_7465,])
output2 = relay.Tuple([call_7455,call_7458,call_7466,const_7464,var_7465,])
func_7469 = relay.Function([var_7465,], output)
mod['func_7469'] = func_7469
mod = relay.transform.InferType()(mod)
mutated_mod['func_7469'] = func_7469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7470 = relay.var("var_7470", dtype = "float32", shape = (315,))#candidate|7470|(315,)|var|float32
func_7469_call = mutated_mod.get_global_var('func_7469')
call_7471 = func_7469_call(var_7470)
output = call_7471
func_7472 = relay.Function([var_7470], output)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7477 = relay.var("var_7477", dtype = "float32", shape = (2, 2, 5))#candidate|7477|(2, 2, 5)|var|float32
var_7478 = relay.var("var_7478", dtype = "float32", shape = (2, 2, 5))#candidate|7478|(2, 2, 5)|var|float32
bop_7479 = relay.power(var_7477.astype('float32'), relay.reshape(var_7478.astype('float32'), relay.shape_of(var_7477))) # shape=(2, 2, 5)
output = relay.Tuple([bop_7479,])
output2 = relay.Tuple([bop_7479,])
F = relay.Function([var_7477,var_7478,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7477,var_7478,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

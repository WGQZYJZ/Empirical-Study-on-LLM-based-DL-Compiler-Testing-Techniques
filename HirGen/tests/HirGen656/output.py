import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_128 = relay.const(-3, dtype = "int16")#candidate|128|()|const|int16
var_129 = relay.var("var_129", dtype = "int16", shape = (13, 11, 1))#candidate|129|(13, 11, 1)|var|int16
bop_130 = relay.left_shift(const_128.astype('int16'), var_129.astype('int16')) # shape=(13, 11, 1)
bop_155 = relay.bitwise_or(var_129.astype('int16'), relay.reshape(bop_130.astype('int16'), relay.shape_of(var_129))) # shape=(13, 11, 1)
bop_161 = relay.greater(var_129.astype('bool'), relay.reshape(bop_155.astype('bool'), relay.shape_of(var_129))) # shape=(13, 11, 1)
bop_182 = relay.logical_and(bop_155.astype('bool'), relay.reshape(bop_130.astype('bool'), relay.shape_of(bop_155))) # shape=(13, 11, 1)
uop_185 = relay.asin(bop_161.astype('float64')) # shape=(13, 11, 1)
output = relay.Tuple([bop_182,uop_185,])
output2 = relay.Tuple([bop_182,uop_185,])
func_192 = relay.Function([var_129,], output)
mod['func_192'] = func_192
mod = relay.transform.InferType()(mod)
mutated_mod['func_192'] = func_192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_193 = relay.var("var_193", dtype = "int16", shape = (13, 11, 1))#candidate|193|(13, 11, 1)|var|int16
func_192_call = mutated_mod.get_global_var('func_192')
call_194 = func_192_call(var_193)
output = call_194
func_195 = relay.Function([var_193], output)
mutated_mod['func_195'] = func_195
mutated_mod = relay.transform.InferType()(mutated_mod)
const_318 = relay.const(2, dtype = "int64")#candidate|318|()|const|int64
var_319 = relay.var("var_319", dtype = "int64", shape = (5, 6, 8))#candidate|319|(5, 6, 8)|var|int64
bop_320 = relay.bitwise_and(const_318.astype('int64'), var_319.astype('int64')) # shape=(5, 6, 8)
const_328 = relay.const([[[5,7,-9,-4,5,-10,-5,-9],[8,-10,-8,2,4,-5,5,9],[1,9,-10,-2,-10,-3,5,-8],[1,1,-6,7,7,2,-7,3],[-8,9,5,2,-6,-10,5,5],[5,-7,9,10,-8,-7,5,5]],[[10,9,7,-1,-4,-5,9,7],[6,-5,-8,8,-7,-10,-4,-4],[-3,2,-4,-3,5,9,10,8],[-8,10,7,-1,-4,7,-10,-4],[5,10,-10,8,-5,-9,-1,-10],[7,-4,-9,-9,7,-2,-6,-7]],[[4,-10,2,-10,-7,1,-6,-8],[10,-7,8,-1,9,-2,-10,8],[8,-10,8,-9,-1,-2,1,9],[-3,-2,10,5,-7,-8,8,10],[-4,6,2,-4,8,-9,-5,2],[-3,-8,-8,-6,-2,1,-8,5]],[[3,3,-9,-10,2,-5,10,-6],[4,7,1,-6,-8,4,-9,-8],[-2,-10,8,7,-9,-9,-2,1],[-1,7,-4,6,9,5,-8,-8],[6,3,-8,-5,5,-8,-1,2],[-9,-3,-1,2,8,5,4,8]],[[3,-5,-2,-10,6,-5,-8,8],[-5,10,-9,-3,2,3,-3,-8],[-2,9,-5,10,-6,-8,-1,2],[9,-1,6,5,4,-6,9,-5],[-8,5,-3,7,-2,-6,3,-1],[1,1,8,7,-6,-8,6,-3]]], dtype = "int64")#candidate|328|(5, 6, 8)|const|int64
bop_329 = relay.logical_and(var_319.astype('bool'), relay.reshape(const_328.astype('bool'), relay.shape_of(var_319))) # shape=(5, 6, 8)
output = relay.Tuple([bop_320,bop_329,])
output2 = relay.Tuple([bop_320,bop_329,])
func_343 = relay.Function([var_319,], output)
mod['func_343'] = func_343
mod = relay.transform.InferType()(mod)
mutated_mod['func_343'] = func_343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_344 = relay.var("var_344", dtype = "int64", shape = (5, 6, 8))#candidate|344|(5, 6, 8)|var|int64
func_343_call = mutated_mod.get_global_var('func_343')
call_345 = func_343_call(var_344)
output = call_345
func_346 = relay.Function([var_344], output)
mutated_mod['func_346'] = func_346
mutated_mod = relay.transform.InferType()(mutated_mod)
var_645 = relay.var("var_645", dtype = "int32", shape = (4, 6, 12))#candidate|645|(4, 6, 12)|var|int32
var_646 = relay.var("var_646", dtype = "int32", shape = (4, 6, 12))#candidate|646|(4, 6, 12)|var|int32
bop_647 = relay.bitwise_or(var_645.astype('int32'), relay.reshape(var_646.astype('int32'), relay.shape_of(var_645))) # shape=(4, 6, 12)
output = bop_647
output2 = bop_647
func_663 = relay.Function([var_645,var_646,], output)
mod['func_663'] = func_663
mod = relay.transform.InferType()(mod)
var_664 = relay.var("var_664", dtype = "int32", shape = (4, 6, 12))#candidate|664|(4, 6, 12)|var|int32
var_665 = relay.var("var_665", dtype = "int32", shape = (4, 6, 12))#candidate|665|(4, 6, 12)|var|int32
output = func_663(var_664,var_665,)
func_666 = relay.Function([var_664,var_665,], output)
mutated_mod['func_666'] = func_666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1104 = relay.var("var_1104", dtype = "int32", shape = (6, 14, 3))#candidate|1104|(6, 14, 3)|var|int32
var_1105 = relay.var("var_1105", dtype = "int32", shape = (6, 14, 3))#candidate|1105|(6, 14, 3)|var|int32
bop_1106 = relay.less_equal(var_1104.astype('bool'), relay.reshape(var_1105.astype('bool'), relay.shape_of(var_1104))) # shape=(6, 14, 3)
output = bop_1106
output2 = bop_1106
func_1115 = relay.Function([var_1104,var_1105,], output)
mod['func_1115'] = func_1115
mod = relay.transform.InferType()(mod)
var_1116 = relay.var("var_1116", dtype = "int32", shape = (6, 14, 3))#candidate|1116|(6, 14, 3)|var|int32
var_1117 = relay.var("var_1117", dtype = "int32", shape = (6, 14, 3))#candidate|1117|(6, 14, 3)|var|int32
output = func_1115(var_1116,var_1117,)
func_1118 = relay.Function([var_1116,var_1117,], output)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1655 = relay.var("var_1655", dtype = "float32", shape = (1, 2, 13))#candidate|1655|(1, 2, 13)|var|float32
uop_1656 = relay.log10(var_1655.astype('float32')) # shape=(1, 2, 13)
output = relay.Tuple([uop_1656,])
output2 = relay.Tuple([uop_1656,])
func_1659 = relay.Function([var_1655,], output)
mod['func_1659'] = func_1659
mod = relay.transform.InferType()(mod)
var_1660 = relay.var("var_1660", dtype = "float32", shape = (1, 2, 13))#candidate|1660|(1, 2, 13)|var|float32
output = func_1659(var_1660)
func_1661 = relay.Function([var_1660], output)
mutated_mod['func_1661'] = func_1661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2018 = relay.var("var_2018", dtype = "float64", shape = (15, 10, 11))#candidate|2018|(15, 10, 11)|var|float64
uop_2019 = relay.asinh(var_2018.astype('float64')) # shape=(15, 10, 11)
output = uop_2019
output2 = uop_2019
func_2024 = relay.Function([var_2018,], output)
mod['func_2024'] = func_2024
mod = relay.transform.InferType()(mod)
mutated_mod['func_2024'] = func_2024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2025 = relay.var("var_2025", dtype = "float64", shape = (15, 10, 11))#candidate|2025|(15, 10, 11)|var|float64
func_2024_call = mutated_mod.get_global_var('func_2024')
call_2026 = func_2024_call(var_2025)
output = call_2026
func_2027 = relay.Function([var_2025], output)
mutated_mod['func_2027'] = func_2027
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2131 = relay.const([[[-5.349100,-3.552215,9.696639,5.738281,4.301228],[6.165999,8.145020,9.166112,-8.921185,-3.689296],[-0.406899,-4.034576,1.817661,0.486999,8.423948],[-8.314528,-0.683944,1.032835,4.709938,-4.685629],[-8.805280,1.638681,-9.692083,1.467063,5.428838],[3.759890,-4.738597,-6.258883,4.315243,-7.178971],[-5.047397,-1.934803,-3.721523,7.850256,-9.428155]],[[-6.449004,1.909545,-6.254028,-3.284441,-8.444723],[0.386374,0.563506,9.014064,-0.372313,-2.370185],[7.104996,7.071882,7.194510,-5.902036,5.737986],[-7.414088,3.334639,-4.562952,-4.449556,5.124887],[-2.103985,-3.016148,3.642080,9.057199,-6.887077],[-0.914031,5.398312,7.556688,0.841576,7.220872],[9.431377,-1.627195,3.872478,-8.959008,8.472592]]], dtype = "float64")#candidate|2131|(2, 7, 5)|const|float64
uop_2132 = relay.cos(const_2131.astype('float64')) # shape=(2, 7, 5)
output = relay.Tuple([uop_2132,])
output2 = relay.Tuple([uop_2132,])
func_2153 = relay.Function([], output)
mod['func_2153'] = func_2153
mod = relay.transform.InferType()(mod)
output = func_2153()
func_2154 = relay.Function([], output)
mutated_mod['func_2154'] = func_2154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2168 = relay.TupleGetItem(func_2153_call(), 0)
call_2169 = relay.TupleGetItem(func_2154_call(), 0)
output = call_2168
output2 = call_2169
func_2170 = relay.Function([], output)
mod['func_2170'] = func_2170
mod = relay.transform.InferType()(mod)
mutated_mod['func_2170'] = func_2170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mutated_mod.get_global_var('func_2170')
call_2171 = func_2170_call()
output = call_2171
func_2172 = relay.Function([], output)
mutated_mod['func_2172'] = func_2172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_2198 = func_2170_call()
call_2199 = func_2170_call()
output = call_2198
output2 = call_2199
func_2204 = relay.Function([], output)
mod['func_2204'] = func_2204
mod = relay.transform.InferType()(mod)
output = func_2204()
func_2205 = relay.Function([], output)
mutated_mod['func_2205'] = func_2205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2301 = relay.var("var_2301", dtype = "float32", shape = (16, 12, 8))#candidate|2301|(16, 12, 8)|var|float32
uop_2302 = relay.sin(var_2301.astype('float32')) # shape=(16, 12, 8)
func_1659_call = mod.get_global_var('func_1659')
func_1661_call = mutated_mod.get_global_var('func_1661')
var_2305 = relay.var("var_2305", dtype = "float32", shape = (26, 1))#candidate|2305|(26, 1)|var|float32
call_2304 = relay.TupleGetItem(func_1659_call(relay.reshape(var_2305.astype('float32'), [1, 2, 13])), 0)
call_2306 = relay.TupleGetItem(func_1661_call(relay.reshape(var_2305.astype('float32'), [1, 2, 13])), 0)
bop_2311 = relay.greater_equal(uop_2302.astype('bool'), relay.reshape(var_2301.astype('bool'), relay.shape_of(uop_2302))) # shape=(16, 12, 8)
output = relay.Tuple([call_2304,var_2305,bop_2311,])
output2 = relay.Tuple([call_2306,var_2305,bop_2311,])
func_2317 = relay.Function([var_2301,var_2305,], output)
mod['func_2317'] = func_2317
mod = relay.transform.InferType()(mod)
var_2318 = relay.var("var_2318", dtype = "float32", shape = (16, 12, 8))#candidate|2318|(16, 12, 8)|var|float32
var_2319 = relay.var("var_2319", dtype = "float32", shape = (26, 1))#candidate|2319|(26, 1)|var|float32
output = func_2317(var_2318,var_2319,)
func_2320 = relay.Function([var_2318,var_2319,], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_2369 = func_2170_call()
call_2370 = func_2170_call()
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_2376 = func_2170_call()
call_2377 = func_2170_call()
output = relay.Tuple([call_2369,call_2376,])
output2 = relay.Tuple([call_2370,call_2377,])
func_2382 = relay.Function([], output)
mod['func_2382'] = func_2382
mod = relay.transform.InferType()(mod)
mutated_mod['func_2382'] = func_2382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mutated_mod.get_global_var('func_2382')
call_2383 = func_2382_call()
output = call_2383
func_2384 = relay.Function([], output)
mutated_mod['func_2384'] = func_2384
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2396 = relay.const([[[0.641252,-1.005543,7.554467,1.747672,-5.571976],[-9.845044,1.241988,8.688281,6.432914,-0.873276],[7.727652,-2.666396,-3.634403,-6.799822,-1.018783],[-0.028233,6.200979,6.772951,-5.890782,3.901519],[9.272407,-8.441523,5.411805,-0.525236,-8.788476],[-8.713203,1.698494,6.409585,-8.276578,8.608712],[4.455773,-9.821198,-4.269749,9.210087,-1.485326],[9.342810,-4.785678,-8.040799,-7.595580,-3.640086],[-5.704565,-6.762860,7.724874,5.889343,6.566303]],[[0.576382,-5.792226,-4.978642,3.887673,3.118959],[-1.358221,7.825318,-6.869463,-3.723996,1.238198],[-5.981991,9.715868,2.768383,-4.172080,-4.084964],[-5.335063,1.372229,3.269490,3.976857,5.902209],[5.269636,-9.779779,6.818555,-5.359108,6.554941],[-1.073910,2.630566,-5.602042,9.154207,6.089961],[7.944566,6.391184,-8.501902,-2.956829,9.705203],[-9.663098,5.093559,0.391709,-3.260120,2.238626],[4.622619,5.996972,7.655992,-1.187260,-1.353761]],[[0.528517,6.886186,-5.316548,1.178026,4.445088],[8.694535,8.186510,-3.068357,2.141647,2.319833],[-4.173439,-5.560637,9.559207,-4.453663,-6.630493],[-0.819249,-6.453775,-5.303914,3.610788,0.805983],[-5.623156,2.920887,0.739745,0.905790,-5.098447],[2.157370,0.162164,-8.189071,-4.733244,-7.954003],[5.985246,-7.307098,-4.213518,2.361746,-8.506013],[4.948069,4.788205,4.111067,-5.106994,1.493804],[0.427010,-8.677885,-8.391350,4.270637,8.364721]],[[-1.386750,-6.919202,-1.142669,3.789045,1.059480],[-2.955715,3.629418,6.055939,-8.767598,1.486022],[-1.013940,3.523402,4.831934,2.932429,-4.536689],[6.270543,6.832997,0.617648,-0.399087,0.280407],[-0.789039,-4.902889,0.372304,-1.729399,-7.873071],[8.715628,-2.249444,8.998269,3.502208,0.072407],[6.122088,-0.241365,-4.293455,-7.766127,-7.320326],[-3.981871,5.824281,-8.682131,-4.314913,-5.818844],[-3.381475,2.520734,-1.566953,4.796272,6.729684]],[[7.166452,4.975893,-3.815538,6.590944,-1.829866],[-7.642339,8.006473,-4.811612,5.574624,-6.519895],[3.327307,5.571350,-9.149572,3.923859,7.808780],[-6.569132,8.839513,-4.838830,1.224655,-9.567681],[-5.947950,8.741898,-0.577005,7.815313,-3.154927],[9.261580,5.219622,5.201881,1.070066,0.866137],[0.601760,1.049953,0.856468,-4.594357,-1.567028],[-5.141302,-5.350944,-6.861508,9.960707,-7.479679],[1.200376,6.343851,-9.389502,-0.998893,4.498648]],[[5.007109,3.260219,8.166926,-7.950577,-3.032017],[-3.638883,8.076382,-4.490848,1.512385,-2.201270],[4.561609,-0.824449,-9.608056,9.656035,-1.890326],[-2.734991,-7.858594,-4.065190,-6.528484,5.344225],[3.628600,2.976634,-7.661636,-2.868931,-5.324613],[6.971319,4.948036,-8.597169,1.751144,-5.527072],[6.272476,0.068004,9.661217,6.191167,-0.087617],[-6.243026,8.460048,0.912252,1.625510,0.952898],[-0.347844,8.916008,-6.145078,1.224690,-6.314461]],[[7.422269,-5.946449,1.237557,4.507536,2.687631],[6.647074,0.520266,2.939875,7.389702,3.701833],[-5.306091,7.602700,9.098812,-9.715701,6.919271],[-8.553278,-0.232394,2.658331,-2.991516,-9.905546],[1.176740,8.124315,-0.660273,3.387353,8.313250],[2.747451,-2.875155,-7.946673,-5.082291,-1.757076],[1.597810,1.144568,7.692713,7.174561,9.438217],[7.325341,0.398176,9.904620,3.248348,4.375082],[9.459725,0.220438,-3.468506,5.291187,-6.632553]],[[-4.672048,0.294938,2.353532,0.364861,-0.816014],[-4.962460,4.633670,3.760085,-8.773851,9.447038],[4.651796,-9.122556,-0.458536,-3.240397,4.211553],[2.868056,-2.389246,2.572996,3.049338,-7.990706],[3.269524,7.836412,0.203249,-4.833545,3.555540],[4.617334,-3.973521,6.539131,-9.443960,0.759936],[-8.052305,-1.639258,6.143153,-8.526622,-6.985656],[-2.688539,-3.159520,-8.562908,-0.304376,3.756727],[-5.842242,1.321942,-3.649760,0.924322,-7.168680]],[[-7.830954,7.477143,-4.714604,5.965495,2.450431],[9.911799,0.703558,6.228955,7.913361,-7.963888],[0.516623,-3.850729,-5.108955,-9.814137,8.452357],[-6.620053,2.832686,-1.174220,-0.677033,5.342821],[3.131031,5.781445,-4.557373,-0.171659,0.810286],[-8.082599,2.609069,1.854384,4.291509,1.567028],[-8.176004,-0.740246,6.898805,8.240428,-1.793875],[8.975700,-2.089179,5.293995,2.282738,-2.097720],[-5.008852,-0.899992,4.817925,9.094451,5.033038]],[[-3.207231,-9.225429,9.005569,5.060161,3.322674],[8.295960,-2.864673,-2.066843,-6.945309,9.234384],[-0.924629,7.123382,-9.865123,-2.385598,9.996866],[-9.408918,4.024390,1.477870,6.503108,-7.405108],[-0.207203,3.049600,7.424309,-2.539525,-8.482153],[-8.078880,-2.366475,9.144770,6.433290,-5.568450],[8.187498,-9.061457,-3.060344,1.410540,-2.190660],[-4.351564,-1.043266,1.657061,6.054106,7.332265],[-4.732418,-0.600668,-3.618603,0.302719,1.014547]]], dtype = "float32")#candidate|2396|(10, 9, 5)|const|float32
uop_2397 = relay.sin(const_2396.astype('float32')) # shape=(10, 9, 5)
uop_2410 = relay.log2(uop_2397.astype('float32')) # shape=(10, 9, 5)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_2419 = relay.TupleGetItem(func_2382_call(), 0)
call_2420 = relay.TupleGetItem(func_2384_call(), 0)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2424 = relay.TupleGetItem(func_2153_call(), 0)
call_2425 = relay.TupleGetItem(func_2154_call(), 0)
func_1659_call = mod.get_global_var('func_1659')
func_1661_call = mutated_mod.get_global_var('func_1661')
const_2431 = relay.const([-7.631259,1.884326,-3.848364,9.522854,-9.360483,-6.342582,-1.257351,6.430748,-8.527975,-8.431265,4.178814,4.903493,6.452110,2.284615,0.352214,-8.178207,1.559036,-2.594184,3.303925,-2.329152,4.087735,-3.554069,-0.508418,4.032240,-3.500656,-4.967453], dtype = "float32")#candidate|2431|(26,)|const|float32
call_2430 = relay.TupleGetItem(func_1659_call(relay.reshape(const_2431.astype('float32'), [1, 2, 13])), 0)
call_2432 = relay.TupleGetItem(func_1661_call(relay.reshape(const_2431.astype('float32'), [1, 2, 13])), 0)
bop_2436 = relay.greater(call_2430.astype('bool'), relay.reshape(const_2431.astype('bool'), relay.shape_of(call_2430))) # shape=(1, 2, 13)
bop_2439 = relay.greater(call_2432.astype('bool'), relay.reshape(const_2431.astype('bool'), relay.shape_of(call_2432))) # shape=(1, 2, 13)
bop_2440 = relay.bitwise_xor(uop_2410.astype('int64'), relay.reshape(uop_2397.astype('int64'), relay.shape_of(uop_2410))) # shape=(10, 9, 5)
func_192_call = mod.get_global_var('func_192')
func_195_call = mutated_mod.get_global_var('func_195')
const_2444 = relay.const([-6,-5,-1,2,1,-6,-2,1,-5,-9,9,-10,1,-5,10,-6,-6,-1,-4,-5,-8,-3,5,-4,-4,-5,-1,10,-8,8,-2,4,5,-5,10,-3,2,-9,-10,7,5,9,-10,7,3,-6,10,-10,-7,4,-6,6,-3,-7,9,8,-8,2,-5,8,4,10,-5,-9,-7,10,9,3,2,-4,-6,6,1,-3,-7,-4,-6,5,7,4,6,-9,-1,-7,-4,7,-5,-5,-1,5,-1,8,-3,1,-6,6,-10,-9,7,5,8,3,-4,-2,-9,4,-3,-9,7,8,4,7,9,6,-1,9,-2,-3,-9,5,1,7,-4,-4,-8,-8,4,-6,-1,-9,5,2,-10,-6,-1,8,2,9,4,9,-4,4,-2], dtype = "int16")#candidate|2444|(143,)|const|int16
call_2443 = relay.TupleGetItem(func_192_call(relay.reshape(const_2444.astype('int16'), [13, 11, 1])), 1)
call_2445 = relay.TupleGetItem(func_195_call(relay.reshape(const_2444.astype('int16'), [13, 11, 1])), 1)
output = relay.Tuple([call_2419,call_2424,bop_2436,bop_2440,call_2443,const_2444,])
output2 = relay.Tuple([call_2420,call_2425,bop_2439,bop_2440,call_2445,const_2444,])
func_2456 = relay.Function([], output)
mod['func_2456'] = func_2456
mod = relay.transform.InferType()(mod)
output = func_2456()
func_2457 = relay.Function([], output)
mutated_mod['func_2457'] = func_2457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_2518 = func_2204_call()
call_2519 = func_2204_call()
func_2024_call = mod.get_global_var('func_2024')
func_2027_call = mutated_mod.get_global_var('func_2027')
const_2521 = relay.const([[3.825222,-4.724153,-1.472628,0.609370,-2.104923,-1.089480,7.374150,-3.879578,-0.428760,2.840859,4.522386,-0.615258,-8.867962,2.778453,-7.644898],[-4.370945,9.250019,-6.151662,4.591404,-1.635666,7.703826,-7.684612,-1.805013,-9.828068,-1.453663,-6.690500,4.991163,4.007946,-7.664396,2.030068],[7.135515,-5.327920,-2.894660,-1.932962,3.488885,-2.174805,-1.619758,4.113489,0.501046,0.933211,5.253906,1.412766,-9.498054,-1.317696,8.304553],[7.006469,4.810750,-9.183921,-5.436571,1.919353,3.087521,2.345287,-6.547243,-1.477851,-8.671439,8.203966,0.659290,9.265301,-8.938241,6.482020],[7.338041,-3.706502,-1.010404,-7.330807,4.634836,-8.013748,6.141070,-3.708044,-9.657685,5.429971,4.108792,-1.102173,8.176980,-4.694182,7.113961],[-8.161944,4.668408,4.475310,4.985773,-6.299410,5.775999,6.545210,-5.096916,-9.807962,-9.859688,-9.032458,5.796306,2.244049,-8.926252,-2.080292],[0.309814,-0.645804,0.806258,-0.379407,7.233154,6.524698,-0.247726,-4.786520,8.580574,7.672029,-8.018772,3.866070,1.381361,1.250831,-9.827820],[6.368945,-0.264431,-6.726233,-0.600740,-8.717313,-9.746822,-9.039094,-0.378558,1.829760,-7.875339,8.996172,-3.174093,-6.083385,2.792256,8.813963],[2.681702,0.424858,-0.456745,2.558294,2.108469,3.643538,4.715374,-9.060071,-2.311305,8.919248,-4.145401,9.835710,0.515394,-9.486576,2.715002],[4.863594,8.815166,-6.886905,-9.467553,-8.826937,0.079855,3.917063,4.735574,-4.880891,-6.522276,-9.609219,7.538654,6.817753,7.894539,6.466428],[-7.306513,2.561101,-5.102871,1.640246,4.817380,-3.335913,1.817849,-5.852620,9.999339,-2.275300,-1.772222,-5.970621,3.691369,8.737013,-4.605290],[4.438081,2.256695,-2.773894,4.499276,-1.676762,0.335535,1.620262,3.700806,5.259559,0.984452,-8.313675,1.149136,7.256281,-5.547318,4.374644],[2.545667,4.365606,-7.928366,-3.035173,-9.607689,-4.214612,5.413615,-8.356048,0.626884,1.216930,-0.374617,4.449982,9.969275,-3.722895,3.212539],[-6.055890,-4.056530,3.449436,6.310683,-3.442820,-8.276185,0.017469,3.394229,-2.503759,4.313052,1.582013,2.116421,2.888585,6.567096,6.616365],[-2.852831,4.920325,8.109623,0.964040,0.727254,-7.029616,-0.627715,1.967270,-2.501382,3.415635,-5.939424,0.480077,1.017843,-5.950862,-0.543849],[1.455808,9.220043,2.447538,0.952527,5.879821,0.021212,-7.196292,4.498112,0.111180,-7.070010,6.029969,1.324144,-8.621216,-6.620759,1.258817],[-0.831883,6.240600,5.917596,4.308434,4.784903,5.261509,-4.432003,-1.856288,-6.819174,1.948515,-8.626130,5.235935,4.431284,-3.980433,-6.604689],[-3.268756,-8.206139,-4.816866,3.695377,-2.982131,-2.809863,5.928249,-1.052116,-9.056632,3.975111,3.113122,-9.482950,3.231661,-0.548197,9.102736],[0.201139,-3.991204,5.964212,6.406321,-5.726329,9.028063,-3.442225,6.928491,8.781789,6.771850,-9.708322,-5.956107,7.519770,-3.860293,-5.603851],[-9.042309,-7.965749,0.724895,1.951203,-7.145905,7.109866,-5.221036,-4.420674,-3.487925,9.466098,-8.623556,-4.153609,-2.186887,-0.788331,2.116377],[9.747905,-2.575894,-4.263615,7.419774,-0.684943,6.738735,-9.554012,9.732737,-6.267212,-6.206306,7.790169,7.748384,0.530561,5.965421,-5.188111],[-8.602594,-2.162808,0.712844,9.494536,-2.354637,-3.521276,0.176334,1.005990,7.564456,-8.896561,7.090945,-7.293340,0.622247,7.008692,8.184936],[0.185271,3.060164,-6.486855,5.029419,6.020365,-7.843941,5.431864,-2.312583,-8.867222,-9.370063,1.558225,8.815561,-6.732628,-3.603175,4.259898],[-9.817989,5.758983,2.337609,-1.228156,9.506763,-8.499389,-7.557752,8.704394,7.251912,-5.612227,-1.213554,8.887430,-8.381225,-7.727903,9.679340],[-4.787964,2.847741,2.351180,-0.912492,1.028313,-0.421468,5.345904,6.035052,5.692804,-9.932679,0.518060,-6.261729,-2.900800,-1.351258,1.415317],[3.760393,5.629642,9.768120,7.005018,4.280581,-4.396253,-1.010927,-9.556667,-7.329086,-9.293087,8.101066,-4.492170,3.933101,-6.610474,0.754476],[8.323988,-7.582562,6.969624,-9.012119,2.700872,4.329681,5.166494,4.384790,-1.346992,6.918311,-9.529060,-0.836373,-4.238338,-2.745582,9.471026],[-7.528656,-4.733025,-3.184026,0.749042,-6.285868,-0.603065,-5.778947,1.815023,9.699065,0.196216,8.190401,3.728156,-0.169143,6.236514,5.895277],[5.609482,6.518620,-2.391267,3.679017,-6.827821,-7.568724,-8.305006,-2.518255,-0.210360,6.594755,2.105307,3.962314,-1.987181,-5.693799,-8.486683],[-1.865206,-6.025430,9.085838,4.123461,-8.665861,-7.192931,-0.044802,1.902534,3.497834,-4.927779,3.392758,9.678566,6.616816,9.392734,8.226334],[6.498344,1.360958,8.791894,-6.867251,0.537613,4.090093,0.379154,-8.640635,-7.525654,-8.678519,-7.886457,-0.006772,-4.420578,1.691398,-6.816475],[-8.086610,7.520542,2.003583,-7.743623,6.465823,-0.236739,-1.061060,3.025330,-3.451396,-4.749182,-8.592989,-5.756576,-7.776534,-5.124756,-4.450645],[-3.533699,-0.731579,-4.107457,-4.597785,8.261331,0.912636,-8.739938,9.076964,-9.065942,-7.769523,-3.237218,-9.203813,1.102378,-6.904649,-7.047129],[-4.247817,8.783978,-7.806358,-5.354100,-3.367002,9.232140,8.234996,2.622228,1.788167,-3.127571,-4.986423,-9.769043,-4.236654,9.293174,-9.300126],[5.715798,-0.304533,9.064275,4.314768,-4.223407,-9.548285,6.138630,5.326109,-5.555190,-5.027520,-1.746585,-6.983252,0.113385,0.472436,8.022179],[2.849905,-3.987191,4.994270,-9.222197,-9.254240,-5.232368,-8.655570,-9.693472,3.468241,-4.739519,-7.458873,-6.078508,-1.643882,7.405416,9.993429],[6.095596,5.901246,-9.469025,3.562085,9.949705,6.778922,-9.667678,3.191521,-7.092529,-5.185981,2.021250,1.950525,6.081374,9.696889,6.340604],[2.003441,4.067768,6.752226,4.017774,6.041830,-0.650994,-3.380673,-5.190198,4.406740,-7.876444,-5.770070,-8.891073,-1.315663,5.799911,-4.099537],[-2.362269,8.625852,0.800718,9.723296,8.208860,8.350258,-8.823942,9.522530,-0.109913,0.451510,-7.394011,-8.227476,7.637805,-8.957517,-9.233088],[-7.770685,-1.404136,9.512132,-5.411580,-4.789656,1.610398,9.734592,4.231066,-2.798613,5.875727,4.667275,0.428671,3.153069,-3.488177,5.106485],[-0.110912,7.402636,2.730371,-2.842007,6.510351,-7.322899,3.879671,-2.275970,-4.677259,-5.838276,-7.995168,9.226554,0.692807,0.426437,-7.749852],[-7.313747,-0.231911,6.868003,-1.708086,8.827099,-2.912017,-7.359532,0.781706,-3.613125,-4.089109,0.648140,-9.725600,-0.047037,6.127478,9.825039],[5.081778,4.296173,0.414743,1.954938,-1.971934,-5.630681,-5.860462,-9.510971,7.201540,0.098475,6.885480,6.265630,7.489319,4.615594,5.564807],[-8.881620,5.354862,-9.065850,-3.067036,-5.714154,-8.925923,8.595679,-9.230183,-2.374883,9.404888,1.077987,-6.835117,-6.004579,-4.063685,8.768429],[8.746906,-7.105935,8.874515,5.591637,3.434374,-4.715730,-7.687600,-3.469703,-9.390430,5.728688,5.525015,-3.088015,6.086276,7.136605,5.797079],[2.812490,3.454877,5.889103,-2.142742,-6.255021,-4.757555,3.229795,7.293808,7.016345,-7.768645,2.037793,5.010910,5.835102,-1.784187,7.886564],[0.765750,-8.306889,-3.026196,4.691082,0.515907,-5.003897,5.717680,-7.076787,-8.211482,-2.157402,-7.667923,-9.431470,7.310005,-0.327729,-9.456743],[9.806203,-0.979790,-4.371641,7.349872,1.437303,-5.576499,7.593509,0.559641,-0.223302,4.452842,-0.663235,-1.512726,-2.530006,7.882737,9.987949],[-8.668117,5.360113,6.811009,0.668626,-2.653350,5.494291,1.571851,-3.851193,-3.136441,-5.673135,5.871862,-1.767096,6.503892,7.168684,9.077828],[-8.699506,-0.585587,4.156196,-7.020958,-4.403036,4.409297,2.087028,-8.554512,-6.053454,-0.239348,4.215330,7.271656,4.783692,-9.948458,4.798177],[4.990178,9.408807,-6.397203,5.393055,3.255831,8.194228,1.954547,6.675573,-8.948947,0.920678,-6.953343,-6.828712,-6.652549,-5.637146,-7.436180],[-2.198723,-0.006197,1.292037,-8.228347,8.988987,0.495976,8.879628,3.487613,-1.382654,-6.964880,-6.594625,-0.884524,-8.606483,-9.556723,7.241952],[1.976312,-1.667004,4.800504,-5.466864,6.149688,-5.604582,-0.160150,2.785271,-2.167715,2.714141,9.771509,-3.498761,-1.236748,-5.765732,6.062080],[8.250014,-7.617232,-3.060874,-7.471154,5.969779,-8.990533,-1.111194,0.459072,-1.373005,5.204096,-6.808422,7.863844,9.642659,-5.758457,-5.730211],[7.534682,-6.146507,-1.961274,-6.681433,9.215579,-1.885932,3.457826,-7.494524,-9.534332,-8.256433,-5.421210,1.576968,6.936106,9.472383,-7.845905],[-6.628501,3.056329,4.704462,6.164734,-9.341681,-9.781536,5.625877,8.795712,-5.061314,-6.541903,-8.116020,-1.239582,2.681146,-0.783014,3.112754],[-4.947179,-9.091969,-7.231953,6.208459,3.388340,-8.535897,-6.529825,5.066011,7.172094,-4.422094,3.348248,-8.890233,-0.210482,5.921887,-0.533712],[0.088762,-1.817387,-7.134565,-6.092714,9.811451,-3.354082,2.561018,3.729060,-8.121099,-2.403543,-0.650481,7.033920,8.557631,-0.190243,-1.057695],[6.453226,-1.792908,-9.396952,-8.298441,-8.865295,-0.478692,2.917725,-6.542380,5.133356,5.393419,8.316522,9.366301,-3.955745,-2.214098,9.066932],[4.157491,-7.118670,9.568796,7.007543,7.125964,9.058769,-8.777806,5.072268,6.361751,9.385305,0.311919,-2.387586,-1.825002,6.318078,-0.925979],[1.102629,-4.592271,3.740284,-2.247205,4.274170,-7.253008,-4.934204,-1.044165,5.774877,-0.531077,-9.431361,3.228704,-9.480984,-4.246831,-5.142115],[-3.022552,-1.477334,-5.995369,-0.303262,-9.185724,-1.548672,-7.384612,0.537655,6.920295,-0.012228,-5.261277,3.961448,-5.825076,1.329780,7.432916],[6.674157,9.990212,-2.125809,2.241700,2.598256,5.056332,-6.423215,-9.297470,-1.207746,4.933491,9.626082,1.949974,9.238629,-5.571840,-8.947828],[5.215795,6.419361,-6.054422,-9.688762,0.825732,2.688913,0.565549,-9.878405,-6.873225,8.016025,-1.702258,9.798800,1.531159,9.278639,2.912154],[-4.210194,6.325450,9.154074,6.517163,1.920826,2.056994,5.406099,-9.450826,-9.418749,-7.509944,-3.810383,-2.029211,9.075406,8.716735,7.077795],[-2.372838,2.685139,-1.197818,6.462608,-8.543683,-5.317092,-9.468016,-1.766164,6.704476,5.458677,8.448904,-3.543711,9.069259,0.168102,-9.048055],[5.612098,-8.883968,-4.252545,8.688437,8.603872,-1.213692,-4.989896,5.254278,-1.518969,8.226722,2.977287,9.767448,4.945945,0.124423,0.642028],[0.064963,-9.883225,6.352396,-6.034258,1.232954,-2.894495,2.741402,-3.508961,-7.572815,-7.519077,-9.858579,-8.644078,0.346492,-7.169052,-4.931724],[7.207298,-8.178816,-2.935345,-1.954027,-5.669815,-1.969445,-2.889739,7.274064,-7.101977,7.310124,-9.787062,-4.176203,5.857502,-7.565492,-7.316041],[-6.609830,-1.779244,-1.981103,-5.241216,-6.590998,-9.772332,-5.659185,-4.318189,0.927204,0.652207,2.470631,-6.521183,-8.432154,-1.751804,1.406111],[2.858016,-4.078675,-7.736221,-5.002332,0.505086,7.607951,4.945194,-8.362870,-3.788380,0.286526,-1.325108,4.505040,-5.828480,3.584860,-5.470150],[-2.522801,-9.954830,9.419955,4.119305,4.974523,-9.160386,-2.723154,-6.300910,-7.130881,-2.529790,-2.196917,-3.934419,2.582555,3.120237,7.737347],[5.898608,-8.548054,-2.524198,-1.212636,2.706333,0.901631,-8.533379,-2.591783,-7.698376,9.872709,-7.744662,-2.186681,4.281013,8.400582,-1.857723],[-9.601559,-4.064985,4.015202,2.815253,-4.733578,2.970413,-2.589858,8.680903,4.812745,2.108844,-4.610560,-2.490993,3.798236,-2.011897,1.350634],[3.097142,-4.051441,-2.450438,4.468070,8.050155,-7.455276,4.739437,0.964261,6.548562,-9.809687,2.128659,-0.010722,2.267172,-1.342227,1.930317],[-4.907754,2.827194,-6.299167,-9.682112,8.905496,-2.046060,9.052181,6.469033,-3.826134,1.806952,2.513555,-9.241719,-2.852131,0.996253,8.204949],[-2.055703,-1.580635,7.519158,2.659544,-2.015943,6.470739,3.485791,-2.215258,7.805502,0.495629,1.624020,-7.327017,8.101387,-0.426676,7.974948],[4.613644,9.107476,3.670098,-1.371260,4.574025,-3.128765,0.647985,7.631253,-7.427484,2.314452,8.230470,-8.226610,-0.799440,-9.713668,8.612131],[-8.938046,-1.190327,-0.061081,-2.492624,-1.136352,5.786336,4.227223,-3.146587,-7.181057,2.135852,0.530179,-4.149921,-0.328871,9.846496,5.009385],[-2.248772,2.658049,-8.246419,4.832577,-4.054463,-7.577764,-6.066189,9.049882,-7.519324,8.413600,1.491693,-8.834682,-0.622854,-5.594671,0.905414],[-0.792884,6.274332,-3.755437,8.751444,6.315527,-1.249623,2.769408,6.706800,5.367870,-4.307280,0.029095,4.612270,-5.064614,1.617063,1.908651],[-1.942182,-4.059840,6.697786,0.907867,-7.146420,2.072386,-7.764568,3.789891,7.047672,6.874359,2.432497,7.948127,-7.019891,7.702918,-3.794570],[5.823260,-9.726631,-8.773792,-8.213774,4.937550,-0.696064,5.374870,9.665346,-9.750255,-6.827771,8.696318,5.507722,-3.796980,-2.841299,0.627378],[0.729961,8.866856,-8.269341,1.262728,-4.770829,-9.072604,4.442889,6.314005,-4.623517,1.641943,-9.347314,6.167867,0.979916,8.499947,1.724614],[-8.583932,9.681134,-9.794205,-7.786695,7.462075,-9.599327,1.535924,7.162132,3.041190,9.937293,-2.515221,2.389757,2.685084,-9.515035,-8.209678],[2.545751,-6.150885,-3.798024,-7.624624,-7.759258,0.615447,5.127732,1.973657,-5.255615,0.795114,7.302511,2.840357,2.774044,-6.204065,2.158252],[8.821730,9.729505,-9.059480,-5.119165,-6.240815,-8.797525,-3.803070,5.713236,-4.237169,-5.315349,8.853979,-1.455032,-5.924112,9.736860,2.953749],[8.558617,0.870181,-0.603683,-9.194361,-7.841242,4.266228,1.070084,1.845454,5.946476,-1.824749,4.205587,-3.799623,-6.537514,9.569740,0.876142],[-0.221030,6.123758,9.069130,3.881740,-6.620354,9.540552,-2.250497,8.303094,5.763428,-5.823717,-2.590485,8.382059,4.328677,3.897035,2.491707],[1.650272,9.477633,5.357766,-9.550477,0.785072,-5.971500,-2.842066,1.099946,-1.080885,3.644328,-8.162297,-1.097052,-8.921557,8.433881,-7.811281],[-6.943601,-8.948884,-9.399813,-8.075043,5.390509,-8.013479,-2.199537,-4.935441,-0.845339,-6.855396,0.455876,-0.564170,-1.585301,4.070205,-1.146425],[-5.068410,2.722281,3.817342,-7.627824,-2.561389,0.048621,-5.925648,-2.181218,6.160025,6.487029,-1.755340,-5.187588,3.983444,2.322700,-4.643760],[-4.687271,-3.141135,6.991211,-4.345602,8.073952,7.264448,1.513012,6.356691,0.258413,-5.338535,-8.709064,5.947428,3.071463,-1.408041,-8.919047],[1.105247,7.000377,-1.711177,0.907315,1.548503,-9.145057,0.075326,-4.346687,4.392166,0.124151,-7.624412,-8.016401,-5.444669,-9.124774,-7.035047],[9.342842,-4.820057,2.933538,6.406627,7.532689,0.751867,-1.021301,2.037272,2.853663,-9.897848,-0.570027,8.290777,-6.717180,2.177300,-4.326707],[4.763139,1.964055,-1.168900,4.828412,6.411814,-7.802702,-6.039813,3.530155,3.546009,-3.729883,9.079701,4.095586,6.808495,-4.825149,-6.902413],[-8.862578,-6.328904,1.256878,-9.159609,-7.256835,6.101387,-0.911795,4.669689,5.191058,4.587569,-8.321493,3.642145,5.965042,-0.167030,4.423605],[-7.395487,-9.167040,9.670974,6.993595,-7.027388,9.179617,0.005456,6.136423,0.278864,2.160373,-6.473628,5.098542,4.688170,-6.079580,-9.116474],[1.726771,8.825356,9.584098,0.687608,-9.851291,-8.850469,-0.896676,-6.666376,5.931463,-3.680323,-1.355604,-5.346798,-1.694081,-6.231456,9.714503],[-0.551561,8.497975,8.354457,-2.407089,7.702025,-8.528732,-4.149386,8.303458,7.661882,-7.953755,-5.488623,-1.932911,-6.318511,-5.960284,-6.526285],[7.466570,-8.469400,-5.906806,9.236649,7.262919,-2.314886,6.239117,-2.299392,9.970812,7.566479,6.337651,-6.901024,-4.569037,6.959934,9.597210],[2.874959,-4.546085,7.819261,9.840792,-7.152636,2.123016,-1.974649,6.050441,-8.849364,-4.430273,7.913805,7.120763,-3.710738,-2.776085,-0.389253],[1.102502,5.605837,-8.560076,-3.749593,7.365931,-9.933742,1.994236,7.027693,4.262674,6.902499,7.843341,6.250584,-1.664756,7.143917,9.905900],[-6.273942,8.481720,3.686220,-0.765581,9.346240,-3.360545,6.765865,-6.266082,-8.508375,-6.589938,-7.067203,-0.404370,-2.271476,0.100938,-8.359487],[2.062071,0.674161,-0.077007,-7.657292,-5.131681,-1.558579,1.062156,7.659997,0.441546,7.930782,1.741142,8.775575,-3.435170,7.472207,3.773006],[-5.169364,-5.126656,3.174849,-2.410275,-6.371035,6.642504,9.233699,-6.753828,5.631780,5.487518,9.112006,-0.252722,-9.977097,-0.875949,-0.211218],[7.491976,-1.054574,-2.384444,-3.585044,-6.912867,8.619868,-2.257476,-0.375667,4.930991,-3.407661,7.721895,-6.496613,-0.380468,-3.840311,-4.096544],[5.047668,8.292334,4.270273,6.495507,2.621701,-1.086112,-0.751884,6.160314,1.599953,-4.606551,1.830562,5.262507,7.676770,1.471518,-9.512404],[-2.026107,9.846306,-1.525493,0.017110,5.568085,1.451445,2.827027,-4.104605,-5.168428,-5.717205,7.524793,-6.464571,2.196070,-5.174056,3.737795],[-0.648533,-6.952270,-8.112744,-6.264108,2.189516,-9.919156,-7.489821,-0.555000,-0.404314,-8.249451,6.481428,0.031026,1.064947,2.320915,1.477340]], dtype = "float64")#candidate|2521|(110, 15)|const|float64
call_2520 = func_2024_call(relay.reshape(const_2521.astype('float64'), [15, 10, 11]))
call_2522 = func_2024_call(relay.reshape(const_2521.astype('float64'), [15, 10, 11]))
output = relay.Tuple([call_2518,call_2520,const_2521,])
output2 = relay.Tuple([call_2519,call_2522,const_2521,])
func_2526 = relay.Function([], output)
mod['func_2526'] = func_2526
mod = relay.transform.InferType()(mod)
mutated_mod['func_2526'] = func_2526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2526_call = mutated_mod.get_global_var('func_2526')
call_2527 = func_2526_call()
output = call_2527
func_2528 = relay.Function([], output)
mutated_mod['func_2528'] = func_2528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_2559 = relay.TupleGetItem(func_2382_call(), 1)
call_2560 = relay.TupleGetItem(func_2384_call(), 1)
func_2317_call = mod.get_global_var('func_2317')
func_2320_call = mutated_mod.get_global_var('func_2320')
const_2562 = relay.const([[9.053144,-6.525606,6.818932,-5.488400,5.329290,2.041021,-4.502113,-2.958055,-4.724248,-3.112204,4.760337,2.621164,-6.231025,-9.279794,6.751152,-3.823767,-4.059729,7.421093,-3.958842,-2.338754,-5.467072,-6.510600,-7.988263,2.032730,4.706884,8.702772,-3.861323,-7.395519,-1.727510,7.362040,9.527316,-7.075732,-6.662471,6.540664,3.387462,5.250813,0.149812,-2.686367,-4.965610,-5.876516,0.119328,-2.034207,-8.567816,4.830126,-8.225560,5.474003,-4.063285,8.726632],[7.780277,0.677809,-5.091901,-3.176672,-0.672680,3.925930,4.776451,3.657272,-9.822862,-2.522660,-6.444019,1.985534,9.045332,-7.538065,-5.621301,-2.786362,-7.032442,-5.368373,-5.679610,1.819915,-0.220496,-3.989042,-2.689710,-9.207429,3.442674,-9.740855,-3.752052,-4.129976,-8.840989,-7.436218,0.981806,-4.554892,-4.933869,-4.738188,9.280095,-3.791986,5.142781,9.666616,-7.586178,-5.653732,7.016922,7.816204,-6.703409,0.128095,2.245691,1.206151,-4.605972,-1.781763],[-3.448199,-9.853492,-4.017397,5.194100,8.842208,-0.221691,5.782490,9.504974,2.458360,-1.324958,8.509977,-0.334992,6.502215,5.059047,0.205213,1.979255,-8.568304,6.227972,-4.631902,-3.680387,-7.159589,3.506612,7.426682,-0.975399,8.201896,-5.333615,-1.168819,0.013261,-4.531828,8.468667,7.280037,-4.156890,-2.071383,-7.432714,-4.382945,-6.400457,3.638624,-1.716219,8.431063,3.627289,-7.716760,5.887098,-5.611779,-0.327937,2.142446,-2.136505,-7.212858,-8.933191],[5.139750,1.169772,-8.706704,-0.776873,6.624049,-6.033094,8.857097,-5.003295,-7.592808,-9.836728,-2.101361,6.539140,-2.982846,-2.689761,-1.305177,-8.092048,-9.802706,-0.098167,3.104955,-3.703709,3.235725,1.565926,7.242461,-5.780223,6.153159,-0.961345,-0.079232,1.062488,-3.808250,0.657661,9.604180,-1.079052,-4.864872,-5.675729,9.680900,-5.065350,7.930994,9.251468,1.087809,-8.400828,-9.384747,0.083824,8.094274,0.076500,-5.778973,-8.380460,-5.881760,0.183354],[2.209756,6.803535,1.245709,-4.315314,6.057103,2.555847,4.950605,-4.108808,-1.820197,-8.825421,-3.082517,4.517025,5.435447,-0.691863,-2.670888,-4.325395,5.786286,-8.904765,2.844837,-2.091345,-9.444813,-5.567407,9.376014,7.524342,-5.941532,5.275196,-3.128918,3.298464,4.218395,3.595316,-8.820585,1.336835,1.331974,-8.576527,-4.410855,-8.836929,-1.329608,3.696533,3.718358,9.117364,-2.279837,-7.306329,-2.144402,-4.061400,-2.765544,6.365132,8.310422,-9.341321],[6.915223,-6.127477,5.396590,-9.287790,7.338601,-1.193619,3.549007,-1.707058,-2.019313,-9.488501,-5.662849,-8.963851,-9.022760,5.343620,5.708065,4.382184,-0.834216,-9.031321,-1.862226,9.027821,-6.218141,-8.011351,-5.563739,-6.430986,2.218260,8.822708,0.627152,-3.936891,6.809680,-8.491735,-2.406798,5.912811,2.411822,-9.723047,8.267298,5.075938,8.668830,2.533374,-0.887144,2.527507,-4.362686,9.458957,-9.219718,4.756720,-7.164174,-4.845552,6.178751,1.193968],[-7.995691,-8.967587,-9.260845,1.530799,9.039113,7.795512,-2.660914,-6.724536,4.741065,0.579511,6.546513,2.308599,-4.771410,-1.581306,-1.249953,-5.503228,-1.999173,-3.552442,-0.449336,-4.297603,-2.853432,2.715184,-7.121939,4.838065,0.875297,-7.869478,8.855123,-9.352829,7.876908,-9.520169,3.959499,-3.417658,8.186737,-3.847724,3.925482,-3.051250,-1.059162,-1.335193,7.270502,-4.269866,-3.845811,5.316298,-7.435971,6.254229,1.260188,9.867473,-2.351126,-0.808892],[-5.418527,4.844721,1.622350,3.430794,4.185976,7.713198,0.569595,-9.837984,-7.040072,-2.803860,7.920171,-4.211043,3.388142,5.837654,-3.221856,0.101376,-4.708384,-1.508397,-5.976122,8.288827,2.220656,-2.220160,-4.280944,0.753321,2.036908,-9.892226,4.252110,2.858760,-5.068045,8.816669,-4.605439,-9.079138,9.152489,-8.097983,-9.858077,-7.306036,-4.824761,4.157353,4.330735,2.845445,-9.950371,2.296187,4.112403,-5.208247,-0.168829,-8.833626,-1.960415,3.029496],[9.795945,-2.418531,-4.287190,6.839060,4.344701,0.926304,5.552309,8.702908,-1.037992,-1.575221,4.111123,-4.944093,-4.525191,-6.872670,7.279621,-3.095463,-8.868179,-1.283919,5.958799,2.278332,-0.827259,9.606686,-7.053634,3.392775,-6.527694,-2.749829,-8.918029,5.748888,8.667726,-4.614561,3.284372,0.137549,4.413851,-3.290180,9.332051,4.661729,4.631234,-0.016044,-2.041138,-2.610159,6.795336,-6.975110,6.024160,-7.674818,-0.606465,9.298145,4.851877,8.201707],[3.008121,-8.398640,3.822119,-1.658090,-5.699772,-5.306646,9.728685,4.310337,1.664010,-5.511438,2.636028,0.762963,3.478307,-5.057122,7.124991,3.346190,1.051860,-0.736932,-6.021779,6.709426,2.924418,2.916869,6.586101,3.961285,-3.934362,6.954228,-6.061490,0.926446,-9.615707,-1.163803,9.937795,-7.714265,5.927254,-9.117064,3.034270,3.936904,8.777062,5.848987,3.369103,-6.405390,9.798426,-9.822719,-0.699006,7.869746,4.528163,7.374615,-3.297131,4.025123],[-9.428749,5.477073,-5.511792,-4.542931,1.431160,-7.856900,-0.897217,-2.484829,-7.647498,4.558153,0.173021,8.631665,-9.739834,8.746850,-7.329788,7.176646,-4.653528,4.436303,4.939374,9.024984,1.486271,8.806706,-2.981454,5.264209,-7.796311,4.346396,-6.462384,-5.766563,2.658917,7.473273,6.749558,-0.523089,1.469227,-4.872158,7.740624,3.197280,7.981117,-8.651336,-6.993712,-1.190925,-4.936966,-2.029013,5.894721,-5.361027,2.114228,-4.101275,-3.498812,-2.142269],[-3.027559,-8.824254,-3.107403,8.921031,-2.944546,9.031118,4.945311,-1.655142,-2.334165,-7.870264,9.483796,-6.034066,-0.304212,8.695005,-3.977281,-5.466526,-8.598602,-4.022220,-9.548932,-0.789242,-4.935759,-9.166753,-3.203846,0.903698,3.622011,-6.125462,-9.901932,0.408755,8.601883,5.628669,2.607157,1.781729,-3.345735,-5.408362,2.300639,-1.698899,7.631132,0.869941,2.829456,-4.426201,0.925074,5.198491,5.925972,-2.414744,-4.967848,-3.089645,-9.473605,1.812008],[-1.732200,9.546672,9.629732,9.765711,-5.134390,-5.113604,7.913569,2.232787,3.286166,6.762162,3.173459,6.743337,6.456163,1.741884,8.405710,4.432914,1.361154,4.908864,-3.967140,3.181399,-9.862919,-7.497892,-9.940343,-1.186578,-6.468751,-2.408714,8.545158,4.678742,-4.039441,-3.435082,-9.869858,8.923630,1.642145,-8.902539,9.183280,-0.344820,7.025629,4.156633,-5.725470,4.625182,6.524653,2.566430,2.681126,-3.926744,9.384098,-0.763352,-0.187627,5.113563],[-6.277054,6.311075,0.108255,4.731781,-1.183889,-0.356594,-4.641984,1.753686,-5.002106,5.204235,-0.044753,3.884368,-7.309918,9.275434,5.703927,-1.991935,-2.974819,5.848307,-3.192508,-9.274745,7.266196,4.999378,-5.472577,-5.754452,7.798960,-8.771130,9.950742,-4.455653,6.094098,-1.073048,-5.479723,1.033340,-6.670756,6.440500,1.589141,7.564788,-8.756568,1.082327,5.598111,6.729973,8.696070,-2.165603,3.531924,-2.299656,-4.855659,9.295365,-6.853609,3.768481],[7.445824,6.071184,-3.640996,-7.371930,0.115224,8.443207,9.119856,-2.500317,3.105728,6.891023,1.484260,6.674286,-5.829818,-7.834281,4.804250,5.001802,-8.163848,-6.981811,7.496560,-5.298939,-1.392115,2.521446,-8.673033,-0.035558,1.420066,1.724171,8.811821,-2.222192,6.688930,-3.867196,3.844031,-1.987760,-6.439286,-9.670588,8.231712,0.260466,6.710690,9.461521,-8.653111,0.251990,0.129839,-0.966514,5.756282,-0.202519,7.080808,-5.509901,-6.122590,3.359458],[2.832864,-0.135334,-1.604374,-0.112905,-7.144490,9.630466,5.269033,-0.199681,0.036531,6.415215,-1.964841,-9.596994,6.141949,-2.049061,3.481131,-7.661502,8.883390,3.155777,-4.019698,4.949772,1.290666,3.169155,6.425965,2.981673,-4.638956,-2.419587,-9.708850,7.994748,1.888813,3.992519,5.053370,3.145348,-1.129189,-2.131518,-0.542556,0.334521,-9.555294,-7.289565,6.372441,4.609279,-4.064179,-5.125957,-1.260457,-7.606851,9.851297,-6.189688,-2.205364,0.363771],[-9.423537,2.531836,-1.007632,-5.677647,-5.340159,-8.500109,-1.778446,3.648788,0.259786,3.744502,9.668164,4.606779,1.817877,1.361649,6.964855,-2.474147,-1.531180,-2.280584,-3.028093,-3.413917,7.821675,-8.852888,-3.459442,7.056364,5.954884,5.458292,-3.848547,4.407186,-7.122553,9.571206,-3.386120,3.511568,-3.809128,8.639868,-7.510518,5.056666,-7.171202,3.257081,9.905418,8.506076,6.283166,-2.032037,4.770428,2.590707,-0.109201,-7.451780,-3.144171,-3.294793],[5.030479,7.988763,7.045161,-7.563579,0.980257,-4.798511,-0.253175,0.319418,-8.629622,7.155421,-9.424938,7.308688,-4.249447,1.599978,6.483837,6.692032,7.134551,-0.749829,8.833045,-3.240704,-9.340943,4.104455,-9.406193,-1.610211,-6.583256,3.430755,-6.767331,-9.218404,-2.862803,6.807436,3.847565,-9.599502,8.717794,4.980531,1.893135,0.783703,-4.769915,-7.134156,-5.010589,8.590773,4.858566,7.713130,2.022304,-0.447328,0.316398,8.827653,-6.091965,6.319780],[-2.575773,-9.804790,-3.859121,9.656146,-5.121706,-5.196604,-3.787979,-0.583652,-4.450250,7.879130,3.630929,7.469297,5.911563,9.293740,-4.560064,5.927002,2.655229,2.880260,-2.158255,-7.584407,-3.700393,2.951636,-6.108190,-5.840985,1.875795,-8.889500,9.616552,0.212163,-6.178790,-3.566888,1.183682,8.574358,4.036092,-8.197934,0.703609,5.687027,4.829613,-0.454039,-1.515888,-2.754841,-8.870976,-3.189881,-0.216164,-9.129698,-8.147958,-4.237805,-0.837750,-4.255290],[-3.525027,9.779225,8.550852,6.045879,2.404205,-7.587568,3.124791,1.810866,0.051134,9.275202,6.398368,-3.649797,6.732711,8.106699,-8.901209,8.962336,5.514839,-4.254362,2.957387,6.463886,5.150256,-2.800118,5.652592,-0.911678,8.138870,-3.715104,4.825009,-1.150059,6.200451,-9.406705,9.204854,-2.576093,9.910162,8.351948,7.036776,7.659381,-5.111052,0.873270,-0.461792,-3.707731,4.262182,-2.466565,2.282436,5.011401,9.485465,-8.979510,-0.631883,7.265216],[1.602274,-1.420059,8.177881,5.091041,-0.815240,0.502320,-9.702196,-3.340348,3.993873,-7.924516,-7.348540,3.109800,-8.004959,-8.597149,5.464606,-5.840932,0.981366,9.360370,-4.536081,-6.896465,9.436927,7.704525,-5.683140,4.215853,6.349846,-2.055238,-1.059364,5.404180,-6.962721,5.887281,0.891445,-8.415570,-2.111624,6.663791,8.994122,6.511772,-5.219662,-6.331638,7.454174,-2.616218,-2.499197,-8.048123,-1.820731,8.460586,5.234446,-1.700792,-3.099692,3.838674],[-1.349752,0.286564,1.347041,-7.741255,-4.372956,-6.984443,4.714444,-1.247703,1.514762,-9.251155,-1.838279,-1.140936,-9.778630,-5.234060,-3.302941,1.417518,-2.643003,-6.817238,-5.175897,1.768742,5.328098,-7.564488,-4.470536,-5.330334,5.899733,-7.874449,-8.249631,3.945142,6.776433,4.204063,-6.124820,0.490312,-5.073510,-5.680971,-7.989283,2.280475,6.661565,-9.356798,-9.565814,6.018664,2.577770,1.246464,1.456301,-6.121541,-3.300318,-1.175200,6.584100,3.846833],[8.352193,-1.214123,-4.424123,0.655601,1.737473,4.696419,5.871418,3.984719,-0.200633,-6.451631,6.115804,9.043026,2.474810,-2.071706,6.744694,-4.865906,2.580710,-4.540169,-7.687608,2.283301,-3.424359,4.933735,-4.532322,-7.790173,8.990373,-9.146287,-0.429522,-9.509632,9.396142,-8.986463,-6.827170,5.807020,5.930854,3.936217,3.269905,5.223892,-1.267684,6.193994,8.337934,9.403904,4.331790,5.617907,6.923151,5.277874,9.942465,8.549967,-0.106973,5.402959],[3.464862,2.027634,-5.670183,-7.168855,4.597005,8.978919,6.976435,4.332583,-4.590205,-4.382530,-6.288047,-8.241290,0.569637,0.130480,-3.195062,1.646391,-1.393454,-7.599147,5.063841,1.828013,3.475178,1.273651,1.098280,4.566065,-8.907025,-6.148999,5.979280,-0.372597,-5.139181,-5.805317,-0.500386,-4.256418,-8.726589,4.214430,8.339033,-1.113857,8.862355,-6.190411,-1.991044,-6.382159,0.153597,4.259294,2.651584,-2.496134,8.635337,-4.687795,-4.250912,-0.127374],[-1.448398,8.808469,-3.536983,-7.712047,5.863542,9.392093,-3.683731,-4.837418,-6.272472,-1.629898,3.654694,1.159970,5.145950,5.133983,7.603769,-1.477780,4.237362,4.574165,5.136336,-1.014922,-0.430456,-0.111340,9.074395,0.371275,-7.191642,-8.093720,-2.199025,-9.553235,7.628840,2.358525,-2.246537,-7.117672,9.676440,0.557577,4.738851,-8.896479,2.854329,-6.681398,2.412254,-3.929230,0.757417,-0.235633,6.249982,1.962861,-2.241110,6.988232,-6.119586,-5.073780],[7.571670,-9.022081,6.144206,5.429456,6.130042,-6.720987,2.835399,-6.068095,8.486200,-5.937250,-1.922411,5.373587,-3.579045,1.842430,9.268167,2.610394,8.884824,9.082488,-4.352153,-4.713397,5.268433,-7.965331,4.362498,3.868221,6.563946,2.580553,-0.279652,-1.592669,0.185616,0.776404,-3.154103,-1.127254,7.407822,-3.593887,-4.872701,4.485672,9.716264,-9.388100,1.723885,7.197278,7.577061,-7.886347,-0.235865,-3.798352,-4.978756,-6.306551,-6.800345,-3.866408],[-7.561055,4.047996,0.259341,-3.086252,6.425515,-0.453993,4.813909,1.789218,-2.782624,-2.783837,7.157586,4.663315,-5.690725,-7.836296,-6.479805,-9.349103,4.968641,8.857148,0.656298,-5.642379,-0.985793,9.283044,-5.214232,-0.062649,-1.704344,8.705814,9.610346,9.538114,-7.685386,5.714773,-6.633694,-9.820912,1.689919,5.902163,0.077272,0.599646,-1.870274,3.639765,-4.510373,8.965967,-9.537066,-6.618951,1.954491,-0.190508,3.879256,-6.767147,4.566130,2.104966],[-6.280823,6.281298,-5.346975,5.353836,5.708875,-2.853743,-6.303752,-0.280767,-5.234435,0.952832,-4.641406,-0.975812,4.504670,-8.543480,9.985261,5.133510,-9.041085,5.253767,-7.570597,7.842079,-4.904758,3.660362,8.118226,3.667228,-5.679305,-8.125519,-8.149397,-2.000118,5.440184,1.099862,-4.156323,1.143826,9.263281,-9.079045,9.387038,-0.451210,7.996274,5.563132,9.148847,-2.303995,8.496078,7.434256,5.697443,3.112522,-9.560579,2.801089,0.632010,1.715892],[-1.004930,-7.595648,9.368093,4.100185,-4.763617,4.780323,7.526334,9.116249,-0.313401,0.338692,-8.297029,1.673973,3.083438,-1.535672,9.614337,8.785589,4.346944,8.833077,-1.260519,7.563471,6.681523,2.003606,-0.487099,8.740176,6.594245,9.051585,8.644511,-1.065495,8.638740,-2.998855,-1.934479,-3.837902,5.855567,-9.038271,-5.148044,9.362352,-2.397616,4.952317,5.232958,-7.271699,3.033726,5.587483,-3.300075,9.225183,-3.050515,-9.990047,6.559305,-2.057378],[-9.011679,4.868862,-0.799687,6.882397,6.019319,6.371276,5.027800,1.310237,2.930693,-6.064267,-5.637175,-7.640123,4.967411,1.336805,7.624217,0.381351,-4.363297,7.742638,7.853632,9.769398,5.938335,-3.615706,-3.496554,7.414317,-3.858209,4.948629,1.633148,7.092670,-9.776296,4.118683,-3.580164,-4.877453,5.209250,0.154071,-1.310608,2.921724,3.892884,-7.267954,7.971407,-7.878592,6.633101,-9.319769,8.956637,6.002122,-8.419379,6.369697,-4.265286,1.780078],[2.372389,-2.119946,-9.500014,2.795466,8.421457,6.567135,7.514090,-6.512384,-1.338832,0.543630,-4.098628,3.963717,-6.146070,3.706224,-9.624862,-0.342383,9.053039,4.824196,6.761797,-1.517553,4.941063,0.371904,2.360949,5.324086,4.357722,8.766917,-8.903196,-5.268672,6.896698,0.772629,3.502072,-5.616670,-7.683854,-9.858585,-5.197847,2.243062,-5.090779,2.062806,-6.828835,3.746916,2.757346,-0.542361,-8.557865,-7.123958,-9.990162,5.126320,-1.002325,5.277368],[-2.445258,-2.511479,-9.347235,-5.619590,-8.307388,-7.813783,-6.164163,-9.539364,-5.059436,6.170479,-9.287044,-0.892072,6.652244,-8.409954,6.991520,3.516609,1.242924,0.877509,0.010435,-3.059536,9.751787,-3.710810,7.112551,4.637108,9.441823,-4.048314,1.154870,9.353916,-6.831676,-4.942937,6.536858,4.190564,5.911516,-5.173616,-5.923773,-4.282513,9.113162,-5.344685,-7.847228,-2.841672,-2.613882,9.055790,5.406990,5.097978,-3.105299,-2.061469,9.833534,-1.254807]], dtype = "float32")#candidate|2562|(32, 48)|const|float32
var_2563 = relay.var("var_2563", dtype = "float32", shape = (26,))#candidate|2563|(26,)|var|float32
call_2561 = relay.TupleGetItem(func_2317_call(relay.reshape(const_2562.astype('float32'), [16, 12, 8]), relay.reshape(var_2563.astype('float32'), [26, 1]), ), 0)
call_2564 = relay.TupleGetItem(func_2320_call(relay.reshape(const_2562.astype('float32'), [16, 12, 8]), relay.reshape(var_2563.astype('float32'), [26, 1]), ), 0)
func_2526_call = mod.get_global_var('func_2526')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_2574 = relay.TupleGetItem(func_2526_call(), 0)
call_2575 = relay.TupleGetItem(func_2528_call(), 0)
output = relay.Tuple([call_2559,call_2561,const_2562,var_2563,call_2574,])
output2 = relay.Tuple([call_2560,call_2564,const_2562,var_2563,call_2575,])
func_2584 = relay.Function([var_2563,], output)
mod['func_2584'] = func_2584
mod = relay.transform.InferType()(mod)
mutated_mod['func_2584'] = func_2584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2585 = relay.var("var_2585", dtype = "float32", shape = (26,))#candidate|2585|(26,)|var|float32
func_2584_call = mutated_mod.get_global_var('func_2584')
call_2586 = func_2584_call(var_2585)
output = call_2586
func_2587 = relay.Function([var_2585], output)
mutated_mod['func_2587'] = func_2587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2606 = relay.TupleGetItem(func_2153_call(), 0)
call_2607 = relay.TupleGetItem(func_2154_call(), 0)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
var_2609 = relay.var("var_2609", dtype = "int32", shape = (252,))#candidate|2609|(252,)|var|int32
call_2608 = func_1115_call(relay.reshape(var_2609.astype('int32'), [6, 14, 3]), relay.reshape(var_2609.astype('int32'), [6, 14, 3]), )
call_2610 = func_1115_call(relay.reshape(var_2609.astype('int32'), [6, 14, 3]), relay.reshape(var_2609.astype('int32'), [6, 14, 3]), )
output = relay.Tuple([call_2606,call_2608,var_2609,])
output2 = relay.Tuple([call_2607,call_2610,var_2609,])
func_2615 = relay.Function([var_2609,], output)
mod['func_2615'] = func_2615
mod = relay.transform.InferType()(mod)
var_2616 = relay.var("var_2616", dtype = "int32", shape = (252,))#candidate|2616|(252,)|var|int32
output = func_2615(var_2616)
func_2617 = relay.Function([var_2616], output)
mutated_mod['func_2617'] = func_2617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2700 = relay.TupleGetItem(func_2153_call(), 0)
call_2701 = relay.TupleGetItem(func_2154_call(), 0)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
var_2711 = relay.var("var_2711", dtype = "int32", shape = (252,))#candidate|2711|(252,)|var|int32
call_2710 = relay.TupleGetItem(func_2615_call(relay.reshape(var_2711.astype('int32'), [252,])), 2)
call_2712 = relay.TupleGetItem(func_2617_call(relay.reshape(var_2711.astype('int32'), [252,])), 2)
var_2715 = relay.var("var_2715", dtype = "float64", shape = (2, 7, 5))#candidate|2715|(2, 7, 5)|var|float64
bop_2716 = relay.right_shift(call_2700.astype('int64'), relay.reshape(var_2715.astype('int64'), relay.shape_of(call_2700))) # shape=(2, 7, 5)
bop_2719 = relay.right_shift(call_2701.astype('int64'), relay.reshape(var_2715.astype('int64'), relay.shape_of(call_2701))) # shape=(2, 7, 5)
uop_2728 = relay.atanh(var_2715.astype('float32')) # shape=(2, 7, 5)
uop_2731 = relay.asin(uop_2728.astype('float32')) # shape=(2, 7, 5)
var_2735 = relay.var("var_2735", dtype = "float32", shape = (2, 7, 5))#candidate|2735|(2, 7, 5)|var|float32
bop_2736 = relay.floor_mod(uop_2728.astype('float64'), relay.reshape(var_2735.astype('float64'), relay.shape_of(uop_2728))) # shape=(2, 7, 5)
output = relay.Tuple([call_2710,var_2711,bop_2716,uop_2731,bop_2736,])
output2 = relay.Tuple([call_2712,var_2711,bop_2719,uop_2731,bop_2736,])
func_2751 = relay.Function([var_2711,var_2715,var_2735,], output)
mod['func_2751'] = func_2751
mod = relay.transform.InferType()(mod)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2751_call = mutated_mod.get_global_var('func_2751')
var_2753 = relay.var("var_2753", dtype = "int32", shape = (252,))#candidate|2753|(252,)|var|int32
var_2754 = relay.var("var_2754", dtype = "float64", shape = (2, 7, 5))#candidate|2754|(2, 7, 5)|var|float64
var_2755 = relay.var("var_2755", dtype = "float32", shape = (2, 7, 5))#candidate|2755|(2, 7, 5)|var|float32
call_2752 = func_2751_call(var_2753,var_2754,var_2755,)
output = call_2752
func_2756 = relay.Function([var_2753,var_2754,var_2755,], output)
mutated_mod['func_2756'] = func_2756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2776 = relay.TupleGetItem(func_2153_call(), 0)
call_2777 = relay.TupleGetItem(func_2154_call(), 0)
output = call_2776
output2 = call_2777
func_2784 = relay.Function([], output)
mod['func_2784'] = func_2784
mod = relay.transform.InferType()(mod)
mutated_mod['func_2784'] = func_2784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2784_call = mutated_mod.get_global_var('func_2784')
call_2785 = func_2784_call()
output = call_2785
func_2786 = relay.Function([], output)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_2792 = func_2204_call()
call_2793 = func_2204_call()
uop_2797 = relay.acosh(call_2792.astype('float32')) # shape=(2, 7, 5)
uop_2799 = relay.acosh(call_2793.astype('float32')) # shape=(2, 7, 5)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
const_2803 = relay.const([-8,4,-1,-5,1,-6,4,7,-6,4,9,1,-4,-8,-3,-6,1,2,-1,1,-8,-2,-5,-4,3,2,3,-7,-4,-10,3,-8,8,-6,-5,-2,2,-7,-10,-9,8,6,7,-2,8,5,-8,6,3,4,9,-2,7,-9,2,-1,-9,4,10,-4,8,10,4,-1,-7,6,-10,-6,-10,5,3,4,2,-8,4,9,-5,5,4,-8,-10,7,-7,-6,-8,-10,-6,2,2,8,-4,-5,5,-10,-5,-10,-5,4,9,-10,10,9,4,-2,3,-10,9,6,5,-5,-4,-5,1,10,9,9,2,3,-9,-2,-7,9,-10,-9,1,-7,-8,-4,2,-1,6,8,7,-3,8,-9,10,8,3,6,1,8,6,8,-8,8,-10,1,10,4,-1,-1,-10,-10,-8,6,-10,9,-6,3,-8,5,7,-7,-2,-5,5,4,6,-8,-2,6,-9,-7,3,-7,1,1,10,5,9,6,7,-9,6,7,-4,-10,-7,-7,7,1,10,5,10,-3,-1,10,9,-1,9,-4,1,5,3,10,8,7,5,-7,6,-3,8,-7,5,3,7,6,-3,8,2,5,9,-7,8,1,-3,2,-10,-10,8,10,5,3,-4,4,-9,6,-5,-4], dtype = "int64")#candidate|2803|(240,)|const|int64
call_2802 = relay.TupleGetItem(func_343_call(relay.reshape(const_2803.astype('int64'), [5, 6, 8])), 1)
call_2804 = relay.TupleGetItem(func_346_call(relay.reshape(const_2803.astype('int64'), [5, 6, 8])), 1)
output = relay.Tuple([uop_2797,call_2802,const_2803,])
output2 = relay.Tuple([uop_2799,call_2804,const_2803,])
func_2806 = relay.Function([], output)
mod['func_2806'] = func_2806
mod = relay.transform.InferType()(mod)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2806_call = mutated_mod.get_global_var('func_2806')
call_2807 = func_2806_call()
output = call_2807
func_2808 = relay.Function([], output)
mutated_mod['func_2808'] = func_2808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2806_call = mod.get_global_var('func_2806')
func_2808_call = mutated_mod.get_global_var('func_2808')
call_2824 = relay.TupleGetItem(func_2806_call(), 2)
call_2825 = relay.TupleGetItem(func_2808_call(), 2)
output = call_2824
output2 = call_2825
func_2826 = relay.Function([], output)
mod['func_2826'] = func_2826
mod = relay.transform.InferType()(mod)
mutated_mod['func_2826'] = func_2826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mutated_mod.get_global_var('func_2826')
call_2827 = func_2826_call()
output = call_2827
func_2828 = relay.Function([], output)
mutated_mod['func_2828'] = func_2828
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2829 = relay.constdtype = "float64")#candidate|2829|(7, 16, 15)|const|float64
const_2830 = relay.constdtype = "float64")#candidate|2830|(7, 16, 15)|const|float64
bop_2831 = relay.floor_divide(const_2829.astype('float64'), relay.reshape(const_2830.astype('float64'), relay.shape_of(const_2829))) # shape=(7, 16, 15)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
const_2837 = relay.const([-8,5,-10,-2,-1,3,10,-6,-10,8,4,10,8,7,6,2,-10,5,7,-10,8,6,3,-7,-4,3,-10,10,-8,6,8,-7,-6,8,-10,10,2,-7,9,-9,10,-2,4,-10,8,-6,5,7,-8,3,-3,-9,10,-1,-2,3,-2,-4,-9,-1,-2,5,2,9,7,9,4,5,6,4,-6,-1,3,5,2,1,2,-3,8,-6,3,-4,-5,-2,3,-8,4,7,7,-9,7,4,6,6,1,-10,9,-3,1,5,1,4,5,3,1,-10,2,8,5,-3,-7,-3,4,-3,1,-10,-3,10,-4,-7,-6,5,-5,7,8,6,-2,-4,-5,3,4,10,8,3,-4,-6,1,10,4,-4,9,8,9,10,-8,1,6,7,-1,5,3,6,5,-10,5,-3,-3,6,4,9,-8,-2,-10,-6,1,6,5,10,8,-8,3,7,-2,-10,-8,-8,7,-1,-1,10,8,-10,10,2,-9,2,2,7,-2,-10,-6,-9,10,-4,6,-7,-1,-9,6,-2,-10,8,-4,5,4,10,-8,4,8,-1,3,-9,4,7,9,-6,4,2,8,7,7,-1,6,-2,-3,-7,2,1,5,-5,-7,-5,4,-10,7,2,3,-8,9,3,5,-10,-7,-3,1,9,9,-1,-1,5,8,-1], dtype = "int32")#candidate|2837|(252,)|const|int32
call_2836 = relay.TupleGetItem(func_2615_call(relay.reshape(const_2837.astype('int32'), [252,])), 1)
call_2838 = relay.TupleGetItem(func_2617_call(relay.reshape(const_2837.astype('int32'), [252,])), 1)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_2854 = func_1115_call(relay.reshape(const_2837.astype('int32'), [6, 14, 3]), relay.reshape(const_2837.astype('int32'), [6, 14, 3]), )
call_2855 = func_1115_call(relay.reshape(const_2837.astype('int32'), [6, 14, 3]), relay.reshape(const_2837.astype('int32'), [6, 14, 3]), )
output = relay.Tuple([bop_2831,call_2836,const_2837,call_2854,])
output2 = relay.Tuple([bop_2831,call_2838,const_2837,call_2855,])
func_2866 = relay.Function([], output)
mod['func_2866'] = func_2866
mod = relay.transform.InferType()(mod)
mutated_mod['func_2866'] = func_2866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2866_call = mutated_mod.get_global_var('func_2866')
call_2867 = func_2866_call()
output = call_2867
func_2868 = relay.Function([], output)
mutated_mod['func_2868'] = func_2868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_2897 = func_2204_call()
call_2898 = func_2204_call()
output = call_2897
output2 = call_2898
func_2899 = relay.Function([], output)
mod['func_2899'] = func_2899
mod = relay.transform.InferType()(mod)
mutated_mod['func_2899'] = func_2899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2899_call = mutated_mod.get_global_var('func_2899')
call_2900 = func_2899_call()
output = call_2900
func_2901 = relay.Function([], output)
mutated_mod['func_2901'] = func_2901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
call_2933 = func_2899_call()
call_2934 = func_2899_call()
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_2956 = relay.TupleGetItem(func_2382_call(), 0)
call_2957 = relay.TupleGetItem(func_2384_call(), 0)
output = relay.Tuple([call_2933,call_2956,])
output2 = relay.Tuple([call_2934,call_2957,])
func_2965 = relay.Function([], output)
mod['func_2965'] = func_2965
mod = relay.transform.InferType()(mod)
output = func_2965()
func_2966 = relay.Function([], output)
mutated_mod['func_2966'] = func_2966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3046 = func_2204_call()
call_3047 = func_2204_call()
func_663_call = mod.get_global_var('func_663')
func_666_call = mutated_mod.get_global_var('func_666')
var_3069 = relay.var("var_3069", dtype = "int32", shape = (4, 72))#candidate|3069|(4, 72)|var|int32
call_3068 = func_663_call(relay.reshape(var_3069.astype('int32'), [4, 6, 12]), relay.reshape(var_3069.astype('int32'), [4, 6, 12]), )
call_3070 = func_663_call(relay.reshape(var_3069.astype('int32'), [4, 6, 12]), relay.reshape(var_3069.astype('int32'), [4, 6, 12]), )
uop_3074 = relay.sigmoid(var_3069.astype('float32')) # shape=(4, 72)
uop_3076 = relay.acosh(uop_3074.astype('float64')) # shape=(4, 72)
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_3078 = relay.TupleGetItem(func_2456_call(), 1)
call_3079 = relay.TupleGetItem(func_2457_call(), 1)
func_2806_call = mod.get_global_var('func_2806')
func_2808_call = mutated_mod.get_global_var('func_2808')
call_3080 = relay.TupleGetItem(func_2806_call(), 2)
call_3081 = relay.TupleGetItem(func_2808_call(), 2)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_3090 = relay.TupleGetItem(func_2866_call(), 0)
call_3091 = relay.TupleGetItem(func_2868_call(), 0)
uop_3099 = relay.acos(uop_3076.astype('float32')) # shape=(4, 72)
output = relay.Tuple([call_3046,call_3068,call_3078,call_3080,call_3090,uop_3099,])
output2 = relay.Tuple([call_3047,call_3070,call_3079,call_3081,call_3091,uop_3099,])
func_3103 = relay.Function([var_3069,], output)
mod['func_3103'] = func_3103
mod = relay.transform.InferType()(mod)
var_3104 = relay.var("var_3104", dtype = "int32", shape = (4, 72))#candidate|3104|(4, 72)|var|int32
output = func_3103(var_3104)
func_3105 = relay.Function([var_3104], output)
mutated_mod['func_3105'] = func_3105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mod.get_global_var('func_2826')
func_2828_call = mutated_mod.get_global_var('func_2828')
call_3156 = func_2826_call()
call_3157 = func_2826_call()
output = call_3156
output2 = call_3157
func_3164 = relay.Function([], output)
mod['func_3164'] = func_3164
mod = relay.transform.InferType()(mod)
output = func_3164()
func_3165 = relay.Function([], output)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_3168 = relay.TupleGetItem(func_2866_call(), 0)
call_3169 = relay.TupleGetItem(func_2868_call(), 0)
output = call_3168
output2 = call_3169
func_3172 = relay.Function([], output)
mod['func_3172'] = func_3172
mod = relay.transform.InferType()(mod)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mutated_mod.get_global_var('func_3172')
call_3173 = func_3172_call()
output = call_3173
func_3174 = relay.Function([], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
call_3220 = func_2899_call()
call_3221 = func_2899_call()
output = relay.Tuple([call_3220,])
output2 = relay.Tuple([call_3221,])
func_3227 = relay.Function([], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
output = func_3227()
func_3228 = relay.Function([], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2806_call = mod.get_global_var('func_2806')
func_2808_call = mutated_mod.get_global_var('func_2808')
call_3234 = relay.TupleGetItem(func_2806_call(), 0)
call_3235 = relay.TupleGetItem(func_2808_call(), 0)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
call_3241 = func_2899_call()
call_3242 = func_2899_call()
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_3256 = func_2170_call()
call_3257 = func_2170_call()
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_3261 = relay.TupleGetItem(func_3227_call(), 0)
call_3262 = relay.TupleGetItem(func_3228_call(), 0)
output = relay.Tuple([call_3234,call_3241,call_3256,call_3261,])
output2 = relay.Tuple([call_3235,call_3242,call_3257,call_3262,])
func_3267 = relay.Function([], output)
mod['func_3267'] = func_3267
mod = relay.transform.InferType()(mod)
mutated_mod['func_3267'] = func_3267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mutated_mod.get_global_var('func_3267')
call_3268 = func_3267_call()
output = call_3268
func_3269 = relay.Function([], output)
mutated_mod['func_3269'] = func_3269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3374 = func_2204_call()
call_3375 = func_2204_call()
func_2317_call = mod.get_global_var('func_2317')
func_2320_call = mutated_mod.get_global_var('func_2320')
var_3397 = relay.var("var_3397", dtype = "float32", shape = (1, 1536))#candidate|3397|(1, 1536)|var|float32
var_3398 = relay.var("var_3398", dtype = "float32", shape = (26,))#candidate|3398|(26,)|var|float32
call_3396 = relay.TupleGetItem(func_2317_call(relay.reshape(var_3397.astype('float32'), [16, 12, 8]), relay.reshape(var_3398.astype('float32'), [26, 1]), ), 1)
call_3399 = relay.TupleGetItem(func_2320_call(relay.reshape(var_3397.astype('float32'), [16, 12, 8]), relay.reshape(var_3398.astype('float32'), [26, 1]), ), 1)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3413 = func_3172_call()
call_3414 = func_3172_call()
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3418 = func_2204_call()
call_3419 = func_2204_call()
output = relay.Tuple([call_3374,call_3396,var_3397,var_3398,call_3413,call_3418,])
output2 = relay.Tuple([call_3375,call_3399,var_3397,var_3398,call_3414,call_3419,])
func_3424 = relay.Function([var_3397,var_3398,], output)
mod['func_3424'] = func_3424
mod = relay.transform.InferType()(mod)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3424_call = mutated_mod.get_global_var('func_3424')
var_3426 = relay.var("var_3426", dtype = "float32", shape = (1, 1536))#candidate|3426|(1, 1536)|var|float32
var_3427 = relay.var("var_3427", dtype = "float32", shape = (26,))#candidate|3427|(26,)|var|float32
call_3425 = func_3424_call(var_3426,var_3427,)
output = call_3425
func_3428 = relay.Function([var_3426,var_3427,], output)
mutated_mod['func_3428'] = func_3428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_3449 = relay.TupleGetItem(func_2456_call(), 2)
call_3450 = relay.TupleGetItem(func_2457_call(), 2)
output = relay.Tuple([call_3449,])
output2 = relay.Tuple([call_3450,])
func_3451 = relay.Function([], output)
mod['func_3451'] = func_3451
mod = relay.transform.InferType()(mod)
mutated_mod['func_3451'] = func_3451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3451_call = mutated_mod.get_global_var('func_3451')
call_3452 = func_3451_call()
output = call_3452
func_3453 = relay.Function([], output)
mutated_mod['func_3453'] = func_3453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_3545 = func_2170_call()
call_3546 = func_2170_call()
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3566 = func_2204_call()
call_3567 = func_2204_call()
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_3570 = relay.TupleGetItem(func_2456_call(), 3)
call_3571 = relay.TupleGetItem(func_2457_call(), 3)
output = relay.Tuple([call_3545,call_3566,call_3570,])
output2 = relay.Tuple([call_3546,call_3567,call_3571,])
func_3578 = relay.Function([], output)
mod['func_3578'] = func_3578
mod = relay.transform.InferType()(mod)
output = func_3578()
func_3579 = relay.Function([], output)
mutated_mod['func_3579'] = func_3579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_3673 = relay.TupleGetItem(func_2456_call(), 4)
call_3674 = relay.TupleGetItem(func_2457_call(), 4)
output = call_3673
output2 = call_3674
func_3678 = relay.Function([], output)
mod['func_3678'] = func_3678
mod = relay.transform.InferType()(mod)
output = func_3678()
func_3679 = relay.Function([], output)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3698 = relay.var("var_3698", dtype = "int32", shape = (12, 5, 2))#candidate|3698|(12, 5, 2)|var|int32
var_3699 = relay.var("var_3699", dtype = "int32", shape = (12, 5, 2))#candidate|3699|(12, 5, 2)|var|int32
bop_3700 = relay.right_shift(var_3698.astype('int32'), relay.reshape(var_3699.astype('int32'), relay.shape_of(var_3698))) # shape=(12, 5, 2)
bop_3703 = relay.logical_xor(var_3698.astype('uint64'), relay.reshape(var_3699.astype('uint64'), relay.shape_of(var_3698))) # shape=(12, 5, 2)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_3717 = relay.TupleGetItem(func_3451_call(), 0)
call_3718 = relay.TupleGetItem(func_3453_call(), 0)
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_3720 = relay.TupleGetItem(func_3227_call(), 0)
call_3721 = relay.TupleGetItem(func_3228_call(), 0)
func_192_call = mod.get_global_var('func_192')
func_195_call = mutated_mod.get_global_var('func_195')
var_3730 = relay.var("var_3730", dtype = "int16", shape = (143,))#candidate|3730|(143,)|var|int16
call_3729 = relay.TupleGetItem(func_192_call(relay.reshape(var_3730.astype('int16'), [13, 11, 1])), 0)
call_3731 = relay.TupleGetItem(func_195_call(relay.reshape(var_3730.astype('int16'), [13, 11, 1])), 0)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_3750 = relay.TupleGetItem(func_2866_call(), 3)
call_3751 = relay.TupleGetItem(func_2868_call(), 3)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_3753 = func_2170_call()
call_3754 = func_2170_call()
bop_3758 = relay.logical_xor(call_3720.astype('int64'), relay.reshape(call_3753.astype('int64'), relay.shape_of(call_3720))) # shape=(2, 7, 5)
bop_3761 = relay.logical_xor(call_3721.astype('int64'), relay.reshape(call_3754.astype('int64'), relay.shape_of(call_3721))) # shape=(2, 7, 5)
func_3424_call = mod.get_global_var('func_3424')
func_3428_call = mutated_mod.get_global_var('func_3428')
const_3767 = relay.const([7.567357,3.057777,5.703597,-5.808608,1.106591,-5.946630,1.957562,4.813097,-5.435545,5.897439,-3.441623,5.179619,-7.163047,4.368997,-1.692197,-8.705878,6.807856,2.343015,-1.174429,-8.107632,2.086974,2.279745,-2.031816,-3.017829,5.669275,-1.783074,5.775274,-2.991603,-6.269313,-1.711794,-5.642565,-1.241289,-2.380963,-4.675582,5.250593,4.873382,-9.499124,-1.858720,2.171807,0.835719,-1.939920,-0.336442,-2.081203,-6.199432,-2.229404,2.991109,1.363819,4.961962,-0.038800,-4.723075,-3.850739,-8.938963,-9.486166,7.486983,1.397267,8.120312,-1.189535,-3.953991,-4.622191,-3.655362,0.163816,5.284118,9.115600,-8.040473,7.158483,-9.510432,-6.936568,-3.067954,8.580117,-2.599331,-0.260780,-0.101423,5.790322,2.461744,7.253466,7.784329,-4.934775,-2.570738,5.759854,2.951047,9.409075,-0.641426,-5.709246,8.594390,-8.925898,-3.362370,0.401811,2.840518,1.171668,-6.834570,-6.078254,4.603014,-2.297541,0.099734,0.954000,-7.171836,-8.743210,-5.997551,5.812327,-1.850885,-2.940152,1.853360,9.147472,-5.327301,6.825693,-7.178654,-8.225666,-3.283464,8.102531,-2.909522,-3.511273,9.837917,7.292563,3.928612,0.547679,-6.728660,3.613563,9.191966,6.952486,3.902546,-2.100717,-6.129571,-6.522821,-3.135807,-4.997190,-5.689378,0.314173,1.605811,8.305267,-2.960493,-1.720309,-9.717298,-1.643054,8.568328,-7.588734,-5.204383,-7.221740,1.474371,-4.918919,-6.237014,1.402420,8.004793,-3.565576,6.356484,-0.981956,1.012272,7.344190,-5.641072,1.810374,5.681894,-9.837439,7.961196,-4.897507,1.235377,-6.080281,-2.188413,-9.851458,-9.213197,-5.902795,1.052997,3.902910,-6.781002,-2.517034,-0.269726,-9.462287,9.022286,-4.860818,8.033433,-1.971764,0.319563,-1.596338,-2.129558,3.430705,0.268154,-1.076468,-0.591508,5.325432,-9.962182,6.976211,-3.501348,-8.896002,2.500160,-2.185868,-3.228063,5.535622,4.896232,8.269148,9.087546,-7.082499,-4.245605,0.298381,3.421618,0.035876,-7.971833,-9.288738,-6.409286,0.597839,2.087156,-3.492186,-9.820606,3.812939,3.586625,3.100577,-8.600632,-9.670831,-9.950883,0.004224,-7.530276,-5.243762,-0.760598,1.930619,2.588711,-9.885664,-4.539365,-1.028909,-5.277380,-4.734461,-5.237689,-5.444140,-2.488367,-5.961460,-9.573127,-4.815517,-1.242301,-2.789513,7.696068,-5.780700,-8.918914,-9.608902,6.140650,6.598848,-4.618816,-4.907780,2.105290,3.487330,8.272837,-5.096524,-9.567965,-9.498786,2.719318,2.321309,2.507824,-3.761188,-4.484050,-4.153467,9.534042,6.251444,-0.856592,0.021121,8.583072,2.714381,-7.808218,-2.612578,-8.304810,9.429595,3.038613,-8.297396,-1.677268,-7.745114,7.942130,5.344364,-8.874147,8.161091,-7.588055,-9.789201,3.630956,-2.282550,-1.273314,-3.911169,5.334091,-0.097279,-9.638446,1.731973,0.436257,2.316245,3.171001,-1.034704,-3.082931,-8.756057,-4.981019,-7.149740,-7.614247,0.396550,7.160007,4.475703,5.617657,-7.609626,-1.656522,1.094566,6.850163,1.197091,9.384485,9.166037,8.625242,-4.224023,-2.741357,4.303493,1.142468,6.827793,5.412239,7.075437,2.721152,-6.162352,-6.717347,0.493870,0.019537,-8.322011,-2.391819,-1.446185,1.077775,8.925916,7.722531,-9.503266,2.041256,1.753137,-2.777480,-7.631318,-5.577895,6.551287,-0.753062,7.971996,3.748106,-6.988240,1.782757,8.295576,9.213343,-1.814000,-2.256293,8.927597,4.623131,-5.945122,3.239523,8.786381,1.333123,-3.379936,1.477764,4.190960,6.606216,4.801504,-5.293609,6.873073,8.499556,-8.091986,-2.465008,-4.629245,1.404198,3.955146,7.488786,-3.055333,-2.791645,-9.427227,-5.778126,-3.349302,9.156808,-3.132609,5.043846,7.697935,-3.287455,-8.938684,9.120111,-0.056902,6.659934,9.748025,-3.909399,4.062311,2.367211,-6.433188,-2.352196,6.432037,-4.026023,3.926125,-8.246696,8.335479,0.969762,8.134300,-9.261209,1.683851,-1.805022,-1.795106,-8.838183,2.497808,0.220959,-6.373112,-7.533774,7.327221,0.362220,-3.372607,8.305292,-9.798497,0.134229,1.043676,2.130069,6.658016,2.732666,-2.604403,-0.593361,8.693992,-4.704517,2.027165,-8.442598,2.891888,0.010442,1.312843,0.371543,7.696377,1.066391,-6.951215,7.260751,-2.569220,9.664739,1.950489,-6.648754,6.248885,-0.415817,-4.729650,0.457325,-4.434273,3.458053,7.573868,-2.270992,-5.121007,8.128343,-2.430860,-8.338451,-2.598092,-9.914733,7.874505,-3.306196,3.982621,3.253982,1.397061,1.148620,-6.773000,4.608213,-4.200933,-1.085451,-9.405341,0.658843,7.975442,6.558304,-5.209884,4.375934,6.641634,-2.264768,-5.543218,-6.596432,7.728638,5.288309,-1.995272,2.103391,-4.011880,7.059686,-5.480217,-5.719472,5.096684,6.016874,7.222893,6.357701,-7.526396,0.409410,-6.659492,8.313461,0.653787,9.801784,8.308586,-8.202533,-4.059027,-6.726370,7.776592,-8.612411,0.709662,-7.132530,-3.170009,7.298579,6.888326,4.990771,-1.891907,3.507481,-4.498011,0.397842,-0.904378,8.432772,-8.990825,0.647798,-1.561096,-7.164504,7.422544,-0.757317,-9.946086,-5.608864,-7.315728,0.562876,-2.200860,3.086736,8.121495,6.825993,-2.741078,9.441153,-5.381567,-5.730706,-1.067918,-8.198594,3.440916,-8.500811,-2.974319,-6.879488,-4.767356,4.707353,-0.899254,6.971888,-5.917614,4.080795,-3.356243,5.581973,7.015503,9.904899,-6.421325,8.425917,1.248169,7.774465,2.565877,-1.648427,-0.790032,-5.039853,-9.804663,-8.102388,-1.795459,-6.004417,-7.367561,-2.154812,2.559682,-9.517816,7.291754,-2.020199,2.210354,7.222111,1.176818,-7.720977,9.747790,-9.411392,2.174910,-4.563161,6.256720,-7.902931,-5.057945,1.803081,-4.865525,0.952383,-3.409983,-2.812967,-7.296195,-3.161970,-8.619211,9.046144,8.362658,1.771481,-8.447849,8.215206,-0.653475,-5.245356,-0.336653,8.230088,2.912987,-1.540288,-3.604443,5.502107,-8.815460,-3.792333,-5.385328,8.618337,2.863069,-6.587390,-1.246204,9.623106,6.924507,-9.971860,-4.563064,6.816466,-1.667984,1.914229,-4.734045,1.912700,-7.430113,2.501246,7.235385,-8.033356,-7.181145,4.811925,-9.434553,5.988088,-9.351044,9.054162,3.385317,-0.804669,8.530968,-4.263187,-6.973918,-6.225242,3.551140,5.195644,-9.043386,-0.979557,5.428663,-7.631449,-6.424807,9.137258,8.182994,6.408161,6.926285,-6.110134,7.830641,0.244358,4.068286,-9.397477,5.227977,5.814677,-7.552422,-6.236572,4.896428,6.036497,4.851683,-6.676141,-1.724198,5.777562,1.794215,-3.525629,8.329709,-8.134834,0.185730,2.907559,8.559626,1.241699,-8.200404,3.851436,-6.144380,-7.729332,4.847718,-9.444070,-6.682860,-3.304662,8.473155,0.808295,-4.514598,1.025233,-9.415137,-9.152705,-2.170089,4.014356,-0.591729,-5.325360,-9.656563,-4.866531,-9.692974,2.797677,-6.550990,-5.001234,-8.437615,-6.542187,-9.996286,-7.307033,3.923563,-3.642799,-9.778587,-0.034923,-1.560104,5.692360,0.919242,-1.749415,-3.444689,8.425018,3.290948,3.143578,2.626000,-0.300617,0.492743,-6.022848,-6.209004,-4.193046,9.639692,3.546747,-5.939145,-9.117325,-4.500591,1.222701,-4.099934,4.742004,-4.852797,0.638734,3.620537,3.612649,-9.116518,5.205922,-1.437842,-6.562474,-5.966441,6.833853,-9.502985,4.562733,2.272465,-6.550575,5.125153,3.413717,-0.693886,7.255357,1.720299,-3.492308,-2.429906,-2.296410,-2.887205,-2.284532,-5.801780,2.367698,4.080642,2.502683,2.594729,-6.126198,4.971911,-1.459622,-0.792168,1.014088,9.896840,-4.180713,9.977513,-8.305539,8.664736,2.774088,9.710709,-6.489291,6.599937,6.054947,2.553490,1.376721,2.990318,-7.350437,9.460587,9.963070,-3.654382,-8.777924,-1.745489,2.865911,-9.589429,8.365031,0.393440,-0.618212,9.461852,2.001235,-3.777036,-6.395633,-5.645269,2.235478,-0.904994,-8.391024,-0.320691,7.760195,-4.470960,-9.472805,2.621362,-2.146163,-4.530623,9.818317,-9.969026,-7.919238,4.856518,-7.896352,-0.478346,3.102936,3.518598,8.864641,-0.328430,-7.329637,0.295972,4.118370,2.682647,3.203402,0.374247,8.352173,8.649786,-7.986137,-3.057170,-0.505618,-2.669403,-7.951881,-8.238052,-9.070488,-5.085400,6.350962,7.854919,-7.282939,-0.068387,-1.777713,-8.241080,9.584951,-4.444015,-6.250621,-6.055210,7.504992,-7.607753,-1.421963,9.860451,2.016459,-7.843863,9.248454,-4.550180,-4.042932,6.087266,-0.943995,-7.221260,3.682528,4.301544,-2.872770,-3.813023,-6.913800,1.115098,9.439732,5.883428,-9.099994,3.811398,-0.309309,6.615422,-2.751143,6.084458,-7.827199,-3.499262,-7.346419,7.966426,-9.011592,-1.093117,-8.789449,8.251471,-4.623154,-1.813676,-0.845176,-2.447980,3.477650,1.362373,-2.184433,-7.697114,9.940083,-1.379834,-2.203983,-0.491858,-4.364014,-0.293987,-9.738185,-2.493399,-1.202934,1.997944,8.660486,3.065277,0.872796,-1.743253,-1.955953,-3.017179,-1.540968,4.300882,-9.003047,1.370773,6.081589,8.432163,5.323538,-5.301158,-0.959699,0.151178,-0.833679,8.428101,3.385545,9.227809,-6.428469,5.639786,5.453697,-3.831169,-8.303501,-5.472150,0.075749,0.180815,8.202126,-6.258377,0.075775,0.752095,2.247894,3.636704,8.926726,-7.069068,-2.147433,-9.888788,-1.710537,4.575829,-8.106173,-0.886443,6.584886,-5.755887,-2.973368,9.176227,-5.988596,1.133086,3.751092,5.219574,0.094680,-1.278982,6.884135,4.264931,5.242071,0.243457,-6.964237,0.119616,0.702236,5.240940,8.950394,-2.433075,1.162848,9.707868,-9.424560,5.737983,-7.846150,-4.585680,-5.783154,4.050792,-8.434952,4.975282,4.540680,0.089304,7.164503,-2.648178,4.346935,-7.639539,-5.222711,3.507385,-7.434013,-6.372245,-1.821497,4.114082,7.817074,1.698031,6.992931,-4.071107,7.990427,1.763849,-5.638122,5.389783,-2.554581,7.582533,7.963975,-2.996359,5.750516,-6.885388,8.287802,2.814301,0.653538,-3.508795,9.989456,5.208312,-8.916387,0.833126,-8.707864,-8.964800,4.968545,8.539664,-8.525541,-8.925816,-8.182780,-7.358923,-6.822458,-7.038631,-6.761302,-3.031060,-3.362628,-8.075261,0.670110,5.354014,1.365880,-4.354554,9.904463,8.105603,3.600404,-6.351749,1.982253,3.343264,-9.921965,3.308024,0.321791,-5.984974,6.051806,-1.694486,6.272541,-0.468354,-2.963895,6.307668,-9.987071,4.380376,-1.283782,7.742359,-5.088168,-5.403914,3.565459,1.710996,6.061623,-0.387298,1.447582,0.119778,-0.404176,9.718998,7.656189,7.959273,3.626319,8.553126,-1.543373,2.206021,-1.119053,7.927239,9.996611,-0.008907,-3.146815,1.767760,0.988285,-0.418696,-6.027693,-0.016653,-8.915383,9.373497,8.804734,-3.227976,-4.855131,-0.509425,4.844930,-7.743400,5.050800,6.425588,5.199692,8.231515,-9.087653,-4.476614,3.496214,-3.211496,-3.449188,0.447491,-2.246108,0.928100,-5.640646,7.445449,7.732355,-2.609430,-6.628842,5.184325,4.725716,0.007093,-5.592178,-9.945151,-4.808454,-8.577322,3.512569,-9.840385,7.523861,-3.106440,-4.608324,4.451460,6.413568,-4.844023,6.007325,7.455018,-7.133050,-0.159425,-2.939585,-9.879104,0.692974,-4.755626,-6.839915,3.110421,-4.133472,4.468562,3.757117,6.606841,3.709956,1.579375,9.382383,1.800395,1.212213,-8.743904,-4.057750,-7.279313,3.964100,-7.851015,-8.175005,2.760775,0.158541,7.987406,7.436939,5.285404,-0.404780,-5.640173,2.060304,6.733108,4.058984,3.287380,-3.592123,-3.869820,-0.474463,0.876299,-7.451152,1.115353,-4.226880,-0.278014,7.643996,-5.899269,-2.312973,4.086037,-6.188490,-5.181338,2.652655,2.936463,-8.270282,2.800650,9.346631,5.090441,-1.997538,0.644587,2.954006,-2.222657,-0.476374,-1.286432,8.964102,-5.212853,-5.794188,-3.761556,-2.324933,4.197047,9.380051,9.578291,5.532280,-9.184059,-6.124370,-9.890337,9.357916,-9.987828,1.078066,3.947628,2.133548,-8.207298,-4.669804,8.450706,7.330582,0.708486,5.230344,4.306361,3.908410,-6.233338,8.647678,3.687709,-6.620480,-4.004343,-7.415775,-5.576010,-5.059353,0.904973,5.450451,5.731120,9.264444,6.993914,-4.882113,-0.411109,-1.114804,6.986618,1.594902,5.410048,-2.304745,-3.214249,5.572179,-9.534712,1.487456,-1.829203,-1.158747,4.092444,5.131423,8.680242,5.067164,8.861824,-6.681705,-7.985731,-5.394131,2.212272,7.389457,5.760320,1.717598,-5.755287,-2.985363,7.509054,3.844443,-4.190689,-2.120079,-3.594728,6.883168,6.797682,-1.672403,-2.575342,0.710998,0.454389,1.941595,7.099220,2.402719,5.570113,8.030407,-3.977851,-0.155750,8.774482,-5.196477,-0.501755,1.467654,-9.816004,9.545686,-5.464602,-6.254701,-2.157098,4.790057,-4.640168,5.454568,-0.157264,9.886301,2.949064,6.800910,-1.157400,-7.076594,-7.471491,-6.574608,8.511848,0.758307,7.767251,-4.613517,4.386001,2.972917,-0.264975,2.239171,9.961156,1.721126,-1.436798,5.322185,0.529482,-6.525345,-3.688935,-1.302661,-7.864896,5.703204,9.122844,2.103890,5.685832,5.391296,-1.256945,-5.642578,6.994097,-6.239927,5.756727,-4.700755,-7.496484,-5.245617,1.798783,-8.242157,-4.060443,3.816764,9.089327,-6.352672,-8.812411,-1.154465,-2.792564,-7.888403,2.398691,-9.657620,4.413321,1.006013,3.515447,-0.233175,-6.499827,-4.897681,-3.751410,-6.094943,8.644099,8.612602,-9.450162,-6.419071,-1.600824,-3.305901,3.722098,-4.086622,9.881646,-6.278242,6.356409,-8.656839,-1.661223,-3.560906,-9.346926,-9.562949,0.817760,1.743165,-3.342447,4.737917,3.665030,-1.827762,-4.519153,8.870166,-1.669151,-1.145229,-8.495604,0.365157,5.261590,7.995185,-4.085787,8.872279,9.216264,-0.176741,-0.503160,9.944479,5.173358,4.775042,-7.155166,-6.760848,-3.069549,0.853781,6.500622,2.394567,-4.288555,-1.530797,7.901577,5.778557,6.635540,-2.347524,1.597022,5.562958,2.919262,-0.323811,4.559420,-9.141544,2.992220,-2.496394,-9.596051,8.889170,-0.887737,8.791175,-1.886518,5.342638,-2.490707,6.359858,4.468360,0.977746,7.336931,-9.546861,-2.533815,5.289127,-7.924181,-4.538270,8.583820,-0.850422,3.069642,8.875454,-1.977049,1.043349,-3.302990,-0.720779,9.772606,-2.126217,9.876824,5.221590,5.609118,2.446801,-2.428528,-5.240151,0.739064,-3.175440,2.607939,-0.348889,-4.350434,-4.062709,0.268141,-9.996490,-6.380817,1.462006,5.318107,4.936735,8.631838,4.180983,-7.193100,-7.797081,-7.346781,0.521437,-9.650470,3.858269,7.965707,-4.872581,-5.664664,-0.563660,4.714071,-3.583623,-4.121761,-2.821834,-6.910942,-6.591086,2.257121,-3.226178,0.560496,9.035482,-4.449163,-4.497464,7.867869,-5.391805,8.721316,-2.058430,-2.112112,1.897822,3.561235,6.128703,5.478020,-9.292600,-9.188453,-7.816585,-8.090061,1.328469,-7.580384,9.799061,-0.997558,1.287156,-5.982767,0.346347,-8.577062,0.430492,-4.632294,4.371554,-8.133072,-0.614510,5.750190,-4.957703,0.691925,-2.598941,3.859058,5.750268,0.472327,9.041543,-1.256300,-8.123817,-9.791953,-5.766865,-4.989858,-4.117844,-8.778264,2.679192,-7.856155,3.057360,-6.305539,1.426521,5.214263,1.703284,-6.948021,-8.358950,7.760003,8.983784,2.685920,-7.067754,-4.372766,-6.352240,-4.125426,-5.140529,-0.202116,-0.875502,2.331594,-8.341129,-5.744924,7.790194,8.868196,7.684145,-8.088107,-3.872082,1.475951,-0.909054,5.561355,-2.623870,-8.942249,-0.818815,-6.064739,2.571458,9.583288,7.220121,-8.823890,-7.252672,-1.977707,-5.558173,-0.211837,-0.868973,-4.883012,0.784809,-4.849656,3.357770,-7.363800,4.235664,-4.483175,-7.464190,-9.513837,9.300226,-1.754423,-5.665448,1.355268,-5.971437,7.287451,0.280598,7.702296,-4.567444,-9.738891,-3.447487,6.875888,-3.063691,4.282084,2.511573,-5.640902,-6.283398,-9.056309,7.057547,8.905923,-9.041168,7.524620,-9.707429,-6.887156,-4.627277,-8.809439,-6.879891,-9.136791,5.641316,0.763058,2.654927,1.930539,1.411894,3.241728,-7.167574,-0.560090,3.069283,-4.168964,-6.089821,-2.328157,-0.818654,2.024361,0.531474,3.188540,4.851072], dtype = "float32")#candidate|3767|(1536,)|const|float32
call_3766 = relay.TupleGetItem(func_3424_call(relay.reshape(const_3767.astype('float32'), [1, 1536]), relay.reshape(call_3717.astype('float32'), [26,]), ), 0)
call_3768 = relay.TupleGetItem(func_3428_call(relay.reshape(const_3767.astype('float32'), [1, 1536]), relay.reshape(call_3717.astype('float32'), [26,]), ), 0)
output = relay.Tuple([bop_3700,bop_3703,call_3717,call_3729,var_3730,call_3750,bop_3758,call_3766,const_3767,])
output2 = relay.Tuple([bop_3700,bop_3703,call_3718,call_3731,var_3730,call_3751,bop_3761,call_3768,const_3767,])
func_3769 = relay.Function([var_3698,var_3699,var_3730,], output)
mod['func_3769'] = func_3769
mod = relay.transform.InferType()(mod)
var_3770 = relay.var("var_3770", dtype = "int32", shape = (12, 5, 2))#candidate|3770|(12, 5, 2)|var|int32
var_3771 = relay.var("var_3771", dtype = "int32", shape = (12, 5, 2))#candidate|3771|(12, 5, 2)|var|int32
var_3772 = relay.var("var_3772", dtype = "int16", shape = (143,))#candidate|3772|(143,)|var|int16
output = func_3769(var_3770,var_3771,var_3772,)
func_3773 = relay.Function([var_3770,var_3771,var_3772,], output)
mutated_mod['func_3773'] = func_3773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_3860 = relay.TupleGetItem(func_2456_call(), 2)
call_3861 = relay.TupleGetItem(func_2457_call(), 2)
uop_3865 = relay.rsqrt(call_3860.astype('float32')) # shape=(1, 2, 13)
uop_3867 = relay.rsqrt(call_3861.astype('float32')) # shape=(1, 2, 13)
output = relay.Tuple([uop_3865,])
output2 = relay.Tuple([uop_3867,])
func_3876 = relay.Function([], output)
mod['func_3876'] = func_3876
mod = relay.transform.InferType()(mod)
output = func_3876()
func_3877 = relay.Function([], output)
mutated_mod['func_3877'] = func_3877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_3882 = relay.TupleGetItem(func_3267_call(), 0)
call_3883 = relay.TupleGetItem(func_3269_call(), 0)
output = relay.Tuple([call_3882,])
output2 = relay.Tuple([call_3883,])
func_3886 = relay.Function([], output)
mod['func_3886'] = func_3886
mod = relay.transform.InferType()(mod)
mutated_mod['func_3886'] = func_3886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3886_call = mutated_mod.get_global_var('func_3886')
call_3887 = func_3886_call()
output = call_3887
func_3888 = relay.Function([], output)
mutated_mod['func_3888'] = func_3888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_3904 = relay.TupleGetItem(func_3267_call(), 3)
call_3905 = relay.TupleGetItem(func_3269_call(), 3)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_3914 = relay.TupleGetItem(func_3451_call(), 0)
call_3915 = relay.TupleGetItem(func_3453_call(), 0)
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_3923 = relay.TupleGetItem(func_2456_call(), 1)
call_3924 = relay.TupleGetItem(func_2457_call(), 1)
output = relay.Tuple([call_3904,call_3914,call_3923,])
output2 = relay.Tuple([call_3905,call_3915,call_3924,])
func_3925 = relay.Function([], output)
mod['func_3925'] = func_3925
mod = relay.transform.InferType()(mod)
output = func_3925()
func_3926 = relay.Function([], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3886_call = mod.get_global_var('func_3886')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_3968 = relay.TupleGetItem(func_3886_call(), 0)
call_3969 = relay.TupleGetItem(func_3888_call(), 0)
output = relay.Tuple([call_3968,])
output2 = relay.Tuple([call_3969,])
func_3976 = relay.Function([], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mutated_mod.get_global_var('func_3976')
call_3977 = func_3976_call()
output = call_3977
func_3978 = relay.Function([], output)
mutated_mod['func_3978'] = func_3978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2526_call = mod.get_global_var('func_2526')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_4036 = relay.TupleGetItem(func_2526_call(), 2)
call_4037 = relay.TupleGetItem(func_2528_call(), 2)
func_3876_call = mod.get_global_var('func_3876')
func_3877_call = mutated_mod.get_global_var('func_3877')
call_4041 = relay.TupleGetItem(func_3876_call(), 0)
call_4042 = relay.TupleGetItem(func_3877_call(), 0)
output = relay.Tuple([call_4036,call_4041,])
output2 = relay.Tuple([call_4037,call_4042,])
func_4081 = relay.Function([], output)
mod['func_4081'] = func_4081
mod = relay.transform.InferType()(mod)
mutated_mod['func_4081'] = func_4081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4081_call = mutated_mod.get_global_var('func_4081')
call_4082 = func_4081_call()
output = call_4082
func_4083 = relay.Function([], output)
mutated_mod['func_4083'] = func_4083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4125 = relay.var("var_4125", dtype = "float64", shape = (7, 14, 13))#candidate|4125|(7, 14, 13)|var|float64
uop_4126 = relay.log2(var_4125.astype('float64')) # shape=(7, 14, 13)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_4129 = func_2170_call()
call_4130 = func_2170_call()
func_3876_call = mod.get_global_var('func_3876')
func_3877_call = mutated_mod.get_global_var('func_3877')
call_4137 = relay.TupleGetItem(func_3876_call(), 0)
call_4138 = relay.TupleGetItem(func_3877_call(), 0)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_4157 = relay.TupleGetItem(func_2153_call(), 0)
call_4158 = relay.TupleGetItem(func_2154_call(), 0)
func_2965_call = mod.get_global_var('func_2965')
func_2966_call = mutated_mod.get_global_var('func_2966')
call_4165 = relay.TupleGetItem(func_2965_call(), 0)
call_4166 = relay.TupleGetItem(func_2966_call(), 0)
func_2024_call = mod.get_global_var('func_2024')
func_2027_call = mutated_mod.get_global_var('func_2027')
var_4168 = relay.var("var_4168", dtype = "float64", shape = (1650,))#candidate|4168|(1650,)|var|float64
call_4167 = func_2024_call(relay.reshape(var_4168.astype('float64'), [15, 10, 11]))
call_4169 = func_2024_call(relay.reshape(var_4168.astype('float64'), [15, 10, 11]))
output = relay.Tuple([uop_4126,call_4129,call_4137,call_4157,call_4165,call_4167,var_4168,])
output2 = relay.Tuple([uop_4126,call_4130,call_4138,call_4158,call_4166,call_4169,var_4168,])
func_4175 = relay.Function([var_4125,var_4168,], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mutated_mod.get_global_var('func_4175')
var_4177 = relay.var("var_4177", dtype = "float64", shape = (7, 14, 13))#candidate|4177|(7, 14, 13)|var|float64
var_4178 = relay.var("var_4178", dtype = "float64", shape = (1650,))#candidate|4178|(1650,)|var|float64
call_4176 = func_4175_call(var_4177,var_4178,)
output = call_4176
func_4179 = relay.Function([var_4177,var_4178,], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_4183 = relay.TupleGetItem(func_3976_call(), 0)
call_4184 = relay.TupleGetItem(func_3978_call(), 0)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_4185 = func_2170_call()
call_4186 = func_2170_call()
bop_4198 = relay.greater_equal(call_4183.astype('bool'), relay.reshape(call_4185.astype('bool'), relay.shape_of(call_4183))) # shape=(2, 7, 5)
bop_4201 = relay.greater_equal(call_4184.astype('bool'), relay.reshape(call_4186.astype('bool'), relay.shape_of(call_4184))) # shape=(2, 7, 5)
output = bop_4198
output2 = bop_4201
func_4224 = relay.Function([], output)
mod['func_4224'] = func_4224
mod = relay.transform.InferType()(mod)
output = func_4224()
func_4225 = relay.Function([], output)
mutated_mod['func_4225'] = func_4225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4246 = relay.var("var_4246", dtype = "bool", shape = (7, 1, 2))#candidate|4246|(7, 1, 2)|var|bool
var_4247 = relay.var("var_4247", dtype = "bool", shape = (7, 3, 2))#candidate|4247|(7, 3, 2)|var|bool
bop_4248 = relay.logical_and(var_4246.astype('bool'), var_4247.astype('bool')) # shape=(7, 3, 2)
bop_4258 = relay.divide(var_4246.astype('float64'), var_4247.astype('float64')) # shape=(7, 3, 2)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_4276 = relay.TupleGetItem(func_2382_call(), 1)
call_4277 = relay.TupleGetItem(func_2384_call(), 1)
uop_4281 = relay.log2(var_4246.astype('float32')) # shape=(7, 1, 2)
func_2317_call = mod.get_global_var('func_2317')
func_2320_call = mutated_mod.get_global_var('func_2320')
var_4294 = relay.var("var_4294", dtype = "float32", shape = (64, 24))#candidate|4294|(64, 24)|var|float32
var_4295 = relay.var("var_4295", dtype = "float32", shape = (26,))#candidate|4295|(26,)|var|float32
call_4293 = relay.TupleGetItem(func_2317_call(relay.reshape(var_4294.astype('float32'), [16, 12, 8]), relay.reshape(var_4295.astype('float32'), [26, 1]), ), 2)
call_4296 = relay.TupleGetItem(func_2320_call(relay.reshape(var_4294.astype('float32'), [16, 12, 8]), relay.reshape(var_4295.astype('float32'), [26, 1]), ), 2)
output = relay.Tuple([bop_4248,bop_4258,call_4276,uop_4281,call_4293,var_4294,var_4295,])
output2 = relay.Tuple([bop_4248,bop_4258,call_4277,uop_4281,call_4296,var_4294,var_4295,])
func_4311 = relay.Function([var_4246,var_4247,var_4294,var_4295,], output)
mod['func_4311'] = func_4311
mod = relay.transform.InferType()(mod)
var_4312 = relay.var("var_4312", dtype = "bool", shape = (7, 1, 2))#candidate|4312|(7, 1, 2)|var|bool
var_4313 = relay.var("var_4313", dtype = "bool", shape = (7, 3, 2))#candidate|4313|(7, 3, 2)|var|bool
var_4314 = relay.var("var_4314", dtype = "float32", shape = (64, 24))#candidate|4314|(64, 24)|var|float32
var_4315 = relay.var("var_4315", dtype = "float32", shape = (26,))#candidate|4315|(26,)|var|float32
output = func_4311(var_4312,var_4313,var_4314,var_4315,)
func_4316 = relay.Function([var_4312,var_4313,var_4314,var_4315,], output)
mutated_mod['func_4316'] = func_4316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2965_call = mod.get_global_var('func_2965')
func_2966_call = mutated_mod.get_global_var('func_2966')
call_4337 = relay.TupleGetItem(func_2965_call(), 0)
call_4338 = relay.TupleGetItem(func_2966_call(), 0)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
var_4340 = relay.var("var_4340", dtype = "int32", shape = (252,))#candidate|4340|(252,)|var|int32
call_4339 = func_1115_call(relay.reshape(var_4340.astype('int32'), [6, 14, 3]), relay.reshape(var_4340.astype('int32'), [6, 14, 3]), )
call_4341 = func_1115_call(relay.reshape(var_4340.astype('int32'), [6, 14, 3]), relay.reshape(var_4340.astype('int32'), [6, 14, 3]), )
output = relay.Tuple([call_4337,call_4339,var_4340,])
output2 = relay.Tuple([call_4338,call_4341,var_4340,])
func_4366 = relay.Function([var_4340,], output)
mod['func_4366'] = func_4366
mod = relay.transform.InferType()(mod)
var_4367 = relay.var("var_4367", dtype = "int32", shape = (252,))#candidate|4367|(252,)|var|int32
output = func_4366(var_4367)
func_4368 = relay.Function([var_4367], output)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mod.get_global_var('func_2826')
func_2828_call = mutated_mod.get_global_var('func_2828')
call_4373 = func_2826_call()
call_4374 = func_2826_call()
func_4081_call = mod.get_global_var('func_4081')
func_4083_call = mutated_mod.get_global_var('func_4083')
call_4381 = relay.TupleGetItem(func_4081_call(), 1)
call_4382 = relay.TupleGetItem(func_4083_call(), 1)
output = relay.Tuple([call_4373,call_4381,])
output2 = relay.Tuple([call_4374,call_4382,])
func_4391 = relay.Function([], output)
mod['func_4391'] = func_4391
mod = relay.transform.InferType()(mod)
output = func_4391()
func_4392 = relay.Function([], output)
mutated_mod['func_4392'] = func_4392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_4405 = relay.TupleGetItem(func_3976_call(), 0)
call_4406 = relay.TupleGetItem(func_3978_call(), 0)
output = call_4405
output2 = call_4406
func_4420 = relay.Function([], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
output = func_4420()
func_4421 = relay.Function([], output)
mutated_mod['func_4421'] = func_4421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4224_call = mod.get_global_var('func_4224')
func_4225_call = mutated_mod.get_global_var('func_4225')
call_4444 = func_4224_call()
call_4445 = func_4224_call()
var_4451 = relay.var("var_4451", dtype = "bool", shape = (2, 7, 5))#candidate|4451|(2, 7, 5)|var|bool
bop_4452 = relay.mod(call_4444.astype('float32'), relay.reshape(var_4451.astype('float32'), relay.shape_of(call_4444))) # shape=(2, 7, 5)
bop_4455 = relay.mod(call_4445.astype('float32'), relay.reshape(var_4451.astype('float32'), relay.shape_of(call_4445))) # shape=(2, 7, 5)
func_3769_call = mod.get_global_var('func_3769')
func_3773_call = mutated_mod.get_global_var('func_3773')
var_4466 = relay.var("var_4466", dtype = "int32", shape = (120,))#candidate|4466|(120,)|var|int32
const_4467 = relay.const([[-4],[-8],[-8],[2],[9],[-7],[6],[9],[6],[-4],[-3],[-7],[2],[-10],[7],[1],[-10],[8],[3],[6],[-3],[4],[-2],[3],[-5],[4],[-6],[8],[2],[5],[3],[1],[-4],[-1],[-10],[2],[1],[-3],[9],[10],[7],[-3],[-5],[-8],[-1],[4],[-8],[9],[-5],[2],[9],[-9],[10],[-3],[1],[2],[-7],[8],[-7],[7],[-9],[2],[-8],[-3],[1],[-10],[-9],[-1],[2],[7],[-7],[-9],[5],[-6],[-4],[-10],[6],[4],[5],[8],[-5],[8],[-9],[3],[5],[5],[1],[10],[-3],[-10],[-1],[-2],[6],[-2],[-5],[9],[-1],[4],[-8],[-1],[8],[-8],[-2],[-7],[-5],[4],[1],[3],[-3],[-10],[-7],[10],[6],[8],[-2],[-10],[9],[-1],[6],[-7],[-9],[5],[8],[9],[2],[2],[10],[9],[-6],[1],[-8],[-10],[9],[-9],[1],[6],[-7],[-2],[-8],[8],[2],[-9],[-2]], dtype = "int16")#candidate|4467|(143, 1)|const|int16
call_4465 = relay.TupleGetItem(func_3769_call(relay.reshape(var_4466.astype('int32'), [12, 5, 2]), relay.reshape(var_4466.astype('int32'), [12, 5, 2]), relay.reshape(const_4467.astype('int16'), [143,]), ), 1)
call_4468 = relay.TupleGetItem(func_3773_call(relay.reshape(var_4466.astype('int32'), [12, 5, 2]), relay.reshape(var_4466.astype('int32'), [12, 5, 2]), relay.reshape(const_4467.astype('int16'), [143,]), ), 1)
bop_4470 = relay.bitwise_xor(call_4444.astype('uint32'), relay.reshape(bop_4452.astype('uint32'), relay.shape_of(call_4444))) # shape=(2, 7, 5)
bop_4473 = relay.bitwise_xor(call_4445.astype('uint32'), relay.reshape(bop_4455.astype('uint32'), relay.shape_of(call_4445))) # shape=(2, 7, 5)
func_3876_call = mod.get_global_var('func_3876')
func_3877_call = mutated_mod.get_global_var('func_3877')
call_4486 = relay.TupleGetItem(func_3876_call(), 0)
call_4487 = relay.TupleGetItem(func_3877_call(), 0)
func_192_call = mod.get_global_var('func_192')
func_195_call = mutated_mod.get_global_var('func_195')
call_4506 = relay.TupleGetItem(func_192_call(relay.reshape(const_4467.astype('int16'), [13, 11, 1])), 1)
call_4507 = relay.TupleGetItem(func_195_call(relay.reshape(const_4467.astype('int16'), [13, 11, 1])), 1)
uop_4523 = relay.sigmoid(var_4451.astype('float32')) # shape=(2, 7, 5)
func_3164_call = mod.get_global_var('func_3164')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_4528 = func_3164_call()
call_4529 = func_3164_call()
output = relay.Tuple([call_4465,var_4466,const_4467,bop_4470,call_4486,call_4506,uop_4523,call_4528,])
output2 = relay.Tuple([call_4468,var_4466,const_4467,bop_4473,call_4487,call_4507,uop_4523,call_4529,])
func_4590 = relay.Function([var_4451,var_4466,], output)
mod['func_4590'] = func_4590
mod = relay.transform.InferType()(mod)
mutated_mod['func_4590'] = func_4590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4590_call = mutated_mod.get_global_var('func_4590')
var_4592 = relay.var("var_4592", dtype = "bool", shape = (2, 7, 5))#candidate|4592|(2, 7, 5)|var|bool
var_4593 = relay.var("var_4593", dtype = "int32", shape = (120,))#candidate|4593|(120,)|var|int32
call_4591 = func_4590_call(var_4592,var_4593,)
output = call_4591
func_4594 = relay.Function([var_4592,var_4593,], output)
mutated_mod['func_4594'] = func_4594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_4601 = relay.TupleGetItem(func_2153_call(), 0)
call_4602 = relay.TupleGetItem(func_2154_call(), 0)
func_663_call = mod.get_global_var('func_663')
func_666_call = mutated_mod.get_global_var('func_666')
var_4616 = relay.var("var_4616", dtype = "int32", shape = (288,))#candidate|4616|(288,)|var|int32
call_4615 = func_663_call(relay.reshape(var_4616.astype('int32'), [4, 6, 12]), relay.reshape(var_4616.astype('int32'), [4, 6, 12]), )
call_4617 = func_663_call(relay.reshape(var_4616.astype('int32'), [4, 6, 12]), relay.reshape(var_4616.astype('int32'), [4, 6, 12]), )
uop_4620 = relay.log2(call_4615.astype('float32')) # shape=(4, 6, 12)
uop_4622 = relay.log2(call_4617.astype('float32')) # shape=(4, 6, 12)
func_4391_call = mod.get_global_var('func_4391')
func_4392_call = mutated_mod.get_global_var('func_4392')
call_4624 = relay.TupleGetItem(func_4391_call(), 0)
call_4625 = relay.TupleGetItem(func_4392_call(), 0)
func_3678_call = mod.get_global_var('func_3678')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_4648 = func_3678_call()
call_4649 = func_3678_call()
func_663_call = mod.get_global_var('func_663')
func_666_call = mutated_mod.get_global_var('func_666')
call_4662 = func_663_call(relay.reshape(uop_4620.astype('int32'), [4, 6, 12]), relay.reshape(call_4615.astype('int32'), [4, 6, 12]), )
call_4663 = func_663_call(relay.reshape(uop_4620.astype('int32'), [4, 6, 12]), relay.reshape(call_4615.astype('int32'), [4, 6, 12]), )
output = relay.Tuple([call_4601,var_4616,uop_4620,call_4624,call_4648,call_4662,])
output2 = relay.Tuple([call_4602,var_4616,uop_4622,call_4625,call_4649,call_4663,])
func_4680 = relay.Function([var_4616,], output)
mod['func_4680'] = func_4680
mod = relay.transform.InferType()(mod)
mutated_mod['func_4680'] = func_4680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4681 = relay.var("var_4681", dtype = "int32", shape = (288,))#candidate|4681|(288,)|var|int32
func_4680_call = mutated_mod.get_global_var('func_4680')
call_4682 = func_4680_call(var_4681)
output = call_4682
func_4683 = relay.Function([var_4681], output)
mutated_mod['func_4683'] = func_4683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_4685 = func_4420_call()
call_4686 = func_4420_call()
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_4721 = func_2784_call()
call_4722 = func_2784_call()
func_1659_call = mod.get_global_var('func_1659')
func_1661_call = mutated_mod.get_global_var('func_1661')
var_4750 = relay.var("var_4750", dtype = "float32", shape = (26,))#candidate|4750|(26,)|var|float32
call_4749 = relay.TupleGetItem(func_1659_call(relay.reshape(var_4750.astype('float32'), [1, 2, 13])), 0)
call_4751 = relay.TupleGetItem(func_1661_call(relay.reshape(var_4750.astype('float32'), [1, 2, 13])), 0)
func_3678_call = mod.get_global_var('func_3678')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_4756 = func_3678_call()
call_4757 = func_3678_call()
output = relay.Tuple([call_4685,call_4721,call_4749,var_4750,call_4756,])
output2 = relay.Tuple([call_4686,call_4722,call_4751,var_4750,call_4757,])
func_4760 = relay.Function([var_4750,], output)
mod['func_4760'] = func_4760
mod = relay.transform.InferType()(mod)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4761 = relay.var("var_4761", dtype = "float32", shape = (26,))#candidate|4761|(26,)|var|float32
func_4760_call = mutated_mod.get_global_var('func_4760')
call_4762 = func_4760_call(var_4761)
output = call_4762
func_4763 = relay.Function([var_4761], output)
mutated_mod['func_4763'] = func_4763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_4829 = relay.TupleGetItem(func_2153_call(), 0)
call_4830 = relay.TupleGetItem(func_2154_call(), 0)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_4840 = relay.TupleGetItem(func_2153_call(), 0)
call_4841 = relay.TupleGetItem(func_2154_call(), 0)
func_4366_call = mod.get_global_var('func_4366')
func_4368_call = mutated_mod.get_global_var('func_4368')
var_4843 = relay.var("var_4843", dtype = "int32", shape = (252,))#candidate|4843|(252,)|var|int32
call_4842 = relay.TupleGetItem(func_4366_call(relay.reshape(var_4843.astype('int32'), [252,])), 2)
call_4844 = relay.TupleGetItem(func_4368_call(relay.reshape(var_4843.astype('int32'), [252,])), 2)
func_4175_call = mod.get_global_var('func_4175')
func_4179_call = mutated_mod.get_global_var('func_4179')
const_4857 = relay.const([[-0.171852,2.995676,-7.921198,-1.006826,-9.040853,6.383203,-6.263627,-7.333136,4.260692,1.456733,2.651730,3.189498,7.440700,-1.797974,3.346516,-4.091981,-2.889146,6.170855,9.766826,3.452142,-3.935365,-0.304622,8.892445,-9.437008,-4.965107,-9.273654,-7.646712,-0.580312,-0.939249,1.944661,-7.567154,-4.712129,0.322748,-0.215979,2.531004,-8.219521,-4.994262,-2.065812,2.609392,-3.923812,-4.168916,6.430470,-5.174344,5.649085,-2.795818,-4.583866,-4.712626,3.393020,-5.817568,-6.174195,1.674657,9.613828,2.239295,3.004555,3.738229,-7.245157,9.719419,-6.950031,5.024146,-2.539094,-9.453764,-5.138564,3.232192,-9.937642,5.080116,-7.994042,1.446397,-1.852348,1.719793,5.534759,9.092621,3.639033,6.260789,8.906548,0.836275,-5.342237,-2.000816,-5.367618,-3.675696,-0.949488,4.845535,-5.403804,-9.088078,3.057556,-6.645438,-8.010373,-6.053766,-1.267328,9.801312,-0.083872,-5.832137,-0.651215,1.266271,-5.543669,6.723829,-5.128375,4.840217,7.818329,7.627518,-0.628145,9.801775,-5.239430,-5.343226,8.273897,-5.074404,-6.016857,-7.640760,7.035585,9.502936,1.229720,-4.934467,5.400246,-0.852648,-7.822889,0.139420,-9.564735,3.030570,-9.729468,7.196973,-7.532397,6.880956,-7.695363,7.590472,4.660491,-1.430960,-5.790171,-4.011505,-4.922241,-1.930969,4.981079,7.369159,2.714722,-8.884499,-1.161528,5.847743,7.451255,1.926811,0.026697,1.011566,4.947768,5.166224,5.308454,8.324136,1.894985,-0.623444,2.387824,-4.013227,-7.272886,-8.705282,-1.344327,6.326380,-7.956916,-1.195467,-0.243927,3.860366,5.889060,8.010464,-0.915756,-5.475126,-8.883013,-7.887774,2.332496,-4.075393,6.516274,-8.480153,0.601681,8.741430,5.676509,7.386744,-0.637994,7.628125,3.560351,-1.194396,-9.754067,4.317309,1.280465,-8.543140,-9.776713,-7.248501,-5.138165,-3.389598,1.927757],[8.283910,7.477664,-8.366267,5.854958,2.475551,-7.785313,1.433546,-2.508000,2.524250,-6.001446,-7.476216,2.260003,2.243982,-7.728285,3.832527,0.757282,-9.572338,8.930404,-9.516815,-1.147326,0.074211,9.212904,3.389457,-9.613638,1.136882,2.985605,8.112552,1.329182,-8.536632,-4.508249,6.793264,-9.754734,-7.078873,-1.462068,4.039054,-8.534588,6.238372,3.316177,-3.848248,8.090424,-0.361461,5.998284,3.468723,-5.695656,-9.018480,8.888290,6.397197,6.397120,9.935122,-1.627503,4.723091,-7.422655,0.178031,9.821304,7.795846,7.401245,5.752626,0.625572,5.863902,-6.443751,4.071936,1.808815,-6.475671,-7.731999,-8.800232,-8.925226,-4.522601,-8.434583,-7.009658,7.046798,9.283009,3.237042,9.447992,8.588416,7.154826,3.532919,-6.403755,9.253573,0.382802,-2.298074,-8.684427,5.311753,6.998009,-5.373097,-8.444686,1.547425,9.708448,-5.832387,-8.751328,3.991306,-3.635189,-3.348343,-5.156342,0.144766,2.891720,7.075781,-4.926908,-8.990719,2.859573,3.522211,-9.679951,5.067722,8.211433,2.054024,8.730765,8.971133,4.387943,-6.208483,5.256636,5.860510,-4.973943,8.427849,-3.530028,-4.934414,-1.699331,6.405025,7.567971,-9.831728,-8.817488,-7.892607,3.107044,5.347726,5.686829,-1.708102,2.638493,1.978831,-1.901625,-5.384085,4.404528,-1.090959,-0.618398,-8.098040,-8.623948,5.906479,-4.969525,6.521713,1.993494,-1.460812,-3.515979,-6.555737,9.207354,8.701198,-4.283104,-3.532962,8.513070,5.194536,-3.307934,9.292130,5.063457,8.641209,-2.763559,4.645973,-9.339483,-0.838443,-8.689937,-4.914201,-8.143470,2.860665,-7.690666,-5.448991,5.904426,3.092975,-7.092765,-4.657628,8.650366,0.536042,-6.023808,-4.430890,6.083570,-6.364892,3.740928,6.012408,-1.100641,-2.038473,-2.176372,-3.132264,-3.603735,8.788289,-9.666111,-2.732754,0.212816,4.430582],[-6.991027,-1.826615,-9.148884,2.641765,-7.684260,-7.236768,-9.061360,7.071862,2.835049,-9.894311,4.970634,-6.842118,2.067961,-7.671695,8.297448,2.701733,0.855703,3.697050,-4.216434,3.675132,4.239000,0.434368,-8.508451,-7.212001,0.309853,6.577021,-6.376461,-9.539364,0.009571,-8.624590,3.261630,-2.314274,-7.736555,-1.098486,1.906450,3.526397,2.186980,-8.725648,5.929064,-5.667658,2.322998,4.827022,9.680337,3.729347,-6.564724,0.267640,8.863325,-8.779420,6.028422,-2.547374,-8.055304,7.852439,5.327375,0.488244,-3.951602,5.185412,-3.249426,2.189939,-7.947434,-5.897045,4.734394,-3.900900,4.096566,-3.041519,-1.022186,8.413976,-2.758187,-8.414198,-7.483134,-2.008737,3.081881,-7.358072,-6.859175,-8.956173,0.085332,-5.432124,-4.538019,9.835450,5.736546,8.804620,1.953602,6.372366,1.796854,8.860980,8.676962,9.728921,0.149683,-3.378980,0.337604,-5.516530,3.029436,3.069350,-5.918629,-0.629399,-4.908436,8.728162,-8.132411,0.003889,-7.942875,-5.701270,-2.877188,2.234938,8.324320,-4.545755,-7.833048,4.141438,3.650923,5.731251,-4.429852,8.458825,2.395985,-1.702821,6.189833,-4.620904,-3.036845,-0.773654,-8.019112,-6.700721,7.047823,-8.252709,0.889221,-0.080499,9.745219,-4.272577,7.621075,-9.453722,-6.409184,-8.205813,0.845932,-2.835508,5.258564,-5.049863,-2.502585,-1.869019,8.337921,8.116286,-3.360822,8.293732,6.540701,8.968963,-9.171019,-0.847311,-7.390387,-0.876117,5.321613,7.673096,3.149858,-5.120951,-9.556352,-3.600305,1.983411,6.347070,1.683512,8.115412,-1.880908,7.492716,9.132923,-2.565341,-0.065699,2.171021,2.088019,5.433290,-1.885380,-3.730565,-3.756495,3.800589,-1.878658,9.029778,8.345635,-1.555155,-3.572856,-1.799832,5.515335,7.874895,-5.462841,4.220073,-3.555780,-1.454878,-5.741969,4.455359,5.629949,3.357293],[4.694051,4.543021,4.412135,9.101703,6.465858,5.939244,-0.612167,9.450780,2.731127,-9.797187,2.535087,9.017285,3.784887,-4.671122,5.425023,-1.129295,-5.667994,3.783950,7.733400,7.016876,0.384720,-3.607502,-6.349712,-8.323990,-9.041511,6.101183,1.527500,-8.777113,8.405376,-8.136788,-4.013519,-5.747089,-3.705277,-5.821444,-6.364578,1.908491,9.689299,9.056328,6.663842,7.686511,-4.358023,1.223542,8.958373,-0.970293,-4.078483,7.967681,6.606662,5.633961,-6.930548,5.414744,-4.970975,-8.753191,-7.756087,3.552792,7.775299,-0.640731,5.269309,7.069247,3.024483,8.912013,-1.661197,-1.874353,-7.672866,-0.409656,7.190159,3.839583,-9.234273,7.477446,8.443545,-4.802632,-0.130427,-4.921908,-8.224731,-0.290229,5.296593,9.706547,1.852177,3.439351,2.221220,-8.889541,-4.121357,-8.819920,2.596122,2.277803,-7.397099,3.368328,-1.171388,-1.355799,7.257712,-3.190918,0.042583,8.680806,0.936052,-7.531406,-7.351794,-9.819361,2.267210,4.228607,-1.396388,1.687252,-5.742217,7.670330,3.121287,2.051411,8.310453,0.280513,1.843246,8.857818,-7.717566,7.372980,-2.541556,5.939104,2.977712,-1.457118,2.296240,-6.993032,-3.307732,9.324097,-0.331366,-5.745507,-6.388227,-7.606740,-2.816751,7.324426,4.250657,7.793062,-2.291499,4.853759,9.990805,1.064341,-8.821940,-4.414324,-1.061376,-2.150749,-4.515996,-9.019476,-3.822806,-9.830567,-2.412746,6.008847,4.730346,6.831219,9.948037,1.838202,-2.164418,-1.587007,-4.704367,7.902022,-3.706648,0.310111,-1.782168,2.184370,-7.377667,-9.782366,3.841598,0.388948,-1.033883,-6.056870,4.005584,3.663799,1.365997,-5.553287,-1.070563,-7.788583,0.025326,-7.509903,2.450637,2.385001,9.823952,-7.065369,5.360018,9.707652,-1.523029,-7.626456,4.563256,1.703652,4.988770,0.945147,8.869680,-5.453835,2.523191,-9.165217],[-9.732249,6.211089,1.193975,3.450515,2.331828,9.375059,-1.253383,7.102505,2.561932,-3.869256,1.686773,-9.480946,4.234568,2.510578,9.483448,9.918943,4.536193,-3.675252,-5.164674,-7.805869,-3.118254,2.946767,2.631464,0.057763,7.649076,8.368394,3.716442,2.787604,-9.698358,3.772081,2.200674,9.878790,0.483549,3.476022,5.317144,7.404326,1.873184,5.471878,-8.674934,0.691650,-3.736671,-4.709666,3.459998,5.114948,-4.994261,1.470581,6.127356,8.848530,-8.130582,7.343624,-5.151419,-8.976802,4.620463,-1.724130,-7.443489,-8.215597,-1.171608,-2.505592,-4.855210,0.376633,-7.546046,-7.099151,1.744227,2.609294,7.654532,-3.570896,4.550744,3.172031,-5.391718,-4.650856,-1.155239,6.478294,1.974120,-0.958602,2.267115,4.507544,-4.268258,-9.450362,3.410029,-7.856898,-5.387713,-9.930438,3.713024,-6.270469,9.013364,-9.917079,2.955861,-9.538942,1.557975,1.003967,-7.100357,-9.497731,-5.272574,-5.210805,-5.163284,-7.145507,2.164030,7.631339,8.568540,-1.286533,-4.427398,-9.077068,6.677083,5.165525,9.269997,2.416469,6.572197,-0.994922,-9.425700,8.176561,4.098457,9.564327,-5.299631,5.658490,7.488218,-4.597667,-4.452244,7.477307,8.614457,-2.613359,1.730632,-4.398127,-3.958344,0.033317,5.643390,8.841999,-4.400412,-3.554968,0.359084,-9.876629,6.329166,9.887083,8.826853,1.605754,3.018120,3.374034,-0.064386,6.705021,0.655267,0.282981,3.367721,2.073427,-5.214703,-1.300956,-2.741004,-1.387651,7.255632,3.543297,-8.894240,2.537507,0.198066,9.420048,-9.005304,-7.258784,0.437934,-9.844556,-7.973946,-6.624070,3.153543,1.161118,-5.617429,-2.530909,5.541002,-8.693651,-2.454896,3.011084,3.520302,2.702053,0.680829,3.990705,-4.063075,0.882631,7.233045,5.560017,-3.389925,-5.394928,-1.032327,-1.609077,8.995127,7.733416,-7.993469,6.505655],[2.150980,9.871421,-9.984646,7.057134,-6.478538,2.013144,3.266928,5.568394,2.643087,-5.181825,-4.966914,8.725212,9.878119,2.268918,9.993424,3.853948,-0.934306,7.053074,9.050183,0.675722,7.440054,-1.519050,4.167741,-0.420442,0.336495,-2.472855,2.033418,7.114811,-0.888385,-1.261953,2.497927,9.024889,-9.166444,-8.031917,4.589547,-5.856616,2.637738,3.053587,-5.863970,1.911350,-9.922887,6.692789,-1.721479,8.329032,4.206465,-1.136002,4.774287,-3.280143,5.321913,-6.144965,-4.218000,6.515041,5.721573,-5.319226,2.754516,3.956879,9.078878,5.430276,-6.700838,7.510054,2.283506,-5.462578,0.850326,-1.673276,-4.660739,3.009367,6.642500,-9.756864,-6.042575,-4.610484,-5.164814,4.857352,-0.675930,5.943116,4.002557,4.324600,6.643739,-2.917575,-3.706604,5.571145,3.333235,-8.640137,5.423068,4.621232,3.840272,8.855194,8.951594,-2.568939,-4.552947,-5.888839,-3.849341,-6.482645,-2.434514,-9.209000,4.311908,9.744172,-4.076045,-2.379670,-6.883891,8.858308,6.039971,5.670522,-6.074477,6.314613,-9.055988,-3.276242,1.460775,-4.996597,6.351660,-9.665136,-7.582656,4.877466,1.406281,-9.848448,2.377557,-3.611817,0.332404,-8.278608,1.102607,-8.495359,5.500711,-6.472488,2.804599,-6.122668,9.524959,7.652018,-1.387010,-4.669697,-8.977351,1.508452,7.142682,3.141681,-1.073462,-8.386376,4.554948,7.733990,6.154908,0.348379,-6.611118,-8.483472,-2.899707,6.600336,-0.267409,7.916661,-8.575208,5.430282,-2.441160,-7.475133,-4.252708,-3.707862,5.032961,-6.576239,4.419164,6.389291,-8.242533,5.283145,-9.013915,4.989457,-9.204250,5.108626,-1.864641,-1.084656,0.913773,2.618907,4.796266,8.867663,1.055050,-3.735162,1.926670,-3.253912,6.981065,8.255184,-9.707085,-3.937962,5.583218,9.101166,-2.278563,-4.238856,6.761158,8.312621,8.229921,3.312248],[1.671804,6.931611,-0.143911,-7.279328,3.701615,8.639550,-4.884240,-2.684954,6.273364,5.818774,-4.645200,-6.852246,7.870227,-8.917612,-5.738612,4.941891,3.440966,6.638999,-3.592119,4.454576,0.954732,5.571503,2.912629,2.270905,-0.022947,-5.709936,-5.110299,-9.387905,7.075708,-8.323719,-7.897441,6.439146,-1.444758,4.856658,-5.965210,-7.437057,7.052874,5.491240,4.488383,-0.521010,-6.780165,-4.992708,9.033732,-9.729873,-4.958377,-4.960865,2.125035,-1.492937,-3.112093,-6.093162,7.227295,-0.116888,0.788100,5.958211,-5.569934,-5.867839,-7.486475,2.846384,4.715450,-7.828109,-7.841631,-1.286679,-2.525813,5.760949,7.139509,9.399290,-1.522427,7.959241,-7.871105,3.512668,-0.143558,4.394769,-6.703986,-9.850977,-2.715410,9.951544,-9.476500,-9.421159,5.986528,3.002841,-0.886592,2.306884,4.710270,-7.847684,3.840411,-4.363128,5.695764,-8.911444,6.240266,8.547508,-2.547307,-2.216566,-0.621220,7.394862,6.336834,-3.730579,-6.580556,-4.513260,4.967579,2.613527,-8.305755,-0.386164,6.594831,-6.186252,-5.453322,-8.714808,-4.701825,5.957186,-9.607114,-7.303731,2.668248,4.854284,-0.632969,7.716338,-4.660061,-0.084488,1.731002,-8.690951,-3.186745,1.897372,-6.197800,4.235174,-8.428730,7.058714,7.445014,-0.905974,8.906942,-8.936619,-3.823477,4.798545,-6.009234,4.270881,-2.365088,-7.283043,-4.729210,4.880260,-2.976509,-0.537120,5.273931,2.407802,4.441222,-4.187224,2.815620,1.890696,-7.561597,-6.521355,-7.203484,-2.078893,5.924064,8.268290,-7.311496,-7.438707,4.495034,-5.783418,-8.988175,-2.276431,6.087129,-1.280897,0.514576,-0.512259,-9.133669,4.306968,3.712760,-0.553729,-0.640835,-7.794255,-9.535113,8.787938,1.246787,7.814625,3.697966,-0.434143,-8.798308,8.758423,-8.792392,5.424345,-9.761255,6.404529,5.477784,-8.434120,-3.856427,-6.412215]], dtype = "float64")#candidate|4857|(7, 182)|const|float64
const_4858 = relay.const([[7.811305,2.694349,-0.424124],[-5.416129,-5.080581,2.520322],[-3.308307,-6.039917,6.924083],[4.899391,3.036663,1.039591],[-6.201941,-4.016623,7.119420],[-6.438314,-0.998639,-2.410715],[6.712061,3.901961,1.852160],[-8.737204,-1.545567,-4.645857],[-8.616983,-4.540057,4.601071],[4.174967,-0.220488,-7.054452],[-2.653230,-4.936755,8.750084],[5.357193,-1.085596,-2.472974],[8.538559,6.051152,9.631810],[-6.510758,1.833404,9.435241],[-1.072995,-9.815759,-4.791239],[-2.395482,-6.948062,-2.654935],[-3.771046,-6.937403,-4.770285],[-1.712233,0.327863,2.800549],[2.905506,-8.750526,-4.626221],[7.657203,0.051584,-1.721525],[3.560311,-6.822318,8.640924],[1.853318,-2.033252,-4.636161],[-7.460820,-3.115015,-6.067022],[-7.106439,4.031585,-0.671885],[-2.053647,-4.447858,-9.052751],[-5.556701,-7.477118,9.921343],[9.998145,1.273299,-7.734945],[-7.381216,-0.701993,6.646801],[-9.025747,8.483119,-3.221375],[-0.048534,5.182066,-8.117629],[8.433414,9.182162,1.657668],[8.370476,1.654943,-1.068294],[6.841418,-4.535851,-9.669138],[-5.602373,8.935484,-0.384931],[-9.164522,5.151074,-9.637689],[6.914782,-7.945510,5.510146],[7.979354,-5.559948,6.516203],[-8.519038,2.838162,-5.917322],[-1.642386,-7.418115,-6.899229],[-5.740181,1.267405,0.262100],[8.784754,4.721782,2.763596],[-6.066495,-7.706742,-1.210260],[7.191003,-0.973320,3.401832],[-0.737248,3.724837,-6.039984],[-0.618603,-7.560859,-8.821255],[2.141785,-6.543665,9.076266],[3.497847,-6.240569,-7.501269],[4.593566,-6.475258,-5.024275],[-0.819764,0.360986,6.891962],[-2.580318,-7.559712,-2.195363],[-3.214201,8.597534,-2.838605],[-2.719048,-7.664969,6.162563],[9.417419,-7.252352,-5.016044],[-2.940342,-8.465587,9.631040],[3.607715,6.148046,-4.589792],[-7.872143,7.755125,-3.686316],[-6.598315,1.157142,6.943574],[4.110184,4.621303,-7.761122],[-2.745658,-0.718136,8.316661],[-1.902926,6.332234,-2.049820],[1.840892,-0.890844,-5.335596],[7.719019,-3.699690,9.419150],[8.743437,-8.004864,1.106833],[9.251964,8.820382,-3.263021],[2.139598,7.849702,-7.983650],[-4.848931,-9.320910,-2.138557],[2.336959,1.627193,-5.175672],[-0.874228,0.767040,-8.966351],[5.611435,-9.235469,2.527102],[0.905934,-8.456819,-7.355139],[2.528495,-2.727423,3.398092],[-8.106034,-4.362858,-2.195808],[4.501733,6.418138,-2.149442],[5.616981,2.769050,-1.098255],[-9.557243,1.215970,4.727350],[0.535700,-6.687098,-7.576824],[-0.097161,3.836801,6.097519],[7.838147,-2.965247,1.555135],[-7.332506,-2.771454,0.225418],[-1.031845,8.736760,-0.490344],[0.051046,9.600801,5.339639],[-3.124431,-6.652267,6.163277],[6.127289,-0.774360,2.322693],[-7.828810,-2.864111,9.034403],[-1.631119,7.473962,4.948826],[-4.110268,0.937399,-3.944409],[9.651454,-1.700861,-2.213512],[9.960900,-7.218747,7.425852],[-7.114066,0.606967,0.286663],[-8.503374,7.988030,2.865595],[6.195733,5.095249,8.652474],[4.868024,-3.789260,-9.393112],[9.745108,3.982341,-3.337446],[2.909519,-1.396480,2.601435],[9.069906,6.085295,-7.407244],[1.515482,-9.188317,-9.548291],[4.368768,2.790367,-6.203257],[-9.754227,7.490227,6.943625],[1.147454,-9.738224,-9.760678],[0.546785,6.171737,-1.888196],[1.386653,5.678372,-0.809620],[7.833797,-1.723449,-8.110759],[-6.283889,-7.520474,-5.223525],[6.704608,7.943041,4.659608],[-6.556011,3.793644,-9.497709],[8.406537,-5.031482,7.638743],[-4.554051,-1.584227,0.690765],[7.231304,0.838830,-1.985362],[-2.622723,8.103049,3.140388],[5.051544,5.496050,-2.545435],[-5.255095,5.042282,-2.714401],[9.095993,5.416887,7.317634],[-1.839787,5.342414,5.314150],[8.009198,0.800917,8.792534],[-4.362390,-6.028385,3.001586],[6.021353,-1.426139,-3.977399],[8.581046,-0.174478,5.977861],[-5.454019,-3.276131,-7.688657],[0.511434,4.908558,-8.645540],[4.220377,0.060653,4.165888],[-4.038814,-4.060573,2.896678],[-6.375185,8.888685,-1.625451],[-9.482703,-8.629180,-2.027454],[-0.210999,6.192284,-3.162096],[-2.876124,-7.219705,-1.747332],[9.477743,-0.610992,6.969134],[-7.415561,-4.175137,-8.582455],[3.044696,1.892234,-4.976738],[-7.012576,3.723804,-0.156325],[7.352445,-1.971499,5.321941],[1.761161,0.397364,-8.352701],[-0.117645,-6.918805,-6.643930],[6.961898,-5.230827,-4.146877],[-8.812595,6.988915,-2.530813],[7.683921,7.547183,7.487465],[-1.929981,3.969179,-1.948405],[3.832756,-1.916958,1.204596],[-8.258693,-2.978521,-4.674323],[4.491453,9.775148,-6.320686],[8.524825,-1.525390,2.561780],[4.778647,-6.906034,-6.702843],[-5.138058,4.844849,5.986698],[-7.941273,8.139503,-0.049249],[7.723356,-1.309023,0.775207],[-2.311690,1.003245,8.812536],[-1.192347,-5.823969,6.617412],[6.117694,-6.118302,-0.994636],[5.542180,-3.634157,-5.207669],[-3.467255,-6.498023,-2.729234],[-0.156285,-6.467235,6.770181],[-1.433411,-0.509580,0.770201],[7.931794,-0.463296,2.004950],[-0.601053,0.444306,-7.479162],[7.627871,5.903115,3.215528],[3.178783,-5.636598,0.256651],[4.741193,4.699446,6.260299],[0.476839,8.554665,-5.597789],[3.007088,4.530140,0.940726],[-7.977656,2.210469,4.371001],[7.341261,-9.708421,-2.088118],[-0.229933,6.112697,-1.147071],[-5.239791,-0.418999,6.086532],[-2.158763,7.070813,7.135045],[1.909151,9.739330,4.407633],[-1.514924,-8.566682,-5.672940],[-9.046441,-6.036665,-0.494724],[-9.031139,2.717700,-9.711224],[-5.977938,4.394197,-4.889687],[-9.897359,-1.248809,-7.892347],[-0.096708,-5.227362,7.999127],[-1.043841,1.034955,-1.957627],[9.084568,-0.200181,2.631010],[2.134495,-0.516278,3.851659],[2.429560,-6.232866,6.911300],[2.221600,2.269224,-5.992428],[-7.088974,6.239580,-6.928226],[5.616386,-7.223831,-0.452976],[-0.643256,2.500931,-6.161078],[7.542516,1.143479,4.621478],[6.524039,-1.120017,-5.120084],[0.271238,6.411271,7.492651],[-1.232877,4.580348,-5.185443],[-0.992533,3.691233,5.318592],[-8.277119,5.108112,8.635849],[8.722080,7.544538,3.777148],[-8.883307,-1.723595,7.608619],[7.388676,-3.456070,3.507812],[-1.907365,5.581410,9.918442],[9.459550,-6.761650,5.024972],[5.670001,-8.244145,6.762474],[0.365333,-4.217262,6.367125],[4.791808,-7.479207,-5.229475],[-9.896222,1.602900,-8.822925],[0.242498,8.172583,9.084344],[2.426182,3.801529,4.263907],[3.915061,-7.549580,8.164272],[-4.193461,9.213965,-8.376363],[-1.798261,-2.908135,0.592603],[-0.352372,8.151915,-0.226808],[7.213777,4.271693,3.524253],[7.990149,8.781686,-8.611149],[9.686129,1.914042,0.253446],[-5.507235,2.621885,-8.234673],[-4.574202,4.125313,-4.106092],[-4.006305,3.520410,-1.102283],[-8.513664,6.571667,3.086912],[-9.708567,-6.078582,6.083115],[-7.644915,1.696619,9.378108],[-7.283796,2.209960,4.881788],[0.993736,7.352850,9.573974],[1.232925,2.474026,-5.757177],[-2.915849,7.660333,-5.540665],[1.532271,8.306105,-9.939146],[-6.688102,-4.954820,-5.524932],[5.004882,3.160915,-3.632974],[-5.546306,-9.367608,5.646946],[-0.670292,-1.455580,-6.059326],[2.423887,7.805255,4.270482],[2.472546,-6.460510,1.821222],[6.435499,-3.555656,6.122792],[1.595222,-1.409909,1.832741],[-3.016015,3.878552,5.069107],[-7.995934,8.573200,9.922692],[4.435548,-0.963674,-0.149692],[8.441016,-1.883678,-3.681671],[-8.978566,9.720864,-6.910359],[-0.121496,9.924022,6.190786],[-3.491115,0.017506,8.872821],[-7.248794,5.758301,-2.352066],[-8.018508,7.605396,1.662283],[-1.420511,5.889058,-2.906157],[-3.227304,5.928286,-6.972047],[-1.345258,-9.346389,7.149790],[7.713186,-4.261315,-2.245335],[-7.775843,-3.884715,-3.606788],[-1.021877,-7.734432,-8.517525],[0.081974,7.917213,-8.741698],[6.613575,-5.867583,-9.872812],[0.228050,6.798974,-1.229753],[-6.742520,-4.944388,-0.014779],[-7.774679,6.479328,2.378740],[5.220035,-6.539674,3.093774],[-3.084752,-6.741336,-9.829472],[-3.845808,-2.818986,4.525358],[-6.148216,5.006356,4.927788],[1.272626,-0.373479,-8.204056],[-4.138592,-1.603910,-6.174239],[-4.750672,-8.811833,-4.527267],[0.142038,-1.739703,-9.530177],[1.710553,1.927518,-2.284648],[-1.498633,-1.586243,-5.148378],[-2.636118,-6.869860,-4.735148],[-9.959075,-0.689758,5.677059],[1.289304,3.681124,-8.905400],[-2.327031,-4.653741,-2.806828],[-5.559234,-8.384883,-2.339040],[0.372077,-4.565790,4.277742],[-5.692240,4.219029,5.503405],[1.074729,5.071923,-2.391910],[9.573843,1.194037,3.962761],[-4.202111,3.688440,-3.125333],[0.180249,-7.258278,-3.190938],[-6.875680,-9.739614,5.437467],[-9.158102,-9.821886,6.093395],[2.043777,9.865023,0.639370],[2.231679,-2.263268,-3.667476],[-4.288416,-5.376259,4.245929],[-8.113353,-5.117826,4.151394],[-4.982926,-1.908014,-5.419157],[-8.981157,-0.815098,-3.731812],[-2.996110,0.660172,-2.191399],[4.812563,-9.532019,-1.103981],[-8.075533,7.923676,0.579553],[-9.791883,7.215303,-6.133901],[7.154289,6.389156,8.609594],[5.249185,9.623457,-3.438412],[-6.056876,-5.710162,-1.387135],[5.173241,-5.734518,4.462356],[9.368446,0.818246,-0.698400],[-1.580704,-3.569176,-4.027335],[-9.367370,5.854014,-3.584375],[9.435651,-2.348170,3.843982],[-8.597248,2.756778,-2.944727],[-7.557789,5.350509,-0.355126],[-2.964623,6.993988,-8.484061],[-4.869395,2.556821,1.479328],[2.594444,-6.268626,-8.067736],[-2.016685,-4.594466,0.741895],[-5.484492,8.104618,-0.333888],[-2.271380,-4.120978,3.273557],[9.412682,3.623927,-4.201235],[-1.170223,-0.847342,4.906887],[9.956970,6.989857,3.957064],[-7.681362,0.465557,4.318162],[9.074078,-3.525924,8.941763],[-3.618327,9.012909,2.080006],[-2.398923,4.288636,5.545729],[-7.640686,1.853547,-7.177300],[-0.918549,-6.833109,-9.688405],[3.675816,0.183936,-1.758763],[-9.926810,9.103177,-8.973007],[4.707816,5.893169,1.697147],[6.278852,1.747792,-7.068697],[3.768881,-3.221952,-3.817243],[-3.912971,-6.662191,5.739586],[-9.581999,4.683676,8.638334],[9.842366,5.439601,8.113958],[8.251182,-3.267776,8.409552],[-9.292755,4.646976,3.476737],[-2.159855,-2.904362,8.598250],[6.120682,1.432654,-3.989216],[-9.180121,7.867928,-4.298941],[0.362043,1.314506,-5.244790],[-7.672911,9.499798,6.232959],[6.308222,-3.443198,-8.158702],[2.272392,-7.769766,-3.209860],[9.058349,-1.080806,-8.997725],[4.253978,-0.539473,9.176073],[-6.356487,7.442394,-1.142344],[-8.463532,-1.727792,7.670196],[-9.339848,-0.170234,8.508743],[2.973013,-2.759493,8.194497],[-1.909319,-5.131473,9.446120],[5.853583,3.184751,6.835704],[6.830926,2.870402,7.063527],[-8.072320,6.597304,-1.497210],[-3.749902,3.431880,2.554954],[9.308426,8.186712,-7.960303],[-9.303169,-8.517213,-2.064402],[9.067134,6.080197,-0.936868],[2.996442,7.258693,5.505559],[6.510790,1.641373,-3.015387],[8.032359,3.317902,7.169625],[8.808558,2.296663,8.831099],[4.838860,-1.083346,5.104554],[8.301699,1.060915,5.130733],[-3.018836,-4.197312,0.218356],[-2.615845,3.891222,-9.779163],[8.033587,-1.097084,6.588725],[8.617240,-3.807680,-0.234775],[-2.041609,-3.641663,-2.197435],[-4.415336,-0.379662,-1.446010],[-2.768017,-5.057120,-7.465763],[-8.747808,-7.464376,3.588637],[3.321933,-8.897825,-2.075401],[4.596131,2.059680,-3.115922],[-6.179306,-8.505974,-2.135233],[-0.990530,-5.169829,-3.619865],[0.061844,-5.098422,4.133218],[-3.540448,-4.387817,-9.561275],[5.186627,4.323355,1.147894],[-7.372030,5.684182,-7.307118],[5.894090,-6.534866,5.678998],[3.978469,7.446680,-5.862830],[3.526072,1.572103,1.378745],[-6.628850,-0.039173,7.065821],[1.911084,4.727043,2.616903],[-4.987026,-3.472862,-5.872913],[6.765317,8.518102,2.242625],[5.887947,-1.946968,0.775409],[-1.052235,-6.521591,4.991222],[-5.165035,6.760874,2.556393],[9.724677,4.145403,-1.602134],[9.378685,2.256135,8.552386],[-8.770645,5.969803,0.141314],[6.256584,-9.367986,-5.310665],[7.264481,1.321282,-7.565632],[2.407694,-9.613561,-5.003637],[-3.911481,9.121115,-1.512852],[1.621476,0.246000,8.077092],[4.064672,5.704372,-2.541123],[2.397401,-1.946317,-2.314682],[-9.733534,7.216954,-6.650095],[3.409398,9.340405,3.850471],[8.424767,7.432524,6.096224],[-2.112766,7.214895,5.377398],[4.522044,2.871331,0.773830],[4.542184,-0.239694,-5.849819],[-5.630099,8.789763,-8.299797],[2.891130,2.270493,5.846113],[7.961659,0.458404,5.427030],[-6.496992,-0.220533,-1.376723],[2.998703,7.090769,-1.288780],[-6.579191,9.091338,3.016489],[-3.537172,-8.750995,2.544797],[4.732762,2.382081,0.678052],[9.589926,7.997923,7.555841],[3.468287,4.530796,-8.922183],[-5.407030,-2.227567,1.203912],[-0.222890,-5.743995,4.782127],[-2.357890,-0.411036,-5.095101],[-3.498787,2.011337,3.139502],[6.507826,6.740877,6.332648],[5.284653,3.411537,2.811241],[2.281913,-8.681585,-0.519964],[8.315144,-6.488923,-8.607958],[2.355915,-9.669774,2.191617],[5.971688,-1.792809,2.007521],[8.056553,-1.894600,7.057924],[2.598007,3.728629,-2.945853],[1.590971,-6.327839,-6.683105],[-8.694210,1.906429,-0.981608],[-0.546997,8.293677,1.829862],[-2.135725,7.364444,9.400059],[2.698627,5.799898,-3.252850],[-0.601453,7.150636,-7.896613],[-3.716068,2.514493,4.377212],[-4.346077,-8.163129,0.399351],[-8.251718,-8.974239,-4.146269],[-0.014699,-7.377799,-0.649770],[-7.451114,-2.197803,6.970392],[8.330741,-1.860504,5.879016],[-4.968216,8.357451,8.929612],[-0.563424,3.177219,-1.458566],[-2.702253,1.809009,-3.708246],[-5.787781,-2.990875,2.831298],[1.359753,4.924102,3.686815],[2.603597,-6.538947,-7.701958],[2.203745,-8.726097,9.864936],[-9.599401,1.128818,-6.170345],[9.358363,-0.327134,-1.667613],[3.399955,-2.605384,5.006016],[0.111074,-4.911995,8.269892],[-5.829017,5.133155,5.119393],[7.272196,8.632739,6.728538],[-0.264901,-0.851260,6.504163],[-3.874540,-2.127090,3.784395],[9.739060,-4.474324,8.513856],[-1.203779,9.831195,-6.325807],[0.981356,-5.845702,-5.939066],[-8.472656,2.410349,-6.340119],[3.017380,9.361147,3.220187],[1.936894,-6.092450,-4.004521],[-5.512735,4.025302,4.992343],[-9.572988,8.634609,6.481391],[9.435235,-2.894263,-2.772307],[9.341147,-5.630722,5.345496],[1.864643,-4.249403,-0.050006],[4.577542,3.002054,-9.153805],[-7.679810,3.090964,-0.763781],[-1.978211,0.194238,-6.312512],[9.477990,3.171509,-6.679968],[3.654976,-5.834436,9.090463],[6.593082,8.335148,4.961416],[8.433652,-3.235041,0.401037],[6.394059,-3.660195,4.643821],[-0.294851,-5.402137,-9.579545],[-5.535120,1.701665,0.816528],[2.707727,9.862635,7.677440],[7.489442,3.480507,-3.273562],[-5.192480,-0.098645,-4.380101],[4.710660,-9.306203,-0.828221],[-4.956331,-9.890831,2.712606],[2.908940,-1.820076,3.647870],[0.565941,-6.623278,2.813704],[-1.226977,-4.718284,-2.715227],[-3.074115,8.136198,-6.107973],[5.021169,-8.314238,-3.135937],[1.772143,3.198190,-4.946269],[9.994569,8.338705,-9.411702],[-9.599704,-9.386979,1.673485],[0.072500,-1.509512,-4.170009],[2.403303,3.365578,-3.745238],[4.305843,5.284410,7.784378],[-1.338794,-3.284004,1.493426],[-3.658129,1.256874,-2.191730],[9.440928,-4.741765,1.385972],[-5.870127,-9.774081,-2.653814],[0.745656,-4.177259,-3.914570],[7.835919,-4.963308,-7.545205],[-1.164118,-8.529553,3.894572],[9.137289,-8.181198,-2.531481],[-2.533552,-4.388461,4.124742],[1.140072,3.603825,8.129617],[-1.614901,-1.916420,-1.756040],[-0.271425,6.745503,-1.851827],[2.016786,0.261806,1.987172],[5.060325,0.071527,-8.250592],[9.860019,4.196584,7.811341],[-3.101334,7.888877,8.213258],[-1.388057,2.667784,-0.074439],[-6.799706,2.139547,7.948178],[-6.823692,-4.973306,4.446596],[-6.632023,3.708749,4.449432],[-2.135059,-2.250934,-7.700090],[-9.022627,0.167096,-5.685576],[8.608068,9.584348,-2.534077],[-2.915793,-3.990541,-3.746226],[3.078357,-3.426941,2.823118],[-7.534582,9.810520,5.417472],[-1.055830,-3.131785,9.206460],[5.580991,-1.969127,3.723491],[3.051113,7.319494,1.867561],[8.009044,-7.630675,4.289562],[4.822475,3.653736,-1.925966],[-5.293126,-8.915082,-1.235846],[1.360978,7.331494,-6.556633],[0.203104,-6.639917,9.941834],[-6.106978,-1.927254,-9.297986],[-0.581263,9.294907,8.639786],[0.751112,-9.000770,-3.317219],[8.552219,-0.222426,1.197305],[-1.848705,1.188492,9.208929],[-5.863064,4.940115,-6.546772],[-7.962476,-1.093532,1.849885],[8.503203,9.257146,-4.438869],[-2.037708,-2.254129,-5.432649],[0.078857,-5.617632,8.768108],[-2.950581,5.575281,1.472395],[1.734040,7.038673,0.420924],[7.641751,3.866130,8.905381],[6.475516,8.344444,-9.433747],[4.764199,-2.677080,-8.531879],[-3.090950,4.553481,1.797722],[6.732219,-8.478593,-7.496806],[6.691500,-8.842261,-6.325616],[9.604758,5.143634,3.736702],[-0.670974,-8.727703,-6.321607],[0.974586,0.315567,6.767777],[1.494343,8.566659,9.714268],[8.164374,-5.414540,9.492345],[3.081410,-0.204085,6.097444],[0.171541,-1.299530,5.057457],[-2.829789,4.747916,8.922546],[-8.812641,-8.387635,4.955043],[8.501995,-3.008092,-2.761751],[3.498941,-2.599518,3.500305],[1.804594,-9.608882,-3.876004],[3.710127,-3.790748,-9.426974],[0.385933,-1.796448,-9.658000],[7.915968,-0.924055,2.739715],[8.613590,1.448343,-3.112561],[7.783976,6.687997,-2.051656],[5.428507,-2.920770,-9.327003],[-1.296012,-0.016043,6.485623],[-5.486270,-2.822949,0.661320],[0.059008,-9.930688,-6.738001],[7.924204,3.014614,1.752006],[-3.753140,6.146713,-6.165323],[5.108728,7.395568,4.239479],[1.824953,7.111480,6.352275],[6.159571,9.647731,6.620535],[5.422960,7.701114,9.143436],[-9.319062,-7.031660,-2.828068],[1.602884,7.859198,5.467891],[-4.901752,-1.607528,4.826078],[-9.275642,-3.475127,-1.558594],[1.106718,5.719865,-4.049954],[-4.625806,-3.054682,-8.477186],[5.382886,8.235020,-0.605092]], dtype = "float64")#candidate|4858|(550, 3)|const|float64
call_4856 = relay.TupleGetItem(func_4175_call(relay.reshape(const_4857.astype('float64'), [7, 14, 13]), relay.reshape(const_4858.astype('float64'), [1650,]), ), 3)
call_4859 = relay.TupleGetItem(func_4179_call(relay.reshape(const_4857.astype('float64'), [7, 14, 13]), relay.reshape(const_4858.astype('float64'), [1650,]), ), 3)
output = relay.Tuple([call_4829,call_4840,call_4842,var_4843,call_4856,const_4857,const_4858,])
output2 = relay.Tuple([call_4830,call_4841,call_4844,var_4843,call_4859,const_4857,const_4858,])
func_4866 = relay.Function([var_4843,], output)
mod['func_4866'] = func_4866
mod = relay.transform.InferType()(mod)
var_4867 = relay.var("var_4867", dtype = "int32", shape = (252,))#candidate|4867|(252,)|var|int32
output = func_4866(var_4867)
func_4868 = relay.Function([var_4867], output)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3886_call = mod.get_global_var('func_3886')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_4898 = relay.TupleGetItem(func_3886_call(), 0)
call_4899 = relay.TupleGetItem(func_3888_call(), 0)
output = call_4898
output2 = call_4899
func_4923 = relay.Function([], output)
mod['func_4923'] = func_4923
mod = relay.transform.InferType()(mod)
mutated_mod['func_4923'] = func_4923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4923_call = mutated_mod.get_global_var('func_4923')
call_4924 = func_4923_call()
output = call_4924
func_4925 = relay.Function([], output)
mutated_mod['func_4925'] = func_4925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
call_4969 = func_2899_call()
call_4970 = func_2899_call()
func_4081_call = mod.get_global_var('func_4081')
func_4083_call = mutated_mod.get_global_var('func_4083')
call_4973 = relay.TupleGetItem(func_4081_call(), 0)
call_4974 = relay.TupleGetItem(func_4083_call(), 0)
func_3164_call = mod.get_global_var('func_3164')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_4984 = func_3164_call()
call_4985 = func_3164_call()
uop_4986 = relay.atan(call_4973.astype('float64')) # shape=(110, 15)
uop_4988 = relay.atan(call_4974.astype('float64')) # shape=(110, 15)
bop_4989 = relay.floor_mod(uop_4986.astype('float64'), relay.reshape(call_4973.astype('float64'), relay.shape_of(uop_4986))) # shape=(110, 15)
bop_4992 = relay.floor_mod(uop_4988.astype('float64'), relay.reshape(call_4974.astype('float64'), relay.shape_of(uop_4988))) # shape=(110, 15)
var_5010 = relay.var("var_5010", dtype = "float64", shape = (110, 15))#candidate|5010|(110, 15)|var|float64
bop_5011 = relay.minimum(bop_4989.astype('float64'), relay.reshape(var_5010.astype('float64'), relay.shape_of(bop_4989))) # shape=(110, 15)
bop_5014 = relay.minimum(bop_4992.astype('float64'), relay.reshape(var_5010.astype('float64'), relay.shape_of(bop_4992))) # shape=(110, 15)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
call_5016 = relay.TupleGetItem(func_343_call(relay.reshape(call_4984.astype('int64'), [5, 6, 8])), 1)
call_5017 = relay.TupleGetItem(func_346_call(relay.reshape(call_4984.astype('int64'), [5, 6, 8])), 1)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
var_5027 = relay.var("var_5027", dtype = "int32", shape = (252,))#candidate|5027|(252,)|var|int32
call_5026 = relay.TupleGetItem(func_4866_call(relay.reshape(var_5027.astype('int32'), [252,])), 3)
call_5028 = relay.TupleGetItem(func_4868_call(relay.reshape(var_5027.astype('int32'), [252,])), 3)
bop_5030 = relay.bitwise_and(bop_5011.astype('int32'), relay.reshape(bop_4989.astype('int32'), relay.shape_of(bop_5011))) # shape=(110, 15)
bop_5033 = relay.bitwise_and(bop_5014.astype('int32'), relay.reshape(bop_4992.astype('int32'), relay.shape_of(bop_5014))) # shape=(110, 15)
var_5036 = relay.var("var_5036", dtype = "float64", shape = (110, 15))#candidate|5036|(110, 15)|var|float64
bop_5037 = relay.bitwise_xor(bop_5011.astype('int16'), relay.reshape(var_5036.astype('int16'), relay.shape_of(bop_5011))) # shape=(110, 15)
bop_5040 = relay.bitwise_xor(bop_5014.astype('int16'), relay.reshape(var_5036.astype('int16'), relay.shape_of(bop_5014))) # shape=(110, 15)
bop_5050 = relay.multiply(bop_5030.astype('int16'), relay.reshape(var_5010.astype('int16'), relay.shape_of(bop_5030))) # shape=(110, 15)
bop_5053 = relay.multiply(bop_5033.astype('int16'), relay.reshape(var_5010.astype('int16'), relay.shape_of(bop_5033))) # shape=(110, 15)
bop_5054 = relay.logical_xor(bop_4989.astype('int32'), relay.reshape(bop_5011.astype('int32'), relay.shape_of(bop_4989))) # shape=(110, 15)
bop_5057 = relay.logical_xor(bop_4992.astype('int32'), relay.reshape(bop_5014.astype('int32'), relay.shape_of(bop_4992))) # shape=(110, 15)
output = relay.Tuple([call_4969,call_4984,call_5016,call_5026,var_5027,bop_5037,bop_5050,bop_5054,])
output2 = relay.Tuple([call_4970,call_4985,call_5017,call_5028,var_5027,bop_5040,bop_5053,bop_5057,])
func_5066 = relay.Function([var_5010,var_5027,var_5036,], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
mutated_mod['func_5066'] = func_5066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5066_call = mutated_mod.get_global_var('func_5066')
var_5068 = relay.var("var_5068", dtype = "float64", shape = (110, 15))#candidate|5068|(110, 15)|var|float64
var_5069 = relay.var("var_5069", dtype = "int32", shape = (252,))#candidate|5069|(252,)|var|int32
var_5070 = relay.var("var_5070", dtype = "float64", shape = (110, 15))#candidate|5070|(110, 15)|var|float64
call_5067 = func_5066_call(var_5068,var_5069,var_5070,)
output = call_5067
func_5071 = relay.Function([var_5068,var_5069,var_5070,], output)
mutated_mod['func_5071'] = func_5071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_5089 = func_3172_call()
call_5090 = func_3172_call()
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_5095 = relay.TupleGetItem(func_2456_call(), 5)
call_5096 = relay.TupleGetItem(func_2457_call(), 5)
func_4391_call = mod.get_global_var('func_4391')
func_4392_call = mutated_mod.get_global_var('func_4392')
call_5105 = relay.TupleGetItem(func_4391_call(), 0)
call_5106 = relay.TupleGetItem(func_4392_call(), 0)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
call_5121 = relay.TupleGetItem(func_343_call(relay.reshape(call_5105.astype('int64'), [5, 6, 8])), 1)
call_5122 = relay.TupleGetItem(func_346_call(relay.reshape(call_5105.astype('int64'), [5, 6, 8])), 1)
uop_5137 = relay.erf(call_5121.astype('float32')) # shape=(5, 6, 8)
uop_5139 = relay.erf(call_5122.astype('float32')) # shape=(5, 6, 8)
output = relay.Tuple([call_5089,call_5095,call_5105,uop_5137,])
output2 = relay.Tuple([call_5090,call_5096,call_5106,uop_5139,])
func_5141 = relay.Function([], output)
mod['func_5141'] = func_5141
mod = relay.transform.InferType()(mod)
output = func_5141()
func_5142 = relay.Function([], output)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5266 = relay.TupleGetItem(func_5141_call(), 0)
call_5267 = relay.TupleGetItem(func_5142_call(), 0)
uop_5281 = relay.acosh(call_5266.astype('float64')) # shape=(7, 16, 15)
uop_5283 = relay.acosh(call_5267.astype('float64')) # shape=(7, 16, 15)
output = relay.Tuple([uop_5281,])
output2 = relay.Tuple([uop_5283,])
func_5289 = relay.Function([], output)
mod['func_5289'] = func_5289
mod = relay.transform.InferType()(mod)
output = func_5289()
func_5290 = relay.Function([], output)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
call_5311 = func_2899_call()
call_5312 = func_2899_call()
func_4923_call = mod.get_global_var('func_4923')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_5334 = func_4923_call()
call_5335 = func_4923_call()
var_5338 = relay.var("var_5338", dtype = "float32", shape = (2, 7, 5))#candidate|5338|(2, 7, 5)|var|float32
bop_5339 = relay.power(call_5334.astype('float64'), relay.reshape(var_5338.astype('float64'), relay.shape_of(call_5334))) # shape=(2, 7, 5)
bop_5342 = relay.power(call_5335.astype('float64'), relay.reshape(var_5338.astype('float64'), relay.shape_of(call_5335))) # shape=(2, 7, 5)
func_5289_call = mod.get_global_var('func_5289')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_5347 = relay.TupleGetItem(func_5289_call(), 0)
call_5348 = relay.TupleGetItem(func_5290_call(), 0)
output = relay.Tuple([call_5311,bop_5339,call_5347,])
output2 = relay.Tuple([call_5312,bop_5342,call_5348,])
func_5351 = relay.Function([var_5338,], output)
mod['func_5351'] = func_5351
mod = relay.transform.InferType()(mod)
mutated_mod['func_5351'] = func_5351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5352 = relay.var("var_5352", dtype = "float32", shape = (2, 7, 5))#candidate|5352|(2, 7, 5)|var|float32
func_5351_call = mutated_mod.get_global_var('func_5351')
call_5353 = func_5351_call(var_5352)
output = call_5353
func_5354 = relay.Function([var_5352], output)
mutated_mod['func_5354'] = func_5354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5361 = relay.var("var_5361", dtype = "float32", shape = ())#candidate|5361|()|var|float32
var_5362 = relay.var("var_5362", dtype = "float32", shape = (8, 16, 16))#candidate|5362|(8, 16, 16)|var|float32
bop_5363 = relay.greater_equal(var_5361.astype('bool'), var_5362.astype('bool')) # shape=(8, 16, 16)
func_5066_call = mod.get_global_var('func_5066')
func_5071_call = mutated_mod.get_global_var('func_5071')
const_5378 = relay.const([[1.003546,-0.514867,2.363021,-6.189668,-9.841738,-0.056855,1.582587,7.934246,5.723624,4.257727,-5.467281,0.031094,-5.887030,-2.050806,-6.685121],[9.904416,9.090328,0.062664,-1.899348,2.453657,-1.363536,1.928336,-3.681402,2.572823,-2.513426,-2.361600,-8.621669,-1.970331,-1.043537,2.885507],[4.799370,5.719576,7.483912,4.769000,-3.486424,-9.443824,-8.100702,2.374307,-3.804888,0.043219,9.286703,-4.798836,5.567469,5.560149,0.441241],[-3.975341,7.232618,0.812198,7.189306,0.824344,-1.714172,-0.958293,2.752649,6.894154,9.129227,-6.018137,1.934717,-0.193243,9.182616,-5.991096],[-8.826600,0.071483,-3.860130,-1.733475,-1.718671,-3.567563,6.195787,3.974310,-5.760870,3.780201,7.631492,-8.863737,-0.617769,-9.530554,-1.338971],[-3.408600,1.894049,6.375978,0.175914,9.040064,1.236094,-1.278323,2.674451,6.402125,-1.355876,6.755016,-8.142618,-3.573909,-3.447771,1.586030],[-3.905841,0.072332,1.124714,0.063489,2.736633,-7.180972,-8.084374,1.865226,5.041346,7.760204,6.916359,8.640251,3.110824,-6.027458,-5.152092],[-2.944926,-7.274904,2.607317,-3.501262,-5.867232,1.331569,-7.097868,2.779424,7.933315,-9.727236,-2.167873,3.504339,-8.321003,-4.945566,-3.838066],[-4.300936,0.378563,7.340293,-3.188397,2.150000,9.917664,-4.378070,5.592203,8.444066,-6.674549,6.148026,-8.295268,-2.733926,2.030231,7.570645],[-9.930732,6.082820,-7.266329,-5.365976,-4.580894,5.410366,-9.970069,-4.453226,3.741072,7.701610,4.372484,3.005598,4.560999,-9.236802,-2.465634],[8.709960,4.121207,-9.698823,7.114154,1.631697,-9.612414,2.317713,-9.380618,-5.273138,9.055106,5.723537,4.277783,-3.903383,-0.159863,5.995574],[9.729751,1.396909,8.417916,-1.535997,-1.967188,2.735722,1.104243,-6.865708,-7.450018,1.866367,-7.396262,-3.005865,0.964189,-3.024123,-8.966767],[-5.272788,-4.539140,-2.724237,9.681844,-3.995695,-7.954860,8.613178,-5.706719,0.610565,-2.892515,8.293255,6.435593,-0.242626,-6.790540,5.438876],[6.070193,-8.886468,1.886508,6.357724,-7.456456,1.172649,1.273813,-7.075541,-6.691683,-0.678194,-3.121743,8.713228,-8.437000,7.795996,-1.190593],[1.325214,-4.496142,-8.262784,-4.311309,4.983357,2.811725,-4.800100,0.297424,2.367671,-3.523261,-7.487711,5.695118,3.395867,-1.902923,-4.276340],[4.505331,-4.512379,-1.889778,0.447087,-7.815719,8.683531,4.039196,6.280359,-4.592478,-0.158569,-0.840078,5.605125,-8.259723,5.243572,5.703646],[-3.556059,0.401575,1.324698,0.890480,7.346387,7.398802,9.925630,-3.733020,4.502104,8.704316,6.411777,-5.977521,9.601566,0.643625,3.854013],[1.128217,0.821907,-2.791451,-8.225923,-3.538491,-2.230344,-9.160250,-1.478012,-7.027247,4.779374,-2.048550,3.603992,0.534330,0.629293,-7.233023],[-2.920749,-3.034062,-1.416438,-0.730752,-5.787384,-6.145998,-9.187929,9.313346,6.591945,-8.853017,7.475869,-2.276412,6.404228,-7.430571,-0.820375],[-3.460435,-2.644114,6.187617,7.393788,1.087486,-0.696097,-3.637037,-9.467819,1.184829,7.296972,-9.991046,-4.819570,-4.761556,-6.202934,8.054473],[0.497872,5.458943,-4.847911,-4.270210,-0.697352,-4.933112,-1.084932,9.361641,-7.145872,-9.975413,-5.676115,-3.595381,8.312030,1.107378,0.798370],[9.162945,-0.356794,-0.673780,6.692072,-3.340348,-4.485872,-5.914699,-0.994049,2.972340,-0.323462,-5.382920,-4.687846,-1.240523,7.196434,-1.107839],[-9.960576,9.959305,-1.557230,2.595468,2.191528,-0.851780,-7.117297,-7.263665,-9.423420,6.343535,3.289666,-8.301686,9.927258,-4.161690,-6.510550],[4.766942,-5.296562,6.572140,7.062697,-9.311183,-1.918524,-4.672800,6.409662,5.244382,3.903253,-8.914106,8.472201,-9.462316,1.100563,4.022077],[5.119593,-4.869312,-6.659619,3.325482,2.320162,-6.303666,-7.127857,-4.726756,0.041682,2.713838,5.239131,9.929048,-2.172786,1.648582,-9.130628],[5.425706,6.027836,4.218027,3.275106,5.049064,-5.757756,8.259020,7.885599,-9.198005,4.868577,2.500056,-1.024054,3.283650,-9.543756,-7.077112],[-5.054445,9.146808,-9.297380,6.042976,1.617794,-3.699670,-8.112487,-8.669515,9.130770,-3.755180,-9.489742,6.154498,-6.838906,-6.577557,1.664951],[-6.017307,-1.942191,-2.825537,-9.416620,5.530075,-9.035387,-6.397919,8.692501,-7.381240,1.813018,2.968327,-5.710781,-6.599470,-6.171992,-8.733552],[-0.520809,2.793838,-4.188917,2.884181,8.779532,-2.528051,-8.956564,-9.016829,3.814176,-2.370944,9.927654,-4.200027,1.639720,-3.636085,0.367580],[7.282312,0.273064,3.486750,-1.196433,4.719044,7.996575,-0.433954,-2.650890,1.407871,2.366292,-3.787111,8.182661,2.323612,-7.232134,-5.167948],[-1.337904,5.204351,-7.803736,3.846053,4.867131,-2.299468,-9.564945,-6.149729,0.846792,-8.288104,3.922655,0.695755,5.856719,2.431370,0.720516],[-1.266721,-2.879062,1.179906,-4.631985,5.500703,5.924312,-4.620700,-3.656938,-0.888436,-5.897984,1.081255,-2.092838,-1.376615,6.868658,6.554891],[-0.741380,-7.944852,2.172402,0.137426,-5.357524,0.855390,7.319048,3.189835,-7.505800,5.867899,-3.791190,-7.311727,-2.919868,-7.241614,7.211504],[-2.074311,9.345580,-5.158915,-7.179552,-0.930961,-0.241372,1.344631,7.787870,-0.176964,-1.230939,-0.264453,-9.582857,0.725661,-0.560709,-7.545400],[0.091999,6.187592,4.391437,7.113570,8.401590,-8.630485,7.776981,7.179560,-2.822447,-0.203751,-0.287855,7.749671,-4.573405,3.452047,-4.112225],[-6.208167,-3.297993,4.565572,2.812545,4.862391,-5.751758,-2.751620,0.296929,2.710581,1.216667,5.007299,-9.782492,-0.402256,7.504725,7.595786],[8.915430,-5.927568,0.810780,5.891931,-6.333232,-3.443464,-7.904304,3.340279,-8.159967,1.037962,-4.665431,6.186636,0.393771,7.711438,7.215362],[5.776110,-5.520484,-0.742405,9.686459,-0.657590,4.543964,-7.813457,-2.661131,7.625655,-1.066615,-1.005359,9.453841,-8.927753,-5.532450,-1.610584],[-1.405800,-6.401186,4.631771,8.434618,4.774188,-6.175516,-6.541280,-3.928541,-8.371636,9.903453,0.470900,-4.934441,-5.709799,2.643556,-4.292395],[-0.738882,9.893976,-8.271623,-7.190132,7.383616,8.143741,-2.444824,5.361944,-0.720351,-0.100176,-4.407227,-9.327461,2.475028,0.191999,6.030693],[-4.802864,4.200475,-5.668072,-2.297676,2.818214,-1.930283,6.505887,-2.645851,-9.727153,5.464820,-5.958248,-6.284816,-1.852303,2.299921,-3.865611],[0.291642,3.233692,7.209387,-4.883250,-7.144302,3.322283,2.222330,1.793290,3.802461,-1.223214,-1.388643,2.197538,3.877368,-6.203349,1.299001],[8.884573,8.321364,4.469852,9.587155,-5.701260,9.940575,-6.781359,2.770119,-3.241205,4.205131,8.659224,-6.176717,-0.188045,-1.400291,-3.903697],[-8.667315,-6.780941,-6.941395,-9.002331,-0.098606,9.632443,-3.453734,-1.622915,3.702074,2.598405,0.353170,9.323290,3.924918,-0.361220,-5.634661],[5.183425,-6.709249,0.023204,-8.088211,-9.947059,-9.307810,-6.061459,-3.325164,-9.561702,-3.225831,-3.716840,-4.565137,5.319098,-2.565465,1.885579],[-0.592260,8.684186,9.836019,-5.676427,-9.076251,-0.406929,-0.242542,8.054478,7.507063,5.728901,4.468524,7.657465,6.135069,9.899374,-3.676774],[-2.732613,-6.504177,-5.494535,-2.905587,4.944681,0.433330,-9.666011,-8.056429,-4.102280,1.997959,4.413736,-3.639320,7.875415,7.575750,1.305421],[6.003255,5.752866,8.822667,3.411729,-6.479871,-8.258893,-6.160868,2.513732,-5.124594,-9.448587,1.680723,2.023969,5.201391,0.644176,7.253075],[-9.696638,0.471650,-7.095689,5.589965,-9.465224,-9.799463,-4.464674,9.636436,-8.891541,0.201790,-0.276160,-3.125511,-2.844336,-4.534314,3.996727],[-3.467329,-8.442090,8.633825,-5.415024,3.458877,-9.689195,5.001364,-6.876992,-5.130228,6.305353,-5.327556,4.218124,2.486398,-1.004358,7.899244],[7.319199,6.603917,5.127161,3.173281,-1.648362,7.482133,-5.774388,1.705583,0.346233,1.378947,7.714986,-4.781115,0.514644,7.950185,9.380050],[1.579477,-7.541990,9.833404,3.650680,-3.619723,6.827241,-3.163012,-7.972234,-5.102610,0.950911,-7.275193,0.592735,0.819355,-3.328270,-4.689290],[-9.629841,1.281474,0.099642,-7.731531,5.470613,-3.107646,-7.080932,-9.167885,-7.906950,1.275460,2.741480,-1.387457,-8.863383,8.293687,-5.283956],[1.155109,6.216372,-6.676309,8.185970,3.899280,8.517335,4.518306,-1.918629,-3.695962,-6.727872,-1.321711,-6.377985,5.436729,1.372377,9.351511],[-3.709503,-1.236417,7.710927,-6.721392,0.896426,6.586143,3.024950,3.265717,9.367193,-3.305730,8.387026,3.488320,-5.043640,-2.830228,5.439867],[6.651068,-1.795316,8.310686,-0.603704,-3.059628,0.368941,-9.387597,-9.257052,-0.780274,-2.157478,-8.792450,1.729810,6.308591,-0.923874,4.436463],[0.203309,5.375256,-1.766066,-1.137490,6.297764,9.732858,-0.582995,8.152716,6.820167,-3.185637,2.870462,4.781649,-2.458524,-2.203810,-6.930092],[-4.324559,-7.323132,-2.870577,-0.202410,-9.387301,9.418828,-6.564486,7.321638,4.280682,4.437894,-8.857886,-3.460166,-4.843016,-1.528806,2.860482],[-5.362038,4.197779,8.617969,-7.307221,-4.638255,4.291545,-8.229742,1.660535,-4.223276,-5.177304,7.792067,-2.020256,-8.964461,-1.510185,1.761342],[9.403419,-4.441183,-0.425899,-0.642061,0.767941,4.682751,4.047859,6.448430,-4.281839,3.444514,9.679329,5.576098,-1.437666,-1.860255,5.391631],[-4.037453,-5.750591,0.015659,-2.310390,3.540394,-9.817599,0.668518,-0.254183,-3.073803,-9.842823,4.418323,-0.903378,4.567317,-0.313053,-5.173540],[9.581796,-8.300394,4.381934,-2.825049,-9.475866,9.420597,1.739320,-3.571294,2.844175,-6.456640,-4.693448,-4.125765,-9.437274,7.283770,6.839826],[-2.434411,-7.214871,-0.758989,-3.606487,3.208559,-2.113046,9.024844,1.534536,1.831684,3.631497,-8.060863,6.831649,-9.347138,-2.719617,-2.568542],[4.197353,-1.056410,-6.623397,8.885382,-5.650989,9.623521,-3.835358,-1.053622,-8.213665,-2.561231,4.680243,6.251055,5.578501,-8.109983,2.211211],[-2.183148,-7.412645,-1.972542,9.824731,1.096289,-8.560945,4.135372,-7.055012,8.878101,7.864809,-2.846546,-5.068629,-6.868532,8.342580,-6.451581],[6.449681,-1.045691,8.342463,-7.508145,-0.132372,-2.653498,-0.311690,8.738151,1.340353,1.199297,4.727755,1.906176,4.725113,2.696395,9.145676],[6.641768,-1.784591,-5.671762,-0.956584,6.793714,-7.590529,-7.484787,9.108080,8.523972,-4.692677,3.534517,-8.442371,5.987440,-9.033585,2.747611],[-6.144133,2.210374,-2.049758,2.287577,-1.299714,8.225115,-6.859038,-7.254716,-8.725496,2.743523,-3.487091,-9.369462,6.644316,3.160563,-0.428784],[1.922034,4.620786,-7.970611,-4.146608,1.905329,-9.056265,-5.409622,-0.424718,-1.253301,-2.683036,6.190823,-8.242249,-1.075881,1.631987,-8.337933],[-2.065224,9.832518,-1.692757,8.917699,4.215575,7.978468,0.333240,-6.505174,-4.601727,-2.083381,-6.358345,-2.653184,0.761553,7.284984,-8.630677],[2.092891,1.734954,-8.583552,-9.597263,5.148242,-6.973849,0.697975,-5.586688,2.195783,-7.511706,6.444366,3.115821,6.742247,-1.584708,-8.487202],[-1.862108,6.875901,-0.137934,5.833601,5.607516,-6.665253,-5.556560,-8.674587,9.986595,3.923640,7.171724,1.202095,-7.414083,-6.623018,0.805913],[4.806381,-1.238832,0.043061,0.732371,6.914160,1.885683,-3.078866,2.027561,-7.971057,3.156011,-9.505395,1.166760,8.458170,-0.762862,-9.439245],[-3.936181,-7.284284,6.890692,6.598155,-5.543935,9.786081,-3.703132,7.701427,-3.691914,3.849356,-8.717290,4.117829,7.787000,5.522594,-8.399826],[5.673782,-9.979971,9.684395,6.055748,-2.133377,7.973444,-9.239822,7.887677,3.482863,5.925911,2.169156,-7.921468,2.654951,-3.243970,8.740495],[2.250114,9.610367,-0.043872,0.531558,-0.024869,-5.689232,9.243259,2.016355,-6.676094,5.698427,4.310174,9.287448,1.205706,0.277631,-0.099215],[-5.713917,6.219588,9.284337,-4.565365,-2.154120,-3.924261,-0.828612,6.481434,-3.742498,-0.633787,6.909570,2.964140,9.939641,-5.975380,-9.530938],[3.152166,-5.445607,-7.799992,7.374095,-8.745633,8.083679,-8.440444,-0.372670,-6.329394,2.555195,-2.716923,-0.734896,-7.099929,-1.041529,5.956798],[3.620981,6.269988,6.819253,1.515713,-2.006851,-2.031633,-3.270250,3.772326,-5.719268,8.794176,-2.238490,5.613184,9.435276,-9.410777,-3.175938],[-5.886612,3.173808,2.437092,-5.450410,1.111601,-6.724505,-9.379123,-6.648799,8.079112,1.444630,-7.172282,5.479168,1.154188,1.186861,-2.453241],[0.028261,1.140834,1.689461,8.775764,7.364087,-5.023843,8.834868,-8.172312,1.242740,-8.582275,1.476869,-9.368452,-0.517450,3.772235,-0.072516],[6.547742,9.106797,-9.620646,2.452877,-6.356421,-7.479226,-6.311315,6.144686,4.647300,7.176918,-9.267908,-5.691173,8.020167,-7.893141,2.495608],[-1.700900,-5.546138,1.844458,-5.911784,-8.836048,-2.422521,-4.290568,-2.602288,6.604280,-7.765190,-3.398809,0.204769,1.050088,8.406235,-2.091864],[-0.494357,-2.831171,-7.049824,0.290629,-9.827088,6.976880,-1.425807,-6.761120,3.319170,-9.358783,-1.889479,-9.677252,-7.116246,-5.382271,5.261800],[-2.129362,1.038459,-8.868991,-1.732767,3.471844,-7.250294,5.509646,-0.145814,7.305165,-0.140186,8.941596,-6.800298,-0.458790,9.271926,0.614878],[2.137708,1.617927,-7.020031,-9.253095,8.243519,5.135186,-2.689090,3.873810,-7.813755,3.450289,-8.572965,1.201862,-3.499506,2.770750,-3.103470],[9.215851,-0.880693,1.744153,-6.839191,-9.265436,7.349077,4.826965,-0.733864,-3.497107,-4.803819,0.576596,-7.303351,5.400552,9.411785,-2.751127],[5.840842,4.875219,-7.266249,-3.362303,0.423292,9.042945,3.590101,-2.731515,5.043615,-4.744932,-1.244787,-3.656339,5.507050,-2.491988,2.951565],[-8.657369,-0.456896,-5.569144,-4.963515,3.057588,4.280864,-0.621467,-2.183108,0.027729,3.838603,0.449245,8.926646,-3.270410,1.776601,1.252725],[-3.622489,-4.798107,-7.552605,1.478699,1.897697,-9.062657,6.998852,7.046147,0.485181,1.940763,0.384448,5.528845,7.100043,4.426885,-5.756671],[5.419015,-0.487343,1.662272,-7.029262,-1.982553,4.301384,2.442119,1.718844,-3.252277,8.897364,-9.339870,-1.826011,2.271744,4.541595,1.237448],[-4.133389,-1.474479,-5.060460,8.533777,9.792487,-7.905995,-5.727608,3.969243,3.730614,-5.374738,-9.785645,6.940818,-2.361679,-4.396187,4.181998],[0.876601,-6.451315,-8.108309,4.330408,2.243065,6.431008,-2.535573,0.602757,-9.342801,2.925867,0.137314,9.087268,1.797545,-5.930511,1.015055],[8.391237,4.962186,3.059104,-8.874192,5.488975,0.869954,1.097146,-8.377164,7.255888,2.080103,6.561864,-3.627111,2.514824,8.763542,4.842037],[9.300356,7.374822,-5.074770,3.213909,-4.097463,5.460873,5.684757,5.210805,8.590456,-0.124383,4.059617,-3.792440,-9.882270,1.279310,9.916656],[0.888526,8.094022,3.888242,1.134377,-2.258370,6.129210,9.493629,8.435376,-5.712091,5.131067,2.334027,-4.669334,5.013402,-8.688434,-5.937602],[6.134653,-1.346617,9.342147,1.311774,-5.433899,-4.065847,6.381446,3.595454,-0.234176,3.115181,-9.570703,-8.593993,-6.279235,-5.683571,9.971931],[-3.680899,-7.691101,2.635934,-7.597366,-1.289601,7.392102,-9.816029,-7.430222,3.891704,1.302795,-1.119795,2.364052,8.511288,-6.055663,-9.400993],[-7.492101,9.441934,-6.834114,-2.174078,9.798793,1.941907,1.884582,0.434445,4.997890,-8.042005,3.307540,6.650371,-7.092709,8.168274,-8.222898],[-7.012268,-5.532523,2.533335,-7.796549,-8.262979,-8.466137,-1.664034,3.258563,4.903404,-5.587729,-7.882861,-7.347112,5.894565,-1.280371,-7.166404],[-9.408917,1.460606,-4.589807,0.176359,2.929050,-3.030607,-6.688438,9.149719,-6.742656,-8.275832,9.182511,-0.769364,-0.912179,-8.344699,-0.530732],[9.177366,7.009251,-1.184228,4.291522,-2.419973,6.359977,-0.243915,-1.850837,7.267688,-3.814276,2.124554,-3.522819,-4.395812,5.869521,6.727708],[4.447193,6.494569,-7.931234,-1.835835,5.815015,-2.788123,7.662535,-8.960869,-7.097794,-3.194699,-0.819130,-8.005836,7.536588,6.058075,7.130271],[5.758647,-6.095573,3.716573,-6.667559,-1.212425,3.428116,-7.943908,-3.564795,-1.688100,-7.668135,4.257295,-0.021384,-9.959016,-7.805245,2.155641],[-6.260533,-6.440310,8.399899,0.327881,4.407867,0.827856,-5.752252,8.242575,5.629104,-2.161979,-6.684826,-6.593500,3.305257,4.281784,-8.626093],[-1.616370,7.775775,5.754945,-4.496325,-5.659642,6.374248,-6.254159,8.571304,-7.022593,6.777484,-8.657297,-6.969154,9.788166,0.583322,-6.899770],[0.194383,5.874436,1.603367,3.650697,5.992546,-4.135215,6.066644,6.898487,-0.117414,8.100824,-2.581485,-4.133285,-6.364232,-5.410294,-0.152914],[-0.368088,3.546656,-0.366138,-6.916606,1.408226,2.522626,-6.650684,-0.343821,7.949178,2.692548,4.892645,-3.647105,9.867899,1.662648,8.090496],[-1.899104,6.851620,0.023172,-2.586734,8.613738,6.689765,3.682997,8.216497,8.380203,6.973975,-8.102607,-8.720844,-6.863373,5.647980,-0.831798],[3.098554,-3.892415,-5.860770,-6.683510,-1.685128,-1.511964,-6.601234,7.645633,-5.753603,-5.977309,-1.086098,-8.620625,7.188044,-8.375111,-8.900496]], dtype = "float64")#candidate|5378|(110, 15)|const|float64
const_5379 = relay.const([10,-8,4,-4,3,-2,10,8,2,-8,6,3,-2,3,-1,-7,-8,7,-6,-5,-3,-3,-10,2,-2,6,-10,7,-1,1,3,-4,-4,-5,4,-1,-10,9,-5,1,3,-5,-8,6,-5,1,4,-10,-8,1,8,10,-6,7,-10,-9,6,8,8,-1,-1,-2,-10,5,9,2,10,5,-1,-7,9,-3,-4,8,5,5,-6,2,1,-5,-5,-8,-1,3,3,2,-8,8,-8,-3,10,8,7,3,9,-8,7,1,9,1,-6,6,9,-7,4,9,-10,-1,9,6,-4,-4,2,-10,-1,-3,-3,2,-4,-9,9,-2,9,9,-9,-7,9,5,-1,10,-5,1,-1,2,-2,-4,2,-3,1,-8,4,5,-1,5,-7,-5,10,-10,1,-8,4,-5,10,-7,7,-3,-5,6,-1,9,8,10,-2,-10,-4,-7,10,5,9,3,9,6,-8,-9,3,-9,-4,8,-1,10,-7,-6,-8,-7,4,2,7,7,-10,4,-4,6,-10,-5,-3,6,3,-6,-4,-9,-4,2,-9,-5,-5,4,-2,9,-5,4,-3,-9,-4,-9,-10,7,-9,3,9,-9,-9,-6,-5,2,3,-1,6,-5,5,-9,4,6,8,-3,1,1,-7,8,4,-6,-8,5,5,4,-6,4,2,5,-1,-5,10,-2], dtype = "int32")#candidate|5379|(252,)|const|int32
call_5377 = relay.TupleGetItem(func_5066_call(relay.reshape(const_5378.astype('float64'), [110, 15]), relay.reshape(const_5379.astype('int32'), [252,]), relay.reshape(const_5378.astype('float64'), [110, 15]), ), 7)
call_5380 = relay.TupleGetItem(func_5071_call(relay.reshape(const_5378.astype('float64'), [110, 15]), relay.reshape(const_5379.astype('int32'), [252,]), relay.reshape(const_5378.astype('float64'), [110, 15]), ), 7)
output = relay.Tuple([bop_5363,call_5377,const_5378,const_5379,])
output2 = relay.Tuple([bop_5363,call_5380,const_5378,const_5379,])
func_5391 = relay.Function([var_5361,var_5362,], output)
mod['func_5391'] = func_5391
mod = relay.transform.InferType()(mod)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5391_call = mutated_mod.get_global_var('func_5391')
var_5393 = relay.var("var_5393", dtype = "float32", shape = ())#candidate|5393|()|var|float32
var_5394 = relay.var("var_5394", dtype = "float32", shape = (8, 16, 16))#candidate|5394|(8, 16, 16)|var|float32
call_5392 = func_5391_call(var_5393,var_5394,)
output = call_5392
func_5395 = relay.Function([var_5393,var_5394,], output)
mutated_mod['func_5395'] = func_5395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5397 = relay.var("var_5397", dtype = "float32", shape = (8, 2, 11))#candidate|5397|(8, 2, 11)|var|float32
uop_5398 = relay.sinh(var_5397.astype('float32')) # shape=(8, 2, 11)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_5426 = func_3172_call()
call_5427 = func_3172_call()
output = relay.Tuple([uop_5398,call_5426,])
output2 = relay.Tuple([uop_5398,call_5427,])
func_5433 = relay.Function([var_5397,], output)
mod['func_5433'] = func_5433
mod = relay.transform.InferType()(mod)
var_5434 = relay.var("var_5434", dtype = "float32", shape = (8, 2, 11))#candidate|5434|(8, 2, 11)|var|float32
output = func_5433(var_5434)
func_5435 = relay.Function([var_5434], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_5461 = relay.TupleGetItem(func_2866_call(), 1)
call_5462 = relay.TupleGetItem(func_2868_call(), 1)
output = relay.Tuple([call_5461,])
output2 = relay.Tuple([call_5462,])
func_5463 = relay.Function([], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
output = func_5463()
func_5464 = relay.Function([], output)
mutated_mod['func_5464'] = func_5464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2806_call = mod.get_global_var('func_2806')
func_2808_call = mutated_mod.get_global_var('func_2808')
call_5553 = relay.TupleGetItem(func_2806_call(), 1)
call_5554 = relay.TupleGetItem(func_2808_call(), 1)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
call_5563 = relay.TupleGetItem(func_343_call(relay.reshape(call_5553.astype('int64'), [5, 6, 8])), 0)
call_5564 = relay.TupleGetItem(func_346_call(relay.reshape(call_5553.astype('int64'), [5, 6, 8])), 0)
uop_5584 = relay.cos(call_5563.astype('float64')) # shape=(5, 6, 8)
uop_5586 = relay.cos(call_5564.astype('float64')) # shape=(5, 6, 8)
output = relay.Tuple([call_5553,uop_5584,])
output2 = relay.Tuple([call_5554,uop_5586,])
func_5587 = relay.Function([], output)
mod['func_5587'] = func_5587
mod = relay.transform.InferType()(mod)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5587_call = mutated_mod.get_global_var('func_5587')
call_5588 = func_5587_call()
output = call_5588
func_5589 = relay.Function([], output)
mutated_mod['func_5589'] = func_5589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_5592 = relay.TupleGetItem(func_2382_call(), 0)
call_5593 = relay.TupleGetItem(func_2384_call(), 0)
output = call_5592
output2 = call_5593
func_5611 = relay.Function([], output)
mod['func_5611'] = func_5611
mod = relay.transform.InferType()(mod)
output = func_5611()
func_5612 = relay.Function([], output)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_5640 = relay.TupleGetItem(func_2153_call(), 0)
call_5641 = relay.TupleGetItem(func_2154_call(), 0)
output = call_5640
output2 = call_5641
func_5651 = relay.Function([], output)
mod['func_5651'] = func_5651
mod = relay.transform.InferType()(mod)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5651_call = mutated_mod.get_global_var('func_5651')
call_5652 = func_5651_call()
output = call_5652
func_5653 = relay.Function([], output)
mutated_mod['func_5653'] = func_5653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3678_call = mod.get_global_var('func_3678')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_5673 = func_3678_call()
call_5674 = func_3678_call()
var_5686 = relay.var("var_5686", dtype = "float64", shape = (13, 11, 14))#candidate|5686|(13, 11, 14)|var|float64
bop_5687 = relay.floor_mod(call_5673.astype('float32'), var_5686.astype('float32')) # shape=(13, 11, 14)
bop_5690 = relay.floor_mod(call_5674.astype('float32'), var_5686.astype('float32')) # shape=(13, 11, 14)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_5691 = relay.TupleGetItem(func_2382_call(), 1)
call_5692 = relay.TupleGetItem(func_2384_call(), 1)
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_5693 = func_2204_call()
call_5694 = func_2204_call()
func_2965_call = mod.get_global_var('func_2965')
func_2966_call = mutated_mod.get_global_var('func_2966')
call_5699 = relay.TupleGetItem(func_2965_call(), 1)
call_5700 = relay.TupleGetItem(func_2966_call(), 1)
func_2806_call = mod.get_global_var('func_2806')
func_2808_call = mutated_mod.get_global_var('func_2808')
call_5711 = relay.TupleGetItem(func_2806_call(), 0)
call_5712 = relay.TupleGetItem(func_2808_call(), 0)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
var_5726 = relay.var("var_5726", dtype = "int32", shape = (6, 42))#candidate|5726|(6, 42)|var|int32
call_5725 = func_1115_call(relay.reshape(var_5726.astype('int32'), [6, 14, 3]), relay.reshape(var_5726.astype('int32'), [6, 14, 3]), )
call_5727 = func_1115_call(relay.reshape(var_5726.astype('int32'), [6, 14, 3]), relay.reshape(var_5726.astype('int32'), [6, 14, 3]), )
bop_5735 = relay.not_equal(var_5726.astype('bool'), relay.reshape(call_5725.astype('bool'), relay.shape_of(var_5726))) # shape=(6, 42)
bop_5738 = relay.not_equal(var_5726.astype('bool'), relay.reshape(call_5727.astype('bool'), relay.shape_of(var_5726))) # shape=(6, 42)
output = relay.Tuple([bop_5687,call_5691,call_5693,call_5699,call_5711,bop_5735,])
output2 = relay.Tuple([bop_5690,call_5692,call_5694,call_5700,call_5712,bop_5738,])
func_5745 = relay.Function([var_5686,var_5726,], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
var_5746 = relay.var("var_5746", dtype = "float64", shape = (13, 11, 14))#candidate|5746|(13, 11, 14)|var|float64
var_5747 = relay.var("var_5747", dtype = "int32", shape = (6, 42))#candidate|5747|(6, 42)|var|int32
output = func_5745(var_5746,var_5747,)
func_5748 = relay.Function([var_5746,var_5747,], output)
mutated_mod['func_5748'] = func_5748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_5755 = func_5611_call()
call_5756 = func_5611_call()
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5759 = relay.TupleGetItem(func_5141_call(), 3)
call_5760 = relay.TupleGetItem(func_5142_call(), 3)
output = relay.Tuple([call_5755,call_5759,])
output2 = relay.Tuple([call_5756,call_5760,])
func_5773 = relay.Function([], output)
mod['func_5773'] = func_5773
mod = relay.transform.InferType()(mod)
mutated_mod['func_5773'] = func_5773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5773_call = mutated_mod.get_global_var('func_5773')
call_5774 = func_5773_call()
output = call_5774
func_5775 = relay.Function([], output)
mutated_mod['func_5775'] = func_5775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5829 = relay.TupleGetItem(func_5141_call(), 3)
call_5830 = relay.TupleGetItem(func_5142_call(), 3)
uop_5842 = relay.sqrt(call_5829.astype('float32')) # shape=(5, 6, 8)
uop_5844 = relay.sqrt(call_5830.astype('float32')) # shape=(5, 6, 8)
bop_5845 = relay.floor_mod(uop_5842.astype('float64'), relay.reshape(call_5829.astype('float64'), relay.shape_of(uop_5842))) # shape=(5, 6, 8)
bop_5848 = relay.floor_mod(uop_5844.astype('float64'), relay.reshape(call_5830.astype('float64'), relay.shape_of(uop_5844))) # shape=(5, 6, 8)
func_5433_call = mod.get_global_var('func_5433')
func_5435_call = mutated_mod.get_global_var('func_5435')
var_5872 = relay.var("var_5872", dtype = "float32", shape = (176,))#candidate|5872|(176,)|var|float32
call_5871 = relay.TupleGetItem(func_5433_call(relay.reshape(var_5872.astype('float32'), [8, 2, 11])), 0)
call_5873 = relay.TupleGetItem(func_5435_call(relay.reshape(var_5872.astype('float32'), [8, 2, 11])), 0)
output = relay.Tuple([bop_5845,call_5871,var_5872,])
output2 = relay.Tuple([bop_5848,call_5873,var_5872,])
func_5878 = relay.Function([var_5872,], output)
mod['func_5878'] = func_5878
mod = relay.transform.InferType()(mod)
mutated_mod['func_5878'] = func_5878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5879 = relay.var("var_5879", dtype = "float32", shape = (176,))#candidate|5879|(176,)|var|float32
func_5878_call = mutated_mod.get_global_var('func_5878')
call_5880 = func_5878_call(var_5879)
output = call_5880
func_5881 = relay.Function([var_5879], output)
mutated_mod['func_5881'] = func_5881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_5937 = relay.TupleGetItem(func_3451_call(), 0)
call_5938 = relay.TupleGetItem(func_3453_call(), 0)
uop_5940 = relay.asin(call_5937.astype('float32')) # shape=(1, 2, 13)
uop_5942 = relay.asin(call_5938.astype('float32')) # shape=(1, 2, 13)
uop_5949 = relay.log(uop_5940.astype('float32')) # shape=(1, 2, 13)
uop_5951 = relay.log(uop_5942.astype('float32')) # shape=(1, 2, 13)
output = relay.Tuple([uop_5949,])
output2 = relay.Tuple([uop_5951,])
func_5952 = relay.Function([], output)
mod['func_5952'] = func_5952
mod = relay.transform.InferType()(mod)
output = func_5952()
func_5953 = relay.Function([], output)
mutated_mod['func_5953'] = func_5953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3925_call = mod.get_global_var('func_3925')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_5969 = relay.TupleGetItem(func_3925_call(), 0)
call_5970 = relay.TupleGetItem(func_3926_call(), 0)
output = relay.Tuple([call_5969,])
output2 = relay.Tuple([call_5970,])
func_5971 = relay.Function([], output)
mod['func_5971'] = func_5971
mod = relay.transform.InferType()(mod)
mutated_mod['func_5971'] = func_5971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5971_call = mutated_mod.get_global_var('func_5971')
call_5972 = func_5971_call()
output = call_5972
func_5973 = relay.Function([], output)
mutated_mod['func_5973'] = func_5973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4923_call = mod.get_global_var('func_4923')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_6014 = func_4923_call()
call_6015 = func_4923_call()
output = relay.Tuple([call_6014,])
output2 = relay.Tuple([call_6015,])
func_6024 = relay.Function([], output)
mod['func_6024'] = func_6024
mod = relay.transform.InferType()(mod)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6024_call = mutated_mod.get_global_var('func_6024')
call_6025 = func_6024_call()
output = call_6025
func_6026 = relay.Function([], output)
mutated_mod['func_6026'] = func_6026
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6112 = relay.const([[[6.473278,-8.274053,7.985795,-9.283699,2.320675],[-8.896998,5.854824,3.210885,8.549543,-8.419127],[-8.575191,4.820721,-9.441650,-7.984446,7.151622],[3.502934,-8.690458,-9.017750,-6.476310,-9.062562],[-5.359367,-0.028087,1.275591,4.353601,-9.564203],[4.347636,-3.115100,6.446599,-1.693976,-5.992662],[5.692511,-9.127159,2.673193,9.829772,-5.144629],[7.177974,-5.488134,-6.268017,6.925221,9.115223],[1.319810,1.797036,0.686155,9.540470,-3.789410],[-7.079028,4.051678,7.788687,2.464860,-6.886440],[-4.636436,-4.328518,9.801251,-7.641031,-2.571028],[2.998140,-5.635746,2.896746,2.169550,-3.303128]],[[7.987358,7.910943,5.771348,1.393501,2.851189],[-8.069317,-8.993628,4.395158,0.753007,-9.835109],[9.583751,-6.246382,-5.519370,5.064735,-8.940411],[8.265066,-5.907426,-4.576701,-8.302756,-5.823163],[-0.309766,6.004661,6.435955,-9.711175,0.936650],[-1.739885,-4.245167,-0.149167,6.671936,-5.878397],[2.536010,2.166561,-5.339313,-0.485105,1.525999],[9.713173,6.019666,-8.837335,4.120086,-3.559009],[-8.678082,0.888830,0.294994,4.162542,1.452352],[-2.868130,-8.902550,9.935684,8.510085,2.005736],[-2.370842,-5.404272,6.466787,2.018474,-0.714641],[4.313021,-9.850687,4.833660,2.740561,-3.045450]],[[7.957004,2.427924,-1.799319,-1.604531,-7.440347],[2.998891,-3.599873,1.360293,-6.199051,-9.158744],[-0.980735,1.342284,-3.966130,-1.222599,-2.102050],[5.981995,7.681634,8.169095,8.941099,3.751901],[5.421254,-8.610927,3.624471,1.900538,-0.112706],[-9.821436,-4.098276,-0.141851,-5.643382,-8.327355],[9.639222,-4.573383,-0.179586,3.715216,-7.431667],[-7.010272,0.174761,6.110989,-4.573090,-4.249196],[0.946656,7.199340,1.809536,-0.564508,-9.083278],[-4.550743,-0.140095,-7.384328,-5.798726,-1.506964],[-5.591711,-9.849850,-5.545462,-4.421945,-9.683380],[7.409355,4.847848,0.286935,-2.528740,2.689666]],[[-8.560603,3.243455,-9.660355,-1.061152,2.494185],[5.205653,1.364177,3.975435,-0.547441,-6.703628],[-5.167807,-3.862379,-7.234729,-1.660103,1.301432],[3.646984,1.345387,8.963405,-6.565325,-9.651771],[-2.963042,5.491944,9.197362,1.454045,1.444373],[3.776805,-5.055168,2.823171,2.528023,3.218841],[3.234358,6.518844,8.137502,3.443882,-0.986861],[0.875910,7.792697,-9.198165,9.969616,-4.022192],[4.288282,0.109466,5.430689,-5.547176,-0.491732],[-3.098504,-4.143746,5.181402,-8.508263,2.692046],[-9.914393,8.260826,6.141090,3.027753,-2.830191],[9.280216,5.880765,6.032739,-4.783346,3.498952]],[[4.186474,-3.034367,6.142034,-1.682530,-0.263684],[-3.498567,-2.375842,4.136158,3.336229,6.295116],[-3.285974,3.393348,7.818422,2.741717,-6.341841],[-9.507944,-5.947464,8.188192,-7.673982,4.320614],[9.365727,-1.399576,5.927894,-1.029401,-2.259528],[-9.669284,-1.134889,-2.627902,-2.096343,8.167932],[-0.397484,3.091033,8.928132,6.385271,-4.613407],[-2.652239,-3.159765,1.770865,-4.658949,2.074687],[8.916415,-4.872110,4.548564,0.319376,-8.057599],[6.631988,5.415803,1.388074,4.040843,-2.400070],[1.809716,-3.396823,6.093411,5.794688,9.695448],[-6.292295,3.658804,-2.724890,5.472562,-2.803133]],[[9.575278,4.483789,-6.762339,3.354723,6.803835],[6.623742,-4.050121,-1.840487,-6.430188,-8.339994],[-9.587158,-7.108625,4.950510,4.971133,1.407933],[-5.857690,9.591273,6.425334,-4.990159,2.206862],[-2.788565,-2.142976,-9.247978,8.323695,-8.817311],[-6.903836,-4.850789,-5.449456,-9.662256,7.064192],[-8.634944,-9.079186,6.051810,8.203758,-1.918613],[1.999909,-9.717446,7.479282,-9.178208,7.292185],[-9.084559,-8.796836,-0.808136,-1.153146,-3.089947],[-8.285537,9.610420,-2.046107,-2.449777,-9.764786],[-8.260901,-2.943780,1.828575,-9.482863,-1.953218],[2.342504,7.990177,6.693458,-0.634028,-0.239067]],[[8.717916,9.121980,3.849040,2.635208,-0.752451],[-7.782432,5.049831,0.870176,3.269448,6.868422],[8.927390,-4.507916,-7.347082,-2.648437,-6.147952],[9.062122,-3.047863,-4.872767,-4.823189,2.201316],[-4.296106,7.240558,-8.378932,-9.836120,-9.689888],[5.477892,-9.599465,1.481027,-4.196630,-8.598262],[-5.845123,-3.199208,-5.666164,5.892383,6.702202],[8.092999,-9.944837,0.305898,3.098145,-8.042352],[5.434472,7.385753,-2.988392,-8.335317,4.016475],[2.828967,-6.854806,-8.042836,-2.088329,8.055264],[-7.280302,8.338713,-9.886464,-3.011907,8.306199],[9.332719,-9.079409,-0.772748,1.085331,4.360890]],[[6.503858,7.553507,4.857657,6.241410,3.294480],[7.196210,1.902755,-4.432838,6.611719,-3.161635],[-6.363164,-3.762868,-5.926839,7.316051,1.936962],[-4.859423,4.641010,9.757380,1.179054,-1.570396],[1.931894,7.110264,4.559219,-9.814769,-8.369627],[5.319054,4.341174,6.712122,-7.833751,0.863298],[-4.395216,8.840115,3.021524,-3.662257,1.555834],[1.771086,-1.049317,2.207759,2.340195,-4.679538],[-2.143702,-9.304166,5.549357,-0.100027,-7.618261],[-5.942663,7.422543,-8.457710,-8.261438,-6.129614],[7.257553,-8.845363,-9.929838,8.917546,-9.898721],[6.000835,4.683031,-2.248605,7.096303,2.029501]],[[-9.310176,-3.182216,5.263195,0.581037,3.283868],[1.277032,4.187221,-4.049496,9.802240,7.424555],[-9.943791,7.078677,-2.100679,-5.675076,-0.445178],[1.969906,4.548237,-1.929106,-7.179545,-1.507927],[4.979287,9.655913,-1.626227,-0.295383,7.978616],[8.839920,-6.194514,-8.161535,-4.138454,3.100842],[-8.773861,0.957967,-1.333357,-9.791187,5.576724],[6.676525,-5.520646,-6.098361,-7.920375,-7.126609],[-9.826363,9.693214,-6.489053,-2.914566,4.476751],[2.316801,-7.155804,3.689243,3.352584,-1.715601],[5.021787,7.617250,-1.789435,-6.661491,2.467571],[-0.875720,-6.963048,-5.159067,5.303515,5.864470]],[[-3.719303,-6.527672,3.465186,-5.176776,9.036356],[-9.045191,-8.695642,-9.997263,9.448240,5.953844],[-5.887880,-2.885477,-1.961815,3.839619,1.079357],[-2.913380,-2.913805,8.285020,-1.407819,-2.388734],[-6.552530,-1.981768,-9.313541,8.477494,6.523969],[-6.268997,-8.013496,-5.259098,-6.640995,6.957664],[-4.928931,0.271421,-1.348820,9.758233,-2.858220],[3.699085,-5.251859,9.655098,-2.916196,-9.117983],[-6.344164,7.611854,9.443003,1.024504,-8.066210],[-0.999370,-0.470096,2.862610,-0.568404,2.246274],[-9.036636,1.791557,9.558414,5.944475,2.177571],[6.778291,8.710696,-3.429838,7.899667,-9.266537]],[[-4.725018,-2.367248,-0.505773,-6.269501,-7.662181],[-4.837421,-9.273030,9.144604,-5.535733,5.294813],[-7.948491,9.696313,-1.709749,5.264227,8.113772],[1.350896,-1.994643,-3.084719,4.232133,3.060954],[9.887985,-9.763510,3.946540,8.805673,-9.065732],[6.974190,6.937737,-5.515547,-8.704272,0.676363],[8.216249,-9.147448,1.711216,3.801213,9.202788],[-4.586355,-0.164192,-6.949390,5.548043,1.039429],[-8.248042,-1.579544,-0.247640,8.266001,-5.886903],[-9.436284,9.465851,3.575060,-4.399162,5.883378],[1.434034,-8.410986,-3.911467,5.195183,-6.313944],[-6.329997,4.947481,-1.065469,7.468837,4.461217]],[[9.588971,-4.924262,-4.637742,8.739710,-1.090427],[-9.448917,-3.869272,0.885815,2.454993,-1.566640],[4.060364,-8.288252,-3.410264,-6.237669,1.156166],[9.281028,-0.275582,9.916351,-9.048567,8.262552],[-1.036753,-1.600631,-3.166144,6.297812,0.111607],[3.142763,-2.046348,4.161877,-1.811133,3.177831],[9.752575,-4.611810,-9.419431,-4.857021,-5.546617],[2.020496,5.458216,-4.889222,8.715486,2.001112],[3.043214,1.982212,5.316095,-1.558559,1.582127],[0.005277,2.603147,-5.313362,8.474271,-3.081630],[-7.968679,-0.566060,3.738055,2.927523,4.410763],[0.945899,3.361829,-4.136419,-7.525670,-7.080629]],[[-0.156330,-3.623059,-7.197576,6.372078,-5.650920],[5.976191,1.820516,-1.069721,-1.194613,5.670142],[9.179996,4.295920,-0.845925,0.262871,-2.155182],[-2.889449,9.744581,-9.626538,6.562667,8.651603],[0.011177,-7.722580,2.994512,-0.823027,-4.098217],[5.254860,-7.792485,-5.661923,-4.175920,8.300137],[6.794789,-2.890273,0.951909,-7.398986,-8.176587],[-1.450472,5.786559,4.664688,9.932551,-2.559983],[8.107373,8.631393,-8.342583,-3.145149,7.025745],[-7.658580,6.911981,3.594122,0.651661,1.251147],[-2.280767,-1.191354,-8.590317,-8.916758,3.591148],[3.711796,-8.122030,-3.036891,-4.389095,5.287123]],[[6.124986,4.818537,-1.349375,2.427249,-3.726957],[-1.242643,-9.242610,-7.072643,-7.106997,-8.212417],[-6.150406,-7.456679,6.168838,6.935511,-7.877049],[0.330554,-0.772320,-3.995234,-1.670972,6.165626],[5.188984,5.556823,-8.424855,-4.927179,-0.657063],[-4.010045,1.941908,4.601039,4.831435,-2.102145],[5.095567,3.222831,-9.015400,9.773923,5.911119],[-9.434644,-7.873045,-1.713514,8.518083,9.075074],[-0.464270,-8.088576,-8.063317,-7.610374,8.243154],[5.570844,-9.283268,-9.145706,0.098849,3.029913],[-6.939034,8.204489,8.355095,0.853890,-4.272487],[-9.593397,-1.484510,-1.383140,-2.214478,6.921206]],[[-3.225840,2.632772,8.995615,2.914477,0.627333],[-7.138336,-3.708893,-1.128419,7.501865,3.745297],[-3.009060,-6.921841,-6.083419,7.364701,9.761447],[-0.458596,-0.381630,2.792216,-7.330859,-0.520783],[4.335984,7.845794,-4.362930,-4.551416,-5.706002],[4.499760,1.898755,5.379829,2.455420,9.523966],[5.182052,-5.972412,8.482715,-5.501503,-3.167851],[2.743987,2.112534,-7.202985,-8.428844,1.498619],[-2.634360,3.769098,8.220209,1.920120,5.624565],[5.152249,5.119867,-6.819411,8.129224,-9.499376],[0.209305,-1.205556,-2.172361,-4.280886,9.720346],[9.537621,8.688248,6.950643,-7.757137,5.851595]]], dtype = "float64")#candidate|6112|(15, 12, 5)|const|float64
uop_6113 = relay.exp(const_6112.astype('float64')) # shape=(15, 12, 5)
bop_6118 = relay.greater_equal(const_6112.astype('bool'), relay.reshape(uop_6113.astype('bool'), relay.shape_of(const_6112))) # shape=(15, 12, 5)
func_2751_call = mod.get_global_var('func_2751')
func_2756_call = mutated_mod.get_global_var('func_2756')
var_6126 = relay.var("var_6126", dtype = "int32", shape = (252,))#candidate|6126|(252,)|var|int32
const_6127 = relay.const([6.048220,-6.073647,9.860804,-4.258009,8.171073,2.094611,-9.799757,-1.526061,-1.619910,-6.525631,-4.307725,-4.414631,5.966121,9.480574,-7.460760,-4.173080,3.458782,7.353895,4.533296,-0.533108,5.715688,1.401026,8.597029,6.833532,-8.617069,-8.788461,-7.134169,0.780925,8.483614,4.757804,8.165597,-2.175005,-5.351033,4.853696,0.029099,-5.264509,1.373004,-3.628634,6.402891,8.251052,5.701558,-9.552586,-3.557467,9.210074,-8.993093,2.009084,-7.370727,0.638287,-5.755838,0.079365,-7.999783,-9.097213,6.567756,-9.988923,-0.602439,-0.676680,7.484640,-8.167896,-2.692964,-5.430909,-5.909717,4.925259,7.189445,1.544072,2.420117,9.523641,-0.064144,-8.540440,7.285024,-8.120186], dtype = "float64")#candidate|6127|(70,)|const|float64
call_6125 = relay.TupleGetItem(func_2751_call(relay.reshape(var_6126.astype('int32'), [252,]), relay.reshape(const_6127.astype('float64'), [2, 7, 5]), relay.reshape(const_6127.astype('float32'), [2, 7, 5]), ), 0)
call_6128 = relay.TupleGetItem(func_2756_call(relay.reshape(var_6126.astype('int32'), [252,]), relay.reshape(const_6127.astype('float64'), [2, 7, 5]), relay.reshape(const_6127.astype('float32'), [2, 7, 5]), ), 0)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_6130 = func_1115_call(relay.reshape(var_6126.astype('int32'), [6, 14, 3]), relay.reshape(call_6125.astype('int32'), [6, 14, 3]), )
call_6131 = func_1115_call(relay.reshape(var_6126.astype('int32'), [6, 14, 3]), relay.reshape(call_6125.astype('int32'), [6, 14, 3]), )
bop_6132 = relay.greater_equal(call_6130.astype('bool'), relay.reshape(var_6126.astype('bool'), relay.shape_of(call_6130))) # shape=(6, 14, 3)
bop_6135 = relay.greater_equal(call_6131.astype('bool'), relay.reshape(var_6126.astype('bool'), relay.shape_of(call_6131))) # shape=(6, 14, 3)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_6140 = func_1115_call(relay.reshape(var_6126.astype('int32'), [6, 14, 3]), relay.reshape(call_6130.astype('int32'), [6, 14, 3]), )
call_6141 = func_1115_call(relay.reshape(var_6126.astype('int32'), [6, 14, 3]), relay.reshape(call_6130.astype('int32'), [6, 14, 3]), )
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_6154 = func_3172_call()
call_6155 = func_3172_call()
func_4081_call = mod.get_global_var('func_4081')
func_4083_call = mutated_mod.get_global_var('func_4083')
call_6161 = relay.TupleGetItem(func_4081_call(), 0)
call_6162 = relay.TupleGetItem(func_4083_call(), 0)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_6163 = func_5611_call()
call_6164 = func_5611_call()
uop_6167 = relay.sin(uop_6113.astype('float32')) # shape=(15, 12, 5)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_6181 = relay.TupleGetItem(func_5463_call(), 0)
call_6182 = relay.TupleGetItem(func_5464_call(), 0)
func_2584_call = mod.get_global_var('func_2584')
func_2587_call = mutated_mod.get_global_var('func_2587')
const_6190 = relay.const([-1.771775,2.400280,2.532754,-5.301230,-6.201698,7.684716,-8.898941,0.669474,5.262987,4.945176,-1.510815,0.141598,3.189316,-1.589222,4.791754,7.146077,-9.781582,-8.612719,-8.069652,5.184884,-5.014757,6.248768,3.347426,-6.168066,-6.898162,-2.593017], dtype = "float32")#candidate|6190|(26,)|const|float32
call_6189 = relay.TupleGetItem(func_2584_call(relay.reshape(const_6190.astype('float32'), [26,])), 3)
call_6191 = relay.TupleGetItem(func_2587_call(relay.reshape(const_6190.astype('float32'), [26,])), 3)
func_3976_call = mod.get_global_var('func_3976')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_6194 = relay.TupleGetItem(func_3976_call(), 0)
call_6195 = relay.TupleGetItem(func_3978_call(), 0)
output = relay.Tuple([bop_6118,call_6125,const_6127,bop_6132,call_6140,call_6154,call_6161,call_6163,uop_6167,call_6181,call_6189,const_6190,call_6194,])
output2 = relay.Tuple([bop_6118,call_6128,const_6127,bop_6135,call_6141,call_6155,call_6162,call_6164,uop_6167,call_6182,call_6191,const_6190,call_6195,])
func_6196 = relay.Function([var_6126,], output)
mod['func_6196'] = func_6196
mod = relay.transform.InferType()(mod)
var_6197 = relay.var("var_6197", dtype = "int32", shape = (252,))#candidate|6197|(252,)|var|int32
output = func_6196(var_6197)
func_6198 = relay.Function([var_6197], output)
mutated_mod['func_6198'] = func_6198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3678_call = mod.get_global_var('func_3678')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_6203 = func_3678_call()
call_6204 = func_3678_call()
func_5745_call = mod.get_global_var('func_5745')
func_5748_call = mutated_mod.get_global_var('func_5748')
var_6218 = relay.var("var_6218", dtype = "float64", shape = (1, 2002))#candidate|6218|(1, 2002)|var|float64
const_6219 = relay.const([-7,7,-10,9,-1,5,-4,-4,-10,5,7,8,3,4,7,6,-10,7,-7,3,-5,-3,1,-9,-10,-8,-8,-4,-8,-8,10,9,9,1,2,-6,-4,-5,-4,-7,9,-3,6,9,6,9,1,7,5,6,1,4,10,-2,6,-1,7,-3,1,-6,-1,-2,-4,2,6,7,-1,5,-2,8,-6,-2,-2,7,9,10,-8,-2,-3,2,-6,9,9,1,-2,-9,7,-3,-8,-2,-4,7,-7,4,3,1,4,9,5,5,8,-8,-7,3,1,-2,-8,-9,-8,-6,1,-2,-7,-10,-10,10,1,4,8,3,3,-8,-4,7,-2,-3,-10,9,6,10,4,-6,9,-5,7,10,-3,4,-7,-9,6,3,-7,-3,-2,10,4,-3,8,-4,5,-9,-4,4,-6,10,5,5,-6,6,1,3,6,2,3,-10,-10,7,-2,5,3,9,7,-1,-4,10,-7,-3,-9,6,1,-2,-7,-4,9,-6,-3,10,10,-4,10,-2,-6,-9,-1,1,-3,2,-10,-8,6,-1,10,2,3,-8,1,-8,-6,4,-2,-1,7,-4,2,8,-5,-10,2,-8,-7,8,6,-4,4,2,-4,2,10,10,5,3,-9,-6,-2,-6,1,-6,-1,-9,-10,-3,-8,6,1,2,-8,-8,6,9,-10,-9], dtype = "int32")#candidate|6219|(252,)|const|int32
call_6217 = relay.TupleGetItem(func_5745_call(relay.reshape(var_6218.astype('float64'), [13, 11, 14]), relay.reshape(const_6219.astype('int32'), [6, 42]), ), 5)
call_6220 = relay.TupleGetItem(func_5748_call(relay.reshape(var_6218.astype('float64'), [13, 11, 14]), relay.reshape(const_6219.astype('int32'), [6, 42]), ), 5)
output = relay.Tuple([call_6203,call_6217,var_6218,const_6219,])
output2 = relay.Tuple([call_6204,call_6220,var_6218,const_6219,])
func_6226 = relay.Function([var_6218,], output)
mod['func_6226'] = func_6226
mod = relay.transform.InferType()(mod)
mutated_mod['func_6226'] = func_6226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6227 = relay.var("var_6227", dtype = "float64", shape = (1, 2002))#candidate|6227|(1, 2002)|var|float64
func_6226_call = mutated_mod.get_global_var('func_6226')
call_6228 = func_6226_call(var_6227)
output = call_6228
func_6229 = relay.Function([var_6227], output)
mutated_mod['func_6229'] = func_6229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6024_call = mod.get_global_var('func_6024')
func_6026_call = mutated_mod.get_global_var('func_6026')
call_6251 = relay.TupleGetItem(func_6024_call(), 0)
call_6252 = relay.TupleGetItem(func_6026_call(), 0)
func_4366_call = mod.get_global_var('func_4366')
func_4368_call = mutated_mod.get_global_var('func_4368')
var_6288 = relay.var("var_6288", dtype = "int32", shape = (252,))#candidate|6288|(252,)|var|int32
call_6287 = relay.TupleGetItem(func_4366_call(relay.reshape(var_6288.astype('int32'), [252,])), 1)
call_6289 = relay.TupleGetItem(func_4368_call(relay.reshape(var_6288.astype('int32'), [252,])), 1)
uop_6292 = relay.log2(call_6287.astype('float64')) # shape=(6, 14, 3)
uop_6294 = relay.log2(call_6289.astype('float64')) # shape=(6, 14, 3)
func_663_call = mod.get_global_var('func_663')
func_666_call = mutated_mod.get_global_var('func_666')
var_6303 = relay.var("var_6303", dtype = "int32", shape = (288,))#candidate|6303|(288,)|var|int32
call_6302 = func_663_call(relay.reshape(var_6303.astype('int32'), [4, 6, 12]), relay.reshape(var_6303.astype('int32'), [4, 6, 12]), )
call_6304 = func_663_call(relay.reshape(var_6303.astype('int32'), [4, 6, 12]), relay.reshape(var_6303.astype('int32'), [4, 6, 12]), )
output = relay.Tuple([call_6251,var_6288,uop_6292,call_6302,var_6303,])
output2 = relay.Tuple([call_6252,var_6288,uop_6294,call_6304,var_6303,])
func_6312 = relay.Function([var_6288,var_6303,], output)
mod['func_6312'] = func_6312
mod = relay.transform.InferType()(mod)
mutated_mod['func_6312'] = func_6312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6312_call = mutated_mod.get_global_var('func_6312')
var_6314 = relay.var("var_6314", dtype = "int32", shape = (252,))#candidate|6314|(252,)|var|int32
var_6315 = relay.var("var_6315", dtype = "int32", shape = (288,))#candidate|6315|(288,)|var|int32
call_6313 = func_6312_call(var_6314,var_6315,)
output = call_6313
func_6316 = relay.Function([var_6314,var_6315,], output)
mutated_mod['func_6316'] = func_6316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_6335 = func_5611_call()
call_6336 = func_5611_call()
func_2584_call = mod.get_global_var('func_2584')
func_2587_call = mutated_mod.get_global_var('func_2587')
const_6352 = relay.const([-3.875269,-6.152452,-4.144230,-9.168154,5.137471,4.808847,-0.972439,9.515993,0.141479,9.147185,-4.249501,0.609043,-2.620993,8.569194,-8.851353,-8.419184,8.984321,-6.449264,-5.105632,3.337164,-7.977864,0.705094,-7.715915,1.715282,-9.928097,6.564336], dtype = "float32")#candidate|6352|(26,)|const|float32
call_6351 = relay.TupleGetItem(func_2584_call(relay.reshape(const_6352.astype('float32'), [26,])), 3)
call_6353 = relay.TupleGetItem(func_2587_call(relay.reshape(const_6352.astype('float32'), [26,])), 3)
func_3103_call = mod.get_global_var('func_3103')
func_3105_call = mutated_mod.get_global_var('func_3105')
const_6360 = relay.const([-6,-2,9,7,5,-1,7,8,-9,1,4,-2,4,9,2,4,10,6,-5,-3,-6,7,-4,-5,-3,-2,-4,8,-4,6,8,-4,5,-10,-5,-1,7,-2,2,-4,4,3,-10,8,1,10,1,8,3,6,-10,9,-4,8,10,2,10,2,10,4,3,9,-5,1,4,6,-6,-3,7,8,-7,-9,-10,9,-10,-9,6,-8,6,10,1,-6,-4,9,2,9,10,6,-9,-9,-9,-4,8,-7,5,6,5,5,1,-1,5,-2,-9,6,5,-9,-6,9,-8,10,-6,-1,8,-2,-2,-4,4,4,6,3,3,-8,-6,-3,-3,-8,-9,10,5,-8,5,-5,-10,4,9,7,-9,1,2,-10,8,4,6,-7,-5,1,-9,-3,-7,4,2,8,-8,7,-6,5,-4,3,4,-3,7,3,10,4,2,-3,-1,6,-3,-9,1,-3,6,4,-8,-1,1,-10,7,-2,3,-3,-8,6,-5,10,-3,-8,-1,-9,1,3,-1,7,-8,-8,4,-7,-4,6,10,-3,1,9,6,-10,-5,1,3,-5,6,-3,-7,-5,-3,-10,8,-5,-7,-10,2,9,10,-5,-7,5,-6,-6,-1,5,1,-9,9,8,8,-8,-8,8,-9,3,3,-1,-8,-1,-5,5,4,-5,-5,8,8,4,2,-4,-2,7,8,-4,5,7,4,8,-3,-10,3,-4,3,-7,-9,-8,-1,-6,-4,-5,-8,1,-4,1,-9,8,10,-2,-1,9,-3,10,-1,3], dtype = "int32")#candidate|6360|(288,)|const|int32
call_6359 = relay.TupleGetItem(func_3103_call(relay.reshape(const_6360.astype('int32'), [4, 72])), 5)
call_6361 = relay.TupleGetItem(func_3105_call(relay.reshape(const_6360.astype('int32'), [4, 72])), 5)
output = relay.Tuple([call_6335,call_6351,const_6352,call_6359,const_6360,])
output2 = relay.Tuple([call_6336,call_6353,const_6352,call_6361,const_6360,])
func_6364 = relay.Function([], output)
mod['func_6364'] = func_6364
mod = relay.transform.InferType()(mod)
mutated_mod['func_6364'] = func_6364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6364_call = mutated_mod.get_global_var('func_6364')
call_6365 = func_6364_call()
output = call_6365
func_6366 = relay.Function([], output)
mutated_mod['func_6366'] = func_6366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_6373 = func_2784_call()
call_6374 = func_2784_call()
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_6393 = relay.TupleGetItem(func_2382_call(), 0)
call_6394 = relay.TupleGetItem(func_2384_call(), 0)
func_3103_call = mod.get_global_var('func_3103')
func_3105_call = mutated_mod.get_global_var('func_3105')
var_6396 = relay.var("var_6396", dtype = "int32", shape = (288,))#candidate|6396|(288,)|var|int32
call_6395 = relay.TupleGetItem(func_3103_call(relay.reshape(var_6396.astype('int32'), [4, 72])), 5)
call_6397 = relay.TupleGetItem(func_3105_call(relay.reshape(var_6396.astype('int32'), [4, 72])), 5)
func_6024_call = mod.get_global_var('func_6024')
func_6026_call = mutated_mod.get_global_var('func_6026')
call_6402 = relay.TupleGetItem(func_6024_call(), 0)
call_6403 = relay.TupleGetItem(func_6026_call(), 0)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_6406 = relay.TupleGetItem(func_2866_call(), 0)
call_6407 = relay.TupleGetItem(func_2868_call(), 0)
output = relay.Tuple([call_6373,call_6393,call_6395,var_6396,call_6402,call_6406,])
output2 = relay.Tuple([call_6374,call_6394,call_6397,var_6396,call_6403,call_6407,])
func_6412 = relay.Function([var_6396,], output)
mod['func_6412'] = func_6412
mod = relay.transform.InferType()(mod)
mutated_mod['func_6412'] = func_6412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6413 = relay.var("var_6413", dtype = "int32", shape = (288,))#candidate|6413|(288,)|var|int32
func_6412_call = mutated_mod.get_global_var('func_6412')
call_6414 = func_6412_call(var_6413)
output = call_6414
func_6415 = relay.Function([var_6413], output)
mutated_mod['func_6415'] = func_6415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_6456 = relay.TupleGetItem(func_2456_call(), 3)
call_6457 = relay.TupleGetItem(func_2457_call(), 3)
uop_6458 = relay.sqrt(call_6456.astype('float64')) # shape=(10, 9, 5)
uop_6460 = relay.sqrt(call_6457.astype('float64')) # shape=(10, 9, 5)
uop_6467 = relay.acos(call_6456.astype('float32')) # shape=(10, 9, 5)
uop_6469 = relay.acos(call_6457.astype('float32')) # shape=(10, 9, 5)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_6479 = func_3172_call()
call_6480 = func_3172_call()
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_6510 = func_4420_call()
call_6511 = func_4420_call()
output = relay.Tuple([uop_6458,uop_6467,call_6479,call_6510,])
output2 = relay.Tuple([uop_6460,uop_6469,call_6480,call_6511,])
func_6512 = relay.Function([], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mutated_mod.get_global_var('func_6512')
call_6513 = func_6512_call()
output = call_6513
func_6514 = relay.Function([], output)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_6517 = func_5611_call()
call_6518 = func_5611_call()
const_6541 = relay.const([[[-1.027310,7.076861,4.260851,-1.974976,-4.471360],[-4.594378,-8.527287,9.685467,-3.856803,6.260415],[-0.198652,7.739989,-3.760987,-4.285559,-2.743464],[5.385637,-2.581065,-5.347576,0.610660,6.244629],[-4.873321,-1.320371,9.686032,-0.143778,-9.627021],[-3.399431,-3.489745,5.908174,0.850527,5.842167],[0.562778,-1.577971,-2.154671,9.780566,9.877822]],[[3.380424,-9.678832,-9.083532,8.200309,9.842594],[-3.543349,-6.720179,-3.243361,-9.160346,3.495998],[6.338270,-4.627266,9.797303,2.043292,2.994734],[3.436980,-8.938301,-9.612499,5.425227,8.758708],[3.344940,7.218908,-7.503010,8.509445,3.305919],[5.886191,-9.056134,7.507925,-7.180702,-4.217770],[2.858658,-0.730137,-9.879373,2.691604,-8.616141]]], dtype = "float64")#candidate|6541|(2, 7, 5)|const|float64
bop_6542 = relay.logical_or(call_6517.astype('bool'), relay.reshape(const_6541.astype('bool'), relay.shape_of(call_6517))) # shape=(2, 7, 5)
bop_6545 = relay.logical_or(call_6518.astype('bool'), relay.reshape(const_6541.astype('bool'), relay.shape_of(call_6518))) # shape=(2, 7, 5)
uop_6547 = relay.rsqrt(const_6541.astype('float32')) # shape=(2, 7, 5)
func_663_call = mod.get_global_var('func_663')
func_666_call = mutated_mod.get_global_var('func_666')
const_6558 = relay.const([5,4,-9,2,-1,1,-10,10,-4,9,1,-9,3,-10,5,6,7,6,6,-9,10,9,-6,1,-8,-5,-4,9,8,8,9,5,-3,-1,-10,7,10,-2,-5,-8,3,1,10,5,-9,3,-6,-3,-1,9,5,-3,-2,-3,8,-9,7,-10,-1,-6,7,-10,10,-9,8,-2,4,9,-10,2,-4,-3,-2,-7,-8,-5,4,6,-9,-5,-5,-3,2,-2,2,2,-6,6,-8,2,8,10,3,6,-3,10,-5,6,2,-10,3,-2,-7,-6,3,-2,7,3,-10,-1,-7,10,3,9,-3,2,3,4,4,6,9,-8,-1,-8,7,3,-10,8,-8,-9,-8,-6,4,-2,1,-6,7,9,-5,9,6,-8,5,-10,-4,6,9,-4,4,-3,-5,9,5,10,-7,-3,-2,-1,-10,-2,9,8,-1,-5,8,4,-9,5,-3,5,5,2,1,-4,4,5,5,-5,6,5,-8,-5,-4,-10,-5,-6,2,-8,3,6,-10,-3,6,5,-6,6,-1,-10,1,-1,-2,9,-7,9,-10,7,7,7,6,5,-2,7,-4,-6,6,3,6,-3,8,-1,10,8,-6,1,7,-7,1,-2,-2,9,-8,7,4,-5,6,3,-3,-3,6,-4,-4,-1,4,7,4,5,8,-7,6,7,7,-7,-10,1,4,10,6,-2,-7,-10,5,-4,-9,-7,3,4,5,2,2,5,1,-6,7,1,5,6,7,4,10,-9,-9,-5,-6,4,-2,-4,2,-2], dtype = "int32")#candidate|6558|(288,)|const|int32
call_6557 = func_663_call(relay.reshape(const_6558.astype('int32'), [4, 6, 12]), relay.reshape(const_6558.astype('int32'), [4, 6, 12]), )
call_6559 = func_663_call(relay.reshape(const_6558.astype('int32'), [4, 6, 12]), relay.reshape(const_6558.astype('int32'), [4, 6, 12]), )
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_6565 = func_3172_call()
call_6566 = func_3172_call()
func_6364_call = mod.get_global_var('func_6364')
func_6366_call = mutated_mod.get_global_var('func_6366')
call_6572 = relay.TupleGetItem(func_6364_call(), 4)
call_6573 = relay.TupleGetItem(func_6366_call(), 4)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
var_6576 = relay.var("var_6576", dtype = "int32", shape = (252,))#candidate|6576|(252,)|var|int32
call_6575 = relay.TupleGetItem(func_2615_call(relay.reshape(var_6576.astype('int32'), [252,])), 0)
call_6577 = relay.TupleGetItem(func_2617_call(relay.reshape(var_6576.astype('int32'), [252,])), 0)
output = relay.Tuple([bop_6542,uop_6547,call_6557,const_6558,call_6565,call_6572,call_6575,var_6576,])
output2 = relay.Tuple([bop_6545,uop_6547,call_6559,const_6558,call_6566,call_6573,call_6577,var_6576,])
func_6578 = relay.Function([var_6576,], output)
mod['func_6578'] = func_6578
mod = relay.transform.InferType()(mod)
mutated_mod['func_6578'] = func_6578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6579 = relay.var("var_6579", dtype = "int32", shape = (252,))#candidate|6579|(252,)|var|int32
func_6578_call = mutated_mod.get_global_var('func_6578')
call_6580 = func_6578_call(var_6579)
output = call_6580
func_6581 = relay.Function([var_6579], output)
mutated_mod['func_6581'] = func_6581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3164_call = mod.get_global_var('func_3164')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_6648 = func_3164_call()
call_6649 = func_3164_call()
func_6412_call = mod.get_global_var('func_6412')
func_6415_call = mutated_mod.get_global_var('func_6415')
var_6668 = relay.var("var_6668", dtype = "int32", shape = (144, 2))#candidate|6668|(144, 2)|var|int32
call_6667 = relay.TupleGetItem(func_6412_call(relay.reshape(var_6668.astype('int32'), [288,])), 5)
call_6669 = relay.TupleGetItem(func_6415_call(relay.reshape(var_6668.astype('int32'), [288,])), 5)
output = relay.Tuple([call_6648,call_6667,var_6668,])
output2 = relay.Tuple([call_6649,call_6669,var_6668,])
func_6704 = relay.Function([var_6668,], output)
mod['func_6704'] = func_6704
mod = relay.transform.InferType()(mod)
var_6705 = relay.var("var_6705", dtype = "int32", shape = (144, 2))#candidate|6705|(144, 2)|var|int32
output = func_6704(var_6705)
func_6706 = relay.Function([var_6705], output)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5289_call = mod.get_global_var('func_5289')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_6717 = relay.TupleGetItem(func_5289_call(), 0)
call_6718 = relay.TupleGetItem(func_5290_call(), 0)
func_3769_call = mod.get_global_var('func_3769')
func_3773_call = mutated_mod.get_global_var('func_3773')
const_6720 = relay.const([8,2,4,1,-3,-10,9,3,-1,9,7,4,-6,2,1,-1,5,-6,-1,10,-1,9,8,-7,2,-8,-3,-8,-1,6,2,-10,1,6,4,-7,6,7,7,-5,-10,-8,9,-2,8,2,-5,7,-10,-1,-2,-1,4,4,-10,10,4,-2,6,3,2,-4,-2,7,7,-6,6,-7,5,-2,10,4,-2,7,10,1,-9,-9,7,3,-3,1,8,10,9,6,-3,-5,9,-4,6,-9,2,6,-5,3,7,7,-4,-7,-8,4,7,6,-3,-3,6,4,3,9,-6,-5,-8,8,-9,5,-10,-7,-8,1], dtype = "int32")#candidate|6720|(120,)|const|int32
const_6721 = relay.const([2,3,9,1,-8,-1,-2,-9,3,10,-4,7,-7,3,9,-1,3,4,8,9,-8,6,5,5,-9,-7,3,-6,5,4,-5,-6,-1,-2,6,2,-4,-6,-4,-9,5,-9,-8,-3,-4,8,2,-10,4,1,-5,-6,3,-2,-4,-1,4,1,7,-8,1,-10,2,7,4,-8,10,10,7,-10,2,9,-3,10,4,-1,-4,1,3,-1,-5,7,-2,-7,-8,9,-8,6,1,-3,3,-2,-7,2,1,8,-2,-1,2,5,-5,-2,5,4,5,10,3,5,-5,1,-2,-3,-2,1,2,-3,-2,-10,2,-10,-1,-7,10,-4,10,-4,4,9,4,9,-7,1,-9,4,-4,10,-3,-2,8,-2,3,3,5], dtype = "int16")#candidate|6721|(143,)|const|int16
call_6719 = relay.TupleGetItem(func_3769_call(relay.reshape(const_6720.astype('int32'), [12, 5, 2]), relay.reshape(const_6720.astype('int32'), [12, 5, 2]), relay.reshape(const_6721.astype('int16'), [143,]), ), 0)
call_6722 = relay.TupleGetItem(func_3773_call(relay.reshape(const_6720.astype('int32'), [12, 5, 2]), relay.reshape(const_6720.astype('int32'), [12, 5, 2]), relay.reshape(const_6721.astype('int16'), [143,]), ), 0)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_6726 = relay.TupleGetItem(func_3451_call(), 0)
call_6727 = relay.TupleGetItem(func_3453_call(), 0)
func_5391_call = mod.get_global_var('func_5391')
func_5395_call = mutated_mod.get_global_var('func_5395')
var_6739 = relay.var("var_6739", dtype = "float32", shape = ())#candidate|6739|()|var|float32
var_6740 = relay.var("var_6740", dtype = "float32", shape = (32, 64))#candidate|6740|(32, 64)|var|float32
call_6738 = relay.TupleGetItem(func_5391_call(relay.reshape(var_6739.astype('float32'), []), relay.reshape(var_6740.astype('float32'), [8, 16, 16]), ), 3)
call_6741 = relay.TupleGetItem(func_5395_call(relay.reshape(var_6739.astype('float32'), []), relay.reshape(var_6740.astype('float32'), [8, 16, 16]), ), 3)
bop_6745 = relay.less_equal(var_6739.astype('bool'), var_6740.astype('bool')) # shape=(32, 64)
uop_6748 = relay.sqrt(call_6719.astype('float32')) # shape=(12, 5, 2)
uop_6750 = relay.sqrt(call_6722.astype('float32')) # shape=(12, 5, 2)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_6751 = func_3172_call()
call_6752 = func_3172_call()
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_6758 = func_2204_call()
call_6759 = func_2204_call()
output = relay.Tuple([call_6717,const_6720,const_6721,call_6726,call_6738,bop_6745,uop_6748,call_6751,call_6758,])
output2 = relay.Tuple([call_6718,const_6720,const_6721,call_6727,call_6741,bop_6745,uop_6750,call_6752,call_6759,])
func_6784 = relay.Function([var_6739,var_6740,], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
var_6785 = relay.var("var_6785", dtype = "float32", shape = ())#candidate|6785|()|var|float32
var_6786 = relay.var("var_6786", dtype = "float32", shape = (32, 64))#candidate|6786|(32, 64)|var|float32
output = func_6784(var_6785,var_6786,)
func_6787 = relay.Function([var_6785,var_6786,], output)
mutated_mod['func_6787'] = func_6787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5773_call = mod.get_global_var('func_5773')
func_5775_call = mutated_mod.get_global_var('func_5775')
call_6805 = relay.TupleGetItem(func_5773_call(), 1)
call_6806 = relay.TupleGetItem(func_5775_call(), 1)
func_3164_call = mod.get_global_var('func_3164')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_6812 = func_3164_call()
call_6813 = func_3164_call()
func_3424_call = mod.get_global_var('func_3424')
func_3428_call = mutated_mod.get_global_var('func_3428')
var_6817 = relay.var("var_6817", dtype = "float32", shape = (1536,))#candidate|6817|(1536,)|var|float32
const_6818 = relay.const([3.092180,-8.872856,-6.794397,8.330555,-9.069071,-0.901590,8.497639,4.710897,-2.045345,-9.682314,-4.888239,-9.851832,1.746496,-9.432375,7.285070,-6.074968,2.095447,7.486732,8.577192,-2.292686,4.666210,1.260259,-3.957216,-1.076931,5.687474,0.509658], dtype = "float32")#candidate|6818|(26,)|const|float32
call_6816 = relay.TupleGetItem(func_3424_call(relay.reshape(var_6817.astype('float32'), [1, 1536]), relay.reshape(const_6818.astype('float32'), [26,]), ), 4)
call_6819 = relay.TupleGetItem(func_3428_call(relay.reshape(var_6817.astype('float32'), [1, 1536]), relay.reshape(const_6818.astype('float32'), [26,]), ), 4)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_6827 = relay.TupleGetItem(func_2382_call(), 0)
call_6828 = relay.TupleGetItem(func_2384_call(), 0)
output = relay.Tuple([call_6805,call_6812,call_6816,var_6817,const_6818,call_6827,])
output2 = relay.Tuple([call_6806,call_6813,call_6819,var_6817,const_6818,call_6828,])
func_6846 = relay.Function([var_6817,], output)
mod['func_6846'] = func_6846
mod = relay.transform.InferType()(mod)
mutated_mod['func_6846'] = func_6846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6847 = relay.var("var_6847", dtype = "float32", shape = (1536,))#candidate|6847|(1536,)|var|float32
func_6846_call = mutated_mod.get_global_var('func_6846')
call_6848 = func_6846_call(var_6847)
output = call_6848
func_6849 = relay.Function([var_6847], output)
mutated_mod['func_6849'] = func_6849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_6887 = relay.TupleGetItem(func_2153_call(), 0)
call_6888 = relay.TupleGetItem(func_2154_call(), 0)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_6890 = func_5611_call()
call_6891 = func_5611_call()
uop_6900 = relay.log(call_6890.astype('float64')) # shape=(2, 7, 5)
uop_6902 = relay.log(call_6891.astype('float64')) # shape=(2, 7, 5)
func_2317_call = mod.get_global_var('func_2317')
func_2320_call = mutated_mod.get_global_var('func_2320')
var_6907 = relay.var("var_6907", dtype = "float32", shape = (1536,))#candidate|6907|(1536,)|var|float32
var_6908 = relay.var("var_6908", dtype = "float32", shape = (26,))#candidate|6908|(26,)|var|float32
call_6906 = relay.TupleGetItem(func_2317_call(relay.reshape(var_6907.astype('float32'), [16, 12, 8]), relay.reshape(var_6908.astype('float32'), [26, 1]), ), 0)
call_6909 = relay.TupleGetItem(func_2320_call(relay.reshape(var_6907.astype('float32'), [16, 12, 8]), relay.reshape(var_6908.astype('float32'), [26, 1]), ), 0)
output = relay.Tuple([call_6887,uop_6900,call_6906,var_6907,var_6908,])
output2 = relay.Tuple([call_6888,uop_6902,call_6909,var_6907,var_6908,])
func_6912 = relay.Function([var_6907,var_6908,], output)
mod['func_6912'] = func_6912
mod = relay.transform.InferType()(mod)
mutated_mod['func_6912'] = func_6912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6912_call = mutated_mod.get_global_var('func_6912')
var_6914 = relay.var("var_6914", dtype = "float32", shape = (1536,))#candidate|6914|(1536,)|var|float32
var_6915 = relay.var("var_6915", dtype = "float32", shape = (26,))#candidate|6915|(26,)|var|float32
call_6913 = func_6912_call(var_6914,var_6915,)
output = call_6913
func_6916 = relay.Function([var_6914,var_6915,], output)
mutated_mod['func_6916'] = func_6916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_6929 = relay.TupleGetItem(func_3578_call(), 0)
call_6930 = relay.TupleGetItem(func_3579_call(), 0)
const_6951 = relay.const([[[-7.786992,-0.692224,-3.039013,-0.043532,0.054668],[-3.080637,1.674318,9.757399,9.801767,4.596091],[-7.157874,9.792512,-9.547215,-2.991518,0.560670],[-9.995889,5.566479,3.869753,6.586670,6.857849],[-2.031510,-9.053636,6.470062,2.900928,-8.889833],[-5.534032,-3.334430,3.438296,5.735772,1.863088],[3.626332,-4.136251,2.480424,-4.530709,4.831326]],[[8.916172,-3.245107,0.914319,5.576249,-1.499218],[5.742495,-6.455674,-6.261539,-8.968077,8.893440],[-5.260957,3.539919,7.010131,-3.718431,-8.533554],[8.308730,-1.955892,7.646497,8.011662,-3.398855],[2.626966,5.727883,-6.913695,2.251702,0.463486],[-1.309265,5.230423,-6.100306,-6.784598,7.364201],[-0.808414,-1.667837,-2.263973,-6.266370,-7.056149]]], dtype = "float64")#candidate|6951|(2, 7, 5)|const|float64
bop_6952 = relay.subtract(call_6929.astype('uint64'), relay.reshape(const_6951.astype('uint64'), relay.shape_of(call_6929))) # shape=(2, 7, 5)
bop_6955 = relay.subtract(call_6930.astype('uint64'), relay.reshape(const_6951.astype('uint64'), relay.shape_of(call_6930))) # shape=(2, 7, 5)
output = relay.Tuple([bop_6952,])
output2 = relay.Tuple([bop_6955,])
func_6958 = relay.Function([], output)
mod['func_6958'] = func_6958
mod = relay.transform.InferType()(mod)
output = func_6958()
func_6959 = relay.Function([], output)
mutated_mod['func_6959'] = func_6959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mod.get_global_var('func_2826')
func_2828_call = mutated_mod.get_global_var('func_2828')
call_6963 = func_2826_call()
call_6964 = func_2826_call()
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_6979 = relay.TupleGetItem(func_5141_call(), 1)
call_6980 = relay.TupleGetItem(func_5142_call(), 1)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
var_6988 = relay.var("var_6988", dtype = "int32", shape = (252,))#candidate|6988|(252,)|var|int32
call_6987 = func_1115_call(relay.reshape(var_6988.astype('int32'), [6, 14, 3]), relay.reshape(var_6988.astype('int32'), [6, 14, 3]), )
call_6989 = func_1115_call(relay.reshape(var_6988.astype('int32'), [6, 14, 3]), relay.reshape(var_6988.astype('int32'), [6, 14, 3]), )
uop_7034 = relay.sqrt(call_6979.astype('float64')) # shape=(143,)
uop_7036 = relay.sqrt(call_6980.astype('float64')) # shape=(143,)
output = relay.Tuple([call_6963,call_6987,var_6988,uop_7034,])
output2 = relay.Tuple([call_6964,call_6989,var_6988,uop_7036,])
func_7037 = relay.Function([var_6988,], output)
mod['func_7037'] = func_7037
mod = relay.transform.InferType()(mod)
var_7038 = relay.var("var_7038", dtype = "int32", shape = (252,))#candidate|7038|(252,)|var|int32
output = func_7037(var_7038)
func_7039 = relay.Function([var_7038], output)
mutated_mod['func_7039'] = func_7039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6958_call = mod.get_global_var('func_6958')
func_6959_call = mutated_mod.get_global_var('func_6959')
call_7076 = relay.TupleGetItem(func_6958_call(), 0)
call_7077 = relay.TupleGetItem(func_6959_call(), 0)
output = call_7076
output2 = call_7077
func_7079 = relay.Function([], output)
mod['func_7079'] = func_7079
mod = relay.transform.InferType()(mod)
output = func_7079()
func_7080 = relay.Function([], output)
mutated_mod['func_7080'] = func_7080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_7096 = relay.TupleGetItem(func_3267_call(), 3)
call_7097 = relay.TupleGetItem(func_3269_call(), 3)
output = call_7096
output2 = call_7097
func_7109 = relay.Function([], output)
mod['func_7109'] = func_7109
mod = relay.transform.InferType()(mod)
output = func_7109()
func_7110 = relay.Function([], output)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3886_call = mod.get_global_var('func_3886')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_7114 = relay.TupleGetItem(func_3886_call(), 0)
call_7115 = relay.TupleGetItem(func_3888_call(), 0)
output = call_7114
output2 = call_7115
func_7124 = relay.Function([], output)
mod['func_7124'] = func_7124
mod = relay.transform.InferType()(mod)
mutated_mod['func_7124'] = func_7124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mutated_mod.get_global_var('func_7124')
call_7125 = func_7124_call()
output = call_7125
func_7126 = relay.Function([], output)
mutated_mod['func_7126'] = func_7126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5651_call = mod.get_global_var('func_5651')
func_5653_call = mutated_mod.get_global_var('func_5653')
call_7179 = func_5651_call()
call_7180 = func_5651_call()
output = relay.Tuple([call_7179,])
output2 = relay.Tuple([call_7180,])
func_7218 = relay.Function([], output)
mod['func_7218'] = func_7218
mod = relay.transform.InferType()(mod)
mutated_mod['func_7218'] = func_7218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7218_call = mutated_mod.get_global_var('func_7218')
call_7219 = func_7218_call()
output = call_7219
func_7220 = relay.Function([], output)
mutated_mod['func_7220'] = func_7220
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7256 = relay.const([[[4,-6,6,-9,7,1,-1,6,4],[-10,-8,-7,2,-1,1,-10,10,10],[-9,10,9,10,8,5,5,-8,-4],[9,-8,-6,4,2,1,-10,2,-8],[1,-10,5,10,1,-4,5,-2,-2]],[[10,4,10,5,-8,1,-8,6,-3],[5,1,-3,10,-6,1,-1,-6,4],[-4,5,5,-10,8,1,4,-5,2],[10,8,-6,-6,9,-6,5,1,2],[7,7,7,-9,5,-8,3,-1,-3]],[[-7,6,8,-10,-1,-6,5,6,-1],[1,4,3,5,9,7,4,1,-4],[3,-6,3,9,5,1,6,7,9],[3,8,-9,6,-2,3,-7,-8,-1],[7,2,-5,10,-4,-3,-7,-7,10]],[[1,-7,-2,7,-9,4,-9,-1,-5],[-3,-8,-1,1,7,4,-4,-3,8],[-3,7,-3,1,-4,-2,-9,-3,5],[7,-6,6,4,-7,-2,2,-1,7],[-10,5,-3,2,-3,8,-2,5,-1]],[[-8,-10,-2,9,10,-1,-3,7,6],[4,-3,-4,6,-6,-2,10,2,6],[-4,7,4,-3,8,4,2,-1,-6],[6,1,-10,10,4,4,7,-4,2],[-2,-8,6,6,1,-5,-4,-8,2]],[[7,-10,4,-2,1,-5,5,-9,8],[4,-5,3,3,-10,10,1,-4,2],[-4,-10,2,10,-3,-10,-6,6,1],[-3,7,-5,3,-6,-6,6,-3,-9],[-2,-2,-9,9,-9,9,6,-6,3]],[[-10,9,5,4,-9,6,2,6,6],[-8,-3,9,1,-3,-6,2,3,2],[9,9,-3,-6,4,10,-9,4,9],[1,-9,-7,-1,3,-10,-3,-10,-9],[-9,1,8,5,2,-7,-3,1,3]],[[8,-6,-9,5,5,6,10,8,-1],[3,-4,-5,7,9,9,5,7,8],[6,-8,9,-5,-9,10,-1,-6,-1],[-4,-7,6,7,3,3,-10,5,1],[1,-4,-1,2,9,-7,-7,1,-5]]], dtype = "uint32")#candidate|7256|(8, 5, 9)|const|uint32
const_7257 = relay.const([[[-1,-6,-4,5,2,-6,-5,-9,-4],[10,-5,-3,-4,-8,10,1,-7,-8],[-5,-7,-8,-3,3,2,9,5,10],[-10,2,5,3,5,-4,-3,7,-7],[2,-10,4,-4,-3,-6,6,7,-3]],[[10,-8,-8,-8,-3,-10,2,10,8],[-3,8,9,8,9,5,-8,10,10],[8,10,6,2,3,-7,6,1,-5],[8,-8,-9,-1,-8,10,-10,7,-2],[9,1,3,-2,10,-3,-6,8,-7]],[[6,1,8,1,4,7,1,9,9],[1,-3,5,-6,8,-2,1,5,-2],[-5,-3,1,4,-8,-5,5,8,-7],[-5,-1,-6,-9,3,-9,1,7,1],[-3,-3,8,-8,6,-10,-7,7,-9]],[[3,10,-6,-10,-10,-10,-7,8,4],[10,8,9,10,-4,-6,-7,-4,6],[5,4,6,-8,7,-5,-3,-4,-10],[10,9,-6,-8,-5,-10,-10,-10,10],[-10,-9,6,9,-8,10,-8,-9,-4]],[[-3,7,-5,-10,10,1,5,8,-10],[7,-6,4,2,-6,-8,-5,-3,10],[9,-2,9,-9,-7,-6,3,-6,-8],[-5,-10,-3,-1,9,3,1,9,-1],[9,3,-8,10,-4,-2,-7,-7,10]],[[-5,-10,-5,6,-5,1,5,5,-5],[9,-8,-2,-9,9,-5,-6,10,-9],[-1,4,9,-1,5,-4,-2,-6,10],[-1,8,-3,-9,-5,6,-5,-8,2],[-4,4,2,-10,3,-3,5,-9,3]],[[5,-4,-2,-6,-9,6,2,6,-9],[-3,3,4,-8,9,3,-3,6,1],[-8,-5,-1,-8,-10,10,5,8,-1],[3,3,-9,5,-5,7,-9,2,2],[4,6,-6,-3,10,-8,-4,-10,-2]],[[5,1,8,-5,5,-2,3,-8,-10],[-5,-7,4,6,4,-7,5,4,2],[-5,1,-4,-6,-1,-6,-9,5,8],[1,7,1,4,6,3,-1,4,-6],[-7,7,-7,8,-6,1,-2,5,10]]], dtype = "uint32")#candidate|7257|(8, 5, 9)|const|uint32
bop_7258 = relay.bitwise_and(const_7256.astype('uint32'), relay.reshape(const_7257.astype('uint32'), relay.shape_of(const_7256))) # shape=(8, 5, 9)
uop_7261 = relay.rsqrt(const_7256.astype('float32')) # shape=(8, 5, 9)
func_5651_call = mod.get_global_var('func_5651')
func_5653_call = mutated_mod.get_global_var('func_5653')
call_7266 = func_5651_call()
call_7267 = func_5651_call()
func_5289_call = mod.get_global_var('func_5289')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_7270 = relay.TupleGetItem(func_5289_call(), 0)
call_7271 = relay.TupleGetItem(func_5290_call(), 0)
output = relay.Tuple([bop_7258,uop_7261,call_7266,call_7270,])
output2 = relay.Tuple([bop_7258,uop_7261,call_7267,call_7271,])
func_7281 = relay.Function([], output)
mod['func_7281'] = func_7281
mod = relay.transform.InferType()(mod)
mutated_mod['func_7281'] = func_7281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7281_call = mutated_mod.get_global_var('func_7281')
call_7282 = func_7281_call()
output = call_7282
func_7283 = relay.Function([], output)
mutated_mod['func_7283'] = func_7283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_7286 = func_4420_call()
call_7287 = func_4420_call()
func_5971_call = mod.get_global_var('func_5971')
func_5973_call = mutated_mod.get_global_var('func_5973')
call_7290 = relay.TupleGetItem(func_5971_call(), 0)
call_7291 = relay.TupleGetItem(func_5973_call(), 0)
func_4923_call = mod.get_global_var('func_4923')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_7318 = func_4923_call()
call_7319 = func_4923_call()
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_7346 = relay.TupleGetItem(func_2456_call(), 2)
call_7347 = relay.TupleGetItem(func_2457_call(), 2)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_7377 = func_2170_call()
call_7378 = func_2170_call()
func_6912_call = mod.get_global_var('func_6912')
func_6916_call = mutated_mod.get_global_var('func_6916')
const_7392 = relay.const([-1.708370,-9.819927,8.071086,2.861859,-6.008739,-7.500042,0.270363,6.141582,3.116509,9.431313,1.584412,-0.251660,-4.948632,-5.469069,-1.396462,4.277153,-0.842712,-3.111547,3.212238,7.206524,-9.636811,-3.658443,6.558938,-8.228422,6.012043,6.411510,-4.715638,-1.465725,-4.032063,-7.765863,7.805085,9.795296,3.485267,6.790980,3.697033,4.920435,-1.336759,6.899144,3.839615,3.593557,5.547520,6.547303,-1.447929,5.848711,-6.390159,-1.610575,3.729983,-5.553005,3.904421,4.374644,-2.832850,1.534857,-9.031257,-0.849990,-0.113656,-8.662082,-1.322805,9.090421,4.745127,3.658526,9.981481,-5.504188,4.559645,7.240672,-7.451161,1.115121,9.280333,-4.926663,-9.497539,0.682913,-7.396895,-8.948979,6.966909,0.940906,-9.573937,3.715178,-3.557618,-5.918340,-0.343964,4.125490,-8.419718,4.006595,1.839155,5.212351,-4.944772,-6.524361,4.114856,8.237028,-4.045594,8.759597,-7.521289,-2.728429,-2.396542,-8.817831,1.296032,-6.261371,6.890048,3.178499,4.306582,-7.220327,-5.571699,-3.554463,2.076318,-3.935065,-8.999183,6.534044,-0.762327,-3.391985,-9.721318,7.552679,-0.170365,-3.461936,3.038876,-4.450252,-5.343212,-4.956096,6.670765,-3.614222,6.970367,-5.899914,9.008813,-7.196249,-3.980890,-9.561383,2.509110,-8.484057,2.376563,8.897045,-8.130287,8.581598,-1.139353,6.716425,-2.753943,8.385527,5.438957,-4.508118,7.974539,-7.473918,4.135530,-3.435690,4.976542,-7.761694,3.659780,3.210893,9.210089,2.418420,4.181891,5.384124,-3.087930,6.241813,-0.759441,-3.343456,-6.071589,0.780654,-1.976436,-7.344204,-1.759133,-9.301466,5.111251,-8.258767,2.728608,-5.326431,-8.263388,-5.359107,-8.582051,-8.476378,1.817750,-0.527418,-5.215553,4.490735,-1.274121,-5.696564,-3.857753,-1.969420,-1.645619,-7.222008,-2.956568,-0.212361,-1.214943,-3.324924,-9.567445,-3.424962,4.267250,1.080005,-2.855018,-4.381091,8.282236,-5.170275,-5.417114,4.633345,7.446323,-9.074028,-3.332236,-6.491951,6.563971,-1.020821,-7.678518,-9.076034,4.167194,8.218654,-4.806571,-7.071291,-4.493086,-8.776261,-9.712515,9.761279,6.922688,1.622225,1.070355,0.966327,-2.031554,-8.234803,-1.325038,0.485733,8.508976,6.753309,-3.286546,6.679060,-4.395560,8.283104,4.702799,-2.943345,-0.902158,-7.077178,-7.491148,7.681318,0.255411,1.439103,-6.931197,-9.509113,7.905739,7.585582,7.646511,-9.075461,-8.111670,-3.650875,-3.291415,6.421793,3.444114,-6.182287,0.453801,-2.205704,-1.515709,-1.988931,-4.247918,-0.986297,-9.189280,-7.740456,-9.262329,-4.236922,-4.805034,-9.332616,4.720195,-7.700126,2.374884,-1.241684,-7.676566,-4.330752,-6.188300,5.667060,5.844242,-5.053124,4.454316,7.799217,2.618128,4.243409,6.881215,2.871798,1.910159,1.013784,-5.794614,0.683060,-1.481459,6.611677,-2.963792,-8.235143,-4.729612,7.681811,8.100013,5.002417,-6.935266,-2.408202,-6.712161,7.050751,4.589415,6.341537,-0.414700,-4.822018,-6.826030,-9.092915,-2.520821,-8.679946,3.393787,4.810507,-8.076451,-7.848887,7.005879,-3.556291,-0.470287,2.807826,-7.173452,9.090796,5.286639,-6.011660,-3.885364,-4.287173,3.703896,1.838934,-5.597395,2.828821,-7.176487,-4.690466,-7.408388,7.279971,-5.811649,4.142018,5.866204,7.671950,-8.300717,-7.061217,-3.912185,-1.474521,4.223394,2.570947,-4.032135,2.993584,-2.885023,-3.772779,-1.205061,3.640408,-3.018222,-8.453775,1.591634,-7.243975,3.579970,-4.849942,4.069830,2.546385,6.987011,-1.538652,0.171998,-0.220597,6.060229,-3.953178,-0.211640,-6.841046,-8.603636,6.276672,5.697768,-6.155565,-6.381968,-6.723827,7.673360,7.932749,-6.262713,-8.094026,9.347125,7.405070,3.683351,-0.770169,9.480427,-6.537206,9.022070,-3.871545,2.031607,1.365034,9.864873,7.640234,8.390993,5.707161,-1.063175,2.096704,-3.279838,8.600420,3.594099,-3.476132,-8.412515,-6.561524,-9.100792,-5.244386,4.742956,3.473155,-8.839168,0.277853,2.169167,1.188272,-1.420528,4.005272,-3.222224,-1.255116,0.566092,-7.997512,2.376904,4.516821,6.196497,7.702078,-3.680466,-4.409320,7.132343,-2.891221,-9.365995,5.026373,7.669095,-2.091256,0.388306,0.602686,2.269674,-9.609904,-9.185361,-1.639698,-7.891816,1.460685,-8.839314,7.850131,8.102693,1.130551,3.433517,4.538948,1.633728,-5.300757,-7.217233,0.608075,-7.588770,9.368104,-7.301539,-7.045135,5.162014,7.745922,8.644142,-0.822778,-4.661464,6.717840,-2.674386,-4.289405,-1.980713,-5.474004,-8.592076,-8.504474,0.793480,-0.857078,4.151425,-9.557231,-6.475154,-1.336785,-7.453235,-0.502423,-5.761585,2.155171,-0.912501,0.609768,-6.738782,-6.824906,5.582041,3.343851,-9.712440,-8.077934,8.520429,-5.046499,-5.903699,9.703053,1.777658,-7.647701,4.184749,-4.207462,2.639676,-2.247768,8.458288,3.068673,6.391806,-4.658003,-0.797710,0.129952,6.659475,0.173697,2.778643,1.166892,-6.551274,-3.523683,7.284820,-4.446839,-3.469421,-8.819459,2.954844,3.905387,1.129516,-1.465087,-1.381479,8.061362,9.124943,-9.148776,9.209920,-4.772628,3.409549,-1.166773,0.361800,0.323183,3.230708,-3.421291,0.310839,-1.148024,5.681997,-9.934566,-2.074909,9.709467,-5.529157,-7.301211,9.857117,-7.983434,-9.192046,2.134499,2.338296,9.439940,7.386382,5.650716,8.967922,4.414515,-3.072323,5.629877,8.637679,-4.182304,-3.681842,5.714393,5.381948,-2.515953,-2.223583,-4.469169,-0.125981,7.354775,2.140277,2.974959,-4.315318,6.313855,-6.279212,0.552473,3.405261,-9.858282,1.391921,-3.200452,3.380796,-4.513988,-5.662221,3.920257,-0.860895,-9.827620,8.281437,5.062673,-6.426731,-2.353399,3.225730,-9.646668,9.691691,-9.567128,1.155693,-7.545240,3.837485,-8.670759,9.537783,-1.471562,-5.314079,8.338980,-8.720354,4.403575,0.344633,-8.012741,-7.257470,6.171249,8.718179,-3.147620,-7.442572,7.429370,2.951775,-3.131859,5.104195,-4.057125,8.771218,9.337357,-9.507668,3.423849,-4.849645,-4.241449,-5.298949,-3.274677,0.432328,-7.860855,9.272338,8.436809,-2.974977,1.533915,6.044196,6.145011,8.960285,-5.167945,-6.234988,4.516247,7.772718,5.189849,-4.326610,2.712065,-2.050230,9.884482,2.411732,-0.536606,-6.980477,2.984137,2.008917,6.579461,1.776323,6.895671,1.066163,-7.865030,-8.820216,-7.948288,-4.507307,7.769708,-0.356172,-1.197211,5.365512,6.416061,3.114292,6.768540,4.815760,1.626247,7.472190,-1.885698,-0.426286,1.956392,-3.843806,4.491001,-0.114449,4.570167,2.496459,-5.611300,-0.672543,1.703219,9.591717,8.181832,8.523664,2.628012,0.880933,7.352159,9.717454,-3.964044,-3.438359,-8.232628,-7.548384,6.124573,6.593310,7.777258,5.942483,0.075656,6.046965,-6.199493,-9.726216,9.640571,3.629284,0.905976,-2.473731,2.852019,3.576672,4.527466,0.127471,8.692924,-5.692698,6.681934,6.996114,-2.854758,5.642345,5.612866,7.302921,1.025113,5.949356,8.341832,-6.544956,3.061701,-7.639487,-9.609909,1.625798,-9.347745,-2.763970,-2.279283,8.121803,-5.179356,0.828172,-6.036941,0.714504,0.601659,-4.920315,-0.916962,7.228969,-2.086094,-4.698425,-4.933356,-1.688082,6.214590,-1.018357,6.602764,4.968907,-1.685717,2.844874,7.600605,-1.352356,-2.612554,2.191705,7.994029,-3.127642,-3.106202,-4.589014,-5.360688,0.338576,8.203983,4.229224,5.744101,5.468657,0.560009,-6.459272,8.233665,-2.713154,6.882223,-9.227060,-9.268519,-1.217424,8.716382,6.517507,-0.388572,1.352576,-9.942138,-3.095578,5.985754,1.884891,-7.805886,3.813523,-2.789898,3.676811,0.328813,1.062198,-4.637896,-7.178101,-3.945927,-1.952111,6.541730,5.208307,-6.599471,4.313543,8.513699,9.439009,5.490797,0.779379,-1.582710,6.839061,-8.594342,0.021020,6.075261,-2.117821,-1.933055,-7.154635,-4.673488,1.991607,9.370179,3.380352,-8.885072,-5.585604,3.543117,3.863161,8.316171,-8.772688,3.844253,-4.561422,7.803829,4.506603,0.354973,5.754900,3.409617,4.493683,-2.488351,4.074446,4.204920,-6.781325,7.087439,-7.337382,-4.986718,-8.707594,-7.535378,-2.377315,0.583538,0.273757,2.661506,-5.929804,-4.105699,2.055642,-1.157254,9.700866,3.865474,5.413588,0.832814,8.480582,-9.192542,-4.369114,-8.701124,-9.070387,-7.187139,3.298533,8.028698,-9.755078,7.690439,-1.586608,-6.482854,2.414286,2.915501,-9.645162,-5.531099,-4.636918,4.261071,5.012728,-7.812195,6.941636,-3.495457,-7.356566,-3.773013,1.452585,2.669475,-8.010394,5.813395,0.351129,-1.593984,2.804865,8.678882,8.571814,-1.101414,-3.389381,-1.204120,9.036922,-8.393491,-7.004002,-1.076564,-2.469489,0.635010,2.482517,-3.076619,6.511581,-1.024826,7.700195,8.375412,-6.486095,-2.304140,-3.299465,-4.789719,5.972216,7.268922,-5.263603,5.602798,4.174454,4.795996,6.931826,6.601368,-9.941660,0.316552,5.228918,-3.330441,3.695519,6.557669,5.011823,1.188002,-6.905738,8.015845,5.432642,-5.565068,9.194485,5.614313,0.272777,-8.510801,9.272625,-8.926417,-4.091048,-6.054718,5.773704,7.653390,-4.138329,9.682949,2.450734,2.544020,2.894195,-4.107214,0.443749,8.535799,-8.757058,-8.502873,9.496984,3.607286,4.008541,9.133131,4.456820,3.902869,-0.355105,-0.787788,6.186342,-6.769822,8.303463,-5.681253,-0.359875,-5.469038,7.685807,-6.141486,0.172825,-3.354039,-6.585922,6.629223,-2.355551,7.126113,9.313549,-4.265901,7.756778,6.679009,3.895312,7.274522,1.171900,1.855303,-5.601768,6.202924,5.223684,-7.725271,-9.739107,3.576713,-4.170135,3.811567,-8.914771,2.201396,-0.145446,0.502277,-5.372002,2.345864,-0.048761,-9.611573,0.514671,-0.255931,1.078864,-9.437796,-4.290299,-6.989229,-4.250316,-6.401352,7.438735,-9.813591,-2.393600,-2.898257,-1.324131,-4.814196,-9.648059,8.414914,-5.745597,-5.864524,-1.154257,7.994541,-5.040425,0.640808,8.529920,0.054912,5.341819,-0.239404,3.192591,-1.851778,9.069287,-6.929231,0.349125,3.680345,6.504112,6.965232,-3.857035,-1.045516,-5.694552,6.037347,4.660219,8.766764,-5.803950,-3.803021,-8.636706,8.347480,8.450639,3.906562,8.062596,2.049127,-5.179919,-8.226306,5.798300,9.015190,-3.084769,-7.498700,0.456709,1.848488,2.409768,-1.336701,-8.730639,8.823054,9.248956,2.570204,2.349402,-9.381286,7.188237,-0.263951,9.228155,3.303285,-7.679377,-3.959646,8.531398,3.719042,0.726791,-3.683299,2.387510,-5.538620,-3.681830,0.799748,-2.863818,0.167109,-2.860974,-8.960369,2.432423,-4.146730,4.164487,9.940953,-1.830200,-7.126776,-6.282048,6.451193,-0.740279,9.204266,3.504888,3.236010,-1.358180,-1.540438,-6.202863,-2.289446,-7.421934,-8.202632,2.636226,-6.284272,-8.793676,-3.483344,6.320410,9.525251,0.809677,-1.622021,0.652159,-9.415762,-0.863702,3.721878,1.339220,-6.101130,-5.329397,-4.555313,-1.823910,6.219966,8.538622,-1.343087,3.584814,-3.513682,-4.057733,-7.309155,-6.089308,7.610047,3.691141,-9.589710,-0.442206,-2.257897,8.350414,1.643056,5.708565,-6.774637,-8.186616,3.656633,-2.260775,-1.714884,-2.709533,7.948141,7.972715,7.394268,5.009217,0.605534,-2.778226,-7.002384,-4.683791,1.142916,-5.623294,-7.706691,-2.608069,-8.327673,-8.962484,8.535267,2.541360,2.111454,7.501845,1.520361,-3.779239,9.730128,-5.548782,-2.297248,0.032132,-2.772105,-8.397694,-3.798335,-4.290597,4.350189,5.491329,0.493271,4.107523,4.505336,4.719684,7.672543,1.501087,-4.615364,-5.073125,4.007049,3.675123,5.376411,-5.867569,-0.777963,8.725160,6.972292,7.035825,3.516280,-2.844340,3.197838,-7.416834,1.699672,4.723054,3.198282,2.074043,8.823157,3.817003,-4.888413,-3.825364,-4.432318,-8.019761,-5.927220,6.052576,9.627014,-2.745889,5.080420,8.182965,7.001661,7.545767,2.921015,3.379450,9.801715,2.303462,-8.798547,-2.750235,4.415071,1.517126,-6.589067,-6.624396,-1.175195,1.650775,6.307340,-9.152111,8.297664,2.386132,-5.013583,-3.701046,5.005740,0.133193,7.370221,4.415684,0.354231,9.125002,4.214168,0.956828,-4.926104,9.895394,3.830502,-4.599809,8.811607,7.101933,-8.918816,3.846365,-0.098750,-7.750870,0.781927,-4.719848,-0.112204,-9.217040,3.276524,2.863660,-1.400232,9.521279,-4.797816,0.695624,-0.181590,-3.933485,-0.481145,-6.585848,-1.193771,-7.500847,-8.080093,-3.226027,-7.486473,-5.359499,-3.284898,-8.388794,6.488573,3.667965,1.162213,8.715770,3.236538,0.159231,-0.021341,-0.767419,-9.997002,-1.154080,-8.508145,3.108429,5.209410,-5.844734,4.052235,6.954085,8.333776,-7.268639,5.292596,-3.992123,4.540841,-3.300954,5.533963,9.748226,1.831191,4.404261,-5.732044,3.333382,-9.189613,-0.240632,-0.796770,-8.931361,-7.307459,-6.266400,6.708836,-7.881499,-9.534470,-0.747059,-3.741952,5.517055,9.391420,3.479607,3.999686,0.527512,-5.274620,6.083185,3.154259,-2.447433,1.897209,8.943607,5.207883,1.815997,-7.047639,-0.216471,1.545992,8.283774,-0.473625,9.346796,3.768835,4.458466,-2.329908,-5.877536,8.049118,9.725016,6.068804,4.476757,-7.234694,4.691091,-5.350706,6.263825,8.178286,-8.488493,3.368346,-3.905704,-4.213471,9.546448,-9.227011,3.443967,-3.801035,-0.758176,7.736726,4.942048,0.200129,7.179778,-9.262765,8.578711,6.480418,6.817689,5.462743,8.031591,5.993719,-1.544921,-5.951602,4.279738,-3.205357,-7.106866,9.954143,-7.718919,-2.094118,-6.996940,-9.762169,5.497912,6.090000,4.424509,-9.499762,0.231158,4.328368,6.258196,8.315131,-5.110934,1.820204,7.424797,-0.322832,4.557162,7.048830,2.609103,0.159957,6.848404,0.068876,-7.362121,0.638292,-6.257139,6.042853,-8.098717,-3.869527,1.655980,-4.893208,3.020294,-0.395686,1.137179,-0.304239,1.909239,4.131916,0.116856,7.244678,-4.397133,2.781915,8.753555,5.750912,0.322579,0.472163,8.619841,2.903941,-3.556842,2.481389,-5.058952,1.167986,5.256709,-1.496236,2.338977,-9.087436,0.915377,-9.015228,0.483126,-0.340247,-9.505376,1.593123,2.371118,-9.907408,-0.043187,-9.684201,7.462993,-5.342714,-9.233873,8.695388,8.935230,-1.465180,0.125298,3.537973,-8.853307,9.701424,4.962794,-1.169058,-5.746549,3.619944,-5.729281,6.974070,4.499318,-0.374030,-0.353630,2.893556,-7.942101,-4.972822,4.510245,-7.703698,-7.903282,-8.147963,-3.286769,-4.728810,2.572300,6.420484,1.189087,1.800758,-2.146729,7.135225,-3.759609,-6.832901,-5.502801,-2.705521,4.525875,8.649737,4.819180,2.046967,-6.620787,-5.724519,7.572973,5.670604,-7.863591,6.992049,-3.360474,9.805226,-3.460496,4.052951,9.169019,-2.099385,-1.394971,-2.853234,0.020615,2.499103,3.008899,7.398357,7.896650,-0.773203,8.762236,5.876921,-5.464888,-0.993340,-7.308001,6.326949,-8.889458,-1.032394,9.176641,-8.704624,5.293048,-7.739155,3.076256,3.041574,-8.060677,-4.148262,-3.448476,4.451911,-4.911766,1.278110,-8.703606,-0.353607,-6.913238,6.461065,0.068817,-7.555765,-5.378054,-0.548200,-4.790361,-1.862364,2.798165,-4.383802,-3.192122,-9.224498,-3.038002,-5.631522,-8.815506,6.091960,9.707052,-6.090507,-3.202528,0.270482,4.271831,-4.638443,-4.798560,-9.090327,4.548662,5.720033,-6.827621,-5.405019,9.923036,5.476508,-8.501816,-1.434334,-2.103617,-5.888199,8.504106,9.305093,3.804480,-1.948339,-5.184661,2.710440,1.636734,-9.124485,-7.816968,-5.473266,7.175011,4.296017,-1.369755,9.164753,-9.376688,7.842481,-2.235704,-9.190021,-3.178038,6.896485,7.752323,-5.879666,9.089548,9.697949,-8.211172,8.091610,0.317926,4.650930,-5.302246,-4.696838,-1.785205,-3.045612,-8.931447,1.943594,1.663502,-0.728461,0.302457,8.105455,0.202831,9.190716,0.170185,4.337526,1.055567,-8.275253,7.279001,0.816381,0.049633,-9.375649,-6.014910,-1.786767,-5.113199,2.341156,-3.914732,-7.650732,7.582155,6.935359,-1.561584,9.026412,0.736633,7.211987], dtype = "float32")#candidate|7392|(1536,)|const|float32
call_7391 = relay.TupleGetItem(func_6912_call(relay.reshape(const_7392.astype('float32'), [1536,]), relay.reshape(call_7346.astype('float32'), [26,]), ), 2)
call_7393 = relay.TupleGetItem(func_6916_call(relay.reshape(const_7392.astype('float32'), [1536,]), relay.reshape(call_7346.astype('float32'), [26,]), ), 2)
output = relay.Tuple([call_7286,call_7290,call_7318,call_7346,call_7377,call_7391,const_7392,])
output2 = relay.Tuple([call_7287,call_7291,call_7319,call_7347,call_7378,call_7393,const_7392,])
func_7396 = relay.Function([], output)
mod['func_7396'] = func_7396
mod = relay.transform.InferType()(mod)
mutated_mod['func_7396'] = func_7396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7396_call = mutated_mod.get_global_var('func_7396')
call_7397 = func_7396_call()
output = call_7397
func_7398 = relay.Function([], output)
mutated_mod['func_7398'] = func_7398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6364_call = mod.get_global_var('func_6364')
func_6366_call = mutated_mod.get_global_var('func_6366')
call_7434 = relay.TupleGetItem(func_6364_call(), 1)
call_7435 = relay.TupleGetItem(func_6366_call(), 1)
func_5289_call = mod.get_global_var('func_5289')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_7445 = relay.TupleGetItem(func_5289_call(), 0)
call_7446 = relay.TupleGetItem(func_5290_call(), 0)
uop_7449 = relay.cos(call_7445.astype('float32')) # shape=(7, 16, 15)
uop_7451 = relay.cos(call_7446.astype('float32')) # shape=(7, 16, 15)
var_7457 = relay.var("var_7457", dtype = "float32", shape = (26,))#candidate|7457|(26,)|var|float32
bop_7458 = relay.less(call_7434.astype('bool'), relay.reshape(var_7457.astype('bool'), relay.shape_of(call_7434))) # shape=(26,)
bop_7461 = relay.less(call_7435.astype('bool'), relay.reshape(var_7457.astype('bool'), relay.shape_of(call_7435))) # shape=(26,)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_7468 = relay.TupleGetItem(func_2153_call(), 0)
call_7469 = relay.TupleGetItem(func_2154_call(), 0)
output = relay.Tuple([uop_7449,bop_7458,call_7468,])
output2 = relay.Tuple([uop_7451,bop_7461,call_7469,])
func_7477 = relay.Function([var_7457,], output)
mod['func_7477'] = func_7477
mod = relay.transform.InferType()(mod)
mutated_mod['func_7477'] = func_7477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7478 = relay.var("var_7478", dtype = "float32", shape = (26,))#candidate|7478|(26,)|var|float32
func_7477_call = mutated_mod.get_global_var('func_7477')
call_7479 = func_7477_call(var_7478)
output = call_7479
func_7480 = relay.Function([var_7478], output)
mutated_mod['func_7480'] = func_7480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5289_call = mod.get_global_var('func_5289')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_7533 = relay.TupleGetItem(func_5289_call(), 0)
call_7534 = relay.TupleGetItem(func_5290_call(), 0)
func_2024_call = mod.get_global_var('func_2024')
func_2027_call = mutated_mod.get_global_var('func_2027')
const_7548 = relay.const([8.457046,0.368253,4.597921,-7.833270,8.911486,9.883076,-1.904164,-5.253502,8.478519,-2.311617,7.230945,1.686191,0.176171,9.757324,-3.744422,-5.174247,-2.829320,-2.510024,-6.773936,-4.243407,1.493233,-9.385973,8.904871,4.480477,7.999875,6.229805,-9.054932,-7.139011,-3.567385,-3.001127,-2.306570,0.957487,0.455536,-7.319645,-8.269099,3.355958,-0.617673,7.890072,-1.861807,-3.840702,9.618081,-1.536078,8.320116,1.525706,3.008802,-4.865542,-3.542883,-4.722349,3.430409,-9.456515,0.467156,1.252106,2.066092,5.621475,-0.073030,9.776968,5.463404,4.624127,-9.015974,-3.308524,0.849708,3.981819,-6.991060,4.112083,-7.649107,1.172838,0.929432,-2.881646,-3.786018,-6.469330,1.078546,-0.843864,6.869995,6.764673,-2.576407,0.577690,-9.817753,-0.837768,-4.407901,-5.236868,7.103171,-6.817296,0.941636,8.088952,-3.919865,-3.981911,-7.940129,-8.592812,-6.886426,2.293298,-0.475441,-2.054468,-4.085725,1.499585,-4.837712,7.804913,-8.613654,-5.523554,-6.473577,0.344030,5.619665,6.114302,-7.610610,-1.713907,2.216693,5.695438,-7.288513,0.394223,-1.856422,-4.349352,-9.604856,-8.629762,0.752699,-0.006886,1.929136,8.255786,7.232393,-6.940318,-2.982602,8.578591,-7.273180,9.262606,-0.868255,9.834677,-2.992752,-1.693404,-3.773906,2.188523,7.370772,4.568922,8.522532,-1.372039,2.633774,-9.782215,8.324079,-9.491285,-5.548161,-2.066973,-2.839984,-5.533334,6.038859,4.432592,9.451950,-9.857874,9.425697,0.539178,-7.305868,3.168368,-6.514227,0.281391,2.820309,-5.343369,-8.009936,3.759046,-5.881256,3.270164,-1.783037,3.994158,8.659392,-7.439849,-2.518322,8.468875,4.952501,-8.214621,-0.749758,2.045167,8.274566,4.068739,2.033159,-2.760488,-2.400320,0.360780,2.000588,8.521952,-1.157228,1.031928,1.613528,2.508075,5.845724,6.106270,-4.876924,-4.067970,-9.679885,5.864685,-3.445503,1.394169,4.094439,6.844960,-8.941942,3.291650,-1.853249,8.065100,5.802738,2.131644,-0.547631,-7.582156,5.254026,7.529913,-3.196717,2.053337,-1.155274,-7.142333,-1.789498,-7.726175,-2.367939,9.697214,-3.757688,-7.319668,-9.392481,7.819158,-9.160747,0.328183,-4.563132,2.806134,2.371368,9.472227,-2.704407,3.755637,0.242325,2.372697,8.477060,-3.555950,4.805728,1.300411,-5.373544,-9.748552,-9.251628,1.677459,-2.053092,5.692783,4.730957,-8.802069,-8.791788,-8.053372,5.303148,1.686506,1.064544,9.982831,2.988339,-6.802626,3.174537,-8.992347,-6.982435,-8.809430,7.588446,-2.993548,-8.629669,-3.384491,-1.069467,-5.262480,-0.434958,-4.256355,0.784759,-4.179791,-3.184079,5.797761,2.325265,9.431924,6.377221,7.982167,6.969407,7.485391,-1.829800,0.438369,4.121485,-8.946271,8.814427,2.877268,-5.292650,1.754046,-1.091622,-6.702970,4.576373,5.330740,4.948481,3.116159,-0.624696,-2.198171,-0.168546,1.295586,1.324402,4.388041,-4.168196,-4.742797,-8.979792,6.073645,-2.670339,-2.667292,9.038133,-0.193734,-6.804455,5.444996,-2.211975,7.797267,9.255917,-6.437140,7.484225,-9.459493,-9.567110,-6.525974,-5.828046,6.398201,-5.691052,-9.077426,5.636875,-2.522936,-6.371506,-3.630651,-3.148217,1.520551,-4.718317,-9.487065,2.662966,5.515288,4.913383,-9.570176,9.127539,-9.632717,-5.974687,7.473332,9.584859,1.117242,-7.737513,7.870915,-7.079011,-1.487268,-8.086266,-8.927577,7.301035,-4.517094,7.627386,6.679895,-2.603660,-7.122051,-6.045816,6.631775,-0.794946,-6.488220,-1.690038,3.867125,-8.336330,-0.695664,-9.118369,0.508120,-0.522963,6.752962,-5.878843,1.463227,-2.230486,1.740917,9.660911,1.175459,-0.746630,-6.458915,0.930259,9.068375,-0.718768,-0.899428,-1.773153,-7.132241,5.059582,-0.790494,-5.722135,2.812626,-3.752266,-7.476527,6.373689,4.552745,2.922813,-6.572020,6.558634,-6.074630,7.210125,-3.032615,-9.818817,0.011745,-4.963909,-1.859282,1.671452,-2.564959,-5.579585,3.313744,-9.856266,6.534965,7.197456,-6.058638,6.883384,-6.036922,5.276024,-6.067397,9.218476,-5.148643,-6.234353,0.145425,-9.400566,5.080097,-8.189133,-7.564877,4.276091,-6.718262,2.503389,8.868602,4.083676,-1.755037,-2.811344,3.912760,-1.534539,-7.651591,-4.782383,-8.536340,4.751878,9.814385,-1.957292,-5.377364,-4.587210,-9.003028,3.145038,-1.184016,3.026431,9.085873,-4.110950,-5.581155,-0.126043,4.114571,-1.091056,0.723337,2.691177,4.239392,-8.729900,3.861725,-5.480137,4.182522,3.534128,-1.394166,-1.142561,-8.154308,-7.496274,0.298826,9.779244,2.392290,-8.056356,4.531188,-0.512352,3.759942,-7.894229,3.954155,2.719814,-5.052543,-0.490765,8.597577,5.806157,7.837890,-9.148875,-6.030475,1.943669,5.480778,8.328465,7.917181,3.963894,-0.205851,4.568560,-2.535470,-2.792759,7.126650,-8.520060,9.896965,5.514417,0.553907,9.395843,6.856548,-8.754821,-3.940624,-7.601102,8.310748,8.318342,2.815277,2.786339,7.113513,7.296663,-4.142955,6.305888,5.917033,9.519229,2.358923,-7.983757,8.163956,3.266133,-7.019177,-8.864931,-3.788358,-5.642192,-7.034415,6.731965,3.012453,5.937668,-7.409247,-7.910417,0.076858,5.531591,-7.808227,2.408182,-6.013093,-9.557953,-0.878133,-1.402973,-2.135049,7.048504,-5.211849,-5.622766,7.351490,5.621134,-3.519551,9.357065,1.096462,-2.359780,-1.542917,-2.822892,9.892778,-1.136564,6.898070,-4.481546,6.885119,-1.142186,-0.132390,5.624347,-8.295514,-8.755505,-5.200372,-4.860729,-9.504601,-2.524745,6.555378,5.913964,9.978825,-1.419577,-6.152433,-7.151999,-6.792751,8.292339,1.543214,-4.211834,2.924933,-8.458253,-7.893217,-3.523378,-9.582471,-8.266404,7.115691,-0.866438,1.160382,0.912935,1.752426,9.021431,-1.305436,-6.811405,4.420667,-1.087807,3.689997,8.371565,1.701456,-8.517539,-7.535852,7.268361,-2.047811,-7.835791,9.828344,4.547671,3.650548,-3.442733,7.760189,5.788416,-7.215729,-6.078843,-5.585475,3.908124,0.604446,0.384190,-1.308277,0.920537,-5.551662,-2.365564,9.871810,-9.512899,-5.384449,-1.174535,-6.602860,4.819782,4.132562,-9.765889,3.008764,-7.230918,-6.991242,-4.995323,-1.473823,7.418317,9.588614,-2.424747,-9.884543,3.970550,-2.422263,-2.238489,9.600794,6.670988,4.216957,-4.798109,0.391324,4.468311,1.511124,4.670857,9.902107,-5.613077,-2.094651,6.320781,-3.435221,-0.564750,6.264182,3.220367,-4.535043,7.326660,-7.845376,-4.175630,-2.117074,0.523258,5.508384,-8.675396,-4.199531,5.029478,0.530033,7.193378,9.829502,-4.438512,-0.004022,9.514418,-4.324400,5.684777,-6.035667,0.168319,5.123155,-9.088548,5.553854,-8.996805,-3.502542,-7.514553,-8.294458,6.954893,8.525864,-7.182780,8.647226,-4.888971,8.475509,-7.595072,0.044452,-6.604863,2.685690,3.157521,8.246900,-6.722682,5.339274,-4.458893,-2.533462,6.078492,4.502691,9.175196,2.970862,9.522133,5.012949,9.630846,5.953012,-6.548643,-7.620400,8.952957,4.446844,5.263169,-4.040606,-6.428681,2.055059,8.305956,-5.068451,0.758119,-0.818549,-3.397372,5.622769,0.601197,3.268871,9.527288,8.822883,-2.232005,-8.859893,-2.493197,9.915699,5.887751,-2.333209,9.141190,7.338715,1.932356,8.392118,-0.720964,5.965475,2.279480,5.684315,-3.205886,7.223130,4.712227,4.887605,0.324911,-4.409565,7.870212,2.749526,9.717398,-2.661555,-8.721741,-8.687245,-8.498449,-2.449440,0.610379,-3.677499,3.654815,-1.316851,4.395431,-5.566622,-7.602015,1.655771,6.169224,-9.915185,6.554372,8.881660,8.600699,-5.782014,8.403625,9.895889,-1.172259,1.575032,-2.437339,-0.291301,3.317080,-1.435946,-2.394401,7.614674,-0.119680,-2.377357,-6.302924,7.516338,-1.102770,5.220945,3.456640,-8.697226,-4.019869,1.461406,9.003695,-6.473568,-6.654575,-8.691174,-8.405053,-8.687902,2.105372,9.298641,6.012777,7.868331,-1.237647,3.236611,-9.658575,-5.990592,0.748632,9.571197,8.228112,4.303456,-9.677773,-9.038621,-0.685651,5.217422,-2.082914,7.393117,6.461477,8.338553,-0.824475,4.495192,-7.486065,3.880299,3.838546,-7.455367,0.371563,-0.617387,1.013399,-8.456064,-0.129905,9.049828,-1.967250,-4.217224,-6.437371,-0.084659,-2.616635,6.610117,6.204842,6.979364,8.911014,9.723005,5.038713,-0.883905,2.964971,-3.112566,-5.350298,-5.134350,7.152346,-3.139119,-1.465553,-7.468583,1.146622,1.508764,-6.443532,8.382871,-6.399905,-6.337542,1.608400,-4.212358,-8.756178,-8.688027,-2.748936,0.642532,9.024706,9.572554,-1.647841,-7.598836,0.798338,-3.917736,-6.191553,5.813299,2.448367,2.362118,-3.478952,3.601780,-8.280512,0.477455,-1.798273,-9.047847,3.840944,1.349091,0.952537,9.636855,5.210033,5.316874,8.755101,-4.988126,-5.654506,2.534052,3.226274,0.025967,-2.183752,-2.959777,-0.671380,-7.791678,5.050626,2.285323,-8.647529,4.885094,6.544494,2.922405,-7.650319,9.150939,6.797232,3.120427,6.089640,8.213032,-7.992493,-8.628043,-7.523578,-4.337389,-7.847782,9.848156,-8.556071,-2.240444,7.963833,-0.240106,6.882574,-3.375756,6.478766,0.627393,4.615351,-4.830480,-3.517062,-6.700663,-5.629792,-3.689723,-5.608693,3.696409,7.435952,-9.207076,9.224970,-8.895938,-1.847326,-1.455052,-4.118499,-6.669781,-9.565889,4.686270,6.169991,1.940956,-4.380742,-9.038294,3.502161,9.308854,9.608735,6.713769,5.497197,5.727382,2.369622,0.230820,4.728380,2.201877,-5.327148,7.495660,-7.793365,2.564880,-9.668588,1.812786,8.421667,-0.131784,2.039310,-7.432025,4.945317,-2.677061,9.219369,7.065732,-2.513572,-2.823765,8.954636,-7.197242,-8.683193,5.680369,-1.863686,4.664091,6.064236,-1.629551,7.539539,1.538938,9.223866,3.056197,2.740995,8.528760,4.509996,5.326779,0.426153,-0.024660,1.913035,4.592531,5.934388,-0.603547,-3.368439,4.907568,5.872834,0.919692,-5.176770,9.936788,1.089820,8.880250,-4.096582,8.305378,8.908963,2.277868,4.460457,-6.326150,4.199408,-6.207944,1.417404,-6.814324,-1.547703,3.490615,-3.383819,3.956952,-5.748213,7.104288,8.131566,-1.728940,-4.460624,1.963355,-1.568360,-8.415872,-1.584804,-3.127326,-4.368821,-6.950944,-1.094969,-5.007754,-7.955307,-8.116786,-6.148497,6.705893,-7.903246,-6.549717,-0.469247,3.832721,5.007919,-8.933912,-7.469505,-1.339123,4.650513,0.318021,-0.890688,9.088126,8.621686,1.128111,7.023283,5.572653,4.488634,-0.126961,-3.578161,-6.579957,-2.378051,5.963396,5.289279,3.848000,7.820757,-3.984021,-9.110770,-6.526615,2.578092,-0.131776,2.390149,7.950884,9.884033,-3.730817,8.421088,-6.944632,7.297154,-7.696639,1.799964,-5.183462,-7.748538,-4.858088,-9.705106,0.202596,8.116876,-3.100399,5.756994,2.581373,4.980144,-7.778692,-3.391418,-4.132746,4.350474,3.166179,7.079816,5.703423,-6.443431,-5.072504,-4.030169,9.381297,0.864020,-7.379437,7.023208,-6.253060,6.322782,3.870344,6.376437,-2.019111,-1.645155,8.896653,3.399663,7.835164,-6.222203,-3.205989,3.218412,-4.258314,0.380546,-4.885597,-7.698327,5.979508,6.712552,-1.707732,1.922679,2.022722,-7.019017,8.470102,8.911761,4.383147,-7.789524,5.366976,7.694038,2.395186,-6.638729,3.186033,-4.867509,0.992713,3.692652,-6.950472,-0.443561,-4.930352,-2.175904,-6.323644,1.173523,5.731923,1.588301,3.944091,7.633140,6.841914,-0.782712,-5.088367,2.930085,2.447294,0.908425,2.789773,6.751291,-6.022216,8.863702,-7.156759,0.190166,0.126275,-7.826965,5.751583,2.043796,0.361884,-1.535142,-6.229599,8.165276,-0.207911,8.146451,-9.921989,-6.410749,-7.696381,4.245214,-2.180813,-3.432192,2.495140,-2.630783,-3.972387,9.569426,-4.031066,-1.716201,-3.534742,-0.119240,-4.629513,-0.679625,-5.191297,-0.546270,4.542289,9.549853,-6.331401,7.966335,-6.532105,-8.642808,4.388297,1.078680,9.874864,-6.320435,2.141723,4.459662,-0.595623,6.794714,-5.472159,2.108490,6.685123,9.771696,-8.522913,-5.817903,-4.093582,-6.015354,-0.123048,1.109104,3.648192,0.966851,-6.796244,-6.580679,2.599255,-9.261375,0.576443,0.342177,-1.096565,-1.517150,4.146738,-4.967609,-4.783268,7.660296,-1.869858,-0.116708,-7.611568,-2.925195,-1.280524,5.919932,-0.928808,5.956539,9.828881,5.503687,3.790812,-5.232278,-6.529008,3.696144,5.295570,1.592186,9.499988,0.130778,-8.961940,0.654070,0.473259,-3.221752,-7.196239,5.233844,-8.383626,9.804226,2.362407,-5.986385,-0.406399,-0.688652,-1.982900,3.775159,3.776981,6.500986,6.260240,8.162747,9.771708,-8.486774,4.177458,3.023085,-5.521097,-5.977429,-1.480838,4.185978,-9.555900,4.672424,-2.264771,-1.353818,7.354256,1.365792,-6.822699,5.147031,-5.650071,0.416459,-3.349009,9.125648,-5.526806,-8.893784,-5.127987,0.692930,2.018140,3.266645,-5.668088,0.594195,4.986675,-2.568833,0.047324,6.642638,3.194876,-4.633422,3.520513,0.701829,4.499029,-2.255089,6.660187,-5.352806,-1.720861,-9.283550,2.444133,6.799663,-9.180964,1.294229,2.883300,7.850402,8.499575,-0.429382,5.422594,-1.312446,5.830787,-2.670970,4.989823,8.555849,-5.349400,-4.807041,-9.185730,-2.283007,8.072404,-3.155028,-1.592241,1.006376,6.944286,-0.607783,6.530222,0.280246,-8.680170,-8.737732,-8.693573,7.909047,5.406485,2.798005,2.605832,5.569814,4.371585,-4.810907,7.885055,2.747213,5.536478,-6.024803,3.562376,-2.532090,7.142899,1.805951,-7.670085,1.636239,-9.205751,5.713789,-5.276023,-2.335825,2.599302,-5.691199,-3.297863,3.222426,4.872460,6.222582,-5.258887,-7.717177,-4.686451,9.353725,7.601020,-8.750276,3.004935,1.921669,-8.170631,5.476846,-4.026121,0.592072,-7.647596,2.530721,-6.445182,-8.223502,-4.570100,-4.947291,-0.916026,3.059775,-1.097690,9.709290,-7.456520,-6.517112,-0.784507,-7.643166,1.645322,5.873287,-4.118100,4.341269,4.543613,1.549195,9.755526,-9.536745,-2.891986,1.488491,-7.841747,-2.260018,6.660792,9.304283,3.824035,0.228912,2.009403,-2.326385,4.622350,-7.121692,0.658756,-7.828779,-4.747210,-0.688866,-2.763796,3.410169,-8.636571,8.521289,-0.092151,1.636140,-6.086844,-8.627780,8.623839,-6.146476,7.604537,-2.865402,-3.119823,1.270484,7.072860,9.488880,9.282515,-8.972218,8.968674,4.815674,5.203579,9.403629,9.065386,7.841363,-3.677181,3.585156,8.837224,-7.521298,-8.224829,-6.511450,8.178893,-8.579276,-7.115678,-1.092230,-0.177064,-3.970050,-8.363053,-0.939173,5.784248,-8.293004,0.691622,9.570081,8.782812,-7.460247,4.442397,-1.774551,5.449874,4.020302,0.261116,9.905213,-9.173027,7.588045,8.139956,-5.630263,-7.652235,-7.034754,2.710456,-9.009920,3.336106,-7.552726,1.472879,2.685230,1.943997,-9.220727,-6.217496,1.769479,4.539463,8.528606,-5.964919,-0.430759,-9.082336,-7.350820,-5.984717,5.976713,7.458563,1.387502,-0.902309,2.707647,5.188040,-6.826658,0.118565,-7.699837,4.845168,5.078761,-0.916824,-7.342308,-7.172429,-2.001031,0.325409,-9.691292,5.306586,2.699845,-9.233750,-9.909433,-6.998588,2.970452,-8.246017,8.246813,4.129320,5.504959,-6.068820,3.221526,-3.187860,5.070910,4.672968,-2.018622,8.731000,-0.396114,8.646769,-3.494192,8.317939,5.187136,7.612687,1.993727,-4.161714,-9.420694,-7.887169,5.408550,9.509948,-8.505710,5.157328,-8.464318,-4.395694,-6.330402,9.429195,-3.329132,3.659652,-6.135220,-9.647966,3.261120,-7.554213,8.425022,3.505547,9.431142,0.282755,1.600129,-9.079650,-7.541246,-0.902584,-4.661693,8.372908,8.333287,4.844962,1.823320,4.261314,-0.545933,0.129475,2.360772,-5.390603,7.374837,-8.057284,-7.283365,-6.294264,-2.137599,-0.310102,-9.260790,8.342389,-2.289379,6.671975,-8.712116,-3.108655,-5.324590,-6.803244,8.093944,-1.488457,-8.447432,6.053467,-7.527098,1.406418,8.923770,7.599602,2.618702,4.460413,9.326669,-6.686791,3.011843,-7.296093,-0.299281,6.634569,-8.359430,-0.306402,6.012002,6.278923,-7.934163,-8.072172,-7.551593,4.139462,-8.603486,8.599340,-8.412685,1.911252,8.537715,8.968732,-8.395315,7.735285,1.272540,9.245286,0.877531,-7.007487,-4.183357,4.121017,-9.196185,-6.450369,7.350046,4.736830,4.561338,-1.508300,-1.828301,-3.711901,-9.626576,5.762431,-9.888168,-9.686610,-6.703847,4.393991,1.684611,4.047103,1.054499,-0.766507,-0.948468,-6.623710,-2.100875,-1.529583,7.160081,0.190425,-4.334661,5.934579,-0.725232,-3.446474,-4.424393,2.196754,3.932151,4.477776,-3.984206,9.214712,5.269983,0.634095,-7.430444,0.637596,-2.419795,-1.215069,1.936427,8.740145,9.231279,-8.518535,8.875925,-6.017546,3.710490,-4.061241,3.699032,-8.452884,7.757422,8.156254,8.402333,8.874817,7.715361,-2.604468,3.397860,-3.564819,8.653276,-5.607315,-4.584120,3.994287,2.021156,-7.609685,-9.228751,0.476014,-0.610886,3.771231,3.347026,5.916525,-6.604705,-2.641026,-7.357409,3.736835,0.671905,-8.832936,-9.219758,9.350355,3.177130,-9.239143,-1.253267,-7.293309,-1.757322,-2.992792,-6.039751,4.027200,4.086352,7.528568,-6.271459,-2.532061,-3.025308,-2.328180,-7.416971,-9.792258], dtype = "float64")#candidate|7548|(1650,)|const|float64
call_7547 = func_2024_call(relay.reshape(const_7548.astype('float64'), [15, 10, 11]))
call_7549 = func_2024_call(relay.reshape(const_7548.astype('float64'), [15, 10, 11]))
func_2806_call = mod.get_global_var('func_2806')
func_2808_call = mutated_mod.get_global_var('func_2808')
call_7564 = relay.TupleGetItem(func_2806_call(), 2)
call_7565 = relay.TupleGetItem(func_2808_call(), 2)
output = relay.Tuple([call_7533,call_7547,const_7548,call_7564,])
output2 = relay.Tuple([call_7534,call_7549,const_7548,call_7565,])
func_7604 = relay.Function([], output)
mod['func_7604'] = func_7604
mod = relay.transform.InferType()(mod)
output = func_7604()
func_7605 = relay.Function([], output)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_7661 = func_2784_call()
call_7662 = func_2784_call()
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_7669 = relay.TupleGetItem(func_3227_call(), 0)
call_7670 = relay.TupleGetItem(func_3228_call(), 0)
output = relay.Tuple([call_7661,call_7669,])
output2 = relay.Tuple([call_7662,call_7670,])
func_7671 = relay.Function([], output)
mod['func_7671'] = func_7671
mod = relay.transform.InferType()(mod)
mutated_mod['func_7671'] = func_7671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7671_call = mutated_mod.get_global_var('func_7671')
call_7672 = func_7671_call()
output = call_7672
func_7673 = relay.Function([], output)
mutated_mod['func_7673'] = func_7673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3678_call = mod.get_global_var('func_3678')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_7794 = func_3678_call()
call_7795 = func_3678_call()
func_4590_call = mod.get_global_var('func_4590')
func_4594_call = mutated_mod.get_global_var('func_4594')
var_7800 = relay.var("var_7800", dtype = "bool", shape = (70,))#candidate|7800|(70,)|var|bool
var_7801 = relay.var("var_7801", dtype = "int32", shape = (60, 2))#candidate|7801|(60, 2)|var|int32
call_7799 = relay.TupleGetItem(func_4590_call(relay.reshape(var_7800.astype('bool'), [2, 7, 5]), relay.reshape(var_7801.astype('int32'), [120,]), ), 3)
call_7802 = relay.TupleGetItem(func_4594_call(relay.reshape(var_7800.astype('bool'), [2, 7, 5]), relay.reshape(var_7801.astype('int32'), [120,]), ), 3)
func_6412_call = mod.get_global_var('func_6412')
func_6415_call = mutated_mod.get_global_var('func_6415')
const_7839 = relay.const([[5,5,9,-4,-3,9,8,-1,-6,-10,6,-9],[-3,-8,7,4,-6,-3,-8,-7,10,3,1,-10],[-9,-6,-10,-5,-8,-3,-3,-8,8,3,8,9],[5,5,7,2,8,10,-3,-2,-8,-5,-1,-1],[6,-7,3,6,1,3,-9,-4,1,2,9,-2],[-8,-1,1,8,-5,6,4,-5,3,2,10,-6],[10,-2,3,-9,10,2,9,3,-8,1,10,4],[1,-5,2,10,1,-2,-6,7,-10,-9,10,2],[-2,-9,-6,-8,-9,-7,-4,4,9,-2,-8,10],[10,4,3,10,-8,10,2,-2,-10,-3,-6,-10],[2,7,-2,5,-8,4,6,9,-2,1,-6,6],[-1,-10,3,-9,5,4,-3,-9,-1,-2,-8,-4],[-9,-6,-7,-1,-1,-5,-5,1,10,-7,-6,4],[1,6,-7,10,5,-3,10,1,6,-6,-10,-1],[4,-3,-4,10,5,5,-6,9,2,-4,-5,6],[10,-2,-10,-1,1,-5,-3,10,-2,-1,9,2],[10,-6,2,6,-3,-2,-3,7,9,1,-8,-1],[6,-1,-9,-10,8,4,7,3,10,5,8,-9],[6,10,-1,-6,-10,3,1,-8,9,-10,4,8],[-9,-7,-5,-6,6,-6,-5,-5,-1,-4,-2,-1],[8,7,5,6,-8,-10,1,5,10,-6,8,-1],[8,1,-2,10,6,-2,5,-2,2,8,-8,1],[-8,4,-8,5,2,7,8,4,7,2,3,-4],[8,8,-7,-5,-6,1,5,10,-1,3,-6,-3]], dtype = "int32")#candidate|7839|(24, 12)|const|int32
call_7838 = relay.TupleGetItem(func_6412_call(relay.reshape(const_7839.astype('int32'), [288,])), 1)
call_7840 = relay.TupleGetItem(func_6415_call(relay.reshape(const_7839.astype('int32'), [288,])), 1)
func_4680_call = mod.get_global_var('func_4680')
func_4683_call = mutated_mod.get_global_var('func_4683')
call_7841 = relay.TupleGetItem(func_4680_call(relay.reshape(const_7839.astype('int32'), [288,])), 3)
call_7842 = relay.TupleGetItem(func_4683_call(relay.reshape(const_7839.astype('int32'), [288,])), 3)
output = relay.Tuple([call_7794,call_7799,var_7800,var_7801,call_7838,const_7839,call_7841,])
output2 = relay.Tuple([call_7795,call_7802,var_7800,var_7801,call_7840,const_7839,call_7842,])
func_7851 = relay.Function([var_7800,var_7801,], output)
mod['func_7851'] = func_7851
mod = relay.transform.InferType()(mod)
var_7852 = relay.var("var_7852", dtype = "bool", shape = (70,))#candidate|7852|(70,)|var|bool
var_7853 = relay.var("var_7853", dtype = "int32", shape = (60, 2))#candidate|7853|(60, 2)|var|int32
output = func_7851(var_7852,var_7853,)
func_7854 = relay.Function([var_7852,var_7853,], output)
mutated_mod['func_7854'] = func_7854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7902 = relay.var("var_7902", dtype = "int8", shape = ())#candidate|7902|()|var|int8
const_7903 = relay.const([[[9],[8],[1],[-2],[7],[5],[-6],[-4],[-10],[10],[4],[-7],[-3],[4]],[[-7],[-1],[10],[-6],[-5],[3],[10],[4],[1],[-6],[3],[-7],[1],[9]],[[-8],[-7],[9],[3],[7],[10],[10],[4],[1],[3],[-5],[3],[4],[-6]],[[3],[-2],[-2],[5],[-6],[1],[-2],[5],[-6],[9],[8],[1],[2],[1]],[[3],[2],[5],[-6],[2],[6],[-4],[1],[-10],[5],[5],[5],[-7],[-7]],[[10],[6],[7],[9],[3],[-7],[-9],[-2],[2],[8],[-10],[-9],[-8],[-8]],[[-3],[-3],[-5],[6],[8],[-2],[-5],[5],[-3],[-8],[10],[10],[10],[5]],[[-6],[-2],[-10],[-9],[5],[-4],[5],[1],[6],[3],[-2],[-8],[-6],[2]],[[-8],[3],[-10],[10],[-9],[2],[6],[-6],[-4],[10],[-4],[9],[3],[-10]]], dtype = "int8")#candidate|7903|(9, 14, 1)|const|int8
bop_7904 = relay.equal(var_7902.astype('bool'), const_7903.astype('bool')) # shape=(9, 14, 1)
func_3976_call = mod.get_global_var('func_3976')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_7918 = relay.TupleGetItem(func_3976_call(), 0)
call_7919 = relay.TupleGetItem(func_3978_call(), 0)
func_4366_call = mod.get_global_var('func_4366')
func_4368_call = mutated_mod.get_global_var('func_4368')
var_7931 = relay.var("var_7931", dtype = "int32", shape = (252,))#candidate|7931|(252,)|var|int32
call_7930 = relay.TupleGetItem(func_4366_call(relay.reshape(var_7931.astype('int32'), [252,])), 1)
call_7932 = relay.TupleGetItem(func_4368_call(relay.reshape(var_7931.astype('int32'), [252,])), 1)
bop_7951 = relay.greater(bop_7904.astype('bool'), var_7931.astype('bool')) # shape=(9, 14, 252)
func_3886_call = mod.get_global_var('func_3886')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_7957 = relay.TupleGetItem(func_3886_call(), 0)
call_7958 = relay.TupleGetItem(func_3888_call(), 0)
func_5391_call = mod.get_global_var('func_5391')
func_5395_call = mutated_mod.get_global_var('func_5395')
var_7960 = relay.var("var_7960", dtype = "float32", shape = (16, 128))#candidate|7960|(16, 128)|var|float32
call_7959 = relay.TupleGetItem(func_5391_call(relay.reshape(var_7902.astype('float32'), []), relay.reshape(var_7960.astype('float32'), [8, 16, 16]), ), 1)
call_7961 = relay.TupleGetItem(func_5395_call(relay.reshape(var_7902.astype('float32'), []), relay.reshape(var_7960.astype('float32'), [8, 16, 16]), ), 1)
output = relay.Tuple([call_7918,call_7930,bop_7951,call_7957,call_7959,var_7960,])
output2 = relay.Tuple([call_7919,call_7932,bop_7951,call_7958,call_7961,var_7960,])
func_7986 = relay.Function([var_7902,var_7931,var_7960,], output)
mod['func_7986'] = func_7986
mod = relay.transform.InferType()(mod)
mutated_mod['func_7986'] = func_7986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7986_call = mutated_mod.get_global_var('func_7986')
var_7988 = relay.var("var_7988", dtype = "int8", shape = ())#candidate|7988|()|var|int8
var_7989 = relay.var("var_7989", dtype = "int32", shape = (252,))#candidate|7989|(252,)|var|int32
var_7990 = relay.var("var_7990", dtype = "float32", shape = (16, 128))#candidate|7990|(16, 128)|var|float32
call_7987 = func_7986_call(var_7988,var_7989,var_7990,)
output = call_7987
func_7991 = relay.Function([var_7988,var_7989,var_7990,], output)
mutated_mod['func_7991'] = func_7991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2526_call = mod.get_global_var('func_2526')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_8033 = relay.TupleGetItem(func_2526_call(), 0)
call_8034 = relay.TupleGetItem(func_2528_call(), 0)
func_7124_call = mod.get_global_var('func_7124')
func_7126_call = mutated_mod.get_global_var('func_7126')
call_8045 = func_7124_call()
call_8046 = func_7124_call()
uop_8048 = relay.acos(call_8033.astype('float32')) # shape=(2, 7, 5)
uop_8050 = relay.acos(call_8034.astype('float32')) # shape=(2, 7, 5)
func_7986_call = mod.get_global_var('func_7986')
func_7991_call = mutated_mod.get_global_var('func_7991')
const_8052 = relay.const(1, dtype = "int8")#candidate|8052|()|const|int8
var_8053 = relay.var("var_8053", dtype = "int32", shape = (252,))#candidate|8053|(252,)|var|int32
const_8054 = relay.const([5.670044,9.968513,-8.656480,4.437434,-5.843139,-9.089464,-3.379172,-8.422601,8.033991,5.073389,1.163770,4.769279,-3.872649,-0.175394,-0.590679,-1.515583,-2.255514,0.317781,-1.038406,-8.035630,-1.298167,-3.108592,-6.208559,-8.962886,-0.870799,-3.253164,-5.872008,-7.964138,-0.378806,-1.870671,-1.801355,-4.282942,-7.510398,3.176984,-3.406933,-3.234699,-1.696638,-3.836114,5.326645,-2.030523,-7.030066,7.890506,1.294824,7.338142,7.996305,-6.381705,4.057899,-5.052426,-4.256235,-2.892480,-0.562850,3.970205,6.038066,2.167533,-9.375274,-6.150621,-2.355450,6.787941,7.852520,5.979050,-6.546066,6.921489,-4.627234,5.651700,3.189059,-4.661991,-0.449433,4.403438,2.517434,8.718658,-0.839399,-7.010333,6.891615,-6.961957,6.031122,9.895595,4.505303,2.991212,6.123180,-5.362254,-0.323818,-3.629259,-0.709945,-5.693069,-0.043977,0.440511,7.194456,0.957701,8.745130,-9.151047,-1.296808,-8.574572,-7.730577,1.847244,5.587007,-9.305476,-0.606900,-3.930010,-8.616398,-5.046182,-1.924993,-2.438972,-2.024042,2.000740,2.786742,-4.092886,4.512487,-6.356517,-3.001470,2.165543,3.133447,3.085437,-5.733245,8.082081,-8.817088,6.602058,2.230396,-9.674743,-2.437545,-6.029548,1.745905,3.780024,8.006324,-9.943235,0.165698,3.611923,-5.473319,9.265969,7.946445,1.030929,-2.950063,-6.785279,-0.093855,2.029350,-3.795398,1.048627,-8.233543,9.669973,-8.206108,6.709935,8.580424,-1.500915,6.850721,8.956487,-2.626729,-6.234571,5.374115,2.903251,-6.825273,-5.410763,-2.764931,-3.955476,-1.019300,-2.449112,-4.720497,8.157558,6.039983,5.240759,2.572256,8.287668,3.277649,-8.127781,-5.259688,3.420450,5.073357,-1.329124,3.899885,-0.207341,-5.088903,-4.274145,1.862065,-0.361687,3.488547,6.485862,-8.217074,2.649785,5.170078,0.029832,5.720541,-3.858269,-2.264543,-0.254303,2.580117,-4.677285,6.053723,-4.078899,-3.967484,4.173041,-5.542900,-4.398929,0.496365,5.996392,7.665722,7.371552,8.923650,6.027762,-6.044489,7.450728,5.764223,0.145631,-7.461600,2.775291,-7.730298,-3.373002,6.420727,-3.884803,-0.972384,2.341341,-6.999545,-5.060396,-9.088428,1.351809,6.006509,9.954524,-2.334344,-5.809372,-2.617701,0.558309,-8.584080,-5.427512,-6.532494,1.901641,-2.939508,3.151351,3.819911,-5.412488,7.181996,-1.300795,-4.851380,9.441010,-2.132410,5.447075,5.688170,6.374916,-4.498581,-8.132543,-9.483195,-0.152462,-1.775220,5.939703,4.419810,-9.022624,-5.127686,-2.868554,-3.744185,2.113566,1.092884,4.790104,-4.398008,-6.917204,-0.459699,2.034837,-7.493107,3.296547,4.141351,-3.213503,-4.980669,-2.726050,9.057138,8.668861,-4.090415,-1.371506,8.803526,8.444175,1.581357,9.699624,-9.145396,-1.923363,-6.187754,1.938553,4.163787,-7.772451,-6.078105,-5.163932,5.992603,3.327147,-9.869614,8.282377,-2.156638,1.558521,2.352428,8.650763,-8.067793,-7.915803,-5.633138,-0.972640,-0.577849,2.514388,9.056338,-7.510172,-1.711456,7.088450,-5.061563,-6.159001,8.788463,-0.066443,-2.359484,-8.747997,3.562482,3.231306,-1.992483,6.019930,7.555202,-2.665947,-5.693981,4.844464,-8.814489,-8.866557,-7.978377,2.707553,-0.532942,-4.785859,-7.706989,4.444428,3.974933,5.123938,8.218654,-8.159166,9.181823,9.288081,-1.369281,-1.387404,6.146050,3.815627,-7.082863,6.097329,-4.927957,0.939444,-8.419625,-1.756337,-5.893045,-1.676388,3.229887,-2.706629,2.010553,-2.541362,-0.680331,-3.533178,6.693635,7.798318,2.040761,2.785551,-7.399193,-5.744065,4.794275,5.613893,-6.276836,1.117645,-2.535661,-8.286111,-0.744443,9.730025,-4.101698,-1.030346,2.327675,1.174012,6.238765,-5.997180,4.293727,-2.380865,-7.052507,-9.968701,0.242240,-3.432995,9.944807,6.513031,1.407950,1.010272,2.928590,-5.056435,1.236305,3.653008,-3.924558,5.297896,-3.219079,-2.441535,6.237459,0.362351,8.150736,-9.456226,-8.949664,-4.657120,7.311136,2.182279,6.807590,7.374155,8.771139,8.348333,8.319902,-8.381268,3.645983,-9.553523,5.215086,1.513220,1.815352,-6.622391,-5.580723,5.619421,-4.582755,-8.583520,-5.639219,-7.646324,-9.653303,7.861328,-0.767045,7.697213,9.071805,-7.699755,3.230795,2.281876,-3.895623,-7.925678,-3.334049,-6.734372,2.688628,-6.959056,-5.817344,5.543510,7.710912,-5.677930,-6.161262,2.454138,1.946113,4.261208,1.233896,4.457678,-8.031239,-4.023575,-2.780113,2.329866,4.825433,8.914672,-4.484203,-6.174682,-9.528135,-7.061641,-5.113826,-1.963827,1.471841,-1.800498,-0.673132,-0.163896,-7.317224,3.255850,1.151257,-1.957277,-1.952869,8.874833,-3.303786,-2.846431,-7.531889,-6.624993,-1.859910,3.938706,-0.890287,0.856355,3.591680,2.075129,-3.291566,-0.815506,2.322607,4.170655,7.499292,-2.686267,-4.367152,-9.496517,6.579336,-5.024639,3.937617,-1.117513,3.927258,-9.670313,0.236004,-8.153048,-3.206773,-7.326310,4.652144,6.352245,-1.888669,8.450338,3.018551,2.204371,-1.969904,-7.491474,9.290225,3.689947,-4.960537,-1.946002,7.049075,-9.518678,0.859139,6.294196,-5.314307,9.963012,-9.859218,9.235001,-6.177799,3.714818,-8.929857,-3.233749,-3.712147,6.149479,2.810719,-8.813309,-6.477045,-0.146147,9.420417,9.830476,3.906731,-9.367161,1.379934,5.899711,5.129014,-1.371429,-7.663196,9.066568,-9.108696,-9.984575,-9.593291,-2.280531,0.577920,2.791218,-5.838245,-6.079164,5.034549,7.989371,-9.342276,6.921684,4.894341,-3.380893,-1.133188,-6.546579,-6.693887,1.359947,-5.744887,2.062854,-3.005710,-5.722318,7.006615,-3.230721,-6.311050,8.551845,-2.760701,-5.888527,-1.379681,-5.992486,-2.110668,0.852582,7.991121,-6.404706,-5.720383,8.754063,-0.723314,0.703884,-9.414223,-2.038505,-1.276399,3.758226,-7.758123,-0.594784,-4.192076,-4.547001,-5.702690,8.989140,-3.347663,9.646858,-1.123510,6.319147,-3.261304,-1.158000,0.971392,8.539287,7.022661,-4.363569,-1.657740,-0.243704,2.623419,-8.081588,0.031286,7.579752,8.092063,-9.806979,7.653653,-7.777296,3.201681,-5.050420,6.148244,-5.862854,0.531118,5.202477,2.639323,-7.059158,-9.503987,-5.617660,4.439256,0.964011,-0.656504,-3.236345,0.757766,-6.730837,6.439454,1.230305,-5.195517,6.774772,9.303627,-7.583429,9.276189,9.914843,6.815336,0.009423,-6.050138,5.678427,-8.341655,-1.181449,-1.516178,-9.676282,-3.458718,-3.951814,8.573737,-9.397385,-3.969407,-1.626926,1.841753,1.622233,7.331134,6.698486,6.380995,9.969650,-5.112182,-7.345907,-6.072776,4.076652,-4.850086,1.726073,8.498612,-3.337905,-9.330817,3.786240,2.636711,-3.777331,2.088273,-3.608473,-5.214980,1.159136,9.004919,0.265631,-8.369736,-1.717119,9.091756,9.423386,5.230666,-5.119631,-2.964640,-7.173260,8.109007,-0.679749,-4.592121,7.534809,-9.025516,-5.337434,-1.145427,1.753104,-5.961402,-8.930521,-6.796997,-5.493903,0.389394,7.827456,1.309893,7.548881,0.937574,6.706016,-4.857056,-7.369231,5.118940,9.495196,3.680594,5.015825,-5.625153,5.407715,2.939166,6.279838,-3.817653,-5.809224,-7.992418,-2.003965,0.325718,3.964493,0.390135,5.964413,-8.780951,-4.061111,8.952449,8.423817,1.615351,-6.312141,8.801665,-3.070226,8.954516,3.489439,-5.188350,3.626850,0.685360,-9.294960,-4.417162,-8.433588,-6.433247,-1.269177,-3.489321,9.968409,-1.482184,-6.852409,2.530497,-5.413300,8.501085,-2.266218,7.614593,0.461704,6.841971,1.466571,0.400146,-0.292118,7.667081,-4.297562,5.048828,2.369930,3.373070,6.284646,-1.503922,0.531219,5.358035,-6.698634,4.117969,6.869728,7.622103,9.843379,-0.467228,-8.826784,-7.264238,8.005121,-9.381665,-3.732796,-0.389838,4.623613,4.007486,-9.619411,-9.492758,9.007908,2.445635,-0.191111,-6.804101,6.716162,-6.877991,-9.897394,-9.155864,-3.462896,-4.033313,0.554638,-9.221954,-8.144483,5.392673,-7.565960,2.411991,-7.009393,-1.369400,4.368374,-8.544989,-8.204700,-1.746961,5.514245,-9.012622,8.214507,-9.995497,-9.271103,2.243576,-2.788769,5.957546,1.116511,6.593813,0.057332,-9.456192,-7.311541,-1.162505,4.522288,2.054571,9.899692,-7.348674,-0.944392,6.862899,8.065729,0.191705,-0.147203,-1.824732,0.810229,9.345206,-1.172871,8.034508,-9.613469,0.376124,-2.547009,-9.439175,-6.250669,0.079963,-7.346779,6.410503,2.801230,9.883147,-6.889726,8.634268,7.399728,-8.179347,9.306457,-2.244003,8.333458,4.183693,-0.141479,-7.239277,8.254080,-2.358310,-7.283882,8.152175,-4.471482,8.538739,2.295165,5.094037,6.368667,-5.251023,3.540540,-8.585127,-4.122398,5.695197,-8.063101,5.268034,3.239701,3.954189,-1.107330,5.412135,2.827479,9.533636,-8.831968,-8.748701,-4.553037,-0.999015,7.715950,1.233988,-0.229959,8.488445,-1.166489,-3.849029,-4.424916,9.716412,1.194264,3.710513,-4.157612,1.077138,3.354918,-7.232365,-0.758299,-0.567079,-1.336877,1.946384,-4.882416,6.078881,9.794849,-4.255904,9.080933,-8.657677,-4.895193,3.031110,-8.228522,9.022994,-4.754546,-9.138887,-2.829810,1.962082,-6.152316,-4.803246,1.870281,8.388874,5.300849,-5.595278,2.178325,2.853202,-6.350155,-5.188244,3.212244,2.567332,-0.666577,-5.170063,-3.780460,4.922999,-1.517482,7.204385,8.042692,9.845596,-5.704032,5.176248,-1.484139,9.264745,3.711770,-5.758454,-2.850582,3.584395,2.904135,4.138784,5.704036,-6.113489,-5.435947,2.476631,-5.992026,9.715919,-6.298870,-5.065934,5.732544,8.887418,-5.170860,-3.243763,5.083816,4.035962,7.288452,-9.593188,0.651383,8.043517,-6.545591,0.634126,8.428033,9.287673,1.206614,-1.161069,-9.641372,4.793062,4.985438,1.357208,6.376622,5.504471,4.558822,5.284098,-9.204977,1.945808,5.858480,5.941969,9.574749,-5.950818,4.102667,9.357533,7.605331,-8.681343,-1.653380,1.937846,-6.848101,0.279212,3.867771,-8.096985,0.401594,-7.204074,-8.574234,6.022392,5.413743,-0.320587,-7.057805,-6.858580,-9.337578,4.040531,-1.312535,2.250749,6.617079,-2.192246,8.075286,3.465601,-0.586274,-7.457690,7.451655,-6.802584,6.365773,7.654232,6.388628,1.191799,-8.793587,-5.109687,-8.946564,1.175206,-9.855596,-1.584796,-1.576782,-0.702611,4.396705,2.920056,-4.451366,2.100592,-9.586783,-0.500791,-6.496213,-7.729803,-4.160657,4.823063,-1.874584,-9.461847,5.788554,-2.294916,-8.044824,-6.838752,2.362248,7.131506,-8.396160,-6.654232,4.896411,-6.528470,-1.635085,3.370176,2.095286,8.019646,7.550451,6.154093,-1.152534,7.086470,-7.745327,2.053264,9.524968,-5.639067,6.867129,8.889773,4.678822,8.444078,-2.055372,-4.571145,7.523676,3.345613,6.787781,6.113506,-7.829794,2.007486,5.954453,6.211625,9.782957,-6.750196,-9.657767,3.613742,9.833658,4.845321,4.339212,9.326163,-9.646369,-1.942084,2.774096,9.255530,-4.384277,2.368158,8.139013,-1.105262,-2.224056,-6.543658,-1.552599,-9.930413,-3.094384,5.792848,8.557372,-9.081956,5.294795,9.281966,2.719400,2.932484,7.431805,9.911445,8.465082,1.275773,-4.276722,-0.286827,-1.861308,-2.032742,-9.254763,-7.249012,-0.017374,9.791967,1.016670,1.444237,-3.391174,-9.025846,4.561973,-4.190470,-2.550841,-6.257736,1.796245,4.211299,3.040707,-8.841661,-6.482916,6.360196,-0.844837,-4.480265,2.798358,-3.096776,-7.850882,-9.238386,-1.363636,-3.916409,-1.515585,3.490162,5.007317,1.273103,-5.459545,5.467694,3.778417,6.012063,8.058167,4.436664,6.397940,-5.347227,0.428673,6.405633,-2.012480,-8.850126,-6.172949,-1.450996,-1.700496,-6.094692,-7.926239,7.535445,-2.305276,4.321472,8.672533,3.945897,-6.455166,-5.875667,-0.243539,0.608030,-0.871278,7.730334,5.486447,-0.114034,-9.229793,-5.598519,-2.223000,-8.755033,-8.210025,3.841342,-9.162331,9.292260,-8.761287,-6.717753,3.782326,2.681132,9.426655,5.219123,1.285832,7.671699,-2.470910,-9.114480,0.462023,-0.766908,-7.215062,6.769111,-1.980312,7.539945,5.861622,7.720688,2.548374,-2.889516,1.155300,3.140439,0.495726,-7.393474,-2.846468,8.513370,5.367394,8.868686,1.316175,7.907779,4.762047,-4.239556,-8.263300,-6.404361,2.074822,3.574695,-2.238940,1.080229,6.295384,4.101476,-6.906248,2.903181,-2.249179,0.239416,-5.466564,0.982394,1.137271,-9.786772,1.629249,3.721684,7.982043,-7.003631,3.188363,6.826168,1.992828,-6.223198,4.672173,-5.280939,-3.635529,2.219185,-2.367044,9.896209,0.223785,8.274111,-2.189365,6.204799,8.809193,0.108649,9.490616,4.718725,8.978308,-1.900158,-8.318419,4.658296,-2.947441,8.248594,8.411910,-3.915618,-0.008386,-7.737430,-8.533220,-6.754482,1.357221,-4.083019,-4.690056,3.724836,7.161788,3.391880,-5.666216,-9.012679,8.109488,8.281396,-1.006448,8.650946,-3.301189,4.330605,4.846598,-4.153265,0.191051,6.629910,6.068383,-0.510088,-8.967440,-8.710499,-6.323116,4.514672,-4.475355,-7.518492,-9.401428,9.637507,6.948220,0.083155,-4.002108,4.397161,-7.446530,0.528645,-7.191993,-0.338463,2.648548,0.446204,-4.232241,-0.797752,-7.572304,0.019730,-5.785169,5.154050,-3.935234,6.529137,-4.399855,-4.714131,7.615843,-5.845827,8.992847,1.804639,0.573945,-7.082896,7.739636,-7.835273,-9.572635,0.423062,-4.618344,-4.383327,7.313448,3.471432,7.379234,7.927401,-5.249781,-6.076999,-6.017066,-0.918615,-3.093394,7.889095,8.417986,2.290753,-7.444756,3.559524,5.936274,2.602268,5.655752,5.912918,-4.512271,8.753225,-1.359280,8.259592,8.295266,0.271456,-4.992436,-5.809219,-5.339572,2.081502,-0.016125,-4.395101,8.048599,-8.568580,-3.828811,3.118375,-5.031042,5.859129,-4.727900,-6.805163,7.029917,9.875276,-4.897149,6.912582,-4.962322,1.828591,5.208378,-7.644956,1.989459,0.374215,-2.724708,0.475170,-3.914401,-0.202855,6.122730,-1.323345,-4.967571,-1.898702,6.507070,5.611508,1.304205,-9.650713,-9.052429,9.122585,-4.955643,-2.666630,5.138983,5.558443,-1.362163,-5.921664,-4.129633,-3.251803,-5.427755,-8.014882,1.560918,0.897450,-8.250269,0.630186,7.631619,9.438921,-8.166648,-8.804187,5.090247,2.326550,7.148112,7.436190,-8.385147,-9.458977,-1.620477,4.795095,9.830069,-2.411802,-8.489325,-9.410970,-4.424937,6.114134,5.020762,-1.586598,-5.146458,4.427007,4.823261,1.691569,-1.911224,0.272567,-4.443686,-2.372484,0.734080,-0.680296,7.267062,1.625307,-3.679738,-1.454788,0.827546,-3.989169,-9.939412,2.549519,-1.553373,5.578020,5.907688,4.535951,3.017815,0.833086,7.051273,9.515374,-5.515086,-5.625492,0.597435,2.209135,-4.510691,-1.129047,1.162505,-4.604613,4.377847,-7.076532,-1.242865,-6.113662,-2.499264,2.370935,5.555958,-2.628176,8.181384,-5.276635,9.803482,6.191392,4.610158,-5.307143,-0.635748,-6.707546,-0.073607,-4.941957,5.113728,4.491126,-3.625714,8.514332,7.530687,0.136402,-9.754472,4.140182,7.601200,7.672497,6.657898,2.043932,0.081625,6.224507,3.792294,-7.696363,-5.823924,-8.768096,-1.887951,3.076998,5.065891,0.879087,-6.170824,5.681935,9.618109,4.717305,-5.326852,-8.300358,-7.524951,7.225321,0.426600,-2.219323,9.004872,-5.903374,-3.463956,2.773142,4.097238,-8.845930,-3.467380,7.796376,-5.637254,-7.083946,-2.854065,-3.928579,-5.962521,-4.369714,-5.460174,6.700055,5.348293,5.918245,1.574809,8.447994,0.896887,9.211950,8.228351,-6.401596,3.626846,-0.836004,6.621005,-9.281600,-1.200561,-5.339955,-8.929873,0.213099,3.784268,6.960365,2.725420,7.334649,-4.117034,-1.686261,-5.288863,-8.277254,3.263946,8.369222,9.257299,-7.059958,-8.051133,-1.973167,6.755575,-4.845339,8.120325,8.136874,-5.704236,9.713832,0.130220,-2.069505,-3.847850,5.885653,3.655983,1.043111,1.343352,-0.016774,-4.221138,-7.489840,-3.740631,-9.537726,-6.759138,3.384244,9.901152,-9.657819,-3.346517,-7.567042,9.839126,3.313329,-3.148244,9.247170,-7.808889,8.107796,7.495406,-7.389564,-9.612120,5.295808,0.359602,6.530192,9.720282,9.312236,-1.802234,2.599116,-2.311485,-7.364140,6.250594,-0.848889,8.927937,-2.400544,5.027493,9.787802,2.324945,-4.446973,8.835574,2.435099,0.698864,-2.421829,-9.529536,8.948092,-8.625458,4.518662,-4.591940,-0.986342,6.961885,-7.068256,5.544795,-6.546603,-0.197563,9.490823,-8.504121,-0.780952,-1.766009,0.987352,-8.383625,0.199094,-2.384192,-3.265567,-2.381527,2.858792,1.644274,-8.698231,9.063114,-3.843998,0.721307,2.263818,-2.745852,-6.385407,-9.358901,-9.286127,-9.065955,-5.683213,-7.794025,5.976764,4.408449,2.133989,-4.521050,7.867308,-7.428648,2.458262,-8.353321,-5.684918,5.847612,4.075486,-3.518592,-8.266019,6.640907,-1.318951,-8.070716,-7.122887,-9.791200,-6.827937,8.227489,-4.954451,2.842512,9.994562,-8.209160,2.172103,-3.766533,3.204271,-5.178427,-4.989192,-8.796278,9.789793,-0.403103,-4.070875,3.004687,-4.647010,1.086211,4.868866,-0.672371,-5.300340,-0.666255,-7.220659,-5.679772,6.237865,-1.904478,-3.087981,-7.057503,0.595749,8.606658,7.678945,-4.549864,8.726108,-5.857308,4.212354,9.271580,5.985571,2.952255,5.244262,-5.919409,-6.168711,-5.669360,6.434314,-5.203000,7.193803,1.691925,9.550027,-7.302703,2.127223,5.563715,-7.884080,-9.485029,-3.214022,4.199973,9.409953,-7.840899,-5.060613,-5.822085,-8.325606,-3.635846,-5.364418,-6.692268,-7.007637,-1.227744,-4.331828,-6.149468,-1.764895,-3.354426,-5.921190,-5.170912,4.559128,2.180210,0.464871,-0.890334,-1.042457,-6.366721,-3.180213,-4.962942,3.288356,-9.155413,-6.412997,-9.922219,7.308179,6.836323,9.895069,1.180047,6.092829,-0.320950,-7.969561,-5.218983,-6.223709,9.358947,5.421366,3.574184,-0.427578,-9.991847,-8.130466,4.519921,-0.584083,7.163033,0.454387,-9.311150,8.487609,8.826912,9.095999,-6.891138,-7.296942,-7.444211,-9.602307,5.772986,9.898104,3.308042,-9.711730,6.080492,-1.205687,-5.441263,4.996369,-0.227647,-1.654139,-4.191685,1.518643,0.464769,-2.245903,6.314799,2.757392,3.253299,8.418367,-0.731638,-5.638531,-0.192982,-4.206322,-4.287078,7.222736,-1.262028,-0.564179,-4.574591,4.806332,-6.479498,9.173743,-0.543775,-6.984571,-1.999811,2.294560,5.726835,-4.406095,-8.187814,6.146859,8.054830,0.940189,-6.046914,-7.550584,6.539845,-6.579778,-0.102862,2.490380,-1.658749,-2.059299,4.642803,5.185901,4.988894,-2.814293,-7.748152,-0.963967,8.529202,6.438267,-3.126752,-3.411443,2.885053,8.897191,-7.612290,1.432195,-8.731599,4.854367,5.038637,-1.060986,8.600802,-7.675696,-8.082094,5.107511,-7.229415,1.009984,-4.888228,-2.985381,-5.926811,1.937118,-6.395270,1.775161,7.316428,6.654434,5.807952,6.208216,-6.346709,-9.383432,6.807039,-5.856093,-2.576584,-0.501931,9.049317,8.596069,-1.374579,0.424721,3.840267,5.955594,2.330485,6.301617,-4.968647,0.439634,-1.203613,-4.484845,5.078761,7.949481,-8.421755,9.436242,-2.855233,-5.691290,0.326524,5.701761,-9.921592,6.644602,0.163141,0.111892,-3.188547,1.280134,-1.275297,-6.756355,-0.519779,-6.937967,5.256924,8.008548,-5.969951,-1.472595,2.131510,-0.030390,-7.869784,0.575623,-4.007004,9.704358,-0.433701,8.161791,-8.651732,-0.685667,4.945116,-1.195412,-8.350685,-2.266378,1.426227,9.388689,-7.235019,-3.689904,2.799643,8.183826,-0.729244,-2.970247,5.168692,-8.502875,5.131216,-0.947207,8.659420,1.297501,-2.106627,-7.906798,-4.640480,-0.365719,8.890273,5.975072,8.232605,-4.932732,-8.342710,-4.840944,-1.639865,6.575864,3.128873,-3.553995,-9.183054,3.975782,9.638053,-8.776483,6.538725,-8.925259,-5.807960,7.082777,-7.639421,0.865634,3.990470,-2.625493,-7.135142,1.313988,-1.638687,-2.040183,-2.038715,2.299716,4.184903,8.253341,1.005653,5.626173,-9.040402,5.711182,-1.202511,5.083052,-9.276265,5.637148,4.990462,-3.881713,-7.192242,3.214414,-3.977251,-6.587555,-9.860395,-4.852565,-4.504781,6.475024,0.234825,0.870228,-5.901333,6.343807,6.975418,2.792630,3.885354,-9.023127,3.271916,-2.540942,-4.212853,1.006006,2.899552,-5.850034,-3.856833,-6.124187,-4.570529,9.819546,-3.909046,5.359435,-5.396684,-1.092605,0.218024,7.485516,-3.764059,-8.516072,1.215753,-5.207950,-2.900384,-7.052110,-6.023317,-5.684719,-3.456333,3.784519,-7.109965,-3.581251,-7.041536,-6.690513,7.870786,-6.380979,-4.384785,4.426862,-2.100749,-7.798172,-7.840376,7.603281,9.721540,-8.536593,-1.119526,-2.769337,-5.277161,6.320429,4.039124,-4.619367,3.705730,3.428282,-5.958807,8.977096,-4.464471,8.034828,-3.293454,4.954364,-6.991125,-1.101018,-3.203039,1.150254,2.019256,4.703074,-6.178109,-5.175138,-3.877997,9.947640,-4.728392,3.390059,-5.466816,5.509686,-7.720389,-0.797339,-1.040368,1.669915,2.425355,-1.319299,2.939580,-3.760375,0.252131,5.691796,-3.505873,-4.147434,-8.602851,4.837128,-9.969885,0.127291,2.138132,5.692881,-6.287837,-8.620654,6.515796,8.570426,-1.681689,2.581943,-1.249834,9.649540,7.648736,7.058028,-8.531591,1.476451,7.238605,8.703123,-4.748345,4.434093,6.760672,8.120241,-8.140344,4.428556,-9.508590,-9.622184,7.746634,6.765362,-6.923545,-1.115631,5.296559,6.102860,3.102004,8.377611,-0.542503], dtype = "float32")#candidate|8054|(2048,)|const|float32
call_8051 = relay.TupleGetItem(func_7986_call(relay.reshape(const_8052.astype('int8'), []), relay.reshape(var_8053.astype('int32'), [252,]), relay.reshape(const_8054.astype('float32'), [16, 128]), ), 4)
call_8055 = relay.TupleGetItem(func_7991_call(relay.reshape(const_8052.astype('int8'), []), relay.reshape(var_8053.astype('int32'), [252,]), relay.reshape(const_8054.astype('float32'), [16, 128]), ), 4)
func_3678_call = mod.get_global_var('func_3678')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_8058 = func_3678_call()
call_8059 = func_3678_call()
output = relay.Tuple([call_8045,uop_8048,call_8051,const_8052,var_8053,const_8054,call_8058,])
output2 = relay.Tuple([call_8046,uop_8050,call_8055,const_8052,var_8053,const_8054,call_8059,])
func_8067 = relay.Function([var_8053,], output)
mod['func_8067'] = func_8067
mod = relay.transform.InferType()(mod)
mutated_mod['func_8067'] = func_8067
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8068 = relay.var("var_8068", dtype = "int32", shape = (252,))#candidate|8068|(252,)|var|int32
func_8067_call = mutated_mod.get_global_var('func_8067')
call_8069 = func_8067_call(var_8068)
output = call_8069
func_8070 = relay.Function([var_8068], output)
mutated_mod['func_8070'] = func_8070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6958_call = mod.get_global_var('func_6958')
func_6959_call = mutated_mod.get_global_var('func_6959')
call_8074 = relay.TupleGetItem(func_6958_call(), 0)
call_8075 = relay.TupleGetItem(func_6959_call(), 0)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_8076 = relay.TupleGetItem(func_3451_call(), 0)
call_8077 = relay.TupleGetItem(func_3453_call(), 0)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_8085 = func_3172_call()
call_8086 = func_3172_call()
func_3769_call = mod.get_global_var('func_3769')
func_3773_call = mutated_mod.get_global_var('func_3773')
const_8098 = relay.const([5,5,6,3,3,1,6,-4,7,-5,6,-1,4,10,-10,-7,-10,7,10,-5,6,6,-10,-8,-2,1,7,-8,-5,-8,5,10,-10,9,-8,4,-4,6,9,-2,-9,1,-7,6,9,-7,-1,-8,-3,-2,-5,5,-5,5,4,-6,-10,-10,6,-9,2,-9,-2,-6,8,-7,4,-2,10,-4,-5,-9,5,-2,-7,-8,-4,4,6,2,-7,6,-9,-10,-8,-7,-5,7,-8,-3,-9,-4,5,-10,7,6,-9,3,3,-8,10,-3,2,6,-1,6,7,-3,-9,5,7,10,-6,-5,-8,1,10,4,-5,3], dtype = "int32")#candidate|8098|(120,)|const|int32
const_8099 = relay.const([[-9,-9,3,4,7,-7,7,-3,5,-7,-7],[-9,1,-10,9,-5,4,9,-1,-9,-7,1],[-8,-2,-8,10,-8,-2,8,7,8,10,-9],[-1,-1,7,7,-3,6,-8,2,2,6,9],[5,-3,-2,-3,3,-9,6,-2,8,8,9],[-8,3,-1,3,-2,7,-9,2,8,-8,8],[5,-5,-5,4,-8,-5,2,1,-5,2,-10],[-1,-5,-8,7,6,-5,-4,-5,-4,-1,-5],[4,-8,9,-1,5,3,-4,-2,6,3,-1],[4,7,1,7,-3,-2,-10,-5,1,-4,9],[-5,8,-10,-7,-10,-9,8,-5,7,-6,10],[-9,-6,4,-7,5,-3,5,4,6,-2,-10],[-6,5,-2,-2,6,9,4,-9,4,2,7]], dtype = "int16")#candidate|8099|(13, 11)|const|int16
call_8097 = relay.TupleGetItem(func_3769_call(relay.reshape(const_8098.astype('int32'), [12, 5, 2]), relay.reshape(const_8098.astype('int32'), [12, 5, 2]), relay.reshape(const_8099.astype('int16'), [143,]), ), 8)
call_8100 = relay.TupleGetItem(func_3773_call(relay.reshape(const_8098.astype('int32'), [12, 5, 2]), relay.reshape(const_8098.astype('int32'), [12, 5, 2]), relay.reshape(const_8099.astype('int16'), [143,]), ), 8)
output = relay.Tuple([call_8074,call_8076,call_8085,call_8097,const_8098,const_8099,])
output2 = relay.Tuple([call_8075,call_8077,call_8086,call_8100,const_8098,const_8099,])
func_8101 = relay.Function([], output)
mod['func_8101'] = func_8101
mod = relay.transform.InferType()(mod)
output = func_8101()
func_8102 = relay.Function([], output)
mutated_mod['func_8102'] = func_8102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7604_call = mod.get_global_var('func_7604')
func_7605_call = mutated_mod.get_global_var('func_7605')
call_8103 = relay.TupleGetItem(func_7604_call(), 1)
call_8104 = relay.TupleGetItem(func_7605_call(), 1)
output = relay.Tuple([call_8103,])
output2 = relay.Tuple([call_8104,])
func_8111 = relay.Function([], output)
mod['func_8111'] = func_8111
mod = relay.transform.InferType()(mod)
mutated_mod['func_8111'] = func_8111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8111_call = mutated_mod.get_global_var('func_8111')
call_8112 = func_8111_call()
output = call_8112
func_8113 = relay.Function([], output)
mutated_mod['func_8113'] = func_8113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_8158 = func_2170_call()
call_8159 = func_2170_call()
func_6226_call = mod.get_global_var('func_6226')
func_6229_call = mutated_mod.get_global_var('func_6229')
var_8175 = relay.var("var_8175", dtype = "float64", shape = (2002,))#candidate|8175|(2002,)|var|float64
call_8174 = relay.TupleGetItem(func_6226_call(relay.reshape(var_8175.astype('float64'), [1, 2002])), 0)
call_8176 = relay.TupleGetItem(func_6229_call(relay.reshape(var_8175.astype('float64'), [1, 2002])), 0)
func_4590_call = mod.get_global_var('func_4590')
func_4594_call = mutated_mod.get_global_var('func_4594')
var_8181 = relay.var("var_8181", dtype = "int32", shape = (120,))#candidate|8181|(120,)|var|int32
call_8180 = relay.TupleGetItem(func_4590_call(relay.reshape(call_8158.astype('bool'), [2, 7, 5]), relay.reshape(var_8181.astype('int32'), [120,]), ), 5)
call_8182 = relay.TupleGetItem(func_4594_call(relay.reshape(call_8158.astype('bool'), [2, 7, 5]), relay.reshape(var_8181.astype('int32'), [120,]), ), 5)
output = relay.Tuple([call_8158,call_8174,var_8175,call_8180,var_8181,])
output2 = relay.Tuple([call_8159,call_8176,var_8175,call_8182,var_8181,])
func_8191 = relay.Function([var_8175,var_8181,], output)
mod['func_8191'] = func_8191
mod = relay.transform.InferType()(mod)
mutated_mod['func_8191'] = func_8191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8191_call = mutated_mod.get_global_var('func_8191')
var_8193 = relay.var("var_8193", dtype = "float64", shape = (2002,))#candidate|8193|(2002,)|var|float64
var_8194 = relay.var("var_8194", dtype = "int32", shape = (120,))#candidate|8194|(120,)|var|int32
call_8192 = func_8191_call(var_8193,var_8194,)
output = call_8192
func_8195 = relay.Function([var_8193,var_8194,], output)
mutated_mod['func_8195'] = func_8195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7604_call = mod.get_global_var('func_7604')
func_7605_call = mutated_mod.get_global_var('func_7605')
call_8197 = relay.TupleGetItem(func_7604_call(), 0)
call_8198 = relay.TupleGetItem(func_7605_call(), 0)
func_3424_call = mod.get_global_var('func_3424')
func_3428_call = mutated_mod.get_global_var('func_3428')
const_8201 = relay.const([-2.581558,-3.331093,-1.011651,-7.135185,8.516388,4.078365,7.274957,2.298577,-9.304704,-8.880174,-6.578581,-6.745518,-6.127454,7.951084,-4.992159,8.401546,6.544665,-7.927298,-8.305928,2.665840,-6.532469,3.505109,0.007867,-5.522886,-0.019675,-3.167064,5.340317,-5.623870,9.468230,4.072103,-0.821632,4.686064,8.053352,5.937022,-3.583702,2.308273,-8.434389,-3.254471,4.214505,4.345074,4.571367,-9.870757,-2.170134,-3.634110,5.867446,8.607066,2.937780,4.331664,7.849167,-7.499378,3.479101,-2.024420,-7.619844,-1.653416,3.718924,-1.751154,8.813879,9.584014,0.784833,6.847340,-7.448449,-5.579010,2.786812,-4.463920,4.799386,-3.111697,-2.456235,-9.101397,9.801619,-4.833624,-5.147801,6.807808,9.656729,-8.185882,7.362479,3.702452,-5.039347,4.433306,2.378677,-0.760048,-4.948294,-8.245309,8.127067,-0.792838,1.197327,3.366510,5.887642,8.219703,-1.620244,3.213516,7.474202,1.015531,-3.237882,-6.095721,-9.575842,-9.143764,5.678614,7.735328,8.188846,-1.537015,-6.408799,4.944366,-0.254176,-7.419669,-1.982338,-4.397739,4.519817,9.731362,-2.091887,5.469381,5.088056,-9.601826,-0.678477,9.475122,8.893246,-9.025654,-1.218026,5.423689,-9.571506,6.228742,5.892678,8.450690,1.770467,-4.668895,-1.722294,-9.712375,-1.045124,-1.270963,-1.794173,-2.487186,2.429768,3.565031,-4.492088,9.629986,-3.826012,9.138048,-1.694414,-4.333081,-1.153082,-3.449142,8.915935,-1.978225,8.237649,-4.793790,-0.618069,0.469612,-4.566387,8.672669,0.485685,6.903041,3.383334,6.125255,1.427188,2.506152,-0.820876,-9.997808,-3.499731,1.480550,-9.164605,3.380009,5.216207,-1.046771,7.030036,-3.832755,-7.528579,8.053712,1.407681,-0.565601,-6.544334,-7.666438,1.175705,-2.159329,7.637671,9.748871,-2.768547,-7.875083,6.778828,5.954879,7.536654,7.345679,9.723251,4.531458,7.963423,-2.279571,-9.876970,-6.146308,7.437696,7.525870,9.084466,-4.091173,-6.404368,3.299413,-5.416899,-3.640615,-0.940799,6.553832,-3.240669,-6.897859,-0.807478,-0.139619,9.282318,-2.351973,7.089508,2.768615,-2.383656,-9.977152,1.483619,-9.910869,-5.407313,2.934196,-3.541844,1.969706,0.950895,-5.091839,-6.718788,-2.383013,-2.471650,-9.783175,1.513826,-3.405644,-0.205061,-6.531611,-2.441488,2.193829,3.905543,1.856983,9.726958,7.808446,5.885126,3.388806,-0.245302,7.397364,-5.166641,-5.112362,-8.033680,-4.613547,-8.471453,-8.742120,9.636952,3.491011,-4.669333,7.866037,1.767550,-9.208786,-2.950698,-9.582830,-3.126014,7.441777,-7.064028,-0.038250,-6.445972,0.842080,4.046717,7.236994,3.973774,0.402017,-4.723638,7.632657,4.116129,-7.360478,0.208085,-5.617423,-7.182279,3.581722,-1.511761,7.517037,-5.697699,2.463154,-3.078893,-6.564828,2.245871,1.237969,-5.684884,-1.984797,9.826032,-3.022159,5.776240,-4.845303,-4.143025,-5.495154,5.487749,-7.603936,-9.337884,9.662269,-5.996931,-3.067855,0.789307,9.903027,3.753985,-0.494499,-3.258497,5.879059,4.308202,-0.268680,2.335448,-9.038528,-7.925261,-4.158535,-3.090293,-7.413629,-5.010075,7.218181,-2.161108,3.960764,-5.233764,-1.166441,-1.128251,-2.180082,1.155799,-0.122662,-2.008397,6.914034,0.310008,4.471481,0.582060,-0.112958,3.491933,-8.160043,4.001075,7.952513,8.270227,-8.283489,7.129750,6.710559,0.717197,-4.153275,2.955965,8.172974,3.929826,-7.286422,-7.166370,-9.492946,-7.109398,9.171988,9.720819,2.065214,3.517470,-9.734470,8.820832,6.387448,6.107244,-0.941332,-5.309289,4.312521,-8.624453,-7.946196,6.082023,-4.822838,2.150615,0.962839,-2.323381,1.528129,-3.407975,7.950540,-9.384393,1.728166,-9.192754,-4.759142,1.513441,-3.885664,0.748646,-6.009864,-0.576130,5.042561,-4.253356,-5.876469,0.662445,-3.307483,0.415916,0.853898,0.593796,-7.402601,-4.532863,-4.174629,-1.312086,-0.098348,4.468143,-8.729265,2.286972,-4.248835,-5.365100,2.853162,-4.564433,-3.350477,2.939951,7.351556,-0.631253,-2.843064,-8.811302,-9.175699,0.126583,6.106040,3.572437,-4.539844,6.435296,-0.433733,7.277534,3.223368,-0.692069,-8.329740,-0.376761,-9.042461,9.722713,0.926421,7.275957,-0.032445,-2.781253,3.457412,-8.770884,2.414219,-0.131896,2.838744,3.062009,-8.134019,-2.894633,7.740071,-2.285244,3.792072,-7.454003,-6.347422,-7.211767,-1.544774,-7.966845,-4.448084,-5.951791,-6.249392,-4.922156,-7.145932,-8.444761,1.214968,1.205450,5.402455,-7.364397,2.147241,-9.666015,-4.741769,5.323192,7.325669,-8.113612,-5.453970,9.401766,-5.320006,-7.473036,9.456416,0.128118,-0.157500,2.458018,-8.930659,-8.207394,-1.012662,7.320934,-7.033092,-3.748625,-1.538734,7.667344,2.474918,3.563821,-8.925163,-4.755591,1.890958,-9.855383,2.746684,7.607161,8.882906,9.750366,-7.697986,-0.065689,0.640343,9.429497,-9.536246,-1.352555,9.734450,2.500965,-5.639932,-5.222899,7.262837,5.792590,-4.620542,-6.706034,-9.024985,-1.080123,7.741225,7.889825,2.026087,-4.980597,-3.941873,0.530127,8.783511,9.209487,-7.318334,6.150404,1.397105,-9.567940,5.304945,9.172223,4.467584,7.638911,6.836494,4.200932,5.482766,-2.421629,8.923564,8.190421,-1.516325,-2.514025,-1.665670,-4.636974,-6.807981,-6.525122,2.565978,5.031763,4.664012,7.155422,-3.529763,4.142737,6.144346,3.790466,4.787020,7.137070,5.234099,-8.324245,1.504108,3.729059,-1.941267,8.984688,-6.501724,-2.772531,0.103978,-5.637846,-8.382648,6.540047,3.600274,-6.205718,-1.424034,-0.352221,9.238295,6.161257,3.670142,-2.382770,-4.919348,3.728418,1.428166,-5.330332,-1.670253,-4.076038,-4.941349,-9.487995,-5.408529,-6.081116,-3.296849,-2.238806,-5.307202,-1.186666,2.132601,8.966852,-7.981440,-7.606432,-7.993260,2.030105,4.557384,1.659990,7.014478,9.281887,7.729623,-4.159297,-2.718646,3.541225,7.562741,-1.804027,3.567447,-6.039910,-5.224594,7.809672,-8.787851,5.541416,-4.321751,5.108988,-7.984404,5.316052,2.908659,8.444842,-1.521106,-9.056369,-5.389464,-9.346305,-0.936411,-7.677580,1.746270,3.844323,-5.248097,2.347493,2.000798,-9.766802,3.895231,8.073064,-2.305676,-4.977324,-2.197201,-7.265278,6.861130,-5.484844,7.928218,6.901033,-5.323245,-7.196261,9.518251,5.141832,0.060799,4.413037,6.462442,8.759733,0.203405,-7.080661,-9.840629,4.359576,-8.167343,3.591185,-5.254313,-9.775770,2.216167,8.442720,4.508067,1.111707,-9.571857,8.567758,-3.414832,6.324390,4.883147,4.128704,-3.530089,6.504100,-4.500353,7.900829,7.798471,1.550333,-7.854366,-0.083228,3.269422,-4.601137,-5.850228,2.801927,-8.914019,-1.215302,-9.088349,4.588638,-8.859065,7.312000,7.494931,3.355269,1.479262,9.236361,6.931116,2.043834,-5.826038,8.944671,6.700933,9.377298,3.448707,7.971129,1.122511,2.371409,-2.477350,-5.103130,4.318474,-8.187985,-0.203289,-4.847586,7.953986,-3.086557,-5.268478,-1.171574,-1.534756,0.443790,-6.557049,0.976132,-7.183609,1.991758,-6.732937,-8.017644,-9.210464,-9.857382,4.659745,-4.309832,-3.258012,-4.723310,-3.350166,-2.699336,-3.125942,2.091963,6.271250,-5.219393,5.111884,-7.126821,0.811154,8.929658,6.776592,-7.162379,-5.273683,-6.081882,8.911999,1.713668,0.264986,-9.575550,-9.474601,-2.655014,-5.944140,0.382480,8.745131,0.484273,-5.175720,-5.296770,-0.954614,-7.024393,7.824721,5.567752,9.721795,7.739295,0.566217,-7.693927,0.919746,1.609414,1.616873,4.254346,-6.221384,4.520376,8.282069,-9.204823,-7.320124,-1.650396,5.893966,-1.426564,2.199032,-4.065578,6.173978,-1.654779,9.102815,7.965200,-6.539507,2.823234,4.252438,5.720860,-8.982634,2.278147,1.817860,3.485636,3.388002,8.344296,8.328984,5.326028,3.496805,7.798645,4.207005,8.174006,2.257434,-2.683682,-9.970507,8.802676,-1.052181,1.556348,-8.498939,-3.958012,7.596484,-7.420765,0.915960,4.275507,4.897161,-3.946304,1.475633,-6.103669,-5.619186,-2.026106,6.221749,-8.492729,-6.146538,9.930684,-9.053406,-5.682230,0.805315,-5.469033,9.560807,4.950202,-4.141791,1.861692,-5.772896,-8.344611,8.896344,4.688743,-4.264076,-4.820229,1.217952,0.625881,4.537284,3.784331,7.857290,-4.759038,-3.049767,4.976655,4.872763,-4.481529,0.466271,-8.202223,2.914543,2.244773,0.473698,-2.323231,7.124242,-3.095026,-4.821901,5.358736,6.330080,-1.232580,-2.766321,-7.441280,-7.264921,9.675601,2.565176,-5.696885,1.874802,-3.169141,9.860402,6.318008,9.184984,-1.737762,-9.434074,5.338711,5.424381,1.394763,9.949445,6.002334,-0.100809,7.701656,-6.456446,4.229066,6.080422,4.865033,-6.912521,0.371551,-7.105043,3.448005,-2.940648,6.744772,-2.374847,7.974984,-3.136624,-0.757032,2.868795,2.889788,4.741319,1.257395,-2.667320,-2.078983,8.069881,-9.189220,8.330144,-4.517498,-0.450005,9.013925,-9.442209,3.032066,9.308008,-2.399468,3.138918,-2.010893,-5.877654,-6.850429,-2.879910,1.411106,-0.849288,-4.265850,-1.986666,2.801045,-6.645611,7.418357,7.090969,1.631582,-7.930684,3.446488,1.475552,1.583783,3.073078,3.216325,-1.324016,-4.789656,-0.722161,-1.085363,6.860714,-8.045581,-5.131652,4.505312,-4.039073,-9.282187,-1.579640,-1.567346,8.625803,4.731452,2.721135,2.132881,3.251199,4.122108,-4.172427,-3.282236,2.117578,8.438937,3.431471,-9.361180,1.857964,-0.853850,-2.116507,-0.088074,-9.095604,6.047049,-2.179948,3.624554,-3.381133,6.624495,-2.750038,-7.697249,-3.328214,1.512888,-1.930808,3.900294,-2.599135,3.241415,5.746524,5.799698,1.408873,9.120520,8.208184,-3.572298,1.748092,-3.351261,9.586870,-2.624535,-0.751484,3.875755,4.021575,-6.006357,3.263470,-9.843926,6.446704,-8.557148,-7.766530,-2.376990,6.506835,4.356225,8.138224,-9.593016,2.487026,-5.408362,2.482695,-7.359877,2.176712,-2.423699,5.283094,1.462650,-9.406229,1.218128,7.294204,-8.485092,-7.367693,-7.814110,2.782102,9.484307,9.872244,-7.148994,3.710760,0.887548,-1.752627,9.142067,-2.962841,-1.567528,2.603995,-0.364909,-5.962994,4.859197,-2.215664,-6.709383,-4.367665,-1.771887,0.496356,-8.283389,-3.010750,1.360626,-2.171554,-1.803772,4.648418,8.754431,-9.850447,-9.047408,9.384928,-8.742322,2.410827,9.876916,-6.764194,1.230990,4.327236,-9.285988,7.992055,-5.043691,6.143564,-9.073073,3.303691,7.040816,7.310870,-6.794016,8.824107,0.799013,9.032692,-7.099090,-8.511995,-3.442223,-5.664233,2.700906,-2.113641,0.239666,-0.837506,1.679161,7.614400,-1.457585,-6.234330,6.815042,8.789295,-3.519470,-3.179240,-8.299744,-3.104099,-5.590983,5.446261,-4.625860,1.685767,3.817083,4.639231,0.365414,3.062336,-3.532355,0.273320,7.249015,-2.732991,9.178382,2.752942,6.928706,-5.711202,-1.680637,-1.229855,-0.483258,-8.278690,4.127950,-7.826140,-5.818888,-2.170045,1.553080,5.589234,-2.712108,-6.245277,-8.123238,0.573966,6.365507,4.904488,-3.418241,-3.412878,3.920964,-3.883518,-7.010454,0.419971,2.215741,7.763308,1.782163,0.027174,-7.377212,-3.234046,3.780225,1.856863,6.167152,-6.206646,-6.827160,-2.757630,8.378109,-8.321888,5.512776,3.397488,-0.736716,8.857196,6.342555,6.252719,-3.187414,-2.781062,-8.617628,-5.909247,-2.296925,8.388406,9.973422,-6.440441,-3.530144,8.981625,-1.286922,-3.632133,4.255102,8.149224,4.657323,8.535227,-1.974574,2.268101,1.764741,-2.855518,0.631827,-1.772364,-2.501020,1.473805,7.105768,-7.604860,0.204695,-1.522283,8.357513,0.343862,8.086435,-2.358579,-8.100055,-7.052070,-6.374862,0.442559,-7.451891,-4.736732,-3.255570,5.714569,-0.134243,-1.320108,4.698379,4.288713,-0.709494,9.724993,6.090774,1.383410,7.684410,7.442908,-5.631676,5.785421,-8.002943,5.325146,-6.706412,-4.116060,6.747862,-3.142975,-6.528431,0.960604,7.612594,-8.954077,-9.438245,-4.898015,2.158413,5.457224,3.267891,-5.731270,5.084947,-8.653595,-9.746690,-8.105559,6.077367,-5.724524,-7.123058,-2.571267,-2.276919,-1.219739,-3.764067,0.176106,-1.647955,-0.634930,2.419472,3.891307,-1.285914,-7.016630,0.683777,-5.227976,-0.273601,-5.809823,-9.888212,-5.114334,1.932733,-4.003840,8.536646,9.951602,-0.116888,0.722258,-6.224844,-1.020143,1.384474,0.882500,-5.961900,8.162447,5.638311,4.570967,6.263878,-2.075388,7.466234,-4.450835,-0.672442,-1.371885,1.910621,5.645395,5.875307,5.241846,-8.054734,3.925850,-5.965387,6.281489,-3.326927,-1.819169,-7.789751,-2.375694,2.803488,7.285085,-8.872574,-6.644837,3.395693,4.424319,-1.583975,3.318492,8.893655,3.468804,-6.989561,8.114388,8.364845,-4.474892,9.748603,2.804672,7.587220,-6.494044,6.111556,-1.301028,-1.978932,0.084441,-2.741172,-7.220751,5.964692,6.662891,-3.309962,-8.098103,-3.737017,-0.709832,8.776908,-0.179184,-2.087619,-1.035743,-5.942346,-6.087963,-6.563250,7.307882,9.610908,-3.768419,2.490634,-4.939947,1.030218,5.601159,9.653228,3.031279,-5.834161,4.295235,-2.819135,-1.228244,-1.157298,-7.570477,-2.542341,5.788544,5.324725,-9.416827,-3.757611,-9.173570,3.610989,7.789081,5.924161,8.854490,7.611399,-7.947017,-7.175091,-9.571266,-1.258915,3.861486,-6.642913,-8.077302,-1.709090,-0.001607,5.278982,-5.431743,-7.180709,2.626556,-7.487896,0.484373,4.254841,-4.726196,-7.292569,6.683270,2.663676,3.815984,7.968025,0.811527,-3.714281,-6.060729,-5.477061,-2.201275,0.114511,3.794462,-9.641401,0.420608,-4.943339,5.116004,-9.432381,5.775908,5.930256,8.159823,-6.946547,8.353578,-6.543122,-2.603545,-7.627732,6.298319,-3.656862,-9.609916,-4.967354,3.286907,9.340447,2.383441,6.967357,5.784141,-4.956233,0.370483,1.374347,8.216610,2.346919,-2.969246,4.107066,1.617185,-9.605056,-7.077621,2.562713,-6.045815,4.307134,-9.210540,-1.765343,3.354315,-7.926664,-7.011606,9.333609,6.143259,0.142204,5.197605,1.331501,6.023807,-9.177437,-4.174558,4.936650,-3.632504,0.100366,4.247083,-9.342065,-7.209364,2.766183,-9.957262,-0.812526,2.575350,4.317382,-4.851647,6.309959,1.548204,-0.562884,8.935534,-6.179733,-0.037074,-8.900591,3.231526,-4.794746,5.908926,-1.206123,6.321051,0.208350,1.888365,5.456973,-5.683918,2.061167,-4.329960,2.181480,0.274383,4.718833,9.659058,3.837843,-7.447135,-1.912914,3.920612,8.065364,-3.741860,-3.577909,0.170273,7.365452,-6.701168,2.091640,-4.087736,2.997291,-6.187918,3.293425,-8.520577,1.787771,2.054474,1.568342,-6.866438,5.830722,1.132425,-8.912832,2.375865,-5.542630,-9.340587,-7.967996,4.204819,-8.461184,-1.139919,9.502001,-5.285003,7.543435,3.767377,9.710194,3.408828,-1.047364,-4.172654,6.936244,-3.989022,8.821178,-4.823325,-3.877433,5.178180,3.866999,-9.828708,8.405323,8.421382,-7.036048,2.864375,3.454977,-4.230357,3.758660,-5.748666,-9.114419,8.793776,-0.248386,5.834091,2.051737,9.616142,-3.379800,1.841747,9.801527,-8.031833,4.668406,6.083253,-0.816920,-3.490801,-1.942221,4.468852,-1.385820,-3.390972,-8.176321,7.252677,4.253506,-7.837999,-5.572537,5.755887,7.974778,-1.347495,6.576513,0.955929,4.379763,2.224216,-4.499133,3.976333,5.874408,1.182144,4.804605,6.392403,-1.066950,8.118230,-3.249309,-8.513785,-4.261349,-5.539856,-0.816257,-6.429671,-5.635353,4.845656,-7.206091,9.323483,-7.739197,9.437006,6.333409,-4.768143,-3.345031,-7.566799,-4.677686,-6.114059,3.487883,-9.784481,-4.431566,-6.796317,2.074291,-2.018534,-5.832149,6.313493,-8.928967,-4.644362,-7.051827,9.902481,-8.894911,5.285627,-6.019498,-6.882524,-6.021203,5.676719,4.900716,1.390777,1.697289,-3.940954,7.995487,6.320310,-4.019474,8.117007,-9.087325,8.595961,2.841020,-2.278417,9.783683,9.358112,3.691680,-9.720330,-2.049993,7.582901,5.975124,6.126449,-2.673385,3.985260,2.729973,9.157454,6.369887,-8.000246], dtype = "float32")#candidate|8201|(1536,)|const|float32
const_8202 = relay.const([9.318990,-0.476233,7.562222,8.399968,0.942894,-2.451098,-9.076433,7.293677,-5.572743,6.562003,-9.426472,3.632714,-4.765501,-9.877485,-9.929830,-5.432470,-6.782886,2.252369,3.249800,-4.484924,9.493589,-7.654888,-7.750847,-9.851845,-6.343197,-7.439177], dtype = "float32")#candidate|8202|(26,)|const|float32
call_8200 = relay.TupleGetItem(func_3424_call(relay.reshape(const_8201.astype('float32'), [1, 1536]), relay.reshape(const_8202.astype('float32'), [26,]), ), 1)
call_8203 = relay.TupleGetItem(func_3428_call(relay.reshape(const_8201.astype('float32'), [1, 1536]), relay.reshape(const_8202.astype('float32'), [26,]), ), 1)
output = relay.Tuple([call_8197,call_8200,const_8201,const_8202,])
output2 = relay.Tuple([call_8198,call_8203,const_8201,const_8202,])
func_8212 = relay.Function([], output)
mod['func_8212'] = func_8212
mod = relay.transform.InferType()(mod)
output = func_8212()
func_8213 = relay.Function([], output)
mutated_mod['func_8213'] = func_8213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3164_call = mod.get_global_var('func_3164')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_8222 = func_3164_call()
call_8223 = func_3164_call()
func_5391_call = mod.get_global_var('func_5391')
func_5395_call = mutated_mod.get_global_var('func_5395')
var_8228 = relay.var("var_8228", dtype = "float32", shape = ())#candidate|8228|()|var|float32
const_8229 = relay.const([[-6.706969,9.822777,-2.067891,3.314000,-7.138693,1.994418,8.765431,-4.243761,8.282113,0.504812,-9.035702,2.447347,4.513363,-0.062646,-5.849609,2.517885,6.646561,-4.027626,-7.050133,2.610851,-2.181240,-5.013843,-4.630976,-7.374838,-8.133236,-9.557740,6.285349,-5.887648,1.346276,-6.810124,1.669821,-8.109192,-7.476240,-5.315327,-0.960822,-6.685926,-0.896590,-6.470388,6.668285,0.301824,-0.055572,7.726442,2.274695,-5.051115,-0.036710,-6.898579,-5.988732,5.070852,9.001645,0.910922,5.943909,-5.952793,2.366127,-6.803751,-1.557284,-2.218615,-9.217064,-5.786676,5.108389,-9.860656,3.865524,3.826602,2.985641,-9.652178,-3.193992,-2.177876,4.718953,-4.328287,0.310852,-6.465018,-1.616284,-2.556225,-5.119756,-9.287114,7.341738,9.882081,4.273354,-6.724149,4.966201,-8.051118,-3.128195,7.696652,1.623334,-1.567234,7.941652,-3.230456,-4.226304,-2.215472,5.116635,-3.350363,4.712107,3.216653,1.197389,7.483830,1.489722,-3.872159,-4.740534,2.079705,0.799953,-7.195785,-7.531706,-9.993587,4.079441,5.940969,6.921125,5.254155,-9.111501,-6.395963,-4.251983,-1.859090,8.067266,3.184510,4.937930,7.188154,8.787395,1.782280,1.911370,-3.077514,-1.680306,6.978623,8.216789,-9.259081,-3.833246,2.404280,-1.392691,-2.890784,2.433365,8.237487,-3.568872,2.439069,-5.817521,-0.792850,6.375392,-4.214000,-0.531616,5.403847,-5.300027,9.762500,-8.325671,3.469165,0.926253,-0.850058,5.850404,6.709659,4.380254,8.625732,4.518764,6.972915,-0.725251,-6.972449,0.152046,7.664334,1.775718,-2.364219,3.860729,-5.958674,9.312841,6.331033,-9.800491,7.074666,-1.314496,7.515522,-9.294374,-5.089838,-2.274203,0.786619,-1.778911,8.322403,-8.905340,-6.492519,6.704583,-1.456338,2.704058,6.166291,-5.481748,7.890532,-1.232088,-2.723316,2.593727,4.206808,5.558780,-6.007317,0.378766,4.516967,6.870465,-8.357678,-9.883670,-5.208902,-2.230465,3.650989,-5.372760,4.926090,3.848990,1.006234,-7.680181,-0.777208,5.484272,-3.391708,-0.682412,-8.317083,9.564779,-8.081442,3.230216,8.402049,-0.932393,-0.359720,-6.788278,6.818804,9.995453,-0.130640,-9.308257,9.100942,5.153370,-5.350518,9.349795,-0.124388,5.620869,-9.343673,9.716397,8.458021,-2.650910,-7.188645,3.314120,-8.466680,-9.415057,1.849132,5.263369,-6.022174,-5.963000,-6.113510,-3.971842,-6.283309,9.639464,-9.341021,-8.649783,5.582851,-3.938968,5.414220,9.556624,-4.688807,3.577006,-1.225959,9.885131,8.475749,-4.734012,5.843217,-4.613313,-4.482728,2.565712,-0.686558,-7.901624,-0.206533,8.994481,6.514186,-7.138167,-5.260423,5.918464,-4.500921,-2.422660,-3.938962,-0.475957,1.744828,2.385236,-1.582487,-8.138012,-6.489840,-2.871984,9.963645,9.574715,0.024094,7.137991,0.995839,-0.196724,2.163108,9.876105,9.579173,6.390187,1.546234,8.299639,7.238365,-7.418140,-7.085898,6.856369,1.889911,-0.790153,-5.516724,-6.598576,-5.468934,5.863514,0.955112,7.799387,-1.289032,6.930874,6.184785,-4.200788,7.638649,9.373885,3.323842,8.198310,5.156543,0.760805,3.465315,9.963106,0.793105,5.595736,1.485544,4.752870,-7.706903,1.272678,0.457361,-7.631836,9.456740,9.270073,-1.954765,8.049796,-6.142743,9.315388,-6.888795,-6.278452,-5.912504,6.456203,-0.126220,7.712656,8.271087,7.290663,-7.886958,1.912551,5.916429,1.898068,-8.943655,8.281646,6.175917,-7.638769,5.793271,3.264461,1.307511,2.812899,-6.695068,-0.590913,-0.982170,-4.307020,8.243733,-4.066857,-8.024788,0.785091,-8.676329,-1.723040,4.135991,1.115512,5.796842,-9.831151,1.344129,-3.114079,9.746987,-3.977846,-5.620103,-8.284147,-8.423196,-7.923100,-8.302454,6.608222,-4.845915,3.928316,1.859159,-1.235422,9.355540,3.551889,8.908153,-0.968477,-4.450973,-5.437115,-0.621790,-9.637764,4.155838,7.638321,-2.188996,-0.182028,-0.035325,6.402332,-3.244715,-1.083777,-3.433432,0.888221,-0.589089,-8.434326,-6.619737,4.948886,-5.675037,8.872996,4.543275,1.425694,-4.475912,-7.214912,2.671005,-2.448832,-4.221846,-7.257580,-8.123343,-5.197879,1.874367,6.005748,9.481265,-4.810844,-8.391031,5.620759,8.239935,-6.192968,-9.353958,-8.520170,-1.806394,4.753737,-8.391707,2.101500,7.020559,1.134781,5.470121,-5.007342,3.219345,-5.773816,2.798572,6.832220,-1.781363,-0.329783,8.326390,4.830688,0.743111,-7.128709,-9.265745,-3.312092,3.592827,-7.433361,-0.759296,9.053260,-6.049487,6.370787,2.076589,-2.829927,-0.621453,-8.081555,1.992201,1.342430,-5.876134,-5.238899,-9.486905,6.923231,-3.537053,-3.172783,-9.232295,2.974561,5.110188,-9.067487,8.948474,-6.665103,4.523207,6.662333,-5.321382,4.977383,-3.539678,6.117227,-0.658335,-9.023490,2.438688,6.733045,-1.065468,-5.923411,-9.287345,-3.824341,0.243522,8.525669,4.046104,9.746776,-5.261539,2.799045,4.668595,1.594402,2.152181,-9.831117,-5.418141,-5.704323,-7.451722,-7.560357,-8.082517,8.209556,2.954872,-9.498075,9.480779,9.920043,8.080996,2.131956,1.335448,-6.459505,-0.783015,4.436666,9.081141,-3.582303,-1.016412,-8.923610,1.066991,-9.745854,-3.146444,-3.991908,5.475200,9.849669,-6.590094,6.381351,9.873125,-3.009537,-8.032994,-2.912670,1.378792,-4.714958,7.598523,-9.532213,-0.684016,-8.245626,-2.730381,-5.026132,-6.880524,-0.838605,-3.853870,-8.460660,6.408281,-1.672164,1.577650,6.576941,6.204198,-1.813949,-9.803904,1.824812,-6.311236,-1.436883,-5.448429,-8.605706,-0.555916,1.849107,-1.570890,9.137737,-3.456663,9.639530,-9.539605,2.999719,-7.527041,9.493494,-0.120295,2.089579,-7.542909,6.177934,6.491392,5.092237,-4.771278,-5.531533,-1.982287,5.885998,8.555192,-6.206450,0.404302,6.850067,-2.733871,5.709260,-9.618448,4.078770,-4.195757,5.727655,-1.045150,7.833064,-7.033155,3.695703,9.057925,6.905714,6.437905,5.654865,8.765765,9.992183,4.210283,3.261269,3.795892,-4.657515,3.549924,4.517911,-0.421717,2.075369,8.400998,2.794043,7.477756,3.597329,0.722401,6.328921,-3.911117,-5.886626,2.218130,8.234699,-2.501994,-6.319665,9.905905,5.035060,4.177195,-9.338795,9.119449,2.237124,7.662640,7.608230,6.876266,4.576774,8.240273,5.075057,3.018666,-2.354453,-5.644615,-9.982061,-2.667363,5.289977,-7.088439,-1.794889,-4.533157,-8.318564,8.854422,-0.929719,-3.443398,-6.584843,1.689205,5.050212,-2.977162,-1.564232,-7.751811,-1.499150,-5.668756,-5.213996,-4.703285,-9.034249,2.699613,-6.015588,-2.429975,0.961548,-1.995389,8.362742,-2.296453,1.142846,-6.183789,1.288837,-4.578382,2.321433,-2.054822,8.303327,1.109415,9.440215,-4.056927,1.379301,-3.577714,0.113054,-6.641819,-4.640776,9.678431,4.835695,5.145085,9.604446,-0.217093,-1.952460,-9.756349,8.144722,1.903374,-8.606725,-9.613182,-5.383840,8.399226,-7.297084,-8.048908,-9.970597,-6.193213,1.738877,-8.378366,5.244015,-5.126923,5.975868,7.475416,-0.033170,1.694070,-5.647312,-0.706730,-1.741952,-6.348501,2.557339,5.599789,4.454745,5.060063,4.336391,6.417658,-9.128160,-5.662168,-3.567557,2.815189,-8.219092,-9.021485,-9.652295,-0.319615,-1.794038,8.521734,8.978709,7.414063,-2.546450,-6.386235,-7.082728,-3.580344,7.096709,4.279306,-9.314062,-6.481015,3.628641,2.317458,1.669021,6.967105,2.760440,3.366334,0.826489,5.786591,8.752535,-4.786866,0.453805,-1.318882,3.613304,-8.912254,-9.872889,8.929143,7.569032,-2.543152,-5.440018,-8.146544,-3.954372,-7.433977,-0.346300,-1.213020,3.243572,-5.199848,2.944434,4.039117,-2.889663,3.959318,-2.780465,-6.020188,9.024797,-1.001759,-6.383713,6.461232,-7.254216,4.034059,3.692198,-6.315373,-9.144229,3.474356,-4.801484,-4.738198,2.290026,2.619701,-6.714928,4.379279,-3.219845,7.815491,3.868215,-4.917988,8.560910,-9.330062,3.733570,3.612731,4.236197,9.477731,-2.566520,-5.370050,5.486451,9.423453,-3.777936,-1.074052,3.695973,1.053407,-7.876847,-8.849148,5.223157,9.537904,-6.279234,-6.377835,6.402080,1.901808,-5.103783,3.870650,3.768237,5.739198,-3.064618,2.799849,-8.552789,-0.241729,-9.775531,-6.830839,4.310927,-6.916645,-6.144179,-0.418774,-1.523038,8.562039,7.462098,3.176301,-5.827888,-5.186275,-9.129595,-6.466363,2.081694,6.302699,0.622212,6.362869,4.022848,-8.527247,5.891806,-5.203782,-0.376710,-2.527251,-9.438685,5.243348,-5.435613,3.547205,3.859941,8.794822,-4.602752,-1.492875,-1.769611,3.439917,1.640639,-4.337074,-9.655864,-8.136645,-8.891505,-7.463087,-4.220761,9.955333,-9.146983,8.430861,-6.516556,-2.436387,-7.482613,5.604821,-7.023696,-3.070940,-8.820931,-8.819955,2.958765,-0.460618,6.674435,8.487549,-4.996376,5.830494,0.076580,-0.928390,3.919019,8.944487,9.140540,6.366139,2.158109,7.167542,-6.948523,-1.959731,-7.780731,3.394287,4.657422,-3.110020,-7.728357,-3.229556,-8.967540,4.194566,8.902249,4.354985,7.818564,4.141453,7.629705,8.679909,-1.300499,6.271517,-1.013433,0.403230,8.775340,7.230753,6.576033,-7.310315,-4.192109,2.807745,-4.380144,-3.611546,3.577764,-9.834661,-6.407740,-3.457664,9.449915,7.617093,1.525219,0.146543,-7.399328,-4.553738,3.796919,-5.102203,-9.070734,3.306385,-4.065911,1.979727,4.497850,-6.651878,9.717021,0.927914,4.315589,-5.237448,4.535599,1.347050,-7.308083,6.523089,-8.776849,8.712130,6.881623,6.018594,-0.903053,-0.392865,-3.717225,0.773181,1.781695,-0.788753,0.082367,3.607729,4.493771,1.507182,-9.212132,9.768363,-2.203997,-3.999981,3.909757,8.555311,-8.310043,-6.686767,0.738336,-5.392928,-6.360076,3.963125,5.054868,-6.964954,3.482319,-5.387315,-6.674638,3.118761,-1.232868,-0.271394,8.789576,8.566298,1.190608,3.950930,5.593999,-0.832713,-3.179696,4.927183,-3.339866,-1.061511,6.577200,-6.853150,-6.262412,-6.681166,6.686304,9.732679,4.378557,-5.636535,-4.860076,0.312045,1.779435,0.396519,8.998659,8.498001,-4.513061,9.576031,-4.535997,2.499874,4.711877,8.425659,-8.507099,-3.312722,9.122100,7.147158,-9.139450,4.374968,-1.267033,8.484174,9.256355,2.564793,1.018415,-2.554286,-0.266150,-4.412849,7.596537,-7.069728,-7.960966,1.167433,0.555007,8.747526,8.821546,5.884430,4.433165,6.323655,2.333829,-8.293315,-0.163790,-2.690676,-8.254605,-0.150077,-6.037498,-1.574507,5.622565,-2.874350,-9.886474,-4.877195,-5.811357,8.324771,2.270338,4.736140,3.134714,9.031797,-0.076794,9.825693,-0.787453,-9.303009,-2.874861,-5.230782,7.396371,5.003646,-7.029186,7.866433],[3.175532,8.518047,-9.413029,-6.603615,-6.720719,8.857961,7.445191,-0.762125,-7.690211,4.434675,8.773233,8.117203,-0.505258,-3.593957,-5.028747,-7.004826,-9.348341,-1.081529,-4.331731,-8.642826,-6.619436,4.330352,-1.752763,-4.400432,-6.047392,-3.138908,7.556204,-1.956233,-8.406240,-0.347796,3.313562,-1.542864,-8.804498,-1.835880,0.114689,-5.684371,-5.540800,-7.797169,8.223594,0.598323,-0.807970,9.863003,3.791933,5.163328,-9.106046,1.336202,-0.083876,2.990617,-6.681850,6.742708,-5.967684,-3.182426,2.872425,-6.898084,4.538181,1.509891,3.235302,9.757128,-8.724533,-4.867595,-8.620068,-6.442898,1.467280,-7.212312,8.964611,-2.023639,2.572975,-3.012543,3.385640,6.080497,8.242465,-7.591965,9.975108,8.252649,-3.198751,-5.233032,5.181861,-6.453239,-7.337107,4.856106,-3.509382,4.481819,-5.425436,5.084206,-3.136150,-7.047471,6.443176,-6.181086,-4.265863,-4.671678,1.435231,1.666884,-3.607033,-0.059354,-5.906942,-1.487896,5.879638,-4.234669,-2.579959,6.123242,-0.060734,-2.794220,-0.181869,-3.741025,-2.964179,2.815000,4.625327,9.795579,-1.114771,-8.507895,2.318615,-0.458530,8.862885,-7.671600,-8.944076,-3.994908,0.940973,-8.821191,-0.796104,-5.848199,6.911075,-1.795693,-5.344778,-0.535628,7.618411,-9.084650,-5.696702,4.194402,0.499102,3.350465,7.591616,2.919387,-9.378827,-8.871828,-5.594439,7.386481,3.173360,7.916141,6.127653,-3.521683,-7.254020,3.718842,2.441633,-8.849524,-3.457176,-9.629648,-6.904958,-5.539934,7.888034,4.913029,4.988743,-4.924304,-4.083749,9.695640,0.106820,6.004747,-3.521382,-4.714954,1.344492,-0.351506,-9.773267,-2.593747,-2.725622,2.177535,6.316178,-5.710409,-0.600727,6.269496,-7.991955,-1.488148,9.470971,0.421825,1.214915,8.491717,9.455534,-5.870365,4.994997,-3.048105,-9.977465,9.063458,-2.527764,-1.877727,-9.482372,2.751403,-1.367985,7.210681,7.299568,3.493115,-9.767904,-4.749671,7.763005,-4.741364,7.648412,-3.287224,-1.932505,0.348872,9.404420,7.796188,-2.354099,-5.702855,4.866348,-9.685204,9.753472,4.708777,-9.204494,0.324905,-5.654609,-9.553891,-8.211443,7.635387,0.463801,5.991221,1.627956,-1.256147,2.617070,-2.254247,-4.520263,-3.367677,7.064389,-3.528071,2.486160,1.786651,2.956230,5.132262,-3.333261,-5.902568,7.481834,4.263093,2.167729,-9.592890,-2.731677,2.116444,7.481421,-3.673581,1.165454,5.343445,-1.936364,-7.411908,-7.991386,9.382720,8.090793,-5.253788,4.557996,4.726989,-1.275682,-9.991402,-0.986292,2.473771,5.423796,-4.451049,-9.958919,1.503031,-0.794104,-2.157753,4.969186,-2.661440,-9.488429,6.850921,-0.145896,-1.149293,0.119173,8.868521,-9.452237,3.298796,5.455341,-3.790470,1.573216,-9.087886,3.056620,2.895514,5.009519,6.292335,-3.468686,8.091350,7.865799,5.957445,-0.424789,1.456284,-2.417594,-7.905458,-6.326369,0.586362,-7.491677,-3.339031,8.845165,-5.565630,4.124564,-6.177471,9.349686,-8.110218,9.058343,5.849671,-0.480965,-7.806984,5.154926,-7.851246,7.023502,-9.654527,-4.739464,7.799146,-3.794794,-2.427318,-7.144446,9.863859,-2.108936,-6.863944,-6.033427,-3.449105,-1.067193,7.206964,7.203120,-1.856554,4.050551,4.103399,0.267269,8.401616,-9.893639,7.121977,-1.018316,-8.636569,-7.135478,-2.460133,-4.119955,4.624586,8.403034,5.775119,6.664638,5.271370,-5.850322,-1.528018,-2.578358,2.138468,1.495758,5.160172,7.163336,-1.836460,-3.136721,-5.376266,0.900473,-2.072128,-1.313852,-1.097892,1.048087,3.383144,-9.671764,6.109007,3.723508,6.757161,2.515042,7.533764,9.669563,-8.278738,-9.707002,-1.728206,-4.729735,8.546661,-4.284545,-1.039314,4.042437,5.081630,4.574434,-5.567352,6.380876,0.901733,-1.379953,-9.286565,5.682976,-0.344380,8.718405,2.681292,0.708836,6.557724,-4.387034,7.649679,1.746137,5.620873,3.209441,0.184280,-7.143843,9.773709,1.593745,-5.278242,-2.384288,7.822076,6.485128,9.142380,2.908321,7.305544,3.215910,6.284449,7.728617,5.917533,3.444039,-9.260512,-4.685142,-1.886849,1.556421,-5.352886,6.960358,6.180974,-1.313156,7.683909,1.869025,-4.679820,8.707432,9.677758,-6.821156,1.338276,-3.351273,7.758327,4.456264,-5.867205,-9.679661,-9.762801,-7.873511,9.242654,2.373782,-1.589955,7.836607,8.434609,5.959751,4.192366,0.311719,1.764744,-1.272442,-9.728051,-3.951786,-9.030676,1.188728,5.825865,4.902430,9.896628,5.873987,6.617002,-8.446821,-5.789020,-4.174729,6.209724,-5.508371,5.383354,-0.215834,4.194041,-0.107436,4.757274,-4.556056,-6.509101,3.542013,-1.204207,3.820751,3.693379,-3.285117,7.813056,-7.715494,4.001003,2.374577,9.064483,-9.545681,8.924449,6.318185,8.993224,0.141368,2.122871,1.679502,3.707950,9.186339,-4.203395,-6.959123,-0.662937,-2.354441,-3.643533,-9.329491,8.777788,-3.637699,-9.890707,-2.910693,2.743302,9.468572,-0.117768,4.167315,9.925330,7.291382,-4.367441,-9.847744,-9.637876,-2.762615,-1.673693,-2.850875,-1.707462,-4.767259,-1.581804,-5.600001,-4.444045,-2.484325,-9.136640,9.275182,8.033640,7.262533,-6.118064,-7.807627,-5.041533,6.394873,-2.112940,1.157832,-8.494552,4.871457,-4.878261,2.879023,5.126738,6.106648,7.884709,8.961998,6.774072,-6.965936,-3.683176,-9.422325,-6.690716,-0.372774,-2.349737,0.881664,1.634402,8.224880,-3.857469,5.812909,0.778620,0.117979,5.215914,8.248406,3.199623,-8.589423,-0.865249,-9.780649,2.945307,9.618208,-1.436516,-8.084805,3.776574,2.456881,-0.149873,9.468752,-9.967171,-8.925980,-6.150313,-0.247789,-4.873474,5.178981,-9.031072,4.106061,-3.531176,0.488921,9.243791,7.457512,2.501354,-5.798138,9.556551,4.956604,-3.353825,9.373927,8.300615,-0.785932,-0.089946,2.901247,0.466635,-3.319102,6.585841,9.544293,-0.420999,-8.926297,1.158358,9.750457,-3.334034,-4.014711,6.815180,8.239258,-2.122653,-7.137916,-2.489647,1.534434,-8.275488,2.138918,7.124611,-4.969290,3.691276,0.742007,1.631837,3.836114,-2.990473,-2.904289,9.386019,-6.622326,2.414142,8.969812,-6.465808,5.306347,-8.900240,2.364168,7.510869,3.475751,-8.126971,-8.854922,-2.594799,6.144770,8.007814,-4.033329,-5.939846,-4.084039,4.490997,2.446243,-9.610647,-7.825392,3.453093,-1.702061,8.561838,-0.798420,2.664192,0.241933,-3.445901,-1.233260,-1.574831,6.315027,3.363217,-2.679425,7.035634,0.449754,-3.609995,-4.943630,2.221751,9.145814,9.973182,-3.981818,-0.492764,-4.770786,-2.037583,-4.072862,7.749281,5.363857,-9.276575,2.243622,2.915529,5.400550,-5.030701,-3.710320,2.004125,-8.049528,3.717713,3.183595,-8.766212,-4.193113,-0.755245,0.869503,-4.389441,-5.891595,-7.606871,-2.842743,-8.758773,8.635819,-6.244315,-3.066126,9.240412,-2.438492,7.427293,-5.273871,4.484020,3.174579,-7.792414,2.118706,9.872336,5.025144,5.602855,-3.885401,5.819712,-7.600167,5.913787,3.118602,8.509800,4.708667,4.486898,-2.311894,-6.025530,-4.183952,-5.528321,-9.136030,-6.659313,5.230733,1.969541,5.105497,6.201482,-8.156314,3.877878,-2.215778,2.968114,6.666320,7.296823,4.178793,7.055267,-1.810136,5.251956,-5.843839,-1.562770,3.218324,8.028202,4.393258,-8.342009,2.498074,2.808951,-1.991393,9.390882,-5.285941,8.164111,-1.605034,3.627163,-7.128303,4.744413,-6.100096,-6.143343,-3.880106,0.687949,9.304070,8.005576,2.072113,-6.306885,-7.676829,8.080591,-5.172584,-6.221788,-3.777116,-3.724486,4.958921,9.443513,3.965770,1.263290,6.437530,9.776643,4.545213,5.617743,-7.567728,-4.424209,0.357030,5.516011,6.301428,-8.365942,4.757662,-9.596311,3.132370,6.556033,-8.156381,-5.314459,5.148978,-0.626284,-1.509426,0.988731,2.167910,4.692311,6.761250,-4.939255,2.630361,-8.481532,6.661069,7.514069,-3.283293,-1.384205,4.838485,-1.329200,-2.327212,4.130412,-5.305613,0.030293,0.600764,-6.318301,4.393366,3.602548,-2.663027,-8.487428,-0.141559,-2.870291,-9.689668,3.872770,0.796708,-8.422122,-7.326711,-6.027751,-8.650105,-6.520196,5.042035,-1.228932,-4.461851,6.829163,-5.674817,-4.726329,0.260756,0.599105,0.743762,4.939928,6.884272,7.844770,-6.907811,-7.228497,4.084383,-7.202864,-2.042048,-8.766641,-9.091379,8.545112,5.332242,3.129085,-8.545555,-2.560761,-4.582200,-7.727214,3.813165,4.153619,7.972256,-1.142411,1.199443,0.580211,4.835168,-9.733584,5.658577,-4.803129,2.180588,9.736527,6.078857,-5.013277,-1.016582,3.497657,-9.796358,4.575610,-3.537520,-7.562204,-5.805097,8.388102,1.035644,9.910352,4.056788,8.123119,2.599039,-9.865986,-4.887891,-2.007246,2.265453,-2.173008,9.074745,-1.248760,3.543401,4.713144,-6.477131,-9.136857,-9.025949,1.280743,5.742851,-9.031574,4.645680,4.221177,5.614604,-9.682860,0.284058,-3.419275,-0.139629,7.122611,-5.780771,6.756198,8.096112,-9.150964,1.333220,-1.128405,4.526033,-6.556414,4.980031,-7.906721,9.150656,-9.871201,-9.874914,2.902072,2.467444,-1.159013,2.627949,-9.806942,6.054171,-7.582969,-3.414822,-4.782021,-2.924601,9.343571,-7.057003,-2.699939,-5.197735,6.931558,-2.078083,-4.366525,5.973342,8.636979,-6.251353,2.702940,-6.394618,4.078970,-0.957460,-2.193238,-6.005012,1.663255,-3.255847,-4.222402,-1.745458,9.828345,2.944420,-4.392583,-9.472878,0.702842,8.291410,4.157254,4.474846,7.809348,-8.078885,-1.669126,1.639422,8.284684,2.176727,-6.975667,0.646679,-6.590397,1.285235,3.175214,-0.804966,2.317612,-4.473475,-7.786773,3.251329,7.082320,4.410917,-3.104088,9.715616,-5.212861,5.956570,-2.005232,-8.625987,8.272086,6.893729,-8.903763,-3.447863,-0.221307,-8.842709,-1.723090,-0.374267,8.087554,8.703913,-9.579764,8.779946,9.505371,0.384075,-9.726637,6.603500,-3.118531,-0.719215,-6.659325,-1.921928,6.419019,9.766308,-3.008075,-7.980003,-0.311123,0.398335,-7.715062,3.318736,4.051248,-4.050474,2.005096,-4.408285,-0.098124,-2.696216,5.121222,0.118701,2.032707,-5.176715,-8.778017,9.855680,-5.865652,3.728553,6.893070,-3.976049,-8.699490,-3.426448,-0.990548,9.760618,-3.754422,-1.068791,-1.510469,-1.159889,-9.262345,6.573389,3.422944,3.300551,8.830746,7.859096,-3.867706,7.062767,-1.646797,-1.365947,-8.457852,3.519970,7.279624,-0.111832,-7.354467,4.039833,6.364742,2.716781,5.348041,-9.527940,-0.028075,4.546219,-3.679748,0.450563,0.415193,9.092671,0.375518,-5.396365,-1.122023,-2.727609,9.847262,-0.738183,-5.391526,-5.116339,-1.583215,-1.259189,-9.919666,0.158305,-1.804364]], dtype = "float32")#candidate|8229|(2, 1024)|const|float32
call_8227 = relay.TupleGetItem(func_5391_call(relay.reshape(var_8228.astype('float32'), []), relay.reshape(const_8229.astype('float32'), [8, 16, 16]), ), 2)
call_8230 = relay.TupleGetItem(func_5395_call(relay.reshape(var_8228.astype('float32'), []), relay.reshape(const_8229.astype('float32'), [8, 16, 16]), ), 2)
output = relay.Tuple([call_8222,call_8227,var_8228,const_8229,])
output2 = relay.Tuple([call_8223,call_8230,var_8228,const_8229,])
func_8235 = relay.Function([var_8228,], output)
mod['func_8235'] = func_8235
mod = relay.transform.InferType()(mod)
mutated_mod['func_8235'] = func_8235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8236 = relay.var("var_8236", dtype = "float32", shape = ())#candidate|8236|()|var|float32
func_8235_call = mutated_mod.get_global_var('func_8235')
call_8237 = func_8235_call(var_8236)
output = call_8237
func_8238 = relay.Function([var_8236], output)
mutated_mod['func_8238'] = func_8238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
call_8279 = func_2899_call()
call_8280 = func_2899_call()
output = call_8279
output2 = call_8280
func_8283 = relay.Function([], output)
mod['func_8283'] = func_8283
mod = relay.transform.InferType()(mod)
mutated_mod['func_8283'] = func_8283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8283_call = mutated_mod.get_global_var('func_8283')
call_8284 = func_8283_call()
output = call_8284
func_8285 = relay.Function([], output)
mutated_mod['func_8285'] = func_8285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3876_call = mod.get_global_var('func_3876')
func_3877_call = mutated_mod.get_global_var('func_3877')
call_8348 = relay.TupleGetItem(func_3876_call(), 0)
call_8349 = relay.TupleGetItem(func_3877_call(), 0)
uop_8354 = relay.atan(call_8348.astype('float64')) # shape=(1, 2, 13)
uop_8356 = relay.atan(call_8349.astype('float64')) # shape=(1, 2, 13)
func_5391_call = mod.get_global_var('func_5391')
func_5395_call = mutated_mod.get_global_var('func_5395')
var_8390 = relay.var("var_8390", dtype = "float32", shape = ())#candidate|8390|()|var|float32
const_8391 = relay.const([-8.771876,-4.923941,4.802329,-4.752440,-1.583472,-9.417363,-1.039044,-8.760322,3.054707,1.625430,-7.777778,3.804928,6.056624,-7.767954,2.935707,-7.210323,7.828768,0.036663,-2.701276,1.703633,-2.300214,-4.020747,-9.198122,-3.896748,-5.223063,-0.017373,-8.115617,2.723748,2.355174,4.839543,5.771532,-1.981826,-1.817420,9.187538,3.712672,8.254725,2.435173,-8.042002,-1.320761,5.126831,3.641943,2.998632,0.550483,2.835803,-6.186597,7.642879,-1.789963,-8.971182,4.856164,9.545307,-3.202350,-0.350269,-8.487837,4.002595,6.767696,0.881667,-0.796015,5.618030,2.127816,-6.289070,7.063776,-0.783641,-1.422656,-9.725839,-9.555320,-2.138082,-2.480237,-7.334256,-5.548967,8.369002,9.509755,-2.703782,8.288788,9.304291,-9.663137,-7.090902,-9.175738,3.324035,-0.166561,-5.753198,-7.746498,8.967341,-4.928871,1.003973,-7.912949,-0.062324,-2.213695,1.464344,-8.757175,-1.840583,2.112102,-7.680910,1.301184,-3.613178,1.838200,6.620853,9.935537,-9.862089,-4.808457,-4.912604,-8.722861,-8.483946,2.866774,-7.462674,1.780655,-8.421182,-2.449204,-5.339927,4.474860,2.678200,7.831302,-8.037060,7.385618,-5.937249,-8.223415,-4.285709,-7.152793,8.998390,1.597730,3.537318,0.677212,5.141435,4.871542,1.483934,-0.988987,1.940587,2.071178,-9.083301,1.036204,5.251206,-3.836969,-7.601045,-9.398852,-3.955805,-8.081515,-2.669866,-2.427447,0.413442,1.324508,-5.927721,8.668029,-7.558004,9.877739,3.799128,0.182324,-8.773424,2.604667,-4.352481,5.669453,2.681475,8.443044,1.846135,9.444459,5.030425,7.199298,-7.069931,8.870454,-5.185363,5.166625,6.955301,-4.212046,-1.440118,7.523134,6.569949,-3.544823,-5.797263,0.300296,5.463594,-8.530396,6.765423,-5.179432,-2.983055,-3.444115,-2.902443,-4.323935,8.337895,2.079415,-8.478438,-3.971552,2.095360,-7.462790,-3.686525,3.372853,-1.711473,-9.394117,-0.062681,5.347651,6.189726,2.067254,-5.936169,2.417406,-5.022474,8.429357,0.197391,-7.050581,-7.479718,-1.209587,-2.238577,-6.839476,7.362547,7.077751,5.449335,-6.885220,-2.557670,-3.448320,-7.154787,-6.750493,0.798428,6.619234,-0.014382,0.722149,4.000518,5.945046,-0.760527,-2.631455,0.746030,9.132858,7.587646,2.898441,3.890130,-7.268615,6.156190,-1.802069,-0.866323,-3.094156,1.017918,-6.030276,2.111032,2.796179,9.076304,-0.839829,1.132966,-3.802524,2.036177,-2.262110,7.863235,-7.625798,-0.922246,1.190042,3.215500,1.533059,-0.396228,4.182618,3.635193,8.840104,-2.976652,0.652913,3.233087,-1.741468,3.597225,0.854090,9.765381,-8.160698,-4.332845,6.347576,9.409644,-8.542879,-0.664977,9.368071,-9.005065,-7.669548,-8.516090,-0.573233,8.475797,6.044884,-9.510990,-5.670219,-2.845700,0.501737,-8.688648,-4.815015,7.810244,9.904838,-6.141891,2.452594,9.770695,-4.706022,-8.487414,6.435560,6.367716,-9.808844,4.089429,-4.673418,1.323799,-1.145875,-5.386080,3.289383,-6.097521,8.924674,-4.591054,9.499935,-5.673057,3.797190,0.191906,0.316366,4.190490,-7.118248,-4.986429,6.908655,-6.716103,2.666187,-4.430389,-0.765948,-6.367513,-0.194649,-2.350187,-8.068895,9.473883,0.004414,7.149754,4.730766,7.251990,0.577958,-7.929906,9.564614,6.621907,1.544288,-3.757450,-2.641063,1.662884,6.083223,-3.857372,6.474129,8.913430,-8.827631,1.929694,-7.243644,4.412558,-6.657788,-1.953952,-3.530535,-0.375461,9.690129,9.454938,3.602477,-6.182583,8.447441,3.884597,-7.501309,0.313517,5.428949,4.599797,8.514352,4.364857,-0.810309,-3.962665,1.096842,9.089154,7.523841,-4.072505,4.123316,0.678998,-0.967289,8.509890,0.999578,0.616782,6.803215,-0.258098,-8.351088,-4.758476,8.247903,9.427518,-1.494601,-3.336133,-9.000284,-7.290095,6.576949,-5.495491,-8.291975,2.510797,-0.693522,-0.001871,8.819164,0.450504,5.449727,-8.015128,-1.021383,1.316793,-1.492549,-3.334859,8.911394,5.396798,-9.990480,-6.140421,3.804680,-3.706789,-9.768745,-9.881783,-3.034986,5.344306,0.031812,-4.366681,-8.729770,-9.666089,6.142911,0.536194,-3.346243,-4.356063,-0.568702,8.279645,-3.397299,7.248332,4.081455,-4.754103,7.392479,6.359479,9.097313,-9.273735,9.179609,6.341861,4.160855,2.620845,9.635468,-0.465444,-7.642107,3.176404,-8.090394,-0.908489,-7.101174,3.220535,-1.213892,5.643536,-4.192093,9.086700,-2.818305,0.464047,3.797932,6.638183,-3.016862,-8.836308,-2.357568,9.412894,7.782851,-4.930377,-2.929172,6.103462,-3.500830,-8.730343,6.433561,-4.945027,-4.343686,4.646250,4.810528,-3.007572,4.100367,-9.428723,7.422201,-0.571168,7.625780,-7.533820,-9.151221,0.570918,-7.886681,8.736719,8.264430,-1.334262,5.575540,-1.330705,-7.926670,-0.154853,9.386606,4.621370,-1.039407,2.255696,-6.835853,7.131634,-0.676932,3.550726,7.683639,-7.460291,7.869572,-3.630732,-3.603997,3.074874,-4.366057,-5.215714,-5.981345,-5.466560,3.136665,2.245740,0.084272,-9.013496,5.021892,9.412558,6.479476,1.323525,-4.919617,4.696236,-8.034159,1.331582,1.392804,0.141384,-5.293192,-4.620638,5.807801,8.818853,8.137093,-3.366395,-5.431486,9.866003,9.126899,-5.891008,-5.990313,7.762859,-4.114877,8.283208,-5.384836,7.515539,-1.270259,2.728555,7.659399,7.508446,-5.218247,6.501545,9.685856,-6.593353,-9.017496,-5.524969,1.631255,1.716041,-2.648645,2.007738,8.503907,5.063673,-6.769350,-4.720447,-4.756932,-2.992890,0.742479,6.748355,-2.311273,-9.607785,-2.756512,-4.231205,-0.259092,4.474247,-2.410732,7.607006,3.381600,-9.704874,3.070823,-5.165087,-0.172238,1.047420,-0.770021,-9.827220,-3.027336,3.634366,7.561517,-9.772531,-6.674350,-2.154395,-9.156091,-6.989724,3.481664,-7.492342,4.200031,-9.117712,1.997598,-1.521856,-9.242307,6.491233,0.469939,7.852197,-5.650347,-0.131030,5.834019,9.841437,-2.570355,5.540622,-5.759323,3.257672,-3.076718,3.673870,0.462999,-8.762741,-2.915613,-0.838677,-8.724497,-7.581841,-9.394763,9.711612,-8.384304,9.003621,3.201639,-4.794824,-9.080556,2.043666,4.697673,1.626433,-3.432343,-9.429941,1.182055,-3.630254,-5.652045,-5.434869,3.950078,-4.395820,-4.177443,8.290632,-4.970848,-8.733496,9.593813,-2.529930,-2.043338,2.917792,5.974056,-4.511091,-8.455315,-2.867857,7.124760,5.938658,5.256037,-9.580771,-0.376768,7.022705,1.317015,7.242147,6.774200,6.640880,0.033637,4.730793,-8.762068,3.689843,-8.993093,4.972084,-2.157713,7.366058,-5.853308,-2.648778,6.288498,-6.118087,5.581061,8.407558,8.438109,-1.125392,6.112255,9.722309,7.438323,-5.406522,-4.454802,-8.713599,9.610108,-9.121681,1.808339,-3.923830,-9.629474,-3.912507,-0.192309,7.762566,-6.577802,7.699140,1.521562,-2.003270,0.793479,-7.146162,-1.805078,5.634434,-1.067330,-0.748991,-4.298801,-9.762854,1.046603,-3.865061,-5.792358,6.840643,4.303589,-8.372913,0.794728,-3.924908,-5.017769,-3.242704,5.358464,-5.018059,-7.820415,5.537227,4.872178,9.863516,-6.084150,-1.074490,7.511872,-0.363806,-1.662803,6.412700,9.957194,4.525359,7.853505,-7.558480,6.721001,-7.299255,2.323942,-8.982226,-4.610196,1.370867,7.442089,8.711540,1.480136,2.023580,5.268782,5.921593,-7.159323,-0.770339,5.168743,-6.728495,0.309962,-1.562886,2.387881,0.278415,-2.661756,-3.067840,-5.494376,5.877655,9.991387,-4.342346,6.308659,3.757708,-7.495744,3.271158,5.642446,-5.154528,8.041658,8.151562,6.259921,-3.323801,-1.278719,9.152828,-4.144429,-4.093333,5.038232,-8.714320,9.000893,2.174547,7.789487,2.549329,-7.824900,4.298534,-3.188838,-1.945507,4.668284,2.827278,-1.641654,8.927977,1.462314,-6.784800,-2.124562,-7.381581,9.757713,8.477838,-5.845385,4.576243,-8.564260,-1.718683,7.537312,-6.007960,2.894296,-4.303387,-6.991648,7.367533,-0.619297,-9.692815,-1.819907,-9.867915,-4.661785,3.348148,-6.561044,-6.043015,1.022815,3.867808,6.551471,-8.625279,9.138061,-8.704701,-8.638342,-6.662483,-5.795457,3.630771,1.690137,-1.687902,7.141195,-7.852964,-4.515457,-0.148517,-0.069048,-4.979387,3.657126,-8.929605,-1.406140,-2.434159,-0.755942,5.988519,3.143685,-8.210806,-1.657558,7.219122,-5.478147,7.005467,-5.878501,-5.647942,0.452420,-1.333849,0.194969,6.673410,-3.775161,-4.191118,-3.342765,6.943414,-4.325241,-7.034410,-0.536546,-2.884798,-6.535295,0.809667,4.542296,7.317470,-3.889321,8.565094,-4.652845,5.654122,-8.501211,-0.387165,4.778297,8.185155,6.303694,-5.238798,4.217759,-0.827506,-9.695819,-3.241600,7.287107,-6.091355,2.010540,-6.028946,1.508070,-1.342937,9.794014,-7.873220,-9.680123,6.890699,-9.467448,5.863679,-0.322664,1.936723,1.412694,2.468736,7.242014,1.230963,2.562412,-8.476471,1.741200,0.576306,6.655119,-7.298721,1.555402,1.560076,5.063667,1.962707,-6.863597,7.786536,-8.965228,1.634114,-0.849405,-9.427321,-6.907511,-8.742687,-7.789591,-2.041625,-4.535370,7.434713,-2.916253,1.554638,-5.228042,-0.918182,4.262903,-6.293089,-5.596489,9.535400,-5.358483,-2.508159,-1.443686,1.609036,-1.918891,7.397238,-6.431674,-2.603723,1.412753,-2.512868,-7.738477,1.665656,-3.387019,9.771037,8.995304,-1.721270,6.336996,-9.565436,0.608125,-0.145146,1.340615,-3.766490,-9.172270,5.019781,-3.088998,7.340289,-2.554005,-9.259920,2.449857,5.609973,-0.861113,-6.684554,-7.400292,-7.901680,-8.073133,-0.577411,-9.850053,1.590956,2.743481,-7.986430,2.862059,9.290570,-8.072361,-3.110554,7.165187,-4.504131,2.880583,2.498758,0.409015,-2.404950,-4.197945,-7.976708,2.449414,-2.076952,-3.317187,4.291712,-1.443016,5.237605,-8.159262,-2.253761,8.442161,-8.277360,-4.080760,-1.200987,0.117245,5.672896,6.275179,-4.555112,-8.538130,-3.006230,8.634741,-4.679684,-2.899527,0.874844,6.627430,-4.206923,-5.919735,-5.503370,4.210520,8.974564,4.047355,-9.392358,-1.959071,9.060803,6.199185,6.214836,3.807501,0.279372,6.378021,4.564319,-9.317610,9.150093,-9.641534,0.910503,-8.922231,-2.861450,-4.285813,8.296279,9.099602,7.346812,-7.440065,6.465489,-5.367417,9.148575,0.212861,-9.646848,-0.694833,4.827906,5.919427,-5.710395,3.660447,8.354630,-7.726690,-6.627871,-1.212575,-5.299837,-3.166206,-6.632256,-7.192716,-3.509282,-3.954975,-7.987470,-6.749337,7.251938,-7.626498,8.817563,-9.382840,2.881527,3.212441,-1.342058,6.116362,-9.690768,2.018595,-3.929252,-4.157970,2.463034,-7.044977,-3.521800,6.888479,-0.538277,6.478695,4.098948,1.606872,-5.914940,-7.469534,-3.987331,-2.912461,6.259903,7.244170,8.934265,-3.315650,1.155652,-7.517534,2.421684,4.616856,-0.917829,-4.010317,2.271728,-0.494673,-0.819981,-4.016163,4.617518,-6.549274,-5.485947,-1.692060,5.416699,7.734270,4.953328,-3.391663,2.358270,0.033001,5.374620,-0.669839,6.026176,-7.933954,5.029681,-8.572710,1.023231,-8.203405,-8.443224,-7.630949,2.724036,-9.648965,6.149369,-0.727452,3.328765,-1.507166,0.737359,9.208472,-3.862236,-7.586844,-0.247408,-5.127613,4.003078,-3.955127,4.419188,-9.605584,-0.543880,-0.093054,3.904103,-3.263365,-0.625318,8.328782,0.747543,-7.126678,5.660418,-7.940792,8.408842,8.906276,7.772825,-9.637790,-7.052511,5.704181,-9.029626,5.777829,-9.314094,-4.221409,-3.304238,-3.984873,-5.679146,6.858116,-1.007587,3.981388,-3.660033,-5.350126,-3.565085,9.359609,7.147947,0.839188,-7.256923,-5.172522,8.583085,0.959779,-2.175479,1.376028,-4.604508,-7.655952,-0.163595,-9.042184,2.616516,-8.672980,2.839311,-3.141180,4.887765,-9.416171,-1.964476,-9.320137,4.451142,-6.059720,-5.294324,-4.864503,-1.818696,0.594776,3.648136,-3.760651,-3.567430,-3.403675,-4.773596,9.903434,4.667368,2.644093,-3.795141,3.473712,3.651285,3.962363,4.214348,-3.306154,7.670416,2.488907,4.339653,6.825469,-2.955828,5.594605,-6.957781,-3.493539,8.858344,-3.340547,-6.823417,4.595615,9.548567,2.753080,3.304314,-9.169222,8.924204,7.285822,5.889936,-4.945936,-3.531477,-7.719384,-8.562182,-5.254204,-2.903702,2.584348,-2.732704,-7.067570,-7.468413,3.333858,9.289482,-5.871713,7.045037,0.111940,-0.084541,-1.814449,-8.975576,9.242815,-9.047061,-3.106276,-1.251856,5.224295,-1.772615,-6.743859,1.259869,-2.829044,-6.588685,2.857281,-1.007307,-8.236485,-5.993813,-5.703809,-7.015643,-0.256763,3.620691,6.102702,-5.002668,5.222342,2.058775,5.110228,7.600539,9.682980,-5.530608,6.605881,-3.224649,9.645095,-3.064261,3.315137,-3.027442,4.211632,-5.542282,5.922204,2.248261,0.385746,9.279795,1.477039,7.899187,-0.462451,4.607859,-3.340710,4.942486,4.771993,4.866509,-8.967523,-9.822312,-3.183851,0.498471,7.655112,-0.067848,1.736451,-0.164253,-0.741766,8.971659,3.811283,-8.463763,-7.877373,-8.631848,0.105510,-9.734129,7.232456,-2.302261,3.278045,3.486233,-9.293918,-7.737729,0.855789,3.436080,-7.797362,-9.999361,3.341296,3.099202,1.502037,7.248581,-2.037631,-9.042920,-7.768702,6.045715,-3.783341,8.157398,-9.449449,-1.055651,-1.148967,2.332267,0.797478,-3.222993,-9.933913,-0.932879,0.686288,-8.364885,-2.465940,1.907130,1.750505,-6.821987,-9.671164,8.876932,4.099562,-6.630855,2.835864,-0.755620,-5.272070,6.417844,4.001974,-0.007569,-1.689155,-6.745639,7.654570,4.037040,-3.264544,5.823573,5.890803,6.749746,-4.080891,-9.493471,0.253366,-4.715165,-7.153541,-6.219198,-2.695943,-9.277649,8.383008,0.964738,0.825501,-2.415095,-7.725651,-4.116759,-9.783365,1.660275,0.385154,-9.237183,-2.128527,-2.346467,-4.009601,-6.478211,2.189115,7.326412,0.508397,-0.203467,-4.456121,-8.140295,-2.287733,-8.950214,-6.614328,1.435852,-0.773512,-6.058953,5.374174,6.894920,0.426230,-1.522895,-5.604189,-6.552080,-5.213517,-6.909521,9.019506,5.962124,8.428240,-3.034386,9.067682,-8.892846,0.251807,7.130650,8.561174,-4.937585,-4.312042,-6.227896,7.124159,9.679325,5.806268,-3.364790,-0.903631,-4.453127,0.427261,-6.184359,-4.587684,-1.122139,4.567373,-6.058011,-5.682725,-3.170137,6.772035,-1.419139,7.251697,-8.759194,9.692453,6.751073,5.359706,-4.243802,-5.477965,4.738034,9.415596,-7.010893,3.771698,1.683353,9.558118,8.941650,-1.154644,8.178618,4.324907,-5.692513,-5.856391,-1.704986,6.936268,9.668631,8.777564,2.866362,-5.653003,-8.719463,-9.887269,-6.277786,5.205357,6.510851,8.715894,0.127204,-6.578449,0.237266,6.072207,-4.383289,-1.606313,-8.331785,7.697112,-8.412105,0.768280,7.136933,7.097857,6.266748,6.898385,-3.756163,-6.214851,0.108076,-9.284920,6.963856,9.548367,-5.317554,3.239415,2.382317,-1.830876,6.984056,-6.594504,-2.040089,-1.478288,-5.254943,-9.649818,-8.051948,-8.131754,9.021863,-5.536021,-9.947089,3.160960,-4.555394,4.138614,8.787535,5.758060,8.856737,0.977593,2.085133,-3.264678,-3.141456,5.282761,0.395604,-1.851118,-6.229485,7.438395,-7.669627,9.284277,-6.538088,8.418408,6.546692,-5.290117,-2.417225,-5.023619,9.281833,-5.181974,3.461305,-0.174717,0.255697,2.430437,3.856887,0.134571,7.312242,-7.176910,5.909066,3.356054,2.873830,-0.668901,-0.950000,5.612357,3.467373,2.691580,9.512381,8.553751,-8.278263,-3.174654,0.515464,-2.590957,0.063480,-1.912502,-7.103813,4.016281,1.325923,7.869018,-4.359698,4.857498,-0.842641,-3.196526,-2.538268,8.630843,-9.715729,2.636694,8.740788,7.472165,-4.824416,6.677908,0.439137,-0.585062,-7.971061,-6.085913,8.742784,-4.043183,-8.917570,2.236637,-2.032755,-8.734626,6.603191,9.378029,6.535469,2.508683,-0.910749,-0.975652,6.427955,5.610302,-7.723871,-4.136835,1.646394,-7.037557,5.291766,5.752452,-9.120557,-5.020689,0.722912,-7.412150,-5.394646,-5.972806,-4.201394,4.574935,-3.261389,-0.490525,-7.550196,-5.689942,3.349575,-4.217782,-9.356671,8.314002,2.446158,-9.803688,5.557187,4.964445,-9.279904,-6.233000,-3.788573,-9.976594,-1.998393,7.089747,9.462817,6.236433,-4.640601,2.013066,2.517126,2.614703,2.263840,6.907169,-6.249241,-6.332238,-1.084851,-8.404076,-5.454229,8.353526,7.333309,-7.683038,-9.682185,9.789301,0.616513,-1.504949,9.036864,7.288108,3.194723,3.441727,6.735764,5.234838,5.237018,-1.086985,-5.484643,-9.899453,-4.726562,7.553529,-7.797735,-8.416064,7.754817,-9.417214,-6.443046,2.283542,-5.029518,-7.560497,2.586133,-4.450118,2.347211,-7.834345,-7.644518,4.458824,4.658556,-4.381593,1.906981,0.710767,1.543432,-2.744474,6.333490,4.186867,-7.658524,1.747393,0.518227,-3.955764,-4.525581,6.946360,-1.805341,-1.716925,6.331701,5.611571,6.952959,8.427094,0.752668,-1.779049,-7.246826,-2.378264,2.386598,-5.612872,0.130964,7.504268,9.390645,2.753820,0.441606,-3.113756,-0.889170,-5.624979,-1.760443,-6.836766,6.901050,8.801974,-4.144905,-3.626290,1.641734,6.987781,-9.302883,7.347842,6.862446,3.281666,-2.644503,0.421370,1.681625,-4.984752,6.561977,5.196792,1.247730,-4.302057,8.172128,-2.453034,0.386306,6.322341,-3.211013,-2.841234,5.960705,1.382441,2.867192,-2.550611,-8.436431,-9.024050,1.387983,-5.658145,-6.318392,8.324486,0.668196,9.646526,9.237357,-3.024019,0.422826,2.952098,-5.945932,-6.416124,6.745691,6.924194,5.500686,8.839211,8.378091,0.948032,8.918735,4.676575,-3.275324,7.813957,-3.948660,-5.358355,-0.730982,-6.649174,-4.676224,-1.427624,-6.907773,6.096902,-0.565100,-3.847347,-8.958408,3.848580,-2.856220,-1.936260,5.503539,-7.558250,-7.697044,5.264436,-6.837251,8.051815,-7.940855,-7.341734,5.060716,-9.684443,9.588953,-9.241322,0.788405,5.210900,-7.142110,-1.141623,5.078943,9.690545,2.307620,0.891049,8.959820,-9.117086,-5.423278,-6.968217,-0.045958,7.227281,5.777310,3.756146,-9.372800,8.396064,1.619574,-2.205526,-6.178548,-5.468638,1.985061,-3.971004,-1.699146,-6.963585,1.805216,3.440175,-0.665146,5.440449,-0.126750,-0.409468,7.421711,7.805529,0.918461,-2.996278,-8.370282,-9.892062,-7.615199,-6.362874,9.203715,1.577024,5.572118,4.753788,-3.074488,4.231190,6.287384,1.934614,3.292688,8.071552,-6.089613,3.388317,-2.779998,-4.384527,-3.358553,-7.281270,-8.288449,-9.345892,-3.426457,6.977317,4.576911,1.056321,-1.968679,4.967836,3.352404,-3.553689,-4.724456,-1.552050,7.065774,9.527027,1.947914,-2.455930,-6.204085,8.245460,-2.980537,3.274503,-9.859095,-5.025848,6.152386,-4.958512,0.255366,-0.169099,-3.447453,-4.419856,-9.581500,1.257228,4.128452,1.104094,6.386598,-6.631084,5.798495,9.903272,-1.407837,-7.839928,7.351863,8.376548,7.468335,2.291830,-1.830102,-8.853251,8.845742,5.966266,0.991587,-9.596756,0.263324,-6.610838,-1.475717,-0.504694,3.492350,-8.334500,-2.651430,2.915784,-6.435125,0.136094,5.797824,5.673130,-5.897018,7.347588,6.234865,-1.561806,9.208855,3.331001,-8.652263,-1.362158,-0.380597,-1.496798,-5.827363,-4.668832,-8.175507,-0.373787,5.496774,8.280883,-5.437479,9.775561,-6.899115,-9.335717,-2.133254,-5.627315,-5.503040,4.238169,2.220470,5.910365,5.261968,-4.406381,3.486179,6.890754,-3.057067,-4.047668,-4.157000,-0.891722,8.033586,-3.617988,-9.031535,-4.428378,9.333478,1.370062,-3.847648,4.445063,6.173725,3.684813,-1.065077,7.647028,5.585866,5.193640,-4.264432,9.376560,-5.192488,1.706503,-0.425714,1.361708,7.830878,-8.492413,7.526533,-3.556875,-0.427588,-4.920937,-3.706152,5.502451,5.792116,3.428202,6.499687,-6.197505,-0.182008,-0.901041,9.137858,8.962791,0.595594,-5.109427,4.341355,9.569419,9.599574,-9.994945,0.150265,7.742738,-5.373909,-8.566812,4.510846,5.418411,2.988431,-9.895979,-7.667346,9.524803,-7.124369,-0.038468,-2.415311,1.629040,5.326650,-3.078778,2.793747,-1.000413,-0.720498,6.599919,6.197727,-8.561463,4.299485,0.704288,-3.549807,5.538263,5.309814,-1.574960,0.670342,7.075868,5.892734,3.955687,1.251233,-1.673398,2.268041,-9.484097,-0.308402,6.830750,0.762787,8.254643,4.371131,-2.630859,5.237885,0.005115,-7.542313,0.477593,-5.461488,1.057310,-8.269727,0.296365,2.037554,-8.006713,-5.068350,8.358887,5.279033,7.388024,7.491170,8.032505,-4.644556,3.554506,3.965460,-1.652745,-0.253835,1.230384,9.605964,-0.094006,-8.564833,1.432142,-0.198205,1.553311,1.545331,-3.421807,-1.021816,4.818315,-6.874363,-1.237280,-5.877508,2.246397,-3.342594,7.345228,-5.146224,-8.904687,4.700323,0.267571,1.888861,6.641589,-8.609356,9.978303,3.754598,9.443992,-1.569333,1.812817,8.542308,9.484150,6.463569,1.748517,-9.558222,7.309748,1.669939,5.851716,0.822995,-5.195785,-7.052433,-6.098635,-5.305055,-5.951416,2.215769,6.499425,-8.124666,-9.068471,-6.728891,1.874155,-5.242945,-3.551537,-3.545877,-0.755026,-0.623886,2.274025,-0.204572,-3.800550,5.137881,0.058435,-8.447265,4.270361,6.379737,-5.536232,-2.139037,-9.084547,-4.295754,-2.810250,-1.871473,-1.474877,9.083009,-7.248956,-5.420092,8.426961,0.066888,-4.118958,0.280525,-6.578843,-2.132670,-0.640161,9.223172,1.001936,2.833114,-9.543414,-3.869541,-7.709314,-4.319563,1.798586,7.699700], dtype = "float32")#candidate|8391|(2048,)|const|float32
call_8389 = relay.TupleGetItem(func_5391_call(relay.reshape(var_8390.astype('float32'), []), relay.reshape(const_8391.astype('float32'), [8, 16, 16]), ), 3)
call_8392 = relay.TupleGetItem(func_5395_call(relay.reshape(var_8390.astype('float32'), []), relay.reshape(const_8391.astype('float32'), [8, 16, 16]), ), 3)
bop_8398 = relay.less_equal(var_8390.astype('bool'), const_8391.astype('bool')) # shape=(2048,)
func_5651_call = mod.get_global_var('func_5651')
func_5653_call = mutated_mod.get_global_var('func_5653')
call_8402 = func_5651_call()
call_8403 = func_5651_call()
output = relay.Tuple([uop_8354,call_8389,bop_8398,call_8402,])
output2 = relay.Tuple([uop_8356,call_8392,bop_8398,call_8403,])
func_8404 = relay.Function([var_8390,], output)
mod['func_8404'] = func_8404
mod = relay.transform.InferType()(mod)
mutated_mod['func_8404'] = func_8404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8405 = relay.var("var_8405", dtype = "float32", shape = ())#candidate|8405|()|var|float32
func_8404_call = mutated_mod.get_global_var('func_8404')
call_8406 = func_8404_call(var_8405)
output = call_8406
func_8407 = relay.Function([var_8405], output)
mutated_mod['func_8407'] = func_8407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2806_call = mod.get_global_var('func_2806')
func_2808_call = mutated_mod.get_global_var('func_2808')
call_8437 = relay.TupleGetItem(func_2806_call(), 1)
call_8438 = relay.TupleGetItem(func_2808_call(), 1)
output = relay.Tuple([call_8437,])
output2 = relay.Tuple([call_8438,])
func_8453 = relay.Function([], output)
mod['func_8453'] = func_8453
mod = relay.transform.InferType()(mod)
mutated_mod['func_8453'] = func_8453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8453_call = mutated_mod.get_global_var('func_8453')
call_8454 = func_8453_call()
output = call_8454
func_8455 = relay.Function([], output)
mutated_mod['func_8455'] = func_8455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2965_call = mod.get_global_var('func_2965')
func_2966_call = mutated_mod.get_global_var('func_2966')
call_8500 = relay.TupleGetItem(func_2965_call(), 1)
call_8501 = relay.TupleGetItem(func_2966_call(), 1)
output = relay.Tuple([call_8500,])
output2 = relay.Tuple([call_8501,])
func_8519 = relay.Function([], output)
mod['func_8519'] = func_8519
mod = relay.transform.InferType()(mod)
mutated_mod['func_8519'] = func_8519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8519_call = mutated_mod.get_global_var('func_8519')
call_8520 = func_8519_call()
output = call_8520
func_8521 = relay.Function([], output)
mutated_mod['func_8521'] = func_8521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_8555 = relay.TupleGetItem(func_2153_call(), 0)
call_8556 = relay.TupleGetItem(func_2154_call(), 0)
output = call_8555
output2 = call_8556
func_8562 = relay.Function([], output)
mod['func_8562'] = func_8562
mod = relay.transform.InferType()(mod)
mutated_mod['func_8562'] = func_8562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8562_call = mutated_mod.get_global_var('func_8562')
call_8563 = func_8562_call()
output = call_8563
func_8564 = relay.Function([], output)
mutated_mod['func_8564'] = func_8564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5587_call = mod.get_global_var('func_5587')
func_5589_call = mutated_mod.get_global_var('func_5589')
call_8622 = relay.TupleGetItem(func_5587_call(), 1)
call_8623 = relay.TupleGetItem(func_5589_call(), 1)
const_8624 = relay.const([[[3.728431,-2.644716,0.578877,-2.728315,6.551056,-4.782757,6.240553,-4.400279],[2.487581,1.267369,2.520410,3.103583,-0.599653,6.057781,8.858616,8.625214],[4.094198,-9.851840,-0.889382,6.276569,7.565815,-5.667502,3.350671,-5.938764],[8.109840,7.008339,-0.522448,-5.572069,-9.796674,6.332979,-0.259585,-9.280642],[-5.339668,-1.543350,7.659866,9.545989,-3.748851,3.298680,-1.211835,-1.942687],[-5.987240,-6.803854,-8.940955,3.896287,-1.184174,-9.102530,5.920959,4.445451]],[[-0.528330,-6.623955,0.558939,-2.448315,-5.417238,8.667259,7.625436,-5.647959],[-0.210510,-3.649556,5.505555,4.516986,-9.988423,-7.021925,-5.330638,0.604838],[-2.708204,-5.126295,9.619492,4.873766,1.635294,-8.539822,-3.392593,-9.006622],[-1.828923,-5.848944,-4.714050,5.865891,7.972768,-9.923130,1.372680,-4.588294],[-4.510600,-1.237472,6.014732,3.386586,-0.330364,5.211967,-1.043464,7.223111],[-0.805162,4.754750,3.266839,8.530903,-4.584651,-2.080133,-7.142214,0.447727]],[[-5.212357,-1.567258,4.735455,-8.244457,-6.332942,0.680717,1.004790,8.689151],[-1.457429,-2.619319,6.228747,-5.223824,7.898907,-3.954889,-3.585150,-0.275218],[9.374968,-3.623631,-5.909572,-5.884577,1.579626,-2.302229,1.767381,-5.389922],[-9.171339,5.246141,8.486231,6.672979,7.387655,-1.937771,-8.320472,-3.823538],[3.753708,-8.512303,8.081981,-7.554706,-7.106649,5.957176,-4.381143,4.609014],[-4.806064,7.294129,4.347434,-3.200317,-6.472814,-5.887808,-8.937062,-0.246173]],[[3.633787,7.497495,1.108325,8.249496,-3.962970,7.420345,8.397050,5.243798],[-0.197697,1.633662,-2.440220,-7.256526,-0.744171,1.873767,1.490648,-1.893848],[-4.090828,8.253062,-8.117458,-2.482115,5.007929,1.623817,-0.007487,-2.755230],[6.131797,-2.122771,9.279294,-8.265264,5.914762,-5.182077,8.874770,-9.743026],[6.126137,-4.311637,-4.127241,-8.862959,-9.738476,-0.385223,6.807953,6.688645],[-7.699244,-5.698106,-4.316845,3.604814,-1.143737,-7.965478,2.868065,6.971433]],[[-8.325645,-4.525029,-2.743408,-5.516836,-4.307394,-7.763523,9.361513,2.915242],[8.981770,-1.624160,-2.990072,-3.078592,4.632248,9.361979,2.646332,4.779883],[-0.725054,-6.457505,8.301922,4.559509,-4.881461,1.903782,-8.942683,0.128529],[-6.615042,0.437067,-9.048424,5.086421,2.547436,-1.827922,0.353609,-9.757937],[5.927678,4.665362,-3.253179,-7.898532,-8.140028,-2.131447,-8.214990,-4.446820],[9.563758,-3.064438,6.317767,-4.981047,-3.300665,2.012770,-4.170275,5.018642]]], dtype = "float64")#candidate|8624|(5, 6, 8)|const|float64
bop_8625 = relay.greater_equal(call_8622.astype('bool'), relay.reshape(const_8624.astype('bool'), relay.shape_of(call_8622))) # shape=(5, 6, 8)
bop_8628 = relay.greater_equal(call_8623.astype('bool'), relay.reshape(const_8624.astype('bool'), relay.shape_of(call_8623))) # shape=(5, 6, 8)
func_7124_call = mod.get_global_var('func_7124')
func_7126_call = mutated_mod.get_global_var('func_7126')
call_8629 = func_7124_call()
call_8630 = func_7124_call()
output = relay.Tuple([bop_8625,call_8629,])
output2 = relay.Tuple([bop_8628,call_8630,])
func_8637 = relay.Function([], output)
mod['func_8637'] = func_8637
mod = relay.transform.InferType()(mod)
mutated_mod['func_8637'] = func_8637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8637_call = mutated_mod.get_global_var('func_8637')
call_8638 = func_8637_call()
output = call_8638
func_8639 = relay.Function([], output)
mutated_mod['func_8639'] = func_8639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_8695 = relay.TupleGetItem(func_2382_call(), 1)
call_8696 = relay.TupleGetItem(func_2384_call(), 1)
output = relay.Tuple([call_8695,])
output2 = relay.Tuple([call_8696,])
func_8716 = relay.Function([], output)
mod['func_8716'] = func_8716
mod = relay.transform.InferType()(mod)
output = func_8716()
func_8717 = relay.Function([], output)
mutated_mod['func_8717'] = func_8717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_8718 = relay.TupleGetItem(func_3267_call(), 1)
call_8719 = relay.TupleGetItem(func_3269_call(), 1)
output = relay.Tuple([call_8718,])
output2 = relay.Tuple([call_8719,])
func_8759 = relay.Function([], output)
mod['func_8759'] = func_8759
mod = relay.transform.InferType()(mod)
mutated_mod['func_8759'] = func_8759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8759_call = mutated_mod.get_global_var('func_8759')
call_8760 = func_8759_call()
output = call_8760
func_8761 = relay.Function([], output)
mutated_mod['func_8761'] = func_8761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8780 = relay.var("var_8780", dtype = "uint8", shape = (14, 2, 15))#candidate|8780|(14, 2, 15)|var|uint8
var_8781 = relay.var("var_8781", dtype = "uint8", shape = (14, 2, 15))#candidate|8781|(14, 2, 15)|var|uint8
bop_8782 = relay.multiply(var_8780.astype('uint8'), relay.reshape(var_8781.astype('uint8'), relay.shape_of(var_8780))) # shape=(14, 2, 15)
uop_8785 = relay.erf(var_8780.astype('float64')) # shape=(14, 2, 15)
uop_8794 = relay.asin(bop_8782.astype('float32')) # shape=(14, 2, 15)
output = relay.Tuple([uop_8785,uop_8794,])
output2 = relay.Tuple([uop_8785,uop_8794,])
func_8815 = relay.Function([var_8780,var_8781,], output)
mod['func_8815'] = func_8815
mod = relay.transform.InferType()(mod)
var_8816 = relay.var("var_8816", dtype = "uint8", shape = (14, 2, 15))#candidate|8816|(14, 2, 15)|var|uint8
var_8817 = relay.var("var_8817", dtype = "uint8", shape = (14, 2, 15))#candidate|8817|(14, 2, 15)|var|uint8
output = func_8815(var_8816,var_8817,)
func_8818 = relay.Function([var_8816,var_8817,], output)
mutated_mod['func_8818'] = func_8818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5587_call = mod.get_global_var('func_5587')
func_5589_call = mutated_mod.get_global_var('func_5589')
call_8913 = relay.TupleGetItem(func_5587_call(), 1)
call_8914 = relay.TupleGetItem(func_5589_call(), 1)
output = relay.Tuple([call_8913,])
output2 = relay.Tuple([call_8914,])
func_8915 = relay.Function([], output)
mod['func_8915'] = func_8915
mod = relay.transform.InferType()(mod)
mutated_mod['func_8915'] = func_8915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8915_call = mutated_mod.get_global_var('func_8915')
call_8916 = func_8915_call()
output = call_8916
func_8917 = relay.Function([], output)
mutated_mod['func_8917'] = func_8917
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8977 = relay.const([[[False,True,False,False,True,True,False,False,False],[True,False,False,False,True,False,False,False,False],[False,False,False,False,True,False,False,False,True],[True,False,False,True,False,True,True,False,False],[True,True,True,True,False,True,False,True,False],[False,True,False,False,True,False,True,True,False],[True,True,False,False,False,True,False,False,True]],[[True,True,False,False,False,True,True,False,True],[False,False,False,False,False,True,False,True,True],[True,False,False,True,True,False,True,True,False],[False,False,False,False,True,False,False,True,False],[True,False,False,False,False,False,True,False,True],[False,True,False,True,False,False,False,True,True],[False,False,False,False,True,False,True,True,False]],[[True,True,True,True,False,False,False,False,False],[False,True,True,True,False,False,True,True,False],[True,True,True,False,True,True,True,False,False],[True,True,True,True,False,False,True,True,False],[True,True,True,True,False,False,False,True,False],[False,True,False,False,False,True,True,True,True],[True,False,True,True,True,False,True,True,False]],[[True,False,True,False,True,True,True,False,True],[True,True,False,False,True,True,False,False,False],[True,True,True,False,False,True,True,False,False],[True,True,True,True,False,True,True,False,False],[False,True,True,True,True,False,True,True,True],[True,True,True,True,False,True,False,True,True],[True,False,True,True,False,False,True,True,True]],[[False,False,True,True,False,True,False,True,False],[False,True,True,True,False,False,True,True,False],[False,True,True,True,False,False,True,True,False],[True,False,True,False,True,False,False,False,False],[True,False,False,True,False,True,False,True,True],[False,False,False,False,False,True,False,False,True],[False,True,False,False,False,True,True,True,False]],[[True,True,False,False,False,False,False,True,False],[True,True,True,False,True,False,False,True,False],[True,True,False,False,True,True,False,True,False],[True,True,True,True,False,False,True,False,False],[True,False,True,True,True,False,True,True,True],[True,True,False,True,False,False,False,False,True],[True,True,True,True,False,False,False,False,False]],[[False,True,True,False,True,True,True,False,True],[True,True,False,False,False,False,True,False,False],[True,False,True,False,True,False,True,True,False],[True,True,False,False,False,False,True,False,True],[False,False,True,True,True,True,False,False,True],[False,True,True,False,False,True,True,False,True],[True,False,False,False,True,True,False,True,True]],[[False,False,False,True,True,False,True,False,True],[False,False,True,True,False,False,True,True,False],[False,False,True,True,False,True,True,False,False],[True,False,False,False,True,False,False,False,True],[False,True,False,False,True,False,True,True,True],[False,False,False,False,False,False,True,False,False],[False,True,False,True,False,True,True,True,False]],[[True,True,False,True,False,False,True,False,True],[True,True,False,False,True,False,False,False,True],[True,True,True,True,False,False,False,True,True],[True,False,False,True,True,True,True,False,True],[True,True,True,True,True,True,True,True,False],[False,False,False,True,True,False,False,False,False],[False,False,True,True,True,True,True,False,False]],[[True,False,True,False,True,False,False,False,True],[True,False,True,True,False,True,False,True,False],[False,True,False,False,True,True,True,True,False],[False,False,True,False,True,True,True,False,False],[False,False,True,True,True,True,False,False,True],[True,False,False,True,False,True,False,False,False],[True,True,True,True,True,False,False,False,True]],[[True,True,True,False,True,True,True,True,False],[False,True,True,True,True,True,True,False,False],[False,False,False,False,True,False,False,True,True],[False,True,True,True,True,True,True,True,False],[False,False,True,True,False,True,False,True,False],[True,False,False,True,False,True,False,False,False],[False,False,True,True,False,True,True,False,False]],[[False,True,True,False,True,True,False,False,True],[True,False,False,True,False,False,True,True,False],[False,True,False,True,True,True,False,True,True],[True,False,True,True,False,False,False,False,False],[True,False,False,False,True,True,False,False,True],[False,False,False,False,False,False,True,True,True],[False,False,False,True,True,False,True,True,False]],[[True,True,True,True,True,True,False,True,True],[True,False,True,False,False,True,False,True,False],[False,False,True,False,False,True,False,True,True],[True,False,False,True,False,True,False,True,False],[False,True,False,True,False,False,False,False,False],[False,True,True,False,True,True,True,True,True],[True,False,True,False,True,True,False,False,True]],[[True,True,True,False,True,False,False,False,True],[False,False,True,False,False,False,False,False,False],[True,False,True,True,True,True,False,True,False],[True,True,True,True,False,False,False,False,True],[False,False,True,True,False,True,True,True,False],[True,True,False,True,False,False,True,True,True],[False,True,False,True,True,True,False,False,False]],[[False,False,False,True,False,True,False,False,True],[True,True,False,True,False,True,False,False,False],[False,True,True,False,True,True,False,False,False],[False,False,False,False,False,False,False,True,False],[True,True,False,True,True,True,True,False,False],[True,False,False,True,True,True,False,True,False],[True,True,True,True,True,True,True,True,False]],[[True,False,True,False,True,True,False,False,False],[False,False,False,False,True,True,False,False,False],[True,False,True,True,False,False,False,True,False],[False,True,True,False,False,True,True,False,True],[False,True,True,False,True,True,True,True,False],[False,True,False,False,False,True,True,True,True],[True,False,False,True,False,True,True,False,False]]], dtype = "bool")#candidate|8977|(16, 7, 9)|const|bool
var_8978 = relay.var("var_8978", dtype = "bool", shape = (16, 7, 9))#candidate|8978|(16, 7, 9)|var|bool
bop_8979 = relay.logical_or(const_8977.astype('bool'), relay.reshape(var_8978.astype('bool'), relay.shape_of(const_8977))) # shape=(16, 7, 9)
bop_8986 = relay.bitwise_or(bop_8979.astype('int16'), relay.reshape(const_8977.astype('int16'), relay.shape_of(bop_8979))) # shape=(16, 7, 9)
func_3103_call = mod.get_global_var('func_3103')
func_3105_call = mutated_mod.get_global_var('func_3105')
const_8995 = relay.const([3,-3,-9,7,4,-8,-3,6,2,6,-9,-1,-7,-8,9,-10,-3,-5,8,8,5,10,5,-7,-8,-8,-4,-5,2,-1,9,5,4,4,9,-4,8,-2,2,9,-6,8,7,-1,9,2,-3,1,5,9,-7,-10,-7,-7,4,8,4,2,-1,2,6,7,-9,9,6,-9,9,10,-4,4,5,-9,-9,-2,-5,2,6,-3,10,10,9,8,1,-5,-7,2,-10,10,-4,-2,5,-10,-5,-10,6,10,-1,3,-8,-6,7,6,-1,-9,-1,3,6,8,8,-6,-8,-10,-7,-3,-1,-10,9,6,-4,-4,-7,-10,-10,-6,-6,3,-1,5,5,-2,6,-5,-10,4,7,9,-5,-6,-9,5,5,1,2,3,-5,4,-9,-8,-9,2,-2,-9,-10,-4,-9,4,9,-1,3,-10,1,2,4,-8,4,-10,-1,-5,-6,-1,8,-1,1,9,6,-6,7,8,10,6,-7,2,5,-2,4,4,-7,10,6,5,3,2,9,-1,7,-5,-4,-6,-4,-8,10,-4,-8,6,-6,-8,2,8,2,-2,-9,-5,6,9,-8,10,-2,4,9,-6,2,-3,-5,-8,2,-6,-7,-3,-10,2,-1,5,-7,3,-10,-10,-4,7,-5,6,4,-10,1,-5,8,-1,2,-4,9,-4,6,-1,8,-10,4,-4,-8,-1,-10,3,6,6,-2,-6,8,9,-3,-6,10,-5,4,3,4,2,-10,1,-9,-3,-7,-1,8,-1,-2,-5,-5,-7,10,10], dtype = "int32")#candidate|8995|(288,)|const|int32
call_8994 = relay.TupleGetItem(func_3103_call(relay.reshape(const_8995.astype('int32'), [4, 72])), 5)
call_8996 = relay.TupleGetItem(func_3105_call(relay.reshape(const_8995.astype('int32'), [4, 72])), 5)
uop_9007 = relay.asinh(var_8978.astype('float32')) # shape=(16, 7, 9)
output = relay.Tuple([bop_8986,call_8994,const_8995,uop_9007,])
output2 = relay.Tuple([bop_8986,call_8996,const_8995,uop_9007,])
func_9010 = relay.Function([var_8978,], output)
mod['func_9010'] = func_9010
mod = relay.transform.InferType()(mod)
mutated_mod['func_9010'] = func_9010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9011 = relay.var("var_9011", dtype = "bool", shape = (16, 7, 9))#candidate|9011|(16, 7, 9)|var|bool
func_9010_call = mutated_mod.get_global_var('func_9010')
call_9012 = func_9010_call(var_9011)
output = call_9012
func_9013 = relay.Function([var_9011], output)
mutated_mod['func_9013'] = func_9013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mod.get_global_var('func_2456')
func_2457_call = mutated_mod.get_global_var('func_2457')
call_9034 = relay.TupleGetItem(func_2456_call(), 1)
call_9035 = relay.TupleGetItem(func_2457_call(), 1)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_9038 = relay.TupleGetItem(func_3451_call(), 0)
call_9039 = relay.TupleGetItem(func_3453_call(), 0)
output = relay.Tuple([call_9034,call_9038,])
output2 = relay.Tuple([call_9035,call_9039,])
func_9064 = relay.Function([], output)
mod['func_9064'] = func_9064
mod = relay.transform.InferType()(mod)
mutated_mod['func_9064'] = func_9064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9065 = func_9064_call()
output = call_9065
func_9066 = relay.Function([], output)
mutated_mod['func_9066'] = func_9066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mod.get_global_var('func_7124')
func_7126_call = mutated_mod.get_global_var('func_7126')
call_9108 = func_7124_call()
call_9109 = func_7124_call()
func_6226_call = mod.get_global_var('func_6226')
func_6229_call = mutated_mod.get_global_var('func_6229')
var_9113 = relay.var("var_9113", dtype = "float64", shape = (11, 182))#candidate|9113|(11, 182)|var|float64
call_9112 = relay.TupleGetItem(func_6226_call(relay.reshape(var_9113.astype('float64'), [1, 2002])), 0)
call_9114 = relay.TupleGetItem(func_6229_call(relay.reshape(var_9113.astype('float64'), [1, 2002])), 0)
output = relay.Tuple([call_9108,call_9112,var_9113,])
output2 = relay.Tuple([call_9109,call_9114,var_9113,])
func_9119 = relay.Function([var_9113,], output)
mod['func_9119'] = func_9119
mod = relay.transform.InferType()(mod)
mutated_mod['func_9119'] = func_9119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9120 = relay.var("var_9120", dtype = "float64", shape = (11, 182))#candidate|9120|(11, 182)|var|float64
func_9119_call = mutated_mod.get_global_var('func_9119')
call_9121 = func_9119_call(var_9120)
output = call_9121
func_9122 = relay.Function([var_9120], output)
mutated_mod['func_9122'] = func_9122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2526_call = mod.get_global_var('func_2526')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_9143 = relay.TupleGetItem(func_2526_call(), 0)
call_9144 = relay.TupleGetItem(func_2528_call(), 0)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_9157 = relay.TupleGetItem(func_3451_call(), 0)
call_9158 = relay.TupleGetItem(func_3453_call(), 0)
output = relay.Tuple([call_9143,call_9157,])
output2 = relay.Tuple([call_9144,call_9158,])
func_9161 = relay.Function([], output)
mod['func_9161'] = func_9161
mod = relay.transform.InferType()(mod)
output = func_9161()
func_9162 = relay.Function([], output)
mutated_mod['func_9162'] = func_9162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_9197 = relay.TupleGetItem(func_3451_call(), 0)
call_9198 = relay.TupleGetItem(func_3453_call(), 0)
func_5587_call = mod.get_global_var('func_5587')
func_5589_call = mutated_mod.get_global_var('func_5589')
call_9199 = relay.TupleGetItem(func_5587_call(), 1)
call_9200 = relay.TupleGetItem(func_5589_call(), 1)
output = relay.Tuple([call_9197,call_9199,])
output2 = relay.Tuple([call_9198,call_9200,])
func_9219 = relay.Function([], output)
mod['func_9219'] = func_9219
mod = relay.transform.InferType()(mod)
output = func_9219()
func_9220 = relay.Function([], output)
mutated_mod['func_9220'] = func_9220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8519_call = mod.get_global_var('func_8519')
func_8521_call = mutated_mod.get_global_var('func_8521')
call_9234 = relay.TupleGetItem(func_8519_call(), 0)
call_9235 = relay.TupleGetItem(func_8521_call(), 0)
func_8815_call = mod.get_global_var('func_8815')
func_8818_call = mutated_mod.get_global_var('func_8818')
const_9239 = relay.const([[-9,-10,5,-2,-2,10,-7,-4,-8,4,-3,3,-1,-2,10,5,8,-10,7,7,2,-1,-6,-7,1,10,-2,-5,-8,5,-3,-9,-4,-4,-10,2,-6,-2,2,-9,-9,-9,4,6,-1,1,-9,-6,7,6,1,-9,3,-1,1,7,1,-2,8,-8,-9,2,7,-1,-8,-4,-4,-7,-4,-9,-10,-6,-10,7,-8,-8,2,-3,8,5,-10,6,-2,1],[3,3,-8,-8,9,8,-10,2,-6,3,10,3,-7,-6,-4,-6,-8,-4,-8,-7,-8,4,-1,10,-3,5,-10,-7,-7,-5,1,8,10,8,-4,5,-1,-10,7,-2,-4,8,-3,-1,10,-1,-7,2,1,-5,4,9,-3,8,10,4,6,7,7,-8,-4,-7,8,-10,9,7,7,9,-6,2,8,9,-8,-1,-2,3,10,9,-9,-10,-4,2,-3,-3],[-9,-5,3,-8,8,-7,10,8,-7,-9,-6,5,-6,-3,-9,7,3,6,4,6,-5,4,-10,7,-1,-6,-7,-7,9,1,-6,9,-2,3,8,10,2,-9,8,4,4,6,-2,-4,3,-2,-8,8,3,-6,3,-4,-1,9,-9,-1,-2,6,-4,-8,8,5,10,-5,-7,6,6,2,3,1,4,-6,-10,2,-5,-2,10,-8,-3,5,-4,7,-9,9],[2,-5,-1,5,-5,7,9,2,9,2,-3,-9,6,-4,6,-8,-3,-7,5,-8,-10,10,-6,-9,-10,-4,-7,-7,10,-9,-7,7,1,-6,9,-7,-1,-8,-9,10,9,-2,9,-9,-5,7,9,-3,9,9,3,7,-4,1,-4,-3,-6,-9,-6,-4,-9,2,5,8,-5,4,-4,-4,-5,-10,-5,-2,-9,6,9,6,-8,-8,6,-9,-5,-10,5,7],[-8,-1,-1,-4,3,-6,9,-4,2,2,-10,-8,-5,5,-2,-9,9,-3,-2,3,-8,-10,2,-4,6,4,-8,-2,-3,-10,-9,-5,-9,-9,7,6,2,10,8,10,-1,-1,-9,1,-9,-8,2,-5,4,-1,7,-6,-3,-2,-2,6,-7,2,9,-9,-4,5,10,6,5,5,-7,10,7,1,-6,-3,-4,-10,-6,-9,6,8,-3,2,-2,-1,-7,-8]], dtype = "uint8")#candidate|9239|(5, 84)|const|uint8
call_9238 = relay.TupleGetItem(func_8815_call(relay.reshape(const_9239.astype('uint8'), [14, 2, 15]), relay.reshape(const_9239.astype('uint8'), [14, 2, 15]), ), 1)
call_9240 = relay.TupleGetItem(func_8818_call(relay.reshape(const_9239.astype('uint8'), [14, 2, 15]), relay.reshape(const_9239.astype('uint8'), [14, 2, 15]), ), 1)
output = relay.Tuple([call_9234,call_9238,const_9239,])
output2 = relay.Tuple([call_9235,call_9240,const_9239,])
func_9241 = relay.Function([], output)
mod['func_9241'] = func_9241
mod = relay.transform.InferType()(mod)
output = func_9241()
func_9242 = relay.Function([], output)
mutated_mod['func_9242'] = func_9242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8637_call = mod.get_global_var('func_8637')
func_8639_call = mutated_mod.get_global_var('func_8639')
call_9261 = relay.TupleGetItem(func_8637_call(), 0)
call_9262 = relay.TupleGetItem(func_8639_call(), 0)
output = relay.Tuple([call_9261,])
output2 = relay.Tuple([call_9262,])
func_9265 = relay.Function([], output)
mod['func_9265'] = func_9265
mod = relay.transform.InferType()(mod)
output = func_9265()
func_9266 = relay.Function([], output)
mutated_mod['func_9266'] = func_9266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9274 = relay.var("var_9274", dtype = "float32", shape = (3, 14, 14))#candidate|9274|(3, 14, 14)|var|float32
uop_9275 = relay.tan(var_9274.astype('float32')) # shape=(3, 14, 14)
func_3424_call = mod.get_global_var('func_3424')
func_3428_call = mutated_mod.get_global_var('func_3428')
const_9278 = relay.const([[3.260381,-3.444676,-8.464668,3.234128,-4.958735,7.761085,8.505952,-5.640602,-8.574910,8.134940,9.462862,5.558945],[-8.212385,3.488563,-0.144549,8.650253,-9.977165,-8.770627,2.423359,-2.699721,8.879421,-9.535728,6.853221,-1.947575],[6.182773,7.972645,-3.419998,-3.211577,7.330029,0.533114,5.721094,7.708495,5.632279,-0.690160,6.614443,-4.375150],[-7.482466,-5.197664,-0.827825,8.327521,-4.169626,-9.204908,-0.557442,-6.894951,-9.657321,7.575747,-7.481412,-3.804009],[2.653875,-7.276712,7.111542,7.639488,9.395724,5.415423,-0.282263,9.905962,1.977415,5.983264,1.371777,-4.261301],[3.435451,6.653231,-2.175443,3.919189,-7.667320,4.061994,7.483934,0.689018,-4.929102,-6.206016,-1.546923,7.558585],[4.955153,8.583155,-7.043050,2.565073,4.579091,-3.049867,-1.299897,8.191077,0.820241,-4.989239,2.479959,-8.655929],[-5.429302,-9.770183,-4.762093,7.135777,-0.380359,-3.303046,-3.421302,3.300675,-3.965532,3.785991,5.252524,3.576870],[6.366736,4.869134,-1.895977,-6.764499,-0.927511,0.567583,7.473030,7.839666,0.766606,-6.018478,0.331966,7.093247],[4.720146,-7.569299,-3.490843,-2.933335,4.267013,-0.534100,4.138947,-8.215602,-3.426264,-7.685895,-1.600089,9.799556],[-7.363326,2.465750,5.448013,2.242788,-9.575956,-7.515097,-7.634446,-4.434262,-8.030903,6.620682,-8.483256,-9.379614],[6.635314,-2.689335,-5.962461,8.102922,5.335148,-6.396048,0.059003,-3.287746,6.929142,-8.051390,4.344167,8.746464],[-4.336668,5.486789,-9.252366,1.166244,-5.532266,-5.983456,9.972401,3.392636,-7.177101,-0.223771,-4.799473,1.256961],[9.079195,1.702681,3.674571,-4.580877,3.478760,-0.146116,4.324790,1.650117,2.496709,-8.121219,2.937007,6.910452],[5.870482,7.984101,-6.287393,0.999606,5.354583,-0.508839,7.791116,-5.271795,-9.104390,7.630580,-7.066384,-7.783464],[-8.498097,-2.334664,-2.394507,3.096880,6.558712,9.873244,-9.117145,1.543398,6.309318,-1.791677,2.066389,4.053591],[2.698307,5.263968,2.338493,1.036006,8.346959,8.259245,4.427339,5.523651,-3.664462,1.826552,-6.216462,-7.302052],[-3.043660,-7.102230,7.887070,-8.725829,-7.576065,-8.489356,4.540931,6.821093,4.533497,-7.651442,-2.896447,-8.854525],[8.548243,2.948546,-5.805047,0.780041,-5.495206,-7.429538,-5.201411,-3.378906,9.225224,-2.902002,-4.149370,5.073675],[7.650418,-4.425098,3.352705,-8.350915,-2.339711,-9.841738,9.658645,-1.757465,-9.592297,2.987816,7.067959,3.870675],[-2.967999,4.881668,-4.857029,-3.951122,-7.912287,5.265538,5.205199,-8.924671,1.894112,4.264811,7.497281,-0.985246],[-9.686733,-4.684169,1.169308,-7.765087,2.528332,-5.426211,-6.039184,7.591608,8.927019,4.801631,-4.411299,8.459544],[-1.828398,-2.681213,-6.818095,0.619619,-5.184958,-6.737817,-6.445147,5.874749,-0.503801,8.172068,6.595631,5.219580],[4.397895,9.905824,4.496322,8.590302,9.066662,4.286659,-8.444159,8.732793,-2.944058,-5.537991,-2.222155,-8.337370],[0.818577,-6.634305,0.070570,6.428335,-0.273835,-8.404742,3.021474,3.045413,-4.833322,-4.652754,-3.201183,8.032083],[9.165719,3.317319,-6.825610,-6.654035,0.725493,-6.936339,0.848398,3.740044,-2.412812,8.223103,2.685204,3.276198],[3.833836,-8.573622,8.882175,-8.932328,4.664437,-6.389839,6.528372,2.437150,5.082314,5.513206,4.460848,-9.886552],[0.405233,-9.061951,7.395219,-2.334699,1.222698,-9.094676,-2.430615,-0.415486,-1.973707,4.770776,2.251779,-2.787484],[-3.234486,5.041866,-8.281907,-8.960643,5.876307,-3.698592,-6.613392,7.108109,7.549667,-7.631606,-2.410576,7.303878],[7.571910,7.379978,3.575915,-2.680355,9.437721,6.554647,6.503666,2.595693,-3.051846,8.411110,-3.877218,1.949842],[-8.862683,-0.699198,-3.147350,1.484641,-2.884613,-1.662040,-6.841386,-0.560157,8.202971,4.875673,4.808988,0.447386],[-3.117465,-4.866202,-4.563802,-7.382830,6.958202,8.637467,-4.268754,0.327459,4.359321,-6.250933,-0.528372,-1.917089],[2.209561,2.320409,-7.564240,-7.207804,8.093159,-5.327394,-4.307247,5.742511,2.123529,5.161420,9.390568,-6.045814],[2.413933,0.182144,2.629041,9.644865,4.577848,0.483461,9.080177,5.316077,-5.336522,-1.823418,-1.600988,-6.220183],[6.163793,-3.382456,9.254068,4.649114,8.821543,-2.237951,-5.891109,8.100204,-2.692053,-1.662536,2.613998,3.419608],[7.298545,-6.178987,1.061598,9.060371,4.077930,6.213493,-2.923284,3.882191,5.147494,2.345370,9.045784,-2.654151],[3.243449,0.332562,-2.251469,2.371930,7.152079,6.244796,-4.613309,5.617485,-1.825042,-3.078855,6.474623,0.832211],[-1.560184,3.320940,9.007031,3.856331,-5.521277,5.279634,8.649801,-8.775075,5.546844,9.509687,-1.844679,7.192615],[-9.774662,9.197822,4.446637,-7.167811,5.112423,1.207700,4.813378,-0.132582,3.004616,-9.230609,-3.784205,2.951824],[7.607711,7.711950,9.571408,-0.706190,4.008358,-6.994616,-6.765789,-1.521095,-5.077106,6.735239,-5.844197,5.945100],[3.244222,9.550414,-1.854985,0.858503,1.368055,2.625768,8.687374,-3.086178,4.687097,5.991658,-7.134127,-4.376219],[4.840634,-4.217090,8.100841,-3.183897,-5.905841,-5.859618,-8.399036,-9.065238,-9.674316,8.887822,0.711867,-1.753640],[-8.090524,9.485477,9.541103,1.356324,7.227080,1.371228,2.163566,4.678322,2.097175,-0.614865,-2.177065,6.144479],[-9.628601,-2.056649,0.115313,-0.347967,7.270478,-9.598718,8.703959,2.000140,2.294015,8.803833,-5.700610,-8.439461],[-1.995692,-4.965655,4.731407,-3.861502,-4.470556,-9.852210,7.789256,8.183118,-0.829749,-0.101883,1.108352,-8.610421],[-2.364422,5.648618,-4.121471,-0.980573,-8.751056,2.611339,-7.546211,2.463282,0.985204,-8.788406,-6.748437,6.041289],[6.063367,5.105664,3.450101,-5.757386,7.899809,4.707466,3.497869,9.417379,-6.461377,-2.126283,-3.492260,0.991896],[6.019345,-3.940613,4.981043,-3.897743,9.973083,1.693549,1.304180,-5.857632,6.947446,-8.504718,1.706671,-2.570197],[6.211376,7.973857,-0.709946,1.666826,-9.424234,3.589057,1.581360,5.966436,2.454426,4.779940,-0.499513,-2.820095],[3.235055,-1.821343,-6.932326,-5.915069,7.810056,1.407674,-3.661161,1.571931,-5.354472,-0.501624,-9.548647,3.633288],[-1.872745,-2.776064,-6.429116,-1.178533,-3.600192,6.152470,5.689525,-0.901716,3.463671,-5.622733,-7.352901,-4.291780],[2.014754,-7.913803,-1.790064,3.511717,-3.920775,4.474845,-8.317977,3.044688,3.748908,3.831118,-6.598538,3.286196],[1.824367,-0.223658,-5.807232,9.397538,5.296628,6.768224,6.364295,2.989983,3.329968,-6.439499,-1.133530,-0.367327],[-8.836902,2.896426,2.033935,-0.187258,-1.705424,-0.372577,-7.791806,-2.503932,3.271434,0.377759,1.067207,-8.888341],[-3.053352,-5.143292,-5.405553,-3.409268,0.368943,-9.243624,-5.737928,7.994856,0.851084,4.643534,5.480726,8.368754],[-5.742743,3.669839,8.240108,-2.804773,5.822262,4.780019,1.652205,-1.324876,0.942034,0.592952,-5.261912,-4.817676],[-6.412973,5.348726,-5.440076,-8.971039,0.402781,-0.765196,8.909084,-5.142210,2.932021,9.103302,7.978940,3.463735],[-9.230176,8.201770,-2.014644,-0.753326,2.555263,-1.357753,-4.391463,-2.439336,4.937519,2.631606,3.285592,3.561672],[2.142005,0.314623,-1.878702,6.929756,9.402517,4.531549,-4.581064,-6.522383,4.907412,1.856548,8.206152,-4.177287],[-4.609307,-4.638144,5.398488,5.994469,-5.549778,-2.311228,5.527391,8.465123,-2.755792,-4.017994,-4.437864,-6.470940],[-3.658609,7.452687,-1.583183,-9.140716,1.027858,-6.193561,-2.068860,0.407340,9.193996,2.872965,5.582385,1.064168],[-7.765144,9.402640,5.515605,-6.762231,2.469634,2.729371,8.647088,9.699683,-7.275160,-5.608122,2.404886,3.224053],[4.921210,6.357834,7.229984,-1.231678,0.975715,-1.965286,4.964547,-8.969480,6.504259,-8.020502,0.079576,0.568921],[-6.838323,-8.904192,-6.884821,-3.657245,-9.292342,-5.866702,-3.620434,6.753440,-8.280746,-1.953555,4.239646,2.407089],[4.484619,8.998272,1.929708,-2.685458,-4.630186,5.933922,0.560335,-0.677694,5.434645,7.285665,1.902102,9.377857],[9.188578,-3.283895,-6.724471,6.731126,3.271972,-5.126850,8.667569,-6.519647,7.065982,-2.316198,3.824447,8.475286],[-1.180701,2.499598,7.065429,8.084984,-7.864345,1.176359,9.050975,-2.922002,-7.838231,0.434717,-6.119992,0.762439],[4.886588,-7.700765,5.379135,-2.532095,-7.050299,0.264375,-6.972798,-1.210192,-9.332454,-8.938055,-5.201726,8.816848],[3.852050,7.763206,-1.845813,-7.340182,-3.627028,1.069543,-8.074484,6.973731,2.020713,-2.650376,-2.532760,-3.507780],[1.814910,-4.419310,-5.523367,-9.043510,3.193790,6.596243,-9.401141,2.107318,-5.206305,-3.904611,-5.765044,2.124048],[6.665272,-6.640887,9.794548,-0.813365,1.874739,-3.742385,-5.968324,5.319801,-3.661354,-4.490690,-3.925381,-5.048524],[-1.447558,0.750400,-9.098649,-9.092531,5.722016,3.545757,8.950242,7.356528,8.863074,-0.380689,-3.354150,5.158223],[-3.962755,8.525166,5.183473,3.002631,0.762468,2.006355,-5.218752,5.858335,-3.501710,-1.270126,-9.132940,-0.761049],[8.898243,-5.340741,-8.382601,2.042505,3.184702,-1.451140,-1.917335,-5.581633,-7.756921,4.548903,6.940056,-3.112151],[-7.832430,6.646699,-8.299148,-0.673238,5.772813,2.747867,-1.867860,-0.006269,-6.112981,-0.963197,6.049577,-2.219080],[-4.713125,-2.527081,-4.162653,2.177638,3.766888,2.128870,-7.265668,9.755741,-9.411549,-1.992294,9.924437,-8.661152],[3.103525,-9.740560,1.994794,-8.111911,4.931985,6.318429,-6.438891,-7.762141,-5.361747,7.889783,8.387284,-8.444398],[-1.370207,-0.234414,9.806705,1.643220,0.054292,6.875992,-1.427884,8.797259,-2.764376,9.066722,9.235854,-1.355976],[8.858874,8.468846,8.533827,6.315931,-5.933545,1.725134,-9.047610,-3.174813,6.330233,2.502445,7.205204,0.358049],[0.062727,-0.265720,-2.702867,-0.318976,5.984447,-1.993302,4.527735,-4.833880,9.600375,-7.064165,-1.607866,1.084899],[-9.015800,1.521081,6.828138,-6.419862,3.741685,-8.743961,4.629465,5.903677,-3.980922,6.457896,3.119342,7.858187],[-9.020167,1.248219,-6.395934,-6.500216,1.692774,-1.568778,-9.323158,5.665429,-6.095454,5.102705,6.616680,-4.642593],[-7.917752,9.723072,9.123028,-2.536978,-0.221409,-5.319442,-3.625511,-6.235259,-6.575001,4.497421,5.840476,-7.205316],[-5.783522,8.992492,-4.164619,7.858269,-4.500404,7.171419,7.080634,5.996130,4.342521,-7.045090,-4.360129,1.776936],[0.509984,3.713355,4.079205,-4.485059,7.504085,9.698083,2.644784,-5.614849,-9.515448,0.175460,2.967243,2.312745],[-7.922066,-4.316799,-2.264115,7.024868,-1.579753,-9.037772,-4.005415,5.705498,2.015653,-7.587439,0.476829,-2.849614],[-8.000058,3.463344,-4.168991,-5.947092,-9.420013,7.911547,-4.460433,6.300091,6.825886,-5.668855,-9.435109,5.854518],[9.079052,8.947787,-7.773305,-3.384880,9.514487,-6.732238,-3.834873,4.163644,5.971222,-1.424401,6.200523,1.064658],[7.880613,6.805263,0.471212,1.299581,-6.409623,-6.828385,-3.360422,8.472235,-7.785545,6.481319,-3.774157,-9.086667],[7.229608,9.290639,-2.723371,3.470035,-8.654481,9.220786,2.861680,-9.705160,8.348046,-9.811761,6.560465,-2.956909],[2.157580,1.731540,-8.743733,-4.910046,-3.034175,-5.208377,-6.211817,-2.476505,-1.644850,-7.083028,3.808321,0.160863],[6.680724,-3.312845,4.432448,4.069568,6.864165,-9.808744,-4.390259,6.469290,-1.968792,9.704309,-2.873828,-2.429605],[4.934336,-3.353189,7.538188,-7.530863,-1.096497,-8.122513,8.648475,-4.626066,-9.174682,-9.095585,2.165373,0.545279],[1.951405,-1.471941,-3.694546,3.906908,-5.566514,-0.157345,5.251127,-0.639154,-7.099058,-6.329258,-6.308234,-7.420117],[5.874663,4.851683,-2.483962,6.693593,1.080854,9.055621,-3.497617,-7.051129,2.983994,-3.505017,1.982343,-2.597825],[4.762077,6.191789,5.036730,-6.956171,-6.815720,-5.378463,-3.185232,-7.782027,0.321768,-8.331126,-3.725897,-1.425682],[9.393816,1.406246,-2.054084,-7.782164,-0.666154,2.501452,6.611257,-7.653721,-9.731305,4.259727,-1.431636,-2.991183],[4.335693,2.384716,7.811212,9.700167,8.725757,0.060978,-0.088528,9.498104,0.031223,0.861301,1.116023,-5.645790],[-6.547720,-1.416605,-2.236386,-1.768900,8.030512,2.710289,-1.487026,-1.521731,0.107736,5.420655,0.204474,-3.904606],[3.752681,-0.169142,-1.452446,-0.385653,-5.782903,8.484317,-8.321441,-1.363214,-9.938230,-8.719710,5.457692,-9.841875],[4.501021,-8.030154,-0.857353,0.690777,-3.087206,-1.179775,7.447893,4.271897,-2.549296,-9.743477,6.041088,-4.609659],[-6.238422,-8.256835,0.330750,4.219469,-5.204088,-8.732465,-1.786198,-6.786935,7.309993,4.063646,-9.437037,-9.263241],[-1.866205,5.294689,4.655228,8.952402,-9.060926,5.220339,-0.337854,-1.466696,6.584795,3.955846,0.583205,-8.927731],[1.018473,0.964125,0.216566,-4.517753,-7.613306,3.281149,4.975979,1.185455,-6.743544,-6.682795,6.957399,9.768749],[1.503096,4.190900,-9.482671,9.663673,3.064579,3.719709,-3.853318,-0.109186,2.818120,-3.357782,-8.891858,1.732430],[4.271687,2.612408,-3.621866,7.457140,-5.143347,-1.931714,-6.622324,-7.789665,-0.040958,-0.081415,9.549340,2.536669],[-5.694627,8.024563,-2.070272,5.654529,-9.586426,-1.595645,2.284837,-1.634225,-8.846738,4.029322,-4.547648,6.737893],[0.526053,4.371618,-0.661212,-7.868707,1.616938,-2.640258,-8.407981,5.085971,-0.970779,5.503113,7.836407,0.914390],[7.448977,-9.662842,-9.467814,-0.278288,-7.062192,-6.495102,8.421741,1.901516,1.754713,-7.772090,-9.518244,-1.134196],[1.508973,-7.660198,-0.563632,3.038479,-3.283674,4.993362,5.465898,0.561017,-5.885195,-0.745350,-4.936675,-3.134837],[6.766074,9.296265,-4.490818,7.854744,1.257187,-1.140009,7.568614,4.044536,7.285131,4.679245,0.748800,-7.145926],[-8.825319,6.848487,4.865741,-0.257061,-8.611529,-1.625699,-9.486783,-8.972403,2.809392,5.912948,-8.520500,6.240182],[5.012056,-2.739657,9.993104,-3.674254,-5.082476,-2.914607,2.243351,-3.584063,-3.409202,-7.748793,-1.687610,-5.541515],[1.188676,8.569261,5.022551,-8.073007,2.808974,8.444896,2.582571,-5.462797,0.499777,4.941894,-3.773476,-5.781676],[-5.836918,7.708547,5.780100,6.186919,5.399254,7.565867,0.123853,6.377087,-0.598939,6.238099,8.447593,3.406506],[-5.447892,7.302683,3.812859,1.394060,6.477749,-5.152954,-3.258597,0.776608,-0.800865,-2.244676,-9.526617,-9.844160],[-8.786789,1.230985,-1.641684,-5.029733,3.478134,5.074983,2.706867,6.071634,2.479806,-3.501819,9.615862,2.332083],[-3.238100,0.184297,6.688070,7.693309,1.663064,8.156468,-0.367116,-7.890144,-4.598910,-2.234551,-4.635588,-5.496763],[9.978741,3.923969,-4.052676,5.653464,6.334380,-7.289622,-5.695907,-7.432225,-2.991413,1.320771,-4.906218,-8.242716],[1.572622,-4.586302,-3.995253,9.729113,8.007715,-5.082066,2.436432,-8.563468,-7.414158,-4.315386,0.858920,-4.407548],[-4.740341,-4.088103,0.878661,8.335242,0.185917,-8.109695,-4.055309,1.067717,0.099267,-5.412975,4.031061,3.270446],[0.890246,6.524449,-6.090091,-4.505935,8.185776,5.336898,9.498045,-3.011194,0.878329,4.642485,-4.654299,0.717445],[-1.526746,3.397650,5.577296,-8.007949,-6.389254,7.730098,6.130671,4.730600,-6.073835,-1.412782,-5.129096,-9.388920],[6.763701,1.525905,-5.747175,2.026272,-7.633014,3.536936,0.983996,-1.390378,5.812780,6.729224,5.532511,9.955787],[5.172608,-8.510333,-0.408674,7.611068,-1.808427,-5.718885,-1.714816,3.253617,-8.567562,-5.157830,-2.307168,9.034643],[-8.876853,4.308274,4.027585,6.514951,-0.003010,-8.450044,-0.222665,-2.921905,4.182696,1.050703,8.095480,-1.780513],[9.267781,4.120630,-9.007827,1.949666,9.755710,-0.728430,-9.196577,-2.637145,4.150577,6.923001,-4.563601,-2.311446],[-4.432041,1.293897,2.145852,4.769784,-5.158841,-3.898950,5.708941,0.208284,-6.410465,-3.473339,3.387409,2.598205]], dtype = "float32")#candidate|9278|(128, 12)|const|float32
const_9279 = relay.const([[4.033930,2.877129,4.965673,9.112460,2.469397,6.521688,-0.778892,-2.055857,-1.042821,8.074898,2.202816,0.601382,-9.233890,5.260504,-8.822561,9.809640,1.969767,0.302751,6.416778,4.342351,-2.023700,6.104248,-9.192155,2.672532,-4.293933,8.435895]], dtype = "float32")#candidate|9279|(1, 26)|const|float32
call_9277 = relay.TupleGetItem(func_3424_call(relay.reshape(const_9278.astype('float32'), [1, 1536]), relay.reshape(const_9279.astype('float32'), [26,]), ), 1)
call_9280 = relay.TupleGetItem(func_3428_call(relay.reshape(const_9278.astype('float32'), [1, 1536]), relay.reshape(const_9279.astype('float32'), [26,]), ), 1)
func_2170_call = mod.get_global_var('func_2170')
func_2172_call = mutated_mod.get_global_var('func_2172')
call_9282 = func_2170_call()
call_9283 = func_2170_call()
output = relay.Tuple([uop_9275,call_9277,const_9278,const_9279,call_9282,])
output2 = relay.Tuple([uop_9275,call_9280,const_9278,const_9279,call_9283,])
func_9284 = relay.Function([var_9274,], output)
mod['func_9284'] = func_9284
mod = relay.transform.InferType()(mod)
var_9285 = relay.var("var_9285", dtype = "float32", shape = (3, 14, 14))#candidate|9285|(3, 14, 14)|var|float32
output = func_9284(var_9285)
func_9286 = relay.Function([var_9285], output)
mutated_mod['func_9286'] = func_9286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2965_call = mod.get_global_var('func_2965')
func_2966_call = mutated_mod.get_global_var('func_2966')
call_9341 = relay.TupleGetItem(func_2965_call(), 1)
call_9342 = relay.TupleGetItem(func_2966_call(), 1)
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_9357 = relay.TupleGetItem(func_5141_call(), 3)
call_9358 = relay.TupleGetItem(func_5142_call(), 3)
output = relay.Tuple([call_9341,call_9357,])
output2 = relay.Tuple([call_9342,call_9358,])
func_9409 = relay.Function([], output)
mod['func_9409'] = func_9409
mod = relay.transform.InferType()(mod)
output = func_9409()
func_9410 = relay.Function([], output)
mutated_mod['func_9410'] = func_9410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mod.get_global_var('func_7124')
func_7126_call = mutated_mod.get_global_var('func_7126')
call_9488 = func_7124_call()
call_9489 = func_7124_call()
func_8283_call = mod.get_global_var('func_8283')
func_8285_call = mutated_mod.get_global_var('func_8285')
call_9505 = func_8283_call()
call_9506 = func_8283_call()
output = relay.Tuple([call_9488,call_9505,])
output2 = relay.Tuple([call_9489,call_9506,])
func_9519 = relay.Function([], output)
mod['func_9519'] = func_9519
mod = relay.transform.InferType()(mod)
mutated_mod['func_9519'] = func_9519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9519_call = mutated_mod.get_global_var('func_9519')
call_9520 = func_9519_call()
output = call_9520
func_9521 = relay.Function([], output)
mutated_mod['func_9521'] = func_9521
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9544 = relay.const([[[-6,-2,-10,-5,3,-4,5,-2,6,-4,-5],[-10,-5,-3,6,8,8,8,-6,-10,-6,-9],[2,3,5,7,-10,-10,-9,-5,-2,6,2]],[[-9,6,9,-4,3,2,-4,-5,7,-9,10],[10,2,8,-4,-1,-1,2,8,-2,4,9],[1,10,-9,4,8,3,-10,7,3,6,-6]],[[8,8,9,2,-9,-3,-2,1,-10,-4,8],[-5,-5,-4,4,1,8,-10,1,-4,-8,3],[-9,-7,-3,5,-2,-6,-1,-2,-4,7,-4]],[[8,10,8,-1,9,5,-1,7,-10,6,-10],[10,-4,-4,-6,-7,-4,6,-6,-4,7,10],[-10,3,8,9,8,9,-6,10,-1,-4,-5]],[[-8,-7,7,6,9,-6,7,4,1,7,-4],[3,5,-3,9,-1,-1,1,-2,5,2,-6],[5,-7,1,-8,-7,9,5,2,9,2,2]],[[6,-10,-7,-4,5,4,10,8,-10,-9,6],[2,7,-1,-1,-2,-9,10,9,9,-7,-6],[10,-3,8,1,5,1,-7,10,-7,7,-7]]], dtype = "int16")#candidate|9544|(6, 3, 11)|const|int16
var_9545 = relay.var("var_9545", dtype = "int16", shape = (6, 3, 11))#candidate|9545|(6, 3, 11)|var|int16
bop_9546 = relay.bitwise_and(const_9544.astype('int16'), relay.reshape(var_9545.astype('int16'), relay.shape_of(const_9544))) # shape=(6, 3, 11)
output = bop_9546
output2 = bop_9546
func_9556 = relay.Function([var_9545,], output)
mod['func_9556'] = func_9556
mod = relay.transform.InferType()(mod)
mutated_mod['func_9556'] = func_9556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9557 = relay.var("var_9557", dtype = "int16", shape = (6, 3, 11))#candidate|9557|(6, 3, 11)|var|int16
func_9556_call = mutated_mod.get_global_var('func_9556')
call_9558 = func_9556_call(var_9557)
output = call_9558
func_9559 = relay.Function([var_9557], output)
mutated_mod['func_9559'] = func_9559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9241_call = mod.get_global_var('func_9241')
func_9242_call = mutated_mod.get_global_var('func_9242')
call_9585 = relay.TupleGetItem(func_9241_call(), 0)
call_9586 = relay.TupleGetItem(func_9242_call(), 0)
func_8915_call = mod.get_global_var('func_8915')
func_8917_call = mutated_mod.get_global_var('func_8917')
call_9588 = relay.TupleGetItem(func_8915_call(), 0)
call_9589 = relay.TupleGetItem(func_8917_call(), 0)
output = relay.Tuple([call_9585,call_9588,])
output2 = relay.Tuple([call_9586,call_9589,])
func_9595 = relay.Function([], output)
mod['func_9595'] = func_9595
mod = relay.transform.InferType()(mod)
mutated_mod['func_9595'] = func_9595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9595_call = mutated_mod.get_global_var('func_9595')
call_9596 = func_9595_call()
output = call_9596
func_9597 = relay.Function([], output)
mutated_mod['func_9597'] = func_9597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7671_call = mod.get_global_var('func_7671')
func_7673_call = mutated_mod.get_global_var('func_7673')
call_9601 = relay.TupleGetItem(func_7671_call(), 0)
call_9602 = relay.TupleGetItem(func_7673_call(), 0)
output = relay.Tuple([call_9601,])
output2 = relay.Tuple([call_9602,])
func_9608 = relay.Function([], output)
mod['func_9608'] = func_9608
mod = relay.transform.InferType()(mod)
mutated_mod['func_9608'] = func_9608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9608_call = mutated_mod.get_global_var('func_9608')
call_9609 = func_9608_call()
output = call_9609
func_9610 = relay.Function([], output)
mutated_mod['func_9610'] = func_9610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7218_call = mod.get_global_var('func_7218')
func_7220_call = mutated_mod.get_global_var('func_7220')
call_9658 = relay.TupleGetItem(func_7218_call(), 0)
call_9659 = relay.TupleGetItem(func_7220_call(), 0)
output = call_9658
output2 = call_9659
func_9664 = relay.Function([], output)
mod['func_9664'] = func_9664
mod = relay.transform.InferType()(mod)
output = func_9664()
func_9665 = relay.Function([], output)
mutated_mod['func_9665'] = func_9665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9680 = relay.var("var_9680", dtype = "float64", shape = (12, 12, 6))#candidate|9680|(12, 12, 6)|var|float64
const_9681 = relay.const([[[2.487100,8.369801,-8.400691,3.035938,-5.984113,4.927311],[1.311020,-2.022404,-0.903286,-5.492640,-1.462359,7.870943],[-2.446661,-6.360386,-9.364188,-7.392705,7.724603,-9.847724],[8.946385,-5.762176,3.123180,-8.423515,-3.014943,-5.208474],[3.827243,3.631612,5.412165,-7.750815,-5.099045,-5.659226],[-4.398939,-8.499464,-4.757582,-1.643671,0.822245,-0.035245],[-1.319425,3.650204,1.593683,-4.688632,-9.756220,-7.322522],[-9.964424,6.708363,4.451662,2.526327,-9.218862,9.692304],[-0.534106,-5.835940,-0.898410,2.710170,-7.268257,6.641517],[-1.443542,-0.398126,-1.844451,-9.242443,0.279545,2.024955],[8.342524,0.627789,3.542844,2.350587,-0.387072,0.284884],[-3.666486,4.379132,6.864579,-4.751633,-9.999977,-7.776099]],[[3.710329,-0.466323,-4.901372,0.259063,-0.380187,2.788845],[6.981935,-9.502459,6.215422,5.841913,-8.449238,-6.993984],[8.258324,8.736097,0.676998,-3.281539,-9.691822,9.483741],[5.254925,-9.643172,5.919890,1.039025,-6.035923,-0.851297],[5.591602,0.644910,0.499915,7.356241,-9.364748,-2.750426],[-5.597537,-9.220286,0.070394,3.580004,-5.635440,9.999245],[3.865970,7.612427,-3.949891,2.766596,8.016849,0.555485],[-2.479459,5.464492,9.615582,-5.765990,5.671938,-0.361776],[7.035200,0.087631,5.245889,3.476460,4.209592,2.761473],[2.927532,1.733792,1.847958,1.826100,9.897880,6.574470],[-2.457262,-2.897743,-9.907735,5.905169,-4.951770,-0.537784],[2.648810,-2.017038,-9.689089,-7.390746,4.906239,-9.249542]],[[-4.261873,-0.867897,-7.314164,-5.043914,-1.052332,-1.208241],[3.581328,-9.494063,-2.558032,6.468261,-6.087522,-9.102937],[3.007145,-4.619479,-8.140259,-0.565596,-1.546125,-1.836606],[-7.385540,-1.519990,4.867701,5.153772,-8.918093,-7.640035],[-4.112879,-1.517122,-0.568078,1.116453,9.731144,-0.621718],[-3.618154,-4.660499,1.785117,-6.445631,3.922068,-0.591939],[8.525028,6.508667,1.895987,6.646605,6.871792,9.312151],[-6.850488,-0.349814,-1.935491,-5.630436,7.000535,-6.554015],[8.289518,-0.182377,1.627413,-5.122546,-8.444880,-5.139137],[0.724733,-5.688729,3.846255,-4.972840,-4.535253,7.098026],[8.224472,-7.732006,-3.227143,-6.892539,5.442176,-6.759844],[1.257232,0.374170,-4.466538,-7.710406,4.427910,-9.810485]],[[-0.092073,5.493625,9.376722,4.915774,-2.916655,8.747327],[-8.973437,-7.731639,-6.572272,-1.383521,7.274910,-5.113116],[7.121177,-7.109668,2.004050,1.150851,8.706937,-8.836050],[4.709679,-0.705248,7.819217,-4.361175,8.623623,2.269573],[4.362409,3.280156,-1.154126,-3.987965,-9.690195,-9.947982],[-2.899377,5.495353,-4.782891,-8.030884,-2.238053,3.010239],[1.167599,7.973487,1.471028,-2.047069,9.049018,9.545404],[6.023174,5.630226,-3.675861,0.328107,-4.567762,9.189588],[1.406214,-2.007030,-5.496166,0.943055,-8.086587,-1.324989],[-3.639978,-0.506210,-2.636048,4.273089,-0.712793,-3.871291],[-6.204015,0.302550,-6.281814,-7.642757,-4.124033,8.125481],[-6.623777,-9.080623,-9.586637,-0.742319,-9.867711,-4.675442]],[[6.283916,-8.730373,-3.909621,-0.744219,7.357258,2.314801],[-6.187888,9.859150,0.200344,1.200143,2.736356,-7.348335],[-2.512314,-3.814319,5.916506,-2.588664,-2.771325,-7.950447],[1.732443,-9.025815,-2.865606,-7.720350,5.721609,-1.829592],[6.418377,-2.572783,8.944811,-2.672430,-7.219456,-9.350821],[5.472137,-5.501023,-4.477574,-4.464784,1.952413,-1.345940],[9.358496,1.701247,-6.073557,6.427784,1.948936,-7.955823],[-4.373922,3.597869,-1.065142,-6.929637,-8.678065,6.288585],[-8.222550,-4.949137,-6.045020,1.239182,7.538118,-3.552383],[-0.732074,6.862149,-9.240430,9.368290,-2.629287,2.109033],[-3.489800,-7.654465,-0.301015,3.607714,-2.499885,-8.164514],[-4.830614,-9.953803,-6.740321,3.893796,-8.215281,9.078732]],[[4.739967,3.795328,2.669544,-2.453936,-4.408868,-6.032686],[-9.730301,0.932075,5.347696,-8.080470,-3.022443,9.791369],[7.476176,6.494732,-4.849736,-3.445406,0.461211,6.586156],[-9.848179,3.484401,1.479148,6.881005,7.095062,-2.288849],[3.574911,8.624947,1.893450,-8.988781,6.988476,-9.979768],[-9.219121,1.459787,-2.660537,-4.355706,-9.996706,7.914639],[8.520096,-6.700906,-5.673225,0.619382,4.685128,7.012668],[-6.059985,9.969326,3.835678,1.371713,6.309028,-0.513714],[6.301218,-9.470389,-1.731391,2.541847,5.566755,-1.421736],[-9.566134,0.551952,-5.872754,-3.735154,-0.356803,7.820732],[1.051439,-9.272779,8.030892,-3.954562,8.030445,8.739541],[5.442109,-4.076902,-5.368598,-0.859102,-0.311730,-4.809390]],[[-0.713742,1.970894,-7.989321,-6.528126,9.948560,-3.928145],[5.580641,-9.499504,-8.769407,-3.579475,-0.577233,-0.716226],[-1.728026,-5.300601,-9.708343,0.445128,4.390645,0.886651],[6.967530,-7.318518,-1.566741,-9.839793,3.377906,8.223183],[-7.991172,5.015857,-2.121315,0.856584,-0.860383,0.995356],[-7.154675,8.880686,-8.315110,3.945884,4.841560,-3.832369],[5.827786,0.215284,7.157275,-7.180721,1.001727,6.482599],[0.268449,-6.994789,-3.356935,-0.731937,-5.895656,-5.450753],[-4.194241,9.823856,7.789331,-7.674909,-3.796030,-1.485314],[-6.404271,2.119877,-6.422981,5.589026,3.079156,-4.241617],[1.780100,-3.865193,-0.330412,-0.952147,-4.167010,-4.635703],[-6.603837,-1.333176,8.101433,-4.719146,3.001632,5.038371]],[[-0.173652,0.374344,-7.279887,4.665630,-7.769502,2.016433],[3.261073,-3.761825,0.117060,3.327567,5.302210,-5.808440],[-2.417563,-6.376692,-8.867499,-5.517847,-5.415882,-6.192488],[6.515669,-5.413821,5.332825,-4.024372,-1.182092,3.338264],[-7.293222,1.576692,-0.046948,-1.883661,-8.120337,6.010792],[-1.908740,-1.811671,5.222703,4.497104,-8.077426,8.909222],[7.491307,-9.585105,-2.528254,-5.928015,5.360833,-4.770902],[0.548208,-7.681706,5.885561,7.828726,7.754990,-2.686704],[-3.784987,6.828248,0.041823,7.753635,2.428261,-0.928024],[0.515825,-3.172048,-2.378652,-0.721297,9.665889,-2.320883],[-3.219672,-6.293471,8.597653,1.065424,-3.141285,-7.326297],[5.525454,-7.206152,-7.995535,-9.891134,3.433723,-9.227268]],[[4.534374,-2.570171,6.807409,2.217021,-6.626160,-2.575609],[-6.567182,5.875926,-9.441890,-4.030495,8.766626,-1.808255],[-1.242303,2.454889,3.958229,7.158432,0.020778,5.657067],[-0.221508,-6.213772,-7.212963,-8.860792,-2.492823,4.542313],[-8.945796,-5.015849,0.221288,8.702616,5.620757,7.453083],[-0.220831,7.420264,-6.451072,-9.794933,6.455068,1.593748],[8.773079,-7.429905,-2.689839,4.667757,-4.675468,-6.146242],[-9.577113,2.873968,3.681483,2.108512,5.781329,5.243170],[1.584217,3.473848,-7.015118,7.874003,-7.342124,-9.091147],[1.852513,0.313713,7.183104,2.187023,2.365183,-9.624263],[-4.475931,-7.557697,-2.148435,1.157370,-0.782740,0.243316],[-4.008559,-1.230924,-5.340044,2.371037,-2.077729,2.614026]],[[-5.730213,-9.517970,6.040778,-9.824894,-7.236713,-3.771509],[-1.440295,-2.683075,-4.819068,-8.272914,-2.841842,9.549589],[1.473528,5.649319,-2.579918,8.452502,9.277670,-7.241348],[-6.827853,-0.462901,-5.020890,-2.460398,1.583911,2.935100],[-2.510337,-5.451826,-1.233607,5.837075,-9.578711,-6.164871],[-8.399701,2.582880,6.618741,-5.816382,6.174340,-9.673764],[1.586989,-5.654041,3.992636,-5.907838,6.000633,6.903098],[6.866596,9.329275,3.739705,-5.956944,-3.172028,5.357668],[2.376167,7.898088,4.809731,-5.288934,-4.402619,8.359863],[-1.414457,9.602800,-5.727986,-6.054959,-9.657976,9.511861],[4.956966,0.866443,8.106675,1.912522,-8.997527,1.588703],[-0.866617,0.052795,6.160593,-8.268337,-5.414800,7.105990]],[[-3.483280,-9.472590,-8.678358,-9.433307,0.328077,8.505634],[5.724218,-9.699729,8.916708,3.124932,8.096928,3.244155],[0.958900,2.833293,6.162598,-4.267132,-6.176921,-4.865761],[-2.768175,-6.715621,-3.797607,-6.965946,-9.338041,-5.337766],[4.790853,9.627853,-9.126368,5.510682,-0.273544,9.068151],[1.546447,-3.560636,2.313316,-1.482390,6.219640,3.650140],[-1.834097,6.430165,-6.382334,4.981058,0.032359,8.976500],[2.510719,7.394170,8.944388,7.096453,-0.776741,-5.880637],[7.955241,1.361798,3.347590,-5.713587,1.310935,-3.465658],[3.628182,0.989043,-4.578389,-2.781096,1.373415,5.088720],[8.146048,3.918569,-6.299260,8.790505,9.081093,5.424040],[2.590144,-7.274137,9.635803,9.598350,-0.487879,-9.687311]],[[7.385940,-9.095603,-0.808028,3.059755,3.610720,-2.588964],[-3.798684,3.552337,-9.122355,-6.305197,-3.240232,-4.011119],[8.388814,0.313678,-4.457808,-9.229853,-0.023857,-3.204010],[-7.976867,-7.456927,5.924820,-0.654366,-2.579311,2.459135],[-7.675550,1.415642,-6.082084,-0.186781,6.099459,-0.714718],[8.243586,9.110177,1.107415,5.617019,5.068418,7.001724],[-2.587804,-7.102048,2.081507,7.381008,5.755809,0.678423],[9.292506,9.352666,7.577865,-9.085561,-2.546391,-8.925680],[-4.886216,4.409338,-9.032711,-2.624889,-0.331714,5.370230],[-8.240405,1.757589,4.994422,2.154205,2.148362,4.010910],[-2.224260,7.156362,5.701120,0.154038,1.757579,0.893117],[1.759268,-6.213679,-5.793178,-8.894650,7.906234,-0.423856]]], dtype = "float64")#candidate|9681|(12, 12, 6)|const|float64
bop_9682 = relay.floor_mod(var_9680.astype('float64'), relay.reshape(const_9681.astype('float64'), relay.shape_of(var_9680))) # shape=(12, 12, 6)
output = bop_9682
output2 = bop_9682
func_9694 = relay.Function([var_9680,], output)
mod['func_9694'] = func_9694
mod = relay.transform.InferType()(mod)
mutated_mod['func_9694'] = func_9694
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9695 = relay.var("var_9695", dtype = "float64", shape = (12, 12, 6))#candidate|9695|(12, 12, 6)|var|float64
func_9694_call = mutated_mod.get_global_var('func_9694')
call_9696 = func_9694_call(var_9695)
output = call_9696
func_9697 = relay.Function([var_9695], output)
mutated_mod['func_9697'] = func_9697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9664_call = mod.get_global_var('func_9664')
func_9665_call = mutated_mod.get_global_var('func_9665')
call_9705 = func_9664_call()
call_9706 = func_9664_call()
func_2526_call = mod.get_global_var('func_2526')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_9710 = relay.TupleGetItem(func_2526_call(), 2)
call_9711 = relay.TupleGetItem(func_2528_call(), 2)
uop_9746 = relay.acos(call_9710.astype('float64')) # shape=(110, 15)
uop_9748 = relay.acos(call_9711.astype('float64')) # shape=(110, 15)
uop_9754 = relay.sinh(uop_9746.astype('float32')) # shape=(110, 15)
uop_9756 = relay.sinh(uop_9748.astype('float32')) # shape=(110, 15)
uop_9760 = relay.sigmoid(uop_9754.astype('float64')) # shape=(110, 15)
uop_9762 = relay.sigmoid(uop_9756.astype('float64')) # shape=(110, 15)
output = relay.Tuple([call_9705,uop_9760,])
output2 = relay.Tuple([call_9706,uop_9762,])
func_9773 = relay.Function([], output)
mod['func_9773'] = func_9773
mod = relay.transform.InferType()(mod)
mutated_mod['func_9773'] = func_9773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9773_call = mutated_mod.get_global_var('func_9773')
call_9774 = func_9773_call()
output = call_9774
func_9775 = relay.Function([], output)
mutated_mod['func_9775'] = func_9775
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9806 = relay.var("var_9806", dtype = "bool", shape = ())#candidate|9806|()|var|bool
var_9807 = relay.var("var_9807", dtype = "bool", shape = (4, 14, 1))#candidate|9807|(4, 14, 1)|var|bool
bop_9808 = relay.logical_and(var_9806.astype('bool'), var_9807.astype('bool')) # shape=(4, 14, 1)
func_3424_call = mod.get_global_var('func_3424')
func_3428_call = mutated_mod.get_global_var('func_3428')
const_9822 = relay.const([[9.185409],[9.116467],[3.356718],[-5.048612],[3.582644],[9.981368],[5.990165],[4.620594],[-7.570758],[9.428398],[8.831413],[6.602850],[-5.468024],[1.975642],[9.751797],[-9.633459],[7.336206],[2.616961],[-0.615825],[-3.822431],[-6.435996],[0.825480],[2.505530],[0.080153],[-4.451361],[-5.515033],[-1.443423],[-8.537348],[-9.937432],[5.963272],[7.575290],[-8.708012],[0.635528],[2.204287],[-2.406086],[-8.382331],[9.947958],[-8.835895],[-5.096337],[-0.922851],[9.078588],[-5.989857],[4.388489],[-5.840437],[1.090007],[5.605065],[8.719424],[4.860043],[3.682459],[5.297271],[-0.171266],[3.284781],[1.114025],[-6.492992],[5.933495],[-3.135949],[-7.644929],[-4.793939],[8.257433],[1.833760],[-4.595635],[7.382914],[8.235796],[-0.894383],[4.209037],[-8.353213],[7.445690],[-4.363054],[3.311734],[1.445886],[9.259929],[5.664614],[-6.353472],[9.314186],[-0.390878],[-2.186814],[-8.956461],[8.811917],[-2.786761],[-9.270975],[0.180453],[-0.230580],[-7.626789],[3.550712],[4.942801],[-8.723575],[-4.096328],[-9.123275],[1.373643],[-5.947526],[4.342179],[-4.863421],[3.802823],[6.854815],[-9.696967],[8.661520],[-6.942218],[-2.781329],[-8.994276],[-3.834059],[-8.174007],[9.262958],[5.667896],[-1.520074],[0.474582],[-3.908044],[8.000923],[-6.728754],[-5.241174],[6.368659],[-4.568699],[-1.477079],[-9.212011],[1.533265],[-4.470202],[-3.861913],[8.376423],[3.352714],[-0.311721],[7.426752],[4.911354],[-3.160739],[8.882300],[7.221889],[-6.404253],[-7.195666],[8.616573],[1.930353],[2.689579],[4.749604],[-4.316023],[3.229343],[2.237965],[-9.713618],[-5.625714],[4.152739],[-2.547020],[-9.991104],[8.831872],[1.392892],[-3.761500],[-1.181147],[5.352128],[1.843099],[-2.771593],[-4.235971],[8.107970],[-7.385783],[9.110018],[-2.286625],[4.440937],[3.986545],[4.347864],[0.687656],[9.672206],[-3.067062],[-8.986963],[5.321988],[-0.812207],[-1.535120],[2.600065],[9.272912],[-1.808043],[0.008839],[1.930302],[5.885025],[-1.318979],[-1.384701],[1.232463],[-4.231722],[-5.259673],[-9.317971],[6.883374],[-6.983575],[7.639742],[-7.810850],[-3.279745],[6.249963],[-4.033129],[-9.725792],[-6.916892],[-9.894497],[-3.055749],[-2.153689],[-1.252786],[-5.970133],[2.034249],[3.571267],[-1.905032],[-5.499912],[-5.418944],[1.881084],[-2.375627],[-9.651588],[0.595794],[-7.143907],[-6.737754],[-1.714159],[2.104102],[-0.834222],[9.101605],[8.469259],[-2.215901],[8.635967],[-1.877167],[-4.428447],[2.496996],[4.332107],[-1.015606],[-7.978529],[-9.785239],[0.300166],[6.671402],[8.785002],[-5.342966],[-1.113623],[-6.167568],[-9.500956],[-3.041077],[-2.638103],[8.741817],[6.366947],[-3.229743],[-8.295894],[-4.182715],[-7.839248],[-6.562368],[-1.550784],[-7.751171],[-5.018587],[9.398177],[-0.516416],[-2.680799],[-0.267748],[5.589086],[-6.140713],[9.575989],[8.910761],[-2.912921],[-4.002005],[-1.039952],[-3.825937],[-3.239240],[-0.293678],[-0.274553],[4.242968],[4.796969],[-9.359044],[-5.303474],[-8.376053],[8.673625],[-6.613882],[-4.611544],[-5.736471],[-0.865045],[-0.474709],[0.435352],[5.848877],[3.755294],[-3.947344],[-4.965416],[2.481524],[-6.977441],[-6.319164],[2.710469],[-2.521287],[5.875142],[8.406537],[-1.903682],[-9.967185],[1.890100],[7.608035],[5.346167],[-7.953989],[-0.836115],[9.834022],[0.952697],[-3.696021],[-6.215244],[-6.103159],[3.452664],[-9.300153],[-4.441171],[-7.781589],[4.337072],[3.196861],[3.270031],[9.090874],[3.043903],[2.759982],[4.204610],[-9.440316],[-8.064275],[-0.536525],[9.367712],[-6.202267],[6.318010],[3.239512],[-9.534822],[-6.982199],[8.058484],[-5.487276],[-2.456929],[5.230524],[-6.662052],[5.687888],[7.072335],[-4.961948],[-4.432550],[-7.218113],[8.553551],[-5.817913],[5.575836],[-5.539919],[1.658862],[6.014066],[-6.843767],[-1.197964],[-1.541461],[-1.366844],[-9.279309],[-2.516720],[-0.804679],[9.874350],[2.977974],[-0.088781],[-4.680495],[7.222135],[2.409716],[-3.699660],[-3.612675],[0.204794],[3.944694],[7.841602],[1.596434],[-5.781516],[4.958840],[-5.615746],[2.795365],[-9.745582],[7.909938],[-1.384498],[9.082616],[-2.572863],[5.387517],[2.497966],[-8.586367],[7.905611],[-3.562015],[8.735166],[-9.585809],[-8.437960],[-0.797953],[4.595065],[-7.682606],[-1.860033],[6.673830],[-7.918819],[-6.256494],[6.939174],[9.427842],[8.707322],[4.787794],[7.327122],[9.393637],[2.590241],[6.826260],[2.830860],[-2.789384],[6.329595],[-0.423846],[0.669258],[-2.787218],[-3.251695],[-8.797408],[7.096215],[7.317628],[1.324957],[2.522579],[-5.662856],[-2.254995],[-7.741175],[2.041867],[3.774305],[3.654988],[7.417966],[1.605737],[0.083524],[-3.872052],[-6.986090],[0.321406],[-9.625665],[9.635653],[7.456392],[-9.059234],[3.619925],[9.168663],[-4.608443],[-8.402720],[4.858536],[0.660465],[2.986287],[2.945331],[-9.781935],[8.129625],[-7.176463],[-9.090889],[3.080774],[-9.205211],[-9.680695],[-2.962517],[6.848523],[-6.902500],[1.213231],[-5.715869],[-3.832196],[5.589534],[-4.910375],[-2.157448],[-8.617904],[8.201475],[-7.122951],[4.497926],[5.674771],[-0.464684],[-2.546240],[-7.351095],[-1.533057],[-5.747480],[6.667039],[-3.919429],[-5.963426],[8.609357],[-3.527866],[4.685163],[0.986562],[4.151494],[4.315373],[6.165400],[4.584656],[-2.766136],[1.423762],[9.567821],[4.159279],[7.183657],[-1.736427],[-0.207804],[5.102599],[4.878711],[9.830505],[-4.333111],[-4.523540],[-1.562205],[-5.674812],[-8.879425],[6.184795],[6.941715],[5.751017],[9.553330],[-7.392517],[1.257940],[-7.468177],[4.102806],[-0.503409],[-0.535999],[-8.695331],[-3.165419],[-8.055507],[-4.509650],[2.898585],[-2.689467],[3.192616],[5.805495],[1.370983],[-2.389490],[4.519467],[-9.661888],[2.448882],[1.360399],[9.597976],[-1.315987],[-3.455661],[-5.458213],[9.852312],[2.712541],[3.632834],[-7.247240],[2.274264],[-1.597538],[-3.666450],[2.745203],[-8.857477],[9.590230],[7.373496],[5.553816],[-0.045992],[-7.305541],[2.185892],[-8.862524],[6.585757],[1.295854],[7.366103],[-6.704510],[2.109014],[6.740558],[2.492762],[5.672165],[4.376363],[7.363933],[2.858614],[7.547350],[-2.063451],[-8.041413],[-9.687157],[5.868573],[-6.792089],[-1.350651],[-6.515774],[-7.169613],[5.988868],[1.705829],[-4.358753],[1.579584],[5.829870],[5.277495],[6.586166],[5.163104],[-6.250622],[0.743842],[-5.669612],[5.635288],[4.328348],[-9.126805],[-9.912314],[3.550099],[5.604366],[-1.779657],[0.909538],[2.234403],[-8.643110],[4.216520],[6.435713],[-7.676972],[-5.831601],[-4.890475],[-4.714978],[7.514049],[8.845472],[9.239247],[5.601754],[-7.903883],[2.339156],[-3.962745],[-2.878284],[8.647731],[-7.764956],[-8.487305],[2.883003],[-6.829722],[8.508843],[-9.573326],[-7.866790],[3.060606],[-2.008014],[1.838089],[-7.180954],[-9.313275],[-5.849297],[-2.393300],[-9.165987],[8.087288],[8.815824],[-7.653667],[-7.284023],[-9.851368],[2.772736],[4.073359],[6.464834],[1.605147],[9.775056],[4.829084],[-0.594931],[2.791473],[-1.187463],[5.390740],[-5.113832],[-8.136670],[9.096020],[-1.874625],[5.098734],[3.118375],[-0.032989],[-1.692126],[4.363625],[3.236416],[-5.431736],[-4.141443],[-0.770295],[5.412625],[-5.667562],[4.743894],[8.581252],[-8.071553],[-8.396052],[2.776182],[9.336029],[-2.051056],[4.144343],[2.388998],[-1.876269],[-1.223420],[6.292352],[-2.318370],[-5.961385],[4.100788],[-9.207944],[4.530715],[-0.976359],[-6.758576],[2.890096],[-4.937874],[-3.608275],[-4.527805],[5.379772],[2.008064],[-2.004251],[-0.246722],[-2.535700],[8.200966],[-3.384345],[3.258830],[1.036448],[-7.438281],[-0.438167],[-3.732327],[-4.060275],[4.841892],[1.902554],[7.599805],[8.165710],[-6.101595],[-5.768132],[-7.635636],[3.578680],[8.298637],[-8.350063],[5.455341],[-8.458040],[7.654152],[-0.739962],[-7.680716],[-6.379156],[-7.231988],[0.136658],[-9.405718],[-9.592466],[-7.272929],[8.319362],[5.393443],[-9.329226],[-8.942094],[-8.577683],[-0.844890],[1.977634],[1.230554],[1.896613],[3.963001],[4.361144],[8.300194],[1.611877],[-4.294964],[-4.171791],[-0.492555],[4.645777],[5.692640],[-5.328880],[-6.941144],[9.082887],[5.997545],[-1.071320],[-9.603288],[-6.388619],[8.051325],[3.154610],[-4.542221],[-5.180117],[-6.594884],[3.099642],[-5.463023],[7.343361],[-8.037969],[4.109043],[-6.598233],[8.859234],[1.053834],[-1.588627],[7.829017],[3.974248],[8.886177],[5.912800],[9.274779],[-1.460866],[6.866030],[-8.211113],[-4.378717],[9.019258],[-8.614889],[3.297170],[5.578974],[-7.258524],[-3.147707],[-9.846298],[-7.927990],[-9.803603],[9.353500],[1.833724],[7.564608],[-3.451501],[-2.432455],[-7.383116],[-3.571227],[7.191625],[-5.615479],[4.661977],[-5.385146],[-2.440952],[1.908120],[-5.526616],[1.769559],[2.394779],[9.882729],[7.698052],[-9.815811],[2.539187],[3.828549],[6.260589],[2.618045],[-6.712774],[8.798594],[8.922828],[3.229552],[-6.090474],[-8.659749],[-3.821328],[2.836386],[-8.802441],[2.716975],[7.646863],[-3.656715],[-1.218762],[-4.887784],[2.188957],[-1.956521],[3.624191],[-4.144242],[6.238625],[-0.623739],[-2.312023],[2.447810],[-9.181648],[-9.475101],[7.932233],[1.337312],[3.609592],[3.123937],[1.124073],[7.302682],[2.513398],[-6.005706],[6.162656],[7.358979],[-4.663364],[-9.772676],[-7.307842],[-3.024123],[-3.507702],[-0.415137],[-7.464759],[-5.747616],[5.084021],[2.172236],[6.962344],[1.401903],[-4.241736],[6.406170],[-9.828102],[8.943660],[-4.424466],[9.249167],[5.746930],[-5.641176],[-2.802299],[9.055967],[-2.053788],[-3.304422],[2.780422],[-5.992193],[-7.834591],[5.118443],[8.072228],[-4.378960],[5.843505],[-2.786861],[3.506901],[-6.595012],[1.991438],[-3.586505],[3.343151],[-2.482432],[4.837489],[8.844534],[-1.300546],[3.038106],[-8.910030],[-7.028270],[8.214607],[3.612574],[-1.308152],[1.412731],[-6.112687],[-9.499535],[-9.980114],[1.127156],[-8.822405],[7.387490],[4.106253],[-2.937109],[-8.246534],[-9.049116],[-9.080530],[-4.329355],[-8.919889],[-9.507369],[1.322104],[-8.030437],[6.893330],[-3.104562],[-4.481364],[-6.876707],[2.948126],[-4.157936],[-6.534375],[3.386959],[5.472598],[2.149215],[-9.769459],[5.100574],[-2.867072],[2.980687],[1.051733],[4.583061],[-3.919067],[-2.962444],[9.379271],[6.104309],[-2.943383],[6.703575],[-3.613450],[3.628097],[6.869540],[6.329832],[-5.877397],[-9.188617],[-7.178592],[7.547905],[5.841077],[-7.160417],[-6.638222],[-5.578826],[2.799948],[-8.180778],[-0.810210],[8.115329],[-9.310825],[-3.357771],[3.351289],[2.043575],[-3.216355],[-5.960585],[4.407285],[3.586202],[-9.799927],[-6.225997],[-3.655407],[1.462364],[-9.620104],[-3.863022],[6.645611],[7.494279],[-0.250010],[0.710710],[7.170382],[-0.283463],[-0.806676],[-1.578592],[-7.089974],[3.689344],[-3.572755],[9.213185],[-0.488496],[-2.108490],[-6.948948],[9.908775],[-6.526682],[-4.144410],[-7.471035],[1.314779],[-0.509690],[-4.433018],[-8.240418],[1.563837],[-5.848677],[-2.702236],[-4.482585],[7.155576],[-3.861579],[-4.280386],[-6.237030],[-8.084687],[-2.103340],[-3.356459],[5.667408],[9.991815],[8.670580],[-3.094158],[-5.319930],[-1.664016],[-5.820237],[0.619678],[-5.927694],[-5.878810],[9.328633],[2.516886],[-9.907183],[-6.068986],[-9.465074],[-5.644702],[-5.270183],[-7.358328],[7.110969],[-7.369468],[-4.372614],[-4.808080],[3.384999],[5.927130],[-7.435036],[-0.959692],[-1.436490],[-1.185236],[4.550247],[-1.534884],[3.453700],[8.591781],[-4.090753],[8.854545],[2.163296],[2.183770],[-6.159290],[-5.734388],[-9.778397],[5.805966],[9.875752],[-7.099712],[7.136784],[1.238034],[8.632627],[1.991056],[-7.062191],[1.580303],[-5.078597],[-1.805955],[-1.259819],[6.351792],[3.280316],[-7.844881],[9.838424],[-5.475869],[6.071606],[5.639477],[9.033829],[0.346302],[-0.532758],[0.387623],[-4.666227],[7.956208],[3.065278],[-6.029031],[2.364046],[-5.496511],[3.450046],[-1.144277],[-1.540837],[-4.438390],[9.833299],[6.765098],[-5.231108],[-3.342320],[2.643900],[7.357516],[-3.746314],[-6.657635],[-5.481618],[5.773989],[-0.285489],[-0.831837],[-6.119091],[-9.578049],[9.035707],[-7.886234],[-3.454217],[-4.696114],[-5.666729],[2.741140],[-9.427481],[9.670690],[5.541411],[9.868392],[-8.352834],[-7.471916],[-7.826066],[2.050792],[6.844662],[-0.480973],[-9.236701],[-8.070742],[-7.911474],[5.141578],[9.294925],[-8.874921],[4.864442],[-9.228792],[3.870629],[-4.031552],[-9.507284],[-6.939555],[5.264941],[5.039473],[8.843569],[9.019434],[-2.153110],[2.072732],[-9.764303],[4.735321],[7.573638],[-6.342440],[-9.309015],[-3.252107],[-0.796271],[5.092115],[7.084746],[8.099928],[3.500304],[5.474434],[-8.020033],[-4.085695],[-5.531479],[9.906752],[-7.878095],[-9.036685],[-6.556988],[-5.459023],[9.545344],[-3.412694],[3.249139],[-8.543566],[8.133060],[2.143491],[-2.220879],[-3.867810],[-1.742866],[4.412869],[-8.835227],[6.424701],[-4.543817],[-0.634978],[-5.895143],[8.707182],[8.311830],[1.046929],[0.268084],[8.791347],[-4.345323],[-3.090144],[-7.040812],[8.537105],[0.885937],[5.311214],[-9.421814],[2.036029],[6.217373],[2.195089],[-6.470117],[3.114982],[5.309362],[7.718040],[5.174037],[2.803069],[7.708017],[-9.095355],[-7.326071],[-4.877421],[8.845747],[5.498562],[2.589284],[-8.588727],[3.012433],[-1.622540],[-7.864211],[3.335018],[6.951113],[-3.259791],[-7.592998],[-7.376744],[0.273997],[9.297948],[-8.022944],[-1.426249],[2.053800],[8.868181],[-0.948639],[9.761678],[-9.189989],[1.783089],[-1.690058],[-9.669525],[2.567721],[-7.353752],[-6.896281],[-7.352656],[2.818343],[-7.864515],[8.224963],[5.179249],[-6.621201],[9.141093],[-4.861223],[-5.791243],[7.290636],[7.934723],[7.520299],[4.315925],[4.180513],[-5.047222],[-3.628163],[0.912162],[-5.779679],[8.052195],[-7.151224],[-2.152615],[-6.458029],[6.561507],[2.909446],[5.860755],[-8.770507],[-3.891253],[-9.045269],[-9.992170],[7.977779],[9.404501],[9.190752],[3.564477],[-6.075626],[-4.282778],[-2.413974],[-5.000370],[-9.425490],[7.440469],[3.918441],[-5.427633],[-9.615528],[2.263144],[-0.881247],[-7.447246],[-9.675487],[3.508627],[-4.820955],[9.140428],[-7.912543],[-6.629477],[6.986886],[9.308137],[-4.110458],[4.450883],[9.121858],[9.312732],[-9.416820],[-6.944366],[0.391614],[-6.999282],[-1.632004],[4.312714],[-5.160392],[-3.912964],[-6.927982],[0.312329],[2.610642],[-7.435282],[-0.574525],[6.539735],[7.614768],[8.601394],[-5.036494],[2.209985],[-9.741862],[8.338615],[3.095997],[6.664114],[-4.804634],[-4.262473],[-1.025921],[-4.530275],[-5.864272],[-4.958894],[-9.210564],[-3.378554],[-3.451742],[4.437624],[2.602869],[-4.687435],[-9.065480],[9.447616],[5.406688],[4.883826],[-7.143431],[-4.197568],[-6.594511],[-5.248912],[1.575354],[0.632811],[-3.330018],[-4.810544],[2.237393],[7.742916],[-9.586474],[-1.032496],[-1.996627],[-1.248083],[-4.297762],[5.428749],[-1.338720],[-7.423348],[-9.285329],[0.313658],[3.723590],[0.112708],[0.455754],[-6.266138],[1.718642],[6.929507],[-2.902082],[-1.477152],[2.143750],[-9.296441],[-1.373798],[-2.475028],[0.336760],[6.744318],[8.141510],[-1.368605],[4.630842],[4.544670],[3.167969],[5.405179],[0.730529],[-6.292294],[-3.603678],[-1.311266],[6.385852],[-1.091614],[-6.174896],[-0.102744],[2.621489],[3.478431],[9.392075],[3.861872],[7.614149],[4.738696],[-9.416895],[3.648685],[2.980946],[9.184511],[-0.313323],[-1.282157],[-8.448006],[-3.550524],[4.188693],[5.508264],[-1.494069],[-1.820971],[-6.599838],[1.408460],[-6.643917],[-6.126467],[0.675380],[-0.186787],[0.490522],[4.666142],[-2.716915],[6.264956],[-3.358971],[7.790687],[1.729515],[-4.001514],[-9.634948],[6.680286],[-2.157545],[-6.519382],[8.360685],[7.611380],[6.910620],[2.281067],[-3.731788],[-5.954721],[-0.806199],[9.399677],[9.304428],[8.507562],[9.666375],[6.679245],[-5.075263],[-3.923805],[5.400650],[8.207613],[3.694365],[7.615563],[-4.603091],[4.099337],[9.263602],[8.803293],[-6.086727],[-5.011832],[-7.501425],[-7.954183],[5.739392],[3.274838],[-8.598214],[-7.845669],[-1.623818],[-9.849729],[9.328502],[-8.554055],[-6.601174],[-0.018445],[-5.625667],[-5.176638],[-5.145053],[-3.496108],[-1.460047],[3.485562],[-6.989925],[3.990929],[-8.985228],[-6.549884],[1.778170],[2.813252],[4.460810],[-8.449268],[2.433868],[5.638915],[3.975004],[-8.057876],[4.856954],[-4.725584],[7.450964],[0.278939],[-1.201015],[-3.371987],[3.158810],[3.466373],[8.323862],[9.104854],[1.249283],[5.227567],[-7.110272],[-7.404608],[-5.308518],[5.764096],[1.458649],[5.974746],[1.721536],[9.426668],[5.990113],[9.749521],[-2.857944],[3.887397],[9.701807],[-5.058035],[-2.504181],[6.810684],[8.026518],[-9.371644],[9.967315],[3.799232],[7.680419],[3.378980],[2.018841],[-2.153423],[7.706730],[9.040830],[9.791666],[0.841308],[4.606160],[2.933949],[1.597648],[-7.337567],[-3.414512],[-6.215204],[1.857965],[-1.685225],[-7.306598],[6.937295],[-8.198014],[-2.890761],[4.710967],[-7.352972],[-6.001326],[5.722366],[8.776439],[-4.136807],[-1.527984],[7.313928],[2.218741],[-1.592320],[4.494159],[-6.570222],[-4.580731],[-6.903741],[5.136890],[-6.806683],[-1.451752],[5.518509],[9.616092],[6.649779],[8.056991],[7.246244],[-3.232383],[-5.078459],[8.010600],[-8.020455],[-0.461444],[-3.681764],[8.559262],[0.251151],[-6.548439],[6.303424],[-3.564218],[0.514358],[-4.344209],[7.400733],[-4.064556],[3.564020],[4.329819],[2.782523],[-2.089715],[-7.737174],[-3.980526],[7.884881],[4.034472],[-4.578467],[7.933625],[-9.835373],[0.781313],[4.734623],[-9.853430],[4.783508],[3.066818],[-7.878177],[9.807086],[0.276120],[8.949767],[-5.139316],[9.694104],[7.151679],[-3.854009],[-5.889097],[-2.590963],[-7.688768],[-1.802276],[0.890877],[-3.712243],[-9.148782],[4.341675],[-9.796078],[-1.977177],[-0.324944],[8.225921],[2.381033],[-2.378187],[7.418673],[-5.228732],[-5.320827],[8.119206],[-2.359029],[-1.979028],[-0.578787],[8.974815],[5.394939],[4.904704],[4.701973],[7.061460],[-0.957184],[-3.848399],[1.243779],[-9.288936],[7.624167],[-0.691404],[5.082659],[-6.238500],[-7.983378],[6.259557],[7.314153],[3.462071],[3.974713],[9.476794],[-8.247410],[-7.947606],[1.610412],[-4.855928],[-1.920266],[-2.033426],[1.681547],[8.876630],[-8.652645],[2.456421],[7.520189],[9.438916],[2.438726],[2.702893],[-4.590626],[8.232291],[4.509645],[6.975380],[-0.077546],[-6.746117],[-3.844305],[-5.134683]], dtype = "float32")#candidate|9822|(1536, 1)|const|float32
const_9823 = relay.const([-6.932194,-2.105316,2.684884,-9.796907,-5.102283,-6.079396,-3.306949,5.526146,7.712497,6.010371,-3.549568,-6.859336,-1.918462,4.162796,4.257964,9.768520,1.127117,4.317134,4.350469,5.602032,1.646965,-3.549284,6.848904,8.520084,-5.919228,-3.230723], dtype = "float32")#candidate|9823|(26,)|const|float32
call_9821 = relay.TupleGetItem(func_3424_call(relay.reshape(const_9822.astype('float32'), [1, 1536]), relay.reshape(const_9823.astype('float32'), [26,]), ), 0)
call_9824 = relay.TupleGetItem(func_3428_call(relay.reshape(const_9822.astype('float32'), [1, 1536]), relay.reshape(const_9823.astype('float32'), [26,]), ), 0)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
const_9832 = relay.const([-7,1,-5,-8,8,3,8,10,-6,-6,10,7,-4,-2,-6,7,9,-7,-6,9,4,-5,9,-4,-2,10,-4,-9,3,-7,8,4,-3,-2,-3,3,4,-2,5,-10,6,-6,4,-1,9,-7,4,-4,2,6,-8,5,-8,7,-4,-8,-6,3,2,-8,-1,-9,6,-2,1,6,-8,3,9,-1,6,3,6,3,-9,-10,-6,7,-4,2,6,5,8,-2,-8,8,-2,8,-9,5,-2,2,6,1,8,-3,1,10,8,4,7,-1,-7,7,10,5,9,-9,7,-2,3,-1,7,-4,5,2,4,-1,4,6,-1,7,8,-2,-8,-10,-4,-7,-2,6,3,-9,1,5,-9,-9,-1,8,-4,4,9,-5,5,-3,-3,6,5,2,-5,-1,-9,5,-9,-1,5,5,1,8,1,3,-10,-1,-4,3,9,6,-6,-10,-3,-10,-8,6,-4,-5,6,1,7,-1,5,2,7,4,8,10,8,-4,4,6,-2,3,9,4,-5,8,-8,-6,10,-10,-5,-2,8,-9,-5,10,-6,-5,-8,2,5,-5,-2,-10,8,-3,-10,-6,-2,-3,-10,4,8,10,10,1,-3,10,5,10,-2,8,9,-2,-9,-7,8,4,3,-3,-7,10,-1,7,-10,1,3,4,5,4,9,-4,3,4], dtype = "int32")#candidate|9832|(252,)|const|int32
call_9831 = relay.TupleGetItem(func_2615_call(relay.reshape(const_9832.astype('int32'), [252,])), 0)
call_9833 = relay.TupleGetItem(func_2617_call(relay.reshape(const_9832.astype('int32'), [252,])), 0)
uop_9839 = relay.log2(var_9807.astype('float32')) # shape=(4, 14, 1)
func_3103_call = mod.get_global_var('func_3103')
func_3105_call = mutated_mod.get_global_var('func_3105')
const_9847 = relay.const([2,-2,-10,-1,-2,-1,8,1,2,3,2,-4,9,4,-1,-5,-6,3,-4,4,-5,-3,6,-2,5,6,9,2,4,-10,-2,7,-4,3,3,1,2,-2,7,-9,-9,2,7,-6,2,5,10,2,-2,-9,-4,-4,4,5,2,-8,8,-9,-5,-5,10,1,-2,4,-7,9,-5,8,-1,-3,-6,5,2,-9,8,4,-4,10,5,9,8,3,-3,3,3,-8,-8,5,9,-6,9,-7,-2,-10,2,1,9,3,7,7,-5,-1,10,-2,-1,7,8,-5,-2,9,6,6,-4,-7,-5,2,-9,-3,-10,-7,-5,1,10,-4,-2,-8,3,-2,-3,9,-5,-9,8,3,-9,9,7,-7,-7,-1,6,-5,-3,5,10,-5,-8,7,-6,-4,-3,9,4,-8,9,-9,-1,3,5,-2,-5,-8,-1,7,-9,2,-3,-3,1,7,1,4,-10,7,-6,-10,6,-3,5,2,-2,-6,-9,1,10,-9,-4,2,1,-1,8,9,-7,9,-2,-6,9,-9,-10,-8,10,3,2,2,-5,-2,2,7,4,5,-10,10,4,-8,4,7,3,10,5,1,-4,-7,6,10,-1,-8,8,2,9,-8,-8,-7,-7,8,-10,6,-4,4,4,-10,1,-7,7,-10,-9,-1,5,10,6,4,7,-4,10,8,4,-2,-9,-3,-8,3,3,-6,2,2,2,-6,5,-9,-7,-2,9,7,3,-2,-7,10,-1,-10,-2,2,8,4,-7,-10,-2,-5,-8,-8], dtype = "int32")#candidate|9847|(288,)|const|int32
call_9846 = relay.TupleGetItem(func_3103_call(relay.reshape(const_9847.astype('int32'), [4, 72])), 5)
call_9848 = relay.TupleGetItem(func_3105_call(relay.reshape(const_9847.astype('int32'), [4, 72])), 5)
bop_9852 = relay.floor_divide(const_9823.astype('float32'), const_9822.astype('float32')) # shape=(1536, 26)
output = relay.Tuple([bop_9808,call_9821,call_9831,const_9832,uop_9839,call_9846,const_9847,bop_9852,])
output2 = relay.Tuple([bop_9808,call_9824,call_9833,const_9832,uop_9839,call_9848,const_9847,bop_9852,])
func_9855 = relay.Function([var_9806,var_9807,], output)
mod['func_9855'] = func_9855
mod = relay.transform.InferType()(mod)
var_9856 = relay.var("var_9856", dtype = "bool", shape = ())#candidate|9856|()|var|bool
var_9857 = relay.var("var_9857", dtype = "bool", shape = (4, 14, 1))#candidate|9857|(4, 14, 1)|var|bool
output = func_9855(var_9856,var_9857,)
func_9858 = relay.Function([var_9856,var_9857,], output)
mutated_mod['func_9858'] = func_9858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4391_call = mod.get_global_var('func_4391')
func_4392_call = mutated_mod.get_global_var('func_4392')
call_9877 = relay.TupleGetItem(func_4391_call(), 0)
call_9878 = relay.TupleGetItem(func_4392_call(), 0)
output = relay.Tuple([call_9877,])
output2 = relay.Tuple([call_9878,])
func_9887 = relay.Function([], output)
mod['func_9887'] = func_9887
mod = relay.transform.InferType()(mod)
mutated_mod['func_9887'] = func_9887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9887_call = mutated_mod.get_global_var('func_9887')
call_9888 = func_9887_call()
output = call_9888
func_9889 = relay.Function([], output)
mutated_mod['func_9889'] = func_9889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2204_call = mod.get_global_var('func_2204')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_9897 = func_2204_call()
call_9898 = func_2204_call()
func_8915_call = mod.get_global_var('func_8915')
func_8917_call = mutated_mod.get_global_var('func_8917')
call_9901 = relay.TupleGetItem(func_8915_call(), 0)
call_9902 = relay.TupleGetItem(func_8917_call(), 0)
output = relay.Tuple([call_9897,call_9901,])
output2 = relay.Tuple([call_9898,call_9902,])
func_9909 = relay.Function([], output)
mod['func_9909'] = func_9909
mod = relay.transform.InferType()(mod)
mutated_mod['func_9909'] = func_9909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9909_call = mutated_mod.get_global_var('func_9909')
call_9910 = func_9909_call()
output = call_9910
func_9911 = relay.Function([], output)
mutated_mod['func_9911'] = func_9911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5952_call = mod.get_global_var('func_5952')
func_5953_call = mutated_mod.get_global_var('func_5953')
call_9965 = relay.TupleGetItem(func_5952_call(), 0)
call_9966 = relay.TupleGetItem(func_5953_call(), 0)
func_8111_call = mod.get_global_var('func_8111')
func_8113_call = mutated_mod.get_global_var('func_8113')
call_9971 = relay.TupleGetItem(func_8111_call(), 0)
call_9972 = relay.TupleGetItem(func_8113_call(), 0)
output = relay.Tuple([call_9965,call_9971,])
output2 = relay.Tuple([call_9966,call_9972,])
func_9996 = relay.Function([], output)
mod['func_9996'] = func_9996
mod = relay.transform.InferType()(mod)
mutated_mod['func_9996'] = func_9996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9996_call = mutated_mod.get_global_var('func_9996')
call_9997 = func_9996_call()
output = call_9997
func_9998 = relay.Function([], output)
mutated_mod['func_9998'] = func_9998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4923_call = mod.get_global_var('func_4923')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_10019 = func_4923_call()
call_10020 = func_4923_call()
uop_10023 = relay.tan(call_10019.astype('float32')) # shape=(2, 7, 5)
uop_10025 = relay.tan(call_10020.astype('float32')) # shape=(2, 7, 5)
func_3769_call = mod.get_global_var('func_3769')
func_3773_call = mutated_mod.get_global_var('func_3773')
var_10028 = relay.var("var_10028", dtype = "int32", shape = (120,))#candidate|10028|(120,)|var|int32
var_10029 = relay.var("var_10029", dtype = "int16", shape = (143,))#candidate|10029|(143,)|var|int16
call_10027 = relay.TupleGetItem(func_3769_call(relay.reshape(var_10028.astype('int32'), [12, 5, 2]), relay.reshape(var_10028.astype('int32'), [12, 5, 2]), relay.reshape(var_10029.astype('int16'), [143,]), ), 0)
call_10030 = relay.TupleGetItem(func_3773_call(relay.reshape(var_10028.astype('int32'), [12, 5, 2]), relay.reshape(var_10028.astype('int32'), [12, 5, 2]), relay.reshape(var_10029.astype('int16'), [143,]), ), 0)
var_10034 = relay.var("var_10034", dtype = "int16", shape = (143,))#candidate|10034|(143,)|var|int16
bop_10035 = relay.minimum(var_10029.astype('uint32'), relay.reshape(var_10034.astype('uint32'), relay.shape_of(var_10029))) # shape=(143,)
output = relay.Tuple([uop_10023,call_10027,var_10028,bop_10035,])
output2 = relay.Tuple([uop_10025,call_10030,var_10028,bop_10035,])
F = relay.Function([var_10028,var_10029,var_10034,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10028,var_10029,var_10034,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

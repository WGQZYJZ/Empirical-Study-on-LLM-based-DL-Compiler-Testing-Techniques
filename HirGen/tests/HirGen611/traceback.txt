==========mod==========
#[version = "0.0.5"]
def @func_8752(%var_8680: Tensor[(147), float64], %var_8727: Tensor[(21), float64], %var_8745: Tensor[(672), uint16]) -> (Tensor[(100), float64], Tensor[(100), float64], Tensor[(3, 3, 11), float64], Tensor[(147), float32], Tensor[(13, 9, 7), float64], Tensor[(390), bool], Tensor[(21), float64], Tensor[(8, 7, 12), bool], Tensor[(84), uint16], Tensor[(672), uint16]) {
  %0 = cast(meta[relay.Constant][0] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1 = cast(%var_8680, dtype="float64") /* ty=Tensor[(147), float64] */;
  %2 = reshape(%0, newshape=[]) /* ty=uint64 */;
  %3 = reshape(%1, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %4 = @func_4654(%2, %3) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
  %5 = cast(%var_8680, dtype="uint16") /* ty=Tensor[(147), uint16] */;
  %6 = cast(meta[relay.Constant][0] /* ty=uint64 */, dtype="uint16") /* ty=uint16 */;
  %7 = bitwise_or(%5, %6) /* ty=Tensor[(147), uint16] */;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(147), float32] */;
  %9 = shape_of(%var_8680, dtype="int32") /* ty=Tensor[(1), int32] */;
  %10 = cast(%var_8680, dtype="float32") /* ty=Tensor[(147), float32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?), float32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=uint64 */, dtype="int64") /* ty=int64 */;
  %13 = reshape(%12, newshape=[]) /* ty=int64 */;
  %14 = @func_4110(%13) /* ty=Tensor[(13, 9, 7), bool] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(13, 9, 7), float64] */;
  %16 = cast(%var_8727, dtype="float64") /* ty=Tensor[(21), float64] */;
  %17 = reshape(%16, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %18 = @func_7653(%17) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(21), float64], Tensor[(100), float32], Tensor[(390), bool], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(84), uint16] */, dtype="uint16") /* ty=Tensor[(84), uint16] */;
  %20 = cast(%var_8745, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %21 = reshape(%19, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), uint16] */;
  %22 = reshape(%20, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint16] */;
  %23 = @func_4174(%21, %22) /* ty=(Tensor[(8, 7, 12), bool],) */;
  %24 = @func_8600() /* ty=Tensor[(100), float64] */;
  %25 = @func_8600() /* ty=Tensor[(100), float64] */;
  %26 = %4.3;
  %27 = multiply(%10, %11) /* ty=Tensor[(147), float32] */;
  %28 = rsqrt(%15) /* ty=Tensor[(13, 9, 7), float64] */;
  %29 = %18.4;
  %30 = %23.0;
  (%24, %25, %26, %27, %28, %29, %var_8727, %30, meta[relay.Constant][1] /* ty=Tensor[(84), uint16] */, %var_8745)
}

def @func_431(%var_427: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
  %31 = cast(%var_427, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  erf(%31) /* ty=Tensor[(2, 4, 10), float64] */
}

def @func_2450(%var_2442: int64, %var_2443: Tensor[(8, 8, 3), int64]) -> (Tensor[(8, 8, 3), bool],) {
  %32 = cast(%var_2442, dtype="bool") /* ty=bool */;
  %33 = cast(%var_2443, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %34 = not_equal(%32, %33) /* ty=Tensor[(8, 8, 3), bool] */;
  (%34,)
}

def @func_11543(%var_11508: Tensor[(80), float64], %var_11513: Tensor[(132), uint32], %var_11514: Tensor[(100), float32], %var_11520: Tensor[(35), int64], %var_11521: Tensor[(147), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(3, 4, 11), bool], Tensor[(132), uint32], Tensor[(100), float32], Tensor[(147), float64], Tensor[(35), int64], Tensor[(147), float64], Tensor[(110), float32]) {
  %35 = cast(%var_11508, dtype="float64") /* ty=Tensor[(80), float64] */;
  %36 = reshape(%35, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
  %37 = cast(%var_11513, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %38 = cast(%var_11514, dtype="float32") /* ty=Tensor[(100), float32] */;
  %39 = reshape(%37, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), uint32] */;
  %40 = reshape(%38, newshape=[1, 100]) /* ty=Tensor[(1, 100), float32] */;
  %41 = @func_9616(%39, %40) /* ty=(Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) */;
  %42 = cast(%var_11520, dtype="int64") /* ty=Tensor[(35), int64] */;
  %43 = cast(%var_11521, dtype="float64") /* ty=Tensor[(147), float64] */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %45 = reshape(%42, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), int64] */;
  %46 = reshape(%43, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %47 = reshape(%44, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %48 = @func_6903(%45, %46, %47) /* ty=(Tensor[(1, 5, 7), int64], uint64, Tensor[(147), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32]) */;
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %50 = @func_8552() /* ty=Tensor[(11, 3, 7), float32] */;
  %51 = @func_431(%36) /* ty=Tensor[(2, 4, 10), float64] */;
  %52 = %41.0;
  %53 = %48.2;
  %54 = acosh(%49) /* ty=Tensor[(110), float32] */;
  (%50, %51, %var_11508, %52, %var_11513, %var_11514, %53, %var_11520, %var_11521, %54)
}

def @func_2425(%var_2406: Tensor[(3, 11, 10), float32]) -> Tensor[(3, 11, 10), float32] {
  %55 = cast(%var_2406, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
  asinh(%55) /* ty=Tensor[(3, 11, 10), float32] */
}

def @func_7084() -> (Tensor[(11, 3, 7), float64],) {
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  %57 = tan(%56) /* ty=Tensor[(11, 3, 7), float64] */;
  (%57,)
}

def @func_12335() -> (Tensor[(10, ?, 11), bool],) {
  %58 = @func_10044() /* ty=(Tensor[(10, ?, 11), bool],) */;
  %59 = %58.0;
  (%59,)
}

def @func_7123() -> Tensor[(11, 3, 7), float64] {
  %60 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %61 = %60.0;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  sinh(%62) /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_10124(%var_10120: Tensor[(100), float32]) -> (Tensor[(11, 3, 7), float64], Tensor[(1, 100), float32], Tensor[(132), uint32], Tensor[(100), float32]) {
  %63 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(132), uint32] */, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %65 = cast(%var_10120, dtype="float32") /* ty=Tensor[(100), float32] */;
  %66 = reshape(%64, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), uint32] */;
  %67 = reshape(%65, newshape=[1, 100]) /* ty=Tensor[(1, 100), float32] */;
  %68 = @func_9616(%66, %67) /* ty=(Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) */;
  %69 = %63.1;
  %70 = %68.1;
  (%69, %70, meta[relay.Constant][4] /* ty=Tensor[(132), uint32] */, %var_10120)
}

def @func_12059(%var_12022: uint32, %var_12023: Tensor[(6, 7, 12), uint32]) -> (Tensor[(6, 7, 12), uint32], Tensor[(6, 7, 12), bool], Tensor[(11, 3, 7), float64]) {
  %71 = cast(%var_12022, dtype="uint32") /* ty=uint32 */;
  %72 = cast(%var_12023, dtype="uint32") /* ty=Tensor[(6, 7, 12), uint32] */;
  %73 = cast(%var_12022, dtype="bool") /* ty=bool */;
  %74 = cast(%var_12023, dtype="bool") /* ty=Tensor[(6, 7, 12), bool] */;
  %75 = left_shift(%71, %72) /* ty=Tensor[(6, 7, 12), uint32] */;
  %76 = equal(%73, %74) /* ty=Tensor[(6, 7, 12), bool] */;
  %77 = @func_9953() /* ty=Tensor[(11, 3, 7), float64] */;
  (%75, %76, %77)
}

def @func_8301() -> (Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) {
  %78 = @func_8100() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) */;
  %79 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %80 = reshape(%79, newshape=[]) /* ty=int64 */;
  %81 = %78.1;
  %82 = @func_4110(%80) /* ty=Tensor[(13, 9, 7), bool] */;
  (%81, %82, 2 /* ty=int64 */)
}

def @func_8639(%var_8636: Tensor[(99, 1), float64]) -> (Tensor[(100), float32], Tensor[(11, 5, 10), uint64], Tensor[(99, 1), float64]) {
  %83 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
  %84 = %83.1;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(100), float32] */;
  %86 = cast(%var_8636, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
  %87 = reshape(%86, newshape=[1, 99]) /* ty=Tensor[(1, 99), float64] */;
  %88 = @func_7363(%87) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(1, 99), float64], Tensor[(11, 5, 10), uint64]) */;
  %89 = sqrt(%85) /* ty=Tensor[(100), float32] */;
  %90 = %88.2;
  (%89, %90, %var_8636)
}

def @func_5313(%var_5305: Tensor[(10, 15, 11), float32]) -> (Tensor[(10, 15, 11), float32],) {
  %91 = cast(%var_5305, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
  %92 = asin(%91) /* ty=Tensor[(10, 15, 11), float32] */;
  (%92,)
}

def @func_1600(%var_1595: Tensor[(5, 2, 10), float32], %var_1596: Tensor[(5, 2, 10), float32]) -> (Tensor[(5, 2, 10), float32],) {
  %93 = cast(%var_1596, dtype="float32") /* ty=Tensor[(5, 2, 10), float32] */;
  %94 = shape_of(%var_1595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_1595, dtype="float32") /* ty=Tensor[(5, 2, 10), float32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %97 = divide(%95, %96) /* ty=Tensor[(5, 2, 10), float32] */;
  (%97,)
}

def @func_12403() -> (Tensor[(100), float32], Tensor[(13, 9, 7), float32], Tensor[(11, 3, 7), float64], Tensor[(672), uint8]) {
  %98 = @func_8983() /* ty=(Tensor[(100), float32],) */;
  %99 = @func_9475() /* ty=(Tensor[(13, 9, 7), float32],) */;
  %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %101 = reshape(%100, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint8] */;
  %102 = @func_11478(%101) /* ty=(Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %103 = %98.0;
  %104 = %99.0;
  %105 = %102.2;
  (%103, %104, %105, meta[relay.Constant][5] /* ty=Tensor[(672), uint8] */)
}

def @func_4348(%var_4341: bool, %var_4342: Tensor[(2, 2, 2), bool]) -> (Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) {
  %106 = cast(%var_4341, dtype="bool") /* ty=bool */;
  %107 = cast(%var_4342, dtype="bool") /* ty=Tensor[(2, 2, 2), bool] */;
  %108 = cast(%var_4341, dtype="uint64") /* ty=uint64 */;
  %109 = reshape(%108, newshape=[]) /* ty=uint64 */;
  %110 = @func_416(%109) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %111 = logical_or(%106, %107) /* ty=Tensor[(2, 2, 2), bool] */;
  %112 = %110.0;
  (%111, %112)
}

def @func_416(%var_408: uint64) -> (Tensor[(15, 5, 4), uint64],) {
  %113 = cast(%var_408, dtype="uint64") /* ty=uint64 */;
  %114 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 5, 4), uint64] */, dtype="uint64") /* ty=Tensor[(15, 5, 4), uint64] */;
  %115 = minimum(%113, %114) /* ty=Tensor[(15, 5, 4), uint64] */;
  (%115,)
}

def @func_6903(%var_6873: Tensor[(1, 5, 7), int64], %var_6880: Tensor[(147), float64], %var_6883: Tensor[(110), float32]) -> (Tensor[(1, 5, 7), int64], uint64, Tensor[(147), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32]) {
  %116 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %117 = cast(%var_6873, dtype="int64") /* ty=Tensor[(1, 5, 7), int64] */;
  %118 = cast(5 /* ty=int64 */, dtype="uint64") /* ty=uint64 */;
  %119 = cast(%var_6880, dtype="float64") /* ty=Tensor[(147), float64] */;
  %120 = reshape(%118, newshape=[]) /* ty=uint64 */;
  %121 = reshape(%119, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %122 = @func_4654(%120, %121) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
  %123 = cast(%var_6883, dtype="float32") /* ty=Tensor[(110), float32] */;
  %124 = %122.2;
  %125 = cast(%124, dtype="uint64") /* ty=uint64 */;
  %126 = reshape(%123, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float32] */;
  %127 = reshape(%125, newshape=[]) /* ty=uint64 */;
  %128 = @func_5116(%126, %127) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) */;
  %129 = maximum(%116, %117) /* ty=Tensor[(1, 5, 7), int64] */;
  %130 = %128.0;
  (%129, %124, %var_6880, %130, %var_6883)
}

def @func_3911(%var_3902: Tensor[(15, 15, 3), int8], %var_3903: Tensor[(15, 15, 3), int8]) -> Tensor[(15, 15, 3), int8] {
  %131 = cast(%var_3903, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
  %132 = shape_of(%var_3902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%var_3902, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%133, %134) /* ty=Tensor[(15, 15, 3), int8] */
}

def @func_11227() -> (Tensor[(11, 3, 7), float32], Tensor[(6, 14, 6), bool], Tensor[(36, 14), uint64]) {
  %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(36, 14), uint64] */, dtype="uint64") /* ty=Tensor[(36, 14), uint64] */;
  %136 = cast(meta[relay.Constant][7] /* ty=Tensor[(36, 14), uint64] */, dtype="uint64") /* ty=Tensor[(36, 14), uint64] */;
  %137 = reshape(%135, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), uint64] */;
  %138 = reshape(%136, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), uint64] */;
  %139 = @func_9009(%137, %138) /* ty=(Tensor[(6, 14, 6), bool], Tensor[(11, 3, 7), float64], Tensor[(6, 14, 6), float64]) */;
  %140 = @func_10787() /* ty=Tensor[(11, 3, 7), float32] */;
  %141 = %139.0;
  (%140, %141, meta[relay.Constant][7] /* ty=Tensor[(36, 14), uint64] */)
}

def @func_11357(%var_11346: Tensor[(15, 13, 8), int64]) -> Tensor[(15, 13, 8), int64] {
  %142 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 13, 8), int64] */, dtype="int64") /* ty=Tensor[(15, 13, 8), int64] */;
  %143 = shape_of(%var_11346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%var_11346, dtype="int64") /* ty=Tensor[(15, 13, 8), int64] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%144, %145) /* ty=Tensor[(15, 13, 8), int64] */
}

def @func_8506() -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) {
  %146 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %147 = @func_8197() /* ty=Tensor[(11, 3, 7), float64] */;
  (%146, %147)
}

def @func_12271() -> (Tensor[(100), float32],) {
  %148 = @func_11971() /* ty=(Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(672), uint8]) */;
  %149 = %148.0;
  (%149,)
}

def @func_9647() -> (Tensor[(11, 3, 7), float32],) {
  %150 = @func_9039() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32]) */;
  %151 = %150.1;
  (%151,)
}

def @func_9953() -> Tensor[(11, 3, 7), float64] {
  %152 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %152.0
}

def @func_10916(%var_10911: Tensor[(5, 1, 16), float32], %var_10912: Tensor[(5, 2, 16), float32]) -> (Tensor[(5, 2, 16), float32],) {
  %153 = cast(%var_10911, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  %154 = cast(%var_10912, dtype="float32") /* ty=Tensor[(5, 2, 16), float32] */;
  %155 = power(%153, %154) /* ty=Tensor[(5, 2, 16), float32] */;
  (%155,)
}

def @func_12522() -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(5, 3, 13), float64], Tensor[(1, 195), float64]) {
  %156 = @func_9138() /* ty=(Tensor[(100), float64],) */;
  %157 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 195), float64] */, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
  %158 = reshape(%157, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float64] */;
  %159 = %156.0;
  %160 = @func_8339() /* ty=Tensor[(11, 3, 7), float64] */;
  %161 = @func_9383(%158) /* ty=Tensor[(5, 3, 13), float64] */;
  (%159, %160, %161, meta[relay.Constant][9] /* ty=Tensor[(1, 195), float64] */)
}

def @func_9451() -> Tensor[(10, ?, 11), bool] {
  %162 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
  %162.0
}

def @func_12911() -> Tensor[(10, ?, 11), bool] {
  @func_9451() /* ty=Tensor[(10, ?, 11), bool] */
}

def @func_4110(%var_4094: int64) -> Tensor[(13, 9, 7), bool] {
  %163 = cast(%var_4094, dtype="bool") /* ty=bool */;
  %164 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 9, 7), int64] */, dtype="bool") /* ty=Tensor[(13, 9, 7), bool] */;
  less(%163, %164) /* ty=Tensor[(13, 9, 7), bool] */
}

def @func_9343(%var_9288: uint64, %var_9304: Tensor[(3, 3, 11), float64]) -> (Tensor[(11, 3, 7), float64], uint64, Tensor[(147), float64], Tensor[(3, 3, 11), bool], Tensor[(15, 5, 4), uint64], Tensor[(11, 3, 7), float64]) {
  %165 = cast(%var_9288, dtype="uint64") /* ty=uint64 */;
  %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
  %167 = reshape(%165, newshape=[]) /* ty=uint64 */;
  %168 = reshape(%166, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %169 = @func_4654(%167, %168) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
  %170 = %169.3;
  %171 = cast(%var_9304, dtype="bool") /* ty=Tensor[(3, 3, 11), bool] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%170, dtype="bool") /* ty=Tensor[(3, 3, 11), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %175 = cast(%var_9288, dtype="uint64") /* ty=uint64 */;
  %176 = cast(meta[relay.Constant][11] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
  %177 = reshape(%175, newshape=[]) /* ty=uint64 */;
  %178 = reshape(%176, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %179 = @func_4654(%177, %178) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
  %180 = @func_8197() /* ty=Tensor[(11, 3, 7), float64] */;
  %181 = less_equal(%173, %174) /* ty=Tensor[(3, 3, 11), bool] */;
  %182 = %179.4;
  %183 = @func_8339() /* ty=Tensor[(11, 3, 7), float64] */;
  (%180, %var_9288, meta[relay.Constant][11] /* ty=Tensor[(147), float64] */, %181, %182, %183)
}

def @func_2918(%var_2896: Tensor[(1, 8, 1), float32]) -> (Tensor[(1, 8, 1), float64],) {
  %184 = cast(%var_2896, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
  %185 = log10(%184) /* ty=Tensor[(1, 8, 1), float32] */;
  %186 = cast(%185, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
  %187 = log(%186) /* ty=Tensor[(1, 8, 1), float64] */;
  (%187,)
}

def @func_7939(%var_7930: Tensor[(21), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(99), float64], Tensor[(21), float64], Tensor[(147), float64], uint64) {
  %188 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  %190 = cast(%var_7930, dtype="float64") /* ty=Tensor[(21), float64] */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
  %192 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %193 = reshape(%190, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %194 = reshape(%191, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %195 = reshape(%192, newshape=[]) /* ty=uint64 */;
  %196 = @func_1564(%193, %194, %195) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %197 = exp(%189) /* ty=Tensor[(11, 3, 7), float64] */;
  %198 = %196.2;
  (%197, %198, %var_7930, meta[relay.Constant][12] /* ty=Tensor[(147), float64] */, meta[relay.Constant][13] /* ty=uint64 */)
}

def @func_10980() -> Tensor[(11, 3, 7), float64] {
  @func_8339() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_9409() -> (Tensor[(11, 3, 7), float64], Tensor[(100), float64]) {
  %199 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %200 = @func_9138() /* ty=(Tensor[(100), float64],) */;
  %201 = %199.0;
  %202 = %200.0;
  (%201, %202)
}

def @func_8339() -> Tensor[(11, 3, 7), float64] {
  %203 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %203.0
}

def @func_7397(%var_7390: Tensor[(338), float32]) -> (Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) {
  %204 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %205 = cast(%var_7390, dtype="float32") /* ty=Tensor[(338), float32] */;
  %206 = reshape(%205, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), float32] */;
  %207 = %204.0;
  %208 = @func_6008(%206) /* ty=Tensor[(13, 13, 2), float32] */;
  (%207, %208, %var_7390)
}

def @func_7286() -> Tensor[(11, 3, 7), float32] {
  %209 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %210 = %209.0;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(11, 3, 7), float32] */;
  log10(%211) /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_9475() -> (Tensor[(13, 9, 7), float32],) {
  %212 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
  %213 = %212.1;
  %214 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 9, 7), bool] */, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %218 = floor_mod(%216, %217) /* ty=Tensor[(13, 9, 7), float32] */;
  (%218,)
}

def @func_11093() -> Tensor[(100), float64] {
  @func_8600() /* ty=Tensor[(100), float64] */
}

def @func_9009(%var_8991: Tensor[(6, 14, 6), uint64], %var_8992: Tensor[(6, 14, 6), uint64]) -> (Tensor[(6, 14, 6), bool], Tensor[(11, 3, 7), float64], Tensor[(6, 14, 6), float64]) {
  %219 = cast(%var_8992, dtype="bool") /* ty=Tensor[(6, 14, 6), bool] */;
  %220 = shape_of(%var_8991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%var_8991, dtype="bool") /* ty=Tensor[(6, 14, 6), bool] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %223 = @func_8506() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) */;
  %224 = cast(%var_8991, dtype="float64") /* ty=Tensor[(6, 14, 6), float64] */;
  %225 = shape_of(%var_8992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_8992, dtype="float64") /* ty=Tensor[(6, 14, 6), float64] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %228 = less(%221, %222) /* ty=Tensor[(6, 14, 6), bool] */;
  %229 = %223.0;
  %230 = minimum(%226, %227) /* ty=Tensor[(6, 14, 6), float64] */;
  (%228, %229, %230)
}

def @func_11010(%var_11008: Tensor[(195), float64]) -> (Tensor[(10, ?, 11), bool], Tensor[(5, 3, 13), float64], Tensor[(195), float64]) {
  %231 = cast(%var_11008, dtype="float64") /* ty=Tensor[(195), float64] */;
  %232 = reshape(%231, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float64] */;
  %233 = @func_9451() /* ty=Tensor[(10, ?, 11), bool] */;
  %234 = @func_9383(%232) /* ty=Tensor[(5, 3, 13), float64] */;
  (%233, %234, %var_11008)
}

def @func_9809(%var_9734: Tensor[(9, 13, 14), int8], %var_9735: Tensor[(9, 13, 14), int8], %var_9757: Tensor[(100), float32], %var_9762: Tensor[(21), float64]) -> (Tensor[(9, 13, 14), int8], Tensor[(7, 7, 3), bool], Tensor[(100), float32], Tensor[(390), bool], Tensor[(21), uint8], Tensor[(210), float32], uint64) {
  %235 = cast(%var_9735, dtype="int8") /* ty=Tensor[(9, 13, 14), int8] */;
  %236 = shape_of(%var_9734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%var_9734, dtype="int8") /* ty=Tensor[(9, 13, 14), int8] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %239 = cast(meta[relay.Constant][15] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %240 = cast(%var_9757, dtype="float32") /* ty=Tensor[(100), float32] */;
  %241 = cast(meta[relay.Constant][16] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %242 = reshape(%239, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %243 = reshape(%240, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %244 = reshape(%241, newshape=[390]) /* ty=Tensor[(390), bool] */;
  %245 = @func_7227(%242, %243, %244) /* ty=(uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) */;
  %246 = cast(%var_9762, dtype="uint8") /* ty=Tensor[(21), uint8] */;
  %247 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(21), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %248 = cast(meta[relay.Constant][15] /* ty=Tensor[(21), float64] */, dtype="uint8") /* ty=Tensor[(21), uint8] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %250 = minimum(%248, %249) /* ty=Tensor[(21), uint8] */;
  %251 = cast(%250, dtype="float64") /* ty=Tensor[(21), float64] */;
  %252 = %245.6;
  %253 = cast(%252, dtype="float64") /* ty=Tensor[(7, 7, 3), float64] */;
  %254 = cast(meta[relay.Constant][17] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %255 = reshape(%251, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %256 = reshape(%253, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %257 = reshape(%254, newshape=[]) /* ty=uint64 */;
  %258 = @func_1564(%255, %256, %257) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %259 = right_shift(%237, %238) /* ty=Tensor[(9, 13, 14), int8] */;
  %260 = %258.4;
  (%259, %252, %var_9757, meta[relay.Constant][16] /* ty=Tensor[(390), bool] */, %250, %260, meta[relay.Constant][17] /* ty=uint64 */)
}

def @func_6008(%var_5987: Tensor[(13, 13, 2), float32]) -> Tensor[(13, 13, 2), float32] {
  %261 = cast(%var_5987, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  erf(%261) /* ty=Tensor[(13, 13, 2), float32] */
}

def @func_10096() -> (Tensor[(1, 15), bool],) {
  %262 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %263 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 15), bool] */, dtype="bool") /* ty=Tensor[(1, 15), bool] */;
  %264 = logical_or(%262, %263) /* ty=Tensor[(1, 15), bool] */;
  (%264,)
}

def @func_9197() -> (Tensor[(100), float64],) {
  %265 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
  %266 = %265.1;
  %267 = cast(meta[relay.Constant][19] /* ty=Tensor[(100), float32] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(1), int32] */;
  %269 = cast(%266, dtype="float64") /* ty=Tensor[(100), float64] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?), float64] */;
  %271 = floor_divide(%269, %270) /* ty=Tensor[(100), float64] */;
  (%271,)
}

def @func_11777(%var_11766: Tensor[(99), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(100), float32], Tensor[(99), float64], Tensor[(100), float32]) {
  %272 = @func_8882() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) */;
  %273 = cast(%var_11766, dtype="float64") /* ty=Tensor[(99), float64] */;
  %274 = cast(meta[relay.Constant][20] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %275 = reshape(%273, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %276 = reshape(%274, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %277 = @func_1965(%275, %276) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) */;
  %278 = @func_10940() /* ty=Tensor[(11, 3, 7), float32] */;
  %279 = %272.1;
  %280 = %277.5;
  (%278, %279, %280, %var_11766, meta[relay.Constant][20] /* ty=Tensor[(100), float32] */)
}

def @func_12465() -> Tensor[(100), float64] {
  %281 = @func_9138() /* ty=(Tensor[(100), float64],) */;
  %281.0
}

def @func_11487() -> Tensor[(10, ?, 11), bool] {
  %282 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
  %282.0
}

def @func_9383(%var_9369: Tensor[(5, 3, 13), float64]) -> Tensor[(5, 3, 13), float64] {
  %283 = cast(%var_9369, dtype="float64") /* ty=Tensor[(5, 3, 13), float64] */;
  %284 = atan(%283) /* ty=Tensor[(5, 3, 13), float64] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(5, 3, 13), float64] */;
  acosh(%285) /* ty=Tensor[(5, 3, 13), float64] */
}

def @func_12765(%var_12761: Tensor[(390), bool]) -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(100), float64], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) {
  %286 = @func_12116() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %287 = @func_9138() /* ty=(Tensor[(100), float64],) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(100), float64] */;
  %290 = log(%289) /* ty=Tensor[(100), float64] */;
  %291 = cast(%290, dtype="float64") /* ty=Tensor[(100), float64] */;
  %292 = cast(%var_12761, dtype="bool") /* ty=Tensor[(390), bool] */;
  %293 = cast(%var_12761, dtype="bool") /* ty=Tensor[(390), bool] */;
  %294 = reshape(%292, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
  %295 = reshape(%293, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
  %296 = @func_5195(%294, %295) /* ty=(Tensor[(13, 6, 5), bool],) */;
  %297 = @func_11093() /* ty=Tensor[(100), float64] */;
  %298 = %286.0;
  %299 = atan(%291) /* ty=Tensor[(100), float64] */;
  %300 = %296.0;
  (%297, %298, %299, %300, %var_12761)
}

def @func_10940() -> Tensor[(11, 3, 7), float32] {
  %301 = @func_9647() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %301.0
}

def @func_13158() -> (Tensor[(10, ?, 11), bool], Tensor[(11, 3, 7), float64]) {
  %302 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
  %303 = %302.0;
  %304 = @func_8339() /* ty=Tensor[(11, 3, 7), float64] */;
  (%303, %304)
}

def @func_8100() -> (Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) {
  %305 = cast(meta[relay.Constant][21] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %306 = cast(meta[relay.Constant][22] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %307 = reshape(%305, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float32] */;
  %308 = reshape(%306, newshape=[]) /* ty=uint64 */;
  %309 = @func_5116(%307, %308) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) */;
  %310 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %311 = %309.0;
  (%310, %311, meta[relay.Constant][21] /* ty=Tensor[(110), float32] */, meta[relay.Constant][22] /* ty=uint64 */)
}

def @func_11420(%var_11393: Tensor[(21), float64]) -> (Tensor[(100), float32], Tensor[(100), float32], Tensor[(1638), int8], Tensor[(21), float64]) {
  %312 = @func_10825() /* ty=(Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(100), float32] */;
  %315 = cast(meta[relay.Constant][23] /* ty=Tensor[(1638), int8] */, dtype="int8") /* ty=Tensor[(1638), int8] */;
  %316 = cast(meta[relay.Constant][23] /* ty=Tensor[(1638), int8] */, dtype="int8") /* ty=Tensor[(1638), int8] */;
  %317 = cast(%313, dtype="float32") /* ty=Tensor[(100), float32] */;
  %318 = cast(%var_11393, dtype="float64") /* ty=Tensor[(21), float64] */;
  %319 = reshape(%315, newshape=[9, 13, 14]) /* ty=Tensor[(9, 13, 14), int8] */;
  %320 = reshape(%316, newshape=[9, 13, 14]) /* ty=Tensor[(9, 13, 14), int8] */;
  %321 = reshape(%317, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %322 = reshape(%318, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %323 = @func_9809(%319, %320, %321, %322) /* ty=(Tensor[(9, 13, 14), int8], Tensor[(7, 7, 3), bool], Tensor[(100), float32], Tensor[(390), bool], Tensor[(21), uint8], Tensor[(210), float32], uint64) */;
  %324 = log2(%314) /* ty=Tensor[(100), float32] */;
  %325 = %323.2;
  (%324, %325, meta[relay.Constant][23] /* ty=Tensor[(1638), int8] */, %var_11393)
}

def @func_10502() -> (Tensor[(110), float32],) {
  %326 = @func_8100() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) */;
  %327 = %326.2;
  (%327,)
}

def @func_7227(%var_7174: Tensor[(21), float64], %var_7181: Tensor[(100), float32], %var_7218: Tensor[(390), bool]) -> (uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) {
  %328 = cast(meta[relay.Constant][24] /* ty=Tensor[(22, 5), float32] */, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
  %329 = cast(meta[relay.Constant][25] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %330 = reshape(%328, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float32] */;
  %331 = reshape(%329, newshape=[]) /* ty=uint64 */;
  %332 = @func_5116(%330, %331) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) */;
  %333 = cast(meta[relay.Constant][25] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %334 = cast(meta[relay.Constant][26] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
  %335 = reshape(%333, newshape=[]) /* ty=bool */;
  %336 = reshape(%334, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %337 = @func_4348(%335, %336) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %338 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %339 = cast(%var_7174, dtype="float64") /* ty=Tensor[(21), float64] */;
  %340 = cast(meta[relay.Constant][27] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
  %341 = cast(meta[relay.Constant][25] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %342 = reshape(%339, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %343 = reshape(%340, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %344 = reshape(%341, newshape=[]) /* ty=uint64 */;
  %345 = @func_1564(%342, %343, %344) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %346 = cast(%var_7181, dtype="float32") /* ty=Tensor[(100), float32] */;
  %347 = cast(%var_7181, dtype="float32") /* ty=Tensor[(100), float32] */;
  %348 = reshape(%346, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %349 = reshape(%347, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %350 = @func_1600(%348, %349) /* ty=(Tensor[(5, 2, 10), float32],) */;
  %351 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(11, 3, 7), float32] */;
  %353 = acos(%352) /* ty=Tensor[(11, 3, 7), float32] */;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(11, 3, 7), float32] */;
  %355 = cast(%var_7218, dtype="bool") /* ty=Tensor[(390), bool] */;
  %356 = cast(%var_7218, dtype="bool") /* ty=Tensor[(390), bool] */;
  %357 = reshape(%355, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
  %358 = reshape(%356, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
  %359 = @func_5195(%357, %358) /* ty=(Tensor[(13, 6, 5), bool],) */;
  %360 = %332.2;
  %361 = %337.1;
  %362 = %338.0;
  %363 = %345.0;
  %364 = %350.0;
  %365 = sigmoid(%354) /* ty=Tensor[(11, 3, 7), float32] */;
  %366 = %359.0;
  (%360, meta[relay.Constant][24] /* ty=Tensor[(22, 5), float32] */, meta[relay.Constant][25] /* ty=uint64 */, %361, meta[relay.Constant][26] /* ty=Tensor[(8), bool] */, %362, %363, %var_7174, meta[relay.Constant][27] /* ty=Tensor[(147), float64] */, %364, %var_7181, %365, %366, %var_7218)
}

def @func_8552() -> Tensor[(11, 3, 7), float32] {
  @func_8123() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_8983() -> (Tensor[(100), float32],) {
  %367 = @func_7739() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) */;
  %368 = %367.5;
  (%368,)
}

def @func_10261() -> (Tensor[(10, ?, 11), float64], Tensor[(11, 10, 1), bool], uint32) {
  %369 = @func_9451() /* ty=Tensor[(10, ?, 11), bool] */;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(10, ?, 11), float64] */;
  %371 = cast(meta[relay.Constant][28] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %372 = exp(%370) /* ty=Tensor[(10, ?, 11), float64] */;
  %373 = cast(%372, dtype="uint32") /* ty=Tensor[(10, ?, 11), uint32] */;
  %374 = reshape(%371, newshape=[]) /* ty=uint32 */;
  %375 = reshape(%373, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), uint32] */;
  %376 = @func_915(%374, %375) /* ty=(Tensor[(11, 10, 1), bool],) */;
  %377 = %376.0;
  (%372, %377, meta[relay.Constant][28] /* ty=uint32 */)
}

def @func_10658() -> (Tensor[(11, 3, 7), float32], Tensor[(1, 15), bool], Tensor[(1, 15), bool], Tensor[(100), float32], Tensor[(99), float64]) {
  %378 = @func_7817() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %379 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %380 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %381 = cast(meta[relay.Constant][29] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %382 = reshape(%381, newshape=[99, 1]) /* ty=Tensor[(99, 1), float64] */;
  %383 = @func_8639(%382) /* ty=(Tensor[(100), float32], Tensor[(11, 5, 10), uint64], Tensor[(99, 1), float64]) */;
  %384 = %378.0;
  %385 = %379.0;
  %386 = %380.0;
  %387 = %383.0;
  (%384, %385, %386, %387, meta[relay.Constant][29] /* ty=Tensor[(99), float64] */)
}

def @func_795(%var_767: Tensor[(16, 12, 8), float64], %var_780: uint64) -> (Tensor[(15, 5, 4), uint64], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(16, 12, 8), uint16]) {
  %388 = cast(%var_780, dtype="uint64") /* ty=uint64 */;
  %389 = reshape(%388, newshape=[]) /* ty=uint64 */;
  %390 = @func_416(%389) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %391 = cast(meta[relay.Constant][30] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %392 = reshape(%391, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
  %393 = @func_329(%392) /* ty=(Tensor[(3, 3, 11), float64],) */;
  %394 = cast(%var_767, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %395 = asin(%394) /* ty=Tensor[(16, 12, 8), float64] */;
  %396 = cast(%395, dtype="uint16") /* ty=Tensor[(16, 12, 8), uint16] */;
  %397 = cast(%var_780, dtype="uint16") /* ty=uint16 */;
  %398 = %390.0;
  %399 = %393.0;
  %400 = subtract(%396, %397) /* ty=Tensor[(16, 12, 8), uint16] */;
  (%398, %399, meta[relay.Constant][30] /* ty=Tensor[(99), float64] */, %400)
}

def @func_4654(%var_4636: uint64, %var_4650: Tensor[(147), float64]) -> (Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) {
  %401 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
  %402 = cast(%var_4636, dtype="uint64") /* ty=uint64 */;
  %403 = reshape(%402, newshape=[]) /* ty=uint64 */;
  %404 = @func_416(%403) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %405 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
  %406 = cast(%var_4636, dtype="uint64") /* ty=uint64 */;
  %407 = reshape(%405, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %408 = reshape(%406, newshape=[]) /* ty=uint64 */;
  %409 = @func_795(%407, %408) /* ty=(Tensor[(15, 5, 4), uint64], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(16, 12, 8), uint16]) */;
  %410 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %411 = cast(%var_4650, dtype="float64") /* ty=Tensor[(147), float64] */;
  %412 = cast(%var_4636, dtype="uint64") /* ty=uint64 */;
  %413 = reshape(%410, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %414 = reshape(%411, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %415 = reshape(%412, newshape=[]) /* ty=uint64 */;
  %416 = @func_1564(%413, %414, %415) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %417 = log2(%401) /* ty=Tensor[(12, 8, 16), float64] */;
  %418 = %404.0;
  %419 = %409.1;
  %420 = %416.3;
  (%417, %418, %var_4636, %419, %420, meta[relay.Constant][32] /* ty=Tensor[(1, 21), float64] */, %var_4650)
}

def @func_7536(%var_7477: Tensor[(672), uint16], %var_7490: Tensor[(42, 2), uint16], %var_7524: Tensor[(192), int64]) -> (Tensor[(11, 3, 7), float32], Tensor[(672), uint16], Tensor[(42, 2), uint16], Tensor[(42, 2), uint64], Tensor[(8, 7, 12), float64], Tensor[(42, 2), bool], Tensor[(8, 8, 3), bool], int64, Tensor[(192), int64], Tensor[(42, 2), float64]) {
  %421 = cast(%var_7490, dtype="uint16") /* ty=Tensor[(42, 2), uint16] */;
  %422 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(42, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %423 = cast(meta[relay.Constant][33] /* ty=Tensor[(42, 2), uint16] */, dtype="uint16") /* ty=Tensor[(42, 2), uint16] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %425 = cast(meta[relay.Constant][34] /* ty=Tensor[(42, 2), uint16] */, dtype="uint64") /* ty=Tensor[(42, 2), uint64] */;
  %426 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(42, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %427 = cast(meta[relay.Constant][33] /* ty=Tensor[(42, 2), uint16] */, dtype="uint64") /* ty=Tensor[(42, 2), uint64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %429 = cast(meta[relay.Constant][33] /* ty=Tensor[(42, 2), uint16] */, dtype="uint16") /* ty=Tensor[(42, 2), uint16] */;
  %430 = cast(%var_7477, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %431 = reshape(%429, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), uint16] */;
  %432 = reshape(%430, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint16] */;
  %433 = @func_4174(%431, %432) /* ty=(Tensor[(8, 7, 12), bool],) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
  %436 = cast(meta[relay.Constant][34] /* ty=Tensor[(42, 2), uint16] */, dtype="bool") /* ty=Tensor[(42, 2), bool] */;
  %437 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(42, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %438 = cast(meta[relay.Constant][33] /* ty=Tensor[(42, 2), uint16] */, dtype="bool") /* ty=Tensor[(42, 2), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %440 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %441 = cast(%var_7524, dtype="int64") /* ty=Tensor[(192), int64] */;
  %442 = reshape(%440, newshape=[]) /* ty=int64 */;
  %443 = reshape(%441, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), int64] */;
  %444 = @func_2450(%442, %443) /* ty=(Tensor[(8, 8, 3), bool],) */;
  %445 = cast(meta[relay.Constant][34] /* ty=Tensor[(42, 2), uint16] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
  %446 = @func_7286() /* ty=Tensor[(11, 3, 7), float32] */;
  %447 = subtract(%423, %424) /* ty=Tensor[(42, 2), uint16] */;
  %448 = minimum(%427, %428) /* ty=Tensor[(42, 2), uint64] */;
  %449 = sqrt(%435) /* ty=Tensor[(8, 7, 12), float64] */;
  %450 = logical_and(%438, %439) /* ty=Tensor[(42, 2), bool] */;
  %451 = %444.0;
  %452 = asin(%445) /* ty=Tensor[(42, 2), float64] */;
  (%446, %var_7477, %447, %448, %449, %450, %451, 10 /* ty=int64 */, %var_7524, %452)
}

def @func_7414(%var_7409: Tensor[(1, 21), float64], %var_7410: Tensor[(21, 7), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) {
  %453 = cast(%var_7409, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %454 = cast(%var_7410, dtype="float64") /* ty=Tensor[(21, 7), float64] */;
  %455 = cast(meta[relay.Constant][35] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %456 = reshape(%453, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %457 = reshape(%454, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %458 = reshape(%455, newshape=[]) /* ty=uint64 */;
  %459 = @func_1564(%456, %457, %458) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %460 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %461 = %459.1;
  (%460, %461, %var_7409, %var_7410, meta[relay.Constant][35] /* ty=uint64 */)
}

def @func_12000() -> (Tensor[(15, 15, 10), float64], Tensor[(3, 3, 11), float64], uint64, Tensor[(147, 1), float64]) {
  %462 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
  %463 = cast(meta[relay.Constant][37] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %464 = cast(meta[relay.Constant][38] /* ty=Tensor[(147, 1), float64] */, dtype="float64") /* ty=Tensor[(147, 1), float64] */;
  %465 = reshape(%463, newshape=[]) /* ty=uint64 */;
  %466 = reshape(%464, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %467 = @func_4654(%465, %466) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
  %468 = sin(%462) /* ty=Tensor[(15, 15, 10), float64] */;
  %469 = %467.3;
  (%468, %469, meta[relay.Constant][37] /* ty=uint64 */, meta[relay.Constant][38] /* ty=Tensor[(147, 1), float64] */)
}

def @func_4954(%var_4941: Tensor[(15, 9, 16), float32], %var_4942: Tensor[(15, 9, 16), float32]) -> Tensor[(15, 9, 16), float32] {
  %470 = cast(%var_4942, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
  %471 = shape_of(%var_4941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%var_4941, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%472, %473) /* ty=Tensor[(15, 9, 16), float32] */
}

def @func_9138() -> (Tensor[(100), float64],) {
  %474 = @func_8600() /* ty=Tensor[(100), float64] */;
  (%474,)
}

def @func_5195(%var_5182: Tensor[(13, 6, 5), bool], %var_5183: Tensor[(13, 6, 5), bool]) -> (Tensor[(13, 6, 5), bool],) {
  %475 = cast(%var_5183, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
  %476 = shape_of(%var_5182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_5182, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = logical_or(%477, %478) /* ty=Tensor[(13, 6, 5), bool] */;
  (%479,)
}

def @func_1394(%var_1361: Tensor[(3, 5, 14), float32], %var_1381: uint64) -> (Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) {
  %480 = cast(%var_1361, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %481 = cast(%var_1381, dtype="uint64") /* ty=uint64 */;
  %482 = reshape(%481, newshape=[]) /* ty=uint64 */;
  %483 = @func_416(%482) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %484 = sqrt(%480) /* ty=Tensor[(3, 5, 14), float32] */;
  %485 = %483.0;
  (%484, %485, %var_1381)
}

def @func_11126() -> (Tensor[(11, 3, 7), float32],) {
  %486 = @func_8882() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) */;
  %487 = %486.0;
  (%487,)
}

def @func_6318(%var_6306: Tensor[(13, 4, 3), int16], %var_6307: Tensor[(13, 4, 3), int16], %var_6315: Tensor[(330), float32]) -> (Tensor[(13, 4, 3), bool], Tensor[(3, 11, 10), float32], Tensor[(330), float32]) {
  %488 = cast(%var_6307, dtype="bool") /* ty=Tensor[(13, 4, 3), bool] */;
  %489 = shape_of(%var_6306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%var_6306, dtype="bool") /* ty=Tensor[(13, 4, 3), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %492 = cast(%var_6315, dtype="float32") /* ty=Tensor[(330), float32] */;
  %493 = reshape(%492, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), float32] */;
  %494 = not_equal(%490, %491) /* ty=Tensor[(13, 4, 3), bool] */;
  %495 = @func_2425(%493) /* ty=Tensor[(3, 11, 10), float32] */;
  (%494, %495, %var_6315)
}

def @func_7817() -> (Tensor[(11, 3, 7), float32],) {
  %496 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
  %497 = %496.0;
  (%497,)
}

def @func_8016() -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) {
  %498 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
  %499 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %500 = %498.0;
  %501 = %499.0;
  (%500, %501)
}

def @func_12541() -> Tensor[(11, 3, 7), float64] {
  @func_11601() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_12116() -> (Tensor[(11, 3, 7), float64],) {
  %502 = @func_8506() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) */;
  %503 = %502.1;
  (%503,)
}

def @func_13037() -> Tensor[(338), float32] {
  %504 = @func_7739() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) */;
  %504.3
}

def @func_9039() -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32]) {
  %505 = @func_8212() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %506 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %507 = %505.0;
  %508 = %506.0;
  (%507, %508)
}

def @func_13058(%var_13052: Tensor[(11, 3, 7), float32]) -> (Tensor[(11, 3, 7), float64],) {
  %509 = @func_7817() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %510 = %509.0;
  %511 = cast(%var_13052, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %515 = power(%513, %514) /* ty=Tensor[(11, 3, 7), float64] */;
  (%515,)
}

def @func_12811(%var_12799: Tensor[(15, 15, 1), float64], %var_12805: Tensor[(15, 15, 3), float64]) -> (Tensor[(15, 15, 1), float64], Tensor[(15, 15, 3), int64]) {
  %516 = cast(%var_12799, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
  %517 = cast(%var_12799, dtype="int64") /* ty=Tensor[(15, 15, 1), int64] */;
  %518 = cast(%var_12805, dtype="int64") /* ty=Tensor[(15, 15, 3), int64] */;
  %519 = exp(%516) /* ty=Tensor[(15, 15, 1), float64] */;
  %520 = bitwise_or(%517, %518) /* ty=Tensor[(15, 15, 3), int64] */;
  (%519, %520)
}

def @func_11971() -> (Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(672), uint8]) {
  %521 = @func_8983() /* ty=(Tensor[(100), float32],) */;
  %522 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %523 = reshape(%522, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint8] */;
  %524 = @func_11478(%523) /* ty=(Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %525 = %521.0;
  %526 = %524.1;
  (%525, %526, meta[relay.Constant][39] /* ty=Tensor[(672), uint8] */)
}

def @func_10473(%var_10445: Tensor[(11, 3, 7), float64], %var_10465: Tensor[(330), float32]) -> (Tensor[(1, 15), bool], Tensor[(11, 3, 7), bool], Tensor[(13, 4, 3), bool], Tensor[(156), int16], Tensor[(330), float32]) {
  %527 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %528 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %529 = %528.1;
  %530 = cast(%var_10445, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %534 = cast(meta[relay.Constant][40] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %535 = cast(meta[relay.Constant][40] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %536 = cast(%var_10465, dtype="float32") /* ty=Tensor[(330), float32] */;
  %537 = reshape(%534, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int16] */;
  %538 = reshape(%535, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int16] */;
  %539 = reshape(%536, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %540 = @func_6318(%537, %538, %539) /* ty=(Tensor[(13, 4, 3), bool], Tensor[(3, 11, 10), float32], Tensor[(330), float32]) */;
  %541 = %527.0;
  %542 = equal(%532, %533) /* ty=Tensor[(11, 3, 7), bool] */;
  %543 = %540.0;
  (%541, %542, %543, meta[relay.Constant][40] /* ty=Tensor[(156), int16] */, %var_10465)
}

def @func_8123() -> Tensor[(11, 3, 7), float32] {
  @func_7286() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_12492() -> Tensor[(11, 3, 7), float32] {
  %544 = @func_7817() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %544.0
}

def @main(%var_13197: Tensor[(16, 5, 8), float32]) -> (Tensor[(11, 3, 7), float32], Tensor[(1280), uint8], Tensor[(16, 5, 8), bool]) {
  %545 = cast(meta[relay.Constant][41] /* ty=Tensor[(1280), uint8] */, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %546 = cast(meta[relay.Constant][41] /* ty=Tensor[(1280), uint8] */, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %547 = cast(meta[relay.Constant][41] /* ty=Tensor[(1280), uint8] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %548 = reshape(%545, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), uint8] */;
  %549 = reshape(%546, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), uint8] */;
  %550 = reshape(%547, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %551 = @func_12250(%548, %549, %550) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(8, 10, 16), float64], Tensor[(8, 10, 16), uint64]) */;
  %552 = cast(%var_13197, dtype="float32") /* ty=Tensor[(16, 5, 8), float32] */;
  %553 = acosh(%552) /* ty=Tensor[(16, 5, 8), float32] */;
  %554 = cast(%553, dtype="float64") /* ty=Tensor[(16, 5, 8), float64] */;
  %555 = log10(%554) /* ty=Tensor[(16, 5, 8), float64] */;
  %556 = cast(%553, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %558 = cast(%555, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %560 = %551.1;
  %561 = equal(%558, %559) /* ty=Tensor[(16, 5, 8), bool] */;
  (%560, meta[relay.Constant][41] /* ty=Tensor[(1280), uint8] */, %561)
}

def @func_10389(%var_10361: Tensor[(21), float64], %var_10362: Tensor[(147), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32], Tensor[(210), float32], Tensor[(21), float64], Tensor[(147), float64], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64]) {
  %562 = @func_9849() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %563 = @func_9647() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %564 = cast(%var_10361, dtype="float64") /* ty=Tensor[(21), float64] */;
  %565 = cast(%var_10362, dtype="float64") /* ty=Tensor[(147), float64] */;
  %566 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %567 = reshape(%564, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %568 = reshape(%565, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %569 = reshape(%566, newshape=[]) /* ty=uint64 */;
  %570 = @func_1564(%567, %568, %569) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %571 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %572 = cast(meta[relay.Constant][43] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
  %573 = reshape(%571, newshape=[]) /* ty=bool */;
  %574 = reshape(%572, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %575 = @func_4348(%573, %574) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %576 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %577 = %562.0;
  %578 = %563.0;
  %579 = %570.4;
  %580 = %575.1;
  %581 = %576.0;
  (%577, %578, %579, %var_10361, %var_10362, meta[relay.Constant][42] /* ty=uint64 */, %580, meta[relay.Constant][43] /* ty=Tensor[(8), bool] */, %581)
}

def @func_11287(%var_11252: Tensor[(9, 7, 2), float32]) -> (Tensor[(9, 7, 2), float32], Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(20, 4), float64], Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool]) {
  %582 = cast(%var_11252, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
  %583 = @func_9849() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %584 = cast(meta[relay.Constant][44] /* ty=Tensor[(20, 4), float64] */, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %585 = reshape(%584, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
  %586 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %587 = cast(meta[relay.Constant][45] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
  %588 = reshape(%586, newshape=[]) /* ty=bool */;
  %589 = reshape(%587, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %590 = @func_4348(%588, %589) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %591 = atanh(%582) /* ty=Tensor[(9, 7, 2), float32] */;
  %592 = @func_10980() /* ty=Tensor[(11, 3, 7), float64] */;
  %593 = %583.0;
  %594 = @func_431(%585) /* ty=Tensor[(2, 4, 10), float64] */;
  %595 = %590.0;
  (%591, %592, %593, %594, meta[relay.Constant][44] /* ty=Tensor[(20, 4), float64] */, %595, False /* ty=bool */, meta[relay.Constant][45] /* ty=Tensor[(8), bool] */)
}

def @func_9972() -> (Tensor[(11, 3, 7), float32],) {
  %596 = @func_9647() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %597 = %596.0;
  (%597,)
}

def @func_11721(%var_11643: Tensor[(21, 1), float64], %var_11644: Tensor[(7, 21), float64], %var_11669: Tensor[(33, 4), uint32]) -> (Tensor[(8), float32], Tensor[(3, 3, 11), float64], Tensor[(7, 21), float64], Tensor[(3, 4, 11), bool], Tensor[(33, 4), uint32], Tensor[(100), float32], Tensor[(15, 5, 4), uint64], Tensor[(21, ?), uint64], Tensor[(3, 3, 11), float64], Tensor[(21, ?), bool]) {
  %598 = @func_10825() /* ty=(Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) */;
  %599 = cast(%var_11643, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %600 = cast(%var_11644, dtype="float64") /* ty=Tensor[(7, 21), float64] */;
  %601 = reshape(%599, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
  %602 = reshape(%600, newshape=[21, 7]) /* ty=Tensor[(21, 7), float64] */;
  %603 = @func_7414(%601, %602) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) */;
  %604 = cast(%var_11669, dtype="uint32") /* ty=Tensor[(33, 4), uint32] */;
  %605 = cast(meta[relay.Constant][46] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %606 = reshape(%604, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), uint32] */;
  %607 = reshape(%605, newshape=[1, 100]) /* ty=Tensor[(1, 100), float32] */;
  %608 = @func_9616(%606, %607) /* ty=(Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) */;
  %609 = cast(%var_11643, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %610 = cast(%var_11644, dtype="float64") /* ty=Tensor[(7, 21), float64] */;
  %611 = reshape(%609, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %612 = reshape(%610, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %613 = @func_10389(%611, %612) /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32], Tensor[(210), float32], Tensor[(21), float64], Tensor[(147), float64], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64]) */;
  %614 = cast(%var_11643, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %615 = acos(%614) /* ty=Tensor[(21, 1), float32] */;
  %616 = cast(%615, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %617 = tan(%616) /* ty=Tensor[(21, 1), float32] */;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %619 = atan(%618) /* ty=Tensor[(21, 1), float64] */;
  %620 = cast(%615, dtype="uint64") /* ty=Tensor[(21, 1), uint64] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(2), int32] */;
  %622 = cast(%619, dtype="uint64") /* ty=Tensor[(21, 1), uint64] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %624 = %603.1;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
  %626 = reshape(%625, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
  %627 = @func_329(%626) /* ty=(Tensor[(3, 3, 11), float64],) */;
  %628 = cast(%615, dtype="bool") /* ty=Tensor[(21, 1), bool] */;
  %629 = shape_of(%617, dtype="int32") /* ty=Tensor[(2), int32] */;
  %630 = cast(%617, dtype="bool") /* ty=Tensor[(21, 1), bool] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %632 = logical_or(%630, %631) /* ty=Tensor[(21, ?), bool] */;
  %633 = cast(%615, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(2), int32] */;
  %635 = cast(%632, dtype="float64") /* ty=Tensor[(21, ?), float64] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %637 = floor_mod(%635, %636) /* ty=Tensor[(21, ?), float64] */;
  %638 = cast(%637, dtype="bool") /* ty=Tensor[(21, ?), bool] */;
  %639 = shape_of(%615, dtype="int32") /* ty=Tensor[(2), int32] */;
  %640 = cast(%615, dtype="bool") /* ty=Tensor[(21, 1), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %642 = %598.2;
  %643 = %608.0;
  %644 = %613.6;
  %645 = subtract(%622, %623) /* ty=Tensor[(21, ?), uint64] */;
  %646 = %627.0;
  %647 = not_equal(%640, %641) /* ty=Tensor[(21, ?), bool] */;
  (%642, %624, %var_11644, %643, %var_11669, meta[relay.Constant][46] /* ty=Tensor[(100), float32] */, %644, %645, %646, %647)
}

def @func_7796() -> (Tensor[(11, 3, 7), float32], Tensor[(100), float32]) {
  %648 = @func_7739() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) */;
  %649 = @func_7286() /* ty=Tensor[(11, 3, 7), float32] */;
  %650 = %648.5;
  (%649, %650)
}

def @func_9616(%var_9568: Tensor[(3, 4, 11), uint32], %var_9587: Tensor[(1, 100), float32]) -> (Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) {
  %651 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 4, 11), uint32] */, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
  %652 = shape_of(%var_9568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%var_9568, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %655 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 9), float64] */;
  %656 = cast(%var_9587, dtype="float32") /* ty=Tensor[(1, 100), float32] */;
  %657 = reshape(%655, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %658 = reshape(%656, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %659 = @func_1965(%657, %658) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) */;
  %660 = %659.7;
  %661 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 9), float64] */, dtype="uint32") /* ty=Tensor[(11, 9), uint32] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="uint32") /* ty=Tensor[(3, 3, 11), uint32] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %665 = less_equal(%653, %654) /* ty=Tensor[(3, 4, 11), bool] */;
  %666 = right_shift(%663, %664) /* ty=Tensor[(3, 3, 11), uint32] */;
  (%665, %var_9587, %666)
}

def @func_1965(%var_1891: Tensor[(99), float64], %var_1929: Tensor[(100), float32]) -> (Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) {
  %667 = cast(%var_1891, dtype="float64") /* ty=Tensor[(99), float64] */;
  %668 = reshape(%667, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
  %669 = @func_329(%668) /* ty=(Tensor[(3, 3, 11), float64],) */;
  %670 = cast(meta[relay.Constant][49] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %671 = reshape(%670, newshape=[]) /* ty=uint64 */;
  %672 = @func_416(%671) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %673 = cast(%var_1929, dtype="float32") /* ty=Tensor[(100), float32] */;
  %674 = cast(%var_1929, dtype="float32") /* ty=Tensor[(100), float32] */;
  %675 = reshape(%673, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %676 = reshape(%674, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %677 = @func_1600(%675, %676) /* ty=(Tensor[(5, 2, 10), float32],) */;
  %678 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 2, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %679 = log10(%678) /* ty=Tensor[(15, 2, 7), float32] */;
  %680 = cast(%679, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %681 = asinh(%680) /* ty=Tensor[(15, 2, 7), float64] */;
  %682 = cast(%681, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %683 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%679, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = %669.0;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
  %688 = reshape(%687, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
  %689 = @func_329(%688) /* ty=(Tensor[(3, 3, 11), float64],) */;
  %690 = %672.0;
  %691 = %677.0;
  %692 = logical_or(%684, %685) /* ty=Tensor[(15, 2, 7), bool] */;
  %693 = %689.0;
  (%686, %var_1891, %690, meta[relay.Constant][49] /* ty=uint64 */, %691, %var_1929, %692, %693)
}

def @func_10825() -> (Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) {
  %694 = cast(meta[relay.Constant][51] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %695 = reshape(%694, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float32] */;
  %696 = @func_2918(%695) /* ty=(Tensor[(1, 8, 1), float64],) */;
  %697 = @func_8600() /* ty=Tensor[(100), float64] */;
  %698 = %696.0;
  (%697, %698, meta[relay.Constant][51] /* ty=Tensor[(8), float32] */)
}

def @func_10044() -> (Tensor[(10, ?, 11), bool],) {
  %699 = @func_9451() /* ty=Tensor[(10, ?, 11), bool] */;
  (%699,)
}

def @func_11478(%var_11448: Tensor[(8, 7, 12), uint8]) -> (Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) {
  %700 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 7, 12), uint8] */, dtype="uint8") /* ty=Tensor[(8, 7, 12), uint8] */;
  %701 = shape_of(%var_11448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%var_11448, dtype="uint8") /* ty=Tensor[(8, 7, 12), uint8] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %704 = @func_11126() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %705 = bitwise_xor(%702, %703) /* ty=Tensor[(8, 7, 12), uint8] */;
  %706 = %704.0;
  %707 = @func_10980() /* ty=Tensor[(11, 3, 7), float64] */;
  (%705, %706, %707)
}

def @func_11601() -> Tensor[(11, 3, 7), float64] {
  @func_7123() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_11889(%var_11841: Tensor[(10, 9, 2), float32], %var_11844: Tensor[(10, 9, 2), float32]) -> Tensor[(10, 9, 2), uint16] {
  %708 = cast(%var_11841, dtype="float32") /* ty=Tensor[(10, 9, 2), float32] */;
  %709 = sigmoid(%708) /* ty=Tensor[(10, 9, 2), float32] */;
  %710 = cast(%var_11844, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %711 = shape_of(%var_11841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_11841, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %714 = left_shift(%712, %713) /* ty=Tensor[(10, 9, 2), uint16] */;
  %715 = cast(%714, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %716 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%709, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_xor(%717, %718) /* ty=Tensor[(10, 9, 2), uint16] */
}

def @func_12882() -> (Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64]) {
  %719 = @func_12000() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(3, 3, 11), float64], uint64, Tensor[(147, 1), float64]) */;
  %720 = @func_10980() /* ty=Tensor[(11, 3, 7), float64] */;
  %721 = %719.1;
  (%720, %721)
}

def @func_329(%var_317: Tensor[(3, 3, 11), float64]) -> (Tensor[(3, 3, 11), float64],) {
  %722 = cast(%var_317, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
  %723 = rsqrt(%722) /* ty=Tensor[(3, 3, 11), float64] */;
  (%723,)
}

def @func_8212() -> (Tensor[(11, 3, 7), float32],) {
  %724 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %725 = %724.0;
  (%725,)
}

def @func_7451() -> (Tensor[(11, 3, 7), float64],) {
  %726 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  (%726,)
}

def @func_12250(%var_12156: Tensor[(8, 10, 16), uint8], %var_12157: Tensor[(8, 10, 16), uint8], %var_12238: Tensor[(8, 10, 16), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(8, 10, 16), float64], Tensor[(8, 10, 16), uint64]) {
  %727 = @func_9849() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %728 = cast(%var_12157, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %729 = shape_of(%var_12156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_12156, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %732 = not_equal(%730, %731) /* ty=Tensor[(8, 10, 16), bool] */;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  %734 = erf(%733) /* ty=Tensor[(8, 10, 16), float64] */;
  %735 = cast(%var_12156, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%734, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %739 = cast(%734, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  %740 = sin(%739) /* ty=Tensor[(8, 10, 16), float64] */;
  %741 = cast(%var_12238, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%740, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %745 = @func_8197() /* ty=Tensor[(11, 3, 7), float64] */;
  %746 = %727.0;
  %747 = floor_divide(%737, %738) /* ty=Tensor[(8, 10, 16), float64] */;
  %748 = right_shift(%743, %744) /* ty=Tensor[(8, 10, 16), uint64] */;
  (%745, %746, %747, %748)
}

def @func_8197() -> Tensor[(11, 3, 7), float64] {
  %749 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %749.0
}

def @func_8882() -> (Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) {
  %750 = @func_8212() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %751 = cast(meta[relay.Constant][53] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
  %752 = reshape(%751, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), float32] */;
  %753 = %750.0;
  %754 = @func_6008(%752) /* ty=Tensor[(13, 13, 2), float32] */;
  %755 = @func_8552() /* ty=Tensor[(11, 3, 7), float32] */;
  (%753, %754, meta[relay.Constant][53] /* ty=Tensor[(338), float32] */, %755)
}

def @func_12970(%var_12928: Tensor[(210), float32]) -> (Tensor[(100), float64], Tensor[(3, 5, 14), float32], Tensor[(210), float32], uint64, Tensor[(330), float32], Tensor[(3, 11, 10), float32], Tensor[(3, 5, 14), float32]) {
  %756 = cast(%var_12928, dtype="float32") /* ty=Tensor[(210), float32] */;
  %757 = cast(meta[relay.Constant][54] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %758 = reshape(%756, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %759 = reshape(%757, newshape=[]) /* ty=uint64 */;
  %760 = @func_1394(%758, %759) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
  %761 = cast(meta[relay.Constant][55] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %762 = reshape(%761, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), float32] */;
  %763 = @func_2425(%762) /* ty=Tensor[(3, 11, 10), float32] */;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
  %765 = cast(%var_12928, dtype="float32") /* ty=Tensor[(210), float32] */;
  %766 = cast(meta[relay.Constant][54] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %767 = reshape(%765, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %768 = reshape(%766, newshape=[]) /* ty=uint64 */;
  %769 = @func_1394(%767, %768) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
  %770 = @func_12465() /* ty=Tensor[(100), float64] */;
  %771 = %760.0;
  %772 = sinh(%764) /* ty=Tensor[(3, 11, 10), float32] */;
  %773 = %769.0;
  (%770, %771, %var_12928, meta[relay.Constant][54] /* ty=uint64 */, meta[relay.Constant][55] /* ty=Tensor[(330), float32] */, %772, %773)
}

def @func_9534() -> (Tensor[(11, 3, 7), float32],) {
  %774 = @func_8552() /* ty=Tensor[(11, 3, 7), float32] */;
  (%774,)
}

def @func_8600() -> Tensor[(100), float64] {
  %775 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
  %776 = %775.1;
  %777 = cast(%776, dtype="float32") /* ty=Tensor[(100), float32] */;
  %778 = cast(%776, dtype="float32") /* ty=Tensor[(100), float32] */;
  %779 = reshape(%777, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %780 = reshape(%778, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %781 = @func_1600(%779, %780) /* ty=(Tensor[(5, 2, 10), float32],) */;
  %782 = %781.0;
  %783 = cast(%782, dtype="float64") /* ty=Tensor[(5, 2, 10), float64] */;
  %784 = shape_of(%776, dtype="int32") /* ty=Tensor[(1), int32] */;
  %785 = cast(%776, dtype="float64") /* ty=Tensor[(100), float64] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?), float64] */;
  mod(%785, %786) /* ty=Tensor[(100), float64] */
}

def @func_9849() -> (Tensor[(11, 3, 7), float32],) {
  %787 = @func_8212() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %788 = %787.0;
  (%788,)
}

def @func_10787() -> Tensor[(11, 3, 7), float32] {
  %789 = @func_9972() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %789.0
}

def @func_9922(%var_9889: Tensor[(13, 26), float32], %var_9904: Tensor[(147), float64]) -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 26), float32], Tensor[(11, 3, 7), float64], Tensor[(21), float64], Tensor[(147), float64]) {
  %790 = cast(%var_9889, dtype="float32") /* ty=Tensor[(13, 26), float32] */;
  %791 = reshape(%790, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %792 = @func_7397(%791) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */;
  %793 = cast(meta[relay.Constant][56] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %794 = cast(%var_9904, dtype="float64") /* ty=Tensor[(147), float64] */;
  %795 = reshape(%793, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
  %796 = reshape(%794, newshape=[21, 7]) /* ty=Tensor[(21, 7), float64] */;
  %797 = @func_7414(%795, %796) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) */;
  %798 = @func_8600() /* ty=Tensor[(100), float64] */;
  %799 = %792.0;
  %800 = %797.0;
  (%798, %799, %var_9889, %800, meta[relay.Constant][56] /* ty=Tensor[(21), float64] */, %var_9904)
}

def @func_4613(%var_4609: Tensor[(1, 3, 14), float32]) -> Tensor[(1, 3, 14), float32] {
  %801 = cast(%var_4609, dtype="float32") /* ty=Tensor[(1, 3, 14), float32] */;
  rsqrt(%801) /* ty=Tensor[(1, 3, 14), float32] */
}

def @func_4269(%var_4257: Tensor[(2, 1, 4), float64], %var_4258: Tensor[(2, 4, 4), float64]) -> (Tensor[(2, 4, 4), float64],) {
  %802 = cast(%var_4257, dtype="float64") /* ty=Tensor[(2, 1, 4), float64] */;
  %803 = cast(%var_4258, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %804 = add(%802, %803) /* ty=Tensor[(2, 4, 4), float64] */;
  (%804,)
}

def @func_12575(%var_12572: bool, %var_12573: Tensor[(1, 8), bool]) -> (Tensor[(1, 15), bool], Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], bool, Tensor[(1, 8), bool]) {
  %805 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %806 = @func_12335() /* ty=(Tensor[(10, ?, 11), bool],) */;
  %807 = cast(%var_12572, dtype="bool") /* ty=bool */;
  %808 = cast(%var_12573, dtype="bool") /* ty=Tensor[(1, 8), bool] */;
  %809 = reshape(%807, newshape=[]) /* ty=bool */;
  %810 = reshape(%808, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %811 = @func_4348(%809, %810) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %812 = %805.0;
  %813 = %806.0;
  %814 = %811.1;
  (%812, %813, %814, %var_12572, %var_12573)
}

def @func_4174(%var_4166: Tensor[(1, 7, 12), uint16], %var_4167: Tensor[(8, 7, 12), uint16]) -> (Tensor[(8, 7, 12), bool],) {
  %815 = cast(%var_4166, dtype="bool") /* ty=Tensor[(1, 7, 12), bool] */;
  %816 = cast(%var_4167, dtype="bool") /* ty=Tensor[(8, 7, 12), bool] */;
  %817 = greater_equal(%815, %816) /* ty=Tensor[(8, 7, 12), bool] */;
  (%817,)
}

def @func_12099() -> (Tensor[(11, 3, 7), float64],) {
  %818 = @func_11601() /* ty=Tensor[(11, 3, 7), float64] */;
  (%818,)
}

def @func_7653(%var_7646: Tensor[(21), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(21), float64], Tensor[(100), float32], Tensor[(390), bool], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) {
  %819 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %820 = %819.0;
  %821 = cast(%820, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  %822 = cast(%var_7646, dtype="float64") /* ty=Tensor[(21), float64] */;
  %823 = cast(meta[relay.Constant][57] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %824 = cast(meta[relay.Constant][58] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %825 = reshape(%822, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %826 = reshape(%823, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %827 = reshape(%824, newshape=[390]) /* ty=Tensor[(390), bool] */;
  %828 = @func_7227(%825, %826, %827) /* ty=(uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) */;
  %829 = cast(meta[relay.Constant][59] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
  %830 = reshape(%829, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %831 = @func_7397(%830) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */;
  %832 = cos(%821) /* ty=Tensor[(11, 3, 7), float64] */;
  %833 = %828.11;
  %834 = %831.1;
  (%832, %833, %var_7646, meta[relay.Constant][57] /* ty=Tensor[(100), float32] */, meta[relay.Constant][58] /* ty=Tensor[(390), bool] */, %834, meta[relay.Constant][59] /* ty=Tensor[(338), float32] */)
}

def @func_5116(%var_5100: Tensor[(10, 1, 11), float32], %var_5107: uint64) -> (Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) {
  %835 = cast(%var_5100, dtype="float32") /* ty=Tensor[(10, 1, 11), float32] */;
  %836 = sigmoid(%835) /* ty=Tensor[(10, 1, 11), float32] */;
  %837 = cast(%var_5100, dtype="bool") /* ty=Tensor[(10, 1, 11), bool] */;
  %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%836, dtype="bool") /* ty=Tensor[(10, 1, 11), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %841 = cast(%var_5107, dtype="uint64") /* ty=uint64 */;
  %842 = reshape(%841, newshape=[]) /* ty=uint64 */;
  %843 = @func_416(%842) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %844 = greater_equal(%839, %840) /* ty=Tensor[(10, ?, 11), bool] */;
  %845 = %843.0;
  (%844, %845, %var_5107)
}

def @func_11081(%var_11055: Tensor[(13, 13, 2), float32]) -> (Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool], Tensor[(13, 13, 2), uint32], Tensor[(13, 13, 2), float32]) {
  %846 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %847 = cast(meta[relay.Constant][60] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
  %848 = reshape(%846, newshape=[]) /* ty=bool */;
  %849 = reshape(%847, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %850 = @func_4348(%848, %849) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %851 = @func_8882() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) */;
  %852 = %851.1;
  %853 = cast(%var_11055, dtype="uint32") /* ty=Tensor[(13, 13, 2), uint32] */;
  %854 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%852, dtype="uint32") /* ty=Tensor[(13, 13, 2), uint32] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %857 = cast(%852, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  %858 = %850.0;
  %859 = bitwise_or(%855, %856) /* ty=Tensor[(13, 13, 2), uint32] */;
  %860 = log2(%857) /* ty=Tensor[(13, 13, 2), float32] */;
  (%858, True /* ty=bool */, meta[relay.Constant][60] /* ty=Tensor[(8), bool] */, %859, %860)
}

def @func_9702(%var_9697: Tensor[(210), float32], %var_9698: uint64) -> (Tensor[(11, 3, 7), int32], uint64, Tensor[(210), float32], uint64) {
  %861 = @func_8123() /* ty=Tensor[(11, 3, 7), float32] */;
  %862 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(11, 3, 7), int32] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%861, dtype="int32") /* ty=Tensor[(11, 3, 7), int32] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %866 = cast(%var_9697, dtype="float32") /* ty=Tensor[(210), float32] */;
  %867 = cast(%var_9698, dtype="uint64") /* ty=uint64 */;
  %868 = reshape(%866, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %869 = reshape(%867, newshape=[]) /* ty=uint64 */;
  %870 = @func_1394(%868, %869) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
  %871 = multiply(%864, %865) /* ty=Tensor[(11, 3, 7), int32] */;
  %872 = %870.2;
  (%871, %872, %var_9697, %var_9698)
}

def @func_13185() -> (Tensor[(11, 3, 7), float64], Tensor[(338), float32]) {
  %873 = @func_12882() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64]) */;
  %874 = %873.0;
  %875 = @func_13037() /* ty=Tensor[(338), float32] */;
  (%874, %875)
}

def @func_7363(%var_7338: Tensor[(1, 99), float64]) -> (Tensor[(3, 3, 11), float64], Tensor[(1, 99), float64], Tensor[(11, 5, 10), uint64]) {
  %876 = cast(%var_7338, dtype="float64") /* ty=Tensor[(1, 99), float64] */;
  %877 = reshape(%876, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
  %878 = @func_329(%877) /* ty=(Tensor[(3, 3, 11), float64],) */;
  %879 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 5, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 10), float32] */;
  %880 = atanh(%879) /* ty=Tensor[(11, 5, 10), float32] */;
  %881 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 5, 10), float32] */, dtype="uint64") /* ty=Tensor[(11, 5, 10), uint64] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="uint64") /* ty=Tensor[(11, 5, 10), uint64] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %885 = %878.0;
  %886 = multiply(%883, %884) /* ty=Tensor[(11, 5, 10), uint64] */;
  (%885, %var_7338, %886)
}

def @func_915(%var_904: uint32, %var_905: Tensor[(11, 10, 1), uint32]) -> (Tensor[(11, 10, 1), bool],) {
  %887 = cast(%var_904, dtype="bool") /* ty=bool */;
  %888 = cast(%var_905, dtype="bool") /* ty=Tensor[(11, 10, 1), bool] */;
  %889 = not_equal(%887, %888) /* ty=Tensor[(11, 10, 1), bool] */;
  (%889,)
}

def @func_1564(%var_1516: Tensor[(1, 7, 3), float64], %var_1517: Tensor[(7, 7, 3), float64], %var_1547: uint64) -> (Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) {
  %890 = cast(%var_1516, dtype="bool") /* ty=Tensor[(1, 7, 3), bool] */;
  %891 = cast(%var_1517, dtype="bool") /* ty=Tensor[(7, 7, 3), bool] */;
  %892 = cast(meta[relay.Constant][63] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %893 = reshape(%892, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
  %894 = @func_329(%893) /* ty=(Tensor[(3, 3, 11), float64],) */;
  %895 = cast(meta[relay.Constant][64] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %896 = cast(%var_1547, dtype="uint64") /* ty=uint64 */;
  %897 = reshape(%895, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %898 = reshape(%896, newshape=[]) /* ty=uint64 */;
  %899 = @func_1394(%897, %898) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
  %900 = greater_equal(%890, %891) /* ty=Tensor[(7, 7, 3), bool] */;
  %901 = %894.0;
  %902 = %899.1;
  (%900, %901, meta[relay.Constant][63] /* ty=Tensor[(99), float64] */, %902, meta[relay.Constant][64] /* ty=Tensor[(210), float32] */, %var_1547)
}

def @func_7739() -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) {
  %903 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %904 = cast(meta[relay.Constant][65] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
  %905 = reshape(%904, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), float32] */;
  %906 = cast(meta[relay.Constant][66] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %907 = cast(meta[relay.Constant][66] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %908 = reshape(%906, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %909 = reshape(%907, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %910 = @func_1600(%908, %909) /* ty=(Tensor[(5, 2, 10), float32],) */;
  %911 = cast(meta[relay.Constant][67] /* ty=Tensor[(21, 4), uint16] */, dtype="uint16") /* ty=Tensor[(21, 4), uint16] */;
  %912 = cast(meta[relay.Constant][68] /* ty=Tensor[(8, 84), uint16] */, dtype="uint16") /* ty=Tensor[(8, 84), uint16] */;
  %913 = reshape(%911, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), uint16] */;
  %914 = reshape(%912, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint16] */;
  %915 = @func_4174(%913, %914) /* ty=(Tensor[(8, 7, 12), bool],) */;
  %916 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %917 = %903.0;
  %918 = @func_6008(%905) /* ty=Tensor[(13, 13, 2), float32] */;
  %919 = %910.0;
  %920 = %915.0;
  (%916, %917, %918, meta[relay.Constant][65] /* ty=Tensor[(338), float32] */, %919, meta[relay.Constant][66] /* ty=Tensor[(100), float32] */, %920, meta[relay.Constant][67] /* ty=Tensor[(21, 4), uint16] */, meta[relay.Constant][68] /* ty=Tensor[(8, 84), uint16] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10981() -> Tensor[(11, 3, 7), float64] {
  %0 = fn () -> Tensor[(11, 3, 7), float64] {
    @func_8339() /* ty=Tensor[(11, 3, 7), float64] */
  };
  %0() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_795(%var_767: Tensor[(16, 12, 8), float64], %var_780: uint64) -> (Tensor[(15, 5, 4), uint64], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(16, 12, 8), uint16]) {
  %1 = cast(%var_780, dtype="uint64") /* ty=uint64 */;
  %2 = reshape(%1, newshape=[]) /* ty=uint64 */;
  %3 = @func_416(%2) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %5 = reshape(%4, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
  %6 = @func_329(%5) /* ty=(Tensor[(3, 3, 11), float64],) */;
  %7 = cast(%var_767, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %8 = asin(%7) /* ty=Tensor[(16, 12, 8), float64] */;
  %9 = cast(%8, dtype="uint16") /* ty=Tensor[(16, 12, 8), uint16] */;
  %10 = cast(%var_780, dtype="uint16") /* ty=uint16 */;
  %11 = %3.0;
  %12 = %6.0;
  %13 = subtract(%9, %10) /* ty=Tensor[(16, 12, 8), uint16] */;
  (%11, %12, meta[relay.Constant][0] /* ty=Tensor[(99), float64] */, %13)
}

def @func_1568(%var_1565: Tensor[(1, 7, 3), float64], %var_1566: Tensor[(7, 7, 3), float64], %var_1567: uint64) -> (Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) {
  %27 = fn (%var_1516: Tensor[(1, 7, 3), float64], %var_1517: Tensor[(7, 7, 3), float64], %var_1547: uint64) -> (Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) {
    %14 = cast(%var_1516, dtype="bool") /* ty=Tensor[(1, 7, 3), bool] */;
    %15 = cast(%var_1517, dtype="bool") /* ty=Tensor[(7, 7, 3), bool] */;
    %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %17 = reshape(%16, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
    %18 = @func_329(%17) /* ty=(Tensor[(3, 3, 11), float64],) */;
    %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %20 = cast(%var_1547, dtype="uint64") /* ty=uint64 */;
    %21 = reshape(%19, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
    %22 = reshape(%20, newshape=[]) /* ty=uint64 */;
    %23 = @func_1394(%21, %22) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
    %24 = greater_equal(%14, %15) /* ty=Tensor[(7, 7, 3), bool] */;
    %25 = %18.0;
    %26 = %23.1;
    (%24, %25, meta[relay.Constant][1] /* ty=Tensor[(99), float64] */, %26, meta[relay.Constant][2] /* ty=Tensor[(210), float32] */, %var_1547)
  };
  %27(%var_1565, %var_1566, %var_1567) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */
}

def @func_9534() -> (Tensor[(11, 3, 7), float32],) {
  %28 = @func_8552() /* ty=Tensor[(11, 3, 7), float32] */;
  (%28,)
}

def @func_4613(%var_4609: Tensor[(1, 3, 14), float32]) -> Tensor[(1, 3, 14), float32] {
  %29 = cast(%var_4609, dtype="float32") /* ty=Tensor[(1, 3, 14), float32] */;
  rsqrt(%29) /* ty=Tensor[(1, 3, 14), float32] */
}

def @func_12575(%var_12572: bool, %var_12573: Tensor[(1, 8), bool]) -> (Tensor[(1, 15), bool], Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], bool, Tensor[(1, 8), bool]) {
  %30 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %31 = @func_12335() /* ty=(Tensor[(10, ?, 11), bool],) */;
  %32 = cast(%var_12572, dtype="bool") /* ty=bool */;
  %33 = cast(%var_12573, dtype="bool") /* ty=Tensor[(1, 8), bool] */;
  %34 = reshape(%32, newshape=[]) /* ty=bool */;
  %35 = reshape(%33, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %36 = @func_4348(%34, %35) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %37 = %30.0;
  %38 = %31.0;
  %39 = %36.1;
  (%37, %38, %39, %var_12572, %var_12573)
}

def @func_918(%var_916: uint32, %var_917: Tensor[(11, 10, 1), uint32]) -> (Tensor[(11, 10, 1), bool],) {
  %43 = fn (%var_904: uint32, %var_905: Tensor[(11, 10, 1), uint32]) -> (Tensor[(11, 10, 1), bool],) {
    %40 = cast(%var_904, dtype="bool") /* ty=bool */;
    %41 = cast(%var_905, dtype="bool") /* ty=Tensor[(11, 10, 1), bool] */;
    %42 = not_equal(%40, %41) /* ty=Tensor[(11, 10, 1), bool] */;
    (%42,)
  };
  %43(%var_916, %var_917) /* ty=(Tensor[(11, 10, 1), bool],) */
}

def @func_1600(%var_1595: Tensor[(5, 2, 10), float32], %var_1596: Tensor[(5, 2, 10), float32]) -> (Tensor[(5, 2, 10), float32],) {
  %44 = cast(%var_1596, dtype="float32") /* ty=Tensor[(5, 2, 10), float32] */;
  %45 = shape_of(%var_1595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%var_1595, dtype="float32") /* ty=Tensor[(5, 2, 10), float32] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %48 = divide(%46, %47) /* ty=Tensor[(5, 2, 10), float32] */;
  (%48,)
}

def @func_11093() -> Tensor[(100), float64] {
  @func_8600() /* ty=Tensor[(100), float64] */
}

def @func_12062(%var_12060: uint32, %var_12061: Tensor[(6, 7, 12), uint32]) -> (Tensor[(6, 7, 12), uint32], Tensor[(6, 7, 12), bool], Tensor[(11, 3, 7), float64]) {
  %56 = fn (%var_12022: uint32, %var_12023: Tensor[(6, 7, 12), uint32]) -> (Tensor[(6, 7, 12), uint32], Tensor[(6, 7, 12), bool], Tensor[(11, 3, 7), float64]) {
    %49 = cast(%var_12022, dtype="uint32") /* ty=uint32 */;
    %50 = cast(%var_12023, dtype="uint32") /* ty=Tensor[(6, 7, 12), uint32] */;
    %51 = cast(%var_12022, dtype="bool") /* ty=bool */;
    %52 = cast(%var_12023, dtype="bool") /* ty=Tensor[(6, 7, 12), bool] */;
    %53 = left_shift(%49, %50) /* ty=Tensor[(6, 7, 12), uint32] */;
    %54 = equal(%51, %52) /* ty=Tensor[(6, 7, 12), bool] */;
    %55 = @func_9953() /* ty=Tensor[(11, 3, 7), float64] */;
    (%53, %54, %55)
  };
  %56(%var_12060, %var_12061) /* ty=(Tensor[(6, 7, 12), uint32], Tensor[(6, 7, 12), bool], Tensor[(11, 3, 7), float64]) */
}

def @func_7086() -> (Tensor[(11, 3, 7), float64],) {
  @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */
}

def @func_12254(%var_12251: Tensor[(8, 10, 16), uint8], %var_12252: Tensor[(8, 10, 16), uint8], %var_12253: Tensor[(8, 10, 16), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(8, 10, 16), float64], Tensor[(8, 10, 16), uint64]) {
  %79 = fn (%var_12156: Tensor[(8, 10, 16), uint8], %var_12157: Tensor[(8, 10, 16), uint8], %var_12238: Tensor[(8, 10, 16), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(8, 10, 16), float64], Tensor[(8, 10, 16), uint64]) {
    %57 = @func_9849() /* ty=(Tensor[(11, 3, 7), float32],) */;
    %58 = cast(%var_12157, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
    %59 = shape_of(%var_12156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %60 = cast(%var_12156, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
    %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %62 = not_equal(%60, %61) /* ty=Tensor[(8, 10, 16), bool] */;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
    %64 = erf(%63) /* ty=Tensor[(8, 10, 16), float64] */;
    %65 = cast(%var_12156, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
    %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%64, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %69 = cast(%64, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
    %70 = sin(%69) /* ty=Tensor[(8, 10, 16), float64] */;
    %71 = cast(%var_12238, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
    %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
    %73 = cast(%70, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %75 = @func_8197() /* ty=Tensor[(11, 3, 7), float64] */;
    %76 = %57.0;
    %77 = floor_divide(%67, %68) /* ty=Tensor[(8, 10, 16), float64] */;
    %78 = right_shift(%73, %74) /* ty=Tensor[(8, 10, 16), uint64] */;
    (%75, %76, %77, %78)
  };
  %79(%var_12251, %var_12252, %var_12253) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(8, 10, 16), float64], Tensor[(8, 10, 16), uint64]) */
}

def @func_4654(%var_4636: uint64, %var_4650: Tensor[(147), float64]) -> (Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) {
  %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
  %81 = cast(%var_4636, dtype="uint64") /* ty=uint64 */;
  %82 = reshape(%81, newshape=[]) /* ty=uint64 */;
  %83 = @func_416(%82) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %84 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
  %85 = cast(%var_4636, dtype="uint64") /* ty=uint64 */;
  %86 = reshape(%84, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %87 = reshape(%85, newshape=[]) /* ty=uint64 */;
  %88 = @func_795(%86, %87) /* ty=(Tensor[(15, 5, 4), uint64], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(16, 12, 8), uint16]) */;
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %90 = cast(%var_4650, dtype="float64") /* ty=Tensor[(147), float64] */;
  %91 = cast(%var_4636, dtype="uint64") /* ty=uint64 */;
  %92 = reshape(%89, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %93 = reshape(%90, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %94 = reshape(%91, newshape=[]) /* ty=uint64 */;
  %95 = @func_1564(%92, %93, %94) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %96 = log2(%80) /* ty=Tensor[(12, 8, 16), float64] */;
  %97 = %83.0;
  %98 = %88.1;
  %99 = %95.3;
  (%96, %97, %var_4636, %98, %99, meta[relay.Constant][4] /* ty=Tensor[(1, 21), float64] */, %var_4650)
}

def @func_11603() -> Tensor[(11, 3, 7), float64] {
  @func_11601() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_9013(%var_9011: Tensor[(6, 14, 6), uint64], %var_9012: Tensor[(6, 14, 6), uint64]) -> (Tensor[(6, 14, 6), bool], Tensor[(11, 3, 7), float64], Tensor[(6, 14, 6), float64]) {
  @func_9009(%var_9011, %var_9012) /* ty=(Tensor[(6, 14, 6), bool], Tensor[(11, 3, 7), float64], Tensor[(6, 14, 6), float64]) */
}

def @func_11423(%var_11421: Tensor[(21), float64]) -> (Tensor[(100), float32], Tensor[(100), float32], Tensor[(1638), int8], Tensor[(21), float64]) {
  @func_11420(%var_11421) /* ty=(Tensor[(100), float32], Tensor[(100), float32], Tensor[(1638), int8], Tensor[(21), float64]) */
}

def @func_6323(%var_6320: Tensor[(13, 4, 3), int16], %var_6321: Tensor[(13, 4, 3), int16], %var_6322: Tensor[(330), float32]) -> (Tensor[(13, 4, 3), bool], Tensor[(3, 11, 10), float32], Tensor[(330), float32]) {
  @func_6318(%var_6320, %var_6321, %var_6322) /* ty=(Tensor[(13, 4, 3), bool], Tensor[(3, 11, 10), float32], Tensor[(330), float32]) */
}

def @func_9039() -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32]) {
  %100 = @func_8212() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %101 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %102 = %100.0;
  %103 = %101.0;
  (%102, %103)
}

def @func_11013(%var_11011: Tensor[(195), float64]) -> (Tensor[(10, ?, 11), bool], Tensor[(5, 3, 13), float64], Tensor[(195), float64]) {
  @func_11010(%var_11011) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(5, 3, 13), float64], Tensor[(195), float64]) */
}

def @func_11779(%var_11778: Tensor[(99), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(100), float32], Tensor[(99), float64], Tensor[(100), float32]) {
  %113 = fn (%var_11766: Tensor[(99), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(100), float32], Tensor[(99), float64], Tensor[(100), float32]) {
    %104 = @func_8882() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) */;
    %105 = cast(%var_11766, dtype="float64") /* ty=Tensor[(99), float64] */;
    %106 = cast(meta[relay.Constant][5] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %107 = reshape(%105, newshape=[99]) /* ty=Tensor[(99), float64] */;
    %108 = reshape(%106, newshape=[100]) /* ty=Tensor[(100), float32] */;
    %109 = @func_1965(%107, %108) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) */;
    %110 = @func_10940() /* ty=Tensor[(11, 3, 7), float32] */;
    %111 = %104.1;
    %112 = %109.5;
    (%110, %111, %112, %var_11766, meta[relay.Constant][5] /* ty=Tensor[(100), float32] */)
  };
  %113(%var_11778) /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(100), float32], Tensor[(99), float64], Tensor[(100), float32]) */
}

def @func_12767(%var_12766: Tensor[(390), bool]) -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(100), float64], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) {
  %129 = fn (%var_12761: Tensor[(390), bool]) -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(100), float64], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) {
    %114 = @func_12116() /* ty=(Tensor[(11, 3, 7), float64],) */;
    %115 = @func_9138() /* ty=(Tensor[(100), float64],) */;
    %116 = %115.0;
    %117 = cast(%116, dtype="float64") /* ty=Tensor[(100), float64] */;
    %118 = log(%117) /* ty=Tensor[(100), float64] */;
    %119 = cast(%118, dtype="float64") /* ty=Tensor[(100), float64] */;
    %120 = cast(%var_12761, dtype="bool") /* ty=Tensor[(390), bool] */;
    %121 = cast(%var_12761, dtype="bool") /* ty=Tensor[(390), bool] */;
    %122 = reshape(%120, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
    %123 = reshape(%121, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
    %124 = @func_5195(%122, %123) /* ty=(Tensor[(13, 6, 5), bool],) */;
    %125 = @func_11093() /* ty=Tensor[(100), float64] */;
    %126 = %114.0;
    %127 = atan(%119) /* ty=Tensor[(100), float64] */;
    %128 = %124.0;
    (%125, %126, %127, %128, %var_12761)
  };
  %129(%var_12766) /* ty=(Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(100), float64], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) */
}

def @func_11481(%var_11479: Tensor[(8, 7, 12), uint8]) -> (Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) {
  @func_11478(%var_11479) /* ty=(Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */
}

def @func_8341() -> Tensor[(11, 3, 7), float64] {
  @func_8339() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_10660() -> (Tensor[(11, 3, 7), float32], Tensor[(1, 15), bool], Tensor[(1, 15), bool], Tensor[(100), float32], Tensor[(99), float64]) {
  @func_10658() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(1, 15), bool], Tensor[(1, 15), bool], Tensor[(100), float32], Tensor[(99), float64]) */
}

def @func_13186() -> (Tensor[(11, 3, 7), float64], Tensor[(338), float32]) {
  %133 = fn () -> (Tensor[(11, 3, 7), float64], Tensor[(338), float32]) {
    %130 = @func_12882() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64]) */;
    %131 = %130.0;
    %132 = @func_13037() /* ty=Tensor[(338), float32] */;
    (%131, %132)
  };
  %133() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(338), float32]) */
}

def @func_10477(%var_10475: Tensor[(11, 3, 7), float64], %var_10476: Tensor[(330), float32]) -> (Tensor[(1, 15), bool], Tensor[(11, 3, 7), bool], Tensor[(13, 4, 3), bool], Tensor[(156), int16], Tensor[(330), float32]) {
  @func_10473(%var_10475, %var_10476) /* ty=(Tensor[(1, 15), bool], Tensor[(11, 3, 7), bool], Tensor[(13, 4, 3), bool], Tensor[(156), int16], Tensor[(330), float32]) */
}

def @func_2428(%var_2426: Tensor[(3, 11, 10), float32]) -> Tensor[(3, 11, 10), float32] {
  @func_2425(%var_2426) /* ty=Tensor[(3, 11, 10), float32] */
}

def @func_8600() -> Tensor[(100), float64] {
  %134 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
  %135 = %134.1;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(100), float32] */;
  %137 = cast(%135, dtype="float32") /* ty=Tensor[(100), float32] */;
  %138 = reshape(%136, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %139 = reshape(%137, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
  %140 = @func_1600(%138, %139) /* ty=(Tensor[(5, 2, 10), float32],) */;
  %141 = %140.0;
  %142 = cast(%141, dtype="float64") /* ty=Tensor[(5, 2, 10), float64] */;
  %143 = shape_of(%135, dtype="int32") /* ty=Tensor[(1), int32] */;
  %144 = cast(%135, dtype="float64") /* ty=Tensor[(100), float64] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?), float64] */;
  mod(%144, %145) /* ty=Tensor[(100), float64] */
}

def @func_12913() -> Tensor[(10, ?, 11), bool] {
  @func_12911() /* ty=Tensor[(10, ?, 11), bool] */
}

def @func_9705(%var_9703: Tensor[(210), float32], %var_9704: uint64) -> (Tensor[(11, 3, 7), int32], uint64, Tensor[(210), float32], uint64) {
  %158 = fn (%var_9697: Tensor[(210), float32], %var_9698: uint64) -> (Tensor[(11, 3, 7), int32], uint64, Tensor[(210), float32], uint64) {
    %146 = @func_8123() /* ty=Tensor[(11, 3, 7), float32] */;
    %147 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(11, 3, 7), int32] */;
    %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
    %149 = cast(%146, dtype="int32") /* ty=Tensor[(11, 3, 7), int32] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %151 = cast(%var_9697, dtype="float32") /* ty=Tensor[(210), float32] */;
    %152 = cast(%var_9698, dtype="uint64") /* ty=uint64 */;
    %153 = reshape(%151, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
    %154 = reshape(%152, newshape=[]) /* ty=uint64 */;
    %155 = @func_1394(%153, %154) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
    %156 = multiply(%149, %150) /* ty=Tensor[(11, 3, 7), int32] */;
    %157 = %155.2;
    (%156, %157, %var_9697, %var_9698)
  };
  %158(%var_9703, %var_9704) /* ty=(Tensor[(11, 3, 7), int32], uint64, Tensor[(210), float32], uint64) */
}

def @func_11095() -> Tensor[(100), float64] {
  @func_11093() /* ty=Tensor[(100), float64] */
}

def @func_8199() -> Tensor[(11, 3, 7), float64] {
  @func_8197() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_6903(%var_6873: Tensor[(1, 5, 7), int64], %var_6880: Tensor[(147), float64], %var_6883: Tensor[(110), float32]) -> (Tensor[(1, 5, 7), int64], uint64, Tensor[(147), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32]) {
  %159 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %160 = cast(%var_6873, dtype="int64") /* ty=Tensor[(1, 5, 7), int64] */;
  %161 = cast(5 /* ty=int64 */, dtype="uint64") /* ty=uint64 */;
  %162 = cast(%var_6880, dtype="float64") /* ty=Tensor[(147), float64] */;
  %163 = reshape(%161, newshape=[]) /* ty=uint64 */;
  %164 = reshape(%162, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %165 = @func_4654(%163, %164) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
  %166 = cast(%var_6883, dtype="float32") /* ty=Tensor[(110), float32] */;
  %167 = %165.2;
  %168 = cast(%167, dtype="uint64") /* ty=uint64 */;
  %169 = reshape(%166, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float32] */;
  %170 = reshape(%168, newshape=[]) /* ty=uint64 */;
  %171 = @func_5116(%169, %170) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) */;
  %172 = maximum(%159, %160) /* ty=Tensor[(1, 5, 7), int64] */;
  %173 = %171.0;
  (%172, %167, %var_6880, %173, %var_6883)
}

def @func_7123() -> Tensor[(11, 3, 7), float64] {
  %174 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  sinh(%176) /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_12493() -> Tensor[(11, 3, 7), float32] {
  %178 = fn () -> Tensor[(11, 3, 7), float32] {
    %177 = @func_7817() /* ty=(Tensor[(11, 3, 7), float32],) */;
    %177.0
  };
  %178() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_8303() -> (Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) {
  @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */
}

def @func_12405() -> (Tensor[(100), float32], Tensor[(13, 9, 7), float32], Tensor[(11, 3, 7), float64], Tensor[(672), uint8]) {
  @func_12403() /* ty=(Tensor[(100), float32], Tensor[(13, 9, 7), float32], Tensor[(11, 3, 7), float64], Tensor[(672), uint8]) */
}

def @func_10503() -> (Tensor[(110), float32],) {
  %181 = fn () -> (Tensor[(110), float32],) {
    %179 = @func_8100() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) */;
    %180 = %179.2;
    (%180,)
  };
  %181() /* ty=(Tensor[(110), float32],) */
}

def @func_9475() -> (Tensor[(13, 9, 7), float32],) {
  %182 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
  %183 = %182.1;
  %184 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 9, 7), bool] */, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %188 = floor_mod(%186, %187) /* ty=Tensor[(13, 9, 7), float32] */;
  (%188,)
}

def @func_8602() -> Tensor[(100), float64] {
  @func_8600() /* ty=Tensor[(100), float64] */
}

def @func_1604(%var_1602: Tensor[(5, 2, 10), float32], %var_1603: Tensor[(5, 2, 10), float32]) -> (Tensor[(5, 2, 10), float32],) {
  @func_1600(%var_1602, %var_1603) /* ty=(Tensor[(5, 2, 10), float32],) */
}

def @func_9619(%var_9617: Tensor[(3, 4, 11), uint32], %var_9618: Tensor[(1, 100), float32]) -> (Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) {
  %205 = fn (%var_9568: Tensor[(3, 4, 11), uint32], %var_9587: Tensor[(1, 100), float32]) -> (Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) {
    %189 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 4, 11), uint32] */, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
    %190 = shape_of(%var_9568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %191 = cast(%var_9568, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
    %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %193 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 9), float64] */;
    %194 = cast(%var_9587, dtype="float32") /* ty=Tensor[(1, 100), float32] */;
    %195 = reshape(%193, newshape=[99]) /* ty=Tensor[(99), float64] */;
    %196 = reshape(%194, newshape=[100]) /* ty=Tensor[(100), float32] */;
    %197 = @func_1965(%195, %196) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) */;
    %198 = %197.7;
    %199 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 9), float64] */, dtype="uint32") /* ty=Tensor[(11, 9), uint32] */;
    %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
    %201 = cast(%198, dtype="uint32") /* ty=Tensor[(3, 3, 11), uint32] */;
    %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %203 = less_equal(%191, %192) /* ty=Tensor[(3, 4, 11), bool] */;
    %204 = right_shift(%201, %202) /* ty=Tensor[(3, 3, 11), uint32] */;
    (%203, %var_9587, %204)
  };
  %205(%var_9617, %var_9618) /* ty=(Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) */
}

def @func_2920(%var_2919: Tensor[(1, 8, 1), float32]) -> (Tensor[(1, 8, 1), float64],) {
  %210 = fn (%var_2896: Tensor[(1, 8, 1), float32]) -> (Tensor[(1, 8, 1), float64],) {
    %206 = cast(%var_2896, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
    %207 = log10(%206) /* ty=Tensor[(1, 8, 1), float32] */;
    %208 = cast(%207, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
    %209 = log(%208) /* ty=Tensor[(1, 8, 1), float64] */;
    (%209,)
  };
  %210(%var_2919) /* ty=(Tensor[(1, 8, 1), float64],) */
}

def @func_11543(%var_11508: Tensor[(80), float64], %var_11513: Tensor[(132), uint32], %var_11514: Tensor[(100), float32], %var_11520: Tensor[(35), int64], %var_11521: Tensor[(147), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(3, 4, 11), bool], Tensor[(132), uint32], Tensor[(100), float32], Tensor[(147), float64], Tensor[(35), int64], Tensor[(147), float64], Tensor[(110), float32]) {
  %211 = cast(%var_11508, dtype="float64") /* ty=Tensor[(80), float64] */;
  %212 = reshape(%211, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
  %213 = cast(%var_11513, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %214 = cast(%var_11514, dtype="float32") /* ty=Tensor[(100), float32] */;
  %215 = reshape(%213, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), uint32] */;
  %216 = reshape(%214, newshape=[1, 100]) /* ty=Tensor[(1, 100), float32] */;
  %217 = @func_9616(%215, %216) /* ty=(Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) */;
  %218 = cast(%var_11520, dtype="int64") /* ty=Tensor[(35), int64] */;
  %219 = cast(%var_11521, dtype="float64") /* ty=Tensor[(147), float64] */;
  %220 = cast(meta[relay.Constant][10] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %221 = reshape(%218, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), int64] */;
  %222 = reshape(%219, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %223 = reshape(%220, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %224 = @func_6903(%221, %222, %223) /* ty=(Tensor[(1, 5, 7), int64], uint64, Tensor[(147), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32]) */;
  %225 = cast(meta[relay.Constant][10] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %226 = @func_8552() /* ty=Tensor[(11, 3, 7), float32] */;
  %227 = @func_431(%212) /* ty=Tensor[(2, 4, 10), float64] */;
  %228 = %217.0;
  %229 = %224.2;
  %230 = acosh(%225) /* ty=Tensor[(110), float32] */;
  (%226, %227, %var_11508, %228, %var_11513, %var_11514, %229, %var_11520, %var_11521, %230)
}

def @func_418(%var_417: uint64) -> (Tensor[(15, 5, 4), uint64],) {
  %234 = fn (%var_408: uint64) -> (Tensor[(15, 5, 4), uint64],) {
    %231 = cast(%var_408, dtype="uint64") /* ty=uint64 */;
    %232 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 5, 4), uint64] */, dtype="uint64") /* ty=Tensor[(15, 5, 4), uint64] */;
    %233 = minimum(%231, %232) /* ty=Tensor[(15, 5, 4), uint64] */;
    (%233,)
  };
  %234(%var_417) /* ty=(Tensor[(15, 5, 4), uint64],) */
}

def @func_12116() -> (Tensor[(11, 3, 7), float64],) {
  %235 = @func_8506() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) */;
  %236 = %235.1;
  (%236,)
}

def @func_11227() -> (Tensor[(11, 3, 7), float32], Tensor[(6, 14, 6), bool], Tensor[(36, 14), uint64]) {
  %237 = cast(meta[relay.Constant][12] /* ty=Tensor[(36, 14), uint64] */, dtype="uint64") /* ty=Tensor[(36, 14), uint64] */;
  %238 = cast(meta[relay.Constant][12] /* ty=Tensor[(36, 14), uint64] */, dtype="uint64") /* ty=Tensor[(36, 14), uint64] */;
  %239 = reshape(%237, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), uint64] */;
  %240 = reshape(%238, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), uint64] */;
  %241 = @func_9009(%239, %240) /* ty=(Tensor[(6, 14, 6), bool], Tensor[(11, 3, 7), float64], Tensor[(6, 14, 6), float64]) */;
  %242 = @func_10787() /* ty=Tensor[(11, 3, 7), float32] */;
  %243 = %241.0;
  (%242, %243, meta[relay.Constant][12] /* ty=Tensor[(36, 14), uint64] */)
}

def @func_8214() -> (Tensor[(11, 3, 7), float32],) {
  @func_8212() /* ty=(Tensor[(11, 3, 7), float32],) */
}

def @func_433(%var_432: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
  %245 = fn (%var_427: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
    %244 = cast(%var_427, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
    erf(%244) /* ty=Tensor[(2, 4, 10), float64] */
  };
  %245(%var_432) /* ty=Tensor[(2, 4, 10), float64] */
}

def @func_7287() -> Tensor[(11, 3, 7), float32] {
  %249 = fn () -> Tensor[(11, 3, 7), float32] {
    %246 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
    %247 = %246.0;
    %248 = cast(%247, dtype="float32") /* ty=Tensor[(11, 3, 7), float32] */;
    log10(%248) /* ty=Tensor[(11, 3, 7), float32] */
  };
  %249() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_9041() -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32]) {
  @func_9039() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32]) */
}

def @func_9926(%var_9924: Tensor[(13, 26), float32], %var_9925: Tensor[(147), float64]) -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 26), float32], Tensor[(11, 3, 7), float64], Tensor[(21), float64], Tensor[(147), float64]) {
  @func_9922(%var_9924, %var_9925) /* ty=(Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 26), float32], Tensor[(11, 3, 7), float64], Tensor[(21), float64], Tensor[(147), float64]) */
}

def @func_5119(%var_5117: Tensor[(10, 1, 11), float32], %var_5118: uint64) -> (Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) {
  %261 = fn (%var_5100: Tensor[(10, 1, 11), float32], %var_5107: uint64) -> (Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) {
    %250 = cast(%var_5100, dtype="float32") /* ty=Tensor[(10, 1, 11), float32] */;
    %251 = sigmoid(%250) /* ty=Tensor[(10, 1, 11), float32] */;
    %252 = cast(%var_5100, dtype="bool") /* ty=Tensor[(10, 1, 11), bool] */;
    %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %254 = cast(%251, dtype="bool") /* ty=Tensor[(10, 1, 11), bool] */;
    %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %256 = cast(%var_5107, dtype="uint64") /* ty=uint64 */;
    %257 = reshape(%256, newshape=[]) /* ty=uint64 */;
    %258 = @func_416(%257) /* ty=(Tensor[(15, 5, 4), uint64],) */;
    %259 = greater_equal(%254, %255) /* ty=Tensor[(10, ?, 11), bool] */;
    %260 = %258.0;
    (%259, %260, %var_5107)
  };
  %261(%var_5117, %var_5118) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) */
}

def @func_13159() -> (Tensor[(10, ?, 11), bool], Tensor[(11, 3, 7), float64]) {
  %265 = fn () -> (Tensor[(10, ?, 11), bool], Tensor[(11, 3, 7), float64]) {
    %262 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
    %263 = %262.0;
    %264 = @func_8339() /* ty=Tensor[(11, 3, 7), float64] */;
    (%263, %264)
  };
  %265() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(11, 3, 7), float64]) */
}

def @func_9410() -> (Tensor[(11, 3, 7), float64], Tensor[(100), float64]) {
  %270 = fn () -> (Tensor[(11, 3, 7), float64], Tensor[(100), float64]) {
    %266 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
    %267 = @func_9138() /* ty=(Tensor[(100), float64],) */;
    %268 = %266.0;
    %269 = %267.0;
    (%268, %269)
  };
  %270() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(100), float64]) */
}

def @func_10827() -> (Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) {
  @func_10825() /* ty=(Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) */
}

def @func_7084() -> (Tensor[(11, 3, 7), float64],) {
  %271 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  %272 = tan(%271) /* ty=Tensor[(11, 3, 7), float64] */;
  (%272,)
}

def @func_11889(%var_11841: Tensor[(10, 9, 2), float32], %var_11844: Tensor[(10, 9, 2), float32]) -> Tensor[(10, 9, 2), uint16] {
  %273 = cast(%var_11841, dtype="float32") /* ty=Tensor[(10, 9, 2), float32] */;
  %274 = sigmoid(%273) /* ty=Tensor[(10, 9, 2), float32] */;
  %275 = cast(%var_11844, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %276 = shape_of(%var_11841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_11841, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %279 = left_shift(%277, %278) /* ty=Tensor[(10, 9, 2), uint16] */;
  %280 = cast(%279, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %281 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%274, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_xor(%282, %283) /* ty=Tensor[(10, 9, 2), uint16] */
}

def @func_8197() -> Tensor[(11, 3, 7), float64] {
  %284 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %284.0
}

def @func_7655(%var_7654: Tensor[(21), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(21), float64], Tensor[(100), float32], Tensor[(390), bool], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) {
  %301 = fn (%var_7646: Tensor[(21), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(21), float64], Tensor[(100), float32], Tensor[(390), bool], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) {
    %285 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
    %286 = %285.0;
    %287 = cast(%286, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
    %288 = cast(%var_7646, dtype="float64") /* ty=Tensor[(21), float64] */;
    %289 = cast(meta[relay.Constant][14] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %290 = cast(meta[relay.Constant][15] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
    %291 = reshape(%288, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %292 = reshape(%289, newshape=[100]) /* ty=Tensor[(100), float32] */;
    %293 = reshape(%290, newshape=[390]) /* ty=Tensor[(390), bool] */;
    %294 = @func_7227(%291, %292, %293) /* ty=(uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) */;
    %295 = cast(meta[relay.Constant][16] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
    %296 = reshape(%295, newshape=[338]) /* ty=Tensor[(338), float32] */;
    %297 = @func_7397(%296) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */;
    %298 = cos(%287) /* ty=Tensor[(11, 3, 7), float64] */;
    %299 = %294.11;
    %300 = %297.1;
    (%298, %299, %var_7646, meta[relay.Constant][14] /* ty=Tensor[(100), float32] */, meta[relay.Constant][15] /* ty=Tensor[(390), bool] */, %300, meta[relay.Constant][16] /* ty=Tensor[(338), float32] */)
  };
  %301(%var_7654) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(21), float64], Tensor[(100), float32], Tensor[(390), bool], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */
}

def @func_11478(%var_11448: Tensor[(8, 7, 12), uint8]) -> (Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) {
  %302 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 7, 12), uint8] */, dtype="uint8") /* ty=Tensor[(8, 7, 12), uint8] */;
  %303 = shape_of(%var_11448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_11448, dtype="uint8") /* ty=Tensor[(8, 7, 12), uint8] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %306 = @func_11126() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %307 = bitwise_xor(%304, %305) /* ty=Tensor[(8, 7, 12), uint8] */;
  %308 = %306.0;
  %309 = @func_10980() /* ty=Tensor[(11, 3, 7), float64] */;
  (%307, %308, %309)
}

def @func_8124() -> Tensor[(11, 3, 7), float32] {
  %310 = fn () -> Tensor[(11, 3, 7), float32] {
    @func_7286() /* ty=Tensor[(11, 3, 7), float32] */
  };
  %310() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_9536() -> (Tensor[(11, 3, 7), float32],) {
  @func_9534() /* ty=(Tensor[(11, 3, 7), float32],) */
}

def @func_12541() -> Tensor[(11, 3, 7), float64] {
  @func_11601() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_12543() -> Tensor[(11, 3, 7), float64] {
  @func_12541() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_9199() -> (Tensor[(100), float64],) {
  @func_9197() /* ty=(Tensor[(100), float64],) */
}

def @func_8339() -> Tensor[(11, 3, 7), float64] {
  %311 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %311.0
}

def @func_12579(%var_12577: bool, %var_12578: Tensor[(1, 8), bool]) -> (Tensor[(1, 15), bool], Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], bool, Tensor[(1, 8), bool]) {
  @func_12575(%var_12577, %var_12578) /* ty=(Tensor[(1, 15), bool], Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], bool, Tensor[(1, 8), bool]) */
}

def @func_8884() -> (Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) {
  @func_8882() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) */
}

def @func_11083(%var_11082: Tensor[(13, 13, 2), float32]) -> (Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool], Tensor[(13, 13, 2), uint32], Tensor[(13, 13, 2), float32]) {
  %327 = fn (%var_11055: Tensor[(13, 13, 2), float32]) -> (Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool], Tensor[(13, 13, 2), uint32], Tensor[(13, 13, 2), float32]) {
    %312 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %313 = cast(meta[relay.Constant][18] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
    %314 = reshape(%312, newshape=[]) /* ty=bool */;
    %315 = reshape(%313, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
    %316 = @func_4348(%314, %315) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
    %317 = @func_8882() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) */;
    %318 = %317.1;
    %319 = cast(%var_11055, dtype="uint32") /* ty=Tensor[(13, 13, 2), uint32] */;
    %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
    %321 = cast(%318, dtype="uint32") /* ty=Tensor[(13, 13, 2), uint32] */;
    %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %323 = cast(%318, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
    %324 = %316.0;
    %325 = bitwise_or(%321, %322) /* ty=Tensor[(13, 13, 2), uint32] */;
    %326 = log2(%323) /* ty=Tensor[(13, 13, 2), float32] */;
    (%324, True /* ty=bool */, meta[relay.Constant][18] /* ty=Tensor[(8), bool] */, %325, %326)
  };
  %327(%var_11082) /* ty=(Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool], Tensor[(13, 13, 2), uint32], Tensor[(13, 13, 2), float32]) */
}

def @func_12911() -> Tensor[(10, ?, 11), bool] {
  @func_9451() /* ty=Tensor[(10, ?, 11), bool] */
}

def @func_4272(%var_4270: Tensor[(2, 1, 4), float64], %var_4271: Tensor[(2, 4, 4), float64]) -> (Tensor[(2, 4, 4), float64],) {
  %331 = fn (%var_4257: Tensor[(2, 1, 4), float64], %var_4258: Tensor[(2, 4, 4), float64]) -> (Tensor[(2, 4, 4), float64],) {
    %328 = cast(%var_4257, dtype="float64") /* ty=Tensor[(2, 1, 4), float64] */;
    %329 = cast(%var_4258, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
    %330 = add(%328, %329) /* ty=Tensor[(2, 4, 4), float64] */;
    (%330,)
  };
  %331(%var_4270, %var_4271) /* ty=(Tensor[(2, 4, 4), float64],) */
}

def @func_9386(%var_9384: Tensor[(5, 3, 13), float64]) -> Tensor[(5, 3, 13), float64] {
  @func_9383(%var_9384) /* ty=Tensor[(5, 3, 13), float64] */
}

def @func_7397(%var_7390: Tensor[(338), float32]) -> (Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) {
  %332 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %333 = cast(%var_7390, dtype="float32") /* ty=Tensor[(338), float32] */;
  %334 = reshape(%333, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), float32] */;
  %335 = %332.0;
  %336 = @func_6008(%334) /* ty=Tensor[(13, 13, 2), float32] */;
  (%335, %336, %var_7390)
}

def @func_6908(%var_6905: Tensor[(1, 5, 7), int64], %var_6906: Tensor[(147), float64], %var_6907: Tensor[(110), float32]) -> (Tensor[(1, 5, 7), int64], uint64, Tensor[(147), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32]) {
  @func_6903(%var_6905, %var_6906, %var_6907) /* ty=(Tensor[(1, 5, 7), int64], uint64, Tensor[(147), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32]) */
}

def @func_9197() -> (Tensor[(100), float64],) {
  %337 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
  %338 = %337.1;
  %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(100), float32] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(1), int32] */;
  %341 = cast(%338, dtype="float64") /* ty=Tensor[(100), float64] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?), float64] */;
  %343 = floor_divide(%341, %342) /* ty=Tensor[(100), float64] */;
  (%343,)
}

def @func_7400(%var_7398: Tensor[(338), float32]) -> (Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) {
  @func_7397(%var_7398) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */
}

def @func_9138() -> (Tensor[(100), float64],) {
  %344 = @func_8600() /* ty=Tensor[(100), float64] */;
  (%344,)
}

def @func_9648() -> (Tensor[(11, 3, 7), float32],) {
  %347 = fn () -> (Tensor[(11, 3, 7), float32],) {
    %345 = @func_9039() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32]) */;
    %346 = %345.1;
    (%346,)
  };
  %347() /* ty=(Tensor[(11, 3, 7), float32],) */
}

def @func_11127() -> (Tensor[(11, 3, 7), float32],) {
  %350 = fn () -> (Tensor[(11, 3, 7), float32],) {
    %348 = @func_8882() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) */;
    %349 = %348.0;
    (%349,)
  };
  %350() /* ty=(Tensor[(11, 3, 7), float32],) */
}

def @func_8212() -> (Tensor[(11, 3, 7), float32],) {
  %351 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %352 = %351.0;
  (%352,)
}

def @func_4348(%var_4341: bool, %var_4342: Tensor[(2, 2, 2), bool]) -> (Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) {
  %353 = cast(%var_4341, dtype="bool") /* ty=bool */;
  %354 = cast(%var_4342, dtype="bool") /* ty=Tensor[(2, 2, 2), bool] */;
  %355 = cast(%var_4341, dtype="uint64") /* ty=uint64 */;
  %356 = reshape(%355, newshape=[]) /* ty=uint64 */;
  %357 = @func_416(%356) /* ty=(Tensor[(15, 5, 4), uint64],) */;
  %358 = logical_or(%353, %354) /* ty=Tensor[(2, 2, 2), bool] */;
  %359 = %357.0;
  (%358, %359)
}

def @func_7797() -> (Tensor[(11, 3, 7), float32], Tensor[(100), float32]) {
  %363 = fn () -> (Tensor[(11, 3, 7), float32], Tensor[(100), float32]) {
    %360 = @func_7739() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) */;
    %361 = @func_7286() /* ty=Tensor[(11, 3, 7), float32] */;
    %362 = %360.5;
    (%361, %362)
  };
  %363() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */
}

def @func_9477() -> (Tensor[(13, 9, 7), float32],) {
  @func_9475() /* ty=(Tensor[(13, 9, 7), float32],) */
}

def @func_9346(%var_9344: uint64, %var_9345: Tensor[(3, 3, 11), float64]) -> (Tensor[(11, 3, 7), float64], uint64, Tensor[(147), float64], Tensor[(3, 3, 11), bool], Tensor[(15, 5, 4), uint64], Tensor[(11, 3, 7), float64]) {
  %383 = fn (%var_9288: uint64, %var_9304: Tensor[(3, 3, 11), float64]) -> (Tensor[(11, 3, 7), float64], uint64, Tensor[(147), float64], Tensor[(3, 3, 11), bool], Tensor[(15, 5, 4), uint64], Tensor[(11, 3, 7), float64]) {
    %364 = cast(%var_9288, dtype="uint64") /* ty=uint64 */;
    %365 = cast(meta[relay.Constant][20] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
    %366 = reshape(%364, newshape=[]) /* ty=uint64 */;
    %367 = reshape(%365, newshape=[147]) /* ty=Tensor[(147), float64] */;
    %368 = @func_4654(%366, %367) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
    %369 = %368.3;
    %370 = cast(%var_9304, dtype="bool") /* ty=Tensor[(3, 3, 11), bool] */;
    %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %372 = cast(%369, dtype="bool") /* ty=Tensor[(3, 3, 11), bool] */;
    %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %374 = cast(%var_9288, dtype="uint64") /* ty=uint64 */;
    %375 = cast(meta[relay.Constant][20] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
    %376 = reshape(%374, newshape=[]) /* ty=uint64 */;
    %377 = reshape(%375, newshape=[147]) /* ty=Tensor[(147), float64] */;
    %378 = @func_4654(%376, %377) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
    %379 = @func_8197() /* ty=Tensor[(11, 3, 7), float64] */;
    %380 = less_equal(%372, %373) /* ty=Tensor[(3, 3, 11), bool] */;
    %381 = %378.4;
    %382 = @func_8339() /* ty=Tensor[(11, 3, 7), float64] */;
    (%379, %var_9288, meta[relay.Constant][20] /* ty=Tensor[(147), float64] */, %380, %381, %382)
  };
  %383(%var_9344, %var_9345) /* ty=(Tensor[(11, 3, 7), float64], uint64, Tensor[(147), float64], Tensor[(3, 3, 11), bool], Tensor[(15, 5, 4), uint64], Tensor[(11, 3, 7), float64]) */
}

def @func_4352(%var_4350: bool, %var_4351: Tensor[(2, 2, 2), bool]) -> (Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) {
  @func_4348(%var_4350, %var_4351) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */
}

def @func_10389(%var_10361: Tensor[(21), float64], %var_10362: Tensor[(147), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32], Tensor[(210), float32], Tensor[(21), float64], Tensor[(147), float64], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64]) {
  %384 = @func_9849() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %385 = @func_9647() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %386 = cast(%var_10361, dtype="float64") /* ty=Tensor[(21), float64] */;
  %387 = cast(%var_10362, dtype="float64") /* ty=Tensor[(147), float64] */;
  %388 = cast(meta[relay.Constant][21] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %389 = reshape(%386, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %390 = reshape(%387, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %391 = reshape(%388, newshape=[]) /* ty=uint64 */;
  %392 = @func_1564(%389, %390, %391) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %393 = cast(meta[relay.Constant][21] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %394 = cast(meta[relay.Constant][22] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
  %395 = reshape(%393, newshape=[]) /* ty=bool */;
  %396 = reshape(%394, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %397 = @func_4348(%395, %396) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %398 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %399 = %384.0;
  %400 = %385.0;
  %401 = %392.4;
  %402 = %397.1;
  %403 = %398.0;
  (%399, %400, %401, %var_10361, %var_10362, meta[relay.Constant][21] /* ty=uint64 */, %402, meta[relay.Constant][22] /* ty=Tensor[(8), bool] */, %403)
}

def @func_10825() -> (Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) {
  %404 = cast(meta[relay.Constant][23] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %405 = reshape(%404, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float32] */;
  %406 = @func_2918(%405) /* ty=(Tensor[(1, 8, 1), float64],) */;
  %407 = @func_8600() /* ty=Tensor[(100), float64] */;
  %408 = %406.0;
  (%407, %408, meta[relay.Constant][23] /* ty=Tensor[(8), float32] */)
}

def @func_4113(%var_4111: int64) -> Tensor[(13, 9, 7), bool] {
  @func_4110(%var_4111) /* ty=Tensor[(13, 9, 7), bool] */
}

def @func_8102() -> (Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) {
  @func_8100() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) */
}

def @func_9850() -> (Tensor[(11, 3, 7), float32],) {
  %411 = fn () -> (Tensor[(11, 3, 7), float32],) {
    %409 = @func_8212() /* ty=(Tensor[(11, 3, 7), float32],) */;
    %410 = %409.0;
    (%410,)
  };
  %411() /* ty=(Tensor[(11, 3, 7), float32],) */
}

def @func_10393(%var_10391: Tensor[(21), float64], %var_10392: Tensor[(147), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32], Tensor[(210), float32], Tensor[(21), float64], Tensor[(147), float64], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64]) {
  @func_10389(%var_10391, %var_10392) /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32], Tensor[(210), float32], Tensor[(21), float64], Tensor[(147), float64], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64]) */
}

def @func_4658(%var_4656: uint64, %var_4657: Tensor[(147), float64]) -> (Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) {
  @func_4654(%var_4656, %var_4657) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */
}

def @func_9809(%var_9734: Tensor[(9, 13, 14), int8], %var_9735: Tensor[(9, 13, 14), int8], %var_9757: Tensor[(100), float32], %var_9762: Tensor[(21), float64]) -> (Tensor[(9, 13, 14), int8], Tensor[(7, 7, 3), bool], Tensor[(100), float32], Tensor[(390), bool], Tensor[(21), uint8], Tensor[(210), float32], uint64) {
  %412 = cast(%var_9735, dtype="int8") /* ty=Tensor[(9, 13, 14), int8] */;
  %413 = shape_of(%var_9734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_9734, dtype="int8") /* ty=Tensor[(9, 13, 14), int8] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %416 = cast(meta[relay.Constant][24] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %417 = cast(%var_9757, dtype="float32") /* ty=Tensor[(100), float32] */;
  %418 = cast(meta[relay.Constant][25] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %419 = reshape(%416, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %420 = reshape(%417, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %421 = reshape(%418, newshape=[390]) /* ty=Tensor[(390), bool] */;
  %422 = @func_7227(%419, %420, %421) /* ty=(uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) */;
  %423 = cast(%var_9762, dtype="uint8") /* ty=Tensor[(21), uint8] */;
  %424 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(21), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %425 = cast(meta[relay.Constant][24] /* ty=Tensor[(21), float64] */, dtype="uint8") /* ty=Tensor[(21), uint8] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %427 = minimum(%425, %426) /* ty=Tensor[(21), uint8] */;
  %428 = cast(%427, dtype="float64") /* ty=Tensor[(21), float64] */;
  %429 = %422.6;
  %430 = cast(%429, dtype="float64") /* ty=Tensor[(7, 7, 3), float64] */;
  %431 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %432 = reshape(%428, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %433 = reshape(%430, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %434 = reshape(%431, newshape=[]) /* ty=uint64 */;
  %435 = @func_1564(%432, %433, %434) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %436 = right_shift(%414, %415) /* ty=Tensor[(9, 13, 14), int8] */;
  %437 = %435.4;
  (%436, %429, %var_9757, meta[relay.Constant][25] /* ty=Tensor[(390), bool] */, %427, %437, meta[relay.Constant][26] /* ty=uint64 */)
}

def @func_9815(%var_9811: Tensor[(9, 13, 14), int8], %var_9812: Tensor[(9, 13, 14), int8], %var_9813: Tensor[(100), float32], %var_9814: Tensor[(21), float64]) -> (Tensor[(9, 13, 14), int8], Tensor[(7, 7, 3), bool], Tensor[(100), float32], Tensor[(390), bool], Tensor[(21), uint8], Tensor[(210), float32], uint64) {
  @func_9809(%var_9811, %var_9812, %var_9813, %var_9814) /* ty=(Tensor[(9, 13, 14), int8], Tensor[(7, 7, 3), bool], Tensor[(100), float32], Tensor[(390), bool], Tensor[(21), uint8], Tensor[(210), float32], uint64) */
}

def @func_10473(%var_10445: Tensor[(11, 3, 7), float64], %var_10465: Tensor[(330), float32]) -> (Tensor[(1, 15), bool], Tensor[(11, 3, 7), bool], Tensor[(13, 4, 3), bool], Tensor[(156), int16], Tensor[(330), float32]) {
  %438 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %439 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %440 = %439.1;
  %441 = cast(%var_10445, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = cast(meta[relay.Constant][27] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %446 = cast(meta[relay.Constant][27] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %447 = cast(%var_10465, dtype="float32") /* ty=Tensor[(330), float32] */;
  %448 = reshape(%445, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int16] */;
  %449 = reshape(%446, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int16] */;
  %450 = reshape(%447, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %451 = @func_6318(%448, %449, %450) /* ty=(Tensor[(13, 4, 3), bool], Tensor[(3, 11, 10), float32], Tensor[(330), float32]) */;
  %452 = %438.0;
  %453 = equal(%443, %444) /* ty=Tensor[(11, 3, 7), bool] */;
  %454 = %451.0;
  (%452, %453, %454, meta[relay.Constant][27] /* ty=Tensor[(156), int16] */, %var_10465)
}

def @func_9973() -> (Tensor[(11, 3, 7), float32],) {
  %457 = fn () -> (Tensor[(11, 3, 7), float32],) {
    %455 = @func_9647() /* ty=(Tensor[(11, 3, 7), float32],) */;
    %456 = %455.0;
    (%456,)
  };
  %457() /* ty=(Tensor[(11, 3, 7), float32],) */
}

def @func_8552() -> Tensor[(11, 3, 7), float32] {
  @func_8123() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_12000() -> (Tensor[(15, 15, 10), float64], Tensor[(3, 3, 11), float64], uint64, Tensor[(147, 1), float64]) {
  %458 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
  %459 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %460 = cast(meta[relay.Constant][30] /* ty=Tensor[(147, 1), float64] */, dtype="float64") /* ty=Tensor[(147, 1), float64] */;
  %461 = reshape(%459, newshape=[]) /* ty=uint64 */;
  %462 = reshape(%460, newshape=[147]) /* ty=Tensor[(147), float64] */;
  %463 = @func_4654(%461, %462) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
  %464 = sin(%458) /* ty=Tensor[(15, 15, 10), float64] */;
  %465 = %463.3;
  (%464, %465, meta[relay.Constant][29] /* ty=uint64 */, meta[relay.Constant][30] /* ty=Tensor[(147, 1), float64] */)
}

def @func_9953() -> Tensor[(11, 3, 7), float64] {
  %466 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
  %466.0
}

def @func_8641(%var_8640: Tensor[(99, 1), float64]) -> (Tensor[(100), float32], Tensor[(11, 5, 10), uint64], Tensor[(99, 1), float64]) {
  %475 = fn (%var_8636: Tensor[(99, 1), float64]) -> (Tensor[(100), float32], Tensor[(11, 5, 10), uint64], Tensor[(99, 1), float64]) {
    %467 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
    %468 = %467.1;
    %469 = cast(%468, dtype="float32") /* ty=Tensor[(100), float32] */;
    %470 = cast(%var_8636, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
    %471 = reshape(%470, newshape=[1, 99]) /* ty=Tensor[(1, 99), float64] */;
    %472 = @func_7363(%471) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(1, 99), float64], Tensor[(11, 5, 10), uint64]) */;
    %473 = sqrt(%469) /* ty=Tensor[(100), float32] */;
    %474 = %472.2;
    (%473, %474, %var_8636)
  };
  %475(%var_8640) /* ty=(Tensor[(100), float32], Tensor[(11, 5, 10), uint64], Tensor[(99, 1), float64]) */
}

def @func_7818() -> (Tensor[(11, 3, 7), float32],) {
  %478 = fn () -> (Tensor[(11, 3, 7), float32],) {
    %476 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
    %477 = %476.0;
    (%477,)
  };
  %478() /* ty=(Tensor[(11, 3, 7), float32],) */
}

def @func_7125() -> Tensor[(11, 3, 7), float64] {
  @func_7123() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_10045() -> (Tensor[(10, ?, 11), bool],) {
  %480 = fn () -> (Tensor[(10, ?, 11), bool],) {
    %479 = @func_9451() /* ty=Tensor[(10, ?, 11), bool] */;
    (%479,)
  };
  %480() /* ty=(Tensor[(10, ?, 11), bool],) */
}

def @func_5315(%var_5314: Tensor[(10, 15, 11), float32]) -> (Tensor[(10, 15, 11), float32],) {
  %483 = fn (%var_5305: Tensor[(10, 15, 11), float32]) -> (Tensor[(10, 15, 11), float32],) {
    %481 = cast(%var_5305, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
    %482 = asin(%481) /* ty=Tensor[(10, 15, 11), float32] */;
    (%482,)
  };
  %483(%var_5314) /* ty=(Tensor[(10, 15, 11), float32],) */
}

def @func_1397(%var_1395: Tensor[(3, 5, 14), float32], %var_1396: uint64) -> (Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) {
  %490 = fn (%var_1361: Tensor[(3, 5, 14), float32], %var_1381: uint64) -> (Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) {
    %484 = cast(%var_1361, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
    %485 = cast(%var_1381, dtype="uint64") /* ty=uint64 */;
    %486 = reshape(%485, newshape=[]) /* ty=uint64 */;
    %487 = @func_416(%486) /* ty=(Tensor[(15, 5, 4), uint64],) */;
    %488 = sqrt(%484) /* ty=Tensor[(3, 5, 14), float32] */;
    %489 = %487.0;
    (%488, %489, %var_1381)
  };
  %490(%var_1395, %var_1396) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */
}

def @func_9383(%var_9369: Tensor[(5, 3, 13), float64]) -> Tensor[(5, 3, 13), float64] {
  %491 = cast(%var_9369, dtype="float64") /* ty=Tensor[(5, 3, 13), float64] */;
  %492 = atan(%491) /* ty=Tensor[(5, 3, 13), float64] */;
  %493 = cast(%492, dtype="float64") /* ty=Tensor[(5, 3, 13), float64] */;
  acosh(%493) /* ty=Tensor[(5, 3, 13), float64] */
}

def @func_7365(%var_7364: Tensor[(1, 99), float64]) -> (Tensor[(3, 3, 11), float64], Tensor[(1, 99), float64], Tensor[(11, 5, 10), uint64]) {
  %505 = fn (%var_7338: Tensor[(1, 99), float64]) -> (Tensor[(3, 3, 11), float64], Tensor[(1, 99), float64], Tensor[(11, 5, 10), uint64]) {
    %494 = cast(%var_7338, dtype="float64") /* ty=Tensor[(1, 99), float64] */;
    %495 = reshape(%494, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
    %496 = @func_329(%495) /* ty=(Tensor[(3, 3, 11), float64],) */;
    %497 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 5, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 10), float32] */;
    %498 = atanh(%497) /* ty=Tensor[(11, 5, 10), float32] */;
    %499 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 5, 10), float32] */, dtype="uint64") /* ty=Tensor[(11, 5, 10), uint64] */;
    %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
    %501 = cast(%498, dtype="uint64") /* ty=Tensor[(11, 5, 10), uint64] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %503 = %496.0;
    %504 = multiply(%501, %502) /* ty=Tensor[(11, 5, 10), uint64] */;
    (%503, %var_7338, %504)
  };
  %505(%var_7364) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(1, 99), float64], Tensor[(11, 5, 10), uint64]) */
}

def @func_8882() -> (Tensor[(11, 3, 7), float32], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(11, 3, 7), float32]) {
  %506 = @func_8212() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %507 = cast(meta[relay.Constant][32] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
  %508 = reshape(%507, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), float32] */;
  %509 = %506.0;
  %510 = @func_6008(%508) /* ty=Tensor[(13, 13, 2), float32] */;
  %511 = @func_8552() /* ty=Tensor[(11, 3, 7), float32] */;
  (%509, %510, meta[relay.Constant][32] /* ty=Tensor[(338), float32] */, %511)
}

def @func_3914(%var_3912: Tensor[(15, 15, 3), int8], %var_3913: Tensor[(15, 15, 3), int8]) -> Tensor[(15, 15, 3), int8] {
  %516 = fn (%var_3902: Tensor[(15, 15, 3), int8], %var_3903: Tensor[(15, 15, 3), int8]) -> Tensor[(15, 15, 3), int8] {
    %512 = cast(%var_3903, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
    %513 = shape_of(%var_3902, dtype="int32") /* ty=Tensor[(3), int32] */;
    %514 = cast(%var_3902, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
    %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    add(%514, %515) /* ty=Tensor[(15, 15, 3), int8] */
  };
  %516(%var_3912, %var_3913) /* ty=Tensor[(15, 15, 3), int8] */
}

def @func_799(%var_797: Tensor[(16, 12, 8), float64], %var_798: uint64) -> (Tensor[(15, 5, 4), uint64], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(16, 12, 8), uint16]) {
  @func_795(%var_797, %var_798) /* ty=(Tensor[(15, 5, 4), uint64], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(16, 12, 8), uint16]) */
}

def @func_8017() -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) {
  %521 = fn () -> (Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) {
    %517 = @func_7796() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(100), float32]) */;
    %518 = @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */;
    %519 = %517.0;
    %520 = %518.0;
    (%519, %520)
  };
  %521() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */
}

def @func_10658() -> (Tensor[(11, 3, 7), float32], Tensor[(1, 15), bool], Tensor[(1, 15), bool], Tensor[(100), float32], Tensor[(99), float64]) {
  %522 = @func_7817() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %523 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %524 = @func_10096() /* ty=(Tensor[(1, 15), bool],) */;
  %525 = cast(meta[relay.Constant][33] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %526 = reshape(%525, newshape=[99, 1]) /* ty=Tensor[(99, 1), float64] */;
  %527 = @func_8639(%526) /* ty=(Tensor[(100), float32], Tensor[(11, 5, 10), uint64], Tensor[(99, 1), float64]) */;
  %528 = %522.0;
  %529 = %523.0;
  %530 = %524.0;
  %531 = %527.0;
  (%528, %529, %530, %531, meta[relay.Constant][33] /* ty=Tensor[(99), float64] */)
}

def @func_10787() -> Tensor[(11, 3, 7), float32] {
  %532 = @func_9972() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %532.0
}

def @func_8756(%var_8753: Tensor[(147), float64], %var_8754: Tensor[(21), float64], %var_8755: Tensor[(672), uint16]) -> (Tensor[(100), float64], Tensor[(100), float64], Tensor[(3, 3, 11), float64], Tensor[(147), float32], Tensor[(13, 9, 7), float64], Tensor[(390), bool], Tensor[(21), float64], Tensor[(8, 7, 12), bool], Tensor[(84), uint16], Tensor[(672), uint16]) {
  %564 = fn (%var_8680: Tensor[(147), float64], %var_8727: Tensor[(21), float64], %var_8745: Tensor[(672), uint16]) -> (Tensor[(100), float64], Tensor[(100), float64], Tensor[(3, 3, 11), float64], Tensor[(147), float32], Tensor[(13, 9, 7), float64], Tensor[(390), bool], Tensor[(21), float64], Tensor[(8, 7, 12), bool], Tensor[(84), uint16], Tensor[(672), uint16]) {
    %533 = cast(meta[relay.Constant][34] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %534 = cast(%var_8680, dtype="float64") /* ty=Tensor[(147), float64] */;
    %535 = reshape(%533, newshape=[]) /* ty=uint64 */;
    %536 = reshape(%534, newshape=[147]) /* ty=Tensor[(147), float64] */;
    %537 = @func_4654(%535, %536) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(3, 3, 11), float64], Tensor[(15, 5, 4), uint64], Tensor[(1, 21), float64], Tensor[(147), float64]) */;
    %538 = cast(%var_8680, dtype="uint16") /* ty=Tensor[(147), uint16] */;
    %539 = cast(meta[relay.Constant][34] /* ty=uint64 */, dtype="uint16") /* ty=uint16 */;
    %540 = bitwise_or(%538, %539) /* ty=Tensor[(147), uint16] */;
    %541 = cast(%540, dtype="float32") /* ty=Tensor[(147), float32] */;
    %542 = shape_of(%var_8680, dtype="int32") /* ty=Tensor[(1), int32] */;
    %543 = cast(%var_8680, dtype="float32") /* ty=Tensor[(147), float32] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?), float32] */;
    %545 = cast(meta[relay.Constant][34] /* ty=uint64 */, dtype="int64") /* ty=int64 */;
    %546 = reshape(%545, newshape=[]) /* ty=int64 */;
    %547 = @func_4110(%546) /* ty=Tensor[(13, 9, 7), bool] */;
    %548 = cast(%547, dtype="float64") /* ty=Tensor[(13, 9, 7), float64] */;
    %549 = cast(%var_8727, dtype="float64") /* ty=Tensor[(21), float64] */;
    %550 = reshape(%549, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %551 = @func_7653(%550) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(21), float64], Tensor[(100), float32], Tensor[(390), bool], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */;
    %552 = cast(meta[relay.Constant][35] /* ty=Tensor[(84), uint16] */, dtype="uint16") /* ty=Tensor[(84), uint16] */;
    %553 = cast(%var_8745, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %554 = reshape(%552, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), uint16] */;
    %555 = reshape(%553, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint16] */;
    %556 = @func_4174(%554, %555) /* ty=(Tensor[(8, 7, 12), bool],) */;
    %557 = @func_8600() /* ty=Tensor[(100), float64] */;
    %558 = @func_8600() /* ty=Tensor[(100), float64] */;
    %559 = %537.3;
    %560 = multiply(%543, %544) /* ty=Tensor[(147), float32] */;
    %561 = rsqrt(%548) /* ty=Tensor[(13, 9, 7), float64] */;
    %562 = %551.4;
    %563 = %556.0;
    (%557, %558, %559, %560, %561, %562, %var_8727, %563, meta[relay.Constant][35] /* ty=Tensor[(84), uint16] */, %var_8745)
  };
  %564(%var_8753, %var_8754, %var_8755) /* ty=(Tensor[(100), float64], Tensor[(100), float64], Tensor[(3, 3, 11), float64], Tensor[(147), float32], Tensor[(13, 9, 7), float64], Tensor[(390), bool], Tensor[(21), float64], Tensor[(8, 7, 12), bool], Tensor[(84), uint16], Tensor[(672), uint16]) */
}

def @func_12335() -> (Tensor[(10, ?, 11), bool],) {
  %565 = @func_10044() /* ty=(Tensor[(10, ?, 11), bool],) */;
  %566 = %565.0;
  (%566,)
}

def @func_9452() -> Tensor[(10, ?, 11), bool] {
  %568 = fn () -> Tensor[(10, ?, 11), bool] {
    %567 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
    %567.0
  };
  %568() /* ty=Tensor[(10, ?, 11), bool] */
}

def @func_8983() -> (Tensor[(100), float32],) {
  %569 = @func_7739() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) */;
  %570 = %569.5;
  (%570,)
}

def @func_10096() -> (Tensor[(1, 15), bool],) {
  %571 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %572 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 15), bool] */, dtype="bool") /* ty=Tensor[(1, 15), bool] */;
  %573 = logical_or(%571, %572) /* ty=Tensor[(1, 15), bool] */;
  (%573,)
}

def @func_2425(%var_2406: Tensor[(3, 11, 10), float32]) -> Tensor[(3, 11, 10), float32] {
  %574 = cast(%var_2406, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
  asinh(%574) /* ty=Tensor[(3, 11, 10), float32] */
}

def @func_9922(%var_9889: Tensor[(13, 26), float32], %var_9904: Tensor[(147), float64]) -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 26), float32], Tensor[(11, 3, 7), float64], Tensor[(21), float64], Tensor[(147), float64]) {
  %575 = cast(%var_9889, dtype="float32") /* ty=Tensor[(13, 26), float32] */;
  %576 = reshape(%575, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %577 = @func_7397(%576) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32]) */;
  %578 = cast(meta[relay.Constant][37] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %579 = cast(%var_9904, dtype="float64") /* ty=Tensor[(147), float64] */;
  %580 = reshape(%578, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
  %581 = reshape(%579, newshape=[21, 7]) /* ty=Tensor[(21, 7), float64] */;
  %582 = @func_7414(%580, %581) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) */;
  %583 = @func_8600() /* ty=Tensor[(100), float64] */;
  %584 = %577.0;
  %585 = %582.0;
  (%583, %584, %var_9889, %585, meta[relay.Constant][37] /* ty=Tensor[(21), float64] */, %var_9904)
}

def @func_1968(%var_1966: Tensor[(99), float64], %var_1967: Tensor[(100), float32]) -> (Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) {
  %613 = fn (%var_1891: Tensor[(99), float64], %var_1929: Tensor[(100), float32]) -> (Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) {
    %586 = cast(%var_1891, dtype="float64") /* ty=Tensor[(99), float64] */;
    %587 = reshape(%586, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
    %588 = @func_329(%587) /* ty=(Tensor[(3, 3, 11), float64],) */;
    %589 = cast(meta[relay.Constant][38] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %590 = reshape(%589, newshape=[]) /* ty=uint64 */;
    %591 = @func_416(%590) /* ty=(Tensor[(15, 5, 4), uint64],) */;
    %592 = cast(%var_1929, dtype="float32") /* ty=Tensor[(100), float32] */;
    %593 = cast(%var_1929, dtype="float32") /* ty=Tensor[(100), float32] */;
    %594 = reshape(%592, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
    %595 = reshape(%593, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
    %596 = @func_1600(%594, %595) /* ty=(Tensor[(5, 2, 10), float32],) */;
    %597 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 2, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %598 = log10(%597) /* ty=Tensor[(15, 2, 7), float32] */;
    %599 = cast(%598, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
    %600 = asinh(%599) /* ty=Tensor[(15, 2, 7), float64] */;
    %601 = cast(%600, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
    %602 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%598, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %605 = %588.0;
    %606 = cast(%605, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
    %607 = reshape(%606, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
    %608 = @func_329(%607) /* ty=(Tensor[(3, 3, 11), float64],) */;
    %609 = %591.0;
    %610 = %596.0;
    %611 = logical_or(%603, %604) /* ty=Tensor[(15, 2, 7), bool] */;
    %612 = %608.0;
    (%605, %var_1891, %609, meta[relay.Constant][38] /* ty=uint64 */, %610, %var_1929, %611, %612)
  };
  %613(%var_1966, %var_1967) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], uint64, Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(15, 2, 7), bool], Tensor[(3, 3, 11), float64]) */
}

def @func_11725(%var_11722: Tensor[(21, 1), float64], %var_11723: Tensor[(7, 21), float64], %var_11724: Tensor[(33, 4), uint32]) -> (Tensor[(8), float32], Tensor[(3, 3, 11), float64], Tensor[(7, 21), float64], Tensor[(3, 4, 11), bool], Tensor[(33, 4), uint32], Tensor[(100), float32], Tensor[(15, 5, 4), uint64], Tensor[(21, ?), uint64], Tensor[(3, 3, 11), float64], Tensor[(21, ?), bool]) {
  %664 = fn (%var_11643: Tensor[(21, 1), float64], %var_11644: Tensor[(7, 21), float64], %var_11669: Tensor[(33, 4), uint32]) -> (Tensor[(8), float32], Tensor[(3, 3, 11), float64], Tensor[(7, 21), float64], Tensor[(3, 4, 11), bool], Tensor[(33, 4), uint32], Tensor[(100), float32], Tensor[(15, 5, 4), uint64], Tensor[(21, ?), uint64], Tensor[(3, 3, 11), float64], Tensor[(21, ?), bool]) {
    %614 = @func_10825() /* ty=(Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) */;
    %615 = cast(%var_11643, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
    %616 = cast(%var_11644, dtype="float64") /* ty=Tensor[(7, 21), float64] */;
    %617 = reshape(%615, newshape=[1, 21]) /* ty=Tensor[(1, 21), float64] */;
    %618 = reshape(%616, newshape=[21, 7]) /* ty=Tensor[(21, 7), float64] */;
    %619 = @func_7414(%617, %618) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) */;
    %620 = cast(%var_11669, dtype="uint32") /* ty=Tensor[(33, 4), uint32] */;
    %621 = cast(meta[relay.Constant][40] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %622 = reshape(%620, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), uint32] */;
    %623 = reshape(%621, newshape=[1, 100]) /* ty=Tensor[(1, 100), float32] */;
    %624 = @func_9616(%622, %623) /* ty=(Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) */;
    %625 = cast(%var_11643, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
    %626 = cast(%var_11644, dtype="float64") /* ty=Tensor[(7, 21), float64] */;
    %627 = reshape(%625, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %628 = reshape(%626, newshape=[147]) /* ty=Tensor[(147), float64] */;
    %629 = @func_10389(%627, %628) /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float32], Tensor[(210), float32], Tensor[(21), float64], Tensor[(147), float64], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64]) */;
    %630 = cast(%var_11643, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
    %631 = acos(%630) /* ty=Tensor[(21, 1), float32] */;
    %632 = cast(%631, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
    %633 = tan(%632) /* ty=Tensor[(21, 1), float32] */;
    %634 = cast(%633, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
    %635 = atan(%634) /* ty=Tensor[(21, 1), float64] */;
    %636 = cast(%631, dtype="uint64") /* ty=Tensor[(21, 1), uint64] */;
    %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(2), int32] */;
    %638 = cast(%635, dtype="uint64") /* ty=Tensor[(21, 1), uint64] */;
    %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %640 = %619.1;
    %641 = cast(%640, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
    %642 = reshape(%641, newshape=[3, 3, 11]) /* ty=Tensor[(3, 3, 11), float64] */;
    %643 = @func_329(%642) /* ty=(Tensor[(3, 3, 11), float64],) */;
    %644 = cast(%631, dtype="bool") /* ty=Tensor[(21, 1), bool] */;
    %645 = shape_of(%633, dtype="int32") /* ty=Tensor[(2), int32] */;
    %646 = cast(%633, dtype="bool") /* ty=Tensor[(21, 1), bool] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %648 = logical_or(%646, %647) /* ty=Tensor[(21, ?), bool] */;
    %649 = cast(%631, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
    %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(2), int32] */;
    %651 = cast(%648, dtype="float64") /* ty=Tensor[(21, ?), float64] */;
    %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %653 = floor_mod(%651, %652) /* ty=Tensor[(21, ?), float64] */;
    %654 = cast(%653, dtype="bool") /* ty=Tensor[(21, ?), bool] */;
    %655 = shape_of(%631, dtype="int32") /* ty=Tensor[(2), int32] */;
    %656 = cast(%631, dtype="bool") /* ty=Tensor[(21, 1), bool] */;
    %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %658 = %614.2;
    %659 = %624.0;
    %660 = %629.6;
    %661 = subtract(%638, %639) /* ty=Tensor[(21, ?), uint64] */;
    %662 = %643.0;
    %663 = not_equal(%656, %657) /* ty=Tensor[(21, ?), bool] */;
    (%658, %640, %var_11644, %659, %var_11669, meta[relay.Constant][40] /* ty=Tensor[(100), float32] */, %660, %661, %662, %663)
  };
  %664(%var_11722, %var_11723, %var_11724) /* ty=(Tensor[(8), float32], Tensor[(3, 3, 11), float64], Tensor[(7, 21), float64], Tensor[(3, 4, 11), bool], Tensor[(33, 4), uint32], Tensor[(100), float32], Tensor[(15, 5, 4), uint64], Tensor[(21, ?), uint64], Tensor[(3, 3, 11), float64], Tensor[(21, ?), bool]) */
}

def @func_2453(%var_2451: int64, %var_2452: Tensor[(8, 8, 3), int64]) -> (Tensor[(8, 8, 3), bool],) {
  %668 = fn (%var_2442: int64, %var_2443: Tensor[(8, 8, 3), int64]) -> (Tensor[(8, 8, 3), bool],) {
    %665 = cast(%var_2442, dtype="bool") /* ty=bool */;
    %666 = cast(%var_2443, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
    %667 = not_equal(%665, %666) /* ty=Tensor[(8, 8, 3), bool] */;
    (%667,)
  };
  %668(%var_2451, %var_2452) /* ty=(Tensor[(8, 8, 3), bool],) */
}

def @func_7231(%var_7228: Tensor[(21), float64], %var_7229: Tensor[(100), float32], %var_7230: Tensor[(390), bool]) -> (uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) {
  %708 = fn (%var_7174: Tensor[(21), float64], %var_7181: Tensor[(100), float32], %var_7218: Tensor[(390), bool]) -> (uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) {
    %669 = cast(meta[relay.Constant][41] /* ty=Tensor[(22, 5), float32] */, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
    %670 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %671 = reshape(%669, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float32] */;
    %672 = reshape(%670, newshape=[]) /* ty=uint64 */;
    %673 = @func_5116(%671, %672) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) */;
    %674 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %675 = cast(meta[relay.Constant][43] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
    %676 = reshape(%674, newshape=[]) /* ty=bool */;
    %677 = reshape(%675, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
    %678 = @func_4348(%676, %677) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
    %679 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
    %680 = cast(%var_7174, dtype="float64") /* ty=Tensor[(21), float64] */;
    %681 = cast(meta[relay.Constant][44] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
    %682 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %683 = reshape(%680, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
    %684 = reshape(%681, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
    %685 = reshape(%682, newshape=[]) /* ty=uint64 */;
    %686 = @func_1564(%683, %684, %685) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
    %687 = cast(%var_7181, dtype="float32") /* ty=Tensor[(100), float32] */;
    %688 = cast(%var_7181, dtype="float32") /* ty=Tensor[(100), float32] */;
    %689 = reshape(%687, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
    %690 = reshape(%688, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
    %691 = @func_1600(%689, %690) /* ty=(Tensor[(5, 2, 10), float32],) */;
    %692 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
    %693 = cast(%692, dtype="float32") /* ty=Tensor[(11, 3, 7), float32] */;
    %694 = acos(%693) /* ty=Tensor[(11, 3, 7), float32] */;
    %695 = cast(%694, dtype="float32") /* ty=Tensor[(11, 3, 7), float32] */;
    %696 = cast(%var_7218, dtype="bool") /* ty=Tensor[(390), bool] */;
    %697 = cast(%var_7218, dtype="bool") /* ty=Tensor[(390), bool] */;
    %698 = reshape(%696, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
    %699 = reshape(%697, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), bool] */;
    %700 = @func_5195(%698, %699) /* ty=(Tensor[(13, 6, 5), bool],) */;
    %701 = %673.2;
    %702 = %678.1;
    %703 = %679.0;
    %704 = %686.0;
    %705 = %691.0;
    %706 = sigmoid(%695) /* ty=Tensor[(11, 3, 7), float32] */;
    %707 = %700.0;
    (%701, meta[relay.Constant][41] /* ty=Tensor[(22, 5), float32] */, meta[relay.Constant][42] /* ty=uint64 */, %702, meta[relay.Constant][43] /* ty=Tensor[(8), bool] */, %703, %704, %var_7174, meta[relay.Constant][44] /* ty=Tensor[(147), float64] */, %705, %var_7181, %706, %707, %var_7218)
  };
  %708(%var_7228, %var_7229, %var_7230) /* ty=(uint64, Tensor[(22, 5), float32], uint64, Tensor[(15, 5, 4), uint64], Tensor[(8), bool], Tensor[(11, 3, 7), float64], Tensor[(7, 7, 3), bool], Tensor[(21), float64], Tensor[(147), float64], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(13, 6, 5), bool], Tensor[(390), bool]) */
}

def @func_11357(%var_11346: Tensor[(15, 13, 8), int64]) -> Tensor[(15, 13, 8), int64] {
  %709 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 13, 8), int64] */, dtype="int64") /* ty=Tensor[(15, 13, 8), int64] */;
  %710 = shape_of(%var_11346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_11346, dtype="int64") /* ty=Tensor[(15, 13, 8), int64] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%711, %712) /* ty=Tensor[(15, 13, 8), int64] */
}

def @func_7453() -> (Tensor[(11, 3, 7), float64],) {
  @func_7451() /* ty=(Tensor[(11, 3, 7), float64],) */
}

def @func_4110(%var_4094: int64) -> Tensor[(13, 9, 7), bool] {
  %713 = cast(%var_4094, dtype="bool") /* ty=bool */;
  %714 = cast(meta[relay.Constant][46] /* ty=Tensor[(13, 9, 7), int64] */, dtype="bool") /* ty=Tensor[(13, 9, 7), bool] */;
  less(%713, %714) /* ty=Tensor[(13, 9, 7), bool] */
}

def @func_7417(%var_7415: Tensor[(1, 21), float64], %var_7416: Tensor[(21, 7), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) {
  %724 = fn (%var_7409: Tensor[(1, 21), float64], %var_7410: Tensor[(21, 7), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) {
    %715 = cast(%var_7409, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %716 = cast(%var_7410, dtype="float64") /* ty=Tensor[(21, 7), float64] */;
    %717 = cast(meta[relay.Constant][47] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %718 = reshape(%715, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
    %719 = reshape(%716, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
    %720 = reshape(%717, newshape=[]) /* ty=uint64 */;
    %721 = @func_1564(%718, %719, %720) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
    %722 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
    %723 = %721.1;
    (%722, %723, %var_7409, %var_7410, meta[relay.Constant][47] /* ty=uint64 */)
  };
  %724(%var_7415, %var_7416) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64], Tensor[(1, 21), float64], Tensor[(21, 7), float64], uint64) */
}

def @func_12100() -> (Tensor[(11, 3, 7), float64],) {
  %726 = fn () -> (Tensor[(11, 3, 7), float64],) {
    %725 = @func_11601() /* ty=Tensor[(11, 3, 7), float64] */;
    (%725,)
  };
  %726() /* ty=(Tensor[(11, 3, 7), float64],) */
}

def @func_12337() -> (Tensor[(10, ?, 11), bool],) {
  @func_12335() /* ty=(Tensor[(10, ?, 11), bool],) */
}

def @func_331(%var_330: Tensor[(3, 3, 11), float64]) -> (Tensor[(3, 3, 11), float64],) {
  %729 = fn (%var_317: Tensor[(3, 3, 11), float64]) -> (Tensor[(3, 3, 11), float64],) {
    %727 = cast(%var_317, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
    %728 = rsqrt(%727) /* ty=Tensor[(3, 3, 11), float64] */;
    (%728,)
  };
  %729(%var_330) /* ty=(Tensor[(3, 3, 11), float64],) */
}

def @func_12884() -> (Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64]) {
  @func_12882() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64]) */
}

def @func_11601() -> Tensor[(11, 3, 7), float64] {
  @func_7123() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_11010(%var_11008: Tensor[(195), float64]) -> (Tensor[(10, ?, 11), bool], Tensor[(5, 3, 13), float64], Tensor[(195), float64]) {
  %730 = cast(%var_11008, dtype="float64") /* ty=Tensor[(195), float64] */;
  %731 = reshape(%730, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float64] */;
  %732 = @func_9451() /* ty=Tensor[(10, ?, 11), bool] */;
  %733 = @func_9383(%731) /* ty=Tensor[(5, 3, 13), float64] */;
  (%732, %733, %var_11008)
}

def @func_4616(%var_4614: Tensor[(1, 3, 14), float32]) -> Tensor[(1, 3, 14), float32] {
  @func_4613(%var_4614) /* ty=Tensor[(1, 3, 14), float32] */
}

def @func_5198(%var_5196: Tensor[(13, 6, 5), bool], %var_5197: Tensor[(13, 6, 5), bool]) -> (Tensor[(13, 6, 5), bool],) {
  %739 = fn (%var_5182: Tensor[(13, 6, 5), bool], %var_5183: Tensor[(13, 6, 5), bool]) -> (Tensor[(13, 6, 5), bool],) {
    %734 = cast(%var_5183, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
    %735 = shape_of(%var_5182, dtype="int32") /* ty=Tensor[(3), int32] */;
    %736 = cast(%var_5182, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
    %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %738 = logical_or(%736, %737) /* ty=Tensor[(13, 6, 5), bool] */;
    (%738,)
  };
  %739(%var_5196, %var_5197) /* ty=(Tensor[(13, 6, 5), bool],) */
}

def @func_4957(%var_4955: Tensor[(15, 9, 16), float32], %var_4956: Tensor[(15, 9, 16), float32]) -> Tensor[(15, 9, 16), float32] {
  %744 = fn (%var_4941: Tensor[(15, 9, 16), float32], %var_4942: Tensor[(15, 9, 16), float32]) -> Tensor[(15, 9, 16), float32] {
    %740 = cast(%var_4942, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
    %741 = shape_of(%var_4941, dtype="int32") /* ty=Tensor[(3), int32] */;
    %742 = cast(%var_4941, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
    %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%742, %743) /* ty=Tensor[(15, 9, 16), float32] */
  };
  %744(%var_4955, %var_4956) /* ty=Tensor[(15, 9, 16), float32] */
}

def @func_10126(%var_10125: Tensor[(100), float32]) -> (Tensor[(11, 3, 7), float64], Tensor[(1, 100), float32], Tensor[(132), uint32], Tensor[(100), float32]) {
  %753 = fn (%var_10120: Tensor[(100), float32]) -> (Tensor[(11, 3, 7), float64], Tensor[(1, 100), float32], Tensor[(132), uint32], Tensor[(100), float32]) {
    %745 = @func_8016() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
    %746 = cast(meta[relay.Constant][48] /* ty=Tensor[(132), uint32] */, dtype="uint32") /* ty=Tensor[(132), uint32] */;
    %747 = cast(%var_10120, dtype="float32") /* ty=Tensor[(100), float32] */;
    %748 = reshape(%746, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), uint32] */;
    %749 = reshape(%747, newshape=[1, 100]) /* ty=Tensor[(1, 100), float32] */;
    %750 = @func_9616(%748, %749) /* ty=(Tensor[(3, 4, 11), bool], Tensor[(1, 100), float32], Tensor[(3, 3, 11), uint32]) */;
    %751 = %745.1;
    %752 = %750.1;
    (%751, %752, meta[relay.Constant][48] /* ty=Tensor[(132), uint32] */, %var_10120)
  };
  %753(%var_10125) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(1, 100), float32], Tensor[(132), uint32], Tensor[(100), float32]) */
}

def @func_12118() -> (Tensor[(11, 3, 7), float64],) {
  @func_12116() /* ty=(Tensor[(11, 3, 7), float64],) */
}

def @func_12272() -> (Tensor[(100), float32],) {
  %756 = fn () -> (Tensor[(100), float32],) {
    %754 = @func_11971() /* ty=(Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(672), uint8]) */;
    %755 = %754.0;
    (%755,)
  };
  %756() /* ty=(Tensor[(100), float32],) */
}

def @func_12882() -> (Tensor[(11, 3, 7), float64], Tensor[(3, 3, 11), float64]) {
  %757 = @func_12000() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(3, 3, 11), float64], uint64, Tensor[(147, 1), float64]) */;
  %758 = @func_10980() /* ty=Tensor[(11, 3, 7), float64] */;
  %759 = %757.1;
  (%758, %759)
}

def @func_6318(%var_6306: Tensor[(13, 4, 3), int16], %var_6307: Tensor[(13, 4, 3), int16], %var_6315: Tensor[(330), float32]) -> (Tensor[(13, 4, 3), bool], Tensor[(3, 11, 10), float32], Tensor[(330), float32]) {
  %760 = cast(%var_6307, dtype="bool") /* ty=Tensor[(13, 4, 3), bool] */;
  %761 = shape_of(%var_6306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%var_6306, dtype="bool") /* ty=Tensor[(13, 4, 3), bool] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %764 = cast(%var_6315, dtype="float32") /* ty=Tensor[(330), float32] */;
  %765 = reshape(%764, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), float32] */;
  %766 = not_equal(%762, %763) /* ty=Tensor[(13, 4, 3), bool] */;
  %767 = @func_2425(%765) /* ty=Tensor[(3, 11, 10), float32] */;
  (%766, %767, %var_6315)
}

def @func_10263() -> (Tensor[(10, ?, 11), float64], Tensor[(11, 10, 1), bool], uint32) {
  @func_10261() /* ty=(Tensor[(10, ?, 11), float64], Tensor[(11, 10, 1), bool], uint32) */
}

def @func_8554() -> Tensor[(11, 3, 7), float32] {
  @func_8552() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_8507() -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) {
  %770 = fn () -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) {
    %768 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
    %769 = @func_8197() /* ty=Tensor[(11, 3, 7), float64] */;
    (%768, %769)
  };
  %770() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) */
}

def @func_11290(%var_11288: Tensor[(9, 7, 2), float32]) -> (Tensor[(9, 7, 2), float32], Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(20, 4), float64], Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool]) {
  @func_11287(%var_11288) /* ty=(Tensor[(9, 7, 2), float32], Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(20, 4), float64], Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool]) */
}

def @func_10261() -> (Tensor[(10, ?, 11), float64], Tensor[(11, 10, 1), bool], uint32) {
  %771 = @func_9451() /* ty=Tensor[(10, ?, 11), bool] */;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(10, ?, 11), float64] */;
  %773 = cast(meta[relay.Constant][49] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %774 = exp(%772) /* ty=Tensor[(10, ?, 11), float64] */;
  %775 = cast(%774, dtype="uint32") /* ty=Tensor[(10, ?, 11), uint32] */;
  %776 = reshape(%773, newshape=[]) /* ty=uint32 */;
  %777 = reshape(%775, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), uint32] */;
  %778 = @func_915(%776, %777) /* ty=(Tensor[(11, 10, 1), bool],) */;
  %779 = %778.0;
  (%774, %779, meta[relay.Constant][49] /* ty=uint32 */)
}

def @func_11420(%var_11393: Tensor[(21), float64]) -> (Tensor[(100), float32], Tensor[(100), float32], Tensor[(1638), int8], Tensor[(21), float64]) {
  %780 = @func_10825() /* ty=(Tensor[(100), float64], Tensor[(1, 8, 1), float64], Tensor[(8), float32]) */;
  %781 = %780.0;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(100), float32] */;
  %783 = cast(meta[relay.Constant][50] /* ty=Tensor[(1638), int8] */, dtype="int8") /* ty=Tensor[(1638), int8] */;
  %784 = cast(meta[relay.Constant][50] /* ty=Tensor[(1638), int8] */, dtype="int8") /* ty=Tensor[(1638), int8] */;
  %785 = cast(%781, dtype="float32") /* ty=Tensor[(100), float32] */;
  %786 = cast(%var_11393, dtype="float64") /* ty=Tensor[(21), float64] */;
  %787 = reshape(%783, newshape=[9, 13, 14]) /* ty=Tensor[(9, 13, 14), int8] */;
  %788 = reshape(%784, newshape=[9, 13, 14]) /* ty=Tensor[(9, 13, 14), int8] */;
  %789 = reshape(%785, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %790 = reshape(%786, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %791 = @func_9809(%787, %788, %789, %790) /* ty=(Tensor[(9, 13, 14), int8], Tensor[(7, 7, 3), bool], Tensor[(100), float32], Tensor[(390), bool], Tensor[(21), uint8], Tensor[(210), float32], uint64) */;
  %792 = log2(%782) /* ty=Tensor[(100), float32] */;
  %793 = %791.2;
  (%792, %793, meta[relay.Constant][50] /* ty=Tensor[(1638), int8] */, %var_11393)
}

def @func_10789() -> Tensor[(11, 3, 7), float32] {
  @func_10787() /* ty=Tensor[(11, 3, 7), float32] */
}

def @func_4178(%var_4176: Tensor[(1, 7, 12), uint16], %var_4177: Tensor[(8, 7, 12), uint16]) -> (Tensor[(8, 7, 12), bool],) {
  @func_4174(%var_4176, %var_4177) /* ty=(Tensor[(8, 7, 12), bool],) */
}

def @func_12811(%var_12799: Tensor[(15, 15, 1), float64], %var_12805: Tensor[(15, 15, 3), float64]) -> (Tensor[(15, 15, 1), float64], Tensor[(15, 15, 3), int64]) {
  %794 = cast(%var_12799, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
  %795 = cast(%var_12799, dtype="int64") /* ty=Tensor[(15, 15, 1), int64] */;
  %796 = cast(%var_12805, dtype="int64") /* ty=Tensor[(15, 15, 3), int64] */;
  %797 = exp(%794) /* ty=Tensor[(15, 15, 1), float64] */;
  %798 = bitwise_or(%795, %796) /* ty=Tensor[(15, 15, 3), int64] */;
  (%797, %798)
}

def @func_6011(%var_6009: Tensor[(13, 13, 2), float32]) -> Tensor[(13, 13, 2), float32] {
  @func_6008(%var_6009) /* ty=Tensor[(13, 13, 2), float32] */
}

def @func_11229() -> (Tensor[(11, 3, 7), float32], Tensor[(6, 14, 6), bool], Tensor[(36, 14), uint64]) {
  @func_11227() /* ty=(Tensor[(11, 3, 7), float32], Tensor[(6, 14, 6), bool], Tensor[(36, 14), uint64]) */
}

def @func_13037() -> Tensor[(338), float32] {
  %799 = @func_7739() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) */;
  %799.3
}

def @func_12815(%var_12813: Tensor[(15, 15, 1), float64], %var_12814: Tensor[(15, 15, 3), float64]) -> (Tensor[(15, 15, 1), float64], Tensor[(15, 15, 3), int64]) {
  @func_12811(%var_12813, %var_12814) /* ty=(Tensor[(15, 15, 1), float64], Tensor[(15, 15, 3), int64]) */
}

def @func_10942() -> Tensor[(11, 3, 7), float32] {
  @func_10940() /* ty=Tensor[(11, 3, 7), float32] */
}

def @main(%var_13197: Tensor[(16, 5, 8), float32]) -> (Tensor[(11, 3, 7), float32], Tensor[(1280), uint8], Tensor[(16, 5, 8), bool]) {
  %800 = cast(meta[relay.Constant][51] /* ty=Tensor[(1280), uint8] */, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %801 = cast(meta[relay.Constant][51] /* ty=Tensor[(1280), uint8] */, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %802 = cast(meta[relay.Constant][51] /* ty=Tensor[(1280), uint8] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %803 = reshape(%800, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), uint8] */;
  %804 = reshape(%801, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), uint8] */;
  %805 = reshape(%802, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %806 = @func_12254(%803, %804, %805) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(8, 10, 16), float64], Tensor[(8, 10, 16), uint64]) */;
  %807 = cast(%var_13197, dtype="float32") /* ty=Tensor[(16, 5, 8), float32] */;
  %808 = acosh(%807) /* ty=Tensor[(16, 5, 8), float32] */;
  %809 = cast(%808, dtype="float64") /* ty=Tensor[(16, 5, 8), float64] */;
  %810 = log10(%809) /* ty=Tensor[(16, 5, 8), float64] */;
  %811 = cast(%808, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %815 = %806.1;
  %816 = equal(%813, %814) /* ty=Tensor[(16, 5, 8), bool] */;
  (%815, meta[relay.Constant][51] /* ty=Tensor[(1280), uint8] */, %816)
}

def @func_11488() -> Tensor[(10, ?, 11), bool] {
  %818 = fn () -> Tensor[(10, ?, 11), bool] {
    %817 = @func_8301() /* ty=(Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) */;
    %817.0
  };
  %818() /* ty=Tensor[(10, ?, 11), bool] */
}

def @func_10098() -> (Tensor[(1, 15), bool],) {
  @func_10096() /* ty=(Tensor[(1, 15), bool],) */
}

def @func_12972(%var_12971: Tensor[(210), float32]) -> (Tensor[(100), float64], Tensor[(3, 5, 14), float32], Tensor[(210), float32], uint64, Tensor[(330), float32], Tensor[(3, 11, 10), float32], Tensor[(3, 5, 14), float32]) {
  %837 = fn (%var_12928: Tensor[(210), float32]) -> (Tensor[(100), float64], Tensor[(3, 5, 14), float32], Tensor[(210), float32], uint64, Tensor[(330), float32], Tensor[(3, 11, 10), float32], Tensor[(3, 5, 14), float32]) {
    %819 = cast(%var_12928, dtype="float32") /* ty=Tensor[(210), float32] */;
    %820 = cast(meta[relay.Constant][52] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %821 = reshape(%819, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
    %822 = reshape(%820, newshape=[]) /* ty=uint64 */;
    %823 = @func_1394(%821, %822) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
    %824 = cast(meta[relay.Constant][53] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %825 = reshape(%824, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), float32] */;
    %826 = @func_2425(%825) /* ty=Tensor[(3, 11, 10), float32] */;
    %827 = cast(%826, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
    %828 = cast(%var_12928, dtype="float32") /* ty=Tensor[(210), float32] */;
    %829 = cast(meta[relay.Constant][52] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %830 = reshape(%828, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
    %831 = reshape(%829, newshape=[]) /* ty=uint64 */;
    %832 = @func_1394(%830, %831) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(15, 5, 4), uint64], uint64) */;
    %833 = @func_12465() /* ty=Tensor[(100), float64] */;
    %834 = %823.0;
    %835 = sinh(%827) /* ty=Tensor[(3, 11, 10), float32] */;
    %836 = %832.0;
    (%833, %834, %var_12928, meta[relay.Constant][52] /* ty=uint64 */, meta[relay.Constant][53] /* ty=Tensor[(330), float32] */, %835, %836)
  };
  %837(%var_12971) /* ty=(Tensor[(100), float64], Tensor[(3, 5, 14), float32], Tensor[(210), float32], uint64, Tensor[(330), float32], Tensor[(3, 11, 10), float32], Tensor[(3, 5, 14), float32]) */
}

def @func_11287(%var_11252: Tensor[(9, 7, 2), float32]) -> (Tensor[(9, 7, 2), float32], Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(20, 4), float64], Tensor[(2, 2, 2), bool], bool, Tensor[(8), bool]) {
  %838 = cast(%var_11252, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
  %839 = @func_9849() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %840 = cast(meta[relay.Constant][54] /* ty=Tensor[(20, 4), float64] */, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %841 = reshape(%840, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
  %842 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %843 = cast(meta[relay.Constant][55] /* ty=Tensor[(8), bool] */, dtype="bool") /* ty=Tensor[(8), bool] */;
  %844 = reshape(%842, newshape=[]) /* ty=bool */;
  %845 = reshape(%843, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), bool] */;
  %846 = @func_4348(%844, %845) /* ty=(Tensor[(2, 2, 2), bool], Tensor[(15, 5, 4), uint64]) */;
  %847 = atanh(%838) /* ty=Tensor[(9, 7, 2), float32] */;
  %848 = @func_10980() /* ty=Tensor[(11, 3, 7), float64] */;
  %849 = %839.0;
  %850 = @func_431(%841) /* ty=Tensor[(2, 4, 10), float64] */;
  %851 = %846.0;
  (%847, %848, %849, %850, meta[relay.Constant][54] /* ty=Tensor[(20, 4), float64] */, %851, False /* ty=bool */, meta[relay.Constant][55] /* ty=Tensor[(8), bool] */)
}

def @func_8100() -> (Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) {
  %852 = cast(meta[relay.Constant][56] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %853 = cast(meta[relay.Constant][57] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %854 = reshape(%852, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float32] */;
  %855 = reshape(%853, newshape=[]) /* ty=uint64 */;
  %856 = @func_5116(%854, %855) /* ty=(Tensor[(10, ?, 11), bool], Tensor[(15, 5, 4), uint64], uint64) */;
  %857 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %858 = %856.0;
  (%857, %858, meta[relay.Constant][56] /* ty=Tensor[(110), float32] */, meta[relay.Constant][57] /* ty=uint64 */)
}

def @func_9140() -> (Tensor[(100), float64],) {
  @func_9138() /* ty=(Tensor[(100), float64],) */
}

def @func_4174(%var_4166: Tensor[(1, 7, 12), uint16], %var_4167: Tensor[(8, 7, 12), uint16]) -> (Tensor[(8, 7, 12), bool],) {
  %859 = cast(%var_4166, dtype="bool") /* ty=Tensor[(1, 7, 12), bool] */;
  %860 = cast(%var_4167, dtype="bool") /* ty=Tensor[(8, 7, 12), bool] */;
  %861 = greater_equal(%859, %860) /* ty=Tensor[(8, 7, 12), bool] */;
  (%861,)
}

def @func_8301() -> (Tensor[(10, ?, 11), bool], Tensor[(13, 9, 7), bool], int64) {
  %862 = @func_8100() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(10, ?, 11), bool], Tensor[(110), float32], uint64) */;
  %863 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %864 = reshape(%863, newshape=[]) /* ty=int64 */;
  %865 = %862.1;
  %866 = @func_4110(%864) /* ty=Tensor[(13, 9, 7), bool] */;
  (%865, %866, 2 /* ty=int64 */)
}

def @func_12466() -> Tensor[(100), float64] {
  %868 = fn () -> Tensor[(100), float64] {
    %867 = @func_9138() /* ty=(Tensor[(100), float64],) */;
    %867.0
  };
  %868() /* ty=Tensor[(100), float64] */
}

def @func_9955() -> Tensor[(11, 3, 7), float64] {
  @func_9953() /* ty=Tensor[(11, 3, 7), float64] */
}

def @func_11893(%var_11891: Tensor[(10, 9, 2), float32], %var_11892: Tensor[(10, 9, 2), float32]) -> Tensor[(10, 9, 2), uint16] {
  @func_11889(%var_11891, %var_11892) /* ty=Tensor[(10, 9, 2), uint16] */
}

def @func_10940() -> Tensor[(11, 3, 7), float32] {
  %869 = @func_9647() /* ty=(Tensor[(11, 3, 7), float32],) */;
  %869.0
}

def @func_7740() -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) {
  %888 = fn () -> (Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) {
    %870 = @func_7084() /* ty=(Tensor[(11, 3, 7), float64],) */;
    %871 = cast(meta[relay.Constant][58] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
    %872 = reshape(%871, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), float32] */;
    %873 = cast(meta[relay.Constant][59] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %874 = cast(meta[relay.Constant][59] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %875 = reshape(%873, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
    %876 = reshape(%874, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), float32] */;
    %877 = @func_1600(%875, %876) /* ty=(Tensor[(5, 2, 10), float32],) */;
    %878 = cast(meta[relay.Constant][60] /* ty=Tensor[(21, 4), uint16] */, dtype="uint16") /* ty=Tensor[(21, 4), uint16] */;
    %879 = cast(meta[relay.Constant][61] /* ty=Tensor[(8, 84), uint16] */, dtype="uint16") /* ty=Tensor[(8, 84), uint16] */;
    %880 = reshape(%878, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), uint16] */;
    %881 = reshape(%879, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint16] */;
    %882 = @func_4174(%880, %881) /* ty=(Tensor[(8, 7, 12), bool],) */;
    %883 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
    %884 = %870.0;
    %885 = @func_6008(%872) /* ty=Tensor[(13, 13, 2), float32] */;
    %886 = %877.0;
    %887 = %882.0;
    (%883, %884, %885, meta[relay.Constant][58] /* ty=Tensor[(338), float32] */, %886, meta[relay.Constant][59] /* ty=Tensor[(100), float32] */, %887, meta[relay.Constant][60] /* ty=Tensor[(21, 4), uint16] */, meta[relay.Constant][61] /* ty=Tensor[(8, 84), uint16] */)
  };
  %888() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64], Tensor[(13, 13, 2), float32], Tensor[(338), float32], Tensor[(5, 2, 10), float32], Tensor[(100), float32], Tensor[(8, 7, 12), bool], Tensor[(21, 4), uint16], Tensor[(8, 84), uint16]) */
}

def @func_8985() -> (Tensor[(100), float32],) {
  @func_8983() /* ty=(Tensor[(100), float32],) */
}

def @func_10919(%var_10917: Tensor[(5, 1, 16), float32], %var_10918: Tensor[(5, 2, 16), float32]) -> (Tensor[(5, 2, 16), float32],) {
  %892 = fn (%var_10911: Tensor[(5, 1, 16), float32], %var_10912: Tensor[(5, 2, 16), float32]) -> (Tensor[(5, 2, 16), float32],) {
    %889 = cast(%var_10911, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
    %890 = cast(%var_10912, dtype="float32") /* ty=Tensor[(5, 2, 16), float32] */;
    %891 = power(%889, %890) /* ty=Tensor[(5, 2, 16), float32] */;
    (%891,)
  };
  %892(%var_10917, %var_10918) /* ty=(Tensor[(5, 2, 16), float32],) */
}

def @func_7540(%var_7537: Tensor[(672), uint16], %var_7538: Tensor[(42, 2), uint16], %var_7539: Tensor[(192), int64]) -> (Tensor[(11, 3, 7), float32], Tensor[(672), uint16], Tensor[(42, 2), uint16], Tensor[(42, 2), uint64], Tensor[(8, 7, 12), float64], Tensor[(42, 2), bool], Tensor[(8, 8, 3), bool], int64, Tensor[(192), int64], Tensor[(42, 2), float64]) {
  %925 = fn (%var_7477: Tensor[(672), uint16], %var_7490: Tensor[(42, 2), uint16], %var_7524: Tensor[(192), int64]) -> (Tensor[(11, 3, 7), float32], Tensor[(672), uint16], Tensor[(42, 2), uint16], Tensor[(42, 2), uint64], Tensor[(8, 7, 12), float64], Tensor[(42, 2), bool], Tensor[(8, 8, 3), bool], int64, Tensor[(192), int64], Tensor[(42, 2), float64]) {
    %893 = cast(%var_7490, dtype="uint16") /* ty=Tensor[(42, 2), uint16] */;
    %894 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(42, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %895 = cast(meta[relay.Constant][62] /* ty=Tensor[(42, 2), uint16] */, dtype="uint16") /* ty=Tensor[(42, 2), uint16] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %897 = cast(meta[relay.Constant][63] /* ty=Tensor[(42, 2), uint16] */, dtype="uint64") /* ty=Tensor[(42, 2), uint64] */;
    %898 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(42, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %899 = cast(meta[relay.Constant][62] /* ty=Tensor[(42, 2), uint16] */, dtype="uint64") /* ty=Tensor[(42, 2), uint64] */;
    %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %901 = cast(meta[relay.Constant][62] /* ty=Tensor[(42, 2), uint16] */, dtype="uint16") /* ty=Tensor[(42, 2), uint16] */;
    %902 = cast(%var_7477, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %903 = reshape(%901, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), uint16] */;
    %904 = reshape(%902, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint16] */;
    %905 = @func_4174(%903, %904) /* ty=(Tensor[(8, 7, 12), bool],) */;
    %906 = %905.0;
    %907 = cast(%906, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
    %908 = cast(meta[relay.Constant][63] /* ty=Tensor[(42, 2), uint16] */, dtype="bool") /* ty=Tensor[(42, 2), bool] */;
    %909 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(42, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %910 = cast(meta[relay.Constant][62] /* ty=Tensor[(42, 2), uint16] */, dtype="bool") /* ty=Tensor[(42, 2), bool] */;
    %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %912 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %913 = cast(%var_7524, dtype="int64") /* ty=Tensor[(192), int64] */;
    %914 = reshape(%912, newshape=[]) /* ty=int64 */;
    %915 = reshape(%913, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), int64] */;
    %916 = @func_2450(%914, %915) /* ty=(Tensor[(8, 8, 3), bool],) */;
    %917 = cast(meta[relay.Constant][63] /* ty=Tensor[(42, 2), uint16] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
    %918 = @func_7286() /* ty=Tensor[(11, 3, 7), float32] */;
    %919 = subtract(%895, %896) /* ty=Tensor[(42, 2), uint16] */;
    %920 = minimum(%899, %900) /* ty=Tensor[(42, 2), uint64] */;
    %921 = sqrt(%907) /* ty=Tensor[(8, 7, 12), float64] */;
    %922 = logical_and(%910, %911) /* ty=Tensor[(42, 2), bool] */;
    %923 = %916.0;
    %924 = asin(%917) /* ty=Tensor[(42, 2), float64] */;
    (%918, %var_7477, %919, %920, %921, %922, %923, 10 /* ty=int64 */, %var_7524, %924)
  };
  %925(%var_7537, %var_7538, %var_7539) /* ty=(Tensor[(11, 3, 7), float32], Tensor[(672), uint16], Tensor[(42, 2), uint16], Tensor[(42, 2), uint64], Tensor[(8, 7, 12), float64], Tensor[(42, 2), bool], Tensor[(8, 8, 3), bool], int64, Tensor[(192), int64], Tensor[(42, 2), float64]) */
}

def @func_11550(%var_11545: Tensor[(80), float64], %var_11546: Tensor[(132), uint32], %var_11547: Tensor[(100), float32], %var_11548: Tensor[(35), int64], %var_11549: Tensor[(147), float64]) -> (Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(3, 4, 11), bool], Tensor[(132), uint32], Tensor[(100), float32], Tensor[(147), float64], Tensor[(35), int64], Tensor[(147), float64], Tensor[(110), float32]) {
  @func_11543(%var_11545, %var_11546, %var_11547, %var_11548, %var_11549) /* ty=(Tensor[(11, 3, 7), float32], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(3, 4, 11), bool], Tensor[(132), uint32], Tensor[(100), float32], Tensor[(147), float64], Tensor[(35), int64], Tensor[(147), float64], Tensor[(110), float32]) */
}

def @func_12403() -> (Tensor[(100), float32], Tensor[(13, 9, 7), float32], Tensor[(11, 3, 7), float64], Tensor[(672), uint8]) {
  %926 = @func_8983() /* ty=(Tensor[(100), float32],) */;
  %927 = @func_9475() /* ty=(Tensor[(13, 9, 7), float32],) */;
  %928 = cast(meta[relay.Constant][64] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %929 = reshape(%928, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint8] */;
  %930 = @func_11478(%929) /* ty=(Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %931 = %926.0;
  %932 = %927.0;
  %933 = %930.2;
  (%931, %932, %933, meta[relay.Constant][64] /* ty=Tensor[(672), uint8] */)
}

def @func_12002() -> (Tensor[(15, 15, 10), float64], Tensor[(3, 3, 11), float64], uint64, Tensor[(147, 1), float64]) {
  @func_12000() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(3, 3, 11), float64], uint64, Tensor[(147, 1), float64]) */
}

def @func_13039() -> Tensor[(338), float32] {
  @func_13037() /* ty=Tensor[(338), float32] */
}

def @func_7942(%var_7940: Tensor[(21), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(99), float64], Tensor[(21), float64], Tensor[(147), float64], uint64) {
  @func_7939(%var_7940) /* ty=(Tensor[(11, 3, 7), float64], Tensor[(99), float64], Tensor[(21), float64], Tensor[(147), float64], uint64) */
}

def @func_6008(%var_5987: Tensor[(13, 13, 2), float32]) -> Tensor[(13, 13, 2), float32] {
  %934 = cast(%var_5987, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  erf(%934) /* ty=Tensor[(13, 13, 2), float32] */
}

def @func_11971() -> (Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(672), uint8]) {
  %935 = @func_8983() /* ty=(Tensor[(100), float32],) */;
  %936 = cast(meta[relay.Constant][65] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %937 = reshape(%936, newshape=[8, 7, 12]) /* ty=Tensor[(8, 7, 12), uint8] */;
  %938 = @func_11478(%937) /* ty=(Tensor[(8, 7, 12), uint8], Tensor[(11, 3, 7), float32], Tensor[(11, 3, 7), float64]) */;
  %939 = %935.0;
  %940 = %938.1;
  (%939, %940, meta[relay.Constant][65] /* ty=Tensor[(672), uint8] */)
}

def @func_11973() -> (Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(672), uint8]) {
  @func_11971() /* ty=(Tensor[(100), float32], Tensor[(11, 3, 7), float32], Tensor[(672), uint8]) */
}

def @func_11360(%var_11358: Tensor[(15, 13, 8), int64]) -> Tensor[(15, 13, 8), int64] {
  @func_11357(%var_11358) /* ty=Tensor[(15, 13, 8), int64] */
}

def @func_7451() -> (Tensor[(11, 3, 7), float64],) {
  %941 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  (%941,)
}

def @func_13060(%var_13059: Tensor[(11, 3, 7), float32]) -> (Tensor[(11, 3, 7), float64],) {
  %949 = fn (%var_13052: Tensor[(11, 3, 7), float32]) -> (Tensor[(11, 3, 7), float64],) {
    %942 = @func_7817() /* ty=(Tensor[(11, 3, 7), float32],) */;
    %943 = %942.0;
    %944 = cast(%var_13052, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
    %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
    %946 = cast(%943, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %948 = power(%946, %947) /* ty=Tensor[(11, 3, 7), float64] */;
    (%948,)
  };
  %949(%var_13059) /* ty=(Tensor[(11, 3, 7), float64],) */
}

def @func_9009(%var_8991: Tensor[(6, 14, 6), uint64], %var_8992: Tensor[(6, 14, 6), uint64]) -> (Tensor[(6, 14, 6), bool], Tensor[(11, 3, 7), float64], Tensor[(6, 14, 6), float64]) {
  %950 = cast(%var_8992, dtype="bool") /* ty=Tensor[(6, 14, 6), bool] */;
  %951 = shape_of(%var_8991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(%var_8991, dtype="bool") /* ty=Tensor[(6, 14, 6), bool] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %954 = @func_8506() /* ty=(Tensor[(11, 3, 7), float64], Tensor[(11, 3, 7), float64]) */;
  %955 = cast(%var_8991, dtype="float64") /* ty=Tensor[(6, 14, 6), float64] */;
  %956 = shape_of(%var_8992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%var_8992, dtype="float64") /* ty=Tensor[(6, 14, 6), float64] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %959 = less(%952, %953) /* ty=Tensor[(6, 14, 6), bool] */;
  %960 = %954.0;
  %961 = minimum(%957, %958) /* ty=Tensor[(6, 14, 6), float64] */;
  (%959, %960, %961)
}

def @func_12523() -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(5, 3, 13), float64], Tensor[(1, 195), float64]) {
  %968 = fn () -> (Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(5, 3, 13), float64], Tensor[(1, 195), float64]) {
    %962 = @func_9138() /* ty=(Tensor[(100), float64],) */;
    %963 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 195), float64] */, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
    %964 = reshape(%963, newshape=[5, 3, 13]) /* ty=Tensor[(5, 3, 13), float64] */;
    %965 = %962.0;
    %966 = @func_8339() /* ty=Tensor[(11, 3, 7), float64] */;
    %967 = @func_9383(%964) /* ty=Tensor[(5, 3, 13), float64] */;
    (%965, %966, %967, meta[relay.Constant][66] /* ty=Tensor[(1, 195), float64] */)
  };
  %968() /* ty=(Tensor[(100), float64], Tensor[(11, 3, 7), float64], Tensor[(5, 3, 13), float64], Tensor[(1, 195), float64]) */
}

def @func_7939(%var_7930: Tensor[(21), float64]) -> (Tensor[(11, 3, 7), float64], Tensor[(99), float64], Tensor[(21), float64], Tensor[(147), float64], uint64) {
  %969 = @func_7123() /* ty=Tensor[(11, 3, 7), float64] */;
  %970 = cast(%969, dtype="float64") /* ty=Tensor[(11, 3, 7), float64] */;
  %971 = cast(%var_7930, dtype="float64") /* ty=Tensor[(21), float64] */;
  %972 = cast(meta[relay.Constant][67] /* ty=Tensor[(147), float64] */, dtype="float64") /* ty=Tensor[(147), float64] */;
  %973 = cast(meta[relay.Constant][68] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %974 = reshape(%971, newshape=[1, 7, 3]) /* ty=Tensor[(1, 7, 3), float64] */;
  %975 = reshape(%972, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), float64] */;
  %976 = reshape(%973, newshape=[]) /* ty=uint64 */;
  %977 = @func_1564(%974, %975, %976) /* ty=(Tensor[(7, 7, 3), bool], Tensor[(3, 3, 11), float64], Tensor[(99), float64], Tensor[(15, 5, 4), uint64], Tensor[(210), float32], uint64) */;
  %978 = exp(%970) /* ty=Tensor[(11, 3, 7), float64] */;
  %979 = %977.2;
  (%978, %979, %var_7930, meta[relay.Constant][67] /* ty=Tensor[(147), float64] */, meta[relay.Constant][68] /* ty=uint64 */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_6574() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) {
  %0 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %1 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %2 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  %3 = @func_3196() /* ty=Tensor[(5, 16, 12), float32] */;
  %4 = cast(%3, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %5 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%2, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %8 = %0.2;
  %9 = %1.0;
  %10 = logical_and(%6, %7) /* ty=Tensor[(5, 16, 12), bool] */;
  %11 = @func_1725() /* ty=Tensor[(5, 16, 12), float32] */;
  (%8, %9, %10, %11)
}

def @func_8015() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %12 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %13 = @func_4527() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %14 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
  %15 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %16 = %12.0;
  %17 = %13.0;
  (%14, %15, %16, %17)
}

def @func_2040() -> Tensor[(5, 16, 12), float32] {
  %18 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %18.2
}

def @func_482() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %19 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %20 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  %21 = %19.1;
  (%20, %21)
}

def @func_1879() -> Tensor[(5, 16, 12), float32] {
  %22 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %22.0
}

def @func_16261(%var_16246: uint64, %var_16247: Tensor[(14, 10, 14), uint64]) -> (Tensor[(14, 10, 14), bool], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(5, 16, 12), float32]) {
  %23 = cast(%var_16246, dtype="bool") /* ty=bool */;
  %24 = cast(%var_16247, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
  %25 = @func_14294() /* ty=(Tensor[(6, 3, 7), bool], Tensor[(15, 9, 2), float32], Tensor[(5, 16, 12), float32]) */;
  %26 = less_equal(%23, %24) /* ty=Tensor[(14, 10, 14), bool] */;
  %27 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %28 = %25.0;
  %29 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  (%26, %27, %28, %29)
}

def @func_9901() -> Tensor[(5, 16, 12), float32] {
  @func_2040() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_18655() -> (Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) {
  %30 = @func_16692() /* ty=(Tensor[(360), uint8],) */;
  %31 = @func_9751() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %32 = %30.0;
  %33 = %31.0;
  (%32, %33)
}

def @func_23255() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) {
  %34 = @func_9261() /* ty=Tensor[(5, 16, 12), float32] */;
  %35 = @func_16230() /* ty=Tensor[(2, 15, 12), uint8] */;
  (%34, %35)
}

def @func_3248() -> Tensor[(360), uint8] {
  @func_2818() /* ty=Tensor[(360), uint8] */
}

def @func_9503() -> (Tensor[(2, 15, 12), uint8],) {
  %36 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  (%36,)
}

def @func_17610() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %37 = @func_16213() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %38 = @func_11229() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %39 = @func_4238() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %40 = %37.0;
  %41 = %38.2;
  %42 = %39.1;
  (%40, %41, %42)
}

def @func_11396() -> (Tensor[(3, 16, 13), float64],) {
  %43 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %44 = %43.2;
  (%44,)
}

def @func_12539() -> Tensor[(5, 16, 12), float32] {
  %45 = @func_6984() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %45.0
}

def @func_1875() -> (Tensor[(12, 10, 15), uint8],) {
  %46 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %47 = %46.0;
  (%47,)
}

def @func_7945() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %48 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %49 = cast(meta[relay.Constant][0] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %50 = reshape(%49, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %51 = @func_3463(%50) /* ty=(Tensor[(5, 5, 14), float32],) */;
  %52 = %48.0;
  %53 = %51.0;
  (%52, %53, meta[relay.Constant][0] /* ty=Tensor[(350), float32] */)
}

def @func_5858() -> (Tensor[(5, 16, 12), float32],) {
  %54 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %55 = %54.0;
  (%55,)
}

def @func_14750() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %56 = @func_10938() /* ty=Tensor[(5, 16, 12), float32] */;
  %57 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  (%56, %57)
}

def @func_14908() -> (Tensor[(5, 16, 12), float32],) {
  %58 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %59 = %58.0;
  (%59,)
}

def @func_16051() -> Tensor[(5, 16, 12), int32] {
  @func_4398() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_7368() -> Tensor[(12, 1, 1), float64] {
  %60 = @func_3357() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %60.0
}

def @func_12956() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), int32]) {
  %61 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %62 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %63 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
  %64 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %65 = %61.1;
  %66 = %62.0;
  %67 = %63.1;
  %68 = %64.0;
  (%65, %66, %67, %68)
}

def @func_5226() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) {
  %69 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %70 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %71 = %69.1;
  %72 = %70.1;
  (%71, %72)
}

def @func_6211() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) {
  %73 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %74 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %75 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %76 = %73.0;
  %77 = %74.0;
  %78 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  %79 = %75.0;
  (%76, %77, %78, %79)
}

def @func_11486() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32]) {
  %80 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %81 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %82 = cast(meta[relay.Constant][1] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %83 = reshape(%82, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %84 = @func_4928(%83) /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(12, 10, 15), int64], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */;
  %85 = cast(meta[relay.Constant][2] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %86 = cast(meta[relay.Constant][2] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %87 = reshape(%85, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %88 = reshape(%86, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %89 = @func_2845(%87, %88) /* ty=(Tensor[(6, 3, 7), bool],) */;
  %90 = @func_11274() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %91 = %80.0;
  %92 = %81.0;
  %93 = %84.2;
  %94 = %89.0;
  %95 = %90.0;
  (%91, %92, %93, meta[relay.Constant][1] /* ty=Tensor[(350), float32] */, %94, meta[relay.Constant][2] /* ty=Tensor[(126), uint32] */, %95)
}

def @func_19444() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %96 = @func_5545() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %97 = @func_6462() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %98 = @func_8647() /* ty=Tensor[(5, 16, 12), float32] */;
  %99 = %96.0;
  %100 = %97.0;
  (%98, %99, %100)
}

def @func_19700() -> (Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %101 = @func_10035() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) */;
  %102 = @func_13316() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %103 = %101.1;
  %104 = %102.2;
  %105 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%103, %104, %105)
}

def @func_4150() -> (Tensor[(5, 16, 12), float64],) {
  %106 = @func_1404() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
  %107 = %106.0;
  (%107,)
}

def @func_19883() -> (Tensor[(350), bool], Tensor[(5, 16, 12), float32]) {
  %108 = @func_16488() /* ty=(Tensor[(350), bool],) */;
  %109 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %110 = %108.0;
  %111 = %109.0;
  (%110, %111)
}

def @func_22212(%var_22206: Tensor[(845), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float32], Tensor[(845), float64]) {
  %112 = @func_8702() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %113 = cast(%var_22206, dtype="float64") /* ty=Tensor[(845), float64] */;
  %114 = reshape(%113, newshape=[845]) /* ty=Tensor[(845), float64] */;
  %115 = @func_13909(%114) /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 13, 13), float64], Tensor[(845), float64]) */;
  %116 = %112.1;
  %117 = %115.0;
  (%116, %117, %var_22206)
}

def @func_23056(%var_22966: Tensor[(14, 2, 9), uint32]) -> (Tensor[(14, 2, 9), uint32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %118 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 2, 9), uint32] */, dtype="uint32") /* ty=Tensor[(14, 2, 9), uint32] */;
  %119 = shape_of(%var_22966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_22966, dtype="uint32") /* ty=Tensor[(14, 2, 9), uint32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %122 = @func_19215() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %123 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %124 = @func_19034() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %125 = bitwise_and(%120, %121) /* ty=Tensor[(14, 2, 9), uint32] */;
  %126 = %122.0;
  %127 = @func_18493() /* ty=Tensor[(5, 16, 12), int32] */;
  %128 = %123.0;
  %129 = %124.0;
  (%125, %126, %127, %128, %129)
}

def @func_17669() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %130 = @func_8466() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %131 = @func_17414() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %132 = %130.0;
  %133 = %131.0;
  (%132, %133)
}

def @func_16189(%var_16175: uint64, %var_16176: Tensor[(616), uint64]) -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], uint64, Tensor[(5, 16, 12), float32], Tensor[(616), bool]) {
  %134 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %135 = cast(%var_16175, dtype="uint64") /* ty=uint64 */;
  %136 = cast(%var_16176, dtype="uint64") /* ty=Tensor[(616), uint64] */;
  %137 = reshape(%135, newshape=[]) /* ty=uint64 */;
  %138 = reshape(%136, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
  %139 = @func_6727(%137, %138) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
  %140 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %141 = cast(meta[relay.Constant][4] /* ty=Tensor[(616), uint64] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %142 = shape_of(%var_16176, dtype="int32") /* ty=Tensor[(1), int32] */;
  %143 = cast(%var_16176, dtype="bool") /* ty=Tensor[(616), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?), bool] */;
  %145 = %134.0;
  %146 = %139.0;
  %147 = %140.0;
  %148 = greater(%143, %144) /* ty=Tensor[(616), bool] */;
  (%145, %146, %var_16175, %147, %148)
}

def @func_19742() -> Tensor[(5, 16, 12), float32] {
  %149 = @func_14656() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %149.1
}

def @func_22943() -> (Tensor[(12, 11, 2), uint16], Tensor[(360), uint8]) {
  %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 2), float64] */;
  %151 = tan(%150) /* ty=Tensor[(12, 11, 2), float64] */;
  %152 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 11, 2), float64] */, dtype="uint16") /* ty=Tensor[(12, 11, 2), uint16] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%151, dtype="uint16") /* ty=Tensor[(12, 11, 2), uint16] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %156 = @func_16692() /* ty=(Tensor[(360), uint8],) */;
  %157 = logical_xor(%154, %155) /* ty=Tensor[(12, 11, 2), uint16] */;
  %158 = %156.0;
  (%157, %158)
}

def @func_23873() -> Tensor[(2, 15, 12), uint8] {
  %159 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
  %159.1
}

def @func_15829(%var_15808: uint16) -> (Tensor[(13, 7, 1), bool],) {
  %160 = cast(%var_15808, dtype="bool") /* ty=bool */;
  %161 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 7, 1), uint16] */, dtype="bool") /* ty=Tensor[(13, 7, 1), bool] */;
  %162 = less_equal(%160, %161) /* ty=Tensor[(13, 7, 1), bool] */;
  (%162,)
}

def @func_20232() -> Tensor[(5, 16, 12), float32] {
  %163 = @func_18834() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) */;
  %163.0
}

def @func_21338() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %164 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %165 = @func_13217() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %166 = %164.1;
  %167 = %165.0;
  (%166, %167)
}

def @func_18834() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) {
  %168 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %170 = reshape(%169, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), uint8] */;
  %171 = @func_1929(%170) /* ty=(Tensor[(2, 15, 12), uint8],) */;
  %172 = %168.1;
  %173 = %171.0;
  (%172, %173, meta[relay.Constant][7] /* ty=Tensor[(360), uint8] */)
}

def @func_24602() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) {
  %174 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %175 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
  %176 = @func_24077() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %177 = %174.0;
  %178 = %175.0;
  %179 = %176.0;
  (%177, %178, %179)
}

def @func_20835(%var_20826: Tensor[(9, 3, 5), float64]) -> (Tensor[(9, 3, 5), int8],) {
  %180 = cast(%var_20826, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %181 = cosh(%180) /* ty=Tensor[(9, 3, 5), float64] */;
  %182 = cast(%var_20826, dtype="int8") /* ty=Tensor[(9, 3, 5), int8] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="int8") /* ty=Tensor[(9, 3, 5), int8] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %186 = left_shift(%184, %185) /* ty=Tensor[(9, 3, 5), int8] */;
  (%186,)
}

def @func_8411() -> Tensor[(5, 16, 12), float32] {
  %187 = @func_7945() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */;
  %187.0
}

def @func_20751() -> (Tensor[(5, 16, 12), float32],) {
  %188 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %189 = %188.0;
  (%189,)
}

def @func_23410() -> Tensor[(12, 10, 15), uint8] {
  @func_8376() /* ty=Tensor[(12, 10, 15), uint8] */
}

def @func_15278() -> (Tensor[(5, 16, 12), float32],) {
  %190 = @func_8200() /* ty=Tensor[(5, 16, 12), float32] */;
  (%190,)
}

def @func_2459() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) {
  %191 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %192 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %193 = %192.2;
  %194 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %197 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%193, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = %191.0;
  %201 = less_equal(%198, %199) /* ty=Tensor[(5, 16, 12), bool] */;
  (%200, %201)
}

def @func_918(%var_910: Tensor[(5, 8, 4), int32], %var_911: Tensor[(5, 8, 4), int32]) -> (Tensor[(5, 8, 4), int32],) {
  %202 = cast(%var_911, dtype="int32") /* ty=Tensor[(5, 8, 4), int32] */;
  %203 = shape_of(%var_910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%var_910, dtype="int32") /* ty=Tensor[(5, 8, 4), int32] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %206 = bitwise_or(%204, %205) /* ty=Tensor[(5, 8, 4), int32] */;
  (%206,)
}

def @func_19094() -> (Tensor[(5, 16, 12), float32],) {
  %207 = @func_5097() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %208 = %207.0;
  (%208,)
}

def @func_10371() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %209 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %210 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
  %211 = %209.1;
  %212 = %210.0;
  (%211, %212)
}

def @func_20082() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %213 = @func_7555() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %214 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %215 = %213.1;
  %216 = %214.0;
  (%215, %216)
}

def @func_17363() -> Tensor[(5, 16, 12), float32] {
  @func_3196() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_7166() -> (Tensor[(5, 16, 12), float32],) {
  %217 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  (%217,)
}

def @func_13217() -> (Tensor[(5, 16, 12), float32],) {
  %218 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %219 = %218.1;
  (%219,)
}

def @func_18699() -> (Tensor[(5, 16, 12), float64],) {
  %220 = @func_7476() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %221 = %220.3;
  (%221,)
}

def @func_6272() -> (Tensor[(3, 16, 13), bool],) {
  %222 = @func_5903() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) */;
  %223 = %222.2;
  (%223,)
}

def @func_20886() -> Tensor[(5, 16, 12), float32] {
  %224 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %224.0
}

def @func_9207() -> Tensor[(5, 16, 12), float32] {
  @func_863() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_15327() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %225 = @func_9459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(21), float32]) */;
  %226 = @func_14450() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %227 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %228 = %225.1;
  %229 = %226.0;
  (%227, %228, %229)
}

def @func_16463() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %230 = @func_15327() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %231 = %230.1;
  %232 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  (%231, %232)
}

def @func_22820() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %233 = @func_19215() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %234 = @func_10660() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) */;
  %235 = %233.0;
  %236 = @func_13352() /* ty=Tensor[(5, 16, 12), float32] */;
  %237 = %234.2;
  (%235, %236, %237)
}

def @func_14321() -> Tensor[(160), int32] {
  %238 = @func_9094() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) */;
  %238.2
}

def @func_18493() -> Tensor[(5, 16, 12), int32] {
  %239 = @func_4135() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %239.2
}

def @func_9803() -> (Tensor[(5, 16, 12), float32],) {
  %240 = @func_4238() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %241 = %240.0;
  (%241,)
}

def @func_4135() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %242 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %243 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  %244 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %245 = %242.0;
  (%243, %244, %245)
}

def @func_12875(%var_12805: Tensor[(11, 13, 2), bool]) -> (Tensor[(11, 13, 2), bool], Tensor[(5, 16, 12), float32], Tensor[(11, 13, 2), float32], Tensor[(5, 16, 12), int32]) {
  %246 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 13, 2), bool] */, dtype="bool") /* ty=Tensor[(11, 13, 2), bool] */;
  %247 = shape_of(%var_12805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%var_12805, dtype="bool") /* ty=Tensor[(11, 13, 2), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = cast(%var_12805, dtype="float32") /* ty=Tensor[(11, 13, 2), float32] */;
  %251 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %252 = logical_or(%248, %249) /* ty=Tensor[(11, 13, 2), bool] */;
  %253 = @func_10938() /* ty=Tensor[(5, 16, 12), float32] */;
  %254 = acosh(%250) /* ty=Tensor[(11, 13, 2), float32] */;
  %255 = %251.1;
  (%252, %253, %254, %255)
}

def @func_20680() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %256 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %257 = @func_20485() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %258 = @func_13069() /* ty=Tensor[(5, 16, 12), int32] */;
  %259 = %256.0;
  %260 = %257.0;
  %261 = @func_9261() /* ty=Tensor[(5, 16, 12), float32] */;
  (%258, %259, %260, %261)
}

def @func_9966() -> (Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %262 = @func_3248() /* ty=Tensor[(360), uint8] */;
  %263 = @func_8200() /* ty=Tensor[(5, 16, 12), float32] */;
  (%262, %263)
}

def @func_3107() -> (Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %264 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %265 = cast(meta[relay.Constant][9] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %266 = reshape(%265, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %267 = @func_2669(%266) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %268 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %269 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %270 = %264.0;
  %271 = %267.2;
  %272 = %268.1;
  %273 = %269.0;
  (%270, %271, meta[relay.Constant][9] /* ty=Tensor[(21), float32] */, %272, %273)
}

def @func_14020() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) {
  %274 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %275 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %276 = cast(meta[relay.Constant][10] /* ty=Tensor[(175, 2), float32] */, dtype="float32") /* ty=Tensor[(175, 2), float32] */;
  %277 = reshape(%276, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %278 = @func_10150(%277) /* ty=(Tensor[(350), bool], Tensor[(5, 16, 12), float64]) */;
  %279 = @func_12607() /* ty=Tensor[(5, 16, 12), int32] */;
  %280 = %274.0;
  %281 = %275.1;
  %282 = %278.0;
  (%279, %280, %281, %282, meta[relay.Constant][10] /* ty=Tensor[(175, 2), float32] */)
}

def @func_21939(%var_21928: Tensor[(4, 13, 1), float64]) -> (Tensor[(4, 13, 1), float64], Tensor[(4, 13, 1), float32]) {
  %283 = cast(%var_21928, dtype="float64") /* ty=Tensor[(4, 13, 1), float64] */;
  %284 = cast(%var_21928, dtype="float32") /* ty=Tensor[(4, 13, 1), float32] */;
  %285 = asinh(%283) /* ty=Tensor[(4, 13, 1), float64] */;
  %286 = cos(%284) /* ty=Tensor[(4, 13, 1), float32] */;
  (%285, %286)
}

def @func_17009() -> (Tensor[(10, 4, 5), float32], Tensor[(360), uint8]) {
  %287 = @func_12183() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) */;
  %288 = %287.0;
  %289 = @func_2818() /* ty=Tensor[(360), uint8] */;
  (%288, %289)
}

def @func_1863() -> Tensor[(5, 16, 12), float32] {
  @func_255() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_3655() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %290 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %291 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %292 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %293 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  %294 = %290.1;
  %295 = %291.0;
  (%292, %293, %294, %295)
}

def @func_8376() -> Tensor[(12, 10, 15), uint8] {
  %296 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %296.0
}

def @func_21575() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %297 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %298 = @func_3357() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %299 = %297.0;
  %300 = %298.0;
  (%299, %300)
}

def @func_22302() -> (Tensor[(5, 16, 12), float32], Tensor[(6, 7, 8), float32], Tensor[(336), float32]) {
  %301 = cast(meta[relay.Constant][11] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %302 = reshape(%301, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), float32] */;
  %303 = @func_16637() /* ty=Tensor[(5, 16, 12), float32] */;
  %304 = @func_21256(%302) /* ty=Tensor[(6, 7, 8), float32] */;
  (%303, %304, meta[relay.Constant][11] /* ty=Tensor[(336), float32] */)
}

def @func_11655() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %305 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %306 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %307 = %305.0;
  %308 = %306.0;
  (%307, %308)
}

def @func_18783() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %309 = @func_13465() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %310 = @func_16751() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %311 = %309.0;
  %312 = %310.1;
  (%311, %312)
}

def @func_6423() -> (Tensor[(5, 16, 12), float32],) {
  %313 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  (%313,)
}

def @func_8200() -> Tensor[(5, 16, 12), float32] {
  %314 = @func_4135() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %314.1
}

def @func_24367() -> (Tensor[(5, 16, 12), float32],) {
  %315 = @func_24200() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %316 = %315.4;
  (%316,)
}

def @func_22251() -> Tensor[(12, 1, 1), float64] {
  %317 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %318 = %317.1;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  exp(%319) /* ty=Tensor[(12, 1, 1), float64] */
}

def @func_12051() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %320 = @func_3576() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %321 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %322 = %320.0;
  %323 = %321.0;
  (%322, %323)
}

def @func_18816() -> (Tensor[(5, 16, 12), float32],) {
  %324 = @func_12539() /* ty=Tensor[(5, 16, 12), float32] */;
  (%324,)
}

def @func_24326() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %325 = @func_18430() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(350), float32]) */;
  %326 = @func_18862() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %327 = %325.0;
  %328 = %326.0;
  %329 = @func_20232() /* ty=Tensor[(5, 16, 12), float32] */;
  (%327, %328, %329)
}

def @func_11360() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  %330 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %331 = cast(meta[relay.Constant][12] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %332 = reshape(%331, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %333 = @func_6349(%332) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %334 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
  %335 = %330.0;
  %336 = %333.1;
  (%334, %335, %336, meta[relay.Constant][12] /* ty=Tensor[(624), float64] */)
}

def @func_19034() -> (Tensor[(5, 16, 12), float32],) {
  %337 = @func_18816() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %338 = %337.0;
  (%338,)
}

def @func_13187() -> Tensor[(5, 16, 12), float64] {
  %339 = @func_10839() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %339.0
}

def @func_18706() -> Tensor[(5, 16, 12), float32] {
  @func_5773() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_7178(%var_7169: Tensor[(8, 7, 1), float32]) -> (Tensor[(8, 7, ?), int16],) {
  %340 = cast(%var_7169, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
  %341 = sin(%340) /* ty=Tensor[(8, 7, 1), float32] */;
  %342 = cast(%var_7169, dtype="int16") /* ty=Tensor[(8, 7, 1), int16] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%341, dtype="int16") /* ty=Tensor[(8, 7, 1), int16] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %346 = bitwise_and(%344, %345) /* ty=Tensor[(8, 7, ?), int16] */;
  (%346,)
}

def @func_19807() -> (Tensor[(5, 16, 12), float32], Tensor[(21), uint32], Tensor[(21), float32]) {
  %347 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %348 = cast(meta[relay.Constant][13] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %349 = reshape(%348, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %350 = @func_10721(%349) /* ty=(Tensor[(21), uint32],) */;
  %351 = %347.1;
  %352 = %350.0;
  (%351, %352, meta[relay.Constant][13] /* ty=Tensor[(21), float32] */)
}

def @func_17886() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %353 = @func_12802() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %354 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %355 = @func_14967() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %356 = @func_9403() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %357 = %353.0;
  %358 = %354.0;
  %359 = %355.0;
  %360 = %356.2;
  (%357, %358, %359, %360)
}

def @func_5322(%var_5291: Tensor[(126), uint32]) -> (Tensor[(864), float32], Tensor[(5, 16, 12), int32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %361 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
  %362 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %363 = cast(%var_5291, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %364 = cast(%var_5291, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %365 = reshape(%363, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %366 = reshape(%364, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %367 = @func_2845(%365, %366) /* ty=(Tensor[(6, 3, 7), bool],) */;
  %368 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %369 = @func_2603() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %370 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %371 = %361.1;
  %372 = %362.0;
  %373 = %367.0;
  %374 = %368.0;
  %375 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %376 = %369.0;
  %377 = %370.0;
  (%371, %372, %373, %var_5291, %374, %375, %376, %377)
}

def @func_20004() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %378 = @func_14504() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %379 = @func_6574() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) */;
  %380 = %378.0;
  %381 = %379.3;
  (%380, %381)
}

def @func_13352() -> Tensor[(5, 16, 12), float32] {
  %382 = @func_4467() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %382.1
}

def @func_21867() -> Tensor[(5, 16, 12), int32] {
  %383 = @func_20004() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %383.0
}

def @func_20257(%var_20237: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), float64], Tensor[(350), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %384 = cast(%var_20237, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %385 = @func_18430() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(350), float32]) */;
  %386 = @func_10999() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %387 = @func_14020() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) */;
  %388 = rsqrt(%384) /* ty=Tensor[(16, 3, 12), float64] */;
  %389 = %385.1;
  %390 = %386.1;
  %391 = %387.2;
  (%388, %389, %390, %391)
}

def @func_24120() -> Tensor[(350), bool] {
  @func_14375() /* ty=Tensor[(350), bool] */
}

def @func_7565() -> Tensor[(5, 16, 12), int32] {
  @func_559() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_12441() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(624), float64]) {
  %392 = @func_9803() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %393 = cast(meta[relay.Constant][14] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %394 = reshape(%393, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %395 = @func_6349(%394) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %396 = %392.0;
  %397 = %395.0;
  (%396, %397, meta[relay.Constant][14] /* ty=Tensor[(624), float64] */)
}

def @func_6349(%var_6340: Tensor[(624), float64]) -> (Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  %398 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %399 = cast(%var_6340, dtype="float64") /* ty=Tensor[(624), float64] */;
  %400 = reshape(%399, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float64] */;
  %401 = @func_728(%400) /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %402 = %398.0;
  %403 = %401.0;
  (%402, %403, %var_6340)
}

def @func_11720() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %404 = @func_8951() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %405 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %406 = %404.1;
  %407 = %405.0;
  (%406, %407)
}

def @func_4498() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %408 = @func_3655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %409 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %410 = %408.2;
  (%409, %410)
}

def @func_11871() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
  %411 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %412 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %413 = %411.0;
  (%412, %413)
}

def @func_9529(%var_9511: Tensor[(8, 12, 1), bool], %var_9512: Tensor[(8, 12, 1), bool]) -> Tensor[(8, 12, ?), bool] {
  %414 = cast(%var_9512, dtype="bool") /* ty=Tensor[(8, 12, 1), bool] */;
  %415 = shape_of(%var_9511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%var_9511, dtype="bool") /* ty=Tensor[(8, 12, 1), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%416, %417) /* ty=Tensor[(8, 12, ?), bool] */
}

def @func_8224() -> Tensor[(5, 16, 12), float32] {
  @func_255() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_7014(%var_7008: Tensor[(5, 13, 13), float64], %var_7009: Tensor[(5, 13, 13), float64]) -> Tensor[(5, 13, 13), float64] {
  %418 = cast(%var_7009, dtype="float64") /* ty=Tensor[(5, 13, 13), float64] */;
  %419 = shape_of(%var_7008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%var_7008, dtype="float64") /* ty=Tensor[(5, 13, 13), float64] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%420, %421) /* ty=Tensor[(5, 13, 13), float64] */
}

def @func_1137() -> (Tensor[(5, 16, 12), float64],) {
  %422 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %423 = %422.1;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  %425 = acosh(%424) /* ty=Tensor[(5, 16, 12), float64] */;
  (%425,)
}

def @func_12777() -> (Tensor[(5, 16, 12), float64],) {
  %426 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %427 = %426.1;
  (%427,)
}

def @func_20057() -> Tensor[(5, 16, 12), float32] {
  @func_15551() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_18236() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %428 = @func_5993() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %429 = @func_11655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %430 = %428.0;
  %431 = %429.1;
  (%430, %431)
}

def @func_15551() -> Tensor[(5, 16, 12), float32] {
  %432 = @func_6984() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %432.1
}

def @func_9662() -> (Tensor[(5, 16, 12), float32],) {
  %433 = @func_9403() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %434 = %433.1;
  (%434,)
}

def @func_11933() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %435 = @func_5993() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %436 = %435.1;
  %437 = @func_4625() /* ty=Tensor[(5, 16, 12), float32] */;
  (%436, %437)
}

def @func_20623() -> (Tensor[(5, 16, 12), float32],) {
  %438 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %439 = %438.1;
  (%439,)
}

def @func_11274() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %440 = @func_2139() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %441 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %442 = %440.1;
  %443 = %441.0;
  (%442, %443)
}

def @func_21087() -> Tensor[(5, 16, 12), float32] {
  @func_21037() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_20449() -> (Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %444 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %445 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %446 = @func_16230() /* ty=Tensor[(2, 15, 12), uint8] */;
  %447 = %444.2;
  %448 = %445.0;
  (%446, %447, %448)
}

def @func_677() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) {
  %449 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %450 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %451 = %449.0;
  %452 = %450.1;
  %453 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  (%451, %452, %453)
}

def @main() -> (Tensor[(5, 16, 12), int32], Tensor[(12, 1, 1), float32]) {
  %454 = @func_17562() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(12, 1, 1), float32] */;
  %457 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
  %458 = sinh(%456) /* ty=Tensor[(12, 1, 1), float32] */;
  (%457, %458)
}

def @func_351() -> (Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
  %459 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %460 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %463 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 15), int64] */, dtype="uint8") /* ty=Tensor[(12, 10, 15), uint8] */;
  %464 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 10, 15), int64] */, dtype="uint8") /* ty=Tensor[(12, 10, 15), uint8] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %467 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %468 = logical_xor(%461, %462) /* ty=Tensor[(12, 10, 15), int64] */;
  %469 = bitwise_or(%465, %466) /* ty=Tensor[(12, 10, 15), uint8] */;
  %470 = %467.1;
  (%468, %469, %470)
}

def @func_22717() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %471 = @func_20503() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %472 = %471.0;
  %473 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  (%472, %473)
}

def @func_14294() -> (Tensor[(6, 3, 7), bool], Tensor[(15, 9, 2), float32], Tensor[(5, 16, 12), float32]) {
  %474 = @func_11486() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32]) */;
  %475 = @func_12758() /* ty=(Tensor[(15, 9, 2), float32],) */;
  %476 = @func_2603() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %477 = %474.4;
  %478 = %475.0;
  %479 = %476.0;
  (%477, %478, %479)
}

def @func_6462() -> (Tensor[(5, 16, 12), float32],) {
  %480 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %481 = %480.0;
  (%481,)
}

def @func_1437(%var_1429: Tensor[(12, 10, 15), uint8]) -> Tensor[(12, 10, 15), bool] {
  %482 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %483 = %482.1;
  %484 = cast(%var_1429, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%483, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%486, %487) /* ty=Tensor[(12, 10, 15), bool] */
}

def @func_5067() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %488 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %489 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %490 = %488.0;
  %491 = %489.2;
  %492 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  (%490, %491, %492)
}

def @func_13069() -> Tensor[(5, 16, 12), int32] {
  %493 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %493.0
}

def @func_13465() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
  %494 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %495 = @func_11871() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %496 = @func_8725() /* ty=Tensor[(5, 16, 12), float32] */;
  %497 = %494.1;
  %498 = %495.1;
  (%496, %497, %498)
}

def @func_19917() -> (Tensor[(5, 16, 12), int32],) {
  %499 = @func_18340() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %500 = %499.2;
  (%500,)
}

def @func_5574() -> Tensor[(5, 16, 12), float32] {
  %501 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %501.2
}

def @func_17949() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %502 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %503 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %504 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
  %505 = %502.0;
  %506 = %503.0;
  %507 = @func_17474() /* ty=Tensor[(5, 16, 12), float64] */;
  (%504, %505, %506, %507)
}

def @func_20746() -> (Tensor[(5, 16, 12), float32],) {
  %508 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %509 = %508.0;
  (%509,)
}

def @func_893() -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %510 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %511 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %513 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %514 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %515 = %510.1;
  %516 = cos(%512) /* ty=Tensor[(5, 16, 12), float32] */;
  %517 = %513.1;
  %518 = %514.0;
  (%515, %516, %517, %518)
}

def @func_18073() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %519 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %520 = %519.0;
  %521 = @func_6493() /* ty=Tensor[(5, 16, 12), float32] */;
  %522 = @func_17969() /* ty=Tensor[(5, 16, 12), float32] */;
  (%520, %521, %522)
}

def @func_728(%var_710: Tensor[(3, 16, 13), float64]) -> (Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %523 = cast(%var_710, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %524 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %525 = log(%523) /* ty=Tensor[(3, 16, 13), float64] */;
  %526 = %524.0;
  %527 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  (%525, %526, %527)
}

def @func_18119() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %528 = @func_16981() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %529 = %528.0;
  %530 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
  (%529, %530)
}

def @func_3196() -> Tensor[(5, 16, 12), float32] {
  %531 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %531.0
}

def @func_5685(%var_5634: Tensor[(12, 1, 16), float32]) -> (Tensor[(12, 1, 16), float32], Tensor[(5, 16, 12), int32], Tensor[(2, 15, 12), uint8]) {
  %532 = cast(%var_5634, dtype="float32") /* ty=Tensor[(12, 1, 16), float32] */;
  %533 = @func_2459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) */;
  %534 = @func_5226() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) */;
  %535 = asin(%532) /* ty=Tensor[(12, 1, 16), float32] */;
  %536 = %533.0;
  %537 = %534.1;
  (%535, %536, %537)
}

def @func_18430() -> (Tensor[(5, 16, 12), float32], Tensor[(350), float32]) {
  %538 = @func_16488() /* ty=(Tensor[(350), bool],) */;
  %539 = %538.0;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(350), float32] */;
  %541 = @func_12539() /* ty=Tensor[(5, 16, 12), float32] */;
  %542 = sqrt(%540) /* ty=Tensor[(350), float32] */;
  (%541, %542)
}

def @func_24214() -> (Tensor[(5, 16, 12), float32],) {
  %543 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %544 = %543.1;
  (%544,)
}

def @func_12802() -> (Tensor[(5, 16, 12), float32],) {
  %545 = @func_5903() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) */;
  %546 = %545.0;
  (%546,)
}

def @func_1681() -> (Tensor[(5, 16, 12), float64],) {
  %547 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %548 = %547.0;
  (%548,)
}

def @func_11093() -> (Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) {
  %549 = @func_2818() /* ty=Tensor[(360), uint8] */;
  %550 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  (%549, %550)
}

def @func_21551() -> Tensor[(5, 16, 12), int32] {
  %551 = @func_8034() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %551.1
}

def @func_10552(%var_10512: Tensor[(15, 7, 9), float64], %var_10513: Tensor[(15, 7, 9), float64]) -> (Tensor[(15, 7, 9), bool], Tensor[(15, 7, 9), float32]) {
  %552 = cast(%var_10513, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %553 = shape_of(%var_10512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%var_10512, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %556 = cast(%var_10513, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %557 = shape_of(%var_10512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %558 = cast(%var_10512, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %560 = power(%558, %559) /* ty=Tensor[(15, 7, 9), float64] */;
  %561 = cast(%560, dtype="float32") /* ty=Tensor[(15, 7, 9), float32] */;
  %562 = not_equal(%554, %555) /* ty=Tensor[(15, 7, 9), bool] */;
  %563 = acos(%561) /* ty=Tensor[(15, 7, 9), float32] */;
  (%562, %563)
}

def @func_12607() -> Tensor[(5, 16, 12), int32] {
  %564 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %564.0
}

def @func_13316() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %565 = @func_7887() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %566 = @func_12802() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %567 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %568 = %565.0;
  %569 = %566.0;
  (%567, %568, %569)
}

def @func_1658() -> (Tensor[(5, 16, 12), float32],) {
  %570 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %571 = %570.0;
  (%571,)
}

def @func_14375() -> Tensor[(350), bool] {
  %572 = @func_14020() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) */;
  %572.3
}

def @func_14656() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %573 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %574 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  %575 = %573.0;
  (%574, %575)
}

def @func_13909(%var_13901: Tensor[(845), float64]) -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 13, 13), float64], Tensor[(845), float64]) {
  %576 = @func_12183() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) */;
  %577 = @func_13726() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %578 = cast(%var_13901, dtype="float64") /* ty=Tensor[(845), float64] */;
  %579 = cast(%var_13901, dtype="float64") /* ty=Tensor[(845), float64] */;
  %580 = reshape(%578, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), float64] */;
  %581 = reshape(%579, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), float64] */;
  %582 = %576.0;
  %583 = %577.0;
  %584 = @func_7014(%580, %581) /* ty=Tensor[(5, 13, 13), float64] */;
  (%582, %583, %584, %var_13901)
}

def @func_6447() -> (Tensor[(5, 16, 12), float32],) {
  %585 = @func_4063() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %586 = %585.1;
  (%586,)
}

def @func_14719() -> Tensor[(5, 16, 12), float32] {
  %587 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %587.0
}

def @func_586() -> (Tensor[(5, 16, 12), float32],) {
  %588 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  (%588,)
}

def @func_8951() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %589 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %590 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %591 = %589.0;
  %592 = %590.0;
  (%591, %592)
}

def @func_4971() -> Tensor[(5, 16, 12), float32] {
  %593 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %593.0
}

def @func_15501() -> Tensor[(5, 16, 12), float64] {
  %594 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %594.0
}

def @func_5097() -> (Tensor[(5, 16, 12), float32],) {
  %595 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
  (%595,)
}

def @func_10903() -> (Tensor[(5, 16, 12), float32],) {
  %596 = @func_8725() /* ty=Tensor[(5, 16, 12), float32] */;
  (%596,)
}

def @func_21158() -> Tensor[(5, 16, 12), bool] {
  %597 = @func_2459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) */;
  %597.1
}

def @func_2054() -> Tensor[(5, 16, 12), int32] {
  %598 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %598.0
}

def @func_6727(%var_6704: uint64, %var_6705: Tensor[(11, 7, 8), uint64]) -> (Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) {
  %599 = cast(%var_6704, dtype="uint64") /* ty=uint64 */;
  %600 = cast(%var_6705, dtype="uint64") /* ty=Tensor[(11, 7, 8), uint64] */;
  %601 = left_shift(%599, %600) /* ty=Tensor[(11, 7, 8), uint64] */;
  %602 = cast(%var_6704, dtype="int32") /* ty=int32 */;
  %603 = cast(%601, dtype="int32") /* ty=Tensor[(11, 7, 8), int32] */;
  %604 = @func_3196() /* ty=Tensor[(5, 16, 12), float32] */;
  %605 = add(%602, %603) /* ty=Tensor[(11, 7, 8), int32] */;
  (%604, %605)
}

def @func_14493(%var_14482: uint16, %var_14483: Tensor[(12, 1, 4), uint16]) -> Tensor[(12, 1, 4), uint16] {
  %606 = cast(%var_14482, dtype="uint16") /* ty=uint16 */;
  %607 = cast(%var_14483, dtype="uint16") /* ty=Tensor[(12, 1, 4), uint16] */;
  bitwise_or(%606, %607) /* ty=Tensor[(12, 1, 4), uint16] */
}

def @func_19215() -> (Tensor[(5, 16, 12), int32],) {
  %608 = @func_7599() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %609 = %608.0;
  (%609,)
}

def @func_4063() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %610 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %611 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  %612 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  %613 = %610.0;
  (%611, %612, %613)
}

def @func_23575() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %614 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %615 = @func_22289() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %616 = %614.0;
  %617 = %615.0;
  (%616, %617)
}

def @func_12996() -> Tensor[(5, 16, 12), float32] {
  %618 = @func_8702() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %618.2
}

def @func_17562() -> (Tensor[(12, 1, 1), float64],) {
  %619 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %620 = %619.1;
  (%620,)
}

def @func_21186() -> (Tensor[(5, 16, 12), float32],) {
  %621 = @func_9021() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %622 = %621.0;
  (%622,)
}

def @func_19493(%var_19461: Tensor[(160), int32]) -> (Tensor[(5, 16, 12), int32], Tensor[(8, 12, ?), bool], Tensor[(96), bool], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %623 = cast(meta[relay.Constant][17] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
  %624 = cast(meta[relay.Constant][17] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
  %625 = reshape(%623, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
  %626 = reshape(%624, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
  %627 = cast(%var_19461, dtype="int32") /* ty=Tensor[(160), int32] */;
  %628 = cast(%var_19461, dtype="int32") /* ty=Tensor[(160), int32] */;
  %629 = reshape(%627, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %630 = reshape(%628, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %631 = @func_918(%629, %630) /* ty=(Tensor[(5, 8, 4), int32],) */;
  %632 = @func_4341() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %633 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %634 = @func_18493() /* ty=Tensor[(5, 16, 12), int32] */;
  %635 = @func_9529(%625, %626) /* ty=Tensor[(8, 12, ?), bool] */;
  %636 = %631.0;
  %637 = %632.1;
  %638 = %633.1;
  (%634, %635, meta[relay.Constant][17] /* ty=Tensor[(96), bool] */, %636, %var_19461, %637, %638)
}

def @func_21063(%var_21058: Tensor[(160), float32]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(160), float32]) {
  %639 = @func_18749() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %640 = cast(%var_21058, dtype="float32") /* ty=Tensor[(160), float32] */;
  %641 = reshape(%640, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), float32] */;
  %642 = @func_13163(%641) /* ty=(Tensor[(5, 8, 4), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), float32], Tensor[(5, 16, 12), float32]) */;
  %643 = %639.0;
  %644 = %642.3;
  (%643, %644, %var_21058)
}

def @func_22482() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %645 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
  %646 = @func_3576() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %647 = @func_19336() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %648 = %645.0;
  %649 = %646.0;
  %650 = %647.3;
  (%648, %649, %650)
}

def @func_23436() -> (Tensor[(12, 1, 1), float64],) {
  %651 = @func_22251() /* ty=Tensor[(12, 1, 1), float64] */;
  (%651,)
}

def @func_1725() -> Tensor[(5, 16, 12), float32] {
  @func_255() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_6287() -> Tensor[(5, 16, 12), int32] {
  @func_2054() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_24269(%var_24228: int64) -> (Tensor[(12, 15, 5), int64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %652 = cast(%var_24228, dtype="int64") /* ty=int64 */;
  %653 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 15, 5), int64] */, dtype="int64") /* ty=Tensor[(12, 15, 5), int64] */;
  %654 = @func_14186() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %655 = right_shift(%652, %653) /* ty=Tensor[(12, 15, 5), int64] */;
  %656 = %654.0;
  %657 = @func_18493() /* ty=Tensor[(5, 16, 12), int32] */;
  (%655, %656, %657)
}

def @func_17414() -> (Tensor[(5, 16, 12), float32],) {
  %658 = @func_12956() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), int32]) */;
  %659 = %658.0;
  (%659,)
}

def @func_20965() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %660 = @func_16144() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %661 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %662 = %660.1;
  %663 = %661.1;
  (%662, %663)
}

def @func_14967() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %664 = @func_14140() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %665 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %666 = %664.0;
  %667 = %665.1;
  (%666, %667)
}

def @func_1342() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %668 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %669 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %670 = %668.0;
  %671 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %672 = %669.1;
  (%670, %671, %672)
}

def @func_23997() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(616), uint64], Tensor[(616), uint64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %673 = @func_18236() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %674 = @func_21283() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %675 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), uint64] */, dtype="uint64") /* ty=Tensor[(616), uint64] */;
  %676 = reshape(%675, newshape=[616]) /* ty=Tensor[(616), uint64] */;
  %677 = @func_8297(%676) /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), uint64]) */;
  %678 = @func_22449() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %679 = @func_10371() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %680 = %673.0;
  %681 = %674.0;
  %682 = %677.4;
  %683 = %678.1;
  %684 = @func_8200() /* ty=Tensor[(5, 16, 12), float32] */;
  %685 = %679.0;
  (%680, %681, %682, meta[relay.Constant][19] /* ty=Tensor[(616), uint64] */, %683, %684, %685)
}

def @func_9094() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) {
  %686 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %687 = cast(meta[relay.Constant][20] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
  %688 = cast(meta[relay.Constant][20] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
  %689 = reshape(%687, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %690 = reshape(%688, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %691 = @func_918(%689, %690) /* ty=(Tensor[(5, 8, 4), int32],) */;
  %692 = %686.0;
  %693 = %691.0;
  (%692, %693, meta[relay.Constant][20] /* ty=Tensor[(160), int32] */)
}

def @func_10335() -> Tensor[(5, 16, 12), float32] {
  %694 = @func_2139() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %694.2
}

def @func_13590() -> (Tensor[(5, 16, 12), float32],) {
  %695 = @func_11720() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %696 = %695.1;
  (%696,)
}

def @func_8466() -> (Tensor[(5, 16, 12), float32],) {
  %697 = @func_4063() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %698 = %697.1;
  (%698,)
}

def @func_3169() -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
  %699 = @func_1875() /* ty=(Tensor[(12, 10, 15), uint8],) */;
  %700 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %701 = %699.0;
  %702 = %700.1;
  (%701, %702)
}

def @func_6397() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) {
  %703 = @func_1404() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
  %704 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %705 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
  %706 = %703.0;
  %707 = %704.3;
  (%705, %706, %707)
}

def @func_8647() -> Tensor[(5, 16, 12), float32] {
  %708 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %708.0
}

def @func_17746() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %709 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %710 = @func_14613() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %711 = @func_10108() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %712 = %709.1;
  %713 = %710.1;
  %714 = %711.1;
  %715 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
  (%712, %713, %714, %715)
}

def @func_240() -> Tensor[(5, 16, 12), float32] {
  %716 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  atanh(%716) /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_21491() -> (Tensor[(160), int32],) {
  %717 = @func_14321() /* ty=Tensor[(160), int32] */;
  (%717,)
}

def @func_20581() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %718 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %719 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %720 = %718.0;
  %721 = %719.0;
  (%720, %721)
}

def @func_12485() -> Tensor[(5, 16, 12), int32] {
  %722 = @func_5545() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %722.0
}

def @func_12183() -> (Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) {
  %723 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %724 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
  %725 = cast(%724, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %726 = %723.0;
  %727 = cosh(%725) /* ty=Tensor[(12, 1, 1), float64] */;
  (%726, %727)
}

def @func_16837() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) {
  %728 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %729 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %730 = %728.0;
  %731 = %729.1;
  (%730, %731)
}

def @func_23610() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %732 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  %733 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
  (%732, %733)
}

def @func_18316() -> (Tensor[(5, 16, 12), float32],) {
  %734 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  (%734,)
}

def @func_6261() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %735 = @func_4450() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %736 = %735.0;
  %737 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
  (%736, %737)
}

def @func_453() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %738 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  %739 = cast(%738, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  %740 = rsqrt(%739) /* ty=Tensor[(5, 16, 12), float64] */;
  %741 = cast(%738, dtype="int32") /* ty=Tensor[(5, 16, 12), int32] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%740, dtype="int32") /* ty=Tensor[(5, 16, 12), int32] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %745 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %746 = multiply(%743, %744) /* ty=Tensor[(5, 16, 12), int32] */;
  (%745, %746)
}

def @func_863() -> Tensor[(5, 16, 12), float32] {
  @func_240() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_9751() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %747 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
  %748 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  (%747, %748)
}

def @func_2966() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) {
  %749 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %750 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  %751 = %749.0;
  (%750, %751)
}

def @func_15212() -> Tensor[(12, 10, 15), uint8] {
  %752 = @func_1875() /* ty=(Tensor[(12, 10, 15), uint8],) */;
  %752.0
}

def @func_16213() -> (Tensor[(5, 16, 12), float32],) {
  %753 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  (%753,)
}

def @func_22534() -> Tensor[(11, 5, 7), float64] {
  %754 = @func_20480() /* ty=(Tensor[(11, 5, 7), float32], Tensor[(5, 16, 12), float32]) */;
  %755 = %754.0;
  %756 = cast(%755, dtype="float64") /* ty=Tensor[(11, 5, 7), float64] */;
  atan(%756) /* ty=Tensor[(11, 5, 7), float64] */
}

def @func_2420() -> (Tensor[(5, 16, 12), float32],) {
  %757 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  (%757,)
}

def @func_22561() -> (Tensor[(360), uint8],) {
  %758 = @func_6504() /* ty=Tensor[(360), uint8] */;
  (%758,)
}

def @func_22347() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %759 = @func_11655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %760 = @func_16144() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %761 = @func_14450() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %762 = @func_14140() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %763 = %759.0;
  %764 = %760.0;
  %765 = %761.0;
  %766 = %762.1;
  (%763, %764, %765, %766)
}

def @func_6618() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %767 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %768 = %767.1;
  %769 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
  (%768, %769)
}

def @func_2139() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %770 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %771 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %772 = %770.0;
  %773 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %774 = %771.0;
  (%772, %773, %774)
}

def @func_13649() -> (Tensor[(12, 10, 15), int64],) {
  %775 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %776 = %775.0;
  (%776,)
}

def @func_16144() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %777 = @func_12802() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %778 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %779 = %777.0;
  %780 = %778.0;
  (%779, %780)
}

def @func_22387(%var_22377: Tensor[(2, 840), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 840), float32]) {
  %781 = @func_16349() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %782 = @func_8466() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %783 = cast(%var_22377, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
  %784 = cast(%var_22377, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
  %785 = reshape(%783, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %786 = reshape(%784, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %787 = @func_18561(%785, %786) /* ty=Tensor[(14, 12, 10), float64] */;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %789 = shape_of(%var_22377, dtype="int32") /* ty=Tensor[(2), int32] */;
  %790 = cast(%var_22377, dtype="float32") /* ty=Tensor[(2, 840), float32] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %792 = %781.0;
  %793 = @func_17969() /* ty=Tensor[(5, 16, 12), float32] */;
  %794 = %782.0;
  %795 = power(%790, %791) /* ty=Tensor[(2, 840), float32] */;
  (%792, %793, %794, %795)
}

def @func_15378() -> Tensor[(5, 16, 12), int32] {
  @func_10328() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_10232() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %796 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %797 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %798 = @func_8224() /* ty=Tensor[(5, 16, 12), float32] */;
  %799 = %796.2;
  %800 = %797.1;
  (%798, %799, %800)
}

def @func_19111() -> (Tensor[(12, 1, 1), float64],) {
  %801 = @func_17562() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %802 = %801.0;
  (%802,)
}

def @func_17076() -> (Tensor[(5, 16, 12), float32],) {
  %803 = @func_8224() /* ty=Tensor[(5, 16, 12), float32] */;
  (%803,)
}

def @func_22289() -> (Tensor[(5, 16, 12), float32],) {
  %804 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %805 = %804.0;
  (%805,)
}

def @func_18561(%var_18556: Tensor[(14, 12, 10), float64], %var_18557: Tensor[(14, 12, 10), float64]) -> Tensor[(14, 12, 10), float64] {
  %806 = cast(%var_18557, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %807 = shape_of(%var_18556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%var_18556, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%808, %809) /* ty=Tensor[(14, 12, 10), float64] */
}

def @func_21798() -> (Tensor[(5, 16, 12), int32],) {
  %810 = @func_19083() /* ty=(Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), int32]) */;
  %811 = %810.1;
  (%811,)
}

def @func_10660() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) {
  %812 = @func_2603() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %813 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %814 = %812.0;
  %815 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  %816 = %813.0;
  (%814, %815, %816)
}

def @func_3680() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %817 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %818 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %819 = %817.0;
  (%818, %819)
}

def @func_4527() -> (Tensor[(5, 16, 12), float32],) {
  %820 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %821 = %820.1;
  (%821,)
}

def @func_16981() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %822 = @func_4341() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %823 = %822.0;
  %824 = @func_10938() /* ty=Tensor[(5, 16, 12), float32] */;
  %825 = @func_3196() /* ty=Tensor[(5, 16, 12), float32] */;
  (%823, %824, %825)
}

def @func_6984() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %826 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %827 = @func_6462() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %828 = %826.0;
  %829 = %827.0;
  (%828, %829)
}

def @func_3031() -> Tensor[(2, 15, 12), uint8] {
  %830 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %830.1
}

def @func_2539() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %831 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %832 = @func_1863() /* ty=Tensor[(5, 16, 12), float32] */;
  %833 = %831.1;
  (%832, %833)
}

def @func_6504() -> Tensor[(360), uint8] {
  %834 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %834.2
}

def @func_7476() -> (Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %835 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %836 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %837 = %836.0;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(10, 4, 5), float64] */;
  %839 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %840 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %841 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %842 = %835.1;
  %843 = rsqrt(%838) /* ty=Tensor[(10, 4, 5), float64] */;
  %844 = %839.0;
  %845 = %840.0;
  %846 = %841.0;
  %847 = @func_6287() /* ty=Tensor[(5, 16, 12), int32] */;
  (%842, %843, %844, %845, %846, %847)
}

def @func_7555() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %848 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %849 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %850 = @func_6462() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %851 = %848.0;
  %852 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  %853 = %849.0;
  %854 = %850.0;
  (%851, %852, %853, %854)
}

def @func_14410() -> Tensor[(5, 16, 12), float32] {
  %855 = @func_5067() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %855.0
}

def @func_9021() -> (Tensor[(5, 16, 12), float32],) {
  %856 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  (%856,)
}

def @func_1404() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %857 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %858 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %859 = %857.0;
  %860 = %858.0;
  (%859, %860)
}

def @func_16610(%var_16599: uint16) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 4), uint16], uint16, Tensor[(48), uint16]) {
  %861 = @func_14967() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %862 = cast(%var_16599, dtype="uint16") /* ty=uint16 */;
  %863 = cast(meta[relay.Constant][22] /* ty=Tensor[(48), uint16] */, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %864 = reshape(%862, newshape=[]) /* ty=uint16 */;
  %865 = reshape(%863, newshape=[12, 1, 4]) /* ty=Tensor[(12, 1, 4), uint16] */;
  %866 = %861.1;
  %867 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  %868 = @func_14493(%864, %865) /* ty=Tensor[(12, 1, 4), uint16] */;
  (%866, %867, %868, %var_16599, meta[relay.Constant][22] /* ty=Tensor[(48), uint16] */)
}

def @func_22429() -> (Tensor[(2, 15, 12), uint8],) {
  %869 = @func_10660() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) */;
  %870 = %869.1;
  (%870,)
}

def @func_21256(%var_21252: Tensor[(6, 7, 8), float32]) -> Tensor[(6, 7, 8), float32] {
  %871 = cast(%var_21252, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  sqrt(%871) /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_12758() -> (Tensor[(15, 9, 2), float32],) {
  %872 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 2), float32] */;
  %873 = sigmoid(%872) /* ty=Tensor[(15, 9, 2), float32] */;
  (%873,)
}

def @func_21723() -> (Tensor[(5, 16, 12), float32],) {
  %874 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %875 = %874.2;
  (%875,)
}

def @func_1154() -> Tensor[(5, 16, 12), float32] {
  @func_255() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_11951() -> Tensor[(5, 16, 12), float32] {
  %876 = @func_4467() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %876.1
}

def @func_14504() -> (Tensor[(5, 16, 12), int32],) {
  %877 = @func_12607() /* ty=Tensor[(5, 16, 12), int32] */;
  (%877,)
}

def @func_18340() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %878 = @func_17949() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %879 = @func_4063() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %880 = @func_12485() /* ty=Tensor[(5, 16, 12), int32] */;
  %881 = %878.2;
  %882 = %879.0;
  (%880, %881, %882)
}

def @func_13171() -> (Tensor[(12, 1, 1), float64],) {
  %883 = @func_7195() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %884 = %883.0;
  (%884,)
}

def @func_2202(%var_2151: Tensor[(864), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float64], Tensor[(5, 16, 12), float32]) {
  %885 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %886 = cast(%var_2151, dtype="float32") /* ty=Tensor[(864), float32] */;
  %887 = reshape(%886, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
  %888 = @func_1731(%887) /* ty=Tensor[(9, 12, 8), float32] */;
  %889 = cast(%888, dtype="float64") /* ty=Tensor[(9, 12, 8), float64] */;
  %890 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %891 = @func_1725() /* ty=Tensor[(5, 16, 12), float32] */;
  %892 = %885.0;
  %893 = sqrt(%889) /* ty=Tensor[(9, 12, 8), float64] */;
  %894 = %890.1;
  (%891, %var_2151, %892, %893, %894)
}

def @func_3529() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %895 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %896 = %895.0;
  %897 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  (%896, %897)
}

def @func_8819() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %898 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %899 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %900 = %898.1;
  %901 = %899.0;
  (%900, %901)
}

def @func_16637() -> Tensor[(5, 16, 12), float32] {
  @func_8411() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_10328() -> Tensor[(5, 16, 12), int32] {
  %902 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %902.1
}

def @func_24200() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %903 = @func_7555() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %904 = @func_19620() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %905 = @func_11791() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %906 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %907 = %903.3;
  %908 = %904.1;
  %909 = @func_7565() /* ty=Tensor[(5, 16, 12), int32] */;
  %910 = %905.2;
  %911 = %906.1;
  %912 = @func_20307() /* ty=Tensor[(5, 16, 12), int32] */;
  (%907, %908, %909, %910, %911, %912)
}

def @func_16692() -> (Tensor[(360), uint8],) {
  %913 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %914 = %913.2;
  (%914,)
}

def @func_10150(%var_10137: Tensor[(350), float32]) -> (Tensor[(350), bool], Tensor[(5, 16, 12), float64]) {
  %915 = @func_7945() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */;
  %916 = %915.2;
  %917 = cast(%var_10137, dtype="bool") /* ty=Tensor[(350), bool] */;
  %918 = shape_of(%916, dtype="int32") /* ty=Tensor[(1), int32] */;
  %919 = cast(%916, dtype="bool") /* ty=Tensor[(350), bool] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?), bool] */;
  %921 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %922 = greater(%919, %920) /* ty=Tensor[(350), bool] */;
  %923 = %921.0;
  (%922, %923)
}

def @func_14613() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %924 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %925 = @func_13069() /* ty=Tensor[(5, 16, 12), int32] */;
  %926 = %924.1;
  (%925, %926)
}

def @func_23164() -> Tensor[(5, 16, 12), float32] {
  %927 = @func_13726() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %927.0
}

def @func_4625() -> Tensor[(5, 16, 12), float32] {
  %928 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %928.0
}

def @func_4928(%var_4920: Tensor[(350), float32]) -> (Tensor[(12, 10, 15), uint8], Tensor[(12, 10, 15), int64], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %929 = @func_1875() /* ty=(Tensor[(12, 10, 15), uint8],) */;
  %930 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %931 = cast(%var_4920, dtype="float32") /* ty=Tensor[(350), float32] */;
  %932 = reshape(%931, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %933 = @func_3463(%932) /* ty=(Tensor[(5, 5, 14), float32],) */;
  %934 = %929.0;
  %935 = %930.0;
  %936 = %933.0;
  (%934, %935, %936, %var_4920)
}

def @func_1236(%var_1156: Tensor[(7, 1, 3), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) {
  %937 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %938 = cast(meta[relay.Constant][24] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
  %939 = cast(meta[relay.Constant][24] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
  %940 = reshape(%938, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %941 = reshape(%939, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %942 = @func_918(%940, %941) /* ty=(Tensor[(5, 8, 4), int32],) */;
  %943 = cast(%var_1156, dtype="float32") /* ty=Tensor[(7, 1, 3), float32] */;
  %944 = atanh(%943) /* ty=Tensor[(7, 1, 3), float32] */;
  %945 = cast(%var_1156, dtype="float32") /* ty=Tensor[(7, 1, 3), float32] */;
  %946 = shape_of(%944, dtype="int32") /* ty=Tensor[(3), int32] */;
  %947 = cast(%944, dtype="float32") /* ty=Tensor[(7, 1, 3), float32] */;
  %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %949 = %937.1;
  %950 = %942.0;
  %951 = floor_divide(%947, %948) /* ty=Tensor[(7, ?, 3), float32] */;
  (%949, %950, meta[relay.Constant][24] /* ty=Tensor[(160), int32] */, %951)
}

def @func_7769(%var_7683: uint64, %var_7684: Tensor[(1, 616), uint64]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(1, 616), bool], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(1, 616), uint16], Tensor[(5, 16, 12), bool]) {
  %952 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %953 = cast(%var_7683, dtype="uint64") /* ty=uint64 */;
  %954 = cast(%var_7684, dtype="uint64") /* ty=Tensor[(1, 616), uint64] */;
  %955 = reshape(%953, newshape=[]) /* ty=uint64 */;
  %956 = reshape(%954, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
  %957 = @func_6727(%955, %956) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
  %958 = cast(%var_7684, dtype="bool") /* ty=Tensor[(1, 616), bool] */;
  %959 = cast(%var_7683, dtype="bool") /* ty=bool */;
  %960 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %961 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %962 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %963 = cast(%var_7683, dtype="uint16") /* ty=uint16 */;
  %964 = cast(%var_7684, dtype="uint16") /* ty=Tensor[(1, 616), uint16] */;
  %965 = @func_2459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) */;
  %966 = %952.0;
  %967 = %957.0;
  %968 = less(%958, %959) /* ty=Tensor[(1, 616), bool] */;
  %969 = %960.2;
  %970 = %961.0;
  %971 = %962.2;
  %972 = @func_7667() /* ty=Tensor[(5, 16, 12), float32] */;
  %973 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  %974 = add(%963, %964) /* ty=Tensor[(1, 616), uint16] */;
  %975 = %965.1;
  (%966, %967, %968, %969, %970, %971, %972, %973, %974, %975)
}

def @func_5112() -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) {
  %976 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %977 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 144), float32] */, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
  %978 = reshape(%977, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %979 = @func_2202(%978) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float64], Tensor[(5, 16, 12), float32]) */;
  %980 = %976.1;
  %981 = %979.1;
  (%980, %981, meta[relay.Constant][25] /* ty=Tensor[(6, 144), float32] */)
}

def @func_4238() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %982 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %983 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  %984 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %985 = %982.0;
  (%983, %984, %985)
}

def @func_11229() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %986 = @func_7555() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %987 = @func_3655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %988 = @func_4527() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %989 = %986.2;
  %990 = %987.0;
  %991 = %988.0;
  (%989, %990, %991)
}

def @func_14304() -> Tensor[(5, 16, 12), int32] {
  %992 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %992.1
}

def @func_19083() -> (Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), int32]) {
  %993 = @func_17692() /* ty=(Tensor[(5, 8, 4), int32],) */;
  %994 = @func_11985() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %995 = %993.0;
  %996 = %994.0;
  (%995, %996)
}

def @func_2348(%var_2319: Tensor[(864), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) {
  %997 = cast(%var_2319, dtype="float32") /* ty=Tensor[(864), float32] */;
  %998 = reshape(%997, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
  %999 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1000 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  %1001 = @func_1731(%998) /* ty=Tensor[(9, 12, 8), float32] */;
  %1002 = %999.0;
  (%1000, %1001, %var_2319, %1002)
}

def @func_4291() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1003 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1004 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1005 = %1003.1;
  %1006 = %1004.1;
  (%1005, %1006)
}

def @func_16349() -> (Tensor[(5, 16, 12), float32],) {
  %1007 = @func_11229() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1008 = %1007.0;
  (%1008,)
}

def @func_15945(%var_15912: Tensor[(14, 10, 1), float32]) -> (Tensor[(14, 10, 1), float64], Tensor[(5, 16, 12), float32]) {
  %1009 = cast(%var_15912, dtype="float32") /* ty=Tensor[(14, 10, 1), float32] */;
  %1010 = erf(%1009) /* ty=Tensor[(14, 10, 1), float32] */;
  %1011 = cast(%1010, dtype="float64") /* ty=Tensor[(14, 10, 1), float64] */;
  %1012 = @func_15327() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1013 = log10(%1011) /* ty=Tensor[(14, 10, 1), float64] */;
  %1014 = %1012.2;
  (%1013, %1014)
}

def @func_559() -> Tensor[(5, 16, 12), int32] {
  %1015 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1015.1
}

def @func_7331() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1016 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1017 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1018 = %1016.0;
  %1019 = %1017.0;
  %1020 = @func_5773() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1018, %1019, %1020)
}

def @func_289() -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) {
  %1021 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 4, 5), float32] */;
  %1022 = cos(%1021) /* ty=Tensor[(10, 4, 5), float32] */;
  %1023 = cast(%1022, dtype="float32") /* ty=Tensor[(10, 4, 5), float32] */;
  %1024 = erf(%1023) /* ty=Tensor[(10, 4, 5), float32] */;
  %1025 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1024, %1025)
}

def @func_8433() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %1026 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1027 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1028 = %1026.3;
  %1029 = %1027.0;
  (%1028, %1029)
}

def @func_12347() -> (Tensor[(360), uint8], Tensor[(5, 8, 4), float32]) {
  %1030 = @func_10999() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1031 = @func_10828() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) */;
  %1032 = %1031.1;
  %1033 = cast(%1032, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
  %1034 = %1030.0;
  %1035 = cosh(%1033) /* ty=Tensor[(5, 8, 4), float32] */;
  (%1034, %1035)
}

def @func_17046() -> (Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(6, 144), float64]) {
  %1036 = @func_7599() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %1037 = @func_6984() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1038 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
  %1039 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
  %1040 = %1039.2;
  %1041 = cast(%1040, dtype="float64") /* ty=Tensor[(6, 144), float64] */;
  %1042 = %1036.1;
  %1043 = %1037.1;
  %1044 = %1038.0;
  %1045 = log(%1041) /* ty=Tensor[(6, 144), float64] */;
  (%1042, %1043, %1044, %1045)
}

def @func_23830() -> Tensor[(5, 16, 12), int32] {
  %1046 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1046.1
}

def @func_9703() -> (Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), uint8]) {
  %1047 = @func_9503() /* ty=(Tensor[(2, 15, 12), uint8],) */;
  %1048 = %1047.0;
  %1049 = cast(%1048, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %1050 = tan(%1049) /* ty=Tensor[(2, 15, 12), float32] */;
  %1051 = cast(%1050, dtype="uint8") /* ty=Tensor[(2, 15, 12), uint8] */;
  %1052 = reshape(%1051, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), uint8] */;
  %1053 = @func_1929(%1052) /* ty=(Tensor[(2, 15, 12), uint8],) */;
  %1054 = %1053.0;
  (%1050, %1054)
}

def @func_21768() -> Tensor[(5, 16, 12), float32] {
  %1055 = @func_18834() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) */;
  %1055.0
}

def @func_4467() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1056 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1057 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1058 = %1056.0;
  %1059 = %1057.0;
  (%1058, %1059)
}

def @func_2256() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %1060 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1061 = cast(meta[relay.Constant][27] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1062 = reshape(%1061, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), uint8] */;
  %1063 = @func_1929(%1062) /* ty=(Tensor[(2, 15, 12), uint8],) */;
  %1064 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1065 = %1060.1;
  %1066 = %1063.0;
  %1067 = %1064.1;
  (%1065, %1066, meta[relay.Constant][27] /* ty=Tensor[(360), uint8] */, %1067)
}

def @func_10507(%var_10490: uint32, %var_10491: Tensor[(14, 4, 13), uint32]) -> Tensor[(14, 4, 13), uint32] {
  %1068 = cast(%var_10490, dtype="uint32") /* ty=uint32 */;
  %1069 = cast(%var_10491, dtype="uint32") /* ty=Tensor[(14, 4, 13), uint32] */;
  subtract(%1068, %1069) /* ty=Tensor[(14, 4, 13), uint32] */
}

def @func_3242() -> Tensor[(5, 16, 12), float32] {
  %1070 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1070.0
}

def @func_2669(%var_2629: Tensor[(21), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1071 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1072 = cast(%var_2629, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1073 = reshape(%1072, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), float32] */;
  %1074 = @func_1236(%1073) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) */;
  %1075 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1076 = %1071.2;
  %1077 = %1074.0;
  %1078 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %1079 = %1075.0;
  (%1076, %1077, %var_2629, %1078, %1079)
}

def @func_3357() -> (Tensor[(12, 1, 1), float64],) {
  %1080 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 1, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %1081 = log2(%1080) /* ty=Tensor[(12, 1, 1), float64] */;
  (%1081,)
}

def @func_23523() -> (Tensor[(5, 16, 12), float32],) {
  %1082 = @func_20200() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1083 = %1082.0;
  (%1083,)
}

def @func_12233() -> (Tensor[(5, 16, 12), int32],) {
  %1084 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1085 = %1084.0;
  (%1085,)
}

def @func_17837() -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) {
  %1086 = @func_17046() /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(6, 144), float64]) */;
  %1087 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
  %1088 = %1086.1;
  %1089 = %1087.1;
  %1090 = @func_9207() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1088, %1089, %1090)
}

def @func_9481() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1091 = @func_8015() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1092 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1093 = %1091.2;
  %1094 = %1092.0;
  %1095 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  %1096 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1093, %1094, %1095, %1096)
}

def @func_6104() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %1097 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1098 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %1099 = %1097.1;
  %1100 = %1098.0;
  (%1099, %1100)
}

def @func_9892(%var_9858: Tensor[(160), int32], %var_9879: Tensor[(126), uint32]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32]) {
  %1101 = cast(%var_9858, dtype="int32") /* ty=Tensor[(160), int32] */;
  %1102 = cast(%var_9858, dtype="int32") /* ty=Tensor[(160), int32] */;
  %1103 = reshape(%1101, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %1104 = reshape(%1102, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %1105 = @func_918(%1103, %1104) /* ty=(Tensor[(5, 8, 4), int32],) */;
  %1106 = @func_5903() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) */;
  %1107 = cast(%var_9879, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %1108 = cast(%var_9879, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %1109 = reshape(%1107, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %1110 = reshape(%1108, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %1111 = @func_2845(%1109, %1110) /* ty=(Tensor[(6, 3, 7), bool],) */;
  %1112 = @func_6580() /* ty=Tensor[(5, 16, 12), float64] */;
  %1113 = %1105.0;
  %1114 = %1106.1;
  %1115 = %1111.0;
  (%1112, %1113, %var_9858, %1114, %1115, %var_9879)
}

def @func_11678(%var_11670: Tensor[(96), bool]) -> (Tensor[(5, 16, 12), float32], Tensor[(8, 12, ?), bool], Tensor[(96), bool]) {
  %1116 = cast(%var_11670, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1117 = cast(%var_11670, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1118 = reshape(%1116, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
  %1119 = reshape(%1117, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
  %1120 = @func_8647() /* ty=Tensor[(5, 16, 12), float32] */;
  %1121 = @func_9529(%1118, %1119) /* ty=Tensor[(8, 12, ?), bool] */;
  (%1120, %1121, %var_11670)
}

def @func_13494() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1122 = @func_8771() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1123 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1124 = %1122.0;
  %1125 = %1123.0;
  (%1124, %1125)
}

def @func_11549() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1126 = @func_11274() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1127 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %1128 = %1126.0;
  %1129 = %1127.0;
  (%1128, %1129)
}

def @func_3924() -> Tensor[(5, 16, 12), int32] {
  %1130 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1130.0
}

def @func_20135(%var_20101: Tensor[(16, 8, 1), bool], %var_20107: Tensor[(864), float32], %var_20125: Tensor[(21), float32]) -> (Tensor[(16, 8, 1), bool], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(7, ?, 3), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32]) {
  %1131 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1132 = cast(%var_20101, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %1133 = cast(%var_20107, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1134 = reshape(%1133, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
  %1135 = @func_16463() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1136 = cast(%var_20125, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1137 = reshape(%1136, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), float32] */;
  %1138 = @func_1236(%1137) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) */;
  %1139 = @func_13590() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1140 = logical_or(%1131, %1132) /* ty=Tensor[(16, 8, 1), bool] */;
  %1141 = @func_1731(%1134) /* ty=Tensor[(9, 12, 8), float32] */;
  %1142 = %1135.0;
  %1143 = %1138.3;
  %1144 = %1139.0;
  (%1140, %1141, %var_20107, %1142, %1143, %var_20125, %1144)
}

def @func_1289() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1145 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %1146 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1145, %1146)
}

def @func_9062() -> (Tensor[(5, 16, 12), float32],) {
  %1147 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1148 = %1147.0;
  (%1148,)
}

def @func_14450() -> (Tensor[(5, 16, 12), float32],) {
  %1149 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1150 = %1149.0;
  (%1150,)
}

def @func_8771() -> (Tensor[(5, 16, 12), float32],) {
  %1151 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1151,)
}

def @func_11036() -> (Tensor[(5, 16, 12), float32],) {
  %1152 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1153 = %1152.0;
  (%1153,)
}

def @func_415() -> Tensor[(5, 16, 12), float32] {
  @func_240() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_2745() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %1154 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1155 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1156 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1157 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1158 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1159 = %1154.0;
  %1160 = %1155.0;
  %1161 = %1156.1;
  %1162 = %1157.0;
  %1163 = %1158.0;
  (%1159, %1160, %1161, %1162, %1163)
}

def @func_7599() -> (Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  %1164 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1165 = cast(meta[relay.Constant][29] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1166 = reshape(%1165, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %1167 = @func_6349(%1166) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %1168 = %1164.0;
  %1169 = %1167.1;
  (%1168, %1169, meta[relay.Constant][29] /* ty=Tensor[(624), float64] */)
}

def @func_21455() -> (Tensor[(12, 10, 15), float64], Tensor[(21), uint32], Tensor[(1, 21), float32], Tensor[(5, 16, 12), float32]) {
  %1170 = @func_15444() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(12, 10, 15), float32]) */;
  %1171 = %1170.1;
  %1172 = cast(%1171, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %1173 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 21), float32] */, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %1174 = reshape(%1173, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1175 = @func_10721(%1174) /* ty=(Tensor[(21), uint32],) */;
  %1176 = @func_11828() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1177 = exp(%1172) /* ty=Tensor[(12, 10, 15), float64] */;
  %1178 = %1175.0;
  %1179 = %1176.0;
  (%1177, %1178, meta[relay.Constant][30] /* ty=Tensor[(1, 21), float32] */, %1179)
}

def @func_17969() -> Tensor[(5, 16, 12), float32] {
  @func_3422() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_17692() -> (Tensor[(5, 8, 4), int32],) {
  %1180 = @func_10828() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) */;
  %1181 = %1180.1;
  (%1181,)
}

def @func_4398() -> Tensor[(5, 16, 12), int32] {
  %1182 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %1182.2
}

def @func_8034() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1183 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1184 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  %1185 = %1183.1;
  (%1184, %1185)
}

def @func_15179() -> Tensor[(5, 16, 12), int32] {
  %1186 = @func_12233() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1186.0
}

def @func_5545() -> (Tensor[(5, 16, 12), int32],) {
  %1187 = @func_3924() /* ty=Tensor[(5, 16, 12), int32] */;
  (%1187,)
}

def @func_16751() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1188 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1189 = @func_3924() /* ty=Tensor[(5, 16, 12), int32] */;
  %1190 = %1188.0;
  (%1189, %1190)
}

def @func_14437() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) {
  %1191 = @func_6574() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) */;
  %1192 = @func_6580() /* ty=Tensor[(5, 16, 12), float64] */;
  %1193 = %1191.0;
  (%1192, %1193)
}

def @func_18862() -> (Tensor[(5, 16, 12), float32],) {
  %1194 = @func_8466() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_17301() -> Tensor[(5, 16, 12), float32] {
  %1196 = @func_14140() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1196.0
}

def @func_23498() -> Tensor[(5, 16, 12), float32] {
  @func_1725() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_13036(%var_13017: uint64) -> (Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), float64]) {
  %1197 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1198 = cast(%var_13017, dtype="uint64") /* ty=uint64 */;
  %1199 = cast(meta[relay.Constant][31] /* ty=Tensor[(616), uint64] */, dtype="uint64") /* ty=Tensor[(616), uint64] */;
  %1200 = reshape(%1198, newshape=[]) /* ty=uint64 */;
  %1201 = reshape(%1199, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
  %1202 = @func_6727(%1200, %1201) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
  %1203 = cast(meta[relay.Constant][31] /* ty=Tensor[(616), uint64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1204 = %1197.0;
  %1205 = %1202.1;
  %1206 = rsqrt(%1203) /* ty=Tensor[(616), float64] */;
  (%1204, %1205, %var_13017, %1206)
}

def @func_7920(%var_7901: Tensor[(5, 16, 12), float64]) -> Tensor[(5, 16, 12), uint64] {
  %1207 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1208 = %1207.0;
  %1209 = cast(%var_7901, dtype="uint64") /* ty=Tensor[(5, 16, 12), uint64] */;
  %1210 = shape_of(%1208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1211 = cast(%1208, dtype="uint64") /* ty=Tensor[(5, 16, 12), uint64] */;
  %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%1211, %1212) /* ty=Tensor[(5, 16, 12), uint64] */
}

def @func_255() -> Tensor[(5, 16, 12), float32] {
  @func_240() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_1078() -> (Tensor[(5, 16, 12), int32],) {
  %1213 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  (%1213,)
}

def @func_6580() -> Tensor[(5, 16, 12), float64] {
  %1214 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1214.0
}

def @func_24451() -> Tensor[(5, 16, 12), float32] {
  @func_240() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_13841() -> (Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1215 = @func_7195() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %1216 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1217 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1218 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1219 = @func_5545() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1220 = %1215.0;
  %1221 = %1216.1;
  %1222 = %1217.1;
  %1223 = %1218.0;
  %1224 = %1219.0;
  (%1220, %1221, %1222, %1223, %1224)
}

def @func_1483() -> Tensor[(5, 16, 12), float32] {
  %1225 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1226 = %1225.0;
  %1227 = cast(%1226, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  exp(%1227) /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_20549() -> (Tensor[(5, 16, 12), float64],) {
  %1228 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %1229 = %1228.1;
  (%1229,)
}

def @func_15444() -> (Tensor[(5, 16, 12), int32], Tensor[(12, 10, 15), float32]) {
  %1230 = @func_15212() /* ty=Tensor[(12, 10, 15), uint8] */;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
  %1232 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
  %1233 = sinh(%1231) /* ty=Tensor[(12, 10, 15), float32] */;
  (%1232, %1233)
}

def @func_17457() -> (Tensor[(5, 16, 12), float32],) {
  %1234 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1235 = %1234.1;
  (%1235,)
}

def @func_6493() -> Tensor[(5, 16, 12), float32] {
  %1236 = @func_5067() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1236.0
}

def @func_16776() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1237 = @func_4527() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1238 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1239 = %1237.0;
  %1240 = %1238.0;
  (%1239, %1240)
}

def @func_17474() -> Tensor[(5, 16, 12), float64] {
  @func_13187() /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_3720(%var_3705: Tensor[(350), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %1241 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %1242 = cast(%var_3705, dtype="float32") /* ty=Tensor[(350), float32] */;
  %1243 = reshape(%1242, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %1244 = @func_3463(%1243) /* ty=(Tensor[(5, 5, 14), float32],) */;
  %1245 = %1241.0;
  %1246 = %1244.0;
  (%1245, %1246, %var_3705)
}

def @func_8702() -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1247 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1248 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %1249 = %1247.0;
  %1250 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
  %1251 = %1248.3;
  (%1249, %1250, %1251)
}

def @func_20485() -> (Tensor[(5, 16, 12), float64],) {
  %1252 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1253 = %1252.0;
  (%1253,)
}

def @func_5773() -> Tensor[(5, 16, 12), float32] {
  %1254 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1254.0
}

def @func_7195() -> (Tensor[(12, 1, 1), float64],) {
  %1255 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %1256 = %1255.1;
  (%1256,)
}

def @func_3576() -> (Tensor[(5, 16, 12), float32],) {
  %1257 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1257,)
}

def @func_13518() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %1258 = cast(meta[relay.Constant][32] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %1259 = reshape(%1258, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %1260 = @func_3463(%1259) /* ty=(Tensor[(5, 5, 14), float32],) */;
  %1261 = @func_9901() /* ty=Tensor[(5, 16, 12), float32] */;
  %1262 = %1260.0;
  (%1261, %1262, meta[relay.Constant][32] /* ty=Tensor[(350), float32] */)
}

def @func_7667() -> Tensor[(5, 16, 12), float32] {
  @func_4625() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_22651() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1263 = @func_12233() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1264 = @func_17414() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1265 = %1263.0;
  %1266 = %1264.0;
  (%1265, %1266)
}

def @func_14829() -> Tensor[(5, 16, 12), float32] {
  %1267 = @func_14186() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1267.0
}

def @func_2818() -> Tensor[(360), uint8] {
  %1268 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1268.2
}

def @func_17515() -> (Tensor[(5, 16, 12), float32],) {
  %1269 = @func_11497() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1270 = %1269.0;
  (%1270,)
}

def @func_22871() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %1271 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
  %1272 = @func_17474() /* ty=Tensor[(5, 16, 12), float64] */;
  %1273 = @func_9901() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1271, %1272, %1273)
}

def @func_23633() -> (Tensor[(5, 16, 12), float32],) {
  %1274 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1275 = %1274.0;
  (%1275,)
}

def @func_13163(%var_13123: Tensor[(5, 8, 4), float32]) -> (Tensor[(5, 8, 4), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), float32], Tensor[(5, 16, 12), float32]) {
  %1276 = @func_12347() /* ty=(Tensor[(360), uint8], Tensor[(5, 8, 4), float32]) */;
  %1277 = %1276.1;
  %1278 = cast(%var_13123, dtype="float64") /* ty=Tensor[(5, 8, 4), float64] */;
  %1279 = shape_of(%1277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1280 = cast(%1277, dtype="float64") /* ty=Tensor[(5, 8, 4), float64] */;
  %1281 = dyn.reshape(%1278, %1279, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1282 = @func_10828() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) */;
  %1283 = cast(%var_13123, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
  %1284 = @func_9403() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %1285 = subtract(%1280, %1281) /* ty=Tensor[(5, 8, 4), float64] */;
  %1286 = %1282.2;
  %1287 = sinh(%1283) /* ty=Tensor[(5, 8, 4), float32] */;
  %1288 = %1284.2;
  (%1285, %1286, %1287, %1288)
}

def @func_10938() -> Tensor[(5, 16, 12), float32] {
  @func_5773() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_8725() -> Tensor[(5, 16, 12), float32] {
  %1289 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1289.1
}

def @func_22036() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1290 = @func_17515() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1291 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %1292 = %1290.0;
  (%1291, %1292)
}

def @func_14186() -> (Tensor[(5, 16, 12), float32],) {
  %1293 = @func_5067() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1294 = %1293.2;
  (%1294,)
}

def @func_16579(%var_16524: Tensor[(3, 16, 13), float64], %var_16573: Tensor[(3, 16, 13), float64]) -> (Tensor[(12, 1, 1), float64], Tensor[(3, 16, 13), bool], Tensor[(5, 16, 12), int32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(3, 16, 13), uint16]) {
  %1295 = @func_16321() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %1296 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %1297 = %1296.2;
  %1298 = cast(%var_16524, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
  %1299 = shape_of(%1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1300 = cast(%1297, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
  %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1302 = @func_11655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %1303 = @func_6574() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) */;
  %1304 = cast(%var_16524, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %1305 = cast(%var_16573, dtype="uint16") /* ty=Tensor[(3, 16, 13), uint16] */;
  %1306 = shape_of(%1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1307 = cast(%1297, dtype="uint16") /* ty=Tensor[(3, 16, 13), uint16] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1309 = %1295.3;
  %1310 = less(%1300, %1301) /* ty=Tensor[(3, 16, 13), bool] */;
  %1311 = @func_10328() /* ty=Tensor[(5, 16, 12), int32] */;
  %1312 = %1302.1;
  %1313 = %1303.3;
  %1314 = erf(%1304) /* ty=Tensor[(3, 16, 13), float64] */;
  %1315 = multiply(%1307, %1308) /* ty=Tensor[(3, 16, 13), uint16] */;
  (%1309, %1310, %1311, %1312, %1313, %1314, %1315)
}

def @func_16321() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %1316 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1317 = @func_7195() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %1318 = %1316.0;
  %1319 = %1317.0;
  %1320 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  %1321 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
  (%1318, %1319, %1320, %1321)
}

def @func_21689() -> Tensor[(5, 16, 12), int32] {
  %1322 = @func_16751() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1322.0
}

def @func_6894(%var_6884: Tensor[(8, 10, 15), int16]) -> (Tensor[(8, 10, 15), bool],) {
  %1323 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 10, 15), int16] */, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %1324 = shape_of(%var_6884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1325 = cast(%var_6884, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %1326 = dyn.reshape(%1323, %1324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1327 = not_equal(%1325, %1326) /* ty=Tensor[(8, 10, 15), bool] */;
  (%1327,)
}

def @func_9459() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(21), float32]) {
  %1328 = cast(meta[relay.Constant][34] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1329 = reshape(%1328, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), float32] */;
  %1330 = @func_1236(%1329) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) */;
  %1331 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
  %1332 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  %1333 = %1330.1;
  (%1331, %1332, %1333, meta[relay.Constant][34] /* ty=Tensor[(21), float32] */)
}

def @func_10170() -> (Tensor[(5, 16, 12), float32],) {
  %1334 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1335 = %1334.0;
  (%1335,)
}

def @func_18477() -> (Tensor[(5, 16, 12), float32],) {
  %1336 = @func_16095() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1336,)
}

def @func_10108() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1337 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1338 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %1339 = %1337.0;
  %1340 = %1338.0;
  %1341 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1339, %1340, %1341)
}

def @func_10839() -> (Tensor[(5, 16, 12), float64],) {
  %1342 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1343 = %1342.0;
  (%1343,)
}

def @func_7887() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1344 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1345 = %1344.0;
  %1346 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
  (%1345, %1346)
}

def @func_4450() -> (Tensor[(5, 16, 12), float32],) {
  %1347 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1347,)
}

def @func_24077() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1348 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  %1349 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1348, %1349)
}

def @func_16095() -> Tensor[(5, 16, 12), float32] {
  %1350 = @func_11720() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1350.1
}

def @func_19504() -> (Tensor[(5, 16, 12), float64],) {
  %1351 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1352 = %1351.0;
  (%1352,)
}

def @func_23265() -> (Tensor[(5, 16, 12), float32],) {
  %1353 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_3998() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1355 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %1356 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  %1357 = %1355.2;
  (%1356, %1357)
}

def @func_1731(%var_1728: Tensor[(9, 12, 8), float32]) -> Tensor[(9, 12, 8), float32] {
  %1358 = cast(%var_1728, dtype="float32") /* ty=Tensor[(9, 12, 8), float32] */;
  cosh(%1358) /* ty=Tensor[(9, 12, 8), float32] */
}

def @func_3842() -> (Tensor[(12, 1, 1), float64],) {
  %1359 = @func_3357() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %1360 = %1359.0;
  (%1360,)
}

def @func_15686(%var_15597: Tensor[(11, 12, 10), int8]) -> (Tensor[(11, 12, 10), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1361 = cast(%var_15597, dtype="int8") /* ty=Tensor[(11, 12, 10), int8] */;
  %1362 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(11, 12, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1363 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 12, 10), int8] */, dtype="int8") /* ty=Tensor[(11, 12, 10), int8] */;
  %1364 = dyn.reshape(%1361, %1362, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1365 = minimum(%1363, %1364) /* ty=Tensor[(11, 12, 10), int8] */;
  %1366 = cast(%1365, dtype="float32") /* ty=Tensor[(11, 12, 10), float32] */;
  %1367 = @func_14613() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1368 = @func_9021() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1369 = log(%1366) /* ty=Tensor[(11, 12, 10), float32] */;
  %1370 = %1367.0;
  %1371 = %1368.0;
  (%1369, %1370, %1371)
}

def @func_1631() -> (Tensor[(5, 16, 12), int32],) {
  %1372 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1373 = %1372.0;
  (%1373,)
}

def @func_12595() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1374 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1375 = @func_9481() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1376 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1377 = %1374.0;
  %1378 = %1375.1;
  %1379 = %1376.0;
  (%1377, %1378, %1379)
}

def @func_8989(%var_8964: Tensor[(7, 1, 12), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(7, 1, 12), float64]) {
  %1380 = @func_5226() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) */;
  %1381 = cast(%var_8964, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %1382 = erf(%1381) /* ty=Tensor[(7, 1, 12), float64] */;
  %1383 = cast(%1382, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %1384 = %1380.0;
  %1385 = sinh(%1383) /* ty=Tensor[(7, 1, 12), float64] */;
  (%1384, %1385)
}

def @func_20200() -> (Tensor[(5, 16, 12), float32],) {
  %1386 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1387 = %1386.0;
  (%1387,)
}

def @func_24497() -> Tensor[(5, 16, 12), float64] {
  %1388 = @func_10839() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1388.0
}

def @func_21013() -> (Tensor[(5, 16, 12), int32],) {
  %1389 = @func_17746() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1390 = %1389.0;
  (%1390,)
}

def @func_20480() -> (Tensor[(11, 5, 7), float32], Tensor[(5, 16, 12), float32]) {
  %1391 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %1392 = @func_11497() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1393 = acosh(%1391) /* ty=Tensor[(11, 5, 7), float32] */;
  %1394 = %1392.0;
  (%1393, %1394)
}

def @func_1929(%var_1907: Tensor[(2, 15, 12), uint8]) -> (Tensor[(2, 15, 12), uint8],) {
  %1395 = cast(%var_1907, dtype="uint8") /* ty=Tensor[(2, 15, 12), uint8] */;
  %1396 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(2, 15, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1397 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 15, 12), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 12), uint8] */;
  %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1399 = subtract(%1397, %1398) /* ty=Tensor[(2, 15, 12), uint8] */;
  (%1399,)
}

def @func_9403() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
  %1400 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1401 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1402 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1403 = %1400.1;
  %1404 = @func_8411() /* ty=Tensor[(5, 16, 12), float32] */;
  %1405 = %1401.1;
  %1406 = %1402.2;
  (%1403, %1404, %1405, %1406)
}

def @func_11828() -> (Tensor[(5, 16, 12), float32],) {
  %1407 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1408 = %1407.1;
  (%1408,)
}

def @func_4341() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1409 = @func_1404() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
  %1410 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1411 = @func_2139() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1412 = %1409.0;
  %1413 = %1410.1;
  %1414 = %1411.2;
  (%1412, %1413, %1414)
}

def @func_13233() -> Tensor[(5, 16, 12), float32] {
  %1415 = @func_10170() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1415.0
}

def @func_3422() -> Tensor[(5, 16, 12), float32] {
  @func_3242() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_18749() -> (Tensor[(5, 16, 12), float64],) {
  %1416 = @func_18119() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
  %1417 = %1416.0;
  (%1417,)
}

def @func_19398() -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
  %1418 = @func_13465() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %1419 = @func_15212() /* ty=Tensor[(12, 10, 15), uint8] */;
  %1420 = %1418.0;
  (%1419, %1420)
}

def @func_9584() -> Tensor[(5, 16, 12), int32] {
  %1421 = @func_7887() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1421.1
}

def @func_8297(%var_8294: Tensor[(616), uint64]) -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), uint64]) {
  %1422 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1423 = cast(meta[relay.Constant][38] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1424 = cast(%var_8294, dtype="uint64") /* ty=Tensor[(616), uint64] */;
  %1425 = reshape(%1423, newshape=[]) /* ty=uint64 */;
  %1426 = reshape(%1424, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
  %1427 = @func_6727(%1425, %1426) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
  %1428 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
  %1429 = %1422.0;
  %1430 = %1427.1;
  (%1428, %1429, %1430, meta[relay.Constant][38] /* ty=uint64 */, %var_8294)
}

def @func_2845(%var_2824: Tensor[(6, 3, 7), uint32], %var_2825: Tensor[(6, 3, 7), uint32]) -> (Tensor[(6, 3, 7), bool],) {
  %1431 = cast(%var_2825, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %1432 = shape_of(%var_2824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1433 = cast(%var_2824, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %1434 = dyn.reshape(%1431, %1432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1435 = not_equal(%1433, %1434) /* ty=Tensor[(6, 3, 7), bool] */;
  %1436 = cast(%var_2825, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %1437 = shape_of(%1435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1438 = cast(%1435, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %1439 = dyn.reshape(%1436, %1437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1440 = less_equal(%1438, %1439) /* ty=Tensor[(6, 3, 7), bool] */;
  (%1440,)
}

def @func_1100() -> (Tensor[(5, 16, 12), float32],) {
  %1441 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1442 = %1441.0;
  (%1442,)
}

def @func_4067() -> (Tensor[(5, 16, 12), float32],) {
  %1443 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1443,)
}

def @func_5903() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) {
  %1444 = @func_4450() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1445 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1446 = cast(meta[relay.Constant][39] /* ty=Tensor[(624, 1), float64] */, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
  %1447 = reshape(%1446, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float64] */;
  %1448 = @func_728(%1447) /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1449 = %1448.0;
  %1450 = cast(meta[relay.Constant][39] /* ty=Tensor[(624, 1), float64] */, dtype="bool") /* ty=Tensor[(624, 1), bool] */;
  %1451 = shape_of(%1449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1452 = cast(%1449, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
  %1453 = dyn.reshape(%1450, %1451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1454 = %1444.0;
  %1455 = %1445.1;
  %1456 = not_equal(%1452, %1453) /* ty=Tensor[(3, 16, 13), bool] */;
  (%1454, %1455, %1456)
}

def @func_1839() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1457 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1458 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1459 = %1457.1;
  %1460 = %1458.0;
  %1461 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1459, %1460, %1461)
}

def @func_11497() -> (Tensor[(5, 16, 12), float32],) {
  %1462 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1463 = %1462.1;
  (%1463,)
}

def @func_1039() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1464 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1465 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  %1466 = %1464.2;
  (%1465, %1466)
}

def @func_20307() -> Tensor[(5, 16, 12), int32] {
  %1467 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
  %1467.1
}

def @func_21037() -> Tensor[(5, 16, 12), float32] {
  @func_20232() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_15143() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1468 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1469 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  %1470 = %1468.0;
  (%1469, %1470)
}

def @func_16384() -> (Tensor[(3, 16, 13), bool],) {
  %1471 = @func_6272() /* ty=(Tensor[(3, 16, 13), bool],) */;
  %1472 = %1471.0;
  (%1472,)
}

def @func_19620() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1473 = @func_10371() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1474 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %1475 = %1473.1;
  %1476 = %1474.1;
  (%1475, %1476)
}

def @func_10307(%var_10283: Tensor[(12, 3, 1), float64]) -> (Tensor[(12, 3, 1), bool], Tensor[(12, 3, 1), float64], Tensor[(12, 1, 1), float64]) {
  %1477 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
  %1478 = cast(%1477, dtype="uint8") /* ty=Tensor[(12, 1, 1), uint8] */;
  %1479 = cast(%var_10283, dtype="uint8") /* ty=Tensor[(12, 3, 1), uint8] */;
  %1480 = subtract(%1478, %1479) /* ty=Tensor[(12, 3, 1), uint8] */;
  %1481 = cast(%1477, dtype="bool") /* ty=Tensor[(12, 1, 1), bool] */;
  %1482 = cast(%1480, dtype="bool") /* ty=Tensor[(12, 3, 1), bool] */;
  %1483 = cast(%var_10283, dtype="float64") /* ty=Tensor[(12, 3, 1), float64] */;
  %1484 = cast(%1477, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %1485 = equal(%1481, %1482) /* ty=Tensor[(12, 3, 1), bool] */;
  %1486 = divide(%1483, %1484) /* ty=Tensor[(12, 3, 1), float64] */;
  %1487 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
  (%1485, %1486, %1487)
}

def @func_11985() -> (Tensor[(5, 16, 12), int32],) {
  %1488 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
  %1489 = %1488.0;
  (%1489,)
}

def @func_954() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1490 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1491 = %1490.0;
  %1492 = cast(%1491, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %1493 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %1494 = cosh(%1492) /* ty=Tensor[(5, 16, 12), float32] */;
  (%1493, %1494)
}

def @func_3463(%var_3425: Tensor[(5, 5, 14), float32]) -> (Tensor[(5, 5, 14), float32],) {
  %1495 = cast(%var_3425, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
  %1496 = cosh(%1495) /* ty=Tensor[(5, 5, 14), float32] */;
  %1497 = cast(%1496, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
  %1498 = shape_of(%var_3425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1499 = cast(%var_3425, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
  %1500 = dyn.reshape(%1497, %1498, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1501 = mod(%1499, %1500) /* ty=Tensor[(5, 5, 14), float32] */;
  (%1501,)
}

def @func_23732(%var_23692: Tensor[(11, 5, 7), float64]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(11, 5, 7), int64], Tensor[(5, 16, 12), float32]) {
  %1502 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1503 = @func_11497() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1504 = @func_22534() /* ty=Tensor[(11, 5, 7), float64] */;
  %1505 = cast(%var_23692, dtype="int64") /* ty=Tensor[(11, 5, 7), int64] */;
  %1506 = shape_of(%1504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1507 = cast(%1504, dtype="int64") /* ty=Tensor[(11, 5, 7), int64] */;
  %1508 = dyn.reshape(%1505, %1506, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1509 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1510 = %1502.0;
  %1511 = %1503.0;
  %1512 = @func_8411() /* ty=Tensor[(5, 16, 12), float32] */;
  %1513 = minimum(%1507, %1508) /* ty=Tensor[(11, 5, 7), int64] */;
  %1514 = %1509.0;
  (%1510, %1511, %1512, %1513, %1514)
}

def @func_21997() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1515 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1516 = @func_15327() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1517 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1518 = %1515.1;
  %1519 = @func_13187() /* ty=Tensor[(5, 16, 12), float64] */;
  %1520 = @func_16230() /* ty=Tensor[(2, 15, 12), uint8] */;
  %1521 = %1516.0;
  %1522 = %1517.1;
  %1523 = @func_3924() /* ty=Tensor[(5, 16, 12), int32] */;
  (%1518, %1519, %1520, %1521, %1522, %1523)
}

def @func_19336() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1524 = @func_12233() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1525 = @func_19094() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1526 = @func_13217() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1527 = @func_6397() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) */;
  %1528 = %1524.0;
  %1529 = %1525.0;
  %1530 = @func_16051() /* ty=Tensor[(5, 16, 12), int32] */;
  %1531 = %1526.0;
  %1532 = %1527.2;
  (%1528, %1529, %1530, %1531, %1532)
}

def @func_20503() -> (Tensor[(5, 16, 12), float32],) {
  %1533 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1533,)
}

def @func_10035() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) {
  %1534 = @func_9094() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) */;
  %1535 = @func_9207() /* ty=Tensor[(5, 16, 12), float32] */;
  %1536 = %1534.1;
  (%1535, %1536)
}

def @func_15803() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1537 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1538 = @func_9261() /* ty=Tensor[(5, 16, 12), float32] */;
  %1539 = %1537.0;
  (%1538, %1539)
}

def @func_2603() -> (Tensor[(5, 16, 12), float32],) {
  %1540 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1540,)
}

def @func_10721(%var_10710: Tensor[(21), float32]) -> (Tensor[(21), uint32],) {
  %1541 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1542 = %1541.2;
  %1543 = cast(%var_10710, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1544 = shape_of(%1542, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1545 = cast(%1542, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1546 = dyn.reshape(%1543, %1544, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1547 = left_shift(%1545, %1546) /* ty=Tensor[(21), uint32] */;
  (%1547,)
}

def @func_9261() -> Tensor[(5, 16, 12), float32] {
  %1548 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1548.1
}

def @func_12729(%var_12684: Tensor[(7, 14, 6), uint16], %var_12685: Tensor[(7, 14, 6), uint16]) -> (Tensor[(7, 14, 6), uint16], Tensor[(5, 16, 12), float32], Tensor[(7, 14, 6), bool], Tensor[(5, 16, 12), float32]) {
  %1549 = cast(%var_12685, dtype="uint16") /* ty=Tensor[(7, 14, 6), uint16] */;
  %1550 = shape_of(%var_12684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1551 = cast(%var_12684, dtype="uint16") /* ty=Tensor[(7, 14, 6), uint16] */;
  %1552 = dyn.reshape(%1549, %1550, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1553 = cast(%var_12684, dtype="bool") /* ty=Tensor[(7, 14, 6), bool] */;
  %1554 = shape_of(%var_12685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1555 = cast(%var_12685, dtype="bool") /* ty=Tensor[(7, 14, 6), bool] */;
  %1556 = dyn.reshape(%1553, %1554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1557 = @func_9481() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1558 = bitwise_and(%1551, %1552) /* ty=Tensor[(7, 14, 6), uint16] */;
  %1559 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %1560 = less(%1555, %1556) /* ty=Tensor[(7, 14, 6), bool] */;
  %1561 = %1557.3;
  (%1558, %1559, %1560, %1561)
}

def @func_21654(%var_21649: Tensor[(588), uint16]) -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(588), uint16]) {
  %1562 = cast(%var_21649, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %1563 = cast(%var_21649, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %1564 = reshape(%1562, newshape=[7, 14, 6]) /* ty=Tensor[(7, 14, 6), uint16] */;
  %1565 = reshape(%1563, newshape=[7, 14, 6]) /* ty=Tensor[(7, 14, 6), uint16] */;
  %1566 = @func_12729(%1564, %1565) /* ty=(Tensor[(7, 14, 6), uint16], Tensor[(5, 16, 12), float32], Tensor[(7, 14, 6), bool], Tensor[(5, 16, 12), float32]) */;
  %1567 = @func_14304() /* ty=Tensor[(5, 16, 12), int32] */;
  %1568 = %1566.1;
  (%1567, %1568, %var_21649)
}

def @func_14597() -> Tensor[(12, 1, 1), float64] {
  %1569 = @func_12183() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) */;
  %1570 = %1569.1;
  %1571 = cast(%1570, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  acos(%1571) /* ty=Tensor[(12, 1, 1), float64] */
}

def @func_14862() -> (Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) {
  %1572 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
  %1573 = @func_4341() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1574 = %1572.1;
  %1575 = %1573.2;
  (%1574, %1575)
}

def @func_21283() -> (Tensor[(5, 16, 12), float32],) {
  %1576 = @func_11791() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1577 = %1576.2;
  (%1577,)
}

def @func_6827(%var_6790: Tensor[(192, 1), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(192, 1), float32], Tensor[(5, 16, 12), float32]) {
  %1578 = cast(%var_6790, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %1579 = reshape(%1578, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), float32] */;
  %1580 = @func_5685(%1579) /* ty=(Tensor[(12, 1, 16), float32], Tensor[(5, 16, 12), int32], Tensor[(2, 15, 12), uint8]) */;
  %1581 = @func_1863() /* ty=Tensor[(5, 16, 12), float32] */;
  %1582 = %1580.2;
  %1583 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1581, %1582, %var_6790, %1583)
}

def @func_10828() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) {
  %1584 = @func_10035() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) */;
  %1585 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1586 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %1587 = %1584.1;
  %1588 = %1585.0;
  (%1586, %1587, %1588)
}

def @func_14140() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1589 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1590 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %1591 = %1589.0;
  (%1590, %1591)
}

def @func_13726() -> (Tensor[(5, 16, 12), float32],) {
  %1592 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1592,)
}

def @func_16488() -> (Tensor[(350), bool],) {
  %1593 = @func_14375() /* ty=Tensor[(350), bool] */;
  (%1593,)
}

def @func_10999() -> (Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %1594 = @func_10232() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1595 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1596 = %1594.1;
  %1597 = %1595.0;
  (%1596, %1597)
}

def @func_22449() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1598 = @func_8819() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1599 = @func_17969() /* ty=Tensor[(5, 16, 12), float32] */;
  %1600 = %1598.1;
  %1601 = @func_10335() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1599, %1600, %1601)
}

def @func_21919(%var_21877: Tensor[(1, 13, 6), float64]) -> Tensor[(?, 13, 6), int32] {
  %1602 = cast(%var_21877, dtype="float64") /* ty=Tensor[(1, 13, 6), float64] */;
  %1603 = asinh(%1602) /* ty=Tensor[(1, 13, 6), float64] */;
  %1604 = cast(%1603, dtype="float32") /* ty=Tensor[(1, 13, 6), float32] */;
  %1605 = sinh(%1604) /* ty=Tensor[(1, 13, 6), float32] */;
  %1606 = cast(%1605, dtype="int32") /* ty=Tensor[(1, 13, 6), int32] */;
  %1607 = shape_of(%1603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1608 = cast(%1603, dtype="int32") /* ty=Tensor[(1, 13, 6), int32] */;
  %1609 = dyn.reshape(%1606, %1607, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1610 = add(%1608, %1609) /* ty=Tensor[(?, 13, 6), int32] */;
  %1611 = cast(%1605, dtype="uint8") /* ty=Tensor[(1, 13, 6), uint8] */;
  %1612 = shape_of(%1610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1613 = cast(%1610, dtype="uint8") /* ty=Tensor[(?, 13, 6), uint8] */;
  %1614 = dyn.reshape(%1611, %1612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1615 = multiply(%1613, %1614) /* ty=Tensor[(?, 13, 6), uint8] */;
  %1616 = cast(%1615, dtype="int32") /* ty=Tensor[(?, 13, 6), int32] */;
  %1617 = shape_of(%var_21877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1618 = cast(%var_21877, dtype="int32") /* ty=Tensor[(1, 13, 6), int32] */;
  %1619 = dyn.reshape(%1616, %1617, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%1618, %1619) /* ty=Tensor[(?, 13, 6), int32] */
}

def @func_6134() -> Tensor[(5, 16, 12), int32] {
  %1620 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1620.1
}

def @func_16230() -> Tensor[(2, 15, 12), uint8] {
  %1621 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %1621.2
}

def @func_18393() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) {
  %1622 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1623 = @func_17692() /* ty=(Tensor[(5, 8, 4), int32],) */;
  %1624 = %1622.0;
  %1625 = %1623.0;
  (%1624, %1625)
}

def @func_11791() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1626 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1627 = @func_7331() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1628 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1629 = %1626.0;
  %1630 = %1627.0;
  %1631 = %1628.0;
  (%1629, %1630, %1631)
}

def @func_5993() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1632 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1633 = %1632.0;
  %1634 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1633, %1634)
}

def @func_15886() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1635 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1636 = @func_14504() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1637 = %1635.1;
  %1638 = %1636.0;
  (%1637, %1638)
}

def @func_19342() -> (Tensor[(5, 16, 12), float32],) {
  %1639 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1640 = %1639.1;
  (%1640,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4135() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %0 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  %2 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %3 = %0.0;
  (%1, %2, %3)
}

def @func_20135(%var_20101: Tensor[(16, 8, 1), bool], %var_20107: Tensor[(864), float32], %var_20125: Tensor[(21), float32]) -> (Tensor[(16, 8, 1), bool], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(7, ?, 3), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32]) {
  %4 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %5 = cast(%var_20101, dtype="bool") /* ty=Tensor[(16, 8, 1), bool] */;
  %6 = cast(%var_20107, dtype="float32") /* ty=Tensor[(864), float32] */;
  %7 = reshape(%6, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
  %8 = @func_16463() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %9 = cast(%var_20125, dtype="float32") /* ty=Tensor[(21), float32] */;
  %10 = reshape(%9, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), float32] */;
  %11 = @func_1236(%10) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) */;
  %12 = @func_13590() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %13 = logical_or(%4, %5) /* ty=Tensor[(16, 8, 1), bool] */;
  %14 = @func_1731(%7) /* ty=Tensor[(9, 12, 8), float32] */;
  %15 = %8.0;
  %16 = %11.3;
  %17 = %12.0;
  (%13, %14, %var_20107, %15, %16, %var_20125, %17)
}

def @func_20505() -> (Tensor[(5, 16, 12), float32],) {
  @func_20503() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_2541() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_353() -> (Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
  @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_3422() -> Tensor[(5, 16, 12), float32] {
  @func_3242() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_9483() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_9481() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_2968() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) {
  @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */
}

def @func_9664() -> (Tensor[(5, 16, 12), float32],) {
  @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_863() -> Tensor[(5, 16, 12), float32] {
  @func_240() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_16838() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) {
  %22 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) {
    %18 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %19 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %20 = %18.0;
    %21 = %19.1;
    (%20, %21)
  };
  %22() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */
}

def @func_13165(%var_13164: Tensor[(5, 8, 4), float32]) -> (Tensor[(5, 8, 4), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), float32], Tensor[(5, 16, 12), float32]) {
  %36 = fn (%var_13123: Tensor[(5, 8, 4), float32]) -> (Tensor[(5, 8, 4), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), float32], Tensor[(5, 16, 12), float32]) {
    %23 = @func_12347() /* ty=(Tensor[(360), uint8], Tensor[(5, 8, 4), float32]) */;
    %24 = %23.1;
    %25 = cast(%var_13123, dtype="float64") /* ty=Tensor[(5, 8, 4), float64] */;
    %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%24, dtype="float64") /* ty=Tensor[(5, 8, 4), float64] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %29 = @func_10828() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) */;
    %30 = cast(%var_13123, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
    %31 = @func_9403() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
    %32 = subtract(%27, %28) /* ty=Tensor[(5, 8, 4), float64] */;
    %33 = %29.2;
    %34 = sinh(%30) /* ty=Tensor[(5, 8, 4), float32] */;
    %35 = %31.2;
    (%32, %33, %34, %35)
  };
  %36(%var_13164) /* ty=(Tensor[(5, 8, 4), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_23735(%var_23733: Tensor[(11, 5, 7), float64]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(11, 5, 7), int64], Tensor[(5, 16, 12), float32]) {
  @func_23732(%var_23733) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(11, 5, 7), int64], Tensor[(5, 16, 12), float32]) */
}

def @func_10329() -> Tensor[(5, 16, 12), int32] {
  %38 = fn () -> Tensor[(5, 16, 12), int32] {
    %37 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %37.1
  };
  %38() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_12957() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), int32]) {
  %47 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), int32]) {
    %39 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %40 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %41 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
    %42 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %43 = %39.1;
    %44 = %40.0;
    %45 = %41.1;
    %46 = %42.0;
    (%43, %44, %45, %46)
  };
  %47() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_4971() -> Tensor[(5, 16, 12), float32] {
  %48 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %48.0
}

def @func_5322(%var_5291: Tensor[(126), uint32]) -> (Tensor[(864), float32], Tensor[(5, 16, 12), int32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %49 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
  %50 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %51 = cast(%var_5291, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %52 = cast(%var_5291, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %53 = reshape(%51, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %54 = reshape(%52, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
  %55 = @func_2845(%53, %54) /* ty=(Tensor[(6, 3, 7), bool],) */;
  %56 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %57 = @func_2603() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %58 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %59 = %49.1;
  %60 = %50.0;
  %61 = %55.0;
  %62 = %56.0;
  %63 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %64 = %57.0;
  %65 = %58.0;
  (%59, %60, %61, %var_5291, %62, %63, %64, %65)
}

def @func_4398() -> Tensor[(5, 16, 12), int32] {
  %66 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %66.2
}

def @func_7181(%var_7179: Tensor[(8, 7, 1), float32]) -> (Tensor[(8, 7, ?), int16],) {
  @func_7178(%var_7179) /* ty=(Tensor[(8, 7, ?), int16],) */
}

def @func_13728() -> (Tensor[(5, 16, 12), float32],) {
  @func_13726() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_14496(%var_14494: uint16, %var_14495: Tensor[(12, 1, 4), uint16]) -> Tensor[(12, 1, 4), uint16] {
  %69 = fn (%var_14482: uint16, %var_14483: Tensor[(12, 1, 4), uint16]) -> Tensor[(12, 1, 4), uint16] {
    %67 = cast(%var_14482, dtype="uint16") /* ty=uint16 */;
    %68 = cast(%var_14483, dtype="uint16") /* ty=Tensor[(12, 1, 4), uint16] */;
    bitwise_or(%67, %68) /* ty=Tensor[(12, 1, 4), uint16] */
  };
  %69(%var_14494, %var_14495) /* ty=Tensor[(12, 1, 4), uint16] */
}

def @func_1734(%var_1732: Tensor[(9, 12, 8), float32]) -> Tensor[(9, 12, 8), float32] {
  @func_1731(%var_1732) /* ty=Tensor[(9, 12, 8), float32] */
}

def @func_23524() -> (Tensor[(5, 16, 12), float32],) {
  %72 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %70 = @func_20200() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %71 = %70.0;
    (%71,)
  };
  %72() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_8772() -> (Tensor[(5, 16, 12), float32],) {
  %74 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %73 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
    (%73,)
  };
  %74() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_2849(%var_2847: Tensor[(6, 3, 7), uint32], %var_2848: Tensor[(6, 3, 7), uint32]) -> (Tensor[(6, 3, 7), bool],) {
  @func_2845(%var_2847, %var_2848) /* ty=(Tensor[(6, 3, 7), bool],) */
}

def @func_13353() -> Tensor[(5, 16, 12), float32] {
  %76 = fn () -> Tensor[(5, 16, 12), float32] {
    %75 = @func_4467() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %75.1
  };
  %76() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_4151() -> (Tensor[(5, 16, 12), float64],) {
  %79 = fn () -> (Tensor[(5, 16, 12), float64],) {
    %77 = @func_1404() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
    %78 = %77.0;
    (%78,)
  };
  %79() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_9094() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) {
  %80 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %81 = cast(meta[relay.Constant][0] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
  %82 = cast(meta[relay.Constant][0] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
  %83 = reshape(%81, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %84 = reshape(%82, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
  %85 = @func_918(%83, %84) /* ty=(Tensor[(5, 8, 4), int32],) */;
  %86 = %80.0;
  %87 = %85.0;
  (%86, %87, meta[relay.Constant][0] /* ty=Tensor[(160), int32] */)
}

def @func_20837(%var_20836: Tensor[(9, 3, 5), float64]) -> (Tensor[(9, 3, 5), int8],) {
  %95 = fn (%var_20826: Tensor[(9, 3, 5), float64]) -> (Tensor[(9, 3, 5), int8],) {
    %88 = cast(%var_20826, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
    %89 = cosh(%88) /* ty=Tensor[(9, 3, 5), float64] */;
    %90 = cast(%var_20826, dtype="int8") /* ty=Tensor[(9, 3, 5), int8] */;
    %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
    %92 = cast(%89, dtype="int8") /* ty=Tensor[(9, 3, 5), int8] */;
    %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %94 = left_shift(%92, %93) /* ty=Tensor[(9, 3, 5), int8] */;
    (%94,)
  };
  %95(%var_20836) /* ty=(Tensor[(9, 3, 5), int8],) */
}

def @func_22534() -> Tensor[(11, 5, 7), float64] {
  %96 = @func_20480() /* ty=(Tensor[(11, 5, 7), float32], Tensor[(5, 16, 12), float32]) */;
  %97 = %96.0;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(11, 5, 7), float64] */;
  atan(%98) /* ty=Tensor[(11, 5, 7), float64] */
}

def @func_10510(%var_10508: uint32, %var_10509: Tensor[(14, 4, 13), uint32]) -> Tensor[(14, 4, 13), uint32] {
  %101 = fn (%var_10490: uint32, %var_10491: Tensor[(14, 4, 13), uint32]) -> Tensor[(14, 4, 13), uint32] {
    %99 = cast(%var_10490, dtype="uint32") /* ty=uint32 */;
    %100 = cast(%var_10491, dtype="uint32") /* ty=Tensor[(14, 4, 13), uint32] */;
    subtract(%99, %100) /* ty=Tensor[(14, 4, 13), uint32] */
  };
  %101(%var_10508, %var_10509) /* ty=Tensor[(14, 4, 13), uint32] */
}

def @func_13520() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  @func_13518() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */
}

def @func_18318() -> (Tensor[(5, 16, 12), float32],) {
  @func_18316() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_865() -> Tensor[(5, 16, 12), float32] {
  @func_863() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_13217() -> (Tensor[(5, 16, 12), float32],) {
  %102 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %103 = %102.1;
  (%103,)
}

def @func_16692() -> (Tensor[(360), uint8],) {
  %104 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %105 = %104.2;
  (%105,)
}

def @func_5098() -> (Tensor[(5, 16, 12), float32],) {
  %107 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %106 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
    (%106,)
  };
  %107() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_9505() -> (Tensor[(2, 15, 12), uint8],) {
  @func_9503() /* ty=(Tensor[(2, 15, 12), uint8],) */
}

def @func_19036() -> (Tensor[(5, 16, 12), float32],) {
  @func_19034() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_22871() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %108 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
  %109 = @func_17474() /* ty=Tensor[(5, 16, 12), float64] */;
  %110 = @func_9901() /* ty=Tensor[(5, 16, 12), float32] */;
  (%108, %109, %110)
}

def @func_18817() -> (Tensor[(5, 16, 12), float32],) {
  %112 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %111 = @func_12539() /* ty=Tensor[(5, 16, 12), float32] */;
    (%111,)
  };
  %112() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_3357() -> (Tensor[(12, 1, 1), float64],) {
  %113 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 1, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %114 = log2(%113) /* ty=Tensor[(12, 1, 1), float64] */;
  (%114,)
}

def @func_21037() -> Tensor[(5, 16, 12), float32] {
  @func_20232() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_22450() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %119 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %115 = @func_8819() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %116 = @func_17969() /* ty=Tensor[(5, 16, 12), float32] */;
    %117 = %115.1;
    %118 = @func_10335() /* ty=Tensor[(5, 16, 12), float32] */;
    (%116, %117, %118)
  };
  %119() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_1879() -> Tensor[(5, 16, 12), float32] {
  %120 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %120.0
}

def @func_3842() -> (Tensor[(12, 1, 1), float64],) {
  %121 = @func_3357() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %122 = %121.0;
  (%122,)
}

def @func_7565() -> Tensor[(5, 16, 12), int32] {
  @func_559() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_416() -> Tensor[(5, 16, 12), float32] {
  %123 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_240() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %123() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_9503() -> (Tensor[(2, 15, 12), uint8],) {
  %124 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  (%124,)
}

def @func_8704() -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_8702() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_22215(%var_22213: Tensor[(845), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float32], Tensor[(845), float64]) {
  @func_22212(%var_22213) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float32], Tensor[(845), float64]) */
}

def @func_23732(%var_23692: Tensor[(11, 5, 7), float64]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(11, 5, 7), int64], Tensor[(5, 16, 12), float32]) {
  %125 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %126 = @func_11497() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %127 = @func_22534() /* ty=Tensor[(11, 5, 7), float64] */;
  %128 = cast(%var_23692, dtype="int64") /* ty=Tensor[(11, 5, 7), int64] */;
  %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%127, dtype="int64") /* ty=Tensor[(11, 5, 7), int64] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %132 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %133 = %125.0;
  %134 = %126.0;
  %135 = @func_8411() /* ty=Tensor[(5, 16, 12), float32] */;
  %136 = minimum(%130, %131) /* ty=Tensor[(11, 5, 7), int64] */;
  %137 = %132.0;
  (%133, %134, %135, %136, %137)
}

def @func_13188() -> Tensor[(5, 16, 12), float64] {
  %139 = fn () -> Tensor[(5, 16, 12), float64] {
    %138 = @func_10839() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %138.0
  };
  %139() /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_15552() -> Tensor[(5, 16, 12), float32] {
  %141 = fn () -> Tensor[(5, 16, 12), float32] {
    %140 = @func_6984() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %140.1
  };
  %141() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_18121() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  @func_18119() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_22431() -> (Tensor[(2, 15, 12), uint8],) {
  @func_22429() /* ty=(Tensor[(2, 15, 12), uint8],) */
}

def @func_23999() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(616), uint64], Tensor[(616), uint64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_23997() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(616), uint64], Tensor[(616), uint64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_2040() -> Tensor[(5, 16, 12), float32] {
  %142 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %142.2
}

def @func_8991(%var_8990: Tensor[(7, 1, 12), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(7, 1, 12), float64]) {
  %149 = fn (%var_8964: Tensor[(7, 1, 12), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(7, 1, 12), float64]) {
    %143 = @func_5226() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) */;
    %144 = cast(%var_8964, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
    %145 = erf(%144) /* ty=Tensor[(7, 1, 12), float64] */;
    %146 = cast(%145, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
    %147 = %143.0;
    %148 = sinh(%146) /* ty=Tensor[(7, 1, 12), float64] */;
    (%147, %148)
  };
  %149(%var_8990) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(7, 1, 12), float64]) */
}

def @func_1155() -> Tensor[(5, 16, 12), float32] {
  %150 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_255() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %150() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_15280() -> (Tensor[(5, 16, 12), float32],) {
  @func_15278() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_15378() -> Tensor[(5, 16, 12), int32] {
  @func_10328() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_22291() -> (Tensor[(5, 16, 12), float32],) {
  @func_22289() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_291() -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) {
  @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_18656() -> (Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) {
  %155 = fn () -> (Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) {
    %151 = @func_16692() /* ty=(Tensor[(360), uint8],) */;
    %152 = @func_9751() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
    %153 = %151.0;
    %154 = %152.0;
    (%153, %154)
  };
  %155() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) */
}

def @func_13518() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %156 = cast(meta[relay.Constant][2] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %157 = reshape(%156, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %158 = @func_3463(%157) /* ty=(Tensor[(5, 5, 14), float32],) */;
  %159 = @func_9901() /* ty=Tensor[(5, 16, 12), float32] */;
  %160 = %158.0;
  (%159, %160, meta[relay.Constant][2] /* ty=Tensor[(350), float32] */)
}

def @func_11361() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  %168 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
    %161 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %162 = cast(meta[relay.Constant][3] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %163 = reshape(%162, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %164 = @func_6349(%163) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
    %165 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
    %166 = %161.0;
    %167 = %164.1;
    (%165, %166, %167, meta[relay.Constant][3] /* ty=Tensor[(624), float64] */)
  };
  %168() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */
}

def @func_16752() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %172 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
    %169 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %170 = @func_3924() /* ty=Tensor[(5, 16, 12), int32] */;
    %171 = %169.0;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_18432() -> (Tensor[(5, 16, 12), float32], Tensor[(350), float32]) {
  @func_18430() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(350), float32]) */
}

def @func_5576() -> Tensor[(5, 16, 12), float32] {
  @func_5574() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_8036() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_8034() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_15380() -> Tensor[(5, 16, 12), int32] {
  @func_15378() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_11497() -> (Tensor[(5, 16, 12), float32],) {
  %173 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %174 = %173.1;
  (%174,)
}

def @func_1100() -> (Tensor[(5, 16, 12), float32],) {
  %175 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %176 = %175.0;
  (%176,)
}

def @func_16192(%var_16190: uint64, %var_16191: Tensor[(616), uint64]) -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], uint64, Tensor[(5, 16, 12), float32], Tensor[(616), bool]) {
  %192 = fn (%var_16175: uint64, %var_16176: Tensor[(616), uint64]) -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], uint64, Tensor[(5, 16, 12), float32], Tensor[(616), bool]) {
    %177 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
    %178 = cast(%var_16175, dtype="uint64") /* ty=uint64 */;
    %179 = cast(%var_16176, dtype="uint64") /* ty=Tensor[(616), uint64] */;
    %180 = reshape(%178, newshape=[]) /* ty=uint64 */;
    %181 = reshape(%179, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
    %182 = @func_6727(%180, %181) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
    %183 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %184 = cast(meta[relay.Constant][4] /* ty=Tensor[(616), uint64] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %185 = shape_of(%var_16176, dtype="int32") /* ty=Tensor[(1), int32] */;
    %186 = cast(%var_16176, dtype="bool") /* ty=Tensor[(616), bool] */;
    %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?), bool] */;
    %188 = %177.0;
    %189 = %182.0;
    %190 = %183.0;
    %191 = greater(%186, %187) /* ty=Tensor[(616), bool] */;
    (%188, %189, %var_16175, %190, %191)
  };
  %192(%var_16190, %var_16191) /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], uint64, Tensor[(5, 16, 12), float32], Tensor[(616), bool]) */
}

def @func_21491() -> (Tensor[(160), int32],) {
  %193 = @func_14321() /* ty=Tensor[(160), int32] */;
  (%193,)
}

def @func_4625() -> Tensor[(5, 16, 12), float32] {
  %194 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %194.0
}

def @func_22653() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  @func_22651() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_15888() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_15886() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_8299(%var_8298: Tensor[(616), uint64]) -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), uint64]) {
  %204 = fn (%var_8294: Tensor[(616), uint64]) -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), uint64]) {
    %195 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %196 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %197 = cast(%var_8294, dtype="uint64") /* ty=Tensor[(616), uint64] */;
    %198 = reshape(%196, newshape=[]) /* ty=uint64 */;
    %199 = reshape(%197, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
    %200 = @func_6727(%198, %199) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
    %201 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
    %202 = %195.0;
    %203 = %200.1;
    (%201, %202, %203, meta[relay.Constant][5] /* ty=uint64 */, %var_8294)
  };
  %204(%var_8298) /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), uint64]) */
}

def @func_10840() -> (Tensor[(5, 16, 12), float64],) {
  %207 = fn () -> (Tensor[(5, 16, 12), float64],) {
    %205 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %206 = %205.0;
    (%206,)
  };
  %207() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_3243() -> Tensor[(5, 16, 12), float32] {
  %209 = fn () -> Tensor[(5, 16, 12), float32] {
    %208 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %208.0
  };
  %209() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_18749() -> (Tensor[(5, 16, 12), float64],) {
  %210 = @func_18119() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
  %211 = %210.0;
  (%211,)
}

def @func_12779() -> (Tensor[(5, 16, 12), float64],) {
  @func_12777() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_23634() -> (Tensor[(5, 16, 12), float32],) {
  %214 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %212 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %213 = %212.0;
    (%213,)
  };
  %214() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_17747() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %222 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %215 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %216 = @func_14613() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
    %217 = @func_10108() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %218 = %215.1;
    %219 = %216.1;
    %220 = %217.1;
    %221 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
    (%218, %219, %220, %221)
  };
  %222() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_12597() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_12595() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_24214() -> (Tensor[(5, 16, 12), float32],) {
  %223 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %224 = %223.1;
  (%224,)
}

def @func_13467() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
  @func_13465() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */
}

def @func_19446() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  @func_19444() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_1342() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %225 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %226 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %227 = %225.0;
  %228 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %229 = %226.1;
  (%227, %228, %229)
}

def @func_22943() -> (Tensor[(12, 11, 2), uint16], Tensor[(360), uint8]) {
  %230 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 2), float64] */;
  %231 = tan(%230) /* ty=Tensor[(12, 11, 2), float64] */;
  %232 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 11, 2), float64] */, dtype="uint16") /* ty=Tensor[(12, 11, 2), uint16] */;
  %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%231, dtype="uint16") /* ty=Tensor[(12, 11, 2), uint16] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %236 = @func_16692() /* ty=(Tensor[(360), uint8],) */;
  %237 = logical_xor(%234, %235) /* ty=Tensor[(12, 11, 2), uint16] */;
  %238 = %236.0;
  (%237, %238)
}

def @func_14376() -> Tensor[(350), bool] {
  %240 = fn () -> Tensor[(350), bool] {
    %239 = @func_14020() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) */;
    %239.3
  };
  %240() /* ty=Tensor[(350), bool] */
}

def @func_17839() -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) {
  @func_17837() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_15686(%var_15597: Tensor[(11, 12, 10), int8]) -> (Tensor[(11, 12, 10), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %241 = cast(%var_15597, dtype="int8") /* ty=Tensor[(11, 12, 10), int8] */;
  %242 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(11, 12, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 12, 10), int8] */, dtype="int8") /* ty=Tensor[(11, 12, 10), int8] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %245 = minimum(%243, %244) /* ty=Tensor[(11, 12, 10), int8] */;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(11, 12, 10), float32] */;
  %247 = @func_14613() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %248 = @func_9021() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %249 = log(%246) /* ty=Tensor[(11, 12, 10), float32] */;
  %250 = %247.0;
  %251 = %248.0;
  (%249, %250, %251)
}

def @func_20886() -> Tensor[(5, 16, 12), float32] {
  %252 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %252.0
}

def @func_12348() -> (Tensor[(360), uint8], Tensor[(5, 8, 4), float32]) {
  %259 = fn () -> (Tensor[(360), uint8], Tensor[(5, 8, 4), float32]) {
    %253 = @func_10999() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
    %254 = @func_10828() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) */;
    %255 = %254.1;
    %256 = cast(%255, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
    %257 = %253.0;
    %258 = cosh(%256) /* ty=Tensor[(5, 8, 4), float32] */;
    (%257, %258)
  };
  %259() /* ty=(Tensor[(360), uint8], Tensor[(5, 8, 4), float32]) */
}

def @func_14613() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %260 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %261 = @func_13069() /* ty=Tensor[(5, 16, 12), int32] */;
  %262 = %260.1;
  (%261, %262)
}

def @func_5860() -> (Tensor[(5, 16, 12), float32],) {
  @func_5858() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_10556(%var_10554: Tensor[(15, 7, 9), float64], %var_10555: Tensor[(15, 7, 9), float64]) -> (Tensor[(15, 7, 9), bool], Tensor[(15, 7, 9), float32]) {
  @func_10552(%var_10554, %var_10555) /* ty=(Tensor[(15, 7, 9), bool], Tensor[(15, 7, 9), float32]) */
}

def @func_18341() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %268 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %263 = @func_17949() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
    %264 = @func_4063() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %265 = @func_12485() /* ty=Tensor[(5, 16, 12), int32] */;
    %266 = %263.2;
    %267 = %264.0;
    (%265, %266, %267)
  };
  %268() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_12777() -> (Tensor[(5, 16, 12), float64],) {
  %269 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %270 = %269.1;
  (%270,)
}

def @func_18784() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %275 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %271 = @func_13465() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
    %272 = @func_16751() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
    %273 = %271.0;
    %274 = %272.1;
    (%273, %274)
  };
  %275() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_7369() -> Tensor[(12, 1, 1), float64] {
  %277 = fn () -> Tensor[(12, 1, 1), float64] {
    %276 = @func_3357() /* ty=(Tensor[(12, 1, 1), float64],) */;
    %276.0
  };
  %277() /* ty=Tensor[(12, 1, 1), float64] */
}

def @func_24604() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) {
  @func_24602() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) */
}

def @func_7922(%var_7921: Tensor[(5, 16, 12), float64]) -> Tensor[(5, 16, 12), uint64] {
  %284 = fn (%var_7901: Tensor[(5, 16, 12), float64]) -> Tensor[(5, 16, 12), uint64] {
    %278 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %279 = %278.0;
    %280 = cast(%var_7901, dtype="uint64") /* ty=Tensor[(5, 16, 12), uint64] */;
    %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %282 = cast(%279, dtype="uint64") /* ty=Tensor[(5, 16, 12), uint64] */;
    %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    logical_xor(%282, %283) /* ty=Tensor[(5, 16, 12), uint64] */
  };
  %284(%var_7921) /* ty=Tensor[(5, 16, 12), uint64] */
}

def @func_9062() -> (Tensor[(5, 16, 12), float32],) {
  %285 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %286 = %285.0;
  (%286,)
}

def @func_23437() -> (Tensor[(12, 1, 1), float64],) {
  %288 = fn () -> (Tensor[(12, 1, 1), float64],) {
    %287 = @func_22251() /* ty=Tensor[(12, 1, 1), float64] */;
    (%287,)
  };
  %288() /* ty=(Tensor[(12, 1, 1), float64],) */
}

def @func_7599() -> (Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  %289 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %290 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %291 = reshape(%290, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %292 = @func_6349(%291) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %293 = %289.0;
  %294 = %292.1;
  (%293, %294, meta[relay.Constant][8] /* ty=Tensor[(624), float64] */)
}

def @func_7014(%var_7008: Tensor[(5, 13, 13), float64], %var_7009: Tensor[(5, 13, 13), float64]) -> Tensor[(5, 13, 13), float64] {
  %295 = cast(%var_7009, dtype="float64") /* ty=Tensor[(5, 13, 13), float64] */;
  %296 = shape_of(%var_7008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_7008, dtype="float64") /* ty=Tensor[(5, 13, 13), float64] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%297, %298) /* ty=Tensor[(5, 13, 13), float64] */
}

def @func_7195() -> (Tensor[(12, 1, 1), float64],) {
  %299 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %300 = %299.1;
  (%300,)
}

def @func_17670() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %305 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %301 = @func_8466() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %302 = @func_17414() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %303 = %301.0;
    %304 = %302.0;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_14829() -> Tensor[(5, 16, 12), float32] {
  %306 = @func_14186() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %306.0
}

def @func_455() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_19034() -> (Tensor[(5, 16, 12), float32],) {
  %307 = @func_18816() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %308 = %307.0;
  (%308,)
}

def @func_14721() -> Tensor[(5, 16, 12), float32] {
  @func_14719() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_1863() -> Tensor[(5, 16, 12), float32] {
  @func_255() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_23499() -> Tensor[(5, 16, 12), float32] {
  %309 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_1725() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %309() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_8953() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_8951() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_4973() -> Tensor[(5, 16, 12), float32] {
  @func_4971() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_16264(%var_16262: uint64, %var_16263: Tensor[(14, 10, 14), uint64]) -> (Tensor[(14, 10, 14), bool], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(5, 16, 12), float32]) {
  %317 = fn (%var_16246: uint64, %var_16247: Tensor[(14, 10, 14), uint64]) -> (Tensor[(14, 10, 14), bool], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(5, 16, 12), float32]) {
    %310 = cast(%var_16246, dtype="bool") /* ty=bool */;
    %311 = cast(%var_16247, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
    %312 = @func_14294() /* ty=(Tensor[(6, 3, 7), bool], Tensor[(15, 9, 2), float32], Tensor[(5, 16, 12), float32]) */;
    %313 = less_equal(%310, %311) /* ty=Tensor[(14, 10, 14), bool] */;
    %314 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
    %315 = %312.0;
    %316 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
    (%313, %314, %315, %316)
  };
  %317(%var_16262, %var_16263) /* ty=(Tensor[(14, 10, 14), bool], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(5, 16, 12), float32]) */
}

def @func_2669(%var_2629: Tensor[(21), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %318 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %319 = cast(%var_2629, dtype="float32") /* ty=Tensor[(21), float32] */;
  %320 = reshape(%319, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), float32] */;
  %321 = @func_1236(%320) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) */;
  %322 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %323 = %318.2;
  %324 = %321.0;
  %325 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %326 = %322.0;
  (%323, %324, %var_2629, %325, %326)
}

def @func_9096() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) {
  @func_9094() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) */
}

def @func_12539() -> Tensor[(5, 16, 12), float32] {
  %327 = @func_6984() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %327.0
}

def @func_13841() -> (Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %328 = @func_7195() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %329 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %330 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %331 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %332 = @func_5545() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %333 = %328.0;
  %334 = %329.1;
  %335 = %330.1;
  %336 = %331.0;
  %337 = %332.0;
  (%333, %334, %335, %336, %337)
}

def @func_14188() -> (Tensor[(5, 16, 12), float32],) {
  @func_14186() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_13726() -> (Tensor[(5, 16, 12), float32],) {
  %338 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  (%338,)
}

def @func_6352(%var_6350: Tensor[(624), float64]) -> (Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  @func_6349(%var_6350) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */
}

def @func_240() -> Tensor[(5, 16, 12), float32] {
  %339 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  atanh(%339) /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_19807() -> (Tensor[(5, 16, 12), float32], Tensor[(21), uint32], Tensor[(21), float32]) {
  %340 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %341 = cast(meta[relay.Constant][10] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %342 = reshape(%341, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %343 = @func_10721(%342) /* ty=(Tensor[(21), uint32],) */;
  %344 = %340.1;
  %345 = %343.0;
  (%344, %345, meta[relay.Constant][10] /* ty=Tensor[(21), float32] */)
}

def @func_3196() -> Tensor[(5, 16, 12), float32] {
  %346 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %346.0
}

def @func_17692() -> (Tensor[(5, 8, 4), int32],) {
  %347 = @func_10828() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) */;
  %348 = %347.1;
  (%348,)
}

def @func_21256(%var_21252: Tensor[(6, 7, 8), float32]) -> Tensor[(6, 7, 8), float32] {
  %349 = cast(%var_21252, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  sqrt(%349) /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_17046() -> (Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(6, 144), float64]) {
  %350 = @func_7599() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %351 = @func_6984() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %352 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
  %353 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
  %354 = %353.2;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(6, 144), float64] */;
  %356 = %350.1;
  %357 = %351.1;
  %358 = %352.0;
  %359 = log(%355) /* ty=Tensor[(6, 144), float64] */;
  (%356, %357, %358, %359)
}

def @func_1931(%var_1930: Tensor[(2, 15, 12), uint8]) -> (Tensor[(2, 15, 12), uint8],) {
  %365 = fn (%var_1907: Tensor[(2, 15, 12), uint8]) -> (Tensor[(2, 15, 12), uint8],) {
    %360 = cast(%var_1907, dtype="uint8") /* ty=Tensor[(2, 15, 12), uint8] */;
    %361 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(2, 15, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %362 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 15, 12), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 12), uint8] */;
    %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %364 = subtract(%362, %363) /* ty=Tensor[(2, 15, 12), uint8] */;
    (%364,)
  };
  %365(%var_1930) /* ty=(Tensor[(2, 15, 12), uint8],) */
}

def @func_19809() -> (Tensor[(5, 16, 12), float32], Tensor[(21), uint32], Tensor[(21), float32]) {
  @func_19807() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(21), uint32], Tensor[(21), float32]) */
}

def @func_13909(%var_13901: Tensor[(845), float64]) -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 13, 13), float64], Tensor[(845), float64]) {
  %366 = @func_12183() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) */;
  %367 = @func_13726() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %368 = cast(%var_13901, dtype="float64") /* ty=Tensor[(845), float64] */;
  %369 = cast(%var_13901, dtype="float64") /* ty=Tensor[(845), float64] */;
  %370 = reshape(%368, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), float64] */;
  %371 = reshape(%369, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), float64] */;
  %372 = %366.0;
  %373 = %367.0;
  %374 = @func_7014(%370, %371) /* ty=Tensor[(5, 13, 13), float64] */;
  (%372, %373, %374, %var_13901)
}

def @func_21340() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_21338() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_2056() -> Tensor[(5, 16, 12), int32] {
  @func_2054() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_10724(%var_10722: Tensor[(21), float32]) -> (Tensor[(21), uint32],) {
  @func_10721(%var_10722) /* ty=(Tensor[(21), uint32],) */
}

def @func_1876() -> (Tensor[(12, 10, 15), uint8],) {
  %377 = fn () -> (Tensor[(12, 10, 15), uint8],) {
    %375 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %376 = %375.0;
    (%376,)
  };
  %377() /* ty=(Tensor[(12, 10, 15), uint8],) */
}

def @func_11872() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
  %381 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
    %378 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
    %379 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
    %380 = %378.0;
    (%379, %380)
  };
  %381() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */
}

def @func_19743() -> Tensor[(5, 16, 12), float32] {
  %383 = fn () -> Tensor[(5, 16, 12), float32] {
    %382 = @func_14656() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %382.1
  };
  %383() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_6827(%var_6790: Tensor[(192, 1), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(192, 1), float32], Tensor[(5, 16, 12), float32]) {
  %384 = cast(%var_6790, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %385 = reshape(%384, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), float32] */;
  %386 = @func_5685(%385) /* ty=(Tensor[(12, 1, 16), float32], Tensor[(5, 16, 12), int32], Tensor[(2, 15, 12), uint8]) */;
  %387 = @func_1863() /* ty=Tensor[(5, 16, 12), float32] */;
  %388 = %386.2;
  %389 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
  (%387, %388, %var_6790, %389)
}

def @func_21285() -> (Tensor[(5, 16, 12), float32],) {
  @func_21283() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_6463() -> (Tensor[(5, 16, 12), float32],) {
  %392 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %390 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %391 = %390.0;
    (%391,)
  };
  %392() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_15689(%var_15687: Tensor[(11, 12, 10), int8]) -> (Tensor[(11, 12, 10), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  @func_15686(%var_15687) /* ty=(Tensor[(11, 12, 10), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_5773() -> Tensor[(5, 16, 12), float32] {
  %393 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %393.0
}

def @func_14967() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %394 = @func_14140() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %395 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %396 = %394.0;
  %397 = %395.1;
  (%396, %397)
}

def @func_17612() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_17610() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_6423() -> (Tensor[(5, 16, 12), float32],) {
  %398 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  (%398,)
}

def @func_22562() -> (Tensor[(360), uint8],) {
  %400 = fn () -> (Tensor[(360), uint8],) {
    %399 = @func_6504() /* ty=Tensor[(360), uint8] */;
    (%399,)
  };
  %400() /* ty=(Tensor[(360), uint8],) */
}

def @func_21065(%var_21064: Tensor[(160), float32]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(160), float32]) {
  %407 = fn (%var_21058: Tensor[(160), float32]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(160), float32]) {
    %401 = @func_18749() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %402 = cast(%var_21058, dtype="float32") /* ty=Tensor[(160), float32] */;
    %403 = reshape(%402, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), float32] */;
    %404 = @func_13163(%403) /* ty=(Tensor[(5, 8, 4), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), float32], Tensor[(5, 16, 12), float32]) */;
    %405 = %401.0;
    %406 = %404.3;
    (%405, %406, %var_21058)
  };
  %407(%var_21064) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(160), float32]) */
}

def @func_13465() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
  %408 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %409 = @func_11871() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %410 = @func_8725() /* ty=Tensor[(5, 16, 12), float32] */;
  %411 = %408.1;
  %412 = %409.1;
  (%410, %411, %412)
}

def @func_13843() -> (Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_13841() /* ty=(Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_20682() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  @func_20680() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_2042() -> Tensor[(5, 16, 12), float32] {
  @func_2040() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_14186() -> (Tensor[(5, 16, 12), float32],) {
  %413 = @func_5067() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %414 = %413.2;
  (%414,)
}

def @func_20084() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_20082() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_22429() -> (Tensor[(2, 15, 12), uint8],) {
  %415 = @func_10660() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) */;
  %416 = %415.1;
  (%416,)
}

def @func_4627() -> Tensor[(5, 16, 12), float32] {
  @func_4625() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_8225() -> Tensor[(5, 16, 12), float32] {
  %417 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_255() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %417() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_10373() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_10371() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_11657() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  @func_11655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_1841() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_3925() -> Tensor[(5, 16, 12), int32] {
  %419 = fn () -> Tensor[(5, 16, 12), int32] {
    %418 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %418.0
  };
  %419() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_15502() -> Tensor[(5, 16, 12), float64] {
  %421 = fn () -> Tensor[(5, 16, 12), float64] {
    %420 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %420.0
  };
  %421() /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_3250() -> Tensor[(360), uint8] {
  @func_3248() /* ty=Tensor[(360), uint8] */
}

def @func_3722(%var_3721: Tensor[(350), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %428 = fn (%var_3705: Tensor[(350), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
    %422 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
    %423 = cast(%var_3705, dtype="float32") /* ty=Tensor[(350), float32] */;
    %424 = reshape(%423, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
    %425 = @func_3463(%424) /* ty=(Tensor[(5, 5, 14), float32],) */;
    %426 = %422.0;
    %427 = %425.0;
    (%426, %427, %var_3705)
  };
  %428(%var_3721) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */
}

def @func_5574() -> Tensor[(5, 16, 12), float32] {
  %429 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %429.2
}

def @func_14295() -> (Tensor[(6, 3, 7), bool], Tensor[(15, 9, 2), float32], Tensor[(5, 16, 12), float32]) {
  %436 = fn () -> (Tensor[(6, 3, 7), bool], Tensor[(15, 9, 2), float32], Tensor[(5, 16, 12), float32]) {
    %430 = @func_11486() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32]) */;
    %431 = @func_12758() /* ty=(Tensor[(15, 9, 2), float32],) */;
    %432 = @func_2603() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %433 = %430.4;
    %434 = %431.0;
    %435 = %432.0;
    (%433, %434, %435)
  };
  %436() /* ty=(Tensor[(6, 3, 7), bool], Tensor[(15, 9, 2), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_9895(%var_9893: Tensor[(160), int32], %var_9894: Tensor[(126), uint32]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32]) {
  %452 = fn (%var_9858: Tensor[(160), int32], %var_9879: Tensor[(126), uint32]) -> (Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32]) {
    %437 = cast(%var_9858, dtype="int32") /* ty=Tensor[(160), int32] */;
    %438 = cast(%var_9858, dtype="int32") /* ty=Tensor[(160), int32] */;
    %439 = reshape(%437, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
    %440 = reshape(%438, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
    %441 = @func_918(%439, %440) /* ty=(Tensor[(5, 8, 4), int32],) */;
    %442 = @func_5903() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) */;
    %443 = cast(%var_9879, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %444 = cast(%var_9879, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %445 = reshape(%443, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
    %446 = reshape(%444, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
    %447 = @func_2845(%445, %446) /* ty=(Tensor[(6, 3, 7), bool],) */;
    %448 = @func_6580() /* ty=Tensor[(5, 16, 12), float64] */;
    %449 = %441.0;
    %450 = %442.1;
    %451 = %447.0;
    (%448, %449, %var_9858, %450, %451, %var_9879)
  };
  %452(%var_9893, %var_9894) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32]) */
}

def @func_22820() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %453 = @func_19215() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %454 = @func_10660() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) */;
  %455 = %453.0;
  %456 = @func_13352() /* ty=Tensor[(5, 16, 12), float32] */;
  %457 = %454.2;
  (%455, %456, %457)
}

def @func_483() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %461 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %458 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
    %459 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
    %460 = %458.1;
    (%459, %460)
  };
  %461() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_10035() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) {
  %462 = @func_9094() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) */;
  %463 = @func_9207() /* ty=Tensor[(5, 16, 12), float32] */;
  %464 = %462.1;
  (%463, %464)
}

def @func_14862() -> (Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) {
  %465 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
  %466 = @func_4341() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %467 = %465.1;
  %468 = %466.2;
  (%467, %468)
}

def @func_18565(%var_18563: Tensor[(14, 12, 10), float64], %var_18564: Tensor[(14, 12, 10), float64]) -> Tensor[(14, 12, 10), float64] {
  @func_18561(%var_18563, %var_18564) /* ty=Tensor[(14, 12, 10), float64] */
}

def @func_9064() -> (Tensor[(5, 16, 12), float32],) {
  @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_15886() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %469 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %470 = @func_14504() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %471 = %469.1;
  %472 = %470.0;
  (%471, %472)
}

def @func_9585() -> Tensor[(5, 16, 12), int32] {
  %474 = fn () -> Tensor[(5, 16, 12), int32] {
    %473 = @func_7887() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %473.1
  };
  %474() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_12875(%var_12805: Tensor[(11, 13, 2), bool]) -> (Tensor[(11, 13, 2), bool], Tensor[(5, 16, 12), float32], Tensor[(11, 13, 2), float32], Tensor[(5, 16, 12), int32]) {
  %475 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 13, 2), bool] */, dtype="bool") /* ty=Tensor[(11, 13, 2), bool] */;
  %476 = shape_of(%var_12805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_12805, dtype="bool") /* ty=Tensor[(11, 13, 2), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = cast(%var_12805, dtype="float32") /* ty=Tensor[(11, 13, 2), float32] */;
  %480 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %481 = logical_or(%477, %478) /* ty=Tensor[(11, 13, 2), bool] */;
  %482 = @func_10938() /* ty=Tensor[(5, 16, 12), float32] */;
  %483 = acosh(%479) /* ty=Tensor[(11, 13, 2), float32] */;
  %484 = %480.1;
  (%481, %482, %483, %484)
}

def @func_21941(%var_21940: Tensor[(4, 13, 1), float64]) -> (Tensor[(4, 13, 1), float64], Tensor[(4, 13, 1), float32]) {
  %489 = fn (%var_21928: Tensor[(4, 13, 1), float64]) -> (Tensor[(4, 13, 1), float64], Tensor[(4, 13, 1), float32]) {
    %485 = cast(%var_21928, dtype="float64") /* ty=Tensor[(4, 13, 1), float64] */;
    %486 = cast(%var_21928, dtype="float32") /* ty=Tensor[(4, 13, 1), float32] */;
    %487 = asinh(%485) /* ty=Tensor[(4, 13, 1), float64] */;
    %488 = cos(%486) /* ty=Tensor[(4, 13, 1), float32] */;
    (%487, %488)
  };
  %489(%var_21940) /* ty=(Tensor[(4, 13, 1), float64], Tensor[(4, 13, 1), float32]) */
}

def @func_18706() -> Tensor[(5, 16, 12), float32] {
  @func_5773() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_23256() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) {
  %492 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) {
    %490 = @func_9261() /* ty=Tensor[(5, 16, 12), float32] */;
    %491 = @func_16230() /* ty=Tensor[(2, 15, 12), uint8] */;
    (%490, %491)
  };
  %492() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) */
}

def @func_8378() -> Tensor[(12, 10, 15), uint8] {
  @func_8376() /* ty=Tensor[(12, 10, 15), uint8] */
}

def @func_17517() -> (Tensor[(5, 16, 12), float32],) {
  @func_17515() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_18561(%var_18556: Tensor[(14, 12, 10), float64], %var_18557: Tensor[(14, 12, 10), float64]) -> Tensor[(14, 12, 10), float64] {
  %493 = cast(%var_18557, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %494 = shape_of(%var_18556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%var_18556, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%495, %496) /* ty=Tensor[(14, 12, 10), float64] */
}

def @func_17010() -> (Tensor[(10, 4, 5), float32], Tensor[(360), uint8]) {
  %500 = fn () -> (Tensor[(10, 4, 5), float32], Tensor[(360), uint8]) {
    %497 = @func_12183() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) */;
    %498 = %497.0;
    %499 = @func_2818() /* ty=Tensor[(360), uint8] */;
    (%498, %499)
  };
  %500() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(360), uint8]) */
}

def @func_21725() -> (Tensor[(5, 16, 12), float32],) {
  @func_21723() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_18862() -> (Tensor[(5, 16, 12), float32],) {
  %501 = @func_8466() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %502 = %501.0;
  (%502,)
}

def @func_20680() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %503 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %504 = @func_20485() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %505 = @func_13069() /* ty=Tensor[(5, 16, 12), int32] */;
  %506 = %503.0;
  %507 = %504.0;
  %508 = @func_9261() /* ty=Tensor[(5, 16, 12), float32] */;
  (%505, %506, %507, %508)
}

def @func_12733(%var_12731: Tensor[(7, 14, 6), uint16], %var_12732: Tensor[(7, 14, 6), uint16]) -> (Tensor[(7, 14, 6), uint16], Tensor[(5, 16, 12), float32], Tensor[(7, 14, 6), bool], Tensor[(5, 16, 12), float32]) {
  @func_12729(%var_12731, %var_12732) /* ty=(Tensor[(7, 14, 6), uint16], Tensor[(5, 16, 12), float32], Tensor[(7, 14, 6), bool], Tensor[(5, 16, 12), float32]) */
}

def @func_17888() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_17886() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_17564() -> (Tensor[(12, 1, 1), float64],) {
  @func_17562() /* ty=(Tensor[(12, 1, 1), float64],) */
}

def @func_11275() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %513 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %509 = @func_2139() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %510 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %511 = %509.1;
    %512 = %510.0;
    (%511, %512)
  };
  %513() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_19701() -> (Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %519 = fn () -> (Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %514 = @func_10035() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) */;
    %515 = @func_13316() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %516 = %514.1;
    %517 = %515.2;
    %518 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
    (%516, %517, %518)
  };
  %519() /* ty=(Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_7769(%var_7683: uint64, %var_7684: Tensor[(1, 616), uint64]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(1, 616), bool], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(1, 616), uint16], Tensor[(5, 16, 12), bool]) {
  %520 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %521 = cast(%var_7683, dtype="uint64") /* ty=uint64 */;
  %522 = cast(%var_7684, dtype="uint64") /* ty=Tensor[(1, 616), uint64] */;
  %523 = reshape(%521, newshape=[]) /* ty=uint64 */;
  %524 = reshape(%522, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
  %525 = @func_6727(%523, %524) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
  %526 = cast(%var_7684, dtype="bool") /* ty=Tensor[(1, 616), bool] */;
  %527 = cast(%var_7683, dtype="bool") /* ty=bool */;
  %528 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %529 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %530 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %531 = cast(%var_7683, dtype="uint16") /* ty=uint16 */;
  %532 = cast(%var_7684, dtype="uint16") /* ty=Tensor[(1, 616), uint16] */;
  %533 = @func_2459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) */;
  %534 = %520.0;
  %535 = %525.0;
  %536 = less(%526, %527) /* ty=Tensor[(1, 616), bool] */;
  %537 = %528.2;
  %538 = %529.0;
  %539 = %530.2;
  %540 = @func_7667() /* ty=Tensor[(5, 16, 12), float32] */;
  %541 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  %542 = add(%531, %532) /* ty=Tensor[(1, 616), uint16] */;
  %543 = %533.1;
  (%534, %535, %536, %537, %538, %539, %540, %541, %542, %543)
}

def @func_3680() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %544 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %545 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %546 = %544.0;
  (%545, %546)
}

def @func_16465() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_16463() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_14411() -> Tensor[(5, 16, 12), float32] {
  %548 = fn () -> Tensor[(5, 16, 12), float32] {
    %547 = @func_5067() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %547.0
  };
  %548() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_2845(%var_2824: Tensor[(6, 3, 7), uint32], %var_2825: Tensor[(6, 3, 7), uint32]) -> (Tensor[(6, 3, 7), bool],) {
  %549 = cast(%var_2825, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %550 = shape_of(%var_2824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_2824, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = not_equal(%551, %552) /* ty=Tensor[(6, 3, 7), bool] */;
  %554 = cast(%var_2825, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%553, dtype="bool") /* ty=Tensor[(6, 3, 7), bool] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %558 = less_equal(%556, %557) /* ty=Tensor[(6, 3, 7), bool] */;
  (%558,)
}

def @func_7667() -> Tensor[(5, 16, 12), float32] {
  @func_4625() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_15278() -> (Tensor[(5, 16, 12), float32],) {
  %559 = @func_8200() /* ty=Tensor[(5, 16, 12), float32] */;
  (%559,)
}

def @func_21186() -> (Tensor[(5, 16, 12), float32],) {
  %560 = @func_9021() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %561 = %560.0;
  (%561,)
}

def @func_21921(%var_21920: Tensor[(1, 13, 6), float64]) -> Tensor[(?, 13, 6), int32] {
  %580 = fn (%var_21877: Tensor[(1, 13, 6), float64]) -> Tensor[(?, 13, 6), int32] {
    %562 = cast(%var_21877, dtype="float64") /* ty=Tensor[(1, 13, 6), float64] */;
    %563 = asinh(%562) /* ty=Tensor[(1, 13, 6), float64] */;
    %564 = cast(%563, dtype="float32") /* ty=Tensor[(1, 13, 6), float32] */;
    %565 = sinh(%564) /* ty=Tensor[(1, 13, 6), float32] */;
    %566 = cast(%565, dtype="int32") /* ty=Tensor[(1, 13, 6), int32] */;
    %567 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %568 = cast(%563, dtype="int32") /* ty=Tensor[(1, 13, 6), int32] */;
    %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %570 = add(%568, %569) /* ty=Tensor[(?, 13, 6), int32] */;
    %571 = cast(%565, dtype="uint8") /* ty=Tensor[(1, 13, 6), uint8] */;
    %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
    %573 = cast(%570, dtype="uint8") /* ty=Tensor[(?, 13, 6), uint8] */;
    %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %575 = multiply(%573, %574) /* ty=Tensor[(?, 13, 6), uint8] */;
    %576 = cast(%575, dtype="int32") /* ty=Tensor[(?, 13, 6), int32] */;
    %577 = shape_of(%var_21877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%var_21877, dtype="int32") /* ty=Tensor[(1, 13, 6), int32] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_xor(%578, %579) /* ty=Tensor[(?, 13, 6), int32] */
  };
  %580(%var_21920) /* ty=Tensor[(?, 13, 6), int32] */
}

def @func_5228() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) {
  @func_5226() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) */
}

def @func_24200() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %581 = @func_7555() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %582 = @func_19620() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %583 = @func_11791() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %584 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %585 = %581.3;
  %586 = %582.1;
  %587 = @func_7565() /* ty=Tensor[(5, 16, 12), int32] */;
  %588 = %583.2;
  %589 = %584.1;
  %590 = @func_20307() /* ty=Tensor[(5, 16, 12), int32] */;
  (%585, %586, %587, %588, %589, %590)
}

def @func_20503() -> (Tensor[(5, 16, 12), float32],) {
  %591 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  (%591,)
}

def @func_21869() -> Tensor[(5, 16, 12), int32] {
  @func_21867() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_16321() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %592 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %593 = @func_7195() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %594 = %592.0;
  %595 = %593.0;
  %596 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  %597 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
  (%594, %595, %596, %597)
}

def @func_242() -> Tensor[(5, 16, 12), float32] {
  @func_240() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_19342() -> (Tensor[(5, 16, 12), float32],) {
  %598 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %599 = %598.1;
  (%599,)
}

def @func_10109() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %605 = fn () -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %600 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %601 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
    %602 = %600.0;
    %603 = %601.0;
    %604 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
    (%602, %603, %604)
  };
  %605() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_9261() -> Tensor[(5, 16, 12), float32] {
  %606 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %606.1
}

def @func_23611() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %609 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %607 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
    %608 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
    (%607, %608)
  };
  %609() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_1238(%var_1237: Tensor[(7, 1, 3), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) {
  %625 = fn (%var_1156: Tensor[(7, 1, 3), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) {
    %610 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
    %611 = cast(meta[relay.Constant][13] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
    %612 = cast(meta[relay.Constant][13] /* ty=Tensor[(160), int32] */, dtype="int32") /* ty=Tensor[(160), int32] */;
    %613 = reshape(%611, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
    %614 = reshape(%612, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
    %615 = @func_918(%613, %614) /* ty=(Tensor[(5, 8, 4), int32],) */;
    %616 = cast(%var_1156, dtype="float32") /* ty=Tensor[(7, 1, 3), float32] */;
    %617 = atanh(%616) /* ty=Tensor[(7, 1, 3), float32] */;
    %618 = cast(%var_1156, dtype="float32") /* ty=Tensor[(7, 1, 3), float32] */;
    %619 = shape_of(%617, dtype="int32") /* ty=Tensor[(3), int32] */;
    %620 = cast(%617, dtype="float32") /* ty=Tensor[(7, 1, 3), float32] */;
    %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %622 = %610.1;
    %623 = %615.0;
    %624 = floor_divide(%620, %621) /* ty=Tensor[(7, ?, 3), float32] */;
    (%622, %623, meta[relay.Constant][13] /* ty=Tensor[(160), int32] */, %624)
  };
  %625(%var_1237) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) */
}

def @func_14969() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_14967() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_16582(%var_16580: Tensor[(3, 16, 13), float64], %var_16581: Tensor[(3, 16, 13), float64]) -> (Tensor[(12, 1, 1), float64], Tensor[(3, 16, 13), bool], Tensor[(5, 16, 12), int32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(3, 16, 13), uint16]) {
  %647 = fn (%var_16524: Tensor[(3, 16, 13), float64], %var_16573: Tensor[(3, 16, 13), float64]) -> (Tensor[(12, 1, 1), float64], Tensor[(3, 16, 13), bool], Tensor[(5, 16, 12), int32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(3, 16, 13), uint16]) {
    %626 = @func_16321() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
    %627 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
    %628 = %627.2;
    %629 = cast(%var_16524, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
    %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(%628, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %633 = @func_11655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
    %634 = @func_6574() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) */;
    %635 = cast(%var_16524, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
    %636 = cast(%var_16573, dtype="uint16") /* ty=Tensor[(3, 16, 13), uint16] */;
    %637 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %638 = cast(%628, dtype="uint16") /* ty=Tensor[(3, 16, 13), uint16] */;
    %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %640 = %626.3;
    %641 = less(%631, %632) /* ty=Tensor[(3, 16, 13), bool] */;
    %642 = @func_10328() /* ty=Tensor[(5, 16, 12), int32] */;
    %643 = %633.1;
    %644 = %634.3;
    %645 = erf(%635) /* ty=Tensor[(3, 16, 13), float64] */;
    %646 = multiply(%638, %639) /* ty=Tensor[(3, 16, 13), uint16] */;
    (%640, %641, %642, %643, %644, %645, %646)
  };
  %647(%var_16580, %var_16581) /* ty=(Tensor[(12, 1, 1), float64], Tensor[(3, 16, 13), bool], Tensor[(5, 16, 12), int32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(3, 16, 13), uint16]) */
}

def @func_9903() -> Tensor[(5, 16, 12), float32] {
  @func_9901() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_10905() -> (Tensor[(5, 16, 12), float32],) {
  @func_10903() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_19215() -> (Tensor[(5, 16, 12), int32],) {
  %648 = @func_7599() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
  %649 = %648.0;
  (%649,)
}

def @func_3032() -> Tensor[(2, 15, 12), uint8] {
  %651 = fn () -> Tensor[(2, 15, 12), uint8] {
    %650 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
    %650.1
  };
  %651() /* ty=Tensor[(2, 15, 12), uint8] */
}

def @func_19495(%var_19494: Tensor[(160), int32]) -> (Tensor[(5, 16, 12), int32], Tensor[(8, 12, ?), bool], Tensor[(96), bool], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %668 = fn (%var_19461: Tensor[(160), int32]) -> (Tensor[(5, 16, 12), int32], Tensor[(8, 12, ?), bool], Tensor[(96), bool], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %652 = cast(meta[relay.Constant][14] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
    %653 = cast(meta[relay.Constant][14] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
    %654 = reshape(%652, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
    %655 = reshape(%653, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
    %656 = cast(%var_19461, dtype="int32") /* ty=Tensor[(160), int32] */;
    %657 = cast(%var_19461, dtype="int32") /* ty=Tensor[(160), int32] */;
    %658 = reshape(%656, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
    %659 = reshape(%657, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int32] */;
    %660 = @func_918(%658, %659) /* ty=(Tensor[(5, 8, 4), int32],) */;
    %661 = @func_4341() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %662 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %663 = @func_18493() /* ty=Tensor[(5, 16, 12), int32] */;
    %664 = @func_9529(%654, %655) /* ty=Tensor[(8, 12, ?), bool] */;
    %665 = %660.0;
    %666 = %661.1;
    %667 = %662.1;
    (%663, %664, meta[relay.Constant][14] /* ty=Tensor[(96), bool] */, %665, %var_19461, %666, %667)
  };
  %668(%var_19494) /* ty=(Tensor[(5, 16, 12), int32], Tensor[(8, 12, ?), bool], Tensor[(96), bool], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_6504() -> Tensor[(360), uint8] {
  %669 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %669.2
}

def @func_8647() -> Tensor[(5, 16, 12), float32] {
  %670 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %670.0
}

def @func_20746() -> (Tensor[(5, 16, 12), float32],) {
  %671 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %672 = %671.0;
  (%672,)
}

def @func_2258() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_22253() -> Tensor[(12, 1, 1), float64] {
  @func_22251() /* ty=Tensor[(12, 1, 1), float64] */
}

def @func_20751() -> (Tensor[(5, 16, 12), float32],) {
  %673 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %674 = %673.0;
  (%674,)
}

def @func_21188() -> (Tensor[(5, 16, 12), float32],) {
  @func_21186() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_14321() -> Tensor[(160), int32] {
  %675 = @func_9094() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 8, 4), int32], Tensor[(160), int32]) */;
  %675.2
}

def @func_24369() -> (Tensor[(5, 16, 12), float32],) {
  @func_24367() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_10170() -> (Tensor[(5, 16, 12), float32],) {
  %676 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %677 = %676.0;
  (%677,)
}

def @func_16639() -> Tensor[(5, 16, 12), float32] {
  @func_16637() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_4400() -> Tensor[(5, 16, 12), int32] {
  @func_4398() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_10336() -> Tensor[(5, 16, 12), float32] {
  %679 = fn () -> Tensor[(5, 16, 12), float32] {
    %678 = @func_2139() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %678.2
  };
  %679() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_16694() -> (Tensor[(360), uint8],) {
  @func_16692() /* ty=(Tensor[(360), uint8],) */
}

def @func_9803() -> (Tensor[(5, 16, 12), float32],) {
  %680 = @func_4238() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %681 = %680.0;
  (%681,)
}

def @func_11791() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %682 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %683 = @func_7331() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %684 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %685 = %682.0;
  %686 = %683.0;
  %687 = %684.0;
  (%685, %686, %687)
}

def @func_18316() -> (Tensor[(5, 16, 12), float32],) {
  %688 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  (%688,)
}

def @func_8467() -> (Tensor[(5, 16, 12), float32],) {
  %691 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %689 = @func_4063() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %690 = %689.1;
    (%690,)
  };
  %691() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_20624() -> (Tensor[(5, 16, 12), float32],) {
  %694 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %692 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
    %693 = %692.1;
    (%693,)
  };
  %694() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_6288() -> Tensor[(5, 16, 12), int32] {
  %695 = fn () -> Tensor[(5, 16, 12), int32] {
    @func_2054() /* ty=Tensor[(5, 16, 12), int32] */
  };
  %695() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_18430() -> (Tensor[(5, 16, 12), float32], Tensor[(350), float32]) {
  %696 = @func_16488() /* ty=(Tensor[(350), bool],) */;
  %697 = %696.0;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(350), float32] */;
  %699 = @func_12539() /* ty=Tensor[(5, 16, 12), float32] */;
  %700 = sqrt(%698) /* ty=Tensor[(350), float32] */;
  (%699, %700)
}

def @func_7178(%var_7169: Tensor[(8, 7, 1), float32]) -> (Tensor[(8, 7, ?), int16],) {
  %701 = cast(%var_7169, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
  %702 = sin(%701) /* ty=Tensor[(8, 7, 1), float32] */;
  %703 = cast(%var_7169, dtype="int16") /* ty=Tensor[(8, 7, 1), int16] */;
  %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%702, dtype="int16") /* ty=Tensor[(8, 7, 1), int16] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %707 = bitwise_and(%705, %706) /* ty=Tensor[(8, 7, ?), int16] */;
  (%707,)
}

def @func_14719() -> Tensor[(5, 16, 12), float32] {
  %708 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %708.0
}

def @func_17301() -> Tensor[(5, 16, 12), float32] {
  %709 = @func_14140() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %709.0
}

def @func_1138() -> (Tensor[(5, 16, 12), float64],) {
  %714 = fn () -> (Tensor[(5, 16, 12), float64],) {
    %710 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %711 = %710.1;
    %712 = cast(%711, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
    %713 = acosh(%712) /* ty=Tensor[(5, 16, 12), float64] */;
    (%713,)
  };
  %714() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_5545() -> (Tensor[(5, 16, 12), int32],) {
  %715 = @func_3924() /* ty=Tensor[(5, 16, 12), int32] */;
  (%715,)
}

def @func_7601() -> (Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  @func_7599() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */
}

def @func_14597() -> Tensor[(12, 1, 1), float64] {
  %716 = @func_12183() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) */;
  %717 = %716.1;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  acos(%718) /* ty=Tensor[(12, 1, 1), float64] */
}

def @func_23997() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(616), uint64], Tensor[(616), uint64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %719 = @func_18236() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %720 = @func_21283() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %721 = cast(meta[relay.Constant][15] /* ty=Tensor[(616), uint64] */, dtype="uint64") /* ty=Tensor[(616), uint64] */;
  %722 = reshape(%721, newshape=[616]) /* ty=Tensor[(616), uint64] */;
  %723 = @func_8297(%722) /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), uint64]) */;
  %724 = @func_22449() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %725 = @func_10371() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %726 = %719.0;
  %727 = %720.0;
  %728 = %723.4;
  %729 = %724.1;
  %730 = @func_8200() /* ty=Tensor[(5, 16, 12), float32] */;
  %731 = %725.0;
  (%726, %727, %728, meta[relay.Constant][15] /* ty=Tensor[(616), uint64] */, %729, %730, %731)
}

def @func_17365() -> Tensor[(5, 16, 12), float32] {
  @func_17363() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_1682() -> (Tensor[(5, 16, 12), float64],) {
  %734 = fn () -> (Tensor[(5, 16, 12), float64],) {
    %732 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %733 = %732.0;
    (%733,)
  };
  %734() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_13318() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_13316() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_19111() -> (Tensor[(12, 1, 1), float64],) {
  %735 = @func_17562() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %736 = %735.0;
  (%736,)
}

def @func_20551() -> (Tensor[(5, 16, 12), float64],) {
  @func_20549() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_351() -> (Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
  %737 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %738 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %741 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 10, 15), int64] */, dtype="uint8") /* ty=Tensor[(12, 10, 15), uint8] */;
  %742 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 15), int64] */, dtype="uint8") /* ty=Tensor[(12, 10, 15), uint8] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %745 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %746 = logical_xor(%739, %740) /* ty=Tensor[(12, 10, 15), int64] */;
  %747 = bitwise_or(%743, %744) /* ty=Tensor[(12, 10, 15), uint8] */;
  %748 = %745.1;
  (%746, %747, %748)
}

def @func_2746() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %759 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
    %749 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %750 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %751 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
    %752 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %753 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %754 = %749.0;
    %755 = %750.0;
    %756 = %751.1;
    %757 = %752.0;
    %758 = %753.0;
    (%754, %755, %756, %757, %758)
  };
  %759() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */
}

def @func_6897(%var_6895: Tensor[(8, 10, 15), int16]) -> (Tensor[(8, 10, 15), bool],) {
  @func_6894(%var_6895) /* ty=(Tensor[(8, 10, 15), bool],) */
}

def @main() -> (Tensor[(5, 16, 12), int32], Tensor[(12, 1, 1), float32]) {
  %760 = @func_17564() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %761 = %760.0;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(12, 1, 1), float32] */;
  %763 = @func_9584() /* ty=Tensor[(5, 16, 12), int32] */;
  %764 = sinh(%762) /* ty=Tensor[(12, 1, 1), float32] */;
  (%763, %764)
}

def @func_8435() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */
}

def @func_588() -> (Tensor[(5, 16, 12), float32],) {
  @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_8820() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %769 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %765 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %766 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
    %767 = %765.1;
    %768 = %766.0;
    (%767, %768)
  };
  %769() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_5226() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) {
  %770 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %771 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %772 = %770.1;
  %773 = %771.1;
  (%772, %773)
}

def @func_13219() -> (Tensor[(5, 16, 12), float32],) {
  @func_13217() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_6272() -> (Tensor[(3, 16, 13), bool],) {
  %774 = @func_5903() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) */;
  %775 = %774.2;
  (%775,)
}

def @func_22873() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  @func_22871() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_17562() -> (Tensor[(12, 1, 1), float64],) {
  %776 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %777 = %776.1;
  (%777,)
}

def @func_16323() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  @func_16321() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_23575() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %778 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %779 = @func_22289() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %780 = %778.0;
  %781 = %779.0;
  (%780, %781)
}

def @func_6135() -> Tensor[(5, 16, 12), int32] {
  %783 = fn () -> Tensor[(5, 16, 12), int32] {
    %782 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %782.1
  };
  %783() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_3578() -> (Tensor[(5, 16, 12), float32],) {
  @func_3576() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_5995() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_5993() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_11037() -> (Tensor[(5, 16, 12), float32],) {
  %786 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %784 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %785 = %784.0;
    (%785,)
  };
  %786() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_20450() -> (Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %792 = fn () -> (Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %787 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %788 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
    %789 = @func_16230() /* ty=Tensor[(2, 15, 12), uint8] */;
    %790 = %787.2;
    %791 = %788.0;
    (%789, %790, %791)
  };
  %792() /* ty=(Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_15445() -> (Tensor[(5, 16, 12), int32], Tensor[(12, 10, 15), float32]) {
  %797 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(12, 10, 15), float32]) {
    %793 = @func_15212() /* ty=Tensor[(12, 10, 15), uint8] */;
    %794 = cast(%793, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
    %795 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
    %796 = sinh(%794) /* ty=Tensor[(12, 10, 15), float32] */;
    (%795, %796)
  };
  %797() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(12, 10, 15), float32]) */
}

def @func_24077() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %798 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  %799 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%798, %799)
}

def @func_3198() -> Tensor[(5, 16, 12), float32] {
  @func_3196() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_6730(%var_6728: uint64, %var_6729: Tensor[(11, 7, 8), uint64]) -> (Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) {
  %807 = fn (%var_6704: uint64, %var_6705: Tensor[(11, 7, 8), uint64]) -> (Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) {
    %800 = cast(%var_6704, dtype="uint64") /* ty=uint64 */;
    %801 = cast(%var_6705, dtype="uint64") /* ty=Tensor[(11, 7, 8), uint64] */;
    %802 = left_shift(%800, %801) /* ty=Tensor[(11, 7, 8), uint64] */;
    %803 = cast(%var_6704, dtype="int32") /* ty=int32 */;
    %804 = cast(%802, dtype="int32") /* ty=Tensor[(11, 7, 8), int32] */;
    %805 = @func_3196() /* ty=Tensor[(5, 16, 12), float32] */;
    %806 = add(%803, %804) /* ty=Tensor[(11, 7, 8), int32] */;
    (%805, %806)
  };
  %807(%var_6728, %var_6729) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */
}

def @func_10828() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) {
  %808 = @func_10035() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) */;
  %809 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %810 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %811 = %808.1;
  %812 = %809.0;
  (%810, %811, %812)
}

def @func_11499() -> (Tensor[(5, 16, 12), float32],) {
  @func_11497() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_11549() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %813 = @func_11274() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %814 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %815 = %813.0;
  %816 = %814.0;
  (%815, %816)
}

def @func_20234() -> Tensor[(5, 16, 12), float32] {
  @func_20232() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_22719() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_22717() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_22303() -> (Tensor[(5, 16, 12), float32], Tensor[(6, 7, 8), float32], Tensor[(336), float32]) {
  %821 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(6, 7, 8), float32], Tensor[(336), float32]) {
    %817 = cast(meta[relay.Constant][18] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %818 = reshape(%817, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), float32] */;
    %819 = @func_16637() /* ty=Tensor[(5, 16, 12), float32] */;
    %820 = @func_21256(%818) /* ty=Tensor[(6, 7, 8), float32] */;
    (%819, %820, meta[relay.Constant][18] /* ty=Tensor[(336), float32] */)
  };
  %821() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(6, 7, 8), float32], Tensor[(336), float32]) */
}

def @func_21997() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %822 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %823 = @func_15327() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %824 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %825 = %822.1;
  %826 = @func_13187() /* ty=Tensor[(5, 16, 12), float64] */;
  %827 = @func_16230() /* ty=Tensor[(2, 15, 12), uint8] */;
  %828 = %823.0;
  %829 = %824.1;
  %830 = @func_3924() /* ty=Tensor[(5, 16, 12), int32] */;
  (%825, %826, %827, %828, %829, %830)
}

def @func_3359() -> (Tensor[(12, 1, 1), float64],) {
  @func_3357() /* ty=(Tensor[(12, 1, 1), float64],) */
}

def @func_560() -> Tensor[(5, 16, 12), int32] {
  %832 = fn () -> Tensor[(5, 16, 12), int32] {
    %831 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %831.1
  };
  %832() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_19217() -> (Tensor[(5, 16, 12), int32],) {
  @func_19215() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_19444() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %833 = @func_5545() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %834 = @func_6462() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %835 = @func_8647() /* ty=Tensor[(5, 16, 12), float32] */;
  %836 = %833.0;
  %837 = %834.0;
  (%835, %836, %837)
}

def @func_19113() -> (Tensor[(12, 1, 1), float64],) {
  @func_19111() /* ty=(Tensor[(12, 1, 1), float64],) */
}

def @func_12729(%var_12684: Tensor[(7, 14, 6), uint16], %var_12685: Tensor[(7, 14, 6), uint16]) -> (Tensor[(7, 14, 6), uint16], Tensor[(5, 16, 12), float32], Tensor[(7, 14, 6), bool], Tensor[(5, 16, 12), float32]) {
  %838 = cast(%var_12685, dtype="uint16") /* ty=Tensor[(7, 14, 6), uint16] */;
  %839 = shape_of(%var_12684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%var_12684, dtype="uint16") /* ty=Tensor[(7, 14, 6), uint16] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %842 = cast(%var_12684, dtype="bool") /* ty=Tensor[(7, 14, 6), bool] */;
  %843 = shape_of(%var_12685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_12685, dtype="bool") /* ty=Tensor[(7, 14, 6), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %846 = @func_9481() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %847 = bitwise_and(%840, %841) /* ty=Tensor[(7, 14, 6), uint16] */;
  %848 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %849 = less(%844, %845) /* ty=Tensor[(7, 14, 6), bool] */;
  %850 = %846.3;
  (%847, %848, %849, %850)
}

def @func_24202() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_24200() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_21799() -> (Tensor[(5, 16, 12), int32],) {
  %853 = fn () -> (Tensor[(5, 16, 12), int32],) {
    %851 = @func_19083() /* ty=(Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), int32]) */;
    %852 = %851.1;
    (%852,)
  };
  %853() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_11987() -> (Tensor[(5, 16, 12), int32],) {
  @func_11985() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_13038(%var_13037: uint64) -> (Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), float64]) {
  %864 = fn (%var_13017: uint64) -> (Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), float64]) {
    %854 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %855 = cast(%var_13017, dtype="uint64") /* ty=uint64 */;
    %856 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), uint64] */, dtype="uint64") /* ty=Tensor[(616), uint64] */;
    %857 = reshape(%855, newshape=[]) /* ty=uint64 */;
    %858 = reshape(%856, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), uint64] */;
    %859 = @func_6727(%857, %858) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32]) */;
    %860 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), uint64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %861 = %854.0;
    %862 = %859.1;
    %863 = rsqrt(%860) /* ty=Tensor[(616), float64] */;
    (%861, %862, %var_13017, %863)
  };
  %864(%var_13037) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(11, 7, 8), int32], uint64, Tensor[(616), float64]) */
}

def @func_15804() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %868 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %865 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %866 = @func_9261() /* ty=Tensor[(5, 16, 12), float32] */;
    %867 = %865.0;
    (%866, %867)
  };
  %868() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_10903() -> (Tensor[(5, 16, 12), float32],) {
  %869 = @func_8725() /* ty=Tensor[(5, 16, 12), float32] */;
  (%869,)
}

def @func_17414() -> (Tensor[(5, 16, 12), float32],) {
  %870 = @func_12956() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), int32]) */;
  %871 = %870.0;
  (%871,)
}

def @func_10234() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  @func_10232() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_21656(%var_21655: Tensor[(588), uint16]) -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(588), uint16]) {
  %879 = fn (%var_21649: Tensor[(588), uint16]) -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(588), uint16]) {
    %872 = cast(%var_21649, dtype="uint16") /* ty=Tensor[(588), uint16] */;
    %873 = cast(%var_21649, dtype="uint16") /* ty=Tensor[(588), uint16] */;
    %874 = reshape(%872, newshape=[7, 14, 6]) /* ty=Tensor[(7, 14, 6), uint16] */;
    %875 = reshape(%873, newshape=[7, 14, 6]) /* ty=Tensor[(7, 14, 6), uint16] */;
    %876 = @func_12729(%874, %875) /* ty=(Tensor[(7, 14, 6), uint16], Tensor[(5, 16, 12), float32], Tensor[(7, 14, 6), bool], Tensor[(5, 16, 12), float32]) */;
    %877 = @func_14304() /* ty=Tensor[(5, 16, 12), int32] */;
    %878 = %876.1;
    (%877, %878, %var_21649)
  };
  %879(%var_21655) /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(588), uint16]) */
}

def @func_14615() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  @func_14613() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_6398() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) {
  %885 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) {
    %880 = @func_1404() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
    %881 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
    %882 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
    %883 = %880.0;
    %884 = %881.3;
    (%882, %883, %884)
  };
  %885() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) */
}

def @func_21039() -> Tensor[(5, 16, 12), float32] {
  @func_21037() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_11933() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %886 = @func_5993() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %887 = %886.1;
  %888 = @func_4625() /* ty=Tensor[(5, 16, 12), float32] */;
  (%887, %888)
}

def @func_11000() -> (Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %893 = fn () -> (Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
    %889 = @func_10232() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
    %890 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %891 = %889.1;
    %892 = %890.0;
    (%891, %892)
  };
  %893() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_21338() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %894 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %895 = @func_13217() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %896 = %894.1;
  %897 = %895.0;
  (%896, %897)
}

def @func_9968() -> (Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_16230() -> Tensor[(2, 15, 12), uint8] {
  %898 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %898.2
}

def @func_15831(%var_15830: uint16) -> (Tensor[(13, 7, 1), bool],) {
  %902 = fn (%var_15808: uint16) -> (Tensor[(13, 7, 1), bool],) {
    %899 = cast(%var_15808, dtype="bool") /* ty=bool */;
    %900 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 7, 1), uint16] */, dtype="bool") /* ty=Tensor[(13, 7, 1), bool] */;
    %901 = less_equal(%899, %900) /* ty=Tensor[(13, 7, 1), bool] */;
    (%901,)
  };
  %902(%var_15830) /* ty=(Tensor[(13, 7, 1), bool],) */
}

def @func_16215() -> (Tensor[(5, 16, 12), float32],) {
  @func_16213() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_5112() -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) {
  %903 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %904 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 144), float32] */, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
  %905 = reshape(%904, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %906 = @func_2202(%905) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float64], Tensor[(5, 16, 12), float32]) */;
  %907 = %903.1;
  %908 = %906.1;
  (%907, %908, meta[relay.Constant][21] /* ty=Tensor[(6, 144), float32] */)
}

def @func_1344() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_9460() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(21), float32]) {
  %915 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(21), float32]) {
    %909 = cast(meta[relay.Constant][22] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %910 = reshape(%909, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), float32] */;
    %911 = @func_1236(%910) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(160), int32], Tensor[(7, ?, 3), float32]) */;
    %912 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
    %913 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
    %914 = %911.1;
    (%912, %913, %914, meta[relay.Constant][22] /* ty=Tensor[(21), float32] */)
  };
  %915() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(21), float32]) */
}

def @func_11095() -> (Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) {
  @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */
}

def @func_24328() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_24326() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_20202() -> (Tensor[(5, 16, 12), float32],) {
  @func_20200() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_10172() -> (Tensor[(5, 16, 12), float32],) {
  @func_10170() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_4293() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_8726() -> Tensor[(5, 16, 12), float32] {
  %917 = fn () -> Tensor[(5, 16, 12), float32] {
    %916 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %916.1
  };
  %917() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_6211() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) {
  %918 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %919 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %920 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %921 = %918.0;
  %922 = %919.0;
  %923 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  %924 = %920.0;
  (%921, %922, %923, %924)
}

def @func_17951() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  @func_17949() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */
}

def @func_4451() -> (Tensor[(5, 16, 12), float32],) {
  %926 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %925 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
    (%925,)
  };
  %926() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_23058(%var_23057: Tensor[(14, 2, 9), uint32]) -> (Tensor[(14, 2, 9), uint32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %939 = fn (%var_22966: Tensor[(14, 2, 9), uint32]) -> (Tensor[(14, 2, 9), uint32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
    %927 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 2, 9), uint32] */, dtype="uint32") /* ty=Tensor[(14, 2, 9), uint32] */;
    %928 = shape_of(%var_22966, dtype="int32") /* ty=Tensor[(3), int32] */;
    %929 = cast(%var_22966, dtype="uint32") /* ty=Tensor[(14, 2, 9), uint32] */;
    %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %931 = @func_19215() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %932 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %933 = @func_19034() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %934 = bitwise_and(%929, %930) /* ty=Tensor[(14, 2, 9), uint32] */;
    %935 = %931.0;
    %936 = @func_18493() /* ty=Tensor[(5, 16, 12), int32] */;
    %937 = %932.0;
    %938 = %933.0;
    (%934, %935, %936, %937, %938)
  };
  %939(%var_23057) /* ty=(Tensor[(14, 2, 9), uint32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_15213() -> Tensor[(12, 10, 15), uint8] {
  %941 = fn () -> Tensor[(12, 10, 15), uint8] {
    %940 = @func_1875() /* ty=(Tensor[(12, 10, 15), uint8],) */;
    %940.0
  };
  %941() /* ty=Tensor[(12, 10, 15), uint8] */
}

def @func_1865() -> Tensor[(5, 16, 12), float32] {
  @func_1863() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_18699() -> (Tensor[(5, 16, 12), float64],) {
  %942 = @func_7476() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %943 = %942.3;
  (%943,)
}

def @func_24452() -> Tensor[(5, 16, 12), float32] {
  %944 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_240() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %944() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_6104() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %945 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %946 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %947 = %945.1;
  %948 = %946.0;
  (%947, %948)
}

def @func_13494() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %949 = @func_8771() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %950 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %951 = %949.0;
  %952 = %950.0;
  (%951, %952)
}

def @func_7478() -> (Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_7476() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_7197() -> (Tensor[(12, 1, 1), float64],) {
  @func_7195() /* ty=(Tensor[(12, 1, 1), float64],) */
}

def @func_9805() -> (Tensor[(5, 16, 12), float32],) {
  @func_9803() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_12878(%var_12876: Tensor[(11, 13, 2), bool]) -> (Tensor[(11, 13, 2), bool], Tensor[(5, 16, 12), float32], Tensor[(11, 13, 2), float32], Tensor[(5, 16, 12), int32]) {
  @func_12875(%var_12876) /* ty=(Tensor[(11, 13, 2), bool], Tensor[(5, 16, 12), float32], Tensor[(11, 13, 2), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_2672(%var_2670: Tensor[(21), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_2669(%var_2670) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_4238() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %953 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %954 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  %955 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  %956 = %953.0;
  (%954, %955, %956)
}

def @func_7018(%var_7016: Tensor[(5, 13, 13), float64], %var_7017: Tensor[(5, 13, 13), float64]) -> Tensor[(5, 13, 13), float64] {
  @func_7014(%var_7016, %var_7017) /* ty=Tensor[(5, 13, 13), float64] */
}

def @func_19399() -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
  %960 = fn () -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
    %957 = @func_13465() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
    %958 = @func_15212() /* ty=Tensor[(12, 10, 15), uint8] */;
    %959 = %957.0;
    (%958, %959)
  };
  %960() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_22390(%var_22388: Tensor[(2, 840), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 840), float32]) {
  @func_22387(%var_22388) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 840), float32]) */
}

def @func_17077() -> (Tensor[(5, 16, 12), float32],) {
  %962 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %961 = @func_8224() /* ty=Tensor[(5, 16, 12), float32] */;
    (%961,)
  };
  %962() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_14141() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %966 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %963 = @func_1289() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %964 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
    %965 = %963.0;
    (%964, %965)
  };
  %966() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_19504() -> (Tensor[(5, 16, 12), float64],) {
  %967 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %968 = %967.0;
  (%968,)
}

def @func_10552(%var_10512: Tensor[(15, 7, 9), float64], %var_10513: Tensor[(15, 7, 9), float64]) -> (Tensor[(15, 7, 9), bool], Tensor[(15, 7, 9), float32]) {
  %969 = cast(%var_10513, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %970 = shape_of(%var_10512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%var_10512, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %973 = cast(%var_10513, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %974 = shape_of(%var_10512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%var_10512, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %977 = power(%975, %976) /* ty=Tensor[(15, 7, 9), float64] */;
  %978 = cast(%977, dtype="float32") /* ty=Tensor[(15, 7, 9), float32] */;
  %979 = not_equal(%971, %972) /* ty=Tensor[(15, 7, 9), bool] */;
  %980 = acos(%978) /* ty=Tensor[(15, 7, 9), float32] */;
  (%979, %980)
}

def @func_17610() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %981 = @func_16213() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %982 = @func_11229() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %983 = @func_4238() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %984 = %981.0;
  %985 = %982.2;
  %986 = %983.1;
  (%984, %985, %986)
}

def @func_5993() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %987 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %988 = %987.0;
  %989 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%988, %989)
}

def @func_22289() -> (Tensor[(5, 16, 12), float32],) {
  %990 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %991 = %990.0;
  (%991,)
}

def @func_19096() -> (Tensor[(5, 16, 12), float32],) {
  @func_19094() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_21867() -> Tensor[(5, 16, 12), int32] {
  %992 = @func_20004() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %992.0
}

def @func_7888() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %996 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %993 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %994 = %993.0;
    %995 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
    (%994, %995)
  };
  %996() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_18477() -> (Tensor[(5, 16, 12), float32],) {
  %997 = @func_16095() /* ty=Tensor[(5, 16, 12), float32] */;
  (%997,)
}

def @func_6894(%var_6884: Tensor[(8, 10, 15), int16]) -> (Tensor[(8, 10, 15), bool],) {
  %998 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 10, 15), int16] */, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %999 = shape_of(%var_6884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1000 = cast(%var_6884, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1002 = not_equal(%1000, %1001) /* ty=Tensor[(8, 10, 15), bool] */;
  (%1002,)
}

def @func_21014() -> (Tensor[(5, 16, 12), int32],) {
  %1005 = fn () -> (Tensor[(5, 16, 12), int32],) {
    %1003 = @func_17746() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1004 = %1003.0;
    (%1004,)
  };
  %1005() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_21283() -> (Tensor[(5, 16, 12), float32],) {
  %1006 = @func_11791() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1007 = %1006.2;
  (%1007,)
}

def @func_23165() -> Tensor[(5, 16, 12), float32] {
  %1009 = fn () -> Tensor[(5, 16, 12), float32] {
    %1008 = @func_13726() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1008.0
  };
  %1009() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_9481() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1010 = @func_8015() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1011 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1012 = %1010.2;
  %1013 = %1011.0;
  %1014 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  %1015 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1012, %1013, %1014, %1015)
}

def @func_894() -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1025 = fn () -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1016 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
    %1017 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
    %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
    %1019 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
    %1020 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
    %1021 = %1016.1;
    %1022 = cos(%1018) /* ty=Tensor[(5, 16, 12), float32] */;
    %1023 = %1019.1;
    %1024 = %1020.0;
    (%1021, %1022, %1023, %1024)
  };
  %1025() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_7166() -> (Tensor[(5, 16, 12), float32],) {
  %1026 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1026,)
}

def @func_1041() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_12607() -> Tensor[(5, 16, 12), int32] {
  %1027 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1027.0
}

def @func_13590() -> (Tensor[(5, 16, 12), float32],) {
  %1028 = @func_11720() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1029 = %1028.1;
  (%1029,)
}

def @func_11721() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1034 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1030 = @func_8951() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1031 = @func_6447() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1032 = %1030.1;
    %1033 = %1031.0;
    (%1032, %1033)
  };
  %1034() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_14306() -> Tensor[(5, 16, 12), int32] {
  @func_14304() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_10721(%var_10710: Tensor[(21), float32]) -> (Tensor[(21), uint32],) {
  %1035 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1036 = %1035.2;
  %1037 = cast(%var_10710, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1038 = shape_of(%1036, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1039 = cast(%1036, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1041 = left_shift(%1039, %1040) /* ty=Tensor[(21), uint32] */;
  (%1041,)
}

def @func_18394() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) {
  %1046 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) {
    %1042 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1043 = @func_17692() /* ty=(Tensor[(5, 8, 4), int32],) */;
    %1044 = %1042.0;
    %1045 = %1043.0;
    (%1044, %1045)
  };
  %1046() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) */
}

def @func_18479() -> (Tensor[(5, 16, 12), float32],) {
  @func_18477() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_4499() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1050 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1047 = @func_3655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
    %1048 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
    %1049 = %1047.2;
    (%1048, %1049)
  };
  %1050() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_24602() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), int32]) {
  %1051 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1052 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
  %1053 = @func_24077() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1054 = %1051.0;
  %1055 = %1052.0;
  %1056 = %1053.0;
  (%1054, %1055, %1056)
}

def @func_1102() -> (Tensor[(5, 16, 12), float32],) {
  @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_8201() -> Tensor[(5, 16, 12), float32] {
  %1058 = fn () -> Tensor[(5, 16, 12), float32] {
    %1057 = @func_4135() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1057.1
  };
  %1058() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_3682() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_20058() -> Tensor[(5, 16, 12), float32] {
  %1059 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_15551() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %1059() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_3576() -> (Tensor[(5, 16, 12), float32],) {
  %1060 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1060,)
}

def @func_5775() -> Tensor[(5, 16, 12), float32] {
  @func_5773() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_20549() -> (Tensor[(5, 16, 12), float64],) {
  %1061 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
  %1062 = %1061.1;
  (%1062,)
}

def @func_1633() -> (Tensor[(5, 16, 12), int32],) {
  @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_2141() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_2139() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_13496() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_7476() -> (Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1063 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1064 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1065 = %1064.0;
  %1066 = cast(%1065, dtype="float64") /* ty=Tensor[(10, 4, 5), float64] */;
  %1067 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1068 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1069 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1070 = %1063.1;
  %1071 = rsqrt(%1066) /* ty=Tensor[(10, 4, 5), float64] */;
  %1072 = %1067.0;
  %1073 = %1068.0;
  %1074 = %1069.0;
  %1075 = @func_6287() /* ty=Tensor[(5, 16, 12), int32] */;
  (%1070, %1071, %1072, %1073, %1074, %1075)
}

def @func_9021() -> (Tensor[(5, 16, 12), float32],) {
  %1076 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1076,)
}

def @func_19621() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1081 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
    %1077 = @func_10371() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1078 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
    %1079 = %1077.1;
    %1080 = %1078.1;
    (%1079, %1080)
  };
  %1081() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_1725() -> Tensor[(5, 16, 12), float32] {
  @func_255() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_1484() -> Tensor[(5, 16, 12), float32] {
  %1085 = fn () -> Tensor[(5, 16, 12), float32] {
    %1082 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %1083 = %1082.0;
    %1084 = cast(%1083, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
    exp(%1084) /* ty=Tensor[(5, 16, 12), float32] */
  };
  %1085() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_2966() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) {
  %1086 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1087 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  %1088 = %1086.0;
  (%1087, %1088)
}

def @func_16232() -> Tensor[(2, 15, 12), uint8] {
  @func_16230() /* ty=Tensor[(2, 15, 12), uint8] */
}

def @func_22036() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1089 = @func_17515() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1090 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %1091 = %1089.0;
  (%1090, %1091)
}

def @func_1404() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %1092 = @func_1342() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1093 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
  %1094 = %1092.0;
  %1095 = %1093.0;
  (%1094, %1095)
}

def @func_15947(%var_15946: Tensor[(14, 10, 1), float32]) -> (Tensor[(14, 10, 1), float64], Tensor[(5, 16, 12), float32]) {
  %1102 = fn (%var_15912: Tensor[(14, 10, 1), float32]) -> (Tensor[(14, 10, 1), float64], Tensor[(5, 16, 12), float32]) {
    %1096 = cast(%var_15912, dtype="float32") /* ty=Tensor[(14, 10, 1), float32] */;
    %1097 = erf(%1096) /* ty=Tensor[(14, 10, 1), float32] */;
    %1098 = cast(%1097, dtype="float64") /* ty=Tensor[(14, 10, 1), float64] */;
    %1099 = @func_15327() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1100 = log10(%1098) /* ty=Tensor[(14, 10, 1), float64] */;
    %1101 = %1099.2;
    (%1100, %1101)
  };
  %1102(%var_15946) /* ty=(Tensor[(14, 10, 1), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_8433() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %1103 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1104 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1105 = %1103.3;
  %1106 = %1104.0;
  (%1105, %1106)
}

def @func_4069() -> (Tensor[(5, 16, 12), float32],) {
  @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_11952() -> Tensor[(5, 16, 12), float32] {
  %1108 = fn () -> Tensor[(5, 16, 12), float32] {
    %1107 = @func_4467() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1107.1
  };
  %1108() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_12804() -> (Tensor[(5, 16, 12), float32],) {
  @func_12802() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_14323() -> Tensor[(160), int32] {
  @func_14321() /* ty=Tensor[(160), int32] */
}

def @func_586() -> (Tensor[(5, 16, 12), float32],) {
  %1109 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1109,)
}

def @func_22482() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1110 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
  %1111 = @func_3576() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1112 = @func_19336() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1113 = %1110.0;
  %1114 = %1111.0;
  %1115 = %1112.3;
  (%1113, %1114, %1115)
}

def @func_17515() -> (Tensor[(5, 16, 12), float32],) {
  %1116 = @func_11497() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1117 = %1116.0;
  (%1117,)
}

def @func_10830() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) {
  @func_10828() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_11655() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %1118 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1119 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %1120 = %1118.0;
  %1121 = %1119.0;
  (%1120, %1121)
}

def @func_4931(%var_4929: Tensor[(350), float32]) -> (Tensor[(12, 10, 15), uint8], Tensor[(12, 10, 15), int64], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  @func_4928(%var_4929) /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(12, 10, 15), int64], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */
}

def @func_6262() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1125 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1122 = @func_4450() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1123 = %1122.0;
    %1124 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1123, %1124)
  };
  %1125() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_10660() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) {
  %1126 = @func_2603() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1127 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
  %1128 = %1126.0;
  %1129 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  %1130 = %1127.0;
  (%1128, %1129, %1130)
}

def @func_22822() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  @func_22820() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_11551() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_9532(%var_9530: Tensor[(8, 12, 1), bool], %var_9531: Tensor[(8, 12, 1), bool]) -> Tensor[(8, 12, ?), bool] {
  %1135 = fn (%var_9511: Tensor[(8, 12, 1), bool], %var_9512: Tensor[(8, 12, 1), bool]) -> Tensor[(8, 12, ?), bool] {
    %1131 = cast(%var_9512, dtype="bool") /* ty=Tensor[(8, 12, 1), bool] */;
    %1132 = shape_of(%var_9511, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1133 = cast(%var_9511, dtype="bool") /* ty=Tensor[(8, 12, 1), bool] */;
    %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%1133, %1134) /* ty=Tensor[(8, 12, ?), bool] */
  };
  %1135(%var_9530, %var_9531) /* ty=Tensor[(8, 12, ?), bool] */
}

def @func_17303() -> Tensor[(5, 16, 12), float32] {
  @func_17301() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_6985() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1140 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1136 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1137 = @func_6462() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1138 = %1136.0;
    %1139 = %1137.0;
    (%1138, %1139)
  };
  %1140() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_12802() -> (Tensor[(5, 16, 12), float32],) {
  %1141 = @func_5903() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) */;
  %1142 = %1141.0;
  (%1142,)
}

def @func_4067() -> (Tensor[(5, 16, 12), float32],) {
  %1143 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1143,)
}

def @func_3248() -> Tensor[(360), uint8] {
  @func_2818() /* ty=Tensor[(360), uint8] */
}

def @func_1437(%var_1429: Tensor[(12, 10, 15), uint8]) -> Tensor[(12, 10, 15), bool] {
  %1144 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1145 = %1144.1;
  %1146 = cast(%var_1429, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %1147 = shape_of(%1145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1148 = cast(%1145, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %1149 = dyn.reshape(%1146, %1147, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1148, %1149) /* ty=Tensor[(12, 10, 15), bool] */
}

def @func_20486() -> (Tensor[(5, 16, 12), float64],) {
  %1152 = fn () -> (Tensor[(5, 16, 12), float64],) {
    %1150 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %1151 = %1150.0;
    (%1151,)
  };
  %1152() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_21089() -> Tensor[(5, 16, 12), float32] {
  @func_21087() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_1290() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1155 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1153 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
    %1154 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1153, %1154)
  };
  %1155() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_8649() -> Tensor[(5, 16, 12), float32] {
  @func_8647() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_3530() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1159 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1156 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1157 = %1156.0;
    %1158 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1157, %1158)
  };
  %1159() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_3107() -> (Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1160 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1161 = cast(meta[relay.Constant][25] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1162 = reshape(%1161, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1163 = @func_2669(%1162) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1164 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1165 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1166 = %1160.0;
  %1167 = %1163.2;
  %1168 = %1164.1;
  %1169 = %1165.0;
  (%1166, %1167, meta[relay.Constant][25] /* ty=Tensor[(21), float32] */, %1168, %1169)
}

def @func_9404() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
  %1177 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) {
    %1170 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
    %1171 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1172 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
    %1173 = %1170.1;
    %1174 = @func_8411() /* ty=Tensor[(5, 16, 12), float32] */;
    %1175 = %1171.1;
    %1176 = %1172.2;
    (%1173, %1174, %1175, %1176)
  };
  %1177() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */
}

def @func_12442() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(624), float64]) {
  %1184 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(624), float64]) {
    %1178 = @func_9803() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1179 = cast(meta[relay.Constant][26] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %1180 = reshape(%1179, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %1181 = @func_6349(%1180) /* ty=(Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
    %1182 = %1178.0;
    %1183 = %1181.0;
    (%1182, %1183, meta[relay.Constant][26] /* ty=Tensor[(624), float64] */)
  };
  %1184() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(624), float64]) */
}

def @func_14657() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1188 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1185 = @func_13494() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1186 = @func_1879() /* ty=Tensor[(5, 16, 12), float32] */;
    %1187 = %1185.0;
    (%1186, %1187)
  };
  %1188() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_8015() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1189 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1190 = @func_4527() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1191 = @func_4398() /* ty=Tensor[(5, 16, 12), int32] */;
  %1192 = @func_1154() /* ty=Tensor[(5, 16, 12), float32] */;
  %1193 = %1189.0;
  %1194 = %1190.0;
  (%1191, %1192, %1193, %1194)
}

def @func_1440(%var_1438: Tensor[(12, 10, 15), uint8]) -> Tensor[(12, 10, 15), bool] {
  @func_1437(%var_1438) /* ty=Tensor[(12, 10, 15), bool] */
}

def @func_12052() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1199 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1195 = @func_3576() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1196 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1197 = %1195.0;
    %1198 = %1196.0;
    (%1197, %1198)
  };
  %1199() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_20753() -> (Tensor[(5, 16, 12), float32],) {
  @func_20751() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_8034() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1200 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1201 = @func_4971() /* ty=Tensor[(5, 16, 12), float32] */;
  %1202 = %1200.1;
  (%1201, %1202)
}

def @func_2539() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1203 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1204 = @func_1863() /* ty=Tensor[(5, 16, 12), float32] */;
  %1205 = %1203.1;
  (%1204, %1205)
}

def @func_2604() -> (Tensor[(5, 16, 12), float32],) {
  %1207 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1206 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1206,)
  };
  %1207() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_2820() -> Tensor[(360), uint8] {
  @func_2818() /* ty=Tensor[(360), uint8] */
}

def @func_21087() -> Tensor[(5, 16, 12), float32] {
  @func_21037() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_1881() -> Tensor[(5, 16, 12), float32] {
  @func_1879() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_19084() -> (Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), int32]) {
  %1212 = fn () -> (Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), int32]) {
    %1208 = @func_17692() /* ty=(Tensor[(5, 8, 4), int32],) */;
    %1209 = @func_11985() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %1210 = %1208.0;
    %1211 = %1209.0;
    (%1210, %1211)
  };
  %1212() /* ty=(Tensor[(5, 8, 4), int32], Tensor[(5, 16, 12), int32]) */
}

def @func_730(%var_729: Tensor[(3, 16, 13), float64]) -> (Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1218 = fn (%var_710: Tensor[(3, 16, 13), float64]) -> (Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %1213 = cast(%var_710, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
    %1214 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1215 = log(%1213) /* ty=Tensor[(3, 16, 13), float64] */;
    %1216 = %1214.0;
    %1217 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
    (%1215, %1216, %1217)
  };
  %1218(%var_729) /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_15144() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1222 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1219 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1220 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
    %1221 = %1219.0;
    (%1220, %1221)
  };
  %1222() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_9662() -> (Tensor[(5, 16, 12), float32],) {
  %1223 = @func_9403() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %1224 = %1223.1;
  (%1224,)
}

def @func_22536() -> Tensor[(11, 5, 7), float64] {
  @func_22534() /* ty=Tensor[(11, 5, 7), float64] */
}

def @func_4928(%var_4920: Tensor[(350), float32]) -> (Tensor[(12, 10, 15), uint8], Tensor[(12, 10, 15), int64], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %1225 = @func_1875() /* ty=(Tensor[(12, 10, 15), uint8],) */;
  %1226 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1227 = cast(%var_4920, dtype="float32") /* ty=Tensor[(350), float32] */;
  %1228 = reshape(%1227, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %1229 = @func_3463(%1228) /* ty=(Tensor[(5, 5, 14), float32],) */;
  %1230 = %1225.0;
  %1231 = %1226.0;
  %1232 = %1229.0;
  (%1230, %1231, %1232, %var_4920)
}

def @func_21456() -> (Tensor[(12, 10, 15), float64], Tensor[(21), uint32], Tensor[(1, 21), float32], Tensor[(5, 16, 12), float32]) {
  %1243 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(21), uint32], Tensor[(1, 21), float32], Tensor[(5, 16, 12), float32]) {
    %1233 = @func_15444() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(12, 10, 15), float32]) */;
    %1234 = %1233.1;
    %1235 = cast(%1234, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %1236 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 21), float32] */, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %1237 = reshape(%1236, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %1238 = @func_10721(%1237) /* ty=(Tensor[(21), uint32],) */;
    %1239 = @func_11828() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1240 = exp(%1235) /* ty=Tensor[(12, 10, 15), float64] */;
    %1241 = %1238.0;
    %1242 = %1239.0;
    (%1240, %1241, meta[relay.Constant][27] /* ty=Tensor[(1, 21), float32] */, %1242)
  };
  %1243() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(21), uint32], Tensor[(1, 21), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_12595() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1244 = @func_1137() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1245 = @func_9481() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1246 = @func_11549() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1247 = %1244.0;
  %1248 = %1245.1;
  %1249 = %1246.0;
  (%1247, %1248, %1249)
}

def @func_4291() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1250 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1251 = @func_2539() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1252 = %1250.1;
  %1253 = %1251.1;
  (%1252, %1253)
}

def @func_9209() -> Tensor[(5, 16, 12), float32] {
  @func_9207() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_2818() -> Tensor[(360), uint8] {
  %1254 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1254.2
}

def @func_9752() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1257 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
    %1255 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
    %1256 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1255, %1256)
  };
  %1257() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_4468() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1262 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1258 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1259 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1260 = %1258.0;
    %1261 = %1259.0;
    (%1260, %1261)
  };
  %1262() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_20748() -> (Tensor[(5, 16, 12), float32],) {
  @func_20746() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_5325(%var_5323: Tensor[(126), uint32]) -> (Tensor[(864), float32], Tensor[(5, 16, 12), int32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_5322(%var_5323) /* ty=(Tensor[(864), float32], Tensor[(5, 16, 12), int32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_5114() -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) {
  @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */
}

def @func_1659() -> (Tensor[(5, 16, 12), float32],) {
  %1265 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1263 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1264 = %1263.0;
    (%1264,)
  };
  %1265() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_3465(%var_3464: Tensor[(5, 5, 14), float32]) -> (Tensor[(5, 5, 14), float32],) {
  %1273 = fn (%var_3425: Tensor[(5, 5, 14), float32]) -> (Tensor[(5, 5, 14), float32],) {
    %1266 = cast(%var_3425, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
    %1267 = cosh(%1266) /* ty=Tensor[(5, 5, 14), float32] */;
    %1268 = cast(%1267, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
    %1269 = shape_of(%var_3425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1270 = cast(%var_3425, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
    %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1272 = mod(%1270, %1271) /* ty=Tensor[(5, 5, 14), float32] */;
    (%1272,)
  };
  %1273(%var_3464) /* ty=(Tensor[(5, 5, 14), float32],) */
}

def @func_12487() -> Tensor[(5, 16, 12), int32] {
  @func_12485() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_6274() -> (Tensor[(3, 16, 13), bool],) {
  @func_6272() /* ty=(Tensor[(3, 16, 13), bool],) */
}

def @func_14438() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) {
  %1277 = fn () -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) {
    %1274 = @func_6574() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) */;
    %1275 = @func_6580() /* ty=Tensor[(5, 16, 12), float64] */;
    %1276 = %1274.0;
    (%1275, %1276)
  };
  %1277() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) */
}

def @func_20481() -> (Tensor[(11, 5, 7), float32], Tensor[(5, 16, 12), float32]) {
  %1282 = fn () -> (Tensor[(11, 5, 7), float32], Tensor[(5, 16, 12), float32]) {
    %1278 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
    %1279 = @func_11497() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1280 = acosh(%1278) /* ty=Tensor[(11, 5, 7), float32] */;
    %1281 = %1279.0;
    (%1280, %1281)
  };
  %1282() /* ty=(Tensor[(11, 5, 7), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_13234() -> Tensor[(5, 16, 12), float32] {
  %1284 = fn () -> Tensor[(5, 16, 12), float32] {
    %1283 = @func_10170() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1283.0
  };
  %1284() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_9704() -> (Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), uint8]) {
  %1293 = fn () -> (Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), uint8]) {
    %1285 = @func_9503() /* ty=(Tensor[(2, 15, 12), uint8],) */;
    %1286 = %1285.0;
    %1287 = cast(%1286, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
    %1288 = tan(%1287) /* ty=Tensor[(2, 15, 12), float32] */;
    %1289 = cast(%1288, dtype="uint8") /* ty=Tensor[(2, 15, 12), uint8] */;
    %1290 = reshape(%1289, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), uint8] */;
    %1291 = @func_1929(%1290) /* ty=(Tensor[(2, 15, 12), uint8],) */;
    %1292 = %1291.0;
    (%1288, %1292)
  };
  %1293() /* ty=(Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), uint8]) */
}

def @func_12996() -> Tensor[(5, 16, 12), float32] {
  %1294 = @func_8702() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1294.2
}

def @func_19885() -> (Tensor[(350), bool], Tensor[(5, 16, 12), float32]) {
  @func_19883() /* ty=(Tensor[(350), bool], Tensor[(5, 16, 12), float32]) */
}

def @func_6830(%var_6828: Tensor[(192, 1), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(192, 1), float32], Tensor[(5, 16, 12), float32]) {
  @func_6827(%var_6828) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(192, 1), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_14599() -> Tensor[(12, 1, 1), float64] {
  @func_14597() /* ty=Tensor[(12, 1, 1), float64] */
}

def @func_3656() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %1301 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
    %1295 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
    %1296 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %1297 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
    %1298 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
    %1299 = %1295.1;
    %1300 = %1296.0;
    (%1297, %1298, %1299, %1300)
  };
  %1301() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */
}

def @func_17475() -> Tensor[(5, 16, 12), float64] {
  %1302 = fn () -> Tensor[(5, 16, 12), float64] {
    @func_13187() /* ty=Tensor[(5, 16, 12), float64] */
  };
  %1302() /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_2351(%var_2349: Tensor[(864), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) {
  @func_2348(%var_2349) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_3999() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1306 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %1303 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
    %1304 = @func_2040() /* ty=Tensor[(5, 16, 12), float32] */;
    %1305 = %1303.2;
    (%1304, %1305)
  };
  %1306() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_18119() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %1307 = @func_16981() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1308 = %1307.0;
  %1309 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1308, %1309)
}

def @func_21159() -> Tensor[(5, 16, 12), bool] {
  %1311 = fn () -> Tensor[(5, 16, 12), bool] {
    %1310 = @func_2459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) */;
    %1310.1
  };
  %1311() /* ty=Tensor[(5, 16, 12), bool] */
}

def @func_20232() -> Tensor[(5, 16, 12), float32] {
  %1312 = @func_18834() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) */;
  %1312.0
}

def @func_11985() -> (Tensor[(5, 16, 12), int32],) {
  %1313 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
  %1314 = %1313.0;
  (%1314,)
}

def @func_13070() -> Tensor[(5, 16, 12), int32] {
  %1316 = fn () -> Tensor[(5, 16, 12), int32] {
    %1315 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %1315.0
  };
  %1316() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_4137() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_4135() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_679() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) {
  @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */
}

def @func_6494() -> Tensor[(5, 16, 12), float32] {
  %1318 = fn () -> Tensor[(5, 16, 12), float32] {
    %1317 = @func_5067() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1317.0
  };
  %1318() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_1039() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1319 = @func_893() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1320 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  %1321 = %1319.2;
  (%1320, %1321)
}

def @func_7669() -> Tensor[(5, 16, 12), float32] {
  @func_7667() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_19883() -> (Tensor[(350), bool], Tensor[(5, 16, 12), float32]) {
  %1322 = @func_16488() /* ty=(Tensor[(350), bool],) */;
  %1323 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1324 = %1322.0;
  %1325 = %1323.0;
  (%1324, %1325)
}

def @func_11793() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_11791() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_8017() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_8015() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_8702() -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1326 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1327 = @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */;
  %1328 = %1326.0;
  %1329 = @func_3422() /* ty=Tensor[(5, 16, 12), float32] */;
  %1330 = %1327.3;
  (%1328, %1329, %1330)
}

def @func_2348(%var_2319: Tensor[(864), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) {
  %1331 = cast(%var_2319, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1332 = reshape(%1331, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
  %1333 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1334 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  %1335 = @func_1731(%1332) /* ty=Tensor[(9, 12, 8), float32] */;
  %1336 = %1333.0;
  (%1334, %1335, %var_2319, %1336)
}

def @func_16777() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1341 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1337 = @func_4527() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1338 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1339 = %1337.0;
    %1340 = %1338.0;
    (%1339, %1340)
  };
  %1341() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_20200() -> (Tensor[(5, 16, 12), float32],) {
  %1342 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1343 = %1342.0;
  (%1343,)
}

def @func_21493() -> (Tensor[(160), int32],) {
  @func_21491() /* ty=(Tensor[(160), int32],) */
}

def @func_6575() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) {
  %1356 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) {
    %1344 = @func_677() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) */;
    %1345 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1346 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
    %1347 = @func_3196() /* ty=Tensor[(5, 16, 12), float32] */;
    %1348 = cast(%1347, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
    %1349 = shape_of(%1346, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1350 = cast(%1346, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
    %1351 = dyn.reshape(%1348, %1349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1352 = %1344.2;
    %1353 = %1345.0;
    %1354 = logical_and(%1350, %1351) /* ty=Tensor[(5, 16, 12), bool] */;
    %1355 = @func_1725() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1352, %1353, %1354, %1355)
  };
  %1356() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) */
}

def @func_14831() -> Tensor[(5, 16, 12), float32] {
  @func_14829() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_18708() -> Tensor[(5, 16, 12), float32] {
  @func_18706() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_11829() -> (Tensor[(5, 16, 12), float32],) {
  %1359 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1357 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1358 = %1357.1;
    (%1358,)
  };
  %1359() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_23577() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  @func_23575() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_18074() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1364 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1360 = @func_1100() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1361 = %1360.0;
    %1362 = @func_6493() /* ty=Tensor[(5, 16, 12), float32] */;
    %1363 = @func_17969() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1361, %1362, %1363)
  };
  %1364() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_1406() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  @func_1404() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_921(%var_919: Tensor[(5, 8, 4), int32], %var_920: Tensor[(5, 8, 4), int32]) -> (Tensor[(5, 8, 4), int32],) {
  %1370 = fn (%var_910: Tensor[(5, 8, 4), int32], %var_911: Tensor[(5, 8, 4), int32]) -> (Tensor[(5, 8, 4), int32],) {
    %1365 = cast(%var_911, dtype="int32") /* ty=Tensor[(5, 8, 4), int32] */;
    %1366 = shape_of(%var_910, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1367 = cast(%var_910, dtype="int32") /* ty=Tensor[(5, 8, 4), int32] */;
    %1368 = dyn.reshape(%1365, %1366, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1369 = bitwise_or(%1367, %1368) /* ty=Tensor[(5, 8, 4), int32] */;
    (%1369,)
  };
  %1370(%var_919, %var_920) /* ty=(Tensor[(5, 8, 4), int32],) */
}

def @func_16637() -> Tensor[(5, 16, 12), float32] {
  @func_8411() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_10037() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) {
  @func_10035() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32]) */
}

def @func_10232() -> (Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %1371 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1372 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1373 = @func_8224() /* ty=Tensor[(5, 16, 12), float32] */;
  %1374 = %1371.2;
  %1375 = %1372.1;
  (%1373, %1374, %1375)
}

def @func_10662() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) {
  @func_10660() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(12, 1, 1), float64]) */
}

def @func_11681(%var_11679: Tensor[(96), bool]) -> (Tensor[(5, 16, 12), float32], Tensor[(8, 12, ?), bool], Tensor[(96), bool]) {
  @func_11678(%var_11679) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(8, 12, ?), bool], Tensor[(96), bool]) */
}

def @func_21259(%var_21257: Tensor[(6, 7, 8), float32]) -> Tensor[(6, 7, 8), float32] {
  @func_21256(%var_21257) /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_16350() -> (Tensor[(5, 16, 12), float32],) {
  %1378 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1376 = @func_11229() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1377 = %1376.0;
    (%1377,)
  };
  %1378() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_12185() -> (Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) {
  @func_12183() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_18864() -> (Tensor[(5, 16, 12), float32],) {
  @func_18862() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_3844() -> (Tensor[(12, 1, 1), float64],) {
  @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */
}

def @func_453() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1379 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  %1380 = cast(%1379, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  %1381 = rsqrt(%1380) /* ty=Tensor[(5, 16, 12), float64] */;
  %1382 = cast(%1379, dtype="int32") /* ty=Tensor[(5, 16, 12), int32] */;
  %1383 = shape_of(%1381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1384 = cast(%1381, dtype="int32") /* ty=Tensor[(5, 16, 12), int32] */;
  %1385 = dyn.reshape(%1382, %1383, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1386 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %1387 = multiply(%1384, %1385) /* ty=Tensor[(5, 16, 12), int32] */;
  (%1386, %1387)
}

def @func_12485() -> Tensor[(5, 16, 12), int32] {
  %1388 = @func_5545() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1388.0
}

def @func_5547() -> (Tensor[(5, 16, 12), int32],) {
  @func_5545() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_2256() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %1389 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1390 = cast(meta[relay.Constant][29] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1391 = reshape(%1390, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), uint8] */;
  %1392 = @func_1929(%1391) /* ty=(Tensor[(2, 15, 12), uint8],) */;
  %1393 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
  %1394 = %1389.1;
  %1395 = %1392.0;
  %1396 = %1393.1;
  (%1394, %1395, meta[relay.Constant][29] /* ty=Tensor[(360), uint8] */, %1396)
}

def @func_14908() -> (Tensor[(5, 16, 12), float32],) {
  %1397 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1398 = %1397.0;
  (%1398,)
}

def @func_15179() -> Tensor[(5, 16, 12), int32] {
  %1399 = @func_12233() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1399.0
}

def @func_6581() -> Tensor[(5, 16, 12), float64] {
  %1401 = fn () -> Tensor[(5, 16, 12), float64] {
    %1400 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %1400.0
  };
  %1401() /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_16145() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1406 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1402 = @func_12802() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1403 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1404 = %1402.0;
    %1405 = %1403.0;
    (%1404, %1405)
  };
  %1406() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_19338() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_19336() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_3170() -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
  %1411 = fn () -> (Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) {
    %1407 = @func_1875() /* ty=(Tensor[(12, 10, 15), uint8],) */;
    %1408 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1409 = %1407.0;
    %1410 = %1408.1;
    (%1409, %1410)
  };
  %1411() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_17886() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1412 = @func_12802() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1413 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1414 = @func_14967() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1415 = @func_9403() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(360), uint8]) */;
  %1416 = %1412.0;
  %1417 = %1413.0;
  %1418 = %1414.0;
  %1419 = %1415.2;
  (%1416, %1417, %1418, %1419)
}

def @func_19344() -> (Tensor[(5, 16, 12), float32],) {
  @func_19342() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_13651() -> (Tensor[(12, 10, 15), int64],) {
  @func_13649() /* ty=(Tensor[(12, 10, 15), int64],) */
}

def @func_1727() -> Tensor[(5, 16, 12), float32] {
  @func_1725() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_9901() -> Tensor[(5, 16, 12), float32] {
  @func_2040() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_21690() -> Tensor[(5, 16, 12), int32] {
  %1421 = fn () -> Tensor[(5, 16, 12), int32] {
    %1420 = @func_16751() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
    %1420.0
  };
  %1421() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_22651() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1422 = @func_12233() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1423 = @func_17414() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1424 = %1422.0;
  %1425 = %1423.0;
  (%1424, %1425)
}

def @func_22038() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_22036() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_22717() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1426 = @func_20503() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1427 = %1426.0;
  %1428 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1427, %1428)
}

def @func_23266() -> (Tensor[(5, 16, 12), float32],) {
  %1431 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1429 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1430 = %1429.0;
    (%1430,)
  };
  %1431() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_9966() -> (Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) {
  %1432 = @func_3248() /* ty=Tensor[(360), uint8] */;
  %1433 = @func_8200() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1432, %1433)
}

def @func_12759() -> (Tensor[(15, 9, 2), float32],) {
  %1436 = fn () -> (Tensor[(15, 9, 2), float32],) {
    %1434 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 2), float32] */;
    %1435 = sigmoid(%1434) /* ty=Tensor[(15, 9, 2), float32] */;
    (%1435,)
  };
  %1436() /* ty=(Tensor[(15, 9, 2), float32],) */
}

def @func_17949() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %1437 = @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1438 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1439 = @func_5574() /* ty=Tensor[(5, 16, 12), float32] */;
  %1440 = %1437.0;
  %1441 = %1438.0;
  %1442 = @func_17474() /* ty=Tensor[(5, 16, 12), float64] */;
  (%1439, %1440, %1441, %1442)
}

def @func_24079() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  @func_24077() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_13649() -> (Tensor[(12, 10, 15), int64],) {
  %1443 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_10371() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1445 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1446 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
  %1447 = %1445.1;
  %1448 = %1446.0;
  (%1447, %1448)
}

def @func_22387(%var_22377: Tensor[(2, 840), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 840), float32]) {
  %1449 = @func_16349() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1450 = @func_8466() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1451 = cast(%var_22377, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
  %1452 = cast(%var_22377, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
  %1453 = reshape(%1451, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %1454 = reshape(%1452, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %1455 = @func_18561(%1453, %1454) /* ty=Tensor[(14, 12, 10), float64] */;
  %1456 = cast(%1455, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %1457 = shape_of(%var_22377, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1458 = cast(%var_22377, dtype="float32") /* ty=Tensor[(2, 840), float32] */;
  %1459 = dyn.reshape(%1456, %1457, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1460 = %1449.0;
  %1461 = @func_17969() /* ty=Tensor[(5, 16, 12), float32] */;
  %1462 = %1450.0;
  %1463 = power(%1458, %1459) /* ty=Tensor[(2, 840), float32] */;
  (%1460, %1461, %1462, %1463)
}

def @func_24271(%var_24270: int64) -> (Tensor[(12, 15, 5), int64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1470 = fn (%var_24228: int64) -> (Tensor[(12, 15, 5), int64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %1464 = cast(%var_24228, dtype="int64") /* ty=int64 */;
    %1465 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 15, 5), int64] */, dtype="int64") /* ty=Tensor[(12, 15, 5), int64] */;
    %1466 = @func_14186() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1467 = right_shift(%1464, %1465) /* ty=Tensor[(12, 15, 5), int64] */;
    %1468 = %1466.0;
    %1469 = @func_18493() /* ty=Tensor[(5, 16, 12), int32] */;
    (%1467, %1468, %1469)
  };
  %1470(%var_24270) /* ty=(Tensor[(12, 15, 5), int64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_9263() -> Tensor[(5, 16, 12), float32] {
  @func_9261() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_20260(%var_20258: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), float64], Tensor[(350), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  @func_20257(%var_20258) /* ty=(Tensor[(16, 3, 12), float64], Tensor[(350), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */
}

def @func_1839() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1471 = @func_453() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1472 = @func_1658() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1473 = %1471.1;
  %1474 = %1472.0;
  %1475 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1473, %1474, %1475)
}

def @func_2459() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) {
  %1476 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1477 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1478 = %1477.2;
  %1479 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1480 = %1479.0;
  %1481 = cast(%1480, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %1482 = shape_of(%1478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1483 = cast(%1478, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %1484 = dyn.reshape(%1481, %1482, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1485 = %1476.0;
  %1486 = less_equal(%1483, %1484) /* ty=Tensor[(5, 16, 12), bool] */;
  (%1485, %1486)
}

def @func_18835() -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) {
  %1493 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) {
    %1487 = @func_9966() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
    %1488 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
    %1489 = reshape(%1488, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), uint8] */;
    %1490 = @func_1929(%1489) /* ty=(Tensor[(2, 15, 12), uint8],) */;
    %1491 = %1487.1;
    %1492 = %1490.0;
    (%1491, %1492, meta[relay.Constant][32] /* ty=Tensor[(360), uint8] */)
  };
  %1493() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) */
}

def @func_17048() -> (Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(6, 144), float64]) {
  @func_17046() /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(6, 144), float64]) */
}

def @func_8413() -> Tensor[(5, 16, 12), float32] {
  @func_8411() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_24367() -> (Tensor[(5, 16, 12), float32],) {
  %1494 = @func_24200() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1495 = %1494.4;
  (%1495,)
}

def @func_7946() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
  %1502 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) {
    %1496 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1497 = cast(meta[relay.Constant][33] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %1498 = reshape(%1497, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
    %1499 = @func_3463(%1498) /* ty=(Tensor[(5, 5, 14), float32],) */;
    %1500 = %1496.0;
    %1501 = %1499.0;
    (%1500, %1501, meta[relay.Constant][33] /* ty=Tensor[(350), float32] */)
  };
  %1502() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */
}

def @func_14751() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1505 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %1503 = @func_10938() /* ty=Tensor[(5, 16, 12), float32] */;
    %1504 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
    (%1503, %1504)
  };
  %1505() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_11230() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1512 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1506 = @func_7555() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1507 = @func_3655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
    %1508 = @func_4527() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1509 = %1506.2;
    %1510 = %1507.0;
    %1511 = %1508.0;
    (%1509, %1510, %1511)
  };
  %1512() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_14304() -> Tensor[(5, 16, 12), int32] {
  %1513 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1513.1
}

def @func_10152(%var_10151: Tensor[(350), float32]) -> (Tensor[(350), bool], Tensor[(5, 16, 12), float64]) {
  %1523 = fn (%var_10137: Tensor[(350), float32]) -> (Tensor[(350), bool], Tensor[(5, 16, 12), float64]) {
    %1514 = @func_7945() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */;
    %1515 = %1514.2;
    %1516 = cast(%var_10137, dtype="bool") /* ty=Tensor[(350), bool] */;
    %1517 = shape_of(%1515, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1518 = cast(%1515, dtype="bool") /* ty=Tensor[(350), bool] */;
    %1519 = dyn.reshape(%1516, %1517, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1520 = @func_1681() /* ty=(Tensor[(5, 16, 12), float64],) */;
    %1521 = greater(%1518, %1519) /* ty=Tensor[(350), bool] */;
    %1522 = %1520.0;
    (%1521, %1522)
  };
  %1523(%var_10151) /* ty=(Tensor[(350), bool], Tensor[(5, 16, 12), float64]) */
}

def @func_955() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1529 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1524 = @func_482() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1525 = %1524.0;
    %1526 = cast(%1525, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
    %1527 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
    %1528 = cosh(%1526) /* ty=Tensor[(5, 16, 12), float32] */;
    (%1527, %1528)
  };
  %1529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_11678(%var_11670: Tensor[(96), bool]) -> (Tensor[(5, 16, 12), float32], Tensor[(8, 12, ?), bool], Tensor[(96), bool]) {
  %1530 = cast(%var_11670, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1531 = cast(%var_11670, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1532 = reshape(%1530, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
  %1533 = reshape(%1531, newshape=[8, 12, 1]) /* ty=Tensor[(8, 12, 1), bool] */;
  %1534 = @func_8647() /* ty=Tensor[(5, 16, 12), float32] */;
  %1535 = @func_9529(%1532, %1533) /* ty=Tensor[(8, 12, ?), bool] */;
  (%1534, %1535, %var_11670)
}

def @func_24326() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1536 = @func_18430() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(350), float32]) */;
  %1537 = @func_18862() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1538 = %1536.0;
  %1539 = %1537.0;
  %1540 = @func_20232() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1538, %1539, %1540)
}

def @func_14505() -> (Tensor[(5, 16, 12), int32],) {
  %1542 = fn () -> (Tensor[(5, 16, 12), int32],) {
    %1541 = @func_12607() /* ty=Tensor[(5, 16, 12), int32] */;
    (%1541,)
  };
  %1542() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_16384() -> (Tensor[(3, 16, 13), bool],) {
  %1543 = @func_6272() /* ty=(Tensor[(3, 16, 13), bool],) */;
  %1544 = %1543.0;
  (%1544,)
}

def @func_1731(%var_1728: Tensor[(9, 12, 8), float32]) -> Tensor[(9, 12, 8), float32] {
  %1545 = cast(%var_1728, dtype="float32") /* ty=Tensor[(9, 12, 8), float32] */;
  cosh(%1545) /* ty=Tensor[(9, 12, 8), float32] */
}

def @func_2054() -> Tensor[(5, 16, 12), int32] {
  %1546 = @func_1631() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1546.0
}

def @func_14021() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) {
  %1556 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) {
    %1547 = @func_2256() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
    %1548 = @func_8433() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) */;
    %1549 = cast(meta[relay.Constant][34] /* ty=Tensor[(175, 2), float32] */, dtype="float32") /* ty=Tensor[(175, 2), float32] */;
    %1550 = reshape(%1549, newshape=[350]) /* ty=Tensor[(350), float32] */;
    %1551 = @func_10150(%1550) /* ty=(Tensor[(350), bool], Tensor[(5, 16, 12), float64]) */;
    %1552 = @func_12607() /* ty=Tensor[(5, 16, 12), int32] */;
    %1553 = %1547.0;
    %1554 = %1548.1;
    %1555 = %1551.0;
    (%1552, %1553, %1554, %1555, meta[relay.Constant][34] /* ty=Tensor[(175, 2), float32] */)
  };
  %1556() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) */
}

def @func_17970() -> Tensor[(5, 16, 12), float32] {
  %1557 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_3422() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %1557() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_13316() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1558 = @func_7887() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1559 = @func_12802() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1560 = @func_863() /* ty=Tensor[(5, 16, 12), float32] */;
  %1561 = %1558.0;
  %1562 = %1559.0;
  (%1560, %1561, %1562)
}

def @func_23411() -> Tensor[(12, 10, 15), uint8] {
  %1563 = fn () -> Tensor[(12, 10, 15), uint8] {
    @func_8376() /* ty=Tensor[(12, 10, 15), uint8] */
  };
  %1563() /* ty=Tensor[(12, 10, 15), uint8] */
}

def @func_19506() -> (Tensor[(5, 16, 12), float64],) {
  @func_19504() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_17694() -> (Tensor[(5, 8, 4), int32],) {
  @func_17692() /* ty=(Tensor[(5, 8, 4), int32],) */
}

def @func_18494() -> Tensor[(5, 16, 12), int32] {
  %1565 = fn () -> Tensor[(5, 16, 12), int32] {
    %1564 = @func_4135() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1564.2
  };
  %1565() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_16982() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1570 = fn () -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1566 = @func_4341() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1567 = %1566.0;
    %1568 = @func_10938() /* ty=Tensor[(5, 16, 12), float32] */;
    %1569 = @func_3196() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1567, %1568, %1569)
  };
  %1570() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_7168() -> (Tensor[(5, 16, 12), float32],) {
  @func_7166() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_20082() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1571 = @func_7555() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1572 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1573 = %1571.1;
  %1574 = %1572.0;
  (%1573, %1574)
}

def @func_21552() -> Tensor[(5, 16, 12), int32] {
  %1576 = fn () -> Tensor[(5, 16, 12), int32] {
    %1575 = @func_8034() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1575.1
  };
  %1576() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_14910() -> (Tensor[(5, 16, 12), float32],) {
  @func_14908() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_16386() -> (Tensor[(3, 16, 13), bool],) {
  @func_16384() /* ty=(Tensor[(3, 16, 13), bool],) */
}

def @func_16612(%var_16611: uint16) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 4), uint16], uint16, Tensor[(48), uint16]) {
  %1585 = fn (%var_16599: uint16) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 4), uint16], uint16, Tensor[(48), uint16]) {
    %1577 = @func_14967() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1578 = cast(%var_16599, dtype="uint16") /* ty=uint16 */;
    %1579 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), uint16] */, dtype="uint16") /* ty=Tensor[(48), uint16] */;
    %1580 = reshape(%1578, newshape=[]) /* ty=uint16 */;
    %1581 = reshape(%1579, newshape=[12, 1, 4]) /* ty=Tensor[(12, 1, 4), uint16] */;
    %1582 = %1577.1;
    %1583 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
    %1584 = @func_14493(%1580, %1581) /* ty=Tensor[(12, 1, 4), uint16] */;
    (%1582, %1583, %1584, %var_16599, meta[relay.Constant][35] /* ty=Tensor[(48), uint16] */)
  };
  %1585(%var_16611) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(12, 1, 4), uint16], uint16, Tensor[(48), uint16]) */
}

def @func_24216() -> (Tensor[(5, 16, 12), float32],) {
  @func_24214() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_11935() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_11933() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_17363() -> Tensor[(5, 16, 12), float32] {
  @func_3196() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_10939() -> Tensor[(5, 16, 12), float32] {
  %1586 = fn () -> Tensor[(5, 16, 12), float32] {
    @func_5773() /* ty=Tensor[(5, 16, 12), float32] */
  };
  %1586() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_4528() -> (Tensor[(5, 16, 12), float32],) {
  %1589 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1587 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1588 = %1587.1;
    (%1588,)
  };
  %1589() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_13912(%var_13910: Tensor[(845), float64]) -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 13, 13), float64], Tensor[(845), float64]) {
  @func_13909(%var_13910) /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 13, 13), float64], Tensor[(845), float64]) */
}

def @func_12541() -> Tensor[(5, 16, 12), float32] {
  @func_12539() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_9207() -> Tensor[(5, 16, 12), float32] {
  @func_863() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_2204(%var_2203: Tensor[(864), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float64], Tensor[(5, 16, 12), float32]) {
  %1600 = fn (%var_2151: Tensor[(864), float32]) -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float64], Tensor[(5, 16, 12), float32]) {
    %1590 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1591 = cast(%var_2151, dtype="float32") /* ty=Tensor[(864), float32] */;
    %1592 = reshape(%1591, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
    %1593 = @func_1731(%1592) /* ty=Tensor[(9, 12, 8), float32] */;
    %1594 = cast(%1593, dtype="float64") /* ty=Tensor[(9, 12, 8), float64] */;
    %1595 = @func_289() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) */;
    %1596 = @func_1725() /* ty=Tensor[(5, 16, 12), float32] */;
    %1597 = %1590.0;
    %1598 = sqrt(%1594) /* ty=Tensor[(9, 12, 8), float64] */;
    %1599 = %1595.1;
    (%1596, %var_2151, %1597, %1598, %1599)
  };
  %1600(%var_2203) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(9, 12, 8), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_16213() -> (Tensor[(5, 16, 12), float32],) {
  %1601 = @func_415() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1601,)
}

def @func_20005() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  %1606 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
    %1602 = @func_14504() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %1603 = @func_6574() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(5, 16, 12), float32]) */;
    %1604 = %1602.0;
    %1605 = %1603.3;
    (%1604, %1605)
  };
  %1606() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_7556() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1614 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1607 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1608 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1609 = @func_6462() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1610 = %1607.0;
    %1611 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
    %1612 = %1608.0;
    %1613 = %1609.0;
    (%1610, %1611, %1612, %1613)
  };
  %1614() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_6425() -> (Tensor[(5, 16, 12), float32],) {
  @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_14864() -> (Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) {
  @func_14862() /* ty=(Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_257() -> Tensor[(5, 16, 12), float32] {
  @func_255() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_22212(%var_22206: Tensor[(845), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(10, 4, 5), float32], Tensor[(845), float64]) {
  %1615 = @func_8702() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1616 = cast(%var_22206, dtype="float64") /* ty=Tensor[(845), float64] */;
  %1617 = reshape(%1616, newshape=[845]) /* ty=Tensor[(845), float64] */;
  %1618 = @func_13909(%1617) /* ty=(Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 13, 13), float64], Tensor[(845), float64]) */;
  %1619 = %1615.1;
  %1620 = %1618.0;
  (%1619, %1620, %var_22206)
}

def @func_18701() -> (Tensor[(5, 16, 12), float64],) {
  @func_18699() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_21723() -> (Tensor[(5, 16, 12), float32],) {
  %1621 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1622 = %1621.2;
  (%1622,)
}

def @func_2139() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1623 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1624 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1625 = %1623.0;
  %1626 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  %1627 = %1624.0;
  (%1625, %1626, %1627)
}

def @func_6349(%var_6340: Tensor[(624), float64]) -> (Tensor[(5, 16, 12), float64], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) {
  %1628 = @func_4150() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1629 = cast(%var_6340, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1630 = reshape(%1629, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float64] */;
  %1631 = @func_728(%1630) /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1632 = %1628.0;
  %1633 = %1631.0;
  (%1632, %1633, %var_6340)
}

def @func_22348() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1642 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1634 = @func_11655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
    %1635 = @func_16144() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1636 = @func_14450() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1637 = @func_14140() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1638 = %1634.0;
    %1639 = %1635.0;
    %1640 = %1636.0;
    %1641 = %1637.1;
    (%1638, %1639, %1640, %1641)
  };
  %1642() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_1631() -> (Tensor[(5, 16, 12), int32],) {
  %1643 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1644 = %1643.0;
  (%1644,)
}

def @func_12609() -> Tensor[(5, 16, 12), int32] {
  @func_12607() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_20966() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1649 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %1645 = @func_16144() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1646 = @func_6618() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1647 = %1645.1;
    %1648 = %1646.1;
    (%1647, %1648)
  };
  %1649() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_7773(%var_7771: uint64, %var_7772: Tensor[(1, 616), uint64]) -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(1, 616), bool], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(1, 616), uint16], Tensor[(5, 16, 12), bool]) {
  @func_7769(%var_7771, %var_7772) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(1, 616), bool], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(1, 616), uint16], Tensor[(5, 16, 12), bool]) */
}

def @func_12183() -> (Tensor[(10, 4, 5), float32], Tensor[(12, 1, 1), float64]) {
  %1650 = @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */;
  %1651 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
  %1652 = cast(%1651, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %1653 = %1650.0;
  %1654 = cosh(%1652) /* ty=Tensor[(12, 1, 1), float64] */;
  (%1653, %1654)
}

def @func_7567() -> Tensor[(5, 16, 12), int32] {
  @func_7565() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_14451() -> (Tensor[(5, 16, 12), float32],) {
  %1657 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1655 = @func_3680() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1656 = %1655.0;
    (%1656,)
  };
  %1657() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_8376() -> Tensor[(12, 10, 15), uint8] {
  %1658 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1658.0
}

def @func_19336() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1659 = @func_12233() /* ty=(Tensor[(5, 16, 12), int32],) */;
  %1660 = @func_19094() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1661 = @func_13217() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1662 = @func_6397() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), int32]) */;
  %1663 = %1659.0;
  %1664 = %1660.0;
  %1665 = @func_16051() /* ty=Tensor[(5, 16, 12), int32] */;
  %1666 = %1661.0;
  %1667 = %1662.2;
  (%1663, %1664, %1665, %1666, %1667)
}

def @func_6448() -> (Tensor[(5, 16, 12), float32],) {
  %1670 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1668 = @func_4063() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1669 = %1668.1;
    (%1669,)
  };
  %1670() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_255() -> Tensor[(5, 16, 12), float32] {
  @func_240() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_15328() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1676 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1671 = @func_9459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 8, 4), int32], Tensor[(21), float32]) */;
    %1672 = @func_14450() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1673 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
    %1674 = %1671.1;
    %1675 = %1672.0;
    (%1673, %1674, %1675)
  };
  %1676() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_18237() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %1681 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
    %1677 = @func_5993() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1678 = @func_11655() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
    %1679 = %1677.0;
    %1680 = %1678.1;
    (%1679, %1680)
  };
  %1681() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_289() -> (Tensor[(10, 4, 5), float32], Tensor[(5, 16, 12), float32]) {
  %1682 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 4, 5), float32] */;
  %1683 = cos(%1682) /* ty=Tensor[(10, 4, 5), float32] */;
  %1684 = cast(%1683, dtype="float32") /* ty=Tensor[(10, 4, 5), float32] */;
  %1685 = erf(%1684) /* ty=Tensor[(10, 4, 5), float32] */;
  %1686 = @func_255() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1685, %1686)
}

def @func_4064() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1691 = fn () -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1687 = @func_1039() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1688 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
    %1689 = @func_3242() /* ty=Tensor[(5, 16, 12), float32] */;
    %1690 = %1687.0;
    (%1688, %1689, %1690)
  };
  %1691() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_11397() -> (Tensor[(3, 16, 13), float64],) {
  %1694 = fn () -> (Tensor[(3, 16, 13), float64],) {
    %1692 = @func_11360() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), float64], Tensor[(624), float64]) */;
    %1693 = %1692.2;
    (%1693,)
  };
  %1694() /* ty=(Tensor[(3, 16, 13), float64],) */
}

def @func_19918() -> (Tensor[(5, 16, 12), int32],) {
  %1697 = fn () -> (Tensor[(5, 16, 12), int32],) {
    %1695 = @func_18340() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1696 = %1695.2;
    (%1696,)
  };
  %1697() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_24121() -> Tensor[(350), bool] {
  %1698 = fn () -> Tensor[(350), bool] {
    @func_14375() /* ty=Tensor[(350), bool] */
  };
  %1698() /* ty=Tensor[(350), bool] */
}

def @func_5904() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) {
  %1712 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) {
    %1699 = @func_4450() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1700 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1701 = cast(meta[relay.Constant][37] /* ty=Tensor[(624, 1), float64] */, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
    %1702 = reshape(%1701, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float64] */;
    %1703 = @func_728(%1702) /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1704 = %1703.0;
    %1705 = cast(meta[relay.Constant][37] /* ty=Tensor[(624, 1), float64] */, dtype="bool") /* ty=Tensor[(624, 1), bool] */;
    %1706 = shape_of(%1704, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1707 = cast(%1704, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
    %1708 = dyn.reshape(%1705, %1706, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1709 = %1699.0;
    %1710 = %1700.1;
    %1711 = not_equal(%1707, %1708) /* ty=Tensor[(3, 16, 13), bool] */;
    (%1709, %1710, %1711)
  };
  %1712() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(3, 16, 13), bool]) */
}

def @func_8951() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1713 = @func_4498() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1714 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1715 = %1713.0;
  %1716 = %1714.0;
  (%1715, %1716)
}

def @func_2461() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) {
  @func_2459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) */
}

def @func_4240() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_4238() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_16052() -> Tensor[(5, 16, 12), int32] {
  %1717 = fn () -> Tensor[(5, 16, 12), int32] {
    @func_4398() /* ty=Tensor[(5, 16, 12), int32] */
  };
  %1717() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_16463() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1718 = @func_15327() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1719 = %1718.1;
  %1720 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1719, %1720)
}

def @func_24499() -> Tensor[(5, 16, 12), float64] {
  @func_24497() /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_21576() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %1725 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
    %1721 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1722 = @func_3357() /* ty=(Tensor[(12, 1, 1), float64],) */;
    %1723 = %1721.0;
    %1724 = %1722.0;
    (%1723, %1724)
  };
  %1725() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_1079() -> (Tensor[(5, 16, 12), int32],) {
  %1727 = fn () -> (Tensor[(5, 16, 12), int32],) {
    %1726 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
    (%1726,)
  };
  %1727() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_12998() -> Tensor[(5, 16, 12), float32] {
  @func_12996() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_17457() -> (Tensor[(5, 16, 12), float32],) {
  %1728 = @func_3529() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
  %1729 = %1728.1;
  (%1729,)
}

def @func_19094() -> (Tensor[(5, 16, 12), float32],) {
  %1730 = @func_5097() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1731 = %1730.0;
  (%1731,)
}

def @func_5687(%var_5686: Tensor[(12, 1, 16), float32]) -> (Tensor[(12, 1, 16), float32], Tensor[(5, 16, 12), int32], Tensor[(2, 15, 12), uint8]) {
  %1738 = fn (%var_5634: Tensor[(12, 1, 16), float32]) -> (Tensor[(12, 1, 16), float32], Tensor[(5, 16, 12), int32], Tensor[(2, 15, 12), uint8]) {
    %1732 = cast(%var_5634, dtype="float32") /* ty=Tensor[(12, 1, 16), float32] */;
    %1733 = @func_2459() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), bool]) */;
    %1734 = @func_5226() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8]) */;
    %1735 = asin(%1732) /* ty=Tensor[(12, 1, 16), float32] */;
    %1736 = %1733.0;
    %1737 = %1734.1;
    (%1735, %1736, %1737)
  };
  %1738(%var_5686) /* ty=(Tensor[(12, 1, 16), float32], Tensor[(5, 16, 12), int32], Tensor[(2, 15, 12), uint8]) */
}

def @func_17459() -> (Tensor[(5, 16, 12), float32],) {
  @func_17457() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_20308() -> Tensor[(5, 16, 12), int32] {
  %1740 = fn () -> Tensor[(5, 16, 12), int32] {
    %1739 = @func_2966() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), int32]) */;
    %1739.1
  };
  %1740() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_3109() -> (Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) {
  @func_3107() /* ty=(Tensor[(10, 4, 5), float32], Tensor[(21), float32], Tensor[(21), float32], Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32]) */
}

def @func_20140(%var_20137: Tensor[(16, 8, 1), bool], %var_20138: Tensor[(864), float32], %var_20139: Tensor[(21), float32]) -> (Tensor[(16, 8, 1), bool], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(7, ?, 3), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32]) {
  @func_20135(%var_20137, %var_20138, %var_20139) /* ty=(Tensor[(16, 8, 1), bool], Tensor[(9, 12, 8), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32], Tensor[(7, ?, 3), float32], Tensor[(21), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_20582() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  %1745 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
    %1741 = @func_9062() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1742 = @func_3842() /* ty=(Tensor[(12, 1, 1), float64],) */;
    %1743 = %1741.0;
    %1744 = %1742.0;
    (%1743, %1744)
  };
  %1745() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_21999() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  @func_21997() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_12234() -> (Tensor[(5, 16, 12), int32],) {
  %1748 = fn () -> (Tensor[(5, 16, 12), int32],) {
    %1746 = @func_1078() /* ty=(Tensor[(5, 16, 12), int32],) */;
    %1747 = %1746.0;
    (%1747,)
  };
  %1748() /* ty=(Tensor[(5, 16, 12), int32],) */
}

def @func_13172() -> (Tensor[(12, 1, 1), float64],) {
  %1751 = fn () -> (Tensor[(12, 1, 1), float64],) {
    %1749 = @func_7195() /* ty=(Tensor[(12, 1, 1), float64],) */;
    %1750 = %1749.0;
    (%1750,)
  };
  %1751() /* ty=(Tensor[(12, 1, 1), float64],) */
}

def @func_7332() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1757 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1752 = @func_6423() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1753 = @func_6261() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1754 = %1752.0;
    %1755 = %1753.0;
    %1756 = @func_5773() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1754, %1755, %1756)
  };
  %1757() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_13592() -> (Tensor[(5, 16, 12), float32],) {
  @func_13590() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_11487() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32]) {
  %1774 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32]) {
    %1758 = @func_9662() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1759 = @func_2420() /* ty=(Tensor[(5, 16, 12), float32],) */;
    %1760 = cast(meta[relay.Constant][38] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %1761 = reshape(%1760, newshape=[350]) /* ty=Tensor[(350), float32] */;
    %1762 = @func_4928(%1761) /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(12, 10, 15), int64], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */;
    %1763 = cast(meta[relay.Constant][39] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %1764 = cast(meta[relay.Constant][39] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %1765 = reshape(%1763, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
    %1766 = reshape(%1764, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), uint32] */;
    %1767 = @func_2845(%1765, %1766) /* ty=(Tensor[(6, 3, 7), bool],) */;
    %1768 = @func_11274() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1769 = %1758.0;
    %1770 = %1759.0;
    %1771 = %1762.2;
    %1772 = %1767.0;
    %1773 = %1768.0;
    (%1769, %1770, %1771, meta[relay.Constant][38] /* ty=Tensor[(350), float32] */, %1772, meta[relay.Constant][39] /* ty=Tensor[(126), uint32] */, %1773)
  };
  %1774() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32], Tensor[(6, 3, 7), bool], Tensor[(126), uint32], Tensor[(5, 16, 12), float32]) */
}

def @func_20257(%var_20237: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), float64], Tensor[(350), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64]) {
  %1775 = cast(%var_20237, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %1776 = @func_18430() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(350), float32]) */;
  %1777 = @func_10999() /* ty=(Tensor[(360), uint8], Tensor[(5, 16, 12), float32]) */;
  %1778 = @func_14020() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(350), bool], Tensor[(175, 2), float32]) */;
  %1779 = rsqrt(%1775) /* ty=Tensor[(16, 3, 12), float64] */;
  %1780 = %1776.1;
  %1781 = %1777.1;
  %1782 = %1778.2;
  (%1779, %1780, %1781, %1782)
}

def @func_17416() -> (Tensor[(5, 16, 12), float32],) {
  @func_17414() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_4342() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1789 = fn () -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1783 = @func_1404() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
    %1784 = @func_3169() /* ty=(Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
    %1785 = @func_2139() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1786 = %1783.0;
    %1787 = %1784.1;
    %1788 = %1785.2;
    (%1786, %1787, %1788)
  };
  %1789() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_24497() -> Tensor[(5, 16, 12), float64] {
  %1790 = @func_10839() /* ty=(Tensor[(5, 16, 12), float64],) */;
  %1790.0
}

def @func_6619() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
  %1794 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) {
    %1791 = @func_954() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1792 = %1791.1;
    %1793 = @func_6134() /* ty=Tensor[(5, 16, 12), int32] */;
    (%1792, %1793)
  };
  %1794() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */
}

def @func_10309(%var_10308: Tensor[(12, 3, 1), float64]) -> (Tensor[(12, 3, 1), bool], Tensor[(12, 3, 1), float64], Tensor[(12, 1, 1), float64]) {
  %1806 = fn (%var_10283: Tensor[(12, 3, 1), float64]) -> (Tensor[(12, 3, 1), bool], Tensor[(12, 3, 1), float64], Tensor[(12, 1, 1), float64]) {
    %1795 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
    %1796 = cast(%1795, dtype="uint8") /* ty=Tensor[(12, 1, 1), uint8] */;
    %1797 = cast(%var_10283, dtype="uint8") /* ty=Tensor[(12, 3, 1), uint8] */;
    %1798 = subtract(%1796, %1797) /* ty=Tensor[(12, 3, 1), uint8] */;
    %1799 = cast(%1795, dtype="bool") /* ty=Tensor[(12, 1, 1), bool] */;
    %1800 = cast(%1798, dtype="bool") /* ty=Tensor[(12, 3, 1), bool] */;
    %1801 = cast(%var_10283, dtype="float64") /* ty=Tensor[(12, 3, 1), float64] */;
    %1802 = cast(%1795, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
    %1803 = equal(%1799, %1800) /* ty=Tensor[(12, 3, 1), bool] */;
    %1804 = divide(%1801, %1802) /* ty=Tensor[(12, 3, 1), float64] */;
    %1805 = @func_7368() /* ty=Tensor[(12, 1, 1), float64] */;
    (%1803, %1804, %1805)
  };
  %1806(%var_10308) /* ty=(Tensor[(12, 3, 1), bool], Tensor[(12, 3, 1), float64], Tensor[(12, 1, 1), float64]) */
}

def @func_21769() -> Tensor[(5, 16, 12), float32] {
  %1808 = fn () -> Tensor[(5, 16, 12), float32] {
    %1807 = @func_18834() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(360), uint8]) */;
    %1807.0
  };
  %1808() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_16096() -> Tensor[(5, 16, 12), float32] {
  %1810 = fn () -> Tensor[(5, 16, 12), float32] {
    %1809 = @func_11720() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1809.1
  };
  %1810() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_22484() -> (Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  @func_22482() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_9023() -> (Tensor[(5, 16, 12), float32],) {
  @func_9021() /* ty=(Tensor[(5, 16, 12), float32],) */
}

def @func_16490() -> (Tensor[(350), bool],) {
  @func_16488() /* ty=(Tensor[(350), bool],) */
}

def @func_15181() -> Tensor[(5, 16, 12), int32] {
  @func_15179() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_18751() -> (Tensor[(5, 16, 12), float64],) {
  @func_18749() /* ty=(Tensor[(5, 16, 12), float64],) */
}

def @func_6106() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) {
  @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */
}

def @func_677() -> (Tensor[(5, 16, 12), float32], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), int32]) {
  %1811 = @func_586() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1812 = @func_351() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), uint8], Tensor[(5, 16, 12), float32]) */;
  %1813 = %1811.0;
  %1814 = %1812.1;
  %1815 = @func_559() /* ty=Tensor[(5, 16, 12), int32] */;
  (%1813, %1814, %1815)
}

def @func_23830() -> Tensor[(5, 16, 12), int32] {
  %1816 = @func_4291() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
  %1816.1
}

def @func_23832() -> Tensor[(5, 16, 12), int32] {
  @func_23830() /* ty=Tensor[(5, 16, 12), int32] */
}

def @func_5068() -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
  %1822 = fn () -> (Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) {
    %1817 = @func_3998() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), int32]) */;
    %1818 = @func_1839() /* ty=(Tensor[(5, 16, 12), int32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */;
    %1819 = %1817.0;
    %1820 = %1818.2;
    %1821 = @func_240() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1819, %1820, %1821)
  };
  %1822() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32], Tensor[(5, 16, 12), float32]) */
}

def @func_8411() -> Tensor[(5, 16, 12), float32] {
  %1823 = @func_7945() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(5, 5, 14), float32], Tensor[(350), float32]) */;
  %1823.0
}

def @func_22251() -> Tensor[(12, 1, 1), float64] {
  %1824 = @func_6104() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(12, 1, 1), float64]) */;
  %1825 = %1824.1;
  %1826 = cast(%1825, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  exp(%1826) /* ty=Tensor[(12, 1, 1), float64] */
}

def @func_20888() -> Tensor[(5, 16, 12), float32] {
  @func_20886() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_22945() -> (Tensor[(12, 11, 2), uint16], Tensor[(360), uint8]) {
  @func_22943() /* ty=(Tensor[(12, 11, 2), uint16], Tensor[(360), uint8]) */
}

def @func_3424() -> Tensor[(5, 16, 12), float32] {
  @func_3422() /* ty=Tensor[(5, 16, 12), float32] */
}

def @func_6506() -> Tensor[(360), uint8] {
  @func_6504() /* ty=Tensor[(360), uint8] */
}

def @func_5858() -> (Tensor[(5, 16, 12), float32],) {
  %1827 = @func_4067() /* ty=(Tensor[(5, 16, 12), float32],) */;
  %1828 = %1827.0;
  (%1828,)
}

def @func_17837() -> (Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(5, 16, 12), float32]) {
  %1829 = @func_17046() /* ty=(Tensor[(3, 16, 13), float64], Tensor[(5, 16, 12), float32], Tensor[(360), uint8], Tensor[(6, 144), float64]) */;
  %1830 = @func_5112() /* ty=(Tensor[(5, 16, 12), float32], Tensor[(864), float32], Tensor[(6, 144), float32]) */;
  %1831 = %1829.1;
  %1832 = %1830.1;
  %1833 = @func_9207() /* ty=Tensor[(5, 16, 12), float32] */;
  (%1831, %1832, %1833)
}

def @func_11093() -> (Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) {
  %1834 = @func_2818() /* ty=Tensor[(360), uint8] */;
  %1835 = @func_3031() /* ty=Tensor[(2, 15, 12), uint8] */;
  (%1834, %1835)
}

def @func_6213() -> (Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) {
  @func_6211() /* ty=(Tensor[(5, 16, 12), float64], Tensor[(5, 16, 12), float32], Tensor[(2, 15, 12), uint8], Tensor[(5, 16, 12), float32]) */
}

def @func_23874() -> Tensor[(2, 15, 12), uint8] {
  %1837 = fn () -> Tensor[(2, 15, 12), uint8] {
    %1836 = @func_11093() /* ty=(Tensor[(360), uint8], Tensor[(2, 15, 12), uint8]) */;
    %1836.1
  };
  %1837() /* ty=Tensor[(2, 15, 12), uint8] */
}

def @func_16488() -> (Tensor[(350), bool],) {
  %1838 = @func_14375() /* ty=Tensor[(350), bool] */;
  (%1838,)
}

def @func_2421() -> (Tensor[(5, 16, 12), float32],) {
  %1840 = fn () -> (Tensor[(5, 16, 12), float32],) {
    %1839 = @func_1483() /* ty=Tensor[(5, 16, 12), float32] */;
    (%1839,)
  };
  %1840() /* ty=(Tensor[(5, 16, 12), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen804/build/output.py", line 8115, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:16:56] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


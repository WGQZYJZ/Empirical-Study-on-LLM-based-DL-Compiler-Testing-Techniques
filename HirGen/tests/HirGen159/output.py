import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_69 = relay.var("var_69", dtype = "float32", shape = (4, 1, 3))#candidate|69|(4, 1, 3)|var|float32
uop_70 = relay.sigmoid(var_69.astype('float32')) # shape=(4, 1, 3)
bop_87 = relay.less_equal(uop_70.astype('bool'), relay.reshape(var_69.astype('bool'), relay.shape_of(uop_70))) # shape=(4, 1, 3)
output = relay.Tuple([bop_87,])
output2 = relay.Tuple([bop_87,])
func_97 = relay.Function([var_69,], output)
mod['func_97'] = func_97
mod = relay.transform.InferType()(mod)
var_98 = relay.var("var_98", dtype = "float32", shape = (4, 1, 3))#candidate|98|(4, 1, 3)|var|float32
output = func_97(var_98)
func_99 = relay.Function([var_98], output)
mutated_mod['func_99'] = func_99
mutated_mod = relay.transform.InferType()(mutated_mod)
var_238 = relay.var("var_238", dtype = "uint8", shape = (3, 4, 2))#candidate|238|(3, 4, 2)|var|uint8
var_239 = relay.var("var_239", dtype = "uint8", shape = (3, 4, 2))#candidate|239|(3, 4, 2)|var|uint8
bop_240 = relay.minimum(var_238.astype('uint8'), relay.reshape(var_239.astype('uint8'), relay.shape_of(var_238))) # shape=(3, 4, 2)
var_244 = relay.var("var_244", dtype = "uint8", shape = (3, 4, 2))#candidate|244|(3, 4, 2)|var|uint8
bop_245 = relay.greater_equal(var_239.astype('bool'), relay.reshape(var_244.astype('bool'), relay.shape_of(var_239))) # shape=(3, 4, 2)
output = relay.Tuple([bop_240,bop_245,])
output2 = relay.Tuple([bop_240,bop_245,])
func_250 = relay.Function([var_238,var_239,var_244,], output)
mod['func_250'] = func_250
mod = relay.transform.InferType()(mod)
var_251 = relay.var("var_251", dtype = "uint8", shape = (3, 4, 2))#candidate|251|(3, 4, 2)|var|uint8
var_252 = relay.var("var_252", dtype = "uint8", shape = (3, 4, 2))#candidate|252|(3, 4, 2)|var|uint8
var_253 = relay.var("var_253", dtype = "uint8", shape = (3, 4, 2))#candidate|253|(3, 4, 2)|var|uint8
output = func_250(var_251,var_252,var_253,)
func_254 = relay.Function([var_251,var_252,var_253,], output)
mutated_mod['func_254'] = func_254
mutated_mod = relay.transform.InferType()(mutated_mod)
const_507 = relay.const([[[-9,6,-1,-1,7],[-9,-9,-10,4,-1],[8,9,8,1,8],[-5,2,7,4,-2],[-7,5,9,-1,1],[10,-3,-7,8,8],[4,3,7,-1,-7],[2,-4,-1,4,8],[3,5,8,8,-10],[4,-2,-1,-6,-1],[-7,-8,-2,6,1],[9,3,-2,6,8],[8,9,10,10,4]],[[8,4,2,5,10],[-3,9,-5,-6,-1],[-6,-8,-1,-6,-2],[-2,-4,8,-2,6],[-10,3,5,-10,-6],[5,2,-6,2,5],[4,6,-6,4,1],[10,-10,-9,-10,4],[-10,9,-4,6,-8],[-10,10,8,4,4],[3,7,6,8,4],[3,3,-7,-6,3],[-6,6,-2,-10,8]]], dtype = "int8")#candidate|507|(2, 13, 5)|const|int8
var_508 = relay.var("var_508", dtype = "int8", shape = (2, 13, 5))#candidate|508|(2, 13, 5)|var|int8
bop_509 = relay.subtract(const_507.astype('int8'), relay.reshape(var_508.astype('int8'), relay.shape_of(const_507))) # shape=(2, 13, 5)
bop_518 = relay.logical_and(bop_509.astype('bool'), relay.reshape(var_508.astype('bool'), relay.shape_of(bop_509))) # shape=(2, 13, 5)
func_250_call = mod.get_global_var('func_250')
func_254_call = mutated_mod.get_global_var('func_254')
const_536 = relay.const([[5,-2,3,7,-6,2,6,-6,-5,9,4,-1],[6,7,-7,8,2,6,-3,1,-1,7,8,8]], dtype = "uint8")#candidate|536|(2, 12)|const|uint8
call_535 = relay.TupleGetItem(func_250_call(relay.reshape(const_536.astype('uint8'), [3, 4, 2]), relay.reshape(const_536.astype('uint8'), [3, 4, 2]), relay.reshape(const_536.astype('uint8'), [3, 4, 2]), ), 0)
call_537 = relay.TupleGetItem(func_254_call(relay.reshape(const_536.astype('uint8'), [3, 4, 2]), relay.reshape(const_536.astype('uint8'), [3, 4, 2]), relay.reshape(const_536.astype('uint8'), [3, 4, 2]), ), 0)
output = relay.Tuple([bop_518,call_535,const_536,])
output2 = relay.Tuple([bop_518,call_537,const_536,])
func_538 = relay.Function([var_508,], output)
mod['func_538'] = func_538
mod = relay.transform.InferType()(mod)
mutated_mod['func_538'] = func_538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_539 = relay.var("var_539", dtype = "int8", shape = (2, 13, 5))#candidate|539|(2, 13, 5)|var|int8
func_538_call = mutated_mod.get_global_var('func_538')
call_540 = func_538_call(var_539)
output = call_540
func_541 = relay.Function([var_539], output)
mutated_mod['func_541'] = func_541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_774 = relay.var("var_774", dtype = "int32", shape = ())#candidate|774|()|var|int32
const_775 = relay.const([[2,-5,5,-5,-8,-9,4,-3,-8,-8]], dtype = "int32")#candidate|775|(1, 10)|const|int32
bop_776 = relay.not_equal(var_774.astype('bool'), const_775.astype('bool')) # shape=(1, 10)
output = bop_776
output2 = bop_776
func_784 = relay.Function([var_774,], output)
mod['func_784'] = func_784
mod = relay.transform.InferType()(mod)
var_785 = relay.var("var_785", dtype = "int32", shape = ())#candidate|785|()|var|int32
output = func_784(var_785)
func_786 = relay.Function([var_785], output)
mutated_mod['func_786'] = func_786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_894 = relay.var("var_894", dtype = "int32", shape = ())#candidate|894|()|var|int32
const_895 = relay.const([[[-2,-7,-6,1,-8,3,10,5,1,-10,-10,-7,-4,7,-1,-7],[10,9,3,-5,-2,-8,4,-6,-1,3,9,-6,-5,4,-3,-8],[-4,-10,6,-9,6,3,-1,6,-7,5,-1,6,5,-1,-2,-9],[5,-3,-7,-1,2,-2,3,6,8,-6,2,4,-4,4,-3,2],[4,-1,8,3,-8,-2,6,-2,9,3,4,9,-6,3,9,9]],[[1,-6,6,8,6,-4,9,-7,8,10,-1,9,3,7,7,7],[8,6,3,-7,-5,-3,10,3,-4,-7,3,2,-10,-7,-7,-3],[-8,-10,-5,3,-7,-4,-8,5,9,7,-10,9,-10,-4,-3,-3],[-8,-3,7,2,-4,-2,-3,-4,-1,-6,4,10,4,-10,-5,-7],[5,7,-5,7,-5,-4,8,-3,-1,-9,-6,8,4,-6,-2,-1]],[[2,8,-7,9,-7,-2,-10,-3,8,5,-10,-6,2,5,-3,-8],[6,-4,-4,7,-5,6,8,6,1,1,-6,-10,-9,10,-1,6],[-8,-2,-3,-4,10,4,9,-5,5,6,3,10,10,3,-2,-9],[-1,-1,-10,5,-4,9,10,8,9,7,-9,-3,8,-10,-7,1],[2,4,-8,3,9,7,-3,7,10,-4,-2,8,3,10,-9,-7]],[[4,2,-2,4,-6,-3,10,10,3,-7,-3,4,-4,-5,7,5],[-5,3,-1,-9,2,5,9,9,1,4,4,-9,4,3,-8,-3],[5,-8,-7,-3,-8,-10,-6,-8,7,-3,2,9,-8,7,1,8],[-8,-4,5,3,-6,2,-1,10,-2,9,5,-2,-2,-10,1,-1],[-8,5,2,9,-2,-1,9,3,2,-9,-1,1,-10,-8,-1,-1]],[[2,2,-5,-2,-10,-9,4,-4,5,-3,-4,4,7,4,-9,-5],[-10,-6,8,1,-1,-8,-4,1,-6,10,1,4,3,6,-3,-4],[-9,-8,-8,-6,-9,4,-7,-5,-1,10,6,-4,2,-3,-2,-9],[-7,10,6,-6,10,-10,-7,9,9,-2,5,-4,-7,-3,-3,-1],[-9,-8,7,-4,4,-6,-1,8,6,5,-7,10,7,2,6,-2]],[[6,-2,4,2,9,6,2,-8,-6,-10,3,9,-3,-9,6,-4],[1,-5,-1,2,4,-8,4,5,-10,-6,-8,10,-8,10,10,6],[1,8,-8,-10,8,1,5,-3,2,7,-4,1,5,6,9,-1],[-3,2,7,8,-1,9,-4,10,-2,7,-3,-8,2,-8,-5,-1],[5,-2,5,-10,-8,2,-3,-9,9,-1,-4,3,-10,-7,9,3]],[[-9,-8,6,1,-7,5,5,-5,8,7,4,8,-2,-10,2,4],[-10,-8,-10,-2,1,-9,1,-9,9,-3,-9,-8,5,-1,-1,10],[9,2,8,8,-1,-4,-10,-3,10,-3,-6,-9,7,10,8,3],[-10,9,-9,7,-4,2,5,-5,9,5,9,8,5,7,-2,3],[5,1,-8,2,9,-8,-7,-9,-2,-4,8,10,4,1,6,-9]],[[3,-5,-8,5,-2,4,-9,-8,9,4,7,-3,9,-6,-7,8],[-7,-2,-1,-4,9,2,3,9,-3,-9,8,1,5,4,6,-1],[8,-8,10,2,2,-9,6,-6,2,-1,-7,-8,4,4,6,1],[-1,-3,-4,10,10,2,-9,9,6,-2,4,7,5,-8,-1,5],[9,-10,-6,1,-2,-4,-3,-2,2,-4,-7,-4,4,-3,10,-4]],[[-9,-4,-9,-1,-7,-1,7,-9,-1,-5,4,1,9,5,-6,-10],[5,10,-8,4,7,8,-1,2,2,10,-7,7,7,-7,1,7],[-1,2,9,7,-3,9,5,-4,1,4,5,7,-3,4,-4,-2],[10,-6,-1,-7,1,-6,9,3,4,-1,-1,2,5,-8,8,7],[3,9,8,6,-3,-8,-2,4,10,-6,6,-5,-3,3,10,-9]],[[3,6,-5,-3,-5,-1,-3,5,-2,4,-7,10,-1,-1,-1,5],[2,7,4,-6,-2,5,1,1,-1,1,6,-7,-4,-10,-3,-1],[6,10,10,10,2,9,7,7,5,-5,-9,7,-3,8,-2,10],[-7,-10,6,-8,5,-2,-7,10,6,2,10,-9,-8,10,6,-10],[10,-1,-9,-5,-6,9,-5,-7,6,6,-9,-8,4,7,-8,4]],[[-6,-4,-3,3,5,5,3,-1,-9,5,-2,7,3,-7,-10,8],[-3,2,1,-7,9,6,-4,-3,4,3,4,-3,3,-7,8,-10],[10,-8,9,-9,5,-4,-2,2,-6,-1,6,-9,-3,-1,-4,1],[2,6,3,2,1,-9,-3,-9,7,-1,-6,-1,7,-10,-2,6],[10,-3,-9,5,1,3,6,-4,3,-7,6,-8,9,-5,-10,-2]],[[4,7,2,-3,5,-6,-9,-5,8,3,-9,8,-2,-10,-3,-3],[2,2,2,-9,-3,-10,-7,-7,7,8,5,-6,8,-7,10,10],[10,4,-7,-8,7,-3,3,9,1,5,-3,1,9,-4,10,9],[-6,-1,-7,3,7,10,5,-7,9,2,-7,3,3,-2,-1,-10],[-5,10,-9,8,9,5,7,2,-8,-10,-9,8,10,2,3,8]],[[4,10,1,1,-5,-7,10,10,4,-10,3,-5,-10,-6,-9,-10],[4,-8,9,-6,6,7,-3,-2,7,1,10,4,-3,2,5,-6],[-4,-4,4,7,3,3,-3,6,9,-9,-3,8,3,1,3,-5],[-4,8,-10,7,9,1,7,1,5,4,4,6,-3,5,6,1],[-10,-7,5,4,-6,-5,10,-8,7,3,-5,9,7,3,6,3]],[[-6,4,4,7,-3,-2,10,8,-5,1,1,9,-3,-1,-8,-5],[-5,-8,-7,9,-7,2,5,7,2,-10,-7,1,1,1,4,-6],[4,-10,-6,2,-3,1,6,-6,3,1,4,1,2,5,-7,7],[-2,4,-7,1,3,-8,9,9,-1,-3,-10,8,-6,10,-5,-7],[-7,5,9,5,-10,-3,8,-1,10,-2,8,-6,5,8,-4,-7]]], dtype = "int32")#candidate|895|(14, 5, 16)|const|int32
bop_896 = relay.greater_equal(var_894.astype('bool'), const_895.astype('bool')) # shape=(14, 5, 16)
uop_899 = relay.sinh(const_895.astype('float32')) # shape=(14, 5, 16)
output = relay.Tuple([bop_896,uop_899,])
output2 = relay.Tuple([bop_896,uop_899,])
func_905 = relay.Function([var_894,], output)
mod['func_905'] = func_905
mod = relay.transform.InferType()(mod)
mutated_mod['func_905'] = func_905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_906 = relay.var("var_906", dtype = "int32", shape = ())#candidate|906|()|var|int32
func_905_call = mutated_mod.get_global_var('func_905')
call_907 = func_905_call(var_906)
output = call_907
func_908 = relay.Function([var_906], output)
mutated_mod['func_908'] = func_908
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1191 = relay.var("var_1191", dtype = "float32", shape = (14, 5, 9))#candidate|1191|(14, 5, 9)|var|float32
var_1192 = relay.var("var_1192", dtype = "float32", shape = (14, 5, 9))#candidate|1192|(14, 5, 9)|var|float32
bop_1193 = relay.floor_divide(var_1191.astype('float32'), relay.reshape(var_1192.astype('float32'), relay.shape_of(var_1191))) # shape=(14, 5, 9)
func_97_call = mod.get_global_var('func_97')
func_99_call = mutated_mod.get_global_var('func_99')
const_1207 = relay.const([3.745690,2.382277,-9.812285,1.358415,8.162230,-0.979188,4.588146,3.680840,5.802642,8.305716,2.476980,4.259966], dtype = "float32")#candidate|1207|(12,)|const|float32
call_1206 = relay.TupleGetItem(func_97_call(relay.reshape(const_1207.astype('float32'), [4, 1, 3])), 0)
call_1208 = relay.TupleGetItem(func_99_call(relay.reshape(const_1207.astype('float32'), [4, 1, 3])), 0)
output = relay.Tuple([bop_1193,call_1206,const_1207,])
output2 = relay.Tuple([bop_1193,call_1208,const_1207,])
func_1213 = relay.Function([var_1191,var_1192,], output)
mod['func_1213'] = func_1213
mod = relay.transform.InferType()(mod)
var_1214 = relay.var("var_1214", dtype = "float32", shape = (14, 5, 9))#candidate|1214|(14, 5, 9)|var|float32
var_1215 = relay.var("var_1215", dtype = "float32", shape = (14, 5, 9))#candidate|1215|(14, 5, 9)|var|float32
output = func_1213(var_1214,var_1215,)
func_1216 = relay.Function([var_1214,var_1215,], output)
mutated_mod['func_1216'] = func_1216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1335 = relay.var("var_1335", dtype = "int16", shape = ())#candidate|1335|()|var|int16
var_1336 = relay.var("var_1336", dtype = "int16", shape = (13, 5))#candidate|1336|(13, 5)|var|int16
bop_1337 = relay.greater(var_1335.astype('bool'), var_1336.astype('bool')) # shape=(13, 5)
func_538_call = mod.get_global_var('func_538')
func_541_call = mutated_mod.get_global_var('func_541')
var_1347 = relay.var("var_1347", dtype = "int8", shape = (130, 1))#candidate|1347|(130, 1)|var|int8
call_1346 = relay.TupleGetItem(func_538_call(relay.reshape(var_1347.astype('int8'), [2, 13, 5])), 2)
call_1348 = relay.TupleGetItem(func_541_call(relay.reshape(var_1347.astype('int8'), [2, 13, 5])), 2)
func_538_call = mod.get_global_var('func_538')
func_541_call = mutated_mod.get_global_var('func_541')
call_1349 = relay.TupleGetItem(func_538_call(relay.reshape(var_1347.astype('int8'), [2, 13, 5])), 0)
call_1350 = relay.TupleGetItem(func_541_call(relay.reshape(var_1347.astype('int8'), [2, 13, 5])), 0)
output = relay.Tuple([bop_1337,call_1346,var_1347,call_1349,])
output2 = relay.Tuple([bop_1337,call_1348,var_1347,call_1350,])
func_1363 = relay.Function([var_1335,var_1336,var_1347,], output)
mod['func_1363'] = func_1363
mod = relay.transform.InferType()(mod)
var_1364 = relay.var("var_1364", dtype = "int16", shape = ())#candidate|1364|()|var|int16
var_1365 = relay.var("var_1365", dtype = "int16", shape = (13, 5))#candidate|1365|(13, 5)|var|int16
var_1366 = relay.var("var_1366", dtype = "int8", shape = (130, 1))#candidate|1366|(130, 1)|var|int8
output = func_1363(var_1364,var_1365,var_1366,)
func_1367 = relay.Function([var_1364,var_1365,var_1366,], output)
mutated_mod['func_1367'] = func_1367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1394 = relay.var("var_1394", dtype = "int8", shape = (5, 11, 15))#candidate|1394|(5, 11, 15)|var|int8
var_1395 = relay.var("var_1395", dtype = "int8", shape = (5, 11, 15))#candidate|1395|(5, 11, 15)|var|int8
bop_1396 = relay.logical_xor(var_1394.astype('int8'), relay.reshape(var_1395.astype('int8'), relay.shape_of(var_1394))) # shape=(5, 11, 15)
bop_1407 = relay.right_shift(var_1395.astype('uint64'), relay.reshape(var_1394.astype('uint64'), relay.shape_of(var_1395))) # shape=(5, 11, 15)
output = relay.Tuple([bop_1396,bop_1407,])
output2 = relay.Tuple([bop_1396,bop_1407,])
func_1422 = relay.Function([var_1394,var_1395,], output)
mod['func_1422'] = func_1422
mod = relay.transform.InferType()(mod)
var_1423 = relay.var("var_1423", dtype = "int8", shape = (5, 11, 15))#candidate|1423|(5, 11, 15)|var|int8
var_1424 = relay.var("var_1424", dtype = "int8", shape = (5, 11, 15))#candidate|1424|(5, 11, 15)|var|int8
output = func_1422(var_1423,var_1424,)
func_1425 = relay.Function([var_1423,var_1424,], output)
mutated_mod['func_1425'] = func_1425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1588 = relay.var("var_1588", dtype = "float32", shape = (15, 14, 10))#candidate|1588|(15, 14, 10)|var|float32
uop_1589 = relay.atan(var_1588.astype('float32')) # shape=(15, 14, 10)
output = relay.Tuple([uop_1589,])
output2 = relay.Tuple([uop_1589,])
func_1591 = relay.Function([var_1588,], output)
mod['func_1591'] = func_1591
mod = relay.transform.InferType()(mod)
mutated_mod['func_1591'] = func_1591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1592 = relay.var("var_1592", dtype = "float32", shape = (15, 14, 10))#candidate|1592|(15, 14, 10)|var|float32
func_1591_call = mutated_mod.get_global_var('func_1591')
call_1593 = func_1591_call(var_1592)
output = call_1593
func_1594 = relay.Function([var_1592], output)
mutated_mod['func_1594'] = func_1594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1675 = relay.var("var_1675", dtype = "float32", shape = (9, 5, 7))#candidate|1675|(9, 5, 7)|var|float32
uop_1676 = relay.acos(var_1675.astype('float32')) # shape=(9, 5, 7)
func_538_call = mod.get_global_var('func_538')
func_541_call = mutated_mod.get_global_var('func_541')
var_1693 = relay.var("var_1693", dtype = "int8", shape = (130,))#candidate|1693|(130,)|var|int8
call_1692 = relay.TupleGetItem(func_538_call(relay.reshape(var_1693.astype('int8'), [2, 13, 5])), 0)
call_1694 = relay.TupleGetItem(func_541_call(relay.reshape(var_1693.astype('int8'), [2, 13, 5])), 0)
var_1697 = relay.var("var_1697", dtype = "float32", shape = (9, 5, 7))#candidate|1697|(9, 5, 7)|var|float32
bop_1698 = relay.add(uop_1676.astype('float64'), relay.reshape(var_1697.astype('float64'), relay.shape_of(uop_1676))) # shape=(9, 5, 7)
func_97_call = mod.get_global_var('func_97')
func_99_call = mutated_mod.get_global_var('func_99')
var_1702 = relay.var("var_1702", dtype = "float32", shape = (12,))#candidate|1702|(12,)|var|float32
call_1701 = relay.TupleGetItem(func_97_call(relay.reshape(var_1702.astype('float32'), [4, 1, 3])), 0)
call_1703 = relay.TupleGetItem(func_99_call(relay.reshape(var_1702.astype('float32'), [4, 1, 3])), 0)
var_1704 = relay.var("var_1704", dtype = "float32", shape = (9, 5, 7))#candidate|1704|(9, 5, 7)|var|float32
bop_1705 = relay.less_equal(uop_1676.astype('bool'), relay.reshape(var_1704.astype('bool'), relay.shape_of(uop_1676))) # shape=(9, 5, 7)
output = relay.Tuple([call_1692,var_1693,bop_1698,call_1701,var_1702,bop_1705,])
output2 = relay.Tuple([call_1694,var_1693,bop_1698,call_1703,var_1702,bop_1705,])
func_1708 = relay.Function([var_1675,var_1693,var_1697,var_1702,var_1704,], output)
mod['func_1708'] = func_1708
mod = relay.transform.InferType()(mod)
var_1709 = relay.var("var_1709", dtype = "float32", shape = (9, 5, 7))#candidate|1709|(9, 5, 7)|var|float32
var_1710 = relay.var("var_1710", dtype = "int8", shape = (130,))#candidate|1710|(130,)|var|int8
var_1711 = relay.var("var_1711", dtype = "float32", shape = (9, 5, 7))#candidate|1711|(9, 5, 7)|var|float32
var_1712 = relay.var("var_1712", dtype = "float32", shape = (12,))#candidate|1712|(12,)|var|float32
var_1713 = relay.var("var_1713", dtype = "float32", shape = (9, 5, 7))#candidate|1713|(9, 5, 7)|var|float32
output = func_1708(var_1709,var_1710,var_1711,var_1712,var_1713,)
func_1714 = relay.Function([var_1709,var_1710,var_1711,var_1712,var_1713,], output)
mutated_mod['func_1714'] = func_1714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2010 = relay.var("var_2010", dtype = "int32", shape = (8, 12, 7))#candidate|2010|(8, 12, 7)|var|int32
const_2011 = relay.const([[[8,8,8,1,4,8,4],[-2,-4,9,1,4,2,6],[-3,2,8,1,1,-8,1],[9,-3,10,-9,9,-6,-5],[10,-8,10,6,-2,-4,1],[10,-9,7,-9,9,3,1],[10,10,7,-5,-10,5,-10],[-8,10,-10,6,-10,2,6],[-9,9,-3,1,8,9,9],[-1,2,9,-7,2,8,-8],[-3,-10,-9,2,-7,-2,-1],[3,4,10,-5,-1,-9,6]],[[6,8,8,4,4,-1,-8],[-5,5,-8,6,-6,-6,3],[-1,3,-3,-9,-8,10,8],[4,-6,7,-1,-10,-5,-7],[-5,-6,-1,6,-9,-5,-7],[-10,8,-2,-5,6,6,-10],[-6,3,9,-10,8,4,-10],[-6,-6,3,-10,-10,6,8],[2,4,-7,1,-6,-6,-6],[6,9,-4,-8,-1,-2,3],[7,-1,-1,8,1,6,10],[-4,2,2,-1,8,-3,-10]],[[-2,-4,-6,7,-9,-7,-4],[-10,7,-1,-5,2,-9,-7],[-1,-9,10,9,8,3,-1],[-2,5,7,7,1,-1,9],[-5,-2,3,-9,-7,-1,6],[-4,6,2,-7,5,9,5],[-1,9,1,4,5,9,4],[6,-5,9,-8,3,1,9],[-6,-7,-9,2,-2,-5,10],[8,5,-5,8,-2,-4,2],[-4,3,-5,6,-9,-5,-7],[-7,-6,2,-2,-2,9,-7]],[[-10,6,1,-4,2,-10,2],[-1,6,5,-4,5,-2,-8],[-2,5,5,-6,3,-3,-3],[5,10,2,5,-10,-4,6],[-4,8,1,-8,5,3,5],[2,-2,-3,2,-10,3,-7],[-7,-5,-1,-6,4,-9,7],[6,9,-2,-4,3,10,-6],[-5,4,-8,-2,-9,1,2],[4,-1,3,-8,-1,10,10],[-9,-5,-9,-8,-7,8,-1],[-9,9,2,4,10,-10,8]],[[-8,10,-7,4,5,5,-4],[-7,-1,8,2,10,7,1],[4,5,-8,-1,-1,10,-7],[-7,-9,-8,1,-2,7,-10],[-3,-2,-10,1,4,-10,-7],[9,9,-6,10,-1,-9,-5],[-5,3,-6,7,1,-4,7],[10,-6,9,6,-4,-9,-9],[-7,7,9,-2,-4,-3,-4],[-2,2,-7,2,6,1,-4],[4,-9,6,-5,-5,-4,-3],[-5,-5,-1,8,7,-2,-8]],[[10,3,3,-7,7,8,6],[-10,10,-9,4,-3,-6,2],[1,2,10,-9,7,-6,5],[-6,-5,-3,4,1,10,10],[-2,5,-2,9,4,7,-2],[-6,4,-2,-10,5,5,-2],[7,2,-4,-7,5,8,-1],[-1,-5,-4,10,-9,8,-4],[9,-1,-10,8,-1,-10,-10],[-8,-1,-6,7,-7,-5,-7],[10,8,-7,-8,4,-1,-2],[3,-7,-2,1,7,9,5]],[[2,-9,-3,-4,7,-9,9],[-4,-9,10,10,-8,-4,-9],[1,-7,5,-7,-2,-1,4],[-10,8,-3,-10,6,-7,-1],[9,5,3,5,7,-8,-5],[-10,9,-2,-3,-7,-8,-5],[5,-5,7,6,-2,-9,1],[2,8,-4,3,5,1,-2],[-3,3,4,-6,-9,-10,1],[2,9,-9,9,4,-1,9],[-9,10,-10,3,10,7,-2],[-2,6,-7,9,2,1,-1]],[[2,-4,-3,-4,5,10,-7],[-7,-4,1,3,7,-6,-2],[-2,9,3,7,-6,-10,8],[-8,-5,-5,-6,-10,-8,2],[5,-9,9,1,1,-7,-8],[-8,6,-5,-3,-1,1,-9],[-10,3,9,10,-1,-9,10],[-7,-4,9,3,3,6,-6],[-9,6,-9,3,-2,-3,8],[3,-7,-8,-7,3,1,-7],[-3,-6,1,-10,-10,6,7],[-4,1,-3,-10,-1,6,-7]]], dtype = "int32")#candidate|2011|(8, 12, 7)|const|int32
bop_2012 = relay.not_equal(var_2010.astype('bool'), relay.reshape(const_2011.astype('bool'), relay.shape_of(var_2010))) # shape=(8, 12, 7)
bop_2023 = relay.left_shift(var_2010.astype('int64'), relay.reshape(bop_2012.astype('int64'), relay.shape_of(var_2010))) # shape=(8, 12, 7)
uop_2029 = relay.sinh(bop_2012.astype('float64')) # shape=(8, 12, 7)
output = relay.Tuple([bop_2023,uop_2029,])
output2 = relay.Tuple([bop_2023,uop_2029,])
func_2054 = relay.Function([var_2010,], output)
mod['func_2054'] = func_2054
mod = relay.transform.InferType()(mod)
mutated_mod['func_2054'] = func_2054
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2055 = relay.var("var_2055", dtype = "int32", shape = (8, 12, 7))#candidate|2055|(8, 12, 7)|var|int32
func_2054_call = mutated_mod.get_global_var('func_2054')
call_2056 = func_2054_call(var_2055)
output = call_2056
func_2057 = relay.Function([var_2055], output)
mutated_mod['func_2057'] = func_2057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2107 = relay.var("var_2107", dtype = "float32", shape = (12, 14, 4))#candidate|2107|(12, 14, 4)|var|float32
var_2108 = relay.var("var_2108", dtype = "float32", shape = (12, 14, 4))#candidate|2108|(12, 14, 4)|var|float32
bop_2109 = relay.power(var_2107.astype('float32'), relay.reshape(var_2108.astype('float32'), relay.shape_of(var_2107))) # shape=(12, 14, 4)
output = bop_2109
output2 = bop_2109
func_2116 = relay.Function([var_2107,var_2108,], output)
mod['func_2116'] = func_2116
mod = relay.transform.InferType()(mod)
mutated_mod['func_2116'] = func_2116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2116_call = mutated_mod.get_global_var('func_2116')
var_2118 = relay.var("var_2118", dtype = "float32", shape = (12, 14, 4))#candidate|2118|(12, 14, 4)|var|float32
var_2119 = relay.var("var_2119", dtype = "float32", shape = (12, 14, 4))#candidate|2119|(12, 14, 4)|var|float32
call_2117 = func_2116_call(var_2118,var_2119,)
output = call_2117
func_2120 = relay.Function([var_2118,var_2119,], output)
mutated_mod['func_2120'] = func_2120
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2400 = relay.const(-4, dtype = "uint64")#candidate|2400|()|const|uint64
var_2401 = relay.var("var_2401", dtype = "uint64", shape = (2, 11, 6))#candidate|2401|(2, 11, 6)|var|uint64
bop_2402 = relay.logical_xor(const_2400.astype('uint64'), var_2401.astype('uint64')) # shape=(2, 11, 6)
func_1591_call = mod.get_global_var('func_1591')
func_1594_call = mutated_mod.get_global_var('func_1594')
var_2407 = relay.var("var_2407", dtype = "float32", shape = (2100,))#candidate|2407|(2100,)|var|float32
call_2406 = relay.TupleGetItem(func_1591_call(relay.reshape(var_2407.astype('float32'), [15, 14, 10])), 0)
call_2408 = relay.TupleGetItem(func_1594_call(relay.reshape(var_2407.astype('float32'), [15, 14, 10])), 0)
uop_2409 = relay.sin(var_2407.astype('float64')) # shape=(2100,)
uop_2424 = relay.log10(uop_2409.astype('float32')) # shape=(2100,)
func_538_call = mod.get_global_var('func_538')
func_541_call = mutated_mod.get_global_var('func_541')
var_2435 = relay.var("var_2435", dtype = "int8", shape = (130,))#candidate|2435|(130,)|var|int8
call_2434 = relay.TupleGetItem(func_538_call(relay.reshape(var_2435.astype('int8'), [2, 13, 5])), 2)
call_2436 = relay.TupleGetItem(func_541_call(relay.reshape(var_2435.astype('int8'), [2, 13, 5])), 2)
output = relay.Tuple([bop_2402,call_2406,uop_2424,call_2434,var_2435,])
output2 = relay.Tuple([bop_2402,call_2408,uop_2424,call_2436,var_2435,])
func_2438 = relay.Function([var_2401,var_2407,var_2435,], output)
mod['func_2438'] = func_2438
mod = relay.transform.InferType()(mod)
mutated_mod['func_2438'] = func_2438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2438_call = mutated_mod.get_global_var('func_2438')
var_2440 = relay.var("var_2440", dtype = "uint64", shape = (2, 11, 6))#candidate|2440|(2, 11, 6)|var|uint64
var_2441 = relay.var("var_2441", dtype = "float32", shape = (2100,))#candidate|2441|(2100,)|var|float32
var_2442 = relay.var("var_2442", dtype = "int8", shape = (130,))#candidate|2442|(130,)|var|int8
call_2439 = func_2438_call(var_2440,var_2441,var_2442,)
output = call_2439
func_2443 = relay.Function([var_2440,var_2441,var_2442,], output)
mutated_mod['func_2443'] = func_2443
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2445 = relay.const([[[6.465602,2.011558,9.785458,5.245918,3.331080,0.383361],[6.584068,4.357423,-0.603607,-4.456194,-8.253510,-3.676678],[1.648429,-4.185304,5.523201,-5.146031,1.129482,3.575608],[6.421282,0.406581,6.329233,5.024310,5.399769,-8.396721],[-9.197889,5.945263,9.998312,3.730793,2.122799,-6.740791],[6.420002,0.680657,-7.773918,-0.050630,7.726466,-1.812978],[-3.321621,8.010146,-5.884844,4.820167,8.133963,7.374839],[-6.154188,0.596234,-8.707471,-7.703865,-4.636606,3.627047],[-1.851782,-0.089736,6.266148,-6.951908,3.285284,2.612567],[0.586723,-0.099796,5.936692,-4.011046,-7.670479,-3.883386],[8.976616,0.528471,-0.566469,7.321186,-2.313654,3.454703],[-1.336364,3.415438,4.408900,-4.185317,9.770926,6.183442],[-5.503413,-6.451529,5.643207,-8.382433,2.188280,5.487383]]], dtype = "float32")#candidate|2445|(1, 13, 6)|const|float32
var_2446 = relay.var("var_2446", dtype = "float32", shape = (6, 13, 6))#candidate|2446|(6, 13, 6)|var|float32
bop_2447 = relay.divide(const_2445.astype('float32'), var_2446.astype('float32')) # shape=(6, 13, 6)
output = bop_2447
output2 = bop_2447
func_2452 = relay.Function([var_2446,], output)
mod['func_2452'] = func_2452
mod = relay.transform.InferType()(mod)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2453 = relay.var("var_2453", dtype = "float32", shape = (6, 13, 6))#candidate|2453|(6, 13, 6)|var|float32
func_2452_call = mutated_mod.get_global_var('func_2452')
call_2454 = func_2452_call(var_2453)
output = call_2454
func_2455 = relay.Function([var_2453], output)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2509 = relay.var("var_2509", dtype = "float64", shape = (1, 9, 13))#candidate|2509|(1, 9, 13)|var|float64
uop_2510 = relay.acos(var_2509.astype('float64')) # shape=(1, 9, 13)
func_538_call = mod.get_global_var('func_538')
func_541_call = mutated_mod.get_global_var('func_541')
var_2514 = relay.var("var_2514", dtype = "int8", shape = (13, 10))#candidate|2514|(13, 10)|var|int8
call_2513 = relay.TupleGetItem(func_538_call(relay.reshape(var_2514.astype('int8'), [2, 13, 5])), 1)
call_2515 = relay.TupleGetItem(func_541_call(relay.reshape(var_2514.astype('int8'), [2, 13, 5])), 1)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
const_2518 = relay.const([5,1,-7,4,3,9,1,-3,5,-7,-3,-2,6,2,-2,2,-1,7,-1,5,1,1,3,-1,4,-1,2,-7,-5,10,10,-5,7,8,-3,6,-9,5,3,-2,6,7,7,6,-1,-1,2,-1,-10,-9,-1,6,-3,4,1,-6,-3,4,-5,4,-1,-6,-5,-2,-5,7,-7,8,7,8,1,-4,-7,4,3,9,-5,4,3,4,-6,-5,-5,5,-8,10,8,-4,6,-8,-8,-2,-1,2,4,-3,-6,-5,3,2,4,-1,-10,9,4,7,-4,4,7,1,-9,-2,-3,3,7,-5,1,-5,-10,-7,10,6,-4,9,-4,3,-3,8,1,1,-9,1,2,-1,10,9,-3,-4,-7,8,-3,5,-5,-3,-4,-6,-1,-5,3,-7,5,3,-3,6,-1,-1,5,-2,1,-9,-10,-10,-2,-5,-10,-9,10,-2,8,7,4,4,6,-2,-3,-1,-5,-5,-3,-5,-5,-9,-4,-2,-1,-4,6,4,5,-6,8,3,-8,4,1,6,2,4,8,-10,4,-4,3,-2,-6,7,8,1,10,-7,3,-8,-1,-10,-8,-8,6,5,-1,-8,-9,-5,6,-3,9,9,7,6,-10,7,-9,-4,-8,-6,10,-10,-10,-8,-10,5,2,3,3,-7,8,-3,-10,3,6,9,-5,4,5,-4,-2,-6,6,6,-9,-2,-7,-5,2,7,7,-5,-6,-10,3,-5,6,1,-1,9,10,-8,-8,5,10,9,7,-10,3,3,-5,-10,10,-10,10,2,5,-8,2,3,7,-7,-6,-7,-8,-6,1,-1,9,3,-5,9,4,2,-3,5,-7,-4,1,1,-4,-2,4,5,9,5,2,3,-3,9,10,-8,6,9,5,-9,-8,5,6,-7,9,-10,-6,-4,-10,7,-7,-6,-6,2,-6,2,2,5,-9,-5,-4,9,10,1,8,-7,-10,10,9,-7,5,-6,-9,8,-5,4,8,9,7,-7,7,-2,8,-3,7,9,-1,8,-9,-8,9,-4,-5,8,-3,9,-8,7,4,-4,-3,-3,-9,-6,9,-3,-6,-9,1,7,10,-6,-8,6,-4,-4,-3,-3,8,-3,1,-7,-4,-10,-2,9,-2,2,-7,-3,-9,9,-2,8,-10,-10,10,10,4,9,6,9,4,-7,2,-3,6,6,-2,1,7,5,-7,-1,6,8,-1,-9,10,5,7,-2,-10,3,5,8,-3,9,-9,-2,2,6,-7,-8,2,-9,-3,-3,1,7,-8,-6,-7,3,-7,10,5,3,-10,10,-6,2,-10,-2,-1,-5,-3,1,7,-5,-1,4,-8,9,-7,9,-8,3,-6,-8,-4,-7,5,-7,4,-5,-7,-10,-7,5,9,-7,7,-4,-7,-9,5,-9,3,-3,10,-1,-8,-3,3,-8,4,-9,7,1,6,-6,7,3,3,-9,3,-1,-3,5,4,8,9,6,-1,-2,10,-1,-5,-7,10,1,-5,6,7,-4,5,9,-9,1,-6,10,5,1,6,6,1,9,10,-4,7,9,9,-7,5,-10,-5,4,-4,7,2,-5,-1,-1,-2,-7,4,-2,-4,-1,8,-9,-6,2,10,7,3,9,6,4,-4,6,8,10,6,-10,-7,-7,4,10,-9,7,8,-9,-5,-4,-5,-8,-10,-5,-4,-3,6,3,-1,7,1,-5,2,-5,6,-8,2,4,-6,10,-5,-10,-7,4,-7,10,-5,-9,1,-3,-5,-8,7,-1,-4,-3,-6,-2,8,-2,7,5,9,8,-7,-6,2,-9,7,-1,3,-10,9,-1,-9,3,5,7,-9,-5,-6,1,5,4,-2,-3,-1,3,6,-6,-8,-1,5,8,-3,-2,-4,-6,5,-10,-6,-1,7,-6,9,-10,-9,2,8,-7,3,-9,-4,-5,-6,-7,8,-1,3,10,7,1,-10,9,-2,-9,8,1,5,-3,1,-5,-8,-5,-2,-5,4,5,8,10,-2,5,8,-4,-2,-4,-8,1,5,-7,9,-8,-9,-7,-8,-6,-7,-2,7,-6,4,-1,8,8,-5,10,8,-9,2,-5,4,-3,-10,-3,-3,-5,10,-1,7,-2,6,-8,-2,3,-4,6,-10,6,6,-9,10,-9,-10,-9,-2,9,4,4,6,-4,8,8,-1,-7,6,7,2,6,-6,8,5,6,7,-7,-9,-3,1,4,8,8,-9,-1,2,-2,-2,6,8,-9,2], dtype = "int8")#candidate|2518|(825,)|const|int8
call_2517 = relay.TupleGetItem(func_1422_call(relay.reshape(const_2518.astype('int8'), [5, 11, 15]), relay.reshape(const_2518.astype('int8'), [5, 11, 15]), ), 1)
call_2519 = relay.TupleGetItem(func_1425_call(relay.reshape(const_2518.astype('int8'), [5, 11, 15]), relay.reshape(const_2518.astype('int8'), [5, 11, 15]), ), 1)
output = relay.Tuple([uop_2510,call_2513,var_2514,call_2517,const_2518,])
output2 = relay.Tuple([uop_2510,call_2515,var_2514,call_2519,const_2518,])
func_2540 = relay.Function([var_2509,var_2514,], output)
mod['func_2540'] = func_2540
mod = relay.transform.InferType()(mod)
var_2541 = relay.var("var_2541", dtype = "float64", shape = (1, 9, 13))#candidate|2541|(1, 9, 13)|var|float64
var_2542 = relay.var("var_2542", dtype = "int8", shape = (13, 10))#candidate|2542|(13, 10)|var|int8
output = func_2540(var_2541,var_2542,)
func_2543 = relay.Function([var_2541,var_2542,], output)
mutated_mod['func_2543'] = func_2543
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2739 = relay.var("var_2739", dtype = "float32", shape = (8, 1, 9))#candidate|2739|(8, 1, 9)|var|float32
uop_2740 = relay.atanh(var_2739.astype('float32')) # shape=(8, 1, 9)
func_2438_call = mod.get_global_var('func_2438')
func_2443_call = mutated_mod.get_global_var('func_2443')
const_2749 = relay.const([-6,6,7,3,3,3,-2,-8,-4,-8,8,5,4,9,7,-8,-8,-7,8,5,4,9,-2,4,6,1,1,-3,-7,6,-6,-9,1,-1,7,-10,5,6,4,7,1,6,-4,-9,-9,7,9,2,-1,9,-1,9,-6,-7,-5,2,10,8,-7,7,1,-3,-1,2,-10,-1,10,6,7,8,-8,9,-8,-4,-5,-1,8,-1,-1,-10,-4,1,-1,9,2,1,8,8,7,3,4,10,-9,10,4,10,-10,-9,10,10,-5,-2,9,1,3,-9,7,10,2,6,9,-3,1,-2,2,-4,1,2,-7,9,4,-8,1,6,7,9,-2,-5,-4,3,-6,-3], dtype = "uint64")#candidate|2749|(132,)|const|uint64
const_2750 = relay.const([-3.410047,5.574308,1.445637,-2.998507,-1.449644,-8.239213,5.284720,6.383714,3.290155,6.721924,-3.629525,-5.226062,2.714149,-9.044768,6.489115,-7.558383,0.481960,-5.421021,6.137774,8.096870,5.703390,-0.558584,-8.130508,8.896531,2.982262,4.127370,-8.460262,8.946787,4.922800,-2.041979,-0.957697,-0.162307,5.185522,-2.694478,-9.866952,-9.538534,7.856769,-2.143190,-1.842196,5.743410,-4.570740,2.517868,-6.165537,1.257426,5.265805,-6.549329,-1.041414,2.628932,0.829329,-9.962862,2.797589,8.426945,1.401993,-1.668888,8.588528,1.818828,-2.420585,3.448238,6.470656,-8.236669,-0.429947,-3.699535,-5.583784,-6.615191,5.424292,2.342622,7.538760,1.852019,-9.902107,9.462107,3.370899,7.996115,6.644096,1.398513,2.650088,5.152918,-0.736218,-7.982015,3.172938,1.004472,2.420342,9.253738,6.251519,-4.065887,-3.043871,-5.830884,-5.382975,-9.107354,-1.146489,0.395730,5.488158,5.490320,-3.440610,-1.643396,0.910837,2.591326,-7.772958,6.789505,8.148015,7.169312,8.825843,-6.948688,-3.380263,-6.569173,-2.968438,-1.728172,-4.007447,3.009577,-0.736878,2.335407,0.320665,-4.500904,8.940432,-5.284009,4.652986,9.090784,9.046030,6.749632,-2.226611,-0.939706,1.358296,-1.906370,-2.643899,-9.654606,-1.805759,-2.557070,-3.955756,3.978029,0.564019,7.210209,-1.184826,5.293676,-7.751004,7.911470,-4.992986,8.536655,-7.128181,-0.299985,9.611516,3.674787,-2.843797,-3.376877,0.848065,-8.340806,5.564650,4.325254,-1.731676,6.652371,7.758637,6.868217,-7.264787,3.909352,6.825119,3.671342,7.794058,-5.001402,7.245023,-2.414924,-7.036137,4.698422,-8.810136,8.761616,8.128605,5.206520,8.853497,6.743285,0.892025,0.559349,-5.333163,-1.191239,7.192014,8.710750,3.137068,0.293325,-2.752562,9.184551,-4.843327,-0.244343,6.448150,-0.260212,-7.378967,-7.990437,5.209167,-9.646109,-6.429638,4.777879,9.947345,-3.491398,-0.264264,3.273492,-4.262073,-7.973171,0.716307,5.427100,-1.396250,-8.286498,7.437607,5.626093,-0.242314,-7.377944,-6.551535,-0.690206,-2.177151,-1.686606,3.348339,4.012751,-2.900247,-4.436418,-7.279099,-9.859816,9.255009,-1.607859,6.978475,4.018708,9.623183,-4.154290,0.806738,-4.274968,-6.456679,4.427736,-5.390780,8.079549,-5.029336,-1.441319,4.652073,2.950761,3.097945,1.865044,2.986686,-1.632317,-4.132630,-1.065556,-9.611649,8.036324,7.650081,-2.081208,-1.931096,-1.687656,1.924995,1.243719,5.737145,2.527915,-6.575279,1.247762,-4.679884,7.819687,1.144686,-6.082319,-7.931863,-9.032430,-1.570790,4.284708,-0.012538,2.298974,-2.796585,8.987963,-1.252294,0.887974,8.614555,-8.120729,-2.224616,5.802497,-2.258464,1.272774,8.860043,-5.801868,-2.285204,-7.976474,-3.190173,-7.572582,0.877102,-8.553635,5.731482,-6.786050,7.888869,-0.329744,-8.049948,6.437640,9.005439,7.155175,-3.343413,0.944337,1.159574,2.514274,1.160013,4.284767,6.056638,-8.250894,4.242250,-5.636119,-7.163128,-0.690810,-3.759158,7.016561,7.949939,-7.983596,-0.430683,-4.582832,-2.330862,5.300097,-6.032888,-1.148145,6.319167,-2.527267,8.733472,2.664110,5.223393,5.557461,5.028500,5.359757,7.949082,-0.931440,6.094884,-2.701303,-8.049001,-9.220331,-6.292932,3.727782,7.528169,-1.529546,-0.047315,-8.591071,5.303926,7.830841,-5.738918,7.277138,-5.194708,-8.757837,1.709677,4.833909,-3.964254,-5.092300,-3.922432,-4.679587,8.570930,4.701403,-8.221969,0.980827,4.084227,-7.106318,5.136102,1.606142,5.746125,-5.964820,-3.202122,2.241272,6.295616,5.369499,0.494537,1.714349,-4.237766,-7.730868,3.135333,4.457895,-5.224798,-5.666995,9.904944,9.802305,9.700212,3.789801,-2.681574,0.807332,-9.524597,5.790852,-6.522974,-3.702058,4.228025,-0.087146,-7.479252,8.558253,3.045890,0.294064,-8.768464,-3.388877,-4.675734,2.529031,-5.542286,-4.140254,-0.869895,-3.399394,-8.349006,1.853144,7.511579,-8.159494,7.973617,-0.917544,-6.832356,-0.923050,-2.397928,-3.056928,-8.155944,2.032191,-3.687947,-0.780205,-3.078959,-2.511006,7.742406,-4.685552,3.405364,4.023372,4.786387,1.378182,8.345800,-6.249093,-4.029297,-9.424223,-0.225588,5.893621,3.802913,9.545234,-6.736272,-2.605049,-3.397596,-3.862688,-1.978048,-2.821448,7.656208,3.056266,5.541326,5.026793,-5.325345,5.779324,2.534313,-6.503929,-0.878444,-8.594463,2.551879,-5.017342,-4.023417,6.804012,-1.586794,-5.964093,1.612800,-0.151360,4.586408,8.822501,5.592039,-8.580969,7.601809,5.765186,3.714101,7.330629,7.015284,-8.754804,-4.847807,-3.032678,1.122840,1.395442,-7.268450,-2.595685,7.772311,4.800044,-3.616134,9.039938,-6.299675,7.831027,8.719097,-2.005262,-8.736390,-5.680604,-5.801669,-8.990719,1.862001,0.620267,4.033721,2.809919,8.432451,-5.086163,-8.430835,8.135516,-5.663188,-5.264940,9.555730,-2.717198,9.587681,5.954211,4.327482,-9.596651,8.733476,-0.140345,3.993193,4.259878,2.830567,-3.573625,4.971476,-5.307134,-8.531399,9.420638,-1.674269,4.724906,-3.348101,5.604932,-6.397157,-4.478740,3.484796,4.052517,-5.640464,0.143034,-3.784586,-3.234127,-2.594051,3.543196,1.160210,-0.275681,3.132320,-0.563560,-7.736134,6.118641,7.513706,-6.043893,2.441108,7.641449,-9.220633,8.551336,-4.458357,2.229619,-9.812772,0.436334,6.966321,5.612323,1.863482,1.455196,-5.790118,8.300250,-0.349886,-9.611428,3.374867,-0.505587,3.400513,-8.630909,3.133421,-3.170191,-8.030628,5.717209,2.901101,-2.551672,-0.831854,7.622219,5.655985,-1.260299,-9.464865,2.344397,-5.233462,-5.498613,4.081498,4.597920,-3.801056,-2.302143,1.635525,-3.611466,2.453974,-9.532029,-8.034188,-6.019181,-3.636252,-5.216997,0.028643,-4.745881,5.507305,7.731938,4.116545,9.756572,-6.095980,-3.545565,6.049231,4.204659,-0.422997,3.593947,7.729337,-7.384121,-9.343750,-5.890934,-9.649316,-5.414872,3.352646,-2.286508,-2.301813,-1.917455,1.013004,8.200085,-1.356000,2.445554,-7.871483,6.069846,-5.694955,4.261936,-8.756754,9.333932,-5.667999,-9.196481,0.197989,-3.106836,-6.110459,4.173956,8.001936,6.848608,1.129067,-9.738881,6.985099,4.141616,1.834801,-3.834195,-6.413689,-4.385694,7.078529,8.623550,1.877249,4.754762,-1.029434,-0.124094,7.983375,1.981308,-8.256725,-2.691905,-6.187866,-3.030453,-0.480451,6.413819,-3.624366,7.445221,0.204944,-7.891458,-4.039911,-5.849449,-2.163929,-3.655136,-3.544153,-0.963796,-6.184441,-8.862993,-2.454917,-9.630649,-5.241787,-7.594380,-6.992573,-2.495218,-9.463507,-9.209067,-5.084590,4.752728,8.420042,-9.575253,-3.922784,0.382589,5.024795,1.088169,-9.256335,-2.470673,3.633400,8.451732,-5.407693,0.874464,-4.594960,2.111458,6.518278,-2.679783,4.004148,-9.876986,5.721419,-5.048375,-2.363644,8.182059,2.622143,7.621402,-1.499694,-8.505487,-2.649458,8.513373,-0.231550,-6.443185,3.711551,-3.288427,4.482532,-5.335876,-1.262877,-3.858481,-5.969275,4.562750,6.651192,3.508679,5.059847,9.219993,4.216346,1.548378,9.949846,4.203243,-4.409906,1.036764,8.864395,-8.938658,-2.427501,-4.171005,-3.899306,0.700783,-6.947083,0.408841,-3.013900,4.543196,7.843858,5.476565,-0.035350,-4.948583,0.243904,7.392313,2.378755,-4.715273,-5.448290,6.998463,7.783270,-4.126545,9.267380,4.524967,-6.618725,2.405047,9.415057,7.670035,-9.133197,-6.960374,2.827410,-4.147666,-1.049669,2.326925,1.609582,5.205283,5.825985,-5.870238,-2.920847,-9.792219,-0.755191,-0.007283,7.052125,-8.229513,3.244268,5.522773,-3.099357,-5.394213,-0.787397,4.674590,-9.801905,-7.712845,-8.276531,-8.884293,5.917821,-9.948359,-0.754446,7.623796,-4.135221,0.089395,8.162543,-8.609742,-3.429030,-9.046941,-5.149676,-2.891607,-2.315946,-8.814048,7.738478,5.514240,-8.563212,4.867579,3.822482,-2.509563,-3.942505,4.577240,-4.442386,7.378335,-3.937932,5.867046,5.178151,9.006242,7.961122,-8.383417,-2.487233,4.327403,4.924741,-9.765178,4.669521,-3.658760,-4.332239,0.116887,-0.238553,-0.409931,-8.681345,9.545387,8.676005,-0.189935,7.085644,-1.221446,-7.625466,-7.209695,-4.040107,-7.619705,1.501258,1.154653,8.445176,-1.867359,1.182619,-5.529496,-9.055429,3.965876,5.174759,-5.215290,-2.789261,-7.978084,-2.765179,0.230617,4.813929,4.783426,-2.742106,0.796247,0.716393,3.288371,-7.663888,6.114653,-1.131275,-2.471527,-2.834130,-5.641059,2.765602,3.816813,4.524659,-9.391113,0.398572,8.192840,-4.746885,4.201004,-4.865674,-3.119002,-0.365086,4.319469,-1.764541,-2.623792,0.331380,-8.026079,-1.196496,-0.580451,-5.009824,-9.851536,-0.274331,8.147724,-5.384732,6.574481,-2.635840,4.754422,9.224455,8.078469,7.151443,-0.060771,-1.343297,2.126022,-3.607205,-5.044274,2.429320,-2.512855,-4.492576,-9.977047,-1.877855,2.119420,-3.005947,-6.413133,7.495571,2.487826,6.776050,1.244049,-5.438308,-5.452346,4.266637,1.164401,-2.917435,-8.160370,-2.548177,0.678713,-0.975739,4.371554,-8.291027,-0.542803,0.292830,-0.746873,6.195644,-2.010344,-3.179085,3.367456,5.335290,-6.024451,-5.728639,-5.888998,-9.772784,-7.752108,-1.055689,5.881290,0.247200,-2.896886,5.975906,3.933751,7.845092,0.559301,3.222019,4.735042,6.937473,-6.972649,-3.425782,-2.455288,-3.619665,-0.129675,-5.011602,5.836710,4.098909,-4.829406,-1.722190,-8.135869,4.005689,-2.628770,-8.549980,6.652425,1.559212,9.569197,-6.176201,-4.024990,-5.505714,3.551513,-7.741692,-3.114784,8.465902,8.161402,4.305053,8.681576,6.956075,6.108267,0.190585,4.869236,-0.114472,-5.174855,5.014049,2.184458,0.057833,-0.034404,-4.175186,-7.340867,-1.368206,3.290191,5.556727,-0.298809,-8.547105,-5.403582,5.638976,2.770730,-3.016404,-2.654892,-4.029474,-8.204157,0.725490,-0.371152,9.947344,6.622888,-0.476467,2.741548,8.635577,-9.399504,3.458526,0.614760,-0.385018,-5.143498,-8.678965,-3.455812,2.597249,5.897671,-7.421092,-4.427350,-2.401574,6.973608,-4.970881,-6.627760,-2.513747,-3.243487,8.206238,-9.459277,-5.835490,-3.332675,-8.013803,0.117195,1.366849,-6.952872,-6.768631,-7.646058,-0.752439,3.428731,-6.192970,-6.667014,-6.741821,9.122404,-8.162244,-2.451839,-0.541572,6.031102,4.930422,-0.213658,9.690960,-9.378287,4.106895,-1.222816,-1.764811,1.497075,5.726731,-6.817951,-0.546096,9.491638,1.604466,5.068911,4.469529,-9.443264,0.716042,7.436970,0.146439,1.960043,-0.938511,-4.912195,8.184568,-3.147901,0.835213,0.061228,-2.793854,-8.333393,-1.889952,4.207405,7.003178,-9.184507,6.492661,1.515597,-2.783696,9.589730,6.988298,9.616422,0.670685,9.820477,-8.989345,-4.078462,-3.026063,5.967225,-7.532068,-7.005214,-7.693267,8.360471,-9.041272,5.906582,0.383640,-7.421330,-3.258857,8.409592,9.681010,0.187928,1.123556,-1.968160,-8.829209,-6.939073,-4.594712,-8.042233,-8.641382,-0.058438,1.250761,8.081774,9.967616,3.986307,0.472006,0.680280,9.596607,7.176696,8.944213,-7.679794,9.319716,-7.887825,0.113346,-3.783138,-6.568461,2.970824,-5.662976,-4.335802,-7.093436,-7.445567,0.742143,-4.133770,-4.071327,7.065769,9.919644,7.127165,4.373035,-0.974494,5.164917,-2.327606,-0.693723,4.733728,-4.614920,-7.433625,3.112720,-6.541472,-5.585675,4.166064,-6.613357,-8.035837,0.291224,-0.959644,-2.301039,8.919669,-2.207543,8.003299,4.887192,7.006592,8.849936,-0.231188,-2.857521,9.034847,3.199080,7.921407,1.601487,1.013971,-0.482711,3.774273,3.476352,-9.008619,-9.439778,-6.139953,-2.013077,8.453250,6.997196,-9.820142,5.951676,-6.157558,-6.522832,-4.690218,-2.846583,-8.100128,-5.412397,4.553592,2.706272,4.691349,4.785672,6.743785,2.619861,7.015785,0.274297,8.199001,8.129092,6.449592,1.774532,-5.628748,-0.517947,-5.024971,-8.539554,-5.540047,4.548147,-0.937301,0.982435,-4.769507,-5.326631,4.758484,5.750752,-1.845723,-3.043115,3.877887,-7.350075,2.415326,-0.347282,5.378608,1.092236,-3.493884,3.042217,-4.678523,1.372340,6.392589,-5.959614,1.586215,9.138214,5.580189,0.718785,-7.435891,-6.382202,-0.216292,4.677462,3.780819,0.833235,-9.700027,-8.650393,7.711714,6.669013,-4.181458,9.152013,-5.179885,2.547014,0.993205,-4.487713,-2.780074,1.103189,6.179188,-8.866676,-4.395389,6.163923,-7.291356,9.786783,8.349077,2.056603,-4.061567,2.182538,5.001672,-7.417658,8.890672,-5.475224,5.567799,1.637211,5.367322,-4.386282,9.190587,-4.703384,3.791844,-4.964994,-4.031545,-8.851378,-9.660761,8.399154,3.947380,-7.245425,-8.485329,-2.072349,8.442802,6.093923,-1.501086,-8.059834,8.772030,7.615363,-0.976227,3.707279,6.895384,2.758851,8.258997,-3.778768,5.213216,8.024996,8.662659,1.331813,6.489025,2.874828,-2.218685,-0.140966,-7.277001,8.914728,5.726412,-4.453529,-1.441045,-5.167873,-3.991284,-0.285137,-2.150833,-2.354259,-7.398391,-2.492423,-9.206950,0.062654,5.962602,-1.922459,8.501106,-8.857842,-3.994679,-6.959054,-0.519083,-4.011693,9.576308,-0.003638,-6.076426,4.610168,5.295258,3.470183,-5.421048,-8.414929,-4.976560,8.213364,-1.465359,-0.395565,-9.635085,-9.120734,3.471525,-0.622780,5.449580,-3.970585,3.708007,-1.507275,5.341340,-9.034098,-3.419018,0.917497,6.062297,2.467313,-3.910387,-7.531770,-5.790485,-5.064940,5.463006,-4.209792,7.101488,-1.606576,-1.061643,7.977190,-9.890131,4.878043,3.697536,4.045210,-4.850277,-5.130711,-2.156719,4.975543,9.766602,5.268722,-7.886229,-7.374488,-0.677220,-7.258163,6.389177,0.430973,4.315150,4.845584,7.884469,1.191109,8.836766,2.401905,-2.667264,-2.661147,-8.796015,-1.384822,1.774510,-8.451325,-5.200766,-7.974564,0.279194,9.607319,7.199779,9.066678,-0.327613,-5.401442,-9.487040,8.994694,-3.182971,0.344993,9.698780,-3.283912,-6.315701,0.776592,9.668430,-8.251714,6.990623,-7.409196,-4.338916,1.472149,-9.793693,-2.485469,4.606378,-1.750813,8.886812,-8.835062,4.474392,8.783038,-5.593829,-5.445788,7.351452,-8.284476,2.635325,1.752765,-5.787009,-6.687206,-4.656464,4.857351,-5.000313,1.946821,8.343527,2.584484,-9.429975,-2.428580,2.186241,2.430904,-3.163437,0.016362,-1.583362,0.741672,2.390206,2.394507,6.086806,-3.971934,-0.876143,7.979081,1.179333,6.654766,-5.603072,-1.114103,-2.546442,-5.436932,8.282281,-0.578698,-6.744385,-3.341033,7.465552,2.947025,3.274058,7.691567,0.509311,7.127576,9.414954,9.014931,1.828154,6.259141,9.717433,-7.390470,0.564944,-5.450787,-3.227747,9.830290,-0.661822,-8.628876,-4.990120,-6.754973,9.569227,5.585271,-3.471751,-1.351808,-2.927900,1.685054,9.612256,2.289822,7.859212,-0.053803,-7.036861,5.820538,-3.530513,-8.360973,2.672729,-4.787454,1.760838,2.135268,-3.179985,2.744981,1.701273,-9.805883,-9.732682,2.244328,9.892164,5.694352,-2.895314,3.792840,8.361280,2.986020,-3.711753,3.818930,2.357911,4.329329,-4.767312,3.660968,0.105857,-8.456600,3.689151,6.999414,3.222851,-2.441320,-9.754874,-2.901566,-0.996565,-4.138832,6.922983,-7.367037,2.344730,1.875621,-0.614434,5.754806,-4.057346,5.299890,-1.188562,6.074160,1.449081,5.594401,6.747374,8.845641,6.732331,-2.049609,8.073010,-8.470315,-1.956833,-2.058618,-6.435004,-2.058643,4.547989,-0.489440,2.108594,6.882705,9.189047,-5.364229,-6.862036,-1.378251,9.206580,1.525225,3.093382,3.232756,0.642025,-7.630010,-2.422128,-1.254448,-2.818260,9.780529,-4.308843,6.454962,5.771124,-5.825376,5.493692,0.212874,4.985063,-3.673601,-5.420945,-9.352447,7.954615,8.851726,-2.058554,-4.768384,-6.760824,-1.740055,-8.408200,3.305566,1.781015,-7.839690,-9.216661,2.433583,-1.312929,2.258732,-7.563844,-0.789045,-1.136368,9.102163,6.392241,-9.626808,6.614962,8.490045,-3.637774,4.326912,-4.031320,-2.656374,8.358745,7.909555,8.294430,4.025584,-7.621410,-3.918942,3.440012,7.128807,7.406613,2.687294,-7.473661,-6.930156,2.600475,-3.139533,9.870442,-1.051797,3.742486,-8.528212,-5.860632,-9.214215,4.210603,-8.941453,-0.667597,-8.621267,7.847211,-7.001905,-3.853808,-4.024084,-8.175456,5.249164,5.970362,-3.151923,9.457326,-4.071714,-9.770684,8.782153,9.856374,3.851214,3.582420,1.611990,0.939072,0.884864,-9.182367,2.522973,-5.209104,4.063223,-1.245815,-8.470921,-8.218825,-5.425316,9.403992,7.730905,6.954272,-9.088028,-0.540536,1.451438,8.158487,2.438030,-8.591628,-9.590991,6.004116,-0.546261,-0.704719,-6.025418,7.080996,5.477007,-3.363726,2.469031,4.274813,-6.780856,3.557884,9.436278,-8.776183,5.568909,9.003038,-7.414297,2.181685,6.332944,6.066846,-6.759100,-6.114404,-8.553729,-6.656136,-9.353315,0.967911,4.293814,-4.258761,-4.959100,3.907128,9.272496,4.386501,-9.727379,-8.282719,-7.961111,5.383578,3.273221,7.694568,-4.285403,3.975201,5.488066,6.730153,-9.253580,-5.882463,2.725469,-6.365233,-0.615541,-0.336303,-7.134004,-5.449639,-7.343443,8.286817,9.791272,1.501398,5.293539,-5.712807,-4.918262,6.820389,2.941939,1.037535,-6.868072,3.600248,4.095551,8.822876,0.902035,3.788507,0.746742,6.329656,1.536399,-1.920900,7.900030,4.976791,-8.815329,-7.991065,-8.757530,-2.229841,3.390040,-1.237677,4.414952,-6.450093,7.732922,6.206062,2.384505,-5.477638,1.043775,5.045068,7.380100,-9.858844,8.182010,-3.920322,-9.256236,-0.041989,-9.815815,4.923135,-8.793385,-7.005817,4.984266,-8.248844,-7.770040,1.239958,9.253116,6.264982,9.559956,2.687170,-5.139747,9.821253,-5.079094,5.484308,-4.900749,3.573270,-7.948120,-8.358003,5.561451,-1.894739,7.545355,9.004943,-8.803556,-7.778530,8.931680,8.305870,2.756647,-9.482549,-0.282605,-4.883493,-8.865767,-1.590410,-4.546543,-4.634554,8.260618,7.882972,-4.867828,-8.233078,9.697694,7.134155,-0.016552,3.198743,8.915452,7.275957,5.189277,-9.440739,4.933150,-6.691504,9.373025,9.124736,-2.801564,-0.055263,-7.980545,7.278484,1.098462,-0.306974,3.552489,1.518485,0.973273,7.790846,-1.072884,1.433183,-2.975698,3.053404,-6.197846,-6.832126,-5.743763,-2.744246,5.940308,-8.704598,-4.898603,-1.541583,-9.579988,-6.026786,6.734540,-4.962910,3.999834,8.465731,-0.226950,7.581519,-0.613146,6.207908,-1.624785,0.552889,9.998176,-0.663289,-9.359991,-3.337543,-8.508922,-0.306019,-8.566883,-7.845356,-8.231446,1.647406,-9.191294,-0.880223,-2.858771,8.342760,7.336744,2.689683,8.100508,-3.133474,-4.905666,-8.722668,3.963069,-0.980658,-9.707110,0.584512,3.112837,1.507993,8.113975,-1.965748,9.757742,2.016293,-5.839136,6.816179,-4.757158,9.654855,-2.021891,-6.630616,-7.797720,5.714958,8.960525,-8.969507,0.844091,-5.233648,3.436150,7.643373,2.273370,8.369540,9.601559,7.785833,-2.131670,-7.139935,-5.952520,-6.460505,-3.784984,1.632186,-4.975948,-4.405958,5.161723,-0.918574,9.521531,4.562077,-8.879294,-0.337373,-7.720238,-1.129684,-6.068544,3.510581,0.559698,4.997253,-8.586092,8.390297,-3.405556,-2.774532,-8.692592,-5.772322,-4.602961,-9.922362,-3.036366,-4.241147,-1.007689,1.391710,-3.278714,-9.468542,-3.226115,4.396450,-9.438838,0.647811,-3.709876,6.792673,0.149584,-3.396367,4.033224,-9.322627,1.960749,-4.673246,4.820833,-6.789571,7.295214,0.507096,-4.294362,-9.262898,6.218485,-2.227261,8.586269,9.543813,7.783960,7.858185,-8.896464,8.789807,-6.224834,-0.722649,5.022080,7.194234,9.452069,7.170128,2.370971,-1.201219,8.678830,-0.918946,-7.389103,9.356467,2.448363,5.568672,5.432727,4.224534,-3.889873,2.406254,-0.686712,-1.675839,-0.848061,-4.164818,9.677615,-2.136595,9.097371,-3.681445,-7.095957,4.357487,-4.743754,-0.967747,8.702665,3.691285,1.641224,-0.075880,-9.382450,4.808170,-2.813631,-9.193628,-5.956863,-5.954999,-1.593263,-6.898631,9.462337,-6.023494,-7.429855,3.014642,6.447152,4.746473,7.100925,-7.995270,7.240231,-3.226196,6.417980,7.783512,-9.318391,8.458781,-8.428153,0.803974,-6.048929,7.716389,-0.047297,-5.929803,-2.070440,-7.257600,7.368015,6.615881,-8.100888,-8.155671,-7.426122,-8.467349,-4.543668,8.085111,5.525843,-7.256908,3.435069,-3.974381,-3.057941,3.289893,-9.697295,-2.193869,-2.220365,-3.618375,-6.420974,9.689141,9.380291,0.740478,5.517971,-4.566684,3.028467,-4.419627,8.222633,6.220955,-7.297940,-2.278049,-7.804911,-9.454610,-4.771321,-5.299119,-8.235355,0.826736,2.349610,0.974244,-3.708511,7.012658,-3.949705,-5.059803,-2.211296,2.202697,-0.544976,3.039375,-9.414009,7.901607,9.052653,4.831638,8.624141,8.585069,7.113538,-4.906532,-5.620947,-9.185718,5.929684,-8.047603,-9.131193,-3.865424,9.276613,1.584820,-8.305131,-1.634687,-5.042060,5.514618,7.752929,-5.294249,2.828203,-6.022689,-6.007353,-3.614307,2.640428,9.415125,-0.327942,-6.848481,-3.125084,4.173631,-6.745474,-3.649173,-1.140259,2.225169,-2.442755,-4.392384,-9.383709,8.087490,3.850854,-5.727879,8.243336,-2.121771,-7.881114,2.979750,8.031454,6.782768,9.678779,-0.413155,5.932802,4.441234,-6.616986,9.559132,-1.559891,8.500516,-9.925688,-2.931821,-1.173712,2.552062,3.119032,9.903517,8.425845,-1.266762,-7.396709,-1.481670,-7.163143,8.094523,-7.098588,3.216783,1.296013,-4.158514,3.313216,4.993384,-2.105791,-7.578917,-4.046579,-6.773924,-3.423508,-9.736679,0.162604,-3.762074,-9.322983,-0.763397,-9.708597,6.564471,3.041115,4.211484,-1.103265,-8.189632,9.696046,-3.728036,-8.575648,8.974720,5.656741,3.129445,1.512268,2.837271,5.524581,-8.594850,1.253502,5.177733,7.583037,6.073379,-8.857147,-2.370343,-0.105238,7.052466], dtype = "float32")#candidate|2750|(2100,)|const|float32
const_2751 = relay.const([-8,10,5,7,-7,10,9,2,-5,7,-3,4,4,-3,5,-10,-2,8,-4,7,9,9,-1,-9,-1,2,9,-10,-5,1,2,-4,10,2,-4,-5,-10,2,7,-10,8,-2,10,-1,-6,-7,-2,3,-1,-5,-5,10,7,9,-3,-2,-2,9,-10,-7,1,-7,4,-4,-6,-10,1,8,-1,-4,5,7,-4,-1,7,3,3,4,3,-2,8,1,3,-9,-8,1,9,-3,4,-7,2,-2,3,2,-3,4,6,3,7,-4,-3,8,-2,-4,5,-9,5,-3,7,-4,-10,4,-4,-5,-6,-5,5,10,-6,-6,-8,-1,-8,9,8,6,2,5,-4,8], dtype = "int8")#candidate|2751|(130,)|const|int8
call_2748 = relay.TupleGetItem(func_2438_call(relay.reshape(const_2749.astype('uint64'), [2, 11, 6]), relay.reshape(const_2750.astype('float32'), [2100,]), relay.reshape(const_2751.astype('int8'), [130,]), ), 1)
call_2752 = relay.TupleGetItem(func_2443_call(relay.reshape(const_2749.astype('uint64'), [2, 11, 6]), relay.reshape(const_2750.astype('float32'), [2100,]), relay.reshape(const_2751.astype('int8'), [130,]), ), 1)
bop_2766 = relay.maximum(uop_2740.astype('int8'), relay.reshape(var_2739.astype('int8'), relay.shape_of(uop_2740))) # shape=(8, 1, 9)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
const_2775 = relay.const([-10,9,10,-10,9,-7,-3,5,-8,-3,-3,1,9,-8,-2,-8,-7,-8,2,3,3,-8,-4,4,-7,-10,7,6,5,2,6,-2,8,9,9,-1,-2,9,-5,-8,9,1,-1,-1,-1,-8,4,10,-1,3,-1,-10,-5,-8,9,1,6,-3,8,-7,-10,8,4,-7,-8,-3,-5,3,2,-10,-9,-1,2,-4,-2,3,-6,8,-10,-3,7,9,-10,4,6,-5,7,-2,3,-3,-6,7,-7,2,-1,-6,-10,2,9,-2,-2,-4,4,-7,-1,-2,-5,1,-5,1,-7,-8,-4,-6,6,10,6,6,9,9,-4,-8,-1,2,3,5,10,8,-4,9,-4,-10,2,-2,-9,-2,1,1,3,9,-9,-6,6,3,8,-9,-2,3,-5,6,4,-7,9,7,3,8,8,9,9,5,-5,-10,-3,10,7,-4,-5,6,-8,8,8,-1,1,2,3,1,-2,-6,5,-7,-3,3,-9,-2,3,6,7,10,7,-9,-9,-10,-1,-10,-4,9,5,7,-3,10,-10,-7,-4,-4,9,5,6,-1,-4,5,5,7,-8,-5,-3,8,3,-8,-2,-2,-8,9,2,2,10,-6,-1,-6,-7,-1,7,-4,3,-9,-6,8,-8,7,8,8,7,2,8,7,8,-8,7,5,-3,7,-5,-5,-3,-3,-2,-8,4,6,-7,-7,-3,9,-6,10,-9,1,3,5,8,6,8,8,-3,5,-9,4,-9,2,7,9,2,-10,-7,2,4,5,1,5,2,-3,-4,5,-7,-1,10,10,9,8,6,1,-5,3,4,1,10,6,-10,-9,7,-3,1,10,5,8,-5,1,-9,-7,2,8,-3,-8,-5,-10,-1,1,8,6,9,-5,4,4,10,-8,-3,-6,3,7,-3,2,4,7,-5,5,6,-8,-8,6,6,-2,-2,-5,-4,-5,-1,-2,8,-7,2,-7,-4,1,-7,-1,2,-4,-6,1,1,-9,-1,-7,2,-4,-8,3,5,-5,10,7,-1,-8,10,-9,3,5,-10,-7,-10,5,3,1,1,-2,4,-4,-2,4,-10,-7,10,9,6,-2,-6,-4,6,-6,-1,-9,2,10,6,8,-6,10,-6,-7,4,1,-8,-10,-10,3,-7,-6,6,2,1,-7,-6,-6,8,9,5,-4,4,-9,-10,-6,7,-7,2,-4,-1,2,9,-4,-1,9,-2,3,6,-10,6,-5,-2,3,-4,-4,9,-6,4,-7,2,3,10,-2,7,5,2,6,4,5,-8,5,-7,-8,-1,-7,1,-7,-7,-9,2,10,6,7,7,10,-3,5,-3,2,-9,7,1,3,4,4,6,10,-10,-3,-9,2,-7,-5,-3,-6,-7,2,-8,8,9,-10,6,8,-8,-4,-4,-10,-5,-3,3,-1,-10,-10,2,-2,2,7,-1,3,-7,-8,-5,-4,-5,-9,4,-9,-4,7,-7,-6,-9,6,-7,-1,7,-5,-10,-3,6,3,3,-8,-1,3,-2,-8,10,-2,4,-1,-5,-5,5,-9,-1,3,-4,-3,4,4,4,8,5,-3,5,2,-10,6,7,6,-10,4,-10,9,-2,1,-3,4,-8,9,-2,-7,9,10,1,-6,7,-4,-6,10,-6,-7,-9,-10,-9,2,1,-4,5,8,9,8,3,-2,9,-8,2,-5,-8,10,4,-7,-3,5,4,-5,-7,-1,-9,9,7,-2,-5,-2,3,-10,-5,-2,-9,-8,2,10,-10,-10,-5,4,8,-5,-4,10,10,-4,9,5,7,-3,-9,-10,5,8,1,-4,-10,4,5,-1,3,1,-3,2,-10,-1,-9,7,-1,3,-7,-10,5,10,9,-4,7,6,2,2,-4,-2,-3,8,4,-5,8,9,-1,-3,10,-3,-5,-9,-5,-10,1,4,8,8,-3,4,-8,5,2,10,-7,9,9,8,6,-5,-9,2,10,1,5,-5,10,2,7,-2,-4,6,-6,7,6,10,10,-5,4,-2,-3,1,6,-5,-7,9,9,-5,4,8,6,5,2,6,6,-6,-6,4,2,7,6,1,3,-10,-9,-5,8,1,-10,9,-5,-4,-2,3,6,3,5,-9,9,-3,10,3,10,10,-1,5,-4,8,-7,-9,-10,7,4,4,-7,-4,-9,-5,-3,8,-5,-1,-1,-4,8,3,4,5,-6,-5,-8,-10,-6,-7,-1,2,-9,5,-9,-10,2], dtype = "int8")#candidate|2775|(825,)|const|int8
call_2774 = relay.TupleGetItem(func_1422_call(relay.reshape(const_2775.astype('int8'), [5, 11, 15]), relay.reshape(const_2775.astype('int8'), [5, 11, 15]), ), 1)
call_2776 = relay.TupleGetItem(func_1425_call(relay.reshape(const_2775.astype('int8'), [5, 11, 15]), relay.reshape(const_2775.astype('int8'), [5, 11, 15]), ), 1)
func_2540_call = mod.get_global_var('func_2540')
func_2543_call = mutated_mod.get_global_var('func_2543')
const_2780 = relay.const([-3.125456,5.218202,-0.790556,-5.627326,-3.843466,5.733013,-4.621769,-4.700162,-1.411507,-8.209596,-7.096002,-5.632936,-0.866163,-5.714290,-7.683024,6.221284,-8.944157,-1.187665,-6.084536,-9.855285,-0.202002,2.493995,-6.420739,-3.329817,-4.114625,3.926998,2.380618,9.408261,8.530728,5.650756,2.602521,-5.116488,7.085974,-6.722261,5.612103,-2.041698,-3.889309,-3.529988,4.617946,9.180484,-7.363854,7.154817,0.153124,4.837159,-5.002300,-1.295882,2.674944,6.943080,9.232637,-6.011277,-2.988330,-3.342627,-1.914921,2.217455,-3.730038,-5.952226,7.946242,-4.684341,-7.683858,1.322251,9.261526,0.738628,-5.153839,4.333419,-9.433998,-5.759663,0.643964,-1.759925,-1.096833,7.304469,-8.325028,0.734771,9.601261,-0.264979,8.991881,-8.344525,7.862201,4.742807,-5.006677,0.028001,0.351571,-3.919480,0.651368,-2.942754,-5.005626,-6.123442,2.215524,2.098432,1.598043,0.761498,4.452585,9.455991,7.189321,0.491649,-7.618213,-1.085863,-6.086145,-4.775544,8.619072,7.535443,-5.273364,7.982217,8.455789,5.340225,-4.221011,1.682242,-5.896687,4.353987,-8.310338,-3.074117,8.810220,-2.083930,5.699682,2.061230,7.709394,-9.039163,-1.062822], dtype = "float64")#candidate|2780|(117,)|const|float64
call_2779 = relay.TupleGetItem(func_2540_call(relay.reshape(const_2780.astype('float64'), [1, 9, 13]), relay.reshape(const_2751.astype('int8'), [13, 10]), ), 2)
call_2781 = relay.TupleGetItem(func_2543_call(relay.reshape(const_2780.astype('float64'), [1, 9, 13]), relay.reshape(const_2751.astype('int8'), [13, 10]), ), 2)
output = relay.Tuple([call_2748,const_2749,const_2750,const_2751,bop_2766,call_2774,const_2775,call_2779,const_2780,])
output2 = relay.Tuple([call_2752,const_2749,const_2750,const_2751,bop_2766,call_2776,const_2775,call_2781,const_2780,])
func_2782 = relay.Function([var_2739,], output)
mod['func_2782'] = func_2782
mod = relay.transform.InferType()(mod)
mutated_mod['func_2782'] = func_2782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2783 = relay.var("var_2783", dtype = "float32", shape = (8, 1, 9))#candidate|2783|(8, 1, 9)|var|float32
func_2782_call = mutated_mod.get_global_var('func_2782')
call_2784 = func_2782_call(var_2783)
output = call_2784
func_2785 = relay.Function([var_2783], output)
mutated_mod['func_2785'] = func_2785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3039 = relay.var("var_3039", dtype = "uint32", shape = ())#candidate|3039|()|var|uint32
var_3040 = relay.var("var_3040", dtype = "uint32", shape = (5, 2, 6))#candidate|3040|(5, 2, 6)|var|uint32
bop_3041 = relay.bitwise_and(var_3039.astype('uint32'), var_3040.astype('uint32')) # shape=(5, 2, 6)
bop_3058 = relay.bitwise_xor(bop_3041.astype('uint64'), var_3039.astype('uint64')) # shape=(5, 2, 6)
func_2452_call = mod.get_global_var('func_2452')
func_2455_call = mutated_mod.get_global_var('func_2455')
var_3062 = relay.var("var_3062", dtype = "float32", shape = (468, 1))#candidate|3062|(468, 1)|var|float32
call_3061 = func_2452_call(relay.reshape(var_3062.astype('float32'), [6, 13, 6]))
call_3063 = func_2452_call(relay.reshape(var_3062.astype('float32'), [6, 13, 6]))
const_3078 = relay.const([[[5,5,4,2,-7,5],[6,-10,7,-5,-4,4]],[[-5,5,7,3,5,-6],[1,8,-10,-7,8,5]],[[-5,-8,-9,-2,-1,10],[-6,9,-2,-10,-2,-2]],[[-1,1,8,-7,-10,1],[-9,4,9,9,-8,7]],[[-1,4,5,-8,-4,-6],[-8,-7,-9,-8,9,-10]]], dtype = "uint32")#candidate|3078|(5, 2, 6)|const|uint32
bop_3079 = relay.less(var_3040.astype('bool'), relay.reshape(const_3078.astype('bool'), relay.shape_of(var_3040))) # shape=(5, 2, 6)
func_250_call = mod.get_global_var('func_250')
func_254_call = mutated_mod.get_global_var('func_254')
var_3088 = relay.var("var_3088", dtype = "uint8", shape = (24,))#candidate|3088|(24,)|var|uint8
call_3087 = relay.TupleGetItem(func_250_call(relay.reshape(var_3088.astype('uint8'), [3, 4, 2]), relay.reshape(var_3088.astype('uint8'), [3, 4, 2]), relay.reshape(var_3088.astype('uint8'), [3, 4, 2]), ), 1)
call_3089 = relay.TupleGetItem(func_254_call(relay.reshape(var_3088.astype('uint8'), [3, 4, 2]), relay.reshape(var_3088.astype('uint8'), [3, 4, 2]), relay.reshape(var_3088.astype('uint8'), [3, 4, 2]), ), 1)
var_3092 = relay.var("var_3092", dtype = "bool", shape = (5, 2, 6))#candidate|3092|(5, 2, 6)|var|bool
bop_3093 = relay.minimum(bop_3079.astype('int32'), relay.reshape(var_3092.astype('int32'), relay.shape_of(bop_3079))) # shape=(5, 2, 6)
func_97_call = mod.get_global_var('func_97')
func_99_call = mutated_mod.get_global_var('func_99')
const_3100 = relay.const([1.581734,2.948729,9.632356,5.876737,-1.450302,4.023052,-6.974269,-4.790756,7.402122,-8.963696,-4.309937,5.073124], dtype = "float32")#candidate|3100|(12,)|const|float32
call_3099 = relay.TupleGetItem(func_97_call(relay.reshape(const_3100.astype('float32'), [4, 1, 3])), 0)
call_3101 = relay.TupleGetItem(func_99_call(relay.reshape(const_3100.astype('float32'), [4, 1, 3])), 0)
func_2540_call = mod.get_global_var('func_2540')
func_2543_call = mutated_mod.get_global_var('func_2543')
const_3116 = relay.const([1.391872,6.644544,-1.368616,-4.387345,-6.056824,0.549970,0.742912,-3.029503,7.242618,-5.600899,-0.213596,3.143678,5.655313,-3.140329,-7.319953,-8.251093,1.967526,5.689833,-5.466386,7.641030,-5.781374,6.556639,4.051273,-0.194740,6.932879,-3.415778,-2.621576,8.960997,-9.721577,-0.629607,8.231034,2.379640,-0.607111,-2.650153,-0.284091,-6.916056,1.038867,-8.210981,6.650222,1.425968,3.697306,-2.594943,3.083229,-0.032740,3.640948,-6.811092,0.025338,4.745288,7.127077,-1.976096,8.086513,-5.932278,-6.532871,-7.293446,3.025066,-2.645727,8.030340,-9.637409,-0.181861,-2.859991,-0.406964,-4.153847,-6.789390,8.330548,-2.844796,4.377213,-7.739807,-8.837684,-5.610955,-6.451394,-8.677938,2.683339,-1.708706,1.164493,-1.437577,-0.570548,-7.065747,-5.682662,0.727616,-7.591070,6.234006,5.462554,-9.535517,-3.339118,-3.267381,-6.066350,-4.026051,-6.029946,-3.630024,3.923367,-9.204329,1.846881,7.120845,1.975036,5.648236,-9.242241,-3.937101,8.723704,3.170093,5.015040,-4.386692,-6.840141,0.638998,6.754497,-2.535266,-8.936756,3.869293,-6.669452,9.316480,7.715037,1.494540,5.441210,4.483556,-3.668085,9.330477,0.763719,-5.512466], dtype = "float64")#candidate|3116|(117,)|const|float64
var_3117 = relay.var("var_3117", dtype = "int8", shape = (130,))#candidate|3117|(130,)|var|int8
call_3115 = relay.TupleGetItem(func_2540_call(relay.reshape(const_3116.astype('float64'), [1, 9, 13]), relay.reshape(var_3117.astype('int8'), [13, 10]), ), 1)
call_3118 = relay.TupleGetItem(func_2543_call(relay.reshape(const_3116.astype('float64'), [1, 9, 13]), relay.reshape(var_3117.astype('int8'), [13, 10]), ), 1)
func_1591_call = mod.get_global_var('func_1591')
func_1594_call = mutated_mod.get_global_var('func_1594')
const_3121 = relay.const([6.341899,5.236528,4.680000,-8.654950,9.350977,-0.736140,0.658180,1.374682,9.553968,-9.194331,9.202907,-7.306295,-7.146314,-5.117853,5.863870,-9.283588,-6.599217,-6.512686,3.646595,9.023781,-9.892600,1.291713,-0.931404,-7.060948,-7.446209,0.033076,8.573937,5.633309,9.175567,6.484250,1.143851,3.921568,5.014633,2.610747,-9.283219,-2.151612,9.297688,2.693470,-1.177959,0.879043,-7.695862,7.172855,-6.557394,7.199232,-2.062319,7.379306,1.209489,2.618613,-5.503532,2.367867,4.282574,-9.826536,2.474813,-9.817742,6.243228,7.921412,-3.620395,6.480716,9.899510,-5.718453,-7.507525,7.873130,4.095929,-4.138927,-7.251818,-0.458831,3.522236,-3.766403,-3.367794,4.334695,-5.839825,1.415200,1.066047,-1.018650,-6.795836,-3.947453,-7.114192,-0.678074,-8.130810,1.503410,-2.802324,-1.362539,-6.059598,4.508124,-3.463665,6.935603,4.921975,6.962311,3.206616,6.348712,4.883878,-1.755459,2.926243,8.866025,-0.840052,-6.140731,-6.521231,-6.390710,1.945929,-9.603450,-0.986986,4.343532,-9.195618,-1.542374,-4.756365,9.423722,2.267452,3.468793,-3.867824,-3.686370,4.201182,-6.835094,-8.477949,6.758468,-0.486958,8.451386,2.167706,-5.387274,9.488716,4.940438,-5.395708,3.186813,3.606225,-1.065103,7.692945,-0.778021,-3.376589,1.384812,0.558499,-3.508930,-2.483290,6.899902,-9.466270,5.768641,-5.783903,5.044565,-1.941640,1.573813,8.717694,2.738553,-8.588248,-5.809543,-7.281312,3.653478,-7.939613,8.568605,8.206339,-3.799089,-2.720467,-3.636785,-1.016613,4.699050,-2.067509,-4.450778,5.687170,6.825391,1.765285,-1.242140,4.501707,-6.100407,2.669663,-3.029035,-3.427024,5.228356,-3.288363,9.806845,5.876605,0.776980,5.929072,-8.134875,-6.999482,6.688400,3.379218,9.436476,6.770169,-7.148670,-0.657065,-5.656223,0.870423,0.281424,3.922736,-8.777065,-6.369577,-6.108017,-3.816314,-8.216839,-3.826767,-0.927162,6.855730,-2.819477,1.550198,5.510700,5.584153,-8.126542,2.231006,1.588639,6.585292,-6.098926,6.406547,1.361779,8.701359,-9.950922,7.795530,6.996771,9.690806,-5.002362,-4.910776,-0.359235,6.350370,-8.851326,-4.847909,7.607156,3.119319,6.931739,-0.680661,-1.097134,-3.206104,-8.230225,-9.605201,-8.757818,2.792822,-8.512717,2.534358,-2.440809,-1.613730,0.429725,-8.086260,-7.092658,-9.708667,-7.447450,-9.569754,-8.809756,-0.361538,0.001760,-8.938870,-4.127667,-1.126283,6.759691,1.568504,-0.504683,-5.342542,-8.848876,-5.526886,5.496474,1.213480,3.122715,-6.534018,-6.528141,-0.849420,5.074966,-1.310836,2.932685,7.379130,-8.018281,-3.303194,-4.863687,-8.702435,2.056223,4.629757,-2.323854,-3.901538,-0.207569,5.819305,7.994147,-7.153444,3.181672,-6.812843,3.003134,5.531310,-0.516756,-9.906576,9.717923,-2.341614,8.712014,4.735112,-8.580229,-3.997531,-4.009026,9.111943,1.049538,8.848328,-7.260068,3.153948,8.879523,4.038849,-7.313717,-9.862050,1.525326,-6.331742,-4.197526,-0.553961,-3.391665,7.682194,-3.878751,-2.940985,5.009106,-3.022671,-8.160922,0.835986,2.572767,2.075602,4.668484,0.422374,-2.956640,7.240641,0.899529,8.681628,-1.862086,-0.457969,-4.133286,5.739138,-9.234145,2.071221,4.772064,-0.927051,-7.804897,9.792762,3.131030,-0.247000,-0.188610,-6.925416,0.734270,8.031608,4.301012,-8.859434,5.661549,0.865362,-3.396140,-4.302095,0.543910,-1.970841,-6.270593,3.560334,-9.729402,-1.126718,-3.758853,-4.869001,-0.229843,7.773941,5.803922,1.804046,0.138775,8.432522,-8.003634,-9.716381,-6.820688,9.085216,-4.237918,5.378176,-1.562720,7.277329,-9.891986,-0.057455,-5.302047,-6.774680,1.775729,-9.019180,-5.723415,-7.057316,5.088425,1.918641,5.047343,-0.827409,5.273258,-2.373024,3.076767,-2.040765,4.375794,2.380571,3.751229,-1.519196,9.696641,5.496303,-8.424884,-5.159789,-9.905207,0.914763,-2.267221,4.127710,8.472056,9.785724,-7.493174,1.474791,-3.556851,9.103707,-5.351395,0.568733,-4.633748,-8.182731,-8.921434,-9.403641,-1.810014,6.113586,0.200767,-8.009441,-6.347390,-7.588239,-8.105416,3.426817,-4.663208,-2.616100,-0.863826,-5.067540,-1.855853,7.112971,-9.536497,-8.835522,5.241868,7.878322,-6.494099,-4.260725,-8.044509,3.858509,-7.712328,6.438760,9.404858,3.143313,1.635990,-2.600641,-8.086562,1.984563,9.054102,4.129454,4.825722,-6.977804,9.243466,-6.475326,7.878741,-6.279648,-8.321256,-5.458671,8.384117,2.152216,4.665924,-8.317580,0.426147,-3.419628,6.818286,-1.416863,4.900118,0.487512,9.719297,-8.431458,3.933426,-5.974542,-2.181932,-6.592776,-9.799925,4.411982,8.693396,-8.211022,2.039673,-5.496255,-4.914527,7.953528,1.801746,-9.455274,-3.733623,9.950623,7.477213,-9.412702,-1.486498,2.932275,-7.677090,-8.431631,2.360401,4.057762,-3.825377,5.927987,-7.134870,-2.659405,8.629773,-8.304406,1.398652,-7.518951,9.971436,-8.494840,7.018759,-1.172689,-0.293093,5.069119,6.852926,-7.383227,-1.615616,2.364214,-8.293864,-9.767111,-4.966000,-5.662435,-7.770971,0.142525,2.939057,0.557026,3.012919,-4.513712,6.523746,9.827228,-0.234819,-7.903753,-8.071350,0.575784,8.284923,-8.199681,-2.084441,3.690829,5.622658,-0.978576,-0.448283,6.269156,-7.941680,-3.043588,-5.504574,-8.691664,8.038030,1.712747,-0.107614,7.597868,4.631297,-8.350513,-7.635346,-6.046203,-5.815791,-6.138147,1.974643,-6.090730,6.067516,7.429012,3.799824,0.999542,-9.675591,-0.588313,5.409487,-8.946663,4.375290,1.614845,-3.688407,-6.642403,-7.167928,9.877962,-7.118845,5.306273,-6.219079,3.176839,1.944453,4.792375,-8.258126,-5.652923,5.663102,-7.656013,7.422432,-6.387208,4.065336,-7.598022,5.275881,4.612045,-3.324471,0.947210,8.273725,-3.720183,0.103256,-3.721666,1.458092,-8.095970,3.554476,4.406501,-2.425000,-3.448256,-1.984083,0.139348,6.623157,-6.895903,-9.978053,-8.527395,-5.792593,-8.960312,-1.618849,6.841848,8.740849,-7.713466,-2.466364,-4.355082,8.261512,3.826640,8.842200,4.995442,3.851253,-1.346981,-4.766950,-4.431977,6.038826,-2.186494,4.794009,7.205679,8.266651,-9.364919,-1.829805,-3.309487,4.166868,6.803348,6.406583,2.802445,-1.294187,-5.636243,2.359510,-2.274853,7.092065,-7.914922,-4.846223,4.035469,-1.042635,-5.302917,-3.005042,-6.251060,-9.396301,5.460167,6.981995,-3.075831,-2.974941,-5.267025,2.502352,0.513266,7.913519,-3.505407,5.506872,-2.649675,3.872820,-6.242833,3.869107,0.877164,1.408086,9.877218,-5.417984,-2.364719,-1.586178,-4.723900,0.783951,-2.831944,3.382951,9.254686,7.406464,-8.090517,-6.290440,-7.806071,-9.985633,1.520084,-7.763503,-7.981251,-7.951189,-5.784708,4.400364,5.956250,-9.980419,8.213093,-2.683990,-0.236732,-7.800790,-5.564229,-0.016685,7.524461,-2.305048,-7.345340,5.367937,5.522437,9.116108,2.708010,-6.200394,-9.568144,-7.435687,8.303182,-6.071095,-0.034743,-1.086487,8.518853,-7.915532,8.808720,4.345284,9.514255,-2.153156,-6.900146,-9.337273,-8.648349,-0.774785,1.946970,3.426955,9.340647,0.740490,-4.698268,-3.202569,-7.577847,-3.867653,-3.172351,2.345428,5.857681,-2.694534,9.423781,4.084208,-0.459526,-5.264610,-4.162704,-7.320371,1.079348,-6.759985,8.039079,2.680189,1.158280,-0.169556,1.180962,1.745802,9.122887,9.165630,4.385401,5.352216,-0.110749,1.739687,3.088763,8.318641,4.333571,-9.418666,-5.570453,-1.539270,-8.710331,9.622969,-2.765697,-4.397279,0.584974,4.593329,-8.288298,-9.027104,-3.176043,1.031946,5.540469,4.008572,-5.826806,6.913650,7.612866,-8.275384,-8.620527,-4.024275,2.852486,5.808267,-3.432926,8.979189,0.811169,7.472893,9.642649,0.894354,2.290000,-8.634101,-6.778594,2.698797,2.515160,3.202224,2.438256,6.078813,-8.324965,9.237075,0.182248,3.919551,-3.718533,-9.382591,-2.652740,-7.773013,-5.862701,4.261520,7.823735,2.856021,1.546803,-8.076689,-8.052591,7.376039,-8.790109,1.163704,5.202334,-0.161191,3.252018,1.202738,-5.781038,-3.155400,-7.057706,-2.559850,-6.049729,1.743777,-2.163193,-8.517706,0.880853,-4.342996,8.136184,7.044875,-7.527125,-9.023815,-1.340598,6.351882,-5.614053,-4.687800,-8.997220,-8.974980,-8.851128,-8.086445,6.747991,7.095405,-9.570373,1.420277,0.833699,-1.252148,-4.675562,7.754244,-2.587936,-0.211833,-8.285905,-3.332148,8.197625,3.362969,-5.233924,-1.927091,1.262203,-9.455538,6.847251,3.143863,-5.088240,0.573161,-7.719293,3.200456,2.232462,6.052687,-2.845679,-0.445486,-1.111545,1.094742,6.213646,9.317377,4.718243,-1.556777,8.049041,1.379630,4.535499,-5.306992,-1.886771,5.924299,2.674584,4.822694,-3.856409,0.194575,-1.536255,8.803415,7.937359,-3.761273,-7.449863,8.252756,-1.535940,7.037236,4.187520,2.192927,3.340469,-3.946256,-6.071329,5.438765,7.423863,8.514156,5.630641,-4.306257,5.216104,-9.195258,8.982691,1.234925,-5.009863,-8.203571,9.868556,6.105257,-0.009392,1.612932,-1.884044,3.990931,-0.738926,8.612310,9.965490,-3.368425,-5.507846,-6.779698,-6.076694,1.501831,-6.253680,1.880944,5.368079,-5.930927,-2.966221,-8.088363,-7.344708,-4.010098,3.428612,2.632531,7.061983,9.035373,-9.632341,-1.801470,-5.513572,6.447172,1.393184,-7.487354,-9.055608,-4.051931,-5.832393,8.710205,-9.609399,7.752496,3.630633,-0.072287,-6.352523,-7.339688,6.163847,-7.824424,-9.141982,-7.199264,-9.715522,-2.448993,7.874744,5.898798,-2.665881,3.034290,-9.268455,-3.310615,4.093339,7.601116,-6.210795,-6.325840,-1.518610,8.319467,-2.037783,-6.650654,-7.149964,8.044811,0.389989,-7.360329,8.311209,-0.861817,-3.167675,7.232926,9.150007,-9.297201,-1.427246,3.189557,8.605670,2.106580,-3.232560,-9.586110,1.645628,-7.064471,-0.267101,-0.621421,-1.849026,8.507148,7.580379,-5.340299,3.133006,-7.298109,6.963098,-4.827364,9.203475,0.943173,3.725508,-7.257985,7.484909,0.668222,2.461302,-8.680293,-7.192894,7.927696,-5.923448,-6.674423,-1.049598,-1.257877,-6.071253,-9.764385,-8.502436,4.014331,9.701623,-4.220627,3.008198,-4.828611,5.182016,-3.872455,-0.721408,2.872333,-3.496645,5.623310,9.831637,-8.871514,-4.902308,4.874174,-8.751804,9.464785,-8.520088,4.049270,3.172767,1.849040,-2.329430,9.924439,7.823367,9.951291,-9.853219,-4.544851,-6.128965,-3.528478,1.554299,-1.008387,-2.778103,8.537943,1.068390,-2.657824,-8.978652,-4.777550,-9.886440,3.546198,-7.165934,0.133579,1.435409,-9.511803,-0.285011,8.933948,-0.742352,-9.475057,7.842812,-9.339845,-8.829109,2.534507,-1.245352,3.087746,8.451141,-3.130490,5.930348,7.981081,6.873346,7.496575,-5.330376,1.667230,-3.948518,6.268867,7.382773,-4.941551,3.300519,-8.632097,3.932673,-6.121104,-4.058773,1.692082,-8.876676,9.030952,-9.560361,9.930307,4.534979,-4.957039,-2.843665,6.863017,3.053426,5.945596,3.712023,-5.218975,0.887442,-7.126353,3.706144,-8.677551,-1.640984,7.195058,-6.347511,5.261961,1.850721,1.566270,5.133161,8.109715,-7.183519,6.994234,-6.555824,9.189249,-7.214348,6.117197,1.877846,6.104224,0.126226,-4.751947,-1.984206,9.270494,9.084059,3.302406,4.008937,1.267499,-6.947758,-1.849300,-3.939504,-1.043777,8.122328,-9.440512,6.825163,-3.872976,-3.094034,-3.709991,-6.627258,-8.158540,-3.234415,-6.415088,-3.823187,-7.164127,7.082102,8.053017,-9.968601,-7.172518,-9.766410,-2.929650,2.848482,-2.605794,1.039256,-7.324124,9.677591,-0.501611,-7.291583,4.028699,-9.816795,7.812303,-5.574749,-4.652714,8.745402,-9.199438,2.091071,1.521449,2.718283,5.588940,1.745213,-1.977058,-2.059435,-8.384136,-1.103864,-9.551656,9.703461,-9.466403,-2.642083,-5.271729,2.964237,4.139286,0.023434,4.076158,7.966145,-3.575710,-3.185375,5.528261,2.161455,-6.265433,1.369503,-6.056900,-7.704417,4.115497,9.522753,-7.250615,-0.417253,-5.788172,1.540251,1.487297,-0.430754,0.356793,-4.747597,6.465899,-3.122577,2.941975,-1.280418,1.640671,-5.168909,-3.550258,-5.258242,4.307655,-2.422972,8.009384,3.778196,-0.893736,-0.241702,5.266467,-0.306934,-5.479560,-8.209819,6.490990,9.073310,1.362554,5.810804,-0.559651,9.262650,-5.484477,4.976113,8.980517,-3.448177,-0.947291,6.900646,-1.317142,-3.201998,-3.619723,-3.442831,-3.300491,-8.836688,-4.129649,0.307172,-1.110252,-5.238486,-6.131255,-4.336775,-9.294489,-1.440806,8.019707,-9.957265,5.832712,-2.311831,9.969569,6.985395,-3.357952,-5.421473,8.223914,8.877010,-4.114395,7.713895,7.898078,-8.446091,-7.716345,-9.493061,-7.217714,5.874625,-3.575059,2.904849,5.230017,1.255638,4.082895,-3.310746,0.316201,-3.990160,5.256074,-8.164931,5.520325,-0.794995,2.874418,2.106304,-5.210392,-1.093352,-9.226624,-2.336660,-2.471231,0.414715,7.807843,8.000955,-7.878800,-2.308581,6.969042,-0.852343,9.807190,-6.080795,-0.577444,-4.718012,4.502878,9.967829,7.637767,3.950032,4.242980,8.083117,-6.570380,0.693598,-0.917344,-9.342517,-7.450905,-9.493897,0.628609,6.929783,-5.838948,-8.620777,-2.741246,3.966775,-4.511231,8.609311,8.664686,-8.648497,7.517613,-6.447103,-2.114324,6.508560,-2.862067,-3.622408,8.463340,7.884469,-1.996461,4.783119,4.072970,-8.302300,9.268559,0.562479,-3.435796,-0.429930,4.689999,0.294445,3.882877,-9.672308,-6.394267,9.844357,-8.612125,0.797862,8.211952,9.045569,6.808043,-8.715093,-6.397823,8.425247,0.236882,-0.317751,1.984881,-9.510971,8.188148,-1.312310,-7.061492,3.685613,-0.212009,8.299961,7.415012,-6.788611,-1.649729,3.463565,-6.029844,9.578242,-0.632479,-1.272155,2.324630,-1.151029,4.629626,-7.139514,-5.038915,0.213441,-9.151994,-3.906917,5.543488,-6.727565,8.082565,-3.429451,-7.332025,-8.792079,-8.635361,-8.699496,7.691474,-6.444595,8.580019,-4.776193,-5.165039,-9.405896,-0.596654,-6.851867,1.584171,6.818429,-4.068989,-4.396157,0.746972,5.529426,4.170949,5.007369,-1.821495,-9.141183,-8.319616,0.806039,-9.201084,4.865389,5.638060,-7.675029,-5.326118,6.063743,-6.419641,-5.034470,-5.295819,6.856768,9.047471,8.176890,-0.048669,-4.819151,-2.711603,4.216606,8.283656,-1.351675,-0.723140,-7.104309,-2.778111,8.793452,3.479626,4.350277,6.850668,-8.045130,3.037267,-5.059871,2.299141,3.314968,-5.294742,-0.212367,7.704958,-1.034264,6.151613,8.357878,4.568766,-2.690083,-0.504149,-0.008721,-7.753490,-5.103519,-5.648830,9.393702,4.435986,-9.929104,7.050438,-8.031620,3.884134,-9.112986,6.740802,-3.734598,-6.639009,6.472000,-8.429905,-4.272514,-7.618932,4.974207,9.298515,-7.325305,6.241103,8.127341,5.759772,9.848211,-9.272693,-0.205254,2.170444,-8.157330,0.273993,-0.420714,-0.204758,8.289386,-9.421539,8.400302,9.376337,-0.386376,-5.222872,-6.149092,6.332779,-5.801357,5.238625,3.386288,-9.063925,4.174378,-3.398846,8.541488,-4.160346,7.015800,4.510059,0.786845,9.734991,1.050598,9.228904,7.212455,-6.602624,-7.527225,-1.606980,-6.884839,-6.917167,8.141639,-0.829772,3.205354,7.324523,0.910975,7.764415,0.264556,-6.810983,0.344963,-6.134581,6.439262,-2.041820,6.643877,8.683943,9.333332,1.442903,-0.979986,-0.977718,-4.022816,5.793661,-2.066168,-7.005584,6.582873,5.680958,-2.972272,6.102532,-4.856199,-4.900000,5.375277,8.843611,4.808062,7.404866,-9.954706,0.395006,0.615637,-5.763253,8.774704,6.417137,-6.014273,7.066082,9.972612,-1.948386,0.888283,7.718231,-5.584767,3.831357,6.847206,-0.747849,-1.044942,-0.726084,-4.599617,-0.221310,-2.066167,-5.726149,-4.928788,6.936554,-3.560292,5.297111,-6.899884,-6.483973,2.488954,-2.029367,-3.878906,6.545180,-6.833384,-9.062214,-7.176460,5.781278,6.428037,1.838846,2.970603,9.643452,-9.684453,2.128568,3.216690,-4.093539,-8.179446,5.178923,8.624815,5.864370,-0.868570,-5.362636,-7.729170,0.170788,6.137553,4.323811,-9.349387,-0.600349,1.110155,5.734922,-7.208384,-0.490685,3.392315,9.843007,-6.951760,-3.184286,6.177859,3.229156,-9.382147,7.941803,-2.595383,9.287008,0.070617,1.270265,0.846555,6.351166,-4.307673,-8.703677,2.497033,-5.199448,1.703331,-4.104724,3.243297,-5.561939,6.606145,5.789358,0.953340,-7.355015,7.482891,6.997230,-9.451034,-8.410454,-7.300458,-0.145864,-2.389462,8.923064,-8.744801,-8.255947,-0.079878,5.682593,-6.070357,1.896419,8.264325,-9.573530,2.079441,-0.922367,-3.418853,1.263516,4.224410,-6.661244,-2.701221,8.973648,-9.126804,7.830966,3.451208,-8.276368,1.557124,6.584512,7.404436,1.623126,2.648803,-3.743181,-3.159377,8.971649,-2.329612,-2.361825,4.447207,6.687940,1.523510,-2.785646,6.971212,5.945017,-1.587932,-9.814204,-7.057942,5.555847,2.262823,-0.898271,1.771952,8.179281,2.640278,-4.132417,-4.748534,-0.702721,-0.947444,-2.763091,7.723620,2.722151,-1.104356,6.078177,3.897789,-5.182927,5.314771,1.296072,-8.983559,-1.904142,-7.561839,1.928456,-7.502805,-5.424995,-3.862359,-2.899030,-1.445383,-3.372783,8.314641,-3.061562,-0.659421,3.353437,0.281089,-9.426567,-2.235843,4.829134,6.855488,8.393677,3.958688,4.935772,-1.533157,1.037683,7.426869,5.862667,-0.771931,6.959271,-4.863581,-3.523168,9.263707,-2.297407,1.840995,-6.440049,-7.984823,-3.751735,-4.588819,4.041572,6.874804,6.589860,-2.320306,-2.569740,-5.695014,1.963118,-3.715024,-2.214216,-8.870350,5.093224,3.756998,2.778922,6.438176,2.240668,4.423880,-0.304440,4.335672,4.216348,-4.856909,-7.764102,1.754200,-8.972529,1.795766,-7.890892,5.158891,4.122783,9.480742,-1.420207,-2.501293,-2.806271,-4.542472,3.689126,7.782859,-2.587213,-3.478626,-1.520393,-4.346257,8.111518,-8.721969,-6.944409,-8.487874,-1.662230,-6.141655,-5.263619,-5.200189,-4.638365,-4.347695,-1.399134,-4.961171,6.848076,-0.288649,-8.098669,-0.651034,-9.766459,2.945632,-0.294072,8.633405,-6.685054,1.583973,-9.312923,0.004797,5.953560,-8.704604,8.181628,-7.908630,3.522971,8.758026,8.385207,-6.046388,-8.100565,-5.752776,7.781302,9.157491,9.646701,-5.074430,-3.408919,-6.289398,1.049501,4.395408,5.096553,-4.257537,-1.324725,0.389677,9.436725,-6.338772,4.552847,7.364508,-7.163831,-3.531412,8.170766,9.421189,2.310197,4.882200,3.234132,5.281732,-6.025385,2.751346,7.058506,0.992955,-8.004377,-4.552702,-1.581940,-2.201307,-7.938385,9.649970,-2.071276,6.902790,-9.314746,-6.617204,-7.334602,1.533229,0.501491,1.323273,4.288361,-5.617762,-8.553563,5.358044,-7.268541,2.101056,6.211435,-7.407136,-2.899851,2.900750,0.246204,-3.537167,4.882272,-1.597912,-0.180810,-3.375607,-5.910804,-3.532469,5.479698,-7.863008,8.455485,3.110941,-3.621697,-8.974411,8.401239,0.413180,-3.301545,-2.566807,1.323214,-7.067086,9.478684,5.511050,7.349965,-9.295826,-7.745146,-7.851354,0.658024,-3.531335,-5.630812,-3.428070,-0.693895,-9.814349,4.473569,-0.048021,1.085291,-8.924961,4.242126,1.433306,8.298339,-0.740914,-0.026011,-6.509676,-0.950164,3.096986,0.116210,-2.302182,8.562234,-7.256782,-8.003867,-3.539788,-3.156759,-4.869819,-9.825410,-0.503153,3.110705,9.267672,-0.530691,7.821243,-9.360517,7.160219,-3.096992,3.117365,-4.605401,-1.433830,7.025169,-4.245553,-5.787936,9.105712,-2.548759,-0.400106,-2.317225,1.213882,9.655797,6.356427,9.482126,-8.000818,5.944971,-7.629884,1.714470,-2.308701,4.165202,-0.928349,2.391241,-4.951918,-8.221427,6.449380,0.947174,8.285949,-2.910944,-9.913196,2.447114,6.844402,3.072031,-5.645991,5.129386,9.913024,4.859971,-2.028009,0.241828,1.543013,0.479293,8.840181,7.414243,-6.944584,6.490153,-9.949249,3.152510,2.404607,7.504601,5.713297,-3.306082,8.505949,3.649799,-3.311195,-8.184403,-0.553552,6.089815,-2.709876,-8.838918,-1.802522,-2.320746,-8.916512,-6.125187,-9.290909,4.512291,-7.043150,-6.425277,6.259498,8.552308,-4.287235,7.182642,-3.204132,-9.510779,-6.216125,5.268659,3.349486,7.254122,1.731220,0.660268,5.394031,4.532744,5.362223,8.738261,7.006301,-8.999666,-0.044907,-3.593107,-9.638288,-8.018793,8.358926,0.231847,7.513076,-7.639623,4.802225,-6.238655,-6.594258,-3.739961,0.603525,9.690405,3.894077,-8.674537,6.252752,-9.791055,-6.174930,-2.354991,-5.696499,-1.841950,-8.409425,-1.703904,-7.530510,-5.059914,-1.707440,-0.821527,-1.777708,8.628445,-6.417142,-2.930212,-6.005319,5.996294,5.451656,2.264030,-4.342180,2.476064,-3.136143,-3.717684,-2.659734,-7.398983,2.298465,-5.492322,-0.615643,7.984456,5.998449,-9.240542,-0.743797,-5.092559,-7.386694,3.199503,2.707760,8.688424,-6.654983,0.191987,3.360828,-5.354888,-8.930190,-8.531763,-1.255304,7.983532,7.442602,5.703640,-6.735289,7.911214,4.307620,1.912132,5.601689,5.399500,-9.600253,-0.917586,-0.911828,-0.920942,2.624270,8.135714,5.634679,-9.516593,-8.985090,-6.855939,0.471291,6.743500,0.181796,-4.939761,-5.643799,-5.423858,-9.217624,-5.125265,0.802700,1.040279,7.088293,-8.497028,-8.800370,-5.915172,0.218227,8.623593,-3.665607,5.826341,7.812571,2.346457,0.992259,-5.550335,-4.189453,-6.512343,9.498458,7.150989,-8.974762,8.648430,-1.590717,-3.035156,6.659471,-2.429631,-3.586636,3.708205,7.188058,3.127931,-5.148087,-2.574067,-8.220059,7.669728,6.035408,4.687024,-4.087576,-6.568479,-8.576380,-9.979345,-5.306194,2.591778,9.273352,-6.508047,3.811260,5.865155,8.473275,3.252169,5.316308,2.905951,6.833552,-2.878435,-8.944228,-4.729085,8.550811,-3.428904,9.203049,3.866663,-9.452370,-4.067652,1.848788,5.502270,7.959989,4.208585,3.705034,1.830331,9.466137,3.282733,-0.717783,-1.977067], dtype = "float32")#candidate|3121|(2100,)|const|float32
call_3120 = relay.TupleGetItem(func_1591_call(relay.reshape(const_3121.astype('float32'), [15, 14, 10])), 0)
call_3122 = relay.TupleGetItem(func_1594_call(relay.reshape(const_3121.astype('float32'), [15, 14, 10])), 0)
uop_3125 = relay.sinh(var_3092.astype('float64')) # shape=(5, 2, 6)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
const_3129 = relay.const([[-8,-10,-10],[4,-8,-1],[-7,3,-6],[5,-3,-1],[6,9,-1],[-2,6,3],[-8,1,-9],[-8,-9,2],[2,-9,4],[9,1,9],[9,-3,3],[10,-5,7],[3,-2,-6],[10,-6,4],[-1,1,-1],[6,-4,-6],[6,-8,8],[7,-1,-6],[7,-7,-8],[-4,2,-1],[-8,4,7],[-10,-7,-6],[-4,-6,5],[-3,1,5],[9,-8,-7],[-7,-5,10],[2,-7,-6],[3,9,6],[3,-6,9],[6,3,2],[-3,8,1],[-2,-5,1],[-5,5,4],[-5,3,3],[-5,2,1],[1,-5,3],[-4,-9,5],[2,4,1],[-9,7,2],[-5,-9,6],[-3,5,3],[-3,3,7],[4,6,-7],[6,-7,-9],[2,-5,-1],[2,-7,1],[3,8,8],[3,-5,9],[-10,-9,7],[6,-9,2],[-4,-3,1],[1,-2,9],[-4,-1,3],[-10,-5,10],[6,3,8],[5,-2,-3],[4,7,2],[-5,10,5],[6,-6,4],[-4,3,4],[-5,-3,9],[7,9,1],[-2,8,-2],[5,6,-8],[-9,-1,-2],[-6,-5,-3],[7,10,-6],[7,-7,9],[-8,9,6],[-6,-2,9],[-3,-10,-6],[-5,-4,8],[7,-9,-2],[6,-1,-4],[2,1,-7],[7,-5,-10],[-9,5,1],[-7,-1,-5],[-3,3,-5],[10,-8,-1],[-1,-5,-3],[-1,-10,-10],[-10,-1,1],[5,6,7],[-6,-9,10],[-9,6,1],[-1,-6,9],[-3,-10,1],[10,-7,-8],[8,-3,-10],[4,-6,-5],[2,9,8],[3,-6,-4],[6,5,-10],[8,-8,-2],[-4,8,-9],[-8,1,-8],[-3,8,3],[8,-8,1],[-7,6,9],[-4,6,-6],[-6,-5,-10],[-6,3,-4],[-8,6,-5],[-3,-7,8],[9,-1,-3],[-10,-9,-8],[10,-6,7],[-1,-2,2],[5,2,6],[-8,-1,10],[5,-4,4],[5,-5,-7],[1,-1,5],[10,1,-2],[3,2,8],[-9,1,-7],[-9,-9,3],[9,5,5],[-5,2,9],[3,-3,-8],[-6,-1,-4],[1,3,8],[-5,-8,-8],[2,9,9],[7,4,6],[10,10,-8],[2,-8,7],[-8,4,5],[-10,7,-3],[1,-8,-8],[6,-6,-9],[-1,-4,-5],[4,5,1],[1,-1,3],[3,-1,-9],[-5,7,9],[8,9,8],[2,9,-9],[-1,4,-9],[3,-2,-4],[3,6,-3],[-10,-7,-10],[4,7,1],[-6,8,-4],[8,8,-2],[-3,-2,-7],[-3,5,-5],[-5,8,2],[9,4,9],[-2,-3,-7],[5,-10,-8],[-1,5,3],[10,10,-9],[9,-2,3],[9,8,-10],[-7,-6,1],[5,7,7],[-1,-7,6],[3,3,-8],[-7,-6,1],[2,10,-6],[-4,-2,-2],[-10,-5,-3],[-2,-6,-2],[-3,-1,3],[-4,1,-5],[-4,1,-9],[-2,-7,-7],[-8,5,-5],[-8,5,9],[5,-5,7],[5,-10,-7],[3,-9,8],[9,6,-2],[2,-3,-1],[-6,-8,-5],[2,8,8],[2,-7,-2],[-8,3,-6],[7,6,6],[4,6,-5],[-7,-10,-1],[-2,-2,6],[6,-4,2],[-5,-9,-10],[-2,6,-6],[-8,-8,-10],[9,-3,-1],[-4,7,-5],[9,7,-2],[-10,1,10],[-7,-10,9],[5,2,-2],[7,9,5],[2,-3,-1],[-5,-9,8],[-4,10,-9],[6,10,10],[-10,-7,2],[4,-5,2],[-1,-6,5],[-2,9,5],[-2,10,8],[5,10,8],[3,7,-8],[-3,-7,-1],[-2,-3,6],[7,-8,1],[10,7,-7],[3,6,7],[10,-7,6],[-1,-1,-9],[2,-7,4],[8,4,-5],[2,-3,9],[-4,-10,8],[-9,6,3],[8,-1,8],[5,-1,-3],[1,6,4],[4,4,9],[9,1,9],[-1,9,-4],[-9,-5,7],[9,-1,-2],[10,-5,9],[6,-5,5],[1,2,2],[-7,4,-3],[9,-1,-9],[-9,10,-5],[9,8,6],[-7,3,-9],[7,6,-9],[4,-3,10],[7,-2,3],[-5,7,-6],[1,2,-7],[7,-6,-7],[1,2,-8],[7,2,-4],[7,7,7],[8,9,1],[2,1,-10],[2,-2,7],[-9,-9,4],[-7,-5,4],[10,-9,2],[6,-6,2],[7,-9,-2],[-1,1,-3],[-3,5,-5],[-9,10,5],[-8,6,9],[-1,-3,5],[9,6,6],[-6,-10,-9],[9,-3,8],[1,-10,-9],[4,-5,-10],[-4,-8,10],[2,5,6],[-8,-3,-4],[-10,4,-1],[-8,3,-3],[6,4,10],[8,-2,5],[-8,-3,-5],[-2,1,4],[9,6,-7],[-4,8,5],[-4,1,7],[-3,8,-5],[-2,-7,-3]], dtype = "int8")#candidate|3129|(275, 3)|const|int8
call_3128 = relay.TupleGetItem(func_1422_call(relay.reshape(const_3129.astype('int8'), [5, 11, 15]), relay.reshape(const_3129.astype('int8'), [5, 11, 15]), ), 0)
call_3130 = relay.TupleGetItem(func_1425_call(relay.reshape(const_3129.astype('int8'), [5, 11, 15]), relay.reshape(const_3129.astype('int8'), [5, 11, 15]), ), 0)
uop_3132 = relay.acosh(uop_3125.astype('float32')) # shape=(5, 2, 6)
output = relay.Tuple([bop_3058,call_3061,var_3062,call_3087,var_3088,bop_3093,call_3099,const_3100,call_3115,const_3116,var_3117,call_3120,const_3121,call_3128,const_3129,uop_3132,])
output2 = relay.Tuple([bop_3058,call_3063,var_3062,call_3089,var_3088,bop_3093,call_3101,const_3100,call_3118,const_3116,var_3117,call_3122,const_3121,call_3130,const_3129,uop_3132,])
func_3136 = relay.Function([var_3039,var_3040,var_3062,var_3088,var_3092,var_3117,], output)
mod['func_3136'] = func_3136
mod = relay.transform.InferType()(mod)
mutated_mod['func_3136'] = func_3136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mutated_mod.get_global_var('func_3136')
var_3138 = relay.var("var_3138", dtype = "uint32", shape = ())#candidate|3138|()|var|uint32
var_3139 = relay.var("var_3139", dtype = "uint32", shape = (5, 2, 6))#candidate|3139|(5, 2, 6)|var|uint32
var_3140 = relay.var("var_3140", dtype = "float32", shape = (468, 1))#candidate|3140|(468, 1)|var|float32
var_3141 = relay.var("var_3141", dtype = "uint8", shape = (24,))#candidate|3141|(24,)|var|uint8
var_3142 = relay.var("var_3142", dtype = "bool", shape = (5, 2, 6))#candidate|3142|(5, 2, 6)|var|bool
var_3143 = relay.var("var_3143", dtype = "int8", shape = (130,))#candidate|3143|(130,)|var|int8
call_3137 = func_3136_call(var_3138,var_3139,var_3140,var_3141,var_3142,var_3143,)
output = call_3137
func_3144 = relay.Function([var_3138,var_3139,var_3140,var_3141,var_3142,var_3143,], output)
mutated_mod['func_3144'] = func_3144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3459 = relay.var("var_3459", dtype = "uint16", shape = (9, 4, 7))#candidate|3459|(9, 4, 7)|var|uint16
const_3460 = relay.const([[[8,10,9,-9,-6,-4,6],[-6,-5,9,9,-9,-9,-6],[-9,-7,-10,-6,-5,-2,5],[-6,9,8,-8,4,-9,6]],[[3,10,-8,10,4,-9,-3],[1,-8,-1,-3,-10,5,10],[8,3,8,5,10,6,-9],[6,7,-10,-6,-1,-1,10]],[[7,-2,-6,8,8,-9,-7],[4,-9,10,8,10,-2,-3],[-4,-8,2,9,5,-3,-1],[3,7,-5,-10,2,-6,3]],[[7,-2,-10,-3,-2,-4,10],[-10,-2,-10,-2,7,2,9],[-4,-10,10,-2,-4,-5,-9],[-1,-6,9,-6,7,6,10]],[[-3,-7,-3,10,9,-8,-10],[9,-1,8,5,-5,8,9],[-6,-1,-7,-8,5,8,1],[-9,8,-8,-10,6,6,6]],[[-3,-8,-3,-8,9,-3,-3],[10,-6,6,-9,-10,-3,-6],[-8,-4,7,-10,3,1,3],[8,-4,3,-9,3,-3,9]],[[-1,-4,-9,-2,10,-9,1],[7,-3,-3,3,-8,-2,2],[-3,-3,8,-3,-8,7,8],[-3,5,2,-4,8,10,-2]],[[4,10,-5,-2,-4,3,-10],[2,-6,7,-6,1,6,7],[-5,8,3,7,-5,-4,-3],[-1,-7,1,7,-7,10,2]],[[9,-2,10,-4,-2,-2,9],[5,3,5,8,-5,5,-9],[4,-1,-1,-7,-4,4,1],[2,2,-2,-3,6,2,-6]]], dtype = "uint16")#candidate|3460|(9, 4, 7)|const|uint16
bop_3461 = relay.bitwise_or(var_3459.astype('uint16'), relay.reshape(const_3460.astype('uint16'), relay.shape_of(var_3459))) # shape=(9, 4, 7)
bop_3466 = relay.minimum(bop_3461.astype('uint16'), relay.reshape(var_3459.astype('uint16'), relay.shape_of(bop_3461))) # shape=(9, 4, 7)
bop_3478 = relay.floor_divide(bop_3466.astype('float32'), relay.reshape(bop_3461.astype('float32'), relay.shape_of(bop_3466))) # shape=(9, 4, 7)
uop_3484 = relay.cosh(bop_3466.astype('float32')) # shape=(9, 4, 7)
uop_3488 = relay.rsqrt(uop_3484.astype('float32')) # shape=(9, 4, 7)
bop_3492 = relay.left_shift(uop_3484.astype('int32'), relay.reshape(bop_3478.astype('int32'), relay.shape_of(uop_3484))) # shape=(9, 4, 7)
bop_3495 = relay.greater_equal(uop_3484.astype('bool'), relay.reshape(bop_3461.astype('bool'), relay.shape_of(uop_3484))) # shape=(9, 4, 7)
output = relay.Tuple([uop_3488,bop_3492,bop_3495,])
output2 = relay.Tuple([uop_3488,bop_3492,bop_3495,])
func_3507 = relay.Function([var_3459,], output)
mod['func_3507'] = func_3507
mod = relay.transform.InferType()(mod)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3508 = relay.var("var_3508", dtype = "uint16", shape = (9, 4, 7))#candidate|3508|(9, 4, 7)|var|uint16
func_3507_call = mutated_mod.get_global_var('func_3507')
call_3509 = func_3507_call(var_3508)
output = call_3509
func_3510 = relay.Function([var_3508], output)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3555 = relay.var("var_3555", dtype = "int8", shape = ())#candidate|3555|()|var|int8
var_3556 = relay.var("var_3556", dtype = "int8", shape = (3, 10, 3))#candidate|3556|(3, 10, 3)|var|int8
bop_3557 = relay.minimum(var_3555.astype('int8'), var_3556.astype('int8')) # shape=(3, 10, 3)
bop_3565 = relay.divide(var_3556.astype('float32'), var_3555.astype('float32')) # shape=(3, 10, 3)
uop_3570 = relay.acosh(bop_3557.astype('float32')) # shape=(3, 10, 3)
func_1591_call = mod.get_global_var('func_1591')
func_1594_call = mutated_mod.get_global_var('func_1594')
var_3577 = relay.var("var_3577", dtype = "float32", shape = (2100,))#candidate|3577|(2100,)|var|float32
call_3576 = relay.TupleGetItem(func_1591_call(relay.reshape(var_3577.astype('float32'), [15, 14, 10])), 0)
call_3578 = relay.TupleGetItem(func_1594_call(relay.reshape(var_3577.astype('float32'), [15, 14, 10])), 0)
func_2452_call = mod.get_global_var('func_2452')
func_2455_call = mutated_mod.get_global_var('func_2455')
const_3589 = relay.const([5.529695,-1.353232,-2.937724,-4.203145,-0.314706,-2.997490,3.354886,2.212556,-6.123691,2.388355,1.467246,-8.023729,7.853099,-3.144150,5.174305,-9.023278,3.559275,-4.205859,-5.702310,6.721998,-2.830830,8.427797,-6.285248,-8.670477,2.901866,5.011660,-2.969768,8.571010,-9.144702,-5.441703,7.712115,-8.184605,0.471765,0.687026,8.949903,-2.768352,-9.062734,4.300922,-8.318675,3.031736,-4.438349,-4.416781,4.916164,-3.627503,9.376616,6.353989,-6.531806,-3.569623,-0.557526,1.138620,-5.747573,8.659744,-1.290406,8.217678,-9.969098,-7.370766,-8.382659,-5.211777,-1.048654,1.263083,2.183177,3.671508,9.071646,-9.248901,5.738872,8.461973,8.328283,-3.120424,-6.962831,4.337021,-6.666778,2.952682,-2.064980,-5.209478,-5.617620,1.441132,-2.533679,7.258371,-4.567819,3.187871,-5.174160,9.639281,-7.691044,2.857606,2.352581,7.790475,-8.061598,-4.789887,-4.531695,-1.597105,7.450331,0.409764,-4.697201,5.946366,-4.962714,-3.082326,5.909186,-8.843592,1.998622,-6.146922,-6.949827,-8.762395,-1.491928,-0.965644,-7.895739,-5.196399,-9.423600,9.146277,-2.589718,2.268844,-9.967960,2.147258,8.184070,1.062054,7.749824,0.588816,4.535292,1.164855,4.958212,9.820167,-5.360350,0.877972,9.316036,7.046231,9.558503,-7.175242,-7.251632,9.373594,7.776098,-0.817147,9.239815,5.268573,5.441530,-7.018455,-3.769631,-2.802012,4.753811,2.764422,4.389190,9.160840,1.191721,-7.960262,7.564567,5.243219,-3.977015,-4.471708,9.398922,-4.817068,-3.912453,3.002389,-2.987400,0.211693,7.362703,-8.641279,5.606861,2.728667,0.358406,-0.448663,-1.067780,-0.687892,7.714073,-0.432640,-4.883860,4.920483,4.007899,0.282899,1.609085,-5.073205,3.971944,5.253631,-5.502620,0.099561,-6.400676,-8.179617,4.852470,7.908909,3.286682,0.641947,-7.085677,-0.410475,-8.279091,-3.724379,-2.184619,-9.680482,5.384925,-3.363036,6.999306,-0.261174,3.895247,-0.762505,1.814638,4.329308,3.387186,-2.975922,-7.212293,1.116351,-4.673711,-1.200634,-1.922133,-1.324458,-3.087171,6.700689,-5.226992,9.028148,8.242647,-0.247525,3.814274,3.991624,-4.078524,-0.579618,5.933211,8.170413,3.738181,-2.948367,1.274472,-2.234710,-3.040441,4.515339,6.214758,-7.238685,-8.364423,8.170557,9.753061,-8.747933,-8.894139,-8.296032,-0.369311,3.545506,0.298241,-1.400533,-5.580372,-4.885219,-5.716227,0.743021,-6.577213,-9.420996,-4.259121,-8.860205,7.300744,7.365356,9.163205,5.358946,-8.682982,-7.483624,-6.120902,-1.311561,6.436377,0.764964,-7.066210,7.848176,9.827011,2.661842,0.624959,7.300992,-1.276838,-0.193292,-9.306066,9.226554,-1.010218,-4.378063,-7.537468,6.704048,8.297399,-1.007258,4.402502,-6.868820,6.864780,-1.218198,8.324645,5.248214,-2.839234,7.708949,1.164780,7.763007,-6.686772,7.060640,-2.332399,-2.869454,9.344432,7.774810,-3.602989,6.768456,8.339330,-9.327147,1.721469,-2.018705,0.302343,-3.645668,6.910605,-8.053729,3.605910,-5.248416,-8.483970,1.083316,1.309480,-4.663441,-6.036236,-8.108830,3.528624,-2.064168,-4.547244,2.781525,7.459905,8.011482,0.247028,-6.815569,8.650726,9.776808,-7.647232,1.716785,1.064552,4.969549,-3.188809,-6.739270,5.470678,-0.337197,8.791777,1.429497,-4.978705,6.834348,0.341355,-3.511401,1.147196,-2.767852,5.193272,4.371343,-1.251523,-8.391981,-4.322039,-8.975750,-3.381212,-8.945350,-5.461410,-3.252376,-3.920673,0.547328,5.457247,-0.962716,9.163356,-7.103846,-9.545772,7.254847,9.797200,1.784453,-3.582084,0.713947,0.782604,1.723389,8.206862,-6.762468,6.407359,9.673881,8.468149,7.345777,9.983368,9.682297,-7.655530,-1.855582,2.166706,9.710528,3.823741,-2.355943,-3.252897,9.799590,6.577145,1.548523,6.117768,8.526267,-0.037290,4.037196,3.850198,-5.612333,1.739507,7.240679,-7.094449,5.483803,2.669953,-9.580811,8.879712,5.486631,2.553940,0.216276,-8.420666,-5.152377,-6.014569,-6.209400,-6.680387,7.305614,0.573504,-0.417632,4.709824,9.901148,3.215149,3.213323,4.576962,3.279102,8.105169,1.883751,-2.414193,1.823004,8.442889,-3.096410,-2.917729,-3.369790,-9.393444,2.275153,-9.616585,-2.414114,3.667269,-4.067084,-8.107773,5.402915,-2.540419,0.798213,-4.606471,4.463960,-9.232523,-6.922545,2.531673,-7.090054,3.987820,-6.010684,9.208252,-2.083976,-9.941584,3.653000,-5.303038,-0.709410,-5.194589,1.214092,-6.195290,-2.887890,-6.342699,9.666934,2.468090,6.058599,-9.782283,-3.700380,-0.523051,-3.910175,5.703227,-8.053454,-8.624239,3.303725,-1.796036,-3.920003,2.542260,-0.947247,1.141863,-1.219113,7.386924,8.102154,4.092751,5.588514,-7.082621,-6.268409,-2.186091,-5.935411,6.755366,5.640856,-7.120902,1.067244,-1.234707,-5.625586,7.628604,5.454639,-2.838474,-5.271927], dtype = "float32")#candidate|3589|(468,)|const|float32
call_3588 = func_2452_call(relay.reshape(const_3589.astype('float32'), [6, 13, 6]))
call_3590 = func_2452_call(relay.reshape(const_3589.astype('float32'), [6, 13, 6]))
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
var_3595 = relay.var("var_3595", dtype = "int8", shape = (825,))#candidate|3595|(825,)|var|int8
call_3594 = relay.TupleGetItem(func_1422_call(relay.reshape(var_3595.astype('int8'), [5, 11, 15]), relay.reshape(var_3595.astype('int8'), [5, 11, 15]), ), 1)
call_3596 = relay.TupleGetItem(func_1425_call(relay.reshape(var_3595.astype('int8'), [5, 11, 15]), relay.reshape(var_3595.astype('int8'), [5, 11, 15]), ), 1)
func_2540_call = mod.get_global_var('func_2540')
func_2543_call = mutated_mod.get_global_var('func_2543')
var_3606 = relay.var("var_3606", dtype = "float64", shape = (39, 3))#candidate|3606|(39, 3)|var|float64
var_3607 = relay.var("var_3607", dtype = "int8", shape = (130,))#candidate|3607|(130,)|var|int8
call_3605 = relay.TupleGetItem(func_2540_call(relay.reshape(var_3606.astype('float64'), [1, 9, 13]), relay.reshape(var_3607.astype('int8'), [13, 10]), ), 4)
call_3608 = relay.TupleGetItem(func_2543_call(relay.reshape(var_3606.astype('float64'), [1, 9, 13]), relay.reshape(var_3607.astype('int8'), [13, 10]), ), 4)
output = relay.Tuple([bop_3565,uop_3570,call_3576,var_3577,call_3588,const_3589,call_3594,var_3595,call_3605,var_3606,var_3607,])
output2 = relay.Tuple([bop_3565,uop_3570,call_3578,var_3577,call_3590,const_3589,call_3596,var_3595,call_3608,var_3606,var_3607,])
func_3622 = relay.Function([var_3555,var_3556,var_3577,var_3595,var_3606,var_3607,], output)
mod['func_3622'] = func_3622
mod = relay.transform.InferType()(mod)
var_3623 = relay.var("var_3623", dtype = "int8", shape = ())#candidate|3623|()|var|int8
var_3624 = relay.var("var_3624", dtype = "int8", shape = (3, 10, 3))#candidate|3624|(3, 10, 3)|var|int8
var_3625 = relay.var("var_3625", dtype = "float32", shape = (2100,))#candidate|3625|(2100,)|var|float32
var_3626 = relay.var("var_3626", dtype = "int8", shape = (825,))#candidate|3626|(825,)|var|int8
var_3627 = relay.var("var_3627", dtype = "float64", shape = (39, 3))#candidate|3627|(39, 3)|var|float64
var_3628 = relay.var("var_3628", dtype = "int8", shape = (130,))#candidate|3628|(130,)|var|int8
output = func_3622(var_3623,var_3624,var_3625,var_3626,var_3627,var_3628,)
func_3629 = relay.Function([var_3623,var_3624,var_3625,var_3626,var_3627,var_3628,], output)
mutated_mod['func_3629'] = func_3629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3643 = relay.var("var_3643", dtype = "float64", shape = (11, 16, 7))#candidate|3643|(11, 16, 7)|var|float64
uop_3644 = relay.asinh(var_3643.astype('float64')) # shape=(11, 16, 7)
bop_3646 = relay.power(var_3643.astype('float64'), relay.reshape(uop_3644.astype('float64'), relay.shape_of(var_3643))) # shape=(11, 16, 7)
bop_3649 = relay.multiply(var_3643.astype('uint16'), relay.reshape(bop_3646.astype('uint16'), relay.shape_of(var_3643))) # shape=(11, 16, 7)
func_97_call = mod.get_global_var('func_97')
func_99_call = mutated_mod.get_global_var('func_99')
var_3654 = relay.var("var_3654", dtype = "float32", shape = (12,))#candidate|3654|(12,)|var|float32
call_3653 = relay.TupleGetItem(func_97_call(relay.reshape(var_3654.astype('float32'), [4, 1, 3])), 0)
call_3655 = relay.TupleGetItem(func_99_call(relay.reshape(var_3654.astype('float32'), [4, 1, 3])), 0)
output = relay.Tuple([bop_3649,call_3653,var_3654,])
output2 = relay.Tuple([bop_3649,call_3655,var_3654,])
func_3670 = relay.Function([var_3643,var_3654,], output)
mod['func_3670'] = func_3670
mod = relay.transform.InferType()(mod)
var_3671 = relay.var("var_3671", dtype = "float64", shape = (11, 16, 7))#candidate|3671|(11, 16, 7)|var|float64
var_3672 = relay.var("var_3672", dtype = "float32", shape = (12,))#candidate|3672|(12,)|var|float32
output = func_3670(var_3671,var_3672,)
func_3673 = relay.Function([var_3671,var_3672,], output)
mutated_mod['func_3673'] = func_3673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4155 = relay.var("var_4155", dtype = "int32", shape = (4, 3, 11))#candidate|4155|(4, 3, 11)|var|int32
var_4156 = relay.var("var_4156", dtype = "int32", shape = (4, 3, 11))#candidate|4156|(4, 3, 11)|var|int32
bop_4157 = relay.multiply(var_4155.astype('int32'), relay.reshape(var_4156.astype('int32'), relay.shape_of(var_4155))) # shape=(4, 3, 11)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
var_4169 = relay.var("var_4169", dtype = "int8", shape = (275, 3))#candidate|4169|(275, 3)|var|int8
call_4168 = relay.TupleGetItem(func_1422_call(relay.reshape(var_4169.astype('int8'), [5, 11, 15]), relay.reshape(var_4169.astype('int8'), [5, 11, 15]), ), 1)
call_4170 = relay.TupleGetItem(func_1425_call(relay.reshape(var_4169.astype('int8'), [5, 11, 15]), relay.reshape(var_4169.astype('int8'), [5, 11, 15]), ), 1)
output = relay.Tuple([bop_4157,call_4168,var_4169,])
output2 = relay.Tuple([bop_4157,call_4170,var_4169,])
func_4188 = relay.Function([var_4155,var_4156,var_4169,], output)
mod['func_4188'] = func_4188
mod = relay.transform.InferType()(mod)
var_4189 = relay.var("var_4189", dtype = "int32", shape = (4, 3, 11))#candidate|4189|(4, 3, 11)|var|int32
var_4190 = relay.var("var_4190", dtype = "int32", shape = (4, 3, 11))#candidate|4190|(4, 3, 11)|var|int32
var_4191 = relay.var("var_4191", dtype = "int8", shape = (275, 3))#candidate|4191|(275, 3)|var|int8
output = func_4188(var_4189,var_4190,var_4191,)
func_4192 = relay.Function([var_4189,var_4190,var_4191,], output)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4704 = relay.var("var_4704", dtype = "float64", shape = (3, 12, 11))#candidate|4704|(3, 12, 11)|var|float64
uop_4705 = relay.asinh(var_4704.astype('float64')) # shape=(3, 12, 11)
output = relay.Tuple([uop_4705,])
output2 = relay.Tuple([uop_4705,])
func_4708 = relay.Function([var_4704,], output)
mod['func_4708'] = func_4708
mod = relay.transform.InferType()(mod)
mutated_mod['func_4708'] = func_4708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4709 = relay.var("var_4709", dtype = "float64", shape = (3, 12, 11))#candidate|4709|(3, 12, 11)|var|float64
func_4708_call = mutated_mod.get_global_var('func_4708')
call_4710 = func_4708_call(var_4709)
output = call_4710
func_4711 = relay.Function([var_4709], output)
mutated_mod['func_4711'] = func_4711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4814 = relay.var("var_4814", dtype = "float32", shape = (10, 2, 13))#candidate|4814|(10, 2, 13)|var|float32
uop_4815 = relay.tan(var_4814.astype('float32')) # shape=(10, 2, 13)
output = uop_4815
output2 = uop_4815
func_4817 = relay.Function([var_4814,], output)
mod['func_4817'] = func_4817
mod = relay.transform.InferType()(mod)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4818 = relay.var("var_4818", dtype = "float32", shape = (10, 2, 13))#candidate|4818|(10, 2, 13)|var|float32
func_4817_call = mutated_mod.get_global_var('func_4817')
call_4819 = func_4817_call(var_4818)
output = call_4819
func_4820 = relay.Function([var_4818], output)
mutated_mod['func_4820'] = func_4820
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5043 = relay.const([[[-2.326352,-3.663603,-0.972311,8.705230,6.277139],[-7.443980,1.697452,8.430441,4.418152,9.952260],[4.614495,-3.061087,5.001602,-9.201314,9.929458],[2.377134,3.016460,3.493993,1.633629,-0.190390],[5.248873,-7.477168,-3.690891,-3.649831,-4.540606],[-7.642556,0.903404,4.375962,-4.116875,7.167021]],[[3.561186,5.764795,4.109039,5.159444,-2.304684],[8.210460,-2.428275,-9.676169,8.047312,-5.979740],[-4.500143,9.955016,1.696951,1.360688,2.217001],[7.474191,0.250843,6.822342,5.004752,2.507783],[-9.597199,3.429038,-0.945191,0.816232,-3.479055],[-2.412898,6.633288,2.146120,-4.395486,-0.845713]],[[0.235288,-5.205674,-1.380317,8.541407,-1.673722],[6.990118,-8.305876,8.803336,4.170023,-0.718244],[-9.325531,-9.900675,8.518947,2.563806,-0.330480],[5.685062,0.281766,-8.261254,0.798238,-1.707897],[-7.225426,4.344839,-3.199334,-8.394651,1.876512],[-1.449584,8.768844,8.138091,-8.458029,-6.476067]],[[-4.500582,-2.259329,7.301038,-6.785772,9.104643],[8.944730,-9.470017,-3.159679,2.098949,-2.270133],[1.490999,8.864297,-3.778337,7.308559,9.814619],[7.652831,4.372198,7.857122,4.321045,-2.180244],[-7.813353,-8.120489,-0.228600,-6.403085,6.651614],[-2.666306,8.243448,7.408576,7.744798,-3.149083]],[[-2.401288,-9.209703,3.790951,3.999358,9.630071],[9.178933,2.137751,5.768664,-3.320004,3.993330],[-2.614954,6.412889,6.146415,8.047653,8.782906],[0.793722,-4.223523,-4.861410,-1.252115,-4.980346],[3.449986,9.207458,4.812624,-7.969424,-2.807813],[-2.641416,3.677374,-2.297795,-9.585813,3.735253]],[[0.150607,-7.115268,5.177518,-3.505449,-4.109775],[4.344613,-2.988420,-0.740018,5.846872,-7.548969],[-0.526844,1.542399,-5.700885,4.444006,3.797974],[-6.575484,0.568090,-5.289919,9.027550,-5.050319],[2.032539,2.833270,3.344369,-2.752226,-9.302225],[-0.794128,9.286740,0.711310,-8.163905,-2.571170]],[[6.635686,-0.790237,1.281576,3.409904,9.934388],[-1.407850,-7.855643,3.772640,8.150905,-8.697442],[-8.771563,2.025781,-2.072727,2.986044,0.751394],[3.065132,-6.265692,9.369978,-4.245515,9.037973],[3.906791,7.004995,4.857626,1.395021,-4.769447],[9.452427,-6.071361,-7.646020,8.944759,9.700060]],[[5.807068,2.612902,2.036977,-6.262647,-9.750430],[1.165084,4.422013,7.990844,6.358985,-4.120596],[-2.534447,-1.018102,-5.504500,-8.222728,-7.583917],[-1.094208,-1.624193,-3.389792,-1.061238,6.385237],[-6.931278,-5.136510,0.943500,-2.468255,-8.514639],[-9.662052,-2.599056,-6.093651,9.254218,-5.559225]],[[-5.384060,-8.680488,7.890301,-0.011365,9.599042],[-5.502182,2.042438,0.974725,-0.620387,9.309085],[-3.852223,5.290612,1.345806,6.131388,-2.419993],[-5.215218,-9.765831,6.545645,9.532473,-6.391399],[-5.800742,-3.301884,4.549004,-9.295279,-6.269067],[7.468578,-2.485458,1.630585,-1.410956,-2.071418]]], dtype = "float64")#candidate|5043|(9, 6, 5)|const|float64
uop_5044 = relay.atan(const_5043.astype('float64')) # shape=(9, 6, 5)
output = uop_5044
output2 = uop_5044
func_5049 = relay.Function([], output)
mod['func_5049'] = func_5049
mod = relay.transform.InferType()(mod)
mutated_mod['func_5049'] = func_5049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mutated_mod.get_global_var('func_5049')
call_5050 = func_5049_call()
output = call_5050
func_5051 = relay.Function([], output)
mutated_mod['func_5051'] = func_5051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mod.get_global_var('func_5049')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5103 = func_5049_call()
call_5104 = func_5049_call()
const_5115 = relay.const([[[-8.152639,-2.985044,4.005683,7.352138,-7.404793],[-2.954685,8.431993,8.686156,2.231612,-8.533537],[-2.195931,-7.426189,-3.333809,-1.603229,-3.292442],[0.198941,6.648246,4.159195,5.123448,-7.035129],[0.037880,-2.222225,-3.868489,0.328376,4.884695],[2.863411,8.018267,8.811529,-1.715117,5.331198]],[[7.165173,-9.149277,-4.917110,7.348114,-5.679050],[9.156548,1.626657,-6.999068,8.343910,3.674764],[3.836136,5.643494,-9.236977,7.329298,-4.509602],[8.141325,9.524996,-6.528654,-9.319063,1.324296],[2.799888,-0.867259,-8.632847,1.430286,-1.992756],[0.675004,3.415925,6.618427,1.353343,1.645252]],[[5.309801,3.485984,-2.557908,-9.003513,3.231053],[9.673660,-1.679803,0.156493,5.419148,-2.296177],[7.228489,2.611499,-4.963884,-6.000798,4.946588],[-3.173739,8.355463,-5.226639,1.839840,-1.585908],[-8.949486,-5.212832,6.117397,-5.888785,-5.220434],[-6.345516,-0.146677,-9.241043,-1.753045,-1.421472]],[[-3.216338,-1.244742,-3.691324,7.146921,5.704689],[-8.243387,-4.101693,-6.142160,3.256309,-5.560027],[-9.198116,0.042829,-5.483599,3.480465,0.434276],[2.625617,-5.415953,7.292244,-4.669193,2.191828],[-1.811883,3.200017,-5.892448,-2.096454,-1.983487],[3.895958,6.109834,9.828800,-1.592720,8.812483]],[[-2.007771,-0.250651,-8.321022,6.564884,-1.424175],[3.850689,6.050533,1.938156,-1.707538,3.975122],[-8.818309,3.441832,2.792468,-0.553322,-1.478381],[4.502285,-6.111059,7.637138,7.990101,8.101180],[5.234663,-9.682463,7.966083,-1.215918,0.820053],[4.691110,-9.637629,-9.514458,8.789877,-7.827976]],[[-6.238262,5.264508,1.008725,7.875556,3.840773],[-2.183572,6.014669,6.703721,8.614070,7.122700],[6.745619,-9.346572,8.162360,-7.963813,4.336924],[-1.493433,-1.896566,-2.674264,4.896965,3.666267],[-3.417185,8.473873,-3.350130,9.385845,8.591044],[7.900142,9.825388,-5.306548,-7.210617,9.004578]],[[4.316853,3.487025,6.584052,5.213214,8.803069],[-2.177933,9.754800,-2.967447,-3.120446,0.362430],[-8.157884,6.741061,-1.417820,-3.534094,-5.791955],[0.488386,-0.503244,6.358745,-5.252055,-6.586338],[5.342869,-5.026687,-2.636806,6.959263,-6.900377],[-5.518901,6.884653,-4.883218,-3.472799,-6.106869]],[[-7.541145,-7.136202,-9.474183,2.229344,1.078104],[-7.221443,-0.103751,4.088809,9.703050,7.652787],[1.299653,-8.430562,0.146696,-5.711166,-1.984796],[-3.976114,-7.333035,2.353753,1.818190,-0.418507],[-2.455445,4.163888,9.035430,0.222313,5.646758],[-2.847049,7.149518,4.139527,6.996513,-3.804299]],[[-0.014480,-2.924038,7.542023,2.961291,-7.206131],[5.908427,8.634187,6.799080,2.680056,5.764809],[-6.925967,2.487930,7.482137,-7.708386,6.152700],[-3.499827,-4.559646,-5.828335,-2.975575,-4.827112],[2.647755,3.946290,-0.598828,5.808891,4.406318],[5.091499,-9.580692,3.510805,1.517329,-4.565628]]], dtype = "float64")#candidate|5115|(9, 6, 5)|const|float64
bop_5116 = relay.logical_or(call_5103.astype('bool'), relay.reshape(const_5115.astype('bool'), relay.shape_of(call_5103))) # shape=(9, 6, 5)
bop_5119 = relay.logical_or(call_5104.astype('bool'), relay.reshape(const_5115.astype('bool'), relay.shape_of(call_5104))) # shape=(9, 6, 5)
output = relay.Tuple([bop_5116,])
output2 = relay.Tuple([bop_5119,])
func_5120 = relay.Function([], output)
mod['func_5120'] = func_5120
mod = relay.transform.InferType()(mod)
mutated_mod['func_5120'] = func_5120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5120_call = mutated_mod.get_global_var('func_5120')
call_5121 = func_5120_call()
output = call_5121
func_5122 = relay.Function([], output)
mutated_mod['func_5122'] = func_5122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5120_call = mod.get_global_var('func_5120')
func_5122_call = mutated_mod.get_global_var('func_5122')
call_5128 = relay.TupleGetItem(func_5120_call(), 0)
call_5129 = relay.TupleGetItem(func_5122_call(), 0)
output = call_5128
output2 = call_5129
func_5169 = relay.Function([], output)
mod['func_5169'] = func_5169
mod = relay.transform.InferType()(mod)
output = func_5169()
func_5170 = relay.Function([], output)
mutated_mod['func_5170'] = func_5170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5120_call = mod.get_global_var('func_5120')
func_5122_call = mutated_mod.get_global_var('func_5122')
call_5210 = relay.TupleGetItem(func_5120_call(), 0)
call_5211 = relay.TupleGetItem(func_5122_call(), 0)
func_3507_call = mod.get_global_var('func_3507')
func_3510_call = mutated_mod.get_global_var('func_3510')
var_5218 = relay.var("var_5218", dtype = "uint16", shape = (252,))#candidate|5218|(252,)|var|uint16
call_5217 = relay.TupleGetItem(func_3507_call(relay.reshape(var_5218.astype('uint16'), [9, 4, 7])), 0)
call_5219 = relay.TupleGetItem(func_3510_call(relay.reshape(var_5218.astype('uint16'), [9, 4, 7])), 0)
output = relay.Tuple([call_5210,call_5217,var_5218,])
output2 = relay.Tuple([call_5211,call_5219,var_5218,])
func_5220 = relay.Function([var_5218,], output)
mod['func_5220'] = func_5220
mod = relay.transform.InferType()(mod)
mutated_mod['func_5220'] = func_5220
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5221 = relay.var("var_5221", dtype = "uint16", shape = (252,))#candidate|5221|(252,)|var|uint16
func_5220_call = mutated_mod.get_global_var('func_5220')
call_5222 = func_5220_call(var_5221)
output = call_5222
func_5223 = relay.Function([var_5221], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mod.get_global_var('func_5049')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5232 = func_5049_call()
call_5233 = func_5049_call()
output = relay.Tuple([call_5232,])
output2 = relay.Tuple([call_5233,])
func_5239 = relay.Function([], output)
mod['func_5239'] = func_5239
mod = relay.transform.InferType()(mod)
output = func_5239()
func_5240 = relay.Function([], output)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5243 = relay.var("var_5243", dtype = "float64", shape = (9, 15, 11))#candidate|5243|(9, 15, 11)|var|float64
uop_5244 = relay.cos(var_5243.astype('float64')) # shape=(9, 15, 11)
func_3136_call = mod.get_global_var('func_3136')
func_3144_call = mutated_mod.get_global_var('func_3144')
var_5262 = relay.var("var_5262", dtype = "uint32", shape = ())#candidate|5262|()|var|uint32
var_5263 = relay.var("var_5263", dtype = "uint32", shape = (30, 2))#candidate|5263|(30, 2)|var|uint32
var_5264 = relay.var("var_5264", dtype = "float32", shape = (468,))#candidate|5264|(468,)|var|float32
var_5265 = relay.var("var_5265", dtype = "uint8", shape = (6, 4))#candidate|5265|(6, 4)|var|uint8
const_5266 = relay.const([[8],[-7],[-2],[6],[-8],[-1],[-4],[-5],[-4],[8],[5],[-5],[-1],[3],[9],[-1],[7],[-3],[-2],[-6],[-4],[9],[-1],[9],[-5],[-5],[10],[-7],[3],[5],[9],[6],[3],[6],[-8],[8],[-9],[-2],[-3],[-8],[-9],[-1],[5],[4],[-9],[-7],[-4],[-6],[-4],[-2],[5],[6],[9],[6],[6],[-10],[-9],[6],[8],[1],[6],[6],[4],[-6],[-2],[-1],[-2],[-3],[-3],[-3],[-3],[8],[4],[7],[1],[-9],[-5],[-8],[7],[-7],[6],[-8],[-7],[9],[9],[2],[5],[-5],[1],[2],[9],[2],[8],[-5],[6],[4],[2],[-2],[2],[-10],[3],[5],[10],[-8],[-4],[-7],[-4],[7],[9],[-7],[-3],[-10],[-4],[3],[-4],[-10],[-5],[-7],[-7],[-9],[9],[-1],[5],[7],[9],[-10],[8],[9],[-4],[9]], dtype = "int8")#candidate|5266|(130, 1)|const|int8
call_5261 = relay.TupleGetItem(func_3136_call(relay.reshape(var_5262.astype('uint32'), []), relay.reshape(var_5263.astype('uint32'), [5, 2, 6]), relay.reshape(var_5264.astype('float32'), [468, 1]), relay.reshape(var_5265.astype('uint8'), [24,]), relay.reshape(var_5263.astype('bool'), [5, 2, 6]), relay.reshape(const_5266.astype('int8'), [130,]), ), 1)
call_5267 = relay.TupleGetItem(func_3144_call(relay.reshape(var_5262.astype('uint32'), []), relay.reshape(var_5263.astype('uint32'), [5, 2, 6]), relay.reshape(var_5264.astype('float32'), [468, 1]), relay.reshape(var_5265.astype('uint8'), [24,]), relay.reshape(var_5263.astype('bool'), [5, 2, 6]), relay.reshape(const_5266.astype('int8'), [130,]), ), 1)
bop_5273 = relay.not_equal(call_5261.astype('bool'), var_5262.astype('bool')) # shape=(6, 13, 6)
bop_5276 = relay.not_equal(call_5267.astype('bool'), var_5262.astype('bool')) # shape=(6, 13, 6)
output = relay.Tuple([uop_5244,var_5263,var_5264,var_5265,const_5266,bop_5273,])
output2 = relay.Tuple([uop_5244,var_5263,var_5264,var_5265,const_5266,bop_5276,])
func_5298 = relay.Function([var_5243,var_5262,var_5263,var_5264,var_5265,], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
var_5299 = relay.var("var_5299", dtype = "float64", shape = (9, 15, 11))#candidate|5299|(9, 15, 11)|var|float64
var_5300 = relay.var("var_5300", dtype = "uint32", shape = ())#candidate|5300|()|var|uint32
var_5301 = relay.var("var_5301", dtype = "uint32", shape = (30, 2))#candidate|5301|(30, 2)|var|uint32
var_5302 = relay.var("var_5302", dtype = "float32", shape = (468,))#candidate|5302|(468,)|var|float32
var_5303 = relay.var("var_5303", dtype = "uint8", shape = (6, 4))#candidate|5303|(6, 4)|var|uint8
output = func_5298(var_5299,var_5300,var_5301,var_5302,var_5303,)
func_5304 = relay.Function([var_5299,var_5300,var_5301,var_5302,var_5303,], output)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5239_call = mod.get_global_var('func_5239')
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5327 = relay.TupleGetItem(func_5239_call(), 0)
call_5328 = relay.TupleGetItem(func_5240_call(), 0)
func_5220_call = mod.get_global_var('func_5220')
func_5223_call = mutated_mod.get_global_var('func_5223')
var_5347 = relay.var("var_5347", dtype = "uint16", shape = (252,))#candidate|5347|(252,)|var|uint16
call_5346 = relay.TupleGetItem(func_5220_call(relay.reshape(var_5347.astype('uint16'), [252,])), 2)
call_5348 = relay.TupleGetItem(func_5223_call(relay.reshape(var_5347.astype('uint16'), [252,])), 2)
output = relay.Tuple([call_5327,call_5346,var_5347,])
output2 = relay.Tuple([call_5328,call_5348,var_5347,])
func_5350 = relay.Function([var_5347,], output)
mod['func_5350'] = func_5350
mod = relay.transform.InferType()(mod)
var_5351 = relay.var("var_5351", dtype = "uint16", shape = (252,))#candidate|5351|(252,)|var|uint16
output = func_5350(var_5351)
func_5352 = relay.Function([var_5351], output)
mutated_mod['func_5352'] = func_5352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5170_call = mutated_mod.get_global_var('func_5170')
call_5356 = func_5169_call()
call_5357 = func_5169_call()
func_1591_call = mod.get_global_var('func_1591')
func_1594_call = mutated_mod.get_global_var('func_1594')
const_5359 = relay.const([[-0.481209,0.980995,2.011901,1.941458,7.471315,7.376275,3.204668,-4.980152,-8.275315,4.990264,-1.340840,-2.139829,-4.498213,-8.626841,-7.507099,-7.768475,-4.026009,-1.973223,-8.828587,7.319489,-0.792235,0.894711,-1.944934,-2.429412,1.391288,-0.831501,-7.060718,-6.477429,6.228426,0.073863,-8.885723,-2.806814,-2.171293,-8.497720,-2.712352,-0.678919,1.848909,8.638454,0.412760,-7.316791,6.131761,9.133717,8.259092,-5.378407,-6.116965,5.908383,-8.761499,5.112402,-7.278302,9.351645,6.959542,3.961309,5.166283,-7.304150,-6.699235,-2.182501,-8.868425,-6.423191,7.811971,-6.647495,-7.305008,-2.802124,8.702406,9.001940,8.205096,4.642795,-1.972588,4.907463,7.199092,7.871912],[-4.330827,1.908561,3.886024,2.081594,-9.805832,-6.496808,8.087208,8.485470,-2.528735,-8.498855,-0.202180,8.431691,-5.106656,-3.308158,-9.092611,1.645950,4.603274,5.132900,-1.159891,7.917643,-1.135094,-6.586458,-3.293306,6.409994,-4.143015,8.997733,8.797887,-3.725950,7.771202,7.238420,-8.574539,0.287910,7.058934,-2.640363,3.423958,-4.575700,1.165086,3.456684,6.979492,-4.298212,-7.889002,-5.255770,-0.127745,4.571392,5.317180,-8.474760,1.367612,-8.633949,-2.586529,0.907372,-1.240184,-0.943607,-7.086946,-9.080357,-9.369792,3.490546,-6.816119,-3.665963,-9.651120,-9.841132,-2.936744,9.259051,-1.508112,-6.606992,-6.218084,-3.101991,7.604268,-6.977430,-2.944935,7.784669],[-8.192916,6.255261,-3.248649,8.641915,1.393415,1.144327,-7.659580,-4.971420,-6.412241,-8.008444,-9.321271,3.167226,4.630636,8.956300,-8.386075,-0.032786,9.587477,9.034028,1.898014,9.977028,0.601621,-0.702729,6.048538,-2.888110,8.121442,7.603806,-8.726637,5.437693,-5.329834,2.456097,-2.396970,7.751813,-7.752037,2.863669,-4.638754,-0.959066,1.868959,5.580553,2.701925,-6.756888,-3.227053,-2.042732,9.393725,-5.469348,-0.814971,-6.056127,8.157759,9.283527,6.374858,8.076358,4.315373,7.715940,-4.927462,9.433761,-6.813997,-5.042456,4.777219,9.557184,8.879696,9.677714,-1.643808,-4.779949,7.855958,6.713789,-0.675126,-2.878704,-4.212104,6.865363,3.779479,0.234632],[-1.727702,-5.911720,-0.449339,-7.593644,-6.775094,-9.170394,-4.094597,-1.125046,-2.808145,-9.357763,5.871375,-7.615157,-2.747341,-0.325289,-5.195801,4.532189,-0.628179,8.967492,-5.254685,-5.374517,8.457816,5.376284,0.717436,7.294272,9.495607,-5.287550,8.388850,-1.522164,-0.777551,9.892641,-3.165189,-1.496591,-0.199260,-5.322679,2.740750,7.015787,1.179240,-7.346033,2.557910,-3.427015,2.834004,5.933454,1.566409,-6.184213,-6.274532,-3.852660,2.808977,7.499789,-3.472501,-5.084264,-9.438243,-2.245726,-0.482030,-6.626340,0.109896,-9.287223,-2.719200,8.788238,9.734879,6.936527,4.518299,2.602246,-1.022726,-7.986693,-1.325932,1.114755,9.046002,-3.468002,-6.357701,8.422279],[1.449665,5.042996,2.596959,4.999710,-3.973306,-9.432541,-8.815103,-1.236781,2.065466,-6.767837,5.867649,-2.605762,4.588185,-6.677204,-7.690127,2.346900,5.005188,4.399659,6.715961,-3.240473,6.128046,9.236870,-6.401826,0.585663,5.110954,6.595772,1.260615,1.354466,-4.578628,-1.176095,5.243165,-8.191615,-5.883255,4.488241,-2.321958,-4.704318,-3.759122,2.837684,0.022037,-8.544953,-0.472828,-9.704973,-5.848497,6.909957,2.991409,8.727071,0.592366,-7.825765,8.785507,-1.249143,0.182933,6.458961,-6.051884,-7.297386,4.965418,-3.896793,-0.621236,6.744062,-7.958191,8.838985,1.564939,-1.122810,-6.399569,-3.898410,-8.356112,0.849873,3.624920,-2.430794,0.143295,-5.407949],[9.143949,0.666238,3.527253,-3.816433,6.525398,2.162840,-9.257565,2.132474,-6.573124,-6.124243,-1.460317,-6.630973,5.023994,-8.204591,4.446614,5.013093,4.114269,-7.457862,-8.297711,2.558727,-3.640525,-3.656597,-9.125322,4.962811,1.577289,-4.063149,7.079421,-4.466380,2.568679,-3.113420,4.699795,4.202163,-1.070792,3.048665,4.898970,-4.036237,8.511938,-1.144343,-8.271521,1.575718,-3.928263,-6.503856,-5.754788,-8.044147,1.928802,1.230528,-1.594536,6.447313,-8.504095,6.701752,3.030520,-4.195690,-2.417164,6.193965,-6.335892,9.793597,-0.214843,2.687544,-0.889996,-4.728353,-0.477285,-8.677312,-9.357529,0.202923,-7.063727,-2.958991,-7.293164,-7.228415,-1.052437,8.700418],[-2.581343,0.629995,-9.547197,-9.944657,-6.434540,-2.691472,-2.489831,8.902800,6.506197,6.120365,-1.311419,4.869357,-7.970786,6.615824,3.974857,-9.996037,7.802562,-5.121200,-4.960658,-9.604891,4.479875,8.294310,7.911124,6.097798,9.274915,-1.836970,-4.421514,-0.421148,-4.685150,0.721866,-3.863890,5.668104,8.186490,-5.883339,-2.262263,-7.607717,9.939937,6.048686,8.288125,6.811978,-4.639977,-2.612706,-5.658353,1.409545,-8.708821,-3.833348,-9.077742,4.457427,-9.274354,9.826270,-8.052394,-5.902018,1.255735,2.377502,-9.828021,2.610939,-6.486048,-1.812280,-8.572518,7.799958,-2.678722,-1.201866,-8.611700,9.447249,0.191395,0.777490,-1.883959,9.149020,-3.927020,-7.682965],[-9.056337,4.200162,9.304523,6.414758,9.410900,4.998417,-7.203704,8.637510,8.107790,0.926597,1.228837,-0.649007,9.486639,-6.702895,-0.757201,-5.079823,-5.108546,-7.362091,9.191438,-3.156073,-0.051602,4.747666,4.374521,3.208852,6.442483,3.771724,-2.032220,-7.160953,7.181494,0.323434,-3.790100,-8.702226,1.090590,-4.131403,-5.727226,5.572193,-2.576235,-5.573755,6.831509,-8.110160,-6.571999,-4.431380,-4.006144,-8.505419,4.562185,9.694780,-8.103082,-0.633978,-3.735474,-9.707558,5.475151,-4.264924,-0.232293,2.711642,-3.380743,-0.600851,5.532667,1.508419,-4.452319,-1.541266,6.721669,4.926885,0.276465,2.319105,-1.319499,4.130038,-5.318852,-0.947312,-9.537107,-7.774306],[9.955978,8.798849,3.397286,-1.872794,5.510544,6.433576,8.184022,-1.124330,4.120364,-0.671216,2.834855,4.834710,0.137527,8.672347,-8.493987,3.581976,-8.402471,-6.973584,7.305690,4.064511,9.195814,-5.677312,3.871953,-7.509656,-5.865176,5.030672,-0.371533,7.995617,-8.829500,7.513963,6.559096,-2.823608,3.775561,1.654405,-6.565555,8.427518,-2.941478,-1.409323,-3.637019,-4.383823,4.389707,1.314336,-8.670930,-5.140779,7.867807,0.019676,-5.873308,-3.322091,8.313863,-5.317686,3.863856,9.180719,9.529083,8.438400,-4.573280,1.095262,7.040712,1.960393,6.663615,-8.857017,2.436748,7.571942,-8.624534,-7.901907,-9.721182,9.255492,-8.340506,1.419899,-7.582832,-2.044565],[-1.985619,-0.855494,-7.543646,1.307560,4.144184,-5.503952,-1.912312,-4.754622,0.543566,-4.041609,-1.632205,0.921912,-4.339220,-7.338316,-7.462252,-6.216167,-0.531122,-2.190468,-5.481079,4.012140,-7.856769,4.809735,6.626895,6.590351,-0.003392,-5.838418,6.872268,9.448373,-3.837955,-0.380112,-7.045721,1.198759,0.171502,5.504716,-7.719664,-0.284784,-5.654875,6.059025,5.970387,7.109586,-1.983348,-5.789785,1.870861,3.083559,-4.106296,-7.271412,-4.863028,2.295850,-4.605655,-3.380113,8.329675,6.671524,-3.719799,-4.622706,7.848432,0.786154,2.672164,9.167422,3.649049,0.365550,-6.203914,8.116071,8.095345,-5.942700,5.983409,-3.650375,2.834358,5.017537,-9.962833,-0.836388],[2.249445,5.060652,7.459274,3.892239,-5.377438,-9.259004,1.426755,6.024552,1.744241,-9.845521,-3.825939,4.518100,-1.228196,1.368728,-2.048631,-6.521825,8.788749,2.352920,-2.330088,-3.030366,7.358115,9.710277,-7.101291,2.079927,-9.111770,-1.939952,0.692540,9.876292,-9.049240,-7.762197,-2.991393,-8.641696,7.962277,-8.783608,0.241572,-1.106622,-3.135394,2.377530,-2.535869,-0.721907,-3.338496,-3.869240,-1.740150,2.438983,-0.777494,-0.797985,-8.287644,5.499797,-9.309903,3.169742,-7.628168,-3.341024,2.544684,7.026975,-8.657866,-4.941677,-8.329585,-7.549213,-5.526574,-8.872636,-4.785214,0.169430,0.559466,-4.219296,6.376942,5.636331,6.450807,-2.429362,6.267744,-8.305938],[8.733232,-5.898306,5.983382,-4.789569,-7.952527,4.653072,0.335046,2.536563,0.772504,-6.855217,9.343360,-4.111673,9.240836,4.581380,-5.525905,1.673081,6.493477,1.629465,-4.425328,-8.843395,-5.068399,3.800070,9.564382,2.759018,-9.347341,9.164020,1.386027,-3.694547,-0.942544,-3.664125,-7.051619,-8.438355,7.919319,-0.777302,5.173235,4.682851,-3.400249,-6.162866,7.854833,-8.017039,5.733595,-1.919497,7.891198,-9.923325,-7.492115,-0.315404,-7.753491,-7.150413,0.028538,5.507257,-2.919744,-7.344015,-4.300802,-3.949400,-3.786545,8.223955,-2.383832,0.728158,2.163608,2.237460,-6.891176,-2.377932,-2.230223,-2.470913,6.343926,-5.255421,-9.430230,0.697844,4.814390,7.854206],[-9.041701,-5.612700,-2.334837,9.656721,4.679159,0.375765,-0.586216,-4.148262,2.222641,-5.736845,-1.678073,-5.801539,-7.880029,6.225542,5.568684,6.559200,-9.619389,-9.739305,1.097925,-4.841814,-2.370635,-5.850804,3.972382,6.870688,-1.186743,4.893463,-0.509055,7.144435,9.919612,6.513996,9.349044,7.864573,-8.353181,-0.825759,5.707421,-9.670011,1.918453,-0.001455,6.241896,5.225725,-2.256032,-2.944448,-5.536891,7.426241,1.236669,-6.865102,7.664942,-0.541031,9.627805,-7.426366,1.116423,-3.565778,5.526411,5.681565,-0.275168,-8.329986,4.854647,4.840412,4.926800,-6.898410,8.090033,1.396820,-3.708637,-7.284699,4.949677,-6.062110,7.136638,6.909411,2.692136,9.662433],[3.144270,-1.401259,4.216370,-2.868972,-9.672922,7.416042,0.433200,6.856834,-3.847363,9.053391,-1.013405,-4.565956,-6.846666,-4.925484,-6.248768,0.303895,-0.417778,-9.870082,7.734819,-9.720962,5.321092,-4.397925,-1.406653,-9.318482,2.437903,-7.733344,0.182257,-4.489482,-1.517636,-8.243108,-9.918272,-1.249435,9.240663,-3.409461,7.619785,3.646926,-8.061544,8.541284,7.707383,9.222771,5.992662,-7.415229,-7.440537,-0.700460,7.999380,1.166283,-9.438369,-7.270559,2.386992,9.178825,1.695686,4.872369,-2.917833,1.780345,2.505548,-2.290257,-2.513724,4.814054,9.386663,-2.279914,-1.316070,5.484382,2.478678,9.308552,-1.874081,-3.327344,2.060375,-5.406989,-4.474985,9.161826],[-9.483241,5.969917,-8.955222,-1.692861,-8.239615,-0.842899,-2.300420,-2.522460,-3.405482,-8.711213,-8.059594,-6.883046,6.504574,7.114603,-5.328309,5.793270,-0.578524,-6.430681,2.835508,1.458487,7.032667,8.161156,7.992156,4.355886,7.276649,-6.846374,-6.169635,7.215524,8.745493,-9.442750,2.321717,4.764383,-2.066816,-9.660337,-3.539183,8.782553,8.349693,7.864269,-5.196793,-3.530546,8.561049,7.037528,-9.012585,0.913261,5.965110,1.776921,9.299349,6.316231,-5.804700,3.165935,0.855010,-8.215103,4.658608,5.255258,6.945193,5.513744,-1.935607,-0.590774,1.589233,3.027730,2.925199,7.085266,9.549801,-9.708381,-9.444424,-4.905720,7.781356,4.704405,-8.504182,-9.237826],[-8.904716,-0.752846,0.375579,6.338371,-6.230849,0.449832,-1.720045,-3.663905,4.372447,4.869348,8.553459,5.049809,3.573688,1.101728,3.117549,1.254894,-9.360761,4.256306,-5.440525,-8.353519,7.472343,9.043740,5.341258,8.781485,-3.571508,-0.212901,-2.217450,-7.235535,-7.325746,9.943424,-9.157376,-3.564928,5.012421,-9.861552,-1.500928,-5.824199,-0.131396,5.880362,-9.300862,4.300538,-9.878796,-8.069264,1.306852,-0.409759,-3.488682,-1.590912,-9.786250,7.083842,-2.067925,6.869747,5.905357,-5.762274,3.168849,9.870163,-3.133041,6.342976,-9.410337,4.484419,-6.064071,-2.069812,4.180373,6.433680,2.608072,2.516602,-0.327393,-2.707540,7.421186,-4.743282,1.181467,-9.223895],[-7.635498,-3.236341,4.246321,-3.924024,6.375038,-2.694409,4.091637,-3.778109,8.520124,-7.397006,-0.294840,7.498959,0.336013,3.699178,4.283986,-2.038954,3.419316,-1.905552,-9.460606,-7.696108,9.744770,3.940542,4.781427,6.386662,5.500742,-6.751395,5.131229,7.883337,5.706401,0.575156,-2.592632,-8.758036,-3.199227,-1.094128,-8.260356,-5.669253,-7.998136,-4.270239,3.458008,-1.979165,-9.551252,-4.670999,-6.447956,-7.723450,-3.396821,-3.028115,-2.271045,-7.705913,2.431955,8.218418,-6.151407,-3.820702,5.210609,-6.562729,-5.138422,-5.623376,6.612546,-7.922948,-0.317971,-1.884619,-1.218883,-6.162881,2.576510,7.840383,4.994445,-7.084975,-2.597825,-5.043276,-4.936654,-0.852406],[2.913210,6.377768,-1.439040,-1.428536,-7.490742,9.342346,9.757895,0.018419,9.984327,-4.506421,-2.575096,-3.590657,7.187464,-0.109874,1.762734,-9.828324,3.526437,1.685902,-2.679125,8.751901,-3.580888,3.712032,-9.787948,9.455053,-8.628173,-3.595422,-7.148689,3.431354,-2.660044,0.999491,8.202711,-1.897895,6.711668,-8.174583,-4.197763,1.574913,-2.855383,-1.751864,5.989513,-7.283316,8.085328,-6.336559,9.822335,6.618783,-8.077817,2.162370,1.823190,-4.568392,-4.951294,-0.366781,-1.907630,2.745848,-4.084570,1.506862,6.312393,0.015100,0.446305,9.465887,-7.858444,-6.507048,8.008814,-1.212677,7.693258,-2.469130,4.043777,-4.977797,-8.924772,-7.940416,-6.824829,-7.018973],[-5.944481,-9.106157,-0.884277,-7.636223,3.561193,1.233717,0.347972,2.158806,-2.470001,-5.057369,-8.246281,-8.253731,-1.791222,8.875707,-4.495190,9.260638,-4.304099,-3.632375,4.013856,8.317383,3.132419,4.300001,-9.103509,-0.478100,-6.646160,-4.381646,7.534846,4.252776,2.712596,-8.820036,3.964813,-5.086985,-6.042199,-1.036845,-0.488275,-0.211079,-4.446400,-1.586144,-7.150173,5.418466,1.938402,2.602261,-5.133677,-3.985752,9.158987,-1.682019,-9.454572,-8.101623,9.292189,-0.344044,-3.430085,-1.274877,6.542451,5.248536,8.570273,-6.196935,-6.902925,7.651295,7.936001,8.328343,5.328702,7.514423,-6.859331,-9.218329,-9.219488,1.820253,8.953065,5.116503,-9.670204,-4.991755],[3.915995,-7.388251,-0.032088,9.521214,-2.007237,-2.622703,-0.066654,8.351271,-0.375545,-7.483527,0.194214,5.689258,6.994348,6.921159,-0.729737,7.991449,-4.688996,4.141351,-0.995136,-8.464821,6.104220,-5.209648,-3.622546,4.730661,3.789979,4.693521,2.183709,4.680858,2.152081,8.270519,-3.959433,-7.013383,-2.402511,9.559651,-0.577534,1.599246,-7.856722,3.532204,-2.146837,2.939052,-2.976484,-9.023110,-0.452435,8.467694,-3.487963,3.763184,5.406775,7.818643,0.914018,-3.886704,5.883230,-8.909135,8.690997,-0.514802,-3.071030,4.563769,5.659581,-0.774923,4.764367,9.883437,-3.623844,-2.881698,-7.920009,-2.050726,-4.018552,6.033000,-9.203177,-2.978066,8.167600,5.867476],[-9.774835,3.881843,-3.190834,1.339953,9.751349,5.346003,0.577999,8.046532,-1.817584,-9.619306,0.401977,-1.604969,8.322388,8.402958,4.405592,-3.138826,-0.387267,3.825704,9.528827,-1.059109,-5.761953,5.951013,-4.718061,8.525448,-8.856516,7.124686,-2.095347,2.097731,-9.812829,-9.009715,-5.364634,-5.448040,-2.543467,8.254275,-8.985537,-6.978414,-8.623671,1.888943,5.580840,4.911663,-8.260609,9.552610,-2.014469,-9.462957,3.713080,-1.642271,7.959416,-9.796892,7.484629,5.297981,-6.858449,-5.560544,4.047819,4.065169,-0.523498,-4.173839,1.435449,3.925365,8.389155,1.069321,3.960438,-5.940061,-6.804836,-9.350496,-6.602771,2.498732,-0.173344,1.768492,9.542206,-2.753892],[1.914565,-5.230576,-2.389282,-6.918692,6.309790,-7.021278,-7.983287,2.479660,-6.571032,-0.235383,-5.530385,3.655659,5.026435,-7.991234,3.476011,-9.907557,-3.720400,6.244995,6.200467,-9.249284,7.034401,2.350349,0.613246,-0.074712,-0.045416,-9.242646,0.347187,3.357054,2.879379,2.019059,-4.456825,6.878567,7.233780,5.743650,6.036896,9.315767,3.174873,-5.784451,-0.764633,-0.620204,4.683709,1.824669,-9.493347,9.625639,-3.142618,-6.342100,-2.752521,2.179597,-7.385897,-2.478687,-3.174661,6.518211,-4.225385,-5.474252,-2.553506,-1.022239,-1.610015,-9.224040,-4.235718,-2.734590,2.412248,-2.771717,-5.960274,5.402433,-7.884623,-5.317893,3.282592,-1.370531,5.070141,-4.738169],[2.337187,9.983537,-3.589539,-7.066744,1.986515,-3.194870,6.594196,4.790244,-3.105669,4.056317,-8.014624,-5.107043,0.332918,-4.615179,0.874826,-9.984715,4.901309,-1.807218,-8.297985,-9.193710,0.509517,-9.717235,2.420533,4.942244,-9.294365,9.707917,-7.084946,-1.917563,-1.988311,2.058918,-0.410796,5.678294,3.085388,5.949000,-6.030824,-7.749790,-9.024504,0.513534,-3.590663,-1.963753,3.413014,7.453340,9.128386,3.813352,-5.641730,2.400124,-5.910658,-5.154481,5.890854,4.211581,-7.816236,3.515181,-5.086239,-7.870788,4.871550,2.356862,-9.005468,9.296056,8.346727,-0.329557,1.403959,-6.008165,-1.551897,0.722959,-3.757540,3.731936,-9.799987,-3.079356,6.218122,9.806897],[6.908922,5.073614,-9.079227,1.322722,2.843862,4.406518,2.840283,1.212295,0.261063,6.856520,6.373708,-0.990720,-6.897969,3.755935,5.024454,-4.828728,0.299794,3.892831,-7.993647,2.734780,-5.400499,-6.093395,-4.614644,4.184863,6.281550,-6.682900,3.868475,-4.207777,0.987029,-1.501375,7.495150,4.652154,-1.812694,-5.786851,7.411197,8.933817,-0.121820,4.145057,7.193036,-2.805347,-2.321815,0.224851,8.841197,7.611177,8.497112,-0.058296,-8.537539,-6.091340,-6.950555,-5.961894,-4.827886,6.463748,6.436762,-7.006848,0.524199,2.176293,4.643871,3.561353,3.138930,4.749013,-7.191188,1.646145,1.817565,-0.717495,-4.511876,0.312675,-8.017741,3.656995,6.025607,-7.751954],[9.638418,-4.895366,-1.209934,0.951894,-2.167048,4.536396,-8.006599,-0.821188,-9.624103,2.924867,8.738024,9.357316,4.307781,1.971442,-9.087793,3.794861,-2.105815,-2.608248,-4.567292,-5.326739,-1.238797,9.972102,-3.737497,-7.733053,-5.797164,3.549632,-2.858707,8.014440,8.093028,7.021974,-2.712153,1.063267,-5.633173,-7.899244,-7.394808,-7.458802,-7.167150,9.595012,6.728613,9.430768,-0.019684,5.564464,2.242439,-9.785365,8.682652,3.340333,1.718293,-2.411944,-9.119246,-0.597847,1.517589,-2.827977,-6.314493,-2.641992,8.972904,-5.546897,-6.134650,3.035690,-8.882487,8.027611,6.739973,-0.187733,2.774807,-2.449829,5.183762,-9.674412,9.815069,-6.663948,2.560241,7.253142],[-4.077083,-8.352640,1.306741,-9.534885,1.394020,-4.328713,-6.387584,2.893760,0.367318,-6.975742,-8.305702,-4.279324,8.295995,-0.831181,9.066273,6.251596,3.540857,6.153804,8.313863,-7.234491,8.099186,6.788052,7.200036,4.760848,8.166597,0.631794,2.919083,0.728151,-2.787992,3.173721,-2.265674,9.563881,-2.454092,-9.119870,9.643750,-8.932489,7.008804,-7.567282,6.257857,-8.110937,2.899907,-5.724118,5.136417,1.418985,1.968823,7.225237,-7.195381,0.700994,8.132328,-0.733197,5.560257,9.246511,4.700330,3.625949,-1.882915,2.491031,-0.344339,-2.093688,9.300755,9.975972,-7.096836,-5.683513,-7.038426,2.645560,-7.450180,-1.075420,-6.184250,-6.167137,8.980330,-1.437399],[1.911824,-7.321264,-8.882218,8.694131,-5.703774,-8.530478,-1.591166,2.329448,3.711232,-7.703278,7.949645,5.517123,1.322850,0.150264,3.126066,-8.591989,5.451791,-6.216461,3.237663,4.583486,2.602457,-9.502867,3.898207,-5.826424,-6.918399,-8.508086,6.420260,7.790041,5.573517,6.310790,0.729442,-9.730314,-8.747697,-3.426192,-6.999173,-9.747650,5.869733,3.401732,-5.905920,0.686092,7.603781,-8.996663,6.066072,5.484115,-1.771616,-3.698252,-0.193622,-3.887960,4.086615,-8.863442,4.203335,9.663477,4.378232,3.722995,-4.580766,-9.499166,-6.313544,-1.799209,-5.756487,-4.955735,3.892598,-4.422275,4.060902,-3.723140,6.180264,5.235319,2.906599,-7.397605,0.483513,5.243887],[-7.518049,7.293939,-7.584174,4.578631,1.536945,-7.354585,-3.354192,-0.103560,7.436401,-8.325658,2.721699,4.650232,3.673417,8.085489,5.158826,-5.187741,-6.935572,-9.262527,-1.056034,-1.672716,-7.102195,-9.661725,9.614259,-3.095823,7.120397,-5.513504,-3.505963,-7.147340,7.216875,2.273583,-8.605809,-0.246126,8.554624,3.063845,-7.201075,-8.383501,-3.377577,3.096989,2.675713,1.959975,4.098517,-2.977350,0.995424,9.605543,-2.673560,-3.446601,-7.285313,-3.503415,3.633733,2.485103,4.521771,-0.512720,-8.235959,4.704874,-9.707538,7.376005,-4.084600,0.510176,-5.703866,-5.084354,7.106445,8.261719,-4.562043,-2.667972,2.618374,8.642015,3.055349,5.344489,-6.322231,9.103793],[9.028673,-7.580545,-2.849774,3.302640,-7.209500,-6.376442,-6.304644,2.121140,4.009679,3.296567,-2.970877,9.760072,-7.416717,8.489795,9.583898,4.058981,0.448516,7.905626,-8.155808,-7.017233,-1.328426,-0.822877,-1.533246,1.227098,7.557488,6.683053,-6.486912,4.008064,0.536705,5.588941,-5.403816,8.581346,-8.532400,7.016873,5.243672,4.747652,-8.706422,6.347913,9.871756,-8.862739,1.485658,-7.786785,-1.847788,-2.633235,9.300346,3.064685,4.205316,6.565379,2.641862,-1.647901,7.261384,-9.772056,6.008766,-1.342192,3.166636,-2.739535,-6.347765,-8.534444,-6.143753,-9.838182,-3.159122,7.922630,-8.650123,3.531509,-9.084016,3.836128,8.134664,8.116901,6.494673,6.126369],[6.402731,5.509103,4.174076,-9.948669,-7.392361,8.232477,-9.739924,-6.909882,2.772815,-7.373823,4.116279,0.312847,-9.208990,-3.507157,0.382919,-0.566050,5.803521,-0.250754,4.504340,-0.641113,-9.435047,-2.768994,0.481929,3.538580,-8.098513,-2.476095,2.728045,-7.274318,-5.808950,3.120455,-2.951574,-1.786894,5.944657,-0.131508,-8.707632,0.154541,-7.408279,8.876548,-9.047778,1.395618,1.457000,0.420269,9.297457,-8.980019,-9.462692,6.191654,7.132981,-5.075175,4.457784,1.070370,1.421459,-5.637160,-6.102815,1.772037,-8.682021,8.528274,-6.349427,1.830590,-3.146429,-6.145936,5.246749,7.895315,0.406276,-5.586034,8.382204,-2.647544,-8.019654,-7.814300,8.366221,7.542924]], dtype = "float32")#candidate|5359|(30, 70)|const|float32
call_5358 = relay.TupleGetItem(func_1591_call(relay.reshape(const_5359.astype('float32'), [15, 14, 10])), 0)
call_5360 = relay.TupleGetItem(func_1594_call(relay.reshape(const_5359.astype('float32'), [15, 14, 10])), 0)
uop_5361 = relay.asin(call_5358.astype('float64')) # shape=(15, 14, 10)
uop_5363 = relay.asin(call_5360.astype('float64')) # shape=(15, 14, 10)
uop_5366 = relay.log2(uop_5361.astype('float32')) # shape=(15, 14, 10)
uop_5368 = relay.log2(uop_5363.astype('float32')) # shape=(15, 14, 10)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
const_5371 = relay.const([[-8,5,9,1,4,10,-9,-10,-2,2,8,10,5,10,-10,3,7,7,-7,-8,8,-2,10,2,4,7,-9,5,5,-9,-2,-2,10,6,8,8,-1,2,2,-3,-9,10,9,1,-3,-10,-3,-5,-2,10,-7,5,-7,-9,-3,7,7,2,-3,2,3,10,-4,7,-5,7,5,10,-3,3,3,9,-7,8,2,-5,-1,9,9,-3,-4,8,6,-3,7,4,8,-2,2,5,9,9,7,7,-7,-2,-5,-2,8,-8,1,-5,-5,4,-6,-1,10,-6,9,5,-6,-9,-9,9,-6,10,-1,8,1,-5,-4,-1,8,3,9,-7,7,5,7,-1,5,4,-8,3,-6,-6,7,-5,3,4,8,-8,-7,10,8,-9,-5,-10,7,2,-2,-6,-6,-3,8,2,1,10,-6,4,-4,-7,-7,-1,10],[8,4,10,4,8,3,10,3,-3,-2,2,-9,-2,6,9,-9,-10,10,2,3,7,-1,1,-9,-2,9,-5,-3,-5,4,-6,2,5,-4,-7,6,-5,3,10,8,2,-6,-8,-6,7,-6,1,9,-1,5,-1,1,10,10,5,4,7,-4,8,-7,-8,-7,2,-8,-10,10,4,7,-7,-5,-7,10,8,1,4,10,3,-2,5,8,3,-5,3,-2,-9,3,-6,1,6,2,2,-1,-9,-9,-3,10,-7,4,8,-10,-2,4,5,4,9,-3,-7,-5,-9,3,-3,9,-9,-2,8,-6,5,2,7,-5,-3,-9,-3,9,9,4,-6,-2,8,3,-3,8,-9,10,-8,2,3,2,-6,-8,4,6,8,8,-9,-4,8,-4,4,-2,-1,4,6,10,8,6,3,-5,-10,-7,-1,-5,2,-5,5],[7,-2,8,8,1,-7,9,10,10,-6,-1,5,6,-5,-4,-10,4,3,-3,3,6,-4,-1,10,4,-6,2,1,1,-3,-8,-5,7,6,8,6,1,-10,2,-2,5,-3,3,7,2,6,-2,-2,-10,9,-10,-3,-2,-3,-4,-3,5,8,-2,2,6,3,1,-7,8,7,10,8,5,-10,-6,-10,1,-9,-4,8,-8,-7,10,10,-9,-3,6,-3,-3,-10,6,-2,-9,-1,-3,-2,-1,2,1,7,-8,1,4,-7,-6,9,-6,-2,-3,7,-3,-7,-7,4,-10,10,-5,-1,6,9,-4,8,9,-6,-3,8,-3,-10,5,-8,7,10,10,1,1,10,6,7,7,10,8,8,3,10,2,-1,-10,10,-6,8,1,-1,7,4,1,6,10,-1,-1,-2,-10,1,6,2,2,-7,1,10,8],[-3,-8,10,-4,2,3,8,7,-5,-9,-6,10,-4,3,-8,7,-2,10,-2,5,10,8,-3,-7,9,-7,9,-8,6,-4,-4,6,6,10,-10,2,2,8,-6,-6,-3,7,10,-4,7,-3,-10,7,-6,-4,1,-6,7,-10,1,5,1,-7,-7,9,10,5,2,-6,8,-5,-5,3,9,2,-1,5,8,3,2,1,6,1,-9,-8,-6,-9,-6,-2,8,-4,-10,-1,10,8,-7,-5,7,3,-3,-7,4,10,8,4,6,5,6,6,1,1,5,1,1,9,4,5,-2,9,-4,8,-10,6,10,-5,8,-6,-1,-4,-10,-10,-1,-2,7,4,2,-1,-2,2,1,-2,-5,-1,-7,1,-9,10,6,-2,-1,4,6,-10,4,-2,-9,-5,5,1,10,7,-4,9,9,3,-6,5,-4,-2,-9],[5,-3,4,-6,-9,-8,-4,-5,4,-4,6,-6,6,8,-10,4,-4,-6,4,3,6,2,-6,5,-1,-7,-1,-7,-2,-4,-1,8,7,4,-3,7,-8,3,5,4,-9,2,3,-6,6,9,-2,3,-10,3,3,5,8,-5,-6,-9,-1,4,2,-1,3,8,-7,-5,7,10,-7,-1,-3,-7,5,-3,-7,-2,-8,-9,-5,6,-7,6,-10,-4,-1,3,-1,-4,-6,-3,-5,-4,-10,-6,2,-4,5,-5,-8,6,-3,-3,9,1,4,10,10,2,9,-4,10,-9,2,1,-10,9,-6,-10,-10,2,-6,5,6,-8,7,-5,-4,3,-6,-5,-3,-2,7,-6,2,4,10,-3,-7,1,-5,-3,9,-4,-2,3,-3,6,8,10,-10,7,-4,-4,3,6,-2,-6,7,-7,-9,6,-7,4,2,5,-6]], dtype = "int8")#candidate|5371|(5, 165)|const|int8
call_5370 = relay.TupleGetItem(func_1422_call(relay.reshape(const_5371.astype('int8'), [5, 11, 15]), relay.reshape(const_5371.astype('int8'), [5, 11, 15]), ), 0)
call_5372 = relay.TupleGetItem(func_1425_call(relay.reshape(const_5371.astype('int8'), [5, 11, 15]), relay.reshape(const_5371.astype('int8'), [5, 11, 15]), ), 0)
func_1708_call = mod.get_global_var('func_1708')
func_1714_call = mutated_mod.get_global_var('func_1714')
const_5384 = relay.const([1.775030,1.125502,-1.206582,-0.529417,-9.400694,-0.443248,-3.113725,2.026474,7.554877,-4.192810,2.791325,-3.775859,2.736617,-7.930289,7.730214,-1.924687,-7.062469,8.947942,-5.172362,-0.786148,-7.948241,0.090204,-5.404193,-0.848760,1.939774,9.236806,-9.787360,2.312684,2.725530,8.818262,4.969367,-2.903571,7.037558,-6.679189,7.317879,-9.463645,0.031339,7.672662,3.605328,-5.463038,-6.426055,1.716411,3.972163,-4.625791,-4.601729,4.929579,-4.804855,2.720251,-4.540120,2.977080,7.697002,8.902430,-8.450649,-6.380152,-3.093625,-7.456423,-7.144024,-5.921324,-2.682808,2.314722,-0.829185,-5.655714,-2.694909,-1.037920,2.681045,-3.074478,-3.405783,-8.853050,-6.449019,-1.303673,9.426809,-0.468622,-4.934895,4.726267,7.094014,-5.344616,0.016282,-7.403157,-0.741271,-7.959149,9.942216,-2.875630,-6.853365,-8.283875,5.495600,-8.280305,3.317326,2.020037,8.052823,7.992813,3.833753,-2.138807,-1.669236,-2.424594,8.243479,2.429454,2.948497,-2.126297,-6.746556,1.656213,4.152861,-5.142771,-3.841094,2.270808,-9.197810,-0.715781,-5.654355,-0.468908,-8.256669,2.135559,-6.854881,-5.267591,3.338770,4.552552,8.546811,7.716477,-4.079125,9.786102,8.018536,-0.580917,8.198752,7.565090,6.593935,7.975590,-2.758753,-9.714654,0.280596,5.037062,9.652320,-2.277804,6.821178,-8.221640,4.180184,-6.843337,-8.663517,-0.424747,0.572045,8.190254,2.245292,-6.469910,7.209973,-3.987301,7.921036,7.823993,3.097923,4.002799,-7.496040,-8.475570,-9.082478,-8.823036,-2.643022,-5.924119,3.478923,-6.577260,-2.129202,-1.071772,2.128075,-8.651391,-8.963861,-7.977707,1.951858,-6.667435,6.391895,9.325409,8.533243,-1.997249,-9.750503,-2.808149,-1.559261,8.285428,8.805605,-2.745356,-5.891311,-3.998551,9.030662,-3.004971,-4.295456,-1.456523,-1.657631,4.067204,2.009972,3.788518,9.810326,3.401514,-6.996447,-9.237251,0.165403,2.796441,-0.175683,-0.491062,-7.749954,-2.226188,-1.856975,-1.319375,8.868052,-3.726923,3.005030,-4.033217,5.258659,-4.473792,-4.689812,-6.990856,4.604434,-6.522786,1.769874,0.906112,1.369562,-5.035647,-8.710668,-9.392816,6.645389,0.359674,-3.519782,6.457057,0.565168,-9.707077,-6.420702,5.760791,-8.819486,0.705303,5.124911,5.172102,0.728981,-6.591987,-5.385524,2.472520,7.554301,-8.599072,-0.620573,-1.229815,2.552351,-5.067903,2.771165,9.403647,9.819877,5.853612,-2.962225,3.726001,-4.246349,2.477347,7.917211,-8.885184,9.805399,-7.926747,-1.431049,-3.646966,5.112616,-2.952021,-6.615518,-7.165875,-5.632226,-4.440834,-9.177393,-3.285023,0.718613,7.431903,-5.728536,-7.274279,-9.261614,-2.099882,9.443086,-3.032427,8.965154,0.120338,3.466686,8.458689,1.600784,-8.370847,8.728625,-1.889080,-8.568056,8.769265,-6.231597,5.607024,6.111883,8.368028,-6.904908,9.162011,-4.124057,2.334723,9.928033,-5.199514,5.358831,-3.541222,2.585411,2.978561,6.885238,4.139626,-8.047983,-7.955936,-3.885668,-9.886364,-8.807146,-6.587955,-9.576548,-6.970130,-9.110088,-0.547170,9.863025,-6.648399,-1.881992,-0.920240,8.969824,1.523888,-3.279021,7.778678,8.125082,8.917720,2.315368,3.549003,-3.091889,4.368355,-5.128532,-6.146982,5.035684], dtype = "float32")#candidate|5384|(315,)|const|float32
var_5385 = relay.var("var_5385", dtype = "int8", shape = (130,))#candidate|5385|(130,)|var|int8
var_5386 = relay.var("var_5386", dtype = "float32", shape = (3, 4))#candidate|5386|(3, 4)|var|float32
call_5383 = relay.TupleGetItem(func_1708_call(relay.reshape(const_5384.astype('float32'), [9, 5, 7]), relay.reshape(var_5385.astype('int8'), [130,]), relay.reshape(const_5384.astype('float32'), [9, 5, 7]), relay.reshape(var_5386.astype('float32'), [12,]), relay.reshape(const_5384.astype('float32'), [9, 5, 7]), ), 4)
call_5387 = relay.TupleGetItem(func_1714_call(relay.reshape(const_5384.astype('float32'), [9, 5, 7]), relay.reshape(var_5385.astype('int8'), [130,]), relay.reshape(const_5384.astype('float32'), [9, 5, 7]), relay.reshape(var_5386.astype('float32'), [12,]), relay.reshape(const_5384.astype('float32'), [9, 5, 7]), ), 4)
func_3670_call = mod.get_global_var('func_3670')
func_3673_call = mutated_mod.get_global_var('func_3673')
const_5391 = relay.const([1.223945,-4.375640,-2.533780,6.246836,-3.921286,2.434883,-7.903163,6.691511,-8.520769,-1.931150,-8.665768,3.676461,-7.641469,-1.043023,-6.471331,3.478264,-9.652301,7.739603,-9.842780,-6.341709,8.318687,6.662025,-3.242140,-1.960188,7.447867,-6.068676,0.968245,-6.840173,-6.844812,0.262112,-3.512587,-0.401497,-3.791455,6.203838,0.866531,3.872779,4.025778,-4.522788,3.226250,-0.830367,0.075523,7.177638,5.915586,-2.476653,-4.548527,-9.757613,-7.908556,3.933263,-4.913660,0.824865,-5.261304,-8.745260,-2.137160,-3.145010,-4.664245,-8.819683,5.712583,-7.902958,1.136635,0.041160,-5.680286,-2.038227,-4.374743,-2.328973,3.342521,-9.948398,-3.200052,4.771015,1.136798,8.683595,9.818746,4.426365,8.894668,8.928890,-7.120372,-9.910970,-4.889076,-7.242921,-6.221194,-9.536901,-7.867969,-6.520195,4.761217,1.761846,7.094469,-6.448744,-4.332533,0.519478,6.675355,-4.779335,2.572970,5.313651,-4.993689,3.683761,-4.421372,-0.320469,-6.607367,6.365627,-2.607648,0.089430,2.915187,-4.263938,9.003205,4.074542,-0.935549,8.644688,-5.608122,-1.948641,-1.385122,-3.155350,6.591666,8.601697,2.268099,0.591562,-1.543178,9.549896,9.108618,3.892095,1.974631,6.785744,4.753664,-5.625946,3.967307,-8.327026,-5.920467,-1.425996,0.351317,9.683238,4.905735,-4.948553,6.559625,9.102152,-9.905370,-5.385991,-3.127277,1.253969,-5.240436,5.411267,-8.440346,7.113747,-1.009280,-1.541459,3.618976,-4.285880,6.375571,-5.602059,-5.632714,6.113924,9.663506,8.990133,4.061249,9.499823,-1.630529,-2.038734,-9.223099,5.021382,9.442338,-3.482069,5.920957,3.943165,8.238572,-8.714080,-9.838018,-2.498787,0.807098,6.181695,3.279926,-5.469305,7.819266,-4.644472,-2.593158,2.579145,-2.834242,-9.115354,-3.990633,-2.551208,-6.724575,-3.346769,-8.023198,-7.569363,-7.399034,-7.759607,-3.236975,8.590399,8.662803,2.557105,1.311678,-7.882348,-6.228865,9.892560,-5.953328,-2.411745,-7.646295,9.486551,-7.380094,-7.712045,5.352538,-3.757806,9.426258,-5.425159,5.015185,-6.262311,-6.546787,-3.211749,-8.302561,2.497043,9.850228,2.773992,-4.897125,-8.318305,-2.178539,4.186262,-2.838012,8.905836,2.076014,-5.814617,9.407078,8.024901,7.224947,-8.737084,-8.009570,5.664246,4.063675,3.693776,7.996102,-3.195312,2.028720,-2.644679,1.478830,4.974917,5.689092,-5.076783,8.207895,-7.009775,4.968815,-9.790227,-0.755081,-3.480476,-9.922466,-3.487662,4.263047,0.173213,-8.286853,-0.400612,6.870046,0.303539,-0.026185,2.593223,3.750070,-7.472005,-4.079158,-9.902694,-5.031888,-9.027232,6.695762,7.918485,-2.538382,7.956365,-8.196790,-4.846708,5.377035,-1.500612,5.739539,9.655619,4.191146,-8.312719,-0.627293,-5.066905,2.012864,3.324046,7.172651,5.345983,9.233313,2.847473,6.374838,7.725397,6.458825,-1.405312,2.543656,9.112144,6.823169,-2.035401,2.120764,2.655562,-9.386895,6.942635,8.876824,3.599367,2.842389,-1.422491,-6.813998,3.347527,5.014067,6.825458,-6.984792,9.514959,-2.026613,5.898875,-7.180967,-4.077390,-7.711463,6.538363,-8.454343,-4.340064,2.239198,-9.686597,0.145084,4.661709,9.034046,0.573680,7.087101,-1.979700,4.384795,9.007162,-7.707149,-0.829257,4.483438,-2.941401,-5.317978,1.428316,3.671334,5.481255,-3.719174,2.076799,8.326866,6.725288,9.517973,-7.129390,9.564877,-5.469656,7.778614,-3.155803,-5.272261,5.521022,-5.303796,-8.487821,-6.833075,-0.084345,-9.721072,2.451493,-7.152597,4.119184,-3.606810,-2.792036,3.795763,5.836477,3.631600,-1.697125,-4.985569,-9.139183,-2.609978,-7.618904,7.596369,8.915864,-7.972066,7.463508,6.060608,-1.106977,1.320370,-2.927796,9.839592,8.854308,5.155512,9.136648,4.064779,-3.446083,-7.211267,0.196707,7.442418,-6.346060,4.294842,1.011174,-2.383666,-8.505790,-3.696924,-2.077194,-0.081232,0.568863,0.694110,0.036757,-6.390449,9.567254,-8.370582,-9.667127,6.506784,5.057898,2.348736,-2.790890,-8.466775,4.014092,8.556622,-7.233112,5.236742,2.475249,-1.524581,-7.747487,7.083766,-7.304618,-3.155072,1.741690,6.546580,-4.286345,0.426557,-2.652243,6.869136,6.977853,4.604537,-2.793331,9.074133,-5.417594,-9.766722,-0.445190,-8.277503,9.790092,-7.693256,-6.079310,9.522773,-0.608441,4.049975,-0.310207,-9.624625,3.169079,8.116055,-8.046223,-6.580539,7.393558,7.913363,-9.265147,-7.771098,-3.086575,-3.419766,-9.498718,6.158926,8.299117,1.527098,6.253335,7.174607,5.777798,-8.217729,0.595434,-7.195815,7.871904,-6.258528,3.712958,8.844437,5.305296,3.496985,8.996850,-8.750649,0.569362,-1.293368,1.365151,-0.808462,2.546366,8.847945,1.000136,3.471513,6.633788,-5.255490,-5.663763,5.718899,5.367032,3.324938,6.547913,5.293368,0.107673,-0.817903,4.001898,5.162903,7.872470,3.780878,7.389181,-9.733996,6.357522,0.939919,-7.497250,6.664687,9.024290,7.912012,4.254803,-3.540112,-9.435906,8.678635,3.615312,-5.428443,8.861105,9.034176,-1.010985,-5.127253,-8.830850,4.608811,-7.379968,-5.906491,4.224579,-2.885102,4.008566,2.546634,1.808538,4.882235,-0.606540,-0.258631,-3.923303,-0.275303,0.250971,-9.170833,-4.466743,-6.444992,-2.773034,1.895998,-0.598786,-7.094951,-6.332196,-7.410131,3.469563,-3.963253,3.131237,0.542104,-5.318837,3.819492,-4.246523,2.622269,5.320014,0.545221,-9.220976,-4.755635,6.278556,-8.059241,-0.432826,6.976810,5.982326,7.265481,-7.220920,-8.664539,-1.718006,-5.685960,8.858948,-9.898221,-1.221812,-5.505110,-9.240268,2.526946,-0.190047,5.887341,-3.300931,-0.161917,-5.925463,2.641014,-8.535675,4.517582,8.067988,-4.396910,4.023969,3.275352,-0.263063,-0.601320,-1.878933,-3.757325,-2.565360,-9.758902,7.701392,-5.543103,-0.891597,-5.820308,3.868557,-3.947069,-4.185448,1.660254,6.647379,5.715842,-4.036461,-6.668964,3.912923,6.553483,-8.247821,4.563779,-5.032806,9.592100,9.855766,-5.743907,0.605911,0.394484,5.016897,6.333040,7.767192,-8.551080,-4.220264,5.218906,-6.015630,0.868068,-7.456336,-2.577775,-3.351721,3.757723,6.375660,-4.866940,-3.183526,-6.638410,-7.777399,-6.574356,-4.063674,-5.936163,1.506192,3.619956,-1.621837,-8.426711,6.925108,-1.925754,-5.710109,9.023432,7.872576,-4.402879,2.408178,0.288233,-6.786347,1.092705,-2.129346,-0.231391,8.204623,3.295945,-0.550623,-4.897219,-5.613244,-0.807216,8.358134,7.837150,0.633357,-9.865955,-7.735428,4.740598,-0.901054,-8.034084,-7.249160,-2.186963,-1.809667,7.432142,-3.813691,-5.124999,-8.214388,0.691763,-2.575741,-9.463269,5.982680,-3.075320,-4.159910,-1.435269,-3.762994,-6.922855,9.919026,7.563686,-7.350556,4.884208,-9.369382,-3.540978,-7.647276,-8.547121,-4.929826,-1.481176,-1.699389,7.853654,-8.370514,6.706427,-3.463193,2.781751,-4.059902,7.625526,-1.216743,8.715687,-8.041449,3.849390,-9.402723,6.306584,7.081689,-8.878525,-2.698255,-8.696745,7.439172,-8.236397,6.182257,-4.947616,-5.264244,8.814733,-9.152081,6.623882,-5.743108,4.611138,3.669182,4.420613,-0.986859,-8.449416,7.179602,-0.021970,-0.894384,7.004482,-9.563627,9.307913,3.269672,6.663242,-3.448482,6.296482,-0.631284,8.959443,9.436065,-1.797658,-7.470394,0.270952,9.284074,-0.387552,-0.292616,-7.355275,8.675665,9.301248,-5.060278,-8.674631,0.536924,2.631367,-0.450745,9.135096,6.351846,-6.466113,-6.822251,9.184668,5.657093,4.565568,8.825208,-5.511397,-0.290760,-3.312026,6.249226,6.030879,-2.762006,-1.392906,7.096441,-0.727786,0.135379,-3.572874,-5.060606,6.579534,9.185180,1.668976,-3.500877,-7.518537,3.112640,0.324873,0.530445,-7.876084,0.171680,8.053693,-4.674025,9.018170,-4.913471,-6.925290,-9.669400,-4.747244,-3.386751,-8.524137,3.837590,7.333352,7.172753,6.734811,2.720450,-3.955598,-6.262319,6.025101,-9.711307,-0.575151,-4.304530,0.082636,5.678042,2.382337,-3.188889,-2.676411,-0.245996,-1.676842,0.276539,-5.266401,2.440524,3.436719,-3.466965,5.670333,-9.405444,4.708821,-3.993123,7.621059,-4.291721,2.540346,-8.721284,5.895631,-3.414427,9.349298,9.487542,-1.217415,-7.394166,4.526885,5.358454,1.146338,-7.594341,-6.727864,-7.211046,-4.978357,-4.472627,5.958490,-0.123948,3.151909,-8.232783,-8.551352,2.239560,3.856987,-9.337536,-3.905603,0.660891,2.639495,0.125239,-8.010479,9.801173,-8.480299,-1.622816,8.367996,-7.896056,3.744005,1.352512,7.808248,9.535285,-2.178358,4.569653,5.461095,3.624757,-4.572606,-6.653838,-1.684765,-3.027407,-6.870742,-3.555929,3.985725,-7.334029,9.806855,-9.471703,-2.070090,2.138244,1.945685,-9.561116,8.646335,-6.728728,-1.316984,-8.332027,-5.442733,5.280379,-4.236423,-3.886410,0.494957,-7.789699,-5.388335,0.453411,-2.368893,-1.101951,8.748164,-7.980016,-0.452868,-3.377833,-6.820040,2.433300,8.586333,4.540036,-6.265306,7.481561,-5.118778,-2.469852,-6.132735,-9.231856,0.363275,1.782571,6.805062,0.879047,-4.647849,-5.470545,2.312845,8.507344,-4.527700,-7.175272,2.367054,-4.245553,6.548537,-6.466665,-5.132453,2.506474,5.220772,-0.052123,-1.525322,-4.871709,-9.846251,6.198101,-4.393736,-6.223308,5.350828,5.000257,0.610591,9.151407,5.827284,-6.104916,-8.338177,0.479561,-3.733028,-5.777864,6.554859,7.059730,9.155507,7.291468,-9.904428,-4.669249,-4.521982,-2.525102,-7.871058,0.472521,9.728969,6.142384,6.850614,-9.279877,7.858681,-9.678726,5.574094,-4.264436,7.354425,3.414455,2.297756,8.468514,3.148865,8.838839,8.678017,7.803393,8.068168,-5.284294,0.463988,-8.245733,1.110362,-2.814633,8.152189,0.896624,-3.977448,-7.357620,9.470470,-5.392075,9.089494,-8.255251,-0.930231,2.113190,-2.652924,-8.169115,-5.933374,-0.286974,8.378126,4.903011,2.531133,6.182188,2.616530,-0.639985,-8.845736,9.046722,-1.742143,-3.111397,-7.122269,-5.910185,-7.110072,-5.593856,-0.012327,-1.165282,2.481633,-7.845897,0.139436,8.031643,1.972664,9.444048,-2.459262,0.456402,-0.104124,4.967869,9.231206,1.792308,-6.613715,5.044977,0.330228,-2.405792,7.524009,8.968543,1.887742,1.454091,-9.778448,-4.042030,1.503352,-9.119206,9.694354,-8.815617,2.674683,-0.862381,-1.154862,-9.867779,-9.009702,-8.510042,9.318016,-2.355271,-4.603792,7.155224,-0.604247,8.712204,6.096385,1.335333,0.784178,-9.860555,6.588440,-8.389678,-6.545764,2.223423,-0.914733,-2.730608,-9.208231,-0.306544,-4.633822,8.860192,6.363141,-3.932576,-8.810520,5.991225,-3.446775,5.697178,1.956586,6.656951,-1.354294,-2.061831,-4.879214,0.101826,6.912582,-7.289089,4.066367,-7.190489,-9.337666,-6.224291,-3.955887,8.345935,3.544566,-6.787040,-2.664190,-2.512564,5.397161,4.249375,0.553193,-0.845160,-9.343893,-0.949032,-7.995756,-1.051546,6.405058,-0.800070,6.408197,-9.885485,-7.844053,0.514074,-4.935658,8.602418,-6.332962,-5.743724,1.166179,-0.815675,6.219799,-3.922451,7.777187,-5.705591,8.398432,-1.050016,-1.018676,7.057466,0.321831,-4.145913,-4.376144,4.043879,-1.917237,-2.818341,-3.256040,-0.132399,5.390358,-7.187831,3.690396,5.111510,0.960266,7.362929,2.291957,-0.457631,7.737842,-2.468717,-5.678215,-9.302711,2.213735,2.658535,1.256816,4.423639,-9.832686,7.045081,0.786493,-8.554687,-3.429670,-5.993444,-8.799068,4.732766,2.367007,1.890215,7.332506,2.889990,-1.461947,2.294596,-5.245637,-6.227905,-3.399417,-0.545073,-1.552407,-9.447208,9.056282,-7.218311,1.475297,7.454542,-9.456985,-0.101903,6.421121,-4.535878,-2.477020,6.831380,8.198359,2.520167,-6.375549,2.330602,-9.145785,5.260515,-6.683510,1.266933,7.606764,4.210304,9.912639,-7.785451,6.092366,-0.383726,-4.203821,-3.563654,3.834923,5.644176,5.482533,3.707851,-4.064878,9.285959,-3.447055,-4.146628,-1.182498,1.835576,2.708865,-5.881630,2.677321,2.909353,-6.871806,0.431180,7.662208,5.780629,0.767919,8.997992,-7.471238,-5.515891,1.306506,-4.229607,-4.881915,-8.245128,0.528954,-0.657311,3.269792,-6.049012,5.388810,-3.967020,-8.102463,-6.620390,-2.837373,5.785027,-9.549831,9.851122,-4.416669,4.375542,-2.699841,7.117966,-8.499898,-1.156499,3.618082,-6.106238,-8.784694,7.522361,-4.216445,-2.075225,5.290335,8.013679,6.848256,-9.471936,8.190264,5.458295,2.824976,5.385937,-4.378944,9.624469,7.503660,7.490650,-8.421888,-2.286338,-3.308626,0.931075,1.260670,2.664141,-0.238249,-4.944579,-7.897120,1.295778,-0.690622,6.529052,-6.616502,-0.229306,-1.755885,6.504457,4.602154,-6.879201,-7.947541,1.796780,-3.472115,-6.787703,-6.299649,-3.760043,-0.732331,-2.679497,1.762823,-1.694434,7.055441,5.122383,-6.005254,-0.390357], dtype = "float64")#candidate|5391|(1232,)|const|float64
call_5390 = relay.TupleGetItem(func_3670_call(relay.reshape(const_5391.astype('float64'), [11, 16, 7]), relay.reshape(call_5383.astype('float32'), [12,]), ), 0)
call_5392 = relay.TupleGetItem(func_3673_call(relay.reshape(const_5391.astype('float64'), [11, 16, 7]), relay.reshape(call_5383.astype('float32'), [12,]), ), 0)
func_2054_call = mod.get_global_var('func_2054')
func_2057_call = mutated_mod.get_global_var('func_2057')
var_5408 = relay.var("var_5408", dtype = "int32", shape = (672,))#candidate|5408|(672,)|var|int32
call_5407 = relay.TupleGetItem(func_2054_call(relay.reshape(var_5408.astype('int32'), [8, 12, 7])), 1)
call_5409 = relay.TupleGetItem(func_2057_call(relay.reshape(var_5408.astype('int32'), [8, 12, 7])), 1)
var_5410 = relay.var("var_5410", dtype = "float64", shape = (15, 14, 10))#candidate|5410|(15, 14, 10)|var|float64
bop_5411 = relay.greater(uop_5361.astype('bool'), relay.reshape(var_5410.astype('bool'), relay.shape_of(uop_5361))) # shape=(15, 14, 10)
bop_5414 = relay.greater(uop_5363.astype('bool'), relay.reshape(var_5410.astype('bool'), relay.shape_of(uop_5363))) # shape=(15, 14, 10)
func_4708_call = mod.get_global_var('func_4708')
func_4711_call = mutated_mod.get_global_var('func_4711')
const_5421 = relay.const([5.008599,7.551001,-3.828933,-2.076814,9.048623,4.472316,1.729528,8.930397,-1.975009,-0.252155,-3.540939,-6.892120,0.868668,-9.153267,2.854968,-9.067562,3.797216,-1.266763,-2.704094,-4.221888,-4.618786,6.963483,4.865624,9.802519,9.641575,3.770298,1.214785,-0.426779,5.137140,7.680189,2.948457,8.945754,5.571373,-0.722834,3.437878,4.637740,5.267662,3.281044,3.319174,-3.747836,-2.219105,1.975899,7.482172,-8.620725,-9.685728,6.689563,-9.285362,5.445684,-5.347136,6.299903,-6.456113,0.563622,3.575794,-2.995688,4.373433,4.700655,-9.908750,4.870228,0.656023,5.123872,8.592923,6.551978,7.979870,-5.910949,-1.466773,6.107098,-1.915315,-7.689818,3.629191,0.557844,-7.254939,-1.490966,7.181331,-3.856165,-4.086854,-7.888923,6.932160,9.218172,-7.376714,-8.176262,7.446749,5.458147,2.085313,-0.188860,2.676815,3.013309,-7.770346,-9.500276,-4.142572,-1.866781,-8.759378,-0.652003,-7.787936,5.120456,5.287238,-0.462921,8.547513,9.752545,0.722476,-1.249719,0.206920,-3.946786,6.944691,0.199807,-7.189485,-4.021299,-5.163951,-7.113126,-7.827263,-7.290599,4.582164,7.598790,-0.078468,3.233703,-8.301854,-0.601487,-0.399047,5.894573,-7.205960,3.482319,3.523541,1.850767,-8.124376,-6.057339,6.789528,3.607369,0.873208,-3.300208,7.096110,-3.270369,6.859043,8.614031,7.768691,1.258953,6.248871,-3.192792,3.556428,-6.042890,1.133094,-7.865337,9.812043,-4.617906,-9.551415,8.388025,-5.402133,1.141939,-2.662810,9.285527,-6.029621,4.655967,7.339864,-1.304544,-0.056848,4.624904,3.069249,-1.894089,7.138044,-1.910536,8.494889,0.918025,5.508128,2.569383,1.210665,6.074979,-8.414177,9.168501,4.714227,-7.195208,-9.269660,0.950728,0.976333,6.067417,-8.514616,6.354378,8.351502,-4.623087,6.364110,-1.999012,-3.509430,-6.447844,5.852265,2.171327,9.768675,-2.506632,8.838018,-9.981889,1.377424,0.654281,9.608561,-1.954081,5.568065,2.770467,-8.353982,2.594596,4.239496,7.949511,6.560769,1.744025,-4.512833,-6.320704,-8.842518,7.654086,-4.882935,5.496840,0.395123,-6.771460,-2.072233,2.851238,-3.392433,-5.690625,3.018335,-3.623701,-8.500706,9.276379,1.087854,-4.917431,-2.151707,9.664944,-5.100007,-3.447079,-2.633029,-7.340267,-8.347717,-2.029700,-6.174693,2.693458,-7.758217,-7.055153,0.267216,-3.545507,0.546113,-5.589211,-6.988212,3.184609,3.219825,-0.647821,-1.593621,-1.701561,-3.434610,0.789459,5.357692,-9.775299,-7.194457,-8.216239,7.587685,-1.772828,5.089270,-7.228282,2.435149,-4.244041,-6.973064,-0.358881,0.122541,9.775026,7.290676,-1.488715,5.561674,9.457597,3.354824,-3.381702,-5.616237,-1.152147,8.920527,9.398409,-2.420691,1.554708,-7.220847,2.562501,5.640274,9.920174,-5.942496,3.790034,9.750190,8.055578,2.032444,3.733330,5.266971,3.799556,-4.902722,9.802071,8.908646,8.362396,-2.549998,2.148921,-5.878647,3.073020,6.583562,-4.159524,6.452883,4.739946,5.140574,-6.019523,-7.381798,-9.197996,-1.282932,0.511360,-4.362403,2.128916,-8.289981,-8.245227,9.671872,4.556298,0.836223,8.953879,1.413519,9.990763,1.348885,0.476974,0.537747,7.087141,3.684429,0.790855,9.511174,3.234037,-6.683872,-8.992036,4.654409,-5.239112,-0.967200,6.524030,-1.345944,-5.240118,-0.054078,-2.919868,0.380429,9.165182,-3.183672,7.357515,0.393349,7.586462,-3.532438,8.858082,4.994345,-3.231673,-1.775023,-9.855613,-8.499265,-5.160135,-7.250262,0.859312,-2.858062,7.764029,8.710563,7.153205,1.407543,-4.959141,-3.957942,2.086959,9.943466,0.281076,7.373073,6.348887,9.341982,-2.296848,-5.721541,1.338642,-4.397501,1.051859,1.823943,-6.160358,-9.909321,0.397533,-6.430977,-3.462162,-2.200623,7.388823,3.913909,-6.691429,1.683447,8.319685,-0.208359,-7.366025,8.478223,-6.193417,-3.541734,9.823093,-7.949468,-2.268277,2.733428,-7.689639,-3.243516,1.344463,-8.953390,-0.003046,-9.062779,6.635392,1.721382,9.883284,-9.808283,1.991877,-3.977944,6.976913,4.919282,1.937419,-3.575659,8.654109], dtype = "float64")#candidate|5421|(396,)|const|float64
call_5420 = relay.TupleGetItem(func_4708_call(relay.reshape(const_5421.astype('float64'), [3, 12, 11])), 0)
call_5422 = relay.TupleGetItem(func_4711_call(relay.reshape(const_5421.astype('float64'), [3, 12, 11])), 0)
output = relay.Tuple([call_5356,const_5359,uop_5366,call_5370,const_5371,call_5383,const_5384,var_5385,var_5386,call_5390,const_5391,call_5407,var_5408,bop_5411,call_5420,const_5421,])
output2 = relay.Tuple([call_5357,const_5359,uop_5368,call_5372,const_5371,call_5387,const_5384,var_5385,var_5386,call_5392,const_5391,call_5409,var_5408,bop_5414,call_5422,const_5421,])
func_5428 = relay.Function([var_5385,var_5386,var_5408,var_5410,], output)
mod['func_5428'] = func_5428
mod = relay.transform.InferType()(mod)
mutated_mod['func_5428'] = func_5428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5428_call = mutated_mod.get_global_var('func_5428')
var_5430 = relay.var("var_5430", dtype = "int8", shape = (130,))#candidate|5430|(130,)|var|int8
var_5431 = relay.var("var_5431", dtype = "float32", shape = (3, 4))#candidate|5431|(3, 4)|var|float32
var_5432 = relay.var("var_5432", dtype = "int32", shape = (672,))#candidate|5432|(672,)|var|int32
var_5433 = relay.var("var_5433", dtype = "float64", shape = (15, 14, 10))#candidate|5433|(15, 14, 10)|var|float64
call_5429 = func_5428_call(var_5430,var_5431,var_5432,var_5433,)
output = call_5429
func_5434 = relay.Function([var_5430,var_5431,var_5432,var_5433,], output)
mutated_mod['func_5434'] = func_5434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5452 = relay.var("var_5452", dtype = "int8", shape = ())#candidate|5452|()|var|int8
var_5453 = relay.var("var_5453", dtype = "int8", shape = (6, 1, 3))#candidate|5453|(6, 1, 3)|var|int8
bop_5454 = relay.multiply(var_5452.astype('int8'), var_5453.astype('int8')) # shape=(6, 1, 3)
func_5239_call = mod.get_global_var('func_5239')
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5467 = relay.TupleGetItem(func_5239_call(), 0)
call_5468 = relay.TupleGetItem(func_5240_call(), 0)
func_5428_call = mod.get_global_var('func_5428')
func_5434_call = mutated_mod.get_global_var('func_5434')
var_5476 = relay.var("var_5476", dtype = "int8", shape = (130,))#candidate|5476|(130,)|var|int8
var_5477 = relay.var("var_5477", dtype = "float32", shape = (12,))#candidate|5477|(12,)|var|float32
const_5478 = relay.const([4,1,7,-6,-1,-9,-7,8,6,1,6,-7,-5,1,2,3,9,1,-9,4,5,4,4,1,5,-7,5,-5,1,-2,-1,2,-6,8,1,5,5,-7,1,-1,2,-9,-4,-1,-2,9,-7,5,-5,1,5,1,5,-1,5,-5,9,-6,-8,-9,2,-2,-2,-4,-10,-2,-1,4,-10,2,-6,2,1,-10,7,-7,-1,5,8,8,-4,-2,3,1,-3,-9,-2,-4,-1,1,-6,-4,-9,-10,-10,-4,9,1,4,-7,7,-5,9,5,6,7,-4,10,-1,10,-7,8,-2,9,-1,2,4,-10,-7,-2,-10,-6,1,-10,4,-8,4,-8,4,-2,-6,4,2,-5,-8,-1,-8,-3,-2,-3,-2,-7,8,-5,-5,-9,1,-4,-9,1,6,6,-10,-2,1,-9,8,-1,3,9,3,2,-3,-9,5,-10,4,4,-6,-8,-6,1,-5,2,-8,-10,9,9,10,4,9,-6,-1,-9,-1,-5,-6,-2,-9,-2,5,10,-4,6,6,-9,2,-8,-10,-10,-5,-9,-1,3,7,-7,-5,-6,7,-7,10,9,-3,-6,5,-5,1,1,-9,2,-10,-6,-7,8,-4,10,-10,7,8,-8,9,5,-9,2,3,-4,4,-9,-4,-6,9,2,6,5,-1,1,8,10,6,-7,-7,-1,-1,-3,-7,-3,6,8,-5,10,-5,5,-8,-3,10,-3,-1,9,7,6,10,2,5,2,2,3,2,3,7,-4,5,6,-4,-7,7,-4,-3,7,-4,-5,8,6,-9,9,6,-5,-1,-9,7,3,-1,3,3,1,8,6,5,-5,2,2,-7,8,-7,-2,-3,8,-4,-8,-2,8,7,5,7,-8,-6,-4,-9,-3,-1,1,-2,10,2,6,-8,-4,-8,9,-9,-2,-1,-7,3,7,5,-8,8,4,7,-6,4,-10,-10,-6,9,-5,-8,-1,4,-5,-7,-7,-2,-9,-3,-3,-6,7,-5,-9,5,-5,8,-6,-5,1,-7,-8,-9,7,1,-7,5,7,1,4,-9,10,6,-8,-10,-4,-7,-5,9,-8,-6,-1,3,10,-3,-9,-3,8,7,-2,-6,4,-9,2,5,-10,7,1,-9,-1,5,-5,-10,-10,10,4,8,-1,-10,-7,-1,5,8,7,7,10,-9,-10,7,-6,4,4,1,-1,6,-6,-4,-6,-7,2,10,-5,8,-8,7,-3,-7,5,2,-8,3,-5,5,1,-4,-5,8,5,-7,-2,-8,-5,2,10,-5,2,2,-7,1,-8,-3,-1,-3,7,-9,4,4,10,-1,-9,9,-4,-9,8,9,4,7,2,-2,-9,10,8,-5,9,1,2,-9,2,9,7,6,-1,7,-4,-4,9,8,-7,8,-7,-4,-8,7,-3,2,4,1,2,1,-6,2,-9,3,-3,2,9,-1,10,-8,4,-3,9,-6,-2,10,-1,3,3,6,6,-8,-3,-3,8,-6,-3,-5,-10,5,7,8,-10,-10,7,-10,5,10,-10,-10,4,3,4,-10,-8,-6,4,6,7,6,-3,10,6,-5,3,-5,3,2,5,-4,1,-9,-6,-7,-1,10,1,2,-10,-6,-6,7,10,-9,-5,9,4,9,4,-4,10,3,-4,3,-3,4,-1,-1,2,7,2,3,5,-6,9,8,-4,3,5,1,-6,-9,7,7,9,-7,9,9,-2,-4,4,2,-2,-7,2,7,2,4,-6,-9,4,-6,-7,-8,-9,-10,6,-5,7,-7,8,9,-2,9,6,10,3,-3,-10,-9,-3,6,-3,8,-10,10,-1], dtype = "int32")#candidate|5478|(672,)|const|int32
var_5479 = relay.var("var_5479", dtype = "float64", shape = (2100,))#candidate|5479|(2100,)|var|float64
call_5475 = relay.TupleGetItem(func_5428_call(relay.reshape(var_5476.astype('int8'), [130,]), relay.reshape(var_5477.astype('float32'), [3, 4]), relay.reshape(const_5478.astype('int32'), [672,]), relay.reshape(var_5479.astype('float64'), [15, 14, 10]), ), 2)
call_5480 = relay.TupleGetItem(func_5434_call(relay.reshape(var_5476.astype('int8'), [130,]), relay.reshape(var_5477.astype('float32'), [3, 4]), relay.reshape(const_5478.astype('int32'), [672,]), relay.reshape(var_5479.astype('float64'), [15, 14, 10]), ), 2)
output = relay.Tuple([bop_5454,call_5467,call_5475,var_5476,var_5477,const_5478,var_5479,])
output2 = relay.Tuple([bop_5454,call_5468,call_5480,var_5476,var_5477,const_5478,var_5479,])
func_5505 = relay.Function([var_5452,var_5453,var_5476,var_5477,var_5479,], output)
mod['func_5505'] = func_5505
mod = relay.transform.InferType()(mod)
mutated_mod['func_5505'] = func_5505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5505_call = mutated_mod.get_global_var('func_5505')
var_5507 = relay.var("var_5507", dtype = "int8", shape = ())#candidate|5507|()|var|int8
var_5508 = relay.var("var_5508", dtype = "int8", shape = (6, 1, 3))#candidate|5508|(6, 1, 3)|var|int8
var_5509 = relay.var("var_5509", dtype = "int8", shape = (130,))#candidate|5509|(130,)|var|int8
var_5510 = relay.var("var_5510", dtype = "float32", shape = (12,))#candidate|5510|(12,)|var|float32
var_5511 = relay.var("var_5511", dtype = "float64", shape = (2100,))#candidate|5511|(2100,)|var|float64
call_5506 = func_5505_call(var_5507,var_5508,var_5509,var_5510,var_5511,)
output = call_5506
func_5512 = relay.Function([var_5507,var_5508,var_5509,var_5510,var_5511,], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5239_call = mod.get_global_var('func_5239')
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5534 = relay.TupleGetItem(func_5239_call(), 0)
call_5535 = relay.TupleGetItem(func_5240_call(), 0)
output = relay.Tuple([call_5534,])
output2 = relay.Tuple([call_5535,])
func_5549 = relay.Function([], output)
mod['func_5549'] = func_5549
mod = relay.transform.InferType()(mod)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mutated_mod.get_global_var('func_5549')
call_5550 = func_5549_call()
output = call_5550
func_5551 = relay.Function([], output)
mutated_mod['func_5551'] = func_5551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5120_call = mod.get_global_var('func_5120')
func_5122_call = mutated_mod.get_global_var('func_5122')
call_5560 = relay.TupleGetItem(func_5120_call(), 0)
call_5561 = relay.TupleGetItem(func_5122_call(), 0)
func_1708_call = mod.get_global_var('func_1708')
func_1714_call = mutated_mod.get_global_var('func_1714')
var_5563 = relay.var("var_5563", dtype = "float32", shape = (35, 9))#candidate|5563|(35, 9)|var|float32
var_5564 = relay.var("var_5564", dtype = "int8", shape = (130,))#candidate|5564|(130,)|var|int8
var_5565 = relay.var("var_5565", dtype = "float32", shape = (12, 1))#candidate|5565|(12, 1)|var|float32
call_5562 = relay.TupleGetItem(func_1708_call(relay.reshape(var_5563.astype('float32'), [9, 5, 7]), relay.reshape(var_5564.astype('int8'), [130,]), relay.reshape(var_5563.astype('float32'), [9, 5, 7]), relay.reshape(var_5565.astype('float32'), [12,]), relay.reshape(var_5563.astype('float32'), [9, 5, 7]), ), 5)
call_5566 = relay.TupleGetItem(func_1714_call(relay.reshape(var_5563.astype('float32'), [9, 5, 7]), relay.reshape(var_5564.astype('int8'), [130,]), relay.reshape(var_5563.astype('float32'), [9, 5, 7]), relay.reshape(var_5565.astype('float32'), [12,]), relay.reshape(var_5563.astype('float32'), [9, 5, 7]), ), 5)
bop_5571 = relay.logical_or(call_5562.astype('bool'), relay.reshape(var_5563.astype('bool'), relay.shape_of(call_5562))) # shape=(9, 5, 7)
bop_5574 = relay.logical_or(call_5566.astype('bool'), relay.reshape(var_5563.astype('bool'), relay.shape_of(call_5566))) # shape=(9, 5, 7)
func_250_call = mod.get_global_var('func_250')
func_254_call = mutated_mod.get_global_var('func_254')
const_5577 = relay.const([-9,8,-6,6,-10,-4,-10,8,5,4,-8,-5,5,7,9,6,3,-3,-9,-3,-3,1,-3,3], dtype = "uint8")#candidate|5577|(24,)|const|uint8
call_5576 = relay.TupleGetItem(func_250_call(relay.reshape(const_5577.astype('uint8'), [3, 4, 2]), relay.reshape(const_5577.astype('uint8'), [3, 4, 2]), relay.reshape(const_5577.astype('uint8'), [3, 4, 2]), ), 1)
call_5578 = relay.TupleGetItem(func_254_call(relay.reshape(const_5577.astype('uint8'), [3, 4, 2]), relay.reshape(const_5577.astype('uint8'), [3, 4, 2]), relay.reshape(const_5577.astype('uint8'), [3, 4, 2]), ), 1)
func_905_call = mod.get_global_var('func_905')
func_908_call = mutated_mod.get_global_var('func_908')
var_5580 = relay.var("var_5580", dtype = "int32", shape = ())#candidate|5580|()|var|int32
call_5579 = relay.TupleGetItem(func_905_call(relay.reshape(var_5580.astype('int32'), [])), 0)
call_5581 = relay.TupleGetItem(func_908_call(relay.reshape(var_5580.astype('int32'), [])), 0)
bop_5586 = relay.bitwise_and(call_5562.astype('int64'), relay.reshape(var_5563.astype('int64'), relay.shape_of(call_5562))) # shape=(9, 5, 7)
bop_5589 = relay.bitwise_and(call_5566.astype('int64'), relay.reshape(var_5563.astype('int64'), relay.shape_of(call_5566))) # shape=(9, 5, 7)
bop_5599 = relay.power(var_5565.astype('float64'), const_5577.astype('float64')) # shape=(12, 24)
output = relay.Tuple([call_5560,var_5564,bop_5571,call_5576,call_5579,var_5580,bop_5586,bop_5599,])
output2 = relay.Tuple([call_5561,var_5564,bop_5574,call_5578,call_5581,var_5580,bop_5589,bop_5599,])
func_5609 = relay.Function([var_5563,var_5564,var_5565,var_5580,], output)
mod['func_5609'] = func_5609
mod = relay.transform.InferType()(mod)
var_5610 = relay.var("var_5610", dtype = "float32", shape = (35, 9))#candidate|5610|(35, 9)|var|float32
var_5611 = relay.var("var_5611", dtype = "int8", shape = (130,))#candidate|5611|(130,)|var|int8
var_5612 = relay.var("var_5612", dtype = "float32", shape = (12, 1))#candidate|5612|(12, 1)|var|float32
var_5613 = relay.var("var_5613", dtype = "int32", shape = ())#candidate|5613|()|var|int32
output = func_5609(var_5610,var_5611,var_5612,var_5613,)
func_5614 = relay.Function([var_5610,var_5611,var_5612,var_5613,], output)
mutated_mod['func_5614'] = func_5614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5170_call = mutated_mod.get_global_var('func_5170')
call_5641 = func_5169_call()
call_5642 = func_5169_call()
output = relay.Tuple([call_5641,])
output2 = relay.Tuple([call_5642,])
func_5681 = relay.Function([], output)
mod['func_5681'] = func_5681
mod = relay.transform.InferType()(mod)
output = func_5681()
func_5682 = relay.Function([], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5170_call = mutated_mod.get_global_var('func_5170')
call_5691 = func_5169_call()
call_5692 = func_5169_call()
uop_5704 = relay.cos(call_5691.astype('float64')) # shape=(9, 6, 5)
uop_5706 = relay.cos(call_5692.astype('float64')) # shape=(9, 6, 5)
output = relay.Tuple([uop_5704,])
output2 = relay.Tuple([uop_5706,])
func_5711 = relay.Function([], output)
mod['func_5711'] = func_5711
mod = relay.transform.InferType()(mod)
output = func_5711()
func_5712 = relay.Function([], output)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5713 = relay.var("var_5713", dtype = "float32", shape = (8, 13, 14))#candidate|5713|(8, 13, 14)|var|float32
uop_5714 = relay.acos(var_5713.astype('float32')) # shape=(8, 13, 14)
output = uop_5714
output2 = uop_5714
func_5718 = relay.Function([var_5713,], output)
mod['func_5718'] = func_5718
mod = relay.transform.InferType()(mod)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5719 = relay.var("var_5719", dtype = "float32", shape = (8, 13, 14))#candidate|5719|(8, 13, 14)|var|float32
func_5718_call = mutated_mod.get_global_var('func_5718')
call_5720 = func_5718_call(var_5719)
output = call_5720
func_5721 = relay.Function([var_5719], output)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5120_call = mod.get_global_var('func_5120')
func_5122_call = mutated_mod.get_global_var('func_5122')
call_5746 = relay.TupleGetItem(func_5120_call(), 0)
call_5747 = relay.TupleGetItem(func_5122_call(), 0)
func_97_call = mod.get_global_var('func_97')
func_99_call = mutated_mod.get_global_var('func_99')
var_5765 = relay.var("var_5765", dtype = "float32", shape = (12,))#candidate|5765|(12,)|var|float32
call_5764 = relay.TupleGetItem(func_97_call(relay.reshape(var_5765.astype('float32'), [4, 1, 3])), 0)
call_5766 = relay.TupleGetItem(func_99_call(relay.reshape(var_5765.astype('float32'), [4, 1, 3])), 0)
uop_5769 = relay.cos(call_5764.astype('float32')) # shape=(4, 1, 3)
uop_5771 = relay.cos(call_5766.astype('float32')) # shape=(4, 1, 3)
output = relay.Tuple([call_5746,var_5765,uop_5769,])
output2 = relay.Tuple([call_5747,var_5765,uop_5771,])
func_5774 = relay.Function([var_5765,], output)
mod['func_5774'] = func_5774
mod = relay.transform.InferType()(mod)
var_5775 = relay.var("var_5775", dtype = "float32", shape = (12,))#candidate|5775|(12,)|var|float32
output = func_5774(var_5775)
func_5776 = relay.Function([var_5775], output)
mutated_mod['func_5776'] = func_5776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5551_call = mutated_mod.get_global_var('func_5551')
call_5784 = relay.TupleGetItem(func_5549_call(), 0)
call_5785 = relay.TupleGetItem(func_5551_call(), 0)
uop_5802 = relay.log10(call_5784.astype('float64')) # shape=(9, 6, 5)
uop_5804 = relay.log10(call_5785.astype('float64')) # shape=(9, 6, 5)
func_5505_call = mod.get_global_var('func_5505')
func_5512_call = mutated_mod.get_global_var('func_5512')
var_5808 = relay.var("var_5808", dtype = "int8", shape = ())#candidate|5808|()|var|int8
var_5809 = relay.var("var_5809", dtype = "int8", shape = (18,))#candidate|5809|(18,)|var|int8
var_5810 = relay.var("var_5810", dtype = "int8", shape = (130,))#candidate|5810|(130,)|var|int8
var_5811 = relay.var("var_5811", dtype = "float32", shape = (12,))#candidate|5811|(12,)|var|float32
var_5812 = relay.var("var_5812", dtype = "float64", shape = (2100,))#candidate|5812|(2100,)|var|float64
call_5807 = relay.TupleGetItem(func_5505_call(relay.reshape(var_5808.astype('int8'), []), relay.reshape(var_5809.astype('int8'), [6, 1, 3]), relay.reshape(var_5810.astype('int8'), [130,]), relay.reshape(var_5811.astype('float32'), [12,]), relay.reshape(var_5812.astype('float64'), [2100,]), ), 1)
call_5813 = relay.TupleGetItem(func_5512_call(relay.reshape(var_5808.astype('int8'), []), relay.reshape(var_5809.astype('int8'), [6, 1, 3]), relay.reshape(var_5810.astype('int8'), [130,]), relay.reshape(var_5811.astype('float32'), [12,]), relay.reshape(var_5812.astype('float64'), [2100,]), ), 1)
uop_5827 = relay.log2(var_5809.astype('float32')) # shape=(18,)
func_2540_call = mod.get_global_var('func_2540')
func_2543_call = mutated_mod.get_global_var('func_2543')
const_5830 = relay.const([-4.680868,6.177994,3.021357,-9.631254,8.799559,1.872135,0.138188,8.566639,-0.881666,-9.691355,7.796624,-2.780173,4.276689,-8.742828,-5.720511,2.172646,8.393425,4.294246,7.042641,4.020707,-9.257075,-3.091799,-1.482204,-4.735937,-8.435108,3.266046,4.289963,-0.913936,6.704390,-3.257874,-8.853488,-3.735812,-3.196298,-5.456752,1.512143,3.525714,9.662410,-8.116457,3.476478,-9.136985,7.780651,0.123501,-9.377912,5.297286,3.517269,3.899246,8.797057,9.387579,-6.742809,9.460045,6.350493,0.681174,-4.805408,-1.140118,-8.313119,5.100787,1.408216,8.601980,-7.287409,4.693546,-3.814264,-6.824565,5.972044,4.265304,7.385162,2.190062,1.810233,5.653611,-1.019184,6.824407,9.030782,-7.746891,-9.548960,-7.353426,-5.379624,-3.135203,-2.059180,8.072843,-6.499937,7.874233,9.519911,-9.268271,1.334278,6.275412,6.450838,4.635925,2.365252,9.095469,6.385884,6.528939,-3.094685,-2.316473,-3.440623,-4.825265,-9.699208,-8.067708,-4.874746,0.718682,5.470127,-5.585197,2.708630,1.876103,2.557051,-8.565704,-9.237374,6.225509,9.031900,9.372568,8.897048,-4.131013,-0.092117,2.968450,6.162180,-6.483960,4.245950,-7.031219,-3.079210], dtype = "float64")#candidate|5830|(117,)|const|float64
call_5829 = relay.TupleGetItem(func_2540_call(relay.reshape(const_5830.astype('float64'), [1, 9, 13]), relay.reshape(var_5810.astype('int8'), [13, 10]), ), 0)
call_5831 = relay.TupleGetItem(func_2543_call(relay.reshape(const_5830.astype('float64'), [1, 9, 13]), relay.reshape(var_5810.astype('int8'), [13, 10]), ), 0)
output = relay.Tuple([uop_5802,call_5807,var_5808,var_5810,var_5811,var_5812,uop_5827,call_5829,const_5830,])
output2 = relay.Tuple([uop_5804,call_5813,var_5808,var_5810,var_5811,var_5812,uop_5827,call_5831,const_5830,])
func_5836 = relay.Function([var_5808,var_5809,var_5810,var_5811,var_5812,], output)
mod['func_5836'] = func_5836
mod = relay.transform.InferType()(mod)
var_5837 = relay.var("var_5837", dtype = "int8", shape = ())#candidate|5837|()|var|int8
var_5838 = relay.var("var_5838", dtype = "int8", shape = (18,))#candidate|5838|(18,)|var|int8
var_5839 = relay.var("var_5839", dtype = "int8", shape = (130,))#candidate|5839|(130,)|var|int8
var_5840 = relay.var("var_5840", dtype = "float32", shape = (12,))#candidate|5840|(12,)|var|float32
var_5841 = relay.var("var_5841", dtype = "float64", shape = (2100,))#candidate|5841|(2100,)|var|float64
output = func_5836(var_5837,var_5838,var_5839,var_5840,var_5841,)
func_5842 = relay.Function([var_5837,var_5838,var_5839,var_5840,var_5841,], output)
mutated_mod['func_5842'] = func_5842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5170_call = mutated_mod.get_global_var('func_5170')
call_5887 = func_5169_call()
call_5888 = func_5169_call()
output = relay.Tuple([call_5887,])
output2 = relay.Tuple([call_5888,])
func_5897 = relay.Function([], output)
mod['func_5897'] = func_5897
mod = relay.transform.InferType()(mod)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5897_call = mutated_mod.get_global_var('func_5897')
call_5898 = func_5897_call()
output = call_5898
func_5899 = relay.Function([], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5912 = relay.var("var_5912", dtype = "float64", shape = (12, 4, 3))#candidate|5912|(12, 4, 3)|var|float64
uop_5913 = relay.atanh(var_5912.astype('float64')) # shape=(12, 4, 3)
func_5711_call = mod.get_global_var('func_5711')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_5919 = relay.TupleGetItem(func_5711_call(), 0)
call_5920 = relay.TupleGetItem(func_5712_call(), 0)
func_5549_call = mod.get_global_var('func_5549')
func_5551_call = mutated_mod.get_global_var('func_5551')
call_5943 = relay.TupleGetItem(func_5549_call(), 0)
call_5944 = relay.TupleGetItem(func_5551_call(), 0)
uop_5951 = relay.log(uop_5913.astype('float64')) # shape=(12, 4, 3)
var_5953 = relay.var("var_5953", dtype = "float64", shape = (12, 4, 3))#candidate|5953|(12, 4, 3)|var|float64
bop_5954 = relay.floor_mod(uop_5951.astype('float64'), relay.reshape(var_5953.astype('float64'), relay.shape_of(uop_5951))) # shape=(12, 4, 3)
func_538_call = mod.get_global_var('func_538')
func_541_call = mutated_mod.get_global_var('func_541')
var_5958 = relay.var("var_5958", dtype = "int8", shape = (130,))#candidate|5958|(130,)|var|int8
call_5957 = relay.TupleGetItem(func_538_call(relay.reshape(var_5958.astype('int8'), [2, 13, 5])), 2)
call_5959 = relay.TupleGetItem(func_541_call(relay.reshape(var_5958.astype('int8'), [2, 13, 5])), 2)
func_97_call = mod.get_global_var('func_97')
func_99_call = mutated_mod.get_global_var('func_99')
var_5963 = relay.var("var_5963", dtype = "float32", shape = (12,))#candidate|5963|(12,)|var|float32
call_5962 = relay.TupleGetItem(func_97_call(relay.reshape(var_5963.astype('float32'), [4, 1, 3])), 0)
call_5964 = relay.TupleGetItem(func_99_call(relay.reshape(var_5963.astype('float32'), [4, 1, 3])), 0)
func_5350_call = mod.get_global_var('func_5350')
func_5352_call = mutated_mod.get_global_var('func_5352')
const_5968 = relay.const([-7,-9,10,-4,4,9,-3,10,-6,-2,5,10,5,-7,6,-5,-4,10,8,-5,7,10,-10,10,7,5,-3,-3,1,-3,-9,-9,-3,-4,-7,5,3,-6,8,-3,5,8,-10,-6,10,-9,-8,-9,-9,9,-4,-10,10,3,1,4,1,5,2,4,3,-2,-2,-1,5,-7,-4,9,-4,-3,-6,2,-10,1,-2,-5,-8,7,7,-3,8,3,-10,10,-5,-10,2,10,-10,-4,-4,1,-4,-4,-6,5,-8,10,1,3,-2,8,-4,6,7,-8,6,5,-10,3,9,-2,6,-6,-9,-4,-9,-5,-9,6,-10,9,8,8,-6,-1,-6,-1,-2,-9,3,4,-4,-4,1,-10,-8,6,4,1,-4,-2,-5,3,7,10,5,-1,-4,-3,5,-5,2,-7,5,6,-10,10,-9,-5,-4,6,1,-8,2,-10,-5,-10,-6,3,4,-3,-8,-2,-5,-5,5,8,-1,-1,-8,-8,5,9,-4,3,2,4,10,-6,4,5,3,5,2,6,8,2,-3,-5,5,-7,-5,-8,-7,-9,8,-10,7,-6,3,8,8,-7,5,8,-1,1,-3,10,-3,-3,-2,3,-8,8,-1,-5,10,-7,-3,7,9,-9,-6,6,-7,-2,10,10,-4,-3,9,-3,-9,6,-7,-5,10,1,-4,-5], dtype = "uint16")#candidate|5968|(252,)|const|uint16
call_5967 = relay.TupleGetItem(func_5350_call(relay.reshape(const_5968.astype('uint16'), [252,])), 0)
call_5969 = relay.TupleGetItem(func_5352_call(relay.reshape(const_5968.astype('uint16'), [252,])), 0)
output = relay.Tuple([call_5919,call_5943,bop_5954,call_5957,var_5958,call_5962,var_5963,call_5967,const_5968,])
output2 = relay.Tuple([call_5920,call_5944,bop_5954,call_5959,var_5958,call_5964,var_5963,call_5969,const_5968,])
func_5981 = relay.Function([var_5912,var_5953,var_5958,var_5963,], output)
mod['func_5981'] = func_5981
mod = relay.transform.InferType()(mod)
mutated_mod['func_5981'] = func_5981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5981_call = mutated_mod.get_global_var('func_5981')
var_5983 = relay.var("var_5983", dtype = "float64", shape = (12, 4, 3))#candidate|5983|(12, 4, 3)|var|float64
var_5984 = relay.var("var_5984", dtype = "float64", shape = (12, 4, 3))#candidate|5984|(12, 4, 3)|var|float64
var_5985 = relay.var("var_5985", dtype = "int8", shape = (130,))#candidate|5985|(130,)|var|int8
var_5986 = relay.var("var_5986", dtype = "float32", shape = (12,))#candidate|5986|(12,)|var|float32
call_5982 = func_5981_call(var_5983,var_5984,var_5985,var_5986,)
output = call_5982
func_5987 = relay.Function([var_5983,var_5984,var_5985,var_5986,], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5681_call = mod.get_global_var('func_5681')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_6011 = relay.TupleGetItem(func_5681_call(), 0)
call_6012 = relay.TupleGetItem(func_5682_call(), 0)
func_5505_call = mod.get_global_var('func_5505')
func_5512_call = mutated_mod.get_global_var('func_5512')
var_6019 = relay.var("var_6019", dtype = "int8", shape = ())#candidate|6019|()|var|int8
const_6020 = relay.const([-1,1,6,7,9,1,5,7,3,3,-3,2,-2,-1,4,-9,10,6], dtype = "int8")#candidate|6020|(18,)|const|int8
const_6021 = relay.const([3,-7,6,-10,-1,8,-3,-1,-8,-3,-9,8,-4,1,4,3,9,-4,9,7,7,6,-8,-4,-1,7,6,7,4,1,-7,7,-2,3,5,3,-7,1,-5,2,-1,-5,4,8,1,8,-4,6,-6,-9,-8,2,-9,-1,-5,10,1,5,-7,-5,-2,8,8,4,-2,-4,5,-4,-6,-9,-7,8,-6,5,-6,2,3,-6,4,4,2,6,3,-2,-6,-1,1,3,2,1,-6,6,4,10,-1,-4,4,8,10,8,10,1,1,-9,1,1,-2,9,-10,-4,5,3,9,-9,-3,7,8,-5,1,6,-5,-9,5,-4,9,5,7,-5,1,-5], dtype = "int8")#candidate|6021|(130,)|const|int8
const_6022 = relay.const([-7.404707,-4.764799,9.612866,-2.762617,-5.095473,2.404595,-3.740451,8.096895,-8.126773,-2.017604,-9.646287,-0.069199], dtype = "float32")#candidate|6022|(12,)|const|float32
const_6023 = relay.const([8.753026,-7.254306,0.817020,8.325949,9.394537,3.289687,3.270127,9.247991,6.805676,-5.725549,-4.426899,-6.298035,-9.962263,2.675074,6.082080,-3.339329,7.886581,-8.113912,-0.149741,-4.684578,7.449320,9.745630,-0.130185,-8.365957,7.471998,1.660892,4.771164,-1.630203,6.229716,5.924140,1.346119,7.875694,-0.309103,8.265721,7.907203,-4.051915,5.028238,4.582052,8.142525,3.049099,-4.284678,-4.481417,-2.147331,-5.350308,-2.253691,-1.067173,3.797911,6.135842,4.960439,-8.003904,-7.618925,6.559355,-9.783692,5.629179,-0.404080,-2.824779,-9.972093,-8.921551,6.358554,-2.028809,-8.102416,4.215093,-1.435696,-7.802436,3.528024,-9.537381,8.563805,6.483253,-9.583266,2.440848,-6.163632,-3.992368,8.111365,2.626377,2.952238,-8.942190,2.639732,9.549586,-7.057034,7.077707,0.888110,8.675785,-4.672276,-8.613397,-2.612229,3.057670,-4.336775,6.227110,4.616019,-9.385044,-6.354189,-3.417663,8.120247,0.986092,9.009837,7.853267,-3.271250,-9.398041,-2.858498,7.703653,-7.846239,2.168393,-7.451714,-0.385656,1.913521,-3.460918,-5.911586,2.695520,2.265037,2.238328,-5.961909,4.997712,-6.643378,5.529581,-3.397002,5.510394,6.016068,4.039837,3.275204,6.647103,0.729835,-9.298879,3.667164,8.547990,-7.844926,4.563175,2.712940,3.601047,-7.297853,-8.611197,2.895133,-7.489922,-9.750048,3.001580,5.670574,9.665000,-0.529127,-3.784279,5.018395,-9.212425,3.231681,-3.736232,-4.810888,-2.847265,-6.101119,-7.683066,-5.369890,7.244336,-5.710223,-0.745132,7.262560,-0.017855,9.451300,3.903768,-3.488079,-1.990585,-6.343539,2.598099,-8.062049,2.110616,-7.011684,-7.929828,-0.063746,-9.330568,-1.010580,2.069011,-0.494822,-5.852196,-7.679106,-0.868912,1.440751,-5.989922,-0.226473,7.250014,5.593187,7.111364,-6.056536,-7.259734,3.285752,7.878461,8.114474,-3.772633,6.518778,4.769593,-2.804921,-6.076160,-5.900601,6.274992,-2.927080,7.382208,-5.940152,-2.433311,2.770136,5.000533,3.989532,-4.708305,3.598104,-5.145508,5.163049,5.962549,6.080092,-5.376682,-5.640744,-5.126078,-2.922261,4.346546,2.346345,8.659342,-7.868808,0.428762,9.638368,2.867282,-2.740233,1.629795,3.100607,-9.350686,8.523624,9.665479,-1.523020,-3.831840,2.741254,0.147636,6.737620,8.674126,-2.064886,2.527705,3.569548,-2.148952,-8.984690,2.439124,-4.134098,2.437912,-0.021243,-3.901399,-3.224390,5.554203,-0.346575,-5.393828,5.021750,6.101046,2.097447,-4.461044,1.113874,-5.855829,-9.610988,-0.387918,7.291562,-8.672679,-0.473316,4.225851,-3.081490,-4.941211,5.400165,-1.135848,0.355028,-0.213832,7.246278,1.024127,-2.644979,-0.925525,9.300630,9.617319,-1.506820,4.230457,-3.587986,-5.594685,6.241825,5.670849,6.653154,-3.183612,-1.624084,4.360559,3.809583,-1.359782,3.132837,-5.513107,8.863592,9.574285,-7.002691,-6.113498,5.591604,0.761009,-2.315497,-4.819944,-4.560586,-2.146445,8.631770,-6.124354,-4.435195,-6.579432,-4.886710,-6.973136,6.607584,3.621549,-2.390120,-0.890008,-9.372138,0.401222,8.801135,1.580046,-1.864243,-5.122102,3.421223,-7.373230,7.158823,8.001929,6.300923,-1.235183,-2.730218,-7.665051,4.926293,-3.274192,-4.535455,-0.251974,3.718201,-8.458541,9.878011,-2.189630,9.985876,-8.935776,0.887477,-0.425433,-3.331161,9.762751,9.512584,3.276509,4.671156,-1.843699,6.794761,1.884924,-3.682334,-3.377362,-2.411668,7.480547,4.814667,-7.896931,5.252468,-3.876059,9.325691,-8.143992,4.597017,-6.196859,-7.768580,2.252552,9.393218,-6.712187,-1.129640,-4.487374,9.384615,-0.333937,4.819215,-2.356727,-8.000103,-5.492887,-5.839746,-2.053000,0.975210,-9.984112,0.031485,1.665084,-6.468411,7.060292,2.673873,6.141359,0.915049,4.789469,1.982448,9.385371,-5.172631,5.361089,4.697792,8.088329,-0.327732,-2.201333,1.504239,5.882597,7.465737,-5.999255,-4.541142,-1.528382,6.280415,-3.296861,1.552089,-9.342107,-0.230316,-6.574710,4.261273,-9.881594,-1.611895,-4.188011,-3.503674,4.401535,-5.415477,-5.455370,-6.082450,-7.128976,5.394318,-1.314350,-8.652892,-7.381525,-9.926791,-8.305824,-5.437449,-4.776774,5.260545,-7.974449,-2.816462,-6.633441,9.964244,7.638296,5.989611,-5.108095,-7.157788,0.950714,8.377512,4.424111,-8.125719,-1.727440,-4.951784,0.106686,5.382909,-0.908436,-4.819003,-9.501763,8.720083,5.977083,4.840790,0.116630,-9.559604,-7.092313,7.758360,4.823943,-3.372895,-7.964797,-0.685861,-2.930614,-8.348145,7.685921,5.475282,-1.083406,0.394241,5.089503,6.229429,5.221550,1.051025,-2.819689,3.644615,2.382388,7.825987,2.349524,6.045064,9.844996,-3.588429,-5.797867,-9.300401,-8.286446,-7.548628,-2.732623,3.307884,0.588810,4.389037,0.434767,-3.713716,-1.189989,-4.694403,9.199363,-0.554485,3.132917,-6.953867,-5.865057,2.913163,-5.346923,1.234420,6.310134,-8.819428,5.139585,-7.134106,8.581852,8.839131,-3.957844,3.841029,-9.203247,-9.324739,-7.258833,9.490580,0.934793,8.611692,3.048259,-4.198546,6.273970,3.087467,9.108785,4.476463,-8.251332,-5.918888,8.859129,3.724352,9.397766,5.244598,-4.497617,9.659409,8.061899,1.070911,5.356700,-9.948710,1.988338,3.087590,3.924059,9.731250,-4.012118,8.383871,3.408105,5.177865,-9.190423,-9.840943,3.434490,0.066928,-3.125946,7.479734,-6.890077,6.013697,-9.875503,-8.164495,3.710204,9.101584,-8.008235,4.610748,8.033984,-8.038089,-2.518668,-3.610445,-3.042507,-5.005593,5.435838,-4.762412,1.140369,1.389687,2.788278,-6.864113,7.839157,-0.043107,-1.878206,3.948140,-8.007353,7.858788,-0.231774,-2.826314,0.548107,5.315397,2.119390,2.195300,3.287692,-0.407985,-4.921749,-7.371091,-3.533005,7.237277,-9.941365,0.538445,8.482398,2.867585,-8.209381,-7.563329,3.022561,-0.489431,-3.517620,7.015791,-5.515230,-4.255052,-9.514161,-3.732980,6.681248,5.708287,-3.266738,-0.174707,-1.449789,5.932204,8.553354,-8.014349,-1.378362,6.906545,-3.785251,-3.629634,-6.903826,-5.422091,0.332967,-0.368138,-9.623456,8.889472,-0.961531,-9.226647,5.300088,6.665962,-3.026103,9.735059,3.906378,7.570549,-4.143379,-0.586821,-4.500719,7.366947,-2.910422,-4.253214,-5.913430,0.770056,2.201508,2.555681,-0.440936,1.535369,-9.796775,6.151402,-9.082863,-0.977095,-8.409138,1.055855,6.857199,6.368930,-0.231174,-3.691239,1.676592,0.326610,-6.437810,9.378216,-0.675643,1.674247,-1.923441,-4.722371,5.078104,2.721445,0.080930,-8.147893,7.089539,-6.136705,8.045101,-3.388068,5.642993,3.527851,-9.488550,-0.019119,4.086178,-0.615119,-5.718610,-2.913251,6.709108,1.493887,5.160205,7.792167,2.974262,-4.215850,-2.555333,1.042928,0.738699,3.900393,-6.859665,-9.918237,3.110183,4.569224,7.580167,5.395790,1.938633,9.195345,-9.999648,2.596552,9.175390,-4.742995,8.375462,8.903518,-7.175234,-1.601078,-1.727540,4.406326,4.221981,3.319711,-2.817186,4.986031,2.067626,-3.072165,0.961698,-1.010290,-6.498640,5.397884,-4.119057,-1.060870,9.726734,1.694894,9.894280,-3.305549,3.603657,0.880817,-9.527437,8.897167,3.294344,-7.235670,-9.890085,7.650031,9.968040,-4.891284,3.913411,6.012021,9.597480,-9.403069,6.814446,-3.469918,-3.570897,-8.914968,-6.898593,2.264668,-0.241588,9.820567,-4.871628,6.119862,2.520750,6.962950,-3.698517,0.672708,-3.645305,-1.822015,-7.773821,-4.678181,-2.618968,-5.394026,4.522121,-6.666105,5.780917,-9.937725,7.020161,7.416209,2.973170,4.044450,8.708803,3.707569,1.782475,1.522269,-3.705602,-6.141182,7.386801,-2.433344,-3.900378,-7.588764,-3.134587,8.346176,-8.889322,-1.134133,-8.401790,3.746007,-1.579948,9.387649,-0.650642,-9.175569,-3.136724,5.888447,1.928814,-9.386777,-5.751905,3.117490,2.514205,-2.214131,1.657953,6.005540,2.336051,-1.118010,-6.735090,7.823390,-1.194771,6.846606,-4.458930,-2.027894,-7.834690,-9.597107,0.374846,8.765654,-3.181720,-5.565242,-8.847022,7.976232,-8.920792,-7.321807,5.863727,7.302418,9.478826,7.010223,2.935276,3.565961,-7.646617,1.226308,8.385304,6.876713,-5.436181,1.281088,7.928987,-4.862978,-1.342166,-7.025796,-4.952192,-5.469375,8.351072,-6.273877,4.821730,-4.350653,6.134442,-1.690632,0.334001,-3.592012,7.480843,-3.968819,8.116358,1.955258,0.373812,5.541121,1.791537,0.943042,3.131336,-8.827078,2.489723,4.524333,-7.670174,4.279246,1.276620,9.688778,-4.288786,3.433760,9.678155,7.211524,0.243160,-3.043239,-6.061440,3.601676,2.229919,7.331447,-6.520798,1.531730,-7.228343,-7.895399,5.631357,-6.406957,-6.170399,3.814884,-0.485691,-8.182793,7.697662,2.709545,5.297943,-2.513843,-9.919431,9.739253,-5.763014,4.620197,-5.861180,-2.815986,6.677448,3.300025,-2.418157,3.740735,6.968455,-2.287941,8.683504,6.514214,-7.634832,5.926894,4.595924,-9.724776,-6.283710,-8.023532,5.989075,-6.877585,8.066263,-5.223466,-4.435636,7.777270,-1.954708,-6.427898,1.635027,-8.419809,6.485737,-8.172973,-2.690176,-0.533991,-8.499315,4.637271,5.196029,-3.284925,8.597026,6.497858,7.776240,-5.814032,-5.776205,4.838076,-0.479821,-7.190121,0.601765,-0.418310,8.603782,-4.888712,7.969346,4.239129,1.035092,3.794100,4.473007,-0.574213,0.129323,-3.149038,-0.659835,2.180112,2.215946,-3.370411,-3.553236,-4.638874,-2.329628,5.687128,6.773148,-6.982680,9.153581,0.304893,-1.230664,7.950329,-2.817628,-3.402647,2.756517,9.513665,6.413594,7.100297,-7.994233,9.316384,7.856993,-5.742609,8.351180,5.464677,9.790046,1.752542,7.893846,8.725614,-6.090211,-5.140307,-8.610594,-9.060647,3.293798,6.889176,-8.273112,-8.795194,-4.556816,-6.843997,-4.654466,-6.751767,-8.381050,4.238331,-0.545765,-0.219010,-1.421319,-2.591249,-8.790149,-1.926312,-6.011014,-2.858656,-9.576419,-6.591537,6.925844,9.053252,5.341875,0.108540,9.819582,2.946811,-2.212118,7.982517,-5.033320,1.416500,-9.585341,-2.741811,8.927675,7.462713,-4.711476,-1.192912,-4.792332,7.284048,0.526104,-3.339652,1.750782,-0.523531,5.690502,6.546432,4.704931,-0.225306,-0.923244,0.793304,6.100023,-1.334271,-5.133965,-6.169637,-5.193501,-4.303751,-0.556770,-1.074286,-5.634820,8.087775,-2.279623,5.094403,3.632242,-2.429378,5.806507,-0.211587,-3.696266,-3.063848,5.549282,-3.549343,-5.256103,-9.120278,0.760535,-8.128113,3.882001,1.021983,-3.748383,-5.649787,-9.533778,-5.678186,-7.814190,7.239007,6.469966,2.750249,-2.840684,-7.205202,4.247477,3.666414,5.614997,-0.695223,-7.203808,2.161783,5.795432,-0.641657,-2.187193,2.546385,4.975116,5.492222,-0.839008,-0.509726,-2.346511,8.402567,2.143992,-8.894644,-3.000371,2.350739,-8.557540,-1.391222,-0.206597,-7.338981,0.623994,5.424289,-7.192087,1.575559,-4.973188,9.466312,-8.798026,-0.820446,5.329536,-5.849923,6.853560,-6.955639,-6.989355,6.037889,-6.619530,0.309565,4.471036,-3.939888,-6.996804,-6.965188,4.733415,4.840612,-8.438593,8.343150,0.219039,-9.286446,-6.497242,-6.102324,2.272104,1.079626,0.691210,2.075483,-8.314539,-0.450880,9.777395,8.350458,-2.418663,-4.265730,-4.891440,9.509199,0.508562,-6.432248,-0.135637,2.355251,8.193054,6.959335,3.227877,4.745275,3.870601,-6.918266,3.071006,1.359366,2.903226,-8.509167,-8.238844,3.916416,5.134403,6.550614,-5.592891,8.057265,6.336707,9.504869,3.769045,-3.954743,-4.796873,8.921646,-1.540156,-8.262691,-8.453103,9.893063,-9.406235,0.814261,9.122644,9.974558,8.169602,0.036735,-4.254460,2.451254,1.524820,-5.945833,1.646562,2.789959,-8.420009,6.857294,1.625935,9.716173,5.623267,3.550881,3.513344,-7.541700,-1.405022,-5.052788,-4.867502,-6.504956,8.238772,-0.148500,4.231314,7.026714,3.733453,-5.678202,9.237691,-9.105545,-0.445354,1.811077,-0.782953,-3.775513,9.637410,6.870695,7.768978,-9.152205,-2.353655,9.502744,-8.829199,-0.544418,7.604988,-2.442180,-7.726536,4.752391,6.483454,5.569402,-5.400367,-4.275402,-1.945448,-3.874342,0.343997,-0.524093,7.535342,3.653938,-2.289916,9.071797,8.011122,6.203532,-7.494301,-8.189949,1.924129,4.777770,-7.836927,-6.570670,-1.214490,-1.099953,0.628845,6.177571,-1.007892,-2.112457,-5.335457,-1.706502,-2.997140,-3.580383,-8.937767,-6.317047,-1.328729,8.762735,9.990139,0.109592,-3.353083,2.217861,-7.862867,-1.407075,-9.937812,-0.996754,-5.566156,-7.137363,-3.368566,3.722025,0.387018,-7.729411,-9.951420,-7.006995,5.901748,1.077276,0.335442,2.574613,2.988142,-2.549885,2.497312,0.341350,8.880918,-7.760069,-6.166294,-1.141852,9.062154,6.658403,4.936628,2.163822,1.965301,-6.778660,3.223492,-3.179688,-6.696679,-9.201366,4.935379,0.149105,9.307841,-7.520267,-4.990443,-1.934120,-7.007136,9.942330,7.856402,-8.798088,6.680911,-5.171465,3.231817,3.804544,0.499198,4.516800,6.873361,-1.524823,-9.357958,-7.270121,6.971329,-1.835359,-0.113239,8.730538,-6.931111,-9.834749,3.452856,-0.463997,-5.252082,-1.920785,-6.467785,-5.878989,-5.314917,-8.611629,-1.661522,7.336170,6.390987,2.706441,8.828516,-7.653922,-5.896421,3.782713,2.882740,-5.386858,-0.945358,0.704305,-8.273485,-1.906311,-8.095550,1.481125,-6.110398,3.264002,-9.055338,2.513376,9.201531,4.219728,3.081492,6.135184,8.150303,-8.386935,-8.025129,-7.915629,8.545200,-8.205540,1.701253,-8.398973,-9.463796,-4.134500,-9.131493,1.297493,1.334583,-4.014539,2.612062,9.834144,3.756533,-3.590715,5.661916,1.315128,-3.938082,2.556673,0.063982,4.462105,4.883816,0.337050,0.057991,6.496516,7.646598,4.934961,-1.418667,9.411844,-0.889224,0.042728,-5.161748,0.704480,-7.449289,0.535887,-7.077312,-9.793414,-4.609956,-5.085727,-5.737732,-7.176259,1.568406,-8.049803,-9.279593,9.881746,-6.275029,-2.322258,6.501106,7.527529,-8.009712,-7.617890,4.728474,-8.823373,-4.482123,8.589236,7.911754,-5.043257,-9.437258,-2.687727,6.780815,4.139405,-6.972603,-8.667439,1.273000,-9.587672,-9.041380,6.338618,6.784169,5.590350,-2.946009,-8.431016,-0.094234,-7.089365,1.936451,2.984001,-2.979295,-1.557757,4.416584,0.592382,-2.983120,-0.496400,-2.808885,-2.357008,-5.479688,7.236925,3.142951,-3.546404,-3.536988,-4.659013,1.506007,-7.495099,-8.687613,-0.015152,-4.949537,9.695089,5.050350,8.612553,1.172132,7.332756,-9.671405,-2.654272,-9.296160,6.053427,4.411265,4.056438,-4.706690,-2.722235,-2.128016,-2.939841,-7.339724,-1.450205,4.850984,3.024026,8.620629,-2.278288,0.320172,1.888721,7.616913,1.737931,-7.260648,6.049697,-1.672485,-7.728436,2.306498,9.715293,-4.957739,5.890805,-4.465942,-6.743196,-3.634537,0.416833,1.572006,2.267455,5.332175,8.583467,8.741051,-3.731527,-8.557006,4.159416,2.409404,-6.628869,-5.397115,-5.276737,-4.280489,-6.347532,3.744656,1.542793,1.475457,-1.968390,4.339051,-6.387937,-0.541376,-3.087087,1.056368,-2.688781,2.378876,-3.831944,3.366923,-5.697304,1.506496,-7.921180,-8.944826,4.126481,-8.338313,-3.253211,1.131474,9.773078,-3.979107,9.674629,9.175452,-9.459104,-7.997095,-2.750070,0.332638,2.139512,1.903309,-7.428870,4.440951,4.910084,9.675563,2.992136,3.009619,-3.331546,2.671077,6.109842,-1.844193,4.551920,4.028282,-1.655796,-6.922401,9.247341,6.938660,0.016095,-0.025439,-6.677255,-0.976155,-3.279727,-5.087890,9.359052,-6.618897,-0.395617,2.399877,7.828321,1.055299,7.856818,-8.025361,-3.399377,-3.827149,-6.164320,-3.544717,-8.664702,7.530628,-4.281288,-5.773874,7.527600,6.620708,1.800820,3.764701,9.850513,-0.830928,-7.654511,3.765906,-4.825541,-3.140894,-3.568810,8.898098,0.317434,-5.320252,2.166935,-4.793198,4.546183,-4.460668,-4.957952,-1.811349,9.415816,-8.992030,8.787679,-1.321613,-3.329893,-3.205951,5.561358,8.890651,-6.257458,8.393140,-3.805223,-5.569913,4.133566,-4.209125,-6.194569,5.916076,6.701831,3.787681,6.991948,-4.788227,-1.527185,9.098754,9.328245,8.439639,-2.268003,4.482925,-9.459782,-8.645155,-5.793107,8.712828,8.059547,-6.022488,-2.312495,6.552946,0.844808,0.181436,9.734340,-7.984208,-7.657699,-3.987887,-6.047289,0.536799,-9.185721,-3.441593,3.727654,6.955489,-1.813074,7.651145,-9.369064,-4.916481,5.675189,0.039128,-1.443338,5.134882,3.159744,4.888890,9.321200,-1.456606,4.740589,-0.869699,-1.513214,3.098401,-5.628745,-4.573698,-7.164042,-8.683351,-7.124561,-1.854905,4.926004,2.300292,1.480622,-6.290747,-0.911778,-5.352903,8.202338,-9.149627,8.707765,-3.363796,-8.741826,-8.876810,-9.164959,-7.551010,-9.414224,2.432513,-2.821225,9.041692,-6.553167,-4.826932,-7.299873,-4.911395,-6.450771,-4.362609,-7.002522,8.778656,5.397423,1.267542,-2.195919,-1.019107,-4.844539,6.298499,2.754707,1.797230,-6.111872,-6.560754,-8.759536,9.636107,8.203205,-1.193211,-8.338574,-9.711932,1.026597,7.385092,-7.015335,4.071143,-5.291560,2.467603,0.523415,7.743643,8.453555,-9.725521,-7.792970,-0.770194,3.602694,4.252818,-2.644073,4.953456,-2.541220,6.543648,3.448139,5.429458,3.821184,2.316474,6.329573,8.817700,-0.411166,6.576300,8.136661,-1.178191,-9.855323,-2.245043,6.882119,2.466598,0.505585,-6.700347,2.424170,-4.060194,9.691540,8.683830,-6.969315,7.102713,-6.173363,4.073557,-1.974774,0.282016,1.179045,6.254852,5.921873,-6.716058,1.695625,4.553829,6.667902,-2.071726,3.342832,2.683865,-8.377909,-2.809966,3.228901,-6.869480,6.348579,5.876245,0.422504,-4.695047,0.595439,4.732602,3.172448,2.254833,-8.759647,4.751798,8.348052,2.822140,1.373624,-8.924561,2.965098,-8.297682,-4.950212,-1.328712,-0.489780,7.391119,0.331908,6.643939,5.216588,8.136921,-0.917929,-8.079719,-9.998952,5.173583,8.305574,-2.557240,-3.480410,-0.370336,-3.861288,-0.185384,8.374373,-8.705208,2.512664,4.976403,-2.161755,-8.672714,-3.526023,-1.407045,2.529723,-7.542810,-4.918734,6.520451,-7.722143,5.639417,-2.956599,1.191320,2.475075,0.302423,1.312258,-4.565809,1.933416,-2.900710,9.169463,-1.344697,-7.806060,4.163585,-6.961021,2.359356,-3.892448,3.876358,3.134770,-2.828917,7.809700,7.213890,5.550419,-4.287766,-1.346264,-6.085318,-6.819832,-3.327312,4.006324,8.068734,4.596901,-7.684719,3.615214,-2.440814,6.772796,-1.874761,-7.049560,6.402372,3.604557,3.103413,3.825987,8.985314,-9.462803,-5.998357,7.440135,7.683200,7.189003,1.883084,-2.706492,3.470094,-2.787122,-0.491768,2.649560,-1.965299,7.649543,-7.593516,6.485579,-9.412653,-3.625218,-9.276423,-9.839786,-1.460638,9.806340,9.304259,3.028426,4.959353,-2.471284,6.048044,-6.952348,-0.314274,6.719092,-5.309149,-2.884194,-6.367956,2.015252,-1.631616,9.328658,9.793126,-1.819507,-5.678564,5.755637,-4.504744,1.084336,7.807199,7.978074,7.624869,7.170751,-6.265328,3.075174,-4.088068,4.167331,-9.107393,7.037923,2.219974,-4.215153,7.822837,-5.400600,7.305627,4.091939,7.470027,-5.924957,0.261684,-1.992289,2.899917,4.290045,-1.334167,7.582755,5.689778,7.261976,-8.091505,-3.247776,1.593694,3.565690,-2.344552,-3.287543,-2.971839,-8.704436,-1.024068,5.476853,-5.633189,6.688290,6.585323,-7.797732,5.766311,8.176730,5.191108,4.450497,-1.351216,-6.625745,-6.910479,-5.013284,5.550181,-4.851517,8.143285,-2.418575,-1.992749,6.796577,-6.653518,-8.170974,3.067312,5.008891,2.218884,5.893601,-8.363312,-7.562359,-1.417368,9.299245,-6.426426,7.432855,6.834765,8.809354,5.872426,4.750137,-2.689614,9.572053,7.855359,4.555184,-5.504281,7.153665,-7.118153,5.784649,-5.509441,-1.775393,-1.687553,4.341130,2.327273,-8.977157,4.446624,-4.027477,9.153591,1.754471,9.477641,-0.261551,8.469899,-6.689875,2.607689,4.226412,-3.656316,-9.114980,9.605059,-4.673177,8.671829,-1.705171,-7.996203,-3.082769,-3.999377,-1.895079,-9.470724,2.706619,-5.861857,8.973622,8.934092,-6.123547,4.795927,0.046008,-5.936789,9.264067,-3.114758,-5.905434,5.461566,-7.318526,-2.212726,8.341169,2.924137,-8.299527,-0.669674,-1.314691,-4.728800,9.747115,2.412827,2.350521,-7.392066,3.374165,-7.603574,9.452759,4.668452,4.436859,-0.752198,-0.847221,-3.689396,-9.316451,8.640709,-3.190937,2.399482,5.764166,-4.928194,-6.516081,1.780572,8.085865,8.225541,4.400960,1.219166,-5.792156,9.726496,0.793251,1.375461,-2.283902,-8.737303,1.240702,-2.130368,0.622366,4.389838,8.595224,5.576287,-2.613156,9.647993,6.735058,-4.382852,5.739551,6.772155,6.919842,-9.777277,7.534138,6.879679,-8.400838,8.393475,-6.299141,3.957101,2.463998,8.188576,0.121318,-5.413840,9.903781,-3.977673,-8.625293,0.653316,-6.640757,-9.112103,4.683622,-0.668918,6.260811,4.960079,-8.404734,-4.885212,4.141039,8.587282,-5.226239,-0.338045,6.382197,-8.677780,-6.735815,4.298004,2.281082,-0.455566,9.103979,-2.604365,-2.116809,9.704489,-5.247370,-0.024521,5.578578,-6.735639,0.857570,9.879786,3.797644,8.900387,2.701603,5.014951,-7.995700,5.049840,-3.093754,-3.382887,0.205516,-7.466240,3.297008,-5.821073,-8.742522,8.008413,7.184567,-3.180151,-4.232423,-4.128674,4.979841,7.768991,9.049878,8.416990,-6.283695,-4.892364,6.950879,-2.637847,9.654725,3.026644,9.788989,-5.506440,2.187923,-8.961312,-1.098443,-4.542106,-3.425106,2.032668,-5.777925,6.464960,-2.224415,7.554383,-4.774441,2.846184,-5.937810,-3.149071,6.785689,-1.612743,3.230333,-3.280904,3.304451,4.674207,-8.912739,8.905390,-8.146847,-1.176131,-7.451485,-1.162010,3.222893,-9.567866,8.818196,4.709021,1.276555,0.141009,-9.461344,-4.511128], dtype = "float64")#candidate|6023|(2100,)|const|float64
call_6018 = relay.TupleGetItem(func_5505_call(relay.reshape(var_6019.astype('int8'), []), relay.reshape(const_6020.astype('int8'), [6, 1, 3]), relay.reshape(const_6021.astype('int8'), [130,]), relay.reshape(const_6022.astype('float32'), [12,]), relay.reshape(const_6023.astype('float64'), [2100,]), ), 2)
call_6024 = relay.TupleGetItem(func_5512_call(relay.reshape(var_6019.astype('int8'), []), relay.reshape(const_6020.astype('int8'), [6, 1, 3]), relay.reshape(const_6021.astype('int8'), [130,]), relay.reshape(const_6022.astype('float32'), [12,]), relay.reshape(const_6023.astype('float64'), [2100,]), ), 2)
output = relay.Tuple([call_6011,call_6018,var_6019,const_6020,const_6021,const_6022,const_6023,])
output2 = relay.Tuple([call_6012,call_6024,var_6019,const_6020,const_6021,const_6022,const_6023,])
func_6051 = relay.Function([var_6019,], output)
mod['func_6051'] = func_6051
mod = relay.transform.InferType()(mod)
var_6052 = relay.var("var_6052", dtype = "int8", shape = ())#candidate|6052|()|var|int8
output = func_6051(var_6052)
func_6053 = relay.Function([var_6052], output)
mutated_mod['func_6053'] = func_6053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mod.get_global_var('func_5049')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_6108 = func_5049_call()
call_6109 = func_5049_call()
output = relay.Tuple([call_6108,])
output2 = relay.Tuple([call_6109,])
func_6111 = relay.Function([], output)
mod['func_6111'] = func_6111
mod = relay.transform.InferType()(mod)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mutated_mod.get_global_var('func_6111')
call_6112 = func_6111_call()
output = call_6112
func_6113 = relay.Function([], output)
mutated_mod['func_6113'] = func_6113
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6114 = relay.const([[[10,-5,3,-6,3,-4,-6,3,8,-10],[10,3,-3,-10,4,10,-7,5,-3,9],[-4,8,-3,-7,7,-5,1,-6,4,5],[5,-2,-10,-4,-9,-10,5,4,9,6],[-1,6,-3,-8,8,3,-9,-6,5,6],[3,8,4,-6,3,10,5,6,8,-2],[-9,10,3,9,-7,1,-10,8,1,6],[5,8,4,7,7,-2,6,4,-9,-9],[-9,6,9,1,1,-4,7,-8,5,5]],[[-7,-10,-9,4,1,-6,-4,-8,-10,5],[-10,8,2,-8,-1,2,-2,-1,-9,10],[-6,10,9,-5,1,-10,8,6,-2,-8],[9,-1,10,-1,4,-1,-10,-2,-1,9],[4,10,-5,-3,-3,2,-9,-3,2,10],[-7,-10,-3,5,-7,3,4,-5,-2,-8],[9,6,-10,7,-5,1,9,9,2,-6],[-10,4,2,1,-10,-6,-8,5,1,3],[2,-10,-3,-2,4,-8,7,-6,-1,-3]],[[-7,-10,-3,-4,-8,4,9,10,2,-1],[-2,-9,-10,9,2,-2,5,4,6,6],[-5,3,-2,-9,7,-1,8,-9,4,2],[4,-7,-8,8,-8,-10,-5,-8,8,-1],[7,5,1,4,5,-1,9,-7,10,-3],[-10,-3,5,-1,-9,9,4,1,-9,-1],[2,3,-4,10,-8,2,5,-2,-9,5],[-7,3,-10,9,3,6,-3,-7,-9,-1],[-10,-4,10,-5,-1,8,7,-1,10,-8]],[[9,-6,-3,9,2,1,-5,-6,5,6],[4,-3,-7,-1,4,8,5,8,-9,-2],[-9,10,1,8,9,-1,-10,-5,-1,-4],[6,-10,7,1,-7,4,7,9,-4,-6],[-3,-6,-3,9,-9,-3,-4,8,-3,7],[1,5,7,-7,-2,-4,10,-9,-4,9],[3,10,4,-1,4,-6,-9,-4,6,-9],[-4,5,-2,-9,5,10,9,-7,6,10],[6,-7,-7,-3,-2,-1,-3,2,-1,4]],[[8,-5,-3,-8,8,1,3,1,10,-3],[4,1,-10,-7,-4,8,4,-9,-4,6],[-6,-8,-4,1,2,-6,-7,6,-2,10],[-1,-9,2,1,-6,9,-1,-3,5,1],[-7,4,6,3,2,-5,2,9,2,9],[5,2,-5,3,8,-7,-2,2,2,5],[1,-8,-4,8,-7,5,-6,-7,1,-5],[5,5,5,-5,-5,1,-2,10,6,-3],[-6,2,-5,-5,3,7,-1,5,-2,-3]],[[1,-2,2,1,9,-8,2,6,-3,4],[-10,1,-3,-7,7,1,-5,2,-6,-5],[7,-1,7,6,10,-3,-1,2,-3,1],[1,1,-7,-3,-6,-8,-4,-9,8,-9],[5,7,-10,-2,-1,4,-6,-10,-8,6],[1,-8,-4,-4,-4,9,6,-7,-8,-9],[3,1,-10,4,3,-3,-5,9,-10,4],[-7,3,-2,2,-1,-8,-4,-8,1,-4],[2,-9,10,10,3,4,-6,5,-9,-7]],[[8,9,-6,8,-8,2,-2,9,-2,-4],[3,-7,4,7,1,-6,-9,2,-1,-5],[-5,-9,9,-10,6,-6,-1,8,-6,-9],[-10,5,1,7,10,-8,-8,-3,-4,-7],[-7,1,-7,3,5,10,10,-7,3,-10],[-5,-7,5,1,2,-2,-1,7,4,-1],[6,6,-7,5,-6,-2,-5,-7,8,4],[6,-7,10,6,5,-3,-1,7,2,9],[-8,3,1,-6,6,8,-5,-10,10,9]],[[5,8,-10,5,8,-2,-6,-2,2,5],[7,1,-10,-6,-1,8,8,-4,-3,-10],[3,-7,-4,-6,-6,-6,4,-4,-2,-7],[-7,7,-2,-4,9,6,-6,9,-2,8],[-5,9,-4,6,-5,-7,7,-8,6,-4],[7,-7,2,5,-2,-10,-9,-10,3,-1],[10,-1,-3,-8,2,-5,3,-6,-9,-9],[-5,-10,9,9,8,10,-7,5,-9,-10],[4,-4,9,-1,10,-1,-8,-9,-3,-7]],[[-6,6,-8,-3,3,-10,9,5,-3,-6],[4,-7,-10,-9,5,-5,3,-6,4,7],[-5,6,4,-3,8,9,-9,-4,5,4],[-9,4,-10,-4,2,-4,10,-10,-1,-1],[-2,-1,-1,2,8,7,-4,-1,3,-1],[-9,-3,-2,5,-6,2,-9,3,-10,5],[10,7,-4,8,-6,-4,3,5,-10,1],[-7,8,-8,7,3,-5,-5,-8,-5,-10],[-7,-5,2,6,-10,-10,9,-4,-8,-2]],[[2,-5,-2,-8,9,-7,4,7,-3,10],[7,10,-9,-1,-3,7,4,4,6,2],[-2,2,-2,2,1,9,-1,3,3,-6],[-9,-4,6,9,-2,7,-4,9,-9,1],[2,-5,-9,4,2,-8,2,6,-10,10],[-9,-5,8,-9,7,-5,2,-6,8,-4],[-10,1,-6,10,3,-9,8,3,10,-1],[4,9,-5,10,3,-4,-6,-4,4,-10],[5,9,-3,-9,6,3,-7,-7,-5,8]],[[1,-2,-8,1,2,1,1,3,2,-1],[6,-8,6,7,-2,-9,6,-10,-8,8],[-4,-7,9,-1,4,9,5,2,3,-3],[2,-6,5,-5,-8,-3,2,-7,2,1],[-9,-5,-8,-6,-4,-5,-2,9,8,-8],[-8,9,3,-10,6,-10,-4,1,-1,2],[-7,6,-8,7,-8,4,-8,-6,1,-7],[-1,-3,-3,6,3,-1,-3,-2,-1,-8],[-3,-7,-5,3,10,4,8,-6,-2,-3]],[[8,-7,-1,3,7,-3,4,-5,-4,7],[-10,-5,10,7,4,9,6,-7,7,10],[-1,-6,4,6,-10,2,-5,10,2,7],[9,-10,-4,-5,6,4,-10,-4,4,4],[2,5,5,-3,3,3,-8,9,9,-2],[1,4,-8,6,8,-5,-6,-10,-6,-7],[4,2,-4,-3,-7,10,3,-9,-2,-3],[5,-3,-10,3,7,-6,-2,3,1,9],[-3,6,-4,-8,-10,-9,1,-7,6,-9]],[[-1,-3,3,-1,4,-2,10,4,3,-10],[-5,9,2,8,-7,10,2,-5,9,-7],[5,-9,-5,10,-5,10,-9,5,-6,-9],[10,3,5,4,3,9,1,4,1,6],[4,5,7,-5,2,6,-5,3,8,-6],[-1,8,2,-9,-3,8,-3,1,4,-2],[1,-10,10,8,5,8,6,-9,7,-1],[5,10,-4,-9,-8,-7,-1,-7,4,-1],[-9,4,-5,6,-3,2,6,-7,2,1]],[[6,-1,8,-10,-3,-9,9,10,8,-6],[10,-10,-2,1,10,-4,-1,-3,-2,1],[-5,-8,6,8,1,-7,-4,1,2,9],[-3,8,9,5,6,7,-6,6,4,-10],[-10,9,-3,-7,10,9,-1,1,10,-9],[2,8,4,4,7,-4,8,-10,-4,8],[-3,9,-3,1,-8,10,10,-10,3,2],[-5,-7,-2,5,-4,-9,-9,-10,-1,-8],[3,9,-7,8,2,-9,10,1,3,-5]],[[-1,3,-3,4,5,-10,-1,4,7,-5],[-3,7,10,-3,-6,-1,3,6,-8,7],[-2,2,8,-1,-9,6,-3,-5,-3,-8],[-9,5,-5,-5,1,6,2,9,5,7],[-8,-6,-7,6,1,8,-2,-9,4,-10],[7,2,-8,-9,5,-9,-10,4,5,-9],[3,-4,10,4,7,-3,-3,-4,-10,-4],[-9,-7,-7,6,2,-8,-3,-2,8,-1],[9,1,-10,3,-10,-4,9,9,2,-9]],[[3,9,-2,10,-6,-6,6,-7,6,8],[-8,-6,4,4,-1,2,2,1,-4,-5],[4,5,1,-8,-3,-3,-9,-7,-4,-10],[-4,10,-6,10,-2,10,8,-5,1,-8],[-10,-5,-9,3,-5,-8,-7,-5,-9,-3],[-1,6,10,10,7,-6,-8,7,5,-1],[-4,9,9,-4,-10,9,2,3,-7,5],[-9,-10,-4,-6,-8,1,-8,-3,6,-5],[-4,10,-10,-10,-3,2,6,1,-10,10]]], dtype = "int64")#candidate|6114|(16, 9, 10)|const|int64
var_6115 = relay.var("var_6115", dtype = "int64", shape = (16, 9, 10))#candidate|6115|(16, 9, 10)|var|int64
bop_6116 = relay.bitwise_xor(const_6114.astype('int64'), relay.reshape(var_6115.astype('int64'), relay.shape_of(const_6114))) # shape=(16, 9, 10)
uop_6123 = relay.log(var_6115.astype('float64')) # shape=(16, 9, 10)
output = relay.Tuple([bop_6116,uop_6123,])
output2 = relay.Tuple([bop_6116,uop_6123,])
func_6125 = relay.Function([var_6115,], output)
mod['func_6125'] = func_6125
mod = relay.transform.InferType()(mod)
var_6126 = relay.var("var_6126", dtype = "int64", shape = (16, 9, 10))#candidate|6126|(16, 9, 10)|var|int64
output = func_6125(var_6126)
func_6127 = relay.Function([var_6126], output)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mod.get_global_var('func_6111')
func_6113_call = mutated_mod.get_global_var('func_6113')
call_6143 = relay.TupleGetItem(func_6111_call(), 0)
call_6144 = relay.TupleGetItem(func_6113_call(), 0)
var_6152 = relay.var("var_6152", dtype = "float64", shape = (9, 6, 5))#candidate|6152|(9, 6, 5)|var|float64
bop_6153 = relay.floor_divide(call_6143.astype('float32'), relay.reshape(var_6152.astype('float32'), relay.shape_of(call_6143))) # shape=(9, 6, 5)
bop_6156 = relay.floor_divide(call_6144.astype('float32'), relay.reshape(var_6152.astype('float32'), relay.shape_of(call_6144))) # shape=(9, 6, 5)
output = bop_6153
output2 = bop_6156
func_6181 = relay.Function([var_6152,], output)
mod['func_6181'] = func_6181
mod = relay.transform.InferType()(mod)
mutated_mod['func_6181'] = func_6181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6182 = relay.var("var_6182", dtype = "float64", shape = (9, 6, 5))#candidate|6182|(9, 6, 5)|var|float64
func_6181_call = mutated_mod.get_global_var('func_6181')
call_6183 = func_6181_call(var_6182)
output = call_6183
func_6184 = relay.Function([var_6182], output)
mutated_mod['func_6184'] = func_6184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5239_call = mod.get_global_var('func_5239')
func_5240_call = mutated_mod.get_global_var('func_5240')
call_6191 = relay.TupleGetItem(func_5239_call(), 0)
call_6192 = relay.TupleGetItem(func_5240_call(), 0)
func_2116_call = mod.get_global_var('func_2116')
func_2120_call = mutated_mod.get_global_var('func_2120')
const_6208 = relay.const([[-5.059700,-7.762322,-8.860729,-7.384214],[2.580792,-9.258490,-6.046631,-6.759064],[-9.892287,0.722566,-6.593439,2.230599],[-1.304592,-6.939246,1.154943,0.286071],[2.338161,-2.926039,0.083015,-8.952464],[6.055091,-6.718523,-3.390784,9.056322],[5.475201,1.218860,0.997516,8.465560],[-4.621676,-4.432935,-9.925807,0.898385],[1.805875,-9.335548,-4.996661,-9.769068],[2.033645,8.993089,5.893500,-9.681836],[-4.240064,-8.526982,2.820010,0.703683],[7.659287,1.945818,2.811438,-8.762057],[-9.785468,-9.272165,6.805571,-7.011702],[6.007932,-0.050072,1.830100,4.853630],[-1.639752,7.186892,4.928039,6.676806],[2.010158,-7.418688,4.887316,0.007230],[3.979043,2.520208,-4.166481,-6.481808],[5.235371,-1.142945,5.586505,-4.394356],[9.301001,9.129798,-3.452049,-6.437984],[7.661031,7.556371,7.436450,-6.451424],[-7.618943,5.069814,-3.096928,-4.941055],[-9.198504,-0.287204,-9.575885,3.860279],[-0.979100,-3.104253,-1.813869,-3.559753],[4.383941,-5.566577,5.576364,-4.246249],[-4.985436,-0.831721,2.165180,4.350282],[-1.239523,5.456875,-9.997424,-0.503082],[-1.035448,-8.642305,6.506970,-6.930450],[-6.391607,4.438477,-7.962224,0.842239],[0.200811,6.722381,-9.862262,-7.500846],[-0.347310,8.882362,4.368713,4.793535],[-3.009832,-1.419601,1.059034,-2.200421],[6.707639,6.966230,1.473037,5.941030],[-8.590086,8.585607,3.091323,2.102502],[-5.128878,-2.080757,3.055561,4.767103],[8.239245,4.833615,-8.098716,-9.899217],[-1.957346,7.237673,-3.780778,-8.556976],[3.978739,6.602840,-6.650835,-8.474371],[8.972503,-1.692964,2.458140,-1.170680],[9.200259,4.979046,-1.932853,4.875940],[8.226412,-1.636232,6.887878,-7.669072],[9.571794,4.263211,6.846520,-6.865747],[7.185693,5.634658,-8.992937,3.793352],[4.965851,7.267751,3.488297,-0.153227],[-7.991852,-5.366675,-8.019438,-1.392568],[1.404479,9.856901,-3.369308,3.749467],[-4.773404,-8.808029,6.905205,-4.512458],[-1.407474,-8.505027,-9.958037,-4.113443],[0.954713,6.236089,9.365201,6.328237],[4.501791,0.620999,-2.882287,8.259525],[7.691972,5.893071,-1.489761,-5.819317],[-3.278566,-0.745724,5.806832,1.206379],[9.015245,-5.972105,-2.193541,3.332843],[-4.201646,2.454691,-9.188990,2.716176],[-3.490548,-5.932973,-3.132133,6.059196],[2.125118,-9.662854,-3.772518,8.628470],[-3.043079,3.530374,-5.150534,-6.275273],[8.353017,3.329167,6.679913,-0.978899],[-8.559486,-4.364034,4.400194,8.503933],[9.883347,7.553757,0.162471,2.445965],[6.193665,-3.760724,-6.988804,-4.935878],[1.490481,8.423157,2.862528,-3.832770],[-6.401326,-1.622484,5.611319,-0.899504],[6.895871,-1.684741,-9.018345,-1.243673],[-0.106965,5.035456,-1.472842,4.311508],[-2.349761,-2.565674,-9.613702,9.196624],[3.588053,-4.715921,3.371323,9.223075],[-9.806073,7.669105,4.997573,-4.085926],[-8.123188,-0.887117,-4.141050,-1.617968],[-5.017508,-1.891258,-4.813258,5.173185],[0.199376,-2.877251,-9.816785,-7.369757],[5.463471,-0.304973,4.035600,2.356315],[-4.129214,-3.225038,6.316907,4.355960],[7.267748,-9.863015,3.857610,6.290745],[1.966343,0.130586,9.950974,-4.070938],[7.577458,-6.180304,-0.117411,3.779342],[5.911917,2.229029,-3.643516,6.208151],[-2.234070,5.851368,1.097757,-3.718188],[-1.512192,5.236706,4.210936,4.437448],[-0.133725,-9.462415,7.158805,3.987566],[3.976958,2.066584,-1.622140,-0.647868],[-4.564351,-7.383629,-9.325344,-7.159710],[9.337012,8.756357,5.362828,6.169432],[-4.761308,-7.226007,0.018160,-9.121450],[-3.577001,2.763795,-5.091190,1.503243],[5.393709,5.611626,2.920439,5.747751],[3.332551,7.670209,7.878032,-5.592785],[-8.393489,8.225634,-8.256469,0.841810],[8.873176,4.825060,-6.076079,-7.375986],[5.071660,6.265935,5.583185,4.736745],[8.443422,5.563464,0.517876,-0.865656],[8.902200,-0.339986,-1.871868,-6.350846],[-4.047980,8.532522,1.735060,-2.929236],[6.597238,4.102088,-9.832505,0.897499],[0.669373,-0.305313,-3.271450,0.438059],[-0.874203,-5.271408,1.137029,-8.925140],[-0.830534,-0.320119,8.941831,-2.460327],[-8.591462,5.756389,-5.105822,5.870917],[-1.835137,4.550750,-1.048739,-5.061131],[-7.189692,9.735611,4.825958,8.142056],[-7.234200,1.642854,-2.374151,-0.806156],[6.518749,-9.709828,0.396032,-7.687031],[6.173507,-3.271121,-5.782928,7.683368],[9.782776,-6.459483,-9.419253,4.927288],[8.700742,4.367712,-0.236942,-1.437406],[2.103857,-1.543092,-1.708037,-1.630260],[-8.782656,-8.914264,0.389335,4.354615],[-7.475139,-0.234998,2.348745,1.363939],[-4.471390,-8.381374,0.971344,7.063996],[4.696760,0.612353,-2.508929,-0.252292],[-0.181636,6.982421,-8.621988,8.939546],[-2.705418,3.061581,5.998196,-3.272701],[3.736677,-8.178136,3.285620,-4.966587],[6.078249,6.421869,2.383387,-5.870945],[-5.942448,-6.724302,-4.171389,8.692509],[2.083290,-7.251013,-2.464654,-4.308245],[-9.890344,-0.337863,-2.017750,-4.335674],[-4.565326,6.922188,4.547575,1.598616],[8.286174,-4.572112,3.638193,-5.048142],[9.842800,3.509984,7.961123,2.045542],[5.831057,-0.921372,-9.417990,2.967134],[-6.780090,0.149768,6.891416,5.197817],[-6.765960,-4.318392,0.244885,-9.044804],[-7.775848,-1.765807,6.989485,4.453377],[7.591171,3.587172,-0.893998,-8.157056],[7.269762,6.320781,7.682298,-4.681182],[-3.493146,2.260353,9.785764,-0.263655],[-2.052290,-2.261407,2.257900,-5.559270],[5.305950,-3.855384,-9.393937,-4.954046],[-4.590324,-1.861531,-5.119038,6.575160],[-1.301288,-9.974281,-8.748289,3.080016],[-2.003329,8.612417,1.490587,-3.421256],[0.589961,-1.205775,-5.464015,5.922127],[-1.350014,-8.812079,-9.412246,-1.479320],[-9.884270,9.020909,7.377651,9.911463],[-3.174382,9.558168,-6.043478,-2.927207],[9.894877,-0.296147,2.934628,-8.251377],[2.196144,-7.473842,8.170391,-7.054053],[3.762729,-5.859100,-5.488812,-6.957327],[-1.847799,-1.917643,-8.506881,-7.691063],[-9.655105,1.012952,5.945041,6.204879],[-2.262846,-5.339655,-5.072194,6.660518],[-2.717507,6.180718,-5.035888,9.639473],[0.359736,5.530685,-4.942568,2.748590],[-9.851272,-7.767771,2.055570,4.575904],[5.674931,8.924159,-7.146526,-2.211355],[-6.489592,-9.465079,3.963268,-6.990673],[0.082755,-6.750007,0.139050,-3.083773],[-6.637071,5.432493,1.239565,5.798082],[6.924405,-1.177705,-9.955324,-7.760504],[-0.442872,2.076027,3.669471,2.947033],[6.824573,-6.189327,4.487338,3.102565],[-2.410828,9.635093,9.708263,-7.449028],[1.030449,-3.884319,6.906453,6.183651],[0.343673,-1.373130,-8.894627,-3.110774],[3.240561,-8.940280,2.381543,6.107015],[4.373537,4.997297,2.045094,2.586878],[6.893734,-6.972742,-6.952261,-8.305632],[-6.941926,-7.442568,-2.411340,5.030838],[-7.661532,6.621702,1.342594,2.908245],[3.589380,4.332273,-2.588760,-2.582366],[-7.327464,3.932136,-4.613933,4.897403],[-5.473807,3.058255,-2.345261,-7.793728],[-4.434196,-3.465484,-6.723650,-5.108401],[1.806728,4.675018,-8.415027,8.646186],[-8.411101,-2.526687,-9.338437,-4.290876],[2.966893,-2.038245,-1.191540,-7.552589],[-7.095934,-8.530775,-1.135913,-5.976430],[-9.964999,-3.908684,9.947542,4.602695]], dtype = "float32")#candidate|6208|(168, 4)|const|float32
call_6207 = func_2116_call(relay.reshape(const_6208.astype('float32'), [12, 14, 4]), relay.reshape(const_6208.astype('float32'), [12, 14, 4]), )
call_6209 = func_2116_call(relay.reshape(const_6208.astype('float32'), [12, 14, 4]), relay.reshape(const_6208.astype('float32'), [12, 14, 4]), )
bop_6213 = relay.bitwise_or(const_6208.astype('uint32'), relay.reshape(call_6207.astype('uint32'), relay.shape_of(const_6208))) # shape=(168, 4)
bop_6216 = relay.bitwise_or(const_6208.astype('uint32'), relay.reshape(call_6209.astype('uint32'), relay.shape_of(const_6208))) # shape=(168, 4)
func_3622_call = mod.get_global_var('func_3622')
func_3629_call = mutated_mod.get_global_var('func_3629')
const_6221 = relay.const(8, dtype = "int8")#candidate|6221|()|const|int8
const_6222 = relay.const([[7,4,8,-3,-8,7,7,8,4,-7,-7,-4,9,8,7,3,-10,9,4,5,7,3,5,-9,-5,-5,-5,1,-10,9],[3,-1,-10,10,-4,-3,-6,-7,10,-3,4,-7,-5,-2,-9,2,2,2,-8,3,-9,5,7,-10,1,3,-9,4,-9,1],[-7,10,8,9,-6,8,-1,1,-6,-4,-4,2,-7,9,5,6,5,-9,-7,1,-1,7,3,-7,-10,-7,7,-8,-8,-2]], dtype = "int8")#candidate|6222|(3, 30)|const|int8
const_6223 = relay.const([-5.685681,5.694294,8.830091,3.217286,-7.379482,-7.949227,-8.324177,-0.819799,-0.265883,-4.405402,4.667016,-8.365089,-8.755277,8.235351,-2.395019,-4.030046,-2.358061,5.431460,6.388754,9.427994,-1.082610,0.182551,8.624404,7.189102,-0.984164,-4.404773,7.398706,-6.250103,8.061603,4.921634,-5.218462,-1.163717,3.783398,2.224547,-4.421284,-6.816355,-9.679448,1.910768,-0.722689,1.425945,-6.489520,-0.925431,-7.553003,3.673601,7.029663,0.748380,-8.184662,-9.167653,0.906881,-4.379378,-4.284900,7.525345,0.571155,-8.373340,9.645936,-0.534452,1.187753,0.090623,0.779187,1.937711,7.530199,8.056314,6.442533,9.098197,6.575325,-6.515763,1.651660,-4.422151,5.479273,-6.987001,-6.370859,-8.752375,0.019368,6.594358,0.710282,9.788721,5.432842,-9.980673,7.061740,7.449686,-1.661599,-1.214849,5.000755,-1.965400,-7.105407,-6.133045,9.279136,-2.082604,-5.840374,-1.245272,4.367991,7.093618,-7.465376,7.950469,2.035097,-8.707213,-3.467451,4.374811,7.509178,-4.269320,-1.686234,-4.257960,-6.176559,7.043999,-5.115776,-2.078756,5.957454,-2.257847,5.189463,7.606808,-9.286988,-5.793309,4.182028,7.180090,1.124161,-5.603381,-9.151331,-7.144983,6.391417,6.779211,0.380441,1.989075,0.836896,-1.485992,9.311954,-8.396893,2.114492,5.861595,-4.440389,8.001758,-8.204899,-4.760756,-3.842797,2.663476,-8.515183,2.659065,-2.282492,-8.376529,-2.515376,0.482426,3.243505,4.301061,-0.748624,7.450386,3.753080,2.860015,-9.716313,-1.800840,-1.841925,-4.224808,1.148916,-6.567558,9.651070,8.443138,4.894253,4.664825,-8.637099,7.278608,4.387705,-8.963336,7.027445,3.475329,4.701427,-9.680121,3.943842,-8.313878,-8.059480,8.721158,8.718567,8.036524,8.152121,3.896335,4.725478,-0.411403,5.959567,-3.791929,-0.819444,-4.803550,8.199843,5.757141,-3.072584,2.664255,-7.966725,-8.584634,-0.717719,-1.818234,-8.967409,7.589200,-9.111367,6.348423,-2.159481,-5.937333,1.215490,-7.437651,3.191060,4.269929,8.639275,-2.289130,3.105493,-5.950612,-1.219864,3.427711,-3.598737,7.762885,2.429159,2.696810,-4.227003,-9.188266,-0.245938,-1.068649,0.206155,9.621985,4.375948,-7.319960,-2.509096,-0.625915,-6.113430,-4.783507,-2.154987,9.294372,-0.371003,-0.572997,4.157170,-4.435535,2.305922,4.704729,-9.033602,-5.816216,4.531026,2.940159,2.759655,-8.856223,5.342753,-8.792522,-1.106570,5.156808,-2.950944,0.394426,0.993264,-7.838405,1.545508,3.989889,-2.411380,1.319934,-7.699744,-1.095893,-5.367424,0.042171,5.336969,8.810627,-2.695490,-6.703877,-2.060048,-3.464194,2.410557,7.201577,-1.319611,-2.963832,-8.493058,-4.687836,-5.460324,-3.072173,-5.924851,2.884215,9.266165,2.887025,0.393421,3.711399,-3.640942,5.370763,-2.105533,-4.174203,9.887488,9.435459,-3.017439,3.265671,-8.352220,9.030025,9.782222,-6.518027,6.290993,-5.648595,1.281422,6.655960,0.912499,9.551703,5.547820,7.864028,8.814790,-7.290598,-0.810526,-6.660241,0.623606,0.722707,-5.591087,4.721652,-4.403163,5.053359,4.554660,0.206273,7.267627,-4.264117,-9.444267,-3.668969,3.482334,8.399484,-0.995230,-3.504682,9.354107,-8.752390,-8.660324,7.726857,-2.322266,-2.792043,6.810264,-9.337759,0.235110,2.146247,-8.854342,5.047193,-1.894287,-7.484627,-5.371543,-7.186498,-4.604666,-2.654468,2.397278,7.890972,-0.078785,2.104540,3.556018,-1.371581,3.413068,-7.217915,6.477785,2.168605,-3.683547,-3.575916,-5.317487,-5.846151,-5.032439,4.454757,5.610415,0.227852,2.455546,0.442118,-5.451144,1.688775,-5.306008,-5.993001,2.304070,9.645421,6.834675,-1.803182,8.386383,-4.780715,8.684947,7.191759,5.298395,-6.119023,5.594669,7.749463,-0.279568,1.718572,5.517182,-1.731158,4.420801,-3.793605,-6.898771,8.854400,-2.794642,9.160137,4.843990,-4.516701,0.570733,7.506171,-8.029566,-8.466729,3.665788,1.258207,8.549264,1.139108,-8.391439,7.881127,8.192385,-5.738199,2.311814,8.529328,-6.125426,2.926943,6.333463,-2.440918,4.411612,-4.777193,0.869917,4.881543,5.497127,2.107446,2.140565,-1.982520,0.331194,-4.227594,-6.355097,-0.119603,8.449170,-4.896177,-9.912425,-3.851111,-7.557096,0.571700,9.477533,-2.335502,4.327880,-0.045635,3.126170,1.182336,8.319189,8.424563,-6.307043,-1.535208,1.541685,-1.834417,4.635949,3.556786,7.196724,7.932225,-0.982356,8.888516,-4.262119,-0.886127,7.767618,-8.974099,5.493239,-0.915961,2.517030,7.711663,-7.512247,8.449779,-9.094848,2.958006,2.150593,-6.707302,-6.027276,8.551359,3.836178,-9.412441,-9.180072,1.907102,-3.842708,4.488285,-5.356667,-6.943110,-5.523458,2.620696,5.071716,-1.970334,3.282966,-8.845304,-3.896690,-2.982468,8.677109,-6.733594,-4.992998,4.875374,-1.250182,-8.047327,3.932089,5.151217,-3.850528,-0.989469,6.106567,-4.937078,-5.196524,-4.121238,6.294731,-3.969653,-5.491436,-6.560490,1.820478,4.332598,-2.926039,-3.575832,0.788327,3.726502,-0.324417,6.985849,-7.434766,2.258070,-9.026524,4.433719,-2.287705,-4.581374,0.719815,9.379421,-1.421702,-9.762127,4.931365,-8.791339,-5.769973,-5.407504,8.847674,-9.152968,-4.244517,-0.042432,8.953997,-3.248565,-5.791009,-2.738438,7.580448,-0.052000,5.726355,-1.304070,9.977788,1.948077,-1.289996,6.791132,4.881204,5.919620,1.382481,-0.012511,1.052604,-8.350415,8.982307,6.057504,2.063241,-9.638314,-0.306434,2.402186,0.262299,8.607024,-0.082723,4.444322,-8.093957,6.521435,2.828797,8.440042,-0.336742,-8.927580,-0.409684,-2.321970,0.121193,-3.634627,7.222053,0.573298,-4.038878,-1.168037,1.937520,-5.414335,-7.554435,4.722220,0.613285,0.703463,6.258553,3.653111,9.785224,8.774112,-4.117806,2.363972,8.267706,-7.305730,2.922194,-0.362777,6.319825,1.038323,3.854730,1.791778,3.196813,-1.142990,-9.155370,-7.711403,-3.469888,-1.208485,-5.883585,-9.127351,-4.811738,0.208525,-9.662554,9.130987,8.613610,6.504786,5.003685,5.792148,2.266029,2.286634,-9.132610,-7.779328,0.732637,9.454143,-4.255280,7.218592,5.564782,-5.887890,0.608566,7.190026,-3.923668,1.372471,9.210749,-9.037862,-0.936341,-5.676871,-7.642502,2.026207,3.581542,9.585022,8.451433,-5.611630,1.906044,-2.943163,-3.490753,5.102705,-6.757719,1.405624,-4.580650,7.084074,3.189427,1.466370,-4.985044,-4.037661,3.130018,7.958830,-4.014476,2.460514,-6.448000,-8.507997,7.033623,-7.974772,-0.482520,2.505569,6.179304,-5.378520,-5.423381,-4.202483,-8.326567,-2.961646,-2.042250,-3.851810,-8.428587,8.593896,4.538812,7.316512,8.018280,5.319195,2.297094,-8.714934,8.762297,-0.256604,-8.955625,-3.202827,1.402133,3.915503,-1.795856,-4.663986,9.050034,5.831880,-0.827374,-9.007615,-2.010860,3.413955,-8.748622,9.797345,-2.623791,-5.089165,-8.331030,-2.294873,0.029921,-3.212238,2.229961,-9.497843,-3.025832,-6.441687,0.713952,-7.186348,-2.327373,1.356130,-6.686545,-3.440624,-7.944088,6.790632,9.778827,-7.002641,3.482583,-6.116251,-2.755463,-7.484612,-9.995409,8.527128,8.029118,-4.519066,0.112031,-6.007867,-1.615980,9.944872,7.091241,2.047596,-7.420220,-5.107997,-7.157626,-0.119806,1.031355,1.015216,6.625174,6.823213,2.164442,-4.389224,-5.503238,-9.069431,6.905283,6.560308,-4.354634,2.358985,4.292803,8.657004,-9.262035,-6.700985,-1.776110,-2.070798,-8.674837,-8.822239,6.229263,-7.226913,2.719939,-0.018503,-0.601257,-2.269174,-2.250623,3.458098,8.157265,-9.247012,4.443657,2.533352,-7.665201,2.629290,-9.502207,-9.492601,6.959775,6.176334,5.016551,6.860489,9.837662,7.394998,-6.433716,1.695453,1.385358,1.241592,-6.596743,-1.576816,-0.502933,6.328632,1.761295,-8.780016,1.625651,0.152907,2.240454,-9.328559,-6.191823,7.883813,3.580658,-6.892559,-9.980451,5.483981,4.912165,5.986966,1.904187,-3.339538,2.772312,5.592345,-5.889940,2.572460,-7.348689,-2.686464,3.589983,6.600413,0.282952,3.965294,6.151029,-8.612541,-3.319494,2.222925,8.810806,-4.932940,-9.677334,7.336671,8.980806,8.322854,-6.851268,-8.808449,0.009629,-9.250390,-6.998893,-1.943053,-4.375327,-8.453713,-7.779479,6.115842,1.907942,-7.816356,7.280956,-4.214710,3.375926,-5.113070,4.809615,7.973158,-1.238826,0.159954,-4.456042,5.084819,6.646337,5.480041,7.759092,8.541949,0.622688,-0.215386,6.742469,5.229403,-4.887728,-5.995154,-5.500657,-5.562582,-6.082818,9.540130,1.923164,3.767184,-3.260329,7.582529,2.790159,-3.857351,-5.115324,-3.033415,0.478549,-5.868773,5.064129,-5.661170,1.587951,3.175109,-1.466566,-5.867902,0.860944,-1.603048,-6.828806,7.121481,-9.723886,-8.675929,-9.190354,-5.740581,-9.090561,-6.511306,-7.378400,-0.294942,6.302114,0.641930,-5.268279,-4.946219,2.365056,-3.042956,-4.085939,-2.262217,7.774335,4.895986,5.293043,-2.855664,4.465856,5.949749,1.318790,8.085196,3.568140,-9.301306,-7.433500,4.554669,-6.509975,2.293904,5.366659,3.023002,6.851718,5.482312,0.813138,-3.499245,-7.753407,-0.028627,1.207758,-1.770343,-3.886767,8.743704,3.091595,-3.509842,-1.509053,-0.610859,8.250904,-8.791358,5.123561,6.945648,6.416260,3.245448,-2.698647,9.409746,9.255806,-1.513969,4.204356,-1.512795,2.176782,-1.823889,-2.883453,8.659577,-0.140105,-4.182267,0.933133,-8.008225,-1.531648,-7.437177,1.115574,-2.412645,-7.763198,-0.555897,-5.669409,-2.894281,-8.727811,1.525407,-9.560671,-7.242301,7.054682,-5.151201,7.086160,4.263741,-9.149534,-6.593855,-1.267542,-4.571522,6.504680,-5.726163,9.591400,6.645550,9.786091,-8.691539,-1.808091,-9.482537,-4.763807,-9.625577,-8.684668,4.923011,-6.037110,-9.749527,-3.946803,9.040900,-0.404838,-3.155623,-7.621025,5.358964,-1.127997,1.227039,-2.881666,-0.385218,-0.744899,-9.584354,1.060315,7.727379,5.953010,-5.239104,-5.895710,-3.912508,5.956080,-8.421519,-8.125832,9.887596,-5.087567,8.088066,-9.000349,0.188241,8.991621,5.066263,8.318462,-6.429182,5.458513,-6.549428,-4.570876,-7.284489,2.791607,6.220455,-5.471551,9.456791,-3.078822,0.627328,-6.110334,6.770631,7.726143,-8.801121,-5.734085,1.906821,2.640331,2.091692,-3.825519,5.686133,9.622596,-0.368255,4.696108,-3.336420,-4.934953,2.329180,-3.842546,-3.089361,7.764609,-6.238940,7.078801,9.268754,2.191281,-6.114737,-2.670288,-8.984000,2.590466,3.193020,-9.126294,-4.169453,-2.818780,9.164467,-4.593878,-4.197422,5.306817,7.427661,-7.561051,4.154086,-3.228227,-6.773018,-5.643486,-4.682054,9.558802,-9.798714,3.422212,-2.399852,-9.837415,-0.303738,-5.348483,7.350248,8.125878,-8.091606,6.827903,6.685707,-4.388153,8.173414,-1.361480,-0.778480,0.797508,4.472068,6.961969,-8.698517,-3.079940,-5.474356,0.718899,-8.461520,9.600124,5.201920,-6.335006,-8.077016,-2.349387,3.449877,3.325546,-1.802067,7.577555,3.998165,9.778496,-1.099986,-1.877247,-5.885660,-8.932116,-4.417141,-2.396946,9.096743,-0.697853,2.754778,8.019221,-7.841254,-2.399918,5.537462,-9.820197,-9.901234,8.027930,3.386980,8.699429,6.459178,-4.207303,9.807822,2.020191,-2.037719,-1.162726,-4.901822,-6.008598,-2.794342,2.815141,-7.706050,-5.205898,-1.578683,-2.832018,5.606897,3.914510,5.152199,-4.480759,-7.785516,5.051648,-8.103036,-8.705712,4.918568,9.794211,2.027221,-8.056133,-8.590046,-6.065003,-3.293370,4.732766,9.009606,-4.330076,-7.865237,3.137052,3.045042,5.095194,5.482579,-1.354535,8.770977,-7.448572,2.429767,-2.315226,-3.496782,-0.251817,4.842980,-1.216907,-9.103456,-5.054012,-4.709018,-9.234188,-3.912766,2.311356,7.128076,6.117650,3.579988,-9.762136,-8.859621,-9.769085,3.533521,3.165699,-7.327390,4.054423,-2.689023,-9.297068,-4.620827,-9.455478,-7.301988,-1.859606,-9.074491,-3.128744,9.415827,-8.814182,-6.532078,-8.823480,4.467026,-9.367056,-6.830057,-5.513747,8.351712,1.018967,2.086688,2.759454,3.659053,-7.652385,7.036207,8.889994,1.293541,-8.287530,-4.395291,3.686237,-1.525013,-7.176475,-8.293006,1.507593,5.309281,0.181325,3.279312,-3.867070,-5.133723,-8.738204,-7.252748,-4.496730,7.583091,0.522348,-1.804789,6.805298,-3.929751,9.388989,-6.327581,7.852652,6.810508,6.291108,8.376235,9.995175,-6.230713,7.844288,2.743818,-1.710497,-1.056880,-2.198681,-4.256849,1.059328,1.959459,8.474862,9.327421,8.711808,1.963938,7.300715,8.662391,-3.794607,-2.968144,-5.816855,-4.645973,-8.697153,-1.266813,6.568160,-1.402334,2.082223,9.384829,-2.686609,4.072657,4.977857,-1.723412,4.297535,3.626570,9.407129,9.684316,4.821888,-0.355825,-9.874034,-9.140046,7.045361,-7.749674,9.769218,-4.298173,7.870329,4.271304,-8.598256,4.529835,2.429519,-7.854857,5.547385,-1.734919,9.518916,-7.415200,6.179931,8.490249,-4.883951,-3.392139,3.601228,9.851539,-7.387615,9.048566,-5.415679,3.548163,0.060513,-8.733125,8.692939,2.825280,2.055396,2.352938,-3.674035,7.986181,-5.941952,-0.156829,-8.506410,-7.120721,9.719792,-4.755263,0.132436,9.334344,9.859975,4.966119,5.463334,8.608015,-5.444759,3.846907,0.189147,6.839325,-8.987354,1.153114,9.426353,-3.323217,0.797172,-4.252273,-4.025834,6.506134,0.420043,-5.282067,2.282796,1.148232,-2.789941,-8.597656,-4.116937,-9.698654,-3.887328,6.235639,7.324923,-1.602208,-5.963838,8.380904,-6.429881,-6.254796,4.704285,-9.201010,-7.993639,6.249256,1.516676,-3.816539,5.059171,-9.926108,-1.967166,-1.639020,6.308572,-1.699173,4.861253,-1.649408,-1.883441,-8.946708,-3.230862,-2.713964,-2.051651,4.893497,-2.300265,4.852455,-3.140192,0.693498,-1.453465,9.936345,-7.554548,1.971892,0.426888,2.180774,3.473222,-9.117037,0.360456,-0.115199,-4.160126,0.541381,-9.872223,-1.442960,-2.198017,3.816855,9.551919,7.499496,5.308473,-4.673774,-7.537894,-6.382294,1.365284,1.960470,-6.127924,-8.938595,-4.491703,8.930895,6.962422,4.657196,0.498734,-5.556191,0.330983,-8.853180,-0.196019,-5.393003,-1.668986,-3.100632,4.183507,-1.509933,-2.596912,-9.913771,-8.437587,3.744347,8.272380,-9.599077,3.205666,-1.081086,-8.762946,7.814463,8.365838,0.664492,9.668236,6.317707,-1.217431,-2.295687,-0.074696,8.081469,-9.788721,-4.971703,5.133992,-9.696959,3.590468,-8.604338,7.393980,3.699410,8.943821,-0.277599,-9.864086,2.990587,-7.675709,9.832821,-5.730110,4.851394,3.838236,-6.651320,-6.727413,-8.528213,1.735236,3.555299,-8.427571,4.697694,-2.624852,-6.992942,8.863731,4.815875,4.062711,9.152866,4.309208,-0.928647,-0.182213,0.502531,8.098224,0.920401,-4.296252,4.020778,5.752670,-7.276731,3.309872,-4.287366,-1.446122,-7.328309,9.177235,5.642554,-6.004328,7.402763,8.672397,-4.279536,-6.959517,4.366201,-4.997170,-8.329167,-4.997065,9.253540,7.390855,-2.804925,3.059672,-7.829843,-0.368030,3.579102,7.005590,-8.569607,-2.445627,-7.303359,-2.673488,8.147885,-3.889897,-7.147911,9.523190,-3.945578,1.047446,-5.977752,5.077239,7.571629,5.322128,2.347670,-6.353855,8.136212,-7.369329,5.923298,7.723894,2.225794,-1.795903,-3.105032,-7.654717,5.265104,-8.014159,-3.804016,-8.630837,5.875689,6.444781,-4.775280,-5.060519,-9.395305,2.230952,0.406407,-5.487577,2.704087,-7.111785,-7.651221,-2.958696,4.508585,-6.795088,0.439629,4.271879,-2.188573,6.753071,-1.498941,-2.469420,-8.480230,3.264457,-9.234835,-5.130022,-7.281427,-5.259163,8.042434,-1.688612,9.637638,9.489022,0.149368,6.329062,2.939951,8.443343,3.434273,-3.715756,8.149783,6.947907,1.468988,8.501353,6.732433,1.185956,1.619265,4.902243,-5.038399,8.566517,6.182497,9.449733,2.013173,7.426594,-5.022455,-7.410230,3.439808,7.157570,9.421941,-9.569160,-8.503973,-6.889985,-5.652187,-7.393868,-6.647355,-7.484529,2.737940,-2.429074,-3.863428,2.454619,4.258479,1.322437,6.895632,8.092420,7.072481,2.931848,5.976456,7.421565,6.479912,-9.252138,3.674673,-9.501834,-2.779772,1.731441,-0.975492,3.979417,-9.853997,-8.027490,-5.946098,2.904191,0.338280,8.866999,-9.324462,-6.750985,3.527232,3.453379,-5.048355,2.172799,-3.373897,9.123993,8.606191,-1.166963,5.782888,3.602832,-4.805323,-4.388046,-9.283680,8.306076,-8.795387,-5.872344,-9.590405,6.584065,0.848054,-4.299412,3.563070,-2.710593,-6.024400,1.240704,8.985603,7.117715,7.015239,-5.778648,-3.699423,-2.205736,5.663562,-3.543035,-3.918931,-4.969409,-1.881788,4.503254,9.760309,-5.121413,-5.107966,3.097932,-5.613792,3.880681,-2.034627,2.380137,9.515322,-3.919475,7.432365,6.301532,-7.607083,3.747849,-3.322766,-0.546096,5.162940,8.174833,-9.137904,6.158951,-2.836710,-4.408856,-2.827944,5.022723,8.037861,0.278397,-8.122079,-0.538876,-7.043093,7.290355,-4.580978,-6.565344,-5.392707,4.672175,7.699165,4.322252,-9.985574,-4.712783,-1.830668,-0.058040,5.009046,-0.748275,-2.084043,-5.247490,-8.838831,8.534669,-4.777804,-0.201160,-3.380281,3.188574,5.582573,0.672434,7.920954,-8.589507,5.860496,5.237290,-3.480645,-4.816028,1.044666,-3.177660,-0.207334,-9.452692,4.859432,4.305572,7.555915,2.608098,9.446442,-4.571184,4.276065,-2.094362,1.105733,6.619436,7.105262,9.938163,7.788829,4.091422,5.893091,-2.750124,-4.748937,-4.514056,-3.181118,-7.311539,-9.944482,-1.879758,-3.565800,-5.876725,1.145908,7.726159,1.342704,8.384058,-4.087836,-7.907742,-7.831276,0.419441,-6.340303,-4.878050,4.871546,3.420307,8.457620,8.002959,-0.214639,-6.981696,-8.720904,4.238353,-8.483197,-9.409784,4.555937,-9.090306,4.694434,-9.093787,-7.837425,-6.249432,-0.556165,8.176087,-0.852850,3.691696,6.740660,-4.990197,1.748692,2.944527,-1.117545,9.501050,3.457812,0.666577,3.777385,-0.918278,6.577204,0.409162,-0.967358,2.762258,-2.489787,-6.605046,-2.569208,5.011870,-6.911267,0.902239,-5.355776,-9.823745,6.996867,-3.688524,9.312210,-7.966763,9.298159,-0.544394,-3.563804,-3.665317,-8.192730,-0.157008,9.423167,0.915004,1.916116,-2.735363,6.364719,2.788372,8.955475,0.805752,-1.636524,1.290261,8.491287,-1.317561,4.784016,-9.815934,6.586101,5.771152,-1.371510,-8.336340,7.372822,4.062746,5.256232,1.496525,-7.153671,1.290092,-9.665391,9.368770,2.340619,-0.733172,-3.578760,-0.252806,1.407573,8.159277,-4.819845,3.409764,-3.686815,-4.829545,0.890338,-8.767877,-1.420860,1.691482,-3.174717,2.828231,-3.930777,6.366103,-5.435306,-3.507666,7.844990,-9.791268,2.751636,5.188836,-0.730324,0.150121,-2.110317,-5.005864,2.768523,8.057833,-4.769176,6.461271,-8.511306,6.525708,7.249888,8.255370,0.251996,-4.187306,2.128565,0.437283,-5.882855,-9.203763,-2.427307,5.096315,-4.559136,-4.921908,8.839541,8.664660,-7.904664,3.511896,-2.290659,-1.405618,-1.573797,-8.963906,-4.555582,9.854829,-1.872504,8.588378,-5.390103,-3.437994,-4.853593,2.997043,5.725752,5.904723,-4.016757,6.319380,6.730064,-8.251196,-3.305678,-7.294050,-8.074674,2.441628,9.294727,-2.671773,-2.806311,-7.925095,1.929311,-7.715903,-5.688563,-8.988998,-7.632609,0.382244,5.042416,8.139739,-5.552382,-5.833044,-8.957412,6.403007,3.218022,3.725653,-4.854771,-7.929221,-6.034944,-2.785139,-7.565842,1.684974,-5.754847,5.115491,-7.048981,-3.045989,-7.194640,-0.645216,-1.796060,-0.909378,1.030592,1.943290,8.016276,1.891254,0.689330,-6.405108,-7.495631,-4.258449,-9.515969,-7.780611,0.720864,4.044151,7.454150,-7.712050,5.169129,8.697724,-4.034972,-7.591923,-3.761416,4.722243,-2.789988,-0.152907,4.634820,3.462892,-9.007029,0.218657,-3.832422,8.773875,-6.778611,-8.948646,-8.962194,-5.063867,-3.000821,-9.506268,-2.184859,-8.040372,6.875511,2.341585,-1.394720,-4.570708,-4.875026,-3.796073,-7.978314,-4.005249,4.542262,-7.532270,2.477246,-8.120129,5.080243,-3.401999,7.156345,-1.159572,9.304764,2.804461,9.038882,-9.485166,7.057427,-4.218421,-2.699710,-3.365470,0.863482,0.574345,8.422613,3.740668,-8.339383,-1.059499,-0.407570,-2.312816,-7.400796,9.914612,8.707817,2.346859,-2.355737,-0.999449,0.792511,-9.836142,1.187942,0.419623,-9.621059,-7.182330,-6.587768,-6.393418,3.317094,4.024234,-4.860542,1.076299,-0.310460,1.003807,0.573051,-2.714257,-0.035407,0.421550,-6.105015,5.074811,3.396651,-7.521928,-3.563217,4.527350,0.946071,-2.337669,4.271474,-9.791124,-0.774988,2.696598,4.023883,-2.633870,-7.312771,-7.101011,-1.844165,7.112622,6.132851,-6.529499,-3.852558,4.239324,-5.693269,-8.770858,-0.319554,5.921955,-8.629906,-2.517909,-7.750952,7.392210,-8.682622,-4.843746,9.381094,7.149055,8.750588,4.603600,4.360671,6.430762,-5.730787,2.160260,-2.839453,0.397140,4.067292,8.989353,6.601460,1.806476,-8.648264,-9.850159,5.272441,-9.232609,4.106103,5.140022,-3.046227,-1.623418,-0.359368,5.679276,8.547200,0.991478,-7.116500,-6.643146,4.249744,-9.026648,4.389569,-3.081745,-9.918637,1.073746,-7.209500,-8.378582,-9.997899,9.487850,-5.411917,8.346939,8.718005,4.403445,1.211487,0.102600,9.564202,-4.468681,8.408753,4.876097,7.025574,3.519278,8.399370,3.153658,5.599579,-2.360314,9.266074,0.621486,-6.024562,4.701940,-3.539526,5.684862,-1.497188,1.632403,-7.708092,8.964282,1.011818,6.844994,-8.771039,-6.002778,4.951915,5.016123,5.205923,9.074687,3.389624,7.759285,-6.216970,1.168590,5.207121,-3.323904,-7.836881,7.730271,-8.248673,-7.885755,3.077836,-4.718451,-9.001550,-2.925127,-3.074575,6.234694,-6.567748,-8.420473,7.951698,3.465825,-5.984330,-4.146542,3.187934,-3.477405,-2.852660,-7.334024,-8.398398,-9.906216,-4.182661], dtype = "float32")#candidate|6223|(2100,)|const|float32
var_6224 = relay.var("var_6224", dtype = "int8", shape = (825,))#candidate|6224|(825,)|var|int8
const_6225 = relay.const([[1.230759],[-7.403856],[0.041984],[-0.336525],[1.045272],[-3.753756],[-9.376792],[1.683085],[-5.602901],[9.605641],[-1.288802],[6.709865],[3.638654],[7.239839],[-6.889561],[-0.927506],[2.471893],[0.672328],[3.771065],[4.452478],[5.022009],[6.069836],[-8.715136],[-0.915681],[-0.055824],[-5.988734],[5.928203],[-0.947468],[-3.701560],[-6.840880],[4.568582],[-0.430866],[-3.337104],[3.113454],[-8.314802],[-1.205554],[0.662840],[5.509412],[-7.763455],[-7.605263],[7.246948],[-8.947223],[-5.712562],[4.172677],[-3.512814],[-9.865920],[-2.230579],[6.280305],[-9.595321],[5.696839],[3.985259],[-2.614474],[3.069136],[3.320465],[0.170240],[-5.635918],[-3.771190],[8.966582],[-9.209154],[4.483196],[7.977193],[-3.494758],[-0.999263],[-7.877498],[9.143074],[5.896345],[4.935516],[4.899766],[9.485769],[-9.104952],[-4.365112],[9.639439],[8.314930],[7.919059],[-5.709011],[6.493275],[-7.567450],[2.800131],[6.421531],[-4.498667],[5.263188],[0.527828],[0.705086],[6.619329],[9.982419],[-9.060860],[1.759008],[-9.256361],[-5.811788],[-5.051460],[-0.882235],[-7.215671],[1.547966],[-4.444209],[6.807067],[6.420944],[-7.992693],[0.629360],[4.807142],[4.109587],[6.311822],[-9.060482],[0.237174],[4.124360],[8.920216],[-2.797394],[6.272834],[-0.339154],[0.736762],[1.770415],[6.465620],[1.294605],[-6.014683],[-9.765873],[-6.841351],[-9.707623],[5.278342]], dtype = "float64")#candidate|6225|(117, 1)|const|float64
var_6226 = relay.var("var_6226", dtype = "int8", shape = (13, 10))#candidate|6226|(13, 10)|var|int8
call_6220 = relay.TupleGetItem(func_3622_call(relay.reshape(const_6221.astype('int8'), []), relay.reshape(const_6222.astype('int8'), [3, 10, 3]), relay.reshape(const_6223.astype('float32'), [2100,]), relay.reshape(var_6224.astype('int8'), [825,]), relay.reshape(const_6225.astype('float64'), [39, 3]), relay.reshape(var_6226.astype('int8'), [130,]), ), 1)
call_6227 = relay.TupleGetItem(func_3629_call(relay.reshape(const_6221.astype('int8'), []), relay.reshape(const_6222.astype('int8'), [3, 10, 3]), relay.reshape(const_6223.astype('float32'), [2100,]), relay.reshape(var_6224.astype('int8'), [825,]), relay.reshape(const_6225.astype('float64'), [39, 3]), relay.reshape(var_6226.astype('int8'), [130,]), ), 1)
const_6233 = relay.const([[[-6.590291,-6.712383,-7.477985],[-6.789295,-7.839855,3.759837],[9.647890,-5.807145,2.938448],[-6.152038,5.690799,9.722607],[5.862751,-7.687018,9.902083],[-6.921791,2.284330,0.741080],[1.295942,-5.266940,-7.480123],[-8.343848,3.295496,-5.759556],[4.868113,2.338478,-7.909170],[6.643044,9.457594,-0.574619]],[[8.828894,9.805895,2.929026],[-2.773528,-9.262622,7.816138],[9.726805,-9.147748,-9.576012],[2.315243,2.894863,-7.215754],[4.414578,-7.960817,5.379299],[5.432950,6.243076,1.582500],[5.244896,-2.798913,8.170218],[2.542710,1.674231,5.975396],[-0.275288,9.379852,9.118997],[3.976430,2.628860,-6.759046]],[[0.046743,4.781556,-5.660432],[7.646188,-3.011777,1.642765],[9.903522,-4.347061,3.831008],[-0.012773,-8.667589,7.030522],[0.285916,-9.585482,-2.029764],[9.837085,-4.149366,7.598830],[-7.920710,4.153091,-5.743620],[-7.276125,2.124181,-2.619196],[-0.988008,-2.487310,-4.532261],[4.244757,-5.433052,-8.394641]]], dtype = "float32")#candidate|6233|(3, 10, 3)|const|float32
bop_6234 = relay.mod(call_6220.astype('float64'), relay.reshape(const_6233.astype('float64'), relay.shape_of(call_6220))) # shape=(3, 10, 3)
bop_6237 = relay.mod(call_6227.astype('float64'), relay.reshape(const_6233.astype('float64'), relay.shape_of(call_6227))) # shape=(3, 10, 3)
const_6240 = relay.const([[[-2,3,-9,6,2,8,-10],[1,-3,5,-6,-6,5,-1],[5,8,10,9,2,3,3],[6,-6,-5,3,-7,-10,8],[-6,10,9,-9,1,10,3],[-9,-7,-4,-2,-2,-10,6],[1,5,-2,-9,5,4,5],[-9,-9,7,-3,-9,-1,-2],[9,8,3,-9,8,-8,3],[-9,7,-9,6,2,-8,-4],[1,7,-5,4,-6,-3,-9],[7,2,-2,-4,5,6,1],[10,10,-3,-5,-2,6,-2],[-2,9,-4,-5,-2,-7,1],[8,-9,9,-10,-8,1,-4]]], dtype = "int8")#candidate|6240|(1, 15, 7)|const|int8
bop_6241 = relay.floor_mod(const_6221.astype('float32'), const_6240.astype('float32')) # shape=(1, 15, 7)
func_2116_call = mod.get_global_var('func_2116')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_6285 = func_2116_call(relay.reshape(bop_6213.astype('float32'), [12, 14, 4]), relay.reshape(call_6207.astype('float32'), [12, 14, 4]), )
call_6286 = func_2116_call(relay.reshape(bop_6213.astype('float32'), [12, 14, 4]), relay.reshape(call_6207.astype('float32'), [12, 14, 4]), )
bop_6287 = relay.floor_divide(bop_6213.astype('float32'), relay.reshape(const_6208.astype('float32'), relay.shape_of(bop_6213))) # shape=(168, 4)
bop_6290 = relay.floor_divide(bop_6216.astype('float32'), relay.reshape(const_6208.astype('float32'), relay.shape_of(bop_6216))) # shape=(168, 4)
output = relay.Tuple([call_6191,const_6222,const_6223,var_6224,const_6225,var_6226,bop_6234,bop_6241,call_6285,bop_6287,])
output2 = relay.Tuple([call_6192,const_6222,const_6223,var_6224,const_6225,var_6226,bop_6237,bop_6241,call_6286,bop_6290,])
func_6293 = relay.Function([var_6224,var_6226,], output)
mod['func_6293'] = func_6293
mod = relay.transform.InferType()(mod)
mutated_mod['func_6293'] = func_6293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6293_call = mutated_mod.get_global_var('func_6293')
var_6295 = relay.var("var_6295", dtype = "int8", shape = (825,))#candidate|6295|(825,)|var|int8
var_6296 = relay.var("var_6296", dtype = "int8", shape = (13, 10))#candidate|6296|(13, 10)|var|int8
call_6294 = func_6293_call(var_6295,var_6296,)
output = call_6294
func_6297 = relay.Function([var_6295,var_6296,], output)
mutated_mod['func_6297'] = func_6297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5169_call = mod.get_global_var('func_5169')
func_5170_call = mutated_mod.get_global_var('func_5170')
call_6309 = func_5169_call()
call_6310 = func_5169_call()
func_5169_call = mod.get_global_var('func_5169')
func_5170_call = mutated_mod.get_global_var('func_5170')
call_6311 = func_5169_call()
call_6312 = func_5169_call()
bop_6313 = relay.floor_mod(call_6309.astype('float32'), relay.reshape(call_6311.astype('float32'), relay.shape_of(call_6309))) # shape=(9, 6, 5)
bop_6316 = relay.floor_mod(call_6310.astype('float32'), relay.reshape(call_6312.astype('float32'), relay.shape_of(call_6310))) # shape=(9, 6, 5)
uop_6324 = relay.asinh(bop_6313.astype('float64')) # shape=(9, 6, 5)
uop_6326 = relay.asinh(bop_6316.astype('float64')) # shape=(9, 6, 5)
output = uop_6324
output2 = uop_6326
func_6329 = relay.Function([], output)
mod['func_6329'] = func_6329
mod = relay.transform.InferType()(mod)
output = func_6329()
func_6330 = relay.Function([], output)
mutated_mod['func_6330'] = func_6330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mod.get_global_var('func_5711')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_6388 = relay.TupleGetItem(func_5711_call(), 0)
call_6389 = relay.TupleGetItem(func_5712_call(), 0)
func_2054_call = mod.get_global_var('func_2054')
func_2057_call = mutated_mod.get_global_var('func_2057')
const_6399 = relay.const([4,7,3,8,8,2,7,2,2,3,7,9,9,3,10,4,-1,-7,5,-8,7,4,9,-7,-1,-2,-4,8,-9,-7,-3,2,2,-2,5,1,-2,-4,-10,2,3,4,7,1,2,-6,1,-3,-9,9,7,-4,4,1,-2,9,-9,5,4,-3,-5,3,8,6,-3,9,-4,10,-2,-4,-4,-2,-6,8,-2,-6,9,-3,-7,2,6,9,-6,-10,2,5,-6,8,3,-2,6,-3,7,-9,7,-2,5,-4,4,1,9,1,-2,-9,-4,1,-9,6,2,-8,-9,3,6,4,3,-4,-9,10,-4,8,10,-10,6,2,-1,7,3,-3,7,-6,1,3,-5,-3,1,-8,3,-9,4,-6,-4,-7,5,5,-5,2,-3,8,-9,-8,4,-1,-4,5,4,4,-6,-6,-1,3,-3,4,2,-7,-2,-1,-3,-3,-5,-6,10,6,1,5,2,-7,-2,5,2,-5,7,3,8,-8,4,1,-5,10,-8,9,-4,9,9,2,-3,8,-4,-1,-6,-5,-4,6,5,7,-2,7,3,4,7,-3,-6,4,1,2,6,-10,6,-10,-4,6,3,4,9,-10,-7,-9,-4,-10,-10,-4,10,7,-2,6,-5,-3,-6,-6,6,-1,1,-5,3,-1,8,7,1,-3,-4,10,1,-10,4,-2,-6,-5,-3,1,6,6,7,-9,1,3,10,7,-1,-10,6,5,-7,6,-9,-5,-9,8,-8,6,10,5,7,3,10,10,7,6,6,-3,1,1,-1,-5,5,-6,-3,6,4,7,-5,10,2,8,-9,4,-9,7,-1,6,-8,-4,-5,2,-2,-5,-5,2,2,7,1,9,-6,9,-3,-7,9,-3,-2,6,-3,4,8,7,-4,-9,-8,4,-9,3,-7,-4,-2,3,-1,9,-1,-3,-8,7,9,-6,6,-2,2,8,6,6,-8,-3,7,4,6,7,10,-6,9,7,-2,2,-2,3,-2,-7,9,9,5,-6,-3,-5,-4,-3,10,2,-6,-8,-7,-8,2,-9,-9,-9,-2,-5,5,-9,8,-3,9,-2,2,-5,1,-7,-1,5,7,-4,8,-5,9,3,-3,6,4,8,8,-4,-9,1,1,1,10,8,-7,1,4,-3,-10,2,-9,-9,-6,-5,8,-6,-3,-7,-2,-1,6,5,3,1,-1,7,-5,-6,-1,-5,-8,-8,-8,4,-9,-1,6,-7,5,2,10,5,-8,-6,5,-10,4,6,4,-4,-4,6,-10,-8,-10,1,2,5,9,10,7,-7,-9,-5,-2,6,3,-5,-4,7,5,-3,-6,-6,-2,-10,-10,9,1,-2,2,-2,-9,-5,-2,-8,4,2,10,6,-8,-10,-7,-8,3,-3,8,-8,-2,2,9,1,-1,-3,2,-2,8,-7,-1,5,-4,8,4,1,-3,2,-2,5,-3,-4,-10,5,10,-4,8,-6,-8,6,-4,-9,-1,7,1,9,-10,1,3,9,10,6,-3,-10,-1,-2,-5,-10,-10,-2,-10,-5,5,-2,1,-2,5,1,-4,-10,9,-8,2,5,-6,5,9,8,-7,4,2,-1,6,6,4,5,-7,-10,-10,3,3,1,7,7,10,1,7,-10,3,5,1,1,-2,8,-7,7,10,-9,7,-10,7,-6,5,-9,1,8,-3,-3,1,6,-4,-5,3,1,1,-5,-5,5,9,10,10,-6,-6,-10,10,-4,-1,9,4,1,3,4,-9,8,4,9,-4,7,-4,7,-4,-8,-10,6,9,9,-5,8,3,3,-3,-1,9,-9,8,-7], dtype = "int32")#candidate|6399|(672,)|const|int32
call_6398 = relay.TupleGetItem(func_2054_call(relay.reshape(const_6399.astype('int32'), [8, 12, 7])), 0)
call_6400 = relay.TupleGetItem(func_2057_call(relay.reshape(const_6399.astype('int32'), [8, 12, 7])), 0)
output = relay.Tuple([call_6388,call_6398,const_6399,])
output2 = relay.Tuple([call_6389,call_6400,const_6399,])
func_6407 = relay.Function([], output)
mod['func_6407'] = func_6407
mod = relay.transform.InferType()(mod)
mutated_mod['func_6407'] = func_6407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6407_call = mutated_mod.get_global_var('func_6407')
call_6408 = func_6407_call()
output = call_6408
func_6409 = relay.Function([], output)
mutated_mod['func_6409'] = func_6409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5681_call = mod.get_global_var('func_5681')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_6456 = relay.TupleGetItem(func_5681_call(), 0)
call_6457 = relay.TupleGetItem(func_5682_call(), 0)
func_5774_call = mod.get_global_var('func_5774')
func_5776_call = mutated_mod.get_global_var('func_5776')
var_6461 = relay.var("var_6461", dtype = "float32", shape = (12, 1))#candidate|6461|(12, 1)|var|float32
call_6460 = relay.TupleGetItem(func_5774_call(relay.reshape(var_6461.astype('float32'), [12,])), 0)
call_6462 = relay.TupleGetItem(func_5776_call(relay.reshape(var_6461.astype('float32'), [12,])), 0)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
var_6476 = relay.var("var_6476", dtype = "int8", shape = (825,))#candidate|6476|(825,)|var|int8
call_6475 = relay.TupleGetItem(func_1422_call(relay.reshape(var_6476.astype('int8'), [5, 11, 15]), relay.reshape(var_6476.astype('int8'), [5, 11, 15]), ), 1)
call_6477 = relay.TupleGetItem(func_1425_call(relay.reshape(var_6476.astype('int8'), [5, 11, 15]), relay.reshape(var_6476.astype('int8'), [5, 11, 15]), ), 1)
uop_6480 = relay.tan(call_6456.astype('float32')) # shape=(9, 6, 5)
uop_6482 = relay.tan(call_6457.astype('float32')) # shape=(9, 6, 5)
output = relay.Tuple([call_6460,var_6461,call_6475,var_6476,uop_6480,])
output2 = relay.Tuple([call_6462,var_6461,call_6477,var_6476,uop_6482,])
func_6483 = relay.Function([var_6461,var_6476,], output)
mod['func_6483'] = func_6483
mod = relay.transform.InferType()(mod)
var_6484 = relay.var("var_6484", dtype = "float32", shape = (12, 1))#candidate|6484|(12, 1)|var|float32
var_6485 = relay.var("var_6485", dtype = "int8", shape = (825,))#candidate|6485|(825,)|var|int8
output = func_6483(var_6484,var_6485,)
func_6486 = relay.Function([var_6484,var_6485,], output)
mutated_mod['func_6486'] = func_6486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mod.get_global_var('func_6111')
func_6113_call = mutated_mod.get_global_var('func_6113')
call_6509 = relay.TupleGetItem(func_6111_call(), 0)
call_6510 = relay.TupleGetItem(func_6113_call(), 0)
output = call_6509
output2 = call_6510
func_6511 = relay.Function([], output)
mod['func_6511'] = func_6511
mod = relay.transform.InferType()(mod)
output = func_6511()
func_6512 = relay.Function([], output)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5239_call = mod.get_global_var('func_5239')
func_5240_call = mutated_mod.get_global_var('func_5240')
call_6625 = relay.TupleGetItem(func_5239_call(), 0)
call_6626 = relay.TupleGetItem(func_5240_call(), 0)
func_5239_call = mod.get_global_var('func_5239')
func_5240_call = mutated_mod.get_global_var('func_5240')
call_6631 = relay.TupleGetItem(func_5239_call(), 0)
call_6632 = relay.TupleGetItem(func_5240_call(), 0)
func_250_call = mod.get_global_var('func_250')
func_254_call = mutated_mod.get_global_var('func_254')
const_6638 = relay.const([10,-7,3,-9,-1,7,7,-6,-5,6,-10,3,2,7,2,3,3,-7,1,-9,5,4,-7,4], dtype = "uint8")#candidate|6638|(24,)|const|uint8
call_6637 = relay.TupleGetItem(func_250_call(relay.reshape(const_6638.astype('uint8'), [3, 4, 2]), relay.reshape(const_6638.astype('uint8'), [3, 4, 2]), relay.reshape(const_6638.astype('uint8'), [3, 4, 2]), ), 1)
call_6639 = relay.TupleGetItem(func_254_call(relay.reshape(const_6638.astype('uint8'), [3, 4, 2]), relay.reshape(const_6638.astype('uint8'), [3, 4, 2]), relay.reshape(const_6638.astype('uint8'), [3, 4, 2]), ), 1)
const_6644 = relay.const([[[-5.523898,6.383965,1.630958,2.055098,-2.263373],[-5.367386,1.112775,6.416525,-1.974068,-7.444013],[-0.499672,0.700566,-2.940831,-5.348420,-9.611716],[-1.321665,4.866797,0.601175,7.230894,5.621328],[-3.043483,3.073201,5.581613,3.909717,6.603501],[-5.491699,5.892532,-0.047264,6.687866,-5.718891]],[[-4.161596,-4.859019,4.941254,9.930615,-8.535668],[-7.396929,-5.155293,5.702758,-4.445928,-8.482020],[-4.862138,-7.822428,-3.934290,9.992345,6.477243],[3.942341,-3.820963,6.924053,7.403045,3.926551],[5.796515,-6.093680,7.808085,8.747277,1.965971],[-9.380086,-2.041259,0.715437,2.147728,-1.852272]],[[2.802195,-6.316411,-9.067465,0.671969,-4.491165],[7.074188,-4.477500,-9.954906,2.881302,-9.954703],[1.063432,5.261489,4.455204,-4.668860,2.343930],[8.760387,6.622558,1.174640,1.284138,7.575143],[1.254796,-9.957843,4.560401,1.715035,-7.597096],[7.919361,-0.396886,-6.405802,7.259761,-8.730528]],[[7.100690,1.769355,-9.048410,-6.902605,2.140265],[3.447455,3.704311,6.274921,-2.935807,7.018924],[-6.739082,-9.726679,4.058689,-3.488592,-1.531314],[-0.246957,-7.934164,-6.348103,-8.269442,-7.123141],[-9.566546,-7.541957,7.294983,-2.521010,-7.711339],[8.799668,-4.000826,-0.637742,-1.225334,6.423346]],[[0.969539,-6.307248,0.629617,-4.941774,-6.895425],[-4.269563,8.831457,-2.761861,-4.013525,-1.672455],[-4.999742,9.420257,-4.527723,5.715382,-5.201621],[0.579513,-0.060398,6.229059,-4.754123,0.604533],[-2.623836,3.007739,-4.234699,2.028640,2.092423],[5.405687,5.740745,-8.758553,-0.619808,-4.582740]],[[-0.292422,3.595753,9.403091,9.927215,-6.920845],[-8.449471,-9.814886,-8.502152,7.573210,0.213579],[-1.911149,9.097117,4.384387,9.880388,5.951031],[-9.295256,3.306946,-7.383291,-5.559253,-7.538560],[-8.593343,1.148274,-6.707250,9.926520,6.154987],[-0.729713,5.073253,6.535628,-6.157395,5.502776]],[[-0.365517,3.310436,8.565212,3.603907,5.035568],[-3.999613,-5.604412,-8.917762,-1.903773,9.337711],[-5.771176,5.313254,1.510116,-4.977740,6.588248],[1.304598,2.673725,0.960596,-4.886268,-9.446655],[-4.560424,4.281438,8.012841,7.436514,6.879842],[9.173303,5.897741,3.600910,-5.605266,-2.978982]],[[9.872417,4.053450,-1.113118,0.425891,4.411373],[5.773982,3.266927,8.790144,-0.198068,-3.086832],[6.182116,-0.522244,-5.159827,0.553752,7.939678],[-1.144076,5.752702,-5.128982,-2.268476,-4.172404],[3.592284,3.154582,-9.810486,4.813039,1.625590],[-9.240078,-8.660315,6.577505,-8.623763,0.695343]],[[-7.443617,7.019337,1.863013,-3.039637,5.392594],[-7.701541,-8.754258,9.140313,-3.273333,9.311227],[-8.738938,-7.226888,-6.716456,2.735529,-4.661750],[1.565214,-0.343879,-7.709189,-0.724474,3.595103],[5.292998,-8.011308,1.564326,-8.951930,3.574887],[-0.323573,2.538017,-5.344121,-2.620514,-8.064438]]], dtype = "float64")#candidate|6644|(9, 6, 5)|const|float64
bop_6645 = relay.greater(call_6631.astype('bool'), relay.reshape(const_6644.astype('bool'), relay.shape_of(call_6631))) # shape=(9, 6, 5)
bop_6648 = relay.greater(call_6632.astype('bool'), relay.reshape(const_6644.astype('bool'), relay.shape_of(call_6632))) # shape=(9, 6, 5)
output = relay.Tuple([call_6625,call_6637,const_6638,bop_6645,])
output2 = relay.Tuple([call_6626,call_6639,const_6638,bop_6648,])
func_6651 = relay.Function([], output)
mod['func_6651'] = func_6651
mod = relay.transform.InferType()(mod)
mutated_mod['func_6651'] = func_6651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6651_call = mutated_mod.get_global_var('func_6651')
call_6652 = func_6651_call()
output = call_6652
func_6653 = relay.Function([], output)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6654 = relay.var("var_6654", dtype = "uint64", shape = ())#candidate|6654|()|var|uint64
var_6655 = relay.var("var_6655", dtype = "uint64", shape = (15, 5, 7))#candidate|6655|(15, 5, 7)|var|uint64
bop_6656 = relay.minimum(var_6654.astype('uint64'), var_6655.astype('uint64')) # shape=(15, 5, 7)
output = relay.Tuple([bop_6656,])
output2 = relay.Tuple([bop_6656,])
func_6665 = relay.Function([var_6654,var_6655,], output)
mod['func_6665'] = func_6665
mod = relay.transform.InferType()(mod)
var_6666 = relay.var("var_6666", dtype = "uint64", shape = ())#candidate|6666|()|var|uint64
var_6667 = relay.var("var_6667", dtype = "uint64", shape = (15, 5, 7))#candidate|6667|(15, 5, 7)|var|uint64
output = func_6665(var_6666,var_6667,)
func_6668 = relay.Function([var_6666,var_6667,], output)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mod.get_global_var('func_5711')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_6676 = relay.TupleGetItem(func_5711_call(), 0)
call_6677 = relay.TupleGetItem(func_5712_call(), 0)
func_6329_call = mod.get_global_var('func_6329')
func_6330_call = mutated_mod.get_global_var('func_6330')
call_6690 = func_6329_call()
call_6691 = func_6329_call()
func_5681_call = mod.get_global_var('func_5681')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_6709 = relay.TupleGetItem(func_5681_call(), 0)
call_6710 = relay.TupleGetItem(func_5682_call(), 0)
output = relay.Tuple([call_6676,call_6690,call_6709,])
output2 = relay.Tuple([call_6677,call_6691,call_6710,])
func_6713 = relay.Function([], output)
mod['func_6713'] = func_6713
mod = relay.transform.InferType()(mod)
output = func_6713()
func_6714 = relay.Function([], output)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6329_call = mod.get_global_var('func_6329')
func_6330_call = mutated_mod.get_global_var('func_6330')
call_6739 = func_6329_call()
call_6740 = func_6329_call()
func_5897_call = mod.get_global_var('func_5897')
func_5899_call = mutated_mod.get_global_var('func_5899')
call_6743 = relay.TupleGetItem(func_5897_call(), 0)
call_6744 = relay.TupleGetItem(func_5899_call(), 0)
var_6752 = relay.var("var_6752", dtype = "float64", shape = (9, 6, 5))#candidate|6752|(9, 6, 5)|var|float64
bop_6753 = relay.less(call_6739.astype('bool'), relay.reshape(var_6752.astype('bool'), relay.shape_of(call_6739))) # shape=(9, 6, 5)
bop_6756 = relay.less(call_6740.astype('bool'), relay.reshape(var_6752.astype('bool'), relay.shape_of(call_6740))) # shape=(9, 6, 5)
func_5298_call = mod.get_global_var('func_5298')
func_5304_call = mutated_mod.get_global_var('func_5304')
const_6761 = relay.const([1.333796,-5.421888,6.724277,-9.920565,-3.141224,1.631371,-2.099737,-6.969955,5.573299,6.649502,4.785815,-5.577750,7.767891,0.304990,-1.388487,3.424222,4.217209,5.757603,-2.079021,-0.765967,-5.112348,-8.760160,2.678617,1.672254,5.438907,0.992421,-7.054121,-4.983373,0.091950,0.527780,-1.095037,8.022212,-2.477916,-6.802886,-8.513895,3.938668,-8.150203,7.171876,-7.433323,-8.768341,0.190028,1.841587,-3.927989,9.552241,2.368630,0.678392,5.578313,2.732579,5.107187,3.283441,8.181298,8.692841,-8.861887,0.079151,8.730267,-7.240504,3.425639,8.681109,1.075446,9.782647,4.036482,-8.969206,0.642391,-5.804923,-9.376934,-0.130065,7.941705,4.509543,-1.056775,-0.826737,1.075254,-2.837568,-9.082727,-9.940527,-7.344562,3.800921,-1.379557,1.016303,9.962076,-7.192675,2.528198,8.949130,-3.491338,-2.458339,-3.459390,2.610636,5.686678,-6.452653,5.382662,7.055081,5.713334,0.333672,0.423613,7.025080,-9.214470,-3.524147,5.846908,-0.912828,-4.953360,-1.342377,-3.560445,-0.064190,-5.421290,6.037419,0.094234,1.369124,6.855201,-4.080561,9.336476,-3.502376,-9.928284,1.416721,-5.952727,6.533734,-0.403638,7.331060,5.647006,-0.874374,4.032863,5.866676,1.944784,9.651136,6.937533,5.973128,6.419708,1.175106,-2.998512,0.008275,-1.021155,3.538085,3.675510,9.774125,3.120631,-0.905770,-7.247168,5.626314,-4.814362,-1.331102,1.891055,3.255009,0.655913,-8.155682,2.930355,8.481588,-4.241621,3.113321,3.543918,9.386981,-2.130213,7.789573,4.618101,-6.788264,9.133915,-3.660546,-8.815973,-2.913326,-4.804766,6.194978,-6.133269,7.679548,-6.201457,-5.730656,-2.317013,-0.674312,9.063299,3.656104,-6.026386,2.716416,-4.906534,-1.420045,5.883347,7.163584,0.403036,5.823272,1.554250,7.290717,2.882176,2.942464,1.298394,3.228959,-9.941292,9.688201,-1.650212,-7.947010,-6.979565,-2.525951,6.740249,3.430703,-4.359697,5.204561,-9.795254,7.290655,-8.572526,2.650076,-0.196790,3.327749,9.448085,-3.566527,5.897864,-7.711789,3.637698,1.761182,-8.593328,-1.050274,4.016164,-3.842028,-5.051008,-3.101250,8.581764,-5.471036,-9.187865,-3.273795,-9.013737,6.634237,2.018371,-8.907680,-4.794733,-6.194839,-8.556851,-4.490445,-2.701123,5.542232,-9.779057,0.290502,6.410333,-0.683516,8.256030,5.612067,6.999954,8.445595,4.434110,8.981960,3.525683,-6.646287,-5.816930,-0.529102,-0.883483,8.645638,5.549634,-4.609859,-8.937931,-5.178014,1.571443,-0.991728,-0.380181,9.914914,8.588482,-8.397498,-8.947152,-5.788811,2.026409,4.348376,1.532540,-1.875727,-3.140506,8.709582,3.372484,-0.865467,-6.692256,7.477364,7.709844,-2.858795,-2.348719,1.438906,6.224354,5.361736,-1.897415,-2.065117,-0.468253,-9.231216,4.256634,1.514214,0.907908,3.107187,-1.984600,0.340385,-3.118257,-2.558258,-0.784109,9.894637,-4.207841,-3.483055,-5.652593,-7.503178,7.608953,0.018024,-9.751964,-6.755539,-4.946913,2.296615,-0.115842,-2.414650,-2.448490,1.374694,2.622981,6.134415,-7.239897,-1.168882,-1.288541,6.318296,-6.559741,8.863201,5.065754,-1.960700,7.851363,9.799573,-0.381145,-0.429280,-8.016460,6.185585,3.377970,0.572138,-9.054777,-2.452319,-4.061070,0.584676,-9.764302,-6.111741,-7.071658,8.665905,-9.541405,5.207699,9.604782,-7.767989,-1.998856,6.606568,-9.584103,1.882157,-4.652373,5.355642,1.183620,1.335927,4.052352,5.950886,8.047727,-5.945842,7.112587,-7.794729,1.116237,1.998852,3.181294,7.331257,8.755674,-5.594246,-6.161944,8.687347,-5.560773,0.547404,-1.162351,8.245152,-4.899128,7.114777,-5.151705,-3.885908,-8.055240,8.375896,-0.690896,7.518901,7.613926,4.240363,-0.989992,5.012777,-1.290781,-1.250318,7.096043,-3.876835,9.499751,-7.024697,2.276356,-5.978097,-2.810551,0.401296,-1.604854,-8.489875,4.420363,-5.705293,-5.616930,-6.668152,-6.914763,5.240847,8.142986,7.230160,-0.430673,-4.182976,-3.058468,1.883151,-7.946318,5.379950,-9.912328,-7.971972,-4.909847,1.143988,-8.129568,9.574012,-3.411293,-9.159269,-4.007923,6.788069,3.327363,-2.777334,-7.326143,-8.596737,6.007400,8.129255,-0.963115,9.721341,-8.724465,7.624239,-1.580174,-6.521426,-7.653169,-9.177157,-0.929684,6.134749,6.270345,-9.002899,7.803463,-6.556075,-8.927826,-4.402053,8.568548,3.645744,-8.646309,-4.635744,9.348612,-6.736469,-1.872495,-0.108661,-7.729790,-4.923806,-8.426868,2.055419,-0.192602,-2.028172,4.610363,5.536404,-0.003261,2.168270,2.437420,7.843975,-9.394295,-1.911085,5.081923,1.660118,-3.001431,7.856068,-1.424629,8.597892,6.778532,-7.229351,-5.026366,4.430566,-5.163054,-2.757772,0.950565,3.083796,5.054293,-3.957428,-0.465989,-0.125236,5.867946,4.357435,-9.846284,-5.381185,-3.676782,-2.605933,-3.747689,7.405877,-2.093790,3.631756,-8.116059,3.002448,-9.145761,-4.015797,-1.700460,-3.533480,-6.918074,0.679621,-0.282630,-3.769907,-5.763406,8.580957,5.879017,-3.662480,-4.632389,8.569028,-3.909786,-4.097771,-9.663005,3.860074,0.232800,-1.430672,-9.211366,-7.765456,-8.900622,6.323338,-0.215949,7.550955,-0.800813,3.151705,5.846766,4.733357,-5.622317,5.105162,-3.005210,4.621417,-9.900983,5.386868,4.706568,5.197945,8.904963,8.547592,6.716033,2.089298,-8.424489,3.526433,8.339020,3.185223,-9.450418,-8.300327,5.080250,7.847099,3.582873,-8.124486,-0.590124,-9.554645,6.295905,1.747988,9.585342,-0.018742,-6.296485,9.485375,-9.455556,7.635265,9.955450,9.234622,5.792033,-6.965423,8.830385,6.633406,-0.912162,9.752074,6.507785,8.115385,3.999378,-1.099715,5.328131,6.973892,-5.278659,-3.102860,-2.093160,7.714482,-3.042631,9.366906,-5.302427,-3.616457,-4.998581,-5.412415,-9.419250,-7.591503,8.983079,7.870116,3.282597,-9.758903,3.572513,1.552895,-4.453629,9.404047,0.369703,5.874820,-9.703738,-1.402673,9.172917,-0.203231,-7.221861,-0.121838,-2.945825,-1.297219,-5.337959,9.454582,-9.266185,-4.945935,9.714336,9.605733,-0.821108,1.843702,-3.305193,1.044029,-5.033576,-0.578472,0.178233,4.580568,-0.603625,2.573357,-9.343398,7.736944,9.832550,-6.266175,4.737255,3.563824,-2.449355,-5.847245,2.183606,-1.477610,-7.862997,-9.926716,0.003390,5.940706,-3.721551,5.327938,3.630631,2.181758,-2.698169,-6.072681,0.424528,5.719152,-9.734517,4.953197,0.613251,9.172527,-2.654817,0.315842,1.956273,0.199359,4.653052,0.453450,9.149149,-8.773079,-6.259314,-5.839331,-7.929906,0.506198,1.047846,-1.996889,-9.352209,-0.253825,-3.580649,5.496399,-0.585830,6.758992,8.841768,1.250584,4.276278,-5.840593,-6.244903,3.715818,-9.206885,6.139507,2.728183,-3.609158,5.681047,-4.265034,7.564373,-2.143309,4.970823,2.557878,-9.971689,2.638149,-2.654601,0.680614,-4.053024,-0.050528,4.415173,7.003844,6.219551,-3.945317,-1.321986,-5.072211,-5.016475,-2.823040,-1.432214,-3.363455,-7.094528,-1.012189,8.598080,3.989633,3.753151,-9.534358,4.506177,5.057474,-2.906682,6.984833,5.078833,-6.326262,-6.301699,5.436207,-8.172180,6.476782,4.549301,-7.338104,2.626428,0.669769,7.288060,1.152322,0.184590,5.132991,3.048579,-5.299317,9.293598,-8.397776,2.981236,-7.245491,-8.015792,-4.517266,-1.197419,-2.559854,-9.640148,-7.810325,-2.964343,-9.642969,-3.652117,1.555838,5.521043,-8.815926,-8.972190,-2.027740,-8.175867,3.086648,4.644249,4.447386,-0.138953,1.141702,7.481866,-1.703626,-6.830064,4.249850,3.793070,-2.561157,-4.159356,1.205245,2.201177,5.436122,-1.135637,-3.058691,-4.852011,9.415267,-7.197758,-3.512879,-9.723930,4.116200,9.396158,-8.357489,6.690141,3.074181,0.644261,-7.492492,6.494881,0.039535,-0.173482,1.323942,8.642289,-4.008886,0.760202,8.933098,9.731420,-0.338838,1.460302,1.132835,2.693688,-8.991496,8.759498,-0.927135,-5.628772,5.931874,4.103653,-6.144712,8.446400,-1.676838,0.432376,5.719008,-2.308429,1.586938,-3.345206,-6.549757,-9.774421,-4.049490,4.160543,-6.331993,-1.641506,7.110189,-9.752339,-6.092045,-6.487339,-1.784587,-1.507490,-7.401962,-5.910367,-8.073058,2.975636,-5.092746,-5.213207,0.550557,2.402515,4.884539,6.391683,-5.196852,-1.938618,-3.572219,3.004080,-9.439659,-5.761643,4.386374,5.935093,1.391252,-4.465152,-3.678243,-6.319170,3.173761,8.925948,-6.467530,4.227248,-5.795467,2.190513,-5.981512,9.238803,5.850470,7.395131,-3.930210,-0.762154,4.700508,-4.437991,3.865922,-2.195419,-2.816250,-0.939073,-2.523888,8.947628,0.132926,2.226585,-7.387567,8.545210,-5.877085,-3.505630,0.013701,-6.060781,1.071952,-4.289232,-8.834320,4.288758,-9.571941,8.063089,6.656552,5.121119,7.878947,-9.745023,7.156949,4.494866,5.182712,2.556020,8.447839,3.042115,-3.598651,2.125976,-2.178663,7.257204,-1.202488,-3.405094,-4.478396,0.557631,-8.543203,1.578887,9.296413,-5.879809,-8.142688,1.884036,7.772347,-4.017614,-3.412327,-3.159411,6.358908,4.223440,-3.123590,0.891587,1.398032,5.040100,5.206526,4.084123,1.851212,0.891103,2.992443,6.443279,6.645147,-1.183531,-8.017723,1.122135,1.576947,3.494956,-8.126157,-1.417355,2.384168,8.191698,-7.622238,2.059494,-8.977614,2.518660,4.285974,7.327764,-9.073405,-9.007349,-8.553171,-9.885182,-4.375252,-7.002073,6.054813,-6.371986,-7.339538,9.744969,1.232763,-0.588911,9.989881,3.552461,9.011803,3.176102,4.823244,-3.144504,5.432101,4.486107,-1.017547,-7.184595,-5.393310,8.422817,8.362579,8.795026,3.546844,-0.687379,2.149859,-7.448805,-3.005453,-4.834780,7.414097,-0.298434,-9.914241,7.256890,6.341200,-6.201214,-9.635159,-7.721332,-1.153668,-8.707473,4.096538,-2.890593,0.913698,1.399611,-3.184843,2.505902,-3.317223,2.330668,1.656274,-5.750449,-5.128885,-2.301372,-2.337929,-6.077994,-9.457228,-0.469126,-7.141578,-9.902438,4.401280,2.707966,6.286845,-5.982817,-1.492923,-1.398326,-8.578595,-0.281918,5.509922,7.560080,0.364451,-2.232835,4.762810,-2.167119,3.633884,6.617484,-4.746302,8.575058,1.010413,-6.137852,4.319172,1.507114,3.665442,-3.419061,-1.103431,-4.039051,-2.113185,6.004007,6.343117,8.399836,-4.946407,-3.722243,9.857618,-0.659282,8.160784,5.790166,-2.569908,-5.017472,-7.176201,-2.967462,-4.375452,0.368742,-5.764113,-3.350613,-6.766130,-8.663062,-0.838962,9.540030,-6.755614,-2.826322,-6.545700,-7.503473,-4.179727,-1.070637,-1.969706,4.542604,0.871397,2.566083,9.499453,-8.302764,2.041841,-3.589500,4.539286,2.329741,-1.910961,3.283209,9.709522,2.835649,-9.083151,7.554032,-6.469684,7.630713,7.117840,3.218057,9.458903,-5.654471,0.614221,-5.412376,-0.825334,-7.330016,-7.230327,-5.554162,-2.992030,4.144675,7.403029,1.840694,-3.245135,-5.680199,6.298238,-2.344633,2.746811,5.627081,-5.959684,8.289775,6.536022,1.328664,7.622397,-4.118664,8.273792,-6.604215,-1.247187,-6.022458,-2.536717,-7.268681,0.654168,-8.579232,0.175684,0.214825,-0.909089,-0.881789,-2.274052,6.954633,1.508947,0.958946,2.731292,-4.736699,4.535337,-9.339432,4.191533,4.718090,-3.319382,2.210312,0.346986,9.327600,2.243987,-1.623760,8.901627,9.308667,6.387913,3.525095,-7.179338,-3.697815,-8.896633,1.519663,3.932185,-4.844304,6.809261,4.226012,-8.563039,-3.211022,-3.203283,-2.459109,-1.101867,9.249909,-6.199209,-4.898824,-5.936367,5.045213,-9.277100,-1.103381,6.104961,8.731594,-9.035601,-8.660784,6.017707,-0.845719,5.921265,4.549028,-3.378300,8.560360,9.644011,7.803341,-3.534058,-9.438297,2.423503,-2.862310,-9.544984,5.573999,-0.454303,2.733274,-0.213244,2.402240,-3.641079,3.238388,4.486404,-4.396584,4.990101,-4.850281,-7.673834,-3.823977,1.225708,-0.743112,-3.324794,-6.661289,9.606906,-6.873139,6.937409,0.706117,-4.742081,-1.844792,9.356301,-1.314422,-4.710011,-2.164097,2.927180,5.335700,2.019046,-9.417139,8.189090,-0.775451,3.644279,7.929659,8.909829,-0.093625,6.589888,9.311690,9.512104,4.419943,1.631438,-8.542455,-2.280617,8.865385,-6.846162,5.420559,1.512880,-4.370700,-6.617521,0.937651,3.780864,7.933633,3.967602,8.757282,-4.398005,-8.221292,9.745769,9.771433,-4.064907,1.551374,-9.632346,2.046745,8.092120,-7.916255,0.215561,0.820905,-3.529339,5.875421,9.011304,-4.871091,-3.502755,0.722223,-1.922405,0.589589,-2.458528,0.823244,-0.902096,-2.087281,-9.676292,9.666059,-4.190966,-8.873992,-6.504749,-0.870149,5.139381,9.472124,-7.229315,3.976951,7.888209,0.655083,8.598296,0.443598,3.226536,4.671815,-1.389548,0.231450,4.690466,5.844351,-0.551741,-7.000540,9.898137,6.194168,-5.597374,-8.605507,2.186665,7.652130,-0.590679,-6.179644,-4.243015,9.968827,7.944456,-4.760123,7.661248,-7.398256,0.470708,0.343508,-1.356797,-1.855801,1.215977,0.577592,6.121126,3.630567,9.915351,9.754869,-5.822211,-1.974970,-5.290471,-9.215554,3.524281,3.024210,6.028613,3.981107,9.649857,6.236248,-7.475023,6.914164,1.722407,6.320857,4.076369,5.673388,8.848730,1.973970,-6.011529,1.909870,-9.840236,-2.802432,2.514106,0.341741,-5.359351,2.558283,5.985767,-9.571074,-0.173244,6.205862,-9.925364,2.244584,5.256322,7.316312,-1.179740,3.647478,7.739993,3.456907,7.611606,8.655631,8.593162,-8.544064,-4.068233,0.625932,-5.594140,-0.740424,3.893991,-9.980215,-0.484554,-3.782145,8.595752,0.989677,-1.132686,5.963010,9.753188,4.347367,-9.879400,-4.625121,-1.682360,4.773797,-8.959819,6.114989,2.263582,-8.349646,-7.452483,-7.638859,-5.647297,-8.173577,-7.502353,-6.186914,3.174252,-0.579595,3.929894,-6.357438,1.131935,-5.087366,0.910232,2.450076,-7.097701,-9.869814,7.231896,-5.518669,-7.530423,-4.231644,-9.840817,-7.205475,-7.450736,3.046252,0.172444,3.023430,8.410731,2.633703,0.737632,0.069548,-9.649340,-0.816149,2.283975,-5.794492,-7.732335,-8.157420,3.961780,-8.726344,-5.573807,-4.281436,7.129039,-8.898236,2.546404,8.467256,-9.705903,-6.142848,-2.468396,-8.838928,8.977372,3.565831,2.419403,6.409075,-8.413323,-4.475875,0.343452,3.761101,-2.250386,-9.024087,9.974987,7.773750,-3.685145,-0.774383,-2.344821,-3.514959,5.543589,7.472697,-3.090384,-8.663513,-6.245452,6.795760,7.571197,-3.372669,-1.299874,8.799571,-5.104649,2.048556,3.713642,2.484610,6.586352,6.230951,4.642723,4.659546,6.784606,1.504839,7.024308,-3.996554,4.964684,-8.952460,6.176563,4.893671,-4.924618,-5.241293,-0.414044,-6.732582,-4.045405,4.046250,-4.555886,8.364714,-3.337767,-3.130674,8.270066,-9.513845,8.584176,-2.090965,-5.624954,3.562620,-1.747110,-0.457439,3.259616,-9.053623,0.954517,-3.951094,5.374529,2.490906,-6.364501,5.354812,-6.215973,-6.553659,-6.252608,-6.210437,-2.741072,-8.419037,-1.416075,8.984140,5.729564,3.259599,8.872740,-4.938527,0.765254,-1.139732,8.865341,3.632800,1.684372,-2.779947,-8.117220,3.889959,-4.779081,4.362781,-3.787818,-1.965422,2.500138,-2.857230,6.841636,9.047318,5.483099,-7.536159,3.234019,-7.442001,3.820269,-9.874479,-6.573076,-1.619451,4.316371,3.701707,7.680991,3.269351,0.034225,0.805015,7.659091,3.417874,1.185868,4.459170,3.988504,3.864166,-0.501799,-2.006686,5.552616,5.535794,-1.196002,5.191241,1.059779,-6.032914], dtype = "float64")#candidate|6761|(1485,)|const|float64
var_6762 = relay.var("var_6762", dtype = "uint32", shape = ())#candidate|6762|()|var|uint32
const_6763 = relay.const([6,-8,-7,7,4,3,7,3,5,-3,-5,6,-5,5,-8,10,-8,-8,-1,-8,-4,-10,-9,6,-1,6,-3,-5,-7,-2,1,-9,-8,-5,2,8,4,-7,-9,1,-2,-5,9,-3,-10,-3,5,-1,-1,-6,8,10,-1,9,10,1,6,4,6,2], dtype = "uint32")#candidate|6763|(60,)|const|uint32
var_6764 = relay.var("var_6764", dtype = "float32", shape = (468,))#candidate|6764|(468,)|var|float32
const_6765 = relay.const([9,2,6,4,1,8,-1,-2,-6,10,9,-5,-3,2,-6,-4,3,-6,1,3,-3,4,9,-2], dtype = "uint8")#candidate|6765|(24,)|const|uint8
call_6760 = relay.TupleGetItem(func_5298_call(relay.reshape(const_6761.astype('float64'), [9, 15, 11]), relay.reshape(var_6762.astype('uint32'), []), relay.reshape(const_6763.astype('uint32'), [30, 2]), relay.reshape(var_6764.astype('float32'), [468,]), relay.reshape(const_6765.astype('uint8'), [6, 4]), ), 4)
call_6766 = relay.TupleGetItem(func_5304_call(relay.reshape(const_6761.astype('float64'), [9, 15, 11]), relay.reshape(var_6762.astype('uint32'), []), relay.reshape(const_6763.astype('uint32'), [30, 2]), relay.reshape(var_6764.astype('float32'), [468,]), relay.reshape(const_6765.astype('uint8'), [6, 4]), ), 4)
bop_6773 = relay.mod(call_6743.astype('float64'), var_6762.astype('float64')) # shape=(9, 6, 5)
bop_6776 = relay.mod(call_6744.astype('float64'), var_6762.astype('float64')) # shape=(9, 6, 5)
var_6778 = relay.var("var_6778", dtype = "uint32", shape = (60,))#candidate|6778|(60,)|var|uint32
bop_6779 = relay.left_shift(const_6763.astype('int32'), relay.reshape(var_6778.astype('int32'), relay.shape_of(const_6763))) # shape=(60,)
uop_6787 = relay.sin(var_6752.astype('float32')) # shape=(9, 6, 5)
output = relay.Tuple([bop_6753,call_6760,const_6761,var_6764,const_6765,bop_6773,bop_6779,uop_6787,])
output2 = relay.Tuple([bop_6756,call_6766,const_6761,var_6764,const_6765,bop_6776,bop_6779,uop_6787,])
func_6802 = relay.Function([var_6752,var_6762,var_6764,var_6778,], output)
mod['func_6802'] = func_6802
mod = relay.transform.InferType()(mod)
mutated_mod['func_6802'] = func_6802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6802_call = mutated_mod.get_global_var('func_6802')
var_6804 = relay.var("var_6804", dtype = "float64", shape = (9, 6, 5))#candidate|6804|(9, 6, 5)|var|float64
var_6805 = relay.var("var_6805", dtype = "uint32", shape = ())#candidate|6805|()|var|uint32
var_6806 = relay.var("var_6806", dtype = "float32", shape = (468,))#candidate|6806|(468,)|var|float32
var_6807 = relay.var("var_6807", dtype = "uint32", shape = (60,))#candidate|6807|(60,)|var|uint32
call_6803 = func_6802_call(var_6804,var_6805,var_6806,var_6807,)
output = call_6803
func_6808 = relay.Function([var_6804,var_6805,var_6806,var_6807,], output)
mutated_mod['func_6808'] = func_6808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mod.get_global_var('func_6111')
func_6113_call = mutated_mod.get_global_var('func_6113')
call_6853 = relay.TupleGetItem(func_6111_call(), 0)
call_6854 = relay.TupleGetItem(func_6113_call(), 0)
output = relay.Tuple([call_6853,])
output2 = relay.Tuple([call_6854,])
func_6858 = relay.Function([], output)
mod['func_6858'] = func_6858
mod = relay.transform.InferType()(mod)
mutated_mod['func_6858'] = func_6858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6858_call = mutated_mod.get_global_var('func_6858')
call_6859 = func_6858_call()
output = call_6859
func_6860 = relay.Function([], output)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6894 = relay.var("var_6894", dtype = "uint8", shape = (5, 4, 11))#candidate|6894|(5, 4, 11)|var|uint8
var_6895 = relay.var("var_6895", dtype = "uint8", shape = (5, 4, 11))#candidate|6895|(5, 4, 11)|var|uint8
bop_6896 = relay.not_equal(var_6894.astype('bool'), relay.reshape(var_6895.astype('bool'), relay.shape_of(var_6894))) # shape=(5, 4, 11)
func_5711_call = mod.get_global_var('func_5711')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_6900 = relay.TupleGetItem(func_5711_call(), 0)
call_6901 = relay.TupleGetItem(func_5712_call(), 0)
output = relay.Tuple([bop_6896,call_6900,])
output2 = relay.Tuple([bop_6896,call_6901,])
func_6909 = relay.Function([var_6894,var_6895,], output)
mod['func_6909'] = func_6909
mod = relay.transform.InferType()(mod)
mutated_mod['func_6909'] = func_6909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6909_call = mutated_mod.get_global_var('func_6909')
var_6911 = relay.var("var_6911", dtype = "uint8", shape = (5, 4, 11))#candidate|6911|(5, 4, 11)|var|uint8
var_6912 = relay.var("var_6912", dtype = "uint8", shape = (5, 4, 11))#candidate|6912|(5, 4, 11)|var|uint8
call_6910 = func_6909_call(var_6911,var_6912,)
output = call_6910
func_6913 = relay.Function([var_6911,var_6912,], output)
mutated_mod['func_6913'] = func_6913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6329_call = mod.get_global_var('func_6329')
func_6330_call = mutated_mod.get_global_var('func_6330')
call_6943 = func_6329_call()
call_6944 = func_6329_call()
func_3507_call = mod.get_global_var('func_3507')
func_3510_call = mutated_mod.get_global_var('func_3510')
var_6960 = relay.var("var_6960", dtype = "uint16", shape = (252,))#candidate|6960|(252,)|var|uint16
call_6959 = relay.TupleGetItem(func_3507_call(relay.reshape(var_6960.astype('uint16'), [9, 4, 7])), 1)
call_6961 = relay.TupleGetItem(func_3510_call(relay.reshape(var_6960.astype('uint16'), [9, 4, 7])), 1)
func_5836_call = mod.get_global_var('func_5836')
func_5842_call = mutated_mod.get_global_var('func_5842')
const_6987 = relay.const(-6, dtype = "int8")#candidate|6987|()|const|int8
var_6988 = relay.var("var_6988", dtype = "int8", shape = (18,))#candidate|6988|(18,)|var|int8
const_6989 = relay.const([2,7,5,-10,9,-7,-7,-4,2,-2,-6,-9,-3,-9,1,-4,1,4,9,4,8,-5,-2,-9,-3,-1,2,-3,5,9,3,10,5,1,7,-1,7,-1,-5,5,-3,-8,-8,-1,-10,-8,2,-8,-3,-8,-4,-7,-7,2,-1,1,-5,9,1,-6,-10,3,-6,8,9,2,-7,4,9,7,3,4,-8,-3,4,-9,8,6,-4,-3,-2,-6,-6,-4,-6,-5,-10,7,3,-6,-1,-1,10,1,2,9,-9,-3,-5,1,8,10,-6,-6,9,8,-9,-9,6,5,5,10,-8,10,9,-5,-9,5,-4,-6,2,-10,-5,-2,-10,7,-10,9,1,3], dtype = "int8")#candidate|6989|(130,)|const|int8
const_6990 = relay.const([2.347828,4.429754,2.995034,9.537038,0.126634,-4.779588,-3.021355,2.144197,2.708390,8.232105,6.499467,-1.185327], dtype = "float32")#candidate|6990|(12,)|const|float32
const_6991 = relay.const([-9.139932,-3.938841,3.290999,1.619763,2.640883,9.552122,8.400909,-1.024487,-2.853931,-8.384596,-2.821552,-3.601108,-7.222113,6.257918,-0.912753,-2.644633,4.641454,-3.581054,-5.222949,9.075250,-7.114225,1.399381,-1.445924,4.751185,2.454916,-3.488093,-4.923126,6.168827,-3.425580,-5.884853,-2.661968,7.270763,3.259072,-5.826770,6.388889,6.275794,-2.912902,-8.075145,-1.503032,8.290296,1.010352,0.313773,-4.696142,-9.712597,1.164329,6.443804,8.556900,-9.920968,0.302764,-6.294638,-1.677654,-1.702650,-6.149949,-0.419531,3.364734,-7.051398,3.684309,-2.484242,9.009382,-2.035109,9.403965,-8.064939,-2.799270,4.966594,1.559106,9.437195,4.292735,-5.684024,-1.253659,-8.265568,-3.092344,-7.585733,-0.199289,0.952014,4.714309,6.087860,9.438603,2.556696,-6.270204,2.548098,-5.179380,3.951066,9.523535,-2.380793,-3.474212,6.353216,0.177517,1.398097,-4.352069,2.369946,-8.872764,-8.302293,-8.700367,-9.615266,-2.397294,-6.404655,-3.324501,-0.667920,0.531056,8.514842,0.820864,-8.068669,-4.049085,-1.951839,-2.795004,-6.062883,-5.002280,8.777803,-4.079006,5.346220,6.073780,4.410485,-6.538478,0.570410,-8.869595,9.478298,0.941738,0.898109,8.677972,-2.011545,3.309697,9.096601,4.258462,8.422220,-5.238725,-3.278837,-2.840619,8.417669,7.215065,4.198209,3.253257,8.573678,-1.513933,-2.755683,9.856724,-5.416244,9.856267,-5.151924,-9.446754,-2.204767,4.777835,-5.170407,-3.010316,-4.683673,3.455023,-2.370078,-4.802511,8.456158,-5.099514,1.006278,7.624213,-5.568032,4.570498,5.118157,-9.680613,-1.263623,6.219423,-9.963113,-8.184409,0.441354,-7.269509,-1.006600,-7.167520,7.153605,3.153291,-2.028793,-7.372872,1.825830,3.539615,5.832939,-5.897230,8.942992,1.364883,9.529637,-5.724745,6.221497,-8.319193,-2.226020,2.141364,6.822039,-9.336063,1.596278,4.153494,-4.238114,-6.666843,-7.026452,5.972298,-4.009685,5.327656,-8.194049,-1.437621,-6.140231,9.950772,3.462971,1.238223,9.662767,-4.029355,-2.068970,3.797056,4.685436,3.764553,-4.490607,4.062586,4.863356,-3.876319,0.047261,2.333664,-9.816037,-5.825176,7.382233,-6.756688,6.493168,-6.426903,-8.278097,-8.375874,5.264832,-8.036213,-4.445395,-5.665919,-5.261274,5.347972,0.343646,-0.035841,5.343796,-4.993832,-4.800066,9.661996,1.162298,9.933348,0.544831,8.828210,7.320825,-5.437861,-0.640217,4.505899,6.239252,-2.718736,7.577871,-1.830672,2.862955,-3.622969,-3.407618,9.951076,9.677295,2.210587,-3.237608,7.571271,-2.844083,3.668690,-7.231600,-1.161378,7.283460,-8.114736,3.180308,3.201754,3.192054,-2.805739,4.432639,-9.485615,-2.774011,6.672506,-2.754502,6.976904,-9.512847,8.944987,8.346116,-5.472212,-2.779038,-4.404942,-4.299548,-7.862157,4.200934,5.834824,-9.812250,2.802867,0.991586,0.547237,5.683286,4.035892,8.663040,-1.773814,-4.066471,9.971387,4.383226,-3.703813,3.460544,-0.450109,0.827792,3.534752,3.667430,-5.239000,7.528127,-6.141145,-5.705255,-1.240938,4.844610,8.672154,-7.142948,-6.245140,-3.900361,6.096575,-1.256813,-9.144717,0.016791,3.372676,-1.004373,3.858483,-6.169193,-8.498209,5.063833,-0.100732,4.251724,-7.411886,0.535566,7.641644,0.281002,1.822309,-4.580474,4.485653,-1.800204,-6.878189,3.969577,-2.335687,-5.072109,-1.523964,-3.373855,-9.229965,-8.890992,1.613150,5.478608,5.462622,1.019482,-3.219433,-6.509269,3.956843,2.023548,1.410689,1.961453,-9.840742,-3.215908,-2.003863,9.014602,-8.512980,7.572584,9.565458,0.857012,-1.109460,-5.413297,-2.375171,-4.338795,3.604576,-2.047156,-3.234583,-7.354619,9.859237,-5.216732,2.739368,-5.633600,7.487971,2.527173,-5.906805,-9.837477,1.692505,-8.172727,0.574291,5.690406,-1.098374,-7.893048,-6.889588,8.065496,6.174253,7.208747,1.642778,3.804375,0.492261,-1.590009,7.959796,-9.573335,0.189122,-1.691662,-5.784562,3.177939,4.792609,8.783187,-2.735464,0.091632,-7.201438,9.569295,-7.493190,8.533638,7.467025,-5.242195,-6.175984,-2.479231,4.231410,-7.642312,-5.628065,-7.421488,0.903589,5.762030,-0.927688,-5.179263,7.507738,-6.349347,-0.150763,-4.331957,3.387677,-7.398208,2.483466,2.988897,7.724717,-4.103336,5.957872,-9.063084,4.885600,1.007748,-4.766788,-9.384132,0.423008,-0.431520,-6.958760,3.635095,6.588739,5.496763,-1.995834,2.561750,2.124059,-3.460731,-7.457645,9.715823,-4.609647,3.321682,-9.771255,0.479606,-0.684413,1.045512,-3.877033,9.743073,-1.631636,-7.999581,5.335149,7.437072,-8.081278,-3.417815,-6.681412,-5.173852,-9.623624,0.866195,2.806924,-3.686413,-8.825359,3.771821,-5.920427,-2.683972,6.912837,-1.714193,-4.917076,2.804116,0.468620,6.305406,-9.639851,-3.027201,1.596842,5.581577,-8.692484,2.658027,-4.245123,8.600783,9.884615,6.092656,7.458281,6.491112,2.371463,-6.155427,-7.119433,-4.089052,7.347559,5.501837,8.149011,6.633206,-2.276098,-0.159203,9.579608,-5.154554,-1.731528,-8.297288,8.148493,5.175960,-8.929316,6.500262,-0.713173,4.030886,-5.885320,-8.125336,-3.530983,-9.932327,-0.678640,3.548934,-8.916473,-4.718711,3.625869,-1.481389,8.157769,-4.369978,3.765331,-2.255201,8.043350,0.760430,4.061979,2.813081,-5.604400,-2.931373,9.104403,-3.388617,8.872339,-2.780512,8.745587,6.099562,-5.233965,9.634569,2.600832,0.511454,5.237321,4.736022,8.209604,-7.090679,-9.118947,-8.078343,-7.239845,6.180271,-2.152539,7.611921,3.121100,-0.440653,-8.338421,5.214846,9.715592,-5.994369,-8.065114,0.812217,6.978920,7.373752,5.623869,0.888760,-9.186476,8.814190,-6.567819,0.972003,-7.228212,9.038337,9.060021,-3.052741,-9.770026,5.315544,-6.698802,-8.853574,0.228563,2.666383,0.786778,-8.197343,-7.506517,-3.075723,-4.079097,-1.449326,3.492305,7.417788,-2.794141,-2.290554,2.911262,3.379634,-5.053462,5.938254,1.636365,-8.273115,9.221942,9.413507,1.068040,-0.923753,9.789769,-5.513797,-5.847248,9.549400,2.818316,8.341002,6.060171,7.464130,-1.248804,7.092299,9.605281,9.711362,4.077527,-0.281753,-7.951331,-7.238663,5.126513,0.062728,3.533091,7.332728,-6.593499,6.492258,4.605896,1.282392,0.558766,-8.170922,5.201534,4.560966,-4.542046,3.830167,-3.227618,-7.435045,-4.752996,9.317557,-4.643490,-3.157190,-3.716461,-9.859890,-5.966371,0.920636,1.494949,0.937590,3.779926,2.539739,-3.782204,6.710924,-7.945164,0.180195,3.903559,-1.749226,3.147593,-6.200710,-0.125162,6.051472,-2.849977,-3.446257,-2.954024,-2.398804,-6.704153,5.559743,-8.776353,3.913711,-9.243032,4.529981,-9.672811,3.904037,4.862823,4.188565,8.108442,-8.684073,5.481297,6.725880,-3.410496,-1.374641,2.494127,-0.346587,-6.268724,-3.907565,-9.132965,-2.822423,-9.714121,-1.007717,9.214097,3.168050,-5.975690,-7.372899,2.868150,-4.929319,-1.637013,-9.162851,-0.001423,9.853211,2.934508,-4.021621,-1.911775,-3.164655,-9.093341,-1.140689,-3.605807,-2.573523,9.955395,-5.786220,-0.116498,0.433793,4.106143,-3.337184,-3.683649,-9.536866,-2.930288,1.353444,4.405173,2.480491,-5.458219,0.934085,9.401133,2.073502,6.038748,1.412619,-9.247293,-7.408665,8.059889,-6.577532,-2.019930,7.260525,2.806836,5.762727,-2.991243,-5.790393,-3.936201,3.317879,-3.282253,1.860315,-5.392126,1.968011,0.413879,7.918164,2.239609,-6.130041,-2.174312,-0.828765,-9.598334,0.046583,-0.474777,4.594215,3.485296,-0.473608,4.296071,1.910233,3.677144,7.697696,-9.548195,2.063199,-1.811404,-6.981747,6.928190,-1.115341,-1.968113,-4.325698,4.509317,-4.987098,-1.052443,-1.878566,-7.925174,3.947870,8.508638,-5.961871,3.936720,4.050164,8.197205,7.654690,-5.301087,-6.936317,0.377743,5.504997,-1.932832,9.891408,-6.491041,-3.791929,-8.949982,-4.624815,-8.665292,5.392185,-5.642840,0.526938,-7.914148,-9.488116,-1.238437,-7.240791,3.593584,9.462034,4.342476,-3.534948,-1.808524,-0.818651,7.083527,-6.174236,8.407792,2.847238,-0.571357,8.527321,3.204931,5.968671,-1.294150,6.152805,8.427675,9.540498,-4.198690,3.169376,-6.260964,2.262244,-6.580419,-3.871174,7.835455,-4.296489,-2.618083,1.361365,5.757866,-4.609750,-9.917902,-2.291520,-5.253501,-5.266022,9.631480,7.682722,8.725105,1.458205,5.419061,5.738768,-2.311666,-6.474825,1.562386,-3.904295,6.348055,-6.746717,3.283629,4.534595,-9.645543,-8.508995,5.765144,5.554643,-2.465378,1.214516,-4.118251,-6.837068,-0.444054,-2.126883,-8.033181,-5.198560,0.279314,8.900966,1.669422,-1.748813,-4.956785,-5.642586,-0.144121,-8.022626,-3.990099,-9.164999,-6.482718,5.555676,-4.360173,-3.753820,1.845081,-6.627912,7.575954,0.987950,-5.868860,-2.173006,-6.929547,4.537589,2.982694,6.023440,7.312228,-9.712495,-3.274715,-9.605674,2.248229,-9.412863,2.055699,2.373201,-3.302559,-1.046528,-6.260984,-2.057660,1.280789,-2.048435,6.229182,-8.470556,9.500913,2.410960,4.711531,-7.928341,-6.113299,6.492908,1.185495,6.696734,9.497565,3.848022,-6.302229,-8.684749,4.253779,-8.011085,-6.718906,9.392334,-0.558284,4.395729,-9.809977,-1.391925,-5.072850,-9.007670,7.585503,-7.821774,6.815691,-4.829779,7.120812,7.819717,5.557046,9.402581,3.785396,-3.684808,7.461334,9.255257,2.277027,8.253842,7.631600,-9.514466,7.437061,2.872424,-5.995750,-5.426263,-2.425617,-3.836878,-6.993565,9.286257,-5.289283,0.384654,5.149742,7.107861,-9.741753,7.519507,-1.658137,-1.689759,-5.793727,1.669817,-9.714522,-7.629268,2.351937,-8.339631,-7.313060,5.259856,3.707504,7.008096,3.436974,-2.918700,7.535353,3.505821,3.503401,5.571873,2.699145,-0.763695,-8.668346,-5.884039,9.297686,3.317831,-6.484419,-7.375078,7.178029,4.067554,-9.973412,4.148444,5.113894,4.991664,-8.982141,-8.135018,1.273232,4.646272,4.026451,-8.265628,5.525100,-9.948436,-1.590777,2.485186,-7.292511,0.969193,-0.275222,-0.090687,2.677318,-2.551568,-9.047278,-2.382554,5.747905,-5.245657,3.175371,6.984415,-9.668540,3.623179,-3.607972,6.944552,0.583819,8.946368,5.331143,2.345909,-3.930369,-4.327748,-0.889479,-9.904078,2.831917,-9.052990,3.317273,0.340093,5.365463,3.975816,0.122936,4.200082,4.233561,2.717469,-1.145546,9.517259,-0.453822,-5.138602,-4.373085,6.967109,3.903566,7.686475,6.788290,-1.658562,4.537941,9.792788,-1.648282,7.172962,5.537858,-2.072041,2.491402,-3.072916,-5.661626,-4.909593,-2.521769,-0.362760,6.656631,-0.249702,-7.004096,0.788123,-8.951065,-7.073843,4.607428,-4.143219,-0.219343,8.877051,0.055769,-0.922982,-8.309149,-6.291838,-4.086556,-9.707020,-6.271109,-1.404916,8.915994,-9.125354,-6.076324,1.326818,-4.544175,0.534086,-6.731825,-2.211668,-5.371645,2.514654,5.907196,6.465495,-4.849159,0.411605,4.200726,3.630932,-6.401041,-9.182589,2.577913,-4.842244,-7.411912,-2.597898,-2.562144,-7.043996,1.967618,9.640690,2.585783,-0.018941,-3.629681,9.554149,-4.225750,2.654923,-7.028280,5.898662,9.586609,-3.027050,9.355561,-7.158409,2.713359,2.568338,8.513918,-4.520331,4.547554,-3.211172,-6.210630,5.882514,6.670655,8.046083,7.025749,9.880122,3.077130,-7.705999,-2.995992,-1.349403,6.765796,8.241667,5.171789,1.365291,-0.188167,-0.464106,4.569725,2.963465,-8.001282,8.531778,-7.893212,-0.736986,-6.611001,-7.499732,-6.116920,-3.730905,-5.115348,-1.180973,9.205701,8.182418,2.723349,4.820335,1.987838,8.523176,4.214596,1.487188,3.056031,2.891253,-6.400316,3.022071,7.482561,-3.881588,2.908910,4.994184,9.636851,-5.007559,-4.138635,8.618871,0.306876,-9.493616,5.044526,-2.623351,4.720541,-3.887119,0.479419,-2.207584,-1.464043,6.506520,7.668483,-9.527693,5.260364,-1.480495,-9.630289,6.521859,-6.085864,9.419694,-2.789134,4.743675,4.936487,2.606271,6.528463,1.703006,1.820639,0.443256,5.496263,7.126690,-5.121953,9.394304,2.558272,-7.314469,-2.203110,-5.389596,2.728878,-9.241501,2.296043,-1.128370,-1.448747,-6.778094,-9.346021,-9.957532,-2.461958,-5.900130,0.837434,5.271518,-8.409426,9.529660,9.061724,1.817061,9.034032,-5.892850,-0.594396,6.833995,-0.469780,-4.733301,9.251222,9.924306,-3.608494,-0.880090,2.062202,-8.981973,-1.501104,-9.644542,6.306420,-6.694642,3.957764,-2.674760,3.603602,-1.317387,8.751059,-1.617803,-3.567780,-5.908877,0.602931,-4.450443,6.095429,9.164389,-1.910510,7.359216,3.138000,-6.004986,-7.301636,-3.236896,-9.531847,-1.906604,4.783549,-0.031311,-2.074710,-8.259045,-4.934277,-7.064358,-8.928379,7.068542,2.105919,-6.699970,-6.831981,9.698528,9.749791,7.142283,1.220715,-6.934609,-7.793283,-4.756299,7.649075,2.259045,0.803502,1.714031,6.170740,3.586518,-3.240802,7.815719,-8.100561,5.236127,3.396552,-0.567728,-4.859223,6.382790,5.652423,8.232139,7.069108,-1.269587,-3.727771,-8.096278,-4.507146,-1.261619,3.777393,-8.333162,3.098299,-7.431927,-2.744487,6.705864,8.202032,7.427357,-4.221322,9.817724,2.222066,-2.234331,-5.953551,5.478053,-1.609867,9.861040,-0.332064,-8.287089,7.354407,-1.079117,4.140530,3.961350,-0.283238,4.545189,4.867439,-6.311386,6.897795,5.439946,5.739284,-9.220606,-8.902918,-6.590661,4.407892,-9.739854,7.881427,-8.553273,-6.982328,6.796047,1.180596,6.492627,2.135929,2.003351,9.958393,-5.976261,-0.208546,-7.138171,-1.590744,8.553377,9.148851,9.346370,-1.021111,1.373827,3.424620,3.396175,-6.838497,7.185973,2.337983,-1.669531,8.397020,4.863451,0.160008,1.861329,-4.540520,-3.338910,-0.047846,-3.655295,5.909104,-1.017867,-0.283626,8.325589,-1.018429,7.040465,-8.904427,-3.669484,-7.515487,3.781019,-4.340871,-3.726419,4.683401,-8.920380,-8.751805,-0.731050,3.710472,-1.763735,-1.397843,-3.818567,-1.890043,-1.560817,8.715541,0.532554,8.694652,7.879335,3.871486,-9.571503,-4.261073,-0.585059,-2.537120,5.396687,4.943104,4.427265,8.602336,6.304583,7.949409,-8.497995,-5.909192,0.102091,-0.187124,5.409088,-0.317769,-6.491948,2.047030,5.718895,1.925321,7.224931,-5.700106,7.386186,-4.548617,1.684216,-6.623385,-7.892594,8.765058,-3.272957,-0.654522,2.256223,-6.892834,-2.755563,9.009858,3.325145,-4.115423,3.622460,8.140207,-0.272203,4.189158,-1.854297,-0.616444,0.721482,-5.545303,6.992119,6.325782,8.298035,5.610302,5.188805,7.372661,4.122303,5.271423,-4.619915,9.793354,-3.690758,-9.095942,3.814000,0.052394,2.142168,-0.340649,1.368918,1.429565,3.164453,-4.814919,0.897120,5.886238,8.362119,-5.995818,-5.619476,-7.663954,-4.267002,2.915783,0.827929,-8.233324,-5.426417,-6.876874,0.523410,-2.211728,-0.901815,4.979814,-4.579435,-6.493996,-6.194604,2.593219,6.403372,9.743986,-2.974778,6.256192,-0.341656,-7.001918,-8.291095,-2.518405,2.017484,5.809583,0.408831,1.721825,2.073825,0.267068,-3.172229,-7.284699,-1.582905,-7.782501,-1.675529,8.197219,1.076371,3.829009,-4.327399,9.864915,-4.679936,8.153679,-6.631026,8.413623,-0.883324,0.254334,0.647036,-9.953754,0.701427,5.024650,-7.084381,-6.399142,-5.718164,-3.062470,0.739633,-7.142872,-9.027949,0.477321,0.483545,-5.942751,5.727138,-2.493638,-7.871867,2.679117,6.233903,9.349618,9.817955,-1.112130,-6.192347,-3.805350,-9.930808,3.362062,-4.738735,3.239062,-0.363261,3.811860,7.459982,-0.415956,8.751539,-6.811036,-9.397422,-3.220249,3.303428,-9.995064,2.389692,-0.978080,9.148160,-2.312262,-3.142417,7.300473,-5.144049,9.206489,3.481477,9.495117,8.456870,8.126024,9.393841,5.787484,-6.511455,-9.235890,-9.517639,-2.795695,2.088894,5.208173,-3.110590,-0.671155,6.514778,0.341980,2.649194,1.061995,-5.384717,4.609986,4.388584,-3.614709,-4.545385,7.489316,4.773051,-2.737672,6.820972,0.279953,4.450789,-7.188369,1.340000,2.243824,-4.716806,1.997412,1.085400,-8.733627,6.286330,4.749069,-9.520945,-1.292031,-4.646796,-9.998857,-0.537694,6.030557,3.203719,-6.144890,2.744087,1.915413,1.098929,-9.718624,0.423779,4.595514,-4.747124,-9.160957,0.863982,-8.878652,-9.849104,8.981726,-3.671634,-6.398080,-8.350477,-6.030863,-3.766699,8.547708,-5.404793,-1.262299,7.859421,-1.192032,-0.680465,-0.445801,7.754150,7.126982,9.924126,-6.916391,-2.693275,6.989828,-5.815672,-6.891150,4.325652,-7.910042,-4.735850,-9.939644,-7.844431,2.224884,1.444548,-2.601225,-9.885087,-0.982152,0.956998,-1.144964,8.732732,-9.131264,4.595717,-5.390140,1.930678,2.573559,-3.254667,2.410763,-6.366296,3.552786,-3.248865,2.929232,-9.086926,-3.347272,-2.488685,8.144997,-8.810753,6.957874,-7.073979,-5.135756,-3.307200,0.764630,5.600746,0.257209,5.910352,-2.907892,7.720481,4.099444,1.022757,0.236521,-6.028696,-5.044742,-8.863221,-5.991784,8.276402,-0.944399,-4.835429,-0.446381,-2.817965,-4.376964,0.608917,6.813650,-8.860363,-1.199713,-5.656526,3.181881,-9.815980,0.319176,-0.564347,0.107463,5.543253,1.443301,-0.060123,8.179027,-0.617865,-9.771097,-5.734488,-4.781606,-6.950582,1.819551,-4.262365,1.164317,-0.777825,7.915952,1.343842,-7.936885,9.968892,-1.171829,-6.596420,-4.147521,5.240505,-6.254830,9.326073,-7.128646,0.047258,-6.521678,2.977568,-0.400853,9.531773,-1.167408,-5.010253,7.677744,-9.788286,8.369782,5.736260,3.141422,3.214675,9.574092,-5.944468,-2.725116,8.708668,7.209907,4.827918,-1.667673,-7.693451,5.185204,2.586258,-9.810974,-5.156873,-9.056146,0.740589,2.411381,8.416899,7.750011,-2.923364,0.608076,3.855928,-5.318347,-5.318178,8.790448,5.928212,-7.197130,3.663345,7.080062,-9.540498,2.093728,5.208388,-3.020300,3.679627,1.126230,-7.822632,7.047314,7.606828,-5.113545,-4.001261,-2.937205,-1.034368,2.735638,7.414214,2.556640,-0.088278,-6.832193,9.209907,0.132762,-9.571841,1.175858,2.463807,-0.417565,-3.212229,8.563238,-1.211857,6.228200,-0.218654,-3.891811,5.728214,0.573944,2.995064,0.328506,0.988570,3.197549,6.310536,-2.364875,-6.243574,-5.343985,1.138465,4.675472,9.619858,-1.232371,5.723760,-7.629670,-5.795703,5.091639,5.595788,0.777498,8.889702,-9.045953,4.543986,5.720298,-4.353168,-0.248020,1.671591,1.058159,-7.521607,-4.876710,4.670562,-7.407218,7.692334,8.727637,3.181615,7.322758,3.017773,7.743063,-0.290851,-5.102292,-3.194887,-0.455919,7.296725,7.493749,6.719743,7.189408,-1.780198,-9.152552,0.072942,-9.202913,-7.989998,7.913630,3.284870,-7.869050,-0.159478,-2.495022,-8.481399,-1.338262,3.338707,0.644002,-9.433093,9.431253,7.988959,-8.707533,0.708086,3.606052,-4.570593,0.977607,9.604440,7.016500,7.709504,0.248979,-2.841017,5.022980,9.432336,-4.781907,7.245090,-4.990527,3.968969,-6.541902,9.345004,4.272656,-4.420926,9.779183,-0.500336,5.150970,3.458770,7.577458,7.028872,2.069725,-9.049861,-4.279016,2.022559,-0.565866,6.044192,7.379764,-0.579837,-5.300673,8.523530,-5.049204,-1.100489,9.587286,-1.255939,3.085508,8.006733,-3.053621,-2.832386,-3.600845,7.143685,-9.841865,9.712492,6.053640,-6.915038,-4.177750,-9.172078,-1.058156,2.994362,-5.120479,-8.465700,0.104891,-0.950434,4.354236,-4.974932,-6.932484,-1.582129,-2.134270,-3.543152,2.989036,0.813337,-0.215097,6.905932,-4.104520,7.225865,-7.189415,-0.749475,4.641805,-8.036921,0.336855,-5.672417,-9.891451,-2.041480,-1.445361,3.997156,-6.236422,-4.678178,-7.174214,3.147965,-1.653997,5.524098,-1.600802,-3.411796,-7.254177,5.915045,2.670244,9.310691,-9.217223,-6.727546,-5.642146,4.179766,-2.713896,1.407207,7.799041,7.041246,1.645316,-4.785084,-6.460623,-7.812420,5.145547,-9.943184,7.730818,4.873232,1.962014,1.574622,0.637964,-2.161486,-5.040072,-0.939405,-2.931818,3.471472,-7.128377,-8.644539,-1.646071,2.234836,-9.505173,-7.219836,6.040095,6.917281,4.065908,-4.597866,2.117443,-2.913933,-3.348238,8.935792,-0.864116,8.488054,7.288440,5.383524,-6.675231,1.465431,-3.991647,-2.627177,2.447008,-9.616113,-5.437436,3.327982,-5.158636,1.887777,-8.322779,5.874735,8.589423,0.897593,-6.320498,-6.354424,5.690773,8.262818,1.634550,2.775242,-0.325809,1.427054,-4.506810,-6.561919,-7.987860,-3.322932,4.832886,9.229686,-8.412901,5.389387,4.077190,4.512825,6.122775,-1.705195,-4.605606,-4.413561,-3.248988,-5.233636,-1.738346,4.323365,-3.674807,-2.653756,3.928803,8.311231,-2.578878,8.321612,-5.474403,5.455791,3.075213,8.720578,8.169664,-9.437245,2.389632,9.417938,-6.693951,6.927383,-0.437072,-2.824516,0.980354,3.634992,-2.761335,-8.931473,9.808352,-6.634296,2.901411,-5.118522,2.725946,-8.573792,4.231612,0.974414,-0.282736,5.436082,-4.860108,6.401144,5.272548,9.814006,7.475799,-8.719463,3.287629,5.454442,-9.915108,-8.918314,5.106543,4.774537,-7.553032,-2.448667,3.762270,3.639065,2.177602,2.515461,9.705803,-4.140592,-7.634836,9.497599,7.249234,0.171798,-6.149446,-4.346332,-9.273190,4.747290,-1.268286,-1.758928,9.388061,8.313942,-4.338481,4.054115,2.057418,-6.801263,-9.329775,-7.837525,-8.136186,-0.027392,1.939366,-9.600741,-2.088562,-9.985351,7.190727,-7.925460,-3.080469,3.595198,-7.302034,-7.891435,-2.529219,-1.714685,-5.341417,7.067956,-4.232091,4.755671,-8.947648,1.423413,5.033673,4.235381,-4.143923,4.946924,0.942174,9.543239,5.385290,0.562267,-8.966001,5.123271,-0.663083,-2.104386,-9.448597,-4.035894,2.484809,5.507499,8.722782,-9.379873,-4.778971,-3.578658,-7.062009,9.159272,7.666321,-6.983743,-1.219773,-4.712957,-3.505359,6.102216,1.469649,1.249518,-3.373029,7.717207,1.317402,0.033961], dtype = "float64")#candidate|6991|(2100,)|const|float64
call_6986 = relay.TupleGetItem(func_5836_call(relay.reshape(const_6987.astype('int8'), []), relay.reshape(var_6988.astype('int8'), [18,]), relay.reshape(const_6989.astype('int8'), [130,]), relay.reshape(const_6990.astype('float32'), [12,]), relay.reshape(const_6991.astype('float64'), [2100,]), ), 1)
call_6992 = relay.TupleGetItem(func_5842_call(relay.reshape(const_6987.astype('int8'), []), relay.reshape(var_6988.astype('int8'), [18,]), relay.reshape(const_6989.astype('int8'), [130,]), relay.reshape(const_6990.astype('float32'), [12,]), relay.reshape(const_6991.astype('float64'), [2100,]), ), 1)
output = relay.Tuple([call_6943,call_6959,var_6960,call_6986,const_6987,var_6988,const_6989,const_6990,const_6991,])
output2 = relay.Tuple([call_6944,call_6961,var_6960,call_6992,const_6987,var_6988,const_6989,const_6990,const_6991,])
func_7002 = relay.Function([var_6960,var_6988,], output)
mod['func_7002'] = func_7002
mod = relay.transform.InferType()(mod)
mutated_mod['func_7002'] = func_7002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7002_call = mutated_mod.get_global_var('func_7002')
var_7004 = relay.var("var_7004", dtype = "uint16", shape = (252,))#candidate|7004|(252,)|var|uint16
var_7005 = relay.var("var_7005", dtype = "int8", shape = (18,))#candidate|7005|(18,)|var|int8
call_7003 = func_7002_call(var_7004,var_7005,)
output = call_7003
func_7006 = relay.Function([var_7004,var_7005,], output)
mutated_mod['func_7006'] = func_7006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mod.get_global_var('func_5049')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_7014 = func_5049_call()
call_7015 = func_5049_call()
output = call_7014
output2 = call_7015
func_7016 = relay.Function([], output)
mod['func_7016'] = func_7016
mod = relay.transform.InferType()(mod)
output = func_7016()
func_7017 = relay.Function([], output)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7038 = relay.const([[[9.125555],[-7.888080],[-6.192029],[-5.114107],[-0.093077],[3.979136],[-4.414299],[-9.245941],[8.853576],[-8.355800],[8.311588],[-4.975124]],[[-7.131117],[3.484136],[8.901744],[4.980269],[-9.612952],[2.047512],[1.397820],[4.151106],[7.280154],[1.678080],[6.890344],[2.666482]],[[-0.123563],[-6.282114],[9.221767],[-0.920719],[7.013592],[4.504930],[-5.493904],[4.204137],[6.109837],[8.940305],[-2.641013],[-2.579678]],[[-1.728559],[-5.312358],[0.197524],[-3.154175],[1.845288],[2.723299],[8.334798],[-6.965545],[-9.690847],[9.096039],[-4.581825],[8.645362]],[[1.740687],[-4.665610],[-9.375888],[0.851039],[-8.133252],[-5.640286],[-1.186703],[1.206069],[4.302081],[-5.256393],[-1.431867],[7.640715]],[[-3.826148],[8.479022],[4.679517],[-2.576165],[-8.001058],[3.086314],[4.429543],[8.372741],[-1.920262],[-7.988457],[-7.913236],[-5.447996]],[[-0.664454],[-5.635522],[7.347483],[3.557475],[-3.717013],[-3.051450],[-0.045001],[-1.105066],[-0.982078],[7.689661],[8.976732],[5.273274]],[[-2.112665],[-1.126781],[-8.754905],[6.661684],[7.902798],[7.496039],[3.520162],[-6.909850],[-7.862103],[-0.307451],[-0.871414],[6.318010]],[[-4.414936],[-7.562117],[9.403408],[5.499218],[7.912311],[-9.161834],[-2.416224],[3.357427],[3.651210],[-6.253440],[3.118780],[-5.226599]],[[2.546441],[-6.321448],[4.295152],[-1.839463],[-1.557313],[3.561944],[4.756479],[-6.818986],[-1.687365],[-0.310099],[-0.739040],[-1.300751]],[[-1.143840],[-0.896768],[-0.287263],[0.113069],[1.136064],[4.544642],[9.809932],[-4.245103],[-2.966960],[6.660597],[-6.823261],[9.141820]]], dtype = "float64")#candidate|7038|(11, 12, 1)|const|float64
uop_7039 = relay.erf(const_7038.astype('float64')) # shape=(11, 12, 1)
output = relay.Tuple([uop_7039,])
output2 = relay.Tuple([uop_7039,])
func_7043 = relay.Function([], output)
mod['func_7043'] = func_7043
mod = relay.transform.InferType()(mod)
output = func_7043()
func_7044 = relay.Function([], output)
mutated_mod['func_7044'] = func_7044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7051 = relay.var("var_7051", dtype = "float64", shape = (12, 15, 14))#candidate|7051|(12, 15, 14)|var|float64
var_7052 = relay.var("var_7052", dtype = "float64", shape = (12, 15, 14))#candidate|7052|(12, 15, 14)|var|float64
bop_7053 = relay.mod(var_7051.astype('float64'), relay.reshape(var_7052.astype('float64'), relay.shape_of(var_7051))) # shape=(12, 15, 14)
output = relay.Tuple([bop_7053,])
output2 = relay.Tuple([bop_7053,])
func_7061 = relay.Function([var_7051,var_7052,], output)
mod['func_7061'] = func_7061
mod = relay.transform.InferType()(mod)
mutated_mod['func_7061'] = func_7061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7061_call = mutated_mod.get_global_var('func_7061')
var_7063 = relay.var("var_7063", dtype = "float64", shape = (12, 15, 14))#candidate|7063|(12, 15, 14)|var|float64
var_7064 = relay.var("var_7064", dtype = "float64", shape = (12, 15, 14))#candidate|7064|(12, 15, 14)|var|float64
call_7062 = func_7061_call(var_7063,var_7064,)
output = call_7062
func_7065 = relay.Function([var_7063,var_7064,], output)
mutated_mod['func_7065'] = func_7065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7016_call = mod.get_global_var('func_7016')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7088 = func_7016_call()
call_7089 = func_7016_call()
var_7092 = relay.var("var_7092", dtype = "float64", shape = (9, 6, 5))#candidate|7092|(9, 6, 5)|var|float64
bop_7093 = relay.not_equal(call_7088.astype('bool'), relay.reshape(var_7092.astype('bool'), relay.shape_of(call_7088))) # shape=(9, 6, 5)
bop_7096 = relay.not_equal(call_7089.astype('bool'), relay.reshape(var_7092.astype('bool'), relay.shape_of(call_7089))) # shape=(9, 6, 5)
func_5897_call = mod.get_global_var('func_5897')
func_5899_call = mutated_mod.get_global_var('func_5899')
call_7100 = relay.TupleGetItem(func_5897_call(), 0)
call_7101 = relay.TupleGetItem(func_5899_call(), 0)
output = relay.Tuple([bop_7093,call_7100,])
output2 = relay.Tuple([bop_7096,call_7101,])
func_7109 = relay.Function([var_7092,], output)
mod['func_7109'] = func_7109
mod = relay.transform.InferType()(mod)
mutated_mod['func_7109'] = func_7109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7110 = relay.var("var_7110", dtype = "float64", shape = (9, 6, 5))#candidate|7110|(9, 6, 5)|var|float64
func_7109_call = mutated_mod.get_global_var('func_7109')
call_7111 = func_7109_call(var_7110)
output = call_7111
func_7112 = relay.Function([var_7110], output)
mutated_mod['func_7112'] = func_7112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mod.get_global_var('func_5711')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_7136 = relay.TupleGetItem(func_5711_call(), 0)
call_7137 = relay.TupleGetItem(func_5712_call(), 0)
func_1213_call = mod.get_global_var('func_1213')
func_1216_call = mutated_mod.get_global_var('func_1216')
var_7140 = relay.var("var_7140", dtype = "float32", shape = (630,))#candidate|7140|(630,)|var|float32
call_7139 = relay.TupleGetItem(func_1213_call(relay.reshape(var_7140.astype('float32'), [14, 5, 9]), relay.reshape(var_7140.astype('float32'), [14, 5, 9]), ), 2)
call_7141 = relay.TupleGetItem(func_1216_call(relay.reshape(var_7140.astype('float32'), [14, 5, 9]), relay.reshape(var_7140.astype('float32'), [14, 5, 9]), ), 2)
func_6293_call = mod.get_global_var('func_6293')
func_6297_call = mutated_mod.get_global_var('func_6297')
const_7143 = relay.const([-5,10,-9,3,-7,-2,6,8,4,-6,9,-3,-1,10,4,-10,4,-10,3,8,4,7,-6,2,6,-6,4,-4,4,-2,-7,-7,4,-4,1,-7,2,7,-10,9,-4,3,-6,-4,-10,9,1,-8,3,4,-4,1,4,5,6,9,10,-10,10,-9,2,-10,3,-10,10,4,-2,9,4,9,7,-2,4,5,7,6,1,-2,4,5,-3,-7,6,2,-9,10,3,-4,3,10,-5,-7,2,3,1,-1,8,3,7,2,8,-3,3,7,9,5,-4,10,-4,-4,-2,-3,-7,2,2,10,-7,1,10,-5,-5,-3,-5,-7,-6,5,-7,8,-3,-8,6,6,-10,-5,-7,9,1,1,5,-4,-8,-10,-5,1,-1,-4,-6,2,1,6,6,-10,-9,2,8,6,-4,2,-5,9,1,-2,-6,-3,-10,5,-6,6,5,-1,5,-8,4,-6,5,4,9,-5,2,3,6,-9,-2,-8,-4,-7,-6,6,7,8,9,7,10,4,9,4,-7,8,10,6,4,-1,-10,-10,-8,10,10,5,1,-10,1,6,8,7,1,-10,-9,-5,7,-8,4,2,7,-4,1,9,-9,-7,-10,-3,-10,-7,-3,9,-8,4,-7,3,-8,-4,-10,-8,-9,-6,-3,-1,-1,1,-1,-5,-1,10,-7,-4,10,3,-1,1,-8,-1,5,4,-10,-3,7,-1,-6,6,4,8,8,-5,2,8,-4,-3,-1,-8,-1,-4,-6,-7,-6,8,5,-3,9,1,-6,3,8,-1,-10,1,-8,2,-10,8,3,5,4,-8,-7,-4,8,5,3,4,-4,7,-10,6,7,7,2,8,1,8,-5,-5,10,-8,5,-6,-8,9,-1,7,2,10,5,9,3,6,-10,2,10,-4,-5,3,5,-9,-8,-8,10,4,5,-5,-1,-10,-1,-2,6,7,-8,3,2,-2,10,-1,-8,-10,-8,-3,6,-1,-8,10,-9,-5,5,10,4,10,-2,6,5,4,1,-4,3,-3,-8,-6,10,-6,1,-4,10,9,-6,1,-3,7,-4,-8,-8,-7,6,7,-5,4,-1,-9,4,-2,-4,-2,-9,8,1,10,1,-6,-1,4,6,-9,6,-7,-7,9,-3,6,-1,5,2,-9,-3,9,-8,7,1,-2,-4,-7,7,2,-10,-3,-3,-1,6,-10,-5,-10,-4,-8,4,3,-8,-9,-10,-6,-9,9,9,-9,-10,-3,-7,-9,-1,5,-6,3,1,-10,5,9,-4,8,-8,8,5,2,-4,5,9,-1,10,-8,6,-10,-3,6,7,1,-10,-3,2,-9,8,4,-3,2,-10,2,8,8,-1,9,6,-5,-2,-3,8,3,-3,-3,5,-8,8,1,-4,-9,1,4,9,8,-2,8,-3,7,-1,2,8,8,-2,3,-8,-10,2,10,7,-5,-9,2,7,5,2,3,-9,-7,10,6,4,-8,-4,-10,-6,-2,9,6,3,-3,1,6,-6,1,-5,-5,7,-7,-4,1,-3,7,-9,7,6,-9,-5,7,10,-9,-8,-5,-10,3,-9,-7,1,6,9,-4,-5,-2,-9,-4,-8,7,-7,-1,5,4,8,10,-5,1,-10,-9,-9,-5,-1,-9,-2,-6,-9,8,1,-1,5,-10,6,6,-4,10,7,2,-4,8,-9,5,-1,1,-8,1,-4,4,2,-5,-5,10,10,-10,4,8,-4,1,-7,7,7,-7,-9,-10,-10,-7,-9,7,-10,-2,6,-10,-5,4,-5,7,9,2,6,-10,6,3,4,-7,-8,-3,-10,-3,-5,-7,9,10,-2,9,6,-6,5,-10,-9,7,7,-2,-2,2,-3,8,6,4,-2,-6,10,-1,-1,-8,-9,8,5,-2,6,-4,4,-2,10,8,7,-8,-6,-4,9,7,-4,-3,6,6,9,10,-2,6,8,-1,6,2,10,8,7,-9,-10,-2,8,-6,-7,-2,9,-8,10,2,1,-9,-9,2,2,-8,2,1,-7,-6,-5,3,6,9,-5,5,4,-8,-1,-2,2,9,10,-3,-9,3,-9,8,-2,-3,-9,-4,2,-7,-2,10,-8,7,9,7,3,1,-8,9,-5,8,1,-6,-4,8,1,10,-6,-9,1,2,8,5,-2,8,7,9,6,10,10,7,-5,3,6,-6,-10,2,-4,3,-1,3,-7,-7,2,2,-7,-3,8,4,2,2,2], dtype = "int8")#candidate|7143|(825,)|const|int8
const_7144 = relay.const([10,4,-7,1,-3,-6,8,-5,8,7,-8,9,-3,-1,6,-3,-5,10,-7,-5,-1,-3,8,-4,-10,2,10,-5,4,-9,9,5,-10,8,-7,-8,-4,9,-1,-8,-2,8,-4,8,-10,-6,-1,-4,7,-10,5,-7,9,10,-7,-10,1,-2,10,2,-6,-10,1,-10,4,-5,6,-7,-7,6,5,4,3,-2,-5,4,3,10,7,-2,-8,1,10,10,5,1,3,8,1,-10,2,-10,9,9,-10,9,8,3,-8,-5,-8,-2,2,-8,10,1,-3,9,3,-9,8,10,-10,6,-7,-2,7,-7,-4,2,-2,-7,8,-8,-3,5,-7,-7,-9,4], dtype = "int8")#candidate|7144|(130,)|const|int8
call_7142 = relay.TupleGetItem(func_6293_call(relay.reshape(const_7143.astype('int8'), [825,]), relay.reshape(const_7144.astype('int8'), [13, 10]), ), 8)
call_7145 = relay.TupleGetItem(func_6297_call(relay.reshape(const_7143.astype('int8'), [825,]), relay.reshape(const_7144.astype('int8'), [13, 10]), ), 8)
func_5298_call = mod.get_global_var('func_5298')
func_5304_call = mutated_mod.get_global_var('func_5304')
const_7152 = relay.const([-6.548599,-0.647572,-7.938745,9.306229,-6.080179,-2.840070,-9.758621,6.060652,-5.865085,9.806078,-8.356662,-1.057791,-5.169573,7.372732,7.763794,-9.852433,4.962316,-4.315388,-6.299377,-1.237699,-4.614264,7.280094,7.296028,-8.620373,6.590188,9.557251,5.609056,0.189710,5.983776,-0.596574,-1.576834,0.191206,6.570816,1.582888,0.555310,-0.744029,-7.518702,-8.613572,-8.952683,-6.519226,-7.242168,-8.087137,9.448301,0.416138,-3.695196,-1.800672,-1.758735,-7.262043,2.870908,-1.488105,0.900910,-8.044567,-5.133274,-5.005216,3.317380,-3.646177,-6.809522,-8.311704,4.287679,5.405565,2.780009,-4.433826,2.528827,3.170602,-0.442933,7.467857,6.878920,-1.921799,-3.544408,-9.370215,0.472780,2.045400,6.107700,6.178423,5.946459,2.713536,-9.167104,-3.996119,-6.965829,5.200484,1.558078,6.971202,-9.604896,-8.076346,-3.722750,4.149624,-9.345699,9.371969,-4.486486,-3.858897,1.228298,-0.844744,9.534102,2.086368,-3.444717,-5.283193,3.098733,-2.071306,3.630225,-9.284274,-5.833915,6.752155,-3.076451,-1.659633,-8.828098,-5.993731,-1.167042,4.994520,-2.729838,-6.639039,8.490758,-0.647229,-8.248903,5.662528,-2.486555,0.636433,0.313739,6.294348,6.656948,-0.661234,-5.863129,-9.263371,3.306688,-7.354709,-5.834281,-3.861661,5.132221,3.040262,-2.640045,-1.723284,-7.509244,6.912852,-9.573116,-1.972191,-1.853719,7.958474,3.640777,-9.974555,-2.903494,-0.247253,7.781175,-3.320541,-2.256288,-7.584414,-7.541260,4.751960,-9.996399,-4.453635,9.268625,-5.254742,9.516763,-6.099203,0.782336,4.168371,3.055135,2.760697,8.244088,4.870213,9.886785,-0.701100,-1.674395,-3.551186,-7.320811,-3.611865,3.653959,9.544142,-9.983364,-4.694041,-2.308272,1.228088,2.127424,-9.185978,9.897326,-4.278256,7.427185,-1.727814,-5.725752,-4.893632,-7.743695,-1.220571,-0.261380,-5.726705,1.936107,-1.253125,3.325180,0.450449,-5.494012,5.826998,-1.355567,-7.617242,-0.804545,6.592712,-4.946071,4.986098,-0.180756,-9.713455,3.712607,-7.036637,5.433139,5.862253,-4.578697,-5.953221,-7.342157,-2.352036,5.730779,0.029416,-7.481367,1.911892,-9.158928,2.100209,-8.980043,9.997727,-9.247895,1.251329,6.551434,-7.094830,2.097844,-8.166194,-1.087629,-0.872282,-3.658991,7.349344,5.177853,9.737165,2.630989,-9.737153,-0.708792,-3.927940,6.616230,2.674468,-6.714851,8.692564,-1.859812,8.423246,-3.585763,-2.353628,6.924353,8.750193,-9.764510,7.703252,0.595110,-3.993079,8.387854,9.110918,-5.117675,6.366777,-5.055284,-8.844047,4.146047,-1.847581,-0.352077,-1.459510,-2.347717,-7.400729,-4.489248,3.869760,5.087681,6.572441,-2.942575,-3.679912,6.448202,5.159965,-1.613875,-4.115873,6.785907,4.160146,-6.785111,-7.754692,-6.352192,5.453882,-5.340112,-1.466556,-2.187020,-7.983138,-2.499642,2.692333,2.774472,-0.816933,2.013268,5.605996,5.117102,-4.309751,-4.301084,-7.896887,0.243546,5.930846,-3.297542,9.840109,5.760119,2.266993,-2.095185,-6.466070,8.996015,0.780056,1.745741,-0.843797,-4.973400,-6.264712,2.251476,6.182298,9.532050,-0.184140,-6.203182,-6.815242,7.647047,-6.736401,1.680911,9.980122,0.713932,1.254067,6.060582,4.197722,-5.694559,-7.556956,-7.641021,-6.467580,-9.056236,-3.971914,-8.345608,2.289425,-0.678790,-1.619427,-0.242365,8.123424,-1.608485,-7.361376,-0.966060,8.587525,-7.581690,-6.695531,4.150965,-7.060942,6.032892,5.974363,6.493522,8.924057,-1.768117,9.182436,-7.874062,-4.488616,1.139186,-0.810389,-0.537846,-6.340362,-5.451640,0.042277,3.015136,3.305031,-5.629152,7.190042,1.992023,-2.566582,-7.108027,-0.597674,-7.074595,6.489380,-6.776799,8.832987,-8.131789,2.582392,-2.719438,-7.015042,-1.720844,-9.817301,-8.805702,-7.792237,-5.661877,6.013665,2.430810,4.948031,-1.199717,6.474278,7.888421,7.081926,3.412371,-9.182656,-9.309048,8.273563,-1.023494,3.037011,9.184406,6.605845,-2.369935,-8.296835,-3.663485,3.709458,0.152963,9.687282,9.329391,-4.215163,8.710381,-4.849478,6.331318,-8.010503,8.841240,6.775377,-5.588886,1.060962,4.518567,-9.954072,8.318091,6.247948,-5.336484,0.863804,4.038133,-2.849992,-6.122821,-8.348780,5.667418,-8.794434,3.700923,4.237984,-5.809194,-5.091417,9.581617,9.325641,0.496084,9.727950,-5.026714,2.534932,-0.362931,-1.560872,4.249552,-9.018932,-3.334883,0.150659,-2.364445,9.520087,7.703584,4.494558,-8.080771,-4.823555,9.743365,3.800497,-6.610995,1.995810,0.807446,-0.999570,0.356272,9.208536,3.373223,4.514771,8.432641,-5.389762,-5.850544,9.404023,-5.401839,-8.878564,1.508196,0.179131,9.241862,-9.443419,0.383732,4.580321,-1.451645,-8.930962,8.744849,6.837835,-4.144978,-4.100895,4.314449,8.363912,4.153066,5.121567,3.337255,-4.905366,-7.125033,4.943689,5.207540,-1.364792,1.078307,1.938410,-4.456624,-2.929764,-3.686020,5.179431,-3.551727,-7.713742,2.438462,9.170676,-4.358332,7.355830,-5.915196,-2.241257,8.814670,9.150224,8.682261,7.015912,-4.455510,-8.238262,-1.844923,-3.012938,-2.808010,-6.331858,8.590002,2.055893,-9.718553,-0.623868,8.469532,-5.678755,1.122277,-5.444601,9.013267,-1.052893,5.460393,-4.356408,-4.692483,-1.155340,0.121610,-5.895472,-6.789782,8.477999,-0.565997,-0.756130,-0.703503,-8.249570,-7.052730,3.829282,1.018893,3.356366,-3.459088,-7.963279,8.179754,-5.519540,-1.429048,7.074328,-5.154072,8.056540,-1.724322,-3.575118,-1.683886,-9.417736,8.692033,-2.582583,4.633179,4.765757,-1.160482,-4.251881,0.145303,-3.937846,-3.137430,-9.706880,-9.024258,3.144890,1.590166,-4.379102,2.620574,5.759436,-3.277824,2.558799,8.141418,6.489507,-5.066162,9.968252,-6.070444,5.253212,0.273311,9.838833,3.180576,-1.839554,0.185954,3.984148,0.085561,4.314949,-5.518708,4.469977,-9.866532,3.296754,6.344790,-1.196087,9.454021,-0.516931,9.151215,-9.502980,-8.439670,-0.580104,5.525670,-4.773343,-7.961590,-3.308658,-3.625228,-5.989499,4.455836,-6.879753,7.989939,-2.532428,-1.838323,3.947626,3.189622,6.013660,2.583295,5.884953,7.221530,5.802012,2.188383,-0.692001,-8.237737,-7.898407,6.799462,-5.940830,9.298353,7.375462,1.543612,-3.388699,-2.821679,-1.016192,3.260382,0.428911,-3.316135,-6.517385,-4.785907,2.939873,7.845133,-8.030929,-5.922493,3.612248,-4.628235,-0.455328,-7.982387,-7.732364,-2.843524,-5.046827,-4.594005,-7.678331,-0.056256,-2.184871,1.762422,0.081386,-9.034852,7.478603,-2.921547,-5.036140,3.883177,-4.654052,5.682235,6.036878,-0.276483,2.087887,3.703384,3.428100,-2.185758,-3.694922,0.696246,1.661124,-4.345288,6.805348,5.629790,4.525251,-9.013191,-2.393471,-7.556261,8.902678,9.091127,8.794911,-0.991102,7.864197,-8.303626,-4.327110,9.491843,0.532905,9.900073,6.218488,3.040725,8.918655,-9.873214,4.228476,2.170703,0.520179,-7.093018,6.978893,6.393463,9.147820,9.370605,-9.245117,7.888773,-1.059703,-0.630923,-8.337521,-6.097084,6.315954,7.109006,3.067026,6.230903,-6.735938,4.344651,-1.317062,-7.040974,-3.503811,9.029809,-5.252312,3.824390,2.392407,-4.465044,4.882932,-2.255526,-4.254703,5.280878,-2.520209,-8.265688,-4.014906,6.064011,9.985857,3.560431,1.468486,-3.308643,6.594933,-4.881851,2.190941,-6.200310,5.584516,6.647928,7.000336,4.083198,9.948845,-1.429184,7.307883,-9.755737,1.202422,-0.698264,-9.596166,-2.404868,-5.701657,4.595312,-3.028600,-9.380938,-3.856036,6.465349,3.306814,5.066666,-4.637243,-9.132233,4.638432,-0.330815,-0.858042,7.616221,4.711258,5.093609,-7.969357,5.928978,-2.506981,-4.728251,1.635604,-2.798963,-9.921764,4.581171,5.028558,-7.869393,-8.087870,4.832698,-0.498619,-2.734679,6.984816,7.181175,-0.774307,-9.262398,5.261129,3.652438,-3.510623,1.303476,6.362871,0.136766,-9.414506,-1.297272,7.700050,-3.157009,-2.242464,6.575545,-1.822307,-9.210523,-2.217129,9.106803,8.651996,-6.795559,4.157399,5.312728,8.003597,4.290543,-9.106974,-9.364601,-4.760304,5.956355,7.174493,-9.601261,-4.213287,-4.081898,0.868705,-1.728415,-4.999113,-9.445409,-8.585032,2.743921,-2.561890,8.721153,-9.255544,-0.613110,-0.448332,2.333281,5.486552,1.529175,-3.299565,-7.658153,-9.564151,7.827288,0.543349,-9.076412,2.322340,9.480039,-0.350794,-8.500502,5.068968,2.165244,4.515972,8.561327,-4.469907,-1.859023,2.559120,-5.445620,1.089516,-5.354768,3.832616,-2.024672,-9.274936,4.174769,-9.031630,6.381760,-6.874512,-1.054262,-6.430164,-4.332674,-2.388243,6.571612,6.123404,5.920885,5.408285,-4.525632,-8.225814,3.529274,-0.860747,-3.451580,4.003135,-4.426803,-2.410578,8.978832,9.499138,-5.629540,-9.727631,2.318699,1.795566,-9.680723,-4.453232,-7.751702,9.406737,-5.175331,-5.671745,-9.940187,-3.416342,1.949728,0.978165,6.902128,6.692950,5.419920,-9.154074,0.944673,9.373904,-7.952530,-1.341038,7.318921,2.545940,-8.582272,-1.542564,0.941555,2.364112,6.357662,8.219302,8.200119,-7.540488,-1.974155,0.408205,9.955928,3.184083,8.492016,-7.106718,1.695827,-6.191083,7.201373,-7.394154,8.903469,4.396291,0.210590,-3.549931,6.716189,8.212180,6.316503,-3.638814,6.877300,-1.443721,4.426390,8.803829,-0.324587,-1.730640,-3.752075,-6.849334,4.790348,3.839984,-0.139911,6.780369,-1.872782,1.219993,-2.311319,-9.963228,0.720295,-5.036258,1.988298,6.406197,7.329615,3.299559,4.918823,6.024067,-0.601004,5.331611,-5.487279,-8.054176,4.738347,-6.369199,7.791066,7.562624,-4.432219,-1.295255,-2.865532,0.081044,3.956289,6.657087,3.010689,2.539083,7.128372,-0.689425,-1.840974,8.216999,6.089953,3.157103,-5.036996,0.900667,-4.920127,3.443274,-0.400112,-9.947151,9.566685,-4.934789,-6.750872,-6.436197,-3.597622,-5.600556,-7.939415,-8.163225,1.125508,-1.067632,-9.429295,-3.490867,3.643808,2.325337,5.352295,-3.761172,-4.493283,3.884549,-3.619541,-7.055346,-0.126765,4.285477,-8.001517,-5.778115,4.997749,-0.328677,2.166425,-6.769084,-6.925296,-2.228939,1.385702,-2.316562,2.731666,9.911168,-2.700201,-3.472710,-9.030943,0.949056,8.813197,-3.267526,-5.250848,-8.530785,-6.708764,8.661955,7.191898,-2.726042,-7.764699,-7.248633,-8.135355,1.082773,2.780641,9.177663,-4.084516,2.240403,8.814889,-5.146644,-0.284799,2.816501,-3.076981,2.394570,-2.236543,-5.448521,-4.234576,-3.058557,-1.043151,3.011335,0.934575,4.872501,5.035444,0.620191,9.859235,5.423240,-0.685007,-6.601239,2.539275,-8.338755,3.148402,-5.583263,4.842838,-4.621086,-3.257957,-6.041229,-7.839878,4.086111,-1.595412,-8.168234,0.368233,7.993204,-5.033503,-7.126182,2.944971,8.184248,3.021118,-2.772334,-1.920053,3.618811,5.356896,-2.874473,3.681018,5.595095,-2.025260,4.424826,7.955481,-7.991927,-7.963620,4.323330,8.403141,-4.355935,-7.363108,-5.478114,4.221112,-7.523061,7.610336,3.308864,-7.886451,-2.412751,-3.580076,-4.513591,-4.573206,-1.439537,3.723351,-4.468735,-0.084146,-9.433081,1.440163,-0.187807,-7.741180,6.590825,1.950817,-5.090225,-3.946564,4.017061,7.254028,-2.368689,-8.404327,-6.464034,2.288231,-7.993635,-8.759234,-5.441640,8.104359,-3.361884,8.413992,6.697137,-9.754825,9.383224,-1.088423,-7.189778,-9.135479,6.070778,8.488699,8.941065,-5.716593,-2.265390,-6.584953,1.443955,7.891166,6.816397,7.478658,-1.172615,-5.635605,-4.196878,-5.528156,-0.631246,-7.659905,8.485827,-1.156309,-7.437535,-6.866733,1.814110,8.251415,4.089559,-9.430853,-8.589193,9.284093,-0.534898,-3.500074,2.481112,4.378881,3.131370,5.563160,2.435288,0.276502,5.257255,-9.257100,-2.442441,0.141084,2.180036,-4.469465,1.459395,-7.970449,-1.559130,3.675370,9.544878,4.507207,-9.920673,9.754337,-4.666562,3.567888,-9.439031,-1.206497,0.924034,-6.878398,-9.460590,-7.635764,2.484219,6.609580,1.265298,5.969154,2.565780,-2.046032,0.135832,0.615982,-8.110564,4.271729,-8.463531,-1.907342,4.111912,-5.348210,2.009624,-3.454876,1.251670,-8.381800,-3.040583,4.235571,2.332249,8.124955,3.898532,-2.072816,7.433880,2.497247,-9.960532,8.258231,-7.879352,7.973471,2.250311,-5.947205,6.812565,7.641284,-8.363506,8.179778,-0.803299,4.981007,2.018470,-6.100982,8.871257,-8.566810,6.882349,-8.267145,-8.470566,3.618722,7.138329,-9.415617,9.267045,-9.750914,6.940366,5.040215,-6.298695,6.450381,-3.324234,-4.580574,2.029352,1.381318,-6.289242,6.014727,6.498386,-2.779151,-2.105569,6.063444,1.246558,-5.289297,0.278584,-9.131065,-7.163986,2.067106,4.422656,-3.184583,6.677060,7.188988,4.769947,-3.711244,-5.930445,3.708394,0.668176,-6.259323,-8.247866,2.335668,-8.102376,6.722037,-0.669850,6.843036,-4.250999,-3.522295,-7.469714,-1.341662,-6.289194,-0.405923,9.171240,-5.006184,0.214602,7.743730,6.219029,1.761384,5.753504,-8.442447,-7.642681,4.283779,6.876242,-6.649344,-8.028574,-6.270166,0.798974,3.238215,-4.798514,3.582814,-4.851406,-9.889449,-3.968010,6.360516,-2.093857,3.912936,3.798888,-5.743773,-9.190245,-2.907714,6.654481,-7.965892,-6.786313,1.829954,7.920749,-5.024854,-1.849193,7.727790,-5.714167,-2.725153,-5.860741,9.602744,-5.928064,-7.321879,-3.999994,7.594036,3.983664,-7.228282,1.653558,2.883951,8.572793,-0.574331,-7.813143,-9.985120,-3.802026,6.971362,-2.062553,5.014270,-7.915270,2.012300,-7.278054,-5.722235,-7.935055,7.114507,6.088291,-7.285715,-2.053272,-1.548042,-1.356101,-0.627705,3.210178,1.291351,-3.460942,-0.130165,9.849166,-2.241882,2.728771,7.045543,9.304918,4.183025,9.948380,9.209039,0.533624,-0.282092,-8.829950,-6.279323,7.015242,1.221611,-0.725870,-4.157093,-3.470660,-0.716652,-0.023396,4.656702,-4.578597,-1.007977,4.943144,-1.848406,0.878939,-2.982810,3.758829,8.615812,2.994490,-7.854935,-3.127530,2.355722,9.952686,-2.403104,9.588759,-1.582185,5.218752,-1.510548,-6.912772,0.337029,8.943537,-4.564016,-2.719365,9.945287,-7.337352,-8.146151,7.468351,6.280110,1.495432,-5.018464,-7.861173,-2.932499,0.611892,-7.293726,7.423055,0.003849,0.589860,7.382744,6.927316,9.211593,8.913412,-3.809661,6.171946,8.840023,-3.931392,-0.411925,-5.064140,-1.548530,4.634824,-4.558000,-7.809060,3.239542,5.193336,7.159129,-8.475114,-2.042863,-4.710834,-1.209006,6.291581,-9.393071,0.448157,-0.714385,-7.358308,7.003289,0.609606,-0.008563,8.479891,9.287916,9.097664,3.275667,-7.509844,7.738220,-8.978739,-7.967966,7.172326,7.191064,3.960004,7.380038,-0.801433,6.250813,-4.627848,6.412113,-0.819624,-0.415273,-5.056967,2.082929,1.705125,6.230795,-6.330736,9.224728,2.241652,-5.058256,-0.927030,-8.226333,-7.854482,-2.099784,7.513783,-2.571691,5.721908,3.137761,-8.603682,-3.029360,1.773637,8.146909,0.855678,-0.882113,-3.824686,-2.759861,-1.743633,0.355140,-2.468794,0.394742,-8.069449,7.225761,-9.906037,8.072616,6.826271,-3.734125,9.242759,-2.734782,1.643107,6.529576,9.200910,-8.134404,-2.129063,-5.822937,-1.020786,8.066458,6.796536,-4.674639,9.167296,-9.556972,4.591919,-7.319116,6.662847,4.430733,5.283745,-2.267192,-3.971756,-8.048095,-0.818079,-1.132977,-1.320317,0.292983,-0.542324,7.382409,5.036202,5.897825,-8.417736,-5.252614], dtype = "float64")#candidate|7152|(1485,)|const|float64
var_7153 = relay.var("var_7153", dtype = "uint32", shape = ())#candidate|7153|()|var|uint32
var_7154 = relay.var("var_7154", dtype = "uint32", shape = (60,))#candidate|7154|(60,)|var|uint32
const_7155 = relay.const([[-9.184804],[8.393760],[-3.955938],[0.751977],[-2.465231],[-2.413754],[-9.601882],[-3.551260],[6.829455],[-2.246578],[-7.638489],[9.583173],[4.129111],[-6.395376],[-1.412374],[3.875700],[3.723911],[3.981589],[7.611590],[-0.290740],[2.955894],[-1.943662],[-2.965131],[1.060819],[2.121218],[-7.640051],[-2.258087],[-2.785074],[-8.364072],[9.723844],[0.865564],[4.295416],[8.145576],[-2.470599],[9.470512],[-9.267481],[-3.032538],[9.193871],[2.686210],[-7.146429],[-7.637778],[8.035703],[0.411620],[2.834056],[-2.590305],[-5.086062],[4.306382],[-6.716593],[2.826817],[6.700534],[2.597191],[1.991642],[-2.493469],[5.307709],[7.597957],[-6.948479],[-3.707955],[3.000827],[-8.182624],[1.538873],[6.103802],[-2.297178],[4.455360],[-9.206080],[-4.876341],[-3.939382],[5.181117],[5.353521],[-0.262149],[-4.345277],[-2.147554],[7.877658],[-7.049832],[-7.223292],[6.037596],[4.975677],[-8.345966],[5.093917],[-3.707895],[-7.408269],[-8.306515],[-2.886342],[-7.434176],[2.002336],[-1.587961],[1.748344],[8.499434],[9.523975],[3.499110],[-0.857981],[3.209674],[4.732309],[1.841360],[-8.108790],[-4.327056],[-5.967840],[8.950242],[4.295115],[-6.501035],[-0.855460],[-3.346671],[-3.545553],[-8.282831],[8.565966],[2.900890],[0.696086],[8.995625],[-0.272710],[0.250581],[-3.221088],[5.186085],[-5.186700],[0.751272],[7.913945],[1.283760],[7.423788],[8.785750],[7.480664],[8.015871],[0.421014],[-3.258060],[-2.473623],[2.324088],[-9.915170],[0.022808],[7.904396],[-4.567943],[8.776306],[8.992923],[8.262964],[-7.928057],[-2.450708],[-6.206182],[6.180600],[-4.375150],[5.634514],[8.845531],[-8.235320],[-7.311110],[-2.601922],[9.667747],[5.097644],[0.574636],[3.583215],[5.368069],[1.609978],[1.276818],[5.244572],[7.054912],[-1.183819],[8.750671],[-2.357422],[0.496403],[3.330945],[-9.336710],[1.927986],[3.377919],[8.937475],[0.735909],[5.246445],[3.472046],[-7.392037],[-9.990034],[7.620919],[-5.029782],[1.535663],[7.350577],[8.068605],[-6.196105],[-3.817479],[-3.239082],[-5.513205],[-3.000421],[-8.879503],[2.019084],[-5.056297],[9.779020],[4.039272],[-1.601860],[6.176248],[-7.611797],[-7.585324],[5.272236],[-9.835320],[6.863766],[-6.352100],[-1.584891],[6.738886],[-9.840881],[-2.874345],[-2.374432],[-2.040585],[0.239246],[1.281533],[-3.152221],[7.386814],[-6.144097],[-6.516045],[7.747519],[6.858706],[-0.773833],[-0.625170],[3.480320],[1.868903],[6.697223],[5.935076],[5.145691],[2.263347],[1.129233],[-5.557427],[-0.655700],[4.107534],[-6.331659],[-4.865324],[-0.096557],[-5.736411],[5.970561],[-2.206389],[-6.609122],[-3.798459],[5.406742],[3.248264],[4.147198],[-5.932554],[-9.526058],[3.187953],[-7.548816],[0.771767],[-8.785170],[-2.750142],[8.496757],[5.231606],[4.301029],[0.102832],[-2.246873],[8.626474],[2.273972],[-7.314141],[-9.800515],[-2.356856],[6.047591],[8.452002],[-0.928772],[-3.603436],[-5.114337],[9.417466],[4.058444],[-2.036417],[-7.528751],[0.391387],[2.076071],[8.115062],[0.915586],[0.515731],[-2.184894],[-7.818126],[1.692690],[4.796529],[-5.265555],[8.587769],[-5.038321],[7.535948],[8.496541],[-2.183039],[0.044497],[-5.240541],[-9.282089],[-7.281196],[5.598870],[9.095840],[1.348568],[-5.630196],[9.363882],[-1.534595],[5.660565],[-5.892476],[-1.079418],[-0.134875],[1.948775],[-3.239415],[-2.303372],[6.077862],[-2.812866],[-3.364593],[-7.849416],[7.017519],[-3.793590],[-7.557072],[0.211428],[3.003037],[-8.568631],[-8.551458],[2.021161],[6.935391],[0.259790],[-2.964229],[-4.891761],[-9.248339],[9.497871],[5.586306],[0.310507],[3.012561],[-0.603729],[6.228438],[-2.112191],[-8.398360],[8.677432],[8.781354],[6.569623],[5.986368],[-0.544944],[-8.574702],[-1.857748],[1.805291],[-0.380807],[7.738339],[0.588067],[2.519600],[-6.324480],[9.944081],[3.064870],[-6.576772],[-4.783457],[-3.521520],[-0.373446],[-3.679315],[3.108978],[2.762643],[-4.019743],[3.134002],[7.630117],[-2.081549],[2.580523],[-8.735799],[-3.721110],[-5.014952],[-8.465463],[-6.151285],[-3.739366],[-6.470350],[7.070764],[-7.821021],[-1.732104],[-0.485383],[-2.382723],[1.486137],[-3.579979],[9.750649],[2.942468],[9.707994],[7.655177],[4.759046],[-1.861742],[3.476101],[-1.938679],[9.925117],[-4.381836],[-3.146094],[-5.364891],[3.162884],[-6.181165],[-9.896581],[-6.151203],[-9.440119],[-5.162360],[-8.819344],[5.290737],[3.390018],[6.951971],[5.062464],[-2.474144],[6.149794],[-8.413202],[6.062340],[-9.061285],[1.033233],[8.735336],[3.451029],[0.115426],[5.912755],[-7.162222],[-7.994530],[-1.829019],[1.037595],[-1.763468],[9.646662],[-2.006890],[2.750457],[6.923202],[6.558512],[-8.561413],[-3.815646],[-1.232026],[9.936103],[-3.836213],[5.799875],[-2.956982],[-3.222081],[0.247798],[1.579679],[-6.336369],[6.690467],[7.630943],[1.938766],[2.686083],[7.399196],[-5.376032],[-7.002412],[8.970427],[-8.278712],[-5.703540],[-6.379877],[2.559733],[4.220676],[6.274328],[-5.236690],[-0.516785],[-4.428522],[0.450070],[-6.060187],[-2.282079],[-4.577264],[7.160180],[7.707868],[-3.715703],[-5.477418],[-8.275940],[-3.042442],[-3.653216],[-0.596607],[-8.805064],[1.956986],[-1.598756],[-6.575506],[-2.919903],[3.591049],[-0.762346],[0.747317],[-8.268356],[8.021741],[-9.779609],[1.388342],[-4.186796],[7.254047],[-3.606564],[-5.674473],[-9.998431],[3.464585],[6.399253],[-2.467305],[-2.908520],[-7.487564],[0.275519],[-7.936550],[8.100691],[5.728694],[-0.898282],[-0.896241],[-3.008312],[3.348588],[9.789498],[1.462905],[5.372254],[3.624132],[-2.064148],[-6.922873],[8.479986],[-8.259919]], dtype = "float32")#candidate|7155|(468, 1)|const|float32
var_7156 = relay.var("var_7156", dtype = "uint8", shape = (2, 12))#candidate|7156|(2, 12)|var|uint8
call_7151 = relay.TupleGetItem(func_5298_call(relay.reshape(const_7152.astype('float64'), [9, 15, 11]), relay.reshape(var_7153.astype('uint32'), []), relay.reshape(var_7154.astype('uint32'), [30, 2]), relay.reshape(const_7155.astype('float32'), [468,]), relay.reshape(var_7156.astype('uint8'), [6, 4]), ), 4)
call_7157 = relay.TupleGetItem(func_5304_call(relay.reshape(const_7152.astype('float64'), [9, 15, 11]), relay.reshape(var_7153.astype('uint32'), []), relay.reshape(var_7154.astype('uint32'), [30, 2]), relay.reshape(const_7155.astype('float32'), [468,]), relay.reshape(var_7156.astype('uint8'), [6, 4]), ), 4)
output = relay.Tuple([call_7136,call_7139,var_7140,call_7142,const_7143,const_7144,call_7151,const_7152,var_7153,var_7154,const_7155,var_7156,])
output2 = relay.Tuple([call_7137,call_7141,var_7140,call_7145,const_7143,const_7144,call_7157,const_7152,var_7153,var_7154,const_7155,var_7156,])
func_7175 = relay.Function([var_7140,var_7153,var_7154,var_7156,], output)
mod['func_7175'] = func_7175
mod = relay.transform.InferType()(mod)
mutated_mod['func_7175'] = func_7175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7175_call = mutated_mod.get_global_var('func_7175')
var_7177 = relay.var("var_7177", dtype = "float32", shape = (630,))#candidate|7177|(630,)|var|float32
var_7178 = relay.var("var_7178", dtype = "uint32", shape = ())#candidate|7178|()|var|uint32
var_7179 = relay.var("var_7179", dtype = "uint32", shape = (60,))#candidate|7179|(60,)|var|uint32
var_7180 = relay.var("var_7180", dtype = "uint8", shape = (2, 12))#candidate|7180|(2, 12)|var|uint8
call_7176 = func_7175_call(var_7177,var_7178,var_7179,var_7180,)
output = call_7176
func_7181 = relay.Function([var_7177,var_7178,var_7179,var_7180,], output)
mutated_mod['func_7181'] = func_7181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5551_call = mutated_mod.get_global_var('func_5551')
call_7214 = relay.TupleGetItem(func_5549_call(), 0)
call_7215 = relay.TupleGetItem(func_5551_call(), 0)
func_5428_call = mod.get_global_var('func_5428')
func_5434_call = mutated_mod.get_global_var('func_5434')
const_7221 = relay.const([9,-9,5,6,9,6,10,-7,3,9,-4,7,3,-10,7,-9,7,7,8,-7,3,-9,5,8,-9,-2,-7,10,-4,-6,-4,-9,-5,-6,10,-9,9,8,7,4,2,-10,-4,8,-3,-8,1,9,-2,10,10,-6,9,-5,-1,-2,-6,1,5,5,-6,-4,-10,7,-9,5,8,10,-7,-4,5,-3,-10,-8,-6,10,8,2,-8,4,-6,7,-2,1,-2,-10,-3,-8,9,-8,3,-10,-6,10,1,-1,5,-9,7,-10,5,7,-5,10,3,1,-10,6,3,-9,-4,-1,10,-7,8,-7,-7,10,9,6,-2,7,-1,-9,3,-1,8,-5,10,7], dtype = "int8")#candidate|7221|(130,)|const|int8
const_7222 = relay.const([-9.647486,-8.100410,5.342606,0.974902,-5.952391,1.852196,7.848928,5.922567,-5.648972,-0.301709,-1.526130,-0.588620], dtype = "float32")#candidate|7222|(12,)|const|float32
var_7223 = relay.var("var_7223", dtype = "int32", shape = (672,))#candidate|7223|(672,)|var|int32
var_7224 = relay.var("var_7224", dtype = "float64", shape = (30, 70))#candidate|7224|(30, 70)|var|float64
call_7220 = relay.TupleGetItem(func_5428_call(relay.reshape(const_7221.astype('int8'), [130,]), relay.reshape(const_7222.astype('float32'), [3, 4]), relay.reshape(var_7223.astype('int32'), [672,]), relay.reshape(var_7224.astype('float64'), [15, 14, 10]), ), 6)
call_7225 = relay.TupleGetItem(func_5434_call(relay.reshape(const_7221.astype('int8'), [130,]), relay.reshape(const_7222.astype('float32'), [3, 4]), relay.reshape(var_7223.astype('int32'), [672,]), relay.reshape(var_7224.astype('float64'), [15, 14, 10]), ), 6)
output = relay.Tuple([call_7214,call_7220,const_7221,const_7222,var_7223,var_7224,])
output2 = relay.Tuple([call_7215,call_7225,const_7221,const_7222,var_7223,var_7224,])
func_7231 = relay.Function([var_7223,var_7224,], output)
mod['func_7231'] = func_7231
mod = relay.transform.InferType()(mod)
var_7232 = relay.var("var_7232", dtype = "int32", shape = (672,))#candidate|7232|(672,)|var|int32
var_7233 = relay.var("var_7233", dtype = "float64", shape = (30, 70))#candidate|7233|(30, 70)|var|float64
output = func_7231(var_7232,var_7233,)
func_7234 = relay.Function([var_7232,var_7233,], output)
mutated_mod['func_7234'] = func_7234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7016_call = mod.get_global_var('func_7016')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7245 = func_7016_call()
call_7246 = func_7016_call()
output = relay.Tuple([call_7245,])
output2 = relay.Tuple([call_7246,])
func_7253 = relay.Function([], output)
mod['func_7253'] = func_7253
mod = relay.transform.InferType()(mod)
mutated_mod['func_7253'] = func_7253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mutated_mod.get_global_var('func_7253')
call_7254 = func_7253_call()
output = call_7254
func_7255 = relay.Function([], output)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6407_call = mod.get_global_var('func_6407')
func_6409_call = mutated_mod.get_global_var('func_6409')
call_7269 = relay.TupleGetItem(func_6407_call(), 2)
call_7270 = relay.TupleGetItem(func_6409_call(), 2)
output = relay.Tuple([call_7269,])
output2 = relay.Tuple([call_7270,])
func_7273 = relay.Function([], output)
mod['func_7273'] = func_7273
mod = relay.transform.InferType()(mod)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mutated_mod.get_global_var('func_7273')
call_7274 = func_7273_call()
output = call_7274
func_7275 = relay.Function([], output)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5681_call = mod.get_global_var('func_5681')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_7276 = relay.TupleGetItem(func_5681_call(), 0)
call_7277 = relay.TupleGetItem(func_5682_call(), 0)
func_7043_call = mod.get_global_var('func_7043')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7306 = relay.TupleGetItem(func_7043_call(), 0)
call_7307 = relay.TupleGetItem(func_7044_call(), 0)
output = relay.Tuple([call_7276,call_7306,])
output2 = relay.Tuple([call_7277,call_7307,])
func_7308 = relay.Function([], output)
mod['func_7308'] = func_7308
mod = relay.transform.InferType()(mod)
mutated_mod['func_7308'] = func_7308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7308_call = mutated_mod.get_global_var('func_7308')
call_7309 = func_7308_call()
output = call_7309
func_7310 = relay.Function([], output)
mutated_mod['func_7310'] = func_7310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6858_call = mod.get_global_var('func_6858')
func_6860_call = mutated_mod.get_global_var('func_6860')
call_7311 = relay.TupleGetItem(func_6858_call(), 0)
call_7312 = relay.TupleGetItem(func_6860_call(), 0)
output = call_7311
output2 = call_7312
func_7313 = relay.Function([], output)
mod['func_7313'] = func_7313
mod = relay.transform.InferType()(mod)
mutated_mod['func_7313'] = func_7313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7313_call = mutated_mod.get_global_var('func_7313')
call_7314 = func_7313_call()
output = call_7314
func_7315 = relay.Function([], output)
mutated_mod['func_7315'] = func_7315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mod.get_global_var('func_5049')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_7365 = func_5049_call()
call_7366 = func_5049_call()
output = relay.Tuple([call_7365,])
output2 = relay.Tuple([call_7366,])
func_7370 = relay.Function([], output)
mod['func_7370'] = func_7370
mod = relay.transform.InferType()(mod)
output = func_7370()
func_7371 = relay.Function([], output)
mutated_mod['func_7371'] = func_7371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mod.get_global_var('func_7253')
func_7255_call = mutated_mod.get_global_var('func_7255')
call_7395 = relay.TupleGetItem(func_7253_call(), 0)
call_7396 = relay.TupleGetItem(func_7255_call(), 0)
uop_7403 = relay.acosh(call_7395.astype('float64')) # shape=(9, 6, 5)
uop_7405 = relay.acosh(call_7396.astype('float64')) # shape=(9, 6, 5)
func_6665_call = mod.get_global_var('func_6665')
func_6668_call = mutated_mod.get_global_var('func_6668')
const_7410 = relay.const(-9, dtype = "uint64")#candidate|7410|()|const|uint64
var_7411 = relay.var("var_7411", dtype = "uint64", shape = (525,))#candidate|7411|(525,)|var|uint64
call_7409 = relay.TupleGetItem(func_6665_call(relay.reshape(const_7410.astype('uint64'), []), relay.reshape(var_7411.astype('uint64'), [15, 5, 7]), ), 0)
call_7412 = relay.TupleGetItem(func_6668_call(relay.reshape(const_7410.astype('uint64'), []), relay.reshape(var_7411.astype('uint64'), [15, 5, 7]), ), 0)
bop_7415 = relay.logical_and(uop_7403.astype('bool'), relay.reshape(call_7395.astype('bool'), relay.shape_of(uop_7403))) # shape=(9, 6, 5)
bop_7418 = relay.logical_and(uop_7405.astype('bool'), relay.reshape(call_7396.astype('bool'), relay.shape_of(uop_7405))) # shape=(9, 6, 5)
bop_7435 = relay.equal(uop_7403.astype('bool'), relay.reshape(bop_7415.astype('bool'), relay.shape_of(uop_7403))) # shape=(9, 6, 5)
bop_7438 = relay.equal(uop_7405.astype('bool'), relay.reshape(bop_7418.astype('bool'), relay.shape_of(uop_7405))) # shape=(9, 6, 5)
output = relay.Tuple([call_7409,const_7410,var_7411,bop_7435,])
output2 = relay.Tuple([call_7412,const_7410,var_7411,bop_7438,])
func_7440 = relay.Function([var_7411,], output)
mod['func_7440'] = func_7440
mod = relay.transform.InferType()(mod)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7441 = relay.var("var_7441", dtype = "uint64", shape = (525,))#candidate|7441|(525,)|var|uint64
func_7440_call = mutated_mod.get_global_var('func_7440')
call_7442 = func_7440_call(var_7441)
output = call_7442
func_7443 = relay.Function([var_7441], output)
mutated_mod['func_7443'] = func_7443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7459 = relay.var("var_7459", dtype = "float64", shape = (16, 5, 15))#candidate|7459|(16, 5, 15)|var|float64
uop_7460 = relay.atanh(var_7459.astype('float64')) # shape=(16, 5, 15)
output = uop_7460
output2 = uop_7460
func_7471 = relay.Function([var_7459,], output)
mod['func_7471'] = func_7471
mod = relay.transform.InferType()(mod)
var_7472 = relay.var("var_7472", dtype = "float64", shape = (16, 5, 15))#candidate|7472|(16, 5, 15)|var|float64
output = func_7471(var_7472)
func_7473 = relay.Function([var_7472], output)
mutated_mod['func_7473'] = func_7473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mod.get_global_var('func_6111')
func_6113_call = mutated_mod.get_global_var('func_6113')
call_7479 = relay.TupleGetItem(func_6111_call(), 0)
call_7480 = relay.TupleGetItem(func_6113_call(), 0)
func_6511_call = mod.get_global_var('func_6511')
func_6512_call = mutated_mod.get_global_var('func_6512')
call_7483 = func_6511_call()
call_7484 = func_6511_call()
output = relay.Tuple([call_7479,call_7483,])
output2 = relay.Tuple([call_7480,call_7484,])
func_7507 = relay.Function([], output)
mod['func_7507'] = func_7507
mod = relay.transform.InferType()(mod)
output = func_7507()
func_7508 = relay.Function([], output)
mutated_mod['func_7508'] = func_7508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6713_call = mod.get_global_var('func_6713')
func_6714_call = mutated_mod.get_global_var('func_6714')
call_7518 = relay.TupleGetItem(func_6713_call(), 1)
call_7519 = relay.TupleGetItem(func_6714_call(), 1)
func_5774_call = mod.get_global_var('func_5774')
func_5776_call = mutated_mod.get_global_var('func_5776')
const_7555 = relay.const([-5.824852,3.920004,8.493016,7.479860,4.328952,-6.967824,2.962674,-1.819611,0.081952,7.514539,-6.526350,1.252260], dtype = "float32")#candidate|7555|(12,)|const|float32
call_7554 = relay.TupleGetItem(func_5774_call(relay.reshape(const_7555.astype('float32'), [12,])), 0)
call_7556 = relay.TupleGetItem(func_5776_call(relay.reshape(const_7555.astype('float32'), [12,])), 0)
func_6713_call = mod.get_global_var('func_6713')
func_6714_call = mutated_mod.get_global_var('func_6714')
call_7559 = relay.TupleGetItem(func_6713_call(), 2)
call_7560 = relay.TupleGetItem(func_6714_call(), 2)
func_97_call = mod.get_global_var('func_97')
func_99_call = mutated_mod.get_global_var('func_99')
call_7570 = relay.TupleGetItem(func_97_call(relay.reshape(const_7555.astype('float32'), [4, 1, 3])), 0)
call_7571 = relay.TupleGetItem(func_99_call(relay.reshape(const_7555.astype('float32'), [4, 1, 3])), 0)
func_5505_call = mod.get_global_var('func_5505')
func_5512_call = mutated_mod.get_global_var('func_5512')
var_7574 = relay.var("var_7574", dtype = "int8", shape = ())#candidate|7574|()|var|int8
const_7575 = relay.const([7,-4,-2,-1,2,-3,10,8,-9,1,-7,5,1,5,-5,5,-2,8], dtype = "int8")#candidate|7575|(18,)|const|int8
const_7576 = relay.const([[-7,-7,8,-5,-9,6,-3,7,8,-2,5,2,-4,-7,-4,-10,-2,9,-4,-4,1,6,-8,10,5,5,-5,-2,-7,5,3,-4,10,-8,8,-1,4,1,-2,-10,-6,-1,-3,-7,1,2,7,3,-9,-6,-3,-4,-4,-10,9,-5,6,5,10,-10,5,-5,7,-2,6,-3,-2,-5,5,3,7,8,-6,3,-6,7,4,-4,9,-7,-1,-6,-9,-9,8,8,-10,9,1,1,6,1,-9,2,2,-5,-2,-5,-3,5,6,7,2,-1,-9,-2,-8,4,9,-5,7,-3,-10,2,-5,-5,2,7,7,7,-10,-10,4,-6,-1,-6,-3,-9,-9,6]], dtype = "int8")#candidate|7576|(1, 130)|const|int8
var_7577 = relay.var("var_7577", dtype = "float64", shape = (2100,))#candidate|7577|(2100,)|var|float64
call_7573 = relay.TupleGetItem(func_5505_call(relay.reshape(var_7574.astype('int8'), []), relay.reshape(const_7575.astype('int8'), [6, 1, 3]), relay.reshape(const_7576.astype('int8'), [130,]), relay.reshape(call_7570.astype('float32'), [12,]), relay.reshape(var_7577.astype('float64'), [2100,]), ), 1)
call_7578 = relay.TupleGetItem(func_5512_call(relay.reshape(var_7574.astype('int8'), []), relay.reshape(const_7575.astype('int8'), [6, 1, 3]), relay.reshape(const_7576.astype('int8'), [130,]), relay.reshape(call_7570.astype('float32'), [12,]), relay.reshape(var_7577.astype('float64'), [2100,]), ), 1)
uop_7595 = relay.sqrt(call_7573.astype('float64')) # shape=(9, 6, 5)
uop_7597 = relay.sqrt(call_7578.astype('float64')) # shape=(9, 6, 5)
output = relay.Tuple([call_7518,call_7554,const_7555,call_7559,call_7570,var_7574,const_7575,const_7576,var_7577,uop_7595,])
output2 = relay.Tuple([call_7519,call_7556,const_7555,call_7560,call_7571,var_7574,const_7575,const_7576,var_7577,uop_7597,])
func_7600 = relay.Function([var_7574,var_7577,], output)
mod['func_7600'] = func_7600
mod = relay.transform.InferType()(mod)
var_7601 = relay.var("var_7601", dtype = "int8", shape = ())#candidate|7601|()|var|int8
var_7602 = relay.var("var_7602", dtype = "float64", shape = (2100,))#candidate|7602|(2100,)|var|float64
output = func_7600(var_7601,var_7602,)
func_7603 = relay.Function([var_7601,var_7602,], output)
mutated_mod['func_7603'] = func_7603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6329_call = mod.get_global_var('func_6329')
func_6330_call = mutated_mod.get_global_var('func_6330')
call_7608 = func_6329_call()
call_7609 = func_6329_call()
uop_7612 = relay.sigmoid(call_7608.astype('float64')) # shape=(9, 6, 5)
uop_7614 = relay.sigmoid(call_7609.astype('float64')) # shape=(9, 6, 5)
output = uop_7612
output2 = uop_7614
func_7616 = relay.Function([], output)
mod['func_7616'] = func_7616
mod = relay.transform.InferType()(mod)
output = func_7616()
func_7617 = relay.Function([], output)
mutated_mod['func_7617'] = func_7617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mod.get_global_var('func_5711')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_7620 = relay.TupleGetItem(func_5711_call(), 0)
call_7621 = relay.TupleGetItem(func_5712_call(), 0)
output = call_7620
output2 = call_7621
func_7622 = relay.Function([], output)
mod['func_7622'] = func_7622
mod = relay.transform.InferType()(mod)
output = func_7622()
func_7623 = relay.Function([], output)
mutated_mod['func_7623'] = func_7623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mod.get_global_var('func_7253')
func_7255_call = mutated_mod.get_global_var('func_7255')
call_7626 = relay.TupleGetItem(func_7253_call(), 0)
call_7627 = relay.TupleGetItem(func_7255_call(), 0)
uop_7633 = relay.rsqrt(call_7626.astype('float64')) # shape=(9, 6, 5)
uop_7635 = relay.rsqrt(call_7627.astype('float64')) # shape=(9, 6, 5)
output = uop_7633
output2 = uop_7635
func_7638 = relay.Function([], output)
mod['func_7638'] = func_7638
mod = relay.transform.InferType()(mod)
output = func_7638()
func_7639 = relay.Function([], output)
mutated_mod['func_7639'] = func_7639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7638_call = mod.get_global_var('func_7638')
func_7639_call = mutated_mod.get_global_var('func_7639')
call_7643 = func_7638_call()
call_7644 = func_7638_call()
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_7657 = relay.TupleGetItem(func_7273_call(), 0)
call_7658 = relay.TupleGetItem(func_7275_call(), 0)
output = relay.Tuple([call_7643,call_7657,])
output2 = relay.Tuple([call_7644,call_7658,])
func_7662 = relay.Function([], output)
mod['func_7662'] = func_7662
mod = relay.transform.InferType()(mod)
output = func_7662()
func_7663 = relay.Function([], output)
mutated_mod['func_7663'] = func_7663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7622_call = mod.get_global_var('func_7622')
func_7623_call = mutated_mod.get_global_var('func_7623')
call_7674 = func_7622_call()
call_7675 = func_7622_call()
output = call_7674
output2 = call_7675
func_7710 = relay.Function([], output)
mod['func_7710'] = func_7710
mod = relay.transform.InferType()(mod)
mutated_mod['func_7710'] = func_7710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7710_call = mutated_mod.get_global_var('func_7710')
call_7711 = func_7710_call()
output = call_7711
func_7712 = relay.Function([], output)
mutated_mod['func_7712'] = func_7712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6511_call = mod.get_global_var('func_6511')
func_6512_call = mutated_mod.get_global_var('func_6512')
call_7860 = func_6511_call()
call_7861 = func_6511_call()
func_7061_call = mod.get_global_var('func_7061')
func_7065_call = mutated_mod.get_global_var('func_7065')
const_7884 = relay.const([5.848204,8.358625,-4.292903,9.953881,-2.599200,-5.974317,3.716704,-0.594149,6.112918,-9.397307,4.654044,-7.474471,9.097076,-2.101709,9.332486,0.681442,0.246679,-9.797903,-8.219220,0.991713,5.952074,1.129147,3.630103,3.787303,0.227814,-3.645524,-8.975930,7.229224,8.646756,-9.648237,6.301029,-2.275907,-9.721829,2.807336,-9.262838,-6.073196,-1.044133,-8.928775,6.924540,1.932788,1.069361,9.837675,-8.920266,8.707438,-5.582741,-4.212625,8.546279,-2.160295,9.523334,-1.890753,9.552104,-9.676807,-2.966761,5.224736,-5.799159,8.949053,1.963448,6.613765,1.797322,8.038995,-3.813154,-1.904918,-1.989212,-5.350141,-1.912654,2.916235,9.519565,4.043886,-0.574946,9.690152,7.340112,-8.032166,6.738452,4.590188,-2.231799,-2.791099,-0.127866,-4.913410,8.786947,5.076420,6.597388,2.151138,-6.293327,4.675957,-5.968104,6.166865,7.186613,-5.695658,-1.409928,3.080093,-6.014051,8.249193,-1.472721,-5.607214,-6.063811,4.235502,-8.839315,-6.345827,-6.829053,-5.865917,-8.832034,-1.989088,4.176792,-9.473243,-0.622541,8.023530,2.055868,-8.462638,-1.781417,-6.410107,-2.113409,8.544685,-6.166236,1.835110,2.725183,8.940486,4.822875,7.215186,-6.036212,-1.068789,3.022864,-7.560903,9.081353,8.343405,2.757362,-6.882083,6.764577,-9.381180,-5.408566,-7.529914,1.011165,1.125434,-6.116442,-8.151984,0.033838,7.824796,-5.892531,1.425796,-6.858479,1.657251,-5.335341,3.952947,5.708002,-8.011275,5.284803,6.747519,-6.296079,-5.605830,0.087496,-9.892850,8.822625,-5.934706,9.084736,7.768704,-1.823206,8.156895,4.468821,-2.991319,-5.705635,-1.476306,-3.409794,5.944688,-8.021029,8.501117,-2.726581,-2.072116,0.869750,4.844504,1.796836,4.030813,0.387099,-7.379630,5.876950,-2.603361,3.015220,-7.976200,-2.815549,6.649010,1.607693,5.328682,-3.450352,2.618784,-6.794766,-6.859011,-3.128581,5.393336,-1.244870,-3.254586,-8.087457,5.023794,2.413380,6.403404,0.441441,-0.557852,1.928902,-6.375469,-7.352957,-5.831711,-6.990160,-9.233859,-4.122369,8.999500,2.926935,-6.771556,-2.941020,-8.606821,4.191768,9.922880,-8.879115,5.748289,6.481211,4.927082,-5.398374,-8.604940,-2.070910,3.580784,-5.491239,2.672442,-9.129073,-9.181193,8.793550,-3.869496,-2.291214,-6.360708,7.826127,4.695968,1.682252,-6.327018,-9.203479,9.255772,0.576243,6.890436,5.408081,-8.932895,-1.047177,-4.310272,1.396756,5.482746,-0.667498,-5.413046,8.115720,8.326230,-9.247757,-6.125091,-1.337010,5.936522,-4.516843,-2.125838,6.440848,2.742060,8.238846,7.958806,-8.790739,-1.443568,-1.568596,7.878659,-1.533025,2.880503,-4.551178,5.349554,2.596599,0.207891,3.635430,0.053964,-9.967177,4.184963,-6.196869,-5.612000,0.147117,0.378361,0.958985,2.235008,2.312169,-7.241150,9.103837,0.197215,-2.404882,-7.929118,-3.627624,-1.248621,6.339022,-7.393755,-0.287022,-4.177430,1.548371,-2.482523,-3.415144,7.090737,-3.244057,-4.501619,3.209654,-8.738125,-8.505985,-7.725753,-4.881611,6.085976,-1.646729,6.535332,-5.638678,-9.918160,8.271847,-5.607686,-3.939744,-4.708311,3.567778,-1.209946,-0.676332,-1.779817,-2.786704,1.742256,8.884804,-4.958020,-7.573934,-6.802528,4.948433,-2.065187,6.330988,6.556094,-3.798309,-1.525742,-1.856612,3.835096,3.234788,7.414865,-1.008167,-3.089502,3.794197,8.390244,-2.275990,-8.292223,-2.197605,8.817360,9.739106,3.634881,-5.424501,1.630317,0.030267,7.391711,-0.133673,-7.846997,6.842832,-5.926350,4.380432,-2.892524,5.695593,3.997811,7.965770,-1.957238,5.226688,2.978667,0.707658,-0.539291,2.171686,-0.554060,-3.461723,-4.954897,0.411420,-9.984132,-2.251616,5.055723,8.036475,4.635421,3.589942,1.148809,7.449144,-7.994651,2.218628,1.422644,-9.561600,-6.973890,-4.189425,-2.245898,4.770085,-9.025029,5.927314,-1.854690,1.390398,6.443709,4.621315,6.540116,3.910812,4.084887,9.605011,2.645457,-4.125885,-9.870016,-1.248471,4.343157,-2.211086,8.345359,4.751656,-9.245421,1.512650,0.989503,9.711237,-0.110218,-1.399089,3.150280,-0.888583,0.358299,5.451075,-9.948070,-3.936684,7.393791,2.541966,-1.749109,-4.518604,9.318688,-9.841734,-6.221589,-1.964772,7.947585,5.257936,-9.292465,4.929547,-9.521829,6.863839,9.034654,-3.925051,-5.463520,0.058319,-2.595457,-7.101705,-6.294068,-7.470512,-2.523033,8.507093,6.770492,-2.912151,-6.747269,4.087247,-4.923547,6.784823,-2.253199,1.950856,-0.819988,6.713368,-1.388903,-9.794781,7.428940,-5.987321,6.236006,2.437253,-6.643749,-5.661183,3.480674,4.729587,2.055122,4.206280,1.527156,-6.265051,-6.644430,-2.689807,7.980355,5.673582,-1.380340,-4.989697,5.345990,-1.437998,-7.868856,-0.160725,8.986393,1.839107,6.914220,-1.603749,6.093750,-9.771980,5.217575,2.847511,1.539280,4.989747,-0.890016,-2.071135,9.945672,2.370832,2.074941,9.520239,7.038535,7.006544,-6.139558,4.100458,6.110338,1.019931,5.710893,5.362027,0.713615,-5.037170,2.227071,1.263010,1.308140,-4.009345,-2.459493,5.983287,-8.916244,-2.697629,2.684734,9.666583,7.046773,4.180772,1.358580,-9.337632,2.281001,-5.592603,7.539709,6.532543,-1.172168,4.625818,0.369306,-6.473290,-9.075487,-2.440365,1.444779,-7.851763,-0.672217,3.994316,-2.022123,-2.345288,-8.860748,-9.332008,-3.653839,-9.035839,1.544233,-9.502990,1.827321,3.300505,1.467551,4.131579,7.303253,-0.596526,8.866539,2.524614,2.748948,7.313472,-5.021085,8.244834,0.647440,8.728604,3.404294,4.378360,-6.354430,-2.537094,5.091782,-0.768613,7.411190,-5.941816,-9.566326,7.062549,-0.382828,2.689609,-1.084012,0.498725,9.374881,5.869798,-8.451105,8.716326,7.858594,6.261837,7.508662,5.348669,-5.948943,3.375400,9.519792,-7.704591,6.347283,-6.025938,-7.580752,1.370664,-2.402548,-0.978207,9.998525,5.253131,-6.664556,5.288914,7.058176,-3.121119,9.984322,-6.770351,-0.252579,-9.854493,4.651531,-5.122094,-1.428270,1.508385,-7.209193,-9.858219,5.927130,-5.940121,-3.825950,5.330990,-8.705672,5.887540,1.910507,-5.598764,-1.030501,4.996694,2.892323,8.153618,7.486139,-1.584361,-3.144839,3.654489,-7.354397,5.120183,-3.371113,-5.400714,3.342887,-3.165578,-7.001262,-0.577552,6.472386,-6.427454,8.445547,-0.946760,-3.934938,-3.863245,5.334927,-3.879914,8.621335,-9.357636,-5.924343,-8.864220,-6.824878,-8.470792,6.681033,3.443099,-4.787999,9.150491,7.451671,-9.240699,-3.354489,5.399359,-7.929958,-7.455360,7.900469,0.167896,7.715614,0.571560,-7.626308,-1.322975,6.228670,-6.601651,5.544163,6.117211,-3.885979,-6.035002,3.001734,-9.340417,4.576389,8.517217,-6.182902,-9.885549,3.108504,0.599288,0.398807,8.287268,-5.747698,-8.784704,-0.325175,-1.484323,3.630660,7.744179,-8.402296,4.785969,-6.280634,9.929649,5.157117,4.872782,6.664350,4.824440,-2.906269,0.321743,-9.321545,5.342056,-2.867019,4.668995,-6.774485,-3.101953,6.867121,5.886107,-1.929467,-7.392664,-6.112794,-7.978333,-2.452816,0.841332,6.949887,9.547472,-5.675743,-8.520245,5.787291,9.564583,-6.808982,-7.165026,6.181699,-5.598385,-9.313303,1.071710,-7.395173,5.564344,1.932002,1.776820,5.134628,0.029870,6.086758,-9.932420,5.123701,2.585446,5.535003,3.676860,4.913400,7.184476,-7.503753,-0.381181,-4.814781,-1.666397,-9.085288,-6.705750,-3.972874,-5.963149,7.516149,-1.460661,-3.733440,9.224008,-4.567211,-2.962964,-8.479149,6.340827,-4.292199,0.029353,6.106925,2.079860,7.019996,-1.672705,4.479435,-5.533802,9.420265,9.067388,-7.491054,-6.564062,-3.153896,-4.257230,-5.386100,6.912401,6.090344,4.868068,-0.904049,5.745194,5.356219,-1.456940,-3.190651,8.805393,3.076241,5.053186,5.457674,-0.153682,-2.329721,-8.478773,4.509842,2.997419,-2.565307,4.758797,4.472922,9.565230,-8.416364,8.175745,-6.592086,6.441769,-5.018940,5.400566,-3.524604,3.462046,-4.012306,8.996819,6.091847,-3.106932,6.273137,2.837755,-7.775827,8.134712,-3.239712,3.183399,-2.176463,-1.704183,4.722117,-2.362871,-8.837426,-3.728194,-1.705737,-0.166082,9.767173,6.613446,-5.893040,7.182940,3.079369,-5.780527,-8.042815,-4.214343,-8.324702,6.718286,-0.042778,5.839703,2.436995,8.655038,7.010489,8.840279,8.589060,9.329270,6.102436,-0.250813,-4.771217,-4.238999,0.476753,1.526060,-2.047880,6.128768,-2.167672,6.423206,3.153960,6.447041,-1.384259,1.623554,-8.333639,6.459526,3.624233,-3.261641,-0.230146,-8.151856,-2.962475,4.002696,-3.349544,8.583174,8.614807,-0.615855,-7.660751,1.509134,9.096670,-3.510684,-9.419175,5.104137,2.652029,2.467169,2.533097,6.875633,6.177298,-8.544162,-5.947609,-9.874243,-7.552725,-0.418384,9.456030,5.239621,-8.064794,-7.855790,6.675904,-2.758366,6.707684,2.061396,-9.790948,-6.598200,9.909639,9.389006,1.681138,-5.624762,7.042030,-5.348734,-8.770839,7.725694,0.721552,6.201576,0.739911,8.252201,2.762250,6.266935,-5.667948,7.603906,-7.180440,0.299597,2.962652,9.068737,-1.884883,4.302612,4.860598,3.179520,-8.829926,-5.513539,-0.917243,-2.860099,-6.697286,0.666425,-9.871642,-4.789454,-0.934354,-7.979453,8.195158,-7.371485,9.133133,8.749782,-9.465220,4.936125,0.387407,-1.667504,7.227238,-7.477736,8.428491,-1.002419,-4.495877,-0.426828,-0.826757,-5.832070,4.968513,4.253028,-3.507940,4.759415,9.381039,6.340519,-8.254147,9.280512,4.224151,6.998054,3.931321,-4.464577,1.068821,-2.376198,1.727230,5.284627,0.400553,3.174819,5.541775,-3.284989,9.660307,-7.908380,-5.616891,7.472712,6.298349,-8.811903,8.205484,-9.752919,6.964217,-3.595696,-0.607186,6.073281,1.584792,0.300063,-0.265851,8.528421,-8.102110,3.381679,0.362255,-5.240515,-6.746763,-7.561368,9.478397,-7.805960,6.496390,2.310406,-7.452636,-5.119935,7.481546,5.013274,7.476780,5.979640,-7.919587,-5.582350,0.070723,-3.733425,0.396517,2.392099,7.733098,-3.807852,1.892885,-3.595363,-8.350526,0.118972,4.544356,6.279030,6.323304,-0.140248,-4.522953,-8.612197,4.583796,7.468747,0.799603,3.670052,-3.458681,9.216166,2.590498,4.910755,-6.738829,2.697914,5.298015,5.581888,0.331368,-5.774345,-0.766444,8.890648,9.248845,8.901189,-6.013840,-3.225153,-0.243138,-2.432191,4.192117,8.440906,-4.072165,5.680971,-4.945519,-7.107418,-5.930001,3.624666,7.076534,-7.443925,7.985518,1.227012,-2.277613,-5.512400,-7.630889,-9.212493,-8.092035,6.428497,-1.843741,9.588766,2.732983,-8.843421,-7.457476,8.157803,5.232565,2.194198,5.305035,-5.126061,-5.635442,-6.277298,0.969286,-5.326676,-3.354109,-6.962487,0.012796,2.990675,1.883605,-3.822255,2.174105,-2.694815,-3.507882,8.532466,-6.613604,4.221673,-1.121830,7.994717,9.024964,-5.207508,-7.138614,-8.250721,-4.242697,-3.704859,-7.762110,9.646943,-7.038098,-2.532920,6.749337,-0.833743,0.892403,-4.592542,4.454164,4.694502,-9.984517,2.334341,-1.666471,-0.908024,4.388715,-1.307670,6.560298,-6.741448,9.962082,-1.452939,-7.605850,5.094878,7.125194,-4.005064,9.391349,8.911472,8.198869,-6.342971,-2.731975,-9.429657,-4.259925,5.041116,-4.348070,4.817444,-9.826766,8.788308,5.795353,-1.183797,-4.708168,7.634193,-7.175422,8.070716,2.352190,4.370632,-3.524942,-6.914691,0.410942,2.332031,7.894230,0.826550,-1.124326,-7.826248,3.472753,-9.625876,5.630038,-1.927727,-3.415878,9.552759,3.444565,-7.888277,-2.416610,-8.394849,-4.046418,-0.885895,3.402997,-5.524226,-1.083672,3.518921,2.145772,5.920301,7.252051,6.276787,-0.105266,-7.553813,8.830774,6.592514,1.018424,5.769905,5.572203,7.345581,-6.742714,1.375844,-4.599308,-2.665475,-1.842155,7.858404,0.614403,-6.465328,7.358368,-8.104863,6.642097,9.492171,0.345929,-9.487834,-6.797551,1.636780,4.157521,0.388100,1.877147,-5.110415,4.635424,-0.253939,-7.781630,-5.357855,3.216639,-4.095219,6.461131,5.270238,9.049314,9.000360,1.226885,-3.862743,6.955335,-2.247269,7.080727,9.841990,-4.401785,-1.720600,-4.463740,1.772154,5.590051,-3.954376,6.905484,1.464576,1.066026,-5.790294,-9.360103,-7.753097,-9.745842,-2.010162,9.583513,-9.777207,9.824189,-8.484156,-6.998673,2.070722,7.558905,-9.475069,8.564071,7.317526,-3.287031,4.854262,-1.260473,3.439155,1.204380,6.590732,4.448736,-8.911482,-6.301261,-8.474808,-8.068425,-9.718875,9.201804,-8.473126,-2.002305,3.733236,0.031486,9.693833,-5.785141,-1.341072,8.118840,-3.808820,-7.244469,4.278682,4.033489,2.826240,-9.593086,-2.764397,-5.789726,-4.397201,-1.633322,5.973924,9.512509,-9.368308,1.642503,5.427939,-6.826288,0.962258,-6.675738,1.826798,-6.382023,-5.759466,-4.112225,-4.145399,6.786228,0.608114,8.603778,-5.249111,-9.281427,-9.122856,7.003504,-7.826216,-0.308116,-2.095614,-5.484941,-3.111622,-9.806485,6.738611,0.699473,2.593105,8.176455,1.497560,-8.837327,0.825379,-5.653796,-6.847948,9.251249,7.225482,0.179612,-5.081945,2.045879,-0.643934,9.325154,-8.816093,-9.949983,-8.944311,-6.346078,-7.112192,9.915377,7.430787,1.206632,1.085712,-8.400569,-6.893530,5.590788,-1.360382,-1.825830,-5.574414,-7.739963,-3.637636,9.582275,-7.301938,-7.645168,-0.491177,-4.204033,1.336191,7.697785,-2.975563,2.379141,3.273590,-8.089417,9.089285,0.961908,-3.200612,-3.381592,-2.881345,7.835879,-6.785657,1.916394,9.626503,-6.714888,9.851119,-0.082780,-5.503470,7.414140,-5.673131,8.900206,-5.560186,5.667517,-5.004930,2.389473,8.372209,-4.151857,5.216407,-5.110488,9.117560,6.656959,4.114788,9.049533,-8.877644,4.879397,-7.635887,-5.913399,8.806580,6.337281,-9.824168,-4.969919,-0.511710,2.462480,-4.701868,-1.568606,-8.525788,2.354641,6.018325,4.234466,5.542910,-8.256024,8.166006,-6.443736,8.768961,1.609154,-2.679078,5.890953,-7.835052,-7.570103,0.461811,-5.246873,7.230463,7.911197,-4.609722,-7.904439,5.528505,9.483227,3.176152,-1.002021,-0.507693,-0.734436,5.590956,6.763196,-9.449620,7.720177,-8.635845,-6.061910,2.215806,2.865877,-7.533532,8.065787,-6.536502,2.112600,-3.978407,-1.668073,0.329533,4.604775,2.210965,-7.646383,3.858732,6.064080,6.994632,6.620408,3.593755,5.062084,-2.554230,2.250938,1.821582,-5.037435,-6.994029,-4.563152,-6.568511,7.387990,-8.912236,5.880611,2.725610,-7.518544,-4.515675,9.889168,-0.338858,-9.899432,8.545289,6.315003,-4.718592,-7.190088,5.510111,-4.513740,-9.004132,9.733004,9.900469,-7.186945,6.098140,8.443162,-6.969050,4.789622,6.694178,1.909758,9.293651,-0.004371,0.935758,8.541784,0.073283,-5.201961,9.154893,2.881399,-4.781963,6.966344,-0.067211,-9.380554,3.504918,5.832612,3.607788,4.419242,4.333230,-1.354465,-0.734653,7.947211,8.228440,1.082574,0.361826,6.709856,2.290426,0.363090,4.704666,-6.720957,0.802103,-6.712496,7.585867,-0.444559,5.938274,8.429743,-0.056203,3.850132,-7.485725,-2.226528,5.841422,6.185518,-7.513400,-9.329940,-3.182094,-9.908610,-6.119434,-8.961179,-3.792661,8.957738,6.585530,4.062327,5.371731,1.412948,1.828057,-7.642857,7.846280,2.398073,-5.014843,-4.448243,0.651136,1.912294,4.160457,6.662288,-4.081348,5.839268,7.755253,7.931505,3.643166,-0.272029,-9.574240,-8.589803,-0.081316,6.417917,3.774924,-7.531283,-7.456446,7.181109,2.397190,7.492841,3.830656,-3.900983,4.410147,9.320805,-6.674517,8.934103,-1.197082,7.922277,-4.054120,-0.784117,-0.197792,-2.853903,-0.661977,-3.523177,-2.070203,3.146950,-2.855851,-1.613510,0.357672,-4.338687,9.619125,-8.712442,3.508076,-9.829584,-1.010780,-0.629576,6.639970,7.285151,-1.930191,-0.209253,3.275106,-0.608231,4.643774,5.141760,-8.315906,-2.546103,7.178676,-9.213424,-8.219072,-1.793258,5.205471,3.092872,6.427919,-1.193726,-6.359380,-4.334221,-8.714457,3.371372,7.437382,-7.216213,3.254248,1.118872,6.813808,4.857228,3.420791,-0.976797,-7.993061,6.403316,-3.346742,3.799185,-9.642196,-5.847499,-8.432720,-5.850136,-8.665103,-7.777760,-2.448031,-2.649173,3.224326,4.966061,-9.787619,1.705426,-8.475346,-5.411422,-0.317038,4.172176,-1.102024,5.470217,-9.537761,-5.400856,-0.869047,-1.045048,6.498841,-0.700441,-0.502008,9.172485,2.130517,-9.060543,2.218231,-6.089479,-6.516407,5.200202,0.304745,-3.533610,-1.696250,-3.579250,1.035028,4.442995,3.272657,1.632754,-8.482392,-1.433166,9.683645,3.609850,-2.965546,-0.653091,5.583657,3.233866,-0.870371,-2.177030,-2.508593,4.240090,7.981348,-8.413150,-0.899529,7.211764,-0.318930,-0.036299,-5.330962,5.737685,2.051323,9.400225,2.941677,0.816014,-7.142688,-0.873415,-9.438804,-3.788200,0.759248,-5.677618,-8.671395,-5.784108,-7.223782,-6.314954,-3.787961,2.426072,0.679156,-0.561220,4.250384,-9.372070,-0.396384,-1.549710,-3.567920,-6.830884,-5.287263,3.642135,-3.418713,7.901705,-2.335752,2.719170,1.113905,-6.082589,-2.209458,1.050524,-5.771044,2.500140,6.288306,5.061264,2.026879,2.211353,4.168777,-8.147334,-7.628843,-5.983429,-4.291513,1.253492,-8.283008,-1.214323,-2.881576,-9.535682,-8.833052,0.746490,1.503105,7.052439,1.438850,-6.238918,-4.412612,-8.622933,5.000290,1.915515,5.544798,7.596464,0.624094,-0.439643,-2.015678,-9.325279,-3.328157,-2.640596,5.976713,-4.811836,-0.538109,4.554306,-2.925166,7.510294,-1.217222,1.973788,7.449907,9.553467,-7.021506,-5.755475,-9.566525,3.779185,6.977010,-7.148947,-3.922726,4.870413,-7.515090,4.939322,-4.198124,-3.466556,5.723464,-6.823945,-4.671846,1.741642,0.757408,0.280803,1.956984,0.644555,-4.305004,3.580747,-2.681446,9.990540,2.244261,5.944791,3.632361,-3.776457,1.320486,5.284388,-3.841831,4.234931,8.478882,4.488045,2.455409,8.976640,-8.738760,-7.188158,3.033935,9.680270,-3.051491,-0.419538,-2.370584,8.072125,-6.006037,-1.355931,2.714602,-5.189882,-3.691022,6.943821,-6.225813,-8.638814,9.904819,-3.036585,-2.991878,6.622570,-5.733969,7.250373,-8.299950,5.789734,4.076448,6.809946,3.862699,9.663577,3.310546,7.151062,7.457289,9.830645,8.621357,8.450766,9.282875,-7.398797,4.095608,0.980731,-3.811699,-9.574292,-8.579358,6.438377,6.181567,2.435892,4.634468,0.596843,-7.392151,-3.375159,-8.017708,-5.180124,-5.138649,8.541267,-7.723838,-4.475831,3.879138,-6.589996,-4.961385,8.727495,3.794077,4.994816,-1.255039,8.339197,8.538812,-1.020006,-0.814089,9.432641,6.763023,-3.603648,7.516739,6.184203,3.671116,-9.927967,1.960008,0.141459,8.350308,0.352484,8.117991,-0.688709,-3.314652,-0.641880,6.251765,-5.966035,4.260022,-0.733531,5.783705,4.866287,-8.558829,-7.352944,-3.748412,-3.471922,-1.573713,6.575194,-4.844804,-8.004160,-5.624077,3.389177,5.191537,-5.088194,-1.901022,1.316733,-6.739306,-8.976498,7.008635,-5.742934,2.664738,0.145501,7.214726,4.063545,-8.096462,-3.119001,6.089411,2.065784,7.831071,2.655627,-2.400039,0.946146,8.079044,1.577854,2.935955,-5.544573,-0.290986,-1.253796,-4.757610,-7.598118,-0.915398,7.263044,-4.435425,-5.292680,9.277812,-2.991056,-9.831208,-7.824537,9.548497,-4.488052,-8.981707,8.766431,-9.702034,-1.861519,-7.864384,-0.433467,0.678255,-4.705753,-0.699421,-0.317288,-8.309409,6.217882,-7.170607,-6.755651,-6.811479,-3.507878,-4.983748,2.499238,-7.707971,7.498580,-5.919415,5.359163,-6.276226,-5.540806,-7.801617,-9.715033,4.979776,3.866555,5.798661,8.483925,1.085944,-7.860720,-4.669730,-3.592824,3.273352,2.798760,8.227229,-9.787509,-0.853347,-7.322960,4.304630,7.821802,9.077816,-1.084329,-9.971072,-6.253826,-9.825025,5.933051,-5.863467,1.108547,-2.695839,-1.034632,8.233939,7.931749,2.840752,-9.189892,-9.988755,5.403255,-9.437343,-3.621927,0.560830,-3.220466,-4.200968,-5.655066,-7.244255,-2.686244,-5.593350,-4.054348,7.877469,7.504601,-4.266572,5.239384,7.071753,-8.726172,3.091405,4.053711,6.125307,-7.483063,6.564223,-2.740734,-9.045603,-0.592032,7.424890,-9.472156,-2.415240,9.710593,9.500771,8.685124,1.494799,-9.736646,9.565438,-3.695969,-2.302521,-8.385163,9.157313,8.839920,3.849955,2.476304,-2.829830,-9.116512,9.404683,0.981244,-8.095567,-4.158644,-3.884763,-7.093704,-7.654722,-0.328711,0.940832,-7.499770,-4.267435,-4.511542,-3.992841,-1.409573,0.487696,4.596906,0.108142,4.269734,-8.390583,3.736316,6.587298,-7.696421,-9.975555,-2.975545,3.894527,9.461815,-0.846253,0.762961,3.339021,0.854537,-3.954048,8.876547,-0.130793,-3.457235,-2.492617,1.208777,9.465523,9.534126,5.880886,-9.513526,3.936717,-6.153522,8.796102,-1.272156,7.893137,-8.827537,-6.210746,4.735038,-4.456666,8.738677,-0.780813,-8.270065,-7.362023,7.165486,6.611357,-1.272335,0.108591,-1.631414,2.999489,4.534116,6.773175,-4.068570,-4.718018,-9.333341,5.495514,3.603382,-5.213507,-5.027956,-3.745882,-5.405117,5.827157,-5.666473,8.848344,9.031480,7.580059,-3.099681,-7.859635,-3.680497,-6.121094,-8.327546,9.253292,4.113201,4.502473,-7.456848,-5.079837,-8.750819,-2.910621,-0.660226,0.917465,-2.457625,0.736933,8.047400,8.219544,-2.951245,-9.748081,-0.178827,-5.996860,-7.819100,3.024230,5.889461,4.729221,4.045798,-5.765568,-1.381409,8.270764,-9.709174,4.280572,9.835122,-2.957980,-8.609890,-8.248088,-6.150693,2.500049,-3.031525,2.540659,-4.296551,0.036440,-4.170623,7.734183,-8.619390,7.590006,5.013398,-7.850504,-5.363655,-2.007582,-5.340996,1.034697,-4.925661,4.207926,0.480907,-3.770654,8.544155,4.019748,-3.996736,-2.551451,6.014506,0.225655,-0.614089,9.963129,-8.468883,-0.165555,-3.763943,7.836925,-7.376116,-8.218361,-4.126957,8.952018,-6.649005,7.163913,5.743079,4.185630,-9.712186,-9.749569,6.825040,8.406086,3.703081,-3.975701,0.915611,-9.594579,-6.651128,7.885399,-2.746353,-5.820178,5.349314,7.236687,-0.702661,5.720587,2.240204,7.940609,-6.493469,0.055239,-8.957437,7.662923,1.862832,6.722014,-1.986512,-0.588188,9.263374,-4.301994,7.891886,-0.773187,-2.893134,-9.193400,2.810012,-2.918192,-5.599569,0.893780,2.748942,-4.162819,7.049790,-2.469108,-2.497808,-9.085841,-6.253684,-6.689090,-6.186130,8.631894,-7.154992,-3.888067,2.844750,1.235348,-6.609975,6.009964,-2.328753,5.628303,4.871178,6.068042,-0.867802,-8.944065,-9.189514,-2.974116,4.703144,-4.505311,6.223504,5.663251,4.325558,-9.306276,2.379627,-8.131637,4.317267,8.568876,1.032148,-0.292869,-9.632450,-3.466786,2.990439,0.359072,-4.075149,2.020610,7.232998,3.403128,5.516528,-1.901578,6.792023,-8.771145,-1.974131,6.982477,4.022379,-7.943791,-5.690609,-8.795564,5.781287,-8.639923,4.038631,-3.311675,-0.095164,-7.276319,3.026627,8.309258,4.918076,-7.000911,6.954488,3.855349,6.527349,8.934059,7.977498,-7.864069,9.917109,-8.165132,-4.678222,4.006234,-7.316987,-3.153367,7.038400,-3.191176,-0.795398,-7.434427,1.610990,-6.485475,5.179294,-6.664691,9.270854,-5.179629,-4.787023,-2.277318,4.115262,7.044871,6.949955,8.772480,4.175142,9.667038,-5.023615,-5.434497,2.579453,2.980332,-9.090228,2.888706,-8.368401,-2.252957,1.209329,3.694406,6.565044,-5.040703,-9.157633,4.674796,-9.713885,8.165659,-6.517191,-7.811594,-1.707503,6.845032,5.258710,4.044387,-5.041160,-6.219643,-9.956709,-8.085677,6.241071,-3.982449,-2.902458,0.981458,-3.469612,-6.277550,-9.572408,-3.205592,-1.665489,7.095721,2.815835,5.964063,7.917276,2.096654,6.299764,8.754435,-5.201315,-4.311189,2.554439,7.176298,4.376470,-3.871281,-0.730735,-5.281904,-7.069017,4.121450,-7.157388,7.377974,-9.832599,7.319549,-1.897474,-1.753175,-2.247729,-0.419173,9.300582,6.600548,4.578166,-4.848673,8.920314,-6.395315,5.386324,0.186984,-7.840641,5.421582,0.331223,-4.833780,0.598344,-2.220037,4.123443,7.475851,0.341298,3.422628,-4.029108,-0.527209,7.013938,-1.150320,-7.737377,-2.961267,-2.319543,-2.768862,8.974740,-3.672372,1.432384,-2.102947,7.360605,3.900006,3.141163,4.445364,7.669546,1.537526,-1.189517,2.590499,9.206367,2.888862,8.897781,5.245586,-6.929544,5.580225,-6.971364,-4.975424,2.257679,-9.470150,9.563589,-0.943829,-1.628551,9.038061,3.201980,8.641283,-8.161891,6.236972,-6.301609,-0.047587,-1.769329,8.602945,-2.084050,-0.096879,6.589698,-7.044395,-5.830385,9.389136,-5.911818,0.779744,9.970679,-8.494006,9.805583,7.526435,-3.368382,-3.339340,1.282877,1.511154,2.300357,2.217007,5.766358,9.939813,5.351623,-9.955807,5.779295,4.438758,-0.547860,2.551840,5.756911,-4.326623,-1.063555,-8.201645,-2.732738,7.894264,6.672122,-4.400062,-0.873893,-1.974238,0.883431,2.788017,-3.072861,4.112142,-2.152960,-0.338087,-9.234713,0.890662,8.955463,-9.388631,-1.464390,-6.255228,0.978544,-1.350370,-5.523787,3.316938,2.514141,0.299932,1.587857,-5.016004,1.639459,-8.074681,2.753813,-8.331545,0.369518,-5.993149,6.812754,-9.967008,-9.362722,-6.898422,4.499248,-5.280615,8.093067,0.981938,-7.313698,-7.820363,-0.536038,8.094686,9.401169,8.174763,0.595519,-3.842709,-2.956231,1.299731,5.133627,8.791483,2.514177,0.227788,0.454869,6.015162,-1.698859,3.303145,-0.130255,8.552167,7.623965,5.643724,-4.525509,7.463697,-9.039100,3.190750,-7.788496,-0.235709,-2.508703,-0.279152,-1.655265,-7.214980,-7.790450,-1.984857,-4.027121,-6.182055,-0.475928,-3.881153,5.132954,1.976361,-0.063460,8.886381,7.100238,-1.927274,8.756344,-1.906898,1.345107,-3.108345,-6.216418,-3.943837,-7.526154,-8.368939,-7.258722,-2.766815,-6.102375,9.939295,-4.774436,-6.874292,9.328030,-9.879655,4.881218,-6.899689,4.103051,-2.040217,9.732134,-3.310658,6.385068,-8.375298,-0.268165,7.390613,-8.839694,3.589945,6.880707,3.358816,9.004129,2.988408,-1.081477,9.238169,6.888648,6.658811,-7.200349,-3.116688,6.518061,-3.900396,8.603494,-2.260123,-1.053299], dtype = "float64")#candidate|7884|(2520,)|const|float64
call_7883 = relay.TupleGetItem(func_7061_call(relay.reshape(const_7884.astype('float64'), [12, 15, 14]), relay.reshape(const_7884.astype('float64'), [12, 15, 14]), ), 0)
call_7885 = relay.TupleGetItem(func_7065_call(relay.reshape(const_7884.astype('float64'), [12, 15, 14]), relay.reshape(const_7884.astype('float64'), [12, 15, 14]), ), 0)
var_7888 = relay.var("var_7888", dtype = "float64", shape = (2520,))#candidate|7888|(2520,)|var|float64
bop_7889 = relay.subtract(const_7884.astype('int8'), relay.reshape(var_7888.astype('int8'), relay.shape_of(const_7884))) # shape=(2520,)
func_5836_call = mod.get_global_var('func_5836')
func_5842_call = mutated_mod.get_global_var('func_5842')
const_7896 = relay.const(5, dtype = "int8")#candidate|7896|()|const|int8
var_7897 = relay.var("var_7897", dtype = "int8", shape = (18,))#candidate|7897|(18,)|var|int8
var_7898 = relay.var("var_7898", dtype = "int8", shape = (130,))#candidate|7898|(130,)|var|int8
const_7899 = relay.const([[-3.215185,6.248196,-3.366426,4.943284,1.271689,-1.194335,9.577400,1.302038,7.454209,3.910923,3.116640,-6.181095]], dtype = "float32")#candidate|7899|(1, 12)|const|float32
const_7900 = relay.const([-4.076978,6.967354,-5.999586,-0.895925,1.007184,-2.092108,-2.270301,1.633320,5.194174,-4.369994,2.618466,-0.192912,9.134743,5.646557,0.589651,-9.341114,3.239062,-8.475919,3.446943,-7.550152,-0.687424,1.893367,-5.627087,7.844375,3.778758,-9.973317,0.087268,7.195808,0.218056,-1.003446,-3.173052,2.265614,-9.674095,7.865625,-5.893735,-4.666541,9.407608,9.190817,6.792815,7.675098,-1.789712,0.918200,-0.354443,-2.930521,5.699140,-8.996085,-6.137917,-1.552056,2.638271,-1.174877,6.302369,3.508148,-6.053116,-2.005320,5.021004,-8.271681,4.142878,2.913700,-4.843364,-5.071070,-3.517795,-5.377649,-7.149270,7.032411,-0.630339,1.979499,7.782717,-8.117022,-1.688909,2.058845,-2.520504,2.366906,5.149663,-6.770824,6.786910,5.506110,3.496303,-5.262288,-2.501311,-8.855936,2.413680,4.783101,-1.856218,-1.716223,-8.045706,-4.736807,5.027938,8.899721,-5.083414,-0.954311,-9.155530,-1.135674,1.667549,4.692983,-7.742025,9.905369,5.051390,-4.048552,-6.438244,-8.240056,-5.162244,-7.765421,0.073249,-2.603902,8.316225,9.105893,2.463258,1.572290,-2.533866,-3.625931,-0.023180,-5.527919,-2.147521,1.321726,8.560236,-8.545816,-7.444069,6.127236,-6.257430,-1.658751,-8.326703,5.426652,4.692985,2.289056,4.561793,-5.456565,5.968258,2.225313,-1.680716,-5.313679,6.077355,4.459096,9.439834,9.486865,0.786205,3.392528,3.761781,5.879193,-5.857733,-1.134746,-2.644890,0.075887,0.145264,-2.940286,-5.679581,9.669272,0.102181,6.813503,3.257947,-3.735013,-2.230153,-6.323477,-4.151126,-7.663838,-1.498175,-9.649210,-3.041860,-7.533783,-2.341909,8.446349,-2.454597,-6.186230,4.674724,-0.603148,-5.270105,7.752148,5.790968,-7.216500,8.845756,-5.003892,0.440478,1.444035,-9.110383,1.206409,-4.800873,0.185726,1.357503,-4.653828,-1.054565,3.558814,9.541915,7.660159,2.112172,-1.926171,3.590676,-1.663084,2.364801,-6.367438,-7.014765,-3.115339,-7.220055,4.587620,-2.168594,-7.083450,-5.596656,0.473580,8.606083,-7.196783,0.698093,3.167549,6.598690,7.816256,0.762910,7.654063,-7.373754,-8.026846,6.910412,-8.648108,1.002204,-6.400935,5.904348,6.520167,4.970092,5.657853,-1.793828,4.506965,-4.260801,-9.563041,-7.812556,4.811735,-6.698108,8.925045,2.330349,0.168332,-2.213191,9.868734,7.690385,-6.026240,-2.953978,4.482249,9.825015,7.686579,-2.511775,3.153608,6.354306,4.055058,5.412071,4.507829,-3.829593,7.697755,3.199264,-2.776576,-8.213799,3.116322,-6.279395,3.587145,1.951713,-6.340276,0.685572,-9.244236,-4.910383,-7.645672,-4.751486,8.955217,-6.273725,1.730627,1.836628,-8.560076,8.240705,-0.270823,6.563446,4.972723,-3.721569,-8.586468,2.664502,-6.656419,-9.844486,6.966109,0.245822,9.217440,-2.361440,5.782523,0.792058,6.164846,5.233402,-6.444887,7.831083,6.242826,9.423458,0.439329,-5.196133,8.612950,-1.485791,7.534958,7.293293,7.150943,7.880687,8.428127,7.512860,5.626802,-4.388420,2.410399,8.272865,-3.200770,-7.590192,-7.729187,1.927089,6.979136,-1.684694,4.087562,2.485090,5.602445,1.663296,3.332147,5.642002,2.797340,8.428764,-3.998450,6.424637,6.645949,-9.297915,-8.796737,0.182889,-1.315700,-5.575665,2.929791,-3.897917,6.716287,7.513048,-8.686636,8.887192,8.664787,-2.690332,-1.833254,-5.105714,1.113358,4.472921,-3.006172,2.704331,-7.413213,2.554266,-4.119950,7.250205,1.200856,-9.999304,1.726951,-3.163239,-0.759839,-9.001975,-1.400300,9.652078,-2.368367,-8.932596,3.720362,8.130501,1.260503,-2.565723,-3.020428,8.237668,-8.001624,-1.690497,-4.115966,-9.219459,8.067241,6.346107,2.772143,-6.239204,3.018418,7.095344,-2.199137,-2.396045,3.141867,0.564740,-7.619199,5.037953,0.677411,4.719399,-5.471459,-6.731383,-9.557690,-9.045746,-3.997637,7.901332,1.037641,4.091471,5.919096,9.286299,-6.852248,9.343857,-1.684042,9.154794,-8.101040,4.823927,6.125772,-8.578186,1.683025,6.858033,9.883644,0.576855,7.244588,6.406589,-3.635963,4.890594,2.423730,-7.982438,-4.438823,8.996447,-4.005561,0.462622,4.634630,3.807028,-1.843596,-6.348997,-2.662965,-2.128683,-0.857614,-8.511828,9.121473,0.070294,-5.699237,-5.317146,-7.857213,5.083034,-0.226969,-2.028635,0.795424,-2.417588,-5.918397,9.470273,-8.736897,8.273919,6.659600,2.841402,7.595750,-7.484885,-7.001623,-4.285957,-5.498641,0.708531,1.277280,-0.835400,-1.943447,-0.513920,-6.739099,9.052718,-7.479463,0.329560,-1.256229,-1.108726,-5.499831,-7.882235,6.067591,5.324412,-1.789927,-5.941141,-8.884444,-6.582649,5.649131,5.605999,9.699979,-4.235704,4.022024,7.996242,-6.414826,-9.917267,-8.457177,-4.978078,8.573807,-7.430350,-2.931432,8.759425,3.044186,2.559184,6.200502,-7.413431,6.121665,-0.416302,9.123533,6.585693,0.731621,-0.403384,-2.598988,5.376425,-5.908337,0.203643,-2.177693,0.056333,8.174347,-0.787151,1.708097,4.027588,6.346749,-9.232621,1.203749,-5.918140,7.651392,4.903793,7.310291,5.934125,-2.012509,3.418149,-8.480139,-6.600492,5.295417,-8.068930,-5.989087,-1.017108,6.623640,-9.176350,-6.776433,7.765950,5.346362,0.831600,7.835968,-9.079721,6.029485,-3.131523,-7.022742,6.407505,3.153026,-7.598099,9.677796,1.684032,9.440390,-1.530850,-4.067921,4.294483,-4.986414,3.096589,-0.604133,7.244347,8.620664,4.700136,-7.122261,6.955727,-0.413836,3.430584,-9.743818,-9.911913,-0.791568,9.421279,-2.483555,-0.792274,1.167258,-6.410963,0.242846,-6.492674,2.331889,-3.627256,-9.858632,7.203285,-9.232262,2.240617,4.410341,-2.206156,-2.922921,-7.069700,7.927989,0.210009,-9.920836,-7.171696,1.795455,-2.900993,-5.156000,-6.714248,9.482455,7.124386,7.251208,-0.080332,-6.083172,-2.626300,3.706442,3.342358,-7.411763,0.791419,-5.663905,-0.868636,-2.571267,-8.457158,-5.756104,-5.503231,-6.376651,0.928695,-7.866171,-1.573312,-3.394116,7.614139,6.863046,-9.381066,6.922227,3.082933,3.761559,4.748386,-1.174824,-8.717861,-6.049881,-7.643324,-8.730211,-7.607110,-8.052505,2.014166,-6.452590,-9.564902,7.943221,8.220356,-4.214489,-5.801699,-3.667079,-8.854077,3.019780,3.668257,7.318436,-8.225552,2.134126,-6.203226,9.061658,0.452876,-6.239458,-3.069287,-7.357363,-3.699925,-3.715641,0.566245,-8.050817,2.209254,-4.910551,4.725832,6.536973,-7.705182,8.169497,-9.443130,-5.354189,-8.022528,4.342398,7.991098,-2.993414,-6.162329,-4.995735,9.183588,5.379293,4.396812,-0.389083,5.300337,-4.029058,-2.251202,-0.240597,7.519763,-7.897732,6.477701,-3.301740,-2.790632,-8.380599,5.255625,-3.715626,4.481379,9.422593,1.186320,-9.057757,8.450834,-1.142833,-6.424998,-7.479956,-1.704207,6.747396,-4.190848,-6.613547,-3.562462,-5.021766,3.315468,-1.246916,-0.862886,2.349387,9.512907,5.581872,6.897208,8.722010,-3.809040,7.849357,-9.370197,8.705694,-4.614042,8.134764,-7.799762,-1.196138,-9.725314,9.474236,-5.707134,0.642743,-9.768337,8.934085,-6.867140,4.103565,-2.373549,3.842586,8.326482,-6.132745,-5.391998,-0.760955,2.447665,3.586549,8.713776,-1.092764,3.151313,-3.977811,-6.539430,1.664494,-3.108002,-3.191511,5.991417,3.974831,-9.460191,-1.049600,-0.776878,9.979469,8.964812,0.036007,1.280174,9.852689,8.659733,-9.837571,9.823439,7.779268,-8.732451,-4.584034,9.983912,-7.869540,1.266322,4.605600,7.747376,9.262374,7.911166,-1.816423,3.224445,2.311119,9.186244,-5.301677,-0.544320,-8.631162,5.702188,-2.366677,-6.894720,-5.823464,-2.489936,5.230221,6.121510,-3.510694,-2.646696,1.520718,-2.521151,-9.886804,5.621865,-6.889285,-9.957765,-2.919561,-8.945465,3.378453,-6.154725,-8.198027,5.016806,-8.474183,3.663231,7.628612,0.607523,9.988568,1.414220,2.739141,-7.063679,-5.519340,-3.133059,2.552760,-8.302303,-7.946745,-8.578726,9.494791,-6.721695,-9.911006,-8.518930,5.116276,4.454817,-5.867341,8.310074,0.535096,3.012498,-8.062423,-5.000423,-2.464463,-9.317357,1.438615,-9.352985,-8.309537,6.044547,-2.837705,-7.672370,8.865038,-7.243001,8.920138,-0.138827,5.337311,-0.773601,2.407880,8.874025,2.808833,-0.805509,5.181837,8.897055,-5.545795,-1.168212,1.268706,-6.723989,-2.420829,-2.942133,-9.891552,-5.734127,-6.194407,-7.315996,-9.687975,-4.959272,0.136790,-5.809546,3.969632,3.730763,-4.500163,-2.207897,-6.106601,4.545527,9.260307,-2.969134,-8.079819,1.585669,-7.576916,-3.511141,-8.324133,-2.154187,-2.396154,-5.788514,1.692924,9.666699,0.646241,4.604275,-4.290837,6.957354,-7.467120,-4.418981,-1.188004,0.469962,3.770971,0.118479,-1.762694,4.800312,8.357024,-8.840906,4.955105,-2.200215,6.437300,7.423111,-4.830114,1.235870,-1.904402,9.452610,-3.035547,5.369455,7.756313,6.518385,7.017312,-6.738310,-7.625985,5.365362,-6.424012,-0.984381,0.434208,8.607325,-3.717822,-7.426626,-3.172462,-0.937904,-5.716037,-3.862058,-6.482748,-1.576648,8.615253,-2.182123,7.938221,3.543815,-7.289970,-9.688113,0.770178,2.338363,-3.999242,2.235754,-9.470007,9.750352,7.843559,-8.899653,7.281156,9.538675,8.974026,-8.762710,6.332100,-6.645416,-8.440112,3.556831,-6.223449,8.749376,-9.683176,-6.195895,-3.926959,-7.905165,7.770190,-0.038228,0.615152,6.739189,5.188021,9.340727,-4.442035,-1.701850,-5.643744,-7.641399,6.492040,-7.500866,-7.797999,-0.037635,-7.472926,1.320215,8.943025,5.138879,9.797979,6.706520,-3.342664,-9.531512,-6.559313,8.547565,-9.297666,5.842350,-6.467711,-1.860520,-3.427417,3.284833,5.340239,9.752781,-0.748243,1.993640,1.716183,4.283804,1.566187,-3.934363,-0.047001,5.243136,-1.470139,-8.981751,-0.816589,5.698816,4.299767,4.219328,0.111817,6.601788,0.051019,-7.022374,2.363955,5.031893,6.406703,-6.845724,8.438102,-9.341066,6.597395,-2.016253,1.738173,-7.360073,4.406858,9.308102,-2.863380,-4.471301,0.105635,3.268670,-1.044986,-4.656108,-1.852508,-4.712140,-4.067553,4.748791,0.854780,5.150034,-9.400906,-7.569377,7.105147,-1.224015,-1.269936,-1.956094,9.556335,9.365486,-5.884261,4.243532,-9.418307,-6.789811,4.553782,-5.044339,-9.334964,5.325287,-8.929560,-3.423644,-1.901189,7.894826,6.767620,-8.615578,2.755043,4.584877,7.386742,1.362214,-9.084792,-4.556244,0.529402,-9.565379,-4.479909,-7.606475,4.132190,1.606045,-6.330141,0.558931,-2.321685,-7.560607,0.160144,8.624628,2.348276,-2.485295,-2.031785,6.002817,-8.469368,7.268240,8.878899,6.071376,-2.412380,-9.095247,8.412477,1.269508,-2.671233,-4.256450,0.618843,-1.158687,-5.566725,-7.299958,-7.728208,-9.322286,7.829882,0.460648,-3.555823,-1.451191,4.890529,1.324723,-8.087662,-8.343031,-8.549273,-0.565618,-5.318773,-1.933024,9.108358,-8.460660,-3.719188,-1.060811,-7.768749,1.575780,-4.260631,-1.908997,-7.079155,6.099724,-0.491094,1.016432,-5.210857,-7.660554,6.233400,4.811604,4.497914,-0.543181,-3.711011,0.045562,-6.664389,0.192165,-4.659127,3.222025,5.998313,5.665380,-4.040649,9.065784,-3.335647,-0.655029,-5.625414,9.651578,9.731108,-8.384267,-9.527260,-4.863591,-2.936161,-1.910347,4.248707,9.818517,-9.602747,-6.182863,-8.903905,2.232966,0.176280,-2.629012,1.373427,7.656172,2.036609,-3.846380,-2.967383,-1.487613,3.095373,2.127522,-9.112981,2.352038,-8.386397,-7.378397,6.756011,0.842005,1.274733,2.876249,8.374065,7.230241,-8.401602,8.034556,-2.598917,2.432454,-4.359395,3.493982,6.202204,4.691706,-4.440367,-3.789687,1.945920,4.907707,5.245957,1.891627,3.168796,5.067423,-4.833039,-4.456090,1.345200,-6.291908,5.894300,-9.560585,5.748424,-8.641098,9.546845,9.475525,-0.864059,4.009530,7.211038,2.051671,9.687142,-6.698168,6.847987,5.322475,-9.499350,-3.738986,9.183852,5.832799,-4.047359,-2.120543,-0.866899,-2.425026,-7.301573,6.521921,-8.566486,4.414053,1.462123,7.204903,-5.302766,0.445170,4.966135,-2.322305,0.006931,9.690761,1.563346,2.417731,5.040222,6.287864,-1.348339,-6.960388,0.281729,-4.174116,6.961540,8.294249,-6.871171,6.635276,-3.999113,-2.685046,8.067403,0.924109,-3.259838,-0.822130,-6.969380,1.262045,-7.403692,0.778710,3.629691,0.968830,3.932788,1.816255,8.955745,3.700998,-5.998969,3.466980,0.939987,9.844333,-1.052063,-7.752027,1.252244,5.570143,6.192153,5.622046,-6.156468,3.135740,5.198212,-7.084703,5.483044,-5.481128,7.354294,5.706303,-4.708719,-9.406590,5.849199,5.937599,5.874821,-0.096496,5.803967,7.270159,-0.327406,7.485101,4.495156,3.578244,-8.442142,8.623299,9.060932,-8.054733,7.082611,-0.087562,7.610131,4.530236,-3.823602,5.132273,7.222502,-4.738406,-5.502437,5.718683,4.350046,-9.828087,-2.300975,3.798061,1.865581,8.904809,7.777481,4.632220,9.413185,8.513132,-0.743235,4.789712,6.623256,-4.323236,3.738946,-8.644185,-4.734722,-2.310085,-8.474377,-2.935180,-2.090081,-8.483229,-0.597069,-3.390572,-6.537713,0.183696,9.785920,-8.041194,-3.889585,-9.524411,-8.084145,-6.941366,4.094145,3.063290,3.658371,7.864334,6.750972,1.719027,2.014488,7.211530,7.134355,5.652385,6.101470,9.386376,-4.244837,6.211375,-6.906193,6.608205,2.909331,5.368075,-8.310339,-9.735507,-0.709705,5.108232,3.615277,5.414621,-8.566415,4.718769,-5.152808,2.412079,-8.396170,3.841944,5.245787,0.226214,7.377797,1.902878,0.810514,7.998952,4.146661,-4.250075,1.495139,6.981140,-0.667857,0.158143,8.409188,9.451733,-4.462896,3.999536,1.720908,-8.579976,5.102099,-0.118419,3.099641,2.382571,7.624567,6.576047,0.097239,-7.688349,-3.677575,6.707004,-6.354540,8.973436,3.819011,-3.936586,7.180900,-7.692055,-6.963775,-3.133401,-3.534791,-2.678764,2.999241,0.440881,-6.187016,-9.245482,8.756500,2.947091,-3.949654,-8.128008,2.714173,-4.915945,3.066341,1.185153,4.649326,9.290787,8.438255,8.128045,-1.539604,-0.887053,-1.613555,6.450751,-8.470337,-4.462855,8.519592,-6.919856,2.952025,-5.700091,7.793228,9.267370,8.084279,4.851285,-7.095553,8.190260,7.603142,-2.724498,-2.635841,6.006439,-2.862998,1.752927,5.585417,-7.525654,-9.409347,2.745907,-1.164186,-5.673369,-0.756518,6.967963,0.472856,6.555954,-8.523330,-2.943217,0.421688,8.260141,2.904440,2.993201,-8.725304,-9.834247,-1.629249,1.706763,-4.146592,-3.464173,1.781845,3.319599,-4.060176,8.194005,-0.475977,5.587558,0.257657,5.157387,6.487573,1.110067,-9.189315,-1.088516,-3.599890,-4.512293,-8.060097,4.620607,-6.967393,-9.364952,0.543808,6.012051,3.970175,5.971571,2.143957,-5.241165,4.858062,-6.518421,3.199202,0.321974,-2.607176,-2.872493,-8.609540,-7.402938,-5.693353,-9.927016,-1.611128,-2.350450,-9.251607,4.529355,-1.673583,4.032638,2.938856,-4.238313,-5.614734,-6.538432,6.612431,8.245579,-1.165370,-0.095359,-3.272469,-5.078542,-5.812708,1.864130,-1.437198,-3.102053,-2.804527,3.946493,8.209160,-4.921809,9.871656,3.269049,3.163703,-3.639134,-9.274976,-6.120888,1.228933,-3.037202,5.022203,0.461001,-5.293830,4.899556,5.950959,-4.227131,-7.882397,-5.254047,-3.541956,-3.458762,6.162705,2.640993,2.367714,-4.908684,6.299431,-7.983656,-7.003667,-1.501011,2.984783,1.800213,-1.868175,9.149995,-8.106361,-7.950522,2.300113,-7.790811,-2.826503,7.922769,-8.873426,-2.180080,-4.978718,-2.029932,-3.043020,3.626639,-1.959622,-6.761976,-0.907642,3.838614,-5.853726,6.172514,-2.795142,-7.765806,-7.554251,-7.806427,9.014959,-5.645364,2.338881,3.200673,9.055423,0.324068,6.099567,6.317644,-5.346084,5.485162,-4.230381,-9.778736,-1.069853,9.777426,-5.052261,5.382448,2.255570,7.551851,3.566642,-6.294053,4.118623,-0.152808,-3.651134,6.700370,8.587704,2.982645,7.302150,-7.482799,-0.880960,-3.088996,-9.099775,-0.044717,3.758550,-1.077628,-0.654261,-2.040057,2.649264,5.461620,-1.708119,-1.633141,8.027868,4.190158,9.234118,-4.751723,-7.373267,4.857089,4.283030,-0.094414,0.978023,9.753989,4.562911,-0.986059,-6.471573,-8.603020,-1.007830,-7.875897,-0.276573,-7.864049,-9.802787,7.843000,-2.571697,6.659982,7.096244,-6.486554,-5.526578,-6.061501,0.624566,-6.088920,-5.260665,-3.904407,4.722191,-2.964609,5.476772,-2.383679,-6.800516,-3.223058,-9.011177,-5.761493,8.373815,-7.380643,-5.173774,1.339945,1.882399,0.994287,6.290250,-0.798443,1.529521,-0.922873,-2.098733,-8.488631,2.814139,4.191794,-6.608274,9.878518,-1.815063,1.843591,-3.390890,7.283203,5.755772,-9.981124,-8.708968,5.350971,0.225400,-0.707184,-9.774378,-9.947635,5.896117,3.498528,5.620689,6.406127,3.751563,-3.109314,-9.524093,2.126311,8.657758,-5.458922,3.259874,8.008441,0.849164,-6.916102,-7.651302,0.632028,-8.832438,1.636093,2.488574,4.871481,7.105028,0.433281,4.749815,1.943890,-5.128495,2.195503,-9.066697,-5.587108,-5.729271,8.274659,-6.992157,2.427997,-4.101817,-0.613464,8.845121,-8.345776,-8.751241,-8.054514,-6.973888,-7.083510,1.959882,-5.938401,-8.104917,-0.961048,6.936577,7.960131,-0.848250,-6.185484,0.348056,3.318708,7.260430,1.094231,1.247571,0.707644,-1.344064,-3.292007,4.147018,6.103925,8.524179,3.791989,8.178745,-2.431124,6.817646,-8.528942,-8.739815,4.139875,0.214907,6.355880,2.234559,2.648005,-6.984340,3.560833,-2.152597,7.792274,-3.713474,2.365948,6.494484,-4.113322,-4.765758,0.049983,-4.866709,-7.917817,3.199012,-0.138163,7.246436,-7.900739,6.487225,4.436330,-4.909893,6.087679,6.035684,6.946283,3.670593,0.732347,-3.243431,-6.178389,-1.784479,4.320196,-7.075265,-0.227923,9.893156,9.120077,-7.864277,-4.549308,9.361194,-9.600896,-5.202707,0.406405,2.213838,-8.270639,8.949849,-0.586022,7.260678,0.269043,4.602280,2.018464,2.255638,2.232909,-7.691510,-4.840707,3.799972,-6.377282,-0.868679,8.708005,9.018048,-2.576681,-5.958078,-4.868329,-6.037591,3.040597,0.769402,-7.801348,8.466843,-8.498666,7.330002,2.123144,6.994843,3.023139,3.764919,3.110197,-5.042651,0.249044,-0.348390,-1.531393,-1.090709,-3.547198,1.557396,-4.663476,-5.031356,-1.629517,5.866525,6.534263,7.190464,8.022623,8.760545,7.762926,-3.174117,4.879350,-2.170948,2.173134,0.036420,-6.402141,-9.941589,-7.874536,-9.258647,-3.214851,-7.191823,-8.447399,-6.516497,4.679417,6.970118,7.695353,6.886411,-5.664857,5.812486,-8.165398,-1.093235,0.674961,9.464958,1.147812,-9.469703,-9.899617,7.148385,-7.223579,-7.749057,-2.722832,9.805870,3.279097,-4.005928,-6.637744,5.083150,-5.831536,-6.487094,-2.091437,5.911735,7.344533,9.167235,1.813093,-5.327910,2.564054,1.106101,-8.031535,5.184773,9.811471,-3.477241,8.156913,8.578505,8.159850,7.808883,2.085470,2.717321,-5.053831,-5.119172,-8.902023,-0.025231,6.050949,4.528875,-2.625380,7.199994,-2.506031,5.461866,2.411648,2.720672,-7.409124,-2.715427,-9.112674,-4.379100,1.136912,-0.453967,-0.686261,5.020300,-1.479143,5.844844,1.253495,-0.278201,-1.455962,-6.102886,-4.371780,-3.190701,-7.190886,7.384908,0.510865,-9.434085,-4.160405,-4.808533,9.689677,7.806948,-4.044863,-2.819043,3.296859,9.538342,-3.410558,-0.404833,2.639111,-7.727423,3.020678,-9.850685,1.196757,4.323934,9.930413,-7.858134,2.005356,-0.544612,4.608749,-7.303722,-8.218631,-0.341804,5.308574,1.274405,-7.879795,-3.733140,0.902955,-7.874730,6.979509,9.553493,6.304375,2.726675,4.401857,-9.893580,-9.988970,2.901389,-9.184502,-6.613171,-2.342236,-2.235390,5.329607,9.219270,-9.830194,8.842723,7.433093,-7.623801,6.610025,-8.437679,-2.588430,4.049238,3.311613,6.208203,-6.524424,7.942485,7.293151,7.864338,-8.947589,-7.601802,-6.762747,0.685760,-6.787714,-3.110651,3.283174,-3.567468,9.892482,2.499299,-0.157449,-7.374850,-3.713744,-3.032483,-3.746212,-9.738831,-6.296788,1.186795,-5.107950,-8.166883,-5.694996,-1.570536,7.037219,7.618478,-9.075225,8.135874,5.928805,-2.543600,8.648300,-4.834244,-2.513196,3.146614,5.581107,-5.363105,5.419297,-7.173245,5.753787,6.463019,3.341317,-0.329844,3.553273,-3.794828,9.862448,-5.009625,9.800691,-8.176716,3.325813,-5.325158,-7.646568,7.887686,-8.480807,-5.147943,-2.784655,-1.894045,-6.167810,-2.331295,2.181909,9.126263,4.105936,3.999509,-1.933568,-8.005555,7.482483,-6.721987,1.900114,0.317689,1.113862,-9.264014,-2.371656,6.474202,6.959331,-7.717059,-3.280016,0.567661,-3.891348,9.061933,1.447394,-2.267828,-2.395358,-5.623128,-9.418504,7.768334,0.748871,-6.444394,8.182436,8.114316,6.953639,2.696191,4.306045,9.691837,7.476274,-9.691071,-8.093844,-9.185469,1.936482,9.936918,-9.700121,6.440072,-6.057507,2.334921,3.581676,-3.792539,1.530903,-0.506187,-8.496297,-4.747041,-2.714599,-3.857610,3.409315,-3.526304,-8.836887,6.852819,-9.762743,-9.642856,-6.217964,-6.502946,-7.753928,-6.996244,-5.192066,-8.351016,-0.713120,3.069393,3.501357,9.743776,-7.259654,1.787226,4.465880,5.815783,9.886083,-2.876181,-1.547599,0.412290,8.873238,-3.423315,1.818335,9.857224,1.806610,-5.065275,-4.413439,2.677474,9.673725,2.971184,4.404639,1.352781,0.747338,-9.681893,-7.969408,-4.056710,2.997756,-8.658882,-7.022574,-3.538451,-5.524856,-2.192990,2.730711,2.107465,7.604838,0.715651,5.027149,2.204465,9.134946,-4.333039,-7.586410,8.360727,7.861242,-6.512589,2.090465,4.256039,2.999170,5.340401,-0.833132,-5.511058,1.748217,-6.744133,-7.914509,8.301127,-9.689120,8.782492,7.524382,-9.181143,-4.789864,-3.463124,-8.822572,7.469258,6.244035,-3.014568,0.345834,5.176012,-1.197558,-2.580963], dtype = "float64")#candidate|7900|(2100,)|const|float64
call_7895 = relay.TupleGetItem(func_5836_call(relay.reshape(const_7896.astype('int8'), []), relay.reshape(var_7897.astype('int8'), [18,]), relay.reshape(var_7898.astype('int8'), [130,]), relay.reshape(const_7899.astype('float32'), [12,]), relay.reshape(const_7900.astype('float64'), [2100,]), ), 1)
call_7901 = relay.TupleGetItem(func_5842_call(relay.reshape(const_7896.astype('int8'), []), relay.reshape(var_7897.astype('int8'), [18,]), relay.reshape(var_7898.astype('int8'), [130,]), relay.reshape(const_7899.astype('float32'), [12,]), relay.reshape(const_7900.astype('float64'), [2100,]), ), 1)
func_5120_call = mod.get_global_var('func_5120')
func_5122_call = mutated_mod.get_global_var('func_5122')
call_7902 = relay.TupleGetItem(func_5120_call(), 0)
call_7903 = relay.TupleGetItem(func_5122_call(), 0)
bop_7907 = relay.bitwise_xor(var_7898.astype('uint8'), const_7896.astype('uint8')) # shape=(130,)
func_7471_call = mod.get_global_var('func_7471')
func_7473_call = mutated_mod.get_global_var('func_7473')
var_7929 = relay.var("var_7929", dtype = "float64", shape = (1200,))#candidate|7929|(1200,)|var|float64
call_7928 = func_7471_call(relay.reshape(var_7929.astype('float64'), [16, 5, 15]))
call_7930 = func_7471_call(relay.reshape(var_7929.astype('float64'), [16, 5, 15]))
output = relay.Tuple([call_7860,call_7883,bop_7889,call_7895,var_7897,const_7899,const_7900,call_7902,bop_7907,call_7928,var_7929,])
output2 = relay.Tuple([call_7861,call_7885,bop_7889,call_7901,var_7897,const_7899,const_7900,call_7903,bop_7907,call_7930,var_7929,])
func_7933 = relay.Function([var_7888,var_7897,var_7898,var_7929,], output)
mod['func_7933'] = func_7933
mod = relay.transform.InferType()(mod)
mutated_mod['func_7933'] = func_7933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7933_call = mutated_mod.get_global_var('func_7933')
var_7935 = relay.var("var_7935", dtype = "float64", shape = (2520,))#candidate|7935|(2520,)|var|float64
var_7936 = relay.var("var_7936", dtype = "int8", shape = (18,))#candidate|7936|(18,)|var|int8
var_7937 = relay.var("var_7937", dtype = "int8", shape = (130,))#candidate|7937|(130,)|var|int8
var_7938 = relay.var("var_7938", dtype = "float64", shape = (1200,))#candidate|7938|(1200,)|var|float64
call_7934 = func_7933_call(var_7935,var_7936,var_7937,var_7938,)
output = call_7934
func_7939 = relay.Function([var_7935,var_7936,var_7937,var_7938,], output)
mutated_mod['func_7939'] = func_7939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7941 = relay.var("var_7941", dtype = "uint64", shape = (8, 8, 12))#candidate|7941|(8, 8, 12)|var|uint64
const_7942 = relay.const([[[-2,-6,6,1,3,5,10,-7,-10,-3,8,4],[1,-6,2,-10,10,5,3,8,-5,-6,-10,8],[-5,-2,-10,-10,6,-1,-9,-7,1,8,7,-10],[7,-7,-8,-7,-5,5,-5,8,8,-4,-4,-9],[-2,-9,-3,1,-4,8,-1,-4,-6,-6,3,-4],[3,9,8,2,-4,-9,9,-6,-6,4,9,-8],[8,-8,7,-1,10,10,7,10,-5,10,-8,-7],[-1,6,1,-7,-9,10,-6,8,1,8,2,-9]],[[8,10,-6,-2,10,-10,-5,1,-3,10,2,-7],[-10,10,2,6,9,-6,5,-3,-10,-9,2,-7],[-1,-6,8,5,-10,-9,-4,-4,3,9,10,4],[-5,-4,-2,-3,9,5,5,-5,-5,-9,9,4],[-3,-1,-5,4,-5,8,-1,-10,2,-10,-7,4],[-1,-3,-4,4,9,2,-10,3,-7,5,-4,8],[2,5,-5,3,1,6,-4,5,-6,7,-7,3],[3,-2,3,-5,8,-4,10,-8,-3,8,-7,-3]],[[2,-10,2,5,-1,6,-6,9,-4,8,-10,5],[-1,3,8,10,7,10,-5,-9,-1,2,-6,3],[6,4,-6,-1,5,-6,9,-4,-7,-6,-9,-1],[-9,-8,-4,7,-2,5,-1,6,10,9,-7,-6],[7,-9,6,-9,-10,2,-7,5,-9,7,7,-5],[5,-6,7,1,3,-10,-7,-6,5,-3,6,-4],[-8,-6,-4,2,5,6,-2,-5,6,-8,6,9],[3,-6,10,5,-10,-3,-1,6,6,9,-10,5]],[[-2,8,-4,-9,-1,-7,4,-8,-2,-9,-9,1],[8,3,8,3,-8,10,-9,10,-6,8,-8,2],[-9,-3,7,-2,-7,4,-3,-5,-9,-3,-6,6],[-10,9,3,8,-4,10,6,-8,-7,8,1,-10],[-10,9,-8,5,-1,7,-8,6,5,-3,8,-6],[4,-6,1,5,9,-7,-1,6,-9,-6,8,-10],[9,-8,5,-3,-9,-5,-5,2,-6,-2,3,9],[-10,10,-8,-5,-4,-4,-6,-9,6,-7,-8,-6]],[[10,-1,5,-5,-6,5,5,-3,-2,7,3,-4],[2,1,-2,4,2,-5,9,4,-4,9,8,6],[8,9,-1,-2,6,-5,-10,-10,-6,9,-4,-1],[1,-8,4,10,-9,-5,4,5,1,-10,-9,-3],[-5,2,-7,-8,5,-9,1,-10,8,1,5,6],[6,-8,6,1,8,-3,-6,-3,-8,-9,10,9],[7,4,8,9,-3,10,-10,5,6,-1,10,5],[-6,6,6,-8,7,-6,-9,10,3,5,3,-9]],[[7,-3,-8,6,-5,-2,10,-5,-1,4,7,3],[-4,-3,-8,5,-4,4,-7,6,5,-2,-9,3],[-9,9,1,-5,-2,-1,1,-6,4,-7,-2,-10],[10,-3,-8,-8,-5,2,10,-2,-8,-3,-9,-3],[2,-4,2,3,-4,2,5,9,-8,-6,10,3],[3,6,8,6,3,6,2,9,8,-9,1,10],[1,-10,-4,-1,-2,10,10,9,4,9,7,-3],[9,-5,-10,-2,1,-1,6,3,-1,-7,6,2]],[[-3,7,9,4,-10,10,6,-10,-5,-3,5,10],[-10,6,-5,8,-9,10,3,-6,3,-4,6,-7],[6,-4,7,-8,-1,2,3,3,-5,10,7,2],[1,-10,-1,-10,4,-2,5,7,-4,-9,-1,9],[-7,5,-6,-3,-6,-4,9,-5,-7,5,7,-8],[-3,8,-3,-1,7,-2,6,7,-10,8,-6,-2],[10,-7,-1,7,-3,-1,1,5,-9,-8,4,-6],[8,-6,5,-9,7,-3,10,4,3,10,-7,-2]],[[3,1,7,6,9,2,-9,-2,-7,-5,-3,2],[2,1,-8,6,-5,1,-4,7,-6,-1,10,-1],[6,-5,3,-6,9,4,10,-9,9,-7,4,8],[3,-4,1,-9,1,8,1,-9,-1,10,-7,8],[-8,8,-9,3,-6,-4,-4,5,-6,9,9,2],[5,3,10,5,-8,-1,9,-8,2,-3,-4,-4],[-1,10,3,10,-3,-7,8,-10,-6,3,2,2],[3,2,4,-10,9,7,-1,9,3,6,1,-8]]], dtype = "uint64")#candidate|7942|(8, 8, 12)|const|uint64
bop_7943 = relay.greater(var_7941.astype('bool'), relay.reshape(const_7942.astype('bool'), relay.shape_of(var_7941))) # shape=(8, 8, 12)
func_7043_call = mod.get_global_var('func_7043')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7948 = relay.TupleGetItem(func_7043_call(), 0)
call_7949 = relay.TupleGetItem(func_7044_call(), 0)
func_1708_call = mod.get_global_var('func_1708')
func_1714_call = mutated_mod.get_global_var('func_1714')
var_7951 = relay.var("var_7951", dtype = "float32", shape = (315, 1))#candidate|7951|(315, 1)|var|float32
var_7952 = relay.var("var_7952", dtype = "int8", shape = (130,))#candidate|7952|(130,)|var|int8
var_7953 = relay.var("var_7953", dtype = "float32", shape = (12,))#candidate|7953|(12,)|var|float32
call_7950 = relay.TupleGetItem(func_1708_call(relay.reshape(var_7951.astype('float32'), [9, 5, 7]), relay.reshape(var_7952.astype('int8'), [130,]), relay.reshape(var_7951.astype('float32'), [9, 5, 7]), relay.reshape(var_7953.astype('float32'), [12,]), relay.reshape(var_7951.astype('float32'), [9, 5, 7]), ), 0)
call_7954 = relay.TupleGetItem(func_1714_call(relay.reshape(var_7951.astype('float32'), [9, 5, 7]), relay.reshape(var_7952.astype('int8'), [130,]), relay.reshape(var_7951.astype('float32'), [9, 5, 7]), relay.reshape(var_7953.astype('float32'), [12,]), relay.reshape(var_7951.astype('float32'), [9, 5, 7]), ), 0)
bop_7958 = relay.less_equal(var_7952.astype('bool'), var_7951.astype('bool')) # shape=(315, 130)
output = relay.Tuple([bop_7943,call_7948,call_7950,var_7953,bop_7958,])
output2 = relay.Tuple([bop_7943,call_7949,call_7954,var_7953,bop_7958,])
F = relay.Function([var_7941,var_7951,var_7952,var_7953,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7941,var_7951,var_7952,var_7953,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

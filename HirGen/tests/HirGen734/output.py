import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_534 = relay.var("var_534", dtype = "float32", shape = (5, 13, 12))#candidate|534|(5, 13, 12)|var|float32
uop_535 = relay.sin(var_534.astype('float32')) # shape=(5, 13, 12)
bop_551 = relay.add(var_534.astype('int8'), relay.reshape(uop_535.astype('int8'), relay.shape_of(var_534))) # shape=(5, 13, 12)
output = bop_551
output2 = bop_551
func_615 = relay.Function([var_534,], output)
mod['func_615'] = func_615
mod = relay.transform.InferType()(mod)
mutated_mod['func_615'] = func_615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_616 = relay.var("var_616", dtype = "float32", shape = (5, 13, 12))#candidate|616|(5, 13, 12)|var|float32
func_615_call = mutated_mod.get_global_var('func_615')
call_617 = func_615_call(var_616)
output = call_617
func_618 = relay.Function([var_616], output)
mutated_mod['func_618'] = func_618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_781 = relay.var("var_781", dtype = "uint16", shape = ())#candidate|781|()|var|uint16
const_782 = relay.const([[[5,3,-5,-9,5,-9],[7,-2,2,8,-8,-10],[-6,-9,-2,5,1,9],[-3,4,-10,5,-6,2],[-6,4,5,10,6,-10],[-8,-8,-5,4,7,7],[2,7,-6,6,3,-6],[7,-8,5,3,-5,4],[-10,-7,6,-6,-4,6],[4,-4,5,5,-5,-5],[3,4,1,-7,6,-9],[7,-3,-2,3,-3,3],[6,-10,-1,1,-4,-9]],[[5,-5,-9,7,2,7],[9,10,-6,1,-10,-2],[7,4,-2,-6,10,-10],[-6,3,7,1,-9,-9],[5,6,3,8,-3,1],[5,4,9,-4,-1,2],[-8,-3,8,-3,-3,8],[-9,8,-9,9,8,-9],[7,1,-2,-7,10,7],[-1,-8,-1,2,5,4],[-9,-9,-8,4,-2,7],[-10,4,2,5,-4,-10],[1,5,-4,-1,-5,9]],[[-9,-1,10,4,-2,-9],[2,10,8,10,-5,-7],[-5,-1,-7,4,-5,-6],[2,-4,-10,9,-8,-9],[2,-8,-4,4,-1,10],[5,-5,-8,5,3,-6],[-4,-7,7,-9,-5,4],[1,-9,-2,2,4,8],[-8,-3,2,-4,-8,9],[8,4,4,-3,5,9],[10,5,-1,-7,5,10],[1,4,-6,7,-2,5],[9,2,9,-3,5,4]],[[-2,4,1,5,-9,-5],[3,-9,3,2,4,-9],[-9,4,2,-1,1,2],[-1,-5,-5,5,2,-4],[10,10,3,-8,4,8],[2,-2,5,4,-10,-4],[1,4,5,-2,-7,-8],[-2,3,-10,3,10,-4],[9,9,-1,6,-6,9],[2,6,-4,10,-1,-3],[5,3,-3,-10,-9,2],[6,1,-8,-1,2,10],[2,-3,6,-5,5,-8]],[[-7,9,-7,-5,8,-5],[8,9,-5,-5,10,3],[-7,-8,-8,-1,3,2],[-2,7,5,-8,-9,-3],[9,-3,-10,-6,-5,-9],[1,8,9,-5,9,1],[-3,-4,-10,-9,7,-10],[8,-1,-10,-6,10,4],[5,2,-3,-7,4,1],[10,-4,3,1,-8,4],[7,-9,-5,-8,-4,6],[3,-6,-7,-2,-8,-4],[-10,2,-9,6,-8,3]],[[-9,8,3,-3,-9,5],[7,-3,-6,7,1,-4],[6,8,-6,-9,-4,-8],[-1,3,-1,4,-8,4],[3,9,-3,-6,-4,4],[5,-3,-10,-8,-2,-9],[-1,-1,-1,4,8,-9],[8,-9,10,-2,-7,-6],[6,8,-4,2,-1,6],[-2,9,6,1,5,-8],[-5,2,5,-9,-3,-2],[-3,4,-1,-7,1,-3],[3,-4,-7,-3,-3,6]],[[-6,-3,-1,6,1,-1],[10,-5,3,-1,5,-7],[8,-5,-9,-2,-6,-2],[10,-5,1,3,-4,-4],[10,5,1,-8,-4,-1],[-3,-5,-8,8,-8,8],[8,1,-4,7,10,-9],[-6,1,1,-10,-7,-5],[-6,2,7,3,3,-5],[9,-1,8,2,-9,1],[-7,8,7,-6,8,7],[7,-3,4,-7,4,3],[-8,-3,10,-8,-4,-10]],[[2,6,-5,7,2,4],[10,10,9,-3,2,5],[9,-10,2,5,-7,3],[-3,6,10,3,1,-3],[1,-9,-3,7,-2,8],[9,5,4,8,10,-7],[3,-2,7,7,3,-3],[2,2,-6,-5,2,1],[-2,7,10,-2,-6,-7],[10,-1,10,1,1,-6],[-4,4,-3,-5,-1,-6],[-6,5,-3,-3,6,7],[-7,8,4,6,4,-3]],[[4,-3,10,-9,-6,-8],[-7,-1,6,-7,-6,10],[-8,7,8,-9,8,7],[-9,-4,-1,5,5,8],[-4,4,-1,-2,-3,-1],[9,-3,-1,-4,-9,7],[-1,7,-10,7,2,-6],[8,-4,-8,-1,-4,-3],[5,5,-4,-3,5,-10],[4,9,-1,-1,-2,9],[9,-7,2,-5,-7,-2],[-3,7,6,-10,-7,8],[-3,-4,-3,7,10,-4]],[[3,-3,10,-1,-2,-10],[6,-9,-9,8,6,-7],[4,3,-9,10,8,2],[1,-10,2,1,10,-10],[7,-10,-3,-3,2,-2],[-3,-3,-6,-9,-6,9],[-9,-7,-10,-9,-8,-9],[-8,5,8,-3,10,10],[-8,-2,-9,4,1,8],[-10,-8,6,9,-2,5],[4,1,-1,9,-1,6],[1,-8,3,4,3,-4],[-1,-6,-7,-5,9,2]],[[-8,-1,-3,-6,9,9],[-2,-7,-6,5,-2,-2],[-1,10,2,2,-5,8],[-2,-4,-10,6,5,6],[-4,1,-3,-7,-10,6],[8,-4,3,-3,-6,-7],[-2,-8,-6,-10,-7,-8],[-4,7,-1,7,-3,4],[-1,-2,-8,5,3,8],[-10,-2,1,-9,7,10],[1,9,6,-1,-10,8],[-3,7,6,5,-8,-3],[9,4,8,-3,-1,4]]], dtype = "uint16")#candidate|782|(11, 13, 6)|const|uint16
bop_783 = relay.multiply(var_781.astype('uint16'), const_782.astype('uint16')) # shape=(11, 13, 6)
func_615_call = mod.get_global_var('func_615')
func_618_call = mutated_mod.get_global_var('func_618')
const_801 = relay.const([-3.607788,0.973133,4.882588,-5.119743,-2.846918,4.133012,-0.699360,8.060472,-0.757024,-1.360686,9.527741,-8.945820,-5.166152,2.496020,2.201728,-0.211961,-7.023818,1.872609,2.034160,-9.972903,9.693103,1.281074,-3.461028,0.684333,-1.068631,3.875182,-9.549966,-9.974472,-8.662243,-5.431257,-1.824801,5.970685,2.588865,-7.207377,3.379964,-7.887257,-1.554341,-2.296452,-0.347881,-8.130634,6.414031,-6.352550,4.698301,-7.104721,-4.609090,0.394717,8.128132,-6.907422,-6.757860,5.106406,4.129693,-4.624172,-3.064718,-4.902068,-2.358546,1.431369,-1.095110,3.174986,-1.585782,-3.148428,2.370758,-4.469691,-7.700703,0.568747,4.306548,-1.472977,-6.668781,7.716715,-1.759281,7.890399,-9.402068,-3.885069,-7.499457,-5.654326,-8.736567,0.701595,-5.628160,-6.063025,-7.596298,2.230744,2.659642,-3.606414,-0.629924,-3.990347,-3.132766,1.788594,-2.707491,9.065540,-2.192751,8.260009,-6.099686,-3.788347,-5.964317,-8.428433,-2.666092,4.370797,9.687461,5.451018,9.431521,-5.682524,5.702440,-7.892390,-7.512270,-3.742881,7.924740,0.662154,-5.514959,-2.312069,-6.487443,-9.396463,7.036773,-1.509934,6.799116,-9.026895,5.963725,-9.485779,0.240383,-9.346893,4.291729,-0.148390,3.822242,-8.516763,7.648172,-7.662505,2.480290,-4.837142,-7.970593,-7.320426,-8.155299,-6.297984,4.211848,-3.620779,0.212797,-7.205256,2.846285,9.706475,-5.297280,-8.784262,4.157387,-6.048213,7.461974,1.991583,1.978048,-4.904610,-3.100270,-2.948020,4.395541,-2.432022,1.702413,1.047740,4.111728,0.531534,2.517473,2.598461,3.647159,3.003023,-9.507142,-6.833167,-3.098944,0.052664,-4.049297,4.617278,-4.697403,-2.694818,-5.546094,-4.297796,7.129680,-4.573139,-1.843372,5.956904,5.175069,-1.898046,5.565084,4.943243,6.736375,-8.284289,-8.952541,-5.300704,-6.180356,1.031819,-3.411510,-7.396383,0.026422,-2.736724,0.910008,6.271957,3.613498,-5.275061,0.381304,-5.976740,5.902253,-3.537310,-3.519611,-1.658701,7.094973,-2.785909,-0.826247,1.151427,0.761863,6.859794,4.013578,4.712027,-5.515001,2.655980,4.097522,0.601284,4.352974,5.673922,-0.256409,-3.716152,1.399145,9.472610,7.017431,7.555343,8.223489,1.325159,-7.151891,1.849356,9.977603,-3.285319,-9.450609,5.992160,7.578396,-6.528910,-8.490079,1.521490,5.462692,4.355595,-5.021310,7.181084,9.553583,-8.214907,2.723262,5.001269,4.708272,6.068661,7.209048,6.662798,8.544006,-4.218492,-4.515534,3.427424,-7.712424,-0.921376,-3.455231,-9.934661,6.107169,1.283906,-5.099257,9.933063,-5.973370,-8.094422,0.134823,-2.461023,6.414440,-3.367858,-5.693049,8.007337,5.307571,7.682557,6.633367,2.058240,1.691396,2.483689,6.862815,9.612548,4.051396,4.871930,7.131109,-3.480056,-8.282646,-2.723523,-7.869321,-9.585100,0.885343,5.045398,1.385506,9.957753,2.557599,8.950258,3.254608,-1.967739,-0.075421,1.485715,5.985226,-2.494852,9.353686,0.616995,-8.399593,3.518807,2.069440,-0.985529,2.612895,9.371916,-7.221457,-7.140065,3.263173,-4.974804,-0.702229,0.527213,7.492124,-2.282001,-2.138142,0.224966,0.714321,1.282896,3.780769,3.107303,8.538471,-5.036223,6.339076,-0.903853,4.066137,-5.304121,-4.324683,-0.969101,9.046368,-0.153204,-3.212910,-5.828954,-1.066634,-2.646673,3.869949,9.643163,7.833822,-9.501299,-6.782426,2.286724,-6.708876,7.744310,-0.376025,-3.788888,-5.869423,2.009505,-4.194301,-6.061994,5.965385,8.389346,4.910761,-6.714889,-3.141651,2.051332,9.244494,-2.439737,3.051938,-9.144198,6.357952,4.935564,-5.362417,-6.392225,3.229911,1.687507,-6.663612,3.026897,3.174562,-7.421510,3.801416,-9.416724,-3.070424,-2.220391,6.366840,8.019901,9.307322,-3.846911,-2.727352,8.096107,-4.126316,-4.526575,7.865500,-7.531809,8.817843,-6.182655,-3.294372,5.666392,7.903162,-9.058352,5.182593,-5.959515,5.193393,-1.732197,2.800692,5.932782,-9.732838,-1.292413,8.571722,6.997518,7.205245,1.987829,-7.871749,6.462320,-2.353965,-6.993131,3.954713,6.940158,-2.947158,-8.817836,3.817018,3.643527,-2.770017,5.666344,-8.991024,-0.773027,-5.186007,9.629731,0.038320,-6.816204,3.350779,6.666390,0.233891,4.398599,-2.569037,-8.757443,4.648581,0.545144,1.188936,2.450563,5.847066,-3.754475,-4.312057,2.721115,-2.784539,1.094803,-5.188991,-4.455052,7.439304,2.924806,-6.378031,9.026846,9.023474,4.050972,4.998077,-0.388295,-8.455720,-7.916092,2.361909,-9.729213,-9.684143,2.040145,-3.066726,-6.520290,6.822728,0.054923,7.757102,5.116522,-1.269957,-1.407700,2.734659,-5.293637,2.238897,-9.707139,-6.784164,-9.373527,2.638792,-8.064477,0.660750,0.470598,-2.046296,-3.593776,-3.646865,7.868344,-4.021633,-0.426197,-6.646607,-3.262758,-2.994742,-0.966329,6.581716,9.816710,-2.313482,2.248668,-3.896856,-4.292920,1.140891,6.846223,-9.746490,-6.996146,-8.305641,7.299309,-0.320600,-4.881530,-1.818833,1.303652,7.092865,-5.771281,-9.532862,1.577410,8.728424,-4.721196,5.426585,-9.650953,-8.150308,-9.899326,6.526638,7.457362,7.547394,-4.073505,5.452745,-1.056967,-4.209363,-0.831787,-4.093293,-1.927502,-0.954552,-4.884648,-5.104874,3.763110,-1.893294,7.283617,3.727119,1.415528,-9.261109,8.889046,7.227790,-7.093423,-3.793165,7.653334,-7.596777,-4.167884,-6.881070,-7.560402,1.696413,2.284394,-0.252546,-9.891187,3.956786,-2.544628,6.255938,3.546840,2.319455,8.587139,4.457764,-1.326871,-2.178611,-4.194281,-0.440196,6.412700,-7.136216,5.915504,7.713675,0.451028,8.531527,-1.982483,6.766033,8.429126,3.411492,-5.617561,3.083506,-2.260814,-3.258278,-8.846103,-3.359912,-7.905663,-9.240978,5.177147,9.386954,9.309920,-3.650491,-0.166697,0.610517,7.389760,-5.540502,6.551795,-0.354249,2.025253,-0.190437,8.595675,6.448448,-0.170722,8.860450,4.447204,-8.448660,5.376017,-8.809958,-4.913134,-2.758681,-5.498697,2.991578,-0.598477,2.471844,-4.082372,-6.202166,-8.272173,-9.083158,6.931096,-6.082588,-1.770667,5.464876,-4.649851,9.539321,-8.286292,-8.353969,-9.770724,-8.326969,3.824496,-9.899320,-5.430157,-9.321273,-3.457846,3.612730,-3.273977,-5.967635,-8.766678,3.739729,3.317678,4.263985,-8.939688,-9.901036,8.209205,3.272226,6.377009,8.854008,-2.095541,-3.556629,-3.233692,7.075697,-6.854441,3.099766,6.966545,3.343493,-3.173652,-8.106854,-8.326665,3.813514,-5.879342,-4.708637,7.767430,4.738462,0.114452,-5.491274,8.962844,0.363959,-7.346712,-5.594952,2.728340,-8.098576,-7.541773,-8.402792,-9.218577,-3.776393,-4.927377,-2.869261,-0.329961,-3.954562,2.906175,3.411538,-3.188453,-9.822576,-3.876872,-0.848967,-7.322671,5.157386,-0.319676,8.907542,4.626441,5.546190,4.893713,2.017821,4.608795,8.942807,8.493461,7.994211,6.342011,-5.926628,-8.826721,6.250556,7.751495,0.615839,-7.277152,-0.992273,-5.891137,-0.022405,6.545897,-8.899714,4.913354,-7.251514,-5.385579,-9.630702,6.104018,1.042881,2.338085,6.438123,0.780619,-4.190063,8.557534,-1.093568,-7.762571,8.937750,-7.344208,-4.407500,-1.181236,-4.759972,-3.031008,-3.548513,8.419736,1.084924,2.112790,-0.207604,3.085700,-5.601255,0.473257,6.061904,5.990321,-0.494270,-5.959850,3.739548,2.663796,1.793466,-6.143290,5.173690,-4.344745,8.687793,5.607331,-9.589238,-4.208036,-1.848574,6.434020,-1.281343,-4.646531,5.946580,5.228016,9.595884,-0.762039,4.905355,7.276062,0.521472,8.042815,5.021232,-7.868153,-8.083225,-8.998459,-0.353936,-1.050100,5.220470,6.143734,1.921998,9.616087,0.363154,3.084225,8.843979,-3.002091,-8.257116,0.840747,-2.973375,-9.190249,-4.707846,3.914345,-1.717718,4.057276,5.876887,-6.364968,-7.120368,8.695459,-4.875804,-7.731005,7.809425,-7.718923,-7.757224,6.388044,6.472325,3.291916,6.500003,-5.271829,-0.783754,9.832380,0.998386,-8.115210,4.166807,3.141468,2.954065,6.591492,-6.563311,-3.178710,8.512059,-6.475767,8.211374,5.375069,-3.591832,0.808678,6.550496,-5.819947], dtype = "float32")#candidate|801|(780,)|const|float32
call_800 = func_615_call(relay.reshape(const_801.astype('float32'), [5, 13, 12]))
call_802 = func_615_call(relay.reshape(const_801.astype('float32'), [5, 13, 12]))
output = relay.Tuple([bop_783,call_800,const_801,])
output2 = relay.Tuple([bop_783,call_802,const_801,])
func_819 = relay.Function([var_781,], output)
mod['func_819'] = func_819
mod = relay.transform.InferType()(mod)
mutated_mod['func_819'] = func_819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_820 = relay.var("var_820", dtype = "uint16", shape = ())#candidate|820|()|var|uint16
func_819_call = mutated_mod.get_global_var('func_819')
call_821 = func_819_call(var_820)
output = call_821
func_822 = relay.Function([var_820], output)
mutated_mod['func_822'] = func_822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_845 = relay.var("var_845", dtype = "int64", shape = (14, 14, 10))#candidate|845|(14, 14, 10)|var|int64
var_846 = relay.var("var_846", dtype = "int64", shape = (14, 14, 10))#candidate|846|(14, 14, 10)|var|int64
bop_847 = relay.not_equal(var_845.astype('bool'), relay.reshape(var_846.astype('bool'), relay.shape_of(var_845))) # shape=(14, 14, 10)
output = relay.Tuple([bop_847,])
output2 = relay.Tuple([bop_847,])
func_865 = relay.Function([var_845,var_846,], output)
mod['func_865'] = func_865
mod = relay.transform.InferType()(mod)
var_866 = relay.var("var_866", dtype = "int64", shape = (14, 14, 10))#candidate|866|(14, 14, 10)|var|int64
var_867 = relay.var("var_867", dtype = "int64", shape = (14, 14, 10))#candidate|867|(14, 14, 10)|var|int64
output = func_865(var_866,var_867,)
func_868 = relay.Function([var_866,var_867,], output)
mutated_mod['func_868'] = func_868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1277 = relay.var("var_1277", dtype = "float32", shape = (4, 12, 13))#candidate|1277|(4, 12, 13)|var|float32
uop_1278 = relay.log2(var_1277.astype('float32')) # shape=(4, 12, 13)
func_865_call = mod.get_global_var('func_865')
func_868_call = mutated_mod.get_global_var('func_868')
var_1284 = relay.var("var_1284", dtype = "int64", shape = (1960,))#candidate|1284|(1960,)|var|int64
call_1283 = relay.TupleGetItem(func_865_call(relay.reshape(var_1284.astype('int64'), [14, 14, 10]), relay.reshape(var_1284.astype('int64'), [14, 14, 10]), ), 0)
call_1285 = relay.TupleGetItem(func_868_call(relay.reshape(var_1284.astype('int64'), [14, 14, 10]), relay.reshape(var_1284.astype('int64'), [14, 14, 10]), ), 0)
bop_1290 = relay.less(uop_1278.astype('bool'), relay.reshape(var_1277.astype('bool'), relay.shape_of(uop_1278))) # shape=(4, 12, 13)
output = relay.Tuple([call_1283,var_1284,bop_1290,])
output2 = relay.Tuple([call_1285,var_1284,bop_1290,])
func_1298 = relay.Function([var_1277,var_1284,], output)
mod['func_1298'] = func_1298
mod = relay.transform.InferType()(mod)
mutated_mod['func_1298'] = func_1298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1298_call = mutated_mod.get_global_var('func_1298')
var_1300 = relay.var("var_1300", dtype = "float32", shape = (4, 12, 13))#candidate|1300|(4, 12, 13)|var|float32
var_1301 = relay.var("var_1301", dtype = "int64", shape = (1960,))#candidate|1301|(1960,)|var|int64
call_1299 = func_1298_call(var_1300,var_1301,)
output = call_1299
func_1302 = relay.Function([var_1300,var_1301,], output)
mutated_mod['func_1302'] = func_1302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1640 = relay.var("var_1640", dtype = "float64", shape = (11, 4, 3))#candidate|1640|(11, 4, 3)|var|float64
uop_1641 = relay.sinh(var_1640.astype('float64')) # shape=(11, 4, 3)
func_615_call = mod.get_global_var('func_615')
func_618_call = mutated_mod.get_global_var('func_618')
const_1654 = relay.const([-6.592240,7.523691,-6.562722,9.047029,0.196490,-3.549699,-5.699320,7.712246,6.850562,8.783579,8.022355,-6.240537,-9.646562,7.939820,-9.723351,5.330730,2.992023,-7.727012,-7.020391,0.952091,-0.802096,8.748374,7.830415,1.010709,7.922411,-4.171665,8.445638,-9.603594,5.804228,9.256754,-6.925185,-0.392639,1.128691,5.154922,1.056868,-7.765481,-4.475183,-5.400640,-7.695141,-4.664254,-2.314678,-5.665403,3.858471,-2.923564,-6.653408,0.737575,-2.832406,0.258341,-8.621087,-1.492271,6.705426,-1.464097,-9.120990,9.644178,-8.700617,-4.366500,-3.398247,-9.508644,1.665923,-2.375223,9.203030,7.932689,-7.225956,4.088562,5.864068,-4.182766,-3.394974,7.815869,5.817393,-4.398502,-1.012349,-1.095103,0.984225,0.957966,9.253734,4.381747,0.719071,4.475205,0.871465,-2.624786,-5.943469,9.016737,2.410346,4.079363,5.665616,9.017836,7.785382,-4.966366,-9.807135,5.214914,-5.272742,-8.743756,6.885475,9.422587,1.772290,-5.025744,-5.323364,-3.387826,-9.295779,-9.310090,8.616885,3.151277,3.010674,-9.757248,3.838279,-2.280372,-3.992866,9.600368,-8.695956,-0.577401,4.314837,2.635895,-5.837841,3.619257,1.587263,-0.537408,2.608608,6.955095,9.260848,0.693005,-8.248253,-1.376851,-1.539823,-9.587152,-2.450727,-6.605353,8.787618,5.246391,-0.399709,-3.760917,-8.311499,-7.146188,5.425647,1.049347,2.691146,2.953676,-3.339169,-8.365064,-4.489514,3.849133,8.845674,-7.751721,8.311268,-8.202090,-4.780370,8.137491,7.451423,6.585655,-5.590993,-1.266734,3.901939,8.871868,7.883300,-4.616991,-7.803381,5.249816,-3.637538,4.905848,1.089136,4.170617,-0.876187,8.870488,-7.143541,-5.536201,9.495390,0.960398,5.585736,-2.213289,-9.087548,-3.508782,-8.857001,0.483637,4.936162,-9.534369,-6.716049,-2.904031,-2.100867,8.277428,-0.615589,4.195085,-9.489028,-8.474228,3.020041,-9.058789,-8.258432,1.132360,-1.251843,1.451980,4.435983,5.484582,7.980265,-0.851951,2.266483,-7.867679,-9.678085,6.431118,-7.132589,-3.330890,-4.587670,-9.423016,3.495201,7.717118,-5.804970,6.169997,-3.381182,6.647888,-1.022135,3.973795,3.824034,-3.824155,-0.960020,-6.687088,0.365370,-1.706227,-3.016686,-6.709362,-2.455946,7.603989,-5.158360,-7.311967,5.438108,-1.965946,-2.656236,4.873736,-1.114632,2.240799,9.824058,2.586153,-4.116296,-4.535589,-9.161652,-7.964104,-0.166737,6.110149,-7.887610,8.877727,-6.069439,6.168098,-8.439526,-0.580812,-1.282662,7.609846,-8.206074,8.363524,-4.155568,1.041077,-4.119927,-1.388771,8.995668,-0.887798,3.791370,-5.238846,5.571580,-9.490213,-2.972476,-3.183900,-8.201921,8.128377,4.574260,5.348163,-2.241350,-7.127438,-3.741738,-7.176643,1.283865,3.401821,-2.816784,-6.683216,-0.757379,7.533577,8.000139,4.133113,7.878715,-9.124565,6.354453,6.543941,-5.986963,6.529309,-7.476421,7.723432,-5.394201,-1.067118,-9.780256,-2.165760,-9.578211,9.161490,-6.210019,8.897030,6.281168,-5.733017,-5.612270,8.180428,0.556825,2.087057,-3.819770,0.454364,-9.618864,1.708327,-6.249642,8.431782,-2.565566,0.337391,9.408886,-4.488297,-6.853063,-9.543849,-8.162196,-2.118824,-9.989479,8.086750,-9.193634,6.994225,4.597206,8.044960,-0.634507,-5.109537,6.786807,4.543666,-9.055142,-8.798297,-5.909875,2.022348,-1.798309,4.533255,-9.611603,0.355584,7.382931,4.522305,7.172312,8.240486,6.487487,-0.947502,2.293135,2.894629,-2.552235,-4.077514,-3.402195,7.888068,9.342150,3.337022,-9.984224,-9.803583,4.254604,-5.062081,-9.509929,2.728410,9.308256,0.678686,8.370737,-6.899521,-1.800069,6.149111,9.452576,8.805307,8.210202,-9.399779,6.748593,9.411136,-8.907562,9.467749,2.481311,-5.516037,4.731680,6.798951,-3.432069,-4.147083,0.971443,-7.328441,-8.390926,6.688162,-4.091774,8.338474,5.449350,9.486240,-9.046902,-5.497850,1.982320,-9.956357,-6.655899,4.246223,-6.762796,6.623940,8.757845,-3.849952,4.233211,6.487229,3.153652,8.881649,-6.352487,-3.234941,-3.337526,-7.001714,9.173727,-6.328692,8.837835,-8.384756,9.620578,9.145943,9.554194,-2.863423,7.346703,5.376218,9.319865,3.504084,9.732551,-1.165755,6.490699,3.420145,-8.980027,-2.698010,2.043918,2.416386,9.002765,-1.132196,-1.608125,0.471783,-4.702119,-4.502388,-5.731612,5.888575,5.989463,6.500796,4.246591,0.264145,-6.962021,8.607751,-4.830808,-0.710319,5.201508,6.874865,1.057255,3.232005,2.106722,1.834487,-8.856274,3.740756,7.779386,-1.362887,6.403316,-0.269538,4.188578,2.009840,-3.246294,3.800775,-3.663561,6.310732,-4.781553,-9.543227,-4.414982,4.548428,-1.264528,-7.353646,4.656257,-9.265699,-3.721745,-8.282399,-1.405083,1.974219,4.031423,-7.185142,6.157740,8.328614,3.422980,8.025233,-5.943079,-5.086580,2.002518,-1.124403,2.668056,5.200702,6.642514,4.495720,-5.499360,-3.868825,-2.696669,3.916645,-0.511141,5.631711,-9.827948,4.822393,5.743761,-6.855449,-6.856451,1.956126,1.783810,2.398697,-2.615418,7.562973,5.175952,-3.119217,-6.346613,-9.694831,-1.789462,-0.189199,-9.332521,1.436265,0.600255,9.147445,-7.638806,0.925586,5.001599,-0.149402,-9.414299,-5.725045,2.478408,4.584025,8.200571,-2.225016,2.299248,-9.389598,-0.504903,8.187577,3.992911,9.935886,7.869780,-9.885803,1.275265,-9.918783,-2.463677,-2.617785,8.002376,1.607485,7.403826,-3.838756,6.467067,-7.057397,9.816492,9.024512,-3.240612,-7.126101,-2.836392,1.423754,-0.397374,7.023862,-8.464692,-1.174566,2.713768,-6.274831,-0.973743,9.522839,-9.715698,7.739393,2.735453,-4.616098,-1.047465,0.023897,4.262541,-8.798470,-7.456366,-6.142102,0.538842,-9.475436,8.054588,6.241938,9.342581,8.228892,2.990044,8.219813,4.267805,-2.591061,4.194921,-6.952463,-0.454184,-5.019360,-4.014764,-2.479220,5.227862,-7.346314,6.986285,-6.578393,-7.844693,-0.141608,3.837000,-5.372985,-3.399054,-4.301662,-1.447282,-7.513966,9.300979,4.372228,-3.854748,-2.505520,-8.201177,-8.106344,-0.996974,5.660093,-9.889276,-0.805386,9.737269,-9.962112,-4.955013,4.255357,-8.195140,6.804983,-9.649473,4.183343,-6.485671,6.384389,6.997297,3.494419,-3.393225,-7.600789,-3.742585,-6.425096,-4.939817,9.897421,6.446752,8.352851,2.551219,-1.908786,-0.689224,-3.121159,3.535004,4.649364,7.163429,-3.658364,2.634638,-6.692662,-4.100594,-6.966543,9.512726,4.540286,-4.686993,-2.468968,1.269047,-9.861057,1.698698,2.350994,-0.350021,6.702208,8.506234,4.694907,-8.838871,-9.597553,8.150626,0.293118,0.719949,3.414073,-9.258807,2.751101,-8.019700,4.600484,-0.741426,-8.906369,4.126535,-9.352945,-9.432130,-5.570925,5.905156,6.948959,0.325847,5.066633,4.204031,-9.124156,0.053758,5.677305,1.250260,9.785050,0.835806,-0.185715,8.115971,0.072063,5.228564,-5.437016,9.388777,3.371309,6.777597,6.592711,5.062143,-5.659839,8.963534,0.491618,-7.445899,-1.332644,-1.595587,-1.669930,9.380925,2.510195,7.275561,3.627281,3.661130,9.779771,9.910596,8.390474,2.900379,7.589455,-0.577065,5.939417,7.531439,-0.931141,1.376719,6.280669,3.288056,7.816140,3.979217,9.947942,6.374277,7.154353,8.031582,7.227506,-6.138409,8.824743,1.904739,3.066570,-4.950989,1.946915,-8.549766,-1.634009,0.541641,5.467121,-1.226876,-6.688066,9.851702,-4.290867,-6.282645,4.130764,6.502537,6.702141,-4.162010,7.269470,5.933320,-4.447399,-7.546511,2.530053,-1.156066,-0.535337,8.696498,-0.219253,-3.895442,3.622796,-7.325284,0.036755,9.438929,5.905051,5.483762,-7.995490,8.637237,-4.988366,7.056945,3.768653,-5.297527,-7.470966,-7.594980,2.421797,4.068477,-0.158956,3.272266,8.133498,-4.909454,-9.220729,-2.805843,-5.525090,6.865376,4.588543,-3.065153,-9.560243,-9.824608,-0.627784,0.856513,2.071006,-5.814588,5.454670,0.161657,-2.586200,8.810623,1.859909,6.013461,3.153640,-6.580711,9.041898,0.726187,-4.078887,-0.094259,4.280750,-5.130254,1.347806,-6.995570,-1.768687,0.179736,2.635089], dtype = "float32")#candidate|1654|(780,)|const|float32
call_1653 = func_615_call(relay.reshape(const_1654.astype('float32'), [5, 13, 12]))
call_1655 = func_615_call(relay.reshape(const_1654.astype('float32'), [5, 13, 12]))
output = relay.Tuple([uop_1641,call_1653,const_1654,])
output2 = relay.Tuple([uop_1641,call_1655,const_1654,])
func_1656 = relay.Function([var_1640,], output)
mod['func_1656'] = func_1656
mod = relay.transform.InferType()(mod)
var_1657 = relay.var("var_1657", dtype = "float64", shape = (11, 4, 3))#candidate|1657|(11, 4, 3)|var|float64
output = func_1656(var_1657)
func_1658 = relay.Function([var_1657], output)
mutated_mod['func_1658'] = func_1658
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1784 = relay.const([[[1,7,4,10,9,5,-6,-8,-1],[2,-4,1,3,-1,5,10,5,6],[5,1,5,-2,5,6,4,3,4],[8,-10,-2,-10,-2,10,-4,5,1],[-1,3,-4,3,8,5,-2,1,3],[-10,6,6,2,-2,-5,-9,7,-6],[10,8,7,-1,-6,2,6,2,4],[9,-10,-4,-4,-3,4,2,9,3]],[[-3,5,-7,-1,-9,-6,-3,-10,3],[-7,-7,-8,10,-5,9,-6,-4,-4],[-8,-3,-7,1,-3,-2,2,-3,-2],[10,-2,2,6,-4,9,-9,-10,-3],[3,-9,-2,1,10,5,-7,-5,-3],[-10,5,7,-9,-2,-1,8,-8,10],[-5,5,7,9,-6,-4,-3,8,-8],[3,-3,6,9,-10,8,6,1,1]],[[5,5,-6,2,3,7,-7,9,-5],[-4,7,-1,3,10,-1,5,3,-9],[9,8,1,5,6,-8,7,7,-7],[10,-6,-6,-3,4,9,5,-5,1],[-8,6,8,-7,5,2,-2,1,-5],[8,-6,-4,-8,-4,-1,2,1,3],[9,4,-6,5,-1,8,3,-3,-10],[5,-5,-2,-4,-6,-2,2,-1,-7]],[[-5,4,1,1,8,1,1,6,5],[-4,4,-1,1,10,-4,-10,1,6],[-6,4,-8,-1,-2,-7,-7,-5,-1],[9,-4,5,-6,-8,8,9,-10,9],[-9,-9,9,10,-6,-9,5,-10,-7],[-8,9,9,1,-3,-10,-1,3,2],[5,-10,-10,10,8,-4,-5,5,-10],[3,-2,-10,-9,1,-10,-5,-6,-8]],[[5,2,7,6,10,-6,-8,10,3],[10,3,-5,-6,-10,5,-9,-7,4],[8,-6,3,-7,-8,9,-10,-5,-2],[-6,1,1,7,6,2,7,-2,-8],[-4,-8,-5,6,-7,6,3,8,-1],[10,2,1,-10,5,3,8,10,10],[2,1,-10,1,-1,9,-9,-10,-7],[-6,-9,-8,6,-10,2,4,-7,-3]],[[9,2,2,-2,10,-3,-2,5,-2],[4,9,-4,5,4,2,10,-1,3],[-2,6,8,-1,10,2,9,10,1],[8,4,7,-9,-7,-7,-6,5,3],[1,4,1,3,-1,7,-7,-7,7],[4,8,8,2,-8,-6,-2,8,10],[1,7,-6,-5,9,3,5,2,1],[-3,-6,3,4,10,-3,-9,-4,8]]], dtype = "int8")#candidate|1784|(6, 8, 9)|const|int8
var_1785 = relay.var("var_1785", dtype = "int8", shape = (6, 8, 9))#candidate|1785|(6, 8, 9)|var|int8
bop_1786 = relay.bitwise_or(const_1784.astype('int8'), relay.reshape(var_1785.astype('int8'), relay.shape_of(const_1784))) # shape=(6, 8, 9)
output = bop_1786
output2 = bop_1786
func_1799 = relay.Function([var_1785,], output)
mod['func_1799'] = func_1799
mod = relay.transform.InferType()(mod)
mutated_mod['func_1799'] = func_1799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1800 = relay.var("var_1800", dtype = "int8", shape = (6, 8, 9))#candidate|1800|(6, 8, 9)|var|int8
func_1799_call = mutated_mod.get_global_var('func_1799')
call_1801 = func_1799_call(var_1800)
output = call_1801
func_1802 = relay.Function([var_1800], output)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3088 = relay.var("var_3088", dtype = "float64", shape = (9, 14, 13))#candidate|3088|(9, 14, 13)|var|float64
uop_3089 = relay.rsqrt(var_3088.astype('float64')) # shape=(9, 14, 13)
output = uop_3089
output2 = uop_3089
func_3106 = relay.Function([var_3088,], output)
mod['func_3106'] = func_3106
mod = relay.transform.InferType()(mod)
var_3107 = relay.var("var_3107", dtype = "float64", shape = (9, 14, 13))#candidate|3107|(9, 14, 13)|var|float64
output = func_3106(var_3107)
func_3108 = relay.Function([var_3107], output)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3139 = relay.const([[[-9,6,10,2,-4,1],[2,5,8,2,9,6],[3,-3,-2,8,-10,3],[-4,7,7,-4,-7,-7],[-4,-4,6,-3,5,-5],[2,10,-8,3,9,-3],[-5,5,7,-6,10,4],[-1,5,2,3,-3,-6]],[[-8,-6,7,1,-8,6],[8,-8,4,-4,-10,1],[9,6,8,7,-8,-3],[4,-1,-2,-8,8,1],[-8,9,6,-2,5,-8],[-7,-9,10,4,-7,6],[1,-2,-10,3,9,-7],[-1,9,4,-8,-4,10]],[[10,8,8,-9,-8,7],[5,5,1,9,1,-5],[5,8,2,-3,-1,-10],[-5,-5,9,10,-2,-7],[8,-5,2,-4,5,6],[1,8,2,-8,-6,-1],[-6,6,-7,1,9,-4],[7,-7,1,10,5,-3]],[[-7,-6,-7,7,-6,-1],[7,8,-9,-4,2,1],[-7,7,-10,-10,5,-9],[1,-6,-10,-1,1,1],[-2,10,-10,-9,-1,-10],[-9,7,4,-8,1,-1],[-3,8,-2,5,7,7],[-6,4,-5,8,3,-9]],[[9,-4,-9,3,-7,-5],[-1,-4,8,6,10,-3],[4,-8,-5,6,2,6],[4,5,-2,2,-5,-2],[10,8,7,4,1,8],[8,-1,3,6,-9,-9],[-3,4,9,-10,-5,-6],[10,-2,3,8,-6,-4]],[[8,-6,-10,10,6,-9],[4,-4,10,9,-2,-2],[5,-4,8,-9,7,7],[-10,9,3,-1,-9,-5],[-4,8,7,1,-9,2],[3,6,-7,-7,10,-3],[6,-1,8,4,2,10],[-2,-1,5,8,7,10]],[[-7,-8,-3,-9,4,3],[-7,8,1,-7,10,-5],[5,3,-7,5,9,10],[-4,-2,10,4,4,-5],[1,-9,-3,-6,-10,-10],[3,3,-9,-6,2,5],[3,9,3,-4,7,-3],[-10,7,-7,8,-2,-2]]], dtype = "uint16")#candidate|3139|(7, 8, 6)|const|uint16
var_3140 = relay.var("var_3140", dtype = "uint16", shape = (7, 8, 6))#candidate|3140|(7, 8, 6)|var|uint16
bop_3141 = relay.add(const_3139.astype('uint16'), relay.reshape(var_3140.astype('uint16'), relay.shape_of(const_3139))) # shape=(7, 8, 6)
output = bop_3141
output2 = bop_3141
func_3144 = relay.Function([var_3140,], output)
mod['func_3144'] = func_3144
mod = relay.transform.InferType()(mod)
mutated_mod['func_3144'] = func_3144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3145 = relay.var("var_3145", dtype = "uint16", shape = (7, 8, 6))#candidate|3145|(7, 8, 6)|var|uint16
func_3144_call = mutated_mod.get_global_var('func_3144')
call_3146 = func_3144_call(var_3145)
output = call_3146
func_3147 = relay.Function([var_3145], output)
mutated_mod['func_3147'] = func_3147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3916 = relay.var("var_3916", dtype = "bool", shape = (11, 12, 6))#candidate|3916|(11, 12, 6)|var|bool
var_3917 = relay.var("var_3917", dtype = "bool", shape = (11, 12, 6))#candidate|3917|(11, 12, 6)|var|bool
bop_3918 = relay.logical_and(var_3916.astype('bool'), relay.reshape(var_3917.astype('bool'), relay.shape_of(var_3916))) # shape=(11, 12, 6)
func_615_call = mod.get_global_var('func_615')
func_618_call = mutated_mod.get_global_var('func_618')
var_3923 = relay.var("var_3923", dtype = "float32", shape = (780,))#candidate|3923|(780,)|var|float32
call_3922 = func_615_call(relay.reshape(var_3923.astype('float32'), [5, 13, 12]))
call_3924 = func_615_call(relay.reshape(var_3923.astype('float32'), [5, 13, 12]))
bop_3930 = relay.floor_divide(var_3917.astype('float32'), relay.reshape(bop_3918.astype('float32'), relay.shape_of(var_3917))) # shape=(11, 12, 6)
uop_3939 = relay.cos(call_3922.astype('float64')) # shape=(5, 13, 12)
uop_3941 = relay.cos(call_3924.astype('float64')) # shape=(5, 13, 12)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
var_3946 = relay.var("var_3946", dtype = "float64", shape = (1638, 1))#candidate|3946|(1638, 1)|var|float64
call_3945 = func_3106_call(relay.reshape(var_3946.astype('float64'), [9, 14, 13]))
call_3947 = func_3106_call(relay.reshape(var_3946.astype('float64'), [9, 14, 13]))
func_3144_call = mod.get_global_var('func_3144')
func_3147_call = mutated_mod.get_global_var('func_3147')
const_3961 = relay.const([9,-1,1,-8,3,-7,-1,-6,7,-4,-5,-1,-5,-4,-7,-5,4,-9,-1,3,-6,-4,-3,7,10,-8,-10,-3,-9,-8,-5,5,8,6,2,5,8,-4,10,10,5,-6,-9,8,7,8,-8,1,10,5,-7,-9,10,5,-7,1,-4,-6,7,5,-1,-5,-10,5,6,-10,-10,7,4,-1,8,4,-10,-7,6,10,6,4,-6,6,9,-4,-6,-9,6,3,4,7,10,1,-7,1,8,1,-6,-7,-2,-6,-3,-3,6,2,5,-2,-5,-1,5,8,-1,9,-6,6,7,-10,-6,-9,9,2,3,9,8,10,5,-7,9,-6,2,4,-2,2,-7,10,-4,-10,-6,-7,-2,-8,-5,3,-2,-8,1,-8,8,2,-10,-9,-7,-5,9,-9,-9,8,-3,9,-10,-4,10,-7,-9,-2,-3,7,-4,-5,4,-4,3,6,-2,3,-1,6,-8,-10,2,-10,-6,7,9,3,-9,6,-10,8,-7,-6,10,10,7,-5,-3,-5,1,-9,5,-6,8,6,4,9,-9,-10,9,4,-1,4,-5,-2,-3,9,-10,2,-6,-5,-6,-4,1,1,5,5,-8,9,-10,-2,-2,10,-5,-2,-3,-3,-1,-4,-2,-2,4,-10,-8,6,10,8,-8,-5,-3,5,-4,-6,5,5,7,-4,-5,-3,-5,-1,-8,10,9,8,10,9,2,-9,7,6,-1,7,9,1,3,-1,-2,7,-6,-5,-10,2,-10,-1,-5,3,1,4,-3,4,-8,7,7,3,-2,-2,3,-6,-3,1,6,-5,-7,-7,-5,-6,-9,5,8,-9,-6,-3,-5,1,-6,7,8,10,-3,8,9,3,7,-4,-3,7,8,-8,9,-2,-4,8,2,-9,-9,5,1,8,5,4], dtype = "uint16")#candidate|3961|(336,)|const|uint16
call_3960 = func_3144_call(relay.reshape(const_3961.astype('uint16'), [7, 8, 6]))
call_3962 = func_3144_call(relay.reshape(const_3961.astype('uint16'), [7, 8, 6]))
output = relay.Tuple([var_3923,bop_3930,uop_3939,call_3945,var_3946,call_3960,const_3961,])
output2 = relay.Tuple([var_3923,bop_3930,uop_3941,call_3947,var_3946,call_3962,const_3961,])
func_3963 = relay.Function([var_3916,var_3917,var_3923,var_3946,], output)
mod['func_3963'] = func_3963
mod = relay.transform.InferType()(mod)
mutated_mod['func_3963'] = func_3963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3963_call = mutated_mod.get_global_var('func_3963')
var_3965 = relay.var("var_3965", dtype = "bool", shape = (11, 12, 6))#candidate|3965|(11, 12, 6)|var|bool
var_3966 = relay.var("var_3966", dtype = "bool", shape = (11, 12, 6))#candidate|3966|(11, 12, 6)|var|bool
var_3967 = relay.var("var_3967", dtype = "float32", shape = (780,))#candidate|3967|(780,)|var|float32
var_3968 = relay.var("var_3968", dtype = "float64", shape = (1638, 1))#candidate|3968|(1638, 1)|var|float64
call_3964 = func_3963_call(var_3965,var_3966,var_3967,var_3968,)
output = call_3964
func_3969 = relay.Function([var_3965,var_3966,var_3967,var_3968,], output)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4047 = relay.const([[[-6.727395,0.046724,-8.669298,-7.259294,3.848135],[1.641350,4.500551,-0.707204,1.459001,3.671224],[-8.959035,-6.201440,-3.253943,7.837307,6.651126],[3.479587,-9.839611,7.352454,-2.707587,5.181989],[-9.490251,-7.420682,-2.590478,6.888568,3.063130],[-2.450459,-5.746678,-7.739005,-1.906126,-4.461502],[-5.565850,6.262983,0.698484,4.789961,4.889133],[9.898518,-3.983251,3.081530,4.236362,-7.352747],[0.239860,-3.412963,3.684089,-7.305582,-3.826591],[1.773029,-8.672205,7.845927,8.591010,-0.650401],[9.458758,-5.409131,4.891492,9.847759,7.194857],[0.465258,-6.376749,-8.915082,-1.925587,-6.833669],[-3.122303,4.886794,-4.928607,-5.728233,-0.841803]],[[-8.239565,-8.858063,5.733950,-7.302525,-7.585264],[-6.249909,-5.027715,1.981629,-2.877051,0.787159],[-6.023626,-6.391376,0.390818,8.664201,-5.113898],[-2.188839,3.081163,1.454403,-0.046351,4.621045],[0.995384,5.781114,5.990332,8.036074,-4.209750],[-7.501553,-6.672097,7.366731,3.876162,6.873238],[-2.796496,6.153441,-3.056941,-0.709664,-2.190102],[-6.615647,3.939661,-0.441770,-6.600125,-9.306640],[-4.741480,-5.985969,4.627914,-3.153214,-9.203116],[-1.396498,3.590022,-8.984220,-8.323504,1.988013],[3.954835,8.444244,6.730240,5.052729,3.790906],[-2.788764,-6.857077,-6.303024,-6.835334,-5.433371],[-6.391057,3.339665,-6.286043,7.105415,-9.991951]],[[-2.480356,-7.194677,-2.346522,9.647118,-4.866707],[4.383943,-9.737076,1.059052,3.829783,-5.410472],[-9.895737,-0.728761,-2.084656,8.370518,-4.446079],[-7.269729,9.607132,-0.006328,-3.452631,4.339403],[-1.843914,-8.554309,-9.195369,6.521215,2.872967],[-8.091736,-8.367611,-1.353608,2.392030,-5.856824],[9.660390,-5.046878,-3.176527,8.746387,-1.198095],[3.930643,5.107184,-8.676357,4.584399,-2.226720],[8.672816,-9.147581,6.144305,-1.888759,-6.077680],[-0.656344,-1.199234,3.057998,3.645826,7.066008],[8.463777,-1.231149,-9.703672,1.471441,-8.062407],[4.567159,-3.150753,0.434363,-4.326402,-2.258763],[9.706278,-7.562930,-0.869032,-2.754732,-0.076377]],[[8.938182,-8.341602,4.017569,-5.206432,-8.918363],[-4.005626,-5.522656,1.705733,-7.776615,-3.726807],[-5.856048,-7.747154,7.011519,-8.930421,-2.523460],[8.514045,5.841343,-2.455201,7.387821,8.027819],[6.848502,5.208107,-0.999063,-5.649111,-4.735017],[2.035457,-8.353746,7.235941,-1.524882,2.191876],[2.544378,9.583157,-4.896941,0.402057,-7.463889],[3.170666,-0.206064,-7.406788,5.559789,5.755396],[1.182710,-8.703299,-2.158190,8.998421,-6.115770],[-2.425689,0.601620,-4.210757,4.917893,8.823205],[-8.544303,6.588867,1.840368,7.490286,-3.825685],[-0.482387,0.996574,1.862106,7.339955,8.920775],[7.488920,8.600877,4.407358,-1.410038,0.610630]],[[-7.576890,-2.795461,-4.114178,2.340218,-2.137699],[-3.782325,2.840311,-5.040932,-8.053052,6.468997],[1.104101,6.629450,-1.955124,-6.744405,0.521346],[-9.191417,7.441305,7.736982,2.560888,7.660604],[1.103443,-6.746548,7.272478,9.277503,-0.301727],[9.082919,-6.811290,-4.644342,1.494697,7.081417],[-5.029995,0.612120,6.546250,1.323262,5.706594],[-2.812148,9.298362,-4.986439,2.905960,-6.553728],[-4.039671,9.644625,-5.795596,0.133205,-2.223316],[-9.199977,9.491998,-8.257158,-2.911267,9.073355],[-7.187700,-7.988653,-4.368386,7.122845,5.930879],[-9.044043,9.675002,-2.255435,9.971197,-4.094639],[-8.323669,5.364886,-3.824458,-8.750332,1.149311]],[[-8.521240,-2.518538,1.115357,1.975098,-0.552654],[-2.298480,3.647434,9.536441,8.819270,8.709545],[-0.750761,-3.846770,9.139453,-9.437238,-7.546511],[7.312567,1.550949,3.814604,3.406802,1.142076],[2.575802,-4.292239,-6.792521,-0.502026,-7.661538],[2.199051,-1.763368,-9.720561,-7.051917,8.804516],[9.074417,9.122161,-0.197955,5.284679,-1.816731],[-5.188871,5.591928,-0.443633,-1.127027,6.344414],[-9.079692,0.708783,2.932019,3.078569,-9.926860],[-4.632174,7.036808,9.212369,-3.493860,6.930981],[5.458770,5.235155,-6.801093,-2.046157,-9.546783],[-3.490460,-4.440806,2.367261,6.991073,9.731425],[-7.261228,6.132523,-9.729059,7.499559,-8.471748]],[[0.750828,-3.981080,-7.713452,-9.175042,0.314861],[-3.201498,2.460452,-6.220477,-6.201347,6.597579],[5.917687,5.106570,-1.856748,0.296305,1.193076],[-5.638319,-4.669144,3.131740,-4.781483,9.862727],[-6.141888,8.403994,0.243391,0.668425,8.193582],[1.626507,-4.252236,-3.184669,-2.465529,-6.839549],[9.414007,-2.158844,-7.814841,-4.222714,4.715083],[-9.753133,2.877043,-9.297467,3.001991,9.727873],[-3.047272,-0.452841,7.767385,1.205762,-1.586877],[5.577742,0.387373,4.502045,6.297349,-8.744714],[-1.878937,1.850137,-8.676157,-1.030045,0.919612],[-4.684279,-8.393751,-4.605101,6.267942,-2.722792],[6.266974,3.994602,8.793806,-4.992072,-0.903408]],[[-0.414521,-6.728621,6.096651,4.693708,-8.909616],[4.555080,-9.329536,1.612794,5.533590,9.318976],[1.811707,-1.939349,6.629759,3.607493,-6.965878],[-0.580141,-8.359618,-3.783578,2.759230,9.303596],[-3.127284,-6.999571,6.129428,7.271612,4.453767],[-2.534294,-6.668447,2.971311,-7.789614,0.874102],[3.444226,9.956918,-3.914959,1.957940,5.797619],[-8.787564,4.977955,3.942233,-2.170640,2.369901],[1.234631,-0.484336,-3.418006,0.516439,3.628552],[-7.166508,-9.720125,-8.922195,7.898355,-3.468465],[7.214918,1.688928,5.219695,1.747893,3.125981],[7.900422,-7.273967,-1.318063,-6.577331,1.714830],[1.610264,-2.866697,-3.756326,-5.244146,-1.723865]],[[-5.646436,8.592343,-0.067946,-1.769317,8.734462],[-5.045864,-1.260411,-0.198144,-8.729915,-9.733172],[-4.971009,6.797196,5.418329,-7.866195,3.017579],[-3.636598,-8.966890,8.253849,8.141593,-4.637946],[-4.685339,2.174919,3.364249,0.989959,-5.574457],[4.408032,6.777251,9.634830,-3.167591,4.292880],[-6.124859,-2.245082,2.519266,6.412625,4.872935],[7.078939,4.705639,7.021275,7.759886,-8.446465],[-1.024353,-5.230802,-8.388054,1.001686,9.121934],[-1.528244,-1.530604,-7.284047,6.720615,-7.865604],[0.614028,-9.124516,3.434718,1.403001,-4.324817],[-0.591696,-2.428844,5.559994,5.417263,8.132232],[7.279563,-2.081286,-0.493703,6.852241,9.281584]],[[2.204483,-6.704249,6.590281,6.250960,-7.914649],[-6.830344,-4.244146,5.194133,7.525269,-4.868416],[-1.405753,-2.020034,-7.643778,0.615421,-2.751637],[8.996162,-8.945463,7.106404,1.870865,-4.008654],[0.020165,1.651013,9.740241,7.898669,7.237091],[-8.790536,6.941933,-1.931057,2.718555,3.822583],[-1.966628,9.779597,-3.561533,-3.050309,8.955478],[6.139095,2.978244,7.875102,-7.688110,1.779555],[-3.148886,3.653441,9.037835,8.459382,4.512793],[-0.343670,-3.529426,-4.605480,7.503874,-6.592525],[-5.428601,7.032431,-0.914147,-8.615791,0.627941],[-5.243390,5.171862,2.716585,-4.339637,-4.103230],[2.593494,7.062928,-7.497669,8.060310,2.410213]]], dtype = "float64")#candidate|4047|(10, 13, 5)|const|float64
uop_4048 = relay.tan(const_4047.astype('float64')) # shape=(10, 13, 5)
func_1656_call = mod.get_global_var('func_1656')
func_1658_call = mutated_mod.get_global_var('func_1658')
const_4055 = relay.const([1.552542,-5.354863,-9.309682,-1.962614,-5.667048,-9.760175,-4.276213,-8.138530,-5.852776,-8.497156,-1.577241,-6.500066,9.668072,3.237712,3.112453,-7.076589,1.848626,2.834042,2.846217,-7.586636,9.641450,9.983570,8.842814,6.607093,-0.736857,0.939510,4.456682,-1.989615,-5.377408,-1.704152,3.431120,0.080525,3.682986,-6.488649,-8.342949,-1.745117,6.842154,1.881545,0.271846,-0.108844,-5.833005,-6.896395,4.355966,8.617378,9.593808,-6.995839,-0.441168,3.444004,-8.654653,-5.946908,4.688030,-2.492933,4.291717,1.536694,9.459238,-2.813361,6.308148,7.973485,1.070151,-0.320645,-8.496159,5.296347,-3.560427,5.481152,-5.814708,7.675087,-0.386551,-9.628851,8.806755,1.743319,-5.533534,8.971305,-9.872197,-8.694695,0.473544,-2.655558,2.439977,-7.946973,1.830238,3.273874,-0.445233,9.498782,-3.306377,-8.294679,2.473698,-3.860871,7.166759,6.361520,5.527036,0.573372,-0.851480,-3.310947,-2.999702,-1.092262,-7.645836,6.131100,-7.135170,-2.611128,3.257034,8.696897,-4.522067,-0.307902,3.103577,9.903752,7.006515,4.777873,7.603091,-6.747575,-5.927067,8.451521,-9.940580,9.565654,7.813330,4.915705,-4.302240,0.322457,0.599919,-6.665423,4.897161,1.857856,3.450303,-1.871973,-5.725654,-6.379917,6.288716,-9.690078,-7.348013,7.094958,9.004488,-1.333450,9.771689,-0.534250], dtype = "float64")#candidate|4055|(132,)|const|float64
call_4054 = relay.TupleGetItem(func_1656_call(relay.reshape(const_4055.astype('float64'), [11, 4, 3])), 2)
call_4056 = relay.TupleGetItem(func_1658_call(relay.reshape(const_4055.astype('float64'), [11, 4, 3])), 2)
func_819_call = mod.get_global_var('func_819')
func_822_call = mutated_mod.get_global_var('func_822')
var_4058 = relay.var("var_4058", dtype = "uint16", shape = ())#candidate|4058|()|var|uint16
call_4057 = relay.TupleGetItem(func_819_call(relay.reshape(var_4058.astype('uint16'), [])), 1)
call_4059 = relay.TupleGetItem(func_822_call(relay.reshape(var_4058.astype('uint16'), [])), 1)
output = relay.Tuple([uop_4048,call_4054,const_4055,call_4057,var_4058,])
output2 = relay.Tuple([uop_4048,call_4056,const_4055,call_4059,var_4058,])
func_4060 = relay.Function([var_4058,], output)
mod['func_4060'] = func_4060
mod = relay.transform.InferType()(mod)
var_4061 = relay.var("var_4061", dtype = "uint16", shape = ())#candidate|4061|()|var|uint16
output = func_4060(var_4061)
func_4062 = relay.Function([var_4061], output)
mutated_mod['func_4062'] = func_4062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4096 = relay.var("var_4096", dtype = "float32", shape = (6, 1, 1))#candidate|4096|(6, 1, 1)|var|float32
var_4097 = relay.var("var_4097", dtype = "float32", shape = (6, 15, 8))#candidate|4097|(6, 15, 8)|var|float32
bop_4098 = relay.power(var_4096.astype('float32'), var_4097.astype('float32')) # shape=(6, 15, 8)
output = bop_4098
output2 = bop_4098
func_4101 = relay.Function([var_4096,var_4097,], output)
mod['func_4101'] = func_4101
mod = relay.transform.InferType()(mod)
var_4102 = relay.var("var_4102", dtype = "float32", shape = (6, 1, 1))#candidate|4102|(6, 1, 1)|var|float32
var_4103 = relay.var("var_4103", dtype = "float32", shape = (6, 15, 8))#candidate|4103|(6, 15, 8)|var|float32
output = func_4101(var_4102,var_4103,)
func_4104 = relay.Function([var_4102,var_4103,], output)
mutated_mod['func_4104'] = func_4104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4602 = relay.var("var_4602", dtype = "float32", shape = (1, 14, 14))#candidate|4602|(1, 14, 14)|var|float32
uop_4603 = relay.atanh(var_4602.astype('float32')) # shape=(1, 14, 14)
func_3144_call = mod.get_global_var('func_3144')
func_3147_call = mutated_mod.get_global_var('func_3147')
const_4607 = relay.const([[10,1,10,-6,-2,2,9,-8,-10,5,8,-2,-8,-6,6,3,2,9,-8,10,7,3,-5,-9,5,-1,-5,-5,6,1,-1,-2,-8,4,-8,-10,-6,1,4,-6,-5,-4,-2,5,-10,3,-3,-4,-4,9,-3,-6,-3,-10,-8,10,5,-6,-4,-6,9,6,2,3,8,-9,4,-2,2,-6,10,6,9,-4,-4,7,-8,7,3,-8,-3,-4,10,-4,7,5,-5,5,-4,6,9,-1,-6,-9,-8,2,1,10,9,8,-5,5,3,-3,9,4,3,-7,6,8,2,-7,3,6,5,-1,-8,-2,6,-9,7,7,1,-6,9,-10,1,5,9,9,-5,6,-7,-4,6,-2,-7,10,2,-2,10,-3,1,7,7,-4,8,-8,8,2,7,6,4,1,-4,6,-7,4,-6,10,1,-8,3,6,1,-9,1,-2,3,-10,8,-10,-6,7,-9,5,-10,-9,-2,8,2,-2,3,9,-9,3,-6,6,-9,-5,-9,-8,-5,4,3,-3,-7,1,10,6,-10,9,-1,-1,-8,-1,-7,6,10,-1,9,-10,-8,-8,3,-10,-2,1,3,-6,-6,-8,9,-7,3,4,4,10,-6,-2,10,-4,-10,8,6,-4,4,-7,5,2,4,10,1,-1,8,-8,5,1,-4,1,-4,4,9,10,7,-4,9,8,3,9,-3,10,-6,5,1,-1,1,4,7,3,-6,-5,-10,7,2,-7,-10,5,9,5,8,-6,1,10,-3,-2,-2,4,-9,7,6,8,-10,-1,5,-10,1,-5,-5,-10,7,-7,-10,3,3,-1,-4,4,-2,-5,-10,3,3,4,10,-6,8,8,-6,7,10,10,-5,-10,-9,7,9,9,-5,-10,8,3,-1,6,-9,9]], dtype = "uint16")#candidate|4607|(1, 336)|const|uint16
call_4606 = func_3144_call(relay.reshape(const_4607.astype('uint16'), [7, 8, 6]))
call_4608 = func_3144_call(relay.reshape(const_4607.astype('uint16'), [7, 8, 6]))
bop_4636 = relay.logical_xor(uop_4603.astype('uint64'), relay.reshape(var_4602.astype('uint64'), relay.shape_of(uop_4603))) # shape=(1, 14, 14)
output = relay.Tuple([call_4606,const_4607,bop_4636,])
output2 = relay.Tuple([call_4608,const_4607,bop_4636,])
func_4639 = relay.Function([var_4602,], output)
mod['func_4639'] = func_4639
mod = relay.transform.InferType()(mod)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4640 = relay.var("var_4640", dtype = "float32", shape = (1, 14, 14))#candidate|4640|(1, 14, 14)|var|float32
func_4639_call = mutated_mod.get_global_var('func_4639')
call_4641 = func_4639_call(var_4640)
output = call_4641
func_4642 = relay.Function([var_4640], output)
mutated_mod['func_4642'] = func_4642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4799 = relay.var("var_4799", dtype = "float64", shape = (15, 2, 14))#candidate|4799|(15, 2, 14)|var|float64
uop_4800 = relay.cos(var_4799.astype('float64')) # shape=(15, 2, 14)
func_865_call = mod.get_global_var('func_865')
func_868_call = mutated_mod.get_global_var('func_868')
var_4810 = relay.var("var_4810", dtype = "int64", shape = (980, 2))#candidate|4810|(980, 2)|var|int64
call_4809 = relay.TupleGetItem(func_865_call(relay.reshape(var_4810.astype('int64'), [14, 14, 10]), relay.reshape(var_4810.astype('int64'), [14, 14, 10]), ), 0)
call_4811 = relay.TupleGetItem(func_868_call(relay.reshape(var_4810.astype('int64'), [14, 14, 10]), relay.reshape(var_4810.astype('int64'), [14, 14, 10]), ), 0)
output = relay.Tuple([uop_4800,call_4809,var_4810,])
output2 = relay.Tuple([uop_4800,call_4811,var_4810,])
func_4812 = relay.Function([var_4799,var_4810,], output)
mod['func_4812'] = func_4812
mod = relay.transform.InferType()(mod)
var_4813 = relay.var("var_4813", dtype = "float64", shape = (15, 2, 14))#candidate|4813|(15, 2, 14)|var|float64
var_4814 = relay.var("var_4814", dtype = "int64", shape = (980, 2))#candidate|4814|(980, 2)|var|int64
output = func_4812(var_4813,var_4814,)
func_4815 = relay.Function([var_4813,var_4814,], output)
mutated_mod['func_4815'] = func_4815
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5090 = relay.const([[[-1],[-9],[10],[2],[-1],[-6],[-6]],[[10],[7],[-10],[9],[4],[9],[-4]],[[-9],[-6],[-6],[3],[10],[2],[4]],[[-4],[6],[-6],[-2],[-8],[10],[-4]],[[9],[-9],[-3],[-1],[10],[6],[9]],[[1],[7],[4],[9],[-6],[4],[-1]]], dtype = "uint32")#candidate|5090|(6, 7, 1)|const|uint32
var_5091 = relay.var("var_5091", dtype = "uint32", shape = (6, 7, 15))#candidate|5091|(6, 7, 15)|var|uint32
bop_5092 = relay.bitwise_xor(const_5090.astype('uint32'), var_5091.astype('uint32')) # shape=(6, 7, 15)
output = bop_5092
output2 = bop_5092
func_5095 = relay.Function([var_5091,], output)
mod['func_5095'] = func_5095
mod = relay.transform.InferType()(mod)
var_5096 = relay.var("var_5096", dtype = "uint32", shape = (6, 7, 15))#candidate|5096|(6, 7, 15)|var|uint32
output = func_5095(var_5096)
func_5097 = relay.Function([var_5096], output)
mutated_mod['func_5097'] = func_5097
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5299 = relay.var("var_5299", dtype = "float64", shape = (15, 16, 1))#candidate|5299|(15, 16, 1)|var|float64
const_5300 = relay.const([[[0.785650,5.464900,-0.023818,1.480929,5.939310,-0.256875,-4.718624,5.052757,3.108892,-7.354290,-6.001991,5.385110,-4.000719,-0.098786,-4.133726],[1.668673,-3.231714,-3.454560,4.454803,7.181779,0.882056,-4.154465,9.122671,3.439388,8.268546,5.937661,-6.786938,6.957021,-9.075209,9.975240],[-5.075611,-2.094573,4.855418,3.258351,-5.042001,5.308464,-3.905597,5.290595,4.965164,3.504243,-3.069574,-5.746030,9.603558,-4.232667,6.546798],[-5.420434,-6.132724,9.962446,-4.190181,-4.419527,9.857503,-1.836294,6.183015,-7.474929,-2.141611,-5.287599,-1.215838,0.115902,-9.743837,-5.024632],[6.917750,1.629547,6.333884,8.136303,-6.763360,5.851778,9.576453,4.002341,6.071518,-5.026104,7.046022,2.748235,6.951098,-7.335534,-1.337613],[-4.637625,2.242917,9.837239,-9.988220,-6.887929,-8.538051,-6.741202,6.682622,6.826345,1.156930,-0.666866,-4.219454,1.925795,7.363702,0.012996],[-3.200573,2.743124,-5.415809,-0.526433,-1.841215,0.091619,-7.869697,-2.417054,2.717087,3.814959,2.319362,-9.309085,1.878072,-7.679421,1.437048],[-0.779858,0.388898,6.774642,-4.231593,-7.803386,4.601131,4.702761,9.146711,6.529638,9.754729,-3.689997,9.061703,-7.951383,-2.294734,5.282178],[7.836371,1.779721,3.450954,-7.775346,-6.512673,-2.647251,-8.608982,-3.131801,-2.634802,-0.755890,-8.936984,-1.116924,8.081745,-6.355027,8.236896],[0.849234,2.409941,2.897045,-1.666994,-0.920439,-4.439791,-0.207451,-0.919268,0.404694,-6.094098,3.921036,-0.963983,-9.660257,-1.035418,0.463505],[-3.322875,-1.184995,2.999607,2.250921,4.019845,-2.512956,-8.764420,-4.490637,1.173526,2.116515,-5.863250,-1.638907,5.588007,-7.042628,7.004192],[3.831338,3.005718,1.936168,-6.342217,-2.715457,-3.659650,4.179547,1.577982,-7.423912,7.752914,-7.140099,-5.370478,-0.445115,-1.443112,2.162948],[-0.926042,8.263109,8.637510,-3.999239,5.868867,7.761516,-0.495691,8.785281,0.495809,-5.603439,6.185845,-8.747097,-3.626125,7.017961,8.282786],[-8.268361,-3.255652,5.553695,5.563718,6.272763,-1.788406,-1.628051,8.230199,-7.334921,2.129907,-5.064424,-6.756414,-6.446589,3.581690,0.692407],[3.186784,0.088402,9.229397,5.156859,-0.450403,-6.930408,2.168732,1.235327,-7.061074,9.377857,3.678697,-5.327831,-0.400296,-8.364020,5.644942],[9.715440,0.525151,-1.665587,4.612800,3.168813,-3.273641,4.226211,1.970104,-9.814919,-5.204953,1.656553,4.664633,4.136487,7.372306,-2.370470]],[[2.180504,6.296175,-9.116298,-1.933094,0.776269,9.765332,3.433464,0.265869,-2.754324,-6.832856,-0.117979,-2.595823,8.112590,7.936955,9.531707],[6.205053,6.965166,8.641463,-0.977850,-1.067557,-7.064224,8.456722,-7.063613,-7.953964,3.240245,3.852116,-2.735177,5.673965,-3.495515,-2.207424],[-9.596481,-3.001536,-2.588092,9.593153,1.028943,-3.918776,-7.446018,7.769234,3.384447,2.487143,-2.845279,-9.124593,-6.929893,7.531840,-4.666700],[-4.966465,7.870716,2.571742,-6.211153,6.816575,-3.641116,9.225767,1.896668,2.562881,-7.144583,7.976307,5.011634,-7.389866,-2.208639,-7.434607],[5.370179,0.399290,-3.277411,7.643516,-5.372380,-6.072840,-7.581995,3.122034,2.259543,-2.368446,2.038974,-9.087806,7.075749,-0.688020,-2.508509],[2.759557,4.797087,8.403258,2.626934,-8.775492,7.556652,-1.328044,8.231950,6.516758,-3.611298,-5.869593,-3.715731,-3.960700,8.180779,9.327683],[-2.159084,-1.297500,5.148623,5.388188,-5.168117,-1.616596,-5.355691,9.363580,-2.170518,-0.921257,0.359019,-4.989627,-5.333611,1.276932,8.315790],[8.490296,7.890645,0.537998,4.445112,6.640360,7.472100,9.400598,-3.438714,7.057335,-7.929103,0.653885,-7.195549,5.024648,1.198040,2.979944],[2.261126,-4.225006,-8.928257,9.664904,-9.704721,7.597014,3.920014,0.755879,6.057055,-2.336998,0.773324,7.772331,-0.023067,-4.149629,-0.450371],[-5.832963,-1.148915,-2.999791,9.013174,8.678967,8.793731,2.352499,4.517359,-6.404901,5.885534,-1.971475,0.759495,-2.472911,-5.023037,2.448996],[-3.672623,-3.572975,-3.405333,8.436917,9.667227,2.473930,7.666499,4.714394,1.019371,-5.853886,-6.576824,9.003182,-0.718454,2.278303,-1.192581],[8.009120,4.965409,-3.653167,1.452500,1.862996,-0.066832,2.618933,6.704977,-6.372036,-3.562028,1.175781,-5.889715,-9.874975,-1.249189,9.620404],[-4.752110,-7.914707,1.463358,7.175689,-8.401535,9.906189,9.384835,6.252525,2.695317,-4.149916,-9.177150,-3.922050,-1.467721,1.454319,6.811749],[-5.160559,-5.963209,8.261602,8.514276,-2.965252,0.606621,-9.462839,-2.006733,2.056861,4.714216,4.810265,4.794893,-6.020504,0.503174,-2.329417],[7.482733,-0.108795,6.244271,0.485446,8.605490,9.428078,3.266738,9.152801,6.623250,4.551625,-7.357535,-2.033295,-4.479572,-6.173023,-3.110762],[-5.124144,3.520978,6.191974,-0.742760,3.433438,-4.434769,-0.906178,-2.410197,6.330525,-6.805874,-4.478200,-9.743666,-7.169394,-1.509956,-2.753882]],[[-6.827951,-7.269595,1.623606,-0.885607,-1.032105,6.061911,-8.710490,-3.685835,-7.047442,-5.579389,-3.532489,4.624377,0.780965,5.268970,-5.130190],[0.735969,5.027236,-2.311251,3.398435,-1.604137,-0.441187,2.595116,-0.485877,3.913566,5.135315,5.481190,5.409033,-1.885770,4.554585,-0.417089],[2.950273,-2.450361,5.663872,-2.244774,3.253094,-6.044921,-7.932668,4.974800,7.698209,8.143163,-8.527568,-9.603403,-8.399795,6.808079,-7.544668],[4.470336,6.364308,-1.707688,5.530468,9.625431,-4.342685,-9.523836,7.463129,5.122486,3.613489,-9.119900,1.836855,7.868846,8.377244,3.694444],[-4.065645,-3.409408,-1.987545,-7.053996,2.010535,8.042790,4.245337,-9.256582,9.392508,7.228120,5.115869,-2.670922,-6.765561,-0.401530,-9.991061],[6.851187,-1.026870,-7.015183,2.172773,-2.410127,8.470776,-0.988188,-8.667701,8.125941,-5.740347,-3.102259,-3.581297,-7.812833,-1.492910,0.354640],[8.342823,0.079819,-8.918106,-9.557593,-8.237012,-5.391739,-2.488784,-6.825859,1.005248,-0.567653,-1.810637,6.579727,-2.892556,0.035530,-4.166831],[6.442841,9.657948,-7.654610,1.187407,8.612104,8.453737,4.673537,-0.415994,-8.521299,6.010010,2.758126,4.192820,9.599187,2.036418,-8.792100],[2.897399,3.771885,-9.822403,-7.120249,-0.419026,2.514157,1.872433,-8.634380,-9.068058,2.568267,0.134746,6.981332,-8.608605,-5.437012,3.942353],[1.929900,6.344334,-7.297996,-2.512630,5.098495,-1.845645,3.225833,2.094269,-5.318321,-9.450604,4.889692,-8.389666,0.515545,3.644053,-0.940150],[-8.523929,7.133156,-8.991785,-9.373980,-4.080755,-4.312345,-0.642823,-8.839014,3.997510,-1.804783,7.010872,4.363183,-8.370257,-6.163893,5.590637],[7.972043,-8.826066,9.624691,-1.463590,-8.762390,1.942306,9.263124,-8.412610,5.347220,-5.801973,2.380613,0.926733,-0.416351,2.233496,-9.445601],[6.094755,7.338479,-2.742053,2.679759,-9.562438,-1.083837,-1.694821,1.012381,1.595093,-0.023727,-6.964574,4.311517,-1.168599,-6.482121,-9.855885],[-8.819346,-1.178821,-9.245585,-7.194191,8.177206,0.780652,-2.443650,5.512572,-7.056474,-9.342182,7.073987,-1.027025,0.856574,-2.672416,7.164354],[-0.777525,-1.597819,1.035269,4.337315,-8.778684,-6.747624,-9.850878,4.904258,-9.098611,1.247479,-7.500120,-2.757894,3.098385,-7.545391,8.545108],[4.894125,0.696342,-2.757283,-3.869397,8.068779,-0.293489,-2.456112,-2.637870,-2.935320,8.798646,-9.467844,-2.970178,-6.655584,-7.659511,4.738249]],[[-5.780772,3.050849,7.317608,-4.544156,4.076097,-1.635266,9.945158,6.229335,2.657482,8.144042,3.922919,-6.402238,-9.866810,1.072696,5.096011],[-8.447983,7.142505,-4.435261,0.945735,-5.311803,-3.730130,-3.049008,3.972325,2.343937,7.068810,5.226502,-2.505550,2.512818,1.729495,2.167977],[7.810203,-3.446166,6.326245,7.063461,-3.700414,-9.540001,0.305920,-9.699707,-7.938035,3.044009,-5.316227,-6.139577,-0.856468,5.699561,-3.088915],[3.620304,-2.052461,5.064819,-5.405975,-2.675637,-9.865574,0.891355,1.350425,1.861541,7.264820,-1.839216,1.753386,7.800541,-1.959980,0.688084],[5.593148,-2.055709,5.229171,-0.983174,5.520243,-2.364642,4.032303,7.992214,9.655920,-1.822970,2.499543,2.613180,2.872471,-2.927737,5.896545],[-1.124490,-7.657151,0.326663,-1.821566,9.674658,-5.042283,-4.901642,0.499380,0.845510,-2.095451,-8.751401,-9.091781,-5.569653,-1.490632,7.093883],[0.379324,-6.150574,-1.382004,9.706269,1.476709,-2.995648,-9.295317,0.356513,-9.697433,-0.837177,-1.153300,-2.452526,-2.695564,-5.817432,-3.755276],[8.252825,-7.186899,7.111956,6.313000,7.191908,-9.902960,-0.927326,-9.698282,-9.538119,-5.481605,6.532799,4.036056,3.648364,2.551117,-0.840417],[0.691775,2.979948,-5.872453,8.966419,8.672556,-1.557178,-2.156502,-7.146587,0.702880,-5.028156,4.105998,-2.502189,3.694752,5.233792,-6.052500],[-8.132829,3.484279,9.730699,9.147608,3.798682,3.266935,-6.529899,-4.509149,1.317861,1.220404,-9.918563,0.489575,-2.106432,-4.335080,8.212153],[5.621393,4.081987,6.838460,-3.441511,6.907300,2.105470,-6.809777,-0.317595,-8.963286,-9.139437,9.082119,8.670343,3.512254,-5.288980,6.650312],[-7.910033,0.413882,4.020962,-6.946005,9.164312,1.654228,0.424632,-6.395211,-9.060388,7.163062,3.517991,8.435124,2.622587,-3.226781,4.240251],[-8.632014,-9.913140,7.464093,-7.653196,-8.862684,6.719284,7.887866,4.286688,-4.105594,-7.549884,-7.486213,8.431842,-8.849701,-2.572267,-9.404228],[-8.106122,-4.643406,-5.427195,-3.875268,1.075676,7.523020,-7.301827,5.229525,-7.750751,-0.622348,3.870137,-6.195639,-8.426884,-0.426071,2.326898],[-6.247422,0.208047,4.763839,-7.525523,-0.350843,-7.571563,-7.195475,-2.291390,-3.067547,-8.691883,-6.743101,6.526164,-6.752228,2.663343,-1.779579],[2.296286,1.767705,2.316390,-6.603347,-0.458550,-2.296582,-0.987547,-6.443212,-2.578992,-7.091105,2.082396,3.394619,6.655684,-4.310024,-0.742540]],[[-2.376887,-5.810116,-6.057269,-8.828794,3.433370,1.030630,3.475313,2.950289,1.555911,-8.732052,-7.526800,-7.149898,-9.234557,1.794293,-6.690611],[3.851808,5.207591,-6.855270,-7.676152,-2.833834,-2.291331,8.601446,-3.566050,5.611664,-3.671068,4.611112,8.943907,-0.987159,0.287422,-6.719043],[2.528463,-4.777330,4.979209,-5.728324,4.532678,-0.494280,8.884692,3.433704,-6.441396,3.384653,-6.052210,0.577961,-3.246782,8.602081,4.221878],[4.367561,-2.402497,4.869733,2.973733,0.793863,-5.136981,-7.227591,5.735625,0.331167,-0.335316,-0.259985,5.111496,-9.899946,-5.176018,-3.944905],[1.597795,-5.612315,3.597266,-2.450720,-3.746204,-5.666082,3.898255,-0.647202,-2.889111,-0.316004,-2.867870,-0.678437,-4.349591,6.370796,-1.487346],[-9.409759,1.054401,4.168757,-1.208380,6.828021,9.922341,8.808535,-3.525947,1.407990,-0.573976,8.382457,4.274697,-7.112025,-8.922216,-0.833533],[1.014271,3.681217,6.315540,-2.603819,-4.539439,-8.376960,6.925176,-4.008844,0.798432,-0.015881,1.954112,-3.731402,0.201057,-3.981335,-1.162519],[3.286798,5.606087,6.429193,0.664179,-5.913898,0.625340,-1.984871,-2.568397,3.345265,-6.970120,8.399325,2.344168,-0.957930,2.329231,2.408054],[7.291250,0.937118,9.663425,-5.376557,-6.938054,-6.747833,1.210014,-3.291600,8.309461,-8.714749,-1.305691,7.560695,1.393680,-7.125045,-3.432634],[2.874489,-2.013084,-0.948091,2.841654,9.795339,8.533386,0.409666,-8.041635,-0.282363,2.568581,1.267044,0.065287,-4.064680,9.102341,1.067039],[-4.943853,6.892972,5.106692,-7.994420,-5.382169,3.573816,7.504427,4.375540,-5.747338,4.519233,-9.722763,0.601629,1.066986,-0.822155,5.927532],[-2.772284,-8.145176,-2.293292,4.098909,-1.563220,-1.757308,5.613439,3.681798,6.460114,-0.966530,2.130112,-0.895571,-4.045896,-5.520889,-1.704392],[-1.878611,2.218589,-4.193340,4.877637,-6.589490,-0.607580,6.737169,-2.182675,-4.554035,-0.710937,-1.844560,5.093237,4.534338,-7.768539,-0.468327],[0.518257,9.695584,-2.832036,-7.697371,3.334768,0.848893,-3.736796,7.385048,2.927836,-1.034940,9.386901,-3.841352,5.367671,-5.576493,4.434526],[-9.726938,-3.345353,-9.346196,-9.104879,-2.898599,4.660906,6.603684,-6.827106,3.300948,-1.820912,8.685858,-1.731806,-4.101549,3.664483,-5.240475],[4.657009,9.381928,-1.102259,-5.253695,0.297335,4.693681,0.582203,-8.050378,3.238064,5.981341,8.362062,5.221951,-9.320952,-7.446755,3.204027]],[[2.832442,3.102301,-0.032701,-1.974254,-5.882918,2.633087,-5.769537,-6.355969,-0.298315,-5.850556,4.664730,-9.273401,-2.738573,-5.744210,8.082236],[8.923492,5.702987,1.089669,-0.335327,-8.574528,7.644188,-4.473879,-9.964369,-1.128656,6.470950,9.442133,2.176593,1.198494,-3.910234,-4.474854],[0.093315,-0.473055,-6.017217,-7.808371,8.344364,-9.160506,-9.994967,8.985825,1.094704,7.677446,-4.157233,-9.054699,6.866963,6.435527,7.052207],[0.714087,1.390435,3.414149,9.300030,3.810094,0.180629,-2.472779,-5.299988,-6.090155,1.885773,-7.551278,-6.355984,1.268087,2.577346,-9.395450],[-4.400528,1.832833,7.803416,-5.107179,1.554337,-6.365337,4.910234,-4.578894,-2.170843,2.531994,6.304967,7.235701,-5.707861,3.124666,-0.932894],[4.334695,5.548378,-8.499907,9.053266,4.367218,-6.303159,4.335537,-7.357966,-3.206925,1.873438,7.246451,9.964358,-8.378999,5.085272,1.306772],[6.077376,4.941818,-2.525209,-2.563352,-6.967237,-0.850777,4.276631,-9.747254,0.133015,-2.938202,-7.778721,4.726654,-2.330696,-7.541573,4.617604],[0.215773,-0.904679,3.539903,4.360856,-0.166137,-6.512737,-7.686389,6.215622,2.874720,5.341706,0.111568,4.261773,-0.135056,-7.515817,-4.824893],[-5.154716,7.813687,-5.336451,3.432466,-8.105464,0.715378,-1.681334,-9.474759,-9.507681,3.600937,6.118377,8.546684,1.934140,-2.931878,-5.194526],[-9.639864,5.804099,4.008231,-4.620004,8.933956,7.539346,3.983876,-1.848629,4.149332,-7.244596,6.255545,7.213482,-7.381605,-8.503437,-2.225711],[4.080513,6.400574,-5.407346,-9.413027,-4.640442,8.785368,-7.404827,9.458344,-6.757140,2.257355,0.383274,-8.959455,-2.068034,-2.745078,-0.082915],[0.146393,5.146873,-4.937120,-0.214828,-1.814356,-4.898568,-6.483417,1.370900,3.174896,-2.405225,-5.488673,7.893980,-3.743848,9.636196,-4.365555],[7.566985,-5.240738,5.083223,0.283021,8.625045,-4.188956,2.936749,4.901130,-6.509637,1.181436,5.173014,9.530566,-5.432213,-1.942149,-0.692959],[3.198704,6.982170,-8.317334,-0.400083,-8.841819,5.388910,1.324598,3.886763,3.629173,-9.250919,-8.895773,-1.221833,-6.351271,5.111658,6.125529],[-6.505733,1.182970,-8.728617,-4.551242,6.013277,-3.188556,9.271732,-2.929954,-4.372922,-1.549983,-1.198778,8.509649,-0.013744,8.127528,-1.769998],[2.050074,-7.404143,-9.908343,-9.064872,6.590142,5.514615,0.499014,-8.133383,6.847374,2.704836,5.260192,-4.953688,2.966776,-2.106600,-4.843447]],[[8.831203,0.716299,3.210251,-9.655978,-3.660500,1.341783,7.065989,-4.046333,-9.183725,2.298252,-3.086711,3.369845,6.023496,5.605541,-9.175781],[-1.729908,-1.188477,1.181109,-8.126570,6.291435,1.992745,-2.386592,3.436278,-3.554413,2.442756,-5.967775,-9.096580,-8.771528,-0.400700,-1.797181],[-1.491442,-9.351843,-0.136357,-9.939498,5.347386,-5.304577,-8.554838,4.490392,8.363047,-4.241372,0.423208,-4.743716,-2.071752,7.891526,3.181109],[5.897132,0.909256,-9.340322,7.082252,-1.866495,-3.379357,-7.244086,9.619739,7.668650,8.495815,7.268291,-0.482668,2.346434,8.021761,4.503794],[-4.272189,-1.080251,-1.568135,5.553203,9.170944,-4.075628,-9.510720,-6.103521,-1.104272,0.454662,5.620924,9.196226,-3.901008,3.745319,4.090530],[-1.353773,9.861307,6.607111,5.277800,-1.356623,-0.096887,1.227109,1.716919,0.319880,7.328238,2.057107,6.235254,-6.499976,5.545611,8.088128],[-1.640358,-3.765435,-2.715790,6.432654,9.717552,-7.454620,-2.929600,-0.836078,-7.639112,4.450268,-5.028742,-4.821068,3.567532,-0.838598,-4.351077],[-6.816053,6.241218,6.696421,-9.215274,-9.410508,-1.697853,-0.359343,-7.295061,-6.021212,-6.006220,-2.942238,-8.502662,-7.026091,3.585339,7.374554],[7.099336,-7.088467,-1.309068,-2.818308,-5.822566,-6.833716,-8.073993,6.714763,-0.057758,6.272149,9.021276,9.385848,-9.338100,-0.650065,-5.493831],[-9.933593,9.438141,0.174757,-3.704738,-6.129446,-4.913387,4.349008,0.933721,1.024661,-5.335928,-9.581995,-8.288934,9.411014,-1.312632,-1.991320],[6.371760,-4.885624,1.619130,1.879962,1.002421,-2.455482,-2.493914,-0.617634,-6.983164,9.604946,-9.241822,-1.599895,-6.162071,-3.184834,3.744461],[5.481167,0.030297,4.579288,7.667228,-3.978252,9.220408,-8.475244,-4.213887,4.765915,-0.018443,5.330189,4.801472,0.707512,1.697886,-3.362552],[-9.858102,-6.540033,5.981960,-1.084232,-2.505449,3.804240,0.886336,6.777626,4.624317,-6.317817,-5.835537,-5.241537,-2.147626,9.653898,6.182382],[-5.272789,9.125916,3.598952,7.271047,-5.215270,-4.730457,2.534114,3.481568,5.845980,6.065633,7.443194,6.360854,7.993020,4.183089,-7.810304],[-1.970771,8.662169,0.022640,-5.659231,-4.451135,-9.391870,0.485231,5.972770,-5.957673,2.118842,-8.943262,2.086428,-1.948616,2.260169,6.419139],[4.175216,7.227195,-5.257980,4.404429,7.084783,8.307676,6.219052,0.410479,7.183316,6.276013,8.870361,0.895690,-6.510589,-2.876291,-7.221926]],[[0.172479,8.614281,-2.791943,8.954016,2.938310,8.759747,-3.957199,7.244369,5.121854,1.150145,4.330842,6.853272,-1.861250,-1.071544,5.176188],[-1.754892,-7.336731,9.138594,3.310854,9.166087,0.261749,2.203699,6.174935,7.382346,-4.565953,2.139228,-1.390273,-2.144707,-2.789432,9.648008],[1.847835,-4.940877,0.524455,-9.297044,-7.327718,3.497335,9.750976,4.399939,0.001214,3.647649,-1.765762,5.723621,1.254092,1.431159,0.673015],[-4.779088,-6.516502,-7.113197,-4.398876,4.881745,-6.782607,3.565189,9.193168,-9.769114,3.656450,-1.885485,2.889831,-2.018176,-3.128150,-4.128898],[-9.772209,-8.199567,-4.117723,3.943682,-6.509103,5.769579,9.208310,-6.054988,-4.426642,-1.372047,-3.587042,9.963151,-6.652840,2.703884,5.619633],[-2.379250,-4.745903,-0.195995,-2.400422,6.945472,-5.662693,8.605430,6.509951,6.659264,9.245318,-8.656091,-3.320923,0.055192,1.981926,1.857546],[-6.797474,0.115658,7.204522,7.281682,7.087735,-1.754791,-9.114357,6.450871,2.634626,1.207955,-8.787458,-5.459053,8.394956,-6.023202,-5.207134],[6.746777,1.882655,1.962240,-6.764876,-0.592843,-9.309745,-9.396615,3.389627,-3.642917,-5.843691,5.677225,4.908121,4.162236,9.650517,-2.109213],[-5.177816,-8.510638,-7.957919,-8.151702,9.617011,-6.436949,9.186676,-3.077514,-8.997795,9.000676,-7.758958,-6.815093,-8.089622,-9.526575,2.953965],[-5.829073,-8.421671,2.653566,-9.738239,4.910755,2.407699,8.103806,-6.157389,2.641037,0.665199,4.947519,3.684196,7.606311,-7.088002,2.448857],[-4.836875,0.014854,-5.971772,6.506261,-1.786349,-2.330638,-5.856696,-8.394862,5.186549,-6.117856,-0.932673,-8.140557,7.783878,6.775392,8.694234],[4.683156,-2.877986,-9.810867,0.515400,-5.331780,5.039823,9.267591,-3.631191,-7.927956,7.526818,-7.754032,0.525144,5.255252,7.453234,-5.751775],[9.584136,-1.244649,-3.482353,4.144768,7.685241,9.399930,-3.489617,-0.322832,-5.698041,2.423061,2.144970,2.044306,-9.489350,2.801965,3.365787],[5.716797,8.639621,6.583611,-6.532151,-0.673163,-7.420807,-1.211769,-6.231589,9.011839,-1.942170,3.465968,4.558821,-2.594665,3.710184,2.920952],[2.252242,-4.244381,-0.988213,-8.986294,-7.568459,-7.232988,-8.321068,7.647430,-4.029686,9.456459,3.313519,-6.973971,5.122893,9.597853,4.584341],[0.215732,5.872557,3.869305,7.187964,-9.275924,-2.457253,-7.060490,-3.149869,-9.165031,9.238842,1.721649,-0.907272,4.166873,-7.335444,-2.320884]],[[1.233053,-0.049485,9.095247,-0.566534,6.927057,-4.054362,-0.355828,-8.548249,5.660554,6.978172,-0.309785,4.695292,-0.691835,-8.181363,0.753768],[-1.080126,-5.231103,7.474037,9.834457,1.561310,5.602047,-5.470635,-9.884292,-2.168468,4.776827,-8.158601,-4.201695,-5.921001,-9.196569,0.706704],[-0.466568,-1.267010,-3.052757,-4.448654,-8.687822,-9.641768,-8.233167,6.208705,8.166889,-7.504502,0.079320,-3.440558,-1.199252,-8.752987,0.590833],[3.823597,-3.919837,-9.878219,0.932293,-4.843917,-0.260804,4.637115,3.979440,-0.731235,-4.854927,-6.680714,5.610381,7.192746,8.354083,0.533795],[1.169263,-3.086125,-5.777243,-0.460666,-6.263641,9.677923,1.788805,2.921952,2.273308,7.833741,-1.299956,5.036023,-7.317152,4.347281,5.414817],[-8.683043,9.104306,-8.998283,-7.861751,-8.322341,6.433648,0.350194,-3.736677,7.720493,-7.253779,-7.580809,-8.445423,6.872548,-3.760202,5.781530],[9.366365,2.843689,-9.839682,-4.114214,-0.048250,9.016195,8.629697,1.870617,1.812931,1.370132,8.501261,-3.491297,-0.514878,1.763738,0.341573],[-2.716622,-6.103523,8.875405,1.770477,4.541031,-2.054703,7.383151,-6.407824,-0.447708,7.226723,5.518101,6.903324,5.190988,2.520450,-0.622000],[0.767300,4.646431,-5.486183,-1.044143,0.065829,-3.995883,7.730420,5.888384,-3.580628,2.880785,5.209953,-5.595384,5.662691,-9.855439,-7.578212],[1.500633,2.872770,-3.161758,7.762704,1.931623,-5.891323,7.015966,7.232080,3.667830,-1.043300,-9.797048,-1.688094,-9.129306,-3.173742,-2.798627],[8.500735,-7.422889,2.435374,4.871187,3.749881,1.711970,-2.879862,0.387030,6.935660,8.323092,-5.356122,7.503564,-5.805711,-7.782310,9.961233],[-7.382878,-6.126622,7.099594,7.284409,-4.636023,-3.813541,-6.840422,-1.377266,-9.146453,1.005969,5.368117,8.823742,-3.647651,-9.618559,-0.882045],[3.144164,7.820439,0.736602,8.320832,0.924474,-4.578609,7.367276,-0.273034,-8.897886,3.532724,-5.839175,5.407450,-2.500884,3.197531,-4.533048],[-8.582579,-7.341069,1.734400,-1.421559,-7.650006,0.001486,4.826939,-5.106375,-8.802346,4.769712,-4.938252,2.267599,7.414098,5.588151,-0.428458],[3.421477,8.394761,-2.058152,5.281752,-9.022569,-3.304197,-4.678599,-5.360475,3.160487,-6.430799,4.743553,-7.421120,-8.964200,-9.377046,8.302091],[-2.512239,2.698185,-2.756848,-9.060910,-4.234973,-2.460467,-7.688737,0.193246,9.267376,-2.190332,0.274467,-0.758800,-7.765795,2.223529,-5.586700]],[[3.075893,7.797442,-5.538354,6.718227,-4.668579,3.733088,-5.770412,4.157119,5.989020,5.764043,-7.682502,2.794261,-5.469563,-2.362012,-1.740336],[-4.608366,1.268150,-4.313759,-9.569349,-9.984282,0.427970,7.345264,-6.443168,7.231103,2.499826,7.550891,4.164616,-1.635650,-5.503162,-5.950303],[6.298195,-2.354719,-7.539098,-2.970733,-7.895307,2.908587,3.751696,-6.472419,-9.406471,4.532592,-1.944672,6.360793,7.663566,6.246041,-1.990666],[-7.175434,6.637242,-9.752547,9.032709,-0.751953,-7.914839,9.118964,-7.468163,7.915665,-5.189344,-6.525371,3.488768,-6.484434,3.183460,-0.621492],[2.766532,4.560363,8.243064,7.103159,-7.777807,1.516678,1.478701,-5.859694,-7.817126,-3.718379,-4.253641,8.305991,2.824961,-9.114483,2.909975],[-2.377080,9.920501,1.541238,-3.481412,2.717710,-9.471623,5.327237,-7.979793,2.592102,7.035217,1.513489,-8.885076,5.906210,-9.112912,-2.495184],[-1.482473,5.105593,-5.665008,-5.312610,8.032141,-8.723048,-3.421633,9.992255,5.558065,2.151812,1.031149,3.605533,9.830028,6.776809,-6.970636],[-9.035398,-5.979860,4.663509,-8.324239,3.068506,9.588027,-4.799368,8.542951,-9.986327,-5.686857,3.769600,-2.221562,-5.773548,3.585753,-8.311377],[5.190584,-7.326472,-5.085241,3.177760,-6.118471,-3.623181,-6.441187,8.396395,-3.816871,-3.083153,-3.572919,-6.984228,-1.774334,-1.646308,-3.208396],[-3.669897,6.533154,-7.732083,-6.058808,7.130269,-0.951281,-5.383985,-0.443404,8.762024,-6.441762,6.804776,6.517907,0.143797,-8.409923,-4.017499],[-5.977930,4.862602,6.817282,1.901615,0.387262,-2.054175,-3.164157,-2.179056,4.116004,-9.811458,2.557031,-3.817089,5.428067,7.335237,1.095323],[9.465709,-8.276804,-3.026122,-7.106913,6.284177,-6.334732,1.922035,-5.298877,9.120899,5.847209,3.736144,6.022846,-5.072514,-0.059455,4.382454],[9.176667,0.363673,9.710645,9.777960,-4.483425,9.721377,8.911304,2.657694,-4.710980,9.478671,-6.274055,-8.086000,-1.882441,7.228694,-1.079138],[-2.711284,3.678785,1.796970,0.646873,-8.579460,6.477556,-6.299258,-4.780458,5.428160,-0.989307,0.141973,2.010972,1.341278,-9.186285,-6.659545],[3.436526,-9.550086,2.554867,2.391474,-1.937846,-5.241386,1.635370,-7.061102,-7.051463,-5.427814,-7.912260,-5.135072,4.264425,8.317703,-5.066919],[8.918601,4.539484,-3.427355,0.229250,5.627195,3.626980,-9.854884,1.921090,-6.247440,-7.165807,-4.460208,-5.588333,-2.634846,-9.409584,0.834772]],[[-6.366722,-3.843895,-4.088272,-8.142633,-8.799246,-5.257070,7.904347,-1.204814,1.283129,-8.606436,9.141993,0.593112,3.646582,-7.890487,2.095123],[-9.095428,-8.068252,9.023324,0.336728,-0.827641,-7.654962,1.106475,6.294579,-2.471041,5.306826,-3.206087,6.116164,-8.985913,-5.533713,5.538436],[4.701051,5.112727,-8.596460,-1.382315,-8.557529,-3.991078,0.299177,-8.742702,4.093786,-5.761014,1.145165,-4.950488,-0.403145,-3.729917,8.247050],[-8.602167,5.877340,-6.481339,7.739228,-0.887182,5.422714,-3.790444,-3.394327,-4.498000,4.043720,-3.304156,8.792656,1.721273,-6.177826,-1.207130],[2.228864,-5.584095,-0.526793,5.326088,1.747415,7.999350,-8.286364,-6.005353,-9.210723,-9.382014,0.799915,3.060459,2.200707,-9.482239,-7.170424],[3.674211,4.420287,-5.968985,-9.658700,4.669063,0.439301,4.637678,-3.129989,9.617767,-3.034292,-0.469344,-4.052031,-3.155438,7.890281,0.710218],[-6.553603,4.745364,-7.975442,4.657825,1.317059,8.396571,-5.377948,-9.210515,-4.501014,6.119492,-1.792410,-1.841341,9.025448,-3.882639,5.949673],[-7.401844,3.116620,5.571448,-9.805393,-5.758331,-0.995813,-6.815486,-1.720488,1.888231,-0.131112,3.906051,6.615677,-8.623859,4.597321,1.084557],[-2.241328,-5.824311,3.635563,-8.328667,-0.281704,-5.834442,-5.242029,9.100113,2.042853,9.220475,-3.053138,-5.569312,-7.401089,-4.874819,-8.330660],[-5.479657,-2.142957,-3.830331,-6.865799,3.239714,6.238357,7.850720,-2.081551,1.385541,-6.632105,-7.986887,6.563749,-7.945919,5.149551,2.312142],[-0.875903,-1.537017,-8.509003,-5.265808,6.306781,-3.368962,6.794631,-4.414137,-1.062066,-2.315371,-1.869933,6.659698,7.191869,4.113029,7.341938],[-4.189699,-6.520322,-7.233843,8.145436,-3.401384,-2.002048,-5.298548,-3.520415,8.032708,-7.779164,8.831514,-4.461532,-2.815287,-9.207131,-9.152355],[7.896324,1.782369,-8.557065,-8.280958,7.355825,-9.651285,1.611387,8.454030,-1.259222,2.693088,-5.568123,7.426976,7.275786,9.463126,-3.848258],[4.861216,-0.096760,6.268654,-8.672383,1.255133,-0.986366,1.674543,-2.696894,-9.267171,-5.361536,1.672394,-9.247108,6.575540,-0.569418,-2.573470],[8.151318,-6.408984,-0.091276,-7.084526,-5.860359,-7.811869,6.958724,-8.203991,4.740060,-3.207117,-7.283554,-1.576304,2.028971,0.643634,-5.578527],[-3.365708,9.036552,-2.904277,-4.042853,1.660893,-0.534106,-0.210656,6.466654,5.768145,5.927408,-4.147566,4.049920,-7.551212,1.528645,-5.334037]],[[4.340859,5.558664,-4.995911,5.383814,-6.268834,8.276382,-6.350066,-9.051903,-8.117609,-5.401144,-4.245107,-2.217634,-0.272428,-1.037868,-3.863641],[7.823193,7.572582,-0.562860,-3.162855,-3.111606,-3.058947,1.476994,9.079326,4.425888,0.854242,5.336868,-9.624648,7.850665,9.818335,-4.276594],[5.325396,2.801887,-6.546942,-8.465352,6.165906,8.407881,-1.302751,2.667902,2.704485,3.541445,-8.834501,-2.852936,-0.177088,1.385513,9.700588],[2.248178,-7.600031,9.350734,5.634754,3.461901,-1.026735,-4.456744,-3.639084,0.383414,-1.489337,-7.629599,2.755282,-9.521008,0.444352,6.364013],[9.702075,1.947310,-6.227981,0.834086,-9.227184,-9.225764,2.797911,7.530288,-3.070329,0.126093,1.094132,-3.395128,-8.066539,1.208718,-3.189802],[-7.279761,1.914710,5.817017,-8.713584,2.571278,-4.164621,-6.601633,8.269436,8.268299,-8.887785,-8.402246,-2.176140,-3.461359,4.719354,-5.875899],[9.425101,-7.358085,-2.484242,-9.721577,-2.757431,1.557559,1.655570,-8.123061,8.422955,0.117052,4.051052,-9.467557,-0.225686,-9.696667,-9.977230],[8.859695,-2.974160,-5.155493,-2.210966,1.848936,7.862737,9.327739,-8.064270,4.119848,0.758563,8.811743,-7.909661,-2.460423,4.315304,3.984789],[-4.968412,5.687521,-3.059387,4.057474,-9.354678,1.092333,-1.509938,-6.586795,-0.834115,-1.204568,-3.662762,-6.261394,2.701548,3.954411,-7.735343],[-7.432278,-0.597582,2.974986,-5.148693,7.913423,4.552901,-0.303315,6.028263,1.008590,-0.036966,9.558845,8.559100,8.489376,-1.833062,7.849983],[5.104505,5.332717,4.608051,-6.903657,-8.796830,-2.722244,-5.576345,7.151565,-0.719460,-1.178388,-4.177359,2.067415,0.814761,4.842699,-1.060991],[-4.827898,-6.007996,3.511002,-5.826247,5.202768,5.767739,9.090603,-2.770907,2.776161,3.326366,5.515574,3.919012,9.013971,-3.190257,-3.920792],[-8.135191,-2.163107,5.958289,-3.792081,-7.790683,-5.755719,-4.156062,3.136354,-3.450537,6.647564,-9.280122,9.821923,4.062081,4.243485,9.457456],[-1.501052,-2.896143,5.559901,-8.941422,-6.374158,0.987132,-3.093521,-5.824716,1.614759,-1.376321,-3.822520,1.426667,-6.026153,-7.968430,-9.499118],[-9.978043,9.276255,-2.214948,-2.566115,3.614921,5.750357,5.012003,-3.936120,1.931840,-8.009076,-9.338238,0.909043,-4.541026,-3.280172,8.680663],[3.820332,-0.862229,-0.113816,1.181633,2.636859,3.706673,8.632485,8.384688,-2.550293,9.224689,-9.738807,3.741588,-7.258292,-1.115462,5.432106]],[[9.362380,3.800177,0.090957,-5.858733,-1.204321,6.520115,-6.477746,-9.504395,-1.049918,2.393416,1.346555,3.867835,4.808282,-7.965782,8.402543],[1.573964,-7.198609,-4.865369,-8.521074,-5.664343,-0.048891,9.480607,8.948368,-1.604345,-2.090797,1.936727,-6.206313,5.782385,-4.967144,3.853929],[2.575401,3.460327,6.404822,6.580492,-1.222460,-3.864497,-8.252811,-6.588618,8.004240,0.514176,-6.077181,7.583997,-0.300677,-8.763200,-2.179681],[-7.877648,-3.554463,-3.532914,6.288179,1.442453,9.554162,-9.694752,6.851549,6.888396,-1.192904,9.759428,-4.720760,5.103953,9.049542,1.859628],[3.782451,0.389815,0.128109,7.722158,8.866853,6.381446,-3.498156,-1.439346,-1.105456,-8.074667,4.147021,3.476782,-9.558830,-9.066069,-6.150888],[9.185755,7.110459,9.403210,-9.401053,3.581093,3.109615,7.531304,-0.527278,-3.653936,5.107376,3.152646,-4.160318,-2.277064,2.292419,-7.525837],[4.505915,3.544569,-1.154175,5.510092,2.521088,-0.341246,0.241158,-8.041265,-9.268781,-9.598646,0.393425,-5.835407,-4.403930,-9.160108,6.046767],[2.129552,4.008808,8.923028,1.275650,-7.315482,2.638309,-6.448292,-7.094099,-1.393022,2.950193,4.240558,7.074691,-1.517618,-0.585477,1.045593],[5.886188,-0.594359,-7.218503,-4.689804,1.502447,-7.804698,5.635824,2.545382,-8.585221,-4.712978,7.697579,-9.150414,6.384978,-5.379388,-6.747457],[5.259663,0.469566,-6.968170,1.750173,7.446134,7.709951,9.355381,-1.589390,6.378984,7.729951,-2.780007,4.687395,1.101539,3.771772,-1.842741],[0.780905,8.329642,-2.662431,-6.826060,-0.993640,-5.314091,-0.769522,7.616839,-4.063766,4.431983,-3.303383,-8.563146,-8.253478,6.850564,-1.842109],[9.668635,8.808283,-5.710536,-3.513446,-4.069647,-4.750172,3.971646,-1.142585,-8.963091,0.439405,-4.032750,2.041079,8.789143,-5.332119,-8.027587],[-8.824159,0.173726,-0.115388,3.966874,-0.971501,-0.932161,-0.317761,1.424027,-9.187583,-0.991860,8.811461,4.180155,2.884610,4.008501,9.502999],[-5.502637,4.377706,-0.885059,6.407322,6.909870,3.456044,4.411864,8.862850,-1.532899,-9.413760,6.887468,-7.005299,-9.903284,1.372911,7.192248],[4.372820,-6.042627,6.822533,8.926354,6.789214,3.809703,-3.200367,-2.868513,9.590029,0.558445,6.614950,-7.682607,4.868066,-6.008139,-8.790604],[-5.907413,7.412017,-9.544592,1.223781,-5.152312,-2.469627,5.169501,-3.927584,-1.703749,-5.133288,4.881746,-3.177409,8.708576,-1.857906,-1.806668]],[[-3.969175,8.905406,-7.049456,-4.849162,3.905896,-0.527168,-8.913130,-6.766462,8.156033,9.971103,-4.194673,-8.582210,-0.616008,-2.766928,0.974949],[9.353767,8.044737,8.708778,-9.182888,2.797405,-6.902218,-0.205096,8.741411,1.358880,5.646805,7.993248,1.269238,0.024974,0.775219,7.336558],[-5.615716,-1.305154,5.294804,8.632361,-2.203210,7.857802,-7.348474,0.897134,-4.529673,4.555275,4.167520,2.440299,-5.672009,-3.234874,-6.780168],[-0.415801,-7.342691,2.721486,-1.794112,-5.586621,3.383140,-7.657057,1.012783,-5.090511,-2.444457,9.269663,-8.723747,1.383965,0.605726,-3.345239],[6.430833,5.797406,-7.937978,3.679397,7.759594,5.043201,3.478159,1.015588,0.085569,-8.516742,0.242211,-3.424493,-2.942814,-0.449266,2.678184],[3.473932,2.173099,9.707444,9.339274,-3.261040,-0.498724,-4.382587,9.746435,-9.227047,6.746280,6.657755,-1.283560,-8.678488,7.300802,1.582389],[3.881358,3.635838,9.841508,-4.012777,1.757016,0.507721,-0.959949,1.692117,6.548481,4.963932,-0.200584,4.432863,-9.740421,8.588957,-9.167003],[-0.758816,8.539234,-5.708544,-8.367191,-9.595009,-8.285455,2.788800,1.017773,-3.888871,-6.617069,2.487987,-6.319986,-4.588905,-6.457726,-3.964524],[-6.871422,-5.982497,-2.710417,-6.338318,-8.873317,-1.170286,-6.429679,3.704593,-2.365480,1.343845,6.504016,2.934505,3.813019,-2.520416,3.231872],[3.974874,-6.896339,-6.440950,-6.377302,0.124217,1.590101,8.993854,-0.332425,9.235961,0.440890,5.089218,5.587281,-4.034009,-8.737089,-8.343092],[-2.875021,8.210477,0.905166,1.549024,-2.976332,-5.252268,4.718028,-9.706819,7.641555,-8.448531,-7.488534,8.156382,8.511536,-6.876064,2.801775],[6.892373,-3.503635,-8.021716,-5.247900,-6.176354,-6.386444,-6.275614,-4.348241,1.629727,-5.794604,-0.736680,-4.017038,-8.173504,-3.202821,9.102156],[4.454681,6.728276,-8.513139,-6.084316,5.117505,4.478922,7.925848,8.864117,-3.221532,7.484894,9.792028,1.521557,-6.338612,0.136423,6.706591],[-6.530517,7.227281,-1.831203,0.487932,1.763909,9.497989,-9.349265,-9.216393,7.198372,8.548023,-9.646852,-7.125232,-1.076455,8.701845,1.670458],[-9.031477,-2.745234,5.371170,3.103556,7.532112,-5.822205,-6.000891,4.432020,-4.663177,8.137008,-9.429210,-9.196649,-1.599332,3.974795,-0.558636],[-0.512251,-1.338505,9.668617,7.431898,-9.473740,7.379279,-7.223777,1.991749,-8.758142,-7.866634,8.079065,3.272935,5.036384,-4.458154,-4.563452]],[[-2.611834,-7.493914,3.564014,-9.668771,-6.880157,9.012328,5.991058,8.036113,5.458373,5.963078,-4.620199,-1.960228,-7.667888,1.900645,-3.057174],[-9.888490,-0.360237,9.812554,-0.830342,-0.490108,-5.461165,-9.207259,0.882014,9.849422,7.717446,-6.253899,9.679536,-0.685118,7.617791,2.040147],[8.174437,-8.251472,-8.307649,1.549013,8.908102,2.393082,7.418931,-5.110069,-1.895995,2.456741,-4.777199,7.484996,6.635523,8.545439,4.817182],[-2.401756,-8.532443,-4.281481,0.410335,4.995769,1.249080,-1.864675,-6.146576,-9.639344,-4.504068,8.224489,6.507165,3.519696,-0.089387,6.675183],[8.697603,-1.145342,-9.587111,-5.015698,-7.894539,3.487077,-6.149966,-1.630589,-1.522074,7.245443,-9.115393,0.752323,0.249592,-4.821403,3.598815],[9.650902,-2.252184,1.867304,-2.128918,-8.679471,0.793720,1.735928,7.441853,2.549307,-4.259040,9.769906,9.586067,-5.292833,5.668819,-6.182271],[2.180646,1.325595,3.525831,-8.960641,-3.655764,-1.114311,-6.578924,6.135998,4.977912,4.936267,-5.503057,-7.654105,9.100105,-7.277899,-4.067117],[-5.702959,4.972746,5.847996,-0.126564,-8.495207,-7.202187,-6.559390,-5.218055,-0.190274,-7.195403,4.763367,-2.025115,-1.120768,6.275533,-2.773421],[8.152198,3.012186,-4.015813,7.902306,-0.291788,9.268365,-1.548223,-1.153965,-4.603152,-9.913846,-0.042614,9.954325,-9.164733,8.046724,-9.491801],[7.701884,-4.681869,-0.283020,7.333412,5.575330,-3.395524,-2.841239,-4.560431,3.877928,1.522388,-3.382247,-7.192308,7.542387,6.013199,-8.479657],[-8.617952,-9.622576,-2.562634,-2.094656,-5.864617,6.385639,-5.927064,-9.073037,-2.620309,4.721494,6.191905,-8.718460,9.311792,-4.332113,-7.138592],[3.467775,-4.660182,1.795348,-4.600839,-6.374633,8.545779,9.921478,0.071327,-3.833749,-0.087903,-6.412069,7.343021,0.743348,-5.645167,-5.070120],[-7.984863,9.356316,1.452671,4.889851,-4.183425,-7.381694,8.753220,-3.416191,6.353122,8.181671,-2.675283,-9.407667,-7.258877,1.726424,2.156647],[6.460626,2.441584,4.558098,1.324962,-9.484060,-4.821256,2.573499,1.780554,2.701104,-8.681371,-2.450734,-2.667810,5.932577,-5.237795,2.272357],[-9.656776,9.298699,0.915208,-3.068285,3.756355,5.457574,9.308773,2.524804,-8.564205,-9.090460,6.208966,5.302134,4.252791,-6.868084,3.191836],[5.238722,-1.622221,3.963643,0.156061,-8.806152,4.001326,9.669585,-2.622796,7.493753,7.486804,-7.283711,-4.171158,-8.790731,-9.901966,2.092692]]], dtype = "float64")#candidate|5300|(15, 16, 15)|const|float64
bop_5301 = relay.floor_mod(var_5299.astype('float64'), const_5300.astype('float64')) # shape=(15, 16, 15)
func_3963_call = mod.get_global_var('func_3963')
func_3969_call = mutated_mod.get_global_var('func_3969')
const_5314 = relay.const([[False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True],[True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False]], dtype = "bool")#candidate|5314|(2, 396)|const|bool
var_5315 = relay.var("var_5315", dtype = "float32", shape = (780,))#candidate|5315|(780,)|var|float32
var_5316 = relay.var("var_5316", dtype = "float64", shape = (1638,))#candidate|5316|(1638,)|var|float64
call_5313 = relay.TupleGetItem(func_3963_call(relay.reshape(const_5314.astype('bool'), [11, 12, 6]), relay.reshape(const_5314.astype('bool'), [11, 12, 6]), relay.reshape(var_5315.astype('float32'), [780,]), relay.reshape(var_5316.astype('float64'), [1638, 1]), ), 4)
call_5317 = relay.TupleGetItem(func_3969_call(relay.reshape(const_5314.astype('bool'), [11, 12, 6]), relay.reshape(const_5314.astype('bool'), [11, 12, 6]), relay.reshape(var_5315.astype('float32'), [780,]), relay.reshape(var_5316.astype('float64'), [1638, 1]), ), 4)
bop_5331 = relay.minimum(var_5299.astype('uint32'), var_5315.astype('uint32')) # shape=(15, 16, 780)
uop_5334 = relay.cosh(var_5315.astype('float32')) # shape=(780,)
func_1298_call = mod.get_global_var('func_1298')
func_1302_call = mutated_mod.get_global_var('func_1302')
var_5339 = relay.var("var_5339", dtype = "float32", shape = (624,))#candidate|5339|(624,)|var|float32
var_5340 = relay.var("var_5340", dtype = "int64", shape = (140, 14))#candidate|5340|(140, 14)|var|int64
call_5338 = relay.TupleGetItem(func_1298_call(relay.reshape(var_5339.astype('float32'), [4, 12, 13]), relay.reshape(var_5340.astype('int64'), [1960,]), ), 1)
call_5341 = relay.TupleGetItem(func_1302_call(relay.reshape(var_5339.astype('float32'), [4, 12, 13]), relay.reshape(var_5340.astype('int64'), [1960,]), ), 1)
bop_5343 = relay.equal(call_5338.astype('bool'), var_5299.astype('bool')) # shape=(15, 16, 1960)
bop_5346 = relay.equal(call_5341.astype('bool'), var_5299.astype('bool')) # shape=(15, 16, 1960)
func_1656_call = mod.get_global_var('func_1656')
func_1658_call = mutated_mod.get_global_var('func_1658')
const_5352 = relay.const([[5.670155,-1.174847,4.596662,9.864044,2.632719,1.531390,5.856950,3.621745,-1.226864,0.683225,8.642725,-8.430937,6.757882,-4.617645,-4.383721,4.911476,4.098214,1.765767,9.677812,1.438282,-0.669995,8.762567,6.411724,1.632756,-7.322414,-9.679528,5.648596,-6.019987,-3.339746,6.512368,-8.167848,-4.556219,-3.726778,4.367119,9.328651,4.902763,2.909037,0.368496,4.738904,-9.403995,-2.182125,0.440130,-7.755384,-5.287527,-5.539301,4.911205,-1.641652,-6.577089,3.083454,-7.939070,9.477671,-8.456134,-4.087628,7.473184,-2.262244,7.626298,-5.565215,0.426480,-5.428768,0.059001,4.560051,5.304418,2.801962,-8.782661,4.766268,5.114419,-6.226237,-6.635327,7.019537,-5.369181,8.078588,-1.083901,9.868256,-4.726648,0.312095,-0.333479,-7.907669,-9.040348,-2.968560,6.995000,7.528925,-9.118829,-7.120462,-9.563716,-7.541098,-8.883458,-6.939622,-0.919240,-2.539106,6.833756,-9.733636,-9.167862,-9.098869,-1.578221,7.157436,-4.218261,-0.769454,5.821917,2.548532,7.144954,-7.948057,-4.541343,-6.157330,-6.947754,7.222264,9.591547,-8.557243,3.637322,-9.814741,2.737845,0.209408,5.787277,-0.958663,-2.963119,-6.325981,1.125742,2.088804,-7.453333,-6.060274,-4.224650,-0.780814,-1.185873,0.949412,9.658110,1.291359,-0.576703,1.557406,8.017835,-7.370461,4.257895,7.403628,2.976103]], dtype = "float64")#candidate|5352|(1, 132)|const|float64
call_5351 = relay.TupleGetItem(func_1656_call(relay.reshape(const_5352.astype('float64'), [11, 4, 3])), 2)
call_5353 = relay.TupleGetItem(func_1658_call(relay.reshape(const_5352.astype('float64'), [11, 4, 3])), 2)
func_3144_call = mod.get_global_var('func_3144')
func_3147_call = mutated_mod.get_global_var('func_3147')
const_5356 = relay.const([[-7,-3,5,-1,-3,-6,-9,-2,-4,5,10,-6,-3,-1],[-8,-7,7,-2,-10,-9,-3,1,-4,2,-8,3,9,8],[10,-9,6,5,-8,8,-7,-2,-4,2,-7,-7,-5,1],[-10,8,-2,-8,4,2,10,9,-8,8,7,-7,-8,7],[7,-7,-1,-8,-3,1,-2,7,-4,-9,-1,-2,1,-1],[6,-2,8,-1,-4,1,-5,-3,5,7,8,10,5,8],[-5,-4,-8,5,6,6,3,9,10,-5,4,2,9,3],[-8,-9,1,4,-10,9,3,5,-5,-5,8,9,3,-6],[-5,-6,2,-6,1,-6,8,-8,-3,8,9,2,-3,-9],[-2,9,-6,2,2,-2,-9,7,-4,-6,-8,-4,8,-4],[6,-7,10,8,3,-5,10,-2,-8,4,-4,10,7,-10],[-1,-7,-10,7,-2,-6,-7,-2,8,5,4,9,-4,-1],[2,-7,6,2,-10,-3,-4,-9,-10,7,6,-6,-3,-8],[4,9,1,-3,-10,10,-1,-2,4,3,2,-5,-2,-9],[-6,4,-8,-9,1,-3,-6,10,-8,10,4,9,5,-4],[-5,-6,2,2,-4,-7,5,-3,5,-6,-8,6,-4,-7],[8,-8,6,3,-3,-10,-8,-2,-8,-3,10,7,-10,9],[-9,2,8,10,3,4,8,5,-10,10,3,3,5,-1],[-3,6,7,-9,10,-10,1,-1,9,-9,-4,-9,4,-10],[9,3,-10,-4,-9,-3,-2,-1,9,4,-9,-9,3,10],[9,4,1,-2,6,-9,10,-3,-7,7,-8,5,5,-2],[1,4,4,-10,7,6,-9,-8,7,3,-6,9,3,-3],[8,-7,-1,-1,-2,2,2,-1,-4,-1,-2,6,-7,4],[-9,-10,-4,7,9,2,8,1,1,4,2,-8,-2,-2]], dtype = "uint16")#candidate|5356|(24, 14)|const|uint16
call_5355 = func_3144_call(relay.reshape(const_5356.astype('uint16'), [7, 8, 6]))
call_5357 = func_3144_call(relay.reshape(const_5356.astype('uint16'), [7, 8, 6]))
bop_5358 = relay.minimum(uop_5334.astype('uint32'), call_5313.astype('uint32')) # shape=(1638, 780)
bop_5361 = relay.minimum(uop_5334.astype('uint32'), call_5317.astype('uint32')) # shape=(1638, 780)
output = relay.Tuple([bop_5301,const_5314,var_5316,bop_5331,var_5339,var_5340,bop_5343,call_5351,const_5352,call_5355,const_5356,bop_5358,])
output2 = relay.Tuple([bop_5301,const_5314,var_5316,bop_5331,var_5339,var_5340,bop_5346,call_5353,const_5352,call_5357,const_5356,bop_5361,])
func_5366 = relay.Function([var_5299,var_5315,var_5316,var_5339,var_5340,], output)
mod['func_5366'] = func_5366
mod = relay.transform.InferType()(mod)
var_5367 = relay.var("var_5367", dtype = "float64", shape = (15, 16, 1))#candidate|5367|(15, 16, 1)|var|float64
var_5368 = relay.var("var_5368", dtype = "float32", shape = (780,))#candidate|5368|(780,)|var|float32
var_5369 = relay.var("var_5369", dtype = "float64", shape = (1638,))#candidate|5369|(1638,)|var|float64
var_5370 = relay.var("var_5370", dtype = "float32", shape = (624,))#candidate|5370|(624,)|var|float32
var_5371 = relay.var("var_5371", dtype = "int64", shape = (140, 14))#candidate|5371|(140, 14)|var|int64
output = func_5366(var_5367,var_5368,var_5369,var_5370,var_5371,)
func_5372 = relay.Function([var_5367,var_5368,var_5369,var_5370,var_5371,], output)
mutated_mod['func_5372'] = func_5372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5611 = relay.var("var_5611", dtype = "float64", shape = (3, 6, 14))#candidate|5611|(3, 6, 14)|var|float64
uop_5612 = relay.acos(var_5611.astype('float64')) # shape=(3, 6, 14)
output = relay.Tuple([uop_5612,])
output2 = relay.Tuple([uop_5612,])
func_5620 = relay.Function([var_5611,], output)
mod['func_5620'] = func_5620
mod = relay.transform.InferType()(mod)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5621 = relay.var("var_5621", dtype = "float64", shape = (3, 6, 14))#candidate|5621|(3, 6, 14)|var|float64
func_5620_call = mutated_mod.get_global_var('func_5620')
call_5622 = func_5620_call(var_5621)
output = call_5622
func_5623 = relay.Function([var_5621], output)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5728 = relay.const([[[-1,10,7,4,3,-2,5,10,-9,-5,6,-3,10,-2,3,5],[-2,7,8,-7,3,5,-1,6,-7,9,1,-8,5,2,-5,4],[-1,9,6,-10,7,9,-10,8,-5,9,-10,-7,-1,6,7,3]],[[5,-5,8,-2,-1,-3,-7,8,-9,-10,-6,-5,-7,2,3,9],[-7,-6,2,-2,-10,-3,5,9,-10,4,-7,4,-1,5,4,-9],[2,8,5,6,4,-2,-5,-2,1,3,-4,-1,3,-9,4,10]],[[5,-10,7,-8,7,9,-3,7,8,4,-6,8,-3,-8,3,2],[7,10,8,-6,-6,-9,9,-6,7,-10,-5,4,-3,6,2,6],[10,5,2,6,-8,8,2,-4,-4,-4,1,8,2,-2,3,-6]],[[-1,-2,-4,-2,5,10,4,8,10,-8,2,7,-1,8,6,-7],[-5,-2,7,-1,-4,10,9,-7,-2,10,-10,-5,7,-4,-9,1],[-10,-5,7,-7,-9,8,-7,-4,9,-10,-4,-1,-2,3,-8,7]],[[7,4,6,-4,10,-10,8,-5,-2,7,2,5,7,-5,-4,2],[2,5,9,4,1,6,10,6,6,5,3,2,-2,4,9,5],[-4,-1,10,-4,-9,-10,-4,10,2,-10,9,-5,-8,7,7,-1]]], dtype = "int8")#candidate|5728|(5, 3, 16)|const|int8
var_5729 = relay.var("var_5729", dtype = "int8", shape = (5, 3, 16))#candidate|5729|(5, 3, 16)|var|int8
bop_5730 = relay.add(const_5728.astype('int8'), relay.reshape(var_5729.astype('int8'), relay.shape_of(const_5728))) # shape=(5, 3, 16)
func_615_call = mod.get_global_var('func_615')
func_618_call = mutated_mod.get_global_var('func_618')
var_5749 = relay.var("var_5749", dtype = "float32", shape = (780, 1))#candidate|5749|(780, 1)|var|float32
call_5748 = func_615_call(relay.reshape(var_5749.astype('float32'), [5, 13, 12]))
call_5750 = func_615_call(relay.reshape(var_5749.astype('float32'), [5, 13, 12]))
uop_5758 = relay.log10(call_5748.astype('float64')) # shape=(5, 13, 12)
uop_5760 = relay.log10(call_5750.astype('float64')) # shape=(5, 13, 12)
func_4101_call = mod.get_global_var('func_4101')
func_4104_call = mutated_mod.get_global_var('func_4104')
var_5763 = relay.var("var_5763", dtype = "float32", shape = (6,))#candidate|5763|(6,)|var|float32
const_5764 = relay.const([1.376364,-3.885026,2.304397,-0.193284,8.119106,6.069169,-6.574770,2.620298,-2.999152,3.472006,-4.100301,1.953691,9.303289,-4.421754,1.038316,2.092044,2.535814,1.143303,3.890181,-7.235544,0.321056,2.417013,-0.113663,5.080315,-8.216065,5.750342,-9.914467,2.122115,4.743992,-1.668909,-2.933267,6.384005,0.119946,-3.662863,9.119335,-9.288622,7.029409,-6.554242,-1.806316,-4.443747,-1.890217,9.434076,0.075401,-6.549232,-4.365348,1.882724,-1.792214,-3.515748,9.977812,5.262739,-8.109273,2.323484,3.574117,5.360285,-1.485686,-5.289064,3.527684,5.552863,-4.159981,4.210920,-0.458001,2.544598,-2.334338,-8.293490,1.089918,-0.286467,7.122977,4.871069,4.916401,-7.860768,-2.853381,-8.051347,-7.559586,-9.451914,-0.439118,-9.799323,-2.413484,8.676622,4.773163,-8.311642,7.008812,-3.928959,2.361897,-9.399424,-9.057485,-0.310478,1.863434,-0.405586,-0.968325,4.103667,4.554402,6.053583,9.300964,-9.473540,-2.313893,6.294980,8.151459,2.544482,7.077969,1.064006,-8.968271,0.407037,-8.487197,-9.758006,-3.046074,9.875571,4.149233,-7.129701,-9.802511,0.074842,6.732884,-1.466217,9.231288,1.705583,2.700321,-0.388433,-8.250358,-1.630160,-0.443190,0.878807,-1.420511,-6.991232,2.817707,-7.750243,0.553470,2.739986,8.270898,5.492393,0.042545,9.999769,2.831185,-6.943820,8.297010,-5.148006,3.339631,3.415738,9.002897,2.265095,-3.330828,-5.109930,-1.221585,-7.382895,2.258848,-8.961006,0.524900,-8.059598,0.916631,-1.988879,0.665323,-5.629052,1.104719,-7.303806,2.528954,3.343560,1.519758,3.190509,7.279243,3.139078,2.071143,4.291529,-1.328319,2.656154,5.803406,-1.912317,2.880957,2.802237,-1.158201,3.520716,-6.058764,2.204251,-5.463775,9.379186,8.445904,-9.012714,-7.409847,3.048130,6.361412,-5.204838,-3.059529,5.836987,-0.098868,-8.108230,-7.462211,-9.639487,4.953926,9.911857,1.593666,0.091738,2.106441,2.084113,-7.541294,-9.509432,-1.371851,-0.211873,-4.483644,-2.236471,-2.952871,2.628913,-5.302626,7.762815,-0.399027,7.836442,1.500176,-1.846309,-5.026706,-2.696541,-8.395462,3.209373,-6.306364,2.418917,6.032964,6.936331,8.933414,3.369897,-0.689672,5.234117,3.397098,-8.408119,6.754726,6.999685,3.842971,-3.157546,4.579342,-2.954608,1.943782,-4.929744,2.839233,7.314217,-6.938037,-3.331216,2.839396,8.073891,-9.527570,-5.952782,-2.650103,4.133367,9.208296,7.385552,0.184533,-1.967999,-4.457669,-9.754731,-0.052631,-7.056041,-7.594019,-9.934947,-5.314526,-6.091273,6.948454,-1.940984,-4.269613,5.794225,-9.209019,-5.084522,-1.258920,-3.874727,5.790617,-8.516380,-6.536286,3.306218,1.088881,6.417317,0.965241,-9.022920,-6.193214,5.879503,8.024316,-7.467694,6.210565,2.578521,-8.079644,-4.339682,-6.075549,5.814198,7.771187,1.579468,-5.093402,-2.490125,-2.850131,4.979727,-0.173640,-9.880800,1.800803,6.031634,5.815630,7.469541,-6.542193,-0.144579,-4.676896,-3.773280,-7.590329,9.867469,-1.522081,-2.918475,-4.653670,5.842298,-3.512231,-4.466116,-2.938855,4.454329,7.297665,8.256059,-6.483566,-7.486447,-7.456426,8.157104,7.991484,4.317247,-1.489899,-7.160362,6.185964,9.118611,9.558328,-3.146525,6.142885,-4.236256,-7.977882,4.847937,8.501232,3.911741,-7.196115,-0.558713,8.590983,7.177545,8.978641,4.107489,9.116663,0.306835,-1.762960,-4.046305,1.933043,-9.792164,4.423068,-7.918488,-8.566657,-5.377394,-2.955464,-7.595411,-6.955294,-9.175762,9.491330,3.192146,-5.818721,-8.386904,-2.839275,1.079944,2.199705,7.456626,0.075440,0.213189,1.996735,-4.657724,-6.635070,-0.941802,-1.255678,-2.477619,-0.908911,-8.803421,-3.671185,0.857053,5.167784,-8.013041,3.276913,5.094666,-7.937726,-9.917689,-8.265776,3.658028,9.146251,-8.173356,-7.359912,3.331123,-0.782958,-2.465577,-1.880521,8.805025,-4.979769,-4.694858,6.688542,-3.963407,-6.657225,8.104361,8.472177,4.714964,-1.283204,-5.366774,3.694965,9.825344,1.512619,-0.750704,-6.806471,3.635858,-2.903458,-3.702269,-8.405649,9.778007,4.697309,8.141223,8.408538,9.423583,-2.899233,4.842907,3.429002,5.622727,-9.998050,7.123670,0.652749,4.974215,-3.723480,5.734956,-3.713705,-9.855198,-4.046071,-9.502343,-3.157958,8.231799,4.578245,-1.353683,-2.409122,7.780754,-8.230366,4.975796,1.415298,3.214951,-6.732193,-2.704097,7.360468,-6.130745,7.309129,8.344367,-1.534208,-7.690854,4.128026,-8.301956,9.349803,-2.118972,-6.003908,8.227216,-5.269623,-1.287279,-2.677109,5.969528,0.445160,0.545417,-9.953946,-1.217720,8.309351,-1.079866,-2.910591,-2.189845,-8.254623,4.715485,-1.512166,2.217841,3.741037,2.630219,-3.039327,7.530095,-3.542488,-4.644025,7.004666,3.991537,-5.393638,-3.302903,3.363406,-2.485548,0.319349,-2.928767,-7.081592,5.845132,1.681294,1.927867,6.008589,4.166431,1.062114,1.730660,5.569006,-6.894731,-4.036815,-9.822726,2.780691,-5.448745,-0.097703,8.878850,-7.665881,-1.105752,4.966120,8.384697,-5.435622,5.195415,4.024429,-0.983533,4.288217,-5.903664,0.616444,0.592241,2.504535,-6.014573,8.584474,-2.543642,-1.635840,0.191608,1.349331,-4.357445,-4.061899,3.748458,-3.446966,-9.686357,-3.258780,-7.628876,4.933105,5.979395,3.979171,-2.407724,9.090553,-8.752180,3.276430,5.404020,-0.355719,-3.069525,2.200032,-6.840985,5.376754,-4.533073,4.719516,-4.400812,-4.106626,1.461478,5.107355,-4.435467,7.097590,-0.077796,7.207034,3.010601,3.260520,-2.754686,6.609281,2.217623,4.763212,4.176666,-5.608142,7.941270,0.869566,-8.825314,-9.166463,4.651050,2.780075,-0.247555,6.387780,-8.700477,4.321123,-5.061718,-3.150396,8.575284,5.807742,-7.433074,-1.424980,-3.759636,1.071572,-3.131809,-3.949449,5.365137,7.437951,-2.902018,8.272934,-2.663380,3.384635,9.361688,-3.825294,4.460536,5.290295,6.104714,2.353363,0.833183,-2.384510,-6.033562,7.079725,-0.442869,9.090099,-6.143791,3.805333,0.771149,6.102208,-0.699025,6.207068,4.325980,-7.726686,5.023338,-3.671651,-8.354037,-3.345999,8.298270,-4.214310,0.757902,-2.244179,-0.448467,-5.088091,-4.285292,-1.577075,2.329416,-9.996412,2.444874,1.763687,-3.168883,7.829689,-6.929196,0.413534,-0.159661,5.729988,8.571411,0.960843,3.137944,1.227516,8.559745,4.827269,-1.903322,2.603917,-3.321150,-0.723136,-9.050679,4.533905,2.951633,7.477128,-2.329824,3.687452,-1.748680,0.931343,-0.876151,-2.383149,-9.783997,-1.816577,4.669411,-1.717369,-8.396381,0.742373,1.956596,5.449833,6.823978,-0.223168,4.608801,-1.590761,-5.830316,-2.943481,-2.567418,-5.396754,-3.580787,8.679725,-3.414018,1.739422,-4.978704,1.961666,3.949048,3.236101,1.401477,-6.997044,3.159683,6.756019,-5.847502,2.191477,-6.266505,3.747443,-5.099481,-4.656458,9.011948,-8.794996,-3.029309,3.980086,-4.180035,8.056221,-3.922778,6.128528,-9.040863,7.752044,-5.588224,4.305375,-4.041669,9.607222,-6.759489,4.810289,8.957408,0.531050,4.687276,6.534114,5.578376,-0.948886,-4.899962,-0.390832,-3.201321,8.676260,-7.001969,3.850098,5.889409,3.119451,-4.227743,2.087093,-6.658840,-5.499343,6.478397,-7.299584,-4.772461,-1.883195,-3.290240,3.521401,-3.760900,4.375691,6.882618,0.155933,7.117622,-2.868335,1.509067,3.283845,3.200164,-2.788773,7.695710,4.957689,3.367110,-3.355647,-8.026620,-8.747804,-4.622622], dtype = "float32")#candidate|5764|(720,)|const|float32
call_5762 = func_4101_call(relay.reshape(var_5763.astype('float32'), [6, 1, 1]), relay.reshape(const_5764.astype('float32'), [6, 15, 8]), )
call_5765 = func_4101_call(relay.reshape(var_5763.astype('float32'), [6, 1, 1]), relay.reshape(const_5764.astype('float32'), [6, 15, 8]), )
output = relay.Tuple([bop_5730,var_5749,uop_5758,call_5762,var_5763,const_5764,])
output2 = relay.Tuple([bop_5730,var_5749,uop_5760,call_5765,var_5763,const_5764,])
func_5778 = relay.Function([var_5729,var_5749,var_5763,], output)
mod['func_5778'] = func_5778
mod = relay.transform.InferType()(mod)
var_5779 = relay.var("var_5779", dtype = "int8", shape = (5, 3, 16))#candidate|5779|(5, 3, 16)|var|int8
var_5780 = relay.var("var_5780", dtype = "float32", shape = (780, 1))#candidate|5780|(780, 1)|var|float32
var_5781 = relay.var("var_5781", dtype = "float32", shape = (6,))#candidate|5781|(6,)|var|float32
output = func_5778(var_5779,var_5780,var_5781,)
func_5782 = relay.Function([var_5779,var_5780,var_5781,], output)
mutated_mod['func_5782'] = func_5782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6098 = relay.var("var_6098", dtype = "int64", shape = (12, 2, 2))#candidate|6098|(12, 2, 2)|var|int64
const_6099 = relay.const([[[2,-6],[6,8]],[[-8,-9],[-6,7]],[[-10,-10],[4,-9]],[[-5,4],[9,1]],[[-1,2],[6,-5]],[[6,9],[2,-5]],[[-4,7],[-9,1]],[[-9,-3],[10,-8]],[[2,-10],[9,-5]],[[1,6],[-1,8]],[[-5,5],[9,-8]],[[-10,7],[-7,-3]]], dtype = "int64")#candidate|6099|(12, 2, 2)|const|int64
bop_6100 = relay.left_shift(var_6098.astype('int64'), relay.reshape(const_6099.astype('int64'), relay.shape_of(var_6098))) # shape=(12, 2, 2)
output = bop_6100
output2 = bop_6100
func_6103 = relay.Function([var_6098,], output)
mod['func_6103'] = func_6103
mod = relay.transform.InferType()(mod)
var_6104 = relay.var("var_6104", dtype = "int64", shape = (12, 2, 2))#candidate|6104|(12, 2, 2)|var|int64
output = func_6103(var_6104)
func_6105 = relay.Function([var_6104], output)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6214 = relay.var("var_6214", dtype = "float32", shape = (14, 7, 1))#candidate|6214|(14, 7, 1)|var|float32
uop_6215 = relay.log10(var_6214.astype('float32')) # shape=(14, 7, 1)
bop_6217 = relay.equal(uop_6215.astype('bool'), relay.reshape(var_6214.astype('bool'), relay.shape_of(uop_6215))) # shape=(14, 7, 1)
output = relay.Tuple([bop_6217,])
output2 = relay.Tuple([bop_6217,])
func_6225 = relay.Function([var_6214,], output)
mod['func_6225'] = func_6225
mod = relay.transform.InferType()(mod)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6226 = relay.var("var_6226", dtype = "float32", shape = (14, 7, 1))#candidate|6226|(14, 7, 1)|var|float32
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6227 = func_6225_call(var_6226)
output = call_6227
func_6228 = relay.Function([var_6226], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6388 = relay.var("var_6388", dtype = "int8", shape = (6, 11, 13))#candidate|6388|(6, 11, 13)|var|int8
var_6389 = relay.var("var_6389", dtype = "int8", shape = (6, 11, 13))#candidate|6389|(6, 11, 13)|var|int8
bop_6390 = relay.minimum(var_6388.astype('int8'), relay.reshape(var_6389.astype('int8'), relay.shape_of(var_6388))) # shape=(6, 11, 13)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
const_6396 = relay.const([[-6.367206,2.029160,-6.814100,1.773782,7.067820,4.774108,-8.949218,-2.220017,2.063248,-3.700790,2.759718,0.326961,-7.316938,-9.806270,-5.570318,-6.418565,1.579505,9.888940,4.025167,1.710813,-3.952777,0.466229,-4.598177,-2.402916,-6.343034,8.419601,-3.117692,-2.075483,8.637815,-2.500731,7.049320,-5.439284,-3.187948,-1.277531,1.925141,3.827464,-8.405984,-7.917333,-0.695149,9.815685,5.301166,-8.547106,0.205488,-3.662685,-5.786990,-6.258989,-1.650186,-4.096665,-8.741997,-8.618098,-9.461895,9.774055,-8.040856,8.248111,-0.771448,-6.874601,-2.512020,-8.237244,9.161150,-5.946297,2.719753,0.313631,-6.621309,-2.309591,-9.017228,-4.893400,-3.009624,-6.847372,9.573815,8.361710,-9.145937,1.760015,2.756919,-2.354411,-4.815578,-5.468915,9.317698,9.475743,6.974724,9.404115,3.069657,-6.614233,9.946652,-9.511641,-9.134703,2.151474,3.209012,8.971516,-0.271140,3.303221,0.612611,-5.755095,9.406232,-5.394882,0.007382,2.863153,3.030087,0.431102,-3.681596,9.658127,2.778864,7.295679,6.863175,8.375606,-3.076855,-3.014747,-3.925183,-3.854613,4.078815,-1.922736,-8.075015,5.782345,6.943100,5.885184,-5.868682,8.248618,8.257062,5.314136,6.471906,-1.936626,5.387594,8.482249,7.311309,-9.071042,-4.204783,7.928365,-1.294481,-7.970684,2.286659,4.627803,-2.662838,-9.582917,2.551741,-9.997102,-6.229609,-6.809619,-5.883144,-6.867545,2.645185,-9.656533,1.360469,4.989854,-2.029940,-1.118098,7.397535,6.419903,-2.726809,8.170966,2.977677,-2.701090,-2.013480,-1.501118,3.820724,-6.752878,3.314655,-6.244708,-7.042858,-9.047773,-6.538780,9.328901,-7.599160,6.933939,-2.790841,-2.378382,9.994281,3.028730,1.019689,-7.283033,-5.302832,6.068309,2.997548,8.684690,9.626625,-6.063083,-2.860776,6.935257,-0.461102,8.503293,2.083411,4.865969,-5.863710,-1.347607,-4.556507,-6.334498,8.081887,-7.059971,-6.136463,1.736474,5.729634,7.398854,4.458465,-4.211873,1.775466,-0.255466,1.585072,1.256456,-4.853904,3.222567,-7.046694,-7.270886,0.203112,-7.957230,-4.452090,-1.430780,6.156518,0.731284,-2.313695,6.355676,5.343210,3.858581,2.055876,-3.061661,-8.265454,-2.052193,-8.773661,7.706318,5.384480,8.051317,8.155933,5.403681,5.286397,2.006293,-7.129495,4.629543,-2.791600,-6.050206,-9.446709,4.586020,-0.451385,6.399843,-3.541690,-2.036621,9.268597,2.312679],[6.516195,4.335554,7.115521,0.093709,0.857835,7.999814,3.299752,6.161262,6.051432,-9.420644,-6.791505,-2.769321,-0.988180,-8.142618,-2.291339,-9.052929,-9.519910,-4.645151,-6.133178,1.063320,-3.487372,6.535240,-8.383936,1.982881,-4.431098,4.565834,-7.561414,4.637911,1.350209,-6.779823,-9.927253,4.811646,-6.938216,-7.872314,6.522075,0.013508,2.545791,9.313172,8.334256,9.899290,2.727247,3.130107,-6.494077,-3.435449,-3.870613,5.003159,-1.677974,-8.154113,-8.150263,1.578435,-6.825641,0.095770,-1.611028,-4.647985,-6.581107,5.971154,-3.397542,5.054688,2.355103,-9.669916,-6.519319,-2.785390,1.258845,4.331025,-2.749902,7.435394,6.345671,-8.106238,-7.148809,-3.618962,-5.292913,-4.575828,-7.854856,7.318767,8.319699,5.893753,4.925163,-8.202696,-6.145505,-5.860090,5.227414,-2.841746,-8.907654,-4.150127,2.213157,9.225183,-5.382831,-8.955590,0.818456,-6.228126,-7.307112,-3.349098,-4.432339,-1.259317,2.124190,2.892583,-5.506220,9.378620,-6.019648,7.024555,-8.046840,4.180724,-9.327200,4.374668,7.246571,9.527751,-5.711582,7.554980,-6.578933,5.696472,-5.637501,-0.741964,-6.394877,4.010823,8.907663,-6.687549,-0.727301,-5.983342,-6.764322,-7.595410,-5.810137,8.642661,-8.053367,3.526913,-9.175717,-6.343048,8.473389,7.869420,-7.138138,-9.172567,-8.741358,-8.166106,-4.096699,2.370591,-2.894635,-0.415352,3.831844,5.414148,-5.480168,3.718363,-5.621476,9.471032,-6.884280,6.381274,5.089612,4.957756,5.724188,-3.149609,-0.167077,-1.966593,-7.160804,9.066157,-2.261059,3.144424,5.836084,7.352153,-1.677491,0.971963,4.934146,4.499979,-5.648416,-2.787093,-7.220090,8.179705,5.028086,-2.681388,-5.540456,7.025297,-7.910718,2.074291,9.668451,7.066629,6.964018,5.896285,-3.222950,-8.404126,0.235279,-7.399414,4.570197,-9.814192,6.604763,-6.887901,2.489231,-4.193386,-3.327526,9.228324,-2.155339,2.221792,-1.987886,-0.758978,-8.422998,0.443551,-2.967682,1.802598,-8.627176,-7.923833,-0.677214,2.610925,-2.814526,-5.568395,-2.687487,6.059876,-2.947266,-3.480876,6.854483,0.097399,0.441795,2.740124,-0.835552,-4.746755,-7.376718,-8.509830,2.132481,-6.728607,7.509570,3.927085,2.065174,-7.509750,7.650608,-6.296857,-5.277133,-0.537734,-8.093123,9.669765,0.065933,6.933711,-6.576369,-9.961771,-0.528562,2.254606,5.162815,5.986570,8.027622,3.002171],[-6.494169,6.124142,0.059328,2.423535,3.187028,1.289233,-0.928310,6.217606,-3.778405,-3.088169,-1.673637,8.088373,-3.415641,-8.230605,-2.625097,9.277425,3.777415,1.502075,-9.117775,4.064495,7.085785,-3.921602,1.022308,-7.838470,-6.024144,-9.352392,2.414336,-1.203670,-3.852866,2.680868,-6.805424,-5.323034,-3.439525,9.715743,-5.005843,-0.370944,9.635183,7.344536,-1.162164,-8.250786,-0.087955,-4.361775,-4.206283,-7.297190,4.060775,-8.645726,-1.490592,-1.590420,-5.410657,5.597502,-4.667223,6.706817,7.034220,-1.319806,-5.447900,-5.809083,-5.966095,-4.260790,3.023463,1.661995,9.824232,6.520111,-7.145236,-1.759885,3.414309,4.542218,9.339090,5.411710,6.821220,3.683663,-0.976134,4.019081,-5.048308,-4.100099,-4.110135,-8.265430,2.204381,2.846332,0.668780,-3.246921,0.671439,-7.061629,-0.543017,8.686814,-3.070595,-0.510950,-8.038361,3.240226,5.521594,6.810793,8.543077,0.499894,1.380628,4.116548,-4.538927,5.828134,4.535022,1.887255,3.083802,-4.317507,7.357275,-6.601532,-0.571139,-2.052830,9.969310,2.323692,8.347080,5.977246,7.805200,-2.415333,0.791304,0.563931,6.542717,-9.376264,-7.403892,-8.310291,9.829895,8.049378,-7.199579,-6.842227,6.690210,4.795052,-2.811918,0.046629,3.007854,-4.000931,1.744105,8.350863,-3.359226,3.852735,-5.251168,-0.180900,0.481229,9.483630,1.928189,2.711073,9.380079,6.087875,-5.184494,5.742971,-7.080292,-6.610321,-8.799948,9.487336,3.373068,2.894301,-0.655217,-0.688052,2.634039,-1.250468,2.452548,-3.070883,-6.929922,-8.785109,-9.357266,-3.259629,4.335358,0.139161,-7.528762,-8.978500,0.441646,-8.277310,6.745430,9.681744,-0.928147,6.801829,-3.879612,7.293676,-1.235170,9.508676,4.717771,6.974309,-1.044292,-3.343057,0.012379,-0.104600,-0.573914,7.632536,9.377474,8.651319,-2.832486,2.838187,-0.140191,6.720369,9.540384,1.590390,-2.775677,3.013574,9.789948,2.881352,1.126875,-5.025461,-8.744029,6.840508,-4.003508,-9.805659,-4.480503,9.429543,-1.269955,3.597512,7.716783,-4.860978,6.047629,-1.979996,-6.619073,-0.617972,-4.606251,6.079040,-2.243022,-0.030621,5.923246,3.240192,0.791234,-1.991687,4.895657,0.375551,0.247997,-6.022096,4.324757,2.802223,-6.300655,0.189863,-7.598332,-2.004249,-8.957569,-1.636577,5.667120,0.149889,-0.832518,-5.023274,5.171859,7.878382,0.866671,0.105192],[-4.960556,-9.594360,-2.323127,0.361990,4.598146,3.990010,5.003239,8.981620,8.855182,1.161319,5.772015,3.925905,8.205014,9.572837,-5.184182,3.183467,6.439341,-1.104830,-0.566739,1.952066,1.938312,3.520602,-3.591232,7.491188,4.483060,8.989982,-9.821389,6.437074,9.003667,-5.072778,7.916853,5.277084,-4.337222,8.608171,2.714182,-7.158534,4.481333,9.464910,-3.880351,-8.764228,0.841067,-8.065059,-7.169018,2.012487,-6.973181,-0.581580,-9.132166,6.655192,9.102401,7.754669,8.667469,4.118431,2.622578,-4.411644,5.721145,4.325237,-0.624547,-9.076889,6.292913,1.473942,9.338235,6.058054,2.370029,-3.539157,6.935360,3.315545,8.260595,-9.408489,-0.676884,6.040904,0.963576,-0.162691,-1.379104,-4.468287,8.092012,-4.875318,5.790875,-1.982572,-3.867466,8.296851,-8.360215,-5.995792,3.556227,-2.245150,2.898584,1.875643,-9.630812,-8.410400,-1.405013,-5.219330,-0.977707,1.526661,-1.413531,-0.612192,-7.169569,8.304558,5.131645,4.548032,-3.463758,-4.112487,0.969611,-9.220606,8.817841,-6.063893,3.395568,0.999101,7.447983,-9.072681,-4.909366,-6.105123,-8.284362,8.204254,8.993152,6.893983,-4.566029,7.786322,5.029748,6.798159,2.189084,8.508820,-7.364832,-7.014397,6.673922,-3.596118,-2.867778,-3.196797,-7.646525,-8.783178,-4.543297,7.269757,6.574735,-8.729814,-2.190501,1.294463,-7.799956,-7.754567,-4.072410,-4.111348,9.666263,4.738431,-7.998919,6.745517,-6.281076,-2.299811,2.035020,2.572709,4.549739,4.888139,-3.003897,6.284965,5.954051,5.228214,-7.787389,7.308293,-7.793856,0.480809,1.867663,1.993493,-2.246138,-3.724553,8.115960,-2.871583,-9.851843,-0.867202,2.253209,9.885599,-4.379564,-5.396138,-9.329029,-4.618242,-4.660102,6.627661,-3.112003,2.590237,0.424085,-4.552864,-1.654859,4.380900,2.973601,8.413574,9.031915,4.138065,5.272489,-6.817136,-1.228680,8.992164,1.181582,-4.575187,2.617074,-7.624207,6.557729,-2.863908,-0.785060,-4.738083,7.437138,-7.671984,-3.833089,-9.428487,3.491186,-2.957271,-5.833068,-3.115714,-1.971711,1.105770,6.110256,-1.691186,1.546532,-3.657176,-5.415700,6.175324,-8.429127,-3.579918,3.418693,-0.340131,-6.538352,-7.788704,-5.658668,-9.221079,2.054431,2.221952,4.659455,-5.923961,-5.469743,-0.699249,2.216159,-4.327534,2.399200,8.097204,-7.687594,3.048235,-5.746040,1.272269,8.347513,1.152857],[5.769525,9.342477,7.409419,8.313455,-6.740715,-6.749862,7.670627,9.746610,-7.726570,-1.084700,-4.037915,4.149340,1.600602,-2.392187,-4.965652,-5.795669,-7.116185,-9.516641,9.422153,1.298062,-4.806353,0.533194,-3.129049,-5.768211,5.301854,3.152396,2.194688,-6.178561,9.038529,6.712057,3.126586,-3.010297,1.263048,4.821199,-4.913757,-4.012063,-0.461877,3.533427,-4.228433,3.776679,-3.922014,0.671539,6.167844,-7.646055,-6.485771,-0.452187,5.070871,1.419292,-9.497529,7.430720,2.821803,8.616865,-0.968609,9.923593,-9.942995,-3.483417,4.862857,-8.247424,-1.525154,-0.435067,-3.347741,-9.142366,3.675787,-9.625954,-0.692149,-7.504213,8.065365,6.625070,-9.082522,-2.064404,-9.859348,7.350844,7.778588,-9.847111,5.631222,-8.289944,-6.708380,7.753230,6.027425,2.603789,-3.129437,7.687850,3.721114,3.430838,1.681888,-7.037165,-6.280793,-1.631880,-1.087201,6.432053,9.704354,6.897498,-3.668297,4.562618,2.627319,7.239095,-9.207802,2.484977,-5.931892,-0.805950,3.382759,5.623119,-2.924580,1.555613,-4.895403,-3.057828,-1.959946,4.707559,3.850450,-8.855965,4.864710,-8.490376,6.823522,1.742670,-9.378366,6.208146,7.586887,0.192238,-1.836409,-7.230301,-1.385741,-3.898082,-2.249004,5.442454,-4.365809,-3.607345,-6.470711,-0.847551,4.037849,8.687467,4.549251,8.186093,2.819296,-9.874697,9.103905,-5.249779,-4.948219,-7.214361,9.055488,-6.474452,-4.455234,2.639194,6.597411,-4.480049,-6.922588,-3.363960,-3.839567,-2.180655,-9.760707,-2.361779,7.483101,9.944618,1.750940,-6.090758,-0.922060,2.503464,-0.853101,3.939300,-5.869673,-5.955753,3.133628,-6.195559,-7.776557,1.296895,7.327820,-5.252883,-8.496773,-2.546295,9.234562,-3.558163,4.077185,-0.765969,9.038692,9.063392,4.458354,-0.009299,-5.309175,5.494798,0.787951,-6.831124,-8.908282,3.087168,-7.357498,-6.463163,-0.756544,5.546171,-1.435375,6.843318,5.533080,1.003054,-7.804818,5.279211,-2.527454,2.927286,6.456780,7.071679,-8.580256,0.997828,-1.229770,2.247422,-9.539760,9.367682,-8.667092,-4.494383,3.542951,0.335965,4.390929,9.556458,1.556923,8.975394,-1.496535,-2.801138,4.459347,2.460107,2.607996,6.213241,-4.101036,7.736135,0.625909,-4.133586,8.564361,6.759555,1.588124,3.346559,1.677994,5.456750,5.084952,9.355478,8.420928,-6.869077,5.691386,3.837288,-4.705232,-6.907791],[-7.714506,3.916715,-2.575029,8.391237,0.512748,-8.237348,1.640245,-5.392074,3.419615,-9.187505,-1.192704,-8.806410,-0.481830,3.337721,-3.504102,-8.333408,5.762899,-7.413938,-2.795090,6.786331,-1.450338,7.210018,8.548829,-7.049720,9.173707,-1.755846,-2.374856,7.347913,-9.313802,4.088844,-7.767165,4.016840,2.702909,-2.191778,5.845778,4.357218,2.753556,-9.350409,-0.403357,-2.796081,1.266128,-3.374149,0.712151,-4.277160,-6.110352,-5.640369,5.465260,-6.555647,1.510909,5.329634,-9.920607,6.513370,5.153405,6.796598,-6.409356,5.958759,-5.911493,8.241929,2.439848,3.367151,-5.975393,-0.117551,6.112348,-7.668382,0.696550,-7.713207,2.934357,-1.640354,6.922613,-9.491846,4.316813,1.640267,7.485983,3.773748,-2.754402,3.203858,-2.967592,-1.967279,-5.221331,-4.328395,-3.406325,-7.177678,-9.432233,-4.481069,-4.245451,-4.593266,-6.095285,7.900083,-2.345408,-7.873008,3.679753,7.334008,-2.186627,7.855071,6.720905,-2.775312,-1.519412,4.596961,8.483408,-3.952130,-4.381675,3.400448,-4.274776,0.535051,8.553362,5.159782,2.405158,-9.603724,7.574725,-5.906560,-4.582577,-3.432027,7.566206,7.334210,-7.500883,-1.863845,-3.244029,4.862475,-3.301430,-7.896117,8.756108,-2.356956,-9.134020,-8.575452,2.975391,-9.805755,7.131128,-6.497679,-7.354307,-8.440510,-9.517652,-8.744712,-7.152003,7.656374,-8.744903,3.522251,-1.357015,-1.111088,-6.034157,-2.474013,9.949178,8.490618,2.297422,-4.529710,-4.860550,-8.932387,7.769942,1.569862,6.381244,6.569205,-0.740527,2.755776,-4.699836,-9.432255,-9.611615,-3.567914,6.579710,-0.411563,-4.031845,1.356489,1.831681,2.467289,-3.168761,4.801514,1.893650,2.953220,2.198535,-7.697894,-5.211504,-3.144747,1.643310,-6.646200,9.631095,-8.361766,2.403593,-8.280114,0.394635,-9.393370,-1.837057,8.195190,-8.018172,-9.103412,0.414648,5.277296,2.894924,-1.546001,1.964209,7.187357,-6.547047,-6.570114,5.785953,-0.622159,-9.885135,-8.129062,-8.384266,-0.812771,-4.766870,-4.978612,-0.305533,9.044527,-7.126805,-8.303488,3.071367,-1.418032,4.398463,0.425065,7.711373,-0.464241,-0.967092,-3.837778,-6.087630,3.367777,1.173665,8.085776,-2.700349,9.874432,-9.280096,-7.300174,-5.546769,7.902608,2.082024,-5.229754,7.997967,-3.082678,-6.348485,-6.579570,7.762995,3.409675,-9.160347,-9.227564,-9.040087,5.542237,-1.877292,-6.805076],[-5.666992,-3.039838,-9.617506,-4.813061,5.946181,-4.063154,1.333690,7.459457,-0.635305,-1.736062,8.347219,3.885454,-4.589853,-7.405805,-1.667763,1.218968,0.474457,-9.028648,5.555572,5.200552,5.158588,-3.948214,-3.680033,-3.579125,-6.552640,3.678168,8.547475,8.139931,1.062046,-9.309076,-5.870216,-2.128311,-4.289020,-2.067386,0.791864,-1.639712,1.630771,-0.120233,-9.208813,-4.673434,6.610797,-3.774162,6.519851,-6.943276,-1.906234,-9.076507,5.726548,-5.762730,-8.956784,0.509611,-9.457109,-6.629540,-6.670542,7.569605,3.308249,9.752185,-1.235068,-1.591712,-0.484691,-1.088131,7.393231,6.646127,-1.450500,-5.632001,-1.669742,-5.471139,-9.733023,-9.220534,5.728521,8.414772,-2.909879,1.923786,2.457557,-9.889893,9.168060,-8.580199,9.324776,0.076557,4.676703,-5.864841,0.287518,-1.637955,-2.025099,-7.995206,-9.323034,-6.666808,-1.789757,6.861906,2.401996,7.938433,9.436399,-4.144095,-3.801581,-2.658209,7.488978,0.010408,4.770698,-9.365100,0.169539,-6.153002,3.583355,-2.937650,-6.346632,8.888937,3.384673,-3.988262,-0.286570,9.327151,-2.081097,-0.800535,4.307956,-0.706526,3.677270,-3.299471,8.947807,-3.159235,4.393607,1.229583,3.274017,-0.499000,9.534575,6.770278,0.019590,-2.211163,-4.049712,6.658743,3.847522,-0.680828,7.068633,8.569989,0.166516,0.334373,-3.905081,9.308622,0.107630,-9.524278,-7.778726,-3.851567,-5.463266,-7.938717,0.176716,-0.878993,4.312849,4.619559,0.398400,-6.019917,-0.176201,-5.495826,-4.749530,-4.146801,7.952572,-5.729779,-4.340734,7.626685,-8.559597,1.407046,0.857697,-7.102414,5.236708,4.650072,-3.698013,9.370368,6.724807,1.172470,2.255564,0.358172,-8.331793,0.332454,-3.925748,4.573345,-1.829959,-2.958697,5.939438,-8.479581,-6.872750,3.738081,4.497308,-8.860548,-6.787607,-1.046518,7.205440,-2.926321,-7.461651,4.932485,-1.481540,3.543984,7.471357,8.660598,-8.349041,5.926294,1.404349,0.185678,-9.835114,-1.849569,8.204490,-6.228965,-2.615793,-8.458920,-3.151070,-6.009555,-8.142170,5.321485,7.557255,-0.732704,0.241600,4.542114,7.214295,6.626777,-7.184473,-5.217355,2.464538,-4.937542,-4.058489,-1.048346,-7.869376,3.050840,-3.914315,3.323151,9.101991,7.244788,0.960319,-3.204399,6.423218,-3.525159,0.405634,6.754158,-6.886761,-9.551715,-3.905033,6.303709,7.697844,8.820447,-3.871183,-5.850587]], dtype = "float64")#candidate|6396|(7, 234)|const|float64
call_6395 = func_3106_call(relay.reshape(const_6396.astype('float64'), [9, 14, 13]))
call_6397 = func_3106_call(relay.reshape(const_6396.astype('float64'), [9, 14, 13]))
output = relay.Tuple([bop_6390,call_6395,const_6396,])
output2 = relay.Tuple([bop_6390,call_6397,const_6396,])
func_6398 = relay.Function([var_6388,var_6389,], output)
mod['func_6398'] = func_6398
mod = relay.transform.InferType()(mod)
var_6399 = relay.var("var_6399", dtype = "int8", shape = (6, 11, 13))#candidate|6399|(6, 11, 13)|var|int8
var_6400 = relay.var("var_6400", dtype = "int8", shape = (6, 11, 13))#candidate|6400|(6, 11, 13)|var|int8
output = func_6398(var_6399,var_6400,)
func_6401 = relay.Function([var_6399,var_6400,], output)
mutated_mod['func_6401'] = func_6401
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6697 = relay.const([[[2.042942,-2.283524,-7.660491,3.262434,7.072714],[-6.844328,6.090846,7.750011,-7.400870,-5.059026],[8.114202,6.678373,2.532350,9.461091,-2.714660],[-0.012965,-1.484035,-9.371882,0.607026,5.986126],[2.553052,-7.658502,1.713646,3.316776,-2.133585],[-9.098154,-0.672064,5.101171,0.423353,4.297216],[6.926682,8.273198,-7.800129,6.570615,-3.667202],[-4.806297,-0.286672,-4.943571,-9.387526,-0.500449],[9.379625,-5.333823,-2.191967,3.183331,-7.278737],[8.461346,8.095330,0.925256,-8.313450,2.534897]],[[-0.162533,-6.805553,0.747701,-6.744046,-8.406000],[-1.374970,4.866870,-6.054577,1.908814,-3.852736],[-5.428391,4.141505,-1.898484,5.659631,0.563597],[3.212849,-0.944113,8.203050,-6.848782,0.380964],[-3.010596,9.660630,6.487112,5.389943,5.536464],[-0.477772,5.567107,0.510631,9.519376,-8.957273],[-2.638661,-1.721597,0.255598,-6.316154,0.490197],[-9.654472,7.962881,-6.892578,9.850097,8.325929],[8.619534,-6.452761,-1.701033,-5.317091,-1.624153],[-6.132210,9.535081,2.870711,-6.720386,-5.642298]],[[-0.751544,1.096836,-8.771476,-8.467219,6.349871],[7.411302,0.506366,5.543087,8.936667,0.037682],[-9.710690,-9.928186,-0.477404,-7.586773,3.052448],[0.167092,-0.136451,-3.689642,-5.706354,-6.197527],[-0.359588,-5.132801,-5.554338,7.743964,6.616775],[9.754409,3.152533,5.263204,-9.213849,-0.608168],[2.854596,4.129313,2.977933,-6.377167,-9.159830],[5.861449,-5.174586,-4.410295,-5.315023,2.236633],[7.611594,0.687525,-6.555301,-6.978512,5.045743],[4.513291,-0.320222,-0.640200,-3.861157,6.799479]],[[2.380933,9.120583,-4.993851,-9.949913,-3.488686],[3.119010,8.559503,-2.059887,4.411292,-3.211647],[9.406710,1.419186,-5.871527,8.986536,5.954201],[8.577710,-1.142021,-0.049954,-4.426778,6.598043],[-7.228019,-1.105073,1.323115,-5.536230,-2.888024],[9.983737,-0.191261,6.722531,-7.759012,2.623746],[-6.387868,7.227297,4.068787,6.420928,-7.511226],[-0.544134,4.231517,-2.827591,8.362974,-8.398064],[2.372723,-3.248432,-9.847188,-6.005541,-1.373335],[-6.546048,-0.781975,9.397860,-3.742160,-6.309125]],[[4.420305,1.703625,2.138399,-2.434739,-1.325479],[-3.743333,-3.144318,5.572365,4.139967,-7.290506],[7.988191,-5.175170,-6.104934,-4.008118,-6.479578],[8.872396,6.769303,0.443297,8.270590,-5.360864],[-1.094598,0.257306,5.783856,2.282933,3.124414],[-5.829901,2.042216,-5.995667,0.809277,-3.177895],[7.624743,7.375277,-6.710968,-2.395907,-4.189354],[-4.568718,6.766608,-0.096731,-1.650643,0.409389],[1.090887,6.670900,-3.680389,-7.593944,-4.886862],[-5.718789,-9.788671,-3.768834,-5.275516,-4.073967]],[[6.600641,4.796674,2.939018,9.296567,7.293332],[0.666577,4.199806,1.939103,-4.870969,7.495816],[-1.698664,2.116193,0.261303,-0.202855,-9.390778],[9.791014,4.994288,-1.904809,-2.170321,-7.968958],[6.564157,-9.813544,-0.110489,-1.722751,6.429511],[7.701901,0.446667,-5.820721,3.925448,-4.898283],[-2.079564,8.497896,-7.674714,-6.569597,-9.916695],[7.741884,-1.003228,-6.131027,2.926897,1.363084],[-1.828420,8.613402,2.854463,-7.733548,-4.780056],[-2.998404,-8.492735,-1.544690,-6.106386,7.690007]],[[8.073808,-5.087299,-8.295999,6.401640,4.111190],[-2.774956,6.097933,-8.549584,-5.334514,3.396832],[6.865630,6.415829,-7.937534,9.204990,-8.849744],[8.116120,6.922247,0.773769,-2.247294,7.184903],[2.210335,7.651228,9.251230,-3.974450,-9.407877],[-4.628098,0.104097,-2.795860,5.339852,-9.132761],[-2.780076,-8.080373,5.641156,-0.161840,-1.871081],[-6.630802,4.646297,-7.079803,0.467379,-4.982371],[5.961101,8.516262,-8.107081,-9.247492,4.817790],[1.820777,-4.198011,7.704318,3.671855,5.103492]],[[-6.241251,-5.156330,2.680026,-6.863608,7.736296],[-8.020411,-2.213509,5.230744,6.100908,-6.327384],[4.196250,8.118172,6.510945,0.266623,-2.355596],[-1.773134,-4.980666,-2.104534,-2.506671,-1.717997],[-3.645407,-1.380393,0.938071,9.616038,8.688512],[2.160125,-9.981190,-5.572639,-4.619741,-6.195657],[-7.438826,4.807663,4.890356,-5.495019,-8.802283],[0.242787,0.913045,2.234814,-8.278541,-7.861366],[1.220413,-9.074761,-2.335484,0.505166,-7.637695],[8.112765,9.878710,-8.246648,-5.147619,-7.705955]],[[6.610233,7.044279,4.169950,1.153263,-7.884347],[6.255848,-8.373224,1.947165,-3.935859,8.250202],[-7.132869,4.759505,4.847280,0.477758,-5.323294],[-2.817586,2.520396,-4.666305,7.143864,-2.578561],[2.123279,0.222662,8.822013,-2.372961,7.720173],[0.838770,-6.108219,3.361262,-8.448383,-4.153813],[-8.843151,-3.236412,-9.355526,-7.700042,4.976350],[2.961001,-1.838758,-2.807119,5.549199,1.764391],[-4.638856,5.490963,9.224135,-8.347179,1.382610],[-9.060292,9.524523,5.011357,-7.929584,0.999105]],[[3.798254,-4.743409,1.985552,3.872826,-6.470411],[-9.148465,6.232393,3.567622,-7.843905,-8.310680],[-2.531742,-3.972590,-8.568059,-8.988800,5.962809],[-7.267160,-5.529875,6.364237,6.960417,5.480263],[9.993800,-6.190404,4.552453,-2.001254,9.415347],[9.171216,2.141984,3.813036,2.467128,-9.071791],[-6.580611,7.119125,-0.380932,-2.214048,-0.861924],[1.615001,9.722751,-0.868124,9.513409,1.110754],[-3.597235,2.034338,-6.723082,3.970130,-1.875690],[-1.075938,-0.031259,1.109981,-0.229872,-9.996194]],[[3.284732,2.278639,7.546749,9.482675,-3.562308],[8.584420,9.006337,-6.859381,6.567728,-9.114266],[-7.292623,-6.716793,-0.957953,3.615311,-2.591931],[9.897995,8.468472,-6.484746,2.392142,2.609438],[-2.022664,-2.488564,9.359636,1.172426,-1.664801],[-5.608477,5.464112,5.498519,3.700584,-2.084213],[-0.305462,0.660677,-7.399663,-6.881093,-9.319498],[6.650783,-0.746469,-7.125855,1.729133,-7.926405],[2.353220,-0.520591,-3.389069,2.757310,-1.235448],[2.969662,3.610470,-9.343575,-5.637911,5.712982]],[[-0.962314,-3.399413,-4.374021,1.572979,-3.653719],[9.396165,-6.430975,-8.102365,4.449107,-5.439669],[-7.012336,-7.181801,5.750653,5.498184,6.749119],[-9.676971,-7.748432,-2.637994,0.526799,-3.888629],[-4.496904,-6.187108,2.758374,0.697114,-0.046410],[-3.820017,6.847845,-8.771978,7.825472,-6.689559],[4.350126,-7.162985,4.378278,-9.995610,-6.272667],[5.732753,4.880414,-4.383225,-7.581751,0.066133],[9.368047,4.359226,6.244907,7.561785,-5.959207],[9.629607,-2.687548,2.912614,9.491837,8.278566]],[[-6.958504,-8.960910,-5.326432,-5.952112,-3.939146],[5.884608,1.605142,-2.738769,-3.004226,0.794878],[8.699688,-3.048744,-4.295036,-2.391633,-2.233188],[-9.500548,-2.122548,-6.151697,3.462859,9.703991],[-0.674804,0.319672,-9.083154,-2.440367,-0.300894],[4.812081,0.415097,8.963306,8.231661,3.083419],[0.492879,-1.983406,-7.334343,-9.886633,0.895403],[6.985051,-4.550470,0.488475,-1.167697,-3.882630],[7.248663,-1.436021,8.376498,-6.291992,5.775573],[-3.809032,7.914776,-8.486706,3.577879,4.433639]],[[1.316039,1.163154,-5.378326,-6.368425,-0.741329],[3.800284,-0.425826,-2.813869,6.536269,-4.211603],[-0.443823,-3.490216,2.705349,1.567153,2.618976],[3.753235,8.947270,9.595166,3.514237,-4.587626],[-5.847166,3.840081,-5.933135,-1.699643,-7.643454],[-9.422774,-3.151569,2.148339,-9.730150,-4.609104],[1.701327,-0.892662,-1.054418,-5.335315,3.258291],[-5.510809,-7.244924,-1.836115,6.587495,6.763387],[8.117089,5.243483,-2.694083,1.396985,9.646951],[-8.463635,5.817164,-7.963966,-9.661967,2.851781]]], dtype = "float64")#candidate|6697|(14, 10, 5)|const|float64
uop_6698 = relay.sin(const_6697.astype('float64')) # shape=(14, 10, 5)
func_3144_call = mod.get_global_var('func_3144')
func_3147_call = mutated_mod.get_global_var('func_3147')
const_6707 = relay.const([10,-8,-9,-2,7,10,-6,-2,9,-9,-1,5,10,-9,5,-3,-5,7,5,4,3,-7,-10,3,8,-2,1,-4,-5,7,6,-6,2,4,-1,9,-10,-5,7,2,2,-6,-3,-5,1,8,-3,-8,-6,-2,9,-4,-8,-1,-1,-2,-9,7,9,8,-5,7,3,-10,-8,-9,-4,7,-4,-8,-3,7,9,2,5,7,-10,-7,-10,3,1,-4,-5,-6,-1,-3,5,6,3,1,2,9,2,5,4,9,-8,-8,-6,-1,1,1,3,9,5,-5,7,9,1,-1,-1,-8,-5,-3,5,10,-9,9,10,9,9,2,-9,3,-6,5,-5,8,3,5,-7,-1,7,10,9,5,-5,-4,-10,6,-1,5,8,-8,-5,9,9,10,-4,-7,2,-1,-1,-3,1,-8,4,10,5,5,2,-3,5,-1,4,2,-8,-2,9,9,-7,-4,-10,-5,2,-6,3,7,3,-7,-4,2,5,2,-1,5,9,9,4,4,-3,2,10,-3,7,-1,-2,-4,6,2,8,3,1,-5,-7,2,-1,-5,-6,-5,2,-6,6,-3,8,10,-5,3,9,10,9,6,-8,3,3,9,-2,2,-4,2,10,-10,-5,10,3,9,-4,3,10,-6,-4,10,9,-7,7,-9,-1,4,3,1,-4,9,-9,-1,-10,2,1,1,-4,-7,8,-7,-4,-9,5,-3,10,8,-8,-8,6,-4,2,1,4,8,-1,-4,-6,-1,1,-1,-10,2,-9,-6,-2,6,-6,1,-4,-5,-4,1,10,-2,-8,5,5,5,10,1,-2,6,-1,-9,6,9,2,1,-3,-6,7,8,9,-5,7,-8,2,-8,-1,-9,2,6,-9,-10,9,3,5,9,7,2,-10,2,6,-7], dtype = "uint16")#candidate|6707|(336,)|const|uint16
call_6706 = func_3144_call(relay.reshape(const_6707.astype('uint16'), [7, 8, 6]))
call_6708 = func_3144_call(relay.reshape(const_6707.astype('uint16'), [7, 8, 6]))
func_6398_call = mod.get_global_var('func_6398')
func_6401_call = mutated_mod.get_global_var('func_6401')
var_6713 = relay.var("var_6713", dtype = "int8", shape = (858, 1))#candidate|6713|(858, 1)|var|int8
call_6712 = relay.TupleGetItem(func_6398_call(relay.reshape(var_6713.astype('int8'), [6, 11, 13]), relay.reshape(var_6713.astype('int8'), [6, 11, 13]), ), 1)
call_6714 = relay.TupleGetItem(func_6401_call(relay.reshape(var_6713.astype('int8'), [6, 11, 13]), relay.reshape(var_6713.astype('int8'), [6, 11, 13]), ), 1)
bop_6717 = relay.greater(uop_6698.astype('bool'), relay.reshape(const_6697.astype('bool'), relay.shape_of(uop_6698))) # shape=(14, 10, 5)
uop_6727 = relay.log2(uop_6698.astype('float64')) # shape=(14, 10, 5)
func_3963_call = mod.get_global_var('func_3963')
func_3969_call = mutated_mod.get_global_var('func_3969')
var_6731 = relay.var("var_6731", dtype = "bool", shape = (792,))#candidate|6731|(792,)|var|bool
var_6732 = relay.var("var_6732", dtype = "float32", shape = (780,))#candidate|6732|(780,)|var|float32
call_6730 = relay.TupleGetItem(func_3963_call(relay.reshape(var_6731.astype('bool'), [11, 12, 6]), relay.reshape(var_6731.astype('bool'), [11, 12, 6]), relay.reshape(var_6732.astype('float32'), [780,]), relay.reshape(call_6712.astype('float64'), [1638, 1]), ), 6)
call_6733 = relay.TupleGetItem(func_3969_call(relay.reshape(var_6731.astype('bool'), [11, 12, 6]), relay.reshape(var_6731.astype('bool'), [11, 12, 6]), relay.reshape(var_6732.astype('float32'), [780,]), relay.reshape(call_6712.astype('float64'), [1638, 1]), ), 6)
func_6398_call = mod.get_global_var('func_6398')
func_6401_call = mutated_mod.get_global_var('func_6401')
call_6736 = relay.TupleGetItem(func_6398_call(relay.reshape(var_6713.astype('int8'), [6, 11, 13]), relay.reshape(var_6713.astype('int8'), [6, 11, 13]), ), 0)
call_6737 = relay.TupleGetItem(func_6401_call(relay.reshape(var_6713.astype('int8'), [6, 11, 13]), relay.reshape(var_6713.astype('int8'), [6, 11, 13]), ), 0)
output = relay.Tuple([call_6706,const_6707,call_6712,var_6713,bop_6717,uop_6727,call_6730,var_6731,var_6732,call_6736,])
output2 = relay.Tuple([call_6708,const_6707,call_6714,var_6713,bop_6717,uop_6727,call_6733,var_6731,var_6732,call_6737,])
func_6762 = relay.Function([var_6713,var_6731,var_6732,], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6762_call = mutated_mod.get_global_var('func_6762')
var_6764 = relay.var("var_6764", dtype = "int8", shape = (858, 1))#candidate|6764|(858, 1)|var|int8
var_6765 = relay.var("var_6765", dtype = "bool", shape = (792,))#candidate|6765|(792,)|var|bool
var_6766 = relay.var("var_6766", dtype = "float32", shape = (780,))#candidate|6766|(780,)|var|float32
call_6763 = func_6762_call(var_6764,var_6765,var_6766,)
output = call_6763
func_6767 = relay.Function([var_6764,var_6765,var_6766,], output)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6983 = relay.var("var_6983", dtype = "bool", shape = (5, 12, 8))#candidate|6983|(5, 12, 8)|var|bool
var_6984 = relay.var("var_6984", dtype = "bool", shape = (5, 12, 8))#candidate|6984|(5, 12, 8)|var|bool
bop_6985 = relay.logical_and(var_6983.astype('bool'), relay.reshape(var_6984.astype('bool'), relay.shape_of(var_6983))) # shape=(5, 12, 8)
func_1799_call = mod.get_global_var('func_1799')
func_1802_call = mutated_mod.get_global_var('func_1802')
var_6989 = relay.var("var_6989", dtype = "int8", shape = (432,))#candidate|6989|(432,)|var|int8
call_6988 = func_1799_call(relay.reshape(var_6989.astype('int8'), [6, 8, 9]))
call_6990 = func_1799_call(relay.reshape(var_6989.astype('int8'), [6, 8, 9]))
output = relay.Tuple([bop_6985,call_6988,var_6989,])
output2 = relay.Tuple([bop_6985,call_6990,var_6989,])
func_6991 = relay.Function([var_6983,var_6984,var_6989,], output)
mod['func_6991'] = func_6991
mod = relay.transform.InferType()(mod)
mutated_mod['func_6991'] = func_6991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6991_call = mutated_mod.get_global_var('func_6991')
var_6993 = relay.var("var_6993", dtype = "bool", shape = (5, 12, 8))#candidate|6993|(5, 12, 8)|var|bool
var_6994 = relay.var("var_6994", dtype = "bool", shape = (5, 12, 8))#candidate|6994|(5, 12, 8)|var|bool
var_6995 = relay.var("var_6995", dtype = "int8", shape = (432,))#candidate|6995|(432,)|var|int8
call_6992 = func_6991_call(var_6993,var_6994,var_6995,)
output = call_6992
func_6996 = relay.Function([var_6993,var_6994,var_6995,], output)
mutated_mod['func_6996'] = func_6996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7429 = relay.var("var_7429", dtype = "float64", shape = (3, 15, 12))#candidate|7429|(3, 15, 12)|var|float64
uop_7430 = relay.erf(var_7429.astype('float64')) # shape=(3, 15, 12)
func_3963_call = mod.get_global_var('func_3963')
func_3969_call = mutated_mod.get_global_var('func_3969')
var_7438 = relay.var("var_7438", dtype = "bool", shape = (792,))#candidate|7438|(792,)|var|bool
var_7439 = relay.var("var_7439", dtype = "float32", shape = (780,))#candidate|7439|(780,)|var|float32
const_7440 = relay.const([6.264246,0.472969,-3.009719,5.467514,-4.818450,1.326420,-6.063471,8.163328,-4.531957,2.668415,-1.404365,1.991103,-3.853337,-0.164917,-5.806348,-2.983286,-9.702368,6.011644,-8.152450,6.785210,1.522947,-7.430450,-5.766751,8.729984,9.416806,4.415907,-6.189042,-8.271466,3.553705,-8.350181,3.881375,-3.691002,-2.859568,-6.773950,-4.209705,1.946126,9.082042,7.954438,9.980517,-8.527589,3.273452,-8.129013,-2.896479,1.845604,-5.500433,2.339193,-0.655000,9.692239,-4.441304,8.169860,-3.164099,-5.850156,-4.988993,1.670056,5.538477,0.561185,3.188630,-6.479602,-1.455083,-5.747609,2.205667,-7.255362,5.966837,-0.848376,-0.915426,-9.236508,-8.631242,-8.946452,4.412993,-1.068484,5.713101,2.488514,-7.138041,3.275142,1.422971,0.923644,1.886932,-0.946312,3.417285,-2.256657,-8.184862,-5.246549,-5.880453,-6.045958,-1.551023,-0.231246,-8.031301,3.859190,4.825639,5.460522,-0.915396,8.240033,7.547107,-8.344346,-0.303829,-6.415414,7.815507,7.969010,4.089979,1.103690,-1.752013,5.749223,-0.048498,1.847244,2.621472,-2.977208,2.629635,-4.748020,-4.859483,-7.911454,6.054400,9.180132,3.701320,-8.904670,-4.622813,0.597286,8.298035,3.895025,0.020723,8.369601,-6.923882,-3.544128,3.068705,-4.256480,9.595122,-7.351995,0.557182,1.090077,-9.578646,6.539098,-3.410992,-6.533745,3.352649,1.891880,-0.280989,-8.193138,-7.363662,4.916183,4.401965,9.700131,-4.866343,6.828675,-6.477691,-6.036131,9.704919,7.809017,-0.331825,6.307083,-4.789957,-8.793771,-8.871927,2.177638,1.371188,-9.786974,-0.519654,2.491570,-6.406120,-2.087351,-0.275838,4.704004,-9.557376,6.956452,-2.293814,-9.261887,8.521556,-4.496034,4.081349,-2.179818,-0.410871,3.635764,0.614260,8.921774,-1.259066,-6.676956,-2.918662,-4.476427,-0.877211,-4.472971,-6.285148,1.376078,5.977610,5.713320,4.137592,-4.564437,6.093443,-7.118175,-3.266157,-1.001164,8.515613,4.878250,-3.584113,-9.406546,0.623068,-0.659666,-7.866640,0.401215,7.118762,-3.870149,6.555336,-6.899793,2.406658,4.107418,-8.459015,-9.192274,-4.443493,2.729037,3.431071,7.377361,-9.311484,-1.167955,-6.965769,6.727225,4.478615,-1.136588,-1.099371,4.137448,-9.443963,4.548310,-6.721145,-8.309123,-8.273233,0.183636,-0.095016,-3.535889,-6.180544,2.976105,3.964334,-3.482591,-8.423907,6.919457,2.107921,-9.570590,1.077581,-5.408315,3.074498,-7.060841,9.590789,2.780559,-4.953576,-6.963017,3.107619,5.017757,-0.519535,0.974978,4.136526,3.212583,3.356588,-1.396161,-8.639060,-3.552942,1.780501,4.238309,-1.075395,-3.558399,-6.039383,-0.309689,-3.550155,-8.666428,9.290832,-2.066365,-6.557932,-3.878368,9.088043,-6.270344,1.772398,-9.007261,0.178949,6.839792,-9.960877,9.671905,6.896233,-6.531242,8.846802,-1.401433,-5.078816,9.961946,9.971296,-1.707926,-0.630616,-8.374411,7.838024,9.782142,-0.172360,2.628592,-0.345914,8.766364,-3.039565,-1.875843,7.959770,-2.887295,9.959298,-1.483615,4.588061,2.797977,-7.822082,-6.676654,-0.985431,-7.218890,-5.480961,-7.231039,-1.842419,-5.636046,1.342370,1.297380,-4.668536,0.218139,7.235283,-2.457989,-0.466384,9.544170,4.673129,1.796061,1.458054,-1.033961,9.152111,-0.188923,-1.451446,-0.822102,3.768784,-6.586450,1.919390,7.827515,-6.161935,-1.700362,-3.191840,7.126340,5.724490,7.111098,-7.362053,-0.009235,-8.097642,-5.735312,-7.800817,0.432395,-4.705544,0.420240,9.356454,-2.186867,-1.832111,-4.433239,-7.353742,-2.378821,-7.293341,-4.718024,8.347630,-6.800631,-9.994298,-0.064805,3.701337,-0.127417,-8.519239,-1.401080,2.799945,8.057544,0.535636,-1.114917,7.246195,5.011042,-6.444926,-9.171336,-4.291515,-4.970751,0.033001,8.678486,-6.836706,-0.328936,7.442136,-2.890420,-3.219916,-2.084906,0.972102,9.623059,6.214974,0.549559,0.591383,8.600257,-7.690952,-5.443894,2.754917,9.798696,0.283912,-8.747869,-4.944518,1.696420,-2.633843,-5.818018,-9.949435,-4.095254,-5.138868,-2.008609,2.625688,8.719160,5.608678,-7.888389,-1.821170,-0.296657,1.052418,-5.083164,4.529515,-6.715235,-3.756022,3.591753,5.364601,-3.618963,4.276479,9.505646,5.073192,7.882621,-9.895723,6.788970,8.743075,-6.675768,-9.294506,-7.153321,2.162289,6.990569,7.955525,-5.532677,-1.672259,-4.633329,8.369381,-7.943672,-4.664636,3.395544,0.581884,2.255053,-9.146399,-9.390125,8.092477,-7.411779,8.072937,-8.355812,6.521678,3.793280,7.331346,0.458224,7.746628,6.304949,3.229936,-0.991044,8.682450,5.690124,-0.318841,-5.584957,-9.104455,-7.017363,-0.387879,-8.338737,0.374043,7.724254,9.808699,-4.385529,9.961779,8.185764,-4.274394,5.953152,5.620172,-9.725365,-5.641177,5.358924,3.326133,7.011624,-7.831139,0.809895,2.505275,3.428419,-9.037522,-3.762397,8.480084,-4.336789,9.486050,-2.964367,3.570533,-8.660639,2.036098,-9.203306,5.531438,2.587844,-3.365116,-3.739606,6.139946,-6.957712,7.511220,7.685371,-1.626183,-5.813520,-9.195411,3.741011,3.916768,2.317037,9.875451,-6.514596,8.520848,1.826124,-1.001855,-8.031606,0.579753,3.191874,3.836160,0.071069,6.393921,7.281480,-0.404762,4.024990,9.280150,8.533919,-2.896386,6.539860,4.594025,7.427060,-2.439019,2.807128,7.051743,-3.034198,-6.098793,-2.399764,-3.220688,7.058036,-5.746680,-7.474339,8.103957,7.315096,2.102644,-6.124867,4.682116,8.992780,7.588355,9.554442,1.118923,7.385237,3.510473,2.270528,7.341863,2.342907,1.663410,0.509538,0.766448,9.554498,-6.016800,3.443939,4.471395,3.499434,4.220701,7.578553,6.147800,-5.862456,0.041818,-0.106616,-6.974490,-5.712345,4.778778,8.794763,-2.939829,-9.358519,-0.236343,-9.742179,-9.617492,-6.881864,-8.624527,-2.839567,-7.070287,7.984237,1.623688,-5.702258,2.253765,3.308596,7.922417,6.860016,6.296279,-2.828734,6.858009,-3.611443,-3.447632,8.736854,-2.747683,-6.568764,2.409645,-1.973146,3.943597,-9.863681,-8.061561,-4.253707,-8.173536,6.844069,7.327128,5.014694,8.112955,-1.282170,-8.960432,-9.622457,0.282240,0.428191,-6.526393,0.674164,1.206061,-9.885064,-8.437066,0.910525,-0.703915,-5.385411,-4.050471,-3.356499,7.584053,7.120905,6.890055,3.662058,6.835946,3.155501,-8.443490,8.139604,-6.008061,8.672908,-0.563892,-4.880277,-4.471700,-6.486185,-1.767913,-8.706962,8.458304,-6.106026,0.876862,-2.072438,-5.095355,4.959620,-2.105293,-2.125809,-0.703007,4.325784,-8.940118,-4.267442,5.744707,2.944644,3.329152,0.428754,-3.983872,0.430636,6.414153,-9.210553,2.314389,8.096960,-5.877116,9.999712,1.298746,-9.473556,-9.280469,-7.266603,8.533867,3.923120,0.527107,-6.895712,-3.716303,-7.291897,1.080478,-6.994495,-5.955170,-8.761181,8.717129,1.926344,3.822957,9.517898,-8.936759,0.675721,6.232204,9.518349,2.451811,-6.726951,4.509136,-5.603479,7.297777,-3.158683,-8.701713,2.882629,-9.607383,-1.149220,-7.704533,1.210484,-5.667072,-6.178940,3.334328,-9.764421,9.792778,0.378386,4.473277,2.062138,-8.322209,-6.177488,6.653705,-2.994256,1.110982,7.777830,-7.076182,-7.586610,1.734239,8.131422,-5.249510,3.704676,-5.513364,6.908350,-5.090229,1.403442,-0.776936,0.661786,9.903924,4.387938,5.902425,-4.433671,4.023721,-0.672947,0.315925,8.593389,6.466929,-5.628435,8.739096,-9.974610,-7.168113,-0.616913,3.140685,-0.465969,-4.420215,7.972701,-2.972289,2.281319,5.711456,-3.464136,2.347155,-4.949323,3.446439,1.823589,-5.540810,-8.815273,2.891989,6.982154,3.537943,3.458236,5.700877,7.529152,-0.226726,0.527024,-7.827742,-8.404777,-0.379905,-8.037030,4.925044,-4.990919,0.095855,7.655073,-7.761943,-8.629015,-4.073279,5.947577,-3.975661,-8.311790,2.313033,-1.395420,3.469848,-6.423029,-5.685453,5.680971,-1.356258,4.948395,1.526415,-1.683162,-4.256511,6.162322,-1.375850,-2.436121,6.755687,1.836611,3.146732,-1.405891,-1.015901,-1.949390,9.348866,5.865350,1.070493,-6.891973,3.307798,-2.597379,7.773065,-2.687380,-2.575478,-3.878860,4.118639,4.364924,-4.196060,-2.662942,-5.418302,0.333578,-0.532833,5.452997,5.974165,-3.821862,-9.845500,-4.287691,-9.690624,4.152451,-7.256436,-0.744669,7.441099,-6.852369,1.304733,-0.436460,2.907340,-6.210536,-3.771574,5.321597,6.643305,-7.662241,8.135685,4.732736,-6.870022,-1.649599,-6.627737,-4.055440,-7.962791,2.586369,4.058214,1.741236,2.920360,1.329096,4.902615,-4.122278,-2.643340,-5.133796,8.139230,-6.819350,-4.677358,-3.892250,4.650332,-0.892825,2.043045,-2.206664,-5.764751,7.198247,4.759868,9.960321,-4.806483,0.640051,2.197634,-9.969265,8.737395,-8.843089,3.097627,-7.212366,6.170220,7.321710,7.786887,-4.149238,3.091145,7.549563,-1.226534,-4.635618,-9.183742,1.946506,2.618734,3.286168,-8.409573,5.253012,-2.060638,5.463326,-3.836167,3.248958,-9.200149,1.046937,4.344137,-2.967043,-4.207857,-5.444040,-6.493290,-6.523846,3.196233,-4.645725,1.157000,-2.227312,0.409369,5.331637,-1.196034,3.052845,-2.178046,-9.457769,-0.814530,5.776230,3.885569,6.402165,-6.371930,-7.657169,0.194664,0.582797,-1.818742,4.872468,2.554633,2.946603,6.940669,-1.956441,-9.768811,0.036102,4.812373,3.098310,7.206530,-9.552168,-1.901632,5.377737,9.485816,-4.476000,-7.194338,-6.284086,-5.270192,2.246814,-5.565175,-5.586405,1.536052,3.807827,-7.421703,2.234764,-5.731161,3.016679,-4.070561,-0.063693,-7.898613,6.026071,-6.725777,-2.808551,-8.962002,-0.547976,-6.529786,4.774044,3.357187,-0.594153,8.992978,0.156709,-9.570596,-1.315920,1.000681,-6.260171,7.811780,3.479483,0.151744,-9.286052,5.508216,2.131869,5.612168,5.273427,8.566896,7.704761,-9.117407,-7.129158,5.712967,3.386220,-7.623929,-0.777642,-8.549293,7.542905,-0.237919,2.632259,4.853211,4.660848,9.802674,1.326887,-1.118910,3.172221,4.796422,0.432869,-6.652025,2.510532,8.326864,-4.380215,5.978888,0.235168,2.281015,-4.592523,3.419763,-8.389623,-5.462851,-0.198773,-5.895128,0.314477,3.704979,-9.703545,-0.906891,-4.582741,-0.590857,3.061894,3.818219,7.743050,4.844859,8.594303,1.745940,1.952056,3.015810,-7.054649,3.926313,8.191423,5.327228,-8.422950,9.559386,0.208368,0.657043,-8.519422,4.386947,3.531545,9.505729,-4.701738,-8.017132,-4.829301,9.562991,0.265026,7.886567,1.555775,0.938368,-1.661923,7.176922,-9.421288,-0.263575,6.408590,-7.480067,-4.011346,6.560533,-7.161499,-8.267438,1.145239,6.825612,-3.777468,1.425988,7.996813,6.833206,9.330878,9.285924,8.436191,-4.399326,-4.731587,6.262259,-5.522647,5.341042,5.486792,-9.890849,6.707031,3.697795,-5.236525,4.533926,7.848521,1.583677,9.794050,-3.300643,-0.038663,9.099905,7.614091,0.713664,7.617676,-0.376093,-5.015683,9.505443,7.730924,2.261818,7.439827,2.243654,6.600328,-4.754829,-4.747358,2.469876,3.617983,7.113569,4.245503,1.482938,2.071661,5.890476,-7.728916,9.746617,-5.913764,7.224848,9.979364,-7.507535,4.572590,-7.498744,-9.639642,-4.638087,-5.741122,-3.847585,-5.103697,5.867834,-3.622069,9.038724,4.375509,-9.206082,1.093137,-8.590311,-4.920681,6.629322,7.390906,3.737745,8.675246,8.611010,9.525603,6.609086,2.960407,7.419602,-8.199517,-0.965943,1.928035,9.867083,-2.625062,-3.323744,-6.677091,-2.230318,9.425406,3.719269,2.192678,-7.975914,5.228429,-1.044425,-7.129782,-7.277850,-8.535334,7.463948,2.112971,-7.984783,-3.272432,-0.717090,-4.288101,-2.962709,6.959654,-7.855985,-5.251776,5.742917,1.480534,3.643768,-0.157320,-7.693514,-7.086074,-0.395420,-0.251517,-1.775022,8.484725,4.623984,1.560942,8.659993,-5.827877,-8.331104,3.503531,-0.746490,8.395323,-0.831373,9.194430,9.550091,-8.999337,2.468413,-9.047268,3.573251,-2.217284,-7.124503,-7.211565,-9.598110,9.706354,-3.587529,0.883658,1.889813,-1.472782,-2.961099,-4.162307,5.896563,3.468691,2.569754,-2.089364,-5.745396,-6.893014,2.282927,-4.905655,2.583043,-7.265406,-3.880868,-6.102509,-3.133548,-3.061351,-6.644035,-0.045317,4.102765,-7.491926,-7.039264,-2.226112,6.370274,0.739461,7.024736,6.256523,5.033734,-2.872857,5.438991,-6.818356,7.154098,-0.124813,5.555538,-7.912576,-0.292090,-8.421727,8.816950,0.981704,5.723689,8.527066,2.105392,1.449713,-7.208477,-8.036329,-1.892614,-5.300448,1.699136,2.494735,3.658003,-1.926199,-7.807358,-3.882643,4.309603,-8.299832,-9.286885,3.632762,-5.565184,5.887431,2.287719,-4.467401,-6.101610,8.634262,0.751769,-2.696852,-1.246069,5.449639,5.406962,9.926540,8.863598,6.761977,4.320528,5.909865,6.112874,0.758406,0.547487,-0.613364,-4.135731,3.126264,-9.247247,-4.637313,-4.544496,1.867829,-3.118592,-1.381372,9.802194,0.974578,3.282105,-0.056413,7.926360,8.067883,-7.482341,-4.019188,0.734564,-4.130183,-9.887390,0.347939,-5.859250,-9.509225,3.582342,9.029232,0.913154,8.513932,4.851154,9.094639,1.331074,8.040890,1.552089,-9.773543,-1.669064,-7.408536,-3.190635,7.807002,7.777586,7.835597,3.944649,7.874240,0.792300,0.672930,-0.722890,-3.512427,2.851072,0.526496,0.742793,3.079613,0.727887,-1.355310,7.072745,-1.435044,-0.661540,5.533704,-0.614734,-3.863007,-8.864432,9.273359,-8.318617,-6.492758,1.689908,-6.044698,-1.245590,-1.725870,-3.547573,1.459099,7.167059,-6.844880,3.224299,5.834796,-7.735660,5.021971,8.128720,4.848606,-6.969894,1.486630,-5.140673,4.481377,0.124295,-4.696946,-4.330225,-6.307092,8.716126,0.322024,-9.145627,8.285757,-0.110611,7.190498,8.451164,-5.467636,8.320043,8.992926,0.261969,-7.481008,1.012617,-7.470436,-3.943408,7.642933,2.017634,-5.086089,4.113041,-3.532473,-4.686261,0.857241,1.457929,-6.570541,8.321579,-0.337790,-1.559119,4.531312,9.663854,3.289314,-7.123612,8.659135,-2.517697,-9.426361,3.060031,6.852071,-3.803714,4.671969,-1.665372,-6.380659,-7.464812,2.508754,1.773497,-1.344237,-5.166215,-7.109303,-0.098039,7.785015,6.428291,-8.226695,-6.179044,7.152994,-0.342132,-2.642402,-9.947581,-4.915741,7.177340,0.515675,-5.556628,9.432931,2.070822,-1.601633,-5.529181,-0.140354,5.956978,-3.490062,9.430292,-4.686668,6.545937,-8.483141,-7.889491,-6.698387,-3.219989,-2.097699,6.294703,-5.911508,-6.401874,-2.634627,-7.473541,-4.484965,9.184218,4.869255,-2.526087,-3.172466,7.364832,6.092938,9.113268,8.303009,4.392979,-2.707146,-5.619832,-5.140558,5.181149,6.493253,6.324621,6.891288,-1.682380,7.895750,8.670293,-5.810859,1.320964,-3.490690,3.316728,-1.337067,9.871627,4.035716,8.946678,-2.537507,-2.798042,-6.820317,-9.277688,-1.481515,9.100391,5.544984,1.800523,9.199018,-0.436191,5.787088,7.435200,-3.907006,8.936892,-2.614706,7.070822,2.145362,-4.385795,-5.127083,-7.171924,-4.680135,-3.355977,-3.880537,5.889623,-2.534613,5.808511,-6.453419,-6.755276,5.969842,-8.170419,-0.545217,4.246285,-6.769431,-4.932152,-9.974873,4.036930,-5.792687,-9.529871,-7.946256,-6.732769,9.025810,-8.640652,-0.769390,8.262574,-2.446719,-1.463176,0.846406,9.323311,5.107246,-9.363554,-0.572497,-3.020375,-2.048689,4.201618,0.508834,7.801402,4.814409,-6.910316,-7.262005,6.296337,3.562647,-3.953526,8.523182,-0.708411,3.411163,-1.601737,8.710929,-3.877490,-0.814782,-4.389679,7.622057,-1.379743,0.743564,-9.812390,-4.697910,6.733034,8.709713,9.426924,4.296161,-1.552678,-9.067408,-3.461651,0.012088,2.691373,-6.643513,8.820206,-3.422219,-5.365600,-3.297318,2.645529,-5.058760,8.340707,-7.048894,9.375566,-7.104740,-0.440163,-6.548627,-9.236062,2.253489,3.901025,5.121295,0.961247,5.197092,-1.643158,8.476365,-8.019177,-9.622440,5.375920,-7.293404,-4.740684,-0.222705,-1.285206,7.166184,1.835084,-8.868438,-8.094461,0.337721,1.560736,4.467510,9.580390,-4.381052,-3.529962,5.409835,0.278098,-1.768933,-4.022995,0.843262,-7.602503,-6.481197,0.873799,-7.629911,-9.313890,-2.420974,-2.941030,3.782546,-9.364810,-0.064456,-1.723067,-4.268969,1.346015,9.545763,-8.017087,-5.859854,4.567824,-1.952509,-8.788810,-8.906725,-9.340436,-1.630255,-4.919434,-4.275601,8.510703,-0.118419,-4.088425,-0.944846,2.128213,-5.144045,-5.808571,-8.598626,6.766255,-5.302015,-0.353402,-2.014865,1.735608,9.689119,5.833298,-1.660897,-0.262922,-8.030109,-4.777686,7.314763,4.909735,2.171738,-6.161359,8.993309,-6.424571,1.043070,9.308051,9.828098,0.897438,-3.265890,3.438493,6.100082,9.711642,-3.554455,-3.415366,-6.022753,3.120444,3.748277,0.525702,4.879693,5.445043,-5.165122,7.040717,1.854862,0.434719,8.033657,8.267632,-2.081754,-7.009256,-1.329943,-0.283938,-3.900503,-9.660560,-8.116006,1.198698,0.341093,-1.732654,9.204847,7.061446,-8.710662,-4.437793,9.937565,6.409137,6.501682,1.158148,-7.036975], dtype = "float64")#candidate|7440|(1638,)|const|float64
call_7437 = relay.TupleGetItem(func_3963_call(relay.reshape(var_7438.astype('bool'), [11, 12, 6]), relay.reshape(var_7438.astype('bool'), [11, 12, 6]), relay.reshape(var_7439.astype('float32'), [780,]), relay.reshape(const_7440.astype('float64'), [1638, 1]), ), 0)
call_7441 = relay.TupleGetItem(func_3969_call(relay.reshape(var_7438.astype('bool'), [11, 12, 6]), relay.reshape(var_7438.astype('bool'), [11, 12, 6]), relay.reshape(var_7439.astype('float32'), [780,]), relay.reshape(const_7440.astype('float64'), [1638, 1]), ), 0)
func_4101_call = mod.get_global_var('func_4101')
func_4104_call = mutated_mod.get_global_var('func_4104')
var_7452 = relay.var("var_7452", dtype = "float32", shape = (6,))#candidate|7452|(6,)|var|float32
var_7453 = relay.var("var_7453", dtype = "float32", shape = (720, 1))#candidate|7453|(720, 1)|var|float32
call_7451 = func_4101_call(relay.reshape(var_7452.astype('float32'), [6, 1, 1]), relay.reshape(var_7453.astype('float32'), [6, 15, 8]), )
call_7454 = func_4101_call(relay.reshape(var_7452.astype('float32'), [6, 1, 1]), relay.reshape(var_7453.astype('float32'), [6, 15, 8]), )
uop_7455 = relay.cosh(var_7453.astype('float32')) # shape=(720, 1)
bop_7470 = relay.right_shift(var_7453.astype('int16'), var_7439.astype('int16')) # shape=(720, 780)
output = relay.Tuple([uop_7430,call_7437,var_7438,const_7440,call_7451,var_7452,uop_7455,bop_7470,])
output2 = relay.Tuple([uop_7430,call_7441,var_7438,const_7440,call_7454,var_7452,uop_7455,bop_7470,])
func_7486 = relay.Function([var_7429,var_7438,var_7439,var_7452,var_7453,], output)
mod['func_7486'] = func_7486
mod = relay.transform.InferType()(mod)
mutated_mod['func_7486'] = func_7486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7486_call = mutated_mod.get_global_var('func_7486')
var_7488 = relay.var("var_7488", dtype = "float64", shape = (3, 15, 12))#candidate|7488|(3, 15, 12)|var|float64
var_7489 = relay.var("var_7489", dtype = "bool", shape = (792,))#candidate|7489|(792,)|var|bool
var_7490 = relay.var("var_7490", dtype = "float32", shape = (780,))#candidate|7490|(780,)|var|float32
var_7491 = relay.var("var_7491", dtype = "float32", shape = (6,))#candidate|7491|(6,)|var|float32
var_7492 = relay.var("var_7492", dtype = "float32", shape = (720, 1))#candidate|7492|(720, 1)|var|float32
call_7487 = func_7486_call(var_7488,var_7489,var_7490,var_7491,var_7492,)
output = call_7487
func_7493 = relay.Function([var_7488,var_7489,var_7490,var_7491,var_7492,], output)
mutated_mod['func_7493'] = func_7493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7504 = relay.var("var_7504", dtype = "float64", shape = (15, 11, 3))#candidate|7504|(15, 11, 3)|var|float64
var_7505 = relay.var("var_7505", dtype = "float64", shape = (15, 11, 3))#candidate|7505|(15, 11, 3)|var|float64
bop_7506 = relay.floor_mod(var_7504.astype('float64'), relay.reshape(var_7505.astype('float64'), relay.shape_of(var_7504))) # shape=(15, 11, 3)
func_4101_call = mod.get_global_var('func_4101')
func_4104_call = mutated_mod.get_global_var('func_4104')
const_7518 = relay.const([[-4.939317,-8.884027],[-8.328079,0.800313],[8.810679,9.695153]], dtype = "float32")#candidate|7518|(3, 2)|const|float32
const_7519 = relay.const([-0.414793,6.030251,3.508515,-5.583547,3.207786,-1.818979,5.841067,1.517654,-5.567969,-2.983146,-1.229540,6.617172,0.135205,-0.652455,6.225102,-9.574815,-3.380280,-2.954064,-8.553113,4.131670,-5.062670,6.026587,8.853479,3.519300,1.642631,-3.894131,-2.393915,7.245576,-6.549639,-9.396949,3.328630,-7.917038,-6.191341,0.288831,0.491967,-1.385804,-8.692261,8.870093,9.509416,2.135382,-1.487741,-1.795674,-2.684936,-4.279143,-7.803642,-8.025742,-6.346939,3.166440,9.240236,1.793919,6.042436,-3.289288,-1.214344,1.436142,-5.565482,-5.942803,-5.678068,0.367415,-5.098678,-7.907822,-4.980345,-0.722481,1.837831,-8.708545,-4.584325,1.658196,9.494108,-3.816109,2.791218,6.110643,-0.699608,0.669302,8.164309,0.324053,-5.454435,-8.972399,-5.303388,9.893671,-0.225253,-1.376882,-8.557973,5.276463,9.976869,0.138941,5.027436,1.849989,-8.208907,8.457943,1.440667,8.004694,-4.382735,3.315209,-3.027718,-2.620498,-4.981064,0.984616,-8.238303,-3.433975,-1.257437,-5.533291,0.017895,-0.340228,-4.682789,1.171033,-1.017081,-9.164224,-3.160884,-4.758880,-5.318924,0.099311,2.773622,2.026872,9.351077,-9.724795,8.865478,-1.324005,-0.520793,-4.549949,-4.690425,-2.439231,-0.243455,6.100128,-4.583521,3.869991,-6.658603,1.618808,-2.723982,1.963363,6.764126,7.725342,-7.627255,2.822989,-7.261365,-3.113938,5.377212,-7.342886,4.857827,-9.947931,9.860476,-9.528450,-0.174796,8.159383,1.012586,7.911519,-8.202701,9.776400,-4.393339,6.085659,2.520196,9.772694,4.823112,-0.545062,1.531364,-1.853006,5.579982,-3.686634,6.255607,-7.778320,-0.331637,6.836054,-5.454815,7.702407,6.962538,-6.110364,-8.833401,2.992186,9.503696,-4.048324,-6.114496,7.763781,-9.840192,8.654599,7.765207,-7.750831,8.766884,7.502609,-8.155053,-3.690514,2.612950,-7.579836,-6.184437,0.245739,-3.497463,-3.239041,3.159472,-2.416518,0.303885,7.850428,4.961568,-3.788677,4.320066,-7.070941,6.633040,9.331911,8.989417,-7.040621,1.782246,7.370188,-1.641971,-3.086185,4.910948,1.394164,-0.820847,-6.170797,-7.609931,9.374419,-4.125297,3.290239,-9.644420,-0.329269,4.086793,-9.398481,2.877571,-8.087757,3.028921,0.082952,0.589530,-9.901521,1.345317,1.743492,8.840280,8.909908,-0.623167,7.783857,9.965848,6.078522,9.368087,0.790949,5.710610,-7.439602,-8.125335,-2.876935,-4.344886,7.118219,4.837111,6.391836,8.230391,-0.563388,5.865593,4.130537,4.185116,5.866050,-4.723529,2.403487,-2.892277,-4.980525,4.566807,-4.149519,4.116027,9.489783,-8.232811,-2.891532,9.231071,-6.360952,-6.018550,7.080798,-2.371321,-3.789703,8.891248,-7.566360,2.398843,-1.599337,4.164149,-1.436751,7.289096,4.080908,-3.161173,0.828344,-7.058552,0.424714,7.595963,0.550687,1.004780,-4.174182,7.408933,9.781910,-6.694012,-6.031223,-7.206378,-9.941810,-2.374822,-3.402606,7.138487,4.786116,9.761723,9.628431,9.522239,-6.577738,-5.614934,-2.998091,7.742139,6.152844,3.603495,-1.627553,-1.193164,6.977344,-5.104771,-6.203431,-7.576484,-9.750608,-3.174791,-9.984942,-3.579625,-3.977243,-4.043232,-8.724531,-6.691058,7.992270,1.705716,-8.258023,-4.525490,5.458447,2.369262,9.466059,1.112865,1.768040,0.994176,5.296669,-5.362169,-4.547499,-6.728945,-9.846990,-0.039659,0.179549,5.793824,-2.106477,9.569945,6.873916,5.445927,-8.025130,-2.234035,-6.075345,-0.152091,5.790474,5.914947,1.437779,-2.908281,9.630361,6.057552,0.079324,-2.316452,-9.899775,9.831930,-9.600503,-7.942983,4.070517,-0.170772,-0.126310,9.292585,1.314600,-8.210781,7.487420,-2.024637,3.324213,3.957392,0.151925,-0.746740,4.337655,7.726781,-8.550498,7.175394,-0.857897,0.254828,-5.351681,-3.539699,-6.379269,-0.324435,5.319304,-9.863297,-4.106133,0.610336,5.262832,5.935094,7.438865,-1.335972,4.888233,6.902141,5.512398,-7.132170,-3.694141,3.863113,4.056313,-7.495107,-3.157572,-5.385768,-3.020333,-4.132829,2.056286,-3.684131,-8.850085,4.393504,-0.840854,3.870431,6.870424,4.271405,-9.514239,-7.256189,-5.145596,6.550505,7.408097,9.956735,3.227934,2.685793,-8.238622,-3.777251,-4.670271,-5.557146,-4.881626,-4.956235,4.669103,2.495130,-3.443685,-8.939166,-7.950426,-1.606471,1.651847,0.505927,7.432022,5.651786,0.195576,7.437992,8.932540,-7.240023,5.336098,-4.004893,1.787335,5.045306,3.641793,-9.338137,6.359495,-0.623333,8.336651,2.821214,-0.175332,-6.598016,-4.178473,-8.541115,4.723118,-6.308260,3.551350,4.424401,-3.268715,7.454561,-2.689342,-2.650666,-8.664744,-6.402850,-3.780491,-2.328568,5.478709,-5.488181,-3.067514,4.550991,-5.219914,1.197480,-3.055226,-5.316108,6.278265,8.316945,2.413359,2.762840,-2.783095,5.859288,7.187993,4.808667,-7.450360,5.228643,-3.227442,-9.026401,-1.365115,6.387332,1.622085,9.421139,6.947364,-5.350052,-7.443584,-6.858623,-2.773388,-9.657763,5.093127,-4.236650,7.706261,1.091839,-6.091721,-6.206984,7.362843,-7.211090,0.754055,5.446790,-4.520409,-9.152488,1.053910,3.443719,-1.333074,4.471334,6.874237,-8.080522,4.065678,9.809628,2.382162,-1.371876,0.060920,1.681784,8.064921,2.605428,8.291609,-6.085671,-3.234221,-5.509570,7.423217,-9.394919,1.803780,-2.304115,-4.495720,-0.436595,9.827480,-0.907211,3.032117,-1.811867,-7.703798,-3.936936,1.857292,-8.437245,-3.892596,-1.761337,7.467540,9.071225,4.451656,8.449179,6.077430,-6.826197,3.001576,3.628047,-5.288518,3.181176,8.612598,-3.757164,-2.142436,-4.747363,9.410762,9.756603,8.679984,6.335078,-7.751387,2.679368,5.111690,-2.126052,-3.650323,7.428996,9.366978,-0.167601,0.703165,6.799298,4.323776,-4.520103,0.807010,3.940802,-1.737214,4.466959,-0.817954,-2.088538,-8.375932,-3.624234,-2.895626,-3.787420,-3.868845,-7.528027,7.300114,7.765633,1.696032,-8.608581,3.936102,-9.575971,-8.817152,-4.178175,-0.628742,-8.439582,-3.667231,8.064929,4.389924,-0.565195,-3.201744,4.653824,1.535982,7.126334,-8.643497,7.062252,5.767226,-7.716573,8.655211,-5.098326,6.354859,2.933621,4.360825,4.630889,-7.634921,-4.745956,-4.323656,-9.186149,2.069186,9.124950,7.243656,1.092223,-9.761851,6.386673,9.142326,3.456242,-4.687489,-7.130724,4.106380,-5.281603,0.077827,3.194224,-6.038844,5.023446,7.812048,-6.140713,8.015150,2.589628,6.486805,-4.800868,3.545932,5.984874,-1.601127,8.633629,4.742744,0.784945,1.087113,6.389371,-4.237130,7.205695,7.334836,9.154246,1.997050,-1.349411,8.657002,9.346239,-2.090431,-8.057698,-7.677859,-9.949122,-3.459110,4.149063,-3.440728,4.001451,3.316777,-9.986855,-0.859224,-3.264876,4.784775,-5.010440,1.340930,9.438509,0.739999,-0.058563,7.762365,4.338118,-9.583295,6.832781,7.846216,7.591652,2.682119,9.038052,7.111456,-6.563916,-5.136502,7.577986,-5.648434,1.942447,7.941323,-9.216070,9.722398,-3.904156,-4.324470,-7.603420,-6.251822,-7.147706,-9.388037,-7.528764,2.382187,-6.210140,5.321214,7.229028,-5.755617,2.102575,-8.149288,-1.345951,-5.200672,5.548016,5.841794,-7.502204,-5.136208,8.572746,9.474670,-0.332577,-1.982810,-4.188060,5.461964,-9.335420,9.930497,6.299277,8.698335,4.375570,-8.940217,-3.329722,-2.888643,8.086052,9.377704,5.466152,-0.333919,-9.225258,-9.381605,1.277912,-3.804114,9.887930,6.976097,-0.694353,5.187376,-4.783907,-9.116590], dtype = "float32")#candidate|7519|(720,)|const|float32
call_7517 = func_4101_call(relay.reshape(const_7518.astype('float32'), [6, 1, 1]), relay.reshape(const_7519.astype('float32'), [6, 15, 8]), )
call_7520 = func_4101_call(relay.reshape(const_7518.astype('float32'), [6, 1, 1]), relay.reshape(const_7519.astype('float32'), [6, 15, 8]), )
func_865_call = mod.get_global_var('func_865')
func_868_call = mutated_mod.get_global_var('func_868')
const_7529 = relay.const([-1,-7,8,-3,-8,-10,9,4,3,-6,-7,-10,-9,-5,10,-6,8,7,-9,-1,-1,-7,6,-8,3,9,10,-3,4,-1,4,3,-3,8,-3,7,9,-6,5,5,7,-10,-5,5,-2,4,-6,-10,9,10,-6,-8,3,3,10,-8,3,-4,-2,8,7,-2,8,3,9,-1,-10,-3,5,-3,-5,1,-8,6,6,-7,-5,8,-10,-1,4,-3,3,7,1,2,-10,4,2,9,-4,-2,5,2,-1,-2,5,9,-3,-5,-6,-10,3,-4,4,2,-10,-6,-4,-10,-1,10,-10,-5,5,7,8,6,1,-6,-5,-4,-5,-2,9,8,6,8,-8,9,3,-5,-5,-4,-2,3,3,2,8,-10,8,8,5,10,-1,7,6,6,-2,10,-5,1,10,5,-9,-8,-3,1,-4,-3,1,-8,-3,-10,7,1,1,-9,7,-3,-10,-3,7,3,6,-4,-8,-6,9,6,-4,-7,8,9,9,-2,-1,2,-1,-9,2,6,8,-1,-9,-4,-3,-9,-6,-6,8,-3,-3,7,1,2,9,-3,1,-5,-2,-3,-9,-6,1,-1,-8,-10,-1,-4,4,6,-4,-2,7,-5,-6,4,9,10,3,-8,6,-3,-4,-9,-3,-2,8,-1,-1,3,-5,3,-8,5,-4,2,1,-9,2,-5,-5,-1,-3,9,1,3,9,-1,1,-10,-8,-9,10,8,-7,7,2,-6,-4,-10,7,2,-3,4,-8,-1,7,-9,-7,8,-10,6,5,-8,7,4,5,-1,-9,-10,-9,5,-2,-4,-1,-5,-9,6,4,-3,-4,-6,-4,-5,10,-2,-10,-7,-3,-3,3,-7,8,-4,-7,-3,7,10,-6,6,4,-5,7,7,2,6,8,6,7,8,1,7,-3,-9,5,5,5,6,-1,-4,2,8,5,6,6,-8,-7,2,5,9,9,1,-3,10,9,8,-5,-3,-10,4,5,2,-10,-4,-8,-7,6,-2,5,4,7,-7,-10,-5,-1,8,-3,-2,3,-10,-8,7,-6,-2,3,7,9,6,-4,10,10,-3,-6,-7,-10,1,3,1,-9,10,-10,3,3,-9,-10,4,4,-6,2,-1,-10,10,2,-5,-8,-2,4,-8,-7,-3,5,-9,-5,-1,-8,-1,5,-4,-5,-8,5,-1,-9,5,-5,5,6,-1,8,-7,-4,-9,-2,-8,3,1,-7,-7,3,-4,-10,10,-10,-4,3,-9,4,6,8,-4,-1,8,-1,-6,-9,-5,-7,3,-6,-8,-2,5,-2,1,-4,-2,2,-5,-7,7,9,-2,-9,-4,6,3,8,4,-9,-1,-2,10,-4,-8,3,-6,-7,7,-7,-10,-2,1,-1,9,9,-2,2,6,-4,5,-2,-10,-1,-7,-7,-1,2,-10,-6,10,6,8,-4,1,3,-7,-1,3,1,2,9,-8,5,1,-6,7,-4,9,-3,10,-10,-10,2,-5,-5,5,-8,2,-3,-5,5,1,8,1,-4,-7,6,5,1,2,-7,-10,10,-8,-5,9,6,-1,-2,8,-1,-10,4,-4,-7,3,-3,-9,-4,-3,-2,1,4,4,4,2,1,-4,-9,-2,-7,8,-7,-3,4,10,-8,-5,2,-8,3,6,4,-9,-10,-7,7,9,4,4,7,5,-4,-10,10,-7,-10,7,2,-6,8,-3,1,-10,5,-5,8,2,8,2,-3,-1,1,6,-5,-10,-8,-9,-7,5,2,8,8,6,1,-4,-7,7,2,-5,-8,9,10,-8,-6,2,-1,-8,8,6,1,6,-4,10,-8,10,-4,5,-6,2,4,-10,2,-5,-3,4,3,-4,2,-3,-2,8,4,9,-4,2,5,-4,-1,1,-2,-9,-2,-1,8,-7,-7,-6,8,-10,6,-2,-3,10,-9,-9,-4,5,-1,2,-10,-10,4,7,1,4,-9,-6,5,8,7,-5,6,-8,-6,-8,9,-5,-6,-5,-10,-2,-5,3,6,-4,-1,-3,6,-5,4,-3,3,-8,-10,4,1,-3,6,-6,9,7,-8,-10,4,9,1,2,9,1,-4,3,4,-2,2,-5,10,5,-2,2,-2,-5,4,5,9,5,4,7,-2,10,-8,8,-7,-8,8,7,1,-1,9,-8,-3,-2,-1,-4,-9,-8,9,7,-7,-5,4,-4,-3,-2,2,-1,-5,3,1,6,4,-6,-7,9,9,10,-7,10,1,2,-4,-8,7,2,1,-7,3,7,10,8,3,3,-2,10,5,-9,-7,7,-10,-2,-10,-5,-4,-4,2,2,-10,5,-9,9,9,4,-5,-1,-3,-6,-4,5,5,10,3,-3,10,9,3,3,4,-7,10,1,-1,-6,8,-2,-3,2,-6,-1,1,6,-5,-3,8,-5,-7,2,5,-4,-9,8,9,-10,-3,1,-10,-7,6,6,-1,2,9,-10,2,-7,-8,-7,-5,2,-9,-3,2,5,-1,1,4,-1,-9,-7,-5,-6,-3,10,9,7,4,6,-9,3,-4,3,-2,-10,7,4,6,-5,-10,-7,6,6,2,-8,-4,5,7,-7,6,10,7,-7,3,-1,6,3,-10,4,2,6,-2,6,-1,-8,10,-10,3,9,-9,8,-8,1,-9,-1,8,-7,-8,-10,7,6,10,-4,3,-9,-4,10,-8,-10,-6,8,-8,-4,9,7,-6,3,7,8,-1,-2,2,6,3,-8,7,-4,-10,-5,-4,5,5,5,5,4,8,10,-10,-1,2,-5,-5,8,-7,4,-5,-9,-9,2,8,8,4,6,-4,-8,-6,5,-1,-7,-6,-8,-4,-1,3,-4,9,-5,-10,6,9,10,8,9,10,6,10,7,2,4,-1,-6,-2,3,1,-8,7,8,-5,5,-4,3,6,6,8,-3,2,-9,-10,8,4,-4,8,-6,-8,10,3,-5,-1,-5,3,-8,-7,9,9,-1,-7,-6,6,8,5,5,9,-5,1,9,-7,-8,2,-4,-9,4,9,-9,-3,8,-4,4,-4,-4,-8,-8,-10,3,-8,-4,1,2,-9,-4,9,10,4,-7,-10,3,5,-5,10,8,-5,4,4,6,9,8,2,9,10,4,6,2,-1,-6,-6,-10,1,-7,-1,10,4,6,-4,10,3,-5,-3,2,-3,6,7,10,-9,-4,-3,8,10,1,-3,1,-7,6,-5,-6,1,10,6,-5,-9,5,1,7,-9,9,-1,9,7,10,6,-10,7,-2,-10,-10,-5,-2,10,2,-10,-5,-1,1,-10,2,8,-2,4,2,2,-4,8,-7,-5,-2,-10,-6,-9,-3,-9,-4,8,5,-9,-3,-8,-10,-3,7,-6,1,-3,-10,-5,3,7,2,-3,-5,-4,5,-7,8,-2,8,-1,-3,-7,1,6,-9,-1,-8,9,-1,6,-5,-3,-5,-6,-10,-3,3,7,-3,8,-6,2,-7,1,-4,-6,-2,-1,-1,-9,6,-5,1,5,-5,-7,-3,-6,1,-10,4,3,-4,-4,-9,-7,4,-6,-6,-2,-3,3,-7,-8,-6,-3,-6,-10,-9,3,-7,5,-2,8,-3,8,-9,-3,10,7,2,10,-6,-6,3,5,2,3,4,-4,4,-10,-3,-1,4,10,-10,4,1,3,1,-5,-9,-9,-10,7,-2,-6,1,9,9,-3,-2,-5,1,8,-5,5,9,-6,-4,4,-3,5,10,-1,-7,-8,-5,3,-10,-8,-4,-10,6,4,10,-9,10,8,8,-9,-6,-6,-9,-7,-8,3,-7,-4,8,6,-8,4,7,-6,-1,-3,-3,8,-6,2,-1,7,-9,-2,1,-6,10,-4,1,-5,-6,-9,-7,-2,3,6,-10,-1,-4,-5,-10,-1,-10,1,-5,-4,-5,2,2,-5,-10,9,4,9,5,-2,-5,-7,-9,8,5,7,-7,-1,4,3,7,-4,-4,-10,4,-7,-6,-6,5,7,8,-1,2,1,8,-10,8,7,-6,2,-8,3,-5,6,-4,9,6,6,-2,6,3,-6,-3,-2,7,-10,-4,8,1,1,-7,-9,10,5,-4,-3,-8,-7,-1,1,-6,-4,4,-2,-6,-2,3,5,7,-9,-2,8,-3,-10,-6,6,-2,4,2,2,-9,10,8,-7,-7,5,-9,7,10,6,-10,9,3,-9,9,5,-8,10,-10,10,-3,7,10,4,3,9,2,-7,-3,-4,-8,10,1,1,-7,1,5,-2,1,-6,-5,10,-5,6,1,-10,-6,4,-2,-3,3,-1,-1,5,8,-6,6,-2,-1,9,-6,-1,-1,4,-10,-4,-10,-3,-7,-10,-10,8,4,-7,8,-9,6,9,-6,3,-9,-9,2,-7,-8,4,5,6,-1,4,-10,4,-4,-5,7,6,-5,-2,-7,-7,-7,-5,-2,4,3,-3,-3,-8,1,9,3,3,-10,-6,7,4,-4,-8,7,10,-10,-2,1,1,-5,-1,6,8,-10,-5,-8,10,-7,8,8,5,-10,-10,6,4,-2,2,8,5,6,4,-8,-8,3,-10,-4,1,-9,7,-2,9,-6,3,-4,-4,8,-6,4,-3,10,10,-6,9,1,3,9,-1,-4,10,3,-8,-4,9,-8,7,-4,3,-9,5,10,-5,-1,-5,3,5,-1,-8,7,5,10,5,-10,-5,-1,-8,10,2,-4,-6,-2,2,4,-10,-5,-8,6,10,10,-4,-6,3,-10,7,10,8,4,9,7,-1,-4,-9,4,8,-3,-6,9,-4,2,10,5,-8,-7,9,6,-10,10,-3,-9,10,-3,2,6,10,9,4,9,5,8,-4,3,-5,1,9,8,1,-8,5,1,5,-5,-6,-10,-2,2,-5,10,-1,-9,-1,2,10,7,5,1,7,-9,-2,-3,-7,2,1,-3,3,3,-9,-5,6,-4,-9,-2,-3,-1,-10,-1,9,-1,7,3,6,-3,-10,3,2,8,2,-10,-1,-10,-5,-9,8,7,6,5,-3,-6,-9,-10,6,-2,9,3,-5,2,6,6,-3,-9,-10,-10,5,9,-9,-2,-8,5,-8,-9,3,-3,-3,3,10,5,-8,-7,3,4,-5,-6,5,-2,2,-6,-3,4,-5,-9,10,-9,1,1,9,5,-6,-1,-4,1,-6,-1,-5,-2,3,-9,9,3,-1,-3,2,8,-1,-8,-4,3,8,-9,-8,-5,-6,5,-10,3,-3,-6,6,-6,5,-4,-4,8,-2,7,10,10,-6,-9,-3,10,1,-4,1,6,3,6,-8,1,3,-9,-10,9,5,-2,2,-6,-1,-10,10,10,-5,-1,1,2,-10,7], dtype = "int64")#candidate|7529|(1960,)|const|int64
call_7528 = relay.TupleGetItem(func_865_call(relay.reshape(const_7529.astype('int64'), [14, 14, 10]), relay.reshape(const_7529.astype('int64'), [14, 14, 10]), ), 0)
call_7530 = relay.TupleGetItem(func_868_call(relay.reshape(const_7529.astype('int64'), [14, 14, 10]), relay.reshape(const_7529.astype('int64'), [14, 14, 10]), ), 0)
output = relay.Tuple([bop_7506,call_7517,const_7518,const_7519,call_7528,const_7529,])
output2 = relay.Tuple([bop_7506,call_7520,const_7518,const_7519,call_7530,const_7529,])
func_7534 = relay.Function([var_7504,var_7505,], output)
mod['func_7534'] = func_7534
mod = relay.transform.InferType()(mod)
mutated_mod['func_7534'] = func_7534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7534_call = mutated_mod.get_global_var('func_7534')
var_7536 = relay.var("var_7536", dtype = "float64", shape = (15, 11, 3))#candidate|7536|(15, 11, 3)|var|float64
var_7537 = relay.var("var_7537", dtype = "float64", shape = (15, 11, 3))#candidate|7537|(15, 11, 3)|var|float64
call_7535 = func_7534_call(var_7536,var_7537,)
output = call_7535
func_7538 = relay.Function([var_7536,var_7537,], output)
mutated_mod['func_7538'] = func_7538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7574 = relay.var("var_7574", dtype = "bool", shape = (9, 2, 1))#candidate|7574|(9, 2, 1)|var|bool
const_7575 = relay.const([[[False,True,True,False,False,True,True],[True,False,False,False,False,False,True]],[[True,True,False,False,False,True,True],[True,True,True,True,True,False,True]],[[True,True,True,True,False,False,False],[False,False,True,False,False,False,False]],[[True,False,True,False,True,False,True],[True,True,False,True,False,True,False]],[[True,False,True,False,True,False,False],[True,False,False,True,False,True,True]],[[True,True,True,False,False,True,False],[True,True,True,True,False,False,False]],[[False,True,False,True,True,True,True],[False,True,True,True,True,True,True]],[[False,True,False,True,False,False,True],[False,True,True,False,False,True,True]],[[False,True,True,False,False,True,True],[False,False,False,False,True,False,False]]], dtype = "bool")#candidate|7575|(9, 2, 7)|const|bool
bop_7576 = relay.logical_or(var_7574.astype('bool'), const_7575.astype('bool')) # shape=(9, 2, 7)
func_4812_call = mod.get_global_var('func_4812')
func_4815_call = mutated_mod.get_global_var('func_4815')
const_7582 = relay.const([[4.138917,0.405135,-7.909083,7.822783,7.481658,0.243567,-6.502000,5.929466,6.958722,1.088541,-2.847505,-6.849151,6.148509,-0.419268,2.609521,-4.040875,3.214732,6.197163,2.185608,-4.458510,5.397319,-0.045076,-0.244393,1.871409,6.168142,-5.650845,9.460769,3.014202,5.112252,-0.274035,1.268473,3.048982,-2.969724,2.951116,-1.891322,6.090180,3.184646,5.030288,7.471332,-0.466234,4.688888,-2.950198],[8.866343,4.632904,5.508264,0.436963,6.929466,2.203836,-4.254616,0.760559,2.085149,-6.435794,-6.820498,-5.081015,-1.510149,-1.952242,0.926980,3.762726,-0.996365,6.111759,-2.194971,9.259908,-3.478605,-6.832809,5.357508,3.100400,-9.484888,4.538414,5.246017,-2.741526,-5.446805,-1.908846,-6.267472,1.619026,-1.445719,-8.154944,2.815522,-0.422987,6.868177,-0.866406,-7.812183,0.765011,7.579076,0.849544],[-5.102126,5.389408,4.438210,-2.415877,3.024848,-3.075693,0.743891,-7.888319,-5.773313,-5.014446,4.225626,-5.730889,-8.084718,-9.147543,6.070729,-2.235580,-7.049361,-5.674537,1.155651,2.266130,-7.563559,1.310565,-7.073966,5.053294,-8.622781,-2.017710,-8.791606,-7.258080,-0.363047,3.356065,-7.882817,3.183028,2.791547,-7.998692,9.305307,7.671981,-1.889158,1.846372,-1.899332,2.420743,-3.049242,1.246047],[6.140980,1.654749,-0.679247,2.795812,-5.248458,3.083352,-5.546265,3.194150,6.142196,-9.838929,7.259245,5.827895,-2.104279,-4.141526,-4.013716,3.553043,3.202591,-8.278372,5.706997,0.145566,-5.119906,7.579324,-6.910672,-8.800696,7.098256,7.760431,-8.879717,1.793609,-7.345667,5.531109,5.205695,-9.330629,9.638584,-0.205035,-3.959368,9.575787,1.209307,3.143867,9.391513,9.470463,-7.212092,3.414405],[6.677271,1.337300,-3.786167,0.673062,-5.743483,8.794399,-2.052734,-7.094141,0.555025,1.267340,7.468354,-3.260418,7.312264,0.012918,9.353218,-9.247681,8.053636,-1.507934,7.636596,3.693063,1.524606,2.967440,5.075166,-3.294482,0.282295,3.475273,-9.310682,1.615984,5.731800,-3.266478,3.390699,-5.061019,-5.578759,7.790260,-8.093731,9.355664,6.874390,9.439749,5.033946,7.551106,0.825740,3.954995],[-1.267626,4.425679,7.536440,-1.434681,8.991746,-1.693290,9.691076,2.183997,-1.742301,1.094253,5.536204,-2.829073,-4.359774,-1.451752,-0.927943,-3.440371,-3.567658,1.839732,8.632640,7.718019,-5.618688,-6.776452,4.020429,0.668004,2.760926,5.604891,8.255684,5.920604,0.786735,5.712916,0.545640,-6.681550,-0.226285,7.422080,-8.765420,-0.463603,-6.459169,-4.727122,-9.396330,-7.522414,9.229669,-7.270804],[1.457527,-3.709889,2.521531,1.164478,6.582450,9.444856,3.404220,9.811106,3.029175,-8.842670,3.807955,0.793681,-9.658142,6.118182,4.630691,-6.397067,0.561513,4.855325,-0.848481,4.428574,-1.559194,1.271204,4.553725,2.525772,-5.330026,2.965998,5.166731,8.886166,-6.523933,6.122492,5.110688,-9.545002,-9.498094,9.429107,-0.736946,8.587614,2.874726,-7.949105,1.307352,2.422606,5.569407,2.519405],[2.195073,-6.458340,4.559290,4.227673,4.644998,0.748341,5.900868,4.214107,9.861433,7.982293,6.687155,-8.398465,2.580546,3.194655,-3.983607,7.915575,8.223700,0.266851,2.054487,7.970672,-3.631524,8.685522,-8.103104,-7.244876,8.939300,-1.454419,8.199104,3.019025,9.895013,-2.497101,-1.345529,2.432276,1.517997,-2.889917,-1.090255,-2.997346,4.666688,-5.462800,-0.592665,2.266356,-8.444220,-6.878182],[-0.655622,2.713484,-2.498966,9.825723,8.228504,1.940002,6.613884,-0.674748,6.779259,6.138583,-4.141037,-2.569300,-4.100466,-2.907024,-9.441892,-1.667427,-7.048521,-2.189455,5.947904,9.495851,-7.054369,-2.820847,2.105962,1.663939,5.748096,1.743742,9.332419,-7.036589,1.179504,-6.653387,8.507882,1.123491,-4.947912,9.151611,3.907860,7.042923,9.559428,-8.714547,-0.693513,2.943326,-8.914990,6.978060],[4.154687,7.428652,-6.277161,-6.060999,-2.556103,8.007239,5.016685,6.480216,-6.203450,-5.815265,-0.399257,-9.991468,1.871997,-5.679402,-0.495598,9.225316,4.418374,-2.600952,-6.734958,5.762616,-3.835708,-0.531529,4.801974,8.228981,-6.947239,3.754425,-3.988236,8.585278,-5.025077,3.492588,2.134035,-2.070408,1.429316,-7.317174,4.530221,-7.674543,-2.106835,6.682306,-6.200968,1.419868,-6.728375,1.129796]], dtype = "float64")#candidate|7582|(10, 42)|const|float64
var_7583 = relay.var("var_7583", dtype = "int64", shape = (1960,))#candidate|7583|(1960,)|var|int64
call_7581 = relay.TupleGetItem(func_4812_call(relay.reshape(const_7582.astype('float64'), [15, 2, 14]), relay.reshape(var_7583.astype('int64'), [980, 2]), ), 2)
call_7584 = relay.TupleGetItem(func_4815_call(relay.reshape(const_7582.astype('float64'), [15, 2, 14]), relay.reshape(var_7583.astype('int64'), [980, 2]), ), 2)
output = relay.Tuple([bop_7576,call_7581,const_7582,var_7583,])
output2 = relay.Tuple([bop_7576,call_7584,const_7582,var_7583,])
func_7591 = relay.Function([var_7574,var_7583,], output)
mod['func_7591'] = func_7591
mod = relay.transform.InferType()(mod)
mutated_mod['func_7591'] = func_7591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7591_call = mutated_mod.get_global_var('func_7591')
var_7593 = relay.var("var_7593", dtype = "bool", shape = (9, 2, 1))#candidate|7593|(9, 2, 1)|var|bool
var_7594 = relay.var("var_7594", dtype = "int64", shape = (1960,))#candidate|7594|(1960,)|var|int64
call_7592 = func_7591_call(var_7593,var_7594,)
output = call_7592
func_7595 = relay.Function([var_7593,var_7594,], output)
mutated_mod['func_7595'] = func_7595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7854 = relay.var("var_7854", dtype = "int16", shape = (16, 13, 4))#candidate|7854|(16, 13, 4)|var|int16
var_7855 = relay.var("var_7855", dtype = "int16", shape = (16, 13, 4))#candidate|7855|(16, 13, 4)|var|int16
bop_7856 = relay.less_equal(var_7854.astype('bool'), relay.reshape(var_7855.astype('bool'), relay.shape_of(var_7854))) # shape=(16, 13, 4)
func_3144_call = mod.get_global_var('func_3144')
func_3147_call = mutated_mod.get_global_var('func_3147')
var_7865 = relay.var("var_7865", dtype = "uint16", shape = (336,))#candidate|7865|(336,)|var|uint16
call_7864 = func_3144_call(relay.reshape(var_7865.astype('uint16'), [7, 8, 6]))
call_7866 = func_3144_call(relay.reshape(var_7865.astype('uint16'), [7, 8, 6]))
output = relay.Tuple([bop_7856,call_7864,var_7865,])
output2 = relay.Tuple([bop_7856,call_7866,var_7865,])
func_7885 = relay.Function([var_7854,var_7855,var_7865,], output)
mod['func_7885'] = func_7885
mod = relay.transform.InferType()(mod)
mutated_mod['func_7885'] = func_7885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7885_call = mutated_mod.get_global_var('func_7885')
var_7887 = relay.var("var_7887", dtype = "int16", shape = (16, 13, 4))#candidate|7887|(16, 13, 4)|var|int16
var_7888 = relay.var("var_7888", dtype = "int16", shape = (16, 13, 4))#candidate|7888|(16, 13, 4)|var|int16
var_7889 = relay.var("var_7889", dtype = "uint16", shape = (336,))#candidate|7889|(336,)|var|uint16
call_7886 = func_7885_call(var_7887,var_7888,var_7889,)
output = call_7886
func_7890 = relay.Function([var_7887,var_7888,var_7889,], output)
mutated_mod['func_7890'] = func_7890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8304 = relay.var("var_8304", dtype = "int32", shape = ())#candidate|8304|()|var|int32
var_8305 = relay.var("var_8305", dtype = "int32", shape = (15, 13, 1))#candidate|8305|(15, 13, 1)|var|int32
bop_8306 = relay.not_equal(var_8304.astype('bool'), var_8305.astype('bool')) # shape=(15, 13, 1)
output = bop_8306
output2 = bop_8306
func_8309 = relay.Function([var_8304,var_8305,], output)
mod['func_8309'] = func_8309
mod = relay.transform.InferType()(mod)
mutated_mod['func_8309'] = func_8309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8309_call = mutated_mod.get_global_var('func_8309')
var_8311 = relay.var("var_8311", dtype = "int32", shape = ())#candidate|8311|()|var|int32
var_8312 = relay.var("var_8312", dtype = "int32", shape = (15, 13, 1))#candidate|8312|(15, 13, 1)|var|int32
call_8310 = func_8309_call(var_8311,var_8312,)
output = call_8310
func_8313 = relay.Function([var_8311,var_8312,], output)
mutated_mod['func_8313'] = func_8313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8331 = relay.var("var_8331", dtype = "int64", shape = (3, 9, 2))#candidate|8331|(3, 9, 2)|var|int64
var_8332 = relay.var("var_8332", dtype = "int64", shape = (3, 9, 2))#candidate|8332|(3, 9, 2)|var|int64
bop_8333 = relay.logical_xor(var_8331.astype('int64'), relay.reshape(var_8332.astype('int64'), relay.shape_of(var_8331))) # shape=(3, 9, 2)
func_5778_call = mod.get_global_var('func_5778')
func_5782_call = mutated_mod.get_global_var('func_5782')
const_8342 = relay.const([-3,-5,5,-5,-2,-10,6,-5,-2,-1,-2,9,4,-5,2,-6,10,4,-1,-6,6,1,-3,4,9,-10,-6,8,10,-4,7,9,-3,3,-2,1,6,3,8,9,-5,-10,-9,10,2,-2,-5,-8,-6,6,-1,7,9,-9,7,4,-8,-4,5,-6,9,-7,1,-7,-8,2,-10,-9,8,3,7,-9,6,-1,7,-7,5,3,9,2,2,9,2,-10,7,8,-5,-10,-10,9,8,4,-9,-1,8,6,-7,4,4,-2,7,8,6,-2,-8,-4,6,2,-8,2,4,7,-4,3,-5,10,4,4,5,-8,7,-1,-3,-8,6,6,9,-3,4,-4,8,1,-1,4,2,-1,6,-4,5,-10,4,-2,9,8,1,4,-8,-1,-1,7,9,-6,1,3,-2,8,-1,10,8,-5,2,8,4,8,-6,-1,-4,1,-7,-3,9,8,6,10,-8,2,-4,-9,-2,6,-4,5,3,5,-2,2,2,1,-8,1,-8,3,3,-2,10,3,6,2,-3,1,5,-7,3,-4,-1,-6,-6,-2,-2,-4,-4,-6,4,-10,-7,2,-6,1,-9,2,-8,10,9,4,8,-4,4,1,-2,-7,-3,2,-10,-9,-6,10,1,-9,-3,10], dtype = "int8")#candidate|8342|(240,)|const|int8
const_8343 = relay.const([-1.474027,-2.346676,7.282935,-0.702310,8.634953,-9.374916,1.319662,5.705620,0.517647,8.051986,-3.596239,4.408438,5.084392,5.227019,-6.618305,8.832193,-3.327584,3.155922,6.051772,2.606247,3.717228,8.967517,9.517139,7.167940,-8.660710,-3.601298,9.373033,4.331773,-7.917804,9.050156,3.511095,0.285493,-8.328351,-1.610995,-7.865897,-7.471671,7.871441,-8.105898,-2.994892,-9.973819,-8.402594,-9.061717,-9.824848,7.570029,-5.322805,9.893227,1.382278,-7.567510,-7.945067,3.217785,-6.889951,-0.871424,-5.876437,2.807292,9.102314,1.785409,-1.653897,5.909680,-6.983182,4.398687,1.707847,-0.641305,9.512240,-4.016044,4.504664,-0.916682,-7.018827,-9.933909,1.025278,5.513634,0.235304,-7.881895,-5.742745,-5.406361,-6.710316,-7.803032,-3.814329,0.307654,8.292640,1.605203,0.581324,-0.772823,9.432351,-8.029330,-3.923515,7.520946,8.135810,8.049651,5.137334,-7.465897,1.684080,7.872347,0.939728,0.193532,-2.949358,-1.678895,-7.000047,9.720525,5.195289,-5.642086,-7.235969,7.272451,-2.663791,2.212509,-2.964152,1.789155,-4.544194,7.176881,2.283175,-6.045701,-8.338718,-9.389747,-1.227339,-4.106070,1.058388,3.433671,-7.852053,3.554014,-6.374465,-4.450172,-2.942855,-5.376239,-5.791951,4.263944,1.334584,9.443662,-5.512601,-1.546212,-6.037624,-2.293355,-6.154847,2.432390,-3.598882,6.278854,0.612703,3.282434,8.315667,6.061198,6.816298,-7.183713,-1.876320,-7.065070,7.752990,6.227440,5.582576,2.562677,-1.417197,-4.830065,-9.222998,7.339666,8.220428,7.262531,-6.939945,-1.191657,3.428040,-5.929153,7.192422,-6.823275,-1.106709,-6.214370,3.308576,5.000556,-8.620909,-0.590661,7.686457,-3.381891,-9.880112,3.195375,-1.981156,1.919711,-4.189816,-2.159834,-9.588140,-5.158617,-2.533967,8.295693,4.403885,4.145497,-0.550454,-0.125145,8.075489,5.508901,-5.062221,8.892079,-3.606465,8.852912,-5.760623,-7.706499,-3.257074,5.652024,3.952483,1.180042,9.942858,-6.986248,-6.866787,8.401507,-4.826226,-1.986590,-7.417560,8.920787,-6.947100,9.381290,-6.673161,6.378614,9.116294,-4.849152,3.367380,1.173363,-3.432520,4.855022,-8.057080,5.720792,5.121331,8.424901,8.053861,-1.395690,0.044653,-3.704064,-7.213495,9.928738,6.015769,-2.118637,1.086460,2.213362,-9.560252,-9.022588,-8.406023,6.388221,5.471286,7.498467,1.836209,-1.191884,0.948439,1.303392,1.426752,1.563364,-0.034326,1.555932,1.940435,1.393467,5.677455,-1.705080,3.051219,2.007512,3.730863,1.996237,1.151775,1.083620,3.448246,-5.005110,7.498788,0.564881,4.753438,3.962994,3.984455,-4.629278,7.240065,-6.272117,-5.089877,5.292735,-1.107278,9.682682,1.604886,1.966048,7.747192,8.462929,7.131999,-5.951321,9.818472,-2.264442,-7.922025,-4.131878,3.753322,7.193412,-9.922681,8.328679,3.835495,-1.290381,-0.817629,4.642429,6.904650,-7.760075,3.093485,-4.537278,5.339651,-6.110154,5.844318,2.571413,8.243368,5.312998,3.979282,7.725630,7.689831,5.601528,2.652593,8.817103,0.541843,4.660389,-9.866990,-3.211412,-1.060467,7.721848,4.620561,4.993149,6.217896,-6.393521,8.759473,-9.791378,-1.135471,-8.428777,-9.355104,-0.790592,-3.695790,8.092030,6.544008,-6.192869,-0.223725,-7.791181,-2.340855,-2.138582,-9.821291,-9.738363,-5.673435,-4.170638,0.120143,-8.190409,-2.660920,2.788984,8.155272,1.907943,-7.416056,-5.112233,7.911071,-9.461982,-1.046812,-1.928591,-9.149728,5.925881,9.953676,5.629696,-1.218567,-8.083435,-3.306280,3.277642,-7.276715,9.418659,-8.328003,1.045929,-4.516386,2.533242,4.089877,2.427260,1.912491,-4.126463,-3.665284,4.781467,-3.429292,1.609938,1.568304,-1.524086,7.079775,9.301834,3.423907,4.918243,-5.010063,8.791343,-4.937756,9.124977,5.914602,-5.411715,3.599377,-1.681493,-8.282841,8.644055,3.226230,3.253914,7.429011,-6.396887,-7.034303,-2.299561,6.969166,-8.245471,-4.436319,8.100219,0.702924,6.049481,5.492959,-6.989735,1.670162,4.799901,8.461593,6.771839,2.312856,-1.963088,4.376867,2.510638,-2.196023,1.442793,1.849319,-7.803838,-3.107841,-9.981770,5.565943,7.080589,-1.445499,2.005027,-5.142922,-3.981249,2.132317,7.110670,0.161818,0.712306,-4.087127,-2.586633,5.507286,-1.947552,-6.764791,4.401128,-9.132127,-8.391319,0.389989,-0.855429,-7.342638,-1.063061,7.441089,-8.849841,-5.084429,-3.943078,-3.691128,-9.463443,9.212887,-9.980252,6.247433,-9.330352,-9.116718,-7.023426,-5.610988,0.594677,1.671931,-5.105736,2.080579,6.464626,-6.613761,-5.673873,-4.340881,-0.744788,-1.836992,8.743966,-6.194172,1.488564,-1.489813,6.114411,-6.340931,4.558332,-5.487803,0.437847,0.046850,0.004976,-5.817714,-2.718844,-9.977660,9.820161,0.001800,9.754409,-3.879246,1.681603,-3.485589,7.811612,5.611484,3.897328,3.409680,-6.247415,7.719815,-5.956596,8.354523,9.173590,-4.658772,-3.810693,2.065320,2.369739,-6.504298,0.365175,3.640414,-9.571929,5.676853,-6.366449,-8.347469,3.583818,-8.315427,2.787236,3.076494,-2.799718,7.970128,4.079749,-6.257387,-0.387514,5.328210,2.173152,2.384591,-5.491165,3.647446,6.564579,0.927798,-2.432542,-0.289578,1.438529,-6.809306,4.616351,2.579441,-7.366507,-4.838234,-2.533969,-3.268359,-9.181240,5.342751,5.037628,-7.328866,-2.435617,9.036860,7.346089,0.374855,6.082365,-4.465647,4.564558,-6.414026,7.453176,7.111774,-9.144029,-2.466866,8.388415,4.675762,-4.403216,9.049615,0.667923,3.216039,-8.479534,-9.949984,-9.274921,2.378228,-4.469061,-3.979920,-3.517834,5.945398,9.205608,7.423540,-3.905197,7.121492,-1.255051,3.593343,-4.405970,7.432774,3.714621,-9.582901,-4.885967,-6.376143,5.711858,4.396936,-1.142530,5.072584,-3.728457,-1.930210,6.512488,3.726862,-7.695550,-2.674820,-6.784951,3.916406,1.041431,8.148908,4.501738,-3.454354,-7.282144,-7.828474,-9.630712,4.352083,2.799661,7.373328,5.364695,-2.862273,-7.383178,-7.467080,-3.741677,-4.957696,-7.210253,-2.764651,1.216161,-3.469497,-4.849599,-5.747482,-4.394121,0.131114,1.434152,7.882082,9.443758,-5.570972,-4.465322,-4.967360,9.583985,-5.836937,4.090792,2.298736,4.370916,-1.734544,5.337473,-0.034919,-5.340827,5.099661,1.378733,7.310104,-6.792645,-9.660464,-8.727904,-9.454626,8.187846,5.639320,3.399826,-6.999244,2.547982,-6.209527,0.830138,-4.063178,-8.615889,-9.269358,-4.007791,-2.027389,3.400797,4.821858,-8.656714,6.472797,-4.737814,-6.981827,-2.835270,-1.326670,7.614436,-6.272942,-9.293597,7.162653,-6.143633,-1.662978,3.365500,1.174196,5.431200,-4.369290,-8.482551,5.587665,8.332778,-9.205653,-3.235646,1.756228,7.243391,8.451132,-2.986678,-2.641899,-1.378229,-7.749185,-4.190526,-0.275908,-9.468677,6.693750,8.047139,-5.757977,-6.285317,-8.133121,8.133652,-6.358977,5.628985,-8.709063,-7.683693,-4.994195,4.422810,-0.763642,-7.352516,2.708418,-5.446578,-6.039912,-8.757681,-9.258974,0.321407,4.707184,-4.648677,-2.136911,7.351193,9.561316,9.128878,-0.720680,-5.334562,-0.108095,-9.831970,-7.903322,-9.896005,-2.637682,8.453684,5.320803,6.579893,6.953680,8.978866,6.141927,2.701374,-3.312502,-1.706184,9.020997,-2.939606,6.001107,-3.821462,7.793298,-8.267891,5.305164,-8.941899,3.481043,7.600332,2.730511,-1.415056,-4.763071,0.303988,-5.146500,3.203027,4.463493,-0.360974,-7.542201,-0.290672,1.335522,5.027943,-5.491614,-8.361644,0.195777,-0.960340,-6.251120,8.873172,-3.830674,7.619340,-6.098014,4.120670,-1.037499,2.796462,-4.778235,-5.917567,-1.692416,-9.031521,1.157750,-4.303193,-6.581391,4.722742,6.955594,0.745332,-2.577147,9.634292,-7.940568,-0.585709,-7.839918,7.594183,4.180134,-9.884500,-1.842677,-6.552883,3.287980,-7.780943,5.401046,-3.586947,3.274085,9.785085,2.288149,-5.065030,1.977677,-4.384333,-3.681448,-2.673711,-1.570162,-3.246495,0.363177,-9.095913,9.592752,-4.433668,0.809729,-4.587345,9.793810,-9.348267,-2.570100,-3.063770,9.506568,7.031995], dtype = "float32")#candidate|8343|(780,)|const|float32
var_8344 = relay.var("var_8344", dtype = "float32", shape = (6,))#candidate|8344|(6,)|var|float32
call_8341 = relay.TupleGetItem(func_5778_call(relay.reshape(const_8342.astype('int8'), [5, 3, 16]), relay.reshape(const_8343.astype('float32'), [780, 1]), relay.reshape(var_8344.astype('float32'), [6,]), ), 5)
call_8345 = relay.TupleGetItem(func_5782_call(relay.reshape(const_8342.astype('int8'), [5, 3, 16]), relay.reshape(const_8343.astype('float32'), [780, 1]), relay.reshape(var_8344.astype('float32'), [6,]), ), 5)
output = relay.Tuple([bop_8333,call_8341,const_8342,const_8343,var_8344,])
output2 = relay.Tuple([bop_8333,call_8345,const_8342,const_8343,var_8344,])
func_8347 = relay.Function([var_8331,var_8332,var_8344,], output)
mod['func_8347'] = func_8347
mod = relay.transform.InferType()(mod)
var_8348 = relay.var("var_8348", dtype = "int64", shape = (3, 9, 2))#candidate|8348|(3, 9, 2)|var|int64
var_8349 = relay.var("var_8349", dtype = "int64", shape = (3, 9, 2))#candidate|8349|(3, 9, 2)|var|int64
var_8350 = relay.var("var_8350", dtype = "float32", shape = (6,))#candidate|8350|(6,)|var|float32
output = func_8347(var_8348,var_8349,var_8350,)
func_8351 = relay.Function([var_8348,var_8349,var_8350,], output)
mutated_mod['func_8351'] = func_8351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8411 = relay.var("var_8411", dtype = "float32", shape = (5, 1, 11))#candidate|8411|(5, 1, 11)|var|float32
uop_8412 = relay.acos(var_8411.astype('float32')) # shape=(5, 1, 11)
func_1656_call = mod.get_global_var('func_1656')
func_1658_call = mutated_mod.get_global_var('func_1658')
var_8424 = relay.var("var_8424", dtype = "float64", shape = (132,))#candidate|8424|(132,)|var|float64
call_8423 = relay.TupleGetItem(func_1656_call(relay.reshape(var_8424.astype('float64'), [11, 4, 3])), 0)
call_8425 = relay.TupleGetItem(func_1658_call(relay.reshape(var_8424.astype('float64'), [11, 4, 3])), 0)
bop_8426 = relay.bitwise_xor(var_8411.astype('uint64'), relay.reshape(uop_8412.astype('uint64'), relay.shape_of(var_8411))) # shape=(5, 1, 11)
func_4060_call = mod.get_global_var('func_4060')
func_4062_call = mutated_mod.get_global_var('func_4062')
const_8433 = relay.const(6, dtype = "uint16")#candidate|8433|()|const|uint16
call_8432 = relay.TupleGetItem(func_4060_call(relay.reshape(const_8433.astype('uint16'), [])), 1)
call_8434 = relay.TupleGetItem(func_4062_call(relay.reshape(const_8433.astype('uint16'), [])), 1)
func_7591_call = mod.get_global_var('func_7591')
func_7595_call = mutated_mod.get_global_var('func_7595')
const_8437 = relay.const([[False,True,True,True,False,False],[True,False,False,True,True,True],[True,False,False,True,True,False]], dtype = "bool")#candidate|8437|(3, 6)|const|bool
const_8438 = relay.const([7,-1,10,-2,-5,-7,9,-9,-7,-2,8,5,1,8,-9,1,2,5,-5,-4,7,-9,5,3,-3,-10,2,-10,3,-6,1,-8,-1,-5,-10,-9,10,-3,9,7,-2,4,2,7,-2,-6,2,5,9,-4,-9,-7,-2,-6,-6,-5,-9,2,-3,-5,-4,7,8,-1,-2,-7,-9,-1,-7,-4,-9,-3,7,10,-4,4,-7,-6,-5,-4,-4,-9,7,6,5,7,8,-2,5,5,-6,-9,-10,-10,4,3,4,2,1,5,7,-10,4,-2,-4,10,5,-3,-4,9,6,7,5,-3,-7,-10,2,1,-2,7,-9,-5,6,-7,-2,10,2,2,-7,2,5,6,4,3,10,3,7,-2,-10,3,9,2,3,7,-10,1,2,1,7,-3,6,-6,6,5,-9,7,-4,-9,4,-6,-4,-8,-6,-4,6,10,3,-6,6,-4,2,4,2,-4,9,1,-6,-2,1,-7,-3,-1,-5,-7,10,5,-5,-9,-2,3,4,-7,-6,-5,6,2,-9,8,-9,6,-6,-1,-1,8,-3,7,9,-10,-4,10,6,-9,-6,-10,2,4,8,9,-6,-3,1,8,3,-5,-10,-6,8,3,2,6,-1,2,-6,9,9,2,-1,10,-6,-8,9,-3,1,10,1,-5,-8,2,-7,7,10,-6,8,4,2,-10,-7,-9,-1,2,-4,-4,6,-8,4,1,-3,-6,4,4,-3,-6,-9,9,-3,-4,9,-1,4,8,-5,6,7,-10,4,-6,10,9,8,-1,-10,7,-3,-2,10,-6,10,-6,4,7,-1,4,6,3,3,4,9,3,-2,8,9,-8,4,4,-1,7,-6,5,6,4,4,-5,9,-4,4,-4,5,-2,7,8,-8,2,-6,4,7,-3,7,-3,-3,9,8,-10,9,-2,7,6,5,-9,-5,4,2,2,-5,-8,-1,-8,4,1,-2,-10,7,6,4,-4,8,-2,7,-2,8,-1,-8,-9,8,6,5,1,-1,-3,-2,-5,-8,5,-10,8,-6,8,-9,-8,7,1,9,-5,8,-5,-6,5,7,1,-6,7,9,7,2,-9,7,-2,-9,-7,4,1,4,6,-5,-3,6,-2,7,5,5,10,-1,8,-1,8,1,-7,-5,-8,-2,1,3,4,-5,1,10,-1,8,-2,-6,-4,2,-4,6,7,-5,7,6,-9,-10,-8,-4,3,10,-10,-6,5,-6,4,1,2,-4,5,8,-10,4,9,8,-9,7,-5,4,2,-9,3,-10,7,2,5,-5,10,-2,9,-1,8,-8,3,-5,1,1,-5,7,-8,-5,10,-5,-1,-9,7,-9,-8,-10,-6,-7,-8,-10,-1,6,-5,2,4,6,-6,-8,-5,-10,3,-7,4,7,-2,6,4,-3,-6,6,4,-7,-9,3,-1,8,-2,2,-6,-9,-6,4,-10,8,-1,8,-8,-6,-10,-10,10,5,-4,-2,-6,1,-10,9,-1,8,3,7,-2,8,-2,3,8,-5,-4,5,8,1,8,-7,-9,10,2,-5,2,6,-4,5,-6,-6,-7,-10,4,4,1,2,-8,-4,-2,5,-2,8,-10,8,5,-6,-3,-9,10,-3,-7,-1,-9,-7,3,7,-3,-9,-9,-10,-1,7,5,-4,-3,5,2,-7,2,4,-6,-9,7,5,-7,8,-3,1,-5,2,2,6,-5,6,6,3,10,-2,-3,3,-2,-5,8,-3,-3,-8,6,2,10,-1,8,10,-9,7,1,-10,-2,8,-5,2,-9,4,8,-9,3,-5,-5,3,7,-3,-9,-1,-10,-1,-1,-2,5,8,-3,2,-6,-1,1,-2,-1,9,8,10,-1,2,6,-4,1,4,8,3,10,2,5,10,-1,-7,8,-6,10,3,-3,7,-9,-9,5,-1,-6,-6,7,9,4,-6,5,3,1,1,3,7,9,10,-7,-8,-4,-4,-10,-10,8,9,9,1,6,-3,2,-2,5,2,3,-5,-4,-9,-9,-9,6,-2,-9,-6,-7,-3,-8,-7,-9,6,-10,-8,-7,7,7,-7,-5,9,-2,-7,5,-7,7,7,-4,7,-4,-6,-3,1,10,-6,-4,9,1,6,-7,10,-6,1,1,-4,2,-8,-5,-8,4,2,-10,-8,8,-8,7,-9,6,5,-8,4,10,-9,-10,2,1,-6,6,2,7,8,-8,9,9,-3,2,8,-9,9,-6,-7,-6,7,-6,5,-1,-1,2,-2,3,-7,-5,9,4,5,-8,6,-5,7,4,-9,6,3,-10,-8,-2,-10,-2,1,6,7,-10,7,7,-1,7,-7,1,-1,-7,-4,6,6,-4,5,6,-3,8,-4,-5,8,-4,-4,-5,6,6,10,5,-1,6,-8,-9,-9,-2,-3,-5,-8,8,-5,-1,-6,2,-8,-6,5,-6,-2,-5,-3,1,1,-7,-8,5,9,-6,-2,2,5,-10,10,5,-10,-3,7,-8,-4,9,1,7,9,-6,-4,-2,6,1,-9,-10,-9,3,8,4,6,6,-7,-7,8,9,2,1,7,-6,8,-5,-10,3,-10,10,8,3,-2,-4,-6,2,-6,9,-5,-10,-2,2,-5,-8,1,1,7,-7,-6,9,5,1,-2,-7,-7,2,3,-9,-8,-3,8,-8,-8,4,-7,-6,-4,-8,-9,-5,-3,6,-2,6,4,1,-3,-1,-6,-3,-7,9,-7,-10,-3,3,-4,6,3,-8,-1,-3,9,-5,8,-2,-8,8,10,-2,-7,-1,-5,8,8,7,6,6,-3,-2,9,-7,5,-2,7,7,10,-4,-4,-3,10,-4,3,4,2,-8,-2,-8,2,3,4,3,10,9,8,8,3,6,3,1,-6,6,5,6,-2,7,10,9,7,-4,9,5,-4,-7,9,-4,-8,4,2,1,10,1,-9,-10,8,1,5,-1,-7,6,8,-2,10,-10,-9,-8,10,-10,10,5,-3,-7,-4,-5,-7,-8,3,-3,-9,7,5,-6,-7,-8,-6,6,1,6,-2,-8,-6,-3,-6,1,-1,-3,4,-5,-8,7,-6,-3,-6,4,-2,6,7,-4,-8,-10,5,-7,-5,-1,5,-6,3,-10,6,7,-4,-5,-4,6,6,-1,1,2,-2,8,-3,10,4,6,-4,10,-6,9,-4,2,-2,2,2,-1,9,6,6,7,-6,1,-6,7,8,5,-10,-1,-1,8,-9,10,8,9,1,-3,-8,8,7,-9,-9,6,-1,-4,2,-6,10,-8,-1,2,2,1,-2,-8,-4,6,1,-5,-1,-5,-2,5,-8,-8,-9,-2,-8,2,6,10,5,3,8,-10,-10,3,7,-4,10,-5,2,9,-2,9,9,8,-3,-3,3,-9,8,5,-9,-10,10,-9,3,-2,1,5,-1,7,5,7,3,1,10,-9,-4,10,-6,-6,-9,6,-2,-9,5,10,-5,-6,-3,-10,-10,3,-9,7,4,-4,4,10,-4,-2,6,-7,-9,9,-9,-6,-7,-4,-4,4,4,8,10,7,-10,1,1,6,10,-1,-4,9,-7,-2,3,6,3,-7,-3,-7,3,8,-7,-3,10,7,2,9,-10,-8,-4,10,10,10,-4,-6,-6,-1,9,-1,8,4,5,-9,4,-8,4,6,9,-9,5,-10,-10,-6,-6,7,-7,6,-6,-9,-4,1,-4,6,-4,-6,8,2,10,-6,-4,-4,8,5,7,-6,-10,1,-7,9,9,2,5,7,1,4,10,10,-8,-2,10,5,9,6,-2,7,2,3,5,-3,-7,6,2,5,-1,-6,9,3,-9,3,-3,7,2,-5,1,-5,-2,8,-5,8,2,-8,-5,-8,-9,-8,-1,-2,-6,-8,-2,7,-4,-1,-8,6,1,8,7,2,6,10,4,10,8,7,1,-5,-9,-3,-5,4,6,-4,9,-1,-6,4,-5,-2,-10,-5,4,-7,8,7,-10,-1,-4,-9,1,-10,3,10,8,-10,-2,-1,-5,-7,-8,-6,7,7,2,-8,8,-3,4,6,7,10,1,4,-10,10,-9,-8,-6,2,3,-5,8,1,-1,-3,4,-8,5,-2,-6,4,-1,-4,9,6,-3,-4,-9,4,3,8,1,2,-7,10,7,9,-8,4,8,-1,1,6,2,7,7,3,-3,-5,-9,6,-1,-1,-9,-6,5,7,-5,-3,3,2,-9,-2,-10,-5,-4,-5,5,3,3,10,-7,3,2,-10,-9,-8,9,-1,7,-8,-6,-5,8,-4,7,8,-2,7,8,10,-10,-8,-8,-8,4,5,10,10,10,-1,-9,-3,2,9,-9,-9,-7,6,3,-2,1,-6,9,-8,-1,8,-8,3,4,9,-10,10,3,-5,-1,5,6,2,-9,-8,1,-10,-8,-10,4,-4,8,-4,-2,-9,-9,7,-8,-3,-3,-7,9,-5,2,-1,-5,-3,-1,-3,-9,9,9,-3,7,3,-7,6,2,4,7,2,-10,-4,-3,5,-3,8,-2,-8,7,1,-6,3,-10,-1,2,-10,10,5,-3,5,-7,-8,6,-8,-9,-10,-7,2,9,6,-9,-6,-10,-2,3,1,-4,9,-6,4,9,10,-6,5,6,-9,-6,3,5,-1,5,-8,-2,9,-7,3,9,-2,-6,2,-6,8,-5,-10,-8,-7,-6,4,-4,-7,-7,9,-4,5,-7,5,-8,-9,-5,3,1,-8,7,-6,6,3,4,1,2,9,3,-5,8,-3,-3,8,-6,-3,-10,-5,-2,10,-10,-5,7,2,-9,-10,-10,-2,9,9,8,-10,2,-7,-2,2,7,6,3,-1,-6,-9,-6,-1,1,-10,-3,9,6,2,2,1,3,-3,-5,7,7,-8,-7,8,7,8,10,5,-5,3,-3,9,10,-10,-8,4,3,10,9,7,-8,7,-4,4,-1,7,9,-8,7,4,7,3,-2,-1,3,-10,-2,-8,1,-6,-9,4,6,-9,-2,-10,-2,10,-6,-6,8,9,-3,8,1,6,-6,9,4,5,-2,-6,8,8,-6,4,-10,-6,3,7,-8,5,-3,6,-2,-7,7,-9,-1,10,3,1,-10,8,-3,-7,-8,-4,9,-2,10,5,5,4,-3,3,-10,-1,3,2,-6,6,-3,7,-8,-3,10,-8,4,-9,6,-4,8,5,-5,-7,7,-5,2,4,-4,-10,9,-9,8,9,-10,10,-10,-9,-1,-8,-8,3,-6,1,8,-4,1,-9,1,-3,-2,-1,8,-9,-6,1,1,-5,-5,-7,-10,-9,6,10,-7,-8,-7,-3,-9,-8], dtype = "int64")#candidate|8438|(1960,)|const|int64
call_8436 = relay.TupleGetItem(func_7591_call(relay.reshape(const_8437.astype('bool'), [9, 2, 1]), relay.reshape(const_8438.astype('int64'), [1960,]), ), 2)
call_8439 = relay.TupleGetItem(func_7595_call(relay.reshape(const_8437.astype('bool'), [9, 2, 1]), relay.reshape(const_8438.astype('int64'), [1960,]), ), 2)
output = relay.Tuple([call_8423,var_8424,bop_8426,call_8432,const_8433,call_8436,const_8437,const_8438,])
output2 = relay.Tuple([call_8425,var_8424,bop_8426,call_8434,const_8433,call_8439,const_8437,const_8438,])
func_8443 = relay.Function([var_8411,var_8424,], output)
mod['func_8443'] = func_8443
mod = relay.transform.InferType()(mod)
var_8444 = relay.var("var_8444", dtype = "float32", shape = (5, 1, 11))#candidate|8444|(5, 1, 11)|var|float32
var_8445 = relay.var("var_8445", dtype = "float64", shape = (132,))#candidate|8445|(132,)|var|float64
output = func_8443(var_8444,var_8445,)
func_8446 = relay.Function([var_8444,var_8445,], output)
mutated_mod['func_8446'] = func_8446
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8706 = relay.const([[[-4,-3,5,-10,8,-6,-9],[1,4,9,9,-4,10,2],[-3,-7,-2,-6,10,3,-1],[8,-5,-2,-7,6,6,3],[-3,-3,-5,-5,-1,-3,6],[-10,-2,-5,-7,7,-1,2],[-4,3,-7,6,-7,9,2],[10,10,5,8,1,10,-9],[-3,-6,3,2,6,-4,-9],[-10,6,10,-9,8,-6,5],[8,-7,-5,8,4,2,8],[-2,10,9,-3,-2,4,2],[-2,8,-10,-1,-7,5,-8]],[[9,4,4,-5,-1,-2,1],[-4,7,-1,-6,-9,-6,-5],[-6,-1,-9,-8,8,-6,2],[-2,7,9,4,9,8,6],[-4,8,-3,9,-1,-5,-2],[10,10,-8,-9,-10,-4,-4],[9,-10,-2,3,5,-7,8],[-9,-4,4,-10,10,-1,6],[-1,10,10,-3,8,8,-9],[-2,-7,-7,10,5,-8,-3],[9,-6,10,2,-6,4,2],[-9,-7,8,-2,6,-8,3],[-8,-7,-6,9,9,-7,6]],[[-10,3,9,-10,5,2,3],[-2,8,-5,-9,7,8,-9],[2,-6,4,-10,1,-8,2],[-10,1,-3,4,-5,-10,10],[8,-3,-5,-3,-8,1,-2],[10,10,1,3,-10,6,1],[8,4,-1,6,-3,4,-1],[3,-4,9,4,-5,8,4],[-1,-9,-6,-4,-7,-2,9],[-4,-1,-6,-1,-10,7,-9],[-9,8,-10,8,10,-3,-2],[9,-3,2,9,2,2,-6],[7,5,-10,7,-2,6,-7]],[[-10,5,10,10,3,-9,3],[7,2,5,-2,-2,5,-4],[-7,9,9,5,-2,-1,-8],[2,-4,9,4,5,10,-3],[-3,-7,7,8,-2,5,-9],[10,9,-7,2,-2,1,-2],[-7,8,-3,2,1,-6,-2],[6,9,9,10,4,-1,2],[-4,-4,3,-2,-9,6,2],[-2,5,8,-7,-2,10,-3],[-2,6,9,-8,-4,-9,-5],[-2,9,3,-5,7,-7,-9],[7,-1,-6,5,-7,-10,-3]]], dtype = "uint32")#candidate|8706|(4, 13, 7)|const|uint32
var_8707 = relay.var("var_8707", dtype = "uint32", shape = (4, 13, 7))#candidate|8707|(4, 13, 7)|var|uint32
bop_8708 = relay.left_shift(const_8706.astype('uint32'), relay.reshape(var_8707.astype('uint32'), relay.shape_of(const_8706))) # shape=(4, 13, 7)
output = bop_8708
output2 = bop_8708
func_8713 = relay.Function([var_8707,], output)
mod['func_8713'] = func_8713
mod = relay.transform.InferType()(mod)
var_8714 = relay.var("var_8714", dtype = "uint32", shape = (4, 13, 7))#candidate|8714|(4, 13, 7)|var|uint32
output = func_8713(var_8714)
func_8715 = relay.Function([var_8714], output)
mutated_mod['func_8715'] = func_8715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8800 = relay.var("var_8800", dtype = "float64", shape = (4, 13, 3))#candidate|8800|(4, 13, 3)|var|float64
uop_8801 = relay.atan(var_8800.astype('float64')) # shape=(4, 13, 3)
bop_8814 = relay.bitwise_or(uop_8801.astype('uint64'), relay.reshape(var_8800.astype('uint64'), relay.shape_of(uop_8801))) # shape=(4, 13, 3)
func_819_call = mod.get_global_var('func_819')
func_822_call = mutated_mod.get_global_var('func_822')
var_8835 = relay.var("var_8835", dtype = "uint16", shape = ())#candidate|8835|()|var|uint16
call_8834 = relay.TupleGetItem(func_819_call(relay.reshape(var_8835.astype('uint16'), [])), 0)
call_8836 = relay.TupleGetItem(func_822_call(relay.reshape(var_8835.astype('uint16'), [])), 0)
output = relay.Tuple([bop_8814,call_8834,var_8835,])
output2 = relay.Tuple([bop_8814,call_8836,var_8835,])
func_8850 = relay.Function([var_8800,var_8835,], output)
mod['func_8850'] = func_8850
mod = relay.transform.InferType()(mod)
mutated_mod['func_8850'] = func_8850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8850_call = mutated_mod.get_global_var('func_8850')
var_8852 = relay.var("var_8852", dtype = "float64", shape = (4, 13, 3))#candidate|8852|(4, 13, 3)|var|float64
var_8853 = relay.var("var_8853", dtype = "uint16", shape = ())#candidate|8853|()|var|uint16
call_8851 = func_8850_call(var_8852,var_8853,)
output = call_8851
func_8854 = relay.Function([var_8852,var_8853,], output)
mutated_mod['func_8854'] = func_8854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9248 = relay.var("var_9248", dtype = "float32", shape = (4, 1, 15))#candidate|9248|(4, 1, 15)|var|float32
const_9249 = relay.const([[[-2.271925,6.375410,4.162679,4.294299,1.461848,-8.215993,1.002875,0.744186,-6.693220,-3.393579,-1.759190,-8.155801,4.024694,0.881170,-1.730642],[-4.120410,8.402289,-9.680771,-0.208201,-3.205988,-9.150751,-9.758904,-9.659234,-0.270477,1.591383,6.494079,-8.556185,6.103097,-9.700875,-7.187059],[-9.083494,-8.396122,-4.233345,-6.883774,-4.028154,-1.280874,2.823096,-1.028344,2.797029,-8.390019,4.764159,-6.598395,-4.309392,-8.724263,-1.471803],[2.961748,5.815012,6.591263,5.027559,5.639517,-8.328664,-5.017114,-8.631229,8.134540,9.284337,-2.899427,5.541008,4.009625,-7.786093,2.911789],[-8.052032,0.198238,-0.147743,8.815896,9.608013,2.559640,2.551142,8.979398,-3.936582,2.309388,4.618279,-2.558595,-0.761626,-6.472109,0.951441],[-5.268633,-8.742143,-9.195416,-7.229022,-5.404807,-7.353332,1.962380,-8.194875,5.199536,0.583683,-4.944387,-6.367086,9.650468,-6.813838,5.715546],[6.203639,8.040598,-8.332153,-9.903868,-0.926146,-7.022071,-8.970330,-9.525478,-8.087934,4.909031,-4.086982,-5.770455,7.162467,2.336114,0.357934],[1.565470,-6.907741,3.998122,-5.117617,1.757187,-3.841455,3.518872,4.308528,1.626282,3.270368,9.884504,6.528142,-8.892067,-4.905031,-4.208503],[5.683814,-5.587998,2.333744,-7.344074,-0.377255,-9.158931,9.921723,0.390487,1.607870,-3.039736,-4.504205,-3.113320,-4.174947,-8.169623,-0.246974],[-9.778852,-1.824041,-5.900917,-1.518904,-1.851701,-2.509895,-2.861176,-2.940229,0.983064,-2.537365,1.781716,5.660737,-8.825807,-6.502272,-2.927799],[-6.824107,-8.526415,-6.005850,-5.385037,0.127199,9.576855,4.201369,5.104936,0.105022,7.309637,7.851665,-8.604760,-8.810853,-9.663789,1.240973],[3.026101,0.140237,5.400660,-2.502239,8.664437,-9.734031,-9.498002,-0.938063,0.213900,-5.361030,9.294481,0.888207,-3.647033,6.695746,7.227742],[-5.296910,-8.350419,-3.904239,9.062889,8.761342,7.233314,1.199678,5.088078,8.949228,3.836729,2.596660,9.452220,9.835287,-5.500625,-9.584753],[4.087482,-5.932601,7.113219,6.899542,-6.577228,2.221495,-7.990349,1.900852,-3.665339,9.374653,-7.066927,-1.595138,6.865629,9.041219,-1.804208]],[[3.814108,-8.982580,2.297062,5.720520,-1.324348,7.703495,7.282012,-7.331624,8.988876,3.386484,0.116141,7.603272,-7.306852,6.134874,-7.002142],[7.915251,9.197088,-6.221264,9.646366,-2.988927,4.177837,8.132656,4.233412,4.697875,-0.926923,0.445279,-1.456883,-6.095176,-6.474263,-4.884587],[7.788873,-4.293783,-0.514671,-3.007112,-6.664230,1.377149,-7.652365,-0.812620,2.797545,8.925445,0.024651,6.865058,0.897798,-0.922331,5.448262],[8.648169,-8.167907,3.108674,-4.975883,7.967454,-1.871906,-6.160476,7.629935,8.546861,-5.828099,7.479833,0.505329,4.194537,-2.211618,-8.331179],[-2.422057,-2.097862,-6.502723,7.719946,0.034338,5.033997,-4.469416,9.418341,7.636137,-2.625129,3.028034,9.956036,-7.085126,6.647783,-0.625210],[-5.470521,5.004649,0.891363,-0.049547,-1.181170,5.438229,-6.492284,6.360221,-3.505827,-0.806206,-0.369755,-9.410976,-9.081669,-4.072168,9.362336],[-1.631228,-8.876050,-5.752778,5.870568,-8.369854,7.629765,9.286903,2.540337,6.378709,0.696282,-2.951851,8.067382,3.402216,7.309695,4.170475],[-6.405202,-4.440688,-1.261101,1.104527,-6.564817,1.898510,7.615114,6.370034,-0.092475,-5.873693,-5.185625,2.058508,9.465665,1.947130,4.180319],[4.636859,-1.387403,-4.060537,7.676549,-0.129415,1.974903,5.788700,8.621102,-7.648545,1.336216,9.924358,0.642630,0.807242,-1.877944,-2.155342],[7.938133,4.412397,7.910231,-3.139365,0.920679,-3.503393,1.546049,-6.544474,-6.458263,-6.389358,8.564507,6.401116,-0.025812,-0.786913,-1.018499],[-8.778562,-2.271931,8.810059,2.792405,-8.697901,3.528712,-9.465112,-6.392966,4.897189,3.545186,-1.040229,6.495165,9.218247,-5.607892,-8.226237],[-7.345298,6.850596,5.445996,1.983542,-2.827985,7.154808,-0.837911,-0.035805,-5.508254,-6.635567,2.209253,0.657328,-2.991178,9.243995,-9.702518],[8.622025,-6.848337,8.435771,-8.128706,2.690109,7.420036,-8.284984,-1.173621,-0.370916,-7.940622,-7.713949,-0.077527,-7.670052,-4.029396,8.871010],[-0.899940,-2.918321,5.115361,-3.624563,-1.986232,3.518065,-8.439957,4.011910,-8.717596,-2.131012,-4.957200,1.238647,-0.237075,-8.664420,3.188836]],[[8.385320,-6.921324,-0.485696,3.486498,1.964369,-2.452931,6.334790,-2.244637,2.709345,9.704918,0.266642,-2.957303,-2.878658,2.021348,-1.585127],[-8.123961,-4.409854,8.552418,9.416980,8.896726,-7.857449,1.330407,-9.896240,-6.954986,-2.519951,2.102993,-9.670129,-8.263346,-3.835834,3.944773],[-0.491854,-8.134079,-6.618571,-3.301606,2.487295,0.335134,3.743094,7.145469,-9.631923,-6.756353,2.352124,1.456694,3.017028,-9.794152,5.696053],[-7.648513,-4.473914,-6.115476,-8.668784,-1.958328,-6.706115,7.492008,-0.289673,1.147481,4.417370,9.152034,-5.180825,-6.291062,3.661466,9.037678],[-2.319779,-2.099223,3.114841,9.178435,5.125841,6.209570,5.906093,-1.490158,1.503234,6.225265,3.598374,-5.102669,9.854511,0.115425,3.828751],[9.196269,8.516702,-5.226493,-5.985393,-2.068673,0.914846,3.326465,3.014059,-3.282042,8.206715,1.388835,7.644745,-2.306412,-1.732815,4.260565],[5.916421,0.389607,-1.235218,1.924877,2.077029,1.408116,2.913301,-1.765647,-4.294247,5.361463,-6.879952,-5.047703,-4.054259,-2.402997,-1.160304],[9.235125,-8.043738,-9.396968,-8.446644,7.633199,-8.736546,1.233432,3.203895,-2.705888,-0.916784,9.333413,-4.411123,-7.116060,1.745851,5.301932],[-1.152745,4.754041,7.306917,-9.640181,6.379512,1.293744,-4.285030,5.436514,-1.233494,9.088132,8.188299,6.231507,-0.346453,5.484206,-2.014370],[6.861873,6.136005,5.402428,0.722643,-5.983568,7.583677,-3.401629,-5.447450,2.130284,3.295926,-5.293689,-5.081625,-9.130038,3.836084,-4.858038],[-7.487952,6.144054,-1.066782,-9.982739,-4.530435,-5.079646,-5.101655,0.729787,-2.074699,-9.190721,3.689558,-0.379899,-5.089452,-7.810038,-4.358478],[-2.062596,-4.493135,-2.028734,-7.864100,-1.169690,-9.341714,4.087029,1.961306,0.526741,1.896907,9.508490,-3.974780,-6.883456,-8.570492,7.264101],[0.572216,9.822845,4.888135,-2.137490,-0.485682,-2.644490,9.944760,-4.523135,-3.800431,-1.069471,2.184942,-9.624189,-1.683990,-6.014937,0.119183],[9.623374,5.872639,-3.453913,8.896438,5.535110,-5.870340,-6.850596,6.385021,-7.372799,-7.164622,6.588927,8.488410,-1.256287,1.407588,-3.041240]],[[-2.987944,0.126077,6.180626,-2.874551,3.708562,-9.072378,1.806091,6.031492,6.200661,-0.355451,7.330846,0.115076,9.740630,-7.768484,7.510936],[6.558658,-1.032234,1.384651,-5.451288,-0.286824,0.338313,2.367809,9.375989,3.025871,2.079284,7.581480,-1.553589,9.364771,-3.413365,-2.531492],[-1.790950,4.171414,-2.015405,-8.090704,-6.468230,-9.983118,-3.540873,-4.749314,2.043320,-2.267455,0.310555,4.215133,5.136231,4.030642,-7.102854],[1.818512,6.293167,1.352037,4.495874,-5.250880,2.426390,-6.801253,4.727296,9.171094,-3.242289,8.625596,4.674281,3.906502,4.552222,-5.181884],[-0.025340,-2.371335,-2.941803,-4.382443,-1.157691,6.337508,7.492661,0.098555,-5.255917,6.844715,-4.379201,-4.984842,7.522725,-9.804098,-2.710518],[-8.191323,-8.233017,-8.156359,8.103934,1.627702,-1.393391,5.836556,-0.038282,-0.545329,5.326219,4.070381,-7.743119,-3.104869,-1.554442,-4.758155],[4.508137,9.930656,6.687441,1.679376,-1.164687,-2.708178,4.688097,1.493219,-3.553157,7.626111,9.051385,-1.487832,-6.636087,-7.976013,9.202913],[-8.281273,8.502017,1.402253,7.221173,5.497920,9.318730,-6.134580,4.911190,-0.531250,7.637808,-0.846339,-7.427407,-7.363350,2.683417,7.014089],[7.157943,4.227756,-4.085369,-6.294954,4.963063,6.068869,6.847108,-3.994721,0.823291,8.208299,-1.029407,-9.761619,-3.263360,5.917238,1.863449],[-8.993297,-0.447471,1.910033,-9.851927,4.150381,-0.932277,-6.983771,-9.911617,-7.228961,3.461665,9.818087,0.758554,0.177834,-5.960036,8.641110],[0.376138,0.125584,-1.815273,-7.932939,-8.052822,-5.266680,9.579499,-9.014796,9.706260,9.643194,-2.848336,-9.989094,-0.300283,4.882799,8.250710],[-0.447138,7.648996,-7.474843,5.740084,-9.957745,-4.351217,-7.878809,-1.889883,-5.683903,4.307120,-0.186655,-5.511249,-3.226747,-4.909038,0.256034],[-5.964417,0.779892,9.981891,4.925837,-5.601071,-9.194038,6.492450,-2.245959,-9.197836,9.157427,4.248797,0.655815,2.054557,-1.822127,-7.582529],[7.853308,-8.717327,-1.996959,-3.010677,-7.655978,5.879820,-7.704294,7.353310,-7.615124,1.217108,6.235821,-6.268425,-2.901849,-7.194219,7.240201]]], dtype = "float32")#candidate|9249|(4, 14, 15)|const|float32
bop_9250 = relay.mod(var_9248.astype('float32'), const_9249.astype('float32')) # shape=(4, 14, 15)
output = bop_9250
output2 = bop_9250
func_9267 = relay.Function([var_9248,], output)
mod['func_9267'] = func_9267
mod = relay.transform.InferType()(mod)
var_9268 = relay.var("var_9268", dtype = "float32", shape = (4, 1, 15))#candidate|9268|(4, 1, 15)|var|float32
output = func_9267(var_9268)
func_9269 = relay.Function([var_9268], output)
mutated_mod['func_9269'] = func_9269
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9496 = relay.const([[[6.749819],[-7.074517],[-7.205132],[-2.495281],[3.681126],[-0.698030],[3.733264],[-3.999738],[9.049240],[9.901569]],[[-7.543339],[-8.776946],[-7.950783],[8.643913],[4.810497],[8.363948],[-3.128995],[3.907921],[5.287846],[3.494409]],[[5.987352],[9.964267],[1.705186],[-2.698146],[-7.070092],[8.411483],[2.855849],[-8.785198],[-3.655190],[1.497161]],[[-1.532873],[-6.817284],[-7.540055],[-3.133931],[7.309357],[3.160287],[8.324404],[9.890085],[-5.538712],[2.486151]],[[7.405350],[-6.160700],[8.654348],[1.502048],[-9.710967],[8.007563],[3.460363],[9.502803],[5.670393],[9.509837]]], dtype = "float64")#candidate|9496|(5, 10, 1)|const|float64
uop_9497 = relay.erf(const_9496.astype('float64')) # shape=(5, 10, 1)
func_1799_call = mod.get_global_var('func_1799')
func_1802_call = mutated_mod.get_global_var('func_1802')
var_9513 = relay.var("var_9513", dtype = "int8", shape = (432,))#candidate|9513|(432,)|var|int8
call_9512 = func_1799_call(relay.reshape(var_9513.astype('int8'), [6, 8, 9]))
call_9514 = func_1799_call(relay.reshape(var_9513.astype('int8'), [6, 8, 9]))
uop_9526 = relay.sinh(uop_9497.astype('float32')) # shape=(5, 10, 1)
uop_9530 = relay.sigmoid(uop_9526.astype('float32')) # shape=(5, 10, 1)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
const_9540 = relay.const([[-9.567903,5.001598,5.534205,-0.488548,4.824994,-2.694754,8.183540,-0.579503,6.782042],[-2.441037,5.197016,6.779102,5.535356,5.495998,5.394602,6.317142,-0.698219,-2.702888],[0.254602,9.181650,6.366276,3.561350,-4.338080,-1.201033,-2.213432,6.829141,-2.719622],[-2.381136,-2.869556,1.192944,5.907484,2.030726,3.834278,-9.462292,-1.798055,4.576091],[6.072997,0.484678,0.771332,0.359040,-8.108617,7.907906,-8.661327,6.090094,9.122375],[-8.900168,5.928356,-2.344335,5.592752,-6.691410,-7.602250,-8.011187,-1.313259,2.537800],[4.885593,6.953320,-6.878766,-1.867016,4.463507,7.487181,-7.509793,2.080267,0.345616],[-0.395730,-9.169855,-8.832501,2.366693,-8.309267,-2.361185,0.162989,3.281134,-9.031272],[0.826683,-5.911000,-0.390161,-9.549655,0.728127,-1.749174,4.451539,2.923420,1.858807],[0.162121,-9.549863,8.488241,4.572590,8.951447,4.384097,-8.880157,-4.258752,8.926232],[-5.274237,-5.790307,-4.779639,-5.935703,8.217384,8.323174,-4.480220,0.976494,5.334348],[6.837611,8.548162,4.184685,-9.357381,-6.249236,-8.660406,0.628437,5.762719,-3.677895],[7.027369,6.321228,-8.259524,3.422362,6.151166,-5.896572,3.503427,-8.494034,-0.030167],[-8.815330,1.954256,0.772836,-9.529237,5.059429,-0.931567,4.603536,-6.096443,7.716593],[-6.200722,6.212010,0.051367,-0.287231,-7.296104,-0.037756,-4.019124,0.517802,0.277017],[4.155779,-4.722066,1.114681,-1.097452,-1.912300,7.377629,6.950400,-7.321019,-1.679870],[-4.115615,7.301811,6.920335,5.184369,-8.564121,1.236238,-2.221504,3.926461,5.235990],[7.276675,-8.596591,0.260924,6.482297,8.618435,2.230680,-9.766286,-9.955391,-4.974697],[0.360604,1.724358,3.395990,0.662266,7.300152,-0.406753,9.956212,-3.499715,5.240661],[4.927805,-0.685816,-3.407477,-6.316286,-5.132741,-2.506376,-4.658457,-7.467662,2.817224],[0.385195,1.007535,-3.307903,6.775209,-7.511899,2.261116,9.465165,-8.886372,2.492964],[-3.067505,9.765915,-4.575088,5.655102,2.189743,-7.971465,0.775906,1.424225,-2.530703],[-8.616354,8.964660,8.246828,-5.950683,-0.202771,-7.199652,-4.583835,4.044381,4.275215],[5.096341,9.223531,1.166898,-0.681828,2.295636,7.399090,8.057405,5.328261,-6.082754],[3.896570,-2.273984,-8.019202,8.736639,7.418650,-7.169147,-2.459557,6.470469,4.436022],[9.204359,-2.357644,3.205786,-7.267990,5.813794,-5.884803,-5.815317,0.657375,8.841634],[9.808280,-0.075774,2.295547,-0.314327,-6.923481,5.920240,-0.420717,5.496363,9.240748],[-1.490286,7.513304,-6.707915,-2.615978,5.106326,2.849367,8.632981,9.837885,1.739075],[-7.075396,-3.576685,8.973376,-6.281398,-6.206926,-2.146070,4.947995,4.374863,9.498897],[-0.164387,-0.867133,3.435276,-0.347563,1.823657,-9.714678,-7.190323,-9.536447,4.283236],[9.361297,5.014761,-5.282931,5.248172,-0.127534,-5.451847,-7.039552,3.305342,4.110189],[-1.108937,2.819324,0.404620,-6.025959,0.924175,1.177425,2.139953,-4.860130,-4.695730],[-1.753138,-0.674215,7.722556,-4.420501,0.087162,-4.213163,-3.434556,-7.390845,-3.599714],[3.143180,-0.442434,4.729390,-8.915186,-1.883312,5.674016,1.915345,-2.465588,4.896653],[-7.072324,-9.142095,9.172144,-6.954357,7.166609,-8.109986,7.243157,6.547022,-8.096808],[2.479674,3.234089,0.794018,-7.316600,-2.628993,4.303728,-1.718947,-8.507792,9.037680],[-4.590863,0.518014,7.045142,1.476509,-0.850827,-7.730820,-1.876130,7.152897,1.295363],[-9.891082,1.153179,-6.600825,-4.260351,-4.406571,5.110921,3.347988,-1.725446,-7.838138],[-6.365009,-2.920082,-0.810105,7.587018,-9.407210,-0.885922,8.091151,6.048268,3.468058],[8.062883,3.472994,-9.389840,-7.289640,-0.912561,4.526941,-7.225914,-1.911583,-2.361612],[1.082035,9.214151,-6.709110,6.140685,9.839829,-5.433235,-3.984895,-6.117836,3.528688],[2.420072,-4.788894,-4.265327,-5.964074,7.530316,0.752395,7.796590,9.541315,-7.345836],[-1.029798,-8.347605,5.965701,-6.229365,-3.686385,6.745376,-5.222251,3.924256,-9.005372],[-6.167196,-0.864244,4.951410,6.244488,-9.846835,-8.976778,-7.874657,-9.080824,-8.899780],[1.328944,-3.299173,6.480070,4.829328,-4.507652,4.497258,3.036694,1.846358,7.765262],[1.023384,2.523772,-1.883904,6.993549,-2.627350,5.823559,9.401994,8.001204,-0.484191],[8.542783,-4.939215,4.059767,-8.155794,2.345238,-0.680690,-3.583016,8.838355,-6.422177],[5.846931,-4.247856,5.045698,-6.060217,-0.830573,-7.838535,3.493656,2.389497,6.310836],[5.289795,6.475346,6.371936,2.402972,8.748870,6.461972,-1.429195,1.273149,-9.304774],[-6.457600,1.215336,4.524616,-3.470753,9.664093,-5.417366,-9.225963,-2.490235,7.677826],[9.500815,-6.251499,8.633935,-0.042956,-1.971848,9.936478,8.504521,-5.738818,-5.414275],[-7.720416,-3.725690,-6.038880,1.053575,-0.860016,-1.676933,7.801937,-1.095917,9.765964],[-2.354982,-9.873082,7.555797,6.042822,1.600072,-5.970354,9.836882,-2.305462,-6.058744],[7.945031,3.781462,-0.503237,7.588757,-8.130503,9.083969,9.312856,5.774996,-6.082669],[1.349844,1.412598,9.722939,3.019532,5.657957,-8.445660,-3.083279,6.735498,3.960971],[-9.869635,3.876054,1.690469,-1.086801,-8.333042,-5.341778,-3.327753,3.203928,-9.252924],[5.540773,9.302194,-0.800261,5.952615,3.620171,-4.756462,-7.304052,3.128842,4.928714],[-7.794654,-5.388644,-9.999371,8.011855,-3.143328,-5.646792,-0.836756,-6.394040,-1.315777],[7.609900,-2.174826,-3.517863,-3.804200,6.354996,3.970476,-9.074849,-3.941499,-4.399267],[5.733840,1.967706,-6.484960,-1.383922,-4.404116,9.793047,3.263296,-2.642152,0.344856],[2.880285,6.285135,-7.112349,3.294288,-3.330978,5.547932,-7.603394,-9.023751,-6.274370],[-7.660711,0.173373,-7.116396,1.534502,-8.301274,1.174261,1.916167,3.038908,5.352040],[9.880538,-0.970390,-7.335716,-5.229778,-3.574241,-4.309765,-3.206966,9.885023,0.097302],[-5.265986,-0.691314,-7.561126,-8.090485,-1.295095,-3.074038,8.862907,-9.337249,7.113848],[8.636691,-0.384598,0.502658,6.753703,9.392410,6.834576,-5.841815,8.758564,-3.710269],[-4.358843,7.148110,-5.468727,-5.659238,9.742258,8.978958,0.619605,7.458517,-7.194032],[-0.014242,-7.537247,0.052046,5.702572,4.158264,-7.937140,-2.951328,-6.626978,6.804396],[-5.179313,0.807062,-3.117506,-0.171870,0.695727,7.428146,-0.704702,6.798854,8.595886],[7.577015,-9.394505,-3.836804,-8.081362,9.985753,-6.879806,-2.594364,-7.511328,6.878395],[-4.799251,-7.191529,4.914430,-0.605940,-3.506752,-2.465189,-6.079433,-8.387752,-7.452271],[8.956932,9.070373,1.400636,9.856011,-9.560563,9.023899,-9.587758,-7.287689,-6.421573],[2.449971,3.441212,-3.076757,8.533984,2.381642,-1.461109,-0.123886,1.133392,-0.477173],[-7.949086,-5.667172,-1.393230,-7.103875,5.561996,1.163939,-9.360371,-7.397130,-9.867252],[4.136000,2.153206,3.855959,-0.272652,3.465520,-8.352179,-6.147577,5.462807,6.950043],[8.185216,6.673031,-4.481134,-1.744720,9.509505,6.159498,4.183514,6.406990,9.669209],[-6.054940,0.995411,7.434377,-5.906821,-6.416520,-7.838734,9.564798,7.918699,7.616032],[8.412275,-6.095901,-4.580812,0.609253,-3.218615,0.396812,7.681795,4.088043,1.885119],[-2.582978,-9.573559,-2.863229,0.723554,-9.895652,-0.379943,-3.332637,3.178485,-1.505089],[-2.744434,-1.204590,-6.410008,8.694423,5.077726,-8.010266,4.880015,-4.970286,7.543966],[3.863587,-0.985583,9.590410,9.634274,5.990411,-9.303906,-8.241026,8.646995,7.590294],[-1.064198,6.460062,5.939981,7.050703,0.258803,4.237851,-8.726744,1.045391,-6.646144],[4.804609,-6.314331,5.968302,-6.506118,-8.543373,-7.201954,3.990261,-7.559472,-7.454248],[0.430850,-0.822557,-8.874770,1.593860,-0.706260,0.535540,-3.581610,-6.646973,8.467421],[2.524481,-6.780853,3.634748,-2.959018,4.943088,-1.832396,-0.943652,4.071719,-8.198928],[-4.324474,-8.578918,-7.683713,-5.978063,-9.836556,0.635325,-2.446353,2.211761,-9.374918],[0.359840,-4.864328,4.056576,-8.385897,-9.611153,2.580654,7.173644,-1.753809,-7.788117],[-4.612932,4.017396,-0.393988,-4.417576,-0.250113,4.425451,0.067737,0.262640,1.463552],[-7.962931,-7.086060,-2.283106,9.829677,-5.745169,1.720163,-0.098607,7.944463,7.625006],[-6.171028,-0.093428,1.573576,-5.743996,-5.585966,-2.983185,-7.351552,7.338859,3.783419],[-9.502695,-0.271446,9.191000,-7.151722,4.092850,8.246844,1.878623,-8.392245,-1.552579],[2.070409,-9.747733,-0.909498,0.512755,3.385038,-5.775696,-7.005617,6.495421,4.425211],[9.161054,-9.917550,1.532507,3.915169,-3.925170,-9.843186,4.954960,4.270863,2.335664],[3.629757,-7.134546,3.377331,2.585971,-6.515667,-3.801588,3.980265,2.954571,-2.760264],[-3.641156,0.647856,-9.801536,5.571452,0.966862,9.947134,0.196234,8.392527,-7.348723],[-3.347908,6.107140,-5.581328,-0.329184,5.843861,-1.514203,-3.433995,6.180142,0.449962],[4.163349,6.807297,1.305964,3.842133,7.679459,-3.883640,9.030730,-5.624232,9.848712],[1.728152,-1.198921,9.699963,-5.551249,7.596227,4.260003,7.121113,-2.377206,4.091118],[-0.422870,-8.898854,-6.812786,8.022261,7.375085,-3.060982,-0.341264,-4.897403,-1.856683],[9.974166,6.138204,-3.391470,5.228052,6.910078,-2.831435,2.904166,6.449135,3.537067],[5.587942,9.023197,-3.969641,0.537480,5.751474,7.610807,-3.740688,3.922021,-8.891723],[-6.747432,4.699873,5.769113,2.441355,-2.361476,-0.579832,-9.438026,-9.392026,-1.683826],[7.966146,-3.188397,7.176484,-5.728006,-2.845889,8.816459,1.824864,1.676911,2.872130],[-0.058573,3.586113,9.256088,-8.480928,0.922647,0.590093,9.127416,-2.461538,-3.442938],[-1.422018,4.284642,-8.822722,7.963973,-0.961977,-9.758679,2.276086,-2.760145,-6.530523],[-1.290353,3.702352,2.862270,4.863384,6.290817,-9.380038,2.891671,-7.854120,-8.028647],[0.309452,-4.893638,-1.286312,7.938448,-4.376827,-2.578193,6.159130,4.868469,8.639070],[1.826410,-5.345953,-9.490161,-3.088269,6.506207,-7.725478,4.755852,4.207500,5.971972],[9.080964,4.634986,1.205109,-7.020588,-6.302582,3.713916,-0.154852,-5.762451,-1.921911],[-6.006920,-8.859433,3.362098,5.744661,-2.521515,1.023657,-0.292505,-5.720240,-8.137708],[6.308825,-0.179061,-8.654200,7.028798,-3.083985,3.735194,-9.916727,-5.514106,5.726244],[0.609870,-4.015864,1.333335,-7.124531,-6.147225,9.429737,-3.421418,8.283702,-7.379718],[-5.186448,9.138846,7.998736,8.417560,-2.252581,-2.791544,-8.177750,-3.032804,5.942125],[-1.427044,3.760703,-6.894302,8.623752,5.744952,1.406042,-5.966866,-6.437097,8.801553],[9.832975,6.312360,-4.365785,8.106918,-1.787301,6.284286,-2.007490,1.154882,4.593778],[-2.630764,-1.047695,8.276980,-9.477982,5.407948,6.954702,-5.278750,-9.186555,-1.061254],[-4.268344,3.815452,3.342437,-7.131812,-7.255999,1.311450,-2.520808,-6.718081,-3.493111],[-6.084010,6.720723,1.657831,-3.749653,3.007179,4.314945,2.279900,-4.101733,-0.796244],[-6.401311,7.399814,-9.162301,-5.138286,-0.062200,3.588584,-4.164977,3.687075,-6.626665],[6.131937,5.278151,8.862652,-3.209528,-2.343310,8.044652,8.259824,0.991122,-3.750739],[9.197101,-5.851001,8.414234,-2.927412,-5.080230,0.188847,-5.798379,1.485254,-0.479089],[6.298133,-8.959889,6.406705,-3.508978,9.150407,4.678893,-8.114535,-0.038012,-0.643446],[-8.205781,7.826950,6.761122,9.711006,0.685926,5.100880,3.123183,6.433902,-9.906594],[3.506965,3.597555,-9.663805,-1.435107,2.420273,-8.972179,-1.494814,7.325981,8.272094],[4.914366,-1.081297,2.223224,-8.949194,-1.710819,-8.019572,-5.229542,-1.252183,-8.625742],[-6.796147,3.515864,6.098878,1.580029,-5.705478,-8.740692,2.070515,2.693615,-2.170175],[1.011830,1.424684,-9.034222,-3.952080,-4.700303,-2.353227,-1.712234,7.403736,5.314829],[3.352786,1.753655,2.328507,3.274441,4.774521,-2.440269,8.596912,-3.540204,-1.503286],[5.387803,1.835628,6.905177,-2.576776,-3.321289,9.919382,5.480130,-9.812563,-4.768434],[-7.825662,2.788524,-8.962693,7.953812,7.747087,1.390149,1.819843,2.478102,-5.149603],[-1.146749,-4.025684,-2.007141,-3.549848,-4.739127,-5.855371,-4.836718,-0.417996,-2.444057],[-3.225470,-7.668060,2.906659,7.842723,-9.984257,9.194373,9.181072,-0.010879,-6.658921],[5.955087,-5.454595,-6.342083,-6.383878,1.756917,-6.962300,-5.096114,3.481883,-7.398277],[-0.783175,3.913497,-6.336189,8.018558,6.654507,1.372346,-9.467634,-1.431873,-0.992634],[-2.633634,-2.114224,9.355136,4.568640,5.737820,6.767590,-8.822477,6.913016,-6.219357],[-3.891240,6.788245,3.917625,-3.001615,1.222365,-2.382335,3.026988,-3.338415,-1.308880],[-5.494309,7.953879,3.400844,8.167765,-3.183438,1.983663,4.715340,-4.950479,2.969131],[7.357158,-1.844124,8.628006,6.839693,2.418206,-1.303388,6.217479,4.286956,-8.860992],[6.028566,-5.925299,-6.987589,0.567165,-5.596863,-0.183872,8.561441,3.821949,-0.664430],[9.396697,8.427951,6.396865,-5.678958,-5.573152,-5.613406,-1.909075,-1.415908,0.246609],[6.039077,-1.752227,2.614801,7.276551,6.360656,-5.939204,5.499579,2.628231,-6.474661],[-4.684546,4.823669,-9.876298,9.230673,-4.168946,-8.485552,-8.021307,-2.610867,6.412532],[9.958605,-5.936938,3.183358,-0.293815,-1.713846,4.603107,1.319047,-5.916916,-9.679625],[-3.192359,2.780165,8.130953,-1.553551,7.061115,5.807313,-9.748666,-9.968971,6.891695],[3.434250,-8.452385,9.026741,-3.814333,-5.955452,9.090616,-9.993757,-2.999731,-9.990682],[7.466909,-8.205207,6.060553,3.386003,-2.788355,4.295101,6.370082,-0.555706,-3.803249],[0.982810,-0.006773,7.783434,-1.618653,8.693839,-9.191827,-7.504370,-2.632087,-4.712359],[-2.719453,-9.149541,3.740575,-3.769451,-3.040933,8.045576,-7.538366,-7.799172,-9.941052],[2.533779,4.752963,0.876368,-9.913108,9.311821,-1.765444,6.003325,0.208288,-7.365413],[4.742192,2.698785,6.412386,-8.622683,1.377227,-5.750914,2.161995,-3.785279,-1.181283],[-7.364029,2.708542,1.523311,2.992142,7.843478,-5.417258,-2.532181,-3.967505,-5.406785],[-7.850595,-2.148729,9.994981,1.825397,-9.385254,1.029636,3.968514,0.981645,7.725768],[8.754000,3.083312,5.375367,-0.443338,1.488514,5.685050,-0.740840,0.699316,9.904877],[6.278757,5.818463,-6.260581,-2.933481,-7.893730,-2.691365,-0.760914,-8.985580,-4.390266],[-8.534989,0.719438,-1.316507,2.090501,-9.758586,2.560865,0.681421,-6.972684,-6.378612],[4.691600,8.319061,-0.313084,6.264074,7.986329,3.316835,8.625483,-2.524954,7.247442],[3.029290,6.997329,5.204936,3.555301,6.529290,6.245450,-5.095355,-7.917603,-0.790264],[4.260589,9.634140,-5.310869,3.372564,-3.590305,-0.661546,-5.387580,-0.858780,-1.494365],[-7.911523,-0.636416,2.429692,6.137824,-1.415220,3.097041,-0.242427,-4.373207,2.456583],[-9.242362,-4.666885,-5.272195,5.684877,-0.592396,-8.280587,7.207839,-2.189132,-2.513792],[-1.638536,1.738262,0.758347,7.728167,-6.807098,-4.438833,-4.579975,-4.054077,1.748369],[-3.569060,2.755286,2.694200,2.107257,-1.898864,-0.710097,5.645473,-0.682827,-4.453752],[-4.498839,2.554746,7.903478,-9.224948,0.713101,3.904317,-0.250719,3.133634,-3.945819],[0.534198,8.296778,-7.311436,5.104726,-5.220131,-7.636652,1.715929,3.989868,3.322782],[-7.162864,-3.141002,-2.270216,6.467597,4.481702,-1.358999,7.419946,3.775357,7.524330],[-1.242839,-3.641063,-6.288243,1.348524,9.483745,6.098993,-2.783474,-7.339518,0.473225],[-0.245485,6.812826,2.373172,9.971447,-2.395234,1.130444,-9.503882,-7.990208,4.487153],[-2.964303,-2.284505,5.954734,-7.239348,-5.699914,-2.977829,-3.741835,-9.822909,7.644566],[3.536628,-1.228947,2.651821,-3.006871,8.348133,-3.778830,7.202706,-7.791233,-5.877624],[6.106217,6.677190,-4.615068,0.202702,-5.225150,-7.323649,6.654218,-1.115740,2.487773],[-9.307826,-0.202947,-2.975740,-3.241400,9.668057,-3.536349,-4.906601,-9.019662,1.556995],[7.145716,7.766997,-4.519523,8.129821,-9.825928,8.667581,-8.360180,1.984325,1.678196],[4.064350,2.471851,-8.324705,1.637328,-6.943267,-1.789518,-2.023524,-4.787784,4.366163],[5.768851,6.385860,5.894811,-2.652486,-7.923909,-1.016911,9.670544,3.475380,-7.310293],[-5.317138,-1.721873,0.071050,-8.674515,-2.679196,-5.169955,5.805130,3.270133,2.671637],[1.985806,-2.171993,5.516495,-6.710890,-5.584112,9.865296,2.254638,-6.557518,-3.510957],[1.193802,8.717044,-1.785434,3.723207,-6.579882,-7.581646,0.912497,5.151149,9.144204],[-1.758443,3.309986,9.624853,1.504317,5.879120,-5.998155,-3.293410,-1.128912,4.455365],[3.593343,3.842992,9.500497,0.158915,3.153762,-7.801312,9.795142,-1.408555,-6.691554],[2.882494,0.677238,7.879669,2.799877,9.535198,-7.208396,-2.815718,2.980196,7.751486],[1.570577,-1.507006,7.326715,8.864294,6.199845,7.801039,4.801536,-9.673535,0.391358],[-6.365523,6.203943,9.143817,-1.900063,7.625423,3.120916,8.492079,4.803838,4.496159],[-7.542951,3.385293,8.190180,4.641325,8.578872,1.369712,-3.865065,5.250752,7.750772]], dtype = "float64")#candidate|9540|(182, 9)|const|float64
call_9539 = func_3106_call(relay.reshape(const_9540.astype('float64'), [9, 14, 13]))
call_9541 = func_3106_call(relay.reshape(const_9540.astype('float64'), [9, 14, 13]))
output = relay.Tuple([call_9512,var_9513,uop_9530,call_9539,const_9540,])
output2 = relay.Tuple([call_9514,var_9513,uop_9530,call_9541,const_9540,])
func_9547 = relay.Function([var_9513,], output)
mod['func_9547'] = func_9547
mod = relay.transform.InferType()(mod)
var_9548 = relay.var("var_9548", dtype = "int8", shape = (432,))#candidate|9548|(432,)|var|int8
output = func_9547(var_9548)
func_9549 = relay.Function([var_9548], output)
mutated_mod['func_9549'] = func_9549
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9773 = relay.const(-5, dtype = "uint16")#candidate|9773|()|const|uint16
const_9774 = relay.const([[[1,1,1,-1,1,5,-8,2,7,9,-5],[-1,-2,-9,10,-4,2,-4,-7,1,-5,-1],[5,10,-5,5,7,10,-3,-10,-1,-3,2],[-9,10,-8,6,-9,-1,3,9,-3,6,-8],[2,-3,4,9,1,4,-6,10,2,-3,10],[8,-3,-8,6,-9,3,3,-8,-3,8,2]],[[-2,8,-4,6,4,-7,-8,-8,-2,3,9],[-3,10,-5,5,-4,2,10,10,1,-3,3],[-5,6,-9,3,8,-2,5,-7,-7,-7,3],[-6,-7,-9,7,-4,4,-2,-2,9,-2,-6],[-10,-7,-4,-7,-6,-9,4,-5,-9,-5,-8],[4,-3,-10,3,2,-9,-2,7,-9,6,8]],[[-4,-1,2,4,5,10,10,-3,-5,8,-7],[-6,-4,7,-3,-10,-8,9,-8,-9,-2,1],[10,7,-2,-1,7,-3,-4,-1,-7,-3,-1],[-4,7,2,-4,-1,6,10,-5,6,10,-3],[2,-1,-4,-4,9,3,-1,5,-7,-10,6],[-10,-2,-3,8,7,1,-10,2,-1,2,-7]],[[9,8,2,-9,-9,1,7,-2,-1,6,-8],[-8,-10,3,3,5,-6,7,3,6,7,1],[-1,-1,-3,4,-3,4,-3,5,9,-9,-5],[2,-2,-7,-6,-5,3,-9,4,10,8,-1],[2,-7,8,-7,4,-10,-6,7,5,-8,7],[9,-1,-9,4,9,9,-9,4,9,-3,-4]],[[6,-2,-3,-1,6,-4,-8,7,6,-10,-2],[2,-4,5,8,8,-1,6,9,-8,7,5],[6,9,-7,-7,-5,6,9,-7,-1,2,-5],[7,6,-2,-9,10,8,7,8,2,-4,3],[10,-2,-6,2,-3,-7,6,3,6,-1,5],[-8,4,6,-10,1,10,-10,8,-10,-5,-1]],[[6,-6,-1,5,-5,-7,-4,-8,2,6,-3],[-10,10,-3,9,-6,1,-7,9,6,-6,-4],[8,7,-1,3,9,6,-5,4,4,7,2],[-10,6,6,1,-4,-3,-8,-2,-8,-4,10],[-3,1,4,5,-2,6,10,-1,3,-9,-4],[1,-6,7,-1,-9,-3,4,-10,3,1,-1]],[[-3,-4,-10,5,10,2,-4,7,-7,-2,7],[-8,-2,-9,2,7,-6,6,-2,10,6,7],[2,-5,-10,-1,-10,4,-2,8,4,-3,-6],[6,7,-9,9,-3,2,2,-3,-9,-4,9],[-7,-3,-2,-1,3,-8,3,-5,5,-5,-4],[-9,2,3,2,-5,9,-9,-2,1,8,-8]],[[-7,5,-1,-1,7,-5,7,-6,-10,-7,7],[-1,-6,6,4,-7,7,4,-2,4,-4,-10],[-4,1,7,2,4,5,-8,4,-5,6,4],[-9,-7,-10,1,-4,-8,9,-1,-1,4,4],[9,7,-10,-7,3,5,-10,-2,4,-5,9],[8,-5,-6,9,3,10,3,3,6,-7,-7]],[[-5,7,5,2,8,-5,-10,-1,2,6,-6],[-2,8,-8,-9,1,3,3,-2,3,4,-10],[-10,-5,9,-6,2,-5,-6,-5,-7,10,6],[2,-8,-7,-5,-1,2,-9,9,5,3,-4],[-4,-7,7,4,3,-1,-1,5,7,-10,4],[-9,5,4,5,-9,7,3,5,7,-3,9]]], dtype = "uint16")#candidate|9774|(9, 6, 11)|const|uint16
bop_9775 = relay.add(const_9773.astype('uint16'), const_9774.astype('uint16')) # shape=(9, 6, 11)
func_6762_call = mod.get_global_var('func_6762')
func_6767_call = mutated_mod.get_global_var('func_6767')
var_9784 = relay.var("var_9784", dtype = "int8", shape = (858,))#candidate|9784|(858,)|var|int8
var_9785 = relay.var("var_9785", dtype = "bool", shape = (792, 1))#candidate|9785|(792, 1)|var|bool
var_9786 = relay.var("var_9786", dtype = "float32", shape = (390, 2))#candidate|9786|(390, 2)|var|float32
call_9783 = relay.TupleGetItem(func_6762_call(relay.reshape(var_9784.astype('int8'), [858, 1]), relay.reshape(var_9785.astype('bool'), [792,]), relay.reshape(var_9786.astype('float32'), [780,]), ), 0)
call_9787 = relay.TupleGetItem(func_6767_call(relay.reshape(var_9784.astype('int8'), [858, 1]), relay.reshape(var_9785.astype('bool'), [792,]), relay.reshape(var_9786.astype('float32'), [780,]), ), 0)
output = relay.Tuple([bop_9775,call_9783,var_9784,var_9785,var_9786,])
output2 = relay.Tuple([bop_9775,call_9787,var_9784,var_9785,var_9786,])
func_9789 = relay.Function([var_9784,var_9785,var_9786,], output)
mod['func_9789'] = func_9789
mod = relay.transform.InferType()(mod)
var_9790 = relay.var("var_9790", dtype = "int8", shape = (858,))#candidate|9790|(858,)|var|int8
var_9791 = relay.var("var_9791", dtype = "bool", shape = (792, 1))#candidate|9791|(792, 1)|var|bool
var_9792 = relay.var("var_9792", dtype = "float32", shape = (390, 2))#candidate|9792|(390, 2)|var|float32
output = func_9789(var_9790,var_9791,var_9792,)
func_9793 = relay.Function([var_9790,var_9791,var_9792,], output)
mutated_mod['func_9793'] = func_9793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9863 = relay.var("var_9863", dtype = "float32", shape = (6, 14, 7))#candidate|9863|(6, 14, 7)|var|float32
uop_9864 = relay.rsqrt(var_9863.astype('float32')) # shape=(6, 14, 7)
func_5366_call = mod.get_global_var('func_5366')
func_5372_call = mutated_mod.get_global_var('func_5372')
const_9869 = relay.const([[-5.608440,6.281668,0.188006,6.330463,8.998413,0.941416,9.008879,-4.130631,-6.070701,9.118822,9.530262,0.162596,-8.842940,-5.994064,6.907633,2.784763,9.437837,-4.223573,7.881819,-7.249091,7.894747,-3.288393,-5.832862,-4.666157,-3.510536,5.937083,-0.417500,2.194636,7.790602,-2.742437,-9.390794,-8.321624,-4.700377,-7.130246,-0.366460,-9.056378,7.952133,1.598301,9.428405,-6.333372,4.771524,1.853931,-5.424372,-2.373464,5.068911,-2.730529,-2.636059,3.485493,6.882031,1.451831,-1.539421,9.621023,-7.880443,4.546185,-0.530546,7.300337,4.746807,-9.222424,6.438310,-5.072994,7.846761,-7.657085,1.192465,-4.038286,-5.781825,7.864445,-4.006650,-7.950070,0.780304,-5.491594,6.129356,9.723882,1.082406,-3.919805,-9.444620,7.609539,2.897875,-0.370591,7.838426,-4.260064,-0.583513,-3.131408,-6.343723,5.928014,-6.094892,-5.478725,8.223095,9.345044,7.736675,9.182419,-6.922054,8.039227,-2.278528,-9.437067,-3.769475,0.873563,-1.863998,3.145391,-1.984281,-0.628487,7.389929,-4.666262,-8.065275,2.363400,0.775380,-0.028586,9.807985,-8.054728,4.357171,7.604891,6.333576,-6.507897,-5.504268,-9.327358,-4.488194,3.928987,4.339493,-9.848196,5.109610,0.462980,-9.074563,-6.668698,0.656954,6.640550,-1.181994,4.217844,-2.285436,1.370183,5.311026,9.940890,7.267129,0.727012,8.161533,-9.863675,8.554312,1.942873,0.587798,2.275164,-8.665873,9.842925,7.960606,-1.084628,-3.364287,-0.163505,-7.791972,9.428998,6.078091,-1.373557,-3.434582,5.319003,4.875066,9.872584,4.251365,4.052284,-2.004139,-9.511350,9.482868,7.343505,-2.071711,-9.303984,6.899472,-2.800034,-5.448640,4.315352,-1.156854,3.966767,-2.193408,-4.262923,4.490139,5.837489,5.457293,-1.034433,6.807243,-0.620879,2.080265,-7.609439,7.454269,0.022402,5.105520,-8.187037,-8.126871,4.482712,8.714666,-1.015955,-0.383947,-2.658095,1.895410,-7.922880,-8.957240,-3.853046,2.063417,-8.533161,-3.218510,0.013771,3.251667,9.603316,0.761678,-3.125642,-9.667554,9.005827,-2.349358,-3.326096,-0.555157,-5.716223,-9.428812,2.157122,3.618022,-1.494490,5.123227,-9.434599,9.985490,-6.332580,-1.402617,9.859197,4.694097,7.805009,-5.918593,9.827601,6.814672,4.068204,7.015030,9.017615,1.006165,-4.446523,5.763416,4.031290,-5.602735,4.180724,-2.660945,2.395331,-8.683507,7.535685,4.201016,3.603646,1.447710,-9.563708,9.737211,5.144635,7.407400,-7.267437]], dtype = "float64")#candidate|9869|(1, 240)|const|float64
var_9870 = relay.var("var_9870", dtype = "float32", shape = (780,))#candidate|9870|(780,)|var|float32
const_9871 = relay.const([-9.114503,-1.516731,-7.263767,8.387326,-3.007200,-0.236802,-5.127684,-4.083982,0.460524,-4.739252,3.870482,1.285650,-2.802211,-4.102379,-6.952328,6.639513,7.933384,0.406330,9.089766,8.333622,0.829710,0.954522,-7.214589,-5.272633,-7.901681,-0.085340,7.776955,6.393399,-3.312700,6.012830,-5.698630,5.607247,-9.658919,-2.632771,-2.515374,-3.675957,1.780482,7.744633,4.790861,5.226220,-0.160894,-2.951585,-0.419589,6.495634,7.801128,3.883928,8.907311,5.864663,1.340974,4.968691,6.632912,7.386997,-3.126312,-8.183759,-1.953400,1.782282,1.949039,-3.021980,7.949130,3.539736,2.175636,1.694261,4.450116,-6.186140,-4.289175,-0.317950,8.513506,-8.783952,-4.504860,-1.958355,9.410184,8.133671,7.992326,-2.919611,5.780624,1.119271,-2.444118,8.694379,-6.023823,-1.726797,-2.375005,-8.917149,-6.473806,5.137863,-3.238320,-9.204142,4.973454,-2.980163,7.377864,6.611685,-0.355036,5.298632,5.814926,2.590839,8.594885,-5.283034,-6.660445,1.620633,-6.930199,-0.675899,-1.594259,-1.909160,-0.436841,-3.292301,0.663925,2.693380,0.525539,-8.426692,7.893887,-2.712992,6.430601,-3.107342,8.123307,-4.863561,-1.209141,-4.339925,2.433552,-8.900057,-0.424159,-9.603887,9.567541,7.358496,-1.800362,6.022244,6.552327,-5.002604,1.841271,5.114333,6.013622,-2.854324,-0.640820,-4.347414,7.002118,6.660644,-0.724045,8.657670,8.627466,-7.028077,-2.671228,-1.226654,4.916190,-1.384303,6.085397,5.234280,9.712282,1.945684,9.819957,-7.396071,-4.897730,-7.643043,5.408436,-3.248497,-4.601374,-8.525078,1.679623,3.528774,-2.692773,4.076326,3.355682,-0.937656,-8.465139,-9.440499,8.797454,-6.025384,-8.822745,-1.448654,-6.528146,7.750230,5.885015,0.091235,-6.280003,3.580005,-9.957291,-8.287591,-3.256629,-8.308291,-8.658948,-0.441971,0.499835,-4.093465,8.620267,2.062786,5.473584,-6.011863,9.968081,3.324899,-8.362586,-4.641295,8.878541,-5.977672,3.916017,-3.113356,6.937775,0.045473,3.341942,5.243872,8.285771,-5.240976,3.060468,4.786794,-7.889684,-4.546886,-8.989340,5.981489,6.942907,2.909310,1.767163,7.189737,-5.902454,6.520775,-7.496615,-3.454860,-7.370746,-9.770827,8.511061,-1.199402,1.053735,2.343848,8.317737,7.917814,-2.611987,7.574026,7.011911,3.520605,3.526910,3.012645,1.696465,7.497610,2.669204,8.791842,-5.502876,-7.889297,-7.122972,9.922248,8.025578,-1.674013,9.084949,9.277932,-7.837507,-5.649021,1.150921,1.202836,3.477607,-0.637317,6.884878,9.102376,7.413238,8.268045,7.545087,3.878413,5.804268,1.994968,2.883265,6.114656,1.889505,-3.380142,-9.808675,4.121962,-3.933047,-9.573131,4.332019,0.542760,9.115928,-4.577837,2.187621,3.271783,6.453132,3.932074,6.538137,3.217671,-8.284529,-9.785994,4.531002,-9.165784,6.070041,4.188976,1.428023,-9.214970,3.811887,2.164001,-5.268907,-4.956559,5.338530,1.397501,-2.272353,6.975330,-3.860106,2.893502,9.210480,6.019534,-0.032211,7.744033,-2.325458,3.449722,-9.229676,-0.586594,5.359762,7.040360,1.823137,-8.477909,5.809759,-1.996152,6.433977,9.381404,-1.330558,2.488614,-2.075468,-1.241047,-0.939611,-6.503948,-2.576719,-6.868756,5.672484,1.979510,-9.634483,1.770236,2.960952,7.761423,3.886663,-5.510995,0.974558,3.538400,-1.694107,-7.832050,9.646791,-0.572903,-6.131450,7.148027,-8.730222,-2.551237,-8.208548,-4.744689,3.663111,-6.754725,-3.449323,-4.565290,2.587275,8.928093,1.821479,-0.234128,2.873172,7.053252,3.885822,1.701263,0.438827,-5.021279,8.694294,0.482567,-2.940576,-6.613139,-0.696537,4.042561,-6.856378,-3.300291,-0.258691,-8.263063,1.623140,7.266737,-7.688171,-8.636160,-0.588890,-2.896075,2.715026,5.687539,6.482688,-0.790696,-1.604619,9.846516,1.260293,8.056426,3.529132,7.971507,8.135126,7.122382,3.655266,6.261874,9.488585,-1.445982,5.276056,-9.107179,1.414855,8.127276,-3.765630,-6.258097,-9.764528,-2.903839,5.076955,-8.698854,-4.553216,-8.978053,1.675403,-7.373011,9.118876,0.670831,-5.020780,-9.633610,-9.818024,6.703249,-3.100087,-3.439965,6.517711,-4.618531,-9.648893,2.880144,7.940619,9.424107,1.705339,9.154743,-3.882871,-8.325509,-8.444437,-5.152217,-1.106501,-2.158777,2.870991,3.215972,0.481337,2.639889,-3.791085,-4.545733,-7.953856,-4.819314,1.121025,6.182764,-9.503041,-3.674217,-0.752102,7.857740,3.637923,1.395266,6.459274,6.637481,5.572516,-1.563859,-1.698828,4.067627,-2.782748,-7.843192,7.844700,6.889910,3.933904,-8.257199,-5.229069,-3.706185,1.999486,-3.853663,-7.390998,3.766575,-1.366542,2.730264,5.683131,-6.953314,-0.479257,4.147825,-5.765345,6.988689,3.160721,0.458145,-6.164170,5.267889,5.089441,-1.323837,7.056882,9.735147,9.419154,-8.607240,6.457692,9.420079,-3.640793,8.556109,3.186896,-1.223121,4.537440,8.456765,-8.747833,0.470167,-0.571970,6.904795,-1.144335,-2.498334,-9.264368,-4.133033,8.328588,2.624926,-3.460402,-1.678101,-6.974360,-0.600148,-4.469915,6.565465,-5.435047,-9.318477,-2.294910,0.002457,4.320347,-8.431900,-3.909191,6.907055,-7.739934,1.332312,-7.151361,7.889567,2.028776,-6.681113,7.123823,-2.545290,-3.565207,-7.289484,-8.439771,0.351284,8.629665,7.886401,-7.577496,4.710993,-4.211140,-7.291362,-5.672068,4.029708,2.219869,1.478161,2.163607,7.015868,7.683835,-3.271986,2.302639,9.105778,8.910228,-6.567022,5.005594,0.553330,3.648840,-3.630111,2.916208,1.890488,1.697682,1.685554,-1.511232,5.750090,-6.874275,9.136448,3.066665,3.567479,-1.471499,4.780285,4.675632,2.995892,-1.009721,3.422717,0.071986,-9.407770,3.733567,1.376903,-2.475691,8.585872,-4.354076,-9.791786,0.555443,-6.113309,-7.626879,-4.921327,-7.242241,-8.452544,5.135961,-2.949161,-3.943328,-3.387112,-5.425391,5.653663,-1.433345,-7.294685,3.393075,-3.215551,-4.098515,-4.543776,-5.680333,-5.343176,-9.854842,5.630707,-7.001632,-1.620276,3.362549,7.841022,-9.771616,-1.529759,1.214314,6.732901,-3.718531,-0.036938,3.434081,8.340652,3.448909,-8.846788,-0.768551,0.584091,-3.529559,4.446772,-3.598641,3.751813,1.327939,0.198115,-7.852629,7.193072,6.380251,8.295718,1.196809,-8.912762,9.775388,-4.501517,0.140298,-4.953561,-9.028974,4.288809,-0.136809,9.684842,-9.990810,6.684029,-1.143820,0.761777,-4.028575,-0.471491,8.523983,-1.963629,2.739582,-6.793908,-6.861160,-7.479687,-0.966366,-3.626834,1.432113,-3.929643,-5.977489,-5.813531,8.545195,-8.727006,0.175241,2.218956,-9.613888,2.093620,-0.581323,-1.681075,-6.644060,6.681993,-4.774304,-9.677426,-3.019098,0.618526,-9.228986,4.159451,-7.513303,3.625158,-4.022787,-3.352562,-5.862801,-6.121872,-2.726367,9.540172,-1.643749,4.451321,-6.698647,-4.283582,5.473573,-4.277411,6.244052,4.793877,8.704035,1.026131,8.965407,-9.387195,1.430367,-3.997689,5.881512,0.636832,7.270520,-5.045508,-3.764349,-0.686541,5.591013,6.981172,-4.538682,-1.367692,0.274135,8.620815,4.193038,-8.614789,-9.086860,-5.388742,-9.250334,7.224117,9.995346,-0.898893,-8.410788,7.877731,3.542107,9.926180,9.742303,0.009711,3.869614,4.665632,8.035281,-8.376034,-2.450777,0.768606,-1.844700,-8.417042,6.361097,0.489993,4.999602,1.595634,9.086743,-8.106474,-2.845715,5.855615,-6.658585,-5.293222,-0.933971,-9.286496,-4.162981,0.289880,-0.631203,-3.783939,-6.705378,-2.803162,-6.704254,-8.008430,-8.225603,-5.495425,0.831998,-8.745662,-0.615554,2.811605,4.268104,7.567115,9.456389,-6.007958,3.566592,9.201030,-9.039435,5.896697,3.775334,-2.664147,6.448148,-9.523331,-1.476121,-0.584463,-6.471920,0.706694,1.359297,2.643006,-8.438348,7.763290,-1.906984,5.045334,-4.755137,8.491065,6.078084,4.399522,-5.750426,4.172019,-0.734798,8.932069,3.265440,9.408339,9.937138,1.168999,-2.995192,3.440464,-4.585444,-8.558725,-8.804894,-2.720595,5.570977,-0.498669,-3.360325,7.015100,3.941521,6.484105,0.219820,-5.060246,0.373836,-4.216974,-8.411348,-5.523785,7.105699,4.663949,-9.299125,8.212736,7.330961,1.355829,1.541542,-2.514482,3.899131,2.366964,-3.268629,0.897510,8.230114,-4.952400,-8.349056,-9.889537,8.776717,5.113690,-9.345874,6.023320,-5.855939,0.074217,0.513418,-4.838127,3.253320,-5.171185,5.189439,1.221629,2.681063,-3.922370,-8.205652,1.812705,-4.635421,2.091667,2.904416,-1.195895,0.768890,5.194013,-4.853239,8.666429,7.080742,3.242358,3.156943,-3.928311,-5.341326,-9.479376,9.187055,-9.560006,-0.832071,-2.683696,9.979479,1.705184,-4.429488,7.951217,9.564843,-8.191990,-8.437740,1.123761,-6.403309,5.403130,9.430850,5.034689,9.443868,-0.651626,3.653163,-6.753446,-0.183397,9.691332,-8.871240,1.745605,3.142829,0.963538,4.288670,-0.409613,-9.908319,2.116720,7.578883,-9.270128,-5.879836,2.916224,-0.982257,-9.707736,4.323344,4.894617,1.521233,7.611788,3.830307,-0.131760,-5.274245,-5.685213,-0.544884,-7.714762,0.433306,3.003526,9.586058,5.189794,-1.261841,-5.278179,-7.481499,2.743629,-2.256225,-0.088684,6.471855,3.437279,5.716013,-3.682428,9.991511,-2.269301,-5.335984,-3.610969,-7.698201,6.914597,-6.011835,-8.117992,7.714722,-0.954562,0.220641,8.160864,5.053277,-5.415822,6.789926,2.388068,8.518080,4.616352,0.601235,4.722976,8.606102,-5.595216,1.534636,-6.541811,-7.645992,-1.294417,-3.188284,8.168584,-2.219806,-4.527939,-6.284928,-9.899402,3.806199,3.368470,-0.679703,-9.749598,4.380654,1.758822,-9.075934,-1.967249,-6.415933,-1.416821,-0.732204,-6.475056,3.090661,-1.035066,-3.089555,0.388866,-5.575931,-5.571713,0.765232,2.874512,3.407009,1.704457,-7.017250,3.956585,4.654522,2.301112,6.548126,-5.855371,0.830968,-1.535923,-2.418245,2.434343,5.977942,9.977678,9.713276,3.453212,3.573015,-1.067359,-0.003888,-8.896841,3.959428,-8.277745,0.592599,1.241092,6.780407,1.851216,1.505515,7.063535,-8.897647,8.783280,1.313824,6.106717,-5.788050,-1.500886,1.545760,-2.200933,2.232182,1.677238,3.727027,1.141610,-0.515776,-5.576294,3.644670,-4.514597,-5.791058,8.205073,9.515379,-3.076554,-5.331247,-7.881088,3.156398,-8.586038,7.139329,-9.249737,-4.823098,-8.268933,-7.312591,-2.261298,-3.437102,8.309682,5.037375,-3.865518,3.312791,-5.107843,3.162105,4.328914,5.017546,3.380093,5.048033,1.464864,6.213416,1.974524,1.751777,-0.495129,-3.371432,-4.129873,-8.223399,-0.271822,-4.737869,-9.986494,-3.296958,-7.637909,5.701697,-6.422772,3.295199,9.431972,6.826596,-1.571843,-5.234749,-6.473129,0.501434,-6.428799,7.527364,4.523892,8.975735,-5.610980,-9.469906,5.322505,-7.914128,-6.701697,-2.075353,5.994002,-3.599062,-3.701215,-9.511686,-2.495565,9.216320,3.414745,1.682042,-0.577205,-4.883209,-4.533261,-9.155628,3.771967,-8.664924,-9.884786,2.677803,-4.044416,-8.224268,-8.322851,-0.590285,-6.081959,-3.184362,-4.147599,-2.622105,-5.375480,8.546504,1.931341,9.937992,4.114279,4.441265,-2.463469,7.505689,-5.075637,9.325426,-8.691613,0.654555,5.362499,-7.172374,-4.710531,4.064893,-8.183838,7.695626,-1.358891,-8.043881,-5.012474,1.475690,-8.570081,-1.185705,-7.550567,3.319125,5.999235,0.480863,-7.959577,-9.214396,9.624554,-0.486875,3.198343,3.997067,-1.999809,1.217692,3.967978,8.931479,0.026867,7.551503,8.826871,-3.204455,9.291564,8.416204,9.044411,-0.721134,8.099869,-2.294671,3.300325,-2.582739,5.865370,-4.018249,8.884792,-0.387629,3.160543,-1.996769,8.595704,8.246199,5.397751,-2.984117,7.955183,3.782665,5.959684,0.740063,3.222132,-3.681288,6.558152,-0.803562,-6.092153,0.782381,-4.250065,-0.657563,-5.835566,-7.572611,8.663245,-1.311252,-9.351987,5.143057,-9.304172,-3.386195,6.025317,-1.977353,1.475523,9.098395,-7.390722,-3.491174,-5.168457,-4.906381,-7.314393,-4.998457,1.382510,-8.467206,-5.229075,-3.210796,-0.324038,7.132371,7.526664,-2.551583,-2.522798,7.844998,-5.077374,3.876250,-8.101659,6.991144,-8.357383,-1.494785,4.110613,8.429561,3.693989,-0.317106,-3.037660,2.909381,8.171896,3.632321,2.270351,-0.123739,-3.606015,-0.516314,3.501598,0.736962,-2.223907,-3.554400,6.896913,3.541578,3.281254,-1.753803,1.145044,5.913872,-6.667428,-0.120442,6.330072,4.532551,-1.165411,1.617905,-0.916036,-7.392604,-0.988227,-0.384587,-8.884381,-3.769204,6.039790,-9.452256,-4.025970,6.989835,-7.826044,-7.896447,2.808066,2.170435,-6.356390,8.351131,0.611969,8.703077,-0.277557,9.905510,8.017205,-9.893440,8.553491,-1.347608,3.812897,-0.851103,6.648792,7.753082,-5.743817,8.655642,7.639699,6.157648,-5.374146,6.545956,-9.038589,2.583511,-4.554948,-4.190836,-6.690012,-8.082794,7.516337,9.369348,3.624486,5.875528,8.327087,-1.912644,5.403996,-1.856040,-7.506686,3.838222,-8.338086,9.518291,-5.774888,-1.394593,-6.703312,-0.013098,2.106722,-6.719692,9.947127,1.044092,-1.987231,1.660977,6.849100,8.818413,4.121037,7.656661,-3.596517,3.630167,-2.887694,2.343386,-5.483579,-4.454478,-9.840601,-3.940319,-9.076651,-4.632858,-0.996772,8.884883,2.490078,3.194490,8.314778,9.650890,7.961304,-1.469438,-6.622546,-3.115845,-4.533920,5.163575,-7.386529,-4.555423,5.522813,5.695153,-3.608097,0.406516,-9.097000,3.952679,3.708601,7.650918,2.889792,7.446198,4.653085,-7.019629,-1.748665,-0.047709,7.465820,-5.682535,-7.703643,-8.229626,-7.980877,-3.091935,5.533838,-0.427293,-1.668196,0.875396,8.307876,-6.622162,0.734610,-8.686022,-5.241150,-6.451666,9.339468,-9.024971,-7.742826,8.834368,-4.895708,9.627290,2.313547,3.444963,2.023362,8.884378,9.603351,-5.521554,-1.649359,-1.823273,3.174062,-7.613810,6.541596,-2.126625,-8.211711,-3.956933,-5.317585,-1.550277,4.308236,2.429027,-0.107389,-1.948833,-8.370839,-4.817470,6.180937,2.726488,5.098686,-8.465476,-4.291132,1.665165,-3.430827,-1.404026,7.269040,-8.427845,-9.324093,-7.492843,-4.258583,-5.894799,2.470800,7.373700,7.676629,3.989258,-6.259142,-6.210793,8.476822,6.722740,2.595548,-7.213471,-2.375057,-3.097742,-7.729238,-4.103081,5.802569,-1.008908,1.311616,9.968568,-7.793384,-2.354373,-4.497371,-7.249789,-4.874928,0.516281,9.388678,-8.829118,-8.681109,-1.907839,1.924037,9.690579,5.984106,5.751908,2.797050,3.400380,-3.064292,0.876524,-4.658506,-0.989030,0.838395,2.373552,2.407434,8.079466,-0.724124,-6.315684,-6.377862,-2.653509,2.989589,-2.860121,-7.961659,8.198591,2.881377,-4.433854,-0.337091,-2.533247,-3.435798,-7.685514,-0.389776,-5.154876,8.670883,-4.243160,-2.208815,7.321629,6.171807,4.855001,5.839541,-7.420117,3.380064,7.517739,9.430385,3.457449,7.187263,2.596300,5.407877,-2.397004,-9.630408,-5.016497,7.428936,4.187201,-9.286505,-6.496365,4.787833,-8.791939,6.742968,-9.890293,-4.115712,1.773114,2.066817,1.903630,-7.821781,6.851363,-2.523068,0.559667,5.216860,-8.973897,6.580535,4.278495,5.571265,8.172002,1.133802,7.622824,-7.700615,2.286018,6.296819,-8.207886,-2.974267,2.551093,-1.095472,-1.670606,9.049076,7.494275,-8.043162,8.068730,-8.498265,-7.778397,-3.723247,0.412159,-8.272773,-4.232378,2.165854,5.104245,-8.532168,8.257844,-9.571958,-1.420589,-5.779717,-7.216304,-8.259668,3.214817,2.401850,2.805569,2.226573,-5.897301,8.829926,-1.519982,8.062131,1.446068,-4.108584,-7.510560,-9.215962,-7.809425,-6.459234,2.518739,-1.906451,-3.928630,2.602251,8.089735,-2.154920,-9.779471,-1.618279,1.417166,2.010322,4.028755,5.171134,-7.626083,-7.195054,-1.359523,9.182449,7.165706,-1.248132,5.413953,7.100849,9.494578,-8.744820,-8.146491,-8.101127,3.254135,-4.115448,0.587341,-5.286668,2.450773,-2.435109,-0.045140,-8.515787,2.382371,8.175296,-1.431060,2.585613,-2.032649,6.588905,-3.803528,-8.605648,9.306325,-9.606576,-5.961391,-0.066094,0.838817,-4.168194,7.989920,5.960076,3.785084,8.560563,-6.326367,6.580938,7.292136,5.265766,-9.481778,6.133145,-4.708672,-1.209525,-4.764974,-6.887009,2.530121,1.986155,1.482851,8.177535,9.614821,-4.027640,4.361283,8.080516,3.329029,-1.137885,-1.295653,5.668280,9.261107,-8.698557,6.924827,2.936239,6.273556,6.056916,-1.537855,0.466648,6.894093,6.970771,-5.987873,8.605336,1.019298,5.324239,6.371532,-1.967580,9.157388,7.544962,7.813883,6.927825,4.323001,-2.672661,-2.401458,-2.465792,5.968470,-0.569980,-9.243687,2.448607,-8.919527,7.170346,-4.361875,-4.040170,-2.367372,-0.905002,9.067565,-4.601217,-3.268450,-3.934418,4.686026,-7.951574,-7.060749,-1.970518,8.834545,-9.950782,-1.430803,8.938436,7.345559,-7.298663,8.803515,2.274185,7.980755,-3.133854,-7.618436,-0.836246,7.823318,8.368383,3.459901,-2.041105,6.896303,-7.680144,-6.305742,-6.029760,-7.825946,-7.970836], dtype = "float64")#candidate|9871|(1638,)|const|float64
const_9872 = relay.const([[-2.152271,5.927374,5.398506,-1.312726,-8.431255,-7.304739,-5.575341,3.114986,-9.326309,-4.381678,5.654931,2.834217,7.079363,8.752017,5.430174,-7.739701,6.861488,-8.380351,-7.530796,1.158902,4.599775,9.648869,2.286259,-5.093548,-0.561085,5.973865],[0.358233,4.232630,1.622441,-0.560321,-1.648288,8.230645,-7.690937,-1.680311,-7.554299,4.694380,-4.478675,2.602280,5.736550,2.993500,-5.789685,1.548652,7.870987,-9.330177,-1.931529,-5.403559,4.385122,-9.096243,9.780825,-9.568237,-7.574066,6.491004],[-5.531054,-8.852940,9.780865,-0.541802,-1.641177,6.486962,-9.784599,3.730200,5.868931,6.338505,4.926648,-2.044883,4.082452,-2.453289,9.020865,-3.563440,-6.131617,3.755054,-4.176641,3.312590,-9.191234,-8.023344,4.923718,8.392812,8.250245,9.461411],[-9.272727,-8.315097,8.685544,9.086591,-5.824052,-3.828489,-2.928456,-9.547149,4.127841,-1.149173,3.331787,5.678720,-4.597518,6.148917,9.229936,-0.086891,-7.876464,4.895171,7.438383,-2.439557,-7.534332,-6.255370,1.078315,3.331673,-7.945439,-6.402747],[7.934744,-2.568704,-8.868379,6.358034,2.262878,0.074206,-4.890961,2.509888,1.863011,-6.283260,-1.663930,-1.174311,8.127209,9.230212,7.977670,5.980078,1.660898,-9.534030,5.582348,9.048989,1.014539,0.895832,-9.215341,3.775508,-3.136789,1.039645],[-1.899141,-7.809379,-8.643768,-3.201812,3.516933,-1.068859,7.105733,-3.185885,-6.042953,1.557942,-4.302674,-2.703809,0.234724,-8.712650,5.449673,6.929943,-1.068259,0.534870,9.318567,-8.681713,-4.865205,2.665038,-0.580624,-5.773370,4.490721,-0.770611],[-9.053403,-2.317446,3.749225,-2.905777,1.313647,-4.268112,4.122860,-3.420902,8.096831,-2.321011,1.985254,-8.151404,0.267499,-4.912071,-7.280859,9.207923,7.132910,2.779903,-2.322635,6.926704,8.313512,5.237832,-3.048792,7.512353,8.595920,3.874141],[1.128398,-3.340523,-7.744049,6.260826,3.917610,-1.751199,6.231364,5.218447,5.580908,1.444209,6.745616,1.240253,-1.591431,7.198436,-4.775917,-8.048316,-8.909674,2.051688,9.188174,-1.607513,6.515969,-6.671578,-1.961601,-3.899456,-9.851805,-9.300791],[3.526041,0.224941,-7.064759,6.839317,7.597471,-9.652441,-6.581509,4.545797,-1.519344,-7.398623,-8.922731,-3.521055,2.065084,-1.847728,-3.455775,5.955689,-3.683123,4.975437,9.108831,-1.035963,-4.782042,8.938530,-8.676835,3.726316,-8.657975,-6.242591],[-8.176212,1.178469,7.007264,7.919905,-8.736985,4.048755,-9.961232,2.808492,3.070397,-2.883817,-5.093687,-1.455827,-9.021361,3.787515,-5.688590,0.691794,0.104533,-5.917502,-4.439618,-7.464950,-3.759950,-5.430681,9.827403,-9.312307,1.856096,-1.922734],[-2.696646,-7.992152,-9.878078,8.948958,7.905856,3.964403,7.720184,5.361620,-6.030220,-9.121734,-1.182830,2.339880,-0.756363,-0.930081,-6.939406,0.915427,-5.837284,-8.714572,-4.689292,0.255954,-1.559819,-9.430169,-9.075684,-9.557141,7.227015,5.512789],[7.685319,5.248299,-6.082629,7.557005,7.399962,-9.726391,-0.211783,-3.887212,-3.557601,-2.372799,5.310264,1.618564,-2.928617,-9.857895,-1.290667,7.986547,-2.510635,-8.450684,9.187307,3.869709,-9.406691,-2.937403,-3.004184,3.755228,-3.391866,-3.505934],[-3.657972,0.866669,1.436005,7.581167,3.796247,9.993658,0.649255,-5.945424,1.611019,9.185595,0.500575,-1.284977,2.157790,7.119260,1.490085,3.235143,7.160364,-5.884141,-6.523652,-1.011663,5.876779,1.822389,3.287825,8.522487,5.201627,3.786387],[-9.258218,3.924333,6.410333,7.100184,-1.444881,0.168401,5.218436,-2.162931,8.506580,7.937022,-2.411275,4.777377,-6.711691,-3.463728,-4.502775,1.445893,7.082826,-6.818102,1.955148,2.796623,-1.789190,0.661988,-2.370535,9.655155,-9.730205,-9.889021],[3.662995,4.013788,-8.719969,8.800217,8.616163,8.995678,8.208046,2.073185,1.210727,-9.841800,4.840149,1.004508,9.656882,3.998561,1.574405,-1.902165,-3.345929,8.629889,7.844250,3.169978,6.579802,6.196087,-5.439726,9.448978,3.258975,7.927362],[7.924154,6.276763,7.394030,-2.699404,-0.526477,7.502367,-4.615523,-3.694551,6.483489,-7.838261,-1.096498,-8.772406,3.785116,4.984226,1.488158,9.009828,3.663288,-9.737456,-1.742149,-1.632539,9.445077,7.126614,-7.566881,-2.350963,2.367483,-6.852373],[-9.697600,-9.741513,-6.751016,4.091509,-8.420741,-9.309944,7.107563,-5.645836,0.957752,-2.591037,-4.603153,2.353139,9.869157,-2.941677,-1.939987,2.126342,9.163106,-7.900492,6.426117,-6.891745,8.530983,6.153244,3.153927,-1.940234,-9.223572,3.226114],[-7.018493,4.644302,-1.655233,-7.829903,-2.390243,-6.095035,1.860521,7.315450,-9.361184,-5.017030,-4.937009,-7.204567,4.824740,2.867492,6.603350,-0.894652,9.658719,-5.586614,8.271851,-6.993494,-3.955260,-3.503998,-5.348506,-9.339071,2.669892,-6.235739],[-9.116310,8.099256,3.089224,-4.913385,0.510726,-5.748934,-9.486743,6.579977,5.288629,-9.296460,-9.528624,3.763944,-2.101054,6.609161,-4.269203,-0.987676,-5.443005,-8.423426,-1.604363,-2.501539,9.489883,-5.287876,7.414240,8.874065,4.116214,-2.343047],[-2.266227,-2.542998,8.186324,-2.396952,3.808303,6.121057,-4.180440,8.466434,-9.781242,5.830194,-1.355840,1.102212,7.540904,-0.808262,-7.619437,-7.981805,-9.825113,-3.942190,-8.251769,5.406534,2.306005,0.435297,-3.746649,-4.021081,-2.707745,-5.374233],[2.021256,9.394598,9.120666,1.246593,-8.800629,-3.938786,0.962678,7.023685,-8.454510,8.405820,7.646888,1.374207,-8.817821,-5.286092,5.521614,1.561280,-8.947117,9.873142,3.333511,-6.205147,-0.192898,-4.686452,2.198498,7.854318,3.871773,7.145304],[8.445962,-5.437948,-0.845232,7.310194,-1.915656,-4.056430,5.914141,-6.882260,-5.877421,-4.706744,9.214926,-7.738766,-2.884717,-7.303290,0.616417,-4.981056,8.848320,-7.790990,8.458824,3.069576,-5.237114,5.776311,-9.004210,-4.885907,-4.816681,9.898117],[-0.492014,-0.640913,-4.056204,-7.900057,-3.269902,-4.620482,4.361727,5.008098,-9.714187,-0.700184,-7.015075,-3.791776,0.573629,8.492570,-5.935834,-9.815151,9.578543,9.961488,9.138269,6.790628,8.186879,4.809608,-4.205331,2.746907,-6.997606,0.204235],[6.932646,3.233217,2.704469,-3.767886,7.099497,-2.903887,9.542214,-7.793912,7.134967,-0.562417,-3.660583,8.336865,-4.698278,1.393534,2.214132,8.384773,4.508895,5.811071,-2.727252,-3.330640,-3.276172,-7.749867,-3.787660,9.313426,-6.503657,-1.818461]], dtype = "float32")#candidate|9872|(24, 26)|const|float32
const_9873 = relay.const([-1,5,10,7,4,-8,3,-7,10,-1,-9,1,-1,-7,10,-10,-1,-6,-5,-2,-9,6,-4,10,-8,-2,-1,8,-10,6,5,2,3,10,-3,8,3,-3,-8,1,-6,-5,-6,9,-10,-9,-3,2,10,-5,-4,-2,-7,-6,-10,3,9,-2,-10,4,-6,-6,3,4,-2,4,-1,5,-3,-5,5,8,-5,-3,-1,-5,-8,-5,-1,-2,-9,-8,-5,8,-1,3,-10,-4,-3,-10,-3,-3,-7,2,1,-8,-2,-1,-1,-7,4,10,2,1,-10,2,-7,4,5,-10,10,7,6,9,8,10,5,-8,-6,4,1,9,3,1,-9,-6,-1,-1,2,-6,3,2,8,6,-10,-1,-8,-10,4,-1,-2,-10,-10,10,10,-2,-4,2,8,-7,10,-1,8,9,3,-3,-7,-6,5,-10,-3,-9,-9,-10,-2,-7,-3,-9,10,-3,8,-7,-10,-1,-10,1,3,2,-4,1,7,6,-8,3,5,-2,9,-7,4,-7,8,10,9,-5,4,8,-6,3,3,6,9,2,-9,8,-6,-6,4,-6,-7,7,7,-3,4,-10,2,-5,-4,-9,-8,6,4,8,7,-3,3,6,-7,-6,4,6,-2,7,1,-10,-4,1,-8,8,-3,2,10,7,-6,6,10,8,-6,9,10,4,-6,2,6,-1,-2,6,-10,9,7,-8,1,9,10,5,-9,-1,-6,3,6,2,7,-10,-2,-3,-6,5,8,3,6,-5,8,2,-3,-7,-8,-7,-8,2,-5,8,7,-7,1,-2,-1,-4,4,-3,2,6,-9,-5,-9,7,-1,5,10,4,5,8,2,3,7,-5,-5,9,3,1,10,-7,-4,-10,4,8,1,-5,8,-8,-3,-6,-3,2,-8,9,-2,-8,9,-3,-3,4,6,6,7,-1,-9,7,-1,-8,-4,4,3,4,-3,7,-9,1,-8,1,2,-6,-10,-1,-3,-9,-7,-1,-6,-4,-4,-6,-10,8,3,5,-3,4,-5,-6,3,-3,10,-3,-1,-7,6,7,8,5,-7,7,-3,-5,6,-7,7,-1,6,-3,-9,-3,2,2,-7,3,9,-4,-9,-1,10,-3,-7,-4,-8,-1,7,-3,-6,-1,4,-9,-4,-7,3,9,5,-2,8,-9,-3,3,-4,9,3,-5,3,-2,-6,-1,7,2,-2,6,2,-6,6,5,6,-2,-3,8,10,3,6,-6,-2,5,-5,-3,8,10,-9,-6,8,-5,-6,4,-10,-3,-1,-9,7,6,-7,-7,-8,-9,-3,-3,-4,1,-9,5,4,-6,-6,5,-9,3,9,8,-10,-6,3,-3,6,-6,-1,-6,8,-7,7,6,-2,-1,-3,-2,-8,-6,-8,8,5,10,-5,-8,-10,-7,-8,2,-6,-4,-2,1,-5,-10,6,-8,2,-6,8,-9,-2,3,9,-9,-8,3,-9,1,1,-8,9,-9,-8,7,-2,2,3,1,3,-9,5,3,6,8,7,-4,4,9,-10,-7,5,4,5,1,7,10,-2,6,9,3,1,-4,1,-6,10,-1,3,2,-3,7,-3,-10,2,-10,9,8,-3,5,-6,4,6,-10,3,8,-4,-3,-4,1,10,-8,7,1,10,5,-10,-1,-6,-5,2,-4,10,5,-4,-9,-10,-5,5,-8,-3,1,1,10,-3,-8,-10,-3,-2,4,7,-10,2,-5,-3,-4,-7,10,8,-7,6,-8,-8,1,-1,5,10,-4,-1,1,-1,10,1,6,-1,2,8,6,-5,7,-1,2,6,-4,-5,10,-10,-2,2,2,-10,-1,-8,-6,3,9,-6,7,-8,-10,6,7,-2,-8,-8,8,-7,-10,-7,8,-10,5,-7,-7,-3,-8,-8,-4,-5,-7,-5,4,-3,8,1,-9,2,-6,-6,6,1,-8,-8,-9,9,9,-10,-7,-9,4,-1,-10,9,-4,10,-6,-3,-8,-1,7,5,-3,10,10,4,-7,9,2,5,4,-7,4,7,2,-1,7,6,2,1,-5,-6,-2,2,-2,9,4,-8,-7,-2,-4,-9,-10,-4,-2,4,2,10,4,7,2,-6,3,5,-1,-10,-4,8,3,-6,-9,-2,10,-4,-7,4,8,-6,-4,-10,1,-9,-8,-9,-1,9,5,10,5,-4,4,2,6,2,10,-4,-3,-6,-2,-3,9,-4,3,-2,7,-1,-3,-10,2,10,3,6,7,-6,-6,3,-2,2,10,-6,-1,5,-1,-3,-6,-8,7,4,6,4,-10,9,-5,-9,-6,-3,3,1,4,10,6,-10,2,10,5,-1,-4,-8,3,3,2,8,-3,-1,2,-8,9,-5,1,2,1,10,-6,-2,6,10,-3,-5,-5,5,8,-8,-9,-2,6,6,-7,-3,-5,-4,2,10,2,2,-2,7,-10,8,7,2,4,-3,6,-6,10,-3,3,8,1,-7,6,-4,8,-6,6,8,-7,10,4,-6,7,-7,-7,8,-4,2,8,8,1,-10,-3,-4,-9,4,4,10,-3,2,1,-7,-4,6,-4,7,-8,2,-5,-2,5,-8,7,-8,4,-10,1,-9,-6,-6,-9,8,2,-9,-8,-1,-6,-10,8,3,10,-8,-1,-6,4,-9,-7,-10,-7,-7,-9,-8,1,8,-7,-3,4,-10,10,4,-1,7,-10,-8,6,-3,-4,-10,10,4,8,-6,9,-9,-5,-1,6,4,-6,4,-8,7,-8,6,-4,5,8,-6,1,-5,10,1,-5,3,-7,-3,4,6,-8,9,-3,-8,8,-7,1,5,10,-1,-3,8,1,-7,-3,8,5,5,-4,6,-9,2,7,-5,-5,1,1,10,-1,9,-9,-7,-6,10,-7,3,1,6,-5,4,7,10,5,8,-8,-9,-3,1,1,9,-10,-2,10,-1,-10,6,10,-3,-7,-2,9,-2,-10,-4,-4,6,5,-7,9,9,10,-7,1,-7,3,3,-1,-4,8,1,-1,6,-7,3,8,5,9,-10,2,-9,5,6,-9,-6,-10,-8,3,1,6,8,-7,-4,5,-7,1,3,-9,1,-1,6,-5,-6,-10,-8,10,4,9,2,-2,-4,-4,-9,7,-5,-9,2,7,2,-5,-6,8,-10,8,2,2,4,-2,1,7,8,6,9,9,3,-4,9,-8,9,-3,-9,5,-1,10,-6,9,-2,5,-10,-5,-8,-1,10,-6,-9,-10,-5,6,1,9,3,-3,-7,-8,-5,-2,-3,2,4,4,10,-4,8,1,5,9,2,-1,-2,-5,-4,-2,10,2,-5,-9,-2,-7,2,10,-10,5,2,-10,-7,-3,-10,9,10,-5,-10,9,-9,2,6,1,2,-7,-2,-1,10,1,9,-3,3,-6,-2,3,-1,3,7,-1,-9,-5,5,-1,10,-8,-2,-9,-7,-8,-8,-2,-7,6,8,5,8,-10,6,10,3,-4,-7,10,8,6,-10,-6,-3,3,2,1,-9,-4,10,2,2,-8,1,-4,7,-6,8,6,-6,3,10,-9,2,-6,9,-6,8,-9,-4,-9,-5,-2,10,-4,-8,6,10,-6,3,7,-4,3,8,2,-7,5,-7,-6,-6,3,7,1,-9,10,-3,-1,9,-8,8,-9,10,-8,2,3,-2,3,10,-5,-2,-8,-1,3,-5,-6,-10,7,-10,8,6,-1,2,10,-7,10,1,6,8,-1,-10,-5,2,2,-4,-6,-6,1,-9,9,-5,5,8,7,1,-1,6,3,6,2,8,4,-4,-1,7,1,10,9,7,3,5,9,10,1,-9,-9,2,-2,-8,1,4,7,-8,-1,-2,3,10,1,7,-5,-5,-5,8,3,-2,-1,-8,2,7,-1,10,8,-9,8,-9,2,7,-10,5,-1,10,5,2,-4,-1,-8,10,-10,3,4,-3,5,-2,-7,8,5,-1,6,8,-2,6,3,-8,-4,1,2,-4,5,3,4,9,-1,-10,4,8,10,-8,1,-5,6,3,-1,-8,-5,-10,2,8,10,2,-7,-1,-4,9,-4,10,-2,1,-2,-10,8,5,9,-5,1,-4,8,7,-6,-7,3,-2,2,8,2,2,10,-2,-9,10,4,10,1,4,-8,-10,10,-5,7,8,-3,-9,-6,-2,10,6,-5,-6,6,6,2,-4,-1,-5,-2,8,-1,-6,2,1,9,-5,-4,3,-2,-3,-8,-5,3,9,-10,1,-6,8,7,9,7,-2,-7,-10,-5,-3,7,4,-9,7,10,3,-7,5,10,-9,1,7,-6,9,9,6,2,-8,-3,-10,-5,10,-4,7,2,-1,7,1,7,7,-1,-2,7,2,4,-4,7,-2,-10,6,-5,4,-7,7,2,9,-1,6,8,-7,-2,-3,6,1,-4,-7,-4,-3,6,6,-6,-3,4,4,-7,-8,1,-7,7,-2,-5,-2,-9,-1,-6,5,1,-10,7,-9,-2,-3,-8,-1,-10,-8,1,-3,6,7,2,6,10,-8,-8,1,-6,7,7,-1,-9,2,-10,4,3,-9,-5,-6,-9,-4,-5,-10,-1,9,3,7,-10,5,7,5,1,3,-9,3,-7,-8,3,-5,5,4,-3,-3,9,-2,-7,6,-3,4,-10,-1,-5,1,-6,-4,-10,10,-7,-8,-1,7,-1,6,2,7,8,-10,8,-2,-10,7,5,5,2,-2,-6,-1,-10,1,6,7,-8,8,10,2,8,-10,-1,-7,-8,4,-6,1,1,-9,1,-10,2,-7,-9,2,2,-2,-7,-4,8,9,4,-1,3,1,-7,-5,10,-1,2,-8,-5,7,-9,-7,2,2,-7,10,-2,-3,1,-8,-9,2,4,6,-2,3,6,10,-7,4,5,3,-5,6,2,9,-5,-3,-2,-10,5,-8,5,-1,-10,8,10,-3,-6,3,5,1,6,8,-4,2,6,-2,-10,5,9,5,5,-4,-9,10,10,3,-5,6,3,-1,-10,2,-6,-9,-2,-4,-4,-7,5,8,-9,5,-4,-3,7,-8,7,-6,-8,-9,9,7,-4,-8,-2,-6,7,-4,10,-10,1,5,-5,-4,4,-3,-9,-6,-5,-1,1,9,-9,-1,-10,10,-8,-9,8,7,-7,6,-1,8,-9,6,-6,-9,7,8,2,7,4,4,1,3,2,-5,-2,-2,2,10,-2,-5,-1,-4,-10,5,-1,6,-10,2,-6,8,10,10,7,-9,1,8,6,6,-5,10,10,7,-2,-4,6,10,-2,-9,10,-10,2,4,-9,2,1,-9,-7,-1,-5,-9,8,10,-10,1,-5,-3,-6], dtype = "int64")#candidate|9873|(1960,)|const|int64
call_9868 = relay.TupleGetItem(func_5366_call(relay.reshape(const_9869.astype('float64'), [15, 16, 1]), relay.reshape(var_9870.astype('float32'), [780,]), relay.reshape(const_9871.astype('float64'), [1638,]), relay.reshape(const_9872.astype('float32'), [624,]), relay.reshape(const_9873.astype('int64'), [140, 14]), ), 7)
call_9874 = relay.TupleGetItem(func_5372_call(relay.reshape(const_9869.astype('float64'), [15, 16, 1]), relay.reshape(var_9870.astype('float32'), [780,]), relay.reshape(const_9871.astype('float64'), [1638,]), relay.reshape(const_9872.astype('float32'), [624,]), relay.reshape(const_9873.astype('int64'), [140, 14]), ), 7)
func_8443_call = mod.get_global_var('func_8443')
func_8446_call = mutated_mod.get_global_var('func_8446')
var_9877 = relay.var("var_9877", dtype = "float32", shape = (55,))#candidate|9877|(55,)|var|float32
const_9878 = relay.const([-1.804855,4.949895,-7.526469,-5.643738,8.137367,-0.547834,-4.432532,-9.006400,3.946234,-8.529695,2.015807,6.205272,7.474282,0.795126,-0.753170,-1.837413,-9.432534,-9.937902,-6.766943,7.429299,-1.018880,-0.790405,-6.015428,3.650510,-6.321204,-6.100279,7.810402,-6.636075,5.786815,9.638567,-2.441126,-7.861911,-5.914923,4.308034,4.004041,-1.371332,-1.952510,5.706080,-5.262777,9.374784,-6.121296,-1.700713,8.144391,3.048073,-2.439387,3.542746,-1.109837,0.319991,-6.709787,5.355025,7.316932,1.289562,-1.127146,-8.952110,0.258875,-9.499565,-2.327375,-8.370260,8.040874,-9.641850,-8.345101,-8.991052,7.748581,9.585412,-6.236355,-4.173738,5.975397,-3.405747,-3.618304,-2.158476,-9.812371,1.058664,7.327288,-4.759452,4.205551,-2.121433,-5.065647,2.480402,-4.373436,7.824853,8.649754,5.148621,-0.144153,2.431949,-0.907429,-0.982599,-9.957586,7.083757,7.035261,-1.185187,-9.166723,2.205933,8.053792,9.922841,7.602456,-8.925676,-7.467399,0.518737,2.345501,2.517007,-1.164066,-5.421924,2.253569,-3.142465,-6.411626,-3.596331,9.634404,3.308428,-4.322717,5.710248,-9.354931,-0.414976,0.003450,2.681979,-4.144129,-1.007382,-1.631058,5.965872,4.880091,5.658000,-4.882574,-2.696913,2.720646,-6.301348,-8.741114,3.048625,-5.352944,4.924554,-1.161145,-1.115972,2.107781,6.335211], dtype = "float64")#candidate|9878|(132,)|const|float64
call_9876 = relay.TupleGetItem(func_8443_call(relay.reshape(var_9877.astype('float32'), [5, 1, 11]), relay.reshape(const_9878.astype('float64'), [132,]), ), 4)
call_9879 = relay.TupleGetItem(func_8446_call(relay.reshape(var_9877.astype('float32'), [5, 1, 11]), relay.reshape(const_9878.astype('float64'), [132,]), ), 4)
func_4060_call = mod.get_global_var('func_4060')
func_4062_call = mutated_mod.get_global_var('func_4062')
call_9880 = relay.TupleGetItem(func_4060_call(relay.reshape(call_9876.astype('uint16'), [])), 4)
call_9881 = relay.TupleGetItem(func_4062_call(relay.reshape(call_9876.astype('uint16'), [])), 4)
func_5778_call = mod.get_global_var('func_5778')
func_5782_call = mutated_mod.get_global_var('func_5782')
const_9897 = relay.const([[-7.153302,-8.002650,-4.402274,1.008146,-7.082901,7.477193]], dtype = "float32")#candidate|9897|(1, 6)|const|float32
call_9896 = relay.TupleGetItem(func_5778_call(relay.reshape(const_9869.astype('int8'), [5, 3, 16]), relay.reshape(var_9870.astype('float32'), [780, 1]), relay.reshape(const_9897.astype('float32'), [6,]), ), 4)
call_9898 = relay.TupleGetItem(func_5782_call(relay.reshape(const_9869.astype('int8'), [5, 3, 16]), relay.reshape(var_9870.astype('float32'), [780, 1]), relay.reshape(const_9897.astype('float32'), [6,]), ), 4)
output = relay.Tuple([uop_9864,call_9868,const_9869,var_9870,const_9871,const_9872,const_9873,call_9876,var_9877,const_9878,call_9880,call_9896,const_9897,])
output2 = relay.Tuple([uop_9864,call_9874,const_9869,var_9870,const_9871,const_9872,const_9873,call_9879,var_9877,const_9878,call_9881,call_9898,const_9897,])
func_9908 = relay.Function([var_9863,var_9870,var_9877,], output)
mod['func_9908'] = func_9908
mod = relay.transform.InferType()(mod)
mutated_mod['func_9908'] = func_9908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9908_call = mutated_mod.get_global_var('func_9908')
var_9910 = relay.var("var_9910", dtype = "float32", shape = (6, 14, 7))#candidate|9910|(6, 14, 7)|var|float32
var_9911 = relay.var("var_9911", dtype = "float32", shape = (780,))#candidate|9911|(780,)|var|float32
var_9912 = relay.var("var_9912", dtype = "float32", shape = (55,))#candidate|9912|(55,)|var|float32
call_9909 = func_9908_call(var_9910,var_9911,var_9912,)
output = call_9909
func_9913 = relay.Function([var_9910,var_9911,var_9912,], output)
mutated_mod['func_9913'] = func_9913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9998 = relay.var("var_9998", dtype = "int16", shape = (15, 16, 12))#candidate|9998|(15, 16, 12)|var|int16
const_9999 = relay.const([[[-3,-1,6,-2,-4,2,-10,-1,-7,4,4,1],[-5,7,5,-1,10,9,-8,10,-9,-10,-9,6],[4,9,-7,-9,3,-2,-7,-7,4,5,-8,-4],[7,8,4,2,-1,-7,1,-1,-4,-5,3,-10],[-9,-9,-9,-5,-6,2,4,8,-5,4,-3,-2],[-7,7,-8,-6,-3,-3,-7,-1,-1,3,-7,3],[-7,9,3,6,6,-9,-4,1,-10,-2,-5,10],[-7,3,5,7,-4,-6,8,6,-7,10,2,1],[-8,-6,7,8,10,-10,-7,9,-3,-10,-8,7],[-3,-7,8,4,-2,-6,-8,-6,6,-5,5,6],[-8,-9,3,2,-2,-9,-8,4,-5,2,7,-4],[-4,-7,3,-6,-10,-9,-10,-10,-1,-3,-4,-2],[7,4,10,6,5,2,9,-8,3,-3,-10,7],[2,2,-7,4,-6,8,4,-9,-9,6,-9,8],[-4,6,6,5,5,3,-10,8,5,4,-1,-10],[-4,-10,-3,-6,1,-2,7,-4,-5,-4,4,-4]],[[9,-8,-9,-5,-5,7,-5,-6,6,3,7,6],[4,10,-4,-9,-10,-5,5,5,5,7,-6,-8],[3,6,1,-2,3,-7,6,-2,-10,7,-7,5],[-4,-5,7,3,-5,10,10,-4,-5,10,4,-10],[-8,-2,-9,10,1,-4,-9,8,5,-1,-1,-9],[-4,10,2,-4,6,9,3,7,-5,2,-9,7],[10,2,-2,2,10,6,1,-4,4,-10,-1,10],[-9,9,5,-3,-5,-10,6,5,-3,9,10,9],[-5,4,-8,-3,9,7,9,10,-7,-10,-2,2],[-7,7,4,-5,7,-6,-4,-3,2,-6,4,-2],[-8,-5,-9,-4,-7,8,-9,10,-2,2,-5,8],[9,-8,-10,3,5,8,6,-2,3,2,-3,-9],[-9,1,-9,3,3,-8,-4,-10,-10,4,-10,-9],[-8,-6,-3,8,-9,-10,-7,4,-6,2,-5,10],[-1,-3,3,-8,1,4,1,10,10,-6,-2,-7],[-5,10,-1,9,-7,5,-2,-2,6,-9,-9,-7]],[[-8,8,-5,10,-1,-4,-3,6,-3,9,-3,10],[-9,8,-9,-9,-10,-7,-9,9,-9,4,-5,-9],[1,-6,9,6,7,5,1,-3,8,-9,8,9],[-2,9,-3,-10,6,-9,-3,4,10,-6,-3,3],[-8,10,-2,-5,-4,-6,3,-1,3,8,4,-8],[1,-5,-10,8,3,-7,-9,-3,-7,1,-6,-10],[2,-9,-10,-1,8,5,-6,-9,3,6,-8,-6],[-8,4,-9,7,4,8,-2,3,6,-1,3,9],[-5,7,-4,8,-1,-7,1,-4,1,-7,2,2],[-9,10,2,7,6,1,-8,1,-5,2,4,1],[9,-8,-9,10,-1,10,-2,1,1,-6,-4,10],[7,7,9,9,-5,10,-5,-2,3,-2,-10,-10],[8,2,5,3,-6,-5,10,3,-1,1,-7,4],[6,-4,-10,7,-2,-2,-3,-1,9,1,2,-7],[1,8,-3,-8,10,-5,-6,-10,1,7,1,2],[8,9,1,2,4,-10,6,-7,-7,9,-5,6]],[[-3,2,3,-3,-9,-2,8,2,5,2,7,-8],[-2,-2,5,4,10,-3,-2,-7,-1,-1,2,5],[-5,-1,-6,9,-5,4,-10,10,-6,7,1,1],[1,-1,5,-10,-10,-3,9,4,-4,6,9,-5],[10,3,4,-1,5,-7,9,1,10,6,9,-3],[-10,-8,-4,-2,-3,-6,-10,-1,1,5,7,9],[-1,7,7,-4,9,-6,3,9,-4,4,-4,-8],[4,6,1,-9,2,-4,-5,8,8,-9,1,-10],[5,-8,2,-7,-9,-10,-8,-3,-4,-3,-5,3],[4,-8,-1,9,-4,-8,-3,3,-8,2,-1,-10],[2,-3,6,-2,-9,-7,-9,-10,-5,9,3,-10],[6,-9,-9,-3,-2,-9,4,9,2,-4,2,3],[-2,7,-6,-6,-1,1,-6,10,-3,-6,-10,8],[1,-4,8,2,2,5,6,-4,8,6,2,-2],[5,-1,3,1,-3,-6,-4,1,6,6,9,9],[-5,-3,-1,1,-1,4,-2,-7,-10,8,-1,-10]],[[6,1,7,-3,6,-9,-1,6,-5,-7,7,-3],[-8,1,-1,10,-8,-1,2,-7,-1,7,9,5],[6,-2,-5,8,-8,-5,-1,-6,-6,3,-2,10],[7,7,-3,-1,-4,9,-9,-5,7,8,4,8],[1,-2,10,-8,9,4,-10,10,7,5,10,5],[-9,7,4,-7,-5,-10,1,3,-7,-4,3,1],[5,7,6,-3,6,-10,5,7,-6,-6,-5,9],[-9,9,8,1,-7,-1,4,-10,7,-1,7,4],[-3,2,-1,-1,5,2,1,-9,6,1,-7,8],[-1,6,-7,3,1,9,8,2,-2,-7,10,3],[-7,5,7,7,4,-8,-4,-10,-8,-6,-1,-10],[-5,-9,-4,-2,-7,6,-2,-4,8,7,4,-6],[-6,-1,-3,1,-9,-4,3,3,-4,-5,-3,5],[10,-5,7,1,4,-10,4,-6,2,-5,9,-4],[-6,-1,8,10,8,-6,-7,-8,-10,9,-2,8],[-8,-8,2,1,-4,7,-10,2,4,-1,-7,-3]],[[9,-5,-10,6,8,4,7,8,-10,5,-5,8],[-7,2,9,-2,-9,1,10,9,1,-9,-1,-2],[-3,-2,4,-10,10,4,7,-10,-3,-8,-8,2],[-2,-10,8,-3,8,1,-7,2,1,9,-4,-8],[1,3,-3,-1,-7,-8,-4,8,-8,6,8,-5],[6,10,-10,-10,-4,-10,-9,4,1,-1,-4,-7],[-5,-10,-2,3,6,1,-10,8,-3,1,-9,-8],[-6,7,5,4,8,-3,8,10,7,-1,2,1],[8,-9,-10,1,-5,5,2,-10,-3,3,-8,7],[-4,-4,-8,4,-10,6,2,-5,-6,7,-2,-10],[-1,-10,6,6,-4,6,7,9,-3,-9,-2,1],[7,-6,6,-7,9,-8,3,-4,-6,10,-10,-3],[3,7,-6,-1,-6,-3,-3,9,-6,-6,1,-7],[-10,-2,-3,3,-9,-1,-9,-10,-9,7,-3,-3],[-3,9,9,-3,-10,-9,-10,-1,3,5,-6,6],[8,-7,-2,-2,-1,1,7,-9,10,2,-10,-10]],[[6,-4,-8,8,-8,9,-7,-4,-3,8,-10,-1],[-3,-10,-7,-6,4,5,-4,10,-10,-1,3,5],[2,-10,-8,-3,-3,6,3,-4,3,1,-4,1],[-1,1,6,1,-9,10,-1,10,6,-5,7,-6],[-1,-10,-7,9,3,-3,7,-7,-5,6,10,10],[-2,-4,6,-1,-4,-2,-4,-10,-10,-6,-9,5],[-1,-1,-5,-8,-8,7,-2,-1,-1,-9,3,-2],[4,-1,-2,-8,5,6,2,10,6,-6,-6,-5],[9,2,5,6,-3,-2,-3,-9,-2,10,-1,-6],[8,7,8,-10,8,-10,5,10,-2,4,7,-4],[8,-4,6,8,-5,-7,9,-1,-7,-7,4,-2],[-2,-2,10,9,-1,9,-7,1,-1,5,4,-4],[7,-5,1,-9,-6,3,6,3,6,-5,8,5],[2,1,5,9,9,5,3,-2,-5,-6,6,10],[-3,7,1,-3,1,9,9,2,-3,-5,-10,-7],[1,-8,5,9,3,9,7,8,-4,-7,-6,1]],[[5,6,-5,10,8,-3,8,-9,9,6,10,5],[1,-8,-1,6,7,1,5,-7,1,-6,-5,9],[-2,1,9,7,10,-6,-6,-8,4,-4,3,4],[3,-5,2,2,1,8,-1,-1,-2,-3,1,1],[1,6,9,9,7,-10,-10,-5,-6,-10,-9,8],[-7,-10,-2,-4,6,-8,10,-5,-1,-8,-7,-1],[-7,2,1,-7,-10,-9,-8,7,4,7,3,1],[-8,7,3,10,9,5,-1,8,-1,-6,-9,3],[10,-7,5,-9,8,-10,-3,10,4,2,10,-1],[-9,2,-1,3,-6,-4,-10,-5,8,9,8,5],[-7,-9,9,9,-8,9,-7,-1,-5,-3,-8,5],[-4,7,-4,-3,-1,7,4,-9,-9,4,-1,9],[7,-2,10,1,2,5,-2,8,-5,-3,-2,-3],[-1,7,1,-9,-7,3,6,1,-4,5,-9,9],[-9,4,5,4,-6,9,8,6,-8,-5,5,-4],[4,-4,4,8,-6,-7,-2,8,-4,3,-6,7]],[[10,-10,-8,3,-4,7,-10,1,7,-8,7,-5],[4,2,9,-6,1,-5,8,3,4,-10,-4,2],[-7,10,-8,-6,5,4,9,-4,-6,9,6,8],[3,6,-8,-9,-1,-10,4,-1,6,-4,5,-5],[-8,5,-8,5,8,9,4,-3,-6,1,-1,-8],[10,-3,-9,-4,-5,-2,1,-6,-1,-6,-2,-7],[4,-8,-2,3,10,7,-2,-8,-1,4,6,-2],[5,-9,1,-7,5,9,4,1,5,3,8,-6],[10,2,10,-4,-6,-3,-10,-1,8,6,1,5],[-5,5,10,4,-3,-7,-2,9,-5,-4,-5,-1],[4,-6,-5,1,7,-3,7,-8,-6,5,-7,8],[9,6,9,-8,5,10,-2,7,-6,8,-10,6],[-3,-5,-5,10,-9,7,-4,-2,6,-8,-4,-10],[7,-8,4,4,4,8,2,-1,-6,10,-1,10],[6,-8,7,3,-5,3,-4,9,-4,-5,-6,-9],[7,4,-2,7,-6,-8,-10,7,1,-7,6,-3]],[[2,9,6,-10,-7,-3,1,-9,-7,-8,-10,-4],[-4,8,-4,2,-10,-4,1,1,8,-9,6,-4],[6,9,8,9,-4,-3,9,-4,8,-5,-4,7],[2,1,-3,-10,8,5,5,-1,2,-7,1,9],[-3,-6,-3,-9,8,-5,-4,2,-6,-9,2,2],[-5,-4,-4,4,9,2,-3,-7,10,4,6,-7],[2,7,-7,-7,-10,7,-5,-9,10,-6,-4,-4],[4,-6,1,-5,1,-6,-3,-9,5,6,6,2],[-9,-9,-1,5,10,-6,-7,5,-4,-6,-5,9],[2,7,3,6,-8,-4,9,-4,5,1,2,-9],[6,-3,-2,-8,-10,-6,6,4,8,-3,-9,3],[7,-5,-9,-5,-4,5,-3,-2,-10,5,-2,-10],[-8,5,-9,1,-2,5,5,-6,8,-6,-6,3],[9,-4,6,-9,-6,-2,-3,-3,3,6,-7,8],[-6,6,3,2,9,10,9,-2,4,-3,8,3],[3,-1,4,4,2,-3,-1,-6,2,-8,5,-9]],[[-3,-7,-8,4,10,10,3,-3,5,-1,-5,-9],[-2,10,-6,-8,1,9,6,9,-9,9,2,-8],[-1,5,3,-3,-2,4,-1,-6,2,10,-1,5],[7,-1,-7,7,-5,4,-10,-6,-9,10,-7,-10],[6,-6,-8,-8,-6,-5,-7,10,9,-1,-10,-9],[9,7,-10,4,9,-4,10,4,-8,-8,-5,8],[-4,-1,7,-3,1,-2,-1,8,6,-8,1,-2],[-3,3,-3,-10,-9,-3,-2,3,-8,-6,-1,8],[-6,4,10,-6,10,-1,-10,10,-3,-8,-1,2],[-7,-10,-3,-8,7,-6,-9,10,-2,2,3,3],[-7,4,-5,-7,5,3,-6,-8,-4,-9,-5,-2],[-9,8,8,-9,4,1,8,-4,-5,-2,9,-3],[-2,-5,1,-5,4,4,7,-7,9,-2,7,-1],[-4,-3,-2,-5,-1,3,-8,6,-2,-3,6,-1],[7,-1,1,9,2,10,10,-8,8,7,-2,7],[3,-4,-10,-1,2,3,3,-1,-4,1,-8,9]],[[4,1,8,9,-8,10,2,6,5,-9,3,-7],[3,-3,1,-9,9,-9,8,8,-5,-5,-4,-10],[4,1,-1,6,-8,-7,2,-2,-5,-8,10,-10],[-6,1,8,9,3,1,8,-8,-6,-3,-2,-7],[-7,10,1,-2,5,-7,7,6,7,3,-3,-4],[-7,-7,-4,-8,9,10,-7,7,8,-4,-1,4],[-8,-5,-10,-1,-6,8,3,2,-3,10,-5,-2],[2,-9,-8,10,1,-10,6,10,2,-3,3,6],[8,-7,-4,7,7,-8,-8,-3,-6,10,4,4],[-7,10,-4,7,2,-4,-5,2,-4,6,-9,-3],[-2,8,2,-2,1,-8,-6,-7,-2,-7,-2,10],[-9,10,-7,-6,-5,-5,-6,-3,-8,-4,-9,-5],[3,-8,2,1,-4,3,3,8,-4,4,-1,9],[-9,6,-5,6,4,1,2,7,-4,-5,10,6],[8,3,6,-9,-6,-10,7,-9,2,6,3,-7],[-6,5,-8,7,8,9,4,6,4,-3,3,-9]],[[1,8,9,-2,-8,8,-5,-5,-8,6,2,-4],[-9,5,-8,-9,-10,-4,2,3,-2,-7,-9,-9],[-7,-9,-6,-5,-1,-10,-5,-9,-6,5,10,8],[-8,-10,-9,3,3,-5,6,-7,-10,-7,6,1],[10,1,-3,-3,-6,-7,-1,9,2,-4,-3,5],[-8,10,8,-7,7,-2,7,-1,-10,5,7,-7],[9,-7,-2,8,5,-3,9,-5,6,-7,3,-5],[6,-4,6,-4,-3,-1,-3,5,7,5,6,6],[-5,2,-3,-3,-8,2,8,-1,6,8,-3,1],[8,7,6,-3,-6,-1,3,8,2,-5,7,-3],[-10,-6,1,2,-3,-3,-4,-2,-3,-1,-8,6],[-10,-10,9,-4,4,3,-9,-5,5,3,-4,2],[-9,-4,2,5,-2,-3,-10,-3,8,10,-10,2],[-4,-7,-10,-8,1,-6,-3,-9,7,8,-10,2],[7,-5,-6,4,-2,10,9,-2,9,5,8,7],[-3,-5,-7,3,8,1,-7,-5,6,-10,3,-5]],[[-10,6,-2,5,1,-10,-6,4,-1,9,-2,6],[10,-10,9,-7,6,7,8,3,6,10,6,-8],[-9,-6,9,-6,9,-4,-3,-7,6,-5,8,6],[5,5,-9,10,-8,-8,8,8,2,-6,-2,-4],[-7,-7,-10,8,-8,-7,-8,5,-3,4,7,-1],[-3,3,-9,6,-7,10,5,-1,3,-9,4,4],[7,1,10,-10,-8,-10,2,-1,-8,-4,-9,7],[-2,-10,10,-4,-3,-8,6,10,3,-8,-6,3],[10,-9,4,-10,2,-5,-5,7,3,-5,-3,10],[2,2,9,-4,-3,-7,-10,-5,8,-3,8,-4],[-5,-9,-3,8,-9,7,-6,-6,-5,7,-3,-8],[-2,-7,-10,3,-2,-6,3,2,4,1,-10,8],[3,1,-8,8,-9,-4,6,6,2,-2,-8,9],[4,10,1,9,3,-10,8,-5,-5,-8,6,8],[6,3,6,5,-5,2,-3,10,1,-1,9,8],[6,-4,9,-10,-4,8,6,10,8,-5,-2,-1]],[[4,6,9,-9,9,7,7,-5,-10,-3,-8,-8],[-4,9,10,1,-5,9,-10,-9,2,-6,-3,10],[-6,2,5,-10,2,6,-1,-6,-3,-10,-3,-3],[7,2,2,3,-6,-10,4,-1,-9,-8,4,-7],[-9,2,-6,-5,-6,-2,10,4,2,-6,-4,-3],[-1,-3,5,4,7,-5,2,-7,-8,7,-6,-1],[-7,-5,3,-3,-8,-1,-6,-6,2,-5,3,3],[1,-9,-10,-5,9,-7,-7,7,7,-10,-5,-6],[-10,-1,5,4,3,4,4,-2,1,-5,10,-6],[2,-9,-2,3,-8,-7,-10,10,4,9,-5,-3],[10,7,-4,6,8,-4,-2,4,-3,4,4,9],[10,-10,-10,-5,2,2,-4,-3,-6,5,-6,-8],[2,4,-8,5,-2,-4,7,7,-1,7,-9,-8],[-7,-3,-3,-2,2,10,9,-9,10,5,5,9],[3,1,-6,7,1,-6,10,9,2,-4,-5,-1],[-6,-4,-10,-7,9,-3,7,6,-9,-2,10,2]]], dtype = "int16")#candidate|9999|(15, 16, 12)|const|int16
bop_10000 = relay.maximum(var_9998.astype('int16'), relay.reshape(const_9999.astype('int16'), relay.shape_of(var_9998))) # shape=(15, 16, 12)
output = relay.Tuple([bop_10000,])
output2 = relay.Tuple([bop_10000,])
func_10003 = relay.Function([var_9998,], output)
mod['func_10003'] = func_10003
mod = relay.transform.InferType()(mod)
mutated_mod['func_10003'] = func_10003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10004 = relay.var("var_10004", dtype = "int16", shape = (15, 16, 12))#candidate|10004|(15, 16, 12)|var|int16
func_10003_call = mutated_mod.get_global_var('func_10003')
call_10005 = func_10003_call(var_10004)
output = call_10005
func_10006 = relay.Function([var_10004], output)
mutated_mod['func_10006'] = func_10006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10019 = relay.var("var_10019", dtype = "float64", shape = (14, 1, 16))#candidate|10019|(14, 1, 16)|var|float64
uop_10020 = relay.log2(var_10019.astype('float64')) # shape=(14, 1, 16)
func_8713_call = mod.get_global_var('func_8713')
func_8715_call = mutated_mod.get_global_var('func_8715')
const_10024 = relay.const([[-8,1,-6,-8,-7,5,10,-4,6,-10,-2,-1,9,-5,-9,-9,4,10,2,7,1,-1,-5,3,4,2,-8,-3,6,10,-5,-4,-10,6,-6,-3,-7,5,-3,5,-2,3,2,6,4,-5,4,5,-6,6,-6,-9],[3,-6,4,4,-8,5,5,-8,-5,7,4,3,-4,4,-8,-4,-8,-9,-10,8,2,-8,5,5,2,-9,-3,-8,3,-7,-4,-4,-9,-7,-6,7,-10,-4,-4,5,8,-2,-8,7,2,-2,5,9,9,-3,2,-4],[6,7,6,5,8,6,-10,9,7,6,-7,3,2,-10,7,-7,1,-4,6,2,1,-1,-9,10,-4,-7,5,7,-8,-4,-1,2,6,1,-7,7,-9,8,-1,-5,7,5,1,-1,-9,6,7,3,3,-7,-5,10],[-5,1,9,10,-7,9,-7,9,-7,-5,4,-10,-10,-9,1,10,-8,-3,-6,-2,-10,-10,-1,-2,-5,-5,-4,6,-9,-2,4,6,10,8,4,10,-1,10,1,-2,-10,-5,-1,-2,-8,1,-4,-4,8,-4,-2,-6],[-7,8,-10,-6,7,-7,-6,9,3,4,6,-6,1,-7,-4,-7,9,3,-8,-2,-4,-5,9,-2,3,2,3,-6,-9,9,-5,-6,-4,6,10,6,6,-2,-5,-7,-10,8,8,10,-6,-1,-5,-7,-8,8,-10,1],[6,-9,8,9,-7,-5,-10,2,-4,-9,4,8,1,-1,2,7,5,-1,5,3,7,-9,-3,-5,6,7,-1,3,3,-5,3,-7,1,3,7,8,-6,-1,9,-7,9,6,-3,4,-10,2,-2,-4,-6,10,5,-7],[6,1,1,10,-3,10,5,1,2,1,-4,-8,1,6,-8,6,-1,7,6,2,4,-5,-5,-4,-4,2,1,-10,9,-10,-9,3,5,1,-9,-9,4,-2,2,7,-3,4,10,6,-10,-10,-3,8,-3,9,2,3]], dtype = "uint32")#candidate|10024|(7, 52)|const|uint32
call_10023 = func_8713_call(relay.reshape(const_10024.astype('uint32'), [4, 13, 7]))
call_10025 = func_8713_call(relay.reshape(const_10024.astype('uint32'), [4, 13, 7]))
output = relay.Tuple([uop_10020,call_10023,const_10024,])
output2 = relay.Tuple([uop_10020,call_10025,const_10024,])
func_10029 = relay.Function([var_10019,], output)
mod['func_10029'] = func_10029
mod = relay.transform.InferType()(mod)
var_10030 = relay.var("var_10030", dtype = "float64", shape = (14, 1, 16))#candidate|10030|(14, 1, 16)|var|float64
output = func_10029(var_10030)
func_10031 = relay.Function([var_10030], output)
mutated_mod['func_10031'] = func_10031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10626 = relay.var("var_10626", dtype = "bool", shape = (8, 11, 5))#candidate|10626|(8, 11, 5)|var|bool
var_10627 = relay.var("var_10627", dtype = "bool", shape = (8, 11, 5))#candidate|10627|(8, 11, 5)|var|bool
bop_10628 = relay.logical_or(var_10626.astype('bool'), relay.reshape(var_10627.astype('bool'), relay.shape_of(var_10626))) # shape=(8, 11, 5)
uop_10636 = relay.sin(bop_10628.astype('float32')) # shape=(8, 11, 5)
uop_10653 = relay.rsqrt(uop_10636.astype('float32')) # shape=(8, 11, 5)
output = relay.Tuple([uop_10653,])
output2 = relay.Tuple([uop_10653,])
func_10657 = relay.Function([var_10626,var_10627,], output)
mod['func_10657'] = func_10657
mod = relay.transform.InferType()(mod)
mutated_mod['func_10657'] = func_10657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10657_call = mutated_mod.get_global_var('func_10657')
var_10659 = relay.var("var_10659", dtype = "bool", shape = (8, 11, 5))#candidate|10659|(8, 11, 5)|var|bool
var_10660 = relay.var("var_10660", dtype = "bool", shape = (8, 11, 5))#candidate|10660|(8, 11, 5)|var|bool
call_10658 = func_10657_call(var_10659,var_10660,)
output = call_10658
func_10661 = relay.Function([var_10659,var_10660,], output)
mutated_mod['func_10661'] = func_10661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10869 = relay.var("var_10869", dtype = "float64", shape = (1, 3, 15))#candidate|10869|(1, 3, 15)|var|float64
var_10870 = relay.var("var_10870", dtype = "float64", shape = (1, 3, 15))#candidate|10870|(1, 3, 15)|var|float64
bop_10871 = relay.multiply(var_10869.astype('float64'), relay.reshape(var_10870.astype('float64'), relay.shape_of(var_10869))) # shape=(1, 3, 15)
output = bop_10871
output2 = bop_10871
func_10881 = relay.Function([var_10869,var_10870,], output)
mod['func_10881'] = func_10881
mod = relay.transform.InferType()(mod)
mutated_mod['func_10881'] = func_10881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10881_call = mutated_mod.get_global_var('func_10881')
var_10883 = relay.var("var_10883", dtype = "float64", shape = (1, 3, 15))#candidate|10883|(1, 3, 15)|var|float64
var_10884 = relay.var("var_10884", dtype = "float64", shape = (1, 3, 15))#candidate|10884|(1, 3, 15)|var|float64
call_10882 = func_10881_call(var_10883,var_10884,)
output = call_10882
func_10885 = relay.Function([var_10883,var_10884,], output)
mutated_mod['func_10885'] = func_10885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11517 = relay.var("var_11517", dtype = "float64", shape = (4, 11, 14))#candidate|11517|(4, 11, 14)|var|float64
uop_11518 = relay.asin(var_11517.astype('float64')) # shape=(4, 11, 14)
func_6398_call = mod.get_global_var('func_6398')
func_6401_call = mutated_mod.get_global_var('func_6401')
var_11521 = relay.var("var_11521", dtype = "int8", shape = (858,))#candidate|11521|(858,)|var|int8
call_11520 = relay.TupleGetItem(func_6398_call(relay.reshape(var_11521.astype('int8'), [6, 11, 13]), relay.reshape(var_11521.astype('int8'), [6, 11, 13]), ), 2)
call_11522 = relay.TupleGetItem(func_6401_call(relay.reshape(var_11521.astype('int8'), [6, 11, 13]), relay.reshape(var_11521.astype('int8'), [6, 11, 13]), ), 2)
func_7885_call = mod.get_global_var('func_7885')
func_7890_call = mutated_mod.get_global_var('func_7890')
var_11525 = relay.var("var_11525", dtype = "int16", shape = (832,))#candidate|11525|(832,)|var|int16
var_11526 = relay.var("var_11526", dtype = "uint16", shape = (336,))#candidate|11526|(336,)|var|uint16
call_11524 = relay.TupleGetItem(func_7885_call(relay.reshape(var_11525.astype('int16'), [16, 13, 4]), relay.reshape(var_11525.astype('int16'), [16, 13, 4]), relay.reshape(var_11526.astype('uint16'), [336,]), ), 0)
call_11527 = relay.TupleGetItem(func_7890_call(relay.reshape(var_11525.astype('int16'), [16, 13, 4]), relay.reshape(var_11525.astype('int16'), [16, 13, 4]), relay.reshape(var_11526.astype('uint16'), [336,]), ), 0)
uop_11533 = relay.tan(var_11517.astype('float32')) # shape=(4, 11, 14)
func_4639_call = mod.get_global_var('func_4639')
func_4642_call = mutated_mod.get_global_var('func_4642')
var_11540 = relay.var("var_11540", dtype = "float32", shape = (196,))#candidate|11540|(196,)|var|float32
call_11539 = relay.TupleGetItem(func_4639_call(relay.reshape(var_11540.astype('float32'), [1, 14, 14])), 2)
call_11541 = relay.TupleGetItem(func_4642_call(relay.reshape(var_11540.astype('float32'), [1, 14, 14])), 2)
const_11549 = relay.const([[-4.835281,2.493736,9.875639,-7.318333,4.099471,2.298855,7.758923,3.397292,-7.146333,5.263804,7.311215,9.732014,2.501119,8.192836,1.756788,4.008933,2.779140,6.243035,7.185160,0.551932,1.700259,-5.005277,0.948538,-0.730990,-5.208416,0.209122,3.779365,2.538799,1.441329,4.277505,9.416861,8.118613,6.784582,5.029252,-4.375165,0.806636,4.801796,-5.964639,-5.824873,-3.577170,-1.371454,-5.974560,-8.691156,-8.212531,-5.640540,-2.112770,-9.074683,1.456826,-0.783234,7.824566,6.288043,3.323487,-0.934440,8.891964,-8.610814,7.060238,-5.328946,-0.390647,7.894611,-8.601410,-7.871674,0.313408,-2.029151,3.644921,2.190368,7.138197,7.755679,8.141751,-2.795897,-3.085102,-2.207196,-0.922393,0.965836,2.100490,3.573432,1.768622,-7.740329,4.833477,0.773410,-1.023853,4.608082,9.437727,-7.609294,-0.043664,7.892986,4.469665,-2.546463,-4.690682,-6.299430,3.580986,-4.084851,-2.600705,3.924960,8.191099,-2.722385,-4.863565,-8.148950,-2.100882,-3.527162,4.811987,-7.841061,-5.578486,-1.782504,-2.130424,-6.444281,5.300888,-8.962737,-3.134626,4.236141,-6.945601,0.964975,4.083019,-4.169142,-2.654184,-3.931011,4.741781,-5.230914,1.642186,-0.451224,7.454019,2.773144,2.651172,-7.256694,-4.050622,-3.183822,7.443891,3.418387,3.924007,4.156620,-6.022561,7.962998,-1.601146,0.739767,9.437802,6.551113,3.686980,4.399352,8.009841,-1.900816,6.680659,-8.311541,-0.097656,3.145328,-6.007492,2.391346,-2.594658,-7.658808,-6.894806,-9.297665,7.945137,-1.932968,8.259290,-1.138652,-8.990429,-2.235326,2.703120,-9.836701,-5.386484,7.644542,-6.753265,3.887877,6.783128,4.021060,-3.716636,6.896231,-2.203559,-3.825786,2.628885,-3.462091,4.280105,4.932097,7.086936,-2.484483,7.456346,-3.104550,-9.820108,-2.020887,1.762779,8.934003,-4.128670,-2.173211,-0.446019,-4.959643,3.214472,9.849970,2.170908,3.266350,8.708655,-8.926898,2.499540,-1.089056,-6.174840,3.680887,6.496918,3.812385,-7.696741,-2.189369,-0.658568,-3.147190,0.800678,-3.321802,2.195825,9.665013,4.899902,3.483117,2.768783,-2.490968,9.087714,2.051619,-5.747564,-0.653819,-3.822786,-1.380602,2.158388,-6.795208,-4.584720,4.601742,-6.214291,-9.831502,-9.906349,-4.994992,-9.792963,9.513234,1.511903,-2.345786,-1.176223,-5.109420,3.805949,4.301539,7.920605,7.855850,9.913633,1.202223,6.620685],[1.906097,-3.987855,5.176954,5.165234,-5.592993,-6.611712,-5.794129,7.207689,7.812704,8.201764,3.237016,3.239089,0.828150,2.044729,-9.982414,-7.961150,-9.242994,-1.174823,5.590793,-0.254422,-4.182995,-5.918862,5.346555,7.963480,-6.818983,-4.490574,1.912312,-5.709170,-5.974062,-0.053756,2.217779,-5.826587,4.133320,8.363345,-5.172771,-5.290521,-6.208734,-9.919458,-9.460967,8.339456,-4.444265,-9.307276,0.398351,-3.088886,-6.234745,-7.386863,-7.726627,0.747277,8.310629,-3.679062,-8.141801,-8.829556,-0.532606,2.404432,-4.110898,4.387051,-4.129762,3.924366,5.936951,5.551590,-8.221684,9.425349,-1.699827,-8.667051,4.572808,-9.138342,8.758657,7.031388,9.681606,-2.688385,3.278239,-0.805426,3.098984,4.565200,-4.874703,-7.538018,-6.555567,1.000161,-4.829128,5.664573,-0.518483,6.110672,-5.742051,5.219643,0.086147,-3.159994,-0.691062,-3.359092,-3.326776,-6.502232,-3.066416,1.959590,-7.990122,-1.589694,-0.604801,-2.625482,3.822480,-9.452811,-5.275659,2.028280,2.479317,-3.279422,-8.411427,1.960918,-7.474757,3.873057,-9.092132,-1.697258,0.510153,5.912994,-7.637623,5.074976,2.319844,6.771960,7.143958,-3.797641,-3.867213,-4.713293,8.427575,9.086267,1.191896,1.050361,4.695542,-0.946560,-3.485619,-1.474579,-1.024194,-3.977718,1.040798,0.465137,-7.000338,7.933047,8.481563,5.740656,9.702542,-3.804763,-2.051202,-5.057507,3.942259,-0.859436,-1.118666,-4.386839,-3.089671,0.298690,4.987681,7.825868,-5.307344,-0.866634,-5.436265,-1.260514,0.414345,5.744161,-3.025965,0.553908,-1.327871,7.146141,1.939735,4.565996,-6.925055,1.862301,-2.584251,1.770328,-1.116854,-0.370767,-0.427754,-2.975718,6.612119,9.250392,-2.831332,-9.115952,-7.208792,1.782515,5.241788,-3.390024,1.895894,0.537478,-6.224874,-9.672710,2.533206,9.854285,-2.308244,3.687201,3.961592,4.126507,4.423043,8.907264,-4.543447,0.804262,8.732819,0.050082,-3.824332,-2.078239,-0.096396,9.635330,4.292600,6.034001,-6.762704,-6.666292,1.473132,2.732418,8.609513,-4.006065,-4.038780,8.958696,7.946192,-3.622954,-6.518276,-2.237594,-3.232292,-7.072637,6.195555,5.155622,-2.186324,1.949129,3.841002,-8.810639,7.259945,-0.711516,7.916028,-5.930577,7.058832,-5.378891,7.163196,-6.884937,-2.534871,-4.319058,-0.744515,1.793173,7.945609,-4.004012,-2.574422,7.856608,5.438819,8.798142],[3.687571,-8.562936,-1.819252,-7.864114,5.201234,9.960999,4.581601,9.551141,8.937529,-1.952875,-6.831176,-1.754849,-6.630521,-7.313133,3.980339,-1.220999,1.527482,1.518046,4.696819,-8.689700,-4.231822,-4.820302,4.564690,1.733516,-4.637855,8.926613,-5.947916,3.160296,2.672363,6.286261,7.703429,2.682512,-2.617765,7.769266,7.746130,-9.458365,5.888139,8.203846,7.509011,-4.166686,0.690224,-1.925367,5.482061,-0.934174,7.627884,2.952889,6.037019,-0.351160,-2.764636,7.220220,0.230327,2.870584,-6.492976,1.723718,-4.086915,9.678545,9.872051,4.544555,-8.649339,3.097268,2.769866,-8.593241,6.183660,-2.532617,-2.108065,5.623896,-1.635935,5.883054,-1.746496,-0.593059,-6.779326,-5.748559,4.367704,-6.684266,9.946161,4.182157,-7.042553,8.578082,-9.881200,2.933296,4.822213,-1.978757,-1.244341,-5.513482,-6.294829,1.033849,-0.297424,-8.730947,1.504334,7.255370,-6.671087,-9.461548,3.380059,4.627268,9.922438,-0.705764,8.318761,-8.057083,-1.100440,-5.368864,5.131853,3.554681,1.976551,3.152013,-6.368460,4.060244,-6.199353,-1.499700,9.047964,1.940071,-2.354474,1.197297,8.646707,6.529972,-8.805655,-5.411498,7.278158,-9.000904,-1.353775,-1.754740,-8.906056,1.037835,1.426690,-8.735878,1.451578,9.091841,-4.412351,-7.445159,1.908520,5.117618,1.072483,6.956754,-2.190999,-2.761669,-2.543416,8.630258,-6.715461,3.792563,-3.091909,1.349484,9.140668,-9.597914,0.759994,0.765208,-5.569261,9.647385,2.528929,1.953486,-4.982498,-8.312219,-1.834424,4.679814,-8.060795,-0.580211,0.265765,7.334991,-6.232620,-3.948402,-5.262687,-4.336856,-4.077613,-9.578085,4.930020,7.503872,2.656231,-9.488714,-9.008184,5.240717,-3.233882,9.490762,0.911780,-5.733320,-5.051920,9.367004,7.255198,-3.635716,2.868048,6.049632,-2.088621,-6.295701,-6.053387,3.517238,2.018156,7.193746,-5.494845,2.640198,1.886914,0.024865,-3.283136,-8.541544,7.457644,9.244970,-6.697640,3.385130,-0.598445,-2.768076,-6.682685,8.824440,-7.827559,4.481238,8.188202,-5.428120,-8.687986,8.838318,5.927078,-1.676687,-6.452276,4.330730,-2.790900,8.880526,6.348403,3.118161,6.941507,0.564460,-1.028742,-4.397176,8.010631,-6.336518,-8.316611,-4.133448,-0.680545,-5.653582,-4.919335,5.798736,-6.734498,3.629792,-6.705385,8.347055,7.489596,-3.450228,0.181429,-3.074206,6.626457,3.697672],[-1.879429,7.617773,-8.212256,6.164238,-9.644325,-9.566214,1.417758,-9.234277,-6.540871,9.392958,-9.145128,4.906059,-9.003769,-5.275537,7.825638,3.100744,9.580013,-7.534258,2.958164,-8.548348,-1.610704,-1.782572,7.927659,2.841796,4.422122,2.376011,-9.164264,5.262167,-8.176221,9.630352,8.616170,1.404362,9.334223,9.803127,0.594025,-6.947950,-1.608236,8.295117,4.029369,2.255033,0.288941,-7.872447,-2.733334,-0.795190,6.261565,-2.117695,2.832863,1.945151,2.777951,5.273348,2.689046,-2.510326,-0.687620,6.470656,-3.974851,-2.866204,4.031090,-5.840398,8.461825,4.002914,-2.172472,1.634509,7.091644,-5.875855,1.780988,-3.880592,-2.277976,-0.106249,-5.411104,-1.050758,5.706472,2.208071,-6.862193,-4.630022,-7.683264,-6.999994,2.490147,-0.953817,9.160014,8.592299,-8.015199,0.943292,-6.735094,-3.598947,0.433751,3.758849,1.163549,6.904114,-2.211822,8.713521,8.096912,8.150951,-8.154815,-3.742795,2.773076,-9.618844,4.924915,-0.026559,-5.221209,-9.014020,8.711984,-1.672218,-2.193803,-5.544099,7.175750,-1.144160,-4.573299,5.258364,3.282548,-5.952659,5.631629,6.515962,-9.416336,-8.359164,-8.305538,-2.375469,-7.300351,-3.497988,-3.228766,-5.068343,2.534636,6.986577,-1.346122,-0.650437,-2.264008,-1.313094,3.007435,-4.771436,6.537103,-7.280559,6.393349,-2.621322,4.864590,4.497002,8.215563,5.941789,-1.207391,-9.600770,8.957820,-6.685886,7.083467,8.554359,-4.232016,-2.582004,-7.337361,8.037501,7.438885,-4.130810,3.910407,9.836250,9.500676,9.507708,5.662696,-8.838817,-5.616814,-3.596287,-9.748366,-4.439073,8.067438,-1.267266,-2.943421,9.068682,9.118058,-2.590609,0.610149,-9.770853,6.586558,-0.395680,2.272629,4.409316,-0.062590,-9.890075,-7.105578,2.395646,0.902485,1.927129,-4.107580,-4.842994,-2.730401,-7.147434,-4.396302,-8.852812,-6.111756,-2.145933,-0.337476,3.695347,8.757894,8.207183,-6.489558,4.082656,-6.439051,8.317197,7.646032,6.945343,9.107369,-2.247400,-8.705920,7.217945,3.187265,-9.743835,5.512904,-2.610860,1.613260,-7.943143,7.760298,-8.393673,5.295939,-9.680043,2.028851,-0.763519,8.122773,-7.947322,-8.590110,-7.004024,5.728404,9.359938,-6.936050,8.006486,5.358568,7.214575,7.307708,-0.570058,-2.642254,5.857517,-4.143640,-9.364098,-7.489559,8.034700,-1.144872,8.383899,4.017919,-3.322426,-0.532741,6.054143],[-3.195071,-2.729138,-8.905824,-1.969364,6.374084,-6.027660,2.683628,6.059235,5.721202,-5.275094,-0.064036,4.019972,-6.757003,7.557425,7.350692,-8.996317,-8.860177,8.733521,-4.342509,2.114200,-1.320988,1.712512,-2.111267,5.865811,-2.166960,1.931993,9.991229,-0.978357,-6.695489,3.313433,-8.777946,0.549301,-3.883607,-7.730739,-1.889372,3.338653,6.384053,5.276861,3.821045,-7.524926,-3.847718,9.580587,-1.456059,-6.426027,7.612705,0.117069,3.955570,-5.795939,5.660264,-5.791095,-9.273272,-5.331549,9.890661,1.925889,5.467191,-1.858867,5.450725,0.466782,2.124380,2.883441,8.505327,-2.565430,7.923824,0.813443,1.476102,6.137645,4.708428,-2.616096,5.215752,0.835555,8.349835,-8.170179,3.531003,-3.368178,5.660756,-4.388825,-3.342571,-2.214607,8.975346,7.386113,8.994049,1.385027,-9.031122,8.360435,0.562344,-7.038190,-3.709022,-5.519697,1.233766,-4.165808,-5.580964,4.194635,-8.107964,-7.697024,9.274880,-5.114953,-7.479286,7.197647,3.116420,-9.409073,-7.622848,4.405623,-6.661509,-9.241621,1.489285,-2.238321,6.853507,-3.868713,4.352690,-0.391583,-5.692972,-8.495738,-9.252113,-6.885492,-7.094491,-3.493595,8.648301,-3.561369,6.204276,8.973486,9.462675,-6.482412,-9.978679,-6.699190,-4.785497,-5.044676,-3.159988,1.270217,8.958721,-7.087600,1.704051,-0.117528,7.806244,-7.979092,9.644072,4.626419,7.687245,-8.106961,-1.082638,-7.381222,1.799005,-1.035684,4.228279,-1.409263,8.561897,-6.482100,5.489313,6.851377,6.791027,-8.080803,-7.704237,-3.117260,8.014843,7.004116,6.931708,-5.576503,-0.081137,-2.512699,1.242835,-6.918330,-7.864009,4.719714,7.503920,-5.425179,-2.624333,-5.628956,-4.160353,-0.556461,3.090267,7.343000,9.213571,8.363942,-2.220851,9.921364,-1.872783,-3.675763,5.438309,-5.987531,9.888232,5.461484,7.071471,-3.156331,-5.790061,-9.128208,-3.125563,5.501811,3.211136,7.311876,-7.671146,6.564560,1.398048,0.802283,6.413721,1.199614,-7.068227,-9.514129,-3.466058,2.226753,-7.855739,-0.206219,-3.571695,-1.273153,-6.065072,7.745880,8.024479,8.558933,5.004723,3.372627,2.217286,6.288839,3.527119,1.060505,-1.080226,8.348561,-3.544248,8.916010,5.463104,6.762557,4.974101,-8.536523,9.119770,0.203159,9.896907,-5.091683,-0.412607,-1.300825,0.180059,3.485643,6.304278,-0.648747,8.128032,-2.692713,-7.520140,-5.060433],[-2.583355,-2.029428,6.105742,-7.610071,-0.814280,7.682863,-5.823258,-0.412140,4.767936,8.012032,-9.946526,4.009769,9.716174,-4.453562,7.751663,-9.810100,-4.845521,8.933254,-8.880273,-1.129454,-1.774737,9.506106,8.290370,1.109291,-7.978560,2.774504,-8.231105,-5.753000,-6.613241,1.092006,8.216222,-6.962282,-2.853735,9.185276,5.529694,7.882572,7.979565,7.242370,2.259459,-6.772595,3.570754,-2.556848,-3.548688,-8.190775,-9.457345,-6.997013,4.161109,6.422159,-6.261481,-8.652504,-3.538775,-0.984900,9.564016,-9.159757,-0.069400,-9.123052,0.539186,4.061054,6.305819,-5.430597,-9.512001,9.811660,4.114953,7.499089,-2.385769,-3.967506,-4.644935,-4.629505,-4.558942,-8.216051,4.469461,-2.882949,3.866895,-9.170056,3.146864,-7.528102,6.003199,6.081518,-0.315218,1.084742,3.777102,0.681772,-3.989658,0.811943,1.505488,4.978732,-4.079038,7.955154,6.568799,-5.760735,-7.946165,-7.814797,-3.082579,9.675012,4.385111,8.593038,-5.061688,-1.087549,3.561735,3.181372,9.711961,7.435145,-2.481630,4.246388,7.641524,2.277998,1.803869,6.347828,1.796963,-1.768320,4.126136,3.468591,8.470420,-5.725242,1.749910,2.134498,-8.739847,-1.814297,6.758268,4.262464,3.486752,-2.856106,-2.883039,5.335125,-4.860848,-9.467293,2.462561,6.167465,6.713047,4.500945,0.109601,1.154004,-3.959498,3.309294,-8.972057,-4.739609,0.207530,-6.723047,-8.656673,6.855050,7.582174,9.181283,-4.939196,0.769100,-2.504314,-1.830708,7.034565,-5.509386,-0.910903,1.618286,-2.974676,-7.485926,1.035610,6.323289,-6.595398,-5.461679,2.074798,5.473511,1.801227,9.255541,0.607581,0.982402,-5.345584,-8.890906,1.338982,1.681068,5.372768,5.900299,-4.676031,3.116951,-3.568031,-3.451926,6.085695,4.122375,7.846365,-9.538637,-3.489692,4.684762,7.241211,7.145700,-2.858032,-2.663581,2.679567,-7.122791,8.581227,-9.626602,0.959712,2.202837,-3.092174,4.896702,9.376388,5.187380,-6.264711,-6.717399,-0.106931,-4.108042,-2.506821,9.166479,0.666607,2.275317,6.581924,-2.894917,1.627667,5.582753,-1.807826,5.638287,-7.160655,2.396953,3.869058,5.097026,-6.441855,-3.067576,-9.593218,-7.598691,9.936846,-1.974827,0.707590,-9.488055,-1.782365,7.207677,-4.103342,9.798973,5.706479,0.891754,-3.737517,-7.523039,2.402814,-2.053726,-9.587151,7.101952,-4.291715,-0.454783,-6.347714,-6.639342],[-5.301693,6.177639,-7.719904,-4.302340,2.760629,3.873121,-2.485505,-1.688038,-0.743680,5.612557,0.876964,3.789804,5.234550,-8.698616,-4.111329,-9.372375,-8.647437,3.153530,-8.531411,-7.009529,-6.876573,-3.286609,0.923107,-8.302984,3.077446,7.163134,-5.301410,-8.548440,-4.100253,0.540193,-2.240178,-4.575171,8.984880,2.380093,3.615306,6.462955,8.692353,-6.595408,4.932268,1.106896,-8.375238,9.571778,3.154312,-4.474292,-6.858974,-6.378364,-9.551704,7.047285,-6.652577,3.403464,-3.674719,8.254414,-6.836264,9.294539,-8.000161,-0.395521,4.266617,7.565963,-8.839394,-6.011895,2.701543,1.648851,3.396330,4.968683,8.742488,1.913495,-8.217502,-7.926440,-4.829427,-6.858407,-9.902933,-0.598317,-8.036392,-7.646583,2.634476,-0.254251,4.730689,-1.586363,-7.239703,-0.850521,5.945088,-5.131978,0.288268,-5.059709,-4.192167,-2.622862,-4.950791,-6.988769,5.240155,8.719237,7.025628,7.652091,6.525818,-4.881095,-2.742850,9.420852,-9.453672,3.918593,-9.624901,-7.115583,-2.663744,4.286542,9.873925,1.142785,-1.635656,2.659159,-9.393625,-3.713040,0.665940,-6.401137,-9.191113,2.901648,5.106960,-3.517731,-5.892478,-1.916093,5.807839,4.255921,0.830293,1.383195,5.644881,5.603263,-2.160659,2.361320,-3.625719,0.322963,-7.868776,-2.372332,5.700815,6.012745,1.465314,-8.036551,-9.825222,9.431966,-0.209800,0.122219,0.405792,-4.628605,6.989336,0.791237,8.979414,-9.469486,4.924593,8.909103,4.085739,7.934133,-0.367125,9.484235,5.163281,-6.043542,-9.846906,-1.959089,-6.559546,8.953708,-5.036716,-0.702283,9.534238,9.820660,3.480290,6.688194,-5.185433,7.048580,-1.735656,2.849459,0.303501,2.007815,2.855986,7.399772,-8.181556,0.023903,-7.694315,-5.414055,-8.597329,-9.207846,-1.597354,-4.503244,-6.132622,0.499464,3.512387,8.601332,-3.890459,-0.781486,-9.597223,-0.058721,-0.734407,1.361217,7.402776,-0.581968,-8.330163,3.548143,-9.307518,3.867579,8.593018,1.652022,5.064704,5.736622,1.420316,5.791410,4.544228,8.983221,-8.273427,-6.584490,-6.611026,4.047665,-5.019208,-0.577411,6.597868,5.557748,-0.329983,7.888794,3.024661,-7.542594,-8.280925,-4.767122,6.106273,2.078906,1.933064,6.976903,-1.059988,-5.740463,5.727669,8.084809,-4.066045,8.197893,3.720467,-0.991146,6.374107,3.142070,-0.388147,8.721264,6.550450,6.583995,7.724748,1.696787]], dtype = "float64")#candidate|11549|(7, 234)|const|float64
bop_11550 = relay.left_shift(call_11520.astype('uint8'), relay.reshape(const_11549.astype('uint8'), relay.shape_of(call_11520))) # shape=(7, 234)
bop_11553 = relay.left_shift(call_11522.astype('uint8'), relay.reshape(const_11549.astype('uint8'), relay.shape_of(call_11522))) # shape=(7, 234)
uop_11555 = relay.log(uop_11518.astype('float64')) # shape=(4, 11, 14)
uop_11561 = relay.sqrt(uop_11555.astype('float64')) # shape=(4, 11, 14)
uop_11570 = relay.acos(uop_11561.astype('float64')) # shape=(4, 11, 14)
const_11572 = relay.const([[[-1.002262,-5.205488,4.726365,-6.468365,-6.107155,1.087199,-2.708294,-3.129119,-7.656820,1.997763,1.758023,3.551641,-8.879142,6.138343],[-9.727220,-4.621548,1.531840,4.326552,-7.023814,6.542123,-8.920055,-4.037523,6.489229,-4.993291,1.889390,0.831155,7.555295,0.006570],[5.297001,8.682363,3.670398,8.787901,-1.887890,2.982132,-4.325088,7.692535,7.933375,3.612539,3.263359,-2.853919,2.460490,6.340388],[-0.677648,8.056158,7.949258,-2.894887,-7.505120,2.681536,-5.262822,9.866595,2.386236,-5.350019,-6.235744,-9.584182,5.095285,8.836915],[-7.015726,8.837269,5.773138,0.134793,2.251970,1.510406,1.298511,-6.022629,-0.103248,-6.395609,9.045280,-6.733111,-6.368524,9.146988],[-8.635257,-6.712618,2.248181,1.654067,-2.641479,3.473036,-7.023211,4.002170,-4.398543,-8.368771,7.262164,-8.304431,3.301679,1.923289],[3.375902,5.836932,1.622823,7.544742,0.825424,8.447117,9.381185,-2.975750,9.995049,2.363123,0.878008,-3.080511,-8.525169,0.121307],[-4.292628,7.203364,6.822389,3.586956,-3.376088,0.549128,7.359572,-5.589372,-0.875208,8.053216,-9.997808,4.120185,-1.834549,2.609284],[-2.543445,-5.250857,8.056262,7.606269,-3.080503,4.642450,7.213771,-9.741609,2.758172,1.104571,8.488476,8.814401,6.375123,-2.094870],[8.719209,-2.335584,-8.133164,-1.220242,-8.822409,7.420248,-7.314205,5.468350,0.332213,-3.695770,-8.706995,-4.553084,-2.684577,-2.621606],[-9.995740,6.891811,-7.335738,-7.815413,-4.413975,-5.654092,-7.282780,2.641802,-8.644732,-9.970231,0.156189,-3.297277,-2.981669,6.346791]],[[-3.314939,-8.770426,-9.215714,-8.259973,3.033417,-5.999131,5.189008,-3.438364,-2.148141,-5.187248,-6.673676,-1.695538,-2.376547,-8.070425],[-1.044564,8.298859,5.642165,1.614067,-3.176341,-1.625816,-9.769917,6.113731,7.133514,9.110511,-1.265781,-0.740386,-1.679413,-0.624094],[0.531826,7.219641,-9.870252,-9.247768,-3.110963,-4.104365,-2.614277,-0.219918,0.701113,-1.654977,2.689460,-7.419799,-8.578117,1.723343],[9.605556,6.849581,-3.055658,-2.684695,1.139131,-6.644721,2.618354,-8.281187,2.029218,-4.969081,6.068705,7.268636,4.114555,-7.678192],[-2.788118,-4.212043,0.158858,-8.095052,8.957014,-2.022760,6.318666,-6.989376,1.747724,-7.264226,-8.614855,7.895239,-7.333606,-5.058216],[-8.066889,6.460917,-8.012920,0.762016,9.641212,8.472310,-7.648010,9.797083,-9.662737,-4.861702,9.139795,-6.718351,-7.120728,8.931469],[-7.170537,-6.778559,-4.395470,5.772272,2.793371,-9.254495,-3.480765,4.548573,9.237946,4.427396,3.742270,-5.274818,-5.658337,-4.015779],[-9.989817,7.865727,4.835429,-6.178024,3.121314,1.776215,-8.116083,5.721599,2.291712,6.090812,-5.860139,5.200378,7.859458,-9.499961],[-8.848022,-7.798169,-6.072044,-4.177017,4.182399,9.560930,-5.805447,6.592234,-2.504278,-2.488213,-7.021937,-1.322672,-2.269286,-5.923911],[1.373415,5.503313,8.515468,7.741168,-8.107240,2.854624,-9.682270,-7.552434,8.085698,2.746063,6.437545,-2.765184,0.843277,-9.076132],[-0.120133,1.286544,6.852166,3.628801,-4.614404,-9.807732,-6.220751,-3.525835,-3.104425,-6.366019,6.129866,3.550668,0.230946,-1.832604]],[[-6.691204,-2.802368,3.546839,3.437080,-0.249700,4.145093,5.676294,4.868519,0.948108,-4.513897,8.607579,-7.379674,-8.943650,1.454102],[2.437943,-0.917093,-1.771648,-7.623158,2.120243,-4.267996,-8.154882,-7.085249,5.024390,-3.396897,-6.147722,-6.682276,0.902232,-8.829316],[-7.711725,2.418075,1.476682,9.455693,-4.960992,6.342993,5.204430,7.812742,7.868622,3.960710,-9.637010,6.218188,-6.388291,-0.071412],[-6.584232,2.512644,-3.691545,-3.903799,0.731628,4.765552,9.454067,9.059387,-6.981002,2.705572,-2.933073,-8.113016,-1.979597,3.630888],[6.557506,-5.257326,-1.866333,-6.973289,-6.098400,-1.823096,-9.412074,0.873154,-0.741398,6.581250,5.904453,-9.349627,1.212930,-2.096293],[6.240751,6.249595,9.109990,-7.967383,5.142054,-7.485456,-0.919752,4.337645,-2.981605,-4.289608,1.550738,8.323659,-6.722728,9.040281],[-3.644963,1.977805,7.573711,-1.161505,-5.749668,1.022824,8.111745,6.767833,-1.586562,9.414044,7.235219,-8.111447,4.458711,-3.667030],[1.995939,2.412819,8.463263,0.514074,7.973563,-1.533943,9.619279,-8.047611,8.110930,-4.166655,-4.058730,5.268336,4.064189,2.317779],[6.741304,2.722391,6.720488,1.568637,8.157956,5.719394,-4.191122,8.745127,3.999826,1.540826,3.438310,1.510952,9.296719,-2.600785],[-9.434112,9.011658,0.790960,-6.987121,0.085224,4.488477,6.766685,-2.931697,-2.972434,7.744344,2.316703,1.623159,-5.752900,-8.463769],[3.803176,-7.434400,-7.812175,2.353018,-1.348446,-2.097717,1.920225,5.782982,1.992367,7.925041,9.987651,9.755933,1.342677,0.711781]],[[4.814657,1.551614,-6.367510,-9.733942,5.856792,-1.151319,-4.536382,0.248592,3.055380,-8.727694,-3.055132,-6.407629,-6.313765,-3.357489],[-1.919559,9.355115,-0.844552,-5.711469,-8.104609,2.799424,9.082958,-0.813372,5.272884,8.760677,-5.411133,8.238362,0.989110,-5.638934],[1.512916,0.604786,-5.537210,-1.549292,4.798042,-2.277524,7.367046,6.301852,7.652412,-9.360888,-0.344787,0.470549,7.412218,8.324567],[0.746032,-6.122228,9.132919,-2.639952,-8.441439,-8.483534,-4.315178,-0.917999,-1.813133,-7.545869,8.450311,-3.953602,-5.275723,-6.655077],[-3.636104,5.737014,0.559848,2.771754,1.968863,-8.379453,-9.398156,-6.151105,8.587080,-0.339787,-7.887180,-9.010742,-2.894520,1.615316],[-9.037165,-0.261394,-1.482647,-9.504822,-1.886971,-4.145011,-6.880710,2.392122,6.729649,1.077357,-6.540112,-6.629803,-9.928772,-7.957430],[-7.300056,5.997867,3.937108,8.226749,7.754382,7.915982,3.406521,-0.336777,0.774656,-3.206419,2.283035,3.137975,-4.980522,-6.280453],[-5.739836,9.844716,0.859361,-2.514802,-4.555277,-5.399492,4.830184,4.525242,8.717570,-8.307503,-8.004360,8.476122,-7.037131,2.032579],[-0.810627,8.149014,7.334779,8.601081,-4.512593,0.432587,-9.254287,-7.678391,-3.491080,-2.028680,3.310537,-0.316808,-4.856046,7.302071],[-0.254655,0.595442,2.152544,-2.521584,4.165733,2.622792,6.520183,-8.421738,-5.107891,0.957133,8.794723,-3.311391,1.079169,-4.037708],[-9.289675,-2.234232,-2.298755,1.383682,1.995762,-1.220831,-9.967198,-0.369829,7.782617,2.860596,7.015824,-1.370694,-6.986523,-9.120112]]], dtype = "float64")#candidate|11572|(4, 11, 14)|const|float64
bop_11573 = relay.not_equal(uop_11561.astype('bool'), relay.reshape(const_11572.astype('bool'), relay.shape_of(uop_11561))) # shape=(4, 11, 14)
func_9267_call = mod.get_global_var('func_9267')
func_9269_call = mutated_mod.get_global_var('func_9269')
const_11580 = relay.const([-0.169711,6.314755,4.642240,2.580489,-3.490430,1.100147,8.831611,3.764059,-4.459225,-1.429787,-1.128604,-8.481170,0.434250,3.966854,7.616688,9.829415,1.525018,-9.240266,-1.758827,-3.532036,-0.025651,-8.738699,1.742566,4.026619,-8.804271,-3.249795,-1.519409,1.158416,8.693988,0.435750,7.519589,-8.599780,0.409526,5.512995,-5.775033,6.591780,4.507514,-4.498167,0.473379,-4.115342,3.617136,-5.865632,0.141111,5.613631,-1.948427,-9.105856,-3.637320,-4.292522,9.112887,4.962138,-2.064255,-7.660732,-3.831920,-9.072204,6.518680,5.046888,3.018444,-1.579360,7.646490,4.376261], dtype = "float32")#candidate|11580|(60,)|const|float32
call_11579 = func_9267_call(relay.reshape(const_11580.astype('float32'), [4, 1, 15]))
call_11581 = func_9267_call(relay.reshape(const_11580.astype('float32'), [4, 1, 15]))
output = relay.Tuple([var_11521,call_11524,var_11525,var_11526,uop_11533,call_11539,var_11540,bop_11550,uop_11570,bop_11573,call_11579,const_11580,])
output2 = relay.Tuple([var_11521,call_11527,var_11525,var_11526,uop_11533,call_11541,var_11540,bop_11553,uop_11570,bop_11573,call_11581,const_11580,])
func_11582 = relay.Function([var_11517,var_11521,var_11525,var_11526,var_11540,], output)
mod['func_11582'] = func_11582
mod = relay.transform.InferType()(mod)
mutated_mod['func_11582'] = func_11582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11582_call = mutated_mod.get_global_var('func_11582')
var_11584 = relay.var("var_11584", dtype = "float64", shape = (4, 11, 14))#candidate|11584|(4, 11, 14)|var|float64
var_11585 = relay.var("var_11585", dtype = "int8", shape = (858,))#candidate|11585|(858,)|var|int8
var_11586 = relay.var("var_11586", dtype = "int16", shape = (832,))#candidate|11586|(832,)|var|int16
var_11587 = relay.var("var_11587", dtype = "uint16", shape = (336,))#candidate|11587|(336,)|var|uint16
var_11588 = relay.var("var_11588", dtype = "float32", shape = (196,))#candidate|11588|(196,)|var|float32
call_11583 = func_11582_call(var_11584,var_11585,var_11586,var_11587,var_11588,)
output = call_11583
func_11589 = relay.Function([var_11584,var_11585,var_11586,var_11587,var_11588,], output)
mutated_mod['func_11589'] = func_11589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11634 = relay.var("var_11634", dtype = "float64", shape = (7, 4, 9))#candidate|11634|(7, 4, 9)|var|float64
uop_11635 = relay.acosh(var_11634.astype('float64')) # shape=(7, 4, 9)
output = relay.Tuple([uop_11635,])
output2 = relay.Tuple([uop_11635,])
func_11643 = relay.Function([var_11634,], output)
mod['func_11643'] = func_11643
mod = relay.transform.InferType()(mod)
var_11644 = relay.var("var_11644", dtype = "float64", shape = (7, 4, 9))#candidate|11644|(7, 4, 9)|var|float64
output = func_11643(var_11644)
func_11645 = relay.Function([var_11644], output)
mutated_mod['func_11645'] = func_11645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12327 = relay.var("var_12327", dtype = "uint8", shape = ())#candidate|12327|()|var|uint8
const_12328 = relay.const([[[-3,-7]],[[-2,4]],[[-10,-1]],[[5,-10]],[[-7,7]],[[-9,7]],[[6,4]],[[4,-5]],[[8,7]],[[-8,8]]], dtype = "uint8")#candidate|12328|(10, 1, 2)|const|uint8
bop_12329 = relay.right_shift(var_12327.astype('uint8'), const_12328.astype('uint8')) # shape=(10, 1, 2)
output = bop_12329
output2 = bop_12329
func_12338 = relay.Function([var_12327,], output)
mod['func_12338'] = func_12338
mod = relay.transform.InferType()(mod)
var_12339 = relay.var("var_12339", dtype = "uint8", shape = ())#candidate|12339|()|var|uint8
output = func_12338(var_12339)
func_12340 = relay.Function([var_12339], output)
mutated_mod['func_12340'] = func_12340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12644 = relay.var("var_12644", dtype = "int16", shape = ())#candidate|12644|()|var|int16
var_12645 = relay.var("var_12645", dtype = "int16", shape = (8, 2, 1))#candidate|12645|(8, 2, 1)|var|int16
bop_12646 = relay.maximum(var_12644.astype('int16'), var_12645.astype('int16')) # shape=(8, 2, 1)
output = relay.Tuple([bop_12646,])
output2 = relay.Tuple([bop_12646,])
func_12665 = relay.Function([var_12644,var_12645,], output)
mod['func_12665'] = func_12665
mod = relay.transform.InferType()(mod)
var_12666 = relay.var("var_12666", dtype = "int16", shape = ())#candidate|12666|()|var|int16
var_12667 = relay.var("var_12667", dtype = "int16", shape = (8, 2, 1))#candidate|12667|(8, 2, 1)|var|int16
output = func_12665(var_12666,var_12667,)
func_12668 = relay.Function([var_12666,var_12667,], output)
mutated_mod['func_12668'] = func_12668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13272 = relay.var("var_13272", dtype = "float64", shape = (16, 4, 1))#candidate|13272|(16, 4, 1)|var|float64
const_13273 = relay.const([[[4.120836,-8.215166],[9.205362,9.028341],[-5.401965,-6.814913],[-7.793057,-2.834613]],[[-9.089618,-8.248406],[-6.478543,-6.205331],[6.731312,2.185003],[3.685135,-1.749609]],[[6.887886,8.135543],[4.363173,8.405155],[5.451411,-8.674873],[-7.062448,1.698842]],[[-0.505810,7.810524],[-2.889893,-5.474874],[-6.370978,8.375124],[-9.156484,1.285097]],[[9.941471,-5.214228],[5.880625,-8.431649],[8.250089,-4.075833],[9.958411,3.152605]],[[-4.164142,-0.394145],[-2.742689,-4.467717],[2.647808,-7.966480],[4.604556,1.468855]],[[-7.207011,-0.101254],[8.420956,-6.802973],[1.347359,-1.187585],[-9.254015,-4.859242]],[[-5.995468,4.699323],[3.878749,-2.079647],[-1.405000,-9.457290],[-9.375127,-4.424872]],[[-0.533584,-6.813930],[6.701239,-5.518658],[3.660502,7.331085],[-2.953850,-8.342766]],[[-6.701628,0.848962],[7.139829,-7.552843],[-2.789047,-6.742599],[7.793954,-4.937733]],[[9.510091,2.126550],[9.495753,6.847914],[7.047507,2.535995],[7.863147,-8.235762]],[[2.407390,0.330501],[8.070650,-0.284233],[3.131753,-9.982301],[8.341625,-6.636246]],[[9.574684,9.980725],[5.334033,-5.965896],[2.299531,2.052814],[0.986177,1.640288]],[[8.295217,-1.226821],[-1.635036,2.832895],[7.425946,-5.539187],[-7.203472,7.137783]],[[1.211205,-3.753968],[2.391428,3.107596],[-6.037439,6.031637],[-3.154805,3.458091]],[[-3.691578,3.365157],[-2.946207,-7.609227],[-0.218687,4.053276],[5.676843,6.411789]]], dtype = "float64")#candidate|13273|(16, 4, 2)|const|float64
bop_13274 = relay.floor_mod(var_13272.astype('float64'), const_13273.astype('float64')) # shape=(16, 4, 2)
output = bop_13274
output2 = bop_13274
func_13282 = relay.Function([var_13272,], output)
mod['func_13282'] = func_13282
mod = relay.transform.InferType()(mod)
var_13283 = relay.var("var_13283", dtype = "float64", shape = (16, 4, 1))#candidate|13283|(16, 4, 1)|var|float64
output = func_13282(var_13283)
func_13284 = relay.Function([var_13283], output)
mutated_mod['func_13284'] = func_13284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13317 = relay.var("var_13317", dtype = "float64", shape = (10, 16, 10))#candidate|13317|(10, 16, 10)|var|float64
uop_13318 = relay.acosh(var_13317.astype('float64')) # shape=(10, 16, 10)
func_6225_call = mod.get_global_var('func_6225')
func_6228_call = mutated_mod.get_global_var('func_6228')
var_13323 = relay.var("var_13323", dtype = "float32", shape = (14, 7))#candidate|13323|(14, 7)|var|float32
call_13322 = relay.TupleGetItem(func_6225_call(relay.reshape(var_13323.astype('float32'), [14, 7, 1])), 0)
call_13324 = relay.TupleGetItem(func_6228_call(relay.reshape(var_13323.astype('float32'), [14, 7, 1])), 0)
func_10029_call = mod.get_global_var('func_10029')
func_10031_call = mutated_mod.get_global_var('func_10031')
const_13340 = relay.const([2.413775,-8.497353,1.811843,0.467747,-5.659757,3.109892,3.050459,6.898597,8.971382,0.661773,-1.683012,-7.567570,0.310575,0.214616,3.458273,-6.671166,-3.822082,0.759369,1.241402,-3.199748,9.466202,-4.751363,6.186514,0.809615,-7.279420,5.730106,5.554479,-2.936268,-2.315961,-0.566945,-3.392002,-4.740407,5.431140,-8.372109,6.756555,-9.583252,9.329788,1.564890,3.787945,5.120517,6.834807,-2.536349,-0.550749,-9.645204,-7.750694,-8.697706,0.246902,1.921276,-5.191513,6.494440,3.894161,8.917233,-7.494087,8.335795,4.615272,4.451450,4.536031,1.788282,-6.824553,9.676345,-0.494818,5.608671,-6.067684,-8.576719,3.969709,-6.194954,-5.049418,5.980774,-7.342172,-2.571301,9.243619,5.382867,1.284417,-8.095637,-7.685459,2.254373,6.735337,-7.602216,5.339764,9.824436,-0.974372,0.529396,1.175916,8.260674,0.596017,8.542018,1.669329,-4.492464,1.017741,-2.739853,-7.337727,8.950208,-4.262070,9.555672,-3.614621,-0.796285,5.604614,3.451363,-4.316606,-6.758595,-7.142148,-3.532906,-3.516045,2.611051,4.750301,7.781197,6.974413,-3.655259,-8.107688,2.330442,-8.558699,9.554562,-6.033776,-4.411399,9.934033,-5.417069,-0.029131,6.647500,5.271416,-9.402221,-2.259717,-8.053357,-8.578045,-1.159577,7.306096,-9.247696,4.781004,8.006120,-5.079580,4.728941,-0.438205,-4.735076,-4.233950,-6.105519,-6.134079,4.074931,-6.032522,-0.706997,-0.930105,-9.265001,-7.186034,1.868142,-1.002450,7.644410,-8.848650,0.516542,4.747582,8.375122,5.277366,7.496021,-5.949478,9.405450,7.869935,-7.959825,-7.103621,2.270745,8.189805,-7.867534,7.927551,-5.804685,-8.415324,-9.012792,6.948010,-3.200407,7.484327,-5.696988,-6.080813,0.570466,8.476470,4.788640,-0.312635,5.703845,6.953056,5.247219,4.865096,-2.284273,8.604035,5.767258,-9.256080,-5.967663,-1.088546,7.122527,-0.405329,-4.746323,-0.781442,6.896190,-3.786853,-7.195681,-4.653012,-7.965597,-6.964305,-8.295506,9.501129,-3.594087,6.971534,-9.567402,-2.471900,-8.905538,-8.046819,-3.337425,-7.958660,6.905941,-5.550972,-7.060320,2.003512,5.251068,1.970961,-7.020296,5.616874,-3.706850,9.337789,-9.381218,-3.352948,-6.523491,0.305362,-8.550024,-0.995991,-3.446796,2.562705,0.633435,4.698439,-0.798970,-4.607252,-5.066016], dtype = "float64")#candidate|13340|(224,)|const|float64
call_13339 = relay.TupleGetItem(func_10029_call(relay.reshape(const_13340.astype('float64'), [14, 1, 16])), 1)
call_13341 = relay.TupleGetItem(func_10031_call(relay.reshape(const_13340.astype('float64'), [14, 1, 16])), 1)
func_6762_call = mod.get_global_var('func_6762')
func_6767_call = mutated_mod.get_global_var('func_6767')
var_13357 = relay.var("var_13357", dtype = "int8", shape = (858,))#candidate|13357|(858,)|var|int8
var_13358 = relay.var("var_13358", dtype = "bool", shape = (792,))#candidate|13358|(792,)|var|bool
const_13359 = relay.const([1.691450,4.807163,9.226029,1.640687,7.217356,-8.587219,-6.660454,-0.949980,3.638781,5.233123,2.500792,5.221912,-4.325250,-8.850300,4.302160,-4.039877,9.241990,5.456478,-2.836275,2.671043,-2.718036,0.799557,4.233550,-2.370484,-3.620241,-9.551002,-3.890141,4.351580,-5.262154,-5.217873,-7.596983,-0.282999,0.011736,4.592154,3.902816,7.082184,-9.242938,-2.479276,5.679711,-8.975387,-1.676427,5.156072,-2.106157,1.469828,-5.608886,-5.960406,-7.397224,1.004438,-0.620850,-8.533658,6.032552,5.824218,-9.306411,3.541232,-5.751683,0.920423,-3.266616,-5.350069,6.276954,-6.485151,8.686453,-6.630986,9.800346,1.982932,-3.083713,9.580198,-3.314516,6.178156,5.092934,-6.293403,5.939825,-9.410785,-6.878085,-1.802718,0.558722,3.885387,-8.071245,-8.491214,7.254951,9.120783,3.550868,5.398887,-6.446510,-4.224816,3.361962,7.461382,-3.781849,0.430731,-8.940888,-2.361018,-5.422268,0.348404,-4.147335,-9.728331,8.729382,6.521686,4.634541,-9.990645,-7.235326,1.140081,7.402419,-9.411943,-3.643440,-2.533654,2.908442,-5.872579,4.549827,-3.509167,-8.520719,3.219640,6.190353,-7.976396,-3.731170,-7.562523,-3.472942,-8.174049,-6.382408,6.863174,-5.183652,-4.725344,3.093875,4.508505,-3.786461,-3.454696,6.040092,-6.541070,-2.630315,5.165813,-3.663878,2.843548,4.590354,-8.295708,-5.378346,-4.706208,-6.768707,2.809099,-0.357375,-9.416030,-1.348439,7.518130,-9.071117,-4.369004,-6.092719,4.362141,2.142372,1.830748,7.222530,7.107228,-7.465099,-5.502446,-2.533787,-0.759705,9.579538,5.656432,0.455851,8.579359,-0.285850,-6.271539,3.782271,5.589332,3.720881,0.521781,1.602252,-5.052123,-0.689274,-0.944738,-2.120506,2.995608,9.294120,-4.961575,1.739518,-9.072417,6.958713,2.059481,4.293086,-0.952152,9.128491,1.692642,-2.446740,-2.154025,-6.734945,7.810718,4.615638,-1.169448,1.391675,9.909632,-2.171819,-6.555502,7.699963,-4.191419,1.044682,3.289643,-8.264733,2.396132,-3.358967,-6.437033,-1.683118,-1.680288,-1.108889,-4.399904,8.353046,3.855286,0.535479,8.160842,7.563584,9.910204,-4.891224,8.318993,3.711679,2.073016,8.863661,2.525450,0.114519,7.756401,-8.297425,7.173117,-1.723083,-1.211387,0.460569,-9.575046,4.400295,1.913026,-1.851110,6.973426,6.550061,3.774808,-6.350281,-5.892725,-4.668109,2.726268,8.729716,-1.655956,3.280281,1.575073,8.395600,7.422082,-0.294262,-8.880525,-2.475884,-0.975014,2.200218,-8.473288,-7.721053,7.943448,-7.827731,-5.595702,-2.817875,5.876418,6.273563,-4.090725,-1.907504,7.866159,-2.894656,1.117633,6.831241,-6.195790,-3.512018,-6.893051,5.200883,8.759478,9.868073,5.507264,7.811872,6.139309,6.840160,7.180960,-0.356060,-2.850301,-9.619034,6.396655,-9.519760,-8.847594,-0.506209,8.366122,2.570222,1.000435,-3.429249,-0.379373,-9.498485,-7.947153,6.807335,3.612511,4.136677,-9.892008,-5.708357,2.292395,7.159343,0.960953,0.515190,1.883945,7.849984,9.456951,1.104780,1.685509,0.081393,2.535356,8.575717,-4.874020,0.846855,9.943292,-8.286674,-7.495189,-4.568494,6.347519,-1.059600,-6.859202,-7.936856,-5.794730,7.135073,1.436680,3.341034,7.169179,3.625174,1.909644,-2.948413,-8.801863,-0.909063,-0.652457,-6.601362,-3.366479,-1.315163,6.861408,-5.956123,-6.268276,6.070349,-4.107006,2.195881,-9.514218,-1.620406,3.611099,-5.652590,3.698609,-3.946540,9.362262,-9.780923,9.948199,1.703710,9.757655,-1.306889,6.674531,7.386231,3.769136,-8.066119,6.787557,0.871487,1.081297,0.950995,-1.834398,0.362438,-6.411498,8.483412,-8.830655,-0.497133,-8.125838,-5.912039,1.705583,-7.681884,-2.511733,-8.072452,3.200919,-2.714985,5.459121,8.631582,1.330145,3.647061,-9.657808,4.187336,4.079934,-2.744778,7.173225,-6.531170,-3.675850,2.800466,4.789403,3.902162,3.365751,5.555606,7.847879,9.449604,8.186731,-6.874797,4.068729,5.740858,-7.514264,9.830817,-1.609053,-5.881456,-4.275213,6.961840,4.417511,-2.061790,-3.045978,7.904248,-6.695326,-5.981374,3.022340,-3.073465,-8.987392,-7.140555,8.089069,-8.090127,4.695207,5.520999,-0.840142,3.984426,9.126744,2.317172,7.295711,4.937438,3.923145,-8.635722,-6.826419,3.717542,-5.056045,2.816586,2.618198,4.414899,-3.219431,-1.416241,3.547992,-6.219237,6.278812,-5.240285,-0.614189,9.861489,4.305430,2.739291,-1.218355,-4.341879,-0.213908,-7.179356,-6.093756,-5.819175,-5.402048,2.318846,-0.565935,-1.639976,7.396160,-5.115162,-9.409138,1.617643,5.889586,-2.298591,-8.424723,-7.929518,-2.910700,-0.660476,-0.338830,-3.993979,-3.217122,-1.420333,9.855713,-5.400092,8.230853,2.680197,-3.408017,4.203729,2.022444,9.060873,5.370504,-1.726868,4.634670,-4.358253,0.454385,-9.232945,-5.849739,-8.477080,-9.582651,1.313167,8.505102,3.837092,6.642041,-3.504617,-1.821464,-6.602271,8.699505,-1.346884,-8.110846,0.603950,1.902001,0.190871,-0.728230,7.981566,-6.385277,8.693064,3.964092,-3.357698,4.630852,2.994479,-8.825696,2.777945,-5.322816,-3.643712,-0.972523,-3.258296,-9.876877,-1.159364,5.886439,0.477649,-9.324585,-1.454077,2.572660,-3.799155,4.687061,1.548221,-4.401726,0.761572,-7.485397,8.906460,5.838324,-8.981129,5.755692,0.392460,-4.023713,-7.315216,1.553504,5.343679,2.852879,6.288690,4.781001,8.120667,-8.119911,6.103442,-5.818311,4.460397,-2.317239,6.194455,-1.651641,8.127542,6.591357,0.180099,-3.068952,-2.927256,0.561641,-7.277644,-5.310163,-0.642506,-0.376665,5.521781,-9.442200,0.233851,-4.314543,-5.144129,2.684557,0.242362,3.160624,9.515843,0.385286,-4.980845,5.638146,-4.795132,-3.810338,-3.161003,-6.761336,7.911067,5.632610,6.127911,-0.275135,-7.415827,0.132975,-2.780372,0.455501,-7.574785,6.337092,5.891776,2.814492,-0.247231,-7.476340,9.874481,-9.849442,8.557611,6.523759,1.603111,-2.725358,3.925003,-0.574456,-0.084779,7.877038,-8.375709,0.802797,3.238601,3.839103,-4.043909,0.117308,-2.232786,1.609842,1.121856,1.850833,-3.156042,-1.288276,0.263401,3.217275,-2.542382,2.034061,-3.671202,-8.975311,9.513508,7.936780,0.449130,9.918483,9.600265,8.744187,6.786142,3.551488,-0.548265,0.995688,-9.986957,-5.981477,2.045580,-2.923330,-7.144393,-6.368534,-5.086338,-5.971218,-6.555302,-6.835568,-1.018262,-0.622368,-4.467916,7.114549,3.942985,-5.271309,0.627466,0.898895,-7.893056,-8.567651,-9.805686,9.460152,4.214199,9.817906,1.670061,7.595239,9.630632,-7.297164,0.696305,7.331412,-4.919331,2.845692,-3.213007,0.615046,-3.285117,0.125988,-3.984875,1.024150,-9.373857,0.883588,-5.192980,9.877309,-9.189303,2.978025,8.419137,-2.461015,6.798841,-7.856043,-1.136933,-1.907163,7.954084,-0.447458,-0.184303,2.344942,-5.220724,7.984384,7.387429,-4.699685,-5.274549,-0.196968,-1.248281,1.713449,-3.257941,4.631115,2.762286,6.437967,-6.204487,-0.413551,4.396024,2.549073,-9.480001,4.548871,-0.738722,7.288245,6.183476,-1.356134,1.842459,3.465002,9.046112,-9.777251,9.922295,-8.632950,0.396808,-7.860919,-2.591270,-1.397760,-5.415925,7.156030,-4.495408,5.339620,-7.562713,4.322867,-1.810553,9.900418,-5.526334,-4.152094,0.198283,6.114267,-3.660124,8.100163,9.713376,5.266324,2.088516,-5.109139,-1.304388,-3.984777,-8.562780,-6.181547,-0.086177,-0.483223,7.388185,-8.505679,7.559304,-6.358901,-2.267735,8.169082,0.807840,7.993681,9.200081,-3.459752,-8.892169,-1.539503,3.572281,7.705367,-8.095156,-2.305971,-7.051450,-4.299514,-2.202778,1.360708,-2.263514,-6.415852,-5.104183,9.879657,-7.368852,7.273653,-8.307298,2.463473,-2.010775,7.070378,-7.059869,-2.593520,5.125173,6.911645,5.066123,-6.541525,1.707934,-4.749405,-0.966498,0.458884,2.903855,6.210815,-3.037722,4.021353,5.857021,5.320782,-9.995492,9.223367,-0.618087,8.992243,0.516406,1.866121,5.974651,-3.427778,5.458611,-8.586472,-5.188211,-1.147333,-8.995228,2.257450,4.394879,0.902634,1.602732,0.239757], dtype = "float32")#candidate|13359|(780,)|const|float32
call_13356 = relay.TupleGetItem(func_6762_call(relay.reshape(var_13357.astype('int8'), [858, 1]), relay.reshape(var_13358.astype('bool'), [792,]), relay.reshape(const_13359.astype('float32'), [780,]), ), 3)
call_13360 = relay.TupleGetItem(func_6767_call(relay.reshape(var_13357.astype('int8'), [858, 1]), relay.reshape(var_13358.astype('bool'), [792,]), relay.reshape(const_13359.astype('float32'), [780,]), ), 3)
func_5366_call = mod.get_global_var('func_5366')
func_5372_call = mutated_mod.get_global_var('func_5372')
var_13363 = relay.var("var_13363", dtype = "float64", shape = (240,))#candidate|13363|(240,)|var|float64
var_13364 = relay.var("var_13364", dtype = "float64", shape = (1638,))#candidate|13364|(1638,)|var|float64
var_13365 = relay.var("var_13365", dtype = "float32", shape = (624,))#candidate|13365|(624,)|var|float32
const_13366 = relay.const([10,-10,-4,2,-2,-8,-8,5,-5,9,-6,3,-10,9,1,-7,4,3,-8,6,1,-7,6,-8,10,-5,8,6,-6,-2,-6,9,-8,10,7,-6,-9,-7,6,4,-5,-2,10,3,-6,-5,3,2,6,5,-7,4,-7,-1,-10,-9,-5,-8,-3,-2,-5,1,1,-7,-7,-4,7,-2,-1,-7,9,8,9,10,-8,-10,9,10,7,9,-2,-2,-1,3,-9,-6,6,-2,-9,-6,-5,9,10,-4,-9,-2,-5,7,-9,9,1,-6,-9,-4,1,5,-8,7,-6,-4,-3,-5,1,4,4,-7,9,4,10,-8,7,6,-10,3,4,-2,-4,-3,10,-2,-1,1,-2,9,2,2,3,-5,1,-10,3,-1,-2,1,-2,-8,2,6,-4,-6,4,-6,-8,-9,-6,3,4,8,8,8,2,4,5,8,7,-8,3,-6,-2,9,8,9,6,6,5,-6,1,-1,-2,-8,4,-7,-9,-8,-2,10,1,-9,-5,2,10,6,-10,8,7,-8,-5,2,2,6,8,-1,5,5,7,-3,5,-10,8,4,5,8,1,-3,-9,6,-7,6,8,-4,-9,4,8,-9,-4,-2,7,1,2,-8,5,10,-10,3,-10,-5,-6,2,-4,10,4,-9,6,6,3,10,-7,-9,-9,-6,-3,-7,-3,5,-10,5,9,-4,3,-10,5,4,2,-2,8,-7,1,2,-5,-1,-1,10,2,2,5,2,4,3,-1,-7,2,-2,10,-5,10,-9,-2,-1,-2,-10,7,-6,-9,-8,-3,-3,-9,-6,-10,3,6,-1,2,3,-4,-2,4,-3,8,-7,-6,-5,-5,3,1,5,9,-6,-7,6,9,-4,7,-7,-9,-3,-7,10,-9,-9,-9,8,10,9,-2,-9,-3,7,10,-5,10,-4,6,9,4,-8,10,-1,1,-8,-4,-7,9,9,7,10,1,4,-7,7,-1,-6,-10,-3,-6,-7,1,-9,7,2,1,-3,6,-2,-2,-6,-3,-6,-9,7,2,-6,-7,3,-3,1,-7,-8,4,7,10,-1,-6,-7,5,-10,7,10,-1,1,-10,-9,7,-1,9,8,-3,-2,5,-4,5,-9,-2,-8,4,10,-2,-2,-6,1,-2,5,-8,-4,8,5,-4,8,3,-2,7,-2,10,-9,6,-4,-1,-4,7,3,-6,1,-1,9,-6,1,-4,4,7,-2,3,3,-6,2,5,-1,4,-4,-10,8,-5,-1,4,-2,-9,5,-10,-8,5,2,-7,-4,4,5,2,-1,-4,5,8,-8,2,2,2,-10,10,-1,-4,6,-3,-1,-4,-2,-7,-8,-4,3,-10,8,5,-2,-2,9,-8,-2,-8,7,-5,2,-8,8,-7,-6,8,-2,5,-5,7,-1,-3,-7,5,-4,-5,-4,-7,4,5,-4,5,-5,9,5,8,-2,-8,1,-5,6,1,4,2,3,-8,-10,2,3,-7,-7,6,-3,10,-8,9,6,1,10,-10,3,-10,2,2,3,-6,2,2,6,1,7,-5,-4,5,-4,-6,2,1,10,-9,-3,-7,-7,-2,3,5,7,-4,-8,4,-5,-10,10,1,5,5,7,4,-3,8,-4,-5,-5,-4,8,-7,-10,-10,-8,-10,-2,-2,-1,6,-5,-7,7,9,-10,7,1,-3,-8,-1,5,-1,10,-10,2,-2,-8,3,2,-7,7,2,-7,8,9,4,-5,-3,-10,6,8,-6,-9,-4,-5,5,7,7,-6,1,-6,-9,2,6,6,-4,9,1,-1,1,7,5,7,10,-10,-9,8,9,-2,1,-6,2,-7,5,9,-3,4,-10,1,-4,-1,-9,-1,-8,-3,10,-6,-7,5,-10,-2,1,-2,-8,-1,5,-3,10,3,8,-8,7,9,6,8,10,-8,7,-2,-2,5,-6,2,-4,-5,-10,1,9,-3,-5,3,-2,-6,1,-2,-10,2,7,1,8,-6,-1,8,-8,-6,-2,10,-10,-3,-4,-5,3,-10,3,4,9,2,8,3,10,10,-8,8,-9,-8,5,5,3,10,7,7,-5,-10,-6,-8,-10,-8,1,6,-6,-2,10,-1,-3,6,5,7,-10,-3,-10,5,-3,10,-9,-3,1,-8,-3,1,-1,7,2,-8,-3,-1,3,-4,-8,-10,9,4,1,10,-2,-1,1,1,-3,6,-9,8,-2,10,-7,9,-6,-7,-4,10,-1,8,-8,-3,-7,7,-5,-2,9,7,2,1,8,6,6,-9,-6,7,8,-5,1,5,-8,3,8,-3,-5,-10,-4,-6,-2,-7,3,-2,-6,-8,-10,-10,-7,-8,-2,-7,7,9,-6,2,-1,-6,-3,-5,-9,3,-5,10,8,9,8,7,5,-7,-3,9,-7,8,5,-8,-8,6,8,7,1,-5,4,-6,-10,-10,-3,-6,-5,-2,-8,5,-3,-9,-6,-6,4,7,3,-7,-6,5,7,10,6,2,-4,1,-9,-10,-7,-1,-8,-9,2,6,-4,-9,-2,4,-3,-3,-5,-4,-5,9,-1,-2,-9,-1,-8,10,8,6,-8,-8,-7,8,5,6,8,-1,6,-9,-6,-7,-9,-8,-6,-5,-5,7,-5,-5,7,-10,9,-6,-9,-1,7,-1,2,-1,4,-5,2,10,-5,10,6,-8,3,1,1,9,7,4,7,-10,-3,9,-4,-3,-6,2,-2,9,6,-9,10,-7,-6,-8,6,6,-10,-7,8,3,4,5,8,3,-6,5,2,2,-10,-5,-8,-10,-7,-3,8,8,3,-7,-9,-7,7,-10,-3,-9,5,-1,-2,-1,7,-4,4,-4,5,-8,-6,-9,8,-9,4,-5,-9,-1,-7,-4,10,9,9,-9,-9,-3,5,-5,3,-3,4,-7,-6,8,3,-10,-9,7,6,-4,-4,-7,1,3,10,3,5,6,8,-5,-5,4,-3,2,6,2,5,10,-5,-9,8,-6,-10,2,-8,9,-1,-7,-5,-4,7,2,7,-5,4,7,4,6,-10,1,5,-3,-4,-1,-1,9,-2,9,4,4,-8,1,6,7,6,-4,-2,9,7,-5,6,-8,7,-10,1,-1,4,-4,-9,-4,3,-6,-5,10,-7,-2,-1,3,-8,-10,-4,-2,3,9,-9,5,-1,4,7,9,9,9,2,7,-3,-10,8,-7,10,-10,-1,8,7,-9,7,8,-7,-7,9,10,-1,-10,4,9,-5,2,6,-9,3,-7,6,-10,4,-4,1,4,-8,-10,-2,-6,-10,5,8,10,4,6,5,-4,1,-2,4,4,-8,4,-3,-9,1,-10,-1,-4,8,-6,-4,-3,-8,7,1,-6,6,-1,2,-4,5,4,4,3,-6,8,7,4,6,-9,-3,-8,-5,-7,-10,-2,5,-2,-1,-3,-4,-8,-2,-8,4,-7,-2,-5,5,-6,3,1,3,8,-10,3,-4,5,-3,-6,2,-5,10,3,-2,-2,6,-2,9,-3,1,-3,6,2,-10,-10,4,7,5,-9,9,-1,-5,6,-1,10,-6,8,10,-3,8,5,1,6,-1,5,6,-9,-9,2,-3,-3,-7,10,2,-10,-1,2,6,-9,5,-1,2,-2,4,-10,-8,5,-5,-3,-2,-7,7,-4,9,1,9,-3,-1,-9,-10,-3,3,4,-5,-5,1,10,3,-10,-9,-4,-3,9,-3,1,9,-2,2,-10,-4,-5,-9,2,1,2,-4,-8,5,-3,6,-4,7,-9,1,-5,-6,-9,-5,5,-4,6,5,-7,9,-3,-3,2,-10,-9,10,-5,6,1,4,7,-5,5,5,2,-1,1,-1,-6,-3,3,10,-10,-3,-8,-9,6,10,-5,1,-10,-2,8,3,-4,10,-10,7,-9,-2,-7,3,-8,5,9,1,-10,-2,8,-4,-2,2,-7,1,-9,-2,-8,2,-10,-9,2,-10,-5,-5,-8,7,-3,9,6,-3,-6,3,-2,2,-9,2,-1,8,-5,-10,9,-10,-6,4,2,7,4,4,3,9,6,-5,-6,-6,-3,-3,-6,9,-3,-2,-10,-4,8,-2,5,5,5,-10,-3,3,3,-2,-8,-8,2,7,-10,-6,-1,3,10,-7,8,-9,4,-10,-7,-7,-3,-7,7,-7,-6,-9,-1,-5,10,7,1,-10,-7,3,5,8,-7,1,6,-4,10,1,4,2,8,-2,7,-6,-4,-8,-1,7,9,3,-5,-10,-10,6,-7,-8,10,-5,-5,1,2,-8,-6,-10,-2,-2,1,4,5,5,-10,10,-4,9,8,9,-1,-2,4,4,6,-5,-10,-6,10,-8,4,-10,-2,10,-1,9,-7,-9,-2,9,8,7,-4,10,6,-6,-5,1,-5,7,-1,8,-5,9,9,-9,5,-3,-1,-2,-3,9,5,5,-2,-8,7,9,4,-3,-9,7,8,-2,5,6,-4,-5,-7,-3,-3,10,-8,3,-10,-4,-7,-2,1,6,9,3,8,-2,-8,-2,7,-10,2,6,10,-10,1,1,-5,7,10,-5,9,1,-4,10,-4,6,-4,7,-4,-10,-8,-6,-10,5,4,6,1,1,-2,-7,-1,-4,7,8,10,-6,-1,-1,5,10,-10,-3,8,6,-4,8,-8,-2,-6,6,-10,-4,5,3,3,-1,4,6,7,1,5,-1,-2,9,5,3,10,-8,5,6,9,-3,-1,-6,-10,-2,-8,9,-5,-7,-4,8,10,-8,1,2,-1,-4,5,1,-7,-10,5,5,8,4,2,5,-10,-6,-8,3,-5,-2,-5,8,7,6,-9,-5,3,-8,-1,-7,-9,2,-1,-9,-1,1,-5,7,8,5,4,-2,-7,-2,-5,-9,-3,-2,-7,-5,1,4,4,9,5,-9,1,-8,4,-7,2,-3,-9,9,5,4,-9,-3,10,-7,5,-5,-7,-5,6,10,-9,1,8,-4,4,-1,6,8,-8,-2,8,9,4,-6,5,-6,-9,-2,9,-1,6,7,-10,8,9,8,9,5,-1,-4,9,1,-9,6,-1,-2,-3,-6,4,-10,8,-4,-5,-2,4,-5,6,-2,10,-2,8,-5,2,3,-9,-3,-1,4,8,4,-2,4,4,-2,3,-3,-7,-2,-2,-5,6,-8,4,4,-7,-3,-5,6,10,-2,-1,4,5,-7,10,8,9,-4,-7,7,5,5,-5,-1,-1,10,10,-2,-1,-4,2,-9,-7,5,3,1,10,-10,-9,1,-4,3,-6,-10,5,-10,-3,7,-3,-5,-4,4,2,-10,5,-2,2,-2,2,5,-4,-4,5,-9,4,3,-2,-4,1,7,3,4,9], dtype = "int64")#candidate|13366|(1960,)|const|int64
call_13362 = relay.TupleGetItem(func_5366_call(relay.reshape(var_13363.astype('float64'), [15, 16, 1]), relay.reshape(const_13359.astype('float32'), [780,]), relay.reshape(var_13364.astype('float64'), [1638,]), relay.reshape(var_13365.astype('float32'), [624,]), relay.reshape(const_13366.astype('int64'), [140, 14]), ), 1)
call_13367 = relay.TupleGetItem(func_5372_call(relay.reshape(var_13363.astype('float64'), [15, 16, 1]), relay.reshape(const_13359.astype('float32'), [780,]), relay.reshape(var_13364.astype('float64'), [1638,]), relay.reshape(var_13365.astype('float32'), [624,]), relay.reshape(const_13366.astype('int64'), [140, 14]), ), 1)
bop_13368 = relay.less_equal(var_13363.astype('bool'), call_13356.astype('bool')) # shape=(858, 240)
bop_13371 = relay.less_equal(var_13363.astype('bool'), call_13360.astype('bool')) # shape=(858, 240)
bop_13378 = relay.bitwise_or(uop_13318.astype('int64'), relay.reshape(var_13317.astype('int64'), relay.shape_of(uop_13318))) # shape=(10, 16, 10)
bop_13384 = relay.greater_equal(bop_13368.astype('bool'), call_13356.astype('bool')) # shape=(858, 240)
bop_13387 = relay.greater_equal(bop_13371.astype('bool'), call_13360.astype('bool')) # shape=(858, 240)
output = relay.Tuple([call_13322,var_13323,call_13339,const_13340,var_13357,var_13358,const_13359,call_13362,var_13364,var_13365,const_13366,bop_13378,bop_13384,])
output2 = relay.Tuple([call_13324,var_13323,call_13341,const_13340,var_13357,var_13358,const_13359,call_13367,var_13364,var_13365,const_13366,bop_13378,bop_13387,])
func_13389 = relay.Function([var_13317,var_13323,var_13357,var_13358,var_13363,var_13364,var_13365,], output)
mod['func_13389'] = func_13389
mod = relay.transform.InferType()(mod)
mutated_mod['func_13389'] = func_13389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13389_call = mutated_mod.get_global_var('func_13389')
var_13391 = relay.var("var_13391", dtype = "float64", shape = (10, 16, 10))#candidate|13391|(10, 16, 10)|var|float64
var_13392 = relay.var("var_13392", dtype = "float32", shape = (14, 7))#candidate|13392|(14, 7)|var|float32
var_13393 = relay.var("var_13393", dtype = "int8", shape = (858,))#candidate|13393|(858,)|var|int8
var_13394 = relay.var("var_13394", dtype = "bool", shape = (792,))#candidate|13394|(792,)|var|bool
var_13395 = relay.var("var_13395", dtype = "float64", shape = (240,))#candidate|13395|(240,)|var|float64
var_13396 = relay.var("var_13396", dtype = "float64", shape = (1638,))#candidate|13396|(1638,)|var|float64
var_13397 = relay.var("var_13397", dtype = "float32", shape = (624,))#candidate|13397|(624,)|var|float32
call_13390 = func_13389_call(var_13391,var_13392,var_13393,var_13394,var_13395,var_13396,var_13397,)
output = call_13390
func_13398 = relay.Function([var_13391,var_13392,var_13393,var_13394,var_13395,var_13396,var_13397,], output)
mutated_mod['func_13398'] = func_13398
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13426 = relay.const([[[3,2,-7],[10,5,-10],[7,-6,-3],[6,4,-8],[-2,5,-5],[-6,10,-10],[4,8,9],[2,8,-6],[3,-10,1],[4,-9,1],[-9,-2,5],[-7,1,10],[-3,-7,8],[-2,5,-8],[2,-2,-8],[4,-10,-8]],[[6,5,1],[9,-6,7],[-10,-7,-2],[3,-6,6],[-10,3,5],[-6,-9,10],[4,5,8],[6,-2,-4],[5,-10,-4],[6,5,5],[-5,2,-10],[3,4,6],[2,1,-2],[-8,-4,-9],[-5,2,6],[-1,-8,6]],[[-5,-4,9],[-2,-1,-4],[-10,1,1],[2,-4,-7],[2,3,10],[8,8,-4],[-3,9,1],[-6,-6,-3],[-6,2,-9],[-4,6,1],[-9,-9,2],[-6,-4,-8],[8,6,-10],[8,5,-7],[10,5,1],[10,-4,8]],[[6,10,9],[-5,-9,-9],[-1,6,1],[-8,7,7],[-1,7,-7],[1,9,5],[9,-4,-10],[-9,2,-7],[-1,3,10],[5,6,7],[6,-9,1],[-2,-4,1],[1,-5,9],[7,-6,-9],[10,-8,-7],[2,-4,10]]], dtype = "int8")#candidate|13426|(4, 16, 3)|const|int8
var_13427 = relay.var("var_13427", dtype = "int8", shape = (4, 16, 3))#candidate|13427|(4, 16, 3)|var|int8
bop_13428 = relay.less(const_13426.astype('bool'), relay.reshape(var_13427.astype('bool'), relay.shape_of(const_13426))) # shape=(4, 16, 3)
bop_13435 = relay.equal(const_13426.astype('bool'), relay.reshape(var_13427.astype('bool'), relay.shape_of(const_13426))) # shape=(4, 16, 3)
output = relay.Tuple([bop_13428,bop_13435,])
output2 = relay.Tuple([bop_13428,bop_13435,])
func_13442 = relay.Function([var_13427,], output)
mod['func_13442'] = func_13442
mod = relay.transform.InferType()(mod)
var_13443 = relay.var("var_13443", dtype = "int8", shape = (4, 16, 3))#candidate|13443|(4, 16, 3)|var|int8
output = func_13442(var_13443)
func_13444 = relay.Function([var_13443], output)
mutated_mod['func_13444'] = func_13444
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13488 = relay.var("var_13488", dtype = "float32", shape = (14, 5, 10))#candidate|13488|(14, 5, 10)|var|float32
uop_13489 = relay.exp(var_13488.astype('float32')) # shape=(14, 5, 10)
output = uop_13489
output2 = uop_13489
func_13495 = relay.Function([var_13488,], output)
mod['func_13495'] = func_13495
mod = relay.transform.InferType()(mod)
mutated_mod['func_13495'] = func_13495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13496 = relay.var("var_13496", dtype = "float32", shape = (14, 5, 10))#candidate|13496|(14, 5, 10)|var|float32
func_13495_call = mutated_mod.get_global_var('func_13495')
call_13497 = func_13495_call(var_13496)
output = call_13497
func_13498 = relay.Function([var_13496], output)
mutated_mod['func_13498'] = func_13498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13766 = relay.var("var_13766", dtype = "float64", shape = (6, 5, 13))#candidate|13766|(6, 5, 13)|var|float64
var_13767 = relay.var("var_13767", dtype = "float64", shape = (6, 5, 13))#candidate|13767|(6, 5, 13)|var|float64
bop_13768 = relay.greater(var_13766.astype('bool'), relay.reshape(var_13767.astype('bool'), relay.shape_of(var_13766))) # shape=(6, 5, 13)
output = bop_13768
output2 = bop_13768
func_13772 = relay.Function([var_13766,var_13767,], output)
mod['func_13772'] = func_13772
mod = relay.transform.InferType()(mod)
var_13773 = relay.var("var_13773", dtype = "float64", shape = (6, 5, 13))#candidate|13773|(6, 5, 13)|var|float64
var_13774 = relay.var("var_13774", dtype = "float64", shape = (6, 5, 13))#candidate|13774|(6, 5, 13)|var|float64
output = func_13772(var_13773,var_13774,)
func_13775 = relay.Function([var_13773,var_13774,], output)
mutated_mod['func_13775'] = func_13775
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14109 = relay.var("var_14109", dtype = "int64", shape = (10, 4, 3))#candidate|14109|(10, 4, 3)|var|int64
var_14110 = relay.var("var_14110", dtype = "int64", shape = (10, 4, 3))#candidate|14110|(10, 4, 3)|var|int64
bop_14111 = relay.bitwise_xor(var_14109.astype('int64'), relay.reshape(var_14110.astype('int64'), relay.shape_of(var_14109))) # shape=(10, 4, 3)
output = relay.Tuple([bop_14111,])
output2 = relay.Tuple([bop_14111,])
func_14115 = relay.Function([var_14109,var_14110,], output)
mod['func_14115'] = func_14115
mod = relay.transform.InferType()(mod)
var_14116 = relay.var("var_14116", dtype = "int64", shape = (10, 4, 3))#candidate|14116|(10, 4, 3)|var|int64
var_14117 = relay.var("var_14117", dtype = "int64", shape = (10, 4, 3))#candidate|14117|(10, 4, 3)|var|int64
output = func_14115(var_14116,var_14117,)
func_14118 = relay.Function([var_14116,var_14117,], output)
mutated_mod['func_14118'] = func_14118
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14197 = relay.const([[[-7.323145,3.000137,7.113506,-1.881141]],[[-7.114609,-1.407939,-1.150034,-5.466994]],[[-3.459680,0.575677,-8.504707,-7.360316]],[[-0.009681,8.404469,-3.563561,-0.974470]]], dtype = "float64")#candidate|14197|(4, 1, 4)|const|float64
uop_14198 = relay.sigmoid(const_14197.astype('float64')) # shape=(4, 1, 4)
output = uop_14198
output2 = uop_14198
func_14204 = relay.Function([], output)
mod['func_14204'] = func_14204
mod = relay.transform.InferType()(mod)
mutated_mod['func_14204'] = func_14204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mutated_mod.get_global_var('func_14204')
call_14205 = func_14204_call()
output = call_14205
func_14206 = relay.Function([], output)
mutated_mod['func_14206'] = func_14206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_14214 = func_14204_call()
call_14215 = func_14204_call()
output = call_14214
output2 = call_14215
func_14223 = relay.Function([], output)
mod['func_14223'] = func_14223
mod = relay.transform.InferType()(mod)
output = func_14223()
func_14224 = relay.Function([], output)
mutated_mod['func_14224'] = func_14224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_14297 = func_14204_call()
call_14298 = func_14204_call()
var_14301 = relay.var("var_14301", dtype = "float64", shape = (4, 6, 4))#candidate|14301|(4, 6, 4)|var|float64
bop_14302 = relay.greater_equal(call_14297.astype('bool'), var_14301.astype('bool')) # shape=(4, 6, 4)
bop_14305 = relay.greater_equal(call_14298.astype('bool'), var_14301.astype('bool')) # shape=(4, 6, 4)
func_5778_call = mod.get_global_var('func_5778')
func_5782_call = mutated_mod.get_global_var('func_5782')
var_14307 = relay.var("var_14307", dtype = "int8", shape = (1, 240))#candidate|14307|(1, 240)|var|int8
var_14308 = relay.var("var_14308", dtype = "float32", shape = (780,))#candidate|14308|(780,)|var|float32
const_14309 = relay.const([-9.059255,6.310390,-9.980093,3.943724,5.222026,4.263478], dtype = "float32")#candidate|14309|(6,)|const|float32
call_14306 = relay.TupleGetItem(func_5778_call(relay.reshape(var_14307.astype('int8'), [5, 3, 16]), relay.reshape(var_14308.astype('float32'), [780, 1]), relay.reshape(const_14309.astype('float32'), [6,]), ), 0)
call_14310 = relay.TupleGetItem(func_5782_call(relay.reshape(var_14307.astype('int8'), [5, 3, 16]), relay.reshape(var_14308.astype('float32'), [780, 1]), relay.reshape(const_14309.astype('float32'), [6,]), ), 0)
output = relay.Tuple([bop_14302,call_14306,var_14307,var_14308,const_14309,])
output2 = relay.Tuple([bop_14305,call_14310,var_14307,var_14308,const_14309,])
func_14312 = relay.Function([var_14301,var_14307,var_14308,], output)
mod['func_14312'] = func_14312
mod = relay.transform.InferType()(mod)
mutated_mod['func_14312'] = func_14312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14312_call = mutated_mod.get_global_var('func_14312')
var_14314 = relay.var("var_14314", dtype = "float64", shape = (4, 6, 4))#candidate|14314|(4, 6, 4)|var|float64
var_14315 = relay.var("var_14315", dtype = "int8", shape = (1, 240))#candidate|14315|(1, 240)|var|int8
var_14316 = relay.var("var_14316", dtype = "float32", shape = (780,))#candidate|14316|(780,)|var|float32
call_14313 = func_14312_call(var_14314,var_14315,var_14316,)
output = call_14313
func_14317 = relay.Function([var_14314,var_14315,var_14316,], output)
mutated_mod['func_14317'] = func_14317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_14322 = func_14204_call()
call_14323 = func_14204_call()
func_5778_call = mod.get_global_var('func_5778')
func_5782_call = mutated_mod.get_global_var('func_5782')
var_14327 = relay.var("var_14327", dtype = "int8", shape = (240,))#candidate|14327|(240,)|var|int8
var_14328 = relay.var("var_14328", dtype = "float32", shape = (780,))#candidate|14328|(780,)|var|float32
const_14329 = relay.const([-2.032865,1.323164,7.197266,-4.377100,-5.713437,0.385187], dtype = "float32")#candidate|14329|(6,)|const|float32
call_14326 = relay.TupleGetItem(func_5778_call(relay.reshape(var_14327.astype('int8'), [5, 3, 16]), relay.reshape(var_14328.astype('float32'), [780, 1]), relay.reshape(const_14329.astype('float32'), [6,]), ), 4)
call_14330 = relay.TupleGetItem(func_5782_call(relay.reshape(var_14327.astype('int8'), [5, 3, 16]), relay.reshape(var_14328.astype('float32'), [780, 1]), relay.reshape(const_14329.astype('float32'), [6,]), ), 4)
func_14312_call = mod.get_global_var('func_14312')
func_14317_call = mutated_mod.get_global_var('func_14317')
const_14334 = relay.const([-4.226587,2.130974,-4.379658,8.277436,-6.238639,3.096482,6.720474,-1.460008,-0.959583,1.475096,3.299588,9.246792,-0.074804,-1.095713,-9.240477,-9.847441,-0.390842,-7.740633,2.492890,-2.479793,-3.650253,-3.493755,-6.814431,3.107250,5.713811,-9.457413,4.337521,8.677200,1.006218,5.754725,1.857065,-8.141950,0.526824,-2.926336,-9.127074,7.890410,-1.573389,-8.456991,-4.131807,9.463111,3.208308,4.229519,1.434814,-4.235120,-9.244975,-6.497425,2.433420,-0.262455,8.075686,0.471776,3.045055,0.538578,3.260311,-3.543646,1.987635,2.207036,-1.484854,4.249714,9.933014,-7.774512,-1.939330,8.686025,-8.766852,-0.943237,-8.462584,2.968558,-3.489988,7.294837,7.869440,-4.820033,2.946227,4.773195,-7.428947,7.639570,-5.566610,9.340197,6.724716,-7.964692,-4.278997,1.905124,-0.649079,4.002476,5.138890,-2.552197,-3.981197,1.111674,3.021595,2.258486,-8.395721,4.713460,5.075354,0.788869,-2.989373,-2.318182,-2.455315,8.611074], dtype = "float64")#candidate|14334|(96,)|const|float64
call_14333 = relay.TupleGetItem(func_14312_call(relay.reshape(const_14334.astype('float64'), [4, 6, 4]), relay.reshape(var_14327.astype('int8'), [1, 240]), relay.reshape(var_14328.astype('float32'), [780,]), ), 1)
call_14335 = relay.TupleGetItem(func_14317_call(relay.reshape(const_14334.astype('float64'), [4, 6, 4]), relay.reshape(var_14327.astype('int8'), [1, 240]), relay.reshape(var_14328.astype('float32'), [780,]), ), 1)
func_13389_call = mod.get_global_var('func_13389')
func_13398_call = mutated_mod.get_global_var('func_13398')
const_14348 = relay.const([8.086273,-1.267305,2.582378,-5.371614,5.152342,-3.423130,-4.410510,1.486846,-7.441317,9.810686,-9.630168,2.399876,-8.724755,1.738592,-7.962666,7.723403,-4.087153,-5.983696,-0.077378,9.641279,6.044627,2.806604,0.962958,-7.993165,8.468635,3.220453,3.718290,1.013632,0.407401,5.435400,7.283134,2.049597,-7.238713,-8.079511,7.267266,-7.362700,3.131403,-1.846591,-1.060181,-3.170441,-5.911317,-0.169091,-0.114746,-6.467277,-1.482028,9.832117,-9.128165,5.225151,-0.496590,-0.827460,3.514151,-5.480228,-3.099114,-5.620406,4.410275,-9.353588,-1.499228,-8.158215,5.091700,-3.946456,-7.621463,6.221732,-4.965600,-9.333775,-7.318097,-7.942441,3.421215,-1.894214,-3.019093,4.019500,3.140202,8.090333,-9.886107,-0.166966,-5.383667,6.035843,-1.368237,-8.412372,-6.278886,0.465546,7.718040,-0.227710,0.174257,-5.936266,8.881931,6.820828,-5.183196,-8.405419,-0.371481,-8.838095,9.723322,-5.845798,-4.788890,9.152830,9.752071,-2.828713,-3.306179,8.944370,0.871607,6.549878,6.496758,-2.802126,-5.599344,-3.746244,0.837714,5.982324,9.275281,0.094719,-7.374626,-5.637432,0.074097,-1.766826,3.814702,0.444390,-0.567151,-6.828015,-4.616381,1.020403,0.120881,4.055017,-7.942285,-0.107893,-0.748979,0.151576,-6.058948,-0.757742,-0.606893,0.458912,2.285866,6.933766,-0.478241,3.670626,-5.964158,5.262613,3.527061,-8.447505,2.085536,8.670161,-2.661286,2.244759,-4.635481,1.841292,-9.310432,-9.663710,9.708061,0.592519,5.218210,-4.079166,8.279713,-4.085786,5.414187,-1.485149,6.312768,-4.553234,1.724008,-9.816965,-6.081694,-6.545374,-9.146153,-3.509322,-5.262586,7.400465,-9.241269,6.151375,3.134159,-4.300208,4.114458,-3.869785,-0.251787,-7.135354,-3.174560,0.009613,-9.247540,7.774856,9.735047,9.121784,-9.262052,1.490967,-2.075686,-1.114292,-5.124267,-4.460967,-4.705368,-6.517671,-0.469119,-3.794731,7.923838,9.468984,1.739940,9.999148,-5.411926,0.376030,9.483983,6.697224,7.492235,-3.526764,4.055930,7.949038,1.220619,-4.894780,4.872318,-4.650581,6.761564,-3.692733,-1.769593,2.920159,-4.462167,1.655665,8.744003,-6.232463,3.460979,1.196368,8.033671,-4.166257,-3.017431,-8.041930,3.311545,9.249398,-2.570207,5.149913,5.314565,6.625792,1.248098,5.152343,-1.449614,-5.714513,-6.233410,-7.376030,-6.251050,-1.486296,6.667267,-8.152370,9.745552,5.534554,-8.608045,2.619556,7.485475,1.826998,4.636591,-3.432009,-5.121641,0.174749,-2.429036,3.247119,-1.052449,9.168166,-8.297175,-8.095522,1.121518,-4.372035,1.054621,9.014238,-1.041562,3.641077,-1.331966,7.823742,-0.788698,9.936376,-9.921210,-9.720756,5.780591,1.440896,2.068939,8.717774,0.379257,-1.216898,2.493934,-7.492301,5.853032,-6.499027,7.282620,-9.925211,-1.176027,-2.926579,-9.414546,-5.978138,-3.283111,-7.251472,5.119844,7.495302,4.991105,0.768712,0.559430,-9.143867,-4.373676,-6.949343,4.955815,9.790509,1.534726,-4.422200,-4.235235,8.442225,-5.313170,5.124264,7.757960,3.849774,-0.106257,-7.986009,-4.977926,-6.845844,5.810321,-5.998338,-3.913892,-8.339403,2.637501,7.197536,2.492849,-0.715148,-3.022007,-9.465291,-1.771451,-8.229208,-3.961782,0.935804,-9.378567,5.048034,-3.081027,-9.224662,-4.800520,-1.351697,1.772042,1.573417,-5.241045,8.645578,9.024961,4.300987,8.584036,9.786399,-9.789529,-0.199313,-6.669317,-6.744878,8.219591,9.942638,4.984048,3.891371,-4.228614,-8.375901,-6.602194,2.223919,3.764244,-8.375976,6.464276,-1.313827,-9.414981,-1.780483,1.671994,7.242198,1.228414,-3.957775,2.429879,5.421031,-0.913938,-5.574479,2.133731,5.380073,-4.125341,1.265208,7.761090,5.343284,-3.972918,-6.768360,-9.950987,-4.301516,5.150059,9.505684,-5.770010,-2.766087,-5.429004,-7.882441,-3.159049,-7.158697,4.046315,-5.522475,2.917107,-6.215386,4.781247,1.805960,-4.004075,6.888249,-2.720829,-1.041407,-2.163849,-7.590339,-0.145252,-3.274314,-6.247649,3.263116,9.964578,-1.562683,-3.021966,-9.824225,5.619455,3.511678,-8.217599,1.156648,9.809161,9.573699,-5.089920,-1.134768,-8.712128,-3.089319,3.592787,-2.193544,6.348180,-0.889867,8.317641,-6.896715,-4.746090,5.528585,-7.981388,-0.189069,-5.671549,4.848905,6.344277,9.507099,7.205985,-8.048862,-5.913420,0.694425,1.990743,0.682966,-6.173405,0.855046,2.586366,7.331416,-7.320706,-6.203618,-1.745171,6.553608,1.701486,9.553113,-0.467968,-2.388702,5.146429,2.600574,5.076872,5.090496,-8.328378,-7.519739,9.392494,8.058891,5.398382,1.684092,-0.173587,3.493714,9.628643,-6.747482,-1.729585,-4.385183,-3.431190,-1.544436,-7.696719,2.418099,7.128512,4.763584,-0.347384,-4.774493,-2.134142,0.680976,-0.677541,-1.859412,0.853822,-2.794688,6.772313,9.952457,-1.779840,8.921326,-4.761846,6.744939,1.372095,-0.760900,8.505388,1.215400,-5.506635,-2.903808,-9.717230,9.196097,5.693399,3.853565,-6.559096,-6.281007,1.077987,-0.041187,4.064070,0.708871,-9.893721,-6.992746,-6.184731,5.128389,-3.168446,3.852590,-8.906748,-5.611950,-8.804835,4.016441,7.138233,5.277847,3.186354,-6.297099,9.826938,5.178613,4.520769,-1.776984,-8.835051,2.051176,6.301012,9.268409,3.087564,-5.084626,3.230401,-7.055255,2.836842,2.902908,1.948254,2.772920,3.916267,-3.508169,-5.986996,-6.509093,-0.256299,4.931070,9.845970,-4.707950,0.454976,-3.772375,-1.516943,7.774965,9.824399,-3.282080,-7.569134,0.663864,0.627884,-4.589065,-7.122392,-2.118713,-9.062946,4.377884,-3.651969,-7.700327,-4.566307,-4.671788,-1.973791,-2.162068,3.605915,-6.840200,1.948298,3.260539,-1.876734,-9.268580,1.909069,8.975137,2.781111,4.422128,-5.622708,9.099148,-1.431452,8.425912,0.375637,-3.692501,3.076832,-1.227051,5.102754,5.480984,9.678780,-4.074974,-0.205069,8.314044,-9.890181,6.182599,-3.387677,9.853565,-6.729055,0.801532,9.681130,-3.416502,4.868997,4.558567,0.340216,-4.009702,-7.435102,4.411994,-0.851828,-3.828298,8.902982,-2.385098,-6.872753,-0.972903,-8.157148,-5.103437,-0.671238,-6.920618,2.556860,-5.105116,-9.671821,-4.428097,0.921456,5.540091,-3.368819,3.826026,7.592269,8.480301,3.005504,8.185547,-8.455670,2.488048,-4.924923,-6.972571,9.540285,-3.581523,9.252823,6.624229,-8.075075,-7.562689,-5.828371,-5.336938,7.883939,-4.015328,-6.976973,3.139957,9.774262,9.127130,-0.139706,-1.185398,-8.222336,-7.844462,9.636192,-3.954213,-0.542260,-7.399696,-2.811101,5.040428,-6.590813,5.210697,4.835736,3.707881,8.369953,-7.750128,-0.043656,-8.416381,-7.439368,-7.284998,-2.452286,7.582615,-7.023421,7.024862,5.631076,-5.260757,-0.652489,-9.591607,-5.691057,7.879413,-8.911429,-0.538329,-1.967445,9.525665,2.692155,-7.788692,-9.180778,-3.012729,9.566810,-8.391550,-5.947205,-0.426662,-9.757960,-5.551172,0.106454,-9.826717,-8.522661,-0.107820,0.908406,5.839011,-2.047707,-9.862476,9.079879,8.033588,6.082538,9.239514,-2.413482,-1.346486,-7.290696,-4.778901,-3.394640,1.281226,9.193178,9.754179,2.420223,5.875446,-7.339715,5.136089,-7.617911,-8.297749,-3.065216,-9.181333,-8.074571,8.916507,1.024972,-5.184823,-0.649038,-7.750944,1.715752,5.913807,-5.027053,-1.668067,-3.242045,8.142481,-5.925277,-1.849248,5.219842,-2.840319,-1.219536,9.090418,9.294882,2.011979,7.129891,8.110055,-2.022744,-0.892156,7.961117,0.655343,-2.920908,-5.051661,9.924230,0.529091,3.824459,-8.783695,3.851962,-0.545295,8.515063,-3.095072,1.600740,9.300189,-0.498746,7.202440,8.411890,-5.735963,7.703197,-0.711437,1.969160,6.744675,6.994393,-3.197022,4.228970,2.429829,0.947289,-2.859100,4.001524,-2.559793,1.463576,9.339183,-0.219671,-1.631135,5.177258,-1.562823,-2.267421,4.694228,2.215630,-7.608214,-1.273163,0.479277,8.585185,5.926314,-8.552933,3.711324,4.508234,-3.198791,-1.347703,6.223106,1.379538,-2.951669,8.337209,-8.815925,-4.910593,-3.228041,-4.068240,-5.254626,3.927305,6.029687,1.076434,7.340547,1.908244,-3.607664,-7.569138,2.644716,-3.071297,8.055191,-0.062491,-9.213528,-4.362087,0.636516,3.356125,-4.838461,4.516034,-2.027778,-1.532788,9.592272,3.772315,3.722392,6.284219,1.861837,5.992917,-9.497136,-2.804187,-1.971338,9.794690,-6.691574,0.233138,4.300010,-4.874350,6.652654,6.016997,-8.026891,-2.444774,-5.204572,4.805786,1.375393,-8.251833,-9.843661,5.521813,1.769234,-2.300632,0.586540,-0.394153,6.304319,-8.703543,-6.264370,7.197045,-8.619180,-0.405007,-1.066525,-4.869303,-4.787365,8.416973,-4.095665,1.426222,8.068704,0.691328,8.623976,3.689640,-7.695547,7.926584,9.148302,2.524924,0.315686,-4.299937,6.807405,2.391190,4.132016,-3.155513,7.144020,7.976926,-1.564442,0.371567,-8.219710,-2.822225,-7.275051,3.008928,-1.323898,0.996507,1.996428,2.103958,0.548502,-9.735302,0.165780,-3.173858,2.563581,9.370433,-7.102871,8.610644,6.786779,2.280483,-7.264085,8.093735,5.705536,-8.956017,-2.248995,-4.521133,-2.748155,-8.562399,6.686531,7.544049,-1.114361,-8.151851,7.773308,-0.584506,5.535103,2.688721,-0.703247,6.551592,0.058427,-5.110241,9.890813,7.290404,-3.613796,-1.631344,-9.045851,-0.374412,-3.183474,8.839563,-2.590347,6.614116,7.568804,3.738950,7.688404,-8.027487,-1.070428,3.525179,9.809935,-9.416315,-0.322776,8.151587,-2.449053,-5.787805,8.688973,-2.011763,0.456526,8.274779,-4.704892,-8.308946,4.633693,4.557102,-0.493015,-5.875693,6.875551,8.608574,8.542680,8.082276,-6.850806,-6.248061,6.959633,7.793185,-0.317940,-0.301443,-9.755985,6.597527,9.399488,0.681890,0.191996,3.425806,-0.156786,-0.426599,3.095247,6.681688,5.903682,8.259545,0.099929,2.071002,-2.682059,-0.840047,4.169968,-0.959084,-1.318817,-6.508822,1.249326,3.763204,-3.802717,3.949261,6.584712,7.784933,7.356419,0.669985,2.502935,-0.689510,-5.492745,-2.473287,-5.806106,-9.955766,7.141553,-7.035362,-2.125669,-0.341421,-4.870486,9.223283,8.461796,-0.825773,5.342871,2.569367,2.485571,-4.645361,-8.530077,5.499110,-7.691064,-5.591217,-9.432646,-0.337224,-8.318665,4.249218,8.670196,-0.809066,6.940537,8.481718,-7.572702,4.976153,-6.779375,-2.063009,0.368288,-1.102664,4.425382,1.249483,5.191140,4.252706,-7.817485,-9.832599,5.783567,-6.320872,-9.776945,6.834248,-8.349912,-5.132853,0.919786,-0.288932,-4.194784,-1.763634,6.391501,4.410595,1.363654,-0.479730,6.829887,0.658217,3.969364,3.276650,2.324371,-5.441742,0.034997,7.037478,0.635381,0.527682,-2.270839,-2.884139,5.694836,-4.690968,-8.562872,1.462943,-3.353444,-9.744914,-0.405015,7.850298,-3.130749,-9.242771,-4.988665,-5.282309,0.596004,0.437772,9.175064,0.396842,2.559328,-5.250890,-5.661461,3.946592,-5.142058,-0.777605,4.586479,2.247603,5.110885,7.245551,7.221607,-5.628908,-5.165377,-4.348979,9.004811,-6.792748,1.590235,-3.712744,-5.255297,-3.614207,3.353494,-9.177912,-5.846309,-4.355302,9.002022,6.963298,-7.483017,0.045898,2.653664,-6.691450,1.358577,4.827761,4.385485,-5.974761,1.439183,3.093543,8.766738,5.178317,7.803796,5.671374,-6.395350,9.889465,-7.833315,5.396049,-9.040148,-6.695481,-2.038597,-0.318324,4.656067,-8.464367,-7.727653,3.987939,8.727725,3.805683,9.232956,1.083224,-6.678643,-5.560325,6.473522,-5.797635,5.755892,9.022711,6.950356,-4.024278,-1.218777,3.216682,-5.014119,-0.614712,-8.924069,-1.679121,-2.741476,6.536366,-8.988458,-6.870054,4.862974,2.242208,0.942942,-9.493939,-9.364574,-0.678973,8.242867,0.142534,-8.259570,3.373891,-6.728163,-4.496342,7.085307,3.103216,4.594894,9.794535,-3.524089,-9.249003,8.539283,-4.020997,7.458327,-2.008318,7.830240,-8.551375,9.519453,-5.354119,1.547484,4.288462,-7.014992,-2.691320,-7.488003,-6.677621,-5.677714,-5.400180,9.748425,0.376579,8.902537,-8.072905,-0.547035,4.989985,-4.650110,7.306027,-9.940582,3.350120,5.129576,8.349360,2.846131,-3.222867,-6.968018,-7.002149,-2.693304,-7.074032,6.311517,-7.970122,6.917529,-2.341327,7.399681,1.136560,-4.528593,-3.821664,-7.671692,8.138905,8.157713,9.367931,-8.862290,8.582721,7.905274,5.103423,-6.224641,-3.121595,1.696438,-6.531906,-1.629389,-9.155576,-8.680614,-4.524372,-8.657590,-7.972057,-7.885804,3.828300,8.804620,9.842773,-3.798385,-1.845148,-4.246050,-2.327087,7.566147,-4.884887,-1.080814,-4.036812,2.748854,5.928263,-5.579554,8.843186,3.001135,6.835666,1.026558,-8.122702,5.650285,0.162739,4.217425,5.593309,-2.983157,7.754615,8.902254,1.893203,-0.126576,-9.009189,-3.322196,9.906180,6.476945,4.827924,6.717824,-7.986941,-3.871947,-0.078598,-4.188363,-2.339627,5.271229,8.955472,4.582669,3.634299,-8.306006,-1.064777,5.937921,-5.824735,-2.916740,-3.637713,1.377056,0.788362,-6.303602,-6.460069,4.987404,2.382598,-1.464993,7.232362,4.328374,8.588686,5.083137,-0.996777,-9.467754,3.563904,-6.321486,-3.753833,-2.257873,7.975725,-2.803272,9.269603,-1.878450,-7.203581,-4.866863,-1.460841,6.756529,6.327679,3.609107,3.783443,-7.481415,9.784003,-1.280461,4.148904,3.788252,2.819283,-2.559517,6.159346,7.535099,3.241887,-4.612893,4.283364,4.024761,-5.937716,9.870951,-5.898598,-7.617276,-4.976201,-0.774244,4.366019,0.126462,4.560483,-1.737106,-4.011021,-3.383956,9.360217,-5.596316,-2.715461,9.524793,-6.502658,6.960744,-5.438338,-6.683180,-3.930348,-2.422522,-4.469629,6.476965,0.191141,0.447459,7.746926,7.619428,-7.974687,-8.534016,-0.760503,7.839349,-5.554834,4.523118,-4.841224,1.059784,-9.290294,-3.286716,5.760926,-6.407857,7.215450,8.266977,-4.516057,7.101749,-2.051236,5.443902,2.236403,2.512869,6.029227,1.664605,5.338900,2.030761,-4.096559,-9.041705,4.276319,8.656595,-7.604295,2.435152,1.511165,1.200936,-1.797827,-2.259175,2.255228,1.703711,3.717396,-3.037967,-7.994500,-3.709184,-6.833966,-1.830344,-6.678397,-6.800386,-4.551780,4.220557,4.749203,9.103710,7.159567,5.630109,-8.172873,-2.880280,4.172203,-3.015211,-2.324151,6.987948,9.213846,-3.856054,1.165880,0.220768,-4.927634,6.187114,1.027160,-1.663382,8.060048,-0.811276,-8.889974,2.083714,7.006655,2.036408,-9.028642,-8.110947,5.005638,9.080204,-5.984064,-6.059471,1.110748,-5.869414,6.310510,-5.012768,-8.811833,-7.208090,0.033678,6.610320,4.164427,-7.338359,8.649540,9.120474,2.182905,2.082641,1.813311,-2.861345,2.586155,-9.466452,7.116902,5.775894,6.900848,4.679944,1.889849,9.841880,6.804761,9.995358,6.161316,1.211501,9.066641,-2.826069,5.929677,-1.737024,5.241716,2.056261,4.248217,-2.774870,-2.429338,2.082981,-1.969568,-9.117683,-9.148947,-6.761609,-6.625969,-1.140709,-5.851593,6.635042,6.022760,1.113818,-5.860590,-4.580492,7.033305,-0.605002,-0.333706,-7.796969,-8.518915,-2.881537,-1.069588,-0.126326,0.238028,-4.981270,8.697235,8.826057,2.564740,2.188903,9.765587,3.616653,6.960654,-4.051552,7.686968,-4.097732,3.131317,-4.009626,-9.687523,-8.006047,5.898250,5.435937,-3.566495,-9.370721,2.314166,1.460854,9.812729,-3.914449,-4.372242,-8.348291,8.404660,-9.484294,8.418466,-6.094490,9.915805,4.707513,6.361483,-3.669772,5.865086,-6.928435,-3.667774,6.596939,-9.778857,-2.689053,-6.716655,0.447262,-0.398973,-7.419213,-4.662210,4.940476,-1.442486,8.587214,1.270690,8.493628,-8.380304,-0.092403,-2.078105,-6.152487,8.555723,5.718953,2.030459,3.465967,-4.345398,7.390554,-0.414175,7.655678,-8.455061,-6.470451,-3.400509,-9.437487,9.185816,0.870649,3.129723,4.904607,7.751822,-6.124430,3.305733,-3.826905,-9.120010,-6.017499,-2.647214,5.798771,-9.165712,-4.758258,2.314080,2.846006,8.968506,-1.896566,-2.044857,0.479460,0.784115,-5.334566,6.225319,-7.726807,8.317202,-0.095607,-2.744860,-6.455210,-5.733031,5.774538,2.291193,-8.020770,-7.815774,9.451448,-6.508535,-6.032365,6.213883,-9.867616,0.982499,-8.610082,-0.775129,-2.378872,-5.948865,7.176285,1.904624,-7.389087,-8.277778,-7.752385,-6.986616,1.653938,-6.327570,-1.642081,6.429397,4.543210,5.753872,8.873877,-3.998231,2.317352,-3.332335,4.657268,2.495015,-1.785595,0.236777,-8.272339,6.644008,-2.643151,4.457746,8.370491,-4.013210,2.042525,-2.543209,6.417106,-2.311740,6.383780,1.557027,5.199722,-6.307098,-0.224172,-0.195972,4.460642,4.954195,2.413513,-8.876641,3.868472], dtype = "float64")#candidate|14348|(1600,)|const|float64
const_14349 = relay.const([7.559022,3.059759,6.172046,-0.345478,2.434235,2.166687,4.713049,3.955731,2.817414,2.936198,6.714937,2.439985,1.169750,-5.854831,-5.267817,-2.257118,-7.309748,6.720290,-7.634829,-0.708421,6.402848,-0.635502,-6.085409,-6.552978,-3.316232,-3.975793,3.247557,-7.218506,-6.378503,3.416707,-2.115620,-2.542222,8.127046,-1.346451,9.947058,-9.254225,-4.413928,1.222251,-6.196106,-7.491154,-0.541245,-6.823672,9.404435,-7.944767,5.137520,-4.117809,-5.861068,-0.774151,-5.986217,7.716495,-5.322695,6.719141,-3.608312,9.060335,-1.600714,-4.991524,-5.456993,-4.494184,1.413874,9.361464,2.644434,-5.865923,-7.670696,8.014621,5.941555,-3.466378,-8.088168,-8.199851,-5.032323,-6.809832,-3.676557,1.467028,5.729440,-5.388614,9.687925,-8.953565,6.900263,-9.845631,6.220954,-5.505099,-0.024042,-0.259532,-2.432084,-0.542688,-1.400941,-8.666248,4.036840,4.169211,1.373152,4.910216,4.108366,4.922186,-4.515619,-0.364120,-9.822333,-8.056833,0.381847,2.531246], dtype = "float32")#candidate|14349|(98,)|const|float32
const_14350 = relay.const([-2,5,9,2,-6,-3,-10,9,5,-10,-7,-6,2,-1,10,6,1,3,-7,4,-6,8,-5,-3,-2,-1,-10,9,3,-6,-1,6,6,-4,4,6,6,-5,-2,3,3,-4,-3,4,-2,10,5,-7,-7,3,10,3,-5,7,7,1,6,-3,-10,-4,7,10,-1,-2,8,2,-9,4,-5,1,-10,2,-2,4,3,-6,1,-2,-3,-3,-4,-10,1,-4,4,-8,10,2,-6,3,4,2,5,8,-2,10,-5,6,-6,-10,-10,7,-10,-1,7,8,5,-7,-3,10,-5,1,3,-7,10,9,8,9,9,2,5,-7,9,-1,-10,-10,-3,6,10,5,1,-9,2,-4,-9,-6,8,5,7,4,8,2,-6,-7,10,-4,8,9,-3,-10,1,9,9,-1,-1,-4,8,4,2,8,-5,-4,-8,-2,8,-5,10,-2,-7,7,-7,-1,-5,-9,-6,1,-3,-4,-2,4,-10,2,-3,1,7,-2,-9,9,7,10,-7,5,-10,3,-7,3,-5,9,7,-2,8,-9,6,-10,10,-8,-5,-8,-4,-6,-5,-8,3,-2,7,-7,7,-3,-5,-6,5,3,7,-4,10,1,10,-10,9,3,6,-5,7,-6,1,9,-7,5,-4,6,10,1,-9,2,3,-5,5,-3,-8,-7,2,6,-8,3,9,-6,-7,8,8,-3,5,-1,8,5,3,-4,7,2,10,-7,-5,7,-10,7,4,10,-9,-10,-4,-2,6,-2,5,-8,1,5,8,7,6,-5,-5,-2,5,3,8,8,3,-8,-6,-5,-4,3,2,-2,-6,-1,-2,-7,-4,6,-6,-5,-4,7,-1,-9,1,-9,-3,-3,5,-2,-6,6,7,-1,6,-2,-3,4,-1,9,6,7,8,-10,2,2,1,10,-9,1,-9,8,1,-5,5,-6,-3,-2,-1,-6,4,-2,7,3,3,1,-8,-5,1,3,8,-8,-2,-4,3,-9,9,2,-3,1,-2,1,3,10,8,1,7,-8,10,-4,-3,9,-4,7,-7,-7,-1,8,-4,8,-6,-1,8,1,-1,-8,8,6,10,3,-2,-6,-7,-8,7,-7,5,-5,7,-1,-1,-3,-8,-4,4,6,8,-10,-8,-9,4,-5,4,-4,-6,-7,5,9,-1,-4,2,1,-1,4,1,4,9,-4,1,-2,-2,5,1,3,-9,-8,-4,-1,-2,-6,-8,6,-10,-8,8,-10,-1,10,-1,5,-7,-2,-2,7,8,4,-4,1,3,-6,9,3,-3,1,5,5,-9,-4,10,4,9,-1,-10,-8,2,-4,-2,-1,2,-8,-10,-1,-1,-9,-10,-10,10,-1,-6,3,-3,-8,-6,7,-5,-4,-9,3,2,3,-6,9,4,6,9,7,6,4,-6,-1,7,5,2,7,1,-6,-3,-3,-6,-7,8,-4,9,8,2,-8,9,-6,3,-5,-3,3,7,-3,7,-8,1,-1,2,10,1,3,-3,-10,-2,5,7,1,4,-9,-3,-5,-8,7,-6,-4,-6,6,5,8,-1,3,10,4,-8,-4,9,-5,6,9,-10,-10,7,8,1,9,8,2,6,2,10,-2,9,-7,1,8,8,-8,1,-9,1,-4,10,6,3,-7,-8,-1,-8,2,6,-1,-8,-1,4,-3,8,5,-5,-3,3,-1,-10,-7,-3,-8,-1,-5,-7,-7,-6,7,8,-1,4,-1,-3,7,-7,2,5,10,8,-4,2,9,2,2,-9,-4,9,2,-10,-7,-5,-6,10,6,-1,-4,-2,1,-10,-3,-9,2,4,2,-2,10,10,10,4,-6,8,10,-5,-3,5,4,5,-4,1,-5,-4,2,3,-2,8,3,-9,6,-5,9,-7,6,8,-2,-5,-1,2,-1,-5,-3,2,-9,-9,7,5,6,10,7,1,6,-8,2,-2,6,-9,-10,-5,4,-5,-7,-8,6,6,-5,-5,-10,-1,1,-9,-1,-6,-9,-2,-2,-7,-9,6,2,-1,7,-1,-6,-1,-6,-4,9,7,-10,3,8,-2,3,-2,-8,-6,-6,-3,-7,-1,-5,9,-4,9,7,-7,10,-2,7,-1,-7,-3,-4,-9,-9,6,-5,5,3,-5,-8,5,-2,-4,-3,6,-2,4,3,6,4,-7,7,8,8,2,4,5,-6,-4,1,-8,-1,10,-6,8,-10,-6,-9,-9,-6,2,-8,-5,-3,1,1,1,-4,5,-7,9,-8,-4,-1,-3,-4,8,-3,8,2,-3,1,-4,-3,4,-2,7,9,-8,-4,9,7,2,2,7,1,8,4,-6,1,-6,2], dtype = "int8")#candidate|14350|(858,)|const|int8
var_14351 = relay.var("var_14351", dtype = "bool", shape = (792,))#candidate|14351|(792,)|var|bool
const_14352 = relay.const([[-7.768906,-9.132774,4.498949,-7.556529,-1.064188,-0.365143,-5.452210,-5.219818,-5.646001],[-9.616601,-9.989211,6.629908,-5.629576,-6.900927,7.130057,6.633611,-3.271207,1.946317],[-5.812564,-6.454970,3.698902,-1.979879,0.240109,7.192663,-7.476096,-0.259683,4.630907],[-4.144139,-6.383308,-0.633732,5.141681,4.302970,0.023670,6.360361,-6.887920,2.836104],[-0.380761,7.351954,-7.081189,-5.785112,-9.950456,4.850158,-5.908247,-9.989702,-5.449383],[-1.248421,-5.075271,-7.085012,-8.186761,-5.047552,0.784246,8.186642,4.760996,-5.623394],[4.869059,-6.142250,0.382439,2.411655,4.849972,5.335047,-2.216072,7.310522,4.764484],[-7.035341,-5.397162,8.388722,-0.102295,8.620732,2.265159,8.093228,-7.868121,5.346745],[-3.420820,5.779320,-8.744814,7.541758,7.447639,5.109183,-7.278993,-3.067384,-3.054450],[5.893376,-1.066769,-2.527160,-1.975151,-1.848857,0.332995,-7.804597,-9.196794,0.609071],[-2.272506,7.489927,-8.395942,7.079516,6.729673,6.434400,2.171198,-2.427387,0.095210],[9.164803,9.250103,6.125180,7.658751,-0.047844,6.876575,-4.329392,-3.135348,6.482807],[3.311626,-2.503532,0.232307,-6.373366,-0.561460,-4.231038,-9.373424,0.590184,-7.997451],[-3.863168,-0.735898,6.816480,4.752520,-9.910247,-0.623826,-7.714340,-9.685495,-7.671737],[-3.208202,-3.747964,5.314289,-9.170668,-0.426999,4.101867,-6.772585,3.993108,-0.865403],[9.432520,-6.055009,-2.821496,5.592763,-5.707584,9.122202,8.775531,-5.966147,-4.840667],[4.935229,2.076267,-3.876489,-9.227898,-5.320224,8.932988,-8.550343,-2.058905,-7.219135],[0.121576,8.868821,7.031889,-7.705661,-6.565711,-6.714396,8.380257,-4.434879,-1.291485],[2.521692,3.293668,-7.228041,1.161107,0.569941,7.266955,-0.521006,-0.884871,8.761654],[-0.698679,-8.413314,-0.880846,7.536057,-4.228908,-7.064459,-7.303758,3.241727,1.935971],[-3.321756,6.644826,7.754611,-0.242158,2.121745,8.329654,-8.961276,9.743136,3.417004],[-0.170419,2.624462,-1.699034,4.064077,9.550037,-7.861889,-6.274007,5.937371,9.134769],[-8.603466,-2.224262,-1.824039,-1.462716,9.591931,6.925158,3.425102,7.279817,7.648536],[-4.450180,-3.644029,6.583583,9.042329,-2.052799,4.220936,8.788003,8.436872,-7.747477],[3.905952,-3.764924,-3.999634,6.078602,1.628169,-3.926482,-3.122830,3.167156,-8.175641],[-3.227588,-3.558233,1.389715,-7.482878,-2.572801,-2.056884,0.404331,3.101930,4.617567],[6.577542,-7.040640,5.448166,9.226469,9.659720,9.294237,-7.104656,1.139023,-6.445935],[-6.606384,4.524717,-5.925132,3.728855,-1.134600,4.988508,-6.400777,-3.734302,-8.732213],[4.877136,-8.737981,-4.608110,6.766861,1.553453,-0.401008,6.267292,-1.129531,4.522829],[-9.703770,-6.601957,3.666440,-3.833374,-7.374364,-9.847438,5.070932,9.269922,8.342438],[3.105925,-2.738112,7.528373,-8.176995,5.021371,-6.925515,1.625744,-6.542218,7.253139],[3.995014,1.115674,-2.398203,-7.446034,-5.865856,3.548935,-7.022628,-1.867698,3.400866],[8.369617,-8.841888,-8.897140,5.988147,9.968291,1.271333,7.570315,2.832622,1.068635],[0.103176,1.601277,1.132882,4.001368,8.704465,-0.395725,7.010424,-7.359883,-8.220428],[-4.129524,-5.129987,6.415839,-0.701225,-5.328688,-3.358985,-0.617841,-5.359077,5.778654],[-9.983980,9.107059,-5.419725,0.447761,4.081194,7.977256,-6.994930,9.406446,5.220339],[6.623395,9.513447,3.547608,1.209700,3.247977,8.168740,5.103479,3.484243,5.637744],[-9.806764,-4.164677,-7.784769,2.189865,7.073070,2.078310,-3.583893,2.394466,1.311267],[1.435873,-1.344519,-5.319233,8.058717,6.157841,-5.037974,-5.627721,2.486990,-2.850059],[-9.556602,2.923949,-8.201737,-5.995592,1.858308,-2.973502,4.931416,7.892953,3.768614],[9.143418,3.735847,5.194530,-1.205388,-4.510760,-6.147388,8.846706,-7.889478,1.261197],[-6.536568,8.508772,3.195956,-8.439606,3.543623,-8.054749,8.484543,1.542023,-2.943219],[-2.130037,-9.082045,4.694418,1.151858,5.203362,1.815871,-2.106729,2.077034,3.585276],[8.084662,5.579518,4.664085,8.644654,9.914613,6.703063,-1.656937,-4.753252,-9.944274],[4.735890,3.216484,6.026732,4.640437,-3.747337,-6.236908,8.158461,2.191730,-4.689337],[-8.794013,5.196798,1.379074,-5.030208,-2.714095,-0.492062,-1.493703,-9.170708,5.328884],[-1.226963,9.204974,4.452166,-1.506124,4.462832,7.639388,-0.599156,-2.902772,7.534945],[-1.696155,7.364003,9.859006,9.067304,5.909676,6.582529,6.891274,-1.800808,-2.536257],[-1.883440,-3.291684,-7.619989,-0.827978,-8.658573,-8.255114,-0.847994,5.141955,4.933434],[8.209272,-2.012983,-0.967239,8.095274,2.959192,-6.116508,9.790833,-4.200273,-0.477790],[4.760787,4.462967,9.941387,-5.984296,-1.699727,4.722085,-0.363784,-6.559199,-0.890239],[-6.816605,-2.170732,6.733663,7.254301,-3.541999,-0.286539,-5.151995,0.070457,5.870566],[0.423843,-7.911591,2.202541,3.132499,-0.551187,-0.352316,-4.007048,0.763675,-8.860880],[2.897383,5.364697,9.087401,-0.072098,-0.380559,0.705840,6.416282,3.948251,-2.539971],[2.129246,-6.832085,1.999675,-1.150567,6.818316,9.216304,-5.123378,5.765763,-5.327537],[-1.814901,-0.293714,-5.765296,-8.876508,-9.455703,9.083692,5.213565,-7.530610,-5.690142],[-5.706622,4.281731,-1.366809,-2.512390,0.005892,6.308223,-5.559319,-0.156444,-0.756244],[4.924182,-6.390119,-0.068381,-2.920977,4.134078,3.901852,8.719150,-3.393728,1.964285],[9.044207,-6.100214,4.921313,-8.551850,8.178421,-1.639801,8.172580,-8.108175,6.109639],[3.530276,-5.523839,-8.605675,-7.176473,-7.932492,-8.518545,-4.896782,6.552157,-1.580827],[-0.939554,-5.844559,2.558820,9.429493,-7.806813,2.182403,-1.760116,-3.920353,7.026210],[-8.584785,-0.278556,-0.214593,-0.265548,-3.536068,4.694690,-2.928362,2.762153,6.014406],[6.636061,9.213010,0.882682,5.079936,4.528450,-5.666633,-3.837155,-8.391326,8.461146],[4.905246,0.679799,8.793914,-3.068599,-6.711545,7.895108,-3.511818,-2.574802,-5.192473],[-0.534256,4.789951,2.610121,-4.246525,-5.682601,-7.470922,-1.198304,6.651203,7.775766],[-2.707431,-7.761258,9.112353,4.585098,-1.587395,1.852221,5.272714,-5.857969,2.572733],[-5.956366,4.802247,8.465732,4.703866,0.386416,4.306830,7.412380,-8.643223,6.138964],[9.396272,-0.665812,-6.877347,3.260775,6.445576,7.367170,6.181793,9.793289,-1.885168],[7.306782,-6.921984,9.999420,9.049435,6.903531,-8.152578,-7.472393,4.829853,-6.590513],[-3.470954,8.410674,9.458148,5.288178,5.568488,-0.687458,3.306664,6.425566,-7.823426],[5.421242,1.694141,-9.500223,2.437582,-8.814930,0.079411,2.235129,-6.100391,2.685282],[4.210147,-5.931625,8.413737,-2.495331,-8.875047,-2.317523,-0.411499,5.067263,9.800697],[-5.721726,-3.504435,4.458125,0.079108,2.440646,-7.094207,7.828662,3.483532,-9.563056],[-3.585921,1.921145,-4.840306,-3.165582,-8.223989,-1.183657,4.534170,-3.513105,5.509068],[0.163305,-9.897272,-7.833404,3.140885,-6.000234,-8.795144,-8.504449,-6.359919,6.146900],[2.959692,0.850199,0.672410,5.405329,-2.110887,-0.058098,-9.872264,-1.752534,2.440294],[4.424413,1.085235,3.872593,-3.034528,-2.812264,-1.734152,7.991590,2.086371,1.104138],[-8.304774,2.539080,-8.790900,8.679095,7.929228,-9.563549,-3.415106,-9.900774,2.153511],[8.114669,5.662013,-6.454463,-8.625211,1.014820,7.769032,-7.428500,-3.681745,-3.542632],[-9.537928,1.030380,-0.756420,-6.327154,2.740701,-4.359949,-1.184390,-2.402808,4.774265],[5.122427,-3.584442,-4.305344,4.243634,6.395734,-3.865158,7.917212,7.849021,5.717746],[-5.514374,5.221970,-9.899160,-8.234111,9.681531,-2.996237,-0.219040,-8.626468,-9.004602],[-6.577011,-7.912058,6.110351,5.635700,8.678918,1.309423,-7.551344,-3.559205,7.409360],[6.169481,5.543295,-8.930927,-0.317121,-9.412557,2.211794,2.628137,-0.199160,-5.608128],[-9.129225,-0.346926,-4.630106,-3.772414,8.627177,-1.550848,7.045619,9.993998,1.645124],[-8.132822,-9.330115,-8.521546,-2.198743,0.190416,7.070670,-0.143431,0.769166,6.866058],[5.022296,2.866491,-5.677001,7.885032,5.811291,9.151912,8.803695,-5.790970,-6.972831],[7.056505,-1.524931,8.584203,-1.996522,-8.949746,7.497281,-7.003817,3.488817,6.772859],[4.316778,-1.039117,4.019737,2.423431,2.173817,-8.096825,3.792635,-6.248396,-2.047000],[8.960162,-3.634092,6.257068,-4.835705,-5.709823,3.498034,0.182197,-5.853928,9.150100],[1.050514,-0.019320,8.592665,-8.976491,0.957602,-9.345293,5.342941,-3.462194,1.133068],[6.870992,3.099294,-8.263795,2.021433,-4.442502,0.269743,-9.767748,-8.305756,0.159488],[2.159147,-8.711608,1.884764,5.666124,4.298317,-7.321596,3.125652,-3.345129,1.211295],[3.857487,-5.004804,-1.692018,1.426309,8.954937,-3.176347,7.184831,-5.788770,-7.123928],[8.560924,-2.554212,5.222118,4.145468,-3.046735,-7.462039,-2.930142,1.880020,2.206162],[-5.548017,-7.091825,-7.293725,3.599415,-7.239055,-0.188233,7.298689,-3.278307,-8.193732],[-8.579989,-7.370496,0.438573,-8.701192,-6.894306,-0.261669,8.534856,8.335035,-9.477176],[-8.532328,9.779086,-3.159399,9.541411,5.823121,9.781844,-6.712617,-8.978077,6.684435],[7.939906,8.661158,9.515180,0.376673,7.874802,-4.181884,-3.689723,7.633453,3.407257],[5.338738,8.190069,5.863661,-0.734160,-9.612204,-9.031186,-0.195013,3.373531,-0.364213],[-8.534429,9.894151,-6.395332,6.034565,1.913728,-1.989897,-4.199072,2.694930,0.680462],[8.043796,-6.153220,-7.904932,9.060869,-5.370742,-1.650842,8.733276,-3.738565,-2.678364],[-7.310740,-4.492351,-5.692073,-7.098746,-1.895085,-2.177794,-4.135369,-4.055273,4.986328],[-9.135784,5.836500,2.630354,0.520274,-5.899616,-7.467757,-2.897182,2.056242,-3.462638],[1.658905,-9.335188,-4.792620,6.405683,-4.411998,-6.896732,-7.125444,-2.438776,6.550618],[-4.416697,-8.336831,1.751895,3.798779,7.576150,-4.181051,7.588761,5.026278,1.083999],[-9.350827,-4.659985,-9.533172,1.539686,6.558202,7.177578,0.963127,5.079760,-7.572035],[-0.988084,-6.091163,-3.508071,3.694721,1.105773,-1.098657,2.879170,5.619101,9.254723],[-2.240588,5.934381,5.667072,-5.058585,-3.983618,-3.289278,-8.588440,-2.607362,3.569462],[7.196451,-4.792683,1.663600,-4.348068,-0.233773,-9.046205,3.313613,-9.299475,6.796371],[6.373306,-3.066770,9.476294,3.882450,-2.623302,3.819397,-9.456957,-0.476726,0.448101],[4.009891,-1.772661,4.958528,-6.439209,4.011510,9.768190,-2.970011,4.085619,-0.443168],[4.601789,-2.950984,-2.178068,2.306186,5.828958,9.266092,9.012331,-7.663085,-0.645411],[6.034595,-5.312743,7.866308,6.730721,3.620020,0.504117,6.632317,2.084673,-7.543495],[9.405570,-6.869566,5.083502,8.347000,5.558186,3.138840,-7.277519,-8.096917,0.044962],[-7.200226,8.743951,6.628420,-2.968038,0.298858,3.913778,5.888063,-8.359477,0.759738],[1.327495,-0.632402,-9.282673,3.867675,-8.854303,1.949670,5.088238,-9.122871,5.342701],[3.522313,5.659326,0.478662,-7.927005,9.820247,1.818039,5.913998,-6.202157,6.343246],[3.031033,0.188871,-6.938749,7.125881,-2.228460,-9.397306,-2.925325,9.333034,-6.614054],[-0.637416,3.101843,5.544254,-9.579266,-7.654054,9.863829,6.844962,-5.831464,-4.309978],[2.429036,-7.030093,-2.031932,-3.069321,4.779348,-5.934880,-3.551124,-0.415829,-0.159339],[-8.300145,-1.292737,9.960774,-2.991029,-5.963960,1.623854,7.549599,3.489605,0.340167],[-8.188766,-0.890169,6.381026,-0.867223,2.280449,-5.145409,-3.347655,-7.638629,4.755083],[-1.201784,-8.031150,-5.565734,-5.547882,-6.034685,3.945137,1.126426,6.122801,6.298225],[-7.196807,1.639816,4.999849,1.764966,-8.771787,-8.113888,-4.265633,-7.866832,-6.923932],[-0.723512,-5.946579,-4.305031,-0.692258,-0.643226,6.791982,9.648769,2.090331,3.019720],[-1.343676,-7.404848,-5.455840,-1.441961,-7.025772,3.476216,8.016447,5.165326,-7.248588],[5.384026,0.003576,9.109017,-0.859570,-0.030363,9.385493,-5.328731,-2.623907,-6.434048],[2.814589,0.066281,9.889700,-2.011956,3.382955,8.097381,7.434259,-0.111794,-9.490137],[8.666696,-6.742009,-0.344084,9.257516,7.838475,6.654316,-1.398906,-3.269042,-4.362670],[-0.933325,-4.193856,-7.539388,-0.246847,2.518555,-5.647166,-8.965742,-8.127611,6.777864],[-4.282355,7.371196,4.178919,4.885976,6.152672,5.065863,-2.513357,3.427278,9.535774],[-0.893188,1.738325,9.589183,5.400159,-9.950068,-8.345302,-8.720486,-5.658866,3.335028],[-9.406343,-7.768944,-5.423621,-7.007430,0.349775,-2.403421,3.147175,-7.744072,-9.857737],[6.478083,4.637009,8.710677,2.188355,-0.403010,6.525777,5.351252,4.820437,3.889664],[-0.057340,-2.812781,3.004297,-0.017339,4.676590,-7.398709,-0.574764,3.153586,7.723995],[-8.156155,-8.556783,-9.497990,-2.270882,7.696552,2.017716,0.251234,-6.832334,-1.662575],[-5.395202,9.670481,7.912425,3.135164,1.462780,-3.900562,3.744609,2.611857,7.855684],[4.227419,-2.813221,4.910897,-5.297517,3.550110,-2.126134,-3.550436,-2.338861,-1.501462],[5.102193,-7.996503,-5.818618,8.785806,3.218158,7.284983,6.294657,-6.244584,-0.402446],[0.986350,-1.629529,6.172599,-9.522850,-0.842869,9.782221,2.882620,-9.356732,3.061183],[-7.173653,9.259286,-0.395801,-4.815757,9.988995,4.338031,9.542347,-8.004286,2.531697],[-7.996582,-6.481235,-3.354549,-6.213822,-2.330302,5.329213,0.762528,8.691062,5.160534],[-8.217809,2.411271,-9.871394,3.938921,3.666320,-0.720379,8.637612,9.133205,9.555138],[-8.928256,2.244885,-2.018528,-1.243046,-3.847750,-0.910197,9.560293,8.100867,2.758763],[6.063285,2.429799,-5.841143,5.944245,6.485359,1.325929,9.822912,-4.482888,6.559638],[0.315743,-2.796350,0.301869,-7.756247,8.201236,8.218166,9.678680,3.046833,0.020458],[-3.024206,-2.779732,0.631000,-1.728910,7.425670,6.378059,-2.439054,-3.473205,-1.065378],[3.019180,5.366815,3.598121,1.849261,8.553984,8.238623,0.928571,-2.194861,8.190447],[5.615213,-3.528349,-0.383587,6.905024,-2.279195,-6.519972,6.560921,0.501485,-7.991682],[4.164063,-9.758932,8.931026,-8.573873,1.709961,-9.233253,-3.103100,8.528635,-1.638136],[1.753763,-2.911530,4.281872,-4.591130,-9.700889,8.258259,-0.199743,4.566617,-0.566020],[2.275336,2.164392,2.075482,1.904528,5.717648,-1.854501,3.814390,-5.285643,4.467270],[-2.666999,-2.519639,-5.784482,2.547927,0.034643,0.453372,2.761993,-4.596702,5.337692],[-2.602678,9.630989,3.797928,7.533500,9.627148,-2.614283,-4.373642,1.219391,-4.257596],[-9.372690,-9.945250,-6.978198,8.073766,-7.205801,-6.094986,0.151460,4.792206,-3.251048],[-0.713159,6.792988,2.278550,6.143602,-7.250901,6.889200,-1.745671,-0.057540,8.156043],[-2.805005,4.720932,-6.239170,-3.497598,-7.015349,-5.022284,6.754535,3.763410,0.558337],[-6.066879,-2.255536,1.173337,3.312772,3.010370,-8.965658,-4.483996,-2.963847,-1.493450],[9.631713,-9.891457,-1.956498,1.271737,-4.195621,-8.726555,7.246864,-2.855854,2.283212],[3.812632,4.646422,-2.748438,4.570920,-3.861739,-9.553925,-8.421135,7.206762,-9.604397],[-8.726551,6.867899,-2.290026,-3.378156,5.769227,4.674931,-8.108045,1.446994,5.760998],[0.123889,5.972289,-1.415831,-1.631800,2.632852,-6.735180,0.546787,4.215491,2.746469],[-6.664027,-0.106007,-4.062007,-1.496762,-7.933613,-3.087400,-8.769078,6.562970,3.273063],[5.659975,-2.164127,1.778678,-5.634947,9.906970,-5.533409,7.171329,-5.098574,-6.020354],[9.161731,6.834473,-8.303914,-3.831378,-0.836316,-1.118473,3.216055,0.942545,0.222399],[-6.297331,-8.864581,3.788927,-3.088043,1.549955,-1.458645,4.240758,3.617295,-1.165679],[-3.287380,-1.342190,-7.698023,-3.843177,-3.362053,9.774813,2.437471,-8.323887,-2.796034],[-9.380716,-5.549769,4.432861,0.014701,2.082519,-3.634116,-8.647478,-4.322714,4.516260],[-7.543086,-3.192166,3.384823,-2.661825,-6.953584,-9.507358,-9.628890,3.380534,0.595972],[-3.064302,-4.064231,7.744246,3.090757,9.252678,-7.798987,-3.284663,8.040768,9.618380],[-9.448149,9.755877,-1.005673,7.913772,-6.211372,-0.325663,-1.183598,-9.897173,-0.491413],[6.222428,5.091359,5.238739,0.458111,-8.621486,-5.640517,5.767848,0.666362,7.576431],[0.702006,8.443290,-1.779137,1.229845,-9.197811,8.845818,8.722692,-7.769831,8.019527],[-3.382829,4.770577,1.935792,-1.755831,-4.132777,0.891854,-8.165754,2.558586,-3.543649],[6.633804,-7.019214,3.594747,-3.403014,-1.206818,-2.407549,-5.524497,-8.081470,6.590029],[1.000901,-1.770456,-9.845301,-7.720914,-1.792793,-1.140405,8.227538,-8.039983,7.361397],[1.124330,-0.506921,-8.529971,8.378440,3.543591,-1.180382,-1.237879,3.764227,2.575955],[-8.192133,-9.116280,6.377989,-3.943300,-3.428993,-9.198702,-7.974616,4.321985,7.393191],[9.057353,-1.620537,-5.529935,-4.224476,-7.966473,-9.722732,6.093977,0.460000,3.127802],[-7.197566,7.440436,7.960831,-8.120196,0.255307,-7.434584,1.167532,-1.301843,9.434694],[-5.669526,4.457406,3.544087,-1.334948,-1.837974,-4.136763,4.613534,8.635484,9.969519]], dtype = "float64")#candidate|14352|(182, 9)|const|float64
var_14353 = relay.var("var_14353", dtype = "float32", shape = (624,))#candidate|14353|(624,)|var|float32
call_14347 = relay.TupleGetItem(func_13389_call(relay.reshape(const_14348.astype('float64'), [10, 16, 10]), relay.reshape(const_14349.astype('float32'), [14, 7]), relay.reshape(const_14350.astype('int8'), [858,]), relay.reshape(var_14351.astype('bool'), [792,]), relay.reshape(var_14327.astype('float64'), [240,]), relay.reshape(const_14352.astype('float64'), [1638,]), relay.reshape(var_14353.astype('float32'), [624,]), ), 7)
call_14354 = relay.TupleGetItem(func_13398_call(relay.reshape(const_14348.astype('float64'), [10, 16, 10]), relay.reshape(const_14349.astype('float32'), [14, 7]), relay.reshape(const_14350.astype('int8'), [858,]), relay.reshape(var_14351.astype('bool'), [792,]), relay.reshape(var_14327.astype('float64'), [240,]), relay.reshape(const_14352.astype('float64'), [1638,]), relay.reshape(var_14353.astype('float32'), [624,]), ), 7)
bop_14365 = relay.add(call_14347.astype('uint16'), relay.reshape(var_14351.astype('uint16'), relay.shape_of(call_14347))) # shape=(2, 396)
bop_14368 = relay.add(call_14354.astype('uint16'), relay.reshape(var_14351.astype('uint16'), relay.shape_of(call_14354))) # shape=(2, 396)
output = relay.Tuple([call_14322,call_14326,var_14327,var_14328,const_14329,call_14333,const_14334,const_14348,const_14349,const_14350,const_14352,var_14353,bop_14365,])
output2 = relay.Tuple([call_14323,call_14330,var_14327,var_14328,const_14329,call_14335,const_14334,const_14348,const_14349,const_14350,const_14352,var_14353,bop_14368,])
func_14382 = relay.Function([var_14327,var_14328,var_14351,var_14353,], output)
mod['func_14382'] = func_14382
mod = relay.transform.InferType()(mod)
mutated_mod['func_14382'] = func_14382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14382_call = mutated_mod.get_global_var('func_14382')
var_14384 = relay.var("var_14384", dtype = "int8", shape = (240,))#candidate|14384|(240,)|var|int8
var_14385 = relay.var("var_14385", dtype = "float32", shape = (780,))#candidate|14385|(780,)|var|float32
var_14386 = relay.var("var_14386", dtype = "bool", shape = (792,))#candidate|14386|(792,)|var|bool
var_14387 = relay.var("var_14387", dtype = "float32", shape = (624,))#candidate|14387|(624,)|var|float32
call_14383 = func_14382_call(var_14384,var_14385,var_14386,var_14387,)
output = call_14383
func_14388 = relay.Function([var_14384,var_14385,var_14386,var_14387,], output)
mutated_mod['func_14388'] = func_14388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_14404 = func_14204_call()
call_14405 = func_14204_call()
var_14410 = relay.var("var_14410", dtype = "float64", shape = (4, 1, 4))#candidate|14410|(4, 1, 4)|var|float64
bop_14411 = relay.floor_mod(call_14404.astype('float64'), relay.reshape(var_14410.astype('float64'), relay.shape_of(call_14404))) # shape=(4, 1, 4)
bop_14414 = relay.floor_mod(call_14405.astype('float64'), relay.reshape(var_14410.astype('float64'), relay.shape_of(call_14405))) # shape=(4, 1, 4)
func_4060_call = mod.get_global_var('func_4060')
func_4062_call = mutated_mod.get_global_var('func_4062')
const_14417 = relay.const(-7, dtype = "uint16")#candidate|14417|()|const|uint16
call_14416 = relay.TupleGetItem(func_4060_call(relay.reshape(const_14417.astype('uint16'), [])), 0)
call_14418 = relay.TupleGetItem(func_4062_call(relay.reshape(const_14417.astype('uint16'), [])), 0)
output = relay.Tuple([bop_14411,call_14416,const_14417,])
output2 = relay.Tuple([bop_14414,call_14418,const_14417,])
func_14420 = relay.Function([var_14410,], output)
mod['func_14420'] = func_14420
mod = relay.transform.InferType()(mod)
var_14421 = relay.var("var_14421", dtype = "float64", shape = (4, 1, 4))#candidate|14421|(4, 1, 4)|var|float64
output = func_14420(var_14421)
func_14422 = relay.Function([var_14421], output)
mutated_mod['func_14422'] = func_14422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_14470 = func_14204_call()
call_14471 = func_14204_call()
output = relay.Tuple([call_14470,])
output2 = relay.Tuple([call_14471,])
func_14477 = relay.Function([], output)
mod['func_14477'] = func_14477
mod = relay.transform.InferType()(mod)
output = func_14477()
func_14478 = relay.Function([], output)
mutated_mod['func_14478'] = func_14478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14223_call = mod.get_global_var('func_14223')
func_14224_call = mutated_mod.get_global_var('func_14224')
call_14532 = func_14223_call()
call_14533 = func_14223_call()
output = call_14532
output2 = call_14533
func_14549 = relay.Function([], output)
mod['func_14549'] = func_14549
mod = relay.transform.InferType()(mod)
output = func_14549()
func_14550 = relay.Function([], output)
mutated_mod['func_14550'] = func_14550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_14602 = func_14204_call()
call_14603 = func_14204_call()
output = call_14602
output2 = call_14603
func_14613 = relay.Function([], output)
mod['func_14613'] = func_14613
mod = relay.transform.InferType()(mod)
mutated_mod['func_14613'] = func_14613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14613_call = mutated_mod.get_global_var('func_14613')
call_14614 = func_14613_call()
output = call_14614
func_14615 = relay.Function([], output)
mutated_mod['func_14615'] = func_14615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14549_call = mod.get_global_var('func_14549')
func_14550_call = mutated_mod.get_global_var('func_14550')
call_14646 = func_14549_call()
call_14647 = func_14549_call()
output = relay.Tuple([call_14646,])
output2 = relay.Tuple([call_14647,])
func_14652 = relay.Function([], output)
mod['func_14652'] = func_14652
mod = relay.transform.InferType()(mod)
mutated_mod['func_14652'] = func_14652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14652_call = mutated_mod.get_global_var('func_14652')
call_14653 = func_14652_call()
output = call_14653
func_14654 = relay.Function([], output)
mutated_mod['func_14654'] = func_14654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14713 = relay.var("var_14713", dtype = "float64", shape = (1, 5, 3))#candidate|14713|(1, 5, 3)|var|float64
uop_14714 = relay.atanh(var_14713.astype('float64')) # shape=(1, 5, 3)
output = uop_14714
output2 = uop_14714
func_14737 = relay.Function([var_14713,], output)
mod['func_14737'] = func_14737
mod = relay.transform.InferType()(mod)
mutated_mod['func_14737'] = func_14737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14738 = relay.var("var_14738", dtype = "float64", shape = (1, 5, 3))#candidate|14738|(1, 5, 3)|var|float64
func_14737_call = mutated_mod.get_global_var('func_14737')
call_14739 = func_14737_call(var_14738)
output = call_14739
func_14740 = relay.Function([var_14738], output)
mutated_mod['func_14740'] = func_14740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14477_call = mod.get_global_var('func_14477')
func_14478_call = mutated_mod.get_global_var('func_14478')
call_14756 = relay.TupleGetItem(func_14477_call(), 0)
call_14757 = relay.TupleGetItem(func_14478_call(), 0)
func_14613_call = mod.get_global_var('func_14613')
func_14615_call = mutated_mod.get_global_var('func_14615')
call_14762 = func_14613_call()
call_14763 = func_14613_call()
func_8850_call = mod.get_global_var('func_8850')
func_8854_call = mutated_mod.get_global_var('func_8854')
var_14765 = relay.var("var_14765", dtype = "float64", shape = (156,))#candidate|14765|(156,)|var|float64
const_14766 = relay.const(9, dtype = "uint16")#candidate|14766|()|const|uint16
call_14764 = relay.TupleGetItem(func_8850_call(relay.reshape(var_14765.astype('float64'), [4, 13, 3]), relay.reshape(const_14766.astype('uint16'), []), ), 0)
call_14767 = relay.TupleGetItem(func_8854_call(relay.reshape(var_14765.astype('float64'), [4, 13, 3]), relay.reshape(const_14766.astype('uint16'), []), ), 0)
func_865_call = mod.get_global_var('func_865')
func_868_call = mutated_mod.get_global_var('func_868')
var_14769 = relay.var("var_14769", dtype = "int64", shape = (1960,))#candidate|14769|(1960,)|var|int64
call_14768 = relay.TupleGetItem(func_865_call(relay.reshape(var_14769.astype('int64'), [14, 14, 10]), relay.reshape(var_14769.astype('int64'), [14, 14, 10]), ), 0)
call_14770 = relay.TupleGetItem(func_868_call(relay.reshape(var_14769.astype('int64'), [14, 14, 10]), relay.reshape(var_14769.astype('int64'), [14, 14, 10]), ), 0)
output = relay.Tuple([call_14756,call_14762,call_14764,var_14765,const_14766,call_14768,var_14769,])
output2 = relay.Tuple([call_14757,call_14763,call_14767,var_14765,const_14766,call_14770,var_14769,])
func_14773 = relay.Function([var_14765,var_14769,], output)
mod['func_14773'] = func_14773
mod = relay.transform.InferType()(mod)
var_14774 = relay.var("var_14774", dtype = "float64", shape = (156,))#candidate|14774|(156,)|var|float64
var_14775 = relay.var("var_14775", dtype = "int64", shape = (1960,))#candidate|14775|(1960,)|var|int64
output = func_14773(var_14774,var_14775,)
func_14776 = relay.Function([var_14774,var_14775,], output)
mutated_mod['func_14776'] = func_14776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_14789 = func_14204_call()
call_14790 = func_14204_call()
uop_14793 = relay.cosh(call_14789.astype('float64')) # shape=(4, 1, 4)
uop_14795 = relay.cosh(call_14790.astype('float64')) # shape=(4, 1, 4)
uop_14804 = relay.log2(uop_14793.astype('float32')) # shape=(4, 1, 4)
uop_14806 = relay.log2(uop_14795.astype('float32')) # shape=(4, 1, 4)
bop_14810 = relay.logical_or(uop_14793.astype('bool'), relay.reshape(call_14789.astype('bool'), relay.shape_of(uop_14793))) # shape=(4, 1, 4)
bop_14813 = relay.logical_or(uop_14795.astype('bool'), relay.reshape(call_14790.astype('bool'), relay.shape_of(uop_14795))) # shape=(4, 1, 4)
uop_14835 = relay.acos(uop_14804.astype('float32')) # shape=(4, 1, 4)
uop_14837 = relay.acos(uop_14806.astype('float32')) # shape=(4, 1, 4)
func_14477_call = mod.get_global_var('func_14477')
func_14478_call = mutated_mod.get_global_var('func_14478')
call_14842 = relay.TupleGetItem(func_14477_call(), 0)
call_14843 = relay.TupleGetItem(func_14478_call(), 0)
func_1656_call = mod.get_global_var('func_1656')
func_1658_call = mutated_mod.get_global_var('func_1658')
const_14848 = relay.const([[8.751130,-5.069200,5.440403,5.898044],[-9.770801,5.976330,7.973397,5.444927],[6.495387,7.053408,8.797187,7.793632],[-5.942259,-6.301018,5.802615,9.850644],[8.632422,-8.275261,9.605619,9.734450],[-0.942262,-2.579682,6.380766,-4.248033],[0.104971,9.734952,-1.698448,-6.123479],[4.795320,-4.829824,-7.542644,0.285598],[8.744731,-9.231898,-1.007540,6.921645],[9.293824,-2.146498,4.325297,8.192791],[-0.475197,-2.273575,5.293952,-0.621243],[8.637164,8.178713,-1.305194,0.940724],[-7.970544,-6.994399,5.320941,0.659002],[2.960313,5.265065,-0.444977,1.551771],[-4.598536,-3.474725,-5.329960,-2.911619],[0.714655,9.288643,0.331081,0.345405],[1.001451,-0.380832,8.078015,6.275279],[5.505943,-8.723115,4.623195,-3.349678],[1.873100,4.880945,6.316871,9.252920],[-7.120663,-1.994200,3.388458,3.554073],[-2.331304,2.618190,-5.158679,-5.533780],[-8.242704,3.031012,2.211553,0.322808],[-3.994776,-7.987303,-3.888823,-8.692895],[3.288211,-9.804087,1.383153,4.339652],[8.586407,6.559137,3.955170,3.459688],[-7.803100,9.245301,2.159958,-6.193740],[8.994739,8.618929,-4.512359,-0.098306],[4.454550,-3.546432,2.461302,-3.313519],[6.100567,-9.445239,2.793400,-8.414991],[-8.232587,2.971077,-9.268869,-0.559399],[7.814673,2.121506,7.585602,3.639549],[3.083932,2.155115,3.011534,5.843084],[-0.786223,5.478529,-1.043870,8.485861]], dtype = "float64")#candidate|14848|(33, 4)|const|float64
call_14847 = relay.TupleGetItem(func_1656_call(relay.reshape(const_14848.astype('float64'), [11, 4, 3])), 1)
call_14849 = relay.TupleGetItem(func_1658_call(relay.reshape(const_14848.astype('float64'), [11, 4, 3])), 1)
func_5620_call = mod.get_global_var('func_5620')
func_5623_call = mutated_mod.get_global_var('func_5623')
var_14856 = relay.var("var_14856", dtype = "float64", shape = (252,))#candidate|14856|(252,)|var|float64
call_14855 = relay.TupleGetItem(func_5620_call(relay.reshape(var_14856.astype('float64'), [3, 6, 14])), 0)
call_14857 = relay.TupleGetItem(func_5623_call(relay.reshape(var_14856.astype('float64'), [3, 6, 14])), 0)
output = relay.Tuple([bop_14810,uop_14835,call_14842,call_14847,const_14848,call_14855,var_14856,])
output2 = relay.Tuple([bop_14813,uop_14837,call_14843,call_14849,const_14848,call_14857,var_14856,])
func_14858 = relay.Function([var_14856,], output)
mod['func_14858'] = func_14858
mod = relay.transform.InferType()(mod)
mutated_mod['func_14858'] = func_14858
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14859 = relay.var("var_14859", dtype = "float64", shape = (252,))#candidate|14859|(252,)|var|float64
func_14858_call = mutated_mod.get_global_var('func_14858')
call_14860 = func_14858_call(var_14859)
output = call_14860
func_14861 = relay.Function([var_14859], output)
mutated_mod['func_14861'] = func_14861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_15039 = func_14204_call()
call_15040 = func_14204_call()
var_15047 = relay.var("var_15047", dtype = "float64", shape = (4, 10, 4))#candidate|15047|(4, 10, 4)|var|float64
bop_15048 = relay.bitwise_xor(call_15039.astype('uint64'), var_15047.astype('uint64')) # shape=(4, 10, 4)
bop_15051 = relay.bitwise_xor(call_15040.astype('uint64'), var_15047.astype('uint64')) # shape=(4, 10, 4)
func_13772_call = mod.get_global_var('func_13772')
func_13775_call = mutated_mod.get_global_var('func_13775')
var_15059 = relay.var("var_15059", dtype = "float64", shape = (390,))#candidate|15059|(390,)|var|float64
call_15058 = func_13772_call(relay.reshape(var_15059.astype('float64'), [6, 5, 13]), relay.reshape(var_15059.astype('float64'), [6, 5, 13]), )
call_15060 = func_13772_call(relay.reshape(var_15059.astype('float64'), [6, 5, 13]), relay.reshape(var_15059.astype('float64'), [6, 5, 13]), )
bop_15067 = relay.multiply(call_15039.astype('int16'), bop_15048.astype('int16')) # shape=(4, 10, 4)
bop_15070 = relay.multiply(call_15040.astype('int16'), bop_15051.astype('int16')) # shape=(4, 10, 4)
output = relay.Tuple([call_15058,var_15059,bop_15067,])
output2 = relay.Tuple([call_15060,var_15059,bop_15070,])
func_15076 = relay.Function([var_15047,var_15059,], output)
mod['func_15076'] = func_15076
mod = relay.transform.InferType()(mod)
var_15077 = relay.var("var_15077", dtype = "float64", shape = (4, 10, 4))#candidate|15077|(4, 10, 4)|var|float64
var_15078 = relay.var("var_15078", dtype = "float64", shape = (390,))#candidate|15078|(390,)|var|float64
output = func_15076(var_15077,var_15078,)
func_15079 = relay.Function([var_15077,var_15078,], output)
mutated_mod['func_15079'] = func_15079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14549_call = mod.get_global_var('func_14549')
func_14550_call = mutated_mod.get_global_var('func_14550')
call_15089 = func_14549_call()
call_15090 = func_14549_call()
output = call_15089
output2 = call_15090
func_15092 = relay.Function([], output)
mod['func_15092'] = func_15092
mod = relay.transform.InferType()(mod)
mutated_mod['func_15092'] = func_15092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15092_call = mutated_mod.get_global_var('func_15092')
call_15093 = func_15092_call()
output = call_15093
func_15094 = relay.Function([], output)
mutated_mod['func_15094'] = func_15094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14223_call = mod.get_global_var('func_14223')
func_14224_call = mutated_mod.get_global_var('func_14224')
call_15130 = func_14223_call()
call_15131 = func_14223_call()
output = call_15130
output2 = call_15131
func_15153 = relay.Function([], output)
mod['func_15153'] = func_15153
mod = relay.transform.InferType()(mod)
mutated_mod['func_15153'] = func_15153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15153_call = mutated_mod.get_global_var('func_15153')
call_15154 = func_15153_call()
output = call_15154
func_15155 = relay.Function([], output)
mutated_mod['func_15155'] = func_15155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15092_call = mod.get_global_var('func_15092')
func_15094_call = mutated_mod.get_global_var('func_15094')
call_15171 = func_15092_call()
call_15172 = func_15092_call()
func_8309_call = mod.get_global_var('func_8309')
func_8313_call = mutated_mod.get_global_var('func_8313')
var_15176 = relay.var("var_15176", dtype = "int32", shape = ())#candidate|15176|()|var|int32
var_15177 = relay.var("var_15177", dtype = "int32", shape = (195,))#candidate|15177|(195,)|var|int32
call_15175 = func_8309_call(relay.reshape(var_15176.astype('int32'), []), relay.reshape(var_15177.astype('int32'), [15, 13, 1]), )
call_15178 = func_8309_call(relay.reshape(var_15176.astype('int32'), []), relay.reshape(var_15177.astype('int32'), [15, 13, 1]), )
output = relay.Tuple([call_15171,call_15175,var_15176,var_15177,])
output2 = relay.Tuple([call_15172,call_15178,var_15176,var_15177,])
func_15182 = relay.Function([var_15176,var_15177,], output)
mod['func_15182'] = func_15182
mod = relay.transform.InferType()(mod)
mutated_mod['func_15182'] = func_15182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15182_call = mutated_mod.get_global_var('func_15182')
var_15184 = relay.var("var_15184", dtype = "int32", shape = ())#candidate|15184|()|var|int32
var_15185 = relay.var("var_15185", dtype = "int32", shape = (195,))#candidate|15185|(195,)|var|int32
call_15183 = func_15182_call(var_15184,var_15185,)
output = call_15183
func_15186 = relay.Function([var_15184,var_15185,], output)
mutated_mod['func_15186'] = func_15186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14204_call = mod.get_global_var('func_14204')
func_14206_call = mutated_mod.get_global_var('func_14206')
call_15267 = func_14204_call()
call_15268 = func_14204_call()
func_4812_call = mod.get_global_var('func_4812')
func_4815_call = mutated_mod.get_global_var('func_4815')
const_15271 = relay.const([[4.436465,-8.118099,0.234266,-9.021373,-4.813924,-9.092533,7.140674,2.688083,3.968860,2.952117,5.647826,5.094024,-5.047600,-7.053535,-7.303382,-4.364290,-6.422732,-7.574853,9.182584,-4.070398,6.425042,7.697160,-1.701917,8.526827,9.484644,-4.041397,1.300791,4.661366,-9.184456,9.523408,-9.373118,-0.780062,-4.796702,-3.957671,8.310853,0.696671,3.375900,5.546167,1.157227,8.862970,-4.261877,3.069475,-1.063743,8.346845,-8.290078,5.046649,-0.496416,6.023838,6.874509,0.449747,8.342679,2.101879,8.143933,-4.884710,6.915108,1.042903,-1.119846,-7.708081,7.970474,4.581161,-3.270661,-7.424209,2.569057,3.549201,-9.547885,2.996808,2.791439,-9.196046,-6.611804,9.718734,7.902525,7.040836,-0.677292,-2.162205,9.416878,2.771347,-6.269185,1.084341,-9.036058,-1.856383,2.841410,-8.148296,-9.443743,9.418066,1.273647,8.280156,9.743246,-3.827410,-8.797437,0.233469,6.886095,0.250382,8.192969,6.643636,7.206700,-2.562349,6.004403,2.369741,3.558291,-8.721059,3.080032,0.711990,-0.885341,-6.194082,-6.954902,4.402421,7.406565,-0.001516,5.984375,-5.614502,7.491767,9.202540,8.016054,3.596385,8.074611,3.735860,7.556036,1.540212,8.290372,-5.068751,1.004436,6.689410,-4.287658,1.641205,2.125547,-3.789542,-1.258637,5.124604,-7.213729,0.366325,2.416623,-8.918062,2.809923,-2.617105,-6.787256,2.703179,-3.023870,-5.243245,-5.917183,-7.250021,7.026491,-7.916060,-5.227574,3.125355,-0.131030,-6.648683,0.591565,-4.038548,-8.266128,6.400640,7.606142,5.193790,2.012636,-7.600549,8.451119,0.150292,5.487963,1.363688,-0.259484,-4.765156,8.310044,-7.885641,-2.856502,7.996367,2.292945,7.775424,1.601052,7.891129,-9.018245,-3.301030,-5.291888,-5.313491,-7.322427,-1.185738,-6.451012,1.824574,3.294024,-3.765031,4.012321,7.117519,3.220785,6.067143,1.238068,8.441623,4.732880,9.486718,-1.687349,0.593110,7.123965,2.289177,8.127772,6.142143,-1.936740,-4.666931,-9.613788,-4.954987,-3.337290,-4.029549,-8.557273,4.317634,-7.849079,-5.215282,-1.182857,7.203443,4.844336,0.623826,3.451124,0.833815,-6.950592,2.001660,5.133984,-2.942835,-3.885248,3.944557,0.165199,-4.252748,-4.973522,-8.150084,-6.040126,-4.253786,-3.152673,-4.106919,6.698002,5.602125,3.540658,-2.004742,-0.862484,-8.822087,9.336478,-5.325763,-8.817692,-9.864845,9.376690,9.391234,-8.968118,0.684444,2.558150,3.124240,6.711531,2.601944,5.556903,-9.594485,-5.865688,-3.394465,-0.596928,-7.122079,7.016464,1.224099,9.106589,8.504968,4.884361,-1.345754,-3.630755,7.473229,-2.971044,1.005719,-9.112434,-8.562611,-8.409899,-9.894244,6.100376,-0.093396,-5.179451,5.714917,-9.908745,9.807261,4.431269,5.489708,9.048083,8.690263,3.499743,-4.012090,-9.106749,-4.967028,3.044322,-8.232866,-1.185236,-2.408702,-4.298516,-3.179207,-0.868305,-0.530539,-2.594606,2.553643,-9.854610,3.727452,8.795740,6.817259,-7.021512,5.330926,1.124199,-8.814342,-7.325497,-4.619277,-2.539781,7.360067,-8.358491,-6.522805,5.287221,7.449021,2.206908,5.846005,-8.328600,-0.039766,5.276868,-1.251834,9.332815,-8.777796,1.009536,0.507596,4.768065,-6.661788,-9.753453,-9.309335,5.626436,-1.705535,4.555355,2.106305,-2.858934,-0.432917,4.986831,-8.650940,-6.275988,-3.762119,5.212425,8.963346,6.522204,9.360372,4.344454,4.960506,0.263057,3.578498,-3.130078,-2.861592,-2.615815,-4.331528,4.298081,1.356115,5.503178,-7.280067,7.544311,3.269477,4.541616,-7.995407,1.342337,6.581544,5.834812,5.839559,-2.854439,6.726540,-5.157795,-2.806257,-8.095367,5.249341,-6.657603,0.949141,-7.533189,-1.204170,7.272760,-1.872800,-0.960743,8.085322,-8.171366,2.445688,-3.607975,0.538444,-7.515062,-2.857300,8.444085,-3.095081,0.658321,6.952145,0.590995,-3.541116,5.542800,9.604885,-7.937506,4.696728,0.573934,3.602696,8.666933,-8.884796,4.602662,6.593818,9.657862,-5.786068,6.441206,-5.203529,3.153945,3.374409,3.886982,-7.505375,6.278132,-3.136596,6.565578,-8.211890,-0.026693,-6.561689,7.786521,9.547647,-3.678241,-5.006185,4.446757,-7.210934,6.770745,1.720725,-3.015606,-2.568174,-0.790513,-5.331809,8.499920,-6.436638,8.264980,5.948060,-2.372355,3.971023,-0.516167,-6.368360,-4.585932,-3.533171]], dtype = "float64")#candidate|15271|(1, 420)|const|float64
var_15272 = relay.var("var_15272", dtype = "int64", shape = (140, 14))#candidate|15272|(140, 14)|var|int64
call_15270 = relay.TupleGetItem(func_4812_call(relay.reshape(const_15271.astype('float64'), [15, 2, 14]), relay.reshape(var_15272.astype('int64'), [980, 2]), ), 2)
call_15273 = relay.TupleGetItem(func_4815_call(relay.reshape(const_15271.astype('float64'), [15, 2, 14]), relay.reshape(var_15272.astype('int64'), [980, 2]), ), 2)
uop_15276 = relay.cosh(var_15272.astype('float32')) # shape=(140, 14)
func_14652_call = mod.get_global_var('func_14652')
func_14654_call = mutated_mod.get_global_var('func_14654')
call_15278 = relay.TupleGetItem(func_14652_call(), 0)
call_15279 = relay.TupleGetItem(func_14654_call(), 0)
func_7885_call = mod.get_global_var('func_7885')
func_7890_call = mutated_mod.get_global_var('func_7890')
var_15284 = relay.var("var_15284", dtype = "int16", shape = (832,))#candidate|15284|(832,)|var|int16
const_15285 = relay.const([-7,-3,-4,-6,1,5,3,-10,8,9,8,-2,-7,-5,9,2,8,9,-8,-8,3,4,5,-4,-4,10,-1,8,-7,4,-9,-2,-4,1,-7,10,4,-8,9,-2,7,6,4,7,7,7,-8,4,-1,-5,-4,8,10,-9,-10,-2,2,-6,-2,-8,-4,6,4,-5,5,-3,4,8,-7,-3,-7,3,-4,4,2,6,6,10,-2,-7,5,-5,-3,-5,10,-9,-4,6,1,-4,3,9,-4,3,5,2,-2,-1,1,-5,-3,-10,7,4,8,-1,10,2,10,-9,-5,-7,9,2,-5,3,-1,6,8,6,-8,7,-8,1,4,4,-10,-8,10,-10,-9,4,7,10,10,3,4,7,1,-1,-7,-8,-8,7,-6,-3,-10,-7,-7,-4,2,6,-9,7,10,-7,-4,3,1,10,-6,2,-1,5,-5,-6,8,10,-4,7,6,-8,-9,2,2,-7,6,6,-8,7,2,10,-7,5,-7,3,8,-2,4,-5,8,5,-1,5,-2,5,-8,-1,-5,-4,1,-4,1,-6,-3,-3,2,7,7,-7,6,2,-8,9,-1,6,2,-3,-9,10,-9,-3,9,6,-3,6,6,-3,2,10,5,-9,7,8,8,-5,10,-8,9,-6,9,-4,-1,9,-7,1,4,-8,10,6,5,5,-1,-2,-8,-5,-2,2,-5,9,2,3,7,-7,-7,-7,6,8,6,8,-10,-1,-3,6,-3,-10,-2,-1,4,8,-4,-6,8,6,3,9,8,-6,2,8,4,10,-1,-6,2,-8,8,5,-7,-9,-6,4,8,-6,9,-8,10,-10,1,-5,10,1,5,-6,-8,3,-5,1,-6,-6,9,-9,-1,9,6,9,5,-6,6,5,8,2,-4,9,-8,-6], dtype = "uint16")#candidate|15285|(336,)|const|uint16
call_15283 = relay.TupleGetItem(func_7885_call(relay.reshape(var_15284.astype('int16'), [16, 13, 4]), relay.reshape(var_15284.astype('int16'), [16, 13, 4]), relay.reshape(const_15285.astype('uint16'), [336,]), ), 0)
call_15286 = relay.TupleGetItem(func_7890_call(relay.reshape(var_15284.astype('int16'), [16, 13, 4]), relay.reshape(var_15284.astype('int16'), [16, 13, 4]), relay.reshape(const_15285.astype('uint16'), [336,]), ), 0)
uop_15291 = relay.rsqrt(const_15271.astype('float32')) # shape=(1, 420)
const_15295 = relay.constdtype = "float32")#candidate|15295|(140, 14)|const|float32
bop_15296 = relay.mod(uop_15276.astype('float32'), relay.reshape(const_15295.astype('float32'), relay.shape_of(uop_15276))) # shape=(140, 14)
bop_15306 = relay.floor_mod(uop_15291.astype('float32'), relay.reshape(const_15271.astype('float32'), relay.shape_of(uop_15291))) # shape=(1, 420)
func_14477_call = mod.get_global_var('func_14477')
func_14478_call = mutated_mod.get_global_var('func_14478')
call_15316 = relay.TupleGetItem(func_14477_call(), 0)
call_15317 = relay.TupleGetItem(func_14478_call(), 0)
bop_15321 = relay.add(var_15272.astype('int8'), relay.reshape(bop_15296.astype('int8'), relay.shape_of(var_15272))) # shape=(140, 14)
output = relay.Tuple([call_15267,call_15270,call_15278,call_15283,var_15284,const_15285,bop_15306,call_15316,bop_15321,])
output2 = relay.Tuple([call_15268,call_15273,call_15279,call_15286,var_15284,const_15285,bop_15306,call_15317,bop_15321,])
func_15332 = relay.Function([var_15272,var_15284,], output)
mod['func_15332'] = func_15332
mod = relay.transform.InferType()(mod)
var_15333 = relay.var("var_15333", dtype = "int64", shape = (140, 14))#candidate|15333|(140, 14)|var|int64
var_15334 = relay.var("var_15334", dtype = "int16", shape = (832,))#candidate|15334|(832,)|var|int16
output = func_15332(var_15333,var_15334,)
func_15335 = relay.Function([var_15333,var_15334,], output)
mutated_mod['func_15335'] = func_15335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15153_call = mod.get_global_var('func_15153')
func_15155_call = mutated_mod.get_global_var('func_15155')
call_15362 = func_15153_call()
call_15363 = func_15153_call()
func_4060_call = mod.get_global_var('func_4060')
func_4062_call = mutated_mod.get_global_var('func_4062')
const_15413 = relay.const(4, dtype = "uint16")#candidate|15413|()|const|uint16
call_15412 = relay.TupleGetItem(func_4060_call(relay.reshape(const_15413.astype('uint16'), [])), 1)
call_15414 = relay.TupleGetItem(func_4062_call(relay.reshape(const_15413.astype('uint16'), [])), 1)
bop_15416 = relay.bitwise_and(call_15412.astype('uint16'), const_15413.astype('uint16')) # shape=(780,)
bop_15419 = relay.bitwise_and(call_15414.astype('uint16'), const_15413.astype('uint16')) # shape=(780,)
func_13495_call = mod.get_global_var('func_13495')
func_13498_call = mutated_mod.get_global_var('func_13498')
const_15425 = relay.const([[-3.294158,-4.864775,9.380565,6.505921,9.531091,-6.506235,6.297174,-4.330855,8.587657,7.162369,-2.969573,8.520452,0.705786,-3.610784,-9.646537,-6.965848,4.177430,-4.008359,-8.462357,-3.944391,-1.011950,-1.631717,-5.713506,7.981980,5.092344,-3.906264,4.099445,-2.298671,-3.083655,-6.457359,5.690833,1.021404,-1.392845,-2.545925,0.593644,-1.704049,4.227800,7.339615,9.371513,6.545625,9.315036,-5.747565,3.351217,6.231790,4.870452,-0.997302,-3.926016,-8.560232,-9.522198,-1.424203,9.447767,6.522740,6.043345,4.205152,0.377822,9.935120,-4.275918,9.224144,-4.445950,3.499030,0.926661,0.470930,-5.691602,-8.056196,-2.612130,-7.854903,4.161556,-1.646255,4.935285,8.035866,-8.446361,8.821711,-1.256218,-6.556038,-3.896643,-9.673663,-4.543825,4.725732,0.230974,3.011310,-7.124431,-8.678340,7.539037,-5.284608,-8.263024,2.856380,8.569432,0.232225,-0.047414,-5.320901,2.518393,-7.158350,-8.824781,-7.845869,8.307156,4.314539,-7.262432,6.863185,-1.620221,-0.365257,4.041617,5.065970,-2.202415,-4.296681,0.429322,6.294399,7.440010,-9.596789,-9.193736,-7.447797,-5.877393,3.419560,4.854838,-4.574422,9.623315,-8.685511,-0.884399,2.326725,-6.966684,6.671142,-4.010430,-9.395511,-2.730554,-6.134444,-6.650180,-2.815742,-5.217000,6.391745,-9.251445,-3.548391,-9.023356,-7.579349,-7.798658,6.506105,1.145697,-0.056332,-3.311813,-4.162121,8.158786,2.806917],[7.949913,-3.452483,0.345644,0.770659,2.198882,8.054302,-5.285048,0.027830,3.074927,6.813954,4.209784,3.806966,-7.482403,0.967972,-1.314974,6.562547,-6.380965,7.605674,1.077292,-6.293978,-5.562353,-1.284094,9.426538,-3.399918,1.394707,-2.206854,0.468257,-9.086858,8.466530,-3.632750,-2.021091,9.333199,4.899354,-7.235028,5.825762,-2.701623,7.537402,-3.020728,-2.793105,5.045565,-9.651590,-1.260184,5.943430,4.047565,-3.110079,-5.606048,-1.225203,-3.241887,8.161980,-7.829397,3.847813,-4.816860,-8.647856,9.325928,3.217017,-1.056712,-4.579255,-0.136936,8.737697,-2.676135,9.907317,-4.064878,-3.400759,1.956448,0.868161,-6.674454,-9.182388,3.289395,0.243628,4.958530,-3.551862,-6.879793,3.781970,-1.398977,8.563880,-3.639038,-4.497543,-6.287819,9.477103,-9.251040,9.670948,4.158544,7.785821,-3.513009,-9.503428,-7.989119,0.029924,3.457342,4.148347,2.511251,7.744123,0.607822,-6.786348,-5.200678,0.439463,0.203897,-7.104917,9.054721,7.199716,-4.429856,0.973994,-8.003339,-1.232322,6.735228,-6.463013,-1.312948,9.044118,1.418364,4.533468,3.467946,-9.711422,9.261278,-9.389444,-8.021611,9.284654,4.728745,1.862071,4.087404,7.194063,8.363734,-8.501115,9.269937,1.600140,3.653941,1.801596,-1.673062,3.644143,-0.249437,-5.681063,-5.556013,3.603084,-5.485696,9.059024,-4.665502,6.935903,-0.543329,3.949705,1.911049,-0.254815,9.299196],[0.897854,6.317268,-7.396819,-7.541013,9.662525,-8.304778,-1.943876,4.881342,-5.724566,0.852855,-8.375795,3.856259,6.216262,-9.781997,-9.510723,0.287408,8.953248,-8.161774,-4.383502,-9.768738,6.330640,0.694655,-8.237317,-9.990746,-1.128145,-6.162010,4.720060,9.100899,-6.605073,8.135304,6.473853,-8.894465,9.382070,-1.376595,-7.670916,2.890153,6.628633,5.804397,-9.199407,1.893161,0.242965,5.433084,6.753324,-9.452952,-1.858091,-1.415092,-3.823912,0.595465,-2.054276,-8.302007,-9.087139,-8.914288,-5.760743,7.114516,2.722470,6.732609,-0.556361,-6.638492,5.134279,1.072096,-2.482679,-2.293278,0.659835,-7.665728,4.381682,-2.980510,5.948281,-0.758419,-5.355763,-5.344196,-4.203952,0.940676,-1.243425,-3.066326,-0.951131,1.043536,-1.755681,4.257933,8.021398,9.983335,-6.856231,3.900549,-7.539265,9.781028,2.417785,4.368503,-8.528193,9.355450,-2.232538,-0.330989,9.305530,3.247730,1.418677,6.831592,-6.314755,-3.570694,-4.773255,-1.857543,4.986858,-6.463037,2.127752,-1.192258,-6.042616,-2.869618,9.650065,2.015188,8.316313,-0.018324,0.160951,0.651928,-9.436091,0.503120,8.466277,-8.294554,5.297467,-7.189161,-1.230876,-6.196266,-2.254173,4.521082,-1.251155,-0.854368,4.455557,-7.386516,6.786236,-9.729504,4.427792,-9.921220,-1.160347,1.980096,0.775180,-3.641938,-4.546391,-3.201016,-2.783929,0.913976,-1.828835,-5.038042,-2.991991,7.438834],[-1.242607,-1.653508,8.784861,6.439293,6.919226,4.551236,-7.075891,-1.016703,1.151631,8.082280,-3.546717,-5.613711,-6.692038,-0.228918,9.768646,-3.974707,8.208169,-3.816577,-7.681013,-4.214694,-6.964747,-4.859367,-8.178009,-4.796159,-9.678836,3.323323,-7.927134,1.100048,-7.522089,8.914267,2.012238,8.946003,-0.709022,0.277840,6.491047,-0.383960,-6.890171,-4.220758,6.682395,-6.857342,-7.830194,-7.012161,4.399624,-4.449134,9.443960,2.764852,7.854269,-3.248608,-1.451736,-4.768792,7.704023,-0.124366,-4.799009,-5.491232,7.980974,8.915884,-7.426628,-3.592112,6.892601,9.502831,-1.446377,-5.980589,-0.080148,-4.583291,-5.607648,-8.468112,5.599045,9.884556,-7.229817,-5.059743,-3.296291,2.432557,2.155548,-7.934092,-9.238464,-9.640949,6.671891,8.326701,8.474788,-5.772768,-8.230835,8.885725,6.948583,1.308928,2.845524,9.388002,4.721922,-3.959098,-0.798282,-5.186000,1.277542,-3.132381,4.791356,-9.172053,0.518123,-7.374649,6.975305,1.193143,3.103338,-8.698650,-0.520473,-2.430791,9.402038,7.448270,-2.383989,-8.103334,-6.709712,-9.349964,-4.050543,-2.285340,6.436140,-3.572299,-6.023418,-1.683659,-8.628272,-8.953415,-7.998716,9.633887,-4.908556,-0.798914,-5.113035,-7.404253,8.798252,-2.201923,7.989528,1.609395,1.867710,4.787028,6.414302,7.235524,2.094025,1.962116,1.440741,3.300641,0.278072,-9.686182,-1.870079,-3.345604,6.082295,-3.046347],[0.380343,9.983198,1.108710,-2.874410,-8.211673,-1.943575,-6.583758,-5.559595,-0.277911,2.818699,8.557833,5.022560,-7.797147,9.511539,-2.734038,-7.029783,8.543561,6.383216,-0.303223,6.232419,5.653312,-3.735933,1.751676,5.815233,-9.090419,9.641556,-6.860608,-0.056848,-2.508673,-8.097398,6.535849,-0.768395,2.802412,6.520953,-9.377999,-6.419879,-0.895053,8.923551,4.242901,-0.028840,9.188912,6.180606,-9.391551,-6.613555,2.597967,-9.553304,6.667209,2.478883,-2.197301,-9.855039,-0.891022,-4.631026,-8.407962,-9.954055,4.202151,4.379259,5.029262,-8.348051,-4.911406,-9.643197,-7.617725,-0.628356,-0.118726,-4.550678,-7.350951,5.692907,5.981063,-4.620537,6.370649,-7.334117,7.447191,0.077505,-5.825939,-3.144465,-0.411530,0.154302,5.173713,-9.776168,4.996912,-5.052089,5.452811,-5.801457,-4.595713,-1.404308,-1.035631,-0.187509,5.068340,-3.539760,2.892121,-1.188375,7.167418,-5.117907,-6.900040,-9.541168,4.330896,1.643949,-0.690905,-3.579123,-8.239296,-1.195780,3.393661,-7.027838,-4.705013,-3.224086,-0.148089,0.735003,-9.537111,-7.271229,-0.687446,2.123965,-6.152901,4.737314,-9.871999,3.764622,-6.979252,5.215838,-1.770048,-0.022332,-4.423421,-8.473710,-3.974043,8.131389,-8.690585,5.006291,-6.110217,-4.894487,8.995493,-0.690165,8.330940,0.334561,4.431759,5.917972,-5.714036,6.922781,3.845481,1.985808,3.708320,-8.622891,9.406363,0.225885]], dtype = "float32")#candidate|15425|(5, 140)|const|float32
call_15424 = func_13495_call(relay.reshape(const_15425.astype('float32'), [14, 5, 10]))
call_15426 = func_13495_call(relay.reshape(const_15425.astype('float32'), [14, 5, 10]))
uop_15452 = relay.asin(call_15424.astype('float64')) # shape=(14, 5, 10)
uop_15454 = relay.asin(call_15426.astype('float64')) # shape=(14, 5, 10)
func_4060_call = mod.get_global_var('func_4060')
func_4062_call = mutated_mod.get_global_var('func_4062')
call_15458 = relay.TupleGetItem(func_4060_call(relay.reshape(const_15413.astype('uint16'), [])), 1)
call_15459 = relay.TupleGetItem(func_4062_call(relay.reshape(const_15413.astype('uint16'), [])), 1)
uop_15468 = relay.acosh(const_15425.astype('float64')) # shape=(5, 140)
bop_15473 = relay.add(uop_15468.astype('int64'), relay.reshape(call_15424.astype('int64'), relay.shape_of(uop_15468))) # shape=(5, 140)
bop_15476 = relay.add(uop_15468.astype('int64'), relay.reshape(call_15426.astype('int64'), relay.shape_of(uop_15468))) # shape=(5, 140)
output = relay.Tuple([call_15362,bop_15416,uop_15452,call_15458,bop_15473,])
output2 = relay.Tuple([call_15363,bop_15419,uop_15454,call_15459,bop_15476,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3518() -> Tensor[(13, 12, 15), int32] {
  %0 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %1 = %0.0;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 12, 15), float32] */, dtype="int32") /* ty=Tensor[(13, 12, 15), int32] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="int32") /* ty=Tensor[(13, 12, 15), int32] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%4, %5) /* ty=Tensor[(13, 12, 15), int32] */
}

def @func_5143() -> (Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %6 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %11 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %12 = not_equal(%9, %10) /* ty=Tensor[(13, 12, 15), bool] */;
  %13 = @func_4587() /* ty=Tensor[(13, 12, 15), float32] */;
  %14 = %11.0;
  (%12, %13, %14)
}

def @func_7656(%var_7629: float32, %var_7630: Tensor[(3, 8, 11), float32], %var_7642: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) {
  %15 = cast(%var_7642, dtype="int8") /* ty=Tensor[(840), int8] */;
  %16 = reshape(%15, newshape=[420, 2]) /* ty=Tensor[(420, 2), int8] */;
  %17 = @func_4548(%16) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(420, 2), uint64]) */;
  %18 = cast(%var_7629, dtype="float32") /* ty=float32 */;
  %19 = cast(%var_7630, dtype="float32") /* ty=Tensor[(3, 8, 11), float32] */;
  %20 = minimum(%18, %19) /* ty=Tensor[(3, 8, 11), float32] */;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(3, 8, 11), float32] */;
  %22 = log2(%21) /* ty=Tensor[(3, 8, 11), float32] */;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(3, 8, 11), float64] */;
  %24 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %25 = %17.0;
  %26 = log(%23) /* ty=Tensor[(3, 8, 11), float64] */;
  %27 = %24.1;
  (%25, %var_7642, %26, %27)
}

def @func_7393() -> Tensor[(13, 12, 15), float32] {
  %28 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %28.0
}

def @func_8075() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %29 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %32 = reshape(%31, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %33 = @func_1211(%32) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %34 = %33.2;
  %35 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  (%30, %34, %35)
}

def @func_3645(%var_3641: Tensor[(13, 15, 2), float32]) -> Tensor[(13, 15, 2), float32] {
  %36 = cast(%var_3641, dtype="float32") /* ty=Tensor[(13, 15, 2), float32] */;
  exp(%36) /* ty=Tensor[(13, 15, 2), float32] */
}

def @func_8591(%var_8560: float64) -> (Tensor[(13, 12, 15), float32], Tensor[(1, 10, 4), float32], Tensor[(13, 12, 15), float32]) {
  %37 = @func_2780() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %38 = cast(%var_8560, dtype="float64") /* ty=float64 */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 10, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 4), float64] */;
  %40 = floor_divide(%38, %39) /* ty=Tensor[(1, 10, 4), float64] */;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(1, 10, 4), float32] */;
  %42 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %43 = %37.1;
  %44 = asin(%41) /* ty=Tensor[(1, 10, 4), float32] */;
  %45 = %42.1;
  (%43, %44, %45)
}

def @func_7132() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %46 = @func_6884() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %47 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %48 = %46.0;
  %49 = %47.0;
  (%48, %49)
}

def @func_4062() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %50 = @func_3345() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %51 = %50.0;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %53 = reshape(%52, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %54 = @func_1211(%53) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %55 = %54.0;
  (%51, %55)
}

def @func_2884() -> Tensor[(13, 12, 15), float32] {
  @func_2632() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_4849() -> (Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) {
  %56 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %58 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
  %59 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %60 = asinh(%57) /* ty=Tensor[(13, 12, 15), float64] */;
  %61 = %58.0;
  %62 = %59.1;
  (%60, %61, %62)
}

def @func_3007() -> Tensor[(13, 12, 15), float32] {
  @func_1045() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_2278() -> Tensor[(13, 12, 15), float32] {
  @func_1677() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_1111() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %63 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %64 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  (%63, %64)
}

def @func_4587() -> Tensor[(13, 12, 15), float32] {
  @func_3119() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_1977() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) {
  %65 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %67 = cast(%65, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %68 = reshape(%67, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %69 = @func_1342(%68) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %70 = tan(%66) /* ty=Tensor[(13, 12, 15), float64] */;
  %71 = %69.0;
  (%70, %71)
}

def @func_10070(%var_10064: Tensor[(1512), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(1512), float64]) {
  %72 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %73 = cast(%var_10064, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %74 = reshape(%73, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %75 = @func_8491(%74) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(1512), bool]) */;
  %76 = %72.1;
  %77 = %75.3;
  (%76, %77, %var_10064)
}

def @func_2474(%var_2444: Tensor[(13, 12, 15), float32], %var_2455: Tensor[(13, 12, 15), float64]) -> (Tensor[(13, 12, 15), uint64],) {
  %78 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %79 = %78.0;
  %80 = cast(%var_2444, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %84 = power(%82, %83) /* ty=Tensor[(13, 12, 15), float64] */;
  %85 = cast(%var_2455, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %89 = subtract(%87, %88) /* ty=Tensor[(13, 12, 15), uint64] */;
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 12, 15), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%89, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %94 = add(%92, %93) /* ty=Tensor[(13, 12, 15), uint64] */;
  (%94,)
}

def @func_8327(%var_8295: Tensor[(4, 9, 1), uint16], %var_8296: Tensor[(4, 9, 1), uint16], %var_8308: Tensor[(108), float32]) -> (Tensor[(4, 9, ?), uint16], Tensor[(9, 1, 12), float32], Tensor[(108), float32], Tensor[(4, 9, 1), float64]) {
  %95 = cast(%var_8296, dtype="uint16") /* ty=Tensor[(4, 9, 1), uint16] */;
  %96 = shape_of(%var_8295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_8295, dtype="uint16") /* ty=Tensor[(4, 9, 1), uint16] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %99 = cast(%var_8308, dtype="float32") /* ty=Tensor[(108), float32] */;
  %100 = reshape(%99, newshape=[9, 1, 12]) /* ty=Tensor[(9, 1, 12), float32] */;
  %101 = @func_8048(%100) /* ty=(Tensor[(9, 1, 12), float32],) */;
  %102 = cast(%var_8295, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %103 = maximum(%97, %98) /* ty=Tensor[(4, 9, ?), uint16] */;
  %104 = %101.0;
  %105 = acos(%102) /* ty=Tensor[(4, 9, 1), float64] */;
  (%103, %104, %var_8308, %105)
}

def @func_5277() -> Tensor[(13, 12, 15), float32] {
  %106 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
  %106.1
}

def @func_1795(%var_1783: Tensor[(16, 3, 3), int32], %var_1793: Tensor[(1512), float64]) -> (Tensor[(16, 3, 3), int32], Tensor[(14, 9, 12), float64], Tensor[(1512), float64]) {
  %107 = cast(%var_1783, dtype="int32") /* ty=Tensor[(16, 3, 3), int32] */;
  %108 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 3, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 3, 3), int32] */, dtype="int32") /* ty=Tensor[(16, 3, 3), int32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %111 = cast(%var_1793, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %112 = cast(%var_1793, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %113 = reshape(%111, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %114 = reshape(%112, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %115 = @func_800(%113, %114) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
  %116 = add(%109, %110) /* ty=Tensor[(16, 3, 3), int32] */;
  %117 = %115.0;
  (%116, %117, %var_1793)
}

def @func_5720() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) {
  %118 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
  %119 = @func_3590() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %120 = %118.0;
  %121 = %119.1;
  (%120, %121)
}

def @func_8138() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %122 = @func_7759() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %123 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %124 = %122.0;
  %125 = %123.1;
  (%124, %125)
}

def @func_9591(%var_9512: Tensor[(13, 8, 12), float32], %var_9513: Tensor[(13, 8, 12), float32]) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16], int16, Tensor[(13, 12, 15), float32]) {
  %126 = cast(%var_9513, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
  %127 = shape_of(%var_9512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_9512, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %130 = @func_6688() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) */;
  %131 = @func_3345() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %132 = @func_9458() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %133 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %134 = @func_5460() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) */;
  %135 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %136 = reshape(%135, newshape=[]) /* ty=int16 */;
  %137 = @func_7566(%136) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], int16, Tensor[(150), float64]) */;
  %138 = @func_5386() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %139 = mod(%128, %129) /* ty=Tensor[(13, 8, 12), float32] */;
  %140 = %130.0;
  %141 = %131.0;
  %142 = %132.0;
  %143 = %133.0;
  %144 = %134.1;
  %145 = %137.1;
  %146 = %138.0;
  (%139, %140, %141, %142, %143, %144, %145, meta[relay.Constant][5] /* ty=int16 */, %146)
}

def @func_8957() -> (Tensor[(13, 12, 15), int16],) {
  %147 = @func_8732() /* ty=Tensor[(13, 12, 15), int16] */;
  (%147,)
}

def @func_9719(%var_9695: float64, %var_9696: Tensor[(14, 5, 6), float64]) -> (Tensor[(14, 5, 6), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(150), float64]) {
  %148 = cast(%var_9695, dtype="float64") /* ty=float64 */;
  %149 = cast(%var_9696, dtype="float64") /* ty=Tensor[(14, 5, 6), float64] */;
  %150 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %151 = @func_8075() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %152 = cast(%var_9695, dtype="int16") /* ty=int16 */;
  %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %154 = reshape(%152, newshape=[]) /* ty=int16 */;
  %155 = reshape(%153, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %156 = @func_5881(%154, %155) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) */;
  %157 = mod(%148, %149) /* ty=Tensor[(14, 5, 6), float64] */;
  %158 = %150.0;
  %159 = %151.1;
  %160 = %156.5;
  (%157, %158, %159, %160, meta[relay.Constant][6] /* ty=Tensor[(150), float64] */)
}

def @func_2780() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %161 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %162 = %161.1;
  %163 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  (%162, %163)
}

def @func_5733(%var_5723: Tensor[(3, 2, 1), float64], %var_5724: Tensor[(3, 2, 10), float64]) -> Tensor[(3, 2, 10), float64] {
  %164 = cast(%var_5723, dtype="float64") /* ty=Tensor[(3, 2, 1), float64] */;
  %165 = cast(%var_5724, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
  mod(%164, %165) /* ty=Tensor[(3, 2, 10), float64] */
}

def @func_1078() -> (Tensor[(13, 12, 15), float32],) {
  %166 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  (%166,)
}

def @func_1486() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) {
  %167 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %168 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %169 = %168.1;
  %170 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %171 = %170.0;
  %172 = cast(%171, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %173 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%169, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %176 = cast(%169, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %177 = %167.0;
  %178 = less(%174, %175) /* ty=Tensor[(13, 12, 15), bool] */;
  %179 = cosh(%176) /* ty=Tensor[(13, 12, 15), float64] */;
  (%177, %178, %179)
}

def @func_1284(%var_1263: Tensor[(13, 12, 15), float32]) -> Tensor[(13, 12, 15), bool] {
  %180 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %181 = %180.0;
  %182 = cast(%var_1263, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%184, %185) /* ty=Tensor[(13, 12, 15), bool] */
}

def @func_9971() -> Tensor[(13, 12, 15), float32] {
  %186 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %186.0
}

def @func_5881(%var_5831: int16, %var_5833: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) {
  %187 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %188 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
  %189 = @func_5720() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) */;
  %190 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %191 = cast(%var_5831, dtype="int16") /* ty=int16 */;
  %192 = cast(meta[relay.Constant][7] /* ty=Tensor[(216), int16] */, dtype="int16") /* ty=Tensor[(216), int16] */;
  %193 = cast(%var_5833, dtype="float64") /* ty=Tensor[(150), float64] */;
  %194 = reshape(%191, newshape=[]) /* ty=int16 */;
  %195 = reshape(%192, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), int16] */;
  %196 = reshape(%193, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %197 = @func_3193(%194, %195, %196) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) */;
  %198 = %197.5;
  %199 = cast(%198, dtype="int16") /* ty=Tensor[(2, 9, 12), int16] */;
  %200 = cast(%var_5831, dtype="int16") /* ty=int16 */;
  %201 = %187.2;
  %202 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
  %203 = %188.1;
  %204 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
  %205 = %189.1;
  %206 = %190.0;
  %207 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
  %208 = bitwise_xor(%199, %200) /* ty=Tensor[(2, 9, 12), int16] */;
  (%201, %202, %203, meta[relay.Constant][7] /* ty=Tensor[(216), int16] */, %var_5833, %204, %205, %206, %207, %208)
}

def @func_3345() -> (Tensor[(13, 12, 15), float32],) {
  %209 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
  %210 = %209.0;
  (%210,)
}

def @func_4905() -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64]) {
  %211 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %212 = reshape(%211, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %213 = @func_4796(%212) /* ty=(Tensor[(2, 15, 2), uint16],) */;
  %214 = @func_2884() /* ty=Tensor[(13, 12, 15), float32] */;
  %215 = %213.0;
  (%214, %215, meta[relay.Constant][8] /* ty=Tensor[(15, 4), float64] */)
}

def @func_1773() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  %216 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %217 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
  %218 = cast(%217, dtype="int64") /* ty=Tensor[(13, 12, 15), int64] */;
  %219 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%216, dtype="int64") /* ty=Tensor[(13, 12, 15), int64] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %222 = bitwise_or(%220, %221) /* ty=Tensor[(13, 12, 15), int64] */;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %224 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%216, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %227 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %228 = %227.0;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %230 = log2(%229) /* ty=Tensor[(13, 12, 15), float32] */;
  %231 = cast(%230, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %232 = floor_mod(%225, %226) /* ty=Tensor[(13, 12, 15), float64] */;
  %233 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %234 = sigmoid(%231) /* ty=Tensor[(13, 12, 15), float64] */;
  (%232, %233, %234)
}

def @func_5236(%var_5228: Tensor[(130, 4), bool]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(130, 4), float64]) {
  %235 = @func_4626() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %236 = cast(%var_5228, dtype="bool") /* ty=Tensor[(130, 4), bool] */;
  %237 = reshape(%236, newshape=[520]) /* ty=Tensor[(520), bool] */;
  %238 = @func_4202(%237) /* ty=(Tensor[(13, 12, 15), float64], Tensor[(520), bool], Tensor[(8, 5, 13), float32], Tensor[(13, 12, 15), float32], Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64]) */;
  %239 = cast(%var_5228, dtype="float64") /* ty=Tensor[(130, 4), float64] */;
  %240 = %235.1;
  %241 = %238.3;
  %242 = tan(%239) /* ty=Tensor[(130, 4), float64] */;
  (%240, %241, %242)
}

def @func_9187() -> Tensor[(13, 12, 15), int16] {
  %243 = @func_6884() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %243.0
}

def @func_3621() -> Tensor[(13, 12, 15), int16] {
  @func_2247() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_9610() -> (Tensor[(13, 12, 15), float64],) {
  %244 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %245 = %244.2;
  (%245,)
}

def @func_30(%var_19: Tensor[(13, 13, 14), float64]) -> Tensor[(13, 13, 14), float64] {
  %246 = cast(%var_19, dtype="float64") /* ty=Tensor[(13, 13, 14), float64] */;
  atanh(%246) /* ty=Tensor[(13, 13, 14), float64] */
}

def @func_5964() -> (Tensor[(13, 12, 15), float32],) {
  %247 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %248 = %247.1;
  (%248,)
}

def @func_1820() -> (Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) {
  %249 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %250 = cast(meta[relay.Constant][9] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
  %251 = reshape(%250, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
  %252 = @func_540(%251) /* ty=(Tensor[(16, 12, 2), bool],) */;
  %253 = %249.0;
  %254 = %252.0;
  (%253, %254, meta[relay.Constant][9] /* ty=Tensor[(384), bool] */)
}

def @func_3068() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %255 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %256 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %257 = %255.1;
  %258 = %256.0;
  (%257, %258)
}

def @func_1927(%var_1898: Tensor[(7, 8, 15), int8]) -> (Tensor[(7, 8, 15), int8],) {
  %259 = cast(%var_1898, dtype="int8") /* ty=Tensor[(7, 8, 15), int8] */;
  %260 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(7, 8, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 8, 15), int8] */, dtype="int8") /* ty=Tensor[(7, 8, 15), int8] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %263 = right_shift(%261, %262) /* ty=Tensor[(7, 8, 15), int8] */;
  (%263,)
}

def @func_3773() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
  %264 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %266 = reshape(%265, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %267 = @func_1342(%266) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %268 = %267.0;
  (%264, %268)
}

def @func_5184() -> Tensor[(13, 12, 15), int16] {
  %269 = @func_2780() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %269.0
}

def @func_3933(%var_3871: Tensor[(216), uint32], %var_3884: Tensor[(384), bool]) -> (Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) {
  %270 = cast(%var_3871, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %271 = cast(%var_3871, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %272 = reshape(%270, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), uint32] */;
  %273 = reshape(%271, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), uint32] */;
  %274 = @func_2933(%272, %273) /* ty=Tensor[(9, 2, 12), uint32] */;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(9, 2, 12), float64] */;
  %276 = cast(%var_3884, dtype="bool") /* ty=Tensor[(384), bool] */;
  %277 = reshape(%276, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
  %278 = @func_540(%277) /* ty=(Tensor[(16, 12, 2), bool],) */;
  %279 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
  %280 = asin(%275) /* ty=Tensor[(9, 2, 12), float64] */;
  %281 = %278.0;
  %282 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
  (%279, %var_3871, %280, %281, %var_3884, %282)
}

def @func_6111(%var_6052: float64, %var_6053: Tensor[(16, 8, 16), float64]) -> (Tensor[(16, 8, 16), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  %283 = cast(%var_6052, dtype="float64") /* ty=float64 */;
  %284 = cast(%var_6053, dtype="float64") /* ty=Tensor[(16, 8, 16), float64] */;
  %285 = @func_4626() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %286 = @func_5539() /* ty=(Tensor[(13, 12, 15), float64],) */;
  %287 = power(%283, %284) /* ty=Tensor[(16, 8, 16), float64] */;
  %288 = %285.0;
  %289 = %286.0;
  (%287, %288, %289)
}

def @func_9867(%var_9830: Tensor[(7, 14, 15), uint16], %var_9831: Tensor[(7, 14, 15), uint16]) -> Tensor[(7, 14, 15), bool] {
  %290 = cast(%var_9831, dtype="bool") /* ty=Tensor[(7, 14, 15), bool] */;
  %291 = shape_of(%var_9830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%var_9830, dtype="bool") /* ty=Tensor[(7, 14, 15), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%292, %293) /* ty=Tensor[(7, 14, 15), bool] */
}

def @func_9101() -> (Tensor[(13, 12, 15), float32],) {
  %294 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
  (%294,)
}

def @func_4462(%var_4371: Tensor[(384), bool]) -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 12, 2), float64]) {
  %295 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %296 = %295.2;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %298 = reshape(%297, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %299 = @func_1342(%298) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %300 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %301 = cast(%var_4371, dtype="bool") /* ty=Tensor[(384), bool] */;
  %302 = reshape(%301, newshape=[12, 32]) /* ty=Tensor[(12, 32), bool] */;
  %303 = @func_2043(%302) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(12, 32), bool], Tensor[(7, 8, 15), int8], Tensor[(840), int8]) */;
  %304 = %303.2;
  %305 = cast(%var_4371, dtype="uint64") /* ty=Tensor[(384), uint64] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="uint64") /* ty=Tensor[(16, 12, 2), uint64] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %309 = subtract(%307, %308) /* ty=Tensor[(16, 12, 2), uint64] */;
  %310 = cast(%309, dtype="float32") /* ty=Tensor[(16, 12, 2), float32] */;
  %311 = cosh(%310) /* ty=Tensor[(16, 12, 2), float32] */;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(16, 12, 2), float64] */;
  %313 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
  %314 = %299.0;
  %315 = %300.1;
  %316 = acos(%312) /* ty=Tensor[(16, 12, 2), float64] */;
  (%296, %313, %314, %315, %316)
}

def @func_1677() -> Tensor[(13, 12, 15), float32] {
  %317 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %317.0
}

def @func_9653() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) {
  %318 = @func_2806() /* ty=Tensor[(13, 12, 15), float32] */;
  %319 = @func_9135() /* ty=Tensor[(13, 12, 15), float64] */;
  %320 = @func_4587() /* ty=Tensor[(13, 12, 15), float32] */;
  (%318, %319, %320)
}

def @func_223(%var_209: Tensor[(1, 10, 15), float64], %var_218: Tensor[(1183, 2), float64]) -> (Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) {
  %321 = cast(%var_209, dtype="float64") /* ty=Tensor[(1, 10, 15), float64] */;
  %322 = cast(%var_218, dtype="float64") /* ty=Tensor[(1183, 2), float64] */;
  %323 = reshape(%322, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
  %324 = asinh(%321) /* ty=Tensor[(1, 10, 15), float64] */;
  %325 = @func_30(%323) /* ty=Tensor[(13, 13, 14), float64] */;
  (%324, %325, %var_218)
}

def @func_6363() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %326 = @func_4626() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %327 = %326.0;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %329 = @func_3982() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %330 = @func_5964() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %331 = rsqrt(%328) /* ty=Tensor[(13, 12, 15), float32] */;
  %332 = @func_5184() /* ty=Tensor[(13, 12, 15), int16] */;
  %333 = %329.0;
  %334 = %330.0;
  (%331, %332, %333, %334)
}

def @func_2043(%var_2033: Tensor[(12, 32), bool]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(12, 32), bool], Tensor[(7, 8, 15), int8], Tensor[(840), int8]) {
  %335 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
  %336 = cast(%var_2033, dtype="bool") /* ty=Tensor[(12, 32), bool] */;
  %337 = reshape(%336, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
  %338 = @func_540(%337) /* ty=(Tensor[(16, 12, 2), bool],) */;
  %339 = cast(meta[relay.Constant][11] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %340 = reshape(%339, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), int8] */;
  %341 = @func_1927(%340) /* ty=(Tensor[(7, 8, 15), int8],) */;
  %342 = %335.1;
  %343 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %344 = %338.0;
  %345 = %341.0;
  (%342, %343, %344, %var_2033, %345, meta[relay.Constant][11] /* ty=Tensor[(840), int8] */)
}

def @func_5206() -> Tensor[(13, 12, 15), float32] {
  %346 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %346.1
}

def @func_4202(%var_4144: Tensor[(520), bool]) -> (Tensor[(13, 12, 15), float64], Tensor[(520), bool], Tensor[(8, 5, 13), float32], Tensor[(13, 12, 15), float32], Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64]) {
  %347 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %348 = cast(%var_4144, dtype="bool") /* ty=Tensor[(520), bool] */;
  %349 = cast(%var_4144, dtype="bool") /* ty=Tensor[(520), bool] */;
  %350 = reshape(%348, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
  %351 = reshape(%349, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
  %352 = @func_3289(%350, %351) /* ty=Tensor[(8, 5, 13), bool] */;
  %353 = cast(%352, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %354 = sinh(%353) /* ty=Tensor[(8, 5, 13), float64] */;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(8, 5, 13), float32] */;
  %356 = cast(%354, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %357 = cast(%352, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %358 = %347.0;
  %359 = exp(%355) /* ty=Tensor[(8, 5, 13), float32] */;
  %360 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
  %361 = acosh(%356) /* ty=Tensor[(8, 5, 13), float64] */;
  %362 = sin(%357) /* ty=Tensor[(8, 5, 13), float64] */;
  (%358, %var_4144, %359, %360, %361, %362)
}

def @func_8756() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %363 = @func_2884() /* ty=Tensor[(13, 12, 15), float32] */;
  %364 = @func_7393() /* ty=Tensor[(13, 12, 15), float32] */;
  (%363, %364)
}

def @func_9289() -> (Tensor[(13, 12, 15), float64],) {
  %365 = @func_5720() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) */;
  %366 = %365.1;
  (%366,)
}

def @func_5584() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %367 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %368 = @func_2632() /* ty=Tensor[(13, 12, 15), float32] */;
  %369 = %367.1;
  (%368, %369)
}

def @func_7988(%var_7975: Tensor[(11, 12, 13), float32], %var_7976: Tensor[(11, 12, 13), float32]) -> (Tensor[(11, 12, 13), float32], Tensor[(13, 12, 15), float32]) {
  %370 = cast(%var_7976, dtype="float32") /* ty=Tensor[(11, 12, 13), float32] */;
  %371 = shape_of(%var_7975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%var_7975, dtype="float32") /* ty=Tensor[(11, 12, 13), float32] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %374 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %375 = mod(%372, %373) /* ty=Tensor[(11, 12, 13), float32] */;
  %376 = %374.0;
  (%375, %376)
}

def @func_3246() -> (Tensor[(13, 12, 15), float64],) {
  %377 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %380 = asin(%379) /* ty=Tensor[(13, 12, 15), float64] */;
  (%380,)
}

def @func_6937() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %381 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %382 = %381.0;
  %383 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
  %384 = @func_3028() /* ty=Tensor[(13, 12, 15), float32] */;
  (%382, %383, %384)
}

def @func_1542() -> Tensor[(13, 12, 15), float32] {
  @func_1058() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_1848() -> (Tensor[(13, 12, 15), float32],) {
  %385 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %386 = %385.0;
  (%386,)
}

def @func_7759() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
  %387 = @func_6937() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %388 = cast(meta[relay.Constant][12] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %389 = reshape(%388, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float32] */;
  %390 = @func_4716(%389) /* ty=(Tensor[(14, 9, 1), float64],) */;
  %391 = @func_5584() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %392 = @func_5932() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %393 = @func_5597() /* ty=Tensor[(13, 12, 15), float32] */;
  %394 = %387.1;
  %395 = %390.0;
  %396 = %391.0;
  %397 = %392.0;
  (%393, %394, %395, meta[relay.Constant][12] /* ty=Tensor[(126, 1), float32] */, %396, %397)
}

def @func_8665() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
  %398 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %399 = @func_2780() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %400 = @func_7759() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %401 = %398.0;
  %402 = %399.1;
  %403 = %400.5;
  (%401, %402, %403)
}

def @func_10035(%var_9984: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(150), float64], Tensor[(144), int32], Tensor[(150), float64], Tensor[(1512), float64]) {
  %404 = cast(meta[relay.Constant][13] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
  %405 = cast(%var_9984, dtype="float64") /* ty=Tensor[(150), float64] */;
  %406 = cast(meta[relay.Constant][14] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %407 = cast(meta[relay.Constant][13] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
  %408 = reshape(%404, newshape=[4, 36]) /* ty=Tensor[(4, 36), int32] */;
  %409 = reshape(%405, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %410 = reshape(%406, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %411 = reshape(%407, newshape=[4, 36]) /* ty=Tensor[(4, 36), int32] */;
  %412 = @func_7534(%408, %409, %410, %411) /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(1512), float64], Tensor[(13, 12, 15), float32], Tensor[(4, 36), bool], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(150), float64], int16, Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(14, 9, 12), uint32], Tensor[(4, 36), float64], Tensor[(4, 36), float64], Tensor[(13, 12, 15), int16]) */;
  %413 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
  %414 = %412.6;
  (%413, %414, meta[relay.Constant][13] /* ty=Tensor[(144), int32] */, %var_9984, meta[relay.Constant][14] /* ty=Tensor[(1512), float64] */)
}

def @func_5474(%var_5467: Tensor[(75, 2), float64]) -> (Tensor[(12, 7, 14), float32], Tensor[(13, 13, 14), float64], Tensor[(75, 2), float64], Tensor[(2366, 1), float64]) {
  %415 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 7, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
  %416 = cast(%var_5467, dtype="float64") /* ty=Tensor[(75, 2), float64] */;
  %417 = cast(meta[relay.Constant][16] /* ty=Tensor[(2366, 1), float64] */, dtype="float64") /* ty=Tensor[(2366, 1), float64] */;
  %418 = reshape(%416, newshape=[1, 10, 15]) /* ty=Tensor[(1, 10, 15), float64] */;
  %419 = reshape(%417, newshape=[1183, 2]) /* ty=Tensor[(1183, 2), float64] */;
  %420 = @func_223(%418, %419) /* ty=(Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) */;
  %421 = sqrt(%415) /* ty=Tensor[(12, 7, 14), float32] */;
  %422 = %420.1;
  (%421, %422, %var_5467, meta[relay.Constant][16] /* ty=Tensor[(2366, 1), float64] */)
}

def @func_2632() -> Tensor[(13, 12, 15), float32] {
  %423 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  sinh(%424) /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_8048(%var_8044: Tensor[(9, 1, 12), float32]) -> (Tensor[(9, 1, 12), float32],) {
  %425 = cast(%var_8044, dtype="float32") /* ty=Tensor[(9, 1, 12), float32] */;
  %426 = sinh(%425) /* ty=Tensor[(9, 1, 12), float32] */;
  (%426,)
}

def @func_4329(%var_4309: Tensor[(13, 12, 15), float32]) -> Tensor[(13, 12, 15), bool] {
  %427 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %428 = %427.0;
  %429 = cast(%var_4309, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%431, %432) /* ty=Tensor[(13, 12, 15), bool] */
}

def @func_800(%var_784: Tensor[(14, 9, 12), float64], %var_785: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) {
  %433 = cast(%var_785, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %434 = shape_of(%var_784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%var_784, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %437 = cast(meta[relay.Constant][17] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
  %438 = reshape(%437, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
  %439 = floor_divide(%435, %436) /* ty=Tensor[(14, 9, 12), float64] */;
  %440 = @func_30(%438) /* ty=Tensor[(13, 13, 14), float64] */;
  (%439, %440, meta[relay.Constant][17] /* ty=Tensor[(2366), float64] */)
}

def @func_3982() -> (Tensor[(13, 12, 15), float32],) {
  %441 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %442 = %441.0;
  (%442,)
}

def @func_7374() -> (Tensor[(16, 12, 2), bool], Tensor[(10, 14, 14), uint64], Tensor[(10, 14, 14), float64], Tensor[(10, 14, 14), float64]) {
  %443 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
  %444 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 14), int64] */, dtype="bool") /* ty=Tensor[(10, 14, 14), bool] */;
  %445 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 14, 14), int64] */, dtype="bool") /* ty=Tensor[(10, 14, 14), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %448 = not_equal(%446, %447) /* ty=Tensor[(10, 14, 14), bool] */;
  %449 = cast(%448, dtype="uint64") /* ty=Tensor[(10, 14, 14), uint64] */;
  %450 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 14), int64] */, dtype="uint64") /* ty=Tensor[(10, 14, 14), uint64] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %453 = cast(%448, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
  %454 = sqrt(%453) /* ty=Tensor[(10, 14, 14), float32] */;
  %455 = cast(%454, dtype="float64") /* ty=Tensor[(10, 14, 14), float64] */;
  %456 = cast(%454, dtype="float64") /* ty=Tensor[(10, 14, 14), float64] */;
  %457 = %443.1;
  %458 = bitwise_and(%451, %452) /* ty=Tensor[(10, 14, 14), uint64] */;
  %459 = acos(%455) /* ty=Tensor[(10, 14, 14), float64] */;
  %460 = sigmoid(%456) /* ty=Tensor[(10, 14, 14), float64] */;
  (%457, %458, %459, %460)
}

def @func_3435(%var_3386: float64, %var_3387: Tensor[(6, 13, 2), float64], %var_3431: Tensor[(1512, 1), float64]) -> (Tensor[(13, 12, 15), uint64], Tensor[(2340), float32], Tensor[(8, 5, 13), bool], Tensor[(130, 4), bool], Tensor[(1183, 2), float64], Tensor[(75, 2), float64], Tensor[(2366), float64], Tensor[(6, 13, 2), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64]) {
  %461 = cast(meta[relay.Constant][20] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %462 = cast(meta[relay.Constant][20] /* ty=Tensor[(2340), float32] */, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %463 = reshape(%461, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %464 = reshape(%462, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float64] */;
  %465 = @func_2474(%463, %464) /* ty=(Tensor[(13, 12, 15), uint64],) */;
  %466 = cast(meta[relay.Constant][21] /* ty=Tensor[(130, 4), bool] */, dtype="bool") /* ty=Tensor[(130, 4), bool] */;
  %467 = cast(meta[relay.Constant][21] /* ty=Tensor[(130, 4), bool] */, dtype="bool") /* ty=Tensor[(130, 4), bool] */;
  %468 = reshape(%466, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
  %469 = reshape(%467, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
  %470 = cast(meta[relay.Constant][22] /* ty=Tensor[(75, 2), float64] */, dtype="float64") /* ty=Tensor[(75, 2), float64] */;
  %471 = cast(meta[relay.Constant][23] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
  %472 = reshape(%470, newshape=[1, 10, 15]) /* ty=Tensor[(1, 10, 15), float64] */;
  %473 = reshape(%471, newshape=[1183, 2]) /* ty=Tensor[(1183, 2), float64] */;
  %474 = @func_223(%472, %473) /* ty=(Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) */;
  %475 = cast(%var_3386, dtype="float64") /* ty=float64 */;
  %476 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %477 = divide(%475, %476) /* ty=Tensor[(6, 13, 2), float64] */;
  %478 = cast(%477, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %479 = cast(%var_3386, dtype="float64") /* ty=float64 */;
  %480 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %481 = cast(%var_3431, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
  %482 = cast(%var_3431, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
  %483 = reshape(%481, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %484 = reshape(%482, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %485 = @func_800(%483, %484) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
  %486 = %465.0;
  %487 = @func_3289(%468, %469) /* ty=Tensor[(8, 5, 13), bool] */;
  %488 = %474.2;
  %489 = power(%478, %479) /* ty=Tensor[(6, 13, 2), float64] */;
  %490 = @func_3314() /* ty=Tensor[(13, 12, 15), float32] */;
  %491 = %480.2;
  %492 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
  %493 = %485.1;
  (%486, meta[relay.Constant][20] /* ty=Tensor[(2340), float32] */, %487, meta[relay.Constant][21] /* ty=Tensor[(130, 4), bool] */, %488, meta[relay.Constant][22] /* ty=Tensor[(75, 2), float64] */, meta[relay.Constant][23] /* ty=Tensor[(2366), float64] */, %489, %490, %491, %492, %493, %var_3431)
}

def @func_4263() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %494 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %495 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %496 = %494.1;
  %497 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
  (%495, %496, %497)
}

def @func_2061() -> (Tensor[(13, 12, 15), float32],) {
  %498 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %499 = %498.0;
  (%499,)
}

def @func_4548(%var_4523: Tensor[(420, 2), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(420, 2), uint64]) {
  %500 = cast(%var_4523, dtype="int8") /* ty=Tensor[(420, 2), int8] */;
  %501 = reshape(%500, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), int8] */;
  %502 = @func_1927(%501) /* ty=(Tensor[(7, 8, 15), int8],) */;
  %503 = %502.0;
  %504 = cast(%503, dtype="uint64") /* ty=Tensor[(7, 8, 15), uint64] */;
  %505 = shape_of(%var_4523, dtype="int32") /* ty=Tensor[(2), int32] */;
  %506 = cast(%var_4523, dtype="uint64") /* ty=Tensor[(420, 2), uint64] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %508 = @func_3007() /* ty=Tensor[(13, 12, 15), float32] */;
  %509 = subtract(%506, %507) /* ty=Tensor[(420, 2), uint64] */;
  (%508, %509)
}

def @func_2579(%var_2558: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float32],) {
  %510 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
  %511 = cast(%var_2558, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %515 = mod(%513, %514) /* ty=Tensor[(13, 12, 15), float32] */;
  (%515,)
}

def @func_6703() -> (Tensor[(13, 12, 15), int32],) {
  %516 = @func_3518() /* ty=Tensor[(13, 12, 15), int32] */;
  (%516,)
}

def @func_2247() -> Tensor[(13, 12, 15), int16] {
  %517 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %517.1
}

def @func_3193(%var_3126: int16, %var_3127: Tensor[(2, 9, 12), int16], %var_3154: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) {
  %518 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %519 = cast(%var_3154, dtype="float64") /* ty=Tensor[(150), float64] */;
  %520 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 182), float64] */, dtype="float64") /* ty=Tensor[(13, 182), float64] */;
  %521 = reshape(%519, newshape=[1, 10, 15]) /* ty=Tensor[(1, 10, 15), float64] */;
  %522 = reshape(%520, newshape=[1183, 2]) /* ty=Tensor[(1183, 2), float64] */;
  %523 = @func_223(%521, %522) /* ty=(Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) */;
  %524 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %525 = cast(%var_3126, dtype="int16") /* ty=int16 */;
  %526 = cast(%var_3127, dtype="int16") /* ty=Tensor[(2, 9, 12), int16] */;
  %527 = logical_xor(%525, %526) /* ty=Tensor[(2, 9, 12), int16] */;
  %528 = cast(%var_3127, dtype="bool") /* ty=Tensor[(2, 9, 12), bool] */;
  %529 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%527, dtype="bool") /* ty=Tensor[(2, 9, 12), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %532 = %518.0;
  %533 = %523.2;
  %534 = %524.1;
  %535 = logical_and(%530, %531) /* ty=Tensor[(2, 9, 12), bool] */;
  (%532, %533, %var_3154, meta[relay.Constant][24] /* ty=Tensor[(13, 182), float64] */, %534, %535)
}

def @func_8732() -> Tensor[(13, 12, 15), int16] {
  @func_3621() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_8343() -> (Tensor[(13, 12, 15), float64],) {
  %536 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %537 = %536.0;
  (%537,)
}

def @func_9135() -> Tensor[(13, 12, 15), float64] {
  %538 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %538.2
}

def @func_5597() -> Tensor[(13, 12, 15), float32] {
  %539 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %539.0
}

def @func_2193() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %540 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %542 = reshape(%541, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %543 = @func_1342(%542) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %544 = @func_2108() /* ty=(Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) */;
  %545 = %543.0;
  %546 = %544.3;
  (%540, %545, %546)
}

def @func_4716(%var_4708: Tensor[(14, 9, 1), float32]) -> (Tensor[(14, 9, 1), float64],) {
  %547 = cast(%var_4708, dtype="float32") /* ty=Tensor[(14, 9, 1), float32] */;
  %548 = sigmoid(%547) /* ty=Tensor[(14, 9, 1), float32] */;
  %549 = cast(%548, dtype="float64") /* ty=Tensor[(14, 9, 1), float64] */;
  %550 = asinh(%549) /* ty=Tensor[(14, 9, 1), float64] */;
  (%550,)
}

def @func_8491(%var_8479: Tensor[(1512), float64]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(1512), bool]) {
  %551 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %552 = cast(meta[relay.Constant][25] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %553 = cast(meta[relay.Constant][25] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %554 = reshape(%552, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %555 = reshape(%553, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %556 = @func_800(%554, %555) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
  %557 = @func_5460() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) */;
  %558 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %559 = cast(%var_8479, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %560 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(1512), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %561 = cast(meta[relay.Constant][25] /* ty=Tensor[(1512), float64] */, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?), bool] */;
  %563 = %551.1;
  %564 = %556.1;
  %565 = %557.0;
  %566 = %558.0;
  %567 = @func_2632() /* ty=Tensor[(13, 12, 15), float32] */;
  %568 = logical_or(%561, %562) /* ty=Tensor[(1512), bool] */;
  (%563, %564, %565, %566, %567, %568)
}

def @func_6029() -> (Tensor[(13, 12, 15), float32],) {
  %569 = @func_3982() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %570 = %569.0;
  (%570,)
}

def @func_8125() -> (Tensor[(13, 12, 15), float32],) {
  %571 = @func_4263() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %572 = %571.2;
  (%572,)
}

def @func_9013() -> Tensor[(13, 12, 15), float32] {
  @func_2806() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_3683() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), bool]) {
  %573 = @func_3590() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %574 = %573.1;
  %575 = cast(%574, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %576 = reshape(%575, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %577 = @func_1284(%576) /* ty=Tensor[(13, 12, 15), bool] */;
  (%574, %577)
}

def @func_7802() -> Tensor[(13, 12, 15), float32] {
  @func_3007() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_8868(%var_8862: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(840), int8], Tensor[(264), float32], Tensor[(840), int8]) {
  %578 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %579 = @func_8343() /* ty=(Tensor[(13, 12, 15), float64],) */;
  %580 = cast(meta[relay.Constant][26] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %581 = cast(%var_8862, dtype="int8") /* ty=Tensor[(840), int8] */;
  %582 = reshape(%580, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %583 = reshape(%581, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %584 = @func_7959(%582, %583) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], float32, Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), float32], Tensor[(840), int8]) */;
  %585 = %578.1;
  %586 = %579.0;
  %587 = %584.5;
  (%585, %586, %587, meta[relay.Constant][26] /* ty=Tensor[(264), float32] */, %var_8862)
}

def @func_5386() -> (Tensor[(13, 12, 15), float32],) {
  %588 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %589 = %588.1;
  (%589,)
}

def @func_1608() -> (Tensor[(13, 12, 15), float32],) {
  %590 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %591 = %590.0;
  (%591,)
}

def @func_9682() -> (Tensor[(13, 12, 15), float32],) {
  %592 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %593 = %592.0;
  (%593,)
}

def @func_6688() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) {
  %594 = @func_3982() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %595 = %594.0;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %597 = acosh(%596) /* ty=Tensor[(13, 12, 15), float64] */;
  %598 = @func_3119() /* ty=Tensor[(13, 12, 15), float32] */;
  (%597, %598)
}

def @func_1126() -> (Tensor[(13, 12, 15), float32],) {
  %599 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %600 = %599.0;
  (%600,)
}

def @func_1211(%var_1180: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) {
  %601 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %602 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %603 = cast(%var_1180, dtype="uint32") /* ty=Tensor[(13, 12, 15), uint32] */;
  %604 = shape_of(%602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%602, dtype="uint32") /* ty=Tensor[(13, 12, 15), uint32] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %607 = %601.0;
  %608 = multiply(%605, %606) /* ty=Tensor[(13, 12, 15), uint32] */;
  %609 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  (%607, %608, %609)
}

def @func_3289(%var_3282: Tensor[(8, 5, 13), bool], %var_3283: Tensor[(8, 5, 13), bool]) -> Tensor[(8, 5, 13), bool] {
  %610 = cast(%var_3283, dtype="bool") /* ty=Tensor[(8, 5, 13), bool] */;
  %611 = shape_of(%var_3282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_3282, dtype="bool") /* ty=Tensor[(8, 5, 13), bool] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%612, %613) /* ty=Tensor[(8, 5, 13), bool] */
}

def @func_4682() -> Tensor[(13, 12, 15), float32] {
  %614 = @func_3590() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %615 = %614.0;
  %616 = cast(%615, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  atan(%616) /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_2553() -> Tensor[(13, 12, 15), float32] {
  @func_1542() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9919() -> (Tensor[(13, 12, 15), float32],) {
  %617 = @func_5597() /* ty=Tensor[(13, 12, 15), float32] */;
  (%617,)
}

def @func_3314() -> Tensor[(13, 12, 15), float32] {
  %618 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %618.1
}

def @func_2108() -> (Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) {
  %619 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %620 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 16, 7), int64] */, dtype="int64") /* ty=Tensor[(2, 16, 7), int64] */;
  %621 = cast(meta[relay.Constant][28] /* ty=Tensor[(1512, 1), float64] */, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
  %622 = cast(meta[relay.Constant][28] /* ty=Tensor[(1512, 1), float64] */, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
  %623 = reshape(%621, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %624 = reshape(%622, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %625 = @func_800(%623, %624) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
  %626 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %627 = minimum(%619, %620) /* ty=Tensor[(2, 16, 7), int64] */;
  %628 = %625.1;
  %629 = %626.0;
  (%627, %628, meta[relay.Constant][28] /* ty=Tensor[(1512, 1), float64] */, %629)
}

def @func_7016() -> Tensor[(13, 12, 15), int32] {
  %630 = @func_6703() /* ty=(Tensor[(13, 12, 15), int32],) */;
  %630.0
}

def @func_10210(%var_10195: Tensor[(4, 60), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(4, 60), uint16], Tensor[(4, 60), float32]) {
  %631 = @func_9682() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %632 = @func_5664() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(1, 60), float64]) */;
  %633 = %632.2;
  %634 = cast(%633, dtype="uint16") /* ty=Tensor[(1, 60), uint16] */;
  %635 = cast(%var_10195, dtype="uint16") /* ty=Tensor[(4, 60), uint16] */;
  %636 = cast(%var_10195, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %637 = %631.0;
  %638 = add(%634, %635) /* ty=Tensor[(4, 60), uint16] */;
  %639 = rsqrt(%636) /* ty=Tensor[(4, 60), float32] */;
  (%637, %638, %639)
}

def @func_5932() -> (Tensor[(13, 12, 15), int16],) {
  %640 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
  %641 = %640.1;
  (%641,)
}

def @func_2426() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) {
  %642 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
  %643 = %642.0;
  %644 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %645 = %644.2;
  %646 = cast(%645, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %647 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%643, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %650 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %651 = maximum(%648, %649) /* ty=Tensor[(13, 12, 15), uint64] */;
  %652 = %650.0;
  (%651, %652)
}

def @func_6167() -> (Tensor[(13, 12, 15), float32], Tensor[(1512, 1), float64]) {
  %653 = @func_2108() /* ty=(Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) */;
  %654 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
  %655 = %653.2;
  (%654, %655)
}

def @func_1045() -> Tensor[(13, 12, 15), float32] {
  %656 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  log10(%656) /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_3549() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %657 = @func_1848() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %658 = %657.0;
  %659 = cast(%658, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %660 = reshape(%659, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %661 = @func_1342(%660) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %662 = %661.1;
  (%658, %662)
}

def @func_4626() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %663 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %664 = @func_4587() /* ty=Tensor[(13, 12, 15), float32] */;
  (%663, %664)
}

def @func_6884() -> (Tensor[(13, 12, 15), int16],) {
  %665 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
  (%665,)
}

def @func_7534(%var_7429: Tensor[(4, 36), int32], %var_7447: Tensor[(150), float64], %var_7475: Tensor[(14, 9, 12), float64], %var_7488: Tensor[(4, 36), int32]) -> (Tensor[(13, 12, 15), uint64], Tensor[(1512), float64], Tensor[(13, 12, 15), float32], Tensor[(4, 36), bool], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(150), float64], int16, Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(14, 9, 12), uint32], Tensor[(4, 36), float64], Tensor[(4, 36), float64], Tensor[(13, 12, 15), int16]) {
  %666 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %667 = cast(%var_7429, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
  %668 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %669 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 36), int32] */, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %671 = cast(meta[relay.Constant][32] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
  %672 = reshape(%671, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
  %673 = @func_540(%672) /* ty=(Tensor[(16, 12, 2), bool],) */;
  %674 = cast(meta[relay.Constant][33] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %675 = cast(meta[relay.Constant][34] /* ty=Tensor[(216), int16] */, dtype="int16") /* ty=Tensor[(216), int16] */;
  %676 = cast(%var_7447, dtype="float64") /* ty=Tensor[(150), float64] */;
  %677 = reshape(%674, newshape=[]) /* ty=int16 */;
  %678 = reshape(%675, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), int16] */;
  %679 = reshape(%676, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %680 = @func_3193(%677, %678, %679) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) */;
  %681 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %682 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
  %683 = cast(meta[relay.Constant][30] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %684 = reshape(%682, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), int32] */;
  %685 = reshape(%683, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %686 = @func_1795(%684, %685) /* ty=(Tensor[(16, 3, 3), int32], Tensor[(14, 9, 12), float64], Tensor[(1512), float64]) */;
  %687 = %686.1;
  %688 = cast(%var_7475, dtype="uint32") /* ty=Tensor[(14, 9, 12), uint32] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="uint32") /* ty=Tensor[(14, 9, 12), uint32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %692 = cast(%var_7488, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
  %693 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %694 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %696 = bitwise_and(%694, %695) /* ty=Tensor[(4, 36), int32] */;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %698 = acos(%697) /* ty=Tensor[(4, 36), float64] */;
  %699 = cast(%696, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
  %700 = shape_of(%698, dtype="int32") /* ty=Tensor[(2), int32] */;
  %701 = cast(%698, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %703 = greater_equal(%701, %702) /* ty=Tensor[(4, 36), bool] */;
  %704 = cast(%703, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %705 = log10(%704) /* ty=Tensor[(4, 36), float64] */;
  %706 = cast(%705, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %707 = cast(%698, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %708 = shape_of(%705, dtype="int32") /* ty=Tensor[(2), int32] */;
  %709 = cast(%705, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %711 = @func_6884() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %712 = %666.0;
  %713 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
  %714 = less_equal(%669, %670) /* ty=Tensor[(4, 36), bool] */;
  %715 = %673.0;
  %716 = %680.2;
  %717 = %681.0;
  %718 = multiply(%690, %691) /* ty=Tensor[(14, 9, 12), uint32] */;
  %719 = exp(%706) /* ty=Tensor[(4, 36), float64] */;
  %720 = add(%709, %710) /* ty=Tensor[(4, 36), float64] */;
  %721 = %711.0;
  (%712, meta[relay.Constant][30] /* ty=Tensor[(1512), float64] */, %713, %714, %715, meta[relay.Constant][32] /* ty=Tensor[(384), bool] */, %716, meta[relay.Constant][33] /* ty=int16 */, meta[relay.Constant][34] /* ty=Tensor[(216), int16] */, %var_7447, %717, %718, %719, %720, %721)
}

def @func_8084() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %722 = @func_5964() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %723 = @func_4263() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %724 = %722.0;
  %725 = %723.1;
  (%724, %725)
}

def @func_7290(%var_7280: Tensor[(3, 1, 15), int16], %var_7281: Tensor[(3, 1, 15), int16]) -> Tensor[(3, ?, 15), int16] {
  %726 = cast(%var_7281, dtype="int16") /* ty=Tensor[(3, 1, 15), int16] */;
  %727 = shape_of(%var_7280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%var_7280, dtype="int16") /* ty=Tensor[(3, 1, 15), int16] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%728, %729) /* ty=Tensor[(3, ?, 15), int16] */
}

def @func_9458() -> (Tensor[(13, 12, 15), float32],) {
  %730 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
  (%730,)
}

def @func_2806() -> Tensor[(13, 12, 15), float32] {
  @func_1542() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_2687() -> (Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) {
  %731 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 16), float64] */;
  %732 = log2(%731) /* ty=Tensor[(16, 13, 16), float64] */;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(16, 13, 16), float64] */;
  %734 = sin(%733) /* ty=Tensor[(16, 13, 16), float64] */;
  %735 = cast(meta[relay.Constant][36] /* ty=Tensor[(16, 13, 16), float64] */, dtype="bool") /* ty=Tensor[(16, 13, 16), bool] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%734, dtype="bool") /* ty=Tensor[(16, 13, 16), bool] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %739 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %740 = greater_equal(%737, %738) /* ty=Tensor[(16, 13, 16), bool] */;
  %741 = %739.0;
  (%740, %741)
}

def @func_3590() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  %742 = @func_3246() /* ty=(Tensor[(13, 12, 15), float64],) */;
  %743 = @func_2632() /* ty=Tensor[(13, 12, 15), float32] */;
  %744 = %742.0;
  (%743, %744)
}

def @func_7959(%var_7926: Tensor[(264), float32], %var_7927: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], float32, Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), float32], Tensor[(840), int8]) {
  %745 = cast(-6.68812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %746 = cast(%var_7926, dtype="float32") /* ty=Tensor[(264), float32] */;
  %747 = cast(%var_7927, dtype="int8") /* ty=Tensor[(840), int8] */;
  %748 = reshape(%745, newshape=[]) /* ty=float32 */;
  %749 = reshape(%746, newshape=[3, 8, 11]) /* ty=Tensor[(3, 8, 11), float32] */;
  %750 = reshape(%747, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %751 = @func_7656(%748, %749, %750) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) */;
  %752 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %753 = cast(-6.68812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %754 = cast(%var_7926, dtype="float32") /* ty=Tensor[(264), float32] */;
  %755 = cast(%var_7927, dtype="int8") /* ty=Tensor[(840), int8] */;
  %756 = reshape(%753, newshape=[]) /* ty=float32 */;
  %757 = reshape(%754, newshape=[3, 8, 11]) /* ty=Tensor[(3, 8, 11), float32] */;
  %758 = reshape(%755, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %759 = @func_7656(%756, %757, %758) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) */;
  %760 = @func_7393() /* ty=Tensor[(13, 12, 15), float32] */;
  %761 = @func_3028() /* ty=Tensor[(13, 12, 15), float32] */;
  %762 = %751.0;
  %763 = %752.0;
  %764 = %759.1;
  (%760, %761, %762, -6.68812f /* ty=float32 */, %var_7926, %var_7927, %763, %764)
}

def @func_6818() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %765 = @func_5932() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %766 = @func_4062() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %767 = @func_5386() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %768 = @func_6279() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool]) */;
  %769 = %765.0;
  %770 = %766.0;
  %771 = %767.0;
  %772 = %768.0;
  (%769, %770, %771, %772)
}

def @func_3028() -> Tensor[(13, 12, 15), float32] {
  @func_1058() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_8923() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int32], Tensor[(13, 12, 15), float32]) {
  %773 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %774 = @func_4682() /* ty=Tensor[(13, 12, 15), float32] */;
  %775 = @func_3518() /* ty=Tensor[(13, 12, 15), int32] */;
  %776 = %773.0;
  (%774, %775, %776)
}

def @func_9760() -> (Tensor[(13, 12, 15), float32],) {
  %777 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %778 = %777.0;
  (%778,)
}

def @func_1058() -> Tensor[(13, 12, 15), float32] {
  @func_1045() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_5664() -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(1, 60), float64]) {
  %779 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %780 = reshape(%779, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %781 = @func_5530(%780) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(60), float64]) */;
  %782 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %783 = %781.1;
  (%782, %783, meta[relay.Constant][37] /* ty=Tensor[(1, 60), float64] */)
}

def @func_5539() -> (Tensor[(13, 12, 15), float64],) {
  %784 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %785 = %784.0;
  (%785,)
}

def @func_1342(%var_1330: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %786 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %787 = %786.0;
  %788 = cast(%var_1330, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
  %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(%787, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %792 = logical_xor(%790, %791) /* ty=Tensor[(13, 12, 15), int16] */;
  %793 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  (%792, %793)
}

def @func_3119() -> Tensor[(13, 12, 15), float32] {
  %794 = @func_2108() /* ty=(Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) */;
  %794.3
}

def @func_9263() -> Tensor[(13, 12, 15), float32] {
  @func_4587() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_1399(%var_1393: Tensor[(13, 1, 4), bool], %var_1394: Tensor[(13, 14, 4), bool]) -> (Tensor[(13, 14, 4), bool],) {
  %795 = cast(%var_1393, dtype="bool") /* ty=Tensor[(13, 1, 4), bool] */;
  %796 = cast(%var_1394, dtype="bool") /* ty=Tensor[(13, 14, 4), bool] */;
  %797 = logical_and(%795, %796) /* ty=Tensor[(13, 14, 4), bool] */;
  (%797,)
}

def @func_7258() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(3, 2, 10), float64], Tensor[(3, 2), float64], Tensor[(1, 60), float64], Tensor[(16, 13, 16), float32], Tensor[(14, 9, 1), float64], Tensor[(63, 2), float32]) {
  %798 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %799 = %798.0;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %801 = reshape(%800, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %802 = @func_1342(%801) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %803 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %804 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %805 = reshape(%803, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float64] */;
  %806 = reshape(%804, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %807 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
  %808 = %807.0;
  %809 = cast(%808, dtype="float32") /* ty=Tensor[(16, 13, 16), float32] */;
  %810 = cast(meta[relay.Constant][40] /* ty=Tensor[(63, 2), float32] */, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
  %811 = reshape(%810, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float32] */;
  %812 = @func_4716(%811) /* ty=(Tensor[(14, 9, 1), float64],) */;
  %813 = %802.0;
  %814 = @func_5733(%805, %806) /* ty=Tensor[(3, 2, 10), float64] */;
  %815 = rsqrt(%809) /* ty=Tensor[(16, 13, 16), float32] */;
  %816 = %812.0;
  (%799, %813, %814, meta[relay.Constant][38] /* ty=Tensor[(3, 2), float64] */, meta[relay.Constant][39] /* ty=Tensor[(1, 60), float64] */, %815, %816, meta[relay.Constant][40] /* ty=Tensor[(63, 2), float32] */)
}

def @func_9214(%var_9189: Tensor[(7, 11, 1), float64]) -> (Tensor[(7, 11, 1), float64], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) {
  %817 = cast(%var_9189, dtype="float64") /* ty=Tensor[(7, 11, 1), float64] */;
  %818 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %819 = @func_8343() /* ty=(Tensor[(13, 12, 15), float64],) */;
  %820 = acos(%817) /* ty=Tensor[(7, 11, 1), float64] */;
  %821 = %818.0;
  %822 = %819.0;
  (%820, %821, %822)
}

def @func_6912(%var_6909: Tensor[(11, 5, 2), float32]) -> (Tensor[(11, 5, 2), float32],) {
  %823 = cast(%var_6909, dtype="float32") /* ty=Tensor[(11, 5, 2), float32] */;
  %824 = cosh(%823) /* ty=Tensor[(11, 5, 2), float32] */;
  (%824,)
}

def @func_8269(%var_8246: Tensor[(264), float32]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 8, 16), float64], float64, Tensor[(2048), float64], Tensor[(13, 12, 15), float32], Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %825 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %826 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
  %827 = cast(-2.79268f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %828 = cast(meta[relay.Constant][41] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %829 = reshape(%827, newshape=[]) /* ty=float64 */;
  %830 = reshape(%828, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
  %831 = @func_6111(%829, %830) /* ty=(Tensor[(16, 8, 16), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %832 = cast(-2.79268f64 /* ty=float64 */, dtype="float32") /* ty=float32 */;
  %833 = cast(%var_8246, dtype="float32") /* ty=Tensor[(264), float32] */;
  %834 = cast(meta[relay.Constant][42] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %835 = reshape(%832, newshape=[]) /* ty=float32 */;
  %836 = reshape(%833, newshape=[3, 8, 11]) /* ty=Tensor[(3, 8, 11), float32] */;
  %837 = reshape(%834, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %838 = @func_7656(%835, %836, %837) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) */;
  %839 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %840 = %826.1;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %842 = reshape(%841, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %843 = @func_1211(%842) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %844 = %825.2;
  %845 = %831.0;
  %846 = %838.0;
  %847 = %839.1;
  %848 = %843.0;
  (%844, %840, %845, -2.79268f64 /* ty=float64 */, meta[relay.Constant][41] /* ty=Tensor[(2048), float64] */, %846, %var_8246, meta[relay.Constant][42] /* ty=Tensor[(840), int8] */, %847, %848)
}

def @func_540(%var_533: Tensor[(16, 12, 2), bool]) -> (Tensor[(16, 12, 2), bool],) {
  %849 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %850 = cast(%var_533, dtype="bool") /* ty=Tensor[(16, 12, 2), bool] */;
  %851 = logical_and(%849, %850) /* ty=Tensor[(16, 12, 2), bool] */;
  (%851,)
}

def @func_5460() -> (Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) {
  %852 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %853 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
  %854 = %852.1;
  %855 = %853.0;
  (%854, %855)
}

def @func_7566(%var_7559: int16) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], int16, Tensor[(150), float64]) {
  %856 = @func_5932() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %857 = cast(%var_7559, dtype="int16") /* ty=int16 */;
  %858 = cast(meta[relay.Constant][43] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %859 = reshape(%857, newshape=[]) /* ty=int16 */;
  %860 = reshape(%858, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %861 = @func_5881(%859, %860) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) */;
  %862 = %856.0;
  %863 = %861.8;
  (%862, %863, %var_7559, meta[relay.Constant][43] /* ty=Tensor[(150), float64] */)
}

def @func_2240(%var_2235: Tensor[(13, 12, 15), int16]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int8]) {
  %864 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %865 = %864.0;
  %866 = cast(%865, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %867 = reshape(%866, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %868 = @func_1342(%867) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %869 = @func_1848() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %870 = %869.0;
  %871 = cast(%870, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %872 = reshape(%871, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %873 = @func_1342(%872) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %874 = %873.0;
  %875 = cast(%var_2235, dtype="int8") /* ty=Tensor[(13, 12, 15), int8] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="int8") /* ty=Tensor[(13, 12, 15), int8] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %879 = %868.0;
  %880 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
  %881 = bitwise_and(%877, %878) /* ty=Tensor[(13, 12, 15), int8] */;
  (%865, %879, %880, %870, %881)
}

def @func_4796(%var_4775: Tensor[(2, 15, 2), float64]) -> (Tensor[(2, 15, 2), uint16],) {
  %882 = cast(%var_4775, dtype="float64") /* ty=Tensor[(2, 15, 2), float64] */;
  %883 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(2, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 15, 2), float64] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %886 = floor_mod(%884, %885) /* ty=Tensor[(2, 15, 2), float64] */;
  %887 = cast(%886, dtype="uint16") /* ty=Tensor[(2, 15, 2), uint16] */;
  %888 = shape_of(%var_4775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_4775, dtype="uint16") /* ty=Tensor[(2, 15, 2), uint16] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %891 = minimum(%889, %890) /* ty=Tensor[(2, 15, 2), uint16] */;
  (%891,)
}

def @func_9309() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %892 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %893 = %892.0;
  %894 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  (%893, %894)
}

def @func_2933(%var_2911: Tensor[(9, 2, 12), uint32], %var_2912: Tensor[(9, 2, 12), uint32]) -> Tensor[(9, 2, 12), uint32] {
  %895 = cast(%var_2912, dtype="uint32") /* ty=Tensor[(9, 2, 12), uint32] */;
  %896 = shape_of(%var_2911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%var_2911, dtype="uint32") /* ty=Tensor[(9, 2, 12), uint32] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%897, %898) /* ty=Tensor[(9, 2, 12), uint32] */
}

def @func_9810(%var_9766: Tensor[(7, 10, 7), float32]) -> (Tensor[(9, 2, 12), float64], Tensor[(216), uint32], Tensor[(384), bool], Tensor[(216), uint32], Tensor[(7, 10, 7), float32], Tensor[(13, 12, 15), float64]) {
  %899 = cast(meta[relay.Constant][45] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %900 = cast(meta[relay.Constant][46] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
  %901 = reshape(%899, newshape=[216]) /* ty=Tensor[(216), uint32] */;
  %902 = reshape(%900, newshape=[384]) /* ty=Tensor[(384), bool] */;
  %903 = @func_3933(%901, %902) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) */;
  %904 = %903.2;
  %905 = cast(%904, dtype="uint32") /* ty=Tensor[(9, 2, 12), uint32] */;
  %906 = cast(meta[relay.Constant][46] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
  %907 = reshape(%905, newshape=[216]) /* ty=Tensor[(216), uint32] */;
  %908 = reshape(%906, newshape=[384]) /* ty=Tensor[(384), bool] */;
  %909 = @func_3933(%907, %908) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) */;
  %910 = cast(%var_9766, dtype="float32") /* ty=Tensor[(7, 10, 7), float32] */;
  %911 = acosh(%910) /* ty=Tensor[(7, 10, 7), float32] */;
  %912 = cast(%911, dtype="float32") /* ty=Tensor[(7, 10, 7), float32] */;
  %913 = %909.1;
  %914 = sinh(%912) /* ty=Tensor[(7, 10, 7), float32] */;
  %915 = @func_9135() /* ty=Tensor[(13, 12, 15), float64] */;
  (%904, meta[relay.Constant][45] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][46] /* ty=Tensor[(384), bool] */, %913, %914, %915)
}

def @main() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float64]) {
  %916 = @func_8519() /* ty=Tensor[(13, 12, 15), float64] */;
  %917 = cast(%916, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %918 = @func_5184() /* ty=Tensor[(13, 12, 15), int16] */;
  %919 = log(%917) /* ty=Tensor[(13, 12, 15), float64] */;
  (%918, %919)
}

def @func_5530(%var_5514: Tensor[(60), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(60), float64]) {
  %920 = @func_5386() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %921 = cast(%var_5514, dtype="float64") /* ty=Tensor[(60), float64] */;
  %922 = reshape(%921, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %923 = @func_4796(%922) /* ty=(Tensor[(2, 15, 2), uint16],) */;
  %924 = %920.0;
  %925 = %923.0;
  (%924, %925, %var_5514)
}

def @func_7881() -> Tensor[(13, 12, 15), float32] {
  @func_7393() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_5043(%var_5022: Tensor[(15, 4), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %926 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %927 = %926.2;
  %928 = cast(%927, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %929 = reshape(%928, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %930 = @func_1211(%929) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %931 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %933 = reshape(%932, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %934 = @func_1342(%933) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %935 = cast(%var_5022, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %936 = reshape(%935, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %937 = @func_4796(%936) /* ty=(Tensor[(2, 15, 2), uint16],) */;
  %938 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %939 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %940 = %939.0;
  %941 = cast(%940, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %942 = exp(%941) /* ty=Tensor[(13, 12, 15), float64] */;
  %943 = cast(%942, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %944 = %930.2;
  %945 = %934.1;
  %946 = %937.0;
  %947 = %938.0;
  %948 = sin(%943) /* ty=Tensor[(13, 12, 15), float32] */;
  (%931, %927, %944, %945, %946, %var_5022, %947, %948)
}

def @func_6279() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool]) {
  %949 = @func_5584() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %950 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %951 = %949.1;
  %952 = %950.0;
  (%951, %952)
}

def @func_9504() -> Tensor[(13, 12, 15), float32] {
  @func_2884() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_5053() -> (Tensor[(13, 12, 15), float32],) {
  %953 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %954 = %953.2;
  (%954,)
}

def @func_8519() -> Tensor[(13, 12, 15), float64] {
  %955 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %956 = %955.0;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  sqrt(%957) /* ty=Tensor[(13, 12, 15), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6703() -> (Tensor[(13, 12, 15), int32],) {
  %0 = @func_3518() /* ty=Tensor[(13, 12, 15), int32] */;
  (%0,)
}

def @func_3198(%var_3195: int16, %var_3196: Tensor[(2, 9, 12), int16], %var_3197: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) {
  @func_3193(%var_3195, %var_3196, %var_3197) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) */
}

def @func_3439(%var_3436: float64, %var_3437: Tensor[(6, 13, 2), float64], %var_3438: Tensor[(1512, 1), float64]) -> (Tensor[(13, 12, 15), uint64], Tensor[(2340), float32], Tensor[(8, 5, 13), bool], Tensor[(130, 4), bool], Tensor[(1183, 2), float64], Tensor[(75, 2), float64], Tensor[(2366), float64], Tensor[(6, 13, 2), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64]) {
  %34 = fn (%var_3386: float64, %var_3387: Tensor[(6, 13, 2), float64], %var_3431: Tensor[(1512, 1), float64]) -> (Tensor[(13, 12, 15), uint64], Tensor[(2340), float32], Tensor[(8, 5, 13), bool], Tensor[(130, 4), bool], Tensor[(1183, 2), float64], Tensor[(75, 2), float64], Tensor[(2366), float64], Tensor[(6, 13, 2), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64]) {
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(2340), float32] */, dtype="float64") /* ty=Tensor[(2340), float64] */;
    %3 = reshape(%1, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
    %4 = reshape(%2, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float64] */;
    %5 = @func_2474(%3, %4) /* ty=(Tensor[(13, 12, 15), uint64],) */;
    %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(130, 4), bool] */, dtype="bool") /* ty=Tensor[(130, 4), bool] */;
    %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(130, 4), bool] */, dtype="bool") /* ty=Tensor[(130, 4), bool] */;
    %8 = reshape(%6, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
    %9 = reshape(%7, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
    %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(75, 2), float64] */, dtype="float64") /* ty=Tensor[(75, 2), float64] */;
    %11 = cast(meta[relay.Constant][3] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
    %12 = reshape(%10, newshape=[1, 10, 15]) /* ty=Tensor[(1, 10, 15), float64] */;
    %13 = reshape(%11, newshape=[1183, 2]) /* ty=Tensor[(1183, 2), float64] */;
    %14 = @func_223(%12, %13) /* ty=(Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) */;
    %15 = cast(%var_3386, dtype="float64") /* ty=float64 */;
    %16 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
    %17 = divide(%15, %16) /* ty=Tensor[(6, 13, 2), float64] */;
    %18 = cast(%17, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
    %19 = cast(%var_3386, dtype="float64") /* ty=float64 */;
    %20 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
    %21 = cast(%var_3431, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
    %22 = cast(%var_3431, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
    %23 = reshape(%21, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %24 = reshape(%22, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %25 = @func_800(%23, %24) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
    %26 = %5.0;
    %27 = @func_3289(%8, %9) /* ty=Tensor[(8, 5, 13), bool] */;
    %28 = %14.2;
    %29 = power(%18, %19) /* ty=Tensor[(6, 13, 2), float64] */;
    %30 = @func_3314() /* ty=Tensor[(13, 12, 15), float32] */;
    %31 = %20.2;
    %32 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
    %33 = %25.1;
    (%26, meta[relay.Constant][0] /* ty=Tensor[(2340), float32] */, %27, meta[relay.Constant][1] /* ty=Tensor[(130, 4), bool] */, %28, meta[relay.Constant][2] /* ty=Tensor[(75, 2), float64] */, meta[relay.Constant][3] /* ty=Tensor[(2366), float64] */, %29, %30, %31, %32, %33, %var_3431)
  };
  %34(%var_3436, %var_3437, %var_3438) /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(2340), float32], Tensor[(8, 5, 13), bool], Tensor[(130, 4), bool], Tensor[(1183, 2), float64], Tensor[(75, 2), float64], Tensor[(2366), float64], Tensor[(6, 13, 2), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64]) */
}

def @func_6365() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_6363() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_8332(%var_8329: Tensor[(4, 9, 1), uint16], %var_8330: Tensor[(4, 9, 1), uint16], %var_8331: Tensor[(108), float32]) -> (Tensor[(4, 9, ?), uint16], Tensor[(9, 1, 12), float32], Tensor[(108), float32], Tensor[(4, 9, 1), float64]) {
  @func_8327(%var_8329, %var_8330, %var_8331) /* ty=(Tensor[(4, 9, ?), uint16], Tensor[(9, 1, 12), float32], Tensor[(108), float32], Tensor[(4, 9, 1), float64]) */
}

def @func_1799(%var_1797: Tensor[(16, 3, 3), int32], %var_1798: Tensor[(1512), float64]) -> (Tensor[(16, 3, 3), int32], Tensor[(14, 9, 12), float64], Tensor[(1512), float64]) {
  @func_1795(%var_1797, %var_1798) /* ty=(Tensor[(16, 3, 3), int32], Tensor[(14, 9, 12), float64], Tensor[(1512), float64]) */
}

def @func_6886() -> (Tensor[(13, 12, 15), int16],) {
  @func_6884() /* ty=(Tensor[(13, 12, 15), int16],) */
}

def @func_6915(%var_6913: Tensor[(11, 5, 2), float32]) -> (Tensor[(11, 5, 2), float32],) {
  @func_6912(%var_6913) /* ty=(Tensor[(11, 5, 2), float32],) */
}

def @func_7132() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %35 = @func_6884() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %36 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %37 = %35.0;
  %38 = %36.0;
  (%37, %38)
}

def @func_7959(%var_7926: Tensor[(264), float32], %var_7927: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], float32, Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), float32], Tensor[(840), int8]) {
  %39 = cast(-6.68812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %40 = cast(%var_7926, dtype="float32") /* ty=Tensor[(264), float32] */;
  %41 = cast(%var_7927, dtype="int8") /* ty=Tensor[(840), int8] */;
  %42 = reshape(%39, newshape=[]) /* ty=float32 */;
  %43 = reshape(%40, newshape=[3, 8, 11]) /* ty=Tensor[(3, 8, 11), float32] */;
  %44 = reshape(%41, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %45 = @func_7656(%42, %43, %44) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) */;
  %46 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %47 = cast(-6.68812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %48 = cast(%var_7926, dtype="float32") /* ty=Tensor[(264), float32] */;
  %49 = cast(%var_7927, dtype="int8") /* ty=Tensor[(840), int8] */;
  %50 = reshape(%47, newshape=[]) /* ty=float32 */;
  %51 = reshape(%48, newshape=[3, 8, 11]) /* ty=Tensor[(3, 8, 11), float32] */;
  %52 = reshape(%49, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %53 = @func_7656(%50, %51, %52) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) */;
  %54 = @func_7393() /* ty=Tensor[(13, 12, 15), float32] */;
  %55 = @func_3028() /* ty=Tensor[(13, 12, 15), float32] */;
  %56 = %45.0;
  %57 = %46.0;
  %58 = %53.1;
  (%54, %55, %56, -6.68812f /* ty=float32 */, %var_7926, %var_7927, %57, %58)
}

def @func_1402(%var_1400: Tensor[(13, 1, 4), bool], %var_1401: Tensor[(13, 14, 4), bool]) -> (Tensor[(13, 14, 4), bool],) {
  %62 = fn (%var_1393: Tensor[(13, 1, 4), bool], %var_1394: Tensor[(13, 14, 4), bool]) -> (Tensor[(13, 14, 4), bool],) {
    %59 = cast(%var_1393, dtype="bool") /* ty=Tensor[(13, 1, 4), bool] */;
    %60 = cast(%var_1394, dtype="bool") /* ty=Tensor[(13, 14, 4), bool] */;
    %61 = logical_and(%59, %60) /* ty=Tensor[(13, 14, 4), bool] */;
    (%61,)
  };
  %62(%var_1400, %var_1401) /* ty=(Tensor[(13, 14, 4), bool],) */
}

def @func_6818() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %63 = @func_5932() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %64 = @func_4062() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %65 = @func_5386() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %66 = @func_6279() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool]) */;
  %67 = %63.0;
  %68 = %64.0;
  %69 = %65.0;
  %70 = %66.0;
  (%67, %68, %69, %70)
}

def @func_8077() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_8075() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_5386() -> (Tensor[(13, 12, 15), float32],) {
  %71 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %72 = %71.1;
  (%72,)
}

def @func_7991(%var_7989: Tensor[(11, 12, 13), float32], %var_7990: Tensor[(11, 12, 13), float32]) -> (Tensor[(11, 12, 13), float32], Tensor[(13, 12, 15), float32]) {
  %80 = fn (%var_7975: Tensor[(11, 12, 13), float32], %var_7976: Tensor[(11, 12, 13), float32]) -> (Tensor[(11, 12, 13), float32], Tensor[(13, 12, 15), float32]) {
    %73 = cast(%var_7976, dtype="float32") /* ty=Tensor[(11, 12, 13), float32] */;
    %74 = shape_of(%var_7975, dtype="int32") /* ty=Tensor[(3), int32] */;
    %75 = cast(%var_7975, dtype="float32") /* ty=Tensor[(11, 12, 13), float32] */;
    %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %77 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %78 = mod(%75, %76) /* ty=Tensor[(11, 12, 13), float32] */;
    %79 = %77.0;
    (%78, %79)
  };
  %80(%var_7989, %var_7990) /* ty=(Tensor[(11, 12, 13), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_2045(%var_2044: Tensor[(12, 32), bool]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(12, 32), bool], Tensor[(7, 8, 15), int8], Tensor[(840), int8]) {
  %92 = fn (%var_2033: Tensor[(12, 32), bool]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(12, 32), bool], Tensor[(7, 8, 15), int8], Tensor[(840), int8]) {
    %81 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
    %82 = cast(%var_2033, dtype="bool") /* ty=Tensor[(12, 32), bool] */;
    %83 = reshape(%82, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
    %84 = @func_540(%83) /* ty=(Tensor[(16, 12, 2), bool],) */;
    %85 = cast(meta[relay.Constant][4] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
    %86 = reshape(%85, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), int8] */;
    %87 = @func_1927(%86) /* ty=(Tensor[(7, 8, 15), int8],) */;
    %88 = %81.1;
    %89 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
    %90 = %84.0;
    %91 = %87.0;
    (%88, %89, %90, %var_2033, %91, meta[relay.Constant][4] /* ty=Tensor[(840), int8] */)
  };
  %92(%var_2044) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(12, 32), bool], Tensor[(7, 8, 15), int8], Tensor[(840), int8]) */
}

def @func_5585() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %96 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
    %93 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %94 = @func_2632() /* ty=Tensor[(13, 12, 15), float32] */;
    %95 = %93.1;
    (%94, %95)
  };
  %96() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_1111() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %97 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %98 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  (%97, %98)
}

def @func_5279() -> Tensor[(13, 12, 15), float32] {
  @func_5277() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_2195() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */
}

def @func_2782() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  @func_2780() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */
}

def @func_2278() -> Tensor[(13, 12, 15), float32] {
  @func_1677() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_1679() -> Tensor[(13, 12, 15), float32] {
  @func_1677() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_8327(%var_8295: Tensor[(4, 9, 1), uint16], %var_8296: Tensor[(4, 9, 1), uint16], %var_8308: Tensor[(108), float32]) -> (Tensor[(4, 9, ?), uint16], Tensor[(9, 1, 12), float32], Tensor[(108), float32], Tensor[(4, 9, 1), float64]) {
  %99 = cast(%var_8296, dtype="uint16") /* ty=Tensor[(4, 9, 1), uint16] */;
  %100 = shape_of(%var_8295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_8295, dtype="uint16") /* ty=Tensor[(4, 9, 1), uint16] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %103 = cast(%var_8308, dtype="float32") /* ty=Tensor[(108), float32] */;
  %104 = reshape(%103, newshape=[9, 1, 12]) /* ty=Tensor[(9, 1, 12), float32] */;
  %105 = @func_8048(%104) /* ty=(Tensor[(9, 1, 12), float32],) */;
  %106 = cast(%var_8295, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %107 = maximum(%101, %102) /* ty=Tensor[(4, 9, ?), uint16] */;
  %108 = %105.0;
  %109 = acos(%106) /* ty=Tensor[(4, 9, 1), float64] */;
  (%107, %108, %var_8308, %109)
}

def @func_7394() -> Tensor[(13, 12, 15), float32] {
  %111 = fn () -> Tensor[(13, 12, 15), float32] {
    %110 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %110.0
  };
  %111() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_2242(%var_2241: Tensor[(13, 12, 15), int16]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int8]) {
  %130 = fn (%var_2235: Tensor[(13, 12, 15), int16]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int8]) {
    %112 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %113 = %112.0;
    %114 = cast(%113, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    %115 = reshape(%114, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
    %116 = @func_1342(%115) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %117 = @func_1848() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %118 = %117.0;
    %119 = cast(%118, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    %120 = reshape(%119, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
    %121 = @func_1342(%120) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %122 = %121.0;
    %123 = cast(%var_2235, dtype="int8") /* ty=Tensor[(13, 12, 15), int8] */;
    %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%122, dtype="int8") /* ty=Tensor[(13, 12, 15), int8] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %127 = %116.0;
    %128 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
    %129 = bitwise_and(%125, %126) /* ty=Tensor[(13, 12, 15), int8] */;
    (%113, %127, %128, %118, %129)
  };
  %130(%var_2241) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int8]) */
}

def @func_3549() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %131 = @func_1848() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %134 = reshape(%133, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %135 = @func_1342(%134) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %136 = %135.1;
  (%132, %136)
}

def @func_3621() -> Tensor[(13, 12, 15), int16] {
  @func_2247() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_4587() -> Tensor[(13, 12, 15), float32] {
  @func_3119() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_10037(%var_10036: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(150), float64], Tensor[(144), int32], Tensor[(150), float64], Tensor[(1512), float64]) {
  %148 = fn (%var_9984: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(150), float64], Tensor[(144), int32], Tensor[(150), float64], Tensor[(1512), float64]) {
    %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
    %138 = cast(%var_9984, dtype="float64") /* ty=Tensor[(150), float64] */;
    %139 = cast(meta[relay.Constant][6] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %140 = cast(meta[relay.Constant][5] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
    %141 = reshape(%137, newshape=[4, 36]) /* ty=Tensor[(4, 36), int32] */;
    %142 = reshape(%138, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %143 = reshape(%139, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %144 = reshape(%140, newshape=[4, 36]) /* ty=Tensor[(4, 36), int32] */;
    %145 = @func_7534(%141, %142, %143, %144) /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(1512), float64], Tensor[(13, 12, 15), float32], Tensor[(4, 36), bool], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(150), float64], int16, Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(14, 9, 12), uint32], Tensor[(4, 36), float64], Tensor[(4, 36), float64], Tensor[(13, 12, 15), int16]) */;
    %146 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
    %147 = %145.6;
    (%146, %147, meta[relay.Constant][5] /* ty=Tensor[(144), int32] */, %var_9984, meta[relay.Constant][6] /* ty=Tensor[(1512), float64] */)
  };
  %148(%var_10036) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(150), float64], Tensor[(144), int32], Tensor[(150), float64], Tensor[(1512), float64]) */
}

def @func_3684() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), bool]) {
  %154 = fn () -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), bool]) {
    %149 = @func_3590() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
    %150 = %149.1;
    %151 = cast(%150, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    %152 = reshape(%151, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
    %153 = @func_1284(%152) /* ty=Tensor[(13, 12, 15), bool] */;
    (%150, %153)
  };
  %154() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), bool]) */
}

def @func_2110() -> (Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) {
  @func_2108() /* ty=(Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) */
}

def @func_4626() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %155 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %156 = @func_4587() /* ty=Tensor[(13, 12, 15), float32] */;
  (%155, %156)
}

def @func_2108() -> (Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) {
  %157 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %158 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 16, 7), int64] */, dtype="int64") /* ty=Tensor[(2, 16, 7), int64] */;
  %159 = cast(meta[relay.Constant][8] /* ty=Tensor[(1512, 1), float64] */, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
  %160 = cast(meta[relay.Constant][8] /* ty=Tensor[(1512, 1), float64] */, dtype="float64") /* ty=Tensor[(1512, 1), float64] */;
  %161 = reshape(%159, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %162 = reshape(%160, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %163 = @func_800(%161, %162) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
  %164 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %165 = minimum(%157, %158) /* ty=Tensor[(2, 16, 7), int64] */;
  %166 = %163.1;
  %167 = %164.0;
  (%165, %166, meta[relay.Constant][8] /* ty=Tensor[(1512, 1), float64] */, %167)
}

def @func_4464(%var_4463: Tensor[(384), bool]) -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 12, 2), float64]) {
  %190 = fn (%var_4371: Tensor[(384), bool]) -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 12, 2), float64]) {
    %168 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
    %169 = %168.2;
    %170 = cast(%169, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    %171 = reshape(%170, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
    %172 = @func_1342(%171) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %173 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %174 = cast(%var_4371, dtype="bool") /* ty=Tensor[(384), bool] */;
    %175 = reshape(%174, newshape=[12, 32]) /* ty=Tensor[(12, 32), bool] */;
    %176 = @func_2043(%175) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(12, 32), bool], Tensor[(7, 8, 15), int8], Tensor[(840), int8]) */;
    %177 = %176.2;
    %178 = cast(%var_4371, dtype="uint64") /* ty=Tensor[(384), uint64] */;
    %179 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %180 = cast(%177, dtype="uint64") /* ty=Tensor[(16, 12, 2), uint64] */;
    %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %182 = subtract(%180, %181) /* ty=Tensor[(16, 12, 2), uint64] */;
    %183 = cast(%182, dtype="float32") /* ty=Tensor[(16, 12, 2), float32] */;
    %184 = cosh(%183) /* ty=Tensor[(16, 12, 2), float32] */;
    %185 = cast(%184, dtype="float64") /* ty=Tensor[(16, 12, 2), float64] */;
    %186 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
    %187 = %172.0;
    %188 = %173.1;
    %189 = acos(%185) /* ty=Tensor[(16, 12, 2), float64] */;
    (%169, %186, %187, %188, %189)
  };
  %190(%var_4463) /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 12, 2), float64]) */
}

def @func_1486() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) {
  %191 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %192 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %193 = %192.1;
  %194 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %197 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%193, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = cast(%193, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %201 = %191.0;
  %202 = less(%198, %199) /* ty=Tensor[(13, 12, 15), bool] */;
  %203 = cosh(%200) /* ty=Tensor[(13, 12, 15), float64] */;
  (%201, %202, %203)
}

def @func_5145() -> (Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_7802() -> Tensor[(13, 12, 15), float32] {
  @func_3007() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9459() -> (Tensor[(13, 12, 15), float32],) {
  %205 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %204 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
    (%204,)
  };
  %205() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_8925() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int32], Tensor[(13, 12, 15), float32]) {
  @func_8923() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int32], Tensor[(13, 12, 15), float32]) */
}

def @func_8871(%var_8869: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(840), int8], Tensor[(264), float32], Tensor[(840), int8]) {
  @func_8868(%var_8869) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(840), int8], Tensor[(264), float32], Tensor[(840), int8]) */
}

def @func_1286(%var_1285: Tensor[(13, 12, 15), float32]) -> Tensor[(13, 12, 15), bool] {
  %212 = fn (%var_1263: Tensor[(13, 12, 15), float32]) -> Tensor[(13, 12, 15), bool] {
    %206 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %207 = %206.0;
    %208 = cast(%var_1263, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
    %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
    %210 = cast(%207, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%210, %211) /* ty=Tensor[(13, 12, 15), bool] */
  };
  %212(%var_1285) /* ty=Tensor[(13, 12, 15), bool] */
}

def @func_3591() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  %216 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
    %213 = @func_3246() /* ty=(Tensor[(13, 12, 15), float64],) */;
    %214 = @func_2632() /* ty=Tensor[(13, 12, 15), float32] */;
    %215 = %213.0;
    (%214, %215)
  };
  %216() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */
}

def @func_2478(%var_2476: Tensor[(13, 12, 15), float32], %var_2477: Tensor[(13, 12, 15), float64]) -> (Tensor[(13, 12, 15), uint64],) {
  @func_2474(%var_2476, %var_2477) /* ty=(Tensor[(13, 12, 15), uint64],) */
}

def @func_3520() -> Tensor[(13, 12, 15), int32] {
  @func_3518() /* ty=Tensor[(13, 12, 15), int32] */
}

def @func_8269(%var_8246: Tensor[(264), float32]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 8, 16), float64], float64, Tensor[(2048), float64], Tensor[(13, 12, 15), float32], Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %217 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %218 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
  %219 = cast(-2.79268f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %220 = cast(meta[relay.Constant][9] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %221 = reshape(%219, newshape=[]) /* ty=float64 */;
  %222 = reshape(%220, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
  %223 = @func_6111(%221, %222) /* ty=(Tensor[(16, 8, 16), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %224 = cast(-2.79268f64 /* ty=float64 */, dtype="float32") /* ty=float32 */;
  %225 = cast(%var_8246, dtype="float32") /* ty=Tensor[(264), float32] */;
  %226 = cast(meta[relay.Constant][10] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %227 = reshape(%224, newshape=[]) /* ty=float32 */;
  %228 = reshape(%225, newshape=[3, 8, 11]) /* ty=Tensor[(3, 8, 11), float32] */;
  %229 = reshape(%226, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %230 = @func_7656(%227, %228, %229) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) */;
  %231 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %232 = %218.1;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %234 = reshape(%233, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %235 = @func_1211(%234) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %236 = %217.2;
  %237 = %223.0;
  %238 = %230.0;
  %239 = %231.1;
  %240 = %235.0;
  (%236, %232, %237, -2.79268f64 /* ty=float64 */, meta[relay.Constant][9] /* ty=Tensor[(2048), float64] */, %238, %var_8246, meta[relay.Constant][10] /* ty=Tensor[(840), int8] */, %239, %240)
}

def @func_4202(%var_4144: Tensor[(520), bool]) -> (Tensor[(13, 12, 15), float64], Tensor[(520), bool], Tensor[(8, 5, 13), float32], Tensor[(13, 12, 15), float32], Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64]) {
  %241 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %242 = cast(%var_4144, dtype="bool") /* ty=Tensor[(520), bool] */;
  %243 = cast(%var_4144, dtype="bool") /* ty=Tensor[(520), bool] */;
  %244 = reshape(%242, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
  %245 = reshape(%243, newshape=[8, 5, 13]) /* ty=Tensor[(8, 5, 13), bool] */;
  %246 = @func_3289(%244, %245) /* ty=Tensor[(8, 5, 13), bool] */;
  %247 = cast(%246, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %248 = sinh(%247) /* ty=Tensor[(8, 5, 13), float64] */;
  %249 = cast(%248, dtype="float32") /* ty=Tensor[(8, 5, 13), float32] */;
  %250 = cast(%248, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %251 = cast(%246, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %252 = %241.0;
  %253 = exp(%249) /* ty=Tensor[(8, 5, 13), float32] */;
  %254 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
  %255 = acosh(%250) /* ty=Tensor[(8, 5, 13), float64] */;
  %256 = sin(%251) /* ty=Tensor[(8, 5, 13), float64] */;
  (%252, %var_4144, %253, %254, %255, %256)
}

def @func_4628() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_4626() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_5477(%var_5475: Tensor[(75, 2), float64]) -> (Tensor[(12, 7, 14), float32], Tensor[(13, 13, 14), float64], Tensor[(75, 2), float64], Tensor[(2366, 1), float64]) {
  @func_5474(%var_5475) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(13, 13, 14), float64], Tensor[(75, 2), float64], Tensor[(2366, 1), float64]) */
}

def @func_4682() -> Tensor[(13, 12, 15), float32] {
  %257 = @func_3590() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %258 = %257.0;
  %259 = cast(%258, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  atan(%259) /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_7260() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(3, 2, 10), float64], Tensor[(3, 2), float64], Tensor[(1, 60), float64], Tensor[(16, 13, 16), float32], Tensor[(14, 9, 1), float64], Tensor[(63, 2), float32]) {
  @func_7258() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(3, 2, 10), float64], Tensor[(3, 2), float64], Tensor[(1, 60), float64], Tensor[(16, 13, 16), float32], Tensor[(14, 9, 1), float64], Tensor[(63, 2), float32]) */
}

def @func_8868(%var_8862: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(840), int8], Tensor[(264), float32], Tensor[(840), int8]) {
  %260 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %261 = @func_8343() /* ty=(Tensor[(13, 12, 15), float64],) */;
  %262 = cast(meta[relay.Constant][11] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %263 = cast(%var_8862, dtype="int8") /* ty=Tensor[(840), int8] */;
  %264 = reshape(%262, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %265 = reshape(%263, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %266 = @func_7959(%264, %265) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], float32, Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), float32], Tensor[(840), int8]) */;
  %267 = %260.1;
  %268 = %261.0;
  %269 = %266.5;
  (%267, %268, %269, meta[relay.Constant][11] /* ty=Tensor[(264), float32] */, %var_8862)
}

def @func_2579(%var_2558: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float32],) {
  %270 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
  %271 = cast(%var_2558, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %275 = mod(%273, %274) /* ty=Tensor[(13, 12, 15), float32] */;
  (%275,)
}

def @func_5884(%var_5882: int16, %var_5883: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) {
  %298 = fn (%var_5831: int16, %var_5833: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) {
    %276 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
    %277 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
    %278 = @func_5720() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) */;
    %279 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %280 = cast(%var_5831, dtype="int16") /* ty=int16 */;
    %281 = cast(meta[relay.Constant][12] /* ty=Tensor[(216), int16] */, dtype="int16") /* ty=Tensor[(216), int16] */;
    %282 = cast(%var_5833, dtype="float64") /* ty=Tensor[(150), float64] */;
    %283 = reshape(%280, newshape=[]) /* ty=int16 */;
    %284 = reshape(%281, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), int16] */;
    %285 = reshape(%282, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %286 = @func_3193(%283, %284, %285) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) */;
    %287 = %286.5;
    %288 = cast(%287, dtype="int16") /* ty=Tensor[(2, 9, 12), int16] */;
    %289 = cast(%var_5831, dtype="int16") /* ty=int16 */;
    %290 = %276.2;
    %291 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
    %292 = %277.1;
    %293 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
    %294 = %278.1;
    %295 = %279.0;
    %296 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
    %297 = bitwise_xor(%288, %289) /* ty=Tensor[(2, 9, 12), int16] */;
    (%290, %291, %292, meta[relay.Constant][12] /* ty=Tensor[(216), int16] */, %var_5833, %293, %294, %295, %296, %297)
  };
  %298(%var_5882, %var_5883) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) */
}

def @func_7568(%var_7567: int16) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], int16, Tensor[(150), float64]) {
  %307 = fn (%var_7559: int16) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], int16, Tensor[(150), float64]) {
    %299 = @func_5932() /* ty=(Tensor[(13, 12, 15), int16],) */;
    %300 = cast(%var_7559, dtype="int16") /* ty=int16 */;
    %301 = cast(meta[relay.Constant][13] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %302 = reshape(%300, newshape=[]) /* ty=int16 */;
    %303 = reshape(%301, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %304 = @func_5881(%302, %303) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) */;
    %305 = %299.0;
    %306 = %304.8;
    (%305, %306, %var_7559, meta[relay.Constant][13] /* ty=Tensor[(150), float64] */)
  };
  %307(%var_7567) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], int16, Tensor[(150), float64]) */
}

def @func_9135() -> Tensor[(13, 12, 15), float64] {
  %308 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %308.2
}

def @func_8139() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %313 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
    %309 = @func_7759() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
    %310 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %311 = %309.0;
    %312 = %310.1;
    (%311, %312)
  };
  %313() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_1821() -> (Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) {
  %320 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) {
    %314 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %315 = cast(meta[relay.Constant][14] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
    %316 = reshape(%315, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
    %317 = @func_540(%316) /* ty=(Tensor[(16, 12, 2), bool],) */;
    %318 = %314.0;
    %319 = %317.0;
    (%318, %319, meta[relay.Constant][14] /* ty=Tensor[(384), bool] */)
  };
  %320() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */
}

def @func_1213(%var_1212: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) {
  %330 = fn (%var_1180: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) {
    %321 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %322 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
    %323 = cast(%var_1180, dtype="uint32") /* ty=Tensor[(13, 12, 15), uint32] */;
    %324 = shape_of(%322, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%322, dtype="uint32") /* ty=Tensor[(13, 12, 15), uint32] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %327 = %321.0;
    %328 = multiply(%325, %326) /* ty=Tensor[(13, 12, 15), uint32] */;
    %329 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
    (%327, %328, %329)
  };
  %330(%var_1212) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */
}

def @func_5207() -> Tensor[(13, 12, 15), float32] {
  %332 = fn () -> Tensor[(13, 12, 15), float32] {
    %331 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %331.1
  };
  %332() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9137() -> Tensor[(13, 12, 15), float64] {
  @func_9135() /* ty=Tensor[(13, 12, 15), float64] */
}

def @func_5046(%var_5044: Tensor[(15, 4), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_5043(%var_5044) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_5054() -> (Tensor[(13, 12, 15), float32],) {
  %335 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %333 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %334 = %333.2;
    (%334,)
  };
  %335() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_2632() -> Tensor[(13, 12, 15), float32] {
  %336 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
  %337 = cast(%336, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  sinh(%337) /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_2689() -> (Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) {
  @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */
}

def @func_2885() -> Tensor[(13, 12, 15), float32] {
  %338 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_2632() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %338() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_7804() -> Tensor[(13, 12, 15), float32] {
  @func_7802() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_4716(%var_4708: Tensor[(14, 9, 1), float32]) -> (Tensor[(14, 9, 1), float64],) {
  %339 = cast(%var_4708, dtype="float32") /* ty=Tensor[(14, 9, 1), float32] */;
  %340 = sigmoid(%339) /* ty=Tensor[(14, 9, 1), float32] */;
  %341 = cast(%340, dtype="float64") /* ty=Tensor[(14, 9, 1), float64] */;
  %342 = asinh(%341) /* ty=Tensor[(14, 9, 1), float64] */;
  (%342,)
}

def @func_5540() -> (Tensor[(13, 12, 15), float64],) {
  %345 = fn () -> (Tensor[(13, 12, 15), float64],) {
    %343 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
    %344 = %343.0;
    (%344,)
  };
  %345() /* ty=(Tensor[(13, 12, 15), float64],) */
}

def @func_8085() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %350 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
    %346 = @func_5964() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %347 = @func_4263() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %348 = %346.0;
    %349 = %347.1;
    (%348, %349)
  };
  %350() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_5720() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) {
  %351 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
  %352 = @func_3590() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %353 = %351.0;
  %354 = %352.1;
  (%353, %354)
}

def @func_6279() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool]) {
  %355 = @func_5584() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %356 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %357 = %355.1;
  %358 = %356.0;
  (%357, %358)
}

def @func_7963(%var_7961: Tensor[(264), float32], %var_7962: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], float32, Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), float32], Tensor[(840), int8]) {
  @func_7959(%var_7961, %var_7962) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], float32, Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), float32], Tensor[(840), int8]) */
}

def @func_2428() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) {
  @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */
}

def @func_5388() -> (Tensor[(13, 12, 15), float32],) {
  @func_5386() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_8272(%var_8270: Tensor[(264), float32]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 8, 16), float64], float64, Tensor[(2048), float64], Tensor[(13, 12, 15), float32], Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  @func_8269(%var_8270) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], Tensor[(16, 8, 16), float64], float64, Tensor[(2048), float64], Tensor[(13, 12, 15), float32], Tensor[(264), float32], Tensor[(840), int8], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */
}

def @func_8343() -> (Tensor[(13, 12, 15), float64],) {
  %359 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %360 = %359.0;
  (%360,)
}

def @func_8591(%var_8560: float64) -> (Tensor[(13, 12, 15), float32], Tensor[(1, 10, 4), float32], Tensor[(13, 12, 15), float32]) {
  %361 = @func_2780() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %362 = cast(%var_8560, dtype="float64") /* ty=float64 */;
  %363 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 10, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 4), float64] */;
  %364 = floor_divide(%362, %363) /* ty=Tensor[(1, 10, 4), float64] */;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(1, 10, 4), float32] */;
  %366 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
  %367 = %361.1;
  %368 = asin(%365) /* ty=Tensor[(1, 10, 4), float32] */;
  %369 = %366.1;
  (%367, %368, %369)
}

def @func_226(%var_224: Tensor[(1, 10, 15), float64], %var_225: Tensor[(1183, 2), float64]) -> (Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) {
  %375 = fn (%var_209: Tensor[(1, 10, 15), float64], %var_218: Tensor[(1183, 2), float64]) -> (Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) {
    %370 = cast(%var_209, dtype="float64") /* ty=Tensor[(1, 10, 15), float64] */;
    %371 = cast(%var_218, dtype="float64") /* ty=Tensor[(1183, 2), float64] */;
    %372 = reshape(%371, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
    %373 = asinh(%370) /* ty=Tensor[(1, 10, 15), float64] */;
    %374 = @func_30(%372) /* ty=Tensor[(13, 13, 14), float64] */;
    (%373, %374, %var_218)
  };
  %375(%var_224, %var_225) /* ty=(Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) */
}

def @func_6168() -> (Tensor[(13, 12, 15), float32], Tensor[(1512, 1), float64]) {
  %379 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(1512, 1), float64]) {
    %376 = @func_2108() /* ty=(Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) */;
    %377 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
    %378 = %376.2;
    (%377, %378)
  };
  %379() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(1512, 1), float64]) */
}

def @func_5737(%var_5735: Tensor[(3, 2, 1), float64], %var_5736: Tensor[(3, 2, 10), float64]) -> Tensor[(3, 2, 10), float64] {
  @func_5733(%var_5735, %var_5736) /* ty=Tensor[(3, 2, 10), float64] */
}

def @func_9682() -> (Tensor[(13, 12, 15), float32],) {
  %380 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %381 = %380.0;
  (%381,)
}

def @func_9684() -> (Tensor[(13, 12, 15), float32],) {
  @func_9682() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_1058() -> Tensor[(13, 12, 15), float32] {
  @func_1045() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_6884() -> (Tensor[(13, 12, 15), int16],) {
  %382 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
  (%382,)
}

def @func_4062() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %383 = @func_3345() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %384 = %383.0;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %386 = reshape(%385, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %387 = @func_1211(%386) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %388 = %387.0;
  (%384, %388)
}

def @func_6363() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %389 = @func_4626() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %390 = %389.0;
  %391 = cast(%390, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %392 = @func_3982() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %393 = @func_5964() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %394 = rsqrt(%391) /* ty=Tensor[(13, 12, 15), float32] */;
  %395 = @func_5184() /* ty=Tensor[(13, 12, 15), int16] */;
  %396 = %392.0;
  %397 = %393.0;
  (%394, %395, %396, %397)
}

def @func_2280() -> Tensor[(13, 12, 15), float32] {
  @func_2278() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9014() -> Tensor[(13, 12, 15), float32] {
  %398 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_2806() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %398() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_1978() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) {
  %406 = fn () -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) {
    %399 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
    %400 = cast(%399, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
    %401 = cast(%399, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    %402 = reshape(%401, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
    %403 = @func_1342(%402) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %404 = tan(%400) /* ty=Tensor[(13, 12, 15), float64] */;
    %405 = %403.0;
    (%404, %405)
  };
  %406() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */
}

def @func_6820() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_6818() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_3119() -> Tensor[(13, 12, 15), float32] {
  %407 = @func_2108() /* ty=(Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) */;
  %407.3
}

def @func_3623() -> Tensor[(13, 12, 15), int16] {
  @func_3621() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_3936(%var_3934: Tensor[(216), uint32], %var_3935: Tensor[(384), bool]) -> (Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) {
  %421 = fn (%var_3871: Tensor[(216), uint32], %var_3884: Tensor[(384), bool]) -> (Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) {
    %408 = cast(%var_3871, dtype="uint32") /* ty=Tensor[(216), uint32] */;
    %409 = cast(%var_3871, dtype="uint32") /* ty=Tensor[(216), uint32] */;
    %410 = reshape(%408, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), uint32] */;
    %411 = reshape(%409, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), uint32] */;
    %412 = @func_2933(%410, %411) /* ty=Tensor[(9, 2, 12), uint32] */;
    %413 = cast(%412, dtype="float64") /* ty=Tensor[(9, 2, 12), float64] */;
    %414 = cast(%var_3884, dtype="bool") /* ty=Tensor[(384), bool] */;
    %415 = reshape(%414, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
    %416 = @func_540(%415) /* ty=(Tensor[(16, 12, 2), bool],) */;
    %417 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
    %418 = asin(%413) /* ty=Tensor[(9, 2, 12), float64] */;
    %419 = %416.0;
    %420 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
    (%417, %var_3871, %418, %419, %var_3884, %420)
  };
  %421(%var_3934, %var_3935) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) */
}

def @func_9217(%var_9215: Tensor[(7, 11, 1), float64]) -> (Tensor[(7, 11, 1), float64], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) {
  @func_9214(%var_9215) /* ty=(Tensor[(7, 11, 1), float64], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */
}

def @func_8494(%var_8492: Tensor[(1512), float64]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(1512), bool]) {
  @func_8491(%var_8492) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(1512), bool]) */
}

def @func_3346() -> (Tensor[(13, 12, 15), float32],) {
  %424 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %422 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
    %423 = %422.0;
    (%423,)
  };
  %424() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_4684() -> Tensor[(13, 12, 15), float32] {
  @func_4682() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_8733() -> Tensor[(13, 12, 15), int16] {
  %425 = fn () -> Tensor[(13, 12, 15), int16] {
    @func_3621() /* ty=Tensor[(13, 12, 15), int16] */
  };
  %425() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_5722() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) {
  @func_5720() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) */
}

def @func_2582(%var_2580: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float32],) {
  @func_2579(%var_2580) /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_6912(%var_6909: Tensor[(11, 5, 2), float32]) -> (Tensor[(11, 5, 2), float32],) {
  %426 = cast(%var_6909, dtype="float32") /* ty=Tensor[(11, 5, 2), float32] */;
  %427 = cosh(%426) /* ty=Tensor[(11, 5, 2), float32] */;
  (%427,)
}

def @func_5043(%var_5022: Tensor[(15, 4), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %428 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %429 = %428.2;
  %430 = cast(%429, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %431 = reshape(%430, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %432 = @func_1211(%431) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %433 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %435 = reshape(%434, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %436 = @func_1342(%435) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %437 = cast(%var_5022, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %438 = reshape(%437, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %439 = @func_4796(%438) /* ty=(Tensor[(2, 15, 2), uint16],) */;
  %440 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %441 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %442 = %441.0;
  %443 = cast(%442, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %444 = exp(%443) /* ty=Tensor[(13, 12, 15), float64] */;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %446 = %432.2;
  %447 = %436.1;
  %448 = %439.0;
  %449 = %440.0;
  %450 = sin(%445) /* ty=Tensor[(13, 12, 15), float32] */;
  (%433, %429, %446, %447, %448, %var_5022, %449, %450)
}

def @func_1126() -> (Tensor[(13, 12, 15), float32],) {
  %451 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %452 = %451.0;
  (%452,)
}

def @func_5460() -> (Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) {
  %453 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %454 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
  %455 = %453.1;
  %456 = %454.0;
  (%455, %456)
}

def @func_3645(%var_3641: Tensor[(13, 15, 2), float32]) -> Tensor[(13, 15, 2), float32] {
  %457 = cast(%var_3641, dtype="float32") /* ty=Tensor[(13, 15, 2), float32] */;
  exp(%457) /* ty=Tensor[(13, 15, 2), float32] */
}

def @func_4548(%var_4523: Tensor[(420, 2), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(420, 2), uint64]) {
  %458 = cast(%var_4523, dtype="int8") /* ty=Tensor[(420, 2), int8] */;
  %459 = reshape(%458, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), int8] */;
  %460 = @func_1927(%459) /* ty=(Tensor[(7, 8, 15), int8],) */;
  %461 = %460.0;
  %462 = cast(%461, dtype="uint64") /* ty=Tensor[(7, 8, 15), uint64] */;
  %463 = shape_of(%var_4523, dtype="int32") /* ty=Tensor[(2), int32] */;
  %464 = cast(%var_4523, dtype="uint64") /* ty=Tensor[(420, 2), uint64] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %466 = @func_3007() /* ty=Tensor[(13, 12, 15), float32] */;
  %467 = subtract(%464, %465) /* ty=Tensor[(420, 2), uint64] */;
  (%466, %467)
}

def @func_9290() -> (Tensor[(13, 12, 15), float64],) {
  %470 = fn () -> (Tensor[(13, 12, 15), float64],) {
    %468 = @func_5720() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float64]) */;
    %469 = %468.1;
    (%469,)
  };
  %470() /* ty=(Tensor[(13, 12, 15), float64],) */
}

def @func_3648(%var_3646: Tensor[(13, 15, 2), float32]) -> Tensor[(13, 15, 2), float32] {
  @func_3645(%var_3646) /* ty=Tensor[(13, 15, 2), float32] */
}

def @func_9595(%var_9593: Tensor[(13, 8, 12), float32], %var_9594: Tensor[(13, 8, 12), float32]) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16], int16, Tensor[(13, 12, 15), float32]) {
  @func_9591(%var_9593, %var_9594) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16], int16, Tensor[(13, 12, 15), float32]) */
}

def @func_803(%var_801: Tensor[(14, 9, 12), float64], %var_802: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) {
  %479 = fn (%var_784: Tensor[(14, 9, 12), float64], %var_785: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) {
    %471 = cast(%var_785, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
    %472 = shape_of(%var_784, dtype="int32") /* ty=Tensor[(3), int32] */;
    %473 = cast(%var_784, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
    %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %475 = cast(meta[relay.Constant][16] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
    %476 = reshape(%475, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
    %477 = floor_divide(%473, %474) /* ty=Tensor[(14, 9, 12), float64] */;
    %478 = @func_30(%476) /* ty=Tensor[(13, 13, 14), float64] */;
    (%477, %478, meta[relay.Constant][16] /* ty=Tensor[(2366), float64] */)
  };
  %479(%var_801, %var_802) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */
}

def @main() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float64]) {
  %480 = @func_8519() /* ty=Tensor[(13, 12, 15), float64] */;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %482 = @func_5184() /* ty=Tensor[(13, 12, 15), int16] */;
  %483 = log(%481) /* ty=Tensor[(13, 12, 15), float64] */;
  (%482, %483)
}

def @func_9591(%var_9512: Tensor[(13, 8, 12), float32], %var_9513: Tensor[(13, 8, 12), float32]) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16], int16, Tensor[(13, 12, 15), float32]) {
  %484 = cast(%var_9513, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
  %485 = shape_of(%var_9512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%var_9512, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %488 = @func_6688() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) */;
  %489 = @func_3345() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %490 = @func_9458() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %491 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %492 = @func_5460() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) */;
  %493 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %494 = reshape(%493, newshape=[]) /* ty=int16 */;
  %495 = @func_7566(%494) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), int16], int16, Tensor[(150), float64]) */;
  %496 = @func_5386() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %497 = mod(%486, %487) /* ty=Tensor[(13, 8, 12), float32] */;
  %498 = %488.0;
  %499 = %489.0;
  %500 = %490.0;
  %501 = %491.0;
  %502 = %492.1;
  %503 = %495.1;
  %504 = %496.0;
  (%497, %498, %499, %500, %501, %502, %503, meta[relay.Constant][17] /* ty=int16 */, %504)
}

def @func_8075() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %505 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %506 = %505.0;
  %507 = cast(%506, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %508 = reshape(%507, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %509 = @func_1211(%508) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), uint32], Tensor[(13, 12, 15), float32]) */;
  %510 = %509.2;
  %511 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  (%506, %510, %511)
}

def @func_3292(%var_3290: Tensor[(8, 5, 13), bool], %var_3291: Tensor[(8, 5, 13), bool]) -> Tensor[(8, 5, 13), bool] {
  %516 = fn (%var_3282: Tensor[(8, 5, 13), bool], %var_3283: Tensor[(8, 5, 13), bool]) -> Tensor[(8, 5, 13), bool] {
    %512 = cast(%var_3283, dtype="bool") /* ty=Tensor[(8, 5, 13), bool] */;
    %513 = shape_of(%var_3282, dtype="int32") /* ty=Tensor[(3), int32] */;
    %514 = cast(%var_3282, dtype="bool") /* ty=Tensor[(8, 5, 13), bool] */;
    %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%514, %515) /* ty=Tensor[(8, 5, 13), bool] */
  };
  %516(%var_3290, %var_3291) /* ty=Tensor[(8, 5, 13), bool] */
}

def @func_4064() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_4062() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_8126() -> (Tensor[(13, 12, 15), float32],) {
  %519 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %517 = @func_4263() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %518 = %517.2;
    (%518,)
  };
  %519() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_2063() -> (Tensor[(13, 12, 15), float32],) {
  @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_9263() -> Tensor[(13, 12, 15), float32] {
  @func_4587() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_33(%var_31: Tensor[(13, 13, 14), float64]) -> Tensor[(13, 13, 14), float64] {
  @func_30(%var_31) /* ty=Tensor[(13, 13, 14), float64] */
}

def @func_9265() -> Tensor[(13, 12, 15), float32] {
  @func_9263() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9611() -> (Tensor[(13, 12, 15), float64],) {
  %522 = fn () -> (Tensor[(13, 12, 15), float64],) {
    %520 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
    %521 = %520.2;
    (%521,)
  };
  %522() /* ty=(Tensor[(13, 12, 15), float64],) */
}

def @func_7375() -> (Tensor[(16, 12, 2), bool], Tensor[(10, 14, 14), uint64], Tensor[(10, 14, 14), float64], Tensor[(10, 14, 14), float64]) {
  %541 = fn () -> (Tensor[(16, 12, 2), bool], Tensor[(10, 14, 14), uint64], Tensor[(10, 14, 14), float64], Tensor[(10, 14, 14), float64]) {
    %523 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
    %524 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 14), int64] */, dtype="bool") /* ty=Tensor[(10, 14, 14), bool] */;
    %525 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 14, 14), int64] */, dtype="bool") /* ty=Tensor[(10, 14, 14), bool] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %528 = not_equal(%526, %527) /* ty=Tensor[(10, 14, 14), bool] */;
    %529 = cast(%528, dtype="uint64") /* ty=Tensor[(10, 14, 14), uint64] */;
    %530 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %531 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 14), int64] */, dtype="uint64") /* ty=Tensor[(10, 14, 14), uint64] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %533 = cast(%528, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
    %534 = sqrt(%533) /* ty=Tensor[(10, 14, 14), float32] */;
    %535 = cast(%534, dtype="float64") /* ty=Tensor[(10, 14, 14), float64] */;
    %536 = cast(%534, dtype="float64") /* ty=Tensor[(10, 14, 14), float64] */;
    %537 = %523.1;
    %538 = bitwise_and(%531, %532) /* ty=Tensor[(10, 14, 14), uint64] */;
    %539 = acos(%535) /* ty=Tensor[(10, 14, 14), float64] */;
    %540 = sigmoid(%536) /* ty=Tensor[(10, 14, 14), float64] */;
    (%537, %538, %539, %540)
  };
  %541() /* ty=(Tensor[(16, 12, 2), bool], Tensor[(10, 14, 14), uint64], Tensor[(10, 14, 14), float64], Tensor[(10, 14, 14), float64]) */
}

def @func_9722(%var_9720: float64, %var_9721: Tensor[(14, 5, 6), float64]) -> (Tensor[(14, 5, 6), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(150), float64]) {
  %555 = fn (%var_9695: float64, %var_9696: Tensor[(14, 5, 6), float64]) -> (Tensor[(14, 5, 6), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(150), float64]) {
    %542 = cast(%var_9695, dtype="float64") /* ty=float64 */;
    %543 = cast(%var_9696, dtype="float64") /* ty=Tensor[(14, 5, 6), float64] */;
    %544 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %545 = @func_8075() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %546 = cast(%var_9695, dtype="int16") /* ty=int16 */;
    %547 = cast(meta[relay.Constant][20] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %548 = reshape(%546, newshape=[]) /* ty=int16 */;
    %549 = reshape(%547, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %550 = @func_5881(%548, %549) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), int16]) */;
    %551 = mod(%542, %543) /* ty=Tensor[(14, 5, 6), float64] */;
    %552 = %544.0;
    %553 = %545.1;
    %554 = %550.5;
    (%551, %552, %553, %554, meta[relay.Constant][20] /* ty=Tensor[(150), float64] */)
  };
  %555(%var_9720, %var_9721) /* ty=(Tensor[(14, 5, 6), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(150), float64]) */
}

def @func_1610() -> (Tensor[(13, 12, 15), float32],) {
  @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_5143() -> (Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %556 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %557 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%556, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %562 = not_equal(%559, %560) /* ty=Tensor[(13, 12, 15), bool] */;
  %563 = @func_4587() /* ty=Tensor[(13, 12, 15), float32] */;
  %564 = %561.0;
  (%562, %563, %564)
}

def @func_7661(%var_7658: float32, %var_7659: Tensor[(3, 8, 11), float32], %var_7660: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) {
  @func_7656(%var_7658, %var_7659, %var_7660) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) */
}

def @func_9214(%var_9189: Tensor[(7, 11, 1), float64]) -> (Tensor[(7, 11, 1), float64], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) {
  %565 = cast(%var_9189, dtype="float64") /* ty=Tensor[(7, 11, 1), float64] */;
  %566 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %567 = @func_8343() /* ty=(Tensor[(13, 12, 15), float64],) */;
  %568 = acos(%565) /* ty=Tensor[(7, 11, 1), float64] */;
  %569 = %566.0;
  %570 = %567.0;
  (%568, %569, %570)
}

def @func_6690() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) {
  @func_6688() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) */
}

def @func_2687() -> (Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) {
  %571 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 16), float64] */;
  %572 = log2(%571) /* ty=Tensor[(16, 13, 16), float64] */;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(16, 13, 16), float64] */;
  %574 = sin(%573) /* ty=Tensor[(16, 13, 16), float64] */;
  %575 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 13, 16), float64] */, dtype="bool") /* ty=Tensor[(16, 13, 16), bool] */;
  %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%574, dtype="bool") /* ty=Tensor[(16, 13, 16), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %579 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %580 = greater_equal(%577, %578) /* ty=Tensor[(16, 13, 16), bool] */;
  %581 = %579.0;
  (%580, %581)
}

def @func_6281() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool]) {
  @func_6279() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool]) */
}

def @func_7539(%var_7535: Tensor[(4, 36), int32], %var_7536: Tensor[(150), float64], %var_7537: Tensor[(14, 9, 12), float64], %var_7538: Tensor[(4, 36), int32]) -> (Tensor[(13, 12, 15), uint64], Tensor[(1512), float64], Tensor[(13, 12, 15), float32], Tensor[(4, 36), bool], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(150), float64], int16, Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(14, 9, 12), uint32], Tensor[(4, 36), float64], Tensor[(4, 36), float64], Tensor[(13, 12, 15), int16]) {
  %638 = fn (%var_7429: Tensor[(4, 36), int32], %var_7447: Tensor[(150), float64], %var_7475: Tensor[(14, 9, 12), float64], %var_7488: Tensor[(4, 36), int32]) -> (Tensor[(13, 12, 15), uint64], Tensor[(1512), float64], Tensor[(13, 12, 15), float32], Tensor[(4, 36), bool], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(150), float64], int16, Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(14, 9, 12), uint32], Tensor[(4, 36), float64], Tensor[(4, 36), float64], Tensor[(13, 12, 15), int16]) {
    %582 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
    %583 = cast(%var_7429, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
    %584 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %585 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 36), int32] */, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %587 = cast(meta[relay.Constant][26] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
    %588 = reshape(%587, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), bool] */;
    %589 = @func_540(%588) /* ty=(Tensor[(16, 12, 2), bool],) */;
    %590 = cast(meta[relay.Constant][27] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %591 = cast(meta[relay.Constant][28] /* ty=Tensor[(216), int16] */, dtype="int16") /* ty=Tensor[(216), int16] */;
    %592 = cast(%var_7447, dtype="float64") /* ty=Tensor[(150), float64] */;
    %593 = reshape(%590, newshape=[]) /* ty=int16 */;
    %594 = reshape(%591, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), int16] */;
    %595 = reshape(%592, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %596 = @func_3193(%593, %594, %595) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) */;
    %597 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %598 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
    %599 = cast(meta[relay.Constant][24] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %600 = reshape(%598, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), int32] */;
    %601 = reshape(%599, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %602 = @func_1795(%600, %601) /* ty=(Tensor[(16, 3, 3), int32], Tensor[(14, 9, 12), float64], Tensor[(1512), float64]) */;
    %603 = %602.1;
    %604 = cast(%var_7475, dtype="uint32") /* ty=Tensor[(14, 9, 12), uint32] */;
    %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
    %606 = cast(%603, dtype="uint32") /* ty=Tensor[(14, 9, 12), uint32] */;
    %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %608 = cast(%var_7488, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
    %609 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %610 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
    %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %612 = bitwise_and(%610, %611) /* ty=Tensor[(4, 36), int32] */;
    %613 = cast(%612, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %614 = acos(%613) /* ty=Tensor[(4, 36), float64] */;
    %615 = cast(%612, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
    %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(2), int32] */;
    %617 = cast(%614, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %619 = greater_equal(%617, %618) /* ty=Tensor[(4, 36), bool] */;
    %620 = cast(%619, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %621 = log10(%620) /* ty=Tensor[(4, 36), float64] */;
    %622 = cast(%621, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %623 = cast(%614, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %624 = shape_of(%621, dtype="int32") /* ty=Tensor[(2), int32] */;
    %625 = cast(%621, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %627 = @func_6884() /* ty=(Tensor[(13, 12, 15), int16],) */;
    %628 = %582.0;
    %629 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
    %630 = less_equal(%585, %586) /* ty=Tensor[(4, 36), bool] */;
    %631 = %589.0;
    %632 = %596.2;
    %633 = %597.0;
    %634 = multiply(%606, %607) /* ty=Tensor[(14, 9, 12), uint32] */;
    %635 = exp(%622) /* ty=Tensor[(4, 36), float64] */;
    %636 = add(%625, %626) /* ty=Tensor[(4, 36), float64] */;
    %637 = %627.0;
    (%628, meta[relay.Constant][24] /* ty=Tensor[(1512), float64] */, %629, %630, %631, meta[relay.Constant][26] /* ty=Tensor[(384), bool] */, %632, meta[relay.Constant][27] /* ty=int16 */, meta[relay.Constant][28] /* ty=Tensor[(216), int16] */, %var_7447, %633, %634, %635, %636, %637)
  };
  %638(%var_7535, %var_7536, %var_7537, %var_7538) /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(1512), float64], Tensor[(13, 12, 15), float32], Tensor[(4, 36), bool], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(150), float64], int16, Tensor[(216), int16], Tensor[(150), float64], Tensor[(13, 12, 15), float32], Tensor[(14, 9, 12), uint32], Tensor[(4, 36), float64], Tensor[(4, 36), float64], Tensor[(13, 12, 15), int16]) */
}

def @func_4906() -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64]) {
  %644 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64]) {
    %639 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %640 = reshape(%639, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
    %641 = @func_4796(%640) /* ty=(Tensor[(2, 15, 2), uint16],) */;
    %642 = @func_2884() /* ty=Tensor[(13, 12, 15), float32] */;
    %643 = %641.0;
    (%642, %643, meta[relay.Constant][29] /* ty=Tensor[(15, 4), float64] */)
  };
  %644() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(15, 4), float64]) */
}

def @func_2807() -> Tensor[(13, 12, 15), float32] {
  %645 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_1542() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %645() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_8491(%var_8479: Tensor[(1512), float64]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(1512), bool]) {
  %646 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %647 = cast(meta[relay.Constant][30] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %648 = cast(meta[relay.Constant][30] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %649 = reshape(%647, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %650 = reshape(%648, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %651 = @func_800(%649, %650) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
  %652 = @func_5460() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) */;
  %653 = @func_4849() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */;
  %654 = cast(%var_8479, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %655 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(1512), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %656 = cast(meta[relay.Constant][30] /* ty=Tensor[(1512), float64] */, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?), bool] */;
  %658 = %646.1;
  %659 = %651.1;
  %660 = %652.0;
  %661 = %653.0;
  %662 = @func_2632() /* ty=Tensor[(13, 12, 15), float32] */;
  %663 = logical_or(%656, %657) /* ty=Tensor[(1512), bool] */;
  (%658, %659, %660, %661, %662, %663)
}

def @func_7258() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(3, 2, 10), float64], Tensor[(3, 2), float64], Tensor[(1, 60), float64], Tensor[(16, 13, 16), float32], Tensor[(14, 9, 1), float64], Tensor[(63, 2), float32]) {
  %664 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
  %665 = %664.0;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %667 = reshape(%666, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %668 = @func_1342(%667) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %669 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %670 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %671 = reshape(%669, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float64] */;
  %672 = reshape(%670, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %673 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
  %674 = %673.0;
  %675 = cast(%674, dtype="float32") /* ty=Tensor[(16, 13, 16), float32] */;
  %676 = cast(meta[relay.Constant][33] /* ty=Tensor[(63, 2), float32] */, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
  %677 = reshape(%676, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float32] */;
  %678 = @func_4716(%677) /* ty=(Tensor[(14, 9, 1), float64],) */;
  %679 = %668.0;
  %680 = @func_5733(%671, %672) /* ty=Tensor[(3, 2, 10), float64] */;
  %681 = rsqrt(%675) /* ty=Tensor[(16, 13, 16), float32] */;
  %682 = %678.0;
  (%665, %679, %680, meta[relay.Constant][31] /* ty=Tensor[(3, 2), float64] */, meta[relay.Constant][32] /* ty=Tensor[(1, 60), float64] */, %681, %682, meta[relay.Constant][33] /* ty=Tensor[(63, 2), float32] */)
}

def @func_8666() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
  %689 = fn () -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
    %683 = @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */;
    %684 = @func_2780() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %685 = @func_7759() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
    %686 = %683.0;
    %687 = %684.1;
    %688 = %685.5;
    (%686, %687, %688)
  };
  %689() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */
}

def @func_1060() -> Tensor[(13, 12, 15), float32] {
  @func_1058() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_6115(%var_6113: float64, %var_6114: Tensor[(16, 8, 16), float64]) -> (Tensor[(16, 8, 16), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  @func_6111(%var_6113, %var_6114) /* ty=(Tensor[(16, 8, 16), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */
}

def @func_1677() -> Tensor[(13, 12, 15), float32] {
  %690 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %690.0
}

def @func_8050(%var_8049: Tensor[(9, 1, 12), float32]) -> (Tensor[(9, 1, 12), float32],) {
  %693 = fn (%var_8044: Tensor[(9, 1, 12), float32]) -> (Tensor[(9, 1, 12), float32],) {
    %691 = cast(%var_8044, dtype="float32") /* ty=Tensor[(9, 1, 12), float32] */;
    %692 = sinh(%691) /* ty=Tensor[(9, 1, 12), float32] */;
    (%692,)
  };
  %693(%var_8049) /* ty=(Tensor[(9, 1, 12), float32],) */
}

def @func_1079() -> (Tensor[(13, 12, 15), float32],) {
  %695 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %694 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
    (%694,)
  };
  %695() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_7134() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  @func_7132() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */
}

def @func_3008() -> Tensor[(13, 12, 15), float32] {
  %696 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_1045() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %696() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_2474(%var_2444: Tensor[(13, 12, 15), float32], %var_2455: Tensor[(13, 12, 15), float64]) -> (Tensor[(13, 12, 15), uint64],) {
  %697 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %698 = %697.0;
  %699 = cast(%var_2444, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %700 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%698, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %703 = power(%701, %702) /* ty=Tensor[(13, 12, 15), float64] */;
  %704 = cast(%var_2455, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %708 = subtract(%706, %707) /* ty=Tensor[(13, 12, 15), uint64] */;
  %709 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 12, 15), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %713 = add(%711, %712) /* ty=Tensor[(13, 12, 15), uint64] */;
  (%713,)
}

def @func_4719(%var_4717: Tensor[(14, 9, 1), float32]) -> (Tensor[(14, 9, 1), float64],) {
  @func_4716(%var_4717) /* ty=(Tensor[(14, 9, 1), float64],) */
}

def @func_542(%var_541: Tensor[(16, 12, 2), bool]) -> (Tensor[(16, 12, 2), bool],) {
  %717 = fn (%var_533: Tensor[(16, 12, 2), bool]) -> (Tensor[(16, 12, 2), bool],) {
    %714 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %715 = cast(%var_533, dtype="bool") /* ty=Tensor[(16, 12, 2), bool] */;
    %716 = logical_and(%714, %715) /* ty=Tensor[(16, 12, 2), bool] */;
    (%716,)
  };
  %717(%var_541) /* ty=(Tensor[(16, 12, 2), bool],) */
}

def @func_2426() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) {
  %718 = @func_1820() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 12, 2), bool], Tensor[(384), bool]) */;
  %719 = %718.0;
  %720 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %721 = %720.2;
  %722 = cast(%721, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %723 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%719, dtype="uint64") /* ty=Tensor[(13, 12, 15), uint64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %726 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %727 = maximum(%724, %725) /* ty=Tensor[(13, 12, 15), uint64] */;
  %728 = %726.0;
  (%727, %728)
}

def @func_4798(%var_4797: Tensor[(2, 15, 2), float64]) -> (Tensor[(2, 15, 2), uint16],) {
  %739 = fn (%var_4775: Tensor[(2, 15, 2), float64]) -> (Tensor[(2, 15, 2), uint16],) {
    %729 = cast(%var_4775, dtype="float64") /* ty=Tensor[(2, 15, 2), float64] */;
    %730 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(2, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %731 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 15, 2), float64] */;
    %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %733 = floor_mod(%731, %732) /* ty=Tensor[(2, 15, 2), float64] */;
    %734 = cast(%733, dtype="uint16") /* ty=Tensor[(2, 15, 2), uint16] */;
    %735 = shape_of(%var_4775, dtype="int32") /* ty=Tensor[(3), int32] */;
    %736 = cast(%var_4775, dtype="uint16") /* ty=Tensor[(2, 15, 2), uint16] */;
    %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %738 = minimum(%736, %737) /* ty=Tensor[(2, 15, 2), uint16] */;
    (%738,)
  };
  %739(%var_4797) /* ty=(Tensor[(2, 15, 2), uint16],) */
}

def @func_8758() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_8756() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_8521() -> Tensor[(13, 12, 15), float64] {
  @func_8519() /* ty=Tensor[(13, 12, 15), float64] */
}

def @func_8957() -> (Tensor[(13, 12, 15), int16],) {
  %740 = @func_8732() /* ty=Tensor[(13, 12, 15), int16] */;
  (%740,)
}

def @func_9102() -> (Tensor[(13, 12, 15), float32],) {
  %742 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %741 = @func_2278() /* ty=Tensor[(13, 12, 15), float32] */;
    (%741,)
  };
  %742() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_8923() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int32], Tensor[(13, 12, 15), float32]) {
  %743 = @func_3773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */;
  %744 = @func_4682() /* ty=Tensor[(13, 12, 15), float32] */;
  %745 = @func_3518() /* ty=Tensor[(13, 12, 15), int32] */;
  %746 = %743.0;
  (%744, %745, %746)
}

def @func_3315() -> Tensor[(13, 12, 15), float32] {
  %748 = fn () -> Tensor[(13, 12, 15), float32] {
    %747 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %747.1
  };
  %748() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_3983() -> (Tensor[(13, 12, 15), float32],) {
  %751 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %749 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %750 = %749.0;
    (%750,)
  };
  %751() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_1113() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_9188() -> Tensor[(13, 12, 15), int16] {
  %753 = fn () -> Tensor[(13, 12, 15), int16] {
    %752 = @func_6884() /* ty=(Tensor[(13, 12, 15), int16],) */;
    %752.0
  };
  %753() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_5277() -> Tensor[(13, 12, 15), float32] {
  %754 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
  %754.1
}

def @func_2193() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %755 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %757 = reshape(%756, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
  %758 = @func_1342(%757) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %759 = @func_2108() /* ty=(Tensor[(2, 16, 7), int64], Tensor[(13, 13, 14), float64], Tensor[(1512, 1), float64], Tensor[(13, 12, 15), float32]) */;
  %760 = %758.0;
  %761 = %759.3;
  (%755, %760, %761)
}

def @func_1929(%var_1928: Tensor[(7, 8, 15), int8]) -> (Tensor[(7, 8, 15), int8],) {
  %767 = fn (%var_1898: Tensor[(7, 8, 15), int8]) -> (Tensor[(7, 8, 15), int8],) {
    %762 = cast(%var_1898, dtype="int8") /* ty=Tensor[(7, 8, 15), int8] */;
    %763 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(7, 8, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 8, 15), int8] */, dtype="int8") /* ty=Tensor[(7, 8, 15), int8] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %766 = right_shift(%764, %765) /* ty=Tensor[(7, 8, 15), int8] */;
    (%766,)
  };
  %767(%var_1928) /* ty=(Tensor[(7, 8, 15), int8],) */
}

def @func_5665() -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(1, 60), float64]) {
  %773 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(1, 60), float64]) {
    %768 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
    %769 = reshape(%768, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %770 = @func_5530(%769) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(60), float64]) */;
    %771 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
    %772 = %770.1;
    (%771, %772, meta[relay.Constant][37] /* ty=Tensor[(1, 60), float64] */)
  };
  %773() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(1, 60), float64]) */
}

def @func_8519() -> Tensor[(13, 12, 15), float64] {
  %774 = @func_5053() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %775 = %774.0;
  %776 = cast(%775, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  sqrt(%776) /* ty=Tensor[(13, 12, 15), float64] */
}

def @func_5965() -> (Tensor[(13, 12, 15), float32],) {
  %779 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %777 = @func_5143() /* ty=(Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %778 = %777.1;
    (%778,)
  };
  %779() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_3774() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
  %785 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
    %780 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
    %781 = cast(%780, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    %782 = reshape(%781, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), float32] */;
    %783 = @func_1342(%782) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %784 = %783.0;
    (%780, %784)
  };
  %785() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */
}

def @func_2780() -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %786 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %787 = %786.1;
  %788 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  (%787, %788)
}

def @func_8594(%var_8592: float64) -> (Tensor[(13, 12, 15), float32], Tensor[(1, 10, 4), float32], Tensor[(13, 12, 15), float32]) {
  @func_8591(%var_8592) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(1, 10, 4), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_5474(%var_5467: Tensor[(75, 2), float64]) -> (Tensor[(12, 7, 14), float32], Tensor[(13, 13, 14), float64], Tensor[(75, 2), float64], Tensor[(2366, 1), float64]) {
  %789 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 7, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
  %790 = cast(%var_5467, dtype="float64") /* ty=Tensor[(75, 2), float64] */;
  %791 = cast(meta[relay.Constant][39] /* ty=Tensor[(2366, 1), float64] */, dtype="float64") /* ty=Tensor[(2366, 1), float64] */;
  %792 = reshape(%790, newshape=[1, 10, 15]) /* ty=Tensor[(1, 10, 15), float64] */;
  %793 = reshape(%791, newshape=[1183, 2]) /* ty=Tensor[(1183, 2), float64] */;
  %794 = @func_223(%792, %793) /* ty=(Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) */;
  %795 = sqrt(%789) /* ty=Tensor[(12, 7, 14), float32] */;
  %796 = %794.1;
  (%795, %796, %var_5467, meta[relay.Constant][39] /* ty=Tensor[(2366, 1), float64] */)
}

def @func_5598() -> Tensor[(13, 12, 15), float32] {
  %798 = fn () -> Tensor[(13, 12, 15), float32] {
    %797 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %797.0
  };
  %798() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_8959() -> (Tensor[(13, 12, 15), int16],) {
  @func_8957() /* ty=(Tensor[(13, 12, 15), int16],) */
}

def @func_8756() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %799 = @func_2884() /* ty=Tensor[(13, 12, 15), float32] */;
  %800 = @func_7393() /* ty=Tensor[(13, 12, 15), float32] */;
  (%799, %800)
}

def @func_9972() -> Tensor[(13, 12, 15), float32] {
  %802 = fn () -> Tensor[(13, 12, 15), float32] {
    %801 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %801.0
  };
  %802() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9812(%var_9811: Tensor[(7, 10, 7), float32]) -> (Tensor[(9, 2, 12), float64], Tensor[(216), uint32], Tensor[(384), bool], Tensor[(216), uint32], Tensor[(7, 10, 7), float32], Tensor[(13, 12, 15), float64]) {
  %820 = fn (%var_9766: Tensor[(7, 10, 7), float32]) -> (Tensor[(9, 2, 12), float64], Tensor[(216), uint32], Tensor[(384), bool], Tensor[(216), uint32], Tensor[(7, 10, 7), float32], Tensor[(13, 12, 15), float64]) {
    %803 = cast(meta[relay.Constant][40] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
    %804 = cast(meta[relay.Constant][41] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
    %805 = reshape(%803, newshape=[216]) /* ty=Tensor[(216), uint32] */;
    %806 = reshape(%804, newshape=[384]) /* ty=Tensor[(384), bool] */;
    %807 = @func_3933(%805, %806) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) */;
    %808 = %807.2;
    %809 = cast(%808, dtype="uint32") /* ty=Tensor[(9, 2, 12), uint32] */;
    %810 = cast(meta[relay.Constant][41] /* ty=Tensor[(384), bool] */, dtype="bool") /* ty=Tensor[(384), bool] */;
    %811 = reshape(%809, newshape=[216]) /* ty=Tensor[(216), uint32] */;
    %812 = reshape(%810, newshape=[384]) /* ty=Tensor[(384), bool] */;
    %813 = @func_3933(%811, %812) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(216), uint32], Tensor[(9, 2, 12), float64], Tensor[(16, 12, 2), bool], Tensor[(384), bool], Tensor[(13, 12, 15), float32]) */;
    %814 = cast(%var_9766, dtype="float32") /* ty=Tensor[(7, 10, 7), float32] */;
    %815 = acosh(%814) /* ty=Tensor[(7, 10, 7), float32] */;
    %816 = cast(%815, dtype="float32") /* ty=Tensor[(7, 10, 7), float32] */;
    %817 = %813.1;
    %818 = sinh(%816) /* ty=Tensor[(7, 10, 7), float32] */;
    %819 = @func_9135() /* ty=Tensor[(13, 12, 15), float64] */;
    (%808, meta[relay.Constant][40] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][41] /* ty=Tensor[(384), bool] */, %817, %818, %819)
  };
  %820(%var_9811) /* ty=(Tensor[(9, 2, 12), float64], Tensor[(216), uint32], Tensor[(384), bool], Tensor[(216), uint32], Tensor[(7, 10, 7), float32], Tensor[(13, 12, 15), float64]) */
}

def @func_1488() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) {
  @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */
}

def @func_9653() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) {
  %821 = @func_2806() /* ty=Tensor[(13, 12, 15), float32] */;
  %822 = @func_9135() /* ty=Tensor[(13, 12, 15), float64] */;
  %823 = @func_4587() /* ty=Tensor[(13, 12, 15), float32] */;
  (%821, %822, %823)
}

def @func_5733(%var_5723: Tensor[(3, 2, 1), float64], %var_5724: Tensor[(3, 2, 10), float64]) -> Tensor[(3, 2, 10), float64] {
  %824 = cast(%var_5723, dtype="float64") /* ty=Tensor[(3, 2, 1), float64] */;
  %825 = cast(%var_5724, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
  mod(%824, %825) /* ty=Tensor[(3, 2, 10), float64] */
}

def @func_1773() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  %826 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  %827 = @func_1542() /* ty=Tensor[(13, 12, 15), float32] */;
  %828 = cast(%827, dtype="int64") /* ty=Tensor[(13, 12, 15), int64] */;
  %829 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%826, dtype="int64") /* ty=Tensor[(13, 12, 15), int64] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %832 = bitwise_or(%830, %831) /* ty=Tensor[(13, 12, 15), int64] */;
  %833 = cast(%832, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %834 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%826, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %837 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %838 = %837.0;
  %839 = cast(%838, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %840 = log2(%839) /* ty=Tensor[(13, 12, 15), float32] */;
  %841 = cast(%840, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %842 = floor_mod(%835, %836) /* ty=Tensor[(13, 12, 15), float64] */;
  %843 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  %844 = sigmoid(%841) /* ty=Tensor[(13, 12, 15), float64] */;
  (%842, %843, %844)
}

def @func_4850() -> (Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) {
  %852 = fn () -> (Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) {
    %845 = @func_1677() /* ty=Tensor[(13, 12, 15), float32] */;
    %846 = cast(%845, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
    %847 = @func_2687() /* ty=(Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), float32]) */;
    %848 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %849 = asinh(%846) /* ty=Tensor[(13, 12, 15), float64] */;
    %850 = %847.0;
    %851 = %848.1;
    (%849, %850, %851)
  };
  %852() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(16, 13, 16), bool], Tensor[(13, 12, 15), int16]) */
}

def @func_9311() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_9309() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_1849() -> (Tensor[(13, 12, 15), float32],) {
  %855 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %853 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %854 = %853.0;
    (%854,)
  };
  %855() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_2634() -> Tensor[(13, 12, 15), float32] {
  @func_2632() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_3247() -> (Tensor[(13, 12, 15), float64],) {
  %860 = fn () -> (Tensor[(13, 12, 15), float64],) {
    %856 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %857 = %856.0;
    %858 = cast(%857, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
    %859 = asin(%858) /* ty=Tensor[(13, 12, 15), float64] */;
    (%859,)
  };
  %860() /* ty=(Tensor[(13, 12, 15), float64],) */
}

def @func_2936(%var_2934: Tensor[(9, 2, 12), uint32], %var_2935: Tensor[(9, 2, 12), uint32]) -> Tensor[(9, 2, 12), uint32] {
  %865 = fn (%var_2911: Tensor[(9, 2, 12), uint32], %var_2912: Tensor[(9, 2, 12), uint32]) -> Tensor[(9, 2, 12), uint32] {
    %861 = cast(%var_2912, dtype="uint32") /* ty=Tensor[(9, 2, 12), uint32] */;
    %862 = shape_of(%var_2911, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(%var_2911, dtype="uint32") /* ty=Tensor[(9, 2, 12), uint32] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    subtract(%863, %864) /* ty=Tensor[(9, 2, 12), uint32] */
  };
  %865(%var_2934, %var_2935) /* ty=Tensor[(9, 2, 12), uint32] */
}

def @func_6705() -> (Tensor[(13, 12, 15), int32],) {
  @func_6703() /* ty=(Tensor[(13, 12, 15), int32],) */
}

def @func_5186() -> Tensor[(13, 12, 15), int16] {
  @func_5184() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_7017() -> Tensor[(13, 12, 15), int32] {
  %867 = fn () -> Tensor[(13, 12, 15), int32] {
    %866 = @func_6703() /* ty=(Tensor[(13, 12, 15), int32],) */;
    %866.0
  };
  %867() /* ty=Tensor[(13, 12, 15), int32] */
}

def @func_7656(%var_7629: float32, %var_7630: Tensor[(3, 8, 11), float32], %var_7642: Tensor[(840), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(840), int8], Tensor[(3, 8, 11), float64], Tensor[(13, 12, 15), float32]) {
  %868 = cast(%var_7642, dtype="int8") /* ty=Tensor[(840), int8] */;
  %869 = reshape(%868, newshape=[420, 2]) /* ty=Tensor[(420, 2), int8] */;
  %870 = @func_4548(%869) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(420, 2), uint64]) */;
  %871 = cast(%var_7629, dtype="float32") /* ty=float32 */;
  %872 = cast(%var_7630, dtype="float32") /* ty=Tensor[(3, 8, 11), float32] */;
  %873 = minimum(%871, %872) /* ty=Tensor[(3, 8, 11), float32] */;
  %874 = cast(%873, dtype="float32") /* ty=Tensor[(3, 8, 11), float32] */;
  %875 = log2(%874) /* ty=Tensor[(3, 8, 11), float32] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(3, 8, 11), float64] */;
  %877 = @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %878 = %870.0;
  %879 = log(%876) /* ty=Tensor[(3, 8, 11), float64] */;
  %880 = %877.1;
  (%878, %var_7642, %879, %880)
}

def @func_2061() -> (Tensor[(13, 12, 15), float32],) {
  %881 = @func_1486() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), bool], Tensor[(13, 12, 15), float64]) */;
  %882 = %881.0;
  (%882,)
}

def @func_1046() -> Tensor[(13, 12, 15), float32] {
  %884 = fn () -> Tensor[(13, 12, 15), float32] {
    %883 = cast(meta[relay.Constant][42] /* ty=Tensor[(13, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    log10(%883) /* ty=Tensor[(13, 12, 15), float32] */
  };
  %884() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9762() -> (Tensor[(13, 12, 15), float32],) {
  @func_9760() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_1795(%var_1783: Tensor[(16, 3, 3), int32], %var_1793: Tensor[(1512), float64]) -> (Tensor[(16, 3, 3), int32], Tensor[(14, 9, 12), float64], Tensor[(1512), float64]) {
  %885 = cast(%var_1783, dtype="int32") /* ty=Tensor[(16, 3, 3), int32] */;
  %886 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(16, 3, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 3, 3), int32] */, dtype="int32") /* ty=Tensor[(16, 3, 3), int32] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %889 = cast(%var_1793, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %890 = cast(%var_1793, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %891 = reshape(%889, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %892 = reshape(%890, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %893 = @func_800(%891, %892) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(13, 13, 14), float64], Tensor[(2366), float64]) */;
  %894 = add(%887, %888) /* ty=Tensor[(16, 3, 3), int32] */;
  %895 = %893.0;
  (%894, %895, %var_1793)
}

def @func_5462() -> (Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) {
  @func_5460() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(16, 13, 16), bool]) */
}

def @func_1342(%var_1330: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %896 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %897 = %896.0;
  %898 = cast(%var_1330, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %902 = logical_xor(%900, %901) /* ty=Tensor[(13, 12, 15), int16] */;
  %903 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
  (%902, %903)
}

def @func_6111(%var_6052: float64, %var_6053: Tensor[(16, 8, 16), float64]) -> (Tensor[(16, 8, 16), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  %904 = cast(%var_6052, dtype="float64") /* ty=float64 */;
  %905 = cast(%var_6053, dtype="float64") /* ty=Tensor[(16, 8, 16), float64] */;
  %906 = @func_4626() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %907 = @func_5539() /* ty=(Tensor[(13, 12, 15), float64],) */;
  %908 = power(%904, %905) /* ty=Tensor[(16, 8, 16), float64] */;
  %909 = %906.0;
  %910 = %907.0;
  (%908, %909, %910)
}

def @func_2554() -> Tensor[(13, 12, 15), float32] {
  %911 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_1542() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %911() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_7293(%var_7291: Tensor[(3, 1, 15), int16], %var_7292: Tensor[(3, 1, 15), int16]) -> Tensor[(3, ?, 15), int16] {
  %916 = fn (%var_7280: Tensor[(3, 1, 15), int16], %var_7281: Tensor[(3, 1, 15), int16]) -> Tensor[(3, ?, 15), int16] {
    %912 = cast(%var_7281, dtype="int16") /* ty=Tensor[(3, 1, 15), int16] */;
    %913 = shape_of(%var_7280, dtype="int32") /* ty=Tensor[(3), int32] */;
    %914 = cast(%var_7280, dtype="int16") /* ty=Tensor[(3, 1, 15), int16] */;
    %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    maximum(%914, %915) /* ty=Tensor[(3, ?, 15), int16] */
  };
  %916(%var_7291, %var_7292) /* ty=Tensor[(3, ?, 15), int16] */
}

def @func_6030() -> (Tensor[(13, 12, 15), float32],) {
  %919 = fn () -> (Tensor[(13, 12, 15), float32],) {
    %917 = @func_3982() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %918 = %917.0;
    (%918,)
  };
  %919() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_3518() -> Tensor[(13, 12, 15), int32] {
  %920 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %921 = %920.0;
  %922 = cast(meta[relay.Constant][44] /* ty=Tensor[(13, 12, 15), float32] */, dtype="int32") /* ty=Tensor[(13, 12, 15), int32] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%921, dtype="int32") /* ty=Tensor[(13, 12, 15), int32] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%924, %925) /* ty=Tensor[(13, 12, 15), int32] */
}

def @func_4551(%var_4549: Tensor[(420, 2), int8]) -> (Tensor[(13, 12, 15), float32], Tensor[(420, 2), uint64]) {
  @func_4548(%var_4549) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(420, 2), uint64]) */
}

def @func_5236(%var_5228: Tensor[(130, 4), bool]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(130, 4), float64]) {
  %926 = @func_4626() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %927 = cast(%var_5228, dtype="bool") /* ty=Tensor[(130, 4), bool] */;
  %928 = reshape(%927, newshape=[520]) /* ty=Tensor[(520), bool] */;
  %929 = @func_4202(%928) /* ty=(Tensor[(13, 12, 15), float64], Tensor[(520), bool], Tensor[(8, 5, 13), float32], Tensor[(13, 12, 15), float32], Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64]) */;
  %930 = cast(%var_5228, dtype="float64") /* ty=Tensor[(130, 4), float64] */;
  %931 = %926.1;
  %932 = %929.3;
  %933 = tan(%930) /* ty=Tensor[(130, 4), float64] */;
  (%931, %932, %933)
}

def @func_7761() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
  @func_7759() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) */
}

def @func_6938() -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  %938 = fn () -> (Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
    %934 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
    %935 = %934.0;
    %936 = @func_2247() /* ty=Tensor[(13, 12, 15), int16] */;
    %937 = @func_3028() /* ty=Tensor[(13, 12, 15), float32] */;
    (%935, %936, %937)
  };
  %938() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */
}

def @func_8345() -> (Tensor[(13, 12, 15), float64],) {
  @func_8343() /* ty=(Tensor[(13, 12, 15), float64],) */
}

def @func_9309() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %939 = @func_2061() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %940 = %939.0;
  %941 = @func_1058() /* ty=Tensor[(13, 12, 15), float32] */;
  (%940, %941)
}

def @func_1345(%var_1343: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) {
  @func_1342(%var_1343) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */
}

def @func_2248() -> Tensor[(13, 12, 15), int16] {
  %943 = fn () -> Tensor[(13, 12, 15), int16] {
    %942 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
    %942.1
  };
  %943() /* ty=Tensor[(13, 12, 15), int16] */
}

def @func_9870(%var_9868: Tensor[(7, 14, 15), uint16], %var_9869: Tensor[(7, 14, 15), uint16]) -> Tensor[(7, 14, 15), bool] {
  %948 = fn (%var_9830: Tensor[(7, 14, 15), uint16], %var_9831: Tensor[(7, 14, 15), uint16]) -> Tensor[(7, 14, 15), bool] {
    %944 = cast(%var_9831, dtype="bool") /* ty=Tensor[(7, 14, 15), bool] */;
    %945 = shape_of(%var_9830, dtype="int32") /* ty=Tensor[(3), int32] */;
    %946 = cast(%var_9830, dtype="bool") /* ty=Tensor[(7, 14, 15), bool] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%946, %947) /* ty=Tensor[(7, 14, 15), bool] */
  };
  %948(%var_9868, %var_9869) /* ty=Tensor[(7, 14, 15), bool] */
}

def @func_4331(%var_4330: Tensor[(13, 12, 15), float32]) -> Tensor[(13, 12, 15), bool] {
  %955 = fn (%var_4309: Tensor[(13, 12, 15), float32]) -> Tensor[(13, 12, 15), bool] {
    %949 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %950 = %949.0;
    %951 = cast(%var_4309, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
    %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
    %953 = cast(%950, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
    %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%953, %954) /* ty=Tensor[(13, 12, 15), bool] */
  };
  %955(%var_4330) /* ty=Tensor[(13, 12, 15), bool] */
}

def @func_7882() -> Tensor[(13, 12, 15), float32] {
  %956 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_7393() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %956() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_4589() -> Tensor[(13, 12, 15), float32] {
  @func_4587() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9921() -> (Tensor[(13, 12, 15), float32],) {
  @func_9919() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_5532(%var_5531: Tensor[(60), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(60), float64]) {
  %963 = fn (%var_5514: Tensor[(60), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(60), float64]) {
    %957 = @func_5386() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %958 = cast(%var_5514, dtype="float64") /* ty=Tensor[(60), float64] */;
    %959 = reshape(%958, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
    %960 = @func_4796(%959) /* ty=(Tensor[(2, 15, 2), uint16],) */;
    %961 = %957.0;
    %962 = %960.0;
    (%961, %962, %var_5514)
  };
  %963(%var_5531) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(60), float64]) */
}

def @func_30(%var_19: Tensor[(13, 13, 14), float64]) -> Tensor[(13, 13, 14), float64] {
  %964 = cast(%var_19, dtype="float64") /* ty=Tensor[(13, 13, 14), float64] */;
  atanh(%964) /* ty=Tensor[(13, 13, 14), float64] */
}

def @func_3121() -> Tensor[(13, 12, 15), float32] {
  @func_3119() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9919() -> (Tensor[(13, 12, 15), float32],) {
  %965 = @func_5597() /* ty=Tensor[(13, 12, 15), float32] */;
  (%965,)
}

def @func_1775() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) {
  @func_1773() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64]) */
}

def @func_9505() -> Tensor[(13, 12, 15), float32] {
  %966 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_2884() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %966() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_9655() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) {
  @func_9653() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) */
}

def @func_3193(%var_3126: int16, %var_3127: Tensor[(2, 9, 12), int16], %var_3154: Tensor[(150), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(1183, 2), float64], Tensor[(150), float64], Tensor[(13, 182), float64], Tensor[(13, 12, 15), int16], Tensor[(2, 9, 12), bool]) {
  %967 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %968 = cast(%var_3154, dtype="float64") /* ty=Tensor[(150), float64] */;
  %969 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 182), float64] */, dtype="float64") /* ty=Tensor[(13, 182), float64] */;
  %970 = reshape(%968, newshape=[1, 10, 15]) /* ty=Tensor[(1, 10, 15), float64] */;
  %971 = reshape(%969, newshape=[1183, 2]) /* ty=Tensor[(1183, 2), float64] */;
  %972 = @func_223(%970, %971) /* ty=(Tensor[(1, 10, 15), float64], Tensor[(13, 13, 14), float64], Tensor[(1183, 2), float64]) */;
  %973 = @func_2193() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %974 = cast(%var_3126, dtype="int16") /* ty=int16 */;
  %975 = cast(%var_3127, dtype="int16") /* ty=Tensor[(2, 9, 12), int16] */;
  %976 = logical_xor(%974, %975) /* ty=Tensor[(2, 9, 12), int16] */;
  %977 = cast(%var_3127, dtype="bool") /* ty=Tensor[(2, 9, 12), bool] */;
  %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%976, dtype="bool") /* ty=Tensor[(2, 9, 12), bool] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %981 = %967.0;
  %982 = %972.2;
  %983 = %973.1;
  %984 = logical_and(%979, %980) /* ty=Tensor[(2, 9, 12), bool] */;
  (%981, %982, %var_3154, meta[relay.Constant][45] /* ty=Tensor[(13, 182), float64] */, %983, %984)
}

def @func_1543() -> Tensor[(13, 12, 15), float32] {
  %985 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_1058() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %985() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_10072(%var_10071: Tensor[(1512), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(1512), float64]) {
  %992 = fn (%var_10064: Tensor[(1512), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(1512), float64]) {
    %986 = @func_1111() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %987 = cast(%var_10064, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %988 = reshape(%987, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %989 = @func_8491(%988) /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 13, 14), float64], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32], Tensor[(1512), bool]) */;
    %990 = %986.1;
    %991 = %989.3;
    (%990, %991, %var_10064)
  };
  %992(%var_10071) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float64], Tensor[(1512), float64]) */
}

def @func_4205(%var_4203: Tensor[(520), bool]) -> (Tensor[(13, 12, 15), float64], Tensor[(520), bool], Tensor[(8, 5, 13), float32], Tensor[(13, 12, 15), float32], Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64]) {
  @func_4202(%var_4203) /* ty=(Tensor[(13, 12, 15), float64], Tensor[(520), bool], Tensor[(8, 5, 13), float32], Tensor[(13, 12, 15), float32], Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64]) */
}

def @func_10212(%var_10211: Tensor[(4, 60), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(4, 60), uint16], Tensor[(4, 60), float32]) {
  %1002 = fn (%var_10195: Tensor[(4, 60), float64]) -> (Tensor[(13, 12, 15), float32], Tensor[(4, 60), uint16], Tensor[(4, 60), float32]) {
    %993 = @func_9682() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %994 = @func_5664() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(2, 15, 2), uint16], Tensor[(1, 60), float64]) */;
    %995 = %994.2;
    %996 = cast(%995, dtype="uint16") /* ty=Tensor[(1, 60), uint16] */;
    %997 = cast(%var_10195, dtype="uint16") /* ty=Tensor[(4, 60), uint16] */;
    %998 = cast(%var_10195, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
    %999 = %993.0;
    %1000 = add(%996, %997) /* ty=Tensor[(4, 60), uint16] */;
    %1001 = rsqrt(%998) /* ty=Tensor[(4, 60), float32] */;
    (%999, %1000, %1001)
  };
  %1002(%var_10211) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(4, 60), uint16], Tensor[(4, 60), float32]) */
}

def @func_9760() -> (Tensor[(13, 12, 15), float32],) {
  %1003 = @func_1608() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_5934() -> (Tensor[(13, 12, 15), int16],) {
  @func_5932() /* ty=(Tensor[(13, 12, 15), int16],) */
}

def @func_5932() -> (Tensor[(13, 12, 15), int16],) {
  %1005 = @func_1977() /* ty=(Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), int16]) */;
  %1006 = %1005.1;
  (%1006,)
}

def @func_1128() -> (Tensor[(13, 12, 15), float32],) {
  @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */
}

def @func_3551() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  @func_3549() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_1608() -> (Tensor[(13, 12, 15), float32],) {
  %1007 = @func_1126() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %1008 = %1007.0;
  (%1008,)
}

def @func_5239(%var_5237: Tensor[(130, 4), bool]) -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(130, 4), float64]) {
  @func_5236(%var_5237) /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(130, 4), float64]) */
}

def @func_7759() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16], Tensor[(14, 9, 1), float64], Tensor[(126, 1), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), int16]) {
  %1009 = @func_6937() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %1010 = cast(meta[relay.Constant][46] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %1011 = reshape(%1010, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float32] */;
  %1012 = @func_4716(%1011) /* ty=(Tensor[(14, 9, 1), float64],) */;
  %1013 = @func_5584() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
  %1014 = @func_5932() /* ty=(Tensor[(13, 12, 15), int16],) */;
  %1015 = @func_5597() /* ty=Tensor[(13, 12, 15), float32] */;
  %1016 = %1009.1;
  %1017 = %1012.0;
  %1018 = %1013.0;
  %1019 = %1014.0;
  (%1015, %1016, %1017, meta[relay.Constant][46] /* ty=Tensor[(126, 1), float32] */, %1018, %1019)
}

def @func_5184() -> Tensor[(13, 12, 15), int16] {
  %1020 = @func_2780() /* ty=(Tensor[(13, 12, 15), int16], Tensor[(13, 12, 15), float32]) */;
  %1020.0
}

def @func_4264() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %1025 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
    %1021 = @func_3068() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */;
    %1022 = @func_1045() /* ty=Tensor[(13, 12, 15), float32] */;
    %1023 = %1021.1;
    %1024 = @func_2553() /* ty=Tensor[(13, 12, 15), float32] */;
    (%1022, %1023, %1024)
  };
  %1025() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_3029() -> Tensor[(13, 12, 15), float32] {
  %1026 = fn () -> Tensor[(13, 12, 15), float32] {
    @func_1058() /* ty=Tensor[(13, 12, 15), float32] */
  };
  %1026() /* ty=Tensor[(13, 12, 15), float32] */
}

def @func_3069() -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
  %1031 = fn () -> (Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) {
    %1027 = @func_2426() /* ty=(Tensor[(13, 12, 15), uint64], Tensor[(13, 12, 15), float32]) */;
    %1028 = @func_1078() /* ty=(Tensor[(13, 12, 15), float32],) */;
    %1029 = %1027.1;
    %1030 = %1028.0;
    (%1029, %1030)
  };
  %1031() /* ty=(Tensor[(13, 12, 15), float32], Tensor[(13, 12, 15), float32]) */
}

def @func_6688() -> (Tensor[(13, 12, 15), float64], Tensor[(13, 12, 15), float32]) {
  %1032 = @func_3982() /* ty=(Tensor[(13, 12, 15), float32],) */;
  %1033 = %1032.0;
  %1034 = cast(%1033, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %1035 = acosh(%1034) /* ty=Tensor[(13, 12, 15), float64] */;
  %1036 = @func_3119() /* ty=Tensor[(13, 12, 15), float32] */;
  (%1035, %1036)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_6023() -> Tensor[(16, 3, 7), float64] {
  %0 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %0.0
}

def @func_13376() -> Tensor[(16, 3, 7), float64] {
  %1 = @func_7934() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(64), float64]) */;
  %1.0
}

def @func_168(%var_148: Tensor[(7, 9, 8), float64]) -> Tensor[(7, 9, 8), int16] {
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 8), float64] */;
  %3 = atanh(%2) /* ty=Tensor[(7, 9, 8), float64] */;
  %4 = cast(%var_148, dtype="int16") /* ty=Tensor[(7, 9, 8), int16] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%3, dtype="int16") /* ty=Tensor[(7, 9, 8), int16] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%6, %7) /* ty=Tensor[(7, 9, 8), int16] */
}

def @func_4390() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %8 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %9 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %10 = %8.0;
  (%9, %10)
}

def @func_6681(%var_6679: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(640), uint64]) {
  %11 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %13 = reshape(%12, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %14 = @func_3624(%13) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %15 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %16 = %15.1;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %19 = cast(%var_6679, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %20 = reshape(%17, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %21 = reshape(%18, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %22 = reshape(%19, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %23 = @func_2148(%20, %21, %22) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) */;
  %24 = %11.0;
  %25 = %14.3;
  %26 = %23.3;
  (%24, %25, meta[relay.Constant][1] /* ty=Tensor[(28), int16] */, %16, %26, %var_6679)
}

def @func_12399() -> Tensor[(16, 3, 7), float32] {
  %27 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %27.0
}

def @func_12522() -> (Tensor[(16, 3, 7), float32],) {
  %28 = @func_7798() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) */;
  %29 = %28.0;
  (%29,)
}

def @func_10390(%var_10361: Tensor[(2, 180), float64], %var_10362: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), int8], Tensor[(28), int16], Tensor[(2, 180), float64], Tensor[(2880), float64]) {
  %30 = @func_7934() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(64), float64]) */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %32 = cast(%var_10361, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %33 = cast(%var_10362, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %34 = reshape(%31, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %35 = reshape(%32, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %36 = reshape(%33, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %37 = @func_1925(%34, %35, %36) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
  %38 = %30.0;
  %39 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  %40 = %37.5;
  (%38, %39, %40, meta[relay.Constant][2] /* ty=Tensor[(28), int16] */, %var_10361, %var_10362)
}

def @func_11552() -> Tensor[(16, 3, 7), float32] {
  %41 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %41.0
}

def @func_11838(%var_11805: float32) -> (Tensor[(28), int16], Tensor[(9, 7, 8), int64], Tensor[(16, 3, 7), float32]) {
  %42 = @func_8402() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
  %43 = cast(%var_11805, dtype="bool") /* ty=bool */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 7, 8), float32] */, dtype="bool") /* ty=Tensor[(9, 7, 8), bool] */;
  %45 = greater_equal(%43, %44) /* ty=Tensor[(9, 7, 8), bool] */;
  %46 = cast(%45, dtype="int64") /* ty=Tensor[(9, 7, 8), int64] */;
  %47 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(9, 7, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 7, 8), float32] */, dtype="int64") /* ty=Tensor[(9, 7, 8), int64] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %50 = @func_9651() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %51 = %42.1;
  %52 = right_shift(%48, %49) /* ty=Tensor[(9, 7, 8), int64] */;
  %53 = %50.0;
  (%51, %52, %53)
}

def @func_3302(%var_3294: Tensor[(28), int16], %var_3295: Tensor[(1, 360), float64]) -> (Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) {
  %54 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %56 = cast(%var_3294, dtype="int16") /* ty=Tensor[(28), int16] */;
  %57 = cast(%var_3295, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %58 = reshape(%55, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %59 = reshape(%56, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %60 = reshape(%57, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %61 = @func_1608(%58, %59, %60) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
  %62 = %54.2;
  %63 = %61.5;
  (%62, %63, meta[relay.Constant][4] /* ty=Tensor[(2880), float64] */, %var_3294, %var_3295)
}

def @func_10164() -> Tensor[(16, 3, 7), float32] {
  @func_3596() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12699(%var_12684: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), float32], Tensor[(28), int16]) {
  %64 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %65 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %66 = cast(%var_12684, dtype="int16") /* ty=Tensor[(28), int16] */;
  %67 = reshape(%66, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %68 = @func_2824(%67) /* ty=(Tensor[(28), float64], Tensor[(28), float32]) */;
  %69 = %64.0;
  %70 = %65.0;
  %71 = %68.1;
  (%69, %70, %71, %var_12684)
}

def @func_8563() -> Tensor[(16, 3, 7), float32] {
  %72 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %72.3
}

def @func_3950() -> Tensor[(16, 3, 7), float32] {
  %73 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %73.3
}

def @func_10674() -> (Tensor[(16, 3, 7), float32],) {
  %74 = @func_2618() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %75 = %74.0;
  (%75,)
}

def @func_5138() -> Tensor[(16, 3, 7), bool] {
  %76 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %76.1
}

def @func_9392() -> Tensor[(16, 3, 7), float64] {
  @func_8884() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_5094() -> (Tensor[(28), int16], Tensor[(2880), float64]) {
  %77 = @func_4575() /* ty=(Tensor[(28), int16],) */;
  %78 = %77.0;
  %79 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%78, %79)
}

def @func_11453() -> (Tensor[(16, 3, 7), float32],) {
  %80 = @func_8175() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %81 = %80.0;
  (%81,)
}

def @func_710(%var_705: Tensor[(9, 2, 14), float64]) -> (Tensor[(9, 2, 14), float64],) {
  %82 = cast(%var_705, dtype="float64") /* ty=Tensor[(9, 2, 14), float64] */;
  %83 = sqrt(%82) /* ty=Tensor[(9, 2, 14), float64] */;
  (%83,)
}

def @func_2824(%var_2766: Tensor[(28), int16]) -> (Tensor[(28), float64], Tensor[(28), float32]) {
  %84 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %85 = %84.1;
  %86 = cast(%var_2766, dtype="float64") /* ty=Tensor[(28), float64] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(1), int32] */;
  %88 = cast(%85, dtype="float64") /* ty=Tensor[(28), float64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?), float64] */;
  %90 = cast(%85, dtype="float64") /* ty=Tensor[(28), float64] */;
  %91 = shape_of(%var_2766, dtype="int32") /* ty=Tensor[(1), int32] */;
  %92 = cast(%var_2766, dtype="float64") /* ty=Tensor[(28), float64] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?), float64] */;
  %94 = maximum(%92, %93) /* ty=Tensor[(28), float64] */;
  %95 = cast(%94, dtype="float32") /* ty=Tensor[(28), float32] */;
  %96 = add(%88, %89) /* ty=Tensor[(28), float64] */;
  %97 = log10(%95) /* ty=Tensor[(28), float32] */;
  (%96, %97)
}

def @func_7339() -> (Tensor[(16, 3, 7), float32],) {
  %98 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  (%98,)
}

def @func_12299(%var_12271: Tensor[(7, 88), float32]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(4, 11, 14), float32], Tensor[(7, 88), float32], Tensor[(28), float64], Tensor[(2880), float64]) {
  %99 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %100 = @func_10674() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %101 = cast(%var_12271, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %102 = cast(%var_12271, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %103 = reshape(%101, newshape=[4, 11, 14]) /* ty=Tensor[(4, 11, 14), float32] */;
  %104 = reshape(%102, newshape=[4, 11, 14]) /* ty=Tensor[(4, 11, 14), float32] */;
  %105 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %106 = %105.1;
  %107 = cast(%106, dtype="float64") /* ty=Tensor[(28), float64] */;
  %108 = @func_5094() /* ty=(Tensor[(28), int16], Tensor[(2880), float64]) */;
  %109 = @func_6023() /* ty=Tensor[(16, 3, 7), float64] */;
  %110 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  %111 = %99.2;
  %112 = %100.0;
  %113 = @func_9593(%103, %104) /* ty=Tensor[(4, 11, 14), float32] */;
  %114 = exp(%107) /* ty=Tensor[(28), float64] */;
  %115 = %108.1;
  (%109, %110, %111, %112, %113, %var_12271, %114, %115)
}

def @func_9497() -> (Tensor[(28), int16], Tensor[(28), int16]) {
  %116 = @func_9164() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
  %117 = @func_5199() /* ty=(Tensor[(28), int16],) */;
  %118 = %116.1;
  %119 = %117.0;
  (%118, %119)
}

def @func_9779() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) {
  %120 = @func_4575() /* ty=(Tensor[(28), int16],) */;
  %121 = @func_6123() /* ty=Tensor[(16, 3, 7), float32] */;
  %122 = %120.0;
  %123 = @func_7547() /* ty=Tensor[(504), float64] */;
  (%121, %122, %123)
}

def @func_8175() -> (Tensor[(16, 3, 7), float32],) {
  %124 = @func_5314() /* ty=Tensor[(16, 3, 7), float32] */;
  (%124,)
}

def @func_529(%var_511: Tensor[(8, 8, 10), uint64]) -> (Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) {
  %125 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 8, 10), uint64] */, dtype="uint64") /* ty=Tensor[(8, 8, 10), uint64] */;
  %126 = shape_of(%var_511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%var_511, dtype="uint64") /* ty=Tensor[(8, 8, 10), uint64] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %130 = reshape(%129, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %131 = logical_xor(%127, %128) /* ty=Tensor[(8, 8, 10), uint64] */;
  %132 = @func_168(%130) /* ty=Tensor[(7, 9, 8), int16] */;
  (%131, %132, meta[relay.Constant][6] /* ty=Tensor[(504), float64] */)
}

def @func_8979() -> (Tensor[(16, 3, 7), float32],) {
  %133 = @func_8563() /* ty=Tensor[(16, 3, 7), float32] */;
  (%133,)
}

def @func_2380() -> Tensor[(16, 15, 12), bool] {
  %134 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %134.2
}

def @func_9315() -> (Tensor[(16, 3, 7), float64],) {
  %135 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %136 = %135.0;
  (%136,)
}

def @func_8006() -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool]) {
  %137 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %138 = @func_6087() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) */;
  %139 = %137.0;
  %140 = %138.1;
  (%139, %140)
}

def @func_11510() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %141 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %142 = @func_9125() /* ty=Tensor[(16, 3, 7), float32] */;
  %143 = %141.1;
  (%142, %143)
}

def @func_11217() -> (Tensor[(16, 3, 7), float32],) {
  %144 = @func_6489() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %145 = %144.0;
  (%145,)
}

def @func_2970() -> (Tensor[(28), int16],) {
  %146 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %147 = %146.1;
  (%147,)
}

def @func_9051() -> (Tensor[(16, 3, 7), float32],) {
  %148 = @func_4289() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %149 = %148.0;
  (%149,)
}

def @func_7547() -> Tensor[(504), float64] {
  %150 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %150.2
}

def @func_2641(%var_2627: Tensor[(6, 15, 15), int64]) -> (Tensor[(6, 15, 15), int64],) {
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 1, 15), int64] */, dtype="int64") /* ty=Tensor[(1, 1, 15), int64] */;
  %152 = cast(%var_2627, dtype="int64") /* ty=Tensor[(6, 15, 15), int64] */;
  %153 = bitwise_or(%151, %152) /* ty=Tensor[(6, 15, 15), int64] */;
  (%153,)
}

def @func_782(%var_770: Tensor[(15, 8, 3), float64]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) {
  %154 = cast(%var_770, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %155 = cast(%var_770, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %156 = log(%154) /* ty=Tensor[(15, 8, 3), float64] */;
  %157 = tan(%155) /* ty=Tensor[(15, 8, 3), float64] */;
  (%156, %157)
}

def @func_2102() -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) {
  %158 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %159 = cast(meta[relay.Constant][8] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %160 = reshape(%159, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
  %161 = @func_710(%160) /* ty=(Tensor[(9, 2, 14), float64],) */;
  %162 = %158.0;
  %163 = %161.0;
  (%162, %163, meta[relay.Constant][8] /* ty=Tensor[(252), float64] */)
}

def @func_11576() -> (Tensor[(15, 8, 3), float64],) {
  %164 = @func_3789() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
  %165 = %164.1;
  (%165,)
}

def @func_12886() -> Tensor[(16, 3, 7), float32] {
  @func_3950() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_1703(%var_1630: Tensor[(2, 1440), float64], %var_1631: Tensor[(1, 28), int16], %var_1632: Tensor[(1, 360), float64]) -> (Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) {
  %166 = cast(%var_1630, dtype="float64") /* ty=Tensor[(2, 1440), float64] */;
  %167 = cast(%var_1631, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
  %168 = cast(%var_1632, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %169 = reshape(%166, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %170 = reshape(%167, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %171 = reshape(%168, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %172 = @func_1608(%169, %170, %171) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
  %173 = %172.4;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(252), float64] */;
  %175 = reshape(%174, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
  %176 = @func_710(%175) /* ty=(Tensor[(9, 2, 14), float64],) */;
  %177 = cast(%var_1631, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
  %178 = cast(%var_1631, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
  %179 = reshape(%177, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %180 = reshape(%178, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %181 = @func_1386(%179, %180) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %182 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %183 = %182.0;
  %184 = cast(%183, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %185 = log(%184) /* ty=Tensor[(16, 3, 7), float32] */;
  %186 = cast(%183, dtype="int8") /* ty=Tensor[(16, 3, 7), int8] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="int8") /* ty=Tensor[(16, 3, 7), int8] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %190 = cast(%var_1632, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %191 = reshape(%190, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %192 = @func_782(%191) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %193 = %176.0;
  %194 = %181.0;
  %195 = bitwise_and(%188, %189) /* ty=Tensor[(16, 3, 7), int8] */;
  %196 = %192.1;
  (%173, %var_1630, %var_1631, %var_1632, %193, %194, %195, %196)
}

def @func_5030() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %197 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %198 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  (%197, %198)
}

def @func_4575() -> (Tensor[(28), int16],) {
  %199 = @func_3840() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) */;
  %200 = %199.4;
  (%200,)
}

def @func_6087() -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) {
  %201 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %202 = cast(meta[relay.Constant][9] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %203 = reshape(%202, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
  %204 = @func_710(%203) /* ty=(Tensor[(9, 2, 14), float64],) */;
  %205 = %204.0;
  %206 = cast(meta[relay.Constant][9] /* ty=Tensor[(252), float64] */, dtype="bool") /* ty=Tensor[(252), bool] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="bool") /* ty=Tensor[(9, 2, 14), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %210 = @func_4575() /* ty=(Tensor[(28), int16],) */;
  %211 = %201.0;
  %212 = greater_equal(%208, %209) /* ty=Tensor[(9, 2, 14), bool] */;
  %213 = %210.0;
  (%211, %212, %213)
}

def @func_1454() -> Tensor[(16, 3, 7), float32] {
  %214 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %214.0
}

def @func_13158(%var_13104: Tensor[(4, 20), bool], %var_13105: Tensor[(2880), float64], %var_13106: Tensor[(28), int16], %var_13107: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(15, 8, 3), float64], Tensor[(4, 20), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) {
  %215 = @func_9779() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %216 = cast(%var_13104, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %217 = cast(%var_13104, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %218 = cast(%var_13105, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %219 = cast(%var_13106, dtype="int16") /* ty=Tensor[(28), int16] */;
  %220 = cast(%var_13107, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %221 = reshape(%216, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), bool] */;
  %222 = reshape(%217, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), bool] */;
  %223 = reshape(%218, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %224 = reshape(%219, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %225 = reshape(%220, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %226 = @func_2950(%221, %222, %223, %224, %225) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(2, 4, 10), float32], Tensor[(2, 4, 10), float64], Tensor[(28), float32]) */;
  %227 = @func_10883() /* ty=Tensor[(16, 3, 7), float32] */;
  %228 = %215.2;
  %229 = %226.4;
  %230 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
  (%227, %228, %229, %var_13104, %var_13105, %var_13106, %var_13107, %230)
}

def @func_14003() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(1, 360), float64]) {
  %231 = @func_5757() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %232 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 360), float64] */, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %233 = reshape(%232, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %234 = @func_9752(%233) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2, 1440), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) */;
  %235 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  %236 = %231.0;
  %237 = %234.0;
  (%235, %236, %237, meta[relay.Constant][10] /* ty=Tensor[(1, 360), float64] */)
}

def @func_12982() -> (Tensor[(16, 3, 7), float32],) {
  %238 = @func_9051() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %239 = %238.0;
  (%239,)
}

def @func_9260() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %240 = @func_6228() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %241 = @func_5757() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %242 = @func_8402() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
  %243 = %240.0;
  %244 = %241.0;
  %245 = %242.0;
  (%243, %244, %245)
}

def @func_10533() -> (Tensor[(16, 3, 7), float64],) {
  %246 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %247 = %246.0;
  (%247,)
}

def @func_14198(%var_14191: Tensor[(8, 2, 1), int16]) -> Tensor[(8, 2, 3), int16] {
  %248 = cast(%var_14191, dtype="int16") /* ty=Tensor[(8, 2, 1), int16] */;
  %249 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 2, 3), int16] */, dtype="int16") /* ty=Tensor[(8, 2, 3), int16] */;
  left_shift(%248, %249) /* ty=Tensor[(8, 2, 3), int16] */
}

def @func_7598() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %250 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
  %251 = %250.3;
  %252 = cast(%251, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %253 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %254 = @func_4289() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %255 = cos(%252) /* ty=Tensor[(16, 3, 7), float32] */;
  %256 = %253.0;
  %257 = %254.0;
  (%255, %256, %257)
}

def @func_12385() -> (Tensor[(16, 3, 7), bool],) {
  %258 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %259 = %258.1;
  (%259,)
}

def @func_1386(%var_1367: Tensor[(2, 7, 2), int16], %var_1368: Tensor[(2, 7, 2), int16]) -> (Tensor[(2, 7, 2), int16],) {
  %260 = cast(%var_1368, dtype="int16") /* ty=Tensor[(2, 7, 2), int16] */;
  %261 = shape_of(%var_1367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%var_1367, dtype="int16") /* ty=Tensor[(2, 7, 2), int16] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %264 = logical_xor(%262, %263) /* ty=Tensor[(2, 7, 2), int16] */;
  (%264,)
}

def @func_5605() -> (Tensor[(28), int16], Tensor[(16, 15, 12), bool]) {
  %265 = @func_2970() /* ty=(Tensor[(28), int16],) */;
  %266 = %265.0;
  %267 = cast(%266, dtype="int16") /* ty=Tensor[(28), int16] */;
  %268 = reshape(%267, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %269 = @func_3326(%268) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %270 = %269.0;
  (%266, %270)
}

def @func_2950(%var_2903: Tensor[(2, 4, 10), bool], %var_2904: Tensor[(2, 4, 10), bool], %var_2915: Tensor[(2880), float64], %var_2916: Tensor[(28), int16], %var_2917: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(2, 4, 10), float32], Tensor[(2, 4, 10), float64], Tensor[(28), float32]) {
  %271 = cast(%var_2915, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %272 = cast(%var_2916, dtype="int16") /* ty=Tensor[(28), int16] */;
  %273 = cast(%var_2917, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %274 = reshape(%271, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %275 = reshape(%272, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %276 = reshape(%273, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %277 = @func_2148(%274, %275, %276) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) */;
  %278 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %279 = reshape(%278, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %280 = @func_782(%279) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %281 = cast(%var_2903, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  %282 = sinh(%281) /* ty=Tensor[(2, 4, 10), float64] */;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(2, 4, 10), float32] */;
  %284 = cast(%var_2904, dtype="bool") /* ty=Tensor[(2, 4, 10), bool] */;
  %285 = shape_of(%var_2903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%var_2903, dtype="bool") /* ty=Tensor[(2, 4, 10), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %288 = logical_or(%286, %287) /* ty=Tensor[(2, 4, 10), bool] */;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  %290 = cast(%var_2916, dtype="int16") /* ty=Tensor[(28), int16] */;
  %291 = reshape(%290, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %292 = @func_2824(%291) /* ty=(Tensor[(28), float64], Tensor[(28), float32]) */;
  %293 = %277.7;
  %294 = %280.1;
  %295 = sin(%283) /* ty=Tensor[(2, 4, 10), float32] */;
  %296 = exp(%289) /* ty=Tensor[(2, 4, 10), float64] */;
  %297 = %292.1;
  (%293, %var_2915, %var_2916, %var_2917, %294, meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, %295, %296, %297)
}

def @func_10787() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %298 = @func_10342() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %299 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %300 = %298.1;
  %301 = %299.0;
  (%300, %301)
}

def @func_12105() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %302 = @func_4747() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %303 = @func_6889() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %304 = %302.0;
  %305 = %303.1;
  (%304, %305)
}

def @func_1307() -> Tensor[(16, 3, 7), float32] {
  @func_1212() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_9996(%var_9974: Tensor[(8, 6, 1), float64], %var_9975: Tensor[(8, 6, 4), float64]) -> (Tensor[(8, 6, 4), int16], Tensor[(16, 3, 7), float64]) {
  %306 = cast(%var_9974, dtype="float64") /* ty=Tensor[(8, 6, 1), float64] */;
  %307 = cast(%var_9975, dtype="float64") /* ty=Tensor[(8, 6, 4), float64] */;
  %308 = floor_mod(%306, %307) /* ty=Tensor[(8, 6, 4), float64] */;
  %309 = cast(%308, dtype="int16") /* ty=Tensor[(8, 6, 4), int16] */;
  %310 = shape_of(%var_9975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%var_9975, dtype="int16") /* ty=Tensor[(8, 6, 4), int16] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %313 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %314 = logical_xor(%311, %312) /* ty=Tensor[(8, 6, 4), int16] */;
  %315 = %313.0;
  (%314, %315)
}

def @func_6509() -> (Tensor[(2880), bool],) {
  %316 = @func_4476() /* ty=Tensor[(2880), float64] */;
  %317 = cast(meta[relay.Constant][13] /* ty=Tensor[(2880), float64] */, dtype="bool") /* ty=Tensor[(2880), bool] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(1), int32] */;
  %319 = cast(%316, dtype="bool") /* ty=Tensor[(2880), bool] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?), bool] */;
  %321 = less_equal(%319, %320) /* ty=Tensor[(2880), bool] */;
  (%321,)
}

def @func_8375() -> (Tensor[(16, 3, 7), float32],) {
  %322 = @func_4094() /* ty=Tensor[(16, 3, 7), float32] */;
  (%322,)
}

def @func_7934() -> (Tensor[(16, 3, 7), float64], Tensor[(64), float64]) {
  %323 = @func_6362() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) */;
  %324 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %325 = %323.1;
  %326 = %324.2;
  (%325, %326)
}

def @func_1781(%var_1729: Tensor[(8, 2, 4), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) {
  %327 = cast(meta[relay.Constant][14] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %328 = reshape(%327, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %329 = @func_1079(%328) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %330 = cast(%var_1729, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %331 = sqrt(%330) /* ty=Tensor[(8, 2, 4), float64] */;
  %332 = cast(%var_1729, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%331, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %336 = %329.0;
  %337 = subtract(%334, %335) /* ty=Tensor[(8, 2, 4), uint8] */;
  (%336, meta[relay.Constant][14] /* ty=Tensor[(2880), float64] */, %337)
}

def @func_3789() -> (Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  %338 = cast(meta[relay.Constant][15] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %339 = reshape(%338, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %340 = @func_782(%339) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %341 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %342 = %340.1;
  %343 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  (%341, %342, meta[relay.Constant][15] /* ty=Tensor[(360), float64] */, %343)
}

def @func_3571() -> Tensor[(16, 3, 7), float32] {
  @func_1212() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_9164() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %344 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %345 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %346 = %344.0;
  %347 = %345.0;
  (%346, %347)
}

def @func_6622() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  %348 = @func_3270() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %349 = @func_4575() /* ty=(Tensor[(28), int16],) */;
  %350 = @func_5030() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %351 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %352 = %348.0;
  %353 = %349.0;
  %354 = %350.1;
  %355 = %351.1;
  (%352, %353, %354, %355)
}

def @func_1340() -> (Tensor[(16, 3, 7), float32],) {
  %356 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  (%356,)
}

def @func_4240() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) {
  %357 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %358 = cast(meta[relay.Constant][16] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %359 = reshape(%358, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
  %360 = @func_1781(%359) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) */;
  %361 = %357.0;
  %362 = %360.0;
  (%361, %362, meta[relay.Constant][16] /* ty=Tensor[(64), float64] */)
}

def @func_3624(%var_3606: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) {
  %363 = cast(%var_3606, dtype="int16") /* ty=Tensor[(28), int16] */;
  %364 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %365 = cast(meta[relay.Constant][18] /* ty=Tensor[(480, 6), float64] */, dtype="float64") /* ty=Tensor[(480, 6), float64] */;
  %366 = reshape(%363, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %367 = reshape(%364, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %368 = reshape(%365, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %369 = @func_1925(%366, %367, %368) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
  %370 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
  %371 = %369.9;
  (%370, %371, %var_3606, meta[relay.Constant][17] /* ty=Tensor[(360), float64] */, meta[relay.Constant][18] /* ty=Tensor[(480, 6), float64] */)
}

def @func_3103() -> (Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %372 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %373 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
  %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%372, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %377 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %378 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %379 = logical_or(%375, %376) /* ty=Tensor[(16, 3, 7), bool] */;
  %380 = log2(%377) /* ty=Tensor[(16, 3, 7), float32] */;
  %381 = atanh(%378) /* ty=Tensor[(16, 3, 7), float32] */;
  (%379, %380, %381)
}

def @func_7684() -> (Tensor[(28), int16], Tensor[(28), int16]) {
  %382 = @func_5199() /* ty=(Tensor[(28), int16],) */;
  %383 = %382.0;
  %384 = @func_4652() /* ty=Tensor[(28), int16] */;
  (%383, %384)
}

def @func_12785() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
  %385 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %386 = @func_8660() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), int16]) */;
  %387 = %385.1;
  %388 = %386.0;
  (%387, %388)
}

def @func_12822() -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64]) {
  %389 = @func_9684() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %390 = %389.0;
  %391 = @func_7547() /* ty=Tensor[(504), float64] */;
  (%390, %391)
}

def @func_7720() -> (Tensor[(504), float64], Tensor[(7, 9, 8), int16]) {
  %392 = @func_7547() /* ty=Tensor[(504), float64] */;
  %393 = cast(%392, dtype="float64") /* ty=Tensor[(504), float64] */;
  %394 = reshape(%393, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %395 = @func_168(%394) /* ty=Tensor[(7, 9, 8), int16] */;
  (%392, %395)
}

def @func_7294() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %396 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %397 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %398 = %396.0;
  %399 = %397.1;
  (%398, %399)
}

def @func_9684() -> (Tensor[(16, 3, 7), float32],) {
  %400 = @func_9051() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %401 = %400.0;
  (%401,)
}

def @func_6296(%var_6242: Tensor[(9, 5, 3), uint64], %var_6255: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(9, 5, 3), bool]) {
  %402 = cast(%var_6255, dtype="int16") /* ty=Tensor[(28), int16] */;
  %403 = reshape(%402, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %404 = @func_3326(%403) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %405 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 5, 3), uint64] */, dtype="uint64") /* ty=Tensor[(9, 5, 3), uint64] */;
  %406 = shape_of(%var_6242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%var_6242, dtype="uint64") /* ty=Tensor[(9, 5, 3), uint64] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %409 = bitwise_and(%407, %408) /* ty=Tensor[(9, 5, 3), uint64] */;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
  %411 = sqrt(%410) /* ty=Tensor[(9, 5, 3), float32] */;
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 5, 3), float32] */, dtype="uint32") /* ty=Tensor[(9, 5, 3), uint32] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="uint32") /* ty=Tensor[(9, 5, 3), uint32] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %416 = bitwise_or(%414, %415) /* ty=Tensor[(9, 5, 3), uint32] */;
  %417 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 5, 3), float32] */, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %421 = %404.3;
  %422 = greater_equal(%419, %420) /* ty=Tensor[(9, 5, 3), bool] */;
  (%421, %var_6255, %422)
}

def @func_9446(%var_9437: Tensor[(16, 10, 12), float32]) -> (Tensor[(16, 10, 12), float32],) {
  %423 = cast(%var_9437, dtype="float32") /* ty=Tensor[(16, 10, 12), float32] */;
  %424 = tan(%423) /* ty=Tensor[(16, 10, 12), float32] */;
  (%424,)
}

def @func_11109() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], float64, Tensor[(320), float64], Tensor[(16, 3, 7), bool]) {
  %425 = cast(7.40259f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %426 = cast(meta[relay.Constant][22] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %427 = reshape(%425, newshape=[]) /* ty=float64 */;
  %428 = reshape(%426, newshape=[8, 4, 10]) /* ty=Tensor[(8, 4, 10), float64] */;
  %429 = @func_10463(%427, %428) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(8, 4, 10), float32], Tensor[(8, 4, 10), uint32], Tensor[(28), int16]) */;
  %430 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %431 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
  %432 = %429.3;
  %433 = %430.1;
  (%431, %432, 7.40259f64 /* ty=float64 */, meta[relay.Constant][22] /* ty=Tensor[(320), float64] */, %433)
}

def @func_13339() -> (Tensor[(16, 3, 7), float32],) {
  %434 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %435 = %434.1;
  (%435,)
}

def @func_13520(%var_13506: Tensor[(8, 14, 4), bool], %var_13507: Tensor[(8, 14, 4), bool]) -> (Tensor[(8, 14, 4), bool], Tensor[(16, 3, 7), float32]) {
  %436 = cast(%var_13507, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %437 = shape_of(%var_13506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_13506, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %440 = @func_6489() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %441 = logical_and(%438, %439) /* ty=Tensor[(8, 14, 4), bool] */;
  %442 = %440.0;
  (%441, %442)
}

def @func_8402() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %443 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %444 = @func_7684() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %445 = %443.0;
  %446 = %444.1;
  (%445, %446)
}

def @func_2148(%var_2117: Tensor[(2880), float64], %var_2118: Tensor[(28), int16], %var_2120: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) {
  %447 = cast(%var_2117, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %448 = cast(%var_2118, dtype="int16") /* ty=Tensor[(28), int16] */;
  %449 = cast(meta[relay.Constant][23] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %450 = cast(%var_2120, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %451 = reshape(%447, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %452 = reshape(%448, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %453 = reshape(%449, newshape=[36, 10]) /* ty=Tensor[(36, 10), float64] */;
  %454 = reshape(%450, newshape=[10, 64]) /* ty=Tensor[(10, 64), uint64] */;
  %455 = @func_2040(%451, %452, %453, %454) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %456 = %455.4;
  %457 = cast(%456, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
  %458 = reshape(%457, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %459 = @func_782(%458) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %460 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %461 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %462 = %459.0;
  %463 = %460.0;
  (%461, %456, %var_2117, %var_2118, meta[relay.Constant][23] /* ty=Tensor[(360), float64] */, %var_2120, %462, %463)
}

def @func_5884(%var_5841: Tensor[(252), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(28), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 3, 7), float32]) {
  %464 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(28), float32] */;
  %467 = sinh(%466) /* ty=Tensor[(28), float32] */;
  %468 = cast(%467, dtype="int16") /* ty=Tensor[(28), int16] */;
  %469 = reshape(%468, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %470 = @func_3326(%469) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %471 = %470.0;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %473 = reshape(%472, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %474 = @func_5552(%473) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64]) */;
  %475 = cast(%465, dtype="float32") /* ty=Tensor[(28), float32] */;
  %476 = shape_of(%467, dtype="int32") /* ty=Tensor[(1), int32] */;
  %477 = cast(%467, dtype="float32") /* ty=Tensor[(28), float32] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?), float32] */;
  %479 = %474.2;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %481 = cast(%465, dtype="int16") /* ty=Tensor[(28), int16] */;
  %482 = cast(meta[relay.Constant][24] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %483 = reshape(%480, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
  %484 = reshape(%481, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
  %485 = reshape(%482, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %486 = @func_1703(%483, %484, %485) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
  %487 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %488 = cast(%467, dtype="int16") /* ty=Tensor[(28), int16] */;
  %489 = reshape(%488, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %490 = @func_3326(%489) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %491 = cast(%var_5841, dtype="float64") /* ty=Tensor[(252), float64] */;
  %492 = reshape(%491, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
  %493 = @func_710(%492) /* ty=(Tensor[(9, 2, 14), float64],) */;
  %494 = floor_mod(%477, %478) /* ty=Tensor[(28), float32] */;
  %495 = cast(%494, dtype="int16") /* ty=Tensor[(28), int16] */;
  %496 = reshape(%495, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %497 = @func_3624(%496) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %498 = @func_3840() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) */;
  %499 = %486.7;
  %500 = %487.0;
  %501 = %490.3;
  %502 = %493.0;
  %503 = %497.1;
  %504 = %498.0;
  (%471, %479, %494, %499, meta[relay.Constant][24] /* ty=Tensor[(360), float64] */, %500, %501, %502, %var_5841, %503, %504)
}

def @func_5470() -> (Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float64], Tensor[(9, 2, 14), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), int16], Tensor[(16, 3, 7), float64], Tensor[(2880), float64], Tensor[(504), float64]) {
  %505 = @func_3789() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
  %506 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %507 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %508 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %509 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %510 = %505.1;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %512 = reshape(%511, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %513 = @func_782(%512) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %514 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %515 = %514.1;
  %516 = cast(%515, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %517 = sinh(%516) /* ty=Tensor[(16, 3, 7), float32] */;
  %518 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %519 = %518.1;
  %520 = cast(%519, dtype="int16") /* ty=Tensor[(16, 3, 7), int16] */;
  %521 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%517, dtype="int16") /* ty=Tensor[(16, 3, 7), int16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %524 = cast(%517, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
  %525 = cast(meta[relay.Constant][25] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %526 = reshape(%525, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %527 = @func_2331(%526) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %528 = %506.0;
  %529 = %507.1;
  %530 = %508.0;
  %531 = %509.0;
  %532 = %513.0;
  %533 = maximum(%522, %523) /* ty=Tensor[(16, 3, 7), int16] */;
  %534 = erf(%524) /* ty=Tensor[(16, 3, 7), float64] */;
  %535 = %527.5;
  (%510, %528, %529, %530, %531, %532, %533, %534, %535, meta[relay.Constant][25] /* ty=Tensor[(504), float64] */)
}

def @func_11650(%var_11643: Tensor[(16, 11, 4), uint64], %var_11644: Tensor[(16, 11, 4), uint64]) -> (Tensor[(16, 11, 4), uint64],) {
  %536 = cast(%var_11644, dtype="uint64") /* ty=Tensor[(16, 11, 4), uint64] */;
  %537 = shape_of(%var_11643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_11643, dtype="uint64") /* ty=Tensor[(16, 11, 4), uint64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %540 = multiply(%538, %539) /* ty=Tensor[(16, 11, 4), uint64] */;
  (%540,)
}

def @func_10463(%var_10409: float64, %var_10410: Tensor[(8, 4, 10), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(8, 4, 10), float32], Tensor[(8, 4, 10), uint32], Tensor[(28), int16]) {
  %541 = @func_9315() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %542 = cast(%var_10410, dtype="float64") /* ty=Tensor[(8, 4, 10), float64] */;
  %543 = log(%542) /* ty=Tensor[(8, 4, 10), float64] */;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
  %545 = cast(%var_10409, dtype="float64") /* ty=float64 */;
  %546 = cast(%var_10410, dtype="float64") /* ty=Tensor[(8, 4, 10), float64] */;
  %547 = floor_divide(%545, %546) /* ty=Tensor[(8, 4, 10), float64] */;
  %548 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 4, 10), float64] */, dtype="uint32") /* ty=Tensor[(8, 4, 10), uint32] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="uint32") /* ty=Tensor[(8, 4, 10), uint32] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %552 = @func_10014() /* ty=(Tensor[(28), int16],) */;
  %553 = %541.0;
  %554 = erf(%544) /* ty=Tensor[(8, 4, 10), float32] */;
  %555 = add(%550, %551) /* ty=Tensor[(8, 4, 10), uint32] */;
  %556 = %552.0;
  (%553, %554, %555, %556)
}

def @func_3840() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) {
  %557 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %558 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %559 = cast(meta[relay.Constant][27] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %560 = reshape(%559, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %561 = @func_2331(%560) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %562 = @func_2970() /* ty=(Tensor[(28), int16],) */;
  %563 = %557.1;
  %564 = %558.0;
  %565 = %561.8;
  %566 = %562.0;
  (%563, %564, %565, meta[relay.Constant][27] /* ty=Tensor[(504), float64] */, %566)
}

def @func_13230() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %567 = @func_6980() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %568 = %567.0;
  %569 = @func_10347() /* ty=Tensor[(16, 3, 7), float32] */;
  (%568, %569)
}

def @func_4652() -> Tensor[(28), int16] {
  %570 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %570.1
}

def @func_11791() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(2, 5, 10), float64], Tensor[(100), uint64], Tensor[(16, 3, 7), float64], Tensor[(28), int16]) {
  %571 = @func_9651() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %572 = cast(meta[relay.Constant][28] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %573 = cast(meta[relay.Constant][28] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %574 = reshape(%572, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint64] */;
  %575 = reshape(%573, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint64] */;
  %576 = @func_4706(%574, %575) /* ty=(Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(2, 5, 10), float64]) */;
  %577 = @func_10562() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %578 = @func_9779() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %579 = @func_9522() /* ty=Tensor[(16, 3, 7), float32] */;
  %580 = %571.0;
  %581 = %576.2;
  %582 = %577.0;
  %583 = %578.1;
  (%579, %580, %581, meta[relay.Constant][28] /* ty=Tensor[(100), uint64] */, %582, %583)
}

def @func_13877(%var_13823: Tensor[(2880), float64], %var_13824: Tensor[(640), uint64]) -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(80), bool], Tensor[(2880), float64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %584 = @func_5199() /* ty=(Tensor[(28), int16],) */;
  %585 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %586 = cast(meta[relay.Constant][29] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %587 = cast(%var_13823, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %588 = %584.0;
  %589 = cast(%588, dtype="int16") /* ty=Tensor[(28), int16] */;
  %590 = cast(%var_13824, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %591 = reshape(%586, newshape=[4, 20]) /* ty=Tensor[(4, 20), bool] */;
  %592 = reshape(%587, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %593 = reshape(%589, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %594 = reshape(%590, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %595 = @func_13158(%591, %592, %593, %594) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(15, 8, 3), float64], Tensor[(4, 20), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %596 = @func_9684() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %597 = @func_11552() /* ty=Tensor[(16, 3, 7), float32] */;
  %598 = %585.0;
  %599 = %595.2;
  %600 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %601 = %596.0;
  (%588, %597, %598, %599, meta[relay.Constant][29] /* ty=Tensor[(80), bool] */, %var_13823, %var_13824, %600, %601)
}

def @func_8660() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), int16]) {
  %602 = @func_4289() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %603 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %604 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %605 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %606 = @func_7684() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %607 = %602.0;
  %608 = %603.1;
  %609 = %604.0;
  %610 = %605.0;
  %611 = %606.1;
  (%607, %608, %609, %610, %611)
}

def @func_6164() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %612 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %613 = @func_3270() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %614 = %612.0;
  %615 = %613.0;
  (%614, %615)
}

def @func_2717() -> (Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) {
  %616 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %617 = cast(meta[relay.Constant][30] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %618 = reshape(%617, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %619 = @func_1079(%618) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %620 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %621 = %616.1;
  %622 = %619.1;
  %623 = %620.0;
  (%621, %622, meta[relay.Constant][30] /* ty=Tensor[(2880), float64] */, %623)
}

def @func_3941(%var_3925: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
  %624 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %625 = cast(meta[relay.Constant][31] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %626 = reshape(%625, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
  %627 = @func_529(%626) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
  %628 = cast(%var_3925, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %629 = cast(meta[relay.Constant][32] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %630 = cast(meta[relay.Constant][33] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %631 = cast(meta[relay.Constant][31] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %632 = reshape(%628, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %633 = reshape(%629, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %634 = reshape(%630, newshape=[36, 10]) /* ty=Tensor[(36, 10), float64] */;
  %635 = reshape(%631, newshape=[10, 64]) /* ty=Tensor[(10, 64), uint64] */;
  %636 = @func_2040(%632, %633, %634, %635) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %637 = %624.3;
  %638 = %627.1;
  %639 = %636.8;
  (%637, %638, meta[relay.Constant][31] /* ty=Tensor[(640), uint64] */, %639, %var_3925, meta[relay.Constant][32] /* ty=Tensor[(28), int16] */, meta[relay.Constant][33] /* ty=Tensor[(360), float64] */)
}

def @func_7844(%var_7828: int16, %var_7829: Tensor[(11, 5, 15), int16]) -> (Tensor[(11, 5, 15), bool], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) {
  %640 = cast(%var_7828, dtype="bool") /* ty=bool */;
  %641 = cast(%var_7829, dtype="bool") /* ty=Tensor[(11, 5, 15), bool] */;
  %642 = @func_6362() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) */;
  %643 = @func_6939() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %644 = less_equal(%640, %641) /* ty=Tensor[(11, 5, 15), bool] */;
  %645 = %642.1;
  %646 = %643.0;
  (%644, %645, %646)
}

def @func_8806() -> Tensor[(16, 3, 7), float32] {
  @func_8563() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_4991(%var_4984: Tensor[(126, 2), float64]) -> (Tensor[(2880), float64], Tensor[(64), float64], Tensor[(16, 3, 7), int64], Tensor[(9, 2, 14), float64], Tensor[(126, 2), float64]) {
  %647 = cast(meta[relay.Constant][34] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %648 = reshape(%647, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
  %649 = @func_1781(%648) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) */;
  %650 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %651 = %650.0;
  %652 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 3, 7), float32] */, dtype="int64") /* ty=Tensor[(16, 3, 7), int64] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%651, dtype="int64") /* ty=Tensor[(16, 3, 7), int64] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %656 = cast(%var_4984, dtype="float64") /* ty=Tensor[(126, 2), float64] */;
  %657 = reshape(%656, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
  %658 = @func_710(%657) /* ty=(Tensor[(9, 2, 14), float64],) */;
  %659 = %649.1;
  %660 = left_shift(%654, %655) /* ty=Tensor[(16, 3, 7), int64] */;
  %661 = %658.0;
  (%659, meta[relay.Constant][34] /* ty=Tensor[(64), float64] */, %660, %661, %var_4984)
}

def @func_8695(%var_8663: Tensor[(2, 7, 12), float32]) -> (Tensor[(2, 7, 12), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 12), float32]) {
  %662 = cast(%var_8663, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %663 = @func_6228() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %664 = cast(%var_8663, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %665 = cos(%664) /* ty=Tensor[(2, 7, 12), float32] */;
  %666 = cast(%665, dtype="bool") /* ty=Tensor[(2, 7, 12), bool] */;
  %667 = shape_of(%var_8663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%var_8663, dtype="bool") /* ty=Tensor[(2, 7, 12), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = greater_equal(%668, %669) /* ty=Tensor[(2, 7, 12), bool] */;
  %671 = cast(%670, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %672 = atanh(%662) /* ty=Tensor[(2, 7, 12), float64] */;
  %673 = %663.0;
  %674 = asin(%671) /* ty=Tensor[(2, 7, 12), float32] */;
  (%672, %673, %674)
}

def @func_10130() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  %675 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %676 = @func_8542() /* ty=Tensor[(16, 3, 7), float32] */;
  %677 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %678 = %675.1;
  (%676, %677, %678)
}

def @func_10883() -> Tensor[(16, 3, 7), float32] {
  @func_8806() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_4706(%var_4689: Tensor[(2, 5, 10), uint64], %var_4690: Tensor[(2, 5, 10), uint64]) -> (Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(2, 5, 10), float64]) {
  %679 = cast(meta[relay.Constant][36] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %680 = cast(meta[relay.Constant][36] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %681 = reshape(%679, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %682 = reshape(%680, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %683 = @func_1386(%681, %682) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %684 = cast(%var_4690, dtype="uint64") /* ty=Tensor[(2, 5, 10), uint64] */;
  %685 = shape_of(%var_4689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%var_4689, dtype="uint64") /* ty=Tensor[(2, 5, 10), uint64] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %688 = add(%686, %687) /* ty=Tensor[(2, 5, 10), uint64] */;
  %689 = cast(%var_4690, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %693 = %683.0;
  %694 = divide(%691, %692) /* ty=Tensor[(2, 5, 10), float64] */;
  (%693, meta[relay.Constant][36] /* ty=Tensor[(28), int16] */, %694)
}

def @func_12930() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
  %695 = @func_10014() /* ty=(Tensor[(28), int16],) */;
  %696 = @func_11453() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %697 = %695.0;
  %698 = %696.0;
  (%697, %698)
}

def @func_6939() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %699 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %700 = @func_2618() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %701 = %699.0;
  %702 = %700.0;
  (%701, %702)
}

def @func_9752(%var_9743: Tensor[(360), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2, 1440), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
  %703 = @func_6087() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) */;
  %704 = cast(meta[relay.Constant][37] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %705 = cast(meta[relay.Constant][38] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %706 = cast(%var_9743, dtype="float64") /* ty=Tensor[(360), float64] */;
  %707 = reshape(%704, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
  %708 = reshape(%705, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
  %709 = reshape(%706, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %710 = @func_1703(%707, %708, %709) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
  %711 = %703.0;
  %712 = %710.1;
  (%711, %712, meta[relay.Constant][37] /* ty=Tensor[(2880), float64] */, meta[relay.Constant][38] /* ty=Tensor[(28), int16] */, %var_9743)
}

def @func_13962() -> Tensor[(2, 7, 2), int16] {
  %713 = @func_8091() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16]) */;
  %713.4
}

def @func_1608(%var_1553: Tensor[(2880), float64], %var_1575: Tensor[(28), int16], %var_1603: Tensor[(360), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) {
  %714 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %715 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(16, 3, 7), int32] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%714, dtype="int32") /* ty=Tensor[(16, 3, 7), int32] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %719 = bitwise_xor(%717, %718) /* ty=Tensor[(16, 3, 7), int32] */;
  %720 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
  %721 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%714, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %724 = floor_mod(%722, %723) /* ty=Tensor[(16, 3, 7), float64] */;
  %725 = cast(%724, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
  %726 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%719, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %729 = greater_equal(%727, %728) /* ty=Tensor[(16, 3, 7), bool] */;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %731 = cast(%var_1553, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %732 = reshape(%731, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %733 = @func_1079(%732) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %734 = cast(meta[relay.Constant][40] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %735 = reshape(%734, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
  %736 = @func_710(%735) /* ty=(Tensor[(9, 2, 14), float64],) */;
  %737 = cast(%729, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %738 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%714, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %741 = cast(%var_1575, dtype="int16") /* ty=Tensor[(28), int16] */;
  %742 = cast(%var_1575, dtype="int16") /* ty=Tensor[(28), int16] */;
  %743 = reshape(%741, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %744 = reshape(%742, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %745 = @func_1386(%743, %744) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %746 = cast(%var_1603, dtype="float64") /* ty=Tensor[(360), float64] */;
  %747 = reshape(%746, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %748 = @func_782(%747) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %749 = acos(%730) /* ty=Tensor[(16, 3, 7), float32] */;
  %750 = %733.1;
  %751 = %736.0;
  %752 = floor_divide(%739, %740) /* ty=Tensor[(16, 3, 7), float32] */;
  %753 = %745.0;
  %754 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %755 = %748.1;
  (%749, %750, %var_1553, %751, meta[relay.Constant][40] /* ty=Tensor[(252), float64] */, %752, %753, %var_1575, %754, %755, %var_1603)
}

def @func_12018() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(36, 10), float64], Tensor[(2, 1440), float64]) {
  %756 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %757 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %758 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %759 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %760 = cast(meta[relay.Constant][41] /* ty=Tensor[(36, 10), float64] */, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
  %761 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 1440), float64] */, dtype="float64") /* ty=Tensor[(2, 1440), float64] */;
  %762 = reshape(%760, newshape=[2, 180]) /* ty=Tensor[(2, 180), float64] */;
  %763 = reshape(%761, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %764 = @func_10390(%762, %763) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), int8], Tensor[(28), int16], Tensor[(2, 180), float64], Tensor[(2880), float64]) */;
  %765 = %756.0;
  %766 = %757.0;
  %767 = %758.1;
  %768 = %759.0;
  %769 = %764.1;
  (%765, %766, %767, %768, %769, meta[relay.Constant][41] /* ty=Tensor[(36, 10), float64] */, meta[relay.Constant][42] /* ty=Tensor[(2, 1440), float64] */)
}

def @func_8710(%var_8703: Tensor[(5, 15, 3), float64]) -> (Tensor[(5, 15, 3), bool],) {
  %770 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 15, 3), float64] */, dtype="bool") /* ty=Tensor[(5, 15, 3), bool] */;
  %771 = shape_of(%var_8703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%var_8703, dtype="bool") /* ty=Tensor[(5, 15, 3), bool] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %774 = greater(%772, %773) /* ty=Tensor[(5, 15, 3), bool] */;
  (%774,)
}

def @func_1079(%var_1056: Tensor[(16, 15, 12), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) {
  %775 = cast(meta[relay.Constant][44] /* ty=Tensor[(16, 15, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %776 = log10(%775) /* ty=Tensor[(16, 15, 12), float64] */;
  %777 = cast(%var_1056, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%776, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %781 = cast(%var_1056, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %782 = less(%779, %780) /* ty=Tensor[(16, 15, 12), bool] */;
  %783 = asin(%781) /* ty=Tensor[(16, 15, 12), float64] */;
  (%782, %783)
}

def @func_10272(%var_10244: Tensor[(225), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64]) {
  %784 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %785 = cast(%var_10244, dtype="float64") /* ty=Tensor[(225), float64] */;
  %786 = reshape(%785, newshape=[5, 15, 3]) /* ty=Tensor[(5, 15, 3), float64] */;
  %787 = @func_8710(%786) /* ty=(Tensor[(5, 15, 3), bool],) */;
  %788 = %784.0;
  %789 = %787.0;
  (%788, %789, %var_10244)
}

def @func_4094() -> Tensor[(16, 3, 7), float32] {
  %790 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %790.0
}

def @func_2331(%var_2288: Tensor[(504), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) {
  %791 = cast(%var_2288, dtype="float64") /* ty=Tensor[(504), float64] */;
  %792 = reshape(%791, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %793 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %794 = cast(meta[relay.Constant][45] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %795 = reshape(%794, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %796 = @func_1079(%795) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %797 = cast(meta[relay.Constant][46] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %798 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 180), float64] */, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %799 = %796.1;
  %800 = cast(%799, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %801 = reshape(%797, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %802 = reshape(%798, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %803 = reshape(%800, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %804 = @func_1925(%801, %802, %803) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
  %805 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %806 = @func_168(%792) /* ty=Tensor[(7, 9, 8), int16] */;
  %807 = %793.0;
  %808 = %804.1;
  (%805, %806, %var_2288, %807, %799, meta[relay.Constant][45] /* ty=Tensor[(2880), float64] */, %808, meta[relay.Constant][46] /* ty=Tensor[(28), int16] */, meta[relay.Constant][47] /* ty=Tensor[(2, 180), float64] */)
}

def @func_3675(%var_3663: Tensor[(504), float64]) -> (Tensor[(504), bool],) {
  %809 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %810 = %809.2;
  %811 = cast(%var_3663, dtype="bool") /* ty=Tensor[(504), bool] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(1), int32] */;
  %813 = cast(%810, dtype="bool") /* ty=Tensor[(504), bool] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?), bool] */;
  %815 = logical_or(%813, %814) /* ty=Tensor[(504), bool] */;
  (%815,)
}

def @func_13395(%var_13378: Tensor[(16, 2, 8), float32], %var_13379: Tensor[(16, 2, 8), float32], %var_13384: Tensor[(28), int16], %var_13385: Tensor[(360), float64]) -> (Tensor[(16, 2, 8), bool], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(360), float64], Tensor[(2880), float64]) {
  %816 = cast(%var_13379, dtype="bool") /* ty=Tensor[(16, 2, 8), bool] */;
  %817 = shape_of(%var_13378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%var_13378, dtype="bool") /* ty=Tensor[(16, 2, 8), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = cast(%var_13384, dtype="int16") /* ty=Tensor[(28), int16] */;
  %821 = cast(%var_13385, dtype="float64") /* ty=Tensor[(360), float64] */;
  %822 = cast(meta[relay.Constant][48] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %823 = reshape(%820, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %824 = reshape(%821, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %825 = reshape(%822, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %826 = @func_1925(%823, %824, %825) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
  %827 = greater(%818, %819) /* ty=Tensor[(16, 2, 8), bool] */;
  %828 = %826.7;
  (%827, %828, %var_13384, %var_13385, meta[relay.Constant][48] /* ty=Tensor[(2880), float64] */)
}

def @func_14027(%var_14016: Tensor[(16, 16, 1), float32]) -> (Tensor[(16, 16, 1), float32], Tensor[(16, 3, 7), float32]) {
  %829 = cast(%var_14016, dtype="float32") /* ty=Tensor[(16, 16, 1), float32] */;
  %830 = erf(%829) /* ty=Tensor[(16, 16, 1), float32] */;
  %831 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  (%830, %831)
}

def @func_8306() -> Tensor[(16, 3, 7), float32] {
  %832 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %832.0
}

def @func_6980() -> (Tensor[(16, 3, 7), float32],) {
  %833 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %834 = %833.0;
  (%834,)
}

def @func_4289() -> (Tensor[(16, 3, 7), float32],) {
  %835 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %836 = %835.0;
  (%836,)
}

def @func_5757() -> (Tensor[(16, 3, 7), float32],) {
  %837 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
  %838 = %837.3;
  (%838,)
}

def @func_12606() -> (Tensor[(16, 3, 7), float32],) {
  %839 = @func_3789() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
  %840 = %839.0;
  (%840,)
}

def @func_6362() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) {
  %841 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %842 = cast(meta[relay.Constant][49] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %843 = reshape(%842, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %844 = @func_5884(%843) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(28), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 3, 7), float32]) */;
  %845 = %841.0;
  %846 = %844.5;
  (%845, %846, meta[relay.Constant][49] /* ty=Tensor[(252), float64] */)
}

def @func_11051() -> (Tensor[(2880), float64],) {
  %847 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%847,)
}

def @func_3133(%var_3131: Tensor[(640), uint64]) -> (Tensor[(28), int16], Tensor[(504), float64], Tensor[(640), uint64]) {
  %848 = @func_2970() /* ty=(Tensor[(28), int16],) */;
  %849 = cast(%var_3131, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %850 = reshape(%849, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
  %851 = @func_529(%850) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
  %852 = %848.0;
  %853 = %851.2;
  (%852, %853, %var_3131)
}

def @func_6819(%var_6737: Tensor[(140), int16], %var_6757: Tensor[(140), int16]) -> (Tensor[(140), uint16], Tensor[(2880), float32], Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %854 = cast(%var_6757, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %855 = shape_of(%var_6737, dtype="int32") /* ty=Tensor[(1), int32] */;
  %856 = cast(%var_6737, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %858 = @func_6509() /* ty=(Tensor[(2880), bool],) */;
  %859 = %858.0;
  %860 = cast(%var_6737, dtype="int16") /* ty=Tensor[(140), int16] */;
  %861 = reshape(%860, newshape=[14, 2, 5]) /* ty=Tensor[(14, 2, 5), int16] */;
  %862 = @func_4546(%861) /* ty=(Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) */;
  %863 = %862.2;
  %864 = cast(%863, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %865 = shape_of(%859, dtype="int32") /* ty=Tensor[(1), int32] */;
  %866 = cast(%859, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?), float32] */;
  %868 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %869 = bitwise_or(%856, %857) /* ty=Tensor[(140), uint16] */;
  %870 = floor_divide(%866, %867) /* ty=Tensor[(2880), float32] */;
  %871 = %868.0;
  %872 = @func_4652() /* ty=Tensor[(28), int16] */;
  (%869, %870, %871, %872)
}

def @func_13031() -> Tensor[(16, 3, 7), float32] {
  @func_10347() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_11183() -> Tensor[(28), int16] {
  %873 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %873.1
}

def @func_2370() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) {
  %874 = cast(meta[relay.Constant][50] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %875 = reshape(%874, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %876 = @func_2331(%875) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %877 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %878 = %876.7;
  (%877, %878, meta[relay.Constant][50] /* ty=Tensor[(504), float64] */)
}

def @func_5552(%var_5540: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64]) {
  %879 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %880 = cast(%var_5540, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %881 = reshape(%880, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %882 = @func_1079(%881) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %883 = %879.1;
  %884 = %882.1;
  %885 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%883, %884, %var_5540, %885)
}

def @func_4546(%var_4532: Tensor[(14, 2, 5), int16]) -> (Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) {
  %886 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 2, 5), int16] */, dtype="bool") /* ty=Tensor[(14, 2, 5), bool] */;
  %887 = shape_of(%var_4532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%var_4532, dtype="bool") /* ty=Tensor[(14, 2, 5), bool] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %890 = cast(%var_4532, dtype="float64") /* ty=Tensor[(14, 2, 5), float64] */;
  %891 = less(%888, %889) /* ty=Tensor[(14, 2, 5), bool] */;
  %892 = exp(%890) /* ty=Tensor[(14, 2, 5), float64] */;
  %893 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%891, %892, %893)
}

def @func_7798() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) {
  %894 = @func_6622() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %895 = @func_6087() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) */;
  %896 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %897 = %894.0;
  %898 = %895.0;
  %899 = %896.0;
  %900 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  %901 = @func_7547() /* ty=Tensor[(504), float64] */;
  (%897, %898, %899, %900, %901)
}

def @func_6447() -> Tensor[(16, 3, 7), float32] {
  %902 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %902.0
}

def @func_2085() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) {
  %903 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %904 = cast(meta[relay.Constant][52] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %905 = reshape(%904, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
  %906 = @func_1781(%905) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) */;
  %907 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %908 = %903.0;
  %909 = %906.0;
  (%907, %908, %909, meta[relay.Constant][52] /* ty=Tensor[(64), float64] */)
}

def @func_1925(%var_1802: Tensor[(28), int16], %var_1803: Tensor[(360), float64], %var_1806: Tensor[(16, 15, 12), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) {
  %910 = cast(%var_1806, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %911 = cast(%var_1802, dtype="int16") /* ty=Tensor[(28), int16] */;
  %912 = cast(%var_1803, dtype="float64") /* ty=Tensor[(360), float64] */;
  %913 = reshape(%910, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %914 = reshape(%911, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %915 = reshape(%912, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %916 = @func_1608(%913, %914, %915) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
  %917 = cast(meta[relay.Constant][53] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %918 = cast(%var_1802, dtype="int16") /* ty=Tensor[(28), int16] */;
  %919 = cast(%var_1803, dtype="float64") /* ty=Tensor[(360), float64] */;
  %920 = reshape(%917, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %921 = reshape(%918, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %922 = reshape(%919, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %923 = @func_1608(%920, %921, %922) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
  %924 = %923.1;
  %925 = cast(%var_1806, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %926 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%924, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %929 = bitwise_or(%927, %928) /* ty=Tensor[(16, 15, 12), int64] */;
  %930 = cast(%929, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %931 = exp(%930) /* ty=Tensor[(16, 15, 12), float32] */;
  %932 = cast(%931, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %933 = shape_of(%var_1806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_1806, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %936 = bitwise_xor(%934, %935) /* ty=Tensor[(16, 15, 12), int64] */;
  %937 = cast(%929, dtype="int8") /* ty=Tensor[(16, 15, 12), int8] */;
  %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%936, dtype="int8") /* ty=Tensor[(16, 15, 12), int8] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %941 = cast(%929, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %942 = reshape(%941, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %943 = @func_1079(%942) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %944 = cast(%936, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %945 = reshape(%944, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %946 = @func_1079(%945) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %947 = cast(%931, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %948 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 15, 12), int64] */, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %949 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%936, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %952 = cast(%var_1803, dtype="float64") /* ty=Tensor[(360), float64] */;
  %953 = reshape(%952, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %954 = @func_782(%953) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %955 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %956 = %916.7;
  %957 = logical_xor(%939, %940) /* ty=Tensor[(16, 15, 12), int8] */;
  %958 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %959 = %943.0;
  %960 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %961 = %946.1;
  %962 = acosh(%947) /* ty=Tensor[(16, 15, 12), float64] */;
  %963 = multiply(%950, %951) /* ty=Tensor[(16, 15, 12), float32] */;
  %964 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %965 = %954.1;
  (%955, meta[relay.Constant][53] /* ty=Tensor[(2880), float64] */, %var_1802, %var_1803, %956, %957, %958, %959, %960, %961, %962, %963, %964, %965)
}

def @func_13219() -> Tensor[(16, 3, 7), float32] {
  @func_10164() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_2736() -> (Tensor[(16, 3, 7), float32],) {
  %966 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  (%966,)
}

def @func_11338() -> Tensor[(16, 3, 7), float64] {
  %967 = @func_9315() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %967.0
}

def @func_14087() -> float64 {
  %968 = @func_11109() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], float64, Tensor[(320), float64], Tensor[(16, 3, 7), bool]) */;
  %968.2
}

def @func_13439() -> (Tensor[(16, 3, 7), float32],) {
  %969 = @func_9522() /* ty=Tensor[(16, 3, 7), float32] */;
  (%969,)
}

def @func_8327() -> Tensor[(16, 3, 7), float32] {
  %970 = @func_6164() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %970.0
}

def @func_3640(%var_3631: Tensor[(3, 12, 16), float64]) -> (Tensor[(3, 12, 16), float64], Tensor[(16, 3, 7), float32]) {
  %971 = cast(%var_3631, dtype="float64") /* ty=Tensor[(3, 12, 16), float64] */;
  %972 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
  %973 = rsqrt(%971) /* ty=Tensor[(3, 12, 16), float64] */;
  %974 = %972.3;
  (%973, %974)
}

def @func_11393(%var_11380: uint8, %var_11381: Tensor[(15, 1, 13), uint8], %var_11386: Tensor[(15, 1, 13), uint8]) -> Tensor[(15, ?, 13), int8] {
  %975 = cast(%var_11380, dtype="uint8") /* ty=uint8 */;
  %976 = cast(%var_11381, dtype="uint8") /* ty=Tensor[(15, 1, 13), uint8] */;
  %977 = bitwise_and(%975, %976) /* ty=Tensor[(15, 1, 13), uint8] */;
  %978 = cast(%var_11386, dtype="int8") /* ty=Tensor[(15, 1, 13), int8] */;
  %979 = shape_of(%977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(%977, dtype="int8") /* ty=Tensor[(15, 1, 13), int8] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%980, %981) /* ty=Tensor[(15, ?, 13), int8] */
}

def @func_9604() -> (Tensor[(16, 3, 7), float32],) {
  %982 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %983 = %982.0;
  (%983,)
}

def @func_11015() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float32], Tensor[(1, 28), int16], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  %984 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %985 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %987 = sinh(%986) /* ty=Tensor[(16, 15, 12), float32] */;
  %988 = cast(%987, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %989 = cast(%985, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %990 = cast(meta[relay.Constant][55] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %991 = cast(meta[relay.Constant][56] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %992 = reshape(%989, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
  %993 = reshape(%990, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
  %994 = reshape(%991, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %995 = @func_1703(%992, %993, %994) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
  %996 = @func_10342() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %997 = %984.1;
  %998 = log(%988) /* ty=Tensor[(16, 15, 12), float32] */;
  %999 = %995.2;
  %1000 = %996.2;
  (%997, %998, %999, meta[relay.Constant][55] /* ty=Tensor[(28), int16] */, meta[relay.Constant][56] /* ty=Tensor[(360), float64] */, %1000)
}

def @func_12442() -> Tensor[(16, 3, 7), float32] {
  %1001 = @func_7798() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) */;
  %1001.2
}

def @func_12329(%var_12326: Tensor[(4, 8, 9), float64]) -> Tensor[(4, 8, 9), float64] {
  %1002 = cast(%var_12326, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  log(%1002) /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_6851(%var_6845: Tensor[(16, 15, 12), bool]) -> (Tensor[(16, 15, 12), int16],) {
  %1003 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %1004 = %1003.1;
  %1005 = cast(%var_6845, dtype="int16") /* ty=Tensor[(16, 15, 12), int16] */;
  %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1004, dtype="int16") /* ty=Tensor[(16, 15, 12), int16] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1009 = subtract(%1007, %1008) /* ty=Tensor[(16, 15, 12), int16] */;
  (%1009,)
}

def @func_7055(%var_7004: Tensor[(12, 13, 11), float32], %var_7005: Tensor[(12, 13, 11), float32]) -> (Tensor[(12, 13, 11), float32], Tensor[(14, 2, 5), bool], Tensor[(140), int16], Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) {
  %1010 = cast(%var_7005, dtype="float32") /* ty=Tensor[(12, 13, 11), float32] */;
  %1011 = shape_of(%var_7004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%var_7004, dtype="float32") /* ty=Tensor[(12, 13, 11), float32] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1014 = cast(meta[relay.Constant][57] /* ty=Tensor[(140), int16] */, dtype="int16") /* ty=Tensor[(140), int16] */;
  %1015 = reshape(%1014, newshape=[14, 2, 5]) /* ty=Tensor[(14, 2, 5), int16] */;
  %1016 = @func_4546(%1015) /* ty=(Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) */;
  %1017 = @func_6939() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1018 = cast(meta[relay.Constant][58] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1019 = reshape(%1018, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1020 = @func_3624(%1019) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %1021 = power(%1012, %1013) /* ty=Tensor[(12, 13, 11), float32] */;
  %1022 = %1016.0;
  %1023 = %1017.0;
  %1024 = %1020.4;
  (%1021, %1022, meta[relay.Constant][57] /* ty=Tensor[(140), int16] */, %1023, %1024, meta[relay.Constant][58] /* ty=Tensor[(28), int16] */)
}

def @func_4828(%var_4821: Tensor[(96, 30), float64], %var_4823: Tensor[(360), float64]) -> (Tensor[(64), float32], Tensor[(16, 3, 7), float32], Tensor[(96, 30), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  %1025 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %1026 = %1025.3;
  %1027 = cast(%1026, dtype="float32") /* ty=Tensor[(64), float32] */;
  %1028 = cast(%var_4821, dtype="float64") /* ty=Tensor[(96, 30), float64] */;
  %1029 = cast(meta[relay.Constant][59] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1030 = cast(%var_4823, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1031 = reshape(%1028, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %1032 = reshape(%1029, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1033 = reshape(%1030, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1034 = @func_1608(%1031, %1032, %1033) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
  %1035 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1036 = cos(%1027) /* ty=Tensor[(64), float32] */;
  %1037 = %1034.0;
  %1038 = %1035.0;
  (%1036, %1037, %var_4821, meta[relay.Constant][59] /* ty=Tensor[(28), int16] */, %var_4823, %1038)
}

def @func_5199() -> (Tensor[(28), int16],) {
  %1039 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %1040 = %1039.1;
  (%1040,)
}

def @func_9081() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1041 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %1042 = @func_6344() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1043 = %1041.0;
  %1044 = %1042.0;
  (%1043, %1044)
}

def @func_10953(%var_10928: Tensor[(2880), float64], %var_10929: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
  %1045 = @func_2736() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1046 = @func_5949() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64]) */;
  %1047 = cast(%var_10928, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1048 = cast(%var_10929, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1049 = cast(meta[relay.Constant][60] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1050 = reshape(%1047, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
  %1051 = reshape(%1048, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
  %1052 = reshape(%1049, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %1053 = @func_1703(%1050, %1051, %1052) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
  %1054 = %1045.0;
  %1055 = %1046.1;
  %1056 = %1053.7;
  (%1054, %1055, %1056, %var_10928, %var_10929, meta[relay.Constant][60] /* ty=Tensor[(360), float64] */)
}

def @func_11668(%var_11664: Tensor[(13, 6, 14), uint64]) -> (Tensor[(13, 6, 14), bool],) {
  %1057 = cast(%var_11664, dtype="bool") /* ty=Tensor[(13, 6, 14), bool] */;
  %1058 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(13, 6, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 6, 14), uint64] */, dtype="bool") /* ty=Tensor[(13, 6, 14), bool] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1061 = equal(%1059, %1060) /* ty=Tensor[(13, 6, 14), bool] */;
  (%1061,)
}

def @func_14102() -> Tensor[(16, 3, 7), float32] {
  @func_8327() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_5305() -> (Tensor[(16, 3, 7), float32],) {
  %1062 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1062,)
}

def @func_10347() -> Tensor[(16, 3, 7), float32] {
  %1063 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1063.1
}

def @func_14365() -> (Tensor[(16, 3, 7), float32],) {
  %1064 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1065 = %1064.0;
  (%1065,)
}

def @func_6228() -> (Tensor[(16, 3, 7), float32],) {
  %1066 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1066,)
}

def @func_4013() -> (Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  %1067 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %1068 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  %1069 = %1067.2;
  (%1068, %1069)
}

def @func_10014() -> (Tensor[(28), int16],) {
  %1070 = @func_2970() /* ty=(Tensor[(28), int16],) */;
  %1071 = %1070.0;
  (%1071,)
}

def @func_8884() -> Tensor[(16, 3, 7), float64] {
  @func_6023() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_6380() -> (Tensor[(16, 3, 7), bool],) {
  %1072 = @func_5138() /* ty=Tensor[(16, 3, 7), bool] */;
  (%1072,)
}

def @func_9269() -> Tensor[(16, 3, 7), float32] {
  %1073 = @func_8402() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
  %1073.0
}

def @func_10488(%var_10480: Tensor[(9, 5, 1), float32]) -> Tensor[(9, 5, 1), float32] {
  %1074 = cast(%var_10480, dtype="float32") /* ty=Tensor[(9, 5, 1), float32] */;
  log(%1074) /* ty=Tensor[(9, 5, 1), float32] */
}

def @func_14432() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool]) {
  %1075 = @func_12385() /* ty=(Tensor[(16, 3, 7), bool],) */;
  %1076 = @func_9392() /* ty=Tensor[(16, 3, 7), float64] */;
  %1077 = %1075.0;
  (%1076, %1077)
}

def @func_6123() -> Tensor[(16, 3, 7), float32] {
  %1078 = @func_3270() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1078.1
}

def @func_12995(%var_12988: Tensor[(1, 10, 12), float32], %var_12989: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), bool],) {
  %1079 = cast(%var_12988, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %1080 = cast(%var_12989, dtype="bool") /* ty=Tensor[(7, 10, 12), bool] */;
  %1081 = not_equal(%1079, %1080) /* ty=Tensor[(7, 10, 12), bool] */;
  (%1081,)
}

def @func_9889(%var_9873: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(2, 7, 2), int16]) {
  %1082 = cast(%var_9873, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1083 = cast(meta[relay.Constant][62] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1084 = cast(meta[relay.Constant][63] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1085 = reshape(%1082, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %1086 = reshape(%1083, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1087 = reshape(%1084, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %1088 = @func_2148(%1085, %1086, %1087) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) */;
  %1089 = cast(meta[relay.Constant][62] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1090 = cast(meta[relay.Constant][62] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1091 = reshape(%1089, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %1092 = reshape(%1090, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %1093 = @func_1386(%1091, %1092) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %1094 = @func_6123() /* ty=Tensor[(16, 3, 7), float32] */;
  %1095 = %1088.1;
  %1096 = %1093.0;
  (%1094, %1095, %var_9873, meta[relay.Constant][62] /* ty=Tensor[(28), int16] */, meta[relay.Constant][63] /* ty=Tensor[(640), uint64] */, %1096)
}

def @func_4476() -> Tensor[(2880), float64] {
  %1097 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
  %1097.2
}

def @func_2618() -> (Tensor[(16, 3, 7), float32],) {
  %1098 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1099 = %1098.0;
  (%1099,)
}

def @func_9522() -> Tensor[(16, 3, 7), float32] {
  %1100 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1101 = %1100.0;
  %1102 = cast(%1101, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  asin(%1102) /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_5949() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64]) {
  %1103 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %1104 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1105 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
  %1106 = cast(%1105, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %1107 = %1103.0;
  %1108 = %1104.1;
  %1109 = cosh(%1106) /* ty=Tensor[(16, 15, 12), float64] */;
  (%1107, %1108, %1109)
}

def @func_9593(%var_9588: Tensor[(4, 11, 14), float32], %var_9589: Tensor[(4, 11, 14), float32]) -> Tensor[(4, 11, 14), float32] {
  %1110 = cast(%var_9589, dtype="float32") /* ty=Tensor[(4, 11, 14), float32] */;
  %1111 = shape_of(%var_9588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%var_9588, dtype="float32") /* ty=Tensor[(4, 11, 14), float32] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%1112, %1113) /* ty=Tensor[(4, 11, 14), float32] */
}

def @func_10342() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1114 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %1115 = @func_9779() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %1116 = %1114.0;
  %1117 = %1115.0;
  %1118 = @func_9522() /* ty=Tensor[(16, 3, 7), float32] */;
  %1119 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1116, %1117, %1118, %1119)
}

def @func_11298() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) {
  %1120 = @func_10562() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %1121 = %1120.0;
  %1122 = @func_4094() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1121, %1122)
}

def @func_8253(%var_8230: Tensor[(360), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(140), int16], Tensor[(1716), float32], Tensor[(96, 30), float64]) {
  %1123 = @func_8175() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1124 = @func_6622() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %1125 = cast(meta[relay.Constant][64] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1126 = cast(%var_8230, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1127 = reshape(%1125, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1128 = reshape(%1126, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %1129 = @func_3302(%1127, %1128) /* ty=(Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) */;
  %1130 = cast(meta[relay.Constant][65] /* ty=Tensor[(1716), float32] */, dtype="float32") /* ty=Tensor[(1716), float32] */;
  %1131 = cast(meta[relay.Constant][65] /* ty=Tensor[(1716), float32] */, dtype="float32") /* ty=Tensor[(1716), float32] */;
  %1132 = reshape(%1130, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float32] */;
  %1133 = reshape(%1131, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float32] */;
  %1134 = @func_7055(%1132, %1133) /* ty=(Tensor[(12, 13, 11), float32], Tensor[(14, 2, 5), bool], Tensor[(140), int16], Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) */;
  %1135 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
  %1136 = cast(%1135, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %1137 = cast(%var_8230, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1138 = reshape(%1136, newshape=[96, 30]) /* ty=Tensor[(96, 30), float64] */;
  %1139 = reshape(%1137, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1140 = @func_4828(%1138, %1139) /* ty=(Tensor[(64), float32], Tensor[(16, 3, 7), float32], Tensor[(96, 30), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
  %1141 = %1123.0;
  %1142 = %1124.2;
  %1143 = %1129.0;
  %1144 = %1134.2;
  %1145 = %1140.2;
  (%1135, %1141, %1142, %1143, meta[relay.Constant][64] /* ty=Tensor[(28), int16] */, %var_8230, %1144, meta[relay.Constant][65] /* ty=Tensor[(1716), float32] */, %1145)
}

def @func_8542() -> Tensor[(16, 3, 7), float32] {
  %1146 = @func_7598() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1146.1
}

def @func_11862() -> Tensor[(16, 3, 7), float32] {
  %1147 = @func_10130() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %1147.0
}

def @func_13250() -> (Tensor[(16, 3, 7), float32],) {
  %1148 = @func_13031() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1148,)
}

def @func_14481() -> Tensor[(16, 3, 7), float32] {
  %1149 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1149.0
}

def @func_14263() -> Tensor[(16, 3, 7), float32] {
  %1150 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
  %1150.3
}

def @func_7159(%var_7132: Tensor[(360), float64]) -> (Tensor[(28), int16], Tensor[(2880), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32]) {
  %1151 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %1152 = %1151.0;
  %1153 = cast(%1152, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1154 = cast(%var_7132, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1155 = reshape(%1153, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1156 = reshape(%1154, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %1157 = @func_3302(%1155, %1156) /* ty=(Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) */;
  %1158 = @func_5030() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1159 = %1158.1;
  %1160 = cast(%1159, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
  %1161 = @func_6380() /* ty=(Tensor[(16, 3, 7), bool],) */;
  %1162 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %1163 = %1157.2;
  %1164 = atan(%1160) /* ty=Tensor[(16, 3, 7), float64] */;
  %1165 = %1161.0;
  %1166 = %1162.0;
  (%1152, %1163, %var_7132, %1164, %1165, %1166)
}

def @func_3710() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1167 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %1168 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1167, %1168)
}

def @func_10732(%var_10723: Tensor[(225), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64], Tensor[(16, 3, 7), float32]) {
  %1169 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %1170 = @func_9315() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %1171 = cast(%var_10723, dtype="float64") /* ty=Tensor[(225), float64] */;
  %1172 = reshape(%1171, newshape=[5, 15, 3]) /* ty=Tensor[(5, 15, 3), float64] */;
  %1173 = @func_8710(%1172) /* ty=(Tensor[(5, 15, 3), bool],) */;
  %1174 = @func_2736() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1175 = %1169.0;
  %1176 = %1170.0;
  %1177 = %1173.0;
  %1178 = %1174.0;
  (%1175, %1176, %1177, %var_10723, %1178)
}

def @func_8091() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16]) {
  %1179 = @func_4575() /* ty=(Tensor[(28), int16],) */;
  %1180 = %1179.0;
  %1181 = cast(%1180, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1182 = reshape(%1181, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1183 = @func_3624(%1182) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %1184 = cast(%1180, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1185 = reshape(%1184, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1186 = @func_3326(%1185) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %1187 = cast(%1180, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1188 = cast(%1180, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1189 = reshape(%1187, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %1190 = reshape(%1188, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %1191 = @func_1386(%1189, %1190) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %1192 = %1183.0;
  %1193 = %1186.0;
  %1194 = @func_6203() /* ty=Tensor[(16, 3, 7), float32] */;
  %1195 = %1191.0;
  (%1180, %1192, %1193, %1194, %1195)
}

def @func_8505() -> Tensor[(16, 3, 7), int16] {
  %1196 = @func_5470() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float64], Tensor[(9, 2, 14), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), int16], Tensor[(16, 3, 7), float64], Tensor[(2880), float64], Tensor[(504), float64]) */;
  %1196.6
}

def @func_2040(%var_1996: Tensor[(2880), float64], %var_1997: Tensor[(28), int16], %var_2014: Tensor[(36, 10), float64], %var_2025: Tensor[(10, 64), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1197 = cast(%var_1996, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1198 = cast(%var_1997, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1199 = cast(meta[relay.Constant][66] /* ty=Tensor[(36, 10), float64] */, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
  %1200 = reshape(%1197, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
  %1201 = reshape(%1198, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
  %1202 = reshape(%1199, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %1203 = @func_1703(%1200, %1201, %1202) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
  %1204 = cast(%var_2014, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
  %1205 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(36, 10), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1206 = cast(meta[relay.Constant][66] /* ty=Tensor[(36, 10), float64] */, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1208 = cast(%var_2025, dtype="uint64") /* ty=Tensor[(10, 64), uint64] */;
  %1209 = reshape(%1208, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
  %1210 = @func_529(%1209) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
  %1211 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1212 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %1213 = %1203.6;
  %1214 = greater(%1206, %1207) /* ty=Tensor[(36, 10), bool] */;
  %1215 = %1210.1;
  %1216 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %1217 = %1211.0;
  (%1212, %1213, %var_1996, %var_1997, %1214, %1215, %var_2025, %1216, %1217)
}

def @func_10583() -> Tensor[(16, 3, 7), float32] {
  %1218 = @func_7598() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1218.2
}

def @func_3247() -> (Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) {
  %1219 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %1220 = %1219.1;
  %1221 = cast(%1220, dtype="float64") /* ty=Tensor[(9, 2, 14), float64] */;
  %1222 = cast(meta[relay.Constant][67] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1223 = reshape(%1222, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
  %1224 = @func_529(%1223) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
  %1225 = @func_2618() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1226 = acosh(%1221) /* ty=Tensor[(9, 2, 14), float64] */;
  %1227 = %1224.0;
  %1228 = %1225.0;
  (%1226, %1227, meta[relay.Constant][67] /* ty=Tensor[(640), uint64] */, %1228)
}

def @func_3357() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) {
  %1229 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1230 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1231 = %1229.0;
  %1232 = %1230.0;
  (%1231, %1232)
}

def @func_6203() -> Tensor[(16, 3, 7), float32] {
  %1233 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1233.0
}

def @func_7508() -> (Tensor[(16, 3, 7), float64],) {
  %1234 = @func_6362() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) */;
  %1235 = %1234.1;
  (%1235,)
}

def @func_12063(%var_12050: Tensor[(504), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  %1236 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1237 = cast(%var_12050, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1238 = reshape(%1237, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1239 = @func_2331(%1238) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %1240 = %1236.0;
  %1241 = %1239.2;
  (%1240, %1241, %var_12050)
}

def @func_13759() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1242 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1243 = @func_9081() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1244 = @func_6344() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1245 = %1242.0;
  %1246 = %1243.1;
  %1247 = %1244.0;
  (%1245, %1246, %1247)
}

def @func_1212() -> Tensor[(16, 3, 7), float32] {
  %1248 = cast(meta[relay.Constant][68] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %1249 = asinh(%1248) /* ty=Tensor[(16, 3, 7), float32] */;
  %1250 = cast(%1249, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  log10(%1250) /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_8757() -> (Tensor[(2880), float64],) {
  %1251 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%1251,)
}

def @func_9651() -> (Tensor[(16, 3, 7), float32],) {
  %1252 = @func_7598() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1253 = %1252.2;
  (%1253,)
}

def @func_13277() -> (Tensor[(16, 3, 7), float32],) {
  %1254 = @func_9604() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1255 = %1254.0;
  (%1255,)
}

def @func_12833() -> (Tensor[(64), float64],) {
  %1256 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %1257 = %1256.2;
  (%1257,)
}

def @func_2203() -> (Tensor[(16, 3, 7), float32],) {
  %1258 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1258,)
}

def @func_4608() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) {
  %1259 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %1260 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %1261 = %1260.0;
  %1262 = cast(meta[relay.Constant][69] /* ty=Tensor[(16, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
  %1263 = shape_of(%1261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1264 = cast(%1261, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
  %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1266 = %1259.0;
  %1267 = equal(%1264, %1265) /* ty=Tensor[(16, 3, 7), bool] */;
  (%1266, %1267)
}

def @func_3486() -> (Tensor[(16, 3, 7), float64],) {
  %1268 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1269 = %1268.0;
  %1270 = cast(%1269, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
  %1271 = acosh(%1270) /* ty=Tensor[(16, 3, 7), float64] */;
  (%1271,)
}

def @func_3270() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1272 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1273 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1274 = %1272.0;
  %1275 = %1273.0;
  (%1274, %1275)
}

def @func_9125() -> Tensor[(16, 3, 7), float32] {
  %1276 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1276.0
}

def @func_5314() -> Tensor[(16, 3, 7), float32] {
  %1277 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %1277.0
}

def @func_6344() -> (Tensor[(16, 3, 7), float32],) {
  %1278 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1278,)
}

def @func_6889() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1279 = @func_5030() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1280 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %1281 = %1279.1;
  %1282 = %1280.0;
  (%1281, %1282)
}

def @func_3596() -> Tensor[(16, 3, 7), float32] {
  %1283 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %1283.0
}

def @func_10562() -> (Tensor[(16, 3, 7), float64],) {
  %1284 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %1285 = %1284.0;
  (%1285,)
}

def @func_4747() -> (Tensor[(16, 3, 7), float32],) {
  %1286 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1286,)
}

def @func_13584() -> (Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) {
  %1287 = @func_9260() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1288 = cast(meta[relay.Constant][70] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1289 = reshape(%1288, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1290 = @func_3624(%1289) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %1291 = %1287.0;
  %1292 = %1290.4;
  (%1291, %1292, meta[relay.Constant][70] /* ty=Tensor[(28), int16] */)
}

def @func_3326(%var_3312: Tensor[(28), int16]) -> (Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
  %1293 = cast(%var_3312, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1294 = cast(%var_3312, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1295 = reshape(%1293, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %1296 = reshape(%1294, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %1297 = @func_1386(%1295, %1296) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %1298 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1299 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
  %1300 = %1297.0;
  %1301 = %1298.0;
  (%1299, %1300, %var_3312, %1301)
}

def @func_14204() -> Tensor[(16, 3, 7), float32] {
  %1302 = @func_6489() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1302.0
}

def @func_6489() -> (Tensor[(16, 3, 7), float32],) {
  %1303 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %1304 = %1303.0;
  (%1304,)
}

def @main(%var_14500: Tensor[(14, 6, 12), float32], %var_14501: Tensor[(14, 6, 12), float32]) -> Tensor[(14, 6, 12), float32] {
  %1305 = cast(%var_14501, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
  %1306 = shape_of(%var_14500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1307 = cast(%var_14500, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%1307, %1308) /* ty=Tensor[(14, 6, 12), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10344() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_10342() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_5606() -> (Tensor[(28), int16], Tensor[(16, 15, 12), bool]) {
  %6 = fn () -> (Tensor[(28), int16], Tensor[(16, 15, 12), bool]) {
    %0 = @func_2970() /* ty=(Tensor[(28), int16],) */;
    %1 = %0.0;
    %2 = cast(%1, dtype="int16") /* ty=Tensor[(28), int16] */;
    %3 = reshape(%2, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %4 = @func_3326(%3) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
    %5 = %4.0;
    (%1, %5)
  };
  %6() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */
}

def @func_11393(%var_11380: uint8, %var_11381: Tensor[(15, 1, 13), uint8], %var_11386: Tensor[(15, 1, 13), uint8]) -> Tensor[(15, ?, 13), int8] {
  %7 = cast(%var_11380, dtype="uint8") /* ty=uint8 */;
  %8 = cast(%var_11381, dtype="uint8") /* ty=Tensor[(15, 1, 13), uint8] */;
  %9 = bitwise_and(%7, %8) /* ty=Tensor[(15, 1, 13), uint8] */;
  %10 = cast(%var_11386, dtype="int8") /* ty=Tensor[(15, 1, 13), int8] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="int8") /* ty=Tensor[(15, 1, 13), int8] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%12, %13) /* ty=Tensor[(15, ?, 13), int8] */
}

def @func_11453() -> (Tensor[(16, 3, 7), float32],) {
  %14 = @func_8175() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %15 = %14.0;
  (%15,)
}

def @func_1930(%var_1927: Tensor[(28), int16], %var_1928: Tensor[(360), float64], %var_1929: Tensor[(16, 15, 12), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) {
  @func_1925(%var_1927, %var_1928, %var_1929) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */
}

def @func_5554(%var_5553: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64]) {
  %23 = fn (%var_5540: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64]) {
    %16 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %17 = cast(%var_5540, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %18 = reshape(%17, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
    %19 = @func_1079(%18) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
    %20 = %16.1;
    %21 = %19.1;
    %22 = @func_4476() /* ty=Tensor[(2880), float64] */;
    (%20, %21, %var_5540, %22)
  };
  %23(%var_5553) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64]) */
}

def @func_13158(%var_13104: Tensor[(4, 20), bool], %var_13105: Tensor[(2880), float64], %var_13106: Tensor[(28), int16], %var_13107: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(15, 8, 3), float64], Tensor[(4, 20), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) {
  %24 = @func_9779() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %25 = cast(%var_13104, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %26 = cast(%var_13104, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %27 = cast(%var_13105, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %28 = cast(%var_13106, dtype="int16") /* ty=Tensor[(28), int16] */;
  %29 = cast(%var_13107, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %30 = reshape(%25, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), bool] */;
  %31 = reshape(%26, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), bool] */;
  %32 = reshape(%27, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %33 = reshape(%28, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %34 = reshape(%29, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %35 = @func_2950(%30, %31, %32, %33, %34) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(2, 4, 10), float32], Tensor[(2, 4, 10), float64], Tensor[(28), float32]) */;
  %36 = @func_10883() /* ty=Tensor[(16, 3, 7), float32] */;
  %37 = %24.2;
  %38 = %35.4;
  %39 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
  (%36, %37, %38, %var_13104, %var_13105, %var_13106, %var_13107, %39)
}

def @func_9394() -> Tensor[(16, 3, 7), float64] {
  @func_9392() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_4549(%var_4547: Tensor[(14, 2, 5), int16]) -> (Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) {
  @func_4546(%var_4547) /* ty=(Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) */
}

def @func_13440() -> (Tensor[(16, 3, 7), float32],) {
  %41 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %40 = @func_9522() /* ty=Tensor[(16, 3, 7), float32] */;
    (%40,)
  };
  %41() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_6345() -> (Tensor[(16, 3, 7), float32],) {
  %43 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %42 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
    (%42,)
  };
  %43() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_3950() -> Tensor[(16, 3, 7), float32] {
  %44 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %44.3
}

def @func_6854(%var_6852: Tensor[(16, 15, 12), bool]) -> (Tensor[(16, 15, 12), int16],) {
  @func_6851(%var_6852) /* ty=(Tensor[(16, 15, 12), int16],) */
}

def @func_8713(%var_8711: Tensor[(5, 15, 3), float64]) -> (Tensor[(5, 15, 3), bool],) {
  @func_8710(%var_8711) /* ty=(Tensor[(5, 15, 3), bool],) */
}

def @func_12401() -> Tensor[(16, 3, 7), float32] {
  @func_12399() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_6982() -> (Tensor[(16, 3, 7), float32],) {
  @func_6980() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_14200(%var_14199: Tensor[(8, 2, 1), int16]) -> Tensor[(8, 2, 3), int16] {
  %47 = fn (%var_14191: Tensor[(8, 2, 1), int16]) -> Tensor[(8, 2, 3), int16] {
    %45 = cast(%var_14191, dtype="int16") /* ty=Tensor[(8, 2, 1), int16] */;
    %46 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 2, 3), int16] */, dtype="int16") /* ty=Tensor[(8, 2, 3), int16] */;
    left_shift(%45, %46) /* ty=Tensor[(8, 2, 3), int16] */
  };
  %47(%var_14199) /* ty=Tensor[(8, 2, 3), int16] */
}

def @func_8177() -> (Tensor[(16, 3, 7), float32],) {
  @func_8175() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_5030() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %48 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %49 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  (%48, %49)
}

def @func_11051() -> (Tensor[(2880), float64],) {
  %50 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%50,)
}

def @func_6204() -> Tensor[(16, 3, 7), float32] {
  %52 = fn () -> Tensor[(16, 3, 7), float32] {
    %51 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %51.0
  };
  %52() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12608() -> (Tensor[(16, 3, 7), float32],) {
  @func_12606() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_11217() -> (Tensor[(16, 3, 7), float32],) {
  %53 = @func_6489() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %54 = %53.0;
  (%54,)
}

def @func_13524(%var_13522: Tensor[(8, 14, 4), bool], %var_13523: Tensor[(8, 14, 4), bool]) -> (Tensor[(8, 14, 4), bool], Tensor[(16, 3, 7), float32]) {
  @func_13520(%var_13522, %var_13523) /* ty=(Tensor[(8, 14, 4), bool], Tensor[(16, 3, 7), float32]) */
}

def @func_14088() -> float64 {
  %56 = fn () -> float64 {
    %55 = @func_11109() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], float64, Tensor[(320), float64], Tensor[(16, 3, 7), bool]) */;
    %55.2
  };
  %56() /* ty=float64 */
}

def @func_8565() -> Tensor[(16, 3, 7), float32] {
  @func_8563() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_3305(%var_3303: Tensor[(28), int16], %var_3304: Tensor[(1, 360), float64]) -> (Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) {
  %67 = fn (%var_3294: Tensor[(28), int16], %var_3295: Tensor[(1, 360), float64]) -> (Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) {
    %57 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
    %58 = cast(meta[relay.Constant][1] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %59 = cast(%var_3294, dtype="int16") /* ty=Tensor[(28), int16] */;
    %60 = cast(%var_3295, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
    %61 = reshape(%58, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %62 = reshape(%59, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %63 = reshape(%60, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %64 = @func_1608(%61, %62, %63) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
    %65 = %57.2;
    %66 = %64.5;
    (%65, %66, meta[relay.Constant][1] /* ty=Tensor[(2880), float64] */, %var_3294, %var_3295)
  };
  %67(%var_3303, %var_3304) /* ty=(Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) */
}

def @func_11791() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(2, 5, 10), float64], Tensor[(100), uint64], Tensor[(16, 3, 7), float64], Tensor[(28), int16]) {
  %68 = @func_9651() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %70 = cast(meta[relay.Constant][2] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %71 = reshape(%69, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint64] */;
  %72 = reshape(%70, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint64] */;
  %73 = @func_4706(%71, %72) /* ty=(Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(2, 5, 10), float64]) */;
  %74 = @func_10562() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %75 = @func_9779() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %76 = @func_9522() /* ty=Tensor[(16, 3, 7), float32] */;
  %77 = %68.0;
  %78 = %73.2;
  %79 = %74.0;
  %80 = %75.1;
  (%76, %77, %78, meta[relay.Constant][2] /* ty=Tensor[(100), uint64] */, %79, %80)
}

def @func_2331(%var_2288: Tensor[(504), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) {
  %81 = cast(%var_2288, dtype="float64") /* ty=Tensor[(504), float64] */;
  %82 = reshape(%81, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %83 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %84 = cast(meta[relay.Constant][3] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %85 = reshape(%84, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %86 = @func_1079(%85) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %88 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 180), float64] */, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %89 = %86.1;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %91 = reshape(%87, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %92 = reshape(%88, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %93 = reshape(%90, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %94 = @func_1925(%91, %92, %93) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
  %95 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %96 = @func_168(%82) /* ty=Tensor[(7, 9, 8), int16] */;
  %97 = %83.0;
  %98 = %94.1;
  (%95, %96, %var_2288, %97, %89, meta[relay.Constant][3] /* ty=Tensor[(2880), float64] */, %98, meta[relay.Constant][4] /* ty=Tensor[(28), int16] */, meta[relay.Constant][5] /* ty=Tensor[(2, 180), float64] */)
}

def @func_3789() -> (Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  %99 = cast(meta[relay.Constant][6] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %100 = reshape(%99, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %101 = @func_782(%100) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %102 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %103 = %101.1;
  %104 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  (%102, %103, meta[relay.Constant][6] /* ty=Tensor[(360), float64] */, %104)
}

def @func_5470() -> (Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float64], Tensor[(9, 2, 14), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), int16], Tensor[(16, 3, 7), float64], Tensor[(2880), float64], Tensor[(504), float64]) {
  %105 = @func_3789() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
  %106 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %107 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %108 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %109 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %110 = %105.1;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %112 = reshape(%111, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %113 = @func_782(%112) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %114 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %115 = %114.1;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %117 = sinh(%116) /* ty=Tensor[(16, 3, 7), float32] */;
  %118 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %119 = %118.1;
  %120 = cast(%119, dtype="int16") /* ty=Tensor[(16, 3, 7), int16] */;
  %121 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%117, dtype="int16") /* ty=Tensor[(16, 3, 7), int16] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %124 = cast(%117, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %126 = reshape(%125, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %127 = @func_2331(%126) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %128 = %106.0;
  %129 = %107.1;
  %130 = %108.0;
  %131 = %109.0;
  %132 = %113.0;
  %133 = maximum(%122, %123) /* ty=Tensor[(16, 3, 7), int16] */;
  %134 = erf(%124) /* ty=Tensor[(16, 3, 7), float64] */;
  %135 = %127.5;
  (%110, %128, %129, %130, %131, %132, %133, %134, %135, meta[relay.Constant][7] /* ty=Tensor[(504), float64] */)
}

def @func_8091() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16]) {
  %136 = @func_4575() /* ty=(Tensor[(28), int16],) */;
  %137 = %136.0;
  %138 = cast(%137, dtype="int16") /* ty=Tensor[(28), int16] */;
  %139 = reshape(%138, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %140 = @func_3624(%139) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %141 = cast(%137, dtype="int16") /* ty=Tensor[(28), int16] */;
  %142 = reshape(%141, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %143 = @func_3326(%142) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %144 = cast(%137, dtype="int16") /* ty=Tensor[(28), int16] */;
  %145 = cast(%137, dtype="int16") /* ty=Tensor[(28), int16] */;
  %146 = reshape(%144, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %147 = reshape(%145, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %148 = @func_1386(%146, %147) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %149 = %140.0;
  %150 = %143.0;
  %151 = @func_6203() /* ty=Tensor[(16, 3, 7), float32] */;
  %152 = %148.0;
  (%137, %149, %150, %151, %152)
}

def @func_8980() -> (Tensor[(16, 3, 7), float32],) {
  %154 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %153 = @func_8563() /* ty=Tensor[(16, 3, 7), float32] */;
    (%153,)
  };
  %154() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_4993(%var_4992: Tensor[(126, 2), float64]) -> (Tensor[(2880), float64], Tensor[(64), float64], Tensor[(16, 3, 7), int64], Tensor[(9, 2, 14), float64], Tensor[(126, 2), float64]) {
  %170 = fn (%var_4984: Tensor[(126, 2), float64]) -> (Tensor[(2880), float64], Tensor[(64), float64], Tensor[(16, 3, 7), int64], Tensor[(9, 2, 14), float64], Tensor[(126, 2), float64]) {
    %155 = cast(meta[relay.Constant][8] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %156 = reshape(%155, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
    %157 = @func_1781(%156) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) */;
    %158 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
    %159 = %158.0;
    %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 3, 7), float32] */, dtype="int64") /* ty=Tensor[(16, 3, 7), int64] */;
    %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
    %162 = cast(%159, dtype="int64") /* ty=Tensor[(16, 3, 7), int64] */;
    %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %164 = cast(%var_4984, dtype="float64") /* ty=Tensor[(126, 2), float64] */;
    %165 = reshape(%164, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
    %166 = @func_710(%165) /* ty=(Tensor[(9, 2, 14), float64],) */;
    %167 = %157.1;
    %168 = left_shift(%162, %163) /* ty=Tensor[(16, 3, 7), int64] */;
    %169 = %166.0;
    (%167, meta[relay.Constant][8] /* ty=Tensor[(64), float64] */, %168, %169, %var_4984)
  };
  %170(%var_4992) /* ty=(Tensor[(2880), float64], Tensor[(64), float64], Tensor[(16, 3, 7), int64], Tensor[(9, 2, 14), float64], Tensor[(126, 2), float64]) */
}

def @func_3791() -> (Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  @func_3789() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_12299(%var_12271: Tensor[(7, 88), float32]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(4, 11, 14), float32], Tensor[(7, 88), float32], Tensor[(28), float64], Tensor[(2880), float64]) {
  %171 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %172 = @func_10674() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %173 = cast(%var_12271, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %174 = cast(%var_12271, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %175 = reshape(%173, newshape=[4, 11, 14]) /* ty=Tensor[(4, 11, 14), float32] */;
  %176 = reshape(%174, newshape=[4, 11, 14]) /* ty=Tensor[(4, 11, 14), float32] */;
  %177 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %178 = %177.1;
  %179 = cast(%178, dtype="float64") /* ty=Tensor[(28), float64] */;
  %180 = @func_5094() /* ty=(Tensor[(28), int16], Tensor[(2880), float64]) */;
  %181 = @func_6023() /* ty=Tensor[(16, 3, 7), float64] */;
  %182 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  %183 = %171.2;
  %184 = %172.0;
  %185 = @func_9593(%175, %176) /* ty=Tensor[(4, 11, 14), float32] */;
  %186 = exp(%179) /* ty=Tensor[(28), float64] */;
  %187 = %180.1;
  (%181, %182, %183, %184, %185, %var_12271, %186, %187)
}

def @func_5884(%var_5841: Tensor[(252), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(28), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 3, 7), float32]) {
  %188 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %189 = %188.0;
  %190 = cast(%189, dtype="float32") /* ty=Tensor[(28), float32] */;
  %191 = sinh(%190) /* ty=Tensor[(28), float32] */;
  %192 = cast(%191, dtype="int16") /* ty=Tensor[(28), int16] */;
  %193 = reshape(%192, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %194 = @func_3326(%193) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %197 = reshape(%196, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %198 = @func_5552(%197) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64]) */;
  %199 = cast(%189, dtype="float32") /* ty=Tensor[(28), float32] */;
  %200 = shape_of(%191, dtype="int32") /* ty=Tensor[(1), int32] */;
  %201 = cast(%191, dtype="float32") /* ty=Tensor[(28), float32] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?), float32] */;
  %203 = %198.2;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %205 = cast(%189, dtype="int16") /* ty=Tensor[(28), int16] */;
  %206 = cast(meta[relay.Constant][10] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %207 = reshape(%204, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
  %208 = reshape(%205, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
  %209 = reshape(%206, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %210 = @func_1703(%207, %208, %209) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
  %211 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %212 = cast(%191, dtype="int16") /* ty=Tensor[(28), int16] */;
  %213 = reshape(%212, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %214 = @func_3326(%213) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
  %215 = cast(%var_5841, dtype="float64") /* ty=Tensor[(252), float64] */;
  %216 = reshape(%215, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
  %217 = @func_710(%216) /* ty=(Tensor[(9, 2, 14), float64],) */;
  %218 = floor_mod(%201, %202) /* ty=Tensor[(28), float32] */;
  %219 = cast(%218, dtype="int16") /* ty=Tensor[(28), int16] */;
  %220 = reshape(%219, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %221 = @func_3624(%220) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %222 = @func_3840() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) */;
  %223 = %210.7;
  %224 = %211.0;
  %225 = %214.3;
  %226 = %217.0;
  %227 = %221.1;
  %228 = %222.0;
  (%195, %203, %218, %223, meta[relay.Constant][10] /* ty=Tensor[(360), float64] */, %224, %225, %226, %var_5841, %227, %228)
}

def @func_3952() -> Tensor[(16, 3, 7), float32] {
  @func_3950() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_8377() -> (Tensor[(16, 3, 7), float32],) {
  @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_10788() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %233 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %229 = @func_10342() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %230 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %231 = %229.1;
    %232 = %230.0;
    (%231, %232)
  };
  %233() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_9164() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %234 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %235 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %236 = %234.0;
  %237 = %235.0;
  (%236, %237)
}

def @func_6851(%var_6845: Tensor[(16, 15, 12), bool]) -> (Tensor[(16, 15, 12), int16],) {
  %238 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %239 = %238.1;
  %240 = cast(%var_6845, dtype="int16") /* ty=Tensor[(16, 15, 12), int16] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="int16") /* ty=Tensor[(16, 15, 12), int16] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %244 = subtract(%242, %243) /* ty=Tensor[(16, 15, 12), int16] */;
  (%244,)
}

def @func_10533() -> (Tensor[(16, 3, 7), float64],) {
  %245 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %246 = %245.0;
  (%246,)
}

def @func_5307() -> (Tensor[(16, 3, 7), float32],) {
  @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_13759() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %247 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %248 = @func_9081() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %249 = @func_6344() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %250 = %247.0;
  %251 = %248.1;
  %252 = %249.0;
  (%250, %251, %252)
}

def @func_532(%var_530: Tensor[(8, 8, 10), uint64]) -> (Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) {
  @func_529(%var_530) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */
}

def @func_2204() -> (Tensor[(16, 3, 7), float32],) {
  %254 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %253 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
    (%253,)
  };
  %254() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_3247() -> (Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) {
  %255 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %256 = %255.1;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(9, 2, 14), float64] */;
  %258 = cast(meta[relay.Constant][11] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %259 = reshape(%258, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
  %260 = @func_529(%259) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
  %261 = @func_2618() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %262 = acosh(%257) /* ty=Tensor[(9, 2, 14), float64] */;
  %263 = %260.0;
  %264 = %261.0;
  (%262, %263, meta[relay.Constant][11] /* ty=Tensor[(640), uint64] */, %264)
}

def @func_2382() -> Tensor[(16, 15, 12), bool] {
  @func_2380() /* ty=Tensor[(16, 15, 12), bool] */
}

def @func_10347() -> Tensor[(16, 3, 7), float32] {
  %265 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %265.1
}

def @func_5315() -> Tensor[(16, 3, 7), float32] {
  %267 = fn () -> Tensor[(16, 3, 7), float32] {
    %266 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
    %266.0
  };
  %267() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_8306() -> Tensor[(16, 3, 7), float32] {
  %268 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %268.0
}

def @func_10884() -> Tensor[(16, 3, 7), float32] {
  %269 = fn () -> Tensor[(16, 3, 7), float32] {
    @func_8806() /* ty=Tensor[(16, 3, 7), float32] */
  };
  %269() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12066(%var_12064: Tensor[(504), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  @func_12063(%var_12064) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(504), float64]) */
}

def @func_8660() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), int16]) {
  %270 = @func_4289() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %271 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %272 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %273 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %274 = @func_7684() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %275 = %270.0;
  %276 = %271.1;
  %277 = %272.0;
  %278 = %273.0;
  %279 = %274.1;
  (%275, %276, %277, %278, %279)
}

def @func_8506() -> Tensor[(16, 3, 7), int16] {
  %281 = fn () -> Tensor[(16, 3, 7), int16] {
    %280 = @func_5470() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float64], Tensor[(9, 2, 14), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), int16], Tensor[(16, 3, 7), float64], Tensor[(2880), float64], Tensor[(504), float64]) */;
    %280.6
  };
  %281() /* ty=Tensor[(16, 3, 7), int16] */
}

def @func_3840() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) {
  %282 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %283 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %284 = cast(meta[relay.Constant][12] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %285 = reshape(%284, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %286 = @func_2331(%285) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %287 = @func_2970() /* ty=(Tensor[(28), int16],) */;
  %288 = %282.1;
  %289 = %283.0;
  %290 = %286.8;
  %291 = %287.0;
  (%288, %289, %290, meta[relay.Constant][12] /* ty=Tensor[(504), float64] */, %291)
}

def @func_11219() -> (Tensor[(16, 3, 7), float32],) {
  @func_11217() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_4609() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) {
  %301 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) {
    %292 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
    %293 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
    %294 = %293.0;
    %295 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
    %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %297 = cast(%294, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
    %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %299 = %292.0;
    %300 = equal(%297, %298) /* ty=Tensor[(16, 3, 7), bool] */;
    (%299, %300)
  };
  %301() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */
}

def @func_9051() -> (Tensor[(16, 3, 7), float32],) {
  %302 = @func_4289() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %303 = %302.0;
  (%303,)
}

def @func_10734(%var_10733: Tensor[(225), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64], Tensor[(16, 3, 7), float32]) {
  %314 = fn (%var_10723: Tensor[(225), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64], Tensor[(16, 3, 7), float32]) {
    %304 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
    %305 = @func_9315() /* ty=(Tensor[(16, 3, 7), float64],) */;
    %306 = cast(%var_10723, dtype="float64") /* ty=Tensor[(225), float64] */;
    %307 = reshape(%306, newshape=[5, 15, 3]) /* ty=Tensor[(5, 15, 3), float64] */;
    %308 = @func_8710(%307) /* ty=(Tensor[(5, 15, 3), bool],) */;
    %309 = @func_2736() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %310 = %304.0;
    %311 = %305.0;
    %312 = %308.0;
    %313 = %309.0;
    (%310, %311, %312, %var_10723, %313)
  };
  %314(%var_10733) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_5139() -> Tensor[(16, 3, 7), bool] {
  %316 = fn () -> Tensor[(16, 3, 7), bool] {
    %315 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
    %315.1
  };
  %316() /* ty=Tensor[(16, 3, 7), bool] */
}

def @func_12984() -> (Tensor[(16, 3, 7), float32],) {
  @func_12982() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_9889(%var_9873: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(2, 7, 2), int16]) {
  %317 = cast(%var_9873, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %318 = cast(meta[relay.Constant][14] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %319 = cast(meta[relay.Constant][15] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %320 = reshape(%317, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %321 = reshape(%318, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %322 = reshape(%319, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %323 = @func_2148(%320, %321, %322) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) */;
  %324 = cast(meta[relay.Constant][14] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %325 = cast(meta[relay.Constant][14] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %326 = reshape(%324, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %327 = reshape(%325, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %328 = @func_1386(%326, %327) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %329 = @func_6123() /* ty=Tensor[(16, 3, 7), float32] */;
  %330 = %323.1;
  %331 = %328.0;
  (%329, %330, %var_9873, meta[relay.Constant][14] /* ty=Tensor[(28), int16] */, meta[relay.Constant][15] /* ty=Tensor[(640), uint64] */, %331)
}

def @func_10272(%var_10244: Tensor[(225), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64]) {
  %332 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %333 = cast(%var_10244, dtype="float64") /* ty=Tensor[(225), float64] */;
  %334 = reshape(%333, newshape=[5, 15, 3]) /* ty=Tensor[(5, 15, 3), float64] */;
  %335 = @func_8710(%334) /* ty=(Tensor[(5, 15, 3), bool],) */;
  %336 = %332.0;
  %337 = %335.0;
  (%336, %337, %var_10244)
}

def @func_9449(%var_9447: Tensor[(16, 10, 12), float32]) -> (Tensor[(16, 10, 12), float32],) {
  @func_9446(%var_9447) /* ty=(Tensor[(16, 10, 12), float32],) */
}

def @func_5949() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64]) {
  %338 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %339 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %340 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
  %341 = cast(%340, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %342 = %338.0;
  %343 = %339.1;
  %344 = cosh(%341) /* ty=Tensor[(16, 15, 12), float64] */;
  (%342, %343, %344)
}

def @func_10583() -> Tensor[(16, 3, 7), float32] {
  %345 = @func_7598() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %345.2
}

def @func_11185() -> Tensor[(28), int16] {
  @func_11183() /* ty=Tensor[(28), int16] */
}

def @func_2103() -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) {
  %352 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) {
    %346 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %347 = cast(meta[relay.Constant][16] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %348 = reshape(%347, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
    %349 = @func_710(%348) /* ty=(Tensor[(9, 2, 14), float64],) */;
    %350 = %346.0;
    %351 = %349.0;
    (%350, %351, meta[relay.Constant][16] /* ty=Tensor[(252), float64] */)
  };
  %352() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */
}

def @func_10563() -> (Tensor[(16, 3, 7), float64],) {
  %355 = fn () -> (Tensor[(16, 3, 7), float64],) {
    %353 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
    %354 = %353.0;
    (%354,)
  };
  %355() /* ty=(Tensor[(16, 3, 7), float64],) */
}

def @func_6449() -> Tensor[(16, 3, 7), float32] {
  @func_6447() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_2152(%var_2149: Tensor[(2880), float64], %var_2150: Tensor[(28), int16], %var_2151: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) {
  %373 = fn (%var_2117: Tensor[(2880), float64], %var_2118: Tensor[(28), int16], %var_2120: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) {
    %356 = cast(%var_2117, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %357 = cast(%var_2118, dtype="int16") /* ty=Tensor[(28), int16] */;
    %358 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %359 = cast(%var_2120, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %360 = reshape(%356, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %361 = reshape(%357, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %362 = reshape(%358, newshape=[36, 10]) /* ty=Tensor[(36, 10), float64] */;
    %363 = reshape(%359, newshape=[10, 64]) /* ty=Tensor[(10, 64), uint64] */;
    %364 = @func_2040(%360, %361, %362, %363) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %365 = %364.4;
    %366 = cast(%365, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
    %367 = reshape(%366, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
    %368 = @func_782(%367) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
    %369 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
    %370 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
    %371 = %368.0;
    %372 = %369.0;
    (%370, %365, %var_2117, %var_2118, meta[relay.Constant][17] /* ty=Tensor[(360), float64] */, %var_2120, %371, %372)
  };
  %373(%var_2149, %var_2150, %var_2151) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_3358() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) {
  %378 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) {
    %374 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %375 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %376 = %374.0;
    %377 = %375.0;
    (%376, %377)
  };
  %378() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */
}

def @func_2334(%var_2332: Tensor[(504), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) {
  @func_2331(%var_2332) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */
}

def @func_10130() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  %379 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %380 = @func_8542() /* ty=Tensor[(16, 3, 7), float32] */;
  %381 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %382 = %379.1;
  (%380, %381, %382)
}

def @func_2826(%var_2825: Tensor[(28), int16]) -> (Tensor[(28), float64], Tensor[(28), float32]) {
  %397 = fn (%var_2766: Tensor[(28), int16]) -> (Tensor[(28), float64], Tensor[(28), float32]) {
    %383 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
    %384 = %383.1;
    %385 = cast(%var_2766, dtype="float64") /* ty=Tensor[(28), float64] */;
    %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(1), int32] */;
    %387 = cast(%384, dtype="float64") /* ty=Tensor[(28), float64] */;
    %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?), float64] */;
    %389 = cast(%384, dtype="float64") /* ty=Tensor[(28), float64] */;
    %390 = shape_of(%var_2766, dtype="int32") /* ty=Tensor[(1), int32] */;
    %391 = cast(%var_2766, dtype="float64") /* ty=Tensor[(28), float64] */;
    %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?), float64] */;
    %393 = maximum(%391, %392) /* ty=Tensor[(28), float64] */;
    %394 = cast(%393, dtype="float32") /* ty=Tensor[(28), float32] */;
    %395 = add(%387, %388) /* ty=Tensor[(28), float64] */;
    %396 = log10(%394) /* ty=Tensor[(28), float32] */;
    (%395, %396)
  };
  %397(%var_2825) /* ty=(Tensor[(28), float64], Tensor[(28), float32]) */
}

def @func_9126() -> Tensor[(16, 3, 7), float32] {
  %399 = fn () -> Tensor[(16, 3, 7), float32] {
    %398 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %398.0
  };
  %399() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_11053() -> (Tensor[(2880), float64],) {
  @func_11051() /* ty=(Tensor[(2880), float64],) */
}

def @func_13279() -> (Tensor[(16, 3, 7), float32],) {
  @func_13277() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_8698(%var_8696: Tensor[(2, 7, 12), float32]) -> (Tensor[(2, 7, 12), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 12), float32]) {
  @func_8695(%var_8696) /* ty=(Tensor[(2, 7, 12), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 12), float32]) */
}

def @func_7721() -> (Tensor[(504), float64], Tensor[(7, 9, 8), int16]) {
  %404 = fn () -> (Tensor[(504), float64], Tensor[(7, 9, 8), int16]) {
    %400 = @func_7547() /* ty=Tensor[(504), float64] */;
    %401 = cast(%400, dtype="float64") /* ty=Tensor[(504), float64] */;
    %402 = reshape(%401, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
    %403 = @func_168(%402) /* ty=Tensor[(7, 9, 8), int16] */;
    (%400, %403)
  };
  %404() /* ty=(Tensor[(504), float64], Tensor[(7, 9, 8), int16]) */
}

def @func_6088() -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) {
  %418 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) {
    %405 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %406 = cast(meta[relay.Constant][18] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %407 = reshape(%406, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
    %408 = @func_710(%407) /* ty=(Tensor[(9, 2, 14), float64],) */;
    %409 = %408.0;
    %410 = cast(meta[relay.Constant][18] /* ty=Tensor[(252), float64] */, dtype="bool") /* ty=Tensor[(252), bool] */;
    %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
    %412 = cast(%409, dtype="bool") /* ty=Tensor[(9, 2, 14), bool] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %414 = @func_4575() /* ty=(Tensor[(28), int16],) */;
    %415 = %405.0;
    %416 = greater_equal(%412, %413) /* ty=Tensor[(9, 2, 14), bool] */;
    %417 = %414.0;
    (%415, %416, %417)
  };
  %418() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) */
}

def @func_4546(%var_4532: Tensor[(14, 2, 5), int16]) -> (Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) {
  %419 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 2, 5), int16] */, dtype="bool") /* ty=Tensor[(14, 2, 5), bool] */;
  %420 = shape_of(%var_4532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%var_4532, dtype="bool") /* ty=Tensor[(14, 2, 5), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %423 = cast(%var_4532, dtype="float64") /* ty=Tensor[(14, 2, 5), float64] */;
  %424 = less(%421, %422) /* ty=Tensor[(14, 2, 5), bool] */;
  %425 = exp(%423) /* ty=Tensor[(14, 2, 5), float64] */;
  %426 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%424, %425, %426)
}

def @func_4706(%var_4689: Tensor[(2, 5, 10), uint64], %var_4690: Tensor[(2, 5, 10), uint64]) -> (Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(2, 5, 10), float64]) {
  %427 = cast(meta[relay.Constant][20] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %428 = cast(meta[relay.Constant][20] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %429 = reshape(%427, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %430 = reshape(%428, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
  %431 = @func_1386(%429, %430) /* ty=(Tensor[(2, 7, 2), int16],) */;
  %432 = cast(%var_4690, dtype="uint64") /* ty=Tensor[(2, 5, 10), uint64] */;
  %433 = shape_of(%var_4689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%var_4689, dtype="uint64") /* ty=Tensor[(2, 5, 10), uint64] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %436 = add(%434, %435) /* ty=Tensor[(2, 5, 10), uint64] */;
  %437 = cast(%var_4690, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %441 = %431.0;
  %442 = divide(%439, %440) /* ty=Tensor[(2, 5, 10), float64] */;
  (%441, meta[relay.Constant][20] /* ty=Tensor[(28), int16] */, %442)
}

def @func_6381() -> (Tensor[(16, 3, 7), bool],) {
  %444 = fn () -> (Tensor[(16, 3, 7), bool],) {
    %443 = @func_5138() /* ty=Tensor[(16, 3, 7), bool] */;
    (%443,)
  };
  %444() /* ty=(Tensor[(16, 3, 7), bool],) */
}

def @func_4241() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) {
  %451 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) {
    %445 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %446 = cast(meta[relay.Constant][21] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %447 = reshape(%446, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
    %448 = @func_1781(%447) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) */;
    %449 = %445.0;
    %450 = %448.0;
    (%449, %450, meta[relay.Constant][21] /* ty=Tensor[(64), float64] */)
  };
  %451() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */
}

def @func_1308() -> Tensor[(16, 3, 7), float32] {
  %452 = fn () -> Tensor[(16, 3, 7), float32] {
    @func_1212() /* ty=Tensor[(16, 3, 7), float32] */
  };
  %452() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_3675(%var_3663: Tensor[(504), float64]) -> (Tensor[(504), bool],) {
  %453 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %454 = %453.2;
  %455 = cast(%var_3663, dtype="bool") /* ty=Tensor[(504), bool] */;
  %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(1), int32] */;
  %457 = cast(%454, dtype="bool") /* ty=Tensor[(504), bool] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?), bool] */;
  %459 = logical_or(%457, %458) /* ty=Tensor[(504), bool] */;
  (%459,)
}

def @func_9597(%var_9595: Tensor[(4, 11, 14), float32], %var_9596: Tensor[(4, 11, 14), float32]) -> Tensor[(4, 11, 14), float32] {
  @func_9593(%var_9595, %var_9596) /* ty=Tensor[(4, 11, 14), float32] */
}

def @func_13585() -> (Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) {
  %466 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) {
    %460 = @func_9260() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %462 = reshape(%461, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %463 = @func_3624(%462) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
    %464 = %460.0;
    %465 = %463.4;
    (%464, %465, meta[relay.Constant][22] /* ty=Tensor[(28), int16] */)
  };
  %466() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) */
}

def @func_9892(%var_9890: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(2, 7, 2), int16]) {
  @func_9889(%var_9890) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(2, 7, 2), int16]) */
}

def @func_2956(%var_2951: Tensor[(2, 4, 10), bool], %var_2952: Tensor[(2, 4, 10), bool], %var_2953: Tensor[(2880), float64], %var_2954: Tensor[(28), int16], %var_2955: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(2, 4, 10), float32], Tensor[(2, 4, 10), float64], Tensor[(28), float32]) {
  %494 = fn (%var_2903: Tensor[(2, 4, 10), bool], %var_2904: Tensor[(2, 4, 10), bool], %var_2915: Tensor[(2880), float64], %var_2916: Tensor[(28), int16], %var_2917: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(2, 4, 10), float32], Tensor[(2, 4, 10), float64], Tensor[(28), float32]) {
    %467 = cast(%var_2915, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %468 = cast(%var_2916, dtype="int16") /* ty=Tensor[(28), int16] */;
    %469 = cast(%var_2917, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %470 = reshape(%467, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %471 = reshape(%468, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %472 = reshape(%469, newshape=[640]) /* ty=Tensor[(640), uint64] */;
    %473 = @func_2148(%470, %471, %472) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) */;
    %474 = cast(meta[relay.Constant][23] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %475 = reshape(%474, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
    %476 = @func_782(%475) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
    %477 = cast(%var_2903, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
    %478 = sinh(%477) /* ty=Tensor[(2, 4, 10), float64] */;
    %479 = cast(%478, dtype="float32") /* ty=Tensor[(2, 4, 10), float32] */;
    %480 = cast(%var_2904, dtype="bool") /* ty=Tensor[(2, 4, 10), bool] */;
    %481 = shape_of(%var_2903, dtype="int32") /* ty=Tensor[(3), int32] */;
    %482 = cast(%var_2903, dtype="bool") /* ty=Tensor[(2, 4, 10), bool] */;
    %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %484 = logical_or(%482, %483) /* ty=Tensor[(2, 4, 10), bool] */;
    %485 = cast(%484, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
    %486 = cast(%var_2916, dtype="int16") /* ty=Tensor[(28), int16] */;
    %487 = reshape(%486, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %488 = @func_2824(%487) /* ty=(Tensor[(28), float64], Tensor[(28), float32]) */;
    %489 = %473.7;
    %490 = %476.1;
    %491 = sin(%479) /* ty=Tensor[(2, 4, 10), float32] */;
    %492 = exp(%485) /* ty=Tensor[(2, 4, 10), float64] */;
    %493 = %488.1;
    (%489, %var_2915, %var_2916, %var_2917, %490, meta[relay.Constant][23] /* ty=Tensor[(360), float64] */, %491, %492, %493)
  };
  %494(%var_2951, %var_2952, %var_2953, %var_2954, %var_2955) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(2, 4, 10), float32], Tensor[(2, 4, 10), float64], Tensor[(28), float32]) */
}

def @func_11840(%var_11839: float32) -> (Tensor[(28), int16], Tensor[(9, 7, 8), int64], Tensor[(16, 3, 7), float32]) {
  %507 = fn (%var_11805: float32) -> (Tensor[(28), int16], Tensor[(9, 7, 8), int64], Tensor[(16, 3, 7), float32]) {
    %495 = @func_8402() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
    %496 = cast(%var_11805, dtype="bool") /* ty=bool */;
    %497 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 7, 8), float32] */, dtype="bool") /* ty=Tensor[(9, 7, 8), bool] */;
    %498 = greater_equal(%496, %497) /* ty=Tensor[(9, 7, 8), bool] */;
    %499 = cast(%498, dtype="int64") /* ty=Tensor[(9, 7, 8), int64] */;
    %500 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(9, 7, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %501 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 7, 8), float32] */, dtype="int64") /* ty=Tensor[(9, 7, 8), int64] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %503 = @func_9651() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %504 = %495.1;
    %505 = right_shift(%501, %502) /* ty=Tensor[(9, 7, 8), int64] */;
    %506 = %503.0;
    (%504, %505, %506)
  };
  %507(%var_11839) /* ty=(Tensor[(28), int16], Tensor[(9, 7, 8), int64], Tensor[(16, 3, 7), float32]) */
}

def @func_6025() -> Tensor[(16, 3, 7), float64] {
  @func_6023() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_3487() -> (Tensor[(16, 3, 7), float64],) {
  %512 = fn () -> (Tensor[(16, 3, 7), float64],) {
    %508 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %509 = %508.0;
    %510 = cast(%509, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
    %511 = acosh(%510) /* ty=Tensor[(16, 3, 7), float64] */;
    (%511,)
  };
  %512() /* ty=(Tensor[(16, 3, 7), float64],) */
}

def @func_7686() -> (Tensor[(28), int16], Tensor[(28), int16]) {
  @func_7684() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */
}

def @func_5759() -> (Tensor[(16, 3, 7), float32],) {
  @func_5757() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_13761() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_13759() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_13964() -> Tensor[(2, 7, 2), int16] {
  @func_13962() /* ty=Tensor[(2, 7, 2), int16] */
}

def @func_3328(%var_3327: Tensor[(28), int16]) -> (Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
  %522 = fn (%var_3312: Tensor[(28), int16]) -> (Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
    %513 = cast(%var_3312, dtype="int16") /* ty=Tensor[(28), int16] */;
    %514 = cast(%var_3312, dtype="int16") /* ty=Tensor[(28), int16] */;
    %515 = reshape(%513, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
    %516 = reshape(%514, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
    %517 = @func_1386(%515, %516) /* ty=(Tensor[(2, 7, 2), int16],) */;
    %518 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %519 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
    %520 = %517.0;
    %521 = %518.0;
    (%519, %520, %var_3312, %521)
  };
  %522(%var_3327) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */
}

def @func_1212() -> Tensor[(16, 3, 7), float32] {
  %523 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %524 = asinh(%523) /* ty=Tensor[(16, 3, 7), float32] */;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  log10(%525) /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_11017() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float32], Tensor[(1, 28), int16], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  @func_11015() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float32], Tensor[(1, 28), int16], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_3711() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %528 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %526 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
    %527 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
    (%526, %527)
  };
  %528() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_9499() -> (Tensor[(28), int16], Tensor[(28), int16]) {
  @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */
}

def @func_2372() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) {
  @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */
}

def @func_6890() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %533 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %529 = @func_5030() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %530 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
    %531 = %529.1;
    %532 = %530.0;
    (%531, %532)
  };
  %533() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_7055(%var_7004: Tensor[(12, 13, 11), float32], %var_7005: Tensor[(12, 13, 11), float32]) -> (Tensor[(12, 13, 11), float32], Tensor[(14, 2, 5), bool], Tensor[(140), int16], Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) {
  %534 = cast(%var_7005, dtype="float32") /* ty=Tensor[(12, 13, 11), float32] */;
  %535 = shape_of(%var_7004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%var_7004, dtype="float32") /* ty=Tensor[(12, 13, 11), float32] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %538 = cast(meta[relay.Constant][26] /* ty=Tensor[(140), int16] */, dtype="int16") /* ty=Tensor[(140), int16] */;
  %539 = reshape(%538, newshape=[14, 2, 5]) /* ty=Tensor[(14, 2, 5), int16] */;
  %540 = @func_4546(%539) /* ty=(Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) */;
  %541 = @func_6939() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %542 = cast(meta[relay.Constant][27] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %543 = reshape(%542, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %544 = @func_3624(%543) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
  %545 = power(%536, %537) /* ty=Tensor[(12, 13, 11), float32] */;
  %546 = %540.0;
  %547 = %541.0;
  %548 = %544.4;
  (%545, %546, meta[relay.Constant][26] /* ty=Tensor[(140), int16] */, %547, %548, meta[relay.Constant][27] /* ty=Tensor[(28), int16] */)
}

def @func_10467(%var_10465: float64, %var_10466: Tensor[(8, 4, 10), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(8, 4, 10), float32], Tensor[(8, 4, 10), uint32], Tensor[(28), int16]) {
  @func_10463(%var_10465, %var_10466) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(8, 4, 10), float32], Tensor[(8, 4, 10), uint32], Tensor[(28), int16]) */
}

def @func_4015() -> (Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */
}

def @func_5951() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64]) {
  @func_5949() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64]) */
}

def @func_1341() -> (Tensor[(16, 3, 7), float32],) {
  %550 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %549 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
    (%549,)
  };
  %550() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_9316() -> (Tensor[(16, 3, 7), float64],) {
  %553 = fn () -> (Tensor[(16, 3, 7), float64],) {
    %551 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
    %552 = %551.0;
    (%552,)
  };
  %553() /* ty=(Tensor[(16, 3, 7), float64],) */
}

def @func_2380() -> Tensor[(16, 15, 12), bool] {
  %554 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %554.2
}

def @func_11864() -> Tensor[(16, 3, 7), float32] {
  @func_11862() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_8093() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16]) {
  @func_8091() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16]) */
}

def @func_170(%var_169: Tensor[(7, 9, 8), float64]) -> Tensor[(7, 9, 8), int16] {
  %561 = fn (%var_148: Tensor[(7, 9, 8), float64]) -> Tensor[(7, 9, 8), int16] {
    %555 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 8), float64] */;
    %556 = atanh(%555) /* ty=Tensor[(7, 9, 8), float64] */;
    %557 = cast(%var_148, dtype="int16") /* ty=Tensor[(7, 9, 8), int16] */;
    %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(%556, dtype="int16") /* ty=Tensor[(7, 9, 8), int16] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%559, %560) /* ty=Tensor[(7, 9, 8), int16] */
  };
  %561(%var_169) /* ty=Tensor[(7, 9, 8), int16] */
}

def @func_2086() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) {
  %569 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) {
    %562 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %563 = cast(meta[relay.Constant][29] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %564 = reshape(%563, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
    %565 = @func_1781(%564) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) */;
    %566 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
    %567 = %562.0;
    %568 = %565.0;
    (%566, %567, %568, meta[relay.Constant][29] /* ty=Tensor[(64), float64] */)
  };
  %569() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */
}

def @func_5887(%var_5885: Tensor[(252), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(28), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 3, 7), float32]) {
  @func_5884(%var_5885) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(28), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_7162(%var_7160: Tensor[(360), float64]) -> (Tensor[(28), int16], Tensor[(2880), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32]) {
  @func_7159(%var_7160) /* ty=(Tensor[(28), int16], Tensor[(2880), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32]) */
}

def @func_3571() -> Tensor[(16, 3, 7), float32] {
  @func_1212() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_7847(%var_7845: int16, %var_7846: Tensor[(11, 5, 15), int16]) -> (Tensor[(11, 5, 15), bool], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) {
  %577 = fn (%var_7828: int16, %var_7829: Tensor[(11, 5, 15), int16]) -> (Tensor[(11, 5, 15), bool], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) {
    %570 = cast(%var_7828, dtype="bool") /* ty=bool */;
    %571 = cast(%var_7829, dtype="bool") /* ty=Tensor[(11, 5, 15), bool] */;
    %572 = @func_6362() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) */;
    %573 = @func_6939() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %574 = less_equal(%570, %571) /* ty=Tensor[(11, 5, 15), bool] */;
    %575 = %572.1;
    %576 = %573.0;
    (%574, %575, %576)
  };
  %577(%var_7845, %var_7846) /* ty=(Tensor[(11, 5, 15), bool], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_6940() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %582 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %578 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
    %579 = @func_2618() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %580 = %578.0;
    %581 = %579.0;
    (%580, %581)
  };
  %582() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_9686() -> (Tensor[(16, 3, 7), float32],) {
  @func_9684() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_8662() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), int16]) {
  @func_8660() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), int16]) */
}

def @func_3678(%var_3676: Tensor[(504), float64]) -> (Tensor[(504), bool],) {
  @func_3675(%var_3676) /* ty=(Tensor[(504), bool],) */
}

def @func_13033() -> Tensor[(16, 3, 7), float32] {
  @func_13031() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_9497() -> (Tensor[(28), int16], Tensor[(28), int16]) {
  %583 = @func_9164() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
  %584 = @func_5199() /* ty=(Tensor[(28), int16],) */;
  %585 = %583.1;
  %586 = %584.0;
  (%585, %586)
}

def @func_4652() -> Tensor[(28), int16] {
  %587 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %587.1
}

def @func_1784(%var_1782: Tensor[(8, 2, 4), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) {
  @func_1781(%var_1782) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) */
}

def @func_712(%var_711: Tensor[(9, 2, 14), float64]) -> (Tensor[(9, 2, 14), float64],) {
  %590 = fn (%var_705: Tensor[(9, 2, 14), float64]) -> (Tensor[(9, 2, 14), float64],) {
    %588 = cast(%var_705, dtype="float64") /* ty=Tensor[(9, 2, 14), float64] */;
    %589 = sqrt(%588) /* ty=Tensor[(9, 2, 14), float64] */;
    (%589,)
  };
  %590(%var_711) /* ty=(Tensor[(9, 2, 14), float64],) */
}

def @func_14434() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool]) {
  @func_14432() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool]) */
}

def @func_8885() -> Tensor[(16, 3, 7), float64] {
  %591 = fn () -> Tensor[(16, 3, 7), float64] {
    @func_6023() /* ty=Tensor[(16, 3, 7), float64] */
  };
  %591() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_6491() -> (Tensor[(16, 3, 7), float32],) {
  @func_6489() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_11183() -> Tensor[(28), int16] {
  %592 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
  %592.1
}

def @func_8542() -> Tensor[(16, 3, 7), float32] {
  %593 = @func_7598() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %593.1
}

def @func_9269() -> Tensor[(16, 3, 7), float32] {
  %594 = @func_8402() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
  %594.0
}

def @func_11339() -> Tensor[(16, 3, 7), float64] {
  %596 = fn () -> Tensor[(16, 3, 7), float64] {
    %595 = @func_9315() /* ty=(Tensor[(16, 3, 7), float64],) */;
    %595.0
  };
  %596() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_8695(%var_8663: Tensor[(2, 7, 12), float32]) -> (Tensor[(2, 7, 12), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 12), float32]) {
  %597 = cast(%var_8663, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %598 = @func_6228() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %599 = cast(%var_8663, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %600 = cos(%599) /* ty=Tensor[(2, 7, 12), float32] */;
  %601 = cast(%600, dtype="bool") /* ty=Tensor[(2, 7, 12), bool] */;
  %602 = shape_of(%var_8663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%var_8663, dtype="bool") /* ty=Tensor[(2, 7, 12), bool] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %605 = greater_equal(%603, %604) /* ty=Tensor[(2, 7, 12), bool] */;
  %606 = cast(%605, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %607 = atanh(%597) /* ty=Tensor[(2, 7, 12), float64] */;
  %608 = %598.0;
  %609 = asin(%606) /* ty=Tensor[(2, 7, 12), float32] */;
  (%607, %608, %609)
}

def @func_10164() -> Tensor[(16, 3, 7), float32] {
  @func_3596() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12444() -> Tensor[(16, 3, 7), float32] {
  @func_12442() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_13395(%var_13378: Tensor[(16, 2, 8), float32], %var_13379: Tensor[(16, 2, 8), float32], %var_13384: Tensor[(28), int16], %var_13385: Tensor[(360), float64]) -> (Tensor[(16, 2, 8), bool], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(360), float64], Tensor[(2880), float64]) {
  %610 = cast(%var_13379, dtype="bool") /* ty=Tensor[(16, 2, 8), bool] */;
  %611 = shape_of(%var_13378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_13378, dtype="bool") /* ty=Tensor[(16, 2, 8), bool] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %614 = cast(%var_13384, dtype="int16") /* ty=Tensor[(28), int16] */;
  %615 = cast(%var_13385, dtype="float64") /* ty=Tensor[(360), float64] */;
  %616 = cast(meta[relay.Constant][30] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %617 = reshape(%614, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %618 = reshape(%615, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %619 = reshape(%616, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %620 = @func_1925(%617, %618, %619) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
  %621 = greater(%612, %613) /* ty=Tensor[(16, 2, 8), bool] */;
  %622 = %620.7;
  (%621, %622, %var_13384, %var_13385, meta[relay.Constant][30] /* ty=Tensor[(2880), float64] */)
}

def @func_7510() -> (Tensor[(16, 3, 7), float64],) {
  @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */
}

def @func_6023() -> Tensor[(16, 3, 7), float64] {
  %623 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %623.0
}

def @func_2643(%var_2642: Tensor[(6, 15, 15), int64]) -> (Tensor[(6, 15, 15), int64],) {
  %627 = fn (%var_2627: Tensor[(6, 15, 15), int64]) -> (Tensor[(6, 15, 15), int64],) {
    %624 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 1, 15), int64] */, dtype="int64") /* ty=Tensor[(1, 1, 15), int64] */;
    %625 = cast(%var_2627, dtype="int64") /* ty=Tensor[(6, 15, 15), int64] */;
    %626 = bitwise_or(%624, %625) /* ty=Tensor[(6, 15, 15), int64] */;
    (%626,)
  };
  %627(%var_2642) /* ty=(Tensor[(6, 15, 15), int64],) */
}

def @func_9392() -> Tensor[(16, 3, 7), float64] {
  @func_8884() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_8808() -> Tensor[(16, 3, 7), float32] {
  @func_8806() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_11511() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %631 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
    %628 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
    %629 = @func_9125() /* ty=Tensor[(16, 3, 7), float32] */;
    %630 = %628.1;
    (%629, %630)
  };
  %631() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */
}

def @func_13220() -> Tensor[(16, 3, 7), float32] {
  %632 = fn () -> Tensor[(16, 3, 7), float32] {
    @func_10164() /* ty=Tensor[(16, 3, 7), float32] */
  };
  %632() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12063(%var_12050: Tensor[(504), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  %633 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %634 = cast(%var_12050, dtype="float64") /* ty=Tensor[(504), float64] */;
  %635 = reshape(%634, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %636 = @func_2331(%635) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %637 = %633.0;
  %638 = %636.2;
  (%637, %638, %var_12050)
}

def @func_11398(%var_11395: uint8, %var_11396: Tensor[(15, 1, 13), uint8], %var_11397: Tensor[(15, 1, 13), uint8]) -> Tensor[(15, ?, 13), int8] {
  @func_11393(%var_11395, %var_11396, %var_11397) /* ty=Tensor[(15, ?, 13), int8] */
}

def @func_7548() -> Tensor[(504), float64] {
  %640 = fn () -> Tensor[(504), float64] {
    %639 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
    %639.2
  };
  %640() /* ty=Tensor[(504), float64] */
}

def @func_13880(%var_13878: Tensor[(2880), float64], %var_13879: Tensor[(640), uint64]) -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(80), bool], Tensor[(2880), float64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %659 = fn (%var_13823: Tensor[(2880), float64], %var_13824: Tensor[(640), uint64]) -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(80), bool], Tensor[(2880), float64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %641 = @func_5199() /* ty=(Tensor[(28), int16],) */;
    %642 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
    %643 = cast(meta[relay.Constant][32] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
    %644 = cast(%var_13823, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %645 = %641.0;
    %646 = cast(%645, dtype="int16") /* ty=Tensor[(28), int16] */;
    %647 = cast(%var_13824, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %648 = reshape(%643, newshape=[4, 20]) /* ty=Tensor[(4, 20), bool] */;
    %649 = reshape(%644, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %650 = reshape(%646, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %651 = reshape(%647, newshape=[640]) /* ty=Tensor[(640), uint64] */;
    %652 = @func_13158(%648, %649, %650, %651) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(15, 8, 3), float64], Tensor[(4, 20), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
    %653 = @func_9684() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %654 = @func_11552() /* ty=Tensor[(16, 3, 7), float32] */;
    %655 = %642.0;
    %656 = %652.2;
    %657 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
    %658 = %653.0;
    (%645, %654, %655, %656, meta[relay.Constant][32] /* ty=Tensor[(80), bool] */, %var_13823, %var_13824, %657, %658)
  };
  %659(%var_13878, %var_13879) /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(80), bool], Tensor[(2880), float64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_9446(%var_9437: Tensor[(16, 10, 12), float32]) -> (Tensor[(16, 10, 12), float32],) {
  %660 = cast(%var_9437, dtype="float32") /* ty=Tensor[(16, 10, 12), float32] */;
  %661 = tan(%660) /* ty=Tensor[(16, 10, 12), float32] */;
  (%661,)
}

def @func_12823() -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64]) {
  %665 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64]) {
    %662 = @func_9684() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %663 = %662.0;
    %664 = @func_7547() /* ty=Tensor[(504), float64] */;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(504), float64]) */
}

def @func_10349() -> Tensor[(16, 3, 7), float32] {
  @func_10347() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_9082() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %670 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %666 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
    %667 = @func_6344() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %668 = %666.0;
    %669 = %667.0;
    (%668, %669)
  };
  %670() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_11670(%var_11669: Tensor[(13, 6, 14), uint64]) -> (Tensor[(13, 6, 14), bool],) {
  %676 = fn (%var_11664: Tensor[(13, 6, 14), uint64]) -> (Tensor[(13, 6, 14), bool],) {
    %671 = cast(%var_11664, dtype="bool") /* ty=Tensor[(13, 6, 14), bool] */;
    %672 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(13, 6, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %673 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 6, 14), uint64] */, dtype="bool") /* ty=Tensor[(13, 6, 14), bool] */;
    %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %675 = equal(%673, %674) /* ty=Tensor[(13, 6, 14), bool] */;
    (%675,)
  };
  %676(%var_11669) /* ty=(Tensor[(13, 6, 14), bool],) */
}

def @func_9271() -> Tensor[(16, 3, 7), float32] {
  @func_9269() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_10014() -> (Tensor[(28), int16],) {
  %677 = @func_2970() /* ty=(Tensor[(28), int16],) */;
  %678 = %677.0;
  (%678,)
}

def @func_3249() -> (Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) {
  @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */
}

def @func_13962() -> Tensor[(2, 7, 2), int16] {
  %679 = @func_8091() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16]) */;
  %679.4
}

def @func_1612(%var_1609: Tensor[(2880), float64], %var_1610: Tensor[(28), int16], %var_1611: Tensor[(360), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) {
  %722 = fn (%var_1553: Tensor[(2880), float64], %var_1575: Tensor[(28), int16], %var_1603: Tensor[(360), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) {
    %680 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
    %681 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(16, 3, 7), int32] */;
    %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%680, dtype="int32") /* ty=Tensor[(16, 3, 7), int32] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %685 = bitwise_xor(%683, %684) /* ty=Tensor[(16, 3, 7), int32] */;
    %686 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
    %687 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %688 = cast(%680, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
    %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %690 = floor_mod(%688, %689) /* ty=Tensor[(16, 3, 7), float64] */;
    %691 = cast(%690, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
    %692 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
    %693 = cast(%685, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
    %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %695 = greater_equal(%693, %694) /* ty=Tensor[(16, 3, 7), bool] */;
    %696 = cast(%695, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
    %697 = cast(%var_1553, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %698 = reshape(%697, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
    %699 = @func_1079(%698) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
    %700 = cast(meta[relay.Constant][35] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %701 = reshape(%700, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
    %702 = @func_710(%701) /* ty=(Tensor[(9, 2, 14), float64],) */;
    %703 = cast(%695, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
    %704 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %705 = cast(%680, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
    %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %707 = cast(%var_1575, dtype="int16") /* ty=Tensor[(28), int16] */;
    %708 = cast(%var_1575, dtype="int16") /* ty=Tensor[(28), int16] */;
    %709 = reshape(%707, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
    %710 = reshape(%708, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
    %711 = @func_1386(%709, %710) /* ty=(Tensor[(2, 7, 2), int16],) */;
    %712 = cast(%var_1603, dtype="float64") /* ty=Tensor[(360), float64] */;
    %713 = reshape(%712, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
    %714 = @func_782(%713) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
    %715 = acos(%696) /* ty=Tensor[(16, 3, 7), float32] */;
    %716 = %699.1;
    %717 = %702.0;
    %718 = floor_divide(%705, %706) /* ty=Tensor[(16, 3, 7), float32] */;
    %719 = %711.0;
    %720 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
    %721 = %714.1;
    (%715, %716, %var_1553, %717, meta[relay.Constant][35] /* ty=Tensor[(252), float64] */, %718, %719, %var_1575, %720, %721, %var_1603)
  };
  %722(%var_1609, %var_1610, %var_1611) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */
}

def @func_782(%var_770: Tensor[(15, 8, 3), float64]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) {
  %723 = cast(%var_770, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %724 = cast(%var_770, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %725 = log(%723) /* ty=Tensor[(15, 8, 3), float64] */;
  %726 = tan(%724) /* ty=Tensor[(15, 8, 3), float64] */;
  (%725, %726)
}

def @func_12106() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %731 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %727 = @func_4747() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %728 = @func_6889() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %729 = %727.0;
    %730 = %728.1;
    (%729, %730)
  };
  %731() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_13230() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %732 = @func_6980() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %733 = %732.0;
  %734 = @func_10347() /* ty=Tensor[(16, 3, 7), float32] */;
  (%733, %734)
}

def @func_2045(%var_2041: Tensor[(2880), float64], %var_2042: Tensor[(28), int16], %var_2043: Tensor[(36, 10), float64], %var_2044: Tensor[(10, 64), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %756 = fn (%var_1996: Tensor[(2880), float64], %var_1997: Tensor[(28), int16], %var_2014: Tensor[(36, 10), float64], %var_2025: Tensor[(10, 64), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %735 = cast(%var_1996, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %736 = cast(%var_1997, dtype="int16") /* ty=Tensor[(28), int16] */;
    %737 = cast(meta[relay.Constant][36] /* ty=Tensor[(36, 10), float64] */, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
    %738 = reshape(%735, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
    %739 = reshape(%736, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
    %740 = reshape(%737, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
    %741 = @func_1703(%738, %739, %740) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
    %742 = cast(%var_2014, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
    %743 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(36, 10), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %744 = cast(meta[relay.Constant][36] /* ty=Tensor[(36, 10), float64] */, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
    %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %746 = cast(%var_2025, dtype="uint64") /* ty=Tensor[(10, 64), uint64] */;
    %747 = reshape(%746, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
    %748 = @func_529(%747) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
    %749 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %750 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
    %751 = %741.6;
    %752 = greater(%744, %745) /* ty=Tensor[(36, 10), bool] */;
    %753 = %748.1;
    %754 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
    %755 = %749.0;
    (%750, %751, %var_1996, %var_1997, %752, %753, %var_2025, %754, %755)
  };
  %756(%var_2041, %var_2042, %var_2043, %var_2044) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_7799() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) {
  %765 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) {
    %757 = @func_6622() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
    %758 = @func_6087() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) */;
    %759 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
    %760 = %757.0;
    %761 = %758.0;
    %762 = %759.0;
    %763 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
    %764 = @func_7547() /* ty=Tensor[(504), float64] */;
    (%760, %761, %762, %763, %764)
  };
  %765() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) */
}

def @func_6510() -> (Tensor[(2880), bool],) {
  %772 = fn () -> (Tensor[(2880), bool],) {
    %766 = @func_4476() /* ty=Tensor[(2880), float64] */;
    %767 = cast(meta[relay.Constant][37] /* ty=Tensor[(2880), float64] */, dtype="bool") /* ty=Tensor[(2880), bool] */;
    %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(1), int32] */;
    %769 = cast(%766, dtype="bool") /* ty=Tensor[(2880), bool] */;
    %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?), bool] */;
    %771 = less_equal(%769, %770) /* ty=Tensor[(2880), bool] */;
    (%771,)
  };
  %772() /* ty=(Tensor[(2880), bool],) */
}

def @main(%var_14500: Tensor[(14, 6, 12), float32], %var_14501: Tensor[(14, 6, 12), float32]) -> Tensor[(14, 6, 12), float32] {
  %773 = cast(%var_14501, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
  %774 = shape_of(%var_14500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%var_14500, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%775, %776) /* ty=Tensor[(14, 6, 12), float32] */
}

def @func_12523() -> (Tensor[(16, 3, 7), float32],) {
  %779 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %777 = @func_7798() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) */;
    %778 = %777.0;
    (%778,)
  };
  %779() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_13277() -> (Tensor[(16, 3, 7), float32],) {
  %780 = @func_9604() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %781 = %780.0;
  (%781,)
}

def @func_6819(%var_6737: Tensor[(140), int16], %var_6757: Tensor[(140), int16]) -> (Tensor[(140), uint16], Tensor[(2880), float32], Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %782 = cast(%var_6757, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %783 = shape_of(%var_6737, dtype="int32") /* ty=Tensor[(1), int32] */;
  %784 = cast(%var_6737, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %786 = @func_6509() /* ty=(Tensor[(2880), bool],) */;
  %787 = %786.0;
  %788 = cast(%var_6737, dtype="int16") /* ty=Tensor[(140), int16] */;
  %789 = reshape(%788, newshape=[14, 2, 5]) /* ty=Tensor[(14, 2, 5), int16] */;
  %790 = @func_4546(%789) /* ty=(Tensor[(14, 2, 5), bool], Tensor[(14, 2, 5), float64], Tensor[(2880), float64]) */;
  %791 = %790.2;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %793 = shape_of(%787, dtype="int32") /* ty=Tensor[(1), int32] */;
  %794 = cast(%787, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?), float32] */;
  %796 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %797 = bitwise_or(%784, %785) /* ty=Tensor[(140), uint16] */;
  %798 = floor_divide(%794, %795) /* ty=Tensor[(2880), float32] */;
  %799 = %796.0;
  %800 = @func_4652() /* ty=Tensor[(28), int16] */;
  (%797, %798, %799, %800)
}

def @func_10342() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %801 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %802 = @func_9779() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %803 = %801.0;
  %804 = %802.0;
  %805 = @func_9522() /* ty=Tensor[(16, 3, 7), float32] */;
  %806 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  (%803, %804, %805, %806)
}

def @func_4013() -> (Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  %807 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %808 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  %809 = %807.2;
  (%808, %809)
}

def @func_8328() -> Tensor[(16, 3, 7), float32] {
  %811 = fn () -> Tensor[(16, 3, 7), float32] {
    %810 = @func_6164() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %810.0
  };
  %811() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_13340() -> (Tensor[(16, 3, 7), float32],) {
  %814 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %812 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
    %813 = %812.1;
    (%813,)
  };
  %814() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_13401(%var_13397: Tensor[(16, 2, 8), float32], %var_13398: Tensor[(16, 2, 8), float32], %var_13399: Tensor[(28), int16], %var_13400: Tensor[(360), float64]) -> (Tensor[(16, 2, 8), bool], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(360), float64], Tensor[(2880), float64]) {
  @func_13395(%var_13397, %var_13398, %var_13399, %var_13400) /* ty=(Tensor[(16, 2, 8), bool], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(360), float64], Tensor[(2880), float64]) */
}

def @func_9262() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_9260() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_9781() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) {
  @func_9779() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */
}

def @func_3642(%var_3641: Tensor[(3, 12, 16), float64]) -> (Tensor[(3, 12, 16), float64], Tensor[(16, 3, 7), float32]) {
  %819 = fn (%var_3631: Tensor[(3, 12, 16), float64]) -> (Tensor[(3, 12, 16), float64], Tensor[(16, 3, 7), float32]) {
    %815 = cast(%var_3631, dtype="float64") /* ty=Tensor[(3, 12, 16), float64] */;
    %816 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
    %817 = rsqrt(%815) /* ty=Tensor[(3, 12, 16), float64] */;
    %818 = %816.3;
    (%817, %818)
  };
  %819(%var_3641) /* ty=(Tensor[(3, 12, 16), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_10132() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  @func_10130() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */
}

def @func_14030(%var_14028: Tensor[(16, 16, 1), float32]) -> (Tensor[(16, 16, 1), float32], Tensor[(16, 3, 7), float32]) {
  @func_14027(%var_14028) /* ty=(Tensor[(16, 16, 1), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_12887() -> Tensor[(16, 3, 7), float32] {
  %820 = fn () -> Tensor[(16, 3, 7), float32] {
    @func_3950() /* ty=Tensor[(16, 3, 7), float32] */
  };
  %820() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_11650(%var_11643: Tensor[(16, 11, 4), uint64], %var_11644: Tensor[(16, 11, 4), uint64]) -> (Tensor[(16, 11, 4), uint64],) {
  %821 = cast(%var_11644, dtype="uint64") /* ty=Tensor[(16, 11, 4), uint64] */;
  %822 = shape_of(%var_11643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%var_11643, dtype="uint64") /* ty=Tensor[(16, 11, 4), uint64] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %825 = multiply(%823, %824) /* ty=Tensor[(16, 11, 4), uint64] */;
  (%825,)
}

def @func_3597() -> Tensor[(16, 3, 7), float32] {
  %827 = fn () -> Tensor[(16, 3, 7), float32] {
    %826 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
    %826.0
  };
  %827() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_7598() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %828 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
  %829 = %828.3;
  %830 = cast(%829, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  %831 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %832 = @func_4289() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %833 = cos(%830) /* ty=Tensor[(16, 3, 7), float32] */;
  %834 = %831.0;
  %835 = %832.0;
  (%833, %834, %835)
}

def @func_11298() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) {
  %836 = @func_10562() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %837 = %836.0;
  %838 = @func_4094() /* ty=Tensor[(16, 3, 7), float32] */;
  (%837, %838)
}

def @func_5032() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_5030() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_9606() -> (Tensor[(16, 3, 7), float32],) {
  @func_9604() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_12982() -> (Tensor[(16, 3, 7), float32],) {
  %839 = @func_9051() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %840 = %839.0;
  (%840,)
}

def @func_12835() -> (Tensor[(64), float64],) {
  @func_12833() /* ty=(Tensor[(64), float64],) */
}

def @func_14102() -> Tensor[(16, 3, 7), float32] {
  @func_8327() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_14027(%var_14016: Tensor[(16, 16, 1), float32]) -> (Tensor[(16, 16, 1), float32], Tensor[(16, 3, 7), float32]) {
  %841 = cast(%var_14016, dtype="float32") /* ty=Tensor[(16, 16, 1), float32] */;
  %842 = erf(%841) /* ty=Tensor[(16, 16, 1), float32] */;
  %843 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  (%842, %843)
}

def @func_8544() -> Tensor[(16, 3, 7), float32] {
  @func_8542() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_14205() -> Tensor[(16, 3, 7), float32] {
  %845 = fn () -> Tensor[(16, 3, 7), float32] {
    %844 = @func_6489() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %844.0
  };
  %845() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12995(%var_12988: Tensor[(1, 10, 12), float32], %var_12989: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), bool],) {
  %846 = cast(%var_12988, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %847 = cast(%var_12989, dtype="bool") /* ty=Tensor[(7, 10, 12), bool] */;
  %848 = not_equal(%846, %847) /* ty=Tensor[(7, 10, 12), bool] */;
  (%848,)
}

def @func_9999(%var_9997: Tensor[(8, 6, 1), float64], %var_9998: Tensor[(8, 6, 4), float64]) -> (Tensor[(8, 6, 4), int16], Tensor[(16, 3, 7), float64]) {
  %859 = fn (%var_9974: Tensor[(8, 6, 1), float64], %var_9975: Tensor[(8, 6, 4), float64]) -> (Tensor[(8, 6, 4), int16], Tensor[(16, 3, 7), float64]) {
    %849 = cast(%var_9974, dtype="float64") /* ty=Tensor[(8, 6, 1), float64] */;
    %850 = cast(%var_9975, dtype="float64") /* ty=Tensor[(8, 6, 4), float64] */;
    %851 = floor_mod(%849, %850) /* ty=Tensor[(8, 6, 4), float64] */;
    %852 = cast(%851, dtype="int16") /* ty=Tensor[(8, 6, 4), int16] */;
    %853 = shape_of(%var_9975, dtype="int32") /* ty=Tensor[(3), int32] */;
    %854 = cast(%var_9975, dtype="int16") /* ty=Tensor[(8, 6, 4), int16] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %856 = @func_7508() /* ty=(Tensor[(16, 3, 7), float64],) */;
    %857 = logical_xor(%854, %855) /* ty=Tensor[(8, 6, 4), int16] */;
    %858 = %856.0;
    (%857, %858)
  };
  %859(%var_9997, %var_9998) /* ty=(Tensor[(8, 6, 4), int16], Tensor[(16, 3, 7), float64]) */
}

def @func_8806() -> Tensor[(16, 3, 7), float32] {
  @func_8563() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_13232() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_13230() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_7600() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_7598() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_4576() -> (Tensor[(28), int16],) {
  %862 = fn () -> (Tensor[(28), int16],) {
    %860 = @func_3840() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) */;
    %861 = %860.4;
    (%861,)
  };
  %862() /* ty=(Tensor[(28), int16],) */
}

def @func_7296() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_7294() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %863 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %864 = @func_4390() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %865 = %863.0;
  %866 = %864.1;
  (%865, %866)
}

def @func_9754(%var_9753: Tensor[(360), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2, 1440), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
  %877 = fn (%var_9743: Tensor[(360), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2, 1440), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
    %867 = @func_6087() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) */;
    %868 = cast(meta[relay.Constant][38] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %869 = cast(meta[relay.Constant][39] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %870 = cast(%var_9743, dtype="float64") /* ty=Tensor[(360), float64] */;
    %871 = reshape(%868, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
    %872 = reshape(%869, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
    %873 = reshape(%870, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
    %874 = @func_1703(%871, %872, %873) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
    %875 = %867.0;
    %876 = %874.1;
    (%875, %876, meta[relay.Constant][38] /* ty=Tensor[(2880), float64] */, meta[relay.Constant][39] /* ty=Tensor[(28), int16] */, %var_9743)
  };
  %877(%var_9753) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2, 1440), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) */
}

def @func_8757() -> (Tensor[(2880), float64],) {
  %878 = @func_4476() /* ty=Tensor[(2880), float64] */;
  (%878,)
}

def @func_3104() -> (Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %889 = fn () -> (Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %879 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
    %880 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
    %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%879, dtype="bool") /* ty=Tensor[(16, 3, 7), bool] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %884 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
    %885 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
    %886 = logical_or(%882, %883) /* ty=Tensor[(16, 3, 7), bool] */;
    %887 = log2(%884) /* ty=Tensor[(16, 3, 7), float32] */;
    %888 = atanh(%885) /* ty=Tensor[(16, 3, 7), float32] */;
    (%886, %887, %888)
  };
  %889() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_11300() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) {
  @func_11298() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_14005() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(1, 360), float64]) {
  @func_14003() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(1, 360), float64]) */
}

def @func_14432() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool]) {
  %890 = @func_12385() /* ty=(Tensor[(16, 3, 7), bool],) */;
  %891 = @func_9392() /* ty=Tensor[(16, 3, 7), float64] */;
  %892 = %890.0;
  (%891, %892)
}

def @func_11793() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(2, 5, 10), float64], Tensor[(100), uint64], Tensor[(16, 3, 7), float64], Tensor[(28), int16]) {
  @func_11791() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(2, 5, 10), float64], Tensor[(100), uint64], Tensor[(16, 3, 7), float64], Tensor[(28), int16]) */
}

def @func_9166() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  @func_9164() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */
}

def @func_3270() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %893 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %894 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %895 = %893.0;
  %896 = %894.0;
  (%895, %896)
}

def @func_10463(%var_10409: float64, %var_10410: Tensor[(8, 4, 10), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(8, 4, 10), float32], Tensor[(8, 4, 10), uint32], Tensor[(28), int16]) {
  %897 = @func_9315() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %898 = cast(%var_10410, dtype="float64") /* ty=Tensor[(8, 4, 10), float64] */;
  %899 = log(%898) /* ty=Tensor[(8, 4, 10), float64] */;
  %900 = cast(%899, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
  %901 = cast(%var_10409, dtype="float64") /* ty=float64 */;
  %902 = cast(%var_10410, dtype="float64") /* ty=Tensor[(8, 4, 10), float64] */;
  %903 = floor_divide(%901, %902) /* ty=Tensor[(8, 4, 10), float64] */;
  %904 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 4, 10), float64] */, dtype="uint32") /* ty=Tensor[(8, 4, 10), uint32] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%903, dtype="uint32") /* ty=Tensor[(8, 4, 10), uint32] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %908 = @func_10014() /* ty=(Tensor[(28), int16],) */;
  %909 = %897.0;
  %910 = erf(%900) /* ty=Tensor[(8, 4, 10), float32] */;
  %911 = add(%906, %907) /* ty=Tensor[(8, 4, 10), uint32] */;
  %912 = %908.0;
  (%909, %910, %911, %912)
}

def @func_1081(%var_1080: Tensor[(16, 15, 12), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) {
  %922 = fn (%var_1056: Tensor[(16, 15, 12), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) {
    %913 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 15, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
    %914 = log10(%913) /* ty=Tensor[(16, 15, 12), float64] */;
    %915 = cast(%var_1056, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
    %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
    %917 = cast(%914, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
    %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %919 = cast(%var_1056, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
    %920 = less(%917, %918) /* ty=Tensor[(16, 15, 12), bool] */;
    %921 = asin(%919) /* ty=Tensor[(16, 15, 12), float64] */;
    (%920, %921)
  };
  %922(%var_1080) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */
}

def @func_10956(%var_10954: Tensor[(2880), float64], %var_10955: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
  %935 = fn (%var_10928: Tensor[(2880), float64], %var_10929: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
    %923 = @func_2736() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %924 = @func_5949() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64]) */;
    %925 = cast(%var_10928, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %926 = cast(%var_10929, dtype="int16") /* ty=Tensor[(28), int16] */;
    %927 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %928 = reshape(%925, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
    %929 = reshape(%926, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
    %930 = reshape(%927, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
    %931 = @func_1703(%928, %929, %930) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
    %932 = %923.0;
    %933 = %924.1;
    %934 = %931.7;
    (%932, %933, %934, %var_10928, %var_10929, meta[relay.Constant][43] /* ty=Tensor[(360), float64] */)
  };
  %935(%var_10954, %var_10955) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) */
}

def @func_11015() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float32], Tensor[(1, 28), int16], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  %936 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %937 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %939 = sinh(%938) /* ty=Tensor[(16, 15, 12), float32] */;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %941 = cast(%937, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %942 = cast(meta[relay.Constant][44] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %943 = cast(meta[relay.Constant][45] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %944 = reshape(%941, newshape=[2, 1440]) /* ty=Tensor[(2, 1440), float64] */;
  %945 = reshape(%942, newshape=[1, 28]) /* ty=Tensor[(1, 28), int16] */;
  %946 = reshape(%943, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %947 = @func_1703(%944, %945, %946) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */;
  %948 = @func_10342() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %949 = %936.1;
  %950 = log(%940) /* ty=Tensor[(16, 15, 12), float32] */;
  %951 = %947.2;
  %952 = %948.2;
  (%949, %950, %951, meta[relay.Constant][44] /* ty=Tensor[(28), int16] */, meta[relay.Constant][45] /* ty=Tensor[(360), float64] */, %952)
}

def @func_6125() -> Tensor[(16, 3, 7), float32] {
  @func_6123() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_2370() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) {
  %953 = cast(meta[relay.Constant][46] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %954 = reshape(%953, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %955 = @func_2331(%954) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(2, 180), float64]) */;
  %956 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %957 = %955.7;
  (%956, %957, meta[relay.Constant][46] /* ty=Tensor[(504), float64] */)
}

def @func_7508() -> (Tensor[(16, 3, 7), float64],) {
  %958 = @func_6362() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) */;
  %959 = %958.1;
  (%959,)
}

def @func_2719() -> (Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) {
  @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_9260() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %960 = @func_6228() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %961 = @func_5757() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %962 = @func_8402() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */;
  %963 = %960.0;
  %964 = %961.0;
  %965 = %962.0;
  (%963, %964, %965)
}

def @func_10016() -> (Tensor[(28), int16],) {
  @func_10014() /* ty=(Tensor[(28), int16],) */
}

def @func_11110() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], float64, Tensor[(320), float64], Tensor[(16, 3, 7), bool]) {
  %975 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], float64, Tensor[(320), float64], Tensor[(16, 3, 7), bool]) {
    %966 = cast(7.40259f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %967 = cast(meta[relay.Constant][47] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
    %968 = reshape(%966, newshape=[]) /* ty=float64 */;
    %969 = reshape(%967, newshape=[8, 4, 10]) /* ty=Tensor[(8, 4, 10), float64] */;
    %970 = @func_10463(%968, %969) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(8, 4, 10), float32], Tensor[(8, 4, 10), uint32], Tensor[(28), int16]) */;
    %971 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
    %972 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
    %973 = %970.3;
    %974 = %971.1;
    (%972, %973, 7.40259f64 /* ty=float64 */, meta[relay.Constant][47] /* ty=Tensor[(320), float64] */, %974)
  };
  %975() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], float64, Tensor[(320), float64], Tensor[(16, 3, 7), bool]) */
}

def @func_14365() -> (Tensor[(16, 3, 7), float32],) {
  %976 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %977 = %976.0;
  (%977,)
}

def @func_4710(%var_4708: Tensor[(2, 5, 10), uint64], %var_4709: Tensor[(2, 5, 10), uint64]) -> (Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(2, 5, 10), float64]) {
  @func_4706(%var_4708, %var_4709) /* ty=(Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(2, 5, 10), float64]) */
}

def @func_12442() -> Tensor[(16, 3, 7), float32] {
  %978 = @func_7798() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64]) */;
  %978.2
}

def @func_13031() -> Tensor[(16, 3, 7), float32] {
  @func_10347() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_7159(%var_7132: Tensor[(360), float64]) -> (Tensor[(28), int16], Tensor[(2880), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32]) {
  %979 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
  %980 = %979.0;
  %981 = cast(%980, dtype="int16") /* ty=Tensor[(28), int16] */;
  %982 = cast(%var_7132, dtype="float64") /* ty=Tensor[(360), float64] */;
  %983 = reshape(%981, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %984 = reshape(%982, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %985 = @func_3302(%983, %984) /* ty=(Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) */;
  %986 = @func_5030() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %987 = %986.1;
  %988 = cast(%987, dtype="float64") /* ty=Tensor[(16, 3, 7), float64] */;
  %989 = @func_6380() /* ty=(Tensor[(16, 3, 7), bool],) */;
  %990 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %991 = %985.2;
  %992 = atan(%988) /* ty=Tensor[(16, 3, 7), float64] */;
  %993 = %989.0;
  %994 = %990.0;
  (%980, %991, %var_7132, %992, %993, %994)
}

def @func_1214() -> Tensor[(16, 3, 7), float32] {
  @func_1212() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_14264() -> Tensor[(16, 3, 7), float32] {
  %996 = fn () -> Tensor[(16, 3, 7), float32] {
    %995 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
    %995.3
  };
  %996() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_10275(%var_10273: Tensor[(225), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64]) {
  @func_10272(%var_10273) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(5, 15, 3), bool], Tensor[(225), float64]) */
}

def @func_4477() -> Tensor[(2880), float64] {
  %998 = fn () -> Tensor[(2880), float64] {
    %997 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
    %997.2
  };
  %998() /* ty=Tensor[(2880), float64] */
}

def @func_7059(%var_7057: Tensor[(12, 13, 11), float32], %var_7058: Tensor[(12, 13, 11), float32]) -> (Tensor[(12, 13, 11), float32], Tensor[(14, 2, 5), bool], Tensor[(140), int16], Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) {
  @func_7055(%var_7057, %var_7058) /* ty=(Tensor[(12, 13, 11), float32], Tensor[(14, 2, 5), bool], Tensor[(140), int16], Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) */
}

def @func_8759() -> (Tensor[(2880), float64],) {
  @func_8757() /* ty=(Tensor[(2880), float64],) */
}

def @func_11553() -> Tensor[(16, 3, 7), float32] {
  %1000 = fn () -> Tensor[(16, 3, 7), float32] {
    %999 = @func_3710() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %999.0
  };
  %1000() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_2972() -> (Tensor[(28), int16],) {
  @func_2970() /* ty=(Tensor[(28), int16],) */
}

def @func_5757() -> (Tensor[(16, 3, 7), float32],) {
  %1001 = @func_2717() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) */;
  %1002 = %1001.3;
  (%1002,)
}

def @func_14483() -> Tensor[(16, 3, 7), float32] {
  @func_14481() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_11576() -> (Tensor[(15, 8, 3), float64],) {
  %1003 = @func_3789() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
  %1004 = %1003.1;
  (%1004,)
}

def @func_4391() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1008 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %1005 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
    %1006 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
    %1007 = %1005.0;
    (%1006, %1007)
  };
  %1008() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_12999(%var_12997: Tensor[(1, 10, 12), float32], %var_12998: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), bool],) {
  @func_12995(%var_12997, %var_12998) /* ty=(Tensor[(7, 10, 12), bool],) */
}

def @func_529(%var_511: Tensor[(8, 8, 10), uint64]) -> (Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) {
  %1009 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 8, 10), uint64] */, dtype="uint64") /* ty=Tensor[(8, 8, 10), uint64] */;
  %1010 = shape_of(%var_511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_511, dtype="uint64") /* ty=Tensor[(8, 8, 10), uint64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1013 = cast(meta[relay.Constant][49] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1014 = reshape(%1013, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %1015 = logical_xor(%1011, %1012) /* ty=Tensor[(8, 8, 10), uint64] */;
  %1016 = @func_168(%1014) /* ty=Tensor[(7, 9, 8), int16] */;
  (%1015, %1016, meta[relay.Constant][49] /* ty=Tensor[(504), float64] */)
}

def @func_1781(%var_1729: Tensor[(8, 2, 4), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(8, 2, 4), uint8]) {
  %1017 = cast(meta[relay.Constant][50] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1018 = reshape(%1017, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %1019 = @func_1079(%1018) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %1020 = cast(%var_1729, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %1021 = sqrt(%1020) /* ty=Tensor[(8, 2, 4), float64] */;
  %1022 = cast(%var_1729, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
  %1023 = shape_of(%1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%1021, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1026 = %1019.0;
  %1027 = subtract(%1024, %1025) /* ty=Tensor[(8, 2, 4), uint8] */;
  (%1026, meta[relay.Constant][50] /* ty=Tensor[(2880), float64] */, %1027)
}

def @func_6980() -> (Tensor[(16, 3, 7), float32],) {
  %1028 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %1029 = %1028.0;
  (%1029,)
}

def @func_9652() -> (Tensor[(16, 3, 7), float32],) {
  %1032 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %1030 = @func_7598() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %1031 = %1030.2;
    (%1031,)
  };
  %1032() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_13377() -> Tensor[(16, 3, 7), float64] {
  %1034 = fn () -> Tensor[(16, 3, 7), float64] {
    %1033 = @func_7934() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(64), float64]) */;
    %1033.0
  };
  %1034() /* ty=Tensor[(16, 3, 7), float64] */
}

def @func_12833() -> (Tensor[(64), float64],) {
  %1035 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %1036 = %1035.2;
  (%1036,)
}

def @func_12386() -> (Tensor[(16, 3, 7), bool],) {
  %1039 = fn () -> (Tensor[(16, 3, 7), bool],) {
    %1037 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
    %1038 = %1037.1;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(16, 3, 7), bool],) */
}

def @func_6229() -> (Tensor[(16, 3, 7), float32],) {
  %1041 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %1040 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
    (%1040,)
  };
  %1041() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_2620() -> (Tensor[(16, 3, 7), float32],) {
  @func_2618() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_2738() -> (Tensor[(16, 3, 7), float32],) {
  @func_2736() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_9779() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) {
  %1042 = @func_4575() /* ty=(Tensor[(28), int16],) */;
  %1043 = @func_6123() /* ty=Tensor[(16, 3, 7), float32] */;
  %1044 = %1042.0;
  %1045 = @func_7547() /* ty=Tensor[(504), float64] */;
  (%1043, %1044, %1045)
}

def @func_8403() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  %1050 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
    %1046 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1047 = @func_7684() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
    %1048 = %1046.0;
    %1049 = %1047.1;
    (%1048, %1049)
  };
  %1050() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */
}

def @func_6364() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) {
  @func_6362() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) */
}

def @func_10675() -> (Tensor[(16, 3, 7), float32],) {
  %1053 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %1051 = @func_2618() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1052 = %1051.0;
    (%1052,)
  };
  %1053() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_12701(%var_12700: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), float32], Tensor[(28), int16]) {
  %1062 = fn (%var_12684: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), float32], Tensor[(28), int16]) {
    %1054 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
    %1055 = @func_3103() /* ty=(Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %1056 = cast(%var_12684, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1057 = reshape(%1056, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1058 = @func_2824(%1057) /* ty=(Tensor[(28), float64], Tensor[(28), float32]) */;
    %1059 = %1054.0;
    %1060 = %1055.0;
    %1061 = %1058.1;
    (%1059, %1060, %1061, %var_12684)
  };
  %1062(%var_12700) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), float32], Tensor[(28), int16]) */
}

def @func_5200() -> (Tensor[(28), int16],) {
  %1065 = fn () -> (Tensor[(28), int16],) {
    %1063 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
    %1064 = %1063.1;
    (%1064,)
  };
  %1065() /* ty=(Tensor[(28), int16],) */
}

def @func_3842() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) {
  @func_3840() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float64], Tensor[(2, 180), float64], Tensor[(504), float64], Tensor[(28), int16]) */
}

def @func_12786() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
  %1070 = fn () -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
    %1066 = @func_9497() /* ty=(Tensor[(28), int16], Tensor[(28), int16]) */;
    %1067 = @func_8660() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool], Tensor[(28), int16]) */;
    %1068 = %1066.1;
    %1069 = %1067.0;
    (%1068, %1069)
  };
  %1070() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */
}

def @func_6299(%var_6297: Tensor[(9, 5, 3), uint64], %var_6298: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(9, 5, 3), bool]) {
  %1092 = fn (%var_6242: Tensor[(9, 5, 3), uint64], %var_6255: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(9, 5, 3), bool]) {
    %1071 = cast(%var_6255, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1072 = reshape(%1071, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1073 = @func_3326(%1072) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */;
    %1074 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 5, 3), uint64] */, dtype="uint64") /* ty=Tensor[(9, 5, 3), uint64] */;
    %1075 = shape_of(%var_6242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1076 = cast(%var_6242, dtype="uint64") /* ty=Tensor[(9, 5, 3), uint64] */;
    %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1078 = bitwise_and(%1076, %1077) /* ty=Tensor[(9, 5, 3), uint64] */;
    %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
    %1080 = sqrt(%1079) /* ty=Tensor[(9, 5, 3), float32] */;
    %1081 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 5, 3), float32] */, dtype="uint32") /* ty=Tensor[(9, 5, 3), uint32] */;
    %1082 = shape_of(%1080, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1083 = cast(%1080, dtype="uint32") /* ty=Tensor[(9, 5, 3), uint32] */;
    %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1085 = bitwise_or(%1083, %1084) /* ty=Tensor[(9, 5, 3), uint32] */;
    %1086 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 5, 3), float32] */, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
    %1087 = shape_of(%1085, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1088 = cast(%1085, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
    %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1090 = %1073.3;
    %1091 = greater_equal(%1088, %1089) /* ty=Tensor[(9, 5, 3), bool] */;
    (%1090, %var_6255, %1091)
  };
  %1092(%var_6297, %var_6298) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(9, 5, 3), bool]) */
}

def @func_9684() -> (Tensor[(16, 3, 7), float32],) {
  %1093 = @func_9051() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1094 = %1093.0;
  (%1094,)
}

def @func_2970() -> (Tensor[(28), int16],) {
  %1095 = @func_2370() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(504), float64]) */;
  %1096 = %1095.1;
  (%1096,)
}

def @func_8175() -> (Tensor[(16, 3, 7), float32],) {
  %1097 = @func_5314() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1097,)
}

def @func_13164(%var_13160: Tensor[(4, 20), bool], %var_13161: Tensor[(2880), float64], %var_13162: Tensor[(28), int16], %var_13163: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(15, 8, 3), float64], Tensor[(4, 20), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) {
  @func_13158(%var_13160, %var_13161, %var_13162, %var_13163) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(15, 8, 3), float64], Tensor[(4, 20), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */
}

def @func_3944(%var_3942: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
  @func_3941(%var_3942) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) */
}

def @func_6165() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  %1102 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
    %1098 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
    %1099 = @func_3270() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %1100 = %1098.0;
    %1101 = %1099.0;
    (%1100, %1101)
  };
  %1102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_4831(%var_4829: Tensor[(96, 30), float64], %var_4830: Tensor[(360), float64]) -> (Tensor[(64), float32], Tensor[(16, 3, 7), float32], Tensor[(96, 30), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
  %1117 = fn (%var_4821: Tensor[(96, 30), float64], %var_4823: Tensor[(360), float64]) -> (Tensor[(64), float32], Tensor[(16, 3, 7), float32], Tensor[(96, 30), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) {
    %1103 = @func_2085() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
    %1104 = %1103.3;
    %1105 = cast(%1104, dtype="float32") /* ty=Tensor[(64), float32] */;
    %1106 = cast(%var_4821, dtype="float64") /* ty=Tensor[(96, 30), float64] */;
    %1107 = cast(meta[relay.Constant][53] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1108 = cast(%var_4823, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1109 = reshape(%1106, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %1110 = reshape(%1107, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1111 = reshape(%1108, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %1112 = @func_1608(%1109, %1110, %1111) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
    %1113 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1114 = cos(%1105) /* ty=Tensor[(64), float32] */;
    %1115 = %1112.0;
    %1116 = %1113.0;
    (%1114, %1115, %var_4821, meta[relay.Constant][53] /* ty=Tensor[(28), int16] */, %var_4823, %1116)
  };
  %1117(%var_4829, %var_4830) /* ty=(Tensor[(64), float32], Tensor[(16, 3, 7), float32], Tensor[(96, 30), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */
}

def @func_7340() -> (Tensor[(16, 3, 7), float32],) {
  %1119 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %1118 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
    (%1118,)
  };
  %1119() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_11578() -> (Tensor[(15, 8, 3), float64],) {
  @func_11576() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_1455() -> Tensor[(16, 3, 7), float32] {
  %1121 = fn () -> Tensor[(16, 3, 7), float32] {
    %1120 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1120.0
  };
  %1121() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_3941(%var_3925: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(7, 9, 8), int16], Tensor[(640), uint64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) {
  %1122 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %1123 = cast(meta[relay.Constant][54] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1124 = reshape(%1123, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
  %1125 = @func_529(%1124) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
  %1126 = cast(%var_3925, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1127 = cast(meta[relay.Constant][55] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1128 = cast(meta[relay.Constant][56] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1129 = cast(meta[relay.Constant][54] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1130 = reshape(%1126, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %1131 = reshape(%1127, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1132 = reshape(%1128, newshape=[36, 10]) /* ty=Tensor[(36, 10), float64] */;
  %1133 = reshape(%1129, newshape=[10, 64]) /* ty=Tensor[(10, 64), uint64] */;
  %1134 = @func_2040(%1130, %1131, %1132, %1133) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), int8], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(36, 10), bool], Tensor[(7, 9, 8), int16], Tensor[(10, 64), uint64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1135 = %1122.3;
  %1136 = %1125.1;
  %1137 = %1134.8;
  (%1135, %1136, meta[relay.Constant][54] /* ty=Tensor[(640), uint64] */, %1137, %var_3925, meta[relay.Constant][55] /* ty=Tensor[(28), int16] */, meta[relay.Constant][56] /* ty=Tensor[(360), float64] */)
}

def @func_4289() -> (Tensor[(16, 3, 7), float32],) {
  %1138 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1139 = %1138.0;
  (%1139,)
}

def @func_9053() -> (Tensor[(16, 3, 7), float32],) {
  @func_9051() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_8255(%var_8254: Tensor[(360), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(140), int16], Tensor[(1716), float32], Tensor[(96, 30), float64]) {
  %1163 = fn (%var_8230: Tensor[(360), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(140), int16], Tensor[(1716), float32], Tensor[(96, 30), float64]) {
    %1140 = @func_8175() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1141 = @func_6622() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
    %1142 = cast(meta[relay.Constant][57] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1143 = cast(%var_8230, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1144 = reshape(%1142, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1145 = reshape(%1143, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
    %1146 = @func_3302(%1144, %1145) /* ty=(Tensor[(504), float64], Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(1, 360), float64]) */;
    %1147 = cast(meta[relay.Constant][58] /* ty=Tensor[(1716), float32] */, dtype="float32") /* ty=Tensor[(1716), float32] */;
    %1148 = cast(meta[relay.Constant][58] /* ty=Tensor[(1716), float32] */, dtype="float32") /* ty=Tensor[(1716), float32] */;
    %1149 = reshape(%1147, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float32] */;
    %1150 = reshape(%1148, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float32] */;
    %1151 = @func_7055(%1149, %1150) /* ty=(Tensor[(12, 13, 11), float32], Tensor[(14, 2, 5), bool], Tensor[(140), int16], Tensor[(16, 3, 7), float32], Tensor[(480, 6), float64], Tensor[(28), int16]) */;
    %1152 = @func_2380() /* ty=Tensor[(16, 15, 12), bool] */;
    %1153 = cast(%1152, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
    %1154 = cast(%var_8230, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1155 = reshape(%1153, newshape=[96, 30]) /* ty=Tensor[(96, 30), float64] */;
    %1156 = reshape(%1154, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %1157 = @func_4828(%1155, %1156) /* ty=(Tensor[(64), float32], Tensor[(16, 3, 7), float32], Tensor[(96, 30), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
    %1158 = %1140.0;
    %1159 = %1141.2;
    %1160 = %1146.0;
    %1161 = %1151.2;
    %1162 = %1157.2;
    (%1152, %1158, %1159, %1160, meta[relay.Constant][57] /* ty=Tensor[(28), int16] */, %var_8230, %1161, meta[relay.Constant][58] /* ty=Tensor[(1716), float32] */, %1162)
  };
  %1163(%var_8254) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(504), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(140), int16], Tensor[(1716), float32], Tensor[(96, 30), float64]) */
}

def @func_4291() -> (Tensor[(16, 3, 7), float32],) {
  @func_4289() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_6823(%var_6821: Tensor[(140), int16], %var_6822: Tensor[(140), int16]) -> (Tensor[(140), uint16], Tensor[(2880), float32], Tensor[(16, 3, 7), float32], Tensor[(28), int16]) {
  @func_6819(%var_6821, %var_6822) /* ty=(Tensor[(140), uint16], Tensor[(2880), float32], Tensor[(16, 3, 7), float32], Tensor[(28), int16]) */
}

def @func_2717() -> (Tensor[(9, 2, 14), float64], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(16, 3, 7), float32]) {
  %1164 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %1165 = cast(meta[relay.Constant][59] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1166 = reshape(%1165, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %1167 = @func_1079(%1166) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %1168 = @func_2102() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64]) */;
  %1169 = %1164.1;
  %1170 = %1167.1;
  %1171 = %1168.0;
  (%1169, %1170, meta[relay.Constant][59] /* ty=Tensor[(2880), float64] */, %1171)
}

def @func_5305() -> (Tensor[(16, 3, 7), float32],) {
  %1172 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1172,)
}

def @func_1707(%var_1704: Tensor[(2, 1440), float64], %var_1705: Tensor[(1, 28), int16], %var_1706: Tensor[(1, 360), float64]) -> (Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) {
  %1204 = fn (%var_1630: Tensor[(2, 1440), float64], %var_1631: Tensor[(1, 28), int16], %var_1632: Tensor[(1, 360), float64]) -> (Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) {
    %1173 = cast(%var_1630, dtype="float64") /* ty=Tensor[(2, 1440), float64] */;
    %1174 = cast(%var_1631, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
    %1175 = cast(%var_1632, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
    %1176 = reshape(%1173, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %1177 = reshape(%1174, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1178 = reshape(%1175, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %1179 = @func_1608(%1176, %1177, %1178) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
    %1180 = %1179.4;
    %1181 = cast(%1180, dtype="float64") /* ty=Tensor[(252), float64] */;
    %1182 = reshape(%1181, newshape=[9, 2, 14]) /* ty=Tensor[(9, 2, 14), float64] */;
    %1183 = @func_710(%1182) /* ty=(Tensor[(9, 2, 14), float64],) */;
    %1184 = cast(%var_1631, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
    %1185 = cast(%var_1631, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
    %1186 = reshape(%1184, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
    %1187 = reshape(%1185, newshape=[2, 7, 2]) /* ty=Tensor[(2, 7, 2), int16] */;
    %1188 = @func_1386(%1186, %1187) /* ty=(Tensor[(2, 7, 2), int16],) */;
    %1189 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1190 = %1189.0;
    %1191 = cast(%1190, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
    %1192 = log(%1191) /* ty=Tensor[(16, 3, 7), float32] */;
    %1193 = cast(%1190, dtype="int8") /* ty=Tensor[(16, 3, 7), int8] */;
    %1194 = shape_of(%1192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1195 = cast(%1192, dtype="int8") /* ty=Tensor[(16, 3, 7), int8] */;
    %1196 = dyn.reshape(%1193, %1194, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1197 = cast(%var_1632, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
    %1198 = reshape(%1197, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
    %1199 = @func_782(%1198) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
    %1200 = %1183.0;
    %1201 = %1188.0;
    %1202 = bitwise_and(%1195, %1196) /* ty=Tensor[(16, 3, 7), int8] */;
    %1203 = %1199.1;
    (%1180, %var_1630, %var_1631, %var_1632, %1200, %1201, %1202, %1203)
  };
  %1204(%var_1704, %var_1705, %var_1706) /* ty=(Tensor[(252), float64], Tensor[(2, 1440), float64], Tensor[(1, 28), int16], Tensor[(1, 360), float64], Tensor[(9, 2, 14), float64], Tensor[(2, 7, 2), int16], Tensor[(16, 3, 7), int8], Tensor[(15, 8, 3), float64]) */
}

def @func_12399() -> Tensor[(16, 3, 7), float32] {
  %1205 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1205.0
}

def @func_11654(%var_11652: Tensor[(16, 11, 4), uint64], %var_11653: Tensor[(16, 11, 4), uint64]) -> (Tensor[(16, 11, 4), uint64],) {
  @func_11650(%var_11652, %var_11653) /* ty=(Tensor[(16, 11, 4), uint64],) */
}

def @func_10166() -> Tensor[(16, 3, 7), float32] {
  @func_10164() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_11862() -> Tensor[(16, 3, 7), float32] {
  %1206 = @func_10130() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
  %1206.0
}

def @func_3133(%var_3131: Tensor[(640), uint64]) -> (Tensor[(28), int16], Tensor[(504), float64], Tensor[(640), uint64]) {
  %1207 = @func_2970() /* ty=(Tensor[(28), int16],) */;
  %1208 = cast(%var_3131, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1209 = reshape(%1208, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint64] */;
  %1210 = @func_529(%1209) /* ty=(Tensor[(8, 8, 10), uint64], Tensor[(7, 9, 8), int16], Tensor[(504), float64]) */;
  %1211 = %1207.0;
  %1212 = %1210.2;
  (%1211, %1212, %var_3131)
}

def @func_3136(%var_3134: Tensor[(640), uint64]) -> (Tensor[(28), int16], Tensor[(504), float64], Tensor[(640), uint64]) {
  @func_3133(%var_3134) /* ty=(Tensor[(28), int16], Tensor[(504), float64], Tensor[(640), uint64]) */
}

def @func_1389(%var_1387: Tensor[(2, 7, 2), int16], %var_1388: Tensor[(2, 7, 2), int16]) -> (Tensor[(2, 7, 2), int16],) {
  %1218 = fn (%var_1367: Tensor[(2, 7, 2), int16], %var_1368: Tensor[(2, 7, 2), int16]) -> (Tensor[(2, 7, 2), int16],) {
    %1213 = cast(%var_1368, dtype="int16") /* ty=Tensor[(2, 7, 2), int16] */;
    %1214 = shape_of(%var_1367, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1215 = cast(%var_1367, dtype="int16") /* ty=Tensor[(2, 7, 2), int16] */;
    %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1217 = logical_xor(%1215, %1216) /* ty=Tensor[(2, 7, 2), int16] */;
    (%1217,)
  };
  %1218(%var_1387, %var_1388) /* ty=(Tensor[(2, 7, 2), int16],) */
}

def @func_10585() -> Tensor[(16, 3, 7), float32] {
  @func_10583() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12302(%var_12300: Tensor[(7, 88), float32]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(4, 11, 14), float32], Tensor[(7, 88), float32], Tensor[(28), float64], Tensor[(2880), float64]) {
  @func_12299(%var_12300) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(4, 11, 14), float32], Tensor[(7, 88), float32], Tensor[(28), float64], Tensor[(2880), float64]) */
}

def @func_3272() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) {
  @func_3270() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */
}

def @func_10490(%var_10489: Tensor[(9, 5, 1), float32]) -> Tensor[(9, 5, 1), float32] {
  %1220 = fn (%var_10480: Tensor[(9, 5, 1), float32]) -> Tensor[(9, 5, 1), float32] {
    %1219 = cast(%var_10480, dtype="float32") /* ty=Tensor[(9, 5, 1), float32] */;
    log(%1219) /* ty=Tensor[(9, 5, 1), float32] */
  };
  %1220(%var_10489) /* ty=Tensor[(9, 5, 1), float32] */
}

def @func_6447() -> Tensor[(16, 3, 7), float32] {
  %1221 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1221.0
}

def @func_12331(%var_12330: Tensor[(4, 8, 9), float64]) -> Tensor[(4, 8, 9), float64] {
  %1223 = fn (%var_12326: Tensor[(4, 8, 9), float64]) -> Tensor[(4, 8, 9), float64] {
    %1222 = cast(%var_12326, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
    log(%1222) /* ty=Tensor[(4, 8, 9), float64] */
  };
  %1223(%var_12330) /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_9524() -> Tensor[(16, 3, 7), float32] {
  @func_9522() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_7684() -> (Tensor[(28), int16], Tensor[(28), int16]) {
  %1224 = @func_5199() /* ty=(Tensor[(28), int16],) */;
  %1225 = %1224.0;
  %1226 = @func_4652() /* ty=Tensor[(28), int16] */;
  (%1225, %1226)
}

def @func_6623() -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
  %1235 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) {
    %1227 = @func_3270() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %1228 = @func_4575() /* ty=(Tensor[(28), int16],) */;
    %1229 = @func_5030() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %1230 = @func_4013() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */;
    %1231 = %1227.0;
    %1232 = %1228.0;
    %1233 = %1229.1;
    %1234 = %1230.1;
    (%1231, %1232, %1233, %1234)
  };
  %1235() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(640), uint64]) */
}

def @func_8710(%var_8703: Tensor[(5, 15, 3), float64]) -> (Tensor[(5, 15, 3), bool],) {
  %1236 = cast(meta[relay.Constant][60] /* ty=Tensor[(5, 15, 3), float64] */, dtype="bool") /* ty=Tensor[(5, 15, 3), bool] */;
  %1237 = shape_of(%var_8703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1238 = cast(%var_8703, dtype="bool") /* ty=Tensor[(5, 15, 3), bool] */;
  %1239 = dyn.reshape(%1236, %1237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1240 = greater(%1238, %1239) /* ty=Tensor[(5, 15, 3), bool] */;
  (%1240,)
}

def @func_3573() -> Tensor[(16, 3, 7), float32] {
  @func_3571() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_6683(%var_6682: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(640), uint64]) {
  %1257 = fn (%var_6679: Tensor[(640), uint64]) -> (Tensor[(16, 3, 7), float32], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(640), uint64]) {
    %1241 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
    %1242 = cast(meta[relay.Constant][61] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1243 = reshape(%1242, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1244 = @func_3624(%1243) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */;
    %1245 = @func_5605() /* ty=(Tensor[(28), int16], Tensor[(16, 15, 12), bool]) */;
    %1246 = %1245.1;
    %1247 = cast(%1246, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
    %1248 = cast(meta[relay.Constant][61] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1249 = cast(%var_6679, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %1250 = reshape(%1247, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %1251 = reshape(%1248, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1252 = reshape(%1249, newshape=[640]) /* ty=Tensor[(640), uint64] */;
    %1253 = @func_2148(%1250, %1251, %1252) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(36, 10), bool], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(640), uint64], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float32]) */;
    %1254 = %1241.0;
    %1255 = %1244.3;
    %1256 = %1253.3;
    (%1254, %1255, meta[relay.Constant][61] /* ty=Tensor[(28), int16] */, %1246, %1256, %var_6679)
  };
  %1257(%var_6682) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), bool], Tensor[(28), int16], Tensor[(640), uint64]) */
}

def @func_13251() -> (Tensor[(16, 3, 7), float32],) {
  %1259 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %1258 = @func_13031() /* ty=Tensor[(16, 3, 7), float32] */;
    (%1258,)
  };
  %1259() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_7936() -> (Tensor[(16, 3, 7), float64], Tensor[(64), float64]) {
  @func_7934() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(64), float64]) */
}

def @func_11455() -> (Tensor[(16, 3, 7), float32],) {
  @func_11453() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_9593(%var_9588: Tensor[(4, 11, 14), float32], %var_9589: Tensor[(4, 11, 14), float32]) -> Tensor[(4, 11, 14), float32] {
  %1260 = cast(%var_9589, dtype="float32") /* ty=Tensor[(4, 11, 14), float32] */;
  %1261 = shape_of(%var_9588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1262 = cast(%var_9588, dtype="float32") /* ty=Tensor[(4, 11, 14), float32] */;
  %1263 = dyn.reshape(%1260, %1261, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%1262, %1263) /* ty=Tensor[(4, 11, 14), float32] */
}

def @func_8375() -> (Tensor[(16, 3, 7), float32],) {
  %1264 = @func_4094() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1264,)
}

def @func_785(%var_783: Tensor[(15, 8, 3), float64]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) {
  @func_782(%var_783) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */
}

def @func_8563() -> Tensor[(16, 3, 7), float32] {
  %1265 = @func_3247() /* ty=(Tensor[(9, 2, 14), float64], Tensor[(8, 8, 10), uint64], Tensor[(640), uint64], Tensor[(16, 3, 7), float32]) */;
  %1265.3
}

def @func_13520(%var_13506: Tensor[(8, 14, 4), bool], %var_13507: Tensor[(8, 14, 4), bool]) -> (Tensor[(8, 14, 4), bool], Tensor[(16, 3, 7), float32]) {
  %1266 = cast(%var_13507, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %1267 = shape_of(%var_13506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1268 = cast(%var_13506, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %1269 = dyn.reshape(%1266, %1267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1270 = @func_6489() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1271 = logical_and(%1268, %1269) /* ty=Tensor[(8, 14, 4), bool] */;
  %1272 = %1270.0;
  (%1271, %1272)
}

def @func_3626(%var_3625: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) {
  %1282 = fn (%var_3606: Tensor[(28), int16]) -> (Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) {
    %1273 = cast(%var_3606, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1274 = cast(meta[relay.Constant][62] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1275 = cast(meta[relay.Constant][63] /* ty=Tensor[(480, 6), float64] */, dtype="float64") /* ty=Tensor[(480, 6), float64] */;
    %1276 = reshape(%1273, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1277 = reshape(%1274, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %1278 = reshape(%1275, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
    %1279 = @func_1925(%1276, %1277, %1278) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
    %1280 = @func_3596() /* ty=Tensor[(16, 3, 7), float32] */;
    %1281 = %1279.9;
    (%1280, %1281, %var_3606, meta[relay.Constant][62] /* ty=Tensor[(360), float64] */, meta[relay.Constant][63] /* ty=Tensor[(480, 6), float64] */)
  };
  %1282(%var_3625) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(480, 6), float64]) */
}

def @func_14003() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(1, 360), float64]) {
  %1283 = @func_5757() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1284 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 360), float64] */, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %1285 = reshape(%1284, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1286 = @func_9752(%1285) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2, 1440), float64], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64]) */;
  %1287 = @func_3950() /* ty=Tensor[(16, 3, 7), float32] */;
  %1288 = %1283.0;
  %1289 = %1286.0;
  (%1287, %1288, %1289, meta[relay.Constant][64] /* ty=Tensor[(1, 360), float64] */)
}

def @func_4748() -> (Tensor[(16, 3, 7), float32],) {
  %1291 = fn () -> (Tensor[(16, 3, 7), float32],) {
    %1290 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
    (%1290,)
  };
  %1291() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_9604() -> (Tensor[(16, 3, 7), float32],) {
  %1292 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1293 = %1292.0;
  (%1293,)
}

def @func_10535() -> (Tensor[(16, 3, 7), float64],) {
  @func_10533() /* ty=(Tensor[(16, 3, 7), float64],) */
}

def @func_7934() -> (Tensor[(16, 3, 7), float64], Tensor[(64), float64]) {
  %1294 = @func_6362() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) */;
  %1295 = @func_4240() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(64), float64]) */;
  %1296 = %1294.1;
  %1297 = %1295.2;
  (%1296, %1297)
}

def @func_2618() -> (Tensor[(16, 3, 7), float32],) {
  %1298 = @func_1340() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1299 = %1298.0;
  (%1299,)
}

def @func_2736() -> (Tensor[(16, 3, 7), float32],) {
  %1300 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  (%1300,)
}

def @func_8007() -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool]) {
  %1305 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool]) {
    %1301 = @func_4608() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
    %1302 = @func_6087() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool], Tensor[(28), int16]) */;
    %1303 = %1301.0;
    %1304 = %1302.1;
    (%1303, %1304)
  };
  %1305() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), bool]) */
}

def @func_5095() -> (Tensor[(28), int16], Tensor[(2880), float64]) {
  %1309 = fn () -> (Tensor[(28), int16], Tensor[(2880), float64]) {
    %1306 = @func_4575() /* ty=(Tensor[(28), int16],) */;
    %1307 = %1306.0;
    %1308 = @func_4476() /* ty=Tensor[(2880), float64] */;
    (%1307, %1308)
  };
  %1309() /* ty=(Tensor[(28), int16], Tensor[(2880), float64]) */
}

def @func_5472() -> (Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float64], Tensor[(9, 2, 14), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), int16], Tensor[(16, 3, 7), float64], Tensor[(2880), float64], Tensor[(504), float64]) {
  @func_5470() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), float64], Tensor[(9, 2, 14), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 3, 7), int16], Tensor[(16, 3, 7), float64], Tensor[(2880), float64], Tensor[(504), float64]) */
}

def @func_6123() -> Tensor[(16, 3, 7), float32] {
  %1310 = @func_3270() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1310.1
}

def @func_10390(%var_10361: Tensor[(2, 180), float64], %var_10362: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), int8], Tensor[(28), int16], Tensor[(2, 180), float64], Tensor[(2880), float64]) {
  %1311 = @func_7934() /* ty=(Tensor[(16, 3, 7), float64], Tensor[(64), float64]) */;
  %1312 = cast(meta[relay.Constant][65] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1313 = cast(%var_10361, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %1314 = cast(%var_10362, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1315 = reshape(%1312, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1316 = reshape(%1313, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1317 = reshape(%1314, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %1318 = @func_1925(%1315, %1316, %1317) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) */;
  %1319 = %1311.0;
  %1320 = @func_3571() /* ty=Tensor[(16, 3, 7), float32] */;
  %1321 = %1318.5;
  (%1319, %1320, %1321, meta[relay.Constant][65] /* ty=Tensor[(28), int16] */, %var_10361, %var_10362)
}

def @func_8308() -> Tensor[(16, 3, 7), float32] {
  @func_8306() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_14367() -> (Tensor[(16, 3, 7), float32],) {
  @func_14365() /* ty=(Tensor[(16, 3, 7), float32],) */
}

def @func_9522() -> Tensor[(16, 3, 7), float32] {
  %1322 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
  %1323 = %1322.0;
  %1324 = cast(%1323, dtype="float32") /* ty=Tensor[(16, 3, 7), float32] */;
  asin(%1324) /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_12606() -> (Tensor[(16, 3, 7), float32],) {
  %1325 = @func_3789() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float32]) */;
  %1326 = %1325.0;
  (%1326,)
}

def @func_12931() -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
  %1331 = fn () -> (Tensor[(28), int16], Tensor[(16, 3, 7), float32]) {
    %1327 = @func_10014() /* ty=(Tensor[(28), int16],) */;
    %1328 = @func_11453() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1329 = %1327.0;
    %1330 = %1328.0;
    (%1329, %1330)
  };
  %1331() /* ty=(Tensor[(28), int16], Tensor[(16, 3, 7), float32]) */
}

def @func_14481() -> Tensor[(16, 3, 7), float32] {
  %1332 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
  %1332.0
}

def @func_12019() -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(36, 10), float64], Tensor[(2, 1440), float64]) {
  %1347 = fn () -> (Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(36, 10), float64], Tensor[(2, 1440), float64]) {
    %1333 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1334 = @func_5305() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1335 = @func_7294() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32]) */;
    %1336 = @func_8375() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1337 = cast(meta[relay.Constant][66] /* ty=Tensor[(36, 10), float64] */, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
    %1338 = cast(meta[relay.Constant][67] /* ty=Tensor[(2, 1440), float64] */, dtype="float64") /* ty=Tensor[(2, 1440), float64] */;
    %1339 = reshape(%1337, newshape=[2, 180]) /* ty=Tensor[(2, 180), float64] */;
    %1340 = reshape(%1338, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
    %1341 = @func_10390(%1339, %1340) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), int8], Tensor[(28), int16], Tensor[(2, 180), float64], Tensor[(2880), float64]) */;
    %1342 = %1333.0;
    %1343 = %1334.0;
    %1344 = %1335.1;
    %1345 = %1336.0;
    %1346 = %1341.1;
    (%1342, %1343, %1344, %1345, %1346, meta[relay.Constant][66] /* ty=Tensor[(36, 10), float64] */, meta[relay.Constant][67] /* ty=Tensor[(2, 1440), float64] */)
  };
  %1347() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), float32], Tensor[(36, 10), float64], Tensor[(2, 1440), float64]) */
}

def @func_14104() -> Tensor[(16, 3, 7), float32] {
  @func_14102() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_1925(%var_1802: Tensor[(28), int16], %var_1803: Tensor[(360), float64], %var_1806: Tensor[(16, 15, 12), float64]) -> (Tensor[(16, 3, 7), float32], Tensor[(2880), float64], Tensor[(28), int16], Tensor[(360), float64], Tensor[(28), int16], Tensor[(16, 15, 12), int8], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), bool], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 15, 12), float32], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64]) {
  %1348 = cast(%var_1806, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %1349 = cast(%var_1802, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1350 = cast(%var_1803, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1351 = reshape(%1348, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %1352 = reshape(%1349, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1353 = reshape(%1350, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1354 = @func_1608(%1351, %1352, %1353) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
  %1355 = cast(meta[relay.Constant][68] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1356 = cast(%var_1802, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1357 = cast(%var_1803, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1358 = reshape(%1355, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %1359 = reshape(%1356, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1360 = reshape(%1357, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1361 = @func_1608(%1358, %1359, %1360) /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), float64], Tensor[(2880), float64], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 3, 7), float32], Tensor[(2, 7, 2), int16], Tensor[(28), int16], Tensor[(16, 3, 7), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64]) */;
  %1362 = %1361.1;
  %1363 = cast(%var_1806, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %1364 = shape_of(%1362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1365 = cast(%1362, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %1366 = dyn.reshape(%1363, %1364, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1367 = bitwise_or(%1365, %1366) /* ty=Tensor[(16, 15, 12), int64] */;
  %1368 = cast(%1367, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %1369 = exp(%1368) /* ty=Tensor[(16, 15, 12), float32] */;
  %1370 = cast(%1369, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %1371 = shape_of(%var_1806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1372 = cast(%var_1806, dtype="int64") /* ty=Tensor[(16, 15, 12), int64] */;
  %1373 = dyn.reshape(%1370, %1371, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1374 = bitwise_xor(%1372, %1373) /* ty=Tensor[(16, 15, 12), int64] */;
  %1375 = cast(%1367, dtype="int8") /* ty=Tensor[(16, 15, 12), int8] */;
  %1376 = shape_of(%1374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1377 = cast(%1374, dtype="int8") /* ty=Tensor[(16, 15, 12), int8] */;
  %1378 = dyn.reshape(%1375, %1376, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1379 = cast(%1367, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %1380 = reshape(%1379, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %1381 = @func_1079(%1380) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %1382 = cast(%1374, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %1383 = reshape(%1382, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %1384 = @func_1079(%1383) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(16, 15, 12), float64]) */;
  %1385 = cast(%1369, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %1386 = cast(meta[relay.Constant][69] /* ty=Tensor[(16, 15, 12), int64] */, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %1387 = shape_of(%1374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1388 = cast(%1374, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %1389 = dyn.reshape(%1386, %1387, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1390 = cast(%var_1803, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1391 = reshape(%1390, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %1392 = @func_782(%1391) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %1393 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %1394 = %1354.7;
  %1395 = logical_xor(%1377, %1378) /* ty=Tensor[(16, 15, 12), int8] */;
  %1396 = @func_1307() /* ty=Tensor[(16, 3, 7), float32] */;
  %1397 = %1381.0;
  %1398 = @func_1454() /* ty=Tensor[(16, 3, 7), float32] */;
  %1399 = %1384.1;
  %1400 = acosh(%1385) /* ty=Tensor[(16, 15, 12), float64] */;
  %1401 = multiply(%1388, %1389) /* ty=Tensor[(16, 15, 12), float32] */;
  %1402 = @func_1212() /* ty=Tensor[(16, 3, 7), float32] */;
  %1403 = %1392.1;
  (%1393, meta[relay.Constant][68] /* ty=Tensor[(2880), float64] */, %var_1802, %var_1803, %1394, %1395, %1396, %1397, %1398, %1399, %1400, %1401, %1402, %1403)
}

def @func_6489() -> (Tensor[(16, 3, 7), float32],) {
  %1404 = @func_3357() /* ty=(Tensor[(16, 3, 7), float32], Tensor[(16, 3, 7), bool]) */;
  %1405 = %1404.0;
  (%1405,)
}

def @func_6362() -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float64], Tensor[(252), float64]) {
  %1406 = @func_3486() /* ty=(Tensor[(16, 3, 7), float64],) */;
  %1407 = cast(meta[relay.Constant][70] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1408 = reshape(%1407, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %1409 = @func_5884(%1408) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(2880), float64], Tensor[(28), float32], Tensor[(15, 8, 3), float64], Tensor[(360), float64], Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(9, 2, 14), float64], Tensor[(252), float64], Tensor[(16, 15, 12), float64], Tensor[(16, 3, 7), float32]) */;
  %1410 = %1406.0;
  %1411 = %1409.5;
  (%1410, %1411, meta[relay.Constant][70] /* ty=Tensor[(252), float64] */)
}

def @func_10394(%var_10392: Tensor[(2, 180), float64], %var_10393: Tensor[(2880), float64]) -> (Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), int8], Tensor[(28), int16], Tensor[(2, 180), float64], Tensor[(2880), float64]) {
  @func_10390(%var_10392, %var_10393) /* ty=(Tensor[(16, 3, 7), float64], Tensor[(16, 3, 7), float32], Tensor[(16, 15, 12), int8], Tensor[(28), int16], Tensor[(2, 180), float64], Tensor[(2880), float64]) */
}

def @func_4095() -> Tensor[(16, 3, 7), float32] {
  %1413 = fn () -> Tensor[(16, 3, 7), float32] {
    %1412 = @func_2203() /* ty=(Tensor[(16, 3, 7), float32],) */;
    %1412.0
  };
  %1413() /* ty=Tensor[(16, 3, 7), float32] */
}

def @func_4654() -> Tensor[(28), int16] {
  @func_4652() /* ty=Tensor[(28), int16] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen543/build/output.py:4480: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen543/build/output.py", line 4485, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1008) tvmgen_default_fused_reshape_floor_divide_kernel0(float* __restrict__ T_floor_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_floor_divide[(((int)threadIdx.x))] = floorf((placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_226 = relay.var("var_226", dtype = "float64", shape = (6, 12, 9))#candidate|226|(6, 12, 9)|var|float64
const_227 = relay.const([[[-5.716958,-9.788050,-2.145507,-7.736576,-5.369457,-1.831710,1.766916,-6.484987,-5.395400],[3.841037,3.505261,0.847862,-8.415984,-5.511756,-2.360481,2.784967,-3.068612,-6.905532],[-7.902165,6.093315,8.264110,-2.052147,-7.214825,-4.297679,-1.952951,7.610411,0.175293],[2.721303,-3.006364,0.992837,7.196174,4.314628,-7.945573,-8.662880,8.683179,2.848453],[6.595040,3.877218,-0.174982,-6.297874,6.423678,-7.218692,4.097409,-3.441681,-7.896820],[-2.743508,-3.610537,9.443471,5.352848,8.993892,0.151912,8.338952,-8.526592,-9.949857],[2.105611,4.031027,2.174092,3.203409,-6.950716,-2.699678,7.161336,-2.741269,-0.620062],[4.889977,-0.985883,-0.776337,8.198112,-6.648279,-7.848313,1.878093,-2.465026,-0.971894],[-5.974796,-9.476901,-8.909418,6.292390,2.068525,6.697056,2.908697,2.085621,-2.724812],[-3.623843,0.641181,6.318814,8.614744,2.963607,-6.294465,7.214323,-2.346942,9.259708],[-1.451887,-8.678258,-5.687094,-4.038650,-8.328930,8.718904,9.851975,6.461897,8.955741],[7.538011,4.921710,-9.680928,-8.267085,-1.193417,5.054053,5.004149,6.687810,2.357135]],[[-9.703155,0.316017,0.879080,1.363253,-1.607148,9.032310,5.108222,5.078773,-1.287430],[-1.463930,1.155782,7.183626,-8.063557,2.013518,-8.998667,-9.155120,-8.176075,-2.495134],[-9.316602,-1.526904,-4.464375,-0.242129,-4.295263,-0.479892,8.163483,-7.941614,7.939927],[2.720756,-4.942874,3.567272,2.214029,3.361263,-1.257389,0.405004,1.283418,1.231422],[-6.855523,-7.857290,8.791005,7.412736,0.559066,-1.406818,6.353377,3.997826,-6.707504],[-9.512480,-4.808067,7.606989,1.433826,7.523846,-8.513636,-5.535141,0.677642,-3.098978],[3.649119,4.400006,1.308279,-4.253348,-6.430396,-5.355515,-6.854641,-4.732701,4.320887],[3.168797,6.667817,2.605736,-3.359515,-8.482370,-6.353731,-1.083597,-4.303680,6.454185],[7.128671,-2.635822,9.377970,-9.614309,4.094024,-5.579597,-7.626828,-0.995390,-4.137453],[-5.391127,9.469277,-6.332663,4.448369,-6.503980,3.106814,8.012389,8.470492,-0.044792],[-2.868061,-2.509804,0.555366,-8.338515,4.352723,1.069627,0.805992,-8.383104,-9.699321],[-7.995410,6.100249,0.247421,-7.085718,-7.978856,-4.456519,-1.631926,0.851454,3.453557]],[[4.683569,7.272076,-0.494111,6.304827,-0.132272,-1.390516,-4.794098,-2.634048,7.729314],[-2.358830,-5.167770,9.073485,0.136699,5.553163,5.351555,-0.871862,9.230977,4.360156],[-9.542669,7.386225,-8.835235,-7.582932,-3.442445,-7.346304,-0.218258,-3.753209,2.442181],[-0.015752,7.572904,-8.458290,-9.068463,-9.459430,-3.915013,3.077527,-7.041055,2.145346],[-0.965021,7.009498,-7.808548,0.977640,0.936489,5.859952,1.348682,2.334821,6.406730],[1.183460,-0.609526,0.510050,1.747247,-5.640013,6.375396,-9.173602,6.695170,8.638439],[-4.951844,-6.013673,-5.361253,-8.671598,0.142042,-4.783824,0.497776,-8.500558,1.194453],[-2.789846,-8.360641,-9.771265,-8.604602,-7.518511,4.057827,2.857605,-4.824897,8.110498],[7.511520,-8.937917,3.104057,-5.131555,3.594541,1.819890,-4.361951,2.899303,-5.745536],[6.813451,2.120878,-4.927182,6.836852,-5.522607,6.410200,-4.323934,6.568077,-5.228751],[3.999945,-7.403463,6.923489,-2.815849,6.934904,5.961223,4.192183,3.217038,-4.925149],[7.400263,8.630211,2.158316,1.845128,-1.771483,-2.314239,-3.353885,6.958322,-1.003951]],[[-8.043516,-2.312611,7.738535,7.382040,-1.395018,3.815219,-9.511663,-3.448355,-6.590599],[-3.180058,5.133762,-2.177978,2.830022,-8.546275,0.918174,-0.337262,2.947368,-5.227145],[-5.568781,8.508282,-6.979516,2.793600,-5.317396,-3.089283,2.244371,-1.933517,9.509839],[-1.705891,0.204678,3.324121,-3.155485,-0.234329,1.177161,-9.233123,-5.940261,-9.308448],[-7.512649,2.908853,-5.886153,4.479846,1.370807,-1.322401,-3.977938,2.198829,9.560518],[4.512606,-3.550782,3.491738,-1.631415,4.850994,-3.744938,5.544172,3.959177,2.636572],[-1.284246,3.585988,-9.779667,8.941620,3.661078,1.130977,4.233606,-5.566702,-9.010613],[7.357744,8.463984,-2.977250,9.324481,-5.427973,-1.322229,-9.500039,-1.447313,-9.002577],[3.421612,7.983086,3.351963,-4.234948,1.979037,-5.432172,-3.335864,-3.769743,9.483716],[5.962296,-2.699802,8.189515,5.948680,-1.169332,-8.100280,6.016684,-5.299991,-1.836384],[4.403600,-1.030184,4.039363,-2.673615,1.644953,6.907445,3.454601,3.863665,-7.087969],[0.368766,-5.310182,9.805884,-3.355353,-0.116910,5.431813,-1.520649,2.080051,-9.952227]],[[-8.377140,9.919750,0.662830,-0.878033,8.100173,7.187924,-5.682489,-0.906189,-0.323273],[6.170783,-3.348834,1.022957,-7.323788,-9.390219,-5.072708,-3.902311,2.012180,-2.972316],[-6.736189,-4.391481,-8.527686,4.069871,-8.471957,5.519694,0.135675,3.679470,2.957579],[-2.485381,6.498075,0.407197,4.699311,-7.053411,6.966703,3.763820,3.581032,-5.547459],[8.086483,-4.209768,1.684720,-9.309646,5.431710,-2.653635,-8.101720,-6.330888,1.548660],[-7.239763,-6.256768,1.840146,9.573751,7.039648,-2.363720,1.695867,-1.858232,7.137243],[2.275142,-5.011814,-3.113015,5.407037,8.236882,-4.427003,-3.722221,0.205729,3.610217],[-6.169719,-1.353050,2.959021,4.643410,-5.093266,-8.651381,1.941020,-1.858466,-4.133716],[-5.379758,3.962985,-5.384794,-6.218406,-9.137316,0.512915,0.526631,1.157839,4.695719],[-7.425332,5.817501,-9.153701,6.818345,5.057983,-2.090263,-0.462241,-3.255734,-6.527407],[8.867463,3.792638,5.747939,9.900281,-7.921989,-0.505978,7.097575,1.034910,3.097906],[-4.985663,4.580730,-4.099920,-6.898376,9.056959,9.734611,3.894379,-7.652072,-0.888064]],[[3.207777,-1.247371,-4.860109,2.502325,-9.404751,-8.162146,4.727218,-9.676134,6.736031],[-3.792948,3.692364,-7.411466,6.083688,2.099470,-1.777294,0.069978,4.359885,5.795003],[-3.762763,3.736803,3.072028,3.456478,-9.745324,-2.016641,-1.492382,4.188544,-9.687211],[-9.458441,5.303849,4.302617,-1.842317,3.553057,9.070708,9.452382,-7.418218,-7.067945],[7.633809,-7.893837,1.691153,3.865839,8.206586,3.827359,-4.666972,0.537822,8.813884],[4.527408,-0.127567,7.523026,9.602409,5.981199,3.098667,-3.560279,4.458153,-0.193844],[2.947488,7.954072,9.822314,-2.259294,-7.522599,7.596436,-8.840498,5.718784,-7.582069],[-6.527641,-6.432436,4.975215,0.875610,-2.470006,-4.258026,0.563286,-0.489088,-8.983368],[8.110381,6.442357,-7.252911,4.591557,9.060754,3.515498,3.993393,9.788620,-7.014132],[8.590816,-5.507836,-1.718021,8.082929,-4.324172,-4.719796,2.988790,9.538946,-3.793903],[6.979982,8.194641,-6.716784,-8.568271,-0.767703,4.827576,-2.062357,5.050362,-7.075124],[3.378435,8.520827,5.375134,-0.537681,-2.900433,5.627698,-3.634677,-0.397168,2.388170]]], dtype = "float64")#candidate|227|(6, 12, 9)|const|float64
bop_228 = relay.floor_mod(var_226.astype('float64'), relay.reshape(const_227.astype('float64'), relay.shape_of(var_226))) # shape=(6, 12, 9)
bop_263 = relay.less_equal(const_227.astype('bool'), relay.reshape(var_226.astype('bool'), relay.shape_of(const_227))) # shape=(6, 12, 9)
uop_272 = relay.log(var_226.astype('float32')) # shape=(6, 12, 9)
bop_278 = relay.bitwise_xor(const_227.astype('int16'), relay.reshape(bop_228.astype('int16'), relay.shape_of(const_227))) # shape=(6, 12, 9)
var_286 = relay.var("var_286", dtype = "int16", shape = (6, 12, 9))#candidate|286|(6, 12, 9)|var|int16
bop_287 = relay.mod(bop_278.astype('float32'), relay.reshape(var_286.astype('float32'), relay.shape_of(bop_278))) # shape=(6, 12, 9)
var_292 = relay.var("var_292", dtype = "float32", shape = (6, 12, 9))#candidate|292|(6, 12, 9)|var|float32
bop_293 = relay.logical_and(uop_272.astype('bool'), relay.reshape(var_292.astype('bool'), relay.shape_of(uop_272))) # shape=(6, 12, 9)
output = relay.Tuple([bop_263,bop_287,bop_293,])
output2 = relay.Tuple([bop_263,bop_287,bop_293,])
func_306 = relay.Function([var_226,var_286,var_292,], output)
mod['func_306'] = func_306
mod = relay.transform.InferType()(mod)
var_307 = relay.var("var_307", dtype = "float64", shape = (6, 12, 9))#candidate|307|(6, 12, 9)|var|float64
var_308 = relay.var("var_308", dtype = "int16", shape = (6, 12, 9))#candidate|308|(6, 12, 9)|var|int16
var_309 = relay.var("var_309", dtype = "float32", shape = (6, 12, 9))#candidate|309|(6, 12, 9)|var|float32
output = func_306(var_307,var_308,var_309,)
func_310 = relay.Function([var_307,var_308,var_309,], output)
mutated_mod['func_310'] = func_310
mutated_mod = relay.transform.InferType()(mutated_mod)
const_504 = relay.const([[[3,-8,-10,-5,4,-5,6,-1,8],[10,2,-7,-2,-5,-8,-9,-2,-3],[-1,-1,6,2,-5,-2,-7,-2,2],[1,-10,5,1,-8,10,7,10,10],[3,-9,-5,3,3,10,-9,-9,9],[6,9,3,5,-3,-10,-10,-5,3],[-10,-1,-6,-8,3,-1,-3,-2,-2],[2,-9,-2,-9,3,-3,-5,5,-8],[8,5,5,-6,4,1,-5,3,1],[2,-10,-6,-1,10,9,-6,-5,-2],[6,1,8,-6,-6,-8,4,6,4],[9,-7,1,8,-4,-8,-5,4,6],[9,-6,1,-1,3,9,3,5,8],[5,5,10,8,2,3,-6,10,-9],[-6,-3,2,-8,-1,-5,9,8,-1]],[[-9,-6,-3,-9,-3,-2,7,5,-9],[-6,-1,8,-8,10,-2,4,2,-10],[-1,3,-7,8,-3,6,1,-8,8],[10,6,-2,1,-8,8,-7,9,6],[-4,-10,7,-10,-9,-3,-8,-3,-3],[1,-4,6,-10,-4,-2,5,-3,5],[-4,-10,-5,9,6,-6,-8,-2,7],[-6,-10,8,-9,7,9,-5,7,5],[10,5,-6,4,9,8,-5,-5,-5],[6,5,7,7,8,-7,8,-8,3],[4,-8,3,-1,8,-5,10,-6,-7],[10,3,10,2,7,-10,2,8,-9],[5,1,-9,-8,-8,-3,-7,8,10],[2,-7,1,-9,-3,4,8,-3,7],[-5,-10,-9,-7,5,-10,3,-8,1]],[[8,-4,-7,-5,10,-5,-2,1,-3],[-5,1,-4,-5,-3,9,-2,-3,10],[-5,-6,2,3,2,-6,-6,-3,-2],[-6,-8,-2,2,-8,10,-7,-2,3],[6,10,10,3,8,1,-5,-9,-3],[-1,-2,-9,6,9,-1,-4,8,3],[1,-2,-1,10,-7,10,9,6,-10],[-6,-3,8,9,10,-7,5,-10,10],[-9,9,1,-9,-1,-2,10,-1,4],[6,1,-3,9,-6,-7,2,9,4],[-1,8,8,4,9,2,3,1,5],[2,-3,5,-7,6,8,-3,4,8],[-5,-1,-8,-2,-2,6,-8,-3,7],[3,-5,-9,10,2,7,-6,-4,9],[-10,4,-5,-9,-7,5,2,-9,6]],[[2,3,-10,5,5,10,1,6,-2],[-4,-5,5,6,-6,6,4,-8,1],[-9,1,-6,-7,-1,-10,5,3,-4],[8,6,6,7,-10,-7,2,-7,-10],[-4,-10,2,-7,4,7,-8,10,2],[-6,6,-4,6,8,9,-8,5,-9],[8,3,5,3,-8,7,-9,-9,-6],[-7,-8,-8,1,1,6,2,-5,-9],[5,-4,-5,3,2,10,-4,2,1],[9,10,7,-10,-1,4,-5,-3,3],[10,3,-5,-9,9,-1,3,-10,9],[-8,-6,4,-2,8,8,3,-7,-9],[9,-1,1,-7,-1,-7,6,-9,-6],[-2,-2,4,-2,-5,5,-1,-3,-5],[6,9,10,-2,-3,1,-4,10,3]],[[-3,4,6,-3,6,-1,2,-2,7],[-9,2,-9,-3,-6,-8,-8,-6,10],[-2,8,3,-8,7,6,-5,4,-8],[8,8,6,-7,-7,-9,-6,4,-8],[3,1,-7,7,-3,9,6,3,-5],[9,5,4,7,-4,2,-9,1,7],[9,2,-5,-3,10,6,-7,5,3],[8,9,-2,-8,-8,-10,-9,-8,-9],[1,5,-10,-7,8,-2,3,-10,4],[3,-2,10,-7,1,7,-10,5,-2],[-8,3,4,6,5,-10,-9,-10,-6],[-5,9,-10,-9,9,-8,9,1,-4],[9,-10,8,-5,5,-2,-8,-5,4],[-5,6,4,-4,-3,-5,10,7,-8],[2,-3,-1,-7,3,-5,-7,-9,4]],[[-8,8,-3,-8,-9,-3,-3,-2,-1],[3,-1,-9,-5,-9,-1,10,1,-3],[-3,7,8,-8,-4,-7,-3,-4,7],[1,2,-6,10,4,-6,-8,-8,10],[7,-6,8,8,6,-4,-7,-6,-4],[2,10,7,-3,-4,10,-6,2,7],[-7,-1,-7,7,9,-3,-8,7,2],[-6,9,-7,-4,7,7,7,-1,9],[3,-3,1,-5,2,-9,-8,-9,-4],[7,9,5,-7,2,-1,5,-8,6],[4,-10,-3,-1,1,7,8,5,-5],[-5,-3,10,7,7,6,7,-3,6],[-6,-7,9,-4,8,-6,10,-7,8],[8,-5,-3,6,-10,-8,7,5,3],[-9,-3,-8,2,-8,-4,8,-4,-5]],[[-3,8,2,-2,-2,-4,-3,3,8],[4,-3,8,-1,-9,9,-1,-7,-8],[4,7,-8,-2,3,-8,-9,2,-5],[9,-9,8,-2,-2,9,-7,3,1],[-6,4,-8,-2,-5,1,7,3,-10],[-5,3,1,-1,-6,-4,-8,10,2],[4,-7,10,-6,-7,4,3,10,-7],[7,1,2,10,8,2,8,-7,5],[-2,-6,-4,-8,10,-3,1,6,-3],[9,-8,3,-8,6,-5,-5,-3,-8],[1,-4,-4,-7,8,4,4,7,2],[-2,3,8,-10,-7,-1,-2,10,3],[-2,6,-6,1,6,1,-10,-8,10],[2,-6,3,-3,10,-10,7,5,-3],[-4,2,4,7,4,-6,-9,4,-7]],[[-5,-9,-6,-9,-2,6,7,10,1],[-3,-6,4,-1,10,10,-10,10,1],[-10,-10,-7,8,6,5,9,-8,5],[9,-6,-9,8,3,-3,-5,5,7],[-10,5,-2,5,-8,-6,-6,-9,4],[1,1,10,-8,-9,10,4,3,-8],[-2,4,-8,5,7,-6,-1,-5,-9],[-6,-1,10,3,1,-5,-8,-4,9],[5,5,5,5,6,-10,-4,-4,3],[4,7,-1,6,1,4,-5,-3,2],[-2,6,6,7,-2,5,-4,-1,-8],[-5,-4,6,8,8,2,9,-7,-5],[3,-5,2,2,10,-9,8,3,-2],[-9,-2,2,-6,-1,-10,-10,-6,-7],[6,4,-5,-4,-7,-6,-10,1,-3]],[[-8,-6,6,3,8,-10,8,6,-3],[5,3,-6,2,3,8,6,7,-2],[9,-6,7,-4,3,8,-9,5,6],[-3,7,-2,4,-2,-4,-1,-2,-2],[6,-3,-5,4,6,8,-3,10,8],[7,-2,2,-5,-10,1,-3,9,-5],[9,-8,1,6,-8,-5,10,8,-3],[9,5,-3,3,-3,-4,-7,-10,-7],[-5,-6,-9,1,3,3,-2,-3,4],[-3,-2,9,7,-8,-5,9,-7,-4],[5,6,-7,-3,-1,-7,-2,2,-9],[9,-1,2,-3,-5,-3,7,-6,-8],[-3,-5,-7,9,-5,3,-4,-9,-1],[-10,-1,5,5,3,-8,-6,2,-7],[-4,-8,7,-10,-6,-7,-9,3,1]],[[-5,3,-10,7,-2,-5,-7,5,-7],[-1,-5,-7,5,-9,-7,6,1,-8],[-10,6,5,1,10,9,8,4,6],[8,-7,-10,1,4,5,10,-10,-7],[8,7,6,7,8,9,-3,7,-6],[-4,-3,9,-2,-5,-7,-7,2,5],[2,2,-3,5,-10,6,1,4,-8],[-4,-4,-3,3,8,-4,3,-6,7],[8,7,-8,5,-3,-3,-4,5,8],[-2,8,8,4,-1,10,4,-1,7],[4,-9,3,-1,-1,-6,4,3,8],[5,5,-6,3,-5,1,-4,-4,-5],[6,-3,-10,-7,-6,8,2,-8,9],[-3,4,-9,-8,1,7,-8,-1,10],[-9,-8,7,-9,-1,-7,-10,5,10]],[[8,-8,-1,-4,9,-9,9,-8,-3],[4,4,-8,6,-3,2,6,1,-9],[-10,-1,-10,-8,10,-5,10,6,3],[-7,2,9,-3,-3,8,9,5,-8],[2,-2,-3,5,8,-7,5,-1,6],[-10,4,5,3,1,6,3,-7,-10],[3,4,-5,2,7,-9,-3,3,-2],[1,-4,5,4,-8,2,9,-3,7],[-6,-10,-2,5,5,5,8,-5,10],[2,8,5,8,-5,9,-1,-3,-7],[7,2,-1,3,3,-2,6,9,4],[3,-1,2,-4,-6,-1,4,6,4],[-3,7,-3,-2,-2,4,-6,7,9],[9,10,8,8,-3,-8,-4,-4,-10],[9,-9,-3,-7,1,-6,1,2,1]],[[-7,4,3,-7,-4,7,9,3,9],[10,-5,-7,-9,-8,-4,-3,-6,-10],[-8,8,-7,3,1,3,-2,-5,2],[-9,2,4,-6,6,-1,-3,-3,-10],[-5,8,10,7,4,10,4,9,-9],[-2,9,9,4,10,2,-8,2,5],[7,4,4,7,7,5,-8,-1,7],[-8,1,-10,7,-1,6,-1,-10,4],[10,3,9,1,7,6,-1,6,-2],[4,6,8,-5,-7,-3,10,-4,1],[3,1,-6,-3,-3,9,-7,7,-10],[7,4,-10,-5,-10,-5,2,-3,-7],[2,-5,3,10,-7,-5,-2,2,-8],[-2,-5,2,3,10,-9,-6,1,3],[7,5,-2,3,-5,-1,9,6,8]],[[-8,3,9,-8,-10,8,4,1,-9],[10,-9,7,5,-3,-4,10,4,-1],[-5,9,8,1,1,1,-4,-2,-5],[-5,8,3,1,-7,7,7,7,-7],[1,8,9,4,10,8,-8,8,-3],[10,-6,-6,-5,5,8,10,10,-3],[-9,4,-4,9,-5,10,9,1,-8],[-8,-9,8,5,-7,8,-3,9,-10],[-10,-7,-5,-3,10,2,1,3,-5],[9,1,-6,-8,-9,6,1,8,3],[8,10,9,6,-3,2,-1,9,-1],[-2,6,7,9,-8,-10,10,6,-6],[3,-7,-10,-6,3,3,-4,2,-4],[-2,9,-2,2,4,4,-4,-1,-5],[3,-2,-1,-8,-7,3,-1,6,6]]], dtype = "int8")#candidate|504|(13, 15, 9)|const|int8
var_505 = relay.var("var_505", dtype = "int8", shape = (13, 15, 9))#candidate|505|(13, 15, 9)|var|int8
bop_506 = relay.left_shift(const_504.astype('int8'), relay.reshape(var_505.astype('int8'), relay.shape_of(const_504))) # shape=(13, 15, 9)
output = relay.Tuple([bop_506,])
output2 = relay.Tuple([bop_506,])
func_513 = relay.Function([var_505,], output)
mod['func_513'] = func_513
mod = relay.transform.InferType()(mod)
mutated_mod['func_513'] = func_513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_514 = relay.var("var_514", dtype = "int8", shape = (13, 15, 9))#candidate|514|(13, 15, 9)|var|int8
func_513_call = mutated_mod.get_global_var('func_513')
call_515 = func_513_call(var_514)
output = call_515
func_516 = relay.Function([var_514], output)
mutated_mod['func_516'] = func_516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_893 = relay.var("var_893", dtype = "float32", shape = (15, 1, 4))#candidate|893|(15, 1, 4)|var|float32
uop_894 = relay.asinh(var_893.astype('float32')) # shape=(15, 1, 4)
bop_900 = relay.floor_mod(uop_894.astype('float32'), relay.reshape(var_893.astype('float32'), relay.shape_of(uop_894))) # shape=(15, 1, 4)
func_306_call = mod.get_global_var('func_306')
func_310_call = mutated_mod.get_global_var('func_310')
var_905 = relay.var("var_905", dtype = "float64", shape = (648,))#candidate|905|(648,)|var|float64
call_904 = relay.TupleGetItem(func_306_call(relay.reshape(var_905.astype('float64'), [6, 12, 9]), relay.reshape(var_905.astype('int16'), [6, 12, 9]), relay.reshape(var_905.astype('float32'), [6, 12, 9]), ), 2)
call_906 = relay.TupleGetItem(func_310_call(relay.reshape(var_905.astype('float64'), [6, 12, 9]), relay.reshape(var_905.astype('int16'), [6, 12, 9]), relay.reshape(var_905.astype('float32'), [6, 12, 9]), ), 2)
output = relay.Tuple([bop_900,call_904,var_905,])
output2 = relay.Tuple([bop_900,call_906,var_905,])
func_909 = relay.Function([var_893,var_905,], output)
mod['func_909'] = func_909
mod = relay.transform.InferType()(mod)
mutated_mod['func_909'] = func_909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_909_call = mutated_mod.get_global_var('func_909')
var_911 = relay.var("var_911", dtype = "float32", shape = (15, 1, 4))#candidate|911|(15, 1, 4)|var|float32
var_912 = relay.var("var_912", dtype = "float64", shape = (648,))#candidate|912|(648,)|var|float64
call_910 = func_909_call(var_911,var_912,)
output = call_910
func_913 = relay.Function([var_911,var_912,], output)
mutated_mod['func_913'] = func_913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_923 = relay.var("var_923", dtype = "float64", shape = (5, 6, 8))#candidate|923|(5, 6, 8)|var|float64
uop_924 = relay.sinh(var_923.astype('float64')) # shape=(5, 6, 8)
uop_936 = relay.sin(uop_924.astype('float32')) # shape=(5, 6, 8)
func_306_call = mod.get_global_var('func_306')
func_310_call = mutated_mod.get_global_var('func_310')
var_944 = relay.var("var_944", dtype = "float64", shape = (324, 2))#candidate|944|(324, 2)|var|float64
call_943 = relay.TupleGetItem(func_306_call(relay.reshape(var_944.astype('float64'), [6, 12, 9]), relay.reshape(var_944.astype('int16'), [6, 12, 9]), relay.reshape(var_944.astype('float32'), [6, 12, 9]), ), 0)
call_945 = relay.TupleGetItem(func_310_call(relay.reshape(var_944.astype('float64'), [6, 12, 9]), relay.reshape(var_944.astype('int16'), [6, 12, 9]), relay.reshape(var_944.astype('float32'), [6, 12, 9]), ), 0)
func_513_call = mod.get_global_var('func_513')
func_516_call = mutated_mod.get_global_var('func_516')
const_948 = relay.const([[8,5,9,-10,2,-3,-10,3,-10,5,4,10,-9,2,9,-9,7,3,-3,-9,10,5,6,-7,-5,-4,6,8,5,3,4,-2,-8,-9,1,8,-1,1,-3,2,3,-6,10,-4,-5,-10,9,-2,-9,9,-8,-1,-2,-6,1,4,6,2,-5,2,3,1,-7,10,5,-6,-6,3,1,4,1,-5,9,4,4,-4,-9,-9,-1,2,8,-8,-7,6,-4,10,-10,2,-2,3,-2,1,3,8,10,-7,-10,-7,-10,6,3,7,1,-5,6,9,3,9,-1,-10,-1,-1,6,1,-1,9,-3],[9,8,8,-2,-1,-6,-2,1,10,-3,-4,-1,6,-10,-7,-3,-10,10,6,5,-8,-10,-10,2,-3,-2,-5,-10,4,6,-4,8,2,1,2,5,-7,-10,-6,-8,9,-5,-3,-5,-4,8,2,1,-8,3,-6,-7,3,-1,-10,-7,-9,3,-7,10,-1,-9,-8,8,3,-3,-10,-4,-10,4,-4,-10,3,-6,4,-4,-8,-10,3,10,9,-7,-6,2,5,-9,-6,3,-4,4,7,-5,-10,1,2,1,7,-10,8,10,-7,2,7,5,-4,-1,6,8,-2,-9,-10,-6,8,-9,-6,-8,7],[-8,-5,8,-1,-2,7,-3,7,-3,-2,-4,-5,-7,-2,-5,8,5,-8,5,-6,-8,-7,3,-3,-2,7,7,7,-2,2,-9,-3,-4,-9,-2,-7,7,-1,9,9,1,5,6,6,2,9,8,6,-3,-4,2,-5,-5,-1,10,-6,-4,1,-5,-1,-4,-8,10,-8,-1,-10,-4,-1,-9,3,-2,2,-10,-9,-9,1,9,-8,1,4,8,4,8,3,10,9,-5,-10,-4,-1,9,6,9,-9,-10,4,-6,4,-4,3,2,-7,-3,-3,6,-9,4,-3,9,-7,4,1,-10,3,-9,-9,8],[-10,-1,-7,-7,-1,10,-7,-3,-10,-4,6,3,9,8,6,3,9,1,2,10,10,-7,-1,-1,-9,1,10,-7,-9,-6,4,-1,5,9,-9,-3,1,7,-2,4,-5,9,2,-4,-2,5,2,-9,9,6,-6,-8,9,-2,6,-4,-2,4,-8,4,1,-8,-9,-9,4,8,-4,-9,-6,6,7,-10,-3,-3,-5,5,-10,6,-7,-10,10,-10,-8,7,-10,-5,5,7,2,-10,-1,-2,7,2,2,-6,-2,9,7,-6,-9,5,-6,1,-2,-4,8,-6,5,9,-10,2,-1,-5,-6,-5,-10],[8,-3,-6,4,10,8,-6,-3,-10,10,-6,2,-9,-2,3,9,10,2,8,7,-7,5,-8,6,1,10,7,1,-10,4,-5,-5,-4,-2,-5,2,2,3,8,-7,-7,8,-1,-2,2,-4,-9,-3,-10,-5,1,-4,7,-4,9,3,10,-2,2,2,1,2,-7,-5,9,-1,-9,5,4,-2,3,-1,-9,-4,8,-7,-1,1,4,-4,-7,-3,-10,6,-8,-9,6,-3,-2,7,10,10,-3,-9,8,7,-8,4,9,-4,-8,7,2,10,9,-3,-1,2,6,8,7,-1,-6,-5,-3,-1,3],[-7,-1,6,-4,9,-5,-9,2,-7,5,-6,-3,5,1,8,-7,6,2,6,-4,-3,-7,2,-2,-10,8,-9,6,-8,-1,2,3,-5,-3,-1,7,-8,6,6,8,6,-10,7,-10,-5,-3,-10,7,3,8,7,-10,2,2,6,3,-9,7,-1,3,8,4,-4,3,9,1,-7,-10,7,-6,-5,4,-2,-10,-10,10,8,-7,-5,8,-2,-1,-8,-9,-2,-7,-3,-8,4,9,-10,-1,5,3,-8,5,9,-8,-6,3,1,-4,3,-3,-4,2,-3,4,-10,-1,7,-10,-1,-7,-5,-6,2],[-3,6,3,-10,3,7,5,-4,10,2,10,-6,2,-7,10,-10,8,10,-5,-6,6,-6,5,-5,1,-2,-3,-8,-2,3,8,-8,9,-6,8,3,-7,7,8,6,-1,10,9,-7,5,-4,5,-7,-9,1,7,5,4,8,4,-1,2,-9,9,3,-7,-7,10,9,7,9,5,-9,-6,10,1,-4,-3,4,-10,6,-4,4,-6,-3,4,-8,6,9,-6,-1,-10,-10,10,5,-2,1,-3,-2,-7,-4,9,-1,1,6,-9,-4,3,-4,-1,7,1,1,-3,4,8,-3,10,-1,-2,-8,-3],[1,-10,1,5,7,5,1,1,-10,-3,-7,4,6,6,-8,10,-4,-6,4,-2,9,-8,-5,-6,-9,7,6,5,-1,7,9,1,-10,10,-10,6,10,-10,5,2,-6,2,-2,3,-10,-5,2,4,-4,-7,-7,-4,8,-1,-9,-9,-2,7,9,-9,4,10,7,9,8,-8,10,-1,-5,9,5,-8,-8,3,7,-8,6,-7,2,6,2,5,3,8,8,1,7,4,-6,-5,-1,-4,-3,-9,6,6,-9,-10,9,-2,9,-2,-5,-2,-5,4,3,10,10,2,-7,8,1,8,-7,-7,-6],[-3,-7,-1,-3,8,-4,2,10,-2,4,10,-7,5,1,-2,-5,5,7,4,-1,-6,3,-1,-3,9,-2,-3,9,6,-2,-4,-1,-8,-7,10,5,4,-7,-10,-7,-8,-7,-9,8,6,-4,-4,-3,5,7,7,5,-1,-6,1,-9,2,9,-2,-9,-5,-1,9,-5,4,-2,-3,4,-9,4,-2,10,-9,-7,4,-9,10,1,-6,4,6,2,-4,3,7,-5,10,-4,2,8,-7,6,1,-7,-2,4,8,9,-2,-7,-2,9,8,9,-5,6,7,9,9,-2,6,3,4,8,-4,7,9],[-8,-1,7,-5,8,-6,10,3,-8,-10,5,-1,-1,9,-3,-6,-7,9,3,-6,-7,-7,8,9,-9,5,4,-8,-4,-5,-7,-9,7,6,-3,-8,5,-5,7,8,-4,1,-2,-5,6,-5,-10,-7,4,5,-8,-8,-2,7,-9,-5,-2,5,5,-2,7,-4,-6,5,4,9,-5,-4,-10,-6,8,5,8,-3,7,4,5,-4,10,-10,9,8,-4,3,-5,-6,10,4,1,-1,-3,6,-6,6,10,-4,-5,5,7,5,4,-7,-5,2,-8,-6,-1,-8,5,-5,-2,-3,1,6,5,2,-5],[6,1,5,5,2,-6,-5,6,5,8,5,-10,-7,-4,-6,1,-8,4,-4,5,-4,-6,-3,8,-2,-9,-6,-2,4,6,-5,-4,9,-6,-8,9,-1,3,-9,1,-7,-2,9,-10,2,-3,-2,9,6,4,-6,7,10,-1,-1,4,-5,5,-2,7,2,8,8,7,3,-9,6,6,6,-7,-2,-8,-7,8,-7,-1,6,3,9,9,3,10,-6,5,4,10,3,2,9,7,-7,-7,10,-5,1,-2,4,4,-10,1,-3,1,-8,-3,-3,5,3,-10,-3,1,-1,-8,6,-4,-3,10,7],[-9,4,-4,-6,-6,-2,-9,3,10,-6,-10,10,-9,-2,-8,-2,-6,1,-3,8,4,-6,-6,7,-5,-6,-5,1,-1,3,-2,6,-9,-7,-4,2,8,4,-6,-1,6,-6,-4,-3,1,-4,-2,2,-7,-4,5,-2,-3,-6,9,-10,5,-4,-4,-3,6,8,8,-9,-9,8,10,-7,-8,4,10,-10,1,-5,-4,7,-6,8,-5,10,10,7,10,5,-7,-5,4,-6,-1,9,9,-7,-3,8,-10,3,8,3,4,-6,-8,1,-6,6,-6,-7,1,2,9,-3,10,-10,-7,-4,3,-3,-1],[-3,-1,-8,-6,-4,9,2,-5,6,2,-4,10,-10,-10,-4,-9,-1,7,-7,-4,-9,-8,8,7,-1,-1,6,2,6,10,6,8,10,-5,-10,2,2,10,3,6,-6,8,-2,-1,4,-10,-3,-8,-6,1,-3,-5,1,5,-5,-10,1,7,8,-4,1,5,-4,6,5,8,-8,-3,10,-5,-2,-10,-10,-6,6,5,6,9,2,-10,3,-6,-2,-10,-8,9,-9,-3,-7,1,1,-1,5,-4,7,7,3,1,-4,-10,-5,4,-10,-4,6,-10,-1,-3,-3,5,-3,8,-6,3,-9,4,-2],[1,-5,-8,-10,9,1,10,-9,2,5,-9,-10,-5,-7,-4,-9,-2,-9,7,-9,3,-8,-4,7,-8,7,-5,2,-5,-1,8,3,6,10,-3,2,1,-10,9,-8,-10,-6,1,7,7,-6,-9,4,-2,9,-3,1,10,-6,9,-6,10,-5,10,-8,9,-1,-4,-4,-9,-2,-3,-6,-6,-4,8,-3,-3,-1,10,1,7,10,7,8,8,-6,-4,-5,-5,-7,-10,3,-9,-8,8,-2,9,6,7,-10,5,5,-10,-2,-1,10,-9,7,-7,-9,-4,10,3,9,-10,-5,7,-4,2,4,5],[7,6,4,-10,-10,5,8,-6,10,-8,-8,-4,-3,-8,-2,-10,-7,-6,2,5,10,2,10,7,-3,-2,1,5,4,3,-8,-8,1,-7,10,5,-2,8,-6,-9,-9,9,-10,-5,8,2,-1,1,2,3,10,2,6,5,6,-8,-6,6,-1,-2,-9,5,3,-9,3,-9,-1,-8,-4,8,6,6,5,10,4,-5,6,-2,5,8,-3,-5,-9,-1,6,4,7,6,3,-8,-9,2,2,-6,5,-8,-10,-3,8,3,-5,-5,-6,-4,10,10,4,5,-3,-4,-7,-7,7,-8,-5,-6,10]], dtype = "int8")#candidate|948|(15, 117)|const|int8
call_947 = relay.TupleGetItem(func_513_call(relay.reshape(const_948.astype('int8'), [13, 15, 9])), 0)
call_949 = relay.TupleGetItem(func_516_call(relay.reshape(const_948.astype('int8'), [13, 15, 9])), 0)
func_909_call = mod.get_global_var('func_909')
func_913_call = mutated_mod.get_global_var('func_913')
const_958 = relay.const([-6.333493,-3.236009,-1.519168,-5.196915,6.786543,5.096304,-9.719813,-7.915220,-1.927805,9.072800,9.135485,-1.308905,-6.135908,3.913356,-8.165423,8.437319,-4.766900,6.223286,5.042539,5.457721,-5.659550,0.513660,2.219554,0.207026,3.926788,8.841296,7.807872,0.642326,-4.847333,9.374316,2.115059,-1.732928,-4.175293,5.729396,4.685107,-1.292930,8.390770,-5.238525,-6.687516,-2.088680,-3.707443,-2.121350,-7.234337,5.735159,-3.537206,0.198531,1.922857,7.912526,-9.991839,-5.566246,7.883913,0.005651,-0.279602,4.330885,7.499246,9.218792,1.208798,-0.597449,9.838994,7.799241], dtype = "float32")#candidate|958|(60,)|const|float32
call_957 = relay.TupleGetItem(func_909_call(relay.reshape(const_958.astype('float32'), [15, 1, 4]), relay.reshape(call_943.astype('float64'), [648,]), ), 1)
call_959 = relay.TupleGetItem(func_913_call(relay.reshape(const_958.astype('float32'), [15, 1, 4]), relay.reshape(call_943.astype('float64'), [648,]), ), 1)
output = relay.Tuple([uop_936,call_943,var_944,call_947,const_948,call_957,const_958,])
output2 = relay.Tuple([uop_936,call_945,var_944,call_949,const_948,call_959,const_958,])
func_975 = relay.Function([var_923,var_944,], output)
mod['func_975'] = func_975
mod = relay.transform.InferType()(mod)
var_976 = relay.var("var_976", dtype = "float64", shape = (5, 6, 8))#candidate|976|(5, 6, 8)|var|float64
var_977 = relay.var("var_977", dtype = "float64", shape = (324, 2))#candidate|977|(324, 2)|var|float64
output = func_975(var_976,var_977,)
func_978 = relay.Function([var_976,var_977,], output)
mutated_mod['func_978'] = func_978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_990 = relay.var("var_990", dtype = "uint32", shape = (13, 16, 9))#candidate|990|(13, 16, 9)|var|uint32
const_991 = relay.const([[[-7,7,8,4,-7,-7,8,6,-10],[7,9,6,1,-3,7,-10,10,4],[9,4,-6,-4,2,6,-6,-4,10],[-3,5,-2,1,-9,-1,1,-3,-5],[-5,-3,-2,10,4,5,3,-7,-5],[-3,2,7,6,-5,-2,-6,-1,3],[10,1,7,-9,5,-3,4,-7,9],[-2,-4,2,9,-5,6,4,-1,-1],[-5,1,4,-10,-9,7,-1,-2,5],[-2,-1,7,-3,5,-7,4,-5,-2],[10,-7,9,8,-2,6,2,4,-3],[1,1,3,2,-2,4,-6,-7,7],[9,-5,-6,10,9,3,4,-9,2],[5,-9,1,-2,-10,-1,5,2,1],[-1,8,-5,-1,5,-6,-9,-10,-9],[-4,7,-9,10,-8,-4,-2,2,-6]],[[-1,7,-4,-4,3,3,-5,4,10],[-2,-9,-3,-1,-9,-5,1,-1,-3],[-1,-10,-2,-6,-10,1,-6,-2,-5],[-8,-2,-9,-2,-4,-1,8,5,-6],[-2,8,-5,-4,3,-5,-3,-5,2],[1,-6,-8,3,9,-5,8,9,1],[-4,4,3,6,-4,10,-6,-1,7],[1,7,-9,-5,2,-1,-8,10,-2],[3,8,8,-3,-8,-9,4,-4,-10],[-5,-9,10,8,7,-2,-10,9,-10],[3,-3,8,3,-2,4,9,10,4],[10,-8,1,-7,2,-6,-7,6,9],[2,7,-10,-9,-8,-9,-8,6,7],[5,6,-4,-2,3,-8,5,6,-7],[2,-7,4,-5,-4,-6,8,-7,-3],[-9,9,-4,-6,-9,10,9,2,2]],[[-2,6,-10,9,8,-4,-6,-5,-7],[-1,7,-7,8,8,-4,5,1,-1],[8,9,-5,-6,-8,-3,-9,9,-8],[4,2,7,-4,1,-6,8,-2,1],[-10,8,5,2,-8,1,-7,4,-6],[-7,-3,-8,1,-6,-3,-2,-1,2],[2,1,6,5,-4,-3,10,-1,-8],[-6,4,-4,7,1,-6,6,-6,-7],[-9,-6,-3,-3,10,-10,6,-9,-7],[9,-1,-4,1,5,8,-2,6,10],[-8,6,1,-6,9,-9,-10,-10,9],[10,-3,9,-8,-8,8,6,5,4],[8,-2,7,3,10,-10,9,-10,4],[-6,10,-9,-4,-4,8,4,8,-3],[9,-2,-3,-9,2,-5,-9,-9,6],[9,4,8,1,-8,-8,-4,10,8]],[[-8,-6,-6,-7,3,-4,-5,-7,-6],[2,7,-6,4,-3,-6,8,8,2],[-4,-9,-6,-3,5,1,7,9,-5],[8,-5,-4,2,2,-5,-3,7,3],[4,4,8,-1,1,10,4,-5,-10],[9,2,-1,-10,-3,8,-8,-4,2],[-10,-10,4,6,7,-1,4,-9,3],[-3,-6,-8,4,7,-2,1,-5,-4],[-8,-8,-4,4,-9,6,4,-5,-6],[5,2,-8,-2,-6,-8,5,-3,-3],[-4,-6,-1,-4,-2,5,3,7,-1],[-2,2,7,8,-7,7,-9,8,-3],[-8,2,-10,-5,7,10,5,-1,10],[8,-2,-1,7,-1,5,-4,2,10],[-4,-7,-9,1,7,-2,1,-6,-6],[-5,7,10,9,3,-1,-5,10,-8]],[[-9,4,10,-4,7,-8,-7,8,7],[5,1,9,-3,-8,6,-1,-4,10],[10,-9,-2,-1,-9,2,-6,-2,-5],[8,-5,10,-2,-6,-7,-2,-8,5],[7,-8,5,-2,9,8,9,1,-4],[-5,3,7,-6,8,-2,-4,8,-7],[6,-4,7,8,-1,10,-3,4,-6],[7,-1,-10,5,-2,-7,-6,8,7],[-3,1,-7,9,-6,5,5,-6,4],[-7,-9,2,10,1,1,5,-5,7],[-5,-10,-3,-3,-5,-5,6,-10,5],[-2,-1,2,1,5,2,-5,-2,8],[-2,-4,-1,-7,-4,-1,-8,-3,6],[-2,-3,-4,-1,-1,-6,8,1,4],[-4,-8,-8,7,-4,7,-4,-8,8],[-1,2,3,5,5,-5,8,10,8]],[[-7,-5,3,-10,3,-5,1,-1,10],[-1,7,-8,5,-4,2,-4,-8,9],[-1,10,8,-4,-9,-3,10,3,10],[-4,9,-1,-3,-1,3,2,-8,7],[-6,-6,7,6,-3,-9,-2,9,2],[-4,6,5,3,3,-8,9,1,-10],[7,8,-7,-5,9,-2,-6,7,10],[-1,-9,-6,5,2,-3,4,10,-9],[8,-8,10,1,6,9,-2,-3,-7],[2,6,-7,8,-10,3,9,-3,-10],[9,-10,9,-3,2,-4,4,-2,-9],[1,10,8,-1,9,-4,-9,-10,7],[2,2,5,4,9,-2,-5,-6,4],[-2,-10,1,10,6,2,-1,5,-8],[-9,-2,8,-7,-6,-10,8,7,5],[-2,1,6,3,-8,3,1,-8,-10]],[[-4,3,-1,-2,7,7,-1,-6,8],[4,1,2,-7,6,3,-6,-5,8],[-2,-7,4,-10,2,5,-7,-3,-2],[2,9,7,-4,-10,-9,-6,-1,-1],[-6,7,-6,10,-3,4,10,-5,6],[1,-2,-10,7,4,-9,-2,6,3],[-2,-7,-7,-8,-7,-4,-4,4,3],[-1,-1,10,-9,-5,2,9,2,-8],[-5,6,9,6,4,-1,5,9,6],[6,-4,2,-10,7,-7,2,1,-5],[-7,-8,-2,-10,-3,-2,2,6,-8],[9,1,1,3,9,3,-8,6,3],[-5,6,-6,6,-4,-2,-3,10,1],[2,-7,9,5,-10,5,1,-8,7],[5,2,8,-2,8,-6,5,4,1],[2,3,8,-7,8,-8,-9,-10,4]],[[6,-2,-2,-3,8,-9,-1,4,-2],[1,-3,-5,4,6,7,-4,10,7],[-4,-8,-8,-9,7,2,-6,-1,2],[2,3,9,-1,-3,1,-2,-10,7],[-7,-6,2,8,-1,-8,6,-8,-1],[-1,2,-3,3,7,-6,-3,3,-9],[-5,4,7,-8,4,-4,-3,-9,-8],[-7,10,6,8,-10,9,5,-6,2],[1,-6,6,-1,-4,3,3,-3,-3],[8,10,-4,7,3,-10,-7,-4,7],[-5,-8,-9,1,10,4,4,-7,-9],[-3,4,-10,-10,-5,-3,6,-1,9],[5,3,-5,-1,6,-5,-2,-1,-4],[-9,7,-1,-8,-10,-3,-10,-8,-6],[-9,-4,-8,10,-7,4,-10,-6,-9],[-9,3,-8,8,-5,-3,1,-9,-7]],[[-8,-6,-7,-6,5,6,-8,3,-6],[-10,-2,-3,7,7,3,-4,10,-3],[2,4,1,3,6,-3,-10,-9,9],[9,9,5,-9,-10,10,-4,5,2],[-7,-7,5,-7,2,-9,-1,-6,-4],[2,-1,10,8,-6,1,8,4,-3],[5,6,-10,-8,-3,1,7,-9,-6],[10,5,6,1,-4,-1,-6,8,4],[4,9,6,5,3,-2,4,-2,5],[3,-4,-2,5,-1,-9,3,7,-3],[1,-8,1,-5,1,4,-5,-3,5],[4,-5,-4,-10,-8,-6,1,8,-6],[-1,-5,-6,10,5,10,1,9,9],[-10,10,-5,10,6,9,-6,2,-5],[-10,2,10,-5,-6,-9,-8,3,1],[-4,7,-9,-3,9,8,-8,2,-4]],[[-3,-5,3,-3,7,1,-7,-8,-9],[3,4,9,-7,-10,6,3,-3,8],[4,-1,9,-8,-8,-3,3,-9,7],[1,-5,-4,7,8,-4,9,10,-9],[-1,7,5,-4,-3,7,1,5,9],[4,-5,-7,1,-8,-6,-1,-6,-4],[-6,9,-1,1,-4,-7,4,-10,-6],[-9,-3,-7,8,3,6,-6,10,-2],[-2,3,9,-1,-1,-1,8,-3,1],[-7,8,4,1,-6,5,-2,-3,5],[4,5,6,2,8,-4,-5,-7,-5],[1,-10,5,-7,4,-1,-3,4,-2],[-4,6,-2,-2,-3,4,-1,-4,-1],[6,-5,9,-9,2,-10,8,3,-7],[-6,3,-9,9,-1,-1,-1,10,9],[-3,2,2,4,-6,-5,1,2,-3]],[[3,1,5,6,-10,2,-8,8,10],[3,-1,10,-2,9,5,4,-4,-1],[10,-2,4,2,9,-3,1,3,-5],[-9,-4,-10,8,8,-3,-10,-6,3],[-6,-1,4,-6,-10,-6,3,-1,-4],[7,-6,-6,4,10,-10,-2,-8,3],[-9,-7,-7,-3,2,7,-6,10,1],[-1,-5,7,-5,-2,-1,7,4,-8],[-10,-1,-6,8,5,4,-7,-1,5],[6,6,-5,2,7,-7,-7,10,7],[8,-8,5,-1,6,-3,-1,-2,-8],[3,8,-4,-9,-2,-10,-4,6,3],[3,-4,-7,9,7,-4,8,-4,1],[3,-10,-8,-6,9,4,3,-8,-4],[5,3,-5,-8,-8,1,-2,-1,1],[-3,4,9,5,-5,1,10,-3,10]],[[1,2,2,-1,8,-5,3,-6,-1],[5,6,-1,-9,5,-3,1,4,-5],[5,-1,10,-3,-5,2,-3,3,6],[6,-4,-7,-7,3,2,-8,-8,1],[6,-2,1,8,-10,-3,5,-2,-2],[8,-7,-3,-10,7,1,-5,10,-9],[-1,6,7,8,3,-1,-8,6,-9],[-4,9,5,9,-8,-9,-3,3,-2],[1,2,-9,-8,-3,2,-3,-1,10],[-4,-7,-10,-1,-9,-2,-7,-2,-6],[-4,-7,9,1,8,6,-9,8,5],[4,-1,-2,-3,-8,8,7,-8,-2],[-6,9,-4,-5,-5,1,-1,8,8],[-6,1,-10,-8,2,1,-1,7,-4],[-6,6,-10,-3,-3,-2,5,4,2],[4,10,3,1,10,-7,1,-3,-5]],[[3,3,-3,7,-5,-1,-4,6,-10],[-5,7,9,2,-7,6,-8,-10,-4],[-10,-10,-3,-3,-5,-1,9,7,3],[-10,-7,-8,7,-3,10,3,-10,4],[-3,10,-5,-6,-7,10,1,3,-7],[3,10,4,-3,10,9,7,-1,3],[-8,-10,-3,6,-2,-4,-3,-2,10],[3,-2,-7,4,-4,-2,1,-5,-6],[-3,2,3,-2,-2,-7,2,-8,-10],[-7,10,3,6,2,7,10,2,5],[2,2,-6,8,9,-4,10,7,-3],[-10,4,-10,3,1,6,1,-5,-1],[1,9,-3,3,2,-3,-10,-4,8],[5,8,7,2,-1,2,-8,-9,-5],[7,8,-9,6,6,4,-6,5,5],[-7,1,-5,-9,-6,-9,-3,-10,-8]]], dtype = "uint32")#candidate|991|(13, 16, 9)|const|uint32
bop_992 = relay.add(var_990.astype('uint32'), relay.reshape(const_991.astype('uint32'), relay.shape_of(var_990))) # shape=(13, 16, 9)
output = bop_992
output2 = bop_992
func_996 = relay.Function([var_990,], output)
mod['func_996'] = func_996
mod = relay.transform.InferType()(mod)
mutated_mod['func_996'] = func_996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_997 = relay.var("var_997", dtype = "uint32", shape = (13, 16, 9))#candidate|997|(13, 16, 9)|var|uint32
func_996_call = mutated_mod.get_global_var('func_996')
call_998 = func_996_call(var_997)
output = call_998
func_999 = relay.Function([var_997], output)
mutated_mod['func_999'] = func_999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1009 = relay.var("var_1009", dtype = "uint16", shape = ())#candidate|1009|()|var|uint16
var_1010 = relay.var("var_1010", dtype = "uint16", shape = (1, 14, 14))#candidate|1010|(1, 14, 14)|var|uint16
bop_1011 = relay.equal(var_1009.astype('bool'), var_1010.astype('bool')) # shape=(1, 14, 14)
func_909_call = mod.get_global_var('func_909')
func_913_call = mutated_mod.get_global_var('func_913')
var_1035 = relay.var("var_1035", dtype = "float32", shape = (60,))#candidate|1035|(60,)|var|float32
const_1036 = relay.const([9.821538,1.276827,-2.670678,7.183148,-4.082032,-3.797612,-3.137670,-9.034125,-2.918031,-2.144239,0.890803,-6.039358,6.006329,-1.375092,-4.283947,6.022849,7.466204,8.721462,6.778267,3.572565,-1.279539,-8.518365,-0.975218,1.549790,-0.708956,-0.740781,0.003808,6.646471,-2.740120,5.482245,2.813675,-8.406619,6.481590,-9.513729,-4.929184,-4.672828,0.955672,2.923649,5.655402,9.363603,-1.763586,-1.946061,-0.299310,-5.059019,7.652938,4.885872,-9.876825,-5.256126,5.552962,9.792886,-7.719948,-8.975703,-4.928725,6.117672,9.694018,4.593898,-0.137551,3.259931,7.107753,7.087705,7.005808,5.171622,-7.634998,4.777984,3.344610,0.999721,0.051244,2.380069,7.965567,6.448731,8.865861,-2.060837,-5.672858,-1.125246,8.085094,6.156553,-7.148528,2.324724,-6.604323,-7.133454,6.024427,5.822384,-1.882753,-1.281886,-9.275959,-5.106116,3.453100,0.975764,-5.123232,2.142362,-7.529452,-2.164466,-4.423250,0.145412,-1.744444,-0.010911,-4.685480,-8.184631,-8.290301,-1.729270,4.396361,5.392610,-9.992789,-2.111833,-7.465325,-4.766961,-8.377788,-0.183500,-5.039003,2.034105,2.715220,-3.565856,-1.732145,-6.434562,-1.579718,8.960155,5.844028,-4.339349,6.388743,-8.739623,-5.592834,-8.468120,5.726452,3.812603,5.436260,3.377870,-7.068481,-8.159805,-5.357393,-6.356762,6.142169,-0.644516,-2.213105,-6.042207,-5.985878,6.246581,-2.554849,3.018918,-3.497452,1.805108,-6.105525,3.262134,3.356813,0.121417,-0.410733,-7.700251,1.769398,3.206605,1.826786,4.714871,-9.788810,-2.973597,3.198552,9.871907,4.045125,9.944389,9.118107,-8.470309,-6.630719,-4.524195,5.817675,-1.120741,-6.926651,-4.494715,-2.856522,0.529741,6.506049,0.047412,2.283891,-4.347995,0.942616,-2.016028,-7.072002,9.900792,-9.160490,-9.419356,-9.956077,-2.316669,-9.497144,-3.004695,9.539953,2.052510,-5.597958,7.052471,8.162570,-0.598867,2.986111,5.423452,9.769096,-3.008303,7.814436,-5.914561,7.540898,-4.968721,5.938400,-6.589921,-2.438484,8.008427,-0.926933,-5.332467,5.289363,9.393257,-3.061449,-0.591473,7.205634,2.232172,3.954360,1.434244,2.673039,-8.095703,-2.452252,9.550734,9.114576,0.242614,2.261308,1.177977,-5.558420,5.535959,-7.648077,0.048703,-1.095158,-9.156581,-8.629076,-9.644676,4.910294,-2.400605,-0.952876,-9.213643,8.660362,6.804259,0.880601,1.740320,5.967452,-3.880370,-8.612447,-6.967212,8.778832,5.076475,-5.072498,5.674796,-2.247257,5.202730,8.279543,-4.074584,-2.819584,8.772902,7.206451,0.223702,3.728677,-8.974828,1.379040,-4.496520,7.725227,-5.051159,7.036594,2.011632,-1.088770,-3.108316,-1.928967,-6.981427,9.656232,-3.059086,-2.546829,2.396008,-6.458961,9.338883,-4.533398,-2.747587,4.021628,1.580425,-5.011656,5.572580,-3.740414,-6.574397,-3.349408,5.735704,-4.336225,-8.691324,8.861601,-2.118251,3.467571,-2.768829,9.574775,6.214431,5.884524,6.077924,9.616551,-2.291792,8.279741,-7.881366,2.462948,9.418760,-3.634311,-1.854937,3.502878,8.534455,8.992573,4.457379,-4.285110,2.245610,5.234304,7.490547,6.444398,-0.886252,-9.429689,1.613300,-5.650149,7.643506,-6.150310,2.926594,-8.498910,9.629980,-7.738882,-0.866460,2.406376,-2.588225,-8.458193,-7.183066,-9.304428,-9.928775,6.602430,-8.034175,-2.850452,-6.577258,-7.691264,9.801654,-2.768980,-9.304052,6.537585,8.826006,-1.415136,5.234063,5.550652,6.993051,1.457035,-0.446927,7.470819,-4.706077,-7.179986,-4.863209,-2.926280,8.101006,-1.075122,7.085497,-4.271456,5.333109,4.053608,-3.546688,-8.281372,-6.520648,2.639246,-1.097554,7.681086,0.187147,-7.349814,-3.105983,2.442313,9.197500,1.378013,4.611069,-8.807174,3.322423,0.590424,-7.399843,8.340332,4.661360,-9.728880,4.476759,3.822246,4.951514,-6.242842,-0.253298,-1.250278,-8.695730,3.722634,3.932490,-6.882743,7.249306,-2.371816,1.466563,-8.858562,4.763471,-3.230469,-1.274140,9.101828,1.150313,-9.745792,4.158867,-1.468578,-4.325273,6.373039,9.025536,-5.247416,8.048167,-2.159723,-7.544513,-6.401566,5.321334,-1.322540,-8.145944,-1.557463,-8.883104,8.205554,5.431590,5.866995,2.750934,7.456550,-2.289500,4.443634,9.867913,-7.488115,-6.307953,4.936358,9.864463,-6.463001,4.526962,-4.973137,7.547941,7.927784,3.627443,-9.709065,8.269731,8.781222,-5.845679,4.083492,-3.367243,4.347571,-1.389638,4.151070,6.509758,9.618434,-1.182414,-4.335858,-7.067729,-3.886055,-7.959118,-5.667203,-6.496623,1.945214,5.204522,-4.687838,-4.793493,-1.211140,-6.906773,-6.738207,0.267278,-9.740206,4.552246,8.353064,-4.927441,2.408220,6.785217,-5.493425,3.610870,-6.858162,9.843253,9.432074,-6.194984,-7.385515,1.274519,-8.952590,8.983634,-1.692035,7.609925,-3.895037,2.256181,-8.979691,1.267510,-1.030832,-3.934974,3.580647,-0.017021,3.499058,6.478749,5.802120,1.112799,9.006307,6.271953,7.099269,-1.455670,-1.903458,-1.124720,-8.615870,-3.926954,-6.689548,5.505984,-8.162610,-7.329583,-2.426959,0.368979,-4.703067,-4.196846,7.964412,6.766175,-6.383306,-8.399594,5.439285,-0.409419,8.981823,0.044396,1.425406,8.201172,-4.017864,-0.769999,6.620296,-3.312245,-2.614693,-4.995066,-8.857649,-0.423476,7.539418,-4.929040,5.115225,-3.910690,5.813646,0.274386,-7.677397,-0.308382,-6.371981,0.327678,-8.181308,-2.473976,-2.688252,7.308392,-0.605893,-0.492961,-2.959361,1.370763,8.729622,-7.671224,4.816230,3.387308,5.741329,-2.986655,-0.986257,9.544875,1.846350,4.454211,-7.077643,2.598899,7.719514,-7.747590,-6.839364,2.798807,5.823848,-9.088210,3.231678,-3.873627,3.725662,9.208270,8.166057,-1.126982,-6.506415,-3.636621,-2.894027,1.617883,3.213459,-9.469181,9.985041,2.627558,0.275493,0.777485,-6.122246,3.622423,-9.617917,8.159070,-6.584487,4.603842,-7.030965,2.516110,6.014397,-3.078138,1.738756,-8.762018,-7.403575,7.836959,6.939912,3.555629,6.383900,3.810731,8.289883,3.001320,-4.279699,-6.761404,-1.057189,-3.898522,-1.334778,3.389939,7.265253,1.798754,6.857100,0.385431,3.945242,-5.443927,-5.589960,7.841659,3.479142,3.625081,3.327214,-0.498156,0.294565,0.875408,4.734413,3.523486,-5.201445,-7.884936,-2.509151,-7.316559,-6.330836,-2.272534,-7.318611,-8.572732,-8.090483,1.195655,2.571871,7.401943,-3.021574,9.332284,9.756325,-1.160418,9.542463,-9.792662,3.937825,5.888783,3.537184,-7.096107,5.260324,7.836882,-2.686819,3.483547,-8.716473,-0.186745,1.963046,-3.214626,0.016551,-4.406397,-3.824486,-8.248064,9.127652,3.933986,0.489423,-2.478502,7.230885,-6.654401,3.075245,0.628162,-2.010508,-3.821229], dtype = "float64")#candidate|1036|(648,)|const|float64
call_1034 = relay.TupleGetItem(func_909_call(relay.reshape(var_1035.astype('float32'), [15, 1, 4]), relay.reshape(const_1036.astype('float64'), [648,]), ), 1)
call_1037 = relay.TupleGetItem(func_913_call(relay.reshape(var_1035.astype('float32'), [15, 1, 4]), relay.reshape(const_1036.astype('float64'), [648,]), ), 1)
bop_1042 = relay.floor_divide(const_1036.astype('float64'), var_1009.astype('float64')) # shape=(648,)
output = relay.Tuple([bop_1011,call_1034,var_1035,bop_1042,])
output2 = relay.Tuple([bop_1011,call_1037,var_1035,bop_1042,])
func_1055 = relay.Function([var_1009,var_1010,var_1035,], output)
mod['func_1055'] = func_1055
mod = relay.transform.InferType()(mod)
var_1056 = relay.var("var_1056", dtype = "uint16", shape = ())#candidate|1056|()|var|uint16
var_1057 = relay.var("var_1057", dtype = "uint16", shape = (1, 14, 14))#candidate|1057|(1, 14, 14)|var|uint16
var_1058 = relay.var("var_1058", dtype = "float32", shape = (60,))#candidate|1058|(60,)|var|float32
output = func_1055(var_1056,var_1057,var_1058,)
func_1059 = relay.Function([var_1056,var_1057,var_1058,], output)
mutated_mod['func_1059'] = func_1059
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1111 = relay.var("var_1111", dtype = "uint8", shape = ())#candidate|1111|()|var|uint8
var_1112 = relay.var("var_1112", dtype = "uint8", shape = (9, 5, 2))#candidate|1112|(9, 5, 2)|var|uint8
bop_1113 = relay.bitwise_or(var_1111.astype('uint8'), var_1112.astype('uint8')) # shape=(9, 5, 2)
func_513_call = mod.get_global_var('func_513')
func_516_call = mutated_mod.get_global_var('func_516')
const_1120 = relay.const([[-7,6,9,5,5,-1,-2,3,9],[-2,-3,10,2,1,-3,6,5,9],[2,-5,3,1,9,1,-10,-8,3],[8,-1,3,-9,-5,3,-8,9,1],[1,7,6,7,-1,8,2,-1,5],[6,-5,8,-4,-2,-10,-5,4,3],[2,-5,-5,-8,9,10,3,7,9],[-5,-4,8,-9,6,-6,3,-9,10],[-3,2,6,-3,-10,-7,8,3,-1],[5,-1,5,-8,-5,9,2,4,4],[-8,10,-9,-8,-1,6,-10,-5,-10],[10,1,6,1,-3,-1,-4,4,-6],[3,10,3,-7,7,-5,2,-6,1],[2,7,6,2,7,-3,1,-7,9],[6,-2,-10,9,-4,-5,-6,-6,2],[-3,3,-4,-2,-4,5,8,1,-6],[9,-3,10,-8,4,-9,8,-3,-1],[9,4,-2,-9,2,-4,-3,2,8],[1,-8,1,-1,9,-2,-3,-4,6],[-5,10,-5,6,7,-3,1,10,8],[7,10,5,8,5,-4,10,6,-7],[-4,10,-10,-8,-6,10,-2,3,-5],[-6,-6,-5,-1,-10,-6,-9,-9,-6],[1,-1,4,1,10,-8,2,-10,-6],[-1,-1,-6,-9,9,-6,-10,-1,-4],[-2,-1,-8,-9,-4,3,5,6,4],[-5,9,-4,1,1,-2,-8,-9,1],[9,-2,-1,10,-8,2,-8,-6,10],[-1,-1,-4,-7,-1,1,-8,2,-3],[2,8,2,1,-4,-9,8,-9,2],[3,-6,-6,6,7,-3,-10,-4,4],[-6,-7,5,-9,4,1,1,-5,-10],[-4,-6,-4,-3,-3,-3,-4,5,3],[5,-2,-10,-7,1,-8,3,-7,6],[8,-6,-8,-10,-7,-4,-5,-2,10],[-4,-5,-8,-3,-6,10,2,3,10],[8,-6,5,5,10,10,1,6,-8],[10,7,-4,10,-6,-5,-4,6,-7],[-9,4,-4,-9,10,-3,-2,-10,9],[-8,1,9,10,-8,-3,-9,7,-2],[-2,6,-10,10,1,3,-3,8,2],[-9,-1,9,10,-8,5,-10,3,-7],[-6,-7,7,7,-8,6,-2,-4,-2],[9,-5,2,7,7,9,-2,-2,-2],[-6,1,-5,6,1,-2,-5,6,-6],[-9,10,2,9,2,3,-10,-6,5],[-7,-1,-4,-3,4,8,8,4,1],[-7,9,4,5,3,5,5,2,4],[6,5,-9,-1,-8,4,10,2,1],[3,9,9,7,-8,9,5,1,7],[-10,-6,-3,10,2,-5,9,2,6],[-4,7,-2,-5,-2,-4,4,-7,-4],[3,-6,-7,1,-10,6,4,9,-3],[8,7,-4,-8,6,-1,8,4,10],[-6,9,-1,4,-6,-9,-3,7,-4],[10,3,9,-6,-7,-2,4,-5,-4],[10,6,-10,-5,9,-2,6,6,9],[1,-4,-6,7,-4,6,1,-5,-4],[-1,7,-4,4,2,7,-7,7,-9],[8,6,10,-10,-8,9,2,-2,9],[-10,3,-5,5,1,5,-6,7,7],[-2,10,3,-3,-9,-4,10,-3,5],[-5,4,-2,-7,-4,-8,2,9,1],[1,-9,-8,1,6,-3,6,3,6],[-8,4,7,-4,-6,-3,5,1,-8],[-6,9,5,-6,3,-2,5,-4,-4],[4,2,-1,7,2,-1,-8,-9,10],[10,6,5,4,8,10,-9,-7,4],[-7,-5,8,-7,-2,3,2,-8,-9],[-6,3,-9,5,-7,10,-2,2,-3],[-1,7,9,-5,-5,9,6,-7,9],[-9,-5,-9,-8,9,10,10,-6,-5],[7,6,-5,-6,-10,7,10,-6,-4],[7,9,2,9,1,9,8,9,9],[-9,-2,-9,-10,7,-3,4,5,-5],[-3,10,-10,1,6,4,-2,10,3],[5,10,3,4,-1,-1,5,3,-9],[4,-10,9,-4,8,9,5,9,5],[-9,9,8,-8,-5,8,-1,3,-3],[-5,7,2,7,9,5,7,-5,-1],[10,5,10,9,-8,-5,9,9,-5],[2,-10,-7,-7,6,3,-6,-9,-8],[6,2,-4,-6,-7,8,6,4,-3],[9,-7,3,-4,-5,-1,4,2,3],[1,8,-2,9,-8,-4,-4,-4,-9],[3,7,-10,2,-8,-10,-2,-8,-10],[-9,-10,2,10,8,6,-1,3,-8],[-6,5,-7,-3,-7,-1,5,5,-7],[-9,2,-8,-5,9,7,-8,-2,-9],[1,9,-4,4,8,-7,8,-9,3],[1,8,-5,1,-2,-8,1,-2,7],[9,-7,5,-2,-10,-3,10,-1,6],[-7,-1,10,-9,-1,1,9,1,9],[-10,9,1,10,-8,4,-9,10,10],[-9,1,10,-8,-2,-4,7,1,3],[9,-5,-6,-2,-8,5,4,-8,4],[9,-8,-2,-3,6,6,5,-3,-4],[-9,-4,-1,-6,-2,2,-4,-9,1],[5,-10,-7,2,-4,4,6,4,-10],[-10,2,3,-10,-4,-7,10,-10,-7],[-9,-10,-6,10,-8,5,-1,-6,-6],[4,4,-5,-2,5,5,8,-2,6],[-3,-3,1,8,-2,-3,-1,-4,-7],[-8,-4,-1,-6,5,-7,8,-7,2],[-7,-2,-5,9,3,1,-4,9,3],[-9,10,6,4,9,3,1,-2,-10],[7,-2,-5,-10,-3,9,10,-2,-9],[-8,-10,-6,8,4,-8,6,-4,-6],[3,-9,5,-2,-3,5,-3,-7,-10],[8,8,-10,6,2,6,10,5,6],[5,-5,10,-2,-3,-8,2,2,7],[8,8,5,9,-3,-3,4,-5,-6],[-9,10,7,-4,5,9,-8,7,-7],[1,-6,-10,-3,8,-3,5,-5,5],[-4,-3,5,-2,8,-10,-10,1,-5],[-8,5,-8,-4,-2,9,-3,6,-3],[7,-5,-3,-10,-6,-2,3,-1,7],[7,-2,10,-6,-4,8,-3,-3,10],[5,-2,2,-4,-3,3,4,-1,1],[-8,4,-1,-1,9,-5,9,-10,1],[-4,-7,1,9,2,-4,1,1,-3],[-10,-7,8,10,9,10,-4,-6,3],[4,3,-10,-10,8,-8,6,-7,1],[-4,-5,-4,5,-9,-10,-8,-2,2],[-7,-7,-6,8,-5,4,10,-8,2],[-10,-10,10,1,6,-9,7,1,-3],[-9,8,7,1,-9,-4,10,10,3],[2,7,9,-6,-6,-10,-5,-1,4],[-4,-9,5,6,9,7,-5,8,-1],[-10,3,6,-6,-4,-4,6,5,-3],[-1,8,-6,-2,8,-4,8,5,-1],[-7,-2,3,9,-5,5,7,-8,5],[-1,-4,-8,-5,-4,8,-1,-2,5],[-10,5,3,5,7,6,-5,1,-6],[-8,7,-1,-7,1,-7,5,3,3],[1,7,-9,-3,7,-6,5,4,-5],[-1,7,-2,-10,-2,-6,-10,-2,8],[-7,-8,5,7,-7,3,6,-4,6],[9,-2,9,-7,6,4,-3,-3,5],[-6,-9,3,-6,-6,6,-6,-5,8],[-6,-3,-6,-6,-7,-1,-8,-5,9],[9,-1,-6,6,-3,-10,-7,6,9],[-6,-1,6,5,7,3,2,-3,-6],[9,1,-4,-3,-9,8,10,-5,-7],[3,6,-4,7,-10,6,-9,9,8],[-5,2,-9,4,-6,-10,-3,-5,-2],[8,2,2,-6,-6,3,6,-3,3],[-3,-1,9,4,-2,-1,-7,-6,8],[8,10,-7,-5,2,5,10,-4,9],[-10,-7,1,9,-8,-6,4,10,-5],[7,-4,-10,6,-9,2,-8,-2,-7],[3,-8,4,9,7,1,8,3,-9],[-1,6,-7,-9,-1,10,-3,-5,-5],[-6,-6,-6,6,-7,4,-6,2,6],[-8,-6,7,6,-2,2,1,-4,2],[6,-1,-8,2,3,-4,5,5,1],[-1,3,-8,-1,-6,6,4,-7,8],[4,-9,-3,-6,-7,2,-3,2,6],[-5,-1,-1,-9,10,2,9,-5,2],[3,6,7,5,1,-9,1,6,-3],[8,4,5,-5,3,-7,10,1,10],[-6,-1,6,5,-2,-7,8,6,-5],[-9,9,2,6,-4,10,6,-10,-2],[-7,-2,-8,5,-6,9,3,-4,1],[-8,8,6,7,1,-9,2,9,-4],[-6,-4,-1,4,10,-6,-3,-10,8],[10,-9,1,-5,-5,-10,3,9,8],[10,-6,9,-3,-8,-5,2,10,-6],[1,-7,-6,-9,-2,-6,-10,4,9],[8,8,-7,-10,10,-10,4,-8,10],[-7,4,-7,2,9,1,-9,-1,5],[-2,9,-9,-10,10,2,-3,9,10],[2,-1,-8,-2,-3,6,1,5,1],[8,-4,1,-8,-7,-4,3,1,-10],[6,7,-4,-7,2,6,-5,5,5],[-7,10,10,-3,3,-6,-2,-4,-4],[-2,3,7,7,4,-1,-10,1,-2],[-8,-5,8,4,8,1,-4,6,-6],[9,-3,9,-1,2,-9,-5,1,7],[-3,-1,7,-4,-4,-2,-1,6,-1],[10,4,-4,-8,1,10,1,9,4],[-4,10,-9,10,1,-6,3,-4,7],[1,8,-7,1,2,7,-7,6,-1],[-8,-5,-7,3,6,-6,-7,8,-10],[-2,2,3,9,2,-7,-10,-2,-6],[-5,-8,6,4,4,7,-7,-6,-4],[-8,-7,8,-3,-9,-5,-5,-3,1],[-10,1,9,7,8,4,-10,-6,-7],[3,5,7,8,-10,5,-8,-8,-9],[8,4,-7,9,3,8,-2,-9,6],[8,-8,-5,-2,9,4,9,-2,-10],[-3,10,-6,7,-1,8,-2,1,5],[-2,1,-10,-9,-10,4,-2,1,-3],[2,7,-6,-1,1,6,-10,-4,-2],[-9,-3,-2,9,4,-5,6,-4,-1]], dtype = "int8")#candidate|1120|(195, 9)|const|int8
call_1119 = relay.TupleGetItem(func_513_call(relay.reshape(const_1120.astype('int8'), [13, 15, 9])), 0)
call_1121 = relay.TupleGetItem(func_516_call(relay.reshape(const_1120.astype('int8'), [13, 15, 9])), 0)
output = relay.Tuple([bop_1113,call_1119,const_1120,])
output2 = relay.Tuple([bop_1113,call_1121,const_1120,])
func_1138 = relay.Function([var_1111,var_1112,], output)
mod['func_1138'] = func_1138
mod = relay.transform.InferType()(mod)
mutated_mod['func_1138'] = func_1138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1138_call = mutated_mod.get_global_var('func_1138')
var_1140 = relay.var("var_1140", dtype = "uint8", shape = ())#candidate|1140|()|var|uint8
var_1141 = relay.var("var_1141", dtype = "uint8", shape = (9, 5, 2))#candidate|1141|(9, 5, 2)|var|uint8
call_1139 = func_1138_call(var_1140,var_1141,)
output = call_1139
func_1142 = relay.Function([var_1140,var_1141,], output)
mutated_mod['func_1142'] = func_1142
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1166 = relay.const([[[-2.499733,4.982241,-8.365588,-3.295101,-0.388387,9.527513,2.907516],[-2.509175,9.802176,7.421056,-7.910678,-1.394467,-2.484635,4.507252],[8.077480,-6.583496,-1.664952,-1.433465,-2.980131,-6.621756,4.242705],[6.411525,-4.995300,5.636440,-2.028428,-9.094803,-4.915531,-7.073719],[2.539311,-8.020065,-2.666194,-6.544968,6.304276,9.664952,5.859485],[-1.898247,3.824079,-9.396361,3.018521,-9.279319,-8.298769,-7.291646],[3.009767,7.469716,6.799181,9.180585,9.892488,-3.749696,-6.164468],[-6.717603,-8.690494,1.923808,-5.017008,5.204147,8.690497,2.006194],[-2.072544,5.722980,-6.451278,-4.906899,-0.531889,2.468181,-9.633364],[-0.985067,-2.709947,-3.341044,-2.467364,-6.057914,2.781451,-7.508502],[1.387937,-8.746678,-1.747844,8.953302,3.934629,-6.904941,0.446343],[7.540306,9.026608,6.298137,-8.546182,-4.160660,2.553229,9.492403]],[[-0.584240,8.064572,7.429442,9.563673,3.065875,5.185649,7.832888],[2.775825,1.130567,-2.833688,-6.254867,-9.521472,9.878482,6.588242],[-0.202644,-8.684991,9.639994,-7.622649,1.730852,-8.357196,2.135445],[7.736848,7.241143,7.556381,0.185706,8.888422,1.694483,-2.246223],[9.311282,9.781423,-6.298355,-9.369468,-8.784924,4.780532,8.743496],[-8.398503,8.360233,8.455114,-9.898205,7.516483,-2.812643,-9.807054],[2.130084,-9.315666,-7.197934,-7.359243,3.987305,-2.137129,8.445706],[-3.309210,4.987877,7.025486,-5.896068,5.428552,-4.182962,9.982854],[-0.613574,-0.401328,-4.105212,-9.998233,5.212151,-0.317767,5.682433],[-3.762177,-7.681094,3.563979,8.496619,-5.720753,0.941385,2.463336],[-6.581530,-5.028835,-7.787901,-7.295361,-1.102931,2.606300,5.087543],[-3.525189,4.768197,-8.795442,5.521805,4.418532,-4.867776,9.197584]],[[-5.454404,2.822752,1.065554,8.218657,5.188322,-7.156951,-6.554333],[5.427518,7.184447,-7.103912,-4.954632,-6.208535,3.797964,-1.211282],[7.508724,5.855510,-3.378908,9.644515,1.809951,9.420684,-0.752773],[-3.476691,-1.266753,2.858276,0.636702,-4.543561,-3.952880,-9.725106],[-0.206837,8.379436,-7.075967,2.383675,-1.657930,-2.252950,1.867734],[-0.868166,1.468538,-5.067477,-3.298715,-3.035106,-3.889128,6.307636],[6.868113,-1.122095,-7.229832,-2.148179,-9.401081,-5.721471,-5.255480],[-2.516209,-7.077076,8.042485,5.309810,9.282694,5.084849,-1.899383],[-3.456251,-6.828953,0.849145,-0.550272,7.680492,-6.713123,-3.345027],[-6.334786,9.515740,8.587539,6.125484,1.676491,-1.860522,-9.177328],[-2.837441,4.656852,-2.142362,2.897154,-5.816443,6.926164,-5.811671],[-6.764846,-1.571594,5.414286,4.039715,-3.821177,4.652008,-3.027561]],[[-3.741908,-9.937519,8.265420,-5.295310,4.384205,0.016074,0.550207],[2.833133,-3.240634,-2.218851,-9.874104,-8.221168,-3.642598,-1.567778],[-8.025518,-4.754505,9.943594,-9.364875,-1.515692,-1.598307,-6.734038],[-5.377407,1.286991,8.342830,3.937303,-5.913422,0.123446,4.953428],[5.247805,2.250539,-4.151696,5.926642,-3.565068,-6.310918,-8.207096],[3.050600,-6.581987,-3.386351,2.369609,5.095326,2.359564,4.067851],[-5.608283,0.720873,-4.905438,-9.372209,-5.203580,8.492689,1.637808],[4.018381,-4.685245,-6.873246,-7.024126,-0.551893,-3.476204,-8.825523],[-2.543346,-9.955637,3.478107,-7.029082,-0.174776,-7.726233,-2.649635],[-1.413682,-8.327966,7.875883,-8.933373,0.654437,-3.885383,-4.087073],[-2.550690,5.393826,-3.014624,2.599076,2.010698,-7.061864,-6.788451],[-2.118459,-0.085123,-4.906810,-1.014811,4.162764,3.004719,-5.223261]],[[6.666435,-4.528979,2.720340,-0.735795,3.401376,7.942785,6.431898],[3.443811,3.216767,9.402313,-3.520990,-3.706883,7.325767,7.536028],[-2.672636,1.145770,-4.972733,4.727045,4.007870,-8.696444,-1.821145],[8.314337,2.426271,4.603968,-5.345542,-3.225821,5.846547,3.854454],[-3.305946,4.022929,-5.696545,-4.682868,4.999757,7.207594,5.090774],[9.907555,3.745815,-0.132849,0.840558,9.865137,-3.328877,-6.674853],[-9.176275,-6.557842,-8.321837,-8.917460,-1.606600,-5.477132,-5.269843],[-4.422782,9.722323,3.536082,-9.221884,1.501838,-6.357255,8.986013],[-2.374626,-2.639771,-9.220285,2.499336,-2.815446,4.886690,8.697554],[-5.269589,4.690176,2.137820,1.826871,-3.835311,-4.571138,4.130760],[-5.605163,8.689780,0.158635,-2.475324,5.731992,-4.240747,5.924946],[-4.783491,1.431246,-3.137867,-9.471999,4.880670,4.701960,6.168618]],[[0.285412,-6.550282,-1.376586,-8.423018,4.994264,3.158426,8.300148],[-6.839945,5.642542,1.733640,-5.074855,-2.259000,0.359367,-9.423466],[3.373612,6.201302,-7.239476,-9.684478,1.664550,-0.001166,4.913255],[9.530936,-7.502160,6.406250,6.118979,-8.562102,6.001197,-5.754073],[0.493346,6.080796,-1.065720,9.465711,-9.118586,6.936299,2.827754],[-9.745026,4.319208,3.547838,1.332980,-5.302998,3.258945,-4.665433],[9.268363,5.691645,8.277491,7.697156,0.502269,6.897717,-2.971167],[-5.211589,-5.882895,2.230120,-5.089059,3.359969,9.827202,-1.726614],[5.504908,9.425519,0.477909,2.477012,8.085133,0.905369,7.085927],[-3.560427,2.629083,8.508539,2.135320,-1.822992,4.684859,-2.649868],[4.120752,2.468506,7.556904,9.769233,-7.321512,-3.152901,1.122861],[-8.492846,-1.602104,-1.601906,9.228980,9.938272,-6.523434,2.263089]],[[-9.859822,8.657048,-9.711952,-3.891091,2.366687,6.451440,-3.241384],[-4.075010,6.365771,-9.474774,1.101830,7.099623,6.260790,-1.846420],[-7.729731,0.883287,1.400568,-9.869893,-7.243811,8.471108,-5.257971],[6.882170,-6.358137,-3.364969,-7.455425,3.181701,-8.352926,9.848146],[-9.638305,9.955984,1.977393,5.332080,4.095111,-6.670579,-0.602921],[-3.528379,-2.959621,2.485080,1.790982,-2.665660,-1.121725,2.359397],[8.645277,-0.579270,-3.697991,-0.840609,2.320684,-7.875113,-7.215901],[-1.960392,9.210658,0.787717,-3.004551,-2.306081,3.479518,3.419740],[1.664465,-2.707316,8.012587,-9.213854,-2.671493,3.992122,-5.417542],[6.292173,2.939622,7.448925,-1.435380,-0.188293,1.240812,-1.125655],[-8.114582,-8.459675,-0.737403,-2.445390,-8.510577,-3.791382,0.972199],[-7.860932,8.219523,-7.984387,2.806219,1.013704,3.909259,-1.561315]],[[7.226664,5.895839,-5.805539,7.880839,-5.985030,1.384866,-0.492500],[3.998991,2.778725,3.860866,6.609613,1.161327,7.123460,-2.431924],[5.819453,3.228696,3.433506,-2.847750,-5.064023,1.009297,3.436215],[4.165574,-9.133161,4.327479,-4.512756,-7.120636,0.826529,-8.087760],[8.648887,6.318114,6.469235,1.081145,8.452041,2.651936,4.096624],[-9.389277,8.405210,-1.523881,-4.832080,1.925729,-8.747254,1.701054],[-8.450418,-0.451629,-5.809047,-5.151267,-2.506624,8.788977,1.909151],[3.659153,8.604083,0.256795,-8.657005,-7.718646,4.145565,1.591298],[1.204633,3.658853,4.264657,6.006892,0.452938,2.759961,9.608678],[4.709877,4.924051,4.794447,-8.085273,8.470189,-3.385494,-3.199717],[-3.281469,5.268164,-0.526393,8.171251,-5.004058,8.432040,-7.049824],[9.060937,7.511159,-7.870017,-7.124102,2.544453,-0.195566,8.047246]],[[-7.294749,-6.000812,2.140527,8.271270,3.945285,4.361636,9.588475],[6.231372,-7.977812,-2.060509,-3.626622,-9.758057,-2.190688,3.831460],[5.026702,-6.860734,-1.140839,-0.801267,-5.448878,1.359694,-1.148685],[-2.788158,-8.578800,5.699021,-5.029848,-6.795582,-5.905104,7.010271],[2.787752,2.607459,6.457922,-7.876702,-8.714520,-3.842203,-1.911901],[-9.750901,-5.114128,1.187917,0.122575,5.087517,-9.659157,-9.756750],[5.674550,6.814773,-7.446912,8.536726,-1.743093,-2.675978,-0.133158],[-1.932212,-4.713053,9.053130,5.761223,3.403357,1.698136,-1.312023],[2.518139,-0.955959,8.318476,5.334320,-9.879842,8.810568,-8.803668],[7.250006,-6.094417,-0.148544,9.072461,-4.828391,-5.771040,2.813293],[-9.173981,6.264549,-2.098965,-1.025391,0.342844,1.410950,-8.928342],[4.216212,-7.189501,5.233889,-6.177413,-5.413739,4.155133,-7.603986]],[[-1.890709,2.526844,8.909933,-5.664141,-6.808712,6.797717,-0.041647],[1.008030,-8.164501,-6.840568,-3.165732,1.505716,7.435099,-5.690095],[-8.740631,-6.317793,-3.950214,-6.882560,-5.944576,4.203563,2.563022],[-7.762919,8.201135,0.070734,-2.984631,5.541380,0.995143,5.116141],[-4.329047,-4.773315,-0.158306,7.637379,-1.937615,5.207856,1.799306],[-4.981075,1.913014,-2.992485,-0.216656,-3.522012,8.513602,5.480624],[3.191766,6.496050,-0.423292,-5.324759,-9.695671,3.581498,9.148101],[6.398226,6.423393,-5.033125,2.161835,-4.033696,-8.699592,-7.171708],[-0.193439,-0.410369,3.642207,8.269047,9.011816,-8.746746,7.983549],[3.790002,-7.788702,8.777365,-9.576682,1.673085,6.894094,0.802289],[-7.151138,8.808152,-7.105345,-0.848664,-7.547007,9.875710,-8.719680],[1.641379,-7.449893,-6.024036,-9.205542,-0.724621,2.240793,-7.972815]]], dtype = "float64")#candidate|1166|(10, 12, 7)|const|float64
uop_1167 = relay.cosh(const_1166.astype('float64')) # shape=(10, 12, 7)
func_975_call = mod.get_global_var('func_975')
func_978_call = mutated_mod.get_global_var('func_978')
var_1193 = relay.var("var_1193", dtype = "float64", shape = (24, 10))#candidate|1193|(24, 10)|var|float64
var_1194 = relay.var("var_1194", dtype = "float64", shape = (648,))#candidate|1194|(648,)|var|float64
call_1192 = relay.TupleGetItem(func_975_call(relay.reshape(var_1193.astype('float64'), [5, 6, 8]), relay.reshape(var_1194.astype('float64'), [324, 2]), ), 1)
call_1195 = relay.TupleGetItem(func_978_call(relay.reshape(var_1193.astype('float64'), [5, 6, 8]), relay.reshape(var_1194.astype('float64'), [324, 2]), ), 1)
func_513_call = mod.get_global_var('func_513')
func_516_call = mutated_mod.get_global_var('func_516')
const_1205 = relay.const([[10,5,-8,-9,5,-5,6,3,3,6,-2,10,1,5,7,-1,7,-6,-4,-6,-9,-10,-8,10,-5,-3,-7,5,2,3,7,-6,-9,1,-9,6,7,3,-9,9,9,2,-2,6,-9,7,5,2,8,-9,2,5,1,5,2,5,5,-9,-4,-2,4,-9,-5,-2,6,-9,7,8,-3,10,-6,-9,2,-7,-3,-9,10,-5,-1,-5,-10,-7,-10,7,-7,-3,1,3,9,8,-1,-6,-7,6,-10,6,7,1,10,5,4,-2,9,6,7,8,3,9,-7,-9,-7,-10,-10,-4,-8,8,6],[-7,-5,-10,9,2,-4,-3,7,-9,-6,-1,-10,9,-5,-8,-8,5,-7,8,5,-9,1,9,3,2,-6,8,-9,4,3,-6,-8,-6,8,-3,2,-5,4,-10,-3,-8,9,-7,-2,-2,-2,8,1,-4,-6,5,9,-2,3,9,8,5,3,4,2,2,6,3,-4,8,6,-9,-1,-7,4,-10,-5,-10,8,6,1,5,8,9,-7,-3,8,9,6,4,3,-2,9,-9,-7,-7,2,10,-10,-3,3,1,9,-3,-5,5,-2,-8,-1,8,-1,6,8,5,-2,4,-4,9,4,-8,-10,7],[-2,-3,-2,-10,-7,-8,4,-3,-2,6,-2,1,6,5,6,5,4,10,-10,-9,-1,-2,-10,3,-1,-2,-3,-9,4,-4,5,-8,-9,5,1,6,2,-8,2,6,10,8,-1,-2,-10,-7,6,-4,-4,-6,-6,8,2,-2,-7,8,8,-9,-3,-6,-7,-10,8,10,4,8,10,-7,2,-5,-8,6,-10,-5,-8,-8,3,2,1,-5,9,4,-9,-10,-8,2,1,-4,-7,-4,9,1,-1,5,-4,6,4,-3,-10,-6,1,6,9,2,8,-10,9,1,6,-1,-8,6,-8,-7,-3,9,-2],[-5,-5,-7,-5,10,-10,-6,-8,-9,-8,8,-3,4,-7,-9,8,-2,-10,-5,-5,1,-7,6,-7,-4,9,1,-9,9,10,7,-1,-2,-7,6,-6,-1,-7,10,1,7,8,-3,4,4,-9,3,-3,9,-6,4,-5,4,-4,-5,10,7,1,6,-2,-1,-3,-9,1,-6,6,-8,-7,-2,-9,-5,9,7,-2,5,-3,-4,-1,5,-2,1,-3,10,1,2,-9,9,9,-7,-6,4,1,8,-3,-5,5,5,-5,9,-7,6,-8,-1,8,7,-2,-5,-8,-6,7,-6,-5,10,5,6,10,7],[6,2,-8,9,-9,7,-1,-10,2,3,-8,9,-4,-7,-8,2,-4,9,-5,-6,-7,4,3,6,-10,5,4,3,-1,-2,-7,-3,9,5,-2,-10,3,7,-8,3,4,7,-4,-5,3,3,10,-2,-10,4,-9,1,6,10,-2,3,-1,-5,-3,9,8,7,-8,8,8,-1,6,-1,-1,8,1,1,-2,-6,-7,-10,-7,-2,7,-4,-1,6,-5,10,5,1,-9,-10,9,5,-1,8,5,-4,9,9,-10,-5,-1,3,5,4,6,-7,9,8,9,7,-5,6,8,-2,-2,3,4,-1,-10],[4,-6,9,-3,7,-3,5,7,2,1,-2,-2,8,1,-6,-4,-6,-1,8,-2,-7,-9,-4,6,-2,9,1,10,-9,9,-1,6,-3,-2,5,6,-10,-4,3,-10,8,10,-3,7,1,-7,-8,10,4,-2,8,8,-3,4,-4,-1,-4,-2,-1,-8,6,5,-8,3,8,10,-3,6,1,-2,-2,7,-5,-4,-7,-9,10,7,10,2,5,-6,8,-6,1,6,-2,1,2,-6,-2,2,-10,9,-8,1,-1,-4,8,10,8,3,6,9,-1,-7,-1,-4,7,-4,2,-8,10,-4,2,8,-7],[-1,-6,3,5,-2,-8,-9,8,9,7,-5,-1,-7,-10,-4,7,1,4,-3,-5,-5,-1,-7,-6,-1,6,-1,-4,8,5,-2,-7,-8,-9,2,-5,-9,1,-5,4,1,-3,-5,-3,10,6,2,7,4,2,1,3,4,-6,5,9,10,-10,-7,-9,-3,-1,8,-9,-5,8,-8,8,7,5,5,-9,3,1,4,-9,3,-4,-9,3,3,3,-4,-7,6,4,5,-8,3,-10,-7,4,8,-3,2,-2,7,8,6,-4,-9,-4,2,-3,-1,-9,-10,10,-2,7,-9,1,-4,-9,6,1,-2],[8,-6,6,-3,-6,10,3,9,6,-8,-5,-7,3,8,9,-10,3,-9,5,-5,-5,9,7,-7,-7,1,7,8,1,5,-7,8,-3,8,9,1,8,-1,9,9,2,9,6,-9,-5,-7,-9,10,-4,-10,-4,6,-2,-9,4,8,-6,5,-4,10,-9,2,4,10,2,8,2,8,-10,2,2,9,-6,-1,1,2,10,9,-7,1,-10,5,-4,5,-9,9,-8,-1,-5,7,-6,5,6,-10,-5,-10,10,7,8,10,-1,-9,7,3,4,7,2,4,8,-1,-4,9,8,-2,10,-4,-10],[7,-4,-9,-2,-8,10,4,-7,2,6,7,-7,-8,10,-7,-6,-8,-7,-1,-7,7,3,7,4,3,-1,2,1,5,6,2,8,-4,-8,8,-6,-3,4,-10,9,8,4,-8,-2,6,8,-1,9,3,-2,5,4,8,-7,-8,-2,8,8,10,-10,-9,-6,5,6,5,9,-8,7,2,-4,4,-7,-9,8,-7,8,9,6,1,3,10,5,4,-3,10,9,1,-6,-2,-2,5,5,-7,-9,5,-4,4,4,-5,-6,-2,1,-10,-6,1,1,1,1,9,6,-10,10,4,-3,10,-6,-4],[-8,5,-9,3,4,8,-3,3,-2,10,8,5,-4,1,-9,-8,1,2,-10,10,10,9,-6,3,-9,1,8,1,2,4,8,8,-5,-9,-7,1,6,1,6,9,8,3,7,9,-5,-1,-5,2,9,-7,2,-4,-9,10,10,1,1,-5,7,8,-5,4,-7,-1,2,5,-5,-2,-5,-2,-4,-4,-6,-5,-2,-4,3,-8,8,9,5,-4,2,-7,-10,3,-3,-1,5,-1,-3,4,6,-6,-9,-6,6,7,6,4,-4,-10,-3,5,10,-5,-2,9,-8,2,-10,2,-8,6,4,10,7],[2,-2,8,-2,5,1,-9,10,6,2,8,10,6,5,9,-7,-4,7,-4,-4,-10,2,-5,5,-2,3,8,3,-5,-9,2,5,-8,-7,-9,1,7,-3,6,4,-4,10,-8,6,-3,8,-3,-9,-5,-3,-9,-6,-10,9,-6,3,-9,3,-6,-3,-6,-4,3,-1,-10,-3,-1,-5,7,-6,-6,4,-4,3,6,10,-6,-10,-6,7,7,4,8,-8,3,9,-3,-3,10,8,3,-7,-10,9,-7,-3,8,-2,-9,3,-4,-9,7,-5,-1,2,-9,-4,5,-7,4,9,-9,10,1,10,-8],[-2,3,2,8,-8,3,8,-7,-2,-6,3,-2,-3,-8,8,-2,-1,-10,8,8,-7,-8,-1,-1,-8,-4,2,5,8,-8,1,9,-6,-6,-8,-10,5,9,7,-9,-7,-7,8,4,-7,-4,-6,-10,-1,7,-9,4,9,10,-5,10,-1,-1,-10,8,-9,4,5,-8,-10,-8,5,5,-7,-9,-5,6,-7,8,2,-3,-6,6,2,-2,10,3,3,-9,-4,-5,-9,-6,8,4,-8,10,-3,-7,-2,-7,-10,8,-8,-4,-7,-1,9,-1,-9,-6,-1,3,7,-10,1,-1,-8,4,10,-8,6],[1,5,2,-8,-3,7,4,-5,2,2,9,-6,7,9,-1,5,10,-6,5,3,5,-3,-3,-3,-8,-8,-6,8,-8,-1,1,3,-7,6,-4,-2,-6,-8,-7,3,6,10,6,7,4,5,5,9,-10,6,1,-3,-6,7,1,-7,-1,-9,7,-1,6,-6,-5,-3,-9,10,-8,8,-3,-5,5,1,3,3,10,10,-3,4,-3,-4,7,-10,-7,7,3,6,6,-4,-1,-8,4,-4,-4,6,7,-10,3,9,8,10,8,1,-5,-4,3,-7,9,5,-2,-3,-8,5,-10,-1,-10,4,-7],[3,-10,-10,8,2,-9,-1,6,3,-4,7,-3,-6,9,1,3,-2,1,-7,-9,6,-6,2,2,9,-4,-2,5,1,8,-2,8,-5,5,-9,1,-2,-4,-10,-10,2,5,2,-2,6,7,-10,-1,5,6,-2,-9,3,-9,-10,10,-4,6,5,-10,-9,-8,-3,5,-6,-2,-8,-3,6,4,4,10,10,-5,-7,5,-6,-6,-3,7,-3,-10,-9,4,8,3,-5,-1,10,-2,-2,4,2,-7,2,8,2,-8,2,8,3,1,6,-3,-7,5,1,-9,1,10,9,-9,-4,2,1,8,-1],[2,-1,6,-7,9,-2,1,-6,7,6,6,2,-10,8,-9,-6,-8,5,5,9,-1,6,-4,-2,-8,6,-2,4,3,9,4,-2,-10,-8,-8,3,-8,1,1,-3,-6,5,-7,-2,-4,2,-6,-10,-1,3,7,-9,5,9,7,-7,2,1,-2,10,5,3,8,8,-4,-9,9,6,-9,-9,8,7,9,-1,-4,6,5,-9,-5,-2,-7,9,-10,9,-1,-4,-6,1,3,-6,-5,4,-4,-4,-1,-7,7,6,1,7,-6,3,3,5,7,3,-4,1,2,-6,-2,-3,8,-8,-5,-1,5]], dtype = "int8")#candidate|1205|(15, 117)|const|int8
call_1204 = relay.TupleGetItem(func_513_call(relay.reshape(const_1205.astype('int8'), [13, 15, 9])), 0)
call_1206 = relay.TupleGetItem(func_516_call(relay.reshape(const_1205.astype('int8'), [13, 15, 9])), 0)
output = relay.Tuple([uop_1167,call_1192,var_1193,var_1194,call_1204,const_1205,])
output2 = relay.Tuple([uop_1167,call_1195,var_1193,var_1194,call_1206,const_1205,])
func_1212 = relay.Function([var_1193,var_1194,], output)
mod['func_1212'] = func_1212
mod = relay.transform.InferType()(mod)
mutated_mod['func_1212'] = func_1212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mutated_mod.get_global_var('func_1212')
var_1214 = relay.var("var_1214", dtype = "float64", shape = (24, 10))#candidate|1214|(24, 10)|var|float64
var_1215 = relay.var("var_1215", dtype = "float64", shape = (648,))#candidate|1215|(648,)|var|float64
call_1213 = func_1212_call(var_1214,var_1215,)
output = call_1213
func_1216 = relay.Function([var_1214,var_1215,], output)
mutated_mod['func_1216'] = func_1216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1383 = relay.var("var_1383", dtype = "float64", shape = (12, 3, 6))#candidate|1383|(12, 3, 6)|var|float64
uop_1384 = relay.cosh(var_1383.astype('float64')) # shape=(12, 3, 6)
output = relay.Tuple([uop_1384,])
output2 = relay.Tuple([uop_1384,])
func_1388 = relay.Function([var_1383,], output)
mod['func_1388'] = func_1388
mod = relay.transform.InferType()(mod)
var_1389 = relay.var("var_1389", dtype = "float64", shape = (12, 3, 6))#candidate|1389|(12, 3, 6)|var|float64
output = func_1388(var_1389)
func_1390 = relay.Function([var_1389], output)
mutated_mod['func_1390'] = func_1390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1672 = relay.var("var_1672", dtype = "float64", shape = (4, 14))#candidate|1672|(4, 14)|var|float64
uop_1673 = relay.exp(var_1672.astype('float64')) # shape=(4, 14)
func_306_call = mod.get_global_var('func_306')
func_310_call = mutated_mod.get_global_var('func_310')
const_1683 = relay.const([[5.974609,7.754609,-4.802990,5.798646,2.013201,-0.389269,-4.798338,-9.027630,-9.172713,3.478662,-4.844217,6.995311,-3.479942,-0.506189,8.542379,1.547851,8.119866,2.236740,9.471452,-5.576718,-3.575268,9.185130,8.511899,9.778338,-4.819842,5.628076,-6.478533,1.699154,3.153584,1.015428,8.630764,-5.932316,7.904575,-1.388034,-7.644904,8.600443,7.696589,-4.360554,-6.639821,-6.367006,-6.414298,2.513224,3.286132,4.012282,9.362083,2.349111,1.856611,1.374246,-5.938348,-9.079107,-1.389363,8.194237,-2.338849,8.853950,2.880885,-9.649453,1.075981,5.040439,-3.272731,-4.300263,7.877968,-1.889323,4.840628,-5.686993,9.144414,-8.654038,-2.726755,2.464585,6.837276,-6.748480,5.891444,5.304470,-9.351017,1.960242,1.182659,-7.825309,6.864484,-5.160721,-8.528091,-8.505720,8.737717,-9.895827,4.242364,-9.072449,-9.350056,4.924014,6.796172,-9.763545,3.679816,-8.516050,8.047269,-3.724724,1.832080,9.506016,5.469783,7.210252,2.606435,-1.121436,-1.126653,5.118909,6.934453,-4.438264,4.153067,9.671584,-4.529276,-3.826219,-1.264908,-4.134290,5.164876,-0.794995,-2.070392,7.952063,3.121401,-2.091302,-2.235097,-8.235749,-2.105826,6.449351,8.168863,1.576289,-0.972713,-3.895622,-0.247359,9.468392,-1.067623,-7.872498,7.223903,-5.942094,0.895266,-6.251432,2.415323,-6.474769,5.193297,4.813611,-1.485878,-0.503307,-2.069492,4.621595,-2.431633,-5.363005,-6.848579,3.166002,-9.725626,-4.693734,-9.379227,-3.874790,4.303897,7.118043,-6.737422,-3.209689,6.025531,4.634245,6.653710,-4.857442,6.620243,-5.840190,0.286691,-7.797715,-7.683559,-7.727460,8.984781,-8.268161,9.681984,-3.217660,-2.002334,-0.627665,7.799774,-9.030011,-8.685235,-3.929483,9.815210,-9.334577,-9.123074,4.599372,5.034503,5.748044,-1.122635,-5.554152,-9.156509,7.996722,5.413653,-0.790163,5.389352,3.411210,-6.431555,-0.128748,-9.825346,-6.855780,8.789297,4.880186,9.700039,8.970109,-8.696750,4.264370,-6.703410,-1.565493,-7.969768,4.725103,6.177715,-7.783056,-3.451077,3.436441,1.823378,-8.860343,0.519865,3.658545,-1.409417,-2.645442,-6.596568,0.300202,-5.146969,-7.260631,2.895267,1.178328,-5.005094,-2.383007,-7.015716,-2.462884,7.883153,-5.183226,-8.018707,-8.027479,-7.819271,-7.934661,-9.861948,-3.599415,1.867256,-6.671809,-4.871889,7.050275,4.196354,4.323188,3.812982,1.534825,-9.840612,-6.211169,9.465584,-2.200589,8.345235,7.441116,-4.356434,0.529929,-4.901429,-4.536896,8.813633,-7.704548,0.677909,-9.512588,6.245465,-2.277087,7.014625,-6.744493,9.221008,-6.477970,2.777594,-9.744203,5.653581,4.745561,0.236367,-2.132426,2.842328,1.195122,0.989612,-8.145002,6.479142,-6.330702,3.106122,-5.214104,9.764597,5.456498,-4.072561,9.758542,5.917901,1.399023,-1.228321,2.972430,-6.402607,2.244321,-1.122946,-8.871461,-7.763882,-6.370157,-2.395672,-3.562104,-8.228510,-7.743847,7.945846,-9.712800,2.789356,-1.650798,-9.235572,2.724622,-0.203843,-1.821378,-5.850095,3.537499,7.737267,-6.216135,-4.697362,-4.657028,2.745676,0.230373,-4.188066,9.342054,6.780281,9.826930,-2.705064,2.244301,5.511668,5.764863,-1.518392,-8.073384,2.109432,6.381279,4.946780,-9.692923,0.401591,-9.881765,6.703007,8.040455,0.810534,-0.962839,4.409683,-9.512092,0.891521,0.268568,-6.945427,-1.860575,-0.075022,8.323323,3.066345,-2.218228,7.634430,-4.728135,2.606768,-9.170515,-4.566830,-8.325181,-6.351814,2.547402,-0.709126,5.825878,-2.014837,-5.356838,-2.293256,1.043541,4.424543,-0.289147,-5.951239,-4.198492,-2.164563,-5.531989,4.120707,-4.163328,1.950562,-8.378252,-4.130732,8.556726,9.452230,-7.838300,9.893838,7.716357,5.309472,-9.676858,-0.337788,8.447598,2.196434,9.253779,-5.967803,-4.463030,6.422516,-9.979766,-0.579579,7.194602,3.798846,7.272585,5.431680,-6.925563,-5.373361,-3.687880,7.393608,9.669520,2.214281,7.107580,2.425949,5.709352,-7.102195,-5.294117,9.103193,-6.967106,6.718893,-4.359090,-0.584671,-9.486687,1.921347,3.462328,-4.385933,3.808029,-6.384171,-5.012185,-6.671872,-1.515818,9.444465,3.942620,-8.744636,9.144714,-2.831400,-0.596513,-9.177767,2.555932,0.634042,-9.330625,-7.556864,7.071971,6.645046,-4.141796,-1.531556,-7.163277,7.816750,-3.379013,-3.092563,-5.429013,8.404875,2.982904,4.469348,4.375704,-3.272784,-4.202027,7.391760,0.537192,0.193267,-8.339072,-0.490480,6.233512,8.512971,-7.859767,-7.520586,-4.564116,4.991451,3.140307,-3.764666,-3.514451,4.357698,8.357558,-0.257230,8.098118,-2.211542,4.658203,-5.125132,4.601052,8.317739,1.710820,-9.080948,4.667381,-9.641764,-1.941062,-1.542055,2.995173,5.559885,-3.923274,4.833245,-2.688272,-0.046326,-1.526254,-9.901772,-5.594112,3.093601,3.730025,7.787505,-4.998097,-0.659448,-7.078553,3.931510,-1.282870,7.985668,-2.179188,-3.019113,-3.104187,3.841608,0.578245,-7.251080,3.979583,-4.099949,0.362651,8.200693,4.415309,-8.609401,-5.583410,3.882466,0.346188,-7.321320,7.362736,-2.003499,3.828216,-1.419911,3.135929,-2.599436,6.662040,-0.967936,-9.994053,-9.624437,1.081607,6.099087,-4.680017,-8.696671,1.980673,3.546267,1.331910,0.595417,8.897261,9.146878,-6.887677,3.403140,-7.292506,0.108783,-8.871511,-3.837569,-2.048959,7.746055,-3.652893,-7.918473,-9.199383,-6.573404,5.122034,-5.690040,-0.470509,-5.231471,8.706974,-7.842645,0.336979,-9.745235,9.207546,8.861675,2.027026,-9.049399,-7.157725,8.500508,-5.408736,-4.828371,3.252791,5.204178,-9.595580,7.676410,8.814710,-9.113503,6.082642,-0.020642,9.560208,-4.478349,6.608036,0.833386,-9.552905,-5.493215,-7.673582,-0.848246,-2.455909,6.063723,4.979958,-3.999126,-7.078130,4.961373,-1.143294,-2.166361,8.739106,-6.698912,1.772747,-6.694729,-8.887918,7.482432,0.723889,0.451136,5.437281,9.068927,6.481294,2.592628,-7.162088,1.367398,3.723554,-1.394311,-1.792972,7.080767,-4.571781,3.267649,-5.502784,-7.529195,7.980643,8.623563,-6.559784,5.289425,6.545096,-7.719626,-7.712289,-5.692538,6.649427,-2.845503,9.826314,-8.565379,-6.407803,-1.549370,-6.434783,-2.728369,-9.189840,-1.039109,-4.514472,-0.673591,-3.474929,5.384848,-2.181318,-1.960309,5.938143,-3.896138,-5.846101,-0.400311,-0.894347,-2.861522,9.110751,-7.089734,-1.221425,8.792163,7.378170,-5.690875,-7.583287,-5.851611,0.883584,-7.544905,0.497603,1.886325,8.666253,-6.575471,5.168666,-7.969607,-0.539794,-3.685120,7.264914,2.725210,-8.913674,2.181056,-7.802364,3.407354,-7.271748,-8.881186,-5.037974,-3.265090,4.576448,-3.977874,4.272772,-3.309572,1.083156]], dtype = "float64")#candidate|1683|(1, 648)|const|float64
call_1682 = relay.TupleGetItem(func_306_call(relay.reshape(const_1683.astype('float64'), [6, 12, 9]), relay.reshape(const_1683.astype('int16'), [6, 12, 9]), relay.reshape(const_1683.astype('float32'), [6, 12, 9]), ), 2)
call_1684 = relay.TupleGetItem(func_310_call(relay.reshape(const_1683.astype('float64'), [6, 12, 9]), relay.reshape(const_1683.astype('int16'), [6, 12, 9]), relay.reshape(const_1683.astype('float32'), [6, 12, 9]), ), 2)
func_909_call = mod.get_global_var('func_909')
func_913_call = mutated_mod.get_global_var('func_913')
var_1689 = relay.var("var_1689", dtype = "float32", shape = (30, 2))#candidate|1689|(30, 2)|var|float32
call_1688 = relay.TupleGetItem(func_909_call(relay.reshape(var_1689.astype('float32'), [15, 1, 4]), relay.reshape(const_1683.astype('float64'), [648,]), ), 1)
call_1690 = relay.TupleGetItem(func_913_call(relay.reshape(var_1689.astype('float32'), [15, 1, 4]), relay.reshape(const_1683.astype('float64'), [648,]), ), 1)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
const_1695 = relay.const([10,5,3,10,-9,10,7,-3,-10,-7,-8,9,2,7,-5,-10,-2,-6,3,7,-10,-1,-6,-6,-1,-9,3,-4,-9,4,7,7,-3,4,-1,-5,-8,10,3,4,10,-2,1,-10,4,2,-10,-3,-4,-8,-10,7,-1,3,4,7,-1,9,-4,-10,-6,2,-5,-10,1,-5,-3,8,1,8,-1,1,6,1,10,-8,8,-4,-4,4,-2,-8,-5,-1,-10,-2,-5,-2,-5,-9,-8,3,7,-1,-2,8,-5,-9,3,-7,-10,-3,-3,6,-9,7,3,3,7,-3,-8,3,7,6,-3,-4,-1,9,-3,-6,-9,-10,-2,6,-7,-10,-2,-10,8,-9,-8,-5,-10,-5,-7,-5,-3,-3,-6,-6,-8,9,1,8,-5,10,10,2,-8,-2,9,5,10,7,-9,-10,1,-6,9,10,1,-5,5,-2,6,2,-3,7,7,1,9,2,3,10,1,7,-10,-4,2,10,2,-1,-8,-8,2,-10,5,1,-1,-1,1,-6,-10,7,-10,8,-8,-7,-7,3,8,-2,-7,-10,-4,-1,-9,-9,1,1,-3,-3,9,-9,-9,-8,6,-8,1,-1,1,1,1,8,-5,3,-5,-1,8,-1,-4,2,8,-3,9,5,6,-9,5,-8,4,8,-6,6,-3,-1,-7,-5,4,-6,-3,-3,9,5,9,4,-3,-5,-5,4,-9,3,7,-2,7,4,-3,9,8,5,5,3,2,-8,-10,-5,7,-6,5,3,-10,-3,3,2,-4,-3,6,1,-3,-7,1,-3,-9,3,8,7,5,10,10,3,1,-6,-1,9,6,-10,-7,7,1,1,10,-9,7,-6,3,2,-5,-3,7,-4,-7,2,-5,-1,1,-10,-9,7,-8,3,-2,7,7,-8,9,7,-4,9,10,-10,1,3,8,-6,-2,-10,-5,-6,5,7,5,10,-3,-1,-7,3,10,8,5,-4,2,-5,-1,1,4,1,-2,-1,8,-9,4,4,9,9,5,-2,9,4,-8,-9,-5,-4,-9,-3,8,3,5,5,9,-9,-9,-1,-8,-2,2,-1,-10,-3,1,-8,-9,2,-10,9,10,4,-8,-2,2,5,3,-10,-2,-6,10,-3,-6,-4,-3,-8,2,4,10,8,-10,-5,-8,8,7,-2,-9,-7,-3,3,-5,-9,-6,-9,-1,-8,10,3,-8,8,6,-4,9,2,-4,8,-10,6,-1,2,-2,10,4,9,-8,-7,1,1,-5,-1,-8,6,-5,-5,9,-8,-8,4,4,1,-4,-6,2,-2,10,3,2,7,-6,-4,10,10,10,9,1,8,10,8,-3,8,6,5,-5,-5,-5,-7,-3,-2,-3,9,-10,-7,4,2,-10,3,4,-3,-10,-9,9,1,-3,5,5,7,-4,8,4,7,2,9,8,4,-2,7,7,5,3,5,7,-5,-8,9,5,-5,6,5,-8,5,2,-3,-10,-10,-8,4,8,-4,-4,-2,1,-10,-3,-2,-3,-1,1,-5,-10,-5,-1,4,8,-10,3,3,-9,-2,7,-3,2,-7,-6,3,9,-4,7,-2,8,-9,-3,-6,5,-7,1,-3,2,6,-2,3,9,2,9,-2,7,9,-4,-4,-2,-3,1,-6,6,10,-2,-9,-4,8,-4,-10,2,3,-2,-6,10,-7,-5,-3,-6,-9,9,1,7,-7,-8,6,-6,-7,-7,-5,2,1,7,-8,-8,3,-3,9,2,2,2,-1,8,9,10,-6,5,2,9,7,5,5,4,9,-1,-7,1,-3,5,6,-5,-10,8,-4,-1,6,-9,-5,4,-9,7,8,-4,-6,-3,6,3,-8,-9,-9,3,6,4,-7,5,3,-1,-9,4,-6,8,-4,-10,-3,7,9,7,2,-7,2,-4,-4,-10,2,10,10,1,-2,-10,-2,-9,7,-8,-7,-7,-9,-6,5,-7,9,-6,7,4,-10,4,-1,3,-9,4,-8,-7,-1,-1,8,-5,5,-7,-1,-2,5,-3,9,2,-8,5,9,-4,-6,9,1,2,-7,8,10,-1,8,-1,1,-6,-2,-9,-5,-1,6,-7,-4,-4,-6,1,4,10,5,8,5,-6,-5,7,-6,2,-6,8,6,3,4,-9,-3,10,-2,-3,-2,-3,-4,8,-9,-3,-7,-7,2,-6,-5,7,-6,7,3,7,10,2,-10,-3,1,4,-6,-3,-4,-7,6,6,-10,1,2,9,-8,6,-3,7,-7,-4,-3,-3,7,-5,-5,6,5,-1,5,-10,2,3,7,9,-10,-8,9,-1,3,-9,10,-4,-5,3,-4,5,1,1,-5,-3,-3,-1,4,9,1,-6,3,5,6,10,-4,-7,-2,-4,-1,3,10,6,-7,1,-3,8,-10,6,2,9,-10,1,-7,10,-6,1,8,-1,-2,-2,1,5,-4,1,-8,1,7,1,-1,-9,3,-2,-9,5,-5,-8,-8,2,-3,-7,1,8,-4,-1,9,1,-2,-2,-5,-2,-5,-1,-5,-4,-5,-9,3,-4,6,1,7,-7,4,-10,8,3,4,8,-6,8,-5,8,4,-4,-9,-8,-4,5,-6,-1,1,-8,8,4,8,5,-1,-3,5,7,-2,-10,2,6,-2,-10,1,-8,4,10,6,-9,-8,-3,-10,7,-7,-8,-2,-7,-3,7,-7,-10,-9,-6,8,1,6,9,4,9,2,-2,-4,-9,8,-9,-1,9,-1,-4,-8,5,10,-3,-9,-8,10,5,9,-10,-10,-5,8,-10,8,-10,-10,4,10,-4,10,9,-2,-5,-8,1,2,8,1,-2,3,-9,8,5,-3,-6,3,-4,-2,9,3,-8,7,6,-4,-8,2,-2,-3,6,-7,10,10,6,-2,-1,-6,-10,5,-10,-8,-5,-8,-9,-5,-6,1,-4,-1,-4,7,7,-6,-6,-7,-7,-5,-3,1,-5,-1,9,-8,-3,-3,-1,6,-4,9,1,-4,-10,5,3,7,2,-10,10,-2,-6,-1,5,-9,10,-7,-3,-1,2,-6,2,5,-1,-3,-3,-5,-9,-8,-4,3,4,-4,3,-1,3,-1,1,9,3,5,8,-4,6,3,-8,3,8,-8,5,9,-7,3,8,-3,5,-4,-8,1,-10,-4,-3,-10,-4,-6,-10,-5,5,6,-9,4,-7,-6,-7,-8,1,7,9,-7,-8,10,-7,-6,2,-6,2,-6,8,-5,8,4,-5,5,8,7,-4,5,-3,-4,2,-7,-9,5,-2,2,4,-9,-5,-5,6,-1,8,-4,7,-5,9,5,-4,5,1,-7,-3,5,3,-3,1,-1,-1,1,6,-7,9,-5,4,-10,9,-1,-4,-10,-10,5,-8,2,3,7,1,-6,-8,1,3,9,9,-2,-10,-1,7,2,4,5,9,-1,-8,9,8,-9,3,4,-10,4,-1,2,3,-5,2,-8,-2,1,6,7,4,-6,4,9,-6,-7,10,-5,3,-3,10,6,-10,5,1,-9,-7,-1,5,-6,5,-10,-3,9,4,3,-5,9,7,9,-3,-4,5,1,5,3,-1,6,-7,-1,9,7,2,9,-10,-7,9,5,-7,6,-6,-6,1,2,-9,8,-7,-3,-5,-8,3,9,-9,5,-1,-1,-9,5,-9,7,9,7,2,-7,-4,-1,-2,-8,5,10,6,6,-8,-7,-7,6,-2,4,-5,-1,5,8,4,-2,-1,8,4,7,2,-9,-10,7,-8,-6,-1,3,-10,-7,7,5,4,9,7,9,10,10,-3,-4,7,5,8,8,-1,4,6,7,-3,5,-2,9,4,-4,6,9,7,-5,-4,-2,-8,2,-6,-4,-7,8,5,1,-9,-6,4,-10,7,-7,8,5,-6,2,8,-2,6,2,9,9,-2,-5,-10,7,-2,-8,4,8,10,5,-7,3,-8,3,10,-5,8,-7,7,-6,10,1,9,7,1,-9,8,-10,-5,-4,-8,7,1,4,2,8,6,-8,-9,6,9,-6,5,5,-10,7,10,-4,10,10,8,3,-5,8,-8,-2,10,-5,-4,7,9,-2,9,-9,-3,-10,5,6,-4,4,9,-10,5,-3,6,-5,-3,-4,-4,-1,2,-10,5,-8,10,-5,-9,-9,-10,3,4,1,-4,2,-7,-7,-4,-5,2,-2,-5,-5,-9,7,9,-7,8,10,2,4,-5,-6,7,-10,5,3,-6,-2,-5,6,1,-6,-1,2,8,-1,-6,-4,10,-2,-5,-5,-5,7,8,-3,9,9,-8,3,7,-3,-3,-6,10,-8,-4,5,9,-1,-9,5,6,8,-5,1,5,8,10,2,3,4,-2,1,5,8,6,2,9,9,-10,-9,4,-6,-3,-6,-6,-6,-3,10,8,-2,5,-10,3,-10,10,2,9,10,-4,-8,9,1,-2,-10,10,7,-5,2,6,2,3,10,2,4,8,-8,-8,1,-9,10,-2,-7,-4,4,2,6,2,7,-9,9,5,-6,-6,10,-7,-7,9,-7,-4,3,-9,-1,-8,-4,-1,4,-10,-6,-7,-10,-9,5,-2,1,3,1,-4,2,1,8,-7,-8,1,3,-2,-4,1,-9,10,-8,5,-5,-10,-2,1,4,10,-6,6,1,-2,1,2,6,-1,5,4,6,6,-6,9,6,-10,2,-2,3,10,7,5,6,-10,1,-2,7,-8,7,-10,9,-5,-7,-6,3,6,7,-3,-7,-5,-6,-7,5,3,3,4,7,-2,8,-5,-5,-9,4,7,-7,-10,-9,6,-2,-5,6,6,-9,-6,-8,8,-5,8,-10,-9,-5,-2,7,8,8,-6,-1,6,3,-8,6,-6,2,-8,-7,1,-7,-6,-2,-4,6,-3,-2,-10,2,8,4,8,-8,-8,5,-8,-6,-7,-9,-9,8,-5,-2,5,-2,3,-7,-10,7,-1,-1,3,3,6,-10,6,-8,10,5,3,10,-3,-6,3,3,4,-3,3,-8,8,5,-7,7,2,-5,-1,-2,-4,-7,10,5,8,-4,5,-2,-1,1,10,5,1,-7,-7,-7,5,-1,6,2,5,-4], dtype = "uint32")#candidate|1695|(1872,)|const|uint32
call_1694 = func_996_call(relay.reshape(const_1695.astype('uint32'), [13, 16, 9]))
call_1696 = func_996_call(relay.reshape(const_1695.astype('uint32'), [13, 16, 9]))
uop_1709 = relay.sigmoid(call_1682.astype('float32')) # shape=(6, 12, 9)
uop_1711 = relay.sigmoid(call_1684.astype('float32')) # shape=(6, 12, 9)
func_513_call = mod.get_global_var('func_513')
func_516_call = mutated_mod.get_global_var('func_516')
var_1727 = relay.var("var_1727", dtype = "int8", shape = (1755,))#candidate|1727|(1755,)|var|int8
call_1726 = relay.TupleGetItem(func_513_call(relay.reshape(var_1727.astype('int8'), [13, 15, 9])), 0)
call_1728 = relay.TupleGetItem(func_516_call(relay.reshape(var_1727.astype('int8'), [13, 15, 9])), 0)
output = relay.Tuple([uop_1673,const_1683,call_1688,var_1689,call_1694,const_1695,uop_1709,call_1726,var_1727,])
output2 = relay.Tuple([uop_1673,const_1683,call_1690,var_1689,call_1696,const_1695,uop_1711,call_1728,var_1727,])
func_1730 = relay.Function([var_1672,var_1689,var_1727,], output)
mod['func_1730'] = func_1730
mod = relay.transform.InferType()(mod)
var_1731 = relay.var("var_1731", dtype = "float64", shape = (4, 14))#candidate|1731|(4, 14)|var|float64
var_1732 = relay.var("var_1732", dtype = "float32", shape = (30, 2))#candidate|1732|(30, 2)|var|float32
var_1733 = relay.var("var_1733", dtype = "int8", shape = (1755,))#candidate|1733|(1755,)|var|int8
output = func_1730(var_1731,var_1732,var_1733,)
func_1734 = relay.Function([var_1731,var_1732,var_1733,], output)
mutated_mod['func_1734'] = func_1734
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1906 = relay.const([[[0.368587,3.549610,-3.223351,5.172172,-9.030412,-1.978058,-0.047167,-0.125476,8.404294,5.287993,4.215655,7.762643],[2.363642,-9.294546,-1.911447,8.549095,-2.842981,-0.564347,2.656616,-5.932178,-2.319099,3.055428,8.708319,6.640691],[-6.346741,3.108432,-0.416271,6.977489,2.901937,1.263572,-1.814480,4.824914,-7.866199,6.214039,-2.164547,5.629499]],[[-8.669790,9.864871,-4.905526,-4.933834,2.902336,7.642752,-0.170296,4.722897,-3.475507,4.287854,3.019534,0.063498],[4.645000,1.769145,6.243521,-4.475211,7.693794,6.516228,-3.783358,-5.640539,3.788452,7.715884,5.562459,3.107652],[9.377614,-6.821139,-2.987060,-1.287884,-0.279744,8.117858,8.876425,3.542881,5.739320,-1.457416,-0.812970,-9.200446]],[[-5.877228,9.629236,-5.618713,-9.427219,5.124837,4.178518,-9.485635,6.309518,2.149259,-1.808113,-8.376830,-2.901097],[-3.039842,9.929579,4.567575,-5.343277,7.069545,8.223424,2.793005,-0.970629,-8.210458,-7.142194,1.173604,8.015757],[-4.540139,4.801246,7.469426,-0.602859,7.619063,-4.231666,5.194991,-1.267433,-7.570574,3.860459,5.303577,3.254467]],[[4.274738,1.370707,2.569700,5.785644,-3.027918,5.065557,-8.353940,-8.895385,1.877918,9.925871,2.432358,-3.194371],[3.762345,1.179221,4.519135,2.098963,-2.385966,4.733909,3.670430,6.180276,-9.725388,-6.115653,4.037420,-2.103526],[4.569351,6.279818,6.070252,5.742623,1.672278,-2.316819,6.196769,2.216918,-0.256117,0.090794,-4.033581,6.095425]],[[4.544698,8.787348,-6.879209,-7.724756,3.439211,4.977735,2.372254,-3.663915,5.125610,3.069182,-4.804781,4.113516],[3.567034,-1.412141,4.913634,-3.408495,6.545938,1.181029,5.657802,-5.172717,-2.738331,-6.895816,-4.239407,-1.374316],[9.609004,-3.421355,6.388604,-6.909065,-5.888288,-3.400149,-2.960656,7.582839,-3.874248,-3.351064,-0.682206,2.590110]],[[-2.843292,-2.003313,-8.394527,-5.076521,-5.313543,0.879445,-9.214787,-4.091301,-9.509336,6.427826,-1.131095,4.169673],[9.720276,-2.504687,-1.355861,-9.510230,8.351898,6.335070,-2.981641,4.492230,-0.546974,-9.873752,-7.287530,8.820145],[0.976049,-3.651572,2.396135,-5.445748,8.030008,-2.158407,-1.039131,-1.836686,0.129063,9.547735,7.810871,-4.349491]]], dtype = "float64")#candidate|1906|(6, 3, 12)|const|float64
uop_1907 = relay.log(const_1906.astype('float64')) # shape=(6, 3, 12)
output = relay.Tuple([uop_1907,])
output2 = relay.Tuple([uop_1907,])
func_1911 = relay.Function([], output)
mod['func_1911'] = func_1911
mod = relay.transform.InferType()(mod)
output = func_1911()
func_1912 = relay.Function([], output)
mutated_mod['func_1912'] = func_1912
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1976 = relay.const([[[8,5,5,-9,5,4,-5,4,8,7,7,6,2],[2,9,-7,-1,7,10,-1,-7,10,-7,-3,-6,10],[6,5,-5,-3,2,-1,4,1,2,-9,-8,-5,3],[2,6,5,10,-9,6,-9,-4,3,6,6,-7,-1],[5,-8,1,10,-1,-1,-4,8,-2,10,5,8,9],[-3,8,-1,-7,-1,-10,8,-5,-4,7,3,-9,9],[-8,7,-10,6,-2,3,6,10,5,7,4,1,5],[3,6,-8,-1,-4,5,9,6,9,-5,8,-6,2],[-8,3,6,7,-10,-8,2,-1,3,4,-1,-1,-3],[-8,6,7,2,9,-8,2,1,-8,-4,-10,7,6],[9,8,-6,9,6,-6,-7,-8,1,-2,2,5,-7],[4,-9,5,8,9,8,4,5,-2,-4,7,10,10],[-9,9,10,-1,-4,10,-8,3,-7,9,8,-4,2],[10,1,6,-4,6,-8,6,1,-5,-5,6,7,3],[9,-10,1,4,9,-3,-7,-9,-6,-9,1,8,4]],[[7,1,9,-1,2,-10,-3,-6,-3,7,-8,-9,2],[2,-7,5,-8,-7,-6,-5,-8,5,-3,10,-6,8],[-2,2,8,-5,10,2,-8,-2,-5,5,1,7,-4],[10,5,-5,-8,10,-1,-2,9,-7,-10,3,8,-1],[1,5,-6,-5,-4,8,7,7,-5,9,2,10,6],[7,5,-5,5,-10,-4,2,5,-9,9,10,-6,7],[6,-9,-5,8,-6,6,2,4,3,5,5,-10,-3],[-10,9,4,9,8,2,3,9,-1,7,1,1,-6],[4,-3,-6,4,10,-9,-3,-2,10,-5,7,4,-9],[-2,2,7,5,1,-10,-5,2,1,10,10,-1,1],[-1,9,-9,-10,-8,5,6,-5,10,9,3,-9,3],[4,-6,-9,-1,5,-9,1,2,3,3,-6,-7,6],[5,4,5,-2,-3,8,-1,-4,-9,-2,-2,-1,-2],[-7,-2,-10,10,-4,1,8,9,8,8,-2,4,8],[-8,10,-5,-10,3,3,5,-8,3,10,1,-4,9]],[[-6,10,8,4,-8,8,6,-10,-3,-6,3,9,3],[-3,-9,-3,-5,10,10,3,2,8,3,9,-4,8],[-4,3,9,6,-8,4,9,7,7,-7,-3,9,2],[-1,2,-6,-8,-6,4,-6,9,6,-1,9,-4,7],[3,5,-1,-4,8,9,-10,5,-7,8,9,7,-8],[-10,-5,2,-2,-3,-3,-7,-8,9,3,2,4,-7],[-6,7,-3,6,3,-5,-5,9,7,9,2,3,-3],[-7,-7,-2,-1,4,-3,1,10,-10,-6,3,4,-9],[1,4,-7,10,7,6,10,-3,2,-10,2,7,10],[-1,1,1,-2,-3,5,-2,5,2,7,10,-1,-2],[-2,-3,7,7,6,8,-2,-6,6,9,3,7,-9],[9,-1,7,10,-6,-5,-4,10,8,5,-8,1,2],[-1,6,-10,-1,6,4,7,-2,4,3,10,-7,5],[-5,5,2,8,5,3,-9,-4,-4,3,-3,-3,-3],[10,-7,-5,3,2,5,1,2,-6,4,3,2,5]],[[-5,4,1,-9,-8,5,-4,7,10,1,-4,10,8],[-8,-1,8,5,-5,-5,-7,1,-6,-10,6,3,-10],[4,-6,5,-3,-1,4,10,-2,-6,-9,10,1,10],[-10,5,-1,9,-9,3,3,-2,8,6,8,1,-8],[5,-3,-9,8,-2,-10,6,7,3,3,-7,-9,3],[7,-7,4,-6,-8,9,-8,-7,-4,-10,-2,1,10],[8,-4,-9,4,-6,9,-5,-9,-5,5,-7,-4,-2],[-10,2,2,9,1,-7,-3,3,-8,-1,5,6,-7],[-1,-10,9,-5,-9,-1,4,-6,6,3,1,8,-8],[7,2,-7,-5,5,4,-5,6,-3,9,-1,-7,6],[8,10,-8,-2,-1,5,-3,-9,10,-3,-1,9,4],[-7,-6,10,9,-2,7,9,-10,-3,5,-3,6,-3],[10,7,2,6,-8,-4,6,-4,-7,-10,-5,3,3],[-5,1,5,10,7,7,1,-2,2,8,-1,-7,3],[4,-4,-3,-7,8,6,-6,-1,-8,8,-7,8,-6]],[[-2,9,-7,-3,-1,1,-1,-10,7,1,8,-10,7],[-7,-3,-5,-6,-10,9,-5,10,-6,4,-7,1,1],[-5,-6,-8,-9,-5,-6,1,5,9,-8,-7,9,2],[4,-2,-1,-6,3,-9,7,-7,7,8,7,4,-8],[2,2,-3,-9,3,-6,-6,-3,1,3,2,5,-3],[-9,10,10,7,7,-10,9,-6,-2,-1,-1,4,10],[3,-6,-8,5,-4,-9,9,-1,4,-2,-4,-5,1],[7,10,-1,-3,-1,-4,10,-1,7,8,-1,-9,-3],[9,-7,-5,-6,-2,-10,-6,9,-9,-5,9,-10,-3],[9,6,-4,9,-3,-8,1,-6,8,-4,-9,5,3],[10,-2,6,7,-3,-5,4,9,9,-3,-1,-6,-7],[7,-2,9,4,5,3,10,-2,-10,-4,-10,9,7],[-6,6,-9,9,-3,-1,10,-9,-7,2,-5,-10,1],[2,-5,1,-2,-7,2,-2,2,4,-1,-8,-1,10],[3,4,9,-4,-7,-6,-4,1,8,-2,7,4,-10]],[[-8,5,8,-9,-9,-8,-5,-10,5,-5,-1,-10,-5],[1,-6,-4,-4,2,6,-4,-2,-10,9,-9,5,9],[-8,10,-5,-5,-4,5,7,-9,1,-7,-6,-1,8],[-9,7,-10,-8,-10,-3,-4,-3,4,8,-2,7,-3],[8,-7,-5,1,6,-9,-2,-5,-4,-2,2,7,-9],[9,10,-8,8,-5,4,7,7,-2,4,6,10,5],[3,-2,-2,-8,-2,1,4,3,3,-7,7,-1,-1],[-1,6,3,-9,-2,3,-3,6,5,9,-7,-9,3],[6,-8,-3,-7,4,-8,2,-6,-8,2,-1,4,-6],[-4,-9,-2,3,1,-7,-4,-8,-6,2,9,-10,-6],[9,-3,-4,1,-6,-8,1,4,8,10,2,-8,9],[6,8,2,-5,4,4,3,-8,-8,10,6,-1,6],[6,10,1,7,-10,-9,-6,4,-8,-9,-8,5,8],[-4,2,2,5,-5,8,8,-3,-2,-3,8,-5,-10],[-3,-9,-8,7,4,-10,-9,-5,-9,4,-1,-2,5]],[[8,6,-3,2,-7,6,2,3,-8,7,9,6,1],[-2,-4,2,6,-9,-6,-8,1,10,3,3,8,-5],[-9,10,2,2,8,-9,1,-1,7,3,5,-1,-7],[-2,-6,1,9,5,7,7,-1,-10,-4,-3,-4,1],[10,-10,6,-3,8,-8,-9,-6,2,2,4,8,-4],[-1,7,-8,3,7,9,-4,8,-1,6,-5,-3,-4],[8,-6,-2,1,-10,10,6,-5,-9,-9,10,6,-9],[6,8,10,-1,10,-3,7,-9,-7,4,1,10,10],[2,-7,7,-5,-3,-10,-1,-10,-1,-8,-3,7,-6],[3,-6,5,1,1,3,-2,10,1,-2,6,7,4],[-8,9,7,9,5,3,5,-3,-7,7,6,-1,-10],[-2,2,8,4,3,9,5,7,1,2,-2,-8,-6],[-6,5,-5,-2,-10,6,-8,-5,2,-3,8,1,-10],[8,-2,4,-3,-2,5,-3,6,1,10,-3,8,1],[1,-5,-9,-9,-9,-6,2,-3,4,4,-5,4,-2]],[[8,-4,-3,5,6,-3,4,7,-8,-10,10,7,5],[-8,9,-7,-10,-10,-8,3,8,10,-1,3,-8,8],[-8,1,-9,6,10,5,-6,5,9,-9,-5,10,-6],[5,6,1,10,-9,4,7,9,-4,-6,-1,6,-3],[-9,-8,5,-8,-9,-7,4,10,-3,1,-8,9,3],[-10,-1,1,7,4,3,5,2,2,9,-3,-8,4],[-9,-9,-4,5,-5,5,6,-6,-1,2,6,-9,-6],[7,7,8,-6,-2,10,-6,-2,7,-8,8,7,-3],[3,-7,-6,-3,-8,1,-1,-4,10,6,-9,-1,-7],[8,-8,6,-3,-2,-9,-2,-9,-1,-7,1,-3,9],[-9,10,-9,1,-9,3,-10,-3,-2,-6,-9,3,-9],[3,-3,-7,5,10,8,-3,8,1,3,-7,-10,-7],[-9,8,7,4,-6,-2,-10,4,4,5,5,10,-1],[-4,1,3,-2,-9,-2,6,-4,6,-3,-2,-10,-6],[4,-3,-4,-9,8,4,2,-10,-6,4,-7,6,3]],[[-6,4,9,10,2,-1,-7,-2,1,-4,-10,-7,2],[7,3,-3,-4,-1,-4,5,4,-6,6,-2,4,8],[-6,-10,-1,6,6,5,6,-3,8,8,-5,-5,-2],[10,4,-2,6,-1,-9,-3,8,-7,5,-7,-7,6],[-9,4,9,9,-3,4,-5,6,-3,10,-8,-6,-6],[-7,7,-6,-6,8,-6,9,-8,-9,-9,8,6,3],[-5,-9,1,-6,1,5,-4,-5,9,-2,-8,-1,-5],[-10,7,5,2,6,9,-4,-6,10,-3,4,8,3],[4,4,3,10,-7,5,-8,7,-3,-8,3,2,-4],[9,10,-9,-6,-6,8,2,-1,-9,5,8,8,-8],[-5,-6,-5,-2,-7,-9,-5,5,-3,1,1,4,-5],[-6,8,3,-4,-4,-3,4,-7,-4,-10,-8,-5,8],[10,-2,4,-9,1,8,10,-4,6,3,-3,-10,8],[-7,-8,9,-6,-6,-10,-3,-6,8,-10,-8,-10,-4],[2,7,1,-2,-6,-10,3,-3,2,6,6,5,-6]],[[-4,8,1,-1,9,-2,-4,4,-1,1,-4,9,-10],[-3,10,-8,8,-4,5,7,9,6,8,-7,-9,-2],[-1,2,-5,-4,6,1,9,3,3,7,7,-5,-3],[5,-3,6,9,5,5,-1,3,-5,9,4,5,-2],[-5,1,-1,2,3,-10,-8,-8,-4,5,3,10,7],[-2,7,9,2,10,6,9,-1,-6,4,3,-5,5],[-10,9,-1,2,-6,-10,2,-4,-5,10,4,7,9],[5,-10,-9,-7,10,9,6,6,4,9,6,10,9],[1,-3,-6,2,9,8,2,-4,3,-8,9,5,-9],[9,7,5,-2,6,-5,5,4,1,-5,-6,-8,-5],[6,4,-1,5,1,-5,8,-2,-2,10,2,1,-10],[-6,-3,5,1,5,2,-1,3,5,-9,-6,-6,8],[-10,5,-6,-8,2,-10,-5,-4,-8,10,-2,3,-2],[2,-7,-5,-9,-9,-3,-6,2,-9,-5,-4,9,4],[-8,1,-8,-7,-3,-4,-7,7,-9,7,1,8,9]],[[8,-5,9,1,-3,-5,8,7,10,6,-5,4,-8],[-8,-2,-10,6,5,1,5,7,-6,-8,6,8,7],[8,-7,-8,-5,-5,3,2,-7,3,7,-2,4,8],[7,-3,1,-10,8,-7,-8,-9,4,-8,2,-4,1],[4,5,-5,-9,-9,-2,3,6,-4,-4,7,4,-10],[-7,7,-8,3,-2,6,-9,-4,-3,-10,6,-5,-6],[-8,-8,-7,3,-2,3,-6,4,-8,8,-3,-6,-2],[-6,3,-9,-2,-9,5,3,5,-3,-2,-3,-1,2],[-2,8,3,10,5,8,8,8,-1,1,6,-7,4],[-9,-2,10,9,7,1,9,9,-5,5,2,-4,-2],[-10,9,8,10,8,4,-7,1,-10,-4,-8,-8,4],[-8,7,-7,8,1,-5,-8,1,2,6,-6,4,7],[-10,-4,7,1,4,10,-5,10,2,-2,-3,-10,8],[3,-7,3,-7,10,-10,7,10,-8,6,2,7,2],[-8,6,10,7,2,-3,-8,-3,5,-4,5,9,-9]],[[1,6,-7,6,10,5,-1,7,5,8,-6,6,-7],[4,-4,8,-1,9,-9,-1,10,4,2,5,7,-5],[-6,4,4,9,1,5,2,-9,-8,-7,8,-10,-1],[8,-10,-2,6,2,-2,-7,-8,4,-6,-8,7,5],[-5,6,3,5,-6,2,2,1,-2,-6,1,-10,-7],[3,4,-7,-4,8,-8,-1,-1,-6,4,5,-6,-8],[-3,7,-9,-1,-8,-5,-3,10,-5,6,1,-8,-1],[-2,-6,-7,-3,6,-3,-6,-9,-5,-3,4,5,5],[-3,-4,-6,3,-9,8,3,3,-4,10,1,6,2],[1,1,5,8,10,6,-5,-4,-6,-10,-4,9,8],[9,3,5,9,1,-1,3,-3,7,-5,-3,-7,-1],[7,-2,1,10,-1,9,2,3,-9,7,7,-3,2],[-3,-1,7,-6,5,-10,-3,-10,2,2,-7,2,-6],[5,-1,-5,3,9,-6,-1,-4,7,-2,10,1,9],[-7,-10,-2,-2,2,-7,5,-7,3,-1,-8,6,7]],[[6,-10,-4,8,9,8,2,9,7,5,7,1,-7],[-8,1,-1,-1,-1,-9,10,-10,-9,10,-4,-4,-10],[-7,8,-2,-6,-10,-7,9,8,1,-6,-10,-5,-3],[-9,8,-7,-2,8,1,-4,-3,4,1,10,3,4],[10,-4,-10,1,2,-2,1,8,-8,-3,-5,4,2],[-9,1,8,5,-8,5,-1,-5,1,7,-8,-4,-7],[-1,-5,7,7,9,1,5,7,7,7,4,-10,1],[-5,10,-4,-3,5,4,7,-5,-7,8,-2,-3,10],[9,8,7,-5,-5,9,9,-7,-6,-6,5,-3,9],[-1,-4,-2,1,3,5,-7,6,-10,2,7,6,-8],[9,5,5,-2,8,-2,-6,-7,10,3,1,-10,-5],[-10,-2,-1,10,-9,-5,-3,-7,-2,-7,-3,-4,-4],[10,-8,3,-5,8,6,-5,10,7,10,8,4,10],[2,-4,9,-2,-8,-8,-8,2,-4,-8,-4,10,9],[-8,1,10,4,-2,7,-3,-9,-9,-7,2,5,-6]],[[6,-5,-1,-8,10,8,2,-8,-5,4,-2,-4,6],[-8,7,2,-9,-10,9,-5,-8,5,-4,-8,4,5],[-9,-4,-5,5,-8,7,5,10,-7,-7,1,-6,-6],[5,8,-5,9,1,-4,5,-5,-9,-2,-4,-7,4],[2,-2,6,-8,7,3,-5,-9,-1,10,9,-4,-10],[9,-9,7,5,-2,9,7,-5,2,-3,10,-7,9],[10,4,4,-1,-8,-6,10,-4,-8,-4,9,5,-9],[7,-5,-2,2,9,1,10,-8,2,4,6,-5,7],[6,-10,-8,3,-7,-10,-2,6,-9,-3,-5,-5,-9],[5,9,1,-5,-2,-10,-6,-9,8,3,5,2,-9],[10,-10,-2,4,6,-9,-8,3,6,-5,-6,-6,-6],[-3,6,-7,-5,-5,1,-10,-7,-9,-10,1,2,10],[-10,8,-7,6,2,-10,-10,4,6,-10,1,-6,-2],[6,6,1,-2,1,8,3,-3,-7,-9,4,-4,-8],[4,7,-2,7,9,-3,-8,4,-4,-6,-1,-9,5]]], dtype = "uint8")#candidate|1976|(14, 15, 13)|const|uint8
var_1977 = relay.var("var_1977", dtype = "uint8", shape = (14, 15, 13))#candidate|1977|(14, 15, 13)|var|uint8
bop_1978 = relay.subtract(const_1976.astype('uint8'), relay.reshape(var_1977.astype('uint8'), relay.shape_of(const_1976))) # shape=(14, 15, 13)
output = bop_1978
output2 = bop_1978
func_1982 = relay.Function([var_1977,], output)
mod['func_1982'] = func_1982
mod = relay.transform.InferType()(mod)
mutated_mod['func_1982'] = func_1982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1983 = relay.var("var_1983", dtype = "uint8", shape = (14, 15, 13))#candidate|1983|(14, 15, 13)|var|uint8
func_1982_call = mutated_mod.get_global_var('func_1982')
call_1984 = func_1982_call(var_1983)
output = call_1984
func_1985 = relay.Function([var_1983], output)
mutated_mod['func_1985'] = func_1985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1989 = relay.var("var_1989", dtype = "float64", shape = (15, 13, 13))#candidate|1989|(15, 13, 13)|var|float64
var_1990 = relay.var("var_1990", dtype = "float64", shape = (15, 13, 13))#candidate|1990|(15, 13, 13)|var|float64
bop_1991 = relay.floor_mod(var_1989.astype('float64'), relay.reshape(var_1990.astype('float64'), relay.shape_of(var_1989))) # shape=(15, 13, 13)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
var_1997 = relay.var("var_1997", dtype = "uint32", shape = (1872,))#candidate|1997|(1872,)|var|uint32
call_1996 = func_996_call(relay.reshape(var_1997.astype('uint32'), [13, 16, 9]))
call_1998 = func_996_call(relay.reshape(var_1997.astype('uint32'), [13, 16, 9]))
bop_2011 = relay.right_shift(var_1997.astype('int64'), relay.reshape(call_1996.astype('int64'), relay.shape_of(var_1997))) # shape=(1872,)
bop_2014 = relay.right_shift(var_1997.astype('int64'), relay.reshape(call_1998.astype('int64'), relay.shape_of(var_1997))) # shape=(1872,)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
call_2025 = func_996_call(relay.reshape(var_1997.astype('uint32'), [13, 16, 9]))
call_2026 = func_996_call(relay.reshape(var_1997.astype('uint32'), [13, 16, 9]))
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
call_2035 = func_996_call(relay.reshape(var_1997.astype('uint32'), [13, 16, 9]))
call_2036 = func_996_call(relay.reshape(var_1997.astype('uint32'), [13, 16, 9]))
bop_2044 = relay.greater(call_1996.astype('bool'), relay.reshape(call_2035.astype('bool'), relay.shape_of(call_1996))) # shape=(13, 16, 9)
bop_2047 = relay.greater(call_1998.astype('bool'), relay.reshape(call_2036.astype('bool'), relay.shape_of(call_1998))) # shape=(13, 16, 9)
output = relay.Tuple([bop_1991,bop_2011,call_2025,bop_2044,])
output2 = relay.Tuple([bop_1991,bop_2014,call_2026,bop_2047,])
func_2050 = relay.Function([var_1989,var_1990,var_1997,], output)
mod['func_2050'] = func_2050
mod = relay.transform.InferType()(mod)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2050_call = mutated_mod.get_global_var('func_2050')
var_2052 = relay.var("var_2052", dtype = "float64", shape = (15, 13, 13))#candidate|2052|(15, 13, 13)|var|float64
var_2053 = relay.var("var_2053", dtype = "float64", shape = (15, 13, 13))#candidate|2053|(15, 13, 13)|var|float64
var_2054 = relay.var("var_2054", dtype = "uint32", shape = (1872,))#candidate|2054|(1872,)|var|uint32
call_2051 = func_2050_call(var_2052,var_2053,var_2054,)
output = call_2051
func_2055 = relay.Function([var_2052,var_2053,var_2054,], output)
mutated_mod['func_2055'] = func_2055
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2090 = relay.const(5, dtype = "uint32")#candidate|2090|()|const|uint32
var_2091 = relay.var("var_2091", dtype = "uint32", shape = (6, 3, 15))#candidate|2091|(6, 3, 15)|var|uint32
bop_2092 = relay.add(const_2090.astype('uint32'), var_2091.astype('uint32')) # shape=(6, 3, 15)
var_2106 = relay.var("var_2106", dtype = "uint32", shape = (6, 3, 15))#candidate|2106|(6, 3, 15)|var|uint32
bop_2107 = relay.left_shift(var_2091.astype('int32'), relay.reshape(var_2106.astype('int32'), relay.shape_of(var_2091))) # shape=(6, 3, 15)
func_1388_call = mod.get_global_var('func_1388')
func_1390_call = mutated_mod.get_global_var('func_1390')
var_2128 = relay.var("var_2128", dtype = "float64", shape = (12, 18))#candidate|2128|(12, 18)|var|float64
call_2127 = relay.TupleGetItem(func_1388_call(relay.reshape(var_2128.astype('float64'), [12, 3, 6])), 0)
call_2129 = relay.TupleGetItem(func_1390_call(relay.reshape(var_2128.astype('float64'), [12, 3, 6])), 0)
func_2050_call = mod.get_global_var('func_2050')
func_2055_call = mutated_mod.get_global_var('func_2055')
const_2136 = relay.const([[2.455680],[-9.167260],[3.111408],[2.732896],[-0.359149],[5.482634],[4.779348],[-9.391322],[-5.040950],[-6.998733],[5.410083],[-6.791190],[3.599116],[4.051343],[4.295828],[5.055263],[-0.208122],[-5.263306],[4.918630],[-2.863491],[-2.958131],[-4.239314],[-9.953739],[-7.163058],[4.043612],[-8.251967],[-4.210721],[-5.633504],[-0.792677],[0.045531],[9.331404],[-3.314815],[-2.413964],[5.077097],[-8.068440],[-1.313037],[-1.181464],[-4.723404],[5.037795],[4.254501],[5.413711],[4.282692],[-0.364233],[-0.115420],[8.570494],[-2.563290],[-4.500788],[-2.789646],[5.862653],[-4.345786],[1.067052],[8.971927],[4.500217],[3.174302],[-1.714230],[-4.402740],[-2.272694],[4.005949],[1.489511],[-1.654610],[-3.090281],[4.683086],[9.449966],[3.223981],[-7.267588],[5.639335],[-2.412112],[7.711174],[-6.087487],[-2.616067],[5.658626],[2.941782],[-1.208330],[-6.698497],[-9.510686],[-8.773041],[0.696613],[4.234552],[-3.226428],[-4.331483],[-6.719687],[-6.496021],[-1.313530],[-6.654066],[-0.570148],[4.962067],[5.648426],[-5.152183],[1.219692],[-8.728280],[1.567800],[-6.933628],[-8.754782],[7.244272],[1.825278],[5.786630],[1.367005],[-6.278143],[3.121440],[3.179301],[-3.117796],[2.330311],[8.578610],[2.740077],[-0.218007],[-8.078986],[5.604397],[7.160310],[-8.289464],[-9.162899],[-1.689899],[3.791726],[6.226056],[0.792281],[-4.258464],[8.728084],[5.420980],[8.932290],[-7.152497],[1.858295],[-6.607866],[-3.620432],[4.899255],[0.935947],[-1.253180],[0.418210],[-0.772853],[6.226122],[-7.121880],[-1.644973],[6.385680],[3.028192],[5.427938],[3.386076],[-7.785376],[-7.277219],[-5.979414],[-6.549070],[-3.137082],[4.489271],[5.399446],[3.823234],[4.051715],[8.611253],[2.904500],[-2.218893],[6.872853],[5.705746],[-1.704360],[-8.441839],[-8.830767],[8.668976],[0.309186],[-8.711884],[-0.906040],[4.036990],[-3.801541],[6.516421],[9.340671],[9.825061],[-1.871994],[1.025105],[-7.624524],[-3.191993],[5.975386],[7.774107],[-6.474793],[-0.983117],[-6.242065],[4.592376],[-7.485878],[-2.225378],[-6.485416],[-5.115773],[-7.367856],[-7.566987],[5.362275],[2.642193],[7.295170],[2.810717],[-1.323542],[-5.277079],[8.057859],[9.316629],[6.621057],[-0.057041],[4.172575],[-2.676532],[-5.571832],[9.051343],[-5.859555],[-6.388124],[8.903330],[4.846184],[8.362790],[0.634506],[3.570027],[-3.289975],[-7.763389],[-4.432887],[8.246808],[6.329652],[8.785983],[-1.824957],[-8.138168],[0.187693],[6.042061],[-3.872901],[8.848490],[4.864141],[-5.413618],[-8.787972],[-4.937719],[9.704689],[-1.581328],[-1.361973],[-2.557771],[-7.970313],[2.371458],[-7.938449],[-8.393271],[9.604078],[2.620794],[-9.744997],[4.238168],[2.647140],[-7.377926],[-1.368957],[4.557025],[6.032144],[7.990368],[7.856883],[6.759645],[-7.853441],[-9.798609],[-2.928823],[-1.786569],[-0.591249],[-3.052402],[-3.245676],[4.695704],[4.213924],[7.286046],[-7.240302],[4.413090],[4.645357],[-1.650901],[1.601504],[-5.600961],[-3.745436],[-2.132675],[-6.306466],[-5.719714],[-9.198804],[8.135442],[1.813612],[-9.404226],[8.424860],[-6.265801],[-3.450218],[6.861736],[-5.988567],[-2.137853],[-9.101865],[0.447172],[6.991281],[8.781703],[-8.836349],[9.430390],[-8.381960],[4.861776],[6.766968],[0.629498],[-4.221669],[-3.009375],[9.328022],[-7.186793],[0.224129],[1.610595],[6.982173],[5.867503],[-9.012802],[-5.273047],[-1.707783],[6.899043],[8.812537],[-7.687828],[2.514111],[7.283011],[5.871484],[-3.857864],[1.540631],[5.925241],[-3.888356],[-5.103913],[3.545362],[-4.637827],[4.923720],[7.652009],[-7.794168],[-6.715919],[1.708215],[-3.155085],[-0.439467],[-5.397285],[-7.510500],[5.665645],[0.107805],[-9.065148],[9.759262],[-2.374200],[-4.624648],[4.993225],[0.945971],[-6.317834],[8.283445],[8.829960],[1.316477],[6.386242],[5.055198],[-3.869795],[4.780926],[-5.645749],[-4.590572],[-0.910825],[9.708300],[-6.155292],[3.548453],[8.273088],[-7.189835],[1.079851],[6.340622],[0.790125],[-4.930596],[-0.036922],[-9.187711],[2.517170],[-2.303865],[5.476718],[5.718100],[8.443138],[-7.351482],[-3.401566],[3.455746],[-7.143948],[7.294928],[7.139156],[8.678720],[-5.339891],[-0.715340],[3.122493],[2.580764],[-8.280901],[-6.896820],[-3.922025],[5.479707],[8.034711],[2.173746],[8.763035],[5.175690],[6.870784],[1.603824],[6.310268],[3.133016],[5.362001],[3.590573],[-4.326812],[5.603104],[-2.041201],[-0.596204],[5.220324],[-6.311897],[9.313352],[2.737882],[-8.066763],[1.569372],[8.030444],[9.055768],[2.536785],[-5.799077],[-1.568052],[5.929563],[-2.209856],[2.890732],[1.597806],[6.196429],[7.029784],[5.250563],[-7.821022],[1.068121],[3.095238],[-7.628524],[-7.098321],[-6.202249],[-6.760609],[-2.113410],[-0.124373],[5.020613],[-9.630937],[4.965208],[7.220058],[8.504913],[4.319513],[1.259167],[7.814467],[-1.258253],[1.916787],[2.190860],[-7.112314],[4.833325],[9.989596],[3.759451],[-5.996647],[-3.955232],[9.185616],[-4.973518],[0.399835],[0.919662],[-2.997082],[-0.791412],[-9.253725],[-2.440702],[5.862062],[4.364143],[2.913993],[-4.220923],[-2.770059],[-3.934866],[-4.895911],[8.306920],[1.849486],[-6.224729],[7.527894],[4.388086],[8.393472],[5.492635],[-1.017107],[5.240314],[-5.573089],[-7.807788],[-3.180410],[-2.549474],[-4.107614],[2.170738],[9.242612],[6.893042],[-8.079462],[9.305370],[3.399326],[0.284343],[-4.664945],[-7.794564],[-3.475960],[-4.316402],[-9.708522],[4.498708],[9.145917],[2.300433],[-0.975254],[8.769870],[-4.069465],[-5.433245],[-0.646276],[-8.238563],[-2.824689],[-9.885421],[5.445082],[-7.339953],[2.670838],[-0.446653],[0.698670],[-0.279944],[9.355826],[-8.563882],[-0.778962],[9.545942],[-0.315468],[2.834438],[-8.961321],[3.192006],[5.031639],[4.503890],[-8.103884],[-4.787204],[3.373434],[-2.921041],[-6.350589],[1.712794],[-0.925545],[-1.437369],[4.497387],[0.149720],[0.137335],[3.725080],[0.458567],[7.518218],[-7.626468],[0.557580],[-8.170877],[-7.613467],[-4.338357],[-7.282891],[2.600395],[-7.286926],[2.232041],[-6.459951],[-2.131369],[3.782774],[-9.663058],[2.470336],[3.287899],[-9.426203],[-3.278906],[-1.669917],[-6.181232],[-0.021675],[1.051970],[6.665889],[-9.264555],[2.747408],[-3.956519],[6.503406],[7.594984],[5.536148],[8.061285],[0.001678],[4.936048],[-2.996340],[5.772469],[-0.922583],[-1.902652],[-4.707203],[0.421259],[-4.983997],[1.750002],[6.052874],[-7.784438],[7.196894],[6.069175],[6.388601],[4.903721],[9.358813],[3.170657],[-8.235544],[3.359009],[-6.100564],[8.343767],[3.396231],[-9.425211],[8.821648],[9.297489],[-5.170144],[0.570739],[-4.735417],[-2.931850],[9.192416],[-0.041415],[-1.416157],[-9.336450],[0.714253],[6.218115],[6.413950],[-4.450656],[5.208423],[7.614691],[7.301959],[1.163468],[-3.742360],[9.434609],[-0.849855],[-3.745331],[5.219285],[-2.807401],[-5.123444],[2.665556],[-6.259402],[8.559125],[3.448150],[9.899744],[9.059617],[2.186199],[0.402025],[-7.532607],[8.057143],[-1.704162],[8.912610],[8.007216],[-3.543054],[-4.854265],[0.264305],[-7.117377],[-3.209516],[8.997114],[8.396095],[-9.781019],[3.586201],[0.073744],[-9.187973],[-0.786136],[1.311966],[3.965432],[-0.418068],[-5.899836],[6.477957],[5.071447],[-5.226048],[-5.043751],[-1.608573],[-9.874895],[-7.620562],[-0.850370],[6.464066],[5.618932],[5.485511],[9.818377],[-0.521743],[9.912070],[-8.511895],[8.508820],[-8.108880],[-9.591321],[-4.118660],[0.243694],[-3.914703],[5.964022],[-3.544886],[9.522980],[2.001069],[2.573894],[-6.733747],[-2.360724],[-2.417781],[3.920615],[5.704993],[-2.562883],[-7.109821],[-1.496327],[6.131346],[2.966377],[3.808142],[8.481926],[-5.718247],[5.796593],[8.088693],[-8.775215],[-1.941305],[-6.450193],[-9.478321],[9.029670],[7.761412],[8.725061],[-0.906289],[-3.837609],[2.510858],[6.911301],[-1.822697],[-1.136817],[8.377304],[8.580807],[-8.410709],[7.397233],[-7.106210],[8.953704],[1.092483],[-4.391981],[-5.469447],[-2.259393],[9.219819],[5.105652],[-4.116853],[4.514698],[6.780207],[2.656959],[-2.796768],[4.259054],[-6.119163],[6.335893],[-8.444471],[9.504612],[3.500432],[-0.119017],[2.470919],[-1.585766],[-9.289012],[5.937723],[-0.120310],[1.795887],[-8.229223],[8.381557],[0.607055],[-3.646291],[5.436717],[-8.403702],[-2.905834],[2.206457],[8.032079],[-1.772047],[0.928426],[1.448619],[-1.569881],[-8.851883],[-6.712377],[-8.992345],[8.449947],[8.929221],[-3.404853],[-3.702678],[4.402710],[5.340557],[8.164234],[6.231662],[2.908571],[3.840233],[-4.066860],[-6.394876],[-5.244850],[1.623052],[-2.026638],[1.859554],[8.640730],[5.894325],[-5.454412],[1.584581],[-6.224770],[-7.540894],[-2.797723],[3.572274],[1.806955],[-4.081117],[2.067888],[-8.852025],[3.859008],[-6.022933],[2.861449],[8.543265],[-6.727293],[-0.457222],[2.654111],[-4.980445],[-5.510672],[6.002116],[-8.568216],[-7.735577],[0.496015],[8.073405],[9.758126],[-9.061479],[-0.736883],[0.176987],[0.193018],[-6.798086],[0.456020],[-6.449632],[6.234510],[-8.075674],[8.991423],[-0.895498],[-4.429126],[6.631297],[5.849410],[1.159241],[-6.495946],[7.491231],[-1.963855],[-5.282163],[-2.863467],[-9.811592],[6.736942],[-1.763372],[4.122903],[8.167636],[-5.360814],[4.669465],[-3.438492],[-9.818700],[3.222369],[8.990768],[-0.165188],[-0.817945],[8.257811],[-4.466685],[-8.902159],[1.726519],[6.182316],[-9.613187],[-4.406018],[-7.476492],[0.317827],[-3.538976],[-6.813276],[1.528849],[-9.626685],[-9.210581],[2.104819],[8.628276],[3.140864],[-0.179727],[-3.850783],[-6.744623],[4.555957],[4.398721],[-5.380259],[-3.563771],[5.974534],[0.630509],[-9.135564],[4.289824],[5.626292],[3.019546],[6.186123],[0.203392],[-8.598963],[-8.958427],[7.126748],[-6.609947],[0.941198],[8.677739],[8.862199],[0.314559],[-2.497478],[2.943800],[6.494683],[4.910199],[-7.954701],[8.616945],[2.883108],[-0.357108],[8.131269],[7.514341],[7.527934],[9.340015],[5.022087],[-7.917074],[6.894418],[2.101608],[4.899772],[-9.954204],[7.779544],[8.562063],[-6.129597],[5.976832],[-9.671243],[4.558482],[-8.401128],[-3.523224],[-0.003705],[-3.510800],[-7.172660],[9.991260],[-3.922410],[8.770923],[0.666748],[-1.538466],[6.128167],[-6.227101],[5.549226],[-0.889252],[1.838402],[1.623299],[-0.356570],[-8.691430],[9.273039],[-6.517519],[9.912971],[4.549879],[-7.180899],[9.442837],[-6.994283],[-9.922890],[-3.317388],[7.995777],[7.691660],[4.012342],[2.283368],[-7.320618],[-7.174332],[2.999208],[-1.716687],[-7.101000],[4.512572],[5.932972],[-8.485130],[7.813642],[9.426114],[9.801904],[-5.306602],[9.197930],[-5.425260],[-4.368662],[9.126916],[2.265410],[9.300153],[1.866687],[-7.198857],[-5.933832],[-4.550553],[3.320574],[-1.861935],[2.860011],[-2.203456],[9.437716],[-3.507815],[-1.647022],[8.799922],[-1.697311],[-3.134372],[6.760320],[-4.761993],[7.780851],[-1.522723],[-5.930615],[7.712508],[3.294783],[-1.911078],[0.286364],[4.938667],[5.909863],[6.457961],[-5.551321],[1.698885],[5.501523],[-9.099377],[5.328322],[-8.070579],[9.136587],[-6.404898],[6.457297],[2.248468],[-1.404430],[3.676021],[5.013904],[-4.365294],[-7.434627],[-1.223828],[9.448611],[-5.992540],[5.917574],[1.490758],[6.458649],[5.251547],[-8.327006],[5.297626],[-6.288306],[-1.937704],[-7.938138],[-4.274938],[2.458196],[8.428309],[3.462177],[-2.501089],[9.052153],[1.150390],[-7.370487],[7.816594],[-5.392597],[-5.865632],[8.459020],[-9.668747],[2.184168],[-8.853291],[4.713086],[3.226171],[7.123249],[-2.091764],[-7.283406],[2.735599],[4.035212],[0.203141],[9.390902],[-3.048923],[9.585734],[-1.507202],[-4.907530],[-7.092982],[-1.028093],[5.946187],[-8.267794],[-0.564208],[1.050701],[-3.643426],[5.621620],[2.896982],[-1.957024],[-2.293414],[-8.729272],[-1.174587],[-6.877885],[-9.704840],[0.277761],[-5.245911],[8.371672],[0.452183],[-9.847334],[0.447653],[6.664501],[3.226736],[-4.971644],[9.255936],[9.095226],[-8.551715],[-5.640229],[-8.717365],[-0.950840],[4.198203],[1.796603],[5.066863],[-5.102486],[-0.660919],[-6.446022],[-6.847001],[0.430664],[-3.498341],[2.493341],[4.866157],[-7.512984],[-7.633490],[-2.757267],[2.686587],[8.830892],[-3.418972],[-0.688677],[6.282403],[5.536391],[9.247181],[3.530348],[2.531275],[6.681782],[-6.961427],[4.920583],[-1.750977],[-7.049532],[4.641095],[5.984567],[1.668208],[6.559070],[9.608429],[6.575269],[-2.142532],[1.363121],[-4.170121],[-3.124299],[3.612183],[0.404022],[-5.504024],[8.772278],[-6.100030],[1.144257],[-2.802417],[-4.746887],[9.729310],[-4.515858],[8.402850],[9.674949],[-3.424288],[4.453551],[5.234431],[-1.417192],[-7.343357],[9.097138],[-9.612173],[1.628551],[-6.713599],[-0.664723],[6.711286],[-2.647995],[3.985098],[6.347971],[-8.981370],[-0.038066],[7.067387],[5.484255],[5.455280],[-7.825115],[1.352321],[-1.457302],[-3.165404],[3.961572],[-9.744201],[-2.938669],[-7.559215],[-3.012384],[1.036253],[4.945346],[-4.138291],[-0.895853],[6.697262],[9.816327],[1.508092],[-2.067139],[9.223511],[-9.976771],[-4.583858],[-4.316718],[-3.988894],[-6.007432],[2.998265],[-3.549000],[7.943996],[-2.840858],[7.502977],[7.167913],[-9.007555],[-3.040046],[-2.807262],[-3.029682],[1.814013],[-3.582977],[-2.701701],[9.579497],[7.716997],[-7.066279],[-2.884292],[1.238466],[-6.845874],[-0.167691],[-6.272747],[-2.012002],[-2.274315],[-5.362603],[-0.672483],[-3.594697],[4.501536],[4.558623],[7.803499],[-7.041188],[6.985552],[6.729844],[5.094117],[0.496409],[-2.974917],[-7.478263],[3.488390],[1.037905],[1.430288],[3.734033],[-8.319618],[5.520333],[-2.053275],[-3.257695],[4.682503],[-3.250745],[0.882171],[4.055420],[-2.540171],[-7.794271],[-3.319832],[1.786974],[5.729546],[3.045585],[-6.513658],[-4.876840],[-8.947078],[-7.568187],[7.573768],[-4.186796],[-8.942612],[0.162387],[-8.959847],[-3.150317],[0.636517],[3.118448],[0.899369],[2.075478],[0.713575],[3.352305],[1.915146],[-1.452923],[-8.064478],[-9.630374],[4.370356],[-2.218097],[0.331937],[1.850737],[-3.118150],[-8.003485],[-7.999353],[6.413709],[-2.258230],[0.476348],[1.689889],[7.174060],[-1.760770],[-5.797349],[2.761169],[-6.339928],[1.098815],[-2.423280],[-6.019622],[-4.843899],[0.494610],[-3.545731],[-0.860168],[-8.716878],[7.601974],[-0.983127],[-0.536102],[7.920044],[-3.792074],[4.392784],[7.410047],[-2.271212],[7.472572],[3.365589],[5.268359],[-2.349090],[6.639376],[-3.286866],[9.553586],[-7.039026],[-1.609007],[4.321834],[6.122025],[-3.892052],[4.232824],[4.812832],[2.236019],[8.762060],[-6.482970],[9.365707],[4.350918],[-6.083470],[-5.705687],[-3.291517],[5.461626],[-8.922157],[-4.120789],[1.755147],[5.800175],[4.730699],[0.399115],[9.713628],[-6.471810],[3.958762],[7.871024],[-9.465802],[1.630150],[6.301177],[-3.475280],[5.882255],[2.982313],[1.526139],[4.059931],[2.220421],[-2.797400],[5.403004],[4.941647],[0.137605],[-4.708858],[-1.923105],[4.742011],[-9.541974],[7.686201],[-9.273195],[8.122664],[-6.671500],[-4.600918],[-7.208116],[-8.529654],[-1.663822],[-2.502864],[-1.196759],[-9.254680],[-1.402727],[4.390863],[-0.180051],[3.225685],[2.192431],[0.758124],[-2.753373],[5.517289],[7.931450],[7.063304],[0.376120],[7.873329],[-6.089048],[-8.799383],[5.474662],[-1.815481],[3.378919],[-6.481441],[-3.809835],[-9.140122],[-9.643535],[-1.608027],[-9.737717],[1.000268],[9.517174],[-8.183136],[-5.433009],[-8.665877],[3.344961],[-9.621549],[3.371545],[-3.667696],[-7.499937],[-9.586663],[4.603794],[-7.638698],[-7.349153],[-4.330298],[-1.665146],[-0.235822],[-1.465041],[-6.409705],[-0.933231],[-8.709841],[6.362751],[-9.986869],[5.458918],[1.955193],[6.928375],[2.392949],[-7.811223],[1.037786],[-7.009868],[-5.737863],[0.574152],[-4.374408],[6.539425],[5.061539],[2.752921],[7.428816],[-2.669207],[0.061075],[6.874582],[9.811534],[-4.589341],[9.595376],[-6.841107],[-0.610927],[-6.298445],[6.872092],[4.472650],[-7.502321],[-3.971360],[4.975916],[3.699635],[4.093065],[-9.946922],[3.170711],[6.934089],[7.482577],[1.566804],[1.747168],[6.109202],[-5.040307],[-6.467912],[2.149762],[0.674419],[-9.470324],[8.534259],[7.086691],[-3.439912],[-8.975765],[0.397118],[-9.305065],[-1.212510],[1.688276],[-2.067338],[7.446910],[-2.142260],[-7.767697],[1.597856],[-3.394217],[5.866270],[0.615393],[-6.181335],[2.780084],[3.131535],[-0.104103],[1.738867],[5.916126],[-6.192947],[-8.362172],[2.092629],[-9.584488],[1.931116],[-6.273223],[-3.976133],[-0.857161],[3.692365],[7.453802],[-4.764080],[8.150105],[-8.053040],[8.656075],[-8.837785],[-9.993024],[2.760424],[-0.342043],[-8.869706],[-5.406521],[6.898709],[1.408988],[6.576943],[4.860687],[2.982150],[9.124457],[6.945418],[8.684366],[-1.138019],[9.003351],[4.031202],[6.997825],[-6.691826],[-0.624465],[-2.619898],[9.230603],[2.740943],[1.175984],[-8.452425],[-0.971210],[7.467846],[2.945616],[-1.355571],[5.088350],[9.036436],[4.137757],[-2.899283],[1.056835],[-0.336336],[4.354124],[-0.694671],[-8.963993],[4.938242],[9.530930],[-0.709558],[0.275318],[6.900889],[-6.489664],[1.383866],[-6.570355],[6.833117],[-8.936937],[-7.190040],[-9.321743],[4.244254],[3.690120],[-3.171002],[7.778549],[7.854627],[5.695986],[-9.914285],[-4.276823],[-9.790772],[0.750002],[-7.956405],[-9.017416],[-5.015800],[4.563492],[3.949083],[6.789356],[4.530338],[-2.740727],[4.098563],[-1.563905],[-8.431793],[-5.877572],[-9.613263],[-6.942437],[-0.234056],[1.564399],[8.350182],[-5.979832],[-0.481020],[-0.784352],[0.885137],[-7.930229],[-4.338944],[9.974870],[-3.641809],[4.349521],[4.478548],[-2.614939],[-5.412616],[-8.150932],[-7.244171],[7.752456],[-3.927508],[3.659995],[2.563621],[-7.760933],[-4.793127],[7.624623],[7.898880],[-5.591655],[-8.283884],[1.007850],[5.259008],[-4.763432],[-1.253298],[-6.032622],[-3.880613],[2.892377],[7.497431],[9.740227],[-8.912600],[-1.774374],[-3.220329],[-1.698771],[-9.538339],[0.831370],[-6.686662],[-2.019482],[-8.831046],[0.980797],[-3.600916],[-9.122260],[3.169502],[9.175461],[-7.070892],[8.223651],[-3.678106],[6.210020],[6.483276],[-7.528239],[-2.856379],[3.793987],[-4.069057],[5.217827],[-6.787500],[-6.979052],[-8.309704],[3.714071],[-2.050886],[4.473338],[9.903899],[9.723070],[-0.155471],[-0.045782],[-5.978582],[3.355755],[-1.879876],[0.530639],[-8.036491],[-5.999447],[7.549293],[8.193169],[1.700949],[2.488784],[9.527922],[-0.063684],[5.094185],[-6.441340],[0.524758],[-7.579110],[-0.329581],[-1.057422],[-0.907109],[3.458415],[-4.851787],[6.934443],[-6.080866],[-6.134027],[3.240719],[6.287382],[-3.179111],[8.354642],[-1.742761],[7.339365],[-6.025428],[7.418539],[1.968429],[9.826183],[-5.488420],[-4.737051],[-7.223990],[-3.966979],[6.575117],[-6.916029],[3.894179],[8.995678],[-1.225039],[2.492616],[9.255663],[-8.851321],[-6.927227],[-5.268785],[6.311724],[0.713263],[-5.625882],[2.678628],[7.316025],[-8.119837],[-9.126773],[5.750683],[-1.203065],[2.567883],[9.074085],[8.194489],[8.894337],[-7.146696],[-1.873279],[7.898805],[1.755756],[6.456835],[-7.440948],[-7.012514],[-1.016595],[-6.228442],[-6.173996],[-9.983380],[5.674633],[2.202549],[6.319237],[6.473983],[-3.149006],[-1.880413],[-7.621161],[-1.021517],[0.331507],[7.177618],[-4.888874],[4.267005],[-4.525770],[6.069777],[-8.109873],[-5.050977],[7.113723],[-2.221534],[-0.389640],[5.648640],[-8.261058],[3.230952],[9.345505],[-2.133123],[6.537340],[9.177926],[8.196238],[9.494537],[-8.306395],[-9.726580],[-5.124454],[-5.099113],[-8.669238],[-4.318881],[-7.972293],[5.200344],[-6.592582],[9.933181],[2.738860],[-6.289765],[-0.550515],[-2.237359],[-7.677646],[8.641620],[1.020996],[8.442867],[-8.156724],[4.919287],[8.601100],[-5.562919],[-4.452787],[-4.950660],[-8.051863],[-7.604381],[0.463285],[0.880609],[-1.465457],[9.707956],[4.925594],[-8.565455],[0.744971],[-5.645150],[0.968227],[-1.237718],[-4.262050],[8.839007],[6.021266],[3.998809],[6.136127],[2.493322],[-8.311400],[-7.089163],[-7.461409],[2.369122],[0.533032],[-2.996687],[-2.482224],[-6.604698],[7.079120],[-1.418293],[6.189482],[-7.084641],[8.464854],[8.877636],[5.549290],[4.716121],[6.656678],[7.994986],[0.472935],[7.649398],[-1.741887],[2.142997],[-0.888969],[-0.429506],[1.088104],[0.844749],[-4.979295],[1.459464],[2.722018],[8.604134],[8.521667],[-2.273370],[-9.659740],[-3.855177],[6.009873],[-2.882601],[-6.931639],[-7.295678],[-4.659623],[-2.668693],[7.916047],[-1.861834],[9.933782],[0.993823],[-2.191161],[8.839246],[2.588749],[-3.816009],[8.059202],[4.602339],[-6.282914],[-3.821525],[-1.104660],[-3.447563],[-8.630952],[-2.535975],[-1.220378],[7.627461],[-6.871626],[2.145174],[0.974011],[-7.208166],[-1.157640],[3.366524],[2.494495],[-4.677992],[-3.650087],[-0.866703],[7.432075],[4.514622],[3.275493],[8.829924],[5.407245],[8.328534],[5.748748],[-1.019365],[-6.710804],[9.167838],[-8.525902],[-0.607130],[-7.929405],[0.899123],[-0.356194],[7.330944],[-3.437042],[7.533920],[-6.147771],[-7.474585],[4.302966],[9.504433],[-6.419548],[-4.200502],[-2.297537],[8.052828],[-6.645467],[-4.245576],[8.406783],[1.776888],[-2.634567],[9.608675],[-7.622584],[-9.997394],[-4.157618],[-6.058815],[6.419891],[-8.271975],[1.503323],[-8.155504],[6.175836],[-9.890381],[9.856048],[-0.829408],[7.481750],[-7.457540],[-3.213100],[-0.470783],[-4.186331],[5.413904],[1.191906],[4.908690],[3.853532],[-6.303453],[-2.959490],[-3.255553],[1.787521],[8.783239],[8.807471],[9.348378],[0.499641],[-4.637946],[2.188272],[-5.605912],[-2.306273],[-0.799763],[3.019980],[-0.820394],[-4.147428],[-7.366135],[0.463106],[-6.728101],[2.628538],[4.859611],[5.418840],[6.337515],[9.568272],[-5.750899],[8.272080],[-9.292731],[-9.498138],[6.192014],[-0.900785],[-0.088773],[1.295448],[5.279619],[2.453931],[8.484805],[2.749401],[1.400613],[0.057356],[-5.103812],[5.193152],[7.661120],[6.215772],[-3.375949],[8.261898],[-0.435897],[8.426127],[-7.299729],[4.442949],[3.787690],[3.587554],[7.507318],[0.046585],[7.119312],[-2.289068],[3.747711],[-4.926783],[-3.908142],[2.543210],[2.804947],[-0.998375],[-2.146903],[-1.663206],[-7.107885],[8.053117],[-9.998251],[-1.331052],[0.136145],[-7.051490],[-4.516160],[-9.467923],[-2.494562],[0.768238],[7.814705],[2.699858],[7.944965],[-5.599087],[8.465249],[-6.014647],[-9.973194],[5.292913],[-1.273945],[-5.319494],[-7.305962],[-3.742392],[5.336088],[-2.908316],[4.407361],[-4.820396],[-3.545702],[5.932351],[-3.475613],[-8.050008],[-7.046432],[8.966025],[-9.217338],[5.274300],[6.693441],[-0.636835],[-9.325962],[-5.145290],[-6.335577],[-0.007701],[-0.804248],[-9.532513],[-4.270245],[-4.751837],[8.729873],[5.233749],[2.423146],[-3.180722],[4.851675],[-0.024916],[6.330002],[-1.357339],[7.736520],[-0.287601],[-9.593895],[4.964605],[7.814378],[5.849644],[6.558924],[-8.021941],[-2.861923],[-8.907071],[8.038905],[8.189014],[-1.491702],[3.200468],[9.666160],[-8.515459],[-0.761123],[-7.550287],[2.433392],[-8.377527],[3.220587],[-4.188105],[7.252152],[0.580165],[-7.352855],[-9.217629],[-7.612663],[2.083045],[0.987148],[-3.714226],[-8.942467],[-4.574350],[0.810843],[4.625953],[-6.946591],[-4.850015],[-8.045004],[4.014758],[9.565735],[1.270849],[-8.493781],[8.111675],[-5.791943],[-7.747893],[1.637203],[-0.798461],[8.024078],[1.787616],[3.602081],[5.466389],[-0.928363],[6.411052],[-3.139367],[-2.503941],[6.766042],[-1.869132],[0.631025],[-4.969192],[-0.506614],[-7.971503],[8.883080],[2.948449],[0.041535],[-8.462640],[-5.367674],[-1.772224],[0.566850],[8.940771],[-2.261929],[7.484775],[3.787658],[-2.189553],[-9.164146],[-8.561496],[0.675327],[-1.815057],[4.573229],[9.774871],[-2.382568],[8.782672],[7.638142],[7.224070],[5.200428],[-0.940836],[5.191728],[0.771589],[5.528126],[3.413480],[-5.349157],[-8.638490],[-8.524707],[7.011126],[6.862559],[-7.804139],[-0.395567],[-7.298538],[-0.002801],[-3.477986],[-1.891244],[6.147862],[-4.800907],[-8.710925],[-4.073962],[1.687035],[-3.051855],[-3.412441],[3.327389],[-2.835982],[-8.314958],[-6.565547],[3.441466],[-6.992320],[3.901639],[9.806921],[-7.216710],[5.969175],[-3.389143],[-0.971822],[5.510214],[2.268663],[-3.426427],[6.515324],[0.035676],[-6.698597],[-0.456405],[-8.885702],[2.483403],[7.916746],[5.130072],[-5.016750],[-4.573999],[8.764001],[0.554227],[6.912732],[9.180059],[-9.901421],[3.040267],[8.968682],[-4.968475],[-5.398903],[5.055416],[-7.608075],[-5.770834],[7.919356],[-3.263920],[2.338814],[7.572018],[5.655837],[-8.930381],[2.108477],[-7.269200],[8.993223],[6.120473],[-5.972597],[-4.060408],[5.285129],[-2.929564],[-3.581226],[7.917032],[-7.568837],[6.171981],[-2.101938],[-4.512100],[-5.279506],[6.207935],[5.358932],[2.781598],[9.135177],[8.085317],[-9.886032],[-9.666575],[2.530735],[9.286396],[5.707100],[0.237073],[1.615486],[7.364200],[0.572314],[9.130554],[6.385878],[-7.510552],[-6.147006],[2.331784],[-7.375458],[-5.114726],[8.343822],[-9.677563],[9.225545],[-3.752558],[3.573212],[-9.667703],[4.530519],[-2.739140],[-4.000634],[-1.670962],[-3.388709],[-0.804012],[-3.724699],[-2.197667],[-7.431357],[-9.329656],[-4.936785],[9.561313],[-4.050716],[-3.231399],[6.422759],[-5.357818],[6.358701],[-8.609481],[3.418327],[2.113184],[7.667836],[-5.105567],[7.625286],[-3.681707],[9.687248],[5.102701],[-2.991609],[7.302775],[7.379008],[-1.714309],[3.891424],[9.324827],[0.920285],[-5.631997],[-5.834840],[0.747612],[8.280834],[1.132666],[-2.124720],[-5.256687],[-1.564377],[4.557631],[-4.839013],[-5.195910],[6.886622],[5.372291],[8.636206],[1.962985],[-7.030626],[5.635413],[0.370971],[-9.187859],[1.894190],[5.267180],[1.243382],[5.804684],[-3.794353],[-3.228699],[-1.071897],[-2.870064],[5.799916],[-8.308736],[-7.536035],[-8.123074],[8.532282],[9.510756],[-7.419375],[5.119411],[6.845219],[8.999473],[-8.923997],[1.993457],[-4.907936],[-7.563599],[-0.876506],[-7.858956],[-6.322927],[-4.689078],[-2.616268],[7.528435],[8.609253],[-1.071932],[-9.683779],[4.602983],[-7.238752],[-5.509854],[8.234275],[0.037611],[-9.076167],[-9.165516],[-2.816764],[-0.625475],[3.996799],[7.875856],[4.001376],[8.909407],[5.496884],[-2.589834],[4.121069],[-4.720008],[2.443970],[5.881953],[-8.897685],[-0.475183],[-0.821466],[5.205998],[2.555971],[8.233475],[-3.771684],[-9.336275],[4.041819],[-6.522466],[5.736604],[-9.709117],[-9.790651],[-0.443468],[5.967894],[0.480424],[2.052430],[-2.056637],[-4.389511],[-7.194337],[-8.881048],[5.079646],[5.785365],[-0.715570],[3.891606],[4.617305],[-6.101210],[-3.311021],[-3.993679],[-5.357558],[-7.017489],[7.904463],[5.791478],[3.282687],[7.720611],[4.457158],[9.119907],[6.772607],[-2.907806],[6.843353],[-7.258303],[-9.439033],[-5.444048],[-1.928043],[1.552453],[-8.593730],[-1.397174],[4.420238],[-3.517914],[4.602231],[2.503069],[7.686458],[9.831933],[4.026896],[-3.032186],[-6.493487],[6.645544],[4.385360],[8.958707],[1.657364],[-0.604426],[-2.276722],[4.517267],[-1.281056],[-1.665135],[-2.292699],[-8.495871],[-0.416030],[-9.812219],[8.039567],[-0.263994],[9.329149],[-7.260592],[6.516201],[-8.684766],[3.623747],[-9.533389],[5.183931],[8.086417],[4.856919],[-2.857239],[2.932668],[9.642997],[-1.311875],[1.743955],[1.554104],[1.983256],[-9.293427],[7.278632],[2.955094],[-9.157197],[8.062429],[-6.742149],[-2.585617],[-5.119861],[8.242801],[8.397178],[-3.470446],[-4.959950],[-4.957792],[-7.835499],[3.043388],[6.725900],[-6.004811],[0.322164],[-2.538776],[-5.220321],[0.413662],[7.247721],[-5.404292],[8.566254],[-0.887501],[8.181911],[-7.597918],[0.872681],[7.126609],[-8.071393],[-8.547084],[-2.485109],[-1.066819],[-8.802964],[1.087939],[-1.313002],[-4.601320],[0.147697],[-9.664461],[-8.498349],[7.837208],[7.630053],[-3.846519],[7.916953],[-5.357590],[-4.843213],[1.829425],[6.764216],[9.819048],[-9.996605],[-0.406506],[8.434442],[-9.431602],[-4.419424],[9.249099],[1.102734],[-2.213949],[-8.256079],[-0.347238],[-1.553046],[1.980399],[5.386634],[-0.756054],[9.525338],[-4.704734],[-3.182186],[-5.714130],[8.178856],[-2.152872],[8.342596],[0.750863],[3.696679],[5.647066],[-5.119224],[9.457039],[7.814668],[9.436599],[7.199578],[6.665393],[4.047855],[-2.814161],[4.507626],[2.988532],[-6.560153],[-1.750777],[-6.840253],[-0.475178],[7.128631],[2.131369],[2.376135],[-8.436750],[-6.528327],[7.397423],[2.540291],[-7.820148],[7.222467],[7.879070],[9.838496],[3.154795],[-8.218892],[-2.574879],[2.446777],[-5.868445],[-8.433395],[-7.840777],[-6.363047],[-0.223632],[9.355495],[-6.541501],[4.082894],[6.269263],[-6.502933],[2.827802],[-0.936227],[8.480429],[-3.744273],[4.046945],[-9.258777],[-6.406798],[4.131679],[0.118547],[6.682639],[-5.382052],[9.608533],[-3.596636],[3.160083],[9.381062],[-2.267604],[-5.407442],[-1.964382],[8.943746],[3.900941],[-3.742153],[0.063342],[-6.989125],[-9.167874],[-2.017622],[-4.522200],[-5.944046],[-4.387968],[-3.004887],[-1.013487],[6.677281],[-6.169131],[4.314888],[2.267841],[0.363445],[3.879272],[-5.990992],[-7.200990],[-2.276745],[-7.732004],[-4.170906],[4.770449],[0.719430],[1.018325],[-8.980956],[0.424401],[-1.859429],[5.146607],[-3.589127],[0.397139],[4.397300],[-7.797301],[7.604419],[-5.004766],[2.499479],[-6.443380],[0.384451],[-4.840509],[8.516739],[-0.523526],[6.692080],[0.475255],[4.835312],[-0.477551],[5.111217],[6.325916],[-7.764885],[4.495825],[-3.466395],[6.790153],[-3.166132],[-5.131586],[-0.569604],[-0.356687],[-9.116216],[6.396657],[9.166945],[-4.637773],[5.006105],[-1.017140],[-7.043610],[7.780823],[8.254095],[-4.448857],[-9.754150],[4.946965],[9.085527],[3.070619],[-0.257984],[-4.719165],[-7.296869],[1.186636],[-3.265485],[2.694123],[-2.860452],[7.158739],[8.201724],[2.160122],[8.058652],[4.405586],[-5.677104],[-2.685682],[-4.209604],[4.742914],[-4.037041],[9.916054],[2.617072],[-2.671937],[-9.466359],[7.694014],[5.555539],[0.046648],[9.252245],[-2.758366],[-8.523979],[-7.611742],[-9.733139],[7.756301],[-4.646132],[-6.442877],[-5.948248],[-3.964118],[-8.367647],[2.643714],[-7.347506],[9.220739],[4.407599],[-2.804126],[2.550718],[2.389870],[-9.947710],[-5.224507],[1.234768],[6.856344],[-8.523256],[-3.188834]], dtype = "float64")#candidate|2136|(2535, 1)|const|float64
var_2137 = relay.var("var_2137", dtype = "uint32", shape = (1872,))#candidate|2137|(1872,)|var|uint32
call_2135 = relay.TupleGetItem(func_2050_call(relay.reshape(const_2136.astype('float64'), [15, 13, 13]), relay.reshape(const_2136.astype('float64'), [15, 13, 13]), relay.reshape(var_2137.astype('uint32'), [1872,]), ), 1)
call_2138 = relay.TupleGetItem(func_2055_call(relay.reshape(const_2136.astype('float64'), [15, 13, 13]), relay.reshape(const_2136.astype('float64'), [15, 13, 13]), relay.reshape(var_2137.astype('uint32'), [1872,]), ), 1)
output = relay.Tuple([bop_2092,bop_2107,call_2127,var_2128,call_2135,const_2136,var_2137,])
output2 = relay.Tuple([bop_2092,bop_2107,call_2129,var_2128,call_2138,const_2136,var_2137,])
func_2161 = relay.Function([var_2091,var_2106,var_2128,var_2137,], output)
mod['func_2161'] = func_2161
mod = relay.transform.InferType()(mod)
var_2162 = relay.var("var_2162", dtype = "uint32", shape = (6, 3, 15))#candidate|2162|(6, 3, 15)|var|uint32
var_2163 = relay.var("var_2163", dtype = "uint32", shape = (6, 3, 15))#candidate|2163|(6, 3, 15)|var|uint32
var_2164 = relay.var("var_2164", dtype = "float64", shape = (12, 18))#candidate|2164|(12, 18)|var|float64
var_2165 = relay.var("var_2165", dtype = "uint32", shape = (1872,))#candidate|2165|(1872,)|var|uint32
output = func_2161(var_2162,var_2163,var_2164,var_2165,)
func_2166 = relay.Function([var_2162,var_2163,var_2164,var_2165,], output)
mutated_mod['func_2166'] = func_2166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2173 = relay.TupleGetItem(func_1911_call(), 0)
call_2174 = relay.TupleGetItem(func_1912_call(), 0)
uop_2175 = relay.atan(call_2173.astype('float32')) # shape=(6, 3, 12)
uop_2177 = relay.atan(call_2174.astype('float32')) # shape=(6, 3, 12)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
var_2185 = relay.var("var_2185", dtype = "uint32", shape = (1872,))#candidate|2185|(1872,)|var|uint32
call_2184 = func_996_call(relay.reshape(var_2185.astype('uint32'), [13, 16, 9]))
call_2186 = func_996_call(relay.reshape(var_2185.astype('uint32'), [13, 16, 9]))
output = relay.Tuple([uop_2175,call_2184,var_2185,])
output2 = relay.Tuple([uop_2177,call_2186,var_2185,])
func_2207 = relay.Function([var_2185,], output)
mod['func_2207'] = func_2207
mod = relay.transform.InferType()(mod)
var_2208 = relay.var("var_2208", dtype = "uint32", shape = (1872,))#candidate|2208|(1872,)|var|uint32
output = func_2207(var_2208)
func_2209 = relay.Function([var_2208], output)
mutated_mod['func_2209'] = func_2209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2251 = relay.TupleGetItem(func_1911_call(), 0)
call_2252 = relay.TupleGetItem(func_1912_call(), 0)
var_2253 = relay.var("var_2253", dtype = "float64", shape = (6, 3, 12))#candidate|2253|(6, 3, 12)|var|float64
bop_2254 = relay.less_equal(call_2251.astype('bool'), relay.reshape(var_2253.astype('bool'), relay.shape_of(call_2251))) # shape=(6, 3, 12)
bop_2257 = relay.less_equal(call_2252.astype('bool'), relay.reshape(var_2253.astype('bool'), relay.shape_of(call_2252))) # shape=(6, 3, 12)
output = relay.Tuple([bop_2254,])
output2 = relay.Tuple([bop_2257,])
func_2258 = relay.Function([var_2253,], output)
mod['func_2258'] = func_2258
mod = relay.transform.InferType()(mod)
var_2259 = relay.var("var_2259", dtype = "float64", shape = (6, 3, 12))#candidate|2259|(6, 3, 12)|var|float64
output = func_2258(var_2259)
func_2260 = relay.Function([var_2259], output)
mutated_mod['func_2260'] = func_2260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2272 = relay.var("var_2272", dtype = "int16", shape = ())#candidate|2272|()|var|int16
var_2273 = relay.var("var_2273", dtype = "int16", shape = (9, 14, 4))#candidate|2273|(9, 14, 4)|var|int16
bop_2274 = relay.bitwise_or(var_2272.astype('int16'), var_2273.astype('int16')) # shape=(9, 14, 4)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
var_2284 = relay.var("var_2284", dtype = "uint32", shape = (1872,))#candidate|2284|(1872,)|var|uint32
call_2283 = func_996_call(relay.reshape(var_2284.astype('uint32'), [13, 16, 9]))
call_2285 = func_996_call(relay.reshape(var_2284.astype('uint32'), [13, 16, 9]))
bop_2287 = relay.left_shift(call_2283.astype('uint8'), relay.reshape(var_2284.astype('uint8'), relay.shape_of(call_2283))) # shape=(13, 16, 9)
bop_2290 = relay.left_shift(call_2285.astype('uint8'), relay.reshape(var_2284.astype('uint8'), relay.shape_of(call_2285))) # shape=(13, 16, 9)
bop_2306 = relay.divide(var_2284.astype('float32'), relay.reshape(bop_2287.astype('float32'), relay.shape_of(var_2284))) # shape=(1872,)
bop_2309 = relay.divide(var_2284.astype('float32'), relay.reshape(bop_2290.astype('float32'), relay.shape_of(var_2284))) # shape=(1872,)
output = relay.Tuple([bop_2274,bop_2306,])
output2 = relay.Tuple([bop_2274,bop_2309,])
func_2318 = relay.Function([var_2272,var_2273,var_2284,], output)
mod['func_2318'] = func_2318
mod = relay.transform.InferType()(mod)
var_2319 = relay.var("var_2319", dtype = "int16", shape = ())#candidate|2319|()|var|int16
var_2320 = relay.var("var_2320", dtype = "int16", shape = (9, 14, 4))#candidate|2320|(9, 14, 4)|var|int16
var_2321 = relay.var("var_2321", dtype = "uint32", shape = (1872,))#candidate|2321|(1872,)|var|uint32
output = func_2318(var_2319,var_2320,var_2321,)
func_2322 = relay.Function([var_2319,var_2320,var_2321,], output)
mutated_mod['func_2322'] = func_2322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2333 = relay.TupleGetItem(func_1911_call(), 0)
call_2334 = relay.TupleGetItem(func_1912_call(), 0)
output = relay.Tuple([call_2333,])
output2 = relay.Tuple([call_2334,])
func_2342 = relay.Function([], output)
mod['func_2342'] = func_2342
mod = relay.transform.InferType()(mod)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2342_call = mutated_mod.get_global_var('func_2342')
call_2343 = func_2342_call()
output = call_2343
func_2344 = relay.Function([], output)
mutated_mod['func_2344'] = func_2344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2342_call = mod.get_global_var('func_2342')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_2381 = relay.TupleGetItem(func_2342_call(), 0)
call_2382 = relay.TupleGetItem(func_2344_call(), 0)
output = relay.Tuple([call_2381,])
output2 = relay.Tuple([call_2382,])
func_2385 = relay.Function([], output)
mod['func_2385'] = func_2385
mod = relay.transform.InferType()(mod)
mutated_mod['func_2385'] = func_2385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2385_call = mutated_mod.get_global_var('func_2385')
call_2386 = func_2385_call()
output = call_2386
func_2387 = relay.Function([], output)
mutated_mod['func_2387'] = func_2387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2385_call = mod.get_global_var('func_2385')
func_2387_call = mutated_mod.get_global_var('func_2387')
call_2414 = relay.TupleGetItem(func_2385_call(), 0)
call_2415 = relay.TupleGetItem(func_2387_call(), 0)
func_1138_call = mod.get_global_var('func_1138')
func_1142_call = mutated_mod.get_global_var('func_1142')
var_2417 = relay.var("var_2417", dtype = "uint8", shape = ())#candidate|2417|()|var|uint8
const_2418 = relay.const([[7],[10],[-2],[5],[6],[3],[-6],[-10],[-8],[-3],[-9],[-1],[8],[-10],[6],[-3],[7],[3],[2],[3],[-5],[-3],[-9],[-6],[-7],[1],[-9],[4],[10],[2],[-3],[-9],[8],[10],[-9],[-9],[1],[-5],[-6],[-1],[-1],[-9],[-5],[-10],[9],[1],[6],[-4],[9],[8],[9],[2],[9],[4],[10],[8],[-8],[-4],[8],[-7],[5],[-8],[-7],[9],[6],[-8],[3],[9],[-9],[7],[8],[3],[-2],[8],[2],[-6],[-5],[-1],[-9],[-2],[6],[-4],[-10],[-10],[7],[10],[-5],[-1],[3],[-7]], dtype = "uint8")#candidate|2418|(90, 1)|const|uint8
call_2416 = relay.TupleGetItem(func_1138_call(relay.reshape(var_2417.astype('uint8'), []), relay.reshape(const_2418.astype('uint8'), [9, 5, 2]), ), 2)
call_2419 = relay.TupleGetItem(func_1142_call(relay.reshape(var_2417.astype('uint8'), []), relay.reshape(const_2418.astype('uint8'), [9, 5, 2]), ), 2)
output = relay.Tuple([call_2414,call_2416,var_2417,const_2418,])
output2 = relay.Tuple([call_2415,call_2419,var_2417,const_2418,])
func_2424 = relay.Function([var_2417,], output)
mod['func_2424'] = func_2424
mod = relay.transform.InferType()(mod)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2425 = relay.var("var_2425", dtype = "uint8", shape = ())#candidate|2425|()|var|uint8
func_2424_call = mutated_mod.get_global_var('func_2424')
call_2426 = func_2424_call(var_2425)
output = call_2426
func_2427 = relay.Function([var_2425], output)
mutated_mod['func_2427'] = func_2427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2476 = relay.TupleGetItem(func_1911_call(), 0)
call_2477 = relay.TupleGetItem(func_1912_call(), 0)
output = call_2476
output2 = call_2477
func_2487 = relay.Function([], output)
mod['func_2487'] = func_2487
mod = relay.transform.InferType()(mod)
output = func_2487()
func_2488 = relay.Function([], output)
mutated_mod['func_2488'] = func_2488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2564 = relay.TupleGetItem(func_1911_call(), 0)
call_2565 = relay.TupleGetItem(func_1912_call(), 0)
output = call_2564
output2 = call_2565
func_2572 = relay.Function([], output)
mod['func_2572'] = func_2572
mod = relay.transform.InferType()(mod)
mutated_mod['func_2572'] = func_2572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2572_call = mutated_mod.get_global_var('func_2572')
call_2573 = func_2572_call()
output = call_2573
func_2574 = relay.Function([], output)
mutated_mod['func_2574'] = func_2574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2385_call = mod.get_global_var('func_2385')
func_2387_call = mutated_mod.get_global_var('func_2387')
call_2585 = relay.TupleGetItem(func_2385_call(), 0)
call_2586 = relay.TupleGetItem(func_2387_call(), 0)
const_2595 = relay.const([[[0.152992,-1.738821,-2.107712,-9.393793,-8.714587,-2.461510,-1.986664,8.943789,0.262435,2.246900,1.267858,-8.715818],[8.279479,-2.770668,-4.007964,5.567072,2.480072,9.273894,-1.013574,-2.301810,4.795578,0.560218,4.343544,-6.312161],[1.707790,0.020619,-7.954446,-9.608052,-1.727434,-2.333540,-2.800386,-8.903319,3.199348,-0.242108,-9.515761,3.582712]],[[3.676804,8.634660,1.649882,6.447949,2.689533,-9.746507,-1.463083,0.765537,8.601031,6.560362,2.478191,-7.006352],[3.400061,-2.246583,9.445459,6.627788,7.204017,2.116048,4.947692,0.910272,8.747153,-2.516381,5.169576,-8.709383],[4.490014,-8.038965,-7.025209,6.061650,7.968125,1.689262,0.181721,7.587290,4.528705,-4.858100,2.748432,-6.867956]],[[8.190406,4.674146,-5.593445,0.280884,8.633260,1.312530,-2.225236,-9.261662,-8.356591,-6.773774,-3.579331,-6.494316],[-9.526147,-2.134044,5.966531,-6.463889,1.990065,8.145837,-4.287714,6.076597,-5.674413,2.688060,-0.285737,4.652214],[9.086853,-8.375741,7.443430,2.962607,5.631507,-0.819002,-5.255450,1.719970,-3.474921,-8.260501,-2.193077,-7.905480]],[[-7.670365,4.559277,5.419422,3.636466,3.121754,9.128464,4.601441,-1.523959,-3.607957,3.141550,-7.712585,0.357955],[4.156435,0.883367,6.798157,-6.780715,5.726696,-8.678159,-8.007424,9.069967,-3.895203,0.640298,1.014196,-1.964950],[-4.963456,1.340370,6.975333,7.382793,-0.201636,-6.940821,-2.465031,2.323339,-3.568073,5.132285,6.686139,-7.928334]],[[0.990376,9.092169,-2.004708,-1.586766,1.433596,6.320100,-2.377588,9.000462,4.252761,3.612731,0.966746,9.136961],[-8.277106,-1.941382,5.230914,7.450215,-7.988921,5.778140,0.478705,3.486816,0.575952,4.114280,9.611279,-7.892470],[-7.577842,2.236426,-4.838881,1.154860,7.912734,4.302060,4.813326,0.861274,4.190486,-7.226660,-6.981533,-7.873477]],[[-4.537078,-7.793662,-1.774643,-5.011209,-9.369604,-5.123244,-8.189867,4.119740,-8.221571,-8.146392,-1.901762,4.447449],[-8.270457,-9.296553,-3.740491,4.975191,-3.221825,-4.904286,-9.661056,0.097855,-1.336767,-2.237495,1.483371,-9.649644],[-6.767013,6.640531,-1.314689,-9.078916,-0.316454,-5.574126,1.377887,7.000220,5.536169,1.716107,-2.139323,-2.138083]]], dtype = "float64")#candidate|2595|(6, 3, 12)|const|float64
bop_2596 = relay.minimum(call_2585.astype('uint16'), relay.reshape(const_2595.astype('uint16'), relay.shape_of(call_2585))) # shape=(6, 3, 12)
bop_2599 = relay.minimum(call_2586.astype('uint16'), relay.reshape(const_2595.astype('uint16'), relay.shape_of(call_2586))) # shape=(6, 3, 12)
output = relay.Tuple([bop_2596,])
output2 = relay.Tuple([bop_2599,])
func_2601 = relay.Function([], output)
mod['func_2601'] = func_2601
mod = relay.transform.InferType()(mod)
mutated_mod['func_2601'] = func_2601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2601_call = mutated_mod.get_global_var('func_2601')
call_2602 = func_2601_call()
output = call_2602
func_2603 = relay.Function([], output)
mutated_mod['func_2603'] = func_2603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2342_call = mod.get_global_var('func_2342')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_2618 = relay.TupleGetItem(func_2342_call(), 0)
call_2619 = relay.TupleGetItem(func_2344_call(), 0)
output = call_2618
output2 = call_2619
func_2622 = relay.Function([], output)
mod['func_2622'] = func_2622
mod = relay.transform.InferType()(mod)
output = func_2622()
func_2623 = relay.Function([], output)
mutated_mod['func_2623'] = func_2623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2342_call = mod.get_global_var('func_2342')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_2630 = relay.TupleGetItem(func_2342_call(), 0)
call_2631 = relay.TupleGetItem(func_2344_call(), 0)
uop_2633 = relay.sinh(call_2630.astype('float64')) # shape=(6, 3, 12)
uop_2635 = relay.sinh(call_2631.astype('float64')) # shape=(6, 3, 12)
output = relay.Tuple([uop_2633,])
output2 = relay.Tuple([uop_2635,])
func_2639 = relay.Function([], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
output = func_2639()
func_2640 = relay.Function([], output)
mutated_mod['func_2640'] = func_2640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_2666 = func_2487_call()
call_2667 = func_2487_call()
output = call_2666
output2 = call_2667
func_2682 = relay.Function([], output)
mod['func_2682'] = func_2682
mod = relay.transform.InferType()(mod)
output = func_2682()
func_2683 = relay.Function([], output)
mutated_mod['func_2683'] = func_2683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_2719 = relay.TupleGetItem(func_2601_call(), 0)
call_2720 = relay.TupleGetItem(func_2603_call(), 0)
func_2050_call = mod.get_global_var('func_2050')
func_2055_call = mutated_mod.get_global_var('func_2055')
const_2726 = relay.const([-8.872847,-4.109400,-4.318133,1.877027,3.213923,4.014212,4.028082,-1.825628,2.872225,6.700288,-3.013278,2.575595,-9.532865,0.888870,4.459580,6.066131,-5.989848,-0.849929,-2.337123,-9.626899,9.265095,-9.877222,-2.509231,-6.235993,-6.449054,-5.820861,-7.570459,-7.066269,0.999906,-3.510938,3.813850,-0.687041,0.934948,-4.117143,-0.893800,9.601781,-6.123712,-4.457631,4.539339,-7.062170,-3.958007,-7.592626,3.161659,5.437257,1.660454,6.684743,-8.719110,-8.079026,-7.217914,7.891037,7.206150,1.806268,3.168318,-4.524531,-7.495140,-4.237764,0.523024,6.254238,-0.072292,2.881270,8.914198,-6.549598,-0.671473,0.773418,6.691042,7.889514,-9.196192,-5.595485,-4.017608,-9.544176,5.908278,8.050058,4.396385,6.103494,-7.063467,7.776722,-7.965605,4.358658,-1.305062,5.839852,2.942939,-5.815776,6.917759,3.945804,-3.017369,-7.556788,6.828739,-7.961502,0.371951,-2.930342,9.508721,2.003986,9.345158,-7.651410,5.518175,3.309251,6.405581,-0.603408,-3.210585,-9.210193,1.902591,-5.381891,2.889071,-9.823303,3.697937,-0.971511,-5.071995,-2.255044,-2.591885,-4.687842,-5.391762,-1.221743,0.746293,2.522374,5.231103,-1.265891,-8.652738,8.914805,-7.189210,-5.817766,-5.678627,-4.085109,-0.217512,-3.699750,7.990426,6.389357,-0.055065,1.727080,-3.931827,7.082230,8.398026,3.187103,-0.325734,5.187910,-9.556417,-6.800034,-1.147154,3.532737,5.113133,3.359447,-3.596945,2.402213,-7.002726,5.734479,4.772632,-5.445784,-6.772926,-4.316958,-0.002976,5.996463,-9.490794,5.554900,-3.346183,5.060451,-8.614693,9.970681,4.468083,8.161151,8.525804,5.603113,0.416387,6.394349,2.098127,8.338596,0.637095,-1.692435,-2.661026,-2.215922,-7.059058,4.293914,-0.298523,-0.941723,5.973380,-3.451998,-4.692919,9.051808,2.408198,4.292961,-0.021865,5.761730,-0.605625,1.470559,0.836873,7.012764,-8.220596,7.317241,5.362942,-7.334835,2.269714,-7.512020,-4.465072,-7.551279,-1.158333,-6.609987,-0.033107,8.760153,6.345806,2.750418,-0.667939,5.463664,0.248744,-5.519344,-5.210312,8.924705,8.049014,2.570700,2.318088,2.605101,5.119873,0.812422,8.778660,-0.591537,7.205890,-6.949759,8.621142,-5.313541,-9.822187,8.342610,-9.142282,-5.301014,-3.479096,3.302144,7.349910,-3.739229,2.329533,-2.409021,-1.245164,9.106568,9.123535,8.184896,7.060962,8.131170,-6.513871,-5.120673,-8.944140,-5.775674,-6.254023,-2.789782,3.644485,8.138736,-4.080558,1.365204,-3.341792,4.970618,-4.784757,-0.386109,-7.164201,3.658526,8.550853,8.301640,4.221801,-4.799851,-1.458626,1.819165,2.580463,-2.387730,1.035396,-5.228723,-5.278802,0.767445,0.509278,5.517245,1.046644,-3.729142,-9.952054,-3.197600,-3.896605,-0.483128,-0.846412,-6.143252,-4.090133,2.115753,-5.003144,0.625864,3.889883,-3.463187,3.381745,3.044103,-0.759361,0.998692,3.901701,-7.907277,-2.408735,-8.028377,4.888362,6.335516,1.912911,7.673415,-2.429840,4.531513,6.646404,-2.220216,1.747579,8.326122,-2.016900,-1.906977,0.393891,8.663238,8.593933,-5.651567,-0.276567,-7.256971,-7.415086,8.951125,6.810517,8.921716,-0.329482,0.993392,2.480444,-8.602100,6.868740,0.437853,8.839296,-7.767967,7.855287,8.845427,-3.215287,4.167042,1.137859,-8.595364,3.204829,0.525770,8.718859,6.474218,-7.086796,-8.661491,5.843532,-3.432753,-2.414772,6.819711,1.557405,5.138070,8.383179,-4.594675,-5.010686,7.522152,-4.667997,0.412808,7.100927,-0.643560,-4.271539,5.054447,4.466324,2.026785,-1.237056,6.708985,4.795810,-4.191869,3.197184,-1.646396,5.026872,-5.340181,-2.968622,0.933687,-1.968192,2.136725,6.654422,-8.823788,-5.938518,-4.689721,2.917981,-8.708793,1.896982,2.849030,-9.704942,-8.134339,4.650331,9.884499,-7.424826,0.423640,5.546096,-7.083756,2.036169,3.373236,-5.550356,-1.075656,0.181112,-9.294097,9.704174,3.535184,5.403506,9.761672,-8.159543,9.402870,-3.159087,-9.777370,5.644378,-1.554584,2.249442,1.247270,8.838906,8.967192,-3.489370,5.518740,0.397119,9.744140,-4.377937,7.926493,-9.943946,-8.272607,7.750153,-5.556003,0.255373,6.103829,-0.299100,-7.190224,2.463714,-0.799619,9.035052,5.754384,-1.888970,-9.385082,-4.292913,-3.333518,-4.220742,0.411179,9.543713,-8.643954,-8.949852,7.262737,-1.439723,-8.304371,-6.643253,-4.060053,3.180689,-3.745270,-0.844653,-4.172785,8.576044,4.364175,1.512620,1.314171,-0.403248,9.051159,-2.533674,0.864087,-0.017319,-0.218313,-8.577731,0.030023,-7.085173,-6.299116,-3.483869,7.711906,4.811586,4.564679,9.137744,6.391842,-8.519710,-0.570314,8.929986,-3.560290,-3.406641,-7.377119,5.011580,-4.308358,-9.782002,-8.266013,0.134660,-9.587017,0.598899,-3.387231,-4.185553,-6.200774,-8.356360,4.260714,1.083295,-4.590711,-4.653407,-1.581814,-3.463543,-5.010222,0.354402,4.984605,-5.069519,5.766133,8.642057,8.081100,6.543175,-7.420320,-5.974813,-0.408258,9.558662,5.411183,3.911370,9.089272,-7.587668,-4.135366,9.611515,0.857100,1.724924,3.692789,-6.652197,5.785215,-8.345598,3.054641,2.535220,-9.028692,-0.705288,3.983321,-8.135263,7.738675,-1.400754,-4.677467,9.596028,6.579252,2.040706,1.414179,3.029279,6.280412,4.649213,3.119128,-4.427179,3.520826,0.675730,7.552555,-4.239249,0.007464,-2.268192,-6.143140,3.870097,0.100052,-4.579723,-7.938958,3.067392,8.356650,-2.346849,4.562272,2.142734,-9.381797,1.199546,-7.209755,-6.641914,-7.534368,8.418087,0.923317,4.062490,0.583917,0.723583,2.721901,-0.183261,9.584497,9.660388,8.330210,-3.088949,-2.807051,2.929175,4.584853,-4.320177,4.048751,-0.385667,-2.753240,6.417837,9.279715,5.724804,0.708440,1.599830,-4.966199,0.807055,5.716808,7.426639,-9.099969,-0.138655,6.722655,2.344257,6.510052,0.758813,5.914517,6.224480,1.960152,-4.477747,-9.410592,-0.997040,-9.564992,0.858526,1.247269,6.453186,6.891761,0.312021,-6.557681,0.851627,-6.575359,6.441430,9.634874,-8.597014,5.463804,8.755375,-4.076920,6.536908,-8.554539,9.328993,6.731593,3.141135,-4.755559,9.659678,9.863062,-5.453050,2.856715,-5.601518,4.870387,-9.329215,2.889050,-6.594193,5.159247,-1.280111,-7.659835,0.690254,9.914486,0.361745,8.216351,-9.005361,8.623733,-7.945866,0.037762,-5.135993,8.528832,9.910812,-1.352842,-2.411020,1.777719,8.492128,-5.254651,-7.678233,8.137616,-4.542509,-8.639991,-0.903066,0.888594,1.771036,6.770076,6.971342,-9.538429,7.848777,8.122353,-0.554398,-0.574285,-7.391229,-3.447189,-4.498531,-6.620447,-2.100497,-6.055000,5.156202,6.165069,-0.659404,-3.807772,2.352266,-0.811115,2.478496,-6.367993,5.404086,-1.717819,-7.599476,-7.008324,-9.061105,4.520590,3.912034,5.162211,2.887853,4.589876,4.479096,-9.361926,-2.942594,6.961226,-4.034558,3.065178,8.982632,7.990943,-5.070361,-9.273828,8.967263,1.034963,1.742976,5.170251,4.672051,-7.492609,-4.480707,7.265556,-2.307190,-8.127155,3.524604,-3.786664,0.054682,-1.396670,2.966310,5.827453,-8.004643,7.239754,0.813275,-5.586086,-9.566783,-8.227424,8.428854,6.607733,-5.246193,-9.813408,-3.527936,-4.097865,2.431301,9.687613,-6.663475,2.698978,-2.032182,-2.433517,9.037946,-3.029944,-2.355801,-9.163084,9.637932,9.924105,0.988492,6.234986,-4.561612,-8.228721,-2.465711,-3.723176,-5.802575,8.113917,-7.736254,-7.865521,-4.525992,5.639284,3.769678,4.975537,-7.037291,6.475684,-0.198982,3.294319,-3.847902,-8.639539,4.954678,3.243565,-5.023888,-3.260928,6.008486,-3.869409,-3.084600,-7.966460,5.634001,-9.820540,-5.408210,-7.145715,-9.364332,6.981720,8.860868,8.165673,-0.805708,-2.788229,7.333391,7.951740,6.273986,-4.530330,-8.906261,-7.689923,-2.138846,9.191535,-7.455708,-5.965531,8.490573,4.032206,3.212909,8.836850,-7.781119,2.573392,1.879697,-5.539839,-1.798402,-7.930885,0.863184,1.803521,8.139005,-0.055141,-6.607943,-3.346518,-8.520802,-0.055311,-7.709797,7.227061,1.765920,-3.741082,7.584651,8.035551,2.753164,-0.222811,-6.565892,7.664885,-0.983221,1.961894,-3.577828,-6.328332,-1.331912,-5.476206,1.369612,7.276062,-4.636269,9.940529,-3.604471,-1.044386,-8.820999,-8.357969,-3.210123,-5.561813,6.685831,6.662510,8.724551,-2.664753,-0.734268,-4.057459,-5.476463,-7.815483,6.229238,-5.176538,-0.393902,1.299074,-6.135243,-8.330879,7.958898,1.447033,-0.376595,-5.316398,0.381478,0.149230,-3.351211,0.888169,4.187789,3.847984,0.846042,-8.125914,-8.217803,-4.181152,5.203446,7.642500,3.245852,8.597051,9.916614,9.936061,-1.420927,-7.806434,-2.365160,9.512047,2.992814,-2.453242,6.407008,4.446111,-8.895251,-0.936762,-8.328609,4.638865,-5.464536,0.159680,-9.823839,-5.882012,-2.233280,0.189539,-6.779035,-2.374125,-6.284058,-0.005116,-0.531501,7.750800,0.599489,-8.218539,-7.076708,5.625657,1.884619,-2.877540,3.600188,-8.879073,-7.933997,-4.364411,8.215893,-8.413312,1.091924,6.123813,-5.492913,4.809652,-9.375486,8.911255,0.626497,6.949548,-6.429339,-5.180451,7.349390,8.711335,4.944140,-8.664312,-0.467668,-3.263151,-6.433976,9.502381,-1.774616,-9.495126,5.694832,7.791506,0.134891,8.181900,4.476971,7.981380,-2.496895,-2.353308,7.792670,-3.730349,3.538001,5.775191,-2.178537,8.483000,1.223545,3.498909,3.240204,0.784489,-6.907631,-6.615141,9.811914,-3.047386,-4.146147,2.039693,0.320759,-2.914266,-7.912707,-2.527755,-9.535837,7.827266,-6.075655,-8.019170,-4.212923,-6.964654,-3.905839,-6.656574,-2.365754,-3.381750,4.228161,-9.780565,7.595224,3.817171,2.191223,5.825150,5.800360,4.564116,9.375219,-1.705225,-4.722589,-3.636156,8.517211,-3.511143,5.749725,2.555221,-3.101450,-8.507865,-5.352457,5.561758,9.148170,4.112400,8.517902,-8.265909,6.186872,-4.722333,1.881136,-8.998482,1.509689,0.209105,2.518670,8.557817,-0.823011,-8.737863,-1.591416,-7.673887,-4.242789,-5.535984,4.494991,-5.865280,4.648769,-2.197220,-7.764055,-7.545848,3.647364,-8.521940,-6.533301,-8.739762,9.848051,6.340541,-7.543867,-3.197530,6.009400,-7.849262,8.649897,7.469590,-5.518662,-2.881720,2.205772,-0.075658,-2.656723,5.381096,4.139229,4.931823,-3.401751,-6.192640,5.521730,0.996687,2.551650,1.614932,7.151767,-5.163396,-9.157285,-5.920151,5.923856,-7.630148,7.177099,-9.078982,8.555435,-9.682582,-1.957530,-7.103980,3.247045,-8.072770,6.545698,1.001269,6.613131,-2.555540,-1.482112,4.452775,-8.653315,5.227333,9.760644,-8.953277,-3.848416,0.919480,6.618054,-0.194154,2.572194,0.018267,-9.492078,3.273741,-4.417454,9.798333,-3.958139,-6.188454,-5.853906,1.489128,5.377440,-9.473456,-8.840026,-5.568365,7.642219,-6.500172,-2.608205,1.132572,-0.225219,-5.157820,5.526252,-4.220560,-2.426932,-4.984437,-5.841336,-4.980030,4.079973,7.001715,-2.255710,3.609509,-5.150438,8.005504,0.713478,4.190075,7.683109,3.035375,1.930161,4.497435,-6.909294,-7.900508,7.601950,9.147914,6.439123,-1.032681,-6.923272,1.655576,1.705150,1.592022,-6.168225,-0.673435,-0.979856,-6.884920,1.944182,6.110274,5.173714,0.636237,4.550815,9.362745,4.795391,-6.238626,4.106400,7.376322,-8.468191,3.691126,7.267538,7.034350,5.786517,-2.076966,9.502620,6.626563,9.451619,9.619650,0.617092,-7.691190,-6.886662,-5.910498,-4.617923,-8.935356,0.738100,9.852255,6.575847,-5.845885,-1.973092,-4.142386,7.477583,-2.236261,-6.576011,9.181496,-4.569681,-1.712536,-9.213261,-8.218832,-7.338365,-4.995950,6.441742,9.602787,-4.246893,4.401837,-6.965914,-0.824922,9.036278,-7.347892,-4.610689,6.270847,6.417365,8.963847,9.296297,0.263597,-4.946569,9.553298,9.128453,-7.763545,-2.582532,3.808189,3.633067,-6.551630,-0.515664,-1.627455,-8.759248,-3.867209,-2.418213,-5.277533,2.468008,3.338865,5.163007,0.626097,7.287033,-1.831518,-7.180793,-3.028699,4.082851,-3.893751,-8.371790,-1.294136,8.495942,-1.696837,-3.745357,9.738836,-8.796733,7.322118,9.743478,4.495274,-4.974219,-6.029403,5.163432,7.562156,-8.507148,-6.484929,-5.294555,3.261661,1.619130,5.369029,-8.312275,-2.708919,-4.333654,-5.350662,-3.496903,-9.082315,4.252095,0.518238,-4.285181,6.498816,4.162770,3.254227,-1.700612,6.235347,-0.613799,5.527519,4.419577,-0.692153,3.142731,9.867658,-6.122273,8.659864,-9.394240,-9.534718,8.733271,7.380169,5.121488,-4.239156,-4.777976,-9.376408,1.201452,4.643361,4.044489,-3.321426,0.136427,-7.420235,5.350059,4.378816,6.410918,-0.591480,-9.898654,5.001335,-3.566556,7.672244,3.280893,-1.119732,-3.562807,8.981373,0.690281,-6.983161,5.454827,-3.455410,-6.613727,-2.022006,6.356033,-5.937654,3.650582,6.717748,-2.029296,-4.309809,-6.877080,-8.516648,-0.472577,-8.638130,6.740690,-8.420068,-7.178668,7.631060,5.417807,-7.878115,4.613275,-0.857512,-2.212571,-8.546498,-8.947985,-5.313985,4.162691,4.304553,-3.483337,4.008218,9.148832,-9.754769,-2.974082,-5.661275,4.468767,-2.781537,-5.976198,1.730837,7.578355,5.718937,-1.665356,-5.263420,-8.227970,-5.146994,-0.452728,-5.778608,8.892225,3.178858,-3.633548,4.211173,-4.035621,-0.364477,-4.179976,7.911162,-4.176275,-3.258191,-5.070913,-3.268604,-8.108896,6.609288,3.088597,-8.627850,-3.544421,-9.603260,-4.162521,-3.337787,-5.941106,2.265392,7.711614,-5.532187,5.830864,-6.581708,9.412619,-9.973735,3.606468,-0.158766,0.304218,-0.831074,-3.480971,-2.741431,-0.453265,5.403436,-2.806337,-3.077506,9.802445,2.003161,8.441327,-8.074758,-3.133423,-3.293393,-5.624507,-3.157746,-8.780832,1.454845,-4.102184,3.233044,0.310153,4.459921,5.108956,7.377853,-5.865048,9.861987,-7.347740,-9.950943,-6.513396,6.551282,-7.094653,-7.937662,-9.599163,0.480809,0.715334,1.634755,-1.292523,-5.770424,-4.527200,-9.319876,-4.845428,-1.671763,-3.938938,-9.283102,-4.854419,6.172336,6.280172,2.957210,-7.708961,-2.894830,5.620807,-2.333155,-8.212349,9.452814,-4.912543,1.216422,2.312391,4.838935,4.582360,-4.228517,6.393666,-0.574404,5.378035,-4.220714,-4.276114,5.240583,4.361041,4.109468,7.005321,-6.773693,1.585127,-1.108397,-5.740576,-8.171605,8.194745,7.853900,-3.715663,-1.702304,9.361189,7.503900,4.897752,2.383646,-3.602059,1.201411,3.564503,3.309960,0.514123,5.817925,-0.461871,7.956238,-5.692868,-4.306025,-8.735976,-1.398702,-3.802044,-8.676486,-6.486951,-2.330260,-8.458296,-8.416560,9.320887,-9.745540,-6.208439,-3.111027,6.417870,-6.762812,-2.318016,1.175419,6.647036,-4.860902,2.385287,-8.158450,-4.991181,2.933917,-2.431190,-5.383098,0.869954,-6.486924,-5.016652,-7.647524,0.633978,2.297714,-1.129485,-0.202725,-7.968689,5.903475,6.965685,-2.082771,-7.693684,0.064300,0.152688,-3.594070,-2.796283,-2.365162,-7.685758,8.483276,-4.739830,1.016199,9.260295,-2.998370,5.658013,1.217949,8.356642,-9.796954,2.791630,-0.475400,-0.239991,-2.082886,-9.451401,5.170066,1.234109,-2.473048,-4.344751,-3.471871,0.227669,9.678777,-5.182901,-7.201040,-7.058893,4.445696,-8.794805,8.339042,9.352303,5.992353,-6.171974,-1.703488,3.980522,8.027860,-0.012862,2.975577,9.816515,-0.075501,-2.530655,9.692344,-3.193150,-1.682323,8.638615,3.007066,9.575942,-7.834618,8.814524,-7.591293,2.718258,-9.430076,1.220615,6.525284,8.113647,6.674306,-4.048626,-7.273852,9.531722,1.134456,-5.613730,0.893677,-1.338769,-9.210981,-5.945851,-3.678868,-2.314070,-5.684090,5.205199,-1.578923,1.234349,-3.598108,3.056089,-6.017552,7.866355,4.688904,-5.065830,-0.848170,-1.173874,2.492559,8.103327,-8.996854,-1.468509,6.648777,-5.744860,-8.906222,4.501188,-8.334914,-2.371233,-5.740444,-3.872246,2.793827,-9.978123,5.626177,-2.758854,-4.519632,9.774024,-5.819091,4.876553,8.141248,1.130653,0.820205,-9.653200,1.356727,6.024345,-2.074180,7.167310,-5.716922,5.252219,-4.273416,-8.511338,3.843935,4.799569,-9.453008,-0.826201,4.187978,3.112088,-7.393057,-2.309736,-5.137725,9.296289,5.191987,6.930863,6.040511,-2.032460,-4.140660,-9.821902,-3.825834,5.368949,-1.794657,-6.771005,-8.847029,-8.285946,2.897920,-7.804693,-1.952456,-8.312075,2.009108,-6.745424,5.567873,-3.814666,2.146194,0.779470,9.515724,-5.947141,-1.352977,2.928735,9.828105,-2.620845,-7.629106,-0.295435,-6.452317,-0.948976,-1.128634,-9.290316,7.825438,-6.656624,8.031063,-3.004886,-2.301735,-4.350425,0.520069,5.803600,-2.768519,4.301353,6.936187,0.401000,0.181717,9.682392,-9.420576,2.018344,-2.914014,9.005586,7.193201,-0.637795,-3.247948,8.067345,-6.289095,-3.085116,-8.592322,7.680306,-2.756925,9.055131,0.157291,3.057777,8.767117,4.289557,-0.999782,9.122335,1.467492,-1.634940,4.685620,8.003244,-8.629954,-4.739606,-8.687625,-7.371061,-3.522243,-5.218649,-2.965751,-3.681822,-8.883716,-0.707074,-6.072923,-9.546958,5.943303,0.590839,-8.126662,1.732531,3.980557,6.856138,3.505610,-6.970346,-0.553768,2.534820,-0.521421,-3.799191,-2.418959,-4.029480,-0.987860,-3.813127,0.560303,-5.618339,-3.632597,-5.760324,2.179586,2.768362,-2.432910,1.573197,-3.087487,3.451141,-6.420375,8.061694,-6.990366,3.093496,4.762922,9.243872,6.603057,-3.202713,9.652059,5.075894,6.715462,4.511352,-0.319216,-0.696497,-7.768063,-8.062128,2.798634,1.617412,8.916824,-2.453730,-7.594348,7.215612,-6.335809,7.345203,-3.451616,-0.276644,-4.759519,3.390743,-6.798518,5.196401,-9.044771,5.163543,-4.281925,4.794570,2.266206,-5.171326,2.212230,-9.197434,4.467229,2.787605,-4.314334,2.295946,-9.672210,-7.827658,-3.802400,2.904455,9.907673,-0.992323,2.184093,1.748868,-4.676040,-6.486325,4.045541,9.808800,-6.980591,-3.503625,-9.573922,7.122039,1.505244,-0.258053,-2.563611,-7.334233,-6.521847,9.290577,-1.351262,6.901262,-7.822224,6.161466,-5.373621,-7.194542,6.589804,9.109146,1.288407,-5.009945,-7.143860,-9.306202,-2.821994,-0.606567,-7.717160,-5.676266,-3.435055,0.825297,3.194127,-0.224155,0.631480,6.150792,-0.094128,-5.202912,4.867505,-3.655765,1.445565,-1.233024,2.099470,1.941625,-4.457396,-9.284956,6.363140,1.886220,-9.077468,-5.455090,2.298620,8.525705,-6.165046,0.088453,-0.659300,-2.730334,-4.235212,-4.797229,1.589479,1.327817,6.591357,6.009549,1.815973,-1.510798,-0.753530,0.662135,-1.689763,7.041121,5.684071,-4.366740,-1.063076,0.567017,-6.032925,-7.702579,1.306997,5.262376,-2.221519,9.625254,-0.856062,5.306671,-7.885624,-0.332410,1.506631,-8.863045,-2.040763,5.990002,9.794653,2.293902,-1.469715,6.822594,-2.843619,-3.680308,7.437215,-1.514490,3.718605,9.967406,2.028282,-0.949400,5.749452,8.891931,-4.306687,6.218551,3.576373,9.794602,-5.384205,-9.001408,8.419449,8.480064,-8.028341,-4.635828,-3.546803,-3.130424,6.009281,-3.345737,2.844653,-5.046041,-0.619111,9.219384,8.753978,5.212131,5.016912,-3.395521,4.084762,-9.924160,8.373031,8.879052,-8.170388,4.354824,9.546433,-9.841947,2.340137,-7.304166,-7.991353,-6.792960,-4.365846,-0.804402,4.190254,-7.675818,-0.662540,-3.468040,-5.771885,1.683334,6.343774,-1.492312,9.645638,1.296012,-9.788652,-3.638018,2.618769,-1.407494,5.538177,-9.773899,7.244791,8.084896,6.034317,2.349246,2.853161,-9.682823,-9.123812,5.448311,0.834043,-1.797049,-1.056501,6.460652,5.419377,9.148468,-7.579200,0.119879,0.177905,1.925412,2.347298,-6.039743,-6.798703,5.815730,4.162230,-3.046623,-5.596253,-0.075092,8.153013,-7.438189,2.630193,4.147354,5.949148,8.293534,9.528201,4.917360,-3.399672,-2.375906,-4.844540,9.389867,-7.228745,3.450705,-8.161009,-9.044645,7.081581,7.851753,-8.755685,-7.431936,2.104017,-1.338750,-3.276022,9.611326,3.846151,9.114671,-7.794238,-2.094584,-4.509856,1.679564,3.449334,1.819773,-1.509363,-0.086023,5.583263,3.874068,-1.096734,-8.474295,2.166150,4.045039,7.559734,7.578074,0.035853,-4.238218,5.350756,2.034761,6.492196,7.443398,5.626739,3.157729,-3.815772,7.667015,-6.969914,2.422948,-6.180059,6.518269,-8.283755,6.735833,-1.599112,7.286100,4.526778,-4.569679,3.969689,-9.653712,2.658624,-3.654019,-7.706130,9.194560,7.521343,3.657426,2.112570,2.742304,5.940015,-9.004686,-3.007936,4.563665,-2.996117,0.779923,4.741844,-4.823999,9.287489,-8.551197,-0.982648,-4.777990,-8.167310,0.066331,-0.087446,8.294936,3.376672,9.724999,-4.902396,5.644279,6.676961,-6.494000,0.777322,0.427092,0.583046,-1.904988,0.808380,1.072717,-7.468345,-1.938017,0.985657,-7.697834,4.897065,6.501429,-1.563274,-0.286836,7.245566,-5.318350,5.786234,6.485581,2.840523,-5.906384,-6.726524,6.833096,0.660942,-3.311023,2.796777,4.777443,-4.780437,-2.078892,-7.688912,-0.020953,-5.954394,-7.058371,8.255526,-9.910720,4.942143,7.641819,4.366273,3.825423,-3.226242,0.077702,-5.622344,-3.431167,0.336692,-4.435678,2.472333,1.104795,0.214564,8.608145,2.110199,-7.811330,0.311133,6.762568,-0.781455,1.560332,-9.899870,-3.971394,0.436949,2.197201,-5.636383,-0.188309,6.243284,6.272383,7.262098,3.617116,-5.015141,-1.718479,9.215698,-2.505264,-7.503808,9.010649,9.421659,2.197296,-6.589450,7.422627,-8.485134,2.840272,-0.530195,8.421773,5.598096,-0.789602,-9.594366,9.885896,-7.627927,4.963378,3.603547,7.455725,-8.350160,-8.322632,-5.906394,8.495110,6.607388,-6.251458,1.721259,-2.267713,-0.511003,4.166165,3.202175,-7.505294,-0.285716,-2.082082,-4.299447,-5.144474,-5.201456,-3.523000,2.678731,-1.085070,-9.041120,-9.367258,-1.539457,-5.387137,5.726963,5.312055,5.393916,0.650806,2.235911,7.921625,1.537394,-1.317632,-4.170194,-9.869269,7.526400,9.066690,5.524452,0.581207,-3.968919,-0.612261,4.538471,-5.293236,-6.015947,7.738591,2.683090,6.679787,-2.952688,-6.211074,-2.567895,-1.875539,4.338941,0.240207,6.413228,-7.716521,2.402999,-2.407181,-2.945200,2.513157,-2.117374,-5.764436,6.115675,-7.843649,-6.240437,9.396809,-7.356481,-7.523103,8.273303,-3.819914,-3.597087,-5.799601,-6.298585,1.172850,3.655606,8.980373,1.657818,2.489683,8.586969,-2.704204,-5.680147,0.229497,-5.437753,2.222011,3.920006,-7.260784,-8.393520,0.815553,1.167058,-7.100442,3.375844,-4.585258,4.173162,-0.471077,-5.813665,-5.943935,-0.985753,7.340657,9.935573,-5.004428,-8.392144,4.958486,4.440783,5.384861,4.642978,8.018628,1.464280,1.431263,7.563938,-8.734783,-8.875869,-0.465362,-5.439467,5.070903,-9.575825,-2.823388,8.564396,-4.610546,6.382465,8.426757,3.153219,8.164914,5.906692,3.618548,-5.499358,-4.763088,7.854564,8.343110,-3.609394,3.139867,-6.810909,6.141112,9.415321,-8.817505,-9.743230,0.370007,-2.294899,-3.504770,8.084657,-4.287690,9.275305,5.375463,-7.955511,-6.963342,4.344144,8.762884,-6.009318,9.808622,-5.119451,-9.150954,-4.629909,-2.532003,-4.412601,-8.238573,2.042005,-3.061800,5.421408,2.523504,-6.658721,-0.617151,4.069208,-1.024595,-5.612048,-2.584308,2.129263,9.048795,-0.724040,3.934999,9.005609,7.856469,-9.103946,4.004889,0.534689,3.002075,7.789457,6.486398,-1.913194,-3.595074,-2.134051,5.731415,3.263391,3.804677,1.972491,-6.458125,-2.252228,8.782636,0.683637,-5.679374,9.194270,6.358505,4.989905,5.883198,-1.585680,-6.224022,-0.531201,-1.713922,4.792249,-4.770366,-8.796765,9.354167,-1.190710,-3.523936,4.389031,-1.650714,-1.774787,3.756553,-4.674472,1.668098,-4.048299,1.365002,-7.734748,-9.757736,3.942650,-2.950257,-1.274812,-1.704683,-3.584003,-0.212041,7.132842,-9.377915,-6.547059,4.157607,-7.054756,8.070819,1.542994,-5.828183,0.586952,2.133042,6.065129,-7.080521,0.037759,-9.889817,4.953788,7.737229,1.280995,4.998625,-1.943285,-6.958351,3.054129,3.281365,7.462129,-8.353287,2.655444,2.309172,4.351888,-6.556567,7.343832,-7.918242,8.880978,4.152570,7.838210,6.283396,-2.433681,1.178002,1.345145,-4.694976,-6.534373,2.820753,-9.542351,-5.398566,0.305107,-0.606565,4.141373,6.620930,-8.968561,0.202087,8.079123,7.636685,-3.762223,-9.538048,-7.334347,-7.856519,4.370563,-6.355716,3.917911,-2.252419,5.016923,5.659125,9.033938,0.844332,2.556958,-3.744692,7.825094,-8.898967,-0.753818,-3.220044,6.497550,3.317281,-4.326807,-4.016257,-3.899524,-5.192468,8.002052,-6.414289,8.207026,7.721886,-9.841282,1.138290,3.135996,2.646187,-8.206617,-4.195712,2.716483,3.113554,9.026319,0.934795,-4.340536,4.634546,4.354442,-9.162460,-2.336700,0.685828,2.620577,-4.766863,5.987946,-8.987111,3.654365,5.810578,-4.504699,3.672196,5.124377,6.881775,-3.975595,8.514115,-6.999555,-3.360244,3.284501,1.273525,0.146641,-8.435818,-2.545902,-1.265076,1.615856,-9.289453,-7.672018,-6.991194,-1.634326,2.864884,-7.639741,-5.635651,3.433105,0.330168,-9.891789,9.369347,2.492147,-2.562602,6.402618,7.404138,5.086982,-6.392046,0.714239,3.999401,6.422495,3.596718,2.817700,-1.110932,-6.930353,-7.807414,2.024027,-8.933324,3.688603,-3.947428,-2.921590,9.148241,8.389118,4.109790,-6.290083,-2.762176,-7.475293,-6.494701,5.759918,-2.374397,-9.859103,-5.405303,-6.560209,-0.786754,-3.298225,-3.871266,8.281087,-4.750685,-8.252436,2.061814,-1.307423,-8.937352,5.807037,-5.479747,7.586588,7.889627,7.069253,5.250282,-7.155950,8.488106,-8.815562,9.957686,-6.244137,-5.052935,-2.483008,4.521178,7.102280,2.213559,-2.528478,2.534252,-5.721408,-3.669885,1.676279,8.950256,1.260700,-8.801261,7.505307,4.991948,3.110159,-8.915691,-5.413481,-9.093879,9.601412,-4.024687,5.575472,3.944919,-7.228480,-4.807733,-7.451259,-1.648020,-1.161924,6.070573,-3.378663,3.296027,6.305962,7.960741,-9.383003,2.928704,7.629776,1.630189,-1.642272,-8.873311,-9.469569,-6.314785,3.851052,7.318531,6.827044,6.261333,6.142388,5.962954,-1.516264,-2.799288,-9.994322,-0.531601,-9.607964,-8.876891,-7.838581,4.217502,8.724133,3.146931,-5.189008,8.079555,-0.374609,-1.457801,2.247191,-8.904011,-5.941627,-1.480348], dtype = "float64")#candidate|2726|(2535,)|const|float64
const_2727 = relay.const([-3,-10,-6,-10,-9,-1,-9,1,-6,-1,7,-5,-2,8,-10,-9,3,6,2,-4,1,6,-10,9,-9,-1,6,9,-3,-6,-7,-9,-8,-2,1,9,-3,5,-2,-9,3,-9,-8,-7,-7,-7,1,7,-1,10,-8,7,6,3,6,-10,6,10,-2,-6,-1,3,10,-1,-2,-4,-2,10,-1,-7,-8,6,8,7,-2,-9,7,6,6,8,-10,8,3,1,4,-1,-5,-6,4,5,8,10,7,-5,-5,3,-5,-9,-1,-2,-8,-7,1,-6,-9,-4,6,-4,-2,-8,-2,-4,1,5,2,7,10,3,-7,10,-1,-5,-10,1,-8,9,-1,-6,4,4,-7,-8,-5,2,-1,10,-7,-10,-1,-9,4,-8,-10,-9,6,-4,4,-3,2,-3,-8,-6,5,1,1,-7,-5,9,-1,-2,4,3,-8,9,2,5,-4,-4,-9,6,-3,4,-8,-5,-3,-8,-3,-5,7,-2,-5,-6,10,-7,-5,8,6,7,-6,6,1,4,-5,6,-2,-1,-5,-7,9,3,-7,-3,6,-10,4,2,10,-3,7,-6,-8,-8,-6,-10,-9,8,-8,10,10,-4,3,-2,-4,-7,4,9,-2,5,-2,-10,9,-6,8,-9,-5,3,-1,-3,9,7,7,5,5,-7,6,9,-7,2,-2,-4,-6,-6,-1,3,1,3,-5,9,-10,-8,-6,-2,1,-10,5,-9,10,-7,6,-3,1,7,6,-8,2,1,-3,3,-6,-7,5,-9,3,8,-7,6,-8,-6,9,-9,1,1,4,8,-6,-1,2,8,8,-5,-10,5,-4,-2,-6,-7,4,1,-1,8,-7,-10,8,4,-7,-3,10,5,-10,8,-10,4,-3,2,5,3,10,1,-3,-4,-4,7,4,7,-9,-1,-9,4,10,-8,-9,-9,6,7,-4,2,-9,-1,1,8,-2,2,1,-3,-4,-8,-4,2,-6,3,-9,8,-6,-10,7,-8,8,-8,5,-2,4,4,6,2,-4,-9,-10,10,8,-2,9,-1,1,5,-5,-7,-6,9,-6,3,-3,-2,1,-10,3,3,-3,10,-8,-2,-4,1,9,-4,-8,2,9,-8,-5,1,-10,3,-3,-9,-9,-3,7,5,-4,10,5,-5,7,7,2,1,6,-5,-6,1,5,-8,-8,8,-3,-5,-2,5,4,1,-1,5,-6,-8,7,6,3,-4,-7,2,3,-8,-8,4,6,5,8,7,-4,-4,2,3,-6,-6,-3,4,-8,1,-5,7,10,1,5,2,2,-10,-8,10,4,-8,8,1,4,1,8,-1,1,-4,9,-6,2,5,-1,-5,-3,-1,2,-7,5,6,-8,-2,10,-3,-4,9,-5,7,9,2,-4,5,5,2,1,-3,-8,8,-3,-8,10,-10,-2,-4,8,5,6,-7,5,3,1,7,-3,9,5,-10,5,-3,-8,9,10,-9,7,9,7,-10,-10,-10,-1,8,8,-5,7,-1,-5,-2,-6,3,-8,5,-6,8,3,8,8,-2,-3,3,-4,-6,5,-6,-2,-4,1,8,6,3,3,-5,-7,-9,-5,2,-7,10,10,-4,-3,3,-10,1,-4,-7,-8,-7,-9,-7,9,6,10,7,-2,-2,-9,-10,3,-5,8,3,-4,2,9,10,9,-5,1,-2,-2,9,9,-2,-1,-1,-1,-4,9,10,5,7,5,-6,-3,-1,-3,8,-10,-4,9,1,-2,-5,-2,8,-7,3,6,-10,8,-5,4,10,-4,-8,-10,5,5,-2,6,-4,2,5,-9,-6,-10,5,-4,9,-1,-3,5,4,9,-7,-3,-8,-2,-2,1,5,9,-5,-7,3,3,-1,-5,10,-1,8,2,1,-10,3,3,3,10,-8,-4,8,-8,-10,6,-6,-9,-2,-10,-4,-8,-2,-7,-6,2,-5,-5,-6,2,6,5,4,8,-6,-9,-9,-7,9,-3,-2,-8,-1,-2,6,2,3,-5,3,4,-2,-8,-1,1,1,-6,-8,10,7,-6,-7,6,8,-6,5,-8,5,5,5,8,9,-8,10,6,-1,2,-3,-7,-10,-1,5,9,9,7,-1,9,1,-8,-5,-10,-9,4,1,-4,-6,-3,6,10,9,7,-4,-1,-4,-8,5,7,10,-7,-5,-9,8,2,7,7,-9,5,3,-8,5,7,-4,6,-10,-5,6,7,-8,-5,-1,1,1,5,2,-2,-1,-8,5,-1,9,-9,-1,-10,-5,6,-9,8,-10,5,-8,10,-6,-6,-4,-6,-4,9,-1,-8,4,-10,10,-5,3,-4,-7,-10,-3,-3,-5,10,-4,-7,-8,1,9,-4,-1,9,9,3,-8,-8,-9,-7,-2,4,-6,10,5,3,-5,1,8,-8,-5,-4,5,-3,-4,9,-7,-1,5,6,-5,4,-8,5,-6,6,5,-4,3,-5,10,-5,8,-2,1,2,9,-7,-10,-4,5,-8,1,3,1,-4,-3,-10,7,5,-1,6,-3,-6,5,-9,-1,1,1,7,3,7,-10,-8,-10,-9,-7,3,-9,-3,1,5,3,4,-1,7,2,-9,-2,1,7,3,4,6,-4,-8,-4,-7,-8,-8,3,10,-1,10,-5,5,3,-7,-3,10,5,4,-10,4,-5,-6,10,-6,4,-6,8,-10,9,-8,2,2,8,7,-9,6,3,-2,8,6,5,3,-1,-2,2,-5,-8,4,-4,-5,-9,-9,-3,-5,-3,6,-3,9,2,6,-3,-8,9,8,10,10,-4,-2,-2,-1,8,-2,6,4,-5,2,1,-1,-2,6,2,-3,-5,-5,-2,1,-4,2,4,-8,8,9,9,-2,6,-5,3,7,3,-6,-8,8,10,2,7,5,9,5,-3,-9,6,-9,3,9,-6,2,4,6,9,-9,7,2,-9,3,5,-1,7,-1,6,6,-5,-5,-10,2,-10,-8,7,4,6,-8,-1,-3,8,1,-2,-5,-7,7,-5,9,-1,2,-6,6,4,-4,-4,5,8,8,-5,8,-5,-1,5,-6,8,6,2,5,-5,-3,3,1,-6,-3,1,-6,8,7,-9,10,10,-1,-8,-10,-7,-2,-3,-2,-3,3,-8,-2,-6,10,1,3,5,-6,2,6,1,10,2,-6,-8,-8,-7,1,-9,-9,2,-4,7,10,7,1,-5,-5,-2,1,-9,-6,-7,-10,-9,-9,-2,-8,2,-2,-7,9,1,-8,-5,5,-5,-2,10,-1,2,2,2,5,-1,4,-10,-7,-9,8,-3,7,3,-2,-1,4,10,9,7,7,3,-3,6,-5,-6,-8,3,-6,-5,3,-9,1,-4,-3,-6,-8,-4,1,-2,7,-7,-6,-2,-1,9,5,3,-1,-8,-8,7,-3,-9,-4,-1,1,-8,2,-9,9,7,10,-1,6,5,4,-2,-4,-1,3,1,-2,1,1,7,10,3,5,-10,5,-7,-9,8,-9,4,-3,-6,-6,-10,-8,4,-4,-9,2,2,-7,8,9,9,-5,1,-10,4,3,2,5,-3,-4,8,2,-5,2,-4,9,8,-8,1,-6,-5,-1,2,4,4,8,6,-3,-8,6,5,-5,7,-2,3,-5,6,-5,9,4,9,-5,-1,-8,5,-2,1,-3,-1,9,10,-2,8,-7,-7,2,4,-3,-8,-5,-6,3,-4,-6,-1,1,-6,10,-2,-5,-7,-7,6,5,10,9,6,-3,-8,7,3,1,-3,-7,7,4,-9,-4,-8,9,8,5,-9,6,9,-9,1,4,-2,-9,-3,2,3,-6,-6,10,-2,7,3,-3,7,5,-3,-2,-1,3,-3,5,2,6,6,-1,8,2,-3,6,-6,-8,1,3,10,-6,-2,8,2,-1,7,-7,-9,-10,3,-2,6,-9,1,-9,-9,-3,-5,6,-4,-6,-8,-10,1,9,6,2,-3,-1,2,-5,-4,-5,-1,6,5,-10,4,-1,-10,6,4,-9,8,1,-1,-4,-5,6,7,3,6,8,3,-3,-10,10,7,-10,1,-9,-8,-9,-2,-2,9,-5,-9,2,-10,7,-4,-3,8,9,5,-2,-1,-7,-8,-3,4,-9,-1,-7,8,1,2,-4,-9,8,1,8,-4,6,-6,8,-7,5,10,10,-7,-1,-7,9,-7,10,8,-1,-5,-6,-6,-10,-3,-2,8,-2,-3,6,-7,-5,-4,4,5,6,-4,2,7,4,9,-3,-8,-6,8,-10,-8,1,2,-4,3,-8,2,-7,-1,9,7,-1,-8,5,-8,1,9,-8,9,7,-3,7,4,6,-4,-7,6,-3,4,10,-2,10,5,2,1,6,-6,-1,6,6,-10,-9,3,-1,-2,3,-4,-7,2,-2,1,-8,2,7,-7,-8,-10,-7,10,1,1,-8,-8,3,-8,-2,-3,-8,-2,-3,-10,9,-7,-2,-4,-3,-9,-7,7,7,-5,6,3,-4,-9,-5,-7,8,1,-5,4,-10,-8,-2,-9,2,-9,-3,-2,-7,-6,-1,-7,1,8,-4,3,-7,-3,7,7,-5,8,9,6,3,6,-7,3,-2,-3,5,-10,-8,-1,-6,-4,7,10,-6,-9,10,-2,-10,-6,-8,-1,-6,5,-6,9,-9,5,-9,-9,3,3,-5,2,-2,2,-7,4,5,-9,8,-5,3,2,-4,4,-10,1,-3,-3,-1,-6,-7,4,-10,3,1,6,7,-5,-8,10,-7,3,6,-5,-8,-7,-3,-5,6,-4,7,10,-5,-8,-5,1,1,-1,8,6,-9,1,6,7,-7,10,9,9,-4,-9,5,-10,-3,-3,-7,9,2,9,7,1,-7,7,10,3,4,4,1,-6,-4,-7,8,6,3,9,1,3,10,5,-7,5,-10,1,-2,8,-5,-9,-9,4,-10,4,-10,1,-9,9,5,-5,4,6,2,4,-9,2,-7,1,-7,1,4,-9,-8,-8,4,-8,9,6,10,-1,-4,8,-9,-9,6,6,-1,4,5,2,7,-10,6,10,-8,4,3,-1,2,9,-1,-9,-7,-4,7,4,6,2,9,-7,-2,7,4,8,-2,-6,-1,5], dtype = "uint32")#candidate|2727|(1872,)|const|uint32
call_2725 = relay.TupleGetItem(func_2050_call(relay.reshape(const_2726.astype('float64'), [15, 13, 13]), relay.reshape(const_2726.astype('float64'), [15, 13, 13]), relay.reshape(const_2727.astype('uint32'), [1872,]), ), 1)
call_2728 = relay.TupleGetItem(func_2055_call(relay.reshape(const_2726.astype('float64'), [15, 13, 13]), relay.reshape(const_2726.astype('float64'), [15, 13, 13]), relay.reshape(const_2727.astype('uint32'), [1872,]), ), 1)
output = relay.Tuple([call_2719,call_2725,const_2726,const_2727,])
output2 = relay.Tuple([call_2720,call_2728,const_2726,const_2727,])
func_2750 = relay.Function([], output)
mod['func_2750'] = func_2750
mod = relay.transform.InferType()(mod)
output = func_2750()
func_2751 = relay.Function([], output)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2622_call = mod.get_global_var('func_2622')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_2785 = func_2622_call()
call_2786 = func_2622_call()
func_2342_call = mod.get_global_var('func_2342')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_2791 = relay.TupleGetItem(func_2342_call(), 0)
call_2792 = relay.TupleGetItem(func_2344_call(), 0)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_2801 = relay.TupleGetItem(func_2601_call(), 0)
call_2802 = relay.TupleGetItem(func_2603_call(), 0)
bop_2815 = relay.logical_xor(call_2785.astype('uint8'), relay.reshape(call_2801.astype('uint8'), relay.shape_of(call_2785))) # shape=(6, 3, 12)
bop_2818 = relay.logical_xor(call_2786.astype('uint8'), relay.reshape(call_2802.astype('uint8'), relay.shape_of(call_2786))) # shape=(6, 3, 12)
output = relay.Tuple([call_2791,bop_2815,])
output2 = relay.Tuple([call_2792,bop_2818,])
func_2819 = relay.Function([], output)
mod['func_2819'] = func_2819
mod = relay.transform.InferType()(mod)
output = func_2819()
func_2820 = relay.Function([], output)
mutated_mod['func_2820'] = func_2820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_2839 = relay.TupleGetItem(func_2639_call(), 0)
call_2840 = relay.TupleGetItem(func_2640_call(), 0)
func_1212_call = mod.get_global_var('func_1212')
func_1216_call = mutated_mod.get_global_var('func_1216')
const_2847 = relay.const([0.812988,-8.853753,-6.096505,-0.169859,-7.724454,-7.003553,8.689460,1.473746,0.434210,6.723136,-6.099294,-9.858147,-8.353566,-7.695874,-1.053800,4.071107,6.269857,5.803504,-5.902984,0.575983,-4.912121,8.948873,-0.107467,0.792753,-8.504039,4.180607,-9.479881,-2.072761,-1.088475,-3.001314,-9.298452,-0.166527,-3.581329,7.277884,1.288855,1.408809,-7.662594,9.119293,8.292127,-5.502294,-4.515008,-4.459332,8.950888,8.111013,-3.105345,-4.563119,2.442122,-4.841181,-1.562165,-0.181761,-9.965658,-0.471979,5.870007,8.393584,-9.295215,-4.714071,1.253422,8.649598,8.900951,-1.260106,1.904798,-1.640394,2.085613,-7.280917,-0.092864,-4.618561,-4.268021,8.341877,-5.798160,-1.731275,-1.762623,5.636697,-9.738263,-3.806677,6.397185,1.008949,-4.015748,4.765853,-7.708799,4.051845,8.696799,8.081834,-9.942433,7.612180,7.526862,5.927350,-8.409943,1.172555,-8.979117,7.882304,5.093710,-2.281975,-3.201842,4.427316,7.227735,-8.923169,-0.438003,-2.700726,-1.870007,-5.824745,8.990051,-6.976188,-0.652004,-0.518286,1.208260,7.889959,-4.128926,-5.676265,2.817161,4.650834,4.802038,2.058175,1.656770,-9.079082,4.786810,3.321575,8.467268,3.792357,-0.099624,-6.993574,4.242125,-6.742476,6.481461,-7.407659,-1.815448,7.744308,5.846905,-1.659850,-9.992586,4.358619,6.488880,-4.821053,-3.173605,-4.284700,-4.172957,-6.301019,-9.424524,2.392706,-5.361024,9.654167,-6.267836,-6.769690,3.964346,-4.930716,0.891955,-6.602246,4.579376,3.691022,-5.420141,-1.542984,-4.171968,-0.420015,3.144070,-8.910736,8.309380,-1.530897,-5.380811,-2.647171,9.414421,9.602991,-5.623957,3.595719,4.007707,9.200959,9.170227,-6.107162,-9.134710,-6.919723,-9.251839,7.567370,-2.134860,5.850233,-1.195006,9.095244,5.086010,7.308570,-1.623569,2.942373,8.595271,6.033579,-8.764648,4.056364,-0.622054,-2.608288,-4.398506,-8.215799,5.389785,-0.965329,0.157380,-5.357231,-4.270770,-1.440323,-5.968511,-6.432379,-5.628712,-7.579199,5.669390,-8.709014,-5.080012,4.220967,-9.228940,7.942582,5.889385,-1.035231,1.714026,8.543609,-0.724869,-8.536715,6.344516,-7.939810,-7.282526,-3.251597,-0.690106,0.740709,1.945980,-4.464209,6.554316,-6.876873,5.723899,9.522921,6.366254,-4.223299,3.817338,-9.585905,-9.487349,-3.159403,-5.196356,-0.765375,0.044389,4.452503,-5.686318,6.474071,0.204640,9.776705,-2.814915,-8.728044,0.723665,2.994248,4.754248,-7.010451], dtype = "float64")#candidate|2847|(240,)|const|float64
var_2848 = relay.var("var_2848", dtype = "float64", shape = (648,))#candidate|2848|(648,)|var|float64
call_2846 = relay.TupleGetItem(func_1212_call(relay.reshape(const_2847.astype('float64'), [24, 10]), relay.reshape(var_2848.astype('float64'), [648,]), ), 2)
call_2849 = relay.TupleGetItem(func_1216_call(relay.reshape(const_2847.astype('float64'), [24, 10]), relay.reshape(var_2848.astype('float64'), [648,]), ), 2)
func_513_call = mod.get_global_var('func_513')
func_516_call = mutated_mod.get_global_var('func_516')
var_2851 = relay.var("var_2851", dtype = "int8", shape = (1755,))#candidate|2851|(1755,)|var|int8
call_2850 = relay.TupleGetItem(func_513_call(relay.reshape(var_2851.astype('int8'), [13, 15, 9])), 0)
call_2852 = relay.TupleGetItem(func_516_call(relay.reshape(var_2851.astype('int8'), [13, 15, 9])), 0)
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_2853 = relay.TupleGetItem(func_2639_call(), 0)
call_2854 = relay.TupleGetItem(func_2640_call(), 0)
output = relay.Tuple([call_2839,call_2846,const_2847,var_2848,call_2850,var_2851,call_2853,])
output2 = relay.Tuple([call_2840,call_2849,const_2847,var_2848,call_2852,var_2851,call_2854,])
func_2862 = relay.Function([var_2848,var_2851,], output)
mod['func_2862'] = func_2862
mod = relay.transform.InferType()(mod)
var_2863 = relay.var("var_2863", dtype = "float64", shape = (648,))#candidate|2863|(648,)|var|float64
var_2864 = relay.var("var_2864", dtype = "int8", shape = (1755,))#candidate|2864|(1755,)|var|int8
output = func_2862(var_2863,var_2864,)
func_2865 = relay.Function([var_2863,var_2864,], output)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_2867 = relay.TupleGetItem(func_2750_call(), 2)
call_2868 = relay.TupleGetItem(func_2751_call(), 2)
output = relay.Tuple([call_2867,])
output2 = relay.Tuple([call_2868,])
func_2869 = relay.Function([], output)
mod['func_2869'] = func_2869
mod = relay.transform.InferType()(mod)
output = func_2869()
func_2870 = relay.Function([], output)
mutated_mod['func_2870'] = func_2870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2871 = relay.TupleGetItem(func_1911_call(), 0)
call_2872 = relay.TupleGetItem(func_1912_call(), 0)
func_2385_call = mod.get_global_var('func_2385')
func_2387_call = mutated_mod.get_global_var('func_2387')
call_2873 = relay.TupleGetItem(func_2385_call(), 0)
call_2874 = relay.TupleGetItem(func_2387_call(), 0)
output = relay.Tuple([call_2871,call_2873,])
output2 = relay.Tuple([call_2872,call_2874,])
func_2880 = relay.Function([], output)
mod['func_2880'] = func_2880
mod = relay.transform.InferType()(mod)
mutated_mod['func_2880'] = func_2880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2880_call = mutated_mod.get_global_var('func_2880')
call_2881 = func_2880_call()
output = call_2881
func_2882 = relay.Function([], output)
mutated_mod['func_2882'] = func_2882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2895 = relay.var("var_2895", dtype = "float32", shape = (16, 5, 9))#candidate|2895|(16, 5, 9)|var|float32
var_2896 = relay.var("var_2896", dtype = "float32", shape = (16, 5, 9))#candidate|2896|(16, 5, 9)|var|float32
bop_2897 = relay.power(var_2895.astype('float32'), relay.reshape(var_2896.astype('float32'), relay.shape_of(var_2895))) # shape=(16, 5, 9)
bop_2902 = relay.subtract(var_2895.astype('uint8'), relay.reshape(var_2896.astype('uint8'), relay.shape_of(var_2895))) # shape=(16, 5, 9)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_2905 = relay.TupleGetItem(func_2750_call(), 1)
call_2906 = relay.TupleGetItem(func_2751_call(), 1)
const_2912 = relay.const([7,5,10,-6,1,-7,1,9,5,-3,9,7,8,-2,-6,-6,-8,2,7,9,2,-9,2,-3,2,-10,-5,-1,-2,5,9,10,4,-7,2,1,2,6,-9,-10,6,-2,-8,8,-3,9,-4,-1,-1,-9,4,6,9,-1,3,-9,-1,4,3,9,-2,-10,-7,5,9,2,6,-1,-4,-3,-4,-7,-3,-6,10,-4,6,-1,5,3,-3,-7,-7,-2,-1,-7,7,-1,5,-9,-5,-9,7,3,9,-3,-3,9,-1,10,-8,-8,-10,-7,8,-10,-7,3,-1,3,2,-2,8,-6,2,2,2,-7,9,-5,-8,-2,-4,-10,-1,6,-10,-10,-10,9,10,-4,-1,5,2,9,-5,-6,5,-3,-10,-2,7,-1,6,-1,-1,-1,5,-2,-5,1,-3,-8,-5,-7,-2,-5,8,-8,-6,-5,5,7,3,8,-2,8,6,-4,-9,-5,-7,-9,-4,3,7,7,5,1,5,8,10,3,-1,8,5,10,4,10,8,8,-3,-7,-10,8,10,5,9,-8,2,-10,-1,-2,10,3,-5,-5,-7,-7,-1,-2,-9,2,4,10,-8,-6,1,-4,-8,-2,5,1,8,-8,-1,3,-9,7,7,-1,10,-5,-5,-5,-3,8,-2,1,5,10,-10,-5,8,-4,1,-1,3,3,3,1,-3,-4,-7,7,-4,7,2,5,-6,-4,-4,-10,-8,-5,1,7,-6,-10,-7,5,4,7,4,5,-3,-10,3,-6,-5,4,-10,9,-1,8,-6,1,-5,-5,2,-2,8,-2,2,-1,-10,2,-5,5,-9,-6,-6,-4,-5,3,-8,2,6,8,1,-6,4,10,-10,7,-10,4,-2,-8,-9,6,-7,-5,2,3,-3,-6,-7,-8,3,-6,-2,10,1,3,-10,-9,-7,10,-8,-3,-1,7,7,-7,-5,-5,7,3,3,10,-4,10,3,-3,2,1,-6,3,6,-8,-5,7,8,2,5,9,-10,5,9,-4,3,-6,6,2,1,2,-3,-10,1,6,-3,-9,4,-6,-9,5,6,1,-1,3,-5,2,5,10,-3,6,-3,-8,-7,9,-5,-8,-6,-2,-3,10,1,5,3,4,4,-1,2,-4,-2,-7,-9,-7,-5,1,3,4,-5,-9,-6,4,4,-9,-5,-7,7,-5,10,-1,-10,-3,-8,-6,-5,9,10,1,1,2,2,2,-5,8,-8,10,-3,-10,9,-2,-2,6,-6,-8,7,-2,9,-10,10,10,7,5,-3,1,-2,-6,5,10,1,10,-10,-8,-6,-3,-6,-6,5,3,8,-1,6,-9,-1,4,-9,-1,7,-7,-10,1,5,1,1,-9,-9,-3,8,-7,1,3,8,-6,-3,-9,-5,-1,8,-2,9,1,-2,4,-4,-8,-4,4,5,6,5,3,6,10,-9,4,-2,3,-9,3,-7,8,-4,-5,4,-6,-7,-7,-6,-8,9,-10,-8,6,-1,-3,-2,2,-5,4,10,-8,-1,-1,-4,-2,4,-8,7,2,-5,-10,5,-4,1,-10,9,10,-5,-9,-2,3,-2,-10,7,1,-4,10,3,2,3,4,1,2,-5,-6,1,-2,-4,-4,-4,-4,5,10,9,3,5,2,1,6,6,-4,-3,1,-9,-10,-1,-3,-8,4,6,-7,-5,9,-6,4,8,8,4,-1,-6,8,-3,2,6,9,3,3,7,-6,8,7,-9,9,6,-8,1,8,9,-7,7,-6,-4,-2,2,5,9,-8,-7,-2,9,5,-8,-7,-6,3,-10,6,8,6,8,-2,1,3,-10,-3,7,-10,5,-3,4,4,4,8,10,4,5,-4,9,-8,-4,-10,1,5,9,-4,-3,7,-10,1,-10,7,2,-4,9,-10,3,4,-9,-7,-9,1,9,1,-2,-9,-7,8,8,-10,3,1,-7,-7,4,-7,5,6,6,5,-10,-10,1,-8,-3,-7,8,2,3,-4,-3,1,-8,6,-4,2,3,3,-4,-6,-9,3,1,5,-5,2,-1,-10,9,5,-4,7,2,5,1,3,2,-9,1,10,6,-6,6,8,-9,-1,1,-2,10,-9,9,-2,9,-6,9,8,10,2,9,1,2,-3,-2,6,-4,-2,8,-4,7,-7,7,-10,9,-1,2,8,-6,9,-10,9,-1,-7,-4,5,-2,-10,10,-4,-1,-7,10,9,8,5,4,-2,-4,-3,1,-4,2,1,-3,1,1,7,5,7,-3,-1,-6,-1,3,3,-3,6,8,-9,2,4,-10,-5,6,-8,4,-5,4,3,1,-3,10,2,-7,-8,3,-10,-3,-7,7,-10,-7,-1,3,10,9,-8,3,6,1,6,-8,-6,-3,1,-8,-1,6,-6,8,-10,-1,6,8,-3,10,4,8,-8,-5,-1,8,8,5,-4,1,-10,2,-6,9,-1,1,-6,7,9,3,-5,-3,-6,10,-1,-3,5,6,8,-3,6,-4,2,-4,-3,3,7,-4,4,2,5,6,-3,-3,10,7,7,-8,-5,10,-9,-8,8,-1,6,-8,9,10,10,2,-7,-8,2,-5,-8,7,-7,6,-8,8,10,-2,-1,2,6,-3,-3,-1,-7,-4,-1,-4,7,-2,7,-7,-7,6,3,-1,-2,-6,-7,1,-3,-1,-7,1,-5,9,4,-8,8,10,4,2,8,-2,-5,1,10,-10,-8,-3,7,-4,-9,-3,6,8,-7,-7,-8,-9,4,1,-3,2,-6,-2,-8,-6,-9,-4,4,-7,2,-5,-3,-5,6,2,7,-9,-1,-5,-9,8,10,5,3,5,3,6,-6,-4,7,10,-2,-8,-1,-3,-6,10,-10,1,8,9,-8,9,7,6,9,-9,-6,3,-2,2,7,3,9,-1,2,8,6,-3,1,7,7,1,5,-5,-2,4,-8,-9,10,4,1,-1,-9,9,6,-2,-4,-8,-8,-3,-7,2,-3,-4,2,-5,10,-1,2,1,-6,1,-5,-8,-2,-5,-9,6,-1,-4,-6,5,7,-5,6,5,8,-3,-4,5,-3,5,-9,-1,-9,3,-8,-3,6,3,5,-5,5,3,-10,-5,9,4,-9,8,2,7,-10,4,-8,8,-7,6,3,-9,-8,-6,4,-6,-5,-3,6,8,10,-1,-10,-2,4,-7,7,-9,-2,-3,7,1,4,10,6,5,1,-4,9,-6,-6,-9,2,-10,-7,1,2,5,-8,5,6,-1,10,-7,-3,-3,7,6,1,4,-10,-1,10,10,2,3,-7,-4,10,-7,6,6,1,-5,-7,-2,5,-1,1,5,7,1,10,5,9,-3,-4,-8,-10,-9,1,5,-5,3,8,-9,-3,2,-10,-3,9,-3,6,7,-4,4,8,-3,8,10,3,-2,4,10,-9,2,-1,-2,-6,-3,-7,-6,-6,9,5,9,-1,-2,3,8,7,3,-4,-6,-3,-9,-6,7,-3,6,-8,-4,6,-5,-2,-2,-4,8,9,6,-1,-4,1,-10,10,2,1,-10,-6,7,-9,-6,5,10,-5,7,5,-6,-5,-3,-2,-6,3,-1,2,-4,8,-5,-3,4,5,-6,3,7,8,-4,6,-3,-5,-7,-4,-7,2,-3,6,3,-1,2,-10,-3,-10,9,6,-5,8,-5,3,-5,3,-10,-7,10,3,-3,2,3,4,10,-6,10,-6,-8,-6,-6,3,8,10,-10,-2,5,-1,-8,10,7,-4,2,10,3,-3,5,-6,5,-10,6,-10,-6,1,7,5,-7,-9,-10,-9,4,-3,-5,1,4,5,-1,-3,5,4,-5,-4,-9,3,3,-4,1,6,-8,-6,-8,2,-5,8,-1,9,-5,-2,7,6,7,-7,-9,6,1,10,4,-9,-9,6,1,-9,10,1,-7,7,6,6,-6,3,-6,-7,6,-9,2,6,3,-10,-7,10,7,-1,9,10,-10,5,5,10,7,-8,-7,2,10,-4,-4,-2,-10,-4,10,8,-7,10,4,-5,9,10,8,9,6,6,6,9,-2,-8,-8,-4,9,7,4,-6,5,-3,10,2,3,-3,5,6,-8,-2,1,9,2,5,2,-10,-9,-10,5,4,10,-9,-1,4,1,4,-2,4,-3,-9,-10,1,-4,-8,-5,-8,-10,-1,6,-10,1,-1,-1,8,-1,8,-8,3,-10,-2,3,-1,9,-6,5,-1,4,-3,4,8,10,9,4,1,-2,10,-3,10,1,8,-6,4,3,-2,9,-4,-5,-7,6,-5,-1,6,6,-7,-4,4,-5,9,-8,-5,-2,-7,4,5,2,-8,5,-8,-2,7,-1,5,9,-2,-4,3,-5,-4,-4,9,-9,10,1,-6,-4,-10,-1,-1,-8,7,-1,9,-1,-7,1,3,-2,-7,-5,-7,-3,-6,-1,-5,1,2,-2,-7,5,-2,-9,10,9,8,8,5,-2,8,-5,4,-4,-7,1,-3,-10,-5,-9,-2,-2,-4,-6,4,7,5,2,9,8,-6,10,5,2,8,-5,-2,3,-7,-3,8,10,2,-3,-2,7,-9,-5,8,4,-1,-8,-4,-8,-1,2,1,-5,6,5,8,-5,-2,1,10,-8,4,5,-1,1,-4,-3,6,1,5,-9,-2,2,-7,-6,10,-9,1,4,-6,4,-7,8,-3,7,-7,-3,-3,2,7,6,-1,-4,6,2,3,4,1,5,-1,3,9,6,10,9,-6,-7,-9,-7,8,-8,7,1,4,-3,-8,-4,4,-8,-9,-4,-3,10,-3,-6,-10,2,-4,5,-10,-6,9,-7,3,-7,-4,5,-5,9,6,9,-8,1,-7,-4,9,7,-2,-10,10,5,-10,3,-9,-5,6,1,6,-7,-10,-10,-3,-6,-1,-9,-4,7,9,1,-2,3,10,-3,-5,9,-3,6,-6,-10,9,-10,-6,-8,8,-2,-8,10,10,8,8,-3,-6,9,-1,3,-10,2,-1,-10,-2,1,9,1,9,-5,7,-7,6,7,7,-5,2,-5,-10,3,-9,-3,8,-8,-3,3,10,5,8,-3,-3,-3,6,9,5,7,8], dtype = "int64")#candidate|2912|(1872,)|const|int64
bop_2913 = relay.equal(call_2905.astype('bool'), relay.reshape(const_2912.astype('bool'), relay.shape_of(call_2905))) # shape=(1872,)
bop_2916 = relay.equal(call_2906.astype('bool'), relay.reshape(const_2912.astype('bool'), relay.shape_of(call_2906))) # shape=(1872,)
output = relay.Tuple([bop_2897,bop_2902,bop_2913,])
output2 = relay.Tuple([bop_2897,bop_2902,bop_2916,])
func_2919 = relay.Function([var_2895,var_2896,], output)
mod['func_2919'] = func_2919
mod = relay.transform.InferType()(mod)
var_2920 = relay.var("var_2920", dtype = "float32", shape = (16, 5, 9))#candidate|2920|(16, 5, 9)|var|float32
var_2921 = relay.var("var_2921", dtype = "float32", shape = (16, 5, 9))#candidate|2921|(16, 5, 9)|var|float32
output = func_2919(var_2920,var_2921,)
func_2922 = relay.Function([var_2920,var_2921,], output)
mutated_mod['func_2922'] = func_2922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_2931 = func_2487_call()
call_2932 = func_2487_call()
var_2936 = relay.var("var_2936", dtype = "float64", shape = (6, 3, 12))#candidate|2936|(6, 3, 12)|var|float64
bop_2937 = relay.divide(call_2931.astype('float64'), relay.reshape(var_2936.astype('float64'), relay.shape_of(call_2931))) # shape=(6, 3, 12)
bop_2940 = relay.divide(call_2932.astype('float64'), relay.reshape(var_2936.astype('float64'), relay.shape_of(call_2932))) # shape=(6, 3, 12)
func_1982_call = mod.get_global_var('func_1982')
func_1985_call = mutated_mod.get_global_var('func_1985')
var_2963 = relay.var("var_2963", dtype = "uint8", shape = (2730,))#candidate|2963|(2730,)|var|uint8
call_2962 = func_1982_call(relay.reshape(var_2963.astype('uint8'), [14, 15, 13]))
call_2964 = func_1982_call(relay.reshape(var_2963.astype('uint8'), [14, 15, 13]))
output = relay.Tuple([bop_2937,call_2962,var_2963,])
output2 = relay.Tuple([bop_2940,call_2964,var_2963,])
func_2987 = relay.Function([var_2936,var_2963,], output)
mod['func_2987'] = func_2987
mod = relay.transform.InferType()(mod)
mutated_mod['func_2987'] = func_2987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2987_call = mutated_mod.get_global_var('func_2987')
var_2989 = relay.var("var_2989", dtype = "float64", shape = (6, 3, 12))#candidate|2989|(6, 3, 12)|var|float64
var_2990 = relay.var("var_2990", dtype = "uint8", shape = (2730,))#candidate|2990|(2730,)|var|uint8
call_2988 = func_2987_call(var_2989,var_2990,)
output = call_2988
func_2991 = relay.Function([var_2989,var_2990,], output)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2869_call = mod.get_global_var('func_2869')
func_2870_call = mutated_mod.get_global_var('func_2870')
call_3029 = relay.TupleGetItem(func_2869_call(), 0)
call_3030 = relay.TupleGetItem(func_2870_call(), 0)
output = call_3029
output2 = call_3030
func_3056 = relay.Function([], output)
mod['func_3056'] = func_3056
mod = relay.transform.InferType()(mod)
output = func_3056()
func_3057 = relay.Function([], output)
mutated_mod['func_3057'] = func_3057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3056_call = mod.get_global_var('func_3056')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_3058 = func_3056_call()
call_3059 = func_3056_call()
func_2424_call = mod.get_global_var('func_2424')
func_2427_call = mutated_mod.get_global_var('func_2427')
const_3068 = relay.const(-8, dtype = "uint8")#candidate|3068|()|const|uint8
call_3067 = relay.TupleGetItem(func_2424_call(relay.reshape(const_3068.astype('uint8'), [])), 3)
call_3069 = relay.TupleGetItem(func_2427_call(relay.reshape(const_3068.astype('uint8'), [])), 3)
var_3074 = relay.var("var_3074", dtype = "uint8", shape = (90, 10))#candidate|3074|(90, 10)|var|uint8
bop_3075 = relay.bitwise_and(call_3067.astype('uint16'), var_3074.astype('uint16')) # shape=(90, 10)
bop_3078 = relay.bitwise_and(call_3069.astype('uint16'), var_3074.astype('uint16')) # shape=(90, 10)
bop_3081 = relay.greater_equal(var_3074.astype('bool'), const_3068.astype('bool')) # shape=(90, 10)
output = relay.Tuple([call_3058,bop_3075,bop_3081,])
output2 = relay.Tuple([call_3059,bop_3078,bop_3081,])
func_3084 = relay.Function([var_3074,], output)
mod['func_3084'] = func_3084
mod = relay.transform.InferType()(mod)
var_3085 = relay.var("var_3085", dtype = "uint8", shape = (90, 10))#candidate|3085|(90, 10)|var|uint8
output = func_3084(var_3085)
func_3086 = relay.Function([var_3085], output)
mutated_mod['func_3086'] = func_3086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_3101 = relay.TupleGetItem(func_2750_call(), 0)
call_3102 = relay.TupleGetItem(func_2751_call(), 0)
func_2869_call = mod.get_global_var('func_2869')
func_2870_call = mutated_mod.get_global_var('func_2870')
call_3103 = relay.TupleGetItem(func_2869_call(), 0)
call_3104 = relay.TupleGetItem(func_2870_call(), 0)
uop_3136 = relay.sigmoid(call_3103.astype('float32')) # shape=(2535,)
uop_3138 = relay.sigmoid(call_3104.astype('float32')) # shape=(2535,)
func_2161_call = mod.get_global_var('func_2161')
func_2166_call = mutated_mod.get_global_var('func_2166')
const_3143 = relay.const([-5,-7,2,8,1,8,-10,-4,2,-10,1,7,-4,-7,2,7,7,-4,8,-4,4,2,5,-10,10,-9,5,-6,9,-10,-3,8,1,-2,-6,9,-6,-3,-8,10,-2,-10,-5,6,10,-4,-2,-5,-6,3,3,1,4,-2,6,8,-3,7,-5,-1,-8,7,1,5,1,9,-2,5,4,-6,-1,10,-5,1,9,-2,-1,7,1,7,-1,-7,-1,-9,-2,-7,3,9,4,5,-4,-10,-8,-4,10,2,-2,-8,-1,-7,-4,-8,-2,5,6,9,9,-4,-6,-5,-10,2,5,-4,-7,-1,-7,-9,7,7,4,-5,5,1,6,10,2,-9,-1,7,-5,-2,9,-1,5,-2,-2,-5,6,10,9,-9,3,-2,-2,4,-7,-8,-10,-5,-7,-8,-5,7,7,3,-9,-1,-2,-7,-1,-2,1,-7,8,-6,8,-5,-4,-4,10,-9,2,9,2,-8,1,1,1,3,-9,-6,4,2,2,1,3,-8,9,-9,-7,3,-9,2,-2,9,5,-8,5,-8,-6,-8,8,-4,-7,-9,-1,4,9,-10,-2,-2,-4,-7,2,5,-4,-7,-1,9,-5,4,-1,8,6,-10,-6,-7,-5,-9,-10,5,7,6,4,-8,4,-4,10,-6,9,7,10,-6,-10,2,-9,-6,10,8,7,-2,8,7,-10,-6,-1,-4,9,-4,5,3,-4,2,-8,9,-6,8,6,2], dtype = "uint32")#candidate|3143|(270,)|const|uint32
const_3144 = relay.const([[-10,3,-7,5,6,8,-1,-3,10,7,-8,-8],[3,6,1,-7,8,-10,-5,-8,5,3,8,10],[-5,-9,7,8,1,6,-1,2,-3,4,-9,6],[-6,-1,-8,-4,8,-8,3,9,-9,7,-5,9],[1,-5,4,4,2,-8,-8,3,-8,-5,6,-4],[-8,-5,7,-1,7,-9,-9,3,-2,-2,-3,-8],[-8,9,-6,9,3,-7,9,-1,5,-9,4,-6],[5,7,-4,9,8,6,-3,8,-10,-8,-4,-7],[-10,-3,-10,-3,10,-3,6,6,1,10,6,10],[6,7,9,-8,2,-5,4,-9,9,9,-5,-1],[-7,-8,2,1,8,-7,3,5,-9,-2,-10,7],[3,7,1,4,-3,-2,-2,3,2,8,5,3],[-6,9,3,7,4,-6,4,-2,4,-1,9,-8],[-4,-6,-10,5,1,-5,-1,-2,8,9,-10,8],[7,10,-1,-6,-5,-6,-9,-4,-6,-7,-1,4],[-1,-9,6,-4,-7,10,5,5,-8,6,3,-10],[-8,9,-7,9,6,8,-7,6,7,2,-1,3],[-9,1,-8,4,-9,5,4,2,2,-3,-2,-3],[-4,-2,-5,8,-3,-7,-9,7,1,-4,6,6],[-7,6,-7,-10,-5,8,7,-3,5,1,2,2],[10,10,-3,5,-7,-9,10,-5,-2,-7,1,1],[-2,9,-2,7,8,-9,6,-1,5,-5,-9,-3],[5,4,-10,1,-9,5,-3,7,-10,4,-2,-6],[5,3,-4,-7,-6,7,7,-5,-10,10,-3,-7],[-5,10,8,-4,9,-8,-4,6,-7,-4,-10,-3],[-1,6,-9,-10,5,-2,6,-7,3,-8,4,7],[-6,8,-3,-10,3,2,-8,6,10,8,4,-1],[-5,-4,-4,2,3,7,10,-2,-3,5,-5,-7],[-1,-1,4,-3,-2,8,7,3,8,6,9,-3],[10,-4,-10,-10,-9,9,-4,2,7,-9,8,4],[5,-5,8,5,-5,5,-1,10,7,-3,10,-8],[-5,-3,10,-10,9,-9,3,-7,4,-6,6,-7],[3,-5,-7,-2,-9,-5,4,5,-1,2,-10,-2],[10,1,4,-2,-2,-4,1,1,-2,-10,2,-2],[10,6,-5,-4,8,3,-5,-1,-2,-6,-10,3],[-5,-10,10,1,8,-10,8,9,1,-8,-7,-5],[-1,-1,10,-4,-9,-6,-6,1,-6,6,6,10],[7,6,-6,-2,4,1,-1,10,7,1,3,-7],[2,3,-9,7,-2,2,6,8,-9,-3,-1,-2],[-9,2,-2,2,-4,-4,-9,-1,-6,10,8,1],[8,8,8,-8,3,-8,-2,-1,-5,-1,5,-7],[6,-4,-9,2,8,-5,-1,3,6,1,4,-2],[6,-5,-7,4,4,-8,3,-8,-1,9,-7,-8],[-6,1,-10,10,8,6,10,9,-10,-4,-6,-7],[-5,-2,1,-7,10,8,3,-5,3,-4,-3,-6],[-9,-7,-5,5,1,4,7,8,1,7,-3,-3],[-4,-1,2,-10,-10,-8,-1,4,-10,3,-2,-7],[6,7,6,8,-6,7,-8,1,-5,-2,-9,8],[7,-9,2,-1,7,2,7,3,10,-3,8,8],[-10,10,9,1,1,4,-5,4,1,5,-5,-3],[-10,-5,10,-10,8,-2,-9,-2,4,-4,10,-10],[3,1,6,4,10,-4,7,-1,-5,-1,-5,-7],[-8,7,-8,-9,2,8,3,6,3,2,-4,-4],[-5,5,7,-8,-2,3,1,10,3,3,-2,-7],[-1,-5,-1,5,-6,-3,-2,-10,-7,-4,-6,-4],[-4,2,8,-3,8,3,8,3,-8,-7,-1,-5],[-9,-9,-3,3,-9,-5,6,-7,5,6,-8,5],[7,-6,-8,-9,10,-1,8,-2,1,-8,-5,-3],[-3,-2,-8,-6,-1,-5,3,-6,-1,-10,3,10],[9,-4,10,-5,-6,3,3,1,2,-3,-2,-10],[5,4,3,-5,1,-7,5,-6,-8,-7,10,5],[3,-9,-6,-8,10,-1,7,5,3,2,5,-1],[9,-6,-5,3,8,1,-2,6,-4,-2,3,10],[1,-6,-2,-9,-6,-9,5,-6,-3,-10,-9,-4],[-3,3,-6,-2,7,-3,-6,7,9,-10,8,-1],[7,6,6,-7,8,3,-3,3,4,6,-10,9],[-10,6,-8,-1,-6,1,6,-1,7,8,-10,9],[-7,-1,1,8,2,1,1,-5,8,-9,5,9],[-5,-2,-10,-6,-10,-5,8,10,9,9,3,7],[1,6,-7,8,3,-6,4,9,-8,3,-10,-5],[8,9,2,-3,-3,1,-3,3,-2,9,10,10],[-4,3,9,3,5,-9,9,10,-10,-5,9,-10],[-6,6,1,-3,8,1,7,5,7,7,-3,-9],[7,7,-1,-6,10,-10,-8,5,10,-5,9,8],[-1,3,1,8,-5,5,-6,2,5,-4,-6,10],[7,2,-3,-4,-5,-2,-1,8,7,-2,6,-8],[6,3,3,8,7,7,-2,8,-10,-6,1,8],[9,3,-6,4,3,3,-9,9,3,-9,7,-2],[6,-9,-4,-6,-7,-6,-8,-4,-8,-10,-10,-6],[-2,-7,2,7,9,-4,-3,6,9,-2,4,9],[-4,10,7,8,1,-2,7,1,-5,1,-7,-7],[-10,-3,-4,-6,-3,-4,-4,-2,10,-8,-3,-4],[-5,-8,3,1,6,-8,8,1,-4,-4,7,-3],[-9,-5,1,-3,-6,1,8,-5,-5,5,10,-7],[-10,3,6,-8,1,9,5,-10,-3,-2,-2,5],[1,1,5,6,-8,5,-6,-10,6,-9,-3,2],[10,9,1,7,2,-1,-7,-2,-5,10,-2,6],[-2,-1,-4,3,6,-3,-3,-9,10,4,9,4],[-5,-5,7,-6,-6,5,9,3,-9,-2,-9,-1],[-3,8,-1,5,-7,4,2,4,-7,10,-7,1],[9,2,6,-9,-6,-10,9,6,6,1,-2,-7],[-4,-6,10,-10,-3,-9,6,8,4,3,-3,-1],[-9,-6,9,-9,-10,5,2,-3,10,4,9,-9],[9,-10,9,9,6,-6,-1,-8,-7,3,10,4],[7,5,-7,-2,-4,-9,4,10,5,2,10,9],[5,-7,-9,7,7,3,-4,-10,-7,-3,9,10],[-7,2,-4,-5,2,-6,-2,-8,-4,-3,-7,-9],[4,-7,3,-6,10,10,-8,5,-6,2,3,-7],[2,5,6,8,-6,-2,-10,3,-8,-6,-7,-6],[-1,3,8,-10,1,-4,9,-7,-4,-8,-9,6],[4,-2,2,-6,-6,-6,-8,-9,-2,-5,4,8],[3,4,-4,9,-4,-1,-9,-1,3,-3,6,1],[4,8,10,-6,1,4,2,-5,4,-5,10,-2],[-5,-5,7,-8,-4,7,-2,6,2,-9,5,3],[10,4,5,-3,1,3,8,8,-8,5,-7,5],[4,6,-10,7,-8,-7,9,7,-2,7,-2,1],[2,-1,-8,10,10,9,8,7,-1,1,8,9],[6,9,2,9,-7,-3,-5,-7,3,-7,4,-7],[10,-4,-5,10,8,1,-1,-6,-1,1,3,2],[-4,9,3,-2,5,3,8,3,-5,7,-5,2],[1,-1,-3,-2,-2,-6,6,-9,-5,-1,6,-8],[8,-4,-8,10,-4,-4,6,8,7,-4,-4,-4],[-5,-4,6,-1,9,9,6,5,-2,8,6,-7],[-2,6,6,-6,4,4,-4,-6,4,10,-9,-1],[5,1,7,-4,1,-4,-9,-9,-2,5,-10,9],[-10,-4,-4,-8,-4,10,-6,-10,-4,3,-5,-8],[-5,-5,6,9,-2,3,-9,7,-9,-7,-1,4],[-1,9,-9,-5,10,1,3,-1,6,1,4,-9],[4,10,2,1,10,1,8,8,-5,5,-1,-3],[10,-2,-3,-7,-6,-4,-10,-2,-6,-2,1,4],[8,-4,-6,6,2,-10,9,-3,4,-3,-4,-5],[-10,-5,-4,6,10,3,-8,4,6,-8,1,10],[-1,-10,-10,3,3,-2,9,-10,-10,7,-1,10],[2,2,9,9,-5,-3,5,6,6,-4,5,-5],[7,3,-10,-5,10,6,-7,7,3,8,8,5],[-3,-10,-4,-5,7,-9,2,-1,-9,-2,-1,10],[-1,-3,4,4,10,-8,-8,-5,1,-4,-6,-7],[-2,-1,10,-9,2,9,-4,3,-6,6,4,-1],[-5,-9,-9,-6,-7,-4,-10,7,6,8,-8,4],[4,10,-3,-2,-7,7,-1,-9,-10,5,-7,-2],[8,-3,-2,2,8,3,-6,-10,-8,-1,2,7],[-2,-1,-5,-9,4,-9,10,-10,7,2,8,6],[-10,7,4,3,-6,-2,9,4,-7,10,6,8],[3,7,-3,-1,8,7,4,8,6,3,-3,-1],[-1,8,10,3,9,7,10,4,-8,10,3,-1],[9,-6,-10,3,-5,9,8,-9,1,-8,5,-9],[-5,2,8,-6,-7,9,7,-9,4,10,-1,10],[4,-2,-2,-2,1,-4,7,-6,-2,2,-9,-6],[10,-5,-4,4,3,-8,9,1,-2,-1,-6,-3],[-3,2,7,-3,3,-9,-2,-4,1,9,2,1],[6,-4,2,3,-4,7,2,-10,9,1,-4,-8],[6,6,7,3,1,8,-5,-9,7,-2,-10,-3],[4,2,-8,7,-8,-4,-2,10,2,-9,10,-8],[5,-3,4,4,1,-8,-6,5,-7,1,-5,3],[1,-8,1,6,-6,1,-7,8,10,-9,2,-2],[-4,-8,-6,-8,-4,-5,-2,9,2,-8,4,8],[-3,-4,-8,3,9,-1,-2,-9,-7,9,7,-9],[-7,-7,4,-9,-2,-1,-7,-2,-4,3,-6,-2],[9,4,9,-5,10,-1,9,1,-1,2,5,-6],[9,-4,-2,-7,8,-8,-5,-5,-7,9,-4,-7],[-1,5,-3,6,2,6,-6,6,-6,-1,5,6],[-2,-8,-7,3,4,-5,-1,-8,1,-7,-8,-1],[7,-5,-7,6,8,-10,-9,-5,3,9,-1,6],[-10,8,-8,-2,10,7,10,9,-7,5,1,10],[-9,9,5,-1,10,3,-8,-3,2,-8,-3,-2],[-5,8,-4,4,-5,-3,-8,-5,2,6,-3,-8]], dtype = "uint32")#candidate|3144|(156, 12)|const|uint32
call_3142 = relay.TupleGetItem(func_2161_call(relay.reshape(const_3143.astype('uint32'), [6, 3, 15]), relay.reshape(const_3143.astype('uint32'), [6, 3, 15]), relay.reshape(call_3101.astype('float64'), [12, 18]), relay.reshape(const_3144.astype('uint32'), [1872,]), ), 6)
call_3145 = relay.TupleGetItem(func_2166_call(relay.reshape(const_3143.astype('uint32'), [6, 3, 15]), relay.reshape(const_3143.astype('uint32'), [6, 3, 15]), relay.reshape(call_3101.astype('float64'), [12, 18]), relay.reshape(const_3144.astype('uint32'), [1872,]), ), 6)
bop_3154 = relay.add(uop_3136.astype('uint64'), relay.reshape(call_3103.astype('uint64'), relay.shape_of(uop_3136))) # shape=(2535,)
bop_3157 = relay.add(uop_3138.astype('uint64'), relay.reshape(call_3104.astype('uint64'), relay.shape_of(uop_3138))) # shape=(2535,)
bop_3161 = relay.bitwise_and(uop_3136.astype('int64'), relay.reshape(bop_3154.astype('int64'), relay.shape_of(uop_3136))) # shape=(2535,)
bop_3164 = relay.bitwise_and(uop_3138.astype('int64'), relay.reshape(bop_3157.astype('int64'), relay.shape_of(uop_3138))) # shape=(2535,)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_3171 = relay.TupleGetItem(func_1911_call(), 0)
call_3172 = relay.TupleGetItem(func_1912_call(), 0)
output = relay.Tuple([call_3101,call_3142,const_3143,const_3144,bop_3161,call_3171,])
output2 = relay.Tuple([call_3102,call_3145,const_3143,const_3144,bop_3164,call_3172,])
func_3179 = relay.Function([], output)
mod['func_3179'] = func_3179
mod = relay.transform.InferType()(mod)
output = func_3179()
func_3180 = relay.Function([], output)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3187 = relay.TupleGetItem(func_3179_call(), 3)
call_3188 = relay.TupleGetItem(func_3180_call(), 3)
func_2207_call = mod.get_global_var('func_2207')
func_2209_call = mutated_mod.get_global_var('func_2209')
call_3198 = relay.TupleGetItem(func_2207_call(relay.reshape(call_3187.astype('uint32'), [1872,])), 2)
call_3199 = relay.TupleGetItem(func_2209_call(relay.reshape(call_3187.astype('uint32'), [1872,])), 2)
var_3206 = relay.var("var_3206", dtype = "uint32", shape = (1872,))#candidate|3206|(1872,)|var|uint32
bop_3207 = relay.minimum(call_3198.astype('uint32'), relay.reshape(var_3206.astype('uint32'), relay.shape_of(call_3198))) # shape=(1872,)
bop_3210 = relay.minimum(call_3199.astype('uint32'), relay.reshape(var_3206.astype('uint32'), relay.shape_of(call_3199))) # shape=(1872,)
output = relay.Tuple([call_3187,bop_3207,])
output2 = relay.Tuple([call_3188,bop_3210,])
func_3211 = relay.Function([var_3206,], output)
mod['func_3211'] = func_3211
mod = relay.transform.InferType()(mod)
mutated_mod['func_3211'] = func_3211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3212 = relay.var("var_3212", dtype = "uint32", shape = (1872,))#candidate|3212|(1872,)|var|uint32
func_3211_call = mutated_mod.get_global_var('func_3211')
call_3213 = func_3211_call(var_3212)
output = call_3213
func_3214 = relay.Function([var_3212], output)
mutated_mod['func_3214'] = func_3214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2682_call = mod.get_global_var('func_2682')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3221 = func_2682_call()
call_3222 = func_2682_call()
var_3225 = relay.var("var_3225", dtype = "float64", shape = (6, 3, 12))#candidate|3225|(6, 3, 12)|var|float64
bop_3226 = relay.add(call_3221.astype('int8'), relay.reshape(var_3225.astype('int8'), relay.shape_of(call_3221))) # shape=(6, 3, 12)
bop_3229 = relay.add(call_3222.astype('int8'), relay.reshape(var_3225.astype('int8'), relay.shape_of(call_3222))) # shape=(6, 3, 12)
output = bop_3226
output2 = bop_3229
func_3232 = relay.Function([var_3225,], output)
mod['func_3232'] = func_3232
mod = relay.transform.InferType()(mod)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3233 = relay.var("var_3233", dtype = "float64", shape = (6, 3, 12))#candidate|3233|(6, 3, 12)|var|float64
func_3232_call = mutated_mod.get_global_var('func_3232')
call_3234 = func_3232_call(var_3233)
output = call_3234
func_3235 = relay.Function([var_3233], output)
mutated_mod['func_3235'] = func_3235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3320 = relay.TupleGetItem(func_3179_call(), 1)
call_3321 = relay.TupleGetItem(func_3180_call(), 1)
func_2385_call = mod.get_global_var('func_2385')
func_2387_call = mutated_mod.get_global_var('func_2387')
call_3335 = relay.TupleGetItem(func_2385_call(), 0)
call_3336 = relay.TupleGetItem(func_2387_call(), 0)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_3343 = relay.TupleGetItem(func_2601_call(), 0)
call_3344 = relay.TupleGetItem(func_2603_call(), 0)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
call_3350 = func_996_call(relay.reshape(call_3320.astype('uint32'), [13, 16, 9]))
call_3351 = func_996_call(relay.reshape(call_3320.astype('uint32'), [13, 16, 9]))
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3353 = relay.TupleGetItem(func_3179_call(), 1)
call_3354 = relay.TupleGetItem(func_3180_call(), 1)
output = relay.Tuple([call_3320,call_3335,call_3343,call_3350,call_3353,])
output2 = relay.Tuple([call_3321,call_3336,call_3344,call_3351,call_3354,])
func_3360 = relay.Function([], output)
mod['func_3360'] = func_3360
mod = relay.transform.InferType()(mod)
output = func_3360()
func_3361 = relay.Function([], output)
mutated_mod['func_3361'] = func_3361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3378 = relay.TupleGetItem(func_3179_call(), 4)
call_3379 = relay.TupleGetItem(func_3180_call(), 4)
uop_3394 = relay.sin(call_3378.astype('float64')) # shape=(2535,)
uop_3396 = relay.sin(call_3379.astype('float64')) # shape=(2535,)
output = uop_3394
output2 = uop_3396
func_3411 = relay.Function([], output)
mod['func_3411'] = func_3411
mod = relay.transform.InferType()(mod)
output = func_3411()
func_3412 = relay.Function([], output)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_3479 = relay.TupleGetItem(func_2750_call(), 1)
call_3480 = relay.TupleGetItem(func_2751_call(), 1)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3488 = relay.TupleGetItem(func_3179_call(), 5)
call_3489 = relay.TupleGetItem(func_3180_call(), 5)
output = relay.Tuple([call_3479,call_3488,])
output2 = relay.Tuple([call_3480,call_3489,])
func_3501 = relay.Function([], output)
mod['func_3501'] = func_3501
mod = relay.transform.InferType()(mod)
output = func_3501()
func_3502 = relay.Function([], output)
mutated_mod['func_3502'] = func_3502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_3547 = relay.TupleGetItem(func_2639_call(), 0)
call_3548 = relay.TupleGetItem(func_2640_call(), 0)
var_3568 = relay.var("var_3568", dtype = "float64", shape = (6, 3, 12))#candidate|3568|(6, 3, 12)|var|float64
bop_3569 = relay.less(call_3547.astype('bool'), relay.reshape(var_3568.astype('bool'), relay.shape_of(call_3547))) # shape=(6, 3, 12)
bop_3572 = relay.less(call_3548.astype('bool'), relay.reshape(var_3568.astype('bool'), relay.shape_of(call_3548))) # shape=(6, 3, 12)
func_2622_call = mod.get_global_var('func_2622')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_3574 = func_2622_call()
call_3575 = func_2622_call()
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_3578 = relay.TupleGetItem(func_2639_call(), 0)
call_3579 = relay.TupleGetItem(func_2640_call(), 0)
output = relay.Tuple([bop_3569,call_3574,call_3578,])
output2 = relay.Tuple([bop_3572,call_3575,call_3579,])
func_3584 = relay.Function([var_3568,], output)
mod['func_3584'] = func_3584
mod = relay.transform.InferType()(mod)
var_3585 = relay.var("var_3585", dtype = "float64", shape = (6, 3, 12))#candidate|3585|(6, 3, 12)|var|float64
output = func_3584(var_3585)
func_3586 = relay.Function([var_3585], output)
mutated_mod['func_3586'] = func_3586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2880_call = mod.get_global_var('func_2880')
func_2882_call = mutated_mod.get_global_var('func_2882')
call_3615 = relay.TupleGetItem(func_2880_call(), 1)
call_3616 = relay.TupleGetItem(func_2882_call(), 1)
var_3620 = relay.var("var_3620", dtype = "float64", shape = (6, 3, 12))#candidate|3620|(6, 3, 12)|var|float64
bop_3621 = relay.logical_and(call_3615.astype('bool'), relay.reshape(var_3620.astype('bool'), relay.shape_of(call_3615))) # shape=(6, 3, 12)
bop_3624 = relay.logical_and(call_3616.astype('bool'), relay.reshape(var_3620.astype('bool'), relay.shape_of(call_3616))) # shape=(6, 3, 12)
func_2622_call = mod.get_global_var('func_2622')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_3638 = func_2622_call()
call_3639 = func_2622_call()
func_3232_call = mod.get_global_var('func_3232')
func_3235_call = mutated_mod.get_global_var('func_3235')
call_3645 = func_3232_call(relay.reshape(call_3615.astype('float64'), [6, 3, 12]))
call_3646 = func_3232_call(relay.reshape(call_3615.astype('float64'), [6, 3, 12]))
output = relay.Tuple([bop_3621,call_3638,call_3645,])
output2 = relay.Tuple([bop_3624,call_3639,call_3646,])
func_3649 = relay.Function([var_3620,], output)
mod['func_3649'] = func_3649
mod = relay.transform.InferType()(mod)
mutated_mod['func_3649'] = func_3649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3650 = relay.var("var_3650", dtype = "float64", shape = (6, 3, 12))#candidate|3650|(6, 3, 12)|var|float64
func_3649_call = mutated_mod.get_global_var('func_3649')
call_3651 = func_3649_call(var_3650)
output = call_3651
func_3652 = relay.Function([var_3650], output)
mutated_mod['func_3652'] = func_3652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3501_call = mod.get_global_var('func_3501')
func_3502_call = mutated_mod.get_global_var('func_3502')
call_3675 = relay.TupleGetItem(func_3501_call(), 0)
call_3676 = relay.TupleGetItem(func_3502_call(), 0)
uop_3677 = relay.sqrt(call_3675.astype('float64')) # shape=(1872,)
uop_3679 = relay.sqrt(call_3676.astype('float64')) # shape=(1872,)
output = relay.Tuple([uop_3677,])
output2 = relay.Tuple([uop_3679,])
func_3682 = relay.Function([], output)
mod['func_3682'] = func_3682
mod = relay.transform.InferType()(mod)
output = func_3682()
func_3683 = relay.Function([], output)
mutated_mod['func_3683'] = func_3683
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3698 = relay.var("var_3698", dtype = "uint16", shape = (14, 16, 4))#candidate|3698|(14, 16, 4)|var|uint16
var_3699 = relay.var("var_3699", dtype = "uint16", shape = (14, 16, 4))#candidate|3699|(14, 16, 4)|var|uint16
bop_3700 = relay.greater_equal(var_3698.astype('bool'), relay.reshape(var_3699.astype('bool'), relay.shape_of(var_3698))) # shape=(14, 16, 4)
output = relay.Tuple([bop_3700,])
output2 = relay.Tuple([bop_3700,])
func_3703 = relay.Function([var_3698,var_3699,], output)
mod['func_3703'] = func_3703
mod = relay.transform.InferType()(mod)
var_3704 = relay.var("var_3704", dtype = "uint16", shape = (14, 16, 4))#candidate|3704|(14, 16, 4)|var|uint16
var_3705 = relay.var("var_3705", dtype = "uint16", shape = (14, 16, 4))#candidate|3705|(14, 16, 4)|var|uint16
output = func_3703(var_3704,var_3705,)
func_3706 = relay.Function([var_3704,var_3705,], output)
mutated_mod['func_3706'] = func_3706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3501_call = mod.get_global_var('func_3501')
func_3502_call = mutated_mod.get_global_var('func_3502')
call_3758 = relay.TupleGetItem(func_3501_call(), 0)
call_3759 = relay.TupleGetItem(func_3502_call(), 0)
func_3682_call = mod.get_global_var('func_3682')
func_3683_call = mutated_mod.get_global_var('func_3683')
call_3772 = relay.TupleGetItem(func_3682_call(), 0)
call_3773 = relay.TupleGetItem(func_3683_call(), 0)
output = relay.Tuple([call_3758,call_3772,])
output2 = relay.Tuple([call_3759,call_3773,])
func_3778 = relay.Function([], output)
mod['func_3778'] = func_3778
mod = relay.transform.InferType()(mod)
output = func_3778()
func_3779 = relay.Function([], output)
mutated_mod['func_3779'] = func_3779
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3786 = relay.const(2, dtype = "uint16")#candidate|3786|()|const|uint16
var_3787 = relay.var("var_3787", dtype = "uint16", shape = (9, 5, 11))#candidate|3787|(9, 5, 11)|var|uint16
bop_3788 = relay.left_shift(const_3786.astype('uint16'), var_3787.astype('uint16')) # shape=(9, 5, 11)
output = relay.Tuple([bop_3788,])
output2 = relay.Tuple([bop_3788,])
func_3791 = relay.Function([var_3787,], output)
mod['func_3791'] = func_3791
mod = relay.transform.InferType()(mod)
mutated_mod['func_3791'] = func_3791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3792 = relay.var("var_3792", dtype = "uint16", shape = (9, 5, 11))#candidate|3792|(9, 5, 11)|var|uint16
func_3791_call = mutated_mod.get_global_var('func_3791')
call_3793 = func_3791_call(var_3792)
output = call_3793
func_3794 = relay.Function([var_3792], output)
mutated_mod['func_3794'] = func_3794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2622_call = mod.get_global_var('func_2622')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_3859 = func_2622_call()
call_3860 = func_2622_call()
func_3211_call = mod.get_global_var('func_3211')
func_3214_call = mutated_mod.get_global_var('func_3214')
var_3886 = relay.var("var_3886", dtype = "uint32", shape = (12, 156))#candidate|3886|(12, 156)|var|uint32
call_3885 = relay.TupleGetItem(func_3211_call(relay.reshape(var_3886.astype('uint32'), [1872,])), 0)
call_3887 = relay.TupleGetItem(func_3214_call(relay.reshape(var_3886.astype('uint32'), [1872,])), 0)
output = relay.Tuple([call_3859,call_3885,var_3886,])
output2 = relay.Tuple([call_3860,call_3887,var_3886,])
func_3889 = relay.Function([var_3886,], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
var_3890 = relay.var("var_3890", dtype = "uint32", shape = (12, 156))#candidate|3890|(12, 156)|var|uint32
output = func_3889(var_3890)
func_3891 = relay.Function([var_3890], output)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3682_call = mod.get_global_var('func_3682')
func_3683_call = mutated_mod.get_global_var('func_3683')
call_3896 = relay.TupleGetItem(func_3682_call(), 0)
call_3897 = relay.TupleGetItem(func_3683_call(), 0)
func_1212_call = mod.get_global_var('func_1212')
func_1216_call = mutated_mod.get_global_var('func_1216')
var_3902 = relay.var("var_3902", dtype = "float64", shape = (240,))#candidate|3902|(240,)|var|float64
const_3903 = relay.const([-9.383511,-3.553108,-1.262586,2.335056,9.294993,9.240569,-6.230609,-7.296704,3.164733,6.689827,-9.909125,-8.908253,4.493415,5.654491,-7.372076,-8.762426,-8.596282,7.380253,0.703634,4.293702,4.631382,3.533245,-9.427789,-3.489851,-9.506549,7.292207,-2.714605,2.572101,7.272910,-9.171005,1.352937,8.780317,9.508049,1.986844,1.977305,7.465454,3.218600,-0.320372,9.942279,6.915559,-2.554182,-4.699925,-5.522397,-5.856190,-4.873963,-8.025414,6.620016,-7.105922,-8.558860,3.175334,-2.270531,-9.135050,4.489689,7.751448,2.867257,-3.804694,-2.227302,-6.069082,-2.520405,-0.216495,0.932206,0.171308,-0.002172,-5.870225,5.086575,-7.171217,-3.281968,9.039139,7.719407,-7.001160,-0.546711,-1.751011,-5.434526,1.095342,-5.508314,2.019882,-3.495061,-2.959453,-4.707737,-7.233123,2.338980,3.809636,0.931981,8.875544,-7.800864,-0.615993,1.549759,0.961781,8.768562,-4.646215,-4.144192,-2.454239,-3.891194,-3.465026,7.106906,-9.853358,5.319825,-1.342736,4.633097,-5.013400,-8.847769,-7.919657,7.482628,1.696981,-3.828566,-6.407265,4.225073,-2.342547,-6.045903,3.678390,0.926772,-6.213271,3.280176,9.522251,-0.758720,-4.401444,-2.159472,-3.415839,-4.414801,8.962531,-4.868718,-4.744482,-2.978679,7.916344,7.845471,-3.446843,8.341286,0.730027,8.979868,0.974800,-0.890198,-2.138542,-6.488897,5.811556,-6.637578,1.991012,-4.639950,0.128322,-6.013169,4.001593,1.049548,-2.958220,-6.626743,5.935390,7.229103,-6.974455,7.584368,-7.139081,3.314234,-0.281097,-6.936025,-6.468095,7.921531,7.629773,6.732880,2.943490,-6.658884,9.809088,-2.965117,7.570205,9.472756,5.304487,-1.212373,-1.246832,2.605504,-2.407380,-4.872290,3.704548,-2.436372,-5.758085,2.261074,-8.824049,7.374337,5.237868,-0.129199,6.580446,-9.439534,-3.696934,5.915006,-5.325318,-1.453311,-0.754103,-9.656762,-3.707616,0.278823,-7.150536,0.357765,-3.674590,-0.632578,-3.264409,-1.314704,-4.154339,-9.714417,-4.029470,6.221133,5.107200,0.613188,-6.194644,0.043062,-1.278189,5.522793,4.950010,3.859117,-7.372775,4.941604,-1.720678,-4.662992,-1.881152,-6.536531,-8.135863,-4.549718,9.984641,-8.241084,3.015312,-4.556275,-2.701743,-1.272223,-4.733364,0.475831,3.673504,9.608502,1.637754,-3.996900,1.104398,-5.272539,-0.142641,6.105446,-2.162981,0.975281,4.307083,9.043343,-6.870510,5.611487,4.996833,2.359736,-1.108342,-5.925980,-2.342740,3.929130,3.184490,-5.117959,-4.405042,9.908454,1.535565,-4.114099,2.765793,-3.631404,3.327177,-0.397060,-4.019810,6.935533,1.943673,-6.932734,-0.013164,7.239878,3.907514,5.333568,7.738618,-4.172680,-6.519347,4.210494,-7.314855,1.407766,5.652161,-7.492892,1.326148,-0.523933,-9.457224,-1.331868,0.212304,-4.037180,9.458786,-2.642010,2.563081,8.126358,-0.513069,0.482734,-5.001167,-8.136344,-8.494008,-8.476476,5.929256,-6.306685,8.937821,-4.008929,-6.980902,-4.197640,2.978305,-9.546983,7.268392,-8.534135,-3.269586,2.517344,-5.861293,1.161022,-5.379022,-9.784916,-1.421012,7.661552,1.026985,-8.771135,2.074793,-7.198629,-7.744879,8.738895,-7.858445,6.972556,2.110788,-0.535764,-6.934236,-2.131121,1.718145,-4.936380,-8.317443,6.371812,-5.303323,6.794595,-8.606472,-3.234871,9.003878,4.480129,6.218425,-9.132904,8.647362,-1.614817,-2.954527,-9.017541,7.624455,-8.840151,7.234943,7.968620,4.019552,4.512724,-7.815465,-1.353185,9.260699,-2.495996,-1.061082,4.984480,5.154310,-3.986355,-4.334404,6.529977,2.620241,8.304092,3.196595,-8.681545,-8.813821,2.460631,9.470648,-0.297081,7.986548,7.901135,0.212483,1.996866,-1.369482,7.140753,-6.549336,-9.457347,-7.480364,-8.326756,2.780977,-4.809597,-4.666739,-5.169085,-7.906034,-9.408633,1.509144,1.402389,-0.990864,7.259183,-2.520251,-8.434699,6.653238,5.093795,-4.860644,-4.289421,-7.840954,9.090347,-0.691231,8.845265,-5.922298,-3.634564,9.407522,3.094976,-0.120412,8.847709,8.421926,5.047610,-1.713534,-2.480160,0.221037,-2.618115,1.648980,-1.904539,-0.364925,-4.265189,-8.746728,-7.119332,4.396383,6.645565,0.367045,-8.447089,-2.290088,1.037668,-3.715756,-2.765511,-9.912695,-4.941911,-0.512060,9.556110,-0.451862,-2.921744,-9.835725,-9.918204,-8.205398,8.606728,-6.712151,-3.251941,-9.148771,-9.819810,8.040169,-5.678148,0.602515,5.837059,6.103001,-4.733481,9.038197,-7.363283,-2.292308,2.437718,1.410076,-2.973728,-9.368700,-5.199521,-9.990551,-7.275144,7.652468,-7.522673,5.187257,7.050036,-8.266823,-1.879037,-7.889377,-6.369739,5.046975,1.512384,-7.005777,4.997670,-3.244294,8.848626,-3.253347,-1.327820,-7.428214,-2.338575,-2.598104,2.525926,-1.526584,-3.355768,-7.966581,1.980346,-5.306789,-8.507476,-4.077925,-0.563327,-5.465416,7.146569,4.836310,-3.292319,-0.348052,3.615252,-9.894501,-9.623042,-3.746077,4.971789,3.264412,-2.613433,2.779468,-1.387171,-0.891609,-1.922086,6.550653,6.717283,8.247950,-5.048637,6.369864,7.181676,-6.900130,-7.628794,-0.694640,-1.364545,-8.384636,-6.160473,6.631675,0.010728,8.771241,-0.504532,7.952561,8.111068,-4.568175,7.086451,9.222568,8.575399,-9.850309,-0.215189,-9.766881,-8.742752,5.217764,-8.639798,9.370265,1.377647,-4.747245,2.594605,5.364182,-6.943595,6.870023,3.515439,-4.723898,-3.205391,-1.200301,-8.828743,3.371523,7.551023,4.166157,-2.880142,5.830762,8.511120,3.521742,-6.085167,6.307607,-4.922926,-0.777035,5.427358,3.212684,5.554672,-9.313063,-5.288659,-5.755122,-5.227910,4.717333,-6.460539,-5.197310,-8.997957,8.671682,3.796240,-5.011960,5.508089,6.710206,4.881161,-4.736221,5.724157,-3.886489,5.564068,0.434239,-8.256846,-4.901669,-6.967412,-1.973724,-0.981843,8.590367,-7.543920,-9.562556,-4.811462,-0.096931,-0.815033,-4.576033,2.177961,7.995649,4.827110,6.438908,7.919811,-1.387543,-8.365547,9.800125,-5.575461,-0.788036,-4.694823,-8.496307,6.482833,-7.156167,-8.905293,0.020739,-4.267612,-4.749312,3.892742,4.077609,8.054451,-5.658181,4.016792,-5.661156,-1.950443,-8.091008,6.478425,4.500548,-4.309965,-9.023064,-4.245198,-4.936430,-2.526980,-1.640790,-7.987051,2.892389,-8.912031,-4.234888,1.470543,7.702011,0.617305,-2.369250,9.661326,7.606058,0.892145,-5.170967,8.389635,-3.798711,7.630107,-9.794625,9.680605,8.384099,1.422501,5.518463,-8.837289,3.955496,-4.939311,4.696011,9.060547,1.141584,-2.468776,4.754217,5.680020,-0.242810,-7.465440,-3.992597,-6.544699,1.058486,0.397887,-9.660597,-4.810821,-2.181545,8.412779,-2.309606,-3.159587,2.610890,3.338550,7.497300,2.831152,2.677162,-1.523477,7.880825], dtype = "float64")#candidate|3903|(648,)|const|float64
call_3901 = relay.TupleGetItem(func_1212_call(relay.reshape(var_3902.astype('float64'), [24, 10]), relay.reshape(const_3903.astype('float64'), [648,]), ), 4)
call_3904 = relay.TupleGetItem(func_1216_call(relay.reshape(var_3902.astype('float64'), [24, 10]), relay.reshape(const_3903.astype('float64'), [648,]), ), 4)
const_3920 = relay.const([-5.932611,3.169914,3.535800,-4.745848,-7.407454,-1.999964,7.424642,-6.761628,-9.318191,2.356668,5.094754,9.031548,4.273178,-1.549495,1.717100,-5.808420,6.802710,5.334021,8.549357,3.123574,-5.251161,-1.949762,-8.743085,-5.247095,-7.035824,1.236227,-7.596660,-7.776091,3.216826,3.840354,2.309556,-9.742271,-8.817105,7.278530,3.072506,9.927653,-6.588469,-8.363566,-9.543654,0.658505,-8.333576,6.075033,-2.542309,-0.785790,-2.142899,-6.367097,-2.604394,-6.262961,0.409775,-0.015389,-7.181341,-4.627508,8.198628,2.554946,-3.564925,-7.537884,-8.587657,9.858331,-9.423817,-0.934400,3.872427,-2.499608,8.754110,-5.348261,-5.290067,7.203685,-6.843233,-1.113225,-7.252140,-6.966465,-7.797971,8.154608,-7.320316,4.445041,3.627662,2.547300,3.090391,-8.765772,-3.643860,0.488256,1.072870,-0.892292,-4.848069,-8.572436,-4.458269,0.215938,8.058351,8.060155,4.318281,-5.573069,-3.684700,-3.184614,1.361549,-1.441397,7.556894,8.806375,6.095676,4.622916,-1.435541,-1.126170,-3.518715,3.147091,7.364694,8.302078,-6.123288,3.572277,0.826672,-4.684266,-7.943802,-5.198281,-3.948582,-7.436146,5.326999,1.267842,7.881850,5.777194,-6.437993,-4.079391,8.452509,-6.893048,5.378613,4.445766,2.414416,-4.228041,-6.169507,-7.791494,-5.785070,-7.087410,-9.932243,0.853142,-6.459958,0.600776,5.252164,-8.025481,2.224953,-4.168708,-0.598608,5.902330,0.910406,8.328990,-0.956766,-6.135793,-3.078281,3.913519,6.746600,7.184720,2.488116,-7.080198,-6.259982,6.675919,5.708277,-2.872357,5.965976,-6.006055,4.040799,6.799908,9.041504,-7.364333,-6.703464,-1.379876,-8.402626,4.060714,-0.451768,6.183694,-4.797155,-7.000258,-2.403703,9.100177,-5.011829,9.492911,8.417490,3.438881,-7.148915,3.595208,9.925664,-4.208118,7.986478,2.737996,3.769313,-0.403370,-4.839647,-2.040594,0.556179,-7.172111,6.903836,-1.536385,-8.268595,8.112892,0.810606,-7.816819,-6.689969,7.327307,-8.857232,6.819207,6.569095,-4.459553,-2.472970,-9.796027,-8.686423,9.514292,-2.073077,6.441971,0.341865,-2.335703,9.898170,-2.048520,3.360339,4.753892,-2.803443,-5.292454,-4.570356,2.776965,5.561733,-9.006995,4.702221,1.047618,4.687472,-6.744455,4.543714,-7.030492,7.867592,-7.391449,-6.295997,5.174875,-1.197573,-9.089672,-9.494823,4.531793,2.465929,3.312222,9.144813,2.848238,3.183512,1.315251,-1.046796,3.590185,-7.604448,-2.847257,8.991283,-0.811398], dtype = "float64")#candidate|3920|(240,)|const|float64
bop_3921 = relay.bitwise_and(var_3902.astype('uint8'), relay.reshape(const_3920.astype('uint8'), relay.shape_of(var_3902))) # shape=(240,)
func_3232_call = mod.get_global_var('func_3232')
func_3235_call = mutated_mod.get_global_var('func_3235')
var_3938 = relay.var("var_3938", dtype = "float64", shape = (216,))#candidate|3938|(216,)|var|float64
call_3937 = func_3232_call(relay.reshape(var_3938.astype('float64'), [6, 3, 12]))
call_3939 = func_3232_call(relay.reshape(var_3938.astype('float64'), [6, 3, 12]))
func_2987_call = mod.get_global_var('func_2987')
func_2991_call = mutated_mod.get_global_var('func_2991')
var_3941 = relay.var("var_3941", dtype = "uint8", shape = (2730,))#candidate|3941|(2730,)|var|uint8
call_3940 = relay.TupleGetItem(func_2987_call(relay.reshape(call_3937.astype('float64'), [6, 3, 12]), relay.reshape(var_3941.astype('uint8'), [2730,]), ), 1)
call_3942 = relay.TupleGetItem(func_2991_call(relay.reshape(call_3937.astype('float64'), [6, 3, 12]), relay.reshape(var_3941.astype('uint8'), [2730,]), ), 1)
output = relay.Tuple([call_3896,call_3901,const_3903,bop_3921,call_3937,var_3938,call_3940,var_3941,])
output2 = relay.Tuple([call_3897,call_3904,const_3903,bop_3921,call_3939,var_3938,call_3942,var_3941,])
func_3948 = relay.Function([var_3902,var_3938,var_3941,], output)
mod['func_3948'] = func_3948
mod = relay.transform.InferType()(mod)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mutated_mod.get_global_var('func_3948')
var_3950 = relay.var("var_3950", dtype = "float64", shape = (240,))#candidate|3950|(240,)|var|float64
var_3951 = relay.var("var_3951", dtype = "float64", shape = (216,))#candidate|3951|(216,)|var|float64
var_3952 = relay.var("var_3952", dtype = "uint8", shape = (2730,))#candidate|3952|(2730,)|var|uint8
call_3949 = func_3948_call(var_3950,var_3951,var_3952,)
output = call_3949
func_3953 = relay.Function([var_3950,var_3951,var_3952,], output)
mutated_mod['func_3953'] = func_3953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2385_call = mod.get_global_var('func_2385')
func_2387_call = mutated_mod.get_global_var('func_2387')
call_4012 = relay.TupleGetItem(func_2385_call(), 0)
call_4013 = relay.TupleGetItem(func_2387_call(), 0)
uop_4014 = relay.cosh(call_4012.astype('float32')) # shape=(6, 3, 12)
uop_4016 = relay.cosh(call_4013.astype('float32')) # shape=(6, 3, 12)
output = uop_4014
output2 = uop_4016
func_4018 = relay.Function([], output)
mod['func_4018'] = func_4018
mod = relay.transform.InferType()(mod)
output = func_4018()
func_4019 = relay.Function([], output)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4060 = func_3411_call()
call_4061 = func_3411_call()
output = call_4060
output2 = call_4061
func_4062 = relay.Function([], output)
mod['func_4062'] = func_4062
mod = relay.transform.InferType()(mod)
mutated_mod['func_4062'] = func_4062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4062_call = mutated_mod.get_global_var('func_4062')
call_4063 = func_4062_call()
output = call_4063
func_4064 = relay.Function([], output)
mutated_mod['func_4064'] = func_4064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2622_call = mod.get_global_var('func_2622')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_4072 = func_2622_call()
call_4073 = func_2622_call()
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4074 = func_4018_call()
call_4075 = func_4018_call()
uop_4081 = relay.exp(call_4074.astype('float32')) # shape=(6, 3, 12)
uop_4083 = relay.exp(call_4075.astype('float32')) # shape=(6, 3, 12)
func_1212_call = mod.get_global_var('func_1212')
func_1216_call = mutated_mod.get_global_var('func_1216')
var_4085 = relay.var("var_4085", dtype = "float64", shape = (240,))#candidate|4085|(240,)|var|float64
var_4086 = relay.var("var_4086", dtype = "float64", shape = (648,))#candidate|4086|(648,)|var|float64
call_4084 = relay.TupleGetItem(func_1212_call(relay.reshape(var_4085.astype('float64'), [24, 10]), relay.reshape(var_4086.astype('float64'), [648,]), ), 5)
call_4087 = relay.TupleGetItem(func_1216_call(relay.reshape(var_4085.astype('float64'), [24, 10]), relay.reshape(var_4086.astype('float64'), [648,]), ), 5)
func_3501_call = mod.get_global_var('func_3501')
func_3502_call = mutated_mod.get_global_var('func_3502')
call_4088 = relay.TupleGetItem(func_3501_call(), 1)
call_4089 = relay.TupleGetItem(func_3502_call(), 1)
output = relay.Tuple([call_4072,uop_4081,call_4084,var_4085,var_4086,call_4088,])
output2 = relay.Tuple([call_4073,uop_4083,call_4087,var_4085,var_4086,call_4089,])
func_4096 = relay.Function([var_4085,var_4086,], output)
mod['func_4096'] = func_4096
mod = relay.transform.InferType()(mod)
var_4097 = relay.var("var_4097", dtype = "float64", shape = (240,))#candidate|4097|(240,)|var|float64
var_4098 = relay.var("var_4098", dtype = "float64", shape = (648,))#candidate|4098|(648,)|var|float64
output = func_4096(var_4097,var_4098,)
func_4099 = relay.Function([var_4097,var_4098,], output)
mutated_mod['func_4099'] = func_4099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4232 = relay.var("var_4232", dtype = "float64", shape = (7, 2, 4))#candidate|4232|(7, 2, 4)|var|float64
uop_4233 = relay.atanh(var_4232.astype('float64')) # shape=(7, 2, 4)
uop_4238 = relay.tan(uop_4233.astype('float64')) # shape=(7, 2, 4)
bop_4240 = relay.greater(uop_4238.astype('bool'), relay.reshape(uop_4233.astype('bool'), relay.shape_of(uop_4238))) # shape=(7, 2, 4)
func_1982_call = mod.get_global_var('func_1982')
func_1985_call = mutated_mod.get_global_var('func_1985')
const_4244 = relay.const([1,2,-4,-1,7,-8,-7,1,9,-3,-9,5,-4,-7,3,8,9,9,-4,-6,8,-8,-5,8,7,6,-4,9,-10,-9,-6,1,8,7,-10,5,-8,-10,-1,8,10,4,-7,-6,-1,3,1,-3,4,2,-4,10,1,-9,-10,10,3,6,9,10,-4,-7,9,-5,-1,-4,8,-1,6,1,6,-6,7,10,3,-6,-5,3,7,4,8,5,4,3,5,-7,-7,-2,8,-10,4,-7,3,2,1,7,7,-3,9,4,2,-7,-8,-3,10,5,-1,4,6,1,-3,-7,2,3,8,5,9,-8,8,-1,-9,4,-3,-4,-6,8,-5,2,-5,-9,2,-2,6,8,-5,4,-9,4,1,-3,-4,8,4,-7,7,-3,-9,-10,6,1,-10,3,-5,1,4,-3,-5,-8,-3,9,2,-8,4,6,-7,1,-3,-9,1,6,-6,-6,2,-9,8,4,7,-2,10,-2,6,6,-8,-10,7,-6,7,-3,5,-3,-7,4,-6,6,6,-5,-9,-2,6,-8,7,7,8,-2,-9,8,1,1,-10,-5,4,9,-1,-4,10,-1,6,3,-5,6,10,-1,8,10,10,4,-7,1,3,-4,-7,-2,-10,-6,-9,-10,-8,2,4,8,9,-2,-7,2,-8,5,-1,6,-1,8,-9,-9,-1,7,-2,1,-6,-8,6,3,8,7,4,-3,-10,-4,-1,-5,5,10,-6,-1,-4,7,10,-3,-7,-8,-6,7,3,-4,-6,9,-3,-9,9,-3,-8,4,10,4,10,10,6,1,-1,-8,-5,6,-5,7,4,9,-10,-8,2,2,8,7,1,5,-2,7,-9,5,10,10,-2,6,3,4,9,-7,-10,-3,2,-1,3,2,-2,6,7,-6,6,-2,-7,4,4,5,6,5,7,2,3,-2,9,5,-5,-6,4,-1,6,-10,-7,-4,-2,2,-2,-1,-6,-10,-2,-10,7,-9,-4,5,-6,-10,-8,9,-1,3,-3,10,9,6,-6,-10,4,5,2,8,3,-2,-2,4,9,-1,-2,-4,1,-2,-6,-10,-4,8,5,3,-4,10,3,1,1,-6,3,4,8,10,10,2,-7,7,6,9,-2,-6,-2,9,-1,8,5,-7,-10,6,-9,2,-9,-7,9,-5,-4,10,-1,1,5,5,1,-10,-1,1,-5,5,3,10,-7,-7,-9,-6,7,2,7,10,1,1,8,-1,6,-10,-9,5,7,-6,-8,-9,-2,-6,10,6,-8,3,-6,3,-2,3,3,-9,9,-9,2,1,-10,-10,5,-10,-3,-10,-7,3,4,-5,3,9,3,-8,-5,8,7,4,6,-4,-8,7,7,-9,7,10,-7,-1,-5,5,9,-5,-1,-8,-2,-5,-9,8,-4,9,-10,-3,-7,9,-5,-2,-8,-1,-6,8,-3,10,7,10,-6,7,7,3,6,6,6,6,-6,7,-7,-2,1,-2,2,4,-10,-6,-10,-1,-10,-8,6,4,-10,-4,9,-7,7,-9,-1,1,-1,-8,-3,-7,-5,-3,8,3,-10,5,2,-8,-9,-2,-9,4,7,2,3,4,6,-1,7,-2,-2,8,9,4,4,-10,6,-4,-8,-4,-8,8,-8,-8,-4,3,9,9,7,6,7,4,-2,6,-5,-10,1,-6,-9,-3,7,1,9,-6,3,-8,9,-4,8,-2,2,-5,10,-1,6,-3,4,-10,4,-9,-9,-5,-7,-3,3,-10,-5,-10,-6,3,-7,-4,-10,1,-4,9,7,6,-5,1,-2,4,7,4,5,3,4,10,-6,10,-3,-5,-2,-6,-8,8,-9,-9,4,-10,-1,-10,4,10,5,10,-8,-10,-6,9,5,-3,-10,3,-4,-5,-7,9,-9,1,-9,-1,8,9,-10,-5,8,1,10,3,6,10,-5,5,10,-5,1,-7,-1,-2,-5,-6,-6,-10,-1,-4,-9,2,-3,-7,5,3,-1,-4,5,3,-4,2,6,-10,-2,-3,7,6,-2,-5,6,2,8,-8,-3,-2,10,9,-5,2,-1,8,-8,-2,-9,7,6,-1,-7,-7,9,-9,7,-6,7,10,1,-10,4,9,-10,7,8,-2,8,-7,-3,8,6,-10,10,-5,-8,1,-8,5,9,-5,1,-1,-7,8,9,-9,1,-10,-9,-3,-9,-1,5,6,-10,-8,-8,-2,1,6,7,5,-5,1,7,1,8,-4,7,-4,2,-10,5,9,3,6,-3,1,5,1,6,7,-3,-7,-2,9,-7,4,2,-9,-9,8,7,9,1,-3,4,-1,2,9,-2,-8,9,2,5,10,-8,7,6,-5,-8,4,-8,-8,6,4,8,-9,-6,-2,-2,-9,9,-6,-4,3,-9,1,-3,-8,8,9,6,5,-8,-2,-9,1,-7,-2,7,-2,-4,4,3,8,-7,-9,4,-4,-3,3,9,10,2,-8,7,5,-2,1,-2,9,6,2,-4,-2,-7,8,10,4,10,-1,2,10,-5,-9,10,8,-6,3,1,8,2,-3,-4,6,-9,-4,-3,4,5,-6,-1,-10,9,8,1,-5,4,7,7,3,-10,-8,3,-10,-7,-3,5,7,7,1,3,-2,5,4,-1,-9,-6,-4,1,7,-2,-6,4,-10,-1,10,6,1,-9,5,-6,3,-5,10,10,-4,10,9,5,4,10,-10,-5,-10,-7,-6,-3,-4,-3,4,4,8,-8,-7,-8,-9,-6,-7,-1,5,3,-9,-8,5,-9,-7,-7,-4,-3,9,1,-10,-6,-6,-3,5,2,-2,-8,6,-6,-8,-9,9,5,-3,-6,3,-9,9,2,6,7,-6,5,-2,-6,-5,5,7,1,-6,3,9,8,4,1,4,9,4,-4,6,-7,5,6,1,3,6,-7,-10,6,-3,-5,6,-8,10,5,10,-9,-5,10,-4,-5,1,-9,5,4,-2,-6,2,7,4,8,-5,2,3,5,-4,-10,-2,-3,-4,-8,5,3,8,9,-1,9,-5,-5,2,8,10,-1,8,-1,3,7,3,-7,-1,4,-5,-7,3,-1,-3,3,6,8,-7,6,-8,10,-2,-2,-3,-4,-9,-1,6,9,10,3,-3,-1,1,2,10,-3,-7,7,3,-10,-6,-7,2,10,-8,-7,-5,3,6,7,7,8,7,8,9,-4,-9,-5,-1,-3,9,1,-8,2,-2,-10,1,5,-5,1,10,-9,8,-10,-9,7,-2,-4,3,-6,6,-3,6,-6,2,-7,3,-3,-9,2,-3,8,7,6,9,-6,10,4,9,8,-7,6,-2,5,-2,-3,-5,-10,4,-4,-2,8,10,-7,-1,-4,4,10,-1,-9,-1,-7,5,1,-7,-10,5,-8,-9,-6,4,1,-2,-5,-6,-5,1,5,1,-3,9,7,5,-9,-4,7,6,7,-8,2,-1,3,1,7,-2,-10,6,-6,-5,-5,1,7,7,9,8,-1,8,-2,2,3,-8,8,2,-4,1,4,-1,-1,-4,-6,-2,3,3,-3,3,-10,8,-6,1,7,-1,-4,-1,3,-7,-2,-7,1,10,-4,9,-7,-1,-7,-5,4,5,-2,-5,4,5,-1,10,-2,-5,5,-2,2,7,8,6,-10,2,-9,-7,8,-8,-4,-10,-1,7,-10,-10,4,2,1,-8,8,5,6,10,-3,3,-9,8,-8,9,3,10,9,1,-1,1,8,9,-7,8,-9,1,-3,-9,-3,-1,-8,-6,-7,6,-6,9,4,-10,9,3,10,-8,-5,6,-7,-6,9,3,1,-6,-6,-10,5,1,9,-3,-10,-4,10,-4,-8,-4,-4,-5,-6,-9,7,5,3,-5,-2,1,-9,-8,6,6,4,-1,6,-3,-6,-7,4,-7,7,-9,-10,4,9,10,6,7,5,10,3,-6,-6,2,-4,-8,10,-2,2,-4,10,4,10,-5,7,-10,9,-9,-8,4,1,5,-1,-6,4,2,3,-9,-7,-2,2,-5,8,5,-7,8,-2,1,-9,-6,6,5,4,-6,10,5,10,10,-6,-3,-3,2,1,9,-10,-3,3,-10,1,5,-6,3,10,3,8,8,-5,9,4,6,-10,-4,6,-9,-10,10,7,-1,7,-3,-9,8,-3,-2,2,-3,-6,7,-1,-10,-3,8,-2,-6,-4,-3,2,-9,-8,-4,-6,7,3,5,-2,-6,3,-4,-4,5,-9,-3,4,10,10,4,-10,-9,7,-1,-8,6,3,-8,10,7,6,2,1,-1,5,-8,-6,-2,-10,4,9,9,9,1,5,-9,-9,10,-3,2,4,-5,-8,5,-9,5,-8,10,-6,-7,10,-9,-6,-10,9,9,1,-6,-10,-6,-4,6,9,-1,8,3,3,10,2,8,-1,5,-2,2,3,-2,-1,1,6,-3,8,-4,-10,10,-4,1,7,9,8,3,7,10,-4,8,-1,-4,-8,1,3,-10,-10,-2,1,-8,3,10,-5,-10,1,6,-10,2,9,8,5,-8,-10,-3,4,-10,3,6,2,6,3,-7,2,-1,-5,4,-6,6,-5,-9,-2,-7,-10,-2,9,8,-10,7,6,-3,-6,10,9,9,7,-6,-8,-4,6,-5,-2,8,-7,5,10,2,-5,9,-10,-2,8,-6,9,-9,5,-1,-4,-10,2,4,-3,10,-1,-6,7,8,5,4,-3,10,-6,9,-8,2,-4,1,-5,9,-10,-4,2,4,5,3,10,10,-6,7,7,5,-6,-3,9,-4,7,-6,2,-8,8,9,-7,-6,-7,9,10,7,2,4,2,-8,8,7,4,8,-7,1,-5,8,-8,6,-1,-4,5,-2,-8,3,8,5,-5,5,-10,-7,1,-7,-10,-7,-7,4,10,6,-10,-3,1,10,3,-10,-2,-7,10,-4,-8,3,-3,-5,5,-9,2,-1,10,-3,-9,-5,9,3,-10,2,-7,3,-4,-1,10,3,-1,-9,10,-5,4,-7,6,2,7,3,-1,-4,-3,-3,4,-8,-4,10,-8,2,-5,-3,-9,6,-9,9,-5,4,-7,-2,-6,-10,9,6,-2,-7,7,9,-7,1,-6,-7,-5,-1,-9,-5,-5,-9,4,-2,-2,-5,-1,5,3,-3,10,10,-2,-10,-3,-7,-10,3,-2,10,3,2,-2,-1,5,-6,5,-2,6,-9,-7,-9,3,-10,-6,8,8,5,-9,6,2,10,-7,-6,4,-6,-4,-7,7,-3,-8,6,2,-5,-8,6,-3,1,9,-5,-3,-4,-5,5,8,9,-8,9,4,1,-9,4,-3,3,2,-7,-10,3,3,9,5,-7,-1,-1,4,-9,-8,4,9,5,7,10,4,3,1,-9,10,-9,4,-9,1,9,2,1,1,5,-8,3,8,1,10,6,-8,2,-5,8,9,-7,1,4,-6,9,-4,7,-10,3,-8,1,-4,-8,4,-6,5,5,3,-7,-8,2,9,-6,-8,1,8,4,5,-4,7,-3,5,-8,7,7,2,-9,-1,-1,4,6,6,-5,-9,-9,8,9,-9,-2,-10,2,-10,-4,6,1,1,-1,5,-7,4,3,7,-5,-6,-1,-8,10,-3,-1,4,-8,-9,-10,-6,1,3,4,-3,-6,-8,5,1,-7,2,5,2,-10,2,-5,7,8,9,3,1,-3,8,8,-5,-8,-3,-4,-6,-5,-2,-9,-8,2,1,1,5,-2,4,-4,4,-8,5,-1,-4,-1,7,-9,9,4,7,1,-1,-4,-4,6,2,-3,5,10,-10,-8,-3,2,10,-1,3,-6,-6,9,-1,-7,8,4,6,3,-6,-3,-1,2,-2,6,-6,2,-3,3,-6,10,10,7,9,2,-4,6,-3,-5,-3,2,3,1,-5,-1,5,-4,5,-3,-1,10,3,9,6,10,-4,9,8,-3,-6,-1,6,-10,-7,7,-1,3,5,-9,-7,2,-3,7,3,-2,4,4,1,5,6,-5,-1,10,-4,10,-7,-1,3,2,9,7,-1,7,4,9,-6,-8,7,-4,6,-10,-4,5,-2,5,5,7,2,8,-6,7,-3,8,2,1,-3,5,4,7,9,7,4,9,-8,2,-4,-7,-4,9,8,-6,-8,10,-10,-8,-9,-4,9,-8,10,2,-1,-3,7,-10,9,-5,8,-9,-2,-9,1,5,7,-8,5,1,10,-2,-5,9,-10,-2,-2,7,9,-7,9,2,-5,-3,10,-8,-9,7,-3,-1,-5,-1,4,-10,-6,-5,7,1,8,4,-9,10,1,5,8,-6,6,7,-7,-7,2,-8,-1,-2,-4,-1,-7,4,-10,3,-4,8,-8,4,-2,8,2,4,8,6,-2,-8,8,10,-10,6,2,6,1,-5,8,8,3,7,9,5,10,4,-3,6,5,-9,-7,9,4,2,9,-4,-3,-4,-6,-6,2,4,4,1,1,-8,-7,-6,-3,3,-8,4,9,6,9,-2,5,8,-6,-9,-1,5,6,-8,-2,10,-9,-5,-6,-6,6,6,1,-9,5,4,-8,3,-4,4,-2,-8,-1,-1,-6,2,2,1,3,2,9,5,7,-1,9,-9,-10,-3,-1,-7,-1,7,10,9,-8,-3,-9,4,6,-8,-1,-7,-3,-3,7,9,3,-5,6,6,7,2,-8,1,-4,-9,4,-7,10,-1,-1,9,8,7,-8,-7,4,10,-6,8,-1,-6,-6,-4,-6,-3,5,1,6,5,-2,-8,2,2,10,-9,-8,-6,1,-1,4,3,8,3,3,7,-4,4,6,5,8,6,10,-10,-3,5,-7,-9,2,8,-3,3,-1,-3,-4,2,2,-6,4,-5,-7,6,-1,-8,8,10,-2,-1,9,9,-2,-5,-10,9,9,1,-6,-1,-2,10,6,3,3,10,-8,7,-9,-6,-5,3,3,-3,8,4,4,2,-3,7,-1,-8,-5,10,-7,-3,5,8,9,-5,-7,9,-2,-3,-5,1,-9,-4,-3,-10,-3,5,-10,-4,-4,6,-7,-5,5,5,8,8,4,2,8,-10,-7,-9,-7,4,3,3,6,-10,-5,2,1,-1,-6,4,6,-7,8,10,8,-7,5,-2,7,1,-8,-7,7,-6,2,-8,-6,3,-8,7,6,-8,5,1,1,6,-7,10,1,-8,8,5,-9,-5,-3,7,-8,2,5,5,-5,5,2,-7,-1,-5,-1,2,9,8,-2,3,8,-3,-9,8,7,-8,-1,1,-2,-3,-9,10,4,1,-1,-6,-10,-3,-7,-2,8,-5,-5,-3,5,9,-4,-5,8,-4,10,9,1,8,-5,-4,8,-2,-8,-1,4,8,-10,-6,-8,-9,-2,-8,-2,-3,-7,-2,6,2,-2,6], dtype = "uint8")#candidate|4244|(2730,)|const|uint8
call_4243 = func_1982_call(relay.reshape(const_4244.astype('uint8'), [14, 15, 13]))
call_4245 = func_1982_call(relay.reshape(const_4244.astype('uint8'), [14, 15, 13]))
bop_4251 = relay.logical_or(uop_4233.astype('bool'), relay.reshape(var_4232.astype('bool'), relay.shape_of(uop_4233))) # shape=(7, 2, 4)
output = relay.Tuple([bop_4240,call_4243,const_4244,bop_4251,])
output2 = relay.Tuple([bop_4240,call_4245,const_4244,bop_4251,])
func_4262 = relay.Function([var_4232,], output)
mod['func_4262'] = func_4262
mod = relay.transform.InferType()(mod)
mutated_mod['func_4262'] = func_4262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4263 = relay.var("var_4263", dtype = "float64", shape = (7, 2, 4))#candidate|4263|(7, 2, 4)|var|float64
func_4262_call = mutated_mod.get_global_var('func_4262')
call_4264 = func_4262_call(var_4263)
output = call_4264
func_4265 = relay.Function([var_4263], output)
mutated_mod['func_4265'] = func_4265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2682_call = mod.get_global_var('func_2682')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_4274 = func_2682_call()
call_4275 = func_2682_call()
func_2385_call = mod.get_global_var('func_2385')
func_2387_call = mutated_mod.get_global_var('func_2387')
call_4282 = relay.TupleGetItem(func_2385_call(), 0)
call_4283 = relay.TupleGetItem(func_2387_call(), 0)
func_1982_call = mod.get_global_var('func_1982')
func_1985_call = mutated_mod.get_global_var('func_1985')
var_4293 = relay.var("var_4293", dtype = "uint8", shape = (2730,))#candidate|4293|(2730,)|var|uint8
call_4292 = func_1982_call(relay.reshape(var_4293.astype('uint8'), [14, 15, 13]))
call_4294 = func_1982_call(relay.reshape(var_4293.astype('uint8'), [14, 15, 13]))
func_3889_call = mod.get_global_var('func_3889')
func_3891_call = mutated_mod.get_global_var('func_3891')
var_4298 = relay.var("var_4298", dtype = "uint32", shape = (1872,))#candidate|4298|(1872,)|var|uint32
call_4297 = relay.TupleGetItem(func_3889_call(relay.reshape(var_4298.astype('uint32'), [12, 156])), 1)
call_4299 = relay.TupleGetItem(func_3891_call(relay.reshape(var_4298.astype('uint32'), [12, 156])), 1)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
call_4306 = func_996_call(relay.reshape(var_4298.astype('uint32'), [13, 16, 9]))
call_4307 = func_996_call(relay.reshape(var_4298.astype('uint32'), [13, 16, 9]))
func_3948_call = mod.get_global_var('func_3948')
func_3953_call = mutated_mod.get_global_var('func_3953')
const_4309 = relay.const([8.222504,-7.899381,8.837148,0.241753,-5.281944,5.654659,8.456451,4.430916,7.821486,-2.840528,0.510485,-5.660757,-6.643493,-8.430267,-2.117116,4.927584,9.748764,3.446125,-6.194087,0.629808,-6.580672,-0.761893,-3.956818,4.264613,9.766449,6.278264,9.535868,-3.256540,-5.585024,1.836038,7.492103,-2.656635,9.130831,8.573063,3.292835,-0.711575,8.531063,1.206398,4.991412,0.375039,8.357367,4.041460,-0.097744,-9.399090,-5.787178,-8.341995,-2.832772,-2.591904,-9.799880,-7.550137,8.793024,2.580363,6.260994,-2.750976,-2.180743,6.471189,-4.698355,-6.182251,-1.881855,-4.383023,-1.001568,-9.311653,1.048612,-7.869608,3.381677,5.077886,-4.620130,9.401457,-6.628091,-6.433012,-9.718298,-8.136013,-5.489042,7.175459,1.772293,9.798590,-2.154742,-6.211504,-6.841608,-2.386505,8.294450,-4.160669,-9.604780,6.326436,-8.270650,6.258809,1.038235,4.689614,-9.826387,-6.306063,-9.866336,-0.816475,-1.633627,3.217195,4.386826,-8.797565,3.447394,-5.690294,-9.343268,-6.237914,7.368860,7.507075,9.966097,-7.624053,-5.588106,2.690568,-6.540262,0.116049,2.991658,-9.985240,-3.578323,9.010865,9.523613,-2.393288,-6.549376,-8.516752,-9.135886,-9.671192,3.987677,-4.229536,-6.563047,-7.432817,4.549757,0.203332,-7.234400,6.488973,-0.577473,7.093513,6.542639,0.734944,-2.556391,7.643286,-3.175814,5.492648,9.118211,3.497090,5.767580,-6.898672,2.918255,4.847615,8.447291,4.855909,-3.459552,-3.976098,-7.634342,3.473225,4.007999,4.838836,-3.199852,6.803723,-0.048554,0.939767,8.228036,-0.039915,7.184011,-2.895350,2.580650,-9.743290,-5.242792,1.953772,1.750017,-7.121259,0.021099,-7.241400,-0.447765,2.377998,-5.673529,-5.251368,4.174946,-7.045652,5.129552,6.811271,-0.639798,-2.965095,-6.062906,3.462338,-9.927545,8.919029,-9.205136,3.361629,4.121706,0.062738,-6.587667,1.835987,1.561308,-8.347728,3.494884,5.076593,-0.190193,-6.486791,2.198371,-8.313557,6.742176,2.320672,1.021653,-6.508216,-0.691306,-8.817131,-8.038568,-2.612863,1.237000,-0.270789,-1.411878,6.849240,7.346630,-3.854210,5.085172,-7.396445,-2.385273,-4.331692,-7.538518,-7.384549,7.150905,6.869371,3.058117,4.244959,8.270154,2.219988,7.720729,-8.054762,-3.973417,6.192202,8.893905,8.256706,5.077453,0.695978,-0.983528,-5.621991,-9.873123,6.907279,8.574662,-1.716226,-4.700912,0.922139,-6.087281,-6.616737,-3.990847,7.418636,1.772743,4.506890], dtype = "float64")#candidate|4309|(240,)|const|float64
call_4308 = relay.TupleGetItem(func_3948_call(relay.reshape(const_4309.astype('float64'), [240,]), relay.reshape(call_4282.astype('float64'), [216,]), relay.reshape(var_4293.astype('uint8'), [2730,]), ), 1)
call_4310 = relay.TupleGetItem(func_3953_call(relay.reshape(const_4309.astype('float64'), [240,]), relay.reshape(call_4282.astype('float64'), [216,]), relay.reshape(var_4293.astype('uint8'), [2730,]), ), 1)
func_3232_call = mod.get_global_var('func_3232')
func_3235_call = mutated_mod.get_global_var('func_3235')
call_4312 = func_3232_call(relay.reshape(call_4282.astype('float64'), [6, 3, 12]))
call_4313 = func_3232_call(relay.reshape(call_4282.astype('float64'), [6, 3, 12]))
output = relay.Tuple([call_4274,call_4282,call_4292,var_4293,call_4297,var_4298,call_4306,call_4308,const_4309,call_4312,])
output2 = relay.Tuple([call_4275,call_4283,call_4294,var_4293,call_4299,var_4298,call_4307,call_4310,const_4309,call_4313,])
func_4323 = relay.Function([var_4293,var_4298,], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mutated_mod.get_global_var('func_4323')
var_4325 = relay.var("var_4325", dtype = "uint8", shape = (2730,))#candidate|4325|(2730,)|var|uint8
var_4326 = relay.var("var_4326", dtype = "uint32", shape = (1872,))#candidate|4326|(1872,)|var|uint32
call_4324 = func_4323_call(var_4325,var_4326,)
output = call_4324
func_4327 = relay.Function([var_4325,var_4326,], output)
mutated_mod['func_4327'] = func_4327
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4355 = relay.var("var_4355", dtype = "float64", shape = (14, 6, 10))#candidate|4355|(14, 6, 10)|var|float64
uop_4356 = relay.log(var_4355.astype('float64')) # shape=(14, 6, 10)
bop_4363 = relay.bitwise_xor(uop_4356.astype('uint8'), relay.reshape(var_4355.astype('uint8'), relay.shape_of(uop_4356))) # shape=(14, 6, 10)
bop_4366 = relay.multiply(uop_4356.astype('int16'), relay.reshape(bop_4363.astype('int16'), relay.shape_of(uop_4356))) # shape=(14, 6, 10)
func_3791_call = mod.get_global_var('func_3791')
func_3794_call = mutated_mod.get_global_var('func_3794')
const_4371 = relay.const([-2,-4,9,-3,10,2,-4,8,10,8,7,3,5,1,7,1,5,4,3,-8,9,6,9,-3,-1,-4,-7,2,-5,2,-9,3,8,7,7,6,-7,1,6,4,-5,6,7,3,-1,4,-8,3,6,-9,9,-9,10,2,-4,-3,-7,8,-9,6,6,1,8,-9,-5,-7,4,1,-8,9,-9,8,5,10,6,3,7,-5,-9,-1,-3,-9,6,10,-2,3,-5,-7,-6,-2,4,-6,1,-8,-6,-5,9,5,-3,-7,-5,-8,1,9,-2,-10,10,7,-7,-4,-6,-1,2,-8,2,9,6,-8,-3,-4,1,1,-2,-3,-5,-2,-5,-6,1,-1,1,-10,9,4,6,9,2,9,10,2,8,-8,9,9,10,-4,-9,-8,6,-2,-9,-10,-1,-4,-2,8,-2,-4,-4,4,-2,-5,-5,-1,6,-3,-4,-6,5,-8,10,-8,6,-7,4,4,-10,-9,3,-7,-3,2,5,-2,1,7,8,4,-7,2,-2,9,5,-8,6,-7,-6,-6,-10,1,-8,1,-6,-10,7,6,8,1,1,-6,-5,-8,4,3,-4,-3,5,-10,2,7,2,9,9,7,-9,1,-6,8,4,-3,-6,-5,-2,-5,5,-4,-5,10,2,4,-10,7,5,-5,-7,-9,5,-5,7,3,-3,-2,9,10,9,1,10,-5,-5,4,-1,4,-5,6,2,5,-6,2,8,5,8,7,7,-3,-6,-2,-9,4,-7,7,10,3,-10,-1,6,4,-3,-4,-4,-3,-3,7,3,-4,-2,10,-3,-9,-9,-1,-8,1,-7,4,-1,2,-3,-3,-10,7,-8,-5,-1,5,-9,-6,-1,-10,3,10,2,5,-8,-10,-5,-2,5,5,-4,-7,-5,9,2,-4,5,7,5,5,-10,4,3,8,3,-3,2,-9,-4,6,-10,-1,4,4,-1,3,-3,5,-2,3,6,2,7,8,-2,7,5,-8,-5,-8,-1,-8,-7,4,7,5,-5,-5,8,4,-8,-1,1,1,2,-4,2,1,6,7,3,9,8,-10,7,-8,7,9,-1,-5,2,7,-1,3,6,-1,3,6,-3,-10,4,-7,-7,10,9,-10,5,4,10,3,9,-6,3,-4,10,-9,1,-5,4,-6,-1,3,8,1,-9,5,-10,10,4,-2,-7,-9,8,-7,-1,5,-1,-7,-10,-8,-5,-6,-3,8,10,2,-2,-6,-8,3,5,-1,-8,7,9,6,-10,8,-7,-3,-8,-4,7,-3,2,6,5,6,-8,-3,10,-2,2,-6,-6,-7,3,7,3,6,-5,5,-2,3,-7,8,6], dtype = "uint16")#candidate|4371|(495,)|const|uint16
call_4370 = relay.TupleGetItem(func_3791_call(relay.reshape(const_4371.astype('uint16'), [9, 5, 11])), 0)
call_4372 = relay.TupleGetItem(func_3794_call(relay.reshape(const_4371.astype('uint16'), [9, 5, 11])), 0)
uop_4376 = relay.cos(bop_4363.astype('float32')) # shape=(14, 6, 10)
var_4379 = relay.var("var_4379", dtype = "float64", shape = (14, 6, 10))#candidate|4379|(14, 6, 10)|var|float64
bop_4380 = relay.subtract(uop_4356.astype('int16'), relay.reshape(var_4379.astype('int16'), relay.shape_of(uop_4356))) # shape=(14, 6, 10)
var_4383 = relay.var("var_4383", dtype = "float64", shape = (14, 6, 10))#candidate|4383|(14, 6, 10)|var|float64
bop_4384 = relay.divide(var_4355.astype('float64'), relay.reshape(var_4383.astype('float64'), relay.shape_of(var_4355))) # shape=(14, 6, 10)
func_1388_call = mod.get_global_var('func_1388')
func_1390_call = mutated_mod.get_global_var('func_1390')
const_4397 = relay.const([[-5.706345,-5.553149],[-1.781555,-4.372299],[-0.398455,2.061076],[-1.710845,2.820432],[-9.694821,-4.954942],[-4.763423,-2.042954],[-8.227356,-6.102035],[-8.226683,-0.773884],[4.528410,-6.248761],[4.919038,2.994905],[3.169440,4.109830],[-5.154047,6.571337],[-8.894271,-5.480857],[6.501840,-0.696867],[-3.853179,4.301767],[5.003371,1.386550],[-1.983044,1.605692],[7.595623,1.908493],[6.591687,-5.137754],[3.739021,-5.950256],[-2.281453,2.839144],[-3.674965,7.801857],[-7.021877,3.780808],[7.154450,-6.466977],[8.915871,9.703583],[-7.536793,8.861689],[1.101348,-2.335514],[3.451678,2.685252],[5.421487,-9.387415],[-8.365798,-1.082343],[-4.035578,0.832382],[-0.920775,4.183546],[8.016340,-8.813041],[5.912060,9.801321],[-7.411514,-1.319746],[7.370007,5.515575],[-1.821411,-4.540459],[1.429906,5.826937],[-8.821285,4.984920],[-3.090169,-0.660823],[-8.587057,9.747903],[-2.030300,-2.587841],[-5.835834,6.248629],[-7.668194,-9.803618],[-1.908091,-4.827478],[7.681017,7.243007],[-1.157028,6.802087],[4.229311,-8.442424],[-7.526389,6.108509],[-6.247404,1.258542],[-7.513160,-3.644503],[1.444672,1.035317],[3.033232,-4.881603],[7.167143,9.653558],[-3.388474,-7.370945],[-0.025835,8.470340],[6.576064,-9.131958],[7.744902,-2.636411],[-9.600114,-7.586858],[-6.765519,2.355963],[6.674768,-2.951268],[8.103774,-1.114644],[-6.535984,9.047172],[8.372037,-1.149143],[6.950935,3.074634],[-0.648482,0.043465],[-1.043181,8.988824],[5.842295,3.783447],[-0.472579,-8.497527],[9.425752,4.387049],[0.162589,-8.920895],[-7.338816,9.340172],[9.548680,-1.322429],[3.592849,-3.066824],[8.734915,-1.880177],[-2.666289,-1.804871],[1.994273,-0.913873],[8.144314,5.968549],[-4.271477,-1.736539],[-2.819586,0.845157],[-4.255280,3.388714],[5.644830,2.919427],[9.222026,9.175825],[6.187412,-1.286926],[-1.991164,1.962764],[3.429711,0.038953],[4.597530,-2.951600],[5.965774,1.454981],[0.455192,7.143545],[8.536535,4.192121],[-5.936897,-8.269388],[-3.753807,4.787290],[-5.391132,7.457101],[0.574723,9.127073],[-6.703595,-7.856761],[1.905178,7.553475],[-4.889482,8.316949],[4.353245,4.582498],[-2.674039,-3.622051],[-0.325772,3.379734],[-2.497248,-2.271622],[5.660075,-4.551601],[4.588013,-8.377831],[7.580632,3.090880],[-5.329037,8.284308],[-4.224718,-1.354001],[-9.936984,0.110879],[-8.831142,6.653001]], dtype = "float64")#candidate|4397|(108, 2)|const|float64
call_4396 = relay.TupleGetItem(func_1388_call(relay.reshape(const_4397.astype('float64'), [12, 3, 6])), 0)
call_4398 = relay.TupleGetItem(func_1390_call(relay.reshape(const_4397.astype('float64'), [12, 3, 6])), 0)
output = relay.Tuple([bop_4366,call_4370,const_4371,uop_4376,bop_4380,bop_4384,call_4396,const_4397,])
output2 = relay.Tuple([bop_4366,call_4372,const_4371,uop_4376,bop_4380,bop_4384,call_4398,const_4397,])
func_4418 = relay.Function([var_4355,var_4379,var_4383,], output)
mod['func_4418'] = func_4418
mod = relay.transform.InferType()(mod)
var_4419 = relay.var("var_4419", dtype = "float64", shape = (14, 6, 10))#candidate|4419|(14, 6, 10)|var|float64
var_4420 = relay.var("var_4420", dtype = "float64", shape = (14, 6, 10))#candidate|4420|(14, 6, 10)|var|float64
var_4421 = relay.var("var_4421", dtype = "float64", shape = (14, 6, 10))#candidate|4421|(14, 6, 10)|var|float64
output = func_4418(var_4419,var_4420,var_4421,)
func_4422 = relay.Function([var_4419,var_4420,var_4421,], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4429 = func_3411_call()
call_4430 = func_3411_call()
func_3791_call = mod.get_global_var('func_3791')
func_3794_call = mutated_mod.get_global_var('func_3794')
var_4432 = relay.var("var_4432", dtype = "uint16", shape = (495,))#candidate|4432|(495,)|var|uint16
call_4431 = relay.TupleGetItem(func_3791_call(relay.reshape(var_4432.astype('uint16'), [9, 5, 11])), 0)
call_4433 = relay.TupleGetItem(func_3794_call(relay.reshape(var_4432.astype('uint16'), [9, 5, 11])), 0)
output = relay.Tuple([call_4429,call_4431,var_4432,])
output2 = relay.Tuple([call_4430,call_4433,var_4432,])
func_4434 = relay.Function([var_4432,], output)
mod['func_4434'] = func_4434
mod = relay.transform.InferType()(mod)
var_4435 = relay.var("var_4435", dtype = "uint16", shape = (495,))#candidate|4435|(495,)|var|uint16
output = func_4434(var_4435)
func_4436 = relay.Function([var_4435], output)
mutated_mod['func_4436'] = func_4436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3682_call = mod.get_global_var('func_3682')
func_3683_call = mutated_mod.get_global_var('func_3683')
call_4469 = relay.TupleGetItem(func_3682_call(), 0)
call_4470 = relay.TupleGetItem(func_3683_call(), 0)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4480 = func_4018_call()
call_4481 = func_4018_call()
var_4484 = relay.var("var_4484", dtype = "float64", shape = (1872,))#candidate|4484|(1872,)|var|float64
bop_4485 = relay.mod(call_4469.astype('float64'), relay.reshape(var_4484.astype('float64'), relay.shape_of(call_4469))) # shape=(1872,)
bop_4488 = relay.mod(call_4470.astype('float64'), relay.reshape(var_4484.astype('float64'), relay.shape_of(call_4470))) # shape=(1872,)
output = relay.Tuple([call_4480,bop_4485,])
output2 = relay.Tuple([call_4481,bop_4488,])
func_4490 = relay.Function([var_4484,], output)
mod['func_4490'] = func_4490
mod = relay.transform.InferType()(mod)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4491 = relay.var("var_4491", dtype = "float64", shape = (1872,))#candidate|4491|(1872,)|var|float64
func_4490_call = mutated_mod.get_global_var('func_4490')
call_4492 = func_4490_call(var_4491)
output = call_4492
func_4493 = relay.Function([var_4491], output)
mutated_mod['func_4493'] = func_4493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4522 = relay.var("var_4522", dtype = "float32", shape = (15, 7, 11))#candidate|4522|(15, 7, 11)|var|float32
uop_4523 = relay.cos(var_4522.astype('float32')) # shape=(15, 7, 11)
var_4538 = relay.var("var_4538", dtype = "float32", shape = (15, 7, 11))#candidate|4538|(15, 7, 11)|var|float32
bop_4539 = relay.mod(var_4522.astype('float64'), relay.reshape(var_4538.astype('float64'), relay.shape_of(var_4522))) # shape=(15, 7, 11)
bop_4545 = relay.logical_or(uop_4523.astype('bool'), relay.reshape(var_4522.astype('bool'), relay.shape_of(uop_4523))) # shape=(15, 7, 11)
output = relay.Tuple([bop_4539,bop_4545,])
output2 = relay.Tuple([bop_4539,bop_4545,])
func_4548 = relay.Function([var_4522,var_4538,], output)
mod['func_4548'] = func_4548
mod = relay.transform.InferType()(mod)
var_4549 = relay.var("var_4549", dtype = "float32", shape = (15, 7, 11))#candidate|4549|(15, 7, 11)|var|float32
var_4550 = relay.var("var_4550", dtype = "float32", shape = (15, 7, 11))#candidate|4550|(15, 7, 11)|var|float32
output = func_4548(var_4549,var_4550,)
func_4551 = relay.Function([var_4549,var_4550,], output)
mutated_mod['func_4551'] = func_4551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4556 = relay.var("var_4556", dtype = "float64", shape = (10, 6, 7))#candidate|4556|(10, 6, 7)|var|float64
uop_4557 = relay.log(var_4556.astype('float64')) # shape=(10, 6, 7)
func_3778_call = mod.get_global_var('func_3778')
func_3779_call = mutated_mod.get_global_var('func_3779')
call_4563 = relay.TupleGetItem(func_3778_call(), 1)
call_4564 = relay.TupleGetItem(func_3779_call(), 1)
func_2050_call = mod.get_global_var('func_2050')
func_2055_call = mutated_mod.get_global_var('func_2055')
const_4575 = relay.const([6.878349,-1.117946,-7.234515,-2.369803,-8.575195,0.833086,4.154904,7.213488,-7.840935,-7.176766,4.628475,-9.838841,0.726078,6.046882,1.598664,7.758782,-9.340071,-4.423412,4.818436,6.319441,-2.543994,-7.082609,5.887935,-8.769695,-6.498540,-2.532408,8.145301,1.392386,-4.751490,4.984409,-9.437492,7.640859,-6.418964,3.877916,-5.478467,0.274693,1.465811,9.270317,6.683942,-0.116712,-5.209039,-6.971148,2.099398,-6.096181,-1.645466,1.407032,-2.046935,1.318658,7.463968,-0.778092,-5.358794,-4.146522,8.622643,-9.090505,8.348005,-8.615606,0.152935,8.653378,-3.069293,4.619568,3.227012,4.616426,7.298406,-2.622113,2.932624,-2.677979,-8.330985,-9.551995,-2.140561,2.001827,8.309296,4.577023,-4.596146,-7.902202,-2.635836,0.470222,-6.940117,7.705706,-6.157606,-5.074509,-8.072821,2.375506,1.625302,-0.482569,-3.449454,-5.692029,-8.007463,2.456341,-2.306347,1.571256,2.660679,2.181474,-8.134471,0.300152,-9.673871,-0.418822,-9.051982,-8.692797,6.805877,-8.169893,-8.706784,-0.089645,-0.243180,5.920833,8.421848,-6.111239,4.325989,-5.742139,-3.370638,-8.828898,-1.114659,-2.551404,-9.554809,-9.172299,0.119037,-7.682890,3.435048,-5.879687,-0.325050,2.528042,6.691705,-7.863632,8.936885,-9.365023,-1.656176,-5.058620,6.702944,1.887582,9.142975,-3.246224,-8.361665,-7.833492,8.190221,-4.409477,-7.592960,6.351990,2.749367,9.685081,-2.834484,-6.460872,-6.289639,0.585009,2.686646,-6.321903,8.285676,-9.803480,4.268535,1.091810,1.577875,-2.093210,7.162365,6.889757,3.791041,2.969841,-9.251350,-5.806538,5.725413,7.368641,-1.627862,7.651777,-3.922764,-2.367235,2.007430,-0.537853,5.954178,-9.781361,-6.231099,4.405399,-2.026878,8.604656,-2.338475,-7.123452,-8.568995,6.653553,3.932498,-3.153379,-0.631434,8.374779,-3.312890,-0.613388,-1.404701,5.560632,8.679095,-4.048863,1.059152,-0.908488,0.048938,3.155211,-7.956239,-1.203940,-5.355696,3.624506,8.249231,-3.362819,-9.541152,5.394747,4.010027,5.310087,8.872635,1.450960,-9.296777,3.734832,-3.863149,5.491243,0.363088,-0.306589,-5.803650,-2.042041,-3.167635,7.858755,3.691089,7.095685,7.872832,6.385725,-2.639330,-3.801290,3.632294,-7.037041,-5.077443,-6.482252,3.245372,3.152001,0.802083,-3.253644,-9.422968,-7.329988,-3.509198,2.313575,9.952274,2.858162,7.151140,-1.232862,8.856891,-2.662564,-7.127068,2.759795,8.083864,2.933647,-0.529939,-4.861830,6.872919,-1.163502,-3.077294,-9.648082,5.884574,3.707527,1.486213,4.296268,-6.474181,-8.645761,-4.275507,-1.398446,9.868842,-6.698274,1.528592,-7.657524,-8.998579,6.081271,-8.160865,-6.421660,6.265634,-5.974951,9.429753,0.191851,2.306784,-0.613205,3.325517,2.561923,-6.993449,-6.787885,-3.454369,-8.260337,6.061131,0.121896,3.248064,2.772186,1.129070,5.443554,8.150887,-1.398754,0.814522,8.640652,-9.081800,3.030980,-1.370672,-0.579315,-7.250408,2.362360,-7.689670,-8.939424,-1.413753,-9.322444,1.423932,-3.058178,-4.461155,-2.916582,8.571522,-6.529619,-6.214107,-4.771031,9.466727,-0.788600,-2.841025,-0.089256,-1.078329,-9.445960,-6.659819,6.369581,6.044437,8.295614,-4.541921,0.005535,0.686069,7.022579,7.826485,-3.267910,0.275620,-3.043117,5.606705,-4.991054,1.718296,-2.327708,-9.404876,-5.896189,-8.569653,7.938046,9.968674,-7.363627,7.704252,-0.278073,-8.440962,6.738442,5.926691,9.895105,-4.895106,3.006255,-9.892762,-4.088729,2.753298,-5.747571,-5.020520,-5.919704,-5.591191,-9.512191,6.729355,-2.017297,3.589442,0.620314,-3.808072,5.170781,-8.757417,-1.600754,5.250671,8.033401,7.720025,-0.727158,-8.451871,9.342454,6.217043,-9.786106,8.617685,-1.211170,-3.337936,3.442476,-3.001883,-7.296680,3.143672,-6.062508,8.738486,9.999130,4.068747,-4.015306,1.199854,4.659133,7.491337,8.007973,-6.116929,2.504561,5.811618,1.700707,-4.074201,-7.220473,0.050066,-6.644752,1.242899,1.243553,9.870820,-9.526684,-2.108368,9.827874,4.250816,-1.614855,9.330312,-3.168234,-2.872760,-9.185053,4.138341,4.558776,8.835729,9.499596,9.267911,-9.126589,-3.710683,4.686868,-2.339715,-9.857649,4.588938,6.853569,4.396484,9.273166,-6.837533,-8.269849,4.409686,-4.200082,1.513157,9.517202,-6.291435,0.268136,-0.688919,9.131041,7.237875,-5.768959,-9.710555,8.229741,4.482396,-0.305820,9.938512,-7.887262,-5.585751,3.313688,-5.474896,-8.280969,-4.057027,-0.850732,4.812066,7.205729,9.810230,8.260418,-0.125589,2.065558,-9.328544,8.486754,-9.123376,-4.621819,-1.297655,-9.268611,-3.615741,8.449305,-0.300664,5.555658,-4.095108,6.289097,-1.044134,1.159648,0.465764,-0.132735,-9.224009,3.367212,3.171292,5.731295,-9.922095,4.631913,0.139299,5.532192,-1.387889,8.887948,-0.712044,-6.655706,7.194682,6.817322,8.481198,-9.516234,9.672601,-8.476096,0.388951,-0.516367,-5.231268,-2.308218,-5.639524,4.159436,-5.434480,8.564355,6.891901,5.711716,-8.550988,-5.636471,6.160834,6.054382,-6.028706,8.213746,-6.510395,7.933264,9.338438,-9.024007,-8.262176,-8.975252,-7.714802,3.653534,-1.049185,-1.594332,4.235809,-3.609519,-5.239554,2.332989,0.540688,-1.397516,-5.233032,-8.937012,-1.736261,4.803257,6.785440,4.396597,-0.217778,4.969412,-8.867072,4.875117,-8.361543,-6.509741,0.551151,-8.295003,-4.349368,-2.597330,-4.567070,1.601384,8.139113,5.229028,-6.402313,-5.399912,2.467468,3.332058,-2.017936,0.339075,-9.143227,2.869270,1.332141,7.751064,-6.431091,-6.875092,-6.596710,8.484603,7.307491,-1.174702,-6.129641,-8.272801,3.834825,8.374214,-2.158294,-2.676330,-2.548468,-0.172042,9.183767,1.180881,-4.473624,2.689442,7.773505,-1.475426,1.636275,4.655224,-1.977441,-5.805398,3.870477,7.907220,-5.105872,1.310351,4.168360,1.820445,0.578026,-1.871013,-5.656750,-7.935064,7.524659,-6.869774,-1.695083,-3.514731,1.794574,-4.202247,-8.132366,-6.561398,9.177546,6.707033,-3.854744,-7.413344,4.016074,1.979042,-0.988220,-5.119145,-7.909270,-4.658048,-0.650356,4.008054,3.104911,-2.616962,1.671780,0.320160,-1.005119,2.252285,5.105174,-8.898249,6.546362,-1.357843,-0.120856,2.151559,-6.305424,9.366128,-5.493758,-9.493236,-8.791669,6.966594,-3.504458,-8.067072,1.803522,8.040793,0.458484,7.421436,4.378295,-0.716786,-2.150376,-7.582903,-4.335721,1.859356,8.224710,-2.050134,8.445582,0.707036,-0.388845,-0.554641,-3.872307,-5.573432,-4.897644,-5.406192,-3.138109,0.696682,-4.933056,1.226002,2.409529,9.845836,-1.314530,-8.302995,0.154743,5.325358,0.250058,7.565281,6.007765,-3.304625,3.476705,7.116183,4.734461,1.849497,6.925696,-5.841378,5.678767,9.640342,-8.937361,6.581685,6.546972,6.597504,3.683599,-3.946500,0.611667,-4.327115,8.583833,-9.174417,-3.147350,-5.545040,-4.909545,-0.179354,-7.051291,1.941533,5.718375,-9.650488,-1.826995,8.535414,-3.766500,-5.146270,-4.401119,8.429585,2.437412,4.163429,5.879360,5.133796,-9.257322,8.348622,9.514566,6.755657,-1.935233,3.800117,-6.549657,-0.095603,2.410908,-9.329262,5.923766,7.281849,4.726184,-4.862392,3.162128,-7.648926,5.793577,-2.001076,-5.446555,4.862498,-1.551668,9.827336,6.254362,2.162038,0.776480,6.816084,9.343872,0.279851,7.640947,9.076452,2.831354,-3.686616,-8.558763,0.783874,1.411950,0.099693,3.927965,-8.767222,-7.224153,4.842945,8.052440,-2.927110,-8.065680,9.328248,2.941624,-4.006129,-3.548229,9.278709,7.083718,2.768909,6.486246,-3.681393,-1.714013,2.390593,8.797301,-3.572794,0.654198,4.755624,-7.144950,0.013482,-2.800955,-4.896372,2.637352,0.440125,-6.398113,2.818168,0.495768,-3.984532,-8.163121,-3.828372,6.393839,-1.208363,1.626950,-1.828048,-5.423545,1.454464,7.377532,6.468634,1.389635,2.357101,7.928781,7.384711,8.503482,-4.952423,3.984801,2.000845,8.023623,-4.440735,4.106025,-3.797402,-7.163036,-4.823480,4.911169,-0.379451,-4.611444,-1.353593,-9.067813,-6.771310,-6.316941,1.439017,8.616921,-1.129312,-7.141753,0.330986,9.538013,2.477522,7.222744,9.055406,8.787940,9.982247,5.216743,-8.976601,4.842990,9.775983,8.337796,-3.556927,6.145744,-8.278432,8.162681,-5.678849,3.235348,-3.186763,1.690999,-7.636599,-7.039621,9.961739,5.064283,9.185325,-8.339008,-9.664312,-8.711114,9.311683,0.453711,0.808047,6.691584,8.857941,-8.630703,-3.334385,7.280411,-8.123029,-4.837071,-9.396568,6.393442,0.242377,-2.604906,-1.857120,-6.440022,4.936367,7.485446,-8.980566,-4.231618,4.857416,3.160200,-4.431734,-0.764431,-9.978203,-5.998083,6.052187,0.921116,-8.804334,-1.000234,-7.094121,-9.974729,1.810605,-2.781481,-9.242994,7.083847,5.595889,2.765195,-9.440876,4.057974,6.748003,4.682355,1.100065,0.345647,-0.904052,-4.528060,-3.934881,-3.568237,-6.617692,4.194301,3.043659,9.931536,8.612283,9.309634,-3.871986,3.619501,-7.554553,-0.849265,7.852976,7.207202,-3.948612,-8.571504,-8.593457,-7.727148,1.763645,-2.911963,-4.423435,-2.958347,-2.636886,0.009214,-4.426578,-6.792096,2.368073,-1.127602,-8.550241,1.442661,-4.673805,9.682184,-0.812368,0.662916,8.866335,9.950451,3.477395,-4.250693,3.066524,0.349230,-9.279437,-8.682084,-5.815715,-1.622289,8.713315,7.250113,8.737099,-7.629078,-5.578393,7.334370,7.660471,-0.704427,-8.826573,8.835191,-7.575838,2.088353,-4.028355,4.712777,4.173443,-1.225025,9.290234,-7.431522,-4.556898,-7.059845,-3.672843,8.659070,-9.489533,8.718425,-1.345888,-2.123595,7.581787,1.788933,-4.284020,-6.018508,-4.533453,-3.190171,6.240873,-0.051332,5.507408,-5.780205,-0.169756,-2.844581,1.813928,-2.692874,-7.123156,6.295060,-7.742005,8.786663,4.863714,-3.257672,-5.968758,3.914381,8.429282,-5.907549,-1.503725,6.332924,-7.068663,-9.081709,7.502263,6.685009,1.519725,4.413835,0.484457,-3.847026,-4.173445,-4.937682,9.376170,-8.725892,3.446353,-7.063299,-1.364717,-5.933650,4.744837,-5.889518,7.547294,-5.279973,-4.739605,3.625324,-6.867745,-4.733269,-5.146090,-8.581175,-0.927670,5.287641,0.121484,-3.782850,6.699913,-1.925179,4.773035,4.466356,-9.817746,0.892925,5.853449,-7.708967,3.588917,-2.451233,9.164799,1.359335,-4.709992,0.463049,-8.530643,1.168304,-2.549821,-4.826010,-2.562383,3.830343,6.194208,-3.155517,5.360073,1.187639,8.556452,-4.947765,-0.848631,9.695704,-8.116897,-2.099348,-6.563944,-8.266005,5.804968,-5.640779,-8.380462,-2.475516,-1.196233,-8.311157,4.368870,-5.336107,-8.598927,6.099980,2.915680,3.473670,6.035254,-8.816349,8.625712,-0.950285,-7.182643,-7.913220,-4.318108,-2.230080,2.635643,-7.698907,-6.174812,-1.705489,-2.695884,2.179711,-1.423439,9.358361,-2.053028,4.797612,2.326877,-3.782088,-7.894874,-5.845421,9.678569,6.702285,-2.602971,3.755614,4.287748,2.431370,3.320296,2.696414,8.748514,5.009908,-3.433799,9.945738,9.434605,0.258797,-0.625828,-5.724592,2.617745,6.842441,-3.730770,-5.238193,-6.071001,0.475992,5.976317,3.180034,9.914914,-1.128576,5.927056,0.625943,-3.147751,-6.689188,8.063453,-0.125711,-1.094725,-7.330007,1.761161,-8.424766,-1.252227,7.233492,-8.056680,-5.374289,-3.326032,-3.668555,-1.015672,-2.000404,-8.207551,7.817235,5.822412,-4.513391,4.616764,-4.837238,-9.765226,-1.513326,-5.927742,-4.838860,-5.092434,9.504142,6.785945,-1.021805,7.329164,-5.872015,2.630659,7.218601,-9.592614,6.470307,-6.569014,-4.573333,-8.921496,5.140463,-2.818770,-1.103013,-9.121195,4.545028,1.685093,7.129616,-0.875463,-1.906062,-1.649353,7.392927,-1.489016,-6.836324,-5.760504,2.109242,-2.928995,-3.606535,-7.392790,5.850317,-4.214141,-1.692240,7.527936,-2.810860,-2.337145,6.219985,2.635348,2.611813,0.236901,-2.911110,-9.364130,0.857975,7.637139,0.419689,-0.712847,-1.369925,-6.828420,-9.791955,6.885221,7.567374,8.533558,-4.368193,0.296687,-1.308007,3.028478,3.598212,-0.759033,-7.075307,-0.646409,3.075874,6.685204,8.484334,9.202543,4.449297,-9.200581,-8.672784,0.749088,-0.425944,-4.582112,-0.791100,-3.809269,1.346024,-2.266419,-5.821259,7.369789,5.643487,0.455007,-9.059866,-0.355439,1.230276,0.520907,-6.884916,-5.013942,7.069329,-3.305195,2.437973,5.673667,8.269604,-1.966813,-1.561594,-3.474514,-5.709741,-7.156165,-6.677787,-4.888400,-7.350884,9.973185,8.905145,3.193682,-1.818865,-4.080773,-8.719839,-9.937070,6.059161,7.646981,-2.936457,6.798689,-9.925969,-6.086605,-6.683473,-9.485850,-0.090565,6.759186,-0.092604,-9.964488,-0.109851,-4.057756,0.621323,9.337049,6.289976,-2.977012,-6.036593,5.941500,-7.664583,7.335589,-9.371192,6.489492,9.853176,-5.229794,7.033224,-8.821758,5.486882,4.619420,6.966235,0.635331,9.871235,-7.201563,1.399522,-2.217901,0.503276,-9.079743,-5.403123,-5.646812,5.918588,5.855520,-4.473891,-1.320397,-0.058304,-0.133807,-8.844785,-5.000563,1.121979,3.643452,-9.695658,-2.370801,7.285431,-5.246068,-5.044386,7.224522,5.644860,5.174798,-6.907387,-1.434354,8.467771,-9.334953,-2.246091,6.194403,-3.581181,5.073509,6.353302,-1.462168,-8.009334,-7.485979,-1.137226,-5.213112,-2.006640,4.860047,-1.384920,3.736344,-0.742488,7.546604,-9.565453,-8.073053,-5.517765,-5.314906,-2.668489,-4.164674,2.435275,7.483824,0.725591,1.101197,7.226038,-2.314198,-0.685475,9.107222,-2.148816,-5.292590,-3.835609,4.249090,-6.917221,-1.537440,-7.708334,4.503034,5.370018,8.543866,6.853787,-5.350344,7.400774,-6.093758,-8.139733,-1.482971,-1.546155,2.446019,-3.906833,0.555255,-0.240592,3.605040,1.784184,-2.373299,8.297934,3.594832,7.337363,-5.958665,-0.302617,-7.634554,-7.057059,3.028718,4.174113,9.953709,2.364106,-8.311717,-6.993298,8.561769,2.532960,-2.136571,1.903093,2.855054,3.175508,-4.948357,-6.604891,-8.709422,8.699365,9.200549,7.808181,-7.977444,-6.196919,-7.571900,-9.542853,-2.949410,-6.547079,7.413125,-8.417648,-2.835338,-8.626061,6.772653,8.634413,7.308001,-2.191533,-5.016608,-0.961418,-4.686281,3.352662,8.793530,-8.043616,8.532034,1.649509,5.526240,2.814687,2.117609,-7.534006,-3.368204,2.032104,-6.293363,0.112588,7.505868,-4.201354,-8.774213,-0.990431,4.459370,1.574575,8.562485,5.498686,-5.605865,-1.185179,-8.777071,-6.271651,2.036426,6.009292,5.711248,-5.411268,-4.919629,7.282944,-5.200931,-4.234901,-6.432101,4.885828,-0.700053,-5.500050,2.756142,5.790365,1.921546,4.128658,0.999281,3.071550,1.029320,6.074826,-1.363297,-2.815898,-2.538616,-2.483108,-5.926925,8.783825,0.361154,6.142409,-5.150070,-3.376718,-5.413211,-6.080332,-2.396872,5.046589,0.640498,5.912108,7.676706,2.330131,9.450898,-4.027199,8.170724,-4.968813,-8.946932,7.885613,-2.959389,-3.066535,1.941932,-9.525380,-3.279966,5.154394,-9.033534,5.730719,-5.503500,-3.677951,9.497301,1.436378,-3.258811,4.849465,8.895658,5.270516,-4.547009,7.034868,3.902083,-9.530739,2.201384,5.110407,-1.884118,6.042801,7.254911,-0.543867,-8.115659,6.562243,-6.598932,4.848608,-3.313152,1.543837,6.358246,-9.940179,4.756756,-8.981172,6.984740,-2.408164,9.765387,-0.377316,1.305550,0.489586,3.620508,-1.083751,7.398560,3.272063,9.009637,-5.165240,6.840642,2.183492,1.913175,0.164005,7.982219,0.310453,9.483027,-4.361488,-9.519784,9.963879,-6.210595,4.906753,6.326052,4.043885,-4.877021,8.498120,8.414531,-4.524287,7.012000,3.578887,7.194311,6.648740,-2.722762,-2.576836,6.133560,-2.417070,6.109675,6.316160,5.983298,5.785868,-5.347202,6.497447,2.821077,9.392136,-4.619902,-8.238957,3.839099,-0.933794,1.951737,-0.222988,-3.430248,-6.416346,6.821093,1.954420,0.712966,-8.518332,9.843721,6.575872,8.009322,0.203097,7.174101,6.609261,1.563440,-0.205465,-2.760524,4.572071,-9.846943,6.466992,8.525345,-2.199261,4.538356,7.166411,-0.600989,-6.713933,1.177487,0.384608,7.280343,6.470068,7.762240,9.815300,-3.576882,-2.087508,-6.488838,-8.660886,-5.650465,-2.901029,2.648143,3.836173,-2.406594,0.447661,2.947111,-2.749756,-7.379009,-1.394178,-9.122469,1.037434,-3.594266,6.929670,5.046708,6.772778,-7.588241,-5.862194,9.708267,8.129820,7.280045,0.680457,-5.397563,0.510188,9.487104,-2.198453,4.067899,-0.353327,1.073826,-2.338648,-6.210929,8.742297,-5.577748,-5.439675,6.098901,0.623975,4.022040,0.216757,0.601621,-7.871182,-5.222670,-0.959172,-1.799075,-5.733118,-7.685210,8.305189,-1.155984,9.957055,-3.626126,-0.556743,8.749457,-6.960214,-6.469790,-8.407612,-4.633328,-1.521501,2.612712,-4.976893,5.299121,-0.912172,8.757229,-2.829801,-2.318927,-9.315735,-6.188126,-0.205885,7.696516,-5.620369,-9.294262,2.602090,9.561942,-3.711317,-9.598667,-9.531852,0.529706,3.533779,-2.799510,-7.366219,0.550486,5.851745,5.137263,1.522526,-0.116691,-5.755739,7.181113,5.352906,5.360286,8.973607,-5.645777,5.751639,-5.757017,2.077911,4.600226,5.395285,-5.122410,-5.666003,-7.542113,-5.222970,5.400490,-0.628469,-8.676977,2.611981,6.800276,5.475602,-3.944148,8.580312,2.274141,-0.321789,-9.164677,3.684280,-8.457229,-3.844526,-5.075139,-5.340500,9.138762,-5.905157,-1.727052,1.048814,-1.057036,-5.604159,4.903657,-1.261724,-7.361765,8.161015,-4.888195,1.337935,-0.239621,-4.639978,6.300188,-0.184030,1.510655,-5.445277,-5.981010,4.949640,7.608756,-4.087140,7.017495,3.711679,4.801284,-1.176300,-2.713756,-8.878483,7.453018,8.943009,8.075315,9.470284,-0.090393,2.611328,6.008264,3.952191,-5.356054,4.972317,-6.261200,1.632060,-9.317053,-0.926647,3.551057,1.342096,1.454268,3.729472,9.346930,8.576139,2.966274,-4.941857,3.515289,2.064312,3.318024,2.615957,4.428030,1.111900,-5.712449,-7.369716,8.274115,-0.936881,-0.107455,2.475574,-8.218301,8.998932,4.857249,-6.356221,-0.864668,-8.952290,-7.091129,0.890644,-0.322684,9.522501,-7.187137,1.054163,-2.772667,-0.776794,7.525484,-2.266406,-0.394831,9.303303,1.079224,-5.691518,1.513811,-1.299440,-0.543996,-0.259428,-4.450319,1.841371,8.772436,-7.558682,-4.116071,3.305004,9.820324,4.554448,9.130270,9.675578,-6.176642,-0.314103,4.873786,-0.994350,0.413080,-2.023165,-5.095764,-0.731419,-2.954141,9.965004,-2.791331,1.026042,-0.032617,2.474177,8.751968,2.616564,9.149898,-2.913135,-2.082466,-5.589235,8.061933,3.499796,2.275282,3.812868,5.688493,-0.319268,2.084805,3.513268,5.101798,-5.358478,4.768575,-4.854667,3.533943,5.661522,0.779663,8.386591,3.973209,8.737498,1.315646,-9.561174,6.806618,-3.089582,-9.842226,9.510841,-6.088697,7.942916,7.933034,-9.709614,-8.469456,-8.154459,-7.178396,-7.880245,-9.007229,-6.461468,-7.552161,-9.914670,3.730477,5.085071,-3.345222,6.630677,-4.942671,9.300097,9.388745,-4.033770,0.501998,3.050115,4.979460,0.447835,5.070897,8.030789,4.249641,-9.187897,-9.969570,-8.113465,-0.718185,9.730048,-8.323123,-5.915407,2.410944,4.167557,0.694296,-6.834870,-3.754955,-7.554826,6.156552,-4.728630,-0.322344,9.045216,-5.072115,2.364683,-5.316917,1.013598,5.828938,-8.757504,-5.609007,-5.137083,-6.870076,-4.001995,-4.315520,9.157778,-8.755754,-6.158685,-1.148670,9.078023,-9.024581,4.194543,-9.321269,9.852815,-6.757540,-2.286063,-3.841765,-2.888643,5.347782,6.618211,7.435100,4.994570,-5.806761,-6.834630,6.200909,7.998134,6.050847,-4.036835,7.992395,5.414003,5.164858,3.903751,-0.061024,2.436521,-1.523591,-7.890700,0.720002,-3.445916,8.471021,-6.485946,-8.621161,-5.952441,-2.030392,3.690636,9.170138,6.489137,-3.812596,-9.683438,-8.683689,-6.225252,-2.008525,-0.177349,-0.896274,-2.526539,-6.526288,6.055729,-4.265517,-9.554574,-0.641586,3.616125,-9.959071,8.909907,2.080212,-0.686239,0.990109,-6.621438,9.411301,1.303039,4.879667,6.284898,-8.324816,6.293761,7.178476,5.888358,4.645408,3.149428,5.267825,4.359435,-3.928580,-2.587633,-3.471868,6.047670,4.007548,-8.078875,-4.464480,-9.835513,-5.896253,-4.386223,3.459815,2.207052,-6.097244,3.498791,3.851336,-8.289368,-3.286060,2.069093,5.404089,-2.613716,0.698162,-2.540499,-9.167763,-0.039400,-1.498595,-4.824007,-7.143267,-8.946522,-1.881997,-2.357582,-1.436336,2.518345,9.329973,-5.834510,-0.425522,-9.251263,9.843755,6.931988,2.570453,-7.188730,-1.789455,-3.719527,-3.127059,3.965385,-5.866041,9.808996,-7.581548,3.281460,8.475993,5.264744,-3.575215,-4.412953,-7.403183,5.786635,2.993219,1.366992,9.406337,5.626700,-8.370318,-6.369659,-2.340917,-8.342839,2.568828,4.364735,4.545655,-1.149638,-0.576102,3.407769,-8.262777,-7.029108,-9.419366,-6.122628,6.183106,2.707803,-1.769356,-0.935306,2.603740,-8.421356,-8.213791,-6.910321,-2.970838,5.828699,6.809688,7.504823,-4.924021,0.945608,7.813743,-2.638770,6.752103,-5.033090,7.967842,6.881241,0.931029,2.304609,1.431899,5.278053,-2.227659,-0.724649,8.716006,-1.687841,7.122559,-7.141304,0.142644,-7.429726,4.820150,-0.096481,7.369716,8.281482,7.845232,1.719478,-1.353882,-6.052776,4.953451,-8.832424,-6.001764,-8.269457,0.404224,-7.749473,1.469298,7.020990,-6.242943,-6.813149,1.680253,-5.583039,-3.235551,3.093924,4.542174,-6.544513,-6.237332,4.746006,8.554150,7.248454,8.598216,7.225467,-3.398817,9.396977,-2.836473,-7.304990,7.800536,2.401247,-0.268616,3.598590,-2.340881,4.654366,-7.709844,-6.629896,-4.716607,-5.727583,5.761258,8.493221,9.407880,-3.041945,-7.071243,7.878280,-0.607242,2.089066,-4.486986,-3.164435,-4.788791,7.328102,-1.064403,-7.338512,4.953789,-7.012798,-9.846450,-0.850425,-7.637595,-9.453825,-0.896121,0.411721,-5.938155,8.526480,9.131892,8.082189,2.981036,-9.130431,-9.418441,9.949961,-1.933254,7.464200,1.171128,-8.939925,-2.501173,-6.587067,-7.312506,1.224909,-0.404490,8.932926,-4.738776,-9.253878,-4.658650,-9.932777,5.355520,-7.692617,0.566483,3.995770,-1.494857,3.064384,-8.195619,2.505910,4.488873,7.287482,6.952369,7.070157,5.849890,-2.680946,-7.472643,1.960789,-2.570479,8.079866,1.079703,-2.070598,-7.400333,-0.396335,6.518227,-0.103040,3.404603,-8.629516,-4.489416,-8.500006,2.351402,1.829897,3.184888,-9.876952,0.461621,-3.694611,-8.388309,-0.829425,-0.231358,7.389645,-1.280987,-8.995818,2.236902,-1.243435,-3.141958,2.259129,2.042263,6.223729,2.490756,-6.174361,-5.002090,0.506366,9.736062,3.106484,1.940451,3.503482,-7.187811,7.499310,1.436719,-9.110661,-7.643154,3.236983,-7.568418,7.876892,-5.008560,-5.104594,-9.018036,1.112391,1.626026,3.716448,6.710511,-2.249529,-0.053390,9.553847,-9.976182,2.549121,-1.094354,-7.890032,6.968866,-9.382973,-5.212237,-4.081623,8.516122,-1.226558,5.250829,0.036293,0.194914,-1.523505,2.088375,0.387180,3.412761,-2.055387,5.735297,9.382546,-2.437556,1.064735,-6.324899,7.258664,2.732573,7.939552,1.781330,-7.367446,-6.188653,-6.158650,-7.684764,2.740317,-4.499019,7.545684,2.120910,4.098840,5.194575,-4.988631,-0.148483,5.769907,8.698060,-0.875093,6.242570,1.484978,-4.010514,4.100725,9.947638,-5.078557,-5.428489,-2.544227,-7.406674,-1.297885,-0.573075,-8.419695,-8.333606,-4.224658,-8.248012,3.794821,7.507389,6.007010,-5.139607,2.619798,-3.934855,-9.221464,8.675438,-4.687805,-4.052749,0.246986,1.346946,9.114295,4.494633,1.675800,4.953463,9.061960,-2.382876,-6.165404,4.296955,-0.050591,1.988720,4.990034,4.450228,7.120062,-5.874395,-2.993888,-3.525000,4.960936,-5.858915,8.464247,9.281020,-5.131137,4.589128,1.565030,-5.661267,-7.169177,-7.953453,0.038604,8.928058,1.914066,6.028807,8.307229,9.035498,-7.874691,-0.166663,9.966904,-1.656763,0.247116,-6.723631,3.001248,-0.098569,6.263851,7.844999,1.166867,3.230535,-4.039217,-1.405896,-1.639778,-8.265514,6.434364,-0.935263,6.145589,6.573586,-3.779559,1.075893,-7.201168,-6.019258,-7.806362,-9.640742,-1.756104,-1.307409,7.210428,0.532506,-9.468987,-4.914467,-4.450611,4.612142,7.312728,-2.269837,-3.968708,3.487230,3.313122,-8.522988,7.764609,6.565429,-0.359451,-9.283877,9.882791,0.897107,-4.788367,6.718279,-3.110011,-3.602197,3.271674,-0.033206,-1.057379,9.549309,5.308442,7.180294,-3.727136,-5.459486,-2.848199,-0.105310,-2.968697,0.359534,9.799901,5.753945,8.534114,-6.205813,-5.999478,8.216074,-0.793542,7.685338,-9.149725,4.517715,4.816810,-6.221731,-7.284428,4.786726,-7.964140,5.896930,-5.012513,-9.986586,-5.387805,-2.760840,5.621893,9.914047,-3.636646,3.155223,8.729216,-3.818024,-3.649995,-0.233199,6.717873,-0.825618,8.313991,-2.998454,-1.036206,3.818859,9.934403,-9.685712,6.458609,-3.059901,-3.353419,8.735307,-8.477079,-8.619554,-9.016524,-4.865577,3.658151,4.687685,-6.741553,-9.002137,-9.310084,-5.475972,7.520309,-6.998614,-1.506724,6.841162,-6.827170,2.259772,-3.755159,-4.405932,-1.878433,-5.010857,8.722172,-4.277396,9.801982,-0.463303,7.939937,9.260030,0.292057,3.569264,5.106947,-5.205738,9.227253,-2.835683,-1.027905,-7.414948,5.806845,-3.395402,8.734441,3.044909,2.316121,-0.119447,-3.683819,0.574954,-1.750201,3.477198,4.789592,9.815397,9.647100,-4.223175,-0.962193,2.169442,-6.336948,-8.613756,-0.111268,-3.604481,-2.681501,-6.554234,3.808863,-8.753060,1.016695,1.152722,-5.895124,2.136828,-2.094701,0.041705,2.708353,4.777026,-7.208667,0.310358,7.564120,-2.716733,-4.101710,-4.485829,-4.409011,7.580804,-0.435496,8.230358,-1.522025,2.807245,-3.961840,9.698460,2.833542,3.655847,9.459824,-7.107527,9.044675,-4.840392,-6.965023,6.342145,7.890751,-2.204285,3.457609,-1.388569,-2.915735,-5.122312,-5.968485,-1.946010,-2.047895,5.324889,-0.376599,-2.639468,-8.775413,-6.068024,3.790951,-6.861604,-5.724650,8.462440,-5.693176,7.349985,0.290952,6.302262,-4.075426,3.361567,-2.292819,-7.064162,-1.398784,-7.108057,5.324969,4.330791,-4.804034,4.095145,-2.143577,-2.121783,7.609573,-8.889673,4.641561,-0.546734,7.918665,1.910992,9.953186], dtype = "float64")#candidate|4575|(2535,)|const|float64
call_4574 = relay.TupleGetItem(func_2050_call(relay.reshape(const_4575.astype('float64'), [15, 13, 13]), relay.reshape(const_4575.astype('float64'), [15, 13, 13]), relay.reshape(call_4563.astype('uint32'), [1872,]), ), 0)
call_4576 = relay.TupleGetItem(func_2055_call(relay.reshape(const_4575.astype('float64'), [15, 13, 13]), relay.reshape(const_4575.astype('float64'), [15, 13, 13]), relay.reshape(call_4563.astype('uint32'), [1872,]), ), 0)
var_4586 = relay.var("var_4586", dtype = "float64", shape = (10, 6, 7))#candidate|4586|(10, 6, 7)|var|float64
bop_4587 = relay.less(uop_4557.astype('bool'), relay.reshape(var_4586.astype('bool'), relay.shape_of(uop_4557))) # shape=(10, 6, 7)
func_3056_call = mod.get_global_var('func_3056')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_4593 = func_3056_call()
call_4594 = func_3056_call()
func_513_call = mod.get_global_var('func_513')
func_516_call = mutated_mod.get_global_var('func_516')
const_4597 = relay.const([9,-8,-3,-6,7,10,7,-5,-10,-6,5,-2,9,4,2,-10,7,1,-4,1,-3,7,2,2,8,5,-9,-6,-10,4,2,-4,1,10,-2,-7,10,6,-8,4,-4,1,5,4,8,1,3,10,3,-1,9,-10,6,2,4,-1,-6,4,10,9,5,7,-5,3,-4,-3,-6,3,8,-3,-1,1,-7,-9,2,-4,-7,-6,-5,-10,-7,4,-5,3,-2,6,-1,1,3,-6,1,1,-8,-2,-9,-5,-7,-8,-4,8,7,9,2,-7,-3,9,2,4,8,-6,10,3,-8,10,2,-10,-1,-1,1,9,3,-10,7,-7,-9,3,-2,-7,-7,-4,4,-2,-3,1,2,-9,-7,10,-4,2,-9,3,1,-4,6,1,-10,-8,-7,8,-8,-4,8,10,2,3,6,5,-5,-10,-6,2,6,-10,8,2,-5,-2,2,-2,3,10,-3,-7,-3,-9,9,-7,-3,6,5,7,4,-2,1,-5,-1,-4,-9,3,9,2,-5,-1,-6,-10,-4,-2,6,9,9,-2,6,-5,6,-6,9,-2,-7,-3,-9,7,-9,6,-4,-5,-6,3,4,8,5,-6,3,9,1,6,-4,-5,-1,-10,-3,-8,-5,-4,1,10,7,-2,-4,-2,-4,4,9,-1,-8,5,-6,-2,-6,-10,8,6,-6,8,1,2,8,3,3,10,-5,-3,-10,1,-1,6,1,-7,-2,6,6,-1,3,-4,8,-10,-2,3,9,-9,-7,2,-9,-6,3,-6,-9,3,-9,-10,2,-9,4,6,5,4,4,-1,-4,-6,6,-5,-7,9,-7,4,-1,-4,4,-8,9,3,7,-8,9,-7,-4,-4,-3,8,1,7,-6,9,-5,8,-1,7,5,1,7,-2,2,-3,-8,3,2,3,5,7,1,1,-8,-9,4,-8,-8,4,-6,-5,8,6,-9,8,-3,1,-2,-3,3,-3,2,9,-2,9,10,4,9,-7,-1,2,2,7,10,-2,3,-1,9,-2,5,-8,-5,-2,-2,-5,-6,6,-2,9,4,6,-9,10,-9,8,6,-8,10,-5,10,7,7,-1,-10,-5,-4,-2,10,-2,6,2,7,5,1,-2,-10,-7,4,-7,10,9,-3,-8,2,-1,-9,-2,-4,-4,7,-5,4,-3,10,5,4,-6,4,1,6,-4,-6,3,-5,2,-2,-8,-9,-7,3,-10,5,-5,4,2,-9,-4,7,4,6,-4,4,-5,3,3,3,2,-3,-6,4,-4,-8,-7,-10,7,-6,2,-2,-5,10,-10,3,-2,10,3,6,8,-8,9,7,-1,6,5,2,-5,-7,-7,9,-9,7,-5,-9,-9,10,-6,5,-2,-5,-10,-6,-1,-10,-5,10,-7,6,-2,-7,-6,10,-5,-1,5,-3,-5,2,4,-6,10,-5,-5,-1,7,-9,-6,-7,3,10,-6,-4,4,6,-7,-6,-8,-4,-1,-1,4,5,8,-2,10,8,-5,-6,8,8,6,-10,5,9,-8,8,8,-1,5,-7,5,2,10,10,2,3,2,-4,9,6,-4,1,-10,-10,8,-10,5,-3,-10,4,3,-1,3,3,-1,-1,-7,-8,-7,-10,8,-5,9,-7,-5,2,8,-2,-1,5,7,-6,8,-9,-2,9,-8,2,-6,-8,-2,8,6,-3,8,10,3,10,-1,8,8,5,6,3,10,3,-4,4,-3,-10,4,-6,7,8,-3,-1,-6,8,6,1,5,-8,7,2,8,10,-1,6,-10,-5,-3,-5,5,-8,-7,6,5,2,7,-1,-7,4,-7,7,7,10,8,-8,1,3,6,-9,-5,-4,-6,-7,6,-2,-4,-10,-10,-2,6,-3,-3,-4,-8,-10,5,-7,-1,-5,-8,9,5,-4,10,3,-3,4,3,-6,2,-5,-2,-1,9,-9,4,-8,1,-3,-7,8,5,9,-3,-10,-3,-3,9,9,9,-4,9,-1,-3,1,3,1,3,-5,-5,1,-1,-6,-8,8,-4,-10,4,3,-6,-9,-4,-8,-2,-5,-9,6,1,-8,-6,6,-9,-3,8,2,10,6,4,3,8,-3,-4,-4,-3,-6,3,9,10,6,-7,3,-10,1,2,1,2,4,-5,5,-5,8,-4,-9,-10,2,3,-7,4,-8,2,6,-3,3,1,7,8,-5,2,-7,-8,10,-4,-6,-4,5,-4,-1,-1,7,4,-1,7,7,7,2,2,-7,-10,5,7,-10,-10,10,-9,5,-8,6,-2,7,-6,7,2,6,-8,3,-10,-6,8,-4,-2,-10,7,8,-8,1,5,-4,3,-8,-1,-6,-6,5,-10,-2,-10,-5,-8,-8,-9,2,8,-10,6,-2,8,1,-10,-1,5,-3,4,4,10,-10,-3,-4,8,2,3,-2,9,7,10,-10,-1,-8,10,9,-5,10,9,9,-9,3,6,-2,-9,-6,9,3,-8,5,2,7,-2,5,2,-9,6,2,-9,7,-5,6,7,-6,-10,-3,4,2,-7,-7,1,-10,10,-9,6,7,-6,-5,-2,-10,-1,-7,-10,-3,7,8,8,5,9,6,-9,-7,6,10,5,2,-2,3,9,-1,-5,-4,-6,-2,-4,-10,-1,-10,9,9,-1,-9,2,-6,-9,-5,7,-9,10,-10,10,-9,-7,2,-2,-9,1,-7,2,-4,-2,5,-10,-4,8,5,6,-10,5,-10,-2,10,-8,8,10,-1,3,-2,2,5,4,7,4,-2,1,5,-10,1,-2,8,-3,4,6,-10,6,10,5,-9,-7,7,-2,3,7,-3,-3,3,-1,3,-5,-8,8,10,-7,2,9,-2,-4,-6,-9,2,-10,-9,1,10,6,-8,8,-8,8,-9,-3,-9,-7,10,2,7,6,-4,-9,5,-4,10,5,-9,1,-8,-2,-1,-2,5,2,7,-10,-7,7,4,8,-5,3,-4,5,-9,10,4,-3,-7,2,5,7,3,-3,-7,-3,4,8,10,-1,-10,9,5,4,-8,-6,-10,-2,-8,2,-8,10,8,-7,3,7,10,-7,9,5,-8,8,-7,-1,-7,-2,5,-4,-2,-3,-10,-8,8,3,5,-3,-2,-10,-3,-4,3,5,10,3,4,-6,-8,-5,8,-4,-8,7,-1,-9,-6,-7,8,7,3,9,9,2,-2,6,4,4,-8,-2,-5,-3,3,-10,-2,-1,10,-2,7,-8,8,-8,3,-4,2,10,-6,-10,3,-2,-10,9,4,1,-3,10,-1,6,2,-5,-8,6,7,5,-8,4,1,-8,-3,6,-7,1,-9,-2,-1,-7,-1,4,-9,-10,7,6,5,3,-4,8,-7,9,-8,-7,9,7,-9,2,2,-6,3,-7,8,10,10,3,-9,-3,5,-7,6,-6,6,4,7,-5,1,-1,-3,-1,9,10,6,6,-7,-4,6,9,-8,-10,-2,5,8,-4,-7,1,7,-5,-9,4,5,-9,8,4,9,-10,8,8,-3,4,5,9,1,7,-6,-3,9,-1,10,-4,7,1,3,-1,2,-10,3,1,5,3,8,-2,8,5,-9,8,-5,1,-8,4,-8,-7,4,-6,-5,-10,-4,10,-6,-1,-4,-10,8,6,-6,8,-7,-6,4,-9,10,3,-4,8,-10,4,8,2,7,-3,-8,-8,7,-5,-9,-1,-6,3,-9,-1,-9,-10,10,2,10,2,-8,1,8,6,10,6,-4,-5,9,-2,10,-5,6,8,3,-1,2,-6,-6,8,2,2,-3,10,5,-10,6,5,-5,5,5,-8,-8,7,-9,-1,-9,8,2,-3,2,1,-1,7,9,3,-7,-1,7,10,3,8,6,3,6,4,9,5,4,-7,3,7,3,9,-7,10,2,-1,6,6,-8,-1,8,9,7,4,-8,-1,10,2,9,-7,-2,9,2,1,6,9,7,3,-5,-3,10,5,4,-9,-1,-5,-7,-10,-10,9,2,-7,9,10,-8,9,9,-10,-5,-7,7,9,8,1,2,-1,9,3,1,3,6,-9,-8,-7,10,-9,-10,9,10,4,-1,6,7,9,3,-7,-6,6,-7,-6,9,-4,-6,6,4,-9,7,6,-5,1,-8,8,7,9,7,1,-3,-6,7,-6,-4,-5,-10,-4,-7,-2,-3,1,4,-4,-5,8,9,6,8,6,-9,-2,1,6,10,4,-8,-5,-3,5,3,8,7,-9,-8,-6,5,7,-1,5,1,-9,4,-3,-5,7,-2,-2,-8,4,4,-4,8,-9,2,-2,-5,2,-5,6,-3,-7,-7,4,10,3,7,-4,-9,-4,9,4,9,3,10,5,4,8,3,-9,9,-8,1,1,-7,1,-5,9,-10,9,2,5,9,9,3,-6,2,-9,8,-5,9,2,-10,7,1,-3,-3,9,10,-4,6,7,6,4,-8,-10,4,8,-10,7,-4,-4,-7,-8,1,-1,-4,6,4,3,-9,-8,4,1,2,5,6,-4,-4,-3,-6,3,-5,-9,1,1,-6,4,-5,-4,-1,-5,-8,-2,-1,7,-1,7,-9,5,10,-9,4,-6,8,-10,-9,-10,3,-1,-8,4,-1,3,7,10,-3,6,6,-10,4,-5,-4,3,-8,-4,5,6,-8,5,-7,5,-8,9,2,8,9,2,10,-1,-10,-5,-2,2,-9,7,4,8,-10,-5,8,2,-7,-9,8,5,4,4,10,7,-4,5,-6,-3,-2,1,-2], dtype = "int8")#candidate|4597|(1755,)|const|int8
call_4596 = relay.TupleGetItem(func_513_call(relay.reshape(const_4597.astype('int8'), [13, 15, 9])), 0)
call_4598 = relay.TupleGetItem(func_516_call(relay.reshape(const_4597.astype('int8'), [13, 15, 9])), 0)
output = relay.Tuple([call_4563,call_4574,const_4575,bop_4587,call_4593,call_4596,const_4597,])
output2 = relay.Tuple([call_4564,call_4576,const_4575,bop_4587,call_4594,call_4598,const_4597,])
func_4620 = relay.Function([var_4556,var_4586,], output)
mod['func_4620'] = func_4620
mod = relay.transform.InferType()(mod)
var_4621 = relay.var("var_4621", dtype = "float64", shape = (10, 6, 7))#candidate|4621|(10, 6, 7)|var|float64
var_4622 = relay.var("var_4622", dtype = "float64", shape = (10, 6, 7))#candidate|4622|(10, 6, 7)|var|float64
output = func_4620(var_4621,var_4622,)
func_4623 = relay.Function([var_4621,var_4622,], output)
mutated_mod['func_4623'] = func_4623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2682_call = mod.get_global_var('func_2682')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_4634 = func_2682_call()
call_4635 = func_2682_call()
uop_4636 = relay.log10(call_4634.astype('float64')) # shape=(6, 3, 12)
uop_4638 = relay.log10(call_4635.astype('float64')) # shape=(6, 3, 12)
uop_4640 = relay.log2(call_4634.astype('float64')) # shape=(6, 3, 12)
uop_4642 = relay.log2(call_4635.astype('float64')) # shape=(6, 3, 12)
output = relay.Tuple([uop_4636,uop_4640,])
output2 = relay.Tuple([uop_4638,uop_4642,])
func_4645 = relay.Function([], output)
mod['func_4645'] = func_4645
mod = relay.transform.InferType()(mod)
output = func_4645()
func_4646 = relay.Function([], output)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4647 = func_3411_call()
call_4648 = func_3411_call()
output = relay.Tuple([call_4647,])
output2 = relay.Tuple([call_4648,])
func_4649 = relay.Function([], output)
mod['func_4649'] = func_4649
mod = relay.transform.InferType()(mod)
output = func_4649()
func_4650 = relay.Function([], output)
mutated_mod['func_4650'] = func_4650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4651 = relay.var("var_4651", dtype = "uint32", shape = (12, 10, 6))#candidate|4651|(12, 10, 6)|var|uint32
const_4652 = relay.const([[[7,-9,3,8,-2,2],[9,-8,9,-7,-10,6],[5,1,-10,3,10,-2],[-3,-1,-9,9,-4,3],[6,-8,7,6,-3,1],[4,1,-3,5,3,-5],[10,-8,-8,8,3,2],[-2,-9,-7,-8,-4,3],[4,-7,5,-7,3,-9],[-8,-7,-7,-10,7,-5]],[[2,3,6,5,-3,7],[4,3,3,8,-3,4],[-4,-10,-6,7,-2,-5],[-6,8,-5,-9,3,6],[-6,-7,1,-10,8,10],[-8,-3,5,9,-10,-3],[4,-4,4,2,6,2],[3,-4,3,-4,-9,1],[4,-7,7,-9,-2,1],[-3,-9,-4,-4,-10,-7]],[[-2,-5,-9,7,6,-10],[-4,7,10,-3,1,-1],[2,4,-4,6,-4,-9],[5,6,9,-6,5,-10],[-9,9,6,7,-5,-9],[-1,-7,6,-8,9,4],[-10,-3,-4,-1,8,5],[7,-2,-4,-1,6,2],[3,4,-3,-2,-9,-9],[9,-7,9,-3,-3,-1]],[[7,-4,10,-6,-5,5],[-1,3,1,2,-4,-9],[1,1,8,-3,-2,10],[2,-4,-8,-4,-5,10],[1,-8,-3,7,-10,9],[8,4,8,3,4,6],[-6,3,-9,9,-5,4],[5,-1,10,4,-10,10],[-6,10,10,-2,-10,8],[-7,1,4,-9,9,-4]],[[8,8,10,-9,-1,-6],[7,-7,-2,8,10,1],[-7,2,10,4,8,9],[-10,-4,-9,1,-10,-5],[-1,-4,-2,-6,-7,4],[6,9,-10,2,7,2],[-8,-2,-1,-1,-1,7],[1,-2,-2,8,-4,2],[5,7,-1,10,2,-6],[-10,-5,-3,4,-6,2]],[[3,-7,-7,5,4,6],[9,-3,-9,-3,-7,9],[1,-1,2,-6,-3,3],[2,4,10,-9,9,9],[2,-8,-10,-6,2,9],[-3,10,8,8,3,-7],[-5,1,10,-1,-2,9],[7,5,5,5,1,-5],[-9,8,-6,-5,1,6],[-8,4,-7,-3,10,-6]],[[-2,-4,6,-1,-4,-7],[5,-3,9,-10,8,6],[6,-10,5,-3,4,-1],[9,-5,2,5,-5,-4],[10,9,7,-1,-5,1],[-6,-9,4,-3,2,9],[-10,-1,-5,-1,-6,-10],[6,-8,-4,-2,-3,-3],[1,-3,-1,-8,7,10],[-2,-6,1,-3,-9,7]],[[10,-4,-10,-4,-2,-5],[1,6,3,-9,-6,5],[-1,4,1,-3,-3,-6],[5,-6,-6,2,6,-5],[-3,-4,-9,6,-1,-10],[-2,-3,-4,-7,-8,-6],[6,4,-5,1,-3,-8],[-7,-4,7,-1,9,-3],[5,-1,-5,-1,-6,-2],[-6,-2,-9,-3,7,5]],[[3,2,-1,4,6,-3],[6,-3,1,-5,10,5],[-10,-6,-8,-10,6,-1],[-8,5,4,-7,1,3],[7,6,7,-7,-2,3],[-1,-8,-6,5,8,8],[-7,-10,-8,2,-3,3],[2,7,10,-3,-3,-1],[4,3,-6,-1,7,-3],[6,-10,-6,9,2,1]],[[3,4,-8,7,1,-1],[-10,-9,-4,5,10,9],[8,-3,3,2,-9,-4],[-1,9,10,6,2,10],[-2,6,-10,-7,2,-7],[-3,2,5,-10,-8,8],[-7,-1,-2,5,-6,5],[5,-4,-1,3,-2,-7],[-5,-5,6,-3,10,1],[5,-7,6,-6,-5,9]],[[5,-1,1,6,-6,8],[-6,4,5,9,3,10],[7,2,10,9,7,2],[9,3,1,-7,4,-5],[9,6,10,-3,4,1],[7,9,10,-2,-9,6],[8,-1,9,9,1,-1],[-3,-10,-10,-3,10,2],[3,-3,-9,-4,-6,-9],[-2,4,6,-6,2,8]],[[-6,-8,4,10,-4,-10],[4,1,-1,-5,-9,-6],[-6,3,-8,-9,-3,5],[-7,-5,-10,3,2,-3],[4,-6,1,-5,-6,-5],[1,-1,9,2,-2,8],[-3,-5,-4,-8,8,-9],[-7,6,-5,10,-2,-10],[8,8,10,-2,-6,-8],[5,9,9,2,4,-1]]], dtype = "uint32")#candidate|4652|(12, 10, 6)|const|uint32
bop_4653 = relay.bitwise_and(var_4651.astype('uint32'), relay.reshape(const_4652.astype('uint32'), relay.shape_of(var_4651))) # shape=(12, 10, 6)
output = relay.Tuple([bop_4653,])
output2 = relay.Tuple([bop_4653,])
func_4657 = relay.Function([var_4651,], output)
mod['func_4657'] = func_4657
mod = relay.transform.InferType()(mod)
mutated_mod['func_4657'] = func_4657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4658 = relay.var("var_4658", dtype = "uint32", shape = (12, 10, 6))#candidate|4658|(12, 10, 6)|var|uint32
func_4657_call = mutated_mod.get_global_var('func_4657')
call_4659 = func_4657_call(var_4658)
output = call_4659
func_4660 = relay.Function([var_4658], output)
mutated_mod['func_4660'] = func_4660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2572_call = mod.get_global_var('func_2572')
func_2574_call = mutated_mod.get_global_var('func_2574')
call_4665 = func_2572_call()
call_4666 = func_2572_call()
func_4062_call = mod.get_global_var('func_4062')
func_4064_call = mutated_mod.get_global_var('func_4064')
call_4689 = func_4062_call()
call_4690 = func_4062_call()
var_4692 = relay.var("var_4692", dtype = "float64", shape = (2535,))#candidate|4692|(2535,)|var|float64
bop_4693 = relay.divide(call_4689.astype('float64'), relay.reshape(var_4692.astype('float64'), relay.shape_of(call_4689))) # shape=(2535,)
bop_4696 = relay.divide(call_4690.astype('float64'), relay.reshape(var_4692.astype('float64'), relay.shape_of(call_4690))) # shape=(2535,)
func_4418_call = mod.get_global_var('func_4418')
func_4422_call = mutated_mod.get_global_var('func_4422')
var_4698 = relay.var("var_4698", dtype = "float64", shape = (840,))#candidate|4698|(840,)|var|float64
call_4697 = relay.TupleGetItem(func_4418_call(relay.reshape(var_4698.astype('float64'), [14, 6, 10]), relay.reshape(var_4698.astype('float64'), [14, 6, 10]), relay.reshape(var_4698.astype('float64'), [14, 6, 10]), ), 5)
call_4699 = relay.TupleGetItem(func_4422_call(relay.reshape(var_4698.astype('float64'), [14, 6, 10]), relay.reshape(var_4698.astype('float64'), [14, 6, 10]), relay.reshape(var_4698.astype('float64'), [14, 6, 10]), ), 5)
output = relay.Tuple([call_4665,bop_4693,call_4697,var_4698,])
output2 = relay.Tuple([call_4666,bop_4696,call_4699,var_4698,])
func_4705 = relay.Function([var_4692,var_4698,], output)
mod['func_4705'] = func_4705
mod = relay.transform.InferType()(mod)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4705_call = mutated_mod.get_global_var('func_4705')
var_4707 = relay.var("var_4707", dtype = "float64", shape = (2535,))#candidate|4707|(2535,)|var|float64
var_4708 = relay.var("var_4708", dtype = "float64", shape = (840,))#candidate|4708|(840,)|var|float64
call_4706 = func_4705_call(var_4707,var_4708,)
output = call_4706
func_4709 = relay.Function([var_4707,var_4708,], output)
mutated_mod['func_4709'] = func_4709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4645_call = mod.get_global_var('func_4645')
func_4646_call = mutated_mod.get_global_var('func_4646')
call_4724 = relay.TupleGetItem(func_4645_call(), 0)
call_4725 = relay.TupleGetItem(func_4646_call(), 0)
uop_4737 = relay.tan(call_4724.astype('float64')) # shape=(6, 3, 12)
uop_4739 = relay.tan(call_4725.astype('float64')) # shape=(6, 3, 12)
output = uop_4737
output2 = uop_4739
func_4745 = relay.Function([], output)
mod['func_4745'] = func_4745
mod = relay.transform.InferType()(mod)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4745_call = mutated_mod.get_global_var('func_4745')
call_4746 = func_4745_call()
output = call_4746
func_4747 = relay.Function([], output)
mutated_mod['func_4747'] = func_4747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4765 = func_4018_call()
call_4766 = func_4018_call()
output = call_4765
output2 = call_4766
func_4767 = relay.Function([], output)
mod['func_4767'] = func_4767
mod = relay.transform.InferType()(mod)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4767_call = mutated_mod.get_global_var('func_4767')
call_4768 = func_4767_call()
output = call_4768
func_4769 = relay.Function([], output)
mutated_mod['func_4769'] = func_4769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4773 = relay.var("var_4773", dtype = "float32", shape = (13, 11, 2))#candidate|4773|(13, 11, 2)|var|float32
uop_4774 = relay.sqrt(var_4773.astype('float32')) # shape=(13, 11, 2)
output = uop_4774
output2 = uop_4774
func_4794 = relay.Function([var_4773,], output)
mod['func_4794'] = func_4794
mod = relay.transform.InferType()(mod)
mutated_mod['func_4794'] = func_4794
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4795 = relay.var("var_4795", dtype = "float32", shape = (13, 11, 2))#candidate|4795|(13, 11, 2)|var|float32
func_4794_call = mutated_mod.get_global_var('func_4794')
call_4796 = func_4794_call(var_4795)
output = call_4796
func_4797 = relay.Function([var_4795], output)
mutated_mod['func_4797'] = func_4797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4799 = relay.var("var_4799", dtype = "float64", shape = (11, 10, 11))#candidate|4799|(11, 10, 11)|var|float64
uop_4800 = relay.erf(var_4799.astype('float64')) # shape=(11, 10, 11)
func_1982_call = mod.get_global_var('func_1982')
func_1985_call = mutated_mod.get_global_var('func_1985')
var_4806 = relay.var("var_4806", dtype = "uint8", shape = (2730,))#candidate|4806|(2730,)|var|uint8
call_4805 = func_1982_call(relay.reshape(var_4806.astype('uint8'), [14, 15, 13]))
call_4807 = func_1982_call(relay.reshape(var_4806.astype('uint8'), [14, 15, 13]))
func_4062_call = mod.get_global_var('func_4062')
func_4064_call = mutated_mod.get_global_var('func_4064')
call_4810 = func_4062_call()
call_4811 = func_4062_call()
func_975_call = mod.get_global_var('func_975')
func_978_call = mutated_mod.get_global_var('func_978')
var_4817 = relay.var("var_4817", dtype = "float64", shape = (240,))#candidate|4817|(240,)|var|float64
var_4818 = relay.var("var_4818", dtype = "float64", shape = (648,))#candidate|4818|(648,)|var|float64
call_4816 = relay.TupleGetItem(func_975_call(relay.reshape(var_4817.astype('float64'), [5, 6, 8]), relay.reshape(var_4818.astype('float64'), [324, 2]), ), 5)
call_4819 = relay.TupleGetItem(func_978_call(relay.reshape(var_4817.astype('float64'), [5, 6, 8]), relay.reshape(var_4818.astype('float64'), [324, 2]), ), 5)
output = relay.Tuple([uop_4800,call_4805,var_4806,call_4810,call_4816,var_4817,var_4818,])
output2 = relay.Tuple([uop_4800,call_4807,var_4806,call_4811,call_4819,var_4817,var_4818,])
func_4821 = relay.Function([var_4799,var_4806,var_4817,var_4818,], output)
mod['func_4821'] = func_4821
mod = relay.transform.InferType()(mod)
mutated_mod['func_4821'] = func_4821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4821_call = mutated_mod.get_global_var('func_4821')
var_4823 = relay.var("var_4823", dtype = "float64", shape = (11, 10, 11))#candidate|4823|(11, 10, 11)|var|float64
var_4824 = relay.var("var_4824", dtype = "uint8", shape = (2730,))#candidate|4824|(2730,)|var|uint8
var_4825 = relay.var("var_4825", dtype = "float64", shape = (240,))#candidate|4825|(240,)|var|float64
var_4826 = relay.var("var_4826", dtype = "float64", shape = (648,))#candidate|4826|(648,)|var|float64
call_4822 = func_4821_call(var_4823,var_4824,var_4825,var_4826,)
output = call_4822
func_4827 = relay.Function([var_4823,var_4824,var_4825,var_4826,], output)
mutated_mod['func_4827'] = func_4827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_4877 = relay.TupleGetItem(func_2819_call(), 0)
call_4878 = relay.TupleGetItem(func_2820_call(), 0)
func_2318_call = mod.get_global_var('func_2318')
func_2322_call = mutated_mod.get_global_var('func_2322')
const_4882 = relay.const(4, dtype = "int16")#candidate|4882|()|const|int16
const_4883 = relay.const([2,9,-5,-2,5,-6,-2,4,-5,-5,3,-2,-5,6,-10,4,-10,-5,-10,-5,-3,-3,-5,10,5,-10,5,3,-2,9,-5,-3,6,1,4,-10,-8,-1,10,-6,1,3,7,-3,-8,-10,-5,-7,10,6,5,-3,1,-9,-9,7,-10,-5,-8,-7,-1,9,-1,-9,-6,7,3,8,5,-6,-4,-4,3,3,-8,-10,-7,-6,-5,1,2,-7,-9,-10,2,-9,-8,1,10,5,-6,6,-1,-4,-7,-2,-3,5,-3,6,-8,-4,-6,8,-10,-4,7,10,4,6,8,-2,6,5,-10,-7,-4,7,-7,-5,-7,3,-9,-1,8,-6,-7,1,4,7,5,-4,-6,-8,-3,9,-4,-5,-7,7,6,-6,-10,10,-1,9,2,6,2,8,8,7,-10,-6,1,-6,7,-1,9,2,-10,-7,-2,-8,-6,10,-4,6,1,4,-7,6,2,-10,1,-2,-1,-1,1,-7,-6,1,-4,-7,-10,7,-1,9,2,-6,-1,6,-9,-5,8,5,9,-5,2,-9,3,10,-9,-9,8,6,6,-1,10,-3,-10,-2,6,-3,9,3,-8,-6,-1,9,-10,9,8,-3,10,5,-6,-8,-4,3,4,3,-8,-10,4,8,-8,-2,-1,-5,2,-10,8,-3,10,4,-3,-8,8,9,1,5,-6,-6,-3,7,-2,6,-6,2,4,-2,5,-7,7,-4,-3,8,10,-6,4,10,10,-5,2,2,5,4,-3,-4,5,1,-1,-7,2,3,7,-1,9,3,7,-9,1,-4,-4,-7,8,-9,6,9,-9,3,8,-5,3,-10,5,-3,-5,-1,7,8,-7,-4,4,10,-8,1,8,-4,-2,-1,6,-5,3,7,-5,7,3,4,7,-1,6,10,8,5,10,8,2,-4,1,-4,8,8,-5,1,8,-6,5,-8,-1,2,-1,-5,4,-7,-3,-1,4,-4,-4,10,8,6,-3,-4,-9,6,-9,-2,-2,-9,-10,8,2,1,-7,-9,7,8,-2,-4,1,1,-3,-4,-10,2,5,-3,1,6,5,5,-3,-1,7,7,7,9,-1,-9,-8,-2,-2,-2,1,3,5,9,2,2,7,-7,-7,8,-9,-2,9,-10,1,4,-1,-7,6,4,-5,-9,-8,-9,-5,5,-4,-1,-3,4,6,-5,4,3,7,9,-6,6,-7,8,-2,5,2,-10,10,10,-9,-1,8,-4,3,-8,-6,-2,-9,-4,-5,-8,-7,-3,-10,3,9,-4,-9,-3,6,1,6,-4,4,-6,6,-6,-10,-2,-4,-10,8,-2,-4,9,-6,1,-4,7,-2,-4,4,-5,-9,-7,-1,-5,-2,-6,-4,6], dtype = "int16")#candidate|4883|(504,)|const|int16
const_4884 = relay.const([-4,-4,-6,-3,-9,10,-5,1,1,-6,-3,-5,-5,-5,-9,-2,-1,3,7,8,6,1,9,1,6,-8,8,-7,2,-7,4,3,8,-5,-5,2,-4,-3,7,-3,-3,-1,4,-5,-9,7,-2,1,10,6,2,5,2,-9,1,-1,4,-7,-9,-7,5,-6,-6,-10,4,2,-5,-3,6,-6,-3,3,-1,6,-3,10,6,-6,2,1,-1,3,-1,-2,8,3,-7,9,-5,7,7,-5,-3,9,6,-3,-2,-4,5,-7,-6,-4,-7,10,-7,1,6,9,8,7,8,2,8,-3,3,-6,2,-1,-3,4,-10,6,-2,7,4,3,-6,4,-10,7,-8,-2,2,-3,6,5,-2,-4,-9,-2,7,-7,-10,-6,-9,-4,5,7,-9,2,-8,3,-9,4,-8,-3,4,7,-2,-4,6,-5,-4,-8,-5,-10,9,-2,-8,8,-5,-2,-2,10,-4,2,4,2,-4,-3,-5,1,-4,-2,-1,2,-3,4,-7,-9,1,-2,-1,-5,9,3,2,-5,10,3,-10,-9,1,-10,8,-9,1,3,6,-6,-9,6,-6,8,-10,9,-5,-7,-10,3,6,-6,-3,-8,9,3,-6,9,-4,8,-9,-6,-5,-1,9,2,5,-2,-7,9,-6,-3,-3,-4,1,-1,-1,5,3,1,-9,7,3,4,2,7,8,-2,-4,8,-2,-6,-7,9,4,-1,-4,-10,-2,8,-10,1,7,-8,4,8,4,-9,2,2,9,-2,-6,2,9,-9,5,6,7,-6,-10,7,8,-7,-3,8,-4,4,5,7,6,-2,10,-4,1,-10,-2,-5,2,-1,-2,-8,3,8,8,1,-5,-6,2,4,9,6,-10,4,-4,-8,5,-5,-9,-6,2,2,2,-2,7,-8,9,-8,5,-10,6,-9,7,-1,9,-5,7,-8,-7,-5,-8,3,-7,6,-2,4,8,2,7,2,-3,9,-8,10,1,2,-8,-5,-5,-10,-9,6,8,-1,-1,1,3,5,10,9,-1,-9,5,8,6,8,2,3,1,-5,8,-8,7,-4,-9,6,-3,10,10,-9,-6,2,-2,6,-8,8,8,-10,-7,1,7,-5,4,-2,3,-1,-8,-5,-9,-4,3,-6,7,-5,10,10,3,2,3,4,-3,3,9,2,2,-6,7,5,7,8,-5,-7,-6,-8,2,4,-6,-9,-6,4,8,-2,-9,10,-6,5,1,-4,10,-5,-5,-10,-8,7,-1,-2,8,-5,-1,-4,7,10,1,4,-7,6,8,2,-4,-9,-7,-5,7,5,8,6,-9,1,2,1,-4,9,2,9,-10,2,-1,6,8,-7,1,10,-10,9,-8,-1,-9,6,4,9,6,-3,8,-7,1,3,-7,-1,5,1,10,4,4,1,7,-4,-1,2,-8,-6,-4,2,-1,10,-3,-7,-3,-4,-3,9,-5,5,-1,7,-7,-2,-9,4,-7,6,-3,3,-4,-5,4,-8,-6,-6,1,10,-4,1,-5,5,-7,-2,-4,8,-3,-6,8,5,9,5,-5,-8,-5,4,1,-4,2,1,-2,-5,-6,4,-7,2,-2,-5,-9,-6,1,-6,1,3,7,-9,-4,8,7,6,10,-9,-4,-9,-7,-9,5,1,7,-7,-9,-5,-3,5,-2,-4,-10,7,7,-8,9,3,3,9,-9,4,7,2,-10,-9,-9,-7,4,-4,-9,5,8,-3,-1,2,-1,7,6,7,6,10,-7,-6,-10,1,-3,-9,-4,5,-5,7,-3,-3,6,9,-3,9,6,10,8,-7,-10,5,1,3,-6,3,7,-2,-5,6,8,10,3,-3,-3,-3,9,9,9,-5,2,-6,-3,3,9,-7,-5,2,9,8,-6,-7,2,-2,-7,5,4,-10,10,-4,-3,6,8,-5,-5,-10,-5,-5,-2,7,5,-1,-3,-5,-6,-2,8,6,-7,-4,5,5,-9,-8,-9,-2,-5,3,-6,1,-5,-1,-2,-2,10,-3,-8,-5,-9,1,6,-2,6,10,-4,-6,-5,-6,5,-8,-2,10,-9,10,-7,-6,2,-5,3,-2,8,8,6,8,1,-6,9,4,2,6,5,-2,9,-9,7,-1,-1,6,-2,9,-2,-8,-3,-7,-8,-4,-6,-2,-8,-9,-4,7,9,3,8,7,-8,-1,7,8,2,10,8,2,7,-8,2,-6,-9,-2,-4,-6,-4,-5,-4,10,-3,-3,6,-9,-9,-2,2,-3,1,-7,4,7,-2,-1,-5,2,3,3,5,10,8,-6,-4,-1,-4,-7,-4,8,-7,2,-2,-2,-4,-2,-4,2,6,2,4,-4,4,7,-6,-5,6,4,6,4,-10,8,1,-8,5,-9,-5,-7,2,8,1,-2,-3,-6,4,-8,8,-2,5,8,-10,-8,9,4,9,3,7,6,2,8,4,2,-3,3,-6,7,1,1,-9,3,-8,8,2,5,10,1,3,-7,10,4,4,-2,-5,5,9,-3,-4,2,9,-9,-3,4,-4,2,-3,-9,-8,-2,-3,8,-4,-9,-2,-4,10,-9,-4,9,-3,3,7,-3,-3,7,-1,-8,-6,3,9,8,-3,-4,-9,6,-6,-10,-10,-10,-9,9,-2,4,3,7,-7,1,3,8,8,5,-2,9,-7,7,5,-5,10,-6,-7,6,7,5,-3,-1,-6,7,1,-1,4,-4,3,-8,9,7,5,1,1,2,-6,8,-7,-1,2,7,-2,-7,-10,-8,-6,-6,-8,-5,-2,6,-7,-1,1,5,4,9,2,-10,8,-3,3,-7,6,-4,8,6,4,2,-9,-9,8,10,-4,6,6,-8,9,-4,9,1,7,3,-7,7,1,-9,-5,-2,-9,3,-8,-6,8,9,-9,-7,10,-10,-6,-10,-4,-9,-10,-8,-9,-4,-1,3,-4,1,5,-2,9,-9,-2,3,10,6,2,10,-6,2,9,-9,10,-8,7,7,5,-10,-6,4,-4,9,6,-1,6,-10,-9,-9,8,-3,7,-8,7,-1,10,3,6,1,-1,-4,6,-3,-4,5,10,-4,7,1,-1,-8,-8,6,3,5,4,3,7,6,-8,3,6,-7,1,-8,10,5,7,9,-3,-3,8,-6,4,6,2,2,-9,4,4,-4,5,2,5,1,-8,4,2,2,-3,-10,10,-4,8,10,-7,8,-6,-8,-2,10,5,7,-3,5,-9,-10,6,7,3,10,2,5,-8,10,10,-1,3,4,9,3,-6,-9,8,-10,5,-2,-8,8,8,6,-7,4,-7,5,2,7,10,4,-6,-10,2,10,7,-8,6,-4,2,-3,8,8,8,8,3,-8,6,-10,10,-10,5,-3,-3,4,-4,-6,-4,2,10,-2,4,2,9,-10,-9,7,10,7,-6,-9,-7,-5,-9,-3,-1,-2,6,-6,-3,4,-1,-7,1,-4,-4,-9,6,-2,-1,4,3,-8,1,1,-2,-7,8,-2,2,5,-9,-7,-8,-1,-7,10,2,-8,-2,8,-6,5,-3,-2,-4,-10,-3,7,-9,8,-3,7,-6,10,-4,10,-7,3,-3,-4,-5,-8,-5,-8,5,-10,6,-6,2,10,8,5,6,-7,6,6,8,-8,10,7,3,6,5,-2,9,3,6,3,8,1,-1,-5,-2,2,-10,1,-6,-3,-6,10,-8,5,2,6,-7,-6,-5,-9,-6,2,10,7,8,-1,-4,-2,-3,-8,4,-7,-2,-9,-5,-5,9,-5,9,-7,4,3,-8,-2,-3,-7,4,-8,-8,3,-7,-2,-6,-7,1,-5,-3,-4,-5,-3,-7,-5,-6,-1,-2,-8,5,-7,-9,7,8,6,2,4,6,-6,-10,8,-6,10,3,6,10,-8,-8,10,9,-9,3,8,1,-4,5,-6,-9,10,6,8,9,-4,3,5,7,-10,-7,2,4,-8,-8,-1,-3,-8,7,5,-4,-5,1,6,3,-2,8,-8,-2,1,-3,8,1,6,-4,6,-8,-2,10,-10,-7,3,6,6,-8,-9,-9,-6,3,-10,1,-4,6,1,-5,9,3,7,-3,-9,-10,-1,-5,9,7,6,5,10,-5,9,3,-2,-2,-6,-2,4,-3,-10,2,-8,-9,10,6,5,-2,-3,-4,1,-4,9,-2,-7,-9,-5,6,-1,-10,9,10,7,-10,-9,5,-8,-9,-4,-1,-7,-8,1,-6,9,3,1,-1,9,1,4,2,-5,-1,1,10,2,10,3,10,-1,-7,-8,3,10,7,-9,9,9,3,-2,10,2,-1,-8,-5,4,3,2,1,-9,-9,-9,-2,-8,2,7,-6,-4,6,-8,2,4,-5,-1,-2,7,1,-10,6,-8,-8,2,6,2,9,2,3,-7,4,-5,10,-8,9,4,3,-6,6,4,-4,-3,-6,4,-1,-6,-9,-3,-4,-8,6,10,3,-10,-4,1,9,-2,-1,4,7,8,4,3,-2,-1,-4,-6,9,-7,10,-2,4,-6,2,6,2,3,7,4,-8,6,7,10,9,10,5,-8,8,3,-6,9,-5,5,-10,-9,-5,-4,-8,10,-2,-5,-2,8,-7,-10,-2,-10,-1,8,4,-2,4,-3,10,8,-6,1,-7,10,1,-8,8,7,5,-3,-3,-9,-10,-9,-10,4,-1,-3,-3,-4,-2,-5,-10,-2,-10,-3,-9,-1,-7,-1,9,-2,-10,9,-8,10,-3,2,9,-8,8,-5,-6,-8,-1,1,-6,-10,-7,-2,2,-7,-8,10,-3,-10,4,8,4,-4,-8,-4,-9,3,-3,-5,8,2,10,-3,4,4,9,-7,-1,-7,-7,1,5,-4,-10,5,-10,2,-1,-5,-8,-3,4,-9,3,1,-9,8,8,-2,10,6,4,-1,3,-10,-8,6,-2,-6,3,5,-2,5,4,10,-5,-5,2,-6,4,6,8,2,10,-5,5,-4,4,9,-7,3,3,2,5,-2,5,-1,-3,3,2,6,-9,-6,-10,-10,-2,-10,2,-2,-2,-8,-6,10,-3,-3,-2,-2,-9,-1,-3,-5,-5,-2,9,-5], dtype = "uint32")#candidate|4884|(1872,)|const|uint32
call_4881 = relay.TupleGetItem(func_2318_call(relay.reshape(const_4882.astype('int16'), []), relay.reshape(const_4883.astype('int16'), [9, 14, 4]), relay.reshape(const_4884.astype('uint32'), [1872,]), ), 0)
call_4885 = relay.TupleGetItem(func_2322_call(relay.reshape(const_4882.astype('int16'), []), relay.reshape(const_4883.astype('int16'), [9, 14, 4]), relay.reshape(const_4884.astype('uint32'), [1872,]), ), 0)
func_3584_call = mod.get_global_var('func_3584')
func_3586_call = mutated_mod.get_global_var('func_3586')
call_4888 = relay.TupleGetItem(func_3584_call(relay.reshape(call_4877.astype('float64'), [6, 3, 12])), 0)
call_4889 = relay.TupleGetItem(func_3586_call(relay.reshape(call_4877.astype('float64'), [6, 3, 12])), 0)
output = relay.Tuple([call_4877,call_4881,const_4882,const_4883,const_4884,call_4888,])
output2 = relay.Tuple([call_4878,call_4885,const_4882,const_4883,const_4884,call_4889,])
func_4898 = relay.Function([], output)
mod['func_4898'] = func_4898
mod = relay.transform.InferType()(mod)
output = func_4898()
func_4899 = relay.Function([], output)
mutated_mod['func_4899'] = func_4899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4745_call = mod.get_global_var('func_4745')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_4911 = func_4745_call()
call_4912 = func_4745_call()
func_2862_call = mod.get_global_var('func_2862')
func_2865_call = mutated_mod.get_global_var('func_2865')
const_4927 = relay.const([6.001943,-1.021080,7.328723,-5.718745,1.377004,-1.773239,0.364250,-3.315748,-7.534353,-9.980861,9.544780,4.015139,-4.855997,8.237349,9.831346,4.273985,3.977718,-7.397131,9.302562,-7.615642,1.251773,-8.870591,6.885573,7.796671,-1.832665,2.798890,-1.900485,-9.561189,2.414237,-5.742231,5.807795,2.920925,-8.467287,-8.982612,-0.373246,-1.908307,3.912103,-7.961665,-0.354523,-2.319370,-6.874852,-8.184650,8.484564,6.935185,0.158520,2.473144,4.736569,8.469412,-0.784671,8.703191,-4.813174,0.504685,-3.957502,2.258464,5.980763,7.396308,7.721722,-5.199439,-6.962907,2.392744,-5.667558,3.006977,0.720385,8.572281,-4.167749,5.804738,-2.261080,-7.413584,-8.972320,6.236906,-4.756680,9.504910,6.100420,-0.610113,7.464906,5.287427,-0.005458,-9.403416,8.807584,5.171078,-5.973268,9.340883,7.122194,-1.888566,3.829288,2.484556,-0.764557,4.297518,8.652699,-7.725777,-2.567816,-5.577857,-2.795243,-2.322225,-4.559017,7.712689,-7.535186,7.707825,-8.070129,-6.530089,-4.466879,3.197065,-0.304638,-7.014493,-2.996307,6.364810,-8.933377,4.261018,-8.182700,-7.341232,-4.808767,4.411502,-8.516155,-5.680893,-4.030582,-1.738572,1.682967,-3.917835,9.058854,3.674515,1.836966,-1.979058,-3.445756,-2.081757,0.501748,5.245455,-9.201517,2.219493,4.203995,5.701323,-7.337914,-8.495687,-9.415997,4.842083,8.551613,7.072634,3.053865,-5.610557,-9.630396,-4.978605,-8.054224,2.044758,2.229339,7.103991,-3.101976,-7.962493,9.763749,-8.408448,5.258310,0.537122,-6.891843,8.881536,-8.246940,6.788257,-8.650779,-4.291433,7.274265,2.325529,-0.919827,-8.747330,-4.595260,4.069031,3.085415,1.469198,-8.696987,-7.941264,8.676621,-2.787589,8.413237,-7.787150,-4.135990,-0.220897,-4.742147,-4.533472,2.301418,-8.439491,7.065507,6.798619,3.518427,-2.724216,5.514958,5.062706,-8.139915,-7.532559,3.397072,-2.163668,0.821253,-4.951815,-3.726459,1.107090,1.146576,0.984829,7.450268,5.436323,6.384608,-2.971395,-8.845618,-9.994754,-2.731944,9.167585,1.672264,5.451189,-3.313494,0.891511,-5.392925,-8.460545,-5.081269,-7.564526,-3.033544,-6.865691,4.666857,-0.123488,-1.281366,9.126551,4.986474,7.864816,-3.162017,-2.754760,-4.891256,4.641967,-5.791366,-4.380636,-6.177059,-9.991463,-5.802747,-9.687659,-2.400093,-3.924748,4.485495,8.706462,-7.117688,-1.609298,7.493922,9.569286,-0.705929,-6.603841,1.437172,1.349709,9.613801,-4.493007,-5.341758,-1.133906,-0.527439,-6.597323,-1.956146,-7.570994,-0.185104,3.808793,3.186516,3.631899,7.779317,-4.302480,-0.281849,-7.275207,-8.008581,6.223667,-1.862469,1.428782,-0.902212,-0.470951,3.239501,0.715847,6.050775,0.663044,-2.950402,-0.733783,-0.776907,-9.443374,-0.169975,-6.853523,1.063468,-6.275671,2.850567,-4.904564,6.435927,-5.241769,-5.676762,-4.386181,-8.537476,-8.425350,-1.720908,5.101823,-4.294832,2.722073,-6.418379,7.986508,2.291859,5.372580,9.873623,6.634911,7.062286,8.449800,4.727465,0.445126,4.756978,-7.059139,9.876811,-2.760770,0.215684,-6.685674,5.115231,-9.069795,8.603242,-1.598038,8.761635,4.084170,2.973128,-6.362956,-7.397428,5.062981,-2.208486,3.809127,9.097117,8.290710,5.298282,-2.843331,4.249764,-2.730444,4.118130,2.717520,-4.284291,0.620224,8.901583,-3.393587,0.276309,1.227140,-3.924268,1.434260,-1.956328,-3.870214,8.211201,-5.489162,6.542564,2.584475,2.918712,-8.337516,-5.173720,-4.528622,5.254411,5.416184,-0.720029,-6.964414,-2.502553,-6.759486,-7.060293,-5.901260,4.532647,-6.032690,2.948012,7.390324,-3.992724,-1.909285,9.435944,-1.979216,-9.502975,-3.397603,-9.099083,2.110350,-7.851515,0.036363,-3.843348,-8.592502,6.552481,7.645184,0.855847,0.988782,-8.321586,-4.519627,-1.983277,-4.188753,-0.939172,8.563401,-8.063079,6.619632,-3.293683,3.235784,8.276692,3.562081,6.907146,6.415534,9.168128,-5.175907,1.097221,-1.939158,-6.637093,-4.682544,0.738981,9.763585,-2.811592,-8.435559,-6.466037,1.120429,-1.271301,-3.610535,6.958813,-6.884119,-4.135399,-6.956647,8.328096,-6.015599,-5.335051,-8.028935,-3.157836,5.557090,3.448152,-2.387242,8.910034,3.664166,-9.939788,8.775135,2.553302,-0.427627,4.814344,0.901648,1.538043,-8.322292,-6.411711,8.703837,-9.463879,6.160337,0.490066,1.275865,-4.022964,-7.761790,-4.571516,-4.887118,6.686963,-0.329761,-8.487716,4.391926,4.128924,7.936652,-1.018426,-8.699934,0.920337,-7.003782,2.938479,9.950118,-4.559688,-2.566848,-7.812427,1.673955,-5.855740,-6.122975,4.289092,-8.991097,2.922203,9.002820,9.925642,-9.362606,6.952375,0.297897,3.894589,-1.147444,-4.099468,-2.359965,-4.072947,-0.627685,8.396113,4.478649,-7.565297,1.190057,6.639136,8.121305,1.755315,0.379368,7.687405,2.444905,5.754290,-3.155509,6.773215,-9.980061,-6.341793,-5.549562,2.670211,0.210925,5.763046,2.204213,5.063473,2.915217,7.992400,7.285455,1.113799,0.464728,9.396293,-7.919919,-7.399959,-7.040995,1.023598,9.834012,-5.325763,-1.954685,1.179922,-7.622476,2.644774,4.285839,-6.486074,3.926449,-5.108758,-6.687860,-7.669500,-1.355354,-3.409447,-0.833042,8.081603,-0.359396,-5.752588,0.771571,6.578705,-9.651983,-6.067432,8.603813,-5.206981,-3.007976,9.787052,-4.886728,-7.124907,-9.195468,0.567953,-3.689874,-0.611394,-6.014459,-7.046338,1.146157,8.630429,-3.792521,7.063288,-1.971510,-8.085256,-4.014412,-8.464857,7.498624,9.470510,3.114777,-4.521612,9.683758,-7.676816,0.450899,-0.318981,-2.757013,-3.866551,4.686132,-9.688152,-3.481188,-8.651311,-0.430991,2.270534,0.863792,-4.447025,-4.275710,4.657356,2.141189,0.341535,-6.377299,5.902188,-9.479889,3.646372,-6.870801,4.957624,-8.279042,7.641909,-9.466118,-7.545839,-7.415711,-9.598191,-4.521455,-5.158316,-1.891913,-5.535300,6.657752,4.228387,-8.882891,8.572084,8.723002,1.233187,0.491248,-4.782913,6.742105,7.174107,5.199507,-5.704518,1.030459,-6.767025,7.381471,-4.385958,-1.184305,-3.170373,-5.076827,8.877309,-5.162892,6.017799,-5.722576,-4.317894,2.147837,3.222599,5.879121,-7.481413,-4.544351,-4.935421,6.989286,4.542124,6.781523,-3.277947,9.184561,9.689085,-8.561485,6.449931,-1.206443,1.188715,-3.644518,1.353124,-7.809724,-9.070110,-4.266216,-5.565720,-5.326413,3.866197,4.774178,5.118096,-3.727262,6.729518,-2.101012,7.737077,-7.159041,-3.215516,2.074532,-7.358482,7.806288,-7.690211,-9.692816,5.638645,-1.080234,-6.357548,4.583292,5.454463,-3.160963,-8.660261,0.620063,2.872447,-7.786737,-0.080973,6.872864,-1.564577,-2.922384,-5.249990,1.605743,8.654337,5.408119], dtype = "float64")#candidate|4927|(648,)|const|float64
var_4928 = relay.var("var_4928", dtype = "int8", shape = (1755,))#candidate|4928|(1755,)|var|int8
call_4926 = relay.TupleGetItem(func_2862_call(relay.reshape(const_4927.astype('float64'), [648,]), relay.reshape(var_4928.astype('int8'), [1755,]), ), 2)
call_4929 = relay.TupleGetItem(func_2865_call(relay.reshape(const_4927.astype('float64'), [648,]), relay.reshape(var_4928.astype('int8'), [1755,]), ), 2)
func_3703_call = mod.get_global_var('func_3703')
func_3706_call = mutated_mod.get_global_var('func_3706')
const_4952 = relay.const([-7,5,9,-6,2,1,8,-10,-9,-3,9,-3,-9,3,10,-5,5,1,-2,7,1,-1,3,9,4,-1,3,7,2,8,-10,-8,-2,8,-10,-8,-2,-1,8,9,4,-4,5,-9,-1,-10,1,-7,1,-7,-10,-1,1,7,1,-3,5,10,-1,10,7,3,10,-8,-5,1,9,-6,-1,2,-9,5,-4,-6,3,5,6,7,-9,-4,-2,-8,6,-3,-8,-6,-10,9,-7,9,10,9,3,1,-3,-4,1,-5,-9,1,3,-2,-10,7,7,7,-9,5,-4,-1,1,-9,-1,-7,-5,6,8,1,1,5,-3,9,-1,-5,9,2,-3,-4,7,5,-2,8,-10,-9,-8,-1,9,4,-2,-4,4,3,-7,4,-8,6,9,-1,-4,10,-7,4,10,-3,-6,7,3,9,-9,-1,-1,9,2,7,-2,-7,-9,-2,-8,3,-4,-8,-2,-4,-2,-10,-4,1,10,-2,-6,-9,10,5,-8,6,1,-8,10,4,9,-3,2,8,3,-4,9,-5,7,-8,10,-9,-5,4,9,7,1,-2,5,6,-10,-10,-6,-7,-5,-9,7,6,5,7,-7,3,-6,2,4,1,10,10,-8,-8,2,-8,5,2,3,5,6,9,-2,-5,-10,-10,-10,6,-9,-1,-4,-9,2,-1,1,-6,-6,8,7,-4,-10,9,5,5,2,5,4,6,-7,2,3,-4,-4,-6,-6,8,-5,7,4,3,10,1,4,-2,4,-9,-6,5,5,-1,-2,-10,-7,8,-9,-5,-1,-4,4,3,2,5,5,5,3,-5,-6,3,-2,-3,2,-1,-6,7,1,-10,-2,-10,-6,8,-3,-4,8,2,-8,2,-7,-4,-9,5,-1,-4,1,-1,-3,8,-4,4,-2,3,-3,4,1,3,9,2,6,-4,-2,-5,7,-10,8,4,-4,1,-5,7,3,8,1,-3,-7,-3,-3,3,-2,3,-1,-9,6,-2,5,7,-1,-1,4,-9,-10,-10,-1,-4,-8,-10,-4,3,8,-10,-5,10,-3,-10,4,6,2,-8,-10,5,-1,-8,5,-6,-5,8,5,-7,1,-3,-9,-9,-6,-5,3,-6,-6,-1,4,-5,-6,-10,-3,9,-6,-8,-5,5,6,-10,9,-5,-10,7,-8,4,7,4,1,-3,10,-2,-8,6,9,5,2,7,8,8,8,9,8,-7,-9,-7,-2,3,8,-6,-5,-6,-10,-3,-7,-4,4,2,9,10,2,6,-8,3,-8,2,-9,2,-3,8,5,7,-7,9,10,3,-9,-5,-10,1,-9,-1,5,-8,10,10,-9,-5,8,2,5,10,-6,1,5,-2,-6,3,-10,-10,8,-6,-7,-5,6,2,5,-7,7,7,-9,6,-3,9,-1,-4,8,-10,-2,9,4,-3,-5,2,-8,6,7,5,3,5,-2,5,-8,7,9,10,-9,-4,3,6,4,-1,6,-3,9,-4,-7,-2,-3,-5,-7,8,7,-2,-10,4,-2,7,2,-6,-7,3,-9,-9,6,-5,-10,-2,-8,9,-5,-4,-7,-3,-2,-9,9,-5,9,-9,7,-1,-10,5,-7,6,5,-7,2,1,-10,4,-2,-6,-4,-7,2,9,-1,1,-7,10,-8,6,10,7,8,9,-2,-3,3,-7,-10,-8,9,10,8,-9,10,8,3,-10,-7,-4,-4,-3,-9,-4,5,9,-1,3,1,-6,7,9,-9,2,-7,-3,3,10,8,-10,-3,-8,-10,-4,3,1,3,-2,10,6,-10,10,9,-5,3,-10,6,3,-1,6,6,-3,-7,9,7,-5,-8,-10,5,4,3,-4,-1,3,-3,-5,-6,8,-1,1,6,-7,-10,-1,-4,-3,-8,6,-6,-3,-9,8,7,9,4,-10,-7,-5,5,4,-3,-6,5,-2,2,8,6,-5,3,-2,5,9,8,2,10,-3,-2,3,3,-6,3,-6,-1,1,-6,-5,7,-6,-8,8,-2,-10,-2,-2,10,-1,4,-1,10,-3,9,9,9,-8,-4,4,7,-2,9,-5,-4,4,-6,4,-9,2,2,3,-9,-10,-7,-10,-10,-5,-10,8,9,-1,6,-2,-2,-4,-8,-8,10,-3,-2,-3,-7,9,-3,1,-10,-8,8,5,4,4,8,10,-8,7,6,-2,2,-2,10,-6,6,1,4,3,5,2,9,-3,7,-9,-4,7,4,-1,-3,-9,3,-4,-3,-6,6,4,-2,-6,-1,-9,10,10,-7,10,-8,-8,6,7,-3,-10,1,-8,-4,-9,1,-9,7,-5,-8,2,-4,6,-6,-9,-6,-8,4,-9,10,3,-9,2,-2,10,-2,8,5,-5,-9,-10,7,3,3,2,-1,7,-9,-7,6,3,-2,-5,6,-9,-8,9,8,9,-3,7,5,-7,-2,5], dtype = "uint16")#candidate|4952|(896,)|const|uint16
call_4951 = relay.TupleGetItem(func_3703_call(relay.reshape(const_4952.astype('uint16'), [14, 16, 4]), relay.reshape(const_4952.astype('uint16'), [14, 16, 4]), ), 0)
call_4953 = relay.TupleGetItem(func_3706_call(relay.reshape(const_4952.astype('uint16'), [14, 16, 4]), relay.reshape(const_4952.astype('uint16'), [14, 16, 4]), ), 0)
output = relay.Tuple([call_4911,call_4926,const_4927,var_4928,call_4951,const_4952,])
output2 = relay.Tuple([call_4912,call_4929,const_4927,var_4928,call_4953,const_4952,])
func_4954 = relay.Function([var_4928,], output)
mod['func_4954'] = func_4954
mod = relay.transform.InferType()(mod)
mutated_mod['func_4954'] = func_4954
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4955 = relay.var("var_4955", dtype = "int8", shape = (1755,))#candidate|4955|(1755,)|var|int8
func_4954_call = mutated_mod.get_global_var('func_4954')
call_4956 = func_4954_call(var_4955)
output = call_4956
func_4957 = relay.Function([var_4955], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_4984 = relay.TupleGetItem(func_3179_call(), 3)
call_4985 = relay.TupleGetItem(func_3180_call(), 3)
output = relay.Tuple([call_4984,])
output2 = relay.Tuple([call_4985,])
func_4986 = relay.Function([], output)
mod['func_4986'] = func_4986
mod = relay.transform.InferType()(mod)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mutated_mod.get_global_var('func_4986')
call_4987 = func_4986_call()
output = call_4987
func_4988 = relay.Function([], output)
mutated_mod['func_4988'] = func_4988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_4992 = relay.TupleGetItem(func_1911_call(), 0)
call_4993 = relay.TupleGetItem(func_1912_call(), 0)
func_1055_call = mod.get_global_var('func_1055')
func_1059_call = mutated_mod.get_global_var('func_1059')
var_5014 = relay.var("var_5014", dtype = "uint16", shape = ())#candidate|5014|()|var|uint16
const_5015 = relay.const([1,-4,4,10,1,9,8,4,-6,10,-2,-1,-2,-5,7,-9,-1,7,-5,9,3,-2,6,10,-2,-1,5,-5,1,2,-1,-8,5,8,-4,-10,6,8,7,-3,-8,-5,8,-2,1,-9,-6,-7,-2,-5,-3,-5,-4,-1,1,-1,-8,-4,8,5,9,-4,-1,-7,7,1,-6,10,-9,10,7,-9,-10,3,-8,-7,-2,-3,1,8,-2,9,5,-8,4,-4,-1,-8,-7,-9,1,1,9,8,4,10,-5,3,-10,-4,-1,5,-5,-7,4,-7,-3,8,-2,2,2,-1,-10,-7,-7,7,1,-2,-5,-9,6,-3,6,-1,-10,2,4,9,8,-8,-6,3,-5,6,-5,-8,-2,-7,6,5,-2,8,-10,4,2,3,5,7,-10,-1,-7,3,3,6,-10,5,-7,2,1,-5,5,3,3,-3,1,5,2,7,-10,5,5,-5,-3,2,-10,9,7,9,-1,3,6,-4,-8,4,-4,-1,8,-3,-1,-7,4,-8,9,2,-10,6], dtype = "uint16")#candidate|5015|(196,)|const|uint16
const_5016 = relay.const([-5.126271,-9.313342,-4.085312,2.875533,-6.768699,2.213567,-2.230799,-7.868338,3.084761,-8.251479,-2.224047,4.071160,8.344701,-8.186114,6.580827,3.896674,-4.022577,-7.101249,5.580417,1.102228,2.868813,8.048395,4.941548,-5.949193,-6.359964,-7.559278,-0.066608,8.254108,7.121463,-6.496071,8.604375,-7.828268,1.268906,-1.971180,1.039262,-9.993072,1.555082,-8.117886,2.089542,7.669182,0.382764,-3.903569,2.999823,-2.541352,-5.574729,5.140457,-8.299470,8.351014,-9.579763,8.803529,4.661382,-9.544888,9.510019,-1.469540,-2.912227,-6.385171,4.247796,6.087874,-4.924809,1.255646], dtype = "float32")#candidate|5016|(60,)|const|float32
call_5013 = relay.TupleGetItem(func_1055_call(relay.reshape(var_5014.astype('uint16'), []), relay.reshape(const_5015.astype('uint16'), [1, 14, 14]), relay.reshape(const_5016.astype('float32'), [60,]), ), 0)
call_5017 = relay.TupleGetItem(func_1059_call(relay.reshape(var_5014.astype('uint16'), []), relay.reshape(const_5015.astype('uint16'), [1, 14, 14]), relay.reshape(const_5016.astype('float32'), [60,]), ), 0)
func_4262_call = mod.get_global_var('func_4262')
func_4265_call = mutated_mod.get_global_var('func_4265')
const_5023 = relay.const([-9.187696,-1.461089,-3.340045,-6.926602,5.489001,2.178425,-2.840093,4.578462,-5.079915,7.377558,5.857937,9.612974,9.060950,-3.735050,9.567059,-9.021281,7.861353,1.828910,4.372541,2.508941,-5.776179,6.527557,-9.313699,1.689132,-2.207788,-2.501006,1.461942,5.146587,3.326650,5.835574,9.855958,-5.782990,-2.314734,-9.858018,6.093459,-7.609031,7.095804,-2.858079,-2.243095,-7.913455,-5.540649,-4.028799,7.740897,7.073900,-0.713991,3.087082,-6.815797,-1.535232,0.184833,-6.987992,-0.613527,-5.478692,9.913034,-4.029787,7.458235,-5.403356], dtype = "float64")#candidate|5023|(56,)|const|float64
call_5022 = relay.TupleGetItem(func_4262_call(relay.reshape(const_5023.astype('float64'), [7, 2, 4])), 2)
call_5024 = relay.TupleGetItem(func_4265_call(relay.reshape(const_5023.astype('float64'), [7, 2, 4])), 2)
output = relay.Tuple([call_4992,call_5013,var_5014,const_5015,const_5016,call_5022,const_5023,])
output2 = relay.Tuple([call_4993,call_5017,var_5014,const_5015,const_5016,call_5024,const_5023,])
func_5061 = relay.Function([var_5014,], output)
mod['func_5061'] = func_5061
mod = relay.transform.InferType()(mod)
var_5062 = relay.var("var_5062", dtype = "uint16", shape = ())#candidate|5062|()|var|uint16
output = func_5061(var_5062)
func_5063 = relay.Function([var_5062], output)
mutated_mod['func_5063'] = func_5063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5112 = relay.var("var_5112", dtype = "float32", shape = (3, 14, 2))#candidate|5112|(3, 14, 2)|var|float32
uop_5113 = relay.acosh(var_5112.astype('float32')) # shape=(3, 14, 2)
uop_5118 = relay.log(uop_5113.astype('float64')) # shape=(3, 14, 2)
bop_5120 = relay.right_shift(uop_5118.astype('int64'), relay.reshape(var_5112.astype('int64'), relay.shape_of(uop_5118))) # shape=(3, 14, 2)
func_2342_call = mod.get_global_var('func_2342')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_5124 = relay.TupleGetItem(func_2342_call(), 0)
call_5125 = relay.TupleGetItem(func_2344_call(), 0)
bop_5127 = relay.power(uop_5118.astype('float64'), relay.reshape(uop_5113.astype('float64'), relay.shape_of(uop_5118))) # shape=(3, 14, 2)
output = relay.Tuple([bop_5120,call_5124,bop_5127,])
output2 = relay.Tuple([bop_5120,call_5125,bop_5127,])
func_5134 = relay.Function([var_5112,], output)
mod['func_5134'] = func_5134
mod = relay.transform.InferType()(mod)
var_5135 = relay.var("var_5135", dtype = "float32", shape = (3, 14, 2))#candidate|5135|(3, 14, 2)|var|float32
output = func_5134(var_5135)
func_5136 = relay.Function([var_5135], output)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2880_call = mod.get_global_var('func_2880')
func_2882_call = mutated_mod.get_global_var('func_2882')
call_5179 = relay.TupleGetItem(func_2880_call(), 1)
call_5180 = relay.TupleGetItem(func_2882_call(), 1)
output = call_5179
output2 = call_5180
func_5188 = relay.Function([], output)
mod['func_5188'] = func_5188
mod = relay.transform.InferType()(mod)
mutated_mod['func_5188'] = func_5188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5188_call = mutated_mod.get_global_var('func_5188')
call_5189 = func_5188_call()
output = call_5189
func_5190 = relay.Function([], output)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5265 = relay.var("var_5265", dtype = "float32", shape = (11, 16, 6))#candidate|5265|(11, 16, 6)|var|float32
uop_5266 = relay.acosh(var_5265.astype('float32')) # shape=(11, 16, 6)
output = relay.Tuple([uop_5266,])
output2 = relay.Tuple([uop_5266,])
func_5268 = relay.Function([var_5265,], output)
mod['func_5268'] = func_5268
mod = relay.transform.InferType()(mod)
var_5269 = relay.var("var_5269", dtype = "float32", shape = (11, 16, 6))#candidate|5269|(11, 16, 6)|var|float32
output = func_5268(var_5269)
func_5270 = relay.Function([var_5269], output)
mutated_mod['func_5270'] = func_5270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5324 = relay.var("var_5324", dtype = "float64", shape = (7, 12, 8))#candidate|5324|(7, 12, 8)|var|float64
uop_5325 = relay.rsqrt(var_5324.astype('float64')) # shape=(7, 12, 8)
output = uop_5325
output2 = uop_5325
func_5328 = relay.Function([var_5324,], output)
mod['func_5328'] = func_5328
mod = relay.transform.InferType()(mod)
var_5329 = relay.var("var_5329", dtype = "float64", shape = (7, 12, 8))#candidate|5329|(7, 12, 8)|var|float64
output = func_5328(var_5329)
func_5330 = relay.Function([var_5329], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2622_call = mod.get_global_var('func_2622')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_5343 = func_2622_call()
call_5344 = func_2622_call()
var_5352 = relay.var("var_5352", dtype = "float64", shape = (6, 3, 12))#candidate|5352|(6, 3, 12)|var|float64
bop_5353 = relay.bitwise_or(call_5343.astype('uint64'), relay.reshape(var_5352.astype('uint64'), relay.shape_of(call_5343))) # shape=(6, 3, 12)
bop_5356 = relay.bitwise_or(call_5344.astype('uint64'), relay.reshape(var_5352.astype('uint64'), relay.shape_of(call_5344))) # shape=(6, 3, 12)
output = relay.Tuple([bop_5353,])
output2 = relay.Tuple([bop_5356,])
func_5388 = relay.Function([var_5352,], output)
mod['func_5388'] = func_5388
mod = relay.transform.InferType()(mod)
mutated_mod['func_5388'] = func_5388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5389 = relay.var("var_5389", dtype = "float64", shape = (6, 3, 12))#candidate|5389|(6, 3, 12)|var|float64
func_5388_call = mutated_mod.get_global_var('func_5388')
call_5390 = func_5388_call(var_5389)
output = call_5390
func_5391 = relay.Function([var_5389], output)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3056_call = mod.get_global_var('func_3056')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_5398 = func_3056_call()
call_5399 = func_3056_call()
output = relay.Tuple([call_5398,])
output2 = relay.Tuple([call_5399,])
func_5414 = relay.Function([], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
mutated_mod['func_5414'] = func_5414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mutated_mod.get_global_var('func_5414')
call_5415 = func_5414_call()
output = call_5415
func_5416 = relay.Function([], output)
mutated_mod['func_5416'] = func_5416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2880_call = mod.get_global_var('func_2880')
func_2882_call = mutated_mod.get_global_var('func_2882')
call_5425 = relay.TupleGetItem(func_2880_call(), 0)
call_5426 = relay.TupleGetItem(func_2882_call(), 0)
func_4898_call = mod.get_global_var('func_4898')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_5429 = relay.TupleGetItem(func_4898_call(), 0)
call_5430 = relay.TupleGetItem(func_4899_call(), 0)
uop_5432 = relay.cos(call_5429.astype('float32')) # shape=(6, 3, 12)
uop_5434 = relay.cos(call_5430.astype('float32')) # shape=(6, 3, 12)
func_4954_call = mod.get_global_var('func_4954')
func_4957_call = mutated_mod.get_global_var('func_4957')
const_5439 = relay.const([[-5,-1,-6,-1,9,-4,4,-1,9,6,8,8,9,8,5,8,-1,-7,7,-2,6,1,3,2,9,-3,-5,-7,-7,8,6,-2,-2,-4,6,9,-3,2,10,5,6,-6,-3,7,-7,9,-10,10,9,3,9,7,-10,-7,7,-10,2,-3,-9,4,-5,1,4,-5,5,-8,10,6,6,-10,7,-5,-8,-3,-9,2,10,9,-5,6,-4,6,-10,4,8,-9,6,4,-2,-10,4,7,7,7,-2,-4,9,-8,2,5,8,5,-7,9,-5,-4,-2,4,-9,-5,-6,-5,9,-4,-7,-3,4,-10,-8,-4,-7,2,1,3,9,-9,7,9,-9,-10,-3,-3,2,10,4,3,-2,3,2,-1,3,5,-4,-7,9,-9,-2,-9,-8,6,-1,-5,5,6,5,-8,7,-10,8,-4,-7,-9,-9,-5,5,1,10,1,-4,-3,-4,9,4,2,9,9,3,6,4,9,3,-9,5,-8,-9,-8,-2,4,-6,-10,-4,-10,-6,-9,8,-4,-9,3,3,3,-2,4,-7,2,7,-8,-10,10,-7,-6,8,-7,3,10,-1,9,-1,-7,-3,4,10,3,-2,-6,1,-7,2,-5,-4,-2,-8,-6,3,-9,-4,-8,-5,-4,3,10,-2,4,-1,-10,4,9,10,-2,1,-1,4,-9,10,10,3,-7,8,-10,2,5,-9,-7,2,-4,-1,-7,-4,-6,10,-10,-5,-8,10,-4,-8,-8,5,-10,5,1,-8,-2,5,-9,-3,7,-7,3,-7,-8,7,-3,-1,1,-6,-3,1,9,5,-2,-6,-8,-8,-10,9,-9,4,-1,5,-3,2,-5,3,-10,1,-7,-1,-2,8,-3,10,5,3,10,-6,9,1,3,-8,-4,-5,10,8,6,-3,-4,10,-6,-5,-1,1,1,5,-8,6,-4,3,-8,5,8,2],[1,-1,-5,5,-7,7,8,3,5,-10,-2,-2,-5,-6,-4,-4,10,-4,-10,-10,-7,7,9,3,-1,2,5,6,2,2,-10,-3,-10,5,5,-10,-4,-10,-9,4,6,-7,-1,-1,-5,-9,9,-7,-6,-2,-10,5,-9,5,-8,10,-7,6,-10,-1,10,-1,-9,-2,1,-9,-6,4,-1,-5,-10,-4,-4,4,-7,-10,-4,-8,1,1,-3,2,-5,9,5,-5,-1,-1,9,-8,2,-3,-10,3,-10,3,3,7,2,-5,1,2,-1,8,10,-6,5,1,10,-9,8,-8,-9,-10,2,-8,7,5,-4,-8,1,7,5,1,3,10,2,-2,-4,2,10,-10,-1,-7,-10,-7,10,4,5,-3,-7,-10,10,2,6,1,-5,5,6,8,6,4,3,-1,7,-5,-6,5,-8,-9,2,-2,-1,-10,-10,2,8,-2,-7,-9,9,-9,8,-1,3,-1,-2,-2,2,1,-4,8,10,-3,6,-9,6,10,-6,-2,-10,3,-8,4,-9,-1,-7,-5,2,-2,-1,-1,-3,-5,-1,7,2,3,7,1,2,8,-5,-6,2,3,-1,2,-7,-2,-4,8,-8,-7,8,-10,-3,10,3,3,6,-1,-2,2,10,8,4,9,8,-7,-5,9,-7,-6,-6,6,-8,-10,9,-10,5,-10,-3,-3,8,-7,8,1,-6,-4,9,-4,-8,-7,-6,6,4,-2,-7,-8,-4,-8,-3,-6,9,3,3,-2,4,7,-6,-1,9,9,-10,-10,4,-7,-10,-9,-4,-4,-2,9,8,5,-9,8,2,5,-4,6,-5,-8,5,-2,10,9,6,7,4,-2,8,10,-5,4,9,9,3,9,-5,-1,10,-8,-8,2,6,-4,2,-6,6,-8,2,-1,7,4,-10,8,7,-6,-10,6,10,2,-1,-1,-10,3,8,-6,-3],[-6,7,3,-7,-8,7,3,-1,9,5,10,9,-7,9,-10,6,-7,10,-7,-9,6,-7,3,-5,-2,2,-6,-7,-10,8,3,7,-9,10,-4,2,-6,8,-9,-2,5,-2,9,-6,10,-8,-10,-10,10,6,10,-3,-7,4,7,-6,3,3,-9,-8,5,-3,1,-5,-3,4,-8,-8,1,2,9,8,6,-4,2,-6,-8,-3,2,7,-8,-1,-1,3,2,-9,1,-4,1,-4,10,10,-10,-4,-1,-2,-5,7,-3,-7,4,-7,-3,4,1,-9,-1,-8,1,7,-6,-3,1,6,-8,8,-10,9,-10,-9,4,-1,-8,9,-10,3,5,-6,4,10,-4,6,-7,-9,-1,-7,6,-1,4,4,-6,9,-3,-8,4,10,10,4,-2,-4,1,7,7,10,10,5,-10,-7,-7,9,5,-1,-5,2,-8,-8,6,-6,5,-4,1,1,4,-4,5,2,5,6,-2,7,5,-1,-3,5,3,5,9,-5,3,3,7,9,3,-1,-4,-5,6,-9,2,-10,-3,9,10,4,7,3,-7,5,-8,4,-7,-10,-6,-3,-2,3,8,9,8,-3,-3,9,9,-1,-10,-10,6,9,8,8,7,-7,-5,-4,10,-8,-6,-6,-10,-3,-1,-5,-10,9,-8,-9,-10,9,5,-10,1,-9,-6,-1,1,7,6,9,8,-5,4,-9,-2,-2,2,-3,10,9,8,-2,-3,-1,1,-4,-7,-5,-4,-9,-5,-5,-3,-1,10,-10,-1,7,3,2,9,3,6,9,4,-8,1,7,4,8,9,4,4,3,-9,-9,4,6,-2,2,5,7,5,-9,-2,-3,-8,-1,8,8,-1,-8,3,-7,-9,10,-8,9,1,-2,-6,5,4,6,10,-9,-3,7,1,10,10,-5,9,6,9,-4,-5,-8,-5,-10,8,-7,8],[-8,6,10,-2,-8,6,-2,2,-1,6,-7,-4,5,8,-5,-4,5,5,-9,10,-7,-3,-1,-6,3,2,3,7,-9,8,1,-9,5,2,8,-3,-8,7,-1,-2,4,-4,-3,5,-8,-6,-6,-7,-8,6,1,-2,-6,-8,1,-1,7,2,-10,10,9,-7,10,7,-3,3,-2,2,-3,5,4,10,3,1,-8,-9,8,1,2,-5,9,-10,4,-9,6,-2,-9,-2,-4,-6,-4,7,-5,-10,-6,-3,-5,-8,-6,-10,2,-3,-6,-5,-5,-3,8,-9,-10,-1,5,5,-6,3,-1,-6,-6,-6,-1,-5,4,5,9,6,-4,8,-10,1,6,-1,8,-10,6,9,10,4,-1,7,-5,-9,-9,-8,10,8,5,2,5,-8,-1,8,10,-5,-1,8,5,-4,-4,7,4,-9,3,4,7,-8,-10,8,-10,-8,-5,-8,-6,7,7,-4,-7,3,6,7,1,2,6,1,2,9,-8,8,-9,3,-8,8,2,5,-9,3,-10,9,-4,-1,2,4,9,3,6,6,5,-9,-5,8,9,-4,-6,-4,-5,-5,-9,6,-10,5,-7,1,-3,10,5,4,7,2,10,4,-4,-2,-9,-8,7,6,-4,-5,-7,7,-3,7,-8,5,-8,-5,9,5,8,-6,9,-1,9,10,-5,10,-9,-9,-10,6,5,-10,1,-10,-3,7,6,-6,6,-3,-4,-8,-1,-9,3,-9,-7,3,-8,-10,-9,4,-5,-2,-6,-3,-9,-3,-9,-1,10,-3,3,-6,10,4,2,-7,-6,-7,4,-3,2,3,-10,8,-8,-6,8,4,7,7,5,6,5,-6,-5,3,-4,-1,-3,-4,-1,-4,2,8,7,9,-1,5,-8,4,9,1,4,-10,4,-9,-4,-5,-4,-6,-8,5,9,5,1,1,7,-5,-7,-9,1],[-5,5,-1,-10,-2,-3,-10,-8,-10,-4,-1,4,-3,3,1,2,-10,5,-7,-2,5,-7,8,8,4,-10,5,3,6,-10,1,-2,-10,-4,-1,-8,-2,1,-10,-9,-3,9,4,7,-9,6,10,3,-6,-1,-3,-3,-3,4,-5,8,-1,-7,-3,6,3,2,-1,-5,1,-6,-4,1,5,-3,-8,10,1,6,-4,-4,4,8,2,-4,1,1,-9,5,6,6,-8,-5,4,1,-6,2,-4,7,8,-10,3,4,-2,8,4,5,-8,1,4,9,10,9,-6,9,-10,-2,-2,7,-3,3,-6,-1,9,-8,5,-2,-3,-10,-9,-2,10,4,-8,6,-5,-1,7,5,4,-8,3,6,1,4,7,-3,-7,8,7,7,3,2,9,-6,3,4,4,-1,-9,6,-8,-2,-5,10,-2,-5,6,5,-5,10,4,3,7,-2,-8,10,-7,-10,-3,-6,9,2,-7,1,-7,-1,7,9,-7,-10,-9,-8,5,1,-8,4,8,-3,2,-8,-6,-10,-2,-9,-9,-3,-1,7,1,-5,4,-8,-5,9,6,-6,8,-5,6,1,-5,8,-7,4,-4,9,-8,2,10,1,-9,-8,5,-7,-9,8,3,10,2,8,-4,-4,7,-6,-7,3,-3,5,8,1,-2,-1,-7,-5,-6,-3,-3,5,-2,7,7,5,4,-10,-4,8,-9,1,2,3,10,-2,-2,2,-7,3,-10,-8,10,7,-6,-10,-5,-9,8,7,-7,-2,4,-4,5,-9,-8,1,2,6,2,2,-8,2,-2,-3,-6,9,8,-4,-3,-8,-9,-10,7,-8,-1,-4,-3,4,-5,-6,1,4,-3,2,9,-6,9,9,2,-4,-10,-2,5,10,-3,3,-6,-3,5,-2,7,3,3,-3,1,-10,4,-6,7,10,-6,6,-2,-10,4,1,9]], dtype = "int8")#candidate|5439|(5, 351)|const|int8
call_5438 = relay.TupleGetItem(func_4954_call(relay.reshape(const_5439.astype('int8'), [1755,])), 3)
call_5440 = relay.TupleGetItem(func_4957_call(relay.reshape(const_5439.astype('int8'), [1755,])), 3)
output = relay.Tuple([call_5425,uop_5432,call_5438,const_5439,])
output2 = relay.Tuple([call_5426,uop_5434,call_5440,const_5439,])
func_5443 = relay.Function([], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mutated_mod.get_global_var('func_5443')
call_5444 = func_5443_call()
output = call_5444
func_5445 = relay.Function([], output)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3360_call = mod.get_global_var('func_3360')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_5491 = relay.TupleGetItem(func_3360_call(), 4)
call_5492 = relay.TupleGetItem(func_3361_call(), 4)
output = relay.Tuple([call_5491,])
output2 = relay.Tuple([call_5492,])
func_5493 = relay.Function([], output)
mod['func_5493'] = func_5493
mod = relay.transform.InferType()(mod)
output = func_5493()
func_5494 = relay.Function([], output)
mutated_mod['func_5494'] = func_5494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3056_call = mod.get_global_var('func_3056')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_5505 = func_3056_call()
call_5506 = func_3056_call()
func_2682_call = mod.get_global_var('func_2682')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_5536 = func_2682_call()
call_5537 = func_2682_call()
func_3682_call = mod.get_global_var('func_3682')
func_3683_call = mutated_mod.get_global_var('func_3683')
call_5545 = relay.TupleGetItem(func_3682_call(), 0)
call_5546 = relay.TupleGetItem(func_3683_call(), 0)
func_3211_call = mod.get_global_var('func_3211')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_5558 = relay.TupleGetItem(func_3211_call(relay.reshape(call_5545.astype('uint32'), [1872,])), 0)
call_5559 = relay.TupleGetItem(func_3214_call(relay.reshape(call_5545.astype('uint32'), [1872,])), 0)
uop_5566 = relay.sin(call_5558.astype('float64')) # shape=(156, 12)
uop_5568 = relay.sin(call_5559.astype('float64')) # shape=(156, 12)
func_1138_call = mod.get_global_var('func_1138')
func_1142_call = mutated_mod.get_global_var('func_1142')
var_5571 = relay.var("var_5571", dtype = "uint8", shape = ())#candidate|5571|()|var|uint8
var_5572 = relay.var("var_5572", dtype = "uint8", shape = (15, 6))#candidate|5572|(15, 6)|var|uint8
call_5570 = relay.TupleGetItem(func_1138_call(relay.reshape(var_5571.astype('uint8'), []), relay.reshape(var_5572.astype('uint8'), [9, 5, 2]), ), 1)
call_5573 = relay.TupleGetItem(func_1142_call(relay.reshape(var_5571.astype('uint8'), []), relay.reshape(var_5572.astype('uint8'), [9, 5, 2]), ), 1)
output = relay.Tuple([call_5505,call_5536,call_5545,uop_5566,call_5570,var_5571,var_5572,])
output2 = relay.Tuple([call_5506,call_5537,call_5546,uop_5568,call_5573,var_5571,var_5572,])
func_5577 = relay.Function([var_5571,var_5572,], output)
mod['func_5577'] = func_5577
mod = relay.transform.InferType()(mod)
var_5578 = relay.var("var_5578", dtype = "uint8", shape = ())#candidate|5578|()|var|uint8
var_5579 = relay.var("var_5579", dtype = "uint8", shape = (15, 6))#candidate|5579|(15, 6)|var|uint8
output = func_5577(var_5578,var_5579,)
func_5580 = relay.Function([var_5578,var_5579,], output)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4745_call = mod.get_global_var('func_4745')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_5636 = func_4745_call()
call_5637 = func_4745_call()
output = relay.Tuple([call_5636,])
output2 = relay.Tuple([call_5637,])
func_5658 = relay.Function([], output)
mod['func_5658'] = func_5658
mod = relay.transform.InferType()(mod)
output = func_5658()
func_5659 = relay.Function([], output)
mutated_mod['func_5659'] = func_5659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_5688 = func_3411_call()
call_5689 = func_3411_call()
const_5692 = relay.const([-3.571723,-1.203378,4.840825,1.211590,-5.588497,9.857319,-7.576340,5.188883,0.815156,-8.364093,2.813961,4.237035,8.261982,-2.547506,5.302706,5.601331,1.663493,-7.765948,-7.723562,-0.903262,2.757598,2.106851,1.080232,-8.026954,-5.545518,2.919441,8.594719,3.226181,8.039548,4.353086,2.908183,-7.663489,-5.223090,7.368201,-8.395820,9.385474,1.239636,-6.273935,6.740922,6.562339,5.696005,5.806643,-7.556127,3.697461,8.069267,-7.379940,9.959368,2.027446,3.995039,-5.916172,-5.638372,2.902341,-3.890338,-1.850304,4.065014,-2.581952,9.838228,3.506229,-7.557647,9.383740,8.546256,1.302503,-8.773996,-7.808964,3.259199,-0.780957,5.310809,-5.892993,4.350310,5.879739,-1.927710,7.073971,-0.995098,0.583071,-6.126801,-1.144515,7.257477,-8.314642,-4.771061,3.425631,-3.572298,7.672934,-0.581505,0.832997,-7.431040,-2.234015,-2.440443,-8.829509,-7.915169,-9.271603,-9.794416,-7.747030,-5.953999,-3.709846,5.717814,-4.137516,1.158914,2.867845,0.831420,7.731627,-3.833501,6.028698,8.436173,9.348259,2.098372,-2.760923,-0.665138,7.759439,-6.639870,0.793303,-5.173183,0.061494,3.339151,4.862646,2.669400,-5.866123,-7.828421,2.969531,-2.642415,5.564427,-8.091199,8.248232,-9.329375,6.661541,-4.994289,-7.227550,-8.877132,-6.586189,5.866283,0.600195,-3.848395,-3.698266,7.435449,3.119770,-7.428189,5.937059,-5.007917,5.328601,-0.699501,9.206484,8.558538,3.209597,9.666440,5.873052,7.217070,-2.110656,-7.007206,-2.318188,-8.890424,8.470952,-3.842665,1.135174,-4.672280,7.208270,5.225100,1.830800,-2.468284,-2.272545,6.700874,-9.055386,-0.460326,-8.829252,3.483330,-9.011254,-2.199543,-9.161013,7.730209,-4.605822,-0.460175,-0.956398,-0.884382,-3.584515,-9.648752,5.872684,-0.556114,-3.586216,-1.888427,-4.006579,4.953753,2.820831,-1.030313,-2.592754,1.306469,7.002868,-4.100518,1.107512,-8.629279,9.544843,-6.718416,-2.832452,7.759874,-4.069897,8.711135,6.324467,0.049146,3.694253,6.152626,5.631766,-9.538506,-0.262015,-9.926711,6.256154,-0.641022,2.298278,8.160460,6.170407,-8.726560,-2.852018,-5.008660,-9.907697,-7.802261,-5.706826,5.265247,-5.288849,-0.021908,-5.227696,-0.513446,0.170171,2.707191,-8.842370,-0.736546,9.082361,6.174010,3.036622,3.118974,8.022128,8.704611,2.390736,-7.735660,-2.102872,2.998338,3.365074,-1.863565,-9.605663,-1.636872,8.579673,-3.789283,5.055270,-1.977230,-1.142630,0.444741,-3.169462,5.411132,5.272299,3.710216,-0.485861,6.522994,3.916687,1.298193,4.422329,-5.539239,-4.898095,9.938522,-3.638448,-1.208577,8.307169,-1.869258,-6.111015,-8.488480,3.646403,9.691713,-0.489786,-5.069835,0.593834,0.007543,6.141156,0.995385,-8.518513,0.829455,-7.541012,2.016002,3.647597,0.322333,0.402406,-7.706657,-5.766937,1.983013,-2.631859,-9.108328,9.657297,-1.680479,6.599047,-3.305974,-8.918685,-9.856234,-4.445820,-1.492255,2.153373,2.668339,4.799814,-9.771545,-7.739459,-9.998431,7.370349,-0.789913,-2.728936,8.605507,-1.556390,-0.889237,7.496447,7.698453,-8.437303,-8.031298,-9.871874,3.370203,4.522370,7.342456,8.323084,-9.105250,-3.965571,6.327909,9.738286,-5.428489,-5.435782,-2.947993,7.249364,4.928197,3.400148,8.846456,-3.430479,-6.769306,-9.683406,2.387319,5.897136,-1.149395,-7.399369,9.398918,-7.327014,1.442335,-2.750685,0.746931,7.189756,1.477235,-4.685603,-4.818097,0.601363,-0.676292,-1.350156,4.492248,2.570951,0.341488,5.889963,9.003849,-3.008060,7.142219,-5.205255,-4.466491,1.798640,-0.893135,3.597786,-2.425077,5.045436,-8.609382,-6.453111,-3.193483,-2.604106,2.456884,-8.260105,8.601555,0.494749,5.514678,7.341353,-8.513282,1.501201,-9.163273,0.708903,-2.687603,6.916020,9.166437,-6.038774,1.372227,8.617069,1.028684,3.249591,4.450303,3.268123,-6.560794,-1.633528,8.279382,-0.883732,-4.812982,2.232913,-1.761347,-9.925605,-3.704023,9.032586,9.351810,5.285519,-7.520302,5.947532,4.626811,-0.580117,-2.438110,-8.634619,7.373814,1.830773,5.618607,-9.069012,-0.844774,1.911753,4.513615,-6.492441,9.912228,5.826145,5.944344,9.342150,6.246902,-7.959624,2.850200,-8.640814,6.791110,-7.942643,-3.203721,6.251701,2.866465,7.099517,7.322586,9.601600,8.968265,9.275630,-4.314516,-2.960415,-6.724990,3.177777,0.744348,-7.359864,1.635001,0.557805,9.900953,-0.809145,6.851157,-5.839352,-8.598434,-3.623355,-6.586277,-1.232729,-6.471584,2.438693,1.078004,-6.110759,-7.108195,-8.855306,-0.925459,5.205851,-9.400328,-2.691488,2.640403,-9.155864,4.558179,-8.051817,-8.240937,-5.797462,9.140486,-0.058424,-4.811794,9.121071,0.402280,-7.622092,-7.065476,-6.210909,-2.244666,-3.430112,5.980104,6.934373,3.737579,-0.031042,-1.680460,5.249807,-0.638927,-3.745322,-5.397275,5.006874,4.380476,3.877777,1.833362,-0.169862,2.305410,-9.106765,-4.344162,8.755734,4.895870,7.781123,-4.281975,0.452776,-3.172557,3.816294,7.324980,2.856939,-9.100410,-0.479634,-8.210772,4.628265,-3.288325,-6.302721,1.724700,-7.314365,5.982837,-1.259464,-4.958830,3.215632,-0.157945,-5.264227,0.857966,-8.409153,-1.810993,-7.056803,-8.826883,-5.974759,4.198427,9.037442,-4.745171,2.683362,7.706724,9.725983,0.448076,3.605717,8.744340,9.093882,1.192154,0.151966,7.076849,-7.369387,3.387179,-7.233352,1.096171,-7.842591,3.631468,0.862585,4.826202,8.083784,7.422759,-8.286618,-8.779280,-5.798902,-5.686818,1.513655,7.952431,4.960272,7.533352,8.899612,0.896106,-8.287169,7.550871,1.929949,9.694561,1.250719,2.758815,9.397231,4.262152,5.546784,0.179514,6.929330,-4.686103,-3.099281,-2.688930,-2.917630,7.456018,3.868762,4.673045,0.970165,3.810817,6.068369,1.832392,-1.987295,-3.250698,-0.348807,-2.039518,-4.736453,-3.362694,-9.516555,-3.840310,-6.041901,-7.190051,-6.438407,-9.125946,-9.787443,-3.606132,1.023277,-7.965780,4.512806,1.490221,1.793186,9.681560,0.461278,-4.914201,2.165852,-8.175668,-6.680282,9.303876,-6.730672,-7.303295,1.232697,6.829187,-5.480974,-5.090491,-7.807178,1.023759,8.806744,-1.987373,-1.980439,6.679316,7.338359,3.431703,-2.481840,0.835243,8.062531,9.728563,-7.397536,0.215290,-1.788622,-8.830585,1.558938,-5.960375,1.871520,6.041894,1.654029,1.209424,1.745299,-3.857169,2.350266,-2.558763,-5.544413,6.372508,-1.369614,7.094952,-1.760838,-1.448428,-9.718527,-6.388462,6.572790,6.982363,-6.905370,1.966146,-4.847751,2.536704,7.258333,-5.472636,7.447655,7.274340,-3.575773,9.975345,-4.558510,-7.629615,-3.666716,-1.877880,1.331711,5.275533,-2.873675,4.206824,-1.512010,-1.951357,-4.019857,9.996851,-4.873873,-5.402075,-0.663012,8.447630,6.632472,6.499487,1.539036,6.259000,8.584725,-3.985941,2.122032,-1.362515,8.564539,-3.470148,3.655820,6.083123,-1.425933,-1.019582,0.584041,1.659505,-7.741632,9.900851,8.193390,-3.009363,5.123721,-7.504592,-2.781308,-1.533219,-9.006220,8.564518,0.160142,4.705146,-5.040520,-1.900220,-9.541657,-0.293685,-7.253945,-2.179096,-1.167810,-9.833751,6.893221,4.419283,-7.486741,5.865808,-3.608432,-2.187460,-6.537837,0.771271,-3.245901,-3.391936,7.227602,5.960000,-0.051059,1.802979,-3.551111,-9.484876,0.190899,9.073030,-7.414774,-1.899132,2.833423,-9.505072,-9.444005,4.512604,1.658810,7.751946,-0.592011,-8.722741,-4.702353,-0.691415,3.840017,4.238550,-1.596538,-1.559940,6.657653,4.087273,-3.599862,-5.659438,4.571514,6.813735,-7.667654,2.672750,0.913257,2.732983,-9.389009,-0.344338,4.324050,-2.286755,-7.402545,-4.604343,6.353679,-7.853909,5.538800,-3.088314,-7.726721,4.818608,5.785420,-7.674200,-3.849962,-3.649339,4.349335,-3.749920,-2.103660,-1.937895,-8.355700,7.067216,-8.949484,4.909187,-2.130405,-6.336036,4.598332,5.711057,-3.037685,3.270011,-5.091703,3.243160,-8.404648,-4.919974,-7.407204,3.348408,6.997172,-3.324522,-3.462646,8.001264,-6.575554,-9.799632,5.931724,-5.184420,8.364731,-9.848421,3.422263,1.378580,2.525926,7.421740,-0.185784,-0.431259,9.900726,3.666702,-3.700643,-1.694175,-9.687644,-5.091670,9.993555,3.248012,-8.293015,-9.406189,-1.523204,4.070420,1.446406,5.802521,3.174372,6.438650,1.402571,8.189063,7.449968,-9.326125,-7.671230,7.201284,8.727705,-3.464034,-6.747938,2.230104,-9.815264,-0.688514,6.718275,6.514716,-4.311271,8.353298,5.508990,9.915842,3.657939,-5.251878,8.177281,8.589251,-3.937035,-4.231572,-0.301470,3.689857,9.009727,-2.984162,-8.371881,9.615280,-3.983069,-2.053040,3.473268,-8.135175,4.142648,-3.785981,-4.596776,1.702610,5.518202,9.686421,4.092248,-7.165594,-4.139846,-5.608155,-6.629206,7.774178,-6.392812,-0.542386,-5.785409,-5.470967,2.146549,-0.770962,-6.310906,7.633651,0.160540,1.747415,2.000298,0.727696,-5.913008,-4.349904,-9.840978,5.960444,4.918236,-3.115118,-1.897807,3.290218,-6.147206,9.575944,0.015410,-2.364061,5.447904,-4.924418,-2.951122,9.131858,0.409207,4.076318,8.948436,-2.114503,6.495367,-6.556137,-1.740541,4.985907,0.988418,4.883448,3.130736,-7.177292,-8.640242,-1.916733,-5.481945,5.174658,6.495137,1.227237,-2.771260,-7.981426,0.405157,6.036866,-3.042960,-7.228762,-2.168799,2.552891,8.629401,-8.936999,-6.504425,-3.310869,-5.822011,-2.307538,2.065339,0.954404,6.509734,4.302960,-5.566212,-8.673420,3.693215,3.350322,5.430249,-1.936106,-3.333399,-9.673712,7.039869,9.602719,-2.287126,4.494601,-8.588109,3.354714,-2.013032,-3.017802,-3.034802,-5.374432,9.664428,5.736008,-4.564153,0.192520,-8.969104,8.344998,8.220514,-7.123489,-9.804059,6.037315,-3.855130,-4.687975,9.238175,8.245563,-7.416190,1.218160,4.395094,-7.261333,-2.332713,-5.627597,9.676788,-2.717912,3.479404,-1.038570,7.135068,-3.464105,2.183386,-3.334092,7.880696,-0.531933,5.865550,1.491388,-6.836907,-5.191167,2.531473,7.806498,-2.740751,4.778239,-6.143017,7.867133,1.112317,9.289868,6.118843,5.821187,-4.438722,-7.621723,-3.734932,-7.676246,0.795090,6.514956,-0.227187,6.371309,1.542555,-0.684845,-9.521310,0.458643,9.198273,-6.488873,-2.612450,7.136482,6.370027,2.543921,8.583756,-4.292658,-5.390431,3.114546,3.199553,-5.577377,-0.772741,-7.684152,-6.020001,-0.415244,5.684039,-5.877852,6.269395,-4.961859,2.632032,-1.564030,9.430698,9.755383,-4.072415,-6.341343,0.076421,-2.164514,9.768319,2.624583,-9.907041,9.071679,-5.210866,-5.197876,3.213578,0.285904,-5.846961,5.572288,-2.489015,3.226550,-1.370248,-3.968488,-3.965063,4.471133,-9.694943,-7.903662,-6.128856,-2.611943,4.208654,-1.184312,4.949455,-7.457165,3.065154,7.500417,-4.475842,6.336358,7.866361,1.151520,-1.735156,8.359611,5.123658,-6.921521,-4.464036,-9.149275,7.658956,-8.290346,-2.835317,-9.664925,1.868638,-1.183168,-0.076607,-5.384647,2.549587,-3.879364,-9.375244,-1.949310,0.326249,1.255511,0.943664,5.354216,5.132410,1.531790,-7.461699,7.581349,-3.667640,-4.237677,2.807084,-4.799933,-4.213650,0.153206,-3.351857,-3.170977,-9.017598,6.744453,0.050800,-3.312376,2.481482,0.691313,3.914580,9.912548,-9.402621,-5.533546,-7.555921,-0.664067,5.336756,2.873211,-6.947381,6.672487,6.114289,-0.960687,-2.872236,8.536961,9.184930,7.867685,-8.670768,-6.692390,-2.283930,-1.071403,2.196155,7.327936,-1.125429,-7.583143,-1.139178,8.830500,2.455532,8.861557,-1.996848,0.520002,3.315967,-8.744987,2.381008,-1.485921,-3.238462,-0.262697,7.831685,-0.823348,-9.786800,-2.980860,0.762191,-3.540810,-4.560006,-0.933827,0.484978,-9.603103,-5.255385,-8.941351,3.332535,-2.008692,9.660222,1.338252,-9.613161,6.885468,-5.422738,-8.616072,4.900803,-8.628627,-8.308459,0.959873,-9.945235,-4.205362,-1.440741,-6.598555,3.330705,6.981792,2.871584,8.997483,7.685793,-2.658812,5.070202,9.450557,-4.659199,-6.169239,-5.737624,-0.028182,6.970838,8.895910,6.425871,4.766494,-1.543914,0.827607,0.735037,-2.398157,3.089999,-9.633668,4.636578,-7.975083,-8.622056,-3.279959,-2.379468,4.800080,2.022387,3.291208,4.545807,9.398509,-3.273614,2.923727,3.648952,-9.081405,4.697507,0.414881,-7.580926,-8.181119,-3.578338,0.778776,9.014616,-0.030196,7.633636,2.635730,-5.132691,2.760952,7.904842,-6.202720,-0.890477,-5.347916,-5.920063,-8.089862,2.427856,3.307143,8.954569,-9.491374,3.929647,4.546712,-5.942772,2.251732,1.258973,3.970523,-5.830539,7.065443,-5.598131,-2.889892,-8.532515,9.582559,1.961646,5.149476,5.485696,2.892912,3.162910,-8.295466,5.673386,-9.834602,-7.283417,4.770657,-6.566995,6.785890,-5.699696,7.589624,-0.801250,-6.562245,1.404895,-8.614967,5.259514,5.053666,-9.338804,9.881974,-5.533008,-9.005138,1.513305,2.629357,-7.939441,3.051043,-9.289572,1.982648,4.044004,-0.782862,-6.709519,-7.497732,-4.511985,-7.771876,3.683730,-7.421103,3.007197,-4.972345,-4.818277,-2.624510,-1.755785,-7.566664,-8.397362,9.551544,0.249981,-2.893157,-0.740553,-5.851486,4.843378,6.192432,-3.348474,-2.162497,-1.667723,-8.908855,-0.588613,0.234703,-2.492118,5.198172,-2.268589,6.965804,-0.221017,6.474743,-1.406590,4.263255,-5.696018,-1.911339,-9.285709,-4.352221,1.979884,1.666254,-6.589072,-8.329434,-5.296951,1.230413,-8.100580,5.639527,4.425408,7.298158,-7.633725,8.034733,5.472230,5.098840,-9.512121,-8.067746,-7.338675,2.650035,-5.261107,-9.265628,7.003639,5.568436,-3.251524,-5.569311,2.467956,4.732462,-4.110607,-8.786280,-6.411616,0.509163,-7.671637,-4.609334,0.800936,7.457942,4.559215,7.674540,1.824387,-4.814395,4.960359,3.083945,-5.905106,-4.227325,9.569096,-9.472832,-1.821235,-8.852255,5.567321,1.441084,-4.902763,-1.811683,-5.281129,-1.721472,3.642462,3.968603,7.814610,2.855906,4.631253,-5.054623,0.860159,-4.241829,-0.012133,-4.914691,9.303465,4.838030,-9.756419,8.074376,7.807308,-3.562062,-9.616107,7.469983,1.273778,9.438666,-9.813377,2.403000,-7.371370,9.316908,1.216325,-4.946304,7.012098,-4.879037,-6.257401,4.478911,-2.939518,-7.349524,5.931188,-0.786523,-7.978308,-7.050455,-0.205760,-9.174587,0.915530,8.748565,3.714797,-1.680490,8.569176,-2.524871,-1.442340,9.800299,-1.156604,-8.289698,4.177518,-0.836453,-2.424038,-9.718791,-2.719450,-4.311700,-7.762592,-2.959282,2.730264,5.816480,-4.138942,-1.116543,6.087095,1.661820,6.252902,9.817497,-8.737273,9.225332,-8.021822,9.251160,-2.523444,6.332816,-8.427728,5.783006,-1.091981,-6.964594,-9.042709,9.331881,2.202970,5.541507,-1.814599,4.898106,-8.453194,-4.329417,8.104426,-7.101629,9.188229,-0.553279,3.293500,7.915630,-4.178303,-1.893030,7.239745,-6.803094,-1.491555,8.774618,0.015644,-5.057383,2.237256,-8.467110,-7.217486,2.286549,-6.653841,6.985841,9.909508,9.283232,4.159978,-1.403168,-6.088921,5.602125,3.792408,6.231520,3.586927,-7.284707,-9.279264,8.339323,1.640225,-9.292254,0.969325,-1.171942,3.986036,-4.273153,8.517322,7.220766,-0.689493,2.588760,8.428605,-3.870819,-4.118845,-2.465102,4.389555,8.624425,-4.664649,4.959753,-3.108935,-5.802678,7.320237,-1.119196,7.987577,-1.294530,-1.868755,4.154175,0.320184,-9.239491,3.199439,-7.294226,8.472412,3.853366,-9.982024,2.264863,-0.433499,-8.606692,-3.886741,8.714725,-7.323246,1.188791,0.163898,-9.741032,-2.948181,-9.630060,5.226686,8.330353,-1.770514,-0.996125,8.675907,7.286431,7.752133,6.827555,-2.908353,-8.629888,8.807933,4.760801,-0.714709,0.352598,6.462489,-5.871853,-2.962235,5.887576,8.577630,4.833670,2.614058,-8.415175,-4.802982,-5.526015,-5.664800,7.332969,2.643957,-8.546307,4.708246,-0.104003,8.492091,6.134732,-6.964646,2.269483,9.211048,-4.132178,9.891843,0.188031,7.479893,0.141756,-2.737039,3.913815,5.324356,-0.072129,7.975784,1.943325,5.940976,-3.403433,2.699879,6.303804,2.376027,0.142792,5.373239,-3.613872,8.272524,-1.852128,1.232136,7.697386,-4.448486,1.782401,-2.250659,-5.385029,6.901243,-8.221832,-4.958466,3.042744,7.685892,5.981237,-9.310134,0.880894,1.201468,0.265404,0.638009,8.123399,-1.610276,5.731929,-3.598521,8.724893,4.685787,-0.462737,1.182692,7.852643,1.343075,7.913371,-8.833248,0.583168,3.101833,-8.259415,9.281757,-2.524848,-6.200860,-3.684010,1.880065,5.575206,2.670317,0.710465,1.363398,-8.685366,1.843522,-0.432358,-6.924603,5.446942,1.888958,8.204397,3.018761,-8.803534,8.554576,-0.105713,-8.311511,8.305613,-8.452333,1.519130,0.983487,-5.697533,6.189534,9.358995,-1.217922,8.873205,-1.563433,-2.516278,-0.965711,-1.644423,7.770173,2.632033,-0.162869,-2.666038,0.899378,-8.236203,4.980174,8.004662,-4.393789,-6.200156,0.968751,-1.717655,-2.423337,3.193408,0.916361,7.605151,4.986188,6.935066,9.714054,-1.637677,4.524966,-3.887679,8.951132,1.985949,-0.952955,-1.411707,-3.582742,3.887611,2.647228,6.455062,-0.282013,6.840110,3.816725,9.438973,-3.841246,3.817840,5.614610,-2.533041,0.602417,-3.235461,-1.057851,6.000059,4.930644,9.508614,-0.595153,6.610387,1.118039,-9.859891,1.851514,-7.810994,6.437333,1.416387,2.698651,5.821554,-1.764031,-6.822318,-2.055648,3.150641,-4.376504,-3.003877,0.305762,-6.615381,-3.457707,-8.526462,-4.542906,-1.901569,-9.009088,-9.143041,1.614383,8.408664,9.690898,-4.911274,3.539427,3.120947,2.933337,-2.958347,-9.713465,4.529467,4.206585,-6.655865,-7.298385,1.952379,5.266314,-3.914159,7.052769,-8.951264,6.062845,-1.550452,-5.499294,7.106670,1.542868,-9.494405,-3.601418,7.862990,6.334240,0.240628,-5.076386,6.560097,2.174544,-3.200012,7.364207,1.707591,-4.709752,1.366587,-0.975360,-1.387145,0.524687,9.868315,-6.167740,9.601622,-3.218669,-1.437737,-3.233675,-5.825589,3.244768,-8.510620,8.047731,-8.949676,-5.909075,-6.917450,-6.514485,-8.317636,-9.039719,1.072699,-3.393156,-7.829120,0.486198,7.074227,-9.836710,0.719839,2.277486,-2.638299,-3.171783,-5.901135,6.373765,3.048506,0.194711,1.178109,0.640893,-8.161646,2.799299,-3.425338,1.701857,-1.597463,-3.537660,-1.566967,-1.433954,-1.258200,6.806669,0.937261,-6.453361,-9.581376,-2.068628,6.511757,-9.032423,-2.878002,-1.650517,-7.129635,-6.025278,-0.616901,0.260603,-9.488195,0.744182,-2.717995,5.102115,7.881930,-2.168308,8.902806,3.647354,-1.229746,6.342790,-0.660546,8.338560,3.638640,2.059524,-8.151532,-9.348149,-0.902064,-5.732189,-5.769822,-5.785888,6.924063,0.605651,-0.123121,5.941993,-8.906281,7.746538,-6.560551,-1.202126,-9.315993,2.473257,-6.265948,-8.982873,-5.125963,7.294465,-6.172153,-9.731041,-1.150324,4.007798,8.880253,3.255401,5.361757,-7.853838,3.411417,8.798350,-4.648517,8.058935,3.199272,-9.733184,-5.783942,-8.955308,7.577760,-6.881534,5.474992,-0.696034,-8.193484,-1.890139,-2.286042,5.918305,6.424042,-9.410508,-0.542790,-6.065878,4.612225,7.268613,-4.926935,-7.394674,-3.389790,4.503934,-7.543363,-6.081058,7.405376,-6.287447,0.099173,-0.138468,8.978174,5.596911,-6.973508,9.783061,-1.926683,0.122183,-1.018405,-7.339369,-8.565617,-5.324437,-5.477678,8.862309,-5.351737,8.741945,9.512550,-0.154996,-5.301824,-7.920286,-8.100466,-3.512259,-7.279938,8.493246,-5.072619,-1.898153,-8.932844,6.041848,4.658315,-6.226814,8.686448,-4.065665,2.635285,9.446938,-5.451175,-5.378069,7.303408,0.525012,-4.932416,-5.441389,-4.458287,9.089676,-5.447361,0.406580,9.803226,9.363218,-4.554149,-6.770020,-4.136200,6.714115,2.599879,2.422976,3.349467,1.544048,-4.085284,-5.689351,-0.590376,2.547726,-0.638394,-7.232297,-7.398671,-5.843338,7.585608,8.377038,-1.556016,-8.057204,-5.269301,-6.018672,-6.793916,-3.078742,-0.090631,-8.154969,-5.134075,8.311088,-9.792293,2.177487,4.751205,4.087549,-5.296455,-4.809149,-7.898955,-7.576438,3.755737,-3.884391,-5.494255,-6.887439,3.236435,8.596744,-4.767820,-4.497400,0.689907,7.895943,-9.523875,5.733652,1.437198,0.508172,3.170737,5.792708,8.729527,-9.290905,-0.308914,-7.953791,4.500681,1.511402,-0.832230,3.818943,7.745899,-9.787766,9.164585,-8.470688,2.515536,-4.833976,-0.814947,2.797125,6.240259,8.330311,-9.707102,3.340519,-9.442673,8.391846,6.862594,-0.846734,-2.734732,-6.670366,-8.871056,-0.140165,-5.206626,-2.811131,-5.495542,-8.001726,-0.968357,1.997816,2.515564,-5.360493,-6.120642,-1.464726,-4.156777,-2.109508,3.940066,5.608009,-5.396727,-6.788792,-5.779542,3.284203,-7.852093,3.866812,1.526356,-2.521896,2.164879,-9.991753,-8.102942,9.690355,6.927978,3.412261,-0.125653,7.610971,4.159712,-4.706030,-6.266017,-2.874048,0.709549,3.040206,6.965970,-5.846347,8.347408,-8.018488,8.478572,-6.515440,4.825722,-6.171150,-0.065008,-9.453468,1.192196,-4.008274,-1.606268,-0.203167,-8.455243,5.908100,7.218618,-6.320217,-0.717553,6.453984,8.152087,4.774518,8.280714,-4.667013,5.338440,4.494007,4.455235,-3.101627,4.224804,-7.744857,3.117239,8.281801,3.750906,3.838488,-6.738389,6.364468,-6.225624,-4.309546,-1.782752,-5.573863,-9.458022,-3.645880,2.213958,9.218625,-2.669194,-6.854683,3.596311,-7.375204,0.399772,3.084543,-6.447652,6.494564,7.571695,9.751617,7.362268,5.784249,4.014085,5.389395,-2.519129,6.426623,-9.957763,-7.947692,3.148238,-2.361636,-4.888601,-4.081310,6.912705,-8.242095,-8.179186,-6.616923,4.641528,7.211214,-4.126743,8.195681,8.806461,7.936000,-1.466390,-8.276748,-8.505420,-3.922169,-5.655515,-4.090673,6.066439,-4.714815,-8.770920,2.435048,-5.655284,-0.453162,5.399325,4.500732,1.845349,9.473063,2.174213,6.876594,-6.212640,-8.505350,9.570950,-4.868271,2.211863,-4.375809,-2.747204,3.066412,-8.954523,7.842366,7.627309,-2.930600,9.408442,-2.449484,5.213813,-5.398236,-0.700309,-8.193876,6.785339,-5.702394,1.483039,-1.042943,-0.662412,-1.257598,-1.953819,-2.766807,0.851440,-4.423565,-4.136083,8.115100,-2.546825,-4.590957,-4.681792,-5.126765,3.321037,2.840550,4.426642,-2.166883,8.136556,-7.264142,-2.834648,-4.518143,-1.485983,-3.616717,7.742106,-8.329831,-6.862814,-3.306643,-8.109350,-8.934355,4.395722,-3.839199,-7.100446,-9.271467,-0.472752,9.613800,-9.019577,-0.877625,-0.875098,9.799600,-5.369491,5.614879,-9.648933,0.036848,6.528964,3.601530,4.310793,1.694640,-4.846675,-9.008597,7.620159,-3.670132,1.909002,-2.039540,3.332899,9.243445,2.647774,-3.844474,9.216537,-5.665040,-9.165489,1.069693,-8.930880,6.707043,9.264683,5.738012,4.969197,-0.523765,-0.002321,-0.174659,-2.334479,8.780546,-0.362973,-8.167087,0.999805,-9.579146,-5.501257,-8.855651,2.958394,9.516770,4.120804,2.061426,-6.684857,4.912522,-9.835127,4.349505,3.934744,-6.182826,-1.185177,3.933405,-8.831548,3.849542,-3.884383,6.770159,8.234790,-1.164955,5.068991,2.888126,1.060350,-1.052179,-6.977084,-0.910589,-2.892896,-0.684282,1.672093,-6.073623,2.467527,-1.335342,0.896319,7.122512,9.438212,2.821687,5.284859,-4.383136,4.870270,-8.452991,-0.916816,-5.307289,-8.334891,-6.235675,-1.130643,5.174264,-4.378789,2.058040,4.937582,9.171406,-9.702362,2.901942,9.651630,-8.765104,-4.733923,5.407340,-6.804475,6.180718,-1.066252,-5.025696,-8.864354,-9.039916,-9.167607,3.048053,0.353446,-3.336168,7.882876,4.793135,7.785642,-0.335868,4.294754,8.815390,3.803285,-9.937279,-6.356995,-7.137858,-8.437040,5.126457,2.796522,-7.115817,8.164087,-2.825191,-9.511422,-3.405933,-5.817838,7.186373,-1.897642,6.752789,0.674897,5.722950,-1.938851,-8.942587,-1.929177,7.459049,-1.944076,-9.627078,-8.435054,3.701886,6.926180,9.826606,-9.236133,4.371385,7.513685,-8.805824,-3.529831,-4.168467,3.115248,8.416685,-8.755619,5.923094,-9.046784,7.816458,4.315319,5.159452,-1.002061,-1.702024,5.725752,5.409570,-0.301253,5.276227,2.378921,3.267924,-7.518664,-4.129117,-8.711901,-1.334946,-9.312751,3.866779,-1.856556,-8.122243,4.359782,0.197382,-9.065918,8.163667,-5.894005,4.844322,-0.209724,-7.522940,0.590782,-1.094061,0.483589,-9.827788,-6.950644,7.083507,-2.829880,7.349894,-8.393197,-2.327127,2.452306,9.952479,-7.749656,5.010770,8.004142,6.063381,-8.755738,-8.834343,-2.606587,7.959911,5.169251,9.467632,-1.935505,6.850239,5.987177,5.478983,-8.828445,-6.073265,1.867891,0.547516,-0.852569,3.001548,-2.565378,-6.365389,-9.232369,9.289461,-6.827494,9.411107,3.079054,2.304021,-0.747668,2.271591,0.384814,4.511096,3.080386,0.033683,-3.672263,3.033077,6.475748,6.665792,7.200354,0.037745,-1.811299,2.026200,9.960208,-1.540924,8.420675,-1.450819,-3.393878,-1.782031,9.639710,4.020361,-8.952267,-0.886330,-1.128296,-7.973883,9.466299,6.886300,-6.775222,8.985392,3.078637,-6.122868,-5.951866,0.693195,-4.331226,-9.542684,5.948767,2.440601,-9.194051,2.983112,-8.865761,7.487182,9.182529,6.685138,7.150891,-0.637368,-0.966011,1.093975,3.593077,5.532669,-3.013590,6.786145,7.629054,-1.835352,8.262702,-3.806106,5.155354,1.157243,-8.733658,-6.321309,5.943472,-1.324002,0.674346,-3.067355,-6.720436,5.623430,-1.857371,2.771014,0.229504,6.020430,0.181222,-0.081737,5.581866,-2.646633,-4.467278,2.144791,5.430145,-6.289413,-3.096909,4.989164,-9.596523,5.098213,-5.188921,9.668167,-3.028636,-2.468244,-7.530962,-8.135897,-5.776975,-5.942911,-2.716585,-6.069428,6.297526,-8.947465,-2.437002,6.123800,-7.869078,2.048237,6.919294,5.633990,2.300341,8.923985,-1.540125,-7.813871,-3.587306,-3.788274,-1.179646,-0.992033,9.646834,8.514205,7.504995,-1.192680,-8.151862,-0.127421,-2.344971,5.231220,6.368131,-5.711234,6.470685,-3.121401,6.243716,-4.366318,7.080615,1.740177,2.260781,-9.507715,3.002332,8.403742,-6.298310,4.876716,6.441120,5.599534,-8.324213,-9.674708,-6.739805,0.758389,6.845065,8.152162,7.872712,5.376957,-2.066502,6.405730,1.540916,7.524050,-5.242083,-1.107039,1.614144,-1.095971,6.183783], dtype = "float64")#candidate|5692|(2535,)|const|float64
bop_5693 = relay.less_equal(call_5688.astype('bool'), relay.reshape(const_5692.astype('bool'), relay.shape_of(call_5688))) # shape=(2535,)
bop_5696 = relay.less_equal(call_5689.astype('bool'), relay.reshape(const_5692.astype('bool'), relay.shape_of(call_5689))) # shape=(2535,)
output = bop_5693
output2 = bop_5696
func_5700 = relay.Function([], output)
mod['func_5700'] = func_5700
mod = relay.transform.InferType()(mod)
output = func_5700()
func_5701 = relay.Function([], output)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2572_call = mod.get_global_var('func_2572')
func_2574_call = mutated_mod.get_global_var('func_2574')
call_5759 = func_2572_call()
call_5760 = func_2572_call()
output = call_5759
output2 = call_5760
func_5771 = relay.Function([], output)
mod['func_5771'] = func_5771
mod = relay.transform.InferType()(mod)
output = func_5771()
func_5772 = relay.Function([], output)
mutated_mod['func_5772'] = func_5772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4062_call = mod.get_global_var('func_4062')
func_4064_call = mutated_mod.get_global_var('func_4064')
call_5793 = func_4062_call()
call_5794 = func_4062_call()
output = call_5793
output2 = call_5794
func_5798 = relay.Function([], output)
mod['func_5798'] = func_5798
mod = relay.transform.InferType()(mod)
output = func_5798()
func_5799 = relay.Function([], output)
mutated_mod['func_5799'] = func_5799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_5803 = func_3411_call()
call_5804 = func_3411_call()
func_909_call = mod.get_global_var('func_909')
func_913_call = mutated_mod.get_global_var('func_913')
var_5811 = relay.var("var_5811", dtype = "float32", shape = (1, 60))#candidate|5811|(1, 60)|var|float32
var_5812 = relay.var("var_5812", dtype = "float64", shape = (1, 648))#candidate|5812|(1, 648)|var|float64
call_5810 = relay.TupleGetItem(func_909_call(relay.reshape(var_5811.astype('float32'), [15, 1, 4]), relay.reshape(var_5812.astype('float64'), [648,]), ), 2)
call_5813 = relay.TupleGetItem(func_913_call(relay.reshape(var_5811.astype('float32'), [15, 1, 4]), relay.reshape(var_5812.astype('float64'), [648,]), ), 2)
var_5819 = relay.var("var_5819", dtype = "float32", shape = (13, 60))#candidate|5819|(13, 60)|var|float32
bop_5820 = relay.equal(var_5811.astype('bool'), var_5819.astype('bool')) # shape=(13, 60)
func_3084_call = mod.get_global_var('func_3084')
func_3086_call = mutated_mod.get_global_var('func_3086')
const_5827 = relay.const([4,3,-5,-3,-3,-6,-1,1,-2,-5,6,-4,-1,4,-4,-5,8,4,-2,-8,-1,-10,-1,-2,-5,9,-4,-4,10,9,6,-4,2,8,4,3,-8,-10,3,-1,8,-4,3,-7,10,8,-2,10,10,-9,2,2,4,1,5,-8,2,-7,-1,-9,-2,7,-1,7,-5,-8,8,-10,-3,10,1,-2,9,9,6,1,4,2,-4,-7,-5,9,6,-4,8,-8,1,5,1,-1,1,3,-9,3,3,-6,8,2,3,-2,1,2,-9,-3,1,5,8,-1,4,4,-7,-10,4,-6,9,9,-7,-3,6,-7,1,-10,2,8,5,-7,-10,5,8,-2,9,-8,-2,5,6,4,-3,-6,6,-3,6,3,-7,-2,2,-2,7,9,9,-7,5,-4,-8,3,4,6,8,-8,10,9,-5,-4,1,2,-7,-6,-2,1,1,-5,4,7,-3,-6,-6,-4,6,-5,-1,-8,8,3,6,-2,-9,-4,-10,-6,5,-5,-9,-3,-7,3,-5,-10,-6,-3,-8,9,-5,2,-3,8,10,-10,10,-5,2,-7,-10,-10,-10,9,1,7,3,1,6,8,3,-7,3,-2,-2,4,7,-10,-8,-7,1,4,3,-1,-5,7,1,2,9,-1,-4,5,-8,10,-6,-4,3,2,-3,5,4,-5,9,8,-1,9,1,-7,-10,4,8,-4,4,-4,-1,-5,4,-9,-7,-9,6,-4,-3,-8,9,-1,-10,7,3,10,-2,-8,-5,9,7,-10,7,4,4,5,3,-2,2,-8,-1,-8,3,9,-6,2,6,6,8,5,1,-7,5,9,9,4,-6,-2,2,-9,-2,2,6,3,-10,-6,-10,7,-2,-5,-4,10,-1,8,-8,2,1,9,-3,-9,-5,-4,-10,8,-7,-5,-2,-10,-9,-6,7,-6,1,-4,-2,-7,-10,9,2,-3,2,4,3,7,-4,7,-1,10,10,6,10,6,4,1,-5,-7,-10,-9,4,-3,6,-2,4,-9,-7,-6,-6,-7,10,-6,-2,-9,5,5,3,10,9,8,-3,10,2,8,-10,10,-5,-4,3,-9,-3,-10,2,6,1,7,-3,-5,-4,-4,-8,-6,-3,9,-4,-4,1,-3,-3,6,-5,9,1,2,7,-2,10,-7,8,9,-2,-9,9,8,3,8,-9,3,-1,7,-10,-2,-7,-3,6,-7,7,3,-9,7,-9,9,2,-9,-8,-8,7,7,2,1,4,-8,5,6,-4,-6,-8,2,9,-10,10,-5,1,-5,4,10,-3,6,10,1,-4,7,-4,-1,-10,1,-10,-1,8,3,9,9,-10,7,8,-3,7,-4,1,-5,6,-3,2,-9,-9,4,8,9,8,-9,5,9,-4,-2,-8,-7,5,-3,5,9,8,3,7,-5,7,-1,8,4,-1,-8,-7,5,9,1,2,10,-5,8,-3,7,9,-4,-6,-10,9,7,-6,-10,-10,9,-2,6,1,7,6,-6,2,3,-10,-8,-2,-7,-9,3,7,-3,-10,6,2,-5,-9,-5,-3,-2,3,2,-5,4,-5,3,-1,-2,-7,2,4,-10,-10,-8,5,-6,8,-4,8,-8,6,-6,10,-8,8,6,9,9,-1,2,6,6,5,-8,-9,5,-8,4,1,-4,-2,-3,6,-2,-8,5,-2,8,1,2,2,7,10,-7,1,-10,-2,6,6,5,4,-7,-10,-6,3,-1,5,7,9,-4,5,-5,-8,5,1,-9,-9,-1,-3,10,-3,3,10,3,3,-10,-3,5,8,-7,-9,3,-5,7,-1,6,-9,-4,-8,-6,4,9,-1,-3,8,9,8,-5,8,1,-10,-5,-5,-6,6,3,-8,-9,1,-9,2,6,1,3,5,1,2,-6,7,-9,4,4,4,-2,-3,-4,10,-7,3,-2,-5,-6,3,3,2,2,1,1,-9,-2,5,-1,8,-7,7,9,-4,-8,-5,-8,2,6,-8,-3,-9,1,-3,-8,-8,9,-6,-9,3,9,10,-6,7,-8,-6,-10,-5,8,1,8,1,-7,8,-7,-5,9,-2,-8,7,-4,6,-10,6,1,-4,-9,10,1,-3,-9,5,-2,2,-7,-7,-4,4,-5,1,-8,-9,-9,-4,-5,9,3,-1,-10,-8,-4,8,7,-1,4,2,-7,8,8,-6,-9,8,-10,1,-3,-9,-4,-6,-10,-5,9,6,-8,3,8,-10,8,-1,8,8,-10,10,-3,5,3,8,9,1,-10,-5,8,7,7,2,-1,9,-9,-5,7,-8,4,-6,1,2,4,10,-5,7,5,7,2,-9,-9,5,-6,8,-8,1,-4,9,-10,-1,7,7,9,-10,-2,-2,-1,8,-8,7,3,-5,3,-6,-4,8,-4,3,-10,4,10,-4,-3,-2,1,8,7,2,9], dtype = "uint8")#candidate|5827|(900,)|const|uint8
call_5826 = relay.TupleGetItem(func_3084_call(relay.reshape(const_5827.astype('uint8'), [90, 10])), 0)
call_5828 = relay.TupleGetItem(func_3086_call(relay.reshape(const_5827.astype('uint8'), [90, 10])), 0)
output = relay.Tuple([call_5803,call_5810,var_5812,bop_5820,call_5826,const_5827,])
output2 = relay.Tuple([call_5804,call_5813,var_5812,bop_5820,call_5828,const_5827,])
func_5834 = relay.Function([var_5811,var_5812,var_5819,], output)
mod['func_5834'] = func_5834
mod = relay.transform.InferType()(mod)
var_5835 = relay.var("var_5835", dtype = "float32", shape = (1, 60))#candidate|5835|(1, 60)|var|float32
var_5836 = relay.var("var_5836", dtype = "float64", shape = (1, 648))#candidate|5836|(1, 648)|var|float64
var_5837 = relay.var("var_5837", dtype = "float32", shape = (13, 60))#candidate|5837|(13, 60)|var|float32
output = func_5834(var_5835,var_5836,var_5837,)
func_5838 = relay.Function([var_5835,var_5836,var_5837,], output)
mutated_mod['func_5838'] = func_5838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3056_call = mod.get_global_var('func_3056')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_5847 = func_3056_call()
call_5848 = func_3056_call()
uop_5849 = relay.sqrt(call_5847.astype('float32')) # shape=(2535,)
uop_5851 = relay.sqrt(call_5848.astype('float32')) # shape=(2535,)
output = uop_5849
output2 = uop_5851
func_5861 = relay.Function([], output)
mod['func_5861'] = func_5861
mod = relay.transform.InferType()(mod)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5861_call = mutated_mod.get_global_var('func_5861')
call_5862 = func_5861_call()
output = call_5862
func_5863 = relay.Function([], output)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_5864 = func_4018_call()
call_5865 = func_4018_call()
output = relay.Tuple([call_5864,])
output2 = relay.Tuple([call_5865,])
func_5877 = relay.Function([], output)
mod['func_5877'] = func_5877
mod = relay.transform.InferType()(mod)
mutated_mod['func_5877'] = func_5877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5877_call = mutated_mod.get_global_var('func_5877')
call_5878 = func_5877_call()
output = call_5878
func_5879 = relay.Function([], output)
mutated_mod['func_5879'] = func_5879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_5889 = relay.TupleGetItem(func_4898_call(), 2)
call_5890 = relay.TupleGetItem(func_4899_call(), 2)
output = relay.Tuple([call_5889,])
output2 = relay.Tuple([call_5890,])
func_5897 = relay.Function([], output)
mod['func_5897'] = func_5897
mod = relay.transform.InferType()(mod)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5897_call = mutated_mod.get_global_var('func_5897')
call_5898 = func_5897_call()
output = call_5898
func_5899 = relay.Function([], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_5916 = relay.TupleGetItem(func_1911_call(), 0)
call_5917 = relay.TupleGetItem(func_1912_call(), 0)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_5919 = relay.TupleGetItem(func_3179_call(), 2)
call_5920 = relay.TupleGetItem(func_3180_call(), 2)
output = relay.Tuple([call_5916,call_5919,])
output2 = relay.Tuple([call_5917,call_5920,])
func_5930 = relay.Function([], output)
mod['func_5930'] = func_5930
mod = relay.transform.InferType()(mod)
output = func_5930()
func_5931 = relay.Function([], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mod.get_global_var('func_5414')
func_5416_call = mutated_mod.get_global_var('func_5416')
call_5950 = relay.TupleGetItem(func_5414_call(), 0)
call_5951 = relay.TupleGetItem(func_5416_call(), 0)
func_2572_call = mod.get_global_var('func_2572')
func_2574_call = mutated_mod.get_global_var('func_2574')
call_5956 = func_2572_call()
call_5957 = func_2572_call()
output = relay.Tuple([call_5950,call_5956,])
output2 = relay.Tuple([call_5951,call_5957,])
func_5975 = relay.Function([], output)
mod['func_5975'] = func_5975
mod = relay.transform.InferType()(mod)
mutated_mod['func_5975'] = func_5975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5975_call = mutated_mod.get_global_var('func_5975')
call_5976 = func_5975_call()
output = call_5976
func_5977 = relay.Function([], output)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3682_call = mod.get_global_var('func_3682')
func_3683_call = mutated_mod.get_global_var('func_3683')
call_5987 = relay.TupleGetItem(func_3682_call(), 0)
call_5988 = relay.TupleGetItem(func_3683_call(), 0)
output = relay.Tuple([call_5987,])
output2 = relay.Tuple([call_5988,])
func_6016 = relay.Function([], output)
mod['func_6016'] = func_6016
mod = relay.transform.InferType()(mod)
output = func_6016()
func_6017 = relay.Function([], output)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_6043 = func_2487_call()
call_6044 = func_2487_call()
func_5658_call = mod.get_global_var('func_5658')
func_5659_call = mutated_mod.get_global_var('func_5659')
call_6062 = relay.TupleGetItem(func_5658_call(), 0)
call_6063 = relay.TupleGetItem(func_5659_call(), 0)
func_4645_call = mod.get_global_var('func_4645')
func_4646_call = mutated_mod.get_global_var('func_4646')
call_6074 = relay.TupleGetItem(func_4645_call(), 1)
call_6075 = relay.TupleGetItem(func_4646_call(), 1)
func_5493_call = mod.get_global_var('func_5493')
func_5494_call = mutated_mod.get_global_var('func_5494')
call_6079 = relay.TupleGetItem(func_5493_call(), 0)
call_6080 = relay.TupleGetItem(func_5494_call(), 0)
func_1212_call = mod.get_global_var('func_1212')
func_1216_call = mutated_mod.get_global_var('func_1216')
const_6100 = relay.const([-5.324646,4.992835,5.333113,-1.278608,6.837316,-8.850857,-9.214477,-3.845313,9.226344,-4.427271,1.250788,7.306436,0.124423,1.374868,-7.074085,0.689320,-2.880770,-7.945045,3.737870,-6.385911,-8.389359,-1.129171,-6.536777,-9.574868,6.340744,4.400933,4.707847,-6.931458,7.365451,1.008576,-1.271681,-9.005307,0.206847,0.940761,7.429459,9.452560,-0.646490,-8.478285,-8.743409,-3.771402,-6.957309,0.659000,8.954577,-7.283769,5.169401,-9.588829,3.469912,-9.453187,7.903156,0.888609,4.001041,-3.637454,-9.907705,1.812933,6.746525,-5.836105,5.839754,9.415584,7.433906,5.418178,9.697862,-6.443479,-6.504692,-5.164779,-2.891148,-2.969557,-0.045389,1.428776,-2.602865,-2.017702,3.337694,9.250444,-5.103030,8.372598,-0.845254,-1.783425,-1.947873,-0.091997,9.132132,3.643802,-3.358315,1.426699,-2.298645,9.563039,8.359274,1.898799,-5.560405,-8.450386,1.531105,-6.371976,-5.150926,-2.512681,-6.280492,-7.693590,8.447046,3.280621,1.577878,-5.084339,-6.734824,-8.966138,2.710350,-3.307702,-5.400894,-0.628735,-7.973171,-6.039543,3.811202,7.433682,2.399497,4.942485,9.305880,5.747453,-0.752802,9.819722,0.341899,-0.138294,6.609764,7.200940,7.588162,8.751644,-1.332457,0.058458,-6.302299,0.880372,-6.081591,-6.575298,-6.963278,-9.694715,-3.318228,6.851504,-0.681385,-0.346746,-2.759461,4.053437,-8.851776,2.296011,-7.538800,-5.710543,3.763576,2.112985,4.165456,-1.184054,4.098650,-6.757728,-7.870184,1.299817,0.133518,-0.462004,0.240598,-7.976712,-9.924897,1.288460,-0.889233,-1.490207,1.487983,6.840362,3.906646,-0.303178,-9.955314,-9.866414,-2.885137,8.163507,-4.228069,6.305635,-9.415036,2.675239,5.858881,7.018691,-5.682338,-6.189701,4.115515,-4.825886,3.487152,2.547688,4.323786,-9.183159,-9.805456,-7.902454,5.888504,-5.125872,9.463922,-0.959162,-4.013199,-3.743969,2.134150,6.905367,-5.263221,-1.512801,-4.491160,6.760749,4.262842,-3.551757,-0.552269,-9.401659,-9.816326,4.858644,-9.602095,9.776840,5.524781,-0.440707,-3.786427,-7.901576,0.054248,-4.090392,-8.163665,-8.879855,7.329066,2.184407,2.150838,1.735905,4.797794,6.090215,-2.803149,-2.938613,-1.032767,2.888640,-9.076188,6.334445,-0.271028,-3.864785,6.989734,-4.093608,2.556884,-4.889272,-8.412796,-7.030150,-1.063828,0.417575,-0.583657,5.746259,-1.860649,6.807054,-8.165480,8.751387,-1.656105,8.253849,-0.989015,-0.552176,-5.081931,-7.917634], dtype = "float64")#candidate|6100|(240,)|const|float64
var_6101 = relay.var("var_6101", dtype = "float64", shape = (648,))#candidate|6101|(648,)|var|float64
call_6099 = relay.TupleGetItem(func_1212_call(relay.reshape(const_6100.astype('float64'), [24, 10]), relay.reshape(var_6101.astype('float64'), [648,]), ), 3)
call_6102 = relay.TupleGetItem(func_1216_call(relay.reshape(const_6100.astype('float64'), [24, 10]), relay.reshape(var_6101.astype('float64'), [648,]), ), 3)
var_6104 = relay.var("var_6104", dtype = "float64", shape = (648,))#candidate|6104|(648,)|var|float64
bop_6105 = relay.greater(call_6099.astype('bool'), relay.reshape(var_6104.astype('bool'), relay.shape_of(call_6099))) # shape=(648,)
bop_6108 = relay.greater(call_6102.astype('bool'), relay.reshape(var_6104.astype('bool'), relay.shape_of(call_6102))) # shape=(648,)
bop_6119 = relay.mod(call_6099.astype('float64'), relay.reshape(var_6104.astype('float64'), relay.shape_of(call_6099))) # shape=(648,)
bop_6122 = relay.mod(call_6102.astype('float64'), relay.reshape(var_6104.astype('float64'), relay.shape_of(call_6102))) # shape=(648,)
func_4418_call = mod.get_global_var('func_4418')
func_4422_call = mutated_mod.get_global_var('func_4422')
const_6124 = relay.const([-5.878999,-1.654979,-6.648861,-2.214113,-6.026593,6.359483,-5.527734,6.658294,7.508907,-7.618980,4.625312,3.980968,5.562652,-0.460606,-2.522800,-2.379833,5.723032,-0.884443,1.805718,5.534273,-6.614831,0.623969,-4.856207,4.382712,4.951285,7.091693,-1.681142,-4.494420,1.301780,-0.125747,-3.376513,-1.849830,3.275007,1.733792,-2.782391,8.044581,-1.705981,2.823989,5.061293,-4.874001,-7.562307,-3.967696,0.639370,-6.039489,9.618952,-2.946364,-7.582754,7.189097,0.602555,-4.690953,7.116550,5.050664,-4.959397,2.403832,1.484858,-9.674443,9.512001,9.997541,6.941054,3.785068,-4.905429,3.362557,-2.399526,7.343430,0.590271,2.556956,8.305456,-3.877459,-3.065933,0.770889,-7.024324,2.817466,-5.624389,-0.107970,3.840287,-2.911727,5.355781,-2.706708,-1.833450,8.220962,4.437037,1.448185,2.117324,-0.339796,9.308295,-2.531454,-0.878542,6.147584,-8.462182,-3.657654,5.931794,5.086571,-1.005548,-5.400870,1.055767,5.945527,7.734842,2.052835,-8.318641,-1.206314,-4.565199,4.674207,-2.061111,0.335090,-4.665719,-9.949791,1.114519,-9.968953,2.308329,-5.306325,8.416979,7.236883,-0.163732,6.991200,5.680087,-1.975714,-9.313742,-1.017566,-7.796532,8.857931,3.243854,-6.828024,-8.533146,9.730969,-9.185727,-8.934951,5.590259,-0.882807,9.029631,-2.984780,0.107448,-5.223088,8.715086,-7.928780,-4.061163,-0.337605,-5.501557,-4.038180,-2.957515,-4.310337,-5.786760,-7.655582,0.002072,8.437386,-8.481036,3.550314,4.785622,-1.290279,-5.852808,-6.320808,-2.879422,-0.118501,-6.801971,0.885465,-0.088474,4.126626,5.688852,-6.042188,-7.863240,2.186524,-8.789332,-1.674381,-9.994443,-7.972108,6.789742,1.354840,3.528076,-5.705859,6.970556,-3.332008,-9.406557,-3.462746,3.458568,-0.933083,-2.114748,6.664842,-9.104913,-7.432277,-7.884248,0.957404,-3.558776,1.130094,-5.129238,5.127312,-0.699042,-9.420946,5.893000,-8.529576,3.575023,-3.464262,-9.057900,-8.247519,4.346669,1.683959,2.574418,2.606375,8.907661,-0.496601,5.232725,4.481419,5.043485,-7.535422,-1.333764,-5.694715,0.987607,-4.486585,-7.735941,-6.524368,6.149739,1.274084,-7.730004,-2.600761,6.255014,0.633336,-0.721690,-9.756577,-2.767012,-9.560937,8.409591,4.115618,1.687369,-0.573453,-3.797650,7.336520,-0.101805,3.817365,-1.624872,7.371633,-8.957193,-5.381509,4.984287,-3.282945,4.376175,7.424907,6.110450,7.615370,-3.984683,-1.872589,-0.700177,-2.069870,-0.295392,1.814063,-3.719581,0.827629,4.250361,6.486957,-6.680667,8.749774,6.371442,5.933104,9.711579,2.095896,-2.096109,-0.958377,-2.676357,-8.604593,-2.115553,9.825784,-9.339454,6.653162,-3.928421,-4.582798,4.463696,-7.788979,-8.073543,6.725457,-7.517080,0.703554,3.689200,7.960847,3.162123,-6.568842,2.943959,-2.828895,-6.479761,0.092433,-3.110244,-4.617819,3.220266,-4.205271,-6.590797,5.311210,0.459047,4.210408,4.960526,-0.698935,-7.227556,-3.818205,-4.743964,5.485852,2.416534,0.927251,4.399704,6.120373,-7.451842,-4.683987,5.547916,2.671535,4.058893,9.500587,7.429542,8.883916,8.055375,2.299679,-7.165321,-7.243903,2.228921,4.264282,0.993881,-9.008073,8.804063,-5.806627,-6.217154,5.780498,1.631616,-7.173200,-7.122806,-9.553271,-4.650844,7.513629,5.679526,-7.631682,5.646950,0.342107,-6.004673,-9.814163,-4.037488,-4.534523,-7.352814,-2.254483,8.794695,-8.918771,-3.190458,8.923341,-8.674828,1.632880,-4.083110,-7.618778,-5.822533,9.626697,8.182673,-1.362227,-5.325280,2.823629,-3.650933,-0.916696,-9.922775,4.929332,-6.604622,6.891591,9.479289,-2.850657,-5.157463,3.820548,-5.677063,8.199580,-7.985478,0.398998,2.560251,8.985522,4.403496,5.694003,-9.289895,-3.867915,6.266836,2.379857,0.871898,-6.525395,-1.000043,-8.370229,-8.703695,8.725844,4.689854,-0.880885,8.179375,-1.649043,0.855546,-9.428734,-2.310534,-3.537426,3.463351,-7.476213,4.613121,-2.840779,-7.900782,-4.378114,5.826593,9.923495,6.928188,3.756161,0.865826,7.727670,4.072962,-1.576812,-5.474161,0.809115,-1.505956,-7.177421,-4.600730,3.765038,6.536058,-5.974222,0.403108,3.450451,1.458351,0.371888,-6.450748,0.281244,7.377856,3.799521,7.522452,5.517614,-0.842801,5.259418,-3.851763,4.734757,2.227747,-3.395969,5.708838,6.084465,-1.187590,3.303773,0.782589,-1.491183,-5.660374,-9.609692,-7.321881,8.934639,-7.537241,-7.764153,-9.561221,-1.785681,9.287530,-9.611864,7.954826,9.706340,7.741579,-5.531067,5.110279,0.571945,4.727427,6.135365,1.032999,-4.795427,-1.670049,-0.683195,9.299967,-3.121676,-5.513477,2.587191,-6.169691,6.950455,-2.981082,-6.358320,9.540704,0.221077,8.593257,-9.359772,-3.454104,-2.944103,3.117670,0.826581,-4.861938,7.501139,-4.043361,-6.969563,2.558831,-4.440200,4.253519,-6.266572,-7.773495,3.090904,-7.057373,-8.582482,3.688746,5.883465,-0.856614,5.549155,-0.776925,6.875018,6.167039,6.668268,9.033202,-5.864529,-7.626419,8.078206,5.010295,9.497129,8.980140,-3.854229,-7.562467,5.752136,-7.094169,5.854829,-6.313994,0.879431,-6.931482,-9.823061,1.181109,1.389847,8.398878,-6.988436,6.354229,8.486743,-6.895272,0.841062,7.885864,6.522655,3.533832,0.252631,0.064780,-4.797837,8.742354,6.547322,1.646059,8.300708,-1.713687,6.487412,9.880597,-1.779127,-8.213072,-0.180466,-0.420990,9.533423,2.431246,5.057250,-2.989748,-7.785002,2.856196,-6.246917,-5.543764,5.870058,0.339701,8.830975,6.002637,-5.934941,2.071673,-3.449559,-5.774926,-9.768860,-6.740315,-0.408486,6.083092,-9.028893,2.551921,5.555665,-2.201032,-7.579005,-8.507057,-7.585225,9.979603,9.945241,-2.198245,-2.089015,-6.263012,-0.413248,4.369921,7.102416,9.667817,2.131790,-1.026819,4.520220,7.127815,-9.262856,2.951067,-7.651532,-3.252694,6.039248,5.756765,9.563648,-9.005114,-3.411121,1.630456,-1.430375,4.248525,6.870640,8.504495,2.704466,-9.889751,-3.284895,-4.004568,-4.993021,-6.223979,4.314391,0.660536,5.653492,-1.286280,1.452175,4.526592,8.652495,0.936795,-5.973666,8.243643,-1.868767,-5.081454,8.504549,2.463441,2.306246,8.176984,7.053796,0.072097,5.551314,-5.635369,6.099383,-3.382328,-3.679864,1.443581,-2.819269,-0.088805,-0.326169,5.032369,-5.628529,8.552919,4.182471,-2.428689,-9.045144,5.067278,-2.280766,-6.577513,-5.699793,-5.587101,4.573080,9.386654,-2.033789,-7.056785,-6.118516,-2.374917,-7.056779,-9.202523,-8.327202,-7.955653,2.665560,-5.936595,3.707873,6.156686,-1.679996,-7.260341,-1.916072,8.528629,-2.888958,1.703147,-4.771250,4.266919,-7.589576,-5.715644,-3.017968,4.411684,-6.003821,7.522082,-3.102266,9.040360,-2.680264,-2.223871,-5.185619,1.468146,0.526904,2.209108,-2.996686,-6.544910,1.143703,-8.935360,7.886372,5.249527,1.595863,0.721256,0.537671,-1.945092,5.792076,-5.941265,5.280441,-6.035758,4.724599,-2.587292,-5.029991,-0.293773,7.846989,7.389942,-7.123078,-4.005119,-3.837958,9.885900,4.391556,8.319591,8.040305,-3.791493,-0.414519,4.198235,-8.784309,2.025667,2.020049,-5.781458,-3.640932,7.854589,-0.463678,7.686056,-0.163087,5.334052,-1.723191,-0.026122,-3.245690,-3.697857,9.182728,-2.361459,0.322762,-6.945617,1.240759,1.852880,-8.476200,-1.517907,0.749792,3.641008,7.825306,3.829864,-8.080678,4.084519,-1.047339,6.542672,1.148066,5.537223,0.279399,8.739309,6.262002,7.607235,-9.827815,-1.212205,5.632232,5.955937,-7.956565,-4.604003,-0.844406,-6.949076,-3.192884,-1.733421,1.622100,-2.482110,1.998741,-5.693054,3.112032,-7.277095,7.958817,0.782614,9.832180,1.382815,6.897815,-0.822715,8.238394,-4.630915,-2.867878,-7.637785,-8.393178,-3.723110,-6.914798,-0.807122,-7.881486,4.002034,-0.617478,-1.882522,0.793357,4.626777,-6.271118,-5.736191,-8.955596,2.744363,6.648960,9.629569,-8.772116,0.314345,-1.867844,-1.850071,9.210379,-3.334753,-4.331044,4.216182,0.924851,-1.344728,-4.943415,8.319198,8.939074,6.090977,-3.477453,8.102460,-0.817062,-3.677645,-9.135137,-4.464981,-7.035450,0.266250,8.095323,9.258266,-6.288426,-2.258063,-7.595312,6.625434,-8.050058,1.376216,8.343740,-8.998547,3.022921,-1.369135,9.846668,7.655470,-1.483280,4.624095,5.984012,-7.661078,-8.303288,-5.324945,-7.798891,1.000519,-9.618471,-7.056603,6.942488,-3.440999,6.406473,-7.101195,7.915235,-9.399959,1.848648,9.898691,-5.675433,-3.574000,7.646592,-8.636121,-8.645000,-0.867477,-9.538923,6.119832,4.434667,-6.746861,-1.308028,-7.484844,8.209123,3.872364,-5.648399,9.431040,-6.152340,8.383828,9.050729,-6.340218,3.486099], dtype = "float64")#candidate|6124|(840,)|const|float64
call_6123 = relay.TupleGetItem(func_4418_call(relay.reshape(const_6124.astype('float64'), [14, 6, 10]), relay.reshape(const_6124.astype('float64'), [14, 6, 10]), relay.reshape(const_6124.astype('float64'), [14, 6, 10]), ), 2)
call_6125 = relay.TupleGetItem(func_4422_call(relay.reshape(const_6124.astype('float64'), [14, 6, 10]), relay.reshape(const_6124.astype('float64'), [14, 6, 10]), relay.reshape(const_6124.astype('float64'), [14, 6, 10]), ), 2)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_6127 = relay.TupleGetItem(func_2819_call(), 0)
call_6128 = relay.TupleGetItem(func_2820_call(), 0)
func_5577_call = mod.get_global_var('func_5577')
func_5580_call = mutated_mod.get_global_var('func_5580')
var_6130 = relay.var("var_6130", dtype = "uint8", shape = ())#candidate|6130|()|var|uint8
const_6131 = relay.const([-1,-3,9,5,-3,4,-10,6,-1,-9,10,6,1,-6,-6,1,9,-6,-1,-8,5,-4,2,8,6,4,1,-5,8,5,8,3,-10,-6,9,3,-8,9,-6,3,-8,9,-7,-4,-10,8,3,-7,-10,1,-9,-5,3,6,3,-3,-4,-10,1,-5,1,8,7,-6,-10,-8,3,-5,9,6,-9,-3,-5,4,-5,4,-4,-9,-6,2,5,-5,3,-5,-1,4,-3,-5,-8,-2], dtype = "uint8")#candidate|6131|(90,)|const|uint8
call_6129 = relay.TupleGetItem(func_5577_call(relay.reshape(var_6130.astype('uint8'), []), relay.reshape(const_6131.astype('uint8'), [15, 6]), ), 1)
call_6132 = relay.TupleGetItem(func_5580_call(relay.reshape(var_6130.astype('uint8'), []), relay.reshape(const_6131.astype('uint8'), [15, 6]), ), 1)
func_5771_call = mod.get_global_var('func_5771')
func_5772_call = mutated_mod.get_global_var('func_5772')
call_6138 = func_5771_call()
call_6139 = func_5771_call()
func_1388_call = mod.get_global_var('func_1388')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_6141 = relay.TupleGetItem(func_1388_call(relay.reshape(call_6138.astype('float64'), [12, 3, 6])), 0)
call_6142 = relay.TupleGetItem(func_1390_call(relay.reshape(call_6138.astype('float64'), [12, 3, 6])), 0)
var_6147 = relay.var("var_6147", dtype = "float64", shape = (12, 3, 6))#candidate|6147|(12, 3, 6)|var|float64
bop_6148 = relay.greater_equal(call_6141.astype('bool'), relay.reshape(var_6147.astype('bool'), relay.shape_of(call_6141))) # shape=(12, 3, 6)
bop_6151 = relay.greater_equal(call_6142.astype('bool'), relay.reshape(var_6147.astype('bool'), relay.shape_of(call_6142))) # shape=(12, 3, 6)
output = relay.Tuple([call_6043,call_6062,call_6074,call_6079,const_6100,var_6101,bop_6105,bop_6119,call_6123,const_6124,call_6127,call_6129,var_6130,const_6131,call_6138,bop_6148,])
output2 = relay.Tuple([call_6044,call_6063,call_6075,call_6080,const_6100,var_6101,bop_6108,bop_6122,call_6125,const_6124,call_6128,call_6132,var_6130,const_6131,call_6139,bop_6151,])
func_6153 = relay.Function([var_6101,var_6104,var_6130,var_6147,], output)
mod['func_6153'] = func_6153
mod = relay.transform.InferType()(mod)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6153_call = mutated_mod.get_global_var('func_6153')
var_6155 = relay.var("var_6155", dtype = "float64", shape = (648,))#candidate|6155|(648,)|var|float64
var_6156 = relay.var("var_6156", dtype = "float64", shape = (648,))#candidate|6156|(648,)|var|float64
var_6157 = relay.var("var_6157", dtype = "uint8", shape = ())#candidate|6157|()|var|uint8
var_6158 = relay.var("var_6158", dtype = "float64", shape = (12, 3, 6))#candidate|6158|(12, 3, 6)|var|float64
call_6154 = func_6153_call(var_6155,var_6156,var_6157,var_6158,)
output = call_6154
func_6159 = relay.Function([var_6155,var_6156,var_6157,var_6158,], output)
mutated_mod['func_6159'] = func_6159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_6168 = func_4018_call()
call_6169 = func_4018_call()
output = relay.Tuple([call_6168,])
output2 = relay.Tuple([call_6169,])
func_6186 = relay.Function([], output)
mod['func_6186'] = func_6186
mod = relay.transform.InferType()(mod)
output = func_6186()
func_6187 = relay.Function([], output)
mutated_mod['func_6187'] = func_6187
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6190 = relay.var("var_6190", dtype = "float64", shape = (7, 12, 8))#candidate|6190|(7, 12, 8)|var|float64
uop_6191 = relay.asinh(var_6190.astype('float64')) # shape=(7, 12, 8)
output = uop_6191
output2 = uop_6191
func_6204 = relay.Function([var_6190,], output)
mod['func_6204'] = func_6204
mod = relay.transform.InferType()(mod)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6205 = relay.var("var_6205", dtype = "float64", shape = (7, 12, 8))#candidate|6205|(7, 12, 8)|var|float64
func_6204_call = mutated_mod.get_global_var('func_6204')
call_6206 = func_6204_call(var_6205)
output = call_6206
func_6207 = relay.Function([var_6205], output)
mutated_mod['func_6207'] = func_6207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_6251 = func_4767_call()
call_6252 = func_4767_call()
output = call_6251
output2 = call_6252
func_6260 = relay.Function([], output)
mod['func_6260'] = func_6260
mod = relay.transform.InferType()(mod)
output = func_6260()
func_6261 = relay.Function([], output)
mutated_mod['func_6261'] = func_6261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_6269 = func_2487_call()
call_6270 = func_2487_call()
func_4649_call = mod.get_global_var('func_4649')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_6282 = relay.TupleGetItem(func_4649_call(), 0)
call_6283 = relay.TupleGetItem(func_4650_call(), 0)
output = relay.Tuple([call_6269,call_6282,])
output2 = relay.Tuple([call_6270,call_6283,])
func_6284 = relay.Function([], output)
mod['func_6284'] = func_6284
mod = relay.transform.InferType()(mod)
mutated_mod['func_6284'] = func_6284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6284_call = mutated_mod.get_global_var('func_6284')
call_6285 = func_6284_call()
output = call_6285
func_6286 = relay.Function([], output)
mutated_mod['func_6286'] = func_6286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2572_call = mod.get_global_var('func_2572')
func_2574_call = mutated_mod.get_global_var('func_2574')
call_6308 = func_2572_call()
call_6309 = func_2572_call()
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_6312 = relay.TupleGetItem(func_2601_call(), 0)
call_6313 = relay.TupleGetItem(func_2603_call(), 0)
func_3056_call = mod.get_global_var('func_3056')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_6320 = func_3056_call()
call_6321 = func_3056_call()
output = relay.Tuple([call_6308,call_6312,call_6320,])
output2 = relay.Tuple([call_6309,call_6313,call_6321,])
func_6329 = relay.Function([], output)
mod['func_6329'] = func_6329
mod = relay.transform.InferType()(mod)
output = func_6329()
func_6330 = relay.Function([], output)
mutated_mod['func_6330'] = func_6330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_6367 = func_4767_call()
call_6368 = func_4767_call()
output = relay.Tuple([call_6367,])
output2 = relay.Tuple([call_6368,])
func_6386 = relay.Function([], output)
mod['func_6386'] = func_6386
mod = relay.transform.InferType()(mod)
mutated_mod['func_6386'] = func_6386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6386_call = mutated_mod.get_global_var('func_6386')
call_6387 = func_6386_call()
output = call_6387
func_6388 = relay.Function([], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mod.get_global_var('func_6260')
func_6261_call = mutated_mod.get_global_var('func_6261')
call_6391 = func_6260_call()
call_6392 = func_6260_call()
func_5134_call = mod.get_global_var('func_5134')
func_5136_call = mutated_mod.get_global_var('func_5136')
var_6409 = relay.var("var_6409", dtype = "float32", shape = (21, 4))#candidate|6409|(21, 4)|var|float32
call_6408 = relay.TupleGetItem(func_5134_call(relay.reshape(var_6409.astype('float32'), [3, 14, 2])), 0)
call_6410 = relay.TupleGetItem(func_5136_call(relay.reshape(var_6409.astype('float32'), [3, 14, 2])), 0)
bop_6414 = relay.logical_xor(call_6408.astype('uint16'), relay.reshape(var_6409.astype('uint16'), relay.shape_of(call_6408))) # shape=(3, 14, 2)
bop_6417 = relay.logical_xor(call_6410.astype('uint16'), relay.reshape(var_6409.astype('uint16'), relay.shape_of(call_6410))) # shape=(3, 14, 2)
uop_6435 = relay.rsqrt(bop_6414.astype('float64')) # shape=(3, 14, 2)
uop_6437 = relay.rsqrt(bop_6417.astype('float64')) # shape=(3, 14, 2)
output = relay.Tuple([call_6391,uop_6435,])
output2 = relay.Tuple([call_6392,uop_6437,])
func_6443 = relay.Function([var_6409,], output)
mod['func_6443'] = func_6443
mod = relay.transform.InferType()(mod)
mutated_mod['func_6443'] = func_6443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6444 = relay.var("var_6444", dtype = "float32", shape = (21, 4))#candidate|6444|(21, 4)|var|float32
func_6443_call = mutated_mod.get_global_var('func_6443')
call_6445 = func_6443_call(var_6444)
output = call_6445
func_6446 = relay.Function([var_6444], output)
mutated_mod['func_6446'] = func_6446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mod.get_global_var('func_6260')
func_6261_call = mutated_mod.get_global_var('func_6261')
call_6458 = func_6260_call()
call_6459 = func_6260_call()
output = call_6458
output2 = call_6459
func_6478 = relay.Function([], output)
mod['func_6478'] = func_6478
mod = relay.transform.InferType()(mod)
mutated_mod['func_6478'] = func_6478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6478_call = mutated_mod.get_global_var('func_6478')
call_6479 = func_6478_call()
output = call_6479
func_6480 = relay.Function([], output)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5771_call = mod.get_global_var('func_5771')
func_5772_call = mutated_mod.get_global_var('func_5772')
call_6481 = func_5771_call()
call_6482 = func_5771_call()
output = call_6481
output2 = call_6482
func_6493 = relay.Function([], output)
mod['func_6493'] = func_6493
mod = relay.transform.InferType()(mod)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6493_call = mutated_mod.get_global_var('func_6493')
call_6494 = func_6493_call()
output = call_6494
func_6495 = relay.Function([], output)
mutated_mod['func_6495'] = func_6495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5700_call = mod.get_global_var('func_5700')
func_5701_call = mutated_mod.get_global_var('func_5701')
call_6520 = func_5700_call()
call_6521 = func_5700_call()
output = call_6520
output2 = call_6521
func_6522 = relay.Function([], output)
mod['func_6522'] = func_6522
mod = relay.transform.InferType()(mod)
mutated_mod['func_6522'] = func_6522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6522_call = mutated_mod.get_global_var('func_6522')
call_6523 = func_6522_call()
output = call_6523
func_6524 = relay.Function([], output)
mutated_mod['func_6524'] = func_6524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5700_call = mod.get_global_var('func_5700')
func_5701_call = mutated_mod.get_global_var('func_5701')
call_6573 = func_5700_call()
call_6574 = func_5700_call()
func_6016_call = mod.get_global_var('func_6016')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6576 = relay.TupleGetItem(func_6016_call(), 0)
call_6577 = relay.TupleGetItem(func_6017_call(), 0)
output = relay.Tuple([call_6573,call_6576,])
output2 = relay.Tuple([call_6574,call_6577,])
func_6587 = relay.Function([], output)
mod['func_6587'] = func_6587
mod = relay.transform.InferType()(mod)
output = func_6587()
func_6588 = relay.Function([], output)
mutated_mod['func_6588'] = func_6588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6629 = relay.var("var_6629", dtype = "float64", shape = (11, 15, 16))#candidate|6629|(11, 15, 16)|var|float64
var_6630 = relay.var("var_6630", dtype = "float64", shape = (11, 15, 16))#candidate|6630|(11, 15, 16)|var|float64
bop_6631 = relay.floor_divide(var_6629.astype('float64'), relay.reshape(var_6630.astype('float64'), relay.shape_of(var_6629))) # shape=(11, 15, 16)
func_4954_call = mod.get_global_var('func_4954')
func_4957_call = mutated_mod.get_global_var('func_4957')
var_6638 = relay.var("var_6638", dtype = "int8", shape = (1755,))#candidate|6638|(1755,)|var|int8
call_6637 = relay.TupleGetItem(func_4954_call(relay.reshape(var_6638.astype('int8'), [1755,])), 0)
call_6639 = relay.TupleGetItem(func_4957_call(relay.reshape(var_6638.astype('int8'), [1755,])), 0)
output = relay.Tuple([bop_6631,call_6637,var_6638,])
output2 = relay.Tuple([bop_6631,call_6639,var_6638,])
func_6666 = relay.Function([var_6629,var_6630,var_6638,], output)
mod['func_6666'] = func_6666
mod = relay.transform.InferType()(mod)
var_6667 = relay.var("var_6667", dtype = "float64", shape = (11, 15, 16))#candidate|6667|(11, 15, 16)|var|float64
var_6668 = relay.var("var_6668", dtype = "float64", shape = (11, 15, 16))#candidate|6668|(11, 15, 16)|var|float64
var_6669 = relay.var("var_6669", dtype = "int8", shape = (1755,))#candidate|6669|(1755,)|var|int8
output = func_6666(var_6667,var_6668,var_6669,)
func_6670 = relay.Function([var_6667,var_6668,var_6669,], output)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_6716 = relay.TupleGetItem(func_2639_call(), 0)
call_6717 = relay.TupleGetItem(func_2640_call(), 0)
func_3084_call = mod.get_global_var('func_3084')
func_3086_call = mutated_mod.get_global_var('func_3086')
const_6724 = relay.const([3,2,9,8,-5,-1,-2,8,-9,-9,-2,-3,-1,5,10,2,-9,-9,-2,-2,-1,-9,-9,4,8,6,-6,-4,4,1,-1,-7,9,-7,-2,-5,4,-6,1,-3,-7,-2,-8,8,-8,-5,-3,-7,6,-3,-5,-1,-2,-5,1,5,7,-9,-4,8,-9,10,5,6,3,10,-6,10,10,-3,3,8,-5,-8,7,2,-1,10,2,-9,-7,-7,-2,3,2,4,3,-7,1,9,1,6,4,8,-5,-2,-6,5,6,1,-3,-3,-6,-7,4,-7,-7,-7,-10,-6,-3,-7,-7,-8,-10,1,1,2,-2,6,-4,3,5,-10,-8,-2,-7,10,1,9,5,7,-3,5,7,-5,2,10,-9,-6,9,6,7,3,3,1,3,-6,-4,-6,-10,-10,9,4,2,-3,-8,-10,6,-4,7,-9,-3,1,-5,8,7,2,2,4,-5,-7,-9,-9,10,5,1,10,-10,1,7,1,-1,-2,8,-7,6,-8,-10,-1,4,-8,10,9,10,-5,1,-2,10,5,1,-5,-5,1,1,4,8,10,-3,-7,-9,9,-10,-2,5,10,-9,-3,7,-8,6,6,7,9,3,2,-10,-1,3,3,-1,4,-6,-4,10,3,-5,7,5,3,-6,1,7,-8,-5,8,4,8,10,-4,6,-6,8,-7,1,-10,-5,5,-5,4,-4,8,4,-7,-9,-5,-10,-8,-4,9,4,-4,-2,-3,-10,7,-9,1,2,-10,-8,-10,7,5,4,9,-7,9,2,8,-10,5,1,-5,-3,-8,9,9,5,-9,10,-6,-3,-8,-8,-6,-3,-6,-6,-9,-5,9,-4,-1,-2,5,10,-3,-8,-5,-7,-3,-1,-5,1,7,-1,-9,7,-4,-2,-5,2,-3,-8,7,9,-8,-8,-9,-8,-4,-7,6,4,-4,-8,-9,4,-3,10,10,7,-10,-10,5,-9,7,-1,-9,2,3,10,-2,-4,7,-2,-3,-4,5,4,-1,8,-9,10,6,-9,2,9,-6,-9,-6,1,-2,-4,6,-9,-3,5,-6,9,-9,-10,-2,4,-3,10,-4,1,-5,-4,-5,9,8,1,1,7,-10,10,8,-9,-9,-10,-1,10,6,-6,5,-8,-1,10,-8,-1,-3,-2,5,10,2,8,1,-9,1,7,-3,2,5,-6,-6,3,6,-10,9,-6,2,-6,3,1,3,2,6,-1,-6,3,-4,3,4,-4,5,-3,5,1,5,1,-3,-5,7,-9,-5,-4,1,-10,1,7,3,3,9,5,8,-3,1,10,-6,-10,3,1,-1,6,-4,-10,-3,4,-8,6,-8,-7,-7,-6,9,-5,2,-4,-4,7,-3,4,9,-10,10,1,6,-7,-8,-7,1,-7,5,-5,4,-8,6,-7,-1,-10,-2,1,2,1,10,-6,10,-3,-9,-6,10,-9,8,-1,-2,2,-5,-4,-8,6,-2,1,8,-7,-4,-9,8,1,6,5,-7,4,7,-7,-2,6,-7,-6,-3,-3,9,-1,2,3,8,-5,-6,-4,-4,1,-8,-10,4,-2,-2,-5,-9,-7,2,8,-1,-4,-2,1,3,-4,9,-4,1,-3,2,-3,6,-9,-2,-10,-10,2,-3,9,-7,7,-8,-10,-8,3,10,-1,6,7,-9,-2,1,2,-9,2,-4,1,-1,-1,5,-8,-10,3,1,5,-9,8,5,6,8,9,6,-6,-2,-5,-10,1,-4,-5,8,-2,1,7,-9,-7,10,1,-7,-2,-1,-3,9,-1,2,-7,-6,-7,10,-2,-8,6,-6,-3,-1,9,9,-4,-9,3,-1,-2,-1,3,-5,-8,5,-1,8,-1,7,4,-3,6,3,3,-10,-10,-4,-2,-9,1,2,-4,-6,-1,4,-10,-4,-1,8,1,-9,-10,-6,-3,1,-9,-6,7,-8,4,6,3,2,8,-5,9,10,8,-2,-2,-5,-7,-6,2,3,-7,1,8,3,-5,-5,-4,-4,2,1,8,-7,-6,9,6,-5,-10,3,4,-6,-4,-3,-7,-1,2,2,-10,5,1,-6,-6,2,-9,-8,2,-10,-4,-7,10,9,-1,-2,-10,-7,-10,10,3,-6,6,3,-7,-6,-8,1,10,1,-10,4,-9,5,-5,-9,-6,1,6,-1,9,-3,10,-8,-3,2,2,-7,7,4,6,10,-6,-5,-7,5,-4,4,4,2,8,3,2,-5,-2,10,-10,-8,-3,9,9,-5,-4,-5,-8,-6,-5,-10,-10,5,-2,8,7,-8,-8,8,3,-8,-2,-5,-4,-1,-1,3,6,3,-4,1,6,-2,8,-2,5,8,-7,-8,-6,-7,9,-10,1,-4,4,-8,7,-7,-2,-8,8,-2,8,5,10,5,-5,6,-10,-1,-8,-7,9,-1,-2,5,4,-5,9,10,-4,-9,-10,5,7,-8], dtype = "uint8")#candidate|6724|(900,)|const|uint8
call_6723 = relay.TupleGetItem(func_3084_call(relay.reshape(const_6724.astype('uint8'), [90, 10])), 1)
call_6725 = relay.TupleGetItem(func_3086_call(relay.reshape(const_6724.astype('uint8'), [90, 10])), 1)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_6727 = relay.TupleGetItem(func_5930_call(), 1)
call_6728 = relay.TupleGetItem(func_5931_call(), 1)
uop_6731 = relay.atan(call_6723.astype('float32')) # shape=(90, 10)
uop_6733 = relay.atan(call_6725.astype('float32')) # shape=(90, 10)
func_4705_call = mod.get_global_var('func_4705')
func_4709_call = mutated_mod.get_global_var('func_4709')
const_6744 = relay.const([3.961733,-1.505086,0.141668,-8.506090,5.827854,-1.046050,-1.602001,-2.810263,-1.406212,1.502037,5.499589,-7.460637,5.638979,2.191439,7.815048,4.620210,-0.228326,4.441079,-9.458017,-9.569034,-3.068722,-5.926216,-5.142262,-1.636329,-4.029144,6.090856,6.321257,3.622218,-8.792996,9.015750,-7.533886,6.962983,-1.046227,-4.896374,-2.487102,3.526315,4.536928,-2.718842,-3.587171,-5.808272,-9.099352,-0.647477,-8.669914,-0.684762,-3.119224,-1.743248,-3.487851,3.222163,-0.090150,1.226513,2.004567,7.406387,-3.187648,-0.648110,-2.952416,-0.024939,-6.197033,-1.474694,-2.637350,6.109538,5.869862,9.954871,6.307016,-2.767467,-6.901805,3.187059,-6.112188,1.530933,-8.416586,-3.965945,-5.692117,2.554529,7.224397,7.770719,-9.437464,9.736244,-2.701884,-2.522308,5.168012,-8.680592,-7.041802,3.134411,-0.885082,-3.694447,-5.919734,-3.313550,5.822601,7.327307,9.905584,-5.471573,-7.959829,8.691070,-6.354462,-3.465876,3.336911,3.623831,-5.000974,-2.382385,7.467767,4.192071,3.303618,5.348481,8.342454,-9.264539,8.490729,0.623029,-9.353766,0.428607,-1.384605,-0.868830,-1.971220,4.486174,1.488695,5.542052,-4.116220,-0.831140,-7.161958,-5.233613,1.468520,4.150755,7.484895,-1.000136,2.769702,-5.214568,8.681586,7.318002,1.685234,7.771613,6.069775,0.647589,5.219453,3.641881,6.722804,-7.021412,-4.165514,-6.081203,-6.231173,6.893017,-5.906322,7.455031,9.756024,1.304503,3.026492,0.441529,3.449912,1.188779,-4.189182,5.878243,-7.462239,-8.300404,8.510113,4.034339,0.271856,9.244991,-3.991004,-0.956531,-5.727226,-8.414904,-3.664677,-7.646918,4.005921,-8.967641,-2.527293,5.658991,6.130561,-5.261297,-0.638197,-6.896279,-5.291688,2.199421,-8.302277,-5.070691,1.721711,7.608072,-0.634672,-8.441357,0.882976,-9.071841,-3.115126,-0.369280,5.375365,-1.793716,-0.854788,-8.749628,-5.496244,-3.858294,7.572665,4.558272,4.803500,-9.340385,-3.560103,6.816384,9.256555,-2.891172,-6.152770,-9.880041,4.920257,9.648546,9.180551,-7.084298,-6.491793,2.821543,-9.285558,-8.876772,3.877323,1.252761,8.915530,3.250082,-2.019186,-3.246822,-4.870258,0.780472,9.023722,-5.833348,-2.583363,6.878859,3.287158,-9.817999,0.179406,6.551402,9.165287,6.984659,-1.576117,4.820577,-1.992885,0.019645,-3.131728,-9.381105,2.095486,1.556574,2.869448,-5.476333,5.049176,-0.469796,-5.782478,1.655793,8.467241,-7.005234,2.404518,-0.714427,-1.155057,-7.049546,-3.453359,-1.835968,6.434678,1.983591,-3.396275,4.348742,-5.712987,1.388905,-4.288683,-4.494525,0.773531,3.392760,7.617954,-5.889850,2.275965,-5.452360,3.605026,0.828444,-0.969001,3.051976,9.827286,-2.360130,8.398822,-2.961965,-5.207718,8.277919,8.978338,-2.971479,-9.149083,-5.000074,-3.310693,-9.582598,-8.510322,-5.099669,-1.695109,6.075008,1.159097,-7.198717,2.150458,-1.134963,5.236546,9.980972,-0.731328,4.544279,-8.597240,-3.175297,9.044039,-1.990394,-6.814247,-8.766659,2.832865,-4.091384,-0.434561,3.261437,3.381698,0.697921,8.835198,-8.028154,2.213569,-2.754248,7.588459,-2.961630,0.396149,-8.051349,1.126824,8.487458,1.049810,4.522275,-8.953172,6.481427,-6.913183,-4.383753,-6.974673,5.188074,0.051313,1.194389,-1.470365,0.835723,8.498421,-0.435862,-7.288937,7.455767,6.996054,2.013647,1.864860,-9.300157,-7.806444,3.418720,6.387273,-9.817012,-9.971136,1.833192,4.667542,5.494064,9.675421,0.430167,7.830193,9.943089,-0.559751,-4.163859,5.601558,9.396226,9.612158,-4.022385,-3.970923,8.058394,2.582619,2.544914,1.323875,6.293733,-1.544066,5.530471,5.344316,2.682108,7.436269,8.951032,-7.350065,-0.624738,4.637026,-5.064709,0.124395,-0.941650,-0.109295,8.060279,-0.172856,-3.023957,-6.570281,-1.844185,-0.023629,4.820078,3.976858,3.310646,8.656213,-6.984755,-3.498800,-5.428871,-6.884621,-4.400870,6.164823,6.056009,-6.456100,-8.161555,0.931192,-0.546866,-1.525122,0.321142,-6.934850,8.816449,0.959753,-8.791398,-6.926245,4.961096,-7.496122,-1.108659,-9.091677,7.393013,5.119676,3.865272,7.446476,2.529811,4.559768,5.360644,2.816935,5.717390,-5.261422,-5.991894,8.048463,-5.934978,-8.000687,2.098052,-5.083783,1.137513,-7.725581,-2.681972,3.615181,-1.178332,-5.488997,-1.641718,-4.394133,-1.957353,-7.713799,-1.533179,3.690660,5.481414,4.166621,-4.399036,4.031479,0.355975,-7.267472,2.101352,4.281153,-2.380368,-8.061029,6.100161,-7.916158,2.606034,2.519341,-2.230272,-1.778772,-6.955960,-6.995435,4.077356,-2.714047,-8.595148,-4.666540,-4.215079,6.119873,-6.569695,-9.778250,-0.825449,3.968740,8.261673,8.656610,4.721338,3.098201,8.354048,-5.192545,8.718795,-4.653259,1.666679,-1.664444,-8.586498,-0.757701,3.975372,0.426396,-1.614130,8.176197,7.265413,7.143697,5.589388,-0.546805,9.892499,2.609747,0.236956,-0.543861,4.816662,4.714634,-0.108488,-7.632111,-5.368625,6.352645,-1.338594,-6.036774,-9.047308,1.771786,-9.196809,-7.394237,-8.503235,-1.906121,6.166990,7.720461,8.233360,9.168397,-4.496824,2.291593,7.839469,8.720486,-6.952027,5.420678,-2.723471,-5.579002,-6.715707,-4.680496,-6.304331,-9.305085,0.386892,-8.305146,-9.672535,-7.479851,8.936121,3.081991,-5.554545,6.991346,-2.733130,0.652560,7.370166,2.300683,6.914111,-5.399417,0.042415,8.973762,-7.130939,0.237228,2.014133,-1.416010,-1.155680,4.940479,-4.408447,7.173765,4.767921,6.989155,-6.243938,-6.545394,-3.400356,6.387839,-5.836905,-7.415406,2.576899,5.127687,5.986027,3.479021,-6.413277,3.849297,3.372210,8.831871,1.514504,6.594657,-4.902514,9.636578,1.344079,-1.787353,-6.871047,-9.739174,-6.306060,-0.618009,5.238670,6.828484,4.549068,1.497366,7.341776,5.900056,0.263965,-4.186449,5.963654,7.344791,5.044014,-5.768002,-8.790428,9.759337,-5.899928,3.561939,2.936642,1.891659,9.299787,-1.973706,-8.316478,5.312770,-7.542837,8.169389,-7.310657,-2.755823,-3.936234,3.216722,-1.707234,8.101928,-0.202350,-6.183757,-7.985545,-8.752828,-6.526153,-0.863905,7.160736,5.993744,-1.415936,2.720825,2.785462,-4.254960,-9.296485,-1.129121,-1.824370,0.029359,-2.433493,-1.634170,-3.187490,-5.081156,1.254689,2.709836,5.225968,0.281740,3.734576,-8.734571,-2.621397,-4.068586,-0.608155,9.728772,-8.581565,2.962846,5.064627,6.563265,8.121596,-8.544037,5.707941,1.296566,-0.841173,-6.463975,2.638963,-0.390508,3.091789,-9.043248,-4.551181,-4.986366,-9.248245,5.163464,4.743284,4.426017,9.870043,-9.452163,5.213402,2.987798,-3.520646,4.472750,-6.473439,1.452481,-5.426732,8.046639,-8.321239,-0.031743,8.310184,-3.063915,-0.802687,3.885318,4.975349,-7.455474,9.199313,6.094950,1.048157,0.930309,-5.302303,5.642907,-1.425873,7.593510,-4.882100,-6.486374,-4.514176,3.606899,-1.790316,-7.823101,-2.817245,0.248966,-1.641252,3.910117,7.884091,7.701592,6.049113,8.584035,4.457866,-5.179230,-6.602678,6.359871,8.691551,1.394170,-5.350787,-6.554592,7.889875,-4.498649,-4.616839,7.892628,7.284637,6.813965,-1.711581,-1.725238,-3.216091,9.325683,5.868723,9.775412,1.367796,2.927335,-1.605036,-0.624198,6.366973,4.867121,-9.976219,9.535247,2.815967,2.932795,2.402684,2.731029,-0.297630,-2.759336,4.425317,3.131401,0.726868,-7.227022,-9.948423,1.996249,-4.627119,6.705626,5.537397,-7.835841,2.270960,-1.665290,8.897507,-1.947373,4.985998,-8.850309,-0.229307,3.423739,-4.034179,2.874422,1.912250,-8.359768,6.097454,-4.000863,-5.313415,9.057171,-6.670223,3.038267,9.694060,-5.688847,-1.193610,-1.155716,-2.876068,-5.731341,0.504036,5.669481,-1.350840,-3.958242,4.790460,7.171931,0.994152,0.802940,-8.191275,-9.152694,4.178414,-9.798974,1.549822,-3.285575,0.606477,-5.160203,6.670992,9.009205,7.333204,9.058267,-2.481585,-4.550350,-4.739629,-0.770589,-2.980588,-1.477423,7.478565,-4.622623,8.808528,-6.689773,0.887905,-2.327398,-3.584562,5.428169,7.915300,-3.246758,9.361844,-3.920769,-4.212327,-9.085015,5.801833,-6.760791,-1.955476,0.301975,-3.192981,-0.629824,-8.316758,-0.657511,-7.677105,-2.143886,-1.695043,5.936224,6.032855,6.909080,-5.390068,5.130127,8.036354,-2.516059,-2.718410,5.224071,0.569644,-3.904001,-3.030737,-3.463596,-8.169620,4.604521,7.390673,-4.181735,-7.500510,2.499603,-5.890457,-1.987137,-1.826617,1.365944,-6.915884,9.368455,-8.353322,1.408764,-0.214720,2.496192,-4.481277,-8.577223,7.502479,-3.928101,-0.029228,9.363965,-6.009478,-6.766156,-0.155705,7.293664,4.180251,4.444696,1.161295,-2.568604,-0.076288,-6.184933,-2.112143,6.968219,-4.093601,6.624704,8.915938,8.178354,-8.786011,-7.599608,2.946492,5.884970,8.891337,-0.707245,1.752072,-5.599070,-9.734843,-2.656590,7.019733,-1.240002,-4.287503,0.144037,-9.156870,5.260928,-9.344399,-3.557584,-6.894491,-3.914921,-1.700925,-2.841723,-5.032921,2.074913,0.489086,8.696464,6.033134,-6.648159,-6.178532,5.814539,-2.537596,2.965530,0.769832,-0.901705,-6.779336,5.754311,1.206112,-8.017515,-5.421249,-5.592915,-4.892943,4.034997,-6.454087,9.045992,1.804738,1.627164,9.091947,-2.790601,-1.022935,-4.799117,-5.423959,6.220585,8.980519,8.314160,-6.085299,-5.647791,1.193619,-1.603055,0.724765,-5.226262,6.371341,7.720654,5.434141,6.639552,-0.247056,-2.037942,2.966711,3.982748,2.686527,-9.982499,-0.871132,-6.571935,-5.218955,7.858103,-6.574221,-3.469365,-0.859555,3.183492,-4.621626,3.058442,-6.731501,7.748312,-5.459968,4.107460,1.575398,4.037987,-0.336324,2.817026,-7.166812,-4.694533,6.603689,-7.640070,-7.675810,2.595156,-6.930819,-7.866692,-6.776348,-3.710536,-5.148825,-3.017915,-3.576340,7.959939,-1.983596,8.992479,-0.270255,1.531450,4.817510,9.294897,6.791377,-4.360549,2.374519,3.750448,-2.445756,-1.079483,2.080414,-8.585832,-1.176271,-5.743590,-8.571161,-3.974207,6.308884,-8.704216,3.818680,2.710821,-9.703416,6.618859,-9.557401,9.109615,-0.842193,3.008295,8.186365,0.856300,5.119893,-3.367788,-7.992249,-8.018291,-0.870207,-1.610513,-9.213178,7.460161,9.131982,4.922867,8.620101,-8.277224,-9.547064,9.070148,7.635051,-0.025388,-1.027231,-3.621268,8.425406,-8.063482,-3.792666,9.992650,-0.068417,9.391214,5.244773,0.675995,-5.028688,4.009199,6.176143,-1.047342,4.926886,-1.369659,0.917467,-3.260594,8.901990,-6.396683,3.104176,6.331882,-3.675817,2.486072,3.583979,-3.815923,-2.392006,-2.521220,-5.234688,-7.045802,1.474371,8.964975,-5.921408,6.600682,4.196905,4.213284,-5.256850,-3.923380,8.576403,-8.922147,2.271675,-3.996462,-0.701697,9.020966,3.745060,6.784452,-6.063140,8.506535,-7.634024,1.731768,8.041648,1.082711,1.356400,-0.300860,9.972821,8.375960,-3.731407,3.972100,-5.222704,1.571360,-3.599897,4.876460,-7.624679,7.842178,4.705328,-5.382430,3.433538,-9.616410,9.585236,-2.528808,-5.811551,1.676463,2.033305,5.256307,-5.434764,-6.706544,5.361142,5.761336,-8.843603,1.342257,1.988395,-8.746369,0.692551,5.030457,-9.150392,2.059246,4.619255,2.353266,1.036876,9.675041,4.603647,6.969790,1.320425,-9.562415,8.630756,4.724830,3.805890,-2.473822,3.475895,-2.111684,2.670643,-5.066244,-5.004441,3.612490,-2.234415,0.694807,-8.450432,4.322563,-6.971775,-1.342939,9.581410,-2.789203,4.698534,7.418616,9.980003,-9.647671,5.848344,3.021390,-0.128665,-7.863802,7.271900,1.530697,-6.554968,1.600362,-6.821245,-5.218063,-2.684420,6.180662,9.491854,-6.440771,-4.511723,7.155576,2.877148,1.673289,-6.173441,-9.665567,-9.679019,0.092792,-0.351042,7.878671,-2.698223,-6.561631,-4.509949,7.554664,-0.371924,-9.182456,-2.107321,5.426132,4.429539,-9.697646,-0.614192,5.823581,-2.677182,2.211537,-9.314647,9.472594,-3.910368,0.605287,6.568415,7.989909,-0.099960,-2.863617,0.548718,-1.986510,4.138580,-3.669699,4.841387,-1.660487,6.994860,2.996502,-7.437420,-0.454328,-0.195753,0.575799,-4.312895,-1.538376,4.054589,-4.923448,-6.554635,3.279704,6.014062,5.472179,3.404955,-2.410164,5.660467,-3.983047,-3.452953,-5.449755,-9.433478,9.992442,-3.121776,8.861796,-4.354633,4.941576,-4.449980,-6.723665,-1.901404,4.718628,3.180581,-8.522271,3.023416,-0.681807,-0.354873,-4.400584,0.124628,7.366722,3.403355,5.756294,-2.779893,-6.345269,9.755005,-0.965079,-2.700581,0.868788,4.490533,-5.792595,6.535294,0.590066,-9.689404,-7.531923,3.563764,1.229632,7.275289,-5.062909,9.017322,-3.806775,-2.479363,2.596097,-1.202252,-2.431160,-9.867158,-7.584666,-9.066262,7.103380,-6.400159,-3.916350,-8.702847,-7.180095,-3.838087,4.862954,-8.210062,-6.019330,6.912487,1.760697,-9.797477,0.527610,4.009233,-0.538768,4.610014,-8.846139,-4.614576,7.181973,-2.448038,-7.166048,7.050516,1.031905,2.677969,-1.936030,2.109414,6.457688,7.497978,-8.565827,-4.824048,-3.383550,8.816526,9.230999,9.612533,-2.336118,2.027971,-3.763420,-0.486085,-9.736964,0.909748,-2.705630,-5.948261,9.002234,3.890972,-0.881154,-3.940242,5.296294,9.803052,5.100740,-7.477409,7.970361,-1.314268,-8.395365,5.117635,0.078899,2.961608,9.756548,9.358450,9.659759,-2.146196,-5.642943,7.900618,-0.515906,2.034270,9.261576,8.994073,9.977540,5.138142,0.355881,-4.825203,5.297533,-1.421558,1.788500,9.731318,-2.332618,1.737700,4.746063,1.642601,6.133178,0.253864,-1.306275,4.941989,5.872861,5.788000,6.249149,8.987996,8.969333,9.406438,8.208667,8.583554,2.639236,-5.851866,5.675847,-9.790060,-8.174294,-3.334880,4.271813,-5.465553,-1.242491,6.754657,7.470936,-7.237138,-0.695098,-3.352526,5.868636,-5.292225,-4.357197,0.662269,-5.556029,-3.542630,8.186756,2.705295,4.590294,0.211655,8.135654,6.208801,9.417466,5.955914,-0.328520,0.667779,8.183628,-6.059037,4.437455,-6.085857,0.844481,-6.776084,8.270539,7.996054,-0.043362,-4.195838,9.079664,-8.718673,3.259877,4.443567,3.775617,5.011703,-4.520652,-9.121066,3.432845,1.807883,-9.384152,-9.239208,1.267208,-6.010102,-1.841484,0.661569,-2.814161,4.638804,3.862128,7.337436,4.549942,0.510225,-6.778406,6.420490,-1.565934,9.903701,6.149292,-5.138210,7.909425,-5.933349,2.338776,-9.564294,4.093793,-2.642807,-5.368094,-4.174895,-4.058258,0.539511,6.727117,9.107949,5.401496,-5.435584,-7.743018,3.989324,4.345280,7.713180,4.374818,6.369596,6.254791,3.739215,3.419112,-9.020690,9.843162,5.474825,-0.965698,8.964536,9.512679,-5.978388,-0.040784,1.913392,6.846914,1.645472,-8.868124,-8.527336,-0.537119,6.235949,6.624679,0.514607,9.437566,6.025563,8.088788,6.639119,7.192751,-1.052833,0.162209,7.354114,8.868605,2.606290,6.082904,3.381538,2.205571,-3.821976,-3.772011,-3.877387,-9.161649,-0.948781,-2.503787,-5.369023,6.169651,2.732404,-8.160319,-1.329012,1.175022,-0.115693,7.570523,-6.211013,-5.022182,5.079590,2.725759,5.871083,8.426993,3.544912,5.145414,0.631173,0.850879,-8.354844,-2.748179,9.012594,-6.773433,-6.083000,6.623395,1.494853,3.516712,8.983216,-8.033949,-8.366095,-4.459787,7.072309,6.630482,-4.095470,8.548994,4.981176,8.694867,-7.970132,-3.404816,7.728043,5.741353,1.269575,4.151151,3.246327,2.961581,-4.803117,-3.374578,-1.009383,-3.073212,-6.507049,7.866023,1.324402,-5.944089,-2.170658,4.122907,-7.013026,-9.178327,1.587615,-1.399543,8.778738,6.664100,6.274970,9.247033,9.657647,5.134539,-8.422719,6.589642,8.303656,4.355689,-7.564637,-5.226048,6.707613,9.451030,-3.357780,-6.856895,2.423135,7.948592,2.893447,-8.718829,7.956724,-7.830561,-0.290783,4.266899,8.683653,-4.482365,4.565458,-3.221782,1.100614,-7.447182,-1.955075,-2.530198,-0.253563,-1.513778,-3.354313,-7.705189,-2.659352,5.622654,2.124530,6.243943,9.444802,-8.319214,-7.511438,-5.408899,-4.642198,9.589585,0.016877,7.814467,-8.356824,6.018597,-5.941264,-8.436459,-2.994994,-5.973036,-1.485509,-3.377310,6.997188,4.240240,2.680913,5.872459,-7.885140,-7.538465,-6.615363,5.064532,-1.560158,-1.802579,-2.984176,8.652783,-8.953368,-9.781523,2.521672,7.540186,-6.983602,-1.742566,-2.129547,3.157281,1.098453,-1.749563,9.572263,-1.831626,-3.411780,2.245671,6.756598,1.837634,-0.758878,-6.239870,-3.257985,-2.305255,-3.724473,-7.934931,-8.038151,0.877958,-6.285795,-3.080305,6.959188,0.514815,5.610346,3.243724,5.813371,-8.754877,-2.917823,-2.565307,-5.303145,7.129291,4.119277,2.907950,-4.487792,9.787274,-4.828252,-2.983062,-0.137484,5.530356,-0.459467,-4.775136,1.242673,6.722245,-6.389438,-8.874526,-6.480446,0.484347,-6.854076,-2.508806,-3.945036,3.283072,3.584020,-4.629778,9.689447,5.779273,-5.924861,5.442168,-6.960656,-6.304672,-9.457502,-5.849865,-0.197636,7.664630,-4.212305,3.049391,2.496980,-3.434432,6.123836,2.499176,-6.546514,-2.367254,-4.644526,5.054732,0.016726,3.703176,-3.164609,-7.298486,-5.249631,4.589024,8.109113,7.512870,2.557676,8.363040,-6.648484,6.971918,6.746534,-2.253505,-8.470606,2.450650,3.029367,8.294573,-7.423651,-3.637847,5.759314,5.236663,6.268382,-4.972976,-8.575098,9.636708,-7.763576,-0.767512,-3.672330,0.614025,-8.020847,-5.599279,-4.978540,0.770654,-7.669448,7.998980,-1.811497,-9.691539,1.574909,-0.117491,6.747003,-0.278344,6.928527,1.540411,8.141988,-7.388145,3.353586,4.725822,-1.301225,-0.497678,5.816219,1.871873,8.668184,7.320312,-5.400433,-6.734263,2.675421,4.473059,3.422874,-7.058439,6.711116,-2.558595,-4.840391,-5.732696,8.032835,8.249153,-2.342371,-7.697892,-5.540268,-2.858121,1.223193,-7.865962,-4.174196,2.193784,9.696217,-4.571996,-3.288305,9.553852,6.078950,-2.323029,4.921294,4.087548,-9.165135,9.058845,7.112395,0.103306,-6.274937,0.593607,1.337780,7.380310,-1.893039,8.730107,-1.758381,4.924933,0.067510,-6.947264,2.562374,-1.959169,0.455360,4.088624,-0.056551,-2.797718,-4.857687,4.169573,-9.837948,-7.592403,-5.951725,-3.960777,2.293381,-5.309222,4.868160,0.244599,-4.586867,-3.964011,2.125654,-0.162115,-9.578058,-1.328279,-0.142165,-3.909222,-8.136447,-8.713457,-6.658674,-7.462428,-9.841396,-4.477501,4.553718,7.567090,-9.933251,-4.341044,2.856747,5.602319,1.820469,-0.243295,1.774169,-1.003851,-2.293006,-6.983134,7.121823,-2.025295,-1.978901,6.873145,-4.556135,6.102760,-9.979289,-7.261123,0.879812,4.044132,8.695923,-0.004830,-0.716316,7.021629,7.039490,-7.192933,-6.502412,1.399408,4.130985,-5.439666,1.101608,-2.617287,2.087149,9.963364,-2.823409,3.375542,-5.106549,-3.340522,1.404482,9.091761,-6.637723,0.855999,-4.408403,7.216346,-1.062372,9.773655,7.144783,9.968048,-2.363006,7.035038,-7.835325,9.807350,3.391707,7.615041,2.570194,5.128994,-8.552979,-4.853118,7.438794,2.037585,3.788408,7.915077,-6.416456,-4.774482,4.474747,-1.982431,-8.157454,1.260561,9.142702,-3.225067,0.410316,-9.347721,0.519133,6.397178,-7.429618,-2.549833,1.490843,8.423753,-0.912504,9.201037,7.507823,6.258115,2.262928,0.432963,-4.898649,1.355834,-2.031543,3.276552,-4.065548,-0.023577,3.308198,-7.996947,3.145887,2.493531,6.914213,0.269164,-2.523131,1.973549,9.656648,-1.745766,-6.120626,-4.106770,-3.896146,-4.000526,-7.497245,2.500887,5.098391,-7.446846,4.633939,3.893576,-4.670948,-2.429557,6.574578,-2.682021,-9.998898,-4.342602,-0.302686,7.706337,3.609445,5.680820,6.016931,9.456547,9.176298,0.108610,6.900139,9.773230,3.834452,-5.477374,1.771723,-6.146831,-2.762901,0.343904,9.329587,7.982081,-2.629102,-1.762741,6.417731,7.463553,5.573402,-8.402164,2.109383,8.723110,0.420298,6.647922,-3.051599,-8.839651,5.541196,-7.144751,4.124187,9.132613,-2.475269,7.853566,0.334053,-7.016168,0.157191,-7.257871,6.980272,8.455736,5.586570,7.930991,-9.456698,-4.064082,8.851984,-0.151746,-2.439524,1.816060,3.109322,6.817296,7.328516,-1.095651,-1.521776,1.012132,-5.041611,-3.517363,2.654314,7.121635,8.949040,2.925709,-2.048785,9.088419,9.441313,-6.569424,2.982107,-7.374704,2.945093,3.371052,0.284020,7.523894,-9.559317,3.001807,-4.577411,9.418386,1.800370,-9.425666,5.972224,-1.579705,-5.162937,6.517221,-2.031273,-0.091118,-1.312616,1.712049,-5.293611,9.956033,-9.085555,5.388864,-6.466565,0.015504,3.072638,0.677513,7.144083,-3.599714,-0.822690,-5.190275,5.993799,4.884323,-5.956694,3.129829,8.310728,0.066544,1.648809,-3.277600,-1.896252,2.933623,-0.390097,-1.196601,8.097233,4.350774,-5.263686,-6.932238,9.461265,-5.279319,8.478007,-3.900817,-7.147975,-2.443592,-6.823622,1.009010,-7.141766,9.337599,-5.620247,7.787723,-2.301149,3.752666,-2.966388,-5.438285,1.642389,5.399945,-9.416321,-4.688373,-8.429996,-0.155713,9.478774,4.004700,8.198810,-2.493155,-7.645541,1.181463,3.150527,5.353242,-5.630307,5.468651,-2.447590,-0.224159,-6.997615,-1.030571,-3.804139,-9.975387,-0.724854,3.989189,-3.823795,8.401661,5.444935,2.775052,-2.853976,-5.477299,-5.560224,-6.423984,4.541034,5.726475,6.763030,-3.358088,-5.765447,-3.251672,-2.653924,-0.290310,3.010615,6.593322,-7.553991,4.283987,5.922458,-2.850882,6.209467,8.179654,0.881546,0.389087,-6.571345,-5.968344,-5.776412,9.595803,1.510813,6.812041,-3.417419,3.426898,3.129540,0.210556,0.171118,-5.387506,-9.207369,8.626486,-8.053176,3.890339,-4.621975,6.574649,-9.799314,8.788369,3.870219,-6.769227,2.571338,-1.016510,7.638468,3.425900,5.295023,6.506636,6.117327,-1.288068,7.289616,-4.279805,9.589907,-8.407151,8.314392,1.558474,-7.730371,-8.650332,-3.821133,-4.843551,-8.245265,-4.085023,6.538580,9.379771,-1.399353,-4.324195,9.844656,2.135832,1.853241,-0.061747,1.107083,2.005996,-7.262112,6.839308,-3.687433,-7.909347,5.872680,9.827974,-6.276656,-1.599743,-2.856242,2.054778,7.684531,-3.095182,-8.735391,9.038368,7.425988,-2.499250,-0.645300,-2.333204,1.974867,2.935600,8.097311,-9.079468,-4.624144,-5.727851,4.879485,-6.294491,-7.507294,7.984667,-4.124404,-4.569209,3.161100,2.967216,-1.375107,1.291352,-4.796509,-2.291468,1.363440,4.228856,2.627915,-8.013377,0.389085,-3.795170,9.982568,6.203918,-1.225215,6.778681,-8.822509,-4.471296,-1.330821,-6.345448,-5.345006,-4.089891,9.406614,9.821925,0.576683,-1.990183,0.971642,-7.716391,-0.308266,-2.557356,0.815442,9.016934,-9.500509,-2.165315,1.852197,6.639878,-8.913563,9.499985,6.070339,-0.943550,-0.589781,-6.641846,6.617961,-1.367341,-9.889792,8.531292,6.068583,1.288989,-6.792378,-4.785821,-7.662089,0.213524,-6.857562,2.881393,-0.171933,-7.357811,-6.427931,-7.124806,-7.934475,3.287259,7.258457,-6.943621,7.416852,-5.922400,-1.917718,3.442016,-5.508624,2.179852,5.862195,-2.887830,-4.494295,-6.467355,0.858628,5.109786,-1.870735,-6.917421,5.985630,-0.361684,-5.643087,-1.118609,0.318161,-3.797251,-7.556901,-0.078635,-2.382446,4.420547,-1.706582,5.942159,-0.882751,5.357629,2.181997,-0.757433,-8.456620,-4.292959,9.468287,0.064005,-8.933489,-9.456215,0.238416,9.602020,-9.692134,7.877904,-7.757609,-9.516233,6.344821,9.954007,-0.783976,5.387957,-7.384456,4.352431,-0.761030,3.617242,-3.387630,1.359150,-7.782738,8.587718,-3.538388,4.988833,1.687336,5.989190,5.600903,-2.850950,0.340500,0.468150,4.123225,4.079085,9.576995,-8.569099,4.151363,-7.617986,-5.287305,-2.039998,-8.703957,-4.328271,8.448185,-3.248016,-6.411814,-2.958653,-3.939568,-1.550239,3.967576,2.263088,-3.920453,-9.555172,7.258400,6.018222,9.071773,-0.617977,-6.883815,1.790558,9.040150,-3.875209,-6.749279,0.848175,-5.755729,-8.378570,2.910198,2.590062,-4.983355,7.411669,-7.497681,1.619239,-2.726330,4.667315,-0.675006,8.028776,-7.856085,-4.620845,-6.093167,2.860095,8.213405,-9.240375,5.985434,-8.488197,-7.185050,9.838946,-1.599508,-0.295646,9.901472,8.054126,-1.909302,7.045674,7.980469,-1.945581,0.575213,-9.347222,4.194668,3.185243,-1.530172,-5.540321,-0.324617,6.152777,7.561885,4.456215,3.341565,-7.630840,7.901364,-5.008185,7.438821,3.143614,-5.289802,8.413902,-7.489094,-1.476961,-2.607927,4.861980,6.021713,-6.890365,-0.588667,3.186086,-7.823438,-4.362520,4.865933,-9.075679,9.743784,0.583551,-9.562795,9.307919,6.906070,5.430269,1.090647,-7.670754,-7.967461,1.370556,0.992701,-9.828701,-3.158404,0.112513,-1.327099,9.780495,7.696452,3.611755,2.508937,4.836137,8.946835,9.597009,0.432961,0.488514,-9.181389,9.733826,6.661060,7.749728,-9.659520,0.490698,8.520503,-8.849925,0.804120,-7.476497,-8.489663,4.935492,-8.330741,-3.860833,0.769923,8.448376,-0.681176,1.547337,3.143850,-2.025711,2.759126,-6.800090,-2.511207,-9.478260,-7.677572,-0.183907,-8.960589,-7.747284,-1.482125,-4.074710,-5.026163,6.744734,-2.178811,-1.826439,-4.619674,7.779246,-6.261063,-0.745061,-2.644676,-3.436973,5.728886,-2.837543,1.107759,-0.885685,2.622528,3.102045,4.643821,8.869459,0.030752,1.757792,-0.615560,3.871120,-3.702261,4.877622,-6.472998,8.150672,-0.258740,0.102327,0.851058,-3.843757,0.443461,-1.071428,-9.492953,-8.130697,-5.771495,4.017075,9.099963,5.158740,-5.785879,-7.067947,5.922570,-7.838739,4.592314,1.226337,-0.321816,-3.919731,1.543626,-8.084294,-6.830671,7.273600,-3.513873,9.907835,4.165850,5.847994,3.885598,9.595715,6.112415,-2.860475,0.314428,9.399748,7.840602,4.637473,5.911467,4.875299,5.711514,-3.759968,7.969593,5.121812,-2.549442,7.931744,-5.566033,-8.012269,-2.426621,5.456172,-2.236782,6.259616,-8.987517,-6.579697,-9.651188,5.509642,-5.148780,8.829726,7.878139,0.803833,9.431982,9.574881,5.227712,-0.776845,-9.236102,2.081624,-6.573237,4.045119,-4.272376,-4.849485,5.375382,-7.969959,1.138938,5.778549,-3.539141,4.309685,7.110482,4.335236,-3.211145,2.473098,2.954537,-3.621541,9.980889,-5.345543,8.255333,9.536570,-2.770282,4.726850], dtype = "float64")#candidate|6744|(2535,)|const|float64
const_6745 = relay.const([[-6.915487,-5.605971,1.367333,1.299881,-6.337767,3.317004,-1.704617,-9.372607,-3.460063,-2.516912,-6.366763,3.127746,-0.878834,-2.059806,-1.361651,-0.705706,6.344826,3.058505,-1.831972,0.630524,2.312487,1.201603,5.332677,2.710955,4.493950,8.918728,-9.040665,2.331058,-4.169578,-4.718932,9.924829,7.828872,9.263435,0.639382,4.043110,-9.702986,-6.534955,-2.372107,9.151351,5.680143,1.123575,-5.856966,-7.932056,3.005031,-4.155718,6.761428,-6.989261,-3.872321,7.114368,3.865563,-6.260534,-9.570244,9.166406,-9.851569,-8.843750,-7.562562,7.634746,6.407916,-2.161588,-1.151652,-3.444361,3.841728,-7.272401,5.782144,7.796516,-5.556323,-9.240496,-5.198284,3.597520,0.980702],[2.074128,-5.520622,-4.521595,-9.460891,-6.519433,8.141392,-6.324292,0.887848,-9.067096,5.052552,-9.305523,7.041156,-5.800142,-8.220239,4.890021,6.894847,2.470430,0.043966,7.649640,8.652176,-1.070243,4.379469,3.728121,7.009413,3.251199,0.576927,-9.557949,-7.357804,3.131550,-2.114095,-5.018484,5.625797,3.299260,-7.348788,-0.560592,-2.667371,-8.670825,0.443045,5.965182,-8.434865,1.380303,-3.459186,-3.888235,-3.173605,7.819241,-9.224272,-5.864629,-2.251848,-2.720923,1.328343,-6.677106,8.060514,6.861745,-6.004308,7.096422,3.004616,-9.730664,-0.096954,-2.903362,-0.719045,-8.214272,-3.657530,-2.202571,-7.270655,9.203110,7.250854,-3.590106,-5.381174,-7.711568,-6.474237],[2.906622,-5.619272,6.658618,6.188648,-3.637909,0.701496,-9.280411,4.724507,-9.172512,-4.894385,5.286008,4.028906,-3.723125,5.567952,-9.850769,0.352321,1.184838,-8.368140,-1.400186,3.809479,2.670967,4.090454,-5.599343,5.567913,0.918668,-3.383379,3.348269,-7.323980,1.695104,-6.420325,3.959085,-3.873618,-3.770495,6.338802,-5.378355,6.354364,0.437735,2.909504,8.156349,1.105445,-8.661156,-2.121247,6.664844,-6.916271,-7.133895,8.432514,-9.498180,6.013344,-0.807803,7.915352,2.979366,-1.562645,-1.387022,-9.851911,-4.305387,-4.053757,6.868137,5.669198,9.367025,1.466767,-9.478902,4.563373,-3.207737,9.118445,4.724889,9.544211,4.072653,1.266908,-6.967450,-3.803772],[6.086504,6.482001,1.704469,-4.390206,-6.629029,-9.494174,-3.716032,7.915784,-8.353719,6.854673,-4.878533,-5.613168,-5.458227,8.946024,4.515137,-8.687808,-7.742014,8.295988,-2.334953,-8.851010,-2.612966,6.559074,-0.535875,5.990781,-5.468107,-6.814036,-2.709627,-9.912779,-4.099688,0.857475,4.606887,6.095585,1.150198,9.743123,-4.137529,8.732406,9.305625,5.173929,5.264440,-2.004083,2.404820,-8.125573,-9.667976,-5.405494,-7.014185,-2.827390,9.445896,0.961537,6.941457,-9.746891,-0.313296,-6.877558,4.765155,8.218054,-8.168474,-1.795087,-6.783474,6.340360,0.789138,-7.563167,4.567848,-1.938684,-8.659517,-0.770429,-8.265414,2.825201,-8.947475,-3.588539,3.589778,-5.863000],[-3.455590,8.615520,-2.054260,9.626349,-6.291992,4.720162,-1.253145,4.207138,-3.048596,-5.091364,-4.039443,9.654462,1.648764,-7.785999,-2.669365,3.490769,3.028394,4.947619,9.117439,-6.037896,-5.809330,-4.118536,7.187264,1.459046,5.972622,-2.408450,6.295576,-9.450094,-0.529058,3.477857,9.541546,9.087591,1.491809,-6.873016,6.861999,9.579856,2.321488,-6.826032,1.533209,-8.001609,-2.911953,-9.041218,-6.259826,-1.946932,-5.626013,6.129333,-6.453468,-7.677115,-7.062472,9.861514,1.829868,2.368202,-0.477499,7.575168,-5.147225,-9.977325,6.310052,-0.200082,7.043681,-1.273051,8.131912,0.538269,-3.599211,7.289405,7.830901,-7.138117,3.848429,2.538033,2.258623,4.913943],[-3.425765,-2.692849,6.462540,8.506921,-5.409782,-1.557351,-3.670603,8.111902,8.034587,5.115511,8.078648,-4.131252,1.459223,-3.572054,-9.549631,-1.847878,0.016868,-1.912635,-5.411821,0.658365,0.049879,-7.922647,-1.047819,-6.639152,-0.841325,-9.893987,1.699282,5.457335,-6.185349,-2.803588,9.521881,7.669965,5.917752,8.770695,5.949694,-5.082230,-5.743736,-1.389667,7.813068,9.581209,-3.762889,2.223440,-0.208732,8.957977,8.382733,7.482010,-1.499996,0.008558,2.579999,6.259905,-6.915027,1.902563,-8.740159,7.457906,1.215436,-9.959347,-2.537570,4.181709,-9.878861,8.001831,-6.987457,-5.390999,2.962768,3.799943,6.964182,8.946928,-4.889122,-3.823716,6.188852,-8.532541],[-5.741274,-1.460039,9.890824,5.041465,-4.444295,0.100971,-7.006286,-7.113967,1.285579,-1.240299,-6.740611,-3.697381,-7.586393,-1.028988,-8.128995,-4.270009,5.851979,4.752640,7.738354,-2.822703,8.363935,-9.127928,1.486749,1.084742,-2.182143,0.142099,-7.359629,-4.341844,9.348507,-5.684873,7.957519,-3.926499,3.274906,5.029416,5.792498,8.493963,8.289672,-9.312848,-5.567291,-3.255374,1.363862,1.822241,0.504946,-1.282298,-0.398719,7.394671,-6.377395,-0.626864,6.985175,-5.597374,9.669847,-7.446632,9.719578,-1.349180,-4.015200,8.510609,-2.740037,5.525841,-2.244155,-9.385410,-7.685145,-7.400660,-3.526226,9.487526,1.211702,-8.330690,8.989841,2.485297,3.773709,-4.672919],[-2.284401,2.881602,-0.987386,5.298498,-7.907317,-2.013362,6.281516,5.191835,1.733533,3.926261,-9.363259,-7.217865,-2.188547,3.836634,8.514671,-4.916075,8.795956,-8.002101,-7.269355,-4.068398,-9.441091,-4.083713,6.566160,2.362262,-7.886118,7.233416,-5.645096,-0.032308,-5.984988,-3.332766,1.175904,1.059452,-4.158022,-4.248828,5.740938,3.367375,0.764251,7.981986,-1.850404,-8.644001,-9.185765,1.000122,0.878380,2.763051,5.743625,2.192021,-2.914149,6.759409,-5.275170,-3.838035,-4.817838,6.183805,2.034489,2.595233,0.207673,-3.217197,8.531624,-3.382184,0.093214,-3.059159,2.543557,0.548319,1.394935,-5.590314,-9.731421,6.975766,9.799230,9.077632,-2.480552,-1.352988],[-3.272716,7.209973,-4.558310,-6.355707,2.540666,1.827944,-1.260030,4.224285,0.260263,0.514933,-0.724206,1.452802,-6.964155,-0.681661,2.595392,-0.577311,6.391543,7.294489,-1.434124,1.394027,2.397325,-7.412075,0.579986,3.191002,-6.032517,-9.552136,7.696577,-2.651176,-4.425949,-4.121759,5.413115,1.770180,-0.921464,-4.999665,-3.183099,9.136873,-5.106796,5.707749,2.066822,3.704772,-0.780578,-1.635115,8.182337,5.577994,0.363865,1.660730,-3.856823,1.042183,2.996160,1.366144,2.994957,3.941717,8.608880,6.208019,5.462609,-1.452293,-9.236412,-4.041514,6.118150,-7.748429,9.814966,8.479362,-2.656149,9.304773,-4.859560,-3.340430,1.370708,-8.114521,-8.052286,1.355265],[-2.865437,9.087412,-6.035340,-9.861973,8.896152,-9.598863,-8.509575,2.841357,-8.479671,-1.540932,9.728625,-1.936103,2.645199,9.850864,-9.640563,7.001366,-1.018976,8.682578,-0.156903,-8.125644,-1.495870,8.286029,-4.964990,-4.592210,2.558152,-0.233960,2.895163,2.916677,0.169519,-6.143783,6.340243,-1.378680,8.308492,-9.799474,0.853636,7.002896,0.783456,-5.675942,9.860397,-8.320105,9.510466,-9.613676,4.213291,8.293565,-6.702806,-4.304431,-6.777593,-6.581542,-5.023777,7.455511,4.928063,-8.733982,9.311761,8.496217,8.279836,6.116284,-3.047083,9.045376,5.749431,-8.696748,-7.784748,5.934476,0.725374,-8.309619,-2.198080,0.769519,9.114024,-2.824600,-1.021757,8.635515],[8.056019,-4.915244,-4.786142,6.117423,3.990643,-3.539887,-5.612604,-5.359751,6.348763,-9.063534,-1.339952,0.637284,2.601941,5.160534,1.220301,8.329425,4.498286,-1.669382,5.014532,-3.186807,7.745477,-3.666960,-5.027001,0.581947,-6.962866,-3.538801,0.339664,-9.585428,2.758062,-9.730446,-9.837708,-1.300369,-4.728158,-2.913065,-9.597821,-1.816780,5.337092,-1.956490,3.745707,2.291091,7.409252,-4.059253,2.356103,1.331120,-7.921561,-0.579820,4.414335,8.291447,7.273650,6.590987,-3.916856,-8.721268,-6.866079,2.147103,-0.383822,0.881744,-0.685236,7.521239,-9.653895,3.193254,-4.296264,-5.851724,-2.186371,7.860746,0.391639,3.443423,-7.676328,1.644498,-9.145038,-6.599344],[9.902867,-9.039050,-2.200751,6.978277,-6.030615,4.325561,-4.802304,-6.288749,9.482749,9.510608,-6.324819,-2.665658,-7.247475,-6.922482,6.274030,2.843685,-4.270125,-3.762272,1.958912,-4.269312,-8.038940,3.851448,8.378118,4.438369,8.561572,3.932041,-6.124129,1.169682,0.853333,6.876966,-4.783650,5.955897,0.733371,9.299779,0.128804,-2.036103,-8.469925,6.394834,-4.312271,-8.785973,9.439073,4.650294,-0.524070,-5.539142,-0.464764,-5.101477,-5.054944,-3.248357,3.437580,9.960254,3.509364,0.931682,9.747836,2.682956,0.400051,3.366636,9.481737,-8.900767,5.750680,4.902859,3.429086,2.119087,7.627535,6.008714,7.598455,3.532849,-1.127124,-5.505113,7.539806,2.729021]], dtype = "float64")#candidate|6745|(12, 70)|const|float64
call_6743 = relay.TupleGetItem(func_4705_call(relay.reshape(const_6744.astype('float64'), [2535,]), relay.reshape(const_6745.astype('float64'), [840,]), ), 3)
call_6746 = relay.TupleGetItem(func_4709_call(relay.reshape(const_6744.astype('float64'), [2535,]), relay.reshape(const_6745.astype('float64'), [840,]), ), 3)
uop_6748 = relay.erf(uop_6731.astype('float32')) # shape=(90, 10)
uop_6750 = relay.erf(uop_6733.astype('float32')) # shape=(90, 10)
uop_6754 = relay.tan(uop_6748.astype('float32')) # shape=(90, 10)
uop_6756 = relay.tan(uop_6750.astype('float32')) # shape=(90, 10)
output = relay.Tuple([call_6716,const_6724,call_6727,call_6743,const_6744,const_6745,uop_6754,])
output2 = relay.Tuple([call_6717,const_6724,call_6728,call_6746,const_6744,const_6745,uop_6756,])
func_6761 = relay.Function([], output)
mod['func_6761'] = func_6761
mod = relay.transform.InferType()(mod)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mutated_mod.get_global_var('func_6761')
call_6762 = func_6761_call()
output = call_6762
func_6763 = relay.Function([], output)
mutated_mod['func_6763'] = func_6763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6493_call = mod.get_global_var('func_6493')
func_6495_call = mutated_mod.get_global_var('func_6495')
call_6862 = func_6493_call()
call_6863 = func_6493_call()
func_4062_call = mod.get_global_var('func_4062')
func_4064_call = mutated_mod.get_global_var('func_4064')
call_6887 = func_4062_call()
call_6888 = func_4062_call()
func_3791_call = mod.get_global_var('func_3791')
func_3794_call = mutated_mod.get_global_var('func_3794')
var_6915 = relay.var("var_6915", dtype = "uint16", shape = (495,))#candidate|6915|(495,)|var|uint16
call_6914 = relay.TupleGetItem(func_3791_call(relay.reshape(var_6915.astype('uint16'), [9, 5, 11])), 0)
call_6916 = relay.TupleGetItem(func_3794_call(relay.reshape(var_6915.astype('uint16'), [9, 5, 11])), 0)
bop_6920 = relay.greater(call_6914.astype('bool'), relay.reshape(var_6915.astype('bool'), relay.shape_of(call_6914))) # shape=(9, 5, 11)
bop_6923 = relay.greater(call_6916.astype('bool'), relay.reshape(var_6915.astype('bool'), relay.shape_of(call_6916))) # shape=(9, 5, 11)
output = relay.Tuple([call_6862,call_6887,bop_6920,])
output2 = relay.Tuple([call_6863,call_6888,bop_6923,])
F = relay.Function([var_6915,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6915,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

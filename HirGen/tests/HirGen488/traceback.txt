==========mod==========
#[version = "0.0.5"]
def @func_6144() -> (Tensor[(2, 14, 5), float64],) {
  %0 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
  %1 = %0.0;
  (%1,)
}

def @func_4606(%var_4570: Tensor[(1001), uint16]) -> (Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %2 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %3 = cast(%var_4570, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %4 = %2.2;
  %5 = cast(%4, dtype="float64") /* ty=Tensor[(594), float64] */;
  %6 = reshape(%3, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %7 = reshape(%5, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %8 = @func_2346(%6, %7) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %9 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %10 = @func_3463() /* ty=Tensor[(2, 14, 5), float64] */;
  %11 = %8.6;
  %12 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %13 = %9.0;
  (%4, %10, %11, %var_4570, %12, %13)
}

def @func_2874(%var_2849: Tensor[(1, 240), float64]) -> (Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) {
  %14 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(2, 14, 5), float32] */;
  %16 = cast(%var_2849, dtype="float64") /* ty=Tensor[(1, 240), float64] */;
  %17 = reshape(%16, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %18 = @func_2779(%17) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) */;
  %19 = cast(%var_2849, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 240), float64] */, dtype="int16") /* ty=Tensor[(9, 240), int16] */;
  %21 = cast(%var_2849, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %22 = log2(%21) /* ty=Tensor[(1, 240), float32] */;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %24 = atan(%15) /* ty=Tensor[(2, 14, 5), float32] */;
  %25 = %18.0;
  %26 = bitwise_and(%19, %20) /* ty=Tensor[(9, 240), int16] */;
  %27 = cos(%23) /* ty=Tensor[(1, 240), float32] */;
  (%24, %25, %26, %27)
}

def @func_6922(%var_6903: Tensor[(9, 240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(594), float64], Tensor[(225), float64], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 240), float32]) {
  %28 = @func_5406() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) */;
  %29 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %30 = @func_4418() /* ty=(Tensor[(594), float64],) */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %32 = %28.0;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %34 = %29.4;
  %35 = cast(%34, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
  %36 = %30.0;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(594), float64] */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %39 = reshape(%31, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), float64] */;
  %40 = reshape(%33, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %41 = reshape(%35, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %42 = reshape(%37, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %43 = reshape(%38, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %44 = @func_3753(%39, %40, %41, %42, %43) /* ty=(Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) */;
  %45 = %44.4;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(9, 240), float64] */;
  %47 = cos(%46) /* ty=Tensor[(9, 240), float64] */;
  %48 = cast(%var_6903, dtype="float32") /* ty=Tensor[(9, 240), float32] */;
  %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(2), int32] */;
  %50 = cast(%47, dtype="float32") /* ty=Tensor[(9, 240), float32] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %52 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %53 = mod(%50, %51) /* ty=Tensor[(9, 240), float32] */;
  (%32, %34, %36, meta[relay.Constant][1] /* ty=Tensor[(225), float64] */, meta[relay.Constant][2] /* ty=Tensor[(240), float64] */, %52, %53)
}

def @func_7652() -> Tensor[(594), float64] {
  %54 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %55 = %54.1;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(594), float64] */;
  sqrt(%56) /* ty=Tensor[(594), float64] */
}

def @func_4942() -> (Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) {
  %57 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
  %58 = %57.2;
  %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 1), float32] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %60 = cast(%58, dtype="float64") /* ty=Tensor[(594), float64] */;
  %61 = cast(%58, dtype="float64") /* ty=Tensor[(594), float64] */;
  %62 = reshape(%61, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %63 = @func_3347(%62) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %65 = reshape(%64, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
  %66 = @func_4663(%65) /* ty=(Tensor[(3, 5, 1), float32],) */;
  %67 = %66.0;
  %68 = cast(%67, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
  %69 = multiply(%59, %60) /* ty=Tensor[(15, 594), float64] */;
  %70 = %63.2;
  %71 = acosh(%68) /* ty=Tensor[(3, 5, 1), float32] */;
  (%69, %70, %71)
}

def @func_5207(%var_5153: Tensor[(120, 2), float64], %var_5186: Tensor[(120, 2), float64]) -> (Tensor[(120, 2), bool], Tensor[(120, 2), bool], Tensor[(2, 14, 5), float64]) {
  %72 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %73 = %72.2;
  %74 = cast(%var_5153, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(2), int32] */;
  %76 = cast(%73, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %78 = cast(%var_5186, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %79 = shape_of(%var_5153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %80 = cast(%var_5153, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %82 = maximum(%80, %81) /* ty=Tensor[(120, 2), float32] */;
  %83 = cast(%73, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(2), int32] */;
  %85 = cast(%82, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %87 = less_equal(%76, %77) /* ty=Tensor[(120, 2), bool] */;
  %88 = greater(%85, %86) /* ty=Tensor[(120, 2), bool] */;
  %89 = @func_4766() /* ty=Tensor[(2, 14, 5), float64] */;
  (%87, %88, %89)
}

def @func_7081() -> (Tensor[(2, 14, 5), float64],) {
  %90 = @func_4715() /* ty=Tensor[(2, 14, 5), float64] */;
  (%90,)
}

def @func_8711() -> (Tensor[(2, 14, 5), float64],) {
  %91 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%91,)
}

def @func_7874(%var_7860: bool) -> Tensor[(14, 4, 6), bool] {
  %92 = cast(%var_7860, dtype="bool") /* ty=bool */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 4, 6), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
  logical_and(%92, %93) /* ty=Tensor[(14, 4, 6), bool] */
}

def @func_5110(%var_5073: Tensor[(52), float32]) -> (Tensor[(594), float64], Tensor[(4, 60), float64], Tensor[(52), float32], Tensor[(390, 2), float32], Tensor[(2, 14, 5), float64]) {
  %94 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
  %95 = cast(%var_5073, dtype="float32") /* ty=Tensor[(52), float32] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(390, 2), float32] */, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
  %97 = reshape(%95, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float32] */;
  %98 = reshape(%96, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float32] */;
  %99 = @func_3137(%97, %98) /* ty=(Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) */;
  %100 = %94.2;
  %101 = %99.1;
  %102 = @func_4464() /* ty=Tensor[(2, 14, 5), float64] */;
  (%100, %101, %var_5073, meta[relay.Constant][5] /* ty=Tensor[(390, 2), float32] */, %102)
}

def @func_2048() -> Tensor[(2, 14, 5), float64] {
  %103 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %103.0
}

def @func_1669(%var_1659: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), uint8],) {
  %104 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  %105 = cast(%var_1659, dtype="uint8") /* ty=Tensor[(2, 14, 5), uint8] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="uint8") /* ty=Tensor[(2, 14, 5), uint8] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %109 = right_shift(%107, %108) /* ty=Tensor[(2, 14, 5), uint8] */;
  (%109,)
}

def @func_8827() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %110 = @func_3981() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) */;
  %111 = @func_8532() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) */;
  %112 = %110.2;
  %113 = %111.1;
  (%112, %113)
}

def @func_3380(%var_3353: Tensor[(1, 15, 14), float32], %var_3368: Tensor[(140), float64]) -> (Tensor[(?, 15, 14), float32], Tensor[(1, 15, 14), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 8, 11), float32], Tensor[(528), int8], Tensor[(140), float64]) {
  %114 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 14), float32] */;
  %115 = shape_of(%var_3353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%var_3353, dtype="float32") /* ty=Tensor[(1, 15, 14), float32] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %118 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 15, 14), float32] */, dtype="float64") /* ty=Tensor[(1, 15, 14), float64] */;
  %119 = cast(%var_3368, dtype="float64") /* ty=Tensor[(140), float64] */;
  %120 = reshape(%119, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %121 = @func_1669(%120) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %123 = cast(meta[relay.Constant][7] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %124 = reshape(%122, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %125 = reshape(%123, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %126 = @func_1426(%124, %125) /* ty=(Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) */;
  %127 = cast(%var_3368, dtype="float64") /* ty=Tensor[(140), float64] */;
  %128 = divide(%116, %117) /* ty=Tensor[(?, 15, 14), float32] */;
  %129 = atanh(%118) /* ty=Tensor[(1, 15, 14), float64] */;
  %130 = %121.0;
  %131 = %126.1;
  %132 = acos(%127) /* ty=Tensor[(140), float64] */;
  (%128, %129, %130, %131, meta[relay.Constant][7] /* ty=Tensor[(528), int8] */, %132)
}

def @func_1962() -> Tensor[(2, 14, 5), float64] {
  @func_1633() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_7468(%var_7459: Tensor[(16, 5, 4), float64]) -> Tensor[(16, 5, 4), float64] {
  %133 = cast(%var_7459, dtype="float64") /* ty=Tensor[(16, 5, 4), float64] */;
  sigmoid(%133) /* ty=Tensor[(16, 5, 4), float64] */
}

def @func_2088() -> (Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) {
  %134 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %135 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 14, 5), float64] */, dtype="bool") /* ty=Tensor[(2, 14, 5), bool] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%134, dtype="bool") /* ty=Tensor[(2, 14, 5), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %139 = cast(meta[relay.Constant][9] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %140 = cast(meta[relay.Constant][9] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %141 = reshape(%139, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %142 = reshape(%140, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %143 = @func_330(%141, %142) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %144 = greater_equal(%137, %138) /* ty=Tensor[(2, 14, 5), bool] */;
  %145 = %143.1;
  (%144, %145, meta[relay.Constant][9] /* ty=Tensor[(594), float64] */)
}

def @func_5406() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) {
  %146 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %147 = cast(%146, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %148 = reshape(%147, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %149 = @func_1669(%148) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %150 = %149.0;
  (%146, %150)
}

def @func_8144() -> (Tensor[(594), float64],) {
  %151 = @func_6415() /* ty=Tensor[(594), float64] */;
  (%151,)
}

def @func_4805() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) {
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %153 = reshape(%152, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %154 = @func_2779(%153) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) */;
  %155 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %156 = %154.0;
  (%155, %156, meta[relay.Constant][10] /* ty=Tensor[(120, 2), float64] */)
}

def @func_8220(%var_8204: Tensor[(1, 8, 14), uint32], %var_8205: Tensor[(13, 8, 14), uint32]) -> Tensor[(13, 8, 14), bool] {
  %157 = cast(%var_8204, dtype="bool") /* ty=Tensor[(1, 8, 14), bool] */;
  %158 = cast(%var_8205, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  greater(%157, %158) /* ty=Tensor[(13, 8, 14), bool] */
}

def @func_5733(%var_5692: Tensor[(96), uint8]) -> (Tensor[(2, 14, 5), float64], Tensor[(6, 2, 8), bool], Tensor[(96), uint8], Tensor[(1, 15, 14), float64], Tensor[(210), float32], Tensor[(14, 12, 8), uint32], Tensor[(1344), uint32], Tensor[(2, 14, 5), float64]) {
  %159 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %160 = cast(%var_5692, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %161 = reshape(%160, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), uint8] */;
  %162 = @func_5041(%161) /* ty=(Tensor[(6, 2, 8), uint8], Tensor[(6, 2, 8), bool]) */;
  %163 = cast(meta[relay.Constant][11] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %164 = %159.0;
  %165 = cast(%164, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %166 = reshape(%163, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), float32] */;
  %167 = reshape(%165, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %168 = @func_3380(%166, %167) /* ty=(Tensor[(?, 15, 14), float32], Tensor[(1, 15, 14), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 8, 11), float32], Tensor[(528), int8], Tensor[(140), float64]) */;
  %169 = cast(meta[relay.Constant][12] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %170 = cast(meta[relay.Constant][12] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %171 = reshape(%169, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), uint32] */;
  %172 = reshape(%170, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), uint32] */;
  %173 = @func_4402(%171, %172) /* ty=(Tensor[(14, 12, 8), uint32], Tensor[(14, 12, 8), float64]) */;
  %174 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %175 = %162.1;
  %176 = %168.1;
  %177 = %173.0;
  %178 = %174.0;
  (%164, %175, %var_5692, %176, meta[relay.Constant][11] /* ty=Tensor[(210), float32] */, %177, meta[relay.Constant][12] /* ty=Tensor[(1344), uint32] */, %178)
}

def @func_7850() -> (Tensor[(120, 2), float64],) {
  %179 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %180 = %179.2;
  (%180,)
}

def @func_2598(%var_2547: Tensor[(1001), uint16], %var_2591: Tensor[(2, 168), uint64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64], Tensor[(1001), uint16], Tensor[(7, 3, 16), uint64], Tensor[(2, 168), uint64]) {
  %181 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %182 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %183 = cast(%var_2547, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %184 = %182.1;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %186 = reshape(%183, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %187 = reshape(%185, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %188 = @func_2346(%186, %187) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %189 = cast(%var_2591, dtype="uint64") /* ty=Tensor[(2, 168), uint64] */;
  %190 = reshape(%189, newshape=[7, 3, 16]) /* ty=Tensor[(7, 3, 16), uint64] */;
  %191 = @func_2222(%190) /* ty=(Tensor[(7, 3, 16), uint64],) */;
  %192 = %181.0;
  %193 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %194 = %188.3;
  %195 = %191.0;
  (%192, %193, %184, %194, %var_2547, %195, %var_2591)
}

def @func_3428(%var_3393: Tensor[(1001), uint16], %var_3394: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(2, 14, 5), uint8], Tensor[(2, 14, 5), float64]) {
  %196 = cast(%var_3393, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %197 = cast(%var_3394, dtype="float64") /* ty=Tensor[(594), float64] */;
  %198 = reshape(%196, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %199 = reshape(%197, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %200 = @func_2346(%198, %199) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %201 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %202 = cast(%201, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %203 = reshape(%202, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %204 = @func_1669(%203) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %205 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %206 = %200.0;
  %207 = %204.0;
  %208 = %205.0;
  (%201, %206, %var_3393, %var_3394, %207, %208)
}

def @func_6415() -> Tensor[(594), float64] {
  %209 = @func_4418() /* ty=(Tensor[(594), float64],) */;
  %209.0
}

def @func_5452() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %210 = @func_4464() /* ty=Tensor[(2, 14, 5), float64] */;
  %211 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%210, %211)
}

def @func_6218() -> (Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) {
  %212 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %213 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %214 = %213.4;
  %215 = cast(%214, dtype="float64") /* ty=Tensor[(1, 1001), float64] */;
  %216 = cosh(%215) /* ty=Tensor[(1, 1001), float64] */;
  %217 = cast(%214, dtype="bool") /* ty=Tensor[(1, 1001), bool] */;
  %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(2), int32] */;
  %219 = cast(%216, dtype="bool") /* ty=Tensor[(1, 1001), bool] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %221 = less(%219, %220) /* ty=Tensor[(?, 1001), bool] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(?, 1001), float32] */;
  %223 = %212.0;
  %224 = atan(%222) /* ty=Tensor[(?, 1001), float32] */;
  (%223, %224)
}

def @func_4766() -> Tensor[(2, 14, 5), float64] {
  %225 = @func_4022() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %225.0
}

def @func_7114() -> Tensor[(2, 14, 5), float64] {
  %226 = @func_6404() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) */;
  %226.0
}

def @func_6368() -> (Tensor[(9, 11, 6), int16], Tensor[(?, 1001), float64]) {
  %227 = @func_6062() /* ty=(Tensor[(9, 11, 6), int16],) */;
  %228 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %229 = %228.1;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(?, 1001), float64] */;
  %231 = %227.0;
  %232 = rsqrt(%230) /* ty=Tensor[(?, 1001), float64] */;
  (%231, %232)
}

def @func_7203() -> Tensor[(15, 594), float64] {
  %233 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %234 = %233.0;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(15, 594), float64] */;
  log2(%235) /* ty=Tensor[(15, 594), float64] */
}

def @func_2779(%var_2772: Tensor[(240, 1), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) {
  %236 = cast(%var_2772, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %237 = reshape(%236, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %238 = @func_1834(%237) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) */;
  %239 = %238.4;
  %240 = cast(%var_2772, dtype="uint32") /* ty=Tensor[(240, 1), uint32] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(2), int32] */;
  %242 = cast(%239, dtype="uint32") /* ty=Tensor[(4, 60), uint32] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %244 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %245 = subtract(%242, %243) /* ty=Tensor[(4, 60), uint32] */;
  (%244, %245)
}

def @func_5041(%var_5021: Tensor[(6, 2, 8), uint8]) -> (Tensor[(6, 2, 8), uint8], Tensor[(6, 2, 8), bool]) {
  %246 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 2, 8), uint8] */, dtype="uint8") /* ty=Tensor[(6, 2, 8), uint8] */;
  %247 = shape_of(%var_5021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%var_5021, dtype="uint8") /* ty=Tensor[(6, 2, 8), uint8] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %250 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 2, 8), uint8] */, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %251 = shape_of(%var_5021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_5021, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %254 = bitwise_xor(%248, %249) /* ty=Tensor[(6, 2, 8), uint8] */;
  %255 = logical_and(%252, %253) /* ty=Tensor[(6, 2, 8), bool] */;
  (%254, %255)
}

def @func_6695() -> Tensor[(3, 5, 1), float32] {
  %256 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %256.2
}

def @func_3100() -> (Tensor[(2, 14, 5), float64],) {
  %257 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%257,)
}

def @func_7268() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %258 = @func_4418() /* ty=(Tensor[(594), float64],) */;
  %259 = %258.0;
  %260 = cast(%259, dtype="float64") /* ty=Tensor[(594), float64] */;
  %261 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  %262 = @func_7114() /* ty=Tensor[(2, 14, 5), float64] */;
  %263 = erf(%260) /* ty=Tensor[(594), float64] */;
  (%261, %262, %263)
}

def @func_6625() -> Tensor[(2, 14, 5), float64] {
  @func_1962() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_8078() -> (Tensor[(2, 14, 5), float64],) {
  %264 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  (%264,)
}

def @func_8190() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %265 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %266 = @func_8078() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %267 = @func_7744() /* ty=Tensor[(2, 14, 5), float64] */;
  %268 = %265.0;
  %269 = %266.0;
  (%267, %268, %269)
}

def @func_8532() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) {
  %270 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %271 = cast(meta[relay.Constant][14] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %272 = reshape(%271, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %273 = @func_2421(%272) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) */;
  %274 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %275 = %270.0;
  %276 = %273.3;
  (%274, %275, %276, meta[relay.Constant][14] /* ty=Tensor[(1001), uint16] */)
}

def @func_2421(%var_2399: Tensor[(1001), uint16]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) {
  %277 = cast(%var_2399, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %278 = cast(%var_2399, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %279 = cast(meta[relay.Constant][15] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %280 = reshape(%277, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %281 = reshape(%278, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %282 = reshape(%279, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %283 = @func_677(%280, %281, %282) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %284 = %283.1;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(13, 11, 7), float64] */;
  %286 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %287 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %288 = acosh(%285) /* ty=Tensor[(13, 11, 7), float64] */;
  (%286, %287, %var_2399, meta[relay.Constant][15] /* ty=Tensor[(594), float64] */, %288)
}

def @func_2222(%var_2218: Tensor[(7, 3, 16), uint64]) -> (Tensor[(7, 3, 16), uint64],) {
  %289 = cast(%var_2218, dtype="uint64") /* ty=Tensor[(7, 3, 16), uint64] */;
  %290 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(7, 3, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(7, 3, 16), uint64] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %293 = add(%291, %292) /* ty=Tensor[(7, 3, 16), uint64] */;
  (%293,)
}

def @func_5765() -> (Tensor[(3, 5, 1), float32],) {
  %294 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %295 = %294.2;
  (%295,)
}

def @func_4022() -> (Tensor[(2, 14, 5), float64],) {
  %296 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  (%296,)
}

def @func_4402(%var_4368: Tensor[(14, 12, 8), uint32], %var_4369: Tensor[(14, 12, 8), uint32]) -> (Tensor[(14, 12, 8), uint32], Tensor[(14, 12, 8), float64]) {
  %297 = cast(%var_4369, dtype="uint32") /* ty=Tensor[(14, 12, 8), uint32] */;
  %298 = shape_of(%var_4368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%var_4368, dtype="uint32") /* ty=Tensor[(14, 12, 8), uint32] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %301 = cast(%var_4368, dtype="float64") /* ty=Tensor[(14, 12, 8), float64] */;
  %302 = add(%299, %300) /* ty=Tensor[(14, 12, 8), uint32] */;
  %303 = sqrt(%301) /* ty=Tensor[(14, 12, 8), float64] */;
  (%302, %303)
}

def @func_7314() -> Tensor[(2, 14, 5), bool] {
  %304 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %304.0
}

def @func_7451() -> (Tensor[(2, 14, 5), float64],) {
  %305 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  (%305,)
}

def @func_3981() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) {
  %306 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %307 = cast(meta[relay.Constant][17] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %308 = cast(meta[relay.Constant][18] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %309 = reshape(%307, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %310 = reshape(%308, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %311 = @func_2346(%309, %310) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %312 = %306.0;
  %313 = @func_3880() /* ty=Tensor[(2, 14, 5), float64] */;
  %314 = %311.0;
  (%312, %313, %314, meta[relay.Constant][17] /* ty=Tensor[(1001), uint16] */, meta[relay.Constant][18] /* ty=Tensor[(594), float64] */)
}

def @func_3753(%var_3692: Tensor[(15, 15, 1), float64], %var_3704: Tensor[(140), float64], %var_3714: Tensor[(1001), uint16], %var_3715: Tensor[(594), float64], %var_3719: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) {
  %315 = cast(%var_3704, dtype="float64") /* ty=Tensor[(140), float64] */;
  %316 = reshape(%315, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %317 = @func_1669(%316) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %318 = cast(%var_3719, dtype="float64") /* ty=Tensor[(240), float64] */;
  %319 = reshape(%318, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %320 = @func_2874(%319) /* ty=(Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) */;
  %321 = cast(%var_3714, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %322 = cast(%var_3715, dtype="float64") /* ty=Tensor[(594), float64] */;
  %323 = reshape(%321, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %324 = reshape(%322, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %325 = @func_2346(%323, %324) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %326 = %325.3;
  %327 = cast(%326, dtype="float32") /* ty=Tensor[(594), float32] */;
  %328 = cast(%var_3692, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
  %329 = cosh(%328) /* ty=Tensor[(15, 15, 1), float64] */;
  %330 = cast(%var_3692, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %334 = mod(%332, %333) /* ty=Tensor[(15, 15, ?), float64] */;
  %335 = cast(%334, dtype="bool") /* ty=Tensor[(15, 15, ?), bool] */;
  %336 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%329, dtype="bool") /* ty=Tensor[(15, 15, 1), bool] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %339 = less(%337, %338) /* ty=Tensor[(15, 15, ?), bool] */;
  %340 = cast(%339, dtype="float64") /* ty=Tensor[(15, 15, ?), float64] */;
  %341 = acos(%340) /* ty=Tensor[(15, 15, ?), float64] */;
  %342 = cast(%341, dtype="float64") /* ty=Tensor[(15, 15, ?), float64] */;
  %343 = %317.0;
  %344 = %320.2;
  %345 = log2(%327) /* ty=Tensor[(594), float32] */;
  %346 = erf(%342) /* ty=Tensor[(15, 15, ?), float64] */;
  %347 = @func_3658() /* ty=Tensor[(2, 14, 5), float64] */;
  (%343, %var_3704, %var_3714, %var_3715, %344, %var_3719, %345, %346, %347)
}

def @func_2942(%var_2891: Tensor[(392), float64], %var_2919: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(7, 8, 7), uint64], Tensor[(392), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %348 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %349 = %348.0;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %351 = reshape(%350, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %352 = @func_2192(%351) /* ty=(Tensor[(2, 14, 5), uint32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %353 = cast(%var_2891, dtype="float64") /* ty=Tensor[(392), float64] */;
  %354 = reshape(%353, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float64] */;
  %355 = @func_992(%354) /* ty=(Tensor[(7, 8, 7), uint64],) */;
  %356 = cast(%var_2919, dtype="float64") /* ty=Tensor[(240), float64] */;
  %357 = reshape(%356, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %358 = @func_1834(%357) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) */;
  %359 = %352.2;
  %360 = %355.0;
  %361 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %362 = %358.2;
  %363 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %364 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%349, %359, %360, %var_2891, %361, %362, %var_2919, %363, %364)
}

def @func_4641() -> Tensor[(594), float64] {
  %365 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %366 = %365.2;
  %367 = cast(%366, dtype="float64") /* ty=Tensor[(594), float64] */;
  %368 = cosh(%367) /* ty=Tensor[(594), float64] */;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(594), float64] */;
  atanh(%369) /* ty=Tensor[(594), float64] */
}

def @func_8008(%var_7977: Tensor[(1001), uint16], %var_7982: Tensor[(1001), uint16], %var_8005: Tensor[(52), float32], %var_8006: Tensor[(780, 1), float32]) -> (Tensor[(2, 14, 5), float64], Tensor[(3, 10, 8), float32], Tensor[(240), float64], Tensor[(1001), uint16], Tensor[(1001), float64], Tensor[(4, ?, 13), bool], Tensor[(52), float32], Tensor[(780, 1), float32]) {
  %370 = cast(meta[relay.Constant][19] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %371 = reshape(%370, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
  %372 = @func_1224(%371) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
  %373 = cast(%var_7977, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %374 = reshape(%373, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %375 = @func_2421(%374) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) */;
  %376 = cast(%var_7982, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %377 = shape_of(%var_7977, dtype="int32") /* ty=Tensor[(1), int32] */;
  %378 = cast(%var_7977, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?), float32] */;
  %380 = floor_divide(%378, %379) /* ty=Tensor[(1001), float32] */;
  %381 = cast(meta[relay.Constant][20] /* ty=Tensor[(1001), float32] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(1), int32] */;
  %383 = cast(%380, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?), float64] */;
  %385 = cast(%var_8005, dtype="float32") /* ty=Tensor[(52), float32] */;
  %386 = cast(%var_8006, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %387 = reshape(%385, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float32] */;
  %388 = reshape(%386, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float32] */;
  %389 = @func_3137(%387, %388) /* ty=(Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) */;
  %390 = @func_7744() /* ty=Tensor[(2, 14, 5), float64] */;
  %391 = %372.0;
  %392 = %375.2;
  %393 = mod(%383, %384) /* ty=Tensor[(1001), float64] */;
  %394 = %389.3;
  (%390, %391, meta[relay.Constant][19] /* ty=Tensor[(240), float64] */, %392, %393, %394, %var_8005, %var_8006)
}

def @func_3347(%var_3322: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) {
  %395 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %396 = cast(%var_3322, dtype="float64") /* ty=Tensor[(594), float64] */;
  %397 = cast(%var_3322, dtype="float64") /* ty=Tensor[(594), float64] */;
  %398 = reshape(%396, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %399 = reshape(%397, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %400 = @func_330(%398, %399) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %401 = %395.0;
  %402 = %400.1;
  (%401, %402, %var_3322)
}

def @func_3919() -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) {
  %403 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %404 = %403.0;
  %405 = cast(%404, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %406 = cast(meta[relay.Constant][21] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %407 = cast(meta[relay.Constant][21] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %408 = reshape(%406, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %409 = reshape(%407, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %410 = @func_330(%408, %409) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %411 = rsqrt(%405) /* ty=Tensor[(2, 14, 5), float64] */;
  %412 = %410.0;
  (%411, %412, meta[relay.Constant][21] /* ty=Tensor[(594), float64] */)
}

def @func_8572(%var_8554: Tensor[(16, 13, 2), float64]) -> (Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float64]) {
  %413 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 13, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
  %414 = log2(%413) /* ty=Tensor[(16, 13, 2), float64] */;
  %415 = cast(%var_8554, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%414, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %419 = cast(%414, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
  %420 = equal(%417, %418) /* ty=Tensor[(16, 13, 2), bool] */;
  %421 = tan(%419) /* ty=Tensor[(16, 13, 2), float64] */;
  (%420, %421)
}

def @func_5980(%var_5965: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), int8],) {
  %422 = @func_5452() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %423 = %422.1;
  %424 = cast(%var_5965, dtype="int8") /* ty=Tensor[(2, 14, 5), int8] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="int8") /* ty=Tensor[(2, 14, 5), int8] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %428 = left_shift(%426, %427) /* ty=Tensor[(2, 14, 5), int8] */;
  (%428,)
}

def @func_3264() -> (Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) {
  %429 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %430 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 66), int8] */, dtype="int8") /* ty=Tensor[(8, 66), int8] */;
  %431 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 66), int8] */, dtype="int8") /* ty=Tensor[(8, 66), int8] */;
  %432 = reshape(%430, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %433 = reshape(%431, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %434 = @func_1426(%432, %433) /* ty=(Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) */;
  %435 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 1001), uint16] */, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
  %436 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %437 = reshape(%435, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %438 = reshape(%436, newshape=[2, 168]) /* ty=Tensor[(2, 168), uint64] */;
  %439 = @func_2598(%437, %438) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64], Tensor[(1001), uint16], Tensor[(7, 3, 16), uint64], Tensor[(2, 168), uint64]) */;
  %440 = %429.0;
  %441 = cast(%440, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %442 = reshape(%441, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %443 = @func_1669(%442) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %444 = %434.0;
  %445 = %439.0;
  %446 = %443.0;
  (%440, %444, meta[relay.Constant][23] /* ty=Tensor[(8, 66), int8] */, %445, meta[relay.Constant][24] /* ty=Tensor[(1, 1001), uint16] */, meta[relay.Constant][25] /* ty=Tensor[(336), uint64] */, %446)
}

def @func_992(%var_976: Tensor[(7, 8, 7), float64]) -> (Tensor[(7, 8, 7), uint64],) {
  %447 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %448 = cos(%447) /* ty=Tensor[(7, 8, 7), float64] */;
  %449 = cast(%var_976, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %450 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(7, 8, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %453 = floor_divide(%451, %452) /* ty=Tensor[(7, 8, 7), float64] */;
  %454 = cast(%453, dtype="uint64") /* ty=Tensor[(7, 8, 7), uint64] */;
  %455 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%448, dtype="uint64") /* ty=Tensor[(7, 8, 7), uint64] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %458 = bitwise_or(%456, %457) /* ty=Tensor[(7, 8, 7), uint64] */;
  (%458,)
}

def @func_3463() -> Tensor[(2, 14, 5), float64] {
  %459 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %459.0
}

def @func_3658() -> Tensor[(2, 14, 5), float64] {
  @func_3173() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_3173() -> Tensor[(2, 14, 5), float64] {
  @func_2048() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_5666(%var_5632: Tensor[(14, 1, 7), float32]) -> Tensor[(14, ?, 7), bool] {
  %460 = cast(%var_5632, dtype="float32") /* ty=Tensor[(14, 1, 7), float32] */;
  %461 = erf(%460) /* ty=Tensor[(14, 1, 7), float32] */;
  %462 = cast(%461, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %463 = shape_of(%var_5632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_5632, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%464, %465) /* ty=Tensor[(14, ?, 7), bool] */
}

def @func_330(%var_299: Tensor[(9, 11, 6), float64], %var_320: Tensor[(9, 11, 6), float64]) -> (Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) {
  %466 = cast(%var_299, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %467 = log(%466) /* ty=Tensor[(9, 11, 6), float64] */;
  %468 = cast(%467, dtype="int16") /* ty=Tensor[(9, 11, 6), int16] */;
  %469 = shape_of(%var_299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_299, dtype="int16") /* ty=Tensor[(9, 11, 6), int16] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %472 = cast(%467, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %473 = cos(%472) /* ty=Tensor[(9, 11, 6), float64] */;
  %474 = cast(%var_320, dtype="int8") /* ty=Tensor[(9, 11, 6), int8] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%473, dtype="int8") /* ty=Tensor[(9, 11, 6), int8] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %478 = logical_xor(%470, %471) /* ty=Tensor[(9, 11, 6), int16] */;
  %479 = bitwise_xor(%476, %477) /* ty=Tensor[(9, 11, 6), int8] */;
  (%478, %479)
}

def @func_5585() -> Tensor[(2, 14, 5), float64] {
  @func_1962() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_4464() -> Tensor[(2, 14, 5), float64] {
  @func_1633() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_5918(%var_5908: Tensor[(15), float32]) -> (Tensor[(3, 5, 1), float32], Tensor[(15), float32], Tensor[(1, 1001), float64]) {
  %480 = cast(%var_5908, dtype="float32") /* ty=Tensor[(15), float32] */;
  %481 = reshape(%480, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
  %482 = @func_4663(%481) /* ty=(Tensor[(3, 5, 1), float32],) */;
  %483 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %484 = %483.4;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(1, 1001), float64] */;
  %486 = %482.0;
  %487 = log10(%485) /* ty=Tensor[(1, 1001), float64] */;
  (%486, %var_5908, %487)
}

def @func_2346(%var_2281: Tensor[(1001, 1), uint16], %var_2282: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %488 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %489 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %490 = cast(%var_2282, dtype="float64") /* ty=Tensor[(594), float64] */;
  %491 = reshape(%488, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %492 = reshape(%489, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %493 = reshape(%490, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %494 = @func_677(%491, %492, %493) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %495 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %496 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %497 = cast(%var_2282, dtype="float64") /* ty=Tensor[(594), float64] */;
  %498 = reshape(%495, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %499 = reshape(%496, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %500 = reshape(%497, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %501 = @func_677(%498, %499, %500) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %502 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %504 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %505 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %506 = %494.3;
  %507 = %501.0;
  %508 = sqrt(%503) /* ty=Tensor[(2, 14, 5), float64] */;
  %509 = %504.0;
  (%505, %506, %var_2281, %var_2282, %507, %508, %509)
}

def @func_6404() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) {
  %510 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %511 = @func_5798() /* ty=(Tensor[(594), float64],) */;
  %512 = %510.1;
  %513 = %511.0;
  %514 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  (%512, %513, %514)
}

def @func_6062() -> (Tensor[(9, 11, 6), int16],) {
  %515 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %516 = %515.1;
  (%516,)
}

def @func_6041() -> (Tensor[(2, 14, 5), float64],) {
  %517 = @func_5406() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) */;
  %518 = %517.0;
  (%518,)
}

def @func_8044() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %519 = @func_6144() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %520 = %519.0;
  %521 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%520, %521)
}

def @func_8303(%var_8275: Tensor[(2, 1001), float64]) -> (Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), uint64], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), float64]) {
  %522 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %523 = @func_6368() /* ty=(Tensor[(9, 11, 6), int16], Tensor[(?, 1001), float64]) */;
  %524 = %523.1;
  %525 = cast(%524, dtype="uint64") /* ty=Tensor[(?, 1001), uint64] */;
  %526 = cast(%var_8275, dtype="uint64") /* ty=Tensor[(2, 1001), uint64] */;
  %527 = cast(%524, dtype="float32") /* ty=Tensor[(?, 1001), float32] */;
  %528 = cast(%var_8275, dtype="float32") /* ty=Tensor[(2, 1001), float32] */;
  %529 = floor_mod(%527, %528) /* ty=Tensor[(2, 1001), float32] */;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(2, 1001), float64] */;
  %531 = %522.1;
  %532 = @func_3463() /* ty=Tensor[(2, 14, 5), float64] */;
  %533 = minimum(%525, %526) /* ty=Tensor[(2, 1001), uint64] */;
  %534 = @func_3658() /* ty=Tensor[(2, 14, 5), float64] */;
  %535 = exp(%530) /* ty=Tensor[(2, 1001), float64] */;
  (%531, %532, %533, %534, %535)
}

def @func_8625(%var_8595: Tensor[(240), float64]) -> (Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(1, 240), float32], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32], Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %536 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %537 = @func_8532() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) */;
  %538 = cast(%var_8595, dtype="float64") /* ty=Tensor[(240), float64] */;
  %539 = reshape(%538, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %540 = @func_2874(%539) /* ty=(Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) */;
  %541 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %542 = @func_6062() /* ty=(Tensor[(9, 11, 6), int16],) */;
  %543 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %544 = @func_7081() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %545 = %536.1;
  %546 = %537.1;
  %547 = %540.3;
  %548 = %541.0;
  %549 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %550 = @func_6695() /* ty=Tensor[(3, 5, 1), float32] */;
  %551 = %542.0;
  %552 = %543.1;
  %553 = %544.0;
  (%545, %546, %547, %var_8595, %548, %549, %550, %551, %552, %553)
}

def @main(%var_8838: Tensor[(11, 3, 10), int32], %var_8839: Tensor[(11, 3, 10), int32], %var_8894: Tensor[(11, 3, 10), float64]) -> (Tensor[(11, 3, 10), int32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(11, 3, 10), bool]) {
  %554 = cast(%var_8839, dtype="int32") /* ty=Tensor[(11, 3, 10), int32] */;
  %555 = shape_of(%var_8838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%var_8838, dtype="int32") /* ty=Tensor[(11, 3, 10), int32] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %558 = @func_7451() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %559 = @func_8729() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %560 = cast(%var_8839, dtype="float64") /* ty=Tensor[(11, 3, 10), float64] */;
  %561 = log(%560) /* ty=Tensor[(11, 3, 10), float64] */;
  %562 = cast(%var_8894, dtype="bool") /* ty=Tensor[(11, 3, 10), bool] */;
  %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%561, dtype="bool") /* ty=Tensor[(11, 3, 10), bool] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %566 = right_shift(%556, %557) /* ty=Tensor[(11, 3, 10), int32] */;
  %567 = %558.0;
  %568 = %559.0;
  %569 = equal(%564, %565) /* ty=Tensor[(11, 3, 10), bool] */;
  (%566, %567, %568, %569)
}

def @func_8423() -> (Tensor[(15, 594), uint64], Tensor[(15, 594), bool]) {
  %570 = @func_7203() /* ty=Tensor[(15, 594), float64] */;
  %571 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 594), float64] */, dtype="uint64") /* ty=Tensor[(15, 594), uint64] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(2), int32] */;
  %573 = cast(%570, dtype="uint64") /* ty=Tensor[(15, 594), uint64] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %575 = cast(%570, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
  %576 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(15, 594), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %577 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 594), float64] */, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %579 = maximum(%573, %574) /* ty=Tensor[(15, 594), uint64] */;
  %580 = greater(%577, %578) /* ty=Tensor[(15, 594), bool] */;
  (%579, %580)
}

def @func_1224(%var_1191: Tensor[(3, 10, 8), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) {
  %581 = cast(%var_1191, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %582 = sin(%581) /* ty=Tensor[(3, 10, 8), float64] */;
  %583 = cast(%582, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %584 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 99), float64] */, dtype="float64") /* ty=Tensor[(6, 99), float64] */;
  %585 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 99), float64] */, dtype="float64") /* ty=Tensor[(6, 99), float64] */;
  %586 = reshape(%584, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %587 = reshape(%585, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %588 = @func_330(%586, %587) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %589 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 99), float64] */, dtype="float64") /* ty=Tensor[(6, 99), float64] */;
  %590 = %588.1;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %592 = reshape(%589, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %593 = reshape(%591, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %594 = @func_330(%592, %593) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %595 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 77), uint16] */, dtype="uint16") /* ty=Tensor[(13, 77), uint16] */;
  %596 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 77), uint16] */, dtype="uint16") /* ty=Tensor[(13, 77), uint16] */;
  %597 = cast(%590, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %598 = reshape(%595, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %599 = reshape(%596, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %600 = reshape(%597, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %601 = @func_677(%598, %599, %600) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %602 = %601.1;
  %603 = cast(%602, dtype="bool") /* ty=Tensor[(13, 11, 7), bool] */;
  %604 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(13, 77), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %605 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 77), uint16] */, dtype="bool") /* ty=Tensor[(13, 77), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %607 = atanh(%583) /* ty=Tensor[(3, 10, 8), float32] */;
  %608 = %594.0;
  %609 = less_equal(%605, %606) /* ty=Tensor[(13, 77), bool] */;
  (%607, %590, meta[relay.Constant][28] /* ty=Tensor[(6, 99), float64] */, %608, %609)
}

def @func_5798() -> (Tensor[(594), float64],) {
  %610 = @func_4641() /* ty=Tensor[(594), float64] */;
  (%610,)
}

def @func_4663(%var_4645: Tensor[(3, 5, 1), float32]) -> (Tensor[(3, 5, 1), float32],) {
  %611 = cast(%var_4645, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
  %612 = atan(%611) /* ty=Tensor[(3, 5, 1), float32] */;
  (%612,)
}

def @func_6566(%var_6533: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(225, 1), float64], Tensor[(594), float64], Tensor[(240), float64], Tensor[(594), float64], Tensor[(1, 1001), float32], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) {
  %613 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 1001), uint16] */, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
  %614 = log(%613) /* ty=Tensor[(1, 1001), float32] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
  %616 = cast(meta[relay.Constant][30] /* ty=Tensor[(225, 1), float64] */, dtype="float64") /* ty=Tensor[(225, 1), float64] */;
  %617 = @func_4847() /* ty=Tensor[(2, 14, 5), float64] */;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %619 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 1001), uint16] */, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
  %620 = cast(%var_6533, dtype="float64") /* ty=Tensor[(594), float64] */;
  %621 = cast(meta[relay.Constant][31] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %622 = reshape(%616, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), float64] */;
  %623 = reshape(%618, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %624 = reshape(%619, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %625 = reshape(%620, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %626 = reshape(%621, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %627 = @func_3753(%622, %623, %624, %625, %626) /* ty=(Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) */;
  %628 = %627.6;
  %629 = cast(%628, dtype="float64") /* ty=Tensor[(594), float64] */;
  %630 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %631 = @func_4641() /* ty=Tensor[(594), float64] */;
  %632 = sinh(%615) /* ty=Tensor[(1, 1001), float32] */;
  %633 = exp(%629) /* ty=Tensor[(594), float64] */;
  %634 = %630.3;
  (%617, meta[relay.Constant][30] /* ty=Tensor[(225, 1), float64] */, %var_6533, meta[relay.Constant][31] /* ty=Tensor[(240), float64] */, %631, %632, %633, %634)
}

def @func_5522() -> (Tensor[(2, 14, 5), float64],) {
  %635 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %636 = %635.0;
  (%636,)
}

def @func_2742(%var_2728: Tensor[(1001), uint16]) -> (Tensor[(2, 14, 5), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 77), bool], Tensor[(240), float64]) {
  %637 = cast(%var_2728, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %638 = cast(%var_2728, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %639 = cast(meta[relay.Constant][33] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %640 = reshape(%637, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %641 = reshape(%638, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %642 = reshape(%639, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %643 = @func_677(%640, %641, %642) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %644 = cast(meta[relay.Constant][34] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %645 = reshape(%644, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
  %646 = @func_1224(%645) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
  %647 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  %648 = %643.1;
  %649 = %646.4;
  (%647, %648, %var_2728, meta[relay.Constant][33] /* ty=Tensor[(594), float64] */, %649, meta[relay.Constant][34] /* ty=Tensor[(240), float64] */)
}

def @func_8103(%var_8089: Tensor[(15, 594), float64]) -> Tensor[(15, 594), bool] {
  %650 = @func_7203() /* ty=Tensor[(15, 594), float64] */;
  %651 = cast(%var_8089, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
  %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(2), int32] */;
  %653 = cast(%650, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%653, %654) /* ty=Tensor[(15, 594), bool] */
}

def @func_2192(%var_2166: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), uint32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %655 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %656 = cast(%var_2166, dtype="uint32") /* ty=Tensor[(2, 14, 5), uint32] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="uint32") /* ty=Tensor[(2, 14, 5), uint32] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %660 = bitwise_and(%658, %659) /* ty=Tensor[(2, 14, 5), uint32] */;
  %661 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %662 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%660, %661, %662)
}

def @func_8729() -> (Tensor[(2, 14, 5), float64],) {
  %663 = @func_8711() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %664 = %663.0;
  (%664,)
}

def @func_8580() -> Tensor[(9, 11, 14), float32] {
  %665 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
  atanh(%665) /* ty=Tensor[(9, 11, 14), float32] */
}

def @func_5260() -> (Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32]) {
  %666 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
  %667 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %668 = %666.1;
  %669 = %667.2;
  (%668, %669)
}

def @func_8657() -> (Tensor[(120, 2), float64],) {
  %670 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %671 = %670.2;
  %672 = cast(%671, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %673 = sin(%672) /* ty=Tensor[(120, 2), float64] */;
  (%673,)
}

def @func_3137(%var_3106: Tensor[(4, 1, 13), float32], %var_3107: Tensor[(4, 15, 13), float32]) -> (Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) {
  %674 = cast(%var_3106, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
  %675 = cast(%var_3107, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
  %676 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %677 = reshape(%676, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %678 = @func_1834(%677) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) */;
  %679 = cast(%var_3106, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %680 = cosh(%679) /* ty=Tensor[(4, 1, 13), float64] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %682 = sigmoid(%681) /* ty=Tensor[(4, 1, 13), float64] */;
  %683 = cast(%682, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %684 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%680, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = divide(%674, %675) /* ty=Tensor[(4, 15, 13), float32] */;
  %688 = %678.4;
  %689 = greater(%685, %686) /* ty=Tensor[(4, ?, 13), bool] */;
  (%687, %688, meta[relay.Constant][36] /* ty=Tensor[(240), float64] */, %689)
}

def @func_4115() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %690 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %691 = @func_3981() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) */;
  %692 = @func_3463() /* ty=Tensor[(2, 14, 5), float64] */;
  %693 = %690.0;
  %694 = %691.4;
  (%692, %693, %694)
}

def @func_7413(%var_7394: Tensor[(5, 28), float64]) -> (Tensor[(8, 66), int8], Tensor[(2, 14, 5), int8], Tensor[(5, 28), float64]) {
  %695 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %696 = cast(%var_7394, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %697 = reshape(%696, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %698 = @func_5980(%697) /* ty=(Tensor[(2, 14, 5), int8],) */;
  %699 = %695.2;
  %700 = %698.0;
  (%699, %700, %var_7394)
}

def @func_1726(%var_1706: Tensor[(528), int8]) -> (Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(528), int8], Tensor[(9, 11, 6), int8], Tensor[(240), float64]) {
  %701 = cast(%var_1706, dtype="int8") /* ty=Tensor[(528), int8] */;
  %702 = cast(%var_1706, dtype="int8") /* ty=Tensor[(528), int8] */;
  %703 = reshape(%701, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %704 = reshape(%702, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %705 = @func_1426(%703, %704) /* ty=(Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) */;
  %706 = cast(meta[relay.Constant][37] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %707 = reshape(%706, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
  %708 = @func_1224(%707) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
  %709 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  %710 = %705.0;
  %711 = %708.1;
  (%709, %710, %var_1706, %711, meta[relay.Constant][37] /* ty=Tensor[(240), float64] */)
}

def @func_4418() -> (Tensor[(594), float64],) {
  %712 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %713 = %712.2;
  (%713,)
}

def @func_1426(%var_1406: Tensor[(6, 8, 11), int8], %var_1407: Tensor[(6, 8, 11), int8]) -> (Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) {
  %714 = cast(%var_1407, dtype="bool") /* ty=Tensor[(6, 8, 11), bool] */;
  %715 = shape_of(%var_1406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%var_1406, dtype="bool") /* ty=Tensor[(6, 8, 11), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %718 = cast(%var_1406, dtype="float32") /* ty=Tensor[(6, 8, 11), float32] */;
  %719 = greater(%716, %717) /* ty=Tensor[(6, 8, 11), bool] */;
  %720 = erf(%718) /* ty=Tensor[(6, 8, 11), float32] */;
  (%719, %720)
}

def @func_1834(%var_1806: Tensor[(4, 60), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) {
  %721 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %723 = reshape(%722, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %724 = @func_1669(%723) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %725 = cast(%var_1806, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %726 = reshape(%725, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
  %727 = @func_1224(%726) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
  %728 = cast(meta[relay.Constant][38] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %729 = reshape(%728, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float64] */;
  %730 = @func_992(%729) /* ty=(Tensor[(7, 8, 7), uint64],) */;
  %731 = %730.0;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %733 = acosh(%732) /* ty=Tensor[(7, 8, 7), float64] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(7, 8, 7), float32] */;
  %735 = %724.0;
  %736 = %727.2;
  %737 = erf(%734) /* ty=Tensor[(7, 8, 7), float32] */;
  (%721, meta[relay.Constant][38] /* ty=Tensor[(392), float64] */, %735, %736, %var_1806, %737)
}

def @func_6129(%var_6113: Tensor[(10, 15, 14), float32], %var_6114: Tensor[(10, 15, 14), float32]) -> (Tensor[(10, 15, 14), bool],) {
  %738 = cast(%var_6114, dtype="float32") /* ty=Tensor[(10, 15, 14), float32] */;
  %739 = shape_of(%var_6113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%var_6113, dtype="float32") /* ty=Tensor[(10, 15, 14), float32] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %742 = power(%740, %741) /* ty=Tensor[(10, 15, 14), float32] */;
  %743 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 15, 14), float32] */, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
  %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%742, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %747 = less(%745, %746) /* ty=Tensor[(10, 15, 14), bool] */;
  (%747,)
}

def @func_4198(%var_4173: Tensor[(9, 11, 6), int16]) -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), float64], Tensor[(594), float64]) {
  %748 = @func_4022() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %749 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %750 = %749.1;
  %751 = cast(%var_4173, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%750, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %755 = cast(%750, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %756 = reshape(%755, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %757 = @func_3347(%756) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %758 = %748.0;
  %759 = divide(%753, %754) /* ty=Tensor[(9, 11, 6), float64] */;
  %760 = %757.2;
  (%758, %759, %760)
}

def @func_6442() -> (Tensor[(2, 14, 5), float64],) {
  %761 = @func_4847() /* ty=Tensor[(2, 14, 5), float64] */;
  (%761,)
}

def @func_4715() -> Tensor[(2, 14, 5), float64] {
  @func_3463() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_7037() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %762 = @func_3981() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) */;
  %763 = @func_4464() /* ty=Tensor[(2, 14, 5), float64] */;
  %764 = %762.4;
  (%763, %764)
}

def @func_8164() -> (Tensor[(2, 14, 5), float64],) {
  %765 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %766 = %765.0;
  (%766,)
}

def @func_5508(%var_5505: Tensor[(9, 16, 10), float32]) -> (Tensor[(9, 16, 10), float32],) {
  %767 = cast(%var_5505, dtype="float32") /* ty=Tensor[(9, 16, 10), float32] */;
  %768 = acos(%767) /* ty=Tensor[(9, 16, 10), float32] */;
  (%768,)
}

def @func_7744() -> Tensor[(2, 14, 5), float64] {
  %769 = @func_5011() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32], Tensor[(120, 2), float64]) */;
  %769.0
}

def @func_6578(%var_6570: Tensor[(1, 14, 9), float32]) -> (Tensor[(1, 14, 9), float32],) {
  %770 = cast(%var_6570, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
  %771 = asinh(%770) /* ty=Tensor[(1, 14, 9), float32] */;
  (%771,)
}

def @func_1633() -> Tensor[(2, 14, 5), float64] {
  %772 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  log2(%772) /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_1905() -> (Tensor[(2, 14, 5), float64],) {
  %773 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  (%773,)
}

def @func_3880() -> Tensor[(2, 14, 5), float64] {
  %774 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %774.0
}

def @func_677(%var_655: Tensor[(13, 11, 7), uint16], %var_656: Tensor[(13, 11, 7), uint16], %var_674: Tensor[(594), float64]) -> (Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) {
  %775 = cast(%var_656, dtype="uint16") /* ty=Tensor[(13, 11, 7), uint16] */;
  %776 = shape_of(%var_655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_655, dtype="uint16") /* ty=Tensor[(13, 11, 7), uint16] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %779 = cast(%var_655, dtype="float64") /* ty=Tensor[(13, 11, 7), float64] */;
  %780 = cast(%var_674, dtype="float64") /* ty=Tensor[(594), float64] */;
  %781 = cast(%var_674, dtype="float64") /* ty=Tensor[(594), float64] */;
  %782 = reshape(%780, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %783 = reshape(%781, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %784 = @func_330(%782, %783) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %785 = right_shift(%777, %778) /* ty=Tensor[(13, 11, 7), uint16] */;
  %786 = cosh(%779) /* ty=Tensor[(13, 11, 7), float64] */;
  %787 = %784.0;
  (%785, %786, %787, %var_674)
}

def @func_4847() -> Tensor[(2, 14, 5), float64] {
  %788 = @func_3658() /* ty=Tensor[(2, 14, 5), float64] */;
  %789 = cast(%788, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %790 = tan(%789) /* ty=Tensor[(2, 14, 5), float64] */;
  %791 = cast(%790, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  acos(%791) /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_8785() -> Tensor[(2, 14, 5), float64] {
  %792 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %792.0
}

def @func_5011() -> (Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32], Tensor[(120, 2), float64]) {
  %793 = cast(meta[relay.Constant][41] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %794 = reshape(%793, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %795 = @func_2779(%794) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) */;
  %796 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %797 = %795.1;
  (%796, %797, meta[relay.Constant][41] /* ty=Tensor[(120, 2), float64] */)
}

def @func_7149() -> Tensor[(1, 1001), uint16] {
  %798 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %798.4
}

def @func_3550(%var_3543: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %799 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %800 = %799.4;
  %801 = cast(%800, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
  %802 = cast(%var_3543, dtype="float64") /* ty=Tensor[(594), float64] */;
  %803 = reshape(%801, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %804 = reshape(%802, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %805 = @func_2346(%803, %804) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %806 = cast(%var_3543, dtype="float64") /* ty=Tensor[(594), float64] */;
  %807 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %808 = %805.5;
  %809 = asin(%806) /* ty=Tensor[(594), float64] */;
  (%807, %800, %808, %809)
}

def @func_3040(%var_3017: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(240), float64], Tensor[(9, 11, 6), int8], Tensor[(392, 2), bool]) {
  %810 = cast(meta[relay.Constant][42] /* ty=Tensor[(392, 1), float64] */, dtype="float64") /* ty=Tensor[(392, 1), float64] */;
  %811 = cast(%var_3017, dtype="float64") /* ty=Tensor[(240), float64] */;
  %812 = reshape(%810, newshape=[392]) /* ty=Tensor[(392), float64] */;
  %813 = reshape(%811, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %814 = @func_2942(%812, %813) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(7, 8, 7), uint64], Tensor[(392), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %815 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %816 = cast(meta[relay.Constant][42] /* ty=Tensor[(392, 1), float64] */, dtype="uint8") /* ty=Tensor[(392, 1), uint8] */;
  %817 = cast(meta[relay.Constant][43] /* ty=Tensor[(392, 2), float64] */, dtype="uint8") /* ty=Tensor[(392, 2), uint8] */;
  %818 = right_shift(%816, %817) /* ty=Tensor[(392, 2), uint8] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(392, 2), float64] */;
  %820 = acosh(%819) /* ty=Tensor[(392, 2), float64] */;
  %821 = cast(%820, dtype="bool") /* ty=Tensor[(392, 2), bool] */;
  %822 = cast(meta[relay.Constant][42] /* ty=Tensor[(392, 1), float64] */, dtype="bool") /* ty=Tensor[(392, 1), bool] */;
  %823 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %824 = %814.3;
  %825 = %815.1;
  %826 = less(%821, %822) /* ty=Tensor[(392, 2), bool] */;
  (%823, %824, %var_3017, %825, %826)
}

def @func_6996() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %827 = @func_4418() /* ty=(Tensor[(594), float64],) */;
  %828 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %829 = %827.0;
  (%828, %829)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1905() -> (Tensor[(2, 14, 5), float64],) {
  %0 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  (%0,)
}

def @func_7471(%var_7469: Tensor[(16, 5, 4), float64]) -> Tensor[(16, 5, 4), float64] {
  @func_7468(%var_7469) /* ty=Tensor[(16, 5, 4), float64] */
}

def @func_8533() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) {
  %8 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) {
    %1 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %3 = reshape(%2, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
    %4 = @func_2421(%3) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) */;
    %5 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
    %6 = %1.0;
    %7 = %4.3;
    (%5, %6, %7, meta[relay.Constant][0] /* ty=Tensor[(1001), uint16] */)
  };
  %8() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) */
}

def @func_4418() -> (Tensor[(594), float64],) {
  %9 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %10 = %9.2;
  (%10,)
}

def @func_7745() -> Tensor[(2, 14, 5), float64] {
  %12 = fn () -> Tensor[(2, 14, 5), float64] {
    %11 = @func_5011() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32], Tensor[(120, 2), float64]) */;
    %11.0
  };
  %12() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_3383(%var_3381: Tensor[(1, 15, 14), float32], %var_3382: Tensor[(140), float64]) -> (Tensor[(?, 15, 14), float32], Tensor[(1, 15, 14), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 8, 11), float32], Tensor[(528), int8], Tensor[(140), float64]) {
  %32 = fn (%var_3353: Tensor[(1, 15, 14), float32], %var_3368: Tensor[(140), float64]) -> (Tensor[(?, 15, 14), float32], Tensor[(1, 15, 14), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 8, 11), float32], Tensor[(528), int8], Tensor[(140), float64]) {
    %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 14), float32] */;
    %14 = shape_of(%var_3353, dtype="int32") /* ty=Tensor[(3), int32] */;
    %15 = cast(%var_3353, dtype="float32") /* ty=Tensor[(1, 15, 14), float32] */;
    %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 15, 14), float32] */, dtype="float64") /* ty=Tensor[(1, 15, 14), float64] */;
    %18 = cast(%var_3368, dtype="float64") /* ty=Tensor[(140), float64] */;
    %19 = reshape(%18, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
    %20 = @func_1669(%19) /* ty=(Tensor[(2, 14, 5), uint8],) */;
    %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
    %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
    %23 = reshape(%21, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
    %24 = reshape(%22, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
    %25 = @func_1426(%23, %24) /* ty=(Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) */;
    %26 = cast(%var_3368, dtype="float64") /* ty=Tensor[(140), float64] */;
    %27 = divide(%15, %16) /* ty=Tensor[(?, 15, 14), float32] */;
    %28 = atanh(%17) /* ty=Tensor[(1, 15, 14), float64] */;
    %29 = %20.0;
    %30 = %25.1;
    %31 = acos(%26) /* ty=Tensor[(140), float64] */;
    (%27, %28, %29, %30, meta[relay.Constant][2] /* ty=Tensor[(528), int8] */, %31)
  };
  %32(%var_3381, %var_3382) /* ty=(Tensor[(?, 15, 14), float32], Tensor[(1, 15, 14), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 8, 11), float32], Tensor[(528), int8], Tensor[(140), float64]) */
}

def @func_8581() -> Tensor[(9, 11, 14), float32] {
  %34 = fn () -> Tensor[(9, 11, 14), float32] {
    %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
    atanh(%33) /* ty=Tensor[(9, 11, 14), float32] */
  };
  %34() /* ty=Tensor[(9, 11, 14), float32] */
}

def @func_3264() -> (Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) {
  %35 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 66), int8] */, dtype="int8") /* ty=Tensor[(8, 66), int8] */;
  %37 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 66), int8] */, dtype="int8") /* ty=Tensor[(8, 66), int8] */;
  %38 = reshape(%36, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %39 = reshape(%37, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %40 = @func_1426(%38, %39) /* ty=(Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) */;
  %41 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1001), uint16] */, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
  %42 = cast(meta[relay.Constant][6] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %43 = reshape(%41, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %44 = reshape(%42, newshape=[2, 168]) /* ty=Tensor[(2, 168), uint64] */;
  %45 = @func_2598(%43, %44) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64], Tensor[(1001), uint16], Tensor[(7, 3, 16), uint64], Tensor[(2, 168), uint64]) */;
  %46 = %35.0;
  %47 = cast(%46, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %48 = reshape(%47, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %49 = @func_1669(%48) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %50 = %40.0;
  %51 = %45.0;
  %52 = %49.0;
  (%46, %50, meta[relay.Constant][4] /* ty=Tensor[(8, 66), int8] */, %51, meta[relay.Constant][5] /* ty=Tensor[(1, 1001), uint16] */, meta[relay.Constant][6] /* ty=Tensor[(336), uint64] */, %52)
}

def @func_5110(%var_5073: Tensor[(52), float32]) -> (Tensor[(594), float64], Tensor[(4, 60), float64], Tensor[(52), float32], Tensor[(390, 2), float32], Tensor[(2, 14, 5), float64]) {
  %53 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
  %54 = cast(%var_5073, dtype="float32") /* ty=Tensor[(52), float32] */;
  %55 = cast(meta[relay.Constant][7] /* ty=Tensor[(390, 2), float32] */, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
  %56 = reshape(%54, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float32] */;
  %57 = reshape(%55, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float32] */;
  %58 = @func_3137(%56, %57) /* ty=(Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) */;
  %59 = %53.2;
  %60 = %58.1;
  %61 = @func_4464() /* ty=Tensor[(2, 14, 5), float64] */;
  (%59, %60, %var_5073, meta[relay.Constant][7] /* ty=Tensor[(390, 2), float32] */, %61)
}

def @func_5454() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  @func_5452() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_4716() -> Tensor[(2, 14, 5), float64] {
  %62 = fn () -> Tensor[(2, 14, 5), float64] {
    @func_3463() /* ty=Tensor[(2, 14, 5), float64] */
  };
  %62() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_2090() -> (Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) {
  @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */
}

def @func_7149() -> Tensor[(1, 1001), uint16] {
  %63 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %63.4
}

def @func_7316() -> Tensor[(2, 14, 5), bool] {
  @func_7314() /* ty=Tensor[(2, 14, 5), bool] */
}

def @func_4609(%var_4607: Tensor[(1001), uint16]) -> (Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  @func_4606(%var_4607) /* ty=(Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_5406() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) {
  %64 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %66 = reshape(%65, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %67 = @func_1669(%66) /* ty=(Tensor[(2, 14, 5), uint8],) */;
  %68 = %67.0;
  (%64, %68)
}

def @func_3100() -> (Tensor[(2, 14, 5), float64],) {
  %69 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%69,)
}

def @func_3266() -> (Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) {
  @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */
}

def @func_995(%var_993: Tensor[(7, 8, 7), float64]) -> (Tensor[(7, 8, 7), uint64],) {
  @func_992(%var_993) /* ty=(Tensor[(7, 8, 7), uint64],) */
}

def @func_8045() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %73 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
    %70 = @func_6144() /* ty=(Tensor[(2, 14, 5), float64],) */;
    %71 = %70.0;
    %72 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
    (%71, %72)
  };
  %73() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_8731() -> (Tensor[(2, 14, 5), float64],) {
  @func_8729() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_3982() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) {
  %83 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) {
    %74 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
    %75 = cast(meta[relay.Constant][8] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %76 = cast(meta[relay.Constant][9] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
    %77 = reshape(%75, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
    %78 = reshape(%76, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %79 = @func_2346(%77, %78) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
    %80 = %74.0;
    %81 = @func_3880() /* ty=Tensor[(2, 14, 5), float64] */;
    %82 = %79.0;
    (%80, %81, %82, meta[relay.Constant][8] /* ty=Tensor[(1001), uint16] */, meta[relay.Constant][9] /* ty=Tensor[(594), float64] */)
  };
  %83() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) */
}

def @func_6568(%var_6567: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(225, 1), float64], Tensor[(594), float64], Tensor[(240), float64], Tensor[(594), float64], Tensor[(1, 1001), float32], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) {
  %106 = fn (%var_6533: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(225, 1), float64], Tensor[(594), float64], Tensor[(240), float64], Tensor[(594), float64], Tensor[(1, 1001), float32], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) {
    %84 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 1001), uint16] */, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
    %85 = log(%84) /* ty=Tensor[(1, 1001), float32] */;
    %86 = cast(%85, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
    %87 = cast(meta[relay.Constant][10] /* ty=Tensor[(225, 1), float64] */, dtype="float64") /* ty=Tensor[(225, 1), float64] */;
    %88 = @func_4847() /* ty=Tensor[(2, 14, 5), float64] */;
    %89 = cast(%88, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
    %90 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 1001), uint16] */, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
    %91 = cast(%var_6533, dtype="float64") /* ty=Tensor[(594), float64] */;
    %92 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %93 = reshape(%87, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), float64] */;
    %94 = reshape(%89, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %95 = reshape(%90, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
    %96 = reshape(%91, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %97 = reshape(%92, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %98 = @func_3753(%93, %94, %95, %96, %97) /* ty=(Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) */;
    %99 = %98.6;
    %100 = cast(%99, dtype="float64") /* ty=Tensor[(594), float64] */;
    %101 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
    %102 = @func_4641() /* ty=Tensor[(594), float64] */;
    %103 = sinh(%86) /* ty=Tensor[(1, 1001), float32] */;
    %104 = exp(%100) /* ty=Tensor[(594), float64] */;
    %105 = %101.3;
    (%88, meta[relay.Constant][10] /* ty=Tensor[(225, 1), float64] */, %var_6533, meta[relay.Constant][11] /* ty=Tensor[(240), float64] */, %102, %103, %104, %105)
  };
  %106(%var_6567) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(225, 1), float64], Tensor[(594), float64], Tensor[(240), float64], Tensor[(594), float64], Tensor[(1, 1001), float32], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_6578(%var_6570: Tensor[(1, 14, 9), float32]) -> (Tensor[(1, 14, 9), float32],) {
  %107 = cast(%var_6570, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
  %108 = asinh(%107) /* ty=Tensor[(1, 14, 9), float32] */;
  (%108,)
}

def @func_1635() -> Tensor[(2, 14, 5), float64] {
  @func_1633() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_5983(%var_5981: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), int8],) {
  @func_5980(%var_5981) /* ty=(Tensor[(2, 14, 5), int8],) */
}

def @func_6406() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) {
  @func_6404() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_3102() -> (Tensor[(2, 14, 5), float64],) {
  @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @main(%var_8838: Tensor[(11, 3, 10), int32], %var_8839: Tensor[(11, 3, 10), int32], %var_8894: Tensor[(11, 3, 10), float64]) -> (Tensor[(11, 3, 10), int32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(11, 3, 10), bool]) {
  %109 = cast(%var_8839, dtype="int32") /* ty=Tensor[(11, 3, 10), int32] */;
  %110 = shape_of(%var_8838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%var_8838, dtype="int32") /* ty=Tensor[(11, 3, 10), int32] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %113 = @func_7453() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %114 = @func_8731() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %115 = cast(%var_8839, dtype="float64") /* ty=Tensor[(11, 3, 10), float64] */;
  %116 = log(%115) /* ty=Tensor[(11, 3, 10), float64] */;
  %117 = cast(%var_8894, dtype="bool") /* ty=Tensor[(11, 3, 10), bool] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%116, dtype="bool") /* ty=Tensor[(11, 3, 10), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = right_shift(%111, %112) /* ty=Tensor[(11, 3, 10), int32] */;
  %122 = %113.0;
  %123 = %114.0;
  %124 = equal(%119, %120) /* ty=Tensor[(11, 3, 10), bool] */;
  (%121, %122, %123, %124)
}

def @func_7039() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  @func_7037() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */
}

def @func_8657() -> (Tensor[(120, 2), float64],) {
  %125 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %126 = %125.2;
  %127 = cast(%126, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %128 = sin(%127) /* ty=Tensor[(120, 2), float64] */;
  (%128,)
}

def @func_7416(%var_7414: Tensor[(5, 28), float64]) -> (Tensor[(8, 66), int8], Tensor[(2, 14, 5), int8], Tensor[(5, 28), float64]) {
  @func_7413(%var_7414) /* ty=(Tensor[(8, 66), int8], Tensor[(2, 14, 5), int8], Tensor[(5, 28), float64]) */
}

def @func_2946(%var_2944: Tensor[(392), float64], %var_2945: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(7, 8, 7), uint64], Tensor[(392), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  @func_2942(%var_2944, %var_2945) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(7, 8, 7), uint64], Tensor[(392), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_6368() -> (Tensor[(9, 11, 6), int16], Tensor[(?, 1001), float64]) {
  %129 = @func_6062() /* ty=(Tensor[(9, 11, 6), int16],) */;
  %130 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %131 = %130.1;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(?, 1001), float64] */;
  %133 = %129.0;
  %134 = rsqrt(%132) /* ty=Tensor[(?, 1001), float64] */;
  (%133, %134)
}

def @func_1227(%var_1225: Tensor[(3, 10, 8), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) {
  @func_1224(%var_1225) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */
}

def @func_3553(%var_3551: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  @func_3550(%var_3551) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */
}

def @func_7081() -> (Tensor[(2, 14, 5), float64],) {
  %135 = @func_4715() /* ty=Tensor[(2, 14, 5), float64] */;
  (%135,)
}

def @func_6220() -> (Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) {
  @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */
}

def @func_7116() -> Tensor[(2, 14, 5), float64] {
  @func_7114() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_7151() -> Tensor[(1, 1001), uint16] {
  @func_7149() /* ty=Tensor[(1, 1001), uint16] */
}

def @func_8192() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  @func_8190() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_6218() -> (Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) {
  %136 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %137 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %138 = %137.4;
  %139 = cast(%138, dtype="float64") /* ty=Tensor[(1, 1001), float64] */;
  %140 = cosh(%139) /* ty=Tensor[(1, 1001), float64] */;
  %141 = cast(%138, dtype="bool") /* ty=Tensor[(1, 1001), bool] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(2), int32] */;
  %143 = cast(%140, dtype="bool") /* ty=Tensor[(1, 1001), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %145 = less(%143, %144) /* ty=Tensor[(?, 1001), bool] */;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(?, 1001), float32] */;
  %147 = %136.0;
  %148 = atan(%146) /* ty=Tensor[(?, 1001), float32] */;
  (%147, %148)
}

def @func_4665(%var_4664: Tensor[(3, 5, 1), float32]) -> (Tensor[(3, 5, 1), float32],) {
  %151 = fn (%var_4645: Tensor[(3, 5, 1), float32]) -> (Tensor[(3, 5, 1), float32],) {
    %149 = cast(%var_4645, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
    %150 = atan(%149) /* ty=Tensor[(3, 5, 1), float32] */;
    (%150,)
  };
  %151(%var_4664) /* ty=(Tensor[(3, 5, 1), float32],) */
}

def @func_1429(%var_1427: Tensor[(6, 8, 11), int8], %var_1428: Tensor[(6, 8, 11), int8]) -> (Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) {
  %159 = fn (%var_1406: Tensor[(6, 8, 11), int8], %var_1407: Tensor[(6, 8, 11), int8]) -> (Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) {
    %152 = cast(%var_1407, dtype="bool") /* ty=Tensor[(6, 8, 11), bool] */;
    %153 = shape_of(%var_1406, dtype="int32") /* ty=Tensor[(3), int32] */;
    %154 = cast(%var_1406, dtype="bool") /* ty=Tensor[(6, 8, 11), bool] */;
    %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %156 = cast(%var_1406, dtype="float32") /* ty=Tensor[(6, 8, 11), float32] */;
    %157 = greater(%154, %155) /* ty=Tensor[(6, 8, 11), bool] */;
    %158 = erf(%156) /* ty=Tensor[(6, 8, 11), float32] */;
    (%157, %158)
  };
  %159(%var_1427, %var_1428) /* ty=(Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) */
}

def @func_3349(%var_3348: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) {
  %168 = fn (%var_3322: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) {
    %160 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
    %161 = cast(%var_3322, dtype="float64") /* ty=Tensor[(594), float64] */;
    %162 = cast(%var_3322, dtype="float64") /* ty=Tensor[(594), float64] */;
    %163 = reshape(%161, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
    %164 = reshape(%162, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
    %165 = @func_330(%163, %164) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
    %166 = %160.0;
    %167 = %165.1;
    (%166, %167, %var_3322)
  };
  %168(%var_3348) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */
}

def @func_2942(%var_2891: Tensor[(392), float64], %var_2919: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(7, 8, 7), uint64], Tensor[(392), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %169 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %170 = %169.0;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %172 = reshape(%171, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %173 = @func_2192(%172) /* ty=(Tensor[(2, 14, 5), uint32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %174 = cast(%var_2891, dtype="float64") /* ty=Tensor[(392), float64] */;
  %175 = reshape(%174, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float64] */;
  %176 = @func_992(%175) /* ty=(Tensor[(7, 8, 7), uint64],) */;
  %177 = cast(%var_2919, dtype="float64") /* ty=Tensor[(240), float64] */;
  %178 = reshape(%177, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %179 = @func_1834(%178) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) */;
  %180 = %173.2;
  %181 = %176.0;
  %182 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %183 = %179.2;
  %184 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %185 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%170, %180, %181, %var_2891, %182, %183, %var_2919, %184, %185)
}

def @func_3550(%var_3543: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %186 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %187 = %186.4;
  %188 = cast(%187, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
  %189 = cast(%var_3543, dtype="float64") /* ty=Tensor[(594), float64] */;
  %190 = reshape(%188, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %191 = reshape(%189, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %192 = @func_2346(%190, %191) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %193 = cast(%var_3543, dtype="float64") /* ty=Tensor[(594), float64] */;
  %194 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %195 = %192.5;
  %196 = asin(%193) /* ty=Tensor[(594), float64] */;
  (%194, %187, %195, %196)
}

def @func_681(%var_678: Tensor[(13, 11, 7), uint16], %var_679: Tensor[(13, 11, 7), uint16], %var_680: Tensor[(594), float64]) -> (Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) {
  %210 = fn (%var_655: Tensor[(13, 11, 7), uint16], %var_656: Tensor[(13, 11, 7), uint16], %var_674: Tensor[(594), float64]) -> (Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) {
    %197 = cast(%var_656, dtype="uint16") /* ty=Tensor[(13, 11, 7), uint16] */;
    %198 = shape_of(%var_655, dtype="int32") /* ty=Tensor[(3), int32] */;
    %199 = cast(%var_655, dtype="uint16") /* ty=Tensor[(13, 11, 7), uint16] */;
    %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %201 = cast(%var_655, dtype="float64") /* ty=Tensor[(13, 11, 7), float64] */;
    %202 = cast(%var_674, dtype="float64") /* ty=Tensor[(594), float64] */;
    %203 = cast(%var_674, dtype="float64") /* ty=Tensor[(594), float64] */;
    %204 = reshape(%202, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
    %205 = reshape(%203, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
    %206 = @func_330(%204, %205) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
    %207 = right_shift(%199, %200) /* ty=Tensor[(13, 11, 7), uint16] */;
    %208 = cosh(%201) /* ty=Tensor[(13, 11, 7), float64] */;
    %209 = %206.0;
    (%207, %208, %209, %var_674)
  };
  %210(%var_678, %var_679, %var_680) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */
}

def @func_4198(%var_4173: Tensor[(9, 11, 6), int16]) -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), float64], Tensor[(594), float64]) {
  %211 = @func_4022() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %212 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %213 = %212.1;
  %214 = cast(%var_4173, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %218 = cast(%213, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %219 = reshape(%218, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %220 = @func_3347(%219) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %221 = %211.0;
  %222 = divide(%216, %217) /* ty=Tensor[(9, 11, 6), float64] */;
  %223 = %220.2;
  (%221, %222, %223)
}

def @func_2602(%var_2600: Tensor[(1001), uint16], %var_2601: Tensor[(2, 168), uint64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64], Tensor[(1001), uint16], Tensor[(7, 3, 16), uint64], Tensor[(2, 168), uint64]) {
  @func_2598(%var_2600, %var_2601) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64], Tensor[(1001), uint16], Tensor[(7, 3, 16), uint64], Tensor[(2, 168), uint64]) */
}

def @func_8079() -> (Tensor[(2, 14, 5), float64],) {
  %225 = fn () -> (Tensor[(2, 14, 5), float64],) {
    %224 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
    (%224,)
  };
  %225() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_3431(%var_3429: Tensor[(1001), uint16], %var_3430: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(2, 14, 5), uint8], Tensor[(2, 14, 5), float64]) {
  %239 = fn (%var_3393: Tensor[(1001), uint16], %var_3394: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(2, 14, 5), uint8], Tensor[(2, 14, 5), float64]) {
    %226 = cast(%var_3393, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %227 = cast(%var_3394, dtype="float64") /* ty=Tensor[(594), float64] */;
    %228 = reshape(%226, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
    %229 = reshape(%227, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %230 = @func_2346(%228, %229) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
    %231 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
    %232 = cast(%231, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
    %233 = reshape(%232, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
    %234 = @func_1669(%233) /* ty=(Tensor[(2, 14, 5), uint8],) */;
    %235 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
    %236 = %230.0;
    %237 = %234.0;
    %238 = %235.0;
    (%231, %236, %var_3393, %var_3394, %237, %238)
  };
  %239(%var_3429, %var_3430) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(2, 14, 5), uint8], Tensor[(2, 14, 5), float64]) */
}

def @func_6132(%var_6130: Tensor[(10, 15, 14), float32], %var_6131: Tensor[(10, 15, 14), float32]) -> (Tensor[(10, 15, 14), bool],) {
  %250 = fn (%var_6113: Tensor[(10, 15, 14), float32], %var_6114: Tensor[(10, 15, 14), float32]) -> (Tensor[(10, 15, 14), bool],) {
    %240 = cast(%var_6114, dtype="float32") /* ty=Tensor[(10, 15, 14), float32] */;
    %241 = shape_of(%var_6113, dtype="int32") /* ty=Tensor[(3), int32] */;
    %242 = cast(%var_6113, dtype="float32") /* ty=Tensor[(10, 15, 14), float32] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %244 = power(%242, %243) /* ty=Tensor[(10, 15, 14), float32] */;
    %245 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 15, 14), float32] */, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
    %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(%244, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %249 = less(%247, %248) /* ty=Tensor[(10, 15, 14), bool] */;
    (%249,)
  };
  %250(%var_6130, %var_6131) /* ty=(Tensor[(10, 15, 14), bool],) */
}

def @func_7269() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %257 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
    %251 = @func_4418() /* ty=(Tensor[(594), float64],) */;
    %252 = %251.0;
    %253 = cast(%252, dtype="float64") /* ty=Tensor[(594), float64] */;
    %254 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
    %255 = @func_7114() /* ty=Tensor[(2, 14, 5), float64] */;
    %256 = erf(%253) /* ty=Tensor[(594), float64] */;
    (%254, %255, %256)
  };
  %257() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */
}

def @func_5799() -> (Tensor[(594), float64],) {
  %259 = fn () -> (Tensor[(594), float64],) {
    %258 = @func_4641() /* ty=Tensor[(594), float64] */;
    (%258,)
  };
  %259() /* ty=(Tensor[(594), float64],) */
}

def @func_8144() -> (Tensor[(594), float64],) {
  %260 = @func_6415() /* ty=Tensor[(594), float64] */;
  (%260,)
}

def @func_2222(%var_2218: Tensor[(7, 3, 16), uint64]) -> (Tensor[(7, 3, 16), uint64],) {
  %261 = cast(%var_2218, dtype="uint64") /* ty=Tensor[(7, 3, 16), uint64] */;
  %262 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(7, 3, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(7, 3, 16), uint64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %265 = add(%263, %264) /* ty=Tensor[(7, 3, 16), uint64] */;
  (%265,)
}

def @func_5669(%var_5667: Tensor[(14, 1, 7), float32]) -> Tensor[(14, ?, 7), bool] {
  @func_5666(%var_5667) /* ty=Tensor[(14, ?, 7), bool] */
}

def @func_8190() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %266 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %267 = @func_8078() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %268 = @func_7744() /* ty=Tensor[(2, 14, 5), float64] */;
  %269 = %266.0;
  %270 = %267.0;
  (%268, %269, %270)
}

def @func_8423() -> (Tensor[(15, 594), uint64], Tensor[(15, 594), bool]) {
  %271 = @func_7203() /* ty=Tensor[(15, 594), float64] */;
  %272 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 594), float64] */, dtype="uint64") /* ty=Tensor[(15, 594), uint64] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(2), int32] */;
  %274 = cast(%271, dtype="uint64") /* ty=Tensor[(15, 594), uint64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %276 = cast(%271, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
  %277 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(15, 594), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %278 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 594), float64] */, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %280 = maximum(%274, %275) /* ty=Tensor[(15, 594), uint64] */;
  %281 = greater(%278, %279) /* ty=Tensor[(15, 594), bool] */;
  (%280, %281)
}

def @func_6997() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %285 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
    %282 = @func_4418() /* ty=(Tensor[(594), float64],) */;
    %283 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
    %284 = %282.0;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */
}

def @func_3140(%var_3138: Tensor[(4, 1, 13), float32], %var_3139: Tensor[(4, 15, 13), float32]) -> (Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) {
  %302 = fn (%var_3106: Tensor[(4, 1, 13), float32], %var_3107: Tensor[(4, 15, 13), float32]) -> (Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) {
    %286 = cast(%var_3106, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
    %287 = cast(%var_3107, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
    %288 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %289 = reshape(%288, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
    %290 = @func_1834(%289) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) */;
    %291 = cast(%var_3106, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %292 = cosh(%291) /* ty=Tensor[(4, 1, 13), float64] */;
    %293 = cast(%292, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %294 = sigmoid(%293) /* ty=Tensor[(4, 1, 13), float64] */;
    %295 = cast(%294, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
    %296 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
    %297 = cast(%292, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
    %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %299 = divide(%286, %287) /* ty=Tensor[(4, 15, 13), float32] */;
    %300 = %290.4;
    %301 = greater(%297, %298) /* ty=Tensor[(4, ?, 13), bool] */;
    (%299, %300, meta[relay.Constant][16] /* ty=Tensor[(240), float64] */, %301)
  };
  %302(%var_3138, %var_3139) /* ty=(Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) */
}

def @func_8628(%var_8626: Tensor[(240), float64]) -> (Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(1, 240), float32], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32], Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  @func_8625(%var_8626) /* ty=(Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(1, 240), float32], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32], Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_3759(%var_3754: Tensor[(15, 15, 1), float64], %var_3755: Tensor[(140), float64], %var_3756: Tensor[(1001), uint16], %var_3757: Tensor[(594), float64], %var_3758: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) {
  %336 = fn (%var_3692: Tensor[(15, 15, 1), float64], %var_3704: Tensor[(140), float64], %var_3714: Tensor[(1001), uint16], %var_3715: Tensor[(594), float64], %var_3719: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) {
    %303 = cast(%var_3704, dtype="float64") /* ty=Tensor[(140), float64] */;
    %304 = reshape(%303, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
    %305 = @func_1669(%304) /* ty=(Tensor[(2, 14, 5), uint8],) */;
    %306 = cast(%var_3719, dtype="float64") /* ty=Tensor[(240), float64] */;
    %307 = reshape(%306, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
    %308 = @func_2874(%307) /* ty=(Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) */;
    %309 = cast(%var_3714, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %310 = cast(%var_3715, dtype="float64") /* ty=Tensor[(594), float64] */;
    %311 = reshape(%309, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
    %312 = reshape(%310, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %313 = @func_2346(%311, %312) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
    %314 = %313.3;
    %315 = cast(%314, dtype="float32") /* ty=Tensor[(594), float32] */;
    %316 = cast(%var_3692, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
    %317 = cosh(%316) /* ty=Tensor[(15, 15, 1), float64] */;
    %318 = cast(%var_3692, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
    %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
    %320 = cast(%317, dtype="float64") /* ty=Tensor[(15, 15, 1), float64] */;
    %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %322 = mod(%320, %321) /* ty=Tensor[(15, 15, ?), float64] */;
    %323 = cast(%322, dtype="bool") /* ty=Tensor[(15, 15, ?), bool] */;
    %324 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%317, dtype="bool") /* ty=Tensor[(15, 15, 1), bool] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %327 = less(%325, %326) /* ty=Tensor[(15, 15, ?), bool] */;
    %328 = cast(%327, dtype="float64") /* ty=Tensor[(15, 15, ?), float64] */;
    %329 = acos(%328) /* ty=Tensor[(15, 15, ?), float64] */;
    %330 = cast(%329, dtype="float64") /* ty=Tensor[(15, 15, ?), float64] */;
    %331 = %305.0;
    %332 = %308.2;
    %333 = log2(%315) /* ty=Tensor[(594), float32] */;
    %334 = erf(%330) /* ty=Tensor[(15, 15, ?), float64] */;
    %335 = @func_3658() /* ty=Tensor[(2, 14, 5), float64] */;
    (%331, %var_3704, %var_3714, %var_3715, %332, %var_3719, %333, %334, %335)
  };
  %336(%var_3754, %var_3755, %var_3756, %var_3757, %var_3758) /* ty=(Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_2088() -> (Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) {
  %337 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %338 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 14, 5), float64] */, dtype="bool") /* ty=Tensor[(2, 14, 5), bool] */;
  %339 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%337, dtype="bool") /* ty=Tensor[(2, 14, 5), bool] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %342 = cast(meta[relay.Constant][18] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %343 = cast(meta[relay.Constant][18] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %344 = reshape(%342, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %345 = reshape(%343, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %346 = @func_330(%344, %345) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %347 = greater_equal(%340, %341) /* ty=Tensor[(2, 14, 5), bool] */;
  %348 = %346.1;
  (%347, %348, meta[relay.Constant][18] /* ty=Tensor[(594), float64] */)
}

def @func_4024() -> (Tensor[(2, 14, 5), float64],) {
  @func_4022() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_7653() -> Tensor[(594), float64] {
  %352 = fn () -> Tensor[(594), float64] {
    %349 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
    %350 = %349.1;
    %351 = cast(%350, dtype="float64") /* ty=Tensor[(594), float64] */;
    sqrt(%351) /* ty=Tensor[(594), float64] */
  };
  %352() /* ty=Tensor[(594), float64] */
}

def @func_6042() -> (Tensor[(2, 14, 5), float64],) {
  %355 = fn () -> (Tensor[(2, 14, 5), float64],) {
    %353 = @func_5406() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) */;
    %354 = %353.0;
    (%354,)
  };
  %355() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_7453() -> (Tensor[(2, 14, 5), float64],) {
  @func_7451() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_4465() -> Tensor[(2, 14, 5), float64] {
  %356 = fn () -> Tensor[(2, 14, 5), float64] {
    @func_1633() /* ty=Tensor[(2, 14, 5), float64] */
  };
  %356() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_5261() -> (Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32]) {
  %361 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32]) {
    %357 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
    %358 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
    %359 = %357.1;
    %360 = %358.2;
    (%359, %360)
  };
  %361() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32]) */
}

def @func_4807() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) {
  @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */
}

def @func_6625() -> Tensor[(2, 14, 5), float64] {
  @func_1962() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_2346(%var_2281: Tensor[(1001, 1), uint16], %var_2282: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %362 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %363 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %364 = cast(%var_2282, dtype="float64") /* ty=Tensor[(594), float64] */;
  %365 = reshape(%362, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %366 = reshape(%363, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %367 = reshape(%364, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %368 = @func_677(%365, %366, %367) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %369 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %370 = cast(%var_2281, dtype="uint16") /* ty=Tensor[(1001, 1), uint16] */;
  %371 = cast(%var_2282, dtype="float64") /* ty=Tensor[(594), float64] */;
  %372 = reshape(%369, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %373 = reshape(%370, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %374 = reshape(%371, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %375 = @func_677(%372, %373, %374) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %376 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %377 = cast(%376, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %378 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %379 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %380 = %368.3;
  %381 = %375.0;
  %382 = sqrt(%377) /* ty=Tensor[(2, 14, 5), float64] */;
  %383 = %378.0;
  (%379, %380, %var_2281, %var_2282, %381, %382, %383)
}

def @func_2598(%var_2547: Tensor[(1001), uint16], %var_2591: Tensor[(2, 168), uint64]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64], Tensor[(1001), uint16], Tensor[(7, 3, 16), uint64], Tensor[(2, 168), uint64]) {
  %384 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %385 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %386 = cast(%var_2547, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %387 = %385.1;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %389 = reshape(%386, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %390 = reshape(%388, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %391 = @func_2346(%389, %390) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %392 = cast(%var_2591, dtype="uint64") /* ty=Tensor[(2, 168), uint64] */;
  %393 = reshape(%392, newshape=[7, 3, 16]) /* ty=Tensor[(7, 3, 16), uint64] */;
  %394 = @func_2222(%393) /* ty=(Tensor[(7, 3, 16), uint64],) */;
  %395 = %384.0;
  %396 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %397 = %391.3;
  %398 = %394.0;
  (%395, %396, %387, %397, %var_2547, %398, %var_2591)
}

def @func_5113(%var_5111: Tensor[(52), float32]) -> (Tensor[(594), float64], Tensor[(4, 60), float64], Tensor[(52), float32], Tensor[(390, 2), float32], Tensor[(2, 14, 5), float64]) {
  @func_5110(%var_5111) /* ty=(Tensor[(594), float64], Tensor[(4, 60), float64], Tensor[(52), float32], Tensor[(390, 2), float32], Tensor[(2, 14, 5), float64]) */
}

def @func_7850() -> (Tensor[(120, 2), float64],) {
  %399 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %400 = %399.2;
  (%400,)
}

def @func_2744(%var_2743: Tensor[(1001), uint16]) -> (Tensor[(2, 14, 5), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 77), bool], Tensor[(240), float64]) {
  %414 = fn (%var_2728: Tensor[(1001), uint16]) -> (Tensor[(2, 14, 5), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 77), bool], Tensor[(240), float64]) {
    %401 = cast(%var_2728, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %402 = cast(%var_2728, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %403 = cast(meta[relay.Constant][19] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
    %404 = reshape(%401, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
    %405 = reshape(%402, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
    %406 = reshape(%403, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %407 = @func_677(%404, %405, %406) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
    %408 = cast(meta[relay.Constant][20] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %409 = reshape(%408, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
    %410 = @func_1224(%409) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
    %411 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
    %412 = %407.1;
    %413 = %410.4;
    (%411, %412, %var_2728, meta[relay.Constant][19] /* ty=Tensor[(594), float64] */, %413, meta[relay.Constant][20] /* ty=Tensor[(240), float64] */)
  };
  %414(%var_2743) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 77), bool], Tensor[(240), float64]) */
}

def @func_7114() -> Tensor[(2, 14, 5), float64] {
  %415 = @func_6404() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) */;
  %415.0
}

def @func_8164() -> (Tensor[(2, 14, 5), float64],) {
  %416 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %417 = %416.0;
  (%417,)
}

def @func_8224(%var_8222: Tensor[(1, 8, 14), uint32], %var_8223: Tensor[(13, 8, 14), uint32]) -> Tensor[(13, 8, 14), bool] {
  @func_8220(%var_8222, %var_8223) /* ty=Tensor[(13, 8, 14), bool] */
}

def @func_6922(%var_6903: Tensor[(9, 240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(594), float64], Tensor[(225), float64], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 240), float32]) {
  %418 = @func_5406() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) */;
  %419 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %420 = @func_4418() /* ty=(Tensor[(594), float64],) */;
  %421 = cast(meta[relay.Constant][21] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %422 = %418.0;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %424 = %419.4;
  %425 = cast(%424, dtype="uint16") /* ty=Tensor[(1, 1001), uint16] */;
  %426 = %420.0;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(594), float64] */;
  %428 = cast(meta[relay.Constant][22] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %429 = reshape(%421, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), float64] */;
  %430 = reshape(%423, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %431 = reshape(%425, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %432 = reshape(%427, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %433 = reshape(%428, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %434 = @func_3753(%429, %430, %431, %432, %433) /* ty=(Tensor[(2, 14, 5), uint8], Tensor[(140), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(9, 240), int16], Tensor[(240), float64], Tensor[(594), float32], Tensor[(15, 15, ?), float64], Tensor[(2, 14, 5), float64]) */;
  %435 = %434.4;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(9, 240), float64] */;
  %437 = cos(%436) /* ty=Tensor[(9, 240), float64] */;
  %438 = cast(%var_6903, dtype="float32") /* ty=Tensor[(9, 240), float32] */;
  %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(2), int32] */;
  %440 = cast(%437, dtype="float32") /* ty=Tensor[(9, 240), float32] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %442 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %443 = mod(%440, %441) /* ty=Tensor[(9, 240), float32] */;
  (%422, %424, %426, meta[relay.Constant][21] /* ty=Tensor[(225), float64] */, meta[relay.Constant][22] /* ty=Tensor[(240), float64] */, %442, %443)
}

def @func_8787() -> Tensor[(2, 14, 5), float64] {
  @func_8785() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_2876(%var_2875: Tensor[(1, 240), float64]) -> (Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) {
  %458 = fn (%var_2849: Tensor[(1, 240), float64]) -> (Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) {
    %444 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
    %445 = cast(%444, dtype="float32") /* ty=Tensor[(2, 14, 5), float32] */;
    %446 = cast(%var_2849, dtype="float64") /* ty=Tensor[(1, 240), float64] */;
    %447 = reshape(%446, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
    %448 = @func_2779(%447) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) */;
    %449 = cast(%var_2849, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
    %450 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 240), float64] */, dtype="int16") /* ty=Tensor[(9, 240), int16] */;
    %451 = cast(%var_2849, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
    %452 = log2(%451) /* ty=Tensor[(1, 240), float32] */;
    %453 = cast(%452, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
    %454 = atan(%445) /* ty=Tensor[(2, 14, 5), float32] */;
    %455 = %448.0;
    %456 = bitwise_and(%449, %450) /* ty=Tensor[(9, 240), int16] */;
    %457 = cos(%453) /* ty=Tensor[(1, 240), float32] */;
    (%454, %455, %456, %457)
  };
  %458(%var_2875) /* ty=(Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) */
}

def @func_6627() -> Tensor[(2, 14, 5), float64] {
  @func_6625() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_5735(%var_5734: Tensor[(96), uint8]) -> (Tensor[(2, 14, 5), float64], Tensor[(6, 2, 8), bool], Tensor[(96), uint8], Tensor[(1, 15, 14), float64], Tensor[(210), float32], Tensor[(14, 12, 8), uint32], Tensor[(1344), uint32], Tensor[(2, 14, 5), float64]) {
  %479 = fn (%var_5692: Tensor[(96), uint8]) -> (Tensor[(2, 14, 5), float64], Tensor[(6, 2, 8), bool], Tensor[(96), uint8], Tensor[(1, 15, 14), float64], Tensor[(210), float32], Tensor[(14, 12, 8), uint32], Tensor[(1344), uint32], Tensor[(2, 14, 5), float64]) {
    %459 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
    %460 = cast(%var_5692, dtype="uint8") /* ty=Tensor[(96), uint8] */;
    %461 = reshape(%460, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), uint8] */;
    %462 = @func_5041(%461) /* ty=(Tensor[(6, 2, 8), uint8], Tensor[(6, 2, 8), bool]) */;
    %463 = cast(meta[relay.Constant][24] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %464 = %459.0;
    %465 = cast(%464, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
    %466 = reshape(%463, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), float32] */;
    %467 = reshape(%465, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %468 = @func_3380(%466, %467) /* ty=(Tensor[(?, 15, 14), float32], Tensor[(1, 15, 14), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 8, 11), float32], Tensor[(528), int8], Tensor[(140), float64]) */;
    %469 = cast(meta[relay.Constant][25] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %470 = cast(meta[relay.Constant][25] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %471 = reshape(%469, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), uint32] */;
    %472 = reshape(%470, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), uint32] */;
    %473 = @func_4402(%471, %472) /* ty=(Tensor[(14, 12, 8), uint32], Tensor[(14, 12, 8), float64]) */;
    %474 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
    %475 = %462.1;
    %476 = %468.1;
    %477 = %473.0;
    %478 = %474.0;
    (%464, %475, %var_5692, %476, meta[relay.Constant][24] /* ty=Tensor[(210), float32] */, %477, meta[relay.Constant][25] /* ty=Tensor[(1344), uint32] */, %478)
  };
  %479(%var_5734) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 2, 8), bool], Tensor[(96), uint8], Tensor[(1, 15, 14), float64], Tensor[(210), float32], Tensor[(14, 12, 8), uint32], Tensor[(1344), uint32], Tensor[(2, 14, 5), float64]) */
}

def @func_7037() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %480 = @func_3981() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) */;
  %481 = @func_4464() /* ty=Tensor[(2, 14, 5), float64] */;
  %482 = %480.4;
  (%481, %482)
}

def @func_5408() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) {
  @func_5406() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8]) */
}

def @func_5766() -> (Tensor[(3, 5, 1), float32],) {
  %485 = fn () -> (Tensor[(3, 5, 1), float32],) {
    %483 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
    %484 = %483.2;
    (%484,)
  };
  %485() /* ty=(Tensor[(3, 5, 1), float32],) */
}

def @func_7852() -> (Tensor[(120, 2), float64],) {
  @func_7850() /* ty=(Tensor[(120, 2), float64],) */
}

def @func_3463() -> Tensor[(2, 14, 5), float64] {
  %486 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %486.0
}

def @func_6697() -> Tensor[(3, 5, 1), float32] {
  @func_6695() /* ty=Tensor[(3, 5, 1), float32] */
}

def @func_3042(%var_3041: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(240), float64], Tensor[(9, 11, 6), int8], Tensor[(392, 2), bool]) {
  %504 = fn (%var_3017: Tensor[(240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(240), float64], Tensor[(9, 11, 6), int8], Tensor[(392, 2), bool]) {
    %487 = cast(meta[relay.Constant][26] /* ty=Tensor[(392, 1), float64] */, dtype="float64") /* ty=Tensor[(392, 1), float64] */;
    %488 = cast(%var_3017, dtype="float64") /* ty=Tensor[(240), float64] */;
    %489 = reshape(%487, newshape=[392]) /* ty=Tensor[(392), float64] */;
    %490 = reshape(%488, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %491 = @func_2942(%489, %490) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(7, 8, 7), uint64], Tensor[(392), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), uint8], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
    %492 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
    %493 = cast(meta[relay.Constant][26] /* ty=Tensor[(392, 1), float64] */, dtype="uint8") /* ty=Tensor[(392, 1), uint8] */;
    %494 = cast(meta[relay.Constant][27] /* ty=Tensor[(392, 2), float64] */, dtype="uint8") /* ty=Tensor[(392, 2), uint8] */;
    %495 = right_shift(%493, %494) /* ty=Tensor[(392, 2), uint8] */;
    %496 = cast(%495, dtype="float64") /* ty=Tensor[(392, 2), float64] */;
    %497 = acosh(%496) /* ty=Tensor[(392, 2), float64] */;
    %498 = cast(%497, dtype="bool") /* ty=Tensor[(392, 2), bool] */;
    %499 = cast(meta[relay.Constant][26] /* ty=Tensor[(392, 1), float64] */, dtype="bool") /* ty=Tensor[(392, 1), bool] */;
    %500 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
    %501 = %491.3;
    %502 = %492.1;
    %503 = less(%498, %499) /* ty=Tensor[(392, 2), bool] */;
    (%500, %501, %var_3017, %502, %503)
  };
  %504(%var_3041) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(240), float64], Tensor[(9, 11, 6), int8], Tensor[(392, 2), bool]) */
}

def @func_5522() -> (Tensor[(2, 14, 5), float64],) {
  %505 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %506 = %505.0;
  (%506,)
}

def @func_8425() -> (Tensor[(15, 594), uint64], Tensor[(15, 594), bool]) {
  @func_8423() /* ty=(Tensor[(15, 594), uint64], Tensor[(15, 594), bool]) */
}

def @func_3880() -> Tensor[(2, 14, 5), float64] {
  %507 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %507.0
}

def @func_4642() -> Tensor[(594), float64] {
  %513 = fn () -> Tensor[(594), float64] {
    %508 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
    %509 = %508.2;
    %510 = cast(%509, dtype="float64") /* ty=Tensor[(594), float64] */;
    %511 = cosh(%510) /* ty=Tensor[(594), float64] */;
    %512 = cast(%511, dtype="float64") /* ty=Tensor[(594), float64] */;
    atanh(%512) /* ty=Tensor[(594), float64] */
  };
  %513() /* ty=Tensor[(594), float64] */
}

def @func_6063() -> (Tensor[(9, 11, 6), int16],) {
  %516 = fn () -> (Tensor[(9, 11, 6), int16],) {
    %514 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
    %515 = %514.1;
    (%515,)
  };
  %516() /* ty=(Tensor[(9, 11, 6), int16],) */
}

def @func_4944() -> (Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) {
  @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */
}

def @func_6443() -> (Tensor[(2, 14, 5), float64],) {
  %518 = fn () -> (Tensor[(2, 14, 5), float64],) {
    %517 = @func_4847() /* ty=Tensor[(2, 14, 5), float64] */;
    (%517,)
  };
  %518() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_2195(%var_2193: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), uint32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  @func_2192(%var_2193) /* ty=(Tensor[(2, 14, 5), uint32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_5452() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %519 = @func_4464() /* ty=Tensor[(2, 14, 5), float64] */;
  %520 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%519, %520)
}

def @func_8729() -> (Tensor[(2, 14, 5), float64],) {
  %521 = @func_8711() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %522 = %521.0;
  (%522,)
}

def @func_8828() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %527 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
    %523 = @func_3981() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) */;
    %524 = @func_8532() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) */;
    %525 = %523.2;
    %526 = %524.1;
    (%525, %526)
  };
  %527() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_2048() -> Tensor[(2, 14, 5), float64] {
  %528 = @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %528.0
}

def @func_5666(%var_5632: Tensor[(14, 1, 7), float32]) -> Tensor[(14, ?, 7), bool] {
  %529 = cast(%var_5632, dtype="float32") /* ty=Tensor[(14, 1, 7), float32] */;
  %530 = erf(%529) /* ty=Tensor[(14, 1, 7), float32] */;
  %531 = cast(%530, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %532 = shape_of(%var_5632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%var_5632, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%533, %534) /* ty=Tensor[(14, ?, 7), bool] */
}

def @func_2192(%var_2166: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), uint32], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %535 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  %536 = cast(%var_2166, dtype="uint32") /* ty=Tensor[(2, 14, 5), uint32] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="uint32") /* ty=Tensor[(2, 14, 5), uint32] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %540 = bitwise_and(%538, %539) /* ty=Tensor[(2, 14, 5), uint32] */;
  %541 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %542 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
  (%540, %541, %542)
}

def @func_5508(%var_5505: Tensor[(9, 16, 10), float32]) -> (Tensor[(9, 16, 10), float32],) {
  %543 = cast(%var_5505, dtype="float32") /* ty=Tensor[(9, 16, 10), float32] */;
  %544 = acos(%543) /* ty=Tensor[(9, 16, 10), float32] */;
  (%544,)
}

def @func_8625(%var_8595: Tensor[(240), float64]) -> (Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(1, 240), float32], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(3, 5, 1), float32], Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %545 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %546 = @func_8532() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001), uint16]) */;
  %547 = cast(%var_8595, dtype="float64") /* ty=Tensor[(240), float64] */;
  %548 = reshape(%547, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %549 = @func_2874(%548) /* ty=(Tensor[(2, 14, 5), float32], Tensor[(2, 14, 5), float64], Tensor[(9, 240), int16], Tensor[(1, 240), float32]) */;
  %550 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %551 = @func_6062() /* ty=(Tensor[(9, 11, 6), int16],) */;
  %552 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %553 = @func_7081() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %554 = %545.1;
  %555 = %546.1;
  %556 = %549.3;
  %557 = %550.0;
  %558 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %559 = @func_6695() /* ty=Tensor[(3, 5, 1), float32] */;
  %560 = %551.0;
  %561 = %552.1;
  %562 = %553.0;
  (%554, %555, %556, %var_8595, %557, %558, %559, %560, %561, %562)
}

def @func_8712() -> (Tensor[(2, 14, 5), float64],) {
  %564 = fn () -> (Tensor[(2, 14, 5), float64],) {
    %563 = @func_2048() /* ty=Tensor[(2, 14, 5), float64] */;
    (%563,)
  };
  %564() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_1962() -> Tensor[(2, 14, 5), float64] {
  @func_1633() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_992(%var_976: Tensor[(7, 8, 7), float64]) -> (Tensor[(7, 8, 7), uint64],) {
  %565 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %566 = cos(%565) /* ty=Tensor[(7, 8, 7), float64] */;
  %567 = cast(%var_976, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %568 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(7, 8, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %571 = floor_divide(%569, %570) /* ty=Tensor[(7, 8, 7), float64] */;
  %572 = cast(%571, dtype="uint64") /* ty=Tensor[(7, 8, 7), uint64] */;
  %573 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%566, dtype="uint64") /* ty=Tensor[(7, 8, 7), uint64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %576 = bitwise_or(%574, %575) /* ty=Tensor[(7, 8, 7), uint64] */;
  (%576,)
}

def @func_4767() -> Tensor[(2, 14, 5), float64] {
  %578 = fn () -> Tensor[(2, 14, 5), float64] {
    %577 = @func_4022() /* ty=(Tensor[(2, 14, 5), float64],) */;
    %577.0
  };
  %578() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_1726(%var_1706: Tensor[(528), int8]) -> (Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(528), int8], Tensor[(9, 11, 6), int8], Tensor[(240), float64]) {
  %579 = cast(%var_1706, dtype="int8") /* ty=Tensor[(528), int8] */;
  %580 = cast(%var_1706, dtype="int8") /* ty=Tensor[(528), int8] */;
  %581 = reshape(%579, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %582 = reshape(%580, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), int8] */;
  %583 = @func_1426(%581, %582) /* ty=(Tensor[(6, 8, 11), bool], Tensor[(6, 8, 11), float32]) */;
  %584 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %585 = reshape(%584, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
  %586 = @func_1224(%585) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
  %587 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  %588 = %583.0;
  %589 = %586.1;
  (%587, %588, %var_1706, %589, meta[relay.Constant][29] /* ty=Tensor[(240), float64] */)
}

def @func_8013(%var_8009: Tensor[(1001), uint16], %var_8010: Tensor[(1001), uint16], %var_8011: Tensor[(52), float32], %var_8012: Tensor[(780, 1), float32]) -> (Tensor[(2, 14, 5), float64], Tensor[(3, 10, 8), float32], Tensor[(240), float64], Tensor[(1001), uint16], Tensor[(1001), float64], Tensor[(4, ?, 13), bool], Tensor[(52), float32], Tensor[(780, 1), float32]) {
  %615 = fn (%var_7977: Tensor[(1001), uint16], %var_7982: Tensor[(1001), uint16], %var_8005: Tensor[(52), float32], %var_8006: Tensor[(780, 1), float32]) -> (Tensor[(2, 14, 5), float64], Tensor[(3, 10, 8), float32], Tensor[(240), float64], Tensor[(1001), uint16], Tensor[(1001), float64], Tensor[(4, ?, 13), bool], Tensor[(52), float32], Tensor[(780, 1), float32]) {
    %590 = cast(meta[relay.Constant][30] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %591 = reshape(%590, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
    %592 = @func_1224(%591) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
    %593 = cast(%var_7977, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %594 = reshape(%593, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
    %595 = @func_2421(%594) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) */;
    %596 = cast(%var_7982, dtype="float32") /* ty=Tensor[(1001), float32] */;
    %597 = shape_of(%var_7977, dtype="int32") /* ty=Tensor[(1), int32] */;
    %598 = cast(%var_7977, dtype="float32") /* ty=Tensor[(1001), float32] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?), float32] */;
    %600 = floor_divide(%598, %599) /* ty=Tensor[(1001), float32] */;
    %601 = cast(meta[relay.Constant][31] /* ty=Tensor[(1001), float32] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
    %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(1), int32] */;
    %603 = cast(%600, dtype="float64") /* ty=Tensor[(1001), float64] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?), float64] */;
    %605 = cast(%var_8005, dtype="float32") /* ty=Tensor[(52), float32] */;
    %606 = cast(%var_8006, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
    %607 = reshape(%605, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float32] */;
    %608 = reshape(%606, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float32] */;
    %609 = @func_3137(%607, %608) /* ty=(Tensor[(4, 15, 13), float32], Tensor[(4, 60), float64], Tensor[(240), float64], Tensor[(4, ?, 13), bool]) */;
    %610 = @func_7744() /* ty=Tensor[(2, 14, 5), float64] */;
    %611 = %592.0;
    %612 = %595.2;
    %613 = mod(%603, %604) /* ty=Tensor[(1001), float64] */;
    %614 = %609.3;
    (%610, %611, meta[relay.Constant][30] /* ty=Tensor[(240), float64] */, %612, %613, %614, %var_8005, %var_8006)
  };
  %615(%var_8009, %var_8010, %var_8011, %var_8012) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(3, 10, 8), float32], Tensor[(240), float64], Tensor[(1001), uint16], Tensor[(1001), float64], Tensor[(4, ?, 13), bool], Tensor[(52), float32], Tensor[(780, 1), float32]) */
}

def @func_6925(%var_6923: Tensor[(9, 240), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(594), float64], Tensor[(225), float64], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 240), float32]) {
  @func_6922(%var_6923) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(594), float64], Tensor[(225), float64], Tensor[(240), float64], Tensor[(2, 14, 5), float64], Tensor[(9, 240), float32]) */
}

def @func_8305(%var_8304: Tensor[(2, 1001), float64]) -> (Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), uint64], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), float64]) {
  %630 = fn (%var_8275: Tensor[(2, 1001), float64]) -> (Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), uint64], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), float64]) {
    %616 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
    %617 = @func_6368() /* ty=(Tensor[(9, 11, 6), int16], Tensor[(?, 1001), float64]) */;
    %618 = %617.1;
    %619 = cast(%618, dtype="uint64") /* ty=Tensor[(?, 1001), uint64] */;
    %620 = cast(%var_8275, dtype="uint64") /* ty=Tensor[(2, 1001), uint64] */;
    %621 = cast(%618, dtype="float32") /* ty=Tensor[(?, 1001), float32] */;
    %622 = cast(%var_8275, dtype="float32") /* ty=Tensor[(2, 1001), float32] */;
    %623 = floor_mod(%621, %622) /* ty=Tensor[(2, 1001), float32] */;
    %624 = cast(%623, dtype="float64") /* ty=Tensor[(2, 1001), float64] */;
    %625 = %616.1;
    %626 = @func_3463() /* ty=Tensor[(2, 14, 5), float64] */;
    %627 = minimum(%619, %620) /* ty=Tensor[(2, 1001), uint64] */;
    %628 = @func_3658() /* ty=Tensor[(2, 14, 5), float64] */;
    %629 = exp(%624) /* ty=Tensor[(2, 1001), float64] */;
    (%625, %626, %627, %628, %629)
  };
  %630(%var_8304) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), uint64], Tensor[(2, 14, 5), float64], Tensor[(2, 1001), float64]) */
}

def @func_8146() -> (Tensor[(594), float64],) {
  @func_8144() /* ty=(Tensor[(594), float64],) */
}

def @func_1671(%var_1670: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), uint8],) {
  %637 = fn (%var_1659: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), uint8],) {
    %631 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
    %632 = cast(%var_1659, dtype="uint8") /* ty=Tensor[(2, 14, 5), uint8] */;
    %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%631, dtype="uint8") /* ty=Tensor[(2, 14, 5), uint8] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %636 = right_shift(%634, %635) /* ty=Tensor[(2, 14, 5), uint8] */;
    (%636,)
  };
  %637(%var_1670) /* ty=(Tensor[(2, 14, 5), uint8],) */
}

def @func_6581(%var_6579: Tensor[(1, 14, 9), float32]) -> (Tensor[(1, 14, 9), float32],) {
  @func_6578(%var_6579) /* ty=(Tensor[(1, 14, 9), float32],) */
}

def @func_8166() -> (Tensor[(2, 14, 5), float64],) {
  @func_8164() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_3660() -> Tensor[(2, 14, 5), float64] {
  @func_3658() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_1224(%var_1191: Tensor[(3, 10, 8), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) {
  %638 = cast(%var_1191, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %639 = sin(%638) /* ty=Tensor[(3, 10, 8), float64] */;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %641 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 99), float64] */, dtype="float64") /* ty=Tensor[(6, 99), float64] */;
  %642 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 99), float64] */, dtype="float64") /* ty=Tensor[(6, 99), float64] */;
  %643 = reshape(%641, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %644 = reshape(%642, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %645 = @func_330(%643, %644) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %646 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 99), float64] */, dtype="float64") /* ty=Tensor[(6, 99), float64] */;
  %647 = %645.1;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %649 = reshape(%646, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %650 = reshape(%648, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %651 = @func_330(%649, %650) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %652 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 77), uint16] */, dtype="uint16") /* ty=Tensor[(13, 77), uint16] */;
  %653 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 77), uint16] */, dtype="uint16") /* ty=Tensor[(13, 77), uint16] */;
  %654 = cast(%647, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %655 = reshape(%652, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %656 = reshape(%653, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
  %657 = reshape(%654, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %658 = @func_677(%655, %656, %657) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %659 = %658.1;
  %660 = cast(%659, dtype="bool") /* ty=Tensor[(13, 11, 7), bool] */;
  %661 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(13, 77), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %662 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 77), uint16] */, dtype="bool") /* ty=Tensor[(13, 77), bool] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %664 = atanh(%640) /* ty=Tensor[(3, 10, 8), float32] */;
  %665 = %651.0;
  %666 = less_equal(%662, %663) /* ty=Tensor[(13, 77), bool] */;
  (%664, %647, meta[relay.Constant][32] /* ty=Tensor[(6, 99), float64] */, %665, %666)
}

def @func_6145() -> (Tensor[(2, 14, 5), float64],) {
  %669 = fn () -> (Tensor[(2, 14, 5), float64],) {
    %667 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
    %668 = %667.0;
    (%668,)
  };
  %669() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_5586() -> Tensor[(2, 14, 5), float64] {
  %670 = fn () -> Tensor[(2, 14, 5), float64] {
    @func_1962() /* ty=Tensor[(2, 14, 5), float64] */
  };
  %670() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_4116() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
  %676 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) {
    %671 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
    %672 = @func_3981() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64]) */;
    %673 = @func_3463() /* ty=Tensor[(2, 14, 5), float64] */;
    %674 = %671.0;
    %675 = %672.4;
    (%673, %674, %675)
  };
  %676() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */
}

def @func_8220(%var_8204: Tensor[(1, 8, 14), uint32], %var_8205: Tensor[(13, 8, 14), uint32]) -> Tensor[(13, 8, 14), bool] {
  %677 = cast(%var_8204, dtype="bool") /* ty=Tensor[(1, 8, 14), bool] */;
  %678 = cast(%var_8205, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  greater(%677, %678) /* ty=Tensor[(13, 8, 14), bool] */
}

def @func_2350(%var_2348: Tensor[(1001, 1), uint16], %var_2349: Tensor[(594), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  @func_2346(%var_2348, %var_2349) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */
}

def @func_1836(%var_1835: Tensor[(4, 60), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) {
  %696 = fn (%var_1806: Tensor[(4, 60), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) {
    %679 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
    %680 = cast(%679, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
    %681 = reshape(%680, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
    %682 = @func_1669(%681) /* ty=(Tensor[(2, 14, 5), uint8],) */;
    %683 = cast(%var_1806, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
    %684 = reshape(%683, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
    %685 = @func_1224(%684) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 11, 6), int8], Tensor[(6, 99), float64], Tensor[(9, 11, 6), int16], Tensor[(13, 77), bool]) */;
    %686 = cast(meta[relay.Constant][34] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
    %687 = reshape(%686, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float64] */;
    %688 = @func_992(%687) /* ty=(Tensor[(7, 8, 7), uint64],) */;
    %689 = %688.0;
    %690 = cast(%689, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
    %691 = acosh(%690) /* ty=Tensor[(7, 8, 7), float64] */;
    %692 = cast(%691, dtype="float32") /* ty=Tensor[(7, 8, 7), float32] */;
    %693 = %682.0;
    %694 = %685.2;
    %695 = erf(%692) /* ty=Tensor[(7, 8, 7), float32] */;
    (%679, meta[relay.Constant][34] /* ty=Tensor[(392), float64] */, %693, %694, %var_1806, %695)
  };
  %696(%var_1835) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) */
}

def @func_333(%var_331: Tensor[(9, 11, 6), float64], %var_332: Tensor[(9, 11, 6), float64]) -> (Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) {
  %711 = fn (%var_299: Tensor[(9, 11, 6), float64], %var_320: Tensor[(9, 11, 6), float64]) -> (Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) {
    %697 = cast(%var_299, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
    %698 = log(%697) /* ty=Tensor[(9, 11, 6), float64] */;
    %699 = cast(%698, dtype="int16") /* ty=Tensor[(9, 11, 6), int16] */;
    %700 = shape_of(%var_299, dtype="int32") /* ty=Tensor[(3), int32] */;
    %701 = cast(%var_299, dtype="int16") /* ty=Tensor[(9, 11, 6), int16] */;
    %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %703 = cast(%698, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
    %704 = cos(%703) /* ty=Tensor[(9, 11, 6), float64] */;
    %705 = cast(%var_320, dtype="int8") /* ty=Tensor[(9, 11, 6), int8] */;
    %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
    %707 = cast(%704, dtype="int8") /* ty=Tensor[(9, 11, 6), int8] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %709 = logical_xor(%701, %702) /* ty=Tensor[(9, 11, 6), int16] */;
    %710 = bitwise_xor(%707, %708) /* ty=Tensor[(9, 11, 6), int8] */;
    (%709, %710)
  };
  %711(%var_331, %var_332) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */
}

def @func_4402(%var_4368: Tensor[(14, 12, 8), uint32], %var_4369: Tensor[(14, 12, 8), uint32]) -> (Tensor[(14, 12, 8), uint32], Tensor[(14, 12, 8), float64]) {
  %712 = cast(%var_4369, dtype="uint32") /* ty=Tensor[(14, 12, 8), uint32] */;
  %713 = shape_of(%var_4368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(%var_4368, dtype="uint32") /* ty=Tensor[(14, 12, 8), uint32] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %716 = cast(%var_4368, dtype="float64") /* ty=Tensor[(14, 12, 8), float64] */;
  %717 = add(%714, %715) /* ty=Tensor[(14, 12, 8), uint32] */;
  %718 = sqrt(%716) /* ty=Tensor[(14, 12, 8), float64] */;
  (%717, %718)
}

def @func_3919() -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) {
  %719 = @func_3100() /* ty=(Tensor[(2, 14, 5), float64],) */;
  %720 = %719.0;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %722 = cast(meta[relay.Constant][35] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %723 = cast(meta[relay.Constant][35] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %724 = reshape(%722, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %725 = reshape(%723, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float64] */;
  %726 = @func_330(%724, %725) /* ty=(Tensor[(9, 11, 6), int16], Tensor[(9, 11, 6), int8]) */;
  %727 = rsqrt(%721) /* ty=Tensor[(2, 14, 5), float64] */;
  %728 = %726.0;
  (%727, %728, meta[relay.Constant][35] /* ty=Tensor[(594), float64] */)
}

def @func_3465() -> Tensor[(2, 14, 5), float64] {
  @func_3463() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_4805() -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) {
  %729 = cast(meta[relay.Constant][36] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %730 = reshape(%729, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %731 = @func_2779(%730) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) */;
  %732 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  %733 = %731.0;
  (%732, %733, meta[relay.Constant][36] /* ty=Tensor[(120, 2), float64] */)
}

def @func_5980(%var_5965: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), int8],) {
  %734 = @func_5452() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %735 = %734.1;
  %736 = cast(%var_5965, dtype="int8") /* ty=Tensor[(2, 14, 5), int8] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="int8") /* ty=Tensor[(2, 14, 5), int8] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %740 = left_shift(%738, %739) /* ty=Tensor[(2, 14, 5), int8] */;
  (%740,)
}

def @func_5210(%var_5208: Tensor[(120, 2), float64], %var_5209: Tensor[(120, 2), float64]) -> (Tensor[(120, 2), bool], Tensor[(120, 2), bool], Tensor[(2, 14, 5), float64]) {
  %759 = fn (%var_5153: Tensor[(120, 2), float64], %var_5186: Tensor[(120, 2), float64]) -> (Tensor[(120, 2), bool], Tensor[(120, 2), bool], Tensor[(2, 14, 5), float64]) {
    %741 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
    %742 = %741.2;
    %743 = cast(%var_5153, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
    %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(2), int32] */;
    %745 = cast(%742, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
    %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %747 = cast(%var_5186, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
    %748 = shape_of(%var_5153, dtype="int32") /* ty=Tensor[(2), int32] */;
    %749 = cast(%var_5153, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %751 = maximum(%749, %750) /* ty=Tensor[(120, 2), float32] */;
    %752 = cast(%742, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
    %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(2), int32] */;
    %754 = cast(%751, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %756 = less_equal(%745, %746) /* ty=Tensor[(120, 2), bool] */;
    %757 = greater(%754, %755) /* ty=Tensor[(120, 2), bool] */;
    %758 = @func_4766() /* ty=Tensor[(2, 14, 5), float64] */;
    (%756, %757, %758)
  };
  %759(%var_5208, %var_5209) /* ty=(Tensor[(120, 2), bool], Tensor[(120, 2), bool], Tensor[(2, 14, 5), float64]) */
}

def @func_8785() -> Tensor[(2, 14, 5), float64] {
  %760 = @func_6218() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(?, 1001), float32]) */;
  %760.0
}

def @func_1907() -> (Tensor[(2, 14, 5), float64],) {
  @func_1905() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_6416() -> Tensor[(594), float64] {
  %762 = fn () -> Tensor[(594), float64] {
    %761 = @func_4418() /* ty=(Tensor[(594), float64],) */;
    %761.0
  };
  %762() /* ty=Tensor[(594), float64] */
}

def @func_7083() -> (Tensor[(2, 14, 5), float64],) {
  @func_7081() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_8574(%var_8573: Tensor[(16, 13, 2), float64]) -> (Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float64]) {
  %772 = fn (%var_8554: Tensor[(16, 13, 2), float64]) -> (Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float64]) {
    %763 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 13, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
    %764 = log2(%763) /* ty=Tensor[(16, 13, 2), float64] */;
    %765 = cast(%var_8554, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
    %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %767 = cast(%764, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %769 = cast(%764, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
    %770 = equal(%767, %768) /* ty=Tensor[(16, 13, 2), bool] */;
    %771 = tan(%769) /* ty=Tensor[(16, 13, 2), float64] */;
    (%770, %771)
  };
  %772(%var_8573) /* ty=(Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float64]) */
}

def @func_3658() -> Tensor[(2, 14, 5), float64] {
  @func_3173() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_7876(%var_7875: bool) -> Tensor[(14, 4, 6), bool] {
  %775 = fn (%var_7860: bool) -> Tensor[(14, 4, 6), bool] {
    %773 = cast(%var_7860, dtype="bool") /* ty=bool */;
    %774 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 4, 6), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
    logical_and(%773, %774) /* ty=Tensor[(14, 4, 6), bool] */
  };
  %775(%var_7875) /* ty=Tensor[(14, 4, 6), bool] */
}

def @func_7468(%var_7459: Tensor[(16, 5, 4), float64]) -> Tensor[(16, 5, 4), float64] {
  %776 = cast(%var_7459, dtype="float64") /* ty=Tensor[(16, 5, 4), float64] */;
  sigmoid(%776) /* ty=Tensor[(16, 5, 4), float64] */
}

def @func_2423(%var_2422: Tensor[(1001), uint16]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) {
  %789 = fn (%var_2399: Tensor[(1001), uint16]) -> (Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) {
    %777 = cast(%var_2399, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %778 = cast(%var_2399, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %779 = cast(meta[relay.Constant][39] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
    %780 = reshape(%777, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
    %781 = reshape(%778, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), uint16] */;
    %782 = reshape(%779, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %783 = @func_677(%780, %781, %782) /* ty=(Tensor[(13, 11, 7), uint16], Tensor[(13, 11, 7), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
    %784 = %783.1;
    %785 = cast(%784, dtype="float64") /* ty=Tensor[(13, 11, 7), float64] */;
    %786 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
    %787 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
    %788 = acosh(%785) /* ty=Tensor[(13, 11, 7), float64] */;
    (%786, %787, %var_2399, meta[relay.Constant][39] /* ty=Tensor[(594), float64] */, %788)
  };
  %789(%var_2422) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), float64]) */
}

def @func_5012() -> (Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32], Tensor[(120, 2), float64]) {
  %795 = fn () -> (Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32], Tensor[(120, 2), float64]) {
    %790 = cast(meta[relay.Constant][40] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
    %791 = reshape(%790, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
    %792 = @func_2779(%791) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) */;
    %793 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
    %794 = %792.1;
    (%793, %794, meta[relay.Constant][40] /* ty=Tensor[(120, 2), float64] */)
  };
  %795() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32], Tensor[(120, 2), float64]) */
}

def @func_4848() -> Tensor[(2, 14, 5), float64] {
  %800 = fn () -> Tensor[(2, 14, 5), float64] {
    %796 = @func_3658() /* ty=Tensor[(2, 14, 5), float64] */;
    %797 = cast(%796, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
    %798 = tan(%797) /* ty=Tensor[(2, 14, 5), float64] */;
    %799 = cast(%798, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
    acos(%799) /* ty=Tensor[(2, 14, 5), float64] */
  };
  %800() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_2781(%var_2780: Tensor[(240, 1), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) {
  %811 = fn (%var_2772: Tensor[(240, 1), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) {
    %801 = cast(%var_2772, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %802 = reshape(%801, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
    %803 = @func_1834(%802) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(392), float64], Tensor[(2, 14, 5), uint8], Tensor[(6, 99), float64], Tensor[(4, 60), float64], Tensor[(7, 8, 7), float32]) */;
    %804 = %803.4;
    %805 = cast(%var_2772, dtype="uint32") /* ty=Tensor[(240, 1), uint32] */;
    %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(2), int32] */;
    %807 = cast(%804, dtype="uint32") /* ty=Tensor[(4, 60), uint32] */;
    %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %809 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
    %810 = subtract(%807, %808) /* ty=Tensor[(4, 60), uint32] */;
    (%809, %810)
  };
  %811(%var_2780) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(4, 60), uint32]) */
}

def @func_1729(%var_1727: Tensor[(528), int8]) -> (Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(528), int8], Tensor[(9, 11, 6), int8], Tensor[(240), float64]) {
  @func_1726(%var_1727) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(528), int8], Tensor[(9, 11, 6), int8], Tensor[(240), float64]) */
}

def @func_4406(%var_4404: Tensor[(14, 12, 8), uint32], %var_4405: Tensor[(14, 12, 8), uint32]) -> (Tensor[(14, 12, 8), uint32], Tensor[(14, 12, 8), float64]) {
  @func_4402(%var_4404, %var_4405) /* ty=(Tensor[(14, 12, 8), uint32], Tensor[(14, 12, 8), float64]) */
}

def @func_4420() -> (Tensor[(594), float64],) {
  @func_4418() /* ty=(Tensor[(594), float64],) */
}

def @func_3174() -> Tensor[(2, 14, 5), float64] {
  %812 = fn () -> Tensor[(2, 14, 5), float64] {
    @func_2048() /* ty=Tensor[(2, 14, 5), float64] */
  };
  %812() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_5511(%var_5509: Tensor[(9, 16, 10), float32]) -> (Tensor[(9, 16, 10), float32],) {
  @func_5508(%var_5509) /* ty=(Tensor[(9, 16, 10), float32],) */
}

def @func_4201(%var_4199: Tensor[(9, 11, 6), int16]) -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), float64], Tensor[(594), float64]) {
  @func_4198(%var_4199) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), float64], Tensor[(594), float64]) */
}

def @func_2050() -> Tensor[(2, 14, 5), float64] {
  @func_2048() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_4942() -> (Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) {
  %813 = @func_4115() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(594), float64]) */;
  %814 = %813.2;
  %815 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 1), float32] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %816 = cast(%814, dtype="float64") /* ty=Tensor[(594), float64] */;
  %817 = cast(%814, dtype="float64") /* ty=Tensor[(594), float64] */;
  %818 = reshape(%817, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %819 = @func_3347(%818) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %820 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %821 = reshape(%820, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
  %822 = @func_4663(%821) /* ty=(Tensor[(3, 5, 1), float32],) */;
  %823 = %822.0;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
  %825 = multiply(%815, %816) /* ty=Tensor[(15, 594), float64] */;
  %826 = %819.2;
  %827 = acosh(%824) /* ty=Tensor[(3, 5, 1), float32] */;
  (%825, %826, %827)
}

def @func_5041(%var_5021: Tensor[(6, 2, 8), uint8]) -> (Tensor[(6, 2, 8), uint8], Tensor[(6, 2, 8), bool]) {
  %828 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 2, 8), uint8] */, dtype="uint8") /* ty=Tensor[(6, 2, 8), uint8] */;
  %829 = shape_of(%var_5021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%var_5021, dtype="uint8") /* ty=Tensor[(6, 2, 8), uint8] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %832 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 2, 8), uint8] */, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %833 = shape_of(%var_5021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%var_5021, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %836 = bitwise_xor(%830, %831) /* ty=Tensor[(6, 2, 8), uint8] */;
  %837 = logical_and(%834, %835) /* ty=Tensor[(6, 2, 8), bool] */;
  (%836, %837)
}

def @func_6695() -> Tensor[(3, 5, 1), float32] {
  %838 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
  %838.2
}

def @func_8105(%var_8104: Tensor[(15, 594), float64]) -> Tensor[(15, 594), bool] {
  %844 = fn (%var_8089: Tensor[(15, 594), float64]) -> Tensor[(15, 594), bool] {
    %839 = @func_7203() /* ty=Tensor[(15, 594), float64] */;
    %840 = cast(%var_8089, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
    %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(2), int32] */;
    %842 = cast(%839, dtype="bool") /* ty=Tensor[(15, 594), bool] */;
    %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    less_equal(%842, %843) /* ty=Tensor[(15, 594), bool] */
  };
  %844(%var_8104) /* ty=Tensor[(15, 594), bool] */
}

def @func_5044(%var_5042: Tensor[(6, 2, 8), uint8]) -> (Tensor[(6, 2, 8), uint8], Tensor[(6, 2, 8), bool]) {
  @func_5041(%var_5042) /* ty=(Tensor[(6, 2, 8), uint8], Tensor[(6, 2, 8), bool]) */
}

def @func_5524() -> (Tensor[(2, 14, 5), float64],) {
  @func_5522() /* ty=(Tensor[(2, 14, 5), float64],) */
}

def @func_6370() -> (Tensor[(9, 11, 6), int16], Tensor[(?, 1001), float64]) {
  @func_6368() /* ty=(Tensor[(9, 11, 6), int16], Tensor[(?, 1001), float64]) */
}

def @func_7314() -> Tensor[(2, 14, 5), bool] {
  %845 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %845.0
}

def @func_4606(%var_4570: Tensor[(1001), uint16]) -> (Tensor[(594), float64], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(1001), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) {
  %846 = @func_2088() /* ty=(Tensor[(2, 14, 5), bool], Tensor[(9, 11, 6), int8], Tensor[(594), float64]) */;
  %847 = cast(%var_4570, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %848 = %846.2;
  %849 = cast(%848, dtype="float64") /* ty=Tensor[(594), float64] */;
  %850 = reshape(%847, newshape=[1001, 1]) /* ty=Tensor[(1001, 1), uint16] */;
  %851 = reshape(%849, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %852 = @func_2346(%850, %851) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(1001, 1), uint16], Tensor[(594), float64], Tensor[(13, 11, 7), uint16], Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64]) */;
  %853 = @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */;
  %854 = @func_3463() /* ty=Tensor[(2, 14, 5), float64] */;
  %855 = %852.6;
  %856 = @func_1962() /* ty=Tensor[(2, 14, 5), float64] */;
  %857 = %853.0;
  (%848, %854, %855, %var_4570, %856, %857)
}

def @func_3882() -> Tensor[(2, 14, 5), float64] {
  @func_3880() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_6404() -> (Tensor[(2, 14, 5), float64], Tensor[(594), float64], Tensor[(2, 14, 5), float64]) {
  %858 = @func_4805() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(2, 14, 5), float64], Tensor[(120, 2), float64]) */;
  %859 = @func_5798() /* ty=(Tensor[(594), float64],) */;
  %860 = %858.1;
  %861 = %859.0;
  %862 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  (%860, %861, %862)
}

def @func_2225(%var_2223: Tensor[(7, 3, 16), uint64]) -> (Tensor[(7, 3, 16), uint64],) {
  @func_2222(%var_2223) /* ty=(Tensor[(7, 3, 16), uint64],) */
}

def @func_4022() -> (Tensor[(2, 14, 5), float64],) {
  %863 = @func_3173() /* ty=Tensor[(2, 14, 5), float64] */;
  (%863,)
}

def @func_3921() -> (Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) {
  @func_3919() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(9, 11, 6), int16], Tensor[(594), float64]) */
}

def @func_1964() -> Tensor[(2, 14, 5), float64] {
  @func_1962() /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_8659() -> (Tensor[(120, 2), float64],) {
  @func_8657() /* ty=(Tensor[(120, 2), float64],) */
}

def @func_5918(%var_5908: Tensor[(15), float32]) -> (Tensor[(3, 5, 1), float32], Tensor[(15), float32], Tensor[(1, 1001), float64]) {
  %864 = cast(%var_5908, dtype="float32") /* ty=Tensor[(15), float32] */;
  %865 = reshape(%864, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
  %866 = @func_4663(%865) /* ty=(Tensor[(3, 5, 1), float32],) */;
  %867 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %868 = %867.4;
  %869 = cast(%868, dtype="float64") /* ty=Tensor[(1, 1001), float64] */;
  %870 = %866.0;
  %871 = log10(%869) /* ty=Tensor[(1, 1001), float64] */;
  (%870, %var_5908, %871)
}

def @func_7204() -> Tensor[(15, 594), float64] {
  %875 = fn () -> Tensor[(15, 594), float64] {
    %872 = @func_4942() /* ty=(Tensor[(15, 594), float64], Tensor[(594), float64], Tensor[(3, 5, 1), float32]) */;
    %873 = %872.0;
    %874 = cast(%873, dtype="float64") /* ty=Tensor[(15, 594), float64] */;
    log2(%874) /* ty=Tensor[(15, 594), float64] */
  };
  %875() /* ty=Tensor[(15, 594), float64] */
}

def @func_1633() -> Tensor[(2, 14, 5), float64] {
  %876 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  log2(%876) /* ty=Tensor[(2, 14, 5), float64] */
}

def @func_7451() -> (Tensor[(2, 14, 5), float64],) {
  %877 = @func_1633() /* ty=Tensor[(2, 14, 5), float64] */;
  (%877,)
}

def @func_5921(%var_5919: Tensor[(15), float32]) -> (Tensor[(3, 5, 1), float32], Tensor[(15), float32], Tensor[(1, 1001), float64]) {
  @func_5918(%var_5919) /* ty=(Tensor[(3, 5, 1), float32], Tensor[(15), float32], Tensor[(1, 1001), float64]) */
}

def @func_7413(%var_7394: Tensor[(5, 28), float64]) -> (Tensor[(8, 66), int8], Tensor[(2, 14, 5), int8], Tensor[(5, 28), float64]) {
  %878 = @func_3264() /* ty=(Tensor[(2, 14, 5), float64], Tensor[(6, 8, 11), bool], Tensor[(8, 66), int8], Tensor[(2, 14, 5), float64], Tensor[(1, 1001), uint16], Tensor[(336), uint64], Tensor[(2, 14, 5), uint8]) */;
  %879 = cast(%var_7394, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %880 = reshape(%879, newshape=[2, 14, 5]) /* ty=Tensor[(2, 14, 5), float64] */;
  %881 = @func_5980(%880) /* ty=(Tensor[(2, 14, 5), int8],) */;
  %882 = %878.2;
  %883 = %881.0;
  (%882, %883, %var_7394)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

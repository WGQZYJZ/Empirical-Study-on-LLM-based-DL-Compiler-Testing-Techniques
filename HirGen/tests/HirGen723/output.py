import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_174 = relay.var("var_174", dtype = "float64", shape = (16, 12, 8))#candidate|174|(16, 12, 8)|var|float64
uop_175 = relay.sqrt(var_174.astype('float64')) # shape=(16, 12, 8)
output = relay.Tuple([uop_175,])
output2 = relay.Tuple([uop_175,])
func_179 = relay.Function([var_174,], output)
mod['func_179'] = func_179
mod = relay.transform.InferType()(mod)
mutated_mod['func_179'] = func_179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_180 = relay.var("var_180", dtype = "float64", shape = (16, 12, 8))#candidate|180|(16, 12, 8)|var|float64
func_179_call = mutated_mod.get_global_var('func_179')
call_181 = func_179_call(var_180)
output = call_181
func_182 = relay.Function([var_180], output)
mutated_mod['func_182'] = func_182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_311 = relay.var("var_311", dtype = "float64", shape = (1, 4, 5))#candidate|311|(1, 4, 5)|var|float64
uop_312 = relay.erf(var_311.astype('float64')) # shape=(1, 4, 5)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
var_315 = relay.var("var_315", dtype = "float64", shape = (1536,))#candidate|315|(1536,)|var|float64
call_314 = relay.TupleGetItem(func_179_call(relay.reshape(var_315.astype('float64'), [16, 12, 8])), 0)
call_316 = relay.TupleGetItem(func_182_call(relay.reshape(var_315.astype('float64'), [16, 12, 8])), 0)
uop_317 = relay.tan(uop_312.astype('float64')) # shape=(1, 4, 5)
uop_319 = relay.exp(var_311.astype('float64')) # shape=(1, 4, 5)
output = relay.Tuple([call_314,var_315,uop_317,uop_319,])
output2 = relay.Tuple([call_316,var_315,uop_317,uop_319,])
func_328 = relay.Function([var_311,var_315,], output)
mod['func_328'] = func_328
mod = relay.transform.InferType()(mod)
var_329 = relay.var("var_329", dtype = "float64", shape = (1, 4, 5))#candidate|329|(1, 4, 5)|var|float64
var_330 = relay.var("var_330", dtype = "float64", shape = (1536,))#candidate|330|(1536,)|var|float64
output = func_328(var_329,var_330,)
func_331 = relay.Function([var_329,var_330,], output)
mutated_mod['func_331'] = func_331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_771 = relay.var("var_771", dtype = "float64", shape = (4, 5, 6))#candidate|771|(4, 5, 6)|var|float64
uop_772 = relay.acos(var_771.astype('float64')) # shape=(4, 5, 6)
uop_785 = relay.atanh(uop_772.astype('float64')) # shape=(4, 5, 6)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
var_790 = relay.var("var_790", dtype = "float64", shape = (1536,))#candidate|790|(1536,)|var|float64
call_789 = relay.TupleGetItem(func_179_call(relay.reshape(var_790.astype('float64'), [16, 12, 8])), 0)
call_791 = relay.TupleGetItem(func_182_call(relay.reshape(var_790.astype('float64'), [16, 12, 8])), 0)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
call_802 = relay.TupleGetItem(func_179_call(relay.reshape(call_789.astype('float64'), [16, 12, 8])), 0)
call_803 = relay.TupleGetItem(func_182_call(relay.reshape(call_789.astype('float64'), [16, 12, 8])), 0)
output = relay.Tuple([uop_785,call_789,var_790,call_802,])
output2 = relay.Tuple([uop_785,call_791,var_790,call_803,])
func_805 = relay.Function([var_771,var_790,], output)
mod['func_805'] = func_805
mod = relay.transform.InferType()(mod)
mutated_mod['func_805'] = func_805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_805_call = mutated_mod.get_global_var('func_805')
var_807 = relay.var("var_807", dtype = "float64", shape = (4, 5, 6))#candidate|807|(4, 5, 6)|var|float64
var_808 = relay.var("var_808", dtype = "float64", shape = (1536,))#candidate|808|(1536,)|var|float64
call_806 = func_805_call(var_807,var_808,)
output = call_806
func_809 = relay.Function([var_807,var_808,], output)
mutated_mod['func_809'] = func_809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_871 = relay.var("var_871", dtype = "float32", shape = (11, 5, 13))#candidate|871|(11, 5, 13)|var|float32
uop_872 = relay.tan(var_871.astype('float32')) # shape=(11, 5, 13)
bop_877 = relay.divide(var_871.astype('float64'), relay.reshape(uop_872.astype('float64'), relay.shape_of(var_871))) # shape=(11, 5, 13)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
var_885 = relay.var("var_885", dtype = "float64", shape = (1536,))#candidate|885|(1536,)|var|float64
call_884 = relay.TupleGetItem(func_179_call(relay.reshape(var_885.astype('float64'), [16, 12, 8])), 0)
call_886 = relay.TupleGetItem(func_182_call(relay.reshape(var_885.astype('float64'), [16, 12, 8])), 0)
uop_889 = relay.cos(var_871.astype('float32')) # shape=(11, 5, 13)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
call_891 = relay.TupleGetItem(func_179_call(relay.reshape(call_884.astype('float64'), [16, 12, 8])), 0)
call_892 = relay.TupleGetItem(func_182_call(relay.reshape(call_884.astype('float64'), [16, 12, 8])), 0)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
var_899 = relay.var("var_899", dtype = "float64", shape = (6, 20))#candidate|899|(6, 20)|var|float64
call_898 = relay.TupleGetItem(func_805_call(relay.reshape(var_899.astype('float64'), [4, 5, 6]), relay.reshape(call_891.astype('float64'), [1536,]), ), 2)
call_900 = relay.TupleGetItem(func_809_call(relay.reshape(var_899.astype('float64'), [4, 5, 6]), relay.reshape(call_891.astype('float64'), [1536,]), ), 2)
output = relay.Tuple([bop_877,call_884,var_885,uop_889,call_891,call_898,var_899,])
output2 = relay.Tuple([bop_877,call_886,var_885,uop_889,call_892,call_900,var_899,])
func_909 = relay.Function([var_871,var_885,var_899,], output)
mod['func_909'] = func_909
mod = relay.transform.InferType()(mod)
var_910 = relay.var("var_910", dtype = "float32", shape = (11, 5, 13))#candidate|910|(11, 5, 13)|var|float32
var_911 = relay.var("var_911", dtype = "float64", shape = (1536,))#candidate|911|(1536,)|var|float64
var_912 = relay.var("var_912", dtype = "float64", shape = (6, 20))#candidate|912|(6, 20)|var|float64
output = func_909(var_910,var_911,var_912,)
func_913 = relay.Function([var_910,var_911,var_912,], output)
mutated_mod['func_913'] = func_913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1060 = relay.var("var_1060", dtype = "float32", shape = (5, 9, 8))#candidate|1060|(5, 9, 8)|var|float32
uop_1061 = relay.asinh(var_1060.astype('float32')) # shape=(5, 9, 8)
output = uop_1061
output2 = uop_1061
func_1074 = relay.Function([var_1060,], output)
mod['func_1074'] = func_1074
mod = relay.transform.InferType()(mod)
mutated_mod['func_1074'] = func_1074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1075 = relay.var("var_1075", dtype = "float32", shape = (5, 9, 8))#candidate|1075|(5, 9, 8)|var|float32
func_1074_call = mutated_mod.get_global_var('func_1074')
call_1076 = func_1074_call(var_1075)
output = call_1076
func_1077 = relay.Function([var_1075], output)
mutated_mod['func_1077'] = func_1077
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1099 = relay.const(9, dtype = "uint64")#candidate|1099|()|const|uint64
var_1100 = relay.var("var_1100", dtype = "uint64", shape = (13, 7, 3))#candidate|1100|(13, 7, 3)|var|uint64
bop_1101 = relay.bitwise_xor(const_1099.astype('uint64'), var_1100.astype('uint64')) # shape=(13, 7, 3)
func_328_call = mod.get_global_var('func_328')
func_331_call = mutated_mod.get_global_var('func_331')
var_1122 = relay.var("var_1122", dtype = "float64", shape = (20,))#candidate|1122|(20,)|var|float64
const_1123 = relay.const([[0.773324,-1.253280,-0.773794,6.446287,-0.051900,-0.099376,0.645298,-8.185403,-3.377370,3.809817,5.904502,4.563641,4.773099,3.591298,5.313409,-3.835210,-2.945631,4.209938,4.980061,4.677786,8.497642,-2.909300,9.641573,5.070921,-6.828024,5.151183,-6.599225,0.828745,3.643330,-4.010349,2.182889,3.328917,3.574621,-1.693446,8.648873,-6.774274,9.371872,-9.959835,9.851231,5.484996,-6.489126,9.891178,6.721127,-2.099497,2.670884,0.126947,-0.515204,-3.773616,-6.326896,-2.569343,-8.389070,-4.865313,5.412968,-7.683386,1.961588,6.630079,-3.135346,-8.130911,8.772663,8.198454,1.899205,1.688717,6.434105,6.643168,8.208366,-6.883967,-7.390182,8.005512,9.178279,5.160005,1.658409,-7.687344,1.026950,-9.584139,1.696639,-8.516771,-4.653205,-5.088443,7.276882,8.136627,-1.520590,7.591161,1.075540,-6.520445,-5.097690,2.062517,-3.446197,-7.805918,-5.702713,5.749432,-4.326657,4.583529,1.130854,-2.955366,2.972737,1.547587,6.057895,5.093870,-2.361966,3.754458,2.551987,-3.160084,-4.022010,7.546758,6.830738,2.148048,-2.103070,9.445597,-5.575467,8.647712,9.168836,0.387348,6.839338,1.114656,3.307388,-5.953220,5.583805,-3.196584,1.940697,1.081513,-5.129980,-5.773371,8.937180,4.214577,-3.409737,4.653728,1.511287,-8.666152,3.174712,-2.787964,1.542748,1.704374,-6.587253,-0.756832,-9.020202,-8.421805,-0.415555,4.818769,-3.090666,-0.554834,4.918096,2.478990,-6.577661,1.703339,8.419351,-8.058700,5.463698,-0.746420,-4.246274,2.058046,-6.480840,1.938686,3.521942,-1.023517,2.648870,-9.275702,-3.857545,-0.847851,9.609409,2.849156,0.237356,1.976773,9.441536,-1.038824,0.847882,-7.809256,-8.359118,-8.132057,0.360852,1.681963,0.948133,8.685775,4.757863,3.155552,-2.813276,-2.063717,-2.246520,-6.660991,7.713392,6.263574,-0.977854,-9.386780,-2.749229,-4.397237,0.367076,-7.072597,6.701576,-3.958455,5.224266,-8.843668,-9.132014,-6.163231],[-5.252690,4.580859,1.381083,-9.223182,-5.028214,-0.700642,-9.748136,-4.807488,0.566832,-9.523988,2.566449,0.360866,-8.147531,-9.998210,-8.559474,-4.317488,8.613235,-8.755876,-8.442736,-8.000260,8.167842,8.422762,-0.772791,4.279036,6.197065,-0.896904,4.279292,0.812051,8.220940,-2.597704,-5.365164,0.319832,-4.866292,2.077900,-5.615736,-1.307716,-7.734792,5.708608,1.751140,-4.325144,8.357700,0.889434,4.776705,-0.297111,-4.076336,-7.346230,8.111511,-0.003629,-5.702475,6.794638,-3.612274,-1.802238,4.956116,5.661075,3.342186,9.225929,-5.859182,9.689201,-0.330263,4.319535,-9.560283,0.216278,4.278354,-7.617865,1.924584,-2.313284,3.446091,1.037635,6.183465,2.490716,-0.361873,0.051610,-1.138717,-2.293837,-6.693956,2.445897,-7.674981,4.795398,3.203240,6.004346,3.402131,-2.594075,-8.491951,4.587255,-0.643218,-7.908463,-9.305922,8.364306,-3.457962,3.641483,0.092416,-3.406008,7.051070,8.082658,6.085893,-5.657147,9.967249,4.112008,-7.737491,1.744220,3.709215,7.471559,4.964513,-7.697388,1.127410,-3.782128,4.136118,-9.528761,-4.981619,5.804243,-7.384378,-6.609909,-9.493651,9.935257,3.993227,3.535288,0.475248,-6.152374,9.549422,-7.425819,-8.272505,-7.632313,4.899195,-9.261814,-0.596674,4.657989,8.703315,-1.919424,4.876557,-6.661880,-9.278749,-8.243982,5.129958,-0.962834,4.265275,5.351612,-4.852123,3.256867,-8.501842,5.888998,9.611893,1.183978,5.952983,-8.200172,2.154602,0.523443,-3.832734,0.013715,-2.617805,2.514722,9.886895,7.570646,-2.746378,8.007276,-1.839331,7.379749,-6.971727,4.726315,9.695173,-9.884929,-1.533664,-2.525253,7.807012,-8.120981,-3.018357,-0.051645,-8.594550,3.295889,-6.095390,5.212197,1.284018,2.118730,0.075088,4.531838,-4.558259,-5.905365,5.423933,-5.915562,-0.925079,-5.711149,-1.387416,-8.271930,-5.111315,0.975480,4.218030,-4.903666,8.170604,-5.299968,-0.135440,5.968717,7.236255,2.723540],[2.900907,-6.066195,9.892557,-3.184955,4.357741,-1.764563,-4.157427,-3.284979,4.812739,-1.372554,-8.422807,6.437463,4.730137,-9.770818,-6.759029,1.540396,0.869226,-2.137818,7.502064,-9.002206,3.784641,-5.519438,-3.178706,6.017331,3.048415,-1.995914,-2.361660,-0.346924,2.105704,4.118516,6.286617,3.471482,-4.746178,8.766837,-7.172596,-5.081065,-5.083713,2.524350,0.918489,-2.568970,-0.681979,4.061468,5.210631,-7.831607,-3.435454,-5.502151,3.171028,-1.445710,4.829822,0.990671,2.948337,-8.581496,-2.758951,-0.826886,-9.151282,0.231924,1.127826,-8.435614,-2.042339,7.164030,-5.736715,-1.202683,8.837016,2.641805,-4.155479,-0.528938,-6.401972,-0.457118,-7.814553,-1.273954,2.678983,-2.578715,-1.321632,8.848206,9.985144,2.119888,8.679138,0.900325,-6.141328,4.587622,3.321995,-2.193999,-4.955391,9.532413,4.572545,-7.713851,9.222508,-0.831328,8.693461,-7.676283,-5.840068,-5.989666,-1.199271,0.900493,-1.076047,2.797035,-6.602892,8.056159,-9.668475,-2.310666,-0.468173,9.526029,2.498008,-5.835894,0.840073,8.873330,-3.413856,8.616609,-2.976989,-7.767279,-6.648805,-3.486556,4.711935,6.572157,-4.666043,-7.931433,-6.666121,-3.581115,2.312143,-3.831286,-3.285449,-3.391675,5.014396,7.263838,-2.696168,-3.060555,3.773692,-3.137204,-0.454928,7.139870,0.976944,-0.267814,7.364950,1.537085,5.750688,7.547275,2.309876,-9.834456,-0.384537,-5.306062,3.768429,0.713907,-3.064231,-5.788242,9.236141,9.761087,8.943407,3.009014,8.984820,4.081940,-7.984404,-6.702317,-5.382540,9.327051,-8.533855,-9.062634,-6.098830,-5.471294,8.786510,-4.241650,-0.960302,3.672751,4.573037,-5.568497,6.370676,2.264950,9.075929,4.855550,-4.062655,-8.881200,5.994980,1.240389,-5.234687,-1.266701,-1.883679,-9.236669,-2.776383,-5.134419,-2.227856,-1.243444,-5.997666,-3.407002,4.433223,2.041205,-9.757522,-4.767571,-2.708623,7.203076,-4.869801,-5.798256,-3.592120,3.535950],[-4.223032,-5.224594,5.919264,-4.350626,-5.890100,0.417735,4.498092,-7.548822,-1.232664,8.903603,-1.495876,7.890323,-5.550052,8.711904,-8.968627,7.804357,-7.370221,-4.131779,5.759347,3.406292,2.664428,5.615304,1.997888,-5.715841,1.209481,0.871480,-6.635938,-3.171061,-0.071995,-0.912440,-9.212002,-4.094860,2.064171,-0.348160,9.240936,7.581362,-9.702531,9.930530,-5.715639,5.220678,9.215695,1.729176,7.716460,-3.816544,9.945056,8.328403,1.347662,-0.581573,-8.339335,4.017418,-5.795146,-5.538619,5.341248,-1.525698,5.734257,8.649877,-4.666075,-7.491620,-7.053869,-2.720853,7.381625,-7.889129,9.878164,-5.562004,6.895896,1.483472,-1.691216,3.879011,-3.954156,1.644319,5.778426,-4.154021,4.081278,-1.773632,-2.072996,9.619025,-0.933378,-2.258426,-0.128595,9.855674,-1.472120,4.855030,-6.996181,-8.557334,-1.402336,-7.812718,5.847919,-7.217881,7.113924,-0.783532,0.469183,-3.641665,8.835144,2.372848,1.291877,-0.387657,3.939212,-8.699042,-3.468754,-2.296530,-8.805318,-8.544950,-9.321581,-4.160172,2.992107,9.646752,-0.836978,-9.322415,-8.440082,3.178531,-0.465431,0.925895,2.449251,6.419790,-3.566711,-9.903589,-6.830242,-5.279073,5.353208,9.525360,-2.901943,3.995563,-7.801915,-6.468486,3.573928,-1.258730,3.497469,-6.107255,3.247724,-9.144226,9.343610,-1.388438,-4.735916,-3.812817,1.093312,-3.092619,-0.077746,-9.958806,-9.990976,4.579378,-1.179002,4.023258,0.356016,-8.463774,-7.657757,5.076593,0.747957,3.027869,-4.290440,-0.094880,5.688763,9.847395,-9.181967,-8.003355,5.895462,8.904777,7.465862,0.821868,-2.222745,7.514995,0.359195,-5.697074,-5.197607,-5.095021,-7.986589,-1.074605,0.504696,4.558184,1.472308,-9.991535,-6.383149,-7.661358,7.439178,-7.385741,3.596830,-8.399109,-2.505751,-7.708575,-1.962197,-6.072588,4.390450,1.467419,-6.349509,-1.925895,-1.011288,-1.757954,-8.579723,4.292567,3.304050,9.559278,1.426210,2.604067],[6.574521,5.492227,-3.165238,-0.970020,-7.376105,-1.719071,-7.677687,0.060508,-0.458356,1.758533,-8.310660,-6.527152,4.774794,5.159407,9.609027,-4.619881,-4.073536,-4.313704,0.711075,-8.908963,-7.023226,7.439349,4.551089,-2.996595,-8.694076,6.402585,-3.807038,-2.528376,6.690628,-2.531210,-7.547363,4.349190,-0.184276,0.384526,-9.231919,-0.090857,1.888988,-7.690338,-5.056665,-5.543938,-3.126238,6.087133,0.872382,-4.000188,4.954725,6.639730,-3.759493,-9.072027,-3.376896,-1.538338,1.659425,-9.051553,-4.035324,-4.198635,1.189829,-7.417604,-4.650281,-8.139821,8.579994,-3.680214,3.905171,6.392357,6.022467,2.417672,3.240025,-5.811172,-2.771751,3.171619,8.087997,1.846577,-4.829174,4.806237,9.110067,-8.021676,-1.284717,-1.177580,-6.916499,2.019317,6.875581,-6.828317,2.238945,-9.741595,3.742668,-7.343313,5.814629,4.774990,6.942738,-0.306645,-3.911810,-5.331828,5.372259,-2.843860,-5.296737,2.835099,-9.778576,-3.723488,7.219640,1.036323,9.195997,5.127997,6.321939,-5.331303,8.611001,-3.064553,-5.816065,0.807189,9.226423,2.293730,1.525507,1.241461,-3.130952,4.568048,-8.093601,-2.409161,3.128951,-2.391608,-4.483133,4.706116,3.449935,6.337546,-8.478753,-0.633241,6.469118,2.882510,-5.485418,-5.660664,1.897378,-9.176185,6.825190,2.899985,4.943284,6.078163,-1.042896,4.595828,-8.939822,0.455819,8.412257,-8.451151,-5.321546,-0.838258,9.220863,7.796680,-7.454315,-2.643989,4.037889,-1.960539,-5.196887,-5.707607,6.861312,-2.379351,6.958000,-0.266623,9.596101,3.289339,5.457332,1.342714,-8.185267,0.084240,-7.347285,-1.505868,9.566608,-1.061392,1.251875,-8.506433,8.884347,-2.394018,7.286715,1.460273,-9.442041,-3.752400,-7.531758,-7.620557,-3.825358,-4.917656,4.261853,-1.869253,6.455735,-3.409148,-9.564785,2.186509,-0.470985,-8.292271,2.221938,-2.327946,-7.965387,8.000213,-9.499074,7.996244,6.316842,-9.563863,1.796728,5.607157],[0.548309,0.430812,-2.981066,9.130491,-7.465540,-6.113177,-3.729284,6.575376,7.159835,0.956997,-4.683984,9.095749,-7.298997,5.101750,-0.825789,0.204566,-9.602226,7.285461,0.306896,6.558275,-1.378709,8.121334,0.280778,1.811314,1.145619,-1.219609,-2.286653,3.039849,0.791096,-9.803875,0.606316,-7.331465,-4.713262,8.626785,-1.791890,2.241681,-7.050246,1.217301,-3.627941,1.175711,-4.733432,6.204190,8.123170,9.992319,0.381367,-3.242228,3.227868,0.043443,6.065666,-1.494664,3.549403,-4.828553,-3.396916,2.883672,3.745333,5.771071,7.580581,-2.048056,7.851751,3.001430,3.682694,-5.696691,-2.805214,-8.837718,-8.463992,-4.958532,-7.147639,9.774476,-7.638034,7.029260,6.480566,3.553781,-4.288639,7.951365,-7.977158,-1.529376,1.482446,-6.351841,-6.234405,6.470876,6.478783,6.970904,-0.972713,0.704282,6.368562,-1.032433,8.861697,7.364044,4.843289,9.707504,-9.133385,4.672250,-2.909369,2.020337,-8.835706,6.553201,-4.185365,-5.083999,-6.212628,-7.945629,-5.925930,-8.542191,-6.754812,5.800945,4.327623,6.835699,9.912503,0.253498,1.450760,-2.838377,1.054802,5.537928,-5.062338,-6.064754,7.906867,4.619373,-0.224747,9.096259,9.980875,-9.651901,-4.723320,-2.195969,0.138054,7.682895,8.302934,-9.491707,-6.633289,-5.127035,9.059590,8.345534,7.888544,7.851881,-6.142511,3.859666,6.113231,-4.717958,0.588797,5.879939,-9.016498,1.746108,0.832959,-3.417669,-4.543161,-7.632328,-6.402661,-9.131111,-6.441232,0.829736,2.307306,6.656852,-5.282229,-7.864624,-5.931511,-2.566399,-7.171481,-3.749225,-9.397034,3.971942,-7.336079,-6.229522,8.335962,-6.420876,-9.076106,7.230391,-8.902562,5.239454,-4.492108,0.679759,8.219337,-8.334324,9.582930,3.158636,5.092845,-2.098111,5.120972,-6.286287,-1.289388,-7.460738,-1.062493,-2.142709,-1.884881,-4.400373,1.026142,-2.264036,5.576779,-4.311008,0.519549,-9.148881,2.849796,-1.827814,-3.205094,7.627820],[-7.998540,2.830059,9.685783,2.142487,1.560411,8.495099,0.581808,-0.285993,-3.438577,-6.878970,-7.892194,-3.403664,9.050957,-8.554770,-7.180508,-6.062442,-6.396956,8.284516,5.964055,0.365246,-0.753034,6.981235,-8.073874,1.192358,9.583085,7.429479,-9.803238,7.550531,-6.935257,1.929394,8.088603,5.568735,-1.117963,-2.711954,-5.253565,-1.380730,-8.491757,-4.674396,6.073076,8.316550,9.324367,7.261222,-8.345916,-4.096554,-8.367910,5.479910,2.972968,7.876869,-1.756773,-2.313913,-8.833705,5.161079,-1.867554,5.147341,8.430442,-7.100179,5.978670,7.099888,-5.838040,4.557426,4.104477,3.886630,2.438649,-4.940974,-4.734888,-2.648105,-3.275554,1.974324,-8.288152,-0.980908,6.531131,-4.648485,-3.553420,-4.328976,7.494342,-7.688989,2.321649,-0.273879,-2.189122,-5.112565,8.551203,0.924180,-7.909133,-0.186160,-4.443436,5.116915,-5.666059,-7.314006,2.307615,7.604503,-6.894232,5.988950,2.626989,9.066684,7.581414,-0.903749,-8.794480,-6.162507,-0.836985,2.740396,3.438436,-7.545340,4.874482,4.555942,-6.091485,1.305287,-3.173115,-7.429111,-4.320392,9.385925,4.576609,-1.506457,-7.171805,-4.296984,-2.411320,7.435263,-1.954550,2.472646,-7.922665,-9.077559,7.416223,-0.911079,2.175156,-1.322485,-5.576670,9.471948,5.122731,8.986743,-1.073229,9.353509,-4.811198,-5.207053,-8.927498,-5.296735,-0.639286,4.068291,-2.186068,3.967891,-3.927245,-7.609456,-8.487738,-3.977667,7.810315,4.953310,-7.002278,-1.270328,0.708216,9.407854,-1.831697,-3.910785,6.328866,0.276597,3.959131,1.434941,-5.561858,-0.967431,4.611482,-1.823502,2.356179,-0.474729,-5.278760,-1.593985,7.590127,-6.226163,3.131871,8.716126,-7.723119,-3.949927,5.321987,-6.714748,2.357457,-5.876173,8.343228,-9.042090,-6.663896,-3.710549,6.625919,-5.908942,8.911239,5.500771,-7.610542,9.868693,5.943793,-0.700641,9.234945,-3.495574,-4.973998,3.552196,2.634206,-1.528671,-3.503570,7.054391],[1.077681,-9.175846,-9.438000,8.678649,-7.564393,5.874206,-5.411508,3.909296,-5.066517,5.203437,-7.778217,5.772755,-2.472237,-5.613119,-0.926073,-6.834988,2.820872,-7.466550,-2.932439,-8.221694,-6.561819,-1.195279,-8.098528,-9.498258,4.280319,9.455519,-8.358507,-3.656463,-5.938567,5.209337,-8.726647,-3.998641,2.498509,3.245480,-5.149547,-6.834239,8.491237,2.625541,-6.406714,9.257862,5.230658,-0.023271,2.549198,-9.422119,6.796084,-5.620313,-5.525785,9.582394,-1.932742,2.465287,8.376267,6.140482,4.563328,-1.238153,0.839639,2.843634,-0.848340,-0.888967,-7.673405,4.206226,4.424190,3.420894,-2.129001,7.664781,5.134749,8.029327,-1.328091,-8.132188,0.405848,-5.411799,-5.253182,-7.368270,9.961253,-4.296837,1.550095,7.622747,1.574274,-5.014874,2.486252,-6.507384,9.417266,3.754243,7.099615,9.909636,-1.399847,0.058673,6.939991,0.840242,-1.845130,3.744415,9.453133,-7.567100,0.935536,-1.452063,-1.940319,-8.285830,-6.056100,-7.329034,3.698728,1.352133,8.504751,-9.270304,-3.087709,9.483024,6.027663,-3.267906,8.045314,5.633889,-2.940108,9.495314,4.275026,-0.552895,-0.089504,5.733988,-1.992103,2.744551,2.818138,-1.003189,-6.095708,-8.495362,-2.645970,-1.053354,-6.918620,9.289857,-6.040310,2.631508,-3.865768,2.194231,-0.879935,-7.225145,9.019788,-7.702670,2.454840,-5.160575,-9.925884,6.898924,-5.838395,-5.287829,6.942740,3.338135,6.245936,1.224104,-5.504380,-6.977572,5.080697,7.766313,-3.238344,3.212311,-0.574722,1.249486,7.903566,-0.245620,6.978170,-9.759409,-1.321498,-9.444437,-9.609785,3.516705,-3.205153,-8.649536,-9.388069,3.554660,7.772225,-7.223598,-3.471637,9.206245,-5.978012,9.870103,-4.499209,-5.043221,8.493463,-7.257508,8.449765,-5.255930,7.695287,5.563290,-4.567553,0.727015,-4.428705,-6.731644,1.701473,-3.945019,9.603408,5.162045,9.440642,-4.568539,-0.791483,-3.200005,-1.706809,-3.295811,0.026247,9.971501]], dtype = "float64")#candidate|1123|(8, 192)|const|float64
call_1121 = relay.TupleGetItem(func_328_call(relay.reshape(var_1122.astype('float64'), [1, 4, 5]), relay.reshape(const_1123.astype('float64'), [1536,]), ), 2)
call_1124 = relay.TupleGetItem(func_331_call(relay.reshape(var_1122.astype('float64'), [1, 4, 5]), relay.reshape(const_1123.astype('float64'), [1536,]), ), 2)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
call_1127 = relay.TupleGetItem(func_179_call(relay.reshape(const_1123.astype('float64'), [16, 12, 8])), 0)
call_1128 = relay.TupleGetItem(func_182_call(relay.reshape(const_1123.astype('float64'), [16, 12, 8])), 0)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
const_1130 = relay.const([2.475213,-5.150360,-2.676064,-6.947201,2.460234,-5.432696,-6.611717,4.525770,7.010726,-5.531241,-3.277036,-2.329741,6.249894,0.192225,-6.703900,-4.683364,-9.467973,0.936877,-2.642563,6.929709,5.266760,6.887845,6.072441,5.806334,5.511543,9.106672,-6.762082,-3.162471,-6.139757,-5.618222,-3.499774,-2.693352,7.094271,-8.595749,6.534364,9.585328,6.454509,3.915748,9.604510,-6.635822,-4.936978,5.799968,3.573989,-4.574429,9.640059,3.885129,4.424088,-3.885105,7.441386,-3.522782,-7.573131,-9.187348,7.831650,-7.529355,-8.060318,0.136001,7.355263,7.404617,-8.167331,-9.222320,2.458298,3.860160,0.105547,2.594706,-4.788861,-3.300752,-1.152674,2.779829,-2.461260,-9.425029,-4.797474,3.819584,-7.763504,-4.663758,-8.665691,-8.572520,-0.035919,-5.565031,7.985973,1.911128,5.856059,-5.233403,-3.804476,6.460564,-2.633873,7.601553,2.058398,-4.532378,4.182885,-7.532860,5.975370,3.205545,2.109413,3.023542,-7.814361,-1.705566,-6.192018,7.808848,-7.110431,5.924676,-1.842496,7.170818,3.790218,-2.401480,8.584648,-5.463877,8.243033,-2.577939,5.380767,-6.900827,-5.731578,-9.240991,0.080127,9.990318,-2.549966,-5.936251,9.641959,5.027306,5.243620,-2.212057], dtype = "float64")#candidate|1130|(120,)|const|float64
call_1129 = relay.TupleGetItem(func_805_call(relay.reshape(const_1130.astype('float64'), [4, 5, 6]), relay.reshape(call_1127.astype('float64'), [1536,]), ), 2)
call_1131 = relay.TupleGetItem(func_809_call(relay.reshape(const_1130.astype('float64'), [4, 5, 6]), relay.reshape(call_1127.astype('float64'), [1536,]), ), 2)
output = relay.Tuple([bop_1101,call_1121,var_1122,const_1123,call_1127,call_1129,const_1130,])
output2 = relay.Tuple([bop_1101,call_1124,var_1122,const_1123,call_1128,call_1131,const_1130,])
func_1139 = relay.Function([var_1100,var_1122,], output)
mod['func_1139'] = func_1139
mod = relay.transform.InferType()(mod)
var_1140 = relay.var("var_1140", dtype = "uint64", shape = (13, 7, 3))#candidate|1140|(13, 7, 3)|var|uint64
var_1141 = relay.var("var_1141", dtype = "float64", shape = (20,))#candidate|1141|(20,)|var|float64
output = func_1139(var_1140,var_1141,)
func_1142 = relay.Function([var_1140,var_1141,], output)
mutated_mod['func_1142'] = func_1142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1557 = relay.var("var_1557", dtype = "float32", shape = (1, 4, 11))#candidate|1557|(1, 4, 11)|var|float32
uop_1558 = relay.sqrt(var_1557.astype('float32')) # shape=(1, 4, 11)
uop_1565 = relay.cosh(var_1557.astype('float32')) # shape=(1, 4, 11)
bop_1568 = relay.right_shift(uop_1558.astype('uint8'), relay.reshape(var_1557.astype('uint8'), relay.shape_of(uop_1558))) # shape=(1, 4, 11)
uop_1590 = relay.sigmoid(bop_1568.astype('float64')) # shape=(1, 4, 11)
uop_1606 = relay.atanh(uop_1590.astype('float32')) # shape=(1, 4, 11)
bop_1609 = relay.divide(uop_1606.astype('float64'), relay.reshape(uop_1590.astype('float64'), relay.shape_of(uop_1606))) # shape=(1, 4, 11)
func_328_call = mod.get_global_var('func_328')
func_331_call = mutated_mod.get_global_var('func_331')
var_1614 = relay.var("var_1614", dtype = "float64", shape = (20,))#candidate|1614|(20,)|var|float64
var_1615 = relay.var("var_1615", dtype = "float64", shape = (1536,))#candidate|1615|(1536,)|var|float64
call_1613 = relay.TupleGetItem(func_328_call(relay.reshape(var_1614.astype('float64'), [1, 4, 5]), relay.reshape(var_1615.astype('float64'), [1536,]), ), 2)
call_1616 = relay.TupleGetItem(func_331_call(relay.reshape(var_1614.astype('float64'), [1, 4, 5]), relay.reshape(var_1615.astype('float64'), [1536,]), ), 2)
bop_1619 = relay.left_shift(uop_1590.astype('int32'), relay.reshape(uop_1558.astype('int32'), relay.shape_of(uop_1590))) # shape=(1, 4, 11)
uop_1622 = relay.erf(bop_1609.astype('float64')) # shape=(1, 4, 11)
output = relay.Tuple([uop_1565,call_1613,var_1614,var_1615,bop_1619,uop_1622,])
output2 = relay.Tuple([uop_1565,call_1616,var_1614,var_1615,bop_1619,uop_1622,])
func_1627 = relay.Function([var_1557,var_1614,var_1615,], output)
mod['func_1627'] = func_1627
mod = relay.transform.InferType()(mod)
var_1628 = relay.var("var_1628", dtype = "float32", shape = (1, 4, 11))#candidate|1628|(1, 4, 11)|var|float32
var_1629 = relay.var("var_1629", dtype = "float64", shape = (20,))#candidate|1629|(20,)|var|float64
var_1630 = relay.var("var_1630", dtype = "float64", shape = (1536,))#candidate|1630|(1536,)|var|float64
output = func_1627(var_1628,var_1629,var_1630,)
func_1631 = relay.Function([var_1628,var_1629,var_1630,], output)
mutated_mod['func_1631'] = func_1631
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2473 = relay.const(5, dtype = "uint8")#candidate|2473|()|const|uint8
var_2474 = relay.var("var_2474", dtype = "uint8", shape = (11, 10, 4))#candidate|2474|(11, 10, 4)|var|uint8
bop_2475 = relay.bitwise_or(const_2473.astype('uint8'), var_2474.astype('uint8')) # shape=(11, 10, 4)
output = relay.Tuple([bop_2475,])
output2 = relay.Tuple([bop_2475,])
func_2480 = relay.Function([var_2474,], output)
mod['func_2480'] = func_2480
mod = relay.transform.InferType()(mod)
var_2481 = relay.var("var_2481", dtype = "uint8", shape = (11, 10, 4))#candidate|2481|(11, 10, 4)|var|uint8
output = func_2480(var_2481)
func_2482 = relay.Function([var_2481], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3158 = relay.const([[[-8.562079,-6.849501,-7.079226,0.500915,-5.375308,8.505314,0.149437,2.560870,-9.446783,-1.713320,5.495762,-2.553953,-7.564061]],[[1.948112,-2.272545,-0.626621,8.768074,1.456860,2.817582,2.758514,-9.998848,-7.219325,-4.658409,-6.638596,-2.084519,1.525368]],[[9.747391,0.199390,0.603061,2.529509,2.989498,-7.350363,7.722883,8.188453,-7.067870,-2.930949,8.999629,3.450425,-2.608508]],[[-4.068931,-7.437715,-9.748787,2.449234,-1.949430,-7.378877,-5.396324,8.344670,-9.019300,-4.625660,7.992727,-2.941073,9.755760]],[[-1.045698,-0.050923,-5.837196,-5.631986,-3.009727,-8.325997,-8.719629,-8.063533,-3.818170,-4.476373,3.432049,-6.973036,-9.340771]],[[-8.018063,9.474369,-6.861495,-7.379220,-6.830137,8.937023,-2.124195,6.009242,0.340457,0.895918,-2.959603,-9.704786,2.413424]],[[8.529744,2.948728,7.830782,6.495970,7.598184,-3.079520,-2.068881,-9.064443,4.139063,2.894192,5.130686,-2.242729,-8.031899]]], dtype = "float64")#candidate|3158|(7, 1, 13)|const|float64
uop_3159 = relay.atan(const_3158.astype('float64')) # shape=(7, 1, 13)
uop_3173 = relay.sqrt(uop_3159.astype('float32')) # shape=(7, 1, 13)
uop_3183 = relay.asin(uop_3173.astype('float32')) # shape=(7, 1, 13)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
var_3206 = relay.var("var_3206", dtype = "float64", shape = (60, 2))#candidate|3206|(60, 2)|var|float64
var_3207 = relay.var("var_3207", dtype = "float64", shape = (128, 12))#candidate|3207|(128, 12)|var|float64
call_3205 = relay.TupleGetItem(func_805_call(relay.reshape(var_3206.astype('float64'), [4, 5, 6]), relay.reshape(var_3207.astype('float64'), [1536,]), ), 0)
call_3208 = relay.TupleGetItem(func_809_call(relay.reshape(var_3206.astype('float64'), [4, 5, 6]), relay.reshape(var_3207.astype('float64'), [1536,]), ), 0)
output = relay.Tuple([uop_3183,call_3205,var_3206,var_3207,])
output2 = relay.Tuple([uop_3183,call_3208,var_3206,var_3207,])
func_3213 = relay.Function([var_3206,var_3207,], output)
mod['func_3213'] = func_3213
mod = relay.transform.InferType()(mod)
var_3214 = relay.var("var_3214", dtype = "float64", shape = (60, 2))#candidate|3214|(60, 2)|var|float64
var_3215 = relay.var("var_3215", dtype = "float64", shape = (128, 12))#candidate|3215|(128, 12)|var|float64
output = func_3213(var_3214,var_3215,)
func_3216 = relay.Function([var_3214,var_3215,], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3252 = relay.var("var_3252", dtype = "uint8", shape = (16, 1, 5))#candidate|3252|(16, 1, 5)|var|uint8
var_3253 = relay.var("var_3253", dtype = "uint8", shape = (16, 6, 5))#candidate|3253|(16, 6, 5)|var|uint8
bop_3254 = relay.logical_xor(var_3252.astype('uint8'), var_3253.astype('uint8')) # shape=(16, 6, 5)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
var_3269 = relay.var("var_3269", dtype = "float64", shape = (3, 40))#candidate|3269|(3, 40)|var|float64
const_3270 = relay.const([9.793760,6.058540,1.037857,-7.065993,7.714741,-1.970724,-6.438182,-9.431363,-2.413552,-2.958083,-0.933266,7.887801,-9.614044,-7.507993,-4.287303,5.145740,1.636922,-2.699052,9.422290,-5.679422,-9.435141,-0.955388,4.663470,7.773451,-1.856643,0.098688,-9.381098,0.509337,1.073217,-0.361991,-7.186361,3.628991,-9.846820,-7.371387,-3.995800,5.770112,-1.006859,0.613102,-2.031779,9.821281,2.132486,4.579841,2.068630,-6.105106,5.134206,2.082735,-0.672800,0.884831,-1.608406,5.737246,-8.644366,3.544129,-9.246510,-1.704039,2.306623,7.870557,8.762741,-1.664836,-1.987705,3.191703,-7.382364,1.055013,1.185911,6.387394,-1.786782,-6.377014,4.727554,4.648559,-5.043543,2.197860,2.973891,-6.719492,5.492028,-1.770496,1.862250,3.406459,-8.086636,2.646673,0.273103,9.617673,9.412128,7.218527,8.548279,-2.297841,-5.969405,-6.145541,-4.394347,-5.711206,1.675464,1.677572,-5.534529,-2.457749,8.413966,-9.827857,2.737861,3.079510,3.556500,7.333311,7.785846,2.539604,5.481952,-9.198730,-8.089276,-4.073406,9.842753,8.120058,-2.066461,-1.493219,5.639159,1.086387,-8.605467,7.039990,1.289846,-9.071043,-5.414489,-6.183573,7.631484,6.811828,-7.538900,-3.818785,-4.745694,4.368376,0.612178,-7.495778,0.778756,8.513594,-8.077004,1.532607,-7.403938,8.863592,3.137799,-0.396750,-6.379726,7.887058,1.906446,-3.635203,7.856865,8.201114,8.073042,1.950366,3.204265,-3.842087,3.138212,5.218333,7.207650,-6.340106,-1.613858,-1.322963,-0.638816,5.610468,2.803537,4.325443,-5.004514,3.483614,9.382991,-3.160739,-2.322309,-4.350385,-2.981808,4.721155,-4.324945,8.197545,-2.723626,9.158158,0.639650,9.620563,-3.874871,8.990954,7.904853,-4.979013,4.579706,5.123507,9.169607,1.063642,5.552246,-0.374586,-2.190746,-8.383976,4.224622,5.766469,8.296162,5.932349,-5.765768,-8.846454,5.954167,-2.902244,9.218087,-4.479292,9.942108,-2.086761,-7.473310,6.479054,-2.995741,-9.542231,7.585967,-6.723022,-4.738517,5.230407,-9.765097,-3.458981,-0.113317,-9.819355,-1.013139,3.406189,-3.544948,-6.902455,-5.608646,3.915872,6.609160,-1.237517,-8.645107,2.780559,-3.169541,3.031552,-8.006163,-7.604194,-1.315700,-5.751861,-4.599899,-9.335073,-3.164572,8.147829,-6.108313,5.670942,-8.100208,0.119195,6.000149,8.296295,7.550048,-6.998988,-7.479151,-4.526930,-3.636078,9.466783,-9.719688,1.492123,-6.568542,4.931108,-4.852675,1.748457,-7.292347,7.070719,2.220986,0.501568,6.761313,0.326347,1.437240,-6.017916,-5.573926,-6.441494,1.001122,3.465215,-9.453668,3.503175,-1.997348,-2.236446,3.497703,-7.107891,-7.924980,0.132215,2.007247,-0.118868,-7.130133,-0.954047,-7.837950,-4.098094,8.257094,-5.328223,-9.864540,-4.257522,-6.572737,-1.288615,-2.948510,-8.397356,-3.411588,-9.773264,-4.615754,-3.299343,5.882035,-9.843957,1.753210,7.248384,-2.677933,0.720906,5.114614,7.618606,-3.439886,6.579364,-1.230838,8.267943,9.404166,4.631984,-0.594006,6.826863,-0.737418,-1.759132,-8.684686,-7.444221,0.591429,7.355630,5.095610,-4.126735,-1.754817,-0.549597,4.705259,-8.652408,7.787318,8.294148,1.342334,8.258116,-9.901280,-3.914794,-9.492910,1.393268,-0.665235,-2.055681,-8.179844,9.742321,9.353922,4.859020,7.587664,6.345186,9.871317,7.003730,2.963334,4.451453,-8.197047,-5.659971,-7.688109,-9.378637,6.540062,5.846501,9.459812,-7.867720,-8.599445,2.205062,7.146235,2.022169,2.891711,-0.661195,9.469626,-9.537825,8.541965,-2.110219,3.921093,-5.913001,-8.285689,-8.253407,-3.012079,-0.488994,-1.319892,-3.100796,-7.989365,4.872819,-6.150173,3.790357,1.672262,8.603659,-3.073070,-3.779794,-8.915682,-6.385020,-3.365527,-7.467257,-3.454030,-1.299188,0.334605,-0.987835,-6.588374,1.265564,3.613876,-9.049322,5.565084,8.140030,-8.201046,7.175432,-3.004954,1.329385,-1.973781,6.566922,-7.416110,2.385931,8.786018,1.326024,5.045442,-2.817548,2.812010,7.713225,7.599265,0.676663,5.599991,-9.031136,-9.935938,-1.904527,-5.007112,0.668630,2.344552,-7.469423,4.706726,-7.097856,-0.713763,8.369415,-8.996683,-5.965590,-6.015643,0.951018,-7.270649,4.519008,4.388921,4.676574,-9.268716,-5.799712,-4.233771,-9.058358,-4.486667,-9.879960,2.202313,8.418399,5.374680,5.568417,8.236246,0.595985,5.267695,-7.465804,-4.878671,-7.383405,8.256566,4.617471,7.054904,5.152166,-4.180347,-9.773992,5.727521,4.666461,-3.938624,-1.853379,4.082572,3.743833,6.600683,9.052736,-5.027944,-4.616164,-5.405307,0.562660,4.335847,-2.070621,-7.247287,5.289542,-4.465095,-7.357944,-6.472523,-9.453472,-1.548460,-1.849420,3.643763,-6.054251,1.031930,3.843101,-3.365123,6.161887,3.286797,2.871271,-1.071754,-6.912862,-8.631844,2.282912,1.954107,-5.645710,-8.839139,0.506601,5.707926,3.436156,-7.513925,-2.896434,1.329975,-4.912802,4.938127,-5.557812,2.088245,-7.238318,-3.855846,-3.602270,9.927143,7.461364,4.796220,-7.824883,-6.931853,5.582336,-0.978067,6.746898,3.097948,2.858426,-2.156074,-3.350962,-3.864375,3.842631,6.983087,-6.305284,-0.273839,-4.991117,9.109658,-9.883842,-2.617562,-5.385568,-0.374727,-6.936396,-4.900898,-0.191640,5.827044,-1.584030,-3.049182,-1.251332,3.656354,-9.869320,9.240178,1.832375,6.294140,-9.262974,6.163448,4.618187,2.065231,6.527889,8.054857,-9.304313,-7.660763,-5.222912,-3.171473,-5.133221,1.951956,7.119573,6.044842,0.921055,2.257629,-7.857260,3.117666,-6.359952,6.791945,-8.276457,3.202349,-6.644587,1.219807,-8.202863,4.426676,7.679141,-0.657691,4.862268,2.666251,-8.837069,0.816967,4.138697,-2.767868,8.966398,7.493878,-3.997771,-8.199381,-6.256837,2.935543,8.944852,-6.338992,-3.156428,8.230514,-6.389745,-5.490384,1.124805,-0.228202,-2.956867,-8.734513,-9.984262,4.304223,3.145717,2.452365,2.046037,-7.767040,-9.564959,8.755622,6.557416,-4.872508,8.644087,4.385554,-5.569141,5.736337,-5.356767,-1.506520,6.402553,-2.077182,9.003141,6.038378,-8.006338,9.251431,-1.592880,4.945468,-3.616131,1.875686,4.716439,-9.489024,-2.508591,-6.609615,-3.775643,-1.007559,0.618495,-2.681386,-2.335821,9.865048,5.962439,7.975001,-2.985077,-6.133797,0.835612,-0.560153,-4.014830,-1.869752,0.308998,0.240455,-8.078262,9.076966,-8.471903,-4.139672,4.248324,-1.194445,4.046779,-5.767966,-7.413585,-8.649513,4.624989,-8.340075,9.351009,-5.758801,-0.690144,-9.137060,5.449622,-1.845334,2.766424,8.739391,-2.797151,-8.474310,5.433724,4.548870,6.021501,0.901015,6.450504,-9.043233,3.299251,5.936757,-1.725399,-0.821077,3.552974,-1.521175,3.168645,-4.946312,6.093452,4.831548,3.296003,-1.171388,-8.072039,3.945091,-2.130373,5.353708,5.225135,4.709123,-9.537788,1.272210,-1.964105,4.769552,8.948469,7.658597,-1.220975,-9.968781,-5.622978,-1.754436,-2.232755,-8.219681,8.111068,-4.377664,-2.038033,-6.218287,2.570152,-5.730388,0.042191,-4.879356,1.703308,8.965701,-7.154172,-3.219262,4.205150,-3.731462,-1.196430,-8.002442,-7.833202,-6.734476,-9.635287,1.624349,7.561283,9.577970,5.638623,8.842508,7.096142,-9.544661,-8.030987,-7.687562,1.031897,-8.103785,0.377106,6.863415,6.387957,-3.082103,5.233982,-8.084847,-1.065118,7.359666,3.684921,-4.607752,-8.032989,-6.949170,4.472084,-7.198566,5.455758,3.278648,7.771446,-6.654573,-1.594145,-8.999469,6.235987,-8.181390,-7.782107,0.131954,1.819945,-1.516796,5.503606,-0.276808,-6.239761,0.894086,8.435565,-2.342207,-0.032703,-4.295906,-9.194107,-9.782613,3.287104,3.558701,-6.866454,8.649027,-5.008026,1.975837,-5.156223,0.429573,-0.335491,4.059936,2.895445,-9.126933,-5.043583,-2.766501,7.530929,-5.677298,-6.700561,-0.370414,5.140736,-0.866525,-7.969410,3.112593,1.740756,8.971584,6.997947,-8.921707,-9.950842,-3.774200,0.298114,1.415765,9.782550,3.472607,6.107285,2.428616,1.387219,9.618110,9.886544,-8.344809,9.804395,2.314665,-8.297473,9.644203,-6.324097,-5.810674,-3.094695,0.166485,2.852470,6.289984,-4.262572,3.614385,-0.184929,5.320345,3.583486,0.483805,8.736820,-6.277721,-5.972265,8.472793,8.726090,-4.369236,4.623698,-4.531752,-4.855274,-9.705382,-7.481863,-2.635576,-0.226441,-1.636455,5.843336,-1.816090,-9.834284,9.378249,-3.800482,-7.821863,-8.703357,9.605845,-3.794535,-8.225435,-0.880931,6.037075,7.872767,1.612261,-6.692050,3.475106,1.556198,-2.692085,-8.925600,-4.010249,-8.401687,7.377878,2.213477,4.781231,-1.578375,-8.389207,-2.767440,8.835345,7.231652,2.639715,-9.673641,-6.982337,-0.624749,-3.124613,-4.992019,1.038298,5.341420,0.443258,0.303314,-7.893150,-0.294263,-1.398227,-8.853037,-0.137434,5.141979,8.271744,9.730249,6.696921,2.941570,-8.899696,6.291671,-4.942617,-8.077776,2.742465,-3.526204,0.982218,0.606115,9.531005,5.472838,6.756452,8.201024,5.284446,-5.820211,-8.452077,-3.910344,9.908589,-2.777830,-3.706756,3.085175,6.093957,4.498505,2.028425,-2.176286,-7.786371,-3.479189,-5.064363,4.242961,-7.961735,7.487576,4.898255,-9.485159,4.639583,-0.208671,8.064088,4.669287,-7.699281,-2.310408,8.897548,-6.585794,-1.535225,-7.947115,0.796264,-8.207403,5.663650,-9.482953,2.627254,-1.860511,-1.426420,-3.135172,-3.800316,-6.476326,-8.745648,-8.867259,6.623517,-3.482519,-6.928771,4.079380,-3.583356,7.981568,3.239152,-5.968740,-1.100931,7.090532,6.201060,0.784846,1.028960,-8.996329,-8.852398,-6.592737,-3.405796,6.273108,7.650085,-2.857378,9.827269,3.684646,0.227379,2.243634,-8.795600,-2.325692,4.845269,-5.162912,8.900752,-5.230541,5.437081,-9.090252,5.662518,-0.382138,-2.287369,-5.913834,3.760348,-4.149664,3.214528,-1.078023,-7.605491,-0.213299,-0.182643,-9.060548,4.655955,9.336042,1.040085,-0.546698,-3.644095,8.065520,8.285881,-7.387937,-0.239926,-1.470906,-0.900275,0.800236,9.101845,-1.475867,-3.134995,-5.418914,-7.351151,8.112712,5.723506,-8.587387,-9.247146,-7.844239,-6.225514,-0.480981,1.027586,-8.561552,-9.732211,-1.221852,7.566298,5.757108,5.242391,-7.018404,-2.897315,-2.481854,8.229810,2.913949,-5.502374,-5.565028,-1.896923,1.967655,3.831410,8.403218,-0.042781,3.819973,8.100301,2.499718,-2.320429,-9.327052,0.844767,-2.772944,4.010661,2.461664,5.468656,-2.387961,-3.003209,5.920980,-6.288318,0.003329,-9.477465,-9.664107,-5.057846,5.537403,7.249671,4.637554,-0.763450,-2.405863,8.526435,7.772877,9.282648,-4.743440,-5.312607,2.465299,-4.287766,7.305457,1.217788,-3.203862,1.601143,4.525014,3.431765,-4.571758,-6.562785,-8.734738,-1.362947,7.011393,7.322211,2.087295,3.081061,-3.975888,-4.917412,1.581612,-2.645238,6.733647,9.567366,-1.808653,5.313292,-4.033124,5.808936,2.917983,-2.221588,6.351556,-4.170354,7.673005,5.218176,9.016360,2.273254,-7.647241,8.165087,-8.244954,-7.710386,3.313618,2.121754,4.266080,-9.407811,-4.319583,6.099048,8.807711,-4.418457,-8.957126,-0.332020,3.312268,-1.677883,7.726953,8.843375,-8.412828,6.773810,7.018685,9.347736,0.030948,0.440349,-8.404005,-5.168023,-0.370815,6.889472,-8.332791,2.239260,0.462156,5.783269,3.667920,-7.960026,-8.052498,8.497046,-5.126645,2.411937,6.177367,7.843023,7.086580,8.612599,1.580194,-0.727918,-1.762025,4.461817,3.547698,1.906612,-1.745273,-6.695942,1.239182,-5.955403,-3.300155,8.645323,2.446521,-0.995394,-2.536848,-2.797560,-2.689003,-4.928913,-0.622812,-5.198332,-1.668905,-8.699531,-4.202300,-1.251242,3.825339,8.267617,-9.115703,4.897566,-1.629829,-2.530243,8.217596,-5.826763,-0.490366,-2.125947,-7.327360,-3.556228,-4.759685,9.812471,-4.340698,-1.160149,4.565765,6.213540,4.209659,8.001543,-0.075964,-3.058668,-8.748512,6.076648,9.926243,-4.373634,1.535509,5.582384,3.234324,-8.044126,-1.412079,7.938976,-5.657519,1.771755,6.404822,5.324028,-9.872136,4.875145,-8.696607,7.735048,1.491057,-4.454295,9.189852,-1.108398,-2.010949,-6.763711,-3.202817,-1.795528,-5.557910,-4.453048,-4.930548,-7.083217,5.109188,-2.860530,-0.878256,-3.805273,4.741172,-2.962433,-4.550872,9.572770,2.741499,6.256065,-6.235404,1.661081,4.850036,-5.666191,8.531037,-9.601741,3.235146,2.648456,5.732228,0.566148,-6.442756,2.180762,-0.780485,4.754333,-0.677133,2.981995,3.752121,1.877813,-0.689280,-7.819627,-9.598082,1.772887,3.749848,-6.625069,-9.763703,6.948254,3.093937,3.172991,-9.005667,-6.150829,9.107231,8.875285,-4.803025,9.986908,-2.993449,-2.767432,-8.484095,-0.290405,-9.359534,-6.319122,-3.828692,9.758188,-8.760962,-1.685727,-7.934591,6.702863,-3.305136,-2.045832,-3.819831,-8.081368,8.961944,7.666107,-3.347657,-1.148283,-3.539136,5.085985,-4.489952,3.890409,3.067539,0.176266,-5.956915,2.886839,4.549256,8.844034,8.616271,6.925773,-9.688044,-4.923406,-4.824056,-0.778760,-3.349441,-9.601470,-6.040581,6.152622,9.263344,8.829368,-0.865013,-0.950734,-2.572046,9.592437,3.093485,4.342140,0.746617,-8.407591,-5.292249,7.686970,-4.765625,0.769804,7.312663,-5.444281,-2.389157,-7.287434,-6.266485,-6.142103,-3.546940,-4.116287,-0.182399,2.257538,-2.060116,-0.016259,-3.476738,2.980221,5.328736,-7.453840,4.219022,3.001539,-7.010439,-6.007500,-4.275458,-8.650332,-5.173053,3.854309,-0.392261,2.608926,-1.252686,7.933348,1.251791,-2.819992,2.185969,7.210512,2.820624,-3.890106,-7.355204,4.213036,-1.756950,3.661198,-2.418650,5.798386,5.579417,2.756542,-3.277953,8.564404,8.100035,-4.734027,-4.244685,-0.323901,-0.959702,9.309629,0.283536,-5.976037,-0.470982,9.642528,-0.145021,3.339275,5.193732,1.528697,7.576219,5.735110,-8.292473,-5.921073,1.538606,5.065383,8.478042,-4.220570,8.039117,-8.552865,-9.207647,-5.075548,0.743083,-9.999227,2.705239,-0.346474,-4.469119,9.616155,-8.197831,3.872946,-0.032870,5.160497,-6.443280,0.544059,-7.589369,0.264408,0.427564,9.458346,-4.887239,4.135664,-7.284109,-7.585375,1.751916,9.752524,0.062260,6.122186,8.724473,-3.744247,-8.816774,7.020555,5.280564,0.629282,0.802152,0.444501,-0.130201,3.535099,6.789610,-0.669077,6.860538,-1.101072,-1.091945,9.893877,-4.310925,5.083183,8.331164,-8.462568,-0.624749,4.836054,-0.646348,6.458206,9.889224,2.545081,-7.205004,3.524825,-6.930972,9.812143,0.169672,-2.696323,-8.360800,-3.252528,8.627787,-8.631998,-8.476689,2.331352,2.566301,9.602697,0.355506,8.630312,-1.762525,5.756924,-1.879112,-2.746051,2.987401,7.586447,-8.012818,0.938139,-6.117942,9.181805,3.839088,-4.047519,5.547764,6.317490,-9.012106,9.455249,1.770941,4.643688,9.750414,2.263996,6.005454,-8.427935,-5.744320,9.289433,1.102102,0.792190,3.891375,2.144530,-1.323788,8.117631,0.994669,4.444938,7.821625,-6.587233,-8.900504,-2.340247,2.103087,-1.958462,-3.105909,-4.139974,-1.611157,9.753393,1.019117,0.820573,6.250466,5.518744,9.334328,-2.085233,1.728821,3.760043,-1.118527,4.080862,-1.235079,-1.710256,7.623982,-7.271005,-9.543710,1.105664,2.881495,6.060782,5.452928,6.368438,-8.520201,-6.053309,5.799357,6.996135,6.489193,3.239821,-3.828954,-1.787581,-8.999248,-3.724786,-9.555747,0.266038,-9.733232,8.777489,3.699625,-4.083933,-5.775390,4.534009,-6.845226,1.061027,-7.783120,7.192876,-0.312199,-1.630558,-6.075221,-5.125174,6.759358,-5.907460,-1.944575,7.108397,9.718917,1.932824,-5.506755,1.692391,-2.005921,-4.232861,3.272838,2.913375,-0.210070,-6.003054,-6.404472,5.277984,-5.673158,2.369456,0.806627,-5.867112,-3.974907,-6.584894,9.255419,3.860727,4.663738,-2.386110,9.322495,-1.539845,1.672767,2.700437,8.591847,5.943798,-3.513395,8.196502,-8.593915,-4.050416,1.419007,6.239269,-9.270243], dtype = "float64")#candidate|3270|(1536,)|const|float64
call_3268 = relay.TupleGetItem(func_805_call(relay.reshape(var_3269.astype('float64'), [4, 5, 6]), relay.reshape(const_3270.astype('float64'), [1536,]), ), 0)
call_3271 = relay.TupleGetItem(func_809_call(relay.reshape(var_3269.astype('float64'), [4, 5, 6]), relay.reshape(const_3270.astype('float64'), [1536,]), ), 0)
output = relay.Tuple([bop_3254,call_3268,var_3269,const_3270,])
output2 = relay.Tuple([bop_3254,call_3271,var_3269,const_3270,])
func_3279 = relay.Function([var_3252,var_3253,var_3269,], output)
mod['func_3279'] = func_3279
mod = relay.transform.InferType()(mod)
var_3280 = relay.var("var_3280", dtype = "uint8", shape = (16, 1, 5))#candidate|3280|(16, 1, 5)|var|uint8
var_3281 = relay.var("var_3281", dtype = "uint8", shape = (16, 6, 5))#candidate|3281|(16, 6, 5)|var|uint8
var_3282 = relay.var("var_3282", dtype = "float64", shape = (3, 40))#candidate|3282|(3, 40)|var|float64
output = func_3279(var_3280,var_3281,var_3282,)
func_3283 = relay.Function([var_3280,var_3281,var_3282,], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3316 = relay.var("var_3316", dtype = "float32", shape = (9, 14, 5))#candidate|3316|(9, 14, 5)|var|float32
uop_3317 = relay.cosh(var_3316.astype('float32')) # shape=(9, 14, 5)
output = relay.Tuple([uop_3317,])
output2 = relay.Tuple([uop_3317,])
func_3322 = relay.Function([var_3316,], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
var_3323 = relay.var("var_3323", dtype = "float32", shape = (9, 14, 5))#candidate|3323|(9, 14, 5)|var|float32
output = func_3322(var_3323)
func_3324 = relay.Function([var_3323], output)
mutated_mod['func_3324'] = func_3324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3525 = relay.var("var_3525", dtype = "float64", shape = (7, 11, 11))#candidate|3525|(7, 11, 11)|var|float64
uop_3526 = relay.sigmoid(var_3525.astype('float64')) # shape=(7, 11, 11)
output = relay.Tuple([uop_3526,])
output2 = relay.Tuple([uop_3526,])
func_3529 = relay.Function([var_3525,], output)
mod['func_3529'] = func_3529
mod = relay.transform.InferType()(mod)
mutated_mod['func_3529'] = func_3529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3530 = relay.var("var_3530", dtype = "float64", shape = (7, 11, 11))#candidate|3530|(7, 11, 11)|var|float64
func_3529_call = mutated_mod.get_global_var('func_3529')
call_3531 = func_3529_call(var_3530)
output = call_3531
func_3532 = relay.Function([var_3530], output)
mutated_mod['func_3532'] = func_3532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3540 = relay.var("var_3540", dtype = "float32", shape = (14, 12, 6))#candidate|3540|(14, 12, 6)|var|float32
uop_3541 = relay.log10(var_3540.astype('float32')) # shape=(14, 12, 6)
output = relay.Tuple([uop_3541,])
output2 = relay.Tuple([uop_3541,])
func_3553 = relay.Function([var_3540,], output)
mod['func_3553'] = func_3553
mod = relay.transform.InferType()(mod)
mutated_mod['func_3553'] = func_3553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3554 = relay.var("var_3554", dtype = "float32", shape = (14, 12, 6))#candidate|3554|(14, 12, 6)|var|float32
func_3553_call = mutated_mod.get_global_var('func_3553')
call_3555 = func_3553_call(var_3554)
output = call_3555
func_3556 = relay.Function([var_3554], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3939 = relay.var("var_3939", dtype = "int64", shape = (12, 4, 10))#candidate|3939|(12, 4, 10)|var|int64
var_3940 = relay.var("var_3940", dtype = "int64", shape = (12, 4, 10))#candidate|3940|(12, 4, 10)|var|int64
bop_3941 = relay.logical_xor(var_3939.astype('int64'), relay.reshape(var_3940.astype('int64'), relay.shape_of(var_3939))) # shape=(12, 4, 10)
bop_3946 = relay.equal(var_3939.astype('bool'), relay.reshape(bop_3941.astype('bool'), relay.shape_of(var_3939))) # shape=(12, 4, 10)
func_1074_call = mod.get_global_var('func_1074')
func_1077_call = mutated_mod.get_global_var('func_1077')
var_3957 = relay.var("var_3957", dtype = "float32", shape = (12, 30))#candidate|3957|(12, 30)|var|float32
call_3956 = func_1074_call(relay.reshape(var_3957.astype('float32'), [5, 9, 8]))
call_3958 = func_1074_call(relay.reshape(var_3957.astype('float32'), [5, 9, 8]))
func_3529_call = mod.get_global_var('func_3529')
func_3532_call = mutated_mod.get_global_var('func_3532')
var_3961 = relay.var("var_3961", dtype = "float64", shape = (847,))#candidate|3961|(847,)|var|float64
call_3960 = relay.TupleGetItem(func_3529_call(relay.reshape(var_3961.astype('float64'), [7, 11, 11])), 0)
call_3962 = relay.TupleGetItem(func_3532_call(relay.reshape(var_3961.astype('float64'), [7, 11, 11])), 0)
uop_3963 = relay.log10(call_3960.astype('float32')) # shape=(7, 11, 11)
uop_3965 = relay.log10(call_3962.astype('float32')) # shape=(7, 11, 11)
output = relay.Tuple([bop_3946,call_3956,var_3957,var_3961,uop_3963,])
output2 = relay.Tuple([bop_3946,call_3958,var_3957,var_3961,uop_3965,])
func_3969 = relay.Function([var_3939,var_3940,var_3957,var_3961,], output)
mod['func_3969'] = func_3969
mod = relay.transform.InferType()(mod)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mutated_mod.get_global_var('func_3969')
var_3971 = relay.var("var_3971", dtype = "int64", shape = (12, 4, 10))#candidate|3971|(12, 4, 10)|var|int64
var_3972 = relay.var("var_3972", dtype = "int64", shape = (12, 4, 10))#candidate|3972|(12, 4, 10)|var|int64
var_3973 = relay.var("var_3973", dtype = "float32", shape = (12, 30))#candidate|3973|(12, 30)|var|float32
var_3974 = relay.var("var_3974", dtype = "float64", shape = (847,))#candidate|3974|(847,)|var|float64
call_3970 = func_3969_call(var_3971,var_3972,var_3973,var_3974,)
output = call_3970
func_3975 = relay.Function([var_3971,var_3972,var_3973,var_3974,], output)
mutated_mod['func_3975'] = func_3975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4500 = relay.var("var_4500", dtype = "bool", shape = (11, 3, 16))#candidate|4500|(11, 3, 16)|var|bool
const_4501 = relay.const([[[False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False],[False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True],[True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True]],[[True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False],[True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False],[False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False]],[[False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True],[True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True],[False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False]],[[False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False],[True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True],[False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False]],[[False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False],[False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True],[True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False]],[[True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True],[False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True],[False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False]],[[True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False],[False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True],[True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True]],[[False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True],[True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False],[True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False]],[[False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False],[False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True],[False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False]],[[True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True],[False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False],[True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True]],[[True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False],[False,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True],[False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False]]], dtype = "bool")#candidate|4501|(11, 3, 16)|const|bool
bop_4502 = relay.logical_or(var_4500.astype('bool'), relay.reshape(const_4501.astype('bool'), relay.shape_of(var_4500))) # shape=(11, 3, 16)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
const_4506 = relay.const([[5.841579],[-9.246203],[-3.294945],[4.398306],[-5.300908],[-0.525384],[8.553661],[-9.541766],[1.855084],[0.291280],[1.937076],[7.978527],[-3.035363],[8.754525],[6.235406],[-3.763601],[-9.138805],[5.179295],[2.878746],[-4.024546],[1.308702],[6.147587],[-6.038308],[3.167180],[-8.509031],[2.745397],[3.961986],[7.440437],[2.030857],[1.915131],[-6.608198],[-2.197262],[-1.569299],[7.791625],[-1.279272],[5.466892],[0.412519],[-1.292811],[-0.393799],[4.355477],[-3.457752],[-5.310135],[8.866010],[8.572886],[1.670778],[2.273661],[6.882776],[-7.867472],[2.441486],[8.858450],[1.220116],[6.749124],[-2.001840],[-9.494530],[1.764639],[1.331799],[0.974816],[-0.998110],[8.031270],[0.622124],[-2.107092],[-0.251429],[-6.912939],[8.332858],[6.809463],[-4.661984],[6.836355],[9.527439],[4.157776],[9.274293],[7.702061],[9.009055],[-4.875007],[6.872297],[7.796390],[-2.096148],[0.336373],[5.367194],[8.241093],[0.200422],[-1.342224],[6.786512],[1.584751],[1.447240],[2.131105],[2.564951],[5.115026],[4.952601],[-9.146482],[-9.527188],[3.095487],[8.591508],[3.594339],[5.998647],[9.297676],[3.390566],[-3.112784],[-0.437634],[0.138883],[-5.019889],[-5.161985],[0.802321],[-7.099727],[8.236044],[2.879753],[9.218685],[5.181607],[0.576735],[0.984136],[2.865245],[1.256808],[-2.741105],[-7.779554],[0.951605],[-7.090425],[-6.652058],[-4.557242],[0.554939],[-5.210540],[0.395452]], dtype = "float64")#candidate|4506|(120, 1)|const|float64
var_4507 = relay.var("var_4507", dtype = "float64", shape = (384, 4))#candidate|4507|(384, 4)|var|float64
call_4505 = relay.TupleGetItem(func_805_call(relay.reshape(const_4506.astype('float64'), [4, 5, 6]), relay.reshape(var_4507.astype('float64'), [1536,]), ), 2)
call_4508 = relay.TupleGetItem(func_809_call(relay.reshape(const_4506.astype('float64'), [4, 5, 6]), relay.reshape(var_4507.astype('float64'), [1536,]), ), 2)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
const_4530 = relay.const([10,8,-5,-2,3,-9,-7,2,6,1,-4,4,6,-1,1,-4,5,9,-10,3,4,6,8,-3,8,2,5,-7,-1,7,-8,5,3,-1,4,10,-5,1,6,8,8,-5,-6,-5,-5,-1,3,6,9,-1,-1,-2,9,2,7,-9,-1,-1,-1,6,-9,8,-2,-10,-2,-3,-3,-1,-10,8,-6,4,3,6,2,-9,8,6,10,10,-8,6,10,6,2,-7,10,8,7,-7,-8,1,-2,6,5,-5,-1,-6,8,-10,3,1,-9,7,4,6,-2,8,5,7,9,5,-3,-10,-1,5,10,-9,4,-6,4,10,2,-10,-1,-9,9,10,-2,-6,3,-1,7,1,-8,2,10,5,-2,-8,-10,-3,10,-4,6,-7,1,-9,8,2,6,5,7,-7,-5,-2,-2,5,-10,6,2,2,-3,-4,2,6,-9,1,1,5,-3,-10,-3,10,-7,-9,2,-2,4,-6,1,4,3,6,-5,9,-9,4,-7,5,-1,-2,-8,7,-2,10,-5,3,-10,-1,1,5,-10,-10,-5,2,1,-10,10,-1,-2,-6,-3,-4,-10,-2,-6,1,-7,-6,5,-10,-10,5,10,2,7,9,-1,-5,-10,3,3,6,2,2,-10,6,-3,-1,7,4,-3,3,8,6,6,-7,-3,9,-5,-5,-3,4,-3,8,-8,3,-5,-9,6,-2,5,3,2,-5,5,1,-2,4,10,7,-4,3,-7,-4,-8,-9,-4,2,6,-5,9,9,-1,-9,4,-2,6,-8,6,10,-8,8,1,10,-7,-6,-8,-8,-7,3,4,-10,9,-5,-9,10,2,-9,-7,-10,-3,1,-3,-2,9,-4,9,3,-9,4,3,-5,-1,10,3,-2,-8,8,3,4,5,5,9,5,-4,7,-2,-4,9,3,-4,8,10,-5,-8,-5,6,-1,7,6,5,-1,-8,-2,-7,-10,-9,-2,6,4,-4,-1,8,-7,9,6,-9,-1,-10,-5,-9,7,-3,9,-4,-7,9,-3,1,-1,5,4,-2,2,-9,10,-2,-6,-4,6,5,10,-1,-2,-5,1,-10,-6,10,-6,-5,-7,-1,-1,5,7,-9,5,-2,-2,-9,6,10,2,10,-10,-4,9,9,2,-7,5,8,8,8,4,3,-7,-2,4,8,-6,-1,8,6,4,-9,-1], dtype = "uint8")#candidate|4530|(440,)|const|uint8
call_4529 = relay.TupleGetItem(func_2480_call(relay.reshape(const_4530.astype('uint8'), [11, 10, 4])), 0)
call_4531 = relay.TupleGetItem(func_2482_call(relay.reshape(const_4530.astype('uint8'), [11, 10, 4])), 0)
func_909_call = mod.get_global_var('func_909')
func_913_call = mutated_mod.get_global_var('func_913')
const_4535 = relay.const([-2.408890,0.584625,-1.947599,0.358647,-4.926648,-0.107803,0.980592,4.141619,-4.931577,2.104427,-8.061455,-2.431082,-7.778583,-0.906831,-6.477733,1.245483,-2.867220,-5.182227,5.082037,3.897079,-1.389986,-7.039609,6.276546,7.820157,6.697845,1.822266,8.333291,0.140708,4.784974,7.368613,8.865503,-4.474192,-7.292234,5.464736,-5.926683,0.513660,-4.941957,4.221255,6.808264,8.993529,3.022189,-3.342660,-9.739916,4.534090,-2.327749,7.362597,9.632671,9.805431,-2.428860,-2.283564,9.621294,0.019667,0.936431,4.200494,2.488306,1.894219,-3.942188,7.700933,7.503510,-0.125205,-9.662144,-1.788435,-8.582342,9.624007,-6.224562,9.039855,4.972928,2.029553,2.261010,8.704822,1.418741,-8.569075,-2.263804,-2.300787,-3.447702,1.748440,0.262769,-8.400887,2.573911,-4.427046,0.605287,-0.150233,7.099108,9.497638,-8.715251,6.922550,-0.747749,3.601579,-1.156947,-8.310736,2.521375,3.926072,8.851854,-7.259771,5.234411,-7.756690,-5.907158,1.181321,-1.345970,1.264545,1.612350,-4.580234,-6.892348,-2.727065,-9.667678,6.690232,4.429458,-9.160026,-7.304527,8.194109,9.948951,3.114074,-7.383851,0.908038,6.419185,-7.100283,-8.357105,-7.351523,-6.463600,3.897510,-8.464304,-3.245206,2.100862,-2.453513,0.457114,8.472442,-3.410771,8.942898,7.114619,9.336129,7.927490,0.922868,5.755654,-7.055316,-0.580243,-3.294275,-5.190459,-8.217227,4.898832,9.370941,5.401462,4.426573,6.396536,-0.376487,-5.976996,-8.151482,5.480329,3.800073,5.055387,5.703070,8.754653,-9.420601,-7.899820,9.085354,-5.685200,1.436095,6.707923,4.532209,6.291193,5.271171,9.319294,5.097010,3.982578,0.863344,-1.755666,-3.048917,-4.131663,7.973602,-2.039633,-3.047628,3.088526,-6.453108,8.835075,-4.528441,8.940180,-6.844139,4.834590,-8.187529,-7.483105,3.681816,-5.918961,-9.509417,6.642398,0.264931,-9.975097,-6.549164,7.798295,-6.447782,-8.647150,4.256786,-2.872315,-2.043285,3.854330,-9.676519,6.008738,-4.170435,0.470745,-3.440661,-2.917941,-9.174803,-3.411105,8.365589,2.948208,-7.683739,-1.181890,-1.541794,5.276963,-0.664803,5.526414,-0.461004,-7.838439,-6.457545,2.544980,-3.401326,-9.812424,-8.592806,0.953907,0.033599,4.850351,-3.547487,1.464248,-3.123527,-0.745893,-3.642672,4.580235,-5.487373,0.720439,0.055507,9.434138,9.981940,1.571146,-0.197085,4.856606,6.536699,3.536143,-2.697827,-3.828963,1.447451,3.153865,-4.843701,-7.171680,-1.808680,9.784770,-1.579026,-4.675916,2.699256,5.587550,-2.304813,7.864514,9.301277,-9.058948,3.268023,-8.912242,6.849655,-4.117596,-2.672937,-6.480790,8.239163,8.873855,-7.985996,7.800404,5.924217,-1.313539,8.218866,2.440683,-8.276121,-2.656015,0.368179,6.475673,-0.095610,-0.499204,-9.752595,7.982592,7.391448,-6.467476,-3.586984,4.603961,-1.671826,-7.985950,9.806125,6.662046,4.010980,3.432623,-1.030498,7.682992,8.434864,-3.634906,-3.617574,9.432932,-1.902983,5.457507,3.624669,-2.016095,-8.522634,4.737913,-8.357681,-8.740482,-5.340617,-1.505865,-5.529126,3.246609,-5.797934,9.339607,5.003011,-9.004792,-5.497408,3.715310,-1.582369,-1.665644,-1.396253,-8.738400,-4.224009,-8.016948,-4.540181,8.040255,-0.538245,-9.405249,-2.972337,4.871806,-3.436690,9.346033,0.901385,-7.057696,-5.031849,4.442318,-5.046841,-3.419384,-2.009252,6.670147,2.876509,3.881646,1.847788,-7.307023,7.066843,-4.273128,7.559720,8.077606,-8.713350,-0.891355,-5.577090,3.182808,1.235791,3.330837,-5.022177,1.355734,9.936456,9.531777,-2.437745,4.256253,1.033004,-3.018493,9.754539,7.460205,6.188862,2.169496,2.427108,2.011107,-2.641314,-9.859589,5.473855,-9.790012,-5.227533,-3.079381,-6.940166,3.893316,4.827112,-1.621127,6.169862,-8.647486,-6.009441,-0.767995,-3.357288,-8.694475,-1.061867,6.977913,-2.941402,-0.500821,6.781451,-6.694838,-9.948845,2.488313,4.209496,9.328989,7.503016,1.913241,9.758283,-0.107492,3.873904,-3.339157,7.486449,-8.972852,0.970155,7.645470,0.974091,-2.010578,8.263846,3.354405,-2.402165,9.674874,-6.746598,2.544981,-1.952093,1.212362,-6.458197,5.595114,8.381564,-6.343474,-2.455226,8.274316,2.674676,-7.985892,2.321699,9.633393,-4.182147,7.536819,4.523728,-4.102209,-8.990960,-1.427999,8.135922,4.821597,6.255797,0.008884,1.340187,1.712306,6.457836,1.955429,0.818319,-7.501349,0.029381,-2.436395,-3.503194,-1.008570,-3.377924,3.702609,-4.290164,-1.556390,-4.044199,1.280131,-3.964159,-2.765560,-1.367638,-4.120028,-5.569604,7.905764,-4.777090,9.141987,-2.653405,-9.820880,-0.124572,-3.674156,-1.179327,-9.574501,0.915828,-0.164248,-8.846237,1.773803,-0.283402,-8.585754,-8.020927,-8.215366,7.779859,3.907378,2.382074,-0.182392,3.417389,-6.041168,3.291439,9.694952,-7.327144,-8.942492,-1.500461,-3.617972,5.103281,-8.669646,-7.384471,-3.702150,-3.791883,-6.094620,2.782181,1.209082,1.684857,-0.433338,-6.336881,8.745518,6.313709,9.884418,3.042733,-1.512963,-5.628914,-7.696283,0.934384,-5.233968,-5.740260,1.777115,4.020707,0.829964,-7.225557,0.931991,8.945177,-6.223803,-5.021670,-4.968553,8.806152,-7.387527,9.366987,-3.349335,0.624223,-5.930234,8.999001,-1.748693,-6.782405,-0.987954,4.674236,2.053376,-7.103406,-7.417880,9.345930,8.544461,3.647366,-0.054490,-7.481569,-8.325685,3.358123,-7.927194,-5.952416,4.610143,-0.473785,-7.397544,1.591545,-3.774835,8.049729,-3.171229,4.150466,7.499623,2.793571,-5.668887,-8.389195,-0.939091,2.893604,7.623126,8.187174,1.452057,-7.123415,7.902207,7.984221,0.133584,-1.699866,-8.981441,6.039122,6.682703,7.003853,2.245325,-3.121958,-0.470267,-1.474211,5.111322,-3.821763,6.686066,-0.851958,9.087393,-1.754320,-3.666107,-3.464062,-3.262561,-1.535129,5.005026,7.521561,-7.859544,-8.252323,-3.721090,-9.473004,-8.031885,-3.745726,7.245197,-2.524761,-1.359754,3.068991,-5.023798,8.035651,-0.276737,-5.283950,-2.738407,-6.182673,8.782899,3.491395,5.030627,9.397412,-5.196103,7.820551,8.923202,-8.806515,-7.432408,-4.947845,-1.173248,2.927052,-9.589614,-5.430372,-4.898229,0.278418,1.806350,2.401607,-5.944050,-7.667191,-7.640213,-7.516092,1.771079,5.150003,-4.788624,-4.822657,-9.283134,7.954768,8.943746,7.136912,-8.141243,1.293128,4.844399,-6.240449,-2.994689,-7.899672,-8.456746,-1.507020,-6.659154,2.489787,0.743004,4.636083,-7.968240,-1.635806,-3.805161,6.513489,-5.504083,-8.207367,0.183286,0.337604,1.616098,-9.649439,-5.183121,2.271848,-1.717768,-9.091171,6.314455,3.071058,-8.181575,3.068285,2.689092,-8.267318,-6.090545,4.339370,9.024700,4.946692,4.822463,7.766552,-5.458453,-8.269125,5.806287,-6.721783,-6.777958,-0.415076,-6.492516,5.342272,-2.429731,2.614287,-5.482729,-1.800684,-1.924184,-2.294782,8.940824,1.226322,-8.217293,9.972293,-0.043832,-4.464523,6.987061,-0.429505,4.567157,-2.120644,0.626820,-0.149328,-1.564588,8.985188,-9.670417,-7.154329,0.110641,1.970026,4.961643,-9.882737,-1.723397,-5.424868,1.584689,0.980758,-4.851133,2.236044,-2.847404,2.994396,-3.189349,8.594854,-4.904197,0.371988,6.717077,-3.256824,5.032088,9.739280,5.919266,9.242543,-3.163298,9.726304,-2.323511,-7.777038,-3.587484,-8.929134,-0.247494,8.300669,0.939084,7.603770,5.294270], dtype = "float32")#candidate|4535|(715,)|const|float32
call_4534 = relay.TupleGetItem(func_909_call(relay.reshape(const_4535.astype('float32'), [11, 5, 13]), relay.reshape(call_4505.astype('float64'), [1536,]), relay.reshape(const_4506.astype('float64'), [6, 20]), ), 5)
call_4536 = relay.TupleGetItem(func_913_call(relay.reshape(const_4535.astype('float32'), [11, 5, 13]), relay.reshape(call_4505.astype('float64'), [1536,]), relay.reshape(const_4506.astype('float64'), [6, 20]), ), 5)
uop_4538 = relay.acosh(const_4506.astype('float64')) # shape=(120, 1)
output = relay.Tuple([bop_4502,call_4505,var_4507,call_4529,const_4530,call_4534,const_4535,uop_4538,])
output2 = relay.Tuple([bop_4502,call_4508,var_4507,call_4531,const_4530,call_4536,const_4535,uop_4538,])
func_4547 = relay.Function([var_4500,var_4507,], output)
mod['func_4547'] = func_4547
mod = relay.transform.InferType()(mod)
var_4548 = relay.var("var_4548", dtype = "bool", shape = (11, 3, 16))#candidate|4548|(11, 3, 16)|var|bool
var_4549 = relay.var("var_4549", dtype = "float64", shape = (384, 4))#candidate|4549|(384, 4)|var|float64
output = func_4547(var_4548,var_4549,)
func_4550 = relay.Function([var_4548,var_4549,], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4587 = relay.var("var_4587", dtype = "int8", shape = (15, 12, 16))#candidate|4587|(15, 12, 16)|var|int8
var_4588 = relay.var("var_4588", dtype = "int8", shape = (15, 12, 16))#candidate|4588|(15, 12, 16)|var|int8
bop_4589 = relay.left_shift(var_4587.astype('int8'), relay.reshape(var_4588.astype('int8'), relay.shape_of(var_4587))) # shape=(15, 12, 16)
output = bop_4589
output2 = bop_4589
func_4592 = relay.Function([var_4587,var_4588,], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
mutated_mod['func_4592'] = func_4592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4592_call = mutated_mod.get_global_var('func_4592')
var_4594 = relay.var("var_4594", dtype = "int8", shape = (15, 12, 16))#candidate|4594|(15, 12, 16)|var|int8
var_4595 = relay.var("var_4595", dtype = "int8", shape = (15, 12, 16))#candidate|4595|(15, 12, 16)|var|int8
call_4593 = func_4592_call(var_4594,var_4595,)
output = call_4593
func_4596 = relay.Function([var_4594,var_4595,], output)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4719 = relay.var("var_4719", dtype = "uint64", shape = ())#candidate|4719|()|var|uint64
var_4720 = relay.var("var_4720", dtype = "uint64", shape = (11, 12, 12))#candidate|4720|(11, 12, 12)|var|uint64
bop_4721 = relay.not_equal(var_4719.astype('bool'), var_4720.astype('bool')) # shape=(11, 12, 12)
output = bop_4721
output2 = bop_4721
func_4724 = relay.Function([var_4719,var_4720,], output)
mod['func_4724'] = func_4724
mod = relay.transform.InferType()(mod)
var_4725 = relay.var("var_4725", dtype = "uint64", shape = ())#candidate|4725|()|var|uint64
var_4726 = relay.var("var_4726", dtype = "uint64", shape = (11, 12, 12))#candidate|4726|(11, 12, 12)|var|uint64
output = func_4724(var_4725,var_4726,)
func_4727 = relay.Function([var_4725,var_4726,], output)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5187 = relay.const([[[-8.869985,9.002568,-3.574303,-4.165835,-2.361672,2.528032,0.731781,3.470939,-2.333086,-2.848756],[-1.110039,0.076200,-7.615965,-9.361434,6.325819,-2.876012,9.820085,1.030596,2.818416,1.373229],[4.413319,7.160311,2.925326,0.413728,-6.959751,-3.918199,-6.035561,3.889447,-6.119135,6.116323],[8.452962,2.142652,0.480735,9.823914,-2.447483,9.540359,9.175057,-2.128009,4.469373,-4.433627],[3.703979,-5.755627,-7.873850,4.429284,3.944966,-8.739121,-1.789946,5.228393,-8.279680,-0.351599],[4.238067,6.151427,4.937532,0.671584,4.078562,-7.376167,-3.426107,9.391455,-6.018436,0.023464],[0.473495,1.374198,8.537541,-7.068695,1.024887,5.920772,-9.154527,9.054438,-3.168059,-3.583524],[-5.735979,1.343109,1.387998,-8.047951,8.078713,4.057859,1.613005,-0.198273,8.033802,1.152999],[-2.287495,8.554510,7.547583,-0.163578,-6.861620,6.334684,5.115291,3.957682,2.081801,8.431098],[-2.358244,-6.025630,3.310683,-3.258040,0.889585,4.263224,-3.799911,-1.573621,5.025835,-3.231426],[1.043557,-9.199832,-3.963294,1.097340,1.069109,-5.765779,5.533424,-6.892834,3.509860,2.358583],[-9.240159,-1.556382,5.573698,-5.245043,6.319142,-6.215924,-7.390764,-2.805893,7.120818,5.408097],[-8.096973,-0.312155,-6.883343,-9.757246,5.625055,-3.131144,-5.386202,7.199396,4.014257,-6.482253],[-0.886433,7.642939,3.171943,2.633057,2.609882,-5.835446,-3.001707,4.598424,2.970105,-7.029748],[7.943117,-0.444939,-7.749413,6.665321,3.818294,-0.330517,9.149754,-7.552474,5.699858,6.909590]],[[-3.259242,-7.470455,-2.783622,1.832116,8.405432,-8.677330,-3.089037,-3.556943,-9.461092,-6.463287],[4.220512,6.584974,-3.474467,-6.084081,8.202572,-7.194454,3.798947,-0.143883,-0.103440,3.050057],[-4.263137,-6.106993,-2.797288,5.593284,6.346733,-4.161473,-9.030955,1.937253,6.276850,1.821480],[3.088337,9.265241,-4.686402,-2.241119,3.261173,1.662141,0.976600,5.193966,-4.121455,4.572210],[-7.808610,1.871598,7.177262,-9.854091,-7.776139,-1.703447,8.457855,-8.258782,9.310969,0.926974],[-2.884809,-3.929450,-8.885255,0.959658,-8.317655,-4.170450,-6.859727,-1.368851,-4.566343,-7.429342],[-7.562809,-8.805284,-3.803473,7.412218,2.243026,5.020254,8.548470,-8.884930,7.795973,3.634352],[-8.734176,-4.376162,8.469242,-1.238172,5.761409,-8.014697,7.205140,-6.761090,0.719552,-9.421280],[-8.857871,-9.564829,7.694349,1.458965,-4.034885,8.781710,6.066318,9.013826,-4.838061,-5.848911],[-4.230308,3.894776,-2.209079,-4.624191,7.619479,-9.178664,-4.141494,-7.478970,0.431967,-4.165088],[-2.932143,-9.045980,8.002849,-9.318342,-7.874480,-9.347006,2.893443,-9.687517,9.150005,1.478541],[6.606595,-9.258535,-3.115815,-0.285047,-3.298023,0.808351,-0.371430,-8.151279,3.313806,3.467702],[-8.448607,-7.951898,7.793080,2.709321,1.085161,8.341743,-7.534490,-0.424412,-4.144274,6.625195],[3.513392,2.414618,-4.027430,-5.435747,-8.570042,4.416220,8.238858,-2.316387,2.444132,7.011321],[-1.332040,9.843066,-5.285173,7.762472,-1.496309,8.869342,6.014100,8.973403,8.352890,9.441169]],[[4.200374,-2.005678,9.797907,7.841709,-8.293265,2.613655,-3.991924,8.027105,6.315231,4.572436],[5.746922,9.174298,-8.455633,9.486483,-2.414342,0.750344,3.651394,-9.466252,8.503633,9.440230],[-2.529854,-4.469376,-9.012778,6.799883,3.341331,2.693541,-1.159373,9.808770,-9.875426,-1.410311],[-7.514455,-9.940236,0.981057,-9.282899,4.052853,-7.657148,-6.654412,-3.261122,-6.857005,-0.161384],[-8.292319,7.623625,8.873052,9.915475,4.229601,-0.561927,-0.229315,1.529120,-4.309236,-2.770999],[-9.400879,2.550836,0.555944,2.893106,-2.478835,9.649632,0.883007,3.119175,-7.108430,-4.913150],[-0.130710,0.331308,-6.167363,-0.318434,-7.326599,-7.363895,4.357677,7.681792,7.919305,-4.794482],[3.479142,-1.442965,-8.278956,7.536008,2.898923,-7.958986,-2.290226,-9.441251,5.205544,7.812060],[0.664826,-7.994191,-7.544660,0.554252,-1.892731,2.497570,-9.771039,-7.974353,1.992853,9.623544],[-8.522674,-2.986987,9.429438,1.018964,2.613549,-1.211060,-0.912745,2.418185,-3.288752,-3.264661],[-1.209619,-9.109895,6.003543,-4.612450,-1.562917,3.682022,1.835142,-3.079691,-9.839117,8.606440],[-7.785857,-2.393818,-9.181699,2.885172,3.166037,6.148781,3.851369,-6.801831,0.258711,8.580302],[-1.053458,-3.211957,-3.084880,-9.330094,-9.890038,-9.262970,6.293432,9.590266,-3.445133,-0.539704],[-9.621749,-4.979023,-5.219604,-1.355590,8.686068,9.715430,9.362347,9.301307,-8.138212,-0.351087],[-1.242498,-0.932136,-3.412251,4.798892,-3.582872,-7.846454,-1.174211,8.355989,7.589019,-1.622132]],[[3.081065,-0.884294,2.134656,0.848070,5.752345,-7.910544,-9.202622,4.973746,-8.837877,-0.554220],[-7.134205,2.030677,2.311897,7.444728,-8.891630,6.828951,-3.702765,-7.927422,6.460016,5.401187],[-5.559334,-8.743771,-8.737672,8.095318,7.828113,-4.918172,-0.869479,-3.173970,-2.801838,-1.888995],[3.652514,-1.392563,8.701811,0.874050,-9.328472,8.260578,-1.046535,-2.706277,4.121278,2.534870],[8.556229,-4.540949,7.550172,2.045834,5.815591,-3.212413,8.102651,-4.700182,-9.526077,9.657357],[-3.332893,2.949086,1.565274,-3.941792,0.465092,0.397186,1.281496,-6.923003,-3.685475,-5.907037],[4.196129,-5.671853,4.688899,9.606963,-2.744395,6.520305,7.717479,4.876617,-2.632014,3.384343],[2.867118,-2.542152,-4.118516,7.301362,-2.781554,-6.421693,-7.401690,-2.966907,2.121721,8.043809],[-5.841204,6.275131,9.855415,-4.391138,-1.373822,7.177451,-3.415269,-9.023737,-0.296112,8.423921],[8.661799,-4.838853,-1.455225,6.305655,-2.688435,2.778860,4.096802,-8.065508,9.252057,-8.053920],[-5.123161,5.818125,8.005845,-9.683531,5.362358,-9.308199,3.961199,8.484376,0.620338,-0.721231],[2.880337,0.286314,-7.559980,-6.975696,-2.077333,0.872344,-3.446034,-5.710612,-3.414379,-9.692732],[-3.527124,-2.343690,6.749532,-7.199419,-1.893577,1.742707,-9.045140,6.820173,-6.791814,9.438662],[-4.982690,-0.516552,7.000837,9.777355,6.113322,-0.951677,-3.845455,2.470575,-1.353394,5.989081],[-1.747552,-3.274233,3.259229,4.969330,3.085624,-4.401428,3.887537,0.970541,2.043072,-7.266511]],[[-6.175598,7.490084,9.988512,-3.418853,-0.303797,0.481703,-0.534833,4.275159,2.283712,-6.574545],[9.106379,-7.664247,8.433966,-7.787727,-2.144201,6.149528,4.411021,-0.848236,7.197554,-8.650439],[-7.732092,3.625459,9.204618,-7.974781,6.933796,-6.931020,7.767039,-2.102354,-6.761876,-3.337979],[7.480918,1.420801,-9.850209,-1.824942,-7.751457,1.789285,-2.655174,-6.651213,9.628476,-7.658631],[9.818002,-8.134301,6.507917,1.059328,9.259330,6.044073,0.821687,8.567195,-8.103994,1.844024],[-7.536031,5.853313,7.957041,-2.376096,-7.663928,-2.915384,1.377946,-9.278817,9.511702,-5.402762],[9.467027,3.808345,-9.910340,-3.023124,-7.091408,-1.267848,-2.014388,0.626825,2.323882,2.507385],[-1.877893,7.523116,-0.067193,0.082647,7.764037,-8.674356,7.615065,4.239106,-9.392302,-9.963176],[9.208293,6.062631,-6.422618,-7.733644,-8.323566,6.582231,3.611013,9.097803,-9.856744,2.157126],[-6.242350,1.378586,4.263812,-8.495919,-8.269506,3.919961,1.192804,-2.667804,7.482795,0.999427],[-1.077355,7.161209,5.101886,5.480418,1.972985,9.037080,-0.590509,8.674334,3.793452,6.887020],[-0.265015,1.497226,2.630952,6.327665,-1.464851,-0.265880,1.481021,-8.354622,-2.203719,-6.419982],[-9.437950,-4.493703,-5.249890,6.433493,1.966043,-7.534567,2.415035,9.232986,4.737090,6.117626],[3.565412,-6.898199,4.540071,8.336307,-7.954547,2.165830,2.534830,3.302688,2.041966,2.545975],[1.637160,-1.139958,7.294709,9.390505,-8.542536,7.610676,-9.039718,-1.883926,-6.233032,-6.216724]],[[-6.948014,-3.710379,1.994687,4.068277,-9.300942,3.465987,-2.947147,-7.220732,6.309955,-9.275233],[-9.111345,3.482031,2.532384,1.959144,9.379141,-2.799895,2.368825,4.344463,-9.112977,-2.786184],[5.008489,-1.722736,7.981896,0.711676,-3.560039,4.081135,6.697776,-1.207077,-5.665870,7.473263],[3.317340,6.228150,-6.124585,2.131483,-1.831331,3.635060,1.362678,4.180175,-8.150951,7.600423],[6.439230,3.999419,6.427787,5.750197,7.852176,6.124526,7.175501,-8.873685,8.078541,-3.718344],[7.383175,2.617717,-7.299632,2.682123,9.758056,0.559442,4.125335,-8.033582,-0.648602,6.237063],[-5.587982,-3.943507,5.958658,8.391725,-3.833341,-7.499540,6.401087,-1.557796,9.831230,-8.408314],[-7.238433,7.125276,-5.764807,-6.848643,0.136028,4.974016,-4.968158,1.883351,-5.918079,-9.814930],[0.181811,-4.734576,-2.210778,-6.504150,-2.225564,2.555917,-0.793252,3.442178,-2.817982,-3.467080],[7.277022,6.307592,8.466902,3.888811,2.173114,1.909515,1.593023,9.286790,-4.254583,7.497676],[-8.299239,-3.241551,4.412698,0.930601,3.614453,7.342848,4.671971,2.622500,-3.687761,-8.292554],[-1.397838,-1.459742,9.147136,-1.128698,8.745927,8.590483,-2.639049,-5.496734,0.392926,6.521054],[2.394309,1.192906,0.291291,-7.270666,4.421329,5.705706,-1.216135,0.811782,0.773160,2.894059],[3.118520,-3.565110,-8.412108,2.213391,-4.835648,1.937091,-9.705472,5.527308,2.373286,9.463982],[-5.559479,-8.805995,-6.109790,9.116286,1.705647,-0.303927,3.079399,-9.238444,5.674485,0.454081]],[[-3.055903,-3.141157,4.285503,-1.564050,8.920623,8.792053,-1.885190,-7.650137,-9.901751,-1.397846],[-4.189910,-9.600746,4.077355,-8.279634,7.068825,6.408915,-4.815235,-1.925954,7.921759,-0.150624],[-6.258106,-2.880158,3.310553,3.348916,-1.290455,-1.042702,-8.339462,-6.841897,8.326420,-3.033034],[-0.553735,4.713548,5.569768,-0.255030,-5.025734,9.311398,3.623488,-8.486030,-8.550097,-9.248379],[6.149413,-2.181069,6.589693,-5.392722,1.393975,1.585070,-5.124363,-8.577577,-3.478111,-2.569639],[1.946573,8.355999,9.437745,9.836424,2.592255,5.645220,-5.040584,-5.339136,-3.966707,2.407778],[-7.349957,-2.399244,5.924030,-2.400857,7.785118,-9.381973,6.146587,1.535880,7.698714,-7.370151],[-5.339584,-7.622533,7.005953,6.904692,0.856671,4.855672,8.600604,-4.836136,-4.303653,7.005327],[2.095997,-0.206952,4.303005,0.666912,4.106954,-8.959995,9.880356,-5.682774,7.900847,4.326252],[-5.456182,-4.383749,-1.369268,-2.289231,-8.180716,-1.777742,-5.587098,-5.799315,7.733443,-1.027854],[0.923195,-7.329093,1.690487,-6.194946,-6.811022,0.792857,-2.594762,1.490154,-8.995872,-2.289145],[3.858357,-6.886262,8.872554,6.846138,1.034702,2.367046,-5.650678,8.346180,0.637218,9.248965],[1.435978,-7.142250,-1.787597,-4.782076,-5.414939,9.418868,-1.015624,9.466913,-8.940546,-7.511014],[-5.837038,2.996014,8.236851,3.760721,-9.347858,8.063343,9.297233,5.288143,9.881562,4.705551],[-8.359452,1.152287,-5.183665,9.389411,5.713668,-6.085312,0.674072,6.355362,0.110467,5.637073]],[[4.025009,5.651820,7.151004,-3.383675,5.373087,-1.913673,2.125967,-8.802254,-5.516290,-0.546613],[8.474988,1.061670,-5.768178,8.301454,4.382066,2.137454,7.202036,-4.894615,-3.924247,2.262954],[-6.767897,4.120327,4.749013,3.136459,3.543217,-8.626861,4.879646,-5.654787,-2.815479,0.414432],[-2.480708,-4.852537,2.176532,-8.911967,3.833595,2.808683,7.257255,3.297602,-2.727470,-5.589326],[8.003935,-5.263169,0.505293,-5.094916,8.503100,9.996539,0.760704,3.408695,-2.892463,-8.968539],[-5.332664,6.987546,-9.901735,-9.086573,-1.833060,6.426444,2.117145,-2.832454,-0.010114,-0.991602],[-2.625544,4.112312,0.763587,-4.503386,9.096443,-3.408998,1.084570,0.521396,-8.808811,-9.120408],[1.342874,-5.033343,-4.322715,3.543667,-9.737567,-6.866855,6.499371,-2.851726,-8.874543,5.384908],[6.198133,7.399710,8.128184,-3.510531,4.408340,-8.043494,-7.891217,7.820113,0.196511,3.183421],[4.065313,-9.202051,-8.700003,5.083956,-7.029557,-8.376344,-4.788801,-3.337040,-8.615801,-8.452729],[6.612587,-1.233992,3.215464,-3.995104,-1.966423,-8.546079,4.359322,6.048529,7.190224,3.130311],[0.200848,2.232617,3.044704,7.510777,3.864035,9.867746,0.573850,-4.369088,-1.922548,1.687118],[4.263245,-3.478595,0.461582,-3.151646,-8.944128,-3.252259,8.733117,-5.633392,4.462035,-5.309048],[7.151642,8.101717,-1.189774,0.001749,2.068491,0.337066,4.706226,5.361662,6.798464,2.562966],[8.106648,4.279414,-8.697833,-5.526044,-5.607901,-5.164978,-8.701862,-4.467184,9.250195,8.381862]],[[-3.206781,2.016966,-0.259108,-7.887510,-1.799740,-6.905839,1.852414,-0.638036,0.916788,9.060213],[-8.982002,2.854982,-5.620714,0.423558,8.188678,-0.437009,1.138926,7.801773,-3.873996,-0.854134],[-9.306415,4.075911,-5.411235,5.326644,-3.948153,9.393630,-0.349579,1.539443,-1.446859,-2.898277],[-7.614878,-8.983024,4.746563,3.799739,3.775165,-8.435179,-1.950205,-8.580139,-2.779568,-5.685446],[-8.828138,2.908425,-9.305083,6.225282,2.792991,6.455723,-5.555257,1.251537,4.573352,-6.240299],[-8.911219,-7.975514,-9.633010,-2.919018,-1.164254,9.054646,-3.674606,7.524218,1.760147,-8.807692],[6.295022,-7.360508,1.256747,2.752137,3.103006,9.754270,-7.087894,-7.938596,-1.185757,8.378504],[-2.268573,-6.230460,9.116344,6.843135,-7.034595,5.916081,8.550468,-3.681857,-7.591335,-6.048526],[4.482651,3.586719,1.759899,-6.035123,-4.448173,9.570312,-9.863991,-8.064380,2.167019,-1.081841],[4.071584,9.870193,-6.658138,2.229843,4.843543,-8.487623,9.900606,5.567080,3.595586,2.028090],[4.315466,-9.665434,-3.096414,-3.639496,4.100312,2.859467,-6.589779,5.945212,-7.674655,0.489502],[-6.571662,-0.301292,-2.779839,8.092088,2.586836,6.406731,8.163336,-2.708798,-3.897854,2.404771],[-6.865768,-3.990030,-7.418529,7.743841,-4.807609,-4.800208,-9.998983,4.664861,-5.078787,-8.330865],[4.610925,2.543688,-1.252061,-7.720213,-3.260469,-7.909734,-7.738199,3.358888,-1.191579,-8.763005],[-7.280451,-3.297393,5.133357,0.417882,-9.294276,-2.063881,8.668286,-3.516888,3.169305,5.636719]],[[-5.641875,-4.654295,-4.427106,4.389679,-8.781787,-8.607384,6.363157,7.801764,-5.169703,-4.260761],[0.860224,-9.754135,-6.611367,-6.901754,3.429898,9.454106,6.240232,-0.170892,-1.798961,-7.335631],[5.704048,9.621279,4.581051,-2.979534,0.113160,-2.075251,9.136399,9.021428,0.670604,9.416339],[6.081741,0.901367,0.667811,9.747918,1.763679,-0.226415,-7.031404,8.969155,7.236638,3.181041],[7.633778,3.178268,-3.636572,-2.333040,-1.860649,-0.617296,9.387438,-7.233234,5.330368,-4.142599],[4.509814,-0.020423,-1.763706,-1.089238,5.322867,-2.585996,8.260371,1.588059,-9.863121,-1.240663],[1.536447,2.080542,-5.297264,3.243077,3.454858,-4.631528,5.403624,-6.019130,9.902241,2.786453],[-8.422374,3.170503,1.746329,6.820869,-7.494834,-1.078312,-9.595079,-5.311394,2.049250,-2.671007],[6.527804,0.030498,5.075690,-5.622380,-8.519154,7.495704,0.434702,5.901669,8.566062,3.393095],[-4.267958,-1.454121,2.156180,9.474918,-1.331218,7.336701,-1.653099,-7.009724,-7.495084,-9.143766],[-3.800697,3.013373,-6.255592,-1.167952,1.561918,-6.654786,7.086836,-3.479368,1.189994,6.707718],[9.895476,-8.914417,-8.658205,-1.540009,5.879929,3.443735,-1.860886,-0.808783,6.404585,4.875557],[-8.566272,-6.254522,-9.871293,-4.993167,-6.652973,8.132235,-3.650567,-8.836799,0.050985,7.620051],[0.297855,-8.323745,5.588557,8.109505,-7.636215,2.283497,-8.259612,-1.880823,-3.539337,-4.454494],[5.722888,-1.347090,6.696357,-3.438835,1.013732,-8.048300,-4.233513,3.085770,0.926508,8.058012]],[[9.455816,-1.062215,-4.111592,-0.865249,4.356770,-9.229796,-5.399706,-6.462170,8.209702,-9.559231],[-1.161244,5.818010,-6.950377,-8.054693,5.976076,4.088671,-8.933150,-3.578026,-3.734932,7.258727],[-3.019937,-8.640925,-3.872394,-9.475029,6.246534,0.813130,5.846347,9.230560,2.919085,1.174152],[0.258616,6.315114,-4.433475,-8.574560,-1.286645,-6.061467,0.999092,2.491136,4.039572,1.385246],[3.976849,-7.771460,-6.082123,-5.967588,4.209365,-5.698737,-5.020542,-8.977494,-4.584725,5.073387],[-2.408404,2.635135,3.020485,-5.706188,-7.526851,9.998626,-4.811710,3.573984,5.926103,-7.499181],[3.064946,8.874281,-6.557201,3.015858,0.143689,2.542441,-6.224588,6.098993,3.201074,4.062323],[-4.418919,8.066284,-1.332065,2.708166,-4.039894,3.929320,-7.242058,9.788022,-5.792844,6.324689],[-2.472269,-3.893418,9.350838,-6.112099,3.314042,2.852667,-6.673493,-0.238955,4.732367,4.643564],[1.957528,3.794940,0.424675,-1.656937,8.800767,5.627113,-9.197997,5.612252,-9.935661,-6.122124],[9.797065,9.986095,8.731245,-5.874750,3.054513,-2.559127,-1.126177,-5.131639,0.924996,-1.491104],[4.035070,-0.020648,8.170358,6.672655,7.787514,8.465507,8.844856,-7.002376,-9.860918,7.871069],[-7.754073,-4.611455,-2.712883,0.834548,1.920025,-3.737347,5.322383,-7.232878,-1.396315,-0.390091],[9.876660,-5.709702,-8.311290,1.655390,-5.722460,-8.520891,7.198812,8.817830,-4.317394,4.359181],[-1.785866,-6.784781,-5.941273,-2.507642,-6.439748,-8.778975,-8.336231,1.247205,1.196101,2.039487]],[[7.008390,9.406409,-8.566911,-4.014314,5.967400,-3.053813,-8.740987,7.304727,1.639453,5.732319],[2.705061,-5.239578,6.694188,-2.500615,-5.253153,-9.059971,-0.810975,-2.975519,-7.239426,4.926981],[-0.724836,-5.548087,-9.650860,1.761196,8.018010,1.900823,-3.863357,2.248294,3.206698,5.634597],[9.304694,-0.089217,1.374736,8.743900,5.271748,4.658327,-8.381705,-1.655001,9.495978,6.548242],[0.571728,5.605749,-0.250075,5.895470,3.641110,7.606120,-0.377422,-6.362850,6.486906,5.583680],[-0.638832,-2.314770,-3.681991,1.924764,6.115747,7.641864,3.878335,-5.977912,1.791515,-1.432914],[-4.452645,2.657154,0.069417,-4.473008,3.016226,9.829699,-8.603678,1.284328,3.176565,5.395412],[2.112015,7.618419,4.487920,-1.360326,2.168721,2.147700,-9.249051,-0.535664,-8.923003,-1.377483],[-4.304054,1.736485,-9.829652,-5.786576,4.981761,-1.485753,-5.354965,-9.897307,4.290890,-4.737371],[3.402361,3.196628,-6.044652,3.720275,-8.104062,2.646632,3.793654,-8.051567,5.677695,6.677651],[-3.364514,6.220348,6.095990,-5.838458,-1.422100,9.756291,8.234796,9.962436,-9.115605,-9.412353],[2.996310,-7.646169,2.672808,-7.103712,0.970445,9.521452,1.161381,-5.919306,-4.162216,2.678060],[3.432408,-7.983354,4.699343,-0.870714,-1.999668,4.646095,-7.116613,3.225802,-9.382262,-1.440601],[2.922316,4.362384,-0.781769,-4.249005,-8.136423,2.336119,-9.491651,-4.157745,-5.157078,-0.150371],[-4.864471,-5.654094,9.249335,-4.007113,9.331515,8.589140,-9.967226,9.790066,-9.861677,-5.881907]],[[8.983668,-6.237581,8.745517,-4.806393,5.350081,2.190183,-6.185584,2.541726,1.403738,2.590626],[-5.184557,3.808554,3.138034,-6.355813,-5.552810,-7.639656,-3.376357,-1.146320,-0.800634,8.109248],[0.721892,0.988824,-0.440450,5.063006,-7.756858,-0.243496,4.815257,2.429031,-1.934461,-4.163128],[-0.747994,7.525759,7.962884,8.017768,-6.469328,4.385677,4.864058,2.492711,8.517326,4.973062],[1.515124,9.243752,1.303171,7.128429,-4.343238,0.555904,-0.407831,8.572056,-2.714564,2.511777],[-4.854128,-8.012289,6.663512,1.191123,-0.749829,-8.174291,6.720066,-3.878153,3.441762,-0.891242],[5.503767,-4.130879,-1.197605,6.909475,-7.296102,5.585839,6.158014,-8.700828,6.344335,-2.855222],[-4.714586,3.650631,-9.437267,8.262095,6.617667,0.939125,5.024308,7.267638,1.485361,-3.193208],[4.340607,-8.716933,7.621055,-5.685138,6.961264,-7.651558,7.404834,8.446146,2.967554,8.090102],[-8.778288,9.995701,5.651991,-2.999855,8.068421,-0.244557,-4.006966,0.965080,-2.933897,1.232221],[-2.126466,1.129660,1.727172,7.131339,0.893045,-5.302947,4.854252,3.595865,-5.839795,-7.677061],[-9.967560,-4.205791,7.063060,-9.752530,7.395710,5.778587,3.857639,-7.825213,3.989699,9.909646],[-8.157506,2.329955,3.842087,-6.902391,-3.269699,9.964739,-9.404550,8.913122,-9.154926,5.712483],[3.076473,7.749549,4.721364,-6.365089,-6.149966,-6.161869,3.264170,-6.591281,-0.908102,-3.932830],[3.212497,-1.854898,0.664428,-7.381670,7.059801,-0.521185,-9.536789,-0.555936,1.629436,2.628322]],[[-2.810282,-3.520580,2.016462,8.475472,-9.523373,-4.152316,2.395095,0.328864,-2.239684,-8.560172],[3.370419,1.066789,7.838273,8.827947,-4.505048,-7.849211,-3.360336,-9.396810,5.907591,-0.554806],[0.497564,-2.139673,7.413032,7.977798,5.359030,0.240472,-2.823666,-6.653772,-9.909318,-3.693016],[-8.980115,-3.945056,-4.050924,-7.435549,-9.553614,1.769331,9.279002,-7.673878,1.482809,7.157428],[-4.766521,0.002631,3.954682,-5.935657,0.058686,-2.532688,2.206614,8.483901,0.190040,6.844849],[-0.010486,8.034119,-2.531053,-2.434091,9.489615,-5.853720,-6.682675,1.168291,-7.566274,-1.683680],[-6.989733,3.240595,1.878645,4.336924,1.918667,-0.685571,6.775545,4.685958,6.478237,1.562558],[7.710940,-8.848005,8.632290,1.477810,7.199105,-2.077271,-0.295842,8.626653,-6.724893,-0.569777],[-5.097145,4.519798,-6.638488,8.035929,-1.487000,1.523136,2.555741,3.042551,7.984117,-4.757357],[-4.374823,-0.774153,-9.404921,-1.095357,9.112008,-6.333027,2.824980,4.700686,0.973084,-6.822524],[-9.648917,3.360802,3.807827,-9.696488,-8.413431,-4.627902,6.882013,8.008333,-9.330831,-7.651322],[8.594005,4.624416,-8.009563,-8.763866,-6.620525,8.151040,-3.890290,-0.890004,-5.510093,-9.825700],[1.747209,9.768560,-7.128692,-8.489705,0.783076,-0.001632,-4.029690,6.340649,-0.163313,-7.670083],[-8.638544,1.154123,-3.409519,5.161320,3.326228,4.897493,-0.084018,1.093700,-9.080898,5.527496],[8.886829,-2.294066,-6.664944,-5.692644,8.298477,7.697572,2.061190,4.157112,-6.930148,-7.445264]],[[-4.104997,-3.082667,-3.998894,3.531139,1.249830,-6.410569,-7.033622,-0.759605,3.315913,-1.830396],[0.393716,-0.018471,-7.315674,1.622809,-5.108200,-6.477613,8.932362,1.206565,4.366770,-7.485403],[-1.260674,4.632147,3.587232,5.734773,-7.927404,-7.820583,8.249741,-9.774205,-6.566306,-6.255584],[3.800158,6.227549,6.512765,5.767457,-8.601035,7.684297,-1.750228,9.873807,3.365992,-8.956101],[-0.555486,9.153869,-2.050490,-7.157728,5.047585,0.835351,5.067284,-4.044339,-5.591583,9.542220],[2.374830,6.118008,5.292833,-0.849694,1.470649,0.818780,6.546060,2.529384,-8.043236,-4.444434],[-2.273141,0.108981,-0.373986,-4.162189,0.040713,6.944771,-0.527383,-1.745196,-0.298206,-0.906096],[-6.100765,8.276342,3.719511,3.032897,-4.666026,7.996295,9.510545,9.745926,-5.095495,-6.003126],[3.850924,3.818657,-5.081444,-1.579850,-7.984102,-5.032883,-6.977811,-2.512536,-1.626646,4.961665],[7.360951,0.879754,4.412038,-6.202746,-7.373010,6.325173,5.078254,-3.870410,2.941637,-1.468069],[8.266480,-0.863658,-5.110977,4.548489,-3.711914,-1.950244,-5.116903,-2.122722,-2.430216,8.056273],[-1.640749,-2.332942,6.366886,7.975625,4.034417,-7.593060,5.873031,-7.199585,5.485996,-3.942682],[4.846649,6.698732,7.290793,0.265461,5.495249,-1.400461,-9.225400,6.032974,2.767572,-4.743867],[-0.115502,-7.715531,0.615315,6.986124,-8.939459,-5.831321,-4.506125,1.689058,5.037998,4.565476],[-3.263670,-6.654448,7.087532,-0.627653,2.531918,8.331068,-0.431232,2.088456,2.471959,-9.129102]]], dtype = "float32")#candidate|5187|(15, 15, 10)|const|float32
var_5188 = relay.var("var_5188", dtype = "float32", shape = (15, 15, 10))#candidate|5188|(15, 15, 10)|var|float32
bop_5189 = relay.greater_equal(const_5187.astype('bool'), relay.reshape(var_5188.astype('bool'), relay.shape_of(const_5187))) # shape=(15, 15, 10)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
const_5211 = relay.const([6.061175,2.815488,-7.151554,3.950413,2.734664,-4.981772,8.407707,8.886766,2.395647,-2.222454,-5.156206,0.190698,-3.632064,-2.089524,-1.482932,5.703644,9.998196,-2.673461,1.846851,-0.654448,-3.664868,-0.311205,-9.757576,-2.919966,9.491515,0.081385,-1.154396,-1.889164,6.282419,-2.208664,-0.523404,-0.456970,-6.038758,-0.678781,-2.705349,9.785884,5.291055,6.252132,0.355945,1.345542,-6.041109,-2.153022,1.599586,8.986728,0.413024,-8.659765,-9.929933,-2.885278,-3.858611,-4.241027,1.656949,2.616369,9.744335,0.460519,4.478859,7.990159,8.770359,-3.411124,-5.870986,9.853640,8.725735,-8.174535,-9.299517,-3.864292,6.111839,-1.773991,-6.892210,2.185789,-6.250566,-0.885489,-4.845115,8.529616,8.302227,-0.493075,4.119057,-4.427406,-4.323895,-5.538238,8.034933,7.589024,-8.022908,4.326118,4.818063,-8.900240,4.284773,2.791091,1.946503,6.129024,-7.719612,-7.438875,-8.528653,-1.103211,8.241669,3.450947,-0.799401,9.160603,-9.041487,3.222178,-7.384186,8.349019,7.390313,3.052973,2.733524,2.355071,-2.931310,-5.450294,-8.388847,0.746877,1.737277,-3.689777,4.472466,-2.600154,9.531664,-9.248742,-7.119404,9.052437,-9.976433,-9.519916,-7.328506,-5.368936], dtype = "float64")#candidate|5211|(120,)|const|float64
const_5212 = relay.const([8.044844,-8.775513,9.962578,-2.254577,-3.959640,7.905446,9.553332,1.213342,0.388266,9.000617,0.520409,-9.526758,7.116157,1.749853,0.856424,2.230655,3.383746,9.305382,-6.268364,-1.218918,3.399844,-3.257855,7.312452,-6.355441,7.741966,-3.710635,5.053474,-8.585927,3.054229,4.683854,-2.589560,-1.460018,-4.215000,-1.790196,4.868503,-8.988426,-9.013125,7.399914,-8.126039,2.045035,4.181006,5.522150,-8.588569,-8.921861,7.405624,-1.002598,-2.158509,3.583634,-3.866250,0.835888,-0.458985,-7.604303,8.596236,-5.511009,5.137620,2.027061,-8.326289,7.807704,-8.485643,-4.123131,-4.353166,7.800665,5.483103,4.661838,-6.081901,-5.196535,-4.983787,-7.281899,-6.563322,-8.948399,-9.157022,5.649387,-6.708445,8.897424,-7.916310,-8.532266,-1.530495,5.145114,-3.619702,2.595324,3.734441,-2.485825,7.938043,6.206938,4.894004,9.850919,4.015026,-2.895751,-5.173578,-3.442874,-1.158432,2.889632,-6.162168,-4.402413,1.994340,-7.118867,5.767331,9.835754,6.024697,1.763349,-1.507922,-5.695389,7.313848,3.660007,-9.359215,-8.885754,-8.238423,1.870703,-0.190281,3.947289,1.130665,-5.511891,-4.712930,8.043682,5.284870,4.460615,-6.919767,7.628641,-7.243474,4.160075,7.356237,2.954067,6.275678,-8.857351,3.715723,5.828899,5.716315,9.324349,8.949971,8.598277,1.488984,-2.496275,-4.315304,6.190677,-4.955780,7.511918,-7.770010,9.554502,4.186884,2.604588,-3.491817,-0.117657,9.046420,2.940381,-8.647894,1.808203,4.179166,9.305322,0.798458,8.386408,8.132955,0.702840,9.348977,9.855915,2.067801,2.577796,-8.994764,4.332758,-3.432495,-0.100050,-6.745062,-5.229706,-1.385597,5.062542,2.449971,1.955690,-8.794914,-8.267474,-8.869788,-6.197905,9.359558,6.179040,0.388367,9.085167,8.040466,1.716312,4.601408,-3.390848,2.817887,7.784319,-0.598524,-1.461099,-8.041390,-0.602660,-2.023599,-4.916046,3.131665,4.926786,-4.528630,-0.028409,2.215012,7.088334,9.583946,-1.816510,-3.680829,6.176768,-4.097217,4.720003,9.453849,8.665984,-7.180137,8.081623,6.058993,5.456728,0.915186,-5.242245,3.193979,5.005483,9.728741,9.998330,3.746015,-3.009316,-1.144303,-6.929766,6.075297,-9.460843,4.367244,7.136117,-3.548108,2.160823,-2.833610,-2.014108,2.075512,1.394810,0.389244,-3.632353,6.379441,5.371019,-2.162380,1.488578,4.715765,-4.679220,0.022308,-9.742142,-2.413989,9.778020,2.053324,-3.049670,2.967072,2.873822,-1.258567,-4.188387,-3.375934,-3.376492,9.184820,-7.626774,4.825070,-2.095092,2.355371,-5.598235,-4.835375,-9.667518,-9.301162,-4.135737,-5.698251,-6.116525,-8.025806,3.403121,-2.722112,6.337950,1.663095,2.727702,-2.576286,-6.143611,-7.733786,2.700927,-3.199276,-5.872279,-3.335163,6.223229,-1.431044,-7.737115,-0.385778,1.753254,1.559026,-2.457963,-3.559327,7.138113,9.972697,-8.295540,-1.692439,-5.396774,-4.361289,2.481642,-3.251367,0.562187,8.821774,6.039409,0.675331,-6.280143,2.765766,-8.293788,-4.427026,5.883469,3.380378,1.802439,4.605761,-4.912887,-3.532731,9.097921,-4.641712,1.652374,-2.312666,4.869141,4.619804,-0.465285,8.501261,8.626941,-7.998039,5.979967,-1.251849,8.231309,6.050562,4.114742,-2.338021,-1.088548,-2.996833,-4.607449,-4.262057,-2.913233,0.275621,-1.663771,9.467190,8.951308,-9.695041,9.270824,0.897747,5.492337,8.307011,5.684074,5.422685,-0.795638,5.021938,-1.544141,2.002060,-6.993865,7.828446,6.620401,-2.003035,-9.356639,8.215386,7.549993,-3.290647,1.210853,-5.887698,4.637566,-8.114035,0.684824,-0.240324,0.223455,-3.232916,4.865343,3.903556,9.580991,1.675989,-7.494415,2.941271,9.817159,-4.919808,5.783039,8.965634,-6.212911,6.990800,-5.195656,6.462560,5.818145,3.380127,9.955021,3.928707,-3.386090,-7.549797,2.615818,-0.330302,-9.885104,-0.906052,1.741736,-3.612769,7.762721,4.267926,-6.876720,-6.896893,5.691438,-2.938313,-7.958475,5.112294,-8.574996,5.250295,4.584375,-7.403548,4.784301,-0.616871,5.183742,-9.583054,-7.799858,-7.503428,7.021420,-8.592677,-5.996069,4.876957,-5.306328,2.142670,4.266467,-0.771371,-3.697630,-8.290055,5.238854,8.043177,5.131251,-6.624153,6.413592,-8.392014,6.874224,7.896102,4.038465,-9.279265,7.777089,-9.643923,-6.565388,-6.359178,-1.552058,-3.298051,3.749193,-2.667592,-1.218583,-8.149364,2.322780,-9.334703,3.075353,-7.200969,-8.103325,-0.275188,-5.255989,-6.261054,8.762530,1.536035,0.948963,-1.620941,0.811714,-1.617978,3.591221,-9.045875,4.993088,7.163986,-0.644548,-6.066962,-0.112716,8.953998,4.573688,9.226429,-6.468362,-9.064185,2.052532,-3.128817,8.618710,-5.264854,7.971823,9.552193,5.839569,8.332028,-2.034755,-0.312965,-2.606568,7.015668,-4.553930,-9.501174,-5.964116,-5.681168,3.220518,-5.927328,9.155282,1.074560,3.917720,-2.418618,9.247665,9.674032,5.399390,-9.690929,2.971209,5.271822,3.756215,-5.345404,6.884082,6.799046,5.531707,9.482604,-3.275519,6.465990,-3.144748,-6.702408,7.346132,7.300893,8.658286,-9.591482,-8.767149,-1.022833,7.605743,6.831323,-0.393535,-5.833212,-7.524123,-5.108277,-5.884997,6.798503,0.394248,9.502433,9.902843,2.578336,-8.283594,5.642325,-0.857000,-9.274716,-1.747519,-1.406413,-1.976558,-2.531269,-4.858680,7.890180,-2.691640,4.769132,-2.216910,-5.976426,-1.755009,6.592850,8.623043,2.254110,-1.020325,9.278559,7.003302,6.164726,-1.885093,-5.870312,1.535836,-1.321322,-1.302039,1.438009,-9.014222,-4.290734,-4.490059,3.076635,-5.154110,1.048625,4.193172,0.987010,-9.055795,-5.710996,-0.446021,4.375794,9.594788,0.027936,-3.980486,-7.625341,-1.578212,7.110904,-2.338014,-5.171468,4.357783,-1.301861,7.067868,0.756209,-0.919771,-6.359917,-7.831711,-2.587877,2.556013,-3.549632,8.334131,-7.862210,5.541979,-2.616664,7.947927,8.753778,-2.081376,1.988851,0.593459,8.778640,-5.562950,5.703870,9.046733,-8.547303,3.398250,-8.217904,-9.627999,0.965737,-9.938321,8.318832,-6.808652,-7.313443,-6.032674,-0.734644,-6.636384,-8.854446,-6.879575,-1.763868,3.430335,-9.025501,1.551538,5.129385,-4.550183,9.332138,-6.769433,-9.181919,7.195632,0.344517,-5.360897,-4.317170,9.003226,7.469245,-6.346519,-9.410160,0.429745,-7.564036,3.810801,-1.670694,-1.477916,3.556160,-1.961769,-2.977710,-2.409928,-3.458522,5.572733,-3.441442,1.650429,-0.353619,2.025607,8.892259,-3.110317,5.788628,-4.345362,9.297601,9.290662,7.642363,-7.900104,-0.692129,-7.405269,0.683066,7.394940,-4.282192,5.862308,-0.311687,8.781982,1.983170,0.883769,-2.350588,-9.662809,4.487066,-3.224658,-6.940253,-4.843783,4.030253,1.165808,-3.224881,-7.327440,2.897584,-1.831408,-3.942744,3.519245,4.888087,-6.067377,-3.729607,9.404746,1.326343,8.267000,-5.474327,-4.821571,-1.078326,-6.630511,-5.786572,1.897928,-6.610691,7.573240,-0.743102,6.803752,2.896378,1.428239,-0.824716,5.306106,-1.482054,1.054226,-8.470930,-4.525016,3.096616,-2.960088,-3.690279,3.347045,0.283421,8.931988,-3.745090,0.056069,1.483634,4.588738,2.448573,3.345245,8.718428,-9.096289,-8.325225,-6.140793,4.939201,5.118159,0.566421,-2.109846,3.135376,-1.208144,-4.551857,2.279236,-1.691907,-7.650502,-0.173541,7.979864,-9.773554,4.262946,-3.290784,5.139543,-7.190068,3.899361,8.402267,-2.801962,-4.334260,-3.087464,-7.336172,-2.549365,3.528538,-7.135722,-7.486318,6.959895,4.939092,2.079062,3.937791,5.618612,9.602592,0.509740,5.369338,2.753138,-4.672882,-0.024497,2.319733,3.358059,4.853653,-5.140387,2.646440,4.922964,8.444078,-0.045724,5.671790,-9.599442,7.749419,9.604511,-8.829868,-5.310316,2.823801,0.462465,0.089910,8.372069,5.016463,-5.337097,5.913047,7.039345,-8.288598,6.025662,-4.320310,-1.835927,7.662983,-4.549196,-9.333016,-9.119952,7.956312,-0.393697,-7.584585,-5.190243,-8.365072,-5.668284,-1.390703,-9.016471,-2.564444,-5.609519,7.054141,-7.737804,-8.957046,-8.101992,8.624184,-6.203279,2.950543,6.121620,-0.182327,3.279915,-3.622014,4.488095,1.585774,7.259282,9.308693,-5.614764,-5.064088,-3.290535,0.202736,0.111546,6.320455,-6.457373,-6.149654,8.533435,4.695084,0.624713,-5.564064,-5.499919,-3.737949,4.325978,4.476675,7.972517,-6.434995,-4.703155,-7.691916,-2.766355,-3.764272,-6.617330,-1.503351,5.361072,-8.984680,5.322809,3.608971,8.481595,9.102420,-0.925258,-6.746457,-2.467031,9.142287,8.725920,-8.467692,6.129745,-9.208513,-2.509468,2.600787,-3.587374,-6.640981,3.742677,4.915033,-0.502299,7.041694,2.410544,-8.637829,5.373696,-4.307154,1.828361,-3.649783,9.035637,9.496969,-3.992542,-0.482100,-2.259208,-3.276642,-7.268813,-0.047413,9.662971,1.141698,-6.426073,-2.447344,7.743853,-4.651416,-8.037793,-9.190531,0.664765,4.141213,-7.461428,-6.247324,-2.254067,-6.880373,-8.665215,3.673626,8.056124,-8.167099,-9.372969,5.764035,5.808472,3.132131,-1.801409,-0.020005,2.246281,9.607540,0.880080,-8.940910,2.500222,-5.587529,-6.024970,2.989159,4.795937,9.296866,-0.369331,8.382581,-3.814451,6.437282,-9.110936,-7.895140,9.122960,-5.102086,5.072402,2.460065,3.783598,-8.528221,4.908847,7.811648,0.412352,1.778814,6.477874,7.374941,6.430473,2.081719,-3.092807,4.248129,2.145107,-3.138713,-5.802415,5.903190,-8.229793,3.790653,6.782323,-8.530787,8.269631,9.842411,-4.986278,-0.648606,2.935711,-9.040951,3.443198,-2.202365,8.785790,3.214739,-4.199383,8.797141,-3.123007,-2.503006,-3.332857,-8.390025,-1.401028,-4.119538,0.471618,-0.363363,-9.977158,-1.406897,-4.392782,9.851414,-0.950600,-3.388297,8.669816,7.689736,-2.878026,-1.680119,-9.133748,6.940639,-0.312387,5.270743,-4.249035,-7.942435,-1.961133,9.850393,2.784536,-6.305919,9.093311,-6.141124,2.274355,2.347755,-4.571574,-5.591254,-5.845869,7.558180,0.063234,-1.377402,3.505326,8.882283,-0.940334,-2.199076,2.776556,8.053893,8.874597,9.757687,0.757811,1.934894,-8.844495,-3.911939,5.153470,3.617389,-3.884039,-9.886247,1.999473,-9.107877,-5.301068,4.173659,1.788815,2.056610,5.534527,8.283477,7.613348,-7.501380,-9.413673,-9.025375,-8.666162,5.506635,-6.494078,-4.004333,8.921972,7.984381,-2.696948,4.908662,5.437438,-4.712312,6.822587,7.396009,-0.004278,1.415940,-3.007119,-4.039503,2.130123,3.123866,-7.469980,9.881126,-0.150756,7.975350,-3.971387,1.329902,9.867921,-3.630403,1.392192,8.856278,3.964025,1.240724,0.878703,-3.410461,2.451353,-9.601398,-4.629990,6.426728,-4.008035,6.612763,0.125725,-4.697010,-5.044431,1.207046,-8.339274,-2.669745,5.078934,4.869425,3.703653,-7.598755,9.273726,-3.667617,-2.397122,2.859431,2.014434,2.204409,7.871422,4.650238,-9.540529,1.177916,-4.366738,-0.020403,1.979124,-6.232314,-9.462843,7.317026,4.961019,1.120024,1.808168,-7.366268,1.207761,2.360040,0.832154,-1.593980,-5.586773,-1.784625,5.394105,-7.474589,-1.449235,-9.615911,4.648846,-7.293337,3.357446,7.828184,-2.178057,2.918916,6.298376,-6.781261,-7.699796,0.735078,2.090808,0.853429,-5.997355,9.877576,-8.074644,1.642982,-2.465302,-3.103244,5.118340,-0.112434,6.330391,8.695451,2.046845,1.773516,9.703799,-8.452300,-4.599126,0.109135,3.733195,6.113753,-2.285118,-8.038848,-0.641263,7.032143,-1.441714,-0.268080,2.993111,-3.124604,6.831040,-7.437163,-6.253479,6.428337,-9.746212,-5.646900,-3.829202,2.442515,-0.652362,2.332406,-9.204518,2.304961,-7.967774,-8.706055,8.621732,-1.281850,-4.588092,7.430391,4.147397,4.648349,-9.262189,-3.663714,7.969853,1.828432,7.252570,3.420630,4.553012,-7.037416,-1.387818,-6.603386,0.432532,-7.071966,7.678851,2.251339,0.511898,4.468185,-2.724587,-3.676351,6.023704,0.520011,-1.899585,6.460897,6.420088,8.434956,-4.163675,-7.315378,5.285172,-1.966546,-4.530143,9.093364,-2.037249,7.220183,-5.566991,1.377199,-4.073605,-6.723352,4.003653,-6.217484,6.334183,-0.032415,0.333442,-4.248444,8.760036,-3.837085,-2.646916,7.463792,-8.421293,3.372932,-1.839514,-9.614636,5.503553,8.338393,-8.505401,-9.095019,-7.265828,-9.157649,9.555108,-1.426267,5.852535,-9.795982,-8.047241,-9.261184,8.730356,-3.307420,-9.573319,-3.054373,9.916849,-3.699415,9.864652,-2.751193,0.647957,-3.657103,2.162764,-3.658070,9.699580,-6.452716,-4.438527,-5.872072,-0.911068,-4.984131,8.260794,-8.143711,-6.969155,4.328067,2.650691,6.972051,-6.201981,7.454816,-0.811177,-8.131706,8.346305,-9.568920,5.315727,6.441137,6.155031,9.132375,-7.238580,6.922597,-9.654296,-4.347746,-6.952946,1.780621,2.379316,-5.276494,-4.038518,5.987250,4.018801,9.836512,-3.769653,-2.312835,-6.596103,9.130730,-2.112807,-1.838862,8.425419,-7.002876,-4.776024,-0.115647,0.039791,-6.611891,9.335649,0.172345,4.704451,0.766391,0.530718,9.792033,6.444347,-8.293831,0.917949,4.187274,3.991008,4.889066,3.014742,-0.060714,-1.525946,-7.399491,-3.629787,4.166658,-8.698140,-3.903750,-4.511597,-5.564636,-3.162695,8.433506,7.528913,-0.317927,5.771966,-8.266291,6.598463,8.019221,2.554199,9.463813,1.469038,3.138542,9.265061,8.269503,8.217885,-8.989596,-0.536028,-5.472032,-2.301672,-2.279582,-9.095622,-5.732754,8.880350,9.136114,0.337178,4.802884,6.241212,-4.631289,-0.134535,7.724539,9.502743,1.537820,0.925407,8.963826,-4.572537,0.694931,8.200916,-3.357261,7.137848,7.242237,-1.119540,7.967035,-7.683403,-7.508827,4.545885,-3.463128,2.643132,-0.917427,9.485248,-3.158770,-0.873625,-8.498616,1.270904,-5.422303,6.477453,3.324225,-8.590627,3.851372,3.499271,4.393673,6.053661,6.340482,0.501558,-3.836582,-9.974879,-5.596828,-5.784740,-1.914331,9.612070,2.016555,-0.880811,-7.471464,0.541620,1.513918,-0.502658,-7.096504,1.505536,-8.735318,9.666057,8.416040,-2.000074,-2.001195,8.508592,-6.922955,-9.066505,3.937325,9.155753,3.924500,4.309744,5.379561,-0.023362,-7.309141,7.939497,-2.498336,1.178111,-1.965857,-3.468539,-3.670340,7.201104,-0.600172,-1.112880,1.371576,-1.757571,2.341879,1.345250,0.276928,-9.245790,4.511433,-6.695654,-9.315279,-2.468696,9.358112,-0.089493,-7.462373,6.425813,6.776651,-1.724655,7.231629,3.612191,-0.187598,3.121981,-8.279715,5.613545,6.340159,-1.825583,7.026445,4.705310,0.495513,8.706238,7.131824,-6.869452,-2.754864,5.555877,7.433355,-8.923588,-2.255806,5.984957,3.675227,-2.362256,8.606293,5.791038,7.074050,9.056658,-8.684340,-8.935999,0.117700,-2.710469,9.702011,0.875310,-3.990875,8.061473,3.461048,-3.198265,4.239105,-5.697903,9.049273,-4.895247,-8.997137,4.866085,-8.329902,-4.310366,-5.102157,6.958556,9.193629,5.521912,4.800992,-4.231640,0.619440,5.374610,3.438206,9.634268,1.647005,-3.414914,-2.326248,-1.548964,8.929327,-9.954617,1.894762,-7.109676,8.367182,7.389462,-1.532314,4.932863,-2.464391,-5.739578,-3.918793,-8.655523,0.896601,8.366368,-2.191649,-6.462489,6.648563,2.527064,3.259409,0.427255,1.061531,1.221602,-3.931933,-5.782517,4.646548,-5.484471,-7.528013,-0.812014,8.921717,7.406427,4.685047,-4.517420,9.673310,-8.751942,6.959955,1.522866,-0.115925,-5.843994,1.131572,5.524426,0.543574,9.450661,-1.664986,-1.942777,2.454226,4.941539,2.504119,0.629553,3.461765,4.225394,3.700937,-3.953038,8.055360,-6.974541,7.271886,-8.852761,-0.307397,-3.733048,2.965179,-5.420657,4.578920,7.907041,9.814058,8.518861,-5.513942,4.037341,4.701585,0.580912,-9.197538,5.642922,2.695894,3.489321,2.927809,-5.238017,-0.258548,-7.224646,-4.729001,-3.737031,-9.003809,7.045841,9.585039,7.172261,-2.320371,6.567092,-2.296877,-6.242584,-1.610184,3.426257,4.667518,-9.576530,5.054577,9.557840], dtype = "float64")#candidate|5212|(1536,)|const|float64
call_5210 = relay.TupleGetItem(func_805_call(relay.reshape(const_5211.astype('float64'), [4, 5, 6]), relay.reshape(const_5212.astype('float64'), [1536,]), ), 2)
call_5213 = relay.TupleGetItem(func_809_call(relay.reshape(const_5211.astype('float64'), [4, 5, 6]), relay.reshape(const_5212.astype('float64'), [1536,]), ), 2)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
call_5219 = relay.TupleGetItem(func_805_call(relay.reshape(const_5211.astype('float64'), [4, 5, 6]), relay.reshape(const_5212.astype('float64'), [1536,]), ), 1)
call_5220 = relay.TupleGetItem(func_809_call(relay.reshape(const_5211.astype('float64'), [4, 5, 6]), relay.reshape(const_5212.astype('float64'), [1536,]), ), 1)
func_1074_call = mod.get_global_var('func_1074')
func_1077_call = mutated_mod.get_global_var('func_1077')
var_5222 = relay.var("var_5222", dtype = "float32", shape = (6, 60))#candidate|5222|(6, 60)|var|float32
call_5221 = func_1074_call(relay.reshape(var_5222.astype('float32'), [5, 9, 8]))
call_5223 = func_1074_call(relay.reshape(var_5222.astype('float32'), [5, 9, 8]))
func_909_call = mod.get_global_var('func_909')
func_913_call = mutated_mod.get_global_var('func_913')
var_5234 = relay.var("var_5234", dtype = "float32", shape = (715,))#candidate|5234|(715,)|var|float32
call_5233 = relay.TupleGetItem(func_909_call(relay.reshape(var_5234.astype('float32'), [11, 5, 13]), relay.reshape(call_5219.astype('float64'), [1536,]), relay.reshape(const_5211.astype('float64'), [6, 20]), ), 6)
call_5235 = relay.TupleGetItem(func_913_call(relay.reshape(var_5234.astype('float32'), [11, 5, 13]), relay.reshape(call_5219.astype('float64'), [1536,]), relay.reshape(const_5211.astype('float64'), [6, 20]), ), 6)
output = relay.Tuple([bop_5189,call_5210,const_5211,const_5212,call_5219,call_5221,var_5222,call_5233,var_5234,])
output2 = relay.Tuple([bop_5189,call_5213,const_5211,const_5212,call_5220,call_5223,var_5222,call_5235,var_5234,])
func_5244 = relay.Function([var_5188,var_5222,var_5234,], output)
mod['func_5244'] = func_5244
mod = relay.transform.InferType()(mod)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mutated_mod.get_global_var('func_5244')
var_5246 = relay.var("var_5246", dtype = "float32", shape = (15, 15, 10))#candidate|5246|(15, 15, 10)|var|float32
var_5247 = relay.var("var_5247", dtype = "float32", shape = (6, 60))#candidate|5247|(6, 60)|var|float32
var_5248 = relay.var("var_5248", dtype = "float32", shape = (715,))#candidate|5248|(715,)|var|float32
call_5245 = func_5244_call(var_5246,var_5247,var_5248,)
output = call_5245
func_5249 = relay.Function([var_5246,var_5247,var_5248,], output)
mutated_mod['func_5249'] = func_5249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5810 = relay.var("var_5810", dtype = "float32", shape = (1, 8, 6))#candidate|5810|(1, 8, 6)|var|float32
uop_5811 = relay.cosh(var_5810.astype('float32')) # shape=(1, 8, 6)
output = uop_5811
output2 = uop_5811
func_5813 = relay.Function([var_5810,], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
var_5814 = relay.var("var_5814", dtype = "float32", shape = (1, 8, 6))#candidate|5814|(1, 8, 6)|var|float32
output = func_5813(var_5814)
func_5815 = relay.Function([var_5814], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5933 = relay.var("var_5933", dtype = "float64", shape = (3, 16, 11))#candidate|5933|(3, 16, 11)|var|float64
uop_5934 = relay.cosh(var_5933.astype('float64')) # shape=(3, 16, 11)
func_328_call = mod.get_global_var('func_328')
func_331_call = mutated_mod.get_global_var('func_331')
var_5943 = relay.var("var_5943", dtype = "float64", shape = (20,))#candidate|5943|(20,)|var|float64
var_5944 = relay.var("var_5944", dtype = "float64", shape = (1536,))#candidate|5944|(1536,)|var|float64
call_5942 = relay.TupleGetItem(func_328_call(relay.reshape(var_5943.astype('float64'), [1, 4, 5]), relay.reshape(var_5944.astype('float64'), [1536,]), ), 1)
call_5945 = relay.TupleGetItem(func_331_call(relay.reshape(var_5943.astype('float64'), [1, 4, 5]), relay.reshape(var_5944.astype('float64'), [1536,]), ), 1)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
call_5947 = relay.TupleGetItem(func_179_call(relay.reshape(var_5944.astype('float64'), [16, 12, 8])), 0)
call_5948 = relay.TupleGetItem(func_182_call(relay.reshape(var_5944.astype('float64'), [16, 12, 8])), 0)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
const_5955 = relay.const([-6.511515,-7.351243,8.811472,-1.026226,-0.406084,-5.877935,7.763930,0.098062,8.839563,-6.004017,1.806100,-6.441643,7.971625,-5.118009,1.091606,-2.865508,-4.400720,-3.285770,9.585911,-8.643296,6.005350,-1.046988,2.342471,8.669516,6.097356,-9.585364,-4.371322,-9.012452,-0.024266,-0.616222,-6.509053,-4.505111,3.179123,-9.962300,0.083634,1.448587,6.483845,9.328465,2.066263,8.717016,-1.766774,2.391059,0.630365,-3.804572,-1.736658,3.098352,4.439714,9.399214,2.426152,8.723772,-0.155980,9.715530,-1.078684,-5.581843,5.426589,-6.941461,-1.200191,-9.022432,7.997610,0.660577,6.618304,2.810648,-7.268493,-8.685002,-1.738963,-9.409797,-3.658586,2.105850,-8.156142,-1.431049,6.799005,8.467990,-5.245276,5.953371,-8.922766,2.109846,-5.873041,-7.692083,1.368111,-2.294596,-9.977776,-1.261554,-7.200978,0.626901,-1.659743,-4.028466,-4.960336,0.061691,-2.208141,7.372333,8.207712,-5.745727,0.548224,7.817614,2.376205,-2.347418,-5.713667,-2.545990,-4.841005,-3.240658,0.738381,4.674694,-0.261672,-7.738648,0.301262,-1.930390,-8.631905,-8.227729,4.499643,-5.809243,3.392746,4.655193,-6.083368,-7.961990,2.913545,1.570784,-2.670370,5.866946,8.654385,9.555024], dtype = "float64")#candidate|5955|(120,)|const|float64
call_5954 = relay.TupleGetItem(func_805_call(relay.reshape(const_5955.astype('float64'), [4, 5, 6]), relay.reshape(call_5947.astype('float64'), [1536,]), ), 0)
call_5956 = relay.TupleGetItem(func_809_call(relay.reshape(const_5955.astype('float64'), [4, 5, 6]), relay.reshape(call_5947.astype('float64'), [1536,]), ), 0)
output = relay.Tuple([uop_5934,call_5942,var_5943,var_5944,call_5947,call_5954,const_5955,])
output2 = relay.Tuple([uop_5934,call_5945,var_5943,var_5944,call_5948,call_5956,const_5955,])
func_5961 = relay.Function([var_5933,var_5943,var_5944,], output)
mod['func_5961'] = func_5961
mod = relay.transform.InferType()(mod)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5961_call = mutated_mod.get_global_var('func_5961')
var_5963 = relay.var("var_5963", dtype = "float64", shape = (3, 16, 11))#candidate|5963|(3, 16, 11)|var|float64
var_5964 = relay.var("var_5964", dtype = "float64", shape = (20,))#candidate|5964|(20,)|var|float64
var_5965 = relay.var("var_5965", dtype = "float64", shape = (1536,))#candidate|5965|(1536,)|var|float64
call_5962 = func_5961_call(var_5963,var_5964,var_5965,)
output = call_5962
func_5966 = relay.Function([var_5963,var_5964,var_5965,], output)
mutated_mod['func_5966'] = func_5966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6003 = relay.var("var_6003", dtype = "int16", shape = (10, 14, 8))#candidate|6003|(10, 14, 8)|var|int16
var_6004 = relay.var("var_6004", dtype = "int16", shape = (10, 14, 8))#candidate|6004|(10, 14, 8)|var|int16
bop_6005 = relay.logical_xor(var_6003.astype('int16'), relay.reshape(var_6004.astype('int16'), relay.shape_of(var_6003))) # shape=(10, 14, 8)
uop_6012 = relay.cosh(bop_6005.astype('float32')) # shape=(10, 14, 8)
uop_6018 = relay.sqrt(var_6004.astype('float64')) # shape=(10, 14, 8)
func_3322_call = mod.get_global_var('func_3322')
func_3324_call = mutated_mod.get_global_var('func_3324')
var_6039 = relay.var("var_6039", dtype = "float32", shape = (630,))#candidate|6039|(630,)|var|float32
call_6038 = relay.TupleGetItem(func_3322_call(relay.reshape(var_6039.astype('float32'), [9, 14, 5])), 0)
call_6040 = relay.TupleGetItem(func_3324_call(relay.reshape(var_6039.astype('float32'), [9, 14, 5])), 0)
func_3529_call = mod.get_global_var('func_3529')
func_3532_call = mutated_mod.get_global_var('func_3532')
var_6050 = relay.var("var_6050", dtype = "float64", shape = (847,))#candidate|6050|(847,)|var|float64
call_6049 = relay.TupleGetItem(func_3529_call(relay.reshape(var_6050.astype('float64'), [7, 11, 11])), 0)
call_6051 = relay.TupleGetItem(func_3532_call(relay.reshape(var_6050.astype('float64'), [7, 11, 11])), 0)
output = relay.Tuple([uop_6012,uop_6018,call_6038,var_6039,call_6049,var_6050,])
output2 = relay.Tuple([uop_6012,uop_6018,call_6040,var_6039,call_6051,var_6050,])
func_6054 = relay.Function([var_6003,var_6004,var_6039,var_6050,], output)
mod['func_6054'] = func_6054
mod = relay.transform.InferType()(mod)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6054_call = mutated_mod.get_global_var('func_6054')
var_6056 = relay.var("var_6056", dtype = "int16", shape = (10, 14, 8))#candidate|6056|(10, 14, 8)|var|int16
var_6057 = relay.var("var_6057", dtype = "int16", shape = (10, 14, 8))#candidate|6057|(10, 14, 8)|var|int16
var_6058 = relay.var("var_6058", dtype = "float32", shape = (630,))#candidate|6058|(630,)|var|float32
var_6059 = relay.var("var_6059", dtype = "float64", shape = (847,))#candidate|6059|(847,)|var|float64
call_6055 = func_6054_call(var_6056,var_6057,var_6058,var_6059,)
output = call_6055
func_6060 = relay.Function([var_6056,var_6057,var_6058,var_6059,], output)
mutated_mod['func_6060'] = func_6060
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6466 = relay.const([[[-0.605292,2.302295,-4.958890,-4.746467,-4.323123,2.490310,-7.085103,7.096559],[-7.348520,-8.030832,1.291356,9.601977,8.406750,-0.571305,-0.224503,1.003491],[-9.857173,2.066769,8.570406,2.394531,-8.831295,1.905384,5.252564,-8.148199],[-4.081993,5.363419,0.135796,0.606645,1.785023,-4.968179,-8.174351,5.735031],[-8.431878,7.795537,-0.232015,2.728763,0.965196,2.353580,1.805566,-9.440651],[3.341991,7.868548,9.036628,3.468749,7.094098,-7.942803,-8.331616,-6.064977],[1.216817,-7.707321,-3.443842,-3.243271,-7.637937,-1.904624,2.935858,5.932628],[6.766440,1.436686,-3.639351,4.842534,-4.591103,7.439652,9.074855,8.386071],[8.990345,0.013566,-9.125525,-6.480966,0.275451,-8.312200,4.966659,7.756490],[1.875475,6.588323,-5.795437,1.167767,8.529516,2.111215,-7.508924,5.532693],[-8.777291,3.450773,-8.868229,-2.345722,6.583950,-8.902317,-0.812091,9.082122]],[[-1.487830,9.658495,2.918482,2.107755,9.815838,-0.168021,9.892236,-4.471921],[-6.430326,-7.228240,0.841496,-3.591682,-7.452788,8.881201,6.909412,-9.855596],[-4.705473,-1.096131,-5.944163,-5.524735,-8.510692,5.030727,-5.368387,7.106387],[6.052353,4.830040,-9.581744,1.996691,-6.764268,-3.333053,0.862957,9.472225],[-7.072279,-2.012539,7.861923,3.036385,5.387071,0.037149,-2.568384,-5.677644],[1.026296,-1.738063,0.354135,-4.733821,-2.396936,0.952524,4.437902,4.451744],[-0.278185,-1.841573,-8.089782,2.734078,-3.447485,1.736710,-0.069781,-6.846741],[1.244903,7.337374,4.523096,-2.356897,-8.360382,6.855976,-2.419139,-1.055915],[-3.159078,-9.260824,-3.357860,-9.568893,8.236739,8.756865,5.201100,0.601539],[-7.551377,-0.746459,-9.336108,0.734422,-3.450066,-9.128462,-3.144886,-5.049910],[5.532284,4.292688,-8.022899,-9.723011,-4.361145,8.219007,5.967217,-6.968207]],[[-6.897460,2.650698,-4.493621,8.968575,-9.135429,8.425160,-8.027713,9.676272],[6.599396,9.841076,5.626672,5.350838,2.139081,1.495325,3.910772,-3.778203],[-2.692019,-1.163796,8.019770,-2.500595,9.385086,-8.920658,9.981773,6.510711],[-3.739596,-2.854368,-7.785387,9.916783,3.228775,-5.558102,6.509447,-2.107579],[6.212704,-4.133136,-0.814026,-9.571786,-1.489229,-5.472453,-9.957033,-6.310672],[-2.412921,-7.089561,-5.072989,2.201845,5.025112,-2.559135,-3.658362,-4.995905],[6.647008,-1.715773,1.071208,0.665120,3.886575,0.562027,1.316259,1.054123],[0.253450,-8.010033,1.674156,8.913511,-8.765385,1.664484,-1.204985,-0.892194],[-1.289157,3.133649,6.766183,-5.179632,-2.525572,-1.973522,2.035120,-3.184509],[-0.768038,2.214154,-2.064229,-9.118622,-9.440273,4.560141,1.188026,2.808088],[3.992560,-1.286985,5.544129,2.589911,-8.059607,-7.187552,1.774007,-0.544531]],[[4.305263,-3.597253,-2.398026,-4.500756,-0.084762,3.550990,0.560084,-9.780571],[-1.216464,6.809994,0.887012,5.966929,4.012717,0.830343,-9.248386,-4.604784],[7.016045,5.421845,5.505613,4.061397,-8.990669,5.968824,5.444566,-3.798600],[-1.611286,9.298821,-1.657443,-2.602764,-8.699389,5.051498,2.735811,4.765230],[-6.734749,6.423324,-9.033834,9.247037,0.569080,5.905111,-2.977797,-9.679289],[7.715390,-3.837381,7.749771,0.783929,1.074065,-0.426290,-8.231161,5.363244],[3.831274,-1.504398,6.490450,-4.302331,3.327399,2.434810,7.947627,-3.629382],[-4.726943,-8.588767,4.218516,8.505219,-0.306596,-1.431490,0.182831,6.288056],[-5.580286,0.356656,-5.425925,-1.284680,9.803759,1.128349,-3.702958,8.576121],[4.262386,-5.734193,-3.305843,1.183732,7.513242,7.148052,4.253906,0.873124],[2.695024,-8.195615,-6.983791,4.083847,-0.839744,-3.538598,-1.713763,9.790585]],[[-6.780685,8.849030,-1.374958,5.757565,-5.289307,-3.309350,-7.177527,9.168034],[-9.174071,7.959139,-5.582053,-5.147822,1.257927,5.089379,0.707683,5.816191],[-5.824270,-8.046896,9.199449,7.079193,-4.313045,-8.547988,8.313490,-1.799775],[6.312458,2.499407,-7.998602,-2.622971,-1.665701,-3.055163,7.452852,1.955942],[-6.964660,-5.406233,-9.919587,7.069144,2.545173,9.958365,7.628916,1.507762],[3.210290,-0.061363,-1.251034,9.949554,0.697330,-3.160624,-6.114401,-6.866066],[3.845757,-9.763578,-8.672676,3.752239,5.864659,1.568060,-8.064979,7.921187],[8.691003,-2.277699,0.594593,-5.758732,5.906513,1.455304,9.599010,-5.019110],[-6.818438,-1.839314,-8.313302,-6.722589,-0.099083,-0.818799,-6.795360,-5.079125],[0.740220,-1.064186,-3.426471,3.320956,5.574119,7.944032,2.266897,-7.010786],[3.920703,-8.035839,-7.186701,4.912998,-6.586280,9.716756,-4.521544,-1.158187]],[[-5.642768,-9.350730,-0.090400,-1.431300,-7.828895,-4.912628,1.894750,6.842884],[5.766588,-7.630007,-6.094417,-9.630590,4.798558,-2.617644,6.972138,-0.009362],[2.880123,-1.323189,-6.208419,6.679713,8.349278,-3.685105,-5.546344,2.739554],[-0.752267,2.235668,4.530769,7.277443,-9.051029,-1.813824,8.831425,3.636206],[6.736934,-7.240811,6.600237,-7.309052,3.478489,1.403665,-1.014438,5.659566],[5.555781,-1.230471,-8.736259,7.790358,3.618014,-4.113961,-5.228090,8.003474],[1.780433,-3.879573,8.196383,3.116082,0.929314,8.422676,5.389765,-6.434156],[4.669865,-4.939333,1.555897,-0.096034,1.533222,0.474597,5.728387,-9.109434],[-7.449187,4.667273,1.489292,-5.905382,0.233563,0.015534,-1.711592,1.139910],[-7.841102,2.196695,-4.144409,-8.814740,-2.488595,5.783144,-8.859742,-5.266571],[-7.069447,-6.822659,5.291483,7.286343,-1.838960,1.873701,-3.270481,6.824994]],[[-9.648250,-5.217004,-5.951675,2.641843,-8.459906,-2.200204,-8.580092,5.157330],[-2.571514,-5.150429,-2.627087,6.705458,-4.994402,6.132037,9.336222,8.055325],[3.477688,-8.157645,-9.635997,-2.922487,5.174909,8.639362,-2.153385,-3.766252],[1.590797,-3.759869,-5.470408,-1.405216,-8.625234,-8.033024,-2.111562,-5.331840],[5.567908,-7.913826,-2.010486,3.774143,1.738755,8.512262,7.402749,6.366120],[-6.644123,7.031406,8.554772,-4.084373,8.266346,1.700544,-5.224560,-4.683912],[3.632616,-3.787639,4.545216,1.860412,-8.168018,-5.562706,-4.655148,-1.643158],[4.799282,-3.028590,-2.786432,5.558469,5.329844,6.957676,-8.001044,3.130714],[-6.941294,9.320207,0.814009,8.569001,7.129289,-6.623357,8.285345,-5.431018],[-3.329674,4.516571,0.921860,-3.545022,5.041371,7.428566,8.733586,4.163037],[-3.791046,-8.854530,4.438959,3.765154,5.938857,5.309208,4.950902,-7.111246]],[[-5.920820,-2.770283,-1.026413,-8.041261,-7.422766,4.789400,-3.217985,-9.815339],[4.657095,3.502208,-4.437464,5.500109,-4.705726,-3.170951,-1.853840,0.698106],[-3.821672,7.160290,-0.743075,-3.806159,6.647306,0.331947,4.032917,-7.732837],[-6.038200,5.144658,-6.872594,-2.822583,2.801836,-9.448319,1.962793,-1.306086],[8.608240,-6.401961,7.946036,5.443702,-1.458023,8.783345,-7.904929,-3.307332],[4.504933,9.645242,-6.043227,-8.107727,-2.201042,-9.778572,-7.703525,4.867834],[-5.422934,1.799497,-0.446112,-4.266283,0.771623,-1.343054,0.678179,-2.120768],[8.636978,-3.129289,-9.326052,5.677047,-5.300463,-9.873740,4.508772,-0.227666],[-3.436571,8.814690,-9.142599,0.344103,6.969412,1.539320,6.946611,1.881139],[8.920081,-8.195438,-1.432275,-7.906566,3.129707,5.658617,-4.848158,-2.770354],[-2.561162,-1.641453,4.672762,-1.956387,1.046717,4.066022,-9.930511,3.064330]]], dtype = "float64")#candidate|6466|(8, 11, 8)|const|float64
uop_6467 = relay.log(const_6466.astype('float64')) # shape=(8, 11, 8)
func_5813_call = mod.get_global_var('func_5813')
func_5815_call = mutated_mod.get_global_var('func_5815')
var_6477 = relay.var("var_6477", dtype = "float32", shape = (48,))#candidate|6477|(48,)|var|float32
call_6476 = func_5813_call(relay.reshape(var_6477.astype('float32'), [1, 8, 6]))
call_6478 = func_5813_call(relay.reshape(var_6477.astype('float32'), [1, 8, 6]))
output = relay.Tuple([uop_6467,call_6476,var_6477,])
output2 = relay.Tuple([uop_6467,call_6478,var_6477,])
func_6481 = relay.Function([var_6477,], output)
mod['func_6481'] = func_6481
mod = relay.transform.InferType()(mod)
var_6482 = relay.var("var_6482", dtype = "float32", shape = (48,))#candidate|6482|(48,)|var|float32
output = func_6481(var_6482)
func_6483 = relay.Function([var_6482], output)
mutated_mod['func_6483'] = func_6483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6563 = relay.var("var_6563", dtype = "float64", shape = (7, 1, 9))#candidate|6563|(7, 1, 9)|var|float64
const_6564 = relay.const([[[2.657273,7.903785,1.183558,9.827618,2.199940,-0.853486,9.990584,5.841845,3.315438],[-6.287692,-4.400432,0.171354,6.155528,-5.745512,-1.125965,-6.399862,6.644284,2.899875],[-1.531287,-8.159048,-6.788391,-8.688752,-7.298180,-8.477363,-7.653043,-3.445156,-8.159188],[-3.149472,3.079342,-3.666779,-3.914032,3.538927,-6.001648,-6.212582,1.078736,4.429250],[-1.171239,0.275870,3.207787,-3.136152,-0.339082,3.482891,2.126667,7.294990,-1.649685],[-9.918981,-6.649472,-4.845705,4.394332,-0.529324,-3.747924,-4.602270,0.644284,1.042594],[-6.566571,-1.689364,0.926906,1.874345,8.133890,8.825986,2.736009,-8.130878,4.219819],[-6.150546,-0.060115,5.350646,-8.015609,3.259992,1.521454,6.953973,-3.291743,4.647548],[7.520367,-8.908735,7.506974,-2.418761,-8.723411,-2.058227,7.494797,-1.768303,5.735145],[-9.352244,5.790975,-9.262038,2.774283,-6.509147,1.388613,7.414765,4.132472,-4.877460],[2.089263,0.265270,5.252250,2.244448,-7.108905,-5.071213,3.293346,-8.386837,-6.258859],[7.060879,-4.492377,-3.552531,1.252897,-5.332342,6.124832,2.586617,5.593931,-9.001118],[9.874556,6.994481,3.471024,7.848108,8.486114,-6.848525,-1.406522,3.470701,1.652884],[3.296176,6.313250,6.116981,-4.648782,8.282685,5.727438,-8.020419,0.791849,2.302749],[-3.586158,5.006774,-3.097001,0.879345,6.834350,3.578726,-3.244050,-9.512238,-4.834771]],[[5.800958,-6.055310,-7.749221,-6.026373,-5.635119,-1.258962,6.300368,6.785762,-8.021030],[-6.314654,-1.470169,-0.935486,-7.863933,-8.053847,-6.950552,5.084468,1.301943,-9.234192],[0.087809,5.024922,-6.232032,1.368747,-7.294310,-2.974859,-5.825065,-4.456765,0.397873],[-6.243116,-2.866493,-2.339175,6.111593,-8.307754,7.903221,-0.354790,4.753674,2.130685],[-0.466061,5.211318,3.527001,0.050333,-4.140305,-5.437486,0.909161,-2.353331,-7.326531],[-4.948900,-2.937266,-6.941878,-6.245635,-5.347427,-0.668326,1.468290,2.759691,8.360738],[9.597071,-6.380348,2.920482,6.746559,-1.450616,-2.354867,-8.809236,-4.544032,0.789393],[-8.195497,-5.321895,3.653158,-6.523533,3.247679,-4.125644,-3.193167,6.702415,3.289302],[-6.003296,4.037752,-3.084750,4.274514,6.132765,7.760736,-0.842843,-6.738686,7.927159],[-2.270899,-1.192870,6.205068,-4.884055,-5.298073,-9.690334,-5.491988,-6.992545,5.979027],[7.760284,4.588437,9.975224,4.067855,9.039387,-3.065911,-6.071280,-3.055482,-2.887686],[4.142983,-0.006544,-1.302071,4.112730,3.990739,7.980788,6.033390,5.775254,8.660229],[9.441748,-1.399959,-6.920929,2.228447,2.948964,5.007411,6.787788,0.736614,1.965139],[1.364429,-3.357622,-2.155353,0.928718,3.424293,8.019579,1.798093,8.865110,5.681584],[-8.728063,-3.213534,-7.424612,3.486242,-1.361761,1.614609,3.450633,8.018899,3.610238]],[[2.294842,8.971170,1.984431,7.624629,8.614694,7.540834,-2.873111,-0.555898,0.894625],[-5.004590,-6.182472,2.548049,-1.799254,-9.853753,3.394951,-8.322845,1.220536,4.283896],[-0.971305,7.398393,3.627250,-3.921487,3.630548,1.645600,0.684574,3.513709,-7.134735],[-5.328932,9.872224,-7.798169,-8.253000,0.087641,-0.202715,2.414185,7.008069,9.482565],[0.559402,-9.745172,-4.297097,1.134682,-6.691333,4.425388,-6.382320,7.097334,1.923044],[-3.541379,-6.756178,7.563717,-0.825431,4.856003,7.379755,-8.737139,-0.532164,2.087594],[-6.441934,6.581803,-4.382788,-4.780174,-2.743598,-2.960605,1.932337,1.506928,4.052275],[9.845608,0.525912,5.225777,4.190451,9.513389,3.579789,-6.105112,-1.338128,-6.979524],[-1.151700,7.256954,-2.176389,-6.145834,-6.548106,-0.590397,-7.591449,5.132793,-8.690302],[3.723254,-9.828817,-6.368636,2.903369,-2.679853,-4.729827,-7.214423,0.986010,8.038472],[-8.634583,7.102799,7.196339,-5.409514,6.614560,-8.263018,-7.758813,3.605953,-5.052109],[-3.778948,-3.940845,0.850675,4.420218,-5.588239,2.798672,8.578790,3.912609,-7.557531],[-8.906534,3.779665,-8.964929,2.973953,5.139781,-6.888456,-6.907479,5.078144,5.502606],[0.230541,7.807672,0.434513,1.784727,-2.406108,0.447192,-3.040141,0.237051,-9.041412],[0.646919,-5.393976,-9.284174,-0.962006,-0.270137,-0.171056,3.237282,-4.950474,4.093465]],[[1.144841,-9.947342,5.521837,8.061136,7.411778,7.088598,-8.305578,-5.689924,4.335766],[6.777004,3.446492,-4.860928,8.645457,-5.612664,-5.011786,2.386282,-3.941425,7.648478],[-2.332084,4.829105,5.259459,1.582281,7.808929,-2.566028,-2.461470,9.513265,3.653849],[4.705748,6.857398,2.733209,8.596156,1.831087,-8.765070,-6.074104,9.019578,7.451677],[-3.581627,8.259629,-3.576746,0.125382,0.928851,-9.789361,-1.080442,-0.516408,6.976478],[0.406665,-2.715073,4.982771,3.976475,8.782496,3.664632,1.218284,5.656224,-5.908184],[-4.951132,5.015165,-5.476132,0.914225,2.752617,-4.604423,0.506055,-3.300014,-2.626112],[-2.305722,4.516678,8.513396,-1.498245,-6.283822,2.570434,6.830059,-2.639434,0.792283],[9.290652,8.254736,-5.672971,8.563401,4.459548,-0.799785,1.245637,8.261298,-5.986239],[-5.417416,3.539806,7.384854,1.401142,1.856390,1.625981,-4.396230,6.019191,1.591316],[2.014678,1.043028,-0.610211,-0.873293,-3.027631,-4.627243,-7.138308,-7.289608,-3.968958],[-5.540890,-4.510078,5.039228,0.073105,-8.951648,-2.787761,-4.888332,7.826961,-4.336435],[6.024190,5.958691,8.229477,2.313361,-8.915365,6.992325,3.712692,-4.507028,5.338383],[6.794217,6.185836,1.617400,8.606981,2.919103,8.337591,1.406661,6.765956,5.829360],[-8.985915,-0.108341,-4.956951,0.245875,-4.102570,9.913775,-7.245471,-1.693183,3.665023]],[[5.043906,5.144711,4.965182,-9.111988,-0.013347,0.374537,-1.658674,-9.215950,9.329333],[6.758732,-3.878619,-4.295393,6.594544,-9.444583,3.223084,-8.321720,-2.003308,4.450649],[-8.287558,-9.195568,4.454179,-7.279650,-6.850902,2.327501,1.102637,-7.554001,-9.655022],[-5.894874,8.043655,3.814540,-3.760061,5.348994,6.964677,-2.236067,9.987507,-6.030304],[-9.035949,-5.262973,1.749349,-5.511347,-7.318301,-2.516812,-0.780054,0.040572,6.008484],[-7.377510,-3.159329,0.696149,-9.802130,3.746774,-8.560650,9.624119,1.400231,9.496483],[0.165730,8.431402,5.624607,-4.736063,-0.161203,6.494160,-0.349995,8.170261,-7.785618],[-3.860702,-9.459910,-7.673130,-0.915967,-5.912347,4.489286,-3.209047,1.305137,0.802442],[-1.682311,-4.561013,1.923886,-2.250063,0.623884,-3.773391,-8.123946,4.528076,-3.443572],[-1.287646,9.425469,-0.254688,-9.816735,6.384334,6.694469,-2.748527,-3.050191,-7.862457],[7.101828,5.298066,7.492890,-0.701358,-2.663464,-9.072063,2.131960,3.012703,2.688376],[4.027789,4.155168,-4.583264,1.031698,-7.513982,1.473687,0.272531,5.295981,-6.428438],[-6.647725,4.308678,-5.497481,-7.009606,-2.974484,-7.926078,2.388672,5.650277,-5.415190],[3.443194,4.389581,2.375080,5.632658,0.897495,2.198048,5.834181,-4.181002,-0.427532],[-2.427015,-8.016340,1.402187,9.472645,-4.784107,7.548549,-1.661362,1.866443,-4.269109]],[[-2.628125,0.541667,-7.805396,6.882488,7.305187,-1.975563,-4.071955,-1.964347,0.048441],[2.136896,-9.852815,-3.955241,-7.166436,6.416924,-4.352918,-1.678767,1.001327,-7.776593],[-2.026170,7.080116,5.296729,-6.060580,-3.529686,-4.115293,-0.289690,-2.518290,3.579339],[-9.714985,4.635632,3.293965,3.395099,1.320992,-1.109690,-4.574419,4.371128,-2.834874],[-7.750108,8.721496,1.637421,-3.049763,5.240615,-5.832206,3.259530,4.468558,-8.776728],[-1.724736,-4.556610,-6.638722,8.290567,-4.431894,-3.823696,8.067294,0.998169,-3.342007],[-5.376811,-7.596671,7.415707,7.987511,6.046807,-1.765932,7.201201,2.461042,-8.641913],[-6.421779,-5.431154,-4.984253,0.288280,4.836881,-2.331712,7.196325,2.411876,6.928244],[9.507592,2.553251,0.919755,-4.283354,1.333719,-1.581885,-6.699191,5.432720,6.185266],[3.921349,-2.562222,4.719171,-3.035370,2.054012,-7.006227,2.988883,2.504518,-5.355033],[-0.132301,-0.606035,-3.009416,6.904863,3.071492,-9.971763,-6.192259,-8.523410,-0.449640],[-2.390475,-9.684792,-7.088957,-4.991591,-2.951638,0.856903,-4.973808,-0.458733,5.121398],[9.329783,4.696333,6.458879,-5.149948,7.763237,-7.678570,-1.794443,1.519891,5.785314],[-8.124231,8.576719,6.471800,5.734437,-5.881581,-7.969007,5.490597,-3.140957,5.716558],[-7.618192,9.665136,-7.205793,4.381585,-3.972358,4.800977,0.521323,1.373701,9.012134]],[[1.306423,-1.467935,-1.609558,5.844305,7.891754,-1.614061,3.013866,-8.316893,-7.614134],[9.480254,2.836138,-3.858627,6.571233,-9.542609,-0.850624,8.368701,8.829046,9.881756],[4.956520,7.024600,-2.906620,8.434568,-0.345022,8.214280,-0.688234,-6.286171,-3.624312],[-4.628408,-9.220144,8.360449,-6.956768,-8.282497,-1.077834,4.246050,-3.047315,-3.215012],[-3.439992,4.378368,9.593351,-0.627513,9.567058,-7.414543,1.793218,8.495984,0.867226],[4.977103,8.548472,8.202579,6.132886,5.138156,4.284913,9.507010,0.421842,-2.308595],[4.503126,-5.556104,-5.008507,-7.454330,-4.716134,5.554982,-1.680887,2.937206,4.761456],[-8.322480,-8.302151,-6.135813,9.083846,3.564564,-5.673016,-7.415678,-9.285132,-2.264882],[6.909202,3.636074,-2.208193,6.651331,7.027382,1.079151,-4.383404,2.054548,2.024991],[-9.278561,5.308454,-0.732395,-1.385856,1.565115,4.946914,7.069716,3.106660,-9.971102],[8.327844,-4.317627,9.083371,8.792395,1.931852,-7.862823,0.412577,-7.817982,-2.081693],[-3.206627,7.686861,-2.354936,-2.211518,5.790599,-5.213167,9.623008,1.753939,-1.213925],[2.715421,-1.847802,-4.940149,-9.446656,-2.055252,5.333891,2.164023,2.023343,9.449241],[4.079711,3.154803,7.596600,9.848027,7.163938,6.635047,7.997293,-7.045742,2.423497],[-7.462485,-5.078694,-4.526705,4.665275,5.846286,-0.617102,-9.648775,-6.177471,-8.820523]]], dtype = "float64")#candidate|6564|(7, 15, 9)|const|float64
bop_6565 = relay.mod(var_6563.astype('float64'), const_6564.astype('float64')) # shape=(7, 15, 9)
output = bop_6565
output2 = bop_6565
func_6568 = relay.Function([var_6563,], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
var_6569 = relay.var("var_6569", dtype = "float64", shape = (7, 1, 9))#candidate|6569|(7, 1, 9)|var|float64
output = func_6568(var_6569)
func_6570 = relay.Function([var_6569], output)
mutated_mod['func_6570'] = func_6570
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7015 = relay.var("var_7015", dtype = "float32", shape = (14, 7, 5))#candidate|7015|(14, 7, 5)|var|float32
uop_7016 = relay.sinh(var_7015.astype('float32')) # shape=(14, 7, 5)
uop_7029 = relay.log(uop_7016.astype('float32')) # shape=(14, 7, 5)
bop_7037 = relay.bitwise_or(uop_7029.astype('int16'), relay.reshape(uop_7016.astype('int16'), relay.shape_of(uop_7029))) # shape=(14, 7, 5)
func_1627_call = mod.get_global_var('func_1627')
func_1631_call = mutated_mod.get_global_var('func_1631')
const_7043 = relay.const([-8.485521,5.805570,3.365060,1.538354,-1.313081,-3.621115,0.153224,3.024008,-4.043705,-5.406326,3.841641,-7.745722,7.279231,9.849050,-7.969697,-9.571510,-8.191863,-2.947392,6.520866,1.992933,1.409594,-3.570782,-3.259551,3.752170,1.270515,-6.253550,-8.055181,9.241389,5.050834,-8.853116,5.058723,-9.962616,-1.566574,2.090296,-4.822665,-7.053174,-4.871619,4.496638,-0.169091,-7.039579,-1.989174,8.901151,7.336302,8.445230], dtype = "float32")#candidate|7043|(44,)|const|float32
const_7044 = relay.const([[-6.925569,6.800136,-6.472727,-8.352529],[8.441823,9.425284,-5.864570,3.038443],[2.296278,1.034687,-6.078923,-2.509062],[3.883143,-4.896829,-1.207926,-1.289417],[1.046249,-8.567654,4.364022,-3.349563]], dtype = "float64")#candidate|7044|(5, 4)|const|float64
var_7045 = relay.var("var_7045", dtype = "float64", shape = (1536,))#candidate|7045|(1536,)|var|float64
call_7042 = relay.TupleGetItem(func_1627_call(relay.reshape(const_7043.astype('float32'), [1, 4, 11]), relay.reshape(const_7044.astype('float64'), [20,]), relay.reshape(var_7045.astype('float64'), [1536,]), ), 3)
call_7046 = relay.TupleGetItem(func_1631_call(relay.reshape(const_7043.astype('float32'), [1, 4, 11]), relay.reshape(const_7044.astype('float64'), [20,]), relay.reshape(var_7045.astype('float64'), [1536,]), ), 3)
output = relay.Tuple([bop_7037,call_7042,const_7043,const_7044,var_7045,])
output2 = relay.Tuple([bop_7037,call_7046,const_7043,const_7044,var_7045,])
func_7049 = relay.Function([var_7015,var_7045,], output)
mod['func_7049'] = func_7049
mod = relay.transform.InferType()(mod)
mutated_mod['func_7049'] = func_7049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7049_call = mutated_mod.get_global_var('func_7049')
var_7051 = relay.var("var_7051", dtype = "float32", shape = (14, 7, 5))#candidate|7051|(14, 7, 5)|var|float32
var_7052 = relay.var("var_7052", dtype = "float64", shape = (1536,))#candidate|7052|(1536,)|var|float64
call_7050 = func_7049_call(var_7051,var_7052,)
output = call_7050
func_7053 = relay.Function([var_7051,var_7052,], output)
mutated_mod['func_7053'] = func_7053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7195 = relay.var("var_7195", dtype = "int32", shape = (16, 16, 8))#candidate|7195|(16, 16, 8)|var|int32
const_7196 = relay.const([[[3,-8,2,-6,5,10,-5,10],[1,-3,-6,-2,10,2,8,7],[3,-10,7,7,-1,1,6,-3],[5,5,-6,-2,9,-6,5,10],[1,2,7,9,-8,3,-4,-10],[4,-10,-2,-9,-10,8,8,-3],[8,-8,7,-3,2,9,-4,-4],[-4,-9,1,-7,-2,-6,5,-1],[5,5,1,-6,-8,8,4,10],[-8,-6,8,-10,10,-3,5,7],[-7,9,2,2,8,2,2,2],[5,-1,-3,5,6,8,6,-1],[-8,1,-6,10,3,-8,5,6],[-9,-5,7,4,10,7,7,-8],[-6,5,-2,-6,8,-9,-5,5],[2,-4,9,-4,-2,-4,-7,-4]],[[-1,-7,-5,-7,8,-7,1,-6],[-9,-3,10,9,6,-3,-4,-8],[-7,8,-9,-6,-1,9,-5,6],[-7,4,4,-9,7,-3,-8,-7],[-5,8,10,-10,-9,2,4,-9],[4,-8,9,9,1,10,-5,6],[-2,4,2,-2,3,-6,1,-9],[1,5,7,9,-8,-7,5,-2],[10,10,2,-3,-7,3,4,-7],[9,6,-8,2,-1,-10,4,5],[10,6,-9,-6,-5,6,-8,4],[-5,-3,-3,-10,8,3,1,-4],[3,-2,8,-9,-4,-10,-8,-2],[-5,7,-4,4,-6,-3,-5,10],[8,10,-10,9,-4,8,5,4],[-9,-6,7,-6,-7,9,-8,9]],[[1,-2,-10,4,-9,-5,-6,-2],[1,9,-10,-10,6,10,-8,-7],[-10,-1,9,-4,2,3,-10,3],[5,-9,9,-3,-1,-8,-1,10],[-6,-2,8,3,5,6,-1,7],[4,-2,-7,9,-9,7,-4,3],[-9,4,1,7,-3,3,3,1],[-8,-2,9,3,8,10,-8,-1],[6,-4,1,4,4,8,-7,-7],[-2,-10,-2,-1,-4,2,3,-8],[-9,7,6,3,-9,9,2,1],[-7,-6,-5,-9,7,-2,7,1],[-4,5,10,-10,-9,-4,-5,4],[9,10,9,4,3,8,8,5],[8,2,7,6,10,-8,9,10],[-4,-4,2,-10,-6,6,-8,5]],[[-8,-3,-10,-3,-2,-9,3,-9],[-10,9,-4,8,7,-3,-2,8],[-7,6,-1,10,-10,-2,-6,9],[7,7,-6,1,-6,6,-5,1],[7,-1,-6,10,8,8,-7,10],[-4,-5,-2,2,1,8,-4,7],[-6,-10,9,-10,-3,1,-3,2],[-9,-8,3,1,-1,9,-7,9],[-5,10,8,-1,6,9,-4,-9],[-7,-6,-10,-4,5,6,-10,-9],[-3,-6,-7,-2,-8,4,-1,7],[-1,-2,-7,4,10,5,-7,4],[3,3,-7,-3,-5,9,2,-7],[8,-6,6,8,-1,3,-9,-8],[-6,-2,-3,10,-4,5,6,2],[9,-8,7,-10,-10,6,9,2]],[[4,-2,1,-6,-2,4,3,1],[-4,-9,-6,-1,4,-6,1,10],[-3,2,-4,-2,1,6,10,8],[-8,-4,5,-9,-1,2,4,-7],[6,-3,-8,-1,-9,-3,-4,-10],[7,7,9,3,-2,2,-10,-2],[-8,9,10,-7,6,-5,-10,-5],[10,2,-9,-9,-1,8,10,10],[-5,-6,-8,1,2,6,-2,10],[4,-1,-7,5,-1,-1,-3,1],[-1,-2,-9,-5,-2,4,4,7],[-5,1,9,4,-9,3,8,-1],[-4,-8,-9,-5,-3,-4,-2,-5],[9,1,-5,10,-9,-7,10,6],[10,-6,-8,-9,-9,-10,-6,-7],[4,-5,-2,3,9,-10,8,2]],[[1,-9,10,-4,3,-1,10,5],[8,4,-6,-3,7,-5,-1,-2],[-6,5,-1,4,-2,4,-3,-7],[3,-2,6,-6,-1,7,10,6],[2,-10,8,-8,1,2,5,6],[9,-6,3,10,-5,-6,8,-10],[3,5,6,-4,7,10,5,9],[3,-9,-9,2,7,10,-2,-8],[-10,10,10,10,8,-9,-5,-7],[4,-7,-6,-7,-9,-10,7,9],[5,-1,1,-2,3,-2,-8,9],[6,4,-6,-6,-10,-7,-6,-4],[4,-6,9,4,9,-2,-6,10],[-8,-3,-9,-1,-5,8,5,-4],[9,3,-10,-2,4,8,7,-1],[4,1,-3,4,1,1,4,-4]],[[-9,-1,-6,10,6,-10,-7,10],[-5,5,-3,7,-1,-9,-8,-9],[10,10,2,-5,-9,3,-10,-7],[4,-4,-3,1,3,-2,-3,-10],[1,-10,-9,3,-2,3,-9,-6],[6,-10,-2,6,8,-6,9,5],[-5,4,10,1,-6,-5,-9,-8],[4,6,6,1,8,-9,3,-6],[9,-4,7,-4,-2,-8,3,-7],[-3,-2,5,-6,-1,9,-9,4],[-6,8,4,8,10,-8,-3,9],[-10,-6,-2,-7,7,9,-2,3],[-1,-3,10,2,7,-4,-7,-6],[-2,9,5,1,3,-8,-2,2],[10,10,-7,4,2,-2,-1,-3],[9,10,-7,5,-10,-6,-4,8]],[[4,-5,-10,-4,-7,1,-3,10],[6,7,1,-5,7,-3,-10,2],[-1,-6,6,-3,-4,-10,9,-2],[-1,8,3,3,7,-10,9,2],[10,10,7,8,8,-2,-9,-1],[5,2,-5,9,-1,10,2,-9],[-1,10,-2,3,8,8,2,-8],[1,5,5,9,-3,-3,2,-7],[10,-2,8,4,-3,-1,-4,-1],[9,2,-10,-9,9,-7,-3,-5],[-4,7,4,-5,-8,1,-7,6],[8,1,8,-8,1,9,2,9],[10,-5,1,-1,-8,10,5,-3],[-3,-1,-4,9,6,1,1,3],[8,-6,-8,8,1,3,-6,-1],[3,-2,-10,-4,1,6,5,-3]],[[-5,-4,6,-1,1,-5,10,-8],[5,-10,10,-3,9,-3,9,9],[-5,-9,8,9,3,6,7,8],[3,9,2,-6,-1,5,-5,6],[-9,2,-4,-7,-3,2,-7,2],[-6,5,4,9,10,-7,-10,6],[5,-9,9,8,10,-1,-8,-9],[5,6,-5,5,1,-4,-5,2],[-10,-1,-6,-10,8,-5,6,5],[-8,-1,6,-2,-1,5,7,-6],[-8,-6,7,-3,7,3,10,7],[9,-2,-5,1,1,2,5,6],[8,-10,-8,-1,-8,2,-4,-7],[6,-9,6,-9,-8,-4,10,8],[2,2,-8,-8,-9,6,7,8],[5,-8,-7,-7,-9,-10,10,8]],[[6,3,3,2,-2,-5,4,-4],[-1,9,1,-5,-6,1,4,10],[-9,6,6,6,-8,9,-4,-2],[-7,-3,8,1,6,2,1,-4],[8,-2,9,2,-9,-3,4,-8],[-8,-1,2,2,4,-1,-9,3],[4,2,5,3,7,-7,-1,3],[-7,-8,8,8,-8,-7,4,6],[9,-3,4,-8,-4,-3,1,6],[2,-8,8,4,-7,-4,-5,8],[10,10,-7,-4,-7,-6,3,-8],[-8,9,6,-3,-8,-1,7,9],[-1,1,9,-9,-2,-7,-6,4],[-3,1,8,-2,3,1,5,9],[-1,1,6,8,-4,-7,-10,-8],[5,4,-5,10,-2,-8,-3,10]],[[-7,-5,3,-3,10,9,10,-5],[-9,8,5,-2,1,3,-8,9],[6,-10,-1,5,-2,1,4,-9],[-7,8,9,9,1,5,5,-7],[-9,-9,10,10,-10,6,-9,8],[-3,7,6,1,10,-7,9,-5],[10,9,-7,2,1,3,2,-7],[-8,7,2,1,6,-6,-3,5],[4,5,-2,1,4,5,-5,-3],[7,-9,9,-3,-10,-10,-4,10],[9,-9,2,-8,4,-2,-6,-2],[-4,5,2,8,9,-7,-3,10],[2,-6,-9,-1,-6,2,8,8],[-6,7,1,10,-3,2,3,9],[1,-10,-8,5,-3,-9,-4,5],[7,8,5,-7,-4,-4,1,6]],[[9,-4,6,4,-8,-2,-9,2],[9,6,-7,-2,-2,-2,2,-4],[-4,9,-8,9,7,8,-8,-3],[-10,1,-2,10,9,-4,8,1],[8,1,-4,-2,2,8,2,-7],[10,10,8,3,-10,10,9,-1],[3,3,-2,2,-6,-4,-2,9],[-8,4,-6,5,6,-7,7,1],[8,9,8,-6,2,1,2,5],[-8,3,-6,4,-4,-6,-7,-10],[1,-8,1,-1,3,-4,-3,-2],[8,7,-6,3,-1,10,7,4],[-9,7,6,2,2,-4,-7,-8],[-6,6,-5,3,-1,4,10,8],[-10,-1,4,6,1,3,-10,2],[5,9,10,-7,-2,-9,-1,-4]],[[-3,-9,-8,5,9,-7,8,-5],[9,4,-4,10,-4,-10,7,7],[-9,-7,3,8,9,-9,7,1],[-7,-7,5,-7,-8,5,-1,7],[9,10,-7,4,-4,-2,-8,-10],[7,-6,-7,-3,-1,4,9,3],[9,-1,-2,2,-7,-10,9,-8],[7,1,8,-1,-2,-1,8,10],[9,-4,6,8,2,8,6,-2],[-1,-9,6,-8,-6,-1,4,2],[3,-4,-3,10,-10,9,-6,1],[3,-6,3,-9,-4,-5,-10,-6],[4,9,2,-3,10,8,-4,-3],[2,-5,-5,4,-5,-2,8,7],[7,1,9,-2,7,-5,3,-5],[-9,-10,7,8,4,6,-5,8]],[[-10,1,-3,10,-7,9,5,4],[6,-2,9,6,7,7,-4,-4],[-4,-6,2,-4,-1,8,9,-1],[6,-10,3,-8,8,2,2,8],[5,-10,-10,-5,-9,6,-4,5],[-2,5,-2,6,10,-2,6,-8],[-6,7,5,6,4,6,-10,-10],[-7,-6,1,9,-1,-4,10,9],[10,-1,-9,-3,-6,-5,-1,9],[-1,6,-8,-3,-5,8,-1,-1],[-5,10,-9,9,3,4,-8,-1],[-9,-10,2,-7,-4,-2,2,-6],[8,-10,-8,-2,2,2,-10,-8],[-9,-7,-6,8,7,-3,-5,-5],[4,10,2,-2,10,4,-8,-9],[3,-10,10,8,-7,-8,1,-5]],[[-7,-8,9,-5,3,-8,-4,-10],[3,-7,-9,10,-8,-10,10,-6],[2,-9,-2,-1,6,10,6,-8],[-1,2,1,-7,10,10,3,-8],[9,-8,-2,8,8,-5,-7,3],[-9,9,7,-9,-1,7,-4,-3],[-2,4,1,9,9,6,-8,-5],[6,-7,7,-9,4,4,-1,-10],[9,-7,7,10,2,3,6,9],[9,-4,1,-7,-1,4,10,-7],[10,-9,-9,-5,6,-5,4,-2],[-9,3,2,-6,3,-7,5,-1],[-7,4,-9,9,4,8,9,3],[8,9,-8,-3,4,-3,3,4],[4,5,4,9,-9,8,-8,-7],[8,6,-2,6,-10,-5,-3,-2]],[[8,2,-3,-1,-7,2,1,2],[5,5,9,-3,2,-4,10,2],[5,-1,-5,3,-1,-9,-4,4],[-1,9,2,-2,2,9,-4,-10],[-7,7,1,-5,-3,-7,-7,8],[-1,9,9,-8,-7,-2,10,-10],[-1,8,-7,8,-7,-8,-7,-2],[3,2,1,4,-10,1,-6,-6],[7,1,-7,5,4,-8,-2,-9],[-2,-1,-4,-2,-9,2,-3,-4],[-4,-4,4,5,-5,-10,3,-5],[2,-7,1,9,-2,9,1,6],[10,6,-1,3,4,-6,5,-2],[-9,3,2,-2,-5,2,4,-3],[9,-8,10,8,-7,1,-10,-8],[5,9,-3,2,1,6,-1,10]]], dtype = "int32")#candidate|7196|(16, 16, 8)|const|int32
bop_7197 = relay.right_shift(var_7195.astype('int32'), relay.reshape(const_7196.astype('int32'), relay.shape_of(var_7195))) # shape=(16, 16, 8)
var_7206 = relay.var("var_7206", dtype = "int32", shape = (16, 16, 8))#candidate|7206|(16, 16, 8)|var|int32
bop_7207 = relay.equal(bop_7197.astype('bool'), relay.reshape(var_7206.astype('bool'), relay.shape_of(bop_7197))) # shape=(16, 16, 8)
func_6568_call = mod.get_global_var('func_6568')
func_6570_call = mutated_mod.get_global_var('func_6570')
var_7213 = relay.var("var_7213", dtype = "float64", shape = (63,))#candidate|7213|(63,)|var|float64
call_7212 = func_6568_call(relay.reshape(var_7213.astype('float64'), [7, 1, 9]))
call_7214 = func_6568_call(relay.reshape(var_7213.astype('float64'), [7, 1, 9]))
func_7049_call = mod.get_global_var('func_7049')
func_7053_call = mutated_mod.get_global_var('func_7053')
var_7220 = relay.var("var_7220", dtype = "float32", shape = (490,))#candidate|7220|(490,)|var|float32
var_7221 = relay.var("var_7221", dtype = "float64", shape = (1536,))#candidate|7221|(1536,)|var|float64
call_7219 = relay.TupleGetItem(func_7049_call(relay.reshape(var_7220.astype('float32'), [14, 7, 5]), relay.reshape(var_7221.astype('float64'), [1536,]), ), 2)
call_7222 = relay.TupleGetItem(func_7053_call(relay.reshape(var_7220.astype('float32'), [14, 7, 5]), relay.reshape(var_7221.astype('float64'), [1536,]), ), 2)
func_5813_call = mod.get_global_var('func_5813')
func_5815_call = mutated_mod.get_global_var('func_5815')
const_7224 = relay.const([-9.654808,9.533011,-2.317619,6.993973,-3.220613,-2.595868,0.813129,2.898092,7.856103,8.367520,7.067664,1.406002,-8.273129,-6.855755,-9.689236,-4.623590,1.780844,-1.510287,0.290373,-9.915115,-0.814779,-5.426277,0.960613,1.062765,-6.270430,3.107058,0.068033,-7.752238,9.807796,3.592150,6.992457,6.468331,-9.930347,-3.252974,5.999375,7.207786,9.887668,5.582267,9.096745,-5.046477,-4.948731,-9.770271,-1.902238,5.051200,4.688532,8.733168,-2.026829,0.545090], dtype = "float32")#candidate|7224|(48,)|const|float32
call_7223 = func_5813_call(relay.reshape(const_7224.astype('float32'), [1, 8, 6]))
call_7225 = func_5813_call(relay.reshape(const_7224.astype('float32'), [1, 8, 6]))
func_1139_call = mod.get_global_var('func_1139')
func_1142_call = mutated_mod.get_global_var('func_1142')
const_7232 = relay.const([4,4,-9,6,-1,6,-3,-10,9,-10,-1,6,-7,-4,-1,-7,-6,2,3,9,-8,-4,8,-1,9,10,8,-9,8,-2,-6,-3,-1,8,-2,9,-4,2,8,-8,3,-6,3,-8,9,-1,10,-5,-8,6,-2,1,10,7,-7,7,-3,2,10,-9,9,-2,-4,9,-2,4,-2,9,8,-1,10,-4,-3,-1,8,2,1,-6,2,1,-4,9,9,7,-3,4,-6,-8,-7,-2,10,4,-7,-8,-8,5,3,-8,-4,-2,5,2,-6,-2,9,10,7,1,-4,5,8,-6,5,-5,-2,6,5,-1,-8,6,7,7,7,8,-8,5,-2,-9,8,-6,1,8,-9,6,9,7,7,-2,1,-8,-2,5,8,2,7,4,1,-5,10,10,-3,-7,-10,-7,-8,1,9,-5,1,-1,-7,-8,9,-1,-5,10,7,-10,-4,-1,1,-2,10,-7,9,1,7,6,-1,6,-7,5,2,2,-2,10,-5,-4,-4,-9,-1,8,-10,-3,-1,-8,-3,-2,-8,-3,-5,2,7,-8,8,-1,6,6,-6,-6,8,-3,6,-10,-10,-3,-7,-7,-4,3,-2,1,-8,5,-6,8,6,-4,9,-7,6,3,6,8,-7,-1,9,-9,7,-8,-7,-6,2,-7,6,7,3,-7,-4,-10,8,-1,1,2,6,-2,10,9,-8,10,-8,5,-1,-4,-7,-5,6,-2,6,7,-5,8,-5], dtype = "uint64")#candidate|7232|(273,)|const|uint64
const_7233 = relay.const([1.984396,4.193580,-6.234444,2.167840,-4.575453,-7.605265,6.122346,-6.224817,1.063165,-6.484247,8.460174,-0.102197,9.795793,1.761629,4.133626,-3.608630,-7.761706,-3.973323,-2.460763,9.293901], dtype = "float64")#candidate|7233|(20,)|const|float64
call_7231 = relay.TupleGetItem(func_1139_call(relay.reshape(const_7232.astype('uint64'), [13, 7, 3]), relay.reshape(const_7233.astype('float64'), [20,]), ), 6)
call_7234 = relay.TupleGetItem(func_1142_call(relay.reshape(const_7232.astype('uint64'), [13, 7, 3]), relay.reshape(const_7233.astype('float64'), [20,]), ), 6)
output = relay.Tuple([bop_7207,call_7212,var_7213,call_7219,var_7220,var_7221,call_7223,const_7224,call_7231,const_7232,const_7233,])
output2 = relay.Tuple([bop_7207,call_7214,var_7213,call_7222,var_7220,var_7221,call_7225,const_7224,call_7234,const_7232,const_7233,])
func_7237 = relay.Function([var_7195,var_7206,var_7213,var_7220,var_7221,], output)
mod['func_7237'] = func_7237
mod = relay.transform.InferType()(mod)
mutated_mod['func_7237'] = func_7237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7237_call = mutated_mod.get_global_var('func_7237')
var_7239 = relay.var("var_7239", dtype = "int32", shape = (16, 16, 8))#candidate|7239|(16, 16, 8)|var|int32
var_7240 = relay.var("var_7240", dtype = "int32", shape = (16, 16, 8))#candidate|7240|(16, 16, 8)|var|int32
var_7241 = relay.var("var_7241", dtype = "float64", shape = (63,))#candidate|7241|(63,)|var|float64
var_7242 = relay.var("var_7242", dtype = "float32", shape = (490,))#candidate|7242|(490,)|var|float32
var_7243 = relay.var("var_7243", dtype = "float64", shape = (1536,))#candidate|7243|(1536,)|var|float64
call_7238 = func_7237_call(var_7239,var_7240,var_7241,var_7242,var_7243,)
output = call_7238
func_7244 = relay.Function([var_7239,var_7240,var_7241,var_7242,var_7243,], output)
mutated_mod['func_7244'] = func_7244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7334 = relay.var("var_7334", dtype = "float32", shape = (9, 8, 3))#candidate|7334|(9, 8, 3)|var|float32
uop_7335 = relay.log10(var_7334.astype('float32')) # shape=(9, 8, 3)
output = uop_7335
output2 = uop_7335
func_7348 = relay.Function([var_7334,], output)
mod['func_7348'] = func_7348
mod = relay.transform.InferType()(mod)
var_7349 = relay.var("var_7349", dtype = "float32", shape = (9, 8, 3))#candidate|7349|(9, 8, 3)|var|float32
output = func_7348(var_7349)
func_7350 = relay.Function([var_7349], output)
mutated_mod['func_7350'] = func_7350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7352 = relay.var("var_7352", dtype = "bool", shape = ())#candidate|7352|()|var|bool
const_7353 = relay.const([[[True,False,False,True,True,True,True,False,False,False],[True,True,True,True,False,True,False,False,True,False],[True,False,False,True,False,True,False,False,True,True],[False,True,True,False,False,False,True,True,True,True],[True,False,False,True,True,True,False,True,True,False],[False,False,False,False,True,False,True,False,True,False],[True,True,True,True,False,True,True,True,True,False],[True,False,False,True,True,False,False,False,True,True],[False,True,True,False,True,True,False,False,True,True],[True,False,True,False,True,True,False,True,False,True],[True,True,True,False,True,True,False,True,True,True],[True,True,True,False,True,False,True,True,True,False],[True,False,True,False,False,False,True,False,True,True],[True,True,True,True,True,False,False,True,True,True],[False,False,False,True,True,True,False,False,False,True]],[[True,True,True,False,True,True,False,False,False,False],[False,True,True,True,False,False,True,False,True,False],[True,True,True,True,True,False,False,True,False,True],[False,True,False,True,True,False,False,False,False,False],[False,False,False,True,True,False,True,False,True,False],[True,False,True,False,False,False,False,False,True,False],[True,True,False,False,False,True,False,True,True,False],[True,True,True,True,False,False,False,True,True,True],[True,False,True,True,False,True,True,False,False,True],[False,True,False,False,True,True,False,True,False,True],[False,True,True,True,True,True,True,True,True,False],[False,False,False,True,True,False,True,True,False,True],[False,True,False,False,True,False,True,True,True,True],[True,True,True,False,False,False,True,False,True,False],[False,True,True,True,False,False,True,True,True,False]],[[False,True,True,True,False,False,True,True,False,False],[True,True,False,False,True,False,False,False,False,True],[True,True,False,False,False,False,False,True,False,False],[True,False,True,False,True,True,True,False,True,True],[True,False,False,True,False,True,True,False,True,False],[True,False,True,True,False,True,True,True,False,True],[True,False,False,False,False,True,False,True,False,True],[False,True,True,False,False,True,True,True,True,True],[True,False,True,False,True,False,True,False,True,False],[False,False,False,False,False,False,True,False,False,True],[True,False,False,False,True,False,True,False,False,False],[True,True,False,True,False,True,True,True,False,False],[True,False,False,True,False,False,False,True,True,False],[True,False,False,True,True,True,False,False,False,False],[True,True,True,True,False,True,True,True,True,True]],[[True,False,True,True,False,True,False,False,False,True],[False,True,True,False,True,False,False,True,True,False],[True,False,True,False,True,False,False,False,True,True],[True,True,True,False,False,True,True,False,True,False],[True,True,True,True,False,False,True,False,True,False],[False,False,False,True,True,False,True,True,False,True],[False,False,False,True,False,False,True,False,True,False],[False,False,False,True,True,False,False,True,False,True],[True,False,False,False,True,True,False,True,False,False],[False,False,False,False,True,True,False,False,True,True],[True,True,False,True,False,True,True,False,False,True],[False,False,True,False,False,False,True,False,True,True],[False,True,True,True,True,False,False,False,True,True],[True,False,False,True,True,False,True,False,True,True],[True,True,True,False,True,True,False,False,True,False]],[[True,False,True,False,True,True,False,True,True,True],[False,False,True,False,False,False,False,True,False,True],[False,True,False,False,True,True,True,False,True,True],[False,False,True,True,False,False,False,True,True,True],[False,True,False,False,True,False,False,True,True,True],[True,True,False,True,True,False,True,True,False,False],[False,False,True,True,True,True,True,False,False,False],[True,True,True,True,True,False,True,True,True,False],[False,False,False,True,False,True,True,True,False,True],[True,False,True,False,True,False,False,False,False,False],[False,False,True,True,True,False,True,True,False,True],[True,False,True,True,True,True,True,False,False,True],[True,False,False,False,False,True,True,False,False,True],[True,False,True,False,False,True,True,True,False,True],[False,True,True,False,True,True,True,False,True,False]],[[True,True,False,True,True,False,True,False,True,True],[False,False,True,True,False,True,False,True,True,False],[False,True,False,False,True,True,True,True,True,False],[True,False,True,True,False,True,True,True,True,False],[False,True,False,True,True,True,True,True,False,False],[False,True,True,False,True,True,True,False,False,False],[False,True,False,False,False,False,True,True,True,False],[False,True,False,False,True,True,True,False,False,False],[False,False,True,True,False,False,False,True,False,False],[True,False,True,False,False,True,False,True,True,False],[False,True,True,False,True,False,True,True,False,True],[True,False,False,False,False,False,False,False,False,False],[True,True,False,False,True,True,False,False,False,True],[False,False,False,True,False,True,False,True,False,False],[True,True,True,True,True,True,True,True,True,True]],[[True,False,True,False,True,False,True,True,False,True],[False,False,False,False,False,False,True,False,False,False],[False,True,True,True,False,True,False,True,False,False],[True,False,False,False,False,True,False,True,False,True],[False,False,True,False,False,True,True,False,True,True],[False,False,False,True,True,False,False,False,True,True],[False,False,True,False,False,True,False,True,False,False],[False,False,True,True,True,True,True,False,True,False],[True,True,False,True,True,False,True,True,False,False],[False,False,True,True,False,True,False,False,False,False],[True,False,True,False,False,False,True,True,False,True],[True,True,False,False,False,True,False,True,True,False],[True,True,False,False,True,False,False,True,True,False],[False,False,True,True,False,True,True,True,False,True],[False,True,False,True,True,False,False,True,True,True]],[[True,False,True,True,True,False,False,True,True,True],[True,True,True,False,False,True,True,True,False,True],[False,True,True,False,False,False,False,False,False,True],[False,True,False,True,True,True,True,True,False,False],[False,True,False,True,False,False,False,True,False,False],[True,False,True,False,True,True,False,True,False,False],[True,False,False,True,True,True,False,False,False,False],[False,False,True,False,True,True,True,True,True,True],[True,False,True,True,False,False,False,False,False,False],[True,True,False,True,False,True,False,False,True,False],[False,False,False,True,False,True,True,True,False,False],[False,True,False,False,False,False,False,True,False,False],[True,True,True,False,False,True,True,False,True,True],[False,True,True,False,True,True,True,False,True,True],[False,True,True,False,True,True,False,False,False,False]],[[False,False,False,False,False,False,True,True,True,True],[False,True,False,True,False,True,True,True,True,False],[True,True,True,False,True,True,True,True,True,False],[False,True,False,False,True,False,False,True,True,True],[False,False,True,False,True,True,False,False,False,True],[False,True,True,False,True,False,True,True,False,False],[True,False,True,True,False,True,True,False,False,False],[False,False,False,True,False,False,False,False,False,False],[False,True,False,True,True,True,True,False,False,True],[False,True,True,True,False,True,False,True,False,False],[False,False,False,False,True,True,False,True,True,True],[True,True,False,True,False,True,True,False,True,True],[True,True,True,True,False,True,False,True,True,False],[True,True,False,False,True,True,True,False,False,False],[True,False,False,True,True,False,False,False,False,True]],[[False,False,False,True,True,False,False,True,True,True],[False,True,False,False,True,False,False,False,False,False],[False,True,False,False,False,False,True,False,False,True],[True,False,True,True,True,False,True,False,False,True],[True,False,False,False,False,True,False,False,True,False],[True,True,True,True,False,True,True,True,True,False],[False,False,False,False,True,False,False,False,False,False],[True,True,False,True,True,True,False,True,True,True],[True,False,True,False,False,True,True,True,False,False],[True,False,False,False,False,True,False,True,False,False],[True,True,True,False,True,True,True,True,False,False],[True,False,True,False,False,True,True,False,False,True],[False,False,True,True,False,False,False,False,True,False],[False,False,False,True,False,True,False,True,False,True],[False,True,True,True,True,True,False,False,True,False]],[[True,False,False,True,True,False,True,True,False,False],[False,False,False,False,False,True,True,False,False,True],[True,False,True,False,True,False,False,True,True,True],[False,False,True,False,True,False,True,False,False,True],[False,False,False,True,False,False,False,True,False,False],[False,False,True,True,False,False,False,False,False,True],[False,False,True,True,False,True,False,True,True,False],[True,False,False,True,True,False,True,True,True,True],[True,True,True,False,True,False,True,True,False,True],[False,False,True,True,False,True,False,False,True,False],[False,False,False,False,True,True,False,False,False,True],[True,True,False,True,False,True,True,True,False,True],[False,False,False,True,False,False,False,False,False,True],[False,False,True,False,False,False,True,False,False,True],[True,False,True,True,True,True,True,False,False,True]],[[True,False,False,True,True,False,True,True,False,True],[True,True,True,False,True,True,True,True,True,True],[False,False,True,True,False,False,False,True,False,False],[False,False,False,False,True,True,False,True,True,True],[False,False,False,False,False,True,True,True,False,True],[True,True,True,False,False,True,True,True,False,True],[True,True,True,False,True,True,True,False,False,False],[True,False,False,True,False,True,False,False,False,True],[True,True,False,False,False,False,False,True,True,False],[False,True,True,False,True,True,True,False,True,True],[True,False,True,True,True,False,False,True,False,True],[False,True,False,False,True,False,True,True,True,False],[False,False,True,True,False,False,False,True,True,True],[False,False,True,True,True,False,True,False,False,True],[True,False,False,True,True,False,False,False,True,True]],[[False,True,True,False,True,True,False,True,False,True],[True,False,True,False,False,True,True,True,True,True],[True,False,True,True,True,False,True,True,False,True],[True,True,False,False,True,True,False,True,True,False],[True,False,True,False,False,True,True,True,False,False],[False,True,False,False,True,False,False,False,True,True],[True,False,False,False,True,True,True,True,False,False],[True,True,False,False,False,True,True,True,False,False],[False,True,True,False,True,False,False,True,True,False],[False,False,False,False,False,True,True,False,False,False],[False,False,True,True,False,True,False,False,True,False],[False,True,True,True,True,False,False,False,False,True],[False,False,True,False,True,False,False,False,False,False],[False,False,False,False,True,True,True,True,True,False],[False,True,True,True,False,True,False,False,True,False]],[[True,True,False,True,True,True,True,True,False,True],[False,False,True,False,False,True,True,False,False,False],[False,False,True,False,False,False,True,False,False,False],[False,False,True,False,True,False,False,False,False,False],[True,False,False,False,False,True,True,False,True,False],[False,True,False,False,True,False,False,False,False,False],[False,False,False,True,True,True,False,True,True,False],[True,False,False,True,True,False,False,False,False,True],[False,True,True,True,True,False,True,True,True,False],[True,True,False,False,True,True,True,True,False,True],[True,True,True,True,True,False,True,True,True,False],[True,True,True,False,False,False,False,False,True,True],[False,False,True,False,False,False,False,False,True,False],[True,False,False,False,True,True,True,False,False,False],[False,True,True,True,True,False,True,False,False,False]],[[True,False,True,False,False,True,False,False,True,True],[True,False,True,True,True,False,False,False,True,False],[False,True,False,True,True,True,True,False,True,True],[True,True,True,False,True,False,True,False,False,True],[True,True,True,True,False,False,True,False,False,False],[True,False,False,True,False,True,False,True,True,False],[True,False,True,False,False,False,False,False,False,True],[True,False,False,False,True,True,True,False,True,True],[True,False,False,True,True,False,False,False,True,True],[False,False,False,True,True,False,True,True,False,False],[False,True,False,True,False,True,False,True,True,True],[False,False,False,False,True,True,False,True,True,False],[True,True,False,True,False,True,True,False,True,False],[False,True,True,False,False,True,True,False,False,False],[False,True,True,False,True,False,True,False,False,True]]], dtype = "bool")#candidate|7353|(15, 15, 10)|const|bool
bop_7354 = relay.logical_or(var_7352.astype('bool'), const_7353.astype('bool')) # shape=(15, 15, 10)
output = bop_7354
output2 = bop_7354
func_7359 = relay.Function([var_7352,], output)
mod['func_7359'] = func_7359
mod = relay.transform.InferType()(mod)
var_7360 = relay.var("var_7360", dtype = "bool", shape = ())#candidate|7360|()|var|bool
output = func_7359(var_7360)
func_7361 = relay.Function([var_7360], output)
mutated_mod['func_7361'] = func_7361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7955 = relay.var("var_7955", dtype = "float32", shape = (1, 14, 16))#candidate|7955|(1, 14, 16)|var|float32
var_7956 = relay.var("var_7956", dtype = "float32", shape = (1, 14, 16))#candidate|7956|(1, 14, 16)|var|float32
bop_7957 = relay.greater_equal(var_7955.astype('bool'), relay.reshape(var_7956.astype('bool'), relay.shape_of(var_7955))) # shape=(1, 14, 16)
output = relay.Tuple([bop_7957,])
output2 = relay.Tuple([bop_7957,])
func_7974 = relay.Function([var_7955,var_7956,], output)
mod['func_7974'] = func_7974
mod = relay.transform.InferType()(mod)
mutated_mod['func_7974'] = func_7974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7974_call = mutated_mod.get_global_var('func_7974')
var_7976 = relay.var("var_7976", dtype = "float32", shape = (1, 14, 16))#candidate|7976|(1, 14, 16)|var|float32
var_7977 = relay.var("var_7977", dtype = "float32", shape = (1, 14, 16))#candidate|7977|(1, 14, 16)|var|float32
call_7975 = func_7974_call(var_7976,var_7977,)
output = call_7975
func_7978 = relay.Function([var_7976,var_7977,], output)
mutated_mod['func_7978'] = func_7978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7999 = relay.var("var_7999", dtype = "float64", shape = (13, 9, 1))#candidate|7999|(13, 9, 1)|var|float64
uop_8000 = relay.sigmoid(var_7999.astype('float64')) # shape=(13, 9, 1)
func_1074_call = mod.get_global_var('func_1074')
func_1077_call = mutated_mod.get_global_var('func_1077')
const_8018 = relay.const([-3.719522,-4.449912,8.190729,-5.816539,6.105117,1.788688,3.689140,-5.960379,3.205804,-3.016019,8.328245,-1.798805,3.255225,8.388183,-1.028001,-7.976971,-7.364651,-2.600490,2.708846,-0.043730,6.753975,-7.277075,0.058130,-3.794407,0.116226,-3.778752,0.988493,3.048175,-8.869059,0.211742,2.496181,9.174453,-9.975559,4.507420,-8.540536,-4.324367,7.871401,-4.643010,-8.774328,6.949602,-7.892484,-8.956409,-3.435987,-4.310243,-1.219105,-9.601169,9.003569,8.907641,2.072831,9.438785,9.954001,9.832061,4.285631,3.639607,2.069695,3.157221,-5.790385,0.358132,-1.982313,7.381354,0.976987,-3.014308,4.954832,-6.331602,8.985154,4.147631,-3.694151,0.409686,-0.898987,7.710398,-6.413138,2.037403,-5.836641,4.945803,-3.636320,-4.754983,-8.766293,0.306901,-0.333150,2.828274,9.684259,-7.738031,6.265795,1.293866,2.817803,8.425158,-4.179450,-1.395219,2.381655,3.639054,8.828824,3.356304,-7.313210,8.915973,1.037101,-7.410596,3.581516,-1.653826,4.229972,5.078368,-6.630886,-2.395606,8.314909,8.534565,-3.374314,9.663433,-3.043462,-5.163203,2.093090,-9.601602,-2.206596,7.023979,0.962790,-5.571999,-1.881741,2.354254,1.330561,0.279870,7.122675,3.843445,7.363231,4.241884,-4.710656,-4.210195,2.441354,-0.822532,-7.579039,-2.751140,4.466006,-6.245793,-6.445366,-4.637834,4.720151,-9.173683,-6.962413,-3.598526,-3.550865,-6.322200,7.317591,-9.954081,9.671843,-7.584062,1.989374,6.669495,-3.798035,-6.181661,-9.141302,-0.756496,-8.317009,-6.255554,-3.424890,-4.534254,-0.231521,7.896724,3.311336,-5.106921,-6.908767,-7.389958,3.797927,-0.953663,0.703328,-1.819551,0.174639,0.951245,-1.277735,1.242598,8.188806,4.605801,-8.608103,2.410684,7.633227,-7.929940,5.971351,2.663419,-1.458466,-8.029323,-1.478009,7.803158,7.403951,6.119154,-2.890550,-3.300188,-7.664323,1.977652,3.807453,-0.468851,4.315935,-1.957064,-7.798846,1.131138,-0.906890,-6.274471,1.395983,-8.061669,9.166553,-1.138039,-2.351266,3.403099,-7.474702,5.441849,6.253552,-9.176548,-7.917631,6.172466,-1.585022,-6.818174,-2.227128,5.387225,-5.190412,-3.703241,3.695266,-9.768764,-7.164248,-5.096782,-7.733669,-8.534022,-9.492717,-0.525036,1.104217,9.765693,3.198532,-1.356943,-5.248606,0.786312,-9.569196,-6.257876,-6.203363,4.376059,-4.836231,5.479207,-6.343925,4.649669,0.763147,7.760459,1.600247,-0.493236,-7.145765,3.343442,9.695082,-4.683489,-2.930875,6.796213,8.787725,7.440727,8.185698,-0.873881,-7.544489,-7.718387,-7.559090,3.571514,-6.318115,-6.808133,-2.988567,2.334906,-5.937117,4.903951,5.127422,8.059600,-3.136027,-0.514554,9.257733,9.145191,-4.425376,1.504305,5.423946,9.052584,7.660279,4.228310,5.077111,9.498318,-3.490201,-7.897383,6.686074,-3.919189,4.135726,7.045833,5.290119,-8.190033,-6.441240,-3.096516,-3.531081,9.667068,1.744370,-9.789529,-2.082892,-5.484029,-5.086902,-4.331778,-6.042126,4.115112,8.285773,8.098044,1.956966,5.577313,2.945352,-0.216675,1.562292,0.870317,-4.658178,4.782324,3.649086,6.580892,-8.700064,-7.193042,-5.014614,-6.036203,-3.391317,-9.298812,-2.943832,-9.439466,-3.850445,5.332476,-3.360415,-6.676273,-7.603127,0.265645,-4.087686,-4.294753,-3.361901,2.841219,-7.590544,7.121281,1.027091,2.217027,6.110701,-0.639720,-3.388758,8.320057,-4.646082,4.123499,0.978263,3.742716,3.987687,-3.828718,-5.008340,-5.360303,-9.015057,9.410580,5.566500,5.624040,-1.739253,-1.629562,1.693100,-6.521198,-7.872078,6.760743,-9.214799,0.414970,-3.404800,-9.260422,4.415088,3.087598,-9.471685,-1.759416,5.853121,-2.074400,3.969864,-4.529416,-1.336340,-6.662303], dtype = "float32")#candidate|8018|(360,)|const|float32
call_8017 = func_1074_call(relay.reshape(const_8018.astype('float32'), [5, 9, 8]))
call_8019 = func_1074_call(relay.reshape(const_8018.astype('float32'), [5, 9, 8]))
func_4724_call = mod.get_global_var('func_4724')
func_4727_call = mutated_mod.get_global_var('func_4727')
const_8024 = relay.const(-2, dtype = "uint64")#candidate|8024|()|const|uint64
var_8025 = relay.var("var_8025", dtype = "uint64", shape = (1584,))#candidate|8025|(1584,)|var|uint64
call_8023 = func_4724_call(relay.reshape(const_8024.astype('uint64'), []), relay.reshape(var_8025.astype('uint64'), [11, 12, 12]), )
call_8026 = func_4724_call(relay.reshape(const_8024.astype('uint64'), []), relay.reshape(var_8025.astype('uint64'), [11, 12, 12]), )
output = relay.Tuple([uop_8000,call_8017,const_8018,call_8023,const_8024,var_8025,])
output2 = relay.Tuple([uop_8000,call_8019,const_8018,call_8026,const_8024,var_8025,])
func_8033 = relay.Function([var_7999,var_8025,], output)
mod['func_8033'] = func_8033
mod = relay.transform.InferType()(mod)
var_8034 = relay.var("var_8034", dtype = "float64", shape = (13, 9, 1))#candidate|8034|(13, 9, 1)|var|float64
var_8035 = relay.var("var_8035", dtype = "uint64", shape = (1584,))#candidate|8035|(1584,)|var|uint64
output = func_8033(var_8034,var_8035,)
func_8036 = relay.Function([var_8034,var_8035,], output)
mutated_mod['func_8036'] = func_8036
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8335 = relay.const([[[0.572847,-8.359432,4.134243,-1.955803,-3.249384,-0.638708,6.218229,-1.827095,-1.567662,2.511743,8.286752,9.898362,2.982146],[0.548845,-3.863727,-5.334617,-0.944319,-2.821600,9.355535,7.743965,-4.887494,9.824420,-9.692723,9.501150,-8.236359,-8.447674],[-1.968210,7.577165,-4.039171,0.814747,6.621778,-1.892637,-0.636559,-1.254480,7.912763,1.224190,6.702788,4.405833,-3.178828],[-5.431571,1.944249,4.260235,8.672611,2.973278,3.512250,-9.723281,1.994265,-0.343872,0.581366,0.325953,-4.487822,0.209178],[8.383980,8.826277,9.467849,9.133416,-9.293044,7.978736,6.174721,2.835919,7.749703,-4.211212,-5.530462,-8.271575,7.117712]],[[-8.301029,-2.347619,0.526027,8.334218,5.571980,-0.613514,3.371698,0.904261,-9.517989,-3.293692,1.322261,-8.015360,-7.453217],[-4.657764,-2.064358,-6.937574,2.038507,-5.281250,6.044285,-6.062574,0.473077,3.378337,6.820611,5.314041,4.330517,-8.134343],[3.481174,-1.454766,2.594072,-4.520632,-2.618901,9.521015,2.700754,-6.633939,3.996511,4.913325,-2.291453,0.356567,-1.652566],[7.310752,-2.011592,-1.237375,-8.248010,3.687785,-3.278775,-8.038770,3.403347,-8.083267,5.519968,3.452662,9.741721,3.832750],[4.292539,-0.012329,7.466003,4.412466,5.317043,8.386849,6.302852,3.315793,-0.717964,-9.095827,1.743098,-1.421165,-0.223144]],[[0.878053,7.856406,1.447322,-0.718757,-1.118966,6.749552,2.794483,6.568440,9.177727,-9.631821,-8.554269,-1.204445,-4.131229],[-6.249563,-4.996665,-4.463527,-6.325327,8.935989,-7.072461,0.432882,9.533498,-2.561890,4.177395,-9.668731,-9.665016,-3.419830],[6.842354,-6.365558,-7.968686,3.513120,7.666698,9.050242,5.812568,7.355711,-4.042358,-6.741450,5.683390,-9.701561,-7.707702],[6.478929,7.441643,-6.024295,-0.877716,-5.217403,4.146646,-4.289242,1.951262,-5.431070,-3.979925,-5.645235,7.873626,-2.885227],[-1.916946,0.886749,2.000561,5.430685,-0.907426,-3.726723,-4.793326,-9.175995,-9.463826,-8.403522,-5.513709,-9.941936,-4.474480]],[[1.101211,5.765007,7.602610,-1.703851,-4.900860,4.766450,3.239103,8.698082,7.267792,-9.658315,4.337815,-8.453766,5.521868],[6.132244,6.142105,-6.227191,8.285001,-0.581238,6.979643,9.784803,8.531802,-7.618636,5.416533,-6.724559,8.716146,-4.672569],[3.884648,0.264981,7.190440,-5.794883,-0.723409,0.349792,-3.185158,-8.815422,-9.163403,5.434271,8.187910,-8.879902,-5.969457],[7.368269,-5.108422,-5.270095,-1.311096,-2.966931,-7.690309,-2.102108,9.394788,-5.532391,0.279753,-5.929605,8.204707,9.850304],[3.921628,9.718531,-7.419461,2.859664,-7.439804,-0.924974,7.134888,-4.129179,6.678894,8.842371,-1.170111,-2.512003,-7.798799]],[[6.855251,6.002714,-6.639568,8.535537,-7.848681,-3.874604,-0.709677,0.876849,9.266283,8.444741,5.124989,-4.037207,9.076252],[-0.362049,8.831366,-9.841458,-0.175846,2.055521,-9.915186,-5.566254,5.907611,9.671671,3.485082,-7.612302,2.908010,-6.373307],[6.123918,6.115490,4.928896,-3.034117,1.060247,-3.885583,-1.717746,-3.473901,-2.403495,0.461547,-2.324897,6.734118,-0.793753],[-7.529844,6.015934,-6.055030,-2.355897,3.869470,6.070820,-0.655802,1.245561,7.147305,-8.873250,-4.761859,-6.367898,-9.110544],[-9.999476,0.819596,-2.658686,4.292196,-4.324615,-0.904933,8.939362,0.775254,4.873310,5.549598,-9.894564,3.208226,0.057764]],[[8.143395,6.121730,-5.277685,0.983289,-2.778673,8.338167,3.472390,7.925340,-5.260421,2.606596,-4.168105,6.847625,5.126486],[-2.838929,7.240613,8.600120,6.367266,-1.915209,-5.464636,5.692993,4.403752,-7.425195,7.350553,-0.534347,2.062959,3.637877],[6.725051,5.902525,-1.790467,5.786384,4.562427,-2.697910,3.427915,-6.247010,-6.070400,9.705308,9.063310,-9.409910,6.184981],[-7.981156,-6.329202,-2.764228,9.125417,6.890957,3.152659,5.460886,2.627240,-1.046939,-3.747454,-0.496051,-5.392358,8.114267],[-3.680324,-3.291788,-5.974518,-9.429648,-3.510177,-0.413018,-5.995332,9.487416,-3.440335,3.395393,-4.574252,6.356998,-2.437004]],[[5.651425,8.712231,-8.408144,-5.038905,9.111750,-1.386980,-6.881334,9.774546,-5.101369,-3.560214,4.744231,-4.706332,-8.092207],[-1.866561,8.890148,1.654540,-7.632027,0.299882,-6.667182,1.030402,8.002995,3.898826,3.427276,-6.890963,3.746137,4.277439],[-3.499385,7.713153,7.158063,-5.316759,-6.380960,3.202769,-6.804324,-8.467355,4.377218,-0.843711,6.764117,-7.697360,-1.474941],[-1.469974,5.046276,5.365731,2.495188,-2.590551,-4.665709,1.842895,-9.517349,4.236407,-6.245421,-2.590792,-6.329172,-7.768246],[-0.291287,-6.591019,0.299449,-7.095871,-8.073939,-4.953120,-5.803432,-2.860086,5.024123,-4.113349,2.680350,-0.127737,9.217626]],[[0.076292,-9.824144,7.334764,-7.079642,8.829505,-2.519200,-9.408294,0.175606,-0.278026,6.427315,5.513898,-2.385802,-4.100554],[5.431627,4.798376,4.471158,-4.972113,-1.335390,7.909950,0.844902,3.098909,-8.360648,6.718399,-7.842968,-3.417480,-4.868350],[1.385216,2.862256,-5.971885,-4.980098,9.457503,-7.169586,2.275117,8.868994,1.212688,-9.223507,-1.391526,-3.591423,-2.869858],[8.262397,-2.424718,-3.312881,-9.300795,-8.938955,0.352713,1.350920,-4.353877,-7.996048,-1.476769,-0.569787,9.612263,-0.992380],[-3.081381,9.736599,-7.034034,6.459755,-0.515342,-0.962740,2.509084,-8.227848,9.823715,1.006474,3.977999,-6.183877,6.385220]],[[-4.407690,9.927843,-6.832403,5.959852,-6.616013,-4.399845,6.249964,-5.148647,2.237046,-2.806530,-1.662623,1.599656,7.482364],[7.187103,1.068220,9.251555,9.250376,-5.203758,-3.701788,2.574881,8.517645,-2.490909,6.306113,-7.171274,-2.122006,-7.633502],[7.761303,-7.711519,-6.042673,-5.214310,-7.855305,9.776783,-6.783146,2.603359,-7.163488,6.781076,-0.854128,-1.198293,-7.646023],[-0.623171,2.918001,7.031578,2.856771,2.481483,-2.338499,8.911077,7.083607,-5.046572,-9.447889,-4.309872,8.644651,8.328409],[2.571002,8.867119,-6.043864,-4.246895,-6.424134,-8.679958,2.520418,9.099274,9.192032,-6.143099,-0.697714,-5.767422,-3.012135]],[[8.404010,1.389017,1.987920,-8.551190,-6.288679,7.326565,-6.534185,2.854252,6.200010,-1.614887,-9.012457,4.889639,6.141109],[5.611618,-2.367329,-5.382768,2.157329,-8.442315,1.068771,6.746639,-2.224090,-5.879385,-1.579182,8.114733,0.523479,6.982236],[-6.993627,-1.925492,-2.341001,2.873575,-2.200030,-7.717954,6.680301,-2.776688,8.690598,1.939634,-1.498502,-7.663243,3.812656],[-1.511482,0.856369,-0.561299,-0.397957,0.701495,-5.742629,-1.679109,8.521639,8.652528,4.086817,1.262857,0.217887,-9.068992],[-9.969978,5.886332,7.520646,-1.838726,8.243901,-5.937123,-3.053033,-9.956426,-2.708185,8.871219,3.791084,3.280700,-1.366573]],[[0.068381,4.688431,-8.764800,-5.694696,0.851688,1.027381,-5.549811,-8.557891,4.793510,5.707108,4.209494,-7.052174,7.180528],[7.424505,-2.700532,4.559122,-5.154847,-4.757924,-1.604688,-7.438812,-6.779897,-8.902852,-5.098190,5.244678,4.563571,6.413257],[-3.065115,5.535205,6.571175,-0.139503,-0.755759,4.319716,-4.249674,4.291375,-6.833593,-6.639942,-9.009681,8.756237,9.260778],[-8.852517,4.041966,-2.323995,0.624981,0.116318,-6.675758,-5.875164,9.670067,2.932597,2.107994,8.923154,-3.165275,-2.118827],[-5.220281,5.617746,-7.859412,-0.433051,3.343112,-7.040908,-0.795500,3.287575,6.804439,8.004216,3.991833,8.742533,-5.321826]],[[-6.411553,-6.837421,7.642288,4.867053,9.248619,-4.593239,1.519779,-8.082498,-9.020266,-8.749164,7.497247,1.715321,-5.031175],[-2.850252,-6.148382,-8.159922,0.826116,5.956098,4.935916,-0.189728,6.680109,-5.369204,-2.748769,-4.948442,4.922391,4.603601],[-5.206695,-5.684700,1.672758,-2.628616,0.731677,1.000632,-1.530678,7.945590,7.023005,-3.363056,-0.963170,3.317549,0.670088],[6.766346,-2.766143,0.779444,8.147761,-4.844488,-2.017756,-3.718652,5.369504,7.297925,3.091263,-8.808153,-0.711812,4.103272],[9.851672,3.555472,-9.144235,-2.415841,3.739829,4.615053,0.848936,-7.039393,8.542848,3.464079,-8.550513,-8.726643,9.670310]],[[-5.430630,8.150116,-7.076089,-6.296070,3.043189,-2.979116,-2.810437,8.901593,-9.567082,8.668728,1.535502,-7.251543,9.940869],[9.215464,-8.434021,-7.506219,-0.565631,-6.162406,0.187020,-8.111520,0.179330,-7.632477,1.447910,2.645150,-4.640783,-9.058800],[5.758753,-5.879311,6.534789,-4.458137,-0.236754,-3.767539,-0.454662,0.384357,2.621262,-6.499283,-0.449428,-5.213527,0.983557],[2.453770,-6.624606,6.882796,-5.669530,5.370547,5.629406,2.214037,-2.651687,-7.594557,-9.240800,-2.457106,3.522136,-7.728343],[6.530636,8.554146,7.214380,-1.150837,-1.344747,9.565258,2.055464,-7.852853,5.204392,-4.719299,6.832666,-1.581515,-3.711384]],[[-3.672105,-1.684248,2.933379,0.368224,-4.372677,-3.017563,9.312016,-1.072343,9.128720,3.563594,-3.072729,-7.264499,-2.295887],[1.701020,5.603509,-8.964642,1.260260,8.079580,-9.131843,-4.858243,5.397143,-2.977227,9.727200,6.826815,-9.292584,2.526423],[7.812679,-9.779841,5.577422,4.987680,6.955712,-9.290696,-4.891429,-6.439454,5.229531,2.637824,6.230306,8.221382,-8.540915],[9.373334,9.822968,5.070481,-0.243667,-6.766918,7.792887,8.332463,2.311802,3.536507,7.068250,4.339930,-2.222045,9.111413],[-0.085599,7.553763,6.552229,7.413690,8.215751,-0.623634,-8.153540,4.971794,-8.380648,8.639900,1.760852,7.499513,-4.724671]],[[7.461187,1.257185,-3.259323,1.231806,-3.701138,-9.383629,9.432293,-3.016345,-1.906555,-8.149081,-8.445515,-7.205876,5.014229],[-5.346496,-6.791239,4.426457,-7.742151,-9.855176,-7.865422,-1.296972,-4.222923,-1.470955,-4.840721,4.141295,-1.606538,-5.525924],[-3.180374,-1.743629,-1.319151,-3.609608,3.636025,-0.659762,-1.241053,-8.869671,-7.866800,5.220549,2.661776,-2.786430,-7.560319],[-2.380054,-9.357625,0.792365,5.955274,-4.800511,8.240553,-6.895443,-0.750189,-1.228219,0.512672,6.669115,1.137627,8.914623],[-2.141100,-4.708786,6.589528,0.971195,5.514350,5.136363,-5.073708,0.307057,-6.930809,-3.574476,-3.827155,-7.756279,0.591099]],[[-1.029353,-5.935409,-4.476053,0.374914,-1.826485,2.437110,-0.528244,-7.033003,-4.318273,2.186843,-6.451706,4.345015,-8.460450],[6.696942,-6.572077,-0.398581,6.888859,-6.757839,-6.983835,-9.815516,-2.836070,-8.993873,4.549592,-0.565620,-8.289333,9.743699],[-9.878550,1.296575,-2.434700,5.737329,-5.839001,4.881946,-2.009004,1.363248,-1.765423,7.440981,9.814729,4.334918,2.367629],[-6.974809,-4.762035,-7.413157,1.872839,4.924722,6.051099,-5.350379,0.385443,6.416334,9.560851,-1.416760,9.104521,-9.725099],[1.766211,4.440713,-0.785554,-2.355697,4.630779,7.968603,1.632635,-4.982650,2.714314,-7.680963,4.280660,-5.864221,-1.906357]]], dtype = "float32")#candidate|8335|(16, 5, 13)|const|float32
uop_8336 = relay.asinh(const_8335.astype('float32')) # shape=(16, 5, 13)
output = relay.Tuple([uop_8336,])
output2 = relay.Tuple([uop_8336,])
func_8338 = relay.Function([], output)
mod['func_8338'] = func_8338
mod = relay.transform.InferType()(mod)
output = func_8338()
func_8339 = relay.Function([], output)
mutated_mod['func_8339'] = func_8339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_8409 = relay.TupleGetItem(func_8338_call(), 0)
call_8410 = relay.TupleGetItem(func_8339_call(), 0)
func_1074_call = mod.get_global_var('func_1074')
func_1077_call = mutated_mod.get_global_var('func_1077')
const_8417 = relay.const([[-6.259549,0.400619,2.534252,-9.426259,-5.423922,-7.760433,-4.814431,-5.051076,8.032287,-0.605282,0.196638,1.378763,5.827273,-2.749420,-6.731354,0.998012,6.898410,-6.201189,8.713430,-0.130887,-1.722466,8.636522,2.131038,5.684122,8.103669,2.556650,3.228646,0.772786,-2.429606,-7.959784,-8.169504,1.736757,-2.123544,-0.739409,-4.052306,8.135532,0.044038,1.539922,-7.800339,1.079559,-0.716334,-2.631145,5.316195,2.385066,4.468041,-5.381398,5.127397,8.475251,7.365597,3.750454,-6.542216,-8.861253,3.294312,0.506888,-4.577533,6.127870,5.353284,-5.209268,1.119493,-6.370349],[4.768429,-0.612471,3.737780,-2.928322,-3.477826,-6.477767,-2.511501,-1.008428,4.686737,0.878661,1.594356,-3.603182,-4.380459,3.513365,-1.854298,-4.406750,6.452171,-0.708373,-8.278940,1.915968,5.561369,-9.598125,7.970616,7.880954,-8.198221,-2.158440,-8.075149,-2.332545,-1.732349,-8.470282,-0.484530,-3.757335,-8.251064,-9.131275,-0.728055,6.589081,0.009645,6.940964,-3.911549,9.891197,-4.244615,-1.940504,3.738373,3.617104,3.661137,-1.563009,3.855372,9.588142,-9.399994,-4.290881,3.557295,-7.318928,5.531390,1.577262,-2.646506,-9.686970,5.887295,5.534604,-8.052693,-6.066577],[9.616181,4.930657,8.642585,-1.717393,-5.667298,-6.525004,-8.023213,-9.092438,1.218398,7.711053,0.721555,-8.434799,5.587193,5.828621,-9.627206,9.737002,-1.218363,-0.998145,2.991381,0.899017,-3.588393,9.359256,-9.779983,-0.156193,-8.584781,-1.613159,-8.236339,-8.563959,-5.602445,1.924733,2.252087,-1.330871,7.100326,0.883964,7.917874,-8.832661,2.566490,-0.055459,6.569651,8.886212,7.595005,7.365237,-1.605368,6.250587,7.751431,7.115174,2.933095,9.811152,8.800152,0.108516,1.223778,-4.047177,7.312340,9.220461,8.993560,-7.716353,-3.313289,-9.304001,4.652414,9.154304],[-8.496001,0.672500,8.403443,-5.599096,-9.087675,5.963045,0.670436,-0.761383,8.423878,-0.208255,-7.312073,9.123548,-5.330452,6.087474,7.170582,6.678572,2.397763,5.534713,0.796117,9.130330,9.918608,8.206333,-5.132371,2.334933,2.695151,4.557403,9.844889,-2.655434,-4.492815,2.965664,1.574875,-3.428204,-6.774074,9.390054,7.913091,9.263449,2.132935,-0.725417,-3.501160,1.374692,8.716979,1.295728,3.014526,-2.485542,7.384140,7.700653,-5.590903,5.648910,6.629086,-8.808710,-8.119848,7.782254,2.296806,1.653120,-3.708887,5.094673,3.818341,-9.898031,1.422312,0.390447],[-3.145630,6.065104,-0.708396,8.272858,9.871645,-3.417513,4.524820,8.965904,5.986814,-6.623423,-2.048931,3.536459,-4.528204,-0.263302,5.415570,-5.682602,9.696239,-1.189509,7.007899,6.122273,-7.781568,-7.517594,-6.565890,-8.942162,-7.873780,3.832053,-9.070459,3.609884,-1.339271,-8.794746,7.071656,8.069578,-1.818804,-8.551676,-0.543828,-4.901476,8.428695,-7.668554,0.224994,-1.912223,-9.628708,-2.425843,-0.401520,3.847302,0.499325,-5.374864,0.589181,8.469688,-2.888286,0.175600,-1.146715,0.735973,-4.039186,9.146836,-5.218695,7.171054,3.351897,8.589387,0.419281,-3.377318],[7.203453,7.179779,-4.769745,-4.371438,-9.214995,4.834143,-8.751289,1.028890,0.241884,-6.272692,-3.899113,-2.828040,6.522162,1.279267,-6.929977,3.996310,1.344966,-0.922427,-8.232704,-5.254757,-2.888114,2.073193,-4.796057,0.662021,9.344363,0.658592,-0.223783,8.691711,6.415460,-5.168904,-5.137181,1.846201,0.973649,0.733069,8.863732,-9.341065,-5.162196,-5.896630,-0.137049,-7.582731,3.533520,8.268695,4.746595,0.605217,-1.354157,-1.543801,3.283399,-5.573716,-5.473855,-0.493230,0.206548,4.159730,-5.447246,-9.578322,-3.787411,-5.294552,-2.370041,7.324143,-3.434397,-1.260787]], dtype = "float32")#candidate|8417|(6, 60)|const|float32
call_8416 = func_1074_call(relay.reshape(const_8417.astype('float32'), [5, 9, 8]))
call_8418 = func_1074_call(relay.reshape(const_8417.astype('float32'), [5, 9, 8]))
var_8421 = relay.var("var_8421", dtype = "float32", shape = (6, 60))#candidate|8421|(6, 60)|var|float32
bop_8422 = relay.not_equal(const_8417.astype('bool'), relay.reshape(var_8421.astype('bool'), relay.shape_of(const_8417))) # shape=(6, 60)
uop_8428 = relay.acos(var_8421.astype('float64')) # shape=(6, 60)
uop_8438 = relay.sigmoid(uop_8428.astype('float32')) # shape=(6, 60)
bop_8444 = relay.bitwise_or(uop_8438.astype('uint8'), relay.reshape(call_8416.astype('uint8'), relay.shape_of(uop_8438))) # shape=(6, 60)
bop_8447 = relay.bitwise_or(uop_8438.astype('uint8'), relay.reshape(call_8418.astype('uint8'), relay.shape_of(uop_8438))) # shape=(6, 60)
func_8033_call = mod.get_global_var('func_8033')
func_8036_call = mutated_mod.get_global_var('func_8036')
const_8451 = relay.const([0.306667,-2.154291,3.480684,-1.908553,-8.165578,-0.023921,-4.482284,4.446152,8.079009,-2.210461,4.783439,-9.221146,4.305197,-5.174072,-8.480487,7.569917,4.866721,-5.251478,-8.002297,6.105379,9.679368,4.140434,-3.761097,2.671647,5.849041,5.754682,-6.431896,0.122413,-9.335391,-2.638383,-6.475626,-8.285850,9.655921,-2.888515,9.679660,2.985023,-8.735368,1.056145,9.956312,-2.700722,-3.956908,4.437866,-9.210980,-2.615403,-2.027875,3.376574,-4.603952,1.057841,-6.266377,-9.173745,6.328828,5.265659,-9.752478,-1.525857,5.490016,-2.616896,-5.684020,-2.699523,6.563296,4.681622,3.369006,-0.146312,4.326421,-5.715548,-1.224362,3.901424,-1.262378,0.077965,9.242165,-7.907438,-6.322731,-8.692075,-6.342701,7.863791,2.357159,-6.619379,3.746368,7.328019,-6.743130,8.367601,-7.248601,-1.362569,0.100954,6.362337,2.534496,6.432194,6.358894,8.914338,6.284882,6.936195,6.438291,3.793211,-6.670007,2.563291,-4.628308,4.481331,-2.513550,5.494466,2.123307,-6.695515,-4.834643,1.291231,-9.345421,-8.052612,9.204147,-4.083351,9.885949,-9.136172,-5.368703,-4.551249,-8.553183,1.664837,4.604443,-8.614403,-5.862773,6.332862,-2.257014], dtype = "float64")#candidate|8451|(117,)|const|float64
var_8452 = relay.var("var_8452", dtype = "uint64", shape = (1584,))#candidate|8452|(1584,)|var|uint64
call_8450 = relay.TupleGetItem(func_8033_call(relay.reshape(const_8451.astype('float64'), [13, 9, 1]), relay.reshape(var_8452.astype('uint64'), [1584,]), ), 5)
call_8453 = relay.TupleGetItem(func_8036_call(relay.reshape(const_8451.astype('float64'), [13, 9, 1]), relay.reshape(var_8452.astype('uint64'), [1584,]), ), 5)
func_3279_call = mod.get_global_var('func_3279')
func_3283_call = mutated_mod.get_global_var('func_3283')
const_8466 = relay.const([[-9],[2],[8],[5],[-2],[-9],[3],[2],[3],[-5],[-10],[-7],[9],[-5],[-8],[-4],[5],[-7],[1],[-10],[2],[7],[9],[-5],[5],[5],[-2],[10],[-4],[6],[1],[-9],[7],[9],[7],[-3],[9],[4],[-1],[-10],[8],[-2],[10],[4],[8],[-6],[-10],[-5],[-2],[-5],[4],[-7],[7],[-2],[-10],[-5],[-10],[9],[-10],[5],[-10],[8],[7],[-7],[8],[9],[-9],[6],[10],[6],[-2],[8],[-7],[-1],[-7],[4],[-9],[-9],[8],[7]], dtype = "uint8")#candidate|8466|(80, 1)|const|uint8
const_8467 = relay.const([[7,-6,-4,-9,6,-2,5,9,-6,-8,6,4],[8,-10,7,-4,1,-9,5,-9,-7,-7,9,-6],[2,-1,-6,10,4,1,-9,8,-5,4,4,10],[-4,-4,3,-9,5,-3,5,-7,7,-2,4,-6],[-8,-10,4,2,5,3,7,4,10,-3,5,5],[9,-8,-9,2,5,-8,2,-8,-7,6,3,-7],[9,7,9,8,9,-9,-10,-4,4,5,3,2],[6,-7,10,-1,2,-5,-10,-7,10,-9,-10,7],[-6,-8,8,10,-2,3,9,-2,-2,1,1,2],[7,-2,-6,-9,-3,-1,10,5,8,-5,1,-9],[-6,4,-10,1,-8,2,-3,-6,1,7,1,-3],[-1,-6,-6,3,7,1,6,5,-8,9,10,-8],[-3,2,9,2,4,2,5,3,-5,-9,10,-6],[-1,-8,10,-3,2,-6,-3,-3,-6,-8,-2,-3],[9,7,-6,-6,8,7,3,-1,-5,6,-3,4],[3,2,-7,2,7,-5,-4,9,6,-2,-5,-4],[7,-8,-10,-2,8,-10,-9,9,4,8,-5,-4],[10,-2,6,-7,7,-3,-2,1,9,5,6,3],[-9,9,-5,-7,-8,3,-6,-7,8,1,7,1],[5,-3,1,-10,6,-4,-4,-9,3,-4,-4,1],[3,1,-6,-5,8,2,3,-10,1,1,9,6],[3,1,3,9,-6,5,5,-2,7,2,6,-10],[-8,-2,4,-8,-10,-4,1,-10,-4,-8,6,-1],[4,4,9,-6,-8,3,6,8,-8,-10,4,5],[-6,8,-5,-4,4,8,3,-10,4,-4,-5,-8],[-5,-4,-10,-8,4,-8,-6,-7,-2,4,2,-8],[-9,7,-3,9,-3,8,3,-10,1,-5,10,-7],[-10,-8,7,7,6,-10,-8,8,1,7,-1,1],[4,-1,10,7,-3,10,-8,-7,-2,-5,7,4],[-1,-2,-7,-6,-8,5,9,6,4,-1,7,-1],[7,3,-1,-2,7,7,-6,5,2,-2,2,10],[-5,10,-10,-5,7,9,-5,10,-4,8,-2,1],[-2,4,10,2,6,1,3,3,2,-7,2,10],[6,5,10,-1,-9,-8,8,8,2,-2,-5,-2],[-6,5,10,-5,3,4,5,8,10,-7,-6,2],[6,2,8,2,6,-5,5,3,-9,-1,-2,-2],[-7,-1,-6,2,1,-7,9,-5,1,9,10,-3],[-1,-5,5,7,8,6,5,10,-9,4,-8,-3],[9,-4,6,-9,-4,-9,-6,3,-6,-8,7,6],[-6,-4,-9,3,10,10,7,-2,8,3,10,5]], dtype = "uint8")#candidate|8467|(40, 12)|const|uint8
const_8468 = relay.const([[8.152176,-2.103191,-1.450104,8.093121,-1.582444,6.492021,-5.325364,1.556042,-9.098286,2.189789,3.892209,-2.314734,7.038432,0.332300,-9.010901,9.490421,3.804114,-6.097704,0.240591,-1.984655],[5.024315,4.342979,8.260077,6.196382,-0.133611,3.288178,1.581055,-2.979896,6.097767,1.616147,-5.763956,9.481024,-6.506170,-4.096488,-1.170522,4.835709,-1.333295,7.690958,7.244732,6.901265],[-0.668686,-0.459529,7.603580,-4.046461,-3.994170,-2.919908,-3.819041,2.681647,3.158586,-1.519950,-7.992580,1.662536,-2.349461,-9.910177,5.156447,7.749782,1.730423,3.105831,0.723669,4.905419],[6.433501,-2.478594,-9.129171,3.756169,9.048535,7.826313,2.593634,6.489071,5.975884,-8.787831,5.510380,-3.208797,0.152493,6.583499,7.796079,-0.061284,-0.312124,9.325261,-2.839891,-1.179799],[-2.316881,-0.606220,-5.990768,-1.248824,7.851639,-7.276794,-1.865014,6.352096,5.905030,-4.679613,-3.736590,1.647943,-2.954285,3.731242,8.526462,-5.881479,6.121303,-2.204442,-5.281768,6.123603],[0.423149,0.465300,6.296284,6.886979,9.769860,2.581993,-1.378580,0.001458,7.427137,-4.473393,-5.183032,5.076369,8.260213,-8.390794,-4.434775,2.174973,2.969773,9.940076,-9.783883,9.430906]], dtype = "float64")#candidate|8468|(6, 20)|const|float64
call_8465 = relay.TupleGetItem(func_3279_call(relay.reshape(const_8466.astype('uint8'), [16, 1, 5]), relay.reshape(const_8467.astype('uint8'), [16, 6, 5]), relay.reshape(const_8468.astype('float64'), [3, 40]), ), 1)
call_8469 = relay.TupleGetItem(func_3283_call(relay.reshape(const_8466.astype('uint8'), [16, 1, 5]), relay.reshape(const_8467.astype('uint8'), [16, 6, 5]), relay.reshape(const_8468.astype('float64'), [3, 40]), ), 1)
bop_8470 = relay.logical_and(bop_8444.astype('bool'), relay.reshape(const_8417.astype('bool'), relay.shape_of(bop_8444))) # shape=(6, 60)
bop_8473 = relay.logical_and(bop_8447.astype('bool'), relay.reshape(const_8417.astype('bool'), relay.shape_of(bop_8447))) # shape=(6, 60)
uop_8477 = relay.acosh(const_8467.astype('float32')) # shape=(40, 12)
output = relay.Tuple([call_8409,bop_8422,call_8450,const_8451,var_8452,call_8465,const_8466,const_8468,bop_8470,uop_8477,])
output2 = relay.Tuple([call_8410,bop_8422,call_8453,const_8451,var_8452,call_8469,const_8466,const_8468,bop_8473,uop_8477,])
func_8482 = relay.Function([var_8421,var_8452,], output)
mod['func_8482'] = func_8482
mod = relay.transform.InferType()(mod)
mutated_mod['func_8482'] = func_8482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8482_call = mutated_mod.get_global_var('func_8482')
var_8484 = relay.var("var_8484", dtype = "float32", shape = (6, 60))#candidate|8484|(6, 60)|var|float32
var_8485 = relay.var("var_8485", dtype = "uint64", shape = (1584,))#candidate|8485|(1584,)|var|uint64
call_8483 = func_8482_call(var_8484,var_8485,)
output = call_8483
func_8486 = relay.Function([var_8484,var_8485,], output)
mutated_mod['func_8486'] = func_8486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_8511 = relay.TupleGetItem(func_8338_call(), 0)
call_8512 = relay.TupleGetItem(func_8339_call(), 0)
output = call_8511
output2 = call_8512
func_8515 = relay.Function([], output)
mod['func_8515'] = func_8515
mod = relay.transform.InferType()(mod)
output = func_8515()
func_8516 = relay.Function([], output)
mutated_mod['func_8516'] = func_8516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8524 = relay.var("var_8524", dtype = "bool", shape = (9, 12, 13))#candidate|8524|(9, 12, 13)|var|bool
var_8525 = relay.var("var_8525", dtype = "bool", shape = (9, 12, 13))#candidate|8525|(9, 12, 13)|var|bool
bop_8526 = relay.logical_or(var_8524.astype('bool'), relay.reshape(var_8525.astype('bool'), relay.shape_of(var_8524))) # shape=(9, 12, 13)
uop_8529 = relay.erf(var_8524.astype('float32')) # shape=(9, 12, 13)
output = relay.Tuple([bop_8526,uop_8529,])
output2 = relay.Tuple([bop_8526,uop_8529,])
func_8546 = relay.Function([var_8524,var_8525,], output)
mod['func_8546'] = func_8546
mod = relay.transform.InferType()(mod)
mutated_mod['func_8546'] = func_8546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8546_call = mutated_mod.get_global_var('func_8546')
var_8548 = relay.var("var_8548", dtype = "bool", shape = (9, 12, 13))#candidate|8548|(9, 12, 13)|var|bool
var_8549 = relay.var("var_8549", dtype = "bool", shape = (9, 12, 13))#candidate|8549|(9, 12, 13)|var|bool
call_8547 = func_8546_call(var_8548,var_8549,)
output = call_8547
func_8550 = relay.Function([var_8548,var_8549,], output)
mutated_mod['func_8550'] = func_8550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8515_call = mod.get_global_var('func_8515')
func_8516_call = mutated_mod.get_global_var('func_8516')
call_8583 = func_8515_call()
call_8584 = func_8515_call()
func_7049_call = mod.get_global_var('func_7049')
func_7053_call = mutated_mod.get_global_var('func_7053')
const_8605 = relay.const([[-2.041695,2.676587,1.693229,-4.483442,9.868841,-4.986932,9.551373,6.952268,-7.838594,9.194604,5.736869,4.769484,-7.000133,-5.241147,-2.575771,-8.523996,-5.488348,3.901193,-3.641957,8.803937,-6.518626,9.038758,1.474926,7.263443,-2.381460,-4.918745,1.368247,-3.529600,-8.648526,-1.828689,6.077174,4.280582,-7.530256,8.534222,-2.686835,-3.199975,-2.039908,0.320869,-0.081980,6.117652,7.098597,8.645752,-8.419333,-3.966688,-4.441843,9.545262,-2.839626,0.342243,-1.150658,6.832468,7.971963,5.835108,4.379184,8.190839,-3.967897,-9.366603,-5.950391,-3.650993,0.888629,0.161735,-0.073094,5.684073,2.014713,5.640428,7.016013,1.608251,5.929704,-3.913774,0.080868,-6.040080,9.805968,8.923233,-6.471220,-4.825325,6.815286,1.367259,-2.155661,-6.491636,5.272315,5.044094,-9.144246,9.961656,-3.518430,-2.812976,-7.979063,2.582277,2.369067,2.242314,-8.006987,4.221910,-5.230113,9.165537,-5.290967,-6.930760,-4.667438,-0.230095,-3.898708,-3.421226,-0.797663,-0.734199,1.752202,-8.425963,8.405185,2.936622,4.859074,2.555810,2.997203,-3.116559,-4.698751,-5.483802,5.630714,5.520166,-9.758455,-2.131553,-5.405887,4.547185,-7.699760,-8.945173,-8.744909,3.691550,-9.055045,5.621892,-3.386182,5.776971,-9.412263,8.463183,7.854859,-3.558967,-7.562968,-8.033277,2.718382,-5.379425,3.157363,6.626558,-8.842278,4.625897,1.199246,3.539205,-0.285997,-9.225999,-6.995042,-1.228249,-4.615943,7.466890,1.624696,1.368089,-5.138052,-0.042904,-3.610108,7.248760,1.738699,-2.011891,0.910112,-9.671834,-8.566544,-6.072687,-1.107211,-0.804793,3.872307,6.265928,6.942579,-3.750844,-9.850201,0.947364,-5.623382,-1.669531,4.284405,7.636807,-7.925947,3.668143,-7.947735,8.062313,-9.507360,-0.495709,8.082788,1.572092,-3.851377,-0.178821,-0.876450,-3.986925,-8.496376,-6.092399,6.638639,-4.375078,7.062985,-1.413842,-3.212022,-2.488821,-6.923455,-5.387889,-2.874237,-5.773728,7.805969,-2.178781,5.335222,5.390684,4.171515,9.016597,0.680002,-3.796401,6.009369,-1.520086,-2.194377,9.642818,9.281953,-7.681425,3.823864,6.947223,-1.587984,-8.034964,-2.143982,2.781730,-8.807555,-9.639120,7.055889,-0.805822,9.060579,-7.248864,-7.886697,-9.046961,2.425775,3.024837,-1.532832,-8.896635,-9.733073,-5.077882,-7.834188,-0.279701,-5.695991,-2.496147,4.215201,9.710721,0.840124,-5.326606,5.888685,-9.629778,-9.714530,3.590121,-9.410482,6.757725,-3.335051,4.945331,8.660711,5.057422,-0.559996,4.033580,9.390584,-3.364802,-0.071340,-6.189434,-4.347524,2.950724,-7.577915,0.302516,-4.576583,-2.195402,-3.349231,8.853072,8.865260,8.447075,-3.225046,-9.519109,9.374638,-4.052080,7.285805,8.600883,6.016108,-5.805101,0.191792,-2.032638,-4.707145,7.300996,-8.592991,7.332189,6.343725,7.929138,4.165053,2.386350,3.262717,3.683254,-6.780645,-6.058985,5.771192,-3.467352,-3.946596,-5.173871,3.925631,5.975045,-0.117168,4.142325,4.407343,4.707720,-8.366939,-6.779860,-9.057773,4.447061,-0.599110,1.171487,-6.085899,4.247958,-2.194598,-5.057195,0.527520,-6.473299,-1.770453,7.100041,-4.089604,-1.543695,-8.450027,-1.014494,-7.597206,2.595613,9.847112,-9.537394,-8.689614,-4.750587,6.721470,-8.632625,-4.104904,-5.935245,8.103858,0.088174,-6.892010,-0.791288,-9.813011,-4.675773,-1.465434,1.741201,-9.432171,-5.812974,0.344395,2.125590,7.768104,1.879835,-0.812947,-7.192016,-7.167217,-2.533758,7.966838,6.810078,0.057572,0.490970,0.646166,-9.358456,-6.337399,9.342902,8.287118,9.621152,-3.018961,3.415725,-9.439419,-2.816216,8.657172,-2.972800,-7.999121,-7.176205,2.318381,4.370850,-3.004226,-4.713682,-6.169216,4.866403,-0.874795,-8.424279,9.677314,-8.312607,2.433708,-8.653721,7.780213,-6.998096,-0.369665,9.163595,-1.700497,1.878988,-7.742509,2.693549,5.621554,8.979774,0.782719,-7.941773,0.881167,3.749055,-9.606516,3.088113,-2.329961,1.872268,-8.301616,-3.359028,0.035809,1.869685,7.391588,4.688629,5.437540,-6.559473,-3.029568,-8.853700,0.035195,3.960947,0.281784,9.256616,-0.786049,3.613496,-7.572829,1.366973,7.013057,2.373335,9.921170,8.289407,6.676033,-8.764146,-4.169656,4.129514,-7.973076,3.549230,8.685713,4.630045,1.596123,-7.977428,-0.193924,-5.421604,2.704827,-0.138160,-8.977490,1.349833,8.845890,7.907898,-2.428423,-6.225508,6.347427,6.103227,-4.064898,-9.284952,0.504873,2.368928,-5.832138,3.654679,-6.082889,3.400745,4.942888,-2.830369,-9.690358,-6.087445,4.797549,2.000515,9.586377,0.510814,3.185654,9.657753,7.112836,-4.948900,-3.031563,4.857451,9.121501,0.183501,0.110702,8.892670,-0.753642,2.794607,-1.744055,-3.216431,4.587760,-5.635619,-1.845466,1.642037,-7.066170,1.933493,1.269256,7.122401,8.094270,9.075816,2.436483,-7.230793,-6.330006,5.539172,-7.852197,-8.543736,7.672916,-9.967674,3.577713,2.789264,2.495727,-5.899682,9.878897,7.504754,1.511722,-3.387552,-6.778605,-7.534692,-5.862029,4.019290]], dtype = "float32")#candidate|8605|(1, 490)|const|float32
const_8606 = relay.const([-1.373252,-6.246501,-7.053358,-9.423391,5.823814,-1.640046,-5.726728,7.353759,-4.721368,-3.776483,2.621868,6.667037,-6.141811,-1.679343,6.023462,7.251126,-6.895946,5.007427,5.019444,-6.194867,-7.329356,-7.007842,7.287067,-9.798221,6.444683,-5.331470,8.213634,-9.985424,-1.478757,-6.700971,2.368754,-3.288663,4.327360,-1.581699,3.455765,4.325641,8.211176,-0.519231,-6.286198,-9.243454,-1.511052,-9.019810,-6.540821,1.798872,5.715010,-1.095063,8.728047,-1.821733,-9.286821,-9.963257,-1.057480,-6.983885,9.480501,-0.053653,1.666448,4.451364,9.202688,-6.038630,-8.102419,-3.795814,5.130164,-3.979098,3.267747,4.729382,7.905284,3.769460,-5.195582,5.537980,9.557755,2.937793,-7.265384,-0.297344,-1.796822,5.436808,-6.746355,-7.855228,2.040713,7.240205,-3.242957,-3.436265,-4.707207,2.340026,8.459027,-2.284025,-0.545221,-7.398114,-8.296725,-7.635491,4.493406,1.975000,3.340002,4.269966,-7.464182,-3.437768,6.549774,-4.636464,-1.234707,-1.368641,-8.647821,-0.463038,-1.730103,4.856874,4.322526,7.877067,5.499348,1.662939,7.866302,0.181599,7.739775,-2.834189,0.679306,-6.428217,-5.473690,4.868687,4.166636,2.221396,-8.226042,-7.111580,-9.460374,-8.482224,-1.694819,-4.837176,-0.561713,6.284937,0.338743,0.182048,-9.163513,5.440735,-3.307911,6.847020,-8.574422,-8.702464,2.342522,1.229174,-8.287013,6.890620,1.101474,-0.669045,-0.984988,0.415233,9.538050,-8.060776,-0.096943,-1.256955,-6.715479,-5.861023,-7.397901,-1.041192,6.195250,1.705194,4.617907,-5.714378,5.263030,5.886403,-3.005093,4.795704,7.484177,2.693467,8.097566,-5.124378,4.090590,2.168892,2.939615,8.747115,7.988481,3.270748,5.383005,0.472333,-2.282431,-2.156486,1.999208,2.303957,6.825441,-3.904703,-5.463990,4.296257,6.659435,-1.179262,-0.864265,9.255695,-4.564178,-3.465023,-2.268427,-5.644193,-5.433619,0.875422,8.189971,-9.068698,0.731866,5.694228,-8.720944,1.139571,5.337486,-3.754727,5.203191,3.787628,-4.625398,9.554969,3.913640,-0.807424,3.955649,6.962905,-7.291024,1.334850,-5.896973,7.894486,1.837561,-1.680330,-7.069454,-1.894214,-9.082129,-9.119261,-2.115102,3.644353,9.776665,7.404243,8.855876,6.078082,6.214850,5.237601,-6.773601,-8.853498,6.757055,-1.287246,2.149921,6.793706,3.205249,4.604251,-2.521858,6.200991,-1.343548,-0.942823,-6.487536,5.298040,-8.316530,7.927370,7.086240,3.186041,1.798658,7.154441,-1.322129,-8.839644,-6.958158,2.461464,1.855021,-4.923686,-9.817391,8.034143,2.233025,-7.069468,-2.827260,-6.068049,5.951050,-9.162667,9.255558,4.711137,6.741100,7.541403,0.290885,-2.013124,-6.927041,-4.752154,1.361868,6.936427,-1.778285,-8.895075,9.728017,9.707205,-0.110578,1.542742,7.301283,-2.974477,9.643095,-9.045040,-2.960131,0.244352,1.310534,5.590003,6.368218,6.202609,-2.854574,-1.688086,-4.381464,-8.926715,-5.144059,6.717053,1.639206,-4.253686,5.142525,8.188104,7.368819,-5.744188,9.009987,8.367505,-0.789324,-8.186227,-1.835863,8.581837,-9.364752,-4.212071,2.126717,-4.940914,6.970164,3.293711,4.327566,-3.731429,2.069864,-3.825355,7.737441,-3.384233,-6.978195,-8.928485,1.992978,-3.653983,-6.202069,-9.496374,-8.796514,-0.519028,6.292157,-7.336219,-5.189779,9.742364,-7.510143,-8.824601,1.252263,2.387761,-5.633678,2.561484,2.959182,9.451793,-0.204651,-3.049898,1.714471,-3.512449,-6.614628,6.042974,8.266126,4.341396,-2.270609,1.199345,-0.595289,-2.328828,5.586463,-5.504582,0.096833,-9.788087,-8.254326,-2.970758,0.993641,-7.462403,3.213883,-8.959007,3.838512,-4.524373,-4.285747,4.665252,7.155442,1.954794,8.750943,4.494475,5.595367,-3.631185,-5.732359,7.087558,2.138737,-1.702461,-7.798451,-5.606518,-3.549975,8.084166,-3.471384,8.153858,-6.319687,-7.512909,-4.443587,-3.518295,3.937540,2.415346,0.945000,9.078842,6.993660,-1.099702,0.363218,1.953541,8.043147,-7.210343,7.295708,5.736050,-3.065467,-8.242833,-6.509685,-9.175607,1.046300,5.087333,7.939146,-4.039768,-2.326661,-5.719155,3.308821,4.928377,-9.200146,-4.503673,1.022680,-4.867083,-0.100077,0.338776,3.938288,-9.393129,3.769378,-9.662058,9.161910,0.844470,3.160479,8.676780,6.685227,5.178732,-7.536151,-0.777972,-6.347375,6.818201,5.620237,7.545631,-2.941781,5.648972,4.485053,-2.822110,-0.857995,5.801197,0.325293,-4.999911,7.614485,2.286019,-2.215712,-4.971007,-5.262284,3.758604,-5.943592,-4.059171,-7.307080,-3.284577,6.725751,-8.846028,2.249852,8.902274,-7.247030,6.920524,-9.278853,3.489391,-1.166768,2.238570,6.153574,-7.028683,2.367668,7.168073,2.935266,8.798420,-4.269459,-5.115189,7.663767,9.316185,-5.564303,-9.853701,3.198804,4.611100,9.443942,-0.622615,9.449351,-3.799437,4.242314,-3.764176,3.342358,-8.632849,-2.524556,5.083931,-2.898332,2.716912,-8.521511,9.951901,-6.807551,5.677738,6.404819,-6.907520,7.134697,3.586950,-4.188385,0.533824,-8.396687,-2.783405,-7.481803,-4.129292,-3.064583,5.633259,8.613057,-6.647070,9.319660,9.768320,6.399011,6.531168,-7.397045,9.047486,7.766627,1.375087,-6.111761,-9.054424,1.044815,-8.941346,-2.459583,-2.831878,-6.023126,1.595520,2.727136,0.733395,3.186591,9.261289,7.421620,-9.385672,0.311153,-0.915147,7.642128,-3.068814,-9.504871,-1.069552,0.966449,-2.233473,3.823889,4.025110,2.297421,2.613836,-5.567270,-5.641168,-2.350235,-4.164132,-4.521037,9.119182,7.945894,0.122790,-0.067681,-2.933282,-5.973638,-3.719061,8.669754,-6.800900,-0.754322,9.394794,-4.677103,-0.981844,-6.186187,-3.440667,-8.016264,9.798479,-5.002082,4.798156,-6.352318,-4.057556,-4.546603,5.921776,-9.805326,-2.051196,1.009237,0.758081,-6.925043,-0.649319,-2.107969,8.561132,8.317461,-7.072208,7.950758,-7.720383,-5.921033,8.740509,0.559629,-5.762675,-2.941458,-5.267204,-5.949332,-3.123534,-5.707469,3.351620,7.663279,1.903780,6.031846,-1.420101,3.127744,1.212709,8.678748,-6.814436,6.117118,3.643683,-9.532074,9.612333,9.494909,8.928062,0.459524,3.125338,6.617157,9.623982,-1.683082,-5.182156,-7.845723,3.601727,-4.743363,8.075782,-8.457084,7.319699,-8.145378,3.075925,-8.832113,5.392767,-2.662234,3.443006,0.500597,-4.135527,-8.651363,7.703458,-1.403084,1.674713,1.915656,-5.401469,5.755310,-9.394972,7.946366,7.559781,-4.650210,6.524175,6.821882,-7.903624,5.203692,8.631739,7.787739,-7.556923,5.614569,-6.748798,-4.096851,0.039311,0.721674,-3.087065,2.667428,-7.225950,-1.841847,-8.401060,-5.250373,2.492216,-7.460346,-1.616871,3.142145,8.228148,-7.086450,0.826552,9.058760,-1.656658,-7.463889,8.644318,-6.191850,8.073268,6.927327,0.901970,7.476334,7.835425,6.769873,1.371082,-2.243856,0.369471,0.551716,-3.005653,1.720417,2.504681,6.781246,-2.419924,-5.941641,-7.997971,1.435662,-5.013927,-1.627520,-8.086396,3.479365,6.415468,6.946797,-5.249128,7.903043,1.599219,3.638086,1.979815,2.874915,-7.133236,7.576546,9.734101,-3.575451,1.488323,7.525540,-3.287975,-6.104764,-7.449629,3.767560,-7.271809,8.471978,9.051590,-7.998983,1.903257,-1.868029,5.582903,7.440203,1.748052,-3.386605,-6.312038,-0.779783,-6.839917,-9.251257,-8.976907,8.653922,7.336784,-1.341272,8.224547,8.697621,-2.418676,5.962669,5.444501,-2.497209,-2.613907,-9.773540,-5.547355,-5.023487,5.040424,-0.339160,-9.858361,-7.320987,-8.125441,-3.423796,7.672262,5.771774,-4.147171,7.661412,3.953572,-4.871887,1.960748,-8.242422,0.502720,-5.692784,-6.895844,2.913282,1.912561,-5.411893,-9.564139,9.837867,-2.255998,-7.452867,7.102105,-1.852430,4.440597,8.080587,7.913710,1.878411,-4.182951,7.986969,-9.695855,2.266646,-8.965253,9.408681,-9.410820,-8.849079,7.686795,5.188323,1.388026,7.323848,-4.851843,4.797822,7.591523,8.917597,-3.418670,-4.256094,9.545271,-9.854077,9.498574,-9.462177,6.714127,-6.684283,3.861193,2.385084,8.234677,-7.404552,5.467695,-3.952480,-6.910427,-0.504032,-9.347118,4.355662,-1.913621,-5.662797,0.068449,-8.013915,0.725076,-4.571328,-2.706247,0.979262,-5.072518,-7.856196,5.328106,-7.970587,-2.726949,9.531530,0.201958,-0.122909,-4.963275,7.199087,3.482864,-1.954069,-6.678740,-4.197964,6.997742,9.573014,3.614692,3.894481,-1.809157,-4.185705,4.819076,7.556995,-4.776694,-7.724784,-4.459520,-1.617282,0.894085,9.277646,6.854928,4.305472,1.184814,1.424251,-4.011831,-1.425380,-2.694946,4.179988,-9.159844,6.390904,-3.002305,0.986937,8.361649,-7.497038,2.457764,9.884561,5.370090,3.319108,4.543741,8.529004,5.995719,-0.853062,-2.481929,1.150636,-5.375255,7.399631,3.391457,-7.235871,6.389756,1.083569,-5.112973,0.642061,3.674977,-3.144742,1.655631,-3.959842,7.763468,5.813807,-4.738797,-8.227906,3.852921,3.419164,1.322767,2.592111,1.140407,4.329942,8.490644,1.091131,8.812338,1.069498,-6.019072,0.335019,-4.448189,2.282967,-1.640630,-7.167660,-9.158063,-9.635036,4.442471,-1.821433,-8.321293,-8.464715,-4.731394,7.525442,9.714699,5.867567,-8.586345,-9.953203,0.626981,-2.086669,2.008901,6.613332,-8.561998,2.834373,5.474298,-4.960072,2.117189,-7.357566,6.112964,0.408921,-9.849825,-0.946232,-6.372654,-9.989654,-2.814034,7.750559,4.208015,2.999392,-7.073836,0.415253,-9.793879,0.536489,-4.725593,-0.341603,4.735429,-4.868413,-7.847178,3.217068,8.581478,-8.187050,-6.680838,-7.588140,-8.001126,7.777334,-3.016961,-2.048230,7.608767,9.933452,7.718413,1.337313,4.145294,6.356399,-8.314127,-3.197542,-5.373896,8.420307,-0.297031,-3.778968,-0.157286,6.628106,-5.047453,9.074135,-5.326923,2.506528,-6.317269,-3.136073,-1.518801,6.159205,-6.408370,3.425219,-7.679064,8.128026,-1.410005,7.307654,-2.542721,0.825630,7.931490,-4.590714,4.887161,8.675816,-1.086044,-4.495739,6.565229,5.806963,1.692286,-8.102615,1.255132,7.497671,4.040651,-1.583913,4.129669,-1.257355,6.179089,-1.309512,-8.307896,-1.921678,-3.018454,-8.047788,6.950640,9.355756,-2.443458,-6.146349,-6.741740,2.014723,8.192070,2.353180,3.234990,9.642600,-6.581372,-1.622161,2.016577,6.743912,5.385314,-5.448467,3.039974,8.634442,2.212497,9.693542,4.345872,-3.495047,0.248645,-7.033916,4.609630,7.679476,9.605843,3.464730,-4.446854,-0.274624,-3.433866,-8.882863,5.611296,3.259670,-7.094954,-6.593625,0.023434,-3.762525,-1.059982,0.975857,-6.693333,1.780885,-5.749730,-0.414907,4.730811,-6.852738,2.979715,3.258177,2.222457,-9.690851,0.838166,3.516557,8.936765,9.053032,-7.446239,5.216723,7.300312,4.674777,2.256229,7.393615,-0.558289,-0.924065,-6.087634,-0.273795,-5.544974,4.939995,6.735119,-5.739030,-7.974109,-7.101127,9.199760,0.770704,-2.712140,-6.089624,6.063222,-4.040122,-2.604428,6.071006,-4.351185,-1.936799,-7.885731,4.421366,-1.368165,-8.990938,5.118537,-9.385220,7.345240,-8.363285,-9.093300,7.815524,-9.220442,3.301142,3.927616,1.155841,6.468115,-8.446203,-1.503468,8.963082,-5.248721,6.366753,6.374669,-6.701786,-6.584822,-2.091292,5.141154,-1.740410,-9.023914,-5.117648,-0.331440,7.527429,3.351280,-0.567080,4.319054,0.638234,0.975068,-0.078382,-8.502953,2.100048,5.876959,9.606746,-4.223717,-9.121744,5.940851,-7.826656,-2.824991,0.448508,2.948428,4.157729,-1.974085,-2.777759,-1.065132,-5.209182,3.605747,6.477076,8.225101,-9.560077,-0.205030,-8.125702,1.864925,8.324179,2.001909,-6.333279,-0.611248,4.397776,-6.395930,6.696208,-6.243671,7.893317,4.338341,-0.805716,0.603016,-1.068019,3.134067,6.681218,8.977021,1.708861,-9.672076,-5.589389,6.824114,6.016643,5.724500,-6.308448,-3.962344,-6.545953,-7.419061,-1.085714,0.898590,9.635765,-5.354286,0.524080,-4.389474,-9.678669,-9.747127,8.825910,-4.078157,6.209343,9.012455,-4.813108,0.909386,-5.100083,6.819562,5.203141,3.577632,-8.922642,-9.014574,-8.287300,-5.570122,3.380305,0.376926,-4.716860,9.016274,9.631071,-2.735823,-1.493078,-2.025632,6.319995,3.725094,-7.406423,-9.222517,-9.877938,5.183967,3.632514,0.776003,-9.272109,8.483809,1.067348,1.556131,-7.593745,-5.909966,3.583332,6.949500,-9.663368,-5.776491,1.273696,1.693646,0.245033,-8.845978,-9.219661,8.191672,-7.403689,-5.302050,2.517014,7.553779,1.146860,-5.161367,-9.515129,4.260341,-0.768551,-9.005042,-7.540949,-3.993460,-9.331022,-7.893583,-1.628479,2.820267,6.925978,-2.564745,1.625247,-9.302208,3.041645,-9.060700,-1.988958,9.429693,2.513731,-1.214555,0.614826,9.328241,-2.139529,3.512655,2.933148,0.507992,-5.130309,0.567479,7.397382,-5.319801,-1.544460,3.064839,-1.048478,3.058592,-4.816412,-6.764172,-4.431617,2.300906,8.613264,-1.696612,0.210332,7.593074,7.348878,-7.064191,-5.250977,-9.452383,9.597994,5.720670,-6.858954,6.414065,3.593925,-4.082536,6.251609,-0.824530,-3.256899,1.536196,-3.008076,7.952074,5.253935,8.923829,-4.323012,-1.249797,5.800566,-0.679802,-7.015915,-7.362929,9.174841,-7.310438,-0.878424,0.313212,1.975059,-8.428295,-1.279720,3.887857,3.263894,4.356922,-7.678591,0.495955,-1.758320,7.986757,9.221760,-6.178171,8.121189,7.316813,5.361219,-5.085898,2.244560,-4.119592,0.236637,6.725932,-6.585709,-9.021465,-3.908498,-5.379495,2.580183,-0.174974,4.648280,0.676594,7.749284,-8.012986,-3.904885,2.498152,-7.005614,9.097133,5.411969,-5.432310,1.370902,6.496272,2.682671,-1.964530,6.666966,0.041497,9.117560,7.232317,-1.599810,2.689004,7.542747,-6.355700,8.925536,5.311460,2.930254,-9.738942,-1.808176,-9.027977,-8.193858,5.263334,9.742804,-0.539508,3.152049,8.865441,-9.355017,-7.364022,0.020316,2.617217,-8.925579,-9.859071,-3.482371,6.831061,-9.544586,-4.345894,-8.912229,-5.693938,3.625037,6.035290,2.295083,-6.696997,7.089338,8.015381,3.327938,1.845292,1.358113,9.863870,2.467621,-7.727478,6.187059,-1.081580,-6.257652,1.515590,0.224342,5.608633,-0.469764,-2.779238,-5.944767,-8.728104,-1.532088,-9.611488,5.950537,-2.315208,-7.692046,-0.584997,4.610017,8.172286,-1.956951,8.368460,4.657649,-4.609981,-2.634951,-5.810692,-3.796402,8.027695,-8.792492,-4.219704,0.597383,-0.589213,9.543444,0.023821,9.799689,2.557294,-2.410035,-9.611592,9.629067,2.969496,4.020977,-2.663613,-6.225880,8.633787,6.393196,9.516981,-1.644042,-1.176145,-7.495353,-0.484313,7.442486,1.871462,1.885443,5.552319,-0.232855,-2.723036,-8.862813,6.527501,-4.656962,-4.278666,-8.852858,0.998745,1.244256,1.972473,2.261819,-5.017519,0.987487,-0.471383,6.264872,6.227171,-0.023812,6.919427,-9.025355,-5.325963,9.199870,1.169014,-0.190061,-4.100152,-0.317071,0.992914,-7.852186,-9.214999,-3.844636,-7.119125,3.695124,9.938437,4.234387,-5.462223,-7.963005,4.168361,0.488294,9.617635,7.136180,-1.743183,6.282160,1.059343,7.627426,1.924152,9.814697,2.933218,8.130120,-5.073611,1.420265,2.669641,3.799358,-4.298542,8.687696,-8.876500,5.009234,-9.362692,4.159689,-0.364593,-5.068722,-0.634914,8.313931,-4.822211,-2.466871,-1.230419,1.927312,1.288118,-6.053738,-2.379428,-4.595746,-7.432034,9.668313,-9.263741,-8.261249,0.196189,5.696903,-2.840678,8.767421,0.500625,-2.925148,6.152091,5.275517,-6.807475,-4.837832,4.427256,-5.624585,6.905827,9.148558,-3.418703,-1.533413,-8.868591,2.976296,9.798164,5.000101,-2.122963,-0.012575,8.952039,6.229358,3.670688,-4.560560,-4.347200,-2.011447,-5.049853,0.415277,1.430512,-7.564397,3.981405,6.097071,-3.105179,-4.547327,-2.431612,6.877304,-2.793505,5.261848,-9.258709,3.236172,-5.275019,-4.778690,9.936773,1.434943,-9.441098,-5.572609,0.241629,-0.469282,-8.245717,3.768801,1.633148], dtype = "float64")#candidate|8606|(1536,)|const|float64
call_8604 = relay.TupleGetItem(func_7049_call(relay.reshape(const_8605.astype('float32'), [14, 7, 5]), relay.reshape(const_8606.astype('float64'), [1536,]), ), 3)
call_8607 = relay.TupleGetItem(func_7053_call(relay.reshape(const_8605.astype('float32'), [14, 7, 5]), relay.reshape(const_8606.astype('float64'), [1536,]), ), 3)
output = relay.Tuple([call_8583,call_8604,const_8605,const_8606,])
output2 = relay.Tuple([call_8584,call_8607,const_8605,const_8606,])
func_8608 = relay.Function([], output)
mod['func_8608'] = func_8608
mod = relay.transform.InferType()(mod)
mutated_mod['func_8608'] = func_8608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8608_call = mutated_mod.get_global_var('func_8608')
call_8609 = func_8608_call()
output = call_8609
func_8610 = relay.Function([], output)
mutated_mod['func_8610'] = func_8610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8515_call = mod.get_global_var('func_8515')
func_8516_call = mutated_mod.get_global_var('func_8516')
call_8611 = func_8515_call()
call_8612 = func_8515_call()
output = relay.Tuple([call_8611,])
output2 = relay.Tuple([call_8612,])
func_8624 = relay.Function([], output)
mod['func_8624'] = func_8624
mod = relay.transform.InferType()(mod)
output = func_8624()
func_8625 = relay.Function([], output)
mutated_mod['func_8625'] = func_8625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8515_call = mod.get_global_var('func_8515')
func_8516_call = mutated_mod.get_global_var('func_8516')
call_8633 = func_8515_call()
call_8634 = func_8515_call()
output = call_8633
output2 = call_8634
func_8643 = relay.Function([], output)
mod['func_8643'] = func_8643
mod = relay.transform.InferType()(mod)
mutated_mod['func_8643'] = func_8643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8643_call = mutated_mod.get_global_var('func_8643')
call_8644 = func_8643_call()
output = call_8644
func_8645 = relay.Function([], output)
mutated_mod['func_8645'] = func_8645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8665 = relay.var("var_8665", dtype = "uint64", shape = (15, 15, 11))#candidate|8665|(15, 15, 11)|var|uint64
var_8666 = relay.var("var_8666", dtype = "uint64", shape = (15, 15, 11))#candidate|8666|(15, 15, 11)|var|uint64
bop_8667 = relay.left_shift(var_8665.astype('uint64'), relay.reshape(var_8666.astype('uint64'), relay.shape_of(var_8665))) # shape=(15, 15, 11)
output = relay.Tuple([bop_8667,])
output2 = relay.Tuple([bop_8667,])
func_8694 = relay.Function([var_8665,var_8666,], output)
mod['func_8694'] = func_8694
mod = relay.transform.InferType()(mod)
mutated_mod['func_8694'] = func_8694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8694_call = mutated_mod.get_global_var('func_8694')
var_8696 = relay.var("var_8696", dtype = "uint64", shape = (15, 15, 11))#candidate|8696|(15, 15, 11)|var|uint64
var_8697 = relay.var("var_8697", dtype = "uint64", shape = (15, 15, 11))#candidate|8697|(15, 15, 11)|var|uint64
call_8695 = func_8694_call(var_8696,var_8697,)
output = call_8695
func_8698 = relay.Function([var_8696,var_8697,], output)
mutated_mod['func_8698'] = func_8698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8624_call = mod.get_global_var('func_8624')
func_8625_call = mutated_mod.get_global_var('func_8625')
call_8724 = relay.TupleGetItem(func_8624_call(), 0)
call_8725 = relay.TupleGetItem(func_8625_call(), 0)
var_8741 = relay.var("var_8741", dtype = "float32", shape = (16, 5, 13))#candidate|8741|(16, 5, 13)|var|float32
bop_8742 = relay.less(call_8724.astype('bool'), relay.reshape(var_8741.astype('bool'), relay.shape_of(call_8724))) # shape=(16, 5, 13)
bop_8745 = relay.less(call_8725.astype('bool'), relay.reshape(var_8741.astype('bool'), relay.shape_of(call_8725))) # shape=(16, 5, 13)
output = bop_8742
output2 = bop_8745
func_8759 = relay.Function([var_8741,], output)
mod['func_8759'] = func_8759
mod = relay.transform.InferType()(mod)
var_8760 = relay.var("var_8760", dtype = "float32", shape = (16, 5, 13))#candidate|8760|(16, 5, 13)|var|float32
output = func_8759(var_8760)
func_8761 = relay.Function([var_8760], output)
mutated_mod['func_8761'] = func_8761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_8796 = relay.TupleGetItem(func_8338_call(), 0)
call_8797 = relay.TupleGetItem(func_8339_call(), 0)
func_1074_call = mod.get_global_var('func_1074')
func_1077_call = mutated_mod.get_global_var('func_1077')
var_8810 = relay.var("var_8810", dtype = "float32", shape = (1, 360))#candidate|8810|(1, 360)|var|float32
call_8809 = func_1074_call(relay.reshape(var_8810.astype('float32'), [5, 9, 8]))
call_8811 = func_1074_call(relay.reshape(var_8810.astype('float32'), [5, 9, 8]))
output = relay.Tuple([call_8796,call_8809,var_8810,])
output2 = relay.Tuple([call_8797,call_8811,var_8810,])
func_8814 = relay.Function([var_8810,], output)
mod['func_8814'] = func_8814
mod = relay.transform.InferType()(mod)
var_8815 = relay.var("var_8815", dtype = "float32", shape = (1, 360))#candidate|8815|(1, 360)|var|float32
output = func_8814(var_8815)
func_8816 = relay.Function([var_8815], output)
mutated_mod['func_8816'] = func_8816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_8825 = relay.TupleGetItem(func_8338_call(), 0)
call_8826 = relay.TupleGetItem(func_8339_call(), 0)
func_8814_call = mod.get_global_var('func_8814')
func_8816_call = mutated_mod.get_global_var('func_8816')
const_8833 = relay.const([2.927891,-1.867295,4.582104,-7.930634,2.863351,-1.172815,-5.872939,-2.073152,4.282988,-2.331146,-7.841503,-3.061091,9.376521,3.970932,-4.373105,0.425423,7.691964,-1.949290,-9.377596,2.074494,0.062385,6.809010,-3.598369,5.582400,-9.314744,-8.023073,-5.367427,-1.732413,5.145698,-8.648083,-7.173874,9.996251,-1.033078,-8.266374,-7.413311,-8.738899,6.280989,6.223718,-1.339928,8.868558,-8.595256,8.124217,7.332609,-9.782492,4.865301,-5.462138,-6.234199,-5.516730,4.763531,2.077245,-1.006160,-9.237764,-4.714790,1.541627,-0.017564,8.703917,-9.689023,7.645425,6.392720,0.023227,0.314480,-3.809636,0.555264,-5.478075,-2.123245,4.877934,2.696953,-8.524135,9.710693,-3.745017,0.742773,2.824791,3.496991,3.083450,-8.670529,0.455137,-8.459940,-3.965308,-3.901626,-3.063830,-0.933841,1.401966,4.037464,9.407646,4.364362,6.323647,-1.319884,1.604507,9.090580,-1.854489,1.711037,8.447095,6.405519,9.207611,-6.752896,-2.073451,4.547530,7.948958,-3.649889,-0.992177,-3.399981,-9.639231,-0.415554,-3.945303,-5.001464,2.068152,1.477082,7.028159,-9.573512,-2.353110,-2.164101,-6.761761,2.488981,1.993992,-1.996489,1.843125,0.591733,2.545041,9.461509,5.995855,-5.847772,3.418670,-4.506717,0.511272,-9.803066,5.546295,-2.154952,-0.187914,3.486809,3.202129,9.301368,0.493220,-3.734571,-6.865205,-5.526403,8.612804,7.237842,-7.770111,5.391094,-0.260814,-5.322909,7.303024,3.733520,-3.612679,2.542590,5.483812,-3.028163,0.646793,5.105938,7.451666,8.338818,0.111754,0.258713,-8.877811,2.894453,-7.468292,9.229603,-4.130978,-0.317236,4.863434,0.538000,-4.369530,9.301000,-1.115020,-5.857392,0.009799,6.532010,-9.271977,-4.259169,3.732961,6.945262,8.366033,3.944921,-1.851109,-8.299147,6.458484,-3.476462,-1.878584,8.817260,-9.352655,-2.683541,-7.528732,-2.939627,-5.695818,5.349902,-1.437930,-5.861587,9.387263,-7.554722,7.984085,-9.230544,-9.124770,-3.456899,-8.635903,0.116489,0.670398,-7.206932,3.251526,-7.253289,-9.879001,-8.590527,5.682973,-9.021877,-9.351720,-2.668741,-3.144948,8.713255,2.024460,5.562925,1.477496,-7.776869,-5.597411,-8.938376,-7.926749,9.258368,4.467640,9.318648,-4.031606,6.342817,-3.378101,-0.578207,-6.913179,9.568024,-7.121237,-1.666251,-5.956129,-7.080341,6.212607,-4.122575,-9.048355,-7.018356,1.713223,-2.865049,-8.190187,9.485531,1.811281,5.362984,5.975690,0.810583,2.172741,8.044155,-8.853348,-3.443609,4.335460,6.791567,-4.738982,5.099261,-2.369150,-4.015062,6.774070,0.776647,7.973783,7.291268,-8.348085,-2.632469,-6.185246,7.704361,-6.813991,-2.445102,-2.729740,8.366263,-3.734589,5.879474,-3.810806,6.256411,9.910302,-2.350387,0.676519,7.522626,-4.366981,2.456701,1.444663,9.061820,-4.301882,8.243404,-6.573154,1.601538,0.370671,3.008031,-2.733665,-4.105333,4.075319,1.945253,-0.842644,-1.539512,-8.931263,9.474275,-6.575465,9.061194,-7.563394,-2.889810,2.612647,0.388504,-3.622643,-1.733784,4.435319,-2.958346,6.908945,2.122434,-2.741875,-4.556379,6.372037,-0.437008,7.372931,-2.869596,0.691543,-4.545262,3.935386,6.108067,-0.581876,-1.056148,-1.452883,-7.607622,-0.885631,7.781491,-9.303081,-0.517992,3.267674,7.194632,-3.473568,3.395553,-9.423712,8.211058,2.200899,8.019650,-9.901553,-2.974635,-8.435877,6.644505,-6.584794,3.289389,-1.003326,9.625407,7.824922,-4.036343,-1.194373,4.458680,7.167609,-2.540998,6.108286,-4.608515,-6.309687,7.636148,-3.177542,6.286795,2.067628,8.832890,-8.430136,-8.609760,6.529458,-5.774484,-1.159743,4.910998,-0.560864,-7.813896,6.592239,1.211360,9.590963,5.332757,7.877732], dtype = "float32")#candidate|8833|(360,)|const|float32
call_8832 = relay.TupleGetItem(func_8814_call(relay.reshape(const_8833.astype('float32'), [1, 360])), 2)
call_8834 = relay.TupleGetItem(func_8816_call(relay.reshape(const_8833.astype('float32'), [1, 360])), 2)
var_8841 = relay.var("var_8841", dtype = "float32", shape = (8, 360))#candidate|8841|(8, 360)|var|float32
bop_8842 = relay.logical_xor(call_8832.astype('uint8'), var_8841.astype('uint8')) # shape=(8, 360)
bop_8845 = relay.logical_xor(call_8834.astype('uint8'), var_8841.astype('uint8')) # shape=(8, 360)
func_3553_call = mod.get_global_var('func_3553')
func_3556_call = mutated_mod.get_global_var('func_3556')
const_8854 = relay.const([0.107473,-2.286224,-9.321613,-2.337527,0.059889,-8.668230,-2.767002,-3.084303,9.242311,-6.077681,5.424289,2.629001,-3.817338,9.940014,-9.682030,-2.410697,2.966074,5.390205,6.216938,-8.514152,8.908036,-8.161504,-1.857392,6.982503,-8.293389,-4.519355,0.665680,9.076025,7.859798,9.199277,6.607919,3.356613,-0.486067,-5.754350,0.778316,-0.288759,9.621451,-6.770945,-2.048485,6.116552,-9.204977,-2.568321,4.935494,2.804184,4.892367,-1.458475,-2.016694,9.447596,2.666959,-7.362161,-7.781840,4.971356,3.753801,1.689501,7.555987,-7.805375,-5.008725,7.775957,3.325822,4.268797,7.982439,2.929031,7.152151,-0.610151,-5.426673,9.698739,3.455682,-1.871557,8.360386,-6.123568,-6.377107,-1.147039,-1.104604,-8.164942,-2.414434,-7.747000,-4.158040,-6.998452,-6.603390,-2.744578,1.785446,6.434157,-2.325202,-5.464770,9.010340,-8.367071,3.485115,8.712818,-6.940069,8.286549,7.480034,-3.810005,7.653766,7.260415,4.985473,-3.978151,-4.133260,9.445685,3.488516,-5.024661,7.228430,-0.198237,0.567462,-6.748325,-8.026547,-0.457501,0.119206,5.687776,5.763704,-6.905124,-6.949237,-9.307474,-8.164007,0.283977,3.683291,-7.945050,-8.219731,6.648576,-9.231139,5.157512,-8.903861,-0.949733,-4.877278,-1.657842,5.958216,-2.394779,-7.689414,-3.706158,-8.947957,-1.658847,7.403148,-1.401163,-4.723012,2.801883,3.204197,8.732974,-0.395750,4.149767,2.622296,9.256962,-8.177768,-1.210042,-9.221491,2.392346,-8.081182,-3.144679,1.839304,1.651438,-6.274404,-0.708170,8.520060,2.038070,-0.615173,-9.199089,9.019241,-7.157894,6.948797,-0.933116,3.834706,-6.996756,4.081657,0.176664,-1.375545,-1.535604,2.097834,-8.092576,-5.279686,-8.355282,5.130355,-4.655213,-0.205386,-1.933806,3.836935,7.350231,9.738748,-2.845424,-4.437614,6.467033,-6.362911,-0.677491,-6.367265,-9.961349,-1.885853,5.913765,9.313520,-0.248322,-6.226683,7.994248,8.297116,-0.297624,4.894300,-4.304732,-3.807196,-9.103877,2.076570,-4.629866,4.823500,7.186322,-4.060438,3.477407,-2.733558,6.171390,8.393328,1.393687,-4.219016,7.064970,-2.578453,7.538148,9.812303,-1.303285,-9.013561,-0.080567,7.641542,-6.892120,6.912248,-4.125591,3.310559,-7.765962,-6.456721,-9.602652,-4.727989,-4.093246,7.526621,6.681708,6.189413,8.600883,5.826496,-3.521718,7.953768,-0.499894,-2.149037,2.250440,-7.831843,-5.861263,0.447470,8.852972,-1.905853,-9.344361,-1.300023,-3.518200,6.790746,0.510529,-7.619933,-6.793842,-4.525554,-9.323802,9.491441,7.037128,6.447206,-6.135742,-9.460045,-2.351781,-8.545896,-8.648839,3.741535,-0.436887,-8.617098,5.513018,6.835040,7.682915,-2.442651,5.323257,5.873873,6.199262,-2.448483,7.618393,-6.711485,-4.727941,-5.799532,6.351516,6.062856,1.191587,7.231657,-1.405686,-4.692709,0.688280,4.127492,-5.293008,5.713425,-4.791748,6.230761,-2.411662,0.263601,-9.388609,9.354302,0.211710,-8.120573,-6.923936,2.624694,-8.524045,-0.208213,-7.373393,-4.596427,-8.394967,0.826008,-5.893277,-1.085226,-8.448894,5.450052,-4.451967,-2.726129,3.510596,-9.627369,-2.359300,2.510340,4.779730,-0.422947,3.691256,-7.843945,-2.210587,-9.316851,-2.733460,6.538325,7.099879,-5.211790,4.673588,2.701503,9.447143,4.116759,-8.352937,-5.295629,-9.062799,4.842976,-0.879292,-4.559733,1.910252,3.314110,2.626879,-7.820424,7.032026,-5.356338,0.704347,9.606691,1.027861,5.559715,4.833798,1.851100,-7.935527,-3.827621,-7.500137,-7.986089,7.131052,-6.899496,-1.007146,1.810660,0.619223,5.934258,-5.150098,2.867244,5.628822,7.918070,-8.577626,-1.091528,2.878010,6.872182,8.143593,-6.515503,2.074553,-1.436072,4.781180,0.721488,0.043300,-9.117702,-3.835326,-9.139908,-2.607984,-9.405231,-4.217513,7.522053,8.865704,-8.317114,-2.345992,-9.432154,5.141383,-2.890696,-3.191937,3.263077,-7.959930,2.646954,3.376297,-8.066209,1.708870,-1.677561,9.878712,-3.441007,5.495515,-1.701654,6.497514,3.649902,8.556513,7.304482,-3.086867,4.568244,-2.138339,6.380883,-7.603707,2.164327,-9.380884,-7.047756,-0.526281,2.570276,8.990478,3.025205,-2.223178,2.328480,-9.141044,1.142332,9.541980,0.244930,-0.171029,0.569937,-9.058389,-2.336695,-4.219440,0.022506,9.320074,-2.835492,-6.083153,9.299142,0.790173,-3.241303,-9.858771,-8.600109,-1.523612,4.497356,-1.736814,-7.113834,-4.895191,7.756761,1.241675,0.985413,6.820757,8.650018,7.002897,-7.973919,4.619157,6.870723,2.540457,9.572982,7.458795,-1.433043,9.728686,4.210668,0.737367,-2.661661,7.605970,-1.871527,-8.164005,-7.682198,-6.403048,-7.520638,9.532898,0.257916,9.267610,-6.735713,-6.984912,-9.715086,8.174666,9.842868,-2.693569,6.713093,5.964842,1.683604,7.130968,3.119204,-9.304101,3.481630,5.112980,-4.390306,6.131503,-1.600969,0.225915,6.430937,-8.353065,-3.661898,5.591909,-1.510108,8.706285,-4.028139,2.239827,-0.499741,3.999313,4.065870,7.338446,0.359528,-1.867630,-2.216284,-6.596322,7.488583,-0.311226,6.194492,2.002922,-8.334218,4.275067,-1.767116,-5.652087,8.637144,-3.452004,1.145146,-6.651735,9.205009,-6.923679,1.533434,9.077611,2.179987,-9.694659,5.958240,-9.315415,-1.978076,-5.596907,-0.233964,6.726173,-3.892833,-1.905329,2.462839,-8.533473,3.714174,-8.017836,4.534140,5.503444,8.067117,-2.060380,-7.373456,-2.379046,-2.122149,3.479142,-3.043717,-9.379953,-7.648901,-0.140008,-9.065574,-6.629289,5.060587,-7.704694,0.054761,6.338758,8.857470,1.577563,-8.044621,-3.520669,1.728942,0.623536,-2.067820,-0.475336,-4.056627,3.734874,-0.972691,-1.494018,-6.661242,-4.911120,1.509629,6.152439,3.017448,-2.236152,-1.861625,0.432843,-8.939654,6.766856,-8.274517,3.470030,-5.556739,3.123399,7.697224,-0.672806,-1.213518,1.634526,-1.763685,-4.501104,0.382197,9.420916,2.688762,7.249587,7.613840,8.192083,3.470602,-3.596670,4.177332,-3.037686,-6.184253,-2.880170,8.706764,-5.278886,-3.795565,-6.114869,2.192993,-2.133564,-0.699576,-7.293360,-6.966679,3.817720,-2.099299,-0.504397,-9.567467,-9.562686,9.503192,7.443143,-4.571241,4.239644,9.777640,6.284143,5.429207,9.735760,9.578132,-2.483030,4.324764,4.032472,0.604979,7.224253,-2.823032,-7.030634,8.375231,5.716236,3.099331,-2.419527,-9.535410,8.799816,4.078387,6.756244,-5.240389,4.957175,0.260101,-6.305222,-4.247524,-6.623716,6.960017,-3.353526,3.415228,1.709486,-7.446122,2.908790,6.053506,3.971298,6.088875,2.267654,-6.122597,-2.113247,-5.054789,-9.803085,-8.568763,3.911136,-8.232362,-3.985248,4.054118,-2.669224,-8.953343,-0.702349,6.527602,-2.346548,-9.688685,-9.853623,-6.705835,3.687001,2.083660,8.030103,-2.453018,-7.193075,6.736439,-6.081243,-7.083545,-5.838989,-3.044067,-7.220590,-4.715354,0.087434,-9.450046,9.346517,-4.781433,7.036964,2.356633,9.601616,-9.396478,-4.929479,1.079142,-9.526559,7.094792,-8.477955,-2.232647,8.291521,8.566973,9.358617,2.232922,8.825450,2.204162,4.711683,2.295401,6.611174,-5.062252,3.743229,-3.270272,6.248293,1.465596,-3.956315,-5.964006,-9.026354,-8.129705,-4.939192,9.722453,9.852770,-3.040035,0.379976,7.399730,9.388250,-9.503177,9.745635,3.263443,-0.040991,-6.823422,-2.897490,2.438348,6.541915,-6.030201,1.364133,3.831671,3.734100,1.405148,8.568447,7.830541,1.851099,-8.349266,-1.482796,0.651756,-4.193248,5.735201,0.100815,3.660544,-5.643352,-5.759790,3.926559,-7.334464,3.069936,4.621647,0.741242,-7.739688,-3.926193,8.084428,-4.110248,-2.837481,0.849027,0.536883,-4.119983,0.042250,-7.468965,-1.344010,7.740417,-7.541317,-2.926371,7.216348,-0.790810,-2.677544,-3.358213,-8.094233,1.991086,0.675076,-6.654809,8.845817,-7.001531,-1.139859,-5.724298,-6.718388,7.878998,-3.143669,5.106557,3.989635,4.439463,-8.165221,-5.056086,-2.118823,8.003679,-5.250135,-0.135109,-8.465754,-3.106644,-4.897519,5.887569,-1.784187,3.690113,9.117236,-7.899869,9.149621,-7.342183,-2.760115,-5.465665,-1.776931,-5.017916,6.362529,-9.424757,2.361563,-3.763374,1.691502,3.755003,6.637846,8.422586,2.319664,5.755426,9.931124,-0.323098,-5.315204,0.811443,3.694662,5.337638,-0.854704,-5.502738,-7.824482,4.592070,5.303920,1.182559,-9.818304,3.487823,8.222874,-3.720541,-4.268701,-2.481815,0.388211,-1.710413,6.299153,7.905222,7.201413,-0.603014,1.038499,-1.705274,-8.380619,1.242461,-3.116885,-9.477620,7.411577,-9.028988,7.257808,9.333267,-3.713125,7.159778,1.312632,-6.288586,5.232279,2.569580,-1.270365,7.516878,8.759218,1.329447,5.461812,2.317609,-9.938279,-2.395328,-4.307888,-9.556209,6.498162,7.096401,4.294455,-9.201222,-1.735807,9.149447,0.062441,0.856926,9.484361,-1.915553,-2.223239,2.422555,1.005562,-0.048947,0.712731,5.464198,0.881768,-4.412868,-2.472900,1.991829,-6.758271,8.523742,1.035509,-5.296603,-1.115910,0.043607,0.120399,1.992500,-1.736450,-3.844629,2.028968,5.466158,-3.239290,0.092019,-4.426215,9.924263,0.614717,-3.945426,0.388473,3.417379,7.883553,-7.142435,4.923960,8.632582,-2.368607,-3.898050,8.956776,-6.720208,7.085711,-3.048930,-8.263494,-3.609602,5.702273,-3.616431,4.834992,-0.183582,-3.884146,4.127375,-8.485235,2.328005,6.468544,-1.046579,9.562083,-3.838829,-8.126140,-9.398065,6.184372,-6.385597,9.326637,2.480950,-9.189572,9.766132,3.379746,6.530570,-3.655576,-8.920314,-4.894077,-0.454808,7.277363,-1.160295,-9.352756,-9.549985,8.163175,-5.884242,0.495774,3.898774,3.148881,-6.370868,-7.368042,-0.151400,-1.414197,-3.120780,-3.412149,5.180492,5.826689,9.648721,-9.459937,9.721583,7.268418,7.523155,-7.024661,-2.397199,1.778737,-7.484935,-1.061057,-6.597509,5.028911,8.949175,-7.037070,2.374226,-4.511313,6.724402,-0.212598,-0.588448,-9.230925,-4.094190,4.959214,-6.042535,4.000643,-3.161127,6.200822,-8.139408,3.426174,-4.425247,-6.023194,9.432326,5.902738,-4.938803,-8.998461,0.928438,-6.109077,5.192451,-6.626261,-0.284075,-0.740020,-4.541015,-4.820397,-0.063136,-0.276637,9.176262,-7.250766,-9.552889,4.497310,5.011493,2.616286,-6.869926,-0.088886,4.892758,3.208502,-6.433910,-5.918379,0.987229,3.250607,-1.264374,3.407241,8.297292,1.910035,5.340911,-7.610587,-3.345680,1.151846,3.272939,-2.796390,-2.278660], dtype = "float32")#candidate|8854|(1008,)|const|float32
call_8853 = relay.TupleGetItem(func_3553_call(relay.reshape(const_8854.astype('float32'), [14, 12, 6])), 0)
call_8855 = relay.TupleGetItem(func_3556_call(relay.reshape(const_8854.astype('float32'), [14, 12, 6])), 0)
func_7359_call = mod.get_global_var('func_7359')
func_7361_call = mutated_mod.get_global_var('func_7361')
var_8867 = relay.var("var_8867", dtype = "bool", shape = ())#candidate|8867|()|var|bool
call_8866 = func_7359_call(relay.reshape(var_8867.astype('bool'), []))
call_8868 = func_7359_call(relay.reshape(var_8867.astype('bool'), []))
func_5244_call = mod.get_global_var('func_5244')
func_5249_call = mutated_mod.get_global_var('func_5249')
var_8871 = relay.var("var_8871", dtype = "float32", shape = (1, 715))#candidate|8871|(1, 715)|var|float32
call_8870 = relay.TupleGetItem(func_5244_call(relay.reshape(call_8866.astype('float32'), [15, 15, 10]), relay.reshape(call_8832.astype('float32'), [6, 60]), relay.reshape(var_8871.astype('float32'), [715,]), ), 8)
call_8872 = relay.TupleGetItem(func_5249_call(relay.reshape(call_8866.astype('float32'), [15, 15, 10]), relay.reshape(call_8832.astype('float32'), [6, 60]), relay.reshape(var_8871.astype('float32'), [715,]), ), 8)
output = relay.Tuple([call_8825,const_8833,bop_8842,call_8853,const_8854,call_8866,var_8867,call_8870,var_8871,])
output2 = relay.Tuple([call_8826,const_8833,bop_8845,call_8855,const_8854,call_8868,var_8867,call_8872,var_8871,])
func_8874 = relay.Function([var_8841,var_8867,var_8871,], output)
mod['func_8874'] = func_8874
mod = relay.transform.InferType()(mod)
mutated_mod['func_8874'] = func_8874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8874_call = mutated_mod.get_global_var('func_8874')
var_8876 = relay.var("var_8876", dtype = "float32", shape = (8, 360))#candidate|8876|(8, 360)|var|float32
var_8877 = relay.var("var_8877", dtype = "bool", shape = ())#candidate|8877|()|var|bool
var_8878 = relay.var("var_8878", dtype = "float32", shape = (1, 715))#candidate|8878|(1, 715)|var|float32
call_8875 = func_8874_call(var_8876,var_8877,var_8878,)
output = call_8875
func_8879 = relay.Function([var_8876,var_8877,var_8878,], output)
mutated_mod['func_8879'] = func_8879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
call_8924 = func_8643_call()
call_8925 = func_8643_call()
func_3529_call = mod.get_global_var('func_3529')
func_3532_call = mutated_mod.get_global_var('func_3532')
var_8952 = relay.var("var_8952", dtype = "float64", shape = (847,))#candidate|8952|(847,)|var|float64
call_8951 = relay.TupleGetItem(func_3529_call(relay.reshape(var_8952.astype('float64'), [7, 11, 11])), 0)
call_8953 = relay.TupleGetItem(func_3532_call(relay.reshape(var_8952.astype('float64'), [7, 11, 11])), 0)
var_8969 = relay.var("var_8969", dtype = "float64", shape = (847,))#candidate|8969|(847,)|var|float64
bop_8970 = relay.mod(var_8952.astype('float32'), relay.reshape(var_8969.astype('float32'), relay.shape_of(var_8952))) # shape=(847,)
output = relay.Tuple([call_8924,call_8951,bop_8970,])
output2 = relay.Tuple([call_8925,call_8953,bop_8970,])
func_8974 = relay.Function([var_8952,var_8969,], output)
mod['func_8974'] = func_8974
mod = relay.transform.InferType()(mod)
var_8975 = relay.var("var_8975", dtype = "float64", shape = (847,))#candidate|8975|(847,)|var|float64
var_8976 = relay.var("var_8976", dtype = "float64", shape = (847,))#candidate|8976|(847,)|var|float64
output = func_8974(var_8975,var_8976,)
func_8977 = relay.Function([var_8975,var_8976,], output)
mutated_mod['func_8977'] = func_8977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_8996 = relay.TupleGetItem(func_8338_call(), 0)
call_8997 = relay.TupleGetItem(func_8339_call(), 0)
output = relay.Tuple([call_8996,])
output2 = relay.Tuple([call_8997,])
func_9004 = relay.Function([], output)
mod['func_9004'] = func_9004
mod = relay.transform.InferType()(mod)
mutated_mod['func_9004'] = func_9004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9004_call = mutated_mod.get_global_var('func_9004')
call_9005 = func_9004_call()
output = call_9005
func_9006 = relay.Function([], output)
mutated_mod['func_9006'] = func_9006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8608_call = mod.get_global_var('func_8608')
func_8610_call = mutated_mod.get_global_var('func_8610')
call_9043 = relay.TupleGetItem(func_8608_call(), 1)
call_9044 = relay.TupleGetItem(func_8610_call(), 1)
output = relay.Tuple([call_9043,])
output2 = relay.Tuple([call_9044,])
func_9054 = relay.Function([], output)
mod['func_9054'] = func_9054
mod = relay.transform.InferType()(mod)
mutated_mod['func_9054'] = func_9054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9054_call = mutated_mod.get_global_var('func_9054')
call_9055 = func_9054_call()
output = call_9055
func_9056 = relay.Function([], output)
mutated_mod['func_9056'] = func_9056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9054_call = mod.get_global_var('func_9054')
func_9056_call = mutated_mod.get_global_var('func_9056')
call_9059 = relay.TupleGetItem(func_9054_call(), 0)
call_9060 = relay.TupleGetItem(func_9056_call(), 0)
func_4724_call = mod.get_global_var('func_4724')
func_4727_call = mutated_mod.get_global_var('func_4727')
var_9083 = relay.var("var_9083", dtype = "uint64", shape = ())#candidate|9083|()|var|uint64
var_9084 = relay.var("var_9084", dtype = "uint64", shape = (1, 1584))#candidate|9084|(1, 1584)|var|uint64
call_9082 = func_4724_call(relay.reshape(var_9083.astype('uint64'), []), relay.reshape(var_9084.astype('uint64'), [11, 12, 12]), )
call_9085 = func_4724_call(relay.reshape(var_9083.astype('uint64'), []), relay.reshape(var_9084.astype('uint64'), [11, 12, 12]), )
var_9090 = relay.var("var_9090", dtype = "uint64", shape = (16, 1584))#candidate|9090|(16, 1584)|var|uint64
bop_9091 = relay.logical_xor(var_9084.astype('uint64'), var_9090.astype('uint64')) # shape=(16, 1584)
func_8694_call = mod.get_global_var('func_8694')
func_8698_call = mutated_mod.get_global_var('func_8698')
var_9100 = relay.var("var_9100", dtype = "uint64", shape = (2475, 1))#candidate|9100|(2475, 1)|var|uint64
call_9099 = relay.TupleGetItem(func_8694_call(relay.reshape(var_9100.astype('uint64'), [15, 15, 11]), relay.reshape(var_9100.astype('uint64'), [15, 15, 11]), ), 0)
call_9101 = relay.TupleGetItem(func_8698_call(relay.reshape(var_9100.astype('uint64'), [15, 15, 11]), relay.reshape(var_9100.astype('uint64'), [15, 15, 11]), ), 0)
output = relay.Tuple([call_9059,call_9082,var_9083,bop_9091,call_9099,var_9100,])
output2 = relay.Tuple([call_9060,call_9085,var_9083,bop_9091,call_9101,var_9100,])
func_9107 = relay.Function([var_9083,var_9084,var_9090,var_9100,], output)
mod['func_9107'] = func_9107
mod = relay.transform.InferType()(mod)
mutated_mod['func_9107'] = func_9107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9107_call = mutated_mod.get_global_var('func_9107')
var_9109 = relay.var("var_9109", dtype = "uint64", shape = ())#candidate|9109|()|var|uint64
var_9110 = relay.var("var_9110", dtype = "uint64", shape = (1, 1584))#candidate|9110|(1, 1584)|var|uint64
var_9111 = relay.var("var_9111", dtype = "uint64", shape = (16, 1584))#candidate|9111|(16, 1584)|var|uint64
var_9112 = relay.var("var_9112", dtype = "uint64", shape = (2475, 1))#candidate|9112|(2475, 1)|var|uint64
call_9108 = func_9107_call(var_9109,var_9110,var_9111,var_9112,)
output = call_9108
func_9113 = relay.Function([var_9109,var_9110,var_9111,var_9112,], output)
mutated_mod['func_9113'] = func_9113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8515_call = mod.get_global_var('func_8515')
func_8516_call = mutated_mod.get_global_var('func_8516')
call_9124 = func_8515_call()
call_9125 = func_8515_call()
func_4547_call = mod.get_global_var('func_4547')
func_4550_call = mutated_mod.get_global_var('func_4550')
var_9140 = relay.var("var_9140", dtype = "bool", shape = (1, 528))#candidate|9140|(1, 528)|var|bool
var_9141 = relay.var("var_9141", dtype = "float64", shape = (1536,))#candidate|9141|(1536,)|var|float64
call_9139 = relay.TupleGetItem(func_4547_call(relay.reshape(var_9140.astype('bool'), [11, 3, 16]), relay.reshape(var_9141.astype('float64'), [384, 4]), ), 4)
call_9142 = relay.TupleGetItem(func_4550_call(relay.reshape(var_9140.astype('bool'), [11, 3, 16]), relay.reshape(var_9141.astype('float64'), [384, 4]), ), 4)
output = relay.Tuple([call_9124,call_9139,var_9140,var_9141,])
output2 = relay.Tuple([call_9125,call_9142,var_9140,var_9141,])
func_9148 = relay.Function([var_9140,var_9141,], output)
mod['func_9148'] = func_9148
mod = relay.transform.InferType()(mod)
var_9149 = relay.var("var_9149", dtype = "bool", shape = (1, 528))#candidate|9149|(1, 528)|var|bool
var_9150 = relay.var("var_9150", dtype = "float64", shape = (1536,))#candidate|9150|(1536,)|var|float64
output = func_9148(var_9149,var_9150,)
func_9151 = relay.Function([var_9149,var_9150,], output)
mutated_mod['func_9151'] = func_9151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8624_call = mod.get_global_var('func_8624')
func_8625_call = mutated_mod.get_global_var('func_8625')
call_9159 = relay.TupleGetItem(func_8624_call(), 0)
call_9160 = relay.TupleGetItem(func_8625_call(), 0)
output = call_9159
output2 = call_9160
func_9169 = relay.Function([], output)
mod['func_9169'] = func_9169
mod = relay.transform.InferType()(mod)
mutated_mod['func_9169'] = func_9169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mutated_mod.get_global_var('func_9169')
call_9170 = func_9169_call()
output = call_9170
func_9171 = relay.Function([], output)
mutated_mod['func_9171'] = func_9171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8608_call = mod.get_global_var('func_8608')
func_8610_call = mutated_mod.get_global_var('func_8610')
call_9185 = relay.TupleGetItem(func_8608_call(), 3)
call_9186 = relay.TupleGetItem(func_8610_call(), 3)
output = call_9185
output2 = call_9186
func_9194 = relay.Function([], output)
mod['func_9194'] = func_9194
mod = relay.transform.InferType()(mod)
output = func_9194()
func_9195 = relay.Function([], output)
mutated_mod['func_9195'] = func_9195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8624_call = mod.get_global_var('func_8624')
func_8625_call = mutated_mod.get_global_var('func_8625')
call_9242 = relay.TupleGetItem(func_8624_call(), 0)
call_9243 = relay.TupleGetItem(func_8625_call(), 0)
output = call_9242
output2 = call_9243
func_9244 = relay.Function([], output)
mod['func_9244'] = func_9244
mod = relay.transform.InferType()(mod)
output = func_9244()
func_9245 = relay.Function([], output)
mutated_mod['func_9245'] = func_9245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_9285 = func_9169_call()
call_9286 = func_9169_call()
uop_9297 = relay.atanh(call_9285.astype('float64')) # shape=(16, 5, 13)
uop_9299 = relay.atanh(call_9286.astype('float64')) # shape=(16, 5, 13)
output = uop_9297
output2 = uop_9299
func_9336 = relay.Function([], output)
mod['func_9336'] = func_9336
mod = relay.transform.InferType()(mod)
mutated_mod['func_9336'] = func_9336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9336_call = mutated_mod.get_global_var('func_9336')
call_9337 = func_9336_call()
output = call_9337
func_9338 = relay.Function([], output)
mutated_mod['func_9338'] = func_9338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8515_call = mod.get_global_var('func_8515')
func_8516_call = mutated_mod.get_global_var('func_8516')
call_9346 = func_8515_call()
call_9347 = func_8515_call()
output = relay.Tuple([call_9346,])
output2 = relay.Tuple([call_9347,])
func_9352 = relay.Function([], output)
mod['func_9352'] = func_9352
mod = relay.transform.InferType()(mod)
mutated_mod['func_9352'] = func_9352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9352_call = mutated_mod.get_global_var('func_9352')
call_9353 = func_9352_call()
output = call_9353
func_9354 = relay.Function([], output)
mutated_mod['func_9354'] = func_9354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8624_call = mod.get_global_var('func_8624')
func_8625_call = mutated_mod.get_global_var('func_8625')
call_9418 = relay.TupleGetItem(func_8624_call(), 0)
call_9419 = relay.TupleGetItem(func_8625_call(), 0)
output = relay.Tuple([call_9418,])
output2 = relay.Tuple([call_9419,])
func_9436 = relay.Function([], output)
mod['func_9436'] = func_9436
mod = relay.transform.InferType()(mod)
output = func_9436()
func_9437 = relay.Function([], output)
mutated_mod['func_9437'] = func_9437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9004_call = mod.get_global_var('func_9004')
func_9006_call = mutated_mod.get_global_var('func_9006')
call_9461 = relay.TupleGetItem(func_9004_call(), 0)
call_9462 = relay.TupleGetItem(func_9006_call(), 0)
func_9244_call = mod.get_global_var('func_9244')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_9466 = func_9244_call()
call_9467 = func_9244_call()
output = relay.Tuple([call_9461,call_9466,])
output2 = relay.Tuple([call_9462,call_9467,])
func_9468 = relay.Function([], output)
mod['func_9468'] = func_9468
mod = relay.transform.InferType()(mod)
output = func_9468()
func_9469 = relay.Function([], output)
mutated_mod['func_9469'] = func_9469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_9473 = func_9169_call()
call_9474 = func_9169_call()
output = call_9473
output2 = call_9474
func_9476 = relay.Function([], output)
mod['func_9476'] = func_9476
mod = relay.transform.InferType()(mod)
output = func_9476()
func_9477 = relay.Function([], output)
mutated_mod['func_9477'] = func_9477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_9496 = func_9169_call()
call_9497 = func_9169_call()
output = relay.Tuple([call_9496,])
output2 = relay.Tuple([call_9497,])
func_9502 = relay.Function([], output)
mod['func_9502'] = func_9502
mod = relay.transform.InferType()(mod)
mutated_mod['func_9502'] = func_9502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9502_call = mutated_mod.get_global_var('func_9502')
call_9503 = func_9502_call()
output = call_9503
func_9504 = relay.Function([], output)
mutated_mod['func_9504'] = func_9504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8608_call = mod.get_global_var('func_8608')
func_8610_call = mutated_mod.get_global_var('func_8610')
call_9505 = relay.TupleGetItem(func_8608_call(), 2)
call_9506 = relay.TupleGetItem(func_8610_call(), 2)
output = relay.Tuple([call_9505,])
output2 = relay.Tuple([call_9506,])
func_9510 = relay.Function([], output)
mod['func_9510'] = func_9510
mod = relay.transform.InferType()(mod)
output = func_9510()
func_9511 = relay.Function([], output)
mutated_mod['func_9511'] = func_9511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9336_call = mod.get_global_var('func_9336')
func_9338_call = mutated_mod.get_global_var('func_9338')
call_9523 = func_9336_call()
call_9524 = func_9336_call()
var_9529 = relay.var("var_9529", dtype = "float64", shape = (16, 5, 13))#candidate|9529|(16, 5, 13)|var|float64
bop_9530 = relay.bitwise_xor(call_9523.astype('uint64'), relay.reshape(var_9529.astype('uint64'), relay.shape_of(call_9523))) # shape=(16, 5, 13)
bop_9533 = relay.bitwise_xor(call_9524.astype('uint64'), relay.reshape(var_9529.astype('uint64'), relay.shape_of(call_9524))) # shape=(16, 5, 13)
output = relay.Tuple([bop_9530,])
output2 = relay.Tuple([bop_9533,])
func_9535 = relay.Function([var_9529,], output)
mod['func_9535'] = func_9535
mod = relay.transform.InferType()(mod)
mutated_mod['func_9535'] = func_9535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9536 = relay.var("var_9536", dtype = "float64", shape = (16, 5, 13))#candidate|9536|(16, 5, 13)|var|float64
func_9535_call = mutated_mod.get_global_var('func_9535')
call_9537 = func_9535_call(var_9536)
output = call_9537
func_9538 = relay.Function([var_9536], output)
mutated_mod['func_9538'] = func_9538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8624_call = mod.get_global_var('func_8624')
func_8625_call = mutated_mod.get_global_var('func_8625')
call_9540 = relay.TupleGetItem(func_8624_call(), 0)
call_9541 = relay.TupleGetItem(func_8625_call(), 0)
func_4592_call = mod.get_global_var('func_4592')
func_4596_call = mutated_mod.get_global_var('func_4596')
var_9546 = relay.var("var_9546", dtype = "int8", shape = (2880,))#candidate|9546|(2880,)|var|int8
call_9545 = func_4592_call(relay.reshape(var_9546.astype('int8'), [15, 12, 16]), relay.reshape(var_9546.astype('int8'), [15, 12, 16]), )
call_9547 = func_4592_call(relay.reshape(var_9546.astype('int8'), [15, 12, 16]), relay.reshape(var_9546.astype('int8'), [15, 12, 16]), )
func_8482_call = mod.get_global_var('func_8482')
func_8486_call = mutated_mod.get_global_var('func_8486')
var_9553 = relay.var("var_9553", dtype = "float32", shape = (360,))#candidate|9553|(360,)|var|float32
var_9554 = relay.var("var_9554", dtype = "uint64", shape = (1584,))#candidate|9554|(1584,)|var|uint64
call_9552 = relay.TupleGetItem(func_8482_call(relay.reshape(var_9553.astype('float32'), [6, 60]), relay.reshape(var_9554.astype('uint64'), [1584,]), ), 1)
call_9555 = relay.TupleGetItem(func_8486_call(relay.reshape(var_9553.astype('float32'), [6, 60]), relay.reshape(var_9554.astype('uint64'), [1584,]), ), 1)
func_9148_call = mod.get_global_var('func_9148')
func_9151_call = mutated_mod.get_global_var('func_9151')
var_9558 = relay.var("var_9558", dtype = "bool", shape = (528,))#candidate|9558|(528,)|var|bool
const_9559 = relay.const([8.209069,2.402931,-2.344556,-0.923956,8.896154,3.956127,4.191567,-3.027651,0.665941,4.976180,-8.822533,-6.191092,9.429050,8.317645,-3.268154,-5.131371,6.922545,-9.826321,-4.615339,-2.365181,8.007448,-6.977553,-0.647392,8.937445,0.381870,1.463325,-2.307453,0.948470,1.285686,-1.192345,1.569864,6.885532,-3.443318,-7.010056,-0.010382,-9.081341,2.663266,-7.146294,7.516461,3.149302,-7.578981,9.301517,-1.985638,-7.443654,9.527004,6.199230,3.870310,9.631311,-9.729576,1.356278,6.928083,-1.872057,-9.600986,-0.219530,-6.289335,-0.623997,-5.230360,4.240375,-9.578832,-4.428612,-1.412536,2.028847,-9.799187,7.172119,-6.892783,-2.411427,-2.931344,-2.791989,6.801908,7.334875,-0.251016,2.784600,7.039182,-5.095250,-8.783577,7.032512,-8.859442,6.428310,-0.541286,-4.237757,3.201729,-2.591760,4.386492,-9.469163,3.156095,2.025242,1.964513,2.162417,5.019340,5.973684,-9.953169,4.688289,7.249606,-0.823419,3.376029,-5.589419,6.286997,5.886363,-5.973094,9.083744,2.494591,0.409212,1.760634,2.233100,-2.021126,3.354679,3.599776,-9.616729,2.785044,-9.348036,3.684586,8.158822,7.790259,5.267330,-9.277339,-1.117719,0.075680,-0.118095,-0.967467,-2.178050,-9.414444,9.125325,-0.147052,-6.099175,-7.635420,-8.519588,-5.084488,-4.633062,-7.498309,9.214492,8.528179,-4.792836,3.057530,3.985402,-1.509778,5.199894,4.466872,0.013701,-7.395000,4.309845,-4.529732,-4.949973,9.358235,3.005805,-4.963371,-4.069312,-0.482193,6.802637,-2.965871,7.292967,-1.695702,8.565399,0.975260,8.642501,1.254633,1.577681,-8.198102,-7.568349,-8.873170,-4.918711,-1.443540,-7.070476,4.727744,-3.840996,5.379572,3.844248,-6.900066,4.476500,5.441316,5.394352,-5.059462,-1.359733,-8.460923,-3.917514,-8.832625,-1.764745,-0.888911,6.771777,-7.624947,4.050392,2.612895,4.878839,8.067398,-1.432381,8.748476,3.077922,-8.984045,-3.333020,-0.669210,7.414936,1.452789,4.288788,0.461446,-9.238999,1.559621,6.482457,-1.102140,-2.062161,9.092900,-9.804352,9.337863,-7.467583,1.589521,-6.209424,-8.561457,4.910078,3.783162,3.611130,1.532194,-8.251366,2.830999,-1.215112,-7.516418,5.812824,6.040459,-3.494599,-6.175787,-8.160051,-0.961660,2.393933,-3.831104,-7.322738,-9.601375,-1.281791,7.261366,-0.706684,-5.007702,-1.487927,6.985076,4.846634,1.810790,6.639505,-1.259010,-3.895262,9.206865,0.882795,-5.734782,7.053768,9.979813,-8.410907,8.904547,5.277210,2.795028,-0.278072,-3.215705,3.728967,-4.163469,7.145216,-6.137373,7.694513,5.499940,-1.830895,-3.394310,-6.125197,0.695290,3.062118,2.285250,6.179896,-1.885619,-1.420253,4.325172,0.270360,-4.896166,-3.022241,-9.795445,-5.220625,5.207930,9.308830,5.261579,0.378918,-4.003628,1.128800,-0.821648,8.084906,-9.873363,4.442945,9.763900,3.256217,8.696531,7.345685,4.195040,1.007037,-3.094006,2.824827,3.157477,-1.483390,8.209437,6.395067,-6.203325,-4.122557,-6.120755,-5.605795,-3.873067,-9.276843,-8.255057,2.415873,1.277273,-0.333069,1.371570,4.625725,-5.883961,6.783432,8.142829,4.742636,6.662559,9.855784,8.466743,3.743662,7.942856,1.356001,3.306118,-1.822403,-0.317128,-9.885501,-0.199687,-2.661901,-9.438879,-5.802333,-5.613148,1.428893,5.984057,-3.209648,1.809940,0.977313,3.672888,-0.905088,9.202169,8.553317,0.799827,-2.669949,-2.680527,-2.962394,-7.745243,-2.311568,8.916024,-3.562689,-0.351384,6.949244,-1.173460,8.952379,-4.129895,5.750578,-5.215956,4.128976,-4.987676,3.500596,-4.163752,0.151340,-0.772923,3.352920,-7.269902,-9.345010,-1.575742,-9.928897,-0.053763,-6.140195,4.363860,2.671170,9.522255,7.298483,-8.108893,-9.858476,-4.108428,8.866525,0.331762,-6.198178,-4.911831,5.036587,4.715271,8.128549,3.480090,-4.410409,8.253240,-2.731778,-8.106691,0.128435,-2.577670,0.650725,4.415227,4.101190,2.066608,-8.525122,-2.759514,1.318538,3.996618,-4.487689,-9.285344,5.526018,-2.155844,-4.414171,0.421549,8.945906,9.408203,7.711994,3.308015,-6.921719,-1.552807,-9.232921,-4.257530,-8.372745,-4.614259,-7.916826,3.895930,5.629482,3.393244,-7.851059,3.729445,-6.363914,-1.876898,5.078526,-6.483762,0.922895,9.440029,4.602156,1.332042,8.393157,-4.378359,-8.844228,-3.221104,6.935510,-2.417088,-8.226297,1.445834,-7.572661,-4.299407,7.118760,3.433799,-8.807539,-7.742388,-0.977636,3.456367,-1.764213,1.336957,-1.275943,-4.613646,8.936481,0.925754,-2.305099,-0.822192,2.027079,-5.196111,7.080372,9.248634,-8.631114,-2.689104,4.145183,1.309992,9.872355,-9.416184,-8.394693,-5.208828,4.854753,9.799074,-7.345300,9.311096,8.011488,7.575890,2.524215,-6.804802,-8.391844,4.627434,-5.544155,5.457438,9.260845,3.668503,-5.178829,-3.925696,-7.109731,5.659890,9.700665,-9.619675,1.524550,-9.517050,-0.507687,-4.047098,7.003367,-8.288766,-3.773186,8.429958,2.751197,8.695271,-3.127378,-2.098876,-6.172842,-3.076487,-6.683732,-0.898414,-9.055585,-8.666851,6.231667,7.725607,-6.085922,-7.475614,-2.319562,5.310955,2.332946,4.807496,-1.883581,-0.542076,-2.967611,-6.412111,4.922337,-0.913961,4.601178,-5.035023,6.144522,4.180898,3.950967,8.960430,-4.872535,9.533450,3.524231,4.270902,-3.009120,-5.868679,-0.495462,7.937537,6.057700,1.126731,5.853734,7.591336,-5.689853,-4.142815,5.743412,7.143091,-7.859163,6.935815,0.734732,5.350798,-7.931545,-1.260465,4.692937,-6.479857,4.016968,8.709954,4.010215,-4.257111,-7.357724,0.588197,-5.348766,6.319456,8.775848,-6.242595,7.052723,1.673683,-0.849583,8.342729,2.626735,-0.798514,9.301105,3.191932,4.967013,-6.182338,7.406277,0.153351,-0.746475,-8.922834,7.403919,0.101181,4.117684,-3.624497,-9.603559,5.266985,6.969706,7.475691,3.438486,1.123609,-5.703352,-9.543690,0.752067,7.743621,-8.779618,0.328900,-1.684200,1.023440,7.274586,0.433643,0.230153,-2.861154,8.495086,8.813233,-7.227085,9.451202,1.075983,-5.457666,6.811438,-1.459751,-2.734015,3.855031,-4.555639,-4.189340,-1.348349,-2.564208,-6.362062,-7.783659,-7.160586,-2.978891,-4.091880,4.481441,-5.171578,-0.215610,3.134008,3.448532,-2.396306,-6.560161,0.120000,2.313638,9.670202,4.701172,-8.273781,7.046403,-3.124576,6.865772,6.163303,-6.605619,9.883103,0.856962,4.089471,-7.312600,6.206717,4.542253,2.751566,-7.246526,-3.602233,-6.780498,7.880338,4.934858,8.679004,-5.900067,7.607777,-1.919991,7.620474,5.872951,4.152623,-8.384712,-8.170372,9.297154,-1.405564,-9.445199,-1.333011,7.886326,-6.304584,9.927808,-7.105778,-8.806385,-2.770010,-1.279145,-2.806593,-4.975229,4.104537,-7.086092,-6.580883,1.983201,0.683671,8.989734,-2.613448,0.372177,6.247037,-2.312732,-2.934210,5.050013,-2.140686,-7.835779,9.764918,-6.122898,-7.913019,7.458927,-2.021828,5.243869,-3.123374,3.923488,-7.259282,-9.736939,2.626850,1.542421,3.586795,-2.144998,-4.441568,9.433055,-5.385650,-9.638967,-9.258357,3.613552,-6.487925,4.731222,-7.317885,6.951440,4.613580,-8.686205,-4.674243,6.880774,2.112889,4.344297,-8.200477,1.610679,-6.681155,2.638320,1.492492,-5.532456,-7.929784,2.054411,-1.471927,1.088280,-4.174782,0.900358,6.625648,-7.223952,-3.090873,-6.540745,-6.582465,3.633685,4.835879,-7.260515,-5.069090,-7.082930,-7.470935,7.822106,-8.782177,-6.751275,-6.506780,5.187939,-1.897536,-7.526952,-4.721212,-0.608854,6.077364,3.762181,-9.816573,5.427143,-1.605330,3.201367,9.066626,-8.481016,2.711533,-5.808962,-1.170562,5.138604,-3.741454,3.976584,-7.252968,0.321186,-5.558803,-4.024562,-8.587622,8.897154,1.950376,0.242428,5.413088,-2.784155,8.552351,-9.442049,6.275733,-2.493061,-6.323094,-4.221331,1.288314,-0.399646,-7.036607,7.067489,-2.888037,-2.919763,3.095029,9.813116,0.146647,-1.404647,-8.865320,-6.236490,-0.176695,7.463732,-6.916932,-1.766705,-1.230759,4.420548,6.132310,3.362854,3.328686,-9.464000,-1.059591,6.115639,6.486562,-5.935309,1.000967,3.774301,3.085339,-1.423066,-7.225115,-5.001063,3.917615,-7.001431,-1.426783,-4.819959,5.620246,-1.289759,-9.742939,8.021957,4.461730,-4.067778,-8.409554,1.859854,-6.251022,4.056446,-3.897131,2.556469,-8.860803,-4.702405,-6.727464,-7.563399,9.556378,5.160284,7.250050,-4.269775,-5.612456,7.465112,-8.897609,-9.434316,-2.197300,-3.993665,3.511161,-0.379330,1.796361,-3.812430,2.495749,2.544395,-1.537164,8.715922,2.783031,-8.211818,-3.318507,-2.817402,-2.818516,8.505588,-5.726690,1.653235,-6.011529,0.189463,7.747638,2.906596,2.086333,1.178384,6.959558,9.543230,-4.690711,-0.227553,0.841317,-7.573600,6.386703,-2.099863,4.925135,-6.134533,7.900858,1.896179,7.718189,9.161881,0.685185,-5.668333,7.887210,7.137013,-4.869614,-2.317308,-3.396025,3.498081,4.229774,9.738060,-5.327123,-3.390656,-4.768145,-1.992163,-5.574645,-4.821950,-5.809444,-5.763205,-7.064543,-2.625680,7.062165,-5.773163,6.970012,6.122050,9.754841,0.019204,-9.974323,8.180949,4.268209,8.406484,6.256180,0.452804,-6.345615,-6.896951,3.280989,5.873849,8.675550,-9.759846,-8.952660,3.249004,-8.218019,4.240699,-4.100160,5.846986,-0.885445,4.466459,-6.626315,4.617055,-6.844257,2.867798,-3.408625,-8.154598,-4.890830,-0.171139,1.721438,-9.324601,-9.509530,-7.696490,-8.337647,-3.187822,-2.872353,7.128855,-9.123799,-1.001782,-0.413877,-7.113747,-1.564812,-3.775311,6.050381,8.262397,2.445750,5.192363,6.283664,-3.379336,2.439428,-6.288832,0.228215,5.661594,2.140821,-2.553498,0.078739,-1.668152,-3.393768,8.394418,-7.360478,-2.788697,-0.100472,1.486366,1.381440,-4.777291,4.944534,9.468610,-9.236204,-5.940107,-8.365439,5.658996,-1.822091,9.075350,-8.402457,-4.065505,-6.306263,-8.600552,-6.584903,-7.737562,-1.311875,6.331919,-8.837251,-1.581821,7.915928,-3.397085,7.376078,2.152826,4.675269,-9.799883,5.974795,-9.541178,4.353394,8.454242,7.489288,-0.870289,-6.642271,8.063376,-4.000407,3.884795,-3.955512,5.212583,6.295998,0.512040,8.438716,-3.175250,4.312507,-1.134485,-7.667670,-3.493336,-8.563699,1.223432,-5.009241,8.238400,-0.551448,-1.484124,-4.420821,-8.482486,9.796674,-4.745132,-9.781825,0.438497,-0.039010,-2.689872,0.044634,-0.928354,1.485093,-9.737744,-7.490739,-9.096725,-9.647401,7.236045,-5.764668,-0.819408,-5.979154,8.521786,-8.464399,-1.890179,-6.777320,4.648055,0.025182,3.288402,1.349351,9.315319,3.648103,-5.307739,-9.726246,-9.494507,3.113812,-9.034167,-9.989498,-7.146632,3.010254,9.882083,-8.850699,5.647677,-8.919611,-2.868198,4.400134,6.947939,-4.946105,-1.579223,6.764204,1.517936,-6.587323,-5.267991,9.803682,3.518121,5.378505,6.245215,8.265084,-4.672234,2.416431,3.663298,-4.249462,-7.483719,-5.341012,3.695133,0.859049,-4.051477,3.346965,-7.656987,-1.382846,6.300704,-6.486308,5.491454,0.799918,8.423343,-7.425337,0.437984,0.940921,7.855712,7.906108,-0.343863,-8.105567,-8.251680,0.975948,-4.892216,-6.346580,-8.806241,-3.574765,-0.753015,8.703573,2.294984,-6.770413,-2.151408,-3.424968,3.124023,-8.281236,-3.280265,-5.226759,-5.715879,-3.582930,2.559024,-7.785863,1.686593,7.462792,9.240040,-5.562177,6.793361,3.263622,-5.545610,8.413547,8.107166,0.004331,-6.082083,-3.573750,-4.679143,-8.624179,4.540980,9.757529,5.279653,-1.927760,6.174984,8.251189,8.765266,-5.294795,-8.365615,7.886704,8.920272,-1.929415,9.959341,5.826256,9.826837,1.143499,-0.538726,7.994456,-9.042970,-1.783933,-2.733979,-0.233273,7.431982,-9.560512,-5.039101,0.195642,-9.605920,-4.664398,6.675038,9.799308,5.569829,9.197589,9.828655,2.894937,6.007310,0.214875,-3.224428,8.174169,-0.103264,4.312232,-8.874586,2.175623,-5.583526,-9.899764,9.832748,-6.927577,-6.445648,-7.388077,4.169339,8.407159,-5.096163,-5.587765,-4.571909,-2.144148,5.542564,-8.914576,-7.265051,0.892396,3.849670,-5.582049,6.057958,7.956608,2.438153,-3.252586,0.459399,7.926733,-0.292674,-0.485797,8.850014,-6.456149,5.031615,-5.032168,-4.107456,-0.112410,6.073855,-6.152768,-8.861013,9.244917,1.233874,-7.616168,8.939203,-1.902288,7.251647,1.953298,7.504167,-4.008009,-0.266998,9.894556,-1.251537,-0.533922,-7.137612,-1.423580,-4.640472,-7.884529,8.749638,-0.166825,-2.007375,7.527055,-8.303547,3.073900,-9.951478,-8.536773,-5.412406,7.175674,2.391678,1.430572,-8.499494,-5.375943,7.582298,-3.973959,4.473667,5.849599,-2.904711,-7.110299,7.718260,-4.833852,2.999666,-8.696122,-4.705142,-2.856365,1.185684,-7.478062,7.350344,-6.052975,5.817534,-7.870499,-6.169200,8.638458,-5.752210,6.206392,1.603895,5.440658,-2.269806,-7.756931,7.665725,-4.272681,-2.851063,-2.854554,-5.942845,-0.545445,5.867881,-3.957020,4.063899,-1.327913,1.392896,0.155556,-2.356657,5.079496,6.171344,1.620825,-1.039338,7.325553,-9.213421,9.470421,2.099739,3.512645,-8.161252,-2.167292,2.440704,6.596449,-1.361277,6.511686,2.682333,9.773258,-1.998057,9.420226,-5.491658,-5.234428,-0.086122,2.779781,6.834708,-5.812746,7.690477,0.752697,-3.298505,3.458842,-2.455152,6.192301,-7.009239,-1.264905,3.376557,2.944940,-1.733502,3.598068,7.684850,-4.979749,5.545008,-2.485944,5.972237,1.399167,-2.904362,-2.662288,5.894523,-9.262462,-0.726788,-5.438007,-8.366923,-5.833132,6.392684,9.527960,-9.371124,-0.336743,6.879627,-0.984501,-2.470804,-8.219405,0.191799,4.236790,-8.652506,-3.976359,-5.699644,-1.037725,-3.060657,-0.855956,-8.830722,0.863626,4.919401,-0.921446,-1.802176,-9.289709,-5.210553,-5.615220,2.426789,-2.086709,7.266781,1.558440,-3.776500,3.976200,-6.654879,-7.176531,4.927283,6.267709,8.853172,8.263549,3.140806,6.751240,-5.921550,9.158916,4.203638,7.118067,-7.325068,4.778450,3.798772,7.951022,-8.184826,-5.550640,1.811697,-5.886586,-4.270649,7.594014,3.286580,0.983560,-0.295580,-2.907525,3.347457,-3.424510,-0.558360,-7.749019,-6.908514,5.699879,0.315240,0.404237,6.466144,-2.514838,0.469204,8.329822,-9.234679,0.965514,2.530179,-6.817445,9.932037,-7.352326,-1.568175,3.437439,2.979561,6.039606,7.175482,6.378798,4.280130,-7.774369,1.499497,1.299430,-6.043613,-0.680723,-2.188068,-9.812539,-7.558127,5.849590,1.189170,7.719463,8.246747,-3.102418,9.920855,-6.073047,1.957673,-5.371702,-1.420199,-2.799754,-2.521682,0.648445,5.994059,-9.358954,-6.710136,4.190070,2.622805,-9.435059,2.601439,2.738941,2.387150,0.688027,-2.561455,3.605403,-9.763154,8.809767,7.798253,0.389967,0.767418,-5.562034,-0.767057,9.700041,-2.699822,-8.978300,-0.608127,6.178475,7.564034,-7.258841,-6.635859,5.332468,6.003217,9.516694,9.344724,-7.741324,-4.090141,-7.776654,-1.796009,-2.315802,-3.842162,-0.222686,-3.068026,-6.639279,0.544290,5.973754,-5.033678,-5.699900,-2.549568,-0.660926,-6.065739,-9.303344,6.438298,3.706960,-7.895935,7.998612,3.451025,-7.650280,6.275709,6.775755,5.590639,-2.205004,9.472932,-8.325488,-6.516516,1.297217,1.735214,9.305174,6.108794,-8.370692,1.477173,-3.640208,0.619973,-5.625154,3.766295,2.707905,0.227662,-5.189913,-0.426307,-2.244081,-5.676634,-7.149721,6.095125,-6.136511,-5.734249,-8.423867,-2.452118,-7.394982,2.125533,-2.957357,9.450391,-7.913109,2.018362,0.213586,6.071866,-5.864430,-9.387478,1.738015,9.920235,-3.589725,-7.079542,4.019722,6.662711,-7.588818,-7.967777,2.193887,9.510964,-5.483077,-3.287117,-2.021521,7.641928,2.228741,8.293892,9.807675,9.381914,6.006143,5.597001,-6.871671,-4.176062,1.849955,-2.458490,-4.429320,-0.783801,-3.735622,3.838691,-9.732122,-8.007943,-7.708081,-2.435268,-0.388647,4.351479,9.771042,-9.513161,1.360497], dtype = "float64")#candidate|9559|(1536,)|const|float64
call_9557 = relay.TupleGetItem(func_9148_call(relay.reshape(var_9558.astype('bool'), [1, 528]), relay.reshape(const_9559.astype('float64'), [1536,]), ), 1)
call_9560 = relay.TupleGetItem(func_9151_call(relay.reshape(var_9558.astype('bool'), [1, 528]), relay.reshape(const_9559.astype('float64'), [1536,]), ), 1)
uop_9564 = relay.tan(var_9554.astype('float64')) # shape=(1584,)
bop_9577 = relay.bitwise_or(uop_9564.astype('uint64'), relay.reshape(var_9554.astype('uint64'), relay.shape_of(uop_9564))) # shape=(1584,)
func_3529_call = mod.get_global_var('func_3529')
func_3532_call = mutated_mod.get_global_var('func_3532')
const_9582 = relay.const([-3.250997,-3.911234,-6.209727,8.582404,6.302633,4.125020,2.114951,-9.354211,7.638994,0.288174,1.486913,-9.427444,6.251173,-0.161169,9.657745,-0.923456,2.338010,-0.872004,-2.309654,-5.649153,-8.257453,-9.659090,6.033300,-6.384254,2.330365,4.075802,-7.002569,-4.378156,3.126920,-0.170560,8.745714,-6.223246,6.917492,-6.211225,-9.269432,0.539713,-6.826973,1.371327,-0.301964,9.051280,9.805415,0.085833,-9.241780,4.129398,-5.533314,3.749942,9.027161,-5.909765,-8.917439,-7.430349,-3.638587,6.715641,-9.226353,-8.262093,4.702784,-2.896942,7.530857,-8.945159,-7.134128,5.633832,7.183364,-6.577426,-2.881839,-6.627427,1.610464,-8.377132,-8.221231,-0.358564,-8.224035,-4.868492,-8.809427,-2.551435,-8.612661,-7.619239,-0.232406,5.341553,-1.427303,-3.160617,-2.185175,7.306562,-3.236513,1.261387,-2.230808,8.452297,8.971947,-3.757623,-0.523013,7.095567,2.491805,0.300920,3.177913,4.364743,-4.479936,-4.820065,-1.645611,-9.430144,1.656474,-7.014204,-3.435710,-9.801284,0.332310,3.153476,5.618009,-8.315415,-7.208153,8.280447,-0.804432,1.728310,-2.324471,0.847907,-7.399653,7.590485,-5.983987,2.799735,4.805872,-0.891067,-0.332193,9.480303,-5.395225,-6.089395,0.871644,-6.134380,-9.006917,6.162209,5.181455,-8.366319,-9.001492,-2.647995,0.015545,1.106715,8.216137,5.777236,-3.484824,-8.820656,-6.807053,4.650198,-6.060438,5.341390,-2.312324,0.072990,5.619243,7.385783,-3.931235,-1.629867,5.384478,-1.224929,7.377491,-1.823383,-0.629408,-8.041513,1.943869,7.289979,7.369175,-6.075017,1.570939,-1.861095,2.660153,-8.582242,5.632602,1.770329,7.963588,2.269883,4.870341,-6.085446,-5.261213,-5.504455,-1.879227,4.757973,-5.528646,8.203550,-5.946975,8.067875,3.646148,6.316661,-6.078324,8.012617,-7.795416,5.334309,-1.180044,-8.946118,-2.809834,-1.649605,-0.954638,5.701313,-6.873263,-0.793525,-9.697199,-0.015884,9.326625,-9.317013,4.432948,5.912913,-7.783455,4.840750,-7.385508,-3.555875,8.948232,-3.442903,-2.868499,-4.625244,-0.675665,8.026293,-6.427953,4.211291,5.045525,-2.067660,3.623165,5.990976,-9.120553,4.782657,-2.835599,5.891649,-0.086453,6.804735,2.627562,8.242690,-7.114638,-3.789432,9.890241,-3.240897,3.183103,4.886919,7.674993,6.060160,6.365376,-7.510378,-0.950460,2.706140,8.886379,5.469752,3.447730,8.033207,-6.034459,-2.374661,8.826921,-8.656501,9.118323,3.073546,-3.429728,-5.183604,6.285527,7.947705,0.960826,4.161838,2.500531,0.558243,5.748153,-0.883319,4.210057,1.298852,-5.356705,6.955268,5.997386,-6.549406,6.925713,-7.832514,5.162409,-1.002181,-4.958215,-3.590195,6.511952,-6.989828,-6.136219,-1.857110,-7.652632,-8.281760,3.765594,-1.343570,-9.175687,4.846593,-0.480817,6.929326,7.624898,-6.120011,9.708119,-0.440819,-5.293227,1.248116,7.227809,-3.917753,-9.597890,-0.906953,0.280285,-9.270397,0.192278,8.955142,7.902245,-9.092948,6.202184,4.062381,0.036563,4.240293,-3.189209,-2.370378,-9.094585,0.211688,0.236550,-8.736977,0.089514,-1.187715,-6.441435,-7.728069,-1.137906,6.706365,2.264631,-1.413813,-3.819838,-1.842849,7.601203,-9.518229,-6.847818,-0.947635,-8.817410,-1.021934,8.673748,-2.208745,-3.828740,-1.326395,2.267487,-8.467688,-5.158857,2.529451,-8.109162,0.316227,-2.171469,5.517024,-9.744780,-0.594941,1.953322,-6.049357,-1.403717,-9.500756,3.999676,9.532974,-0.871059,3.599611,0.889854,2.705156,-0.941268,6.127979,3.399261,7.621094,-4.915579,-0.988811,-8.732692,-5.478429,4.003277,-8.354705,6.725129,-0.518573,8.061062,-1.999968,-1.152170,3.033222,7.951153,-5.394275,0.816300,-5.446893,7.952404,7.312558,8.231168,-7.277453,3.853837,1.100195,0.408173,-0.390730,1.261366,6.543758,5.644346,-9.916742,2.967001,7.467709,1.434555,-1.970536,-2.559653,-0.395737,2.428978,-5.510965,0.757424,-5.847537,7.303749,-3.950418,1.447912,0.302704,-8.492039,8.792581,-7.405769,-0.503810,-7.779144,-3.466145,8.901075,-7.109954,-4.037573,2.427901,-1.548060,-5.284341,-6.998248,-5.504323,-5.663737,-7.107980,-3.391401,-9.364950,-0.295329,-2.294490,2.957358,8.332510,2.977354,4.715411,2.671429,-2.274455,-0.878869,1.737879,8.031936,8.353028,4.883331,-1.388823,9.814704,-1.190956,2.066897,1.096748,-1.980823,4.583614,-2.764660,1.061726,7.267637,-2.525515,-9.106918,2.985311,1.488740,9.538907,-6.363965,-5.671449,-5.454445,-8.785137,5.342928,-3.862445,-0.103824,-9.429738,-0.791557,-5.725002,2.157732,-4.291674,9.022814,4.479234,-4.098353,8.289088,-4.072084,-7.779284,1.563655,-9.260872,-1.540735,-4.776851,4.929073,-3.244653,-2.859186,9.185820,2.312814,9.888352,2.781711,9.610056,1.232338,3.266548,1.282333,-8.227068,-5.983302,3.692642,5.263557,3.542921,-2.768410,-6.892947,6.297741,-4.616412,0.399565,5.584722,-9.624720,-4.572572,2.717475,8.949661,-6.569833,4.138665,8.546461,9.969527,-5.253369,6.620767,-0.359424,6.268595,1.905876,-6.205558,5.048039,-2.170105,2.022167,3.148081,-9.056129,9.063239,-8.814816,5.890374,2.791573,-5.186224,2.243274,2.959155,-9.613173,3.696105,-3.155255,-7.338058,0.603004,-5.486896,-5.954516,-8.841038,-7.047535,4.799373,-3.078770,-0.268065,5.430373,-8.856393,-0.478873,3.714865,-0.168066,1.288278,-6.156890,9.794026,-3.966061,-6.391850,3.203657,1.404897,-4.892221,7.540215,8.806957,1.388601,-0.581791,5.946769,9.026486,6.643138,-3.325636,-0.204455,5.673472,-3.778472,9.941038,-5.493443,4.826842,6.554360,-3.812118,5.716138,-3.396111,-8.952885,-8.575193,-6.226850,-4.422816,1.501181,-6.865817,-7.982374,5.129407,5.161453,1.099133,-9.683225,7.687315,1.657638,-5.873793,9.008205,4.600640,5.603600,2.085282,4.497489,-8.755722,-0.124911,-2.289275,-0.356340,-6.210802,0.899116,6.671230,-9.947934,7.404465,-2.733616,-6.881474,-4.237629,2.263063,0.446229,0.907190,3.297810,-7.389954,-4.535160,-9.254093,-8.998272,-7.661757,-9.695110,6.093127,-8.803609,-0.872994,-9.704623,-3.397875,-3.816034,4.200401,0.839516,-1.191930,-9.375295,-0.282153,-7.628688,6.937228,2.972745,-9.357785,0.121412,0.797710,-7.385959,-5.704381,-0.638205,3.697334,-3.878782,3.105429,-4.622316,-0.120603,-4.627996,0.392266,3.003746,8.226308,2.756120,2.040127,-7.869439,-6.575874,-5.683429,9.399173,-9.114407,-7.842238,7.734846,-0.240748,4.317997,-8.965538,4.633794,-2.367147,-5.054190,-9.008014,1.504042,-3.127270,-8.855901,-6.436684,3.782829,6.704284,3.843333,9.327982,2.212619,-4.466433,-1.991079,-8.598879,-9.774065,9.826381,6.330268,-0.516594,5.607275,-7.147226,-9.133952,-2.766723,-9.536584,4.095782,7.860764,8.892212,-0.920900,-8.506647,-8.162298,-2.101296,0.569265,-1.774167,0.457741,-0.100322,3.006998,-3.577512,4.503200,-7.363287,8.490820,6.528819,-1.428502,2.440299,-6.061080,6.881114,6.241975,-8.255675,7.948023,1.048347,0.856760,4.650593,-9.382245,-6.426945,3.106981,3.440029,-4.702436,1.015188,1.053336,1.363853,-1.369350,0.930077,9.142442,5.876695,-4.197703,9.997227,-3.950139,-4.018076,5.677658,-7.095201,3.205378,5.022353,1.613198,-8.745790,8.937904,-8.441577,5.680859,1.043323,1.347333,2.142266,5.796438,-1.902709,-7.851427,-3.078856,1.101658,-9.842876,1.121847,4.265111,-6.357906,5.626928,8.357099,-9.304202,0.009328,0.852805,-9.048179,-2.646893,-6.858126,4.660036,-8.259626,-1.960429,-6.151473,-8.705742,-1.213428,-4.720603,-1.795305,-9.641247,-0.235811,-9.078173,2.529324,-1.085137,-4.635703,8.052164,0.819049,4.247951,2.765121,-2.052420,-8.898260,9.334119,-0.788825,-0.667340,4.288572,-5.590577,9.792688,-3.177729,5.672027,-9.598055,4.608042,-3.635738,-7.660682,-5.781080,9.204669,8.594432,-9.698474,-9.407992,0.484736,8.241775,0.328292,-0.387193,-9.848025,5.839851,6.380333,7.335677,-5.815452,-2.673646,-5.715343,-1.953498,2.449996,0.860306,-4.114893,-4.154552,-4.980763,-7.861439,6.688640,-8.403510,1.031195,1.224100,0.969289,-3.365628,-1.083982,-7.254398,0.056799,-9.382852,6.039811,-3.984062,7.845597,8.522820,-4.683548,-3.658593,-2.730835,5.703337,-0.786340,-6.615027,-8.077021,3.948965,2.155831,6.084311,-3.375061,0.941758,5.078927,8.506050,-3.088051,6.340659,7.080534,5.494203,-1.688258,1.323875,3.004121,6.974544,-5.604845,7.435283,-6.777130,3.729421,-7.669182,-0.099163,-8.979729,2.936235,-0.137384,-1.591018,-5.862858,0.964256,-8.938836,9.974942,1.244475,7.779294,-5.051536,6.935516,2.213604,6.793041,-9.798757,-3.793356,-9.126954,5.948270,-0.989436,-3.903638,8.934414,5.487130,-5.045511,-3.929905,3.043238,-2.595858,-7.918728,8.088834], dtype = "float64")#candidate|9582|(847,)|const|float64
call_9581 = relay.TupleGetItem(func_3529_call(relay.reshape(const_9582.astype('float64'), [7, 11, 11])), 0)
call_9583 = relay.TupleGetItem(func_3532_call(relay.reshape(const_9582.astype('float64'), [7, 11, 11])), 0)
output = relay.Tuple([call_9540,call_9545,var_9546,call_9552,var_9553,call_9557,var_9558,const_9559,bop_9577,call_9581,const_9582,])
output2 = relay.Tuple([call_9541,call_9547,var_9546,call_9555,var_9553,call_9560,var_9558,const_9559,bop_9577,call_9583,const_9582,])
func_9585 = relay.Function([var_9546,var_9553,var_9554,var_9558,], output)
mod['func_9585'] = func_9585
mod = relay.transform.InferType()(mod)
var_9586 = relay.var("var_9586", dtype = "int8", shape = (2880,))#candidate|9586|(2880,)|var|int8
var_9587 = relay.var("var_9587", dtype = "float32", shape = (360,))#candidate|9587|(360,)|var|float32
var_9588 = relay.var("var_9588", dtype = "uint64", shape = (1584,))#candidate|9588|(1584,)|var|uint64
var_9589 = relay.var("var_9589", dtype = "bool", shape = (528,))#candidate|9589|(528,)|var|bool
output = func_9585(var_9586,var_9587,var_9588,var_9589,)
func_9590 = relay.Function([var_9586,var_9587,var_9588,var_9589,], output)
mutated_mod['func_9590'] = func_9590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8608_call = mod.get_global_var('func_8608')
func_8610_call = mutated_mod.get_global_var('func_8610')
call_9597 = relay.TupleGetItem(func_8608_call(), 1)
call_9598 = relay.TupleGetItem(func_8610_call(), 1)
output = relay.Tuple([call_9597,])
output2 = relay.Tuple([call_9598,])
func_9601 = relay.Function([], output)
mod['func_9601'] = func_9601
mod = relay.transform.InferType()(mod)
output = func_9601()
func_9602 = relay.Function([], output)
mutated_mod['func_9602'] = func_9602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9352_call = mod.get_global_var('func_9352')
func_9354_call = mutated_mod.get_global_var('func_9354')
call_9729 = relay.TupleGetItem(func_9352_call(), 0)
call_9730 = relay.TupleGetItem(func_9354_call(), 0)
output = relay.Tuple([call_9729,])
output2 = relay.Tuple([call_9730,])
func_9742 = relay.Function([], output)
mod['func_9742'] = func_9742
mod = relay.transform.InferType()(mod)
mutated_mod['func_9742'] = func_9742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9742_call = mutated_mod.get_global_var('func_9742')
call_9743 = func_9742_call()
output = call_9743
func_9744 = relay.Function([], output)
mutated_mod['func_9744'] = func_9744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9778 = relay.var("var_9778", dtype = "float32", shape = (2, 13, 15))#candidate|9778|(2, 13, 15)|var|float32
uop_9779 = relay.acosh(var_9778.astype('float32')) # shape=(2, 13, 15)
func_5961_call = mod.get_global_var('func_5961')
func_5966_call = mutated_mod.get_global_var('func_5966')
var_9782 = relay.var("var_9782", dtype = "float64", shape = (528,))#candidate|9782|(528,)|var|float64
var_9783 = relay.var("var_9783", dtype = "float64", shape = (20,))#candidate|9783|(20,)|var|float64
var_9784 = relay.var("var_9784", dtype = "float64", shape = (1536,))#candidate|9784|(1536,)|var|float64
call_9781 = relay.TupleGetItem(func_5961_call(relay.reshape(var_9782.astype('float64'), [3, 16, 11]), relay.reshape(var_9783.astype('float64'), [20,]), relay.reshape(var_9784.astype('float64'), [1536,]), ), 2)
call_9785 = relay.TupleGetItem(func_5966_call(relay.reshape(var_9782.astype('float64'), [3, 16, 11]), relay.reshape(var_9783.astype('float64'), [20,]), relay.reshape(var_9784.astype('float64'), [1536,]), ), 2)
func_3969_call = mod.get_global_var('func_3969')
func_3975_call = mutated_mod.get_global_var('func_3975')
var_9787 = relay.var("var_9787", dtype = "int64", shape = (480,))#candidate|9787|(480,)|var|int64
var_9788 = relay.var("var_9788", dtype = "float32", shape = (360,))#candidate|9788|(360,)|var|float32
var_9789 = relay.var("var_9789", dtype = "float64", shape = (847,))#candidate|9789|(847,)|var|float64
call_9786 = relay.TupleGetItem(func_3969_call(relay.reshape(var_9787.astype('int64'), [12, 4, 10]), relay.reshape(var_9787.astype('int64'), [12, 4, 10]), relay.reshape(var_9788.astype('float32'), [12, 30]), relay.reshape(var_9789.astype('float64'), [847,]), ), 3)
call_9790 = relay.TupleGetItem(func_3975_call(relay.reshape(var_9787.astype('int64'), [12, 4, 10]), relay.reshape(var_9787.astype('int64'), [12, 4, 10]), relay.reshape(var_9788.astype('float32'), [12, 30]), relay.reshape(var_9789.astype('float64'), [847,]), ), 3)
func_8874_call = mod.get_global_var('func_8874')
func_8879_call = mutated_mod.get_global_var('func_8879')
var_9803 = relay.var("var_9803", dtype = "float32", shape = (24, 120))#candidate|9803|(24, 120)|var|float32
var_9804 = relay.var("var_9804", dtype = "bool", shape = ())#candidate|9804|()|var|bool
const_9805 = relay.const([-2.333302,-8.718636,3.853135,3.088062,-3.520626,0.432818,4.520322,-7.713547,1.360978,5.878932,-1.138855,6.454077,6.982420,-1.604215,-7.877746,-5.604961,-3.630907,0.118578,-0.695492,-5.424186,7.619870,-8.201182,-3.852598,7.224086,4.420721,7.568438,-1.066165,1.450709,-0.498298,-4.439211,8.165075,2.120086,0.527713,3.354455,-3.263677,-5.542022,7.037815,-2.433964,-5.633256,6.858134,-1.018189,2.035331,2.030678,-1.903619,-5.001360,-1.540711,-5.951000,8.177480,-0.679175,3.768899,-6.388560,-8.006148,-1.420738,-2.799655,-6.745987,-7.214232,-9.008151,6.219246,4.820670,-9.525125,-4.773372,4.078865,-6.384542,-8.953428,-1.426318,7.712489,-6.368694,-7.850152,3.845182,3.204484,0.732937,-1.226050,2.637084,0.176541,-4.440531,-9.419112,4.762834,9.964418,-6.611110,-1.787981,7.529812,7.310954,-0.659715,8.706298,-9.164148,8.849777,-9.486489,-0.011320,-6.933554,-0.221560,6.036904,4.986655,2.306208,-6.431390,5.809985,-8.706914,0.664937,-0.463396,2.955149,4.568473,-0.341667,4.088187,-2.889217,-2.710762,-6.714469,3.458584,4.850088,-2.289841,9.796289,-5.851216,0.181122,-8.261466,-8.559845,-5.151265,-8.140284,-1.870278,0.844449,1.484260,2.217379,-6.472078,0.378428,3.584350,-2.941056,3.420463,-6.034480,-7.701896,-2.721493,-3.230308,8.465150,-8.135603,-8.668569,-8.112062,5.133682,-5.378786,4.033878,-2.966385,-1.566362,9.303515,4.032992,7.275748,-5.548325,1.980350,-8.746614,-7.528685,5.810225,0.567542,2.666164,1.015796,3.633216,4.362256,-7.291758,1.726517,7.445794,4.639748,5.114988,-2.980568,3.784047,-6.313559,-8.866212,2.951969,-4.128741,4.618617,7.342209,-8.124023,-1.294126,6.555613,4.924184,-2.759531,-4.728172,5.910557,-7.486025,0.750406,8.378651,4.883125,-0.520335,7.452768,5.928112,-9.340249,9.464516,4.957085,-8.613394,-9.947940,-5.685935,-0.199926,3.085556,-6.394102,-6.913335,8.669097,-5.557478,5.583219,4.595184,1.526194,7.387169,8.282127,-8.904728,4.479136,-7.361844,-9.426920,-6.571315,2.603445,-1.675920,1.068972,3.486996,-9.551847,3.455430,7.787202,4.117477,0.350149,-4.411854,2.900860,7.257476,-7.272655,4.426411,-0.677210,6.296183,0.608172,-2.466603,-5.188787,6.216754,9.659393,-4.076309,2.740250,5.407990,9.515066,-0.895742,-5.575566,6.970679,6.670803,1.240504,-8.186958,1.863778,-4.284647,-5.139267,5.934953,9.693216,-1.689635,6.964200,4.183818,-0.051956,2.285832,-1.789917,-5.672769,-8.534613,-0.649477,-4.671247,-4.053505,-7.667201,8.902076,-3.204713,-7.298893,4.754023,0.772186,-5.793826,8.488348,2.845997,0.989468,-0.555812,7.000508,0.034113,-9.923299,-9.622691,0.112112,1.726807,9.114048,-5.138462,1.592227,-2.495663,-9.444195,-2.254917,9.149831,-0.566346,1.702729,2.987293,5.792562,-1.936804,-1.135193,3.910870,5.946919,-2.924800,-8.497985,-4.857286,-2.392717,-4.286793,0.839361,-0.489348,9.712051,-7.620475,2.408264,0.519477,-5.843457,-9.206637,4.494213,2.340208,-7.391518,9.014816,-3.617241,-3.099674,4.921471,2.625883,3.876626,7.006493,8.214667,9.349343,5.102565,2.799233,-0.469472,-7.999585,9.141130,-1.213485,5.124288,-9.829301,7.648644,-4.759350,-4.215127,-9.952113,1.387593,-1.880343,6.844415,7.266619,-2.162887,-6.358996,-3.882881,-3.671887,-2.764465,0.549463,5.466033,9.674971,9.566529,4.423266,-2.247026,0.156562,0.310908,-3.651780,-2.770884,-4.586163,-2.850094,3.564998,2.335571,0.490922,7.642860,-4.576266,-1.058114,3.438256,4.957051,1.451677,-1.195677,-3.039871,-6.661313,-0.180396,-8.854083,-5.749865,-4.482935,-5.471870,7.559566,7.339322,-6.412285,5.138131,-5.784422,-8.468254,4.064858,8.742803,5.920919,-7.670508,-6.013291,-4.965546,9.976831,7.466874,-1.106611,0.296636,3.265538,-4.243608,-0.410922,1.209288,0.975316,4.032122,2.121827,-1.370908,-4.502678,9.987586,-3.564530,8.830564,-6.938963,4.057253,-8.741948,-4.258396,6.985748,-2.316296,6.616072,-4.490332,2.231776,2.986580,-8.565187,2.387536,-2.746552,7.107006,-9.282312,-0.088143,-9.037506,-4.915186,8.207190,-7.026313,7.259955,-4.147962,-5.600900,5.635978,-7.894724,5.682794,9.394488,0.294809,0.059740,-1.172073,-3.720216,-9.896539,-0.588909,1.336275,5.975676,-5.911791,-6.336363,6.358442,-2.585696,9.549155,-1.976012,3.371746,0.766216,2.302445,-5.841635,7.824634,7.431445,0.505237,-9.767490,4.064536,-7.344438,-3.676447,-4.028830,-5.580574,7.631507,-8.393642,-9.123322,1.003519,-1.412857,-5.091997,-4.615875,2.985856,0.905176,9.559541,-3.575867,6.752659,-0.475620,5.584193,-3.674333,3.356441,1.739373,7.001588,-6.440108,-3.889209,1.839727,3.583659,-7.678141,5.600477,5.020579,3.564409,2.383029,-9.934609,-9.852617,8.372826,9.900990,-9.858504,-3.977973,-4.465748,-4.962100,7.300618,7.354811,1.459776,-9.486112,5.903094,4.168365,9.969789,-1.729737,7.470295,7.922368,5.761717,5.722866,-1.253596,7.516375,-2.951687,2.561750,3.755115,-5.846807,-5.748565,-0.837664,-3.082581,-5.071534,-4.731752,-7.764956,1.537910,-0.001284,-4.873988,3.884706,8.593724,-2.119788,-7.622193,-3.291355,-4.746456,8.118558,8.763400,4.284773,7.300623,2.123361,-0.240496,8.429734,0.803235,-1.050238,-7.304176,-5.728536,-0.049087,9.986969,-7.415342,-7.448538,6.703691,5.126221,8.564771,-9.836522,-8.836991,8.187284,9.398315,0.486888,-7.757028,4.252256,2.083969,9.684334,-9.337839,-5.992760,-4.235665,8.404861,-5.839356,-7.793007,1.084673,9.619861,-1.963871,-9.704813,8.652274,-9.514925,8.479671,-2.640641,-2.043119,-0.983920,2.946483,8.300998,-1.131783,8.588041,-1.605714,-4.326244,-9.352338,4.608799,-2.566647,0.287423,4.157138,-0.295454,1.146559,4.287768,-7.561493,-9.814557,2.169572,1.199428,-3.104444,-3.828960,-6.158751,1.093440,-6.851375,3.171625,-4.274655,1.141769,-5.337230,5.572581,-7.491649,1.863819,-8.484513,-5.684802,-3.659323,6.637957,-9.712832,5.398238,9.580912,-5.512109,4.716723,-5.662821,-7.062873,-7.944514,0.067334,-5.404996,-4.990108,-4.510020,9.270697,-4.102251,-6.209039,-0.557434,-6.443156,8.478162,-2.656082,0.116384,5.417776,-1.963008,0.719225,7.692649,-6.384656,0.428639,8.085506,9.416026,-8.481835,-6.200348,-3.550491,-2.256117,-4.927738,-1.206187,8.054925,4.069332,2.932660,-7.271898,-5.047506,-1.525407,8.536600,0.137297,8.552255,7.689767,1.893018,3.604109,-9.329757,-1.231826,7.905096,-4.087530,-6.827645,-3.596771,5.326285,7.596142,-7.407393,-8.250178,6.417562,-4.798243,-6.211277,-2.345577,-0.564795,6.288748,8.951271,3.345317,-4.613171,4.277593,3.490452,3.033626,-1.360014,-8.859429,-9.448554,-8.340748,9.904920,-7.733715,-4.172189,8.799339,-0.895012,-4.192775,-0.395263,5.146801,7.664302,9.778864,-5.387707,3.797104,8.270832,7.994774,-1.262612,3.277237,-7.523412,9.597533,4.113292,9.305104,-5.496725,3.657826,-1.350725,3.605860,-0.430767,-8.647393,8.948616,9.559424,-7.566059,-6.027640,1.650574,-5.222131,-7.753248,-0.135743,-4.334970,3.745798,3.982823,6.904411,7.517659,0.357565,3.221819,-0.978444,2.829881,-8.563741,-3.109837,-1.217159,-5.817734,-5.217494,4.912241,-2.425654,-0.689859,-0.415002,5.964507,2.126084,-5.828026,-8.293740,2.237051,0.150642,-8.706965,-2.764157,-7.412056,-2.597049,1.992650], dtype = "float32")#candidate|9805|(715,)|const|float32
call_9802 = relay.TupleGetItem(func_8874_call(relay.reshape(var_9803.astype('float32'), [8, 360]), relay.reshape(var_9804.astype('bool'), []), relay.reshape(const_9805.astype('float32'), [1, 715]), ), 1)
call_9806 = relay.TupleGetItem(func_8879_call(relay.reshape(var_9803.astype('float32'), [8, 360]), relay.reshape(var_9804.astype('bool'), []), relay.reshape(const_9805.astype('float32'), [1, 715]), ), 1)
func_9148_call = mod.get_global_var('func_9148')
func_9151_call = mutated_mod.get_global_var('func_9151')
call_9808 = relay.TupleGetItem(func_9148_call(relay.reshape(var_9782.astype('bool'), [1, 528]), relay.reshape(var_9784.astype('float64'), [1536,]), ), 3)
call_9809 = relay.TupleGetItem(func_9151_call(relay.reshape(var_9782.astype('bool'), [1, 528]), relay.reshape(var_9784.astype('float64'), [1536,]), ), 3)
output = relay.Tuple([uop_9779,call_9781,var_9782,var_9783,var_9784,call_9786,var_9787,var_9788,var_9789,call_9802,var_9803,var_9804,const_9805,call_9808,])
output2 = relay.Tuple([uop_9779,call_9785,var_9782,var_9783,var_9784,call_9790,var_9787,var_9788,var_9789,call_9806,var_9803,var_9804,const_9805,call_9809,])
func_9814 = relay.Function([var_9778,var_9782,var_9783,var_9784,var_9787,var_9788,var_9789,var_9803,var_9804,], output)
mod['func_9814'] = func_9814
mod = relay.transform.InferType()(mod)
mutated_mod['func_9814'] = func_9814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9814_call = mutated_mod.get_global_var('func_9814')
var_9816 = relay.var("var_9816", dtype = "float32", shape = (2, 13, 15))#candidate|9816|(2, 13, 15)|var|float32
var_9817 = relay.var("var_9817", dtype = "float64", shape = (528,))#candidate|9817|(528,)|var|float64
var_9818 = relay.var("var_9818", dtype = "float64", shape = (20,))#candidate|9818|(20,)|var|float64
var_9819 = relay.var("var_9819", dtype = "float64", shape = (1536,))#candidate|9819|(1536,)|var|float64
var_9820 = relay.var("var_9820", dtype = "int64", shape = (480,))#candidate|9820|(480,)|var|int64
var_9821 = relay.var("var_9821", dtype = "float32", shape = (360,))#candidate|9821|(360,)|var|float32
var_9822 = relay.var("var_9822", dtype = "float64", shape = (847,))#candidate|9822|(847,)|var|float64
var_9823 = relay.var("var_9823", dtype = "float32", shape = (24, 120))#candidate|9823|(24, 120)|var|float32
var_9824 = relay.var("var_9824", dtype = "bool", shape = ())#candidate|9824|()|var|bool
call_9815 = func_9814_call(var_9816,var_9817,var_9818,var_9819,var_9820,var_9821,var_9822,var_9823,var_9824,)
output = call_9815
func_9825 = relay.Function([var_9816,var_9817,var_9818,var_9819,var_9820,var_9821,var_9822,var_9823,var_9824,], output)
mutated_mod['func_9825'] = func_9825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8624_call = mod.get_global_var('func_8624')
func_8625_call = mutated_mod.get_global_var('func_8625')
call_9959 = relay.TupleGetItem(func_8624_call(), 0)
call_9960 = relay.TupleGetItem(func_8625_call(), 0)
func_6481_call = mod.get_global_var('func_6481')
func_6483_call = mutated_mod.get_global_var('func_6483')
const_9964 = relay.const([[-5.859527],[-5.001926],[1.343623],[0.701802],[-8.123144],[-1.593094],[-3.777204],[-3.288146],[0.912562],[9.382299],[-6.847674],[-2.126063],[4.103985],[-1.851812],[-9.714137],[0.338718],[6.603847],[7.391717],[7.752098],[6.988500],[2.734589],[-3.130394],[5.934581],[6.976613],[-1.892661],[-9.764915],[1.943971],[-1.032687],[-0.195295],[-6.194272],[6.979893],[3.015349],[5.042940],[-9.405474],[-6.294392],[-0.588343],[9.224805],[4.089995],[6.420816],[6.496555],[-4.907509],[-2.760364],[4.650924],[-3.620522],[-1.839716],[-6.360306],[7.984186],[-2.017505]], dtype = "float32")#candidate|9964|(48, 1)|const|float32
call_9963 = relay.TupleGetItem(func_6481_call(relay.reshape(const_9964.astype('float32'), [48,])), 2)
call_9965 = relay.TupleGetItem(func_6483_call(relay.reshape(const_9964.astype('float32'), [48,])), 2)
output = relay.Tuple([call_9959,call_9963,const_9964,])
output2 = relay.Tuple([call_9960,call_9965,const_9964,])
func_9973 = relay.Function([], output)
mod['func_9973'] = func_9973
mod = relay.transform.InferType()(mod)
mutated_mod['func_9973'] = func_9973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9973_call = mutated_mod.get_global_var('func_9973')
call_9974 = func_9973_call()
output = call_9974
func_9975 = relay.Function([], output)
mutated_mod['func_9975'] = func_9975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
call_9976 = func_8643_call()
call_9977 = func_8643_call()
output = relay.Tuple([call_9976,])
output2 = relay.Tuple([call_9977,])
func_9978 = relay.Function([], output)
mod['func_9978'] = func_9978
mod = relay.transform.InferType()(mod)
output = func_9978()
func_9979 = relay.Function([], output)
mutated_mod['func_9979'] = func_9979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9982 = relay.var("var_9982", dtype = "bool", shape = ())#candidate|9982|()|var|bool
var_9983 = relay.var("var_9983", dtype = "bool", shape = (5, 14, 10))#candidate|9983|(5, 14, 10)|var|bool
bop_9984 = relay.logical_or(var_9982.astype('bool'), var_9983.astype('bool')) # shape=(5, 14, 10)
output = relay.Tuple([bop_9984,])
output2 = relay.Tuple([bop_9984,])
func_9990 = relay.Function([var_9982,var_9983,], output)
mod['func_9990'] = func_9990
mod = relay.transform.InferType()(mod)
var_9991 = relay.var("var_9991", dtype = "bool", shape = ())#candidate|9991|()|var|bool
var_9992 = relay.var("var_9992", dtype = "bool", shape = (5, 14, 10))#candidate|9992|(5, 14, 10)|var|bool
output = func_9990(var_9991,var_9992,)
func_9993 = relay.Function([var_9991,var_9992,], output)
mutated_mod['func_9993'] = func_9993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9973_call = mod.get_global_var('func_9973')
func_9975_call = mutated_mod.get_global_var('func_9975')
call_9995 = relay.TupleGetItem(func_9973_call(), 2)
call_9996 = relay.TupleGetItem(func_9975_call(), 2)
output = call_9995
output2 = call_9996
func_10021 = relay.Function([], output)
mod['func_10021'] = func_10021
mod = relay.transform.InferType()(mod)
mutated_mod['func_10021'] = func_10021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10021_call = mutated_mod.get_global_var('func_10021')
call_10022 = func_10021_call()
output = call_10022
func_10023 = relay.Function([], output)
mutated_mod['func_10023'] = func_10023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10029 = relay.var("var_10029", dtype = "float32", shape = (8, 6, 1))#candidate|10029|(8, 6, 1)|var|float32
uop_10030 = relay.cosh(var_10029.astype('float32')) # shape=(8, 6, 1)
func_9107_call = mod.get_global_var('func_9107')
func_9113_call = mutated_mod.get_global_var('func_9113')
var_10033 = relay.var("var_10033", dtype = "uint64", shape = ())#candidate|10033|()|var|uint64
const_10034 = relay.const([[-3,-9,7,-3,10,-5,10,1,-10,4,-9,8],[-6,1,-2,-7,-4,-10,-6,7,8,10,-5,-9],[-9,3,-6,7,7,-9,-9,-8,3,-3,8,4],[1,-3,-6,-5,3,-4,-1,2,10,-1,-8,-1],[4,9,-3,-9,8,5,6,10,10,-10,-8,2],[-4,7,9,-4,-10,-8,-7,-1,1,-10,6,8],[-7,-8,3,-2,-1,8,5,-7,-6,-1,-2,-9],[-8,9,2,-9,-6,-3,-7,5,-4,-1,8,7],[3,-8,-10,-5,7,-10,1,-5,8,-7,4,4],[6,6,-3,7,-1,-10,-1,7,9,4,-9,-9],[8,-2,10,10,-3,-10,-9,4,-2,-1,9,1],[-5,10,-8,1,-6,8,-10,4,7,4,2,6],[-2,7,4,1,-4,5,1,8,8,-3,-6,-6],[10,-9,-7,6,-3,-3,2,-10,5,10,1,3],[-6,2,5,5,7,10,10,-5,1,-3,4,-3],[9,6,1,-1,-10,-9,8,-2,7,-9,10,-3],[6,7,-9,10,2,-8,-9,-10,-10,4,2,-5],[10,7,1,-2,-5,-6,9,-4,6,-6,3,-4],[4,4,-3,-6,-2,4,4,-10,-7,5,6,9],[-5,7,-2,2,-8,-3,-3,8,3,-1,-10,-5],[-9,2,-4,-7,7,-7,-4,6,-5,-7,-9,6],[-6,6,9,-10,-6,6,-7,-6,-7,-5,2,-7],[2,5,-8,3,9,-8,5,-9,-4,8,5,6],[-9,-7,6,-7,-7,-2,-5,-6,8,-5,4,1],[-6,-7,-5,7,8,4,-5,4,5,-4,3,-5],[4,4,-3,-3,-6,-1,7,-6,1,1,-4,7],[-1,10,-3,-6,6,-4,-7,-7,1,-7,-6,-3],[6,3,9,9,-3,5,-5,-4,1,9,8,2],[-4,8,-1,-6,-7,6,1,5,4,1,-2,-2],[6,2,7,-3,-2,-2,-4,-1,9,6,-3,-5],[10,8,-2,7,-2,-2,-3,-10,8,2,-10,2],[2,-9,-8,4,2,-9,4,4,5,5,-3,-4],[6,-2,9,-6,-1,-6,9,6,-3,10,3,3],[2,-5,-2,-7,-5,5,-2,-4,3,-3,-3,-8],[3,6,-3,-3,9,-1,7,9,6,5,-2,4],[-3,2,3,-4,7,4,1,7,7,10,6,5],[5,4,3,5,-3,1,8,-6,-5,6,-10,-5],[1,-1,9,10,8,-1,2,-4,-4,4,-2,8],[-3,-5,-7,9,8,-6,-6,8,2,2,7,2],[-2,-5,7,2,-8,-2,-7,-5,-3,-3,9,2],[3,7,1,-3,-6,-7,-4,4,8,-10,-8,-2],[-8,-9,-8,-10,4,-3,9,-8,-6,9,-6,3],[10,8,8,9,5,-5,-1,-4,-4,-10,4,-7],[4,2,8,1,9,-8,-9,5,6,-9,-4,-2],[1,-1,-1,-5,6,-3,3,4,1,-10,-8,-6],[-4,-1,-7,7,6,-3,8,-10,-5,9,-6,1],[5,-10,6,-9,-1,9,3,8,-3,4,8,4],[-8,-1,-7,4,4,9,1,2,-6,2,6,9],[-10,1,-9,-9,-9,9,-5,-2,-6,10,-6,-9],[-3,4,-2,9,5,10,-4,-9,1,2,1,-6],[-6,-6,1,5,-8,-3,1,2,1,-8,-1,1],[4,-8,9,6,2,-6,-9,5,1,8,10,-7],[-2,-8,-1,6,2,4,10,5,-2,-3,3,8],[7,-9,10,10,1,6,6,-1,8,10,-5,-9],[5,10,9,-5,6,3,-9,7,-2,-4,-6,7],[-10,1,-1,2,2,7,10,10,-7,3,8,6],[6,8,-4,-6,-3,10,9,1,6,7,-1,3],[3,-4,7,-3,-1,-4,8,-1,-1,7,5,-5],[8,-6,-10,7,-8,-4,-2,-7,-8,7,-5,8],[-7,5,-3,-2,4,-9,10,6,8,2,-9,-10],[2,-4,4,-2,-7,5,-9,8,-7,-6,5,-5],[-5,1,-6,10,8,6,6,-7,6,2,8,-9],[-6,-4,-10,-4,-5,-9,-7,2,3,-9,7,3],[-7,3,4,2,8,3,-6,4,-1,6,-10,-3],[-8,3,8,1,10,1,-7,-5,1,-4,6,-10],[-9,-7,7,-5,4,-10,-5,-8,-6,-10,-3,7],[-5,-3,-9,10,-1,8,-8,-1,-2,-5,-6,1],[-5,5,7,4,-3,5,-1,-1,-3,-10,-3,-3],[4,9,4,-1,10,-7,-8,-9,7,6,-10,-8],[-5,5,-9,-2,-10,-4,2,3,1,-8,-8,-3],[-2,3,-5,8,9,-9,-4,5,3,-8,5,6],[-1,7,3,6,-9,1,10,-4,-3,-9,-6,-10],[-4,-4,8,-4,-6,10,-1,9,3,-3,-9,4],[-2,10,-7,-4,7,-9,10,5,2,-5,2,-4],[4,-8,6,7,-4,5,5,4,9,-8,5,-5],[1,-2,4,7,-3,10,-6,-9,-4,-6,8,-3],[-1,6,-6,-3,-10,7,-10,1,9,7,8,10],[2,3,3,-7,-6,-10,-3,-1,-7,9,3,5],[1,1,-7,3,6,9,1,6,10,-2,-9,8],[-1,7,6,10,-1,-9,2,10,-10,-9,-5,-10],[1,10,5,7,-4,10,6,9,10,8,4,2],[-6,-6,-6,-8,8,-8,-5,-7,-9,10,8,5],[-1,-4,10,10,-8,7,-1,-10,2,-10,-3,7],[-7,-9,8,6,6,6,-5,2,-1,7,5,-10],[7,5,10,-4,-10,-3,9,-10,9,-3,-10,-8],[-7,2,-2,10,-4,-9,-10,1,-8,-10,6,-3],[6,1,-10,-9,-4,8,5,7,-6,4,-1,-6],[1,-5,-6,4,-4,-1,4,3,3,3,-1,7],[-9,3,-8,-1,5,-8,6,-4,-6,5,5,7],[-1,-5,-1,2,-5,-9,4,-2,8,1,-1,-2],[-9,9,7,9,-6,-2,7,6,1,-5,-9,-5],[6,-9,-8,-7,10,-1,10,6,-6,-3,-2,-5],[8,7,6,4,-5,-2,-4,2,-3,-2,2,-10],[-6,-1,6,3,-7,-3,2,6,8,2,7,9],[-6,-4,9,-7,7,-5,-4,-6,9,-4,5,-10],[-10,-9,8,-6,9,5,3,2,9,-2,-6,-4],[8,-7,1,-9,2,7,-8,-8,-4,4,2,7],[5,-4,10,9,-9,-4,-6,1,-3,-9,5,9],[-10,-7,10,6,7,-8,10,-6,4,9,-5,7],[9,10,-5,3,1,-10,8,-6,-7,-2,4,6],[-10,-7,5,4,3,-10,-4,-6,5,-3,1,7],[-6,5,-1,-7,5,-5,-9,6,4,2,1,2],[-3,2,-6,2,-10,-1,7,1,3,4,-6,6],[10,-7,-8,-8,3,7,-9,-3,-5,9,4,5],[7,-9,-4,2,-7,-5,-9,5,3,3,-10,-2],[-1,-8,2,-10,5,-9,-8,-10,-1,9,-8,-1],[-6,-4,1,3,6,6,-5,6,-8,8,7,9],[5,-7,2,-5,-4,-9,4,4,-3,7,-7,-1],[-7,10,-9,3,9,-10,-1,1,3,-8,-2,-6],[-5,7,5,8,7,7,9,3,-1,10,5,7],[1,-4,10,-10,-2,-10,4,-8,-7,10,-4,-5],[3,8,7,7,-1,-3,-2,9,-3,-8,6,-10],[10,7,3,8,-7,4,-2,-4,-4,7,1,8],[2,10,4,8,-2,-8,9,10,4,10,7,-10],[-2,-4,2,6,10,3,10,5,-10,-6,1,-7],[-2,-1,-2,9,-2,6,7,-10,-7,-10,-8,-8],[10,-7,2,3,2,4,-9,-7,-5,4,2,8],[9,-8,-3,-5,-2,1,8,-9,-10,-6,5,-9],[-6,-2,-9,10,8,-4,6,-1,6,4,8,6],[-8,8,-6,8,9,10,2,-5,10,9,-1,-4],[-4,2,-6,9,-9,-9,-3,-6,-7,-10,6,9],[-5,2,9,-4,8,5,4,-8,-3,9,6,-8],[-2,3,-4,-4,1,6,5,4,-7,5,-5,4],[2,3,9,-10,-8,8,5,10,1,-5,7,8],[-8,-5,10,10,3,9,-3,-2,1,-4,4,-2],[1,9,-7,-3,-4,8,8,-5,9,4,4,-4],[5,-1,3,6,-1,3,-4,2,5,-3,6,-5],[-3,-7,-4,-1,-1,10,10,-8,-10,8,9,5],[8,8,-7,10,-1,-8,8,-4,6,2,9,-4],[5,7,3,-10,2,-6,-5,1,-3,-1,-10,1],[10,-9,-5,9,8,4,10,2,-5,10,-3,6],[-10,9,3,-6,-3,-1,10,8,10,7,9,-9]], dtype = "uint64")#candidate|10034|(132, 12)|const|uint64
var_10035 = relay.var("var_10035", dtype = "uint64", shape = (25344, 1))#candidate|10035|(25344, 1)|var|uint64
var_10036 = relay.var("var_10036", dtype = "uint64", shape = (2475,))#candidate|10036|(2475,)|var|uint64
call_10032 = relay.TupleGetItem(func_9107_call(relay.reshape(var_10033.astype('uint64'), []), relay.reshape(const_10034.astype('uint64'), [1, 1584]), relay.reshape(var_10035.astype('uint64'), [16, 1584]), relay.reshape(var_10036.astype('uint64'), [2475, 1]), ), 0)
call_10037 = relay.TupleGetItem(func_9113_call(relay.reshape(var_10033.astype('uint64'), []), relay.reshape(const_10034.astype('uint64'), [1, 1584]), relay.reshape(var_10035.astype('uint64'), [16, 1584]), relay.reshape(var_10036.astype('uint64'), [2475, 1]), ), 0)
func_3322_call = mod.get_global_var('func_3322')
func_3324_call = mutated_mod.get_global_var('func_3324')
const_10044 = relay.const([[-7.694514,1.282272,4.483325,2.749342,7.869489,-8.523341,4.335581,6.015609,7.941357,2.559058,4.843875,-2.485590,-0.737025,0.676854,-8.328138,1.440865,-8.653381,1.225931,3.045894,3.977675,-5.838837,8.530701,0.229268,9.574050,7.240802,-1.256313,1.003363,-4.109496,6.413154,-5.526935,0.071210,-8.272055,-0.868555,1.277254,-3.138764,-0.811543,-5.322068,-3.720471,-5.232698,9.022690,4.041199,4.718896,-9.114353,-0.861831,5.835934,-5.350319,-3.338560,-8.454796,-7.815527,-7.115162,-7.353954,7.486948,-2.936727,1.779802,4.909570,-7.336674,-6.329359,3.030757,4.628890,-1.215976,-2.513217,6.229117,1.190821],[0.294534,-3.579389,3.931106,7.134754,9.076261,-0.811417,-2.823405,1.905037,-2.929318,-4.258164,6.916077,4.765845,-0.116877,-1.779730,-5.203963,5.720216,8.988777,9.764948,4.572830,0.309736,-0.133907,1.774119,0.563090,3.532269,-8.182198,5.136492,-3.854225,-8.388895,-5.070838,-4.723012,-6.312455,-2.800239,2.847753,-6.983738,-7.273002,-3.313052,-5.237466,-0.147725,-6.321782,5.014749,9.507578,-1.439272,-1.759103,2.596240,6.555497,7.566281,6.127068,9.360990,-9.847610,7.461635,5.956916,4.506290,0.426442,0.925613,-0.751529,5.989521,0.751112,6.289988,-9.578770,-7.791046,-1.837241,5.815383,-4.449779],[0.368055,7.712888,3.779137,-2.136064,-4.674067,-8.516144,7.103920,-3.456605,8.967040,5.969156,8.780913,4.163097,6.365356,-8.496702,3.168024,-7.819542,5.607068,-3.178226,-0.208445,8.292865,-9.187928,3.547712,-4.724398,-4.158577,6.791601,-5.851302,2.547661,1.077044,-9.334754,-5.567422,-6.642879,-9.602081,-0.264213,-3.906564,6.106416,9.931315,-7.433555,0.920904,-4.403912,-7.230314,2.880765,3.767536,-3.643355,-0.684822,-6.564794,-6.951621,0.488840,-8.121964,1.599815,-8.484950,-3.844595,5.768730,-0.748689,-3.002280,-8.982756,1.315341,4.702945,2.437980,6.434855,-0.142310,-8.519482,-4.629117,2.589424],[5.962750,3.912329,8.134716,1.878602,-0.277187,-9.194551,-9.221521,1.197368,-2.193043,-5.216699,-8.149171,8.993495,1.623105,-0.493163,2.256277,-6.524548,-9.312400,8.618855,-2.580384,-7.097901,-2.312982,8.247926,-6.605019,-8.960252,8.188681,-2.165933,-2.601988,2.856569,9.345526,3.626816,2.239523,2.479377,-1.692116,-4.135813,2.624000,5.540290,6.057513,-6.843383,-8.721008,-1.950849,-2.657106,0.019677,4.955617,-6.879495,-7.620524,3.404064,-8.171242,-4.755913,8.052093,4.169056,0.704643,4.287782,9.082800,-8.086570,-9.638445,8.473340,0.787934,-8.597436,9.092586,6.633599,-1.027901,-3.047751,4.144903],[8.190198,8.266890,7.769464,-7.877419,2.955600,2.821730,9.603846,-5.440035,-3.480639,4.019978,-6.595237,5.257915,7.825205,0.812685,-4.380310,-5.320865,6.785254,-2.107608,-3.207099,5.435056,-4.525121,-1.466099,4.019217,0.815801,-7.998012,-8.833562,2.270965,3.838328,2.563275,-7.757518,3.706976,-5.573933,-1.137202,-3.599302,0.558207,-7.227025,-8.342958,8.697437,-6.144934,4.737024,5.922989,9.001205,0.861425,5.596463,5.330449,2.198099,-2.036238,-6.426084,-3.453959,-7.340576,-7.006729,-5.581976,8.170966,-3.955046,-1.092359,-7.999662,9.621143,-7.991356,-1.588073,-8.267902,-5.943298,4.692522,1.983061],[4.228426,-6.271991,7.702903,5.710255,8.329953,8.988477,-9.675653,0.451783,6.972529,-9.207184,8.716942,-5.175883,6.136309,8.697357,7.154851,-5.529837,8.431307,-8.970847,1.480741,-5.323639,-5.011075,0.257051,4.029378,-4.267622,4.472222,-6.060096,9.088199,-9.398176,6.875734,7.755444,-2.910806,-4.922335,-8.825982,-9.751956,-1.333976,-8.503574,-6.818732,2.676652,-4.689288,9.656074,-7.126259,1.629798,-1.374763,-8.643094,1.514016,-3.831989,3.196104,6.616009,-8.537983,-1.124764,-6.778002,5.072514,-3.101215,-7.353684,-1.835739,-3.510055,-4.204352,6.492979,-7.743732,-7.861583,8.788259,7.242096,0.050275],[3.265159,9.767373,-6.504819,-1.911133,-9.761550,-1.181829,-1.612410,-5.046577,-3.816499,-7.777422,9.451927,1.877247,-1.815121,9.066493,-8.693942,3.744374,-3.850304,5.176167,-2.857419,-5.813815,-6.327426,-9.477056,-6.412917,1.238526,6.988231,-8.551090,-7.464584,-4.018899,-2.188741,2.414380,7.904191,-1.847382,4.231234,-0.478615,-7.680630,-7.672001,-3.206591,4.689714,-9.324856,3.163182,-6.549025,-3.179011,2.476381,9.694058,-9.454091,-2.812903,5.391816,6.865681,-8.962049,5.871340,0.847831,1.122234,-4.479546,-6.665627,-1.767206,-6.102032,3.750453,5.331975,4.317355,-7.915578,7.782865,6.642509,-3.095300],[7.167275,9.147151,4.410843,3.464030,-7.619393,6.140334,-8.740947,-1.901282,-4.724591,8.999362,-0.537046,-8.280041,9.417151,-2.654185,0.401016,6.126826,6.715799,7.579898,8.002883,-8.329573,-7.806823,-7.414253,4.665399,4.848948,-0.374046,7.561161,3.277461,-5.622427,-8.782454,-0.031395,5.508773,-8.486561,-0.404448,3.379652,-3.457643,3.854169,9.671269,0.742888,-3.951991,-4.104131,-3.209164,8.779885,2.130232,-3.078418,-9.024384,7.606228,-8.818868,6.158532,8.734079,8.924498,-0.651190,-1.006458,-2.087660,-1.945490,-9.515955,-6.877724,-3.224973,8.359935,2.062302,4.429397,-3.732999,7.749333,8.098224],[1.556210,0.989379,-9.153932,3.048635,9.046159,5.966571,-3.490573,-2.804691,-7.543095,-2.313632,-1.190024,5.936921,-4.984334,0.306142,-6.388485,-9.403903,2.777941,-0.878664,5.147815,5.406715,-5.953227,-5.025968,-7.170658,2.806735,3.722724,-3.764413,0.668296,-8.568566,2.382176,3.091721,-4.421533,3.649276,0.066062,3.994542,1.104808,2.353994,8.578956,-0.611133,-0.805321,-5.889149,-3.199172,8.343675,-6.681934,4.909658,4.239626,-8.519918,-3.579396,-7.968490,3.245716,-6.974158,-9.033365,-9.886938,3.698097,3.882892,-4.678223,2.233529,3.594810,-7.295735,-8.289113,7.288032,-4.334383,0.173775,-4.636969],[-0.728495,-5.141237,-1.517563,-4.042313,-1.792231,-9.005538,6.883888,-3.550360,8.922908,-1.960651,2.487696,5.076480,-2.192255,-5.565393,-9.476515,3.101966,2.641238,8.109596,-3.356159,-1.628712,8.227465,0.505673,-3.011176,5.756132,1.372592,4.798473,6.298050,2.486756,6.712888,8.466600,-7.397743,-2.047810,-4.587819,-5.919495,-5.128543,-6.929004,4.870310,-1.948729,2.163595,3.270126,5.119805,3.459620,6.046581,6.232325,5.358028,-7.884750,0.692776,5.127364,-7.700122,5.640663,-9.329599,-9.188990,1.291262,5.940052,-7.746764,0.042403,-0.664282,-0.830221,0.098770,-1.602965,2.613354,0.818293,8.870327]], dtype = "float32")#candidate|10044|(10, 63)|const|float32
call_10043 = relay.TupleGetItem(func_3322_call(relay.reshape(const_10044.astype('float32'), [9, 14, 5])), 0)
call_10045 = relay.TupleGetItem(func_3324_call(relay.reshape(const_10044.astype('float32'), [9, 14, 5])), 0)
output = relay.Tuple([uop_10030,call_10032,var_10033,const_10034,var_10035,var_10036,call_10043,const_10044,])
output2 = relay.Tuple([uop_10030,call_10037,var_10033,const_10034,var_10035,var_10036,call_10045,const_10044,])
func_10052 = relay.Function([var_10029,var_10033,var_10035,var_10036,], output)
mod['func_10052'] = func_10052
mod = relay.transform.InferType()(mod)
var_10053 = relay.var("var_10053", dtype = "float32", shape = (8, 6, 1))#candidate|10053|(8, 6, 1)|var|float32
var_10054 = relay.var("var_10054", dtype = "uint64", shape = ())#candidate|10054|()|var|uint64
var_10055 = relay.var("var_10055", dtype = "uint64", shape = (25344, 1))#candidate|10055|(25344, 1)|var|uint64
var_10056 = relay.var("var_10056", dtype = "uint64", shape = (2475,))#candidate|10056|(2475,)|var|uint64
output = func_10052(var_10053,var_10054,var_10055,var_10056,)
func_10057 = relay.Function([var_10053,var_10054,var_10055,var_10056,], output)
mutated_mod['func_10057'] = func_10057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9601_call = mod.get_global_var('func_9601')
func_9602_call = mutated_mod.get_global_var('func_9602')
call_10092 = relay.TupleGetItem(func_9601_call(), 0)
call_10093 = relay.TupleGetItem(func_9602_call(), 0)
func_4724_call = mod.get_global_var('func_4724')
func_4727_call = mutated_mod.get_global_var('func_4727')
const_10096 = relay.const(-4, dtype = "uint64")#candidate|10096|()|const|uint64
const_10097 = relay.const([[1,-10,6,-1,1,-4,4,4,2,4,-5,-7,7,2,3,2,1,6,-6,-6,-5,-3,-8,8,8,-9,6,-10,3,-8,-9,-2,-2,10,7,4,-10,2,5,-8,-1,-8,7,10,1,6,-10,-2,9,10,-2,8,3,-2,10,-3,-10,-8,8,-7,-7,1,-3,10,7,-8,4,4,5,-6,-7,6,10,4,-1,9,2,-7,-10,-7,-7,-9,10,-8,9,-10,5,-4,7,2,-7,-9,-8,-5,3,9,-8,1,-2,-3,-5,9,-8,-4,1,6,-9,-10,-1,-9,-9,-4,-9,-5,4,-3,-2,10,5,8,3,7,-10,1,4,-6,8,-9,5,-7,-5,-9],[-3,10,6,-8,-3,3,2,3,-3,8,-8,-6,3,1,6,-7,-2,8,5,9,9,-9,3,6,2,-7,10,-5,-9,-5,8,-3,-8,-10,-5,9,8,-6,4,9,5,-8,9,2,-2,2,-8,2,-4,-9,9,6,7,-10,-5,7,-5,8,10,2,6,2,7,-2,-6,1,-8,-5,-10,-8,-6,-6,1,4,4,3,-2,-6,9,-1,8,2,-10,4,4,4,8,10,1,-1,4,7,-9,6,-2,2,-10,9,-1,-1,-5,-6,4,-2,-4,4,-7,3,-3,-3,-7,-6,-1,-8,-7,9,5,-5,-3,-7,-10,-4,-1,4,-7,10,3,-2,2,9,10,-1],[5,-7,-3,-5,5,-1,-6,2,-1,7,2,-10,-9,6,-5,6,5,8,8,-2,-3,-1,5,4,8,1,1,4,8,-1,7,5,-3,-1,-8,-7,-3,10,10,5,7,7,9,10,-1,2,-2,-1,4,7,-2,-1,-3,-6,-8,2,-9,1,-8,7,4,7,-8,1,10,-4,-2,-1,7,-9,-8,-10,8,7,2,7,-3,2,-3,-5,-10,-7,-3,9,-4,7,-9,-1,8,-5,1,-8,6,-8,-4,-4,-2,-9,9,-7,8,7,10,-6,-5,1,-3,-2,1,-8,3,-9,10,7,8,4,-7,5,8,-6,-2,-1,-7,2,1,5,1,-8,-4,2,-9,1],[-5,3,-10,8,-7,-7,-10,-6,-10,-6,7,-1,8,-4,-10,-3,1,-8,-9,3,3,-2,-8,5,-1,10,-4,-8,4,9,7,9,-10,-9,3,-4,-3,-1,-7,10,9,6,10,-6,-8,-8,-9,-2,-6,-9,-6,-5,-3,9,-5,8,8,-9,-9,-3,-10,-1,10,9,8,-4,2,1,-6,-5,-9,6,8,6,-10,6,1,-10,-3,-8,-8,-5,-2,6,-9,10,6,7,-3,5,5,-3,9,9,4,-4,8,3,-8,-7,-1,-6,4,3,10,9,7,2,-7,9,6,6,-3,-3,7,7,-8,-5,10,-10,-3,-8,2,8,8,-5,-3,10,9,6,-5,5],[9,8,7,-2,6,5,-9,-1,2,-3,6,-10,9,10,2,1,-5,-3,-4,5,4,-2,-2,-1,-1,-1,10,-2,9,6,7,-3,4,-7,10,2,1,-8,-9,1,-5,-6,4,-5,10,-4,-9,-1,2,3,9,5,-9,7,4,-9,10,4,-3,-9,-2,-2,-10,6,-1,4,-6,2,-4,7,-6,-6,10,-10,-3,-8,2,8,4,-3,-6,-5,-6,10,-5,-9,-1,-7,7,8,6,4,7,-9,-7,6,-9,-6,7,6,-2,2,10,-8,7,-6,1,1,4,-1,-4,4,7,2,-7,5,-3,-7,-4,-9,-1,4,-7,-2,-6,-9,9,8,5,-1,8,4],[-10,-6,5,7,-2,-8,7,7,-2,-6,2,-8,-1,1,-4,1,-7,-10,2,-10,10,3,-9,-1,-9,-3,-10,-9,-9,-2,-7,-9,-2,9,-8,-10,7,6,-4,-9,5,-3,5,9,2,9,6,4,-6,-4,1,3,-7,-4,-5,3,4,-6,-6,5,8,-7,-1,-2,5,-1,10,-4,10,-8,-10,-6,7,-7,9,-2,5,1,2,3,9,-4,8,8,6,5,-6,-4,7,5,1,-4,9,-4,-9,8,5,-9,-10,2,-2,3,10,-1,9,4,5,8,-3,5,-3,2,-7,-10,-9,-4,-9,-8,-6,-7,-7,7,-1,6,-1,-8,5,2,-4,-8,3,3],[-1,-1,2,-4,-9,2,9,-5,-10,5,-4,7,7,10,-7,2,-4,9,-10,-6,5,8,6,4,-8,-1,-4,-2,-4,-1,-7,-3,5,-8,6,-4,10,6,-7,5,-7,-8,7,-4,-4,3,7,2,-7,-6,4,5,4,-3,-2,-6,5,2,6,4,-8,-1,3,8,6,5,4,6,-3,-10,-7,4,10,5,-1,-8,-4,-5,-4,10,-6,10,7,9,4,5,-6,5,-6,-4,7,-7,10,-9,4,4,4,-10,-9,1,10,7,6,4,10,10,-1,-10,6,5,1,-9,-3,-8,-10,8,-8,8,6,-7,-9,6,1,-10,9,6,-5,7,-6,2,5,-7],[-4,-6,-6,-1,-7,6,-4,4,2,-5,6,6,-6,-9,-8,-3,-3,5,9,6,-2,5,-9,-1,-10,-9,-8,-10,3,7,-10,-4,-9,-4,-4,6,3,3,-2,-4,-3,-3,-9,-7,-4,4,5,7,-4,4,-1,3,6,7,-2,-2,-7,-6,-8,9,-9,6,-10,10,1,-3,8,8,3,2,8,10,9,-2,-1,8,3,-6,6,8,-3,2,6,-5,-5,4,-3,9,-10,-10,1,3,-4,8,8,-9,-6,4,3,10,-8,-3,7,-4,2,-2,-4,10,5,-7,-5,-5,9,2,-9,-10,-5,8,5,-2,4,4,8,-7,4,-7,-2,10,2,-3,-2,-5],[-8,-10,-3,-3,-6,-8,-1,-7,-8,-3,-5,-4,-5,-7,2,4,5,2,-6,-8,2,-7,10,7,6,-8,5,7,9,-6,6,-8,4,2,6,4,-7,-10,-5,-4,-9,2,-4,-5,-3,-3,-1,-3,-2,-8,-6,-6,-3,9,-3,9,-5,7,9,2,3,4,-6,-8,1,-9,-8,1,9,-9,3,6,8,7,5,1,5,-1,-2,1,7,-4,5,6,7,8,-5,10,-8,-1,8,-1,7,6,-3,7,-9,2,-4,9,8,-1,-2,4,-10,4,-9,1,-9,7,7,9,-5,-1,-3,-10,8,2,6,1,-3,2,-4,-9,-1,4,-10,-4,-7,-4,5,-9],[-9,4,-1,9,-2,5,5,10,10,-2,10,-5,-8,5,-7,6,-9,1,-7,-3,3,-6,2,4,1,-4,1,8,-2,-5,-1,-5,3,-10,8,9,1,-2,3,-7,-2,-7,-2,-2,-8,-1,8,-9,4,1,-3,5,-8,-9,3,-7,-8,-5,9,-5,4,6,-4,5,2,-1,-8,9,3,9,5,-10,10,5,3,-6,6,1,5,-9,3,4,-6,7,4,-5,2,3,-1,1,6,2,-7,5,2,3,-4,7,1,-1,-10,3,2,-3,-2,-8,2,-2,5,-3,1,-2,-2,-5,3,-7,4,6,-5,10,3,-6,10,-4,-7,-3,4,3,4,-10,-6,1],[-8,-6,6,-10,6,4,8,-2,-8,3,-2,-7,-4,5,-5,-10,5,-5,3,-2,5,-4,7,-8,-3,-4,-5,1,-9,1,-5,6,-6,3,-10,8,-2,-8,8,-3,-7,6,-9,3,-5,1,-5,10,-1,3,-9,-7,-3,1,3,4,10,-5,-7,6,-5,2,5,5,6,-5,7,9,9,3,3,-5,9,3,-8,-10,5,5,5,-3,-8,-9,2,-6,7,4,-9,2,-9,-6,3,4,-7,7,8,4,-10,-2,-10,-3,10,-4,8,-6,2,-6,7,4,-8,5,-2,-4,1,-5,4,5,-7,2,-8,2,10,6,9,-1,-2,-5,-7,-9,4,-1,-3,-2],[-7,6,3,-5,10,-2,1,8,-10,-10,-3,-7,-4,-9,7,7,-6,-1,-5,-5,8,-5,-9,-4,7,7,-2,9,5,3,9,-7,-5,7,-5,-6,-8,-3,4,-9,1,1,4,-1,7,-10,4,-5,-6,-10,5,-1,6,3,1,-3,9,8,-3,2,-3,-10,2,7,-8,-6,-4,7,2,4,-1,8,8,-5,4,-4,-2,3,10,1,-8,10,-7,-6,6,-4,4,6,5,4,9,-6,10,4,-1,7,-3,3,-3,-8,-8,5,2,5,-5,1,-7,-6,6,7,6,-9,3,10,1,-5,10,-3,5,4,-7,5,-9,10,-10,3,3,8,3,1,4,7]], dtype = "uint64")#candidate|10097|(12, 132)|const|uint64
call_10095 = func_4724_call(relay.reshape(const_10096.astype('uint64'), []), relay.reshape(const_10097.astype('uint64'), [11, 12, 12]), )
call_10098 = func_4724_call(relay.reshape(const_10096.astype('uint64'), []), relay.reshape(const_10097.astype('uint64'), [11, 12, 12]), )
output = relay.Tuple([call_10092,call_10095,const_10096,const_10097,])
output2 = relay.Tuple([call_10093,call_10098,const_10096,const_10097,])
func_10102 = relay.Function([], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
output = func_10102()
func_10103 = relay.Function([], output)
mutated_mod['func_10103'] = func_10103
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10122 = relay.const([[[-9.229514,-8.675786],[0.854995,6.622428],[-6.462118,-0.663805],[-0.722569,-8.862178],[-9.655394,-8.301797],[-6.534738,9.303488],[-3.831621,-9.848483]],[[-7.027261,-0.320826],[3.516450,-3.117783],[-6.392961,9.592220],[-9.531632,6.141090],[6.509475,7.618531],[-1.343140,-6.994050],[-0.111919,-3.833359]],[[-2.415506,-5.814699],[1.384230,5.322233],[5.422956,4.362363],[3.543624,-2.842372],[4.931178,-7.859771],[9.110417,-1.547129],[-4.312893,3.063130]],[[-3.663262,4.283420],[-1.114906,1.766853],[-6.192672,-6.859764],[6.190852,-1.493611],[-8.400864,-1.755161],[-1.849742,6.242882],[-0.319857,-1.252328]],[[-4.564633,-3.300562],[7.511890,8.979253],[1.981225,0.059565],[-1.546893,3.172979],[-7.677638,-1.970447],[-7.472181,-3.273727],[-2.287630,6.293005]],[[5.850648,2.304940],[7.490646,6.466349],[9.463922,-6.419783],[2.337845,-2.036371],[-8.830931,4.016609],[3.506238,2.457452],[-8.603578,0.738120]],[[4.600421,-2.607876],[-6.138752,-4.442751],[8.636837,-5.211862],[3.977468,3.790418],[2.083267,-3.073233],[4.915817,-0.417379],[1.028563,-2.232054]],[[9.252916,-6.566932],[-4.052455,4.587302],[-4.759487,-1.807349],[3.656660,-6.853333],[-3.351577,-2.079457],[-9.018931,3.080157],[-0.765129,-2.295097]],[[1.053674,-7.163118],[-0.301742,-3.784898],[4.963445,9.339887],[9.541181,0.587921],[0.607833,4.048648],[0.246916,8.388291],[-8.240684,9.907717]]], dtype = "float64")#candidate|10122|(9, 7, 2)|const|float64
uop_10123 = relay.sqrt(const_10122.astype('float64')) # shape=(9, 7, 2)
func_328_call = mod.get_global_var('func_328')
func_331_call = mutated_mod.get_global_var('func_331')
var_10135 = relay.var("var_10135", dtype = "float64", shape = (20,))#candidate|10135|(20,)|var|float64
var_10136 = relay.var("var_10136", dtype = "float64", shape = (1536,))#candidate|10136|(1536,)|var|float64
call_10134 = relay.TupleGetItem(func_328_call(relay.reshape(var_10135.astype('float64'), [1, 4, 5]), relay.reshape(var_10136.astype('float64'), [1536,]), ), 3)
call_10137 = relay.TupleGetItem(func_331_call(relay.reshape(var_10135.astype('float64'), [1, 4, 5]), relay.reshape(var_10136.astype('float64'), [1536,]), ), 3)
output = relay.Tuple([uop_10123,call_10134,var_10135,var_10136,])
output2 = relay.Tuple([uop_10123,call_10137,var_10135,var_10136,])
func_10144 = relay.Function([var_10135,var_10136,], output)
mod['func_10144'] = func_10144
mod = relay.transform.InferType()(mod)
var_10145 = relay.var("var_10145", dtype = "float64", shape = (20,))#candidate|10145|(20,)|var|float64
var_10146 = relay.var("var_10146", dtype = "float64", shape = (1536,))#candidate|10146|(1536,)|var|float64
output = func_10144(var_10145,var_10146,)
func_10147 = relay.Function([var_10145,var_10146,], output)
mutated_mod['func_10147'] = func_10147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_10177 = relay.TupleGetItem(func_8338_call(), 0)
call_10178 = relay.TupleGetItem(func_8339_call(), 0)
output = relay.Tuple([call_10177,])
output2 = relay.Tuple([call_10178,])
func_10182 = relay.Function([], output)
mod['func_10182'] = func_10182
mod = relay.transform.InferType()(mod)
mutated_mod['func_10182'] = func_10182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10182_call = mutated_mod.get_global_var('func_10182')
call_10183 = func_10182_call()
output = call_10183
func_10184 = relay.Function([], output)
mutated_mod['func_10184'] = func_10184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9054_call = mod.get_global_var('func_9054')
func_9056_call = mutated_mod.get_global_var('func_9056')
call_10210 = relay.TupleGetItem(func_9054_call(), 0)
call_10211 = relay.TupleGetItem(func_9056_call(), 0)
output = call_10210
output2 = call_10211
func_10212 = relay.Function([], output)
mod['func_10212'] = func_10212
mod = relay.transform.InferType()(mod)
mutated_mod['func_10212'] = func_10212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10212_call = mutated_mod.get_global_var('func_10212')
call_10213 = func_10212_call()
output = call_10213
func_10214 = relay.Function([], output)
mutated_mod['func_10214'] = func_10214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9502_call = mod.get_global_var('func_9502')
func_9504_call = mutated_mod.get_global_var('func_9504')
call_10215 = relay.TupleGetItem(func_9502_call(), 0)
call_10216 = relay.TupleGetItem(func_9504_call(), 0)
output = call_10215
output2 = call_10216
func_10217 = relay.Function([], output)
mod['func_10217'] = func_10217
mod = relay.transform.InferType()(mod)
output = func_10217()
func_10218 = relay.Function([], output)
mutated_mod['func_10218'] = func_10218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9054_call = mod.get_global_var('func_9054')
func_9056_call = mutated_mod.get_global_var('func_9056')
call_10228 = relay.TupleGetItem(func_9054_call(), 0)
call_10229 = relay.TupleGetItem(func_9056_call(), 0)
output = call_10228
output2 = call_10229
func_10240 = relay.Function([], output)
mod['func_10240'] = func_10240
mod = relay.transform.InferType()(mod)
mutated_mod['func_10240'] = func_10240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10240_call = mutated_mod.get_global_var('func_10240')
call_10241 = func_10240_call()
output = call_10241
func_10242 = relay.Function([], output)
mutated_mod['func_10242'] = func_10242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9194_call = mod.get_global_var('func_9194')
func_9195_call = mutated_mod.get_global_var('func_9195')
call_10247 = func_9194_call()
call_10248 = func_9194_call()
output = relay.Tuple([call_10247,])
output2 = relay.Tuple([call_10248,])
func_10263 = relay.Function([], output)
mod['func_10263'] = func_10263
mod = relay.transform.InferType()(mod)
output = func_10263()
func_10264 = relay.Function([], output)
mutated_mod['func_10264'] = func_10264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_10295 = relay.TupleGetItem(func_8338_call(), 0)
call_10296 = relay.TupleGetItem(func_8339_call(), 0)
func_9352_call = mod.get_global_var('func_9352')
func_9354_call = mutated_mod.get_global_var('func_9354')
call_10298 = relay.TupleGetItem(func_9352_call(), 0)
call_10299 = relay.TupleGetItem(func_9354_call(), 0)
func_8974_call = mod.get_global_var('func_8974')
func_8977_call = mutated_mod.get_global_var('func_8977')
var_10306 = relay.var("var_10306", dtype = "float64", shape = (847,))#candidate|10306|(847,)|var|float64
call_10305 = relay.TupleGetItem(func_8974_call(relay.reshape(var_10306.astype('float64'), [847,]), relay.reshape(var_10306.astype('float64'), [847,]), ), 0)
call_10307 = relay.TupleGetItem(func_8977_call(relay.reshape(var_10306.astype('float64'), [847,]), relay.reshape(var_10306.astype('float64'), [847,]), ), 0)
output = relay.Tuple([call_10295,call_10298,call_10305,var_10306,])
output2 = relay.Tuple([call_10296,call_10299,call_10307,var_10306,])
func_10311 = relay.Function([var_10306,], output)
mod['func_10311'] = func_10311
mod = relay.transform.InferType()(mod)
var_10312 = relay.var("var_10312", dtype = "float64", shape = (847,))#candidate|10312|(847,)|var|float64
output = func_10311(var_10312)
func_10313 = relay.Function([var_10312], output)
mutated_mod['func_10313'] = func_10313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9004_call = mod.get_global_var('func_9004')
func_9006_call = mutated_mod.get_global_var('func_9006')
call_10323 = relay.TupleGetItem(func_9004_call(), 0)
call_10324 = relay.TupleGetItem(func_9006_call(), 0)
func_3529_call = mod.get_global_var('func_3529')
func_3532_call = mutated_mod.get_global_var('func_3532')
const_10326 = relay.const([-6.458236,6.003909,-8.123395,8.089210,-9.034145,9.592823,8.698274,0.175015,-3.516747,-3.173697,7.059639,-9.712006,3.680614,1.553507,0.148465,-7.805468,-4.749744,-4.895506,6.175806,-5.051268,0.577894,7.199980,-0.865650,2.766374,-9.336288,6.608902,5.842129,-5.141096,-8.804215,8.781646,-8.621026,7.151864,2.436753,4.550942,9.061604,-6.359177,8.592991,6.061949,5.891702,-1.595733,4.745646,0.401684,-4.326008,0.686897,5.959765,-1.706951,-2.786625,-1.815820,1.393299,6.416693,5.204340,4.575502,6.480899,6.026315,0.432419,2.352671,9.968022,3.246563,-2.217095,-5.992281,-4.040191,1.175353,2.218728,-7.043021,-5.618341,5.471651,-7.269887,-6.227393,-4.323789,-3.185076,-1.084437,-9.955119,-1.679800,9.885552,-2.520944,-8.973099,-5.833591,7.451392,-1.304192,7.030320,2.047602,-6.509298,0.966078,-5.497529,-1.154904,-3.262905,-5.806869,-1.886716,-7.110827,9.953598,-7.903085,8.786563,-3.403986,-3.449975,6.847216,4.096112,-5.505977,-0.386021,-4.590948,4.613891,4.622890,3.153450,-1.212910,-4.137745,4.076296,7.823836,1.607985,7.057573,-6.635427,-7.750745,6.047481,-7.547129,-6.665273,3.672502,1.391210,7.538284,-6.898000,-2.861184,8.142891,-9.980011,4.258388,-4.627179,-3.022694,-7.215884,4.741449,-3.495378,-7.339971,-0.874760,6.887811,2.113964,9.406836,9.498001,-5.683066,-8.237347,-4.074370,-9.190700,5.705072,7.181393,-4.960370,-5.762541,-7.478997,-1.512313,3.140447,4.375202,5.303930,-6.781337,-5.076881,-7.966109,3.649919,-5.444020,4.855077,7.984644,5.728288,9.620383,-8.834434,3.517694,-9.747862,8.490623,-2.067672,3.886374,-0.437130,-9.039004,8.424319,2.205103,-2.491819,1.114797,-1.972829,-9.888503,5.215140,-4.818787,0.235671,-1.423839,8.672756,2.109706,5.771684,6.678634,-1.633459,-0.700048,0.454128,1.870458,4.832825,6.418200,3.876391,8.421735,9.827995,1.977059,2.609301,1.788681,7.148917,-7.255653,0.231550,-0.359689,-6.548736,7.606821,-3.645545,5.603322,4.668369,-8.316937,-8.523782,3.922510,2.593922,-8.406723,4.329739,7.335204,-7.675948,4.081699,-7.562658,-6.650694,-0.787281,-9.943779,-2.206674,-7.950033,-1.132073,-7.180499,-1.303938,0.303992,-7.897091,-2.954719,3.695662,3.528519,0.478974,9.099420,-6.343708,-4.458634,2.781749,-5.009613,-6.658565,-2.978722,5.435005,7.419894,-9.249833,5.344124,-5.910481,-0.659010,0.724402,-2.312018,-0.806798,-7.742086,7.550268,0.756972,3.257347,-2.904241,-9.933328,2.909213,7.229218,8.311205,7.343924,5.066098,-0.962945,3.236482,2.704096,2.615979,6.943051,-1.061552,-3.646053,5.382069,0.923569,-2.900739,-0.836148,4.577764,-2.145536,-3.425454,1.519435,-4.300663,2.423830,-4.237619,0.837964,8.800588,0.058545,7.500147,7.360233,-0.986951,-7.138291,5.800314,-5.001683,-7.541490,5.451134,-7.024713,-1.431689,2.307597,-2.808374,-8.140321,3.736713,-4.232588,-3.963786,-4.837126,-9.681594,-6.054906,7.654275,-2.567401,1.709516,3.666876,3.345487,5.600520,-4.480268,3.876263,-7.027081,-5.565171,0.470838,9.071641,-5.038042,-5.750654,-5.701436,0.802514,-6.888432,1.166765,-5.319682,-6.030105,-6.110452,-7.846192,-4.212448,3.232882,6.139489,-4.256371,-9.135749,-0.278520,-4.946883,0.713597,-1.073916,-8.717396,-7.102712,-8.873926,-4.837249,-5.191363,-8.690747,7.184032,3.058392,-5.543279,-6.976723,9.543246,-9.006470,4.139343,-6.003881,1.691306,4.075875,7.343467,8.539691,6.914757,3.675855,-8.723961,-9.700794,-2.263184,-8.542471,-7.489483,-7.264037,8.969555,-1.986598,0.450967,5.811826,5.960934,-5.641133,1.345603,-7.539179,-2.669008,-2.496323,1.433245,-6.737207,-6.986484,-6.673412,-5.015905,9.280383,2.755053,-1.933574,-3.121627,2.022131,3.444393,0.104181,8.472950,1.548603,7.747644,-8.123803,-1.633275,-4.945948,6.313505,4.770485,9.808338,3.702956,-1.350195,7.886715,-4.933398,-6.282853,9.877783,-9.783530,5.112486,-5.509011,9.796731,-7.048047,0.261529,7.265164,9.278368,-5.839912,7.133041,-2.338966,-5.161941,-7.513874,-5.425468,-9.294571,-3.168584,3.793903,-1.086929,-1.497902,-4.296378,8.665507,-9.848668,4.319314,9.069068,-0.113922,1.350569,1.993204,1.979952,-7.095241,-3.999237,4.083888,5.308859,9.862249,-0.302366,-1.448769,-6.845142,-6.520400,-7.056105,-0.662465,-3.563751,-5.717723,0.698724,4.578924,9.449246,6.224763,-1.798562,5.447998,0.754743,5.452101,-4.904743,-1.847373,9.531422,3.593094,-9.876985,0.613677,5.042663,7.939561,1.901991,3.790922,-9.167688,7.810036,6.338054,6.085091,0.161877,-5.342157,-8.374564,-8.141749,3.495163,0.802165,4.053673,-9.753443,-6.391875,-2.742697,-3.907487,-8.367923,-0.665094,7.710818,-4.872502,-7.386356,9.678063,-3.602657,9.424114,7.645926,-4.913487,0.260181,-2.218238,-4.202009,7.950667,-7.176457,-9.507419,-4.368943,-1.804298,-2.783670,-5.788145,-0.538584,0.630021,1.859139,0.971875,-1.597215,9.150037,-9.372863,7.006640,-3.272068,3.556725,1.706801,-8.070518,-7.734893,0.733304,2.754279,8.878742,-5.103965,-3.941043,8.381441,-5.042719,-3.149133,7.408410,2.175855,8.957825,7.826930,6.254224,0.319693,1.420904,-3.907279,-9.156355,-9.601342,-6.313062,8.157166,6.620026,-0.286498,-8.436222,9.821027,6.050461,-4.292803,6.490090,7.289780,-5.653713,-9.674937,-1.981716,2.300331,-8.965881,-8.144874,-4.082150,-8.609167,5.883924,6.363836,2.764606,8.450997,-3.587239,2.506431,-8.938545,-1.238262,8.489414,-9.279307,0.966434,6.233828,8.174039,-5.024321,2.875378,4.554726,-6.145911,-4.424231,-6.084998,-3.375646,0.704475,-0.667791,5.426472,6.729277,0.732126,-8.810623,5.788438,-5.669487,-4.702260,-1.870441,4.523749,-0.826395,-1.987166,3.544200,-2.133178,4.371984,-6.548305,1.399594,-2.059641,-4.558185,-2.621677,9.058831,-9.866659,2.815294,-2.662116,-6.219157,9.692726,9.517835,7.061507,-6.025828,7.147538,-3.926851,6.675221,6.067555,-4.298897,0.853656,-2.304393,-3.608206,8.754980,5.802504,7.783711,6.216079,-3.601685,-3.498122,-9.022778,-0.421595,6.939802,9.207905,-3.203944,-3.661989,-6.877674,-5.894854,-0.952093,-1.528362,-0.560236,-7.955004,0.790124,-1.573053,-5.152619,-3.327306,-1.584315,-1.732769,0.724139,-0.370254,-7.754739,-5.104674,5.518979,-4.364477,6.139019,2.279151,-3.821847,1.583430,4.534276,-7.974178,-5.449193,-7.065485,7.157204,-6.938730,-8.286836,-1.511306,-1.012855,-1.397251,2.765404,5.833984,3.923567,-1.272162,-9.501992,6.504070,-0.007627,-4.714401,-9.345670,9.091808,2.661696,-6.472108,-4.541662,3.323472,8.321150,-9.252796,-9.264828,9.857099,-3.366450,0.257830,9.883339,7.207441,-4.833492,3.643893,-5.937332,-6.276512,-2.099122,-1.026201,-5.503747,8.699654,9.658804,-7.242032,-0.366903,5.425537,-4.306940,2.715255,2.766801,2.945572,-4.541910,4.717762,0.814607,2.244495,-4.217120,-1.117404,1.416032,6.117923,-6.213784,-3.618738,9.510557,7.193496,-2.532160,-6.776248,6.245842,-2.614484,-9.628853,5.559694,3.125018,1.962953,-2.683280,-2.005211,-5.625827,-9.791734,-7.733551,7.333509,-0.414844,1.620568,2.293535,-9.557870,6.270715,5.371055,-1.878305,1.932836,6.306717,-2.681918,-1.442131,4.705660,-2.653222,5.882452,-6.911842,-0.622105,-6.371160,6.532920,0.380958,-8.147480,-9.302023,-3.021143,-1.552739,1.449224,8.796793,2.391596,-6.102047,-2.096394,-3.488513,2.020584,-6.340978,4.991166,3.064882,-8.016718,8.430358,4.735799,-9.342730,-0.434047,1.376180,-7.094898,5.110296,6.473664,-3.368048,-4.830029,2.252045,1.891022,-6.727560,-7.780639,-2.407013,-6.718395,-3.269852,4.772132,-0.934309,3.256834,9.399838,-4.913212,-4.546299,3.110509,7.990444,3.024758,6.808589,-3.784941,-9.609687,-7.706359,5.703542,-5.045402,-1.466499,8.827198,1.490113,3.673776,-0.730642,-2.087533,1.995847,-4.092658,2.153563,7.127689,-2.067947,-8.751948,1.861532,0.823631,-7.197106,-9.202201,-8.898500,1.670168,-1.200008,-2.635131,-9.171236,9.281077,-4.769052,-3.778351,-3.004460,5.602469,5.122781,5.020947,-7.192522,9.458026,-7.392113,8.482176,4.750647,-6.309670,1.901231,5.521432,6.925926,0.711229,-3.533893,-2.820684,-9.746560,1.904566,4.424798,-2.676716,-0.637208,-0.040269,9.617351,0.844044,-0.039104,-1.688192,-0.711569,6.112181,3.976894,-0.627814,-2.546333,-4.974671,-5.166039,-0.513571,-0.127718,1.408177,6.451074,9.020341,0.992018,5.478495,-5.428566,-4.562188,2.196277,3.464184,-4.399733,-9.375078,-4.619683,8.985069,3.596300,-1.128663,-4.125266,-2.686185,-5.431175,-5.233976,-7.996769,8.162260,-2.330108,7.129440,-2.364353,-6.236001,-4.050100,2.776335,5.177566,2.638756,1.741587,-6.765662], dtype = "float64")#candidate|10326|(847,)|const|float64
call_10325 = relay.TupleGetItem(func_3529_call(relay.reshape(const_10326.astype('float64'), [7, 11, 11])), 0)
call_10327 = relay.TupleGetItem(func_3532_call(relay.reshape(const_10326.astype('float64'), [7, 11, 11])), 0)
output = relay.Tuple([call_10323,call_10325,const_10326,])
output2 = relay.Tuple([call_10324,call_10327,const_10326,])
func_10334 = relay.Function([], output)
mod['func_10334'] = func_10334
mod = relay.transform.InferType()(mod)
mutated_mod['func_10334'] = func_10334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10334_call = mutated_mod.get_global_var('func_10334')
call_10335 = func_10334_call()
output = call_10335
func_10336 = relay.Function([], output)
mutated_mod['func_10336'] = func_10336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10182_call = mod.get_global_var('func_10182')
func_10184_call = mutated_mod.get_global_var('func_10184')
call_10346 = relay.TupleGetItem(func_10182_call(), 0)
call_10347 = relay.TupleGetItem(func_10184_call(), 0)
output = call_10346
output2 = call_10347
func_10348 = relay.Function([], output)
mod['func_10348'] = func_10348
mod = relay.transform.InferType()(mod)
mutated_mod['func_10348'] = func_10348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10348_call = mutated_mod.get_global_var('func_10348')
call_10349 = func_10348_call()
output = call_10349
func_10350 = relay.Function([], output)
mutated_mod['func_10350'] = func_10350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10389 = relay.var("var_10389", dtype = "int8", shape = (11, 6, 4))#candidate|10389|(11, 6, 4)|var|int8
var_10390 = relay.var("var_10390", dtype = "int8", shape = (11, 6, 4))#candidate|10390|(11, 6, 4)|var|int8
bop_10391 = relay.not_equal(var_10389.astype('bool'), relay.reshape(var_10390.astype('bool'), relay.shape_of(var_10389))) # shape=(11, 6, 4)
output = bop_10391
output2 = bop_10391
func_10395 = relay.Function([var_10389,var_10390,], output)
mod['func_10395'] = func_10395
mod = relay.transform.InferType()(mod)
var_10396 = relay.var("var_10396", dtype = "int8", shape = (11, 6, 4))#candidate|10396|(11, 6, 4)|var|int8
var_10397 = relay.var("var_10397", dtype = "int8", shape = (11, 6, 4))#candidate|10397|(11, 6, 4)|var|int8
output = func_10395(var_10396,var_10397,)
func_10398 = relay.Function([var_10396,var_10397,], output)
mutated_mod['func_10398'] = func_10398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_10428 = func_9169_call()
call_10429 = func_9169_call()
output = call_10428
output2 = call_10429
func_10441 = relay.Function([], output)
mod['func_10441'] = func_10441
mod = relay.transform.InferType()(mod)
mutated_mod['func_10441'] = func_10441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10441_call = mutated_mod.get_global_var('func_10441')
call_10442 = func_10441_call()
output = call_10442
func_10443 = relay.Function([], output)
mutated_mod['func_10443'] = func_10443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9336_call = mod.get_global_var('func_9336')
func_9338_call = mutated_mod.get_global_var('func_9338')
call_10458 = func_9336_call()
call_10459 = func_9336_call()
func_10311_call = mod.get_global_var('func_10311')
func_10313_call = mutated_mod.get_global_var('func_10313')
var_10469 = relay.var("var_10469", dtype = "float64", shape = (847,))#candidate|10469|(847,)|var|float64
call_10468 = relay.TupleGetItem(func_10311_call(relay.reshape(var_10469.astype('float64'), [847,])), 2)
call_10470 = relay.TupleGetItem(func_10313_call(relay.reshape(var_10469.astype('float64'), [847,])), 2)
var_10473 = relay.var("var_10473", dtype = "float64", shape = (847,))#candidate|10473|(847,)|var|float64
bop_10474 = relay.bitwise_xor(var_10469.astype('int8'), relay.reshape(var_10473.astype('int8'), relay.shape_of(var_10469))) # shape=(847,)
func_9601_call = mod.get_global_var('func_9601')
func_9602_call = mutated_mod.get_global_var('func_9602')
call_10480 = relay.TupleGetItem(func_9601_call(), 0)
call_10481 = relay.TupleGetItem(func_9602_call(), 0)
func_8515_call = mod.get_global_var('func_8515')
func_8516_call = mutated_mod.get_global_var('func_8516')
call_10498 = func_8515_call()
call_10499 = func_8515_call()
output = relay.Tuple([call_10458,call_10468,bop_10474,call_10480,call_10498,])
output2 = relay.Tuple([call_10459,call_10470,bop_10474,call_10481,call_10499,])
func_10500 = relay.Function([var_10469,var_10473,], output)
mod['func_10500'] = func_10500
mod = relay.transform.InferType()(mod)
var_10501 = relay.var("var_10501", dtype = "float64", shape = (847,))#candidate|10501|(847,)|var|float64
var_10502 = relay.var("var_10502", dtype = "float64", shape = (847,))#candidate|10502|(847,)|var|float64
output = func_10500(var_10501,var_10502,)
func_10503 = relay.Function([var_10501,var_10502,], output)
mutated_mod['func_10503'] = func_10503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9468_call = mod.get_global_var('func_9468')
func_9469_call = mutated_mod.get_global_var('func_9469')
call_10505 = relay.TupleGetItem(func_9468_call(), 1)
call_10506 = relay.TupleGetItem(func_9469_call(), 1)
const_10521 = relay.const([[[3.331737,4.495027,-8.479647,6.170683,0.482526,-3.580547,-8.570153,1.189168,-1.537883,-2.832823,9.438514,-0.603755,0.914752],[-2.846908,-5.259791,6.577840,-4.612623,-1.675219,7.606940,-8.217225,2.438188,-4.750073,6.191611,5.332556,-6.501461,8.024764],[-9.991663,8.296101,8.813851,-0.783393,8.825776,-4.485251,7.940131,-6.946188,-9.459960,7.646588,7.271841,4.983460,7.406454],[-5.424381,-0.281362,-0.407779,-1.644637,0.144913,2.669481,7.207878,2.656977,-4.901453,7.015831,-0.229957,3.027113,5.703326],[4.769366,3.257048,-2.036907,-4.252666,0.477728,1.969216,6.973705,-8.306403,5.134145,4.545609,7.402644,5.983744,1.863128]],[[-5.743647,8.011180,7.725772,8.041371,-3.603026,9.388650,-2.695675,3.930654,-8.898391,-0.026372,6.192221,-0.563624,3.945863],[-6.423156,-9.856034,-4.399894,-7.346164,9.245065,-9.615475,-2.736594,-8.051169,7.397310,-8.539843,-1.173561,2.680975,1.865374],[-6.950028,-3.075261,1.569821,-9.609322,-3.126734,4.293367,5.379017,-5.723453,8.189531,-0.794194,-1.730113,-0.992661,-2.436286],[2.805858,-9.281465,-7.530372,6.071946,-1.182587,0.420175,-6.071280,5.798411,-4.441368,-8.681248,-0.579905,6.252873,4.712103],[-7.856913,-4.665569,1.819118,0.261144,5.122490,-0.564046,-5.517908,0.786537,-3.072148,4.057334,8.128453,-4.459733,-2.542101]],[[2.143343,6.107648,-9.206758,0.136262,-4.984641,-7.456461,-0.486112,3.828147,-9.241019,5.808529,3.655789,-9.769780,9.348378],[-4.681761,5.211878,-1.108091,-6.724144,-3.519130,3.573509,8.629366,-0.649733,4.022157,7.921981,5.078717,-3.926949,-3.268722],[-5.044128,-8.351793,-4.214335,1.043961,-8.598918,5.275524,6.431961,3.734500,8.501000,-7.101470,-4.792025,-5.777999,-0.838991],[-6.617785,-6.508469,-6.633097,7.701983,-3.096517,3.223759,4.266172,2.320189,-1.839206,-1.114366,4.429338,1.383626,1.284939],[-8.086525,3.694036,-9.168865,2.271650,-6.290786,9.346946,0.122706,-8.191005,-8.815719,-4.386081,-1.568626,-3.935001,-6.195245]],[[-1.752160,-8.690829,8.319431,6.428031,7.277354,-2.655203,-6.758026,8.090201,-8.644255,9.778176,4.659741,4.254046,8.088617],[2.701979,-1.220599,6.261316,3.150656,9.130587,-0.123199,4.971114,-8.379762,0.926613,4.739960,-2.604462,6.109829,-5.739750],[4.282011,-1.667111,7.521110,2.854107,3.719161,-7.743766,-5.008078,5.591788,-0.554349,-9.378204,7.192166,2.138821,-6.085360],[-7.578499,2.002399,2.866572,-1.937892,6.016954,3.409147,-0.013937,1.670903,0.510037,-6.789522,0.610935,7.268494,8.279362],[5.712888,4.457701,-4.883612,5.739034,-8.641511,5.003226,-7.708234,-5.681243,5.150347,-5.084813,9.547459,-9.858357,-9.550440]],[[-7.650515,9.594805,-5.537058,-5.465533,0.137459,-5.723322,-6.867052,0.748797,0.155984,-9.667533,3.416103,-5.515983,0.162096],[9.600848,2.407376,0.001352,9.742977,2.106234,0.388241,-8.492531,0.064714,8.479083,1.772696,1.368754,-6.089025,1.374836],[9.992602,6.308273,0.461486,-4.402755,-9.300007,1.577366,-5.987494,-7.354868,-4.383773,-1.383017,2.004206,-9.553401,-5.457871],[5.295691,8.003121,-0.340878,8.073890,8.864436,-7.513061,3.426544,8.022748,6.476303,-0.654622,4.595909,-4.395312,-8.604237],[1.710441,-4.300321,-2.182936,-5.730658,-8.908910,-7.348691,-0.983179,2.145113,8.918626,-3.759801,4.416665,-3.764585,2.938881]],[[-9.690368,-8.142191,9.957162,3.882414,1.019985,6.489697,-0.928012,1.429098,4.324529,-8.023649,-8.288455,-5.837162,0.984387],[-4.691974,2.674104,4.216793,4.178840,-7.232550,-5.077649,5.069661,4.100445,7.704890,-3.269336,-6.048897,0.801489,-4.843706],[-0.855983,-5.252735,-7.478271,7.711033,-9.819463,-1.935047,-8.489197,-9.974910,-8.116814,8.622220,-1.826920,6.520516,7.189991],[5.553657,0.870905,-3.992747,-9.267199,7.805981,-7.307156,-1.833215,4.386822,-0.058030,9.931617,-9.807369,-9.488441,4.306885],[9.430930,-9.083496,-0.870230,7.789237,8.762621,5.629501,-0.391699,5.707266,0.484778,8.994828,-9.331767,2.631894,-3.493685]],[[3.235647,5.357142,9.295997,-5.121602,2.944890,6.611516,-0.061365,-5.908651,-3.115647,-3.785701,5.512061,8.424652,-7.012471],[0.220937,2.246869,-8.759015,-0.093259,2.685905,-9.236878,5.059553,-6.552762,-9.106176,-9.902604,-3.627161,5.002978,-5.766241],[9.294590,5.408300,8.429154,9.269221,-8.020237,7.341240,7.081011,-3.319244,-8.198883,8.551391,7.032940,4.371171,-5.646575],[-0.242899,-2.059974,9.435030,3.343087,-6.107050,5.190472,5.632871,3.838286,-7.499818,-4.703340,-4.508934,4.693643,5.940398],[7.466375,-7.140344,3.454563,7.485030,2.046156,6.770494,1.518179,9.454721,6.797423,-7.150202,7.523570,2.504143,6.800359]],[[2.363906,1.467176,6.498625,5.702111,-9.843206,7.753292,5.950218,-8.678480,3.730742,-2.870012,-5.584245,4.149450,-7.835658],[-6.249175,-6.829507,9.542145,-8.829846,6.587932,9.394001,1.906835,4.061868,2.076473,4.668405,0.516908,3.639390,1.968064],[8.108542,-5.352359,9.527579,0.179131,-1.833124,1.813485,6.649013,0.129303,-0.860081,-7.710205,7.015320,-1.873674,-1.147151],[5.432281,0.925073,2.413813,4.777699,-8.551611,-6.359728,7.668154,-0.612199,9.388634,7.052418,-7.389537,5.542144,3.524078],[-9.143238,7.289088,5.643151,-4.853366,9.854850,8.334286,1.782384,-0.327640,0.497952,-7.510751,-6.163721,9.733230,-2.532685]],[[4.093469,-9.601391,-4.808358,-8.359388,1.858366,-1.381393,-9.652509,-4.637402,0.227589,5.268924,0.356904,8.568174,-2.990392],[-0.216921,1.090641,2.668321,-3.651336,5.640810,-7.477024,1.323455,4.372725,7.595338,6.205384,1.535551,9.903448,-5.522798],[0.967043,8.030864,-2.884432,9.470338,-8.344910,-7.415734,-4.502655,-3.220346,-4.985032,1.667710,0.006775,9.817011,-2.260718],[9.697669,-0.517475,-7.970183,7.113224,3.744103,0.793289,0.694494,-4.275695,8.762515,5.721172,4.111374,6.100649,2.463056],[-8.984662,6.196200,5.883568,-6.191829,7.008522,4.447843,-0.678225,-5.268867,2.459490,-3.434780,5.955452,4.278717,3.861218]],[[-9.663254,1.029363,6.267501,1.344649,-3.892868,-3.125989,-3.900650,4.734038,-9.797617,-5.766461,-6.647485,9.516768,1.544621],[-4.314782,6.138796,-6.264374,-1.080289,-4.855767,8.253687,-8.942839,-1.708568,-7.489578,-4.640687,8.701699,-2.699459,8.975704],[7.569266,9.541626,-2.846360,9.550613,6.032283,6.633125,9.189933,1.464803,3.895293,-8.773139,-8.966877,-2.369043,5.358783],[-0.450766,-7.143121,-2.297345,-7.258116,-6.977158,2.180795,-0.308074,9.368212,-5.505927,8.589149,1.556794,0.824296,1.663076],[3.297990,5.994641,2.628925,-8.988677,9.308109,7.475060,-5.396522,-0.116929,-9.375966,-5.322200,9.850758,-6.593014,-7.116434]],[[4.868732,-5.824392,-8.503580,2.402881,-1.730946,1.165111,-6.879499,3.310175,-6.586994,9.172006,3.565447,3.233833,-4.991859],[-7.704175,-6.732290,-9.625545,-1.015334,-8.183004,-2.506504,-5.637750,-2.362554,0.002874,4.326100,-8.941326,-4.185429,-2.741238],[4.748502,8.350133,-0.310639,8.715180,2.418703,8.540938,-9.731769,-5.910934,9.367574,0.316965,-1.699594,-2.496706,7.265014],[9.438360,-6.470681,8.071991,6.585504,6.318550,-2.066806,-0.114031,2.672939,3.037213,1.234528,-1.442145,3.255975,-6.798194],[9.233302,2.112110,-1.548311,-9.789574,-5.857194,-4.494945,6.751969,-1.085781,-3.776980,3.665039,-4.609809,0.956437,-0.631158]],[[-4.360798,2.403411,2.756391,2.664960,2.986921,3.362163,-4.767729,7.292720,3.391908,6.920623,-2.874705,6.141163,6.545515],[3.072877,3.973509,-7.507286,4.457297,8.732324,-9.665192,4.529032,-8.892230,-1.339395,-9.319653,6.650647,-3.422592,7.065159],[7.900577,-8.524156,-0.193690,6.005974,7.337732,3.667821,-6.770619,4.022252,2.704829,-8.209408,4.363531,3.503703,8.492041],[0.588968,3.943619,-7.483081,0.584185,3.159693,-2.989790,-3.858314,-2.143160,-8.116480,-0.663187,-6.830870,-9.048247,7.894749],[1.521942,-8.762741,2.385652,-0.060120,-8.289947,6.384177,5.413012,-3.551882,-4.846981,1.862014,-3.329848,3.935098,0.494713]],[[3.666242,-8.013258,1.475893,3.906991,-8.813446,1.263866,6.207363,-3.093959,-2.113021,7.234591,3.678264,4.897760,-8.194112],[4.284862,-6.373048,1.836975,-9.401750,-1.721702,3.903402,3.558550,-9.589460,-1.657334,4.675159,2.820371,-0.670764,-5.944221],[-0.675835,-9.766696,4.502690,-8.147817,-5.727427,0.185454,7.016485,-3.277592,0.293998,9.311501,2.081552,4.902491,-1.486151],[-1.755025,6.331702,-9.004760,-7.927321,9.202542,-1.272393,2.828605,5.837555,-5.472041,-4.828231,-3.214301,-8.282481,0.421365],[2.603464,-4.192719,8.804644,5.340191,7.145497,-6.908623,-1.498814,-6.878263,8.954790,-2.269571,-3.124010,-7.273638,7.975992]],[[6.419905,-9.766259,4.023399,9.915337,4.459169,-2.322796,-0.668104,-9.427797,3.331780,-8.082331,-7.283819,7.790724,-5.899810],[4.849061,-6.914369,3.554742,-8.281363,4.981074,-0.683613,-0.300407,6.753728,-5.674227,-2.737223,4.312356,7.247572,2.383382],[7.396219,-1.522985,2.065274,-4.257567,6.897523,4.946384,0.472224,9.091542,6.150281,8.999975,6.098326,-2.310723,1.959383],[2.095372,5.791722,-2.029306,-2.246597,7.463330,-9.503097,3.184027,1.318551,1.650053,9.851578,-5.580969,-7.041051,-9.868759],[6.013198,-7.155014,-1.413513,-9.769329,-8.868161,-9.966474,8.712632,-1.165306,-4.290524,4.603450,-4.020581,-0.231130,-9.494942]],[[9.184189,9.277170,-4.227783,-7.642575,4.780401,-5.264773,5.278682,-6.040435,0.414271,3.271394,2.961555,-2.573283,8.809309],[0.255417,-8.861601,5.684691,3.676692,1.654905,2.482381,-6.227072,-6.857306,-4.163400,3.533663,-2.908643,1.203908,2.647550],[2.973133,8.081339,-9.623257,-5.853324,-0.109732,-2.583921,-2.878885,9.313095,-4.781113,-1.839714,5.286696,-1.514783,9.285223],[3.706112,-0.997548,6.333422,-4.365999,-2.732916,-7.222744,-8.178587,-2.637679,-1.199403,-3.332460,2.941130,1.484252,-2.382221],[-4.496082,9.579790,8.024283,-5.117774,9.995600,2.548575,2.485508,6.056151,-8.088986,-1.441342,-4.241290,-0.749545,2.574549]],[[3.969592,3.531782,1.012208,-7.512520,-2.268612,4.539620,8.001258,-3.670319,8.971420,4.258395,9.431497,-5.587739,-2.098930],[-6.801398,4.521529,-4.619111,-0.475192,-2.971101,-5.960826,5.884326,-6.282556,6.127540,0.690714,-3.089780,6.705555,9.524864],[-6.930369,3.262081,8.532612,5.355200,8.803312,7.263984,3.146314,6.955058,7.639175,-2.686173,9.571626,5.106886,-9.528109],[2.179763,6.669484,-3.747313,-9.037565,5.410850,-7.666176,6.204923,-7.639501,7.196408,-9.741350,1.439611,6.608660,-8.090361],[-1.581706,-4.259565,0.360509,-3.749835,-0.716510,-0.118237,-0.104624,-1.004221,-7.144028,-8.350018,4.048032,9.672653,-5.384139]]], dtype = "float32")#candidate|10521|(16, 5, 13)|const|float32
bop_10522 = relay.power(call_10505.astype('float32'), relay.reshape(const_10521.astype('float32'), relay.shape_of(call_10505))) # shape=(16, 5, 13)
bop_10525 = relay.power(call_10506.astype('float32'), relay.reshape(const_10521.astype('float32'), relay.shape_of(call_10506))) # shape=(16, 5, 13)
func_6054_call = mod.get_global_var('func_6054')
func_6060_call = mutated_mod.get_global_var('func_6060')
const_10527 = relay.const([2,-3,6,-7,-6,3,-5,-8,7,6,3,7,5,8,3,-1,3,-7,-5,9,7,1,-2,2,3,1,6,-7,-9,6,-4,-9,1,9,-2,-5,-4,-10,-5,6,-10,1,4,-6,5,-6,-9,10,-3,-5,-9,4,7,8,6,-2,-10,10,-5,10,8,-2,3,6,3,8,4,-5,-6,6,8,6,-3,3,-5,-7,-9,2,1,7,-1,-5,-9,-9,3,6,-3,9,-1,3,5,10,9,7,2,-5,1,2,-8,6,6,1,4,-5,-2,2,-8,-1,-6,8,-4,-3,-1,-6,5,10,-2,1,3,-3,-2,-10,7,7,2,1,8,-3,-10,8,1,-7,1,10,-3,8,-6,-4,-4,6,8,-3,1,5,-5,7,3,8,3,9,-1,-9,-7,-1,8,6,5,2,5,7,2,-5,-9,2,-3,6,-10,-4,-10,8,4,-3,3,-5,3,-8,6,-10,6,-5,-3,-6,7,-9,-5,-6,3,8,-5,4,-2,2,8,1,6,-5,-8,-1,1,2,9,4,7,9,2,-1,8,2,-7,-9,10,3,5,1,-6,-1,-2,8,-7,-3,-10,5,10,-3,-2,-2,-6,-10,-9,-6,-7,3,-2,-9,9,1,-6,7,-6,3,-3,-2,-9,8,5,-4,-1,-2,-9,-5,10,-8,-4,2,-5,8,7,-7,-4,4,-8,-2,5,-3,4,3,-6,2,-5,-8,9,-10,-7,5,-1,1,-7,-10,8,9,3,-7,2,-7,-4,-9,2,-9,6,2,-3,7,-9,-4,-2,8,6,6,-5,-7,9,-9,-5,2,2,-9,1,7,-6,-7,-6,6,2,-4,-5,5,-6,5,-5,-5,4,-4,-3,-5,1,-7,-8,-3,-5,5,-7,-3,5,6,-8,-8,6,-7,2,8,-5,2,-6,-2,-1,10,-9,3,-3,-5,2,3,-7,9,-4,5,-9,-1,-4,-7,-3,-3,4,-8,4,9,-1,6,-5,-9,1,6,-1,-9,3,-9,5,-1,-9,7,4,-9,-10,-5,9,4,8,-2,-9,5,6,-10,-8,-1,10,10,6,1,4,3,-9,-5,-8,-5,7,1,-6,6,10,10,-7,-3,2,1,9,-1,-10,3,-3,-5,10,4,6,9,9,-3,-2,1,10,9,-7,-6,-9,5,9,6,5,-3,-2,-7,2,9,-8,-7,4,8,8,-10,-4,3,-6,-3,9,-4,-10,1,-10,-7,1,-7,-10,8,-8,7,5,7,10,-4,8,9,-8,-2,-1,9,3,-8,-10,2,-9,1,-2,-5,8,9,-5,6,9,4,-8,-3,-8,5,1,9,8,-2,-10,-1,6,6,10,-7,-1,2,-1,-10,8,-8,-5,-9,-8,-3,7,7,-8,7,5,9,-2,-7,6,3,-5,4,-9,-2,3,-5,1,-6,-7,7,6,9,-6,2,-4,-5,7,6,2,2,1,-6,1,1,4,9,-1,7,-3,-9,-3,5,-6,7,-6,1,-8,2,-8,7,-9,3,5,9,-10,-6,-5,-4,-9,-6,10,4,6,-7,-9,8,1,1,-3,5,-1,8,-1,6,3,-6,-1,3,8,-2,4,-8,1,-2,-10,-8,9,6,8,1,3,-8,-10,2,1,-5,-3,-2,2,9,-3,4,2,-4,-1,-6,4,9,-3,2,-4,-8,9,9,6,-5,4,-2,9,-9,-5,-5,8,-3,-4,4,-1,4,2,3,-3,6,-8,-6,-8,-7,1,-2,-7,-8,1,10,-4,-3,-8,-6,-7,-10,5,-1,-10,-6,10,10,6,-10,-1,8,-3,-6,7,3,4,-8,9,2,8,2,7,-7,1,-9,-8,-10,7,-3,7,6,-1,-10,4,2,9,1,-8,-10,-6,3,-5,-4,-10,7,-6,9,-9,-8,1,4,5,-10,4,2,-1,5,-10,8,-7,-7,10,-2,5,2,1,-9,-1,-9,-9,6,-8,7,9,7,-2,1,-2,-9,-3,4,6,2,2,-4,-4,10,3,-9,-5,-2,-3,-7,6,-4,8,4,-1,3,8,4,-2,-6,-4,-9,3,3,4,3,-7,-10,-4,9,1,-1,-1,-4,1,-8,-5,3,-6,-8,-8,10,-7,-2,-5,10,-5,8,6,-9,-10,-2,-1,6,1,8,4,-7,-8,-6,10,-10,7,-10,-8,9,-3,-6,6,-4,4,8,-1,1,-2,2,-2,-6,8,1,-3,5,-1,-2,3,-8,9,-6,-1,-10,3,4,4,-2,5,10,4,-6,8,-6,6,-9,9,5,-2,10,7,-9,-5,-3,6,8,9,-9,-2,8,-8,-4,10,-5,-6,-8,-3,4,-9,8,-2,-7,10,8,8,9,2,-3,3,-7,-4,-2,1,3,-6,-5,-7,9,-8,-9,-2,-4,-2,-9,4,-5,-10,-5,4,-10,9,9,10,3,-5,-6,-1,-3,9,9,7,-4,-3,-5,7,9,5,-3,-6,-4,-9,7,-3,4,-2,7,-6,-4,8,-8,-9,2,-5,-8,1,1,2,-9,-8,-9,5,10,5,-2,7,7,-5,9,-3,-10,-9,-2,8,-8,-4,9,-2,-1,-6,9,1,9,-6,7,-7,4,5,-1,-9,1,7,-3,10,-6,-6,-10,-3,-4,-1,-10,5,6,-2,-5,5,4,-6,1,-10,-2,3,3,3,7,-8,2,-1,-5,3,-5,6,10,-8,-7,9,-5,3,8,-5,8,2,-7,8,7,4,2,3,1,5,2,-9,-4,-4,8,7,-5,8,1,5,-7,-2,-8,-1,8,9,9,6,-2,-8,-4,-8,4,-2,-4,-5,-8,2,-3,7,10,-1,7,4,2,2,9,-6,8,9,8,2,10,4,-6,5,10,-7,-5,-8,5,4,10,8,-7,1,-1,-3,-7,-4,-9,-1,7,6,8,-1,-4,8,5,3,5,7,-6,-10,-7,-10,-5,5,-10,4,-5,-3,-9,4,-1,6,-8,5,-5,-9,-9,-9,1,-6,7,8,-6,2,6,-1,-2,2,-2], dtype = "int16")#candidate|10527|(1120,)|const|int16
var_10528 = relay.var("var_10528", dtype = "float32", shape = (630,))#candidate|10528|(630,)|var|float32
const_10529 = relay.const([-1.480752,-0.127884,4.016837,3.569188,-7.571719,-0.784313,-9.716849,5.891247,-7.503561,1.399777,0.955302,-5.755429,-2.015531,-6.371794,4.286953,-4.667927,9.102944,0.521002,9.610105,-3.714095,-6.186650,-6.734437,6.935739,-2.833408,3.115974,-2.543664,-9.159672,0.295197,5.470062,3.762576,6.064186,-4.701600,-4.892283,-0.259114,-9.228033,-0.538615,4.352928,2.893222,-6.329294,-2.190124,2.891374,-4.109368,7.929062,8.996084,-5.506690,1.375586,-6.818973,-6.864546,0.437832,-5.718336,-7.483056,-3.325558,-9.664079,-4.358693,4.964222,-4.286898,-9.063003,-9.988208,-4.151626,-5.739676,-8.481368,4.842937,6.384506,-5.090533,-4.795868,-0.806270,5.397793,-8.203067,-1.311427,-9.048969,6.467695,7.551820,-0.038825,9.161934,7.593695,3.873654,9.244564,-1.517084,-3.444984,7.276956,-4.081466,9.956323,-1.475802,5.122639,5.790823,-5.229646,-1.446312,-3.254484,3.650125,-1.229711,8.899713,0.403147,-8.940780,2.458948,-4.071705,5.641681,-8.733157,-4.745610,-9.517606,0.845894,9.481040,-4.218594,0.134940,-9.737835,-3.762022,0.751872,-9.086451,-1.664749,4.025383,-4.194712,-2.052583,-1.206520,-1.055315,3.430780,-4.428908,-4.288913,-9.103972,5.913834,4.582835,-7.385966,-2.617078,4.751244,-4.248219,4.995557,3.351682,7.102525,2.917856,-7.052139,-5.925187,-1.555235,6.746637,2.534651,8.519492,8.552017,-8.687603,-5.493493,-8.357435,-7.808582,1.035472,-6.206641,0.212445,-7.936568,8.841392,-1.597130,-2.184079,-6.443616,-1.812301,5.260226,-5.508681,-3.539570,5.564792,-3.610800,4.600810,-2.686604,-8.396913,1.497906,4.994156,8.525197,0.914839,-6.897685,-9.051416,5.675550,-0.731377,9.671830,8.583607,-3.707755,-2.469502,-0.138781,6.730534,0.576442,6.238377,8.050711,-0.116343,5.768676,-0.093888,-7.231816,-1.799630,4.673169,-5.072964,-8.486356,3.886317,-2.251620,3.582563,4.002546,-0.726715,-3.014108,4.212728,-0.047402,-3.400051,0.584170,8.676481,-3.192876,3.247582,5.620037,-3.639565,-0.606067,-0.335386,5.212873,6.506822,-5.429566,2.736682,-4.529192,-5.724634,8.599294,-9.927546,3.236057,-9.614765,-9.824056,-5.227616,3.552591,1.707597,-2.167828,0.102452,1.786459,-7.091625,-6.232335,-8.199139,-3.121471,4.111771,-0.067994,2.534083,3.678795,8.880046,1.881019,6.530533,-3.431427,-3.366870,-1.395145,-6.608049,8.332646,4.713415,2.125569,-0.626393,-2.295738,6.682065,8.534328,1.446138,-5.069121,-1.254170,-6.465897,-5.976310,-0.900718,8.571825,-9.279223,-5.841960,-1.906197,4.143285,-5.308072,5.651483,6.301955,5.685483,0.327805,-6.223994,3.297625,-1.038895,-4.660484,-7.585021,8.408981,-4.307422,7.999780,1.295430,-8.900407,2.375223,-1.009713,-2.562983,2.644019,3.921936,-5.003517,-1.235219,-4.664337,3.342385,-1.525469,-5.834038,2.867487,4.034306,0.843083,-0.364201,-2.587767,-8.384324,-7.351510,-3.500221,-7.401650,8.487280,8.094793,-2.965643,-9.502027,7.745800,9.420747,-4.404366,-2.115587,-4.372565,1.211371,5.725490,-2.459073,-4.869323,-8.058864,2.066751,-5.485194,4.827725,-4.802697,-2.365221,2.734912,9.302865,2.387744,9.771658,-9.327068,5.487263,-4.324135,7.584206,6.489919,-3.912375,-8.886132,-9.601316,-0.253673,2.536713,-7.858823,6.202751,6.079063,-4.943628,-5.980864,-8.189320,5.749939,-1.996700,-7.047043,8.208807,-5.031205,-8.270886,0.729697,9.140542,-8.849077,-8.166174,-1.558392,3.199351,9.540077,-4.500190,7.110012,-1.120336,2.159390,7.522882,-5.320925,1.594283,-6.890415,6.490660,-0.102897,9.772398,4.006423,5.720677,8.942493,0.750861,4.330504,-7.516630,-6.136055,3.191988,-9.685814,-2.654516,7.068843,2.573430,6.624124,6.305910,9.099894,-5.442806,2.548053,0.691287,-7.963557,1.201273,-5.081377,8.523681,-7.165211,-3.819277,1.990562,2.149222,-0.668915,-3.058156,7.058165,-3.970067,-6.389872,-4.998378,-4.894825,-3.018280,-2.276820,-5.287727,1.860492,-0.408804,2.204378,-2.033435,0.541214,5.936072,-7.006643,2.393022,-1.887610,3.515085,-8.525040,-1.063884,4.869390,-5.145165,-4.465309,-6.426983,-0.130674,7.778084,-5.015166,-7.060442,5.809786,4.448851,2.238736,5.014935,-2.744373,-5.381959,-7.766804,-3.537026,9.197047,-7.376751,3.378244,4.255412,5.877880,8.845681,9.468031,8.969133,-3.942554,-7.323671,2.598463,4.717154,-7.795784,-6.014271,-1.224160,-9.729778,5.888414,5.483718,-1.785728,-2.045661,3.564592,7.096816,4.060241,9.731245,9.257333,7.760983,4.663758,4.065225,-2.734773,8.209354,-6.780251,-9.848038,-9.770235,-9.366901,8.448343,-5.511589,3.140048,3.215532,-2.178934,-5.001580,-6.806148,-5.893121,-6.494773,-7.063745,7.745353,4.387691,5.789023,-1.087328,1.398590,-1.347317,8.110484,3.862087,-2.144279,-5.401799,7.484060,6.025195,-9.981975,3.472897,5.278019,-1.075838,0.161741,-3.094526,6.275028,-1.911243,5.463039,9.935447,8.107134,6.427531,5.677844,-1.406634,-5.772721,1.946602,2.014473,9.871276,-7.469478,-1.719111,0.088205,-3.811611,3.050257,5.961833,-1.974880,7.858875,6.699768,2.453794,-3.294889,0.294889,2.799779,-0.821520,-1.304337,9.668287,4.187807,-6.337082,-9.684174,4.706018,-0.513760,0.046750,-7.018439,-7.788093,6.011140,-7.329052,-6.558772,9.700419,-6.693801,-8.376629,7.307882,5.549282,4.680015,-4.641001,2.885286,1.237262,-7.002424,-6.960516,-3.727364,2.818984,-9.615034,5.232969,7.401134,7.457626,-4.464364,-4.956394,2.775591,-6.868419,-1.284365,4.200362,0.761728,5.586286,8.699873,-2.757665,-7.744924,5.801375,3.003934,9.805461,9.818168,3.149817,5.680846,-3.794110,2.997043,7.073369,6.587140,4.032805,-1.908438,-8.189350,-5.602331,9.844771,-4.033057,-3.365820,4.538675,0.573484,-2.160744,5.007268,-7.906864,-1.731406,-2.362271,2.812472,-6.539771,-4.689530,5.554592,-1.538539,4.292914,3.648837,8.153980,-4.625960,5.167394,0.798271,-3.757685,9.627438,-5.345407,-6.359107,-3.708513,-3.676501,2.525029,7.575735,-5.270290,-0.467155,5.536680,0.432759,7.786688,5.778527,9.069968,-6.969359,1.349619,3.319297,-2.593184,6.501091,9.227343,1.503688,-4.058227,-6.320491,2.837038,5.311834,-8.874356,9.390836,-4.931748,-3.624792,0.696909,6.136253,3.365616,4.353393,-4.489124,-9.715143,-0.971045,-1.538108,-3.667195,2.108318,-6.485030,-1.183372,-6.068405,-0.959546,-1.200336,-3.840058,-6.203423,1.611112,-3.194632,0.887921,2.489898,8.020392,0.002729,-4.677526,-4.519417,9.968290,-8.202718,5.124006,8.492982,9.462850,-5.858005,-8.411355,7.873001,-6.123587,-7.870367,9.953177,8.746599,5.733304,-8.407434,-0.387635,-0.397644,7.724203,5.198934,7.404431,1.737898,4.475190,-2.776746,-8.621905,4.302343,-2.633419,-9.760578,4.900832,-2.902847,-2.911642,-3.997185,0.677979,6.028977,-2.850652,8.727087,6.058609,-7.137015,-8.466237,-3.146228,0.618092,-5.811947,2.383254,5.483548,-6.369045,-7.899040,-2.791091,-1.981526,4.320305,2.817600,-8.760281,5.579032,4.996031,-0.233258,-7.445187,-9.025931,-2.214801,4.569748,3.384266,-4.311633,-7.183154,-3.165933,-6.696692,-4.206104,-4.632132,1.589772,-5.937644,2.210078,-0.310948,-6.100877,-5.154256,-6.477491,0.632082,1.529907,-9.768060,-9.530242,-2.461806,-7.761785,9.072830,-2.059482,-2.750866,0.752334,-7.801915,-6.034092,-9.884489,1.603115,5.301822,-0.249738,-1.306631,3.859463,1.329523,4.786697,-8.533268,-9.602066,6.502517,-7.124483,-5.163855,-2.380256,-1.089699,-3.168001,9.036971,1.771824,7.109672,1.212621,3.095360,2.233549,9.324079,-0.572056,-3.705526,7.756857,7.106627,1.333765,2.250799,-4.181888,-2.673970,0.420345,2.142100,-5.526991,-4.761892,-0.790032,-1.788394,-7.036672,-3.135148,8.508995,-6.089390,-4.268001,-4.400898,2.083612,-7.988861,6.233676,-9.398659,-5.850167,-3.572648,2.329949,7.876827,-0.128415,0.341436,4.461359,-1.882977,-2.432708,4.080147,-2.993705,-3.151193,-4.862369,-0.207741,5.697679,-8.333984,-6.811851,-6.556624,1.721101,9.251637,0.771975,-3.512299,-8.391072,4.050486,5.803997,-9.007502,8.445912,-7.551351,3.249666,0.658907,3.812692,-2.480874,-3.708847,4.673232,-0.621295,-1.277682,3.797451,-2.482395,7.821186,-7.972278,3.798312,-4.286923,9.756896,-5.382663,0.929260,5.044609,9.585907,-4.340023,-2.333402,4.069097,-2.620620,-2.456813,-0.814837,-4.782249,4.839433,8.782069,7.580101,5.500371,-7.394273,1.604126,9.187069,-8.996616,-3.808144,7.996520,3.225720,-4.737636,-4.546755,2.037499,6.195602,-4.218441,4.974853,0.505365,1.214526,9.795563,-1.473731,-5.457592,-0.601127,-6.528436,8.375861,5.413854,-4.075701,1.638968,7.264402,-3.714666,-4.264959,6.424837,-6.111188,-5.171771,3.855258,1.452138], dtype = "float64")#candidate|10529|(847,)|const|float64
call_10526 = relay.TupleGetItem(func_6054_call(relay.reshape(const_10527.astype('int16'), [10, 14, 8]), relay.reshape(const_10527.astype('int16'), [10, 14, 8]), relay.reshape(var_10528.astype('float32'), [630,]), relay.reshape(const_10529.astype('float64'), [847,]), ), 4)
call_10530 = relay.TupleGetItem(func_6060_call(relay.reshape(const_10527.astype('int16'), [10, 14, 8]), relay.reshape(const_10527.astype('int16'), [10, 14, 8]), relay.reshape(var_10528.astype('float32'), [630,]), relay.reshape(const_10529.astype('float64'), [847,]), ), 4)
output = relay.Tuple([bop_10522,call_10526,const_10527,var_10528,const_10529,])
output2 = relay.Tuple([bop_10525,call_10530,const_10527,var_10528,const_10529,])
func_10536 = relay.Function([var_10528,], output)
mod['func_10536'] = func_10536
mod = relay.transform.InferType()(mod)
var_10537 = relay.var("var_10537", dtype = "float32", shape = (630,))#candidate|10537|(630,)|var|float32
output = func_10536(var_10537)
func_10538 = relay.Function([var_10537], output)
mutated_mod['func_10538'] = func_10538
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10581 = relay.const([[[-9.666689,-8.457744,-0.004799,9.223977,-3.588696,2.730070,7.175275,-6.812114,3.717191,0.189676,-2.583626],[-2.053483,6.072081,-2.550684,-0.561897,0.010164,-0.054419,6.508859,-5.342479,5.840594,3.196028,8.273348],[-5.630219,-5.704637,-5.387088,3.062855,-3.192800,-8.513682,3.423293,-7.426093,-1.900261,-9.584896,2.766695]],[[5.593696,-5.906951,-7.568936,7.339792,6.718866,4.434248,2.352753,4.219636,6.031355,-4.021787,-1.885848],[-0.013086,-1.546232,-0.303803,-0.840260,-1.597849,4.074342,-7.149563,-7.497493,3.020738,1.228539,7.168584],[-2.634370,5.963989,-6.321529,5.891132,3.802838,8.224669,-4.773658,-9.906905,6.479645,-1.735757,-1.219487]],[[-5.756745,1.999409,-5.470650,7.378579,1.001778,-0.168112,5.308637,1.532679,9.791048,-0.611439,-3.351916],[-7.111022,7.362771,9.812829,-2.930966,-9.891409,-2.863955,2.731415,-5.473360,-0.363540,-7.442870,-8.945601],[-3.270518,2.555058,-0.749727,-0.418822,-5.013053,-5.537585,0.619067,-0.054263,3.491765,-0.054407,-0.633226]],[[-0.521973,-7.374449,-8.158561,7.918790,-4.421147,-0.852520,-3.278587,-5.189425,7.052435,6.855462,-3.789662],[8.497452,8.954909,-6.906322,-6.959238,1.203704,4.032883,-4.497111,-0.300694,5.868696,0.060954,-1.438298],[-0.143532,-0.257586,-2.472105,6.774796,-9.098468,9.718681,8.673197,-9.158749,-7.712546,-6.151255,1.248890]],[[0.125711,3.846734,3.115025,3.698182,-6.673735,-1.511835,5.882965,-4.427934,1.475985,-9.679221,-5.667151],[-6.867022,3.084053,-3.785141,6.184018,-6.211661,-7.199663,4.631994,-6.896056,9.104714,-5.958071,-6.786196],[-4.606924,9.719098,2.803925,-8.265076,5.997918,-3.318801,1.901949,9.917354,8.781863,-3.401657,4.161644]],[[6.358826,-7.928938,-9.935414,-4.715790,-6.054384,6.917117,-9.965585,2.006726,7.939249,-5.677504,-2.641469],[-7.994690,-0.982219,8.215225,4.310002,-5.284651,3.958271,-1.343498,6.765338,-6.401347,2.166900,9.539786],[-7.106866,3.665976,-9.831088,-4.270938,1.432295,-9.461131,-2.761985,-2.559772,-8.339558,-1.116474,8.567239]],[[6.228842,5.169803,3.665463,9.975489,-7.751712,2.902816,4.557663,5.576332,-0.760269,0.076370,-9.871671],[6.730207,4.473337,9.350837,8.695955,-7.459738,-2.302131,-7.220640,8.114948,-9.275581,0.362555,7.655873],[1.154647,-6.985583,4.539184,-1.743150,6.918429,2.186284,1.882133,-0.237147,8.048688,6.493543,-7.481556]]], dtype = "float32")#candidate|10581|(7, 3, 11)|const|float32
uop_10582 = relay.log(const_10581.astype('float32')) # shape=(7, 3, 11)
bop_10602 = relay.less_equal(const_10581.astype('bool'), relay.reshape(uop_10582.astype('bool'), relay.shape_of(const_10581))) # shape=(7, 3, 11)
bop_10605 = relay.equal(uop_10582.astype('bool'), relay.reshape(bop_10602.astype('bool'), relay.shape_of(uop_10582))) # shape=(7, 3, 11)
func_8814_call = mod.get_global_var('func_8814')
func_8816_call = mutated_mod.get_global_var('func_8816')
const_10611 = relay.const([-0.686714,-8.432599,-5.209434,-2.600969,1.439117,-7.207109,-1.559061,-5.223160,-7.527170,3.957808,-6.294687,-7.140216,6.252908,-0.009472,-6.865110,9.324219,-6.369402,-5.220855,-6.653802,-8.614336,-4.126281,-0.198385,-8.315391,6.184891,-2.497200,-4.328203,-8.514170,3.971727,5.450432,-0.811883,-7.758558,-8.928232,-9.571182,-6.585632,-0.168971,-1.898295,8.644846,2.909606,6.940128,-4.481327,-6.548488,-9.871410,-9.017361,-4.788541,4.942131,3.652357,-4.358558,-5.356786,5.510800,-3.084338,2.190972,-1.354956,4.143372,2.256274,1.663829,7.163648,-6.095433,-0.155439,2.674497,-4.167566,-3.029309,-6.209111,-7.106338,7.775309,6.376000,8.116804,-1.159641,-9.751862,1.675528,-6.446800,1.711568,-2.800061,6.604293,-5.797486,-0.439980,3.245507,6.611191,8.865962,-1.770254,9.861182,-8.727903,-3.900952,-6.945806,4.655043,-6.767998,-5.646029,7.586782,2.583286,-0.402036,0.630183,9.080029,8.077594,-1.691893,-7.874185,4.242988,4.467051,-7.827319,-3.041811,-6.770615,-7.225229,2.413437,-7.623324,-5.191051,1.296001,-2.190332,5.364243,1.415278,-9.679899,9.829941,-0.214812,-4.967697,5.074673,8.370424,0.107676,9.272443,0.048252,6.429697,0.611139,2.050638,-9.630799,6.569566,2.926133,-7.207154,-5.729990,-5.940506,-9.154609,-0.167886,6.250560,3.771092,7.290322,3.864770,5.470964,1.084474,-2.737140,6.875434,-5.078004,-8.346790,2.641914,7.283682,-9.799403,-3.313297,-1.423081,-1.430842,-9.913110,-0.099164,-7.853080,-6.736435,-3.030736,-8.354873,7.861548,0.682705,-2.320052,7.923180,-2.695769,-6.185070,7.800323,9.982379,5.587028,4.508945,2.878039,-9.225075,7.441668,0.970537,-3.049078,-2.978884,5.616087,1.624177,8.481132,9.393298,4.188386,3.924465,-7.325473,-9.660613,-1.054524,-9.958730,2.637629,-8.609041,4.585828,3.655600,9.368434,6.574198,8.860082,5.222883,-9.477053,6.902182,-8.786800,-3.445326,1.643486,-3.197815,-2.935587,-5.999752,1.272438,9.217472,-2.441290,-4.480463,-5.458274,6.580515,-2.837379,0.287800,4.709017,-2.059639,1.941570,7.536344,2.007038,-0.260837,-3.305989,-5.192145,8.823760,-8.901028,-8.987233,-0.088625,3.401305,-3.887972,-2.247088,-7.486887,-2.410147,4.512017,9.345689,6.650519,-0.821054,-6.610443,-7.602574,1.720614,-2.297664,3.523336,-1.912464,-0.300479,4.793178,-8.279819,-4.482958,-4.496090,8.200254,-4.214264,-0.158376,-0.010880,5.980982,7.529552,9.932215,-1.061112,-5.885708,-9.155748,6.915430,-8.356969,7.466873,-3.920807,7.585076,6.794572,-7.039495,1.490748,5.482472,8.002736,0.977679,-4.759288,4.644089,-4.847301,-6.500136,0.145726,5.543227,7.227940,-9.988198,-5.507371,-2.956286,-3.580201,1.160034,8.429066,9.761380,-6.784272,9.219222,3.198087,9.024276,-7.134092,-6.696380,4.194159,-3.998089,4.632574,-2.582033,-7.651433,7.787716,9.415590,7.643245,8.756742,4.924314,5.183062,-7.855871,-8.262409,-9.066279,4.297748,-5.358977,6.356948,9.563378,9.437871,-3.284616,-6.414494,-8.334983,8.851055,-0.458149,1.668093,-9.543430,-7.213939,2.790091,-0.727723,-1.764822,5.618410,-2.657157,1.548902,3.937897,3.910742,-5.863171,2.480596,8.676231,-8.106059,6.033036,6.101264,-3.132409,-6.753397,-0.036749,-2.077909,-4.609513,7.886139,-4.893328,4.812642,8.542357,2.451366,-9.358054,3.961690,3.683356,-1.542057,6.469596,-2.007968,4.941552,2.555553,5.817876,-3.287765,9.912705,-9.997454,-1.962524,6.639867,-5.358016,-8.023233,7.412101,-4.468004,3.770739,0.671560,2.889206,1.537494,-8.200743,-9.599791,-6.888886,-1.818410,1.136113,7.964415,-4.224672,3.962476,3.226576,1.508732,5.387837,-9.019192,-3.655362,8.065243,7.846089], dtype = "float32")#candidate|10611|(360,)|const|float32
call_10610 = relay.TupleGetItem(func_8814_call(relay.reshape(const_10611.astype('float32'), [1, 360])), 1)
call_10612 = relay.TupleGetItem(func_8816_call(relay.reshape(const_10611.astype('float32'), [1, 360])), 1)
uop_10613 = relay.tan(bop_10602.astype('float32')) # shape=(7, 3, 11)
func_10240_call = mod.get_global_var('func_10240')
func_10242_call = mutated_mod.get_global_var('func_10242')
call_10620 = func_10240_call()
call_10621 = func_10240_call()
var_10623 = relay.var("var_10623", dtype = "float32", shape = (7, 3, 11))#candidate|10623|(7, 3, 11)|var|float32
bop_10624 = relay.multiply(uop_10613.astype('uint64'), relay.reshape(var_10623.astype('uint64'), relay.shape_of(uop_10613))) # shape=(7, 3, 11)
func_9476_call = mod.get_global_var('func_9476')
func_9477_call = mutated_mod.get_global_var('func_9477')
call_10630 = func_9476_call()
call_10631 = func_9476_call()
output = relay.Tuple([bop_10605,call_10610,const_10611,call_10620,bop_10624,call_10630,])
output2 = relay.Tuple([bop_10605,call_10612,const_10611,call_10621,bop_10624,call_10631,])
func_10639 = relay.Function([var_10623,], output)
mod['func_10639'] = func_10639
mod = relay.transform.InferType()(mod)
mutated_mod['func_10639'] = func_10639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10640 = relay.var("var_10640", dtype = "float32", shape = (7, 3, 11))#candidate|10640|(7, 3, 11)|var|float32
func_10639_call = mutated_mod.get_global_var('func_10639')
call_10641 = func_10639_call(var_10640)
output = call_10641
func_10642 = relay.Function([var_10640], output)
mutated_mod['func_10642'] = func_10642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9742_call = mod.get_global_var('func_9742')
func_9744_call = mutated_mod.get_global_var('func_9744')
call_10664 = relay.TupleGetItem(func_9742_call(), 0)
call_10665 = relay.TupleGetItem(func_9744_call(), 0)
func_10240_call = mod.get_global_var('func_10240')
func_10242_call = mutated_mod.get_global_var('func_10242')
call_10683 = func_10240_call()
call_10684 = func_10240_call()
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
var_10690 = relay.var("var_10690", dtype = "float64", shape = (1536,))#candidate|10690|(1536,)|var|float64
call_10689 = relay.TupleGetItem(func_179_call(relay.reshape(var_10690.astype('float64'), [16, 12, 8])), 0)
call_10691 = relay.TupleGetItem(func_182_call(relay.reshape(var_10690.astype('float64'), [16, 12, 8])), 0)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_10693 = func_9169_call()
call_10694 = func_9169_call()
output = relay.Tuple([call_10664,call_10683,call_10689,var_10690,call_10693,])
output2 = relay.Tuple([call_10665,call_10684,call_10691,var_10690,call_10694,])
func_10696 = relay.Function([var_10690,], output)
mod['func_10696'] = func_10696
mod = relay.transform.InferType()(mod)
mutated_mod['func_10696'] = func_10696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10697 = relay.var("var_10697", dtype = "float64", shape = (1536,))#candidate|10697|(1536,)|var|float64
func_10696_call = mutated_mod.get_global_var('func_10696')
call_10698 = func_10696_call(var_10697)
output = call_10698
func_10699 = relay.Function([var_10697], output)
mutated_mod['func_10699'] = func_10699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10217_call = mod.get_global_var('func_10217')
func_10218_call = mutated_mod.get_global_var('func_10218')
call_10733 = func_10217_call()
call_10734 = func_10217_call()
output = relay.Tuple([call_10733,])
output2 = relay.Tuple([call_10734,])
func_10736 = relay.Function([], output)
mod['func_10736'] = func_10736
mod = relay.transform.InferType()(mod)
output = func_10736()
func_10737 = relay.Function([], output)
mutated_mod['func_10737'] = func_10737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9004_call = mod.get_global_var('func_9004')
func_9006_call = mutated_mod.get_global_var('func_9006')
call_10825 = relay.TupleGetItem(func_9004_call(), 0)
call_10826 = relay.TupleGetItem(func_9006_call(), 0)
uop_10837 = relay.sin(call_10825.astype('float32')) # shape=(16, 5, 13)
uop_10839 = relay.sin(call_10826.astype('float32')) # shape=(16, 5, 13)
output = uop_10837
output2 = uop_10839
func_10847 = relay.Function([], output)
mod['func_10847'] = func_10847
mod = relay.transform.InferType()(mod)
mutated_mod['func_10847'] = func_10847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10847_call = mutated_mod.get_global_var('func_10847')
call_10848 = func_10847_call()
output = call_10848
func_10849 = relay.Function([], output)
mutated_mod['func_10849'] = func_10849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_10875 = func_9169_call()
call_10876 = func_9169_call()
output = call_10875
output2 = call_10876
func_10911 = relay.Function([], output)
mod['func_10911'] = func_10911
mod = relay.transform.InferType()(mod)
mutated_mod['func_10911'] = func_10911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10911_call = mutated_mod.get_global_var('func_10911')
call_10912 = func_10911_call()
output = call_10912
func_10913 = relay.Function([], output)
mutated_mod['func_10913'] = func_10913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_10953 = func_9169_call()
call_10954 = func_9169_call()
output = call_10953
output2 = call_10954
func_10958 = relay.Function([], output)
mod['func_10958'] = func_10958
mod = relay.transform.InferType()(mod)
mutated_mod['func_10958'] = func_10958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10958_call = mutated_mod.get_global_var('func_10958')
call_10959 = func_10958_call()
output = call_10959
func_10960 = relay.Function([], output)
mutated_mod['func_10960'] = func_10960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11013 = relay.var("var_11013", dtype = "int8", shape = (7, 15, 15))#candidate|11013|(7, 15, 15)|var|int8
var_11014 = relay.var("var_11014", dtype = "int8", shape = (7, 15, 15))#candidate|11014|(7, 15, 15)|var|int8
bop_11015 = relay.greater(var_11013.astype('bool'), relay.reshape(var_11014.astype('bool'), relay.shape_of(var_11013))) # shape=(7, 15, 15)
output = bop_11015
output2 = bop_11015
func_11019 = relay.Function([var_11013,var_11014,], output)
mod['func_11019'] = func_11019
mod = relay.transform.InferType()(mod)
var_11020 = relay.var("var_11020", dtype = "int8", shape = (7, 15, 15))#candidate|11020|(7, 15, 15)|var|int8
var_11021 = relay.var("var_11021", dtype = "int8", shape = (7, 15, 15))#candidate|11021|(7, 15, 15)|var|int8
output = func_11019(var_11020,var_11021,)
func_11022 = relay.Function([var_11020,var_11021,], output)
mutated_mod['func_11022'] = func_11022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10958_call = mod.get_global_var('func_10958')
func_10960_call = mutated_mod.get_global_var('func_10960')
call_11125 = func_10958_call()
call_11126 = func_10958_call()
output = call_11125
output2 = call_11126
func_11133 = relay.Function([], output)
mod['func_11133'] = func_11133
mod = relay.transform.InferType()(mod)
mutated_mod['func_11133'] = func_11133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11133_call = mutated_mod.get_global_var('func_11133')
call_11134 = func_11133_call()
output = call_11134
func_11135 = relay.Function([], output)
mutated_mod['func_11135'] = func_11135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9436_call = mod.get_global_var('func_9436')
func_9437_call = mutated_mod.get_global_var('func_9437')
call_11136 = relay.TupleGetItem(func_9436_call(), 0)
call_11137 = relay.TupleGetItem(func_9437_call(), 0)
output = call_11136
output2 = call_11137
func_11150 = relay.Function([], output)
mod['func_11150'] = func_11150
mod = relay.transform.InferType()(mod)
mutated_mod['func_11150'] = func_11150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11150_call = mutated_mod.get_global_var('func_11150')
call_11151 = func_11150_call()
output = call_11151
func_11152 = relay.Function([], output)
mutated_mod['func_11152'] = func_11152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11150_call = mod.get_global_var('func_11150')
func_11152_call = mutated_mod.get_global_var('func_11152')
call_11153 = func_11150_call()
call_11154 = func_11150_call()
func_8694_call = mod.get_global_var('func_8694')
func_8698_call = mutated_mod.get_global_var('func_8698')
const_11160 = relay.const([10,-8,8,-6,7,8,-7,8,-2,1,-4,-7,-2,9,-8,4,-6,3,-2,-10,1,6,1,-8,-6,-6,7,-1,-6,-10,-9,-6,-7,-10,8,-9,-10,-4,1,-3,-2,-7,-2,-10,9,5,-6,-4,10,5,5,-4,9,5,2,8,7,-5,-6,-9,6,-4,5,-7,-1,2,6,-1,3,-4,-4,-9,10,1,-8,2,2,-8,3,1,-8,1,8,9,-8,6,-7,-4,-10,4,5,4,1,6,9,-9,-2,-3,2,4,6,5,-7,-2,-4,-7,-2,6,-4,9,-2,10,-9,-4,4,-5,8,-4,7,-3,4,-9,2,-10,-10,2,7,3,7,-9,5,-1,-3,9,-3,-2,2,-3,-9,-5,-2,-10,-8,-7,2,6,-1,4,2,-4,6,9,-9,6,-5,-8,5,6,-5,-10,10,-6,-1,-2,4,5,4,-9,6,3,-6,8,3,7,-8,4,-1,6,-3,-4,-4,8,-2,-1,4,-10,6,-2,-2,6,-5,8,1,9,-2,-10,3,6,-4,-6,2,-9,-3,-9,9,7,-6,-4,-8,-10,8,-9,-7,-8,4,9,9,-8,8,-7,5,-5,-8,-9,-1,-9,8,-2,4,5,-4,-6,2,-5,-3,9,6,-2,-2,1,7,-4,7,-9,-8,9,-9,-4,10,1,-10,3,4,-2,-4,10,2,-6,4,10,-10,-1,-3,-9,-4,6,3,-2,5,-3,-5,-2,-1,-8,6,4,-6,-6,-1,1,7,9,-7,7,3,2,-7,8,7,-2,1,-10,2,-5,-10,8,2,-7,8,-2,8,-2,-10,-4,6,1,-1,-4,8,-5,6,6,-3,-8,9,-6,5,3,-8,-2,10,-2,6,-3,7,-3,-3,2,3,7,-1,-10,-10,-2,9,-3,-9,1,2,2,-4,-2,-5,5,6,2,6,2,7,6,-7,-7,5,4,2,5,-2,-4,-3,6,10,5,-2,-2,2,-4,-7,7,-9,-9,10,10,3,10,-3,-3,6,1,-6,8,-2,-9,3,1,9,-4,4,-1,-8,-2,9,7,5,5,2,-1,6,-3,4,-5,-6,1,3,-6,5,5,5,-1,-10,4,-2,6,3,-8,-7,-1,2,-2,8,-7,8,-8,1,-3,-8,5,-2,-7,-4,3,10,2,-7,-6,-2,9,4,-3,9,-10,-3,-6,-7,9,9,-1,-5,8,7,7,8,9,3,9,-8,-6,3,5,6,9,3,4,-3,9,8,-9,-2,-10,-8,5,-9,6,-5,-2,-4,-6,-3,4,3,-5,-9,-9,3,-4,-10,9,-1,3,-8,7,-10,-9,-1,10,-8,5,1,10,3,7,4,5,2,1,7,-10,-9,9,-3,6,-3,-1,-4,10,-5,-3,4,-4,7,4,1,10,-4,4,7,-1,8,7,-10,-1,4,4,3,-2,-3,-4,-2,-6,3,-6,-9,-1,8,1,4,5,-6,-4,6,9,4,-4,10,-5,-2,-3,9,-8,-1,6,-10,3,-9,5,3,-7,-7,-7,2,10,-4,-5,-7,9,3,-3,-6,9,3,3,7,-7,2,3,-6,10,-6,-5,1,10,9,6,-2,-3,10,5,7,-4,-5,-4,10,3,10,-6,1,-4,-3,-8,-7,4,-8,-5,-10,-3,-7,-6,-1,-10,6,-4,6,-9,-10,6,1,-5,8,1,10,-10,1,4,4,4,10,7,6,6,7,1,3,-5,9,-8,-2,-6,6,-6,3,-10,-6,10,-7,7,-10,9,6,6,-2,4,5,-8,1,-5,3,-7,4,-10,6,4,8,9,9,-1,2,-8,7,-9,-9,-1,10,1,7,-7,-1,-1,4,4,5,-8,-9,5,-10,4,-9,-2,-5,4,-4,-7,2,3,7,-1,1,1,-6,7,3,5,-6,-2,10,7,7,-7,1,6,7,4,9,-7,-4,-10,6,8,4,5,5,6,-5,2,-4,5,8,-9,-7,-1,-3,-5,-6,-10,-2,-2,6,-9,-2,-6,1,-10,-1,5,7,8,-5,-6,-7,-1,1,3,3,10,-5,4,10,-5,4,10,6,-9,10,-3,-4,-5,10,-4,-2,-10,3,-2,-9,3,-9,-5,8,7,3,-6,-4,4,8,7,-4,-6,-1,7,9,5,2,2,-8,-7,-1,-8,3,1,1,1,4,-10,8,-9,9,5,-6,1,-10,-4,3,-5,3,-6,-3,8,4,6,-9,-1,9,-10,-6,8,9,-4,2,-7,-5,-9,-9,8,7,9,9,4,5,2,5,5,9,-4,-1,8,-5,-6,4,-10,-8,-8,-9,4,6,-7,-5,5,-4,-9,-10,-10,-3,-1,-10,9,2,-6,2,4,7,9,4,10,-2,2,5,9,10,-9,1,-10,-7,-3,-8,5,8,9,-9,-1,-9,3,7,-4,-1,7,10,6,-4,6,-6,9,-6,-8,-9,-6,-2,-2,10,-5,-10,-5,-10,10,10,5,-9,-1,-3,2,6,10,-6,8,-10,-8,-5,-3,-4,8,8,-9,10,-2,7,-4,-9,-2,9,-10,2,9,1,-2,-4,-8,-4,9,-6,-6,4,-9,-8,-9,-10,-6,-9,10,9,-4,2,7,-8,9,-7,9,9,-4,9,-2,4,-3,-6,-10,7,-2,-7,-5,5,-3,3,4,9,6,1,1,7,6,-9,2,4,2,-3,8,-3,8,2,7,-10,-1,1,8,-6,-3,5,-10,9,10,-1,8,1,1,10,7,10,-2,-2,1,5,4,1,-8,-5,2,1,1,8,5,1,9,-4,2,-1,5,-7,5,2,-8,-4,-5,2,6,10,-9,7,-10,-7,4,-5,4,-7,-10,4,6,-8,-4,-8,10,6,-1,-5,4,5,-2,7,2,6,-5,-8,10,-3,-6,-9,-3,8,-7,-4,7,-1,10,4,3,4,10,-8,-9,9,6,-4,2,-10,4,-2,-5,-1,-10,-7,-5,-1,-2,-9,2,6,5,-4,1,10,9,-8,4,9,4,-8,-6,6,-10,9,-3,1,-7,7,-10,-7,8,5,-5,-9,-4,-10,8,10,-2,-3,6,-5,10,2,10,10,5,3,4,2,8,8,-9,7,9,-8,-1,-9,8,10,-3,5,10,9,-9,1,3,5,-8,-5,2,2,-8,-4,-4,-4,9,-4,-9,-10,-4,-8,-10,10,7,5,-1,-3,-9,5,3,10,-9,10,9,-6,3,-1,7,1,9,3,4,-8,3,8,-1,10,3,5,2,-7,5,7,1,8,-5,-9,5,4,9,5,-10,-9,5,-7,9,-1,1,-8,6,-4,7,4,1,1,1,1,3,6,-7,-6,-8,3,-4,4,7,5,-1,7,6,-3,5,8,-7,-9,-9,3,1,5,-4,-7,6,4,-8,9,-8,1,-6,3,-3,-10,-7,-8,-6,4,-3,-3,-1,-6,10,5,8,1,-4,9,-9,8,1,-4,2,-9,9,3,10,10,-5,-8,-10,-6,7,10,4,2,7,-2,-4,-1,4,-2,5,4,7,-2,-3,1,-4,6,10,-3,3,-3,6,-9,-2,-7,-3,7,-5,8,9,-7,-10,-3,10,7,-1,8,8,10,-8,-7,7,4,-6,9,-2,10,-7,4,1,1,-4,1,-6,-4,-7,-7,8,4,4,1,10,-7,4,-6,-5,-7,6,2,9,6,10,10,-5,-2,-10,4,-4,-8,-4,-5,1,-9,10,-7,-9,6,-6,-7,-3,-9,-10,2,4,4,4,7,1,-2,-7,-1,2,6,-4,-1,10,9,-3,-5,2,-4,-9,4,7,9,5,-10,7,-6,-9,-7,7,10,-8,-6,6,-9,-3,3,10,-3,1,-3,9,1,-6,-8,4,-2,3,-5,2,-4,-8,4,-8,-5,10,9,-5,9,9,-6,-5,7,8,9,-5,-4,9,-3,7,-7,-3,-8,7,2,5,10,6,-10,-1,-6,-1,1,10,-6,-1,-4,9,5,-1,5,6,-8,5,9,-8,-2,9,2,7,-6,10,5,4,-9,-8,1,-10,-6,-10,2,-2,-8,8,-10,-7,-5,6,8,9,-5,2,1,-8,8,2,5,-2,4,-4,-7,1,-9,2,-9,5,-8,-1,-8,3,-6,-5,8,-3,-9,9,9,8,10,-7,8,4,-10,2,5,-5,-2,-9,8,-5,2,-5,-5,-9,2,6,8,6,7,6,-7,3,9,-10,-6,6,-10,-9,3,-1,-3,-4,9,9,-2,-7,5,-6,2,5,-2,7,1,8,5,-8,-6,-1,2,10,6,3,-7,-10,-7,-8,6,-1,-3,-1,-8,-9,3,9,2,1,9,1,-3,7,-4,10,-10,6,-10,2,-10,-2,2,8,5,2,-1,1,2,7,1,-7,-8,4,2,6,8,-4,-3,4,10,-1,-9,-7,8,-8,-1,2,7,-7,-6,2,-5,4,-7,-4,-4,-9,7,3,-10,-6,5,-2,6,5,4,-5,6,-7,-8,1,5,-7,6,8,1,10,-2,2,2,7,7,-7,1,-7,4,-3,7,-9,-9,2,-1,-10,3,-10,-9,4,-8,10,-4,10,-6,7,2,8,-5,3,-3,8,3,2,6,2,7,-5,3,-9,8,-2,-1,2,-3,1,-6,-1,-8,4,6,-8,-10,-4,-8,-1,8,-7,-6,-5,3,-4,-5,-1,5,-9,-3,-6,9,7,-4,4,-2,10,-9,8,9,3,4,-10,-1,-1,-3,-7,-8,2,3,-3,4,-4,6,-6,-1,-2,-3,3,9,-8,3,-9,-2,-5,4,1,-3,4,6,-8,-9,3,3,7,3,8,-3,-9,7,-9,3,-10,6,8,4,-2,-4,-4,-2,-1,-6,-1,6,-3,5,4,3,-6,8,2,10,4,8,3,8,-7,2,5,-9,9,-10,3,6,4,-5,-7,-2,-1,8,-2,-7,-3,8,-7,6,-4,8,4,9,10,-6,-9,8,9,-3,4,-2,10,-7,-9,-2,1,-10,-6,3,-3,2,5,3,8,7,-7,-9,8,-6,10,10,10,4,-1,3,-8,-7,7,-9,7,6,-4,2,2,-1,-6,2,10,-3,7,-4,-10,-7,2,-1,1,-6,-2,-7,8,7,-8,1,6,-1,-9,5,-8,6,8,3,-3,-4,-9,1,8,1,-4,-6,-6,5,-1,-5,-3,-3,8,-2,-6,8,-9,3,5,-3,-6,-3,-5,-8,-7,9,3,4,-7,2,3,1,9,9,-7,6,3,-8,6,-7,10,-4,8,-4,-4,-10,-10,-9,2,4,-2,5,-8,4,-2,8,6,4,-1,9,-9,-4,-10,8,5,-3,2,2,2,7,-8,-5,8,8,-10,-5,-8,9,-6,-1,-9,-5,4,-5,5,10,7,-8,7,-4,-3,-7,2,8,-3,6,-3,6,-10,4,5,9,-9,8,-2,-2,-3,-5,-5,10,2,-1,-9,-2,10,-6,-10,-6,3,5,-6,10,8,-4,-10,2,-2,-9,-9,-2,7,-3,-5,5,5,-3,9,-4,-9,-9,-3,-3,3,8,4,-3,9,9,-7,4,-6,-6,-8,-9,9,8,-8,-8,2,5,9,-7,3,4,2,-3,5,-1,-2,-2,10,-2,2,1,10,-9,3,-7,4,6,9,4,1,-7,-8,3,-10,10,8,5,7,-5,2,7,-3,-3,4,-4,-3,-9,1,-10,-8,-10,-4,-4,-9,-1,1,10,-3,-6,-10,-6,-3,-5,9,-7,8,5,2,-2,8,-5,-3,5,-8,7,-3,-1,7,5,3,-3,9,4,-5,6,2,-4,-6,3,2,-2,-2,-5,10,3,2,-8,-3,-2,-9,-4,10,5,9,-8,9,-9,-4,10,-4,9,8,-5,-10,-1,-5,-9,3,1,-6,-4,-10,6,7,7,-10,7,6,10,9,6,-6,-1,10,2,10,3,-9,1,6,9,-6,5,-8,-9,-6,-3,9,1,5,-7,9,2,-2,6,-4,-3,1,4,3,-6,-6,1,-2,-7,6,-1,-6,3,-9,6,-5,-4,9,6,9,2,1,-3,8,2,-3,-8,-8,-9,-3,-10,5,5,-2,-7,2,-8,-7,-10,8,8,4,4,-9,9,-7,-10,-3,-8,7,7,7,6,6,-8,5,10,3,1,7,6,1,10,-3,10,-6,-1,4,-6,1,-9,-9,8,-2,-6,1,5,-5,7,-3,-8,-5,1,-6,4,-10,-8,1,-3,-6,-4,-8,-10,-3,-3,-5,-5,-3,4,3,9,-10,-6,-4,5,-7,-9,-7,-2,-8,-7,7,5,-10,1,8,9,-6,10,6,-10,-2,10,7,-10,-8,-10,-10,-4,6,4,-5,4,9,-3,-7,10,1,-1,-1,-5,-7,-3,-10,5,-4,1,-5,-5,9,1,-1,7,8,-10,8,-9,10,2,-3,-7,-10,-8,-3,9,-1,10,-9,3,7,-8,1,-2,1,1,2,1,-6,5,4,-3,-2,6,-2,-1,-4,-5,-8,6,-10,-3,4,-2,-5,-4,-3,-3,-2,8,-5,4,-8,4,6,5,-6,-10,-4,-3,-1,9,5,-9,-8,10,6,5,-5,-1,-1,-8,-7,-9,3,4,-10,8,-5,-2,-5,-8,-8,-4,4,-3,2,-1,-2,-3,-2,-8,10,-8,2,5,2,-8,-8,3,-8,8,10,2], dtype = "uint64")#candidate|11160|(2475,)|const|uint64
call_11159 = relay.TupleGetItem(func_8694_call(relay.reshape(const_11160.astype('uint64'), [15, 15, 11]), relay.reshape(const_11160.astype('uint64'), [15, 15, 11]), ), 0)
call_11161 = relay.TupleGetItem(func_8698_call(relay.reshape(const_11160.astype('uint64'), [15, 15, 11]), relay.reshape(const_11160.astype('uint64'), [15, 15, 11]), ), 0)
uop_11170 = relay.asinh(call_11159.astype('float64')) # shape=(15, 15, 11)
uop_11172 = relay.asinh(call_11161.astype('float64')) # shape=(15, 15, 11)
func_10696_call = mod.get_global_var('func_10696')
func_10699_call = mutated_mod.get_global_var('func_10699')
const_11175 = relay.const([-2.457563,-5.813139,4.946492,6.223496,-0.971605,-5.231942,5.964197,-4.948894,-7.010274,-5.020193,-8.332380,-7.722183,5.928787,-4.758336,-4.867745,9.678457,-2.195438,-8.166007,8.383254,-5.124667,-3.703910,-5.555457,4.662592,-9.096958,7.273913,-6.855484,6.356524,7.390178,-8.691236,-8.740391,-9.443919,-4.837874,4.179355,-9.705066,-0.390297,-4.581245,9.388501,-4.110487,-3.883241,8.237501,-9.679468,1.117278,-4.672138,-4.291489,-2.796498,-9.099268,-7.663718,7.116495,0.152728,8.117705,-8.996490,-6.228690,-3.263881,3.075255,6.375423,-6.895405,-1.746733,-9.935019,-8.680262,-6.435108,4.383817,2.342349,9.068765,4.297893,-3.718226,-0.863896,-3.901789,1.794421,-4.199144,6.333837,9.814723,6.040208,-9.888262,-9.355859,-2.400833,6.008474,6.018636,-2.749944,-7.094675,-9.036627,-0.308495,7.758025,8.087608,9.839554,2.882820,-8.138611,-8.135980,4.210456,5.849175,0.442643,-3.664622,4.863705,9.626885,-0.242011,3.242103,-7.210893,1.176214,-6.846203,-8.359977,-7.444566,0.349126,-4.770175,-0.662006,-9.651541,-0.807392,-0.483956,-8.189252,-9.535959,5.180636,1.353102,2.095421,-2.134811,-8.840823,-4.727769,-1.617806,-8.684691,1.132100,3.621894,-2.234126,8.896059,3.588638,4.741779,1.680886,8.484702,-6.486752,9.536915,-9.780700,4.031873,-3.353364,-8.545387,-1.712310,-6.344324,5.613414,-4.101109,0.085235,-1.405930,5.333690,6.151428,-9.347857,5.116975,9.634386,-0.690786,-7.675951,-5.496268,0.464269,9.189582,-8.144333,7.260988,5.839555,8.378341,1.226153,2.576034,-6.556649,1.497214,0.727327,1.558589,6.291398,-3.193000,7.653784,7.480342,8.116964,0.783107,-6.981704,-2.698204,-9.640699,5.067522,2.118585,-3.697864,7.408897,-4.128678,-2.079160,3.480071,-9.476030,9.460228,5.899621,-7.607940,2.701575,-2.155098,3.093178,2.310686,-8.148483,0.390166,1.773372,9.912886,-1.136617,2.883930,-5.157364,-9.414936,-5.274159,-2.159731,-1.313540,9.955388,-0.779106,-1.790613,-0.568242,0.837346,-8.754682,-3.695323,-0.332880,-0.689240,-4.850495,2.586338,-3.041502,1.478536,9.976149,-6.131991,-3.519298,4.668289,3.854024,-8.631498,9.653769,6.955688,9.719771,0.986848,4.471506,-1.162377,4.636969,-9.860360,4.563543,0.336521,-8.346305,4.770219,2.130560,0.577047,-7.209492,-6.888823,-9.860712,6.526335,2.150659,6.898456,-8.485463,-2.003923,-5.998923,1.659536,-9.139209,-0.392418,4.054386,-9.767273,1.314627,4.863590,9.610340,5.046478,6.078083,8.536094,-8.165422,-7.994843,-3.415311,-1.570134,1.488685,3.596744,-6.064125,-1.989893,5.242622,-3.604134,7.788448,-5.079520,0.397309,-4.409456,-2.881832,-5.672899,-6.540897,9.709439,1.640301,5.240970,0.523616,9.218527,4.812701,5.302109,-9.828871,6.779446,-6.771731,-7.196847,1.955243,-3.782109,5.449979,-8.817631,3.249341,-2.416871,-8.070267,-3.055154,-7.956100,7.368656,3.809773,-4.892214,3.372918,1.855507,0.760417,0.586054,-7.204980,-7.533350,-0.009245,-6.478821,-9.870120,0.258466,-9.585132,4.755836,1.000006,-7.277037,6.384387,-0.161323,-5.591425,-3.711328,8.328490,2.412854,-2.296512,2.092651,-6.834237,-2.443212,0.329720,5.824621,1.381623,-6.434229,-5.672277,-7.480024,-6.037758,-1.243786,-1.299937,-0.439593,-5.255844,-0.431905,-4.170839,-6.472809,4.612996,2.937828,-0.125678,-3.968838,0.074296,-9.371663,-6.540572,-7.096697,6.347699,9.758379,6.360021,2.622230,4.743013,-2.881901,-8.484815,7.429040,-8.497435,-4.184289,8.929282,-6.258040,7.937131,-6.530336,1.675776,-7.090680,2.016897,4.735400,-1.812664,0.130455,-0.882671,9.341107,-9.129889,-3.907308,2.305549,8.983911,2.184529,-9.171593,-1.358064,-0.427766,2.913854,-6.821214,7.699798,0.454327,-5.420159,0.367535,5.344929,1.677484,9.126536,-2.231903,-8.386066,-0.341906,5.272025,0.360499,0.312815,-6.783776,-9.611055,-3.163691,-3.273524,3.424655,-3.076892,2.744815,4.742250,2.326424,-8.050258,-3.725237,7.170888,-0.479111,1.308396,-0.613345,-5.742476,9.188806,5.584183,-5.403094,2.689021,-9.141592,-4.195172,3.645331,2.002677,0.801659,-3.807122,-8.595269,-2.501044,5.533309,-9.197079,-7.753651,-8.863168,-2.374046,6.991902,9.103128,-0.343291,-2.104127,1.481920,3.743185,-5.657108,-9.480165,-8.937642,-7.689098,7.220222,-8.212273,9.152552,-6.381486,-1.682710,3.075357,4.911666,-3.827875,2.502950,6.907860,9.005572,8.720271,2.235529,-0.578170,-7.306974,-7.022619,-7.732432,-7.129993,9.115413,4.488136,6.075967,-0.644994,1.913858,-3.033908,6.640698,8.613295,-8.574206,1.859894,-4.928859,1.738628,-2.685892,7.697795,-6.599944,3.215046,-0.021855,5.714300,3.306970,6.732933,9.147126,7.069166,9.707639,6.095402,1.347123,6.493155,-1.819817,7.328552,-9.746139,-4.850134,-3.855393,-2.272230,-6.374690,-4.887359,2.370331,3.810728,1.600816,-6.825592,8.878862,9.536050,-9.222684,3.363699,3.476067,8.989699,1.031595,5.983412,6.651752,-7.068877,8.628414,-3.002225,-5.655819,2.955779,-4.516675,-5.479080,3.526659,3.761562,-3.258537,1.682297,4.924081,1.501232,-7.640081,-9.844063,3.281041,5.131625,8.100299,3.515215,3.986885,1.674458,-0.473262,-6.697020,3.244415,5.363236,-4.513806,-5.724259,-8.740114,-1.906269,-0.983214,-5.970670,7.322661,-3.959544,6.913006,6.684420,2.162488,6.196361,-0.948736,7.552865,2.064226,-8.118983,3.590850,5.030346,-9.428901,-5.686002,-6.430311,-1.035130,4.570696,-7.872741,4.671604,4.189894,-0.049622,-7.250605,-6.206237,4.776905,7.983950,4.140737,-4.846500,-7.514381,-1.704932,1.279569,0.363887,0.060234,-9.440146,-2.209719,3.813243,-9.927376,-8.822214,-9.188679,9.541913,-3.459132,7.991973,5.812480,-5.889814,2.598455,1.763710,0.952144,-4.661545,2.658699,-3.972430,-2.198917,4.484864,4.688487,-5.621249,1.099165,7.238930,-2.215355,8.595907,-1.491431,3.066086,6.135569,-0.436034,5.018016,1.996510,-0.405893,-4.716279,4.907918,0.991467,9.194312,-2.283061,1.174517,-4.101135,7.659092,-8.621788,1.381600,8.233749,-8.875089,7.451559,-9.971828,-2.042203,-8.726755,-8.673330,-1.042078,1.924604,9.008580,-4.582089,0.038577,-4.207265,1.599205,9.695503,-0.313589,7.476550,-7.588465,-8.310454,3.510052,0.990392,-6.554666,7.606758,-6.218764,-3.188584,-2.387816,-3.250825,-0.270715,-5.836114,5.550101,-0.766834,-6.456380,-4.487941,1.852502,-0.992185,3.792497,-7.301497,2.336461,8.723028,-7.380089,9.786002,-4.201726,0.507024,-9.563148,-3.252346,4.006706,7.054257,-0.972649,-1.606692,-3.803230,-0.329464,5.115876,7.068117,-6.671006,-2.367718,8.048361,-4.601938,4.942630,-6.482579,8.686795,-8.133161,5.322454,6.265224,3.358502,3.500443,-8.234045,-5.903707,9.031546,-6.134715,-1.167682,-6.610648,-2.017620,1.114891,-5.835839,6.463373,2.529492,-1.692634,8.276955,-0.731407,-4.661558,-0.528775,-9.637140,-2.382457,1.451430,2.931607,7.502637,1.465571,-3.873349,3.283523,-0.476757,0.849879,-7.066628,-0.889572,4.020075,3.358891,5.149407,-6.723867,-3.409502,2.286663,6.734791,9.933389,-9.882395,-9.326909,4.154631,-4.716825,-3.943649,3.124679,3.414675,-6.457864,7.853299,-6.237953,6.456414,-0.343166,3.120713,6.132864,-9.207024,9.721330,7.273411,-0.664410,-9.267083,-1.068772,-4.380976,0.496788,-1.213209,-6.695520,2.216104,-4.463987,9.838047,-7.053036,-9.398076,4.583316,-0.934462,5.833297,-5.226555,7.895639,-4.122813,1.994862,6.118682,7.005112,-1.146358,7.686549,-5.031141,-2.811126,-5.197128,7.549841,2.554124,-7.915554,8.607123,3.311760,5.543155,-3.913000,6.019489,-4.242741,4.115411,-4.859782,7.702997,1.828617,9.969905,6.211208,9.572211,-7.350623,1.807123,-6.145309,-1.930622,-5.038098,-6.560729,-7.578990,-9.228056,5.015206,-1.390928,2.353511,8.411519,9.559935,-9.566324,5.583710,9.524995,-8.941129,-6.794408,-0.425543,5.405340,-8.382123,1.534273,9.073292,3.100127,1.587515,-1.870429,2.395439,-5.799799,-6.898253,9.132216,-7.995998,8.015694,4.427894,3.390517,-4.417114,-8.725334,6.289647,3.769122,0.751010,9.638887,-4.244344,7.087324,4.306486,8.331630,-5.767493,7.589825,4.211615,-5.975472,-4.844468,-2.068989,-2.027209,6.532234,0.175042,-0.380141,3.451222,7.834232,2.236809,1.840905,-4.438264,-9.277853,6.150231,5.175406,-8.964606,7.149406,-6.278036,5.135728,-4.786664,-0.725396,-1.936051,-4.410605,-4.712721,8.037505,-0.648697,-9.840956,6.642785,-6.874081,5.829939,-3.232414,8.508726,-3.516360,0.451304,-2.823471,6.107125,7.489212,4.464578,9.590253,-7.076370,7.774715,-5.236990,9.492293,-4.373401,-4.040937,-7.363459,2.749807,6.065186,1.448563,4.365099,-4.521411,-8.063966,-4.889754,-1.727005,3.613548,7.883439,3.117472,-2.402389,9.455186,-2.676771,-1.901680,-2.441101,-6.804143,-5.418498,6.844272,4.087887,-5.819379,9.910258,7.215909,-8.628300,-9.736907,4.121859,3.241504,4.949794,-1.435817,1.391730,-2.503339,-8.848080,5.102826,-2.868143,5.477035,-6.103334,3.501983,-9.201961,5.419449,5.389658,-8.131463,-2.381374,-5.941830,8.125896,9.170271,-2.078058,-3.727750,0.761913,5.628651,-3.905376,0.527516,-2.734256,3.084459,-4.041850,4.371593,-4.399106,-9.360151,-5.067235,-9.434398,-5.563158,-2.644705,1.574890,3.167343,-5.719207,-3.864744,2.797980,6.267532,-6.815400,8.663654,-3.282691,-6.151998,-4.919196,6.581692,-7.966957,-2.497562,4.692406,5.122993,-4.942787,4.313679,5.238990,7.919071,-3.096008,-4.596471,5.774102,3.698248,-1.178617,3.585199,-3.550606,2.581071,-8.396731,4.299000,-9.122182,9.639986,-6.857469,6.532037,-5.317943,-8.327188,-0.172288,-6.434212,-7.240339,1.945217,4.625135,-9.872839,7.229010,-1.994638,3.340437,5.009177,-5.297318,-3.509681,-5.679051,-1.080137,7.487614,3.193085,7.698908,1.253287,3.630585,1.070929,4.155925,-8.150791,5.622589,3.644801,7.776983,3.182237,7.485395,-6.082651,5.202568,-9.383517,8.547638,-0.349061,3.945300,5.104546,-1.742306,-0.565518,-4.247503,-6.365770,1.615453,-9.022471,8.660789,5.675269,-5.359059,-8.759237,-3.191726,-3.504734,-9.895397,4.890602,-5.492162,-6.360590,0.752908,4.593936,8.008160,4.391342,8.101267,6.279165,6.113220,2.617878,-7.741111,-8.657227,-2.901718,7.985747,5.247156,1.759013,0.982753,5.227860,-2.200354,-1.107613,-2.756091,-3.071799,9.945576,-1.687481,-0.523854,-3.257564,9.352230,-8.863707,2.355218,-0.488803,-1.271569,0.554150,1.261797,-1.169412,8.297945,-5.334792,-1.640453,0.091725,-5.715995,6.642187,0.200325,-9.985343,-8.014250,-1.448160,-8.073987,-9.518918,-4.746381,-8.272325,-0.609220,2.156699,5.072484,-2.864690,1.342595,7.113006,6.038845,-6.595758,0.540383,-4.457620,1.976531,6.857462,1.217657,-6.182622,3.531985,-6.928849,3.148788,6.504917,7.992965,2.749910,4.059543,-4.209667,2.892381,9.533782,6.107433,-2.647509,0.142481,-0.446510,1.508745,-8.779331,3.217745,6.541654,5.848857,0.039897,-3.353428,4.280634,-0.405068,-0.804563,-2.036711,-1.625418,7.957057,6.345550,-2.766990,-7.696173,-9.012522,4.102728,5.478666,0.536830,9.186085,6.341448,6.399530,-4.908813,-9.602980,1.104793,-8.162349,3.943958,-6.857265,-4.236963,-3.671003,-2.648582,-3.278504,1.199047,-4.090464,-8.760037,9.821654,3.052536,-0.916086,-8.460814,2.127627,7.129706,7.354578,0.182775,0.532654,8.153297,-1.899831,0.823946,0.465251,-8.738875,9.140277,1.299992,-9.713919,7.174854,-1.813426,-3.212952,0.098323,-3.349541,-3.162727,-2.598969,2.184105,1.043161,0.264453,-3.120040,0.340223,7.388686,7.376120,-9.024898,6.001193,-2.705130,1.709300,1.304788,6.779682,-5.256533,-5.695604,4.919237,-6.367767,6.239436,9.541667,-5.744176,8.255119,9.663543,-6.645181,-3.586311,1.849639,-5.122813,2.199384,4.290881,5.973426,-6.146893,-1.852679,6.362151,8.095003,5.816768,8.444025,1.329665,9.172744,7.341023,-0.778931,6.808092,1.369620,8.419042,-4.163828,1.501963,-2.367147,5.115553,1.296541,0.186296,9.277985,-7.581240,-9.734479,5.707024,-9.009450,3.391315,0.517383,7.115096,-1.488496,8.523974,2.567013,-0.990187,5.285019,0.544009,4.398838,0.929830,9.931497,5.996388,5.374139,8.616733,6.236948,8.919106,0.900355,1.660894,5.985950,-9.170907,4.891667,-5.199280,-2.151904,-2.587777,-4.823519,0.349690,8.955248,0.510695,5.063322,-6.359092,7.531320,6.898655,-0.829690,1.882914,-6.495295,4.208991,-7.926659,-5.312907,6.107313,-2.895076,-2.370527,9.170891,-4.520337,-7.322807,4.464687,9.520414,-5.615636,9.730339,8.533009,-9.203698,0.935492,-9.166148,4.447819,-5.698777,4.612240,-9.346573,-4.157041,4.873144,-2.369892,3.082662,-4.230915,0.511541,0.061465,-7.192847,0.780296,-2.867962,-8.215968,-6.005028,5.854781,-7.591281,-6.594279,-3.589447,-5.404451,4.847986,-8.187722,-6.676281,6.724941,6.791379,-2.235853,-2.249211,0.958852,-0.130471,7.200902,2.197247,-9.158296,0.673533,4.616558,0.588066,7.066927,-3.724251,6.420166,-4.377293,-9.212246,-1.006508,6.655878,-7.254433,2.880026,-7.010213,-5.214923,-8.340901,0.707579,7.911131,4.321040,-0.170200,2.216405,-3.349067,7.058413,-2.876395,1.287222,2.392792,2.838210,4.841084,-6.216746,3.206749,5.909642,5.928476,8.881282,4.968443,-2.548833,6.149131,9.041499,-5.874181,-1.126110,-6.275387,4.294107,2.922524,-5.085621,-0.018316,-6.642069,0.578044,2.404069,7.951069,3.433238,7.624396,-6.971320,9.508794,2.374256,3.648402,-1.907882,5.345246,6.975211,-0.210977,7.408790,-0.744515,-8.296434,5.637577,2.106170,-7.277210,-8.862453,-7.249598,-0.078105,-2.935887,9.533771,-0.679336,4.208136,-7.331842,-9.982042,-2.206165,2.855632,3.634456,-3.659818,4.926517,4.018612,-2.567323,2.180787,7.852961,1.560299,2.626061,9.502017,-1.255505,4.231774,6.169673,-7.226786,9.810210,-5.446244,0.245957,-7.879906,-2.873699,5.456400,8.558813,7.835081,-1.140709,-4.715081,-1.040916,5.745986,-0.825484,4.864766,-0.588347,-4.106477,0.148416,2.749360,3.027867,7.693564,5.157911,0.119633,9.869289,0.992730,3.257626,-4.482706,8.956390,-6.836819,-6.415631,2.885427,9.299251,1.271632,5.664961,-9.145047,-4.104066,-2.467704,-5.601222,-4.813444,0.147214,7.698564,1.511488,-9.847721,-1.441571,-3.709114,-3.946801,5.546766,9.873870,-3.273155,2.954672,-4.386301,-0.719101,-3.936929,-9.472846,-0.635985,-5.986406,-4.659046,3.715491,7.300323,8.469312,2.504962,1.917946,-0.235786,6.570211,7.657555,6.166065,-4.184672,5.056783,-3.831351,4.124503,6.600115,-4.593534,3.866605,-4.220712,4.244770,-3.632171,1.815340,-5.003572,6.237158,-8.587691,-4.206702,-5.276655,1.403820,4.949341,9.625765,-2.282205,4.561522,-3.004431,9.416220,8.100277,-5.493830,4.083032,9.283787,2.509642,2.655735,-5.690692,0.440237,-9.214829,-1.332133,-9.736154,-1.501693,-9.868892,-2.429578,-2.400776,8.130274,-9.552615,0.994438,9.167975,6.603028,1.306499,-8.126204,2.955535,-3.211962,-0.446781,9.235179,-5.009787,9.164358,9.872161,0.973196,9.504099,2.438599,0.255796,8.325632,-1.255590,0.284882,0.035047,6.812309,-7.813554,-9.710528,-3.623040,7.264018,1.616186,5.866609,-0.596110,-6.214865,2.716461,-6.156949,5.797760,8.115402,-4.401840,8.653159,-3.559210,-7.362074,4.830642,2.812031,1.954490,-6.267852,4.304803,8.344254,6.176034,-9.800942,-3.405684,1.533444,-1.339022,0.081659,4.276532,5.966859,8.169975,-9.954224,-7.002621,-7.485947,8.097759,2.418502,-2.182187,-7.247216,-5.589301,-7.535968,2.984345,-9.699944,-6.886200,3.570440,2.371787,6.863272,-2.948746,5.334084,0.056970,-0.877627,-9.291862,5.145148,6.437492,-2.356266,-0.408413,-9.392106,-9.741823,-6.177559,-3.612543,2.500785,-4.376108], dtype = "float64")#candidate|11175|(1536,)|const|float64
call_11174 = relay.TupleGetItem(func_10696_call(relay.reshape(const_11175.astype('float64'), [1536,])), 4)
call_11176 = relay.TupleGetItem(func_10699_call(relay.reshape(const_11175.astype('float64'), [1536,])), 4)
func_10911_call = mod.get_global_var('func_10911')
func_10913_call = mutated_mod.get_global_var('func_10913')
call_11177 = func_10911_call()
call_11178 = func_10911_call()
var_11181 = relay.var("var_11181", dtype = "uint64", shape = (2475,))#candidate|11181|(2475,)|var|uint64
bop_11182 = relay.logical_xor(const_11160.astype('uint32'), relay.reshape(var_11181.astype('uint32'), relay.shape_of(const_11160))) # shape=(2475,)
bop_11186 = relay.less(uop_11170.astype('bool'), relay.reshape(bop_11182.astype('bool'), relay.shape_of(uop_11170))) # shape=(15, 15, 11)
bop_11189 = relay.less(uop_11172.astype('bool'), relay.reshape(bop_11182.astype('bool'), relay.shape_of(uop_11172))) # shape=(15, 15, 11)
func_10212_call = mod.get_global_var('func_10212')
func_10214_call = mutated_mod.get_global_var('func_10214')
call_11192 = func_10212_call()
call_11193 = func_10212_call()
output = relay.Tuple([call_11153,call_11174,const_11175,call_11177,bop_11186,call_11192,])
output2 = relay.Tuple([call_11154,call_11176,const_11175,call_11178,bop_11189,call_11193,])
func_11196 = relay.Function([var_11181,], output)
mod['func_11196'] = func_11196
mod = relay.transform.InferType()(mod)
mutated_mod['func_11196'] = func_11196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11197 = relay.var("var_11197", dtype = "uint64", shape = (2475,))#candidate|11197|(2475,)|var|uint64
func_11196_call = mutated_mod.get_global_var('func_11196')
call_11198 = func_11196_call(var_11197)
output = call_11198
func_11199 = relay.Function([var_11197], output)
mutated_mod['func_11199'] = func_11199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9004_call = mod.get_global_var('func_9004')
func_9006_call = mutated_mod.get_global_var('func_9006')
call_11234 = relay.TupleGetItem(func_9004_call(), 0)
call_11235 = relay.TupleGetItem(func_9006_call(), 0)
output = relay.Tuple([call_11234,])
output2 = relay.Tuple([call_11235,])
func_11254 = relay.Function([], output)
mod['func_11254'] = func_11254
mod = relay.transform.InferType()(mod)
output = func_11254()
func_11255 = relay.Function([], output)
mutated_mod['func_11255'] = func_11255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10102_call = mod.get_global_var('func_10102')
func_10103_call = mutated_mod.get_global_var('func_10103')
call_11288 = relay.TupleGetItem(func_10102_call(), 3)
call_11289 = relay.TupleGetItem(func_10103_call(), 3)
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_11291 = relay.TupleGetItem(func_9510_call(), 0)
call_11292 = relay.TupleGetItem(func_9511_call(), 0)
output = relay.Tuple([call_11288,call_11291,])
output2 = relay.Tuple([call_11289,call_11292,])
func_11293 = relay.Function([], output)
mod['func_11293'] = func_11293
mod = relay.transform.InferType()(mod)
output = func_11293()
func_11294 = relay.Function([], output)
mutated_mod['func_11294'] = func_11294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11133_call = mod.get_global_var('func_11133')
func_11135_call = mutated_mod.get_global_var('func_11135')
call_11300 = func_11133_call()
call_11301 = func_11133_call()
func_10536_call = mod.get_global_var('func_10536')
func_10538_call = mutated_mod.get_global_var('func_10538')
var_11326 = relay.var("var_11326", dtype = "float32", shape = (630,))#candidate|11326|(630,)|var|float32
call_11325 = relay.TupleGetItem(func_10536_call(relay.reshape(var_11326.astype('float32'), [630,])), 4)
call_11327 = relay.TupleGetItem(func_10538_call(relay.reshape(var_11326.astype('float32'), [630,])), 4)
output = relay.Tuple([call_11300,call_11325,var_11326,])
output2 = relay.Tuple([call_11301,call_11327,var_11326,])
func_11344 = relay.Function([var_11326,], output)
mod['func_11344'] = func_11344
mod = relay.transform.InferType()(mod)
mutated_mod['func_11344'] = func_11344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11345 = relay.var("var_11345", dtype = "float32", shape = (630,))#candidate|11345|(630,)|var|float32
func_11344_call = mutated_mod.get_global_var('func_11344')
call_11346 = func_11344_call(var_11345)
output = call_11346
func_11347 = relay.Function([var_11345], output)
mutated_mod['func_11347'] = func_11347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9352_call = mod.get_global_var('func_9352')
func_9354_call = mutated_mod.get_global_var('func_9354')
call_11440 = relay.TupleGetItem(func_9352_call(), 0)
call_11441 = relay.TupleGetItem(func_9354_call(), 0)
output = call_11440
output2 = call_11441
func_11445 = relay.Function([], output)
mod['func_11445'] = func_11445
mod = relay.transform.InferType()(mod)
mutated_mod['func_11445'] = func_11445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11445_call = mutated_mod.get_global_var('func_11445')
call_11446 = func_11445_call()
output = call_11446
func_11447 = relay.Function([], output)
mutated_mod['func_11447'] = func_11447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9436_call = mod.get_global_var('func_9436')
func_9437_call = mutated_mod.get_global_var('func_9437')
call_11531 = relay.TupleGetItem(func_9436_call(), 0)
call_11532 = relay.TupleGetItem(func_9437_call(), 0)
output = call_11531
output2 = call_11532
func_11553 = relay.Function([], output)
mod['func_11553'] = func_11553
mod = relay.transform.InferType()(mod)
mutated_mod['func_11553'] = func_11553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mutated_mod.get_global_var('func_11553')
call_11554 = func_11553_call()
output = call_11554
func_11555 = relay.Function([], output)
mutated_mod['func_11555'] = func_11555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9169_call = mod.get_global_var('func_9169')
func_9171_call = mutated_mod.get_global_var('func_9171')
call_11586 = func_9169_call()
call_11587 = func_9169_call()
func_9148_call = mod.get_global_var('func_9148')
func_9151_call = mutated_mod.get_global_var('func_9151')
const_11594 = relay.const([[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True]], dtype = "bool")#candidate|11594|(528, 1)|const|bool
const_11595 = relay.const([-9.863275,-2.616335,4.035203,-6.941967,-9.684983,9.030698,1.341832,-7.443422,4.494926,-6.809439,-8.940232,-8.847746,-5.699487,-5.959019,-2.021708,-5.163695,0.741889,4.098704,2.635214,2.059155,-7.949973,-6.644799,-6.973623,-7.139977,-5.537097,-2.556053,-7.244078,-4.941036,0.370525,-8.661273,1.458176,0.688637,-3.954041,9.385775,-9.928776,8.284515,-4.108992,-1.908230,-2.988814,-1.559992,-4.792988,7.607779,4.543076,6.371005,-5.764448,-8.694472,-6.003530,-7.748635,8.343944,8.806264,-0.405905,-0.261154,-0.163097,2.751673,8.757698,8.710168,-3.800669,-2.823053,-4.095179,9.158251,-6.033172,2.803842,1.076593,7.822829,1.964297,-7.708914,5.469973,-7.099341,0.472034,9.200267,2.702921,-0.211862,3.485334,-7.978351,-4.596367,1.360353,6.103864,-4.800660,-9.856248,9.985997,-1.113243,-8.676762,-2.463515,8.851211,-5.902023,7.531120,3.844636,-2.866848,-7.956451,3.248170,-1.249481,8.362062,1.306630,-0.421304,0.045738,8.327906,0.060806,-8.462821,5.016519,7.701482,-0.520346,2.702154,6.105372,-7.646365,-6.853025,-2.897070,-9.377750,3.079414,1.737545,-5.722760,5.263823,-6.567436,2.486759,7.049188,-6.755921,-5.015905,1.307944,6.065297,7.075102,-9.984697,5.626133,-6.556757,7.679918,0.305443,6.460921,5.803722,8.556893,8.584643,-7.879824,7.975418,-0.902774,2.835116,-9.701062,-8.647973,1.369930,9.887811,1.413576,-8.172228,9.235023,-6.306625,7.022259,-5.911652,5.124443,5.955611,-5.022678,5.530883,5.560696,-8.215926,2.738396,2.142778,2.432178,9.318924,9.711103,2.497563,6.454435,6.607367,-0.160596,5.768034,-3.280324,7.884559,-9.346729,1.914715,-0.184193,5.588640,-3.382321,-7.758808,0.939587,-0.245827,7.357344,-3.678620,1.792604,-9.694830,3.114828,-3.964355,-4.375920,-2.462590,-8.811112,-6.721857,9.368919,-4.862123,6.272348,2.069866,-1.032708,4.535146,-8.975246,-8.470081,1.146893,0.315839,-5.623016,-0.695190,1.932673,4.090478,-6.642735,-3.294955,6.784772,9.790593,6.693856,-4.667125,6.242142,-8.067109,1.385519,8.145731,4.073785,3.470420,-2.049280,-5.527658,-7.556921,0.954138,-2.964234,-1.472289,-1.666587,-6.735491,-1.635967,9.102031,-0.763057,9.812265,-8.993847,-6.269459,1.294380,-2.252559,-4.388602,-9.680249,-5.864019,7.862655,3.991725,9.087831,-4.760010,-9.464356,-9.935792,-6.033148,1.056141,-8.141626,-7.117787,5.628563,-3.995982,-4.960935,-3.663049,8.503303,-8.749506,9.094489,-1.674279,-2.952405,-2.780230,4.657727,-6.068950,7.501808,-1.536356,-5.312081,4.109641,-7.084604,0.900408,-8.454165,9.583498,-0.450026,-5.043672,-0.206197,-8.024502,2.894943,9.028083,0.520884,-8.260908,9.161887,-1.033289,-9.081919,7.153754,9.504822,6.417814,-4.602531,7.162928,-8.300947,5.837444,-7.276426,3.282295,-2.319340,7.094424,5.089404,0.423132,-2.552869,-5.011252,3.791522,3.539467,-7.815864,-3.674904,-0.917996,4.397213,4.695975,8.850085,2.418681,-7.735279,7.526532,3.624979,8.103495,7.685745,2.142394,-6.767109,1.469858,3.870072,-3.107167,-1.811669,-8.149551,-4.868322,-0.365722,6.574077,-3.244739,-4.523775,4.826286,-4.987301,-3.626125,-8.314341,6.757920,-6.993573,5.838755,-5.135702,8.617987,-0.918764,4.474859,5.169038,-4.165674,7.841724,-6.862036,-1.683396,5.406892,5.595523,-4.103099,9.210422,-7.047913,-0.062023,-8.403835,-1.806298,6.956936,6.757403,2.776426,0.702520,2.810313,-0.261419,-4.514331,-8.832002,-6.042818,0.270461,5.477758,-9.668308,-2.168780,6.351189,-6.097758,-3.829624,-3.735256,-1.790379,-3.547070,2.212271,-1.581337,-7.709269,-5.921752,-6.850271,-8.322698,0.460384,7.663528,2.621986,-6.100057,-5.362290,-8.884082,8.748393,-9.042693,-9.268859,8.940270,-4.819438,-4.247408,-6.284767,5.316161,9.741641,-3.955719,-3.507460,-9.307813,3.352547,-7.825763,5.052084,-9.145720,-7.407837,-0.073102,5.029762,-9.243081,6.463861,-6.404339,-0.539755,2.017822,1.103362,-1.855897,8.287070,-5.534747,-2.877976,-9.007123,9.471972,-0.883926,4.368248,2.524764,-9.558087,-2.464606,-9.073740,2.504655,8.360307,-7.954423,-4.913846,-9.018489,3.204507,-9.999532,9.065177,-3.935441,5.908702,-7.546269,0.787327,4.941044,-3.104870,-3.864154,2.097301,9.730330,-4.671528,9.491771,-3.624170,-4.445289,-2.315667,7.360021,3.503951,5.265183,-1.599704,2.014362,8.366851,3.777069,-0.475759,-1.081510,0.694815,-1.813418,9.053630,-2.419887,8.027317,6.071120,5.110016,-5.355709,-1.924798,5.385349,8.152943,5.747226,-1.521700,-9.708386,-6.442585,-8.142209,-2.991219,3.184655,-2.868423,-9.859729,-6.629715,-3.357250,-0.592081,-2.838819,-7.864355,-4.835939,-5.875674,-0.645073,-5.564406,3.093476,9.084554,2.388035,7.484258,1.707999,-4.239806,0.627180,7.879831,3.842696,-2.106580,3.678880,1.310128,4.522885,0.514537,-3.588579,-8.002870,-0.481569,4.478616,-6.994001,-8.875521,5.631527,4.829985,3.530686,-0.575537,-4.095525,-6.628822,0.579086,9.808590,9.558382,-6.128530,5.971862,3.541039,-4.230426,4.032478,5.514146,-6.223156,-6.144144,-1.306263,-4.785813,-7.799250,1.609166,-4.744367,9.830115,5.837856,-2.124722,-4.797174,3.285886,9.122578,3.106372,-9.626351,-3.173159,2.939644,-0.064904,-3.702745,-7.073711,6.438912,1.210706,-7.348662,-2.634204,5.910054,1.637001,-2.930351,-9.890580,-7.563862,-9.085295,-7.816754,9.917200,2.741525,7.556769,-6.782769,4.379763,-4.831597,-9.619022,9.980959,-4.818606,2.563211,-0.321420,-5.456241,-8.865462,-6.277626,9.653797,3.810185,-5.032041,-6.410475,7.791525,7.282909,1.159411,5.640900,-2.579906,-2.942116,-6.556458,-0.309010,3.659321,7.625615,1.858310,-8.245344,-3.183833,1.861286,-4.751683,3.463833,6.377179,-2.262721,-1.194927,-5.213619,-9.736793,9.017724,-5.103561,-8.429009,8.127690,5.845413,2.424791,6.838467,-7.431626,9.248372,0.156749,-9.165214,6.957862,5.495032,-6.827116,2.503379,-0.150430,5.590692,-3.744451,-6.502547,4.945831,6.152900,7.266060,3.023290,2.759633,-4.271556,4.500146,3.871926,-4.895840,-8.170371,-8.860462,0.395476,-5.872126,-2.729880,-1.418668,-0.564288,-9.480727,9.381935,2.615834,2.627646,4.535409,5.497336,-3.716935,0.052286,0.345851,-8.154800,6.815037,-9.422489,-8.378851,2.188797,0.393212,7.664165,1.530571,6.525710,3.542816,9.031323,-8.023138,8.818891,-4.624844,9.283427,-9.066525,9.804557,-8.632840,4.250204,-0.678419,1.147770,8.645809,-2.517034,0.845216,6.015223,-1.923084,9.288138,0.718568,-5.465782,-6.586692,9.119682,3.425871,-2.754157,-8.934462,-7.039977,-6.331195,-8.927106,-3.791672,-1.838012,-7.408870,-5.087024,3.376137,6.245342,-0.159404,-2.618539,-8.834948,1.587901,-4.027341,1.042209,-2.904462,-7.051258,8.987572,-7.607324,6.681091,-6.696208,-0.746117,-5.063305,-1.338835,-8.696433,5.038662,2.475063,-0.629037,4.830509,5.888974,5.199294,8.932143,-1.778506,-5.105886,-2.089575,-7.666943,9.806759,-8.551672,-6.022404,4.806484,2.131084,3.069307,-4.859122,-4.324815,-5.563258,-6.241990,2.542092,8.194129,7.263349,-1.362948,9.932554,-9.572492,5.849804,6.017384,4.609305,-1.207849,7.666320,-2.340230,6.434447,-8.396800,-9.129934,8.006803,-3.130951,4.445429,-4.508153,4.780004,-5.833343,-9.502332,-9.363974,6.389963,-6.605399,5.399064,8.139759,-3.745971,-8.622422,3.761434,3.663904,-6.513988,5.563965,3.297393,2.684918,-6.601140,-0.711609,3.221626,-0.252471,9.714414,-8.267969,-1.472540,-9.830748,-8.366442,6.900979,0.440747,-7.392174,-3.031916,1.372890,6.666224,5.161653,9.287791,-6.426048,-0.448835,8.481259,5.764728,-9.756620,-8.178408,-6.362282,8.850724,-6.811677,6.522586,-3.056680,-3.595478,5.944501,-6.106534,1.554744,9.719999,-1.684349,-0.091240,1.468725,8.048512,-1.839387,-6.061446,-4.117817,-3.810229,-3.720828,9.366986,-2.059992,-7.863272,3.398606,-0.198193,-4.612380,-5.664002,0.990596,4.576344,1.841077,8.064788,-3.982903,-4.343791,7.656640,9.368909,-1.405543,8.387199,-7.879845,4.345681,-5.916919,4.881652,4.437238,-4.723520,-7.259534,9.552866,-3.275389,3.646784,-2.649882,-5.800364,9.655513,7.226124,-2.370987,-2.911179,-8.988793,3.096848,8.320221,-8.102584,-9.990899,7.053787,-9.469647,-8.345381,0.696616,0.951330,-7.825332,-8.375209,5.962093,5.085136,-4.677761,-7.035045,7.373878,8.941512,-8.131068,0.144693,-1.587091,-9.697942,5.601769,-7.314412,-7.514390,-2.265991,4.922148,-3.593007,-4.485059,-3.740460,7.562669,-6.875039,-9.124703,3.651697,8.162971,-7.797349,-5.979570,-6.248716,9.984429,-0.510154,-7.752648,-3.123375,8.759574,-7.443475,5.906003,-0.358557,5.635520,7.061087,7.611810,0.952442,-7.594537,-7.674844,-1.606826,-6.606292,7.574903,1.483907,-7.605250,9.632054,0.904776,1.518887,6.391379,5.428002,-9.322524,-3.822850,-2.359199,-6.562684,2.197341,8.815431,6.441052,-5.599168,-5.074355,-8.342724,3.163294,3.374371,9.002685,6.197266,-7.990607,-4.568625,-5.293844,-5.305357,-4.793468,9.496167,-2.957248,0.185441,-4.171818,-1.918947,0.555513,1.125520,6.525198,0.813865,-1.907777,1.097406,-3.106426,1.915172,-1.635288,0.375104,3.246367,1.156983,6.510043,1.597122,-5.095155,-6.511346,2.795680,-9.919821,-7.567087,9.577162,3.340262,-5.964543,-6.969323,-2.939779,3.096387,0.431426,-3.577942,-0.590181,5.599601,3.874277,-4.766070,-8.869846,-0.579732,-6.944848,-5.303996,0.517211,-7.165345,0.746960,2.752566,7.167171,5.979859,8.321087,5.958145,4.502804,-9.683145,-9.308700,8.251176,-1.735359,-1.071910,-1.467273,-4.985295,-2.444477,4.374443,-7.584825,6.617150,-3.342025,-7.190012,-8.785499,1.647833,2.649950,-9.570461,-8.333267,-2.713954,1.146044,1.520373,7.393318,6.040676,-3.985685,-9.484686,-9.035895,3.935432,-0.717220,-7.653827,3.977609,6.178425,1.119680,5.436494,9.122938,-6.054292,-2.284666,-0.959831,-9.496406,4.978660,9.692557,5.974900,7.993075,-7.525728,-9.467798,-8.515274,-9.683783,-1.873589,7.851946,-3.814723,1.746484,-0.005902,-5.545699,-8.025698,-9.430339,-5.173552,7.771869,7.723055,-5.577322,-9.442999,1.706801,-4.481320,-3.651242,6.496902,-2.738948,-2.913443,4.730711,4.442917,-7.792652,-2.714168,0.599429,-6.652009,-1.839881,0.505003,1.040255,5.716532,-2.739262,-8.110715,3.378385,1.952755,5.156304,1.060876,-0.475511,0.501527,-0.707060,8.559202,-3.566613,-8.995994,-8.318112,4.180332,-5.660113,-6.026199,-7.817180,2.996516,-5.938704,-9.803375,7.397786,-6.503317,-4.006318,-5.588280,1.680888,0.393048,8.869831,-3.887319,6.514971,9.912763,3.262234,8.808797,-9.728326,4.279827,9.708733,4.274858,5.540947,-9.328890,5.590253,1.617691,-2.044517,-6.507247,-1.984558,0.117801,-3.162624,1.409930,-3.118239,2.238993,-8.017161,-2.188465,-1.446470,-7.358031,1.508996,-1.792828,1.941943,-5.730779,-0.791831,5.711172,1.448205,-0.491510,0.376020,7.275712,-8.684815,-2.459095,4.525950,-3.567822,-1.318989,-9.561346,8.142083,-3.012954,-3.896358,3.004792,3.399256,5.299549,5.922186,-9.845482,-4.352680,0.887693,0.931687,2.574673,-8.142599,-8.375569,-3.708976,-4.681363,7.929439,-9.066505,8.811935,-6.636167,-0.134505,-0.756667,-0.569957,-0.640986,-2.721283,2.808118,8.913664,9.395530,8.164673,9.974764,-7.235543,5.256784,-6.251321,1.249248,4.839078,9.424332,3.733441,-8.788400,-9.601472,-0.199408,-6.877712,-9.005109,-7.846337,3.638479,-1.469310,0.493747,-5.819269,-9.489956,-3.276678,7.558604,-4.156048,2.485470,-0.183655,5.022010,-1.417798,0.644609,8.765030,5.085311,0.666933,1.548473,0.923406,-2.308093,-7.876120,-8.089385,-4.788458,-0.746791,-4.701643,4.516323,5.284357,-1.230731,-5.794200,-2.025958,3.649641,-4.600006,-4.781461,-5.860635,-2.942896,-3.878953,-3.570071,-3.556070,-1.392672,3.768208,-5.815019,9.181208,6.222047,-7.091778,8.817689,9.422709,-3.336409,-8.105306,-0.717620,-3.875671,5.244027,0.921235,0.448136,5.147912,-7.748401,9.764866,3.297369,3.709586,-2.945855,-9.722359,-9.547012,-2.055857,4.203689,-2.048434,-8.748205,4.319088,5.106343,3.660971,-1.785705,-6.256142,8.443645,8.469103,-7.593149,0.424913,-9.546389,-1.846097,9.909660,9.946605,6.984792,-4.157810,-8.090426,-1.420288,-1.241666,9.720067,-7.405488,-1.891351,5.842459,-3.310520,-0.405703,-6.865550,0.532776,3.311329,3.898788,-8.513954,-1.229947,-8.291341,-9.807950,-6.370233,-5.625643,3.512069,6.240399,-7.525124,8.772863,-5.719104,-8.116143,5.779658,-4.680264,9.819755,0.563372,-4.021002,-4.231259,6.848508,7.252694,-3.574478,3.114878,-9.621045,8.578722,9.671968,1.874076,-4.061802,-2.145399,-4.049611,-8.717729,-1.785187,4.107701,-2.230039,-6.420662,-8.095114,9.318983,1.709926,-7.210979,-9.058029,3.374137,-8.516242,7.642306,-9.490045,-1.649649,-6.710539,-1.156947,8.723718,-4.425197,-6.000369,0.107237,-6.891646,6.941556,0.471717,-6.678965,7.844873,4.976067,-9.342498,-9.179430,-8.027476,6.446532,2.825424,9.757529,3.133498,-1.498971,-1.133795,-7.184932,2.315573,5.307123,3.004736,-0.495677,3.497926,7.968933,-5.879658,-3.276475,-2.082783,-7.844771,-6.875327,-2.907310,4.406018,9.445426,-4.129048,-8.903875,7.356115,-6.639320,0.714289,9.087626,-3.405391,9.609951,-3.160037,7.049305,5.909689,-6.243124,-9.663683,-5.034651,-5.624946,0.921627,0.155434,-6.436934,6.590630,-6.449443,2.970171,3.814016,-1.569901,-8.492876,5.183568,6.003243,5.760432,-7.481120,1.790267,4.081548,-4.508259,-0.628407,5.861028,-6.696526,-5.728437,9.937891,-3.675235,8.397339,4.347589,4.408342,-1.636890,-3.572136,-4.670195,3.341664,6.559211,7.300511,0.551750,1.047590,-1.409153,-6.051827,-6.925974,-4.619465,-6.370675,8.899018,-3.322746,-2.435404,-8.500106,-6.012574,9.893252,-5.285328,6.784909,-6.098793,1.147057,1.763046,4.421084,-2.920532,7.261644,-5.652704,0.785622,-1.133323,-0.388973,-9.465289,2.699234,-3.903854,-3.211022,5.158445,-4.744254,-5.102585,9.473544,-2.413829,1.285077,2.288370,8.915084,1.343612,4.905130,-9.227679,-6.682026,-5.031750,-8.009136,3.464211,5.132597,-4.685920,-3.494260,-6.329835,-5.779415,7.022015,5.798329,-0.529662,-8.320530,1.972638,1.747036,-5.402410,-5.614471,0.643007,9.809579,2.904569,6.995146,-4.875000,1.014430,-4.804341,0.463495,1.810988,-4.973766,-9.917707,6.360361,-5.272783,8.471690,0.667251,-2.966278,-9.359544,2.137284,-4.009396,5.550199,-3.932182,1.189260,-9.779157,-5.157735,-8.952963,-7.635942,-8.345904,-5.568658,-7.195227,1.514799,-5.166324,8.859359,7.134705,-3.268743,2.538466,-0.339344,-8.074452,-7.755855,4.019501,2.678986,1.440111,-4.220381,4.219589,0.602152,-4.787473,4.981883,-4.413332,-8.329229,9.904530,7.558343,-9.686529,5.036480,-5.049409,-8.252235,-0.406485,2.747731,5.393729,1.685273,-5.409205,-9.867271,4.443068,5.543864,-3.543799,1.091164,8.082056,5.460190,2.073028,-7.474576,-5.937744,1.520631,-7.103006,5.954774,-6.328716,2.209626,9.396158,3.214102,3.071865,-2.681435,-0.725848,-7.139173,-1.529467,-8.911853,-9.902464,1.372615,5.369128,5.044287,9.298671,9.251959,-0.268389,5.047134,-2.181606,-2.321129,2.560660,-2.830081,9.556616,5.081538,-9.522785,1.330687,8.448871,3.528679,5.308635,-2.823768,2.830577,-1.968636,-1.921927,5.499855,-1.566945,6.784546,-0.688679,-0.468126,-2.616054,-6.494741,4.092640,6.348622,-8.699794,3.585876,6.820172,0.454525,9.738210,-6.102942,6.652139,-7.489050,-7.010899,4.831552,8.875020,-5.713728,-7.336686,-3.849109,-8.812434,-6.808427,7.235652,-7.384366,4.763212,1.699721,2.636942,2.675489,-4.047186,-5.941642,7.285483,3.816846,2.815115,-9.474245,-8.167121,6.522178,-3.187543,-2.436094,5.995170,-5.094838,-6.763151], dtype = "float64")#candidate|11595|(1536,)|const|float64
call_11593 = relay.TupleGetItem(func_9148_call(relay.reshape(const_11594.astype('bool'), [1, 528]), relay.reshape(const_11595.astype('float64'), [1536,]), ), 1)
call_11596 = relay.TupleGetItem(func_9151_call(relay.reshape(const_11594.astype('bool'), [1, 528]), relay.reshape(const_11595.astype('float64'), [1536,]), ), 1)
func_7974_call = mod.get_global_var('func_7974')
func_7978_call = mutated_mod.get_global_var('func_7978')
var_11613 = relay.var("var_11613", dtype = "float32", shape = (224,))#candidate|11613|(224,)|var|float32
call_11612 = relay.TupleGetItem(func_7974_call(relay.reshape(var_11613.astype('float32'), [1, 14, 16]), relay.reshape(var_11613.astype('float32'), [1, 14, 16]), ), 0)
call_11614 = relay.TupleGetItem(func_7978_call(relay.reshape(var_11613.astype('float32'), [1, 14, 16]), relay.reshape(var_11613.astype('float32'), [1, 14, 16]), ), 0)
output = relay.Tuple([call_11586,call_11593,const_11594,const_11595,call_11612,var_11613,])
output2 = relay.Tuple([call_11587,call_11596,const_11594,const_11595,call_11614,var_11613,])
func_11624 = relay.Function([var_11613,], output)
mod['func_11624'] = func_11624
mod = relay.transform.InferType()(mod)
var_11625 = relay.var("var_11625", dtype = "float32", shape = (224,))#candidate|11625|(224,)|var|float32
output = func_11624(var_11625)
func_11626 = relay.Function([var_11625], output)
mutated_mod['func_11626'] = func_11626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9978_call = mod.get_global_var('func_9978')
func_9979_call = mutated_mod.get_global_var('func_9979')
call_11633 = relay.TupleGetItem(func_9978_call(), 0)
call_11634 = relay.TupleGetItem(func_9979_call(), 0)
uop_11653 = relay.acosh(call_11633.astype('float32')) # shape=(16, 5, 13)
uop_11655 = relay.acosh(call_11634.astype('float32')) # shape=(16, 5, 13)
output = uop_11653
output2 = uop_11655
func_11665 = relay.Function([], output)
mod['func_11665'] = func_11665
mod = relay.transform.InferType()(mod)
output = func_11665()
func_11666 = relay.Function([], output)
mutated_mod['func_11666'] = func_11666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
call_11671 = func_8643_call()
call_11672 = func_8643_call()
func_11293_call = mod.get_global_var('func_11293')
func_11294_call = mutated_mod.get_global_var('func_11294')
call_11677 = relay.TupleGetItem(func_11293_call(), 0)
call_11678 = relay.TupleGetItem(func_11294_call(), 0)
var_11681 = relay.var("var_11681", dtype = "uint64", shape = (12, 132))#candidate|11681|(12, 132)|var|uint64
bop_11682 = relay.bitwise_or(call_11677.astype('int8'), relay.reshape(var_11681.astype('int8'), relay.shape_of(call_11677))) # shape=(12, 132)
bop_11685 = relay.bitwise_or(call_11678.astype('int8'), relay.reshape(var_11681.astype('int8'), relay.shape_of(call_11678))) # shape=(12, 132)
bop_11686 = relay.divide(call_11677.astype('float64'), relay.reshape(var_11681.astype('float64'), relay.shape_of(call_11677))) # shape=(12, 132)
bop_11689 = relay.divide(call_11678.astype('float64'), relay.reshape(var_11681.astype('float64'), relay.shape_of(call_11678))) # shape=(12, 132)
func_11150_call = mod.get_global_var('func_11150')
func_11152_call = mutated_mod.get_global_var('func_11152')
call_11693 = func_11150_call()
call_11694 = func_11150_call()
func_3969_call = mod.get_global_var('func_3969')
func_3975_call = mutated_mod.get_global_var('func_3975')
var_11696 = relay.var("var_11696", dtype = "int64", shape = (120, 4))#candidate|11696|(120, 4)|var|int64
var_11697 = relay.var("var_11697", dtype = "float32", shape = (2, 180))#candidate|11697|(2, 180)|var|float32
var_11698 = relay.var("var_11698", dtype = "float64", shape = (77, 11))#candidate|11698|(77, 11)|var|float64
call_11695 = relay.TupleGetItem(func_3969_call(relay.reshape(var_11696.astype('int64'), [12, 4, 10]), relay.reshape(var_11696.astype('int64'), [12, 4, 10]), relay.reshape(var_11697.astype('float32'), [12, 30]), relay.reshape(var_11698.astype('float64'), [847,]), ), 2)
call_11699 = relay.TupleGetItem(func_3975_call(relay.reshape(var_11696.astype('int64'), [12, 4, 10]), relay.reshape(var_11696.astype('int64'), [12, 4, 10]), relay.reshape(var_11697.astype('float32'), [12, 30]), relay.reshape(var_11698.astype('float64'), [847,]), ), 2)
output = relay.Tuple([call_11671,bop_11682,bop_11686,call_11693,call_11695,var_11696,var_11697,var_11698,])
output2 = relay.Tuple([call_11672,bop_11685,bop_11689,call_11694,call_11699,var_11696,var_11697,var_11698,])
func_11708 = relay.Function([var_11681,var_11696,var_11697,var_11698,], output)
mod['func_11708'] = func_11708
mod = relay.transform.InferType()(mod)
var_11709 = relay.var("var_11709", dtype = "uint64", shape = (12, 132))#candidate|11709|(12, 132)|var|uint64
var_11710 = relay.var("var_11710", dtype = "int64", shape = (120, 4))#candidate|11710|(120, 4)|var|int64
var_11711 = relay.var("var_11711", dtype = "float32", shape = (2, 180))#candidate|11711|(2, 180)|var|float32
var_11712 = relay.var("var_11712", dtype = "float64", shape = (77, 11))#candidate|11712|(77, 11)|var|float64
output = func_11708(var_11709,var_11710,var_11711,var_11712,)
func_11713 = relay.Function([var_11709,var_11710,var_11711,var_11712,], output)
mutated_mod['func_11713'] = func_11713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11293_call = mod.get_global_var('func_11293')
func_11294_call = mutated_mod.get_global_var('func_11294')
call_11749 = relay.TupleGetItem(func_11293_call(), 0)
call_11750 = relay.TupleGetItem(func_11294_call(), 0)
output = call_11749
output2 = call_11750
func_11753 = relay.Function([], output)
mod['func_11753'] = func_11753
mod = relay.transform.InferType()(mod)
mutated_mod['func_11753'] = func_11753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11753_call = mutated_mod.get_global_var('func_11753')
call_11754 = func_11753_call()
output = call_11754
func_11755 = relay.Function([], output)
mutated_mod['func_11755'] = func_11755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10240_call = mod.get_global_var('func_10240')
func_10242_call = mutated_mod.get_global_var('func_10242')
call_11756 = func_10240_call()
call_11757 = func_10240_call()
output = call_11756
output2 = call_11757
func_11780 = relay.Function([], output)
mod['func_11780'] = func_11780
mod = relay.transform.InferType()(mod)
output = func_11780()
func_11781 = relay.Function([], output)
mutated_mod['func_11781'] = func_11781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_11787 = relay.TupleGetItem(func_8338_call(), 0)
call_11788 = relay.TupleGetItem(func_8339_call(), 0)
func_9054_call = mod.get_global_var('func_9054')
func_9056_call = mutated_mod.get_global_var('func_9056')
call_11799 = relay.TupleGetItem(func_9054_call(), 0)
call_11800 = relay.TupleGetItem(func_9056_call(), 0)
output = relay.Tuple([call_11787,call_11799,])
output2 = relay.Tuple([call_11788,call_11800,])
func_11814 = relay.Function([], output)
mod['func_11814'] = func_11814
mod = relay.transform.InferType()(mod)
mutated_mod['func_11814'] = func_11814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11814_call = mutated_mod.get_global_var('func_11814')
call_11815 = func_11814_call()
output = call_11815
func_11816 = relay.Function([], output)
mutated_mod['func_11816'] = func_11816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9244_call = mod.get_global_var('func_9244')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_11872 = func_9244_call()
call_11873 = func_9244_call()
output = relay.Tuple([call_11872,])
output2 = relay.Tuple([call_11873,])
func_11874 = relay.Function([], output)
mod['func_11874'] = func_11874
mod = relay.transform.InferType()(mod)
output = func_11874()
func_11875 = relay.Function([], output)
mutated_mod['func_11875'] = func_11875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11445_call = mod.get_global_var('func_11445')
func_11447_call = mutated_mod.get_global_var('func_11447')
call_11887 = func_11445_call()
call_11888 = func_11445_call()
output = call_11887
output2 = call_11888
func_11905 = relay.Function([], output)
mod['func_11905'] = func_11905
mod = relay.transform.InferType()(mod)
mutated_mod['func_11905'] = func_11905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11905_call = mutated_mod.get_global_var('func_11905')
call_11906 = func_11905_call()
output = call_11906
func_11907 = relay.Function([], output)
mutated_mod['func_11907'] = func_11907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11955 = relay.var("var_11955", dtype = "float32", shape = (1, 5, 3))#candidate|11955|(1, 5, 3)|var|float32
uop_11956 = relay.tan(var_11955.astype('float32')) # shape=(1, 5, 3)
bop_11961 = relay.logical_or(uop_11956.astype('bool'), relay.reshape(var_11955.astype('bool'), relay.shape_of(uop_11956))) # shape=(1, 5, 3)
output = bop_11961
output2 = bop_11961
func_11967 = relay.Function([var_11955,], output)
mod['func_11967'] = func_11967
mod = relay.transform.InferType()(mod)
var_11968 = relay.var("var_11968", dtype = "float32", shape = (1, 5, 3))#candidate|11968|(1, 5, 3)|var|float32
output = func_11967(var_11968)
func_11969 = relay.Function([var_11968], output)
mutated_mod['func_11969'] = func_11969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11445_call = mod.get_global_var('func_11445')
func_11447_call = mutated_mod.get_global_var('func_11447')
call_11974 = func_11445_call()
call_11975 = func_11445_call()
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_11981 = relay.TupleGetItem(func_8338_call(), 0)
call_11982 = relay.TupleGetItem(func_8339_call(), 0)
func_10911_call = mod.get_global_var('func_10911')
func_10913_call = mutated_mod.get_global_var('func_10913')
call_11991 = func_10911_call()
call_11992 = func_10911_call()
func_9244_call = mod.get_global_var('func_9244')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_12000 = func_9244_call()
call_12001 = func_9244_call()
func_6568_call = mod.get_global_var('func_6568')
func_6570_call = mutated_mod.get_global_var('func_6570')
var_12010 = relay.var("var_12010", dtype = "float64", shape = (63,))#candidate|12010|(63,)|var|float64
call_12009 = func_6568_call(relay.reshape(var_12010.astype('float64'), [7, 1, 9]))
call_12011 = func_6568_call(relay.reshape(var_12010.astype('float64'), [7, 1, 9]))
var_12014 = relay.var("var_12014", dtype = "float64", shape = (7, 15, 9))#candidate|12014|(7, 15, 9)|var|float64
bop_12015 = relay.bitwise_or(call_12009.astype('int32'), relay.reshape(var_12014.astype('int32'), relay.shape_of(call_12009))) # shape=(7, 15, 9)
bop_12018 = relay.bitwise_or(call_12011.astype('int32'), relay.reshape(var_12014.astype('int32'), relay.shape_of(call_12011))) # shape=(7, 15, 9)
func_9468_call = mod.get_global_var('func_9468')
func_9469_call = mutated_mod.get_global_var('func_9469')
call_12046 = relay.TupleGetItem(func_9468_call(), 0)
call_12047 = relay.TupleGetItem(func_9469_call(), 0)
output = relay.Tuple([call_11974,call_11981,call_11991,call_12000,var_12010,bop_12015,call_12046,])
output2 = relay.Tuple([call_11975,call_11982,call_11992,call_12001,var_12010,bop_12018,call_12047,])
func_12052 = relay.Function([var_12010,var_12014,], output)
mod['func_12052'] = func_12052
mod = relay.transform.InferType()(mod)
mutated_mod['func_12052'] = func_12052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12052_call = mutated_mod.get_global_var('func_12052')
var_12054 = relay.var("var_12054", dtype = "float64", shape = (63,))#candidate|12054|(63,)|var|float64
var_12055 = relay.var("var_12055", dtype = "float64", shape = (7, 15, 9))#candidate|12055|(7, 15, 9)|var|float64
call_12053 = func_12052_call(var_12054,var_12055,)
output = call_12053
func_12056 = relay.Function([var_12054,var_12055,], output)
mutated_mod['func_12056'] = func_12056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11874_call = mod.get_global_var('func_11874')
func_11875_call = mutated_mod.get_global_var('func_11875')
call_12068 = relay.TupleGetItem(func_11874_call(), 0)
call_12069 = relay.TupleGetItem(func_11875_call(), 0)
func_805_call = mod.get_global_var('func_805')
func_809_call = mutated_mod.get_global_var('func_809')
var_12092 = relay.var("var_12092", dtype = "float64", shape = (120,))#candidate|12092|(120,)|var|float64
var_12093 = relay.var("var_12093", dtype = "float64", shape = (1536,))#candidate|12093|(1536,)|var|float64
call_12091 = relay.TupleGetItem(func_805_call(relay.reshape(var_12092.astype('float64'), [4, 5, 6]), relay.reshape(var_12093.astype('float64'), [1536,]), ), 3)
call_12094 = relay.TupleGetItem(func_809_call(relay.reshape(var_12092.astype('float64'), [4, 5, 6]), relay.reshape(var_12093.astype('float64'), [1536,]), ), 3)
func_11196_call = mod.get_global_var('func_11196')
func_11199_call = mutated_mod.get_global_var('func_11199')
const_12104 = relay.const([-5,8,1,4,4,-7,-1,9,10,-8,4,-8,-6,-7,8,-3,-2,-9,-6,1,1,6,-4,1,8,1,-5,-2,-9,-10,-5,-1,3,-10,-1,10,8,-5,2,6,-9,-3,-9,5,-5,6,9,9,-7,2,1,-1,7,-1,6,-10,-6,1,-9,-3,3,-6,-7,6,-3,4,-2,1,5,-10,-1,7,-5,-5,5,1,-7,2,-2,-2,9,-9,2,-2,-3,-9,-5,6,-7,8,-8,9,8,1,-10,-6,-8,-1,4,9,-6,-6,7,4,-10,5,1,-3,-7,-10,-9,7,-1,10,-10,5,-9,10,2,9,6,1,-10,-10,-1,6,-7,9,-9,-3,10,-8,10,7,2,5,-10,7,1,8,8,-1,-7,2,1,-7,-3,10,-5,-5,-2,6,5,3,3,-7,7,5,-2,10,-10,4,5,7,2,-6,-2,-8,6,-2,-5,1,9,-6,2,-4,-4,-8,-4,-9,-8,-1,-7,-7,2,-3,10,-9,-9,2,2,4,6,-6,-8,5,10,-6,4,-10,-7,-3,7,10,8,7,-9,7,2,6,-8,6,6,3,-9,8,9,5,-5,2,-8,-5,-8,2,6,10,8,2,-9,-8,1,4,-7,-4,3,-8,-6,8,5,-6,8,7,-3,2,3,10,-5,-3,-3,-5,-4,-7,-7,-4,3,-5,5,8,8,-10,9,-6,4,7,6,-4,-6,-1,-6,-5,-5,1,-2,-8,9,3,7,2,-1,-9,-10,7,5,-9,3,9,6,-9,-9,1,6,7,5,5,8,-3,10,-6,-8,-6,-1,-10,-5,7,6,5,2,-5,1,5,5,-8,5,-10,9,5,-2,-8,2,2,-5,-9,-1,8,-4,1,-8,-6,3,8,-3,3,-8,4,-10,9,5,4,4,-8,-2,10,8,-5,-6,-6,-7,-6,-3,8,-7,9,-9,-10,5,-1,-6,9,1,-8,8,-7,2,2,4,-9,9,4,10,-10,1,2,-4,-3,4,1,-3,6,2,3,10,-8,7,-6,8,-4,7,6,8,8,1,3,-8,1,9,-7,-3,9,-6,1,-2,3,-10,3,-8,-9,10,5,2,-9,10,-1,10,-5,6,-10,-2,8,-2,1,1,1,1,-9,-1,-4,-4,-6,-5,-1,-8,9,-4,1,7,-7,1,10,-5,-4,7,7,-1,8,-3,-6,1,-10,-4,2,4,-10,9,-4,-8,1,6,-7,-1,4,-3,7,-8,9,-2,3,-10,9,-2,-4,-3,8,-2,-6,-9,9,1,-7,6,8,9,-4,-4,-10,7,-9,-8,-10,1,5,6,-5,1,5,10,-5,-7,-7,3,-1,3,9,-6,-2,-4,-10,-1,9,-9,-1,-10,-7,5,-1,-3,-9,4,-8,8,9,8,-2,6,-3,6,5,8,6,-8,-4,-1,7,-2,6,-4,-1,6,-1,5,-9,-6,10,6,1,-2,3,9,-7,-5,-10,7,1,-5,8,-6,2,1,8,-5,-9,4,-10,-4,-4,1,-9,-3,4,5,-7,-10,3,-8,-7,7,-2,2,4,3,6,-1,-2,7,2,9,1,8,-9,2,-3,-3,-2,9,10,5,3,3,10,-3,-10,-4,2,-6,2,8,-8,10,-8,7,10,6,-6,1,8,10,6,10,10,8,5,7,9,-7,-6,-4,4,10,-8,-8,4,-4,-4,8,-4,7,-4,-5,2,9,6,-6,5,10,8,-2,8,5,-2,-9,1,6,-8,10,4,-10,7,9,-2,7,-1,-2,-5,-4,-10,-5,-6,-8,-3,6,10,-6,-10,10,7,1,8,-6,8,2,-10,-9,-8,-3,-5,-6,3,-3,8,4,-1,-3,6,-4,9,2,-2,8,-6,-9,-7,8,-9,-4,4,-2,3,-6,7,5,5,-7,-8,7,5,-7,-10,-4,-5,6,6,-6,5,2,-1,8,-4,-3,10,-10,-3,-1,3,-6,6,10,1,-3,-6,-8,1,3,1,-10,3,9,-7,2,6,10,9,-3,4,9,-2,8,-5,9,-6,-10,-10,-6,-7,-9,-6,4,9,-8,-5,6,7,3,7,-9,-2,6,6,-1,2,-8,10,-6,1,-3,-4,-6,-7,3,10,8,3,-3,8,3,-5,8,3,4,1,-10,8,-6,-2,8,-2,-3,-2,3,-2,10,7,3,-4,-4,8,-2,10,3,6,4,-10,3,5,4,4,7,1,-1,-10,-2,9,-5,1,-10,1,-6,-3,5,-7,-7,4,-2,7,2,10,-6,-9,7,10,6,1,4,-5,4,-7,-4,-7,8,2,3,-5,1,3,3,-5,-7,-2,-10,10,-10,-5,10,1,-9,-7,4,-3,-5,3,2,-6,6,-7,-7,-10,-6,9,10,1,2,-2,-9,3,1,-9,-6,1,-4,-8,-5,-8,-5,6,-9,-5,-4,-7,-1,-4,-6,5,-9,4,7,6,10,5,-3,1,8,2,4,-5,-10,7,-6,-10,1,8,-5,9,10,-3,5,-4,-1,-4,-8,9,-2,5,-3,2,-10,1,7,-1,6,-10,9,3,-10,4,-8,7,-9,7,-9,5,1,3,10,5,-1,8,-6,-9,-9,-6,5,-10,-6,-8,8,-2,-3,-5,2,-10,4,2,-10,6,-3,-10,-6,7,-7,-4,-2,2,-3,10,-8,6,-2,-9,9,-4,10,5,2,7,-8,-2,7,-8,2,6,10,-9,-2,5,-8,8,-2,-5,4,4,2,4,2,2,10,4,-1,4,-5,-7,-9,2,-5,-6,8,-2,-9,-10,10,7,-9,2,7,-3,7,7,2,-7,-6,-9,6,3,-10,8,-4,-10,7,-2,9,7,5,4,-3,8,6,4,-9,-9,1,-10,4,9,-3,-6,-8,10,8,1,-5,-3,-6,-6,7,7,5,-4,-7,-8,7,3,-8,-7,7,10,-10,-6,1,5,-7,5,-10,-1,-5,7,3,-5,3,7,-3,3,-1,10,-10,9,7,-9,6,-4,-9,3,1,4,4,-3,10,10,4,3,-7,1,-8,-1,-2,-7,5,4,-10,9,4,10,-9,-7,-2,-9,5,-3,2,-9,-10,-5,6,1,2,9,4,-9,-2,8,-7,3,6,-6,3,-1,2,7,7,-6,-8,4,6,2,10,-4,-6,-10,4,-9,1,-9,7,-3,-4,5,5,1,-3,-1,-5,-1,-1,-3,6,3,3,-10,-10,7,1,-5,1,10,-2,-6,-6,-10,-7,2,-7,1,-9,-2,-4,-2,-3,5,-4,8,6,5,-1,8,5,3,7,2,7,-6,5,7,-6,9,-7,-5,1,4,-4,1,-4,-3,-8,-8,9,5,-3,-1,7,8,9,9,-5,3,7,9,8,-4,-7,3,-8,1,5,8,-3,7,2,-3,3,6,-10,1,9,8,10,3,2,-7,7,10,-4,4,-5,6,-1,-7,-9,10,-6,5,10,1,-3,8,6,4,4,-9,-4,-8,7,-7,4,4,6,5,9,-7,-6,6,2,3,7,9,-7,6,10,2,-1,-5,6,-4,-8,9,5,-8,-3,-4,-7,2,8,9,3,6,-8,2,3,-10,6,-6,3,7,7,8,2,7,10,-2,5,-9,-8,-6,-9,-1,6,-4,-1,6,-2,-3,6,8,6,-9,5,6,10,-4,8,2,3,2,-8,-4,-3,-9,-9,-5,5,5,-3,-3,3,-2,3,5,-1,-1,-7,1,4,-1,7,7,1,3,-3,8,6,-8,-3,6,-2,-7,4,1,8,-2,-7,8,-2,-3,-7,-2,-1,3,-5,-2,-8,8,-6,1,-2,-10,3,-8,-7,2,3,9,6,10,1,-10,10,10,-8,2,5,8,8,-4,8,10,-10,7,-1,7,2,2,7,10,6,-5,1,-10,3,3,10,5,2,-3,-3,-8,10,-7,-5,-2,6,-3,-3,6,-7,-7,2,-4,-6,-9,9,-1,9,-6,2,5,-5,5,-1,4,-9,6,3,-8,-9,5,6,9,-4,2,-4,4,-7,-7,-1,8,-2,-3,-6,-1,10,5,1,-3,-10,1,-4,-3,-5,3,3,-5,-8,7,1,-9,3,-7,9,-9,7,-4,6,-5,-10,-6,10,8,-2,-9,3,4,-3,2,2,-2,-5,3,-6,2,-7,-10,10,4,-3,6,3,3,2,-8,1,5,-6,7,9,9,6,2,7,1,-2,-7,-7,-1,-10,-3,-8,-6,1,8,3,-5,-9,8,-6,8,-5,3,7,-1,2,7,4,-8,-7,4,-6,-10,9,-2,4,-1,7,1,7,-3,7,10,-5,8,-5,-3,-3,-5,-8,7,7,3,3,9,5,8,-2,-5,9,9,6,-4,-5,-3,-5,7,10,5,-5,3,4,1,-2,-3,10,4,3,8,8,-1,4,5,9,7,-6,-3,2,8,-2,6,2,9,9,-3,9,-1,3,6,8,3,4,6,-10,1,-5,6,-6,-5,2,-1,2,-3,8,7,3,-1,6,4,-2,-1,-9,-6,-10,9,1,-5,1,-9,9,6,6,8,5,-1,6,-5,7,-9,4,-10,-5,-9,-5,5,2,6,9,1,6,10,-4,-7,8,-7,-4,-9,-4,-7,-7,-2,4,-9,2,8,2,1,2,-6,-6,7,3,-8,4,-7,8,10,-5,-6,10,6,1,-9,-7,-5,9,-10,-8,1,-4,3,-6,-3,-3,-10,10,-7,3,-3,-3,3,10,4,2,10,-4,7,9,10,6,6,-8,-8,-9,3,-1,3,2,9,-5,-9,5,8,5,-5,10,8,6,-10,6,8,2,9,1,7,9,4,3,8,-9,-6,6,-8,-9,-9,4,2,-9,9,9,5,-1,3,-10,-9,-6,10,10,-6,8,5,1,7,8,-9,9,6,4,3,10,4,10,10,6,10,1,6,-3,-5,9,8,9,-10,-1,8,-9,-1,-10,9,-9,10,4,-4,-10,-8,3,7,-7,-7,-1,2,-1,7,4,-9,-6,-2,6,-7,-7,3,8,3,8,6,9,9,2,3,-3,8,-3,10,-8,-6,-2,6,1,-7,-1,10,2,-2,-7,-10,-7,-10,1,-10,10,6,6,-4,-3,-8,6,6,7,-2,-3,5,-1,10,8,2,9,10,2,-4,6,9,2,-8,3,3,2,-6,4,6,-8,-10,6,2,-3,-5,10,1,-1,-1,10,-8,4,7,2,2,10,8,-3,8,-9,-4,-6,3,5,10,9,-8,-6,3,-8,7,-8,-8,5,6,6,5,7,9,-1,7,-1,-3,2,2,-2,10,3,-10,1,-4,-7,10,6,-8,-8,-5,4,5,-7,-7,-7,-8,4,-3,-5,5,6,8,5,-9,2,2,-3,1,-6,-8,5,3,7,8,3,-5,-7,2,-2,-4,4,-10,5,-8,2,-1,-5,8,-2,-5,-10,-5,5,8,8,-2,10,-1,5,-5,9,-4,2,-6,10,1,-2,-6,4,6,8,6,2,-4,-1,4,4,-4,-1,3,2,1,2,2,-3,-10,8,10,5,7,-2,-6,8,-5,10,10,3,7,9,3,-10,3,-1,10,-7,-4,9,-7,9,5,9,-3,-7,8,-10,7,4,-9,-5,10,7,2,3,-10,1,-4,-3,3,-7,-5,3,-8,4,-1,6,2,7,-7,3,-5,-7,3,5,-9,8,-9,5,-8,-5,-7,-4,4,3,4,-1,10,-5,7,10,4,7,1,-3,3,1,10,-9,7,-6,-7,9,6,-10,-5,6,-10,-3,6,-9,-5,-7,6,-9,-7,5,3,-1,9,1,-4,5,9,5,5,2,-6,3,6,-6,-9,9,6,-1,3,-9,9,3,2,-3,1,7,6,-9,1,9,8,-2,-10,-7,6,-2,-2,3,2,-2,-1,2,8,4,-9,-1,-1,-9,-7,5,-6,8,-1,-3,5,8,6,-5,-1,6,-2,-7,4,-5,4,-6,-7,8,5,3,-9,-8,-10,1,-4,1,6,2,-4,10,-6,-10,-1,5,2,-8,8,5,-10,9,-5,-3,-8,10,-1,2,9,2,-10,7,-4,2,2,-10,-6,-6,9,4,4,1,-6,-3,-7,-8,2,9,-2,-8,2,5,-6,1,-2,-3,8,-10,-9,1,7,-2,-7,-5,-4,1,2,4,-1,-3,9,-9,-2,-1,-1,-6,4,-9,1,-7,-8,10,8,-10,-10,-2,-1,-6,-2,-3,-9,-3,-8,-3,-6,-5,1,-6,3,10,9,2,4,2,-7,9,5,-1,4,-4,-4,-7,-6,4,1,3,-7,-7,-5,7,5,9,7,4,2,4,-9,-1,-7,4,-10,-5,6,-7,2,-2,-9,-6,-1,-10,8,-8,-8,-2,5,-1,5,-1,-2,1,-2,3,-5,8,1,10,-1,-6,7,-3,6,-9,-2,3,9,-7,10,-2,9,3,-5,9,9,-6,5,-1,5,-5,10,-10,3,-2,7,8,-2,-8,-3,-7,-4,1,4,4,3,8,-7,-4,6,-3,-8,1,-3,-8,-5,9,10,1,-5,5,2,1,10,2,-9,-8,-8,-8,-9,-7,1,-4,-9,5,9,2,-1,-3,-6,8,-1,-4,-7,-2,-9,1,-7,3,9,2,7,-9,4,-1,6,10,6,-6], dtype = "uint64")#candidate|12104|(2475,)|const|uint64
call_12103 = relay.TupleGetItem(func_11196_call(relay.reshape(const_12104.astype('uint64'), [2475,])), 4)
call_12105 = relay.TupleGetItem(func_11199_call(relay.reshape(const_12104.astype('uint64'), [2475,])), 4)
uop_12111 = relay.sinh(call_12091.astype('float32')) # shape=(16, 12, 8)
uop_12113 = relay.sinh(call_12094.astype('float32')) # shape=(16, 12, 8)
func_11196_call = mod.get_global_var('func_11196')
func_11199_call = mutated_mod.get_global_var('func_11199')
call_12118 = relay.TupleGetItem(func_11196_call(relay.reshape(call_12103.astype('uint64'), [2475,])), 4)
call_12119 = relay.TupleGetItem(func_11199_call(relay.reshape(call_12103.astype('uint64'), [2475,])), 4)
uop_12126 = relay.cosh(uop_12111.astype('float32')) # shape=(16, 12, 8)
uop_12128 = relay.cosh(uop_12113.astype('float32')) # shape=(16, 12, 8)
output = relay.Tuple([call_12068,var_12092,var_12093,call_12103,const_12104,call_12118,uop_12126,])
output2 = relay.Tuple([call_12069,var_12092,var_12093,call_12105,const_12104,call_12119,uop_12128,])
func_12130 = relay.Function([var_12092,var_12093,], output)
mod['func_12130'] = func_12130
mod = relay.transform.InferType()(mod)
mutated_mod['func_12130'] = func_12130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12130_call = mutated_mod.get_global_var('func_12130')
var_12132 = relay.var("var_12132", dtype = "float64", shape = (120,))#candidate|12132|(120,)|var|float64
var_12133 = relay.var("var_12133", dtype = "float64", shape = (1536,))#candidate|12133|(1536,)|var|float64
call_12131 = func_12130_call(var_12132,var_12133,)
output = call_12131
func_12134 = relay.Function([var_12132,var_12133,], output)
mutated_mod['func_12134'] = func_12134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11254_call = mod.get_global_var('func_11254')
func_11255_call = mutated_mod.get_global_var('func_11255')
call_12151 = relay.TupleGetItem(func_11254_call(), 0)
call_12152 = relay.TupleGetItem(func_11255_call(), 0)
output = call_12151
output2 = call_12152
func_12161 = relay.Function([], output)
mod['func_12161'] = func_12161
mod = relay.transform.InferType()(mod)
mutated_mod['func_12161'] = func_12161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12161_call = mutated_mod.get_global_var('func_12161')
call_12162 = func_12161_call()
output = call_12162
func_12163 = relay.Function([], output)
mutated_mod['func_12163'] = func_12163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
call_12211 = func_8643_call()
call_12212 = func_8643_call()
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_12238 = relay.TupleGetItem(func_8338_call(), 0)
call_12239 = relay.TupleGetItem(func_8339_call(), 0)
output = relay.Tuple([call_12211,call_12238,])
output2 = relay.Tuple([call_12212,call_12239,])
func_12243 = relay.Function([], output)
mod['func_12243'] = func_12243
mod = relay.transform.InferType()(mod)
output = func_12243()
func_12244 = relay.Function([], output)
mutated_mod['func_12244'] = func_12244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9973_call = mod.get_global_var('func_9973')
func_9975_call = mutated_mod.get_global_var('func_9975')
call_12302 = relay.TupleGetItem(func_9973_call(), 1)
call_12303 = relay.TupleGetItem(func_9975_call(), 1)
output = relay.Tuple([call_12302,])
output2 = relay.Tuple([call_12303,])
func_12304 = relay.Function([], output)
mod['func_12304'] = func_12304
mod = relay.transform.InferType()(mod)
output = func_12304()
func_12305 = relay.Function([], output)
mutated_mod['func_12305'] = func_12305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11555_call = mutated_mod.get_global_var('func_11555')
call_12326 = func_11553_call()
call_12327 = func_11553_call()
output = relay.Tuple([call_12326,])
output2 = relay.Tuple([call_12327,])
func_12333 = relay.Function([], output)
mod['func_12333'] = func_12333
mod = relay.transform.InferType()(mod)
output = func_12333()
func_12334 = relay.Function([], output)
mutated_mod['func_12334'] = func_12334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10441_call = mod.get_global_var('func_10441')
func_10443_call = mutated_mod.get_global_var('func_10443')
call_12367 = func_10441_call()
call_12368 = func_10441_call()
func_10639_call = mod.get_global_var('func_10639')
func_10642_call = mutated_mod.get_global_var('func_10642')
var_12384 = relay.var("var_12384", dtype = "float32", shape = (231,))#candidate|12384|(231,)|var|float32
call_12383 = relay.TupleGetItem(func_10639_call(relay.reshape(var_12384.astype('float32'), [7, 3, 11])), 3)
call_12385 = relay.TupleGetItem(func_10642_call(relay.reshape(var_12384.astype('float32'), [7, 3, 11])), 3)
output = relay.Tuple([call_12367,call_12383,var_12384,])
output2 = relay.Tuple([call_12368,call_12385,var_12384,])
func_12408 = relay.Function([var_12384,], output)
mod['func_12408'] = func_12408
mod = relay.transform.InferType()(mod)
var_12409 = relay.var("var_12409", dtype = "float32", shape = (231,))#candidate|12409|(231,)|var|float32
output = func_12408(var_12409)
func_12410 = relay.Function([var_12409], output)
mutated_mod['func_12410'] = func_12410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_12412 = relay.TupleGetItem(func_8338_call(), 0)
call_12413 = relay.TupleGetItem(func_8339_call(), 0)
output = relay.Tuple([call_12412,])
output2 = relay.Tuple([call_12413,])
func_12417 = relay.Function([], output)
mod['func_12417'] = func_12417
mod = relay.transform.InferType()(mod)
mutated_mod['func_12417'] = func_12417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12417_call = mutated_mod.get_global_var('func_12417')
call_12418 = func_12417_call()
output = call_12418
func_12419 = relay.Function([], output)
mutated_mod['func_12419'] = func_12419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9742_call = mod.get_global_var('func_9742')
func_9744_call = mutated_mod.get_global_var('func_9744')
call_12440 = relay.TupleGetItem(func_9742_call(), 0)
call_12441 = relay.TupleGetItem(func_9744_call(), 0)
output = call_12440
output2 = call_12441
func_12449 = relay.Function([], output)
mod['func_12449'] = func_12449
mod = relay.transform.InferType()(mod)
output = func_12449()
func_12450 = relay.Function([], output)
mutated_mod['func_12450'] = func_12450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10021_call = mod.get_global_var('func_10021')
func_10023_call = mutated_mod.get_global_var('func_10023')
call_12473 = func_10021_call()
call_12474 = func_10021_call()
func_11254_call = mod.get_global_var('func_11254')
func_11255_call = mutated_mod.get_global_var('func_11255')
call_12481 = relay.TupleGetItem(func_11254_call(), 0)
call_12482 = relay.TupleGetItem(func_11255_call(), 0)
func_10736_call = mod.get_global_var('func_10736')
func_10737_call = mutated_mod.get_global_var('func_10737')
call_12486 = relay.TupleGetItem(func_10736_call(), 0)
call_12487 = relay.TupleGetItem(func_10737_call(), 0)
uop_12508 = relay.rsqrt(call_12473.astype('float64')) # shape=(48, 1)
uop_12510 = relay.rsqrt(call_12474.astype('float64')) # shape=(48, 1)
bop_12526 = relay.add(uop_12508.astype('int64'), relay.reshape(call_12473.astype('int64'), relay.shape_of(uop_12508))) # shape=(48, 1)
bop_12529 = relay.add(uop_12510.astype('int64'), relay.reshape(call_12474.astype('int64'), relay.shape_of(uop_12510))) # shape=(48, 1)
uop_12534 = relay.acos(bop_12526.astype('float32')) # shape=(48, 1)
uop_12536 = relay.acos(bop_12529.astype('float32')) # shape=(48, 1)
func_9148_call = mod.get_global_var('func_9148')
func_9151_call = mutated_mod.get_global_var('func_9151')
const_12547 = relay.const([[False,False],[False,True],[True,False],[True,True],[False,False],[False,False],[False,False],[False,True],[True,False],[False,True],[False,False],[True,True],[False,False],[False,True],[False,True],[False,False],[True,False],[False,False],[True,True],[True,True],[True,True],[False,False],[True,False],[True,True],[False,True],[False,True],[True,True],[False,False],[True,False],[True,False],[True,True],[False,False],[False,False],[True,True],[False,False],[False,True],[False,False],[True,True],[True,False],[False,True],[False,False],[False,True],[True,True],[True,True],[True,True],[True,True],[False,True],[True,False],[False,False],[True,False],[True,False],[True,True],[False,True],[False,True],[True,True],[True,True],[True,True],[True,True],[False,False],[False,False],[True,True],[True,False],[False,False],[False,False],[True,False],[False,False],[False,False],[True,False],[True,True],[False,False],[False,True],[False,False],[False,True],[True,True],[True,True],[True,True],[False,False],[True,False],[False,True],[True,True],[True,True],[True,True],[True,False],[False,False],[False,False],[True,False],[True,True],[False,True],[False,True],[False,True],[False,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,True],[False,True],[True,False],[True,True],[False,False],[False,True],[True,False],[False,True],[False,True],[True,False],[False,True],[True,False],[True,False],[False,False],[False,True],[False,True],[False,False],[False,False],[False,False],[True,False],[False,True],[True,False],[False,False],[True,False],[True,False],[False,True],[False,True],[True,True],[True,True],[True,True],[True,True],[True,True],[False,True],[True,False],[True,True],[True,False],[False,False],[False,False],[False,True],[False,True],[False,True],[True,False],[False,False],[True,False],[False,False],[True,True],[True,False],[False,True],[False,False],[False,True],[True,True],[True,True],[True,True],[False,False],[True,False],[True,True],[True,False],[True,False],[True,False],[False,True],[False,True],[False,True],[False,False],[True,False],[False,True],[True,True],[False,True],[True,True],[False,True],[True,True],[True,True],[False,True],[True,True],[True,False],[True,True],[True,True],[False,True],[True,False],[False,False],[False,False],[True,False],[False,True],[True,True],[False,True],[False,False],[True,True],[True,True],[False,False],[True,True],[True,False],[False,False],[False,True],[False,True],[True,False],[True,False],[False,False],[False,False],[True,True],[True,True],[False,True],[True,True],[True,False],[True,True],[True,False],[True,False],[False,True],[False,False],[False,False],[True,False],[False,False],[False,True],[False,False],[True,True],[True,True],[True,True],[False,False],[True,True],[True,False],[True,False],[False,False],[False,False],[True,False],[True,False],[True,False],[False,True],[True,False],[False,True],[False,False],[True,True],[True,False],[False,True],[False,True],[True,True],[True,False],[True,True],[False,True],[False,True],[False,True],[True,True],[True,True],[False,False],[True,True],[False,True],[True,True],[False,False],[True,True],[True,True],[False,False],[True,False],[False,False],[True,False],[False,True],[False,False],[False,True],[True,False],[True,True],[False,False],[False,False],[False,True],[True,False],[True,False],[True,True],[False,False],[True,True],[False,False],[True,True],[False,True],[True,False]], dtype = "bool")#candidate|12547|(264, 2)|const|bool
var_12548 = relay.var("var_12548", dtype = "float64", shape = (2, 768))#candidate|12548|(2, 768)|var|float64
call_12546 = relay.TupleGetItem(func_9148_call(relay.reshape(const_12547.astype('bool'), [1, 528]), relay.reshape(var_12548.astype('float64'), [1536,]), ), 3)
call_12549 = relay.TupleGetItem(func_9151_call(relay.reshape(const_12547.astype('bool'), [1, 528]), relay.reshape(var_12548.astype('float64'), [1536,]), ), 3)
func_9194_call = mod.get_global_var('func_9194')
func_9195_call = mutated_mod.get_global_var('func_9195')
call_12567 = func_9194_call()
call_12568 = func_9194_call()
bop_12574 = relay.subtract(uop_12534.astype('int32'), relay.reshape(uop_12508.astype('int32'), relay.shape_of(uop_12534))) # shape=(48, 1)
bop_12577 = relay.subtract(uop_12536.astype('int32'), relay.reshape(uop_12510.astype('int32'), relay.shape_of(uop_12536))) # shape=(48, 1)
output = relay.Tuple([call_12481,call_12486,call_12546,const_12547,var_12548,call_12567,bop_12574,])
output2 = relay.Tuple([call_12482,call_12487,call_12549,const_12547,var_12548,call_12568,bop_12577,])
func_12590 = relay.Function([var_12548,], output)
mod['func_12590'] = func_12590
mod = relay.transform.InferType()(mod)
mutated_mod['func_12590'] = func_12590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12591 = relay.var("var_12591", dtype = "float64", shape = (2, 768))#candidate|12591|(2, 768)|var|float64
func_12590_call = mutated_mod.get_global_var('func_12590')
call_12592 = func_12590_call(var_12591)
output = call_12592
func_12593 = relay.Function([var_12591], output)
mutated_mod['func_12593'] = func_12593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11874_call = mod.get_global_var('func_11874')
func_11875_call = mutated_mod.get_global_var('func_11875')
call_12618 = relay.TupleGetItem(func_11874_call(), 0)
call_12619 = relay.TupleGetItem(func_11875_call(), 0)
func_11814_call = mod.get_global_var('func_11814')
func_11816_call = mutated_mod.get_global_var('func_11816')
call_12663 = relay.TupleGetItem(func_11814_call(), 0)
call_12664 = relay.TupleGetItem(func_11816_call(), 0)
func_8515_call = mod.get_global_var('func_8515')
func_8516_call = mutated_mod.get_global_var('func_8516')
call_12669 = func_8515_call()
call_12670 = func_8515_call()
output = relay.Tuple([call_12618,call_12663,call_12669,])
output2 = relay.Tuple([call_12619,call_12664,call_12670,])
func_12677 = relay.Function([], output)
mod['func_12677'] = func_12677
mod = relay.transform.InferType()(mod)
output = func_12677()
func_12678 = relay.Function([], output)
mutated_mod['func_12678'] = func_12678
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12686 = relay.var("var_12686", dtype = "int64", shape = ())#candidate|12686|()|var|int64
const_12687 = relay.const([[[-5,-4,9,-8,-7,7,-8,2,9,-5,-1,7],[-6,4,-4,-3,9,4,9,8,-6,7,9,5]],[[-9,6,7,-3,10,8,10,-1,-9,8,10,6],[-10,-10,-2,8,-5,3,-8,8,-6,4,-10,-6]],[[3,-8,9,-10,5,-9,-7,10,3,-6,4,3],[-10,9,-3,8,-8,-8,10,-9,8,-4,6,6]],[[9,-2,-6,4,-9,4,5,-7,-8,-3,3,-5],[-1,5,-3,7,-3,-5,-4,-4,2,-7,2,2]]], dtype = "int64")#candidate|12687|(4, 2, 12)|const|int64
bop_12688 = relay.left_shift(var_12686.astype('int64'), const_12687.astype('int64')) # shape=(4, 2, 12)
func_4724_call = mod.get_global_var('func_4724')
func_4727_call = mutated_mod.get_global_var('func_4727')
const_12699 = relay.const([-2,-6,-5,4,-3,-1,-3,-7,-3,6,2,9,7,10,-4,-3,-4,-5,-5,2,6,-4,-6,-5,3,-9,5,4,-7,7,9,-8,-2,2,1,-7,9,8,-2,6,-6,10,-5,7,-1,5,-8,-5,-7,-6,-2,7,-4,-9,-2,4,10,-3,-10,-10,5,-5,8,3,-6,6,-4,1,10,4,5,-1,-4,1,-5,9,6,-4,1,-10,6,8,8,8,1,9,-2,2,-5,1,6,9,-3,6,10,-4,-9,6,2,-5,-6,1,-7,5,6,1,8,-3,4,-5,-5,-1,-1,-4,-1,-8,-5,4,-1,-3,6,10,7,3,5,8,-8,4,5,4,7,2,10,4,-6,-2,-3,6,-8,-3,-8,-10,-9,-8,2,-2,-4,1,-2,-7,1,1,-4,4,-8,4,8,-4,10,-3,4,1,2,1,-6,2,-10,1,-2,5,-2,5,4,-8,1,-7,7,-2,10,2,-4,3,-7,-9,9,-6,6,2,-3,2,-2,-9,-7,-7,-4,4,3,-5,2,-9,9,-4,9,5,-6,5,6,-6,-5,-1,-4,-9,2,7,-8,-7,-2,-4,-6,-10,-5,-8,-9,5,7,-2,-3,-8,-7,-9,9,-3,-6,1,-3,-2,-6,-1,-5,8,4,-3,-5,2,-5,-6,-8,7,-6,-7,1,-7,-2,-3,-5,-10,-3,8,5,-9,-2,7,3,-7,4,8,-3,-4,3,1,8,-7,-6,10,-6,4,-3,-1,6,-5,-9,-6,8,-7,-7,9,4,8,-2,3,-9,-7,9,1,3,6,9,-6,9,-7,6,2,3,-9,-10,2,-1,-4,-4,-6,10,-1,-3,5,-10,8,10,5,-4,8,-9,5,-9,4,3,2,-1,4,8,6,4,6,-8,5,7,5,-4,-8,7,-6,-2,-6,1,-9,-9,-1,-10,7,7,-9,-5,-10,5,2,2,2,8,8,-8,-2,-3,10,-9,-3,-6,1,-7,2,3,-3,4,10,5,-3,9,8,8,5,-2,4,-1,3,9,1,9,-8,9,-5,8,-7,-5,8,4,9,-2,-6,-9,4,-2,10,8,4,-6,4,-9,10,8,7,1,-8,10,-9,-2,-7,-7,8,2,3,-3,1,-9,-7,-1,7,-10,-7,8,1,9,6,2,-1,6,-4,2,10,-8,-6,-9,1,9,-2,-5,7,-1,-2,-7,-9,1,-1,-9,-2,-5,-6,-3,-8,8,-9,4,-9,-1,8,-7,10,-10,-1,-9,8,3,-10,10,1,7,2,-8,-6,3,-6,3,-8,-4,-6,2,-8,-5,-5,8,4,8,9,-7,6,1,2,-5,-10,1,-5,-7,10,-3,8,3,-7,10,-6,10,-8,-3,8,-3,10,-2,7,-7,-3,3,10,-7,-6,2,3,5,7,-4,-5,-1,10,-9,-5,5,-5,-3,-6,-1,-7,-6,8,-6,9,-8,-6,9,-2,-5,3,9,2,-2,-2,1,-7,-4,8,8,7,-2,-4,-10,-9,7,7,-9,-6,5,5,9,-5,-9,-10,-8,4,3,1,6,8,-4,-7,-2,-6,-5,5,7,7,-2,-2,8,-2,-5,2,-3,-5,5,-9,-9,6,-10,-7,10,10,3,-4,-1,9,7,7,4,-8,6,-6,4,8,-2,10,9,5,5,2,-4,-2,-4,5,-3,-7,-2,-5,-4,2,-7,9,4,5,-3,-5,-10,2,-6,-2,-1,9,3,-2,6,-2,-8,-7,6,2,-1,-10,6,4,10,2,-6,-7,-4,5,-4,-10,-9,5,-1,7,-7,-4,9,-6,6,2,-10,1,7,3,3,4,-2,-7,7,8,1,7,-10,10,-3,-7,3,-7,4,-2,5,8,4,-2,-7,6,-2,7,8,-9,-2,-3,6,5,-2,-6,-2,6,-10,-10,-1,-5,9,-7,3,-9,-6,-2,-2,4,-4,3,-7,-4,7,3,10,3,2,-10,9,2,10,6,8,8,-2,-10,9,-3,-9,8,-4,3,-2,3,-10,5,-6,4,2,-8,4,-1,-3,3,1,-3,10,-3,7,-4,-8,7,-9,-9,-4,5,-2,-2,3,7,5,-8,-4,-9,-6,7,1,9,-6,3,3,7,6,-2,-3,2,-1,-2,3,5,4,5,-8,5,3,4,-8,5,8,-3,-8,-8,-7,-3,2,2,-2,3,-1,3,-8,4,-8,10,-6,-7,-9,-1,-5,-7,-4,7,5,-7,-8,-4,7,-4,5,-3,8,5,-4,6,-3,-8,-3,3,5,-8,-10,1,10,-4,-1,6,-4,-9,-9,10,1,7,3,3,9,10,4,7,-7,9,-8,7,7,-2,2,-6,-10,-6,4,8,5,-3,9,2,-10,2,-7,-2,5,-1,-8,10,2,8,9,9,3,-2,-3,8,9,-3,-9,1,1,-2,8,6,10,-6,-1,3,-9,8,-1,-5,-6,-7,5,10,-9,-6,6,7,-5,7,9,10,6,10,-4,-10,-5,-7,6,-8,-4,3,6,6,-2,7,-4,9,-5,-1,-6,-1,-1,-3,10,3,-6,1,-4,-3,-1,-10,-7,9,10,3,5,8,4,3,1,-5,-2,-8,5,-5,-2,-5,3,-3,6,-8,-9,6,-8,-5,-7,-7,-9,5,8,2,2,1,3,-8,-9,1,5,-1,-8,-3,7,4,-6,-9,7,-6,-1,6,-10,-5,3,7,5,2,-4,-8,6,8,9,8,-1,4,-1,5,7,10,-6,-9,-5,-4,-7,-2,4,-6,-7,10,-7,7,-7,9,2,3,8,-7,-4,-4,3,5,-3,-2,-5,8,9,10,-8,7,10,-6,-3,-3,-5,-9,10,8,6,6,2,-3,-9,-6,-6,5,-4,-4,7,5,4,-10,9,10,10,7,1,-5,-5,-5,6,6,-4,-7,10,3,-6,-8,3,-10,-5,-4,-7,5,10,4,2,5,2,7,6,6,2,-8,-2,-5,5,1,8,7,-8,1,-3,-7,8,9,-3,7,8,2,2,-5,9,-1,4,5,1,1,4,-10,-2,-8,3,4,-1,-1,4,-1,4,1,2,-9,4,6,5,-4,-5,4,8,-7,-4,3,4,2,8,5,9,-6,3,-3,-7,7,-9,-10,-1,-7,7,3,-6,1,-8,7,-2,2,-4,-4,-4,-3,-4,-2,-1,-1,3,-2,-1,-4,-9,10,-3,-7,-9,-9,3,-8,6,3,-2,-8,8,-3,-10,10,9,3,2,10,10,-8,3,10,-7,9,-7,4,4,8,6,5,10,9,7,-5,3,2,9,-7,6,8,2,1,-3,2,-9,-7,5,10,7,1,-9,6,-4,8,9,-3,10,-9,-5,2,-7,10,5,8,-5,2,1,-4,10,-6,8,10,-3,10,-9,1,-1,2,9,8,8,-8,7,-5,-3,-6,10,8,-4,-3,-3,10,5,10,9,-10,5,7,1,8,3,-5,-9,-6,3,5,4,-10,9,-5,-5,7,-2,-3,-6,-6,-5,4,4,-7,1,-3,-9,-6,-10,-7,3,-6,-8,-7,-9,7,-2,8,-3,2,-6,1,-7,-4,-5,1,-6,-2,-7,-3,1,-2,1,10,-4,-7,9,-8,2,-3,-6,4,3,-6,-8,9,-9,4,-1,-1,9,5,-4,4,6,5,-4,-4,7,-9,9,4,-7,7,3,2,5,-1,2,-7,7,-2,10,-9,-6,-2,6,-4,-6,-10,-8,-2,2,4,-1,4,-6,8,-2,5,-5,4,4,-6,-10,9,1,-3,-7,8,-1,-5,-9,-2,-9,-1,-3,6,5,-10,-10,-3,2,-3,4,-6,-4,-9,-1,-3,8,-5,-9,10,4,-10,-1,-5,-8,2,10,6,-9,6,-8,2,-3,6,-1,7,-8,-10,-10,4,3,-2,3,8,5,-4,3,8,3,9,4,-9,-2,3,-4,-10,2,4,1,7,-6,-10,7,6,-6,5,-10,4,5,-2,2,-8,5,10,-3,-4,10,-7,-4,8,-7,-9,7,-7,-1,-3,-10,-7,-4,10,6,6,10,4,6,3,4,8,-7,6,-3,-1,10,9,7,-3,5,-10,3,-8,-5,-2,-5,10,7,-10,-7,-5,-8,-2,6,-1,-3,6,4,-4,-7,8,9,3,-6,-6,3,9,-8,10,6,-4,2,-4,-4,-5,-9,2,-3,-3,8,-1,5,-6,-2,-6,6,7,10,4,4,-4,2,-10,-2,3,6,-3,-3,3,-5,-4,-9,-9,-4,4,2,-8,5,-7,-3,-9,4,10], dtype = "uint64")#candidate|12699|(1584,)|const|uint64
call_12698 = func_4724_call(relay.reshape(var_12686.astype('uint64'), []), relay.reshape(const_12699.astype('uint64'), [11, 12, 12]), )
call_12700 = func_4724_call(relay.reshape(var_12686.astype('uint64'), []), relay.reshape(const_12699.astype('uint64'), [11, 12, 12]), )
var_12702 = relay.var("var_12702", dtype = "int64", shape = (4, 2, 12))#candidate|12702|(4, 2, 12)|var|int64
bop_12703 = relay.power(const_12687.astype('float32'), relay.reshape(var_12702.astype('float32'), relay.shape_of(const_12687))) # shape=(4, 2, 12)
output = relay.Tuple([bop_12688,call_12698,const_12699,bop_12703,])
output2 = relay.Tuple([bop_12688,call_12700,const_12699,bop_12703,])
F = relay.Function([var_12686,var_12702,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12686,var_12702,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_11019(%var_11013: Tensor[(7, 15, 15), int8], %var_11014: Tensor[(7, 15, 15), int8]) -> Tensor[(7, 15, 15), bool] {
  %0 = cast(%var_11014, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
  %1 = shape_of(%var_11013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_11013, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%2, %3) /* ty=Tensor[(7, 15, 15), bool] */
}

def @func_9742() -> (Tensor[(16, 5, 13), float32],) {
  %4 = @func_9352() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %5 = %4.0;
  (%5,)
}

def @func_11780() -> Tensor[(5, 4), float64] {
  @func_10240() /* ty=Tensor[(5, 4), float64] */
}

def @func_909(%var_871: Tensor[(11, 5, 13), float32], %var_885: Tensor[(1536), float64], %var_899: Tensor[(6, 20), float64]) -> (Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) {
  %6 = cast(%var_871, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  %7 = tan(%6) /* ty=Tensor[(11, 5, 13), float32] */;
  %8 = cast(%7, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %9 = shape_of(%var_871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_871, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %12 = cast(%var_885, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %13 = reshape(%12, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %14 = @func_179(%13) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %15 = cast(%var_871, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  %16 = %14.0;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %18 = reshape(%17, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %19 = @func_179(%18) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %20 = cast(%var_899, dtype="float64") /* ty=Tensor[(6, 20), float64] */;
  %21 = %19.0;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %23 = reshape(%20, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %24 = reshape(%22, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %25 = @func_805(%23, %24) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %26 = divide(%10, %11) /* ty=Tensor[(11, 5, 13), float64] */;
  %27 = cos(%15) /* ty=Tensor[(11, 5, 13), float32] */;
  %28 = %25.2;
  (%26, %16, %var_885, %27, %21, %28, %var_899)
}

def @func_9476() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11874() -> (Tensor[(16, 5, 13), float32],) {
  %29 = @func_9244() /* ty=Tensor[(16, 5, 13), float32] */;
  (%29,)
}

def @func_179(%var_174: Tensor[(16, 12, 8), float64]) -> (Tensor[(16, 12, 8), float64],) {
  %30 = cast(%var_174, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %31 = sqrt(%30) /* ty=Tensor[(16, 12, 8), float64] */;
  (%31,)
}

def @func_10847() -> Tensor[(16, 5, 13), float32] {
  %32 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %33 = %32.0;
  %34 = cast(%33, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  sin(%34) /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_8759(%var_8741: Tensor[(16, 5, 13), float32]) -> Tensor[(16, 5, 13), bool] {
  %35 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %36 = %35.0;
  %37 = cast(%var_8741, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%36, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%39, %40) /* ty=Tensor[(16, 5, 13), bool] */
}

def @func_12243() -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
  %41 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %42 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
  %43 = %41.0;
  (%42, %43)
}

def @func_6568(%var_6563: Tensor[(7, 1, 9), float64]) -> Tensor[(7, 15, 9), float64] {
  %44 = cast(%var_6563, dtype="float64") /* ty=Tensor[(7, 1, 9), float64] */;
  %45 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 15, 9), float64] */;
  mod(%44, %45) /* ty=Tensor[(7, 15, 9), float64] */
}

def @func_9244() -> Tensor[(16, 5, 13), float32] {
  %46 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %46.0
}

def @func_9502() -> (Tensor[(16, 5, 13), float32],) {
  %47 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
  (%47,)
}

def @func_11905() -> Tensor[(16, 5, 13), float32] {
  @func_11445() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_10639(%var_10623: Tensor[(7, 3, 11), float32]) -> (Tensor[(7, 3, 11), bool], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(5, 4), float64], Tensor[(7, 3, 11), uint64], Tensor[(16, 5, 13), float32]) {
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 3, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
  %49 = log(%48) /* ty=Tensor[(7, 3, 11), float32] */;
  %50 = cast(%49, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %51 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(7, 3, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 3, 11), float32] */, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %54 = less_equal(%52, %53) /* ty=Tensor[(7, 3, 11), bool] */;
  %55 = cast(%54, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %56 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%49, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %60 = reshape(%59, newshape=[1, 360]) /* ty=Tensor[(1, 360), float32] */;
  %61 = @func_8814(%60) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) */;
  %62 = cast(%54, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
  %63 = tan(%62) /* ty=Tensor[(7, 3, 11), float32] */;
  %64 = cast(%var_10623, dtype="uint64") /* ty=Tensor[(7, 3, 11), uint64] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="uint64") /* ty=Tensor[(7, 3, 11), uint64] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %68 = equal(%57, %58) /* ty=Tensor[(7, 3, 11), bool] */;
  %69 = %61.1;
  %70 = @func_10240() /* ty=Tensor[(5, 4), float64] */;
  %71 = multiply(%66, %67) /* ty=Tensor[(7, 3, 11), uint64] */;
  %72 = @func_9476() /* ty=Tensor[(16, 5, 13), float32] */;
  (%68, %69, meta[relay.Constant][2] /* ty=Tensor[(360), float32] */, %70, %71, %72)
}

def @func_9352() -> (Tensor[(16, 5, 13), float32],) {
  %73 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  (%73,)
}

def @func_6481(%var_6477: Tensor[(48), float32]) -> (Tensor[(8, 11, 8), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32]) {
  %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 8), float64] */;
  %75 = cast(%var_6477, dtype="float32") /* ty=Tensor[(48), float32] */;
  %76 = reshape(%75, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
  %77 = log(%74) /* ty=Tensor[(8, 11, 8), float64] */;
  %78 = @func_5813(%76) /* ty=Tensor[(1, 8, 6), float32] */;
  (%77, %78, %var_6477)
}

def @func_12417() -> (Tensor[(16, 5, 13), float32],) {
  %79 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %80 = %79.0;
  (%80,)
}

def @func_7049(%var_7015: Tensor[(14, 7, 5), float32], %var_7045: Tensor[(1536), float64]) -> (Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) {
  %81 = cast(%var_7015, dtype="float32") /* ty=Tensor[(14, 7, 5), float32] */;
  %82 = sinh(%81) /* ty=Tensor[(14, 7, 5), float32] */;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(14, 7, 5), float32] */;
  %84 = log(%83) /* ty=Tensor[(14, 7, 5), float32] */;
  %85 = cast(%82, dtype="int16") /* ty=Tensor[(14, 7, 5), int16] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="int16") /* ty=Tensor[(14, 7, 5), int16] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
  %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
  %91 = cast(%var_7045, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %92 = reshape(%89, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float32] */;
  %93 = reshape(%90, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %94 = reshape(%91, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %95 = @func_1627(%92, %93, %94) /* ty=(Tensor[(1, 4, 11), float32], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(?, 4, 11), int32], Tensor[(?, 4, 11), float64]) */;
  %96 = bitwise_or(%87, %88) /* ty=Tensor[(14, 7, 5), int16] */;
  %97 = %95.3;
  (%96, %97, meta[relay.Constant][4] /* ty=Tensor[(44), float32] */, meta[relay.Constant][5] /* ty=Tensor[(5, 4), float64] */, %var_7045)
}

def @func_9585(%var_9546: Tensor[(2880), int8], %var_9553: Tensor[(360), float32], %var_9554: Tensor[(1584), uint64], %var_9558: Tensor[(528), bool]) -> (Tensor[(16, 5, 13), float32], Tensor[(15, 12, 16), int8], Tensor[(2880), int8], Tensor[(6, 60), bool], Tensor[(360), float32], Tensor[(440), uint8], Tensor[(528), bool], Tensor[(1536), float64], Tensor[(1584), uint64], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  %98 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %99 = cast(%var_9546, dtype="int8") /* ty=Tensor[(2880), int8] */;
  %100 = cast(%var_9546, dtype="int8") /* ty=Tensor[(2880), int8] */;
  %101 = reshape(%99, newshape=[15, 12, 16]) /* ty=Tensor[(15, 12, 16), int8] */;
  %102 = reshape(%100, newshape=[15, 12, 16]) /* ty=Tensor[(15, 12, 16), int8] */;
  %103 = cast(%var_9553, dtype="float32") /* ty=Tensor[(360), float32] */;
  %104 = cast(%var_9554, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %105 = reshape(%103, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %106 = reshape(%104, newshape=[1584]) /* ty=Tensor[(1584), uint64] */;
  %107 = @func_8482(%105, %106) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(6, 60), bool], Tensor[(1584), uint64], Tensor[(117), float64], Tensor[(1584), uint64], Tensor[(4, 5, 6), float64], Tensor[(80, 1), uint8], Tensor[(6, 20), float64], Tensor[(6, 60), bool], Tensor[(40, 12), float32]) */;
  %108 = cast(%var_9558, dtype="bool") /* ty=Tensor[(528), bool] */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %110 = reshape(%108, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
  %111 = reshape(%109, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %112 = @func_9148(%110, %111) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
  %113 = cast(%var_9554, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %114 = tan(%113) /* ty=Tensor[(1584), float64] */;
  %115 = cast(%var_9554, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(1), int32] */;
  %117 = cast(%114, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(847), float64] */, dtype="float64") /* ty=Tensor[(847), float64] */;
  %120 = reshape(%119, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %121 = @func_3529(%120) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %122 = %98.0;
  %123 = @func_4592(%101, %102) /* ty=Tensor[(15, 12, 16), int8] */;
  %124 = %107.1;
  %125 = %112.1;
  %126 = bitwise_or(%117, %118) /* ty=Tensor[(1584), uint64] */;
  %127 = %121.0;
  (%122, %123, %var_9546, %124, %var_9553, %125, %var_9558, meta[relay.Constant][6] /* ty=Tensor[(1536), float64] */, %126, %127, meta[relay.Constant][7] /* ty=Tensor[(847), float64] */)
}

def @func_10311(%var_10306: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(847), float64]) {
  %128 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %129 = @func_9352() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %130 = cast(%var_10306, dtype="float64") /* ty=Tensor[(847), float64] */;
  %131 = cast(%var_10306, dtype="float64") /* ty=Tensor[(847), float64] */;
  %132 = reshape(%130, newshape=[847]) /* ty=Tensor[(847), float64] */;
  %133 = reshape(%131, newshape=[847]) /* ty=Tensor[(847), float64] */;
  %134 = @func_8974(%132, %133) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float32]) */;
  %135 = %128.0;
  %136 = %129.0;
  %137 = %134.0;
  (%135, %136, %137, %var_10306)
}

def @func_11814() -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64]) {
  %138 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %139 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %140 = %138.0;
  %141 = %139.0;
  (%140, %141)
}

def @func_5244(%var_5188: Tensor[(15, 15, 10), float32], %var_5222: Tensor[(6, 60), float32], %var_5234: Tensor[(715), float32]) -> (Tensor[(15, 15, 10), bool], Tensor[(1536), float64], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(6, 20), float64], Tensor[(715), float32]) {
  %142 = cast(%var_5188, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
  %143 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(15, 15, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 15, 10), float32] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %146 = cast(meta[relay.Constant][9] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %148 = reshape(%146, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %149 = reshape(%147, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %150 = @func_805(%148, %149) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %151 = cast(meta[relay.Constant][9] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %153 = reshape(%151, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %154 = reshape(%152, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %155 = @func_805(%153, %154) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %156 = cast(%var_5222, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %157 = reshape(%156, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %158 = cast(%var_5234, dtype="float32") /* ty=Tensor[(715), float32] */;
  %159 = %155.1;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %162 = reshape(%158, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %163 = reshape(%160, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %164 = reshape(%161, newshape=[6, 20]) /* ty=Tensor[(6, 20), float64] */;
  %165 = @func_909(%162, %163, %164) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) */;
  %166 = greater_equal(%144, %145) /* ty=Tensor[(15, 15, 10), bool] */;
  %167 = %150.2;
  %168 = @func_1074(%157) /* ty=Tensor[(5, 9, 8), float32] */;
  %169 = %165.6;
  (%166, %167, meta[relay.Constant][9] /* ty=Tensor[(120), float64] */, meta[relay.Constant][10] /* ty=Tensor[(1536), float64] */, %159, %168, %var_5222, %169, %var_5234)
}

def @func_4592(%var_4587: Tensor[(15, 12, 16), int8], %var_4588: Tensor[(15, 12, 16), int8]) -> Tensor[(15, 12, 16), int8] {
  %170 = cast(%var_4588, dtype="int8") /* ty=Tensor[(15, 12, 16), int8] */;
  %171 = shape_of(%var_4587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%var_4587, dtype="int8") /* ty=Tensor[(15, 12, 16), int8] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%172, %173) /* ty=Tensor[(15, 12, 16), int8] */
}

def @func_7974(%var_7955: Tensor[(1, 14, 16), float32], %var_7956: Tensor[(1, 14, 16), float32]) -> (Tensor[(?, 14, 16), bool],) {
  %174 = cast(%var_7956, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %175 = shape_of(%var_7955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_7955, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = greater_equal(%176, %177) /* ty=Tensor[(?, 14, 16), bool] */;
  (%178,)
}

def @func_9978() -> (Tensor[(16, 5, 13), float32],) {
  %179 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
  (%179,)
}

def @func_11445() -> Tensor[(16, 5, 13), float32] {
  %180 = @func_9352() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %180.0
}

def @func_4547(%var_4500: Tensor[(11, 3, 16), bool], %var_4507: Tensor[(384, 4), float64]) -> (Tensor[(11, 3, 16), bool], Tensor[(1536), float64], Tensor[(384, 4), float64], Tensor[(11, 10, 4), uint8], Tensor[(440), uint8], Tensor[(1536), float64], Tensor[(715), float32], Tensor[(120, 1), float64]) {
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 3, 16), bool] */, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
  %182 = shape_of(%var_4500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%var_4500, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = cast(meta[relay.Constant][12] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %186 = cast(%var_4507, dtype="float64") /* ty=Tensor[(384, 4), float64] */;
  %187 = reshape(%185, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %188 = reshape(%186, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %189 = @func_805(%187, %188) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %190 = cast(meta[relay.Constant][13] /* ty=Tensor[(440), uint8] */, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %191 = reshape(%190, newshape=[11, 10, 4]) /* ty=Tensor[(11, 10, 4), uint8] */;
  %192 = @func_2480(%191) /* ty=(Tensor[(11, 10, 4), uint8],) */;
  %193 = cast(meta[relay.Constant][14] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
  %194 = %189.2;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %196 = cast(meta[relay.Constant][12] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %197 = reshape(%193, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %198 = reshape(%195, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %199 = reshape(%196, newshape=[6, 20]) /* ty=Tensor[(6, 20), float64] */;
  %200 = @func_909(%197, %198, %199) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) */;
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %202 = logical_or(%183, %184) /* ty=Tensor[(11, 3, 16), bool] */;
  %203 = %192.0;
  %204 = %200.5;
  %205 = acosh(%201) /* ty=Tensor[(120, 1), float64] */;
  (%202, %194, %var_4507, %203, meta[relay.Constant][13] /* ty=Tensor[(440), uint8] */, %204, meta[relay.Constant][14] /* ty=Tensor[(715), float32] */, %205)
}

def @func_12130(%var_12092: Tensor[(120), float64], %var_12093: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(15, 15, 11), bool], Tensor[(2475), uint64], Tensor[(15, 15, 11), bool], Tensor[(16, 12, 8), float32]) {
  %206 = @func_11874() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %207 = cast(meta[relay.Constant][15] /* ty=Tensor[(2475), uint64] */, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
  %208 = reshape(%207, newshape=[2475]) /* ty=Tensor[(2475), uint64] */;
  %209 = @func_11196(%208) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) */;
  %210 = %209.4;
  %211 = cast(%210, dtype="uint64") /* ty=Tensor[(15, 15, 11), uint64] */;
  %212 = reshape(%211, newshape=[2475]) /* ty=Tensor[(2475), uint64] */;
  %213 = @func_11196(%212) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) */;
  %214 = cast(%var_12092, dtype="float64") /* ty=Tensor[(120), float64] */;
  %215 = cast(%var_12093, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %216 = reshape(%214, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %217 = reshape(%215, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %218 = @func_805(%216, %217) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %219 = %218.3;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(16, 12, 8), float32] */;
  %221 = sinh(%220) /* ty=Tensor[(16, 12, 8), float32] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(16, 12, 8), float32] */;
  %223 = %206.0;
  %224 = %213.4;
  %225 = cosh(%222) /* ty=Tensor[(16, 12, 8), float32] */;
  (%223, %var_12092, %var_12093, %210, meta[relay.Constant][15] /* ty=Tensor[(2475), uint64] */, %224, %225)
}

def @func_10911() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_10348() -> Tensor[(16, 5, 13), float32] {
  %226 = @func_10182() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %226.0
}

def @func_11254() -> (Tensor[(16, 5, 13), float32],) {
  %227 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %228 = %227.0;
  (%228,)
}

def @func_10500(%var_10469: Tensor[(847), float64], %var_10473: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float64], Tensor[(16, 5, 13), float32], Tensor[(847), int8], Tensor[(5, 4), float64], Tensor[(16, 5, 13), float32]) {
  %229 = cast(%var_10469, dtype="float64") /* ty=Tensor[(847), float64] */;
  %230 = reshape(%229, newshape=[847]) /* ty=Tensor[(847), float64] */;
  %231 = @func_10311(%230) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(847), float64]) */;
  %232 = cast(%var_10473, dtype="int8") /* ty=Tensor[(847), int8] */;
  %233 = shape_of(%var_10469, dtype="int32") /* ty=Tensor[(1), int32] */;
  %234 = cast(%var_10469, dtype="int8") /* ty=Tensor[(847), int8] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?), int8] */;
  %236 = @func_9601() /* ty=(Tensor[(5, 4), float64],) */;
  %237 = @func_9336() /* ty=Tensor[(16, 5, 13), float64] */;
  %238 = %231.2;
  %239 = bitwise_xor(%234, %235) /* ty=Tensor[(847), int8] */;
  %240 = %236.0;
  %241 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  (%237, %238, %239, %240, %241)
}

def @func_11553() -> Tensor[(16, 5, 13), float32] {
  %242 = @func_9436() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %242.0
}

def @func_6054(%var_6003: Tensor[(10, 14, 8), int16], %var_6004: Tensor[(10, 14, 8), int16], %var_6039: Tensor[(630), float32], %var_6050: Tensor[(847), float64]) -> (Tensor[(10, 14, 8), float32], Tensor[(10, 14, 8), float64], Tensor[(9, 14, 5), float32], Tensor[(630), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  %243 = cast(%var_6004, dtype="int16") /* ty=Tensor[(10, 14, 8), int16] */;
  %244 = shape_of(%var_6003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%var_6003, dtype="int16") /* ty=Tensor[(10, 14, 8), int16] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %247 = logical_xor(%245, %246) /* ty=Tensor[(10, 14, 8), int16] */;
  %248 = cast(%247, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
  %249 = cast(%var_6004, dtype="float64") /* ty=Tensor[(10, 14, 8), float64] */;
  %250 = cast(%var_6039, dtype="float32") /* ty=Tensor[(630), float32] */;
  %251 = reshape(%250, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float32] */;
  %252 = @func_3322(%251) /* ty=(Tensor[(9, 14, 5), float32],) */;
  %253 = cast(%var_6050, dtype="float64") /* ty=Tensor[(847), float64] */;
  %254 = reshape(%253, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %255 = @func_3529(%254) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %256 = cosh(%248) /* ty=Tensor[(10, 14, 8), float32] */;
  %257 = sqrt(%249) /* ty=Tensor[(10, 14, 8), float64] */;
  %258 = %252.0;
  %259 = %255.0;
  (%256, %257, %258, %var_6039, %259, %var_6050)
}

def @func_9436() -> (Tensor[(16, 5, 13), float32],) {
  %260 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %261 = %260.0;
  (%261,)
}

def @func_8338() -> (Tensor[(16, 5, 13), float32],) {
  %262 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %263 = asinh(%262) /* ty=Tensor[(16, 5, 13), float32] */;
  (%263,)
}

def @func_11150() -> Tensor[(16, 5, 13), float32] {
  %264 = @func_9436() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %264.0
}

def @func_7348(%var_7334: Tensor[(9, 8, 3), float32]) -> Tensor[(9, 8, 3), float32] {
  %265 = cast(%var_7334, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
  log10(%265) /* ty=Tensor[(9, 8, 3), float32] */
}

def @func_9990(%var_9982: bool, %var_9983: Tensor[(5, 14, 10), bool]) -> (Tensor[(5, 14, 10), bool],) {
  %266 = cast(%var_9982, dtype="bool") /* ty=bool */;
  %267 = cast(%var_9983, dtype="bool") /* ty=Tensor[(5, 14, 10), bool] */;
  %268 = logical_or(%266, %267) /* ty=Tensor[(5, 14, 10), bool] */;
  (%268,)
}

def @func_9535(%var_9529: Tensor[(16, 5, 13), float64]) -> (Tensor[(16, 5, 13), uint64],) {
  %269 = @func_9336() /* ty=Tensor[(16, 5, 13), float64] */;
  %270 = cast(%var_9529, dtype="uint64") /* ty=Tensor[(16, 5, 13), uint64] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%269, dtype="uint64") /* ty=Tensor[(16, 5, 13), uint64] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %274 = bitwise_xor(%272, %273) /* ty=Tensor[(16, 5, 13), uint64] */;
  (%274,)
}

def @func_5961(%var_5933: Tensor[(3, 16, 11), float64], %var_5943: Tensor[(20), float64], %var_5944: Tensor[(1536), float64]) -> (Tensor[(3, 16, 11), float64], Tensor[(1536), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(4, 5, 6), float64], Tensor[(120), float64]) {
  %275 = cast(%var_5933, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
  %276 = cast(%var_5943, dtype="float64") /* ty=Tensor[(20), float64] */;
  %277 = cast(%var_5944, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %278 = reshape(%276, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
  %279 = reshape(%277, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %280 = @func_328(%278, %279) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
  %281 = cast(%var_5944, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %282 = reshape(%281, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %283 = @func_179(%282) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %284 = cast(meta[relay.Constant][17] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %285 = %283.0;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %287 = reshape(%284, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %288 = reshape(%286, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %289 = @func_805(%287, %288) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %290 = cosh(%275) /* ty=Tensor[(3, 16, 11), float64] */;
  %291 = %280.1;
  %292 = %289.0;
  (%290, %291, %var_5943, %var_5944, %285, %292, meta[relay.Constant][17] /* ty=Tensor[(120), float64] */)
}

def @func_3969(%var_3939: Tensor[(12, 4, 10), int64], %var_3940: Tensor[(12, 4, 10), int64], %var_3957: Tensor[(12, 30), float32], %var_3961: Tensor[(847), float64]) -> (Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) {
  %293 = cast(%var_3940, dtype="int64") /* ty=Tensor[(12, 4, 10), int64] */;
  %294 = shape_of(%var_3939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%var_3939, dtype="int64") /* ty=Tensor[(12, 4, 10), int64] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %297 = logical_xor(%295, %296) /* ty=Tensor[(12, 4, 10), int64] */;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
  %299 = shape_of(%var_3939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%var_3939, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %302 = cast(%var_3957, dtype="float32") /* ty=Tensor[(12, 30), float32] */;
  %303 = reshape(%302, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %304 = cast(%var_3961, dtype="float64") /* ty=Tensor[(847), float64] */;
  %305 = reshape(%304, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %306 = @func_3529(%305) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %307 = %306.0;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(7, 11, 11), float32] */;
  %309 = equal(%300, %301) /* ty=Tensor[(12, 4, 10), bool] */;
  %310 = @func_1074(%303) /* ty=Tensor[(5, 9, 8), float32] */;
  %311 = log10(%308) /* ty=Tensor[(7, 11, 11), float32] */;
  (%309, %310, %var_3957, %var_3961, %311)
}

def @func_1627(%var_1557: Tensor[(1, 4, 11), float32], %var_1614: Tensor[(20), float64], %var_1615: Tensor[(1536), float64]) -> (Tensor[(1, 4, 11), float32], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(?, 4, 11), int32], Tensor[(?, 4, 11), float64]) {
  %312 = cast(%var_1557, dtype="float32") /* ty=Tensor[(1, 4, 11), float32] */;
  %313 = cast(%var_1614, dtype="float64") /* ty=Tensor[(20), float64] */;
  %314 = cast(%var_1615, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %315 = reshape(%313, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
  %316 = reshape(%314, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %317 = @func_328(%315, %316) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
  %318 = cast(%var_1557, dtype="float32") /* ty=Tensor[(1, 4, 11), float32] */;
  %319 = sqrt(%318) /* ty=Tensor[(1, 4, 11), float32] */;
  %320 = cast(%var_1557, dtype="uint8") /* ty=Tensor[(1, 4, 11), uint8] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="uint8") /* ty=Tensor[(1, 4, 11), uint8] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %324 = right_shift(%322, %323) /* ty=Tensor[(?, 4, 11), uint8] */;
  %325 = cast(%324, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
  %326 = sigmoid(%325) /* ty=Tensor[(?, 4, 11), float64] */;
  %327 = cast(%319, dtype="int32") /* ty=Tensor[(1, 4, 11), int32] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="int32") /* ty=Tensor[(?, 4, 11), int32] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %331 = cast(%326, dtype="float32") /* ty=Tensor[(?, 4, 11), float32] */;
  %332 = atanh(%331) /* ty=Tensor[(?, 4, 11), float32] */;
  %333 = cast(%326, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
  %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%332, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %337 = divide(%335, %336) /* ty=Tensor[(?, 4, 11), float64] */;
  %338 = cast(%337, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
  %339 = cosh(%312) /* ty=Tensor[(1, 4, 11), float32] */;
  %340 = %317.2;
  %341 = left_shift(%329, %330) /* ty=Tensor[(?, 4, 11), int32] */;
  %342 = erf(%338) /* ty=Tensor[(?, 4, 11), float64] */;
  (%339, %340, %var_1614, %var_1615, %341, %342)
}

def @func_9814(%var_9778: Tensor[(2, 13, 15), float32], %var_9782: Tensor[(528), float64], %var_9783: Tensor[(20), float64], %var_9784: Tensor[(1536), float64], %var_9787: Tensor[(480), int64], %var_9788: Tensor[(360), float32], %var_9789: Tensor[(847), float64], %var_9803: Tensor[(24, 120), float32], %var_9804: bool) -> (Tensor[(2, 13, 15), float32], Tensor[(20), float64], Tensor[(528), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(847), float64], Tensor[(480), int64], Tensor[(360), float32], Tensor[(847), float64], Tensor[(360), float32], Tensor[(24, 120), float32], bool, Tensor[(715), float32], Tensor[(1536), float64]) {
  %343 = cast(%var_9778, dtype="float32") /* ty=Tensor[(2, 13, 15), float32] */;
  %344 = cast(%var_9782, dtype="float64") /* ty=Tensor[(528), float64] */;
  %345 = cast(%var_9783, dtype="float64") /* ty=Tensor[(20), float64] */;
  %346 = cast(%var_9784, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %347 = reshape(%344, newshape=[3, 16, 11]) /* ty=Tensor[(3, 16, 11), float64] */;
  %348 = reshape(%345, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %349 = reshape(%346, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %350 = @func_5961(%347, %348, %349) /* ty=(Tensor[(3, 16, 11), float64], Tensor[(1536), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(4, 5, 6), float64], Tensor[(120), float64]) */;
  %351 = cast(%var_9787, dtype="int64") /* ty=Tensor[(480), int64] */;
  %352 = cast(%var_9787, dtype="int64") /* ty=Tensor[(480), int64] */;
  %353 = cast(%var_9788, dtype="float32") /* ty=Tensor[(360), float32] */;
  %354 = cast(%var_9789, dtype="float64") /* ty=Tensor[(847), float64] */;
  %355 = reshape(%351, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
  %356 = reshape(%352, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
  %357 = reshape(%353, newshape=[12, 30]) /* ty=Tensor[(12, 30), float32] */;
  %358 = reshape(%354, newshape=[847]) /* ty=Tensor[(847), float64] */;
  %359 = @func_3969(%355, %356, %357, %358) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) */;
  %360 = cast(%var_9803, dtype="float32") /* ty=Tensor[(24, 120), float32] */;
  %361 = cast(%var_9804, dtype="bool") /* ty=bool */;
  %362 = cast(meta[relay.Constant][18] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
  %363 = reshape(%360, newshape=[8, 360]) /* ty=Tensor[(8, 360), float32] */;
  %364 = reshape(%361, newshape=[]) /* ty=bool */;
  %365 = reshape(%362, newshape=[1, 715]) /* ty=Tensor[(1, 715), float32] */;
  %366 = @func_8874(%363, %364, %365) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(360), float32], Tensor[(8, 360), uint8], Tensor[(14, 12, 6), float32], Tensor[(1008), float32], Tensor[(15, 15, 10), bool], bool, Tensor[(715), float32], Tensor[(1, 715), float32]) */;
  %367 = cast(%var_9782, dtype="bool") /* ty=Tensor[(528), bool] */;
  %368 = cast(%var_9784, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %369 = reshape(%367, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
  %370 = reshape(%368, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %371 = @func_9148(%369, %370) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
  %372 = acosh(%343) /* ty=Tensor[(2, 13, 15), float32] */;
  %373 = %350.2;
  %374 = %359.3;
  %375 = %366.1;
  %376 = %371.3;
  (%372, %373, %var_9782, %var_9783, %var_9784, %374, %var_9787, %var_9788, %var_9789, %375, %var_9803, %var_9804, meta[relay.Constant][18] /* ty=Tensor[(715), float32] */, %376)
}

def @func_10212() -> Tensor[(5, 4), float64] {
  %377 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %377.0
}

def @func_9973() -> (Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) {
  %378 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %379 = cast(meta[relay.Constant][19] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %380 = reshape(%379, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %381 = @func_6481(%380) /* ty=(Tensor[(8, 11, 8), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32]) */;
  %382 = %378.0;
  %383 = %381.2;
  (%382, %383, meta[relay.Constant][19] /* ty=Tensor[(48, 1), float32] */)
}

def @func_10395(%var_10389: Tensor[(11, 6, 4), int8], %var_10390: Tensor[(11, 6, 4), int8]) -> Tensor[(11, 6, 4), bool] {
  %384 = cast(%var_10390, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
  %385 = shape_of(%var_10389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%var_10389, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%386, %387) /* ty=Tensor[(11, 6, 4), bool] */
}

def @func_10144(%var_10135: Tensor[(20), float64], %var_10136: Tensor[(1536), float64]) -> (Tensor[(9, 7, 2), float64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64]) {
  %388 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 7, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
  %389 = cast(%var_10135, dtype="float64") /* ty=Tensor[(20), float64] */;
  %390 = cast(%var_10136, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %391 = reshape(%389, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
  %392 = reshape(%390, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %393 = @func_328(%391, %392) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
  %394 = sqrt(%388) /* ty=Tensor[(9, 7, 2), float64] */;
  %395 = %393.3;
  (%394, %395, %var_10135, %var_10136)
}

def @func_9107(%var_9083: uint64, %var_9084: Tensor[(1, 1584), uint64], %var_9090: Tensor[(16, 1584), uint64], %var_9100: Tensor[(2475, 1), uint64]) -> (Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(16, 1584), uint64], Tensor[(15, 15, 11), uint64], Tensor[(2475, 1), uint64]) {
  %396 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %397 = cast(%var_9083, dtype="uint64") /* ty=uint64 */;
  %398 = cast(%var_9084, dtype="uint64") /* ty=Tensor[(1, 1584), uint64] */;
  %399 = reshape(%397, newshape=[]) /* ty=uint64 */;
  %400 = reshape(%398, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
  %401 = cast(%var_9084, dtype="uint64") /* ty=Tensor[(1, 1584), uint64] */;
  %402 = cast(%var_9090, dtype="uint64") /* ty=Tensor[(16, 1584), uint64] */;
  %403 = cast(%var_9100, dtype="uint64") /* ty=Tensor[(2475, 1), uint64] */;
  %404 = cast(%var_9100, dtype="uint64") /* ty=Tensor[(2475, 1), uint64] */;
  %405 = reshape(%403, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %406 = reshape(%404, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %407 = @func_8694(%405, %406) /* ty=(Tensor[(15, 15, 11), uint64],) */;
  %408 = %396.0;
  %409 = @func_4724(%399, %400) /* ty=Tensor[(11, 12, 12), bool] */;
  %410 = logical_xor(%401, %402) /* ty=Tensor[(16, 1584), uint64] */;
  %411 = %407.0;
  (%408, %409, %var_9083, %410, %411, %var_9100)
}

def @func_3529(%var_3525: Tensor[(7, 11, 11), float64]) -> (Tensor[(7, 11, 11), float64],) {
  %412 = cast(%var_3525, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
  %413 = sigmoid(%412) /* ty=Tensor[(7, 11, 11), float64] */;
  (%413,)
}

def @func_9194() -> Tensor[(1536), float64] {
  %414 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
  %414.3
}

def @func_10263() -> (Tensor[(1536), float64],) {
  %415 = @func_9194() /* ty=Tensor[(1536), float64] */;
  (%415,)
}

def @func_9004() -> (Tensor[(16, 5, 13), float32],) {
  %416 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %417 = %416.0;
  (%417,)
}

def @func_3213(%var_3206: Tensor[(60, 2), float64], %var_3207: Tensor[(128, 12), float64]) -> (Tensor[(7, 1, 13), float32], Tensor[(4, 5, 6), float64], Tensor[(60, 2), float64], Tensor[(128, 12), float64]) {
  %418 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
  %419 = atan(%418) /* ty=Tensor[(7, 1, 13), float64] */;
  %420 = cast(%419, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
  %421 = sqrt(%420) /* ty=Tensor[(7, 1, 13), float32] */;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
  %423 = cast(%var_3206, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %424 = cast(%var_3207, dtype="float64") /* ty=Tensor[(128, 12), float64] */;
  %425 = reshape(%423, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %426 = reshape(%424, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %427 = @func_805(%425, %426) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %428 = asin(%422) /* ty=Tensor[(7, 1, 13), float32] */;
  %429 = %427.0;
  (%428, %429, %var_3206, %var_3207)
}

def @func_8546(%var_8524: Tensor[(9, 12, 13), bool], %var_8525: Tensor[(9, 12, 13), bool]) -> (Tensor[(9, 12, 13), bool], Tensor[(9, 12, 13), float32]) {
  %430 = cast(%var_8525, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
  %431 = shape_of(%var_8524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%var_8524, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = cast(%var_8524, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %435 = logical_or(%432, %433) /* ty=Tensor[(9, 12, 13), bool] */;
  %436 = erf(%434) /* ty=Tensor[(9, 12, 13), float32] */;
  (%435, %436)
}

def @func_9336() -> Tensor[(16, 5, 13), float64] {
  %437 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
  atanh(%438) /* ty=Tensor[(16, 5, 13), float64] */
}

def @func_328(%var_311: Tensor[(1, 4, 5), float64], %var_315: Tensor[(1536), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) {
  %439 = cast(%var_315, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %440 = reshape(%439, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %441 = @func_179(%440) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %442 = cast(%var_311, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %443 = erf(%442) /* ty=Tensor[(1, 4, 5), float64] */;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %445 = cast(%var_311, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %446 = %441.0;
  %447 = tan(%444) /* ty=Tensor[(1, 4, 5), float64] */;
  %448 = exp(%445) /* ty=Tensor[(1, 4, 5), float64] */;
  (%446, %var_315, %447, %448)
}

def @func_5813(%var_5810: Tensor[(1, 8, 6), float32]) -> Tensor[(1, 8, 6), float32] {
  %449 = cast(%var_5810, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
  cosh(%449) /* ty=Tensor[(1, 8, 6), float32] */
}

def @func_8033(%var_7999: Tensor[(13, 9, 1), float64], %var_8025: Tensor[(1584), uint64]) -> (Tensor[(13, 9, 1), float64], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(11, 12, 12), bool], uint64, Tensor[(1584), uint64]) {
  %450 = cast(%var_7999, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %451 = cast(meta[relay.Constant][22] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %452 = reshape(%451, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %453 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %454 = cast(%var_8025, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %455 = reshape(%453, newshape=[]) /* ty=uint64 */;
  %456 = reshape(%454, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
  %457 = sigmoid(%450) /* ty=Tensor[(13, 9, 1), float64] */;
  %458 = @func_1074(%452) /* ty=Tensor[(5, 9, 8), float32] */;
  %459 = @func_4724(%455, %456) /* ty=Tensor[(11, 12, 12), bool] */;
  (%457, %458, meta[relay.Constant][22] /* ty=Tensor[(360), float32] */, %459, meta[relay.Constant][23] /* ty=uint64 */, %var_8025)
}

def @func_1074(%var_1060: Tensor[(5, 9, 8), float32]) -> Tensor[(5, 9, 8), float32] {
  %460 = cast(%var_1060, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
  asinh(%460) /* ty=Tensor[(5, 9, 8), float32] */
}

def @func_4724(%var_4719: uint64, %var_4720: Tensor[(11, 12, 12), uint64]) -> Tensor[(11, 12, 12), bool] {
  %461 = cast(%var_4719, dtype="bool") /* ty=bool */;
  %462 = cast(%var_4720, dtype="bool") /* ty=Tensor[(11, 12, 12), bool] */;
  not_equal(%461, %462) /* ty=Tensor[(11, 12, 12), bool] */
}

def @func_8608() -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) {
  %463 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 490), float32] */, dtype="float32") /* ty=Tensor[(1, 490), float32] */;
  %464 = cast(meta[relay.Constant][25] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %465 = reshape(%463, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float32] */;
  %466 = reshape(%464, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %467 = @func_7049(%465, %466) /* ty=(Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) */;
  %468 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  %469 = %467.3;
  (%468, %469, meta[relay.Constant][24] /* ty=Tensor[(1, 490), float32] */, meta[relay.Constant][25] /* ty=Tensor[(1536), float64] */)
}

def @func_2480(%var_2474: Tensor[(11, 10, 4), uint8]) -> (Tensor[(11, 10, 4), uint8],) {
  %470 = cast(meta[relay.Constant][26] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %471 = cast(%var_2474, dtype="uint8") /* ty=Tensor[(11, 10, 4), uint8] */;
  %472 = bitwise_or(%470, %471) /* ty=Tensor[(11, 10, 4), uint8] */;
  (%472,)
}

def @func_11753() -> Tensor[(12, 132), uint64] {
  %473 = @func_11293() /* ty=(Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) */;
  %473.0
}

def @func_9510() -> (Tensor[(1, 490), float32],) {
  %474 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
  %475 = %474.2;
  (%475,)
}

def @func_10696(%var_10690: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 5, 13), float32]) {
  %476 = @func_9742() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %477 = cast(%var_10690, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %478 = reshape(%477, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %479 = @func_179(%478) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %480 = %476.0;
  %481 = @func_10240() /* ty=Tensor[(5, 4), float64] */;
  %482 = %479.0;
  %483 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
  (%480, %481, %482, %var_10690, %483)
}

def @func_1139(%var_1100: Tensor[(13, 7, 3), uint64], %var_1122: Tensor[(20), float64]) -> (Tensor[(13, 7, 3), uint64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(8, 192), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(120), float64]) {
  %484 = cast(meta[relay.Constant][27] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %485 = cast(%var_1100, dtype="uint64") /* ty=Tensor[(13, 7, 3), uint64] */;
  %486 = cast(%var_1122, dtype="float64") /* ty=Tensor[(20), float64] */;
  %487 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 192), float64] */, dtype="float64") /* ty=Tensor[(8, 192), float64] */;
  %488 = reshape(%486, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
  %489 = reshape(%487, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %490 = @func_328(%488, %489) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
  %491 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 192), float64] */, dtype="float64") /* ty=Tensor[(8, 192), float64] */;
  %492 = reshape(%491, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %493 = @func_179(%492) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %494 = cast(meta[relay.Constant][29] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %495 = %493.0;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %497 = reshape(%494, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %498 = reshape(%496, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %499 = @func_805(%497, %498) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %500 = bitwise_xor(%484, %485) /* ty=Tensor[(13, 7, 3), uint64] */;
  %501 = %490.2;
  %502 = %499.2;
  (%500, %501, %var_1122, meta[relay.Constant][28] /* ty=Tensor[(8, 192), float64] */, %495, %502, meta[relay.Constant][29] /* ty=Tensor[(120), float64] */)
}

def @func_8643() -> Tensor[(16, 5, 13), float32] {
  @func_8515() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_10958() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_8694(%var_8665: Tensor[(15, 15, 11), uint64], %var_8666: Tensor[(15, 15, 11), uint64]) -> (Tensor[(15, 15, 11), uint64],) {
  %503 = cast(%var_8666, dtype="uint64") /* ty=Tensor[(15, 15, 11), uint64] */;
  %504 = shape_of(%var_8665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_8665, dtype="uint64") /* ty=Tensor[(15, 15, 11), uint64] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %507 = left_shift(%505, %506) /* ty=Tensor[(15, 15, 11), uint64] */;
  (%507,)
}

def @func_9601() -> (Tensor[(5, 4), float64],) {
  %508 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
  %509 = %508.1;
  (%509,)
}

def @func_11624(%var_11613: Tensor[(224), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(528, 1), bool], Tensor[(1536), float64], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) {
  %510 = cast(meta[relay.Constant][30] /* ty=Tensor[(528, 1), bool] */, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %511 = cast(meta[relay.Constant][31] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %512 = reshape(%510, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
  %513 = reshape(%511, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %514 = @func_9148(%512, %513) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
  %515 = cast(%var_11613, dtype="float32") /* ty=Tensor[(224), float32] */;
  %516 = cast(%var_11613, dtype="float32") /* ty=Tensor[(224), float32] */;
  %517 = reshape(%515, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
  %518 = reshape(%516, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
  %519 = @func_7974(%517, %518) /* ty=(Tensor[(?, 14, 16), bool],) */;
  %520 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
  %521 = %514.1;
  %522 = %519.0;
  (%520, %521, meta[relay.Constant][30] /* ty=Tensor[(528, 1), bool] */, meta[relay.Constant][31] /* ty=Tensor[(1536), float64] */, %522, %var_11613)
}

def @func_12052(%var_12010: Tensor[(63), float64], %var_12014: Tensor[(7, 15, 9), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(63), float64], Tensor[(7, 15, 9), int32], Tensor[(16, 5, 13), float32]) {
  %523 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %524 = cast(%var_12010, dtype="float64") /* ty=Tensor[(63), float64] */;
  %525 = reshape(%524, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), float64] */;
  %526 = @func_6568(%525) /* ty=Tensor[(7, 15, 9), float64] */;
  %527 = cast(%var_12014, dtype="int32") /* ty=Tensor[(7, 15, 9), int32] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="int32") /* ty=Tensor[(7, 15, 9), int32] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %531 = @func_9468() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) */;
  %532 = @func_11445() /* ty=Tensor[(16, 5, 13), float32] */;
  %533 = %523.0;
  %534 = @func_10911() /* ty=Tensor[(16, 5, 13), float32] */;
  %535 = @func_9244() /* ty=Tensor[(16, 5, 13), float32] */;
  %536 = bitwise_or(%529, %530) /* ty=Tensor[(7, 15, 9), int32] */;
  %537 = %531.0;
  (%532, %533, %534, %535, %var_12010, %536, %537)
}

def @func_9169() -> Tensor[(16, 5, 13), float32] {
  %538 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %538.0
}

def @func_3322(%var_3316: Tensor[(9, 14, 5), float32]) -> (Tensor[(9, 14, 5), float32],) {
  %539 = cast(%var_3316, dtype="float32") /* ty=Tensor[(9, 14, 5), float32] */;
  %540 = cosh(%539) /* ty=Tensor[(9, 14, 5), float32] */;
  (%540,)
}

def @func_10021() -> Tensor[(48, 1), float32] {
  %541 = @func_9973() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) */;
  %541.2
}

def @func_12590(%var_12548: Tensor[(2, 768), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(264, 2), bool], Tensor[(2, 768), float64], Tensor[(1536), float64], Tensor[(48, ?), int32]) {
  %542 = @func_11254() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %543 = @func_10736() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %544 = cast(meta[relay.Constant][32] /* ty=Tensor[(264, 2), bool] */, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %545 = cast(%var_12548, dtype="float64") /* ty=Tensor[(2, 768), float64] */;
  %546 = reshape(%544, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
  %547 = reshape(%545, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %548 = @func_9148(%546, %547) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
  %549 = @func_10021() /* ty=Tensor[(48, 1), float32] */;
  %550 = cast(%549, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %551 = rsqrt(%550) /* ty=Tensor[(48, 1), float64] */;
  %552 = cast(%549, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(2), int32] */;
  %554 = cast(%551, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %556 = add(%554, %555) /* ty=Tensor[(48, ?), int64] */;
  %557 = cast(%556, dtype="float32") /* ty=Tensor[(48, ?), float32] */;
  %558 = acos(%557) /* ty=Tensor[(48, ?), float32] */;
  %559 = cast(%551, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(2), int32] */;
  %561 = cast(%558, dtype="int32") /* ty=Tensor[(48, ?), int32] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %563 = %542.0;
  %564 = %543.0;
  %565 = %548.3;
  %566 = @func_9194() /* ty=Tensor[(1536), float64] */;
  %567 = subtract(%561, %562) /* ty=Tensor[(48, ?), int32] */;
  (%563, %564, %565, meta[relay.Constant][32] /* ty=Tensor[(264, 2), bool] */, %var_12548, %566, %567)
}

def @main(%var_12686: int64, %var_12702: Tensor[(4, 2, 12), int64]) -> (Tensor[(4, 2, 12), int64], Tensor[(11, 12, 12), bool], Tensor[(1584), uint64], Tensor[(4, 2, 12), float32]) {
  %568 = cast(%var_12686, dtype="int64") /* ty=int64 */;
  %569 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 2, 12), int64] */, dtype="int64") /* ty=Tensor[(4, 2, 12), int64] */;
  %570 = cast(%var_12686, dtype="uint64") /* ty=uint64 */;
  %571 = cast(meta[relay.Constant][34] /* ty=Tensor[(1584), uint64] */, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %572 = reshape(%570, newshape=[]) /* ty=uint64 */;
  %573 = reshape(%571, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
  %574 = cast(%var_12702, dtype="float32") /* ty=Tensor[(4, 2, 12), float32] */;
  %575 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(4, 2, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 2, 12), int64] */, dtype="float32") /* ty=Tensor[(4, 2, 12), float32] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %578 = left_shift(%568, %569) /* ty=Tensor[(4, 2, 12), int64] */;
  %579 = @func_4724(%572, %573) /* ty=Tensor[(11, 12, 12), bool] */;
  %580 = power(%576, %577) /* ty=Tensor[(4, 2, 12), float32] */;
  (%578, %579, meta[relay.Constant][34] /* ty=Tensor[(1584), uint64] */, %580)
}

def @func_10736() -> (Tensor[(16, 5, 13), float32],) {
  %581 = @func_10217() /* ty=Tensor[(16, 5, 13), float32] */;
  (%581,)
}

def @func_7237(%var_7195: Tensor[(16, 16, 8), int32], %var_7206: Tensor[(16, 16, 8), int32], %var_7213: Tensor[(63), float64], %var_7220: Tensor[(490), float32], %var_7221: Tensor[(1536), float64]) -> (Tensor[(16, 16, 8), bool], Tensor[(7, 15, 9), float64], Tensor[(63), float64], Tensor[(44), float32], Tensor[(490), float32], Tensor[(1536), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(120), float64], Tensor[(273), uint64], Tensor[(20), float64]) {
  %582 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 16, 8), int32] */, dtype="int32") /* ty=Tensor[(16, 16, 8), int32] */;
  %583 = shape_of(%var_7195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_7195, dtype="int32") /* ty=Tensor[(16, 16, 8), int32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %586 = right_shift(%584, %585) /* ty=Tensor[(16, 16, 8), int32] */;
  %587 = cast(%var_7206, dtype="bool") /* ty=Tensor[(16, 16, 8), bool] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="bool") /* ty=Tensor[(16, 16, 8), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %591 = cast(%var_7213, dtype="float64") /* ty=Tensor[(63), float64] */;
  %592 = reshape(%591, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), float64] */;
  %593 = cast(%var_7220, dtype="float32") /* ty=Tensor[(490), float32] */;
  %594 = cast(%var_7221, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %595 = reshape(%593, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float32] */;
  %596 = reshape(%594, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %597 = @func_7049(%595, %596) /* ty=(Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) */;
  %598 = cast(meta[relay.Constant][36] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %599 = reshape(%598, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
  %600 = cast(meta[relay.Constant][37] /* ty=Tensor[(273), uint64] */, dtype="uint64") /* ty=Tensor[(273), uint64] */;
  %601 = cast(meta[relay.Constant][38] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %602 = reshape(%600, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), uint64] */;
  %603 = reshape(%601, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %604 = @func_1139(%602, %603) /* ty=(Tensor[(13, 7, 3), uint64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(8, 192), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(120), float64]) */;
  %605 = equal(%589, %590) /* ty=Tensor[(16, 16, 8), bool] */;
  %606 = @func_6568(%592) /* ty=Tensor[(7, 15, 9), float64] */;
  %607 = %597.2;
  %608 = @func_5813(%599) /* ty=Tensor[(1, 8, 6), float32] */;
  %609 = %604.6;
  (%605, %606, %var_7213, %607, %var_7220, %var_7221, %608, meta[relay.Constant][36] /* ty=Tensor[(48), float32] */, %609, meta[relay.Constant][37] /* ty=Tensor[(273), uint64] */, meta[relay.Constant][38] /* ty=Tensor[(20), float64] */)
}

def @func_9054() -> (Tensor[(5, 4), float64],) {
  %610 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
  %611 = %610.1;
  (%611,)
}

def @func_11293() -> (Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) {
  %612 = @func_10102() /* ty=(Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(12, 132), uint64]) */;
  %613 = @func_9510() /* ty=(Tensor[(1, 490), float32],) */;
  %614 = %612.3;
  %615 = %613.0;
  (%614, %615)
}

def @func_11665() -> Tensor[(16, 5, 13), float32] {
  %616 = @func_9978() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %617 = %616.0;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  acosh(%618) /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11967(%var_11955: Tensor[(1, 5, 3), float32]) -> Tensor[(?, 5, 3), bool] {
  %619 = cast(%var_11955, dtype="float32") /* ty=Tensor[(1, 5, 3), float32] */;
  %620 = tan(%619) /* ty=Tensor[(1, 5, 3), float32] */;
  %621 = cast(%var_11955, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%623, %624) /* ty=Tensor[(?, 5, 3), bool] */
}

def @func_12333() -> (Tensor[(16, 5, 13), float32],) {
  %625 = @func_11553() /* ty=Tensor[(16, 5, 13), float32] */;
  (%625,)
}

def @func_3279(%var_3252: Tensor[(16, 1, 5), uint8], %var_3253: Tensor[(16, 6, 5), uint8], %var_3269: Tensor[(3, 40), float64]) -> (Tensor[(16, 6, 5), uint8], Tensor[(4, 5, 6), float64], Tensor[(3, 40), float64], Tensor[(1536), float64]) {
  %626 = cast(%var_3252, dtype="uint8") /* ty=Tensor[(16, 1, 5), uint8] */;
  %627 = cast(%var_3253, dtype="uint8") /* ty=Tensor[(16, 6, 5), uint8] */;
  %628 = cast(%var_3269, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %629 = cast(meta[relay.Constant][39] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %630 = reshape(%628, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %631 = reshape(%629, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %632 = @func_805(%630, %631) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %633 = logical_xor(%626, %627) /* ty=Tensor[(16, 6, 5), uint8] */;
  %634 = %632.0;
  (%633, %634, %var_3269, meta[relay.Constant][39] /* ty=Tensor[(1536), float64] */)
}

def @func_11196(%var_11181: Tensor[(2475), uint64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) {
  %635 = cast(meta[relay.Constant][40] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %636 = reshape(%635, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %637 = @func_10696(%636) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 5, 13), float32]) */;
  %638 = cast(meta[relay.Constant][41] /* ty=Tensor[(2475), uint64] */, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
  %639 = cast(meta[relay.Constant][41] /* ty=Tensor[(2475), uint64] */, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
  %640 = reshape(%638, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %641 = reshape(%639, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %642 = @func_8694(%640, %641) /* ty=(Tensor[(15, 15, 11), uint64],) */;
  %643 = %642.0;
  %644 = cast(%643, dtype="float64") /* ty=Tensor[(15, 15, 11), float64] */;
  %645 = asinh(%644) /* ty=Tensor[(15, 15, 11), float64] */;
  %646 = cast(%var_11181, dtype="uint32") /* ty=Tensor[(2475), uint32] */;
  %647 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(2475), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %648 = cast(meta[relay.Constant][41] /* ty=Tensor[(2475), uint64] */, dtype="uint32") /* ty=Tensor[(2475), uint32] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %650 = logical_xor(%648, %649) /* ty=Tensor[(2475), uint32] */;
  %651 = cast(%650, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %652 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%645, dtype="bool") /* ty=Tensor[(15, 15, 11), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %655 = @func_11150() /* ty=Tensor[(16, 5, 13), float32] */;
  %656 = %637.4;
  %657 = @func_10911() /* ty=Tensor[(16, 5, 13), float32] */;
  %658 = less(%653, %654) /* ty=Tensor[(15, 15, 11), bool] */;
  %659 = @func_10212() /* ty=Tensor[(5, 4), float64] */;
  (%655, %656, meta[relay.Constant][40] /* ty=Tensor[(1536), float64] */, %657, %658, %659)
}

def @func_805(%var_771: Tensor[(4, 5, 6), float64], %var_790: Tensor[(1536), float64]) -> (Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) {
  %660 = cast(%var_771, dtype="float64") /* ty=Tensor[(4, 5, 6), float64] */;
  %661 = acos(%660) /* ty=Tensor[(4, 5, 6), float64] */;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(4, 5, 6), float64] */;
  %663 = cast(%var_790, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %664 = reshape(%663, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %665 = @func_179(%664) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %668 = reshape(%667, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %669 = @func_179(%668) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %670 = atanh(%662) /* ty=Tensor[(4, 5, 6), float64] */;
  %671 = %669.0;
  (%670, %666, %var_790, %671)
}

def @func_10052(%var_10029: Tensor[(8, 6, 1), float32], %var_10033: uint64, %var_10035: Tensor[(25344, 1), uint64], %var_10036: Tensor[(2475), uint64]) -> (Tensor[(8, 6, 1), float32], Tensor[(5, 4), float64], uint64, Tensor[(132, 12), uint64], Tensor[(25344, 1), uint64], Tensor[(2475), uint64], Tensor[(9, 14, 5), float32], Tensor[(10, 63), float32]) {
  %672 = cast(%var_10029, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
  %673 = cast(%var_10033, dtype="uint64") /* ty=uint64 */;
  %674 = cast(meta[relay.Constant][42] /* ty=Tensor[(132, 12), uint64] */, dtype="uint64") /* ty=Tensor[(132, 12), uint64] */;
  %675 = cast(%var_10035, dtype="uint64") /* ty=Tensor[(25344, 1), uint64] */;
  %676 = cast(%var_10036, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
  %677 = reshape(%673, newshape=[]) /* ty=uint64 */;
  %678 = reshape(%674, newshape=[1, 1584]) /* ty=Tensor[(1, 1584), uint64] */;
  %679 = reshape(%675, newshape=[16, 1584]) /* ty=Tensor[(16, 1584), uint64] */;
  %680 = reshape(%676, newshape=[2475, 1]) /* ty=Tensor[(2475, 1), uint64] */;
  %681 = @func_9107(%677, %678, %679, %680) /* ty=(Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(16, 1584), uint64], Tensor[(15, 15, 11), uint64], Tensor[(2475, 1), uint64]) */;
  %682 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 63), float32] */, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
  %683 = reshape(%682, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float32] */;
  %684 = @func_3322(%683) /* ty=(Tensor[(9, 14, 5), float32],) */;
  %685 = cosh(%672) /* ty=Tensor[(8, 6, 1), float32] */;
  %686 = %681.0;
  %687 = %684.0;
  (%685, %686, %var_10033, meta[relay.Constant][42] /* ty=Tensor[(132, 12), uint64] */, %var_10035, %var_10036, %687, meta[relay.Constant][43] /* ty=Tensor[(10, 63), float32] */)
}

def @func_12677() -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
  %688 = @func_11874() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %689 = @func_11814() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64]) */;
  %690 = %688.0;
  %691 = %689.0;
  %692 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  (%690, %691, %692)
}

def @func_11708(%var_11681: Tensor[(12, 132), uint64], %var_11696: Tensor[(120, 4), int64], %var_11697: Tensor[(2, 180), float32], %var_11698: Tensor[(77, 11), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(12, 132), int8], Tensor[(12, 132), float64], Tensor[(16, 5, 13), float32], Tensor[(12, 30), float32], Tensor[(120, 4), int64], Tensor[(2, 180), float32], Tensor[(77, 11), float64]) {
  %693 = @func_11293() /* ty=(Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) */;
  %694 = %693.0;
  %695 = cast(%var_11681, dtype="int8") /* ty=Tensor[(12, 132), int8] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(2), int32] */;
  %697 = cast(%694, dtype="int8") /* ty=Tensor[(12, 132), int8] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %699 = cast(%var_11681, dtype="float64") /* ty=Tensor[(12, 132), float64] */;
  %700 = shape_of(%694, dtype="int32") /* ty=Tensor[(2), int32] */;
  %701 = cast(%694, dtype="float64") /* ty=Tensor[(12, 132), float64] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %703 = cast(%var_11696, dtype="int64") /* ty=Tensor[(120, 4), int64] */;
  %704 = cast(%var_11696, dtype="int64") /* ty=Tensor[(120, 4), int64] */;
  %705 = cast(%var_11697, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %706 = cast(%var_11698, dtype="float64") /* ty=Tensor[(77, 11), float64] */;
  %707 = reshape(%703, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
  %708 = reshape(%704, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
  %709 = reshape(%705, newshape=[12, 30]) /* ty=Tensor[(12, 30), float32] */;
  %710 = reshape(%706, newshape=[847]) /* ty=Tensor[(847), float64] */;
  %711 = @func_3969(%707, %708, %709, %710) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) */;
  %712 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
  %713 = bitwise_or(%697, %698) /* ty=Tensor[(12, 132), int8] */;
  %714 = divide(%701, %702) /* ty=Tensor[(12, 132), float64] */;
  %715 = @func_11150() /* ty=Tensor[(16, 5, 13), float32] */;
  %716 = %711.2;
  (%712, %713, %714, %715, %716, %var_11696, %var_11697, %var_11698)
}

def @func_8515() -> Tensor[(16, 5, 13), float32] {
  %717 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %717.0
}

def @func_12304() -> (Tensor[(48), float32],) {
  %718 = @func_9973() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) */;
  %719 = %718.1;
  (%719,)
}

def @func_12449() -> Tensor[(16, 5, 13), float32] {
  %720 = @func_9742() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %720.0
}

def @func_10102() -> (Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(12, 132), uint64]) {
  %721 = @func_9601() /* ty=(Tensor[(5, 4), float64],) */;
  %722 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %723 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 132), uint64] */, dtype="uint64") /* ty=Tensor[(12, 132), uint64] */;
  %724 = reshape(%722, newshape=[]) /* ty=uint64 */;
  %725 = reshape(%723, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
  %726 = %721.0;
  %727 = @func_4724(%724, %725) /* ty=Tensor[(11, 12, 12), bool] */;
  (%726, %727, meta[relay.Constant][44] /* ty=uint64 */, meta[relay.Constant][45] /* ty=Tensor[(12, 132), uint64] */)
}

def @func_11133() -> Tensor[(16, 5, 13), float32] {
  @func_10958() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_9148(%var_9140: Tensor[(1, 528), bool], %var_9141: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) {
  %728 = cast(%var_9140, dtype="bool") /* ty=Tensor[(1, 528), bool] */;
  %729 = cast(%var_9141, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %730 = reshape(%728, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), bool] */;
  %731 = reshape(%729, newshape=[384, 4]) /* ty=Tensor[(384, 4), float64] */;
  %732 = @func_4547(%730, %731) /* ty=(Tensor[(11, 3, 16), bool], Tensor[(1536), float64], Tensor[(384, 4), float64], Tensor[(11, 10, 4), uint8], Tensor[(440), uint8], Tensor[(1536), float64], Tensor[(715), float32], Tensor[(120, 1), float64]) */;
  %733 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  %734 = %732.4;
  (%733, %734, %var_9140, %var_9141)
}

def @func_8624() -> (Tensor[(16, 5, 13), float32],) {
  %735 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  (%735,)
}

def @func_8974(%var_8952: Tensor[(847), float64], %var_8969: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float32]) {
  %736 = cast(%var_8952, dtype="float64") /* ty=Tensor[(847), float64] */;
  %737 = reshape(%736, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %738 = @func_3529(%737) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %739 = cast(%var_8969, dtype="float32") /* ty=Tensor[(847), float32] */;
  %740 = shape_of(%var_8952, dtype="int32") /* ty=Tensor[(1), int32] */;
  %741 = cast(%var_8952, dtype="float32") /* ty=Tensor[(847), float32] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?), float32] */;
  %743 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
  %744 = %738.0;
  %745 = mod(%741, %742) /* ty=Tensor[(847), float32] */;
  (%743, %744, %745)
}

def @func_10441() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_10334() -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  %746 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %747 = cast(meta[relay.Constant][46] /* ty=Tensor[(847), float64] */, dtype="float64") /* ty=Tensor[(847), float64] */;
  %748 = reshape(%747, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %749 = @func_3529(%748) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %750 = %746.0;
  %751 = %749.0;
  (%750, %751, meta[relay.Constant][46] /* ty=Tensor[(847), float64] */)
}

def @func_10217() -> Tensor[(16, 5, 13), float32] {
  %752 = @func_9502() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %752.0
}

def @func_11344(%var_11326: Tensor[(630), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(847), float64], Tensor[(630), float32]) {
  %753 = cast(%var_11326, dtype="float32") /* ty=Tensor[(630), float32] */;
  %754 = reshape(%753, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %755 = @func_10536(%754) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(1120), int16], Tensor[(630), float32], Tensor[(847), float64]) */;
  %756 = @func_11133() /* ty=Tensor[(16, 5, 13), float32] */;
  %757 = %755.4;
  (%756, %757, %var_11326)
}

def @func_12161() -> Tensor[(16, 5, 13), float32] {
  %758 = @func_11254() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %758.0
}

def @func_12408(%var_12384: Tensor[(231), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(231), float32]) {
  %759 = cast(%var_12384, dtype="float32") /* ty=Tensor[(231), float32] */;
  %760 = reshape(%759, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float32] */;
  %761 = @func_10639(%760) /* ty=(Tensor[(7, 3, 11), bool], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(5, 4), float64], Tensor[(7, 3, 11), uint64], Tensor[(16, 5, 13), float32]) */;
  %762 = @func_10441() /* ty=Tensor[(16, 5, 13), float32] */;
  %763 = %761.3;
  (%762, %763, %var_12384)
}

def @func_10182() -> (Tensor[(16, 5, 13), float32],) {
  %764 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %765 = %764.0;
  (%765,)
}

def @func_8874(%var_8841: Tensor[(8, 360), float32], %var_8867: bool, %var_8871: Tensor[(1, 715), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(360), float32], Tensor[(8, 360), uint8], Tensor[(14, 12, 6), float32], Tensor[(1008), float32], Tensor[(15, 15, 10), bool], bool, Tensor[(715), float32], Tensor[(1, 715), float32]) {
  %766 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %767 = cast(meta[relay.Constant][47] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %768 = reshape(%767, newshape=[1, 360]) /* ty=Tensor[(1, 360), float32] */;
  %769 = @func_8814(%768) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) */;
  %770 = %769.2;
  %771 = cast(%770, dtype="uint8") /* ty=Tensor[(1, 360), uint8] */;
  %772 = cast(%var_8841, dtype="uint8") /* ty=Tensor[(8, 360), uint8] */;
  %773 = cast(meta[relay.Constant][48] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %774 = reshape(%773, newshape=[14, 12, 6]) /* ty=Tensor[(14, 12, 6), float32] */;
  %775 = @func_3553(%774) /* ty=(Tensor[(14, 12, 6), float32],) */;
  %776 = cast(%var_8867, dtype="bool") /* ty=bool */;
  %777 = reshape(%776, newshape=[]) /* ty=bool */;
  %778 = @func_7359(%777) /* ty=Tensor[(15, 15, 10), bool] */;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %780 = cast(%770, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
  %781 = cast(%var_8871, dtype="float32") /* ty=Tensor[(1, 715), float32] */;
  %782 = reshape(%779, newshape=[15, 15, 10]) /* ty=Tensor[(15, 15, 10), float32] */;
  %783 = reshape(%780, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %784 = reshape(%781, newshape=[715]) /* ty=Tensor[(715), float32] */;
  %785 = @func_5244(%782, %783, %784) /* ty=(Tensor[(15, 15, 10), bool], Tensor[(1536), float64], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(6, 20), float64], Tensor[(715), float32]) */;
  %786 = %766.0;
  %787 = logical_xor(%771, %772) /* ty=Tensor[(8, 360), uint8] */;
  %788 = %775.0;
  %789 = %785.8;
  (%786, meta[relay.Constant][47] /* ty=Tensor[(360), float32] */, %787, %788, meta[relay.Constant][48] /* ty=Tensor[(1008), float32] */, %778, %var_8867, %789, %var_8871)
}

def @func_9468() -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
  %790 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %791 = %790.0;
  %792 = @func_9244() /* ty=Tensor[(16, 5, 13), float32] */;
  (%791, %792)
}

def @func_8814(%var_8810: Tensor[(1, 360), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) {
  %793 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %794 = cast(%var_8810, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
  %795 = reshape(%794, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %796 = %793.0;
  %797 = @func_1074(%795) /* ty=Tensor[(5, 9, 8), float32] */;
  (%796, %797, %var_8810)
}

def @func_3553(%var_3540: Tensor[(14, 12, 6), float32]) -> (Tensor[(14, 12, 6), float32],) {
  %798 = cast(%var_3540, dtype="float32") /* ty=Tensor[(14, 12, 6), float32] */;
  %799 = log10(%798) /* ty=Tensor[(14, 12, 6), float32] */;
  (%799,)
}

def @func_8482(%var_8421: Tensor[(6, 60), float32], %var_8452: Tensor[(1584), uint64]) -> (Tensor[(16, 5, 13), float32], Tensor[(6, 60), bool], Tensor[(1584), uint64], Tensor[(117), float64], Tensor[(1584), uint64], Tensor[(4, 5, 6), float64], Tensor[(80, 1), uint8], Tensor[(6, 20), float64], Tensor[(6, 60), bool], Tensor[(40, 12), float32]) {
  %800 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %801 = cast(%var_8421, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %802 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(6, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %803 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %805 = cast(meta[relay.Constant][50] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %806 = cast(%var_8452, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %807 = reshape(%805, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float64] */;
  %808 = reshape(%806, newshape=[1584]) /* ty=Tensor[(1584), uint64] */;
  %809 = @func_8033(%807, %808) /* ty=(Tensor[(13, 9, 1), float64], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(11, 12, 12), bool], uint64, Tensor[(1584), uint64]) */;
  %810 = cast(meta[relay.Constant][51] /* ty=Tensor[(80, 1), uint8] */, dtype="uint8") /* ty=Tensor[(80, 1), uint8] */;
  %811 = cast(meta[relay.Constant][52] /* ty=Tensor[(40, 12), uint8] */, dtype="uint8") /* ty=Tensor[(40, 12), uint8] */;
  %812 = cast(meta[relay.Constant][53] /* ty=Tensor[(6, 20), float64] */, dtype="float64") /* ty=Tensor[(6, 20), float64] */;
  %813 = reshape(%810, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), uint8] */;
  %814 = reshape(%811, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), uint8] */;
  %815 = reshape(%812, newshape=[3, 40]) /* ty=Tensor[(3, 40), float64] */;
  %816 = @func_3279(%813, %814, %815) /* ty=(Tensor[(16, 6, 5), uint8], Tensor[(4, 5, 6), float64], Tensor[(3, 40), float64], Tensor[(1536), float64]) */;
  %817 = cast(%var_8421, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %818 = acos(%817) /* ty=Tensor[(6, 60), float64] */;
  %819 = cast(%818, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %820 = sigmoid(%819) /* ty=Tensor[(6, 60), float32] */;
  %821 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 60), float32] */, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %822 = reshape(%821, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %823 = @func_1074(%822) /* ty=Tensor[(5, 9, 8), float32] */;
  %824 = cast(%823, dtype="uint8") /* ty=Tensor[(5, 9, 8), uint8] */;
  %825 = shape_of(%820, dtype="int32") /* ty=Tensor[(2), int32] */;
  %826 = cast(%820, dtype="uint8") /* ty=Tensor[(6, 60), uint8] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %828 = bitwise_or(%826, %827) /* ty=Tensor[(6, 60), uint8] */;
  %829 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(2), int32] */;
  %831 = cast(%828, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %833 = cast(meta[relay.Constant][52] /* ty=Tensor[(40, 12), uint8] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %834 = %800.0;
  %835 = not_equal(%803, %804) /* ty=Tensor[(6, 60), bool] */;
  %836 = %809.5;
  %837 = %816.1;
  %838 = logical_and(%831, %832) /* ty=Tensor[(6, 60), bool] */;
  %839 = acosh(%833) /* ty=Tensor[(40, 12), float32] */;
  (%834, %835, %836, meta[relay.Constant][50] /* ty=Tensor[(117), float64] */, %var_8452, %837, meta[relay.Constant][51] /* ty=Tensor[(80, 1), uint8] */, meta[relay.Constant][53] /* ty=Tensor[(6, 20), float64] */, %838, %839)
}

def @func_7359(%var_7352: bool) -> Tensor[(15, 15, 10), bool] {
  %840 = cast(%var_7352, dtype="bool") /* ty=bool */;
  %841 = cast(meta[relay.Constant][54] /* ty=Tensor[(15, 15, 10), bool] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
  logical_or(%840, %841) /* ty=Tensor[(15, 15, 10), bool] */
}

def @func_10240() -> Tensor[(5, 4), float64] {
  %842 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %842.0
}

def @func_10536(%var_10528: Tensor[(630), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(1120), int16], Tensor[(630), float32], Tensor[(847), float64]) {
  %843 = @func_9468() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) */;
  %844 = %843.1;
  %845 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %846 = shape_of(%844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%844, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %849 = cast(meta[relay.Constant][56] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %850 = cast(meta[relay.Constant][56] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %851 = cast(%var_10528, dtype="float32") /* ty=Tensor[(630), float32] */;
  %852 = cast(meta[relay.Constant][57] /* ty=Tensor[(847), float64] */, dtype="float64") /* ty=Tensor[(847), float64] */;
  %853 = reshape(%849, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), int16] */;
  %854 = reshape(%850, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), int16] */;
  %855 = reshape(%851, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %856 = reshape(%852, newshape=[847]) /* ty=Tensor[(847), float64] */;
  %857 = @func_6054(%853, %854, %855, %856) /* ty=(Tensor[(10, 14, 8), float32], Tensor[(10, 14, 8), float64], Tensor[(9, 14, 5), float32], Tensor[(630), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) */;
  %858 = power(%847, %848) /* ty=Tensor[(16, 5, 13), float32] */;
  %859 = %857.4;
  (%858, %859, meta[relay.Constant][56] /* ty=Tensor[(1120), int16] */, %var_10528, meta[relay.Constant][57] /* ty=Tensor[(847), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10218() -> Tensor[(16, 5, 13), float32] {
  %1 = fn () -> Tensor[(16, 5, 13), float32] {
    %0 = @func_9502() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %0.0
  };
  %1() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11150() -> Tensor[(16, 5, 13), float32] {
  %2 = @func_9436() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %2.0
}

def @func_11294() -> (Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) {
  %7 = fn () -> (Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) {
    %3 = @func_10102() /* ty=(Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(12, 132), uint64]) */;
    %4 = @func_9510() /* ty=(Tensor[(1, 490), float32],) */;
    %5 = %3.3;
    %6 = %4.0;
    (%5, %6)
  };
  %7() /* ty=(Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) */
}

def @func_8339() -> (Tensor[(16, 5, 13), float32],) {
  %10 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
    %9 = asinh(%8) /* ty=Tensor[(16, 5, 13), float32] */;
    (%9,)
  };
  %10() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_9056() -> (Tensor[(5, 4), float64],) {
  @func_9054() /* ty=(Tensor[(5, 4), float64],) */
}

def @func_10214() -> Tensor[(5, 4), float64] {
  @func_10212() /* ty=Tensor[(5, 4), float64] */
}

def @func_10696(%var_10690: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 5, 13), float32]) {
  %11 = @func_9742() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %12 = cast(%var_10690, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %13 = reshape(%12, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %14 = @func_179(%13) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %15 = %11.0;
  %16 = @func_10240() /* ty=Tensor[(5, 4), float64] */;
  %17 = %14.0;
  %18 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
  (%15, %16, %17, %var_10690, %18)
}

def @func_12134(%var_12132: Tensor[(120), float64], %var_12133: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(15, 15, 11), bool], Tensor[(2475), uint64], Tensor[(15, 15, 11), bool], Tensor[(16, 12, 8), float32]) {
  @func_12130(%var_12132, %var_12133) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(15, 15, 11), bool], Tensor[(2475), uint64], Tensor[(15, 15, 11), bool], Tensor[(16, 12, 8), float32]) */
}

def @func_9004() -> (Tensor[(16, 5, 13), float32],) {
  %19 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %20 = %19.0;
  (%20,)
}

def @func_8486(%var_8484: Tensor[(6, 60), float32], %var_8485: Tensor[(1584), uint64]) -> (Tensor[(16, 5, 13), float32], Tensor[(6, 60), bool], Tensor[(1584), uint64], Tensor[(117), float64], Tensor[(1584), uint64], Tensor[(4, 5, 6), float64], Tensor[(80, 1), uint8], Tensor[(6, 20), float64], Tensor[(6, 60), bool], Tensor[(40, 12), float32]) {
  @func_8482(%var_8484, %var_8485) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(6, 60), bool], Tensor[(1584), uint64], Tensor[(117), float64], Tensor[(1584), uint64], Tensor[(4, 5, 6), float64], Tensor[(80, 1), uint8], Tensor[(6, 20), float64], Tensor[(6, 60), bool], Tensor[(40, 12), float32]) */
}

def @func_9437() -> (Tensor[(16, 5, 13), float32],) {
  %23 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %21 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %22 = %21.0;
    (%22,)
  };
  %23() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_9107(%var_9083: uint64, %var_9084: Tensor[(1, 1584), uint64], %var_9090: Tensor[(16, 1584), uint64], %var_9100: Tensor[(2475, 1), uint64]) -> (Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(16, 1584), uint64], Tensor[(15, 15, 11), uint64], Tensor[(2475, 1), uint64]) {
  %24 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %25 = cast(%var_9083, dtype="uint64") /* ty=uint64 */;
  %26 = cast(%var_9084, dtype="uint64") /* ty=Tensor[(1, 1584), uint64] */;
  %27 = reshape(%25, newshape=[]) /* ty=uint64 */;
  %28 = reshape(%26, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
  %29 = cast(%var_9084, dtype="uint64") /* ty=Tensor[(1, 1584), uint64] */;
  %30 = cast(%var_9090, dtype="uint64") /* ty=Tensor[(16, 1584), uint64] */;
  %31 = cast(%var_9100, dtype="uint64") /* ty=Tensor[(2475, 1), uint64] */;
  %32 = cast(%var_9100, dtype="uint64") /* ty=Tensor[(2475, 1), uint64] */;
  %33 = reshape(%31, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %34 = reshape(%32, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %35 = @func_8694(%33, %34) /* ty=(Tensor[(15, 15, 11), uint64],) */;
  %36 = %24.0;
  %37 = @func_4724(%27, %28) /* ty=Tensor[(11, 12, 12), bool] */;
  %38 = logical_xor(%29, %30) /* ty=Tensor[(16, 1584), uint64] */;
  %39 = %35.0;
  (%36, %37, %var_9083, %38, %39, %var_9100)
}

def @func_10242() -> Tensor[(5, 4), float64] {
  @func_10240() /* ty=Tensor[(5, 4), float64] */
}

def @func_12593(%var_12591: Tensor[(2, 768), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(264, 2), bool], Tensor[(2, 768), float64], Tensor[(1536), float64], Tensor[(48, ?), int32]) {
  @func_12590(%var_12591) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(264, 2), bool], Tensor[(2, 768), float64], Tensor[(1536), float64], Tensor[(48, ?), int32]) */
}

def @func_805(%var_771: Tensor[(4, 5, 6), float64], %var_790: Tensor[(1536), float64]) -> (Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) {
  %40 = cast(%var_771, dtype="float64") /* ty=Tensor[(4, 5, 6), float64] */;
  %41 = acos(%40) /* ty=Tensor[(4, 5, 6), float64] */;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(4, 5, 6), float64] */;
  %43 = cast(%var_790, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %44 = reshape(%43, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %45 = @func_179(%44) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %46 = %45.0;
  %47 = cast(%46, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %48 = reshape(%47, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %49 = @func_179(%48) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %50 = atanh(%42) /* ty=Tensor[(4, 5, 6), float64] */;
  %51 = %49.0;
  (%50, %46, %var_790, %51)
}

def @func_9354() -> (Tensor[(16, 5, 13), float32],) {
  @func_9352() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_10147(%var_10145: Tensor[(20), float64], %var_10146: Tensor[(1536), float64]) -> (Tensor[(9, 7, 2), float64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64]) {
  %60 = fn (%var_10135: Tensor[(20), float64], %var_10136: Tensor[(1536), float64]) -> (Tensor[(9, 7, 2), float64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64]) {
    %52 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 7, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
    %53 = cast(%var_10135, dtype="float64") /* ty=Tensor[(20), float64] */;
    %54 = cast(%var_10136, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %55 = reshape(%53, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
    %56 = reshape(%54, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %57 = @func_328(%55, %56) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
    %58 = sqrt(%52) /* ty=Tensor[(9, 7, 2), float64] */;
    %59 = %57.3;
    (%58, %59, %var_10135, %var_10136)
  };
  %60(%var_10145, %var_10146) /* ty=(Tensor[(9, 7, 2), float64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64]) */
}

def @func_9979() -> (Tensor[(16, 5, 13), float32],) {
  %62 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %61 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
    (%61,)
  };
  %62() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_9973() -> (Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) {
  %63 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %65 = reshape(%64, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %66 = @func_6481(%65) /* ty=(Tensor[(8, 11, 8), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32]) */;
  %67 = %63.0;
  %68 = %66.2;
  (%67, %68, meta[relay.Constant][2] /* ty=Tensor[(48, 1), float32] */)
}

def @func_9502() -> (Tensor[(16, 5, 13), float32],) {
  %69 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
  (%69,)
}

def @func_5961(%var_5933: Tensor[(3, 16, 11), float64], %var_5943: Tensor[(20), float64], %var_5944: Tensor[(1536), float64]) -> (Tensor[(3, 16, 11), float64], Tensor[(1536), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(4, 5, 6), float64], Tensor[(120), float64]) {
  %70 = cast(%var_5933, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
  %71 = cast(%var_5943, dtype="float64") /* ty=Tensor[(20), float64] */;
  %72 = cast(%var_5944, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %73 = reshape(%71, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
  %74 = reshape(%72, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %75 = @func_328(%73, %74) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
  %76 = cast(%var_5944, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %77 = reshape(%76, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %78 = @func_179(%77) /* ty=(Tensor[(16, 12, 8), float64],) */;
  %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %80 = %78.0;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %82 = reshape(%79, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %83 = reshape(%81, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %84 = @func_805(%82, %83) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %85 = cosh(%70) /* ty=Tensor[(3, 16, 11), float64] */;
  %86 = %75.1;
  %87 = %84.0;
  (%85, %86, %var_5943, %var_5944, %80, %87, meta[relay.Constant][3] /* ty=Tensor[(120), float64] */)
}

def @func_7244(%var_7239: Tensor[(16, 16, 8), int32], %var_7240: Tensor[(16, 16, 8), int32], %var_7241: Tensor[(63), float64], %var_7242: Tensor[(490), float32], %var_7243: Tensor[(1536), float64]) -> (Tensor[(16, 16, 8), bool], Tensor[(7, 15, 9), float64], Tensor[(63), float64], Tensor[(44), float32], Tensor[(490), float32], Tensor[(1536), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(120), float64], Tensor[(273), uint64], Tensor[(20), float64]) {
  @func_7237(%var_7239, %var_7240, %var_7241, %var_7242, %var_7243) /* ty=(Tensor[(16, 16, 8), bool], Tensor[(7, 15, 9), float64], Tensor[(63), float64], Tensor[(44), float32], Tensor[(490), float32], Tensor[(1536), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(120), float64], Tensor[(273), uint64], Tensor[(20), float64]) */
}

def @func_8036(%var_8034: Tensor[(13, 9, 1), float64], %var_8035: Tensor[(1584), uint64]) -> (Tensor[(13, 9, 1), float64], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(11, 12, 12), bool], uint64, Tensor[(1584), uint64]) {
  %98 = fn (%var_7999: Tensor[(13, 9, 1), float64], %var_8025: Tensor[(1584), uint64]) -> (Tensor[(13, 9, 1), float64], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(11, 12, 12), bool], uint64, Tensor[(1584), uint64]) {
    %88 = cast(%var_7999, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
    %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %90 = reshape(%89, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %91 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %92 = cast(%var_8025, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
    %93 = reshape(%91, newshape=[]) /* ty=uint64 */;
    %94 = reshape(%92, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
    %95 = sigmoid(%88) /* ty=Tensor[(13, 9, 1), float64] */;
    %96 = @func_1074(%90) /* ty=Tensor[(5, 9, 8), float32] */;
    %97 = @func_4724(%93, %94) /* ty=Tensor[(11, 12, 12), bool] */;
    (%95, %96, meta[relay.Constant][4] /* ty=Tensor[(360), float32] */, %97, meta[relay.Constant][5] /* ty=uint64 */, %var_8025)
  };
  %98(%var_8034, %var_8035) /* ty=(Tensor[(13, 9, 1), float64], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(11, 12, 12), bool], uint64, Tensor[(1584), uint64]) */
}

def @func_10958() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_7361(%var_7360: bool) -> Tensor[(15, 15, 10), bool] {
  %101 = fn (%var_7352: bool) -> Tensor[(15, 15, 10), bool] {
    %99 = cast(%var_7352, dtype="bool") /* ty=bool */;
    %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 15, 10), bool] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
    logical_or(%99, %100) /* ty=Tensor[(15, 15, 10), bool] */
  };
  %101(%var_7360) /* ty=Tensor[(15, 15, 10), bool] */
}

def @func_10240() -> Tensor[(5, 4), float64] {
  %102 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %102.0
}

def @func_7350(%var_7349: Tensor[(9, 8, 3), float32]) -> Tensor[(9, 8, 3), float32] {
  %104 = fn (%var_7334: Tensor[(9, 8, 3), float32]) -> Tensor[(9, 8, 3), float32] {
    %103 = cast(%var_7334, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
    log10(%103) /* ty=Tensor[(9, 8, 3), float32] */
  };
  %104(%var_7349) /* ty=Tensor[(9, 8, 3), float32] */
}

def @func_11152() -> Tensor[(16, 5, 13), float32] {
  @func_11150() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_9113(%var_9109: uint64, %var_9110: Tensor[(1, 1584), uint64], %var_9111: Tensor[(16, 1584), uint64], %var_9112: Tensor[(2475, 1), uint64]) -> (Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(16, 1584), uint64], Tensor[(15, 15, 11), uint64], Tensor[(2475, 1), uint64]) {
  @func_9107(%var_9109, %var_9110, %var_9111, %var_9112) /* ty=(Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(16, 1584), uint64], Tensor[(15, 15, 11), uint64], Tensor[(2475, 1), uint64]) */
}

def @func_7978(%var_7976: Tensor[(1, 14, 16), float32], %var_7977: Tensor[(1, 14, 16), float32]) -> (Tensor[(?, 14, 16), bool],) {
  @func_7974(%var_7976, %var_7977) /* ty=(Tensor[(?, 14, 16), bool],) */
}

def @func_9535(%var_9529: Tensor[(16, 5, 13), float64]) -> (Tensor[(16, 5, 13), uint64],) {
  %105 = @func_9336() /* ty=Tensor[(16, 5, 13), float64] */;
  %106 = cast(%var_9529, dtype="uint64") /* ty=Tensor[(16, 5, 13), uint64] */;
  %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%105, dtype="uint64") /* ty=Tensor[(16, 5, 13), uint64] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %110 = bitwise_xor(%108, %109) /* ty=Tensor[(16, 5, 13), uint64] */;
  (%110,)
}

def @func_8625() -> (Tensor[(16, 5, 13), float32],) {
  %112 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %111 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
    (%111,)
  };
  %112() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_7053(%var_7051: Tensor[(14, 7, 5), float32], %var_7052: Tensor[(1536), float64]) -> (Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) {
  @func_7049(%var_7051, %var_7052) /* ty=(Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) */
}

def @func_9245() -> Tensor[(16, 5, 13), float32] {
  %114 = fn () -> Tensor[(16, 5, 13), float32] {
    %113 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %113.0
  };
  %114() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_9742() -> (Tensor[(16, 5, 13), float32],) {
  %115 = @func_9352() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %116 = %115.0;
  (%116,)
}

def @func_12161() -> Tensor[(16, 5, 13), float32] {
  %117 = @func_11254() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %117.0
}

def @func_10264() -> (Tensor[(1536), float64],) {
  %119 = fn () -> (Tensor[(1536), float64],) {
    %118 = @func_9194() /* ty=Tensor[(1536), float64] */;
    (%118,)
  };
  %119() /* ty=(Tensor[(1536), float64],) */
}

def @func_6054(%var_6003: Tensor[(10, 14, 8), int16], %var_6004: Tensor[(10, 14, 8), int16], %var_6039: Tensor[(630), float32], %var_6050: Tensor[(847), float64]) -> (Tensor[(10, 14, 8), float32], Tensor[(10, 14, 8), float64], Tensor[(9, 14, 5), float32], Tensor[(630), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  %120 = cast(%var_6004, dtype="int16") /* ty=Tensor[(10, 14, 8), int16] */;
  %121 = shape_of(%var_6003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%var_6003, dtype="int16") /* ty=Tensor[(10, 14, 8), int16] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %124 = logical_xor(%122, %123) /* ty=Tensor[(10, 14, 8), int16] */;
  %125 = cast(%124, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
  %126 = cast(%var_6004, dtype="float64") /* ty=Tensor[(10, 14, 8), float64] */;
  %127 = cast(%var_6039, dtype="float32") /* ty=Tensor[(630), float32] */;
  %128 = reshape(%127, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float32] */;
  %129 = @func_3322(%128) /* ty=(Tensor[(9, 14, 5), float32],) */;
  %130 = cast(%var_6050, dtype="float64") /* ty=Tensor[(847), float64] */;
  %131 = reshape(%130, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %132 = @func_3529(%131) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %133 = cosh(%125) /* ty=Tensor[(10, 14, 8), float32] */;
  %134 = sqrt(%126) /* ty=Tensor[(10, 14, 8), float64] */;
  %135 = %129.0;
  %136 = %132.0;
  (%133, %134, %135, %var_6039, %136, %var_6050)
}

def @func_11135() -> Tensor[(16, 5, 13), float32] {
  @func_11133() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_9169() -> Tensor[(16, 5, 13), float32] {
  %137 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %137.0
}

def @func_5815(%var_5814: Tensor[(1, 8, 6), float32]) -> Tensor[(1, 8, 6), float32] {
  %139 = fn (%var_5810: Tensor[(1, 8, 6), float32]) -> Tensor[(1, 8, 6), float32] {
    %138 = cast(%var_5810, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
    cosh(%138) /* ty=Tensor[(1, 8, 6), float32] */
  };
  %139(%var_5814) /* ty=Tensor[(1, 8, 6), float32] */
}

def @func_8516() -> Tensor[(16, 5, 13), float32] {
  %141 = fn () -> Tensor[(16, 5, 13), float32] {
    %140 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %140.0
  };
  %141() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_12419() -> (Tensor[(16, 5, 13), float32],) {
  @func_12417() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_5966(%var_5963: Tensor[(3, 16, 11), float64], %var_5964: Tensor[(20), float64], %var_5965: Tensor[(1536), float64]) -> (Tensor[(3, 16, 11), float64], Tensor[(1536), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(4, 5, 6), float64], Tensor[(120), float64]) {
  @func_5961(%var_5963, %var_5964, %var_5965) /* ty=(Tensor[(3, 16, 11), float64], Tensor[(1536), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(4, 5, 6), float64], Tensor[(120), float64]) */
}

def @func_913(%var_910: Tensor[(11, 5, 13), float32], %var_911: Tensor[(1536), float64], %var_912: Tensor[(6, 20), float64]) -> (Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) {
  %165 = fn (%var_871: Tensor[(11, 5, 13), float32], %var_885: Tensor[(1536), float64], %var_899: Tensor[(6, 20), float64]) -> (Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) {
    %142 = cast(%var_871, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
    %143 = tan(%142) /* ty=Tensor[(11, 5, 13), float32] */;
    %144 = cast(%143, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
    %145 = shape_of(%var_871, dtype="int32") /* ty=Tensor[(3), int32] */;
    %146 = cast(%var_871, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
    %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %148 = cast(%var_885, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %149 = reshape(%148, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
    %150 = @func_179(%149) /* ty=(Tensor[(16, 12, 8), float64],) */;
    %151 = cast(%var_871, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
    %152 = %150.0;
    %153 = cast(%152, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
    %154 = reshape(%153, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
    %155 = @func_179(%154) /* ty=(Tensor[(16, 12, 8), float64],) */;
    %156 = cast(%var_899, dtype="float64") /* ty=Tensor[(6, 20), float64] */;
    %157 = %155.0;
    %158 = cast(%157, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
    %159 = reshape(%156, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
    %160 = reshape(%158, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %161 = @func_805(%159, %160) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
    %162 = divide(%146, %147) /* ty=Tensor[(11, 5, 13), float64] */;
    %163 = cos(%151) /* ty=Tensor[(11, 5, 13), float32] */;
    %164 = %161.2;
    (%162, %152, %var_885, %163, %157, %164, %var_899)
  };
  %165(%var_910, %var_911, %var_912) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) */
}

def @func_9006() -> (Tensor[(16, 5, 13), float32],) {
  @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_10443() -> Tensor[(16, 5, 13), float32] {
  @func_10441() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_9814(%var_9778: Tensor[(2, 13, 15), float32], %var_9782: Tensor[(528), float64], %var_9783: Tensor[(20), float64], %var_9784: Tensor[(1536), float64], %var_9787: Tensor[(480), int64], %var_9788: Tensor[(360), float32], %var_9789: Tensor[(847), float64], %var_9803: Tensor[(24, 120), float32], %var_9804: bool) -> (Tensor[(2, 13, 15), float32], Tensor[(20), float64], Tensor[(528), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(847), float64], Tensor[(480), int64], Tensor[(360), float32], Tensor[(847), float64], Tensor[(360), float32], Tensor[(24, 120), float32], bool, Tensor[(715), float32], Tensor[(1536), float64]) {
  %166 = cast(%var_9778, dtype="float32") /* ty=Tensor[(2, 13, 15), float32] */;
  %167 = cast(%var_9782, dtype="float64") /* ty=Tensor[(528), float64] */;
  %168 = cast(%var_9783, dtype="float64") /* ty=Tensor[(20), float64] */;
  %169 = cast(%var_9784, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %170 = reshape(%167, newshape=[3, 16, 11]) /* ty=Tensor[(3, 16, 11), float64] */;
  %171 = reshape(%168, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %172 = reshape(%169, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %173 = @func_5961(%170, %171, %172) /* ty=(Tensor[(3, 16, 11), float64], Tensor[(1536), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(4, 5, 6), float64], Tensor[(120), float64]) */;
  %174 = cast(%var_9787, dtype="int64") /* ty=Tensor[(480), int64] */;
  %175 = cast(%var_9787, dtype="int64") /* ty=Tensor[(480), int64] */;
  %176 = cast(%var_9788, dtype="float32") /* ty=Tensor[(360), float32] */;
  %177 = cast(%var_9789, dtype="float64") /* ty=Tensor[(847), float64] */;
  %178 = reshape(%174, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
  %179 = reshape(%175, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
  %180 = reshape(%176, newshape=[12, 30]) /* ty=Tensor[(12, 30), float32] */;
  %181 = reshape(%177, newshape=[847]) /* ty=Tensor[(847), float64] */;
  %182 = @func_3969(%178, %179, %180, %181) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) */;
  %183 = cast(%var_9803, dtype="float32") /* ty=Tensor[(24, 120), float32] */;
  %184 = cast(%var_9804, dtype="bool") /* ty=bool */;
  %185 = cast(meta[relay.Constant][7] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
  %186 = reshape(%183, newshape=[8, 360]) /* ty=Tensor[(8, 360), float32] */;
  %187 = reshape(%184, newshape=[]) /* ty=bool */;
  %188 = reshape(%185, newshape=[1, 715]) /* ty=Tensor[(1, 715), float32] */;
  %189 = @func_8874(%186, %187, %188) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(360), float32], Tensor[(8, 360), uint8], Tensor[(14, 12, 6), float32], Tensor[(1008), float32], Tensor[(15, 15, 10), bool], bool, Tensor[(715), float32], Tensor[(1, 715), float32]) */;
  %190 = cast(%var_9782, dtype="bool") /* ty=Tensor[(528), bool] */;
  %191 = cast(%var_9784, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %192 = reshape(%190, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
  %193 = reshape(%191, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %194 = @func_9148(%192, %193) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
  %195 = acosh(%166) /* ty=Tensor[(2, 13, 15), float32] */;
  %196 = %173.2;
  %197 = %182.3;
  %198 = %189.1;
  %199 = %194.3;
  (%195, %196, %var_9782, %var_9783, %var_9784, %197, %var_9787, %var_9788, %var_9789, %198, %var_9803, %var_9804, meta[relay.Constant][7] /* ty=Tensor[(715), float32] */, %199)
}

def @func_10021() -> Tensor[(48, 1), float32] {
  %200 = @func_9973() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) */;
  %200.2
}

def @func_12450() -> Tensor[(16, 5, 13), float32] {
  %202 = fn () -> Tensor[(16, 5, 13), float32] {
    %201 = @func_9742() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %201.0
  };
  %202() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_9590(%var_9586: Tensor[(2880), int8], %var_9587: Tensor[(360), float32], %var_9588: Tensor[(1584), uint64], %var_9589: Tensor[(528), bool]) -> (Tensor[(16, 5, 13), float32], Tensor[(15, 12, 16), int8], Tensor[(2880), int8], Tensor[(6, 60), bool], Tensor[(360), float32], Tensor[(440), uint8], Tensor[(528), bool], Tensor[(1536), float64], Tensor[(1584), uint64], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  %233 = fn (%var_9546: Tensor[(2880), int8], %var_9553: Tensor[(360), float32], %var_9554: Tensor[(1584), uint64], %var_9558: Tensor[(528), bool]) -> (Tensor[(16, 5, 13), float32], Tensor[(15, 12, 16), int8], Tensor[(2880), int8], Tensor[(6, 60), bool], Tensor[(360), float32], Tensor[(440), uint8], Tensor[(528), bool], Tensor[(1536), float64], Tensor[(1584), uint64], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
    %203 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %204 = cast(%var_9546, dtype="int8") /* ty=Tensor[(2880), int8] */;
    %205 = cast(%var_9546, dtype="int8") /* ty=Tensor[(2880), int8] */;
    %206 = reshape(%204, newshape=[15, 12, 16]) /* ty=Tensor[(15, 12, 16), int8] */;
    %207 = reshape(%205, newshape=[15, 12, 16]) /* ty=Tensor[(15, 12, 16), int8] */;
    %208 = cast(%var_9553, dtype="float32") /* ty=Tensor[(360), float32] */;
    %209 = cast(%var_9554, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
    %210 = reshape(%208, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
    %211 = reshape(%209, newshape=[1584]) /* ty=Tensor[(1584), uint64] */;
    %212 = @func_8482(%210, %211) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(6, 60), bool], Tensor[(1584), uint64], Tensor[(117), float64], Tensor[(1584), uint64], Tensor[(4, 5, 6), float64], Tensor[(80, 1), uint8], Tensor[(6, 20), float64], Tensor[(6, 60), bool], Tensor[(40, 12), float32]) */;
    %213 = cast(%var_9558, dtype="bool") /* ty=Tensor[(528), bool] */;
    %214 = cast(meta[relay.Constant][8] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %215 = reshape(%213, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
    %216 = reshape(%214, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %217 = @func_9148(%215, %216) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
    %218 = cast(%var_9554, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %219 = tan(%218) /* ty=Tensor[(1584), float64] */;
    %220 = cast(%var_9554, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
    %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(1), int32] */;
    %222 = cast(%219, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
    %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %224 = cast(meta[relay.Constant][9] /* ty=Tensor[(847), float64] */, dtype="float64") /* ty=Tensor[(847), float64] */;
    %225 = reshape(%224, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
    %226 = @func_3529(%225) /* ty=(Tensor[(7, 11, 11), float64],) */;
    %227 = %203.0;
    %228 = @func_4592(%206, %207) /* ty=Tensor[(15, 12, 16), int8] */;
    %229 = %212.1;
    %230 = %217.1;
    %231 = bitwise_or(%222, %223) /* ty=Tensor[(1584), uint64] */;
    %232 = %226.0;
    (%227, %228, %var_9546, %229, %var_9553, %230, %var_9558, meta[relay.Constant][8] /* ty=Tensor[(1536), float64] */, %231, %232, meta[relay.Constant][9] /* ty=Tensor[(847), float64] */)
  };
  %233(%var_9586, %var_9587, %var_9588, %var_9589) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(15, 12, 16), int8], Tensor[(2880), int8], Tensor[(6, 60), bool], Tensor[(360), float32], Tensor[(440), uint8], Tensor[(528), bool], Tensor[(1536), float64], Tensor[(1584), uint64], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) */
}

def @func_10642(%var_10640: Tensor[(7, 3, 11), float32]) -> (Tensor[(7, 3, 11), bool], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(5, 4), float64], Tensor[(7, 3, 11), uint64], Tensor[(16, 5, 13), float32]) {
  @func_10639(%var_10640) /* ty=(Tensor[(7, 3, 11), bool], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(5, 4), float64], Tensor[(7, 3, 11), uint64], Tensor[(16, 5, 13), float32]) */
}

def @func_9054() -> (Tensor[(5, 4), float64],) {
  %234 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
  %235 = %234.1;
  (%235,)
}

def @func_10699(%var_10697: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 5, 13), float32]) {
  @func_10696(%var_10697) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 5, 13), float32]) */
}

def @func_10184() -> (Tensor[(16, 5, 13), float32],) {
  @func_10182() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_11626(%var_11625: Tensor[(224), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(528, 1), bool], Tensor[(1536), float64], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) {
  %249 = fn (%var_11613: Tensor[(224), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(528, 1), bool], Tensor[(1536), float64], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) {
    %236 = cast(meta[relay.Constant][10] /* ty=Tensor[(528, 1), bool] */, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
    %237 = cast(meta[relay.Constant][11] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %238 = reshape(%236, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
    %239 = reshape(%237, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %240 = @func_9148(%238, %239) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
    %241 = cast(%var_11613, dtype="float32") /* ty=Tensor[(224), float32] */;
    %242 = cast(%var_11613, dtype="float32") /* ty=Tensor[(224), float32] */;
    %243 = reshape(%241, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
    %244 = reshape(%242, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
    %245 = @func_7974(%243, %244) /* ty=(Tensor[(?, 14, 16), bool],) */;
    %246 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
    %247 = %240.1;
    %248 = %245.0;
    (%246, %247, meta[relay.Constant][10] /* ty=Tensor[(528, 1), bool] */, meta[relay.Constant][11] /* ty=Tensor[(1536), float64] */, %248, %var_11613)
  };
  %249(%var_11625) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(528, 1), bool], Tensor[(1536), float64], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) */
}

def @func_11907() -> Tensor[(16, 5, 13), float32] {
  @func_11905() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_8816(%var_8815: Tensor[(1, 360), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) {
  %255 = fn (%var_8810: Tensor[(1, 360), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) {
    %250 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %251 = cast(%var_8810, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
    %252 = reshape(%251, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %253 = %250.0;
    %254 = @func_1074(%252) /* ty=Tensor[(5, 9, 8), float32] */;
    (%253, %254, %var_8810)
  };
  %255(%var_8815) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) */
}

def @func_179(%var_174: Tensor[(16, 12, 8), float64]) -> (Tensor[(16, 12, 8), float64],) {
  %256 = cast(%var_174, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %257 = sqrt(%256) /* ty=Tensor[(16, 12, 8), float64] */;
  (%257,)
}

def @func_3969(%var_3939: Tensor[(12, 4, 10), int64], %var_3940: Tensor[(12, 4, 10), int64], %var_3957: Tensor[(12, 30), float32], %var_3961: Tensor[(847), float64]) -> (Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) {
  %258 = cast(%var_3940, dtype="int64") /* ty=Tensor[(12, 4, 10), int64] */;
  %259 = shape_of(%var_3939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%var_3939, dtype="int64") /* ty=Tensor[(12, 4, 10), int64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %262 = logical_xor(%260, %261) /* ty=Tensor[(12, 4, 10), int64] */;
  %263 = cast(%262, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
  %264 = shape_of(%var_3939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%var_3939, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %267 = cast(%var_3957, dtype="float32") /* ty=Tensor[(12, 30), float32] */;
  %268 = reshape(%267, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %269 = cast(%var_3961, dtype="float64") /* ty=Tensor[(847), float64] */;
  %270 = reshape(%269, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %271 = @func_3529(%270) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %272 = %271.0;
  %273 = cast(%272, dtype="float32") /* ty=Tensor[(7, 11, 11), float32] */;
  %274 = equal(%265, %266) /* ty=Tensor[(12, 4, 10), bool] */;
  %275 = @func_1074(%268) /* ty=Tensor[(5, 9, 8), float32] */;
  %276 = log10(%273) /* ty=Tensor[(7, 11, 11), float32] */;
  (%274, %275, %var_3957, %var_3961, %276)
}

def @func_9469() -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
  %280 = fn () -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
    %277 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %278 = %277.0;
    %279 = @func_9244() /* ty=Tensor[(16, 5, 13), float32] */;
    (%278, %279)
  };
  %280() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) */
}

def @func_3975(%var_3971: Tensor[(12, 4, 10), int64], %var_3972: Tensor[(12, 4, 10), int64], %var_3973: Tensor[(12, 30), float32], %var_3974: Tensor[(847), float64]) -> (Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) {
  @func_3969(%var_3971, %var_3972, %var_3973, %var_3974) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) */
}

def @func_12056(%var_12054: Tensor[(63), float64], %var_12055: Tensor[(7, 15, 9), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(63), float64], Tensor[(7, 15, 9), int32], Tensor[(16, 5, 13), float32]) {
  @func_12052(%var_12054, %var_12055) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(63), float64], Tensor[(7, 15, 9), int32], Tensor[(16, 5, 13), float32]) */
}

def @func_10441() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11816() -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64]) {
  @func_11814() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64]) */
}

def @func_4727(%var_4725: uint64, %var_4726: Tensor[(11, 12, 12), uint64]) -> Tensor[(11, 12, 12), bool] {
  %283 = fn (%var_4719: uint64, %var_4720: Tensor[(11, 12, 12), uint64]) -> Tensor[(11, 12, 12), bool] {
    %281 = cast(%var_4719, dtype="bool") /* ty=bool */;
    %282 = cast(%var_4720, dtype="bool") /* ty=Tensor[(11, 12, 12), bool] */;
    not_equal(%281, %282) /* ty=Tensor[(11, 12, 12), bool] */
  };
  %283(%var_4725, %var_4726) /* ty=Tensor[(11, 12, 12), bool] */
}

def @func_10913() -> Tensor[(16, 5, 13), float32] {
  @func_10911() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11447() -> Tensor[(16, 5, 13), float32] {
  @func_11445() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_4596(%var_4594: Tensor[(15, 12, 16), int8], %var_4595: Tensor[(15, 12, 16), int8]) -> Tensor[(15, 12, 16), int8] {
  @func_4592(%var_4594, %var_4595) /* ty=Tensor[(15, 12, 16), int8] */
}

def @func_331(%var_329: Tensor[(1, 4, 5), float64], %var_330: Tensor[(1536), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) {
  %294 = fn (%var_311: Tensor[(1, 4, 5), float64], %var_315: Tensor[(1536), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) {
    %284 = cast(%var_315, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %285 = reshape(%284, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
    %286 = @func_179(%285) /* ty=(Tensor[(16, 12, 8), float64],) */;
    %287 = cast(%var_311, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
    %288 = erf(%287) /* ty=Tensor[(1, 4, 5), float64] */;
    %289 = cast(%288, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
    %290 = cast(%var_311, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
    %291 = %286.0;
    %292 = tan(%289) /* ty=Tensor[(1, 4, 5), float64] */;
    %293 = exp(%290) /* ty=Tensor[(1, 4, 5), float64] */;
    (%291, %var_315, %292, %293)
  };
  %294(%var_329, %var_330) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */
}

def @func_12305() -> (Tensor[(48), float32],) {
  %297 = fn () -> (Tensor[(48), float32],) {
    %295 = @func_9973() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) */;
    %296 = %295.1;
    (%296,)
  };
  %297() /* ty=(Tensor[(48), float32],) */
}

def @func_11781() -> Tensor[(5, 4), float64] {
  %298 = fn () -> Tensor[(5, 4), float64] {
    @func_10240() /* ty=Tensor[(5, 4), float64] */
  };
  %298() /* ty=Tensor[(5, 4), float64] */
}

def @func_3216(%var_3214: Tensor[(60, 2), float64], %var_3215: Tensor[(128, 12), float64]) -> (Tensor[(7, 1, 13), float32], Tensor[(4, 5, 6), float64], Tensor[(60, 2), float64], Tensor[(128, 12), float64]) {
  %311 = fn (%var_3206: Tensor[(60, 2), float64], %var_3207: Tensor[(128, 12), float64]) -> (Tensor[(7, 1, 13), float32], Tensor[(4, 5, 6), float64], Tensor[(60, 2), float64], Tensor[(128, 12), float64]) {
    %299 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
    %300 = atan(%299) /* ty=Tensor[(7, 1, 13), float64] */;
    %301 = cast(%300, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
    %302 = sqrt(%301) /* ty=Tensor[(7, 1, 13), float32] */;
    %303 = cast(%302, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
    %304 = cast(%var_3206, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %305 = cast(%var_3207, dtype="float64") /* ty=Tensor[(128, 12), float64] */;
    %306 = reshape(%304, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
    %307 = reshape(%305, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %308 = @func_805(%306, %307) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
    %309 = asin(%303) /* ty=Tensor[(7, 1, 13), float32] */;
    %310 = %308.0;
    (%309, %310, %var_3206, %var_3207)
  };
  %311(%var_3214, %var_3215) /* ty=(Tensor[(7, 1, 13), float32], Tensor[(4, 5, 6), float64], Tensor[(60, 2), float64], Tensor[(128, 12), float64]) */
}

def @func_11196(%var_11181: Tensor[(2475), uint64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) {
  %312 = cast(meta[relay.Constant][13] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %313 = reshape(%312, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %314 = @func_10696(%313) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 5, 13), float32]) */;
  %315 = cast(meta[relay.Constant][14] /* ty=Tensor[(2475), uint64] */, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
  %316 = cast(meta[relay.Constant][14] /* ty=Tensor[(2475), uint64] */, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
  %317 = reshape(%315, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %318 = reshape(%316, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), uint64] */;
  %319 = @func_8694(%317, %318) /* ty=(Tensor[(15, 15, 11), uint64],) */;
  %320 = %319.0;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(15, 15, 11), float64] */;
  %322 = asinh(%321) /* ty=Tensor[(15, 15, 11), float64] */;
  %323 = cast(%var_11181, dtype="uint32") /* ty=Tensor[(2475), uint32] */;
  %324 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(2475), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %325 = cast(meta[relay.Constant][14] /* ty=Tensor[(2475), uint64] */, dtype="uint32") /* ty=Tensor[(2475), uint32] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %327 = logical_xor(%325, %326) /* ty=Tensor[(2475), uint32] */;
  %328 = cast(%327, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %329 = shape_of(%322, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%322, dtype="bool") /* ty=Tensor[(15, 15, 11), bool] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %332 = @func_11150() /* ty=Tensor[(16, 5, 13), float32] */;
  %333 = %314.4;
  %334 = @func_10911() /* ty=Tensor[(16, 5, 13), float32] */;
  %335 = less(%330, %331) /* ty=Tensor[(15, 15, 11), bool] */;
  %336 = @func_10212() /* ty=Tensor[(5, 4), float64] */;
  (%332, %333, meta[relay.Constant][13] /* ty=Tensor[(1536), float64] */, %334, %335, %336)
}

def @func_8608() -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) {
  %337 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 490), float32] */, dtype="float32") /* ty=Tensor[(1, 490), float32] */;
  %338 = cast(meta[relay.Constant][16] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %339 = reshape(%337, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float32] */;
  %340 = reshape(%338, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %341 = @func_7049(%339, %340) /* ty=(Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) */;
  %342 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  %343 = %341.3;
  (%342, %343, meta[relay.Constant][15] /* ty=Tensor[(1, 490), float32] */, meta[relay.Constant][16] /* ty=Tensor[(1536), float64] */)
}

def @func_10057(%var_10053: Tensor[(8, 6, 1), float32], %var_10054: uint64, %var_10055: Tensor[(25344, 1), uint64], %var_10056: Tensor[(2475), uint64]) -> (Tensor[(8, 6, 1), float32], Tensor[(5, 4), float64], uint64, Tensor[(132, 12), uint64], Tensor[(25344, 1), uint64], Tensor[(2475), uint64], Tensor[(9, 14, 5), float32], Tensor[(10, 63), float32]) {
  %360 = fn (%var_10029: Tensor[(8, 6, 1), float32], %var_10033: uint64, %var_10035: Tensor[(25344, 1), uint64], %var_10036: Tensor[(2475), uint64]) -> (Tensor[(8, 6, 1), float32], Tensor[(5, 4), float64], uint64, Tensor[(132, 12), uint64], Tensor[(25344, 1), uint64], Tensor[(2475), uint64], Tensor[(9, 14, 5), float32], Tensor[(10, 63), float32]) {
    %344 = cast(%var_10029, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
    %345 = cast(%var_10033, dtype="uint64") /* ty=uint64 */;
    %346 = cast(meta[relay.Constant][17] /* ty=Tensor[(132, 12), uint64] */, dtype="uint64") /* ty=Tensor[(132, 12), uint64] */;
    %347 = cast(%var_10035, dtype="uint64") /* ty=Tensor[(25344, 1), uint64] */;
    %348 = cast(%var_10036, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
    %349 = reshape(%345, newshape=[]) /* ty=uint64 */;
    %350 = reshape(%346, newshape=[1, 1584]) /* ty=Tensor[(1, 1584), uint64] */;
    %351 = reshape(%347, newshape=[16, 1584]) /* ty=Tensor[(16, 1584), uint64] */;
    %352 = reshape(%348, newshape=[2475, 1]) /* ty=Tensor[(2475, 1), uint64] */;
    %353 = @func_9107(%349, %350, %351, %352) /* ty=(Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(16, 1584), uint64], Tensor[(15, 15, 11), uint64], Tensor[(2475, 1), uint64]) */;
    %354 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 63), float32] */, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
    %355 = reshape(%354, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float32] */;
    %356 = @func_3322(%355) /* ty=(Tensor[(9, 14, 5), float32],) */;
    %357 = cosh(%344) /* ty=Tensor[(8, 6, 1), float32] */;
    %358 = %353.0;
    %359 = %356.0;
    (%357, %358, %var_10033, meta[relay.Constant][17] /* ty=Tensor[(132, 12), uint64] */, %var_10035, %var_10036, %359, meta[relay.Constant][18] /* ty=Tensor[(10, 63), float32] */)
  };
  %360(%var_10053, %var_10054, %var_10055, %var_10056) /* ty=(Tensor[(8, 6, 1), float32], Tensor[(5, 4), float64], uint64, Tensor[(132, 12), uint64], Tensor[(25344, 1), uint64], Tensor[(2475), uint64], Tensor[(9, 14, 5), float32], Tensor[(10, 63), float32]) */
}

def @func_10911() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_10398(%var_10396: Tensor[(11, 6, 4), int8], %var_10397: Tensor[(11, 6, 4), int8]) -> Tensor[(11, 6, 4), bool] {
  %365 = fn (%var_10389: Tensor[(11, 6, 4), int8], %var_10390: Tensor[(11, 6, 4), int8]) -> Tensor[(11, 6, 4), bool] {
    %361 = cast(%var_10390, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
    %362 = shape_of(%var_10389, dtype="int32") /* ty=Tensor[(3), int32] */;
    %363 = cast(%var_10389, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
    %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%363, %364) /* ty=Tensor[(11, 6, 4), bool] */
  };
  %365(%var_10396, %var_10397) /* ty=Tensor[(11, 6, 4), bool] */
}

def @func_9477() -> Tensor[(16, 5, 13), float32] {
  %366 = fn () -> Tensor[(16, 5, 13), float32] {
    @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
  };
  %366() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_10849() -> Tensor[(16, 5, 13), float32] {
  @func_10847() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11713(%var_11709: Tensor[(12, 132), uint64], %var_11710: Tensor[(120, 4), int64], %var_11711: Tensor[(2, 180), float32], %var_11712: Tensor[(77, 11), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(12, 132), int8], Tensor[(12, 132), float64], Tensor[(16, 5, 13), float32], Tensor[(12, 30), float32], Tensor[(120, 4), int64], Tensor[(2, 180), float32], Tensor[(77, 11), float64]) {
  %391 = fn (%var_11681: Tensor[(12, 132), uint64], %var_11696: Tensor[(120, 4), int64], %var_11697: Tensor[(2, 180), float32], %var_11698: Tensor[(77, 11), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(12, 132), int8], Tensor[(12, 132), float64], Tensor[(16, 5, 13), float32], Tensor[(12, 30), float32], Tensor[(120, 4), int64], Tensor[(2, 180), float32], Tensor[(77, 11), float64]) {
    %367 = @func_11293() /* ty=(Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) */;
    %368 = %367.0;
    %369 = cast(%var_11681, dtype="int8") /* ty=Tensor[(12, 132), int8] */;
    %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(2), int32] */;
    %371 = cast(%368, dtype="int8") /* ty=Tensor[(12, 132), int8] */;
    %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %373 = cast(%var_11681, dtype="float64") /* ty=Tensor[(12, 132), float64] */;
    %374 = shape_of(%368, dtype="int32") /* ty=Tensor[(2), int32] */;
    %375 = cast(%368, dtype="float64") /* ty=Tensor[(12, 132), float64] */;
    %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %377 = cast(%var_11696, dtype="int64") /* ty=Tensor[(120, 4), int64] */;
    %378 = cast(%var_11696, dtype="int64") /* ty=Tensor[(120, 4), int64] */;
    %379 = cast(%var_11697, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
    %380 = cast(%var_11698, dtype="float64") /* ty=Tensor[(77, 11), float64] */;
    %381 = reshape(%377, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
    %382 = reshape(%378, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int64] */;
    %383 = reshape(%379, newshape=[12, 30]) /* ty=Tensor[(12, 30), float32] */;
    %384 = reshape(%380, newshape=[847]) /* ty=Tensor[(847), float64] */;
    %385 = @func_3969(%381, %382, %383, %384) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(5, 9, 8), float32], Tensor[(12, 30), float32], Tensor[(847), float64], Tensor[(7, 11, 11), float32]) */;
    %386 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
    %387 = bitwise_or(%371, %372) /* ty=Tensor[(12, 132), int8] */;
    %388 = divide(%375, %376) /* ty=Tensor[(12, 132), float64] */;
    %389 = @func_11150() /* ty=Tensor[(16, 5, 13), float32] */;
    %390 = %385.2;
    (%386, %387, %388, %389, %390, %var_11696, %var_11697, %var_11698)
  };
  %391(%var_11709, %var_11710, %var_11711, %var_11712) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(12, 132), int8], Tensor[(12, 132), float64], Tensor[(16, 5, 13), float32], Tensor[(12, 30), float32], Tensor[(120, 4), int64], Tensor[(2, 180), float32], Tensor[(77, 11), float64]) */
}

def @func_10336() -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  @func_10334() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) */
}

def @func_11666() -> Tensor[(16, 5, 13), float32] {
  %395 = fn () -> Tensor[(16, 5, 13), float32] {
    %392 = @func_9978() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %393 = %392.0;
    %394 = cast(%393, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
    acosh(%394) /* ty=Tensor[(16, 5, 13), float32] */
  };
  %395() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_5244(%var_5188: Tensor[(15, 15, 10), float32], %var_5222: Tensor[(6, 60), float32], %var_5234: Tensor[(715), float32]) -> (Tensor[(15, 15, 10), bool], Tensor[(1536), float64], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(6, 20), float64], Tensor[(715), float32]) {
  %396 = cast(%var_5188, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
  %397 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(15, 15, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 15, 10), float32] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %401 = cast(meta[relay.Constant][21] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %402 = reshape(%400, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %403 = reshape(%401, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %404 = @func_805(%402, %403) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %405 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %406 = cast(meta[relay.Constant][21] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %407 = reshape(%405, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %408 = reshape(%406, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %409 = @func_805(%407, %408) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %410 = cast(%var_5222, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %411 = reshape(%410, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %412 = cast(%var_5234, dtype="float32") /* ty=Tensor[(715), float32] */;
  %413 = %409.1;
  %414 = cast(%413, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %415 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %416 = reshape(%412, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %417 = reshape(%414, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %418 = reshape(%415, newshape=[6, 20]) /* ty=Tensor[(6, 20), float64] */;
  %419 = @func_909(%416, %417, %418) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) */;
  %420 = greater_equal(%398, %399) /* ty=Tensor[(15, 15, 10), bool] */;
  %421 = %404.2;
  %422 = @func_1074(%411) /* ty=Tensor[(5, 9, 8), float32] */;
  %423 = %419.6;
  (%420, %421, meta[relay.Constant][20] /* ty=Tensor[(120), float64] */, meta[relay.Constant][21] /* ty=Tensor[(1536), float64] */, %413, %422, %var_5222, %423, %var_5234)
}

def @func_11199(%var_11197: Tensor[(2475), uint64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) {
  @func_11196(%var_11197) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) */
}

def @func_3532(%var_3530: Tensor[(7, 11, 11), float64]) -> (Tensor[(7, 11, 11), float64],) {
  @func_3529(%var_3530) /* ty=(Tensor[(7, 11, 11), float64],) */
}

def @func_11755() -> Tensor[(12, 132), uint64] {
  @func_11753() /* ty=Tensor[(12, 132), uint64] */
}

def @func_9338() -> Tensor[(16, 5, 13), float64] {
  @func_9336() /* ty=Tensor[(16, 5, 13), float64] */
}

def @func_11022(%var_11020: Tensor[(7, 15, 15), int8], %var_11021: Tensor[(7, 15, 15), int8]) -> Tensor[(7, 15, 15), bool] {
  %428 = fn (%var_11013: Tensor[(7, 15, 15), int8], %var_11014: Tensor[(7, 15, 15), int8]) -> Tensor[(7, 15, 15), bool] {
    %424 = cast(%var_11014, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
    %425 = shape_of(%var_11013, dtype="int32") /* ty=Tensor[(3), int32] */;
    %426 = cast(%var_11013, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%426, %427) /* ty=Tensor[(7, 15, 15), bool] */
  };
  %428(%var_11020, %var_11021) /* ty=Tensor[(7, 15, 15), bool] */
}

def @func_12678() -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
  %434 = fn () -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
    %429 = @func_11874() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %430 = @func_11814() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64]) */;
    %431 = %429.0;
    %432 = %430.0;
    %433 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
    (%431, %432, %433)
  };
  %434() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) */
}

def @func_12244() -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
  %438 = fn () -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) {
    %435 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %436 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
    %437 = %435.0;
    (%436, %437)
  };
  %438() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) */
}

def @func_8698(%var_8696: Tensor[(15, 15, 11), uint64], %var_8697: Tensor[(15, 15, 11), uint64]) -> (Tensor[(15, 15, 11), uint64],) {
  @func_8694(%var_8696, %var_8697) /* ty=(Tensor[(15, 15, 11), uint64],) */
}

def @func_12163() -> Tensor[(16, 5, 13), float32] {
  @func_12161() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_3324(%var_3323: Tensor[(9, 14, 5), float32]) -> (Tensor[(9, 14, 5), float32],) {
  %441 = fn (%var_3316: Tensor[(9, 14, 5), float32]) -> (Tensor[(9, 14, 5), float32],) {
    %439 = cast(%var_3316, dtype="float32") /* ty=Tensor[(9, 14, 5), float32] */;
    %440 = cosh(%439) /* ty=Tensor[(9, 14, 5), float32] */;
    (%440,)
  };
  %441(%var_3323) /* ty=(Tensor[(9, 14, 5), float32],) */
}

def @func_10538(%var_10537: Tensor[(630), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(1120), int16], Tensor[(630), float32], Tensor[(847), float64]) {
  %459 = fn (%var_10528: Tensor[(630), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(1120), int16], Tensor[(630), float32], Tensor[(847), float64]) {
    %442 = @func_9468() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) */;
    %443 = %442.1;
    %444 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
    %445 = shape_of(%443, dtype="int32") /* ty=Tensor[(3), int32] */;
    %446 = cast(%443, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %448 = cast(meta[relay.Constant][23] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
    %449 = cast(meta[relay.Constant][23] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
    %450 = cast(%var_10528, dtype="float32") /* ty=Tensor[(630), float32] */;
    %451 = cast(meta[relay.Constant][24] /* ty=Tensor[(847), float64] */, dtype="float64") /* ty=Tensor[(847), float64] */;
    %452 = reshape(%448, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), int16] */;
    %453 = reshape(%449, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), int16] */;
    %454 = reshape(%450, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %455 = reshape(%451, newshape=[847]) /* ty=Tensor[(847), float64] */;
    %456 = @func_6054(%452, %453, %454, %455) /* ty=(Tensor[(10, 14, 8), float32], Tensor[(10, 14, 8), float64], Tensor[(9, 14, 5), float32], Tensor[(630), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) */;
    %457 = power(%446, %447) /* ty=Tensor[(16, 5, 13), float32] */;
    %458 = %456.4;
    (%457, %458, meta[relay.Constant][23] /* ty=Tensor[(1120), int16] */, %var_10528, meta[relay.Constant][24] /* ty=Tensor[(847), float64] */)
  };
  %459(%var_10537) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(1120), int16], Tensor[(630), float32], Tensor[(847), float64]) */
}

def @func_9151(%var_9149: Tensor[(1, 528), bool], %var_9150: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) {
  %467 = fn (%var_9140: Tensor[(1, 528), bool], %var_9141: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) {
    %460 = cast(%var_9140, dtype="bool") /* ty=Tensor[(1, 528), bool] */;
    %461 = cast(%var_9141, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %462 = reshape(%460, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), bool] */;
    %463 = reshape(%461, newshape=[384, 4]) /* ty=Tensor[(384, 4), float64] */;
    %464 = @func_4547(%462, %463) /* ty=(Tensor[(11, 3, 16), bool], Tensor[(1536), float64], Tensor[(384, 4), float64], Tensor[(11, 10, 4), uint8], Tensor[(440), uint8], Tensor[(1536), float64], Tensor[(715), float32], Tensor[(120, 1), float64]) */;
    %465 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
    %466 = %464.4;
    (%465, %466, %var_9140, %var_9141)
  };
  %467(%var_9149, %var_9150) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */
}

def @func_7237(%var_7195: Tensor[(16, 16, 8), int32], %var_7206: Tensor[(16, 16, 8), int32], %var_7213: Tensor[(63), float64], %var_7220: Tensor[(490), float32], %var_7221: Tensor[(1536), float64]) -> (Tensor[(16, 16, 8), bool], Tensor[(7, 15, 9), float64], Tensor[(63), float64], Tensor[(44), float32], Tensor[(490), float32], Tensor[(1536), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(120), float64], Tensor[(273), uint64], Tensor[(20), float64]) {
  %468 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 16, 8), int32] */, dtype="int32") /* ty=Tensor[(16, 16, 8), int32] */;
  %469 = shape_of(%var_7195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_7195, dtype="int32") /* ty=Tensor[(16, 16, 8), int32] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %472 = right_shift(%470, %471) /* ty=Tensor[(16, 16, 8), int32] */;
  %473 = cast(%var_7206, dtype="bool") /* ty=Tensor[(16, 16, 8), bool] */;
  %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%472, dtype="bool") /* ty=Tensor[(16, 16, 8), bool] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %477 = cast(%var_7213, dtype="float64") /* ty=Tensor[(63), float64] */;
  %478 = reshape(%477, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), float64] */;
  %479 = cast(%var_7220, dtype="float32") /* ty=Tensor[(490), float32] */;
  %480 = cast(%var_7221, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %481 = reshape(%479, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float32] */;
  %482 = reshape(%480, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %483 = @func_7049(%481, %482) /* ty=(Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) */;
  %484 = cast(meta[relay.Constant][26] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %485 = reshape(%484, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
  %486 = cast(meta[relay.Constant][27] /* ty=Tensor[(273), uint64] */, dtype="uint64") /* ty=Tensor[(273), uint64] */;
  %487 = cast(meta[relay.Constant][28] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %488 = reshape(%486, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), uint64] */;
  %489 = reshape(%487, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %490 = @func_1139(%488, %489) /* ty=(Tensor[(13, 7, 3), uint64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(8, 192), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(120), float64]) */;
  %491 = equal(%475, %476) /* ty=Tensor[(16, 16, 8), bool] */;
  %492 = @func_6568(%478) /* ty=Tensor[(7, 15, 9), float64] */;
  %493 = %483.2;
  %494 = @func_5813(%485) /* ty=Tensor[(1, 8, 6), float32] */;
  %495 = %490.6;
  (%491, %492, %var_7213, %493, %var_7220, %var_7221, %494, meta[relay.Constant][26] /* ty=Tensor[(48), float32] */, %495, meta[relay.Constant][27] /* ty=Tensor[(273), uint64] */, meta[relay.Constant][28] /* ty=Tensor[(20), float64] */)
}

def @func_8761(%var_8760: Tensor[(16, 5, 13), float32]) -> Tensor[(16, 5, 13), bool] {
  %502 = fn (%var_8741: Tensor[(16, 5, 13), float32]) -> Tensor[(16, 5, 13), bool] {
    %496 = @func_8624() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %497 = %496.0;
    %498 = cast(%var_8741, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
    %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
    %500 = cast(%497, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
    %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%500, %501) /* ty=Tensor[(16, 5, 13), bool] */
  };
  %502(%var_8760) /* ty=Tensor[(16, 5, 13), bool] */
}

def @main(%var_12686: int64, %var_12702: Tensor[(4, 2, 12), int64]) -> (Tensor[(4, 2, 12), int64], Tensor[(11, 12, 12), bool], Tensor[(1584), uint64], Tensor[(4, 2, 12), float32]) {
  %503 = cast(%var_12686, dtype="int64") /* ty=int64 */;
  %504 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 2, 12), int64] */, dtype="int64") /* ty=Tensor[(4, 2, 12), int64] */;
  %505 = cast(%var_12686, dtype="uint64") /* ty=uint64 */;
  %506 = cast(meta[relay.Constant][30] /* ty=Tensor[(1584), uint64] */, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %507 = reshape(%505, newshape=[]) /* ty=uint64 */;
  %508 = reshape(%506, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
  %509 = cast(%var_12702, dtype="float32") /* ty=Tensor[(4, 2, 12), float32] */;
  %510 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(4, 2, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 2, 12), int64] */, dtype="float32") /* ty=Tensor[(4, 2, 12), float32] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %513 = left_shift(%503, %504) /* ty=Tensor[(4, 2, 12), int64] */;
  %514 = @func_4724(%507, %508) /* ty=Tensor[(11, 12, 12), bool] */;
  %515 = power(%511, %512) /* ty=Tensor[(4, 2, 12), float32] */;
  (%513, %514, meta[relay.Constant][30] /* ty=Tensor[(1584), uint64] */, %515)
}

def @func_8694(%var_8665: Tensor[(15, 15, 11), uint64], %var_8666: Tensor[(15, 15, 11), uint64]) -> (Tensor[(15, 15, 11), uint64],) {
  %516 = cast(%var_8666, dtype="uint64") /* ty=Tensor[(15, 15, 11), uint64] */;
  %517 = shape_of(%var_8665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%var_8665, dtype="uint64") /* ty=Tensor[(15, 15, 11), uint64] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %520 = left_shift(%518, %519) /* ty=Tensor[(15, 15, 11), uint64] */;
  (%520,)
}

def @func_8550(%var_8548: Tensor[(9, 12, 13), bool], %var_8549: Tensor[(9, 12, 13), bool]) -> (Tensor[(9, 12, 13), bool], Tensor[(9, 12, 13), float32]) {
  @func_8546(%var_8548, %var_8549) /* ty=(Tensor[(9, 12, 13), bool], Tensor[(9, 12, 13), float32]) */
}

def @func_12334() -> (Tensor[(16, 5, 13), float32],) {
  %522 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %521 = @func_11553() /* ty=Tensor[(16, 5, 13), float32] */;
    (%521,)
  };
  %522() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_10503(%var_10501: Tensor[(847), float64], %var_10502: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float64], Tensor[(16, 5, 13), float32], Tensor[(847), int8], Tensor[(5, 4), float64], Tensor[(16, 5, 13), float32]) {
  %536 = fn (%var_10469: Tensor[(847), float64], %var_10473: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float64], Tensor[(16, 5, 13), float32], Tensor[(847), int8], Tensor[(5, 4), float64], Tensor[(16, 5, 13), float32]) {
    %523 = cast(%var_10469, dtype="float64") /* ty=Tensor[(847), float64] */;
    %524 = reshape(%523, newshape=[847]) /* ty=Tensor[(847), float64] */;
    %525 = @func_10311(%524) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(847), float64]) */;
    %526 = cast(%var_10473, dtype="int8") /* ty=Tensor[(847), int8] */;
    %527 = shape_of(%var_10469, dtype="int32") /* ty=Tensor[(1), int32] */;
    %528 = cast(%var_10469, dtype="int8") /* ty=Tensor[(847), int8] */;
    %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?), int8] */;
    %530 = @func_9601() /* ty=(Tensor[(5, 4), float64],) */;
    %531 = @func_9336() /* ty=Tensor[(16, 5, 13), float64] */;
    %532 = %525.2;
    %533 = bitwise_xor(%528, %529) /* ty=Tensor[(847), int8] */;
    %534 = %530.0;
    %535 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
    (%531, %532, %533, %534, %535)
  };
  %536(%var_10501, %var_10502) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(16, 5, 13), float32], Tensor[(847), int8], Tensor[(5, 4), float64], Tensor[(16, 5, 13), float32]) */
}

def @func_9538(%var_9536: Tensor[(16, 5, 13), float64]) -> (Tensor[(16, 5, 13), uint64],) {
  @func_9535(%var_9536) /* ty=(Tensor[(16, 5, 13), uint64],) */
}

def @func_12417() -> (Tensor[(16, 5, 13), float32],) {
  %537 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %538 = %537.0;
  (%538,)
}

def @func_1631(%var_1628: Tensor[(1, 4, 11), float32], %var_1629: Tensor[(20), float64], %var_1630: Tensor[(1536), float64]) -> (Tensor[(1, 4, 11), float32], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(?, 4, 11), int32], Tensor[(?, 4, 11), float64]) {
  %570 = fn (%var_1557: Tensor[(1, 4, 11), float32], %var_1614: Tensor[(20), float64], %var_1615: Tensor[(1536), float64]) -> (Tensor[(1, 4, 11), float32], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(?, 4, 11), int32], Tensor[(?, 4, 11), float64]) {
    %539 = cast(%var_1557, dtype="float32") /* ty=Tensor[(1, 4, 11), float32] */;
    %540 = cast(%var_1614, dtype="float64") /* ty=Tensor[(20), float64] */;
    %541 = cast(%var_1615, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %542 = reshape(%540, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
    %543 = reshape(%541, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %544 = @func_328(%542, %543) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
    %545 = cast(%var_1557, dtype="float32") /* ty=Tensor[(1, 4, 11), float32] */;
    %546 = sqrt(%545) /* ty=Tensor[(1, 4, 11), float32] */;
    %547 = cast(%var_1557, dtype="uint8") /* ty=Tensor[(1, 4, 11), uint8] */;
    %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
    %549 = cast(%546, dtype="uint8") /* ty=Tensor[(1, 4, 11), uint8] */;
    %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %551 = right_shift(%549, %550) /* ty=Tensor[(?, 4, 11), uint8] */;
    %552 = cast(%551, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
    %553 = sigmoid(%552) /* ty=Tensor[(?, 4, 11), float64] */;
    %554 = cast(%546, dtype="int32") /* ty=Tensor[(1, 4, 11), int32] */;
    %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
    %556 = cast(%553, dtype="int32") /* ty=Tensor[(?, 4, 11), int32] */;
    %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %558 = cast(%553, dtype="float32") /* ty=Tensor[(?, 4, 11), float32] */;
    %559 = atanh(%558) /* ty=Tensor[(?, 4, 11), float32] */;
    %560 = cast(%553, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
    %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %562 = cast(%559, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
    %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %564 = divide(%562, %563) /* ty=Tensor[(?, 4, 11), float64] */;
    %565 = cast(%564, dtype="float64") /* ty=Tensor[(?, 4, 11), float64] */;
    %566 = cosh(%539) /* ty=Tensor[(1, 4, 11), float32] */;
    %567 = %544.2;
    %568 = left_shift(%556, %557) /* ty=Tensor[(?, 4, 11), int32] */;
    %569 = erf(%565) /* ty=Tensor[(?, 4, 11), float64] */;
    (%566, %567, %var_1614, %var_1615, %568, %569)
  };
  %570(%var_1628, %var_1629, %var_1630) /* ty=(Tensor[(1, 4, 11), float32], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(?, 4, 11), int32], Tensor[(?, 4, 11), float64]) */
}

def @func_3556(%var_3554: Tensor[(14, 12, 6), float32]) -> (Tensor[(14, 12, 6), float32],) {
  @func_3553(%var_3554) /* ty=(Tensor[(14, 12, 6), float32],) */
}

def @func_10350() -> Tensor[(16, 5, 13), float32] {
  @func_10348() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_12130(%var_12092: Tensor[(120), float64], %var_12093: Tensor[(1536), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(15, 15, 11), bool], Tensor[(2475), uint64], Tensor[(15, 15, 11), bool], Tensor[(16, 12, 8), float32]) {
  %571 = @func_11874() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %572 = cast(meta[relay.Constant][31] /* ty=Tensor[(2475), uint64] */, dtype="uint64") /* ty=Tensor[(2475), uint64] */;
  %573 = reshape(%572, newshape=[2475]) /* ty=Tensor[(2475), uint64] */;
  %574 = @func_11196(%573) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) */;
  %575 = %574.4;
  %576 = cast(%575, dtype="uint64") /* ty=Tensor[(15, 15, 11), uint64] */;
  %577 = reshape(%576, newshape=[2475]) /* ty=Tensor[(2475), uint64] */;
  %578 = @func_11196(%577) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(16, 5, 13), float32], Tensor[(15, 15, 11), bool], Tensor[(5, 4), float64]) */;
  %579 = cast(%var_12092, dtype="float64") /* ty=Tensor[(120), float64] */;
  %580 = cast(%var_12093, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %581 = reshape(%579, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
  %582 = reshape(%580, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %583 = @func_805(%581, %582) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
  %584 = %583.3;
  %585 = cast(%584, dtype="float32") /* ty=Tensor[(16, 12, 8), float32] */;
  %586 = sinh(%585) /* ty=Tensor[(16, 12, 8), float32] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(16, 12, 8), float32] */;
  %588 = %571.0;
  %589 = %578.4;
  %590 = cosh(%587) /* ty=Tensor[(16, 12, 8), float32] */;
  (%588, %var_12092, %var_12093, %575, meta[relay.Constant][31] /* ty=Tensor[(2475), uint64] */, %589, %590)
}

def @func_10182() -> (Tensor[(16, 5, 13), float32],) {
  %591 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %592 = %591.0;
  (%592,)
}

def @func_8546(%var_8524: Tensor[(9, 12, 13), bool], %var_8525: Tensor[(9, 12, 13), bool]) -> (Tensor[(9, 12, 13), bool], Tensor[(9, 12, 13), float32]) {
  %593 = cast(%var_8525, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
  %594 = shape_of(%var_8524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%var_8524, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = cast(%var_8524, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %598 = logical_or(%595, %596) /* ty=Tensor[(9, 12, 13), bool] */;
  %599 = erf(%597) /* ty=Tensor[(9, 12, 13), float32] */;
  (%598, %599)
}

def @func_10960() -> Tensor[(16, 5, 13), float32] {
  @func_10958() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_8643() -> Tensor[(16, 5, 13), float32] {
  @func_8515() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11133() -> Tensor[(16, 5, 13), float32] {
  @func_10958() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_8874(%var_8841: Tensor[(8, 360), float32], %var_8867: bool, %var_8871: Tensor[(1, 715), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(360), float32], Tensor[(8, 360), uint8], Tensor[(14, 12, 6), float32], Tensor[(1008), float32], Tensor[(15, 15, 10), bool], bool, Tensor[(715), float32], Tensor[(1, 715), float32]) {
  %600 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %601 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %602 = reshape(%601, newshape=[1, 360]) /* ty=Tensor[(1, 360), float32] */;
  %603 = @func_8814(%602) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) */;
  %604 = %603.2;
  %605 = cast(%604, dtype="uint8") /* ty=Tensor[(1, 360), uint8] */;
  %606 = cast(%var_8841, dtype="uint8") /* ty=Tensor[(8, 360), uint8] */;
  %607 = cast(meta[relay.Constant][33] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %608 = reshape(%607, newshape=[14, 12, 6]) /* ty=Tensor[(14, 12, 6), float32] */;
  %609 = @func_3553(%608) /* ty=(Tensor[(14, 12, 6), float32],) */;
  %610 = cast(%var_8867, dtype="bool") /* ty=bool */;
  %611 = reshape(%610, newshape=[]) /* ty=bool */;
  %612 = @func_7359(%611) /* ty=Tensor[(15, 15, 10), bool] */;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %614 = cast(%604, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
  %615 = cast(%var_8871, dtype="float32") /* ty=Tensor[(1, 715), float32] */;
  %616 = reshape(%613, newshape=[15, 15, 10]) /* ty=Tensor[(15, 15, 10), float32] */;
  %617 = reshape(%614, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %618 = reshape(%615, newshape=[715]) /* ty=Tensor[(715), float32] */;
  %619 = @func_5244(%616, %617, %618) /* ty=(Tensor[(15, 15, 10), bool], Tensor[(1536), float64], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(6, 20), float64], Tensor[(715), float32]) */;
  %620 = %600.0;
  %621 = logical_xor(%605, %606) /* ty=Tensor[(8, 360), uint8] */;
  %622 = %609.0;
  %623 = %619.8;
  (%620, meta[relay.Constant][32] /* ty=Tensor[(360), float32] */, %621, %622, meta[relay.Constant][33] /* ty=Tensor[(1008), float32] */, %612, %var_8867, %623, %var_8871)
}

def @func_10737() -> (Tensor[(16, 5, 13), float32],) {
  %625 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %624 = @func_10217() /* ty=Tensor[(16, 5, 13), float32] */;
    (%624,)
  };
  %625() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_11814() -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64]) {
  %626 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %627 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %628 = %626.0;
  %629 = %627.0;
  (%628, %629)
}

def @func_12590(%var_12548: Tensor[(2, 768), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(1536), float64], Tensor[(264, 2), bool], Tensor[(2, 768), float64], Tensor[(1536), float64], Tensor[(48, ?), int32]) {
  %630 = @func_11254() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %631 = @func_10736() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %632 = cast(meta[relay.Constant][34] /* ty=Tensor[(264, 2), bool] */, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %633 = cast(%var_12548, dtype="float64") /* ty=Tensor[(2, 768), float64] */;
  %634 = reshape(%632, newshape=[1, 528]) /* ty=Tensor[(1, 528), bool] */;
  %635 = reshape(%633, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %636 = @func_9148(%634, %635) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(440), uint8], Tensor[(1, 528), bool], Tensor[(1536), float64]) */;
  %637 = @func_10021() /* ty=Tensor[(48, 1), float32] */;
  %638 = cast(%637, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %639 = rsqrt(%638) /* ty=Tensor[(48, 1), float64] */;
  %640 = cast(%637, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
  %641 = shape_of(%639, dtype="int32") /* ty=Tensor[(2), int32] */;
  %642 = cast(%639, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %644 = add(%642, %643) /* ty=Tensor[(48, ?), int64] */;
  %645 = cast(%644, dtype="float32") /* ty=Tensor[(48, ?), float32] */;
  %646 = acos(%645) /* ty=Tensor[(48, ?), float32] */;
  %647 = cast(%639, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(2), int32] */;
  %649 = cast(%646, dtype="int32") /* ty=Tensor[(48, ?), int32] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %651 = %630.0;
  %652 = %631.0;
  %653 = %636.3;
  %654 = @func_9194() /* ty=Tensor[(1536), float64] */;
  %655 = subtract(%649, %650) /* ty=Tensor[(48, ?), int32] */;
  (%651, %652, %653, meta[relay.Constant][34] /* ty=Tensor[(264, 2), bool] */, %var_12548, %654, %655)
}

def @func_8977(%var_8975: Tensor[(847), float64], %var_8976: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float32]) {
  %666 = fn (%var_8952: Tensor[(847), float64], %var_8969: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float32]) {
    %656 = cast(%var_8952, dtype="float64") /* ty=Tensor[(847), float64] */;
    %657 = reshape(%656, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
    %658 = @func_3529(%657) /* ty=(Tensor[(7, 11, 11), float64],) */;
    %659 = cast(%var_8969, dtype="float32") /* ty=Tensor[(847), float32] */;
    %660 = shape_of(%var_8952, dtype="int32") /* ty=Tensor[(1), int32] */;
    %661 = cast(%var_8952, dtype="float32") /* ty=Tensor[(847), float32] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?), float32] */;
    %663 = @func_8643() /* ty=Tensor[(16, 5, 13), float32] */;
    %664 = %658.0;
    %665 = mod(%661, %662) /* ty=Tensor[(847), float32] */;
    (%663, %664, %665)
  };
  %666(%var_8975, %var_8976) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float32]) */
}

def @func_9195() -> Tensor[(1536), float64] {
  %668 = fn () -> Tensor[(1536), float64] {
    %667 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
    %667.3
  };
  %668() /* ty=Tensor[(1536), float64] */
}

def @func_10348() -> Tensor[(16, 5, 13), float32] {
  %669 = @func_10182() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %669.0
}

def @func_11445() -> Tensor[(16, 5, 13), float32] {
  %670 = @func_9352() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %670.0
}

def @func_8645() -> Tensor[(16, 5, 13), float32] {
  @func_8643() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_8610() -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) {
  @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */
}

def @func_7049(%var_7015: Tensor[(14, 7, 5), float32], %var_7045: Tensor[(1536), float64]) -> (Tensor[(14, 7, 5), int16], Tensor[(1536), float64], Tensor[(44), float32], Tensor[(5, 4), float64], Tensor[(1536), float64]) {
  %671 = cast(%var_7015, dtype="float32") /* ty=Tensor[(14, 7, 5), float32] */;
  %672 = sinh(%671) /* ty=Tensor[(14, 7, 5), float32] */;
  %673 = cast(%672, dtype="float32") /* ty=Tensor[(14, 7, 5), float32] */;
  %674 = log(%673) /* ty=Tensor[(14, 7, 5), float32] */;
  %675 = cast(%672, dtype="int16") /* ty=Tensor[(14, 7, 5), int16] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%674, dtype="int16") /* ty=Tensor[(14, 7, 5), int16] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %679 = cast(meta[relay.Constant][35] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
  %680 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
  %681 = cast(%var_7045, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %682 = reshape(%679, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float32] */;
  %683 = reshape(%680, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %684 = reshape(%681, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %685 = @func_1627(%682, %683, %684) /* ty=(Tensor[(1, 4, 11), float32], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(?, 4, 11), int32], Tensor[(?, 4, 11), float64]) */;
  %686 = bitwise_or(%677, %678) /* ty=Tensor[(14, 7, 5), int16] */;
  %687 = %685.3;
  (%686, %687, meta[relay.Constant][35] /* ty=Tensor[(44), float32] */, meta[relay.Constant][36] /* ty=Tensor[(5, 4), float64] */, %var_7045)
}

def @func_7974(%var_7955: Tensor[(1, 14, 16), float32], %var_7956: Tensor[(1, 14, 16), float32]) -> (Tensor[(?, 14, 16), bool],) {
  %688 = cast(%var_7956, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %689 = shape_of(%var_7955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%var_7955, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = greater_equal(%690, %691) /* ty=Tensor[(?, 14, 16), bool] */;
  (%692,)
}

def @func_12410(%var_12409: Tensor[(231), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(231), float32]) {
  %698 = fn (%var_12384: Tensor[(231), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(231), float32]) {
    %693 = cast(%var_12384, dtype="float32") /* ty=Tensor[(231), float32] */;
    %694 = reshape(%693, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float32] */;
    %695 = @func_10639(%694) /* ty=(Tensor[(7, 3, 11), bool], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(5, 4), float64], Tensor[(7, 3, 11), uint64], Tensor[(16, 5, 13), float32]) */;
    %696 = @func_10441() /* ty=Tensor[(16, 5, 13), float32] */;
    %697 = %695.3;
    (%696, %697, %var_12384)
  };
  %698(%var_12409) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(231), float32]) */
}

def @func_3553(%var_3540: Tensor[(14, 12, 6), float32]) -> (Tensor[(14, 12, 6), float32],) {
  %699 = cast(%var_3540, dtype="float32") /* ty=Tensor[(14, 12, 6), float32] */;
  %700 = log10(%699) /* ty=Tensor[(14, 12, 6), float32] */;
  (%700,)
}

def @func_10023() -> Tensor[(48, 1), float32] {
  @func_10021() /* ty=Tensor[(48, 1), float32] */
}

def @func_809(%var_807: Tensor[(4, 5, 6), float64], %var_808: Tensor[(1536), float64]) -> (Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) {
  @func_805(%var_807, %var_808) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */
}

def @func_4550(%var_4548: Tensor[(11, 3, 16), bool], %var_4549: Tensor[(384, 4), float64]) -> (Tensor[(11, 3, 16), bool], Tensor[(1536), float64], Tensor[(384, 4), float64], Tensor[(11, 10, 4), uint8], Tensor[(440), uint8], Tensor[(1536), float64], Tensor[(715), float32], Tensor[(120, 1), float64]) {
  %726 = fn (%var_4500: Tensor[(11, 3, 16), bool], %var_4507: Tensor[(384, 4), float64]) -> (Tensor[(11, 3, 16), bool], Tensor[(1536), float64], Tensor[(384, 4), float64], Tensor[(11, 10, 4), uint8], Tensor[(440), uint8], Tensor[(1536), float64], Tensor[(715), float32], Tensor[(120, 1), float64]) {
    %701 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 3, 16), bool] */, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
    %702 = shape_of(%var_4500, dtype="int32") /* ty=Tensor[(3), int32] */;
    %703 = cast(%var_4500, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
    %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %705 = cast(meta[relay.Constant][38] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
    %706 = cast(%var_4507, dtype="float64") /* ty=Tensor[(384, 4), float64] */;
    %707 = reshape(%705, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
    %708 = reshape(%706, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %709 = @func_805(%707, %708) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
    %710 = cast(meta[relay.Constant][39] /* ty=Tensor[(440), uint8] */, dtype="uint8") /* ty=Tensor[(440), uint8] */;
    %711 = reshape(%710, newshape=[11, 10, 4]) /* ty=Tensor[(11, 10, 4), uint8] */;
    %712 = @func_2480(%711) /* ty=(Tensor[(11, 10, 4), uint8],) */;
    %713 = cast(meta[relay.Constant][40] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
    %714 = %709.2;
    %715 = cast(%714, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %716 = cast(meta[relay.Constant][38] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
    %717 = reshape(%713, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
    %718 = reshape(%715, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %719 = reshape(%716, newshape=[6, 20]) /* ty=Tensor[(6, 20), float64] */;
    %720 = @func_909(%717, %718, %719) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(11, 5, 13), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(6, 20), float64]) */;
    %721 = cast(meta[relay.Constant][38] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
    %722 = logical_or(%703, %704) /* ty=Tensor[(11, 3, 16), bool] */;
    %723 = %712.0;
    %724 = %720.5;
    %725 = acosh(%721) /* ty=Tensor[(120, 1), float64] */;
    (%722, %714, %var_4507, %723, meta[relay.Constant][39] /* ty=Tensor[(440), uint8] */, %724, meta[relay.Constant][40] /* ty=Tensor[(715), float32] */, %725)
  };
  %726(%var_4548, %var_4549) /* ty=(Tensor[(11, 3, 16), bool], Tensor[(1536), float64], Tensor[(384, 4), float64], Tensor[(11, 10, 4), uint8], Tensor[(440), uint8], Tensor[(1536), float64], Tensor[(715), float32], Tensor[(120, 1), float64]) */
}

def @func_9744() -> (Tensor[(16, 5, 13), float32],) {
  @func_9742() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_1077(%var_1075: Tensor[(5, 9, 8), float32]) -> Tensor[(5, 9, 8), float32] {
  @func_1074(%var_1075) /* ty=Tensor[(5, 9, 8), float32] */
}

def @func_9171() -> Tensor[(16, 5, 13), float32] {
  @func_9169() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_11344(%var_11326: Tensor[(630), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(847), float64], Tensor[(630), float32]) {
  %727 = cast(%var_11326, dtype="float32") /* ty=Tensor[(630), float32] */;
  %728 = reshape(%727, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %729 = @func_10536(%728) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(1120), int16], Tensor[(630), float32], Tensor[(847), float64]) */;
  %730 = @func_11133() /* ty=Tensor[(16, 5, 13), float32] */;
  %731 = %729.4;
  (%730, %731, %var_11326)
}

def @func_11553() -> Tensor[(16, 5, 13), float32] {
  %732 = @func_9436() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %732.0
}

def @func_1074(%var_1060: Tensor[(5, 9, 8), float32]) -> Tensor[(5, 9, 8), float32] {
  %733 = cast(%var_1060, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
  asinh(%733) /* ty=Tensor[(5, 9, 8), float32] */
}

def @func_10847() -> Tensor[(16, 5, 13), float32] {
  %734 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %735 = %734.0;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  sin(%736) /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_9825(%var_9816: Tensor[(2, 13, 15), float32], %var_9817: Tensor[(528), float64], %var_9818: Tensor[(20), float64], %var_9819: Tensor[(1536), float64], %var_9820: Tensor[(480), int64], %var_9821: Tensor[(360), float32], %var_9822: Tensor[(847), float64], %var_9823: Tensor[(24, 120), float32], %var_9824: bool) -> (Tensor[(2, 13, 15), float32], Tensor[(20), float64], Tensor[(528), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(847), float64], Tensor[(480), int64], Tensor[(360), float32], Tensor[(847), float64], Tensor[(360), float32], Tensor[(24, 120), float32], bool, Tensor[(715), float32], Tensor[(1536), float64]) {
  @func_9814(%var_9816, %var_9817, %var_9818, %var_9819, %var_9820, %var_9821, %var_9822, %var_9823, %var_9824) /* ty=(Tensor[(2, 13, 15), float32], Tensor[(20), float64], Tensor[(528), float64], Tensor[(20), float64], Tensor[(1536), float64], Tensor[(847), float64], Tensor[(480), int64], Tensor[(360), float32], Tensor[(847), float64], Tensor[(360), float32], Tensor[(24, 120), float32], bool, Tensor[(715), float32], Tensor[(1536), float64]) */
}

def @func_11347(%var_11345: Tensor[(630), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(847), float64], Tensor[(630), float32]) {
  @func_11344(%var_11345) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(847), float64], Tensor[(630), float32]) */
}

def @func_10313(%var_10312: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(847), float64]) {
  %747 = fn (%var_10306: Tensor[(847), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(847), float64]) {
    %737 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %738 = @func_9352() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %739 = cast(%var_10306, dtype="float64") /* ty=Tensor[(847), float64] */;
    %740 = cast(%var_10306, dtype="float64") /* ty=Tensor[(847), float64] */;
    %741 = reshape(%739, newshape=[847]) /* ty=Tensor[(847), float64] */;
    %742 = reshape(%740, newshape=[847]) /* ty=Tensor[(847), float64] */;
    %743 = @func_8974(%741, %742) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float32]) */;
    %744 = %737.0;
    %745 = %738.0;
    %746 = %743.0;
    (%744, %745, %746, %var_10306)
  };
  %747(%var_10312) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(847), float64]) */
}

def @func_9336() -> Tensor[(16, 5, 13), float64] {
  %748 = @func_9169() /* ty=Tensor[(16, 5, 13), float32] */;
  %749 = cast(%748, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
  atanh(%749) /* ty=Tensor[(16, 5, 13), float64] */
}

def @func_11905() -> Tensor[(16, 5, 13), float32] {
  @func_11445() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_6060(%var_6056: Tensor[(10, 14, 8), int16], %var_6057: Tensor[(10, 14, 8), int16], %var_6058: Tensor[(630), float32], %var_6059: Tensor[(847), float64]) -> (Tensor[(10, 14, 8), float32], Tensor[(10, 14, 8), float64], Tensor[(9, 14, 5), float32], Tensor[(630), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  @func_6054(%var_6056, %var_6057, %var_6058, %var_6059) /* ty=(Tensor[(10, 14, 8), float32], Tensor[(10, 14, 8), float64], Tensor[(9, 14, 5), float32], Tensor[(630), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) */
}

def @func_11555() -> Tensor[(16, 5, 13), float32] {
  @func_11553() /* ty=Tensor[(16, 5, 13), float32] */
}

def @func_8482(%var_8421: Tensor[(6, 60), float32], %var_8452: Tensor[(1584), uint64]) -> (Tensor[(16, 5, 13), float32], Tensor[(6, 60), bool], Tensor[(1584), uint64], Tensor[(117), float64], Tensor[(1584), uint64], Tensor[(4, 5, 6), float64], Tensor[(80, 1), uint8], Tensor[(6, 20), float64], Tensor[(6, 60), bool], Tensor[(40, 12), float32]) {
  %750 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %751 = cast(%var_8421, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %752 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(6, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %753 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %755 = cast(meta[relay.Constant][42] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %756 = cast(%var_8452, dtype="uint64") /* ty=Tensor[(1584), uint64] */;
  %757 = reshape(%755, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float64] */;
  %758 = reshape(%756, newshape=[1584]) /* ty=Tensor[(1584), uint64] */;
  %759 = @func_8033(%757, %758) /* ty=(Tensor[(13, 9, 1), float64], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(11, 12, 12), bool], uint64, Tensor[(1584), uint64]) */;
  %760 = cast(meta[relay.Constant][43] /* ty=Tensor[(80, 1), uint8] */, dtype="uint8") /* ty=Tensor[(80, 1), uint8] */;
  %761 = cast(meta[relay.Constant][44] /* ty=Tensor[(40, 12), uint8] */, dtype="uint8") /* ty=Tensor[(40, 12), uint8] */;
  %762 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 20), float64] */, dtype="float64") /* ty=Tensor[(6, 20), float64] */;
  %763 = reshape(%760, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), uint8] */;
  %764 = reshape(%761, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), uint8] */;
  %765 = reshape(%762, newshape=[3, 40]) /* ty=Tensor[(3, 40), float64] */;
  %766 = @func_3279(%763, %764, %765) /* ty=(Tensor[(16, 6, 5), uint8], Tensor[(4, 5, 6), float64], Tensor[(3, 40), float64], Tensor[(1536), float64]) */;
  %767 = cast(%var_8421, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %768 = acos(%767) /* ty=Tensor[(6, 60), float64] */;
  %769 = cast(%768, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %770 = sigmoid(%769) /* ty=Tensor[(6, 60), float32] */;
  %771 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 60), float32] */, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %772 = reshape(%771, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %773 = @func_1074(%772) /* ty=Tensor[(5, 9, 8), float32] */;
  %774 = cast(%773, dtype="uint8") /* ty=Tensor[(5, 9, 8), uint8] */;
  %775 = shape_of(%770, dtype="int32") /* ty=Tensor[(2), int32] */;
  %776 = cast(%770, dtype="uint8") /* ty=Tensor[(6, 60), uint8] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %778 = bitwise_or(%776, %777) /* ty=Tensor[(6, 60), uint8] */;
  %779 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(2), int32] */;
  %781 = cast(%778, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %783 = cast(meta[relay.Constant][44] /* ty=Tensor[(40, 12), uint8] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %784 = %750.0;
  %785 = not_equal(%753, %754) /* ty=Tensor[(6, 60), bool] */;
  %786 = %759.5;
  %787 = %766.1;
  %788 = logical_and(%781, %782) /* ty=Tensor[(6, 60), bool] */;
  %789 = acosh(%783) /* ty=Tensor[(40, 12), float32] */;
  (%784, %785, %786, meta[relay.Constant][42] /* ty=Tensor[(117), float64] */, %var_8452, %787, meta[relay.Constant][43] /* ty=Tensor[(80, 1), uint8] */, meta[relay.Constant][45] /* ty=Tensor[(6, 20), float64] */, %788, %789)
}

def @func_11255() -> (Tensor[(16, 5, 13), float32],) {
  %792 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %790 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
    %791 = %790.0;
    (%791,)
  };
  %792() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_12052(%var_12010: Tensor[(63), float64], %var_12014: Tensor[(7, 15, 9), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32], Tensor[(63), float64], Tensor[(7, 15, 9), int32], Tensor[(16, 5, 13), float32]) {
  %793 = @func_8338() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %794 = cast(%var_12010, dtype="float64") /* ty=Tensor[(63), float64] */;
  %795 = reshape(%794, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), float64] */;
  %796 = @func_6568(%795) /* ty=Tensor[(7, 15, 9), float64] */;
  %797 = cast(%var_12014, dtype="int32") /* ty=Tensor[(7, 15, 9), int32] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="int32") /* ty=Tensor[(7, 15, 9), int32] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %801 = @func_9468() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(16, 5, 13), float32]) */;
  %802 = @func_11445() /* ty=Tensor[(16, 5, 13), float32] */;
  %803 = %793.0;
  %804 = @func_10911() /* ty=Tensor[(16, 5, 13), float32] */;
  %805 = @func_9244() /* ty=Tensor[(16, 5, 13), float32] */;
  %806 = bitwise_or(%799, %800) /* ty=Tensor[(7, 15, 9), int32] */;
  %807 = %801.0;
  (%802, %803, %804, %805, %var_12010, %806, %807)
}

def @func_5249(%var_5246: Tensor[(15, 15, 10), float32], %var_5247: Tensor[(6, 60), float32], %var_5248: Tensor[(715), float32]) -> (Tensor[(15, 15, 10), bool], Tensor[(1536), float64], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(6, 20), float64], Tensor[(715), float32]) {
  @func_5244(%var_5246, %var_5247, %var_5248) /* ty=(Tensor[(15, 15, 10), bool], Tensor[(1536), float64], Tensor[(120), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(6, 20), float64], Tensor[(715), float32]) */
}

def @func_9993(%var_9991: bool, %var_9992: Tensor[(5, 14, 10), bool]) -> (Tensor[(5, 14, 10), bool],) {
  %811 = fn (%var_9982: bool, %var_9983: Tensor[(5, 14, 10), bool]) -> (Tensor[(5, 14, 10), bool],) {
    %808 = cast(%var_9982, dtype="bool") /* ty=bool */;
    %809 = cast(%var_9983, dtype="bool") /* ty=Tensor[(5, 14, 10), bool] */;
    %810 = logical_or(%808, %809) /* ty=Tensor[(5, 14, 10), bool] */;
    (%810,)
  };
  %811(%var_9991, %var_9992) /* ty=(Tensor[(5, 14, 10), bool],) */
}

def @func_6570(%var_6569: Tensor[(7, 1, 9), float64]) -> Tensor[(7, 15, 9), float64] {
  %814 = fn (%var_6563: Tensor[(7, 1, 9), float64]) -> Tensor[(7, 15, 9), float64] {
    %812 = cast(%var_6563, dtype="float64") /* ty=Tensor[(7, 1, 9), float64] */;
    %813 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 15, 9), float64] */;
    mod(%812, %813) /* ty=Tensor[(7, 15, 9), float64] */
  };
  %814(%var_6569) /* ty=Tensor[(7, 15, 9), float64] */
}

def @func_2482(%var_2481: Tensor[(11, 10, 4), uint8]) -> (Tensor[(11, 10, 4), uint8],) {
  %818 = fn (%var_2474: Tensor[(11, 10, 4), uint8]) -> (Tensor[(11, 10, 4), uint8],) {
    %815 = cast(meta[relay.Constant][47] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %816 = cast(%var_2474, dtype="uint8") /* ty=Tensor[(11, 10, 4), uint8] */;
    %817 = bitwise_or(%815, %816) /* ty=Tensor[(11, 10, 4), uint8] */;
    (%817,)
  };
  %818(%var_2481) /* ty=(Tensor[(11, 10, 4), uint8],) */
}

def @func_9975() -> (Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) {
  @func_9973() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(48), float32], Tensor[(48, 1), float32]) */
}

def @func_4592(%var_4587: Tensor[(15, 12, 16), int8], %var_4588: Tensor[(15, 12, 16), int8]) -> Tensor[(15, 12, 16), int8] {
  %819 = cast(%var_4588, dtype="int8") /* ty=Tensor[(15, 12, 16), int8] */;
  %820 = shape_of(%var_4587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_4587, dtype="int8") /* ty=Tensor[(15, 12, 16), int8] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%821, %822) /* ty=Tensor[(15, 12, 16), int8] */
}

def @func_9504() -> (Tensor[(16, 5, 13), float32],) {
  @func_9502() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_11969(%var_11968: Tensor[(1, 5, 3), float32]) -> Tensor[(?, 5, 3), bool] {
  %829 = fn (%var_11955: Tensor[(1, 5, 3), float32]) -> Tensor[(?, 5, 3), bool] {
    %823 = cast(%var_11955, dtype="float32") /* ty=Tensor[(1, 5, 3), float32] */;
    %824 = tan(%823) /* ty=Tensor[(1, 5, 3), float32] */;
    %825 = cast(%var_11955, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
    %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
    %827 = cast(%824, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
    %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%827, %828) /* ty=Tensor[(?, 5, 3), bool] */
  };
  %829(%var_11968) /* ty=Tensor[(?, 5, 3), bool] */
}

def @func_9511() -> (Tensor[(1, 490), float32],) {
  %832 = fn () -> (Tensor[(1, 490), float32],) {
    %830 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
    %831 = %830.2;
    (%831,)
  };
  %832() /* ty=(Tensor[(1, 490), float32],) */
}

def @func_11875() -> (Tensor[(16, 5, 13), float32],) {
  %834 = fn () -> (Tensor[(16, 5, 13), float32],) {
    %833 = @func_9244() /* ty=Tensor[(16, 5, 13), float32] */;
    (%833,)
  };
  %834() /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_3529(%var_3525: Tensor[(7, 11, 11), float64]) -> (Tensor[(7, 11, 11), float64],) {
  %835 = cast(%var_3525, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
  %836 = sigmoid(%835) /* ty=Tensor[(7, 11, 11), float64] */;
  (%836,)
}

def @func_9352() -> (Tensor[(16, 5, 13), float32],) {
  %837 = @func_8515() /* ty=Tensor[(16, 5, 13), float32] */;
  (%837,)
}

def @func_182(%var_180: Tensor[(16, 12, 8), float64]) -> (Tensor[(16, 12, 8), float64],) {
  @func_179(%var_180) /* ty=(Tensor[(16, 12, 8), float64],) */
}

def @func_10639(%var_10623: Tensor[(7, 3, 11), float32]) -> (Tensor[(7, 3, 11), bool], Tensor[(5, 9, 8), float32], Tensor[(360), float32], Tensor[(5, 4), float64], Tensor[(7, 3, 11), uint64], Tensor[(16, 5, 13), float32]) {
  %838 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 3, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
  %839 = log(%838) /* ty=Tensor[(7, 3, 11), float32] */;
  %840 = cast(%839, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %841 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(7, 3, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 3, 11), float32] */, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %844 = less_equal(%842, %843) /* ty=Tensor[(7, 3, 11), bool] */;
  %845 = cast(%844, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %846 = shape_of(%839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%839, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %849 = cast(meta[relay.Constant][49] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %850 = reshape(%849, newshape=[1, 360]) /* ty=Tensor[(1, 360), float32] */;
  %851 = @func_8814(%850) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 9, 8), float32], Tensor[(1, 360), float32]) */;
  %852 = cast(%844, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
  %853 = tan(%852) /* ty=Tensor[(7, 3, 11), float32] */;
  %854 = cast(%var_10623, dtype="uint64") /* ty=Tensor[(7, 3, 11), uint64] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%853, dtype="uint64") /* ty=Tensor[(7, 3, 11), uint64] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %858 = equal(%847, %848) /* ty=Tensor[(7, 3, 11), bool] */;
  %859 = %851.1;
  %860 = @func_10240() /* ty=Tensor[(5, 4), float64] */;
  %861 = multiply(%856, %857) /* ty=Tensor[(7, 3, 11), uint64] */;
  %862 = @func_9476() /* ty=Tensor[(16, 5, 13), float32] */;
  (%858, %859, meta[relay.Constant][49] /* ty=Tensor[(360), float32] */, %860, %861, %862)
}

def @func_9602() -> (Tensor[(5, 4), float64],) {
  %865 = fn () -> (Tensor[(5, 4), float64],) {
    %863 = @func_8608() /* ty=(Tensor[(16, 5, 13), float32], Tensor[(5, 4), float64], Tensor[(1, 490), float32], Tensor[(1536), float64]) */;
    %864 = %863.1;
    (%864,)
  };
  %865() /* ty=(Tensor[(5, 4), float64],) */
}

def @func_10212() -> Tensor[(5, 4), float64] {
  %866 = @func_9054() /* ty=(Tensor[(5, 4), float64],) */;
  %866.0
}

def @func_10334() -> (Tensor[(16, 5, 13), float32], Tensor[(7, 11, 11), float64], Tensor[(847), float64]) {
  %867 = @func_9004() /* ty=(Tensor[(16, 5, 13), float32],) */;
  %868 = cast(meta[relay.Constant][50] /* ty=Tensor[(847), float64] */, dtype="float64") /* ty=Tensor[(847), float64] */;
  %869 = reshape(%868, newshape=[7, 11, 11]) /* ty=Tensor[(7, 11, 11), float64] */;
  %870 = @func_3529(%869) /* ty=(Tensor[(7, 11, 11), float64],) */;
  %871 = %867.0;
  %872 = %870.0;
  (%871, %872, meta[relay.Constant][50] /* ty=Tensor[(847), float64] */)
}

def @func_1142(%var_1140: Tensor[(13, 7, 3), uint64], %var_1141: Tensor[(20), float64]) -> (Tensor[(13, 7, 3), uint64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(8, 192), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(120), float64]) {
  %892 = fn (%var_1100: Tensor[(13, 7, 3), uint64], %var_1122: Tensor[(20), float64]) -> (Tensor[(13, 7, 3), uint64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(8, 192), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(120), float64]) {
    %873 = cast(meta[relay.Constant][51] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %874 = cast(%var_1100, dtype="uint64") /* ty=Tensor[(13, 7, 3), uint64] */;
    %875 = cast(%var_1122, dtype="float64") /* ty=Tensor[(20), float64] */;
    %876 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 192), float64] */, dtype="float64") /* ty=Tensor[(8, 192), float64] */;
    %877 = reshape(%875, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
    %878 = reshape(%876, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %879 = @func_328(%877, %878) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1, 4, 5), float64], Tensor[(1, 4, 5), float64]) */;
    %880 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 192), float64] */, dtype="float64") /* ty=Tensor[(8, 192), float64] */;
    %881 = reshape(%880, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
    %882 = @func_179(%881) /* ty=(Tensor[(16, 12, 8), float64],) */;
    %883 = cast(meta[relay.Constant][53] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %884 = %882.0;
    %885 = cast(%884, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
    %886 = reshape(%883, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
    %887 = reshape(%885, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %888 = @func_805(%886, %887) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
    %889 = bitwise_xor(%873, %874) /* ty=Tensor[(13, 7, 3), uint64] */;
    %890 = %879.2;
    %891 = %888.2;
    (%889, %890, %var_1122, meta[relay.Constant][52] /* ty=Tensor[(8, 192), float64] */, %884, %891, meta[relay.Constant][53] /* ty=Tensor[(120), float64] */)
  };
  %892(%var_1140, %var_1141) /* ty=(Tensor[(13, 7, 3), uint64], Tensor[(1, 4, 5), float64], Tensor[(20), float64], Tensor[(8, 192), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(120), float64]) */
}

def @func_3283(%var_3280: Tensor[(16, 1, 5), uint8], %var_3281: Tensor[(16, 6, 5), uint8], %var_3282: Tensor[(3, 40), float64]) -> (Tensor[(16, 6, 5), uint8], Tensor[(4, 5, 6), float64], Tensor[(3, 40), float64], Tensor[(1536), float64]) {
  %902 = fn (%var_3252: Tensor[(16, 1, 5), uint8], %var_3253: Tensor[(16, 6, 5), uint8], %var_3269: Tensor[(3, 40), float64]) -> (Tensor[(16, 6, 5), uint8], Tensor[(4, 5, 6), float64], Tensor[(3, 40), float64], Tensor[(1536), float64]) {
    %893 = cast(%var_3252, dtype="uint8") /* ty=Tensor[(16, 1, 5), uint8] */;
    %894 = cast(%var_3253, dtype="uint8") /* ty=Tensor[(16, 6, 5), uint8] */;
    %895 = cast(%var_3269, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
    %896 = cast(meta[relay.Constant][54] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %897 = reshape(%895, newshape=[4, 5, 6]) /* ty=Tensor[(4, 5, 6), float64] */;
    %898 = reshape(%896, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %899 = @func_805(%897, %898) /* ty=(Tensor[(4, 5, 6), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 12, 8), float64]) */;
    %900 = logical_xor(%893, %894) /* ty=Tensor[(16, 6, 5), uint8] */;
    %901 = %899.0;
    (%900, %901, %var_3269, meta[relay.Constant][54] /* ty=Tensor[(1536), float64] */)
  };
  %902(%var_3280, %var_3281, %var_3282) /* ty=(Tensor[(16, 6, 5), uint8], Tensor[(4, 5, 6), float64], Tensor[(3, 40), float64], Tensor[(1536), float64]) */
}

def @func_11753() -> Tensor[(12, 132), uint64] {
  %903 = @func_11293() /* ty=(Tensor[(12, 132), uint64], Tensor[(1, 490), float32]) */;
  %903.0
}

def @func_10103() -> (Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(12, 132), uint64]) {
  %911 = fn () -> (Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(12, 132), uint64]) {
    %904 = @func_9601() /* ty=(Tensor[(5, 4), float64],) */;
    %905 = cast(meta[relay.Constant][55] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %906 = cast(meta[relay.Constant][56] /* ty=Tensor[(12, 132), uint64] */, dtype="uint64") /* ty=Tensor[(12, 132), uint64] */;
    %907 = reshape(%905, newshape=[]) /* ty=uint64 */;
    %908 = reshape(%906, newshape=[11, 12, 12]) /* ty=Tensor[(11, 12, 12), uint64] */;
    %909 = %904.0;
    %910 = @func_4724(%907, %908) /* ty=Tensor[(11, 12, 12), bool] */;
    (%909, %910, meta[relay.Constant][55] /* ty=uint64 */, meta[relay.Constant][56] /* ty=Tensor[(12, 132), uint64] */)
  };
  %911() /* ty=(Tensor[(5, 4), float64], Tensor[(11, 12, 12), bool], uint64, Tensor[(12, 132), uint64]) */
}

def @func_6483(%var_6482: Tensor[(48), float32]) -> (Tensor[(8, 11, 8), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32]) {
  %917 = fn (%var_6477: Tensor[(48), float32]) -> (Tensor[(8, 11, 8), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32]) {
    %912 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 8), float64] */;
    %913 = cast(%var_6477, dtype="float32") /* ty=Tensor[(48), float32] */;
    %914 = reshape(%913, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
    %915 = log(%912) /* ty=Tensor[(8, 11, 8), float64] */;
    %916 = @func_5813(%914) /* ty=Tensor[(1, 8, 6), float32] */;
    (%915, %916, %var_6477)
  };
  %917(%var_6482) /* ty=(Tensor[(8, 11, 8), float64], Tensor[(1, 8, 6), float32], Tensor[(48), float32]) */
}

def @func_8879(%var_8876: Tensor[(8, 360), float32], %var_8877: bool, %var_8878: Tensor[(1, 715), float32]) -> (Tensor[(16, 5, 13), float32], Tensor[(360), float32], Tensor[(8, 360), uint8], Tensor[(14, 12, 6), float32], Tensor[(1008), float32], Tensor[(15, 15, 10), bool], bool, Tensor[(715), float32], Tensor[(1, 715), float32]) {
  @func_8874(%var_8876, %var_8877, %var_8878) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(360), float32], Tensor[(8, 360), uint8], Tensor[(14, 12, 6), float32], Tensor[(1008), float32], Tensor[(15, 15, 10), bool], bool, Tensor[(715), float32], Tensor[(1, 715), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen723/build/output.py", line 2409, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  35: TVMFuncCall
  34: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  33: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  32: tvm::relay::backend::ExecutorCodegen::Codegen(tvm::relay::Function const&, tvm::runtime::String)
  31: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::GraphExecutorCodegenModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  30: tvm::relay::backend::GraphExecutorCodegen::Codegen(tvm::relay::Function, tvm::runtime::String)
  29: tvm::transform::Pass::operator()(tvm::IRModule) const
  28: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  27: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  26: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  25: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  24: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  23: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  22: tvm::transform::Pass::operator()(tvm::IRModule) const
  21: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  20: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  19: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  14: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  13: _ZN3tvm5relay9
  12: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  11: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  10: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  9: _ZZN3tvm5relay11ExprFunc
  8: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::TupleNode const*)
  7: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  6: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  5: _ZZN3tvm5relay11ExprFunc
  4: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  3: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  2: tvm::relay::tec::LowerTensorExprMutator::ResolveToPrimitive(tvm::RelayExpr)
  1: tvm::IRModuleNode::Lookup(tvm::GlobalVar const&) const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/src/ir/module.cc", line 268
TVMError: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------
  Check failed: (it != functions.end()) is false: There is no definition of func_4724

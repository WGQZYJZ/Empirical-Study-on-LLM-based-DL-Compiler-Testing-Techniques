==========mod==========
#[version = "0.0.5"]
def @func_1354() -> Tensor[(7, 14, 7), float64] {
  %0 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %3 = log2(%2) /* ty=Tensor[(7, 14, 7), float32] */;
  %4 = cast(%3, dtype="float64") /* ty=Tensor[(7, 14, 7), float64] */;
  sin(%4) /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_4171(%var_4046: Tensor[(9, 11, 14), float32], %var_4047: Tensor[(9, 11, 14), float32]) -> (Tensor[(2145), float32], Tensor[(165), float64], Tensor[(9, 11, 14), int16], Tensor[(60, 12), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), int16]) {
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(60, 12), int64] */, dtype="int64") /* ty=Tensor[(60, 12), int64] */;
  %6 = reshape(%5, newshape=[10, 6, 12]) /* ty=Tensor[(10, 6, 12), int64] */;
  %7 = @func_2963(%6) /* ty=(Tensor[(10, 6, 12), int64], Tensor[(2145), float32]) */;
  %8 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
  %9 = cast(%var_4047, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
  %10 = shape_of(%var_4046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%var_4046, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %13 = power(%11, %12) /* ty=Tensor[(9, 11, 14), float32] */;
  %14 = cast(%var_4046, dtype="int16") /* ty=Tensor[(9, 11, 14), int16] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="int16") /* ty=Tensor[(9, 11, 14), int16] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(60, 12), int64] */, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
  %19 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(60, 12), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(60, 12), int64] */, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %22 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %23 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %24 = %23.1;
  %25 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %26 = %25.1;
  %27 = cast(%26, dtype="int16") /* ty=Tensor[(11, ?, 15), int16] */;
  %28 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%24, dtype="int16") /* ty=Tensor[(11, ?, 15), int16] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %31 = %7.1;
  %32 = %8.2;
  %33 = logical_xor(%16, %17) /* ty=Tensor[(9, 11, 14), int16] */;
  %34 = logical_or(%20, %21) /* ty=Tensor[(60, 12), bool] */;
  %35 = %22.0;
  %36 = bitwise_or(%29, %30) /* ty=Tensor[(11, ?, 15), int16] */;
  (%31, %32, %33, %34, %35, %36)
}

def @func_12892() -> Tensor[(7, 14, 7), float32] {
  @func_10669() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_12942() -> (Tensor[(11, ?, 15), float32],) {
  %37 = @func_12310() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %38 = %37.3;
  (%38,)
}

def @func_13073() -> Tensor[(7, 14, 7), float64] {
  %39 = @func_6003() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %39.0
}

def @func_971(%var_924: Tensor[(11, 13, 15), float32]) -> (Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) {
  %40 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %41 = %40.0;
  %42 = cast(%41, dtype="int8") /* ty=Tensor[(11, ?, 15), int8] */;
  %43 = cast(%var_924, dtype="int8") /* ty=Tensor[(11, 13, 15), int8] */;
  %44 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %45 = cast(%41, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %46 = reshape(%45, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %47 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %48 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %49 = add(%42, %43) /* ty=Tensor[(11, 13, 15), int8] */;
  %50 = %44.0;
  %51 = @func_290(%46) /* ty=Tensor[(11, ?, 15), float32] */;
  %52 = %47.0;
  %53 = %48.0;
  (%49, %50, %51, %52, %53)
}

def @func_12592() -> (Tensor[(7, 14, 7), float32],) {
  %54 = @func_5280() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %55 = %54.0;
  (%55,)
}

def @func_12038() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) {
  %56 = @func_8564() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
  %57 = @func_6425() /* ty=Tensor[(7, 14, 7), float32] */;
  %58 = %56.1;
  (%57, %58)
}

def @func_2031() -> Tensor[(7, 14, 7), float32] {
  %59 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %59.0
}

def @func_12079() -> Tensor[(11, ?, 15), float32] {
  %60 = @func_11163() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) */;
  %60.0
}

def @func_5074(%var_5051: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) {
  %61 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %62 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %63 = cast(%var_5051, dtype="float64") /* ty=Tensor[(325), float64] */;
  %64 = reshape(%63, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), float64] */;
  %65 = @func_2789(%64) /* ty=(Tensor[(5, 13, 5), float64],) */;
  %66 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %67 = %61.0;
  %68 = %62.0;
  %69 = @func_4477() /* ty=Tensor[(7, 14, 7), float32] */;
  %70 = %65.0;
  %71 = @func_4293() /* ty=Tensor[(7, 14, 7), float64] */;
  %72 = %66.1;
  (%67, %68, %69, %70, %var_5051, %71, %72)
}

def @func_4734() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %73 = @func_4342() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */;
  %74 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  %75 = %73.0;
  (%74, %75)
}

def @func_5993() -> (Tensor[(11, ?, 15), float32],) {
  %76 = @func_3371() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %77 = %76.0;
  (%77,)
}

def @func_9064() -> Tensor[(11, ?, 15), uint16] {
  %78 = @func_5323() /* ty=(Tensor[(11, ?, 15), uint16],) */;
  %78.0
}

def @func_8629(%var_8625: Tensor[(12, 3, 3), float64]) -> Tensor[(12, 3, 3), float64] {
  %79 = cast(%var_8625, dtype="float64") /* ty=Tensor[(12, 3, 3), float64] */;
  acosh(%79) /* ty=Tensor[(12, 3, 3), float64] */
}

def @func_5686() -> Tensor[(7, 14, 7), float32] {
  %80 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %80.0
}

def @func_12473() -> (Tensor[(11, ?, 15), float32],) {
  %81 = @func_5941() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float64]) */;
  %82 = %81.2;
  (%82,)
}

def @func_7870(%var_7829: Tensor[(4, 7, 13), float64]) -> (Tensor[(14, 10, 11), float32], Tensor[(4, 7, 13), float64], Tensor[(2145, 7), bool]) {
  %83 = cast(%var_7829, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %84 = acos(%83) /* ty=Tensor[(4, 7, 13), float64] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %86 = cast(meta[relay.Constant][2] /* ty=Tensor[(15015), float32] */, dtype="float32") /* ty=Tensor[(15015), float32] */;
  %87 = reshape(%86, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
  %88 = @func_1735(%87) /* ty=Tensor[(2145, 7), bool] */;
  %89 = cast(meta[relay.Constant][2] /* ty=Tensor[(15015), float32] */, dtype="bool") /* ty=Tensor[(15015), bool] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(2), int32] */;
  %91 = cast(%88, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %93 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  %94 = log2(%85) /* ty=Tensor[(4, 7, 13), float64] */;
  %95 = less_equal(%91, %92) /* ty=Tensor[(2145, 7), bool] */;
  (%93, %94, %95)
}

def @func_7932() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) {
  %96 = @func_4342() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */;
  %97 = @func_4026() /* ty=Tensor[(7, 14, 7), float64] */;
  %98 = %96.1;
  (%97, %98)
}

def @func_2295() -> Tensor[(14, 10, 11), float32] {
  %99 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %99.1
}

def @func_1945() -> (Tensor[(11, ?, 15), float32],) {
  %100 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %101 = %100.2;
  (%101,)
}

def @func_6393() -> Tensor[(11, ?, 15), float32] {
  %102 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %102.0
}

def @func_997() -> (Tensor[(11, ?, 15), float32],) {
  %103 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %104 = %103.0;
  (%104,)
}

def @func_3724() -> (Tensor[(11, ?, 15), float32],) {
  %105 = @func_2762() /* ty=Tensor[(11, ?, 15), float32] */;
  (%105,)
}

def @func_1206() -> (Tensor[(11, ?, 15), float32],) {
  %106 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %107 = %106.0;
  (%107,)
}

def @func_6122() -> (Tensor[(11, ?, 15), bool],) {
  %108 = @func_3548() /* ty=Tensor[(11, ?, 15), bool] */;
  (%108,)
}

def @func_6667(%var_6651: Tensor[(4, 16, 12), float32], %var_6652: Tensor[(4, 16, 12), float32], %var_6661: Tensor[(45), int32]) -> (Tensor[(7, 14, 7), float64], Tensor[(5, 3, 15), int32], Tensor[(45), int32], Tensor[(5, 45), int32], Tensor[(4, 16, 12), int64]) {
  %109 = cast(%var_6661, dtype="int32") /* ty=Tensor[(45), int32] */;
  %110 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 45), int32] */, dtype="int32") /* ty=Tensor[(5, 45), int32] */;
  %111 = reshape(%109, newshape=[1, 3, 15]) /* ty=Tensor[(1, 3, 15), int32] */;
  %112 = reshape(%110, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %113 = @func_5670(%111, %112) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(7, 14, 7), float64]) */;
  %114 = cast(%var_6652, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %115 = shape_of(%var_6651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%var_6651, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %118 = power(%116, %117) /* ty=Tensor[(4, 16, 12), float32] */;
  %119 = cast(%var_6652, dtype="int64") /* ty=Tensor[(4, 16, 12), int64] */;
  %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%118, dtype="int64") /* ty=Tensor[(4, 16, 12), int64] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %123 = @func_5627() /* ty=Tensor[(7, 14, 7), float64] */;
  %124 = %113.0;
  %125 = bitwise_or(%121, %122) /* ty=Tensor[(4, 16, 12), int64] */;
  (%123, %124, %var_6661, meta[relay.Constant][3] /* ty=Tensor[(5, 45), int32] */, %125)
}

def @func_2018() -> (Tensor[(11, ?, 15), bool],) {
  %126 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  %127 = cast(%126, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %128 = erf(%127) /* ty=Tensor[(11, ?, 15), float32] */;
  %129 = cast(%126, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%128, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %133 = greater(%131, %132) /* ty=Tensor[(11, ?, 15), bool] */;
  (%133,)
}

def @func_7381() -> (Tensor[(7, 14, 7), float64],) {
  %134 = @func_1879() /* ty=Tensor[(7, 14, 7), float64] */;
  (%134,)
}

def @func_5627() -> Tensor[(7, 14, 7), float64] {
  %135 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %136 = %135.1;
  %137 = cast(%136, dtype="float64") /* ty=Tensor[(7, 14, 7), float64] */;
  acosh(%137) /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_7625(%var_7616: Tensor[(11, 8, 8), int32], %var_7617: Tensor[(11, 8, 8), int32]) -> Tensor[(11, 8, 8), bool] {
  %138 = cast(%var_7617, dtype="bool") /* ty=Tensor[(11, 8, 8), bool] */;
  %139 = shape_of(%var_7616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%var_7616, dtype="bool") /* ty=Tensor[(11, 8, 8), bool] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%140, %141) /* ty=Tensor[(11, 8, 8), bool] */
}

def @func_12573() -> Tensor[(11, ?, 15), float32] {
  %142 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %142.0
}

def @func_7453() -> (Tensor[(7, 14, 7), float64],) {
  %143 = @func_1354() /* ty=Tensor[(7, 14, 7), float64] */;
  (%143,)
}

def @func_8402(%var_8397: Tensor[(15, 13, 13), float32]) -> Tensor[(15, 13, 13), float32] {
  %144 = cast(%var_8397, dtype="float32") /* ty=Tensor[(15, 13, 13), float32] */;
  sigmoid(%144) /* ty=Tensor[(15, 13, 13), float32] */
}

def @func_8524() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) {
  %145 = @func_7350() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %146 = %145.0;
  %147 = @func_7780() /* ty=Tensor[(7, 14, 7), float64] */;
  (%146, %147)
}

def @func_7678() -> (Tensor[(7, 14, 7), float32],) {
  %148 = @func_5686() /* ty=Tensor[(7, 14, 7), float32] */;
  (%148,)
}

def @func_3371() -> (Tensor[(11, ?, 15), float32],) {
  %149 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %150 = %149.0;
  (%150,)
}

def @func_8231() -> (Tensor[(11, ?, 15), float32],) {
  %151 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %152 = %151.0;
  (%152,)
}

def @func_11951() -> (Tensor[(11, 6, 15), bool],) {
  %153 = @func_5993() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %154 = %153.0;
  %155 = cast(%154, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %156 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 6, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %157 = less(%155, %156) /* ty=Tensor[(11, 6, 15), bool] */;
  (%157,)
}

def @func_12863() -> (Tensor[(14, 10, 11), float32],) {
  %158 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %159 = %158.0;
  (%159,)
}

def @func_8262() -> (Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %160 = @func_2650() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %161 = @func_6891() /* ty=Tensor[(14, 10, 11), float32] */;
  %162 = %160.0;
  %163 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  (%161, %162, %163)
}

def @main() -> Tensor[(5, 16, 11), bool] {
  %164 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 16, 11), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
  %165 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(5, 16, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 16, 11), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%166, %167) /* ty=Tensor[(5, 16, 11), bool] */
}

def @func_739() -> (Tensor[(11, ?, 15), float32],) {
  %168 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
  %169 = %168.2;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(165), float64] */;
  %171 = reshape(%170, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %172 = @func_290(%171) /* ty=Tensor[(11, ?, 15), float32] */;
  %173 = cast(%169, dtype="float32") /* ty=Tensor[(165), float32] */;
  %174 = shape_of(%172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%172, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %177 = floor_mod(%175, %176) /* ty=Tensor[(11, ?, 15), float32] */;
  (%177,)
}

def @func_8538() -> Tensor[(11, ?, 15), float32] {
  %178 = @func_5101() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %178.0
}

def @func_6487() -> Tensor[(14, 10, 11), float32] {
  %179 = @func_4868() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32]) */;
  %179.2
}

def @func_1086() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) {
  %180 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %181 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
  %182 = %180.0;
  %183 = %181.0;
  (%182, %183)
}

def @func_11256() -> (Tensor[(11, ?, 15), float32],) {
  %184 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %185 = %184.0;
  (%185,)
}

def @func_11314() -> (Tensor[(7, 14, 7), float32],) {
  %186 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
  (%186,)
}

def @func_12062(%var_12058: int16, %var_12059: Tensor[(112), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(8, 7, 2), float32], int16, Tensor[(112), float32]) {
  %187 = cast(%var_12058, dtype="int16") /* ty=int16 */;
  %188 = cast(%var_12059, dtype="float32") /* ty=Tensor[(112), float32] */;
  %189 = reshape(%187, newshape=[]) /* ty=int16 */;
  %190 = reshape(%188, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), float32] */;
  %191 = @func_5686() /* ty=Tensor[(7, 14, 7), float32] */;
  %192 = @func_10105(%189, %190) /* ty=Tensor[(8, 7, 2), float32] */;
  (%191, %192, %var_12058, %var_12059)
}

def @func_9829() -> (Tensor[(11, ?, 15), float32],) {
  %193 = @func_1765() /* ty=Tensor[(11, ?, 15), float32] */;
  (%193,)
}

def @func_12996() -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), int16], Tensor[(1386), float32]) {
  %194 = cast(meta[relay.Constant][7] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %195 = cast(meta[relay.Constant][7] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %196 = reshape(%194, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
  %197 = reshape(%195, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
  %198 = @func_4171(%196, %197) /* ty=(Tensor[(2145), float32], Tensor[(165), float64], Tensor[(9, 11, 14), int16], Tensor[(60, 12), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), int16]) */;
  %199 = @func_7780() /* ty=Tensor[(7, 14, 7), float64] */;
  %200 = @func_3548() /* ty=Tensor[(11, ?, 15), bool] */;
  %201 = %198.5;
  (%199, %200, %201, meta[relay.Constant][7] /* ty=Tensor[(1386), float32] */)
}

def @func_2963(%var_2950: Tensor[(10, 6, 12), int64]) -> (Tensor[(10, 6, 12), int64], Tensor[(2145), float32]) {
  %202 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 1, 12), int64] */, dtype="int64") /* ty=Tensor[(10, 1, 12), int64] */;
  %203 = cast(%var_2950, dtype="int64") /* ty=Tensor[(10, 6, 12), int64] */;
  %204 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %205 = bitwise_xor(%202, %203) /* ty=Tensor[(10, 6, 12), int64] */;
  %206 = %204.2;
  (%205, %206)
}

def @func_1178() -> (Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) {
  %207 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %208 = %207.0;
  %209 = cast(%208, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %210 = atan(%209) /* ty=Tensor[(11, ?, 15), float64] */;
  %211 = cast(%208, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %212 = reshape(%211, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %213 = @func_290(%212) /* ty=Tensor[(11, ?, 15), float32] */;
  %214 = cast(%213, dtype="int64") /* ty=Tensor[(11, ?, 15), int64] */;
  %215 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%210, dtype="int64") /* ty=Tensor[(11, ?, 15), int64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %218 = cast(meta[relay.Constant][9] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %219 = reshape(%218, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), float32] */;
  %220 = @func_971(%219) /* ty=(Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */;
  %221 = right_shift(%216, %217) /* ty=Tensor[(11, ?, 15), int64] */;
  %222 = %220.3;
  (%221, %222, meta[relay.Constant][9] /* ty=Tensor[(2145, 1), float32] */)
}

def @func_6783() -> (Tensor[(11, ?, 15), float32], Tensor[(96), float32], Tensor[(8, 2, 6), float32]) {
  %223 = cast(meta[relay.Constant][10] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %224 = reshape(%223, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float32] */;
  %225 = @func_6238(%224) /* ty=Tensor[(8, 2, 6), float32] */;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %227 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
  %228 = log2(%226) /* ty=Tensor[(8, 2, 6), float32] */;
  (%227, meta[relay.Constant][10] /* ty=Tensor[(96), float32] */, %228)
}

def @func_4430() -> (Tensor[(2145, 7), bool], Tensor[(15015), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), uint64], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float64]) {
  %229 = cast(meta[relay.Constant][11] /* ty=Tensor[(15015), float32] */, dtype="float32") /* ty=Tensor[(15015), float32] */;
  %230 = reshape(%229, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
  %231 = @func_2091() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %232 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %233 = %232.0;
  %234 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %235 = %234.0;
  %236 = cast(%235, dtype="uint64") /* ty=Tensor[(11, ?, 15), uint64] */;
  %237 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%233, dtype="uint64") /* ty=Tensor[(11, ?, 15), uint64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %240 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %241 = bitwise_and(%238, %239) /* ty=Tensor[(11, ?, 15), uint64] */;
  %242 = cast(%241, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %243 = reshape(%242, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %244 = @func_290(%243) /* ty=Tensor[(11, ?, 15), float32] */;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %246 = @func_1735(%230) /* ty=Tensor[(2145, 7), bool] */;
  %247 = %231.0;
  %248 = %240.1;
  %249 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
  %250 = cos(%245) /* ty=Tensor[(11, ?, 15), float64] */;
  (%246, meta[relay.Constant][11] /* ty=Tensor[(15015), float32] */, %247, %241, %248, %249, %250)
}

def @func_8944() -> Tensor[(14, 10, 11), float32] {
  %251 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
  %251.0
}

def @func_1268() -> Tensor[(11, ?, 15), float32] {
  %252 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %253 = %252.0;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %255 = asinh(%254) /* ty=Tensor[(11, ?, 15), float64] */;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %257 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%253, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%258, %259) /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_11520() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) {
  %260 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
  %261 = @func_1354() /* ty=Tensor[(7, 14, 7), float64] */;
  (%260, %261)
}

def @func_11339() -> Tensor[(7, 14, 7), float32] {
  @func_3412() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_11549() -> Tensor[(7, 14, 7), float64] {
  %262 = @func_3300() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %262.0
}

def @func_2914() -> (Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) {
  %263 = @func_2091() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %264 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
  %265 = %263.0;
  %266 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
  %267 = @func_2762() /* ty=Tensor[(11, ?, 15), float32] */;
  (%264, %265, %266, %267)
}

def @func_8040() -> (Tensor[(14, 10, 11), float32],) {
  %268 = @func_2295() /* ty=Tensor[(14, 10, 11), float32] */;
  (%268,)
}

def @func_9100() -> (Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
  %269 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %270 = @func_8040() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %271 = %269.0;
  %272 = %270.0;
  (%271, %272)
}

def @func_5493() -> (Tensor[(11, ?, 15), float32],) {
  %273 = @func_2762() /* ty=Tensor[(11, ?, 15), float32] */;
  (%273,)
}

def @func_6003() -> (Tensor[(7, 14, 7), float64],) {
  %274 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
  (%274,)
}

def @func_10328() -> Tensor[(7, 14, 7), float32] {
  %275 = @func_4519() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %275.0
}

def @func_11883() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %276 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %277 = @func_5000() /* ty=(Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) */;
  %278 = %276.0;
  %279 = %277.1;
  (%278, %279)
}

def @func_2524(%var_2512: Tensor[(14, 10, 11), float32]) -> (Tensor[(14, 10, 11), bool],) {
  %280 = @func_1035() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %281 = %280.1;
  %282 = cast(%var_2512, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%281, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %286 = greater_equal(%284, %285) /* ty=Tensor[(14, 10, 11), bool] */;
  (%286,)
}

def @func_11974() -> (Tensor[(7, 14, 7), float32],) {
  %287 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %288 = %287.1;
  (%288,)
}

def @func_11584() -> Tensor[(7, 14, 7), float32] {
  %289 = @func_7229() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %289.0
}

def @func_1035() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) {
  %290 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %291 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
  %292 = %291.0;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %294 = %290.0;
  %295 = tan(%293) /* ty=Tensor[(14, 10, 11), float32] */;
  (%294, %295)
}

def @func_5323() -> (Tensor[(11, ?, 15), uint16],) {
  %296 = @func_1855() /* ty=(Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %297 = %296.0;
  (%297,)
}

def @func_10005(%var_9993: Tensor[(34320), int32]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(660), float32], Tensor[(34320), int32]) {
  %298 = @func_7776() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %299 = @func_3371() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %300 = @func_7381() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %301 = cast(meta[relay.Constant][12] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %302 = cast(%var_9993, dtype="int32") /* ty=Tensor[(34320), int32] */;
  %303 = reshape(%301, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float32] */;
  %304 = reshape(%302, newshape=[34320]) /* ty=Tensor[(34320), int32] */;
  %305 = @func_7480(%303, %304) /* ty=(Tensor[(11, 4, 15), int8], Tensor[(11, ?, 15), float64], Tensor[(7, 14, 7), float32], Tensor[(34320), int32], Tensor[(14, 10, 11), float32]) */;
  %306 = %298.1;
  %307 = %299.0;
  %308 = %300.0;
  %309 = %305.2;
  (%306, %307, %308, %309, meta[relay.Constant][12] /* ty=Tensor[(660), float32] */, %var_9993)
}

def @func_12531() -> (Tensor[(15, 15, 10), bool], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
  %310 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 15, 10), int16] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
  %311 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 15, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 15, 10), int16] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = @func_4519() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %315 = less_equal(%312, %313) /* ty=Tensor[(15, 15, 10), bool] */;
  %316 = %314.0;
  %317 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  (%315, %316, %317)
}

def @func_2266() -> Tensor[(11, ?, 15), float32] {
  %318 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %318.0
}

def @func_12739() -> Tensor[(11, ?, 15), bool] {
  %319 = @func_2091() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %319.0
}

def @func_3412() -> Tensor[(7, 14, 7), float32] {
  %320 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %320.1
}

def @func_10487() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) {
  %321 = @func_4934() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %322 = cast(meta[relay.Constant][15] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %323 = reshape(%322, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %324 = @func_2524(%323) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %325 = @func_7320() /* ty=Tensor[(7, 14, 7), float32] */;
  %326 = %321.0;
  %327 = %324.0;
  (%325, %326, %327, meta[relay.Constant][15] /* ty=Tensor[(1540), float32] */)
}

def @func_2091() -> (Tensor[(11, ?, 15), bool],) {
  %328 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %329 = %328.0;
  (%329,)
}

def @func_5941() -> (Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float64]) {
  %330 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
  %331 = @func_3924() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %332 = %331.1;
  %333 = cast(%332, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %334 = reshape(%333, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %335 = @func_290(%334) /* ty=Tensor[(11, ?, 15), float32] */;
  %336 = cast(%335, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %337 = %330.0;
  %338 = @func_2031() /* ty=Tensor[(7, 14, 7), float32] */;
  %339 = sigmoid(%336) /* ty=Tensor[(11, ?, 15), float64] */;
  (%337, %338, %332, %339)
}

def @func_5670(%var_5635: Tensor[(1, 3, 15), int32], %var_5636: Tensor[(5, 3, 15), int32]) -> (Tensor[(5, 3, 15), int32], Tensor[(7, 14, 7), float64]) {
  %340 = cast(%var_5635, dtype="int32") /* ty=Tensor[(1, 3, 15), int32] */;
  %341 = cast(%var_5636, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
  %342 = add(%340, %341) /* ty=Tensor[(5, 3, 15), int32] */;
  %343 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
  (%342, %343)
}

def @func_7418() -> (Tensor[(2310), float32],) {
  %344 = @func_4266() /* ty=(Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) */;
  %345 = %344.1;
  (%345,)
}

def @func_7600(%var_7583: Tensor[(5, 10, 16), float64]) -> Tensor[(5, 10, 16), float64] {
  %346 = cast(%var_7583, dtype="float64") /* ty=Tensor[(5, 10, 16), float64] */;
  cos(%346) /* ty=Tensor[(5, 10, 16), float64] */
}

def @func_10828() -> Tensor[(14, 10, 11), float32] {
  %347 = @func_6110() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %347.1
}

def @func_12157(%var_12123: Tensor[(320, 4), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(320, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %348 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %349 = cast(%var_12123, dtype="float64") /* ty=Tensor[(320, 4), float64] */;
  %350 = reshape(%349, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %351 = @func_9199(%350) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) */;
  %352 = cast(meta[relay.Constant][16] /* ty=Tensor[(320, 4), float64] */, dtype="bool") /* ty=Tensor[(320, 4), bool] */;
  %353 = shape_of(%var_12123, dtype="int32") /* ty=Tensor[(2), int32] */;
  %354 = cast(%var_12123, dtype="bool") /* ty=Tensor[(320, 4), bool] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %356 = not_equal(%354, %355) /* ty=Tensor[(320, 4), bool] */;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(320, 4), float32] */;
  %358 = shape_of(%var_12123, dtype="int32") /* ty=Tensor[(2), int32] */;
  %359 = cast(%var_12123, dtype="float32") /* ty=Tensor[(320, 4), float32] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %361 = @func_8262() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %362 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %363 = %348.0;
  %364 = %351.0;
  %365 = mod(%359, %360) /* ty=Tensor[(320, 4), float32] */;
  %366 = %361.2;
  %367 = %362.0;
  (%363, %364, %365, %366, %367)
}

def @func_2352() -> (Tensor[(11, ?, 15), float32],) {
  %368 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %369 = %368.0;
  (%369,)
}

def @func_9199(%var_9184: Tensor[(1280), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) {
  %370 = @func_8231() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %371 = cast(%var_9184, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %372 = reshape(%371, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), float64] */;
  %373 = @func_3109(%372) /* ty=(Tensor[(14, 10, 11), bool], Tensor[(1, 1540), float32], Tensor[(11, ?, 15), uint16], Tensor[(2145, 1), float32], Tensor[(16, 10, 8), float64]) */;
  %374 = %370.0;
  %375 = %373.2;
  (%374, %375, %var_9184)
}

def @func_8343() -> (Tensor[(11, ?, 15), float32],) {
  %376 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
  (%376,)
}

def @func_7350() -> (Tensor[(7, 14, 7), float64],) {
  %377 = @func_5961() /* ty=Tensor[(7, 14, 7), float64] */;
  (%377,)
}

def @func_10375(%var_10363: Tensor[(910, 2), float32], %var_10364: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 13), float64], Tensor[(325), float64], Tensor[(910, 2), float32]) {
  %378 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %379 = cast(%var_10363, dtype="float32") /* ty=Tensor[(910, 2), float32] */;
  %380 = cast(%var_10364, dtype="float64") /* ty=Tensor[(325), float64] */;
  %381 = reshape(%379, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
  %382 = reshape(%380, newshape=[325]) /* ty=Tensor[(325), float64] */;
  %383 = @func_4614(%381, %382) /* ty=(Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) */;
  %384 = cast(%var_10363, dtype="float32") /* ty=Tensor[(910, 2), float32] */;
  %385 = %378.0;
  %386 = %383.3;
  %387 = sin(%384) /* ty=Tensor[(910, 2), float32] */;
  (%385, %386, %var_10364, %387)
}

def @func_4934() -> (Tensor[(7, 14, 7), float32],) {
  %388 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
  (%388,)
}

def @func_5101() -> (Tensor[(11, ?, 15), float32],) {
  %389 = @func_1765() /* ty=Tensor[(11, ?, 15), float32] */;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %391 = rsqrt(%390) /* ty=Tensor[(11, ?, 15), float32] */;
  (%391,)
}

def @func_2460() -> Tensor[(11, ?, 15), float32] {
  %392 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %392.0
}

def @func_6594() -> Tensor[(11, ?, 15), bool] {
  @func_3548() /* ty=Tensor[(11, ?, 15), bool] */
}

def @func_5235(%var_5230: Tensor[(16, 11, 7), int32], %var_5231: Tensor[(16, 11, 7), int32]) -> Tensor[(16, 11, 7), int32] {
  %393 = cast(%var_5231, dtype="int32") /* ty=Tensor[(16, 11, 7), int32] */;
  %394 = shape_of(%var_5230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_5230, dtype="int32") /* ty=Tensor[(16, 11, 7), int32] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%395, %396) /* ty=Tensor[(16, 11, 7), int32] */
}

def @func_4868() -> (Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32]) {
  %397 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %398 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
  %399 = %398.0;
  %400 = cast(%399, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %401 = reshape(%400, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %402 = @func_1804(%401) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %403 = %402.0;
  %404 = cast(%403, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %405 = %397.3;
  %406 = sqrt(%404) /* ty=Tensor[(14, 10, 11), float32] */;
  (%405, %399, %406)
}

def @func_3891(%var_3858: Tensor[(2145, 14), float32]) -> (Tensor[(2145, 14), uint8], Tensor[(2145, 14), uint32], Tensor[(2145, 9), float32]) {
  %407 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %408 = %407.2;
  %409 = cast(%408, dtype="uint8") /* ty=Tensor[(2145, 1), uint8] */;
  %410 = cast(%var_3858, dtype="uint8") /* ty=Tensor[(2145, 14), uint8] */;
  %411 = cast(%408, dtype="uint32") /* ty=Tensor[(2145, 1), uint32] */;
  %412 = cast(%var_3858, dtype="uint32") /* ty=Tensor[(2145, 14), uint32] */;
  %413 = cast(%408, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %414 = cast(meta[relay.Constant][17] /* ty=Tensor[(2145, 9), float32] */, dtype="float32") /* ty=Tensor[(2145, 9), float32] */;
  %415 = minimum(%409, %410) /* ty=Tensor[(2145, 14), uint8] */;
  %416 = logical_xor(%411, %412) /* ty=Tensor[(2145, 14), uint32] */;
  %417 = mod(%413, %414) /* ty=Tensor[(2145, 9), float32] */;
  (%415, %416, %417)
}

def @func_4458() -> Tensor[(2145, 16), int32] {
  %418 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %419 = %418.2;
  %420 = cast(%419, dtype="int32") /* ty=Tensor[(2145, 1), int32] */;
  %421 = cast(meta[relay.Constant][18] /* ty=Tensor[(2145, 16), float32] */, dtype="int32") /* ty=Tensor[(2145, 16), int32] */;
  bitwise_or(%420, %421) /* ty=Tensor[(2145, 16), int32] */
}

def @func_6891() -> Tensor[(14, 10, 11), float32] {
  @func_3984() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_1765() -> Tensor[(11, ?, 15), float32] {
  %422 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %422.0
}

def @func_12449() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 7), float64]) {
  %423 = @func_11520() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) */;
  %424 = @func_4843() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) */;
  %425 = %424.1;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(2145, 7), float64] */;
  %427 = atan(%426) /* ty=Tensor[(2145, 7), float64] */;
  %428 = cast(%427, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
  %429 = shape_of(%425, dtype="int32") /* ty=Tensor[(2), int32] */;
  %430 = cast(%425, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %432 = greater(%430, %431) /* ty=Tensor[(2145, 7), bool] */;
  %433 = cast(%427, dtype="float64") /* ty=Tensor[(2145, 7), float64] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(2), int32] */;
  %435 = cast(%432, dtype="float64") /* ty=Tensor[(2145, 7), float64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %437 = %423.0;
  %438 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
  %439 = @func_10669() /* ty=Tensor[(7, 14, 7), float32] */;
  %440 = floor_divide(%435, %436) /* ty=Tensor[(2145, 7), float64] */;
  (%437, %438, %439, %440)
}

def @func_2789(%var_2780: Tensor[(5, 13, 5), float64]) -> (Tensor[(5, 13, 5), float64],) {
  %441 = cast(%var_2780, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
  %442 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(5, 13, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %445 = floor_mod(%443, %444) /* ty=Tensor[(5, 13, 5), float64] */;
  (%445,)
}

def @func_660(%var_628: Tensor[(8, 2, 8), uint64], %var_629: Tensor[(8, 2, 8), uint64]) -> (Tensor[(8, 2, 8), uint64],) {
  %446 = cast(%var_629, dtype="uint64") /* ty=Tensor[(8, 2, 8), uint64] */;
  %447 = shape_of(%var_628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%var_628, dtype="uint64") /* ty=Tensor[(8, 2, 8), uint64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %450 = left_shift(%448, %449) /* ty=Tensor[(8, 2, 8), uint64] */;
  (%450,)
}

def @func_8564() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) {
  %451 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
  %452 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
  (%451, %452)
}

def @func_2321() -> Tensor[(7, 14, 7), float64] {
  @func_1879() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_6425() -> Tensor[(7, 14, 7), float32] {
  @func_4477() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_9261(%var_9243: Tensor[(12, 3, 10), int16]) -> (Tensor[(12, 3, 10), bool], Tensor[(14, 10, 11), float32]) {
  %453 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 3, 10), int16] */, dtype="bool") /* ty=Tensor[(1, 3, 10), bool] */;
  %454 = cast(%var_9243, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %455 = not_equal(%453, %454) /* ty=Tensor[(12, 3, 10), bool] */;
  %456 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  (%455, %456)
}

def @func_7046() -> (Tensor[(11, ?, 15), bool],) {
  %457 = @func_4843() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) */;
  %458 = %457.0;
  (%458,)
}

def @func_3734() -> (Tensor[(11, ?, 15), float32],) {
  %459 = @func_3724() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %460 = %459.0;
  (%460,)
}

def @func_3235() -> (Tensor[(11, ?, 15), float32],) {
  %461 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %462 = %461.0;
  (%462,)
}

def @func_7776() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %463 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %464 = @func_6425() /* ty=Tensor[(7, 14, 7), float32] */;
  %465 = %463.0;
  (%464, %465)
}

def @func_12219() -> (Tensor[(7, 14, 7), float32],) {
  %466 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %467 = %466.0;
  (%467,)
}

def @func_9007() -> (Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015, 1), float32]) {
  %468 = @func_7046() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %469 = cast(meta[relay.Constant][21] /* ty=Tensor[(15015, 1), float32] */, dtype="float32") /* ty=Tensor[(15015, 1), float32] */;
  %470 = reshape(%469, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
  %471 = %468.0;
  %472 = @func_1735(%470) /* ty=Tensor[(2145, 7), bool] */;
  (%471, %472, meta[relay.Constant][21] /* ty=Tensor[(15015, 1), float32] */)
}

def @func_9649() -> (Tensor[(11, ?, 15), float32],) {
  %473 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
  (%473,)
}

def @func_1482(%var_1450: Tensor[(11, 14, 15), float32]) -> (Tensor[(11, 14, 15), uint8], Tensor[(11, ?, 15), float32], Tensor[(11, 14, 15), int8], Tensor[(7, 14, 7), float32]) {
  %474 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %475 = %474.0;
  %476 = cast(%475, dtype="uint8") /* ty=Tensor[(11, ?, 15), uint8] */;
  %477 = cast(%var_1450, dtype="uint8") /* ty=Tensor[(11, 14, 15), uint8] */;
  %478 = cast(%475, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %479 = reshape(%478, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %480 = cast(%475, dtype="int8") /* ty=Tensor[(11, ?, 15), int8] */;
  %481 = cast(%var_1450, dtype="int8") /* ty=Tensor[(11, 14, 15), int8] */;
  %482 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %483 = bitwise_or(%476, %477) /* ty=Tensor[(11, 14, 15), uint8] */;
  %484 = @func_290(%479) /* ty=Tensor[(11, ?, 15), float32] */;
  %485 = left_shift(%480, %481) /* ty=Tensor[(11, 14, 15), int8] */;
  %486 = %482.0;
  (%483, %484, %485, %486)
}

def @func_9813() -> Tensor[(7, 14, 7), float32] {
  @func_2031() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_2656() -> (Tensor[(11, ?, 15), float32],) {
  %487 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  (%487,)
}

def @func_10591() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %488 = @func_7381() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %489 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %490 = %488.0;
  %491 = @func_7320() /* ty=Tensor[(7, 14, 7), float32] */;
  %492 = %489.0;
  (%490, %491, %492)
}

def @func_7079() -> Tensor[(11, ?, 15), float32] {
  %493 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %493.0
}

def @func_10105(%var_10061: int16, %var_10072: Tensor[(8, 7, 2), float32]) -> Tensor[(8, 7, 2), float32] {
  %494 = cast(%var_10061, dtype="int16") /* ty=int16 */;
  %495 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 2), int16] */;
  %496 = left_shift(%494, %495) /* ty=Tensor[(8, 7, 2), int16] */;
  %497 = cast(%496, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %498 = exp(%497) /* ty=Tensor[(8, 7, 2), float32] */;
  %499 = cast(%var_10072, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %503 = divide(%501, %502) /* ty=Tensor[(8, 7, 2), float32] */;
  %504 = cast(%503, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  log(%504) /* ty=Tensor[(8, 7, 2), float32] */
}

def @func_8588() -> Tensor[(11, ?, 15), bool] {
  %505 = @func_2914() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) */;
  %505.0
}

def @func_11217() -> Tensor[(14, 10, 11), float32] {
  %506 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %506.0
}

def @func_12196() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) {
  %507 = @func_4550() /* ty=Tensor[(7, 14, 7), float32] */;
  %508 = @func_4026() /* ty=Tensor[(7, 14, 7), float64] */;
  (%507, %508)
}

def @func_12021(%var_12006: Tensor[(15015, 5), float32]) -> (Tensor[(15015, 5), int16],) {
  %509 = @func_9007() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015, 1), float32]) */;
  %510 = %509.2;
  %511 = cast(%510, dtype="int16") /* ty=Tensor[(15015, 1), int16] */;
  %512 = cast(%var_12006, dtype="int16") /* ty=Tensor[(15015, 5), int16] */;
  %513 = logical_xor(%511, %512) /* ty=Tensor[(15015, 5), int16] */;
  (%513,)
}

def @func_7320() -> Tensor[(7, 14, 7), float32] {
  @func_5307() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_9886(%var_9842: Tensor[(11, 4, 15), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(11, 4, 15), bool]) {
  %514 = @func_7932() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
  %515 = @func_1945() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %516 = %515.0;
  %517 = cast(%516, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %518 = cast(%var_9842, dtype="float32") /* ty=Tensor[(11, 4, 15), float32] */;
  %519 = floor_divide(%517, %518) /* ty=Tensor[(11, 4, 15), float32] */;
  %520 = cast(%519, dtype="int16") /* ty=Tensor[(11, 4, 15), int16] */;
  %521 = shape_of(%var_9842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_9842, dtype="int16") /* ty=Tensor[(11, 4, 15), int16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %524 = maximum(%522, %523) /* ty=Tensor[(11, 4, 15), int16] */;
  %525 = cast(%var_9842, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%524, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %529 = %514.1;
  %530 = logical_or(%527, %528) /* ty=Tensor[(11, 4, 15), bool] */;
  (%529, %530)
}

def @func_11825() -> Tensor[(7, 14, 7), float32] {
  %531 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %531.0
}

def @func_5568() -> (Tensor[(7, 14, 7), float32],) {
  %532 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %533 = %532.0;
  (%533,)
}

def @func_5339(%var_5335: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), int64], Tensor[(325), float64], Tensor[(1820), float32], Tensor[(325), float64]) {
  %534 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %535 = cast(meta[relay.Constant][23] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %536 = cast(%var_5335, dtype="float64") /* ty=Tensor[(325), float64] */;
  %537 = reshape(%535, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
  %538 = reshape(%536, newshape=[325]) /* ty=Tensor[(325), float64] */;
  %539 = @func_4614(%537, %538) /* ty=(Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) */;
  %540 = %534.0;
  %541 = %539.1;
  (%540, %541, meta[relay.Constant][23] /* ty=Tensor[(1820), float32] */, %var_5335)
}

def @func_5374() -> (Tensor[(7, 14, 7), float32],) {
  %542 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
  (%542,)
}

def @func_6296() -> Tensor[(11, ?, 15), float32] {
  %543 = @func_5493() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %543.0
}

def @func_6987(%var_6963: Tensor[(14, 10, 11), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float64]) {
  %544 = @func_5280() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %545 = %544.0;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %547 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %548 = @func_6891() /* ty=Tensor[(14, 10, 11), float32] */;
  %549 = cast(%var_6963, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %553 = cast(%548, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %554 = sigmoid(%546) /* ty=Tensor[(7, 14, 7), float32] */;
  %555 = %547.0;
  %556 = floor_divide(%551, %552) /* ty=Tensor[(14, 10, 11), float64] */;
  %557 = asinh(%553) /* ty=Tensor[(14, 10, 11), float64] */;
  (%554, %555, %556, %557)
}

def @func_9221(%var_9211: Tensor[(4, 14, 7), float32]) -> Tensor[(4, 14, 7), float32] {
  %558 = cast(%var_9211, dtype="float32") /* ty=Tensor[(4, 14, 7), float32] */;
  asin(%558) /* ty=Tensor[(4, 14, 7), float32] */
}

def @func_3634() -> (Tensor[(7, 14, 7), float32],) {
  %559 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %560 = %559.0;
  (%560,)
}

def @func_5899() -> Tensor[(7, 14, 7), float32] {
  %561 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  asin(%563) /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_12700() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %564 = @func_3235() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %565 = @func_3924() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %566 = @func_3734() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %567 = @func_7175() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) */;
  %568 = @func_6425() /* ty=Tensor[(7, 14, 7), float32] */;
  %569 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
  %570 = %564.0;
  %571 = %565.1;
  %572 = %566.0;
  %573 = %567.4;
  (%568, %569, %570, %571, %572, %573)
}

def @func_8883(%var_8819: Tensor[(96), float32], %var_8840: Tensor[(108), float64]) -> (Tensor[(7, 14, 7), float64], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(11, ?, 15), uint16], Tensor[(12, 3, 3), float64], Tensor[(108), float64], Tensor[(2145, 16), int32], Tensor[(11, ?, 15), float32]) {
  %574 = @func_8524() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) */;
  %575 = cast(%var_8819, dtype="float32") /* ty=Tensor[(96), float32] */;
  %576 = reshape(%575, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float32] */;
  %577 = @func_5323() /* ty=(Tensor[(11, ?, 15), uint16],) */;
  %578 = cast(%var_8840, dtype="float64") /* ty=Tensor[(108), float64] */;
  %579 = reshape(%578, newshape=[12, 3, 3]) /* ty=Tensor[(12, 3, 3), float64] */;
  %580 = @func_4458() /* ty=Tensor[(2145, 16), int32] */;
  %581 = cast(%580, dtype="int32") /* ty=Tensor[(2145, 16), int32] */;
  %582 = reshape(%581, newshape=[2145, 16]) /* ty=Tensor[(2145, 16), int32] */;
  %583 = @func_6853(%582) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) */;
  %584 = %574.0;
  %585 = @func_6238(%576) /* ty=Tensor[(8, 2, 6), float32] */;
  %586 = %577.0;
  %587 = @func_8629(%579) /* ty=Tensor[(12, 3, 3), float64] */;
  %588 = %583.0;
  (%584, %585, %var_8819, %586, %587, %var_8840, %580, %588)
}

def @func_7010() -> Tensor[(7, 14, 7), float32] {
  @func_5686() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_1804(%var_1788: Tensor[(14, 10, 11), float32]) -> (Tensor[(14, 10, 11), bool],) {
  %589 = @func_1035() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %590 = %589.1;
  %591 = cast(%var_1788, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%590, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %595 = less(%593, %594) /* ty=Tensor[(14, 10, 11), bool] */;
  (%595,)
}

def @func_9163() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %596 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %597 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
  %598 = %596.0;
  (%597, %598)
}

def @func_4843() -> (Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) {
  %599 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %600 = cast(meta[relay.Constant][24] /* ty=Tensor[(15015), float32] */, dtype="float32") /* ty=Tensor[(15015), float32] */;
  %601 = reshape(%600, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
  %602 = %599.0;
  %603 = @func_1735(%601) /* ty=Tensor[(2145, 7), bool] */;
  (%602, %603, meta[relay.Constant][24] /* ty=Tensor[(15015), float32] */)
}

def @func_1531() -> (Tensor[(11, ?, 15), float32],) {
  %604 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  (%604,)
}

def @func_3708() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %605 = @func_2650() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %606 = %605.0;
  %607 = @func_2460() /* ty=Tensor[(11, ?, 15), float32] */;
  (%606, %607)
}

def @func_9365() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  %608 = @func_8343() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %609 = @func_6891() /* ty=Tensor[(14, 10, 11), float32] */;
  %610 = %608.0;
  (%609, %610)
}

def @func_6110() -> (Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  %611 = @func_2656() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %612 = @func_5899() /* ty=Tensor[(7, 14, 7), float32] */;
  %613 = @func_2295() /* ty=Tensor[(14, 10, 11), float32] */;
  %614 = %611.0;
  (%612, %613, %614)
}

def @func_3924() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %615 = @func_1855() /* ty=(Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %616 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %617 = %615.2;
  %618 = %616.2;
  (%617, %618)
}

def @func_4293() -> Tensor[(7, 14, 7), float64] {
  %619 = @func_3300() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %619.0
}

def @func_8244() -> Tensor[(11, ?, 15), float32] {
  %620 = @func_3734() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %620.0
}

def @func_7175() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) {
  %621 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %622 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %623 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %624 = @func_2914() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) */;
  %625 = @func_5493() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %626 = @func_3235() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %627 = %621.0;
  %628 = %622.0;
  %629 = %623.0;
  %630 = %624.1;
  %631 = %625.0;
  %632 = @func_3548() /* ty=Tensor[(11, ?, 15), bool] */;
  %633 = %626.0;
  (%627, %628, %629, %630, %631, %632, %633)
}

def @func_5718() -> Tensor[(7, 14, 7), float32] {
  %634 = @func_5374() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %634.0
}

def @func_7736() -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) {
  %635 = @func_2656() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %636 = @func_3300() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %637 = @func_4293() /* ty=Tensor[(7, 14, 7), float64] */;
  %638 = %635.0;
  %639 = %636.0;
  (%637, %638, %639)
}

def @func_11734() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) {
  %640 = @func_6003() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %641 = @func_6614() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) */;
  %642 = %640.0;
  %643 = %641.1;
  (%642, %643)
}

def @func_11668() -> (Tensor[(11, ?, 15), float32],) {
  %644 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %645 = %644.0;
  (%645,)
}

def @func_5126() -> Tensor[(11, ?, 15), float32] {
  %646 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %646.0
}

def @func_3984() -> Tensor[(14, 10, 11), float32] {
  %647 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %647.1
}

def @func_1735(%var_1721: Tensor[(2145, 7), float32]) -> Tensor[(2145, 7), bool] {
  %648 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %649 = %648.2;
  %650 = cast(%649, dtype="bool") /* ty=Tensor[(2145, 1), bool] */;
  %651 = cast(%var_1721, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
  logical_and(%650, %651) /* ty=Tensor[(2145, 7), bool] */
}

def @func_4519() -> (Tensor[(7, 14, 7), float32],) {
  %652 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %653 = %652.0;
  (%653,)
}

def @func_7780() -> Tensor[(7, 14, 7), float64] {
  %654 = @func_7350() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %654.0
}

def @func_11799() -> (Tensor[(11, ?, 15), float32],) {
  %655 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %656 = %655.1;
  (%656,)
}

def @func_11358(%var_11354: Tensor[(10, 2, 8), float32]) -> Tensor[(10, 2, 8), float32] {
  %657 = cast(%var_11354, dtype="float32") /* ty=Tensor[(10, 2, 8), float32] */;
  sqrt(%657) /* ty=Tensor[(10, 2, 8), float32] */
}

def @func_3548() -> Tensor[(11, ?, 15), bool] {
  %658 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %658.0
}

def @func_4477() -> Tensor[(7, 14, 7), float32] {
  %659 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %659.0
}

def @func_8751() -> (Tensor[(7, 14, 7), float32],) {
  %660 = @func_4519() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %661 = %660.0;
  (%661,)
}

def @func_819() -> (Tensor[(7, 14, 7), float32],) {
  %662 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %663 = sqrt(%662) /* ty=Tensor[(7, 14, 7), float32] */;
  (%663,)
}

def @func_290(%var_273: Tensor[(11, 1, 15), float64]) -> Tensor[(11, ?, 15), float32] {
  %664 = cast(%var_273, dtype="float64") /* ty=Tensor[(11, 1, 15), float64] */;
  %665 = tan(%664) /* ty=Tensor[(11, 1, 15), float64] */;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %667 = shape_of(%var_273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%var_273, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%668, %669) /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_13107() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %670 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %671 = %670.0;
  %672 = @func_4477() /* ty=Tensor[(7, 14, 7), float32] */;
  (%671, %672)
}

def @func_4342() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %673 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %674 = @func_3634() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %675 = %673.0;
  %676 = %674.0;
  (%675, %676)
}

def @func_2186(%var_2148: Tensor[(7, 14, 7), float32]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %677 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %678 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %680 = reshape(%679, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %681 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %682 = %681.0;
  %683 = cast(%var_2148, dtype="bool") /* ty=Tensor[(7, 14, 7), bool] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="bool") /* ty=Tensor[(7, 14, 7), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = greater(%685, %686) /* ty=Tensor[(7, 14, 7), bool] */;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %689 = %677.0;
  %690 = @func_290(%680) /* ty=Tensor[(11, ?, 15), float32] */;
  %691 = sinh(%688) /* ty=Tensor[(7, 14, 7), float32] */;
  (%689, %678, %690, %691)
}

def @func_12310() -> (Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %692 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %693 = @func_9649() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %694 = @func_6487() /* ty=Tensor[(14, 10, 11), float32] */;
  %695 = %692.0;
  %696 = @func_8170() /* ty=Tensor[(11, ?, 15), float32] */;
  %697 = @func_8538() /* ty=Tensor[(11, ?, 15), float32] */;
  %698 = %693.0;
  (%694, %695, %696, %697, %698)
}

def @func_12797() -> (Tensor[(2310), float32],) {
  %699 = @func_5000() /* ty=(Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) */;
  %700 = %699.0;
  (%700,)
}

def @func_1855() -> (Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %701 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %702 = %701.0;
  %703 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
  %704 = %703.2;
  %705 = cast(%704, dtype="uint16") /* ty=Tensor[(165), uint16] */;
  %706 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%702, dtype="uint16") /* ty=Tensor[(11, ?, 15), uint16] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %709 = cast(%704, dtype="float64") /* ty=Tensor[(165), float64] */;
  %710 = reshape(%709, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %711 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %712 = left_shift(%707, %708) /* ty=Tensor[(11, ?, 15), uint16] */;
  %713 = @func_290(%710) /* ty=Tensor[(11, ?, 15), float32] */;
  %714 = %711.2;
  (%712, %713, %714)
}

def @func_6527() -> Tensor[(7, 14, 7), float32] {
  %715 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %715.0
}

def @func_10311() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(2310), float32]) {
  %716 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %717 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %718 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %719 = @func_7418() /* ty=(Tensor[(2310), float32],) */;
  %720 = %716.0;
  %721 = %717.0;
  %722 = %718.4;
  %723 = %719.0;
  (%720, %721, %722, %723)
}

def @func_3109(%var_3057: Tensor[(16, 10, 8), float64]) -> (Tensor[(14, 10, 11), bool], Tensor[(1, 1540), float32], Tensor[(11, ?, 15), uint16], Tensor[(2145, 1), float32], Tensor[(16, 10, 8), float64]) {
  %724 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 1540), float32] */, dtype="float32") /* ty=Tensor[(1, 1540), float32] */;
  %725 = reshape(%724, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %726 = @func_1804(%725) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %727 = cast(meta[relay.Constant][27] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %728 = reshape(%727, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %729 = @func_2715(%728) /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %730 = cast(%var_3057, dtype="float64") /* ty=Tensor[(16, 10, 8), float64] */;
  %731 = erf(%730) /* ty=Tensor[(16, 10, 8), float64] */;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(16, 10, 8), float64] */;
  %733 = %726.0;
  %734 = %729.2;
  %735 = tan(%732) /* ty=Tensor[(16, 10, 8), float64] */;
  (%733, meta[relay.Constant][26] /* ty=Tensor[(1, 1540), float32] */, %734, meta[relay.Constant][27] /* ty=Tensor[(2145, 1), float32] */, %735)
}

def @func_10669() -> Tensor[(7, 14, 7), float32] {
  %736 = @func_7678() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %736.0
}

def @func_9463(%var_9430: Tensor[(11, 6, 15), bool]) -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, 6, 15), int32], Tensor[(11, ?, 15), float32]) {
  %737 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %738 = %737.0;
  %739 = @func_4843() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) */;
  %740 = %739.0;
  %741 = cast(%740, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %742 = shape_of(%738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%738, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %745 = cast(%740, dtype="int32") /* ty=Tensor[(11, ?, 15), int32] */;
  %746 = cast(%var_9430, dtype="int32") /* ty=Tensor[(11, 6, 15), int32] */;
  %747 = @func_3734() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %748 = @func_5686() /* ty=Tensor[(7, 14, 7), float32] */;
  %749 = less(%743, %744) /* ty=Tensor[(11, ?, 15), bool] */;
  %750 = bitwise_xor(%745, %746) /* ty=Tensor[(11, 6, 15), int32] */;
  %751 = %747.0;
  (%748, %749, %750, %751)
}

def @func_4550() -> Tensor[(7, 14, 7), float32] {
  %752 = @func_3634() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %752.0
}

def @func_5961() -> Tensor[(7, 14, 7), float64] {
  @func_2321() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_5000() -> (Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) {
  %753 = @func_4266() /* ty=(Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) */;
  %754 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %755 = @func_4430() /* ty=(Tensor[(2145, 7), bool], Tensor[(15015), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), uint64], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float64]) */;
  %756 = %753.1;
  %757 = %754.0;
  %758 = %755.2;
  (%756, %757, %758)
}

def @func_3782() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %759 = @func_3371() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %760 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %761 = %759.0;
  %762 = %760.0;
  (%761, %762)
}

def @func_3300() -> (Tensor[(7, 14, 7), float64],) {
  %763 = @func_1354() /* ty=Tensor[(7, 14, 7), float64] */;
  (%763,)
}

def @func_2650() -> (Tensor[(7, 14, 7), float32],) {
  %764 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %765 = %764.0;
  (%765,)
}

def @func_2762() -> Tensor[(11, ?, 15), float32] {
  %766 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %766.0
}

def @func_2434() -> (Tensor[(11, ?, 15), float32],) {
  %767 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  (%767,)
}

def @func_8170() -> Tensor[(11, ?, 15), float32] {
  %768 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %768.1
}

def @func_9749() -> (Tensor[(7, 14, 7), float64],) {
  %769 = @func_8564() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
  %770 = %769.0;
  (%770,)
}

def @func_10279() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool]) {
  %771 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %772 = @func_9365() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %773 = %771.1;
  %774 = %772.0;
  %775 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
  %776 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
  (%773, %774, %775, %776)
}

def @func_6853(%var_6815: Tensor[(2145, 16), int32]) -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) {
  %777 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %778 = @func_4934() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %779 = @func_4458() /* ty=Tensor[(2145, 16), int32] */;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(2145, 16), float32] */;
  %781 = cast(%var_6815, dtype="uint16") /* ty=Tensor[(2145, 16), uint16] */;
  %782 = shape_of(%779, dtype="int32") /* ty=Tensor[(2), int32] */;
  %783 = cast(%779, dtype="uint16") /* ty=Tensor[(2145, 16), uint16] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %785 = left_shift(%783, %784) /* ty=Tensor[(2145, 16), uint16] */;
  %786 = cast(%779, dtype="int64") /* ty=Tensor[(2145, 16), int64] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(2), int32] */;
  %788 = cast(%785, dtype="int64") /* ty=Tensor[(2145, 16), int64] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %790 = %777.1;
  %791 = %778.0;
  %792 = sinh(%780) /* ty=Tensor[(2145, 16), float32] */;
  %793 = right_shift(%788, %789) /* ty=Tensor[(2145, 16), int64] */;
  (%790, %791, %792, %793)
}

def @func_5307() -> Tensor[(7, 14, 7), float32] {
  @func_2031() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_10436(%var_10393: Tensor[(325), float64], %var_10412: Tensor[(325), float64]) -> (Tensor[(7, 14, 7), float32], Tensor[(910, 2), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(325), uint8], Tensor[(14, 10, 13), float64]) {
  %794 = @func_7175() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) */;
  %795 = @func_5493() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %796 = @func_3235() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %797 = cast(%var_10412, dtype="uint8") /* ty=Tensor[(325), uint8] */;
  %798 = shape_of(%var_10393, dtype="int32") /* ty=Tensor[(1), int32] */;
  %799 = cast(%var_10393, dtype="uint8") /* ty=Tensor[(325), uint8] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %801 = cast(meta[relay.Constant][28] /* ty=Tensor[(910, 2), float32] */, dtype="float32") /* ty=Tensor[(910, 2), float32] */;
  %802 = cast(%var_10393, dtype="float64") /* ty=Tensor[(325), float64] */;
  %803 = reshape(%801, newshape=[910, 2]) /* ty=Tensor[(910, 2), float32] */;
  %804 = reshape(%802, newshape=[325]) /* ty=Tensor[(325), float64] */;
  %805 = @func_10375(%803, %804) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 13), float64], Tensor[(325), float64], Tensor[(910, 2), float32]) */;
  %806 = %805.1;
  %807 = cast(%806, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %808 = %794.0;
  %809 = %795.0;
  %810 = %796.0;
  %811 = logical_xor(%799, %800) /* ty=Tensor[(325), uint8] */;
  %812 = log(%807) /* ty=Tensor[(14, 10, 13), float64] */;
  (%808, meta[relay.Constant][28] /* ty=Tensor[(910, 2), float32] */, %809, %810, %811, %812)
}

def @func_6874() -> Tensor[(7, 14, 7), float64] {
  @func_5961() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_4266() -> (Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) {
  %813 = cast(meta[relay.Constant][29] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %814 = reshape(%813, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), float32] */;
  %815 = @func_1482(%814) /* ty=(Tensor[(11, 14, 15), uint8], Tensor[(11, ?, 15), float32], Tensor[(11, 14, 15), int8], Tensor[(7, 14, 7), float32]) */;
  %816 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="uint32") /* ty=Tensor[(11, ?, 15), uint32] */;
  %819 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 2, 15), float32] */, dtype="uint32") /* ty=Tensor[(11, 2, 15), uint32] */;
  %820 = %815.2;
  %821 = left_shift(%818, %819) /* ty=Tensor[(11, 2, 15), uint32] */;
  (%820, meta[relay.Constant][29] /* ty=Tensor[(2310), float32] */, %821)
}

def @func_5280() -> (Tensor[(7, 14, 7), float32],) {
  %822 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %823 = %822.1;
  (%823,)
}

def @func_615() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) {
  %824 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %825 = cast(meta[relay.Constant][32] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %826 = reshape(%825, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %827 = cosh(%824) /* ty=Tensor[(14, 10, 11), float32] */;
  %828 = @func_290(%826) /* ty=Tensor[(11, ?, 15), float32] */;
  (%827, %828, meta[relay.Constant][32] /* ty=Tensor[(165), float64] */)
}

def @func_7480(%var_7464: Tensor[(11, 4, 15), float32], %var_7476: Tensor[(34320), int32]) -> (Tensor[(11, 4, 15), int8], Tensor[(11, ?, 15), float64], Tensor[(7, 14, 7), float32], Tensor[(34320), int32], Tensor[(14, 10, 11), float32]) {
  %829 = @func_1035() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="int8") /* ty=Tensor[(11, ?, 15), int8] */;
  %832 = cast(%var_7464, dtype="int8") /* ty=Tensor[(11, 4, 15), int8] */;
  %833 = cast(%830, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %834 = cast(%var_7476, dtype="int32") /* ty=Tensor[(34320), int32] */;
  %835 = reshape(%834, newshape=[2145, 16]) /* ty=Tensor[(2145, 16), int32] */;
  %836 = @func_6853(%835) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) */;
  %837 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
  %838 = logical_xor(%831, %832) /* ty=Tensor[(11, 4, 15), int8] */;
  %839 = cosh(%833) /* ty=Tensor[(11, ?, 15), float64] */;
  %840 = %836.1;
  %841 = %837.0;
  (%838, %839, %840, %var_7476, %841)
}

def @func_12351() -> (Tensor[(7, 14, 7), float32],) {
  %842 = @func_5307() /* ty=Tensor[(7, 14, 7), float32] */;
  (%842,)
}

def @func_6238(%var_6234: Tensor[(8, 2, 6), float32]) -> Tensor[(8, 2, 6), float32] {
  %843 = cast(%var_6234, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  atan(%843) /* ty=Tensor[(8, 2, 6), float32] */
}

def @func_10523(%var_10499: Tensor[(6, 2, 3), float64]) -> (Tensor[(6, 2, 3), float64], Tensor[(11, ?, 15), float32]) {
  %844 = cast(2.9236f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %845 = cast(%var_10499, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %846 = @func_8262() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %847 = floor_divide(%844, %845) /* ty=Tensor[(6, 2, 3), float64] */;
  %848 = %846.2;
  (%847, %848)
}

def @func_4026() -> Tensor[(7, 14, 7), float64] {
  @func_1879() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_8025(%var_8000: Tensor[(1540), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(1540), int8]) {
  %849 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %850 = @func_4934() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %851 = @func_5323() /* ty=(Tensor[(11, ?, 15), uint16],) */;
  %852 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %853 = cast(%var_8000, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %854 = reshape(%853, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %855 = @func_2524(%854) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %856 = %855.0;
  %857 = cast(%856, dtype="int8") /* ty=Tensor[(14, 10, 11), int8] */;
  %858 = shape_of(%var_8000, dtype="int32") /* ty=Tensor[(1), int32] */;
  %859 = cast(%var_8000, dtype="int8") /* ty=Tensor[(1540), int8] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?), int8] */;
  %861 = %849.0;
  %862 = %850.0;
  %863 = %851.0;
  %864 = %852.0;
  %865 = bitwise_or(%859, %860) /* ty=Tensor[(1540), int8] */;
  (%861, %862, %863, %864, %865)
}

def @func_3253(%var_3249: Tensor[(1540), float32]) -> (Tensor[(7, 14, 7), float64], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) {
  %866 = cast(%var_3249, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %867 = reshape(%866, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %868 = @func_1804(%867) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %869 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
  %870 = %868.0;
  (%869, %870, %var_3249)
}

def @func_4614(%var_4566: Tensor[(14, 10, 13), float32], %var_4591: Tensor[(325), float64]) -> (Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) {
  %871 = cast(%var_4591, dtype="float64") /* ty=Tensor[(325), float64] */;
  %872 = reshape(%871, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), float64] */;
  %873 = @func_2789(%872) /* ty=(Tensor[(5, 13, 5), float64],) */;
  %874 = cast(%var_4566, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
  %875 = cosh(%874) /* ty=Tensor[(14, 10, 13), float32] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %877 = exp(%876) /* ty=Tensor[(14, 10, 13), float64] */;
  %878 = cast(%var_4566, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %882 = %873.0;
  %883 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  %884 = divide(%880, %881) /* ty=Tensor[(14, 10, 13), float64] */;
  (%882, %var_4591, %883, %884)
}

def @func_8719(%var_8662: Tensor[(6, 12, 16), float32], %var_8663: Tensor[(6, 12, 16), float32], %var_8668: Tensor[(1, 2145), float32], %var_8709: Tensor[(13, 2145), float64]) -> (Tensor[(6, 12, 16), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(13, 2145), bool]) {
  %885 = cast(%var_8663, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  %886 = shape_of(%var_8662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%var_8662, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %889 = cast(%var_8668, dtype="float32") /* ty=Tensor[(1, 2145), float32] */;
  %890 = reshape(%889, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), float32] */;
  %891 = @func_971(%890) /* ty=(Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */;
  %892 = @func_6122() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %893 = cast(%var_8668, dtype="float64") /* ty=Tensor[(1, 2145), float64] */;
  %894 = sinh(%893) /* ty=Tensor[(1, 2145), float64] */;
  %895 = cast(%894, dtype="bool") /* ty=Tensor[(1, 2145), bool] */;
  %896 = cast(%var_8709, dtype="bool") /* ty=Tensor[(13, 2145), bool] */;
  %897 = maximum(%887, %888) /* ty=Tensor[(6, 12, 16), float32] */;
  %898 = %891.1;
  %899 = %892.0;
  %900 = greater_equal(%895, %896) /* ty=Tensor[(13, 2145), bool] */;
  (%897, %898, %899, %900)
}

def @func_9511() -> (Tensor[(14, 10, 11), float32],) {
  %901 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  (%901,)
}

def @func_11502() -> Tensor[(11, ?, 15), float32] {
  @func_2266() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_2715(%var_2707: Tensor[(2145), float32]) -> (Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) {
  %902 = @func_2656() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %903 = %902.0;
  %904 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 1, 15), bool] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%903, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %909 = @func_1855() /* ty=(Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %910 = cast(%var_2707, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %911 = reshape(%910, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), float32] */;
  %912 = @func_971(%911) /* ty=(Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */;
  %913 = not_equal(%906, %907) /* ty=Tensor[(11, ?, 15), bool] */;
  %914 = %908.0;
  %915 = %909.0;
  %916 = %912.3;
  (%913, %914, %915, %916, %var_2707)
}

def @func_10908(%var_10890: Tensor[(3, 16, 4), float32]) -> (Tensor[(3, 16, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %917 = cast(%var_10890, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
  %918 = cosh(%917) /* ty=Tensor[(3, 16, 4), float32] */;
  %919 = @func_1765() /* ty=Tensor[(11, ?, 15), float32] */;
  %920 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
  (%918, %919, %920)
}

def @func_2924() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) {
  %921 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %922 = cast(meta[relay.Constant][34] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %923 = reshape(%922, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %924 = @func_2715(%923) /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %925 = %921.0;
  %926 = %924.3;
  (%925, %926, meta[relay.Constant][34] /* ty=Tensor[(2145), float32] */)
}

def @func_1879() -> Tensor[(7, 14, 7), float64] {
  @func_1354() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_7229() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %927 = @func_5737() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %928 = %927.0;
  %929 = cast(%928, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %930 = reshape(%929, newshape=[7, 14, 7]) /* ty=Tensor[(7, 14, 7), float32] */;
  %931 = @func_2186(%930) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */;
  %932 = %931.0;
  (%928, %932)
}

def @func_11096() -> (Tensor[(15, 11, 16), float64], Tensor[(11, ?, 15), bool]) {
  %933 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %934 = @func_7046() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %935 = exp(%933) /* ty=Tensor[(15, 11, 16), float64] */;
  %936 = %934.0;
  (%935, %936)
}

def @func_11163() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
  %937 = @func_9649() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %938 = @func_8040() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %939 = %937.0;
  %940 = @func_5307() /* ty=Tensor[(7, 14, 7), float32] */;
  %941 = %938.0;
  (%939, %940, %941)
}

def @func_5263() -> (Tensor[(7, 14, 7), float32],) {
  %942 = @func_2650() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %943 = %942.0;
  (%943,)
}

def @func_4233() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) {
  %944 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %945 = @func_2295() /* ty=Tensor[(14, 10, 11), float32] */;
  %946 = %944.0;
  (%945, %946)
}

def @func_2737() -> Tensor[(11, ?, 15), bool] {
  %947 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %947.0
}

def @func_6614() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) {
  %948 = @func_2266() /* ty=Tensor[(11, ?, 15), float32] */;
  %949 = @func_4026() /* ty=Tensor[(7, 14, 7), float64] */;
  (%948, %949)
}

def @func_1384() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %950 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %951 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %952 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %953 = %950.0;
  %954 = %951.0;
  %955 = %952.0;
  (%953, %954, %955)
}

def @func_6636() -> (Tensor[(11, ?, 15), float32],) {
  %956 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %957 = %956.2;
  (%957,)
}

def @func_5737() -> (Tensor[(7, 14, 7), float32],) {
  %958 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %959 = %958.0;
  (%959,)
}

def @func_9496() -> Tensor[(7, 14, 7), float64] {
  %960 = @func_8564() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
  %960.0
}

def @func_7889() -> (Tensor[(7, 14, 7), float32],) {
  %961 = @func_7678() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %962 = %961.0;
  (%962,)
}

def @func_3335() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  %963 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %964 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %965 = @func_1945() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %966 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %967 = %963.0;
  %968 = %964.0;
  %969 = %965.0;
  %970 = %966.1;
  %971 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  (%967, %968, %969, %970, %971)
}

def @func_13143() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %972 = @func_5993() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %973 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %974 = %972.0;
  %975 = %973.0;
  (%974, %975)
}

def @func_13191(%var_13175: Tensor[(1280), float64], %var_13178: Tensor[(75075), float32]) -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64], Tensor[(15015, 5), int16], Tensor[(75075), float32]) {
  %976 = cast(%var_13175, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %977 = reshape(%976, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %978 = @func_9199(%977) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) */;
  %979 = cast(%var_13178, dtype="float32") /* ty=Tensor[(75075), float32] */;
  %980 = reshape(%979, newshape=[15015, 5]) /* ty=Tensor[(15015, 5), float32] */;
  %981 = @func_12021(%980) /* ty=(Tensor[(15015, 5), int16],) */;
  %982 = @func_6874() /* ty=Tensor[(7, 14, 7), float64] */;
  %983 = %978.1;
  %984 = %981.0;
  (%982, %983, %var_13175, %984, %var_13178)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @main() -> Tensor[(5, 16, 11), bool] {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 16, 11), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(5, 16, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 16, 11), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%2, %3) /* ty=Tensor[(5, 16, 11), bool] */
}

def @func_7011() -> Tensor[(7, 14, 7), float32] {
  %4 = fn () -> Tensor[(7, 14, 7), float32] {
    @func_5686() /* ty=Tensor[(7, 14, 7), float32] */
  };
  %4() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_5103() -> (Tensor[(11, ?, 15), float32],) {
  @func_5101() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_1533() -> (Tensor[(11, ?, 15), float32],) {
  @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_2091() -> (Tensor[(11, ?, 15), bool],) {
  %5 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %6 = %5.0;
  (%6,)
}

def @func_290(%var_273: Tensor[(11, 1, 15), float64]) -> Tensor[(11, ?, 15), float32] {
  %7 = cast(%var_273, dtype="float64") /* ty=Tensor[(11, 1, 15), float64] */;
  %8 = tan(%7) /* ty=Tensor[(11, 1, 15), float64] */;
  %9 = cast(%8, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %10 = shape_of(%var_273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%var_273, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%11, %12) /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_7891() -> (Tensor[(7, 14, 7), float32],) {
  @func_7889() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_2031() -> Tensor[(7, 14, 7), float32] {
  %13 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %13.0
}

def @func_4460() -> Tensor[(2145, 16), int32] {
  @func_4458() /* ty=Tensor[(2145, 16), int32] */
}

def @func_9751() -> (Tensor[(7, 14, 7), float64],) {
  @func_9749() /* ty=(Tensor[(7, 14, 7), float64],) */
}

def @func_12864() -> (Tensor[(14, 10, 11), float32],) {
  %16 = fn () -> (Tensor[(14, 10, 11), float32],) {
    %14 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
    %15 = %14.0;
    (%15,)
  };
  %16() /* ty=(Tensor[(14, 10, 11), float32],) */
}

def @func_6394() -> Tensor[(11, ?, 15), float32] {
  %18 = fn () -> Tensor[(11, ?, 15), float32] {
    %17 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %17.0
  };
  %18() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_3414() -> Tensor[(7, 14, 7), float32] {
  @func_3412() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_3335() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  %19 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %20 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %21 = @func_1945() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %22 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %23 = %19.0;
  %24 = %20.0;
  %25 = %21.0;
  %26 = %22.1;
  %27 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  (%23, %24, %25, %26, %27)
}

def @func_4295() -> Tensor[(7, 14, 7), float64] {
  @func_4293() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_7934() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) {
  @func_7932() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */
}

def @func_4868() -> (Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32]) {
  %28 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %29 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %32 = reshape(%31, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %33 = @func_1804(%32) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %34 = %33.0;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %36 = %28.3;
  %37 = sqrt(%35) /* ty=Tensor[(14, 10, 11), float32] */;
  (%36, %30, %37)
}

def @func_4845() -> (Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) {
  @func_4843() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) */
}

def @func_11669() -> (Tensor[(11, ?, 15), float32],) {
  %40 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %38 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %39 = %38.0;
    (%39,)
  };
  %40() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_8565() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) {
  %43 = fn () -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) {
    %41 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
    %42 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
    (%41, %42)
  };
  %43() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */
}

def @func_4027() -> Tensor[(7, 14, 7), float64] {
  %44 = fn () -> Tensor[(7, 14, 7), float64] {
    @func_1879() /* ty=Tensor[(7, 14, 7), float64] */
  };
  %44() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_10593() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  @func_10591() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_3725() -> (Tensor[(11, ?, 15), float32],) {
  %46 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %45 = @func_2762() /* ty=Tensor[(11, ?, 15), float32] */;
    (%45,)
  };
  %46() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_1484(%var_1483: Tensor[(11, 14, 15), float32]) -> (Tensor[(11, 14, 15), uint8], Tensor[(11, ?, 15), float32], Tensor[(11, 14, 15), int8], Tensor[(7, 14, 7), float32]) {
  %60 = fn (%var_1450: Tensor[(11, 14, 15), float32]) -> (Tensor[(11, 14, 15), uint8], Tensor[(11, ?, 15), float32], Tensor[(11, 14, 15), int8], Tensor[(7, 14, 7), float32]) {
    %47 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %48 = %47.0;
    %49 = cast(%48, dtype="uint8") /* ty=Tensor[(11, ?, 15), uint8] */;
    %50 = cast(%var_1450, dtype="uint8") /* ty=Tensor[(11, 14, 15), uint8] */;
    %51 = cast(%48, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
    %52 = reshape(%51, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
    %53 = cast(%48, dtype="int8") /* ty=Tensor[(11, ?, 15), int8] */;
    %54 = cast(%var_1450, dtype="int8") /* ty=Tensor[(11, 14, 15), int8] */;
    %55 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %56 = bitwise_or(%49, %50) /* ty=Tensor[(11, 14, 15), uint8] */;
    %57 = @func_290(%52) /* ty=Tensor[(11, ?, 15), float32] */;
    %58 = left_shift(%53, %54) /* ty=Tensor[(11, 14, 15), int8] */;
    %59 = %55.0;
    (%56, %57, %58, %59)
  };
  %60(%var_1483) /* ty=(Tensor[(11, 14, 15), uint8], Tensor[(11, ?, 15), float32], Tensor[(11, 14, 15), int8], Tensor[(7, 14, 7), float32]) */
}

def @func_11097() -> (Tensor[(15, 11, 16), float64], Tensor[(11, ?, 15), bool]) {
  %65 = fn () -> (Tensor[(15, 11, 16), float64], Tensor[(11, ?, 15), bool]) {
    %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
    %62 = @func_7046() /* ty=(Tensor[(11, ?, 15), bool],) */;
    %63 = exp(%61) /* ty=Tensor[(15, 11, 16), float64] */;
    %64 = %62.0;
    (%63, %64)
  };
  %65() /* ty=(Tensor[(15, 11, 16), float64], Tensor[(11, ?, 15), bool]) */
}

def @func_9264(%var_9262: Tensor[(12, 3, 10), int16]) -> (Tensor[(12, 3, 10), bool], Tensor[(14, 10, 11), float32]) {
  @func_9261(%var_9262) /* ty=(Tensor[(12, 3, 10), bool], Tensor[(14, 10, 11), float32]) */
}

def @func_12353() -> (Tensor[(7, 14, 7), float32],) {
  @func_12351() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_12079() -> Tensor[(11, ?, 15), float32] {
  %66 = @func_11163() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) */;
  %66.0
}

def @func_4266() -> (Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) {
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %68 = reshape(%67, newshape=[11, 14, 15]) /* ty=Tensor[(11, 14, 15), float32] */;
  %69 = @func_1482(%68) /* ty=(Tensor[(11, 14, 15), uint8], Tensor[(11, ?, 15), float32], Tensor[(11, 14, 15), int8], Tensor[(7, 14, 7), float32]) */;
  %70 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %71 = %70.0;
  %72 = cast(%71, dtype="uint32") /* ty=Tensor[(11, ?, 15), uint32] */;
  %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 2, 15), float32] */, dtype="uint32") /* ty=Tensor[(11, 2, 15), uint32] */;
  %74 = %69.2;
  %75 = left_shift(%72, %73) /* ty=Tensor[(11, 2, 15), uint32] */;
  (%74, meta[relay.Constant][3] /* ty=Tensor[(2310), float32] */, %75)
}

def @func_6296() -> Tensor[(11, ?, 15), float32] {
  %76 = @func_5493() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %76.0
}

def @func_10671() -> Tensor[(7, 14, 7), float32] {
  @func_10669() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_3371() -> (Tensor[(11, ?, 15), float32],) {
  %77 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %78 = %77.0;
  (%78,)
}

def @func_9261(%var_9243: Tensor[(12, 3, 10), int16]) -> (Tensor[(12, 3, 10), bool], Tensor[(14, 10, 11), float32]) {
  %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 3, 10), int16] */, dtype="bool") /* ty=Tensor[(1, 3, 10), bool] */;
  %80 = cast(%var_9243, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %81 = not_equal(%79, %80) /* ty=Tensor[(12, 3, 10), bool] */;
  %82 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  (%81, %82)
}

def @func_2435() -> (Tensor[(11, ?, 15), float32],) {
  %84 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %83 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
    (%83,)
  };
  %84() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_4234() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) {
  %88 = fn () -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) {
    %85 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
    %86 = @func_2295() /* ty=Tensor[(14, 10, 11), float32] */;
    %87 = %85.0;
    (%86, %87)
  };
  %88() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */
}

def @func_1384() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %89 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %90 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %91 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %92 = %89.0;
  %93 = %90.0;
  %94 = %91.0;
  (%92, %93, %94)
}

def @func_2764() -> Tensor[(11, ?, 15), float32] {
  @func_2762() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_1767() -> Tensor[(11, ?, 15), float32] {
  @func_1765() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_4614(%var_4566: Tensor[(14, 10, 13), float32], %var_4591: Tensor[(325), float64]) -> (Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) {
  %95 = cast(%var_4591, dtype="float64") /* ty=Tensor[(325), float64] */;
  %96 = reshape(%95, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), float64] */;
  %97 = @func_2789(%96) /* ty=(Tensor[(5, 13, 5), float64],) */;
  %98 = cast(%var_4566, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
  %99 = cosh(%98) /* ty=Tensor[(14, 10, 13), float32] */;
  %100 = cast(%99, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %101 = exp(%100) /* ty=Tensor[(14, 10, 13), float64] */;
  %102 = cast(%var_4566, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%101, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %106 = %97.0;
  %107 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  %108 = divide(%104, %105) /* ty=Tensor[(14, 10, 13), float64] */;
  (%106, %var_4591, %107, %108)
}

def @func_2296() -> Tensor[(14, 10, 11), float32] {
  %110 = fn () -> Tensor[(14, 10, 11), float32] {
    %109 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
    %109.1
  };
  %110() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_5942() -> (Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float64]) {
  %121 = fn () -> (Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float64]) {
    %111 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
    %112 = @func_3924() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %113 = %112.1;
    %114 = cast(%113, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
    %115 = reshape(%114, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
    %116 = @func_290(%115) /* ty=Tensor[(11, ?, 15), float32] */;
    %117 = cast(%116, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
    %118 = %111.0;
    %119 = @func_2031() /* ty=Tensor[(7, 14, 7), float32] */;
    %120 = sigmoid(%117) /* ty=Tensor[(11, ?, 15), float64] */;
    (%118, %119, %113, %120)
  };
  %121() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float64]) */
}

def @func_1804(%var_1788: Tensor[(14, 10, 11), float32]) -> (Tensor[(14, 10, 11), bool],) {
  %122 = @func_1035() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %123 = %122.1;
  %124 = cast(%var_1788, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%123, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %128 = less(%126, %127) /* ty=Tensor[(14, 10, 11), bool] */;
  (%128,)
}

def @func_4268() -> (Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) {
  @func_4266() /* ty=(Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) */
}

def @func_7352() -> (Tensor[(7, 14, 7), float64],) {
  @func_7350() /* ty=(Tensor[(7, 14, 7), float64],) */
}

def @func_7454() -> (Tensor[(7, 14, 7), float64],) {
  %130 = fn () -> (Tensor[(7, 14, 7), float64],) {
    %129 = @func_1354() /* ty=Tensor[(7, 14, 7), float64] */;
    (%129,)
  };
  %130() /* ty=(Tensor[(7, 14, 7), float64],) */
}

def @func_3986() -> Tensor[(14, 10, 11), float32] {
  @func_3984() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_4843() -> (Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) {
  %131 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %132 = cast(meta[relay.Constant][6] /* ty=Tensor[(15015), float32] */, dtype="float32") /* ty=Tensor[(15015), float32] */;
  %133 = reshape(%132, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
  %134 = %131.0;
  %135 = @func_1735(%133) /* ty=Tensor[(2145, 7), bool] */;
  (%134, %135, meta[relay.Constant][6] /* ty=Tensor[(15015), float32] */)
}

def @func_2651() -> (Tensor[(7, 14, 7), float32],) {
  %138 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %136 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %137 = %136.0;
    (%137,)
  };
  %138() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_5901() -> Tensor[(7, 14, 7), float32] {
  @func_5899() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_12573() -> Tensor[(11, ?, 15), float32] {
  %139 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %139.0
}

def @func_4521() -> (Tensor[(7, 14, 7), float32],) {
  @func_4519() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_6853(%var_6815: Tensor[(2145, 16), int32]) -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) {
  %140 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %141 = @func_4934() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %142 = @func_4458() /* ty=Tensor[(2145, 16), int32] */;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(2145, 16), float32] */;
  %144 = cast(%var_6815, dtype="uint16") /* ty=Tensor[(2145, 16), uint16] */;
  %145 = shape_of(%142, dtype="int32") /* ty=Tensor[(2), int32] */;
  %146 = cast(%142, dtype="uint16") /* ty=Tensor[(2145, 16), uint16] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %148 = left_shift(%146, %147) /* ty=Tensor[(2145, 16), uint16] */;
  %149 = cast(%142, dtype="int64") /* ty=Tensor[(2145, 16), int64] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(2), int32] */;
  %151 = cast(%148, dtype="int64") /* ty=Tensor[(2145, 16), int64] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %153 = %140.1;
  %154 = %141.0;
  %155 = sinh(%143) /* ty=Tensor[(2145, 16), float32] */;
  %156 = right_shift(%151, %152) /* ty=Tensor[(2145, 16), int64] */;
  (%153, %154, %155, %156)
}

def @func_9886(%var_9842: Tensor[(11, 4, 15), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(11, 4, 15), bool]) {
  %157 = @func_7932() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
  %158 = @func_1945() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %161 = cast(%var_9842, dtype="float32") /* ty=Tensor[(11, 4, 15), float32] */;
  %162 = floor_divide(%160, %161) /* ty=Tensor[(11, 4, 15), float32] */;
  %163 = cast(%162, dtype="int16") /* ty=Tensor[(11, 4, 15), int16] */;
  %164 = shape_of(%var_9842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%var_9842, dtype="int16") /* ty=Tensor[(11, 4, 15), int16] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %167 = maximum(%165, %166) /* ty=Tensor[(11, 4, 15), int16] */;
  %168 = cast(%var_9842, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
  %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%167, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %172 = %157.1;
  %173 = logical_or(%170, %171) /* ty=Tensor[(11, 4, 15), bool] */;
  (%172, %173)
}

def @func_10439(%var_10437: Tensor[(325), float64], %var_10438: Tensor[(325), float64]) -> (Tensor[(7, 14, 7), float32], Tensor[(910, 2), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(325), uint8], Tensor[(14, 10, 13), float64]) {
  %193 = fn (%var_10393: Tensor[(325), float64], %var_10412: Tensor[(325), float64]) -> (Tensor[(7, 14, 7), float32], Tensor[(910, 2), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(325), uint8], Tensor[(14, 10, 13), float64]) {
    %174 = @func_7175() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) */;
    %175 = @func_5493() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %176 = @func_3235() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %177 = cast(%var_10412, dtype="uint8") /* ty=Tensor[(325), uint8] */;
    %178 = shape_of(%var_10393, dtype="int32") /* ty=Tensor[(1), int32] */;
    %179 = cast(%var_10393, dtype="uint8") /* ty=Tensor[(325), uint8] */;
    %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %181 = cast(meta[relay.Constant][7] /* ty=Tensor[(910, 2), float32] */, dtype="float32") /* ty=Tensor[(910, 2), float32] */;
    %182 = cast(%var_10393, dtype="float64") /* ty=Tensor[(325), float64] */;
    %183 = reshape(%181, newshape=[910, 2]) /* ty=Tensor[(910, 2), float32] */;
    %184 = reshape(%182, newshape=[325]) /* ty=Tensor[(325), float64] */;
    %185 = @func_10375(%183, %184) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 13), float64], Tensor[(325), float64], Tensor[(910, 2), float32]) */;
    %186 = %185.1;
    %187 = cast(%186, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
    %188 = %174.0;
    %189 = %175.0;
    %190 = %176.0;
    %191 = logical_xor(%179, %180) /* ty=Tensor[(325), uint8] */;
    %192 = log(%187) /* ty=Tensor[(14, 10, 13), float64] */;
    (%188, meta[relay.Constant][7] /* ty=Tensor[(910, 2), float32] */, %189, %190, %191, %192)
  };
  %193(%var_10437, %var_10438) /* ty=(Tensor[(7, 14, 7), float32], Tensor[(910, 2), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(325), uint8], Tensor[(14, 10, 13), float64]) */
}

def @func_1208() -> (Tensor[(11, ?, 15), float32],) {
  @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_5374() -> (Tensor[(7, 14, 7), float32],) {
  %194 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
  (%194,)
}

def @func_5324() -> (Tensor[(11, ?, 15), uint16],) {
  %197 = fn () -> (Tensor[(11, ?, 15), uint16],) {
    %195 = @func_1855() /* ty=(Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %196 = %195.0;
    (%196,)
  };
  %197() /* ty=(Tensor[(11, ?, 15), uint16],) */
}

def @func_1946() -> (Tensor[(11, ?, 15), float32],) {
  %200 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %198 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %199 = %198.2;
    (%199,)
  };
  %200() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_1857() -> (Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  @func_1855() /* ty=(Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_12532() -> (Tensor[(15, 15, 10), bool], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
  %209 = fn () -> (Tensor[(15, 15, 10), bool], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
    %201 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 15, 10), int16] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
    %202 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(15, 15, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %203 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 15, 10), int16] */, dtype="bool") /* ty=Tensor[(15, 15, 10), bool] */;
    %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %205 = @func_4519() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %206 = less_equal(%203, %204) /* ty=Tensor[(15, 15, 10), bool] */;
    %207 = %205.0;
    %208 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
    (%206, %207, %208)
  };
  %209() /* ty=(Tensor[(15, 15, 10), bool], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) */
}

def @func_8945() -> Tensor[(14, 10, 11), float32] {
  %211 = fn () -> Tensor[(14, 10, 11), float32] {
    %210 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
    %210.0
  };
  %211() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_2033() -> Tensor[(7, 14, 7), float32] {
  @func_2031() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_2657() -> (Tensor[(11, ?, 15), float32],) {
  %213 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %212 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
    (%212,)
  };
  %213() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_10910(%var_10909: Tensor[(3, 16, 4), float32]) -> (Tensor[(3, 16, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %218 = fn (%var_10890: Tensor[(3, 16, 4), float32]) -> (Tensor[(3, 16, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
    %214 = cast(%var_10890, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
    %215 = cosh(%214) /* ty=Tensor[(3, 16, 4), float32] */;
    %216 = @func_1765() /* ty=Tensor[(11, ?, 15), float32] */;
    %217 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
    (%215, %216, %217)
  };
  %218(%var_10909) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */
}

def @func_3109(%var_3057: Tensor[(16, 10, 8), float64]) -> (Tensor[(14, 10, 11), bool], Tensor[(1, 1540), float32], Tensor[(11, ?, 15), uint16], Tensor[(2145, 1), float32], Tensor[(16, 10, 8), float64]) {
  %219 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 1540), float32] */, dtype="float32") /* ty=Tensor[(1, 1540), float32] */;
  %220 = reshape(%219, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %221 = @func_1804(%220) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %222 = cast(meta[relay.Constant][11] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %223 = reshape(%222, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %224 = @func_2715(%223) /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %225 = cast(%var_3057, dtype="float64") /* ty=Tensor[(16, 10, 8), float64] */;
  %226 = erf(%225) /* ty=Tensor[(16, 10, 8), float64] */;
  %227 = cast(%226, dtype="float64") /* ty=Tensor[(16, 10, 8), float64] */;
  %228 = %221.0;
  %229 = %224.2;
  %230 = tan(%227) /* ty=Tensor[(16, 10, 8), float64] */;
  (%228, meta[relay.Constant][10] /* ty=Tensor[(1, 1540), float32] */, %229, meta[relay.Constant][11] /* ty=Tensor[(2145, 1), float32] */, %230)
}

def @func_10279() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool]) {
  %231 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %232 = @func_9365() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %233 = %231.1;
  %234 = %232.0;
  %235 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
  %236 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
  (%233, %234, %235, %236)
}

def @func_12160(%var_12158: Tensor[(320, 4), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(320, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  @func_12157(%var_12158) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(320, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_7872(%var_7871: Tensor[(4, 7, 13), float64]) -> (Tensor[(14, 10, 11), float32], Tensor[(4, 7, 13), float64], Tensor[(2145, 7), bool]) {
  %250 = fn (%var_7829: Tensor[(4, 7, 13), float64]) -> (Tensor[(14, 10, 11), float32], Tensor[(4, 7, 13), float64], Tensor[(2145, 7), bool]) {
    %237 = cast(%var_7829, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
    %238 = acos(%237) /* ty=Tensor[(4, 7, 13), float64] */;
    %239 = cast(%238, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
    %240 = cast(meta[relay.Constant][12] /* ty=Tensor[(15015), float32] */, dtype="float32") /* ty=Tensor[(15015), float32] */;
    %241 = reshape(%240, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
    %242 = @func_1735(%241) /* ty=Tensor[(2145, 7), bool] */;
    %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(15015), float32] */, dtype="bool") /* ty=Tensor[(15015), bool] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
    %245 = cast(%242, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %247 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
    %248 = log2(%239) /* ty=Tensor[(4, 7, 13), float64] */;
    %249 = less_equal(%245, %246) /* ty=Tensor[(2145, 7), bool] */;
    (%247, %248, %249)
  };
  %250(%var_7871) /* ty=(Tensor[(14, 10, 11), float32], Tensor[(4, 7, 13), float64], Tensor[(2145, 7), bool]) */
}

def @func_6874() -> Tensor[(7, 14, 7), float64] {
  @func_5961() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_2189(%var_2187: Tensor[(7, 14, 7), float32]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  @func_2186(%var_2187) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */
}

def @func_5686() -> Tensor[(7, 14, 7), float32] {
  %251 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %251.0
}

def @func_5235(%var_5230: Tensor[(16, 11, 7), int32], %var_5231: Tensor[(16, 11, 7), int32]) -> Tensor[(16, 11, 7), int32] {
  %252 = cast(%var_5231, dtype="int32") /* ty=Tensor[(16, 11, 7), int32] */;
  %253 = shape_of(%var_5230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%var_5230, dtype="int32") /* ty=Tensor[(16, 11, 7), int32] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%254, %255) /* ty=Tensor[(16, 11, 7), int32] */
}

def @func_8232() -> (Tensor[(11, ?, 15), float32],) {
  %258 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %256 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %257 = %256.0;
    (%257,)
  };
  %258() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_9498() -> Tensor[(7, 14, 7), float64] {
  @func_9496() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_3734() -> (Tensor[(11, ?, 15), float32],) {
  %259 = @func_3724() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %260 = %259.0;
  (%260,)
}

def @func_4344() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  @func_4342() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */
}

def @func_6637() -> (Tensor[(11, ?, 15), float32],) {
  %263 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %261 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %262 = %261.2;
    (%262,)
  };
  %263() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_8589() -> Tensor[(11, ?, 15), bool] {
  %265 = fn () -> Tensor[(11, ?, 15), bool] {
    %264 = @func_2914() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) */;
    %264.0
  };
  %265() /* ty=Tensor[(11, ?, 15), bool] */
}

def @func_11256() -> (Tensor[(11, ?, 15), float32],) {
  %266 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %267 = %266.0;
  (%267,)
}

def @func_5307() -> Tensor[(7, 14, 7), float32] {
  @func_2031() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_821() -> (Tensor[(7, 14, 7), float32],) {
  @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_11736() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) {
  @func_11734() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) */
}

def @func_2762() -> Tensor[(11, ?, 15), float32] {
  %268 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %268.0
}

def @func_7350() -> (Tensor[(7, 14, 7), float64],) {
  %269 = @func_5961() /* ty=Tensor[(7, 14, 7), float64] */;
  (%269,)
}

def @func_12351() -> (Tensor[(7, 14, 7), float32],) {
  %270 = @func_5307() /* ty=Tensor[(7, 14, 7), float32] */;
  (%270,)
}

def @func_5281() -> (Tensor[(7, 14, 7), float32],) {
  %273 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %271 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
    %272 = %271.1;
    (%272,)
  };
  %273() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_9830() -> (Tensor[(11, ?, 15), float32],) {
  %275 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %274 = @func_1765() /* ty=Tensor[(11, ?, 15), float32] */;
    (%274,)
  };
  %275() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_10375(%var_10363: Tensor[(910, 2), float32], %var_10364: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 13), float64], Tensor[(325), float64], Tensor[(910, 2), float32]) {
  %276 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %277 = cast(%var_10363, dtype="float32") /* ty=Tensor[(910, 2), float32] */;
  %278 = cast(%var_10364, dtype="float64") /* ty=Tensor[(325), float64] */;
  %279 = reshape(%277, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
  %280 = reshape(%278, newshape=[325]) /* ty=Tensor[(325), float64] */;
  %281 = @func_4614(%279, %280) /* ty=(Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) */;
  %282 = cast(%var_10363, dtype="float32") /* ty=Tensor[(910, 2), float32] */;
  %283 = %276.0;
  %284 = %281.3;
  %285 = sin(%282) /* ty=Tensor[(910, 2), float32] */;
  (%283, %284, %var_10364, %285)
}

def @func_12593() -> (Tensor[(7, 14, 7), float32],) {
  %288 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %286 = @func_5280() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %287 = %286.0;
    (%287,)
  };
  %288() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_2321() -> Tensor[(7, 14, 7), float64] {
  @func_1879() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_3253(%var_3249: Tensor[(1540), float32]) -> (Tensor[(7, 14, 7), float64], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) {
  %289 = cast(%var_3249, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %290 = reshape(%289, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %291 = @func_1804(%290) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %292 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
  %293 = %291.0;
  (%292, %293, %var_3249)
}

def @func_11502() -> Tensor[(11, ?, 15), float32] {
  @func_2266() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_6594() -> Tensor[(11, ?, 15), bool] {
  @func_3548() /* ty=Tensor[(11, ?, 15), bool] */
}

def @func_3549() -> Tensor[(11, ?, 15), bool] {
  %295 = fn () -> Tensor[(11, ?, 15), bool] {
    %294 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
    %294.0
  };
  %295() /* ty=Tensor[(11, ?, 15), bool] */
}

def @func_12944() -> (Tensor[(11, ?, 15), float32],) {
  @func_12942() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_11165() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
  @func_11163() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) */
}

def @func_6989(%var_6988: Tensor[(14, 10, 11), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float64]) {
  %310 = fn (%var_6963: Tensor[(14, 10, 11), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float64]) {
    %296 = @func_5280() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %297 = %296.0;
    %298 = cast(%297, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
    %299 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %300 = @func_6891() /* ty=Tensor[(14, 10, 11), float32] */;
    %301 = cast(%var_6963, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
    %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
    %303 = cast(%300, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
    %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %305 = cast(%300, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
    %306 = sigmoid(%298) /* ty=Tensor[(7, 14, 7), float32] */;
    %307 = %299.0;
    %308 = floor_divide(%303, %304) /* ty=Tensor[(14, 10, 11), float64] */;
    %309 = asinh(%305) /* ty=Tensor[(14, 10, 11), float64] */;
    (%306, %307, %308, %309)
  };
  %310(%var_6988) /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float64]) */
}

def @func_2093() -> (Tensor[(11, ?, 15), bool],) {
  @func_2091() /* ty=(Tensor[(11, ?, 15), bool],) */
}

def @func_2737() -> Tensor[(11, ?, 15), bool] {
  %311 = @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %311.0
}

def @func_10105(%var_10061: int16, %var_10072: Tensor[(8, 7, 2), float32]) -> Tensor[(8, 7, 2), float32] {
  %312 = cast(%var_10061, dtype="int16") /* ty=int16 */;
  %313 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 2), int16] */;
  %314 = left_shift(%312, %313) /* ty=Tensor[(8, 7, 2), int16] */;
  %315 = cast(%314, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %316 = exp(%315) /* ty=Tensor[(8, 7, 2), float32] */;
  %317 = cast(%var_10072, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%316, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %321 = divide(%319, %320) /* ty=Tensor[(8, 7, 2), float32] */;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  log(%322) /* ty=Tensor[(8, 7, 2), float32] */
}

def @func_3893(%var_3892: Tensor[(2145, 14), float32]) -> (Tensor[(2145, 14), uint8], Tensor[(2145, 14), uint32], Tensor[(2145, 9), float32]) {
  %334 = fn (%var_3858: Tensor[(2145, 14), float32]) -> (Tensor[(2145, 14), uint8], Tensor[(2145, 14), uint32], Tensor[(2145, 9), float32]) {
    %323 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
    %324 = %323.2;
    %325 = cast(%324, dtype="uint8") /* ty=Tensor[(2145, 1), uint8] */;
    %326 = cast(%var_3858, dtype="uint8") /* ty=Tensor[(2145, 14), uint8] */;
    %327 = cast(%324, dtype="uint32") /* ty=Tensor[(2145, 1), uint32] */;
    %328 = cast(%var_3858, dtype="uint32") /* ty=Tensor[(2145, 14), uint32] */;
    %329 = cast(%324, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
    %330 = cast(meta[relay.Constant][14] /* ty=Tensor[(2145, 9), float32] */, dtype="float32") /* ty=Tensor[(2145, 9), float32] */;
    %331 = minimum(%325, %326) /* ty=Tensor[(2145, 14), uint8] */;
    %332 = logical_xor(%327, %328) /* ty=Tensor[(2145, 14), uint32] */;
    %333 = mod(%329, %330) /* ty=Tensor[(2145, 9), float32] */;
    (%331, %332, %333)
  };
  %334(%var_3892) /* ty=(Tensor[(2145, 14), uint8], Tensor[(2145, 14), uint32], Tensor[(2145, 9), float32]) */
}

def @func_8525() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) {
  %338 = fn () -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) {
    %335 = @func_7350() /* ty=(Tensor[(7, 14, 7), float64],) */;
    %336 = %335.0;
    %337 = @func_7780() /* ty=Tensor[(7, 14, 7), float64] */;
    (%336, %337)
  };
  %338() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) */
}

def @func_12997() -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), int16], Tensor[(1386), float32]) {
  %347 = fn () -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), int16], Tensor[(1386), float32]) {
    %339 = cast(meta[relay.Constant][15] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %340 = cast(meta[relay.Constant][15] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %341 = reshape(%339, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
    %342 = reshape(%340, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
    %343 = @func_4171(%341, %342) /* ty=(Tensor[(2145), float32], Tensor[(165), float64], Tensor[(9, 11, 14), int16], Tensor[(60, 12), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), int16]) */;
    %344 = @func_7780() /* ty=Tensor[(7, 14, 7), float64] */;
    %345 = @func_3548() /* ty=Tensor[(11, ?, 15), bool] */;
    %346 = %343.5;
    (%344, %345, %346, meta[relay.Constant][15] /* ty=Tensor[(1386), float32] */)
  };
  %347() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), int16], Tensor[(1386), float32]) */
}

def @func_10669() -> Tensor[(7, 14, 7), float32] {
  %348 = @func_7678() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %348.0
}

def @func_10379(%var_10377: Tensor[(910, 2), float32], %var_10378: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 13), float64], Tensor[(325), float64], Tensor[(910, 2), float32]) {
  @func_10375(%var_10377, %var_10378) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 13), float64], Tensor[(325), float64], Tensor[(910, 2), float32]) */
}

def @func_10830() -> Tensor[(14, 10, 11), float32] {
  @func_10828() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_9365() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  %349 = @func_8343() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %350 = @func_6891() /* ty=Tensor[(14, 10, 11), float32] */;
  %351 = %349.0;
  (%350, %351)
}

def @func_9065() -> Tensor[(11, ?, 15), uint16] {
  %353 = fn () -> Tensor[(11, ?, 15), uint16] {
    %352 = @func_5323() /* ty=(Tensor[(11, ?, 15), uint16],) */;
    %352.0
  };
  %353() /* ty=Tensor[(11, ?, 15), uint16] */
}

def @func_10523(%var_10499: Tensor[(6, 2, 3), float64]) -> (Tensor[(6, 2, 3), float64], Tensor[(11, ?, 15), float32]) {
  %354 = cast(2.9236f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %355 = cast(%var_10499, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %356 = @func_8262() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %357 = floor_divide(%354, %355) /* ty=Tensor[(6, 2, 3), float64] */;
  %358 = %356.2;
  (%357, %358)
}

def @func_615() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) {
  %359 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %360 = cast(meta[relay.Constant][17] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %361 = reshape(%360, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %362 = cosh(%359) /* ty=Tensor[(14, 10, 11), float32] */;
  %363 = @func_290(%361) /* ty=Tensor[(11, ?, 15), float32] */;
  (%362, %363, meta[relay.Constant][17] /* ty=Tensor[(165), float64] */)
}

def @func_11258() -> (Tensor[(11, ?, 15), float32],) {
  @func_11256() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_10526(%var_10524: Tensor[(6, 2, 3), float64]) -> (Tensor[(6, 2, 3), float64], Tensor[(11, ?, 15), float32]) {
  @func_10523(%var_10524) /* ty=(Tensor[(6, 2, 3), float64], Tensor[(11, ?, 15), float32]) */
}

def @func_7679() -> (Tensor[(7, 14, 7), float32],) {
  %365 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %364 = @func_5686() /* ty=Tensor[(7, 14, 7), float32] */;
    (%364,)
  };
  %365() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_9511() -> (Tensor[(14, 10, 11), float32],) {
  %366 = @func_3984() /* ty=Tensor[(14, 10, 11), float32] */;
  (%366,)
}

def @func_7320() -> Tensor[(7, 14, 7), float32] {
  @func_5307() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_10328() -> Tensor[(7, 14, 7), float32] {
  %367 = @func_4519() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %367.0
}

def @func_12575() -> Tensor[(11, ?, 15), float32] {
  @func_12573() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_9749() -> (Tensor[(7, 14, 7), float64],) {
  %368 = @func_8564() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
  %369 = %368.0;
  (%369,)
}

def @func_11219() -> Tensor[(14, 10, 11), float32] {
  @func_11217() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_12449() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 7), float64]) {
  %370 = @func_11520() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) */;
  %371 = @func_4843() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) */;
  %372 = %371.1;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(2145, 7), float64] */;
  %374 = atan(%373) /* ty=Tensor[(2145, 7), float64] */;
  %375 = cast(%374, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
  %376 = shape_of(%372, dtype="int32") /* ty=Tensor[(2), int32] */;
  %377 = cast(%372, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %379 = greater(%377, %378) /* ty=Tensor[(2145, 7), bool] */;
  %380 = cast(%374, dtype="float64") /* ty=Tensor[(2145, 7), float64] */;
  %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(2), int32] */;
  %382 = cast(%379, dtype="float64") /* ty=Tensor[(2145, 7), float64] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %384 = %370.0;
  %385 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
  %386 = @func_10669() /* ty=Tensor[(7, 14, 7), float32] */;
  %387 = floor_divide(%382, %383) /* ty=Tensor[(2145, 7), float64] */;
  (%384, %385, %386, %387)
}

def @func_8041() -> (Tensor[(14, 10, 11), float32],) {
  %389 = fn () -> (Tensor[(14, 10, 11), float32],) {
    %388 = @func_2295() /* ty=Tensor[(14, 10, 11), float32] */;
    (%388,)
  };
  %389() /* ty=(Tensor[(14, 10, 11), float32],) */
}

def @func_5342(%var_5340: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), int64], Tensor[(325), float64], Tensor[(1820), float32], Tensor[(325), float64]) {
  @func_5339(%var_5340) /* ty=(Tensor[(11, ?, 15), int64], Tensor[(325), float64], Tensor[(1820), float32], Tensor[(325), float64]) */
}

def @func_12062(%var_12058: int16, %var_12059: Tensor[(112), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(8, 7, 2), float32], int16, Tensor[(112), float32]) {
  %390 = cast(%var_12058, dtype="int16") /* ty=int16 */;
  %391 = cast(%var_12059, dtype="float32") /* ty=Tensor[(112), float32] */;
  %392 = reshape(%390, newshape=[]) /* ty=int16 */;
  %393 = reshape(%391, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), float32] */;
  %394 = @func_5686() /* ty=Tensor[(7, 14, 7), float32] */;
  %395 = @func_10105(%392, %393) /* ty=Tensor[(8, 7, 2), float32] */;
  (%394, %395, %var_12058, %var_12059)
}

def @func_7484(%var_7482: Tensor[(11, 4, 15), float32], %var_7483: Tensor[(34320), int32]) -> (Tensor[(11, 4, 15), int8], Tensor[(11, ?, 15), float64], Tensor[(7, 14, 7), float32], Tensor[(34320), int32], Tensor[(14, 10, 11), float32]) {
  @func_7480(%var_7482, %var_7483) /* ty=(Tensor[(11, 4, 15), int8], Tensor[(11, ?, 15), float64], Tensor[(7, 14, 7), float32], Tensor[(34320), int32], Tensor[(14, 10, 11), float32]) */
}

def @func_3783() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %400 = fn () -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
    %396 = @func_3371() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %397 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %398 = %396.0;
    %399 = %397.0;
    (%398, %399)
  };
  %400() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_13107() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %401 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %402 = %401.0;
  %403 = @func_4477() /* ty=Tensor[(7, 14, 7), float32] */;
  (%402, %403)
}

def @func_2965(%var_2964: Tensor[(10, 6, 12), int64]) -> (Tensor[(10, 6, 12), int64], Tensor[(2145), float32]) {
  %409 = fn (%var_2950: Tensor[(10, 6, 12), int64]) -> (Tensor[(10, 6, 12), int64], Tensor[(2145), float32]) {
    %404 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 1, 12), int64] */, dtype="int64") /* ty=Tensor[(10, 1, 12), int64] */;
    %405 = cast(%var_2950, dtype="int64") /* ty=Tensor[(10, 6, 12), int64] */;
    %406 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
    %407 = bitwise_xor(%404, %405) /* ty=Tensor[(10, 6, 12), int64] */;
    %408 = %406.2;
    (%407, %408)
  };
  %409(%var_2964) /* ty=(Tensor[(10, 6, 12), int64], Tensor[(2145), float32]) */
}

def @func_11953() -> (Tensor[(11, 6, 15), bool],) {
  @func_11951() /* ty=(Tensor[(11, 6, 15), bool],) */
}

def @func_12451() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 7), float64]) {
  @func_12449() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 7), float64]) */
}

def @func_1036() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) {
  %416 = fn () -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) {
    %410 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %411 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
    %412 = %411.0;
    %413 = cast(%412, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
    %414 = %410.0;
    %415 = tan(%413) /* ty=Tensor[(14, 10, 11), float32] */;
    (%414, %415)
  };
  %416() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */
}

def @func_2462() -> Tensor[(11, ?, 15), float32] {
  @func_2460() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_9651() -> (Tensor[(11, ?, 15), float32],) {
  @func_9649() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_1765() -> Tensor[(11, ?, 15), float32] {
  %417 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %417.0
}

def @func_1386() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_1206() -> (Tensor[(11, ?, 15), float32],) {
  %418 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %419 = %418.0;
  (%419,)
}

def @func_4550() -> Tensor[(7, 14, 7), float32] {
  %420 = @func_3634() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %420.0
}

def @func_5309() -> Tensor[(7, 14, 7), float32] {
  @func_5307() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_3635() -> (Tensor[(7, 14, 7), float32],) {
  %423 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %421 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %422 = %421.0;
    (%422,)
  };
  %423() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_4870() -> (Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32]) {
  @func_4868() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32]) */
}

def @func_6426() -> Tensor[(7, 14, 7), float32] {
  %424 = fn () -> Tensor[(7, 14, 7), float32] {
    @func_4477() /* ty=Tensor[(7, 14, 7), float32] */
  };
  %424() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_10007(%var_10006: Tensor[(34320), int32]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(660), float32], Tensor[(34320), int32]) {
  %437 = fn (%var_9993: Tensor[(34320), int32]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(660), float32], Tensor[(34320), int32]) {
    %425 = @func_7776() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
    %426 = @func_3371() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %427 = @func_7381() /* ty=(Tensor[(7, 14, 7), float64],) */;
    %428 = cast(meta[relay.Constant][19] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %429 = cast(%var_9993, dtype="int32") /* ty=Tensor[(34320), int32] */;
    %430 = reshape(%428, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float32] */;
    %431 = reshape(%429, newshape=[34320]) /* ty=Tensor[(34320), int32] */;
    %432 = @func_7480(%430, %431) /* ty=(Tensor[(11, 4, 15), int8], Tensor[(11, ?, 15), float64], Tensor[(7, 14, 7), float32], Tensor[(34320), int32], Tensor[(14, 10, 11), float32]) */;
    %433 = %425.1;
    %434 = %426.0;
    %435 = %427.0;
    %436 = %432.2;
    (%433, %434, %435, %436, meta[relay.Constant][19] /* ty=Tensor[(660), float32] */, %var_9993)
  };
  %437(%var_10006) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(660), float32], Tensor[(34320), int32]) */
}

def @func_293(%var_291: Tensor[(11, 1, 15), float64]) -> Tensor[(11, ?, 15), float32] {
  @func_290(%var_291) /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_7079() -> Tensor[(11, ?, 15), float32] {
  %438 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %438.0
}

def @func_11800() -> (Tensor[(11, ?, 15), float32],) {
  %441 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %439 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
    %440 = %439.1;
    (%440,)
  };
  %441() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_10828() -> Tensor[(14, 10, 11), float32] {
  %442 = @func_6110() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %442.1
}

def @func_5002() -> (Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) {
  @func_5000() /* ty=(Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) */
}

def @func_11586() -> Tensor[(7, 14, 7), float32] {
  @func_11584() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_1531() -> (Tensor[(11, ?, 15), float32],) {
  %443 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  (%443,)
}

def @func_5899() -> Tensor[(7, 14, 7), float32] {
  %444 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %445 = %444.0;
  %446 = cast(%445, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  asin(%446) /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_5263() -> (Tensor[(7, 14, 7), float32],) {
  %447 = @func_2650() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %448 = %447.0;
  (%448,)
}

def @func_9223(%var_9222: Tensor[(4, 14, 7), float32]) -> Tensor[(4, 14, 7), float32] {
  %450 = fn (%var_9211: Tensor[(4, 14, 7), float32]) -> Tensor[(4, 14, 7), float32] {
    %449 = cast(%var_9211, dtype="float32") /* ty=Tensor[(4, 14, 7), float32] */;
    asin(%449) /* ty=Tensor[(4, 14, 7), float32] */
  };
  %450(%var_9222) /* ty=Tensor[(4, 14, 7), float32] */
}

def @func_4477() -> Tensor[(7, 14, 7), float32] {
  %451 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %451.0
}

def @func_7600(%var_7583: Tensor[(5, 10, 16), float64]) -> Tensor[(5, 10, 16), float64] {
  %452 = cast(%var_7583, dtype="float64") /* ty=Tensor[(5, 10, 16), float64] */;
  cos(%452) /* ty=Tensor[(5, 10, 16), float64] */
}

def @func_7231() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  @func_7229() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_10591() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %453 = @func_7381() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %454 = @func_6636() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %455 = %453.0;
  %456 = @func_7320() /* ty=Tensor[(7, 14, 7), float32] */;
  %457 = %454.0;
  (%455, %456, %457)
}

def @func_12892() -> Tensor[(7, 14, 7), float32] {
  @func_10669() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_2791(%var_2790: Tensor[(5, 13, 5), float64]) -> (Tensor[(5, 13, 5), float64],) {
  %463 = fn (%var_2780: Tensor[(5, 13, 5), float64]) -> (Tensor[(5, 13, 5), float64],) {
    %458 = cast(%var_2780, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
    %459 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(5, 13, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %460 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %462 = floor_mod(%460, %461) /* ty=Tensor[(5, 13, 5), float64] */;
    (%462,)
  };
  %463(%var_2790) /* ty=(Tensor[(5, 13, 5), float64],) */
}

def @func_2353() -> (Tensor[(11, ?, 15), float32],) {
  %466 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %464 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %465 = %464.0;
    (%465,)
  };
  %466() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_7382() -> (Tensor[(7, 14, 7), float64],) {
  %468 = fn () -> (Tensor[(7, 14, 7), float64],) {
    %467 = @func_1879() /* ty=Tensor[(7, 14, 7), float64] */;
    (%467,)
  };
  %468() /* ty=(Tensor[(7, 14, 7), float64],) */
}

def @func_8538() -> Tensor[(11, ?, 15), float32] {
  %469 = @func_5101() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %469.0
}

def @func_9465(%var_9464: Tensor[(11, 6, 15), bool]) -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, 6, 15), int32], Tensor[(11, ?, 15), float32]) {
  %485 = fn (%var_9430: Tensor[(11, 6, 15), bool]) -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, 6, 15), int32], Tensor[(11, ?, 15), float32]) {
    %470 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %471 = %470.0;
    %472 = @func_4843() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) */;
    %473 = %472.0;
    %474 = cast(%473, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
    %475 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%471, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %478 = cast(%473, dtype="int32") /* ty=Tensor[(11, ?, 15), int32] */;
    %479 = cast(%var_9430, dtype="int32") /* ty=Tensor[(11, 6, 15), int32] */;
    %480 = @func_3734() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %481 = @func_5686() /* ty=Tensor[(7, 14, 7), float32] */;
    %482 = less(%476, %477) /* ty=Tensor[(11, ?, 15), bool] */;
    %483 = bitwise_xor(%478, %479) /* ty=Tensor[(11, 6, 15), int32] */;
    %484 = %480.0;
    (%481, %482, %483, %484)
  };
  %485(%var_9464) /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, 6, 15), int32], Tensor[(11, ?, 15), float32]) */
}

def @func_5670(%var_5635: Tensor[(1, 3, 15), int32], %var_5636: Tensor[(5, 3, 15), int32]) -> (Tensor[(5, 3, 15), int32], Tensor[(7, 14, 7), float64]) {
  %486 = cast(%var_5635, dtype="int32") /* ty=Tensor[(1, 3, 15), int32] */;
  %487 = cast(%var_5636, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
  %488 = add(%486, %487) /* ty=Tensor[(5, 3, 15), int32] */;
  %489 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
  (%488, %489)
}

def @func_12894() -> Tensor[(7, 14, 7), float32] {
  @func_12892() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_12081() -> Tensor[(11, ?, 15), float32] {
  @func_12079() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_7081() -> Tensor[(11, ?, 15), float32] {
  @func_7079() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_11734() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) {
  %490 = @func_6003() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %491 = @func_6614() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) */;
  %492 = %490.0;
  %493 = %491.1;
  (%492, %493)
}

def @func_4552() -> Tensor[(7, 14, 7), float32] {
  @func_4550() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_3112(%var_3110: Tensor[(16, 10, 8), float64]) -> (Tensor[(14, 10, 11), bool], Tensor[(1, 1540), float32], Tensor[(11, ?, 15), uint16], Tensor[(2145, 1), float32], Tensor[(16, 10, 8), float64]) {
  @func_3109(%var_3110) /* ty=(Tensor[(14, 10, 11), bool], Tensor[(1, 1540), float32], Tensor[(11, ?, 15), uint16], Tensor[(2145, 1), float32], Tensor[(16, 10, 8), float64]) */
}

def @func_9496() -> Tensor[(7, 14, 7), float64] {
  %494 = @func_8564() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
  %494.0
}

def @func_13145() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  @func_13143() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */
}

def @func_9101() -> (Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
  %499 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
    %495 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %496 = @func_8040() /* ty=(Tensor[(14, 10, 11), float32],) */;
    %497 = %495.0;
    %498 = %496.0;
    (%497, %498)
  };
  %499() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) */
}

def @func_12701() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %510 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
    %500 = @func_3235() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %501 = @func_3924() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %502 = @func_3734() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %503 = @func_7175() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) */;
    %504 = @func_6425() /* ty=Tensor[(7, 14, 7), float32] */;
    %505 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
    %506 = %500.0;
    %507 = %501.1;
    %508 = %502.0;
    %509 = %503.4;
    (%504, %505, %506, %507, %508, %509)
  };
  %510() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_2527(%var_2525: Tensor[(14, 10, 11), float32]) -> (Tensor[(14, 10, 11), bool],) {
  @func_2524(%var_2525) /* ty=(Tensor[(14, 10, 11), bool],) */
}

def @func_1880() -> Tensor[(7, 14, 7), float64] {
  %511 = fn () -> Tensor[(7, 14, 7), float64] {
    @func_1354() /* ty=Tensor[(7, 14, 7), float64] */
  };
  %511() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_5074(%var_5051: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) {
  %512 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %513 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %514 = cast(%var_5051, dtype="float64") /* ty=Tensor[(325), float64] */;
  %515 = reshape(%514, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), float64] */;
  %516 = @func_2789(%515) /* ty=(Tensor[(5, 13, 5), float64],) */;
  %517 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %518 = %512.0;
  %519 = %513.0;
  %520 = @func_4477() /* ty=Tensor[(7, 14, 7), float32] */;
  %521 = %516.0;
  %522 = @func_4293() /* ty=Tensor[(7, 14, 7), float64] */;
  %523 = %517.1;
  (%518, %519, %520, %521, %var_5051, %522, %523)
}

def @func_9813() -> Tensor[(7, 14, 7), float32] {
  @func_2031() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_1355() -> Tensor[(7, 14, 7), float64] {
  %529 = fn () -> Tensor[(7, 14, 7), float64] {
    %524 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %525 = %524.0;
    %526 = cast(%525, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
    %527 = log2(%526) /* ty=Tensor[(7, 14, 7), float32] */;
    %528 = cast(%527, dtype="float64") /* ty=Tensor[(7, 14, 7), float64] */;
    sin(%528) /* ty=Tensor[(7, 14, 7), float64] */
  };
  %529() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_4174(%var_4172: Tensor[(9, 11, 14), float32], %var_4173: Tensor[(9, 11, 14), float32]) -> (Tensor[(2145), float32], Tensor[(165), float64], Tensor[(9, 11, 14), int16], Tensor[(60, 12), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), int16]) {
  %562 = fn (%var_4046: Tensor[(9, 11, 14), float32], %var_4047: Tensor[(9, 11, 14), float32]) -> (Tensor[(2145), float32], Tensor[(165), float64], Tensor[(9, 11, 14), int16], Tensor[(60, 12), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), int16]) {
    %530 = cast(meta[relay.Constant][21] /* ty=Tensor[(60, 12), int64] */, dtype="int64") /* ty=Tensor[(60, 12), int64] */;
    %531 = reshape(%530, newshape=[10, 6, 12]) /* ty=Tensor[(10, 6, 12), int64] */;
    %532 = @func_2963(%531) /* ty=(Tensor[(10, 6, 12), int64], Tensor[(2145), float32]) */;
    %533 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
    %534 = cast(%var_4047, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
    %535 = shape_of(%var_4046, dtype="int32") /* ty=Tensor[(3), int32] */;
    %536 = cast(%var_4046, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %538 = power(%536, %537) /* ty=Tensor[(9, 11, 14), float32] */;
    %539 = cast(%var_4046, dtype="int16") /* ty=Tensor[(9, 11, 14), int16] */;
    %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
    %541 = cast(%538, dtype="int16") /* ty=Tensor[(9, 11, 14), int16] */;
    %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %543 = cast(meta[relay.Constant][22] /* ty=Tensor[(60, 12), int64] */, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
    %544 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(60, 12), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %545 = cast(meta[relay.Constant][21] /* ty=Tensor[(60, 12), int64] */, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
    %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %547 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %548 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
    %549 = %548.1;
    %550 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %551 = %550.1;
    %552 = cast(%551, dtype="int16") /* ty=Tensor[(11, ?, 15), int16] */;
    %553 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(%549, dtype="int16") /* ty=Tensor[(11, ?, 15), int16] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %556 = %532.1;
    %557 = %533.2;
    %558 = logical_xor(%541, %542) /* ty=Tensor[(9, 11, 14), int16] */;
    %559 = logical_or(%545, %546) /* ty=Tensor[(60, 12), bool] */;
    %560 = %547.0;
    %561 = bitwise_or(%554, %555) /* ty=Tensor[(11, ?, 15), int16] */;
    (%556, %557, %558, %559, %560, %561)
  };
  %562(%var_4172, %var_4173) /* ty=(Tensor[(2145), float32], Tensor[(165), float64], Tensor[(9, 11, 14), int16], Tensor[(60, 12), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), int16]) */
}

def @func_6528() -> Tensor[(7, 14, 7), float32] {
  %564 = fn () -> Tensor[(7, 14, 7), float32] {
    %563 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %563.0
  };
  %564() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_6784() -> (Tensor[(11, ?, 15), float32], Tensor[(96), float32], Tensor[(8, 2, 6), float32]) {
  %571 = fn () -> (Tensor[(11, ?, 15), float32], Tensor[(96), float32], Tensor[(8, 2, 6), float32]) {
    %565 = cast(meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %566 = reshape(%565, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float32] */;
    %567 = @func_6238(%566) /* ty=Tensor[(8, 2, 6), float32] */;
    %568 = cast(%567, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
    %569 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
    %570 = log2(%568) /* ty=Tensor[(8, 2, 6), float32] */;
    (%569, meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, %570)
  };
  %571() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(96), float32], Tensor[(8, 2, 6), float32]) */
}

def @func_4519() -> (Tensor[(7, 14, 7), float32],) {
  %572 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %573 = %572.0;
  (%573,)
}

def @func_971(%var_924: Tensor[(11, 13, 15), float32]) -> (Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) {
  %574 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %575 = %574.0;
  %576 = cast(%575, dtype="int8") /* ty=Tensor[(11, ?, 15), int8] */;
  %577 = cast(%var_924, dtype="int8") /* ty=Tensor[(11, 13, 15), int8] */;
  %578 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %579 = cast(%575, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %580 = reshape(%579, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %581 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %582 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %583 = add(%576, %577) /* ty=Tensor[(11, 13, 15), int8] */;
  %584 = %578.0;
  %585 = @func_290(%580) /* ty=Tensor[(11, ?, 15), float32] */;
  %586 = %581.0;
  %587 = %582.0;
  (%583, %584, %585, %586, %587)
}

def @func_8245() -> Tensor[(11, ?, 15), float32] {
  %589 = fn () -> Tensor[(11, ?, 15), float32] {
    %588 = @func_3734() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %588.0
  };
  %589() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_6112() -> (Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  @func_6110() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_8540() -> Tensor[(11, ?, 15), float32] {
  @func_8538() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_6856(%var_6854: Tensor[(2145, 16), int32]) -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) {
  @func_6853(%var_6854) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) */
}

def @func_9008() -> (Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015, 1), float32]) {
  %595 = fn () -> (Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015, 1), float32]) {
    %590 = @func_7046() /* ty=(Tensor[(11, ?, 15), bool],) */;
    %591 = cast(meta[relay.Constant][24] /* ty=Tensor[(15015, 1), float32] */, dtype="float32") /* ty=Tensor[(15015, 1), float32] */;
    %592 = reshape(%591, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
    %593 = %590.0;
    %594 = @func_1735(%592) /* ty=Tensor[(2145, 7), bool] */;
    (%593, %594, meta[relay.Constant][24] /* ty=Tensor[(15015, 1), float32] */)
  };
  %595() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015, 1), float32]) */
}

def @func_11884() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %600 = fn () -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
    %596 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %597 = @func_5000() /* ty=(Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) */;
    %598 = %596.0;
    %599 = %597.1;
    (%598, %599)
  };
  %600() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_4479() -> Tensor[(7, 14, 7), float32] {
  @func_4477() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_11339() -> Tensor[(7, 14, 7), float32] {
  @func_3412() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_5239(%var_5237: Tensor[(16, 11, 7), int32], %var_5238: Tensor[(16, 11, 7), int32]) -> Tensor[(16, 11, 7), int32] {
  @func_5235(%var_5237, %var_5238) /* ty=Tensor[(16, 11, 7), int32] */
}

def @func_8724(%var_8720: Tensor[(6, 12, 16), float32], %var_8721: Tensor[(6, 12, 16), float32], %var_8722: Tensor[(1, 2145), float32], %var_8723: Tensor[(13, 2145), float64]) -> (Tensor[(6, 12, 16), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(13, 2145), bool]) {
  %617 = fn (%var_8662: Tensor[(6, 12, 16), float32], %var_8663: Tensor[(6, 12, 16), float32], %var_8668: Tensor[(1, 2145), float32], %var_8709: Tensor[(13, 2145), float64]) -> (Tensor[(6, 12, 16), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(13, 2145), bool]) {
    %601 = cast(%var_8663, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
    %602 = shape_of(%var_8662, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%var_8662, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %605 = cast(%var_8668, dtype="float32") /* ty=Tensor[(1, 2145), float32] */;
    %606 = reshape(%605, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), float32] */;
    %607 = @func_971(%606) /* ty=(Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */;
    %608 = @func_6122() /* ty=(Tensor[(11, ?, 15), bool],) */;
    %609 = cast(%var_8668, dtype="float64") /* ty=Tensor[(1, 2145), float64] */;
    %610 = sinh(%609) /* ty=Tensor[(1, 2145), float64] */;
    %611 = cast(%610, dtype="bool") /* ty=Tensor[(1, 2145), bool] */;
    %612 = cast(%var_8709, dtype="bool") /* ty=Tensor[(13, 2145), bool] */;
    %613 = maximum(%603, %604) /* ty=Tensor[(6, 12, 16), float32] */;
    %614 = %607.1;
    %615 = %608.0;
    %616 = greater_equal(%611, %612) /* ty=Tensor[(13, 2145), bool] */;
    (%613, %614, %615, %616)
  };
  %617(%var_8720, %var_8721, %var_8722, %var_8723) /* ty=(Tensor[(6, 12, 16), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(13, 2145), bool]) */
}

def @func_1855() -> (Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %618 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %619 = %618.0;
  %620 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
  %621 = %620.2;
  %622 = cast(%621, dtype="uint16") /* ty=Tensor[(165), uint16] */;
  %623 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%619, dtype="uint16") /* ty=Tensor[(11, ?, 15), uint16] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %626 = cast(%621, dtype="float64") /* ty=Tensor[(165), float64] */;
  %627 = reshape(%626, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %628 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %629 = left_shift(%624, %625) /* ty=Tensor[(11, ?, 15), uint16] */;
  %630 = @func_290(%627) /* ty=Tensor[(11, ?, 15), float32] */;
  %631 = %628.2;
  (%629, %630, %631)
}

def @func_7777() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %635 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
    %632 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %633 = @func_6425() /* ty=Tensor[(7, 14, 7), float32] */;
    %634 = %632.0;
    (%633, %634)
  };
  %635() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_8027(%var_8026: Tensor[(1540), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(1540), int8]) {
  %653 = fn (%var_8000: Tensor[(1540), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(1540), int8]) {
    %636 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
    %637 = @func_4934() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %638 = @func_5323() /* ty=(Tensor[(11, ?, 15), uint16],) */;
    %639 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %640 = cast(%var_8000, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %641 = reshape(%640, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
    %642 = @func_2524(%641) /* ty=(Tensor[(14, 10, 11), bool],) */;
    %643 = %642.0;
    %644 = cast(%643, dtype="int8") /* ty=Tensor[(14, 10, 11), int8] */;
    %645 = shape_of(%var_8000, dtype="int32") /* ty=Tensor[(1), int32] */;
    %646 = cast(%var_8000, dtype="int8") /* ty=Tensor[(1540), int8] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?), int8] */;
    %648 = %636.0;
    %649 = %637.0;
    %650 = %638.0;
    %651 = %639.0;
    %652 = bitwise_or(%646, %647) /* ty=Tensor[(1540), int8] */;
    (%648, %649, %650, %651, %652)
  };
  %653(%var_8026) /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(1540), int8]) */
}

def @func_12066(%var_12064: int16, %var_12065: Tensor[(112), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(8, 7, 2), float32], int16, Tensor[(112), float32]) {
  @func_12062(%var_12064, %var_12065) /* ty=(Tensor[(7, 14, 7), float32], Tensor[(8, 7, 2), float32], int16, Tensor[(112), float32]) */
}

def @func_9367() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  @func_9365() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_7889() -> (Tensor[(7, 14, 7), float32],) {
  %654 = @func_7678() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %655 = %654.0;
  (%655,)
}

def @func_1270() -> Tensor[(11, ?, 15), float32] {
  @func_1268() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_11341() -> Tensor[(7, 14, 7), float32] {
  @func_11339() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_3236() -> (Tensor[(11, ?, 15), float32],) {
  %658 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %656 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %657 = %656.0;
    (%657,)
  };
  %658() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_13109() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  @func_13107() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */
}

def @func_8263() -> (Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %663 = fn () -> (Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
    %659 = @func_2650() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %660 = @func_6891() /* ty=Tensor[(14, 10, 11), float32] */;
    %661 = %659.0;
    %662 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
    (%660, %661, %662)
  };
  %663() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_11504() -> Tensor[(11, ?, 15), float32] {
  @func_11502() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_7048() -> (Tensor[(11, ?, 15), bool],) {
  @func_7046() /* ty=(Tensor[(11, ?, 15), bool],) */
}

def @func_3736() -> (Tensor[(11, ?, 15), float32],) {
  @func_3734() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_7932() -> (Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) {
  %664 = @func_4342() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */;
  %665 = @func_4026() /* ty=Tensor[(7, 14, 7), float64] */;
  %666 = %664.1;
  (%665, %666)
}

def @func_5376() -> (Tensor[(7, 14, 7), float32],) {
  @func_5374() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_3412() -> Tensor[(7, 14, 7), float32] {
  %667 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
  %667.1
}

def @func_9164() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %671 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
    %668 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %669 = @func_6527() /* ty=Tensor[(7, 14, 7), float32] */;
    %670 = %668.0;
    (%669, %670)
  };
  %671() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_13074() -> Tensor[(7, 14, 7), float64] {
  %673 = fn () -> Tensor[(7, 14, 7), float64] {
    %672 = @func_6003() /* ty=(Tensor[(7, 14, 7), float64],) */;
    %672.0
  };
  %673() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_12474() -> (Tensor[(11, ?, 15), float32],) {
  %676 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %674 = @func_5941() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float64]) */;
    %675 = %674.2;
    (%675,)
  };
  %676() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_974(%var_972: Tensor[(11, 13, 15), float32]) -> (Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) {
  @func_971(%var_972) /* ty=(Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */
}

def @func_5737() -> (Tensor[(7, 14, 7), float32],) {
  %677 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %678 = %677.0;
  (%678,)
}

def @func_1086() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) {
  %679 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %680 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
  %681 = %679.0;
  %682 = %680.0;
  (%681, %682)
}

def @func_3301() -> (Tensor[(7, 14, 7), float64],) {
  %684 = fn () -> (Tensor[(7, 14, 7), float64],) {
    %683 = @func_1354() /* ty=Tensor[(7, 14, 7), float64] */;
    (%683,)
  };
  %684() /* ty=(Tensor[(7, 14, 7), float64],) */
}

def @func_6124() -> (Tensor[(11, ?, 15), bool],) {
  @func_6122() /* ty=(Tensor[(11, ?, 15), bool],) */
}

def @func_12311() -> (Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %692 = fn () -> (Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
    %685 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
    %686 = @func_9649() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %687 = @func_6487() /* ty=Tensor[(14, 10, 11), float32] */;
    %688 = %685.0;
    %689 = @func_8170() /* ty=Tensor[(11, ?, 15), float32] */;
    %690 = @func_8538() /* ty=Tensor[(11, ?, 15), float32] */;
    %691 = %686.0;
    (%687, %688, %689, %690, %691)
  };
  %692() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_6487() -> Tensor[(14, 10, 11), float32] {
  %693 = @func_4868() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32]) */;
  %693.2
}

def @func_7628(%var_7626: Tensor[(11, 8, 8), int32], %var_7627: Tensor[(11, 8, 8), int32]) -> Tensor[(11, 8, 8), bool] {
  %698 = fn (%var_7616: Tensor[(11, 8, 8), int32], %var_7617: Tensor[(11, 8, 8), int32]) -> Tensor[(11, 8, 8), bool] {
    %694 = cast(%var_7617, dtype="bool") /* ty=Tensor[(11, 8, 8), bool] */;
    %695 = shape_of(%var_7616, dtype="int32") /* ty=Tensor[(3), int32] */;
    %696 = cast(%var_7616, dtype="bool") /* ty=Tensor[(11, 8, 8), bool] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%696, %697) /* ty=Tensor[(11, 8, 8), bool] */
  };
  %698(%var_7626, %var_7627) /* ty=Tensor[(11, 8, 8), bool] */
}

def @func_6892() -> Tensor[(14, 10, 11), float32] {
  %699 = fn () -> Tensor[(14, 10, 11), float32] {
    @func_3984() /* ty=Tensor[(14, 10, 11), float32] */
  };
  %699() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_8345() -> (Tensor[(11, ?, 15), float32],) {
  @func_8343() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_617() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) {
  @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */
}

def @func_5674(%var_5672: Tensor[(1, 3, 15), int32], %var_5673: Tensor[(5, 3, 15), int32]) -> (Tensor[(5, 3, 15), int32], Tensor[(7, 14, 7), float64]) {
  @func_5670(%var_5672, %var_5673) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(7, 14, 7), float64]) */
}

def @func_6672(%var_6669: Tensor[(4, 16, 12), float32], %var_6670: Tensor[(4, 16, 12), float32], %var_6671: Tensor[(45), int32]) -> (Tensor[(7, 14, 7), float64], Tensor[(5, 3, 15), int32], Tensor[(45), int32], Tensor[(5, 45), int32], Tensor[(4, 16, 12), int64]) {
  @func_6667(%var_6669, %var_6670, %var_6671) /* ty=(Tensor[(7, 14, 7), float64], Tensor[(5, 3, 15), int32], Tensor[(45), int32], Tensor[(5, 45), int32], Tensor[(4, 16, 12), int64]) */
}

def @func_7480(%var_7464: Tensor[(11, 4, 15), float32], %var_7476: Tensor[(34320), int32]) -> (Tensor[(11, 4, 15), int8], Tensor[(11, ?, 15), float64], Tensor[(7, 14, 7), float32], Tensor[(34320), int32], Tensor[(14, 10, 11), float32]) {
  %700 = @func_1035() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %701 = %700.0;
  %702 = cast(%701, dtype="int8") /* ty=Tensor[(11, ?, 15), int8] */;
  %703 = cast(%var_7464, dtype="int8") /* ty=Tensor[(11, 4, 15), int8] */;
  %704 = cast(%701, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %705 = cast(%var_7476, dtype="int32") /* ty=Tensor[(34320), int32] */;
  %706 = reshape(%705, newshape=[2145, 16]) /* ty=Tensor[(2145, 16), int32] */;
  %707 = @func_6853(%706) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) */;
  %708 = @func_4233() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool]) */;
  %709 = logical_xor(%702, %703) /* ty=Tensor[(11, 4, 15), int8] */;
  %710 = cosh(%704) /* ty=Tensor[(11, ?, 15), float64] */;
  %711 = %707.1;
  %712 = %708.0;
  (%709, %710, %711, %var_7476, %712)
}

def @func_5628() -> Tensor[(7, 14, 7), float64] {
  %716 = fn () -> Tensor[(7, 14, 7), float64] {
    %713 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
    %714 = %713.1;
    %715 = cast(%714, dtype="float64") /* ty=Tensor[(7, 14, 7), float64] */;
    acosh(%715) /* ty=Tensor[(7, 14, 7), float64] */
  };
  %716() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_7322() -> Tensor[(7, 14, 7), float32] {
  @func_7320() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_5101() -> (Tensor[(11, ?, 15), float32],) {
  %717 = @func_1765() /* ty=Tensor[(11, ?, 15), float32] */;
  %718 = cast(%717, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %719 = rsqrt(%718) /* ty=Tensor[(11, ?, 15), float32] */;
  (%719,)
}

def @func_8753() -> (Tensor[(7, 14, 7), float32],) {
  @func_8751() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_5688() -> Tensor[(7, 14, 7), float32] {
  @func_5686() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_5570() -> (Tensor[(7, 14, 7), float32],) {
  @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_8883(%var_8819: Tensor[(96), float32], %var_8840: Tensor[(108), float64]) -> (Tensor[(7, 14, 7), float64], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(11, ?, 15), uint16], Tensor[(12, 3, 3), float64], Tensor[(108), float64], Tensor[(2145, 16), int32], Tensor[(11, ?, 15), float32]) {
  %720 = @func_8524() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float64]) */;
  %721 = cast(%var_8819, dtype="float32") /* ty=Tensor[(96), float32] */;
  %722 = reshape(%721, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float32] */;
  %723 = @func_5323() /* ty=(Tensor[(11, ?, 15), uint16],) */;
  %724 = cast(%var_8840, dtype="float64") /* ty=Tensor[(108), float64] */;
  %725 = reshape(%724, newshape=[12, 3, 3]) /* ty=Tensor[(12, 3, 3), float64] */;
  %726 = @func_4458() /* ty=Tensor[(2145, 16), int32] */;
  %727 = cast(%726, dtype="int32") /* ty=Tensor[(2145, 16), int32] */;
  %728 = reshape(%727, newshape=[2145, 16]) /* ty=Tensor[(2145, 16), int32] */;
  %729 = @func_6853(%728) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(2145, 16), float32], Tensor[(2145, 16), int64]) */;
  %730 = %720.0;
  %731 = @func_6238(%722) /* ty=Tensor[(8, 2, 6), float32] */;
  %732 = %723.0;
  %733 = @func_8629(%725) /* ty=Tensor[(12, 3, 3), float64] */;
  %734 = %729.0;
  (%730, %731, %var_8819, %732, %733, %var_8840, %726, %734)
}

def @func_12157(%var_12123: Tensor[(320, 4), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(320, 4), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %735 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %736 = cast(%var_12123, dtype="float64") /* ty=Tensor[(320, 4), float64] */;
  %737 = reshape(%736, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %738 = @func_9199(%737) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) */;
  %739 = cast(meta[relay.Constant][25] /* ty=Tensor[(320, 4), float64] */, dtype="bool") /* ty=Tensor[(320, 4), bool] */;
  %740 = shape_of(%var_12123, dtype="int32") /* ty=Tensor[(2), int32] */;
  %741 = cast(%var_12123, dtype="bool") /* ty=Tensor[(320, 4), bool] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %743 = not_equal(%741, %742) /* ty=Tensor[(320, 4), bool] */;
  %744 = cast(%743, dtype="float32") /* ty=Tensor[(320, 4), float32] */;
  %745 = shape_of(%var_12123, dtype="int32") /* ty=Tensor[(2), int32] */;
  %746 = cast(%var_12123, dtype="float32") /* ty=Tensor[(320, 4), float32] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %748 = @func_8262() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %749 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %750 = %735.0;
  %751 = %738.0;
  %752 = mod(%746, %747) /* ty=Tensor[(320, 4), float32] */;
  %753 = %748.2;
  %754 = %749.0;
  (%750, %751, %752, %753, %754)
}

def @func_3926() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  @func_3924() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_9815() -> Tensor[(7, 14, 7), float32] {
  @func_9813() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_5739() -> (Tensor[(7, 14, 7), float32],) {
  @func_5737() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_11584() -> Tensor[(7, 14, 7), float32] {
  %755 = @func_7229() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %755.0
}

def @func_7046() -> (Tensor[(11, ?, 15), bool],) {
  %756 = @func_4843() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015), float32]) */;
  %757 = %756.0;
  (%757,)
}

def @func_11521() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) {
  %760 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) {
    %758 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
    %759 = @func_1354() /* ty=Tensor[(7, 14, 7), float64] */;
    (%758, %759)
  };
  %760() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) */
}

def @func_7176() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) {
  %774 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) {
    %761 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %762 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %763 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %764 = @func_2914() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) */;
    %765 = @func_5493() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %766 = @func_3235() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %767 = %761.0;
    %768 = %762.0;
    %769 = %763.0;
    %770 = %764.1;
    %771 = %765.0;
    %772 = @func_3548() /* ty=Tensor[(11, ?, 15), bool] */;
    %773 = %766.0;
    (%767, %768, %769, %770, %771, %772, %773)
  };
  %774() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32]) */
}

def @func_1179() -> (Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) {
  %791 = fn () -> (Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) {
    %775 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %776 = %775.0;
    %777 = cast(%776, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
    %778 = atan(%777) /* ty=Tensor[(11, ?, 15), float64] */;
    %779 = cast(%776, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
    %780 = reshape(%779, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
    %781 = @func_290(%780) /* ty=Tensor[(11, ?, 15), float32] */;
    %782 = cast(%781, dtype="int64") /* ty=Tensor[(11, ?, 15), int64] */;
    %783 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
    %784 = cast(%778, dtype="int64") /* ty=Tensor[(11, ?, 15), int64] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %786 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
    %787 = reshape(%786, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), float32] */;
    %788 = @func_971(%787) /* ty=(Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */;
    %789 = right_shift(%784, %785) /* ty=Tensor[(11, ?, 15), int64] */;
    %790 = %788.3;
    (%789, %790, meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */)
  };
  %791() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */
}

def @func_3373() -> (Tensor[(11, ?, 15), float32],) {
  @func_3371() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_6298() -> Tensor[(11, ?, 15), float32] {
  @func_6296() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_3984() -> Tensor[(14, 10, 11), float32] {
  %792 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %792.1
}

def @func_6238(%var_6234: Tensor[(8, 2, 6), float32]) -> Tensor[(8, 2, 6), float32] {
  %793 = cast(%var_6234, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  atan(%793) /* ty=Tensor[(8, 2, 6), float32] */
}

def @func_819() -> (Tensor[(7, 14, 7), float32],) {
  %794 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %795 = sqrt(%794) /* ty=Tensor[(7, 14, 7), float32] */;
  (%795,)
}

def @func_2266() -> Tensor[(11, ?, 15), float32] {
  %796 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %796.0
}

def @func_4934() -> (Tensor[(7, 14, 7), float32],) {
  %797 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
  (%797,)
}

def @func_998() -> (Tensor[(11, ?, 15), float32],) {
  %800 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %798 = @func_739() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %799 = %798.0;
    (%799,)
  };
  %800() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_12039() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) {
  %804 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) {
    %801 = @func_8564() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(7, 14, 7), float32]) */;
    %802 = @func_6425() /* ty=Tensor[(7, 14, 7), float32] */;
    %803 = %801.1;
    (%802, %803)
  };
  %804() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */
}

def @func_2323() -> Tensor[(7, 14, 7), float64] {
  @func_2321() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_3708() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %805 = @func_2650() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %806 = %805.0;
  %807 = @func_2460() /* ty=Tensor[(11, ?, 15), float32] */;
  (%806, %807)
}

def @func_11550() -> Tensor[(7, 14, 7), float64] {
  %809 = fn () -> Tensor[(7, 14, 7), float64] {
    %808 = @func_3300() /* ty=(Tensor[(7, 14, 7), float64],) */;
    %808.0
  };
  %809() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_8343() -> (Tensor[(11, ?, 15), float32],) {
  %810 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
  (%810,)
}

def @func_9889(%var_9887: Tensor[(11, 4, 15), float32]) -> (Tensor[(7, 14, 7), float32], Tensor[(11, 4, 15), bool]) {
  @func_9886(%var_9887) /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, 4, 15), bool]) */
}

def @func_5994() -> (Tensor[(11, ?, 15), float32],) {
  %813 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %811 = @func_3371() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %812 = %811.0;
    (%812,)
  };
  %813() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_11315() -> (Tensor[(7, 14, 7), float32],) {
  %815 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %814 = @func_3412() /* ty=Tensor[(7, 14, 7), float32] */;
    (%814,)
  };
  %815() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_7229() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  %816 = @func_5737() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %819 = reshape(%818, newshape=[7, 14, 7]) /* ty=Tensor[(7, 14, 7), float32] */;
  %820 = @func_2186(%819) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */;
  %821 = %820.0;
  (%817, %821)
}

def @func_2018() -> (Tensor[(11, ?, 15), bool],) {
  %822 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  %823 = cast(%822, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %824 = erf(%823) /* ty=Tensor[(11, ?, 15), float32] */;
  %825 = cast(%822, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %829 = greater(%827, %828) /* ty=Tensor[(11, ?, 15), bool] */;
  (%829,)
}

def @func_7737() -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) {
  %835 = fn () -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) {
    %830 = @func_2656() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %831 = @func_3300() /* ty=(Tensor[(7, 14, 7), float64],) */;
    %832 = @func_4293() /* ty=Tensor[(7, 14, 7), float64] */;
    %833 = %830.0;
    %834 = %831.0;
    (%832, %833, %834)
  };
  %835() /* ty=(Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) */
}

def @func_6122() -> (Tensor[(11, ?, 15), bool],) {
  %836 = @func_3548() /* ty=Tensor[(11, ?, 15), bool] */;
  (%836,)
}

def @func_9202(%var_9200: Tensor[(1280), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) {
  @func_9199(%var_9200) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) */
}

def @func_12741() -> Tensor[(11, ?, 15), bool] {
  @func_12739() /* ty=Tensor[(11, ?, 15), bool] */
}

def @func_6596() -> Tensor[(11, ?, 15), bool] {
  @func_6594() /* ty=Tensor[(11, ?, 15), bool] */
}

def @func_2925() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) {
  %843 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) {
    %837 = @func_1384() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %838 = cast(meta[relay.Constant][28] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %839 = reshape(%838, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %840 = @func_2715(%839) /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
    %841 = %837.0;
    %842 = %840.3;
    (%841, %842, meta[relay.Constant][28] /* ty=Tensor[(2145), float32] */)
  };
  %843() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */
}

def @func_2717(%var_2716: Tensor[(2145), float32]) -> (Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) {
  %859 = fn (%var_2707: Tensor[(2145), float32]) -> (Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) {
    %844 = @func_2656() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %845 = %844.0;
    %846 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 1, 15), bool] */;
    %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
    %848 = cast(%845, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %850 = @func_1206() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %851 = @func_1855() /* ty=(Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %852 = cast(%var_2707, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %853 = reshape(%852, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), float32] */;
    %854 = @func_971(%853) /* ty=(Tensor[(11, 13, 15), int8], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32]) */;
    %855 = not_equal(%848, %849) /* ty=Tensor[(11, ?, 15), bool] */;
    %856 = %850.0;
    %857 = %851.0;
    %858 = %854.3;
    (%855, %856, %857, %858, %var_2707)
  };
  %859(%var_2716) /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */
}

def @func_663(%var_661: Tensor[(8, 2, 8), uint64], %var_662: Tensor[(8, 2, 8), uint64]) -> (Tensor[(8, 2, 8), uint64],) {
  %865 = fn (%var_628: Tensor[(8, 2, 8), uint64], %var_629: Tensor[(8, 2, 8), uint64]) -> (Tensor[(8, 2, 8), uint64],) {
    %860 = cast(%var_629, dtype="uint64") /* ty=Tensor[(8, 2, 8), uint64] */;
    %861 = shape_of(%var_628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %862 = cast(%var_628, dtype="uint64") /* ty=Tensor[(8, 2, 8), uint64] */;
    %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %864 = left_shift(%862, %863) /* ty=Tensor[(8, 2, 8), uint64] */;
    (%864,)
  };
  %865(%var_661, %var_662) /* ty=(Tensor[(8, 2, 8), uint64],) */
}

def @func_6489() -> Tensor[(14, 10, 11), float32] {
  @func_6487() /* ty=Tensor[(14, 10, 11), float32] */
}

def @func_2524(%var_2512: Tensor[(14, 10, 11), float32]) -> (Tensor[(14, 10, 11), bool],) {
  %866 = @func_1035() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %867 = %866.1;
  %868 = cast(%var_2512, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%867, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %872 = greater_equal(%870, %871) /* ty=Tensor[(14, 10, 11), bool] */;
  (%872,)
}

def @func_11826() -> Tensor[(7, 14, 7), float32] {
  %874 = fn () -> Tensor[(7, 14, 7), float32] {
    %873 = @func_2924() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(2145), float32]) */;
    %873.0
  };
  %874() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_3924() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %875 = @func_1855() /* ty=(Tensor[(11, ?, 15), uint16], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %876 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
  %877 = %875.2;
  %878 = %876.2;
  (%877, %878)
}

def @func_1807(%var_1805: Tensor[(14, 10, 11), float32]) -> (Tensor[(14, 10, 11), bool],) {
  @func_1804(%var_1805) /* ty=(Tensor[(14, 10, 11), bool],) */
}

def @func_7780() -> Tensor[(7, 14, 7), float64] {
  %879 = @func_7350() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %879.0
}

def @func_11951() -> (Tensor[(11, 6, 15), bool],) {
  %880 = @func_5993() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %881 = %880.0;
  %882 = cast(%881, dtype="bool") /* ty=Tensor[(11, ?, 15), bool] */;
  %883 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 6, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %884 = less(%882, %883) /* ty=Tensor[(11, 6, 15), bool] */;
  (%884,)
}

def @func_11163() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32]) {
  %885 = @func_9649() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %886 = @func_8040() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %887 = %885.0;
  %888 = @func_5307() /* ty=Tensor[(7, 14, 7), float32] */;
  %889 = %886.0;
  (%887, %888, %889)
}

def @func_2186(%var_2148: Tensor[(7, 14, 7), float32]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %890 = @func_1531() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %891 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
  %892 = cast(%891, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %893 = reshape(%892, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
  %894 = @func_819() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %895 = %894.0;
  %896 = cast(%var_2148, dtype="bool") /* ty=Tensor[(7, 14, 7), bool] */;
  %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%895, dtype="bool") /* ty=Tensor[(7, 14, 7), bool] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %900 = greater(%898, %899) /* ty=Tensor[(7, 14, 7), bool] */;
  %901 = cast(%900, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %902 = %890.0;
  %903 = @func_290(%893) /* ty=Tensor[(11, ?, 15), float32] */;
  %904 = sinh(%901) /* ty=Tensor[(7, 14, 7), float32] */;
  (%902, %891, %903, %904)
}

def @func_5720() -> Tensor[(7, 14, 7), float32] {
  @func_5718() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_3337() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_10487() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) {
  %905 = @func_4934() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %906 = cast(meta[relay.Constant][31] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %907 = reshape(%906, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %908 = @func_2524(%907) /* ty=(Tensor[(14, 10, 11), bool],) */;
  %909 = @func_7320() /* ty=Tensor[(7, 14, 7), float32] */;
  %910 = %905.0;
  %911 = %908.0;
  (%909, %910, %911, meta[relay.Constant][31] /* ty=Tensor[(1540), float32] */)
}

def @func_5265() -> (Tensor[(7, 14, 7), float32],) {
  @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_9199(%var_9184: Tensor[(1280), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) {
  %912 = @func_8231() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %913 = cast(%var_9184, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %914 = reshape(%913, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), float64] */;
  %915 = @func_3109(%914) /* ty=(Tensor[(14, 10, 11), bool], Tensor[(1, 1540), float32], Tensor[(11, ?, 15), uint16], Tensor[(2145, 1), float32], Tensor[(16, 10, 8), float64]) */;
  %916 = %912.0;
  %917 = %915.2;
  (%916, %917, %var_9184)
}

def @func_8887(%var_8885: Tensor[(96), float32], %var_8886: Tensor[(108), float64]) -> (Tensor[(7, 14, 7), float64], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(11, ?, 15), uint16], Tensor[(12, 3, 3), float64], Tensor[(108), float64], Tensor[(2145, 16), int32], Tensor[(11, ?, 15), float32]) {
  @func_8883(%var_8885, %var_8886) /* ty=(Tensor[(7, 14, 7), float64], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(11, ?, 15), uint16], Tensor[(12, 3, 3), float64], Tensor[(108), float64], Tensor[(2145, 16), int32], Tensor[(11, ?, 15), float32]) */
}

def @func_4936() -> (Tensor[(7, 14, 7), float32],) {
  @func_4934() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_10330() -> Tensor[(7, 14, 7), float32] {
  @func_10328() /* ty=Tensor[(7, 14, 7), float32] */
}

def @func_11217() -> Tensor[(14, 10, 11), float32] {
  %918 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
  %918.0
}

def @func_9513() -> (Tensor[(14, 10, 11), float32],) {
  @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */
}

def @func_8631(%var_8630: Tensor[(12, 3, 3), float64]) -> Tensor[(12, 3, 3), float64] {
  %920 = fn (%var_8625: Tensor[(12, 3, 3), float64]) -> Tensor[(12, 3, 3), float64] {
    %919 = cast(%var_8625, dtype="float64") /* ty=Tensor[(12, 3, 3), float64] */;
    acosh(%919) /* ty=Tensor[(12, 3, 3), float64] */
  };
  %920(%var_8630) /* ty=Tensor[(12, 3, 3), float64] */
}

def @func_5568() -> (Tensor[(7, 14, 7), float32],) {
  %921 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
  %922 = %921.0;
  (%922,)
}

def @func_12739() -> Tensor[(11, ?, 15), bool] {
  %923 = @func_2091() /* ty=(Tensor[(11, ?, 15), bool],) */;
  %923.0
}

def @func_5128() -> Tensor[(11, ?, 15), float32] {
  @func_5126() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_6667(%var_6651: Tensor[(4, 16, 12), float32], %var_6652: Tensor[(4, 16, 12), float32], %var_6661: Tensor[(45), int32]) -> (Tensor[(7, 14, 7), float64], Tensor[(5, 3, 15), int32], Tensor[(45), int32], Tensor[(5, 45), int32], Tensor[(4, 16, 12), int64]) {
  %924 = cast(%var_6661, dtype="int32") /* ty=Tensor[(45), int32] */;
  %925 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 45), int32] */, dtype="int32") /* ty=Tensor[(5, 45), int32] */;
  %926 = reshape(%924, newshape=[1, 3, 15]) /* ty=Tensor[(1, 3, 15), int32] */;
  %927 = reshape(%925, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %928 = @func_5670(%926, %927) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(7, 14, 7), float64]) */;
  %929 = cast(%var_6652, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %930 = shape_of(%var_6651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%var_6651, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %933 = power(%931, %932) /* ty=Tensor[(4, 16, 12), float32] */;
  %934 = cast(%var_6652, dtype="int64") /* ty=Tensor[(4, 16, 12), int64] */;
  %935 = shape_of(%933, dtype="int32") /* ty=Tensor[(3), int32] */;
  %936 = cast(%933, dtype="int64") /* ty=Tensor[(4, 16, 12), int64] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %938 = @func_5627() /* ty=Tensor[(7, 14, 7), float64] */;
  %939 = %928.0;
  %940 = bitwise_or(%936, %937) /* ty=Tensor[(4, 16, 12), int64] */;
  (%938, %939, %var_6661, meta[relay.Constant][32] /* ty=Tensor[(5, 45), int32] */, %940)
}

def @func_2020() -> (Tensor[(11, ?, 15), bool],) {
  @func_2018() /* ty=(Tensor[(11, ?, 15), bool],) */
}

def @func_8171() -> Tensor[(11, ?, 15), float32] {
  %942 = fn () -> Tensor[(11, ?, 15), float32] {
    %941 = @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */;
    %941.1
  };
  %942() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_4431() -> (Tensor[(2145, 7), bool], Tensor[(15015), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), uint64], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float64]) {
  %965 = fn () -> (Tensor[(2145, 7), bool], Tensor[(15015), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), uint64], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float64]) {
    %943 = cast(meta[relay.Constant][33] /* ty=Tensor[(15015), float32] */, dtype="float32") /* ty=Tensor[(15015), float32] */;
    %944 = reshape(%943, newshape=[2145, 7]) /* ty=Tensor[(2145, 7), float32] */;
    %945 = @func_2091() /* ty=(Tensor[(11, ?, 15), bool],) */;
    %946 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %947 = %946.0;
    %948 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
    %949 = %948.0;
    %950 = cast(%949, dtype="uint64") /* ty=Tensor[(11, ?, 15), uint64] */;
    %951 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %952 = cast(%947, dtype="uint64") /* ty=Tensor[(11, ?, 15), uint64] */;
    %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %954 = @func_3782() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
    %955 = bitwise_and(%952, %953) /* ty=Tensor[(11, ?, 15), uint64] */;
    %956 = cast(%955, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
    %957 = reshape(%956, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
    %958 = @func_290(%957) /* ty=Tensor[(11, ?, 15), float32] */;
    %959 = cast(%958, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
    %960 = @func_1735(%944) /* ty=Tensor[(2145, 7), bool] */;
    %961 = %945.0;
    %962 = %954.1;
    %963 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
    %964 = cos(%959) /* ty=Tensor[(11, ?, 15), float64] */;
    (%960, meta[relay.Constant][33] /* ty=Tensor[(15015), float32] */, %961, %955, %962, %963, %964)
  };
  %965() /* ty=(Tensor[(2145, 7), bool], Tensor[(15015), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), uint64], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float64]) */
}

def @func_12197() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) {
  %968 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) {
    %966 = @func_4550() /* ty=Tensor[(7, 14, 7), float32] */;
    %967 = @func_4026() /* ty=Tensor[(7, 14, 7), float64] */;
    (%966, %967)
  };
  %968() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float64]) */
}

def @func_5000() -> (Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) {
  %969 = @func_4266() /* ty=(Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) */;
  %970 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %971 = @func_4430() /* ty=(Tensor[(2145, 7), bool], Tensor[(15015), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), uint64], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), float64]) */;
  %972 = %969.1;
  %973 = %970.0;
  %974 = %971.2;
  (%972, %973, %974)
}

def @func_4458() -> Tensor[(2145, 16), int32] {
  %975 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %976 = %975.2;
  %977 = cast(%976, dtype="int32") /* ty=Tensor[(2145, 1), int32] */;
  %978 = cast(meta[relay.Constant][34] /* ty=Tensor[(2145, 16), float32] */, dtype="int32") /* ty=Tensor[(2145, 16), int32] */;
  bitwise_or(%977, %978) /* ty=Tensor[(2145, 16), int32] */
}

def @func_6004() -> (Tensor[(7, 14, 7), float64],) {
  %980 = fn () -> (Tensor[(7, 14, 7), float64],) {
    %979 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
    (%979,)
  };
  %980() /* ty=(Tensor[(7, 14, 7), float64],) */
}

def @func_5126() -> Tensor[(11, ?, 15), float32] {
  %981 = @func_2352() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %981.0
}

def @func_12220() -> (Tensor[(7, 14, 7), float32],) {
  %984 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %982 = @func_5263() /* ty=(Tensor[(7, 14, 7), float32],) */;
    %983 = %982.0;
    (%983,)
  };
  %984() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_12798() -> (Tensor[(2310), float32],) {
  %987 = fn () -> (Tensor[(2310), float32],) {
    %985 = @func_5000() /* ty=(Tensor[(2310), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), bool]) */;
    %986 = %985.0;
    (%986,)
  };
  %987() /* ty=(Tensor[(2310), float32],) */
}

def @func_6241(%var_6239: Tensor[(8, 2, 6), float32]) -> Tensor[(8, 2, 6), float32] {
  @func_6238(%var_6239) /* ty=Tensor[(8, 2, 6), float32] */
}

def @func_1268() -> Tensor[(11, ?, 15), float32] {
  %988 = @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */;
  %989 = %988.0;
  %990 = cast(%989, dtype="float64") /* ty=Tensor[(11, ?, 15), float64] */;
  %991 = asinh(%990) /* ty=Tensor[(11, ?, 15), float64] */;
  %992 = cast(%991, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %993 = shape_of(%989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%989, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%994, %995) /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_6110() -> (Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) {
  %996 = @func_2656() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %997 = @func_5899() /* ty=Tensor[(7, 14, 7), float32] */;
  %998 = @func_2295() /* ty=Tensor[(14, 10, 11), float32] */;
  %999 = %996.0;
  (%997, %998, %999)
}

def @func_3710() -> (Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) {
  @func_3708() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_12942() -> (Tensor[(11, ?, 15), float32],) {
  %1000 = @func_12310() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */;
  %1001 = %1000.3;
  (%1001,)
}

def @func_7782() -> Tensor[(7, 14, 7), float64] {
  @func_7780() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_4342() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %1002 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %1003 = @func_3634() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %1004 = %1002.0;
  %1005 = %1003.0;
  (%1004, %1005)
}

def @func_9649() -> (Tensor[(11, ?, 15), float32],) {
  %1006 = @func_6296() /* ty=Tensor[(11, ?, 15), float32] */;
  (%1006,)
}

def @func_10109(%var_10107: int16, %var_10108: Tensor[(8, 7, 2), float32]) -> Tensor[(8, 7, 2), float32] {
  @func_10105(%var_10107, %var_10108) /* ty=Tensor[(8, 7, 2), float32] */
}

def @func_4618(%var_4616: Tensor[(14, 10, 13), float32], %var_4617: Tensor[(325), float64]) -> (Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) {
  @func_4614(%var_4616, %var_4617) /* ty=(Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) */
}

def @func_1088() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) {
  @func_1086() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32]) */
}

def @func_1737(%var_1736: Tensor[(2145, 7), float32]) -> Tensor[(2145, 7), bool] {
  %1011 = fn (%var_1721: Tensor[(2145, 7), float32]) -> Tensor[(2145, 7), bool] {
    %1007 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
    %1008 = %1007.2;
    %1009 = cast(%1008, dtype="bool") /* ty=Tensor[(2145, 1), bool] */;
    %1010 = cast(%var_1721, dtype="bool") /* ty=Tensor[(2145, 7), bool] */;
    logical_and(%1009, %1010) /* ty=Tensor[(2145, 7), bool] */
  };
  %1011(%var_1736) /* ty=Tensor[(2145, 7), bool] */
}

def @func_10312() -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(2310), float32]) {
  %1020 = fn () -> (Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(2310), float32]) {
    %1012 = @func_9511() /* ty=(Tensor[(14, 10, 11), float32],) */;
    %1013 = @func_2434() /* ty=(Tensor[(11, ?, 15), float32],) */;
    %1014 = @func_3335() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32]) */;
    %1015 = @func_7418() /* ty=(Tensor[(2310), float32],) */;
    %1016 = %1012.0;
    %1017 = %1013.0;
    %1018 = %1014.4;
    %1019 = %1015.0;
    (%1016, %1017, %1018, %1019)
  };
  %1020() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32], Tensor[(2310), float32]) */
}

def @func_740() -> (Tensor[(11, ?, 15), float32],) {
  %1031 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %1021 = @func_615() /* ty=(Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), float32], Tensor[(165), float64]) */;
    %1022 = %1021.2;
    %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(165), float64] */;
    %1024 = reshape(%1023, newshape=[11, 1, 15]) /* ty=Tensor[(11, 1, 15), float64] */;
    %1025 = @func_290(%1024) /* ty=Tensor[(11, ?, 15), float32] */;
    %1026 = cast(%1022, dtype="float32") /* ty=Tensor[(165), float32] */;
    %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1028 = cast(%1025, dtype="float32") /* ty=Tensor[(11, ?, 15), float32] */;
    %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1030 = floor_mod(%1028, %1029) /* ty=Tensor[(11, ?, 15), float32] */;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_5962() -> Tensor[(7, 14, 7), float64] {
  %1032 = fn () -> Tensor[(7, 14, 7), float64] {
    @func_2321() /* ty=Tensor[(7, 14, 7), float64] */
  };
  %1032() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_11975() -> (Tensor[(7, 14, 7), float32],) {
  %1035 = fn () -> (Tensor[(7, 14, 7), float32],) {
    %1033 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
    %1034 = %1033.1;
    (%1034,)
  };
  %1035() /* ty=(Tensor[(7, 14, 7), float32],) */
}

def @func_6876() -> Tensor[(7, 14, 7), float64] {
  @func_6874() /* ty=Tensor[(7, 14, 7), float64] */
}

def @func_5494() -> (Tensor[(11, ?, 15), float32],) {
  %1037 = fn () -> (Tensor[(11, ?, 15), float32],) {
    %1036 = @func_2762() /* ty=Tensor[(11, ?, 15), float32] */;
    (%1036,)
  };
  %1037() /* ty=(Tensor[(11, ?, 15), float32],) */
}

def @func_2460() -> Tensor[(11, ?, 15), float32] {
  %1038 = @func_997() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %1038.0
}

def @func_7419() -> (Tensor[(2310), float32],) {
  %1041 = fn () -> (Tensor[(2310), float32],) {
    %1039 = @func_4266() /* ty=(Tensor[(11, 14, 15), int8], Tensor[(2310), float32], Tensor[(11, 2, 15), uint32]) */;
    %1040 = %1039.1;
    (%1040,)
  };
  %1041() /* ty=(Tensor[(2310), float32],) */
}

def @func_2739() -> Tensor[(11, ?, 15), bool] {
  @func_2737() /* ty=Tensor[(11, ?, 15), bool] */
}

def @func_8404(%var_8403: Tensor[(15, 13, 13), float32]) -> Tensor[(15, 13, 13), float32] {
  %1043 = fn (%var_8397: Tensor[(15, 13, 13), float32]) -> Tensor[(15, 13, 13), float32] {
    %1042 = cast(%var_8397, dtype="float32") /* ty=Tensor[(15, 13, 13), float32] */;
    sigmoid(%1042) /* ty=Tensor[(15, 13, 13), float32] */
  };
  %1043(%var_8403) /* ty=Tensor[(15, 13, 13), float32] */
}

def @func_5718() -> Tensor[(7, 14, 7), float32] {
  %1044 = @func_5374() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %1044.0
}

def @func_2915() -> (Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) {
  %1050 = fn () -> (Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) {
    %1045 = @func_2091() /* ty=(Tensor[(11, ?, 15), bool],) */;
    %1046 = @func_2737() /* ty=Tensor[(11, ?, 15), bool] */;
    %1047 = %1045.0;
    %1048 = @func_2321() /* ty=Tensor[(7, 14, 7), float64] */;
    %1049 = @func_2762() /* ty=Tensor[(11, ?, 15), float32] */;
    (%1046, %1047, %1048, %1049)
  };
  %1050() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) */
}

def @func_2268() -> Tensor[(11, ?, 15), float32] {
  @func_2266() /* ty=Tensor[(11, ?, 15), float32] */
}

def @func_6615() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) {
  %1053 = fn () -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) {
    %1051 = @func_2266() /* ty=Tensor[(11, ?, 15), float32] */;
    %1052 = @func_4026() /* ty=Tensor[(7, 14, 7), float64] */;
    (%1051, %1052)
  };
  %1053() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float64]) */
}

def @func_7603(%var_7601: Tensor[(5, 10, 16), float64]) -> Tensor[(5, 10, 16), float64] {
  @func_7600(%var_7601) /* ty=Tensor[(5, 10, 16), float64] */
}

def @func_12023(%var_12022: Tensor[(15015, 5), float32]) -> (Tensor[(15015, 5), int16],) {
  %1059 = fn (%var_12006: Tensor[(15015, 5), float32]) -> (Tensor[(15015, 5), int16],) {
    %1054 = @func_9007() /* ty=(Tensor[(11, ?, 15), bool], Tensor[(2145, 7), bool], Tensor[(15015, 1), float32]) */;
    %1055 = %1054.2;
    %1056 = cast(%1055, dtype="int16") /* ty=Tensor[(15015, 1), int16] */;
    %1057 = cast(%var_12006, dtype="int16") /* ty=Tensor[(15015, 5), int16] */;
    %1058 = logical_xor(%1056, %1057) /* ty=Tensor[(15015, 5), int16] */;
    (%1058,)
  };
  %1059(%var_12022) /* ty=(Tensor[(15015, 5), int16],) */
}

def @func_3256(%var_3254: Tensor[(1540), float32]) -> (Tensor[(7, 14, 7), float64], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) {
  @func_3253(%var_3254) /* ty=(Tensor[(7, 14, 7), float64], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) */
}

def @func_4735() -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
  %1063 = fn () -> (Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) {
    %1060 = @func_4342() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) */;
    %1061 = @func_1268() /* ty=Tensor[(11, ?, 15), float32] */;
    %1062 = %1060.0;
    (%1061, %1062)
  };
  %1063() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), float32]) */
}

def @func_8751() -> (Tensor[(7, 14, 7), float32],) {
  %1064 = @func_4519() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %1065 = %1064.0;
  (%1065,)
}

def @func_13143() -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32]) {
  %1066 = @func_5993() /* ty=(Tensor[(11, ?, 15), float32],) */;
  %1067 = @func_5568() /* ty=(Tensor[(7, 14, 7), float32],) */;
  %1068 = %1066.0;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_5077(%var_5075: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) {
  @func_5074(%var_5075) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), float32]) */
}

def @func_4293() -> Tensor[(7, 14, 7), float64] {
  %1070 = @func_3300() /* ty=(Tensor[(7, 14, 7), float64],) */;
  %1070.0
}

def @func_5339(%var_5335: Tensor[(325), float64]) -> (Tensor[(11, ?, 15), int64], Tensor[(325), float64], Tensor[(1820), float32], Tensor[(325), float64]) {
  %1071 = @func_1178() /* ty=(Tensor[(11, ?, 15), int64], Tensor[(7, 14, 7), float32], Tensor[(2145, 1), float32]) */;
  %1072 = cast(meta[relay.Constant][35] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %1073 = cast(%var_5335, dtype="float64") /* ty=Tensor[(325), float64] */;
  %1074 = reshape(%1072, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
  %1075 = reshape(%1073, newshape=[325]) /* ty=Tensor[(325), float64] */;
  %1076 = @func_4614(%1074, %1075) /* ty=(Tensor[(5, 13, 5), float64], Tensor[(325), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 13), float64]) */;
  %1077 = %1071.0;
  %1078 = %1076.1;
  (%1077, %1078, meta[relay.Constant][35] /* ty=Tensor[(1820), float32] */, %var_5335)
}

def @func_10281() -> (Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool]) {
  @func_10279() /* ty=(Tensor[(11, ?, 15), float32], Tensor[(14, 10, 11), float32], Tensor[(11, ?, 15), bool], Tensor[(11, ?, 15), bool]) */
}

def @func_11360(%var_11359: Tensor[(10, 2, 8), float32]) -> Tensor[(10, 2, 8), float32] {
  %1080 = fn (%var_11354: Tensor[(10, 2, 8), float32]) -> Tensor[(10, 2, 8), float32] {
    %1079 = cast(%var_11354, dtype="float32") /* ty=Tensor[(10, 2, 8), float32] */;
    sqrt(%1079) /* ty=Tensor[(10, 2, 8), float32] */
  };
  %1080(%var_11359) /* ty=Tensor[(10, 2, 8), float32] */
}

def @func_10489() -> (Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) {
  @func_10487() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(7, 14, 7), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), float32]) */
}

def @func_13194(%var_13192: Tensor[(1280), float64], %var_13193: Tensor[(75075), float32]) -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64], Tensor[(15015, 5), int16], Tensor[(75075), float32]) {
  %1090 = fn (%var_13175: Tensor[(1280), float64], %var_13178: Tensor[(75075), float32]) -> (Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64], Tensor[(15015, 5), int16], Tensor[(75075), float32]) {
    %1081 = cast(%var_13175, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %1082 = reshape(%1081, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
    %1083 = @func_9199(%1082) /* ty=(Tensor[(11, ?, 15), float32], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64]) */;
    %1084 = cast(%var_13178, dtype="float32") /* ty=Tensor[(75075), float32] */;
    %1085 = reshape(%1084, newshape=[15015, 5]) /* ty=Tensor[(15015, 5), float32] */;
    %1086 = @func_12021(%1085) /* ty=(Tensor[(15015, 5), int16],) */;
    %1087 = @func_6874() /* ty=Tensor[(7, 14, 7), float64] */;
    %1088 = %1083.1;
    %1089 = %1086.0;
    (%1087, %1088, %var_13175, %1089, %var_13178)
  };
  %1090(%var_13192, %var_13193) /* ty=(Tensor[(7, 14, 7), float64], Tensor[(11, ?, 15), uint16], Tensor[(1280), float64], Tensor[(15015, 5), int16], Tensor[(75075), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen915/build/output.py:4295: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen915/build/output.py:4300: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen915/build/output.py:4315: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen915/build/output.py:4320: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen915/build/output.py:4325: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen915/build/output.py:4330: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> Tensor[(5, 16, 11), bool] {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 16, 11), bool] */, dtype="bool") /* GeneratedSource */ /* ty=Tensor[(5, 16, 11), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(5, 16, 11), bool] */, dtype="int32") /* GeneratedSource */ /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 16, 11), bool] */, dtype="bool") /* GeneratedSource */ /* ty=Tensor[(5, 16, 11), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* GeneratedSource */ /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%2, %3) /* GeneratedSource */ /* ty=Tensor[(5, 16, 11), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

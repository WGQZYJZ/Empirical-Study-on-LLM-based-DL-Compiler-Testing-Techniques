import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_112 = relay.const([[[4.223987,1.766990,6.278084,7.249981,4.432760,-5.375030,6.972201,-1.614461,0.364052,7.762854,-2.302787],[-2.982850,-3.611308,-4.860973,5.494746,4.419982,-6.709868,-3.168277,-6.662966,9.192457,-5.041438,3.388797],[5.861418,0.468494,-2.403454,-1.031467,-8.186932,9.150693,5.230553,4.064093,7.842136,1.649948,4.449525],[2.796287,4.309988,1.977076,-0.267559,-1.486646,-8.087839,6.226337,-5.303640,9.599600,-0.824244,1.964168],[1.700444,-2.709912,9.367345,-9.827888,1.939521,3.121397,-7.107642,-3.020692,4.346762,5.258988,-2.102415],[-5.530519,-8.765681,-7.701865,-6.456591,-3.903988,-5.858508,9.947866,4.732711,-9.836255,4.928413,1.997893],[-1.747541,4.045399,-0.862321,-1.024132,3.196732,0.166996,-9.301566,-0.308200,-8.259577,-2.436330,7.005295],[-4.577500,-5.385244,8.833429,-3.351455,1.759425,-3.926364,-9.448056,0.647659,-6.676039,3.712845,-6.755272],[9.117220,5.793541,-5.169398,-2.918386,4.393672,-5.773075,2.898822,0.239587,-5.423220,-9.065820,7.679869],[-8.105039,1.561440,8.211346,-9.241387,7.707035,-1.230411,9.950430,-6.749273,-8.159699,8.433348,0.508798],[-1.102643,-2.010814,-2.654946,-1.644433,-6.476465,-0.853310,5.812096,-8.162794,-6.572503,1.615409,-4.718698],[4.580169,-0.463236,-9.355786,-6.136674,-0.363416,8.581453,5.790842,3.991615,4.974613,-4.099132,-5.543765]],[[-5.327216,-5.695226,-3.544614,7.231928,-9.775237,6.878993,4.286481,-3.123389,-6.215471,-3.659504,-6.869774],[1.565876,5.184877,0.990091,-6.574617,6.001125,-2.223758,2.522350,0.815353,-2.358491,4.773496,-6.306717],[8.828852,-1.496975,0.566758,3.718418,6.165182,-4.911530,-3.788150,-6.941578,3.714040,9.697390,7.780684],[-6.936118,6.187447,5.915251,-8.401545,6.284416,-9.607829,6.750861,5.726067,4.249577,9.952935,4.133926],[7.786630,6.256914,-3.143809,7.615654,8.738016,-5.885973,-9.469956,-1.235614,-1.807364,-3.967011,3.349446],[-3.145218,1.318120,3.148009,2.779683,-5.543798,1.309548,3.361370,-4.877003,3.877994,-9.952218,-7.274571],[4.172317,-8.774014,0.371719,7.350736,-2.353344,7.622792,7.977229,1.660364,4.797668,-3.178050,0.540148],[-0.001521,-1.274039,5.705282,-7.287164,8.629694,-8.064770,2.770228,-4.366783,9.460978,-4.017413,-5.138339],[0.925047,4.483079,2.669183,3.410762,2.179650,-6.436186,-6.306374,9.692786,-0.375276,-2.630318,-4.105386],[-4.060082,-9.641881,6.247754,-2.329324,2.365630,7.571704,-5.474488,-8.172875,9.818342,-9.983632,2.190399],[-5.657016,8.214233,9.009128,2.143514,7.329751,-0.107018,9.515373,-5.151440,-5.978052,-7.550918,-6.570883],[-5.010018,-9.300411,9.105024,-7.105497,0.950523,5.267630,2.719972,1.343272,-1.727831,-0.233669,-4.687263]],[[-3.941302,5.116271,-4.535870,2.146602,-4.766791,4.324418,2.153115,4.401999,0.399780,-6.803488,5.239525],[0.535541,1.151118,2.203351,7.548020,8.026227,7.178785,-3.515195,-4.769946,-3.959600,1.331858,-2.518771],[-3.959408,-3.569067,-1.769932,-2.103170,-8.323536,-8.873490,5.710413,1.850050,-9.432040,8.858811,5.812878],[1.223845,3.522481,9.202547,-6.036165,2.007470,9.443249,-8.541378,2.777259,-4.441852,4.124555,3.321458],[-9.714139,3.865379,7.952169,-8.871607,-7.674680,0.366592,-9.118673,-8.856304,-6.986956,1.344919,-7.129187],[5.596737,8.905585,7.783863,0.004643,1.275152,-8.986992,-6.751785,9.915459,-8.303035,-4.941021,1.973501],[-6.128804,1.593479,-1.062729,3.002549,6.917358,-6.805940,-6.795395,4.880508,-1.845878,9.021049,4.250749],[-7.928466,6.939936,-0.279262,-0.783364,-2.542474,5.796620,2.554696,-1.255765,-7.166542,-2.651135,-8.134043],[4.382055,-6.132898,8.359404,-2.807934,3.808396,3.164787,7.115057,-5.656413,-4.647193,1.900074,3.932543],[7.601351,1.131180,5.791149,-9.682754,-7.158970,5.664393,9.520049,-7.446400,4.089560,-0.656569,-2.574660],[-7.871988,-8.697529,4.796942,-0.179250,-8.538992,1.724158,-4.800855,5.003482,-7.322935,-5.287306,-2.490520],[-0.138246,1.925378,-9.109163,0.537185,7.126742,-8.409886,-2.910988,4.411179,-2.293566,-9.240380,1.252658]],[[-5.428317,2.408828,-1.467300,-1.043192,5.016536,-6.549880,-3.065708,-7.360391,0.664407,3.288232,2.810455],[-0.389684,-3.455471,3.752891,-1.252360,4.621337,5.681850,4.069539,-5.290303,9.130274,4.076904,-2.679918],[-5.155979,1.547583,4.622739,9.242918,-4.112383,1.164967,-7.057866,0.689668,-1.692545,2.103324,5.176995],[1.302342,-6.809197,9.236774,-0.976619,6.002581,-2.408181,1.289131,3.023416,6.929618,-5.539017,1.932207],[9.810771,8.213167,0.919992,1.230480,4.369569,9.981238,1.733639,2.876649,-2.206641,5.454684,2.044885],[-4.687035,4.403882,-1.632749,4.373987,2.911004,-2.359875,-5.220203,6.061721,-1.678091,-1.981923,7.249145],[-6.631248,-7.092279,9.988758,-0.262395,-7.644958,-1.403572,-5.678614,5.853441,-5.400209,-3.690672,9.024105],[-2.047681,-3.722405,2.637086,-5.032775,2.418568,-5.981688,-6.789950,6.151213,-1.213474,0.917055,9.158971],[-3.964811,6.806905,5.568408,2.336004,-6.313154,-2.184474,5.069157,-7.783852,-1.005897,-1.922572,9.921690],[-6.846326,5.401024,-8.469584,3.860313,-4.105707,-1.713528,-0.199350,4.138055,-2.664711,-5.645713,5.388111],[-5.734794,7.840670,3.479239,7.263525,-2.033899,4.872149,8.290896,6.212905,8.867577,-7.753042,2.807302],[-3.285441,-3.645996,1.245952,7.547863,-3.457974,-8.028176,-2.966111,-5.176235,-7.627744,9.007723,-6.757096]],[[8.945831,-3.473634,-3.083031,-4.804022,0.377473,-9.637961,7.128892,-0.516126,-9.507295,-5.956787,8.272484],[-7.319980,0.579397,-6.474758,-9.999137,9.014727,-0.762198,3.545294,-5.794419,8.598887,-3.168803,2.213228],[8.753606,-4.425573,5.268732,-3.043674,2.812439,-0.305714,1.515970,8.372025,6.543553,0.025604,-5.577929],[-1.310105,-2.794166,2.236445,-8.956377,-8.758388,-0.396022,5.774417,4.859388,-9.262773,7.250558,7.737049],[-2.547564,-9.623049,8.530263,8.408044,-5.521093,-6.898676,2.925069,9.548173,5.907456,9.588920,-1.479499],[1.598646,-4.415181,-5.291480,-3.057088,-3.758134,6.068052,-1.559714,-0.842053,-1.005311,-4.057512,0.428797],[-4.615487,6.297206,-8.850088,-8.691501,2.543055,8.502351,1.527006,0.869600,7.674699,-0.069331,8.702480],[-3.796640,1.257511,-7.163353,0.077855,6.981592,9.562409,0.996960,-4.066986,-5.370446,2.508223,8.804105],[-8.797614,-2.720481,6.064389,-5.077645,-3.492440,-0.287707,6.145520,2.965152,8.748433,6.193846,3.025725],[-1.562132,-3.819416,4.483900,-0.648800,-0.973571,-6.634942,2.498793,-9.832186,-6.574703,-2.028411,-1.642840],[6.291103,-2.072498,-1.761624,7.708135,0.227755,3.466850,7.947286,9.363634,-1.876388,-3.693690,0.426218],[-7.556575,4.101555,-7.076002,0.779486,1.742950,-2.326947,6.491118,9.129721,-8.996517,5.619862,-7.004067]],[[-3.891364,-6.639325,-1.085363,5.204967,-5.035586,0.294800,-8.881619,5.407867,-8.997952,8.145975,6.144884],[2.489278,1.522749,0.063781,-1.235979,5.204017,7.603553,3.095684,-8.076571,5.740789,-4.994382,-9.157658],[-2.334401,-4.797865,1.962913,2.441740,6.425210,8.871437,-8.088977,8.316109,5.767741,-9.619120,-7.956059],[-0.937000,-9.520289,-7.815220,-9.973642,-8.791802,-0.814164,2.157414,-5.803752,-8.887151,6.643177,-9.556910],[-2.620088,-6.675281,8.821988,3.638705,-6.768230,-3.548437,7.362705,9.826752,-8.171777,4.519938,2.341493],[-3.857618,3.504962,0.243087,-6.478225,6.562963,0.526571,-2.515862,-0.741213,-7.865053,1.539452,8.548445],[2.383151,-0.177745,-3.773763,9.987359,-1.107360,9.596107,-0.314510,3.196149,2.605794,-5.162694,-2.585159],[3.969101,-5.042366,-8.870144,-5.544811,-3.183164,-4.626461,2.158902,-6.308295,-8.623642,-8.792848,8.478632],[-8.282016,-0.288256,0.951983,-1.172761,5.850782,-7.309661,-3.014352,-0.661039,-3.977950,-2.518345,3.216895],[-0.061883,-0.553287,5.589476,-8.564609,-2.554756,8.874091,-7.376370,3.278795,-5.386262,-4.277906,-7.463647],[2.120093,-0.992024,3.909661,1.753841,-3.752406,1.535852,-0.978042,-8.253165,1.816963,-7.757477,0.725162],[2.629629,1.001403,2.332971,-0.017662,-2.067115,-4.772991,9.400232,-4.483141,3.565877,-9.675147,4.355066]],[[1.665135,-4.025262,-4.780976,3.157251,7.064462,-6.560126,-3.826870,9.541629,0.181756,4.743873,-3.535164],[-1.333121,5.932114,0.379964,-2.388348,-2.733468,-7.058735,-2.853647,0.097058,-2.388218,-7.856876,-9.478816],[1.660758,5.807113,2.207083,-0.697883,4.564896,-8.371330,-8.054397,7.979375,6.403261,-7.480027,-9.507292],[-7.529274,-6.806712,-9.379087,-4.425320,-7.033555,-0.079483,-8.838815,-5.983713,1.857676,7.090230,-9.651407],[-5.910031,-0.266950,9.284048,8.545171,6.959944,-6.732875,4.601380,-6.976564,2.223890,8.354888,-9.681876],[9.198513,-4.882347,2.589509,6.716445,-4.534530,1.217539,6.778759,0.469648,-1.194269,-4.622030,0.316603],[5.922716,9.645976,-3.162451,4.958997,8.252778,2.056380,8.507745,1.494920,-5.251999,-4.137196,5.895412],[-8.326255,7.896055,0.376767,9.840182,3.889975,3.225261,2.314479,0.294231,-3.749155,-5.718169,-6.829318],[-0.460978,-0.146528,2.591753,-1.007242,-3.901177,-2.637706,1.304123,5.980644,-6.385671,-0.965084,-2.996051],[9.124612,-1.813198,-0.763472,5.836617,-4.838247,-2.051870,-9.126994,-2.365414,-1.933604,8.533895,-2.614805],[0.279360,-2.849305,-6.788751,5.689417,-1.749051,-7.976689,-5.318119,6.199424,1.658211,-8.437433,-0.720527],[-8.106799,5.544434,7.770222,4.189696,-1.791410,-3.627059,-0.651699,9.311538,9.818302,-1.049747,-7.631434]],[[-3.164522,-0.078356,6.917287,8.821139,8.271183,-1.370036,1.241543,3.037507,1.024327,5.659305,-8.647657],[-1.270667,1.585977,-0.784061,3.596272,-0.721216,-9.956445,-2.235246,2.788013,-0.775829,9.561283,-1.135450],[-8.898887,8.330158,4.691011,7.415097,-2.774864,0.221426,3.884288,0.842073,-7.496323,-4.407875,-1.840834],[-4.125220,3.641486,-3.408279,-0.184202,6.075593,-3.514909,-3.505588,8.080122,-5.625134,-7.483578,3.150649],[4.536680,-5.091182,-2.987806,-3.585487,6.533703,1.665103,0.951862,8.746921,-6.357944,0.872286,9.691748],[-9.169566,1.989702,-7.051598,-4.386684,-0.211899,-9.361980,2.987380,0.012723,8.315448,-7.965476,4.290568],[-7.739817,0.523029,3.691174,-4.051644,0.810093,1.455966,3.774148,-7.512014,5.896709,3.953977,4.704748],[6.902612,-1.515692,-2.673933,4.642506,5.843341,-3.317553,-4.379486,3.316362,7.100384,0.957445,2.721168],[-9.680991,-5.104334,-6.805875,-9.583779,-2.986472,6.084599,-1.307475,5.567961,2.076256,-0.365270,-3.188568],[-4.906516,5.103534,-8.018789,-2.047113,2.648119,8.245271,5.762629,5.728183,9.681685,9.911016,-9.263070],[-5.872673,7.357868,-2.634324,-0.655890,-4.615901,-0.147470,-2.945445,-0.705423,5.909175,8.223214,4.767519],[-0.220318,-7.503227,-4.938991,-3.026757,-7.276600,-3.897983,0.214365,3.002244,6.073077,-0.053742,4.055775]],[[-8.202149,4.959547,3.305551,-4.552490,9.653681,3.132374,8.750932,8.083149,-2.190500,-2.731017,8.898437],[-2.658424,1.234285,-8.747169,3.603167,-8.016919,9.753117,2.885344,8.348172,1.234858,4.061242,-6.927950],[-9.396294,-4.241367,0.570184,-4.286168,-8.516859,5.201012,-4.374876,8.195117,8.624730,-5.781753,-6.574622],[2.335031,8.303141,-2.249664,4.204982,4.168411,5.018069,6.978283,2.701738,7.056991,-4.692042,0.330378],[0.627426,-2.733269,4.112938,1.878422,7.750660,0.480738,-9.524988,3.922819,-6.770628,6.734199,-8.268553],[8.315429,-2.253287,-2.105351,3.966256,-4.394286,-1.278165,-4.046502,1.860812,2.071309,-9.991835,0.876726],[1.826091,4.237072,-5.587275,1.289886,7.401113,-5.702889,1.116674,-4.125456,-5.711473,5.130847,0.726202],[-5.631167,-1.690009,5.122789,-5.949924,2.884451,2.851347,-3.243301,1.263974,8.977212,-2.797442,7.193828],[-9.274049,-1.517016,-5.550780,2.824326,1.166502,-5.210220,-4.697707,1.251778,-2.698756,-1.198523,9.048238],[0.987210,-6.792127,3.908888,-1.104502,-9.331626,-4.943117,-8.803073,4.013186,-7.150110,8.451434,-8.428155],[1.039997,6.848797,-4.629756,9.720242,-3.165697,-1.820941,2.810014,7.259914,-0.434755,-3.883448,-9.292000],[0.584038,0.948113,9.773257,-8.863805,-9.829153,4.603557,-9.094398,4.907707,1.679653,-9.673177,-2.646444]],[[1.076959,-9.033643,1.697182,-7.724729,2.901363,5.900426,2.843058,9.715312,-6.838484,5.414960,4.891224],[7.067018,-7.194393,-0.682017,6.798817,-0.805735,-8.024482,-9.649546,-2.723573,-2.014963,9.462766,-8.192511],[-3.199381,-8.756047,2.926394,-7.186465,0.362390,5.211018,-1.520391,3.453570,-9.948214,-1.271699,-7.827391],[-9.049116,5.530472,-1.447607,5.489221,5.473259,-2.114040,-0.762618,-5.112427,9.930305,7.328854,4.776834],[-1.332663,0.547505,-8.931877,-6.987231,-2.103477,5.975980,2.161453,-7.834796,-2.894171,-3.135323,-0.958753],[-8.319033,3.753185,-1.150879,-9.643965,-1.965764,-2.113157,4.681701,9.750545,7.066542,1.088091,5.941298],[-6.977570,8.291535,2.303875,-1.139577,-9.045566,-9.896451,-3.822831,-1.786680,-4.794748,2.305147,-9.828180],[-9.545059,-0.146199,-1.791522,-8.686901,-7.239675,5.536548,-4.648217,8.200676,-2.865392,6.341494,7.076211],[-0.684355,0.718343,-9.831004,8.038809,2.320799,-8.148620,-4.337263,9.027552,-2.698953,1.552376,0.921426],[5.481939,-6.504071,4.685023,-2.028194,5.542089,-8.415741,-0.456045,-6.893115,-3.179721,4.825474,6.804124],[0.045994,-6.120499,5.651148,8.752261,0.692611,3.714867,2.987019,-8.785204,-7.891773,-6.286214,-0.696682],[8.506333,-4.137842,-7.668591,4.499278,4.294047,4.241937,-6.552680,-5.933043,0.517816,-9.805990,9.920812]],[[5.913439,-9.922149,-3.814201,7.292836,3.190878,7.339022,-7.518443,8.617222,4.222607,-0.923037,-1.762967],[5.720307,-3.933977,2.087709,-7.396993,-6.488880,-7.015295,8.593445,1.684470,6.621672,0.752917,4.004411],[-0.891252,1.920988,0.446308,-9.053896,6.705544,-5.340676,2.331050,-5.248505,3.973017,2.276374,4.114320],[-4.228383,5.449143,2.496184,-0.449896,-9.144101,2.287952,-6.758493,9.986826,1.518212,9.265695,3.699019],[3.521905,-2.457503,-6.237317,-7.472074,-6.495744,7.099071,-0.373369,-9.410520,4.221443,8.367166,9.198217],[4.203703,5.369351,1.998308,1.524903,9.672418,-5.666536,2.033883,7.055378,2.478877,-1.903215,-5.981112],[8.533766,0.621363,4.422814,-3.394472,-9.065955,-7.883322,-2.653027,-0.122188,-5.482400,-4.610137,4.930034],[0.812835,1.896876,-1.439692,1.385113,-0.505519,-1.892814,0.938442,-8.830359,-2.307660,-7.925002,-6.786507],[-0.609919,-7.517070,-9.958408,1.003267,-4.847972,6.511321,4.399002,8.398017,-6.171333,-0.771795,6.394804],[-3.877820,0.872287,-4.299057,3.011456,-2.770318,-0.585261,-1.599631,4.225891,-9.182318,3.073298,4.445577],[-3.699578,2.028825,-6.841670,0.382051,-1.515708,9.957382,-4.704854,0.396143,4.264527,4.549519,-6.760352],[-1.648162,5.925856,9.937047,-1.983636,-2.409307,9.850397,5.410172,2.146257,8.789769,8.478390,6.073663]],[[-2.472961,1.361638,-1.245999,5.532980,7.416431,-6.817415,1.400039,5.429075,-1.385524,-0.948890,6.142297],[6.614550,-0.773770,-0.152232,1.514265,8.696692,-7.471827,0.055198,9.397136,7.081602,2.682954,3.051045],[3.748218,-6.587310,-5.623257,1.264812,7.380224,-3.118185,0.287072,2.154841,-2.725524,1.209761,8.503055],[2.045327,7.449522,5.794634,-7.518505,2.482329,0.646877,4.258165,-3.610218,-5.294483,3.122636,0.390016],[7.013949,-9.841315,7.516452,2.032919,-0.169682,5.308602,9.411398,-8.432070,-3.635780,-5.230799,-3.694178],[2.207115,-1.446072,-8.516490,8.708096,4.825627,-2.155131,-0.555018,9.616291,-1.443713,3.991334,2.224850],[9.120785,-8.013993,-7.544934,0.443179,4.828381,1.476523,-2.242381,7.973009,-6.165604,0.625630,-5.224922],[-2.956757,9.881272,-8.251443,1.910425,2.029164,4.487958,-5.661400,-7.435764,-6.099730,-3.089117,-4.097026],[1.849189,-0.606367,-0.094201,-5.876955,-1.354750,-0.172426,-7.427079,-4.148107,-4.902783,-4.489867,7.065767],[8.947498,-1.652117,0.526156,-1.746851,-8.357153,-4.959636,5.618858,-7.402084,2.510866,-6.599648,-7.864012],[-9.389563,-2.625231,-3.017288,5.526191,3.622880,-2.736519,-3.198694,1.431372,8.040408,9.888257,-5.855930],[-2.531709,-2.191300,2.228562,8.792040,1.834928,-5.158867,-4.627052,-6.824922,8.305687,1.033909,-2.364853]],[[3.495448,-1.674812,9.689768,-6.497528,-0.884637,-9.150790,1.432007,9.269688,8.050656,-7.024088,2.790667],[-5.102897,-2.172902,0.512579,3.839072,-6.348274,9.136432,6.369057,-7.012819,6.104809,-9.904085,6.811402],[6.544520,-9.491508,-2.116974,3.295997,-7.838295,7.089592,3.586184,-3.182453,-4.167684,8.639691,0.922197],[-6.198954,8.121355,-5.934651,2.113511,8.180314,-7.948183,9.247529,-9.500668,-2.787326,5.712555,-1.555827],[5.435248,8.790114,9.169218,8.689245,-8.535856,-2.416827,0.452061,6.799770,-9.047697,-8.250928,5.837327],[4.422299,-4.456352,-7.719465,-5.079723,-3.854579,1.509186,7.266668,-6.300032,9.663600,8.078127,-1.023163],[-4.451701,4.217699,-2.700434,5.956977,-8.490789,-8.103585,4.827094,-7.049608,6.474109,3.769831,-5.178237],[3.065498,9.804120,2.749441,-3.580518,-2.611509,-0.471711,5.600306,2.729014,-6.156559,-2.247571,-6.050380],[7.655852,7.896554,2.062550,6.109847,7.257699,-8.619007,5.157379,4.507905,-4.697754,-2.646203,-1.828513],[3.346847,-0.032920,0.542411,-1.011437,-0.518727,-4.600913,-6.953257,-6.199021,2.960860,-2.434421,8.506997],[-1.426517,3.377550,-0.161670,5.609628,-1.730703,-3.269994,-7.719515,0.553889,7.885451,-4.858223,3.570729],[1.705009,-9.064689,6.693335,-5.529464,-4.882942,-2.381285,0.085143,5.283621,3.790736,-5.251166,-4.978525]],[[9.498009,1.240749,-0.648437,-1.819272,3.873289,9.109726,-7.008847,-7.374576,8.392364,0.620037,9.299564],[-7.339449,2.639380,-8.704931,5.509782,-1.151248,-7.522546,7.045731,0.901949,-2.039308,2.371900,-2.247850],[-9.629239,1.253899,3.047173,3.406442,6.716792,8.542241,7.164912,-9.620945,3.845577,7.383790,5.333116],[-2.987416,-6.532936,2.596825,-8.817112,-8.252625,-9.835932,9.683048,-0.034175,-7.089880,-5.834321,1.731129],[9.128122,5.930694,-9.751732,-1.625179,7.083188,3.001449,8.044696,-6.942297,-2.172300,7.434531,-1.380943],[9.694216,6.977770,-0.567583,4.335814,-5.133107,-9.871648,5.558542,-6.097055,-8.319653,-7.047356,-4.930925],[-0.581309,-0.680335,3.423047,0.123106,-0.134972,-8.051728,9.966677,5.683446,-2.697831,2.307490,7.121803],[-6.280434,3.519214,-1.114746,-8.197061,0.724916,2.439007,5.173416,1.334818,-7.730240,8.909731,-0.015770],[7.799658,-3.942927,9.535159,-1.190459,-5.245376,-5.851955,6.962794,-2.493497,1.336776,-8.481719,7.269286],[7.077653,3.678923,-6.502900,5.226286,1.454772,-1.106926,-8.348336,8.192596,1.875623,8.514234,8.758878],[-2.212960,-7.866215,-2.652618,-0.120662,2.192351,-2.243020,1.615825,4.230649,1.078519,8.200078,-0.759242],[6.218049,8.743316,-9.095203,0.593167,5.670953,9.234706,1.722700,8.265962,1.869594,-6.761721,9.947130]]], dtype = "float64")#candidate|112|(14, 12, 11)|const|float64
uop_113 = relay.tan(const_112.astype('float64')) # shape=(14, 12, 11)
uop_116 = relay.sinh(uop_113.astype('float32')) # shape=(14, 12, 11)
bop_143 = relay.logical_xor(uop_116.astype('int32'), relay.reshape(uop_113.astype('int32'), relay.shape_of(uop_116))) # shape=(14, 12, 11)
output = relay.Tuple([bop_143,])
output2 = relay.Tuple([bop_143,])
func_156 = relay.Function([], output)
mod['func_156'] = func_156
mod = relay.transform.InferType()(mod)
mutated_mod['func_156'] = func_156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_156_call = mutated_mod.get_global_var('func_156')
call_157 = func_156_call()
output = call_157
func_158 = relay.Function([], output)
mutated_mod['func_158'] = func_158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_162 = relay.TupleGetItem(func_156_call(), 0)
call_163 = relay.TupleGetItem(func_158_call(), 0)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_171 = relay.TupleGetItem(func_156_call(), 0)
call_172 = relay.TupleGetItem(func_158_call(), 0)
bop_175 = relay.subtract(call_162.astype('uint16'), relay.reshape(call_171.astype('uint16'), relay.shape_of(call_162))) # shape=(14, 12, 11)
bop_178 = relay.subtract(call_163.astype('uint16'), relay.reshape(call_172.astype('uint16'), relay.shape_of(call_163))) # shape=(14, 12, 11)
output = bop_175
output2 = bop_178
func_180 = relay.Function([], output)
mod['func_180'] = func_180
mod = relay.transform.InferType()(mod)
mutated_mod['func_180'] = func_180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_180_call = mutated_mod.get_global_var('func_180')
call_181 = func_180_call()
output = call_181
func_182 = relay.Function([], output)
mutated_mod['func_182'] = func_182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_183 = relay.TupleGetItem(func_156_call(), 0)
call_184 = relay.TupleGetItem(func_158_call(), 0)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_191 = relay.TupleGetItem(func_156_call(), 0)
call_192 = relay.TupleGetItem(func_158_call(), 0)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_201 = func_180_call()
call_202 = func_180_call()
output = relay.Tuple([call_183,call_191,call_201,])
output2 = relay.Tuple([call_184,call_192,call_202,])
func_207 = relay.Function([], output)
mod['func_207'] = func_207
mod = relay.transform.InferType()(mod)
mutated_mod['func_207'] = func_207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mutated_mod.get_global_var('func_207')
call_208 = func_207_call()
output = call_208
func_209 = relay.Function([], output)
mutated_mod['func_209'] = func_209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mod.get_global_var('func_207')
func_209_call = mutated_mod.get_global_var('func_209')
call_233 = relay.TupleGetItem(func_207_call(), 2)
call_234 = relay.TupleGetItem(func_209_call(), 2)
output = relay.Tuple([call_233,])
output2 = relay.Tuple([call_234,])
func_240 = relay.Function([], output)
mod['func_240'] = func_240
mod = relay.transform.InferType()(mod)
output = func_240()
func_241 = relay.Function([], output)
mutated_mod['func_241'] = func_241
mutated_mod = relay.transform.InferType()(mutated_mod)
const_405 = relay.const([[[-7,10],[2,4],[2,5],[-8,10],[10,3],[2,4],[1,-4],[-1,1],[-7,-4],[10,4],[2,4],[8,3],[3,-10]],[[6,-3],[-9,5],[9,-7],[-7,-3],[7,-9],[-1,-10],[6,-8],[1,-5],[1,3],[-7,9],[-2,-10],[9,6],[-3,6]],[[-7,-2],[10,-1],[10,-8],[-4,-3],[7,6],[-2,10],[2,-7],[10,-8],[10,9],[3,-8],[6,6],[-7,2],[4,-5]],[[4,8],[-1,2],[8,10],[3,-7],[9,-9],[-3,6],[7,4],[-6,10],[6,8],[4,-1],[-2,-10],[10,1],[-5,6]]], dtype = "uint64")#candidate|405|(4, 13, 2)|const|uint64
var_406 = relay.var("var_406", dtype = "uint64", shape = (4, 13, 2))#candidate|406|(4, 13, 2)|var|uint64
bop_407 = relay.not_equal(const_405.astype('bool'), relay.reshape(var_406.astype('bool'), relay.shape_of(const_405))) # shape=(4, 13, 2)
output = bop_407
output2 = bop_407
func_412 = relay.Function([var_406,], output)
mod['func_412'] = func_412
mod = relay.transform.InferType()(mod)
var_413 = relay.var("var_413", dtype = "uint64", shape = (4, 13, 2))#candidate|413|(4, 13, 2)|var|uint64
output = func_412(var_413)
func_414 = relay.Function([var_413], output)
mutated_mod['func_414'] = func_414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mod.get_global_var('func_207')
func_209_call = mutated_mod.get_global_var('func_209')
call_431 = relay.TupleGetItem(func_207_call(), 1)
call_432 = relay.TupleGetItem(func_209_call(), 1)
output = call_431
output2 = call_432
func_437 = relay.Function([], output)
mod['func_437'] = func_437
mod = relay.transform.InferType()(mod)
output = func_437()
func_438 = relay.Function([], output)
mutated_mod['func_438'] = func_438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_460 = relay.TupleGetItem(func_156_call(), 0)
call_461 = relay.TupleGetItem(func_158_call(), 0)
uop_480 = relay.log2(call_460.astype('float32')) # shape=(14, 12, 11)
uop_482 = relay.log2(call_461.astype('float32')) # shape=(14, 12, 11)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_486 = func_437_call()
call_487 = func_437_call()
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_489 = relay.TupleGetItem(func_156_call(), 0)
call_490 = relay.TupleGetItem(func_158_call(), 0)
uop_491 = relay.rsqrt(uop_480.astype('float32')) # shape=(14, 12, 11)
uop_493 = relay.rsqrt(uop_482.astype('float32')) # shape=(14, 12, 11)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
var_496 = relay.var("var_496", dtype = "uint64", shape = (104,))#candidate|496|(104,)|var|uint64
call_495 = func_412_call(relay.reshape(var_496.astype('uint64'), [4, 13, 2]))
call_497 = func_412_call(relay.reshape(var_496.astype('uint64'), [4, 13, 2]))
output = relay.Tuple([call_486,call_489,uop_491,call_495,var_496,])
output2 = relay.Tuple([call_487,call_490,uop_493,call_497,var_496,])
func_498 = relay.Function([var_496,], output)
mod['func_498'] = func_498
mod = relay.transform.InferType()(mod)
var_499 = relay.var("var_499", dtype = "uint64", shape = (104,))#candidate|499|(104,)|var|uint64
output = func_498(var_499)
func_500 = relay.Function([var_499], output)
mutated_mod['func_500'] = func_500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_571 = func_437_call()
call_572 = func_437_call()
uop_576 = relay.acosh(call_571.astype('float32')) # shape=(14, 12, 11)
uop_578 = relay.acosh(call_572.astype('float32')) # shape=(14, 12, 11)
output = relay.Tuple([uop_576,])
output2 = relay.Tuple([uop_578,])
func_579 = relay.Function([], output)
mod['func_579'] = func_579
mod = relay.transform.InferType()(mod)
output = func_579()
func_580 = relay.Function([], output)
mutated_mod['func_580'] = func_580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_581 = relay.TupleGetItem(func_156_call(), 0)
call_582 = relay.TupleGetItem(func_158_call(), 0)
output = call_581
output2 = call_582
func_599 = relay.Function([], output)
mod['func_599'] = func_599
mod = relay.transform.InferType()(mod)
mutated_mod['func_599'] = func_599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mutated_mod.get_global_var('func_599')
call_600 = func_599_call()
output = call_600
func_601 = relay.Function([], output)
mutated_mod['func_601'] = func_601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_708 = func_180_call()
call_709 = func_180_call()
uop_712 = relay.sqrt(call_708.astype('float64')) # shape=(14, 12, 11)
uop_714 = relay.sqrt(call_709.astype('float64')) # shape=(14, 12, 11)
output = uop_712
output2 = uop_714
func_718 = relay.Function([], output)
mod['func_718'] = func_718
mod = relay.transform.InferType()(mod)
output = func_718()
func_719 = relay.Function([], output)
mutated_mod['func_719'] = func_719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_741 = relay.TupleGetItem(func_240_call(), 0)
call_742 = relay.TupleGetItem(func_241_call(), 0)
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_749 = func_599_call()
call_750 = func_599_call()
output = relay.Tuple([call_741,call_749,])
output2 = relay.Tuple([call_742,call_750,])
func_760 = relay.Function([], output)
mod['func_760'] = func_760
mod = relay.transform.InferType()(mod)
output = func_760()
func_761 = relay.Function([], output)
mutated_mod['func_761'] = func_761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_790 = func_599_call()
call_791 = func_599_call()
const_822 = relay.const([[[10,-3,-5,6,6,2,8,-2,-6,4,-2],[-2,-7,8,10,3,3,-4,6,-2,5,10],[-3,-4,5,-8,-10,-5,-5,8,-5,7,7],[-6,-3,-3,6,4,8,-8,-7,-9,-7,3],[-1,9,-1,6,8,-1,2,-1,-1,-8,6],[-3,-2,-9,9,1,2,10,6,1,7,7],[10,-10,7,-10,-3,6,-5,4,-9,-6,7],[-6,1,9,1,-7,-5,2,4,7,-2,3],[-9,1,-4,-1,-2,-3,4,1,7,-6,7],[-8,-9,10,-9,-7,2,6,-7,-6,-4,2],[-3,3,2,-6,-9,-10,9,-8,-3,-7,-4],[-2,2,10,8,-3,-6,3,-8,-9,-3,-5]],[[-8,-3,1,7,-4,8,8,-3,-1,-9,3],[-7,3,1,-4,10,-3,-7,4,-2,5,-6],[10,-1,-6,-10,-4,-3,2,3,-10,9,8],[8,2,-2,-9,-1,-8,10,3,-4,-8,4],[-10,-7,1,-4,6,3,-1,4,-5,-9,-7],[6,10,7,-8,-1,9,9,-5,-1,6,-8],[10,6,-9,8,-7,-6,-6,-6,-3,3,6],[1,4,4,-7,6,6,-3,-9,9,-7,5],[-7,8,-10,1,2,7,4,-5,-4,8,-2],[-5,4,-9,10,-6,6,6,-6,4,-8,3],[2,5,-8,-8,-6,5,6,10,-9,4,10],[-5,-8,4,10,10,-7,8,7,-10,-8,2]],[[-1,1,-1,-9,-6,9,3,-7,-3,5,-9],[-9,-10,9,6,-3,6,-8,2,7,-4,-9],[2,-10,-3,8,7,-10,8,6,-1,-10,-6],[3,6,3,8,6,7,4,-10,-4,10,5],[-3,10,1,-2,-10,2,-5,-7,6,3,-9],[3,-9,-6,3,7,-4,2,10,-10,-9,6],[9,8,-7,1,10,-5,1,10,-5,-1,-5],[-4,-9,3,9,3,-5,5,4,7,-8,-4],[6,-6,-10,-1,10,-10,-10,-6,-4,-6,3],[-2,5,-2,-4,5,-8,-4,-6,3,-8,4],[8,6,-2,-3,-4,-4,6,4,-2,-1,-10],[9,8,3,-7,-6,8,8,-6,4,8,9]],[[-2,4,-3,-6,-10,8,-9,5,-7,-4,5],[-2,-5,-3,4,6,6,-2,5,-10,3,2],[-9,9,-2,-9,-4,-9,7,3,3,-7,-1],[6,7,2,3,3,5,-8,-4,3,7,-9],[4,-6,-3,-6,6,-2,-7,2,-2,-4,6],[1,8,-9,6,1,-2,-8,4,9,5,10],[10,6,6,7,3,-1,2,7,-10,1,-5],[-4,1,8,9,-10,1,-8,-5,8,-5,-8],[-1,-6,-3,-10,5,7,9,4,5,-8,-9],[1,3,3,-10,-4,5,-1,-10,7,5,3],[-1,-6,2,-1,10,6,-5,1,1,-6,9],[5,8,-5,7,-1,-5,-5,10,-8,9,-4]],[[-7,10,4,4,-5,3,4,8,-5,2,-7],[5,-2,-10,10,-7,-10,-3,-5,8,-8,3],[8,-3,-4,3,1,-1,-2,4,-4,7,8],[-8,8,2,8,8,-9,-1,6,-4,-1,-10],[5,-4,-6,3,-2,-6,-9,-8,4,-7,9],[-5,3,1,-6,8,6,-2,-5,-6,-8,-9],[1,-7,3,7,1,6,3,7,-10,-5,-7],[7,-4,10,5,10,-9,10,-1,6,9,8],[-1,5,10,-8,-7,-10,9,-2,1,2,-10],[-4,9,5,-1,-2,-9,-6,7,9,-8,-4],[1,3,9,-4,6,-10,-5,5,-9,10,7],[9,7,-9,-7,4,-8,-1,-2,6,10,-5]],[[2,-3,-10,-8,-7,1,5,1,-3,-9,3],[10,3,-3,3,-10,-1,-5,-3,8,-2,-6],[-8,-6,-3,4,4,-1,-9,2,6,8,-2],[-8,7,-5,-4,-5,-9,3,-7,7,-10,-10],[7,-2,3,-10,-2,2,-4,-8,9,1,4],[9,9,-5,-6,-8,7,6,10,5,-6,-1],[3,9,3,-9,3,10,-3,3,-8,-2,2],[4,-6,6,-7,2,-6,-3,10,8,9,-9],[3,-10,2,-7,-10,8,4,-7,1,-3,10],[-8,8,-6,-5,7,-7,-8,-1,-5,8,6],[-7,2,-2,-5,-3,-5,-10,-7,-7,3,-5],[3,8,6,3,-9,-7,-10,-8,-3,9,-1]],[[8,6,-4,9,1,-5,2,-6,-5,7,8],[3,4,6,-4,4,6,-9,-8,2,-10,10],[-8,9,1,-7,5,6,6,3,-10,-3,-7],[-9,-1,-6,-7,7,3,1,3,-5,-8,8],[-1,-5,9,7,10,-1,-4,6,-1,9,8],[-8,-5,-9,-3,6,-1,-5,9,-6,-8,4],[4,-5,10,1,-3,-8,3,1,6,10,-10],[-8,8,10,1,-10,-3,-3,1,10,4,-4],[7,1,-5,-3,-7,-4,6,-1,-5,3,-9],[10,10,-6,9,-1,5,2,-6,-3,-7,-6],[-10,-10,-9,4,1,10,5,8,-3,-10,5],[-8,-8,-4,7,-6,8,-1,-10,6,8,-5]],[[-1,-9,-5,5,-3,-1,-4,-4,4,8,-9],[-10,6,2,-4,-9,3,-1,6,-8,-9,-10],[3,-3,-5,10,2,4,-10,1,5,-10,9],[7,-7,4,4,-8,7,6,10,7,10,9],[-10,-3,-4,5,2,7,-5,-7,5,7,-5],[-4,-9,-9,4,8,-10,-1,3,6,-8,-7],[5,3,9,2,3,1,8,-2,7,8,-10],[-2,7,-10,-2,-9,1,7,-3,4,-4,7],[-4,-6,-8,10,7,3,-1,-10,-10,-10,-2],[10,3,-1,-10,10,-7,7,-5,5,1,6],[1,-5,-7,-1,-9,6,7,-10,8,-3,8],[-2,8,-5,-7,3,8,-8,-10,-6,2,-10]],[[1,-7,9,4,1,10,-5,-10,-5,2,-8],[8,1,-8,8,-1,-7,-6,8,4,9,-9],[-7,9,-4,5,3,-2,7,-5,-8,-2,5],[-1,-1,2,-9,4,-4,9,-6,-9,-8,-3],[-1,-10,7,5,-3,6,-3,5,3,-1,-6],[4,5,-1,4,-9,-4,-5,-4,-4,-9,2],[3,6,-9,-3,-5,7,10,-6,3,1,-6],[-10,-1,9,7,1,-1,5,2,-4,-5,-1],[-10,1,-2,-3,-1,9,9,1,9,7,-7],[-1,2,-9,8,-4,-5,-6,-9,3,3,-3],[2,-10,6,-3,2,3,9,5,-2,-10,5],[-1,-6,-4,10,1,1,-3,1,-9,7,-8]],[[-6,8,3,-4,-5,-1,-1,9,-2,3,4],[-10,9,-7,-3,-5,-10,-6,2,-9,5,7],[7,-9,-8,4,-6,6,-4,-4,-10,8,1],[-2,4,-1,3,6,5,1,-8,5,9,-1],[-6,2,3,5,3,-8,-1,5,6,8,-9],[-5,5,-2,3,7,-10,5,-8,9,10,-8],[6,-6,9,4,-4,6,10,2,-3,1,2],[9,8,1,5,10,-7,4,2,-3,-8,4],[6,9,8,5,8,8,-1,-6,2,-10,4],[-4,-3,-1,-7,8,2,7,9,-8,7,5],[-6,-6,8,-9,1,7,2,4,-4,7,2],[-3,-5,10,-8,-9,5,-7,3,-5,9,8]],[[-9,-5,5,-8,3,9,-4,-1,1,1,7],[-1,1,-3,-8,-6,-3,2,10,-8,3,2],[-4,4,-4,3,10,-2,-10,3,-7,-6,9],[-10,-10,-3,-4,2,1,3,-10,5,-2,5],[3,3,9,10,-9,-7,9,-2,9,10,2],[3,4,6,-6,-2,-8,-7,-4,3,7,2],[3,8,-10,4,-6,7,-7,-7,-3,2,-4],[6,-5,-1,2,8,-9,-9,-9,-2,10,-4],[-2,1,-2,7,-1,-3,-4,1,-10,-3,-9],[6,7,-2,9,3,-9,-7,7,-6,-6,7],[3,-8,-10,10,7,-5,5,-1,-5,6,-9],[4,6,6,-9,2,2,-5,-4,2,-2,-4]],[[-4,3,-9,3,3,-6,7,1,-7,-6,-4],[1,-7,-7,-10,7,-8,-3,-1,-7,-4,-3],[6,-7,-6,10,-5,8,-4,2,-10,5,-1],[-4,-7,-9,5,3,6,2,2,-4,3,-10],[10,10,-1,7,5,6,-2,6,9,-9,-9],[8,3,10,-5,4,2,-5,-8,7,-4,7],[10,-7,3,5,-5,5,5,5,-6,5,-10],[3,3,-1,-4,6,2,-4,-9,8,2,-3],[9,-6,6,4,-2,-6,-4,-5,-7,-2,-4],[5,5,-9,-7,3,10,-2,1,-2,1,-7],[7,3,4,-5,6,-4,-5,10,-3,9,-2],[-10,5,5,2,-10,5,2,-3,-8,1,9]],[[-2,10,-2,9,-10,-9,2,2,6,-2,-7],[8,5,8,5,2,8,5,2,6,-4,8],[6,10,2,-3,-8,3,-7,9,-10,-1,4],[-10,1,-8,-8,-3,-8,8,-6,-1,4,-8],[-4,-4,8,5,-3,-6,-9,-1,5,-3,6],[-3,2,5,-7,-6,-9,-7,8,-9,-7,5],[-3,4,10,-9,9,-7,5,9,-8,-4,7],[-6,-3,6,-9,-5,9,10,-7,6,-10,-8],[-8,6,-6,-2,4,-8,2,9,8,6,3],[9,-5,-7,9,-10,6,4,6,3,-4,7],[6,9,-9,-1,9,4,4,-8,9,-1,-2],[5,1,-10,-10,2,2,-1,-6,-5,4,-8]],[[-1,3,-4,4,-9,6,8,6,-2,7,-2],[4,1,-3,-9,3,-9,1,-3,7,-6,4],[8,4,-10,3,9,10,-9,5,5,-1,6],[-6,-8,1,-8,10,6,-6,-6,10,10,-7],[2,10,-2,2,4,-7,10,8,2,4,3],[6,-2,-7,6,-3,8,8,4,-7,5,-1],[-1,-5,-7,3,-10,1,5,6,4,2,3],[-1,7,7,4,-10,-9,8,-3,-7,-9,-7],[-8,6,2,-5,5,6,-6,7,-3,4,2],[-7,2,10,-2,-6,9,4,9,8,7,-7],[9,10,-10,3,6,-9,-5,2,5,10,1],[7,5,-3,1,5,3,-3,10,7,9,-8]]], dtype = "int32")#candidate|822|(14, 12, 11)|const|int32
bop_823 = relay.equal(call_790.astype('bool'), relay.reshape(const_822.astype('bool'), relay.shape_of(call_790))) # shape=(14, 12, 11)
bop_826 = relay.equal(call_791.astype('bool'), relay.reshape(const_822.astype('bool'), relay.shape_of(call_791))) # shape=(14, 12, 11)
output = relay.Tuple([bop_823,])
output2 = relay.Tuple([bop_826,])
func_828 = relay.Function([], output)
mod['func_828'] = func_828
mod = relay.transform.InferType()(mod)
mutated_mod['func_828'] = func_828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_828_call = mutated_mod.get_global_var('func_828')
call_829 = func_828_call()
output = call_829
func_830 = relay.Function([], output)
mutated_mod['func_830'] = func_830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_902 = relay.TupleGetItem(func_828_call(), 0)
call_903 = relay.TupleGetItem(func_830_call(), 0)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_904 = relay.TupleGetItem(func_579_call(), 0)
call_905 = relay.TupleGetItem(func_580_call(), 0)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
const_910 = relay.const([-4,-2,10,-3,10,2,-8,-10,9,2,2,-1,-8,-8,-6,3,-1,-10,-9,-8,4,8,6,-7,-4,4,1,-6,4,3,-10,1,-5,2,5,-5,-1,-2,-5,-2,8,-4,5,-9,-3,-10,-1,4,-5,2,-8,8,-3,6,9,-6,8,-7,-9,2,9,5,-7,9,-7,10,9,-5,-8,10,-3,-6,4,3,-2,-5,9,4,-1,9,-4,-5,7,-7,5,4,-2,6,-8,1,-6,-10,8,-2,-6,1,10,-5,8,-3,7,-10,10,7], dtype = "uint64")#candidate|910|(104,)|const|uint64
call_909 = func_412_call(relay.reshape(const_910.astype('uint64'), [4, 13, 2]))
call_911 = func_412_call(relay.reshape(const_910.astype('uint64'), [4, 13, 2]))
func_718_call = mod.get_global_var('func_718')
func_719_call = mutated_mod.get_global_var('func_719')
call_916 = func_718_call()
call_917 = func_718_call()
func_760_call = mod.get_global_var('func_760')
func_761_call = mutated_mod.get_global_var('func_761')
call_934 = relay.TupleGetItem(func_760_call(), 0)
call_935 = relay.TupleGetItem(func_761_call(), 0)
output = relay.Tuple([call_902,call_904,call_909,const_910,call_916,call_934,])
output2 = relay.Tuple([call_903,call_905,call_911,const_910,call_917,call_935,])
func_942 = relay.Function([], output)
mod['func_942'] = func_942
mod = relay.transform.InferType()(mod)
output = func_942()
func_943 = relay.Function([], output)
mutated_mod['func_943'] = func_943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_972 = func_599_call()
call_973 = func_599_call()
func_760_call = mod.get_global_var('func_760')
func_761_call = mutated_mod.get_global_var('func_761')
call_981 = relay.TupleGetItem(func_760_call(), 1)
call_982 = relay.TupleGetItem(func_761_call(), 1)
uop_984 = relay.sin(call_981.astype('float32')) # shape=(14, 12, 11)
uop_986 = relay.sin(call_982.astype('float32')) # shape=(14, 12, 11)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_996 = relay.TupleGetItem(func_579_call(), 0)
call_997 = relay.TupleGetItem(func_580_call(), 0)
output = relay.Tuple([call_972,uop_984,call_996,])
output2 = relay.Tuple([call_973,uop_986,call_997,])
func_999 = relay.Function([], output)
mod['func_999'] = func_999
mod = relay.transform.InferType()(mod)
mutated_mod['func_999'] = func_999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_999_call = mutated_mod.get_global_var('func_999')
call_1000 = func_999_call()
output = call_1000
func_1001 = relay.Function([], output)
mutated_mod['func_1001'] = func_1001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1008 = relay.var("var_1008", dtype = "float64", shape = (7, 12, 2))#candidate|1008|(7, 12, 2)|var|float64
var_1009 = relay.var("var_1009", dtype = "float64", shape = (7, 12, 2))#candidate|1009|(7, 12, 2)|var|float64
bop_1010 = relay.floor_divide(var_1008.astype('float64'), relay.reshape(var_1009.astype('float64'), relay.shape_of(var_1008))) # shape=(7, 12, 2)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_1015 = relay.TupleGetItem(func_828_call(), 0)
call_1016 = relay.TupleGetItem(func_830_call(), 0)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
const_1021 = relay.const([-10,1,-9,-5,-9,-9,8,2,2,9,3,3,1,10,9,-7,10,-8,-6,-1,-7,7,-2,9,3,10,-3,3,2,-8,-3,-9,-5,-10,-9,-8,-1,-4,-4,-9,-10,-4,3,-7,-1,7,9,6,2,-5,-9,7,-7,-7,3,-9,6,-6,-3,3,7,7,-7,-10,-1,1,-9,1,1,-1,3,-9,-5,7,9,9,1,4,1,8,2,-3,8,-8,-4,-5,-9,10,-1,-2,-9,8,9,8,7,-3,3,-9,3,-2,-8,-8,1,-1], dtype = "uint64")#candidate|1021|(104,)|const|uint64
call_1020 = func_412_call(relay.reshape(const_1021.astype('uint64'), [4, 13, 2]))
call_1022 = func_412_call(relay.reshape(const_1021.astype('uint64'), [4, 13, 2]))
output = relay.Tuple([bop_1010,call_1015,call_1020,const_1021,])
output2 = relay.Tuple([bop_1010,call_1016,call_1022,const_1021,])
func_1025 = relay.Function([var_1008,var_1009,], output)
mod['func_1025'] = func_1025
mod = relay.transform.InferType()(mod)
mutated_mod['func_1025'] = func_1025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1025_call = mutated_mod.get_global_var('func_1025')
var_1027 = relay.var("var_1027", dtype = "float64", shape = (7, 12, 2))#candidate|1027|(7, 12, 2)|var|float64
var_1028 = relay.var("var_1028", dtype = "float64", shape = (7, 12, 2))#candidate|1028|(7, 12, 2)|var|float64
call_1026 = func_1025_call(var_1027,var_1028,)
output = call_1026
func_1029 = relay.Function([var_1027,var_1028,], output)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_1036 = func_437_call()
call_1037 = func_437_call()
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
var_1040 = relay.var("var_1040", dtype = "uint64", shape = (104,))#candidate|1040|(104,)|var|uint64
call_1039 = func_412_call(relay.reshape(var_1040.astype('uint64'), [4, 13, 2]))
call_1041 = func_412_call(relay.reshape(var_1040.astype('uint64'), [4, 13, 2]))
output = relay.Tuple([call_1036,call_1039,var_1040,])
output2 = relay.Tuple([call_1037,call_1041,var_1040,])
func_1048 = relay.Function([var_1040,], output)
mod['func_1048'] = func_1048
mod = relay.transform.InferType()(mod)
mutated_mod['func_1048'] = func_1048
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1049 = relay.var("var_1049", dtype = "uint64", shape = (104,))#candidate|1049|(104,)|var|uint64
func_1048_call = mutated_mod.get_global_var('func_1048')
call_1050 = func_1048_call(var_1049)
output = call_1050
func_1051 = relay.Function([var_1049], output)
mutated_mod['func_1051'] = func_1051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_718_call = mod.get_global_var('func_718')
func_719_call = mutated_mod.get_global_var('func_719')
call_1057 = func_718_call()
call_1058 = func_718_call()
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1061 = relay.TupleGetItem(func_942_call(), 4)
call_1062 = relay.TupleGetItem(func_943_call(), 4)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_1096 = func_180_call()
call_1097 = func_180_call()
func_207_call = mod.get_global_var('func_207')
func_209_call = mutated_mod.get_global_var('func_209')
call_1098 = relay.TupleGetItem(func_207_call(), 2)
call_1099 = relay.TupleGetItem(func_209_call(), 2)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1143 = relay.TupleGetItem(func_942_call(), 5)
call_1144 = relay.TupleGetItem(func_943_call(), 5)
output = relay.Tuple([call_1057,call_1061,call_1096,call_1098,call_1143,])
output2 = relay.Tuple([call_1058,call_1062,call_1097,call_1099,call_1144,])
func_1148 = relay.Function([], output)
mod['func_1148'] = func_1148
mod = relay.transform.InferType()(mod)
mutated_mod['func_1148'] = func_1148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1148_call = mutated_mod.get_global_var('func_1148')
call_1149 = func_1148_call()
output = call_1149
func_1150 = relay.Function([], output)
mutated_mod['func_1150'] = func_1150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_1185 = relay.TupleGetItem(func_579_call(), 0)
call_1186 = relay.TupleGetItem(func_580_call(), 0)
output = relay.Tuple([call_1185,])
output2 = relay.Tuple([call_1186,])
func_1194 = relay.Function([], output)
mod['func_1194'] = func_1194
mod = relay.transform.InferType()(mod)
mutated_mod['func_1194'] = func_1194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mutated_mod.get_global_var('func_1194')
call_1195 = func_1194_call()
output = call_1195
func_1196 = relay.Function([], output)
mutated_mod['func_1196'] = func_1196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_1200 = relay.TupleGetItem(func_828_call(), 0)
call_1201 = relay.TupleGetItem(func_830_call(), 0)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_1202 = func_180_call()
call_1203 = func_180_call()
output = relay.Tuple([call_1200,call_1202,])
output2 = relay.Tuple([call_1201,call_1203,])
func_1212 = relay.Function([], output)
mod['func_1212'] = func_1212
mod = relay.transform.InferType()(mod)
mutated_mod['func_1212'] = func_1212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mutated_mod.get_global_var('func_1212')
call_1213 = func_1212_call()
output = call_1213
func_1214 = relay.Function([], output)
mutated_mod['func_1214'] = func_1214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1232 = relay.var("var_1232", dtype = "int32", shape = ())#candidate|1232|()|var|int32
var_1233 = relay.var("var_1233", dtype = "int32", shape = (5, 5, 5))#candidate|1233|(5, 5, 5)|var|int32
bop_1234 = relay.multiply(var_1232.astype('int32'), var_1233.astype('int32')) # shape=(5, 5, 5)
output = bop_1234
output2 = bop_1234
func_1240 = relay.Function([var_1232,var_1233,], output)
mod['func_1240'] = func_1240
mod = relay.transform.InferType()(mod)
var_1241 = relay.var("var_1241", dtype = "int32", shape = ())#candidate|1241|()|var|int32
var_1242 = relay.var("var_1242", dtype = "int32", shape = (5, 5, 5))#candidate|1242|(5, 5, 5)|var|int32
output = func_1240(var_1241,var_1242,)
func_1243 = relay.Function([var_1241,var_1242,], output)
mutated_mod['func_1243'] = func_1243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1266 = relay.var("var_1266", dtype = "float32", shape = (7, 1, 5))#candidate|1266|(7, 1, 5)|var|float32
uop_1267 = relay.log(var_1266.astype('float32')) # shape=(7, 1, 5)
bop_1275 = relay.minimum(uop_1267.astype('uint16'), relay.reshape(var_1266.astype('uint16'), relay.shape_of(uop_1267))) # shape=(7, 1, 5)
bop_1278 = relay.greater(var_1266.astype('bool'), relay.reshape(bop_1275.astype('bool'), relay.shape_of(var_1266))) # shape=(7, 1, 5)
output = relay.Tuple([bop_1278,])
output2 = relay.Tuple([bop_1278,])
func_1284 = relay.Function([var_1266,], output)
mod['func_1284'] = func_1284
mod = relay.transform.InferType()(mod)
mutated_mod['func_1284'] = func_1284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1285 = relay.var("var_1285", dtype = "float32", shape = (7, 1, 5))#candidate|1285|(7, 1, 5)|var|float32
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1286 = func_1284_call(var_1285)
output = call_1286
func_1287 = relay.Function([var_1285], output)
mutated_mod['func_1287'] = func_1287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_1302 = func_437_call()
call_1303 = func_437_call()
output = relay.Tuple([call_1302,])
output2 = relay.Tuple([call_1303,])
func_1310 = relay.Function([], output)
mod['func_1310'] = func_1310
mod = relay.transform.InferType()(mod)
mutated_mod['func_1310'] = func_1310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mutated_mod.get_global_var('func_1310')
call_1311 = func_1310_call()
output = call_1311
func_1312 = relay.Function([], output)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_1443 = relay.TupleGetItem(func_1310_call(), 0)
call_1444 = relay.TupleGetItem(func_1312_call(), 0)
output = call_1443
output2 = call_1444
func_1445 = relay.Function([], output)
mod['func_1445'] = func_1445
mod = relay.transform.InferType()(mod)
mutated_mod['func_1445'] = func_1445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1445_call = mutated_mod.get_global_var('func_1445')
call_1446 = func_1445_call()
output = call_1446
func_1447 = relay.Function([], output)
mutated_mod['func_1447'] = func_1447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1450 = relay.var("var_1450", dtype = "float32", shape = (4, 5, 8))#candidate|1450|(4, 5, 8)|var|float32
uop_1451 = relay.sigmoid(var_1450.astype('float32')) # shape=(4, 5, 8)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1463 = relay.TupleGetItem(func_1212_call(), 0)
call_1464 = relay.TupleGetItem(func_1214_call(), 0)
bop_1483 = relay.bitwise_and(uop_1451.astype('uint16'), relay.reshape(var_1450.astype('uint16'), relay.shape_of(uop_1451))) # shape=(4, 5, 8)
output = relay.Tuple([call_1463,bop_1483,])
output2 = relay.Tuple([call_1464,bop_1483,])
func_1488 = relay.Function([var_1450,], output)
mod['func_1488'] = func_1488
mod = relay.transform.InferType()(mod)
var_1489 = relay.var("var_1489", dtype = "float32", shape = (4, 5, 8))#candidate|1489|(4, 5, 8)|var|float32
output = func_1488(var_1489)
func_1490 = relay.Function([var_1489], output)
mutated_mod['func_1490'] = func_1490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_1528 = func_599_call()
call_1529 = func_599_call()
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
var_1531 = relay.var("var_1531", dtype = "uint64", shape = (104,))#candidate|1531|(104,)|var|uint64
call_1530 = func_412_call(relay.reshape(var_1531.astype('uint64'), [4, 13, 2]))
call_1532 = func_412_call(relay.reshape(var_1531.astype('uint64'), [4, 13, 2]))
output = relay.Tuple([call_1528,call_1530,var_1531,])
output2 = relay.Tuple([call_1529,call_1532,var_1531,])
func_1536 = relay.Function([var_1531,], output)
mod['func_1536'] = func_1536
mod = relay.transform.InferType()(mod)
var_1537 = relay.var("var_1537", dtype = "uint64", shape = (104,))#candidate|1537|(104,)|var|uint64
output = func_1536(var_1537)
func_1538 = relay.Function([var_1537], output)
mutated_mod['func_1538'] = func_1538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_1542 = func_599_call()
call_1543 = func_599_call()
output = relay.Tuple([call_1542,])
output2 = relay.Tuple([call_1543,])
func_1544 = relay.Function([], output)
mod['func_1544'] = func_1544
mod = relay.transform.InferType()(mod)
output = func_1544()
func_1545 = relay.Function([], output)
mutated_mod['func_1545'] = func_1545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_1567 = func_180_call()
call_1568 = func_180_call()
uop_1576 = relay.asinh(call_1567.astype('float32')) # shape=(14, 12, 11)
uop_1578 = relay.asinh(call_1568.astype('float32')) # shape=(14, 12, 11)
output = uop_1576
output2 = uop_1578
func_1583 = relay.Function([], output)
mod['func_1583'] = func_1583
mod = relay.transform.InferType()(mod)
mutated_mod['func_1583'] = func_1583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1583_call = mutated_mod.get_global_var('func_1583')
call_1584 = func_1583_call()
output = call_1584
func_1585 = relay.Function([], output)
mutated_mod['func_1585'] = func_1585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_1666 = relay.TupleGetItem(func_240_call(), 0)
call_1667 = relay.TupleGetItem(func_241_call(), 0)
uop_1676 = relay.erf(call_1666.astype('float64')) # shape=(14, 12, 11)
uop_1678 = relay.erf(call_1667.astype('float64')) # shape=(14, 12, 11)
var_1690 = relay.var("var_1690", dtype = "float64", shape = (14, 12, 11))#candidate|1690|(14, 12, 11)|var|float64
bop_1691 = relay.not_equal(uop_1676.astype('bool'), relay.reshape(var_1690.astype('bool'), relay.shape_of(uop_1676))) # shape=(14, 12, 11)
bop_1694 = relay.not_equal(uop_1678.astype('bool'), relay.reshape(var_1690.astype('bool'), relay.shape_of(uop_1678))) # shape=(14, 12, 11)
output = bop_1691
output2 = bop_1694
func_1708 = relay.Function([var_1690,], output)
mod['func_1708'] = func_1708
mod = relay.transform.InferType()(mod)
mutated_mod['func_1708'] = func_1708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1709 = relay.var("var_1709", dtype = "float64", shape = (14, 12, 11))#candidate|1709|(14, 12, 11)|var|float64
func_1708_call = mutated_mod.get_global_var('func_1708')
call_1710 = func_1708_call(var_1709)
output = call_1710
func_1711 = relay.Function([var_1709], output)
mutated_mod['func_1711'] = func_1711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_1716 = func_437_call()
call_1717 = func_437_call()
output = call_1716
output2 = call_1717
func_1742 = relay.Function([], output)
mod['func_1742'] = func_1742
mod = relay.transform.InferType()(mod)
output = func_1742()
func_1743 = relay.Function([], output)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1805 = relay.TupleGetItem(func_1212_call(), 0)
call_1806 = relay.TupleGetItem(func_1214_call(), 0)
var_1814 = relay.var("var_1814", dtype = "bool", shape = (14, 12, 11))#candidate|1814|(14, 12, 11)|var|bool
bop_1815 = relay.mod(call_1805.astype('float64'), relay.reshape(var_1814.astype('float64'), relay.shape_of(call_1805))) # shape=(14, 12, 11)
bop_1818 = relay.mod(call_1806.astype('float64'), relay.reshape(var_1814.astype('float64'), relay.shape_of(call_1806))) # shape=(14, 12, 11)
output = bop_1815
output2 = bop_1818
func_1832 = relay.Function([var_1814,], output)
mod['func_1832'] = func_1832
mod = relay.transform.InferType()(mod)
var_1833 = relay.var("var_1833", dtype = "bool", shape = (14, 12, 11))#candidate|1833|(14, 12, 11)|var|bool
output = func_1832(var_1833)
func_1834 = relay.Function([var_1833], output)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1148_call = mod.get_global_var('func_1148')
func_1150_call = mutated_mod.get_global_var('func_1150')
call_1915 = relay.TupleGetItem(func_1148_call(), 0)
call_1916 = relay.TupleGetItem(func_1150_call(), 0)
const_1917 = relay.constdtype = "float64")#candidate|1917|(14, 12, 11)|const|float64
bop_1918 = relay.bitwise_xor(call_1915.astype('int32'), relay.reshape(const_1917.astype('int32'), relay.shape_of(call_1915))) # shape=(14, 12, 11)
bop_1921 = relay.bitwise_xor(call_1916.astype('int32'), relay.reshape(const_1917.astype('int32'), relay.shape_of(call_1916))) # shape=(14, 12, 11)
output = relay.Tuple([bop_1918,])
output2 = relay.Tuple([bop_1921,])
func_1930 = relay.Function([], output)
mod['func_1930'] = func_1930
mod = relay.transform.InferType()(mod)
output = func_1930()
func_1931 = relay.Function([], output)
mutated_mod['func_1931'] = func_1931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_760_call = mod.get_global_var('func_760')
func_761_call = mutated_mod.get_global_var('func_761')
call_1974 = relay.TupleGetItem(func_760_call(), 1)
call_1975 = relay.TupleGetItem(func_761_call(), 1)
output = relay.Tuple([call_1974,])
output2 = relay.Tuple([call_1975,])
func_1979 = relay.Function([], output)
mod['func_1979'] = func_1979
mod = relay.transform.InferType()(mod)
output = func_1979()
func_1980 = relay.Function([], output)
mutated_mod['func_1980'] = func_1980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mod.get_global_var('func_1930')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_1984 = relay.TupleGetItem(func_1930_call(), 0)
call_1985 = relay.TupleGetItem(func_1931_call(), 0)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_1997 = relay.TupleGetItem(func_579_call(), 0)
call_1998 = relay.TupleGetItem(func_580_call(), 0)
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_2043 = func_599_call()
call_2044 = func_599_call()
output = relay.Tuple([call_1984,call_1997,call_2043,])
output2 = relay.Tuple([call_1985,call_1998,call_2044,])
func_2049 = relay.Function([], output)
mod['func_2049'] = func_2049
mod = relay.transform.InferType()(mod)
output = func_2049()
func_2050 = relay.Function([], output)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_2086 = func_1742_call()
call_2087 = func_1742_call()
output = relay.Tuple([call_2086,])
output2 = relay.Tuple([call_2087,])
func_2097 = relay.Function([], output)
mod['func_2097'] = func_2097
mod = relay.transform.InferType()(mod)
mutated_mod['func_2097'] = func_2097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mutated_mod.get_global_var('func_2097')
call_2098 = func_2097_call()
output = call_2098
func_2099 = relay.Function([], output)
mutated_mod['func_2099'] = func_2099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2121 = relay.var("var_2121", dtype = "bool", shape = (14, 1, 11))#candidate|2121|(14, 1, 11)|var|bool
var_2122 = relay.var("var_2122", dtype = "bool", shape = (14, 16, 11))#candidate|2122|(14, 16, 11)|var|bool
bop_2123 = relay.logical_and(var_2121.astype('bool'), var_2122.astype('bool')) # shape=(14, 16, 11)
func_1488_call = mod.get_global_var('func_1488')
func_1490_call = mutated_mod.get_global_var('func_1490')
var_2130 = relay.var("var_2130", dtype = "float32", shape = (8, 20))#candidate|2130|(8, 20)|var|float32
call_2129 = relay.TupleGetItem(func_1488_call(relay.reshape(var_2130.astype('float32'), [4, 5, 8])), 0)
call_2131 = relay.TupleGetItem(func_1490_call(relay.reshape(var_2130.astype('float32'), [4, 5, 8])), 0)
uop_2132 = relay.exp(bop_2123.astype('float64')) # shape=(14, 16, 11)
uop_2148 = relay.cos(uop_2132.astype('float64')) # shape=(14, 16, 11)
output = relay.Tuple([call_2129,var_2130,uop_2148,])
output2 = relay.Tuple([call_2131,var_2130,uop_2148,])
func_2155 = relay.Function([var_2121,var_2122,var_2130,], output)
mod['func_2155'] = func_2155
mod = relay.transform.InferType()(mod)
var_2156 = relay.var("var_2156", dtype = "bool", shape = (14, 1, 11))#candidate|2156|(14, 1, 11)|var|bool
var_2157 = relay.var("var_2157", dtype = "bool", shape = (14, 16, 11))#candidate|2157|(14, 16, 11)|var|bool
var_2158 = relay.var("var_2158", dtype = "float32", shape = (8, 20))#candidate|2158|(8, 20)|var|float32
output = func_2155(var_2156,var_2157,var_2158,)
func_2159 = relay.Function([var_2156,var_2157,var_2158,], output)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1445_call = mod.get_global_var('func_1445')
func_1447_call = mutated_mod.get_global_var('func_1447')
call_2188 = func_1445_call()
call_2189 = func_1445_call()
uop_2190 = relay.log10(call_2188.astype('float64')) # shape=(14, 12, 11)
uop_2192 = relay.log10(call_2189.astype('float64')) # shape=(14, 12, 11)
output = relay.Tuple([uop_2190,])
output2 = relay.Tuple([uop_2192,])
func_2193 = relay.Function([], output)
mod['func_2193'] = func_2193
mod = relay.transform.InferType()(mod)
output = func_2193()
func_2194 = relay.Function([], output)
mutated_mod['func_2194'] = func_2194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2255 = relay.var("var_2255", dtype = "uint16", shape = (12, 11, 13))#candidate|2255|(12, 11, 13)|var|uint16
var_2256 = relay.var("var_2256", dtype = "uint16", shape = (12, 11, 13))#candidate|2256|(12, 11, 13)|var|uint16
bop_2257 = relay.greater_equal(var_2255.astype('bool'), relay.reshape(var_2256.astype('bool'), relay.shape_of(var_2255))) # shape=(12, 11, 13)
func_1536_call = mod.get_global_var('func_1536')
func_1538_call = mutated_mod.get_global_var('func_1538')
var_2261 = relay.var("var_2261", dtype = "uint64", shape = (104,))#candidate|2261|(104,)|var|uint64
call_2260 = relay.TupleGetItem(func_1536_call(relay.reshape(var_2261.astype('uint64'), [104,])), 1)
call_2262 = relay.TupleGetItem(func_1538_call(relay.reshape(var_2261.astype('uint64'), [104,])), 1)
bop_2269 = relay.logical_or(var_2256.astype('bool'), relay.reshape(bop_2257.astype('bool'), relay.shape_of(var_2256))) # shape=(12, 11, 13)
func_1445_call = mod.get_global_var('func_1445')
func_1447_call = mutated_mod.get_global_var('func_1447')
call_2280 = func_1445_call()
call_2281 = func_1445_call()
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_2284 = func_180_call()
call_2285 = func_180_call()
bop_2290 = relay.bitwise_xor(bop_2269.astype('uint8'), relay.reshape(bop_2257.astype('uint8'), relay.shape_of(bop_2269))) # shape=(12, 11, 13)
uop_2294 = relay.atan(bop_2290.astype('float32')) # shape=(12, 11, 13)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_2296 = relay.TupleGetItem(func_2193_call(), 0)
call_2297 = relay.TupleGetItem(func_2194_call(), 0)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
call_2323 = relay.TupleGetItem(func_1048_call(relay.reshape(var_2261.astype('uint64'), [104,])), 0)
call_2324 = relay.TupleGetItem(func_1051_call(relay.reshape(var_2261.astype('uint64'), [104,])), 0)
uop_2331 = relay.asin(uop_2294.astype('float64')) # shape=(12, 11, 13)
bop_2338 = relay.equal(uop_2331.astype('bool'), relay.reshape(bop_2269.astype('bool'), relay.shape_of(uop_2331))) # shape=(12, 11, 13)
output = relay.Tuple([call_2260,var_2261,call_2280,call_2284,call_2296,call_2323,bop_2338,])
output2 = relay.Tuple([call_2262,var_2261,call_2281,call_2285,call_2297,call_2324,bop_2338,])
func_2347 = relay.Function([var_2255,var_2256,var_2261,], output)
mod['func_2347'] = func_2347
mod = relay.transform.InferType()(mod)
var_2348 = relay.var("var_2348", dtype = "uint16", shape = (12, 11, 13))#candidate|2348|(12, 11, 13)|var|uint16
var_2349 = relay.var("var_2349", dtype = "uint16", shape = (12, 11, 13))#candidate|2349|(12, 11, 13)|var|uint16
var_2350 = relay.var("var_2350", dtype = "uint64", shape = (104,))#candidate|2350|(104,)|var|uint64
output = func_2347(var_2348,var_2349,var_2350,)
func_2351 = relay.Function([var_2348,var_2349,var_2350,], output)
mutated_mod['func_2351'] = func_2351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_2355 = func_1742_call()
call_2356 = func_1742_call()
output = relay.Tuple([call_2355,])
output2 = relay.Tuple([call_2356,])
func_2363 = relay.Function([], output)
mod['func_2363'] = func_2363
mod = relay.transform.InferType()(mod)
output = func_2363()
func_2364 = relay.Function([], output)
mutated_mod['func_2364'] = func_2364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_2384 = relay.TupleGetItem(func_2363_call(), 0)
call_2385 = relay.TupleGetItem(func_2364_call(), 0)
output = relay.Tuple([call_2384,])
output2 = relay.Tuple([call_2385,])
func_2392 = relay.Function([], output)
mod['func_2392'] = func_2392
mod = relay.transform.InferType()(mod)
mutated_mod['func_2392'] = func_2392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2392_call = mutated_mod.get_global_var('func_2392')
call_2393 = func_2392_call()
output = call_2393
func_2394 = relay.Function([], output)
mutated_mod['func_2394'] = func_2394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_2459 = relay.TupleGetItem(func_579_call(), 0)
call_2460 = relay.TupleGetItem(func_580_call(), 0)
output = relay.Tuple([call_2459,])
output2 = relay.Tuple([call_2460,])
func_2466 = relay.Function([], output)
mod['func_2466'] = func_2466
mod = relay.transform.InferType()(mod)
output = func_2466()
func_2467 = relay.Function([], output)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_999_call = mod.get_global_var('func_999')
func_1001_call = mutated_mod.get_global_var('func_1001')
call_2476 = relay.TupleGetItem(func_999_call(), 0)
call_2477 = relay.TupleGetItem(func_1001_call(), 0)
output = call_2476
output2 = call_2477
func_2482 = relay.Function([], output)
mod['func_2482'] = func_2482
mod = relay.transform.InferType()(mod)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2482_call = mutated_mod.get_global_var('func_2482')
call_2483 = func_2482_call()
output = call_2483
func_2484 = relay.Function([], output)
mutated_mod['func_2484'] = func_2484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_2511 = relay.TupleGetItem(func_240_call(), 0)
call_2512 = relay.TupleGetItem(func_241_call(), 0)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2515 = relay.TupleGetItem(func_1979_call(), 0)
call_2516 = relay.TupleGetItem(func_1980_call(), 0)
output = relay.Tuple([call_2511,call_2515,])
output2 = relay.Tuple([call_2512,call_2516,])
func_2536 = relay.Function([], output)
mod['func_2536'] = func_2536
mod = relay.transform.InferType()(mod)
output = func_2536()
func_2537 = relay.Function([], output)
mutated_mod['func_2537'] = func_2537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2392_call = mod.get_global_var('func_2392')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2577 = relay.TupleGetItem(func_2392_call(), 0)
call_2578 = relay.TupleGetItem(func_2394_call(), 0)
uop_2579 = relay.exp(call_2577.astype('float64')) # shape=(14, 12, 11)
uop_2581 = relay.exp(call_2578.astype('float64')) # shape=(14, 12, 11)
output = uop_2579
output2 = uop_2581
func_2599 = relay.Function([], output)
mod['func_2599'] = func_2599
mod = relay.transform.InferType()(mod)
output = func_2599()
func_2600 = relay.Function([], output)
mutated_mod['func_2600'] = func_2600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1148_call = mod.get_global_var('func_1148')
func_1150_call = mutated_mod.get_global_var('func_1150')
call_2601 = relay.TupleGetItem(func_1148_call(), 3)
call_2602 = relay.TupleGetItem(func_1150_call(), 3)
func_2347_call = mod.get_global_var('func_2347')
func_2351_call = mutated_mod.get_global_var('func_2351')
const_2605 = relay.const([[10,-3],[3,-5],[-7,-9],[-1,9],[-2,-4],[1,2],[-5,9],[-6,-7],[10,-9],[-5,-10],[-9,1],[-10,4],[7,-2],[-7,-4],[-7,10],[-3,8],[-6,6],[1,6],[-7,-8],[9,-8],[-9,7],[-5,8],[8,-3],[-4,-4],[-10,-4],[8,-1],[-6,1],[10,-4],[-2,-6],[-3,-6],[2,-2],[4,7],[-8,-5],[10,1],[-4,3],[-2,4],[1,-10],[6,-5],[-7,7],[3,-5],[4,7],[-5,-1],[-1,-4],[5,-6],[10,9],[3,-6],[-3,4],[-6,8],[3,5],[-4,-9],[-3,7],[-3,-2],[-2,-10],[-7,7],[-9,9],[-4,-5],[-4,4],[-7,2],[-8,-7],[5,-7],[-4,-2],[-3,-2],[-4,8],[-8,2],[3,10],[1,-1],[-5,9],[2,7],[-2,7],[-1,-10],[10,10],[10,1],[-10,-5],[-5,9],[9,-9],[5,-4],[-6,4],[2,2],[-1,1],[8,5],[3,10],[-6,-7],[10,-3],[4,4],[2,9],[4,-5],[8,4],[-10,-4],[7,-2],[-5,-8],[-6,10],[2,-2],[-3,-8],[4,2],[1,-6],[5,3],[-5,6],[3,5],[-9,-9],[-10,-5],[2,10],[9,6],[7,1],[3,5],[9,8],[-7,1],[-9,-7],[1,-1],[-7,7],[-4,6],[-8,-5],[-2,-10],[2,-5],[10,-7],[8,7],[-7,-2],[-1,2],[3,-7],[4,-3],[4,9],[1,7],[2,10],[5,9],[6,-8],[-10,10],[-8,-6],[3,-1],[1,1],[4,3],[1,5],[-1,-9],[6,1],[8,1],[2,-8],[-7,10],[-7,-9],[-10,-6],[-6,-8],[-7,-3],[4,1],[7,6],[9,4],[3,3],[-8,2],[7,-8],[10,1],[3,-10],[-7,-9],[-3,8],[10,-6],[-8,4],[3,4],[3,2],[-10,-1],[-6,1],[2,-2],[6,-4],[1,-1],[3,7],[-1,-6],[6,10],[-3,-10],[3,-6],[1,9],[5,-4],[-7,9],[10,6],[8,-8],[3,10],[-10,-7],[-10,-8],[-9,8],[10,4],[9,-7],[-7,2],[6,10],[7,-3],[10,10],[3,3],[-2,-7],[5,10],[-5,4],[-10,7],[-8,5],[-9,-2],[10,-9],[7,6],[2,-2],[5,2],[-10,3],[-5,-8],[-9,8],[-3,7],[2,6],[-7,-9],[-6,-8],[6,2],[-8,-8],[5,-6],[2,2],[-4,-9],[-4,-4],[-9,-2],[7,-9],[-9,8],[6,-10],[5,7],[10,3],[8,-8],[8,3],[-8,-4],[4,7],[4,5],[-5,-1],[3,-8],[-7,4],[-2,10],[-8,-9],[10,1],[-5,-1],[4,-9],[1,9],[-7,-6],[9,-2],[4,-3],[6,9],[5,2],[-6,1],[9,1],[9,5],[-9,4],[10,-1],[9,1],[5,-3],[-9,4],[-10,-7],[4,-10],[-10,-3],[-5,-6],[-5,3],[10,9],[-3,-10],[9,-10],[-9,-9],[-7,-10],[-5,7],[-9,7],[2,8],[-4,-1],[-3,-9],[-5,3],[-6,-8],[3,-1],[10,10],[-10,5],[-7,-6],[-2,-7],[-8,-7],[-3,-6],[5,3],[2,8],[-9,1],[-5,3],[-9,-2],[6,6],[-6,-6],[5,10],[-5,-10],[5,7],[8,7],[-6,7],[9,-6],[9,-8],[7,3],[-5,-4],[4,-5],[3,6],[2,7],[4,-3],[3,8],[3,4],[10,-4],[8,3],[-1,4],[-2,7],[4,2],[-8,-8],[4,1],[-2,7],[-2,-6],[8,-4],[-10,3],[7,-8],[4,8],[6,-10],[-2,8],[-6,7],[-8,8],[-2,5],[9,8],[7,-8],[7,-2],[-1,-3],[-3,-8],[-8,9],[-8,3],[9,4],[5,-5],[-7,3],[8,6],[8,-4],[-10,2],[-9,-5],[-7,-7],[-6,4],[2,-6],[-2,-4],[4,2],[9,7],[-10,9],[-1,4],[-3,-6],[-3,-2],[10,5],[-7,-2],[9,7],[10,9],[-2,-7],[3,2],[-4,8],[-7,-2],[8,-8],[-6,-10],[-2,3],[10,2],[-2,-4],[2,-4],[-2,-4],[3,-7],[5,8],[4,4],[-6,10],[3,-7],[-10,-10],[8,-1],[-4,-1],[-2,10],[4,7],[-7,-7],[-2,-8],[-8,-9],[-7,-3],[1,-5],[-10,6],[7,-9],[3,8],[-1,-4],[2,9],[6,-10],[-5,7],[-8,4],[1,10],[-5,8],[9,9],[-10,4],[-4,4],[8,-10],[1,-10],[-10,-7],[-4,8],[7,7],[-1,-3],[-9,7],[-9,1],[6,-10],[-1,-6],[-7,-3],[-9,10],[6,-10],[-4,-1],[2,-6],[8,-8],[-1,3],[-3,4],[-3,10],[-7,-8],[8,1],[2,4],[-8,7],[-10,-2],[7,2],[6,9],[2,-1],[-2,1],[6,-5],[-3,-6],[-1,-9],[-10,-9],[-10,-7],[6,6],[-9,-6],[-8,4],[-8,6],[-8,-2],[-5,-8],[-6,4],[-8,2],[8,4],[7,-10],[-9,-10],[-1,-8],[-9,6],[3,-1],[-10,3],[-5,-6],[5,2],[-1,8],[7,7],[-4,-7],[-5,-7],[8,9],[2,-8],[9,3],[5,5],[-10,-6],[-10,-4],[-5,-7],[7,-1],[1,-5],[-2,-3],[-8,-4],[-4,10],[3,-10],[8,7],[-7,6],[-8,9],[8,4],[6,2],[6,8],[8,-1],[-4,2],[-4,-5],[-3,7],[1,1],[-9,-1],[4,10],[1,7],[5,-10],[8,-9],[3,5],[7,5],[9,7],[-3,-4],[4,-5],[3,-6],[-2,7],[8,-4],[2,-7],[3,-6],[10,-10],[-4,9],[8,6],[-8,10],[-9,-1],[3,-10],[-5,3],[-10,10],[-4,4],[3,-9],[1,-2],[8,-10],[9,5],[-7,4],[-3,9],[7,5],[10,-1],[-5,5],[6,5],[-1,10],[-6,-9],[-2,-4],[1,-10],[3,-10],[-7,7],[1,-5],[9,-10],[7,-10],[7,-6],[4,5],[3,4],[3,10],[-6,1],[9,4],[-8,-8],[-6,-9],[-8,3],[-5,9],[-6,-6],[10,-10],[-5,4],[6,1],[2,-10],[10,1],[-2,-1],[-3,-5],[-5,9],[-8,-10],[7,-6],[1,9],[-7,-4],[-6,-4],[-9,7],[7,-2],[-4,-8],[9,5],[3,9],[9,1],[-6,-4],[2,-3],[4,3],[-4,4],[6,-2],[1,1],[1,1],[-9,-7],[-7,-9],[10,10],[-4,5],[-9,-9],[10,-2],[-1,6],[4,-3],[10,-9],[-10,8],[10,3],[-4,-3],[-7,10],[4,-2],[-6,8],[-8,2],[-10,6],[9,9],[3,-7],[-2,10],[5,-1],[-3,-5],[-3,-8],[3,-10],[-2,2],[-10,5],[6,-8],[2,-10],[-1,5],[5,-4],[4,-9],[3,9],[-6,9],[5,9],[5,10],[7,-4],[2,-4],[-9,5],[-10,2],[6,1],[4,7],[-3,1],[-6,-5],[10,3],[9,8],[6,3],[8,1],[7,-7],[1,10],[-10,4],[-1,-1],[10,-4],[-1,-9],[6,5],[7,1],[10,-5],[-9,9],[-6,-7],[3,2],[2,-4],[-10,4],[-5,3],[6,6],[-9,-9],[5,-10],[-10,-2],[7,-8],[-1,5],[-5,9],[-7,2],[4,1],[8,-4],[5,-6],[2,-8],[3,9],[-8,5],[-3,-1],[-5,-8],[-2,4],[7,3],[-9,7],[-8,-2],[10,-4],[8,-10],[-4,-3],[-6,7],[10,-8],[-9,-8],[-1,-2],[1,1],[-5,-10],[4,4],[-2,4],[10,8],[5,6],[8,-2],[1,9],[8,-5],[-2,-8],[6,-4],[-10,8],[4,-1],[-3,-2],[-3,9],[10,5],[-5,3],[-5,6],[2,10],[10,4],[-8,-10],[-2,-2],[-9,-8],[-1,9],[5,-7],[-2,2],[3,-7],[-3,-5],[-8,2],[9,4],[8,-9],[4,7],[9,-10],[7,6],[-7,2],[-6,1],[-6,-5],[-10,5],[8,9],[3,3],[-1,4],[6,-7],[2,5],[8,5],[10,9],[6,1],[9,10],[-7,-3],[-6,6],[6,7],[5,-10],[-7,-7],[3,-10],[-1,5],[-1,1],[7,-6],[-2,7],[8,-5],[-5,5],[10,-2],[7,3],[2,-7],[4,3],[-3,-4],[-3,-4],[6,-1],[-6,4],[8,8],[7,3],[-1,2],[-8,7],[-4,-10],[-4,8],[-4,3],[-7,4],[5,1],[5,-1],[4,-2],[-8,8],[1,-1],[-10,7],[9,-4],[8,-4],[-1,-5],[10,-3],[-9,9],[-5,1],[4,-1],[10,10],[7,-10],[1,-8],[-10,1],[8,4],[-10,-5],[1,10],[-8,2],[10,-9],[-8,-4],[4,3],[4,2],[9,-9],[1,5],[2,9],[-8,-9],[-3,-7],[-9,9],[-2,7],[-8,10],[-7,8],[7,-1],[-1,-10],[-1,9],[-9,-6],[7,4],[-10,7],[-2,-9],[8,-8],[-3,3],[-1,-4],[1,-8],[-10,-1],[-10,8],[7,-1],[-2,7],[-8,-4],[-8,-4],[7,-1],[3,-1],[2,2],[8,-3],[5,6],[-2,9],[10,10],[10,6],[4,-8],[-5,-2],[2,10],[-5,-6],[6,-10],[-5,-10],[-2,-2],[4,10],[5,5],[-6,8],[2,-9],[-2,-7],[-5,1],[-8,4],[1,2],[7,-3],[1,-4],[-8,6],[-2,-7],[10,-5],[3,-4],[6,2],[-7,3],[10,6],[-8,10],[-7,-6],[-3,-5],[8,-7],[-7,3],[10,-9],[2,1],[-9,-3],[1,1],[-2,-7],[9,-8],[-4,-8],[-6,4],[-8,5],[6,10],[-4,2],[-8,5],[1,5],[-6,9],[-9,-10],[-7,1],[9,5],[-3,-1],[-10,4],[10,-8],[-1,-3],[7,8],[-6,-1],[3,10],[9,9],[10,10],[-5,-8],[6,-5],[10,-6],[9,-2],[-10,-2],[8,-9],[7,10],[-8,-9],[-7,-7],[2,9],[-2,-10],[-7,-8],[7,4],[-1,-4],[-10,6],[-5,10],[-2,4],[-3,-8],[8,-7],[-10,5],[-4,3],[-3,4],[1,9],[4,7],[-8,-2],[6,5],[-7,10],[-7,7],[8,-9],[-8,4],[2,7],[-3,-6],[7,-2],[-9,6],[9,-7],[3,-10],[-5,1],[1,-3],[9,2],[6,4],[7,6],[-3,4],[-8,-10],[5,3],[-10,-3],[8,-5],[8,10],[7,-7],[10,-2],[6,6],[-7,7],[8,-3],[-4,1],[-4,10],[6,-8],[-4,7]], dtype = "uint16")#candidate|2605|(858, 2)|const|uint16
const_2606 = relay.const([[5,8,-2,-5],[-6,-1,5,-4],[-8,3,-6,9],[5,3,-5,-7],[-3,-4,1,7],[8,-10,10,3],[10,-4,-6,4],[8,3,6,-6],[5,8,-1,-5],[-3,-3,-9,-4],[4,-5,2,-10],[-9,-6,2,-8],[3,-5,8,-5],[-5,7,7,-4],[9,9,-1,2],[1,4,1,2],[-5,10,7,8],[6,-7,-5,3],[-10,-3,-3,-8],[-4,-10,4,1],[-9,5,-6,7],[6,-6,2,-5],[4,-3,5,-3],[-6,4,-5,1],[5,7,9,-5],[7,-8,-1,-3]], dtype = "uint64")#candidate|2606|(26, 4)|const|uint64
call_2604 = relay.TupleGetItem(func_2347_call(relay.reshape(const_2605.astype('uint16'), [12, 11, 13]), relay.reshape(const_2605.astype('uint16'), [12, 11, 13]), relay.reshape(const_2606.astype('uint64'), [104,]), ), 5)
call_2607 = relay.TupleGetItem(func_2351_call(relay.reshape(const_2605.astype('uint16'), [12, 11, 13]), relay.reshape(const_2605.astype('uint16'), [12, 11, 13]), relay.reshape(const_2606.astype('uint64'), [104,]), ), 5)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_2610 = relay.TupleGetItem(func_2193_call(), 0)
call_2611 = relay.TupleGetItem(func_2194_call(), 0)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_2615 = relay.TupleGetItem(func_2097_call(), 0)
call_2616 = relay.TupleGetItem(func_2099_call(), 0)
const_2621 = relay.const([[-2,-6],[-3,6],[-4,8],[-7,-10],[4,5],[-1,-4],[-7,4],[-2,4],[9,2],[10,-5],[-10,-8],[5,9],[5,-1],[8,1],[4,9],[-4,-9],[-4,-6],[-8,9],[-3,6],[6,7],[-9,10],[-4,3],[8,6],[-7,-6],[8,7],[2,-6],[4,-1],[7,-2],[6,6],[-6,-10],[2,-8],[-2,4],[-6,-8],[7,-1],[7,-1],[-10,1],[-8,-10],[5,-9],[-7,-8],[1,1],[-2,-4],[-4,-10],[-7,-5],[6,6],[2,-6],[-5,6],[2,-1],[7,-10],[2,8],[1,8],[10,6],[1,10],[8,-10],[3,-5],[1,9],[9,-7],[-5,8],[6,3],[-3,-2],[3,-8],[9,3],[4,-6],[5,3],[7,4],[8,6],[-10,-9],[-10,-7],[-2,1],[3,-3],[4,-3],[7,3],[-7,-5],[-1,-6],[2,5],[-6,-4],[-5,2],[-10,6],[6,-5],[5,-10],[4,-7],[8,5],[-1,-1],[-3,9],[-9,8],[6,5],[1,-9],[-7,1],[4,-6],[3,2],[4,-5],[10,4],[5,-3],[6,-4],[-8,-3],[10,8],[-4,-6],[-8,3],[6,10],[1,7],[8,6],[-8,10],[5,-2],[-7,-9],[-7,-10],[-5,-8],[2,-7],[3,-9],[-2,4],[-9,-5],[-8,-9],[9,8],[5,2],[2,1],[9,-6],[-1,-5],[4,-4],[-4,5],[-8,-10],[2,-1],[-5,-7],[3,10],[-7,6],[1,-1],[-1,-8],[-4,8],[9,8],[-6,-10],[-2,-10],[6,-10],[-4,9],[8,-2],[6,7],[-5,3],[4,5],[10,3],[-2,-10],[-2,-9],[7,-4],[1,5],[6,-1],[-6,4],[4,10],[-7,-6],[5,-7],[-6,-3],[-8,7],[3,-9],[1,-1],[-4,7],[-6,-2],[9,4],[-5,10],[9,2],[2,-9],[1,-5],[9,1],[3,-1],[-4,-6],[2,8],[-10,1],[-4,7],[4,1],[5,8],[-4,-9],[-7,-9],[-5,6],[2,-7],[2,2],[-10,-2],[-6,-10],[10,6],[8,-2],[6,-8],[4,-10],[-7,9],[-6,-7],[-9,-3],[-3,7],[-10,9],[8,5],[-3,-9],[-8,-3],[8,6],[2,-2],[-4,7],[5,-3],[9,-5],[3,5],[4,3],[10,6],[-10,4],[6,7],[9,9],[10,-3],[4,-7],[9,-3],[3,2],[5,-3],[-8,9],[1,6],[-9,-5],[5,-7],[-5,7],[4,4],[7,-1],[4,9],[1,10],[3,-3],[10,-1],[-6,-5],[-3,-5],[-2,4],[-7,-4],[-3,6],[1,7],[1,8],[7,-6],[10,-4],[-4,9],[9,7],[-2,-8],[-4,-8],[-10,10],[-4,3],[-10,6],[10,10],[-8,10],[-4,-5],[8,1],[8,8],[2,-9],[6,10],[1,-5],[-6,7],[-6,3],[-5,-8],[2,6],[9,-7],[-2,7],[-8,-6],[-3,-2],[-6,2],[7,5],[4,7],[-3,7],[7,-2],[10,-10],[8,-9],[-9,-9],[1,8],[-7,-2],[-6,-8],[-3,10],[-8,-10],[-4,9],[8,-3],[1,1],[-5,10],[4,4],[2,-1],[-8,-7],[-5,-5],[9,3],[3,4],[9,-4],[6,8],[-7,-2],[-8,-5],[5,-3],[9,1],[3,7],[9,-10],[9,-7],[-9,7],[-9,6],[-1,4],[-3,4],[6,-1],[-9,-6],[10,-1],[9,3],[10,3],[-8,-9],[-10,-3],[-9,-6],[-2,7],[-3,-2],[-1,1],[-8,8],[-4,-1],[4,9],[10,-8],[1,-7],[8,6],[7,4],[10,7],[-8,8],[-10,4],[9,-7],[-7,10],[-6,1],[-9,3],[5,-3],[1,-5],[-5,-2],[-3,6],[-4,-1],[-5,-1],[5,4],[10,-1],[5,2],[-4,-8],[9,3],[-10,2],[-3,5],[3,10],[7,-4],[-1,4],[9,-3],[-10,-3],[3,-10],[6,-5],[6,-10],[7,9],[-3,-2],[9,2],[9,-2],[-6,-7],[2,2],[-9,8],[10,-6],[-7,-2],[7,-7],[-10,-6],[-4,-8],[-5,1],[-2,5],[1,-9],[-1,-9],[-10,-1],[5,-7],[6,-3],[-4,-1],[8,4],[7,5],[3,1],[1,-4],[-1,9],[-4,-8],[-10,9],[2,2],[-3,1],[-8,-10],[-10,-6],[-10,-3],[-7,6],[9,-2],[-5,-4],[2,-8],[-4,5],[-5,4],[-7,-8],[3,10],[4,-1],[-8,-3],[-3,-9],[-4,-10],[-5,-2],[-1,8],[7,4],[7,-9],[-8,3],[5,-10],[-4,-5],[-5,9],[-1,2],[7,9],[8,-3],[-7,-6],[-5,2],[7,-2],[2,-9],[4,9],[-7,9],[-3,-8],[-4,-5],[-3,8],[10,-10],[4,7],[-9,3],[2,-1],[2,-5],[-8,5],[-3,-3],[-1,-6],[2,7],[-8,-2],[-1,-2],[-6,4],[-3,-3],[1,5],[8,2],[-10,10],[4,10],[2,-1],[-6,7],[-8,-1],[9,3],[4,6],[9,-1],[6,-3],[-1,-4],[-4,7],[10,3],[5,8],[-8,6],[1,5],[-1,1],[2,-10],[6,5],[1,-1],[7,8],[9,-10],[8,-10],[9,1],[4,7],[-7,-8],[-1,4],[-6,-2],[10,-7],[-9,-6],[2,-8],[-3,-10],[2,-2],[2,-1],[-4,4],[1,-3],[9,1],[-6,5],[-5,8],[1,-5],[-3,3],[9,-10],[-10,-3],[2,3],[5,-9],[1,10],[6,-1],[7,-3],[5,8],[9,-6],[-2,-7],[4,-8],[-2,-3],[-3,-8],[-2,10],[-7,10],[7,5],[-5,5],[2,4],[2,7],[2,-8],[3,-8],[4,-2],[10,-2],[-9,-5],[10,2],[1,-9],[9,-8],[8,-8],[1,7],[1,-6],[-1,-10],[-5,-5],[-4,-10],[2,-8],[7,-3],[-2,-7],[-4,-8],[-4,-10],[1,7],[6,3],[-8,6],[2,2],[10,6],[6,-6],[-8,9],[-7,8],[8,5],[7,5],[1,-5],[7,-4],[-7,-10],[-6,5],[-1,7],[-5,7],[10,9],[-10,-1],[8,-5],[7,2],[4,7],[10,-3],[8,8],[-4,-9],[5,-10],[-4,7],[10,7],[-5,-1],[10,-6],[-4,1],[10,-7],[2,-9],[-4,3],[1,-8],[-4,-10],[3,-6],[1,-3],[-3,-9],[4,9],[10,5],[6,-1],[-8,8],[3,10],[1,-1],[10,-9],[10,7],[-4,10],[-2,-9],[10,5],[-9,9],[3,10],[-5,-8],[6,-9],[-5,-10],[3,-4],[-2,-3],[-3,2],[5,5],[-3,4],[7,3],[9,-10],[8,-5],[10,6],[-10,-4],[-9,-6],[10,-4],[8,8],[-2,-1],[-5,-7],[-2,2],[2,4],[8,7],[-6,4],[4,-8],[-6,2],[-9,8],[7,-7],[-8,3],[-8,1],[6,-3],[-1,-10],[-3,-1],[-7,6],[7,10],[-9,-3],[7,-6],[2,8],[5,4],[-8,-3],[5,3],[-7,7],[-3,6],[-5,1],[-6,4],[-4,7],[6,5],[6,-9],[2,-2],[-1,10],[6,-7],[8,3],[-5,-1],[-1,-8],[2,5],[3,-8],[5,1],[8,9],[-9,7],[4,-1],[-6,8],[3,-6],[-1,-2],[4,9],[-9,-5],[-4,-3],[1,-2],[7,-4],[8,-2],[-1,-3],[-1,9],[4,-7],[10,1],[6,-9],[-3,2],[6,5],[-9,4],[-9,-2],[-1,-10],[-9,-9],[-8,-5],[6,1],[-6,-1],[10,-8],[-7,9],[-9,-8],[4,-7],[-2,-3],[9,-7],[1,4],[1,-4],[3,10],[-6,6],[9,-8],[-10,5],[-1,6],[-6,5],[-1,9],[-8,4],[6,-1],[-2,10],[1,-6],[2,6],[-2,5],[5,9],[1,-9],[2,-10],[7,3],[-10,-3],[-2,3],[2,9],[-2,-4],[-4,-1],[1,-6],[3,-1],[9,8],[-8,10],[9,6],[-1,-5],[-9,9],[2,-10],[10,-3],[-4,-3],[-10,-10],[-3,-8],[4,-6],[-9,9],[2,3],[8,6],[-1,-2],[5,8],[6,6],[8,2],[10,-8],[-8,6],[3,-3],[-5,10],[8,-1],[-7,8],[6,-1],[-10,8],[-10,6],[1,8],[-3,6],[10,6],[-8,-10],[-5,-8],[-4,7],[3,-1],[-2,-3],[-3,9],[-3,-4],[1,-10],[-8,-3],[3,-5],[-10,1],[10,6],[-3,4],[-9,-1],[-8,-7],[6,7],[10,-6],[3,9],[6,9],[-6,-7],[-4,-2],[-4,7],[-8,10],[-2,8],[8,4],[-3,-7],[5,-4],[-10,9],[-2,9],[5,-7],[-2,9],[-3,-7],[-8,4],[-8,-2],[-6,-5],[7,-2],[-4,-4],[-1,-4],[-7,9],[9,-3],[-9,-10],[-6,9],[9,10],[-5,-5],[-5,1],[-2,-9],[7,1],[3,1],[-10,6],[-3,10],[8,-8],[-4,5],[-3,-5],[9,-8],[-1,-10],[-4,4],[-6,-10],[7,1],[-1,8],[3,5],[10,-5],[-6,-5],[5,-1],[10,2],[8,-5],[3,-10],[-6,-10],[-4,8],[-8,2],[7,3],[5,-10],[-1,-1],[4,6],[3,-10],[6,9],[-6,5],[10,-8],[-9,9],[-4,10],[-1,4],[8,-1],[-6,9],[4,6],[-5,-3],[-2,-3],[1,4],[-3,1],[-9,9],[3,-8],[4,4],[5,7],[-1,-6],[1,-4],[3,10],[-6,10],[-3,1],[-1,-6],[-6,3],[10,-3],[10,6],[9,6],[9,10],[4,-9],[10,-5],[-10,-8],[-1,10],[-10,-2],[2,-2],[7,-7],[-3,-2],[-8,5],[10,1],[-1,6],[9,-5],[9,-7],[-7,-4],[-6,-3],[-7,-7],[-3,-2],[-2,-4],[-3,9],[8,-9],[3,-10],[7,-5],[6,-4],[-2,-7],[-5,9],[-6,-2],[-5,9],[7,2],[5,10],[-7,-9],[-4,7],[5,-10],[-5,-10],[4,-9],[5,6],[-7,-9],[2,6],[-6,-4],[9,-4],[-5,5],[-5,-2],[6,-10],[1,-2],[6,-1],[-1,-10],[4,-7],[5,-7],[6,-2],[-6,-10],[6,-5],[5,5],[7,10],[7,-6],[3,-3],[-5,-7],[-4,-9],[-3,-5],[8,6],[-5,7],[-9,1],[6,-4],[-3,5],[9,6],[-3,4],[-6,7],[-6,9],[3,5],[-4,5],[-6,-9],[10,-6],[10,-2],[8,8],[-6,-10],[-7,-6],[-7,-2],[7,-1],[10,1],[-5,-9],[-8,-5],[9,-10],[10,7],[-9,8]], dtype = "uint16")#candidate|2621|(858, 2)|const|uint16
bop_2622 = relay.logical_or(const_2605.astype('bool'), relay.reshape(const_2621.astype('bool'), relay.shape_of(const_2605))) # shape=(858, 2)
output = relay.Tuple([call_2601,call_2604,const_2606,call_2610,call_2615,bop_2622,])
output2 = relay.Tuple([call_2602,call_2607,const_2606,call_2611,call_2616,bop_2622,])
func_2639 = relay.Function([], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
output = func_2639()
func_2640 = relay.Function([], output)
mutated_mod['func_2640'] = func_2640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_2673 = relay.TupleGetItem(func_579_call(), 0)
call_2674 = relay.TupleGetItem(func_580_call(), 0)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_2685 = relay.TupleGetItem(func_156_call(), 0)
call_2686 = relay.TupleGetItem(func_158_call(), 0)
output = relay.Tuple([call_2673,call_2685,])
output2 = relay.Tuple([call_2674,call_2686,])
func_2690 = relay.Function([], output)
mod['func_2690'] = func_2690
mod = relay.transform.InferType()(mod)
output = func_2690()
func_2691 = relay.Function([], output)
mutated_mod['func_2691'] = func_2691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mod.get_global_var('func_2690')
func_2691_call = mutated_mod.get_global_var('func_2691')
call_2719 = relay.TupleGetItem(func_2690_call(), 1)
call_2720 = relay.TupleGetItem(func_2691_call(), 1)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
var_2725 = relay.var("var_2725", dtype = "uint64", shape = (104,))#candidate|2725|(104,)|var|uint64
call_2724 = relay.TupleGetItem(func_1048_call(relay.reshape(var_2725.astype('uint64'), [104,])), 0)
call_2726 = relay.TupleGetItem(func_1051_call(relay.reshape(var_2725.astype('uint64'), [104,])), 0)
var_2727 = relay.var("var_2727", dtype = "int32", shape = (14, 12, 11))#candidate|2727|(14, 12, 11)|var|int32
bop_2728 = relay.left_shift(call_2724.astype('int32'), relay.reshape(var_2727.astype('int32'), relay.shape_of(call_2724))) # shape=(14, 12, 11)
bop_2731 = relay.left_shift(call_2726.astype('int32'), relay.reshape(var_2727.astype('int32'), relay.shape_of(call_2726))) # shape=(14, 12, 11)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2739 = relay.TupleGetItem(func_1979_call(), 0)
call_2740 = relay.TupleGetItem(func_1980_call(), 0)
output = relay.Tuple([call_2719,var_2725,bop_2728,call_2739,])
output2 = relay.Tuple([call_2720,var_2725,bop_2731,call_2740,])
func_2742 = relay.Function([var_2725,var_2727,], output)
mod['func_2742'] = func_2742
mod = relay.transform.InferType()(mod)
mutated_mod['func_2742'] = func_2742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2742_call = mutated_mod.get_global_var('func_2742')
var_2744 = relay.var("var_2744", dtype = "uint64", shape = (104,))#candidate|2744|(104,)|var|uint64
var_2745 = relay.var("var_2745", dtype = "int32", shape = (14, 12, 11))#candidate|2745|(14, 12, 11)|var|int32
call_2743 = func_2742_call(var_2744,var_2745,)
output = call_2743
func_2746 = relay.Function([var_2744,var_2745,], output)
mutated_mod['func_2746'] = func_2746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_2846 = relay.TupleGetItem(func_828_call(), 0)
call_2847 = relay.TupleGetItem(func_830_call(), 0)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_2850 = relay.TupleGetItem(func_579_call(), 0)
call_2851 = relay.TupleGetItem(func_580_call(), 0)
uop_2862 = relay.cosh(call_2850.astype('float64')) # shape=(14, 12, 11)
uop_2864 = relay.cosh(call_2851.astype('float64')) # shape=(14, 12, 11)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_2865 = relay.TupleGetItem(func_828_call(), 0)
call_2866 = relay.TupleGetItem(func_830_call(), 0)
func_1930_call = mod.get_global_var('func_1930')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2883 = relay.TupleGetItem(func_1930_call(), 0)
call_2884 = relay.TupleGetItem(func_1931_call(), 0)
output = relay.Tuple([call_2846,uop_2862,call_2865,call_2883,])
output2 = relay.Tuple([call_2847,uop_2864,call_2866,call_2884,])
func_2894 = relay.Function([], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
output = func_2894()
func_2895 = relay.Function([], output)
mutated_mod['func_2895'] = func_2895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_2917 = relay.TupleGetItem(func_942_call(), 5)
call_2918 = relay.TupleGetItem(func_943_call(), 5)
var_2930 = relay.var("var_2930", dtype = "uint16", shape = (14, 12, 11))#candidate|2930|(14, 12, 11)|var|uint16
bop_2931 = relay.less(call_2917.astype('bool'), relay.reshape(var_2930.astype('bool'), relay.shape_of(call_2917))) # shape=(14, 12, 11)
bop_2934 = relay.less(call_2918.astype('bool'), relay.reshape(var_2930.astype('bool'), relay.shape_of(call_2918))) # shape=(14, 12, 11)
output = relay.Tuple([bop_2931,])
output2 = relay.Tuple([bop_2934,])
func_2966 = relay.Function([var_2930,], output)
mod['func_2966'] = func_2966
mod = relay.transform.InferType()(mod)
var_2967 = relay.var("var_2967", dtype = "uint16", shape = (14, 12, 11))#candidate|2967|(14, 12, 11)|var|uint16
output = func_2966(var_2967)
func_2968 = relay.Function([var_2967], output)
mutated_mod['func_2968'] = func_2968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_3034 = relay.TupleGetItem(func_2193_call(), 0)
call_3035 = relay.TupleGetItem(func_2194_call(), 0)
output = call_3034
output2 = call_3035
func_3041 = relay.Function([], output)
mod['func_3041'] = func_3041
mod = relay.transform.InferType()(mod)
output = func_3041()
func_3042 = relay.Function([], output)
mutated_mod['func_3042'] = func_3042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2466_call = mod.get_global_var('func_2466')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_3045 = relay.TupleGetItem(func_2466_call(), 0)
call_3046 = relay.TupleGetItem(func_2467_call(), 0)
var_3055 = relay.var("var_3055", dtype = "float32", shape = (14, 12, 11))#candidate|3055|(14, 12, 11)|var|float32
bop_3056 = relay.minimum(call_3045.astype('int8'), relay.reshape(var_3055.astype('int8'), relay.shape_of(call_3045))) # shape=(14, 12, 11)
bop_3059 = relay.minimum(call_3046.astype('int8'), relay.reshape(var_3055.astype('int8'), relay.shape_of(call_3046))) # shape=(14, 12, 11)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_3071 = relay.TupleGetItem(func_579_call(), 0)
call_3072 = relay.TupleGetItem(func_580_call(), 0)
func_579_call = mod.get_global_var('func_579')
func_580_call = mutated_mod.get_global_var('func_580')
call_3078 = relay.TupleGetItem(func_579_call(), 0)
call_3079 = relay.TupleGetItem(func_580_call(), 0)
output = relay.Tuple([bop_3056,call_3071,call_3078,])
output2 = relay.Tuple([bop_3059,call_3072,call_3079,])
func_3102 = relay.Function([var_3055,], output)
mod['func_3102'] = func_3102
mod = relay.transform.InferType()(mod)
mutated_mod['func_3102'] = func_3102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3103 = relay.var("var_3103", dtype = "float32", shape = (14, 12, 11))#candidate|3103|(14, 12, 11)|var|float32
func_3102_call = mutated_mod.get_global_var('func_3102')
call_3104 = func_3102_call(var_3103)
output = call_3104
func_3105 = relay.Function([var_3103], output)
mutated_mod['func_3105'] = func_3105
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3148 = relay.const([[[-2.359105,6.432985,-0.002768,-3.810967,-0.209079,2.926907,6.109974,6.860055,-3.782425,4.437173,-2.267993,-7.334567,-6.377956,0.720507],[-9.039948,-1.786655,-2.748968,5.500557,-1.849274,3.214095,9.391922,9.984373,7.167616,-4.424549,-6.213244,6.598990,-3.632245,5.896764],[-9.151116,9.640776,-2.196630,6.823590,0.674597,5.904577,7.726268,2.366545,2.488574,0.597999,9.397690,-6.258282,-4.334934,-8.713420],[3.223731,4.425584,8.280738,-6.974170,7.040045,-2.577440,-0.480556,-7.338339,-2.617629,-8.175170,-1.291117,2.587774,-9.419225,1.739084],[0.550450,3.148267,-1.884177,-3.882701,8.737015,5.804177,5.184967,-9.702463,5.515125,6.289905,-7.659533,9.125071,1.319601,-1.761369],[-8.211510,-7.567176,4.627343,-4.374396,5.423239,2.777347,7.341637,9.801991,-8.232265,-5.899506,-0.378544,-3.608516,-6.154950,6.436149],[-5.926295,4.638357,4.596938,-3.784887,6.496420,-7.949836,4.737867,4.145855,-9.420776,5.782953,-1.911577,-4.038209,1.323994,7.914828],[-3.856859,-9.763437,-4.491743,3.522338,6.154802,2.565513,-8.717087,2.327324,9.494335,-1.857837,6.404210,9.133281,-5.591922,-3.399880],[-0.468074,9.840443,-6.719248,6.997471,6.210941,5.182757,-5.699919,7.107516,-7.700766,-0.838073,0.311110,-6.009289,7.682051,6.679060],[9.647416,8.677664,5.224009,2.922366,-9.701709,5.510795,6.839971,2.838493,0.480658,7.240948,5.952137,3.972281,-2.195326,-8.511820],[7.579370,7.334641,7.224889,-4.899297,8.227569,4.647895,-2.447820,1.705603,2.156763,3.901900,9.554758,-6.821641,0.994345,-8.757915],[1.902913,9.288258,-2.985817,-2.343687,9.773945,-3.392737,-7.112442,2.088060,-9.775542,-4.227675,9.739473,-3.565885,-2.956766,7.013428],[3.322609,-7.438218,-8.040075,4.523800,-5.749160,6.295234,6.182854,8.815060,5.465139,-4.498907,8.123805,8.256687,3.192895,-9.067174],[-2.479871,3.351197,8.686969,0.332056,7.572474,-9.483344,-6.538822,0.939774,4.499137,4.025611,4.515175,1.631101,-9.152636,5.453377],[-4.786199,-0.924840,-9.629540,-9.360393,8.208711,2.385379,5.033669,-5.879380,7.030250,0.062165,-7.505073,4.400134,-7.468375,6.592843],[3.829118,-1.000533,-2.302481,3.979830,-3.329139,-4.908709,0.948234,-9.804633,1.960574,-1.578911,0.731870,2.154856,-1.810082,4.180595]],[[8.419076,5.923535,-3.445821,1.465436,-0.151109,4.050625,-5.130524,-2.692774,3.743100,-1.779249,-6.849633,-3.211625,-4.346177,7.869254],[-0.962753,-2.505150,8.919616,8.795309,6.961532,-5.534233,4.944831,2.516573,8.624713,5.479494,-7.460155,0.801544,-6.147457,-2.769980],[-7.986946,9.506231,0.863771,-8.751363,0.119455,-1.556377,-4.858387,8.788709,-3.465007,-2.952754,-3.824943,-0.457141,4.917033,9.611142],[3.344130,0.948066,-9.023159,5.697770,-4.926733,-0.600251,9.947080,-8.259379,-0.055766,0.417552,-0.649479,-0.010379,8.111811,-5.089300],[1.124622,-1.797299,3.395420,-5.947898,-4.066848,8.967275,0.358521,-9.406157,-1.154612,3.703006,-7.846850,0.247365,-7.257117,-9.942363],[6.988822,-0.311713,-8.578360,7.640386,-6.433133,8.053627,1.376242,9.122350,0.972456,8.188476,0.826182,-7.353534,0.314885,-2.482055],[7.856568,4.995296,5.015692,0.466855,-9.179609,-5.401107,-5.705348,2.618338,-9.249886,8.878958,2.536034,-1.710058,8.182427,-1.942717],[-0.375898,-7.524271,4.730694,-2.615226,7.179145,6.806686,7.651731,2.186671,4.351656,2.868120,9.180448,4.206518,-6.865805,1.189771],[-5.334572,-0.343548,5.195683,8.863180,9.758729,2.459032,1.143141,-1.306121,-1.562172,3.271999,1.250024,-0.827366,8.300329,4.427594],[4.039084,1.700541,-0.253520,-7.902354,-1.223657,2.637518,-9.284471,-7.527469,6.139682,-5.466470,-0.104057,4.822306,-4.321953,4.460823],[-3.776005,2.309578,9.321246,6.685450,9.105582,4.474549,4.669916,3.466064,-7.354010,-0.545038,-3.621504,4.903783,-7.742080,-0.414550],[-9.857404,-0.072910,-2.718353,-3.076276,-3.819889,-4.745596,-7.943164,6.029476,-2.356427,9.932464,-9.966529,-3.798670,-1.586926,-2.126844],[-5.155665,5.812307,-0.124540,3.944139,-2.381307,-2.260010,-0.077640,-6.772595,4.438290,-0.717965,-4.354522,-1.483603,3.430804,7.042748],[-0.183369,-7.611218,3.355509,-8.087037,7.553182,-5.554386,7.735536,-4.549646,9.465438,-7.740807,-4.689750,-7.081550,-2.758973,-2.624505],[3.238704,5.667839,8.871933,7.336397,-0.084451,-0.951997,6.087074,2.127667,4.375434,-1.935089,-6.762630,3.479777,-4.422027,4.284847],[-4.409449,-4.268164,7.458576,-0.686722,-4.685460,4.008730,5.327356,-8.372391,2.452503,6.886406,-6.643870,9.624446,7.750240,3.699882]],[[2.304237,-7.299697,-2.264439,8.928548,3.301615,-6.516085,3.881879,-8.231997,6.414995,-0.993282,-6.301566,-0.548125,8.206552,7.203637],[-2.741193,-5.424824,1.470710,-3.130176,-0.815863,2.253948,0.828945,2.806131,-5.489604,7.998736,-6.790463,-7.259717,4.938754,3.640332],[-8.832603,3.770966,-2.279996,-4.787274,2.436942,6.232028,1.683061,4.502954,6.332789,2.988061,-4.768488,5.310173,-7.402449,2.596915],[-9.089426,6.566918,0.636548,-2.364881,-2.243723,1.442057,7.430331,0.001774,1.676793,4.104540,7.308898,-2.130736,5.910176,9.127625],[8.662434,1.927238,7.589642,0.692373,-8.104135,-2.924803,-6.876883,-2.104712,0.440246,-6.974100,-5.941994,0.699406,0.979486,3.666373],[7.236083,-7.428710,6.365127,8.999453,-8.560201,4.715212,-9.396177,-4.446555,2.994526,-0.552211,-3.044358,5.429317,-6.540493,6.218752],[0.536221,-9.182025,3.998705,6.722960,-8.175233,7.822435,8.614273,3.944412,1.259391,7.896605,-6.650036,5.585264,-2.142485,1.884909],[7.216126,-0.217335,0.549434,1.777424,-6.418970,6.845538,4.690124,5.757224,2.097179,-8.728630,-3.880156,5.955705,0.638315,-3.374216],[-6.686228,-9.469471,-4.321572,-5.576241,5.699348,-6.238170,-8.755111,1.890381,-6.357305,3.958925,7.895607,-1.572857,4.621601,3.492387],[-6.540704,-8.554245,7.963051,-8.749349,-0.921288,-8.372179,8.354925,0.769257,-6.725096,4.008437,5.850813,9.355537,4.572516,4.859642],[5.424825,7.188627,-5.310551,-3.383613,5.601321,1.727226,4.109607,2.179117,-3.271947,3.625453,6.883192,2.904878,4.513995,-0.064409],[2.479589,2.536105,-7.353514,-6.169688,-6.777639,-7.484753,-6.457142,8.803828,2.873992,-6.883174,9.357203,1.502107,-7.407789,-7.854992],[1.374217,-8.297230,-7.699119,1.594116,4.199531,9.135234,5.505806,9.620932,5.609959,8.127041,3.183206,-9.145033,0.087301,-3.003387],[-3.342105,5.861113,5.759480,-3.982517,4.507275,-6.852455,-2.849518,6.503735,0.874580,1.896679,9.191649,-6.895159,-1.171783,-1.456791],[-4.092957,1.824560,9.332694,-2.488103,1.996673,-8.075499,-8.396519,3.596841,-2.399552,-2.805992,5.148283,-8.861067,5.331811,3.059653],[7.232548,2.841383,-8.610805,-6.696158,-4.707512,-9.287448,-7.394902,-6.013766,8.108939,6.693639,-9.459899,-5.483257,8.392632,3.065524]],[[0.902551,-3.649895,-4.530651,-2.393380,-7.206889,-5.172258,0.323883,-4.804976,3.317554,-9.494848,-7.559051,-8.131536,-0.075779,-3.902423],[8.218045,-6.337524,9.989438,7.517228,-1.116339,-2.901175,-6.121992,4.152385,-8.877534,1.277365,7.744108,-6.578630,7.229096,-8.928733],[5.683210,2.133926,-0.479376,0.795416,-2.621931,3.015814,-4.564778,-9.003580,-8.694532,-9.230023,2.633953,-6.676996,-7.496802,0.986305],[0.294824,2.007415,-2.494482,6.003924,-1.667580,-3.315959,4.500649,9.107561,-8.271672,4.204127,-9.189007,6.881569,2.455257,-1.744370],[-4.289372,-9.739175,1.077383,7.740411,-5.155027,5.105991,3.714006,-0.113938,8.793598,1.511042,5.316747,3.352567,-8.957534,6.194629],[-0.300231,2.434802,1.745770,0.722658,2.271815,6.726099,7.435724,-7.992676,-3.597864,-4.812418,6.858540,8.988031,-2.114113,-1.923245],[9.769542,-5.629514,1.909610,5.550618,4.550314,8.329873,4.851125,9.660765,0.318800,0.825493,-8.179977,-8.964502,1.584158,-1.810677],[-8.744762,5.862229,-5.530274,1.908214,3.755259,8.046623,7.836557,-0.576998,2.772152,-5.565513,1.231049,-4.780407,1.725243,6.336660],[6.925984,-5.394717,-8.855691,2.167119,1.743211,-1.627242,1.756182,-7.963378,3.212288,2.248365,-4.231876,9.266264,-7.423263,1.478803],[-8.050427,-9.394176,-3.489299,5.112555,-9.771406,0.479613,-9.463382,3.030934,3.869374,-5.239544,-7.373313,6.590173,4.113885,-6.013008],[8.745044,9.536721,4.772613,8.723654,-6.317587,-6.383740,5.556792,0.650931,-9.054688,-2.938786,-6.658962,-1.133255,-9.548274,0.940985],[-3.013778,2.564403,8.560501,-7.097376,8.511696,-0.022464,-0.364064,-3.863859,-2.017442,8.198819,-1.600045,8.648303,3.344866,5.595550],[9.406099,4.109002,5.956045,6.189297,-7.383953,1.580856,9.529377,5.819137,-5.085455,-2.949736,4.974191,2.587596,0.701963,-7.855414],[-9.059590,-8.545063,-5.731152,-4.236236,0.133020,-2.956509,6.603394,6.840832,5.426229,-9.431950,-9.885854,2.204895,7.530776,-7.721655],[7.319817,3.888323,-7.553159,1.173722,8.109729,-7.580994,-0.013015,-5.394189,-1.805005,-2.402530,4.968324,-3.165466,0.867952,0.497054],[-9.178167,9.284246,8.450970,-4.680663,6.776277,-8.529256,3.073774,6.460662,-4.250575,4.573093,8.425054,-0.300842,-0.368460,-5.875038]],[[-3.166599,-8.655907,5.492905,-3.027681,-0.823108,1.179572,1.522547,6.689330,-0.208239,-3.448909,-2.069443,-4.973500,5.107500,-6.649040],[9.445226,-0.225777,8.034211,-0.478154,-5.042181,0.322223,2.424687,-5.417645,-4.108987,3.363758,-8.490331,3.991919,2.169322,-3.651213],[8.453314,5.171884,-2.181439,-1.429538,-1.975938,-5.595655,-2.837740,-1.397561,-9.861736,-5.945181,-9.269815,-8.252216,7.442697,3.591599],[5.998101,4.443779,1.650454,4.506363,-3.420643,3.910012,-4.072001,-3.020072,3.419794,9.148705,5.948769,-9.102129,9.732294,0.915703],[3.729790,-5.160290,-0.743492,7.432257,-8.232387,2.015491,-4.003391,3.903352,9.661394,7.937941,-9.763803,-5.649416,-1.161181,3.266733],[8.820412,-0.757863,-7.879279,3.283521,9.670523,-4.767212,3.754369,-2.740308,-8.625946,3.082465,6.937960,-8.974666,0.488286,-1.903070],[2.345980,5.887770,-7.806890,4.225299,-1.481686,3.482315,2.014826,0.468822,-9.602842,1.305669,-4.778676,-2.823491,7.849324,7.004988],[9.285301,1.380295,-9.038104,-0.228040,-8.827836,9.530315,-3.384083,-8.825712,-3.784428,6.966008,-1.843089,0.265474,9.711855,-5.221016],[-9.489895,3.418916,8.382779,-4.640036,1.212726,-3.610302,9.063865,0.892565,6.790241,1.017218,9.704228,-7.593470,9.922338,-9.193961],[3.181681,-7.249559,3.517519,0.253928,-0.648524,-9.357649,-9.314129,2.249523,-4.833986,-4.215581,1.516635,4.523612,-5.806734,-7.789975],[9.287864,-5.411667,8.924817,-4.485664,-1.560248,-7.609524,8.104894,-2.810823,9.798510,1.984955,-4.555301,5.380152,-8.761865,9.670499],[-1.551731,-8.750390,-2.118410,-9.562330,6.661391,-4.679910,4.912278,-7.226406,8.143076,-0.191031,9.910167,-4.320328,1.552815,7.640987],[-4.079493,-3.193048,-4.842356,-5.049985,9.125430,-4.972724,5.881173,-1.939380,9.412201,-5.013185,-7.943837,-0.882396,-0.305719,5.580624],[-6.811926,8.390279,5.738675,-7.259412,5.949176,3.764578,0.454272,6.633777,-2.173016,9.108686,9.604345,7.491192,3.500648,2.350080],[-7.908302,4.698195,4.480907,-0.637643,3.267860,-9.470050,8.912900,9.271866,6.872982,-2.164854,2.314617,-2.901577,4.899727,-0.951409],[0.463352,-5.681353,-9.790470,-1.141736,7.277415,5.492586,9.338576,8.446371,5.908565,-3.758646,2.663686,-1.149733,-0.988609,5.605055]],[[-4.230482,-0.395541,4.495290,-6.952165,8.552205,8.489323,7.182053,3.675814,-4.968709,2.221455,0.222641,6.556899,-0.611893,5.717129],[-5.682589,-5.230732,-0.971263,-2.779852,-8.020687,-2.753536,2.022148,-1.360300,-5.838939,-9.679145,-9.563210,-1.408463,2.529823,-9.964128],[4.239754,-8.770734,0.212485,3.393271,-0.509041,0.267355,-9.012375,-3.719856,-5.350501,-7.609389,-9.687327,7.894868,-8.973408,-9.998145],[4.766483,-2.542501,2.519979,-2.403130,9.196659,-0.013455,6.407562,-7.323672,2.639484,-0.703243,2.716012,-6.608518,2.278208,-3.127144],[3.748903,9.548956,-6.320118,-3.324140,-8.334598,-6.828954,-6.835528,2.067091,-9.028534,4.889432,-0.369715,4.128332,-1.440937,4.196120],[-3.850830,1.229549,0.615115,-7.024926,-3.977729,9.924927,-0.449561,0.404014,-1.550807,-8.532867,-7.174188,3.618694,2.160973,7.075117],[-8.398286,1.631096,-4.470382,7.528061,1.420869,5.672383,-8.298357,6.125632,-5.508933,8.962514,5.160055,-6.756776,5.515270,7.789796],[-8.593810,-7.947288,9.904906,6.656026,-6.801608,9.649413,3.855984,-5.355442,7.800200,-5.797405,-9.645391,1.082371,5.278508,4.878144],[2.399120,-4.955857,2.402784,-6.976083,-6.489029,2.814354,-0.031790,6.567973,1.616719,8.360545,2.702185,0.732790,4.798934,0.056922],[-8.641068,0.310106,1.350761,6.004483,-0.591727,-8.775305,-6.563862,-1.456162,-0.562892,-3.992922,9.460130,6.643915,5.219964,-3.101314],[8.152788,3.011404,-3.945410,1.542659,-3.050681,3.484944,-3.737601,-4.871492,7.698701,-8.776659,-3.048201,7.369536,-5.155603,-3.048105],[4.430962,1.186142,-1.422138,-9.667535,6.586001,3.133238,0.849354,8.302097,-6.452266,-0.508203,-7.462575,4.085828,2.683397,-6.265564],[6.542397,0.606069,7.114377,8.722020,3.505597,-1.020106,6.866124,5.043854,-7.095417,5.837181,-0.953972,-2.519120,-7.678351,2.539813],[4.982306,0.947096,-6.654573,1.654835,2.583270,5.246126,8.168924,-3.208855,3.582300,0.536486,-4.503429,-9.369631,-9.946012,3.951848],[2.877681,-4.657599,-7.394450,3.196101,-6.328118,-2.161498,-7.204396,-9.642363,0.903137,-9.964003,-9.121677,8.678185,-5.111603,7.567150],[-0.051587,1.691041,1.327452,-6.875979,-5.811617,-7.654896,6.737460,-8.627188,5.835008,9.211617,5.284120,7.906679,8.184129,-6.251972]],[[7.696491,-0.871318,-0.228083,8.385054,7.526156,7.029675,5.674077,-5.391009,-6.915713,-6.475047,3.342745,8.770397,-6.196190,1.711697],[6.218941,7.352714,9.755124,-1.493441,-9.567571,-5.661308,-5.419330,7.789882,5.938234,-1.004641,-8.747308,2.063429,-9.131910,2.585042],[-9.437651,-7.340176,-2.944814,-6.930938,4.295148,-7.276995,-2.692558,7.108047,-4.866249,-2.871495,-1.751253,-7.156534,-5.825376,-4.445690],[-1.994963,3.990842,-7.039751,-2.847131,1.915762,7.901405,5.713266,-1.900717,-3.446530,-4.032728,-9.681573,-7.378329,0.004542,-3.728416],[6.173745,-7.742938,-0.306937,-0.520978,2.461279,7.434013,8.608012,7.124408,-2.622237,-2.551830,8.178104,-7.529986,8.246687,-6.723460],[3.300204,-3.916695,-8.506336,-8.939448,-0.703215,9.598403,9.484136,5.821014,8.605641,3.801766,-8.723081,-1.908837,9.864854,-2.509183],[-3.576701,2.971332,0.112540,-6.767403,5.278112,-7.475874,1.859746,2.064458,-5.210200,2.285429,-1.244014,-4.806837,-4.937760,-4.722422],[5.799538,-6.324034,-3.661071,6.880520,-7.023283,4.418173,-9.705703,8.629215,8.748770,-5.972231,3.590539,-3.174445,-1.248800,5.928286],[5.914860,-0.969583,-2.845402,-7.687762,6.334030,-0.739480,5.100726,3.161510,0.683361,4.162669,8.087865,-1.751933,0.754599,-2.048778],[0.830967,-5.414884,-5.974986,4.194496,-6.218120,7.286855,6.809175,4.889597,6.949921,-9.775404,8.526054,0.566435,4.931462,-5.571402],[-1.387842,0.292286,-3.830130,2.759077,-0.552350,0.359574,-0.833874,-8.593451,-0.791728,1.584554,-7.782652,-5.468141,1.367692,2.229044],[0.093103,-0.574034,-5.870083,-4.207873,5.371195,8.306542,-5.505000,-6.474880,8.665493,7.827559,-5.354442,7.659736,-6.762393,7.333183],[-0.906038,2.050284,-9.576037,8.578816,6.035148,4.591995,6.674661,-0.243720,9.763391,5.069812,-1.613915,-6.620008,3.693090,8.725703],[7.622512,1.465580,6.440163,6.220508,-7.610115,7.001502,-1.838335,5.230341,2.880140,-9.989720,-6.130749,-2.517901,-7.298926,-4.900587],[-3.888353,8.185540,-9.886961,4.273375,8.504448,8.495768,-2.882117,7.252550,4.095325,-2.688628,0.971801,1.869584,-7.413702,-5.381794],[-3.590137,-0.546892,-9.457799,-1.496076,0.730273,2.975856,-1.006150,-7.760141,1.974067,-4.080312,-4.364100,4.354502,3.060244,-9.918161]],[[-7.827376,-8.862418,6.295336,-1.190806,-8.658809,-8.291207,-6.252782,4.538627,-7.004055,1.180929,8.436802,-7.119381,1.505129,8.536372],[-3.177813,-2.122218,-4.285564,5.445045,-4.501381,-9.498255,-3.097474,-4.945975,-8.892930,8.480117,3.822665,-0.478101,-2.312204,3.003254],[-6.317827,-4.677468,-4.464945,-3.097710,2.622306,-2.502953,2.986032,4.601160,0.978702,-1.012755,1.930729,-8.899363,4.114149,7.249769],[8.756676,2.543260,-5.559238,-3.587042,-3.959542,7.679407,-4.826902,1.298491,-5.424335,0.972884,-7.228490,9.295172,3.875700,8.916978],[-9.424081,0.844656,5.460164,-7.931986,-6.798320,-3.062061,7.307425,9.620687,2.642801,2.811021,8.494683,4.206679,-5.168293,6.363584],[-3.296956,-2.705483,1.421595,-9.039642,-3.825011,-4.245645,3.570708,-2.525673,2.597354,-2.024111,-0.744604,-4.870658,-9.575195,-4.898008],[7.391456,-6.540450,-8.534301,-5.189950,-0.756258,-4.525154,6.012088,-4.096239,2.347829,9.669389,-8.313370,2.214597,4.703086,-2.068510],[6.267429,0.413867,-4.391320,-6.293678,-8.987041,-2.010556,8.986644,-7.346456,-4.066325,2.617327,5.874341,-7.767297,-4.142128,-7.508326],[7.021733,3.249618,9.843850,2.740185,-9.888667,-8.615553,7.928133,-7.835353,1.424159,9.750669,6.332209,4.874042,-6.163603,-1.859582],[8.901984,-2.677793,0.603454,3.508230,-6.546938,-5.104603,-4.315014,-4.603928,6.873781,-6.854849,3.519417,-3.147039,-3.591601,0.282976],[7.190812,8.079503,-5.948123,-8.762162,9.884025,9.676682,-4.468357,2.862654,-8.845897,-4.611537,-9.999337,1.900374,3.855764,-8.863198],[0.979449,-2.805634,9.577796,-2.708350,7.262648,8.648375,-1.881080,6.931060,-5.601259,-2.353884,-4.238296,-7.329968,6.860036,-8.341518],[-8.751375,4.023982,-7.568411,-7.953714,4.254011,6.048364,7.215847,-1.028467,6.758504,5.244276,-4.830475,2.525626,-9.068380,2.713768],[0.535820,-0.073811,-3.899190,7.225778,6.165321,-0.587681,-1.498742,-1.550808,-0.121596,-5.988338,-3.160500,0.041085,3.464980,5.444409],[-1.603103,6.493254,-0.003516,9.020557,7.686330,7.452433,0.985989,-3.103861,7.195062,9.981048,5.742638,-6.450887,3.454312,-7.579053],[-5.292575,7.654968,-7.883852,-0.128844,-5.500708,8.694723,-7.374838,6.055943,-2.395443,-2.481470,-8.836572,1.467307,9.600296,8.359891]],[[2.577732,2.090555,3.911468,-5.030982,9.775861,-6.878903,2.396670,-3.812034,-8.947610,3.306724,8.119531,-7.657242,4.323836,5.259678],[4.332109,-2.144219,-5.665747,-1.999278,-9.562757,6.342532,7.530823,7.428332,5.723923,8.668598,1.506107,-1.471240,-8.258476,-5.704970],[-5.400558,-2.226599,-4.847263,-5.319532,-5.695117,-1.985777,5.721768,-5.052653,2.404940,5.785021,4.275010,-8.022998,2.913558,6.353947],[-2.529904,-1.079503,1.682633,-4.650397,0.939501,-3.408204,-5.538609,-9.956417,-1.550474,-7.716485,-3.969863,-8.292150,-0.836743,7.943639],[7.098876,2.937957,-6.840395,-7.166767,-0.368876,-0.724718,1.805973,5.745497,7.957476,-5.699918,3.188656,-3.230346,-8.100978,4.835657],[7.432924,1.949478,-0.735313,-0.645770,-7.343598,-4.524642,-9.779056,-4.501759,-4.025319,0.142640,9.630369,8.018147,-8.920267,-7.454079],[2.899479,-5.250290,-2.427403,5.302859,-4.761587,-0.540252,6.237979,-3.654122,7.884561,0.625339,-6.633866,4.723708,-8.302296,-9.643294],[-6.476891,-9.739841,0.759597,1.970353,-2.364347,-7.860660,-6.957688,3.923957,8.265062,1.020933,-5.499803,-4.842406,2.349218,-5.290520],[7.082426,9.666451,0.264433,7.453984,-5.413695,5.867637,8.926813,7.636621,-0.330470,8.891349,-0.055374,-1.464352,-9.473343,-0.118558],[-8.018294,2.500121,8.357933,-2.634298,-8.617067,8.228386,-3.130763,2.695016,-5.774935,7.046591,1.264565,8.793049,-3.130043,-9.528428],[-0.908514,-3.702599,1.843354,-9.033636,-1.359767,-0.690356,-5.217651,3.136724,-9.340728,3.107285,-4.401168,9.112912,7.137195,7.219871],[-0.257102,-8.030223,-5.949199,1.653895,5.758835,2.785763,-8.050280,-9.520292,9.406868,8.780486,7.737880,4.307468,-4.086633,6.361809],[2.993805,3.563614,3.258199,-0.565614,-2.196644,2.666850,-9.421452,-2.930719,-5.908023,4.149960,-0.311112,7.427575,7.601447,7.848845],[6.652435,-3.791819,-3.302127,-6.781800,2.866980,1.883846,1.666420,9.454256,7.101418,-4.603963,9.853204,-8.829167,0.550692,1.968784],[-5.373550,-9.396358,0.563106,-8.442620,-2.908477,0.813557,4.154061,8.356340,-3.492458,-2.354011,-4.929324,9.234710,1.234391,-1.280487],[-5.034049,6.769907,-0.138445,-9.990667,-4.130000,6.527181,-5.271084,9.196138,-8.153841,-7.057886,8.861168,-3.774117,8.677669,9.181346]],[[5.354548,0.604094,9.340089,-1.661380,-9.876133,-0.755006,8.760198,3.659298,-2.550438,-9.862125,-2.372014,0.462575,6.561525,1.338943],[-2.387971,0.686502,-0.633575,4.288810,-3.637472,-5.725170,-0.442288,0.481139,-4.919153,6.046522,7.423094,3.568767,-4.632032,-6.861239],[9.577777,5.949421,-9.245770,1.512427,2.096968,9.632129,5.636365,8.748584,-4.925328,4.327073,3.967745,1.799980,-4.531252,-6.372911],[-7.863545,2.787824,4.601735,7.559630,6.450412,-8.204371,5.225735,-6.032169,3.098630,-4.924373,5.613035,4.992043,2.911388,1.302153],[6.512377,-6.168290,-5.868302,3.190953,-8.720543,-5.180714,-9.766060,6.491926,-6.178970,-5.622057,8.479032,2.489164,-2.962662,9.496805],[1.971507,-7.565504,0.552666,-6.096630,-5.629668,8.158742,-8.969090,-5.782899,-6.790360,-8.646448,-4.769565,1.168253,-2.765778,-9.681076],[1.388362,-9.098721,-2.062068,7.157765,4.847365,-8.828997,-4.737081,8.741676,8.330500,7.522548,0.817882,-1.646446,-7.017624,6.338070],[-5.932201,2.128804,9.392470,-2.384696,-3.476905,5.345910,-5.144115,0.116358,9.483824,8.881091,9.438591,0.510681,4.520248,-7.498298],[7.177963,-9.033893,6.985580,3.811216,4.555191,-0.854434,3.890565,8.175064,8.549105,-2.481043,3.733660,6.790433,-3.717815,6.970282],[-5.921969,5.392504,3.723684,7.686635,-1.109268,-4.261022,4.551530,0.391428,-8.300875,-7.051215,-0.107355,3.850857,-0.242492,-4.546708],[9.897724,-0.786904,6.426359,5.957283,8.467365,4.467228,1.221337,9.118320,-8.913239,9.245589,-6.527631,4.409330,3.061235,-7.005408],[7.967761,-6.806669,1.436060,8.384103,9.607748,1.352999,6.645760,-7.816484,-4.237185,1.719777,-2.105125,-1.477176,-5.948608,8.540721],[-1.616968,-8.216301,-9.320292,-0.295661,8.014201,-1.597263,-7.743633,-3.765585,-7.690019,-6.954788,-7.620145,-3.059108,-1.176659,2.521257],[-5.638125,-9.206426,7.809078,-2.962273,-9.591866,4.431414,-5.678161,-0.444354,6.793621,0.818977,1.572571,1.861097,6.665461,-1.179785],[-5.062762,5.658161,1.912963,2.979653,-5.994941,-5.802339,-7.380826,-3.741355,-9.409306,3.368252,9.379558,9.902110,-4.032045,3.676026],[-2.076531,8.457790,7.869657,0.675054,3.161909,6.380482,4.170887,-7.682340,9.053880,-2.724021,1.593353,-8.717516,-8.324164,5.814906]],[[-5.136786,7.577155,-0.519958,0.093557,0.151330,-3.832274,0.785229,-1.375684,-5.791330,-9.537620,7.977955,2.795342,-9.735876,-6.974438],[5.954208,2.335364,-3.215588,9.262801,7.103726,-6.061687,3.648076,3.670486,8.501229,4.887788,-4.360919,8.183075,9.238301,-5.424605],[-3.868159,-2.346627,-0.515126,3.365258,-8.561144,-5.069060,0.027299,-7.451757,7.451112,3.778163,6.400410,-3.031651,-1.273972,-9.874957],[-7.435866,2.486658,5.906142,8.638701,1.022571,-0.419848,1.780337,-6.030726,5.197590,3.303720,-4.331138,2.694985,-8.733471,-0.428017],[-4.115787,-8.344737,6.243862,4.863875,2.720379,8.125421,-8.747497,6.843077,-6.227417,-2.894985,-5.251062,-1.881666,8.673976,2.483182],[-7.615459,-3.773191,-6.440423,0.228547,6.377406,-7.275844,3.906479,7.767422,2.999657,1.885076,-2.811318,9.141287,-1.682202,-2.892324],[-0.930144,2.915642,1.752943,6.701387,-8.749121,9.325529,8.794811,-0.151848,2.429114,-2.852984,-8.215342,-5.369996,-4.220645,-7.393568],[-4.056539,-2.410204,-3.729068,0.390356,5.415227,5.483506,1.895173,5.950627,-6.632930,-6.559457,-4.507550,-7.847172,-9.827117,5.755795],[-2.881939,9.496811,-7.822507,6.708001,9.540395,-0.904835,4.765282,-1.881703,8.941888,-7.905678,-3.872426,9.664775,3.044506,0.427333],[2.165438,-3.469244,-3.738117,-8.073506,1.898065,6.175176,-5.678733,-5.146464,0.299675,-4.632382,-6.324509,-9.753597,1.739508,9.482511],[2.008074,5.161246,-0.016085,7.991176,7.855385,1.671703,9.230631,-5.953904,7.364117,-0.978678,9.926236,9.627863,9.363164,-5.428316],[1.302959,8.564520,9.730088,2.210290,4.514019,-2.952975,-7.649817,4.657847,9.764137,6.299432,-3.930129,7.189634,2.149247,-2.800139],[9.552847,1.959885,-7.966635,4.638967,4.650155,1.393247,6.316856,-4.714005,-5.284671,-7.818477,4.317978,-3.635998,8.418309,8.972199],[-4.719233,9.947595,6.918830,-5.226339,2.860199,2.808941,2.400115,5.801150,-1.287852,-7.243810,-4.106578,-4.417872,1.737404,0.916008],[8.808878,9.413160,-6.622325,0.142680,8.005537,-0.290951,2.429179,-1.186665,-5.934065,-4.519263,4.475542,7.664911,0.943845,0.632509],[-1.230353,4.934149,0.284096,9.049893,8.104110,7.213467,0.610763,5.040113,3.814056,0.512397,-9.589110,4.872788,-3.938709,6.485637]],[[-9.433762,-8.915268,8.422296,-9.759670,-8.325431,6.160299,-4.399283,4.111333,-7.210035,1.411968,-6.953838,0.316327,-0.099998,-5.489087],[-5.663964,-3.412859,-2.676124,1.886014,-8.120657,-3.312260,-5.076254,-2.236028,6.599217,-3.338055,-2.855125,8.027069,-2.109761,9.021632],[6.091152,0.020847,7.836848,8.057114,0.110532,-7.483136,-1.661446,-2.316058,-7.811807,-6.774327,-9.590052,8.736584,-2.960912,3.054737],[6.897234,3.371010,-4.605852,-3.227927,-5.767999,9.801367,5.401434,6.686059,8.065410,-3.789382,-7.934648,4.401190,8.874492,1.902815],[4.749396,-8.680096,-0.768919,-6.247550,-4.952258,-0.859177,-2.205338,-5.153692,4.338707,0.319706,-5.463785,-5.568859,-6.791558,2.512749],[-1.743889,5.903474,-2.248214,2.973671,1.591769,8.591524,-8.278304,-3.153623,-2.578581,-0.704906,-3.734089,-2.116639,6.407667,2.255877],[-6.315022,1.372566,-1.769681,-0.739341,-2.405467,1.374178,4.166204,-9.948965,-1.431226,-1.800226,4.705661,0.133266,1.893629,-9.153599],[-3.333898,-6.348868,9.246647,-9.443574,0.187382,-7.252926,-3.143401,3.403526,-7.017959,1.816075,2.823195,4.561753,2.670953,-4.983832],[-0.248433,2.277304,0.787555,1.948571,-4.827977,-1.206282,1.358590,0.966679,-8.363688,4.009956,-4.662472,8.692294,0.897381,4.865956],[0.409543,8.621088,-3.244508,0.789616,-0.494348,-6.226789,-1.849527,-6.730637,8.279954,6.047189,8.744984,9.460633,8.543328,7.264673],[0.027916,0.875783,-3.664746,6.951362,-2.050577,-2.817321,7.765274,6.837904,3.217149,5.341838,5.044608,-0.907974,-1.767051,3.702942],[5.405678,-9.876102,7.697593,5.969521,-7.628149,-2.469856,2.509788,6.339508,-7.750080,-7.279317,4.840387,-6.016744,-6.238886,7.042529],[-1.177114,4.535408,4.387526,4.208565,4.493959,-4.621284,3.675359,-5.530689,-8.729170,1.560137,-2.777497,-1.650447,-7.308762,5.952354],[-3.672244,1.462633,8.259784,-0.923425,-0.570901,3.793859,-9.674230,4.244516,-6.517329,3.179836,0.205151,1.704156,-1.458024,1.797464],[7.446519,-9.705340,2.177100,-7.017127,-2.253196,2.518919,-3.674952,-7.329486,8.412973,-3.209167,-0.689605,-7.842835,2.363259,4.140674],[0.204074,-5.007598,8.221254,-8.402087,-9.109786,6.744199,9.332671,6.374160,5.928717,7.070319,4.830031,2.361133,6.342451,7.592199]],[[4.296890,-3.439548,-2.103478,2.967687,1.898896,-0.908973,7.231426,-8.254639,3.355055,-2.488059,-9.770263,5.747613,-8.487039,3.911038],[-4.306215,-0.521152,1.416083,-4.606966,7.491342,-9.990015,-8.384882,-5.749093,-6.694525,-9.891196,-0.200445,3.581726,-5.661000,-2.555083],[4.235207,-1.627909,-7.178810,5.214694,-5.388864,7.530660,-8.049210,-2.192912,4.321043,-8.693878,-8.141731,6.195104,1.627142,7.567365],[1.207483,-7.667241,9.778301,-0.404508,1.583730,3.622473,7.064202,6.104892,-8.029700,-0.799012,-9.026387,-5.136947,-5.243063,2.509717],[-5.874617,4.771658,-6.868891,-1.417046,6.103492,-9.591864,-7.413012,-0.586015,-4.900204,6.925731,6.993482,-8.922937,-6.924460,-2.017128],[-9.724135,2.177356,-0.924201,-8.720868,-1.202528,-8.917132,7.628263,3.493453,9.928892,-8.980337,3.677474,-5.241663,3.041904,8.714551],[3.630639,-9.470492,9.582731,-4.904215,4.660072,4.229880,4.872184,6.288679,-5.091072,6.638894,-7.683769,3.435471,2.791526,-2.207918],[9.190807,0.229375,-5.138509,-0.024794,3.696505,5.896691,-9.528319,-9.908697,5.362533,-9.184805,-2.712707,8.313073,8.939956,7.961219],[-3.437039,-9.162688,3.963167,4.840950,0.970177,4.911763,-9.689447,4.646909,1.449720,7.443099,4.786564,-1.249111,4.599590,-8.686850],[1.649062,4.803369,-8.562509,2.470000,0.648412,7.116625,-8.647605,8.143008,4.180967,1.812628,9.991603,8.905244,4.282846,-3.689305],[0.500487,4.354700,-7.969202,5.868767,-3.597686,-5.060478,7.280066,2.417060,0.054716,-2.190919,9.160516,6.998904,-7.319422,-5.650894],[9.889417,-4.836659,9.194121,5.284903,8.975113,-3.184145,7.115639,4.847854,-1.514745,-6.418273,-7.551928,9.216859,5.555838,-4.904921],[2.989050,8.253014,5.839322,-7.193540,5.385672,7.155301,-1.871548,0.971326,-8.946995,-5.109519,7.752866,-5.777700,7.665236,9.744023],[8.766119,9.883957,-8.011400,4.036712,-3.188940,2.355599,5.806192,-9.118583,-1.892964,8.965105,7.374077,-6.063480,-8.413150,-4.401930],[-5.933839,-2.680237,8.652071,-3.485032,-5.336282,0.598130,3.697195,8.918418,3.162958,-7.973973,3.503906,4.201074,5.746191,4.865717],[-3.024032,-2.600134,4.894164,-6.643890,-6.283693,3.424579,-4.497196,6.415405,5.500756,-4.109198,4.366761,-6.099980,-8.290376,4.217032]],[[2.744831,-6.092412,-5.867595,-0.484656,2.124405,-0.728802,-2.514007,5.790334,-7.569220,-3.128828,6.955111,1.761026,-9.750143,4.404514],[0.073905,-8.636541,9.209647,-9.207588,7.406135,0.206071,-4.720818,-8.207542,8.851991,2.416254,6.192188,5.316586,3.396022,7.094168],[6.131930,-3.916065,4.354500,2.086597,1.410963,-2.193131,5.896240,-3.802619,2.238200,-2.838172,-4.841439,-3.099508,1.254293,-3.508813],[-0.950636,-0.439706,-0.291694,-1.298914,-8.670444,-1.241967,-1.583407,-4.260159,-6.660425,5.027061,-7.175309,7.720768,2.827584,-6.241645],[1.676159,2.353112,-7.379338,9.586923,5.483992,-2.475742,-0.675211,0.651194,5.724391,-2.274576,-3.643586,1.104768,7.634865,2.063407],[-3.762022,5.782398,-5.582660,-7.212264,8.610895,7.645300,4.461173,-2.243611,-5.317063,-9.053792,8.505255,-2.214339,-0.556375,-4.816628],[-3.327468,9.990762,9.419239,-0.176047,2.481144,-1.725193,7.708809,7.235537,9.968174,-1.906619,-3.782893,7.273317,5.582474,1.489997],[2.121116,9.136117,-9.773493,2.708622,8.419319,2.353146,-8.158359,1.842728,-9.082011,-2.333698,-8.574443,3.482835,-9.964861,5.789753],[-4.786223,7.307892,-2.568550,8.168749,6.323196,7.712223,6.429707,-7.302549,-0.143436,5.494684,-7.887090,1.032606,-4.244865,6.951842],[4.941294,-6.482399,-2.433894,-5.001044,-6.363211,4.674415,-9.082434,-0.259372,1.107689,9.068472,5.185077,-7.707728,-7.963445,-5.074327],[2.528492,1.513615,-4.301749,-5.162702,-4.478554,-5.473885,6.907810,-7.542661,-2.351137,2.750485,3.386565,5.582347,1.411636,7.585292],[9.286330,-0.109541,5.672291,-9.377803,0.630025,-8.106695,2.968950,-5.590220,-7.241656,-0.631594,8.977198,6.067957,-4.642726,9.704280],[-0.739823,7.771140,1.865403,-8.343928,-5.743622,-0.510532,-1.053452,5.001686,0.735089,-5.471474,-4.963772,-3.137399,-7.864853,5.739725],[3.254534,-3.445326,4.849208,3.036940,6.307280,2.251286,-0.670704,7.813630,6.090571,-7.779373,-7.523443,-0.678710,0.168212,-1.438914],[-9.013234,-4.370486,4.815757,-2.726442,5.320471,4.565008,6.859873,-7.785858,-8.502019,-0.015792,-3.961401,4.010460,7.539204,8.300404],[-1.621278,-6.118582,5.242200,-5.685334,1.893797,8.934893,9.149237,2.961603,-5.370186,-4.952801,1.715716,-9.390254,-1.678509,-6.601668]]], dtype = "float32")#candidate|3148|(14, 16, 14)|const|float32
uop_3149 = relay.asin(const_3148.astype('float32')) # shape=(14, 16, 14)
output = uop_3149
output2 = uop_3149
func_3157 = relay.Function([], output)
mod['func_3157'] = func_3157
mod = relay.transform.InferType()(mod)
mutated_mod['func_3157'] = func_3157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3158 = func_3157_call()
output = call_3158
func_3159 = relay.Function([], output)
mutated_mod['func_3159'] = func_3159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1583_call = mod.get_global_var('func_1583')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_3191 = func_1583_call()
call_3192 = func_1583_call()
output = relay.Tuple([call_3191,])
output2 = relay.Tuple([call_3192,])
func_3197 = relay.Function([], output)
mod['func_3197'] = func_3197
mod = relay.transform.InferType()(mod)
mutated_mod['func_3197'] = func_3197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3197_call = mutated_mod.get_global_var('func_3197')
call_3198 = func_3197_call()
output = call_3198
func_3199 = relay.Function([], output)
mutated_mod['func_3199'] = func_3199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3041_call = mod.get_global_var('func_3041')
func_3042_call = mutated_mod.get_global_var('func_3042')
call_3268 = func_3041_call()
call_3269 = func_3041_call()
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
const_3283 = relay.const([2,3,-5,-2,-2,-4,-10,3,6,10,8,6,-10,1,-4,-9,2,-4,2,-3,-1,-9,10,6,-6,8,4,-6,-4,8,-3,-6,-9,-4,-6,-7,-6,9,10,3,-4,8,8,4,8,2,9,10,2,-10,1,-7,-4,4,-4,10,2,9,1,-2,7,4,-5,7,6,-6,-5,-5,-9,-4,8,4,1,1,-9,3,-8,4,-1,1,-8,-6,9,-1,2,3,9,-1,-3,4,-5,7,-4,-7,2,2,-4,-3,2,1,-1,-4,-4,-3], dtype = "uint64")#candidate|3283|(104,)|const|uint64
call_3282 = func_412_call(relay.reshape(const_3283.astype('uint64'), [4, 13, 2]))
call_3284 = func_412_call(relay.reshape(const_3283.astype('uint64'), [4, 13, 2]))
func_1544_call = mod.get_global_var('func_1544')
func_1545_call = mutated_mod.get_global_var('func_1545')
call_3306 = relay.TupleGetItem(func_1544_call(), 0)
call_3307 = relay.TupleGetItem(func_1545_call(), 0)
output = relay.Tuple([call_3268,call_3282,const_3283,call_3306,])
output2 = relay.Tuple([call_3269,call_3284,const_3283,call_3307,])
func_3325 = relay.Function([], output)
mod['func_3325'] = func_3325
mod = relay.transform.InferType()(mod)
output = func_3325()
func_3326 = relay.Function([], output)
mutated_mod['func_3326'] = func_3326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_3483 = relay.TupleGetItem(func_2639_call(), 2)
call_3484 = relay.TupleGetItem(func_2640_call(), 2)
output = relay.Tuple([call_3483,])
output2 = relay.Tuple([call_3484,])
func_3493 = relay.Function([], output)
mod['func_3493'] = func_3493
mod = relay.transform.InferType()(mod)
output = func_3493()
func_3494 = relay.Function([], output)
mutated_mod['func_3494'] = func_3494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3197_call = mod.get_global_var('func_3197')
func_3199_call = mutated_mod.get_global_var('func_3199')
call_3579 = relay.TupleGetItem(func_3197_call(), 0)
call_3580 = relay.TupleGetItem(func_3199_call(), 0)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
const_3596 = relay.const([[-2],[-9],[-7],[10],[8],[-9],[-4],[4],[-7],[-5],[-7],[10],[5],[9],[-4],[10],[-1],[8],[1],[-2],[-10],[3],[4],[-7],[8],[-10],[4],[-5],[1],[-10],[6],[-10],[-10],[-6],[6],[9],[-1],[-10],[-8],[5],[-1],[-10],[-6],[6],[10],[4],[-6],[2],[-5],[-7],[8],[-9],[-8],[3],[-7],[3],[5],[7],[-8],[-3],[-10],[4],[-3],[2],[-7],[-1],[4],[-4],[-8],[-10],[5],[-5],[7],[-2],[-4],[5],[1],[-10],[8],[-4],[-4],[1],[-4],[2],[-10],[-7],[4],[-5],[-3],[-5],[-3],[-2],[10],[1],[-7],[-6],[-2],[9],[-2],[8],[-1],[-8],[8],[-5]], dtype = "uint64")#candidate|3596|(104, 1)|const|uint64
call_3595 = relay.TupleGetItem(func_1048_call(relay.reshape(const_3596.astype('uint64'), [104,])), 1)
call_3597 = relay.TupleGetItem(func_1051_call(relay.reshape(const_3596.astype('uint64'), [104,])), 1)
uop_3614 = relay.atan(const_3596.astype('float64')) # shape=(104, 1)
func_2690_call = mod.get_global_var('func_2690')
func_2691_call = mutated_mod.get_global_var('func_2691')
call_3618 = relay.TupleGetItem(func_2690_call(), 1)
call_3619 = relay.TupleGetItem(func_2691_call(), 1)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_3625 = func_1742_call()
call_3626 = func_1742_call()
output = relay.Tuple([call_3579,call_3595,uop_3614,call_3618,call_3625,])
output2 = relay.Tuple([call_3580,call_3597,uop_3614,call_3619,call_3626,])
func_3631 = relay.Function([], output)
mod['func_3631'] = func_3631
mod = relay.transform.InferType()(mod)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3631_call = mutated_mod.get_global_var('func_3631')
call_3632 = func_3631_call()
output = call_3632
func_3633 = relay.Function([], output)
mutated_mod['func_3633'] = func_3633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2536_call = mod.get_global_var('func_2536')
func_2537_call = mutated_mod.get_global_var('func_2537')
call_3651 = relay.TupleGetItem(func_2536_call(), 0)
call_3652 = relay.TupleGetItem(func_2537_call(), 0)
func_2690_call = mod.get_global_var('func_2690')
func_2691_call = mutated_mod.get_global_var('func_2691')
call_3686 = relay.TupleGetItem(func_2690_call(), 0)
call_3687 = relay.TupleGetItem(func_2691_call(), 0)
output = relay.Tuple([call_3651,call_3686,])
output2 = relay.Tuple([call_3652,call_3687,])
func_3691 = relay.Function([], output)
mod['func_3691'] = func_3691
mod = relay.transform.InferType()(mod)
output = func_3691()
func_3692 = relay.Function([], output)
mutated_mod['func_3692'] = func_3692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_3712 = relay.TupleGetItem(func_2894_call(), 0)
call_3713 = relay.TupleGetItem(func_2895_call(), 0)
func_2347_call = mod.get_global_var('func_2347')
func_2351_call = mutated_mod.get_global_var('func_2351')
var_3721 = relay.var("var_3721", dtype = "uint16", shape = (1716,))#candidate|3721|(1716,)|var|uint16
const_3722 = relay.const([1,1,1,4,8,-5,2,3,5,1,3,10,-3,-1,6,-1,3,7,-4,1,-8,-1,10,10,-4,-3,5,2,-4,-2,-6,-9,7,-4,8,-2,-4,7,-9,-1,-6,-7,-8,2,-2,4,7,7,-1,4,-6,6,-9,4,-7,-10,-9,-7,6,9,-2,-5,10,3,-1,-3,-3,-7,-3,2,-5,-5,1,-1,1,-6,7,-2,-1,10,-1,-1,3,9,-8,-4,-7,-9,-2,5,4,-6,3,10,2,8,-3,8,-6,10,1,-8,4,7], dtype = "uint64")#candidate|3722|(104,)|const|uint64
call_3720 = relay.TupleGetItem(func_2347_call(relay.reshape(var_3721.astype('uint16'), [12, 11, 13]), relay.reshape(var_3721.astype('uint16'), [12, 11, 13]), relay.reshape(const_3722.astype('uint64'), [104,]), ), 1)
call_3723 = relay.TupleGetItem(func_2351_call(relay.reshape(var_3721.astype('uint16'), [12, 11, 13]), relay.reshape(var_3721.astype('uint16'), [12, 11, 13]), relay.reshape(const_3722.astype('uint64'), [104,]), ), 1)
func_3691_call = mod.get_global_var('func_3691')
func_3692_call = mutated_mod.get_global_var('func_3692')
call_3728 = relay.TupleGetItem(func_3691_call(), 0)
call_3729 = relay.TupleGetItem(func_3692_call(), 0)
func_2690_call = mod.get_global_var('func_2690')
func_2691_call = mutated_mod.get_global_var('func_2691')
call_3732 = relay.TupleGetItem(func_2690_call(), 0)
call_3733 = relay.TupleGetItem(func_2691_call(), 0)
func_1240_call = mod.get_global_var('func_1240')
func_1243_call = mutated_mod.get_global_var('func_1243')
const_3735 = relay.const(-8, dtype = "int32")#candidate|3735|()|const|int32
var_3736 = relay.var("var_3736", dtype = "int32", shape = (125,))#candidate|3736|(125,)|var|int32
call_3734 = func_1240_call(relay.reshape(const_3735.astype('int32'), []), relay.reshape(var_3736.astype('int32'), [5, 5, 5]), )
call_3737 = func_1240_call(relay.reshape(const_3735.astype('int32'), []), relay.reshape(var_3736.astype('int32'), [5, 5, 5]), )
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_3744 = relay.TupleGetItem(func_1979_call(), 0)
call_3745 = relay.TupleGetItem(func_1980_call(), 0)
func_207_call = mod.get_global_var('func_207')
func_209_call = mutated_mod.get_global_var('func_209')
call_3750 = relay.TupleGetItem(func_207_call(), 1)
call_3751 = relay.TupleGetItem(func_209_call(), 1)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_3753 = func_180_call()
call_3754 = func_180_call()
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_3767 = relay.TupleGetItem(func_2639_call(), 0)
call_3768 = relay.TupleGetItem(func_2640_call(), 0)
output = relay.Tuple([call_3712,call_3720,var_3721,const_3722,call_3728,call_3732,call_3734,const_3735,var_3736,call_3744,call_3750,call_3753,call_3767,])
output2 = relay.Tuple([call_3713,call_3723,var_3721,const_3722,call_3729,call_3733,call_3737,const_3735,var_3736,call_3745,call_3751,call_3754,call_3768,])
func_3770 = relay.Function([var_3721,var_3736,], output)
mod['func_3770'] = func_3770
mod = relay.transform.InferType()(mod)
mutated_mod['func_3770'] = func_3770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3770_call = mutated_mod.get_global_var('func_3770')
var_3772 = relay.var("var_3772", dtype = "uint16", shape = (1716,))#candidate|3772|(1716,)|var|uint16
var_3773 = relay.var("var_3773", dtype = "int32", shape = (125,))#candidate|3773|(125,)|var|int32
call_3771 = func_3770_call(var_3772,var_3773,)
output = call_3771
func_3774 = relay.Function([var_3772,var_3773,], output)
mutated_mod['func_3774'] = func_3774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3197_call = mod.get_global_var('func_3197')
func_3199_call = mutated_mod.get_global_var('func_3199')
call_3776 = relay.TupleGetItem(func_3197_call(), 0)
call_3777 = relay.TupleGetItem(func_3199_call(), 0)
output = call_3776
output2 = call_3777
func_3778 = relay.Function([], output)
mod['func_3778'] = func_3778
mod = relay.transform.InferType()(mod)
mutated_mod['func_3778'] = func_3778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3778_call = mutated_mod.get_global_var('func_3778')
call_3779 = func_3778_call()
output = call_3779
func_3780 = relay.Function([], output)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3798 = relay.var("var_3798", dtype = "float64", shape = ())#candidate|3798|()|var|float64
var_3799 = relay.var("var_3799", dtype = "float64", shape = (11, 2, 16))#candidate|3799|(11, 2, 16)|var|float64
bop_3800 = relay.mod(var_3798.astype('float64'), var_3799.astype('float64')) # shape=(11, 2, 16)
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_3810 = relay.TupleGetItem(func_240_call(), 0)
call_3811 = relay.TupleGetItem(func_241_call(), 0)
func_3102_call = mod.get_global_var('func_3102')
func_3105_call = mutated_mod.get_global_var('func_3105')
call_3814 = relay.TupleGetItem(func_3102_call(relay.reshape(call_3810.astype('float32'), [14, 12, 11])), 1)
call_3815 = relay.TupleGetItem(func_3105_call(relay.reshape(call_3810.astype('float32'), [14, 12, 11])), 1)
func_2482_call = mod.get_global_var('func_2482')
func_2484_call = mutated_mod.get_global_var('func_2484')
call_3817 = func_2482_call()
call_3818 = func_2482_call()
func_3691_call = mod.get_global_var('func_3691')
func_3692_call = mutated_mod.get_global_var('func_3692')
call_3841 = relay.TupleGetItem(func_3691_call(), 1)
call_3842 = relay.TupleGetItem(func_3692_call(), 1)
output = relay.Tuple([bop_3800,call_3810,call_3814,call_3817,call_3841,])
output2 = relay.Tuple([bop_3800,call_3811,call_3815,call_3818,call_3842,])
func_3852 = relay.Function([var_3798,var_3799,], output)
mod['func_3852'] = func_3852
mod = relay.transform.InferType()(mod)
mutated_mod['func_3852'] = func_3852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3852_call = mutated_mod.get_global_var('func_3852')
var_3854 = relay.var("var_3854", dtype = "float64", shape = ())#candidate|3854|()|var|float64
var_3855 = relay.var("var_3855", dtype = "float64", shape = (11, 2, 16))#candidate|3855|(11, 2, 16)|var|float64
call_3853 = func_3852_call(var_3854,var_3855,)
output = call_3853
func_3856 = relay.Function([var_3854,var_3855,], output)
mutated_mod['func_3856'] = func_3856
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3869 = relay.const([[[-8.798875,1.688488,4.640180,-0.683760,-2.814022,2.409071,-7.036163,-9.423402,7.289250,1.812102,6.360565,-8.846960],[-2.449086,-8.273314,0.108333,-8.179767,-8.131529,0.715667,8.822258,-5.218675,2.075275,6.050368,-0.253241,-3.165108],[-5.662768,7.715866,-4.604515,-4.060882,2.363704,6.064513,-2.703588,-6.254278,-8.773250,-7.362707,-7.996396,9.670568],[-3.126110,3.926384,-5.542076,-5.897481,2.809122,-4.029140,-9.961636,-7.728495,9.562427,-3.365265,-6.271710,-0.049928],[-0.937260,-1.567350,-0.747889,2.041647,-6.333677,7.751072,-6.624377,8.726813,6.755423,9.050391,-2.328183,4.473453]]], dtype = "float32")#candidate|3869|(1, 5, 12)|const|float32
uop_3870 = relay.cos(const_3869.astype('float32')) # shape=(1, 5, 12)
output = relay.Tuple([uop_3870,])
output2 = relay.Tuple([uop_3870,])
func_3882 = relay.Function([], output)
mod['func_3882'] = func_3882
mod = relay.transform.InferType()(mod)
mutated_mod['func_3882'] = func_3882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3882_call = mutated_mod.get_global_var('func_3882')
call_3883 = func_3882_call()
output = call_3883
func_3884 = relay.Function([], output)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_3902 = relay.TupleGetItem(func_2193_call(), 0)
call_3903 = relay.TupleGetItem(func_2194_call(), 0)
func_2690_call = mod.get_global_var('func_2690')
func_2691_call = mutated_mod.get_global_var('func_2691')
call_3917 = relay.TupleGetItem(func_2690_call(), 0)
call_3918 = relay.TupleGetItem(func_2691_call(), 0)
func_2466_call = mod.get_global_var('func_2466')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_3930 = relay.TupleGetItem(func_2466_call(), 0)
call_3931 = relay.TupleGetItem(func_2467_call(), 0)
func_3041_call = mod.get_global_var('func_3041')
func_3042_call = mutated_mod.get_global_var('func_3042')
call_3939 = func_3041_call()
call_3940 = func_3041_call()
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_3941 = func_437_call()
call_3942 = func_437_call()
output = relay.Tuple([call_3902,call_3917,call_3930,call_3939,call_3941,])
output2 = relay.Tuple([call_3903,call_3918,call_3931,call_3940,call_3942,])
func_3988 = relay.Function([], output)
mod['func_3988'] = func_3988
mod = relay.transform.InferType()(mod)
output = func_3988()
func_3989 = relay.Function([], output)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_4017 = relay.TupleGetItem(func_240_call(), 0)
call_4018 = relay.TupleGetItem(func_241_call(), 0)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_4049 = relay.TupleGetItem(func_2894_call(), 0)
call_4050 = relay.TupleGetItem(func_2895_call(), 0)
func_1536_call = mod.get_global_var('func_1536')
func_1538_call = mutated_mod.get_global_var('func_1538')
const_4072 = relay.const([10,9,2,-8,10,-2,-9,-9,-7,-9,-2,-7,9,8,-4,9,-10,5,-10,6,3,3,6,-9,8,10,-3,4,-7,-5,3,5,2,-5,5,4,-1,1,8,10,6,-8,9,2,-4,8,-10,-3,5,7,-9,-9,10,10,10,6,2,-6,3,10,6,7,1,2,-5,-7,2,7,-7,-1,-8,2,10,2,9,-3,8,-3,-9,6,-4,10,-10,-9,5,4,7,-3,8,-10,-7,-4,-2,-5,-3,-5,-3,-6,-4,-2,5,2,5,-8], dtype = "uint64")#candidate|4072|(104,)|const|uint64
call_4071 = relay.TupleGetItem(func_1536_call(relay.reshape(const_4072.astype('uint64'), [104,])), 2)
call_4073 = relay.TupleGetItem(func_1538_call(relay.reshape(const_4072.astype('uint64'), [104,])), 2)
output = relay.Tuple([call_4017,call_4049,call_4071,const_4072,])
output2 = relay.Tuple([call_4018,call_4050,call_4073,const_4072,])
func_4075 = relay.Function([], output)
mod['func_4075'] = func_4075
mod = relay.transform.InferType()(mod)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mutated_mod.get_global_var('func_4075')
call_4076 = func_4075_call()
output = call_4076
func_4077 = relay.Function([], output)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_4111 = relay.TupleGetItem(func_1310_call(), 0)
call_4112 = relay.TupleGetItem(func_1312_call(), 0)
output = call_4111
output2 = call_4112
func_4113 = relay.Function([], output)
mod['func_4113'] = func_4113
mod = relay.transform.InferType()(mod)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4114 = func_4113_call()
output = call_4114
func_4115 = relay.Function([], output)
mutated_mod['func_4115'] = func_4115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3493_call = mod.get_global_var('func_3493')
func_3494_call = mutated_mod.get_global_var('func_3494')
call_4186 = relay.TupleGetItem(func_3493_call(), 0)
call_4187 = relay.TupleGetItem(func_3494_call(), 0)
func_1536_call = mod.get_global_var('func_1536')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_4190 = relay.TupleGetItem(func_1536_call(relay.reshape(call_4186.astype('uint64'), [104,])), 0)
call_4191 = relay.TupleGetItem(func_1538_call(relay.reshape(call_4186.astype('uint64'), [104,])), 0)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_4197 = relay.TupleGetItem(func_828_call(), 0)
call_4198 = relay.TupleGetItem(func_830_call(), 0)
func_2363_call = mod.get_global_var('func_2363')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_4202 = relay.TupleGetItem(func_2363_call(), 0)
call_4203 = relay.TupleGetItem(func_2364_call(), 0)
output = relay.Tuple([call_4186,call_4190,call_4197,call_4202,])
output2 = relay.Tuple([call_4187,call_4191,call_4198,call_4203,])
func_4213 = relay.Function([], output)
mod['func_4213'] = func_4213
mod = relay.transform.InferType()(mod)
mutated_mod['func_4213'] = func_4213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4213_call = mutated_mod.get_global_var('func_4213')
call_4214 = func_4213_call()
output = call_4214
func_4215 = relay.Function([], output)
mutated_mod['func_4215'] = func_4215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mod.get_global_var('func_3691')
func_3692_call = mutated_mod.get_global_var('func_3692')
call_4224 = relay.TupleGetItem(func_3691_call(), 0)
call_4225 = relay.TupleGetItem(func_3692_call(), 0)
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_4229 = func_599_call()
call_4230 = func_599_call()
output = relay.Tuple([call_4224,call_4229,])
output2 = relay.Tuple([call_4225,call_4230,])
func_4248 = relay.Function([], output)
mod['func_4248'] = func_4248
mod = relay.transform.InferType()(mod)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mutated_mod.get_global_var('func_4248')
call_4249 = func_4248_call()
output = call_4249
func_4250 = relay.Function([], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2599_call = mod.get_global_var('func_2599')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_4265 = func_2599_call()
call_4266 = func_2599_call()
output = relay.Tuple([call_4265,])
output2 = relay.Tuple([call_4266,])
func_4271 = relay.Function([], output)
mod['func_4271'] = func_4271
mod = relay.transform.InferType()(mod)
output = func_4271()
func_4272 = relay.Function([], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_4287 = relay.TupleGetItem(func_3988_call(), 1)
call_4288 = relay.TupleGetItem(func_3989_call(), 1)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_4298 = func_437_call()
call_4299 = func_437_call()
output = relay.Tuple([call_4287,call_4298,])
output2 = relay.Tuple([call_4288,call_4299,])
func_4303 = relay.Function([], output)
mod['func_4303'] = func_4303
mod = relay.transform.InferType()(mod)
output = func_4303()
func_4304 = relay.Function([], output)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1148_call = mod.get_global_var('func_1148')
func_1150_call = mutated_mod.get_global_var('func_1150')
call_4416 = relay.TupleGetItem(func_1148_call(), 2)
call_4417 = relay.TupleGetItem(func_1150_call(), 2)
output = call_4416
output2 = call_4417
func_4421 = relay.Function([], output)
mod['func_4421'] = func_4421
mod = relay.transform.InferType()(mod)
output = func_4421()
func_4422 = relay.Function([], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_4475 = relay.TupleGetItem(func_2639_call(), 3)
call_4476 = relay.TupleGetItem(func_2640_call(), 3)
func_3770_call = mod.get_global_var('func_3770')
func_3774_call = mutated_mod.get_global_var('func_3774')
const_4484 = relay.const([8,-8,-2,3,1,-5,7,-7,-8,4,-4,-9,-5,-3,5,-6,5,1,5,1,5,10,-8,5,-4,9,8,-4,10,-5,-5,-9,5,8,-3,-5,-6,10,-4,9,6,7,-9,-10,8,5,8,-2,3,-2,-8,5,-4,8,-2,7,9,5,-6,-7,2,-8,6,-5,9,-5,6,10,7,-1,7,8,-3,3,7,4,2,2,-1,6,6,-6,3,6,8,-8,5,-2,-10,8,5,-9,-3,4,9,3,-3,-10,8,4,-1,-10,2,-7,-9,2,-8,-2,3,6,-7,-7,-9,-5,-3,3,-5,2,-9,10,7,-1,-4,-7,-8,-6,3,5,2,-1,1,1,-10,-3,-6,-4,-6,8,-7,-4,-2,-2,-8,7,7,5,3,-5,-10,10,3,9,-9,7,5,-3,-6,2,-1,3,6,-7,-5,1,-1,1,5,3,-8,1,4,8,8,3,8,9,-6,-4,9,6,6,-3,-9,8,9,-9,-5,2,-9,-3,2,5,-10,-1,-4,-8,6,5,10,-3,3,1,-2,-1,9,-10,-8,1,3,7,-10,-2,-8,4,-8,-4,-10,9,7,5,-2,1,1,7,3,-5,-9,-1,-4,3,-1,-5,4,-5,1,-9,8,-4,1,2,5,10,4,1,4,2,-2,6,-8,-9,4,2,7,8,-9,-5,-10,8,-4,-4,4,-4,2,2,-5,-8,8,-9,-8,-6,-9,-9,8,5,-8,-2,6,9,-10,-7,-2,1,5,-9,-7,9,-10,7,8,1,2,8,-1,-3,8,3,-4,-3,4,-3,-9,-9,3,-6,-9,-6,-2,8,-1,-4,2,10,4,9,5,1,6,-4,7,9,9,-8,2,-4,-8,4,8,7,7,-1,8,10,-5,1,4,-9,-7,-4,2,2,8,1,-9,-9,-4,3,-6,6,-5,3,-8,2,9,2,4,3,-9,-10,-3,-7,1,9,-2,7,1,-7,-4,6,-5,-5,4,2,2,-4,-1,2,-2,9,3,1,8,6,-9,5,1,-4,10,10,8,-9,-6,10,1,4,-5,-9,-5,5,7,7,-2,3,-8,5,7,-4,-4,-1,-6,-8,-1,6,-2,-7,2,7,6,-5,-2,-10,-6,-2,-1,-5,9,9,-10,4,-7,1,7,-3,-9,-7,1,-10,2,-7,-4,-1,4,10,5,6,-7,1,-8,-8,5,7,-3,-2,6,9,10,10,-1,9,-8,-10,-3,-10,-7,7,-4,-9,9,3,1,-5,1,8,-8,10,2,-3,-10,6,-3,-9,-5,-5,10,-10,-9,5,-2,2,9,-8,-1,-6,3,-8,6,3,-6,8,6,8,-4,-3,-7,6,8,-7,-4,10,6,4,-5,-3,-5,8,8,-5,10,-9,-7,-1,1,-6,10,6,5,-7,-9,1,1,5,5,4,-2,-2,-9,5,-10,9,-10,9,-5,6,-9,7,-8,1,-6,9,-9,-8,4,2,-8,-8,-6,-2,3,4,-6,-2,-7,8,-2,-1,9,-1,7,-9,-6,1,-5,-4,2,-10,1,3,-7,-9,-9,1,-2,-3,8,3,-10,-6,9,3,8,-2,-5,6,5,2,10,3,8,2,-7,-9,-9,-2,-7,-2,8,5,-6,-7,10,6,-5,-1,-5,8,-8,-9,-6,-5,-5,9,10,7,8,-8,5,6,5,2,2,1,9,-7,10,7,1,-1,1,-7,-3,-5,3,8,-3,-9,10,-5,2,5,5,9,7,7,7,-7,2,-9,-7,4,-7,5,5,-8,1,10,5,-2,-1,-2,-4,1,3,1,-6,10,-10,-3,-4,-3,-4,8,6,2,10,8,-5,10,-8,7,-7,-7,3,-1,1,-9,9,-4,1,2,2,-3,-8,4,-3,-10,-10,-7,-7,10,-4,-4,-8,8,6,9,2,2,7,6,9,-10,4,-1,-8,10,-10,5,-3,-7,6,7,-10,-8,7,4,-1,-4,-4,6,6,3,10,-5,-2,-4,-8,6,1,4,-7,3,-5,-3,-4,10,-4,-7,1,-9,-4,-3,5,-10,-5,-4,5,2,-6,8,3,1,8,-4,-10,4,-8,-6,-6,9,1,4,1,-5,-1,7,10,1,-6,9,-10,9,9,10,2,-7,-1,10,-8,-8,-9,-3,5,-10,-9,-6,-1,-8,10,6,-7,4,3,-1,10,-10,-6,-7,6,-1,-6,5,-2,10,9,4,8,-4,-4,3,-6,-3,5,5,-9,6,3,-7,-2,-9,-2,9,-10,4,-9,10,-10,-8,-4,6,-9,-1,4,9,4,9,10,-7,-10,-6,7,-4,6,-2,5,4,-2,8,10,4,-5,1,10,6,8,-10,-6,2,6,-4,3,7,-10,1,-2,7,7,-5,-3,-8,-2,6,1,-4,1,10,-4,9,-3,8,-5,-5,1,9,2,7,-6,-4,2,-5,-5,-8,5,-5,-8,-4,-7,7,-10,4,-6,7,-5,-8,-8,1,-10,-4,-6,3,-1,-9,7,-6,4,10,10,-9,-8,-3,2,2,3,-8,5,3,10,2,-9,6,-8,-1,-2,5,-9,-6,4,-6,-4,-6,-6,2,-2,-5,5,-2,6,3,-8,-7,9,-10,3,-10,10,7,4,4,-8,-6,-10,5,-6,5,-9,10,10,-2,6,2,-9,-2,10,10,-6,-10,7,-2,6,-6,2,6,6,6,2,-7,-9,-4,6,-7,-10,-7,-4,9,-10,8,1,-3,2,10,-9,4,6,7,2,4,-2,-9,2,6,-5,4,-8,6,8,5,2,5,9,-10,9,3,5,-8,1,8,8,-3,-1,-8,4,-8,5,4,9,-5,6,-10,9,7,-1,8,-9,8,2,10,-1,2,-4,-8,-10,1,-10,-8,-8,8,2,-9,-7,-2,2,4,-2,9,-5,-1,1,-3,-5,-9,8,10,-3,10,5,8,-5,3,1,5,1,2,-10,-3,8,5,9,-3,-4,10,-8,-1,5,2,7,3,-3,-2,-2,7,-6,3,10,6,2,7,6,-2,-1,-8,-2,-8,8,10,-4,-9,9,-4,1,-5,7,2,10,-6,-6,9,5,-3,-7,2,-9,-2,4,-1,7,7,-8,9,1,-8,10,-7,7,8,4,-7,-3,-5,-8,-4,-10,9,8,-7,5,-7,3,10,5,-5,-1,4,-5,3,-5,6,-5,-5,-5,3,-8,-5,-6,2,-6,-2,3,-3,7,10,2,-7,-3,4,-5,-9,7,3,-10,5,-3,-5,7,3,-3,-7,-10,-5,-9,4,4,-6,-9,4,-5,7,10,-4,-9,10,-1,8,3,6,-2,5,-4,-7,-1,4,2,6,5,-8,7,8,-6,9,10,1,-8,8,-9,-6,-5,-8,4,-10,4,-3,5,8,8,1,5,-1,-6,4,3,-8,2,7,10,5,5,-2,7,-2,-9,4,2,-4,4,6,10,8,-9,-8,-4,10,10,10,4,-4,-4,7,-4,6,1,-7,-7,-4,10,7,4,-3,-1,-2,4,10,-4,4,9,8,-6,-4,-10,1,-2,-5,-8,-1,-1,6,8,-1,-6,-4,7,-9,-7,-5,-1,8,-5,-10,-9,-1,-5,-6,-6,7,2,-9,5,9,10,10,10,-7,-1,9,-9,10,1,6,3,-1,5,3,7,4,5,1,2,-4,6,-2,-6,-6,10,-4,5,7,5,-2,1,-10,-9,-6,10,1,3,-10,8,6,7,-1,5,-4,10,-3,-1,-9,-7,-9,-3,2,6,5,-7,1,10,6,-2,8,-8,2,5,8,-6,-8,1,-5,1,10,2,3,3,-7,-2,6,-7,9,-10,5,-6,-5,4,-4,1,-4,5,-4,9,-5,8,2,8,7,-8,1,7,1,-7,8,-8,10,-2,-4,-6,3,-8,9,-4,-3,-1,6,-2,9,1,9,2,3,-4,4,-3,5,-1,9,-3,10,9,-1,-5,2,8,3,1,-3,-2,6,-5,9,5,5,-10,-9,-3,2,3,-3,-7,2,-2,-4,3,10,-1,5,-4,-4,-5,5,-5,5,-3,8,5,-8,6,-1,-2,-6,9,8,2,-10,-7,7,2,-10,2,-6,10,6,-8,5,-10,-4,4,4,6,-5,9,-2,5,9,-2,4,9,-7,9,-6,7,-9,1,-9,7,9,7,10,-3,-9,2,-8,7,7,-1,6,2,-9,1,2,-3,6,2,1,-5,-2,-8,-9,8,-1,-8,5,2,-6,1,3,-7,-3,6,-4,-6,9,7,-9,3,-3,6,-2,-1,3,6,-7,6,-2,4,3,-2,-6,-10,5,-4,4,-6,8,5,-1,-7,4,8,6,-1,6,1,2,6,5,-6,9,5,9,-1,3,-9,-3,-2,-1,-10,-6,-6,4,-6,3,6,-3,-1,5,3,2,-6,8,-4,2,-3,-6,-7,-2,-7,-4,-9,8,-9,2,2,1,8,5,-8,7,5,10,-4,-4,1,8,7,10,8,8,-7,-7,10,-9,10,10,9,-7,4,6,3,5,-9,-8,6,-6,-8,-8,-6,7,-2,1,-6,-4,4,-6,-3,7,-6,8,2,7,-10,8,-3,-4,-1,6,-5,-10,2,6,-8,7,7,-8], dtype = "uint16")#candidate|4484|(1716,)|const|uint16
const_4485 = relay.const([8,-1,7,-9,-8,-6,-10,5,-2,5,-2,8,-7,-7,5,-9,1,-7,-3,-9,-9,-5,10,8,-7,-9,-5,10,-3,6,-7,10,4,-6,8,-10,-4,7,-5,5,7,2,-2,-6,9,4,-7,-4,4,10,7,10,-4,-5,-1,10,-4,-1,-5,3,7,10,2,4,3,-9,-3,10,-5,6,-5,5,7,8,-3,5,-8,3,-8,7,3,2,4,-3,6,6,-6,-5,-7,4,-3,7,6,3,-8,-5,-6,-9,10,-1,3,-10,-6,-1,-7,2,-6,3,-10,-7,-7,-1,1,3,-4,-8,2,6,-2,-3,-2,10,4,1,2], dtype = "int32")#candidate|4485|(125,)|const|int32
call_4483 = relay.TupleGetItem(func_3770_call(relay.reshape(const_4484.astype('uint16'), [1716,]), relay.reshape(const_4485.astype('int32'), [125,]), ), 5)
call_4486 = relay.TupleGetItem(func_3774_call(relay.reshape(const_4484.astype('uint16'), [1716,]), relay.reshape(const_4485.astype('int32'), [125,]), ), 5)
output = relay.Tuple([call_4475,call_4483,const_4484,const_4485,])
output2 = relay.Tuple([call_4476,call_4486,const_4484,const_4485,])
func_4487 = relay.Function([], output)
mod['func_4487'] = func_4487
mod = relay.transform.InferType()(mod)
output = func_4487()
func_4488 = relay.Function([], output)
mutated_mod['func_4488'] = func_4488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_4489 = relay.TupleGetItem(func_2193_call(), 0)
call_4490 = relay.TupleGetItem(func_2194_call(), 0)
func_1536_call = mod.get_global_var('func_1536')
func_1538_call = mutated_mod.get_global_var('func_1538')
var_4493 = relay.var("var_4493", dtype = "uint64", shape = (26, 4))#candidate|4493|(26, 4)|var|uint64
call_4492 = relay.TupleGetItem(func_1536_call(relay.reshape(var_4493.astype('uint64'), [104,])), 0)
call_4494 = relay.TupleGetItem(func_1538_call(relay.reshape(var_4493.astype('uint64'), [104,])), 0)
uop_4495 = relay.cosh(var_4493.astype('float32')) # shape=(26, 4)
output = relay.Tuple([call_4489,call_4492,uop_4495,])
output2 = relay.Tuple([call_4490,call_4494,uop_4495,])
func_4502 = relay.Function([var_4493,], output)
mod['func_4502'] = func_4502
mod = relay.transform.InferType()(mod)
mutated_mod['func_4502'] = func_4502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4503 = relay.var("var_4503", dtype = "uint64", shape = (26, 4))#candidate|4503|(26, 4)|var|uint64
func_4502_call = mutated_mod.get_global_var('func_4502')
call_4504 = func_4502_call(var_4503)
output = call_4504
func_4505 = relay.Function([var_4503], output)
mutated_mod['func_4505'] = func_4505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3493_call = mod.get_global_var('func_3493')
func_3494_call = mutated_mod.get_global_var('func_3494')
call_4568 = relay.TupleGetItem(func_3493_call(), 0)
call_4569 = relay.TupleGetItem(func_3494_call(), 0)
func_4421_call = mod.get_global_var('func_4421')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_4582 = func_4421_call()
call_4583 = func_4421_call()
uop_4610 = relay.sinh(call_4568.astype('float64')) # shape=(26, 4)
uop_4612 = relay.sinh(call_4569.astype('float64')) # shape=(26, 4)
output = relay.Tuple([call_4582,uop_4610,])
output2 = relay.Tuple([call_4583,uop_4612,])
func_4613 = relay.Function([], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mutated_mod.get_global_var('func_4613')
call_4614 = func_4613_call()
output = call_4614
func_4615 = relay.Function([], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_999_call = mod.get_global_var('func_999')
func_1001_call = mutated_mod.get_global_var('func_1001')
call_4616 = relay.TupleGetItem(func_999_call(), 0)
call_4617 = relay.TupleGetItem(func_1001_call(), 0)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_4630 = relay.TupleGetItem(func_1979_call(), 0)
call_4631 = relay.TupleGetItem(func_1980_call(), 0)
output = relay.Tuple([call_4616,call_4630,])
output2 = relay.Tuple([call_4617,call_4631,])
func_4634 = relay.Function([], output)
mod['func_4634'] = func_4634
mod = relay.transform.InferType()(mod)
mutated_mod['func_4634'] = func_4634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4634_call = mutated_mod.get_global_var('func_4634')
call_4635 = func_4634_call()
output = call_4635
func_4636 = relay.Function([], output)
mutated_mod['func_4636'] = func_4636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4634_call = mod.get_global_var('func_4634')
func_4636_call = mutated_mod.get_global_var('func_4636')
call_4684 = relay.TupleGetItem(func_4634_call(), 0)
call_4685 = relay.TupleGetItem(func_4636_call(), 0)
const_4694 = relay.const([[[9,-6,-5,-8,7,-7,-6,-5,2,6,6],[10,10,-5,-1,10,-8,-10,-9,5,6,8],[10,4,5,3,-7,-1,6,3,4,-7,2],[-7,-6,8,-4,-6,10,-8,2,-4,-6,-6],[-2,-2,-4,9,8,8,-8,-6,1,-7,-3],[-5,8,-4,6,-7,-10,-5,9,2,-9,1],[-5,10,-2,8,-3,10,4,-6,-5,9,5],[2,9,1,-2,-7,-3,4,5,-9,-5,-2],[3,1,2,-3,-3,10,9,-2,-6,-10,8],[-2,-8,-5,-10,-3,-4,10,2,4,-10,-1],[-8,10,2,4,-3,-4,9,-3,-6,-3,1],[-10,-9,-2,1,-8,4,4,5,9,4,9]],[[5,-2,10,-3,1,4,8,-10,7,7,-5],[1,-8,-10,-6,-6,2,-9,-5,1,-6,5],[1,10,-5,-1,-9,-10,3,-9,-8,-7,5],[1,10,6,-7,9,-8,5,-5,2,9,1],[2,10,-7,10,-6,-1,-7,2,8,3,10],[9,-4,-1,5,-6,4,-8,-4,-2,-3,9],[-10,3,4,-3,-2,2,-5,1,-9,-6,-5],[-5,-5,3,1,-6,-3,-8,5,-1,-4,-4],[-10,-9,-6,-3,9,1,-6,-2,6,-10,6],[-6,-9,-7,4,4,-10,4,-5,-6,4,10],[4,10,7,9,-8,-6,5,-2,9,-4,6],[-5,-2,7,10,9,7,-4,-9,-2,1,4]],[[3,5,-1,-1,7,-9,-6,-7,4,-2,3],[-9,-2,-9,-1,9,8,-6,-2,-5,-2,8],[-3,-6,-10,1,-6,-8,-3,9,10,10,1],[9,2,4,10,-3,8,-1,-8,4,3,10],[8,2,7,-10,-7,-6,2,-4,-4,7,-4],[10,9,6,5,9,-7,-5,-2,-7,-3,9],[-2,10,-8,8,3,6,2,-5,-9,-2,9],[3,2,2,2,3,-2,2,7,-4,9,-6],[3,10,8,-2,-1,10,-4,1,2,4,4],[-6,5,5,9,7,-3,-7,10,9,4,-7],[2,6,1,-9,-5,7,-4,-6,-4,-6,9],[-9,3,-2,-7,-5,6,-2,3,-1,-6,-10]],[[3,-3,8,-3,3,10,1,-10,9,-5,9],[2,-9,-10,-3,3,-6,-2,-6,-5,-10,6],[5,8,-3,10,2,-6,7,6,-4,-6,7],[-7,5,-5,-5,4,7,5,-7,-2,7,10],[3,3,-6,10,-7,10,8,-8,-4,-2,-6],[-1,-4,-2,2,-4,-9,-2,6,-2,-8,-6],[8,9,6,-5,10,5,-8,4,10,-4,-5],[-6,10,-3,-10,7,2,-2,-9,9,2,3],[3,-1,-5,2,3,2,-5,2,-5,5,-4],[4,-3,-3,10,-4,-1,-6,10,-10,-5,4],[9,-7,-6,-4,9,-4,-2,5,10,7,-4],[2,10,-7,-4,6,9,-10,6,-5,-1,-5]],[[-5,6,-2,9,-5,-10,-10,-1,7,10,1],[-3,3,1,-7,10,1,-7,1,8,4,-1],[4,1,-9,7,2,-8,8,-2,10,-6,7],[3,-7,4,-9,-8,-8,4,9,-1,1,-7],[-1,-5,8,-1,3,5,-6,-3,-5,-8,9],[4,3,-10,-5,5,-5,-8,-10,-10,-4,6],[5,5,-2,4,-4,1,2,-4,-8,2,1],[-6,10,5,2,-3,3,-6,-2,-6,9,-8],[7,-7,-2,8,-10,4,4,-3,3,5,8],[10,-2,-8,2,-1,9,5,8,5,-10,9],[2,-2,9,-10,-9,-7,-9,-3,1,1,3],[-1,9,-10,-7,-5,-2,-4,2,-8,-8,-3]],[[9,7,9,2,-2,-4,1,2,-4,8,1],[7,-10,6,9,3,3,-10,8,6,-6,-4],[6,-8,-2,6,-10,7,-7,8,-10,6,4],[8,9,-3,4,-4,3,3,-10,-9,2,-2],[10,-7,-4,-6,8,-10,9,3,-1,6,-1],[-1,7,-5,7,2,-1,8,1,-2,9,7],[7,3,-9,4,-9,-4,5,9,-9,7,-9],[3,-10,-8,-9,9,7,4,3,7,-2,-8],[10,-9,6,9,3,-5,9,4,-10,-3,-4],[-4,-6,-7,-2,5,2,-5,2,-4,-5,5],[-4,-3,-1,3,7,2,-8,2,-4,6,-3],[-4,4,-7,9,-5,3,9,-6,9,10,7]],[[-10,10,5,2,8,10,-6,-8,-9,9,-3],[-5,-1,-4,-4,10,7,-10,9,-10,-7,-6],[-5,9,-9,7,-9,3,-5,-2,8,-4,4],[-7,3,-10,8,-3,-2,9,3,5,6,-1],[-5,-1,4,9,-7,-3,-4,3,8,-4,-10],[-2,-7,-4,-5,4,-5,4,-10,9,9,-10],[-2,-2,-2,-9,-9,5,7,9,-2,3,-9],[9,8,-7,-8,10,3,-2,-10,5,-3,-7],[2,2,10,3,2,9,10,9,-4,-9,2],[-9,-4,2,-9,-8,7,-2,7,6,-9,-1],[2,8,8,-2,1,-5,-8,-2,7,5,-10],[-1,-6,6,2,4,-7,10,10,-8,-5,-5]],[[1,1,7,-2,-7,-4,9,-8,-7,-7,-3],[-2,10,5,4,-10,9,-4,9,3,-8,7],[-7,8,-7,10,1,4,-3,-9,-3,5,10],[8,5,3,10,-9,-7,3,-4,-6,7,8],[-3,1,6,7,3,-5,-9,-10,-2,-6,-7],[-5,-1,6,2,-10,-1,-10,6,2,5,8],[8,10,8,-9,4,8,6,7,-9,3,-7],[8,-10,-3,-10,6,-8,7,4,-4,1,-8],[-7,-5,2,-8,-10,-2,-7,-5,5,-4,-2],[2,-7,6,8,5,9,-2,7,-7,4,-7],[-6,9,-6,6,-2,-3,3,-6,-5,4,10],[-2,6,4,-1,-3,3,-6,-5,-8,1,7]],[[-3,4,-6,10,6,3,-3,4,-7,-9,-10],[-1,9,1,1,3,3,-3,-6,4,-7,6],[5,-4,-8,3,1,-3,3,2,4,-1,-3],[-5,-9,4,8,-6,9,-5,4,-5,2,-7],[5,-1,7,7,6,2,5,-1,-6,-7,-8],[2,-10,9,8,-1,5,4,-3,3,-7,5],[1,-4,-1,-1,-3,1,1,-7,5,-2,9],[-4,8,-2,-4,-6,10,-9,-1,2,-3,-7],[-4,-5,-4,1,4,-6,5,-7,4,4,-3],[9,-5,-8,-5,-5,1,7,-7,-9,-4,-3],[-4,7,-6,-5,4,-3,-6,-7,9,-9,-2],[-8,-5,-7,-3,-9,3,-6,-7,-5,7,-9]],[[-2,2,-8,2,9,8,6,-2,-8,-7,-7],[7,7,4,-4,5,-9,7,-1,-7,10,4],[-3,-6,-9,9,9,-9,-9,-8,-6,-1,3],[-10,9,-3,-5,7,-5,-6,-8,-10,2,-3],[2,8,-6,1,-6,-4,-10,-6,-5,-10,7],[-5,-4,2,-4,-9,-6,-2,-5,-4,6,8],[8,-3,-8,-5,1,-8,7,-1,4,-7,6],[-7,-4,3,-2,8,-6,4,3,9,-1,1],[8,9,3,-6,-7,1,3,-3,-5,-4,-3],[-7,8,-4,-4,9,6,-5,5,-9,4,8],[-4,-4,-4,-1,9,-5,5,-7,2,-2,5],[-9,-1,-7,-6,4,-5,-10,9,6,-1,-6]],[[-10,-5,1,3,5,10,-10,-10,-1,-8,-5],[5,-2,-1,-4,9,-3,6,-10,-2,3,-2],[1,3,6,-6,2,2,-4,6,3,-2,8],[10,9,6,6,-8,7,8,-3,-4,-8,8],[3,-10,9,-3,-9,8,7,-3,1,-1,-1],[2,3,-8,2,3,-1,-2,-4,-9,7,3],[1,-8,-5,1,-6,-1,-8,-10,-6,8,5],[-10,-4,-1,8,5,-10,-2,-10,3,7,-6],[3,-7,-8,-8,4,9,-9,-9,6,8,6],[3,4,-5,9,8,-7,3,-2,8,1,6],[-10,6,-8,4,-6,-4,-2,-3,-10,3,6],[3,-6,-5,-8,6,-5,-6,9,-9,-4,7]],[[-1,6,-1,-9,4,-6,10,-7,2,8,8],[-10,-3,-3,-3,-4,-9,6,-9,7,-4,4],[-6,-6,-6,4,8,10,5,10,-4,-2,5],[2,-10,7,-4,2,4,8,2,-4,8,-4],[9,-2,-10,-5,10,-9,10,8,9,-4,6],[2,4,10,2,-6,10,4,-2,-5,10,-5],[-1,4,3,-2,-10,6,-10,9,-10,3,-4],[-10,-7,1,8,-6,8,-1,-10,9,9,7],[2,3,10,2,2,2,-6,7,-8,-4,-4],[7,-10,-3,4,10,5,-7,-9,1,-2,1],[6,3,10,10,4,6,-4,5,-1,3,8],[3,3,-9,6,5,7,-6,7,10,1,-7]],[[7,4,-9,-5,9,4,-1,6,-4,-1,-9],[7,1,9,-3,1,-8,-9,-2,-4,2,2],[3,-1,9,6,-9,5,-10,3,9,-3,-9],[-4,9,-3,-7,4,-2,-5,-9,10,5,9],[10,-7,8,-7,-6,-9,10,6,8,7,9],[3,-4,5,8,3,5,-6,1,1,6,-2],[3,-4,-10,-1,3,-6,-4,-4,-4,-10,-6],[4,-2,3,-7,4,3,-9,9,1,-3,-8],[-7,-1,9,3,-10,1,4,-9,8,-10,-3],[3,10,-5,10,-10,-6,-9,-2,8,-1,-5],[-2,-5,10,-1,-6,-7,6,-9,-5,-3,-10],[4,7,6,-1,-5,7,-3,-7,2,-7,-2]],[[-10,9,-8,4,7,9,-10,-3,6,-1,-8],[-10,7,10,2,6,1,-7,10,-8,-9,-2],[-4,9,-3,-4,5,7,7,-7,-7,9,10],[10,7,-10,7,-5,-9,10,5,6,-10,-3],[10,4,-4,-9,8,8,-5,2,-2,-2,3],[4,8,7,3,-4,1,2,10,-2,9,4],[8,-8,6,1,6,7,-5,3,-6,3,-3],[-3,-6,-1,-2,-3,-4,-1,2,10,-7,-3],[3,4,-5,5,4,2,2,7,10,-4,-10],[9,-7,2,-7,-8,-3,8,-9,-5,-2,3],[10,-9,7,-9,10,-8,6,-3,-7,3,-3],[-5,5,-7,6,-2,9,9,7,-4,-5,-4]]], dtype = "int32")#candidate|4694|(14, 12, 11)|const|int32
bop_4695 = relay.greater_equal(call_4684.astype('bool'), relay.reshape(const_4694.astype('bool'), relay.shape_of(call_4684))) # shape=(14, 12, 11)
bop_4698 = relay.greater_equal(call_4685.astype('bool'), relay.reshape(const_4694.astype('bool'), relay.shape_of(call_4685))) # shape=(14, 12, 11)
func_1025_call = mod.get_global_var('func_1025')
func_1029_call = mutated_mod.get_global_var('func_1029')
var_4741 = relay.var("var_4741", dtype = "float64", shape = (168,))#candidate|4741|(168,)|var|float64
call_4740 = relay.TupleGetItem(func_1025_call(relay.reshape(var_4741.astype('float64'), [7, 12, 2]), relay.reshape(var_4741.astype('float64'), [7, 12, 2]), ), 1)
call_4742 = relay.TupleGetItem(func_1029_call(relay.reshape(var_4741.astype('float64'), [7, 12, 2]), relay.reshape(var_4741.astype('float64'), [7, 12, 2]), ), 1)
output = relay.Tuple([bop_4695,call_4740,var_4741,])
output2 = relay.Tuple([bop_4698,call_4742,var_4741,])
func_4749 = relay.Function([var_4741,], output)
mod['func_4749'] = func_4749
mod = relay.transform.InferType()(mod)
var_4750 = relay.var("var_4750", dtype = "float64", shape = (168,))#candidate|4750|(168,)|var|float64
output = func_4749(var_4750)
func_4751 = relay.Function([var_4750], output)
mutated_mod['func_4751'] = func_4751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_4763 = func_1742_call()
call_4764 = func_1742_call()
output = relay.Tuple([call_4763,])
output2 = relay.Tuple([call_4764,])
func_4765 = relay.Function([], output)
mod['func_4765'] = func_4765
mod = relay.transform.InferType()(mod)
output = func_4765()
func_4766 = relay.Function([], output)
mutated_mod['func_4766'] = func_4766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2392_call = mod.get_global_var('func_2392')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_4778 = relay.TupleGetItem(func_2392_call(), 0)
call_4779 = relay.TupleGetItem(func_2394_call(), 0)
output = relay.Tuple([call_4778,])
output2 = relay.Tuple([call_4779,])
func_4797 = relay.Function([], output)
mod['func_4797'] = func_4797
mod = relay.transform.InferType()(mod)
mutated_mod['func_4797'] = func_4797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4797_call = mutated_mod.get_global_var('func_4797')
call_4798 = func_4797_call()
output = call_4798
func_4799 = relay.Function([], output)
mutated_mod['func_4799'] = func_4799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4815 = relay.var("var_4815", dtype = "float64", shape = (9, 11, 15))#candidate|4815|(9, 11, 15)|var|float64
uop_4816 = relay.atanh(var_4815.astype('float64')) # shape=(9, 11, 15)
func_2536_call = mod.get_global_var('func_2536')
func_2537_call = mutated_mod.get_global_var('func_2537')
call_4819 = relay.TupleGetItem(func_2536_call(), 1)
call_4820 = relay.TupleGetItem(func_2537_call(), 1)
uop_4827 = relay.asin(uop_4816.astype('float64')) # shape=(9, 11, 15)
output = relay.Tuple([call_4819,uop_4827,])
output2 = relay.Tuple([call_4820,uop_4827,])
func_4832 = relay.Function([var_4815,], output)
mod['func_4832'] = func_4832
mod = relay.transform.InferType()(mod)
var_4833 = relay.var("var_4833", dtype = "float64", shape = (9, 11, 15))#candidate|4833|(9, 11, 15)|var|float64
output = func_4832(var_4833)
func_4834 = relay.Function([var_4833], output)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_999_call = mod.get_global_var('func_999')
func_1001_call = mutated_mod.get_global_var('func_1001')
call_4874 = relay.TupleGetItem(func_999_call(), 0)
call_4875 = relay.TupleGetItem(func_1001_call(), 0)
output = relay.Tuple([call_4874,])
output2 = relay.Tuple([call_4875,])
func_4889 = relay.Function([], output)
mod['func_4889'] = func_4889
mod = relay.transform.InferType()(mod)
mutated_mod['func_4889'] = func_4889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mutated_mod.get_global_var('func_4889')
call_4890 = func_4889_call()
output = call_4890
func_4891 = relay.Function([], output)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mod.get_global_var('func_2690')
func_2691_call = mutated_mod.get_global_var('func_2691')
call_4892 = relay.TupleGetItem(func_2690_call(), 1)
call_4893 = relay.TupleGetItem(func_2691_call(), 1)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_4894 = relay.TupleGetItem(func_3988_call(), 4)
call_4895 = relay.TupleGetItem(func_3989_call(), 4)
func_2392_call = mod.get_global_var('func_2392')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_4896 = relay.TupleGetItem(func_2392_call(), 0)
call_4897 = relay.TupleGetItem(func_2394_call(), 0)
func_4797_call = mod.get_global_var('func_4797')
func_4799_call = mutated_mod.get_global_var('func_4799')
call_4902 = relay.TupleGetItem(func_4797_call(), 0)
call_4903 = relay.TupleGetItem(func_4799_call(), 0)
func_4889_call = mod.get_global_var('func_4889')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_4914 = relay.TupleGetItem(func_4889_call(), 0)
call_4915 = relay.TupleGetItem(func_4891_call(), 0)
func_1445_call = mod.get_global_var('func_1445')
func_1447_call = mutated_mod.get_global_var('func_1447')
call_4917 = func_1445_call()
call_4918 = func_1445_call()
func_599_call = mod.get_global_var('func_599')
func_601_call = mutated_mod.get_global_var('func_601')
call_4921 = func_599_call()
call_4922 = func_599_call()
func_4749_call = mod.get_global_var('func_4749')
func_4751_call = mutated_mod.get_global_var('func_4751')
var_4924 = relay.var("var_4924", dtype = "float64", shape = (168,))#candidate|4924|(168,)|var|float64
call_4923 = relay.TupleGetItem(func_4749_call(relay.reshape(var_4924.astype('float64'), [168,])), 2)
call_4925 = relay.TupleGetItem(func_4751_call(relay.reshape(var_4924.astype('float64'), [168,])), 2)
output = relay.Tuple([call_4892,call_4894,call_4896,call_4902,call_4914,call_4917,call_4921,call_4923,var_4924,])
output2 = relay.Tuple([call_4893,call_4895,call_4897,call_4903,call_4915,call_4918,call_4922,call_4925,var_4924,])
func_4933 = relay.Function([var_4924,], output)
mod['func_4933'] = func_4933
mod = relay.transform.InferType()(mod)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4934 = relay.var("var_4934", dtype = "float64", shape = (168,))#candidate|4934|(168,)|var|float64
func_4933_call = mutated_mod.get_global_var('func_4933')
call_4935 = func_4933_call(var_4934)
output = call_4935
func_4936 = relay.Function([var_4934], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3157_call = mod.get_global_var('func_3157')
func_3159_call = mutated_mod.get_global_var('func_3159')
call_4957 = func_3157_call()
call_4958 = func_3157_call()
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_4959 = relay.TupleGetItem(func_942_call(), 3)
call_4960 = relay.TupleGetItem(func_943_call(), 3)
func_4749_call = mod.get_global_var('func_4749')
func_4751_call = mutated_mod.get_global_var('func_4751')
const_4971 = relay.const([-9.335157,8.689263,-2.029841,-8.172640,-8.872643,8.096014,-9.815065,-5.040261,8.681650,0.320945,8.251879,-8.448484,0.955340,0.475962,-6.620185,7.381679,9.481800,-1.937540,7.784882,4.187474,4.360241,-2.044467,-0.094083,7.911297,-5.636020,-9.544176,4.279161,8.016279,-5.626168,6.834237,-0.832194,4.048903,-5.198768,-4.430881,-6.097264,0.439250,-7.869635,3.144516,-4.681892,0.623251,-9.002164,-4.984083,-1.520172,-3.204192,-7.715079,-0.761508,-0.099083,-3.658822,8.361805,-9.521134,9.205098,-1.889907,9.042635,-0.034516,-8.866870,5.671281,3.967626,-2.166622,8.125553,-1.691474,7.927239,-6.702735,9.097624,-9.327534,2.673323,-4.733922,-1.994738,3.176971,8.429977,1.488402,7.428883,-7.362609,-6.593460,-4.072455,3.598557,8.846692,4.036611,-5.768338,6.800983,-1.869703,-4.025751,9.454726,5.372112,-3.434009,-1.754894,-1.249350,-6.872184,7.151104,0.683454,-6.918434,-0.262576,2.817769,-2.659659,-9.412254,-2.527377,-2.367502,-9.668152,8.578605,-1.017843,-7.628905,9.821475,-3.934929,7.141620,-4.684025,-3.830807,6.020692,4.229226,-3.878525,-3.793638,2.258352,1.385061,4.942965,1.795725,3.056692,6.958219,-1.363149,-6.472670,-8.310602,-3.252352,9.760826,-1.219870,-2.802944,5.196590,8.408401,2.600611,7.688531,-9.249252,-9.934045,7.386044,-9.482689,4.687634,-1.004116,0.986335,2.310824,8.983123,-2.593480,3.148632,3.866046,-6.631398,0.239039,2.994092,-2.967626,2.135686,0.956173,7.057671,5.642747,7.196654,-6.316113,1.752668,-5.067500,-6.980641,-5.092683,5.829030,6.693413,-6.110267,-5.506490,5.110923,2.676162,0.347449,8.179775,-1.078376,-2.685012,-9.808056,5.468533,-4.779822,9.015506,-6.549434,2.555275], dtype = "float64")#candidate|4971|(168,)|const|float64
call_4970 = relay.TupleGetItem(func_4749_call(relay.reshape(const_4971.astype('float64'), [168,])), 1)
call_4972 = relay.TupleGetItem(func_4751_call(relay.reshape(const_4971.astype('float64'), [168,])), 1)
output = relay.Tuple([call_4957,call_4959,call_4970,const_4971,])
output2 = relay.Tuple([call_4958,call_4960,call_4972,const_4971,])
func_4995 = relay.Function([], output)
mod['func_4995'] = func_4995
mod = relay.transform.InferType()(mod)
output = func_4995()
func_4996 = relay.Function([], output)
mutated_mod['func_4996'] = func_4996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1544_call = mod.get_global_var('func_1544')
func_1545_call = mutated_mod.get_global_var('func_1545')
call_5016 = relay.TupleGetItem(func_1544_call(), 0)
call_5017 = relay.TupleGetItem(func_1545_call(), 0)
func_3102_call = mod.get_global_var('func_3102')
func_3105_call = mutated_mod.get_global_var('func_3105')
call_5021 = relay.TupleGetItem(func_3102_call(relay.reshape(call_5016.astype('float32'), [14, 12, 11])), 0)
call_5022 = relay.TupleGetItem(func_3105_call(relay.reshape(call_5016.astype('float32'), [14, 12, 11])), 0)
output = relay.Tuple([call_5016,call_5021,])
output2 = relay.Tuple([call_5017,call_5022,])
func_5049 = relay.Function([], output)
mod['func_5049'] = func_5049
mod = relay.transform.InferType()(mod)
mutated_mod['func_5049'] = func_5049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mutated_mod.get_global_var('func_5049')
call_5050 = func_5049_call()
output = call_5050
func_5051 = relay.Function([], output)
mutated_mod['func_5051'] = func_5051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2466_call = mod.get_global_var('func_2466')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_5118 = relay.TupleGetItem(func_2466_call(), 0)
call_5119 = relay.TupleGetItem(func_2467_call(), 0)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_5139 = func_180_call()
call_5140 = func_180_call()
output = relay.Tuple([call_5118,call_5139,])
output2 = relay.Tuple([call_5119,call_5140,])
func_5141 = relay.Function([], output)
mod['func_5141'] = func_5141
mod = relay.transform.InferType()(mod)
mutated_mod['func_5141'] = func_5141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mutated_mod.get_global_var('func_5141')
call_5142 = func_5141_call()
output = call_5142
func_5143 = relay.Function([], output)
mutated_mod['func_5143'] = func_5143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5226 = relay.var("var_5226", dtype = "float32", shape = (16, 5, 8))#candidate|5226|(16, 5, 8)|var|float32
uop_5227 = relay.atan(var_5226.astype('float32')) # shape=(16, 5, 8)
func_3631_call = mod.get_global_var('func_3631')
func_3633_call = mutated_mod.get_global_var('func_3633')
call_5229 = relay.TupleGetItem(func_3631_call(), 3)
call_5230 = relay.TupleGetItem(func_3633_call(), 3)
func_1445_call = mod.get_global_var('func_1445')
func_1447_call = mutated_mod.get_global_var('func_1447')
call_5241 = func_1445_call()
call_5242 = func_1445_call()
var_5245 = relay.var("var_5245", dtype = "float32", shape = (16, 5, 8))#candidate|5245|(16, 5, 8)|var|float32
bop_5246 = relay.maximum(uop_5227.astype('uint32'), relay.reshape(var_5245.astype('uint32'), relay.shape_of(uop_5227))) # shape=(16, 5, 8)
uop_5249 = relay.cosh(uop_5227.astype('float64')) # shape=(16, 5, 8)
output = relay.Tuple([call_5229,call_5241,bop_5246,uop_5249,])
output2 = relay.Tuple([call_5230,call_5242,bop_5246,uop_5249,])
func_5257 = relay.Function([var_5226,var_5245,], output)
mod['func_5257'] = func_5257
mod = relay.transform.InferType()(mod)
mutated_mod['func_5257'] = func_5257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5257_call = mutated_mod.get_global_var('func_5257')
var_5259 = relay.var("var_5259", dtype = "float32", shape = (16, 5, 8))#candidate|5259|(16, 5, 8)|var|float32
var_5260 = relay.var("var_5260", dtype = "float32", shape = (16, 5, 8))#candidate|5260|(16, 5, 8)|var|float32
call_5258 = func_5257_call(var_5259,var_5260,)
output = call_5258
func_5261 = relay.Function([var_5259,var_5260,], output)
mutated_mod['func_5261'] = func_5261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4634_call = mod.get_global_var('func_4634')
func_4636_call = mutated_mod.get_global_var('func_4636')
call_5271 = relay.TupleGetItem(func_4634_call(), 0)
call_5272 = relay.TupleGetItem(func_4636_call(), 0)
output = relay.Tuple([call_5271,])
output2 = relay.Tuple([call_5272,])
func_5295 = relay.Function([], output)
mod['func_5295'] = func_5295
mod = relay.transform.InferType()(mod)
output = func_5295()
func_5296 = relay.Function([], output)
mutated_mod['func_5296'] = func_5296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_5305 = relay.TupleGetItem(func_2097_call(), 0)
call_5306 = relay.TupleGetItem(func_2099_call(), 0)
output = relay.Tuple([call_5305,])
output2 = relay.Tuple([call_5306,])
func_5317 = relay.Function([], output)
mod['func_5317'] = func_5317
mod = relay.transform.InferType()(mod)
mutated_mod['func_5317'] = func_5317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5317_call = mutated_mod.get_global_var('func_5317')
call_5318 = func_5317_call()
output = call_5318
func_5319 = relay.Function([], output)
mutated_mod['func_5319'] = func_5319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_5362 = func_437_call()
call_5363 = func_437_call()
func_1025_call = mod.get_global_var('func_1025')
func_1029_call = mutated_mod.get_global_var('func_1029')
const_5365 = relay.const([[9.916693,-8.265427,5.143904,6.892766,7.776420,4.743140,-5.424396,7.005727,-4.712261,-9.785942,-3.605794,-5.143011,6.210626,-9.081278,-6.501083,9.475907,3.137464,5.953795,-6.261572,-2.925181,6.695309,-8.553475,-1.636602,8.874036,7.747760,-8.383022,-0.816012,6.782189,-3.430654,1.604344,8.767471,4.272995,-5.121310,-1.322937,0.881989,-5.423626,-1.884214,-3.442961,4.727374,9.374051,-8.593179,-5.079044,-3.783655,-3.811964,4.298674,8.126578,-9.885427,-9.427007,4.151948,-1.882105,4.897744,-3.569210,5.387073,-5.653389,-8.689310,6.014733,-5.318461,9.392779,-2.472688,5.876836,8.005737,-3.743322,5.573207,-2.966836,0.855900,-6.861619,-7.464504,-8.924233,9.340165,-6.689621,1.665685,-5.947992,3.949598,-9.357374,2.265282,1.155534,2.055041,3.034123,-3.379274,8.953765,-2.779823,0.780182,-5.206282,-8.681049,-3.818633,-4.387802,8.431917,9.399142,-6.314540,-5.230531,-4.563451,5.731215,5.482078,-7.801973,-7.072295,-6.967473,8.535060,1.265986,5.002120,-2.322667,-3.329054,2.971278,4.437322,-9.993832,6.288530,-9.877256,7.541147,5.141555,-9.923550,-8.097509,3.255845,8.794505,-1.549249,2.491819,-2.819501,-0.099937,-7.507310,-9.308768,-9.040131,8.196634,5.542787,1.709615,9.510249,-5.408595,3.920859,8.189413,0.448202,1.768118,1.356929,6.304312,-0.384516,4.220318,-0.261658,2.204007,-9.977455,-2.754154,-8.252643,-7.168320,-4.282488,0.583704,-4.723927,-8.321512,0.641278,5.542304,-1.360084,-1.493166,-3.928604,2.507322,-5.073197,-8.862761,-3.098096,-2.706035,-4.916183,-9.497079,5.291332,-7.183834,-1.210615,8.784137,5.813877,1.471346,-6.990465,-5.843995,5.861228,0.985862,-5.300008,-4.217100,-3.988754,8.282028]], dtype = "float64")#candidate|5365|(1, 168)|const|float64
call_5364 = relay.TupleGetItem(func_1025_call(relay.reshape(const_5365.astype('float64'), [7, 12, 2]), relay.reshape(const_5365.astype('float64'), [7, 12, 2]), ), 0)
call_5366 = relay.TupleGetItem(func_1029_call(relay.reshape(const_5365.astype('float64'), [7, 12, 2]), relay.reshape(const_5365.astype('float64'), [7, 12, 2]), ), 0)
uop_5370 = relay.erf(call_5364.astype('float32')) # shape=(7, 12, 2)
uop_5372 = relay.erf(call_5366.astype('float32')) # shape=(7, 12, 2)
output = relay.Tuple([call_5362,const_5365,uop_5370,])
output2 = relay.Tuple([call_5363,const_5365,uop_5372,])
func_5379 = relay.Function([], output)
mod['func_5379'] = func_5379
mod = relay.transform.InferType()(mod)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mutated_mod.get_global_var('func_5379')
call_5380 = func_5379_call()
output = call_5380
func_5381 = relay.Function([], output)
mutated_mod['func_5381'] = func_5381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_5384 = relay.TupleGetItem(func_4303_call(), 0)
call_5385 = relay.TupleGetItem(func_4304_call(), 0)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
var_5387 = relay.var("var_5387", dtype = "uint64", shape = (104,))#candidate|5387|(104,)|var|uint64
call_5386 = relay.TupleGetItem(func_1048_call(relay.reshape(var_5387.astype('uint64'), [104,])), 2)
call_5388 = relay.TupleGetItem(func_1051_call(relay.reshape(var_5387.astype('uint64'), [104,])), 2)
output = relay.Tuple([call_5384,call_5386,var_5387,])
output2 = relay.Tuple([call_5385,call_5388,var_5387,])
func_5389 = relay.Function([var_5387,], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5390 = relay.var("var_5390", dtype = "uint64", shape = (104,))#candidate|5390|(104,)|var|uint64
func_5389_call = mutated_mod.get_global_var('func_5389')
call_5391 = func_5389_call(var_5390)
output = call_5391
func_5392 = relay.Function([var_5390], output)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5488 = relay.const([[[-7,3,-9,3,-4],[6,-4,9,2,-2],[7,3,-3,6,-10],[7,-10,-3,9,8],[-5,-1,1,8,2],[-2,-7,6,9,7],[-3,-9,7,3,-8],[-1,5,-3,-2,2],[2,-2,-10,-10,-2],[-8,-5,7,9,-8],[-3,1,1,-4,6],[6,3,-6,6,-2],[4,3,-9,9,-2],[-6,-8,-3,-10,1],[-5,3,-6,-1,-6]],[[1,6,-7,-4,-2],[7,-1,4,3,3],[9,2,-7,2,9],[2,-8,-1,3,3],[-2,-5,3,-9,3],[-2,-1,8,-1,8],[8,1,8,1,9],[-7,4,6,-1,-6],[10,-9,-2,-10,9],[6,-8,3,1,7],[8,3,-6,-9,-7],[-1,3,-7,-1,10],[3,-5,-5,6,2],[5,7,-10,-10,-10],[-6,-1,5,3,-3]],[[3,-1,8,9,-1],[7,-1,-6,9,-1],[-3,2,-5,-2,-4],[-3,2,7,1,1],[-9,8,5,2,-9],[3,-2,-6,3,-7],[-2,3,-6,1,8],[-9,-4,-6,10,1],[5,-3,-8,-3,-6],[7,3,-1,10,-8],[8,5,4,-9,1],[8,-5,-2,2,5],[6,-8,-9,1,5],[-8,-7,-4,-4,9],[-4,-1,10,5,9]],[[-9,-1,-5,8,-2],[5,5,-10,-7,4],[10,-5,-9,4,-4],[-4,-7,2,5,-10],[-4,-4,-1,9,-1],[-5,1,3,2,3],[-8,3,-10,-1,-6],[2,8,-2,-2,-6],[-4,-5,-1,-4,-4],[3,2,1,-10,6],[3,-7,-4,9,-9],[-9,8,-7,-2,5],[8,10,-1,-1,-1],[-6,-7,-5,-5,-6],[-3,-9,-1,-1,-7]],[[-1,-2,4,-9,-4],[-4,-7,7,-1,-10],[7,6,-4,2,1],[4,6,-10,9,7],[-2,-6,-1,4,-5],[1,-8,10,3,9],[-3,6,9,10,-5],[-3,-8,-9,4,-3],[8,5,-2,-9,-6],[8,9,9,-10,-8],[-7,-6,-2,6,-8],[6,-6,3,-3,2],[9,1,6,8,10],[-2,6,2,3,-3],[10,7,10,3,-10]],[[-5,8,9,-5,-9],[4,1,-9,8,-2],[3,10,-7,9,4],[-6,-2,-4,-6,9],[-3,9,3,-7,-10],[-9,1,4,-2,8],[6,-6,8,-9,-10],[-2,-9,8,-8,2],[6,-2,3,-4,1],[-10,8,3,-7,-10],[9,3,-4,-4,6],[2,-9,8,2,-8],[4,10,-5,5,5],[10,-1,6,4,8],[5,-3,-8,-6,-2]],[[3,-4,7,-8,-3],[2,-1,-6,6,6],[-3,6,5,6,-4],[8,6,4,1,-6],[7,8,10,-4,6],[-2,2,5,-4,3],[-1,7,4,9,-3],[10,4,7,-3,-2],[-2,-8,-2,4,-5],[-4,-9,-2,-2,8],[9,-5,-5,-8,-3],[7,-5,-10,9,-3],[-4,-1,-1,5,7],[1,3,-10,8,9],[10,-7,-3,2,-2]]], dtype = "uint16")#candidate|5488|(7, 15, 5)|const|uint16
var_5489 = relay.var("var_5489", dtype = "uint16", shape = (7, 15, 5))#candidate|5489|(7, 15, 5)|var|uint16
bop_5490 = relay.right_shift(const_5488.astype('uint16'), relay.reshape(var_5489.astype('uint16'), relay.shape_of(const_5488))) # shape=(7, 15, 5)
output = relay.Tuple([bop_5490,])
output2 = relay.Tuple([bop_5490,])
func_5520 = relay.Function([var_5489,], output)
mod['func_5520'] = func_5520
mod = relay.transform.InferType()(mod)
var_5521 = relay.var("var_5521", dtype = "uint16", shape = (7, 15, 5))#candidate|5521|(7, 15, 5)|var|uint16
output = func_5520(var_5521)
func_5522 = relay.Function([var_5521], output)
mutated_mod['func_5522'] = func_5522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_5532 = relay.TupleGetItem(func_2097_call(), 0)
call_5533 = relay.TupleGetItem(func_2099_call(), 0)
func_4421_call = mod.get_global_var('func_4421')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_5540 = func_4421_call()
call_5541 = func_4421_call()
output = relay.Tuple([call_5532,call_5540,])
output2 = relay.Tuple([call_5533,call_5541,])
func_5556 = relay.Function([], output)
mod['func_5556'] = func_5556
mod = relay.transform.InferType()(mod)
mutated_mod['func_5556'] = func_5556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5557 = func_5556_call()
output = call_5557
func_5558 = relay.Function([], output)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2392_call = mod.get_global_var('func_2392')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_5571 = relay.TupleGetItem(func_2392_call(), 0)
call_5572 = relay.TupleGetItem(func_2394_call(), 0)
output = call_5571
output2 = call_5572
func_5573 = relay.Function([], output)
mod['func_5573'] = func_5573
mod = relay.transform.InferType()(mod)
mutated_mod['func_5573'] = func_5573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5573_call = mutated_mod.get_global_var('func_5573')
call_5574 = func_5573_call()
output = call_5574
func_5575 = relay.Function([], output)
mutated_mod['func_5575'] = func_5575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mod.get_global_var('func_2690')
func_2691_call = mutated_mod.get_global_var('func_2691')
call_5588 = relay.TupleGetItem(func_2690_call(), 1)
call_5589 = relay.TupleGetItem(func_2691_call(), 1)
func_4765_call = mod.get_global_var('func_4765')
func_4766_call = mutated_mod.get_global_var('func_4766')
call_5638 = relay.TupleGetItem(func_4765_call(), 0)
call_5639 = relay.TupleGetItem(func_4766_call(), 0)
func_3778_call = mod.get_global_var('func_3778')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_5679 = func_3778_call()
call_5680 = func_3778_call()
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_5683 = relay.TupleGetItem(func_1212_call(), 1)
call_5684 = relay.TupleGetItem(func_1214_call(), 1)
func_1544_call = mod.get_global_var('func_1544')
func_1545_call = mutated_mod.get_global_var('func_1545')
call_5687 = relay.TupleGetItem(func_1544_call(), 0)
call_5688 = relay.TupleGetItem(func_1545_call(), 0)
func_2155_call = mod.get_global_var('func_2155')
func_2159_call = mutated_mod.get_global_var('func_2159')
var_5700 = relay.var("var_5700", dtype = "bool", shape = (154,))#candidate|5700|(154,)|var|bool
const_5701 = relay.const([True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True], dtype = "bool")#candidate|5701|(2464,)|const|bool
var_5702 = relay.var("var_5702", dtype = "float32", shape = (160,))#candidate|5702|(160,)|var|float32
call_5699 = relay.TupleGetItem(func_2155_call(relay.reshape(var_5700.astype('bool'), [14, 1, 11]), relay.reshape(const_5701.astype('bool'), [14, 16, 11]), relay.reshape(var_5702.astype('float32'), [8, 20]), ), 2)
call_5703 = relay.TupleGetItem(func_2159_call(relay.reshape(var_5700.astype('bool'), [14, 1, 11]), relay.reshape(const_5701.astype('bool'), [14, 16, 11]), relay.reshape(var_5702.astype('float32'), [8, 20]), ), 2)
func_3102_call = mod.get_global_var('func_3102')
func_3105_call = mutated_mod.get_global_var('func_3105')
call_5706 = relay.TupleGetItem(func_3102_call(relay.reshape(call_5679.astype('float32'), [14, 12, 11])), 1)
call_5707 = relay.TupleGetItem(func_3105_call(relay.reshape(call_5679.astype('float32'), [14, 12, 11])), 1)
func_2599_call = mod.get_global_var('func_2599')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_5712 = func_2599_call()
call_5713 = func_2599_call()
output = relay.Tuple([call_5588,call_5638,call_5679,call_5683,call_5687,call_5699,var_5700,const_5701,var_5702,call_5706,call_5712,])
output2 = relay.Tuple([call_5589,call_5639,call_5680,call_5684,call_5688,call_5703,var_5700,const_5701,var_5702,call_5707,call_5713,])
func_5718 = relay.Function([var_5700,var_5702,], output)
mod['func_5718'] = func_5718
mod = relay.transform.InferType()(mod)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5718_call = mutated_mod.get_global_var('func_5718')
var_5720 = relay.var("var_5720", dtype = "bool", shape = (154,))#candidate|5720|(154,)|var|bool
var_5721 = relay.var("var_5721", dtype = "float32", shape = (160,))#candidate|5721|(160,)|var|float32
call_5719 = func_5718_call(var_5720,var_5721,)
output = call_5719
func_5722 = relay.Function([var_5720,var_5721,], output)
mutated_mod['func_5722'] = func_5722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5738 = relay.var("var_5738", dtype = "float32", shape = (11, 15, 11))#candidate|5738|(11, 15, 11)|var|float32
uop_5739 = relay.acos(var_5738.astype('float32')) # shape=(11, 15, 11)
func_999_call = mod.get_global_var('func_999')
func_1001_call = mutated_mod.get_global_var('func_1001')
call_5741 = relay.TupleGetItem(func_999_call(), 1)
call_5742 = relay.TupleGetItem(func_1001_call(), 1)
output = relay.Tuple([uop_5739,call_5741,])
output2 = relay.Tuple([uop_5739,call_5742,])
func_5747 = relay.Function([var_5738,], output)
mod['func_5747'] = func_5747
mod = relay.transform.InferType()(mod)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5748 = relay.var("var_5748", dtype = "float32", shape = (11, 15, 11))#candidate|5748|(11, 15, 11)|var|float32
func_5747_call = mutated_mod.get_global_var('func_5747')
call_5749 = func_5747_call(var_5748)
output = call_5749
func_5750 = relay.Function([var_5748], output)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_5763 = relay.TupleGetItem(func_1212_call(), 0)
call_5764 = relay.TupleGetItem(func_1214_call(), 0)
output = relay.Tuple([call_5763,])
output2 = relay.Tuple([call_5764,])
func_5769 = relay.Function([], output)
mod['func_5769'] = func_5769
mod = relay.transform.InferType()(mod)
output = func_5769()
func_5770 = relay.Function([], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_5777 = relay.TupleGetItem(func_828_call(), 0)
call_5778 = relay.TupleGetItem(func_830_call(), 0)
func_5049_call = mod.get_global_var('func_5049')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5788 = relay.TupleGetItem(func_5049_call(), 1)
call_5789 = relay.TupleGetItem(func_5051_call(), 1)
output = relay.Tuple([call_5777,call_5788,])
output2 = relay.Tuple([call_5778,call_5789,])
func_5794 = relay.Function([], output)
mod['func_5794'] = func_5794
mod = relay.transform.InferType()(mod)
mutated_mod['func_5794'] = func_5794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5794_call = mutated_mod.get_global_var('func_5794')
call_5795 = func_5794_call()
output = call_5795
func_5796 = relay.Function([], output)
mutated_mod['func_5796'] = func_5796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_999_call = mod.get_global_var('func_999')
func_1001_call = mutated_mod.get_global_var('func_1001')
call_5809 = relay.TupleGetItem(func_999_call(), 1)
call_5810 = relay.TupleGetItem(func_1001_call(), 1)
func_207_call = mod.get_global_var('func_207')
func_209_call = mutated_mod.get_global_var('func_209')
call_5830 = relay.TupleGetItem(func_207_call(), 1)
call_5831 = relay.TupleGetItem(func_209_call(), 1)
func_1445_call = mod.get_global_var('func_1445')
func_1447_call = mutated_mod.get_global_var('func_1447')
call_5839 = func_1445_call()
call_5840 = func_1445_call()
output = relay.Tuple([call_5809,call_5830,call_5839,])
output2 = relay.Tuple([call_5810,call_5831,call_5840,])
func_5853 = relay.Function([], output)
mod['func_5853'] = func_5853
mod = relay.transform.InferType()(mod)
output = func_5853()
func_5854 = relay.Function([], output)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3493_call = mod.get_global_var('func_3493')
func_3494_call = mutated_mod.get_global_var('func_3494')
call_5874 = relay.TupleGetItem(func_3493_call(), 0)
call_5875 = relay.TupleGetItem(func_3494_call(), 0)
const_5886 = relay.const([[5,7,-7,-6],[9,-10,-10,-5],[-8,-8,5,2],[4,-1,-5,8],[4,-9,-10,-3],[-3,-8,-7,9],[9,2,3,-3],[10,-7,-4,6],[10,-10,-10,-1],[-5,-9,-1,10],[8,-3,7,-7],[8,3,8,-2],[5,-9,5,2],[-1,6,9,-2],[-9,-7,9,-5],[-9,8,8,-6],[-2,-1,-6,-10],[-4,-9,-2,10],[-3,8,-3,8],[-1,-9,-8,3],[-9,8,-7,-2],[-5,-2,1,-6],[10,-6,-7,7],[5,-9,1,5],[-6,5,1,4],[8,3,-9,4]], dtype = "uint64")#candidate|5886|(26, 4)|const|uint64
bop_5887 = relay.subtract(call_5874.astype('int64'), relay.reshape(const_5886.astype('int64'), relay.shape_of(call_5874))) # shape=(26, 4)
bop_5890 = relay.subtract(call_5875.astype('int64'), relay.reshape(const_5886.astype('int64'), relay.shape_of(call_5875))) # shape=(26, 4)
bop_5894 = relay.maximum(call_5874.astype('int64'), relay.reshape(const_5886.astype('int64'), relay.shape_of(call_5874))) # shape=(26, 4)
bop_5897 = relay.maximum(call_5875.astype('int64'), relay.reshape(const_5886.astype('int64'), relay.shape_of(call_5875))) # shape=(26, 4)
bop_5898 = relay.logical_or(call_5874.astype('bool'), relay.reshape(bop_5894.astype('bool'), relay.shape_of(call_5874))) # shape=(26, 4)
bop_5901 = relay.logical_or(call_5875.astype('bool'), relay.reshape(bop_5897.astype('bool'), relay.shape_of(call_5875))) # shape=(26, 4)
output = relay.Tuple([bop_5887,bop_5898,])
output2 = relay.Tuple([bop_5890,bop_5901,])
func_5912 = relay.Function([], output)
mod['func_5912'] = func_5912
mod = relay.transform.InferType()(mod)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5912_call = mutated_mod.get_global_var('func_5912')
call_5913 = func_5912_call()
output = call_5913
func_5914 = relay.Function([], output)
mutated_mod['func_5914'] = func_5914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_5930 = func_1742_call()
call_5931 = func_1742_call()
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_5937 = relay.TupleGetItem(func_1212_call(), 1)
call_5938 = relay.TupleGetItem(func_1214_call(), 1)
func_4421_call = mod.get_global_var('func_4421')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_5960 = func_4421_call()
call_5961 = func_4421_call()
func_4749_call = mod.get_global_var('func_4749')
func_4751_call = mutated_mod.get_global_var('func_4751')
const_5983 = relay.const([-2.960618,-6.489533,8.121681,-6.247533,-2.192959,2.290365,-2.377882,-1.049155,-2.876572,9.236223,-6.559084,4.149600,3.131574,-1.235288,-8.964422,-1.817829,-2.265496,-1.935171,-0.972493,4.830548,5.510526,7.552098,-5.706006,-1.750819,-0.698506,-7.163075,6.764589,2.479300,2.006653,-7.423421,-2.109351,-5.804928,0.933732,-0.625874,0.428407,-6.001733,-1.346689,4.631184,5.639341,-3.987888,7.661765,6.053869,-8.558063,6.273885,-3.837602,2.436978,-8.126350,2.850969,-3.503093,-7.445052,4.904551,7.610808,-2.708525,4.553324,-2.896585,8.205494,-7.471620,-2.533359,-6.543948,8.924605,6.193594,5.548587,-5.173336,-5.166698,-8.123620,4.764049,1.474273,-8.293202,9.002070,-4.660997,8.696789,8.659937,-9.921503,-6.625436,9.795176,1.089170,-3.884182,8.897378,3.598691,-6.028799,-0.519398,-0.575350,-3.965339,1.766239,-9.537919,6.458471,-8.143053,3.173430,-6.613328,7.247851,9.981102,2.546048,3.969272,0.953260,-5.173353,-3.500460,7.302447,-9.677962,7.683843,3.152027,3.325077,8.213838,4.657950,-0.795515,-6.398748,6.506190,-7.800948,-9.859167,7.195769,3.293264,8.163682,-2.623156,-2.547001,-6.380007,3.717720,2.801787,-8.849801,-2.697558,5.542614,2.812315,-5.484653,-8.114157,0.695382,-9.323671,-2.872255,-9.284513,5.918793,-0.176053,-5.677749,-8.877381,-7.051599,-9.587408,-1.647753,-4.247425,-4.486568,-1.140820,-7.180218,0.038790,0.209612,2.045439,4.048197,3.796067,-5.776418,-9.235255,-0.498057,-0.214241,-8.984921,8.374588,4.196942,1.612787,5.844806,-7.965012,-4.255485,-6.144172,0.975453,0.521891,6.266213,-2.877663,-6.650701,-2.964441,1.025708,9.481495,-4.317374,-9.881070,-4.463567,2.970081,5.710923,7.605794], dtype = "float64")#candidate|5983|(168,)|const|float64
call_5982 = relay.TupleGetItem(func_4749_call(relay.reshape(const_5983.astype('float64'), [168,])), 2)
call_5984 = relay.TupleGetItem(func_4751_call(relay.reshape(const_5983.astype('float64'), [168,])), 2)
func_5141_call = mod.get_global_var('func_5141')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5986 = relay.TupleGetItem(func_5141_call(), 1)
call_5987 = relay.TupleGetItem(func_5143_call(), 1)
func_2466_call = mod.get_global_var('func_2466')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_5991 = relay.TupleGetItem(func_2466_call(), 0)
call_5992 = relay.TupleGetItem(func_2467_call(), 0)
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_6018 = relay.TupleGetItem(func_4303_call(), 0)
call_6019 = relay.TupleGetItem(func_4304_call(), 0)
func_4271_call = mod.get_global_var('func_4271')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_6023 = relay.TupleGetItem(func_4271_call(), 0)
call_6024 = relay.TupleGetItem(func_4272_call(), 0)
output = relay.Tuple([call_5930,call_5937,call_5960,call_5982,const_5983,call_5986,call_5991,call_6018,call_6023,])
output2 = relay.Tuple([call_5931,call_5938,call_5961,call_5984,const_5983,call_5987,call_5992,call_6019,call_6024,])
func_6045 = relay.Function([], output)
mod['func_6045'] = func_6045
mod = relay.transform.InferType()(mod)
output = func_6045()
func_6046 = relay.Function([], output)
mutated_mod['func_6046'] = func_6046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4615_call = mutated_mod.get_global_var('func_4615')
call_6072 = relay.TupleGetItem(func_4613_call(), 0)
call_6073 = relay.TupleGetItem(func_4615_call(), 0)
output = relay.Tuple([call_6072,])
output2 = relay.Tuple([call_6073,])
func_6078 = relay.Function([], output)
mod['func_6078'] = func_6078
mod = relay.transform.InferType()(mod)
output = func_6078()
func_6079 = relay.Function([], output)
mutated_mod['func_6079'] = func_6079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_6181 = relay.TupleGetItem(func_942_call(), 2)
call_6182 = relay.TupleGetItem(func_943_call(), 2)
uop_6190 = relay.exp(call_6181.astype('float64')) # shape=(4, 13, 2)
uop_6192 = relay.exp(call_6182.astype('float64')) # shape=(4, 13, 2)
func_3102_call = mod.get_global_var('func_3102')
func_3105_call = mutated_mod.get_global_var('func_3105')
const_6199 = relay.const([8.705260,4.009805,5.363648,4.730482,-1.348998,-8.939331,-2.687496,-8.241825,2.991711,-4.622400,-2.894942,-6.792972,-0.605377,0.880258,1.460458,2.204542,-6.011126,2.797475,-9.375010,8.580133,-4.145044,1.147445,0.535341,3.368237,-2.654465,-6.127965,5.381209,-2.479225,5.582063,4.117323,-4.901793,-0.441412,-9.877753,-1.796614,-0.379066,4.483803,0.986647,4.015260,6.442785,-7.689131,-8.770018,-7.451949,6.277676,-3.162779,-5.658578,9.694601,-5.933663,6.440401,7.541105,-8.779403,9.227287,-1.819243,-5.520560,-9.369196,-4.452130,5.339889,4.816570,8.640786,-6.723298,-8.453203,0.864013,4.325560,9.720763,-5.067277,-3.891458,-9.810328,8.918084,9.367062,-8.572063,0.763799,-3.215558,2.633173,-7.288049,-1.941466,-4.311368,6.928854,-1.501934,-4.806368,5.545735,-6.050235,6.787716,-1.664771,2.947974,-4.138021,8.570259,-0.620190,-2.106198,2.008571,-0.116760,3.866960,-5.933848,2.998375,7.461659,-4.491576,-9.297595,-9.033391,0.354981,-3.172224,-7.996662,-2.266407,-5.580012,2.562768,2.747120,7.008436,-0.173652,-8.114550,5.065523,5.040784,7.470032,-8.372680,-8.680799,8.663281,8.690756,-4.867783,-3.861826,1.859443,-9.560033,4.955110,3.583251,4.233587,4.053215,1.042968,7.474517,6.924888,-2.574996,1.571459,3.782524,2.069302,-3.141930,-9.572084,-9.299125,-9.682544,2.542634,-9.845380,-8.822903,-4.659279,-9.518055,6.695345,4.211212,-6.235772,-2.464309,-1.612552,6.898958,-1.042308,-2.960148,-6.203902,-0.671822,0.570227,2.512024,-3.196732,4.027780,6.423476,-7.169302,-4.951346,-7.940192,-7.626796,-5.750076,-8.445470,-7.366969,2.781873,0.578779,0.768204,-9.873136,9.758794,2.475468,-4.553450,8.942902,-0.855737,-5.927396,4.362556,7.496145,7.020518,-5.086093,5.838317,-8.236368,9.793518,0.314775,6.969099,0.977486,0.532483,-6.079307,-2.376036,8.049703,-0.426866,3.449251,-7.108751,4.835933,-2.357864,4.153373,-5.387113,-6.742025,-3.093329,-9.753148,-9.378986,-2.606486,-5.907008,8.216791,-5.249433,0.052493,-2.129728,-2.149228,-7.544425,-3.373752,-8.132367,-3.959036,5.206590,-9.144880,-9.968790,6.136887,3.697358,-9.392866,-2.947112,-6.179253,3.543574,5.020570,-5.806033,-5.496215,4.661218,7.352962,3.090580,-9.803930,-8.379186,-0.808558,-6.612763,7.710515,4.358120,6.186286,0.835091,0.599135,-2.698415,-2.531321,-1.987241,7.017439,1.888226,1.926971,-5.965809,3.299927,9.683559,-7.990623,6.924103,0.864982,9.679396,0.260573,-3.369211,2.686950,9.739354,1.132569,4.230649,-9.378564,4.150128,0.582863,7.401063,-0.276295,-3.476289,-7.715565,1.024169,-7.301789,4.467943,3.188927,-4.921513,-1.708193,0.972559,-5.590392,-5.018245,8.321246,-3.011386,8.575829,-5.682530,-9.384860,-4.231802,-2.835121,-5.985969,9.504269,-1.525412,7.151441,8.448539,4.870769,6.667151,9.844713,-1.818930,3.522325,8.735069,-3.817515,0.547195,-2.823030,-9.905990,8.685766,-4.842958,-3.346541,9.212924,2.324644,5.306921,5.906472,-4.268999,-9.990178,-1.466583,-7.958861,-1.468051,6.826912,5.155611,-6.523386,-5.636970,9.343648,-1.522716,-6.297839,1.066908,-2.400695,-6.560305,-0.523459,9.464025,6.418024,-7.180590,7.295222,-8.050424,-9.818704,8.667784,6.432177,-0.820528,-7.193565,-9.896505,4.759730,-5.870368,-2.283517,3.951397,-3.288787,9.817181,-0.429743,2.088636,4.309522,-1.214064,4.344589,-3.523835,-6.778798,0.836987,0.444687,8.988370,-2.229164,-6.652727,-5.587785,6.946850,-4.180209,-9.373962,-9.241398,4.811846,0.796399,-7.788303,0.418779,-9.661467,0.641535,-3.619803,5.003402,1.462219,0.366873,4.539585,-9.088563,-5.689097,5.025219,0.933516,-0.020595,9.460762,4.479291,4.884272,-0.548608,-0.666089,7.638941,-7.568549,-3.436860,-5.847419,-9.902730,3.569694,-4.173145,4.119493,-1.495442,-0.750549,1.964620,-5.473608,5.750923,1.252220,1.442591,1.411970,-7.953110,-9.486075,-6.014330,6.682444,-3.646916,8.705860,-8.106088,-5.938337,9.204586,-5.831903,2.282197,3.025537,-7.931617,-8.572404,-8.142301,-3.258393,-2.822502,3.176735,-2.772061,6.612036,1.468916,8.836937,7.032803,-6.329713,-2.475836,-9.753994,-0.487417,-1.830063,-8.347113,-9.372917,0.331392,-9.771378,2.653700,-5.091953,-6.755166,-6.606390,-9.553476,9.487353,-8.886451,-0.015041,-3.992052,-9.527365,5.189848,5.128528,5.828716,-2.622336,2.606613,-2.768692,6.848177,-7.835069,-6.001492,3.018917,-5.935614,9.630707,9.841581,-5.374409,-1.950742,-2.358701,7.731444,7.682109,6.837333,1.843202,-8.081138,-0.131120,-1.701324,8.811809,6.338672,7.129607,-8.147751,-4.496072,6.916600,3.368663,2.735575,9.101401,-9.641862,-6.842353,-3.658645,-3.384138,3.982162,-5.716866,0.389481,0.761793,7.674586,-7.835748,1.082136,6.665641,9.444697,-7.933572,-2.173222,-9.888494,-7.002504,-3.304888,-2.989069,-1.279775,5.756273,-5.307274,-3.377535,-8.361508,-4.151837,2.337659,7.868889,-1.835829,-6.437557,-9.871742,-8.200025,0.170719,1.910819,-9.968433,-6.513343,3.809689,6.455111,-7.383874,1.732121,0.586436,1.946837,2.094449,3.439998,-2.136765,-1.963816,-7.975794,5.495290,-2.904245,-7.462614,-5.730503,9.020207,-8.210035,3.554062,-8.307772,3.680234,4.132770,9.727339,-4.624526,-6.094766,-6.273760,1.807467,-2.019707,-2.360186,2.433416,6.386263,5.896447,2.177446,9.264227,-3.036996,-2.350480,-7.502820,-5.727813,-2.881420,-3.570729,2.772074,-7.846533,-8.864962,6.219211,7.304570,9.595162,9.249385,7.251956,-9.397211,2.364020,-7.531279,3.776472,8.273129,-6.229849,-9.583899,2.230318,2.242633,-6.694827,-4.082095,-5.494136,-9.958127,-1.471736,-2.155271,-9.109819,-9.028691,3.852779,3.082446,4.501329,3.878809,9.176415,6.075491,2.915250,-1.201069,-9.946543,-0.814127,-4.184730,-2.599164,-1.586176,-1.218685,8.245761,-3.716149,3.164477,3.263254,4.329887,8.844781,-8.712062,8.154235,3.868346,6.516836,-3.744525,9.285015,-7.099037,0.413745,-1.154072,-7.509017,-2.215569,3.310115,-6.757318,2.944895,9.154440,-4.533420,9.060539,0.164782,8.821630,-0.401157,-2.254301,-5.763989,9.116213,2.067743,2.363319,2.305135,1.624774,-7.779765,-4.442082,4.316130,-6.221464,9.871823,2.191282,-4.701076,-3.223003,-7.491457,-1.035746,2.383622,-4.668637,-8.133978,-7.624775,8.146400,-4.789974,-3.634488,3.617633,-9.344640,1.443519,7.245436,-2.228025,-9.824670,-3.173342,-7.501084,2.067116,-5.212628,-1.049919,-3.080269,2.693709,-8.576654,9.315170,-9.613821,-6.046569,-9.715490,-7.122422,-8.035664,7.468988,3.717348,2.725158,1.882679,-9.136839,-8.312405,-5.477140,1.857643,6.439727,0.659843,-3.658395,9.722720,-1.116399,9.983810,-0.932265,4.169019,-6.399421,6.779822,-8.033146,-7.966655,5.964001,-2.414037,2.787457,5.661260,5.410130,6.227373,-1.288082,9.802270,-7.594096,4.747356,-7.576449,0.931766,-2.846703,8.090397,4.095233,4.751867,-6.327310,-9.398889,2.988293,-1.535426,-4.928444,3.392115,6.388701,9.277978,0.609841,-9.418385,2.097688,-7.616561,-2.385246,0.360117,9.322444,-8.940557,-9.319206,-0.772466,-9.961268,-8.027787,-9.333816,7.632240,-4.559374,-2.138176,-0.090384,-3.912103,-2.008006,9.288161,-7.735815,-9.727435,3.906621,6.170598,5.982033,7.429489,2.738430,-8.532377,9.762957,4.015542,-0.015844,9.392833,-1.875856,-8.779613,-0.361391,8.944365,-6.882323,4.936681,2.921194,7.436477,-2.794390,-0.327183,3.433963,9.451028,6.908310,-9.157617,-0.587711,-8.331510,6.032887,7.296723,-9.014633,-6.755889,-6.973158,-4.036546,3.458517,-1.366612,-7.825795,2.715276,9.003808,1.090731,8.896229,-7.575261,6.036104,-0.028839,-9.535979,0.680079,-0.931858,6.481814,2.371143,-8.050747,-9.356988,-0.470506,-2.872629,-8.173058,-5.074389,-4.119322,1.134715,-0.356173,4.783918,-6.647567,-2.598420,-6.759857,9.554201,-0.889284,6.427855,2.369453,1.554145,-6.875468,0.275992,-7.829914,-8.160062,3.140978,0.512747,7.152969,-7.881420,-4.275676,3.025675,-0.589078,0.486680,6.792208,1.927980,-4.959663,-5.411074,-2.389294,6.431166,6.964384,3.311497,7.917117,-4.811196,4.495685,-1.823918,-8.061896,-9.986525,4.027677,2.704330,-5.475253,1.891730,4.753666,-8.949375,-1.263683,-8.629995,2.514813,-9.064778,9.405531,1.115763,-9.218294,-0.318942,4.001587,8.548269,-1.374694,7.426241,9.960014,9.617858,-4.307935,8.614447,4.639856,4.013641,7.397013,-4.951335,-4.453359,-7.804284,4.410615,4.876296,1.988079,1.475477,1.942648,3.748027,-4.088776,-2.239502,-3.115584,8.878492,3.496355,-8.460154,-2.146145,1.893221,9.549889,8.930964,1.112560,4.739837,4.518623,-8.403844,-8.988645,-4.143521,2.568967,2.458162,-3.373075,0.179821,2.850685,-3.901663,-3.484256,5.229662,2.341208,2.199284,9.389549,-4.479786,2.362647,-2.263203,-7.325866,-3.107453,3.452502,9.461514,-6.232286,1.675274,-0.207659,-2.227227,-6.427444,-5.637557,-3.542085,-9.347656,4.649299,8.796912,5.628674,-4.332536,-7.409541,9.203711,-7.658308,6.920329,-6.824190,8.238947,-6.532198,4.252250,0.184217,9.336877,2.560148,8.779013,-7.904119,-1.927116,-8.049723,4.380527,1.106321,-0.254537,5.601356,4.565707,1.350961,-4.478944,-8.706499,-9.317704,-2.886851,3.750675,7.888940,-0.706942,9.958198,5.587667,0.080233,-4.911500,-6.834155,-7.883824,-1.646837,7.931660,-1.695009,-7.129696,2.746741,-5.150567,-4.353946,-0.388870,0.715352,4.170985,5.954656,-5.457809,5.455941,9.200166,-8.612611,5.787831,5.464265,-6.898126,-1.276211,-5.456571,3.688463,6.408916,3.698197,3.074015,-9.584387,1.068060,7.245621,-6.904162,2.215752,-2.214167,-9.297646,-3.138890,-7.669462,8.459870,0.929148,7.803711,2.998611,-1.651231,-2.496271,4.542228,-1.175257,-5.543116,-4.161922,-4.149374,-0.822722,2.919269,-7.789029,5.512839,-3.528422,-2.859316,-9.504565,-5.555554,-8.154742,-9.219352,-2.266571,-1.341858,0.846530,9.155335,4.082922,9.459357,-0.092991,-6.705506,-1.684125,-5.802643,1.555250,2.953864,-2.074523,0.438571,-6.877440,3.947097,5.257647,-2.572666,-5.355260,-2.941670,3.325005,9.089178,8.445901,7.776497,4.741442,-0.367022,-7.800265,3.021066,-6.907805,1.258265,-3.022456,8.600898,-6.591386,-6.342292,8.180465,5.105267,-6.620984,8.465193,-2.444367,-5.961707,-7.894992,-2.187818,-2.969313,5.574157,-2.332765,5.046862,9.938683,-4.124892,-4.209064,-3.343231,-4.932250,2.461231,-3.517943,-3.131229,6.394905,1.421509,9.168613,-5.455473,7.777603,-9.477494,-0.588659,-2.546696,9.967157,-8.424490,-7.140166,4.489127,-6.168320,2.636255,0.023033,7.614212,-2.943346,-4.286272,6.936209,8.443127,-9.603972,-7.465863,-0.825958,-3.044356,-8.690421,8.682960,9.071715,3.578655,4.838985,2.412896,-7.641795,7.009304,6.778164,-1.276798,-1.687472,9.615662,-1.937795,-1.557406,-9.030113,-4.366141,4.615175,3.138673,-5.887237,-7.262081,-0.080182,6.699444,-2.647838,8.432691,-4.763934,-9.118792,-8.283578,-6.323364,-7.108534,4.957030,8.945480,2.960604,3.573123,-8.476838,6.045482,-5.552576,-2.774577,-4.630170,-1.879245,-9.504966,7.634615,-1.104620,-1.886436,-4.119601,4.908580,2.217541,2.205843,4.688133,-4.542472,9.153934,-4.218278,5.340567,1.880728,5.814500,1.974670,-7.430768,1.554958,-3.365914,9.870579,-8.661472,-6.349847,-2.066093,-4.112885,9.213442,8.081082,-2.005183,-9.592387,-8.692925,9.941118,9.826514,2.918433,3.090514,-0.269108,-1.856177,3.526089,-7.559900,-1.694242,2.076393,-1.423070,3.947602,5.471732,8.910929,4.868585,9.638406,-8.945697,-3.917858,8.711539,-0.463889,4.732217,7.223492,0.409067,1.720944,-5.519644,-1.505580,7.999198,-3.654782,5.272905,-1.320466,8.773337,1.211523,-1.455973,3.021984,4.290788,-2.105461,-7.169632,9.018420,2.263954,-7.194829,-6.436552,4.002045,-4.868945,-6.941703,5.538172,5.050622,1.345005,-8.921860,-4.327594,8.673864,1.395335,-8.433637,7.422157,5.545094,-4.630071,9.965707,-8.602950,-7.143058,-7.919167,-5.381094,6.502413,3.225872,-3.397663,8.109090,4.487383,2.000281,-5.772297,7.454210,5.930375,-0.074164,-1.514956,-7.339482,-0.295737,0.737471,-2.626897,1.548806,3.283770,-9.975215,-3.337602,-2.235723,-1.757801,7.397895,-1.286958,-6.418444,1.438202,8.064965,-7.067253,6.059648,7.970875,-8.411974,-1.344523,7.898020,-4.812788,-5.221527,7.852329,-7.377943,-1.581647,-6.974442,-3.122263,-3.338395,-3.432880,6.175699,-5.486314,7.186179,-2.183777,5.906642,8.320931,-2.046664,-7.151377,7.595261,-4.261441,6.521802,9.285182,8.355948,-9.613225,5.770479,9.763560,-6.226808,4.171813,4.479713,6.451569,1.312055,-8.694596,-7.472184,-6.611678,-1.105599,8.629541,5.965803,-4.148257,3.140065,-1.212576,5.081422,9.582780,7.608310,2.042192,-3.837954,2.840018,-4.682961,-7.741580,-6.431079,-9.867404,1.613249,-3.868486,-4.332763,4.379158,-4.757007,-6.021494,8.744549,5.320546,5.182378,-7.110021,6.279189,0.679272,4.722132,-3.482345,-4.535788,-7.278682,-1.463505,-6.818668,7.316508,-2.660272,4.430742,6.672155,2.725565,-8.617442,-6.813415,-6.686533,-1.039088,9.080267,0.230095,-5.634678,-2.589508,4.170704,5.372584,8.511336,3.409329,-2.859408,-3.269737,-1.733907,-3.517309,-6.333479,6.083710,-4.849675,-3.321814,6.091846,4.808696,1.121149,-0.985875,8.616290,-0.216997,0.924041,-0.203568,9.980086,8.319863,-9.886753,-5.680856,-0.251519,-2.812038,2.455655,-3.876662,-4.916043,-9.610923,6.114227,9.163673,3.018514,4.502018,5.447964,-5.609422,6.416505,-2.117074,-8.633495,-3.891555,-5.985188,5.748593,-1.349195,-9.694426,-9.388841,-6.443425,-1.516577,-9.874726,-2.457308,-9.259876,2.559426,-3.657281,-2.578804,6.661844,6.430263,-7.906127,-9.166813,7.555138,8.613485,3.705440,2.512953,-5.949213,7.985125,8.648911,-9.962377,-7.056363,-3.682297,-0.612522,2.405295,7.718888,-4.953259,5.289622,-9.290053,0.653498,-8.456589,4.492237,-6.058678,1.596781,-8.024435,0.067463,-2.672056,-8.588324,-4.413759,-3.479497,-4.641186,-8.922605,2.986373,3.512321,3.669197,7.941373,-8.137375,6.878086,-8.989145,-4.767942,1.960953,-3.786053,3.144624,-9.809169,6.303074,-3.947484,0.426328,-5.352489,-3.034165,-2.168104,-3.042703,2.723537,-0.111925,-4.012704,-0.236951,9.677343,-1.275305,7.823806,-3.157115,-8.369945,-4.044251,-8.687657,6.002899,-0.299552,-2.275064,4.643238,3.960822,0.663179,4.824573,-9.023794,5.014203,7.930616,1.688760,1.619157,0.296690,-3.316584,-3.391511,8.167017,2.833981,5.139595,-3.906196,5.623032,-3.330822,1.616807,-2.583083,2.349145,2.119489,0.519911,9.547857,-8.827397,-2.996814,9.732536,8.880491,3.204387,-3.098075,9.850168,4.133492,-5.783661,2.231679,-0.190259,-8.526222,4.050424,-5.651439,-6.395502,-0.261950,-2.897828,8.680725,5.497643,-2.330315,-1.913968,-9.662924,0.309401,-7.986166,3.655811,7.624068,5.473437,1.445681,4.334615,7.913782,0.058931,9.733166,6.296213,9.299353,1.278561,2.649002,2.775324,6.120500,6.975034,-5.857094,-5.644521,-2.986852,2.316818,-4.319198,-3.209361,6.316915,1.708905,2.550483,8.579397,-4.128864,8.125416,-3.144013,4.337645,9.369441,3.149228,6.505141,-4.597011,5.360498,7.942292,-5.310578,-1.097307,9.925502,-2.295991,-9.947672,-0.112900,2.706566,-8.215386,-4.441393,6.694129,-3.058582,0.305359,-9.440858,-3.287403,-0.391398,-0.386181,2.293721,-3.413667,-0.825499,0.599314,-8.868222,8.546615,6.632880,-4.194874,5.590530,-9.881964,-5.928377,6.794402,0.481002,2.408415,4.150670,-5.763987,-0.385928,-6.729867,-2.618729,3.970026,8.069388,-9.746984,-4.669130,-6.007584,-1.811254,9.653606,-0.027530,-0.447538,-5.257642,0.323415,8.010573,-4.811613,-2.033494,-3.446808,3.537613,-2.870564,7.367706,4.044397,6.238577,0.141809,-2.046752,-3.733311,-7.986577,-5.919235,-4.855795,-6.348821,-6.410484,6.615224,8.680671,9.950559,6.085571,7.590096,-8.310956,-6.856172,-5.524198,7.031320,3.086918,-8.591742,-6.740929,-2.006736,-2.293469,-2.971579,-4.497169,-7.153810,-5.648283,-0.668935,0.944618,-3.503818,-9.211651,1.381752,-3.021759,-8.626286,-9.554916,9.650828,3.680061,-1.846019,3.817507,-9.349126,-5.186626,1.704529,-9.965421,2.471629,-4.850122,1.182639,-5.581914,2.858463,-9.215878,-0.768922,-6.347639,6.442569,-7.036591,-9.729473,7.159087,4.293536,8.426387,-7.432964,-0.676052,6.521089,5.504197,7.396418,0.444893,-1.415963,-1.535945,-9.530122,4.435474,3.394038,6.034832,2.738320,-8.126185,2.614047,1.748292,-9.789322,3.066535,-0.357146,-7.721921,-8.156541,3.188135,9.796675,-1.596706,-3.708962,-4.295248,4.342580,6.177138,-3.960261,2.571078,9.413891,8.495621,-9.191556,3.026358,2.691175,-3.863397,6.674410,-1.092646,-8.019367,1.535691,-6.405332,-6.715822,9.491742,-0.931958,7.112544,8.106478,2.857809,-1.662560,7.103142,-0.577203,-6.875310,3.395891,-0.160997,-1.020723,-9.843093,-2.173290,7.457030,-6.204740,-6.280872,-2.090292,-3.887420,9.080632,-5.838715,1.777793,6.308915,-6.451126,-5.610257,-3.391627,-0.369814,6.065103,-3.559601,1.831875,-1.638832,-6.199899,7.264414,2.098241,9.509318,0.908710,-1.845906,6.859573,-8.457458,8.048791,6.715237,-8.978094,4.384643,-0.574085,3.676683,9.131501,6.902317,-9.022281,6.089840,-7.918765,-1.525933,-2.454178,-4.569322,5.423418,-6.051194,-7.617259,-5.623017,1.796300,-1.547518,7.518329,1.736529,-8.278048,-4.602716,7.721181,-5.711184,-5.328717,4.770732,2.534638,9.081973,1.714135,-5.823751,4.348784,-4.826451,-0.509278,3.966965,-4.294367,-9.112530,4.959231,1.629614,-6.072804,5.322294,7.028697,-6.155816,-6.578399,5.352509,7.734554,2.200471,-6.787885,5.979512,8.077055,-2.227893,7.079687,-3.491192,4.040799,-8.587658,5.436854,2.029167,-1.518996,5.817370,0.726160,-7.663101,-3.477062,1.684666,6.633538,2.474208,7.945043,-1.010979,3.148374,-3.450740,5.141203,-0.537132,-0.200610,5.927643,2.951009,9.081275,9.065570,9.224464,-0.371111,-0.749309,0.893286,-4.410312,4.845633,-3.746265,3.714279,2.112324,1.895767,6.472658,7.318461,-7.014148,3.912181,8.142768,-5.994167,9.761650,-3.316993,-2.110554,0.645674,-2.726578,-1.998589,0.090969,1.236529,-2.420080,9.829074,-9.987708,-8.879014,4.248913,0.934535,-7.864783,-9.427664,-8.420156,3.727761,-3.751681,3.145936,0.579125,3.921824,0.447472,4.558822,3.480528,3.469582,-6.381219,9.742225,7.148672,-0.321420,-3.684938,4.213256,8.240376,8.231259,-7.157246,0.480456,-7.062136,-1.389745,1.875613,1.808198,-6.643344,3.274343,-6.223586,5.853913,2.788591,1.041835,-8.884661,-4.573253,5.650077,0.985346,-6.089820,5.006842,-1.435933,-6.793268,-3.629700,-1.750871,-4.181438,9.082575,-3.064853,-2.474929,-8.507342,5.412776,6.537965,8.868246,-8.275575,-9.609993,9.876806,7.875289,2.446250,4.973533,-7.457678,6.489371,9.942014,7.930690,5.810524,4.791321,-9.769950,-4.108547,-1.231500,-6.481489,-1.547044], dtype = "float32")#candidate|6199|(1848,)|const|float32
call_6198 = relay.TupleGetItem(func_3102_call(relay.reshape(const_6199.astype('float32'), [14, 12, 11])), 0)
call_6200 = relay.TupleGetItem(func_3105_call(relay.reshape(const_6199.astype('float32'), [14, 12, 11])), 0)
bop_6201 = relay.multiply(call_6181.astype('int8'), relay.reshape(uop_6190.astype('int8'), relay.shape_of(call_6181))) # shape=(4, 13, 2)
bop_6204 = relay.multiply(call_6182.astype('int8'), relay.reshape(uop_6192.astype('int8'), relay.shape_of(call_6182))) # shape=(4, 13, 2)
output = relay.Tuple([call_6198,const_6199,bop_6201,])
output2 = relay.Tuple([call_6200,const_6199,bop_6204,])
func_6219 = relay.Function([], output)
mod['func_6219'] = func_6219
mod = relay.transform.InferType()(mod)
mutated_mod['func_6219'] = func_6219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6219_call = mutated_mod.get_global_var('func_6219')
call_6220 = func_6219_call()
output = call_6220
func_6221 = relay.Function([], output)
mutated_mod['func_6221'] = func_6221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5912_call = mod.get_global_var('func_5912')
func_5914_call = mutated_mod.get_global_var('func_5914')
call_6292 = relay.TupleGetItem(func_5912_call(), 1)
call_6293 = relay.TupleGetItem(func_5914_call(), 1)
uop_6307 = relay.cos(call_6292.astype('float32')) # shape=(26, 4)
uop_6309 = relay.cos(call_6293.astype('float32')) # shape=(26, 4)
func_3778_call = mod.get_global_var('func_3778')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_6321 = func_3778_call()
call_6322 = func_3778_call()
output = relay.Tuple([uop_6307,call_6321,])
output2 = relay.Tuple([uop_6309,call_6322,])
func_6333 = relay.Function([], output)
mod['func_6333'] = func_6333
mod = relay.transform.InferType()(mod)
output = func_6333()
func_6334 = relay.Function([], output)
mutated_mod['func_6334'] = func_6334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6355 = relay.var("var_6355", dtype = "float64", shape = (2, 6, 1))#candidate|6355|(2, 6, 1)|var|float64
uop_6356 = relay.sigmoid(var_6355.astype('float64')) # shape=(2, 6, 1)
bop_6358 = relay.not_equal(var_6355.astype('bool'), relay.reshape(uop_6356.astype('bool'), relay.shape_of(var_6355))) # shape=(2, 6, 1)
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_6362 = relay.TupleGetItem(func_4303_call(), 1)
call_6363 = relay.TupleGetItem(func_4304_call(), 1)
func_1930_call = mod.get_global_var('func_1930')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_6366 = relay.TupleGetItem(func_1930_call(), 0)
call_6367 = relay.TupleGetItem(func_1931_call(), 0)
output = relay.Tuple([bop_6358,call_6362,call_6366,])
output2 = relay.Tuple([bop_6358,call_6363,call_6367,])
func_6369 = relay.Function([var_6355,], output)
mod['func_6369'] = func_6369
mod = relay.transform.InferType()(mod)
mutated_mod['func_6369'] = func_6369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6370 = relay.var("var_6370", dtype = "float64", shape = (2, 6, 1))#candidate|6370|(2, 6, 1)|var|float64
func_6369_call = mutated_mod.get_global_var('func_6369')
call_6371 = func_6369_call(var_6370)
output = call_6371
func_6372 = relay.Function([var_6370], output)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5794_call = mod.get_global_var('func_5794')
func_5796_call = mutated_mod.get_global_var('func_5796')
call_6377 = relay.TupleGetItem(func_5794_call(), 1)
call_6378 = relay.TupleGetItem(func_5796_call(), 1)
func_2536_call = mod.get_global_var('func_2536')
func_2537_call = mutated_mod.get_global_var('func_2537')
call_6380 = relay.TupleGetItem(func_2536_call(), 1)
call_6381 = relay.TupleGetItem(func_2537_call(), 1)
func_1194_call = mod.get_global_var('func_1194')
func_1196_call = mutated_mod.get_global_var('func_1196')
call_6409 = relay.TupleGetItem(func_1194_call(), 0)
call_6410 = relay.TupleGetItem(func_1196_call(), 0)
func_180_call = mod.get_global_var('func_180')
func_182_call = mutated_mod.get_global_var('func_182')
call_6418 = func_180_call()
call_6419 = func_180_call()
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_6448 = relay.TupleGetItem(func_240_call(), 0)
call_6449 = relay.TupleGetItem(func_241_call(), 0)
func_5794_call = mod.get_global_var('func_5794')
func_5796_call = mutated_mod.get_global_var('func_5796')
call_6451 = relay.TupleGetItem(func_5794_call(), 1)
call_6452 = relay.TupleGetItem(func_5796_call(), 1)
func_1240_call = mod.get_global_var('func_1240')
func_1243_call = mutated_mod.get_global_var('func_1243')
const_6465 = relay.const(1, dtype = "int32")#candidate|6465|()|const|int32
var_6466 = relay.var("var_6466", dtype = "int32", shape = (125,))#candidate|6466|(125,)|var|int32
call_6464 = func_1240_call(relay.reshape(const_6465.astype('int32'), []), relay.reshape(var_6466.astype('int32'), [5, 5, 5]), )
call_6467 = func_1240_call(relay.reshape(const_6465.astype('int32'), []), relay.reshape(var_6466.astype('int32'), [5, 5, 5]), )
uop_6470 = relay.asin(var_6466.astype('float32')) # shape=(125,)
uop_6477 = relay.cos(uop_6470.astype('float32')) # shape=(125,)
func_2599_call = mod.get_global_var('func_2599')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_6484 = func_2599_call()
call_6485 = func_2599_call()
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_6490 = relay.TupleGetItem(func_3988_call(), 1)
call_6491 = relay.TupleGetItem(func_3989_call(), 1)
uop_6516 = relay.atanh(uop_6477.astype('float32')) # shape=(125,)
func_4995_call = mod.get_global_var('func_4995')
func_4996_call = mutated_mod.get_global_var('func_4996')
call_6522 = relay.TupleGetItem(func_4995_call(), 2)
call_6523 = relay.TupleGetItem(func_4996_call(), 2)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_6527 = func_437_call()
call_6528 = func_437_call()
func_2639_call = mod.get_global_var('func_2639')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_6529 = relay.TupleGetItem(func_2639_call(), 2)
call_6530 = relay.TupleGetItem(func_2640_call(), 2)
output = relay.Tuple([call_6377,call_6380,call_6409,call_6418,call_6448,call_6451,call_6464,const_6465,call_6484,call_6490,uop_6516,call_6522,call_6527,call_6529,])
output2 = relay.Tuple([call_6378,call_6381,call_6410,call_6419,call_6449,call_6452,call_6467,const_6465,call_6485,call_6491,uop_6516,call_6523,call_6528,call_6530,])
func_6531 = relay.Function([var_6466,], output)
mod['func_6531'] = func_6531
mod = relay.transform.InferType()(mod)
var_6532 = relay.var("var_6532", dtype = "int32", shape = (125,))#candidate|6532|(125,)|var|int32
output = func_6531(var_6532)
func_6533 = relay.Function([var_6532], output)
mutated_mod['func_6533'] = func_6533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_6557 = func_437_call()
call_6558 = func_437_call()
output = call_6557
output2 = call_6558
func_6559 = relay.Function([], output)
mod['func_6559'] = func_6559
mod = relay.transform.InferType()(mod)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6559_call = mutated_mod.get_global_var('func_6559')
call_6560 = func_6559_call()
output = call_6560
func_6561 = relay.Function([], output)
mutated_mod['func_6561'] = func_6561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3325_call = mod.get_global_var('func_3325')
func_3326_call = mutated_mod.get_global_var('func_3326')
call_6702 = relay.TupleGetItem(func_3325_call(), 1)
call_6703 = relay.TupleGetItem(func_3326_call(), 1)
var_6708 = relay.var("var_6708", dtype = "bool", shape = (4, 13, 2))#candidate|6708|(4, 13, 2)|var|bool
bop_6709 = relay.logical_and(call_6702.astype('bool'), relay.reshape(var_6708.astype('bool'), relay.shape_of(call_6702))) # shape=(4, 13, 2)
bop_6712 = relay.logical_and(call_6703.astype('bool'), relay.reshape(var_6708.astype('bool'), relay.shape_of(call_6703))) # shape=(4, 13, 2)
output = bop_6709
output2 = bop_6712
func_6715 = relay.Function([var_6708,], output)
mod['func_6715'] = func_6715
mod = relay.transform.InferType()(mod)
mutated_mod['func_6715'] = func_6715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6716 = relay.var("var_6716", dtype = "bool", shape = (4, 13, 2))#candidate|6716|(4, 13, 2)|var|bool
func_6715_call = mutated_mod.get_global_var('func_6715')
call_6717 = func_6715_call(var_6716)
output = call_6717
func_6718 = relay.Function([var_6716], output)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mod.get_global_var('func_4889')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_6768 = relay.TupleGetItem(func_4889_call(), 0)
call_6769 = relay.TupleGetItem(func_4891_call(), 0)
output = call_6768
output2 = call_6769
func_6784 = relay.Function([], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
mutated_mod['func_6784'] = func_6784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mutated_mod.get_global_var('func_6784')
call_6785 = func_6784_call()
output = call_6785
func_6786 = relay.Function([], output)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2599_call = mod.get_global_var('func_2599')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_6793 = func_2599_call()
call_6794 = func_2599_call()
func_6078_call = mod.get_global_var('func_6078')
func_6079_call = mutated_mod.get_global_var('func_6079')
call_6795 = relay.TupleGetItem(func_6078_call(), 0)
call_6796 = relay.TupleGetItem(func_6079_call(), 0)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_6803 = relay.TupleGetItem(func_5379_call(), 0)
call_6804 = relay.TupleGetItem(func_5381_call(), 0)
output = relay.Tuple([call_6793,call_6795,call_6803,])
output2 = relay.Tuple([call_6794,call_6796,call_6804,])
func_6827 = relay.Function([], output)
mod['func_6827'] = func_6827
mod = relay.transform.InferType()(mod)
mutated_mod['func_6827'] = func_6827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6827_call = mutated_mod.get_global_var('func_6827')
call_6828 = func_6827_call()
output = call_6828
func_6829 = relay.Function([], output)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mod.get_global_var('func_207')
func_209_call = mutated_mod.get_global_var('func_209')
call_6849 = relay.TupleGetItem(func_207_call(), 0)
call_6850 = relay.TupleGetItem(func_209_call(), 0)
output = call_6849
output2 = call_6850
func_6863 = relay.Function([], output)
mod['func_6863'] = func_6863
mod = relay.transform.InferType()(mod)
mutated_mod['func_6863'] = func_6863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6863_call = mutated_mod.get_global_var('func_6863')
call_6864 = func_6863_call()
output = call_6864
func_6865 = relay.Function([], output)
mutated_mod['func_6865'] = func_6865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3041_call = mod.get_global_var('func_3041')
func_3042_call = mutated_mod.get_global_var('func_3042')
call_6870 = func_3041_call()
call_6871 = func_3041_call()
output = call_6870
output2 = call_6871
func_6877 = relay.Function([], output)
mod['func_6877'] = func_6877
mod = relay.transform.InferType()(mod)
output = func_6877()
func_6878 = relay.Function([], output)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3493_call = mod.get_global_var('func_3493')
func_3494_call = mutated_mod.get_global_var('func_3494')
call_6884 = relay.TupleGetItem(func_3493_call(), 0)
call_6885 = relay.TupleGetItem(func_3494_call(), 0)
uop_6900 = relay.sqrt(call_6884.astype('float32')) # shape=(26, 4)
uop_6902 = relay.sqrt(call_6885.astype('float32')) # shape=(26, 4)
func_1025_call = mod.get_global_var('func_1025')
func_1029_call = mutated_mod.get_global_var('func_1029')
const_6908 = relay.const([7.773856,-7.079044,-0.163196,9.884189,6.014066,9.883884,-4.256238,-9.062721,2.642985,-5.385419,3.568361,-2.245928,-2.768489,-2.885569,-8.780369,-7.962525,2.769120,4.719922,6.258100,8.370597,0.575638,-8.576178,-5.543461,-7.120668,-3.649409,-2.808960,-2.550648,-3.984765,-4.980171,-6.123652,-9.468950,-1.208230,1.088641,0.459054,4.827880,1.419980,4.891489,-4.588525,1.216377,-8.948700,9.049118,2.849888,6.879285,-9.638131,-8.345151,-5.188704,-8.139795,-5.223781,-4.234907,-1.993934,-6.129510,7.657218,7.974901,4.468169,-0.298800,-2.527146,-7.925194,-4.416884,7.259852,-9.977978,3.022514,7.914510,1.301178,-8.478959,9.659574,5.298065,-7.380195,-9.496571,-9.277595,-3.395216,7.618942,9.472791,-6.702725,8.500120,-4.846922,4.119706,-0.672836,1.031587,-0.249676,1.909600,-0.613051,-4.372407,3.418581,-8.531633,-6.451850,3.364545,9.698078,-6.023238,-2.319361,-2.189522,8.647378,-4.466318,-1.990232,1.137508,3.445269,-4.150954,-9.552617,0.987243,3.964987,6.957149,-8.697320,6.898734,1.177034,-8.894128,9.951795,1.605020,-8.186491,-8.581670,5.793683,-2.402112,1.942265,1.157716,1.716319,5.692828,-5.351648,-6.155000,3.776102,6.500148,6.124327,-5.767983,-6.310867,6.294772,-8.982315,7.750963,-7.737826,-4.109417,-9.420798,9.091677,-0.064618,7.994015,3.089134,-5.378029,1.983089,-1.584141,7.286431,-3.763800,-0.752467,-7.397484,0.998104,-1.151421,7.470242,8.598780,-8.131561,8.227028,-8.313950,-3.822947,6.828137,-0.491834,-7.692710,1.632099,-1.177426,0.678099,-4.466536,5.052919,1.025599,5.156789,-4.658514,-3.283985,7.496102,-5.944014,-7.857628,1.037135,2.062862,7.261975,-2.494942,1.788547,-4.641530,0.136605], dtype = "float64")#candidate|6908|(168,)|const|float64
call_6907 = relay.TupleGetItem(func_1025_call(relay.reshape(const_6908.astype('float64'), [7, 12, 2]), relay.reshape(const_6908.astype('float64'), [7, 12, 2]), ), 0)
call_6909 = relay.TupleGetItem(func_1029_call(relay.reshape(const_6908.astype('float64'), [7, 12, 2]), relay.reshape(const_6908.astype('float64'), [7, 12, 2]), ), 0)
func_1025_call = mod.get_global_var('func_1025')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_6914 = relay.TupleGetItem(func_1025_call(relay.reshape(const_6908.astype('float64'), [7, 12, 2]), relay.reshape(const_6908.astype('float64'), [7, 12, 2]), ), 3)
call_6915 = relay.TupleGetItem(func_1029_call(relay.reshape(const_6908.astype('float64'), [7, 12, 2]), relay.reshape(const_6908.astype('float64'), [7, 12, 2]), ), 3)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_6916 = func_437_call()
call_6917 = func_437_call()
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_6918 = relay.TupleGetItem(func_942_call(), 2)
call_6919 = relay.TupleGetItem(func_943_call(), 2)
var_6923 = relay.var("var_6923", dtype = "float32", shape = (26, 4))#candidate|6923|(26, 4)|var|float32
bop_6924 = relay.equal(uop_6900.astype('bool'), relay.reshape(var_6923.astype('bool'), relay.shape_of(uop_6900))) # shape=(26, 4)
bop_6927 = relay.equal(uop_6902.astype('bool'), relay.reshape(var_6923.astype('bool'), relay.shape_of(uop_6902))) # shape=(26, 4)
func_6559_call = mod.get_global_var('func_6559')
func_6561_call = mutated_mod.get_global_var('func_6561')
call_6934 = func_6559_call()
call_6935 = func_6559_call()
output = relay.Tuple([call_6907,const_6908,call_6914,call_6916,call_6918,bop_6924,call_6934,])
output2 = relay.Tuple([call_6909,const_6908,call_6915,call_6917,call_6919,bop_6927,call_6935,])
func_6937 = relay.Function([var_6923,], output)
mod['func_6937'] = func_6937
mod = relay.transform.InferType()(mod)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6938 = relay.var("var_6938", dtype = "float32", shape = (26, 4))#candidate|6938|(26, 4)|var|float32
func_6937_call = mutated_mod.get_global_var('func_6937')
call_6939 = func_6937_call(var_6938)
output = call_6939
func_6940 = relay.Function([var_6938], output)
mutated_mod['func_6940'] = func_6940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4995_call = mod.get_global_var('func_4995')
func_4996_call = mutated_mod.get_global_var('func_4996')
call_6945 = relay.TupleGetItem(func_4995_call(), 2)
call_6946 = relay.TupleGetItem(func_4996_call(), 2)
output = call_6945
output2 = call_6946
func_6953 = relay.Function([], output)
mod['func_6953'] = func_6953
mod = relay.transform.InferType()(mod)
output = func_6953()
func_6954 = relay.Function([], output)
mutated_mod['func_6954'] = func_6954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_7013 = func_6784_call()
call_7014 = func_6784_call()
output = call_7013
output2 = call_7014
func_7026 = relay.Function([], output)
mod['func_7026'] = func_7026
mod = relay.transform.InferType()(mod)
output = func_7026()
func_7027 = relay.Function([], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_7054 = relay.TupleGetItem(func_2894_call(), 2)
call_7055 = relay.TupleGetItem(func_2895_call(), 2)
output = call_7054
output2 = call_7055
func_7057 = relay.Function([], output)
mod['func_7057'] = func_7057
mod = relay.transform.InferType()(mod)
mutated_mod['func_7057'] = func_7057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7057_call = mutated_mod.get_global_var('func_7057')
call_7058 = func_7057_call()
output = call_7058
func_7059 = relay.Function([], output)
mutated_mod['func_7059'] = func_7059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6559_call = mod.get_global_var('func_6559')
func_6561_call = mutated_mod.get_global_var('func_6561')
call_7084 = func_6559_call()
call_7085 = func_6559_call()
func_4765_call = mod.get_global_var('func_4765')
func_4766_call = mutated_mod.get_global_var('func_4766')
call_7087 = relay.TupleGetItem(func_4765_call(), 0)
call_7088 = relay.TupleGetItem(func_4766_call(), 0)
func_156_call = mod.get_global_var('func_156')
func_158_call = mutated_mod.get_global_var('func_158')
call_7110 = relay.TupleGetItem(func_156_call(), 0)
call_7111 = relay.TupleGetItem(func_158_call(), 0)
func_3882_call = mod.get_global_var('func_3882')
func_3884_call = mutated_mod.get_global_var('func_3884')
call_7119 = relay.TupleGetItem(func_3882_call(), 0)
call_7120 = relay.TupleGetItem(func_3884_call(), 0)
var_7121 = relay.var("var_7121", dtype = "float32", shape = (4, 5, 12))#candidate|7121|(4, 5, 12)|var|float32
bop_7122 = relay.mod(call_7119.astype('float64'), var_7121.astype('float64')) # shape=(4, 5, 12)
bop_7125 = relay.mod(call_7120.astype('float64'), var_7121.astype('float64')) # shape=(4, 5, 12)
output = relay.Tuple([call_7084,call_7087,call_7110,bop_7122,])
output2 = relay.Tuple([call_7085,call_7088,call_7111,bop_7125,])
func_7126 = relay.Function([var_7121,], output)
mod['func_7126'] = func_7126
mod = relay.transform.InferType()(mod)
var_7127 = relay.var("var_7127", dtype = "float32", shape = (4, 5, 12))#candidate|7127|(4, 5, 12)|var|float32
output = func_7126(var_7127)
func_7128 = relay.Function([var_7127], output)
mutated_mod['func_7128'] = func_7128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5794_call = mod.get_global_var('func_5794')
func_5796_call = mutated_mod.get_global_var('func_5796')
call_7158 = relay.TupleGetItem(func_5794_call(), 0)
call_7159 = relay.TupleGetItem(func_5796_call(), 0)
func_4271_call = mod.get_global_var('func_4271')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_7163 = relay.TupleGetItem(func_4271_call(), 0)
call_7164 = relay.TupleGetItem(func_4272_call(), 0)
func_5295_call = mod.get_global_var('func_5295')
func_5296_call = mutated_mod.get_global_var('func_5296')
call_7168 = relay.TupleGetItem(func_5295_call(), 0)
call_7169 = relay.TupleGetItem(func_5296_call(), 0)
output = relay.Tuple([call_7158,call_7163,call_7168,])
output2 = relay.Tuple([call_7159,call_7164,call_7169,])
func_7215 = relay.Function([], output)
mod['func_7215'] = func_7215
mod = relay.transform.InferType()(mod)
mutated_mod['func_7215'] = func_7215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7215_call = mutated_mod.get_global_var('func_7215')
call_7216 = func_7215_call()
output = call_7216
func_7217 = relay.Function([], output)
mutated_mod['func_7217'] = func_7217
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7235 = relay.const([[[-7,6,10,-10,4,-5,-9,-7,-7,-4,-6,2,-2,-6,8,-5],[-9,-4,-8,5,10,-2,-6,-2,4,5,6,-4,10,9,4,-3],[-4,9,3,3,-7,-2,4,8,-1,7,-2,6,-3,-10,-9,-9],[1,-5,5,10,5,-4,6,-8,-3,-4,8,-7,-5,9,1,6],[-5,8,1,1,-8,6,5,2,-8,4,-6,-10,-7,4,-6,-2]]], dtype = "uint32")#candidate|7235|(1, 5, 16)|const|uint32
const_7236 = relay.const([[[10,-8,1,-4,-1,-10,-8,9,8,-3,6,-7,10,1,4,-3],[-10,-5,-8,-10,7,-4,-10,-7,8,-7,1,-5,7,4,1,-6],[-10,-4,10,-7,-3,4,-6,4,-2,-8,-6,8,10,7,-1,6],[1,-10,-3,-8,10,4,4,9,8,10,10,-9,2,-4,8,4],[10,-10,1,-3,-1,-6,-4,2,-4,-8,-10,7,-5,-5,-2,2]],[[-1,9,4,2,9,-2,-4,-7,-5,-5,5,7,4,1,-8,-10],[-7,2,10,-7,-5,4,-3,10,-9,5,6,2,-3,-7,-7,-2],[3,8,-10,-4,3,-4,10,-6,-8,1,-2,-5,-7,6,9,-2],[1,-8,2,6,10,4,4,9,1,-6,-4,-6,5,-8,-1,9],[-8,-5,-10,8,8,2,-3,4,2,7,-4,8,6,-6,-4,-10]],[[-3,-5,-5,3,-8,-7,-5,-5,2,-2,4,6,5,6,6,-4],[-3,1,3,-3,-10,-9,1,1,-5,-10,4,6,9,-9,-2,-5],[1,2,2,2,-6,-7,7,10,3,-9,-7,6,-1,-2,-5,7],[-3,-9,-6,4,-4,-9,-9,2,-1,8,-10,-6,7,-5,3,10],[2,-10,10,2,-3,6,-2,-3,-1,-2,5,-3,6,-7,-1,4]],[[4,-4,7,10,-5,-3,5,1,-9,9,1,-6,-2,-3,-8,6],[2,-8,-4,-9,3,7,10,-5,10,-2,-8,5,1,-2,-6,3],[-8,7,9,4,-9,-1,-8,-7,10,9,-10,-7,2,-2,-10,6],[-7,-2,8,10,7,-6,8,5,-5,-8,-9,-9,-6,1,7,-6],[2,-5,-3,10,8,9,1,8,8,-2,2,-8,-2,6,6,-8]],[[-1,-9,-9,6,-4,5,-9,-1,6,-2,5,-7,-8,-8,7,1],[8,2,-8,5,3,7,-1,-9,-2,-7,2,3,7,2,-9,1],[4,7,2,-8,-3,7,3,-3,6,1,-4,-7,8,-6,-4,-8],[-10,4,10,5,7,7,7,-5,10,10,-10,8,8,-9,-10,-3],[-6,10,-9,9,-8,-5,8,7,-6,3,-6,8,-4,-6,-7,-5]],[[-6,-9,2,2,-4,-5,9,-10,1,-4,4,-10,-10,5,3,-2],[-6,5,-9,-10,-6,-7,10,-3,-3,-7,9,-9,4,-10,-3,8],[-3,1,-2,7,9,6,-3,10,3,5,5,-5,-8,-7,-7,-4],[10,10,-8,3,-3,7,-5,2,-4,-4,-10,7,-3,-1,-1,-1],[-2,-4,-10,-8,-3,8,9,8,6,-2,10,-6,-8,-5,6,10]],[[9,-8,1,1,-10,4,9,-5,-3,-3,8,7,-10,5,-10,-2],[8,-7,6,5,-7,7,10,-2,9,-7,5,-5,8,-1,-4,5],[-4,3,2,-6,-6,6,-5,8,-2,-2,-8,-5,6,3,10,-6],[-4,-4,8,5,3,9,-10,3,-1,-2,-4,3,3,-2,8,5],[8,6,9,7,7,-1,2,-10,1,-9,-8,-6,2,4,-7,-10]],[[8,8,-9,1,-10,2,6,-4,5,3,10,6,7,-10,9,-9],[5,-6,4,-2,-8,8,-10,3,10,9,-5,-1,-7,9,10,4],[-7,4,8,8,2,-1,10,8,-2,-9,-3,1,1,5,10,-9],[-2,8,8,-5,4,3,-2,6,-7,2,7,-10,-5,-10,-6,2],[1,-5,8,9,8,7,-10,-7,-10,-7,-2,5,-1,2,5,3]],[[-6,7,10,9,8,1,9,-7,7,-7,-10,-6,-9,-6,4,2],[-10,7,5,-10,-2,-2,-7,1,2,2,-10,3,-9,-4,10,5],[5,10,8,2,10,-10,-3,-2,-8,-9,5,8,10,-10,-9,10],[7,-5,-9,2,3,8,-2,4,-5,10,4,-7,-1,-5,-10,-6],[5,3,-10,-5,8,2,-4,-1,7,2,-9,-6,-3,-3,-7,3]],[[2,-8,-10,7,8,9,-4,-4,4,-4,4,3,2,2,7,-1],[-9,1,-6,1,-6,10,5,-2,-10,1,-6,-3,2,-8,-9,8],[-10,1,-5,-9,-5,10,-3,-6,-1,-8,3,5,-7,4,2,5],[-9,7,1,5,-5,5,-9,2,9,-5,1,8,5,-3,-4,-10],[-7,8,-4,-3,8,-8,8,-5,10,-9,-3,1,1,-8,4,-9]],[[-6,-10,-10,9,10,6,-5,-7,4,10,-5,7,6,-2,-3,5],[9,-10,-8,-10,-4,6,-9,6,1,3,6,-3,-5,-5,7,10],[5,7,-8,-10,3,-2,3,6,-4,1,10,4,-10,-6,1,4],[-7,-7,-8,-7,-7,5,-7,-5,1,2,-1,-7,-7,7,-2,-2],[-2,5,-10,-2,3,8,-10,2,-8,-3,3,9,4,6,6,4]],[[-10,9,3,-8,1,-8,-8,4,-7,4,-6,7,-6,-5,-4,-2],[10,-6,-5,9,10,-8,-8,-4,-7,4,-9,5,-8,2,9,-6],[-5,4,-7,-7,2,7,6,-4,10,-8,1,-6,2,-8,-2,-2],[1,9,10,-6,9,-2,-3,-10,6,-1,1,-3,7,-6,10,-6],[-5,-8,10,7,7,4,8,4,2,-1,5,6,7,-1,-1,7]],[[-3,-10,1,4,-9,-10,2,10,-1,7,-7,10,-4,-1,9,10],[5,6,-9,3,-7,-6,-9,5,9,6,2,10,-6,-10,8,-6],[1,-8,2,-10,-6,-10,-5,3,-6,2,6,5,-2,6,6,-5],[-3,7,4,-6,6,-5,2,6,8,5,9,-5,-6,5,2,7],[2,-3,-5,-9,7,-1,4,5,7,-8,-2,9,4,10,-5,3]],[[4,6,-7,10,10,10,-1,8,9,-4,8,8,9,-8,-6,-2],[9,8,4,9,-9,10,8,-10,3,-7,-9,-3,-5,-5,-3,1],[-6,9,7,7,-7,-8,6,-1,1,-2,-4,-1,7,2,-2,4],[-2,-9,1,8,3,-4,-3,-8,2,7,4,-7,-5,-2,1,-6],[-9,3,10,-9,-7,-2,7,-9,7,-6,-5,1,-3,-8,9,9]],[[-8,1,6,-1,-4,-5,10,-3,-1,9,4,-5,-2,-1,-6,2],[-5,-10,-2,5,-3,-8,-6,1,2,3,-7,-2,1,2,6,-9],[-7,-3,1,7,-10,-6,-8,4,-4,-3,-5,-2,10,4,-9,10],[-4,-5,3,-9,-8,9,-2,3,10,-1,-3,-3,-8,-1,-10,5],[4,-10,-1,-9,-6,5,3,-7,4,-10,-10,1,10,9,5,-5]]], dtype = "uint32")#candidate|7236|(15, 5, 16)|const|uint32
bop_7237 = relay.bitwise_or(const_7235.astype('uint32'), const_7236.astype('uint32')) # shape=(15, 5, 16)
uop_7252 = relay.cos(bop_7237.astype('float32')) # shape=(15, 5, 16)
output = uop_7252
output2 = uop_7252
func_7271 = relay.Function([], output)
mod['func_7271'] = func_7271
mod = relay.transform.InferType()(mod)
output = func_7271()
func_7272 = relay.Function([], output)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6863_call = mod.get_global_var('func_6863')
func_6865_call = mutated_mod.get_global_var('func_6865')
call_7316 = func_6863_call()
call_7317 = func_6863_call()
func_7271_call = mod.get_global_var('func_7271')
func_7272_call = mutated_mod.get_global_var('func_7272')
call_7318 = func_7271_call()
call_7319 = func_7271_call()
func_5295_call = mod.get_global_var('func_5295')
func_5296_call = mutated_mod.get_global_var('func_5296')
call_7350 = relay.TupleGetItem(func_5295_call(), 0)
call_7351 = relay.TupleGetItem(func_5296_call(), 0)
func_3041_call = mod.get_global_var('func_3041')
func_3042_call = mutated_mod.get_global_var('func_3042')
call_7352 = func_3041_call()
call_7353 = func_3041_call()
output = relay.Tuple([call_7316,call_7318,call_7350,call_7352,])
output2 = relay.Tuple([call_7317,call_7319,call_7351,call_7353,])
func_7355 = relay.Function([], output)
mod['func_7355'] = func_7355
mod = relay.transform.InferType()(mod)
output = func_7355()
func_7356 = relay.Function([], output)
mutated_mod['func_7356'] = func_7356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3157_call = mod.get_global_var('func_3157')
func_3159_call = mutated_mod.get_global_var('func_3159')
call_7396 = func_3157_call()
call_7397 = func_3157_call()
func_2155_call = mod.get_global_var('func_2155')
func_2159_call = mutated_mod.get_global_var('func_2159')
const_7400 = relay.const([True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False], dtype = "bool")#candidate|7400|(154,)|const|bool
const_7401 = relay.const([[True,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,True]], dtype = "bool")#candidate|7401|(1, 2464)|const|bool
const_7402 = relay.const([[-9.678483,-1.269873,-1.194903,4.786309,1.195678,-3.986450,-1.372122,2.029675,4.329495,-5.039390,-6.335656,-8.426571,-5.622853,-7.447567,-8.861679,2.422256,3.435924,-7.099596,-8.406190,-1.815381],[-0.818155,-7.422388,9.094633,-2.046324,-0.851309,0.705621,4.233843,2.631038,0.413099,3.474667,4.276376,-9.695737,-7.665508,-8.673102,-1.544559,-9.744787,-1.806418,5.930418,1.938856,-6.865599],[9.844801,-7.569065,6.932889,-8.539862,8.267617,0.150684,-3.452933,-7.853762,-4.494740,2.413270,8.432220,3.849956,-3.221650,-8.768991,5.159343,3.631271,-5.684642,1.514878,4.604171,-3.242250],[0.094570,-6.118453,2.640376,-3.889250,5.124787,-7.240888,-9.110037,-6.158005,7.436386,-5.031843,-0.999385,3.301907,1.320249,-6.512569,-8.606266,5.954582,-5.334737,-5.157830,-2.533968,-2.643813],[-9.276700,7.680440,-4.977609,-7.432881,-9.064954,-1.515277,-0.479830,7.742157,8.829168,1.413187,-5.628076,5.811339,-0.409522,-5.286174,9.914272,-9.109688,5.145549,-4.931651,-8.720918,0.249879],[3.248827,6.741166,3.584703,3.340883,-2.845947,6.839380,8.538665,-9.474919,-7.397957,3.188240,5.110037,9.556727,8.311639,-1.805987,-8.257852,-4.258048,-3.210134,-3.226660,-9.214255,-9.832032],[-2.560116,9.384071,-2.899613,8.703469,-6.029104,-0.440354,-4.844808,-1.197010,5.236799,1.328869,5.636475,4.262748,7.220071,6.101466,5.321630,7.356162,9.690288,-0.392193,-0.012727,-0.244063],[-2.646949,-0.592454,5.427836,-4.244903,7.810202,-4.685093,1.233423,-3.590256,6.259324,-7.443072,4.185762,-2.087510,-5.189201,2.823030,-1.345451,7.618547,-1.563026,-0.518613,-2.821595,2.284539]], dtype = "float32")#candidate|7402|(8, 20)|const|float32
call_7399 = relay.TupleGetItem(func_2155_call(relay.reshape(const_7400.astype('bool'), [14, 1, 11]), relay.reshape(const_7401.astype('bool'), [14, 16, 11]), relay.reshape(const_7402.astype('float32'), [8, 20]), ), 1)
call_7403 = relay.TupleGetItem(func_2159_call(relay.reshape(const_7400.astype('bool'), [14, 1, 11]), relay.reshape(const_7401.astype('bool'), [14, 16, 11]), relay.reshape(const_7402.astype('float32'), [8, 20]), ), 1)
var_7416 = relay.var("var_7416", dtype = "float32", shape = (8, 20))#candidate|7416|(8, 20)|var|float32
bop_7417 = relay.greater(const_7402.astype('bool'), relay.reshape(var_7416.astype('bool'), relay.shape_of(const_7402))) # shape=(8, 20)
uop_7422 = relay.acosh(var_7416.astype('float64')) # shape=(8, 20)
uop_7426 = relay.cos(uop_7422.astype('float64')) # shape=(8, 20)
func_2482_call = mod.get_global_var('func_2482')
func_2484_call = mutated_mod.get_global_var('func_2484')
call_7436 = func_2482_call()
call_7437 = func_2482_call()
var_7443 = relay.var("var_7443", dtype = "float64", shape = (8, 20))#candidate|7443|(8, 20)|var|float64
bop_7444 = relay.bitwise_xor(uop_7426.astype('int16'), relay.reshape(var_7443.astype('int16'), relay.shape_of(uop_7426))) # shape=(8, 20)
func_6559_call = mod.get_global_var('func_6559')
func_6561_call = mutated_mod.get_global_var('func_6561')
call_7449 = func_6559_call()
call_7450 = func_6559_call()
var_7453 = relay.var("var_7453", dtype = "float64", shape = (8, 20))#candidate|7453|(8, 20)|var|float64
bop_7454 = relay.maximum(uop_7422.astype('uint32'), relay.reshape(var_7453.astype('uint32'), relay.shape_of(uop_7422))) # shape=(8, 20)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_7465 = func_437_call()
call_7466 = func_437_call()
func_2536_call = mod.get_global_var('func_2536')
func_2537_call = mutated_mod.get_global_var('func_2537')
call_7469 = relay.TupleGetItem(func_2536_call(), 1)
call_7470 = relay.TupleGetItem(func_2537_call(), 1)
bop_7495 = relay.less(uop_7426.astype('bool'), relay.reshape(uop_7422.astype('bool'), relay.shape_of(uop_7426))) # shape=(8, 20)
bop_7502 = relay.left_shift(uop_7422.astype('uint16'), relay.reshape(var_7416.astype('uint16'), relay.shape_of(uop_7422))) # shape=(8, 20)
output = relay.Tuple([call_7396,call_7399,const_7400,const_7401,bop_7417,call_7436,bop_7444,call_7449,bop_7454,call_7465,call_7469,bop_7495,bop_7502,])
output2 = relay.Tuple([call_7397,call_7403,const_7400,const_7401,bop_7417,call_7437,bop_7444,call_7450,bop_7454,call_7466,call_7470,bop_7495,bop_7502,])
func_7509 = relay.Function([var_7416,var_7443,var_7453,], output)
mod['func_7509'] = func_7509
mod = relay.transform.InferType()(mod)
mutated_mod['func_7509'] = func_7509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7509_call = mutated_mod.get_global_var('func_7509')
var_7511 = relay.var("var_7511", dtype = "float32", shape = (8, 20))#candidate|7511|(8, 20)|var|float32
var_7512 = relay.var("var_7512", dtype = "float64", shape = (8, 20))#candidate|7512|(8, 20)|var|float64
var_7513 = relay.var("var_7513", dtype = "float64", shape = (8, 20))#candidate|7513|(8, 20)|var|float64
call_7510 = func_7509_call(var_7511,var_7512,var_7513,)
output = call_7510
func_7514 = relay.Function([var_7511,var_7512,var_7513,], output)
mutated_mod['func_7514'] = func_7514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4615_call = mutated_mod.get_global_var('func_4615')
call_7524 = relay.TupleGetItem(func_4613_call(), 0)
call_7525 = relay.TupleGetItem(func_4615_call(), 0)
func_4765_call = mod.get_global_var('func_4765')
func_4766_call = mutated_mod.get_global_var('func_4766')
call_7529 = relay.TupleGetItem(func_4765_call(), 0)
call_7530 = relay.TupleGetItem(func_4766_call(), 0)
output = relay.Tuple([call_7524,call_7529,])
output2 = relay.Tuple([call_7525,call_7530,])
func_7533 = relay.Function([], output)
mod['func_7533'] = func_7533
mod = relay.transform.InferType()(mod)
output = func_7533()
func_7534 = relay.Function([], output)
mutated_mod['func_7534'] = func_7534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_7568 = relay.TupleGetItem(func_2193_call(), 0)
call_7569 = relay.TupleGetItem(func_2194_call(), 0)
output = relay.Tuple([call_7568,])
output2 = relay.Tuple([call_7569,])
func_7578 = relay.Function([], output)
mod['func_7578'] = func_7578
mod = relay.transform.InferType()(mod)
output = func_7578()
func_7579 = relay.Function([], output)
mutated_mod['func_7579'] = func_7579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5769_call = mod.get_global_var('func_5769')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_7584 = relay.TupleGetItem(func_5769_call(), 0)
call_7585 = relay.TupleGetItem(func_5770_call(), 0)
func_1544_call = mod.get_global_var('func_1544')
func_1545_call = mutated_mod.get_global_var('func_1545')
call_7600 = relay.TupleGetItem(func_1544_call(), 0)
call_7601 = relay.TupleGetItem(func_1545_call(), 0)
output = relay.Tuple([call_7584,call_7600,])
output2 = relay.Tuple([call_7585,call_7601,])
func_7625 = relay.Function([], output)
mod['func_7625'] = func_7625
mod = relay.transform.InferType()(mod)
mutated_mod['func_7625'] = func_7625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7625_call = mutated_mod.get_global_var('func_7625')
call_7626 = func_7625_call()
output = call_7626
func_7627 = relay.Function([], output)
mutated_mod['func_7627'] = func_7627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4487_call = mod.get_global_var('func_4487')
func_4488_call = mutated_mod.get_global_var('func_4488')
call_7682 = relay.TupleGetItem(func_4487_call(), 2)
call_7683 = relay.TupleGetItem(func_4488_call(), 2)
func_1025_call = mod.get_global_var('func_1025')
func_1029_call = mutated_mod.get_global_var('func_1029')
var_7686 = relay.var("var_7686", dtype = "float64", shape = (168,))#candidate|7686|(168,)|var|float64
call_7685 = relay.TupleGetItem(func_1025_call(relay.reshape(var_7686.astype('float64'), [7, 12, 2]), relay.reshape(var_7686.astype('float64'), [7, 12, 2]), ), 0)
call_7687 = relay.TupleGetItem(func_1029_call(relay.reshape(var_7686.astype('float64'), [7, 12, 2]), relay.reshape(var_7686.astype('float64'), [7, 12, 2]), ), 0)
func_1194_call = mod.get_global_var('func_1194')
func_1196_call = mutated_mod.get_global_var('func_1196')
call_7688 = relay.TupleGetItem(func_1194_call(), 0)
call_7689 = relay.TupleGetItem(func_1196_call(), 0)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_7694 = relay.TupleGetItem(func_2097_call(), 0)
call_7695 = relay.TupleGetItem(func_2099_call(), 0)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_7699 = relay.TupleGetItem(func_2097_call(), 0)
call_7700 = relay.TupleGetItem(func_2099_call(), 0)
func_828_call = mod.get_global_var('func_828')
func_830_call = mutated_mod.get_global_var('func_830')
call_7717 = relay.TupleGetItem(func_828_call(), 0)
call_7718 = relay.TupleGetItem(func_830_call(), 0)
output = relay.Tuple([call_7682,call_7685,var_7686,call_7688,call_7694,call_7699,call_7717,])
output2 = relay.Tuple([call_7683,call_7687,var_7686,call_7689,call_7695,call_7700,call_7718,])
func_7733 = relay.Function([var_7686,], output)
mod['func_7733'] = func_7733
mod = relay.transform.InferType()(mod)
mutated_mod['func_7733'] = func_7733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7734 = relay.var("var_7734", dtype = "float64", shape = (168,))#candidate|7734|(168,)|var|float64
func_7733_call = mutated_mod.get_global_var('func_7733')
call_7735 = func_7733_call(var_7734)
output = call_7735
func_7736 = relay.Function([var_7734], output)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5912_call = mod.get_global_var('func_5912')
func_5914_call = mutated_mod.get_global_var('func_5914')
call_7764 = relay.TupleGetItem(func_5912_call(), 0)
call_7765 = relay.TupleGetItem(func_5914_call(), 0)
output = relay.Tuple([call_7764,])
output2 = relay.Tuple([call_7765,])
func_7774 = relay.Function([], output)
mod['func_7774'] = func_7774
mod = relay.transform.InferType()(mod)
mutated_mod['func_7774'] = func_7774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7774_call = mutated_mod.get_global_var('func_7774')
call_7775 = func_7774_call()
output = call_7775
func_7776 = relay.Function([], output)
mutated_mod['func_7776'] = func_7776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7026_call = mod.get_global_var('func_7026')
func_7027_call = mutated_mod.get_global_var('func_7027')
call_7777 = func_7026_call()
call_7778 = func_7026_call()
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_7800 = relay.TupleGetItem(func_1979_call(), 0)
call_7801 = relay.TupleGetItem(func_1980_call(), 0)
output = relay.Tuple([call_7777,call_7800,])
output2 = relay.Tuple([call_7778,call_7801,])
func_7809 = relay.Function([], output)
mod['func_7809'] = func_7809
mod = relay.transform.InferType()(mod)
output = func_7809()
func_7810 = relay.Function([], output)
mutated_mod['func_7810'] = func_7810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mod.get_global_var('func_4075')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_7864 = relay.TupleGetItem(func_4075_call(), 3)
call_7865 = relay.TupleGetItem(func_4077_call(), 3)
uop_7868 = relay.sqrt(call_7864.astype('float64')) # shape=(104,)
uop_7870 = relay.sqrt(call_7865.astype('float64')) # shape=(104,)
output = relay.Tuple([uop_7868,])
output2 = relay.Tuple([uop_7870,])
func_7874 = relay.Function([], output)
mod['func_7874'] = func_7874
mod = relay.transform.InferType()(mod)
output = func_7874()
func_7875 = relay.Function([], output)
mutated_mod['func_7875'] = func_7875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mod.get_global_var('func_3691')
func_3692_call = mutated_mod.get_global_var('func_3692')
call_7900 = relay.TupleGetItem(func_3691_call(), 0)
call_7901 = relay.TupleGetItem(func_3692_call(), 0)
func_3102_call = mod.get_global_var('func_3102')
func_3105_call = mutated_mod.get_global_var('func_3105')
call_7902 = relay.TupleGetItem(func_3102_call(relay.reshape(call_7900.astype('float32'), [14, 12, 11])), 2)
call_7903 = relay.TupleGetItem(func_3105_call(relay.reshape(call_7900.astype('float32'), [14, 12, 11])), 2)
func_6333_call = mod.get_global_var('func_6333')
func_6334_call = mutated_mod.get_global_var('func_6334')
call_7906 = relay.TupleGetItem(func_6333_call(), 1)
call_7907 = relay.TupleGetItem(func_6334_call(), 1)
func_5049_call = mod.get_global_var('func_5049')
func_5051_call = mutated_mod.get_global_var('func_5051')
call_7910 = relay.TupleGetItem(func_5049_call(), 1)
call_7911 = relay.TupleGetItem(func_5051_call(), 1)
func_5257_call = mod.get_global_var('func_5257')
func_5261_call = mutated_mod.get_global_var('func_5261')
const_7923 = relay.const([-2.096288,-0.321593,8.976235,-4.401209,6.781688,3.046922,-3.689801,0.512628,1.316933,2.591130,1.530309,-0.140262,-5.559020,9.769343,5.932202,-1.744213,0.827963,-2.241262,6.065023,-0.339715,6.122754,3.553876,2.044936,-3.415178,-0.989806,-4.612263,3.380246,-5.449652,2.573196,6.087879,-7.630256,-0.910172,4.843453,-6.857910,1.468587,5.957175,-4.646205,5.241093,5.601734,-6.345410,3.675435,-4.894919,-8.830681,-6.415369,-6.539300,-6.663901,4.886164,-3.315450,5.586057,4.249550,4.903431,8.917176,9.275303,5.983738,-4.630310,-0.550101,1.715652,4.038159,4.282727,0.409029,3.020691,-0.143548,6.788280,8.577340,-4.916118,1.373839,-7.315402,4.960484,1.587520,-4.689101,9.074746,2.952162,7.060842,-4.638031,-7.727955,9.691015,0.962744,-7.969306,-0.407592,0.028749,-2.762276,0.636939,7.426326,-3.578905,4.739216,8.154729,1.661682,0.217132,7.873416,1.551921,-5.730946,2.153161,0.153927,-2.420468,-3.409272,-7.374669,-3.211807,9.035454,-8.356153,8.979773,-6.857375,-7.680300,6.146096,6.652660,4.376479,8.941717,6.563232,3.821639,-1.412086,-0.535243,4.945547,-6.150718,-2.345042,-4.597053,1.324312,6.087022,-7.951969,-0.844100,9.435975,-6.099818,-6.015703,-3.160179,-2.912167,-5.125355,5.850994,7.423441,4.967165,0.428888,5.686112,6.262618,8.161045,1.771573,-9.568342,8.506601,4.883279,0.880324,6.160377,4.222674,0.780877,1.691552,-5.018459,-1.087341,-8.413888,-6.336514,8.152449,-5.209350,-9.886819,-2.588596,8.508224,-3.238979,7.930291,7.117684,-9.140061,-8.905787,-1.230488,-6.455249,8.370917,5.543389,-2.221813,0.433931,5.830156,-3.358901,2.103480,-9.925837,8.331930,7.746802,-8.788963,0.277120,6.968962,8.659761,9.421334,6.655267,-6.626379,-6.210791,-7.450126,-7.771259,-1.199809,1.578958,2.342242,-8.280464,-0.996169,9.232631,-7.966461,6.337271,-4.946404,-0.609629,0.768540,-3.123321,-2.296390,-7.782062,8.695237,-9.902043,-7.608891,2.026081,6.388295,-8.076431,-2.759036,1.691044,-5.706444,-8.797051,6.057874,4.971477,-0.394729,-6.693687,-4.269650,1.519511,3.779800,6.132573,0.819339,3.345384,2.477890,9.766657,4.653484,-2.746005,8.393251,-8.368319,7.710164,3.127299,-8.402010,-2.511368,8.740288,-0.667830,2.548040,-2.114082,-4.476718,-1.510353,4.572091,3.985894,-7.668879,-5.335794,2.932745,-5.025895,-4.212399,-1.651735,8.619222,-1.383008,6.061083,2.002056,-4.595090,2.303223,4.995271,-8.698825,7.545344,3.187302,-7.891741,-2.803401,-5.371170,-8.869768,-9.812259,7.361725,-3.414432,-4.567288,-5.769630,-6.241506,7.339484,-0.768240,4.955819,6.128145,-7.082690,-8.647832,0.325316,-3.434295,3.759568,-2.230726,-2.657927,8.378893,4.415106,-3.775750,4.813846,8.584960,-0.791321,5.815286,-1.007776,7.855950,8.574146,1.071606,-2.961181,1.816354,0.707416,5.602485,8.167555,-9.717679,3.516935,1.521907,8.979048,0.771707,-3.679201,-5.356221,-6.110698,5.530411,2.809215,-3.576400,7.075606,-4.310823,4.378743,-1.847216,-8.836944,-5.567569,3.947000,3.422290,-3.269255,-9.739005,6.346629,2.297946,-7.208070,-5.563960,-8.264416,5.851403,-4.604864,-7.773550,-5.294019,-3.654134,3.070586,-5.871960,-1.332121,1.534297,-1.132626,4.542072,-1.423201,5.039773,-9.110548,8.782632,-4.503438,-6.700148,-4.776312,7.515605,5.479486,3.568827,-9.427861,5.712745,1.756615,7.289405,-5.511035,-5.042147,3.134586,-3.650322,9.517978,-7.579878,-9.792257,-1.612508,6.208931,6.362266,8.115790,6.245372,-8.415975,0.034202,-4.867234,-9.432579,5.337174,8.250589,-5.367817,-3.626608,4.238724,-1.933544,5.970025,-3.584248,-9.983082,4.403693,1.913846,8.980008,0.779953,9.260617,4.095833,3.484529,-8.152507,0.068156,-4.460520,-3.529783,1.172520,9.063841,4.444243,7.878255,-3.866217,-4.714239,-7.618812,6.787041,-5.623820,4.038742,-5.972252,-2.154083,1.967009,-1.678682,-9.543976,-8.519376,5.940455,-2.389471,9.993209,-9.237680,6.080239,3.893221,-6.089920,9.970078,-6.085198,-2.883970,6.321945,0.660327,-1.635307,-1.066671,8.616684,-0.541119,5.042305,8.605451,2.484153,-4.642443,-2.014568,-0.167570,-2.628529,9.629821,-9.433234,-6.621316,5.884797,-6.056833,9.379173,-0.604080,4.943967,6.325241,7.944282,-2.014910,-4.059003,7.597885,-2.916088,6.669166,-1.918581,1.143743,-9.820357,-5.461305,-5.748608,8.221009,-2.108684,-0.867297,9.830101,-8.086480,-2.160813,0.165085,1.116362,-8.957720,-0.954864,-6.037263,-6.429034,6.971039,5.693175,-5.784783,-2.420085,3.794452,1.130948,2.705418,5.009172,-1.473448,-5.117872,-2.343583,-5.753807,1.024342,-8.514968,4.990445,-2.131279,2.834094,0.358458,9.983862,-8.387794,-7.207762,-9.782161,-4.404870,6.305876,6.327243,-4.744500,3.674102,-8.403604,5.180657,-9.027951,-3.791534,1.796156,0.166494,6.608974,-1.614306,0.419699,-8.377983,-0.971311,-4.050102,9.752695,4.635635,5.679683,-5.280679,-7.441421,9.283542,1.836540,5.330080,6.400812,8.564828,1.105119,-0.822303,-7.458290,-9.934371,9.898821,-5.214537,-5.966524,-7.545651,-6.103046,-2.927307,-2.172670,8.818531,9.816617,-4.308279,6.053017,5.284724,-8.689014,-8.565586,-6.357973,9.111082,7.889087,-8.438002,-4.045620,4.462151,-1.383428,8.001066,5.568554,-3.048843,1.459157,-4.763224,-1.217190,4.835033,6.873887,6.504260,-4.394053,-9.971919,-3.577229,5.070289,1.399276,2.558955,-8.450478,2.338126,5.657129,-9.406568,-3.249487,-4.084271,5.767717,6.857926,8.934925,-0.165453,-4.795983,6.133473,-4.339052,4.351432,2.269602,1.926527,5.791371,-0.238217,-7.355615,9.039764,7.480932,9.397331,4.105254,0.284420,2.143047,-5.391952,-4.370626,-1.199597,-6.021902,3.976034,-0.703838,-3.750169,4.283653,-6.677001,5.815969,-6.658165,0.124531,3.641891,4.372867,1.632935,1.237476,-6.182705,8.586425,-0.781970,-4.951700,-5.101399,-7.676387,-6.519202,1.855794,1.663777,-6.607511,3.089232,6.273035,-1.019991,3.506972,4.852073,3.614398,6.655974,-6.804481,-3.708986,9.611418,1.065799,9.437577,2.623021,-8.010382,-2.650906,-2.657134,5.606688,-0.099971,-5.839824,7.204768,-9.556078,8.531967,-7.225336,3.401870,-1.266488,5.439672,-5.366136,9.207719,4.682571,-2.456178,-4.807194,9.923384,-9.601349,5.820521,9.969131,-4.739815,2.830721,2.167756,3.089931,1.919860,4.840253,2.292828,7.265107,8.426798,7.773532,-3.398155,0.713709,2.436806,-8.345589,-5.810706,7.098339,9.366586,3.040251,-4.165030,-5.218119,-7.471263,-5.261942,3.271578,3.834538,-8.911185,8.481984], dtype = "float32")#candidate|7923|(640,)|const|float32
call_7922 = relay.TupleGetItem(func_5257_call(relay.reshape(const_7923.astype('float32'), [16, 5, 8]), relay.reshape(const_7923.astype('float32'), [16, 5, 8]), ), 1)
call_7924 = relay.TupleGetItem(func_5261_call(relay.reshape(const_7923.astype('float32'), [16, 5, 8]), relay.reshape(const_7923.astype('float32'), [16, 5, 8]), ), 1)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_7938 = relay.TupleGetItem(func_2049_call(), 0)
call_7939 = relay.TupleGetItem(func_2050_call(), 0)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_7941 = relay.TupleGetItem(func_2097_call(), 0)
call_7942 = relay.TupleGetItem(func_2099_call(), 0)
output = relay.Tuple([call_7900,call_7902,call_7906,call_7910,call_7922,const_7923,call_7938,call_7941,])
output2 = relay.Tuple([call_7901,call_7903,call_7907,call_7911,call_7924,const_7923,call_7939,call_7942,])
func_7944 = relay.Function([], output)
mod['func_7944'] = func_7944
mod = relay.transform.InferType()(mod)
output = func_7944()
func_7945 = relay.Function([], output)
mutated_mod['func_7945'] = func_7945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3778_call = mod.get_global_var('func_3778')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_7960 = func_3778_call()
call_7961 = func_3778_call()
output = call_7960
output2 = call_7961
func_7982 = relay.Function([], output)
mod['func_7982'] = func_7982
mod = relay.transform.InferType()(mod)
mutated_mod['func_7982'] = func_7982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7982_call = mutated_mod.get_global_var('func_7982')
call_7983 = func_7982_call()
output = call_7983
func_7984 = relay.Function([], output)
mutated_mod['func_7984'] = func_7984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mod.get_global_var('func_4075')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_7992 = relay.TupleGetItem(func_4075_call(), 0)
call_7993 = relay.TupleGetItem(func_4077_call(), 0)
func_1240_call = mod.get_global_var('func_1240')
func_1243_call = mutated_mod.get_global_var('func_1243')
const_8005 = relay.const(-10, dtype = "int32")#candidate|8005|()|const|int32
var_8006 = relay.var("var_8006", dtype = "int32", shape = (125,))#candidate|8006|(125,)|var|int32
call_8004 = func_1240_call(relay.reshape(const_8005.astype('int32'), []), relay.reshape(var_8006.astype('int32'), [5, 5, 5]), )
call_8007 = func_1240_call(relay.reshape(const_8005.astype('int32'), []), relay.reshape(var_8006.astype('int32'), [5, 5, 5]), )
output = relay.Tuple([call_7992,call_8004,const_8005,var_8006,])
output2 = relay.Tuple([call_7993,call_8007,const_8005,var_8006,])
func_8011 = relay.Function([var_8006,], output)
mod['func_8011'] = func_8011
mod = relay.transform.InferType()(mod)
var_8012 = relay.var("var_8012", dtype = "int32", shape = (125,))#candidate|8012|(125,)|var|int32
output = func_8011(var_8012)
func_8013 = relay.Function([var_8012], output)
mutated_mod['func_8013'] = func_8013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4113_call = mod.get_global_var('func_4113')
func_4115_call = mutated_mod.get_global_var('func_4115')
call_8047 = func_4113_call()
call_8048 = func_4113_call()
output = call_8047
output2 = call_8048
func_8049 = relay.Function([], output)
mod['func_8049'] = func_8049
mod = relay.transform.InferType()(mod)
output = func_8049()
func_8050 = relay.Function([], output)
mutated_mod['func_8050'] = func_8050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_8067 = relay.TupleGetItem(func_240_call(), 0)
call_8068 = relay.TupleGetItem(func_241_call(), 0)
func_7774_call = mod.get_global_var('func_7774')
func_7776_call = mutated_mod.get_global_var('func_7776')
call_8073 = relay.TupleGetItem(func_7774_call(), 0)
call_8074 = relay.TupleGetItem(func_7776_call(), 0)
func_4421_call = mod.get_global_var('func_4421')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_8077 = func_4421_call()
call_8078 = func_4421_call()
output = relay.Tuple([call_8067,call_8073,call_8077,])
output2 = relay.Tuple([call_8068,call_8074,call_8078,])
func_8091 = relay.Function([], output)
mod['func_8091'] = func_8091
mod = relay.transform.InferType()(mod)
mutated_mod['func_8091'] = func_8091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8091_call = mutated_mod.get_global_var('func_8091')
call_8092 = func_8091_call()
output = call_8092
func_8093 = relay.Function([], output)
mutated_mod['func_8093'] = func_8093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7809_call = mod.get_global_var('func_7809')
func_7810_call = mutated_mod.get_global_var('func_7810')
call_8126 = relay.TupleGetItem(func_7809_call(), 1)
call_8127 = relay.TupleGetItem(func_7810_call(), 1)
output = call_8126
output2 = call_8127
func_8159 = relay.Function([], output)
mod['func_8159'] = func_8159
mod = relay.transform.InferType()(mod)
output = func_8159()
func_8160 = relay.Function([], output)
mutated_mod['func_8160'] = func_8160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4765_call = mod.get_global_var('func_4765')
func_4766_call = mutated_mod.get_global_var('func_4766')
call_8176 = relay.TupleGetItem(func_4765_call(), 0)
call_8177 = relay.TupleGetItem(func_4766_call(), 0)
output = call_8176
output2 = call_8177
func_8189 = relay.Function([], output)
mod['func_8189'] = func_8189
mod = relay.transform.InferType()(mod)
output = func_8189()
func_8190 = relay.Function([], output)
mutated_mod['func_8190'] = func_8190
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8210 = relay.const([[[-5.816943,6.241313,-0.776612,5.789819,-1.118615,2.264114],[5.562701,8.103441,4.055330,-7.461352,2.235025,9.312905],[4.810904,-8.998686,0.178757,-9.324521,8.429296,-3.291658],[0.882694,7.809222,6.170876,8.188621,-3.719841,-3.891044],[-0.597269,8.602446,-1.770089,5.735945,3.633743,4.746430],[9.133333,-5.421518,-0.548749,3.645082,-8.240933,4.175296],[7.298684,-5.320147,6.193453,8.938595,7.653954,4.922496],[4.918670,2.826015,-2.670690,2.693011,-8.271672,-8.658707],[1.280725,-6.934724,-6.263757,3.243644,6.474215,-4.571044],[2.118133,-8.566799,-2.579745,-3.989330,-7.052555,-1.755098],[-4.285386,1.748649,0.120706,5.368504,9.946021,-9.691106],[0.835722,6.193015,5.225664,7.478798,1.286514,1.972463],[2.100953,8.052002,-5.931229,1.690860,-9.757437,0.565891],[-6.378700,-3.889940,7.744449,-5.097887,-1.502160,8.160329],[4.818574,-9.726596,-3.119716,-8.913264,7.348809,-8.879391],[-9.169284,4.099706,-8.106952,-9.401262,8.084414,-3.623546]],[[-7.117201,-6.833796,-2.073760,-2.745582,-9.650424,-7.501430],[8.600676,9.470080,-4.091552,-6.716701,7.994989,9.220153],[-1.205386,-5.896589,-7.372981,-7.402049,0.277426,-2.950774],[-0.270895,6.758632,3.519475,-3.247011,0.271069,-4.443922],[1.460497,-5.926557,-3.299923,-9.765202,3.425576,-9.227983],[1.293147,-1.541351,2.598553,-6.577923,-4.656527,7.656299],[0.003762,-0.695523,6.585105,-0.790670,1.247311,9.825529],[2.542131,-6.346990,-1.083479,-4.933201,-8.512198,5.831681],[0.742423,9.929970,2.495224,-7.974767,-2.575749,1.428490],[2.404343,-3.596946,-3.484759,-8.028006,4.347275,8.165779],[6.063434,4.255522,-2.182070,-1.325376,-3.594802,0.216733],[-4.621983,-1.792726,-7.628325,-9.977702,-2.511845,-4.199444],[-9.164355,-1.351938,-5.404026,5.988300,3.815898,3.310128],[9.241980,-8.332673,5.557914,-2.474358,4.772034,7.873450],[-9.582230,8.387363,-7.670480,-8.603613,-3.655041,0.463336],[-2.488408,-9.049696,5.685377,6.469350,9.828867,5.481596]],[[-4.747637,-8.195061,-5.216158,9.355978,3.064470,7.774057],[7.188229,-5.273362,-5.363194,-7.245314,4.543130,6.277945],[-2.743861,9.995459,-5.456763,-8.569941,-6.072004,-9.541697],[-6.309939,-0.540093,-4.770412,-4.554281,4.766222,3.367241],[-7.110589,-6.146483,-7.229962,-8.657916,-8.549254,1.758444],[-6.277916,8.778689,-8.976946,-4.218619,-6.390782,0.712646],[-9.984679,-4.321011,-7.179099,-1.873412,8.725763,-6.201250],[-0.133620,-8.021551,8.164128,5.642106,5.729309,-1.792190],[-2.819717,1.213760,6.353389,7.347002,-0.506207,6.483581],[3.492218,8.439314,-2.754659,-5.461339,-9.076417,-8.902956],[-3.584345,-1.475754,-2.093203,-2.017573,4.510409,6.153022],[-1.712230,-8.774114,-9.118150,9.345675,6.512041,-3.589051],[3.603380,-0.102873,5.592660,9.966067,-7.829924,-1.756149],[-8.700579,5.493176,-8.939022,9.556420,6.074078,6.394374],[2.813150,1.990164,7.592463,2.838373,9.508822,-2.695443],[-1.609858,-1.952203,3.665752,3.694825,4.011982,6.669757]],[[-2.096837,-2.829886,8.681115,3.356285,1.697387,5.593041],[6.104285,6.692951,4.043712,2.753768,3.472890,-7.486807],[-1.808693,-3.417387,1.074563,5.819611,-6.950840,8.977422],[1.699216,2.375173,-3.211957,2.127825,1.080027,-5.906446],[1.263047,-9.134190,6.855225,4.169261,-9.892972,-7.788146],[-2.384114,2.392509,0.671318,-4.075947,-3.771651,4.956688],[-0.164185,-3.230162,2.175018,-2.731693,-1.419668,9.339590],[-8.180693,-3.298103,8.011666,-7.885031,-5.797963,-0.716000],[-9.629545,9.746537,-7.630228,1.821483,1.787843,-8.281392],[-5.867595,2.700702,8.949105,5.918473,-8.039331,0.656728],[-5.134392,2.349348,1.875584,-9.673651,-2.237411,-5.443380],[7.369387,4.643764,4.882700,6.798387,3.612227,1.231751],[-6.369017,-9.553889,-0.404400,-9.401407,5.604452,4.664390],[0.740352,-8.147770,8.936422,0.182815,5.163923,-7.819841],[-9.512871,-4.236605,-5.321433,6.510042,-7.239035,9.331955],[4.018298,9.316302,7.129098,2.312825,3.325190,-8.570799]],[[4.073940,3.819834,4.474576,4.022892,5.083930,5.061007],[5.469659,-0.409766,-6.248282,-6.256033,2.922112,-2.190189],[6.455494,-6.479088,9.188013,4.106871,-6.637399,8.360491],[-1.490947,4.877037,3.273662,-2.555207,5.260815,-3.383734],[-4.503608,5.472148,3.001408,6.011871,-8.648400,1.949615],[-2.694652,-4.310830,1.735197,-1.172434,-6.234983,9.545353],[-7.466017,6.062516,4.677853,3.082711,-9.381034,9.596541],[-8.097380,-4.147888,-9.436609,9.193688,9.104803,1.076427],[0.831555,-9.169040,-2.110034,0.686826,4.000369,-9.887584],[8.006780,2.647171,1.866138,6.219552,3.780490,-2.763799],[0.759554,-3.828816,2.909043,9.879566,-5.157888,-6.798102],[5.377049,1.613464,-2.882130,3.882198,-4.295851,-0.243291],[-8.895208,7.974945,6.172793,0.719762,1.220643,4.754960],[-6.968678,-2.379381,4.970447,9.657899,-4.554543,0.518519],[-4.318412,-2.452534,0.663509,-4.647695,-4.739228,9.732126],[7.029752,-0.604593,9.032159,1.839026,-4.673930,-4.731178]],[[8.088233,5.421242,-4.271115,-3.089097,6.991014,5.474770],[7.642405,-6.324840,-8.593227,-4.548844,0.405640,-5.134159],[-4.409552,-9.552287,3.549014,-3.516301,-3.452822,2.285020],[6.692617,5.832169,-3.531987,0.827106,4.403874,-2.447494],[-0.407999,8.014282,6.046727,-1.907527,-7.643168,8.152211],[1.187027,-5.697668,6.412488,-4.571569,8.816325,0.927788],[4.075056,-9.340056,0.264258,-2.238259,2.801940,0.159299],[9.214219,-4.870238,-4.532865,-9.024832,-2.089060,4.941476],[-0.346812,-9.326481,4.234153,7.221564,-8.476851,3.925709],[-6.180007,2.171402,-6.895151,6.669657,-2.262258,1.896587],[0.710157,-6.856416,-4.047945,8.707913,-0.922936,-6.072711],[2.792189,-7.291411,3.077983,5.212051,7.182937,8.985712],[9.971841,9.978423,5.400164,-4.242320,-5.615794,-4.171560],[-0.289436,1.989870,1.604094,9.867164,-1.198224,-0.569361],[8.136200,7.461222,5.589697,-9.812964,0.337439,-2.574907],[-5.272841,9.261923,-6.260250,6.726369,9.194954,3.994332]],[[0.821315,-5.147385,-1.754493,2.487330,-3.700994,-2.490325],[-5.098489,7.561817,-4.750720,-6.166113,-9.725441,-2.312694],[6.866691,-2.290970,-9.444782,6.828996,-1.884650,0.313437],[-8.996167,-7.153082,-3.289637,-1.256243,-7.866712,-9.325467],[-1.053401,6.247085,7.681713,3.362906,-3.648256,1.864721],[8.464318,-6.452701,-6.295032,-8.397135,-9.590887,-3.513628],[3.805941,7.574210,-5.355840,-9.212576,-6.524671,0.699811],[5.576933,-0.535205,-9.250788,5.249498,-1.417199,7.115350],[0.131894,-1.940507,4.773134,-8.726901,4.913402,-4.220062],[-1.205733,-0.159707,-6.783776,-1.777016,-9.561458,0.314085],[-2.499010,-0.151480,-8.943074,-1.028212,9.736056,-7.367685],[0.983076,6.347156,-5.681426,-9.636077,3.342447,-8.803300],[-4.684898,1.044382,3.823075,-1.498610,3.827847,4.965955],[-3.128308,-7.905895,-4.087353,-4.461832,8.268837,-9.362156],[0.738715,-2.559336,-5.963371,8.759107,0.253184,2.280061],[9.791171,6.038068,5.921359,2.681136,-8.512803,3.251509]],[[-7.645940,-9.998171,-0.644366,1.770811,8.113535,-0.526771],[-6.613723,-5.115330,-4.132195,1.327429,4.218592,9.746240],[3.703295,6.083498,-4.502223,-1.746940,-1.713829,-9.038648],[8.828868,5.346059,-6.627188,-6.675556,7.639633,-4.474678],[3.643023,8.885947,-5.653156,6.159083,4.646846,5.754277],[1.052871,-5.297196,-6.887931,-0.789137,4.569403,-4.045465],[1.843265,-9.287177,-0.920052,3.654556,-6.122193,-4.232297],[7.961604,-5.557137,-8.543587,-6.836076,7.988732,-9.212564],[5.380306,-1.985024,-7.371515,-9.896411,0.518400,-9.746547],[-5.107584,2.265391,-8.318132,0.852146,3.181907,1.092270],[-6.502126,-5.553559,-5.289447,9.096264,4.904270,-2.002796],[4.349057,-0.793364,-7.561087,-3.217320,-7.951744,4.699299],[5.676305,-9.456313,0.262206,1.664572,4.710071,9.523387],[-2.763380,2.855344,-9.594596,1.658196,7.132441,6.179692],[-9.537134,-2.001182,2.324771,0.796143,-0.612269,-7.555578],[0.387177,0.100090,4.164966,0.117809,-1.972401,5.767898]],[[-5.684129,-4.078455,-1.713530,4.017909,3.675151,0.256237],[-3.374326,3.120014,-5.251393,-2.583852,6.104946,-8.602788],[-0.339555,-0.064442,1.237493,-0.024897,-6.498604,1.425652],[-4.071245,9.901561,-2.211281,-5.338627,-5.785600,4.986552],[8.594908,-2.775861,-5.193958,5.727327,-6.121391,8.795203],[-4.521610,-4.029918,-9.549695,8.227323,-9.444771,-5.926057],[-2.001596,0.374953,-4.781722,0.075231,-7.029949,5.126536],[6.169025,-7.410044,-7.560551,0.236605,3.519933,-6.232016],[1.964935,-4.995297,-4.009321,-4.371888,0.672310,6.826041],[-8.322937,-2.948590,3.744676,2.987817,-6.643550,-4.889910],[5.880604,9.950340,0.283920,-1.969288,-0.289226,2.135345],[5.673678,8.566479,8.399372,7.447452,9.862777,0.371032],[9.314897,4.053261,-1.820697,-7.667021,9.779269,-3.181346],[9.776980,8.648743,8.371761,3.645855,-3.721402,7.639136],[4.002641,-4.773347,-8.525195,4.782255,-0.645827,-4.760288],[3.312276,5.567029,-0.557414,7.748732,-2.007442,6.838559]],[[0.594738,9.863368,8.092675,-1.873523,7.420656,-1.036550],[-1.094537,9.191192,-9.129576,3.964871,-1.167457,5.328293],[-6.461648,5.343851,4.437361,-9.049828,1.653692,1.584175],[-1.693116,9.265261,-0.075646,-8.722823,-0.031016,6.257662],[6.824249,-3.646103,2.079984,-3.436611,-5.544987,0.895603],[5.964383,4.258669,8.317163,8.823923,-7.706045,7.015039],[-3.571116,6.365228,1.622629,-0.359999,1.304601,-8.619063],[-0.717376,-8.510692,-1.427651,-0.061233,0.461345,-0.820649],[-5.246151,-7.844685,7.929805,0.441205,4.544765,-1.476335],[-6.310490,7.269425,3.037946,-6.311373,1.892724,-3.270160],[-9.497657,5.478419,-3.945958,-5.431069,2.215970,1.944726],[-4.301676,6.875566,6.253669,-3.459188,-1.487500,9.318088],[-8.608511,2.614600,-7.503266,2.067298,-6.666927,-1.011178],[1.198459,-1.346504,-0.492407,7.545822,-6.871729,-5.167090],[-5.060107,2.673835,3.445341,-0.589895,9.498680,0.150034],[5.915608,-0.160391,4.761426,0.540340,-0.443515,3.770723]],[[9.458324,7.149165,2.610841,-0.787227,3.213474,-7.227268],[-0.634475,-5.494943,-8.130168,-8.324776,-8.911996,-9.881745],[0.337854,-8.562687,0.470228,-3.217483,-1.802613,-7.455568],[-4.199938,9.209676,7.403323,-5.214431,-0.614753,0.322293],[-4.369369,4.959671,-3.775364,-9.058049,2.401182,2.921211],[-8.305386,5.796598,-1.350912,5.442348,-3.655091,-9.928147],[-9.663908,-8.194464,9.545271,-8.756263,8.938244,-2.486680],[8.023407,1.449686,-8.132930,5.802674,9.097715,6.534388],[-8.562088,-1.933346,-6.479001,-3.677840,6.112009,2.343455],[-9.503293,-8.623743,5.748523,-0.121006,6.718347,9.917919],[-5.034989,-5.648952,-2.921328,1.215762,-7.244640,3.223091],[-5.454871,-9.309375,-4.931311,-5.700759,6.331787,-4.673660],[-6.715222,8.718983,6.191925,8.944553,5.124809,2.526544],[3.120187,-3.939108,-3.548225,-8.144095,-9.519124,-7.538770],[8.391699,2.693970,6.351374,4.961706,-5.409146,2.496814],[-3.285241,-5.365561,-0.905184,6.236274,-9.062715,-2.811619]],[[5.473073,-2.793218,2.341770,1.658063,2.451721,5.541569],[-1.977748,-9.535201,7.463312,-3.123205,-6.360796,8.132666],[-1.864143,4.142956,-3.651949,6.165957,-4.132317,7.260228],[-4.033206,-6.207887,-0.821858,-2.616539,6.490949,3.391724],[-3.678115,-5.236724,-6.135126,-6.264197,-1.091849,-7.293614],[8.216443,-7.750185,4.508441,5.367186,-4.689230,5.649565],[8.766616,-1.963549,5.590764,1.563693,4.413768,-1.048335],[2.345686,4.574352,-0.480061,-8.630461,8.110321,-9.947016],[3.522229,8.312415,0.361903,-2.738892,-1.273012,9.390614],[-7.610702,-8.598790,-9.899546,-3.335097,9.758770,3.321060],[9.391632,8.134427,5.679560,6.587476,5.225446,-7.729112],[7.786678,5.411571,5.556216,4.442525,9.606611,-2.385884],[0.599423,2.179087,-9.786901,-0.558785,-5.836952,-2.220500],[4.656310,-9.783634,-7.373880,-5.105746,2.294075,-8.394946],[-1.004415,4.920487,1.508944,-1.348084,-2.127782,0.062015],[-3.036424,-6.735362,4.918905,-4.603233,-6.929954,7.892453]],[[-4.279330,-0.511098,2.736089,-2.694954,3.447499,5.049369],[0.881555,5.482640,3.628437,-6.717823,-0.282889,-6.191294],[-5.592628,7.047352,-1.613200,5.005538,-3.780864,-3.336836],[-1.902293,4.218783,-0.360674,-6.003213,-8.369870,5.926814],[-9.028586,-0.395314,-5.423348,-4.843929,1.119221,3.090963],[-6.681918,-8.719931,7.969669,-6.130486,-8.088369,5.405657],[-2.247236,-5.351499,2.236812,-4.044265,-1.306272,-0.656111],[-8.484884,7.187916,-2.991010,4.188625,1.456539,5.234792],[-5.774006,6.635698,-5.105164,-7.382543,-3.145998,2.047982],[-1.981589,-3.401281,-3.128488,-9.334461,1.615113,5.677543],[-7.852925,6.027696,-1.326175,-6.024940,-6.607538,0.015374],[-7.247988,-9.912682,1.253240,-9.648333,0.105664,-8.408814],[-1.023415,-6.258913,-6.940367,9.277084,-8.493292,-5.362763],[-8.157839,-1.554837,-2.819646,9.872873,7.964141,-0.185648],[6.040687,-6.648325,4.975004,8.364845,6.266352,8.786281],[2.710985,0.415493,0.847081,-0.264580,-9.865446,6.036039]],[[3.791230,-3.520631,-0.354127,5.956528,4.482994,-5.061230],[-6.418915,-0.268153,-9.291362,8.758754,6.576212,3.706045],[-5.080552,-6.120407,-5.987705,-4.218985,-8.560980,-5.349728],[4.815559,-3.793290,-6.508621,8.503364,-3.648815,-2.078064],[4.211391,-9.182606,-7.180636,-1.949730,-7.441372,-8.384258],[-6.230687,-7.296692,9.319954,3.895156,-0.591585,9.344455],[-4.940686,5.665184,1.926853,7.621217,5.847736,3.974461],[-1.396383,-3.374081,-7.631354,1.120909,4.920303,6.462150],[7.600061,5.300821,-4.153801,-5.169580,8.061541,-8.884516],[2.524624,-9.021305,1.990667,2.605231,6.468754,-0.636594],[-5.282058,-3.304812,5.111246,-2.602653,-6.659366,-6.662377],[-8.803935,3.639501,-8.410900,-4.400550,-6.028150,-7.104104],[-5.684842,3.242501,-9.855251,6.937675,3.687355,-4.698529],[2.837871,2.496961,4.760135,7.706626,-1.899341,7.283721],[-1.802636,8.816576,-2.192291,-9.126896,8.983629,-0.429429],[-6.417074,-5.221122,8.951989,-3.441463,5.112837,-6.668332]],[[-1.339189,-0.416216,5.624808,7.688926,-4.913884,-6.337009],[2.415458,2.329818,-1.805132,-9.252862,-8.675038,-4.436706],[5.608866,-6.082349,2.139231,3.222630,-4.235385,-1.586739],[-6.847930,2.965863,-2.712283,8.796785,8.566873,-1.092740],[4.152730,-6.992096,4.662590,4.764404,3.659265,9.362130],[6.781262,-9.211276,2.281307,4.079600,0.826684,-4.145414],[-2.146231,9.052261,-2.928456,4.653366,-8.822321,3.610802],[-4.562780,-8.096919,6.707141,-5.539965,3.600297,-8.749578],[-2.829272,-1.469965,4.366482,1.143432,-3.323172,1.505333],[9.954336,-2.439124,-3.996524,2.916905,0.238295,-4.181447],[-7.559079,2.399957,-4.810563,-6.747924,6.581601,-5.502918],[2.001649,-8.656894,-8.935130,-3.800339,-9.311705,9.325162],[2.019269,6.060780,-0.686447,5.703944,1.608717,-1.274672],[-4.238586,-4.352935,1.436032,-0.158986,-8.417746,4.022383],[-5.978627,-1.652306,-6.729097,1.744392,8.858560,-3.228073],[9.674509,-4.138719,-5.615258,-0.006787,0.148650,-0.493952]]], dtype = "float32")#candidate|8210|(15, 16, 6)|const|float32
uop_8211 = relay.erf(const_8210.astype('float32')) # shape=(15, 16, 6)
func_1284_call = mod.get_global_var('func_1284')
func_1287_call = mutated_mod.get_global_var('func_1287')
var_8219 = relay.var("var_8219", dtype = "float32", shape = (35, 1))#candidate|8219|(35, 1)|var|float32
call_8218 = relay.TupleGetItem(func_1284_call(relay.reshape(var_8219.astype('float32'), [7, 1, 5])), 0)
call_8220 = relay.TupleGetItem(func_1287_call(relay.reshape(var_8219.astype('float32'), [7, 1, 5])), 0)
output = relay.Tuple([uop_8211,call_8218,var_8219,])
output2 = relay.Tuple([uop_8211,call_8220,var_8219,])
func_8225 = relay.Function([var_8219,], output)
mod['func_8225'] = func_8225
mod = relay.transform.InferType()(mod)
var_8226 = relay.var("var_8226", dtype = "float32", shape = (35, 1))#candidate|8226|(35, 1)|var|float32
output = func_8225(var_8226)
func_8227 = relay.Function([var_8226], output)
mutated_mod['func_8227'] = func_8227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8229 = relay.var("var_8229", dtype = "uint32", shape = ())#candidate|8229|()|var|uint32
var_8230 = relay.var("var_8230", dtype = "uint32", shape = (16, 3, 15))#candidate|8230|(16, 3, 15)|var|uint32
bop_8231 = relay.not_equal(var_8229.astype('bool'), var_8230.astype('bool')) # shape=(16, 3, 15)
output = bop_8231
output2 = bop_8231
func_8237 = relay.Function([var_8229,var_8230,], output)
mod['func_8237'] = func_8237
mod = relay.transform.InferType()(mod)
var_8238 = relay.var("var_8238", dtype = "uint32", shape = ())#candidate|8238|()|var|uint32
var_8239 = relay.var("var_8239", dtype = "uint32", shape = (16, 3, 15))#candidate|8239|(16, 3, 15)|var|uint32
output = func_8237(var_8238,var_8239,)
func_8240 = relay.Function([var_8238,var_8239,], output)
mutated_mod['func_8240'] = func_8240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mod.get_global_var('func_4889')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_8359 = relay.TupleGetItem(func_4889_call(), 0)
call_8360 = relay.TupleGetItem(func_4891_call(), 0)
func_6937_call = mod.get_global_var('func_6937')
func_6940_call = mutated_mod.get_global_var('func_6940')
const_8373 = relay.const([[-4.912394,-1.719387,-7.136455,1.595194,-7.152833,5.934636,6.377994,0.885531,-9.736562,7.454133,-0.292914,7.015325,6.525512,6.495562,9.750082,-8.335381,-4.572242,6.921946,7.338187,8.263415,1.144742,5.127788,-6.741042,7.096676,-4.990574,-2.822272,-6.483323,7.460325,-1.321020,2.330472,9.446747,3.986137,8.769867,-0.992882,2.015341,-4.957738,-2.635345,-5.228055,-4.757525,-3.190429,-7.854896,8.037091,-2.019424,-1.848749,-8.867036,-1.098396,-7.468272,9.622241,-8.559381,-1.303341,2.501884,-3.768821,-8.689179,-3.095044,-3.286875,0.404055,6.606333,8.574738,0.434069,-3.368460,-1.168511,-7.007195,8.045057,-3.554048,5.875952,5.996705,7.013718,7.969570,-5.051018,-4.838055,-5.068422,0.165469,8.529965,8.875823,2.630198,-8.349985,-1.262964,-1.918178,-8.917991,-0.773607,4.614984,0.832451,4.933918,-2.441827,-0.177758,4.599625,-0.369049,5.194622,5.372830,1.105653,-8.535562,-6.568087,-7.853926,-9.656318,2.020208,-2.361632,2.093445,8.813240,-3.067149,-5.417904,8.322986,3.377373,0.728974,9.296204]], dtype = "float32")#candidate|8373|(1, 104)|const|float32
call_8372 = relay.TupleGetItem(func_6937_call(relay.reshape(const_8373.astype('float32'), [26, 4])), 1)
call_8374 = relay.TupleGetItem(func_6940_call(relay.reshape(const_8373.astype('float32'), [26, 4])), 1)
func_7733_call = mod.get_global_var('func_7733')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_8377 = relay.TupleGetItem(func_7733_call(relay.reshape(call_8372.astype('float64'), [168,])), 0)
call_8378 = relay.TupleGetItem(func_7736_call(relay.reshape(call_8372.astype('float64'), [168,])), 0)
output = relay.Tuple([call_8359,call_8372,const_8373,call_8377,])
output2 = relay.Tuple([call_8360,call_8374,const_8373,call_8378,])
func_8384 = relay.Function([], output)
mod['func_8384'] = func_8384
mod = relay.transform.InferType()(mod)
output = func_8384()
func_8385 = relay.Function([], output)
mutated_mod['func_8385'] = func_8385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6877_call = mod.get_global_var('func_6877')
func_6878_call = mutated_mod.get_global_var('func_6878')
call_8461 = func_6877_call()
call_8462 = func_6877_call()
output = relay.Tuple([call_8461,])
output2 = relay.Tuple([call_8462,])
func_8479 = relay.Function([], output)
mod['func_8479'] = func_8479
mod = relay.transform.InferType()(mod)
output = func_8479()
func_8480 = relay.Function([], output)
mutated_mod['func_8480'] = func_8480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4797_call = mod.get_global_var('func_4797')
func_4799_call = mutated_mod.get_global_var('func_4799')
call_8495 = relay.TupleGetItem(func_4797_call(), 0)
call_8496 = relay.TupleGetItem(func_4799_call(), 0)
output = relay.Tuple([call_8495,])
output2 = relay.Tuple([call_8496,])
func_8502 = relay.Function([], output)
mod['func_8502'] = func_8502
mod = relay.transform.InferType()(mod)
output = func_8502()
func_8503 = relay.Function([], output)
mutated_mod['func_8503'] = func_8503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8596 = relay.var("var_8596", dtype = "float64", shape = (2, 9, 5))#candidate|8596|(2, 9, 5)|var|float64
uop_8597 = relay.sinh(var_8596.astype('float64')) # shape=(2, 9, 5)
output = relay.Tuple([uop_8597,])
output2 = relay.Tuple([uop_8597,])
func_8599 = relay.Function([var_8596,], output)
mod['func_8599'] = func_8599
mod = relay.transform.InferType()(mod)
var_8600 = relay.var("var_8600", dtype = "float64", shape = (2, 9, 5))#candidate|8600|(2, 9, 5)|var|float64
output = func_8599(var_8600)
func_8601 = relay.Function([var_8600], output)
mutated_mod['func_8601'] = func_8601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6953_call = mod.get_global_var('func_6953')
func_6954_call = mutated_mod.get_global_var('func_6954')
call_8629 = func_6953_call()
call_8630 = func_6953_call()
output = call_8629
output2 = call_8630
func_8653 = relay.Function([], output)
mod['func_8653'] = func_8653
mod = relay.transform.InferType()(mod)
mutated_mod['func_8653'] = func_8653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8653_call = mutated_mod.get_global_var('func_8653')
call_8654 = func_8653_call()
output = call_8654
func_8655 = relay.Function([], output)
mutated_mod['func_8655'] = func_8655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mod.get_global_var('func_207')
func_209_call = mutated_mod.get_global_var('func_209')
call_8691 = relay.TupleGetItem(func_207_call(), 2)
call_8692 = relay.TupleGetItem(func_209_call(), 2)
func_6219_call = mod.get_global_var('func_6219')
func_6221_call = mutated_mod.get_global_var('func_6221')
call_8695 = relay.TupleGetItem(func_6219_call(), 1)
call_8696 = relay.TupleGetItem(func_6221_call(), 1)
output = relay.Tuple([call_8691,call_8695,])
output2 = relay.Tuple([call_8692,call_8696,])
func_8704 = relay.Function([], output)
mod['func_8704'] = func_8704
mod = relay.transform.InferType()(mod)
mutated_mod['func_8704'] = func_8704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8704_call = mutated_mod.get_global_var('func_8704')
call_8705 = func_8704_call()
output = call_8705
func_8706 = relay.Function([], output)
mutated_mod['func_8706'] = func_8706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mod.get_global_var('func_1930')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_8750 = relay.TupleGetItem(func_1930_call(), 0)
call_8751 = relay.TupleGetItem(func_1931_call(), 0)
func_8011_call = mod.get_global_var('func_8011')
func_8013_call = mutated_mod.get_global_var('func_8013')
const_8761 = relay.const([-3,5,5,4,-10,-2,-4,6,1,-8,5,8,9,2,1,2,-2,-7,7,-8,-6,5,3,-3,-9,1,-2,10,1,7,-1,-7,7,10,7,-1,8,10,-1,10,-3,4,2,-7,3,-8,-4,-7,-8,7,9,-8,-5,-10,3,-6,3,-2,-3,-9,-4,3,1,-8,-9,6,-4,4,-3,6,6,-2,2,-3,2,1,8,-3,6,-10,8,-2,10,-2,4,-1,-1,-7,-9,-8,-2,-7,5,-9,-3,5,-7,-4,6,-4,-5,9,9,1,-8,-7,9,1,5,-6,-3,8,1,8,9,8,-6,1,6,-1,10,5,3,-7,9], dtype = "int32")#candidate|8761|(125,)|const|int32
call_8760 = relay.TupleGetItem(func_8011_call(relay.reshape(const_8761.astype('int32'), [125,])), 1)
call_8762 = relay.TupleGetItem(func_8013_call(relay.reshape(const_8761.astype('int32'), [125,])), 1)
output = relay.Tuple([call_8750,call_8760,const_8761,])
output2 = relay.Tuple([call_8751,call_8762,const_8761,])
func_8770 = relay.Function([], output)
mod['func_8770'] = func_8770
mod = relay.transform.InferType()(mod)
output = func_8770()
func_8771 = relay.Function([], output)
mutated_mod['func_8771'] = func_8771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_8799 = relay.TupleGetItem(func_2097_call(), 0)
call_8800 = relay.TupleGetItem(func_2099_call(), 0)
func_7126_call = mod.get_global_var('func_7126')
func_7128_call = mutated_mod.get_global_var('func_7128')
const_8806 = relay.const([[1.500311,4.522953,0.895577,-7.788986,-6.054035,5.653920,-8.628229,-8.730080,8.789874,-6.574732,-6.015769,7.784262,-0.675500,-3.819423,9.492274,-2.737619,-6.909868,4.654983,-7.589079,-5.359788,8.559404,9.159385,1.723473,-6.107074,-7.502926,-0.212620,8.251628,-9.490026,-2.004770,-4.759792,7.519222,-5.921480,-5.725512,-2.835263,-1.105219,7.630498,-4.886344,1.896668,2.848703,-0.471584,-7.328424,-5.013890,9.861772,9.773826,8.576053,3.213158,-0.880865,2.196216,5.572404,2.218702,-2.997932,7.327686,-1.175935,-6.668208,-1.237797,9.977753,3.998134,4.702518,-4.752880,3.092344],[-5.380491,-8.782328,-0.874486,-0.384890,0.299896,4.998662,-6.157772,4.981818,2.994812,-2.284015,-7.500233,-0.884191,-6.387993,-9.624727,-1.386641,-5.767208,3.883924,-9.652462,-5.822201,8.066699,-1.006161,3.382125,-2.592251,5.387563,3.210781,2.299069,0.020303,1.338813,0.740764,-0.268207,1.172732,8.433766,-4.091197,4.520753,-3.630352,-3.360067,1.893308,1.129909,-6.050845,-3.921606,0.458514,-5.063406,4.926081,-5.716470,1.662373,5.489819,0.223392,6.784153,-3.114178,7.624237,-9.269810,1.037022,6.430442,6.418115,-3.773740,9.984275,8.506169,-1.429296,-8.806217,-7.427812],[-7.113406,-1.065228,-6.691040,4.456992,-9.171740,3.404517,-9.907378,1.112596,9.032920,-1.573558,-5.196614,0.916986,1.175329,-0.274885,-8.905373,6.499771,-2.293860,0.662976,-3.013737,7.731124,9.625425,4.527075,-1.635221,3.762652,3.824462,9.640088,-0.063641,8.684818,-2.351304,9.095624,-5.268751,4.563205,-6.141139,6.849406,6.065302,-6.705666,9.695537,0.266016,-4.486186,-4.797265,-2.441715,0.932360,-5.022591,-3.298485,-8.529231,-8.112417,-3.294311,-8.776623,-8.297343,6.379975,-0.269502,-0.018579,7.549366,3.547649,-2.239246,3.975358,4.390188,8.788866,-2.880419,5.847526],[6.445580,7.137728,9.963181,5.852580,-6.529658,-4.748279,-9.786022,-0.945624,-8.729171,2.519705,2.427588,9.610859,8.395087,1.672806,-0.031005,-8.910828,-2.881127,9.439675,8.363508,1.959671,-3.543354,5.235850,-0.960883,-2.109804,5.593435,4.882024,1.579426,-7.499000,-1.859504,-1.591573,-5.122796,-9.577165,-0.491535,-0.902307,-4.612803,0.803573,6.096651,0.764354,9.519929,-6.639059,0.495513,0.405807,-7.004519,6.409423,8.556833,5.388072,0.632473,-6.214480,-6.552289,9.149990,-6.501721,1.086744,9.798030,0.654763,-8.736780,-7.790342,-2.051616,-8.838704,8.599137,2.711699]], dtype = "float32")#candidate|8806|(4, 60)|const|float32
call_8805 = relay.TupleGetItem(func_7126_call(relay.reshape(const_8806.astype('float32'), [4, 5, 12])), 0)
call_8807 = relay.TupleGetItem(func_7128_call(relay.reshape(const_8806.astype('float32'), [4, 5, 12])), 0)
output = relay.Tuple([call_8799,call_8805,const_8806,])
output2 = relay.Tuple([call_8800,call_8807,const_8806,])
func_8830 = relay.Function([], output)
mod['func_8830'] = func_8830
mod = relay.transform.InferType()(mod)
mutated_mod['func_8830'] = func_8830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8830_call = mutated_mod.get_global_var('func_8830')
call_8831 = func_8830_call()
output = call_8831
func_8832 = relay.Function([], output)
mutated_mod['func_8832'] = func_8832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_8841 = func_437_call()
call_8842 = func_437_call()
output = relay.Tuple([call_8841,])
output2 = relay.Tuple([call_8842,])
func_8847 = relay.Function([], output)
mod['func_8847'] = func_8847
mod = relay.transform.InferType()(mod)
output = func_8847()
func_8848 = relay.Function([], output)
mutated_mod['func_8848'] = func_8848
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8849 = relay.const(-10, dtype = "uint32")#candidate|8849|()|const|uint32
var_8850 = relay.var("var_8850", dtype = "uint32", shape = (4, 15, 2))#candidate|8850|(4, 15, 2)|var|uint32
bop_8851 = relay.bitwise_xor(const_8849.astype('uint32'), var_8850.astype('uint32')) # shape=(4, 15, 2)
uop_8859 = relay.log10(bop_8851.astype('float64')) # shape=(4, 15, 2)
func_3197_call = mod.get_global_var('func_3197')
func_3199_call = mutated_mod.get_global_var('func_3199')
call_8863 = relay.TupleGetItem(func_3197_call(), 0)
call_8864 = relay.TupleGetItem(func_3199_call(), 0)
output = relay.Tuple([uop_8859,call_8863,])
output2 = relay.Tuple([uop_8859,call_8864,])
func_8881 = relay.Function([var_8850,], output)
mod['func_8881'] = func_8881
mod = relay.transform.InferType()(mod)
mutated_mod['func_8881'] = func_8881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8882 = relay.var("var_8882", dtype = "uint32", shape = (4, 15, 2))#candidate|8882|(4, 15, 2)|var|uint32
func_8881_call = mutated_mod.get_global_var('func_8881')
call_8883 = func_8881_call(var_8882)
output = call_8883
func_8884 = relay.Function([var_8882], output)
mutated_mod['func_8884'] = func_8884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_718_call = mod.get_global_var('func_718')
func_719_call = mutated_mod.get_global_var('func_719')
call_8893 = func_718_call()
call_8894 = func_718_call()
func_1583_call = mod.get_global_var('func_1583')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_8933 = func_1583_call()
call_8934 = func_1583_call()
func_8011_call = mod.get_global_var('func_8011')
func_8013_call = mutated_mod.get_global_var('func_8013')
var_8937 = relay.var("var_8937", dtype = "int32", shape = (125,))#candidate|8937|(125,)|var|int32
call_8936 = relay.TupleGetItem(func_8011_call(relay.reshape(var_8937.astype('int32'), [125,])), 3)
call_8938 = relay.TupleGetItem(func_8013_call(relay.reshape(var_8937.astype('int32'), [125,])), 3)
func_2742_call = mod.get_global_var('func_2742')
func_2746_call = mutated_mod.get_global_var('func_2746')
var_8948 = relay.var("var_8948", dtype = "uint64", shape = (104, 1))#candidate|8948|(104, 1)|var|uint64
call_8947 = relay.TupleGetItem(func_2742_call(relay.reshape(var_8948.astype('uint64'), [104,]), relay.reshape(call_8933.astype('int32'), [14, 12, 11]), ), 0)
call_8949 = relay.TupleGetItem(func_2746_call(relay.reshape(var_8948.astype('uint64'), [104,]), relay.reshape(call_8933.astype('int32'), [14, 12, 11]), ), 0)
output = relay.Tuple([call_8893,call_8933,call_8936,var_8937,call_8947,var_8948,])
output2 = relay.Tuple([call_8894,call_8934,call_8938,var_8937,call_8949,var_8948,])
func_8954 = relay.Function([var_8937,var_8948,], output)
mod['func_8954'] = func_8954
mod = relay.transform.InferType()(mod)
var_8955 = relay.var("var_8955", dtype = "int32", shape = (125,))#candidate|8955|(125,)|var|int32
var_8956 = relay.var("var_8956", dtype = "uint64", shape = (104, 1))#candidate|8956|(104, 1)|var|uint64
output = func_8954(var_8955,var_8956,)
func_8957 = relay.Function([var_8955,var_8956,], output)
mutated_mod['func_8957'] = func_8957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2599_call = mod.get_global_var('func_2599')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_8968 = func_2599_call()
call_8969 = func_2599_call()
func_718_call = mod.get_global_var('func_718')
func_719_call = mutated_mod.get_global_var('func_719')
call_8977 = func_718_call()
call_8978 = func_718_call()
output = relay.Tuple([call_8968,call_8977,])
output2 = relay.Tuple([call_8969,call_8978,])
func_8986 = relay.Function([], output)
mod['func_8986'] = func_8986
mod = relay.transform.InferType()(mod)
mutated_mod['func_8986'] = func_8986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8986_call = mutated_mod.get_global_var('func_8986')
call_8987 = func_8986_call()
output = call_8987
func_8988 = relay.Function([], output)
mutated_mod['func_8988'] = func_8988
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8992 = relay.const([[[-6.816696,7.892179,-0.774814,-6.070659,6.288265,-4.804707,-1.233174,3.428578,-4.091203,5.537252,-6.545818,1.682946,-1.959356,2.011209],[-8.708261,-6.147472,-3.291973,-6.977393,-9.789077,-1.218073,-0.244422,-3.029835,-4.236285,-7.224824,3.913852,5.544169,-3.183058,4.109151],[-7.349352,4.839329,6.061517,5.774438,8.121375,-1.426924,-5.904439,-8.507979,1.943315,-7.824221,-2.488299,3.039811,-3.254070,1.757593],[0.981296,6.544109,-7.119215,9.732343,-5.553166,3.563299,-5.859074,1.885827,-1.952589,2.516590,0.244351,9.072922,-8.581016,9.895678],[-4.055175,9.035229,9.900430,0.457882,-6.697573,-2.542246,8.225177,-6.113874,7.596136,-2.624781,4.377649,-9.458711,9.856315,5.800401],[-4.300774,-8.419335,1.768899,-8.540611,-1.045881,-5.817102,-5.951509,-5.314969,3.154720,6.780301,-1.339111,-5.389940,7.967149,-3.950283],[7.867271,9.261457,7.870307,-9.369425,4.119582,0.201639,-6.221010,-6.232732,-2.915847,-0.351707,-4.072925,2.492556,9.155424,-7.294498]],[[-0.887722,-1.922796,-3.949578,9.010095,7.767568,8.060876,-6.189205,8.499548,-5.148296,-9.377482,-3.489521,-6.312269,-7.698218,5.860924],[-6.013165,4.865101,9.430578,-4.292109,2.626874,3.844053,1.856951,5.642397,6.210249,-3.141482,9.507028,7.227226,2.580304,-1.935643],[7.127390,0.654134,5.520098,-7.407033,-1.911243,1.795343,-1.801894,7.834384,1.547278,2.459235,8.783216,-3.014647,-6.383312,-8.585893],[-0.162810,-1.469656,-2.259528,6.106385,-5.704145,-2.666308,-2.680278,-0.598773,-6.727739,-2.302470,-8.820284,7.237476,5.602173,-0.755243],[6.565573,2.013343,2.860950,2.883010,5.597521,-5.063544,-4.428370,4.022414,-9.687972,0.624645,2.189903,-6.477088,6.159312,5.061623],[3.946657,9.767914,-0.156333,-3.570180,-3.419484,9.418328,-9.523934,3.642047,7.223706,5.379725,-3.580278,-0.753104,-5.177659,7.428300],[-2.136332,-6.756696,6.581473,-6.849674,-7.251574,1.480024,-5.949605,7.707253,-1.006572,3.792562,9.172413,9.354291,1.945690,9.420711]],[[-3.690253,-0.734986,6.095506,8.980295,-2.084295,-8.578092,-8.289485,3.162370,-8.531348,-4.511211,5.874280,-8.186259,-5.490357,-2.829071],[-3.330354,-6.162658,-2.911655,8.994693,4.132827,-1.914962,1.471300,1.509181,8.466720,-7.069862,9.564020,-2.810507,8.751069,2.698934],[2.192963,6.166892,7.088760,-4.932489,-5.818151,0.512387,-1.933133,3.472969,-7.913579,-7.447181,0.530630,2.312927,0.088830,8.497131],[2.622024,-7.919833,-8.859333,-8.614222,0.930858,-8.247820,-4.762360,-2.269567,9.135310,-1.501245,-8.275630,7.794228,-7.482374,-0.663577],[7.639135,-8.679518,-8.637391,0.065183,-9.722471,-2.750073,-7.440645,-0.402000,-3.044810,-3.897035,-1.037010,8.895524,8.100403,2.088142],[4.996467,4.491554,8.586872,5.002467,-6.574810,5.190827,-0.040947,2.037201,-3.512233,-5.662222,-3.285817,-5.682204,4.488143,2.052713],[6.719623,-2.416964,-4.286589,4.635383,6.674129,9.711879,5.059783,2.809316,-9.585554,-5.479222,-3.505081,4.503482,6.422010,1.161625]],[[6.374871,7.899700,7.739573,4.759884,6.170286,-6.384742,-7.827502,2.659718,-9.628537,3.533055,5.164835,6.957733,-2.479115,-0.850414],[-0.869058,3.319891,-2.401672,-5.651615,-8.754173,2.585974,-5.963660,1.127439,4.791690,-7.644594,8.456224,-9.171437,-7.935874,-6.569649],[-4.061118,-0.994676,-9.910790,-2.049747,5.759740,2.375456,-6.697077,1.281913,-6.940042,2.241066,6.146248,3.882623,-5.346048,5.790140],[5.351949,2.041292,-7.340545,-7.562199,3.253332,4.096703,-1.615936,7.035600,0.430229,0.674029,9.768597,9.966198,7.955110,4.678810],[-4.010584,-6.347091,-7.137975,0.877864,4.962596,6.565295,-0.148202,2.655203,2.607215,-9.156805,-3.988783,-7.528489,-4.818913,-3.518159],[-8.997211,6.751815,3.814382,-2.662606,-9.706072,-3.380352,-0.462757,-1.490092,0.076501,7.501696,-1.644431,0.748596,7.010569,-7.254044],[-2.905194,3.435099,-4.061575,6.011636,-0.211506,8.972775,-7.923013,9.460195,-1.210082,3.385886,3.704318,-1.441959,-2.266913,-6.632166]]], dtype = "float32")#candidate|8992|(4, 7, 14)|const|float32
uop_8993 = relay.log(const_8992.astype('float32')) # shape=(4, 7, 14)
bop_8997 = relay.bitwise_and(uop_8993.astype('uint8'), relay.reshape(const_8992.astype('uint8'), relay.shape_of(uop_8993))) # shape=(4, 7, 14)
func_8237_call = mod.get_global_var('func_8237')
func_8240_call = mutated_mod.get_global_var('func_8240')
const_9009 = relay.const(-4, dtype = "uint32")#candidate|9009|()|const|uint32
var_9010 = relay.var("var_9010", dtype = "uint32", shape = (360, 2))#candidate|9010|(360, 2)|var|uint32
call_9008 = func_8237_call(relay.reshape(const_9009.astype('uint32'), []), relay.reshape(var_9010.astype('uint32'), [16, 3, 15]), )
call_9011 = func_8237_call(relay.reshape(const_9009.astype('uint32'), []), relay.reshape(var_9010.astype('uint32'), [16, 3, 15]), )
output = relay.Tuple([bop_8997,call_9008,const_9009,var_9010,])
output2 = relay.Tuple([bop_8997,call_9011,const_9009,var_9010,])
func_9033 = relay.Function([var_9010,], output)
mod['func_9033'] = func_9033
mod = relay.transform.InferType()(mod)
mutated_mod['func_9033'] = func_9033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9034 = relay.var("var_9034", dtype = "uint32", shape = (360, 2))#candidate|9034|(360, 2)|var|uint32
func_9033_call = mutated_mod.get_global_var('func_9033')
call_9035 = func_9033_call(var_9034)
output = call_9035
func_9036 = relay.Function([var_9034], output)
mutated_mod['func_9036'] = func_9036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1148_call = mod.get_global_var('func_1148')
func_1150_call = mutated_mod.get_global_var('func_1150')
call_9052 = relay.TupleGetItem(func_1148_call(), 3)
call_9053 = relay.TupleGetItem(func_1150_call(), 3)
func_5389_call = mod.get_global_var('func_5389')
func_5392_call = mutated_mod.get_global_var('func_5392')
const_9064 = relay.const([[6,-9,10,7],[-4,1,7,-1],[-7,4,5,2],[2,7,7,1],[1,-10,-7,-4],[8,-2,-9,-9],[-7,-10,6,-10],[-3,-10,-6,-6],[4,-10,4,2],[1,-8,-5,7],[-7,4,10,4],[3,-4,7,-8],[7,-2,1,-3],[-9,3,8,-6],[10,10,6,-3],[-8,-7,-6,-7],[-10,4,-6,4],[-9,-9,-10,4],[9,-7,-10,3],[7,4,-5,-6],[2,8,8,3],[-2,6,9,1],[-6,2,-1,5],[-7,3,1,-8],[-1,1,2,-7],[-6,6,5,-3]], dtype = "uint64")#candidate|9064|(26, 4)|const|uint64
call_9063 = relay.TupleGetItem(func_5389_call(relay.reshape(const_9064.astype('uint64'), [104,])), 2)
call_9065 = relay.TupleGetItem(func_5392_call(relay.reshape(const_9064.astype('uint64'), [104,])), 2)
uop_9070 = relay.erf(call_9063.astype('float32')) # shape=(104,)
uop_9072 = relay.erf(call_9065.astype('float32')) # shape=(104,)
bop_9077 = relay.bitwise_and(const_9064.astype('int8'), relay.reshape(call_9063.astype('int8'), relay.shape_of(const_9064))) # shape=(26, 4)
bop_9080 = relay.bitwise_and(const_9064.astype('int8'), relay.reshape(call_9065.astype('int8'), relay.shape_of(const_9064))) # shape=(26, 4)
output = relay.Tuple([call_9052,uop_9070,bop_9077,])
output2 = relay.Tuple([call_9053,uop_9072,bop_9080,])
func_9084 = relay.Function([], output)
mod['func_9084'] = func_9084
mod = relay.transform.InferType()(mod)
mutated_mod['func_9084'] = func_9084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9084_call = mutated_mod.get_global_var('func_9084')
call_9085 = func_9084_call()
output = call_9085
func_9086 = relay.Function([], output)
mutated_mod['func_9086'] = func_9086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9187 = relay.var("var_9187", dtype = "float32", shape = (1, 12, 15))#candidate|9187|(1, 12, 15)|var|float32
uop_9188 = relay.erf(var_9187.astype('float32')) # shape=(1, 12, 15)
func_7874_call = mod.get_global_var('func_7874')
func_7875_call = mutated_mod.get_global_var('func_7875')
call_9195 = relay.TupleGetItem(func_7874_call(), 0)
call_9196 = relay.TupleGetItem(func_7875_call(), 0)
func_4113_call = mod.get_global_var('func_4113')
func_4115_call = mutated_mod.get_global_var('func_4115')
call_9201 = func_4113_call()
call_9202 = func_4113_call()
bop_9218 = relay.divide(uop_9188.astype('float32'), relay.reshape(var_9187.astype('float32'), relay.shape_of(uop_9188))) # shape=(1, 12, 15)
uop_9227 = relay.cosh(uop_9188.astype('float64')) # shape=(1, 12, 15)
output = relay.Tuple([call_9195,call_9201,bop_9218,uop_9227,])
output2 = relay.Tuple([call_9196,call_9202,bop_9218,uop_9227,])
func_9231 = relay.Function([var_9187,], output)
mod['func_9231'] = func_9231
mod = relay.transform.InferType()(mod)
var_9232 = relay.var("var_9232", dtype = "float32", shape = (1, 12, 15))#candidate|9232|(1, 12, 15)|var|float32
output = func_9231(var_9232)
func_9233 = relay.Function([var_9232], output)
mutated_mod['func_9233'] = func_9233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_9235 = relay.TupleGetItem(func_4303_call(), 0)
call_9236 = relay.TupleGetItem(func_4304_call(), 0)
output = call_9235
output2 = call_9236
func_9246 = relay.Function([], output)
mod['func_9246'] = func_9246
mod = relay.transform.InferType()(mod)
mutated_mod['func_9246'] = func_9246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9246_call = mutated_mod.get_global_var('func_9246')
call_9247 = func_9246_call()
output = call_9247
func_9248 = relay.Function([], output)
mutated_mod['func_9248'] = func_9248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_9333 = func_1742_call()
call_9334 = func_1742_call()
output = call_9333
output2 = call_9334
func_9371 = relay.Function([], output)
mod['func_9371'] = func_9371
mod = relay.transform.InferType()(mod)
output = func_9371()
func_9372 = relay.Function([], output)
mutated_mod['func_9372'] = func_9372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8189_call = mod.get_global_var('func_8189')
func_8190_call = mutated_mod.get_global_var('func_8190')
call_9407 = func_8189_call()
call_9408 = func_8189_call()
output = call_9407
output2 = call_9408
func_9409 = relay.Function([], output)
mod['func_9409'] = func_9409
mod = relay.transform.InferType()(mod)
output = func_9409()
func_9410 = relay.Function([], output)
mutated_mod['func_9410'] = func_9410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3778_call = mod.get_global_var('func_3778')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_9469 = func_3778_call()
call_9470 = func_3778_call()
func_5573_call = mod.get_global_var('func_5573')
func_5575_call = mutated_mod.get_global_var('func_5575')
call_9475 = func_5573_call()
call_9476 = func_5573_call()
func_3041_call = mod.get_global_var('func_3041')
func_3042_call = mutated_mod.get_global_var('func_3042')
call_9494 = func_3041_call()
call_9495 = func_3041_call()
output = relay.Tuple([call_9469,call_9475,call_9494,])
output2 = relay.Tuple([call_9470,call_9476,call_9495,])
func_9499 = relay.Function([], output)
mod['func_9499'] = func_9499
mod = relay.transform.InferType()(mod)
output = func_9499()
func_9500 = relay.Function([], output)
mutated_mod['func_9500'] = func_9500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6045_call = mod.get_global_var('func_6045')
func_6046_call = mutated_mod.get_global_var('func_6046')
call_9543 = relay.TupleGetItem(func_6045_call(), 1)
call_9544 = relay.TupleGetItem(func_6046_call(), 1)
output = call_9543
output2 = call_9544
func_9551 = relay.Function([], output)
mod['func_9551'] = func_9551
mod = relay.transform.InferType()(mod)
mutated_mod['func_9551'] = func_9551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9551_call = mutated_mod.get_global_var('func_9551')
call_9552 = func_9551_call()
output = call_9552
func_9553 = relay.Function([], output)
mutated_mod['func_9553'] = func_9553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_9569 = relay.TupleGetItem(func_1310_call(), 0)
call_9570 = relay.TupleGetItem(func_1312_call(), 0)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_9581 = relay.TupleGetItem(func_2894_call(), 0)
call_9582 = relay.TupleGetItem(func_2895_call(), 0)
func_240_call = mod.get_global_var('func_240')
func_241_call = mutated_mod.get_global_var('func_241')
call_9590 = relay.TupleGetItem(func_240_call(), 0)
call_9591 = relay.TupleGetItem(func_241_call(), 0)
func_1025_call = mod.get_global_var('func_1025')
func_1029_call = mutated_mod.get_global_var('func_1029')
const_9599 = relay.const([-0.687958,7.256334,-9.350590,7.145285,-1.337620,-7.049366,1.168630,-6.557763,-4.952738,-6.069142,2.203413,-3.693016,-9.592833,0.425484,-7.560725,1.543897,-0.145191,5.043375,-5.497789,-4.122969,-2.142157,-7.633284,-2.377226,4.635598,3.192963,1.532247,-4.772841,-8.929901,-7.091652,3.015170,-8.951650,9.188316,6.484075,6.264528,-2.588967,-9.504749,1.359415,-5.993181,-2.471239,-0.827975,5.853389,-6.697534,-3.661650,4.368979,5.988335,0.831185,8.954406,-1.047201,-6.837237,-9.426784,9.665019,1.016794,0.013383,-9.057012,-2.610461,-6.611254,-5.939273,2.418316,7.227316,-4.037322,1.676465,-8.078860,-3.390480,6.983578,1.563720,4.449185,2.391821,3.252269,-1.298151,-4.826525,-4.023660,1.057508,1.734589,7.314264,2.749871,9.159821,-1.434755,0.472210,-4.715017,7.500497,4.150164,0.052479,3.436767,9.960337,-7.139256,-0.726671,-4.345962,-8.861993,7.481214,-9.717471,3.798814,0.738829,-1.737958,-5.122653,-1.986448,-4.703108,4.261842,-5.114604,-8.155632,-3.408812,4.778070,9.693926,-0.102721,8.185195,-3.519536,-3.433785,-5.106512,1.266079,2.839640,1.912319,4.563404,7.917797,3.184064,0.100193,8.621791,9.972553,2.709587,7.870288,-4.731557,4.017460,-4.548535,-9.998365,0.511942,9.238862,2.950238,-7.685204,-8.941091,8.258626,4.628793,3.743568,6.619598,0.306381,-1.624756,-5.352848,-9.787280,2.645044,-1.503244,8.215936,0.655672,-6.033436,7.255479,1.757822,-6.805603,-4.077924,6.803790,-2.634647,-0.610782,2.641518,-8.842405,1.397021,1.964388,-8.490629,-6.785838,-9.250407,-8.409708,-7.982490,4.315241,-9.979497,3.852070,-2.278254,-5.444880,4.678320,-0.674360,4.703179,-7.896420,2.519830,9.929956,7.165714], dtype = "float64")#candidate|9599|(168,)|const|float64
call_9598 = relay.TupleGetItem(func_1025_call(relay.reshape(const_9599.astype('float64'), [7, 12, 2]), relay.reshape(const_9599.astype('float64'), [7, 12, 2]), ), 1)
call_9600 = relay.TupleGetItem(func_1029_call(relay.reshape(const_9599.astype('float64'), [7, 12, 2]), relay.reshape(const_9599.astype('float64'), [7, 12, 2]), ), 1)
output = relay.Tuple([call_9569,call_9581,call_9590,call_9598,const_9599,])
output2 = relay.Tuple([call_9570,call_9582,call_9591,call_9600,const_9599,])
func_9607 = relay.Function([], output)
mod['func_9607'] = func_9607
mod = relay.transform.InferType()(mod)
output = func_9607()
func_9608 = relay.Function([], output)
mutated_mod['func_9608'] = func_9608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2392_call = mod.get_global_var('func_2392')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_9640 = relay.TupleGetItem(func_2392_call(), 0)
call_9641 = relay.TupleGetItem(func_2394_call(), 0)
output = relay.Tuple([call_9640,])
output2 = relay.Tuple([call_9641,])
func_9647 = relay.Function([], output)
mod['func_9647'] = func_9647
mod = relay.transform.InferType()(mod)
mutated_mod['func_9647'] = func_9647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9647_call = mutated_mod.get_global_var('func_9647')
call_9648 = func_9647_call()
output = call_9648
func_9649 = relay.Function([], output)
mutated_mod['func_9649'] = func_9649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mod.get_global_var('func_4248')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_9652 = relay.TupleGetItem(func_4248_call(), 1)
call_9653 = relay.TupleGetItem(func_4250_call(), 1)
func_1240_call = mod.get_global_var('func_1240')
func_1243_call = mutated_mod.get_global_var('func_1243')
const_9704 = relay.const(-9, dtype = "int32")#candidate|9704|()|const|int32
var_9705 = relay.var("var_9705", dtype = "int32", shape = (125,))#candidate|9705|(125,)|var|int32
call_9703 = func_1240_call(relay.reshape(const_9704.astype('int32'), []), relay.reshape(var_9705.astype('int32'), [5, 5, 5]), )
call_9706 = func_1240_call(relay.reshape(const_9704.astype('int32'), []), relay.reshape(var_9705.astype('int32'), [5, 5, 5]), )
bop_9708 = relay.maximum(const_9704.astype('int8'), var_9705.astype('int8')) # shape=(125,)
const_9719 = relay.const([-3,4,3,4,6,-2,2,-7,-3,-2,-1,1,-6,-8,4,8,4,-7,-5,-1,-6,-7,-8,-9,-5,-7,3,-4,6,-9,-5,8,-1,8,-7,1,1,-2,-4,10,-1,8,5,-5,6,-9,-3,4,-1,-1,1,-4,2,1,-6,-5,-8,-4,-7,-3,-3,5,9,-1,2,-1,-6,5,-10,3,-7,-4,3,5,-7,4,1,7,9,-2,-9,-3,-7,-2,7,4,4,-7,6,-9,-2,-4,-4,-7,-8,-3,-4,-2,9,8,7,-7,10,10,-10,2,3,9,8,10,6,2,4,-1,-8,-6,-10,10,1,-7,-10,-6,-4,10,-10], dtype = "int8")#candidate|9719|(125,)|const|int8
bop_9720 = relay.divide(bop_9708.astype('float64'), relay.reshape(const_9719.astype('float64'), relay.shape_of(bop_9708))) # shape=(125,)
output = relay.Tuple([call_9652,call_9703,bop_9720,])
output2 = relay.Tuple([call_9653,call_9706,bop_9720,])
func_9725 = relay.Function([var_9705,], output)
mod['func_9725'] = func_9725
mod = relay.transform.InferType()(mod)
var_9726 = relay.var("var_9726", dtype = "int32", shape = (125,))#candidate|9726|(125,)|var|int32
output = func_9725(var_9726)
func_9727 = relay.Function([var_9726], output)
mutated_mod['func_9727'] = func_9727
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9762 = relay.constdtype = "float32")#candidate|9762|(13, 10, 16)|const|float32
uop_9763 = relay.sin(const_9762.astype('float32')) # shape=(13, 10, 16)
func_6953_call = mod.get_global_var('func_6953')
func_6954_call = mutated_mod.get_global_var('func_6954')
call_9784 = func_6953_call()
call_9785 = func_6953_call()
var_9793 = relay.var("var_9793", dtype = "float32", shape = (13, 10, 16))#candidate|9793|(13, 10, 16)|var|float32
bop_9794 = relay.bitwise_xor(const_9762.astype('int32'), relay.reshape(var_9793.astype('int32'), relay.shape_of(const_9762))) # shape=(13, 10, 16)
output = relay.Tuple([uop_9763,call_9784,bop_9794,])
output2 = relay.Tuple([uop_9763,call_9785,bop_9794,])
func_9797 = relay.Function([var_9793,], output)
mod['func_9797'] = func_9797
mod = relay.transform.InferType()(mod)
mutated_mod['func_9797'] = func_9797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9798 = relay.var("var_9798", dtype = "float32", shape = (13, 10, 16))#candidate|9798|(13, 10, 16)|var|float32
func_9797_call = mutated_mod.get_global_var('func_9797')
call_9799 = func_9797_call(var_9798)
output = call_9799
func_9800 = relay.Function([var_9798], output)
mutated_mod['func_9800'] = func_9800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8384_call = mod.get_global_var('func_8384')
func_8385_call = mutated_mod.get_global_var('func_8385')
call_9810 = relay.TupleGetItem(func_8384_call(), 2)
call_9811 = relay.TupleGetItem(func_8385_call(), 2)
var_9819 = relay.var("var_9819", dtype = "float32", shape = (14, 104))#candidate|9819|(14, 104)|var|float32
bop_9820 = relay.not_equal(call_9810.astype('bool'), var_9819.astype('bool')) # shape=(14, 104)
bop_9823 = relay.not_equal(call_9811.astype('bool'), var_9819.astype('bool')) # shape=(14, 104)
bop_9830 = relay.minimum(call_9810.astype('int64'), var_9819.astype('int64')) # shape=(14, 104)
bop_9833 = relay.minimum(call_9811.astype('int64'), var_9819.astype('int64')) # shape=(14, 104)
output = relay.Tuple([bop_9820,bop_9830,])
output2 = relay.Tuple([bop_9823,bop_9833,])
func_9837 = relay.Function([var_9819,], output)
mod['func_9837'] = func_9837
mod = relay.transform.InferType()(mod)
mutated_mod['func_9837'] = func_9837
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9838 = relay.var("var_9838", dtype = "float32", shape = (14, 104))#candidate|9838|(14, 104)|var|float32
func_9837_call = mutated_mod.get_global_var('func_9837')
call_9839 = func_9837_call(var_9838)
output = call_9839
func_9840 = relay.Function([var_9838], output)
mutated_mod['func_9840'] = func_9840
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9927 = relay.var("var_9927", dtype = "float32", shape = (4, 4, 3))#candidate|9927|(4, 4, 3)|var|float32
uop_9928 = relay.acosh(var_9927.astype('float32')) # shape=(4, 4, 3)
bop_9935 = relay.add(var_9927.astype('int16'), relay.reshape(uop_9928.astype('int16'), relay.shape_of(var_9927))) # shape=(4, 4, 3)
func_8237_call = mod.get_global_var('func_8237')
func_8240_call = mutated_mod.get_global_var('func_8240')
const_9939 = relay.const(-1, dtype = "uint32")#candidate|9939|()|const|uint32
const_9940 = relay.const([[-1,9,10,6,-6,-4,7,-1,8,2,9,9,2,5,9,-10,-8,4,-2,2,5,-2,-3,1,-3,1,-2,7,-6,2,2,8,2,8,4,3,-5,2,-7,1,-7,-2,-5,-2,3,-6,5,-3,-6,2,-10,-9,-9,-4,5,6,8,-2,-9,5,8,5,5,-2,-10,3,9,-4,3,5,-3,-2,9,5,-8,-7,2,-2,1,-2,-8,8,6,-8,-2,-9,-1,10,-6,-9,-7,-3,-10,8,8,-10,-4,8,4,1,6,-3,-2,1,9,-2,-6,-5,-9,6,2,6,6,-8,-7,-6,-8,3,5,-7,2,1,6,4,1,-3,-8,1,-2,-4,-7,-5,1,-4,-10,1,10,-9,9,2,-5,-5,5,-9,-4,-7,3,-3,-9,-1,7,2,5,6,7,6,-2,-7,6,3,8,10,-3,6,-9,1,-2,-5,-6,-2,10,7,10,10,-9,-7,-4,-8,9,9,4,6,-4,-2,-4,3,6,-8,5,2,9,-1,-6,10,-5,-3,-8,5,-10,2,5,7,-9,-6,1,8,-9,4,2,-1,2,5,3,-4,1,8,-3,-5,-2,-7,-1,4,8,7,4,6,-4,-10,3,1,-9,-7,-3,-5,5,7,-8,10,-3,-5,-7,-6,2,-7,7,-8,-6,-9,9,-4,-5,-10,6,-9,7,5,-5,-2,-7,1,-6,10,-3,-10,2,-7,-7,-2,-9,1,6,-9,-8,-9,1,-9,-8,8,8,6,-2,-9,-1,3,5,-3,1,-4,-4,-4,-3,-1,-3,-4,7,-3,2,1,4,-1,-7,1,-8,-6,8,-7,-4,1,7,10,-3,4,-6,9,8,-10,6,-2,-6,9,10,-4,4,6,9,7,9,-7,8,-5,-6,1,6,-8,-4,6,-3,-2,6,-10,2,-6,1,-3,1,-7,-3,-1,-2,1,6,-1,10,5,1,-10,5,3,-3,-6,4,-3,2,8,-5,-9,8,9,5,-3,-1,7,-1,3,7,-10,3,-10,1,10,-6,-8,-10,2,3,10,-8,-10,-9,5,-4,-1,-10,3,-10,7,1,10,-2,-7,-8,9,-7,-7,3,6,-8,-6,9,-2,-4,5,-6,-9,7,-5,4,-1,4,1,9,-7,-4,7,-4,-2,-8,6,-2,-2,10,4,-1,8,4,-5,7,-1,-8,-6,-7,-3,-7,-1,-1,-10,2,8,10,1,5,6,-1,-5,-5,-1,1,-9,10,-7,-5,-5,-2,10,-9,3,-8,-6,-6,-6,-1,-7,-1,-1,8,-4,-7,-10,2,-1,3,-4,5,-10,8,5,-4,-2,-9,-8,2,-10,2,10,-9,4,-4,-3,-8,-3,-10,6,9,1,-4,4,10,7,-1,-8,5,-2,-10,-2,-7,-5,-1,3,2,9,2,3,7,-3,-4,-9,-3,-2,4,-3,6,8,-10,9,-4,9,-2,-7,10,-7,1,7,-7,-10,2,-3,-1,8,-3,-5,-5,-2,-7,-6,-9,3,-9,7,-1,6,-10,6,2,-7,2,10,8,-6,3,2,-5,5,7,-9,-8,-6,3,-2,-5,-10,2,-4,-3,3,-2,-7,2,-8,-3,9,-1,-2,6,-1,-4,8,10,4,10,-9,-2,9,10,3,4,7,-9,-4,-6,6,8,5,3,3,-7,-8,-1,-5,4,-8,-3,8,5,-7,-8,10,6,-4,-7,6,9,4,-1,-3,-10,3,-8,-5,4,-4,6,8,1,3,-9,1,3,8,-8,-8,3,-10,-4,-4,7,-1,-5,-3,3,6,6,-9,-5,-4,-1,-9,-6,5,-4,-10,-10,1,2,-4,3,4,-7,10,-2,-7,7,-7,-7,-4,-3,1,7,-9,-8,-3,-2,10,-2,3,3,6,8,-6,6,-7,6,10,-9,-2,3,8,4,5,6,-9,10,2,9,-4,-8,1,6,-7,4,4]], dtype = "uint32")#candidate|9940|(1, 720)|const|uint32
call_9938 = func_8237_call(relay.reshape(const_9939.astype('uint32'), []), relay.reshape(const_9940.astype('uint32'), [16, 3, 15]), )
call_9941 = func_8237_call(relay.reshape(const_9939.astype('uint32'), []), relay.reshape(const_9940.astype('uint32'), [16, 3, 15]), )
func_5747_call = mod.get_global_var('func_5747')
func_5750_call = mutated_mod.get_global_var('func_5750')
const_9945 = relay.const([0.903344,-1.262841,-2.944442,0.003297,-1.545139,8.970655,-3.756313,3.669208,6.197594,4.286986,1.137552,-0.063904,7.943025,-6.620570,-4.529294,2.360222,-9.106836,-2.156431,0.179199,-9.684716,1.206626,-1.691209,3.826646,2.910286,-9.847705,7.415316,-1.325974,9.903674,1.688581,-8.908768,8.693786,-1.171852,0.239035,2.386391,-0.409091,-9.409535,0.415030,-1.912575,8.728327,-0.122190,-5.738364,8.457389,1.765221,-8.174187,-7.898063,-7.431937,-8.934733,7.435799,-7.817934,5.021062,-3.491824,-1.586550,-4.281747,-1.409275,-7.354112,2.141993,3.314803,1.037497,3.553328,6.654433,-2.343816,-6.425645,-8.613060,-9.857560,-0.123872,-4.598919,-4.883596,-8.226335,1.823235,-6.675935,4.494824,-1.861357,-5.644520,5.208182,6.304145,8.525227,0.912205,-9.940082,1.605457,-2.107054,-7.075896,-0.355055,9.771266,-9.254731,-6.633033,-8.432570,-8.725235,-5.135470,-2.476986,1.629027,-8.273689,4.560677,-1.615344,-7.899132,-7.736106,6.210009,4.423275,0.039944,-5.781199,3.952348,-2.952396,9.009577,-0.866099,1.054521,9.357869,-3.191644,3.317251,3.965812,4.075057,9.231481,-1.799287,8.976431,2.528815,-5.149462,-4.966771,-9.157622,4.772748,0.778092,1.568467,-6.756131,3.342434,-5.346479,-5.904502,-1.782205,5.794690,-2.844177,-4.345352,5.815088,-1.739089,-3.374732,6.101135,-4.100376,-7.081281,-3.643474,-1.966204,-6.633666,9.342903,0.930423,6.799651,-6.616001,4.667100,-9.886643,-0.540337,6.523736,-8.576061,3.870668,-3.610559,-8.947774,1.672036,-8.613362,-1.801137,-4.664499,-3.837179,9.154282,9.341020,-7.384792,-3.195790,8.664426,7.378109,-4.755747,-5.217005,3.741872,3.617838,9.305088,3.435905,-9.964910,-9.611989,7.397151,-4.788548,-0.682437,-8.617716,1.652989,-5.290535,3.367403,4.917030,4.187480,1.041431,0.904837,-6.973583,-6.345315,-2.021821,8.501526,2.235655,1.236586,-7.251945,8.476023,2.993844,1.755808,2.687637,9.155872,-5.749276,-9.772589,5.035618,-3.784909,-5.471391,7.464718,-2.332920,-5.477479,-7.051837,3.918506,1.858549,9.882468,2.377029,-1.498423,-0.279810,-3.052399,-4.351549,-9.478022,-3.726646,-2.053803,8.553774,8.054696,-7.997584,0.887424,-1.425674,7.167857,-1.750017,-6.875686,-7.539249,-6.588687,-3.675077,6.293903,-0.431312,-1.892398,0.264775,4.886031,2.866777,-7.206113,-0.123403,-1.636719,-0.855269,6.896631,-1.631536,9.353900,-1.709466,0.887175,-9.389525,-3.127989,5.638096,4.440287,4.956310,2.630018,9.867108,-4.395734,-3.117038,-4.722347,6.645755,4.163413,8.377441,-4.098595,-3.665771,-6.533834,-5.120423,4.475033,-8.030791,-8.142577,-0.061252,-2.093189,1.980552,1.168081,1.417314,4.734358,3.268039,-3.886817,2.029743,5.411764,8.978888,-9.980898,-0.137434,5.086715,-7.744345,-6.318397,3.583168,-5.937596,7.304340,-6.041510,-0.667295,6.024891,-8.825316,-1.194199,-2.887334,-8.248935,-8.224159,-8.747526,-4.785487,2.838803,1.436936,3.917293,-7.517700,-7.334818,-4.846566,-0.757850,-5.554836,-8.795801,8.203946,-7.650594,-5.427257,2.014908,0.132695,9.092786,0.928596,-4.583596,-0.329055,-0.990088,6.151944,6.059102,6.832053,-5.174079,1.020453,0.056040,-9.675082,3.254470,-4.395839,6.204414,-9.142878,5.767449,6.642687,-0.240751,-4.948539,-5.198736,8.983406,6.105318,2.966657,-4.789987,-5.242042,0.216734,3.940163,-9.142616,-3.680396,9.013236,-1.686945,-6.264225,-3.377923,-8.083019,4.778522,4.546836,-2.319344,-0.045920,-6.105292,-5.543091,-2.972261,4.252074,-8.095168,5.906102,8.123001,6.213123,7.911133,6.286361,2.715189,-6.254327,-0.063552,1.405684,-3.760378,-4.349940,3.687309,-9.123328,9.019335,2.452114,3.569871,-1.145257,-7.201399,-2.056678,1.661960,7.398813,4.529105,-5.604300,2.227705,-6.593997,6.307759,1.185272,-1.754886,-5.524579,0.504716,8.088640,-3.771080,-5.932921,-9.448463,-2.689889,-6.345412,-5.972315,-0.780893,-9.674720,-3.089050,8.657880,9.234437,-5.320106,-0.445402,0.611438,5.768399,-4.871123,-2.247799,-5.697966,-8.138071,4.856991,-8.434380,-4.181651,-3.701873,8.311152,-5.023948,-0.562630,8.175856,8.615873,2.121403,6.976935,7.055576,-5.073037,-1.371739,-2.113897,3.836013,-9.264320,4.119231,-2.342590,3.889255,9.470260,4.318581,1.636047,-8.601551,-6.985393,-7.144328,-6.738034,-3.347006,6.300103,4.946076,2.009309,5.886852,9.643664,-8.019806,-1.518641,5.251104,2.337121,4.244335,0.837793,7.163260,7.776072,3.183346,-7.002120,-0.994806,0.094775,7.926489,8.572318,-9.646095,-6.327353,-1.022896,-1.597747,-6.026716,-6.305249,-2.235663,1.105849,-9.323663,4.792521,5.502177,7.807740,-0.395564,0.011926,8.784240,-6.123774,2.983043,-1.007913,-5.099963,0.807706,7.840874,-7.954858,9.264667,5.587531,2.150761,-7.903270,-6.466779,-5.720517,-4.005027,7.523604,-4.970949,1.977159,-8.747633,-5.928935,-1.345777,7.251538,0.677315,2.800193,9.187495,-0.865695,-3.522971,7.104317,-7.872459,5.592105,-8.687987,-9.686082,-5.112051,-5.725540,-7.047964,0.143698,1.297352,-4.052801,3.041311,1.271712,-6.706595,5.416974,-2.162805,-8.082402,-4.114677,6.674068,-7.518927,-3.027936,9.109597,0.473369,0.003144,-0.838931,3.490961,1.865080,2.801273,9.573107,7.633880,-0.905768,-3.257639,-3.435873,-7.304483,5.666152,-2.375660,8.640173,-3.891675,4.613075,-9.488915,-7.756745,-7.439056,-6.587671,1.858414,8.278688,-7.179443,-2.698271,-5.708134,5.882053,4.890928,5.796298,-9.071640,6.814721,1.337227,-3.146973,9.142362,8.597260,5.007712,4.093773,-3.730323,8.495273,-2.046416,9.657150,-3.221658,7.927494,9.458613,4.788821,4.224061,-6.514253,3.195760,-8.055838,-9.578432,-6.369805,5.523223,-7.851578,4.925217,-0.171176,9.652954,-1.528299,2.940292,2.604128,2.321816,-6.253570,-5.030502,2.475602,-5.729744,-7.154238,-7.497893,-6.170492,-1.828051,8.879782,-4.600143,1.988103,3.667569,2.998152,0.019090,5.431136,-1.858731,5.298902,-6.202985,-1.631144,7.391993,1.802544,-0.527628,5.374923,-8.558634,-8.417704,5.197062,3.245403,0.288637,0.211708,3.481129,0.361938,-9.988442,-8.948769,-0.780136,3.913503,2.155602,1.600297,-4.617509,-8.793230,9.318819,9.623148,-9.128066,7.632596,-7.888450,-3.231015,0.697440,6.169054,3.823198,-8.332921,-0.587508,5.925233,7.613738,6.438032,9.456150,-3.249605,-6.486633,4.937226,-1.700693,7.789464,3.946526,9.579723,4.155354,9.461886,-9.834269,-2.271902,4.274509,0.565972,-0.164120,4.012040,-9.322743,-8.972629,6.830464,-7.867999,-0.310558,-7.858730,5.149542,-5.010475,-1.128315,4.247358,-0.215546,-5.232662,6.999637,-2.929521,-7.857479,-9.048155,3.864646,-6.067537,-3.015484,7.387720,-3.724882,1.588030,3.728452,-4.196409,7.119040,-2.216031,-3.831399,8.681973,-3.140337,1.734951,5.848809,-4.663068,8.431431,-0.774714,7.699748,-7.759912,4.114803,8.684459,-4.739075,3.934887,-3.502421,3.952977,-0.366693,-3.422526,-0.585557,3.014459,4.260746,-0.119224,-2.198589,2.255616,-7.060472,3.938235,0.224940,-7.681899,0.269064,5.084290,-4.770277,-1.571750,9.510455,7.928606,-2.078151,-5.256282,-9.674308,-6.968665,8.785636,-3.033556,-2.566570,5.757986,5.161502,0.536243,1.295468,-6.757870,0.391898,-3.284159,4.110335,-4.627596,8.359368,-8.333335,7.059206,-1.326110,-4.729604,5.705988,9.543579,-7.292578,-7.974619,0.709834,-3.259350,8.272150,-9.810188,-0.582221,-2.550707,1.878977,3.820839,2.453652,4.720193,8.750633,1.624875,-4.041061,-1.735869,2.187714,-2.044011,-2.084121,-0.310982,-1.784477,-2.370076,-6.372256,2.208263,-9.343892,0.481875,8.784981,8.659448,-9.075950,8.830762,7.753371,9.715692,9.904972,0.185662,-3.283335,2.115045,-3.387720,-7.615803,-5.351624,6.476385,-4.777581,5.440127,2.742877,7.845337,5.098699,-8.347256,-9.381497,7.045319,6.717259,8.429426,-4.690409,-4.898926,-5.534433,4.670073,-9.351974,3.824900,-3.920228,-5.147366,-8.793845,0.857423,4.037186,-5.862120,-1.161298,4.043153,2.163210,3.363494,8.092230,-3.722615,-5.648049,1.946749,-4.175372,-7.051922,6.632005,-2.977287,-5.385241,8.038728,0.631033,4.083357,6.582048,4.346752,0.322118,-4.897385,-5.458636,6.491456,-9.735572,5.691774,4.701892,9.489800,8.166504,-0.439932,-4.027972,4.147040,-5.076229,8.886287,3.281084,-3.285407,9.553355,3.257872,2.455967,5.454599,8.624481,0.386368,-4.331428,1.766056,-3.332349,7.141213,8.127994,1.418902,6.807205,7.922096,0.357672,0.411407,-8.069629,6.626477,6.840903,-6.479877,7.759157,-4.134226,-3.547447,6.556654,6.018130,3.569138,8.413495,-8.811727,5.592319,3.684805,2.221694,-0.760672,-4.276762,-3.836783,-3.869378,-7.444510,-2.160515,0.486440,8.181865,6.112010,0.682507,6.197224,6.534788,6.454669,-8.556370,-9.080815,0.567674,3.484303,-7.594318,-8.776059,-7.467525,-4.863814,0.260761,-3.909189,0.776449,4.817703,-8.581225,0.797451,7.426430,8.228366,-9.851419,7.118200,-8.441405,2.660951,-2.631758,3.764202,-2.059050,2.586669,9.821592,-6.516245,-2.055523,8.894481,0.384600,-1.947208,4.453123,-5.079761,9.971544,1.047597,-8.661644,-6.056332,-9.030285,-9.075847,-0.575580,-1.729980,9.570150,-5.819145,2.821769,-3.643783,-7.923844,7.171069,-1.844722,2.806237,0.990511,6.039045,6.637910,6.763656,1.092817,7.641232,2.281206,0.937942,-9.541047,-8.054896,7.115116,-9.550859,-7.444194,8.261194,9.922832,-6.601732,-2.899575,2.833422,-1.540014,9.725473,-6.155114,2.478234,4.210506,-6.605531,-8.042894,8.020647,5.940601,5.629168,8.396204,0.578711,-1.742133,0.745167,6.097566,-4.283191,6.427616,-0.255061,-7.153072,-7.926018,-5.025606,-1.394929,9.787991,2.376309,1.255937,-3.486257,7.951983,-3.395640,-0.001729,-2.939952,-0.145297,0.487570,0.916809,5.888508,7.809190,8.783945,-6.303775,-4.383228,4.367594,-3.567875,-6.584202,7.073068,-7.292812,6.310691,5.876191,8.433703,6.459687,-2.045930,-8.176911,-2.760281,8.801593,3.098951,4.317880,4.816779,9.904961,-3.286404,4.770446,-6.912956,6.068246,-7.760143,8.745133,-7.417582,-2.952609,4.266294,-7.501895,-3.639547,1.465971,4.920662,3.812337,5.508511,-1.667006,-0.008033,4.676277,-4.322670,8.884637,-5.487641,-5.495611,7.165637,4.851014,4.634983,-0.303618,9.876407,9.809879,9.935363,4.690940,-2.812594,-1.975297,3.424134,3.380276,-7.900633,-9.779507,8.695543,3.307333,1.093930,-0.495398,-9.989601,-3.855640,-8.371178,-3.412195,-7.574986,3.834739,6.956036,-7.683354,0.965640,-4.957714,-8.388627,-4.492923,6.781818,-4.906713,-3.702827,5.303329,2.735055,-6.658292,-3.456752,6.805212,8.828066,6.881625,-0.879822,6.463076,2.332451,0.547523,4.402394,7.452688,7.515730,0.892340,-0.119654,-5.148028,2.144970,-3.563959,4.310952,-7.237209,-9.844640,-9.492986,3.546749,-8.143031,4.681732,-7.138379,-9.917551,-7.244803,1.957622,2.631578,-7.672954,-0.146948,2.187574,0.594924,-7.534372,8.954364,5.547256,-9.961108,6.067081,2.168118,-6.331357,2.084219,-5.667667,4.521906,-3.339610,7.258320,-0.709989,-8.825758,-0.718693,2.027356,7.725469,0.922287,-8.349594,-6.705022,3.132703,-8.153980,5.547513,-3.669549,0.862499,-3.359776,-0.730135,7.623233,0.924723,-4.587944,3.218007,-5.890629,-3.339467,-1.770030,2.260522,0.617325,-4.992825,2.153157,9.194661,6.659178,4.582305,-7.357203,-9.787489,-6.958349,4.233361,0.321784,-5.103692,-6.184353,-5.234448,6.390264,8.091955,-7.175235,0.454417,6.689750,5.799150,7.928712,-2.960396,-2.993087,7.392463,-3.276402,-4.674152,-8.622238,-8.931188,3.769882,2.671388,-8.325912,9.832417,-7.605460,-2.431993,-4.274213,0.547701,-2.063749,5.273213,-8.610421,-7.997207,-5.673429,-5.967531,4.779848,2.557684,3.444639,-5.916219,8.178212,-1.648939,-3.578332,2.444751,-1.422978,-4.273312,7.239091,-6.363283,8.824652,-9.515464,4.185214,-9.904752,2.841335,1.755094,-0.797340,2.837581,-5.507627,2.263801,-7.183941,2.513034,1.635856,-3.369456,1.184055,-1.691693,1.860518,-9.547780,-8.777878,3.852016,-9.923994,-6.954894,-2.451681,-7.152574,-6.572085,2.996425,4.970331,4.381392,6.771561,8.141858,-7.516325,1.360061,-8.876448,-5.729398,-1.280328,0.327363,3.748718,1.275636,3.720327,-9.749645,9.978714,-1.555694,-1.983638,-2.627860,0.931722,-0.788456,7.204957,3.210946,-1.600801,-7.938278,-8.280152,0.147902,-7.401675,6.326144,7.084780,0.713388,-4.731295,0.768857,2.424261,-6.741115,1.020745,2.444041,-5.764289,-2.447651,-9.387424,7.789817,-9.361956,-9.506116,4.136403,-9.523867,1.882453,1.437584,-3.794160,-2.527105,-2.147151,-5.440120,-3.855011,8.923129,2.505732,8.568728,-1.042792,-8.452711,7.442153,5.898345,-9.810854,9.358676,2.821458,9.866015,1.376109,-4.845470,-0.222955,3.578100,-4.254515,3.295411,8.359808,6.965945,1.793525,-8.867107,2.405388,6.651598,-9.561891,2.485575,-6.351501,9.273619,8.929710,7.652507,-2.058568,-2.549145,2.238442,-0.825620,-4.145576,5.487270,5.002708,-4.379773,1.642419,3.855895,8.947404,-6.049185,9.939876,0.645681,0.284330,2.023101,-9.324004,-0.906778,8.419212,-3.898513,-9.591620,-7.873271,7.677634,-5.800931,-0.017445,-7.606894,6.160968,0.566156,-0.566902,3.906531,-4.886426,-3.455504,-1.865966,-2.424529,0.489798,1.530477,-6.152792,-2.906884,-9.124842,5.479482,-5.888161,-6.526608,-5.391781,-3.349587,4.331622,-7.598880,-0.109753,-6.062439,6.282935,0.312930,9.939546,-0.303303,-7.503005,9.358603,-4.147433,6.463258,5.009210,-8.724007,-6.539617,-4.800833,-5.744331,2.177186,2.878391,6.589349,-7.256322,-5.948697,5.436955,-3.920615,0.925478,-9.155314,-6.516088,-4.682740,-8.544131,6.228361,0.701515,-6.246513,-3.079989,4.349658,4.962152,-7.448300,7.155524,9.659206,4.740079,-7.126787,2.248421,-7.733919,-8.521536,4.637454,7.265173,1.913756,0.382306,-4.259923,2.187437,1.708520,-2.654752,0.034217,-7.121343,-5.214870,-6.667233,-9.428217,-9.379738,5.792505,1.289038,9.874185,2.230145,-8.554636,-1.585343,-7.075469,-5.438254,-9.867754,5.793980,-3.257737,-0.721177,0.997907,9.688289,-5.377117,9.757446,-4.389331,4.123660,5.268646,7.477426,2.504463,7.057035,1.824257,2.847862,-9.749459,0.699058,6.548403,-5.861251,-3.832576,-9.302823,9.656081,-0.181939,7.661077,5.836045,-1.515794,-5.013921,-6.899163,8.811761,1.903082,0.160521,7.591228,-1.044972,-0.657556,-8.621642,-2.227594,6.697337,-2.776782,0.381116,3.068295,-1.539507,8.069550,7.405851,-0.354009,-5.205230,-9.163010,-8.777953,-9.306538,-7.472184,0.285239,-1.710678,4.367365,7.492753,3.318298,1.021734,6.306980,4.498884,-0.276082,-6.941557,8.361047,-8.168849,-2.023564,-5.050298,8.062780,9.151644,7.087787,-6.234557,4.907483,-0.892388,9.013248,-3.254850,3.692668,1.225199,-2.156524,3.378202,-7.095421,5.707843,-8.111613,-1.686494,-3.018283,-7.372952,4.225828,7.010705,-2.320972,7.311972,3.979745,-2.683928,6.859602,0.063079,5.504449,-4.173233,-0.151300,-1.236758,4.781830,7.386330,-9.341179,8.180819,-0.809454,-6.848705,-0.346456,-1.623669,2.012897,-5.322662,8.526758,0.707002,-6.678222,-3.206954,1.597945,4.249327,3.603148,5.045738,-8.052833,3.131670,5.525280,7.416609,-6.028806,2.683303,-5.575387,-7.874601,1.036291,-5.141301,4.228045,8.634685,9.565899,7.058474,0.558067,-5.672998,3.993582,-1.147247,-8.181536,-3.409597,-5.377321,-3.714921,-3.820087,-5.848986,-1.197868,4.418441,2.545468,0.826970,-3.186961,-8.324483,4.230488,6.166505,-8.818179,8.465994,-3.317538,8.865756,8.997215,6.901098,3.452842,-8.010944,4.259518,9.059216,-5.375679,2.213916,-6.453634,-4.518839,0.579679,-1.250995,8.774312,-8.866726,-4.073476,-2.524705,8.474325,9.789682,4.854185,9.010713,1.602292,-8.081942,7.529514,-6.390895,1.338839,9.490181,1.637781,-5.121033,2.744539,-6.449040,0.201969,5.035851,-1.786530,4.543103,-5.855639,-8.123477,7.334603,9.223262,4.321731,-0.613583,-6.445438,3.898160,-8.791442,4.301356,-8.530598,6.583191,-6.184083,-2.992924,8.002898,7.057640,-6.622770,8.228276,-4.606148,-2.646973,0.992566,-2.570126,-4.595994,7.632055,0.290851,-0.031045,-6.401850,8.364258,0.573564,9.752631,3.363517,-2.651964,9.800460,-7.451137,6.467799,6.576337,1.349568,-0.188483,4.606988,-5.534995,-2.960865,-9.358611,-5.870472,-2.991087,2.056598,-9.110683,-1.689282,3.492450,1.129241,7.082256,-7.139057,9.438504,-1.870175,-3.338862,0.841091,-9.191192,8.416302,-8.149774,1.656348,8.335068,-0.753697,7.849505,2.131586,-4.674048,-9.137655,9.182438,-4.072261,4.408209,-1.421923,-7.487829,-8.931344,-6.452774,7.511966,-9.972741,4.753050,-6.206752,8.463767,-6.838781,-7.532952,0.379182,-1.506762,1.528859,3.492896,5.047459,-8.119167,7.741647,-0.870250,4.838132,-1.151705,-0.808105,2.508366,-3.441465,9.404098,6.488146,4.325469,-6.277388,4.272564,6.575031,-0.368336,6.112349,-1.122243,-4.974614,-3.989867,1.918114,8.621420,-9.743361,-5.865003,7.019962,9.630516,9.243536,-4.935496,-6.941373,9.904509,-8.542643,-6.010858,7.180551,5.482705,7.629345,3.505598,-0.290653,6.945021,2.607656,3.476904,8.605257,-9.144333,-8.638529,-4.374432,-2.414562,-4.322010,-5.492171,-8.094568,5.512371,6.409417,6.839816,4.208250,3.167453,-9.100989,-9.063290,0.843975,-1.074131,-4.424033,-1.053631,8.969998,3.165799,-2.614875,-2.357577,3.657912,-0.685196,4.454416,2.170617,6.665672,4.924635,4.958255,-9.091188,0.325810,-6.889922,7.279554,-7.892805,-3.893305,-7.890953,1.534369,9.001408,-5.356121,5.214378,-4.922790,3.909223,4.591400,4.813858,-7.536226,-8.989600,7.066001,-8.803982,9.693580,4.776094,-0.762816,-1.615464,3.878496,-3.609343,1.559929,5.355369,-9.743006,-7.777509,4.063196,-4.842911,8.819209,1.301449,-4.552810,8.983587,-3.328895,5.888753,-2.614253,7.379891,1.870331,9.737930,3.841429,-2.426354,6.847853,-7.694417,1.827760,2.632266,1.089956,9.770828,-2.791654,4.589223,7.485375,0.811119,3.568016,3.578477,-4.326945,6.270650,0.486211,1.516243,-8.497900,4.086285,-3.324560,-9.203162,2.273948,6.961042,-4.047671,7.639381,3.993855,2.905459,6.014342,-5.507988,-1.668920,6.886087,1.896319,-5.093801,-3.618514,5.888207,-7.909834,-3.267392,5.947952,4.612396,8.103851,-4.103196,4.027547,2.536142,-4.794787,-8.195176,9.513105,8.989701,-5.757728,9.722482,4.273486,-0.555690,-5.289974,-9.188651,-5.743969,-1.894033,-5.159890,1.995381,-4.746129,-6.046748,-6.317697,3.669978,-4.276314,-1.558096,8.417878,-4.670793,9.503303,-5.288748,2.719509], dtype = "float32")#candidate|9945|(1815,)|const|float32
call_9944 = relay.TupleGetItem(func_5747_call(relay.reshape(const_9945.astype('float32'), [11, 15, 11])), 0)
call_9946 = relay.TupleGetItem(func_5750_call(relay.reshape(const_9945.astype('float32'), [11, 15, 11])), 0)
func_2347_call = mod.get_global_var('func_2347')
func_2351_call = mutated_mod.get_global_var('func_2351')
const_9954 = relay.const([10,-2,-6,1,6,-10,6,2,-7,6,2,-1,10,-9,-1,-7,-4,4,-3,4,10,-4,8,-6,5,-6,-4,4,-3,10,1,5,-8,5,-3,-1,-3,-9,1,7,-7,-4,10,-5,-9,8,-2,-7,-3,2,-3,9,9,8,-5,-5,10,3,7,4,3,-6,-7,3,-7,-4,-9,-8,-10,8,3,-8,-5,2,1,8,8,-6,8,4,8,8,10,-8,2,8,1,8,-8,-8,8,2,-1,-10,-10,8,4,-7,-10,7,-1,7,2,6,6,1,-1,10,3,-2,-6,-3,6,5,3,10,-6,5,-2,9,6,-2,5,10,-5,3,3,-4,-5,7,-2,3,-1,7,9,3,-10,-2,-10,4,-5,9,-4,10,-1,-9,-1,-10,-1,8,-4,7,10,10,-4,-5,1,10,6,-7,7,1,-8,-2,9,3,5,-9,3,-2,4,-9,-1,2,-9,6,3,-5,8,2,-1,5,6,8,-3,-8,10,-2,6,-10,-3,2,4,8,7,1,6,-2,10,-4,4,10,7,7,-7,10,-3,-5,10,-9,5,4,6,6,8,8,9,-6,-1,-2,9,-6,4,7,7,10,-6,3,-2,7,-8,2,3,6,2,-10,-1,3,-2,-9,6,8,6,3,10,-8,3,6,9,-7,3,3,-8,7,-5,-6,8,3,7,1,-4,-6,10,-2,-5,3,-10,1,-1,5,-7,-8,-5,10,-7,-9,-2,9,-8,-5,1,2,2,-9,-4,-8,-3,7,-7,2,-9,-6,-8,5,5,-1,-7,10,-8,2,-1,-2,-7,6,7,-10,1,-7,1,6,-3,-6,2,10,5,2,4,-4,-3,7,-10,-6,2,-1,7,-1,-4,1,-3,6,4,-7,9,9,2,4,4,-3,3,-1,1,3,1,1,-6,3,4,10,1,-7,-7,7,1,10,-5,-4,-3,2,-10,9,10,10,3,-7,-9,-7,7,10,5,-2,10,-7,-5,-8,-3,-5,-10,7,2,6,-2,10,9,7,-1,-4,-7,6,9,-8,-1,-5,5,2,10,1,-3,1,-4,-5,9,5,-2,7,3,4,-8,4,-5,-1,6,-8,6,10,10,-4,-7,-7,8,-10,9,6,7,1,8,-6,7,-1,5,-2,9,6,-2,4,-6,2,2,-3,10,8,9,10,10,-8,5,2,3,-1,-10,7,-3,1,7,-2,-9,4,-8,3,-6,-3,-8,-6,-2,6,-5,-7,-3,4,4,8,-8,-1,-5,-4,-3,3,-3,-4,9,8,4,2,6,9,4,3,-8,-8,-9,5,3,-5,10,-3,9,2,-9,-1,10,4,7,-8,2,-9,10,4,3,-10,-9,9,8,-3,6,3,4,-2,7,-6,-7,1,-9,3,-4,-3,7,1,3,-2,8,7,-5,4,10,-10,-5,4,-5,3,1,-2,-10,-4,7,-2,-3,8,9,-9,-10,-5,1,-8,-6,6,9,-6,1,1,-7,-4,3,8,1,-10,10,5,-5,-8,4,-10,1,1,7,-9,-5,7,-4,10,6,-6,5,6,4,3,-7,2,-1,10,-5,4,-4,7,-8,3,7,8,1,-2,-9,7,-7,4,2,-6,6,8,-1,-8,-4,-2,-10,-4,6,8,-2,1,-3,-7,-2,-3,-3,8,6,2,9,-2,4,-10,4,6,-10,-5,-4,10,-3,4,-4,9,-10,-1,-7,-6,10,1,-3,-8,-6,7,-5,-7,2,6,6,7,10,-5,-2,6,-8,-6,6,5,8,1,1,-4,9,-10,-7,1,6,2,6,9,-7,-4,-8,-4,-10,-2,4,3,-5,-10,-9,-10,4,2,4,-3,-8,-5,-3,5,-7,-4,10,-4,-2,9,-5,8,-3,-9,-4,9,9,-8,-4,-6,9,-1,9,8,-2,-5,-6,-6,5,-7,10,-1,-1,-1,-4,-7,7,6,5,-9,8,6,7,4,-9,-3,8,-10,-4,5,6,-3,-2,-8,10,6,1,4,3,-2,-1,-3,-8,8,-4,2,-7,-2,1,-5,-9,-2,2,2,4,-10,-8,1,-8,10,4,-1,-6,-7,4,9,-5,-6,7,-2,4,5,9,-10,7,-6,-1,-9,9,-3,9,8,4,-1,-4,1,9,9,-2,-2,10,-7,6,-7,3,7,5,8,-1,-10,3,2,5,-7,-2,-5,8,3,-9,8,4,4,3,9,-10,-1,-10,5,6,-4,3,-9,3,-5,-6,-2,6,-10,-9,-5,9,6,-8,-9,-4,-1,6,8,-5,10,3,2,2,-10,-2,-4,8,-4,-10,9,10,1,-3,3,-1,7,-9,-3,2,5,-8,-7,-8,3,8,4,-5,3,-3,3,-1,7,-1,2,4,7,6,-10,-9,-4,8,-4,-2,-8,3,-10,6,-6,-8,10,8,7,3,10,-10,-10,4,-1,9,3,5,-8,-3,-5,5,-6,-5,8,-8,-2,5,-9,6,-5,-1,6,-4,-4,1,9,-7,2,7,1,-10,-6,-5,-2,-4,5,-7,-9,7,9,5,7,-4,3,9,-7,-9,4,9,-4,-4,8,9,-10,5,6,9,1,2,-3,9,2,4,-1,-1,-7,3,-6,-5,1,-8,-9,2,-8,-5,7,-2,4,-4,-10,2,-2,5,5,4,9,5,-9,-9,9,-8,1,-5,8,2,4,7,6,2,1,9,10,-9,9,5,-3,-6,5,-9,-9,-2,4,-9,-3,-4,-8,8,9,6,7,-7,4,-5,3,1,7,-4,-7,3,-5,6,-4,-3,2,-10,-3,-1,10,-6,-2,-6,-4,-1,-3,-1,-5,-2,-1,-3,-4,-2,-2,4,9,-7,-10,-1,3,-3,10,7,-1,6,3,5,-2,6,1,6,-3,10,-3,-6,-5,-5,5,10,-10,-5,4,2,-6,10,2,7,6,-9,-10,-7,5,2,1,-5,-8,6,10,-8,10,-4,-1,-8,-2,-7,-1,9,-4,6,-3,-8,1,3,-4,8,6,-6,6,-5,10,-1,4,-9,-3,6,7,-6,-10,10,9,-9,3,-3,1,7,10,2,-10,-4,7,-8,6,3,-3,1,2,-7,7,-3,-10,10,8,5,5,10,1,-6,-4,-2,-1,-8,-3,7,-7,-6,3,-8,-10,-1,-4,8,-1,-2,-3,-3,-5,7,-8,-8,5,3,-2,8,-3,10,10,-3,-10,7,9,-8,-10,2,7,4,-6,1,7,-1,-8,8,-6,-10,-5,-2,6,-1,-4,6,-5,-5,-7,-6,-6,5,-7,-4,5,1,-3,-6,-2,-7,10,-8,-6,-5,-9,-9,9,1,-10,-8,10,-7,-2,-2,-10,1,-6,6,-3,-7,1,1,4,7,-6,-9,4,-9,-8,3,2,9,-6,-10,-5,3,-6,7,6,-4,-9,-1,10,1,3,-8,-1,-2,2,-6,-2,-5,3,8,6,-2,-4,7,-2,-2,4,1,6,2,7,5,7,8,1,-9,-10,1,-5,10,1,-4,1,-10,-9,5,10,-7,-9,7,5,-7,1,8,10,-5,9,6,5,7,8,-3,-1,7,9,1,2,-6,-10,8,2,9,-3,1,10,-3,1,9,8,3,-10,9,4,4,2,4,-3,9,-7,-5,10,9,4,3,-6,7,-3,-9,-6,3,-4,3,-1,5,-5,-6,8,6,5,-4,-8,-8,-1,-9,1,4,10,-5,2,-8,-10,-1,4,-10,5,-2,7,5,9,3,-8,5,6,9,-10,4,3,-8,-3,6,2,-2,-9,9,8,10,-10,-4,-5,-6,-7,-6,-8,-7,-3,-8,10,6,-4,9,-6,10,4,-4,-4,-5,-1,-3,-3,9,-3,1,-4,5,1,-1,-1,-4,-2,3,7,9,6,8,-2,7,1,-3,6,-4,-1,3,4,8,-6,-2,-10,-2,4,-8,-6,-4,-3,-3,-6,-6,-1,-3,-8,1,-4,6,5,-10,9,-5,-3,1,9,-4,10,2,-9,-6,-5,-1,-1,1,-7,5,9,1,3,7,-8,5,-1,1,3,6,-6,7,6,-3,10,-10,-10,-2,-3,-4,-10,-10,5,10,1,-6,-5,-4,2,3,-7,-1,-4,-1,2,9,-4,4,4,-9,-9,4,7,-4,-7,-1,2,3,-4,4,-10,1,-3,3,-8,4,7,-3,4,-3,6,5,-5,5,-3,-7,-3,-4,3,6,10,-1,6,1,-3,2,8,1,-8,-3,7,-5,-10,9,-8,9,4,5,5,-3,10,-10,-7,-2,-9,-7,8,-7,2,-6,-2,10,-6,-8,-1,-1,-8,-9,-4,-9,7,9,9,6,3,-4,6,1,-9,2,1,10,4,4,2,3,1,-7,-10,-4,4,10,-1,1,-1,9,6,-1,1,-2,-9,4,-7,-8,3,-1,-9,-8,-1,2,4,4,-3,4,-10,-8,-1,7,-1,-6,9,3,8,10,-10,1,-6,-4,10,4,4,9,2,3,4,-10,-5,-3,-4,-2,5,-8,10,9,-2,2,-7,-1,-8,4,4,-5,9,-1,10,5,9,-6,7,-9,-10,-5,1,-6,8,8,-6,-10,10,-5,-9,6,8,-6,-7,4,-5,4,4,-2,-2,6,-5,2,-10,-8,9], dtype = "uint16")#candidate|9954|(1716,)|const|uint16
var_9955 = relay.var("var_9955", dtype = "uint64", shape = (104,))#candidate|9955|(104,)|var|uint64
call_9953 = relay.TupleGetItem(func_2347_call(relay.reshape(const_9954.astype('uint16'), [12, 11, 13]), relay.reshape(const_9954.astype('uint16'), [12, 11, 13]), relay.reshape(var_9955.astype('uint64'), [104,]), ), 4)
call_9956 = relay.TupleGetItem(func_2351_call(relay.reshape(const_9954.astype('uint16'), [12, 11, 13]), relay.reshape(const_9954.astype('uint16'), [12, 11, 13]), relay.reshape(var_9955.astype('uint64'), [104,]), ), 4)
func_1194_call = mod.get_global_var('func_1194')
func_1196_call = mutated_mod.get_global_var('func_1196')
call_9965 = relay.TupleGetItem(func_1194_call(), 0)
call_9966 = relay.TupleGetItem(func_1196_call(), 0)
output = relay.Tuple([bop_9935,call_9938,const_9939,const_9940,call_9944,const_9945,call_9953,const_9954,var_9955,call_9965,])
output2 = relay.Tuple([bop_9935,call_9941,const_9939,const_9940,call_9946,const_9945,call_9956,const_9954,var_9955,call_9966,])
func_9968 = relay.Function([var_9927,var_9955,], output)
mod['func_9968'] = func_9968
mod = relay.transform.InferType()(mod)
var_9969 = relay.var("var_9969", dtype = "float32", shape = (4, 4, 3))#candidate|9969|(4, 4, 3)|var|float32
var_9970 = relay.var("var_9970", dtype = "uint64", shape = (104,))#candidate|9970|(104,)|var|uint64
output = func_9968(var_9969,var_9970,)
func_9971 = relay.Function([var_9969,var_9970,], output)
mutated_mod['func_9971'] = func_9971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7625_call = mod.get_global_var('func_7625')
func_7627_call = mutated_mod.get_global_var('func_7627')
call_9985 = relay.TupleGetItem(func_7625_call(), 1)
call_9986 = relay.TupleGetItem(func_7627_call(), 1)
func_437_call = mod.get_global_var('func_437')
func_438_call = mutated_mod.get_global_var('func_438')
call_9989 = func_437_call()
call_9990 = func_437_call()
func_7057_call = mod.get_global_var('func_7057')
func_7059_call = mutated_mod.get_global_var('func_7059')
call_9995 = func_7057_call()
call_9996 = func_7057_call()
output = relay.Tuple([call_9985,call_9989,call_9995,])
output2 = relay.Tuple([call_9986,call_9990,call_9996,])
func_10000 = relay.Function([], output)
mod['func_10000'] = func_10000
mod = relay.transform.InferType()(mod)
output = func_10000()
func_10001 = relay.Function([], output)
mutated_mod['func_10001'] = func_10001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10045 = relay.var("var_10045", dtype = "float64", shape = (1, 12, 14))#candidate|10045|(1, 12, 14)|var|float64
var_10046 = relay.var("var_10046", dtype = "float64", shape = (5, 12, 14))#candidate|10046|(5, 12, 14)|var|float64
bop_10047 = relay.power(var_10045.astype('float64'), var_10046.astype('float64')) # shape=(5, 12, 14)
output = bop_10047
output2 = bop_10047
F = relay.Function([var_10045,var_10046,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10045,var_10046,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

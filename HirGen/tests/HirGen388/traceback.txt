==========mod==========
#[version = "0.0.5"]
def @func_3244(%var_3231: Tensor[(4, 7, 16), float64]) -> (Tensor[(4, 7, 16), float64],) {
  %0 = cast(%var_3231, dtype="float64") /* ty=Tensor[(4, 7, 16), float64] */;
  %1 = sinh(%0) /* ty=Tensor[(4, 7, 16), float64] */;
  (%1,)
}

def @func_1290(%var_1280: Tensor[(11, 9, 4), float32]) -> Tensor[(11, 9, 4), float32] {
  %2 = cast(%var_1280, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  erf(%2) /* ty=Tensor[(11, 9, 4), float32] */
}

def @func_8036(%var_8024: Tensor[(448), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(448), bool]) {
  %3 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %4 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %5 = %4.2;
  %6 = cast(%var_8024, dtype="bool") /* ty=Tensor[(448), bool] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(1), int32] */;
  %8 = cast(%5, dtype="bool") /* ty=Tensor[(448), bool] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?), bool] */;
  %10 = %3.0;
  %11 = greater_equal(%8, %9) /* ty=Tensor[(448), bool] */;
  (%10, %11)
}

def @func_5517(%var_5501: Tensor[(7, 6, 16), float64], %var_5509: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) {
  %12 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %13 = %12.0;
  %14 = cast(%var_5501, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(66, 6), float32] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
  %19 = cast(%var_5509, dtype="float32") /* ty=Tensor[(528), float32] */;
  %20 = reshape(%18, newshape=[198, 2]) /* ty=Tensor[(198, 2), float32] */;
  %21 = reshape(%19, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %22 = @func_1667(%20, %21) /* ty=(Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) */;
  %23 = less_equal(%16, %17) /* ty=Tensor[(7, 6, 16), bool] */;
  %24 = %22.0;
  (%23, %24, meta[relay.Constant][0] /* ty=Tensor[(66, 6), float32] */, %var_5509)
}

def @func_226(%var_219: Tensor[(15, 8, 13), int16], %var_220: Tensor[(15, 8, 13), int16]) -> Tensor[(15, 8, 13), bool] {
  %25 = cast(%var_220, dtype="bool") /* ty=Tensor[(15, 8, 13), bool] */;
  %26 = shape_of(%var_219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_219, dtype="bool") /* ty=Tensor[(15, 8, 13), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%27, %28) /* ty=Tensor[(15, 8, 13), bool] */
}

def @func_5479() -> (Tensor[(7, 6, 16), float64],) {
  %29 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %30 = %29.0;
  (%30,)
}

def @func_8533() -> (Tensor[(7, 6, 16), float32], Tensor[(7, 6, 16), float64]) {
  %31 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %32 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
  %33 = %31.0;
  (%32, %33)
}

def @func_8239() -> Tensor[(7, 6, 16), float64] {
  %34 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %34.0
}

def @func_9411(%var_9404: Tensor[(11, 13, 12), float64]) -> Tensor[(11, 13, 12), float64] {
  %35 = cast(%var_9404, dtype="float64") /* ty=Tensor[(11, 13, 12), float64] */;
  sin(%35) /* ty=Tensor[(11, 13, 12), float64] */
}

def @func_5109(%var_5040: Tensor[(11, 12, 11), float64], %var_5047: Tensor[(490), float64], %var_5070: Tensor[(84), uint8], %var_5071: Tensor[(840), uint8], %var_5072: Tensor[(528), float32], %var_5089: Tensor[(169), int16]) -> (Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) {
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %37 = reshape(%36, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %38 = @func_3244(%37) /* ty=(Tensor[(4, 7, 16), float64],) */;
  %39 = cast(%var_5047, dtype="float64") /* ty=Tensor[(490), float64] */;
  %40 = reshape(%39, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
  %41 = @func_4231(%40) /* ty=(Tensor[(10, 7, 7), float64],) */;
  %42 = %41.0;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %44 = reshape(%43, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
  %45 = @func_4231(%44) /* ty=(Tensor[(10, 7, 7), float64],) */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(121, 14), float64] */, dtype="float64") /* ty=Tensor[(121, 14), float64] */;
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %48 = cast(%var_5070, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %49 = cast(%var_5071, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %50 = cast(%var_5072, dtype="float32") /* ty=Tensor[(528), float32] */;
  %51 = reshape(%46, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %52 = reshape(%47, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %53 = reshape(%48, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
  %54 = reshape(%49, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %55 = reshape(%50, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %56 = @func_3645(%51, %52, %53, %54, %55) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
  %57 = cast(%var_5040, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
  %58 = rsqrt(%57) /* ty=Tensor[(11, 12, 11), float64] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
  %60 = sqrt(%59) /* ty=Tensor[(11, 12, 11), float64] */;
  %61 = cast(%60, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
  %62 = cast(%var_5089, dtype="int16") /* ty=Tensor[(169), int16] */;
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(2535), int16] */, dtype="int16") /* ty=Tensor[(2535), int16] */;
  %64 = reshape(%62, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), int16] */;
  %65 = reshape(%63, newshape=[15, 13, 13]) /* ty=Tensor[(15, 13, 13), int16] */;
  %66 = @func_4023(%64, %65) /* ty=(Tensor[(15, 13, 13), int16],) */;
  %67 = %38.0;
  %68 = %45.0;
  %69 = %56.7;
  %70 = sin(%61) /* ty=Tensor[(11, 12, 11), float64] */;
  %71 = %66.0;
  (%67, meta[relay.Constant][1] /* ty=Tensor[(448), float64] */, %42, %var_5047, %68, %69, meta[relay.Constant][2] /* ty=Tensor[(121, 14), float64] */, meta[relay.Constant][3] /* ty=Tensor[(396), float32] */, %var_5070, %var_5071, %var_5072, %70, %71, %var_5089, meta[relay.Constant][4] /* ty=Tensor[(2535), int16] */)
}

def @func_5593() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) {
  %72 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %73 = %72.0;
  %74 = cast(%73, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %75 = cast(%73, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %76 = cast(meta[relay.Constant][5] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %78 = reshape(%76, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %79 = reshape(%77, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %80 = @func_831(%78, %79) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %82 = cast(meta[relay.Constant][6] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %83 = cast(meta[relay.Constant][7] /* ty=Tensor[(245, 2), float64] */, dtype="float64") /* ty=Tensor[(245, 2), float64] */;
  %84 = reshape(%81, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %85 = reshape(%82, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %86 = reshape(%83, newshape=[490]) /* ty=Tensor[(490), float64] */;
  %87 = @func_4679(%84, %85, %86) /* ty=(Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) */;
  %88 = tan(%74) /* ty=Tensor[(7, 6, 16), float64] */;
  %89 = cosh(%75) /* ty=Tensor[(7, 6, 16), float32] */;
  %90 = %80.1;
  %91 = %87.1;
  (%88, %89, %90, meta[relay.Constant][5] /* ty=Tensor[(528), float32] */, %91, meta[relay.Constant][6] /* ty=Tensor[(20), float64] */, meta[relay.Constant][7] /* ty=Tensor[(245, 2), float64] */)
}

def @func_4231(%var_4215: Tensor[(10, 7, 7), float64]) -> (Tensor[(10, 7, 7), float64],) {
  %92 = cast(%var_4215, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %93 = cosh(%92) /* ty=Tensor[(10, 7, 7), float64] */;
  (%93,)
}

def @func_9166() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  %94 = @func_8911() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %95 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %96 = %94.0;
  %97 = %95.0;
  (%96, %97)
}

def @func_8471() -> (Tensor[(7, 6, 16), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64]) {
  %98 = @func_6305() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %99 = cast(meta[relay.Constant][8] /* ty=Tensor[(490), float64] */, dtype="float64") /* ty=Tensor[(490), float64] */;
  %100 = reshape(%99, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
  %101 = @func_4231(%100) /* ty=(Tensor[(10, 7, 7), float64],) */;
  %102 = %98.0;
  %103 = %101.0;
  (%102, %103, meta[relay.Constant][8] /* ty=Tensor[(490), float64] */)
}

def @func_8122() -> Tensor[(7, 6, 16), float64] {
  @func_7684() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_7175() -> Tensor[(7, 6, 16), float64] {
  %104 = @func_6770() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) */;
  %104.0
}

def @func_8801(%var_8763: Tensor[(7, 6, 16), float64], %var_8775: Tensor[(126), float32]) -> (Tensor[(7, 6, 16), uint64], Tensor[(3, 7, 6), float32], float32, Tensor[(126), float32], Tensor[(7, 6, 16), float64]) {
  %105 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %106 = %105.0;
  %107 = cast(%var_8763, dtype="uint64") /* ty=Tensor[(7, 6, 16), uint64] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="uint64") /* ty=Tensor[(7, 6, 16), uint64] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %111 = cast(1.79413f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %112 = cast(%var_8775, dtype="float32") /* ty=Tensor[(126), float32] */;
  %113 = reshape(%111, newshape=[]) /* ty=float32 */;
  %114 = reshape(%112, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %115 = left_shift(%109, %110) /* ty=Tensor[(7, 6, 16), uint64] */;
  %116 = @func_8253(%113, %114) /* ty=Tensor[(3, 7, 6), float32] */;
  %117 = @func_8691() /* ty=Tensor[(7, 6, 16), float64] */;
  (%115, %116, 1.79413f /* ty=float32 */, %var_8775, %117)
}

def @func_5735(%var_5727: Tensor[(825), float64]) -> (Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) {
  %118 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %119 = %118.5;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(20), float64] */;
  %121 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %122 = %121.0;
  %123 = cast(%122, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %124 = sinh(%123) /* ty=Tensor[(7, 6, 16), float32] */;
  %125 = cast(%124, dtype="uint32") /* ty=Tensor[(7, 6, 16), uint32] */;
  %126 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%122, dtype="uint32") /* ty=Tensor[(7, 6, 16), uint32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %129 = cast(%var_5727, dtype="float64") /* ty=Tensor[(825), float64] */;
  %130 = reshape(%129, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %131 = @func_3370(%130) /* ty=(Tensor[(11, 15, 5), float64],) */;
  %132 = cosh(%120) /* ty=Tensor[(20), float64] */;
  %133 = maximum(%127, %128) /* ty=Tensor[(7, 6, 16), uint32] */;
  %134 = %131.0;
  (%132, %133, %134, %var_5727)
}

def @func_7131(%var_7116: Tensor[(1, 10, 16), float64], %var_7119: Tensor[(10, 10, 16), float64]) -> (Tensor[(10, 10, 16), uint32], Tensor[(?, 10, 16), bool]) {
  %135 = cast(%var_7116, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %136 = asinh(%135) /* ty=Tensor[(1, 10, 16), float64] */;
  %137 = cast(%136, dtype="uint32") /* ty=Tensor[(1, 10, 16), uint32] */;
  %138 = cast(%var_7119, dtype="uint32") /* ty=Tensor[(10, 10, 16), uint32] */;
  %139 = cast(%136, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %140 = shape_of(%var_7116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%var_7116, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %143 = multiply(%137, %138) /* ty=Tensor[(10, 10, 16), uint32] */;
  %144 = less_equal(%141, %142) /* ty=Tensor[(?, 10, 16), bool] */;
  (%143, %144)
}

def @func_9722() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(7, 6, 16), float32]) {
  %145 = cast(meta[relay.Constant][9] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %146 = reshape(%145, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %147 = @func_8036(%146) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), bool]) */;
  %148 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %149 = %148.0;
  %150 = cast(%149, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %151 = @func_8239() /* ty=Tensor[(7, 6, 16), float64] */;
  %152 = %147.0;
  %153 = acosh(%150) /* ty=Tensor[(7, 6, 16), float32] */;
  (%151, %152, meta[relay.Constant][9] /* ty=Tensor[(448), float64] */, %153)
}

def @func_7041() -> (Tensor[(10, 7, 7), float64],) {
  %154 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %155 = %154.4;
  (%155,)
}

def @func_10028(%var_9980: Tensor[(840), uint8], %var_9982: Tensor[(275), float32], %var_10000: Tensor[(5, 84), uint8]) -> (Tensor[(7, 6, 16), float64], Tensor[(1, 840), uint8], Tensor[(1188, 1), float64], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(5, 84), bool], Tensor[(528, 275), float64]) {
  %156 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %157 = cast(meta[relay.Constant][10] /* ty=Tensor[(1188, 1), float64] */, dtype="float64") /* ty=Tensor[(1188, 1), float64] */;
  %158 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 84), uint8] */, dtype="uint8") /* ty=Tensor[(1, 84), uint8] */;
  %159 = cast(%var_9980, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %160 = cast(meta[relay.Constant][12] /* ty=Tensor[(528, 1), float32] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %161 = cast(%var_9982, dtype="float32") /* ty=Tensor[(275), float32] */;
  %162 = reshape(%157, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), float64] */;
  %163 = reshape(%158, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %164 = reshape(%159, newshape=[1, 840]) /* ty=Tensor[(1, 840), uint8] */;
  %165 = reshape(%160, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %166 = reshape(%161, newshape=[275]) /* ty=Tensor[(275), float32] */;
  %167 = @func_6921(%162, %163, %164, %165, %166) /* ty=(Tensor[(9, 12, 11), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1, 1560), int16]) */;
  %168 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %169 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 84), uint8] */, dtype="bool") /* ty=Tensor[(1, 84), bool] */;
  %170 = cast(%var_10000, dtype="bool") /* ty=Tensor[(5, 84), bool] */;
  %171 = cast(%var_9982, dtype="float64") /* ty=Tensor[(275), float64] */;
  %172 = log2(%171) /* ty=Tensor[(275), float64] */;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(275), float64] */;
  %174 = cast(meta[relay.Constant][12] /* ty=Tensor[(528, 1), float32] */, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
  %175 = %156.0;
  %176 = %167.3;
  %177 = %168.0;
  %178 = equal(%169, %170) /* ty=Tensor[(5, 84), bool] */;
  %179 = floor_mod(%173, %174) /* ty=Tensor[(528, 275), float64] */;
  (%175, %176, meta[relay.Constant][10] /* ty=Tensor[(1188, 1), float64] */, %var_9980, %177, %178, %179)
}

def @func_9857() -> (Tensor[(7, 6, 16), float64],) {
  %180 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %181 = %180.0;
  (%181,)
}

def @func_5278() -> (Tensor[(7, 6, 16), float64],) {
  %182 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 6, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %183 = sigmoid(%182) /* ty=Tensor[(7, 6, 16), float32] */;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %185 = log2(%184) /* ty=Tensor[(7, 6, 16), float64] */;
  (%185,)
}

def @func_7670() -> (Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) {
  %186 = @func_6318() /* ty=Tensor[(7, 6, 16), float32] */;
  %187 = @func_6318() /* ty=Tensor[(7, 6, 16), float32] */;
  %188 = cast(%187, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %189 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%186, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %192 = cast(%186, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %193 = cast(meta[relay.Constant][14] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %194 = reshape(%192, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %195 = reshape(%193, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %196 = @func_5517(%194, %195) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) */;
  %197 = floor_divide(%190, %191) /* ty=Tensor[(7, 6, 16), float64] */;
  %198 = %196.1;
  (%197, %198, meta[relay.Constant][14] /* ty=Tensor[(528), float32] */)
}

def @func_9055() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32]) {
  %199 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %200 = %199.0;
  %201 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
  (%200, %201)
}

def @func_8691() -> Tensor[(7, 6, 16), float64] {
  %202 = @func_6419() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %202.2
}

def @func_1908(%var_1849: Tensor[(2, 7, 5), int64]) -> (Tensor[(11, 9, 4), float32], Tensor[(11, 9, 4), float32], Tensor[(2, 7, 5), uint64], Tensor[(2, 7, 5), bool], Tensor[(396), float32]) {
  %203 = cast(meta[relay.Constant][15] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %204 = reshape(%203, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %205 = cast(meta[relay.Constant][15] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %206 = reshape(%205, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %207 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 7, 5), int64] */, dtype="uint64") /* ty=Tensor[(2, 7, 5), uint64] */;
  %208 = shape_of(%var_1849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_1849, dtype="uint64") /* ty=Tensor[(2, 7, 5), uint64] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %211 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 7, 5), int64] */, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %212 = shape_of(%var_1849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%var_1849, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = not_equal(%213, %214) /* ty=Tensor[(2, 7, 5), bool] */;
  %216 = cast(%var_1849, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = cast(meta[relay.Constant][15] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %221 = asin(%220) /* ty=Tensor[(396), float32] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(396), float32] */;
  %223 = @func_1290(%204) /* ty=Tensor[(11, 9, 4), float32] */;
  %224 = @func_1290(%206) /* ty=Tensor[(11, 9, 4), float32] */;
  %225 = bitwise_or(%209, %210) /* ty=Tensor[(2, 7, 5), uint64] */;
  %226 = equal(%218, %219) /* ty=Tensor[(2, 7, 5), bool] */;
  %227 = sqrt(%222) /* ty=Tensor[(396), float32] */;
  (%223, %224, %225, %226, %227)
}

def @func_4023(%var_4017: Tensor[(1, 13, 13), int16], %var_4018: Tensor[(15, 13, 13), int16]) -> (Tensor[(15, 13, 13), int16],) {
  %228 = cast(%var_4017, dtype="int16") /* ty=Tensor[(1, 13, 13), int16] */;
  %229 = cast(%var_4018, dtype="int16") /* ty=Tensor[(15, 13, 13), int16] */;
  %230 = bitwise_xor(%228, %229) /* ty=Tensor[(15, 13, 13), int16] */;
  (%230,)
}

def @func_1786(%var_1759: Tensor[(1, 6, 14), uint8], %var_1760: Tensor[(10, 6, 14), uint8], %var_1765: Tensor[(528), float32]) -> (Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) {
  %231 = cast(%var_1759, dtype="uint8") /* ty=Tensor[(1, 6, 14), uint8] */;
  %232 = cast(%var_1760, dtype="uint8") /* ty=Tensor[(10, 6, 14), uint8] */;
  %233 = cast(%var_1765, dtype="float32") /* ty=Tensor[(528), float32] */;
  %234 = cast(%var_1765, dtype="float32") /* ty=Tensor[(528), float32] */;
  %235 = reshape(%233, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %236 = reshape(%234, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %237 = @func_831(%235, %236) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %238 = right_shift(%231, %232) /* ty=Tensor[(10, 6, 14), uint8] */;
  %239 = %237.1;
  (%238, %239, %var_1765)
}

def @func_3370(%var_3365: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), float64],) {
  %240 = cast(%var_3365, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
  %241 = log10(%240) /* ty=Tensor[(11, 15, 5), float64] */;
  (%241,)
}

def @func_7335(%var_7304: Tensor[(528), float32], %var_7319: Tensor[(490, 3), float64]) -> (Tensor[(7, 6, 16), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(819), float64], Tensor[(84), uint8], Tensor[(490, 3), float64]) {
  %242 = cast(%var_7304, dtype="float32") /* ty=Tensor[(528), float32] */;
  %243 = cast(%var_7304, dtype="float32") /* ty=Tensor[(528), float32] */;
  %244 = reshape(%242, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %245 = reshape(%243, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %246 = @func_831(%244, %245) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %247 = cast(%var_7304, dtype="float32") /* ty=Tensor[(528), float32] */;
  %248 = cast(meta[relay.Constant][17] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %250 = cast(%var_7319, dtype="float64") /* ty=Tensor[(490, 3), float64] */;
  %251 = reshape(%247, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %252 = reshape(%248, newshape=[91, 9]) /* ty=Tensor[(91, 9), float64] */;
  %253 = reshape(%249, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %254 = reshape(%250, newshape=[98, 15]) /* ty=Tensor[(98, 15), float64] */;
  %255 = @func_5862(%251, %252, %253, %254) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) */;
  %256 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
  %257 = %246.2;
  %258 = %255.2;
  (%256, %257, %var_7304, %258, meta[relay.Constant][17] /* ty=Tensor[(819), float64] */, meta[relay.Constant][18] /* ty=Tensor[(84), uint8] */, %var_7319)
}

def @func_7434() -> Tensor[(7, 6, 16), float32] {
  @func_5911() /* ty=Tensor[(7, 6, 16), float32] */
}

def @func_8970() -> Tensor[(7, 6, 16), float64] {
  %259 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %259.0
}

def @func_8729(%var_8714: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool]) {
  %260 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %261 = cast(%var_8714, dtype="float32") /* ty=Tensor[(528), float32] */;
  %262 = cast(%var_8714, dtype="float32") /* ty=Tensor[(528), float32] */;
  %263 = reshape(%261, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %264 = reshape(%262, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %265 = @func_831(%263, %264) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %266 = %265.2;
  %267 = cast(%266, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %268 = cast(%266, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %269 = reshape(%267, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %270 = reshape(%268, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %271 = %260.0;
  %272 = @func_226(%269, %270) /* ty=Tensor[(15, 8, 13), bool] */;
  (%271, %266, %var_8714, %272)
}

def @func_7561(%var_7531: Tensor[(1, 10, 4), uint64], %var_7538: Tensor[(13, 10, 4), bool], %var_7552: Tensor[(1452), float64], %var_7553: Tensor[(490), float64], %var_7555: Tensor[(6, 140), uint8]) -> (Tensor[(13, 10, 4), float64], Tensor[(528), float32], Tensor[(525), float32], Tensor[(672), float64], Tensor[(121, 14), float64], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(6, 140), uint8], Tensor[(169), int16]) {
  %273 = cast(%var_7531, dtype="bool") /* ty=Tensor[(1, 10, 4), bool] */;
  %274 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 10, 4), uint64] */, dtype="bool") /* ty=Tensor[(13, 10, 4), bool] */;
  %275 = less(%273, %274) /* ty=Tensor[(13, 10, 4), bool] */;
  %276 = cast(%var_7538, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
  %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%275, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %280 = cast(meta[relay.Constant][20] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %281 = cast(meta[relay.Constant][21] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %282 = reshape(%280, newshape=[7, 5, 15]) /* ty=Tensor[(7, 5, 15), float32] */;
  %283 = reshape(%281, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %284 = @func_5804(%282, %283) /* ty=(Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) */;
  %285 = cast(%var_7552, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %286 = cast(%var_7553, dtype="float64") /* ty=Tensor[(490), float64] */;
  %287 = cast(meta[relay.Constant][22] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %288 = cast(%var_7555, dtype="uint8") /* ty=Tensor[(6, 140), uint8] */;
  %289 = %284.5;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(528), float32] */;
  %291 = cast(meta[relay.Constant][23] /* ty=Tensor[(169), int16] */, dtype="int16") /* ty=Tensor[(169), int16] */;
  %292 = reshape(%285, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), float64] */;
  %293 = reshape(%286, newshape=[490]) /* ty=Tensor[(490), float64] */;
  %294 = reshape(%287, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %295 = reshape(%288, newshape=[840]) /* ty=Tensor[(840), uint8] */;
  %296 = reshape(%290, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %297 = reshape(%291, newshape=[169]) /* ty=Tensor[(169), int16] */;
  %298 = @func_5109(%292, %293, %294, %295, %296, %297) /* ty=(Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) */;
  %299 = floor_divide(%278, %279) /* ty=Tensor[(13, 10, 4), float64] */;
  %300 = %298.6;
  (%299, %289, meta[relay.Constant][20] /* ty=Tensor[(525), float32] */, meta[relay.Constant][21] /* ty=Tensor[(672), float64] */, %300, %var_7552, %var_7553, meta[relay.Constant][22] /* ty=Tensor[(84), uint8] */, %var_7555, meta[relay.Constant][23] /* ty=Tensor[(169), int16] */)
}

def @func_9269(%var_9219: Tensor[(819), float64], %var_9220: Tensor[(6, 66), float32], %var_9223: Tensor[(6, 66), float32], %var_9247: Tensor[(275), float32]) -> (Tensor[(448), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(819), float64], Tensor[(6, 66), bool], Tensor[(7, 6, 16), float64], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(11, 5, 5), float32]) {
  %301 = @func_6770() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) */;
  %302 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %303 = cast(%var_9219, dtype="float64") /* ty=Tensor[(819), float64] */;
  %304 = cast(%var_9220, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %305 = reshape(%303, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %306 = reshape(%304, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %307 = @func_6859(%305, %306) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) */;
  %308 = cast(%var_9223, dtype="bool") /* ty=Tensor[(6, 66), bool] */;
  %309 = shape_of(%var_9220, dtype="int32") /* ty=Tensor[(2), int32] */;
  %310 = cast(%var_9220, dtype="bool") /* ty=Tensor[(6, 66), bool] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %312 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %313 = cast(meta[relay.Constant][25] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %314 = reshape(%313, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %315 = @func_8729(%314) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool]) */;
  %316 = cast(%var_9247, dtype="float32") /* ty=Tensor[(275), float32] */;
  %317 = cast(%var_9247, dtype="float32") /* ty=Tensor[(275), float32] */;
  %318 = cast(meta[relay.Constant][24] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %319 = reshape(%316, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %320 = reshape(%317, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %321 = reshape(%318, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %322 = @func_3533(%319, %320, %321) /* ty=(Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) */;
  %323 = %322.0;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(11, 5, 5), float32] */;
  %325 = %301.1;
  %326 = %302.0;
  %327 = %307.7;
  %328 = less_equal(%310, %311) /* ty=Tensor[(6, 66), bool] */;
  %329 = %312.0;
  %330 = %315.2;
  %331 = acos(%324) /* ty=Tensor[(11, 5, 5), float32] */;
  (%325, %326, %327, %var_9219, %328, %329, %var_9247, meta[relay.Constant][24] /* ty=Tensor[(1560), int16] */, %330, meta[relay.Constant][25] /* ty=Tensor[(528), float32] */, %331)
}

def @func_5379(%var_5343: Tensor[(7, 6, 16), float64], %var_5355: Tensor[(840, 1), uint8], %var_5356: Tensor[(528), float32]) -> (Tensor[(6, 66), float32], Tensor[(847, 2), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), int64]) {
  %332 = cast(meta[relay.Constant][26] /* ty=Tensor[(847, 2), float64] */, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %333 = cast(meta[relay.Constant][27] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %334 = cast(meta[relay.Constant][28] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %335 = cast(%var_5355, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %336 = cast(%var_5356, dtype="float32") /* ty=Tensor[(528), float32] */;
  %337 = reshape(%332, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %338 = reshape(%333, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %339 = reshape(%334, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
  %340 = reshape(%335, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %341 = reshape(%336, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %342 = @func_3645(%337, %338, %339, %340, %341) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
  %343 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %344 = %343.0;
  %345 = cast(%var_5343, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%344, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %349 = add(%347, %348) /* ty=Tensor[(7, 6, 16), float64] */;
  %350 = cast(%344, dtype="int64") /* ty=Tensor[(7, 6, 16), int64] */;
  %351 = shape_of(%349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%349, dtype="int64") /* ty=Tensor[(7, 6, 16), int64] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %354 = %342.2;
  %355 = bitwise_xor(%352, %353) /* ty=Tensor[(7, 6, 16), int64] */;
  (%354, meta[relay.Constant][26] /* ty=Tensor[(847, 2), float64] */, meta[relay.Constant][27] /* ty=Tensor[(396), float32] */, meta[relay.Constant][28] /* ty=Tensor[(84), uint8] */, %var_5355, %var_5356, %355)
}

def @func_6650(%var_6531: Tensor[(825), float64], %var_6535: Tensor[(825), float64], %var_6541: Tensor[(1470), float64], %var_6573: Tensor[(169), int16], %var_6574: Tensor[(13, 195), int16], %var_6609: Tensor[(84), uint8], %var_6610: Tensor[(12, 70), uint8], %var_6611: Tensor[(8, 66), float32]) -> (Tensor[(20), float64], Tensor[(825), int16], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(5, 5, 14), float32], Tensor[(350), int32], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(13, 195), int16], Tensor[(7, 6, 16), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(12, 70), uint8], Tensor[(8, 66), float32], Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  %356 = cast(%var_6531, dtype="float64") /* ty=Tensor[(825), float64] */;
  %357 = reshape(%356, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %358 = @func_5735(%357) /* ty=(Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) */;
  %359 = cast(%var_6535, dtype="int16") /* ty=Tensor[(825), int16] */;
  %360 = shape_of(%var_6531, dtype="int32") /* ty=Tensor[(1), int32] */;
  %361 = cast(%var_6531, dtype="int16") /* ty=Tensor[(825), int16] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?), int16] */;
  %363 = cast(%var_6541, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %364 = cast(meta[relay.Constant][29] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %365 = reshape(%363, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %366 = reshape(%364, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %367 = @func_1968(%365, %366) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
  %368 = cast(meta[relay.Constant][30] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %369 = cast(meta[relay.Constant][30] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %370 = cast(meta[relay.Constant][30] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %371 = reshape(%368, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %372 = reshape(%369, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %373 = reshape(%370, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %374 = @func_1072(%371, %372, %373) /* ty=(Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) */;
  %375 = cast(%var_6573, dtype="int16") /* ty=Tensor[(169), int16] */;
  %376 = cast(%var_6574, dtype="int16") /* ty=Tensor[(13, 195), int16] */;
  %377 = reshape(%375, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), int16] */;
  %378 = reshape(%376, newshape=[15, 13, 13]) /* ty=Tensor[(15, 13, 13), int16] */;
  %379 = @func_4023(%377, %378) /* ty=(Tensor[(15, 13, 13), int16],) */;
  %380 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %381 = cast(%var_6609, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %382 = cast(%var_6610, dtype="uint8") /* ty=Tensor[(12, 70), uint8] */;
  %383 = cast(%var_6611, dtype="float32") /* ty=Tensor[(8, 66), float32] */;
  %384 = reshape(%381, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %385 = reshape(%382, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %386 = reshape(%383, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %387 = @func_1786(%384, %385, %386) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %388 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
  %389 = cast(%388, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %390 = exp(%389) /* ty=Tensor[(7, 6, 16), float32] */;
  %391 = cast(%390, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %392 = cast(meta[relay.Constant][31] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %393 = reshape(%392, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %394 = @func_4771(%393) /* ty=(Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %395 = %358.0;
  %396 = add(%361, %362) /* ty=Tensor[(825), int16] */;
  %397 = %367.2;
  %398 = %374.2;
  %399 = %379.0;
  %400 = %380.0;
  %401 = %387.0;
  %402 = cos(%391) /* ty=Tensor[(7, 6, 16), float64] */;
  %403 = %394.1;
  (%395, %396, %397, %var_6541, meta[relay.Constant][29] /* ty=Tensor[(1560), int16] */, %398, meta[relay.Constant][30] /* ty=Tensor[(350), int32] */, %399, %var_6573, %var_6574, %400, %401, %var_6609, %var_6610, %var_6611, %402, %403, meta[relay.Constant][31] /* ty=Tensor[(448), float64] */)
}

def @func_6157() -> (Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  %404 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %405 = cast(meta[relay.Constant][32] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %406 = reshape(%405, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %407 = @func_4771(%406) /* ty=(Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %408 = %404.0;
  %409 = %407.1;
  (%408, %409, meta[relay.Constant][32] /* ty=Tensor[(448), float64] */)
}

def @func_1968(%var_1920: Tensor[(14, 15, 7), float64], %var_1931: Tensor[(1560), int16]) -> (Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) {
  %410 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %411 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %412 = reshape(%410, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %413 = reshape(%411, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %414 = cast(%var_1920, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %415 = asinh(%414) /* ty=Tensor[(14, 15, 7), float64] */;
  %416 = cast(%415, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %417 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %418 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %419 = reshape(%417, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %420 = reshape(%418, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %421 = cast(%415, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
  %422 = cos(%421) /* ty=Tensor[(14, 15, 7), float64] */;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
  %424 = log10(%423) /* ty=Tensor[(14, 15, 7), float32] */;
  %425 = cast(%424, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
  %426 = @func_226(%412, %413) /* ty=Tensor[(15, 8, 13), bool] */;
  %427 = rsqrt(%416) /* ty=Tensor[(14, 15, 7), float64] */;
  %428 = @func_226(%419, %420) /* ty=Tensor[(15, 8, 13), bool] */;
  %429 = asin(%425) /* ty=Tensor[(14, 15, 7), float32] */;
  (%426, %var_1931, %427, %428, %429)
}

def @func_7684() -> Tensor[(7, 6, 16), float64] {
  %430 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %430.1
}

def @func_9125() -> (Tensor[(7, 6, 16), bool],) {
  %431 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %432 = %431.0;
  %433 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 6, 16), float64] */, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %437 = logical_or(%435, %436) /* ty=Tensor[(7, 6, 16), bool] */;
  (%437,)
}

def @func_8911() -> (Tensor[(7, 6, 16), float64],) {
  %438 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %439 = %438.0;
  (%439,)
}

def @func_7478() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  %440 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %441 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %442 = %440.0;
  %443 = %441.0;
  (%442, %443)
}

def @func_3645(%var_3576: Tensor[(11, 14, 11), float64], %var_3586: Tensor[(6, 66), float32], %var_3600: Tensor[(21, 4), uint8], %var_3609: Tensor[(840, 1), uint8], %var_3610: Tensor[(528), float32]) -> (Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) {
  %444 = cast(%var_3576, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  %445 = cast(%var_3586, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %446 = reshape(%445, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %447 = cast(meta[relay.Constant][34] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %448 = cast(%var_3600, dtype="uint8") /* ty=Tensor[(21, 4), uint8] */;
  %449 = reshape(%447, newshape=[9, 7, 13]) /* ty=Tensor[(9, 7, 13), float64] */;
  %450 = reshape(%448, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %451 = @func_2639(%449, %450) /* ty=(Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) */;
  %452 = cast(%var_3576, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  %453 = cosh(%452) /* ty=Tensor[(11, 14, 11), float32] */;
  %454 = cast(%453, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  %455 = cast(%var_3600, dtype="uint8") /* ty=Tensor[(21, 4), uint8] */;
  %456 = cast(%var_3609, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %457 = cast(%var_3610, dtype="float32") /* ty=Tensor[(528), float32] */;
  %458 = reshape(%455, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %459 = reshape(%456, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %460 = reshape(%457, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %461 = @func_1786(%458, %459, %460) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %462 = @func_1290(%446) /* ty=Tensor[(11, 9, 4), float32] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  %464 = reshape(%463, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %465 = sigmoid(%444) /* ty=Tensor[(11, 14, 11), float64] */;
  %466 = %451.1;
  %467 = acos(%454) /* ty=Tensor[(11, 14, 11), float32] */;
  %468 = %461.1;
  %469 = @func_1290(%464) /* ty=Tensor[(11, 9, 4), float32] */;
  (%465, %462, %var_3586, %466, meta[relay.Constant][34] /* ty=Tensor[(819), float64] */, %var_3600, %467, %468, %var_3609, %var_3610, %469)
}

def @func_2706(%var_2682: Tensor[(6, 13, 9), float32]) -> Tensor[(6, 13, 9), float32] {
  %470 = cast(%var_2682, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
  %471 = erf(%470) /* ty=Tensor[(6, 13, 9), float32] */;
  %472 = cast(%var_2682, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
  %473 = sin(%472) /* ty=Tensor[(6, 13, 9), float32] */;
  %474 = cast(%473, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
  %475 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%471, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%476, %477) /* ty=Tensor[(6, 13, 9), float32] */
}

def @func_6070(%var_5955: Tensor[(528), float32], %var_5956: Tensor[(819), float64], %var_5958: Tensor[(1470), float64], %var_5988: Tensor[(1694), float64], %var_5989: Tensor[(396), float32], %var_6020: Tensor[(70), int64]) -> (Tensor[(528), float32], Tensor[(84), uint8], Tensor[(1470), float64], Tensor[(819), bool], Tensor[(7, 6, 16), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(2, 7, 5), uint64], Tensor[(70), int64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool]) {
  %478 = cast(%var_5955, dtype="float32") /* ty=Tensor[(528), float32] */;
  %479 = cast(%var_5956, dtype="float64") /* ty=Tensor[(819), float64] */;
  %480 = cast(meta[relay.Constant][35] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %481 = cast(%var_5958, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %482 = reshape(%478, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %483 = reshape(%479, newshape=[91, 9]) /* ty=Tensor[(91, 9), float64] */;
  %484 = reshape(%480, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %485 = reshape(%481, newshape=[98, 15]) /* ty=Tensor[(98, 15), float64] */;
  %486 = @func_5862(%482, %483, %484, %485) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) */;
  %487 = %486.3;
  %488 = cast(%487, dtype="bool") /* ty=Tensor[(91, 9), bool] */;
  %489 = shape_of(%var_5956, dtype="int32") /* ty=Tensor[(1), int32] */;
  %490 = cast(%var_5956, dtype="bool") /* ty=Tensor[(819), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?), bool] */;
  %492 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %493 = %492.0;
  %494 = cast(%493, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %495 = sin(%494) /* ty=Tensor[(7, 6, 16), float32] */;
  %496 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 6, 16), float32] */, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%495, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %500 = equal(%498, %499) /* ty=Tensor[(7, 6, 16), bool] */;
  %501 = cast(%500, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %502 = cast(%var_5988, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %503 = cast(%var_5989, dtype="float32") /* ty=Tensor[(396), float32] */;
  %504 = cast(meta[relay.Constant][35] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %505 = cast(meta[relay.Constant][37] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %506 = cast(%var_5955, dtype="float32") /* ty=Tensor[(528), float32] */;
  %507 = reshape(%502, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %508 = reshape(%503, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %509 = reshape(%504, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
  %510 = reshape(%505, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %511 = reshape(%506, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %512 = @func_3645(%507, %508, %509, %510, %511) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
  %513 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %514 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %515 = cast(%var_6020, dtype="int64") /* ty=Tensor[(70), int64] */;
  %516 = reshape(%515, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int64] */;
  %517 = @func_1908(%516) /* ty=(Tensor[(11, 9, 4), float32], Tensor[(11, 9, 4), float32], Tensor[(2, 7, 5), uint64], Tensor[(2, 7, 5), bool], Tensor[(396), float32]) */;
  %518 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %519 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %520 = %514.2;
  %521 = cast(%520, dtype="int16") /* ty=Tensor[(15, 8, 13), int16] */;
  %522 = cast(%520, dtype="int16") /* ty=Tensor[(15, 8, 13), int16] */;
  %523 = reshape(%521, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %524 = reshape(%522, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %525 = logical_or(%490, %491) /* ty=Tensor[(819), bool] */;
  %526 = atanh(%501) /* ty=Tensor[(7, 6, 16), float32] */;
  %527 = %512.6;
  %528 = %513.0;
  %529 = %517.2;
  %530 = %518.0;
  %531 = %519.0;
  %532 = @func_226(%523, %524) /* ty=Tensor[(15, 8, 13), bool] */;
  (%var_5955, meta[relay.Constant][35] /* ty=Tensor[(84), uint8] */, %var_5958, %525, %526, %527, %var_5988, %var_5989, meta[relay.Constant][37] /* ty=Tensor[(840), uint8] */, %528, %520, %529, %var_6020, %530, %531, %532)
}

def @func_7945(%var_7941: Tensor[(12, 6, 5), float32]) -> (Tensor[(12, 6, 5), float32],) {
  %533 = cast(%var_7941, dtype="float32") /* ty=Tensor[(12, 6, 5), float32] */;
  %534 = sinh(%533) /* ty=Tensor[(12, 6, 5), float32] */;
  (%534,)
}

def @func_6318() -> Tensor[(7, 6, 16), float32] {
  @func_5911() /* ty=Tensor[(7, 6, 16), float32] */
}

def @func_8555() -> (Tensor[(7, 6, 16), float64],) {
  %535 = @func_8239() /* ty=Tensor[(7, 6, 16), float64] */;
  (%535,)
}

def @func_5531() -> (Tensor[(7, 6, 16), float64],) {
  %536 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %537 = %536.0;
  (%537,)
}

def @func_8284(%var_8271: Tensor[(56, 8), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), bool], Tensor[(56, 8), float64]) {
  %538 = @func_7670() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) */;
  %539 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %540 = cast(%var_8271, dtype="float64") /* ty=Tensor[(56, 8), float64] */;
  %541 = reshape(%540, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %542 = @func_8036(%541) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), bool]) */;
  %543 = %538.0;
  %544 = %539.0;
  %545 = %542.1;
  (%543, %544, %545, %var_8271)
}

def @func_9634() -> (Tensor[(10, 7, 7), float64],) {
  %546 = @func_8471() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64]) */;
  %547 = %546.1;
  (%547,)
}

def @func_8370(%var_8350: Tensor[(490), float64], %var_8351: Tensor[(84), uint8], %var_8352: Tensor[(1, 840), uint8], %var_8353: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(12, 6, 5), float32], Tensor[(360), float32], Tensor[(15, 13, 13), int16], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(169), float32]) {
  %548 = cast(meta[relay.Constant][38] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %549 = reshape(%548, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float32] */;
  %550 = @func_7945(%549) /* ty=(Tensor[(12, 6, 5), float32],) */;
  %551 = cast(meta[relay.Constant][39] /* ty=Tensor[(1452), float64] */, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %552 = cast(%var_8350, dtype="float64") /* ty=Tensor[(490), float64] */;
  %553 = cast(%var_8351, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %554 = cast(%var_8352, dtype="uint8") /* ty=Tensor[(1, 840), uint8] */;
  %555 = cast(%var_8353, dtype="float32") /* ty=Tensor[(528), float32] */;
  %556 = cast(meta[relay.Constant][40] /* ty=Tensor[(169), int16] */, dtype="int16") /* ty=Tensor[(169), int16] */;
  %557 = reshape(%551, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), float64] */;
  %558 = reshape(%552, newshape=[490]) /* ty=Tensor[(490), float64] */;
  %559 = reshape(%553, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %560 = reshape(%554, newshape=[840]) /* ty=Tensor[(840), uint8] */;
  %561 = reshape(%555, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %562 = reshape(%556, newshape=[169]) /* ty=Tensor[(169), int16] */;
  %563 = @func_5109(%557, %558, %559, %560, %561, %562) /* ty=(Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) */;
  %564 = cast(meta[relay.Constant][40] /* ty=Tensor[(169), int16] */, dtype="float32") /* ty=Tensor[(169), float32] */;
  %565 = @func_8239() /* ty=Tensor[(7, 6, 16), float64] */;
  %566 = %550.0;
  %567 = %563.12;
  %568 = cosh(%564) /* ty=Tensor[(169), float32] */;
  (%565, %566, meta[relay.Constant][38] /* ty=Tensor[(360), float32] */, %567, meta[relay.Constant][39] /* ty=Tensor[(1452), float64] */, %var_8350, %var_8351, %var_8352, %var_8353, %568)
}

def @func_9395(%var_9373: Tensor[(528), float32], %var_9376: Tensor[(14, 105), float64]) -> (Tensor[(7, 6, 16), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 105), int16], Tensor[(6, 13, 9), float32], Tensor[(702), float32]) {
  %569 = @func_8980() /* ty=(Tensor[(7, 6, 16), float32],) */;
  %570 = cast(%var_9373, dtype="float32") /* ty=Tensor[(528), float32] */;
  %571 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
  %572 = reshape(%570, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %573 = reshape(%571, newshape=[490, 3]) /* ty=Tensor[(490, 3), float64] */;
  %574 = @func_7335(%572, %573) /* ty=(Tensor[(7, 6, 16), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(819), float64], Tensor[(84), uint8], Tensor[(490, 3), float64]) */;
  %575 = cast(%var_9376, dtype="bool") /* ty=Tensor[(14, 105), bool] */;
  %576 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(14, 105), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %577 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 105), float64] */, dtype="bool") /* ty=Tensor[(14, 105), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %579 = logical_or(%577, %578) /* ty=Tensor[(14, 105), bool] */;
  %580 = cast(%var_9376, dtype="int16") /* ty=Tensor[(14, 105), int16] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(2), int32] */;
  %582 = cast(%579, dtype="int16") /* ty=Tensor[(14, 105), int16] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %584 = cast(meta[relay.Constant][42] /* ty=Tensor[(702), float32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
  %585 = reshape(%584, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float32] */;
  %586 = %569.0;
  %587 = %574.2;
  %588 = @func_8122() /* ty=Tensor[(7, 6, 16), float64] */;
  %589 = left_shift(%582, %583) /* ty=Tensor[(14, 105), int16] */;
  %590 = @func_2706(%585) /* ty=Tensor[(6, 13, 9), float32] */;
  (%586, %587, %var_9373, %588, %589, %590, meta[relay.Constant][42] /* ty=Tensor[(702), float32] */)
}

def @func_8440(%var_8421: Tensor[(819), float64], %var_8422: Tensor[(396), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(396), float64]) {
  %591 = @func_6419() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %592 = cast(%var_8421, dtype="float64") /* ty=Tensor[(819), float64] */;
  %593 = cast(%var_8422, dtype="float32") /* ty=Tensor[(396), float32] */;
  %594 = reshape(%592, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %595 = reshape(%593, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %596 = @func_6859(%594, %595) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) */;
  %597 = cast(meta[relay.Constant][43] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
  %598 = reshape(%597, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %599 = @func_3370(%598) /* ty=(Tensor[(11, 15, 5), float64],) */;
  %600 = cast(%var_8422, dtype="float64") /* ty=Tensor[(396), float64] */;
  %601 = %591.2;
  %602 = %596.0;
  %603 = %599.0;
  %604 = exp(%600) /* ty=Tensor[(396), float64] */;
  (%601, %602, %var_8421, %603, meta[relay.Constant][43] /* ty=Tensor[(825), float64] */, %604)
}

def @func_9840() -> (Tensor[(7, 6, 16), float64], Tensor[(6, 13, 9), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(702, 3), bool], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float32], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(702, 3), bool]) {
  %605 = @func_9166() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %606 = cast(meta[relay.Constant][44] /* ty=Tensor[(702, 1), float32] */, dtype="float32") /* ty=Tensor[(702, 1), float32] */;
  %607 = reshape(%606, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float32] */;
  %608 = cast(meta[relay.Constant][45] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %609 = reshape(%608, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %610 = @func_3244(%609) /* ty=(Tensor[(4, 7, 16), float64],) */;
  %611 = cast(meta[relay.Constant][44] /* ty=Tensor[(702, 1), float32] */, dtype="bool") /* ty=Tensor[(702, 1), bool] */;
  %612 = cast(meta[relay.Constant][46] /* ty=Tensor[(702, 3), float32] */, dtype="bool") /* ty=Tensor[(702, 3), bool] */;
  %613 = cast(meta[relay.Constant][47] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %614 = cast(meta[relay.Constant][48] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %615 = cast(meta[relay.Constant][49] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %616 = reshape(%613, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %617 = reshape(%614, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %618 = reshape(%615, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %619 = @func_1786(%616, %617, %618) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %620 = cast(meta[relay.Constant][50] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
  %621 = reshape(%620, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %622 = @func_5735(%621) /* ty=(Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) */;
  %623 = cast(meta[relay.Constant][44] /* ty=Tensor[(702, 1), float32] */, dtype="float64") /* ty=Tensor[(702, 1), float64] */;
  %624 = log10(%623) /* ty=Tensor[(702, 1), float64] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(702, 1), float32] */;
  %626 = sqrt(%625) /* ty=Tensor[(702, 1), float32] */;
  %627 = cast(%626, dtype="bool") /* ty=Tensor[(702, 1), bool] */;
  %628 = cast(meta[relay.Constant][46] /* ty=Tensor[(702, 3), float32] */, dtype="bool") /* ty=Tensor[(702, 3), bool] */;
  %629 = %605.0;
  %630 = @func_2706(%607) /* ty=Tensor[(6, 13, 9), float32] */;
  %631 = %610.0;
  %632 = greater_equal(%611, %612) /* ty=Tensor[(702, 3), bool] */;
  %633 = %619.1;
  %634 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
  %635 = %622.2;
  %636 = equal(%627, %628) /* ty=Tensor[(702, 3), bool] */;
  (%629, %630, %631, meta[relay.Constant][45] /* ty=Tensor[(448), float64] */, %632, %633, meta[relay.Constant][47] /* ty=Tensor[(84), uint8] */, meta[relay.Constant][48] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][49] /* ty=Tensor[(528), float32] */, %634, %635, meta[relay.Constant][50] /* ty=Tensor[(825), float64] */, %636)
}

def @func_6770() -> (Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) {
  %637 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %638 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %639 = cast(meta[relay.Constant][51] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %640 = %637.0;
  %641 = cast(%640, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %642 = reshape(%639, newshape=[7, 5, 15]) /* ty=Tensor[(7, 5, 15), float32] */;
  %643 = reshape(%641, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %644 = @func_5804(%642, %643) /* ty=(Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) */;
  %645 = %638.2;
  %646 = %644.5;
  (%640, %645, %646, meta[relay.Constant][51] /* ty=Tensor[(525), float32] */)
}

def @func_1667(%var_1648: Tensor[(198, 2), float32], %var_1657: Tensor[(528), float32]) -> (Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) {
  %647 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 2, 8), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %648 = cast(%var_1648, dtype="float32") /* ty=Tensor[(198, 2), float32] */;
  %649 = reshape(%648, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %650 = cast(%var_1657, dtype="float32") /* ty=Tensor[(528), float32] */;
  %651 = cast(%var_1657, dtype="float32") /* ty=Tensor[(528), float32] */;
  %652 = reshape(%650, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %653 = reshape(%651, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %654 = @func_831(%652, %653) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %655 = asin(%647) /* ty=Tensor[(12, 2, 8), float64] */;
  %656 = @func_1290(%649) /* ty=Tensor[(11, 9, 4), float32] */;
  %657 = %654.0;
  (%655, %656, %var_1648, %657, %var_1657)
}

def @func_9016(%var_8985: Tensor[(13, 1, 6), float64]) -> (Tensor[(13, 1, 6), bool], Tensor[(7, 6, 16), bool], Tensor[(672), float64], Tensor[(528), float32], Tensor[(13, 1, 6), uint8], Tensor[(7, 6, 16), float64], Tensor[(13, ?, 6), float64]) {
  %658 = cast(2.97074f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %659 = cast(%var_8985, dtype="bool") /* ty=Tensor[(13, 1, 6), bool] */;
  %660 = cast(meta[relay.Constant][53] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %661 = cast(meta[relay.Constant][54] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %662 = reshape(%660, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %663 = reshape(%661, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %664 = @func_5517(%662, %663) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) */;
  %665 = cast(%var_8985, dtype="float32") /* ty=Tensor[(13, 1, 6), float32] */;
  %666 = log(%665) /* ty=Tensor[(13, 1, 6), float32] */;
  %667 = cast(%666, dtype="uint8") /* ty=Tensor[(13, 1, 6), uint8] */;
  %668 = cast(2.97074f64 /* ty=float64 */, dtype="uint8") /* ty=uint8 */;
  %669 = cast(%666, dtype="float64") /* ty=Tensor[(13, 1, 6), float64] */;
  %670 = shape_of(%var_8985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%var_8985, dtype="float64") /* ty=Tensor[(13, 1, 6), float64] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %673 = less(%658, %659) /* ty=Tensor[(13, 1, 6), bool] */;
  %674 = %664.0;
  %675 = multiply(%667, %668) /* ty=Tensor[(13, 1, 6), uint8] */;
  %676 = @func_8691() /* ty=Tensor[(7, 6, 16), float64] */;
  %677 = divide(%671, %672) /* ty=Tensor[(13, ?, 6), float64] */;
  (%673, %674, meta[relay.Constant][53] /* ty=Tensor[(672), float64] */, meta[relay.Constant][54] /* ty=Tensor[(528), float32] */, %675, %676, %677)
}

def @func_7854(%var_7811: Tensor[(1470), float64], %var_7812: Tensor[(169), int16], %var_7813: Tensor[(2535), int16], %var_7815: Tensor[(60, 14), uint8], %var_7816: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(825), float64], Tensor[(169), int16], Tensor[(2535), int16], Tensor[(42, 2), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 15, 7), bool], Tensor[(60, 14), float64], Tensor[(10, 6, 14), uint8]) {
  %678 = @func_6305() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %679 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %680 = cast(meta[relay.Constant][55] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
  %681 = cast(meta[relay.Constant][55] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
  %682 = cast(%var_7811, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %683 = cast(%var_7812, dtype="int16") /* ty=Tensor[(169), int16] */;
  %684 = cast(%var_7813, dtype="int16") /* ty=Tensor[(2535), int16] */;
  %685 = cast(meta[relay.Constant][56] /* ty=Tensor[(42, 2), uint8] */, dtype="uint8") /* ty=Tensor[(42, 2), uint8] */;
  %686 = cast(%var_7815, dtype="uint8") /* ty=Tensor[(60, 14), uint8] */;
  %687 = cast(%var_7816, dtype="float32") /* ty=Tensor[(528), float32] */;
  %688 = reshape(%680, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %689 = reshape(%681, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %690 = reshape(%682, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %691 = reshape(%683, newshape=[169]) /* ty=Tensor[(169), int16] */;
  %692 = reshape(%684, newshape=[13, 195]) /* ty=Tensor[(13, 195), int16] */;
  %693 = reshape(%685, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %694 = reshape(%686, newshape=[12, 70]) /* ty=Tensor[(12, 70), uint8] */;
  %695 = reshape(%687, newshape=[8, 66]) /* ty=Tensor[(8, 66), float32] */;
  %696 = @func_6650(%688, %689, %690, %691, %692, %693, %694, %695) /* ty=(Tensor[(20), float64], Tensor[(825), int16], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(5, 5, 14), float32], Tensor[(350), int32], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(13, 195), int16], Tensor[(7, 6, 16), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(12, 70), uint8], Tensor[(8, 66), float32], Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %697 = %696.2;
  %698 = cast(%var_7811, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="bool") /* ty=Tensor[(14, 15, 7), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %702 = cast(%var_7815, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
  %703 = cast(meta[relay.Constant][56] /* ty=Tensor[(42, 2), uint8] */, dtype="uint8") /* ty=Tensor[(42, 2), uint8] */;
  %704 = cast(%var_7815, dtype="uint8") /* ty=Tensor[(60, 14), uint8] */;
  %705 = cast(%var_7816, dtype="float32") /* ty=Tensor[(528), float32] */;
  %706 = reshape(%703, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %707 = reshape(%704, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %708 = reshape(%705, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %709 = @func_1786(%706, %707, %708) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %710 = %678.0;
  %711 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
  %712 = %679.0;
  %713 = greater_equal(%700, %701) /* ty=Tensor[(14, 15, 7), bool] */;
  %714 = sinh(%702) /* ty=Tensor[(60, 14), float64] */;
  %715 = %709.0;
  (%710, %711, meta[relay.Constant][55] /* ty=Tensor[(825), float64] */, %var_7812, %var_7813, meta[relay.Constant][56] /* ty=Tensor[(42, 2), uint8] */, %var_7816, %712, %713, %714, %715)
}

def @func_3533(%var_3486: Tensor[(11, 5, 5), float32], %var_3487: Tensor[(11, 5, 5), float32], %var_3499: Tensor[(1560), int16]) -> (Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) {
  %716 = cast(%var_3487, dtype="float32") /* ty=Tensor[(11, 5, 5), float32] */;
  %717 = shape_of(%var_3486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%var_3486, dtype="float32") /* ty=Tensor[(11, 5, 5), float32] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %720 = cast(%var_3499, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %721 = cast(%var_3499, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %722 = reshape(%720, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %723 = reshape(%721, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %724 = @func_226(%722, %723) /* ty=Tensor[(15, 8, 13), bool] */;
  %725 = cast(%724, dtype="int16") /* ty=Tensor[(15, 8, 13), int16] */;
  %726 = cast(%var_3499, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %727 = reshape(%725, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %728 = reshape(%726, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %729 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 117), float32] */, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %730 = reshape(%729, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float32] */;
  %731 = mod(%718, %719) /* ty=Tensor[(11, 5, 5), float32] */;
  %732 = @func_226(%727, %728) /* ty=Tensor[(15, 8, 13), bool] */;
  %733 = @func_2706(%730) /* ty=Tensor[(6, 13, 9), float32] */;
  (%731, %724, %var_3499, %732, %733, meta[relay.Constant][57] /* ty=Tensor[(6, 117), float32] */)
}

def @func_831(%var_803: Tensor[(11, 4, 12), float32], %var_807: Tensor[(11, 4, 12), float32]) -> (Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) {
  %734 = cast(%var_803, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %735 = sinh(%734) /* ty=Tensor[(11, 4, 12), float32] */;
  %736 = cast(%var_807, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %740 = cast(meta[relay.Constant][58] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %741 = cast(meta[relay.Constant][58] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %742 = reshape(%740, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %743 = reshape(%741, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %744 = less_equal(%738, %739) /* ty=Tensor[(11, 4, 12), bool] */;
  %745 = @func_226(%742, %743) /* ty=Tensor[(15, 8, 13), bool] */;
  (%744, %745, meta[relay.Constant][58] /* ty=Tensor[(1560), int16] */)
}

def @main(%var_10094: Tensor[(16, 7, 15), float64]) -> Tensor[(16, 7, 15), float64] {
  %746 = cast(%var_10094, dtype="float64") /* ty=Tensor[(16, 7, 15), float64] */;
  sinh(%746) /* ty=Tensor[(16, 7, 15), float64] */
}

def @func_9452() -> (Tensor[(7, 6, 16), float64],) {
  %747 = @func_7670() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) */;
  %748 = %747.0;
  (%748,)
}

def @func_6305() -> (Tensor[(7, 6, 16), float64],) {
  %749 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %750 = %749.0;
  (%750,)
}

def @func_7742(%var_7715: Tensor[(1560), int16], %var_7721: Tensor[(3, 132), float32], %var_7722: Tensor[(528, 1), float32], %var_7739: Tensor[(10, 2), float64]) -> (Tensor[(4, 7, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(12, 2, 8), float64], Tensor[(3, 132), float32], Tensor[(528, 1), float32], Tensor[(5, 15, 3), float32], Tensor[(5, 2, 2), float64], Tensor[(10, 2), float64], Tensor[(1, 490), float64]) {
  %751 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %752 = cast(meta[relay.Constant][59] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %753 = cast(meta[relay.Constant][59] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %754 = cast(%var_7715, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %755 = reshape(%752, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %756 = reshape(%753, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %757 = reshape(%754, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %758 = @func_3533(%755, %756, %757) /* ty=(Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) */;
  %759 = cast(%var_7721, dtype="float32") /* ty=Tensor[(3, 132), float32] */;
  %760 = cast(%var_7722, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %761 = reshape(%759, newshape=[198, 2]) /* ty=Tensor[(198, 2), float32] */;
  %762 = reshape(%760, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %763 = @func_1667(%761, %762) /* ty=(Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) */;
  %764 = %751.1;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(4, 7, 16), float64] */;
  %766 = reshape(%765, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %767 = @func_4771(%766) /* ty=(Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %768 = cast(%var_7739, dtype="float64") /* ty=Tensor[(10, 2), float64] */;
  %769 = cast(%var_7739, dtype="float64") /* ty=Tensor[(10, 2), float64] */;
  %770 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 490), float64] */, dtype="float64") /* ty=Tensor[(1, 490), float64] */;
  %771 = reshape(%768, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %772 = reshape(%769, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %773 = reshape(%770, newshape=[490]) /* ty=Tensor[(490), float64] */;
  %774 = @func_4679(%771, %772, %773) /* ty=(Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) */;
  %775 = %758.3;
  %776 = %763.0;
  %777 = %767.0;
  %778 = %774.0;
  (%764, %775, meta[relay.Constant][59] /* ty=Tensor[(275), float32] */, %var_7715, %776, %var_7721, %var_7722, %777, %778, %var_7739, meta[relay.Constant][60] /* ty=Tensor[(1, 490), float64] */)
}

def @func_8980() -> (Tensor[(7, 6, 16), float32],) {
  %779 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
  (%779,)
}

def @func_6287(%var_6263: Tensor[(1470), float64], %var_6279: Tensor[(672, 5), float32]) -> (Tensor[(448), float64], Tensor[(66, 6), float32], Tensor[(528), float32], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(672, 5), int16]) {
  %780 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %781 = cast(meta[relay.Constant][61] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
  %782 = cast(meta[relay.Constant][62] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %783 = reshape(%781, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %784 = reshape(%782, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %785 = @func_5517(%783, %784) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) */;
  %786 = cast(%var_6263, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %787 = cast(meta[relay.Constant][63] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %788 = reshape(%786, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %789 = reshape(%787, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %790 = @func_1968(%788, %789) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
  %791 = cast(meta[relay.Constant][61] /* ty=Tensor[(672, 1), float64] */, dtype="float32") /* ty=Tensor[(672, 1), float32] */;
  %792 = asin(%791) /* ty=Tensor[(672, 1), float32] */;
  %793 = cast(%792, dtype="bool") /* ty=Tensor[(672, 1), bool] */;
  %794 = cast(%var_6279, dtype="bool") /* ty=Tensor[(672, 5), bool] */;
  %795 = logical_and(%793, %794) /* ty=Tensor[(672, 5), bool] */;
  %796 = cast(%var_6279, dtype="int16") /* ty=Tensor[(672, 5), int16] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(2), int32] */;
  %798 = cast(%795, dtype="int16") /* ty=Tensor[(672, 5), int16] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %800 = %780.2;
  %801 = %785.2;
  %802 = %790.2;
  %803 = maximum(%798, %799) /* ty=Tensor[(672, 5), int16] */;
  (%800, %801, meta[relay.Constant][62] /* ty=Tensor[(528), float32] */, %802, %var_6263, meta[relay.Constant][63] /* ty=Tensor[(1560), int16] */, %803)
}

def @func_5804(%var_5748: Tensor[(7, 5, 15), float32], %var_5776: Tensor[(7, 6, 16), float64]) -> (Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) {
  %804 = cast(%var_5748, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
  %805 = cos(%804) /* ty=Tensor[(7, 5, 15), float32] */;
  %806 = cast(%805, dtype="float64") /* ty=Tensor[(7, 5, 15), float64] */;
  %807 = cast(%805, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
  %808 = cast(%var_5748, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
  %809 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %810 = %809.0;
  %811 = cast(%var_5776, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %815 = cast(meta[relay.Constant][64] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %816 = cast(meta[relay.Constant][64] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %817 = reshape(%815, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %818 = reshape(%816, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %819 = @func_831(%817, %818) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %820 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
  %821 = %819.2;
  %822 = cast(%821, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %823 = reshape(%820, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %824 = reshape(%822, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %825 = @func_1968(%823, %824) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
  %826 = rsqrt(%806) /* ty=Tensor[(7, 5, 15), float64] */;
  %827 = atanh(%807) /* ty=Tensor[(7, 5, 15), float32] */;
  %828 = acos(%808) /* ty=Tensor[(7, 5, 15), float32] */;
  %829 = logical_and(%813, %814) /* ty=Tensor[(7, 6, 16), bool] */;
  %830 = %825.3;
  (%826, %827, %828, %829, %821, meta[relay.Constant][64] /* ty=Tensor[(528), float32] */, %830, meta[relay.Constant][65] /* ty=Tensor[(14, 105), float64] */)
}

def @func_6971() -> Tensor[(7, 6, 16), float64] {
  %831 = @func_6419() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %831.2
}

def @func_5601() -> (Tensor[(7, 6, 16), float64],) {
  %832 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %833 = %832.0;
  (%833,)
}

def @func_9689() -> Tensor[(7, 6, 16), float64] {
  @func_8970() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_10069() -> (Tensor[(7, 6, 16), float64], Tensor[(840, 1), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32]) {
  %834 = @func_6305() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %835 = %834.0;
  %836 = cast(%835, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %837 = cast(meta[relay.Constant][66] /* ty=Tensor[(840, 1), uint8] */, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %838 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %839 = reshape(%836, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %840 = reshape(%837, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %841 = reshape(%838, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %842 = @func_5379(%839, %840, %841) /* ty=(Tensor[(6, 66), float32], Tensor[(847, 2), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), int64]) */;
  %843 = %842.4;
  (%835, %843, meta[relay.Constant][66] /* ty=Tensor[(840, 1), uint8] */, meta[relay.Constant][67] /* ty=Tensor[(528), float32] */)
}

def @func_4771(%var_4763: Tensor[(448), float64]) -> (Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  %844 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 3), float32] */;
  %845 = cast(%var_4763, dtype="float64") /* ty=Tensor[(448), float64] */;
  %846 = reshape(%845, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %847 = @func_3244(%846) /* ty=(Tensor[(4, 7, 16), float64],) */;
  %848 = cosh(%844) /* ty=Tensor[(5, 15, 3), float32] */;
  %849 = %847.0;
  (%848, %849, %var_4763)
}

def @func_2639(%var_2627: Tensor[(9, 7, 13), float64], %var_2631: Tensor[(84), uint8]) -> (Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) {
  %850 = cast(%var_2627, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
  %851 = cast(%var_2631, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %852 = cast(meta[relay.Constant][69] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %853 = cast(meta[relay.Constant][70] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %854 = reshape(%851, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %855 = reshape(%852, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %856 = reshape(%853, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %857 = @func_1786(%854, %855, %856) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %858 = cos(%850) /* ty=Tensor[(9, 7, 13), float64] */;
  %859 = %857.1;
  (%858, %859, %var_2631, meta[relay.Constant][69] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][70] /* ty=Tensor[(528), float32] */)
}

def @func_8253(%var_8242: float32, %var_8243: Tensor[(3, 7, 6), float32]) -> Tensor[(3, 7, 6), float32] {
  %860 = cast(%var_8242, dtype="float32") /* ty=float32 */;
  %861 = cast(%var_8243, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  mod(%860, %861) /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_5911() -> Tensor[(7, 6, 16), float32] {
  %862 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %862.1
}

def @func_8579() -> Tensor[(7, 6, 16), float64] {
  %863 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %863.0
}

def @func_4679(%var_4648: Tensor[(5, 2, 2), float64], %var_4649: Tensor[(5, 2, 2), float64], %var_4657: Tensor[(490), float64]) -> (Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) {
  %864 = cast(%var_4649, dtype="float64") /* ty=Tensor[(5, 2, 2), float64] */;
  %865 = shape_of(%var_4648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%var_4648, dtype="float64") /* ty=Tensor[(5, 2, 2), float64] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %868 = cast(%var_4657, dtype="float64") /* ty=Tensor[(490), float64] */;
  %869 = reshape(%868, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
  %870 = @func_4231(%869) /* ty=(Tensor[(10, 7, 7), float64],) */;
  %871 = cast(meta[relay.Constant][71] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %872 = cast(meta[relay.Constant][71] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %873 = cast(meta[relay.Constant][71] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %874 = reshape(%871, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %875 = reshape(%872, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %876 = reshape(%873, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %877 = @func_1072(%874, %875, %876) /* ty=(Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) */;
  %878 = %877.1;
  %879 = cast(%878, dtype="uint32") /* ty=Tensor[(5, 5, 14), uint32] */;
  %880 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %881 = cast(meta[relay.Constant][71] /* ty=Tensor[(350), int32] */, dtype="uint32") /* ty=Tensor[(350), uint32] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %883 = mod(%866, %867) /* ty=Tensor[(5, 2, 2), float64] */;
  %884 = %870.0;
  %885 = logical_xor(%881, %882) /* ty=Tensor[(350), uint32] */;
  (%883, %884, %var_4657, %885)
}

def @func_6419() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  %886 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %887 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %888 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %889 = %886.0;
  %890 = %887.0;
  %891 = %888.0;
  (%889, %890, %891)
}

def @func_9748() -> (Tensor[(7, 6, 16), float64],) {
  %892 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %893 = %892.0;
  (%893,)
}

def @func_1072(%var_1050: Tensor[(5, 5, 14), int32], %var_1051: Tensor[(5, 5, 14), int32], %var_1064: Tensor[(5, 5, 14), int32]) -> (Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) {
  %894 = cast(%var_1051, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
  %895 = shape_of(%var_1050, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%var_1050, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = cast(%var_1064, dtype="int64") /* ty=Tensor[(5, 5, 14), int64] */;
  %899 = shape_of(%var_1050, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%var_1050, dtype="int64") /* ty=Tensor[(5, 5, 14), int64] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %902 = cast(%var_1064, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
  %903 = equal(%896, %897) /* ty=Tensor[(5, 5, 14), bool] */;
  %904 = add(%900, %901) /* ty=Tensor[(5, 5, 14), int64] */;
  %905 = asinh(%902) /* ty=Tensor[(5, 5, 14), float32] */;
  (%903, %904, %905)
}

def @func_5862(%var_5812: Tensor[(528), float32], %var_5820: Tensor[(91, 9), float64], %var_5821: Tensor[(84), uint8], %var_5852: Tensor[(98, 15), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) {
  %906 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %907 = cast(%var_5812, dtype="float32") /* ty=Tensor[(528), float32] */;
  %908 = cast(%var_5812, dtype="float32") /* ty=Tensor[(528), float32] */;
  %909 = reshape(%907, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %910 = reshape(%908, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %911 = @func_831(%909, %910) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %912 = cast(%var_5820, dtype="float64") /* ty=Tensor[(91, 9), float64] */;
  %913 = cast(%var_5821, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %914 = reshape(%912, newshape=[9, 7, 13]) /* ty=Tensor[(9, 7, 13), float64] */;
  %915 = reshape(%913, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %916 = @func_2639(%914, %915) /* ty=(Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) */;
  %917 = %916.2;
  %918 = cast(%917, dtype="uint16") /* ty=Tensor[(84), uint16] */;
  %919 = shape_of(%var_5821, dtype="int32") /* ty=Tensor[(1), int32] */;
  %920 = cast(%var_5821, dtype="uint16") /* ty=Tensor[(84), uint16] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %922 = cast(%var_5852, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
  %923 = %911.2;
  %924 = cast(%923, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %925 = reshape(%922, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %926 = reshape(%924, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %927 = @func_1968(%925, %926) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
  %928 = %906.0;
  %929 = minimum(%920, %921) /* ty=Tensor[(84), uint16] */;
  %930 = %927.1;
  (%928, %923, %var_5812, %var_5820, %929, %930, %var_5852)
}

def @func_9509(%var_9482: Tensor[(1694), float64], %var_9483: Tensor[(396), float32], %var_9485: Tensor[(840), uint8], %var_9486: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), bool]) {
  %931 = cast(%var_9482, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %932 = cast(%var_9483, dtype="float32") /* ty=Tensor[(396), float32] */;
  %933 = cast(meta[relay.Constant][72] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %934 = cast(%var_9485, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %935 = cast(%var_9486, dtype="float32") /* ty=Tensor[(528), float32] */;
  %936 = reshape(%931, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %937 = reshape(%932, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %938 = reshape(%933, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
  %939 = reshape(%934, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %940 = reshape(%935, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %941 = @func_3645(%936, %937, %938, %939, %940) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
  %942 = @func_9125() /* ty=(Tensor[(7, 6, 16), bool],) */;
  %943 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
  %944 = %941.3;
  %945 = %942.0;
  (%943, %944, %var_9482, %var_9483, meta[relay.Constant][72] /* ty=Tensor[(84), uint8] */, %var_9485, %var_9486, %945)
}

def @func_6921(%var_6867: Tensor[(9, 12, 11), float64], %var_6890: Tensor[(84), uint8], %var_6891: Tensor[(1, 840), uint8], %var_6892: Tensor[(528), float32], %var_6903: Tensor[(275), float32]) -> (Tensor[(9, 12, 11), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1, 1560), int16]) {
  %946 = cast(%var_6867, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %947 = sigmoid(%946) /* ty=Tensor[(9, 12, 11), float64] */;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %949 = shape_of(%var_6867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%var_6867, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %952 = cast(%var_6890, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %953 = cast(%var_6891, dtype="uint8") /* ty=Tensor[(1, 840), uint8] */;
  %954 = cast(%var_6892, dtype="float32") /* ty=Tensor[(528), float32] */;
  %955 = reshape(%952, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %956 = reshape(%953, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %957 = reshape(%954, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %958 = @func_1786(%955, %956, %957) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %959 = cast(%var_6903, dtype="float32") /* ty=Tensor[(275), float32] */;
  %960 = cast(%var_6903, dtype="float32") /* ty=Tensor[(275), float32] */;
  %961 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 1560), int16] */, dtype="int16") /* ty=Tensor[(1, 1560), int16] */;
  %962 = reshape(%959, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %963 = reshape(%960, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %964 = reshape(%961, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %965 = @func_3533(%962, %963, %964) /* ty=(Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) */;
  %966 = floor_mod(%950, %951) /* ty=Tensor[(9, 12, 11), float64] */;
  %967 = %958.0;
  %968 = %965.3;
  (%966, %967, %var_6890, %var_6891, %var_6892, %968, %var_6903, meta[relay.Constant][73] /* ty=Tensor[(1, 1560), int16] */)
}

def @func_6859(%var_6831: Tensor[(819), float64], %var_6834: Tensor[(396), float32]) -> (Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) {
  %969 = cast(meta[relay.Constant][74] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %970 = cast(%var_6831, dtype="float64") /* ty=Tensor[(819), float64] */;
  %971 = cast(meta[relay.Constant][75] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %972 = cast(meta[relay.Constant][76] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %973 = cast(%var_6834, dtype="float32") /* ty=Tensor[(396), float32] */;
  %974 = cast(meta[relay.Constant][77] /* ty=Tensor[(70), int64] */, dtype="int64") /* ty=Tensor[(70), int64] */;
  %975 = reshape(%969, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %976 = reshape(%970, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %977 = reshape(%971, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %978 = reshape(%972, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %979 = reshape(%973, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %980 = reshape(%974, newshape=[70]) /* ty=Tensor[(70), int64] */;
  %981 = @func_6070(%975, %976, %977, %978, %979, %980) /* ty=(Tensor[(528), float32], Tensor[(84), uint8], Tensor[(1470), float64], Tensor[(819), bool], Tensor[(7, 6, 16), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(2, 7, 5), uint64], Tensor[(70), int64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool]) */;
  %982 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %983 = %982.0;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %985 = log10(%984) /* ty=Tensor[(7, 6, 16), float64] */;
  %986 = cast(%983, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%985, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %990 = %981.15;
  %991 = power(%988, %989) /* ty=Tensor[(7, 6, 16), float64] */;
  (%990, meta[relay.Constant][74] /* ty=Tensor[(528), float32] */, %var_6831, meta[relay.Constant][75] /* ty=Tensor[(1470), float64] */, meta[relay.Constant][76] /* ty=Tensor[(1694), float64] */, %var_6834, meta[relay.Constant][77] /* ty=Tensor[(70), int64] */, %991)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5601() -> (Tensor[(7, 6, 16), float64],) {
  %0 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_8473() -> (Tensor[(7, 6, 16), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64]) {
  @func_8471() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64]) */
}

def @func_4231(%var_4215: Tensor[(10, 7, 7), float64]) -> (Tensor[(10, 7, 7), float64],) {
  %2 = cast(%var_4215, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %3 = cosh(%2) /* ty=Tensor[(10, 7, 7), float64] */;
  (%3,)
}

def @func_3372(%var_3371: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), float64],) {
  %6 = fn (%var_3365: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), float64],) {
    %4 = cast(%var_3365, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
    %5 = log10(%4) /* ty=Tensor[(11, 15, 5), float64] */;
    (%5,)
  };
  %6(%var_3371) /* ty=(Tensor[(11, 15, 5), float64],) */
}

def @func_3533(%var_3486: Tensor[(11, 5, 5), float32], %var_3487: Tensor[(11, 5, 5), float32], %var_3499: Tensor[(1560), int16]) -> (Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) {
  %7 = cast(%var_3487, dtype="float32") /* ty=Tensor[(11, 5, 5), float32] */;
  %8 = shape_of(%var_3486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%var_3486, dtype="float32") /* ty=Tensor[(11, 5, 5), float32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %11 = cast(%var_3499, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %12 = cast(%var_3499, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %13 = reshape(%11, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %14 = reshape(%12, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %15 = @func_226(%13, %14) /* ty=Tensor[(15, 8, 13), bool] */;
  %16 = cast(%15, dtype="int16") /* ty=Tensor[(15, 8, 13), int16] */;
  %17 = cast(%var_3499, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %18 = reshape(%16, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %19 = reshape(%17, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 117), float32] */, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %21 = reshape(%20, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float32] */;
  %22 = mod(%9, %10) /* ty=Tensor[(11, 5, 5), float32] */;
  %23 = @func_226(%18, %19) /* ty=Tensor[(15, 8, 13), bool] */;
  %24 = @func_2706(%21) /* ty=Tensor[(6, 13, 9), float32] */;
  (%22, %15, %var_3499, %23, %24, meta[relay.Constant][0] /* ty=Tensor[(6, 117), float32] */)
}

def @func_6306() -> (Tensor[(7, 6, 16), float64],) {
  %27 = fn () -> (Tensor[(7, 6, 16), float64],) {
    %25 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %26 = %25.0;
    (%26,)
  };
  %27() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_8440(%var_8421: Tensor[(819), float64], %var_8422: Tensor[(396), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(396), float64]) {
  %28 = @func_6419() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %29 = cast(%var_8421, dtype="float64") /* ty=Tensor[(819), float64] */;
  %30 = cast(%var_8422, dtype="float32") /* ty=Tensor[(396), float32] */;
  %31 = reshape(%29, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %32 = reshape(%30, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %33 = @func_6859(%31, %32) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
  %35 = reshape(%34, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %36 = @func_3370(%35) /* ty=(Tensor[(11, 15, 5), float64],) */;
  %37 = cast(%var_8422, dtype="float64") /* ty=Tensor[(396), float64] */;
  %38 = %28.2;
  %39 = %33.0;
  %40 = %36.0;
  %41 = exp(%37) /* ty=Tensor[(396), float64] */;
  (%38, %39, %var_8421, %40, meta[relay.Constant][1] /* ty=Tensor[(825), float64] */, %41)
}

def @func_9414(%var_9412: Tensor[(11, 13, 12), float64]) -> Tensor[(11, 13, 12), float64] {
  @func_9411(%var_9412) /* ty=Tensor[(11, 13, 12), float64] */
}

def @func_8284(%var_8271: Tensor[(56, 8), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), bool], Tensor[(56, 8), float64]) {
  %42 = @func_7670() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) */;
  %43 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %44 = cast(%var_8271, dtype="float64") /* ty=Tensor[(56, 8), float64] */;
  %45 = reshape(%44, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %46 = @func_8036(%45) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), bool]) */;
  %47 = %42.0;
  %48 = %43.0;
  %49 = %46.1;
  (%47, %48, %49, %var_8271)
}

def @func_7748(%var_7744: Tensor[(1560), int16], %var_7745: Tensor[(3, 132), float32], %var_7746: Tensor[(528, 1), float32], %var_7747: Tensor[(10, 2), float64]) -> (Tensor[(4, 7, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(12, 2, 8), float64], Tensor[(3, 132), float32], Tensor[(528, 1), float32], Tensor[(5, 15, 3), float32], Tensor[(5, 2, 2), float64], Tensor[(10, 2), float64], Tensor[(1, 490), float64]) {
  @func_7742(%var_7744, %var_7745, %var_7746, %var_7747) /* ty=(Tensor[(4, 7, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(12, 2, 8), float64], Tensor[(3, 132), float32], Tensor[(528, 1), float32], Tensor[(5, 15, 3), float32], Tensor[(5, 2, 2), float64], Tensor[(10, 2), float64], Tensor[(1, 490), float64]) */
}

def @func_8911() -> (Tensor[(7, 6, 16), float64],) {
  %50 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %51 = %50.0;
  (%51,)
}

def @func_8981() -> (Tensor[(7, 6, 16), float32],) {
  %53 = fn () -> (Tensor[(7, 6, 16), float32],) {
    %52 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
    (%52,)
  };
  %53() /* ty=(Tensor[(7, 6, 16), float32],) */
}

def @func_6660(%var_6652: Tensor[(825), float64], %var_6653: Tensor[(825), float64], %var_6654: Tensor[(1470), float64], %var_6655: Tensor[(169), int16], %var_6656: Tensor[(13, 195), int16], %var_6657: Tensor[(84), uint8], %var_6658: Tensor[(12, 70), uint8], %var_6659: Tensor[(8, 66), float32]) -> (Tensor[(20), float64], Tensor[(825), int16], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(5, 5, 14), float32], Tensor[(350), int32], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(13, 195), int16], Tensor[(7, 6, 16), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(12, 70), uint8], Tensor[(8, 66), float32], Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  @func_6650(%var_6652, %var_6653, %var_6654, %var_6655, %var_6656, %var_6657, %var_6658, %var_6659) /* ty=(Tensor[(20), float64], Tensor[(825), int16], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(5, 5, 14), float32], Tensor[(350), int32], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(13, 195), int16], Tensor[(7, 6, 16), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(12, 70), uint8], Tensor[(8, 66), float32], Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */
}

def @func_3652(%var_3647: Tensor[(11, 14, 11), float64], %var_3648: Tensor[(6, 66), float32], %var_3649: Tensor[(21, 4), uint8], %var_3650: Tensor[(840, 1), uint8], %var_3651: Tensor[(528), float32]) -> (Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) {
  @func_3645(%var_3647, %var_3648, %var_3649, %var_3650, %var_3651) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */
}

def @func_7435() -> Tensor[(7, 6, 16), float32] {
  %54 = fn () -> Tensor[(7, 6, 16), float32] {
    @func_5911() /* ty=Tensor[(7, 6, 16), float32] */
  };
  %54() /* ty=Tensor[(7, 6, 16), float32] */
}

def @func_6070(%var_5955: Tensor[(528), float32], %var_5956: Tensor[(819), float64], %var_5958: Tensor[(1470), float64], %var_5988: Tensor[(1694), float64], %var_5989: Tensor[(396), float32], %var_6020: Tensor[(70), int64]) -> (Tensor[(528), float32], Tensor[(84), uint8], Tensor[(1470), float64], Tensor[(819), bool], Tensor[(7, 6, 16), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(2, 7, 5), uint64], Tensor[(70), int64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool]) {
  %55 = cast(%var_5955, dtype="float32") /* ty=Tensor[(528), float32] */;
  %56 = cast(%var_5956, dtype="float64") /* ty=Tensor[(819), float64] */;
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %58 = cast(%var_5958, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %59 = reshape(%55, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %60 = reshape(%56, newshape=[91, 9]) /* ty=Tensor[(91, 9), float64] */;
  %61 = reshape(%57, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %62 = reshape(%58, newshape=[98, 15]) /* ty=Tensor[(98, 15), float64] */;
  %63 = @func_5862(%59, %60, %61, %62) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) */;
  %64 = %63.3;
  %65 = cast(%64, dtype="bool") /* ty=Tensor[(91, 9), bool] */;
  %66 = shape_of(%var_5956, dtype="int32") /* ty=Tensor[(1), int32] */;
  %67 = cast(%var_5956, dtype="bool") /* ty=Tensor[(819), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?), bool] */;
  %69 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %70 = %69.0;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %72 = sin(%71) /* ty=Tensor[(7, 6, 16), float32] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 6, 16), float32] */, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %74 = shape_of(%72, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%72, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %77 = equal(%75, %76) /* ty=Tensor[(7, 6, 16), bool] */;
  %78 = cast(%77, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %79 = cast(%var_5988, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %80 = cast(%var_5989, dtype="float32") /* ty=Tensor[(396), float32] */;
  %81 = cast(meta[relay.Constant][2] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %83 = cast(%var_5955, dtype="float32") /* ty=Tensor[(528), float32] */;
  %84 = reshape(%79, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %85 = reshape(%80, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %86 = reshape(%81, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
  %87 = reshape(%82, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %88 = reshape(%83, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %89 = @func_3645(%84, %85, %86, %87, %88) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
  %90 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %91 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %92 = cast(%var_6020, dtype="int64") /* ty=Tensor[(70), int64] */;
  %93 = reshape(%92, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int64] */;
  %94 = @func_1908(%93) /* ty=(Tensor[(11, 9, 4), float32], Tensor[(11, 9, 4), float32], Tensor[(2, 7, 5), uint64], Tensor[(2, 7, 5), bool], Tensor[(396), float32]) */;
  %95 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %96 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %97 = %91.2;
  %98 = cast(%97, dtype="int16") /* ty=Tensor[(15, 8, 13), int16] */;
  %99 = cast(%97, dtype="int16") /* ty=Tensor[(15, 8, 13), int16] */;
  %100 = reshape(%98, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %101 = reshape(%99, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %102 = logical_or(%67, %68) /* ty=Tensor[(819), bool] */;
  %103 = atanh(%78) /* ty=Tensor[(7, 6, 16), float32] */;
  %104 = %89.6;
  %105 = %90.0;
  %106 = %94.2;
  %107 = %95.0;
  %108 = %96.0;
  %109 = @func_226(%100, %101) /* ty=Tensor[(15, 8, 13), bool] */;
  (%var_5955, meta[relay.Constant][2] /* ty=Tensor[(84), uint8] */, %var_5958, %102, %103, %104, %var_5988, %var_5989, meta[relay.Constant][4] /* ty=Tensor[(840), uint8] */, %105, %97, %106, %var_6020, %107, %108, %109)
}

def @func_10071() -> (Tensor[(7, 6, 16), float64], Tensor[(840, 1), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32]) {
  @func_10069() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(840, 1), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32]) */
}

def @func_9453() -> (Tensor[(7, 6, 16), float64],) {
  %112 = fn () -> (Tensor[(7, 6, 16), float64],) {
    %110 = @func_7670() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) */;
    %111 = %110.0;
    (%111,)
  };
  %112() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_3244(%var_3231: Tensor[(4, 7, 16), float64]) -> (Tensor[(4, 7, 16), float64],) {
  %113 = cast(%var_3231, dtype="float64") /* ty=Tensor[(4, 7, 16), float64] */;
  %114 = sinh(%113) /* ty=Tensor[(4, 7, 16), float64] */;
  (%114,)
}

def @func_1290(%var_1280: Tensor[(11, 9, 4), float32]) -> Tensor[(11, 9, 4), float32] {
  %115 = cast(%var_1280, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  erf(%115) /* ty=Tensor[(11, 9, 4), float32] */
}

def @func_9691() -> Tensor[(7, 6, 16), float64] {
  @func_9689() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_6290(%var_6288: Tensor[(1470), float64], %var_6289: Tensor[(672, 5), float32]) -> (Tensor[(448), float64], Tensor[(66, 6), float32], Tensor[(528), float32], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(672, 5), int16]) {
  %140 = fn (%var_6263: Tensor[(1470), float64], %var_6279: Tensor[(672, 5), float32]) -> (Tensor[(448), float64], Tensor[(66, 6), float32], Tensor[(528), float32], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(672, 5), int16]) {
    %116 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
    %117 = cast(meta[relay.Constant][5] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
    %118 = cast(meta[relay.Constant][6] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %119 = reshape(%117, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
    %120 = reshape(%118, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %121 = @func_5517(%119, %120) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) */;
    %122 = cast(%var_6263, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %123 = cast(meta[relay.Constant][7] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %124 = reshape(%122, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
    %125 = reshape(%123, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
    %126 = @func_1968(%124, %125) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
    %127 = cast(meta[relay.Constant][5] /* ty=Tensor[(672, 1), float64] */, dtype="float32") /* ty=Tensor[(672, 1), float32] */;
    %128 = asin(%127) /* ty=Tensor[(672, 1), float32] */;
    %129 = cast(%128, dtype="bool") /* ty=Tensor[(672, 1), bool] */;
    %130 = cast(%var_6279, dtype="bool") /* ty=Tensor[(672, 5), bool] */;
    %131 = logical_and(%129, %130) /* ty=Tensor[(672, 5), bool] */;
    %132 = cast(%var_6279, dtype="int16") /* ty=Tensor[(672, 5), int16] */;
    %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(2), int32] */;
    %134 = cast(%131, dtype="int16") /* ty=Tensor[(672, 5), int16] */;
    %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %136 = %116.2;
    %137 = %121.2;
    %138 = %126.2;
    %139 = maximum(%134, %135) /* ty=Tensor[(672, 5), int16] */;
    (%136, %137, meta[relay.Constant][6] /* ty=Tensor[(528), float32] */, %138, %var_6263, meta[relay.Constant][7] /* ty=Tensor[(1560), int16] */, %139)
  };
  %140(%var_6288, %var_6289) /* ty=(Tensor[(448), float64], Tensor[(66, 6), float32], Tensor[(528), float32], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(672, 5), int16]) */
}

def @func_3247(%var_3245: Tensor[(4, 7, 16), float64]) -> (Tensor[(4, 7, 16), float64],) {
  @func_3244(%var_3245) /* ty=(Tensor[(4, 7, 16), float64],) */
}

def @func_10069() -> (Tensor[(7, 6, 16), float64], Tensor[(840, 1), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32]) {
  %141 = @func_6305() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %142 = %141.0;
  %143 = cast(%142, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(840, 1), uint8] */, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %145 = cast(meta[relay.Constant][9] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %146 = reshape(%143, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %147 = reshape(%144, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %148 = reshape(%145, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %149 = @func_5379(%146, %147, %148) /* ty=(Tensor[(6, 66), float32], Tensor[(847, 2), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), int64]) */;
  %150 = %149.4;
  (%142, %150, meta[relay.Constant][8] /* ty=Tensor[(840, 1), uint8] */, meta[relay.Constant][9] /* ty=Tensor[(528), float32] */)
}

def @func_7480() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */
}

def @func_8444(%var_8442: Tensor[(819), float64], %var_8443: Tensor[(396), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(396), float64]) {
  @func_8440(%var_8442, %var_8443) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(396), float64]) */
}

def @func_9635() -> (Tensor[(10, 7, 7), float64],) {
  %153 = fn () -> (Tensor[(10, 7, 7), float64],) {
    %151 = @func_8471() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64]) */;
    %152 = %151.1;
    (%152,)
  };
  %153() /* ty=(Tensor[(10, 7, 7), float64],) */
}

def @func_6772() -> (Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) {
  @func_6770() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) */
}

def @func_6650(%var_6531: Tensor[(825), float64], %var_6535: Tensor[(825), float64], %var_6541: Tensor[(1470), float64], %var_6573: Tensor[(169), int16], %var_6574: Tensor[(13, 195), int16], %var_6609: Tensor[(84), uint8], %var_6610: Tensor[(12, 70), uint8], %var_6611: Tensor[(8, 66), float32]) -> (Tensor[(20), float64], Tensor[(825), int16], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(5, 5, 14), float32], Tensor[(350), int32], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(13, 195), int16], Tensor[(7, 6, 16), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(12, 70), uint8], Tensor[(8, 66), float32], Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  %154 = cast(%var_6531, dtype="float64") /* ty=Tensor[(825), float64] */;
  %155 = reshape(%154, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %156 = @func_5735(%155) /* ty=(Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) */;
  %157 = cast(%var_6535, dtype="int16") /* ty=Tensor[(825), int16] */;
  %158 = shape_of(%var_6531, dtype="int32") /* ty=Tensor[(1), int32] */;
  %159 = cast(%var_6531, dtype="int16") /* ty=Tensor[(825), int16] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?), int16] */;
  %161 = cast(%var_6541, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %162 = cast(meta[relay.Constant][10] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %163 = reshape(%161, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
  %164 = reshape(%162, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %165 = @func_1968(%163, %164) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
  %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %167 = cast(meta[relay.Constant][11] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %168 = cast(meta[relay.Constant][11] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
  %169 = reshape(%166, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %170 = reshape(%167, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %171 = reshape(%168, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %172 = @func_1072(%169, %170, %171) /* ty=(Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) */;
  %173 = cast(%var_6573, dtype="int16") /* ty=Tensor[(169), int16] */;
  %174 = cast(%var_6574, dtype="int16") /* ty=Tensor[(13, 195), int16] */;
  %175 = reshape(%173, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), int16] */;
  %176 = reshape(%174, newshape=[15, 13, 13]) /* ty=Tensor[(15, 13, 13), int16] */;
  %177 = @func_4023(%175, %176) /* ty=(Tensor[(15, 13, 13), int16],) */;
  %178 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %179 = cast(%var_6609, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %180 = cast(%var_6610, dtype="uint8") /* ty=Tensor[(12, 70), uint8] */;
  %181 = cast(%var_6611, dtype="float32") /* ty=Tensor[(8, 66), float32] */;
  %182 = reshape(%179, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %183 = reshape(%180, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %184 = reshape(%181, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %185 = @func_1786(%182, %183, %184) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %186 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %188 = exp(%187) /* ty=Tensor[(7, 6, 16), float32] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %190 = cast(meta[relay.Constant][12] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %191 = reshape(%190, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %192 = @func_4771(%191) /* ty=(Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %193 = %156.0;
  %194 = add(%159, %160) /* ty=Tensor[(825), int16] */;
  %195 = %165.2;
  %196 = %172.2;
  %197 = %177.0;
  %198 = %178.0;
  %199 = %185.0;
  %200 = cos(%189) /* ty=Tensor[(7, 6, 16), float64] */;
  %201 = %192.1;
  (%193, %194, %195, %var_6541, meta[relay.Constant][10] /* ty=Tensor[(1560), int16] */, %196, meta[relay.Constant][11] /* ty=Tensor[(350), int32] */, %197, %var_6573, %var_6574, %198, %199, %var_6609, %var_6610, %var_6611, %200, %201, meta[relay.Constant][12] /* ty=Tensor[(448), float64] */)
}

def @func_5867(%var_5863: Tensor[(528), float32], %var_5864: Tensor[(91, 9), float64], %var_5865: Tensor[(84), uint8], %var_5866: Tensor[(98, 15), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) {
  %227 = fn (%var_5812: Tensor[(528), float32], %var_5820: Tensor[(91, 9), float64], %var_5821: Tensor[(84), uint8], %var_5852: Tensor[(98, 15), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) {
    %202 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %203 = cast(%var_5812, dtype="float32") /* ty=Tensor[(528), float32] */;
    %204 = cast(%var_5812, dtype="float32") /* ty=Tensor[(528), float32] */;
    %205 = reshape(%203, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %206 = reshape(%204, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %207 = @func_831(%205, %206) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
    %208 = cast(%var_5820, dtype="float64") /* ty=Tensor[(91, 9), float64] */;
    %209 = cast(%var_5821, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %210 = reshape(%208, newshape=[9, 7, 13]) /* ty=Tensor[(9, 7, 13), float64] */;
    %211 = reshape(%209, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %212 = @func_2639(%210, %211) /* ty=(Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) */;
    %213 = %212.2;
    %214 = cast(%213, dtype="uint16") /* ty=Tensor[(84), uint16] */;
    %215 = shape_of(%var_5821, dtype="int32") /* ty=Tensor[(1), int32] */;
    %216 = cast(%var_5821, dtype="uint16") /* ty=Tensor[(84), uint16] */;
    %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %218 = cast(%var_5852, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
    %219 = %207.2;
    %220 = cast(%219, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %221 = reshape(%218, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
    %222 = reshape(%220, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
    %223 = @func_1968(%221, %222) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
    %224 = %202.0;
    %225 = minimum(%216, %217) /* ty=Tensor[(84), uint16] */;
    %226 = %223.1;
    (%224, %219, %var_5812, %var_5820, %225, %226, %var_5852)
  };
  %227(%var_5863, %var_5864, %var_5865, %var_5866) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) */
}

def @func_5738(%var_5736: Tensor[(825), float64]) -> (Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) {
  @func_5735(%var_5736) /* ty=(Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) */
}

def @func_7339(%var_7337: Tensor[(528), float32], %var_7338: Tensor[(490, 3), float64]) -> (Tensor[(7, 6, 16), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(819), float64], Tensor[(84), uint8], Tensor[(490, 3), float64]) {
  @func_7335(%var_7337, %var_7338) /* ty=(Tensor[(7, 6, 16), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(819), float64], Tensor[(84), uint8], Tensor[(490, 3), float64]) */
}

def @func_5379(%var_5343: Tensor[(7, 6, 16), float64], %var_5355: Tensor[(840, 1), uint8], %var_5356: Tensor[(528), float32]) -> (Tensor[(6, 66), float32], Tensor[(847, 2), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), int64]) {
  %228 = cast(meta[relay.Constant][13] /* ty=Tensor[(847, 2), float64] */, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %230 = cast(meta[relay.Constant][15] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %231 = cast(%var_5355, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %232 = cast(%var_5356, dtype="float32") /* ty=Tensor[(528), float32] */;
  %233 = reshape(%228, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %234 = reshape(%229, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %235 = reshape(%230, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
  %236 = reshape(%231, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %237 = reshape(%232, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %238 = @func_3645(%233, %234, %235, %236, %237) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
  %239 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %240 = %239.0;
  %241 = cast(%var_5343, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%240, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %245 = add(%243, %244) /* ty=Tensor[(7, 6, 16), float64] */;
  %246 = cast(%240, dtype="int64") /* ty=Tensor[(7, 6, 16), int64] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="int64") /* ty=Tensor[(7, 6, 16), int64] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %250 = %238.2;
  %251 = bitwise_xor(%248, %249) /* ty=Tensor[(7, 6, 16), int64] */;
  (%250, meta[relay.Constant][13] /* ty=Tensor[(847, 2), float64] */, meta[relay.Constant][14] /* ty=Tensor[(396), float32] */, meta[relay.Constant][15] /* ty=Tensor[(84), uint8] */, %var_5355, %var_5356, %251)
}

def @func_8038(%var_8037: Tensor[(448), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(448), bool]) {
  %261 = fn (%var_8024: Tensor[(448), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(448), bool]) {
    %252 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %253 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
    %254 = %253.2;
    %255 = cast(%var_8024, dtype="bool") /* ty=Tensor[(448), bool] */;
    %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(1), int32] */;
    %257 = cast(%254, dtype="bool") /* ty=Tensor[(448), bool] */;
    %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?), bool] */;
    %259 = %252.0;
    %260 = greater_equal(%257, %258) /* ty=Tensor[(448), bool] */;
    (%259, %260)
  };
  %261(%var_8037) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), bool]) */
}

def @func_1911(%var_1909: Tensor[(2, 7, 5), int64]) -> (Tensor[(11, 9, 4), float32], Tensor[(11, 9, 4), float32], Tensor[(2, 7, 5), uint64], Tensor[(2, 7, 5), bool], Tensor[(396), float32]) {
  @func_1908(%var_1909) /* ty=(Tensor[(11, 9, 4), float32], Tensor[(11, 9, 4), float32], Tensor[(2, 7, 5), uint64], Tensor[(2, 7, 5), bool], Tensor[(396), float32]) */
}

def @func_6419() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  %262 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %263 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %264 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %265 = %262.0;
  %266 = %263.0;
  %267 = %264.0;
  (%265, %266, %267)
}

def @func_3538(%var_3535: Tensor[(11, 5, 5), float32], %var_3536: Tensor[(11, 5, 5), float32], %var_3537: Tensor[(1560), int16]) -> (Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) {
  @func_3533(%var_3535, %var_3536, %var_3537) /* ty=(Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) */
}

def @func_1786(%var_1759: Tensor[(1, 6, 14), uint8], %var_1760: Tensor[(10, 6, 14), uint8], %var_1765: Tensor[(528), float32]) -> (Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) {
  %268 = cast(%var_1759, dtype="uint8") /* ty=Tensor[(1, 6, 14), uint8] */;
  %269 = cast(%var_1760, dtype="uint8") /* ty=Tensor[(10, 6, 14), uint8] */;
  %270 = cast(%var_1765, dtype="float32") /* ty=Tensor[(528), float32] */;
  %271 = cast(%var_1765, dtype="float32") /* ty=Tensor[(528), float32] */;
  %272 = reshape(%270, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %273 = reshape(%271, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %274 = @func_831(%272, %273) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %275 = right_shift(%268, %269) /* ty=Tensor[(10, 6, 14), uint8] */;
  %276 = %274.1;
  (%275, %276, %var_1765)
}

def @func_6973() -> Tensor[(7, 6, 16), float64] {
  @func_6971() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_9411(%var_9404: Tensor[(11, 13, 12), float64]) -> Tensor[(11, 13, 12), float64] {
  %277 = cast(%var_9404, dtype="float64") /* ty=Tensor[(11, 13, 12), float64] */;
  sin(%277) /* ty=Tensor[(11, 13, 12), float64] */
}

def @func_8239() -> Tensor[(7, 6, 16), float64] {
  %278 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %278.0
}

def @func_5593() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) {
  %279 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %282 = cast(%280, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %283 = cast(meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %284 = cast(meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %285 = reshape(%283, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %286 = reshape(%284, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %287 = @func_831(%285, %286) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %288 = cast(meta[relay.Constant][17] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %289 = cast(meta[relay.Constant][17] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %290 = cast(meta[relay.Constant][18] /* ty=Tensor[(245, 2), float64] */, dtype="float64") /* ty=Tensor[(245, 2), float64] */;
  %291 = reshape(%288, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %292 = reshape(%289, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %293 = reshape(%290, newshape=[490]) /* ty=Tensor[(490), float64] */;
  %294 = @func_4679(%291, %292, %293) /* ty=(Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) */;
  %295 = tan(%281) /* ty=Tensor[(7, 6, 16), float64] */;
  %296 = cosh(%282) /* ty=Tensor[(7, 6, 16), float32] */;
  %297 = %287.1;
  %298 = %294.1;
  (%295, %296, %297, meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, %298, meta[relay.Constant][17] /* ty=Tensor[(20), float64] */, meta[relay.Constant][18] /* ty=Tensor[(245, 2), float64] */)
}

def @func_9399(%var_9397: Tensor[(528), float32], %var_9398: Tensor[(14, 105), float64]) -> (Tensor[(7, 6, 16), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 105), int16], Tensor[(6, 13, 9), float32], Tensor[(702), float32]) {
  @func_9395(%var_9397, %var_9398) /* ty=(Tensor[(7, 6, 16), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 105), int16], Tensor[(6, 13, 9), float32], Tensor[(702), float32]) */
}

def @func_6159() -> (Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */
}

def @func_9167() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  %303 = fn () -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
    %299 = @func_8911() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %300 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %301 = %299.0;
    %302 = %300.0;
    (%301, %302)
  };
  %303() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */
}

def @func_9857() -> (Tensor[(7, 6, 16), float64],) {
  %304 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %305 = %304.0;
  (%305,)
}

def @func_5520(%var_5518: Tensor[(7, 6, 16), float64], %var_5519: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) {
  %319 = fn (%var_5501: Tensor[(7, 6, 16), float64], %var_5509: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) {
    %306 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %307 = %306.0;
    %308 = cast(%var_5501, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%307, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %312 = cast(meta[relay.Constant][19] /* ty=Tensor[(66, 6), float32] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
    %313 = cast(%var_5509, dtype="float32") /* ty=Tensor[(528), float32] */;
    %314 = reshape(%312, newshape=[198, 2]) /* ty=Tensor[(198, 2), float32] */;
    %315 = reshape(%313, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %316 = @func_1667(%314, %315) /* ty=(Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) */;
    %317 = less_equal(%310, %311) /* ty=Tensor[(7, 6, 16), bool] */;
    %318 = %316.0;
    (%317, %318, meta[relay.Constant][19] /* ty=Tensor[(66, 6), float32] */, %var_5509)
  };
  %319(%var_5518, %var_5519) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) */
}

def @func_6921(%var_6867: Tensor[(9, 12, 11), float64], %var_6890: Tensor[(84), uint8], %var_6891: Tensor[(1, 840), uint8], %var_6892: Tensor[(528), float32], %var_6903: Tensor[(275), float32]) -> (Tensor[(9, 12, 11), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1, 1560), int16]) {
  %320 = cast(%var_6867, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %321 = sigmoid(%320) /* ty=Tensor[(9, 12, 11), float64] */;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %323 = shape_of(%var_6867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_6867, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %326 = cast(%var_6890, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %327 = cast(%var_6891, dtype="uint8") /* ty=Tensor[(1, 840), uint8] */;
  %328 = cast(%var_6892, dtype="float32") /* ty=Tensor[(528), float32] */;
  %329 = reshape(%326, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %330 = reshape(%327, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %331 = reshape(%328, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %332 = @func_1786(%329, %330, %331) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %333 = cast(%var_6903, dtype="float32") /* ty=Tensor[(275), float32] */;
  %334 = cast(%var_6903, dtype="float32") /* ty=Tensor[(275), float32] */;
  %335 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 1560), int16] */, dtype="int16") /* ty=Tensor[(1, 1560), int16] */;
  %336 = reshape(%333, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %337 = reshape(%334, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %338 = reshape(%335, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %339 = @func_3533(%336, %337, %338) /* ty=(Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) */;
  %340 = floor_mod(%324, %325) /* ty=Tensor[(9, 12, 11), float64] */;
  %341 = %332.0;
  %342 = %339.3;
  (%340, %341, %var_6890, %var_6891, %var_6892, %342, %var_6903, meta[relay.Constant][20] /* ty=Tensor[(1, 1560), int16] */)
}

def @func_7335(%var_7304: Tensor[(528), float32], %var_7319: Tensor[(490, 3), float64]) -> (Tensor[(7, 6, 16), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(819), float64], Tensor[(84), uint8], Tensor[(490, 3), float64]) {
  %343 = cast(%var_7304, dtype="float32") /* ty=Tensor[(528), float32] */;
  %344 = cast(%var_7304, dtype="float32") /* ty=Tensor[(528), float32] */;
  %345 = reshape(%343, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %346 = reshape(%344, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %347 = @func_831(%345, %346) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %348 = cast(%var_7304, dtype="float32") /* ty=Tensor[(528), float32] */;
  %349 = cast(meta[relay.Constant][21] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %350 = cast(meta[relay.Constant][22] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %351 = cast(%var_7319, dtype="float64") /* ty=Tensor[(490, 3), float64] */;
  %352 = reshape(%348, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %353 = reshape(%349, newshape=[91, 9]) /* ty=Tensor[(91, 9), float64] */;
  %354 = reshape(%350, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %355 = reshape(%351, newshape=[98, 15]) /* ty=Tensor[(98, 15), float64] */;
  %356 = @func_5862(%352, %353, %354, %355) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(91, 9), float64], Tensor[(84), uint16], Tensor[(1560), int16], Tensor[(98, 15), float64]) */;
  %357 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
  %358 = %347.2;
  %359 = %356.2;
  (%357, %358, %var_7304, %359, meta[relay.Constant][21] /* ty=Tensor[(819), float64] */, meta[relay.Constant][22] /* ty=Tensor[(84), uint8] */, %var_7319)
}

def @func_4683(%var_4680: Tensor[(5, 2, 2), float64], %var_4681: Tensor[(5, 2, 2), float64], %var_4682: Tensor[(490), float64]) -> (Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) {
  %382 = fn (%var_4648: Tensor[(5, 2, 2), float64], %var_4649: Tensor[(5, 2, 2), float64], %var_4657: Tensor[(490), float64]) -> (Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) {
    %360 = cast(%var_4649, dtype="float64") /* ty=Tensor[(5, 2, 2), float64] */;
    %361 = shape_of(%var_4648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %362 = cast(%var_4648, dtype="float64") /* ty=Tensor[(5, 2, 2), float64] */;
    %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %364 = cast(%var_4657, dtype="float64") /* ty=Tensor[(490), float64] */;
    %365 = reshape(%364, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
    %366 = @func_4231(%365) /* ty=(Tensor[(10, 7, 7), float64],) */;
    %367 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
    %368 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
    %369 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(350), int32] */;
    %370 = reshape(%367, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
    %371 = reshape(%368, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
    %372 = reshape(%369, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
    %373 = @func_1072(%370, %371, %372) /* ty=(Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) */;
    %374 = %373.1;
    %375 = cast(%374, dtype="uint32") /* ty=Tensor[(5, 5, 14), uint32] */;
    %376 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(350), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %377 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), int32] */, dtype="uint32") /* ty=Tensor[(350), uint32] */;
    %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %379 = mod(%362, %363) /* ty=Tensor[(5, 2, 2), float64] */;
    %380 = %366.0;
    %381 = logical_xor(%377, %378) /* ty=Tensor[(350), uint32] */;
    (%379, %380, %var_4657, %381)
  };
  %382(%var_4680, %var_4681, %var_4682) /* ty=(Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) */
}

def @func_7041() -> (Tensor[(10, 7, 7), float64],) {
  %383 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %384 = %383.4;
  (%384,)
}

def @func_8731(%var_8730: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool]) {
  %398 = fn (%var_8714: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool]) {
    %385 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %386 = cast(%var_8714, dtype="float32") /* ty=Tensor[(528), float32] */;
    %387 = cast(%var_8714, dtype="float32") /* ty=Tensor[(528), float32] */;
    %388 = reshape(%386, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %389 = reshape(%387, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %390 = @func_831(%388, %389) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
    %391 = %390.2;
    %392 = cast(%391, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %393 = cast(%391, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %394 = reshape(%392, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
    %395 = reshape(%393, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
    %396 = %385.0;
    %397 = @func_226(%394, %395) /* ty=Tensor[(15, 8, 13), bool] */;
    (%396, %391, %var_8714, %397)
  };
  %398(%var_8730) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool]) */
}

def @func_9127() -> (Tensor[(7, 6, 16), bool],) {
  @func_9125() /* ty=(Tensor[(7, 6, 16), bool],) */
}

def @func_6078(%var_6072: Tensor[(528), float32], %var_6073: Tensor[(819), float64], %var_6074: Tensor[(1470), float64], %var_6075: Tensor[(1694), float64], %var_6076: Tensor[(396), float32], %var_6077: Tensor[(70), int64]) -> (Tensor[(528), float32], Tensor[(84), uint8], Tensor[(1470), float64], Tensor[(819), bool], Tensor[(7, 6, 16), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(2, 7, 5), uint64], Tensor[(70), int64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool]) {
  @func_6070(%var_6072, %var_6073, %var_6074, %var_6075, %var_6076, %var_6077) /* ty=(Tensor[(528), float32], Tensor[(84), uint8], Tensor[(1470), float64], Tensor[(819), bool], Tensor[(7, 6, 16), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(2, 7, 5), uint64], Tensor[(70), int64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool]) */
}

def @func_1908(%var_1849: Tensor[(2, 7, 5), int64]) -> (Tensor[(11, 9, 4), float32], Tensor[(11, 9, 4), float32], Tensor[(2, 7, 5), uint64], Tensor[(2, 7, 5), bool], Tensor[(396), float32]) {
  %399 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %400 = reshape(%399, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %401 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %402 = reshape(%401, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %403 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 7, 5), int64] */, dtype="uint64") /* ty=Tensor[(2, 7, 5), uint64] */;
  %404 = shape_of(%var_1849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_1849, dtype="uint64") /* ty=Tensor[(2, 7, 5), uint64] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %407 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 7, 5), int64] */, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %408 = shape_of(%var_1849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%var_1849, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %411 = not_equal(%409, %410) /* ty=Tensor[(2, 7, 5), bool] */;
  %412 = cast(%var_1849, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %416 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %417 = asin(%416) /* ty=Tensor[(396), float32] */;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(396), float32] */;
  %419 = @func_1290(%400) /* ty=Tensor[(11, 9, 4), float32] */;
  %420 = @func_1290(%402) /* ty=Tensor[(11, 9, 4), float32] */;
  %421 = bitwise_or(%405, %406) /* ty=Tensor[(2, 7, 5), uint64] */;
  %422 = equal(%414, %415) /* ty=Tensor[(2, 7, 5), bool] */;
  %423 = sqrt(%418) /* ty=Tensor[(396), float32] */;
  (%419, %420, %421, %422, %423)
}

def @func_6421() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  @func_6419() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */
}

def @func_7685() -> Tensor[(7, 6, 16), float64] {
  %425 = fn () -> Tensor[(7, 6, 16), float64] {
    %424 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
    %424.1
  };
  %425() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_1971(%var_1969: Tensor[(14, 15, 7), float64], %var_1970: Tensor[(1560), int16]) -> (Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) {
  %446 = fn (%var_1920: Tensor[(14, 15, 7), float64], %var_1931: Tensor[(1560), int16]) -> (Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) {
    %426 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %427 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %428 = reshape(%426, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
    %429 = reshape(%427, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
    %430 = cast(%var_1920, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
    %431 = asinh(%430) /* ty=Tensor[(14, 15, 7), float64] */;
    %432 = cast(%431, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
    %433 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %434 = cast(%var_1931, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %435 = reshape(%433, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
    %436 = reshape(%434, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
    %437 = cast(%431, dtype="float64") /* ty=Tensor[(14, 15, 7), float64] */;
    %438 = cos(%437) /* ty=Tensor[(14, 15, 7), float64] */;
    %439 = cast(%438, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
    %440 = log10(%439) /* ty=Tensor[(14, 15, 7), float32] */;
    %441 = cast(%440, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
    %442 = @func_226(%428, %429) /* ty=Tensor[(15, 8, 13), bool] */;
    %443 = rsqrt(%432) /* ty=Tensor[(14, 15, 7), float64] */;
    %444 = @func_226(%435, %436) /* ty=Tensor[(15, 8, 13), bool] */;
    %445 = asin(%441) /* ty=Tensor[(14, 15, 7), float32] */;
    (%442, %var_1931, %443, %444, %445)
  };
  %446(%var_1969, %var_1970) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */
}

def @func_5735(%var_5727: Tensor[(825), float64]) -> (Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) {
  %447 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %448 = %447.5;
  %449 = cast(%448, dtype="float64") /* ty=Tensor[(20), float64] */;
  %450 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %453 = sinh(%452) /* ty=Tensor[(7, 6, 16), float32] */;
  %454 = cast(%453, dtype="uint32") /* ty=Tensor[(7, 6, 16), uint32] */;
  %455 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%451, dtype="uint32") /* ty=Tensor[(7, 6, 16), uint32] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %458 = cast(%var_5727, dtype="float64") /* ty=Tensor[(825), float64] */;
  %459 = reshape(%458, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %460 = @func_3370(%459) /* ty=(Tensor[(11, 15, 5), float64],) */;
  %461 = cosh(%449) /* ty=Tensor[(20), float64] */;
  %462 = maximum(%456, %457) /* ty=Tensor[(7, 6, 16), uint32] */;
  %463 = %460.0;
  (%461, %462, %463, %var_5727)
}

def @func_7861(%var_7856: Tensor[(1470), float64], %var_7857: Tensor[(169), int16], %var_7858: Tensor[(2535), int16], %var_7859: Tensor[(60, 14), uint8], %var_7860: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(825), float64], Tensor[(169), int16], Tensor[(2535), int16], Tensor[(42, 2), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 15, 7), bool], Tensor[(60, 14), float64], Tensor[(10, 6, 14), uint8]) {
  @func_7854(%var_7856, %var_7857, %var_7858, %var_7859, %var_7860) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(825), float64], Tensor[(169), int16], Tensor[(2535), int16], Tensor[(42, 2), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 15, 7), bool], Tensor[(60, 14), float64], Tensor[(10, 6, 14), uint8]) */
}

def @func_6320() -> Tensor[(7, 6, 16), float32] {
  @func_6318() /* ty=Tensor[(7, 6, 16), float32] */
}

def @func_5384(%var_5381: Tensor[(7, 6, 16), float64], %var_5382: Tensor[(840, 1), uint8], %var_5383: Tensor[(528), float32]) -> (Tensor[(6, 66), float32], Tensor[(847, 2), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), int64]) {
  @func_5379(%var_5381, %var_5382, %var_5383) /* ty=(Tensor[(6, 66), float32], Tensor[(847, 2), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), int64]) */
}

def @func_6928(%var_6923: Tensor[(9, 12, 11), float64], %var_6924: Tensor[(84), uint8], %var_6925: Tensor[(1, 840), uint8], %var_6926: Tensor[(528), float32], %var_6927: Tensor[(275), float32]) -> (Tensor[(9, 12, 11), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1, 1560), int16]) {
  @func_6921(%var_6923, %var_6924, %var_6925, %var_6926, %var_6927) /* ty=(Tensor[(9, 12, 11), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1, 1560), int16]) */
}

def @func_9749() -> (Tensor[(7, 6, 16), float64],) {
  %466 = fn () -> (Tensor[(7, 6, 16), float64],) {
    %464 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %465 = %464.0;
    (%465,)
  };
  %466() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_7478() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) {
  %467 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %468 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %469 = %467.0;
  %470 = %468.0;
  (%469, %470)
}

def @func_1791(%var_1788: Tensor[(1, 6, 14), uint8], %var_1789: Tensor[(10, 6, 14), uint8], %var_1790: Tensor[(528), float32]) -> (Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) {
  @func_1786(%var_1788, %var_1789, %var_1790) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */
}

def @func_7131(%var_7116: Tensor[(1, 10, 16), float64], %var_7119: Tensor[(10, 10, 16), float64]) -> (Tensor[(10, 10, 16), uint32], Tensor[(?, 10, 16), bool]) {
  %471 = cast(%var_7116, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %472 = asinh(%471) /* ty=Tensor[(1, 10, 16), float64] */;
  %473 = cast(%472, dtype="uint32") /* ty=Tensor[(1, 10, 16), uint32] */;
  %474 = cast(%var_7119, dtype="uint32") /* ty=Tensor[(10, 10, 16), uint32] */;
  %475 = cast(%472, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %476 = shape_of(%var_7116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_7116, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = multiply(%473, %474) /* ty=Tensor[(10, 10, 16), uint32] */;
  %480 = less_equal(%477, %478) /* ty=Tensor[(?, 10, 16), bool] */;
  (%479, %480)
}

def @func_2708(%var_2707: Tensor[(6, 13, 9), float32]) -> Tensor[(6, 13, 9), float32] {
  %489 = fn (%var_2682: Tensor[(6, 13, 9), float32]) -> Tensor[(6, 13, 9), float32] {
    %481 = cast(%var_2682, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
    %482 = erf(%481) /* ty=Tensor[(6, 13, 9), float32] */;
    %483 = cast(%var_2682, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
    %484 = sin(%483) /* ty=Tensor[(6, 13, 9), float32] */;
    %485 = cast(%484, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
    %486 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
    %487 = cast(%482, dtype="float32") /* ty=Tensor[(6, 13, 9), float32] */;
    %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%487, %488) /* ty=Tensor[(6, 13, 9), float32] */
  };
  %489(%var_2707) /* ty=Tensor[(6, 13, 9), float32] */
}

def @func_6862(%var_6860: Tensor[(819), float64], %var_6861: Tensor[(396), float32]) -> (Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) {
  %513 = fn (%var_6831: Tensor[(819), float64], %var_6834: Tensor[(396), float32]) -> (Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) {
    %490 = cast(meta[relay.Constant][26] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %491 = cast(%var_6831, dtype="float64") /* ty=Tensor[(819), float64] */;
    %492 = cast(meta[relay.Constant][27] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %493 = cast(meta[relay.Constant][28] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %494 = cast(%var_6834, dtype="float32") /* ty=Tensor[(396), float32] */;
    %495 = cast(meta[relay.Constant][29] /* ty=Tensor[(70), int64] */, dtype="int64") /* ty=Tensor[(70), int64] */;
    %496 = reshape(%490, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %497 = reshape(%491, newshape=[819]) /* ty=Tensor[(819), float64] */;
    %498 = reshape(%492, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
    %499 = reshape(%493, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %500 = reshape(%494, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %501 = reshape(%495, newshape=[70]) /* ty=Tensor[(70), int64] */;
    %502 = @func_6070(%496, %497, %498, %499, %500, %501) /* ty=(Tensor[(528), float32], Tensor[(84), uint8], Tensor[(1470), float64], Tensor[(819), bool], Tensor[(7, 6, 16), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(2, 7, 5), uint64], Tensor[(70), int64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(15, 8, 13), bool]) */;
    %503 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %504 = %503.0;
    %505 = cast(%504, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %506 = log10(%505) /* ty=Tensor[(7, 6, 16), float64] */;
    %507 = cast(%504, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
    %509 = cast(%506, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %511 = %502.15;
    %512 = power(%509, %510) /* ty=Tensor[(7, 6, 16), float64] */;
    (%511, meta[relay.Constant][26] /* ty=Tensor[(528), float32] */, %var_6831, meta[relay.Constant][27] /* ty=Tensor[(1470), float64] */, meta[relay.Constant][28] /* ty=Tensor[(1694), float64] */, %var_6834, meta[relay.Constant][29] /* ty=Tensor[(70), int64] */, %512)
  };
  %513(%var_6860, %var_6861) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) */
}

def @func_7567(%var_7562: Tensor[(1, 10, 4), uint64], %var_7563: Tensor[(13, 10, 4), bool], %var_7564: Tensor[(1452), float64], %var_7565: Tensor[(490), float64], %var_7566: Tensor[(6, 140), uint8]) -> (Tensor[(13, 10, 4), float64], Tensor[(528), float32], Tensor[(525), float32], Tensor[(672), float64], Tensor[(121, 14), float64], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(6, 140), uint8], Tensor[(169), int16]) {
  %542 = fn (%var_7531: Tensor[(1, 10, 4), uint64], %var_7538: Tensor[(13, 10, 4), bool], %var_7552: Tensor[(1452), float64], %var_7553: Tensor[(490), float64], %var_7555: Tensor[(6, 140), uint8]) -> (Tensor[(13, 10, 4), float64], Tensor[(528), float32], Tensor[(525), float32], Tensor[(672), float64], Tensor[(121, 14), float64], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(6, 140), uint8], Tensor[(169), int16]) {
    %514 = cast(%var_7531, dtype="bool") /* ty=Tensor[(1, 10, 4), bool] */;
    %515 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 10, 4), uint64] */, dtype="bool") /* ty=Tensor[(13, 10, 4), bool] */;
    %516 = less(%514, %515) /* ty=Tensor[(13, 10, 4), bool] */;
    %517 = cast(%var_7538, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
    %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %519 = cast(%516, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %521 = cast(meta[relay.Constant][31] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
    %522 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %523 = reshape(%521, newshape=[7, 5, 15]) /* ty=Tensor[(7, 5, 15), float32] */;
    %524 = reshape(%522, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
    %525 = @func_5804(%523, %524) /* ty=(Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) */;
    %526 = cast(%var_7552, dtype="float64") /* ty=Tensor[(1452), float64] */;
    %527 = cast(%var_7553, dtype="float64") /* ty=Tensor[(490), float64] */;
    %528 = cast(meta[relay.Constant][33] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %529 = cast(%var_7555, dtype="uint8") /* ty=Tensor[(6, 140), uint8] */;
    %530 = %525.5;
    %531 = cast(%530, dtype="float32") /* ty=Tensor[(528), float32] */;
    %532 = cast(meta[relay.Constant][34] /* ty=Tensor[(169), int16] */, dtype="int16") /* ty=Tensor[(169), int16] */;
    %533 = reshape(%526, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), float64] */;
    %534 = reshape(%527, newshape=[490]) /* ty=Tensor[(490), float64] */;
    %535 = reshape(%528, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %536 = reshape(%529, newshape=[840]) /* ty=Tensor[(840), uint8] */;
    %537 = reshape(%531, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %538 = reshape(%532, newshape=[169]) /* ty=Tensor[(169), int16] */;
    %539 = @func_5109(%533, %534, %535, %536, %537, %538) /* ty=(Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) */;
    %540 = floor_divide(%519, %520) /* ty=Tensor[(13, 10, 4), float64] */;
    %541 = %539.6;
    (%540, %530, meta[relay.Constant][31] /* ty=Tensor[(525), float32] */, meta[relay.Constant][32] /* ty=Tensor[(672), float64] */, %541, %var_7552, %var_7553, meta[relay.Constant][33] /* ty=Tensor[(84), uint8] */, %var_7555, meta[relay.Constant][34] /* ty=Tensor[(169), int16] */)
  };
  %542(%var_7562, %var_7563, %var_7564, %var_7565, %var_7566) /* ty=(Tensor[(13, 10, 4), float64], Tensor[(528), float32], Tensor[(525), float32], Tensor[(672), float64], Tensor[(121, 14), float64], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(6, 140), uint8], Tensor[(169), int16]) */
}

def @func_4773(%var_4772: Tensor[(448), float64]) -> (Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  %549 = fn (%var_4763: Tensor[(448), float64]) -> (Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
    %543 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 3), float32] */;
    %544 = cast(%var_4763, dtype="float64") /* ty=Tensor[(448), float64] */;
    %545 = reshape(%544, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
    %546 = @func_3244(%545) /* ty=(Tensor[(4, 7, 16), float64],) */;
    %547 = cosh(%543) /* ty=Tensor[(5, 15, 3), float32] */;
    %548 = %546.0;
    (%547, %548, %var_4763)
  };
  %549(%var_4772) /* ty=(Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */
}

def @func_3645(%var_3576: Tensor[(11, 14, 11), float64], %var_3586: Tensor[(6, 66), float32], %var_3600: Tensor[(21, 4), uint8], %var_3609: Tensor[(840, 1), uint8], %var_3610: Tensor[(528), float32]) -> (Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) {
  %550 = cast(%var_3576, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  %551 = cast(%var_3586, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %552 = reshape(%551, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %553 = cast(meta[relay.Constant][36] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %554 = cast(%var_3600, dtype="uint8") /* ty=Tensor[(21, 4), uint8] */;
  %555 = reshape(%553, newshape=[9, 7, 13]) /* ty=Tensor[(9, 7, 13), float64] */;
  %556 = reshape(%554, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %557 = @func_2639(%555, %556) /* ty=(Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) */;
  %558 = cast(%var_3576, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  %559 = cosh(%558) /* ty=Tensor[(11, 14, 11), float32] */;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  %561 = cast(%var_3600, dtype="uint8") /* ty=Tensor[(21, 4), uint8] */;
  %562 = cast(%var_3609, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %563 = cast(%var_3610, dtype="float32") /* ty=Tensor[(528), float32] */;
  %564 = reshape(%561, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %565 = reshape(%562, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %566 = reshape(%563, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %567 = @func_1786(%564, %565, %566) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %568 = @func_1290(%552) /* ty=Tensor[(11, 9, 4), float32] */;
  %569 = cast(%568, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  %570 = reshape(%569, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %571 = sigmoid(%550) /* ty=Tensor[(11, 14, 11), float64] */;
  %572 = %557.1;
  %573 = acos(%560) /* ty=Tensor[(11, 14, 11), float32] */;
  %574 = %567.1;
  %575 = @func_1290(%570) /* ty=Tensor[(11, 9, 4), float32] */;
  (%571, %568, %var_3586, %572, meta[relay.Constant][36] /* ty=Tensor[(819), float64] */, %var_3600, %573, %574, %var_3609, %var_3610, %575)
}

def @func_1076(%var_1073: Tensor[(5, 5, 14), int32], %var_1074: Tensor[(5, 5, 14), int32], %var_1075: Tensor[(5, 5, 14), int32]) -> (Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) {
  %588 = fn (%var_1050: Tensor[(5, 5, 14), int32], %var_1051: Tensor[(5, 5, 14), int32], %var_1064: Tensor[(5, 5, 14), int32]) -> (Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) {
    %576 = cast(%var_1051, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
    %577 = shape_of(%var_1050, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%var_1050, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %580 = cast(%var_1064, dtype="int64") /* ty=Tensor[(5, 5, 14), int64] */;
    %581 = shape_of(%var_1050, dtype="int32") /* ty=Tensor[(3), int32] */;
    %582 = cast(%var_1050, dtype="int64") /* ty=Tensor[(5, 5, 14), int64] */;
    %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %584 = cast(%var_1064, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
    %585 = equal(%578, %579) /* ty=Tensor[(5, 5, 14), bool] */;
    %586 = add(%582, %583) /* ty=Tensor[(5, 5, 14), int64] */;
    %587 = asinh(%584) /* ty=Tensor[(5, 5, 14), float32] */;
    (%585, %586, %587)
  };
  %588(%var_1073, %var_1074, %var_1075) /* ty=(Tensor[(5, 5, 14), bool], Tensor[(5, 5, 14), int64], Tensor[(5, 5, 14), float32]) */
}

def @func_4027(%var_4025: Tensor[(1, 13, 13), int16], %var_4026: Tensor[(15, 13, 13), int16]) -> (Tensor[(15, 13, 13), int16],) {
  @func_4023(%var_4025, %var_4026) /* ty=(Tensor[(15, 13, 13), int16],) */
}

def @func_4234(%var_4232: Tensor[(10, 7, 7), float64]) -> (Tensor[(10, 7, 7), float64],) {
  @func_4231(%var_4232) /* ty=(Tensor[(10, 7, 7), float64],) */
}

def @func_5912() -> Tensor[(7, 6, 16), float32] {
  %590 = fn () -> Tensor[(7, 6, 16), float32] {
    %589 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
    %589.1
  };
  %590() /* ty=Tensor[(7, 6, 16), float32] */
}

def @func_6318() -> Tensor[(7, 6, 16), float32] {
  @func_5911() /* ty=Tensor[(7, 6, 16), float32] */
}

def @func_8123() -> Tensor[(7, 6, 16), float64] {
  %591 = fn () -> Tensor[(7, 6, 16), float64] {
    @func_7684() /* ty=Tensor[(7, 6, 16), float64] */
  };
  %591() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_5807(%var_5805: Tensor[(7, 5, 15), float32], %var_5806: Tensor[(7, 6, 16), float64]) -> (Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) {
  %619 = fn (%var_5748: Tensor[(7, 5, 15), float32], %var_5776: Tensor[(7, 6, 16), float64]) -> (Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) {
    %592 = cast(%var_5748, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
    %593 = cos(%592) /* ty=Tensor[(7, 5, 15), float32] */;
    %594 = cast(%593, dtype="float64") /* ty=Tensor[(7, 5, 15), float64] */;
    %595 = cast(%593, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
    %596 = cast(%var_5748, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
    %597 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %598 = %597.0;
    %599 = cast(%var_5776, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%598, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %603 = cast(meta[relay.Constant][37] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %604 = cast(meta[relay.Constant][37] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %605 = reshape(%603, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %606 = reshape(%604, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %607 = @func_831(%605, %606) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
    %608 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
    %609 = %607.2;
    %610 = cast(%609, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %611 = reshape(%608, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float64] */;
    %612 = reshape(%610, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
    %613 = @func_1968(%611, %612) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(14, 15, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(14, 15, 7), float32]) */;
    %614 = rsqrt(%594) /* ty=Tensor[(7, 5, 15), float64] */;
    %615 = atanh(%595) /* ty=Tensor[(7, 5, 15), float32] */;
    %616 = acos(%596) /* ty=Tensor[(7, 5, 15), float32] */;
    %617 = logical_and(%601, %602) /* ty=Tensor[(7, 6, 16), bool] */;
    %618 = %613.3;
    (%614, %615, %616, %617, %609, meta[relay.Constant][37] /* ty=Tensor[(528), float32] */, %618, meta[relay.Constant][38] /* ty=Tensor[(14, 105), float64] */)
  };
  %619(%var_5805, %var_5806) /* ty=(Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) */
}

def @func_8253(%var_8242: float32, %var_8243: Tensor[(3, 7, 6), float32]) -> Tensor[(3, 7, 6), float32] {
  %620 = cast(%var_8242, dtype="float32") /* ty=float32 */;
  %621 = cast(%var_8243, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  mod(%620, %621) /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_6770() -> (Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) {
  %622 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %623 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %624 = cast(meta[relay.Constant][39] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %625 = %622.0;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %627 = reshape(%624, newshape=[7, 5, 15]) /* ty=Tensor[(7, 5, 15), float32] */;
  %628 = reshape(%626, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
  %629 = @func_5804(%627, %628) /* ty=(Tensor[(7, 5, 15), float64], Tensor[(7, 5, 15), float32], Tensor[(7, 5, 15), float32], Tensor[(7, 6, 16), bool], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(14, 105), float64]) */;
  %630 = %623.2;
  %631 = %629.5;
  (%625, %630, %631, meta[relay.Constant][39] /* ty=Tensor[(525), float32] */)
}

def @func_1671(%var_1669: Tensor[(198, 2), float32], %var_1670: Tensor[(528), float32]) -> (Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) {
  @func_1667(%var_1669, %var_1670) /* ty=(Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) */
}

def @func_8534() -> (Tensor[(7, 6, 16), float32], Tensor[(7, 6, 16), float64]) {
  %635 = fn () -> (Tensor[(7, 6, 16), float32], Tensor[(7, 6, 16), float64]) {
    %632 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %633 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
    %634 = %632.0;
    (%633, %634)
  };
  %635() /* ty=(Tensor[(7, 6, 16), float32], Tensor[(7, 6, 16), float64]) */
}

def @func_5532() -> (Tensor[(7, 6, 16), float64],) {
  %638 = fn () -> (Tensor[(7, 6, 16), float64],) {
    %636 = @func_5479() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %637 = %636.0;
    (%637,)
  };
  %638() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_8241() -> Tensor[(7, 6, 16), float64] {
  @func_8239() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_8804(%var_8802: Tensor[(7, 6, 16), float64], %var_8803: Tensor[(126), float32]) -> (Tensor[(7, 6, 16), uint64], Tensor[(3, 7, 6), float32], float32, Tensor[(126), float32], Tensor[(7, 6, 16), float64]) {
  %652 = fn (%var_8763: Tensor[(7, 6, 16), float64], %var_8775: Tensor[(126), float32]) -> (Tensor[(7, 6, 16), uint64], Tensor[(3, 7, 6), float32], float32, Tensor[(126), float32], Tensor[(7, 6, 16), float64]) {
    %639 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %640 = %639.0;
    %641 = cast(%var_8763, dtype="uint64") /* ty=Tensor[(7, 6, 16), uint64] */;
    %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%640, dtype="uint64") /* ty=Tensor[(7, 6, 16), uint64] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %645 = cast(1.79413f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %646 = cast(%var_8775, dtype="float32") /* ty=Tensor[(126), float32] */;
    %647 = reshape(%645, newshape=[]) /* ty=float32 */;
    %648 = reshape(%646, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %649 = left_shift(%643, %644) /* ty=Tensor[(7, 6, 16), uint64] */;
    %650 = @func_8253(%647, %648) /* ty=Tensor[(3, 7, 6), float32] */;
    %651 = @func_8691() /* ty=Tensor[(7, 6, 16), float64] */;
    (%649, %650, 1.79413f /* ty=float32 */, %var_8775, %651)
  };
  %652(%var_8802, %var_8803) /* ty=(Tensor[(7, 6, 16), uint64], Tensor[(3, 7, 6), float32], float32, Tensor[(126), float32], Tensor[(7, 6, 16), float64]) */
}

def @func_229(%var_227: Tensor[(15, 8, 13), int16], %var_228: Tensor[(15, 8, 13), int16]) -> Tensor[(15, 8, 13), bool] {
  %657 = fn (%var_219: Tensor[(15, 8, 13), int16], %var_220: Tensor[(15, 8, 13), int16]) -> Tensor[(15, 8, 13), bool] {
    %653 = cast(%var_220, dtype="bool") /* ty=Tensor[(15, 8, 13), bool] */;
    %654 = shape_of(%var_219, dtype="int32") /* ty=Tensor[(3), int32] */;
    %655 = cast(%var_219, dtype="bool") /* ty=Tensor[(15, 8, 13), bool] */;
    %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%655, %656) /* ty=Tensor[(15, 8, 13), bool] */
  };
  %657(%var_227, %var_228) /* ty=Tensor[(15, 8, 13), bool] */
}

def @func_8471() -> (Tensor[(7, 6, 16), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64]) {
  %658 = @func_6305() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %659 = cast(meta[relay.Constant][40] /* ty=Tensor[(490), float64] */, dtype="float64") /* ty=Tensor[(490), float64] */;
  %660 = reshape(%659, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
  %661 = @func_4231(%660) /* ty=(Tensor[(10, 7, 7), float64],) */;
  %662 = %658.0;
  %663 = %661.0;
  (%662, %663, meta[relay.Constant][40] /* ty=Tensor[(490), float64] */)
}

def @func_8580() -> Tensor[(7, 6, 16), float64] {
  %665 = fn () -> Tensor[(7, 6, 16), float64] {
    %664 = @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %664.0
  };
  %665() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_9841() -> (Tensor[(7, 6, 16), float64], Tensor[(6, 13, 9), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(702, 3), bool], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float32], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(702, 3), bool]) {
  %698 = fn () -> (Tensor[(7, 6, 16), float64], Tensor[(6, 13, 9), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(702, 3), bool], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float32], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(702, 3), bool]) {
    %666 = @func_9166() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
    %667 = cast(meta[relay.Constant][41] /* ty=Tensor[(702, 1), float32] */, dtype="float32") /* ty=Tensor[(702, 1), float32] */;
    %668 = reshape(%667, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float32] */;
    %669 = cast(meta[relay.Constant][42] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %670 = reshape(%669, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
    %671 = @func_3244(%670) /* ty=(Tensor[(4, 7, 16), float64],) */;
    %672 = cast(meta[relay.Constant][41] /* ty=Tensor[(702, 1), float32] */, dtype="bool") /* ty=Tensor[(702, 1), bool] */;
    %673 = cast(meta[relay.Constant][43] /* ty=Tensor[(702, 3), float32] */, dtype="bool") /* ty=Tensor[(702, 3), bool] */;
    %674 = cast(meta[relay.Constant][44] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %675 = cast(meta[relay.Constant][45] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %676 = cast(meta[relay.Constant][46] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %677 = reshape(%674, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
    %678 = reshape(%675, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
    %679 = reshape(%676, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %680 = @func_1786(%677, %678, %679) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
    %681 = cast(meta[relay.Constant][47] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
    %682 = reshape(%681, newshape=[825]) /* ty=Tensor[(825), float64] */;
    %683 = @func_5735(%682) /* ty=(Tensor[(20), float64], Tensor[(7, 6, 16), uint32], Tensor[(11, 15, 5), float64], Tensor[(825), float64]) */;
    %684 = cast(meta[relay.Constant][41] /* ty=Tensor[(702, 1), float32] */, dtype="float64") /* ty=Tensor[(702, 1), float64] */;
    %685 = log10(%684) /* ty=Tensor[(702, 1), float64] */;
    %686 = cast(%685, dtype="float32") /* ty=Tensor[(702, 1), float32] */;
    %687 = sqrt(%686) /* ty=Tensor[(702, 1), float32] */;
    %688 = cast(%687, dtype="bool") /* ty=Tensor[(702, 1), bool] */;
    %689 = cast(meta[relay.Constant][43] /* ty=Tensor[(702, 3), float32] */, dtype="bool") /* ty=Tensor[(702, 3), bool] */;
    %690 = %666.0;
    %691 = @func_2706(%668) /* ty=Tensor[(6, 13, 9), float32] */;
    %692 = %671.0;
    %693 = greater_equal(%672, %673) /* ty=Tensor[(702, 3), bool] */;
    %694 = %680.1;
    %695 = @func_5911() /* ty=Tensor[(7, 6, 16), float32] */;
    %696 = %683.2;
    %697 = equal(%688, %689) /* ty=Tensor[(702, 3), bool] */;
    (%690, %691, %692, meta[relay.Constant][42] /* ty=Tensor[(448), float64] */, %693, %694, meta[relay.Constant][44] /* ty=Tensor[(84), uint8] */, meta[relay.Constant][45] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][46] /* ty=Tensor[(528), float32] */, %695, %696, meta[relay.Constant][47] /* ty=Tensor[(825), float64] */, %697)
  };
  %698() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(6, 13, 9), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(702, 3), bool], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float32], Tensor[(11, 15, 5), float64], Tensor[(825), float64], Tensor[(702, 3), bool]) */
}

def @func_9395(%var_9373: Tensor[(528), float32], %var_9376: Tensor[(14, 105), float64]) -> (Tensor[(7, 6, 16), float32], Tensor[(528), float32], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 105), int16], Tensor[(6, 13, 9), float32], Tensor[(702), float32]) {
  %699 = @func_8980() /* ty=(Tensor[(7, 6, 16), float32],) */;
  %700 = cast(%var_9373, dtype="float32") /* ty=Tensor[(528), float32] */;
  %701 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 105), float64] */, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
  %702 = reshape(%700, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %703 = reshape(%701, newshape=[490, 3]) /* ty=Tensor[(490, 3), float64] */;
  %704 = @func_7335(%702, %703) /* ty=(Tensor[(7, 6, 16), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(819), float64], Tensor[(84), uint8], Tensor[(490, 3), float64]) */;
  %705 = cast(%var_9376, dtype="bool") /* ty=Tensor[(14, 105), bool] */;
  %706 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(14, 105), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %707 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 105), float64] */, dtype="bool") /* ty=Tensor[(14, 105), bool] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %709 = logical_or(%707, %708) /* ty=Tensor[(14, 105), bool] */;
  %710 = cast(%var_9376, dtype="int16") /* ty=Tensor[(14, 105), int16] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(2), int32] */;
  %712 = cast(%709, dtype="int16") /* ty=Tensor[(14, 105), int16] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %714 = cast(meta[relay.Constant][49] /* ty=Tensor[(702), float32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
  %715 = reshape(%714, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float32] */;
  %716 = %699.0;
  %717 = %704.2;
  %718 = @func_8122() /* ty=Tensor[(7, 6, 16), float64] */;
  %719 = left_shift(%712, %713) /* ty=Tensor[(14, 105), int16] */;
  %720 = @func_2706(%715) /* ty=Tensor[(6, 13, 9), float32] */;
  (%716, %717, %var_9373, %718, %719, %720, meta[relay.Constant][49] /* ty=Tensor[(702), float32] */)
}

def @func_7742(%var_7715: Tensor[(1560), int16], %var_7721: Tensor[(3, 132), float32], %var_7722: Tensor[(528, 1), float32], %var_7739: Tensor[(10, 2), float64]) -> (Tensor[(4, 7, 16), float64], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(12, 2, 8), float64], Tensor[(3, 132), float32], Tensor[(528, 1), float32], Tensor[(5, 15, 3), float32], Tensor[(5, 2, 2), float64], Tensor[(10, 2), float64], Tensor[(1, 490), float64]) {
  %721 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %722 = cast(meta[relay.Constant][50] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %723 = cast(meta[relay.Constant][50] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %724 = cast(%var_7715, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %725 = reshape(%722, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %726 = reshape(%723, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
  %727 = reshape(%724, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
  %728 = @func_3533(%725, %726, %727) /* ty=(Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) */;
  %729 = cast(%var_7721, dtype="float32") /* ty=Tensor[(3, 132), float32] */;
  %730 = cast(%var_7722, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %731 = reshape(%729, newshape=[198, 2]) /* ty=Tensor[(198, 2), float32] */;
  %732 = reshape(%730, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %733 = @func_1667(%731, %732) /* ty=(Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) */;
  %734 = %721.1;
  %735 = cast(%734, dtype="float64") /* ty=Tensor[(4, 7, 16), float64] */;
  %736 = reshape(%735, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %737 = @func_4771(%736) /* ty=(Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %738 = cast(%var_7739, dtype="float64") /* ty=Tensor[(10, 2), float64] */;
  %739 = cast(%var_7739, dtype="float64") /* ty=Tensor[(10, 2), float64] */;
  %740 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 490), float64] */, dtype="float64") /* ty=Tensor[(1, 490), float64] */;
  %741 = reshape(%738, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %742 = reshape(%739, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %743 = reshape(%740, newshape=[490]) /* ty=Tensor[(490), float64] */;
  %744 = @func_4679(%741, %742, %743) /* ty=(Tensor[(5, 2, 2), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(350), uint32]) */;
  %745 = %728.3;
  %746 = %733.0;
  %747 = %737.0;
  %748 = %744.0;
  (%734, %745, meta[relay.Constant][50] /* ty=Tensor[(275), float32] */, %var_7715, %746, %var_7721, %var_7722, %747, %748, %var_7739, meta[relay.Constant][51] /* ty=Tensor[(1, 490), float64] */)
}

def @func_10032(%var_10029: Tensor[(840), uint8], %var_10030: Tensor[(275), float32], %var_10031: Tensor[(5, 84), uint8]) -> (Tensor[(7, 6, 16), float64], Tensor[(1, 840), uint8], Tensor[(1188, 1), float64], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(5, 84), bool], Tensor[(528, 275), float64]) {
  %773 = fn (%var_9980: Tensor[(840), uint8], %var_9982: Tensor[(275), float32], %var_10000: Tensor[(5, 84), uint8]) -> (Tensor[(7, 6, 16), float64], Tensor[(1, 840), uint8], Tensor[(1188, 1), float64], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(5, 84), bool], Tensor[(528, 275), float64]) {
    %749 = @func_7478() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
    %750 = cast(meta[relay.Constant][52] /* ty=Tensor[(1188, 1), float64] */, dtype="float64") /* ty=Tensor[(1188, 1), float64] */;
    %751 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 84), uint8] */, dtype="uint8") /* ty=Tensor[(1, 84), uint8] */;
    %752 = cast(%var_9980, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %753 = cast(meta[relay.Constant][54] /* ty=Tensor[(528, 1), float32] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
    %754 = cast(%var_9982, dtype="float32") /* ty=Tensor[(275), float32] */;
    %755 = reshape(%750, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), float64] */;
    %756 = reshape(%751, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %757 = reshape(%752, newshape=[1, 840]) /* ty=Tensor[(1, 840), uint8] */;
    %758 = reshape(%753, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %759 = reshape(%754, newshape=[275]) /* ty=Tensor[(275), float32] */;
    %760 = @func_6921(%755, %756, %757, %758, %759) /* ty=(Tensor[(9, 12, 11), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(15, 8, 13), bool], Tensor[(275), float32], Tensor[(1, 1560), int16]) */;
    %761 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %762 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 84), uint8] */, dtype="bool") /* ty=Tensor[(1, 84), bool] */;
    %763 = cast(%var_10000, dtype="bool") /* ty=Tensor[(5, 84), bool] */;
    %764 = cast(%var_9982, dtype="float64") /* ty=Tensor[(275), float64] */;
    %765 = log2(%764) /* ty=Tensor[(275), float64] */;
    %766 = cast(%765, dtype="float64") /* ty=Tensor[(275), float64] */;
    %767 = cast(meta[relay.Constant][54] /* ty=Tensor[(528, 1), float32] */, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
    %768 = %749.0;
    %769 = %760.3;
    %770 = %761.0;
    %771 = equal(%762, %763) /* ty=Tensor[(5, 84), bool] */;
    %772 = floor_mod(%766, %767) /* ty=Tensor[(528, 275), float64] */;
    (%768, %769, meta[relay.Constant][52] /* ty=Tensor[(1188, 1), float64] */, %var_9980, %770, %771, %772)
  };
  %773(%var_10029, %var_10030, %var_10031) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1, 840), uint8], Tensor[(1188, 1), float64], Tensor[(840), uint8], Tensor[(7, 6, 16), float64], Tensor[(5, 84), bool], Tensor[(528, 275), float64]) */
}

def @func_5603() -> (Tensor[(7, 6, 16), float64],) {
  @func_5601() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_9125() -> (Tensor[(7, 6, 16), bool],) {
  %774 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %775 = %774.0;
  %776 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 6, 16), float64] */, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %780 = logical_or(%778, %779) /* ty=Tensor[(7, 6, 16), bool] */;
  (%780,)
}

def @func_9018(%var_9017: Tensor[(13, 1, 6), float64]) -> (Tensor[(13, 1, 6), bool], Tensor[(7, 6, 16), bool], Tensor[(672), float64], Tensor[(528), float32], Tensor[(13, 1, 6), uint8], Tensor[(7, 6, 16), float64], Tensor[(13, ?, 6), float64]) {
  %801 = fn (%var_8985: Tensor[(13, 1, 6), float64]) -> (Tensor[(13, 1, 6), bool], Tensor[(7, 6, 16), bool], Tensor[(672), float64], Tensor[(528), float32], Tensor[(13, 1, 6), uint8], Tensor[(7, 6, 16), float64], Tensor[(13, ?, 6), float64]) {
    %781 = cast(2.97074f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %782 = cast(%var_8985, dtype="bool") /* ty=Tensor[(13, 1, 6), bool] */;
    %783 = cast(meta[relay.Constant][56] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %784 = cast(meta[relay.Constant][57] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %785 = reshape(%783, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
    %786 = reshape(%784, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %787 = @func_5517(%785, %786) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) */;
    %788 = cast(%var_8985, dtype="float32") /* ty=Tensor[(13, 1, 6), float32] */;
    %789 = log(%788) /* ty=Tensor[(13, 1, 6), float32] */;
    %790 = cast(%789, dtype="uint8") /* ty=Tensor[(13, 1, 6), uint8] */;
    %791 = cast(2.97074f64 /* ty=float64 */, dtype="uint8") /* ty=uint8 */;
    %792 = cast(%789, dtype="float64") /* ty=Tensor[(13, 1, 6), float64] */;
    %793 = shape_of(%var_8985, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(%var_8985, dtype="float64") /* ty=Tensor[(13, 1, 6), float64] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %796 = less(%781, %782) /* ty=Tensor[(13, 1, 6), bool] */;
    %797 = %787.0;
    %798 = multiply(%790, %791) /* ty=Tensor[(13, 1, 6), uint8] */;
    %799 = @func_8691() /* ty=Tensor[(7, 6, 16), float64] */;
    %800 = divide(%794, %795) /* ty=Tensor[(13, ?, 6), float64] */;
    (%796, %797, meta[relay.Constant][56] /* ty=Tensor[(672), float64] */, meta[relay.Constant][57] /* ty=Tensor[(528), float32] */, %798, %799, %800)
  };
  %801(%var_9017) /* ty=(Tensor[(13, 1, 6), bool], Tensor[(7, 6, 16), bool], Tensor[(672), float64], Tensor[(528), float32], Tensor[(13, 1, 6), uint8], Tensor[(7, 6, 16), float64], Tensor[(13, ?, 6), float64]) */
}

def @func_835(%var_833: Tensor[(11, 4, 12), float32], %var_834: Tensor[(11, 4, 12), float32]) -> (Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) {
  @func_831(%var_833, %var_834) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */
}

def @func_9514(%var_9510: Tensor[(1694), float64], %var_9511: Tensor[(396), float32], %var_9512: Tensor[(840), uint8], %var_9513: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), bool]) {
  %817 = fn (%var_9482: Tensor[(1694), float64], %var_9483: Tensor[(396), float32], %var_9485: Tensor[(840), uint8], %var_9486: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), bool]) {
    %802 = cast(%var_9482, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %803 = cast(%var_9483, dtype="float32") /* ty=Tensor[(396), float32] */;
    %804 = cast(meta[relay.Constant][58] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %805 = cast(%var_9485, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %806 = cast(%var_9486, dtype="float32") /* ty=Tensor[(528), float32] */;
    %807 = reshape(%802, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
    %808 = reshape(%803, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
    %809 = reshape(%804, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
    %810 = reshape(%805, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
    %811 = reshape(%806, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %812 = @func_3645(%807, %808, %809, %810, %811) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
    %813 = @func_9125() /* ty=(Tensor[(7, 6, 16), bool],) */;
    %814 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
    %815 = %812.3;
    %816 = %813.0;
    (%814, %815, %var_9482, %var_9483, meta[relay.Constant][58] /* ty=Tensor[(84), uint8] */, %var_9485, %var_9486, %816)
  };
  %817(%var_9510, %var_9511, %var_9512, %var_9513) /* ty=(Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), bool]) */
}

def @func_9056() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32]) {
  %821 = fn () -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32]) {
    %818 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %819 = %818.0;
    %820 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
    (%819, %820)
  };
  %821() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32]) */
}

def @func_8257(%var_8255: float32, %var_8256: Tensor[(3, 7, 6), float32]) -> Tensor[(3, 7, 6), float32] {
  @func_8253(%var_8255, %var_8256) /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_6157() -> (Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) {
  %822 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %823 = cast(meta[relay.Constant][59] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %824 = reshape(%823, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %825 = @func_4771(%824) /* ty=(Tensor[(5, 15, 3), float32], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %826 = %822.0;
  %827 = %825.1;
  (%826, %827, meta[relay.Constant][59] /* ty=Tensor[(448), float64] */)
}

def @func_9859() -> (Tensor[(7, 6, 16), float64],) {
  @func_9857() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_5117(%var_5111: Tensor[(11, 12, 11), float64], %var_5112: Tensor[(490), float64], %var_5113: Tensor[(84), uint8], %var_5114: Tensor[(840), uint8], %var_5115: Tensor[(528), float32], %var_5116: Tensor[(169), int16]) -> (Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) {
  @func_5109(%var_5111, %var_5112, %var_5113, %var_5114, %var_5115, %var_5116) /* ty=(Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) */
}

def @func_8971() -> Tensor[(7, 6, 16), float64] {
  %829 = fn () -> Tensor[(7, 6, 16), float64] {
    %828 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %828.0
  };
  %829() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_7176() -> Tensor[(7, 6, 16), float64] {
  %831 = fn () -> Tensor[(7, 6, 16), float64] {
    %830 = @func_6770() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) */;
    %830.0
  };
  %831() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_2642(%var_2640: Tensor[(9, 7, 13), float64], %var_2641: Tensor[(84), uint8]) -> (Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) {
  %842 = fn (%var_2627: Tensor[(9, 7, 13), float64], %var_2631: Tensor[(84), uint8]) -> (Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) {
    %832 = cast(%var_2627, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
    %833 = cast(%var_2631, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %834 = cast(meta[relay.Constant][60] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %835 = cast(meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %836 = reshape(%833, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
    %837 = reshape(%834, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
    %838 = reshape(%835, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %839 = @func_1786(%836, %837, %838) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
    %840 = cos(%832) /* ty=Tensor[(9, 7, 13), float64] */;
    %841 = %839.1;
    (%840, %841, %var_2631, meta[relay.Constant][60] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][61] /* ty=Tensor[(528), float32] */)
  };
  %842(%var_2640, %var_2641) /* ty=(Tensor[(9, 7, 13), float64], Tensor[(15, 8, 13), bool], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32]) */
}

def @func_7947(%var_7946: Tensor[(12, 6, 5), float32]) -> (Tensor[(12, 6, 5), float32],) {
  %845 = fn (%var_7941: Tensor[(12, 6, 5), float32]) -> (Tensor[(12, 6, 5), float32],) {
    %843 = cast(%var_7941, dtype="float32") /* ty=Tensor[(12, 6, 5), float32] */;
    %844 = sinh(%843) /* ty=Tensor[(12, 6, 5), float32] */;
    (%844,)
  };
  %845(%var_7946) /* ty=(Tensor[(12, 6, 5), float32],) */
}

def @func_7135(%var_7133: Tensor[(1, 10, 16), float64], %var_7134: Tensor[(10, 10, 16), float64]) -> (Tensor[(10, 10, 16), uint32], Tensor[(?, 10, 16), bool]) {
  @func_7131(%var_7133, %var_7134) /* ty=(Tensor[(10, 10, 16), uint32], Tensor[(?, 10, 16), bool]) */
}

def @func_8913() -> (Tensor[(7, 6, 16), float64],) {
  @func_8911() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_9274(%var_9270: Tensor[(819), float64], %var_9271: Tensor[(6, 66), float32], %var_9272: Tensor[(6, 66), float32], %var_9273: Tensor[(275), float32]) -> (Tensor[(448), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(819), float64], Tensor[(6, 66), bool], Tensor[(7, 6, 16), float64], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(11, 5, 5), float32]) {
  %877 = fn (%var_9219: Tensor[(819), float64], %var_9220: Tensor[(6, 66), float32], %var_9223: Tensor[(6, 66), float32], %var_9247: Tensor[(275), float32]) -> (Tensor[(448), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(819), float64], Tensor[(6, 66), bool], Tensor[(7, 6, 16), float64], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(11, 5, 5), float32]) {
    %846 = @func_6770() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(528), float32], Tensor[(525), float32]) */;
    %847 = @func_6157() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
    %848 = cast(%var_9219, dtype="float64") /* ty=Tensor[(819), float64] */;
    %849 = cast(%var_9220, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
    %850 = reshape(%848, newshape=[819]) /* ty=Tensor[(819), float64] */;
    %851 = reshape(%849, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %852 = @func_6859(%850, %851) /* ty=(Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(819), float64], Tensor[(1470), float64], Tensor[(1694), float64], Tensor[(396), float32], Tensor[(70), int64], Tensor[(7, 6, 16), float64]) */;
    %853 = cast(%var_9223, dtype="bool") /* ty=Tensor[(6, 66), bool] */;
    %854 = shape_of(%var_9220, dtype="int32") /* ty=Tensor[(2), int32] */;
    %855 = cast(%var_9220, dtype="bool") /* ty=Tensor[(6, 66), bool] */;
    %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %857 = @func_5531() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %858 = cast(meta[relay.Constant][63] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %859 = reshape(%858, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %860 = @func_8729(%859) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(15, 8, 13), bool]) */;
    %861 = cast(%var_9247, dtype="float32") /* ty=Tensor[(275), float32] */;
    %862 = cast(%var_9247, dtype="float32") /* ty=Tensor[(275), float32] */;
    %863 = cast(meta[relay.Constant][62] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %864 = reshape(%861, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
    %865 = reshape(%862, newshape=[11, 5, 5]) /* ty=Tensor[(11, 5, 5), float32] */;
    %866 = reshape(%863, newshape=[1560]) /* ty=Tensor[(1560), int16] */;
    %867 = @func_3533(%864, %865, %866) /* ty=(Tensor[(11, 5, 5), float32], Tensor[(15, 8, 13), bool], Tensor[(1560), int16], Tensor[(15, 8, 13), bool], Tensor[(6, 13, 9), float32], Tensor[(6, 117), float32]) */;
    %868 = %867.0;
    %869 = cast(%868, dtype="float32") /* ty=Tensor[(11, 5, 5), float32] */;
    %870 = %846.1;
    %871 = %847.0;
    %872 = %852.7;
    %873 = less_equal(%855, %856) /* ty=Tensor[(6, 66), bool] */;
    %874 = %857.0;
    %875 = %860.2;
    %876 = acos(%869) /* ty=Tensor[(11, 5, 5), float32] */;
    (%870, %871, %872, %var_9219, %873, %874, %var_9247, meta[relay.Constant][62] /* ty=Tensor[(1560), int16] */, %875, meta[relay.Constant][63] /* ty=Tensor[(528), float32] */, %876)
  };
  %877(%var_9270, %var_9271, %var_9272, %var_9273) /* ty=(Tensor[(448), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(819), float64], Tensor[(6, 66), bool], Tensor[(7, 6, 16), float64], Tensor[(275), float32], Tensor[(1560), int16], Tensor[(528), float32], Tensor[(528), float32], Tensor[(11, 5, 5), float32]) */
}

def @func_5109(%var_5040: Tensor[(11, 12, 11), float64], %var_5047: Tensor[(490), float64], %var_5070: Tensor[(84), uint8], %var_5071: Tensor[(840), uint8], %var_5072: Tensor[(528), float32], %var_5089: Tensor[(169), int16]) -> (Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) {
  %878 = cast(meta[relay.Constant][64] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %879 = reshape(%878, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %880 = @func_3244(%879) /* ty=(Tensor[(4, 7, 16), float64],) */;
  %881 = cast(%var_5047, dtype="float64") /* ty=Tensor[(490), float64] */;
  %882 = reshape(%881, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
  %883 = @func_4231(%882) /* ty=(Tensor[(10, 7, 7), float64],) */;
  %884 = %883.0;
  %885 = cast(%884, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %886 = reshape(%885, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float64] */;
  %887 = @func_4231(%886) /* ty=(Tensor[(10, 7, 7), float64],) */;
  %888 = cast(meta[relay.Constant][65] /* ty=Tensor[(121, 14), float64] */, dtype="float64") /* ty=Tensor[(121, 14), float64] */;
  %889 = cast(meta[relay.Constant][66] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %890 = cast(%var_5070, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %891 = cast(%var_5071, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %892 = cast(%var_5072, dtype="float32") /* ty=Tensor[(528), float32] */;
  %893 = reshape(%888, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %894 = reshape(%889, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %895 = reshape(%890, newshape=[21, 4]) /* ty=Tensor[(21, 4), uint8] */;
  %896 = reshape(%891, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %897 = reshape(%892, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %898 = @func_3645(%893, %894, %895, %896, %897) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(11, 9, 4), float32], Tensor[(6, 66), float32], Tensor[(15, 8, 13), bool], Tensor[(819), float64], Tensor[(21, 4), uint8], Tensor[(11, 14, 11), float32], Tensor[(15, 8, 13), bool], Tensor[(840, 1), uint8], Tensor[(528), float32], Tensor[(11, 9, 4), float32]) */;
  %899 = cast(%var_5040, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
  %900 = rsqrt(%899) /* ty=Tensor[(11, 12, 11), float64] */;
  %901 = cast(%900, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
  %902 = sqrt(%901) /* ty=Tensor[(11, 12, 11), float64] */;
  %903 = cast(%902, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
  %904 = cast(%var_5089, dtype="int16") /* ty=Tensor[(169), int16] */;
  %905 = cast(meta[relay.Constant][67] /* ty=Tensor[(2535), int16] */, dtype="int16") /* ty=Tensor[(2535), int16] */;
  %906 = reshape(%904, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), int16] */;
  %907 = reshape(%905, newshape=[15, 13, 13]) /* ty=Tensor[(15, 13, 13), int16] */;
  %908 = @func_4023(%906, %907) /* ty=(Tensor[(15, 13, 13), int16],) */;
  %909 = %880.0;
  %910 = %887.0;
  %911 = %898.7;
  %912 = sin(%903) /* ty=Tensor[(11, 12, 11), float64] */;
  %913 = %908.0;
  (%909, meta[relay.Constant][64] /* ty=Tensor[(448), float64] */, %884, %var_5047, %910, %911, meta[relay.Constant][65] /* ty=Tensor[(121, 14), float64] */, meta[relay.Constant][66] /* ty=Tensor[(396), float32] */, %var_5070, %var_5071, %var_5072, %912, %913, %var_5089, meta[relay.Constant][67] /* ty=Tensor[(2535), int16] */)
}

def @func_5480() -> (Tensor[(7, 6, 16), float64],) {
  %916 = fn () -> (Tensor[(7, 6, 16), float64],) {
    %914 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
    %915 = %914.0;
    (%915,)
  };
  %916() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_1667(%var_1648: Tensor[(198, 2), float32], %var_1657: Tensor[(528), float32]) -> (Tensor[(12, 2, 8), float64], Tensor[(11, 9, 4), float32], Tensor[(198, 2), float32], Tensor[(11, 4, 12), bool], Tensor[(528), float32]) {
  %917 = cast(meta[relay.Constant][68] /* ty=Tensor[(12, 2, 8), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %918 = cast(%var_1648, dtype="float32") /* ty=Tensor[(198, 2), float32] */;
  %919 = reshape(%918, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float32] */;
  %920 = cast(%var_1657, dtype="float32") /* ty=Tensor[(528), float32] */;
  %921 = cast(%var_1657, dtype="float32") /* ty=Tensor[(528), float32] */;
  %922 = reshape(%920, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %923 = reshape(%921, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %924 = @func_831(%922, %923) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) */;
  %925 = asin(%917) /* ty=Tensor[(12, 2, 8), float64] */;
  %926 = @func_1290(%919) /* ty=Tensor[(11, 9, 4), float32] */;
  %927 = %924.0;
  (%925, %926, %var_1648, %927, %var_1657)
}

def @func_7854(%var_7811: Tensor[(1470), float64], %var_7812: Tensor[(169), int16], %var_7813: Tensor[(2535), int16], %var_7815: Tensor[(60, 14), uint8], %var_7816: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(825), float64], Tensor[(169), int16], Tensor[(2535), int16], Tensor[(42, 2), uint8], Tensor[(528), float32], Tensor[(7, 6, 16), float64], Tensor[(14, 15, 7), bool], Tensor[(60, 14), float64], Tensor[(10, 6, 14), uint8]) {
  %928 = @func_6305() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %929 = @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */;
  %930 = cast(meta[relay.Constant][69] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
  %931 = cast(meta[relay.Constant][69] /* ty=Tensor[(825), float64] */, dtype="float64") /* ty=Tensor[(825), float64] */;
  %932 = cast(%var_7811, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %933 = cast(%var_7812, dtype="int16") /* ty=Tensor[(169), int16] */;
  %934 = cast(%var_7813, dtype="int16") /* ty=Tensor[(2535), int16] */;
  %935 = cast(meta[relay.Constant][70] /* ty=Tensor[(42, 2), uint8] */, dtype="uint8") /* ty=Tensor[(42, 2), uint8] */;
  %936 = cast(%var_7815, dtype="uint8") /* ty=Tensor[(60, 14), uint8] */;
  %937 = cast(%var_7816, dtype="float32") /* ty=Tensor[(528), float32] */;
  %938 = reshape(%930, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %939 = reshape(%931, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %940 = reshape(%932, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %941 = reshape(%933, newshape=[169]) /* ty=Tensor[(169), int16] */;
  %942 = reshape(%934, newshape=[13, 195]) /* ty=Tensor[(13, 195), int16] */;
  %943 = reshape(%935, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %944 = reshape(%936, newshape=[12, 70]) /* ty=Tensor[(12, 70), uint8] */;
  %945 = reshape(%937, newshape=[8, 66]) /* ty=Tensor[(8, 66), float32] */;
  %946 = @func_6650(%938, %939, %940, %941, %942, %943, %944, %945) /* ty=(Tensor[(20), float64], Tensor[(825), int16], Tensor[(14, 15, 7), float64], Tensor[(1470), float64], Tensor[(1560), int16], Tensor[(5, 5, 14), float32], Tensor[(350), int32], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(13, 195), int16], Tensor[(7, 6, 16), float64], Tensor[(10, 6, 14), uint8], Tensor[(84), uint8], Tensor[(12, 70), uint8], Tensor[(8, 66), float32], Tensor[(7, 6, 16), float64], Tensor[(4, 7, 16), float64], Tensor[(448), float64]) */;
  %947 = %946.2;
  %948 = cast(%var_7811, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="bool") /* ty=Tensor[(14, 15, 7), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %952 = cast(%var_7815, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
  %953 = cast(meta[relay.Constant][70] /* ty=Tensor[(42, 2), uint8] */, dtype="uint8") /* ty=Tensor[(42, 2), uint8] */;
  %954 = cast(%var_7815, dtype="uint8") /* ty=Tensor[(60, 14), uint8] */;
  %955 = cast(%var_7816, dtype="float32") /* ty=Tensor[(528), float32] */;
  %956 = reshape(%953, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), uint8] */;
  %957 = reshape(%954, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), uint8] */;
  %958 = reshape(%955, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %959 = @func_1786(%956, %957, %958) /* ty=(Tensor[(10, 6, 14), uint8], Tensor[(15, 8, 13), bool], Tensor[(528), float32]) */;
  %960 = %928.0;
  %961 = @func_7434() /* ty=Tensor[(7, 6, 16), float32] */;
  %962 = %929.0;
  %963 = greater_equal(%950, %951) /* ty=Tensor[(14, 15, 7), bool] */;
  %964 = sinh(%952) /* ty=Tensor[(60, 14), float64] */;
  %965 = %959.0;
  (%960, %961, meta[relay.Constant][69] /* ty=Tensor[(825), float64] */, %var_7812, %var_7813, meta[relay.Constant][70] /* ty=Tensor[(42, 2), uint8] */, %var_7816, %962, %963, %964, %965)
}

def @func_8287(%var_8285: Tensor[(56, 8), float64]) -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), bool], Tensor[(56, 8), float64]) {
  @func_8284(%var_8285) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), bool], Tensor[(56, 8), float64]) */
}

def @func_9722() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(7, 6, 16), float32]) {
  %966 = cast(meta[relay.Constant][71] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %967 = reshape(%966, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %968 = @func_8036(%967) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(448), bool]) */;
  %969 = @func_5278() /* ty=(Tensor[(7, 6, 16), float64],) */;
  %970 = %969.0;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %972 = @func_8239() /* ty=Tensor[(7, 6, 16), float64] */;
  %973 = %968.0;
  %974 = acosh(%971) /* ty=Tensor[(7, 6, 16), float32] */;
  (%972, %973, meta[relay.Constant][71] /* ty=Tensor[(448), float64] */, %974)
}

def @func_7043() -> (Tensor[(10, 7, 7), float64],) {
  @func_7041() /* ty=(Tensor[(10, 7, 7), float64],) */
}

def @func_8375(%var_8371: Tensor[(490), float64], %var_8372: Tensor[(84), uint8], %var_8373: Tensor[(1, 840), uint8], %var_8374: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(12, 6, 5), float32], Tensor[(360), float32], Tensor[(15, 13, 13), int16], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(169), float32]) {
  %996 = fn (%var_8350: Tensor[(490), float64], %var_8351: Tensor[(84), uint8], %var_8352: Tensor[(1, 840), uint8], %var_8353: Tensor[(528), float32]) -> (Tensor[(7, 6, 16), float64], Tensor[(12, 6, 5), float32], Tensor[(360), float32], Tensor[(15, 13, 13), int16], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(169), float32]) {
    %975 = cast(meta[relay.Constant][72] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %976 = reshape(%975, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float32] */;
    %977 = @func_7945(%976) /* ty=(Tensor[(12, 6, 5), float32],) */;
    %978 = cast(meta[relay.Constant][73] /* ty=Tensor[(1452), float64] */, dtype="float64") /* ty=Tensor[(1452), float64] */;
    %979 = cast(%var_8350, dtype="float64") /* ty=Tensor[(490), float64] */;
    %980 = cast(%var_8351, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %981 = cast(%var_8352, dtype="uint8") /* ty=Tensor[(1, 840), uint8] */;
    %982 = cast(%var_8353, dtype="float32") /* ty=Tensor[(528), float32] */;
    %983 = cast(meta[relay.Constant][74] /* ty=Tensor[(169), int16] */, dtype="int16") /* ty=Tensor[(169), int16] */;
    %984 = reshape(%978, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), float64] */;
    %985 = reshape(%979, newshape=[490]) /* ty=Tensor[(490), float64] */;
    %986 = reshape(%980, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %987 = reshape(%981, newshape=[840]) /* ty=Tensor[(840), uint8] */;
    %988 = reshape(%982, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %989 = reshape(%983, newshape=[169]) /* ty=Tensor[(169), int16] */;
    %990 = @func_5109(%984, %985, %986, %987, %988, %989) /* ty=(Tensor[(4, 7, 16), float64], Tensor[(448), float64], Tensor[(10, 7, 7), float64], Tensor[(490), float64], Tensor[(10, 7, 7), float64], Tensor[(15, 8, 13), bool], Tensor[(121, 14), float64], Tensor[(396), float32], Tensor[(84), uint8], Tensor[(840), uint8], Tensor[(528), float32], Tensor[(11, 12, 11), float64], Tensor[(15, 13, 13), int16], Tensor[(169), int16], Tensor[(2535), int16]) */;
    %991 = cast(meta[relay.Constant][74] /* ty=Tensor[(169), int16] */, dtype="float32") /* ty=Tensor[(169), float32] */;
    %992 = @func_8239() /* ty=Tensor[(7, 6, 16), float64] */;
    %993 = %977.0;
    %994 = %990.12;
    %995 = cosh(%991) /* ty=Tensor[(169), float32] */;
    (%992, %993, meta[relay.Constant][72] /* ty=Tensor[(360), float32] */, %994, meta[relay.Constant][73] /* ty=Tensor[(1452), float64] */, %var_8350, %var_8351, %var_8352, %var_8353, %995)
  };
  %996(%var_8371, %var_8372, %var_8373, %var_8374) /* ty=(Tensor[(7, 6, 16), float64], Tensor[(12, 6, 5), float32], Tensor[(360), float32], Tensor[(15, 13, 13), int16], Tensor[(1452), float64], Tensor[(490), float64], Tensor[(84), uint8], Tensor[(1, 840), uint8], Tensor[(528), float32], Tensor[(169), float32]) */
}

def @func_5595() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) {
  @func_5593() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float32], Tensor[(15, 8, 13), bool], Tensor[(528), float32], Tensor[(10, 7, 7), float64], Tensor[(20), float64], Tensor[(245, 2), float64]) */
}

def @func_8692() -> Tensor[(7, 6, 16), float64] {
  %998 = fn () -> Tensor[(7, 6, 16), float64] {
    %997 = @func_6419() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
    %997.2
  };
  %998() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_9689() -> Tensor[(7, 6, 16), float64] {
  @func_8970() /* ty=Tensor[(7, 6, 16), float64] */
}

def @func_1293(%var_1291: Tensor[(11, 9, 4), float32]) -> Tensor[(11, 9, 4), float32] {
  @func_1290(%var_1291) /* ty=Tensor[(11, 9, 4), float32] */
}

def @func_9724() -> (Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(7, 6, 16), float32]) {
  @func_9722() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(448), float64], Tensor[(7, 6, 16), float32]) */
}

def @func_5279() -> (Tensor[(7, 6, 16), float64],) {
  %1003 = fn () -> (Tensor[(7, 6, 16), float64],) {
    %999 = cast(meta[relay.Constant][75] /* ty=Tensor[(7, 6, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
    %1000 = sigmoid(%999) /* ty=Tensor[(7, 6, 16), float32] */;
    %1001 = cast(%1000, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %1002 = log2(%1001) /* ty=Tensor[(7, 6, 16), float64] */;
    (%1002,)
  };
  %1003() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_6971() -> Tensor[(7, 6, 16), float64] {
  %1004 = @func_6419() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64], Tensor[(7, 6, 16), float64]) */;
  %1004.2
}

def @func_7671() -> (Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) {
  %1018 = fn () -> (Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) {
    %1005 = @func_6318() /* ty=Tensor[(7, 6, 16), float32] */;
    %1006 = @func_6318() /* ty=Tensor[(7, 6, 16), float32] */;
    %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %1008 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1009 = cast(%1005, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1011 = cast(%1005, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %1012 = cast(meta[relay.Constant][76] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %1013 = reshape(%1011, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float64] */;
    %1014 = reshape(%1012, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %1015 = @func_5517(%1013, %1014) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(12, 2, 8), float64], Tensor[(66, 6), float32], Tensor[(528), float32]) */;
    %1016 = floor_divide(%1009, %1010) /* ty=Tensor[(7, 6, 16), float64] */;
    %1017 = %1015.1;
    (%1016, %1017, meta[relay.Constant][76] /* ty=Tensor[(528), float32] */)
  };
  %1018() /* ty=(Tensor[(7, 6, 16), float64], Tensor[(12, 2, 8), float64], Tensor[(528), float32]) */
}

def @func_8555() -> (Tensor[(7, 6, 16), float64],) {
  %1019 = @func_8239() /* ty=Tensor[(7, 6, 16), float64] */;
  (%1019,)
}

def @func_8557() -> (Tensor[(7, 6, 16), float64],) {
  @func_8555() /* ty=(Tensor[(7, 6, 16), float64],) */
}

def @func_831(%var_803: Tensor[(11, 4, 12), float32], %var_807: Tensor[(11, 4, 12), float32]) -> (Tensor[(11, 4, 12), bool], Tensor[(15, 8, 13), bool], Tensor[(1560), int16]) {
  %1020 = cast(%var_803, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %1021 = sinh(%1020) /* ty=Tensor[(11, 4, 12), float32] */;
  %1022 = cast(%var_807, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
  %1023 = shape_of(%1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%1021, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1026 = cast(meta[relay.Constant][77] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %1027 = cast(meta[relay.Constant][77] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %1028 = reshape(%1026, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %1029 = reshape(%1027, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), int16] */;
  %1030 = less_equal(%1024, %1025) /* ty=Tensor[(11, 4, 12), bool] */;
  %1031 = @func_226(%1028, %1029) /* ty=Tensor[(15, 8, 13), bool] */;
  (%1030, %1031, meta[relay.Constant][77] /* ty=Tensor[(1560), int16] */)
}

def @main(%var_10094: Tensor[(16, 7, 15), float64]) -> Tensor[(16, 7, 15), float64] {
  %1032 = cast(%var_10094, dtype="float64") /* ty=Tensor[(16, 7, 15), float64] */;
  sinh(%1032) /* ty=Tensor[(16, 7, 15), float64] */
}

def @func_4023(%var_4017: Tensor[(1, 13, 13), int16], %var_4018: Tensor[(15, 13, 13), int16]) -> (Tensor[(15, 13, 13), int16],) {
  %1033 = cast(%var_4017, dtype="int16") /* ty=Tensor[(1, 13, 13), int16] */;
  %1034 = cast(%var_4018, dtype="int16") /* ty=Tensor[(15, 13, 13), int16] */;
  %1035 = bitwise_xor(%1033, %1034) /* ty=Tensor[(15, 13, 13), int16] */;
  (%1035,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen388/build/output.py:2120: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen388/build/output.py", line 2125, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_sinh_kernel0(double* __restrict__ T_sinh, double* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1680) {
    T_sinh[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = sinh(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


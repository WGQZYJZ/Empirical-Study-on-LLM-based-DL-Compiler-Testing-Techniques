import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_95 = relay.var("var_95", dtype = "int8", shape = (14, 13, 5))#candidate|95|(14, 13, 5)|var|int8
var_96 = relay.var("var_96", dtype = "int8", shape = (14, 13, 5))#candidate|96|(14, 13, 5)|var|int8
bop_97 = relay.greater(var_95.astype('bool'), relay.reshape(var_96.astype('bool'), relay.shape_of(var_95))) # shape=(14, 13, 5)
uop_119 = relay.log2(var_96.astype('float32')) # shape=(14, 13, 5)
uop_129 = relay.asinh(uop_119.astype('float64')) # shape=(14, 13, 5)
bop_148 = relay.add(uop_129.astype('uint64'), relay.reshape(uop_119.astype('uint64'), relay.shape_of(uop_129))) # shape=(14, 13, 5)
output = relay.Tuple([bop_97,bop_148,])
output2 = relay.Tuple([bop_97,bop_148,])
func_156 = relay.Function([var_95,var_96,], output)
mod['func_156'] = func_156
mod = relay.transform.InferType()(mod)
var_157 = relay.var("var_157", dtype = "int8", shape = (14, 13, 5))#candidate|157|(14, 13, 5)|var|int8
var_158 = relay.var("var_158", dtype = "int8", shape = (14, 13, 5))#candidate|158|(14, 13, 5)|var|int8
output = func_156(var_157,var_158,)
func_159 = relay.Function([var_157,var_158,], output)
mutated_mod['func_159'] = func_159
mutated_mod = relay.transform.InferType()(mutated_mod)
const_214 = relay.constdtype = "float32")#candidate|214|(10, 16, 11)|const|float32
uop_215 = relay.sigmoid(const_214.astype('float32')) # shape=(10, 16, 11)
output = uop_215
output2 = uop_215
func_237 = relay.Function([], output)
mod['func_237'] = func_237
mod = relay.transform.InferType()(mod)
mutated_mod['func_237'] = func_237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mutated_mod.get_global_var('func_237')
call_238 = func_237_call()
output = call_238
func_239 = relay.Function([], output)
mutated_mod['func_239'] = func_239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_287 = relay.var("var_287", dtype = "int8", shape = (8, 5, 14))#candidate|287|(8, 5, 14)|var|int8
const_288 = relay.const([[[10,-5,-5,3,6,-9,5,10,1,4,9,5,-3,10],[5,-9,-1,1,3,-7,9,5,-5,7,-8,-3,4,-10],[-8,-2,2,-7,6,-8,-10,-9,10,3,7,-1,-1,-4],[4,-4,8,5,-7,-10,8,3,4,-7,4,-10,-9,7],[-9,5,-7,-6,-4,5,-1,6,7,-9,1,-7,-5,-9]],[[-2,-4,-9,2,7,3,9,5,-6,-1,-2,4,-6,2],[10,8,8,-10,-1,7,4,-3,9,-5,1,-8,8,-8],[-4,6,2,5,5,8,-10,8,-6,-7,9,2,9,2],[-3,-2,3,-3,3,6,5,-8,1,-9,4,-4,1,2],[-5,7,-9,8,-10,-6,9,5,-7,1,8,7,-7,7]],[[-6,-7,-7,10,7,7,-1,2,-6,3,9,-3,5,1],[10,9,-8,8,5,1,-8,-9,3,6,-10,5,7,10],[-10,2,-8,-8,1,2,-2,6,-1,-6,8,-6,-4,-2],[10,1,-1,-2,7,-5,-3,-2,10,-4,5,-5,-5,5],[-1,2,-7,1,-9,-10,2,5,-2,10,-7,3,8,6]],[[9,5,-8,-1,-4,-4,-5,9,10,3,-1,6,-9,9],[-6,-3,4,-5,6,7,8,3,6,3,6,-9,-10,4],[-5,7,7,8,-9,-4,-9,-7,4,10,-3,-9,-8,-5],[-5,-8,-3,-4,6,-10,7,3,8,-10,-1,-4,3,5],[-4,-2,1,-1,-6,3,-1,10,-10,1,-5,10,-3,-2]],[[10,10,10,-6,1,-7,4,-10,4,2,-2,-2,6,-3],[-10,7,-4,5,10,-7,1,-9,-4,2,10,-4,9,-9],[1,5,-1,-1,-3,1,10,-8,1,-5,-8,-5,-1,1],[8,-6,-4,-8,7,-9,10,6,5,-10,-1,1,2,-8],[-6,6,8,3,-4,4,2,4,3,-1,-5,-5,6,6]],[[6,2,4,6,-1,-4,9,8,3,-3,-5,-5,5,-7],[-7,-8,8,5,-9,5,-1,7,-1,3,-1,2,-3,4],[-8,9,-5,-10,-9,8,7,10,-4,-10,-3,3,-3,8],[4,6,-5,1,3,5,-8,2,6,-7,-8,-9,2,-5],[-7,-1,-4,-4,1,1,9,-8,10,-4,3,-9,8,3]],[[10,-3,8,-9,-2,-5,8,-8,3,6,5,10,-1,10],[6,7,9,4,-5,-4,-6,1,5,3,-5,-9,-8,10],[-9,7,4,-3,6,-2,8,10,-5,10,-2,7,-1,-10],[7,-6,-10,2,-9,-7,-2,-7,-7,6,10,1,10,-9],[-6,10,9,-2,3,5,8,-6,-10,-3,-2,8,-7,-3]],[[-9,-10,1,2,9,1,7,1,-7,-6,-2,6,9,5],[5,5,-10,2,-6,-5,8,7,3,9,-7,-9,-7,2],[-10,-4,-2,-2,-5,-8,-9,-7,9,10,-6,-2,-5,1],[-5,-8,9,-2,2,-7,-8,-9,6,-4,4,6,5,2],[-10,-2,7,2,3,-8,7,3,8,2,9,-10,-10,-2]]], dtype = "int8")#candidate|288|(8, 5, 14)|const|int8
bop_289 = relay.not_equal(var_287.astype('bool'), relay.reshape(const_288.astype('bool'), relay.shape_of(var_287))) # shape=(8, 5, 14)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_294 = func_237_call()
call_295 = func_237_call()
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_329 = func_237_call()
call_330 = func_237_call()
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_332 = func_237_call()
call_333 = func_237_call()
output = relay.Tuple([bop_289,call_294,call_329,call_332,])
output2 = relay.Tuple([bop_289,call_295,call_330,call_333,])
func_334 = relay.Function([var_287,], output)
mod['func_334'] = func_334
mod = relay.transform.InferType()(mod)
mutated_mod['func_334'] = func_334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_335 = relay.var("var_335", dtype = "int8", shape = (8, 5, 14))#candidate|335|(8, 5, 14)|var|int8
func_334_call = mutated_mod.get_global_var('func_334')
call_336 = func_334_call(var_335)
output = call_336
func_337 = relay.Function([var_335], output)
mutated_mod['func_337'] = func_337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_369 = func_237_call()
call_370 = func_237_call()
func_334_call = mod.get_global_var('func_334')
func_337_call = mutated_mod.get_global_var('func_337')
var_388 = relay.var("var_388", dtype = "int8", shape = (560,))#candidate|388|(560,)|var|int8
call_387 = relay.TupleGetItem(func_334_call(relay.reshape(var_388.astype('int8'), [8, 5, 14])), 3)
call_389 = relay.TupleGetItem(func_337_call(relay.reshape(var_388.astype('int8'), [8, 5, 14])), 3)
func_156_call = mod.get_global_var('func_156')
func_159_call = mutated_mod.get_global_var('func_159')
const_395 = relay.const([-9,4,9,-7,3,5,-3,2,5,5,-1,4,2,6,-6,-1,-8,-6,-2,3,-5,5,-5,7,-10,8,3,9,-1,-3,2,1,2,6,4,-7,-2,-6,1,7,-8,-3,6,-6,-7,-6,-2,8,8,-8,-5,-9,7,-2,-9,-10,-5,-7,6,-9,-2,-1,-6,10,3,4,3,3,-9,8,5,4,-2,-10,-4,-1,-6,1,-9,5,9,10,-3,1,9,9,-9,3,-3,10,-1,-4,-1,-10,7,4,5,7,-6,-9,10,-8,-10,-8,3,-2,9,3,2,10,-1,5,-6,-1,1,-9,7,-7,8,1,5,6,-9,4,6,-1,8,-10,-8,-9,2,-1,-5,7,-8,-5,-2,-7,-1,4,-6,-4,-3,-1,5,4,-7,-8,3,-6,-6,4,-3,10,-3,-3,1,1,10,-7,-3,-6,-3,-5,-10,7,-1,3,-1,9,-9,-3,8,6,-8,-6,-3,-1,7,-5,6,-2,-5,2,1,-10,-4,3,-8,1,-2,-7,1,5,4,4,4,-7,-2,6,10,4,-10,-5,5,-6,-5,6,-1,-4,3,-2,-4,7,-8,1,-9,-10,-5,-9,3,9,-6,-5,-8,-1,5,-9,4,8,8,-10,8,8,-8,-4,-10,-10,10,5,-2,-8,-4,9,4,2,9,-1,-3,-10,5,2,9,-4,-7,6,9,-8,2,3,-5,9,6,-2,-8,1,-8,-9,-7,5,-3,-3,6,7,7,5,-2,7,-6,-8,1,10,-4,-6,3,5,4,-10,9,10,5,1,2,7,5,4,7,-5,2,-4,-1,-3,-8,5,10,7,-3,-5,4,-4,-7,5,2,-7,-9,1,1,-7,7,-8,9,2,-2,8,-9,7,1,-2,-1,-9,-1,4,-6,-10,-5,10,2,6,1,1,6,-5,-9,-4,-7,3,-5,9,8,-4,8,6,10,-7,6,10,-6,-3,-4,-7,9,-1,7,-6,1,-7,-6,10,-5,-6,5,-6,-10,9,-5,-7,6,-9,-9,-9,4,1,9,5,-8,-6,6,-7,-9,2,-1,-10,-8,4,-3,10,-1,9,-2,-5,-5,5,-2,-10,7,7,-3,-8,6,-10,7,8,1,-9,2,-1,-6,10,9,1,2,-3,-4,5,3,3,-7,7,8,9,3,-9,-8,-6,-9,-2,-6,-5,8,-2,-9,-2,-6,2,-6,-6,-3,-7,-5,8,2,6,-7,-8,-3,5,-5,-8,-5,-7,-3,1,7,7,-2,8,4,-10,5,5,8,1,8,-6,-2,-5,5,1,5,6,2,1,-5,9,9,-7,-4,4,-8,5,3,-4,-8,-10,2,10,7,-4,-2,-2,4,2,10,2,-6,7,-8,6,6,9,-2,-4,2,-1,10,7,-5,-4,7,-10,-2,10,7,-6,-2,1,-5,2,4,4,-7,7,-2,-6,4,1,2,-6,9,-2,-8,-6,-9,-10,2,-4,-5,-2,2,7,3,-4,9,-5,-1,-9,9,1,4,10,7,6,5,-10,-5,2,3,2,-7,10,6,-8,5,-5,-3,6,9,2,9,8,9,1,-8,-3,1,-5,-3,4,-2,-10,1,5,-7,3,-2,-9,5,-2,4,-7,9,4,5,-3,-6,-2,-8,-9,7,-10,-3,10,2,10,-7,2,1,9,3,-2,2,8,-2,-4,8,-10,6,8,9,-3,9,2,3,-5,-3,7,-1,-5,1,6,7,10,-3,1,-8,-8,-2,-6,-2,-1,-8,-10,3,-3,-7,4,4,-9,-4,-9,-5,-1,7,-3,-8,4,3,4,1,2,8,-4,-10,9,3,8,7,6,7,-5,-4,-1,-4,2,-4,-5,-10,5,2,-8,4,-5,-5,6,-10,7,1,10,-2,-1,9,-9,5,-3,-1,-3,6,7,9,-5,6,5,-1,3,9,10,-9,1,6,-2,4,2,-1,1,-6,-1,10,10,-10,7,-8,-1,7,-3,-5,-9,-8,9,4,3,8,-10,7,2,-4,9,7,1,2,-8,-8,-4,-10,8,-4,-3,5,3,-7,1,5,5,8,5,-9,6,1,-4,4,-6,4,-1,5,1,8,-3,-10,2,-4,9,-3,1,-7,-7,-6,9,4,-7,1,-3,9,-1,-4,-8,-1,4,-4,-10,-9,-3,-1,4,-2,8,-10,4,7,-8,-10,3,-5,-7,-1,1,-3,-2,-9,-4,7,6,-3,7,-8,2,1,-9,-2,9,-3,-1,7,3,-2,-6,-8,-8,-5,-2,-10,-8,10,1,-4,-3,-1,3,2,1,-4,-2,-9,5,5,-6,-10,8,-2,1,-9,2,1,-5,3,6,3,2,-10,6,2,2,6,3,-1,5,9,10,-5,4,1,7,-7,7,-6,5,-5,-2,-7,1,9,9,-5,7,-4,-10,-10,8,-8,7,8,-3,-6,-5,10,-4,2,-5,10,7,-5,-8], dtype = "int8")#candidate|395|(910,)|const|int8
call_394 = relay.TupleGetItem(func_156_call(relay.reshape(const_395.astype('int8'), [14, 13, 5]), relay.reshape(const_395.astype('int8'), [14, 13, 5]), ), 0)
call_396 = relay.TupleGetItem(func_159_call(relay.reshape(const_395.astype('int8'), [14, 13, 5]), relay.reshape(const_395.astype('int8'), [14, 13, 5]), ), 0)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_404 = func_237_call()
call_405 = func_237_call()
output = relay.Tuple([call_369,call_387,var_388,call_394,const_395,call_404,])
output2 = relay.Tuple([call_370,call_389,var_388,call_396,const_395,call_405,])
func_407 = relay.Function([var_388,], output)
mod['func_407'] = func_407
mod = relay.transform.InferType()(mod)
mutated_mod['func_407'] = func_407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_408 = relay.var("var_408", dtype = "int8", shape = (560,))#candidate|408|(560,)|var|int8
func_407_call = mutated_mod.get_global_var('func_407')
call_409 = func_407_call(var_408)
output = call_409
func_410 = relay.Function([var_408], output)
mutated_mod['func_410'] = func_410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_412 = func_237_call()
call_413 = func_237_call()
func_334_call = mod.get_global_var('func_334')
func_337_call = mutated_mod.get_global_var('func_337')
var_418 = relay.var("var_418", dtype = "int8", shape = (280, 2))#candidate|418|(280, 2)|var|int8
call_417 = relay.TupleGetItem(func_334_call(relay.reshape(var_418.astype('int8'), [8, 5, 14])), 1)
call_419 = relay.TupleGetItem(func_337_call(relay.reshape(var_418.astype('int8'), [8, 5, 14])), 1)
func_334_call = mod.get_global_var('func_334')
func_337_call = mutated_mod.get_global_var('func_337')
call_438 = relay.TupleGetItem(func_334_call(relay.reshape(var_418.astype('int8'), [8, 5, 14])), 1)
call_439 = relay.TupleGetItem(func_337_call(relay.reshape(var_418.astype('int8'), [8, 5, 14])), 1)
func_156_call = mod.get_global_var('func_156')
func_159_call = mutated_mod.get_global_var('func_159')
const_459 = relay.const([10,5,-7,10,5,-10,8,7,3,-10,3,2,-4,6,-9,-1,-3,9,-3,-9,-1,-5,10,-3,-4,-8,8,-3,-6,10,-8,-4,-9,-2,-2,-1,7,3,7,-4,7,-8,-4,7,-9,-7,10,-1,-4,1,3,-10,5,-2,1,5,-8,5,3,-3,-9,-3,-2,7,-7,-4,10,1,-9,-10,-8,8,-8,-9,-5,5,-3,-4,-3,10,1,8,-8,-9,-3,7,1,-7,-10,-2,-9,10,5,6,9,8,8,3,7,4,8,9,-9,-2,3,6,1,1,-4,-6,2,2,9,5,7,4,-1,7,-9,10,3,3,4,1,-10,-10,10,4,9,-5,-1,4,-4,-3,-9,5,1,-7,-2,4,5,6,-7,-7,2,-3,-3,-4,-7,1,1,10,-4,8,5,-1,7,-10,-10,3,10,-2,4,-1,-2,-8,8,5,-7,9,-7,6,8,10,-2,-9,-10,5,-6,4,-9,-10,-2,-9,10,-3,-10,2,-5,-5,9,9,-4,3,3,7,4,6,-4,7,7,-2,-10,-5,1,2,-6,9,-7,10,-2,1,6,-1,4,-6,-9,8,-5,4,4,5,-9,8,7,-8,-6,-2,-8,-5,-3,3,-9,9,3,9,-1,7,-9,10,4,-2,8,-3,8,-9,8,1,5,1,-7,-7,-7,10,9,9,-9,2,-6,4,-2,5,4,-7,-9,-9,9,3,-8,1,5,9,-10,1,-5,-1,7,6,3,-10,-2,-7,5,-6,-6,-8,-6,5,9,3,1,2,-2,-9,4,7,10,-6,7,8,10,4,-5,3,5,8,1,-3,-10,8,-6,7,-1,1,-6,9,6,-1,2,-5,-9,-2,4,-3,-10,6,6,-1,8,-2,2,-8,7,-1,3,-8,10,-3,7,-9,-7,-4,10,-9,-1,3,-4,-4,-2,4,1,-8,-1,-5,6,-7,9,-7,7,9,7,-3,-3,-6,2,-10,1,5,-10,-10,6,-1,-9,6,-2,-5,-7,2,5,-6,-9,1,-4,-9,9,-1,9,2,10,-7,4,-3,-2,2,-6,-4,5,-2,2,-5,5,7,-10,3,10,-4,3,7,4,-1,-10,-3,2,5,-9,6,10,7,4,-10,9,1,3,7,9,-8,-5,-3,-8,-1,-3,-10,-2,-1,-6,-3,6,9,1,-9,-4,-7,-9,3,1,6,-3,-6,-5,3,9,8,-1,-7,1,-3,2,-3,2,-8,-4,-6,-3,3,-1,-9,2,8,-2,-6,-2,9,8,-4,-10,3,9,10,-4,-9,-9,5,-4,7,-9,-3,1,-6,-6,9,-5,1,-4,7,3,-4,4,6,-4,8,-5,6,-4,4,3,9,8,3,2,1,-7,10,6,-3,-8,-8,3,8,8,-1,-7,-8,-10,-6,-4,8,4,7,3,-4,3,5,-8,5,-6,5,-7,-6,-8,9,-1,-5,6,-7,-2,-3,3,-2,2,-4,-6,-4,6,1,-4,5,-1,10,-2,8,8,-8,-9,1,-8,2,8,6,-5,5,9,-7,-10,-8,4,4,-7,-4,-3,-10,3,-4,7,2,-10,5,9,-2,7,-1,5,-4,10,-3,-6,-3,-4,-10,10,4,9,9,-9,6,8,10,5,-10,-3,-7,5,-8,8,9,-9,5,-4,5,5,3,1,9,-7,-8,-3,9,-6,6,-4,3,1,1,-2,1,10,-3,7,-6,2,-7,10,2,5,-1,4,-2,1,10,-2,3,7,4,7,-2,-3,-3,-7,10,-4,10,-2,-2,-8,8,-5,3,-4,-10,6,-9,1,5,-8,9,-3,-1,3,-9,6,-2,-6,-5,-3,-3,-6,-1,6,-4,-8,-8,2,-9,-3,-6,6,1,5,4,10,-9,10,3,6,2,-8,7,2,-5,-4,3,8,-2,10,3,5,-6,5,-3,-7,-5,5,-7,7,1,2,9,-10,7,9,9,5,1,7,9,8,10,-7,2,8,5,-9,-4,-7,8,2,-2,-3,4,-6,5,-8,-9,2,9,5,4,8,3,-8,3,-8,-4,9,-2,-3,-9,2,4,-9,5,-6,-10,-4,2,-5,1,-2,-6,-5,6,-7,-6,4,2,2,-9,-6,-5,-5,-4,3,-4,10,-8,2,2,-10,10,-8,-9,-2,1,9,-8,-2,-3,-8,10,10,-5,-1,-2,3,6,6,4,-4,-6,10,7,6,4,8,-4,-1,1,-5,-4,-6,-2,6,10,10,2,10,1,-1,2,9,10,-6,-4,5,-3,-10,5,2,5,9,-3,9,5,-7,3,-4,7,-5,2,1,-5,10,-5,3,-4,9,3,1,2,-6,5,-10,-9,5,9,7,-7,1,-7,3,-9,1,4,10,10,-1,-6,-9,-7,8,-10,-9,-10,-10,5,10,-6,5,-3,-8,-3,-9,-1,5,3,-4,-8,2,3,7,-3], dtype = "int8")#candidate|459|(910,)|const|int8
call_458 = relay.TupleGetItem(func_156_call(relay.reshape(const_459.astype('int8'), [14, 13, 5]), relay.reshape(const_459.astype('int8'), [14, 13, 5]), ), 1)
call_460 = relay.TupleGetItem(func_159_call(relay.reshape(const_459.astype('int8'), [14, 13, 5]), relay.reshape(const_459.astype('int8'), [14, 13, 5]), ), 1)
output = relay.Tuple([call_412,call_417,var_418,call_438,call_458,const_459,])
output2 = relay.Tuple([call_413,call_419,var_418,call_439,call_460,const_459,])
func_462 = relay.Function([var_418,], output)
mod['func_462'] = func_462
mod = relay.transform.InferType()(mod)
mutated_mod['func_462'] = func_462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_463 = relay.var("var_463", dtype = "int8", shape = (280, 2))#candidate|463|(280, 2)|var|int8
func_462_call = mutated_mod.get_global_var('func_462')
call_464 = func_462_call(var_463)
output = call_464
func_465 = relay.Function([var_463], output)
mutated_mod['func_465'] = func_465
mutated_mod = relay.transform.InferType()(mutated_mod)
const_506 = relay.const([[[7.380763],[5.493197],[9.604920],[-0.872602],[-6.075840],[9.401645],[8.131787],[9.626562],[-0.406653],[9.207111]],[[-5.100400],[-4.421794],[7.513329],[6.601177],[-0.284989],[-8.241032],[-9.724108],[-4.628632],[9.780616],[3.318233]]], dtype = "float64")#candidate|506|(2, 10, 1)|const|float64
uop_507 = relay.log(const_506.astype('float64')) # shape=(2, 10, 1)
func_156_call = mod.get_global_var('func_156')
func_159_call = mutated_mod.get_global_var('func_159')
var_512 = relay.var("var_512", dtype = "int8", shape = (455, 2))#candidate|512|(455, 2)|var|int8
call_511 = relay.TupleGetItem(func_156_call(relay.reshape(var_512.astype('int8'), [14, 13, 5]), relay.reshape(var_512.astype('int8'), [14, 13, 5]), ), 0)
call_513 = relay.TupleGetItem(func_159_call(relay.reshape(var_512.astype('int8'), [14, 13, 5]), relay.reshape(var_512.astype('int8'), [14, 13, 5]), ), 0)
output = relay.Tuple([uop_507,call_511,var_512,])
output2 = relay.Tuple([uop_507,call_513,var_512,])
func_514 = relay.Function([var_512,], output)
mod['func_514'] = func_514
mod = relay.transform.InferType()(mod)
var_515 = relay.var("var_515", dtype = "int8", shape = (455, 2))#candidate|515|(455, 2)|var|int8
output = func_514(var_515)
func_516 = relay.Function([var_515], output)
mutated_mod['func_516'] = func_516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_523 = relay.var("var_523", dtype = "float64", shape = (8, 15, 15))#candidate|523|(8, 15, 15)|var|float64
uop_524 = relay.cosh(var_523.astype('float64')) # shape=(8, 15, 15)
var_528 = relay.var("var_528", dtype = "float64", shape = (8, 15, 15))#candidate|528|(8, 15, 15)|var|float64
bop_529 = relay.mod(uop_524.astype('float64'), relay.reshape(var_528.astype('float64'), relay.shape_of(uop_524))) # shape=(8, 15, 15)
var_534 = relay.var("var_534", dtype = "float64", shape = (8, 15, 15))#candidate|534|(8, 15, 15)|var|float64
bop_535 = relay.subtract(var_523.astype('float32'), relay.reshape(var_534.astype('float32'), relay.shape_of(var_523))) # shape=(8, 15, 15)
func_334_call = mod.get_global_var('func_334')
func_337_call = mutated_mod.get_global_var('func_337')
const_541 = relay.const([10,6,-6,10,-2,9,10,-2,5,8,9,-3,-7,-6,-10,3,-9,-1,-3,-6,-1,-1,-6,3,4,-1,7,-3,6,-1,8,-4,3,1,6,1,4,-8,6,4,-3,3,9,-4,-5,9,1,4,1,-1,5,-6,-3,-9,-6,-1,8,-8,-1,-1,-9,4,6,-3,-3,5,6,5,6,10,-7,-2,6,3,4,6,4,1,-5,-8,9,-6,-5,-4,-5,6,5,10,-9,9,-8,-7,4,-6,-2,-7,8,-8,4,-5,-6,4,8,-1,10,-10,-2,3,-5,-4,3,-2,7,-3,1,4,8,7,4,5,-7,-2,-2,-4,4,-7,-1,8,-6,3,-9,-3,4,3,7,10,4,2,7,-4,5,-9,-10,-8,-8,-4,-5,3,6,-7,-5,6,1,7,5,2,-5,-10,-10,1,-9,-6,-9,-6,-7,9,-4,-3,-4,-6,4,-1,-8,3,-7,-7,-9,-3,-2,-5,-1,-2,9,1,-8,2,-2,-2,-4,-2,1,-9,2,9,8,2,-6,6,4,1,-2,-5,-6,9,-5,-2,10,-7,1,6,-9,1,-5,-5,4,-10,-8,3,5,5,2,-6,-7,5,-10,9,9,7,7,-2,7,-7,8,-9,3,3,-9,8,-2,6,-3,-1,7,8,-1,4,4,-1,3,-5,5,-2,7,-2,6,-2,3,1,5,-3,-10,2,-10,8,6,2,3,6,7,-10,-6,-1,-8,-8,-2,9,9,7,8,-5,-9,6,2,-2,7,-1,6,1,-4,9,1,-9,-3,10,-2,-6,3,-2,3,5,8,5,5,2,-5,5,-10,6,1,-7,-4,-3,-6,-3,1,-10,-5,-4,1,10,-8,-3,1,4,-9,6,-5,-2,6,-1,-5,-7,-8,-1,-9,-4,-9,-7,-8,4,-1,3,-1,-8,-2,7,2,8,-9,6,3,4,10,-2,-2,8,-9,3,5,1,10,5,-4,-1,-3,10,10,-7,5,9,-10,-5,5,10,-7,7,1,-3,-6,-7,-3,6,10,2,-7,-7,7,5,-7,-3,-8,-6,-4,-3,3,-1,6,8,5,3,2,-6,-9,-10,-7,-3,-5,1,7,-10,-3,-5,-8,-7,6,4,10,-8,2,7,2,2,10,5,-9,-8,-3,3,9,-8,-2,2,2,-2,9,-6,3,6,-3,-1,-3,-7,3,2,4,6,2,-7,-9,1,-10,8,-4,7,3,-2,-10,-7,-2,6,8,-9,1,7,5,-9,-6,10,-9,-1,-6,1,3,8,8,9,-5,8,-6,-9,4,8,5,2,-5,-10,-6,-7,-10,4,7,4,4,10,-7,-3,-9,1,-10,-9,7,-6,-2,-4,7,10,3,-8,4,-9,8,-1,4,10,6,7,-1,-6,7,5,10,-10,7,-10,-7,-3,-2,4,6,-7,5,6,8,-9,4,9,-9,-4,6,-1,-4,9,-9,-9,-7,7,-2,-8,-5,-7,2,2,6,2,-2,6,7,4,-8,-1], dtype = "int8")#candidate|541|(560,)|const|int8
call_540 = relay.TupleGetItem(func_334_call(relay.reshape(const_541.astype('int8'), [8, 5, 14])), 2)
call_542 = relay.TupleGetItem(func_337_call(relay.reshape(const_541.astype('int8'), [8, 5, 14])), 2)
output = relay.Tuple([bop_529,bop_535,call_540,const_541,])
output2 = relay.Tuple([bop_529,bop_535,call_542,const_541,])
func_556 = relay.Function([var_523,var_528,var_534,], output)
mod['func_556'] = func_556
mod = relay.transform.InferType()(mod)
mutated_mod['func_556'] = func_556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_556_call = mutated_mod.get_global_var('func_556')
var_558 = relay.var("var_558", dtype = "float64", shape = (8, 15, 15))#candidate|558|(8, 15, 15)|var|float64
var_559 = relay.var("var_559", dtype = "float64", shape = (8, 15, 15))#candidate|559|(8, 15, 15)|var|float64
var_560 = relay.var("var_560", dtype = "float64", shape = (8, 15, 15))#candidate|560|(8, 15, 15)|var|float64
call_557 = func_556_call(var_558,var_559,var_560,)
output = call_557
func_561 = relay.Function([var_558,var_559,var_560,], output)
mutated_mod['func_561'] = func_561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_572 = func_237_call()
call_573 = func_237_call()
output = call_572
output2 = call_573
func_576 = relay.Function([], output)
mod['func_576'] = func_576
mod = relay.transform.InferType()(mod)
mutated_mod['func_576'] = func_576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_576_call = mutated_mod.get_global_var('func_576')
call_577 = func_576_call()
output = call_577
func_578 = relay.Function([], output)
mutated_mod['func_578'] = func_578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_590 = func_576_call()
call_591 = func_576_call()
func_556_call = mod.get_global_var('func_556')
func_561_call = mutated_mod.get_global_var('func_561')
const_605 = relay.const([0.004793,-4.381743,5.244821,6.470496,-0.038247,-4.115178,4.729296,1.324280,-4.455401,-8.675335,0.944900,5.775920,4.198443,5.455315,2.753972,3.324659,7.508462,7.990647,-0.560973,-5.354487,5.423781,6.204611,-1.036595,8.695481,-0.555692,2.617739,2.404570,-7.608183,-0.453274,8.977103,5.797263,-4.694861,-2.052311,6.989419,0.441770,-3.740238,0.707002,0.146446,-0.528124,-8.823601,-5.129957,7.280776,4.012830,-3.540651,9.273461,9.601348,-6.916996,-0.910981,7.185571,0.816459,0.340226,0.036700,-7.928287,-2.576656,0.303873,7.407071,6.361492,1.166893,2.428575,-3.209520,-1.592584,9.024285,-3.643529,7.909604,8.314278,-3.433585,-4.307080,6.091919,-5.748492,-5.541334,2.688965,1.810246,-2.912909,1.601009,-4.308766,-8.630648,3.667110,6.413521,3.174459,9.672517,6.778687,9.368283,4.550427,-8.726667,3.852572,2.369398,8.341987,7.324702,1.037856,0.441324,-0.561609,-0.468898,9.344565,6.436313,6.155221,5.925329,-1.112060,-3.312250,-3.861879,1.974538,9.692081,-7.010509,4.227487,-0.884252,-7.795496,-0.372235,-6.778261,-9.128681,-6.195006,-2.320166,-9.879408,6.483995,9.333059,-7.625286,-1.367654,1.668215,-0.733849,-0.139684,4.904441,-6.612441,-7.489441,-4.919771,-3.730804,-3.629628,9.944836,-0.113795,1.234565,-6.884029,4.862726,-9.677933,0.403480,-8.438394,9.897029,6.569913,7.473407,-2.901320,2.140528,-2.110905,2.545204,-2.052296,-6.221100,-7.629989,-4.829466,-6.392609,9.087027,-6.156960,-6.147034,-8.986637,1.536082,-9.243325,7.911641,6.562735,9.311632,-5.778886,-0.178653,1.273398,6.514561,-7.931854,9.857670,-4.697953,5.226004,3.318605,2.222061,5.053132,0.532051,4.711806,-5.861977,7.622996,2.650747,-5.684362,4.141688,-0.395879,2.976574,-6.164449,6.968745,5.007271,3.076167,-7.950786,-1.738466,-7.538205,7.743283,7.542160,-3.511472,6.937868,-0.040509,5.451292,-2.259268,9.355749,6.348548,-9.562423,-7.781160,1.705532,-4.116012,-3.305995,-7.571021,-5.867887,-8.451853,3.362445,1.302987,-2.976972,4.529214,9.551701,6.622013,3.301269,-6.639891,3.566389,-6.279575,0.300172,-5.268090,8.109814,-7.505605,-7.733432,0.392909,8.941620,8.221605,2.624210,2.826991,-5.731632,7.610350,8.911963,4.747604,-8.049408,-3.181331,-7.578366,9.752322,6.588219,9.679141,-4.097096,7.667228,8.248398,-9.622916,0.826794,6.675115,-5.727967,-0.810450,3.435816,9.666209,8.371739,1.094933,-8.263247,5.703745,-5.162696,-9.154679,-5.432455,-2.759068,-7.560861,-5.842107,-5.935827,1.649111,-0.287781,7.899980,0.574288,5.685602,-6.833031,-3.001391,5.779544,-5.907909,-5.570217,-4.530947,-1.825555,8.777152,7.903275,1.335667,0.809021,3.709896,-4.277031,2.032989,8.210292,-1.618527,2.790307,-1.511871,-4.593167,-3.149419,1.644054,1.878919,1.788752,-7.406647,-6.333419,6.942869,-2.714204,6.988250,8.583549,-5.966738,5.174214,-3.818465,1.007832,8.957795,2.725737,9.824929,2.191465,-7.917584,2.344810,7.602061,-1.412083,8.734862,1.555129,2.279930,-2.008428,1.862143,-8.624307,-8.035312,0.808815,-6.665189,-1.212463,9.213791,-7.657277,-7.759242,0.598361,-7.469962,-1.296739,-1.229386,-8.286183,-1.515554,-0.714162,7.793052,7.080575,-4.712999,9.587034,6.406631,-0.806783,0.266340,1.308195,-3.406735,-3.881200,-1.194322,2.700323,-8.840518,5.064183,-2.490015,6.296491,-0.660309,5.197151,9.552622,8.091611,-7.844866,3.170423,1.676169,-7.163127,6.989347,-7.966844,1.696836,6.309071,5.695816,1.711255,-7.747470,9.368659,9.536074,5.841208,-1.979720,-2.067089,6.305153,-0.243468,-1.697474,-1.010335,8.823201,2.955219,-3.261285,5.337996,6.919764,5.489737,6.705039,9.189780,-9.115046,9.378446,7.783638,0.932536,0.771592,5.777258,-3.593899,-8.221683,-8.845057,6.090639,-4.206221,0.048238,8.370512,4.819963,7.257470,9.457395,7.948424,-9.822955,-1.688575,2.806031,-8.224678,4.446235,7.658849,-3.541657,-2.226919,-1.708878,-4.169334,-0.237947,6.882367,-1.728992,-7.018046,-0.914366,-4.147299,5.287335,-8.379505,3.536830,8.571433,-2.532605,-2.003170,9.871443,-7.529229,8.489943,5.450456,-9.804910,4.262484,8.175111,-4.816835,6.483018,0.923141,-5.561064,-2.485058,-4.791007,-7.222938,-0.590162,5.510231,0.433788,5.769888,2.255043,8.277933,5.699518,-2.714199,-4.038356,-2.191788,-4.177159,-2.989395,-8.339086,-4.428990,6.723750,9.367672,7.519423,4.132584,-2.202867,5.692316,8.049319,9.463166,5.894314,7.741945,-7.147589,2.732808,1.458523,0.591264,-3.658864,-8.713973,2.780625,1.894233,3.031765,5.048713,-1.868427,1.140713,2.224787,-2.195911,-2.379648,3.880733,-6.025067,5.203508,-1.969000,4.489539,-7.472225,-2.956054,5.731308,-9.965124,-0.388439,-0.201736,-8.881301,-8.574122,-6.778278,-2.742485,9.448172,2.565730,1.281718,8.454456,-4.563818,-0.070229,3.708928,-5.705236,8.355028,9.566229,-9.003988,-4.394614,3.720494,5.662997,3.017375,-1.257727,9.007530,-5.520741,4.150112,-3.803657,-7.752076,-0.772785,-1.510032,-2.141374,-8.508622,0.124747,3.042066,3.216015,0.849602,-4.231380,8.241070,5.760033,4.267908,3.681960,0.259668,-6.038794,-4.005244,9.725819,3.481414,-9.769589,8.706891,-2.318296,6.616716,5.376089,-7.223385,-4.164289,6.003985,-0.066289,5.539423,6.191262,-0.360947,4.013158,-9.334413,9.283566,-2.869748,1.691343,6.281607,9.157265,-8.338405,7.354854,-3.797541,-5.512993,2.050887,-5.673544,-2.857739,-6.350745,3.006361,1.284212,-9.499122,7.953556,5.418069,2.629823,7.289423,9.213345,1.355896,-2.930043,-2.016308,6.323864,-0.074001,6.834491,4.188839,6.260539,1.168635,4.362309,3.356394,-9.724155,9.909683,6.433971,-9.110341,-0.079375,-9.922129,-3.794671,0.482337,-5.677059,3.260208,-9.409786,3.325728,-7.844062,7.124714,6.074512,-8.883534,0.783179,9.795028,-1.889840,0.367158,4.082405,-9.778694,4.352808,-9.102497,2.996562,8.466350,-9.649068,0.355596,6.522955,-1.313539,8.448961,-1.249137,1.923673,2.985417,-0.182048,-5.272841,-4.092280,1.595648,7.725111,-6.780344,0.368265,-0.518830,-8.746270,-9.841845,-3.194921,-1.242158,-6.144982,-7.021426,-7.584432,3.781119,3.795827,5.238561,-3.119123,2.449322,-6.259850,-9.092740,8.559822,3.175508,-5.829688,9.277434,0.677151,-6.126857,-6.500538,9.608795,6.747666,9.873967,-0.790114,-8.764219,5.608422,-7.277397,5.044119,-1.276041,-7.167548,0.578676,7.837597,4.941818,-7.145735,-7.710212,2.721372,-9.939060,1.540319,5.570412,-6.946836,-8.943249,1.383437,7.574962,-1.957540,5.524579,5.632798,0.498889,1.501587,5.977644,1.265398,-1.971910,8.180441,8.140626,3.296613,5.822877,-4.711816,9.365776,-4.694862,3.251364,-8.342428,6.027785,8.707242,8.132256,-5.888756,-2.937924,-4.796516,-5.116218,1.388427,-5.666669,-9.819882,-1.186283,-9.766399,-9.390721,-9.419458,8.112472,-0.522995,5.506963,3.455353,-9.594097,1.529016,2.133559,3.207252,-9.247691,3.116112,1.020103,-7.860336,3.368625,-4.717673,5.475166,4.955575,2.103993,-3.897536,2.070184,0.509291,4.596275,-8.949242,3.127328,-5.185232,5.153923,-4.359179,2.104994,-0.355172,7.261390,-3.044690,-1.698233,4.105586,7.148966,-6.349107,-1.461738,-2.245137,-6.301929,-9.310208,-6.148334,6.751756,1.445791,5.994759,-3.953613,4.482123,-7.389494,2.231962,4.501674,-5.576837,-3.764131,0.997027,1.914808,-0.450584,-9.189204,7.152600,9.281767,-0.684974,-1.557984,6.060663,-7.885719,6.535569,-1.056313,9.335732,9.348744,-8.367363,-7.322766,-9.307392,0.687659,4.142089,-3.298844,-8.362014,-9.741284,-7.790010,-9.030758,4.703978,-3.294689,8.353700,1.105234,-4.958306,3.928342,-5.332372,-2.462226,9.103205,3.281222,4.632423,2.970611,9.120809,5.305306,-8.017904,4.611662,-9.537400,-0.284134,-3.417215,-7.543656,0.589721,4.650566,1.836858,-1.823268,5.351964,6.173378,9.227339,0.755358,-2.643748,-0.290378,-5.003967,0.300061,9.995295,2.094381,8.638784,-6.205498,7.731252,0.494443,4.185339,2.924982,7.907463,-6.402342,0.122412,-2.413404,-4.378967,-9.794508,-7.479154,5.380203,-5.674133,-3.912112,-5.968568,-3.323617,-6.220244,-6.861716,8.392646,9.680755,-4.020560,-1.115681,3.006559,-1.642610,3.509798,-8.651194,-4.010604,-4.577849,-3.765717,-2.530328,1.409463,-3.100779,-3.188742,-6.260448,-8.530093,9.526596,4.903653,-9.259251,-1.426279,-8.982050,-2.049028,6.487261,-9.527275,1.384150,-1.437046,2.229052,-2.355824,-2.321229,-7.615418,-3.966286,-4.324285,1.711954,0.458771,-3.569300,-1.849625,-4.552549,3.672125,2.793619,6.096713,6.556525,1.447448,0.202761,-7.658243,-1.547649,-0.149787,-3.713954,-9.488693,-7.018451,7.527965,7.036404,2.795701,-4.428272,-5.746400,-7.949317,-4.933903,7.651096,-3.091656,6.823397,-9.950162,3.988283,9.194555,5.952310,-3.871528,2.047434,-9.590810,5.296854,-4.848011,4.941066,-3.864260,-7.984614,7.231462,-7.952332,4.400338,-5.323318,9.021465,-4.171317,6.512700,4.965295,-8.741238,-9.364924,4.474460,-4.818567,0.062315,-1.789153,-4.412331,4.628074,4.254895,8.604574,2.188520,-8.186720,-5.707005,3.283284,7.329332,8.635609,-3.962856,-1.637862,1.690417,6.676462,-2.392295,-7.636413,7.503295,-6.705546,7.361656,7.422770,-8.605194,-6.782009,-9.793307,-2.050285,-1.422338,0.427239,7.307736,-0.006756,4.167278,-9.503862,-3.922863,-8.928485,-1.086903,-5.338560,-9.684511,-0.780887,3.457684,0.086113,3.077345,9.835838,4.505601,-2.371517,0.928315,-1.463701,-1.160687,-7.246614,1.753460,-7.808507,-1.109110,-4.855185,-2.862586,2.567199,8.432602,-3.653046,-0.226538,-0.653917,-8.121473,0.936221,5.753687,-2.162163,-8.028424,-9.183144,9.312050,5.517983,3.722543,1.156357,-9.734754,-6.596767,1.636182,-6.930703,-2.770255,-8.339351,7.338476,-3.228563,3.385242,6.576514,-2.373660,8.616661,-4.168873,3.858677,-6.829632,-4.148400,5.220566,-7.097425,2.219913,-9.352862,3.210853,-5.306969,-2.176562,-1.185824,-1.767552,5.278053,8.751917,-1.495959,8.971948,-3.364654,-3.187503,8.426872,6.379046,9.089591,-9.394415,-1.958333,-6.575031,6.252295,-4.195331,-2.635665,2.997196,4.815519,-2.385580,-9.390957,8.302370,-8.156662,3.739875,7.598182,7.118639,1.264973,-2.328446,-6.216031,8.699294,-5.143393,7.260877,-0.954830,-3.140996,4.109130,6.676675,6.749016,-0.949054,3.186299,8.180718,-8.278343,6.738298,-3.718339,-9.626077,-6.578797,-5.185087,7.414904,0.393178,-1.207974,7.244486,-4.665738,-1.121727,5.094601,5.883959,-0.986695,4.280331,-8.501804,4.420653,-1.572293,2.165080,8.120180,0.993166,5.540041,-3.535413,3.091619,8.028197,-1.229374,9.158134,6.252119,-0.873381,9.584401,-6.482949,-5.848764,-2.899488,7.209952,9.187955,-8.174976,7.152396,1.612996,7.293886,3.084832,4.632832,-4.294255,6.752993,9.276017,-9.811768,2.139203,-2.631495,-2.100266,4.730751,-8.467207,-8.571961,4.231592,-1.951049,6.091669,4.852835,9.702896,-5.662461,0.669971,7.266769,-9.744960,4.200234,-2.006447,1.013624,5.482652,7.532775,-8.199888,-1.991422,2.826107,-3.982306,-9.640336,-3.502276,-9.153790,-5.053418,-6.467414,0.091700,4.246816,8.919610,-3.333640,-8.566236,1.261185,-2.858888,1.862875,4.143893,5.045807,1.136448,-9.250434,9.161489,-6.759761,-1.601386,8.789396,2.891848,3.527083,3.406881,-7.097158,6.949506,5.254845,5.267922,-2.458177,4.547358,-2.318100,0.752863,-5.821361,-2.866963,-2.567397,-8.892474,-5.310738,-6.058842,-5.814227,0.863592,1.084369,-7.832546,-2.116360,0.931804,-2.551346,1.120322,9.804801,8.871717,1.160513,5.127375,7.001280,-4.476032,6.785675,8.988114,-3.780724,-4.290720,0.864677,-5.202998,-5.723383,-0.268330,-3.494921,-7.257093,-8.744387,-9.831161,3.854925,-8.739736,9.318574,-9.620638,0.491611,-2.640438,-0.861592,-3.100072,7.281207,-3.381871,-7.894325,-2.441805,-8.805966,0.426724,2.075412,-8.185720,3.997720,5.519762,6.354369,0.055292,7.226764,-9.305054,2.896360,8.482979,5.790651,-9.771248,-3.393852,9.964562,5.889156,8.782924,-6.902179,4.683551,-1.534799,-0.223381,-7.653832,9.631647,3.514370,-6.145362,-0.391193,1.749502,5.510089,4.054377,-2.170834,-8.159357,4.243602,-3.056990,7.262654,8.760704,-9.589312,-1.294506,-5.046323,-2.863582,4.602956,-0.575577,-8.167500,-5.046001,3.580432,5.434023,-4.628649,-0.978603,-9.248207,7.569033,-8.110181,7.248109,-5.406145,-3.890682,2.848191,-6.091032,8.769201,-9.748295,-3.850045,2.612104,1.246274,5.679080,-8.640457,2.643372,1.014026,-8.569176,-6.277449,-9.626982,5.883879,6.170524,-5.023960,-6.251059,-8.106965,2.000495,6.001498,-4.917660,-3.777539,-9.901929,9.294454,1.024989,-2.361406,1.829617,2.246873,6.988696,-5.715733,-9.198976,-9.243522,-7.306783,9.658116,3.357922,-0.226750,2.319975,4.388651,5.479657,-8.653637,4.857194,-4.690748,8.877570,5.129491,1.340347,8.837357,-6.852784,-0.107551,-8.736803,-5.993241,-2.696952,4.060544,5.874408,1.457848,-9.861131,7.721976,-6.632434,-9.483121,-9.748878,-8.450267,4.038442,1.002493,7.450614,-9.658562,5.708585,3.165579,3.601934,-8.646176,4.169219,9.656669,2.358575,-4.842235,-7.720730,8.433713,-0.946419,-0.720267,7.993688,5.831843,6.433320,-0.174734,-8.315931,-0.496233,-4.501043,2.599421,-7.484903,0.183446,4.799671,3.042568,-8.035788,-2.892180,-4.951862,-4.394814,-7.736195,-8.643346,1.980793,6.587552,-0.744012,9.571886,-1.692934,4.769307,5.464943,-2.550753,-6.088117,0.290642,-7.512529,0.781584,-2.475928,-5.118420,6.057202,7.430707,6.268502,-0.959450,-3.432281,-1.574404,-1.785479,-4.438902,6.555883,5.937634,-7.678565,-1.111101,-2.858551,-2.620227,-7.610755,-4.893118,0.846772,-7.945259,-1.602225,5.281399,8.924059,3.728384,1.207095,8.394361,-0.765293,-9.344913,7.280760,1.261316,-7.441664,9.237288,-3.377393,-4.880284,7.178103,-0.433181,0.605470,-1.501981,2.767032,6.307251,7.910225,1.000892,1.942873,8.681605,7.167607,-6.322384,-9.117219,-9.708862,3.564313,-9.395568,8.862573,-8.144768,-2.559680,9.083968,-8.209713,-6.063196,-5.557194,8.126719,7.074648,-7.309316,2.322631,-3.152336,-6.512077,-6.492778,8.083867,-4.024404,1.509804,-0.923321,-0.507128,-0.241923,-6.401116,-5.500026,-9.292420,-5.755948,-0.875483,-8.482786,0.428015,6.417833,8.427694,-2.110544,6.014130,-4.439025,2.299798,-5.353519,-9.584498,9.670976,-9.091411,7.829081,2.651016,-6.437574,2.896386,-0.707486,-7.741242,-4.656902,4.016237,-5.341417,-1.779877,-5.999461,0.827879,5.540657,8.943906,-5.932555,-7.936931,-0.161775,6.067580,-8.416128,-7.909354,-5.134966,-1.094484,-8.224868,9.343575,-7.628123,2.675866,9.684385,-3.166821,8.391116,6.131731,6.169904,9.082204,-5.405248,-8.890711,7.379350,2.219024,3.885312,5.903969,5.907701,5.685303,-3.707092,-4.000482,5.006427,-6.667112,-0.884659,7.057866,1.726187,-4.886284,8.575050,-0.379044,3.396822,-6.612167,-3.662752,-1.470316,-8.773878,5.518926,4.766645,3.554247,-0.427766,7.983073,3.566276,-9.094254,6.768299,-8.874604,-4.504899,-2.085494,-6.857914,-3.895793,-4.110301,8.818545,-5.068811,0.641033,-4.706719,9.055917,-2.430196,-1.129699,3.345709,-2.782535,4.359095,3.907176,-8.487584,1.298346,6.282000,9.484945,-6.699737,-8.939022,2.636408,-5.891931,-4.802903,4.348451,-8.945418,0.851465,-0.416800,0.813661,-0.458681,2.196228,-9.129984,-9.661890,0.831028,3.609430,-3.272496,-5.003415,3.661034,2.837165,-8.121553,-5.538883,-4.699962,-8.187116,1.221582,-1.654495,1.052914,-1.031079,-3.181150,6.786733,-7.164275,-8.212619,-8.978143,9.239493,8.103947,-9.385509,3.844646,3.759280,-7.591638,-4.955643,7.976990,0.592203,2.496928,-3.504882,-0.274113,2.997816,-9.093950,2.877209,-7.220803,-8.213836,-4.278631,-3.737176,7.199523,6.755541,2.012094,4.163533,1.428944,0.542753,8.108718,-8.442639,5.609869,-4.818153,1.805958,7.362795,-2.752922,-9.075521,-6.318027,-0.586869,-0.137318,2.352553,-6.668815,-1.027374,2.945332,-7.252398,5.990277,9.490911,-2.036291,-3.328767,6.527489,2.811834,0.484267,-1.235256,-2.377893,7.000260,8.645114,9.566470,7.563295,1.998327,6.700821,6.955673,-5.543949,-9.099061,3.707978,6.031801,-8.396018,-7.786578,-5.209941,8.811040,-9.205807,1.084363,5.351568,3.089407,-0.812362,6.846994,-5.561467,-7.472802,5.156233,8.953876,5.704199,-0.321820,7.882527,2.666098,8.735366,0.626962,3.477230,7.836627,3.052056,1.066401,1.498848,5.811476,-8.644666,9.988490,-7.060467,-6.643144,2.685063,1.563369,5.124320,-1.991169,6.283474,-7.652498,-7.146371,7.133477,-1.452514,3.676648,-1.952851,7.000827,-5.549481,-3.880539,7.453742,-7.478852,6.592131,-3.922352,-3.877744,-9.577266,-5.298635,-1.796606,-1.572021,-4.717304,-3.362721,2.027036,-8.226078,5.322737,2.491662,-5.922820,-3.534184,1.765294,-9.164753,6.027297,-5.116172,0.743837,-1.615308,9.133088,6.809551,-3.407086,3.490447,-8.787105,-1.350183,-9.840017,-9.821872,3.676189,6.633906,-1.647563,-1.337062,-3.171680,2.875314,6.954780,0.094873,6.078897,-6.672263,-2.857619,1.559974,6.375761,0.086086,9.825204,-6.837224,-2.185487,4.425864,-2.213325,-5.167587,-2.919116,-1.992182,-2.185367,-3.960459,-5.474940,1.700450,-8.112975,-0.524844,-9.138748,3.859972,8.334707,-9.018252,0.625099,-3.834139,7.017263,-0.603711,3.153317,1.344349,-9.724506,7.816998,-1.210517,8.529853,8.363603,4.215060,6.424754,9.338711,-3.848480,3.615788,8.118768,7.071373,-2.103038,-5.583249,-6.908127,6.328091,1.057406,-9.105643,3.686282,-5.352163,0.361761,2.927298,-7.321438,6.275719,-4.712099,-3.765484,-6.965564,2.700561,3.122701,-3.948759,0.098323,-4.542965,-9.952691,6.117271,-1.516878,-3.098610,7.369042,3.953376,-7.280658,-0.866711,7.973131,-6.712292,2.675773,-2.572075,4.516413,-7.884704,3.256050,5.155817,0.783564,4.869965,-3.124182,4.756114,6.656355,2.631018,4.094129,7.148286,-7.008359,8.202449,2.956055,-1.858087,-1.019796,0.191955,4.437078,-2.489389,9.305139,8.177119,0.919387,2.360408,1.834919,1.285159,7.513136,9.984052,-9.289864,2.157956,-1.238962,6.752043,-8.973218,-5.047010,6.230689,8.691387,4.811639,2.696144,7.491423,9.585688,8.221527,-3.522885,8.133314,4.515929,-5.042658,6.790288,-5.359369,2.129123,-5.702138,5.412460,-3.065773,-8.221276,9.104016,8.128332,1.634959,2.460476,3.068906,8.686277], dtype = "float64")#candidate|605|(1800,)|const|float64
call_604 = relay.TupleGetItem(func_556_call(relay.reshape(const_605.astype('float64'), [8, 15, 15]), relay.reshape(const_605.astype('float64'), [8, 15, 15]), relay.reshape(const_605.astype('float64'), [8, 15, 15]), ), 1)
call_606 = relay.TupleGetItem(func_561_call(relay.reshape(const_605.astype('float64'), [8, 15, 15]), relay.reshape(const_605.astype('float64'), [8, 15, 15]), relay.reshape(const_605.astype('float64'), [8, 15, 15]), ), 1)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_613 = func_237_call()
call_614 = func_237_call()
uop_620 = relay.atan(call_604.astype('float64')) # shape=(8, 15, 15)
uop_622 = relay.atan(call_606.astype('float64')) # shape=(8, 15, 15)
func_334_call = mod.get_global_var('func_334')
func_337_call = mutated_mod.get_global_var('func_337')
var_625 = relay.var("var_625", dtype = "int8", shape = (560,))#candidate|625|(560,)|var|int8
call_624 = relay.TupleGetItem(func_334_call(relay.reshape(var_625.astype('int8'), [8, 5, 14])), 0)
call_626 = relay.TupleGetItem(func_337_call(relay.reshape(var_625.astype('int8'), [8, 5, 14])), 0)
output = relay.Tuple([call_590,const_605,call_613,uop_620,call_624,var_625,])
output2 = relay.Tuple([call_591,const_605,call_614,uop_622,call_626,var_625,])
func_629 = relay.Function([var_625,], output)
mod['func_629'] = func_629
mod = relay.transform.InferType()(mod)
mutated_mod['func_629'] = func_629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_630 = relay.var("var_630", dtype = "int8", shape = (560,))#candidate|630|(560,)|var|int8
func_629_call = mutated_mod.get_global_var('func_629')
call_631 = func_629_call(var_630)
output = call_631
func_632 = relay.Function([var_630], output)
mutated_mod['func_632'] = func_632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_638 = relay.var("var_638", dtype = "float64", shape = (10, 4, 5))#candidate|638|(10, 4, 5)|var|float64
uop_639 = relay.sqrt(var_638.astype('float64')) # shape=(10, 4, 5)
output = relay.Tuple([uop_639,])
output2 = relay.Tuple([uop_639,])
func_644 = relay.Function([var_638,], output)
mod['func_644'] = func_644
mod = relay.transform.InferType()(mod)
var_645 = relay.var("var_645", dtype = "float64", shape = (10, 4, 5))#candidate|645|(10, 4, 5)|var|float64
output = func_644(var_645)
func_646 = relay.Function([var_645], output)
mutated_mod['func_646'] = func_646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_669 = func_237_call()
call_670 = func_237_call()
var_680 = relay.var("var_680", dtype = "float32", shape = (10, 16, 11))#candidate|680|(10, 16, 11)|var|float32
bop_681 = relay.minimum(call_669.astype('int8'), relay.reshape(var_680.astype('int8'), relay.shape_of(call_669))) # shape=(10, 16, 11)
bop_684 = relay.minimum(call_670.astype('int8'), relay.reshape(var_680.astype('int8'), relay.shape_of(call_670))) # shape=(10, 16, 11)
uop_717 = relay.cos(bop_681.astype('float64')) # shape=(10, 16, 11)
uop_719 = relay.cos(bop_684.astype('float64')) # shape=(10, 16, 11)
uop_720 = relay.log2(uop_717.astype('float64')) # shape=(10, 16, 11)
uop_722 = relay.log2(uop_719.astype('float64')) # shape=(10, 16, 11)
output = relay.Tuple([uop_720,])
output2 = relay.Tuple([uop_722,])
func_730 = relay.Function([var_680,], output)
mod['func_730'] = func_730
mod = relay.transform.InferType()(mod)
var_731 = relay.var("var_731", dtype = "float32", shape = (10, 16, 11))#candidate|731|(10, 16, 11)|var|float32
output = func_730(var_731)
func_732 = relay.Function([var_731], output)
mutated_mod['func_732'] = func_732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_796 = func_576_call()
call_797 = func_576_call()
output = call_796
output2 = call_797
func_800 = relay.Function([], output)
mod['func_800'] = func_800
mod = relay.transform.InferType()(mod)
mutated_mod['func_800'] = func_800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_800_call = mutated_mod.get_global_var('func_800')
call_801 = func_800_call()
output = call_801
func_802 = relay.Function([], output)
mutated_mod['func_802'] = func_802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_832 = func_800_call()
call_833 = func_800_call()
output = relay.Tuple([call_832,])
output2 = relay.Tuple([call_833,])
func_854 = relay.Function([], output)
mod['func_854'] = func_854
mod = relay.transform.InferType()(mod)
output = func_854()
func_855 = relay.Function([], output)
mutated_mod['func_855'] = func_855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_932 = relay.TupleGetItem(func_854_call(), 0)
call_933 = relay.TupleGetItem(func_855_call(), 0)
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_959 = func_576_call()
call_960 = func_576_call()
func_556_call = mod.get_global_var('func_556')
func_561_call = mutated_mod.get_global_var('func_561')
const_970 = relay.const([-6.228164,-8.214812,-7.664074,0.543690,-5.124738,-7.656287,-6.949670,-3.403688,-3.478115,3.799616,-5.145184,-6.650215,-7.720984,-8.002326,0.818391,-1.861778,-8.241651,4.444714,-7.942047,2.942584,9.557785,7.068381,-6.518243,-1.062699,-7.465330,-6.838248,4.009958,-9.039374,-4.286763,0.428018,0.773007,9.141658,7.700746,-5.042302,8.508809,-7.477835,-1.864834,-8.540619,8.060915,6.138607,-5.088752,-2.978250,1.175831,6.989987,6.361323,3.437711,-4.098158,9.504563,-3.680853,-0.679273,2.193536,-4.730611,-3.601715,-1.462066,5.395540,-1.536586,1.169624,7.688542,3.433836,-9.967637,8.168935,2.347444,-9.176478,3.283795,8.765546,2.175510,-0.602299,-2.353504,-6.730631,2.846669,-4.747796,-6.855157,-3.959153,-8.808146,-2.408061,7.423592,0.292502,-3.275695,2.456609,-5.821910,9.051014,6.863651,2.538034,-1.645251,-9.394233,2.604007,7.785133,-8.721216,3.696184,-8.860661,-1.818167,3.673345,-4.695166,5.024102,-7.605933,-9.822650,9.605099,7.932316,6.765273,4.772334,2.601065,0.619612,-2.380817,8.496997,-4.839395,4.359905,5.088403,-6.354690,-9.149459,8.058613,9.893520,-2.837041,2.191062,4.946273,-2.963242,-8.068108,0.135315,-7.238538,5.050282,4.395211,8.521797,-8.308549,-2.778231,7.763931,4.453144,7.707916,-3.228597,7.198584,9.499498,3.997203,7.369004,-4.208614,6.008267,-9.242637,-8.815459,-8.368269,4.302166,-2.263424,-0.258872,-9.731464,-8.139788,-0.824964,-8.016058,-0.744225,7.587231,0.091409,1.472695,7.085301,-3.045947,5.542641,-8.238175,9.383668,2.768880,2.367967,1.852053,6.443369,4.958462,-2.853454,8.821992,4.800835,-4.446670,-4.983316,-3.415999,-4.112881,8.674714,8.106182,-6.764431,5.931554,-2.460288,6.423456,2.975485,1.329484,-7.635689,-5.933662,-9.616644,-9.409488,-2.756051,-7.498835,3.505798,6.613310,7.784528,-1.570094,5.701665,7.607677,-1.542766,7.560748,6.863038,-7.732571,3.835533,7.508023,-3.038791,-0.494332,-7.774131,-7.737804,-5.285333,7.670022,-0.032300,3.097407,3.162125,-5.535623,0.991608,2.181282,-8.797738,-0.324353,-2.520005,-2.268751,-0.852439,1.914814,6.084652,-8.365657,-6.782169,9.454504,9.495409,-5.551298,9.780769,-0.158517,7.412129,1.486580,2.350223,9.028326,-8.914657,-3.975002,-8.543581,8.715051,5.997467,8.505406,3.133264,0.313510,2.954659,-4.059436,-0.283098,3.360475,-2.973843,4.854149,9.614188,-5.407545,-4.052110,-5.349226,-3.428112,4.399583,2.066732,7.364320,3.980454,2.400705,2.423738,-6.918423,-2.972483,7.215117,-6.268656,-8.346021,7.892951,0.517942,3.596777,-0.757736,-0.218782,-4.551586,5.807730,-1.721967,-1.118793,3.962172,2.164782,0.086822,-1.341308,0.383240,1.004378,-3.086730,-0.163964,8.762676,4.532437,7.113954,7.942350,6.500566,-5.701654,9.381455,9.114315,-7.169550,-9.104123,-7.317331,-5.318680,-0.290310,7.574336,-3.926876,-8.991258,4.569564,5.712818,0.423452,-1.336888,2.064321,9.916452,5.380533,-5.667888,5.554272,5.472215,2.027577,5.667121,-2.893056,-5.990801,-2.380057,-0.027226,-3.414801,8.759977,-4.112294,-8.410288,-4.164926,-5.576510,-8.469609,8.466375,-4.820743,4.788126,-0.271727,9.418041,3.741121,7.848523,-0.115562,2.372011,8.971059,0.714957,0.659651,-6.530251,0.770990,7.648790,1.823915,0.633269,-5.367185,3.299770,-1.090119,6.383366,-6.453597,3.182184,-5.519190,8.978120,8.609827,1.179786,-8.625467,-5.841946,-3.559690,2.789025,-7.744841,9.922081,1.789964,5.034226,5.330086,0.054045,2.431495,6.802671,6.801446,-2.355037,6.853131,9.149236,5.097421,9.613083,-5.768766,8.405995,9.313709,1.414381,6.559855,-4.354200,6.115156,-5.643168,0.499219,-0.941914,-9.142490,8.451929,-5.778610,6.027950,5.476351,0.937439,5.182446,-3.794486,-4.524003,8.806625,3.719275,-9.406404,0.118234,8.692663,-7.318727,6.102618,-0.153159,-8.310297,-4.836357,-8.257435,-3.415160,9.080494,-1.110781,9.287048,8.000975,-6.305678,-8.846270,9.539233,1.594633,-9.104889,-7.814760,-6.381631,9.465723,9.608792,-3.855227,7.886398,1.730332,-3.642241,-2.104460,-5.634999,-3.658094,-6.021265,-1.130806,-8.314791,1.496861,8.399197,4.758147,-6.087062,9.067391,-4.667256,-8.394030,-0.930452,-0.523920,4.044189,-8.083845,-1.116239,4.374556,-4.469475,-2.183359,0.884007,1.228340,3.679113,3.843249,8.775935,3.441313,-0.030960,9.977661,0.231885,-4.847701,5.056972,1.837340,2.589790,-3.740472,-3.543102,1.450157,-2.463672,-0.197530,1.959646,-7.438523,-9.682500,-6.296462,5.575000,-0.938392,0.360185,1.897147,0.861317,-1.742097,7.526603,-5.251664,4.961124,-7.235870,1.244113,8.147247,-8.792797,4.196145,2.250438,5.268545,-2.160829,9.517357,-5.056199,-8.018684,7.392762,5.059099,8.519288,-7.351531,2.255405,7.237274,-4.697082,1.454095,-1.574407,4.171057,-1.583032,-8.300597,-1.143879,-3.945417,-9.380847,8.928700,6.871600,2.791924,-1.214773,3.757775,-9.759251,-2.395912,4.428961,9.359384,7.564567,1.365850,8.371862,-0.416390,0.176253,4.871843,5.949832,-3.706859,2.281929,5.627687,4.549482,3.662893,3.585165,-3.962682,3.914699,-7.669463,3.592446,-2.599908,2.451048,-1.424148,2.900697,4.098325,-9.497604,2.893227,5.584465,-0.466589,8.687795,-1.962468,2.429133,5.603067,-8.754772,2.278355,5.177770,-4.061478,-4.618195,7.667699,-7.621001,-2.236278,-1.263456,-0.014439,8.059337,6.181609,-5.364885,0.046259,-9.613509,-6.118591,4.899213,-4.532299,8.777016,8.763330,-0.915449,7.005477,1.683032,5.898075,4.931649,9.503531,-8.536533,9.140764,-7.488464,1.853343,7.097431,7.148697,8.726530,6.004992,4.702257,3.956874,-1.152618,-9.984212,-7.740808,2.437473,-2.972534,-0.608093,7.680132,5.176063,9.275180,5.923018,3.015849,6.659523,-1.204682,1.787184,2.909269,5.849763,-6.224875,-3.045396,-0.404323,-2.731211,-2.750084,1.774176,3.865734,-3.331067,7.133588,0.230547,-3.179879,-2.069526,-2.189610,-0.652492,-5.361090,4.547816,-9.415523,5.992468,4.933192,1.394425,6.370839,-3.932712,5.675155,1.301450,-1.826553,9.636760,5.407599,0.048108,-7.652724,0.784483,-4.930323,1.150597,-2.494057,2.000195,-4.077237,-8.377143,7.192231,-5.693682,2.971105,-1.245146,0.597294,-1.969002,0.999072,-5.107683,-8.203569,-1.740031,-9.895073,7.478081,-7.333077,-3.374880,7.642782,-2.922258,1.015440,4.700733,-1.675638,-5.428110,-6.843404,-9.838982,5.033947,6.140480,0.878837,-8.106407,0.730440,-2.749114,-5.343284,-8.997761,5.076697,-3.190021,-2.594818,1.214333,0.695138,-6.099624,2.480786,8.186894,7.466515,-7.778864,-3.432502,-4.625333,-0.544780,-6.267293,8.660510,-2.098304,1.397567,-5.267169,-4.966749,1.335322,9.345232,5.296744,-3.601050,4.658943,3.765196,-3.383288,-1.149351,7.655524,-2.331965,7.375668,1.678390,-1.547564,1.188530,-0.275241,9.514814,8.191086,7.452782,9.687153,-0.317086,4.099503,-9.018960,9.493845,-2.942847,8.086686,-9.002821,-0.424643,-5.135999,0.450959,8.256999,5.507125,3.538086,-3.502136,-6.853456,-5.454085,-4.591569,-9.662530,-2.512403,-9.277422,1.294034,7.121890,-3.398953,7.319925,-3.511371,-0.157180,-1.402901,-8.921805,8.778872,-2.850391,-9.577302,-3.264324,-6.203740,5.528087,-4.271516,8.255369,4.065172,-9.232455,-5.418564,-4.978809,-8.230408,0.195503,0.438274,-4.021174,-7.621618,-0.753114,3.095256,1.119304,5.882138,-0.172953,-4.993634,8.987378,-7.164717,-7.531674,3.472184,-0.159841,1.758277,-8.249361,8.936522,6.837642,2.168516,8.224520,-4.499745,-0.393673,7.878311,-3.658530,-7.394110,-6.076970,1.028698,-5.418772,9.284121,-1.517444,-0.357903,7.200978,4.384192,1.214049,-0.888835,2.524324,2.123908,1.177756,5.499782,8.477218,9.497366,-8.715135,-8.660606,-3.220540,5.111742,-5.647677,7.796305,-0.387196,6.761639,-8.404071,-4.034101,-5.024494,8.651851,-6.961990,0.258661,0.754798,0.645775,7.137435,-3.085550,-6.694859,-5.937624,1.529444,-2.036988,-2.043427,8.965250,-8.596174,3.322771,7.281452,-6.432401,7.633573,2.832938,-5.988685,-4.398729,-0.382960,3.101782,4.070898,-4.661367,-1.465765,-0.462921,-8.166760,1.716059,6.644205,1.402890,3.593629,-6.068223,-6.679071,1.547970,9.571340,-5.911421,-6.065789,-8.560548,-6.514708,-1.063491,6.000625,4.247301,-6.570412,-4.645801,9.998286,2.693040,0.214234,1.963340,1.742809,3.462049,1.845177,8.892075,3.879875,6.294536,-8.789304,-2.448326,-3.352594,4.501066,-2.342495,-0.061040,1.913367,1.995794,5.255480,-6.474655,8.086233,3.467752,-3.871150,6.232263,-4.850804,1.280731,-5.831752,7.432575,2.031774,-5.689239,-7.354013,-5.713099,-8.081421,6.680514,-7.070220,-7.172859,9.447697,-4.328266,-4.161228,9.470517,-3.091484,8.794267,8.304886,8.397569,1.476793,-3.149944,-0.384504,-5.932711,-0.905593,4.078272,4.112559,9.828375,3.739019,-6.528969,6.543886,7.774751,-1.898884,-8.909682,2.214934,5.715151,4.027795,-4.447684,-2.806277,-6.321564,-6.166639,1.411168,-1.532726,-3.899610,9.859935,6.815863,3.391381,-1.274489,-6.897732,8.660523,9.211283,-4.151672,-3.063866,-5.919658,5.360600,-6.689219,-5.923223,-3.058493,-6.008690,9.912689,1.033728,-9.262385,1.020862,1.368655,0.586916,6.630169,5.550861,-4.393576,-7.089057,-0.212572,7.730186,-7.824713,-7.331153,-5.100992,6.097520,-0.853566,2.891049,1.106399,-9.321881,-9.320225,4.527708,-7.115263,1.212845,8.417235,8.203399,-9.522423,-2.834086,1.463805,5.110300,0.520941,8.153901,5.400681,-6.608155,5.741220,2.531115,-6.738845,4.186447,4.189684,2.393903,-3.008355,-0.364928,-0.487039,9.728456,-2.314660,4.981272,-8.986241,3.164068,6.701028,-0.802515,-8.637057,-6.178938,2.436606,9.741017,1.558754,0.379599,-3.928887,-3.793344,-8.546288,-6.890705,-5.628277,-4.034500,-1.202667,-4.405175,5.940753,-6.854676,5.063797,-6.451880,-0.038370,8.832650,3.288051,0.032589,7.015117,-4.338568,-7.047719,-2.969436,-7.264641,9.767925,-7.528435,8.548140,-5.073092,-8.689030,-4.283578,-7.008225,-7.971487,-8.712726,-3.123941,3.186662,5.854860,1.783364,-8.325159,-1.197536,-8.169283,7.991856,-2.317939,-2.863001,-8.115162,-9.912319,-7.290186,0.135800,-1.609077,-8.751508,-7.128806,-2.131562,6.202632,5.856687,9.748729,-7.135018,7.742331,1.254218,-3.702219,-7.985324,-1.188409,-4.437420,-8.212050,4.933163,9.096129,9.775322,-4.126422,-6.646648,-7.011451,8.843856,3.654746,5.690315,-9.383871,-4.311342,0.839684,0.019842,0.063968,-7.415116,-8.753863,4.429656,7.104462,4.859331,-0.466791,8.837019,4.044159,6.212536,-1.048478,1.835000,9.774577,-9.592172,-1.666253,-0.222555,7.374921,9.531924,-4.474174,9.445970,-5.593521,3.453449,-4.565808,4.518871,-1.305822,3.256913,8.030516,6.663195,-5.998272,4.103282,2.491983,0.949446,-6.980874,-8.050806,6.069766,-1.036618,-1.039786,-4.269665,-3.741203,-3.354626,-1.439307,-5.424661,-2.779351,-8.787411,5.026219,-1.169270,7.141168,0.996401,-7.399804,3.757668,0.268879,7.151845,5.638530,8.516203,3.438474,-2.578361,9.818079,-4.783448,-0.884428,-9.615266,-2.906124,2.701015,-8.339464,-3.414631,-6.635498,-8.658427,0.382117,-9.518875,-9.187729,5.738502,5.142599,3.334137,-9.530212,0.246750,6.599921,-8.366234,-2.507378,4.855177,-2.821035,6.943244,0.666909,-2.084789,-7.519511,-2.362076,-7.812987,-4.740781,2.515417,-5.078661,5.043907,4.643018,-6.358278,9.786334,8.376784,8.762818,-2.150540,-0.557992,4.427691,-4.969109,9.863032,-8.994849,-9.618803,-1.487972,-2.467317,9.711407,-3.059520,-0.097780,-6.772205,6.211810,1.230643,7.354279,6.304582,7.185484,3.877257,-8.403369,-5.672224,-8.836122,-0.913503,3.970025,-4.627427,-1.080862,7.652338,6.841686,-4.744855,3.326115,1.551626,3.665536,-2.336628,2.664333,5.902193,1.180284,-1.037269,-1.320009,-1.857594,-7.661007,8.725456,9.962513,8.442058,-0.857015,6.185666,4.972050,5.262140,2.263102,-1.335924,9.570585,0.393562,2.408725,-0.843042,-5.955896,1.523593,1.235067,8.917050,9.918562,9.925418,8.925520,4.045811,-0.713754,8.005621,0.941095,-0.301260,4.883610,4.972517,-1.129757,8.231176,-7.198227,7.571045,4.315628,-8.746804,2.774854,-0.894592,-2.384492,-2.276311,-2.450047,-0.640853,8.149788,-7.584079,-6.629890,4.172113,-4.340694,1.855261,-2.818774,-7.954567,-9.421696,-1.676606,3.915775,-7.771619,8.130537,-3.982219,-3.667919,7.508155,6.635172,7.481620,8.044015,-3.792058,1.767672,-7.905914,-0.873078,0.967563,0.505346,4.309175,-5.101446,-8.631279,-4.984849,-0.493655,7.625866,-4.265963,4.071440,9.110288,-2.883756,-1.298804,8.918472,9.672599,-0.863755,-4.838221,3.682282,-6.203689,8.075560,2.695736,9.499349,3.233438,4.939146,5.472866,8.964397,6.918119,3.304962,4.820583,-5.759061,-0.390174,1.558159,-1.545562,-3.444907,-6.529220,2.702268,3.535991,0.005806,4.783412,-2.651068,-6.216910,1.171348,-2.341766,9.154828,-8.639331,-1.571701,-7.858463,9.971054,-5.455612,7.786040,-6.972128,-0.240797,0.514960,-4.508284,-6.931418,-6.516166,-4.088567,-3.442371,-9.752360,-6.173312,9.612105,1.792338,-8.704565,-7.770198,6.775796,8.401873,-9.228347,2.009431,-0.027422,7.268073,1.813106,9.755057,9.869567,-1.614843,2.758240,-8.647164,4.940116,8.412059,6.242326,8.981534,8.158180,-5.239477,-0.128015,-0.906215,8.699977,-9.254646,5.318634,-0.871740,6.759866,-1.709777,1.521060,-1.013874,-9.208376,-1.226010,1.260724,-9.022050,-5.439061,8.205419,5.698170,6.186354,0.648063,8.793372,0.009064,2.151177,-6.954808,-5.073799,1.058543,-3.094147,-4.711261,8.314136,-1.552711,-7.632079,-5.533792,-1.899692,6.609757,-6.758488,7.579826,3.190231,5.437682,7.683445,-7.914551,7.837197,-0.221401,-2.989672,-3.774159,9.698350,7.061377,6.731645,6.656000,2.955235,-2.524888,1.916127,1.586424,-3.075304,5.333462,-9.559160,9.878112,9.984313,-1.836658,-2.975610,7.727426,7.342895,-9.856513,-5.487489,-9.433846,-0.148507,9.885600,-3.399459,8.995972,1.314965,0.269646,-9.553749,7.059879,-4.105261,0.565568,-4.765935,-2.540483,-7.411423,5.547234,-4.695690,-7.670124,-0.870252,-0.377063,4.791733,6.536751,6.923711,-2.078740,-6.935011,9.596069,8.586559,2.238551,-4.183716,-3.856339,-4.758087,0.897434,8.823165,-4.195408,-0.799934,8.274453,-8.774431,-3.447245,0.266599,2.387676,3.005769,-5.961114,-0.781501,-4.507850,-3.617562,3.196731,-5.092961,7.042531,-5.255493,0.245946,5.035617,-7.609236,-7.342347,7.326821,-3.136058,9.546515,9.103610,-7.625162,6.682746,-0.885457,2.267969,9.958885,0.086620,-3.917470,-1.988261,-8.660626,-1.539315,1.189778,0.054471,-0.207920,3.910617,0.522573,4.454106,-5.005408,6.561697,-8.923637,-0.204765,-6.330840,4.015009,-8.749425,9.495191,2.774636,8.309640,-0.429978,8.609628,-6.947765,-5.983454,6.127367,-2.188977,-9.569792,0.264608,-1.761650,-0.144537,3.054182,1.033236,3.213847,-6.409829,-1.222647,9.717783,-0.217156,9.685764,-3.278561,5.292775,-5.417188,7.641824,8.120450,1.586327,5.533942,-8.175914,4.906053,-5.413374,-7.173382,9.462473,-6.536978,9.803858,2.365244,-8.294040,-7.537051,-7.398412,6.822151,-7.323841,-7.356625,-9.992133,2.773981,-9.732797,0.768110,-6.096389,5.480286,-8.102566,-4.636615,-1.710048,7.743673,9.691152,-9.260561,-0.062875,-6.803421,-6.748731,-5.849434,-6.327711,-4.702203,7.873838,8.609426,6.176217,7.692883,-6.436047,-9.584850,-5.782070,5.998581,2.123085,2.831655,5.470253,-7.570228,-5.102066,4.019086,0.287584,5.982318,9.006501,-9.815981,8.229394,-3.299895,8.125471,-7.710523,-7.163040,-5.419515,-5.198698,5.167135,1.560381,8.815321,2.282514,-4.277696,-7.410304,9.041988,-9.857914,0.872436,3.168934,3.170499,-6.798817,-2.091379,-8.339459,-9.013391,-9.107469,-2.760947,-8.386346,5.248149,-9.827693,-1.449841,9.460852,-0.102665,8.134447,0.093743,-8.988203,3.761767,1.178652,6.893038,-3.973537,-0.774515,-5.944467,-7.013592,-6.846330,-3.911808,7.500668,-6.722120,-9.097277,-8.419437,-6.351031,-1.709756,2.183621,4.019863,-2.302508,-4.455676,-7.059678,3.486414,5.798388,5.088610,-4.565412,2.883843,-1.638895,-6.442099,-8.687529,-9.623279,4.077257,4.401703,5.895844,5.121767,-6.635767,-9.323852,-4.580813,5.899293,-2.562270,6.767734,-9.075724,-0.878543,-4.879892,6.082752,-7.495310,1.336358,-0.384288,-2.755206,3.010722,0.809579,7.401420,4.852064,-1.626572,5.570972,7.885734,0.319218,6.436109,0.581563,-6.624373,6.479019,-9.421012,-7.712480,8.294481,-2.810572,-3.639998,-7.367235,-1.366220,7.737675,-2.308195,3.132139,-3.778577,3.918571,-3.619014,9.800976,4.707807,0.857387,-4.419015,7.570585,-6.945682,-0.173016,2.051597,-7.071954,-9.947817,-0.003879,3.779644,3.692839,-4.787141,2.121963,4.403629,-3.322069,2.933143,-5.088280,8.942532,-0.652700,-5.933837,3.524749,6.953186,8.051238,5.625395,1.309562,4.930506,-3.933211,2.232199,-0.097902,0.099971,-4.461566,6.906009,-8.821701,-7.068658,-9.296546,6.211433,-2.432687,-1.195282,7.556025,-5.934749,-1.084976,6.789981,9.389243,-9.691909,6.204366,-5.737158,7.209008,-5.111478,6.607353,-5.955648,7.154574,7.196696,-7.866796,6.825539,1.063007,-2.824431,5.737375,1.888022,1.562225,8.742507,1.985538,-5.002368,1.201662,-3.204583,2.894898,-7.614334,-5.989932,-9.008854,4.069574,-0.848354,4.255277,-6.623106,-1.608122,-5.729625,-8.100574,-5.044429,2.757602,-9.199360,-3.954780,8.185538,7.909049,-9.019170,1.686508,-8.280339,5.242616,-6.240392,-8.125591,7.705319,-4.139933,-2.177809,5.541798,-2.049183,2.409932,7.985840,1.183583,9.718099,1.046762,-2.689747,-6.626226,5.569695,-5.880860,5.100265,9.038082,3.524606,-0.783645,-2.093804,0.683758,-1.041584,9.018133,-7.971036,4.991507,9.008289,3.296371,2.584785,-3.484309,9.903397,-2.115643,4.272355,-6.091654,4.898275,-9.761840,-6.934299,-0.927656,-8.521865,6.180371,-4.672745,-1.467115,0.117337,-6.716349,-7.516262,5.232160,9.164745,-4.090445,6.931902,3.741085,2.074952,-9.512378,9.170386,-0.133335,-7.176658,-9.105318,-7.816025,-4.873230,3.773822,1.670867,-3.819789,0.986411,-1.819705,-5.932871,-6.385372,1.270406,-0.375844,-8.543455,-7.945724,3.236399,-4.598914,-1.581936,8.032133,-6.604519,2.042399,-8.692930,-7.792151,2.272138,1.878497,6.064336,7.100903,3.193801,-6.105577,-2.600397,-7.802681,-6.068832,1.170779,-7.881342,9.093572], dtype = "float64")#candidate|970|(1800,)|const|float64
call_969 = relay.TupleGetItem(func_556_call(relay.reshape(const_970.astype('float64'), [8, 15, 15]), relay.reshape(const_970.astype('float64'), [8, 15, 15]), relay.reshape(const_970.astype('float64'), [8, 15, 15]), ), 1)
call_971 = relay.TupleGetItem(func_561_call(relay.reshape(const_970.astype('float64'), [8, 15, 15]), relay.reshape(const_970.astype('float64'), [8, 15, 15]), relay.reshape(const_970.astype('float64'), [8, 15, 15]), ), 1)
func_644_call = mod.get_global_var('func_644')
func_646_call = mutated_mod.get_global_var('func_646')
var_987 = relay.var("var_987", dtype = "float64", shape = (200,))#candidate|987|(200,)|var|float64
call_986 = relay.TupleGetItem(func_644_call(relay.reshape(var_987.astype('float64'), [10, 4, 5])), 0)
call_988 = relay.TupleGetItem(func_646_call(relay.reshape(var_987.astype('float64'), [10, 4, 5])), 0)
output = relay.Tuple([call_932,call_959,call_969,const_970,call_986,var_987,])
output2 = relay.Tuple([call_933,call_960,call_971,const_970,call_988,var_987,])
func_992 = relay.Function([var_987,], output)
mod['func_992'] = func_992
mod = relay.transform.InferType()(mod)
mutated_mod['func_992'] = func_992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_993 = relay.var("var_993", dtype = "float64", shape = (200,))#candidate|993|(200,)|var|float64
func_992_call = mutated_mod.get_global_var('func_992')
call_994 = func_992_call(var_993)
output = call_994
func_995 = relay.Function([var_993], output)
mutated_mod['func_995'] = func_995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1060 = relay.var("var_1060", dtype = "float32", shape = ())#candidate|1060|()|var|float32
const_1061 = relay.const([[[8.048931],[-6.255763],[5.507436],[9.958515],[-7.154097],[8.604604],[-8.049346],[9.826513],[7.513284],[3.905581]],[[2.624738],[3.468285],[-2.544158],[5.718867],[2.127083],[2.504434],[6.894919],[-9.298292],[-7.701741],[-3.944975]],[[1.766741],[1.087344],[6.141605],[9.317651],[8.616670],[-6.891421],[-0.422936],[-6.572813],[-5.032147],[-2.125653]],[[8.421475],[-9.412367],[2.090904],[7.187292],[-3.057101],[-6.980572],[7.565020],[5.796343],[0.464863],[-8.325601]],[[-6.107773],[4.317858],[-5.033037],[9.965944],[6.797522],[5.913261],[6.171857],[0.679156],[-0.355674],[6.186231]],[[-5.422168],[-2.955053],[9.052497],[1.958845],[-3.888573],[6.355427],[-6.714300],[-4.816300],[1.711909],[0.674901]],[[4.343173],[0.629497],[9.388812],[-6.964984],[0.471017],[-1.380471],[3.442555],[-8.752904],[4.810865],[2.098221]],[[2.016484],[-1.787594],[-4.438411],[-3.271584],[-1.850329],[-3.197672],[-6.197949],[-7.127847],[4.262379],[5.145215]],[[-3.866637],[-0.193496],[0.523117],[-5.147327],[-7.979250],[-3.607366],[5.518428],[-3.779700],[9.171737],[8.707779]],[[-2.752232],[-7.212589],[8.496191],[-1.030382],[7.676287],[9.652474],[-0.237008],[2.817107],[-1.499467],[-6.628162]],[[-5.997632],[-9.076220],[7.808021],[9.809967],[-1.513135],[-1.067730],[-3.638724],[2.963502],[9.243157],[-2.821172]],[[-0.571991],[3.483001],[-2.326461],[-7.856613],[-1.494602],[7.702228],[0.174823],[-0.095722],[-6.564648],[-2.922489]]], dtype = "float32")#candidate|1061|(12, 10, 1)|const|float32
bop_1062 = relay.divide(var_1060.astype('float32'), const_1061.astype('float32')) # shape=(12, 10, 1)
uop_1071 = relay.cosh(const_1061.astype('float32')) # shape=(12, 10, 1)
output = relay.Tuple([bop_1062,uop_1071,])
output2 = relay.Tuple([bop_1062,uop_1071,])
func_1081 = relay.Function([var_1060,], output)
mod['func_1081'] = func_1081
mod = relay.transform.InferType()(mod)
mutated_mod['func_1081'] = func_1081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1082 = relay.var("var_1082", dtype = "float32", shape = ())#candidate|1082|()|var|float32
func_1081_call = mutated_mod.get_global_var('func_1081')
call_1083 = func_1081_call(var_1082)
output = call_1083
func_1084 = relay.Function([var_1082], output)
mutated_mod['func_1084'] = func_1084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_1088 = func_800_call()
call_1089 = func_800_call()
output = call_1088
output2 = call_1089
func_1094 = relay.Function([], output)
mod['func_1094'] = func_1094
mod = relay.transform.InferType()(mod)
mutated_mod['func_1094'] = func_1094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mutated_mod.get_global_var('func_1094')
call_1095 = func_1094_call()
output = call_1095
func_1096 = relay.Function([], output)
mutated_mod['func_1096'] = func_1096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1096_call = mutated_mod.get_global_var('func_1096')
call_1100 = func_1094_call()
call_1101 = func_1094_call()
func_992_call = mod.get_global_var('func_992')
func_995_call = mutated_mod.get_global_var('func_995')
const_1108 = relay.const([[4.394618,1.562197,-6.294811,-1.057731,2.939867,5.171600,2.562284,-8.830825,0.351962,-3.122679,-2.239044,-9.109264,-3.232557,-4.250917,6.902299,5.670859,-5.995447,-0.087479,3.176391,-9.806116,5.012936,-5.620342,4.727336,-1.805122,8.250342,7.748969,1.353610,-2.001442,1.661543,-2.580712,-4.854614,-0.067802,-1.389015,0.937002,4.581777,8.826286,-4.791039,4.027854,-7.132372,-1.630253,-4.041102,7.475024,3.970852,6.677514,-9.584542,-6.017792,-1.883841,7.492459,8.038228,-9.670035,6.176816,-8.964794,-6.606273,0.973951,3.638413,-6.745104,-4.212370,3.939511,-8.013499,-7.850599,-2.181005,1.515572,4.308027,-7.465624,-2.527272,3.062390,-8.407287,8.172572,-9.078248,5.908185,-0.243594,9.262077,-5.700935,-2.757099,-1.061744,0.362323,4.639678,3.131174,-9.988623,-4.505739,-2.610837,-5.559283,9.093676,6.895631,-0.018092,5.940853,4.970269,9.778258,8.459770,-2.397216,0.518947,-6.973445,-0.229591,1.308661,2.558118,2.403302,-2.038478,-9.692571,4.159876,3.416522,5.454373,-5.618051,0.360182,-0.115890,-3.967559,-6.963512,-3.323404,-9.499508,-5.269369,6.167412,9.719592,-7.536887,-6.063455,7.271161,-1.545958,-8.608225,7.163853,-0.165350,-0.610642,2.900233,0.172792,-0.523584,9.484524,1.780303,8.624977,1.622871,1.969905,-4.636514,0.531570,-1.672789,-4.425227,2.036420,8.569758,-1.957006,-8.743410,-3.395022,-0.453865,5.021512,-8.030735,9.056248,-8.392600,-3.661727,-5.834313,9.150323,8.853075,-9.123656,-2.273971,0.124152,8.301247,-9.843235,-5.438579,-6.015846,2.011160,-7.796506,-7.261266,2.117644,-1.297182,-0.651805,-2.148508,-9.037765,9.124658,7.927977,-1.347367,-2.803469,3.845337,4.083246,2.054081,-4.442103,-3.435771,-1.493003,-4.139314,1.115789,-5.585952,-7.389533,7.780697,-4.740941,9.376385,4.429233,-0.343917,2.528266,-4.653505,9.565907,-9.937017,-4.801884,-8.113210,4.248593,4.545911,-2.146359,9.313205,-9.733954,7.690444,4.829509,2.751278,4.890104,-0.439465,0.929018,9.979367,1.963408,-8.739182,-3.056290]], dtype = "float64")#candidate|1108|(1, 200)|const|float64
call_1107 = relay.TupleGetItem(func_992_call(relay.reshape(const_1108.astype('float64'), [200,])), 1)
call_1109 = relay.TupleGetItem(func_995_call(relay.reshape(const_1108.astype('float64'), [200,])), 1)
output = relay.Tuple([call_1100,call_1107,const_1108,])
output2 = relay.Tuple([call_1101,call_1109,const_1108,])
func_1117 = relay.Function([], output)
mod['func_1117'] = func_1117
mod = relay.transform.InferType()(mod)
mutated_mod['func_1117'] = func_1117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mutated_mod.get_global_var('func_1117')
call_1118 = func_1117_call()
output = call_1118
func_1119 = relay.Function([], output)
mutated_mod['func_1119'] = func_1119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1141 = relay.var("var_1141", dtype = "int8", shape = (2, 2, 5))#candidate|1141|(2, 2, 5)|var|int8
const_1142 = relay.const([[[-9,6,-6,-8,6],[10,-4,-3,7,-8]],[[6,6,5,5,7],[1,-1,-4,5,-8]]], dtype = "int8")#candidate|1142|(2, 2, 5)|const|int8
bop_1143 = relay.bitwise_or(var_1141.astype('int8'), relay.reshape(const_1142.astype('int8'), relay.shape_of(var_1141))) # shape=(2, 2, 5)
uop_1150 = relay.acos(bop_1143.astype('float64')) # shape=(2, 2, 5)
uop_1153 = relay.erf(bop_1143.astype('float32')) # shape=(2, 2, 5)
bop_1157 = relay.multiply(bop_1143.astype('uint32'), relay.reshape(var_1141.astype('uint32'), relay.shape_of(bop_1143))) # shape=(2, 2, 5)
output = relay.Tuple([uop_1150,uop_1153,bop_1157,])
output2 = relay.Tuple([uop_1150,uop_1153,bop_1157,])
func_1165 = relay.Function([var_1141,], output)
mod['func_1165'] = func_1165
mod = relay.transform.InferType()(mod)
var_1166 = relay.var("var_1166", dtype = "int8", shape = (2, 2, 5))#candidate|1166|(2, 2, 5)|var|int8
output = func_1165(var_1166)
func_1167 = relay.Function([var_1166], output)
mutated_mod['func_1167'] = func_1167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_1188 = relay.TupleGetItem(func_1117_call(), 1)
call_1189 = relay.TupleGetItem(func_1119_call(), 1)
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_1198 = func_576_call()
call_1199 = func_576_call()
func_1165_call = mod.get_global_var('func_1165')
func_1167_call = mutated_mod.get_global_var('func_1167')
var_1222 = relay.var("var_1222", dtype = "int8", shape = (20,))#candidate|1222|(20,)|var|int8
call_1221 = relay.TupleGetItem(func_1165_call(relay.reshape(var_1222.astype('int8'), [2, 2, 5])), 0)
call_1223 = relay.TupleGetItem(func_1167_call(relay.reshape(var_1222.astype('int8'), [2, 2, 5])), 0)
output = relay.Tuple([call_1188,call_1198,call_1221,var_1222,])
output2 = relay.Tuple([call_1189,call_1199,call_1223,var_1222,])
func_1229 = relay.Function([var_1222,], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
mutated_mod['func_1229'] = func_1229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1230 = relay.var("var_1230", dtype = "int8", shape = (20,))#candidate|1230|(20,)|var|int8
func_1229_call = mutated_mod.get_global_var('func_1229')
call_1231 = func_1229_call(var_1230)
output = call_1231
func_1232 = relay.Function([var_1230], output)
mutated_mod['func_1232'] = func_1232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_1281 = relay.TupleGetItem(func_854_call(), 0)
call_1282 = relay.TupleGetItem(func_855_call(), 0)
output = call_1281
output2 = call_1282
func_1286 = relay.Function([], output)
mod['func_1286'] = func_1286
mod = relay.transform.InferType()(mod)
output = func_1286()
func_1287 = relay.Function([], output)
mutated_mod['func_1287'] = func_1287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_1321 = relay.TupleGetItem(func_1117_call(), 0)
call_1322 = relay.TupleGetItem(func_1119_call(), 0)
output = call_1321
output2 = call_1322
func_1333 = relay.Function([], output)
mod['func_1333'] = func_1333
mod = relay.transform.InferType()(mod)
mutated_mod['func_1333'] = func_1333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1333_call = mutated_mod.get_global_var('func_1333')
call_1334 = func_1333_call()
output = call_1334
func_1335 = relay.Function([], output)
mutated_mod['func_1335'] = func_1335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_1336 = func_1333_call()
call_1337 = func_1333_call()
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_1362 = func_576_call()
call_1363 = func_576_call()
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
var_1374 = relay.var("var_1374", dtype = "int8", shape = (10, 2))#candidate|1374|(10, 2)|var|int8
call_1373 = relay.TupleGetItem(func_1229_call(relay.reshape(var_1374.astype('int8'), [20,])), 0)
call_1375 = relay.TupleGetItem(func_1232_call(relay.reshape(var_1374.astype('int8'), [20,])), 0)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_1377 = func_237_call()
call_1378 = func_237_call()
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_1399 = func_800_call()
call_1400 = func_800_call()
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_1438 = relay.TupleGetItem(func_1117_call(), 0)
call_1439 = relay.TupleGetItem(func_1119_call(), 0)
output = relay.Tuple([call_1336,call_1362,call_1373,var_1374,call_1377,call_1399,call_1438,])
output2 = relay.Tuple([call_1337,call_1363,call_1375,var_1374,call_1378,call_1400,call_1439,])
func_1440 = relay.Function([var_1374,], output)
mod['func_1440'] = func_1440
mod = relay.transform.InferType()(mod)
mutated_mod['func_1440'] = func_1440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1441 = relay.var("var_1441", dtype = "int8", shape = (10, 2))#candidate|1441|(10, 2)|var|int8
func_1440_call = mutated_mod.get_global_var('func_1440')
call_1442 = func_1440_call(var_1441)
output = call_1442
func_1443 = relay.Function([var_1441], output)
mutated_mod['func_1443'] = func_1443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_1464 = func_576_call()
call_1465 = func_576_call()
uop_1467 = relay.log10(call_1464.astype('float32')) # shape=(10, 16, 11)
uop_1469 = relay.log10(call_1465.astype('float32')) # shape=(10, 16, 11)
uop_1476 = relay.asin(uop_1467.astype('float32')) # shape=(10, 16, 11)
uop_1478 = relay.asin(uop_1469.astype('float32')) # shape=(10, 16, 11)
func_1165_call = mod.get_global_var('func_1165')
func_1167_call = mutated_mod.get_global_var('func_1167')
const_1480 = relay.const([5,-10,-4,-1,-9,-8,6,-10,7,9,8,-10,-3,-6,7,1,-7,-6,-7,9], dtype = "int8")#candidate|1480|(20,)|const|int8
call_1479 = relay.TupleGetItem(func_1165_call(relay.reshape(const_1480.astype('int8'), [2, 2, 5])), 2)
call_1481 = relay.TupleGetItem(func_1167_call(relay.reshape(const_1480.astype('int8'), [2, 2, 5])), 2)
output = relay.Tuple([uop_1476,call_1479,const_1480,])
output2 = relay.Tuple([uop_1478,call_1481,const_1480,])
func_1488 = relay.Function([], output)
mod['func_1488'] = func_1488
mod = relay.transform.InferType()(mod)
mutated_mod['func_1488'] = func_1488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mutated_mod.get_global_var('func_1488')
call_1489 = func_1488_call()
output = call_1489
func_1490 = relay.Function([], output)
mutated_mod['func_1490'] = func_1490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_1523 = func_1333_call()
call_1524 = func_1333_call()
output = relay.Tuple([call_1523,])
output2 = relay.Tuple([call_1524,])
func_1529 = relay.Function([], output)
mod['func_1529'] = func_1529
mod = relay.transform.InferType()(mod)
output = func_1529()
func_1530 = relay.Function([], output)
mutated_mod['func_1530'] = func_1530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_1633 = relay.TupleGetItem(func_1529_call(), 0)
call_1634 = relay.TupleGetItem(func_1530_call(), 0)
const_1643 = relay.const([[[-2.285988,7.941322,7.497018,4.821609,8.735898,-6.423967,0.931638,9.130917,8.416439,4.948199,-8.866318],[9.536679,-9.532291,0.484104,9.642800,2.852727,-7.302371,9.631122,0.394090,-4.569695,7.532258,1.713768],[-2.438605,-8.638943,5.438407,-4.184671,8.204426,1.160680,-8.922677,-4.206177,-4.162289,1.012268,-8.623046],[-8.036904,4.465588,-3.582501,0.081157,8.729773,-3.997936,-8.288037,9.800660,8.608691,-7.286136,-0.336883],[4.968224,-8.321761,4.033351,-7.391230,-9.945871,2.453267,-5.140997,-6.920054,6.438487,8.716932,2.122138],[6.784060,-1.154027,-5.163819,2.828146,5.123908,1.742087,-3.629544,-5.867310,-7.858664,0.735837,-9.335408],[0.909444,-0.082156,5.306405,-8.128314,4.920143,3.641841,-1.672190,-3.702756,9.239487,-6.836257,9.373021],[6.468130,4.114511,-8.552089,9.301386,-0.031269,3.888626,1.834776,8.184507,9.946234,3.159997,-4.739342],[-3.717515,6.015270,7.655357,-7.257410,8.136097,-9.861465,9.644599,7.813215,1.330218,7.273574,-2.675236],[6.315958,-4.067400,-5.845426,-8.690387,9.235540,5.939246,-0.619452,-8.096330,0.006326,-3.677183,8.946492],[-9.731734,-9.524019,-4.111123,-3.883144,-2.585017,-4.527993,4.712308,-1.938571,-4.780252,-0.181079,-4.469734],[-5.206167,-1.120080,-7.488572,1.118787,-9.541675,4.616856,7.127023,4.334485,-5.924962,-1.487170,-0.026699],[-7.744939,5.727693,6.765496,-3.850312,-2.112887,-7.396445,4.222436,2.661622,-8.967856,-7.147393,-9.542606],[-0.639704,-0.030905,6.483013,8.060196,-7.094633,-4.103100,-9.784750,7.830579,9.575644,8.452211,-7.967842],[9.603418,1.077999,-8.913472,2.487418,-8.343834,-5.705052,-2.010402,5.338217,7.258503,4.887701,2.724580],[2.355150,8.404331,-6.626544,8.731113,2.832097,-8.755807,-2.184211,-4.154466,4.162415,4.760096,6.909255]],[[9.476568,-8.477891,-7.916027,-2.620824,2.872074,9.284092,-2.734741,-2.828001,-8.495653,-2.849205,-4.988528],[4.394076,-5.151738,6.250133,-7.722387,-3.553070,8.572716,3.727430,-8.613714,2.315112,8.713258,-6.791219],[-4.811189,5.763544,-7.750730,8.298548,2.189302,-0.177130,4.771950,2.409739,-4.045454,6.206646,-7.516844],[-4.965898,-0.144715,4.725671,-1.896557,-7.865621,-2.232369,0.993732,7.351630,7.193611,-3.045890,2.679378],[-0.136257,8.382232,-4.332928,-4.861451,5.283819,7.440687,9.267208,-3.608952,8.332585,-8.551194,-0.798467],[-6.238150,0.886888,-6.005066,9.025030,3.398756,5.464658,7.459859,-6.185749,-9.474237,-2.118638,2.970126],[-5.793547,9.881133,-9.210108,0.322286,9.148487,4.554872,-7.122107,-2.028723,9.315832,2.460378,8.408995],[-9.926574,-0.720742,6.914088,-1.246007,-1.864313,-5.466046,-3.896215,-4.413965,-1.230058,-1.497821,-4.148854],[0.395113,-5.148617,-6.839175,7.323029,-3.482768,0.779394,4.614366,2.064443,-5.271549,-0.709202,2.249100],[4.624137,9.136101,-8.967347,6.875378,-4.559708,9.231227,7.941602,-2.420161,4.901245,-9.271930,1.105132],[-0.678402,-2.460146,4.177260,4.489503,4.239617,-7.447661,-6.327483,-6.021584,7.251604,8.124265,-7.194243],[-2.193944,4.496531,7.898759,4.996881,6.584252,-0.197051,-8.513154,5.226382,-9.239496,-4.894294,2.651197],[8.308558,5.662893,-8.998825,-3.059844,0.629286,5.751427,-1.154141,8.926583,2.309281,9.889203,-8.059969],[0.720624,-0.866959,-1.127297,-4.165791,8.974201,-1.347317,-6.538131,9.417437,9.174806,-9.200137,-7.703059],[5.922070,-9.079712,-1.722597,-8.953785,8.408841,-8.394942,-2.715341,-5.343539,-1.729838,-5.315309,-0.568568],[5.299446,0.312560,3.946062,5.264803,4.085115,4.216877,-1.554575,4.625362,-3.684998,-9.505144,-5.482880]],[[1.096585,-1.989421,6.225484,-5.426067,6.543914,0.331215,-2.929162,-1.119822,-5.026528,7.916529,8.855803],[-2.952089,-4.410060,0.918917,6.881694,1.997161,2.536366,5.890764,9.358983,-4.245319,9.632853,2.342178],[-0.985699,-2.074275,2.230812,-2.875235,6.334066,-7.475124,7.251172,-4.603557,8.194202,-2.187261,0.574902],[8.824998,4.658293,-2.768466,-5.721994,2.971381,1.312922,3.745315,8.282502,-6.695944,-5.773965,-5.863580],[-0.663323,2.970325,9.904078,-0.642164,3.513926,7.249680,-8.676162,2.166815,8.036151,0.789360,-9.546258],[-4.927246,4.350420,-5.923574,8.741726,6.754839,-1.424695,0.243125,-4.223123,-3.389804,-4.344827,2.157797],[4.978391,5.647284,5.168192,-1.156643,6.504307,9.417233,0.985749,4.724687,-1.556465,-3.033952,0.739378],[-4.186619,-8.435186,0.750566,-6.901594,3.897511,1.943885,7.720101,2.302561,5.691612,-0.204094,5.833346],[-9.279937,-7.674620,-3.568481,1.320865,-4.554842,9.268447,9.372583,4.269329,4.794003,5.542499,5.702066],[3.746189,-2.603001,-3.880920,0.352915,-6.548540,-7.844548,6.491797,-3.211085,-5.670020,-0.855643,5.225071],[-7.701976,-3.254480,2.162777,-9.295925,-5.181836,1.303522,-6.193258,3.445080,-7.532848,-9.138925,-1.557607],[0.169656,-3.798883,7.052111,6.829177,-3.929170,-3.105729,-8.828489,2.052376,-3.956428,-3.359565,-1.212812],[8.272336,8.332884,-9.387827,-9.506504,8.638720,6.407514,7.295104,-4.590448,4.842387,-0.577629,4.491000],[7.587202,-8.651730,-4.275108,8.462473,9.154950,-7.711393,-7.581133,-3.873770,5.961468,-8.258628,-7.583672],[-1.445961,4.762638,9.277389,5.215787,-6.898525,0.150003,-9.874547,5.862279,7.993595,0.500944,5.004566],[-3.013738,-0.752209,4.974699,-8.044677,8.038825,4.977982,-0.930125,-7.212809,6.794552,-6.895629,4.617438]],[[8.085691,-6.296265,-1.541872,-1.240611,-7.805533,3.318817,6.952614,4.271417,-9.885698,-5.055088,7.990315],[5.757067,-8.007125,-8.153371,4.082528,8.141010,9.950704,9.917235,6.421552,4.501332,-2.261135,4.504143],[-8.443799,8.165942,7.883427,-1.752336,-4.931436,-8.873069,-9.680410,4.239503,1.915555,-0.903123,8.893105],[-8.405191,-6.462868,-0.365422,-2.819175,-9.807702,-0.735580,-2.918716,6.163050,5.697871,-2.648240,-9.016082],[-5.051061,-2.315025,-3.188033,-5.394444,6.050004,5.977782,4.855399,-1.138667,2.445410,-4.968735,1.490825],[6.831340,6.699116,-7.240541,-7.952308,-1.851644,0.717944,-1.359128,-2.189888,7.815690,6.267929,8.652624],[-1.247806,2.933928,-6.730990,2.300101,-0.018451,-9.446744,4.880422,9.059686,5.752808,5.158002,-3.751740],[-3.430288,-8.356724,-5.573603,-6.752771,-3.019328,-2.425236,-5.596479,5.040365,-4.232883,-0.911053,3.067730],[3.937218,-9.593364,1.632555,1.338272,2.464714,-3.417409,8.664676,-3.726296,-1.300329,-0.164997,-9.290967],[1.870124,2.902652,3.207892,-1.158208,1.878761,6.920869,-7.822463,8.774803,-2.382682,7.691568,1.853524],[-7.644542,6.950955,-0.850480,4.400428,-4.324376,5.027777,-8.781151,-2.422942,2.027507,-9.701867,6.514167],[6.405303,0.991952,8.420042,-5.451613,1.386531,-9.886910,7.641074,8.815705,4.734070,2.125001,4.747982],[2.730180,-4.073331,5.926651,7.152105,7.289112,-6.799440,7.904609,-1.445836,-6.411569,-5.383391,-6.346121],[2.199074,-4.097367,7.062095,8.670002,2.270037,-1.602779,-5.287999,-3.383687,-2.485610,-7.078417,-4.296541],[8.850969,-3.024278,6.215769,-0.393687,-6.593250,9.673748,9.154569,4.363043,3.742443,0.022156,-7.008767],[9.535717,-6.934055,2.828703,-0.174267,-3.251279,-2.526566,6.626381,6.779617,0.444952,-2.219017,-8.366461]],[[4.680742,-7.351903,-7.090171,2.120273,6.163365,5.853903,-0.913935,2.945341,1.047607,-8.812587,-1.191014],[0.760553,-7.618748,6.014314,9.853813,-9.656454,2.848334,5.708585,-3.375863,0.984634,8.503654,5.681762],[1.134473,1.703382,-1.196175,-2.891685,1.779396,-3.110363,-7.402180,-6.851852,9.590249,-6.189272,-5.568981],[-4.230078,-2.063453,-8.737030,6.207775,-6.905270,-4.391695,3.639156,1.686844,9.583554,7.802686,-0.731744],[-4.826612,3.588779,7.316882,-0.344171,8.205257,2.651337,-9.651620,9.585862,4.927477,-0.369210,6.171832],[4.116837,3.564393,-7.600858,-4.919034,-0.048557,2.709486,4.116931,-4.032595,-3.343374,-0.353933,3.888972],[-8.835362,-6.212982,-2.163399,6.461577,-9.504469,1.647773,-4.614329,-8.506896,-0.789994,2.683659,-8.890957],[3.715252,-5.639072,-8.439234,5.441661,-3.189477,0.268581,3.457762,0.698767,6.176852,1.812567,-1.407585],[-7.781041,2.199117,1.697571,4.055939,1.124430,-0.414362,-5.337845,-0.259135,3.935503,1.303395,-7.257193],[-1.473073,-8.550828,3.077025,-2.154716,2.011047,8.554164,-3.857469,6.437270,-6.990729,-0.650936,-9.193581],[-1.569962,-2.684164,8.437631,-8.000654,-5.240418,-2.966221,-4.528474,3.549190,8.343863,-3.257454,5.413543],[3.192041,-2.272953,1.838799,3.529561,5.186156,-7.808862,1.451941,-2.149577,5.781084,-3.127967,9.230254],[-2.918539,-1.502248,9.469090,-1.181289,8.870262,8.278074,7.740492,-6.171004,-0.529741,-4.581741,8.853772],[0.188601,5.085134,-9.433066,-1.274794,9.855975,-3.529417,-3.670623,-3.860499,-4.858958,-8.025237,1.697469],[-1.483169,-7.551039,0.254069,-4.889978,-0.893123,-3.915477,-5.833456,-8.556366,-1.093066,3.314711,1.088311],[-7.067606,-9.931897,5.304938,-4.075859,1.908967,-5.606448,-3.763997,-2.855673,-8.943166,-9.528486,4.199701]],[[6.079316,2.423897,7.146960,0.973080,-4.367321,-5.956111,-7.567575,0.736467,-3.222070,-3.492913,9.210717],[-0.726837,3.301866,-9.976885,-4.244057,-9.958909,4.821688,4.271801,0.529377,4.577387,8.628245,-3.129772],[5.859091,-7.268628,-1.224876,-1.887676,7.029917,-0.209104,8.935462,-5.192412,-5.697170,-7.718102,-6.574031],[-6.447161,-2.981948,4.698348,6.685748,6.849473,-3.355739,-6.478666,-7.640592,-0.520979,0.299689,-6.137681],[2.510546,-2.515425,-6.498095,-2.070381,7.474756,-3.275488,-3.215058,4.019621,8.467434,3.955098,-9.112460],[0.714919,-5.207829,4.146971,-6.198362,3.972015,-6.753307,0.924216,-2.140032,-6.892143,-0.984686,0.066349],[-6.231034,-7.430032,0.441853,3.717365,9.194601,5.138717,-5.763710,0.365246,-7.199076,6.029732,6.579834],[3.567323,-7.599454,4.365358,-1.153371,5.172933,8.623372,6.447789,2.517610,-0.350032,8.640231,7.862504],[-1.095317,-5.099324,4.019625,-3.785076,-8.968782,-5.146100,4.206678,6.874305,-2.034268,-3.974007,-7.966956],[-3.397533,3.074060,-8.880606,-1.524354,-2.044087,-7.138954,-3.458397,-5.728559,-7.367578,-8.815077,1.053163],[-8.575778,-6.647659,-7.155664,-4.910289,-8.823841,-8.065130,-3.199683,-0.765794,-0.760534,4.154259,6.050563],[-9.257915,-9.863087,-0.236999,2.150100,-5.053717,-0.097786,-1.082715,-5.066319,2.718747,-1.673464,-3.931150],[-9.547200,3.488663,1.545437,8.888624,-6.274275,5.992985,0.822286,-5.593643,2.777703,-3.538679,6.169248],[-8.710397,-8.347358,-2.746569,-1.967405,6.060946,8.007793,2.175914,9.602204,9.006173,1.220649,1.479496],[-0.005627,0.878734,-6.560410,7.402597,6.568857,1.252690,3.302051,-1.944062,-6.047439,-4.472700,-8.160387],[4.715142,-8.241080,-2.356790,9.085485,-0.744460,5.906982,9.774612,-7.491221,3.154138,2.124904,3.308317]],[[-4.379086,-5.486563,2.728920,-9.041615,-7.691901,7.283858,-2.525522,-0.820280,5.648108,9.730451,1.357301],[7.727206,9.391391,1.109097,1.370669,7.018506,-6.115169,2.182731,-0.030599,5.451205,2.799671,7.737203],[-3.007203,3.482380,9.448448,-9.578076,0.729632,-6.168899,-6.099306,8.166407,-2.066415,9.654098,-0.204603],[-8.505896,-4.325923,-7.065113,-4.944841,5.270947,1.640901,9.499688,7.713490,2.832493,4.476027,9.622360],[6.773673,5.526836,5.885167,-6.352799,0.907911,-1.396303,8.223742,2.873645,1.045436,-5.868268,2.705338],[5.908688,-8.411401,-5.403512,-1.194443,8.501631,-6.685495,2.544699,-3.646910,-1.454279,-5.755310,3.933232],[3.461417,7.180176,-1.514604,4.506496,5.240454,-9.580697,-0.116689,2.661385,1.053587,-0.982707,-7.448147],[8.462646,-9.986447,-0.472580,7.040243,-1.072383,4.327222,4.142910,9.449585,3.172392,3.825309,-1.992324],[-4.850131,-7.266215,2.811757,-9.659016,-1.460103,-9.228707,7.692060,0.797398,-5.456408,5.687526,5.397941],[4.920923,6.332512,-0.534326,7.984774,-8.557339,-6.178733,4.934279,-1.709962,2.989602,7.802916,8.851388],[8.859572,0.584580,-8.750291,9.482146,1.255153,-2.719193,0.384658,5.601522,-6.175250,1.059906,-9.785545],[-5.703873,-5.288716,5.118775,7.652399,-2.687697,6.821806,-7.523805,-0.502647,-7.854321,1.126110,-0.064103],[8.126880,2.009925,-9.999712,-1.804175,5.110694,3.532412,8.690465,2.779447,6.297059,3.318410,-5.859723],[-4.264734,4.988666,-8.288867,1.073990,3.972471,2.644373,-2.232164,0.578801,-1.316837,5.601253,-4.218405],[5.385430,0.750819,3.160260,1.171155,1.977955,-7.026230,-9.123363,8.467472,-8.106582,-7.902291,7.733716],[7.387475,-8.324724,4.621476,3.494962,-7.671291,9.951250,6.391918,-0.915484,-8.382602,-7.140568,-8.963230]],[[-7.561288,-9.555085,-1.526778,-9.841589,-9.531690,7.686322,7.559381,-1.284118,-9.063710,9.539027,7.274605],[4.178594,-4.326934,7.922646,-7.240086,8.844316,6.868023,0.196441,1.236934,6.718465,4.067322,-0.641523],[4.169651,4.554588,6.592869,5.468887,8.108014,-1.419836,4.846030,-9.573203,5.903019,-6.121902,-5.598141],[-2.794783,6.929306,2.531338,-6.400045,6.969861,-8.165137,-3.050910,-1.146514,-2.030728,-2.541335,0.690797],[-7.079119,6.717313,5.213799,-2.354088,-3.330866,7.378516,-9.180288,-2.942324,-4.885716,-6.902984,2.796983],[-2.543088,8.336302,2.441206,7.508506,7.559128,7.877938,5.250057,-5.535088,-0.820276,7.113317,-6.944424],[-5.378935,-8.923843,-5.624898,5.224292,9.992154,3.204405,9.642328,-6.286859,5.655632,-7.074360,6.064055],[-9.188285,-0.209729,-5.422889,-4.471840,9.855659,8.467533,-2.595445,1.176504,9.263675,6.761166,5.661226],[-4.900455,-5.052488,8.326426,-2.266378,-0.476191,-5.440518,3.129668,-2.320462,0.417735,-9.443495,-0.981192],[-5.217340,-4.487634,-8.729202,7.247221,-1.649008,-7.335904,6.941701,-0.381665,-1.221920,-1.797484,5.310133],[0.362629,-6.401784,1.462931,9.296042,5.463795,6.887703,-0.349242,0.059039,0.703421,2.134069,-7.422516],[5.564436,-4.510859,-4.872404,-3.188631,-5.536800,2.503892,-0.399056,9.846807,-1.392731,-3.748074,-8.549405],[-8.634813,-6.484382,-9.129935,9.266275,-1.911851,2.762202,-8.496604,-6.741491,9.778555,-0.827192,5.911303],[4.068145,-8.266921,1.226948,-4.151794,6.199253,1.897852,-8.656735,1.118883,2.082152,5.984984,-1.518276],[-6.295620,-4.800414,7.718857,-0.897085,-1.904806,7.028064,-7.373625,6.370331,9.786283,6.527673,-0.696029],[-9.783821,6.615564,5.480892,-2.034771,-6.985650,-4.552017,-0.336900,0.431501,-5.055465,-1.881386,-7.512550]],[[-7.351157,1.602036,1.353490,8.240327,8.009160,1.928904,2.815503,6.097864,5.325940,-7.521327,-6.889481],[2.475919,8.008435,9.988842,-6.944519,-8.165205,5.090743,-7.182438,-2.791179,-1.994628,9.805063,-0.390470],[6.306083,-1.492504,1.829279,-7.101255,1.569385,0.522010,-3.304500,-3.436940,0.340446,2.342043,4.393666],[1.488634,3.826304,7.183743,0.174694,1.550069,5.261895,1.841148,-6.297739,-8.943196,-0.830543,0.096312],[6.047833,2.120498,-7.037462,3.941097,-9.922984,-3.341583,3.776394,-9.742932,5.227388,9.273012,4.679137],[-8.853536,-7.719016,7.723633,-1.949305,5.084258,-2.815421,-5.407126,-5.034016,-6.790033,-6.481493,-7.132803],[-6.676022,1.541374,5.962415,-6.127576,9.914852,-0.689766,-8.925173,-7.961010,-1.321926,-4.108840,-0.479401],[-3.285822,-9.906800,4.993555,8.986484,-8.552608,-9.912633,7.755839,-1.493972,-9.048388,-5.064893,-0.780306],[-2.547999,-8.055736,-1.920048,-0.102758,5.033390,3.056464,3.713054,8.068466,2.413590,0.639204,8.493476],[3.955560,-5.502646,3.439227,-1.068975,4.355740,2.618599,-6.593876,-7.058425,-5.288776,2.132608,-9.159112],[3.906933,9.648416,1.540104,-4.907280,1.505101,1.783739,-9.627513,3.751619,-7.669134,9.595909,-4.267957],[3.810324,-3.305898,-9.760421,-9.519247,1.303036,-0.336633,-7.537432,9.484377,-5.847914,-5.136471,-7.668419],[6.170450,0.683365,3.613343,3.517889,-8.903442,-0.427503,-9.054783,-8.005085,1.160944,-3.604562,-6.580692],[-9.880044,-9.647405,7.712815,-0.607298,8.717326,0.072803,3.922648,3.937783,-7.698316,4.186039,0.548048],[3.588122,-9.574691,6.849156,4.113159,5.651873,7.392009,-7.685381,-5.171203,-3.763395,-7.968907,9.128405],[-9.604874,-3.106247,-0.692313,-7.953970,-8.834100,-0.216733,-8.588802,7.779329,7.252096,0.421867,-6.043485]],[[2.339189,-8.814826,-3.852854,0.208811,-0.543447,6.590648,-2.199553,9.211624,6.140518,8.975048,-6.782666],[2.806945,0.222620,3.863962,1.854933,-3.552806,-0.782553,-8.879452,-5.163450,-8.067880,-2.817963,0.209860],[-3.967197,1.614939,-5.516441,2.356657,-1.687243,1.477630,8.917191,9.476571,-7.546761,-3.741574,-4.475857],[-3.276653,-6.346367,-6.341624,-0.263064,-3.037931,-1.531304,-8.546497,-5.701771,4.864413,-9.465616,-2.736737],[4.433368,-7.102273,4.936558,9.958258,7.006867,-8.060916,-3.937234,-3.040428,8.138089,4.766762,-5.621122],[-0.996429,2.619794,-3.287729,-3.331292,-8.276793,-3.615714,-3.884458,5.872377,5.231319,0.444101,-0.932674],[-7.205111,-0.747915,1.050330,4.572483,1.844219,-2.257243,-7.292412,-8.659968,3.509016,-9.515987,1.607262],[-9.037604,-5.047404,2.948814,6.754129,-3.128507,7.614859,4.504734,-7.049184,-8.218807,8.363182,6.261231],[7.641095,-9.904711,-9.050887,-0.222343,9.651742,-7.027650,0.781208,7.539402,9.130846,-1.069029,-9.719919],[-6.535064,2.153739,-2.214300,6.524862,-2.266617,3.476077,-3.177791,0.235503,7.256631,4.712584,0.649262],[-6.613354,6.371379,-5.905737,-7.844196,-8.625896,0.794435,2.444542,-5.344761,5.175582,-7.515401,7.253558],[-4.319887,0.712922,-0.297568,7.211861,4.226235,-2.311497,-7.275010,5.347052,-7.717301,4.721523,2.121833],[0.520305,0.300117,-6.108927,-5.297866,-3.486192,-9.611734,-0.982071,-9.757567,-6.099267,5.772737,6.916528],[4.652047,-9.506951,-6.527161,-1.757076,1.168505,3.383048,-9.805144,-8.224543,6.177983,-1.832213,-1.405554],[-6.717213,-0.527991,1.112397,-8.259779,3.657112,3.359483,8.982530,3.411604,8.053163,6.611842,-5.816040],[-2.744738,-2.864572,8.751089,5.650812,-8.360189,6.733720,5.103192,-0.260608,9.525477,1.827083,-5.163174]]], dtype = "float32")#candidate|1643|(10, 16, 11)|const|float32
bop_1644 = relay.logical_xor(call_1633.astype('uint8'), relay.reshape(const_1643.astype('uint8'), relay.shape_of(call_1633))) # shape=(10, 16, 11)
bop_1647 = relay.logical_xor(call_1634.astype('uint8'), relay.reshape(const_1643.astype('uint8'), relay.shape_of(call_1634))) # shape=(10, 16, 11)
output = relay.Tuple([bop_1644,])
output2 = relay.Tuple([bop_1647,])
func_1661 = relay.Function([], output)
mod['func_1661'] = func_1661
mod = relay.transform.InferType()(mod)
mutated_mod['func_1661'] = func_1661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1661_call = mutated_mod.get_global_var('func_1661')
call_1662 = func_1661_call()
output = call_1662
func_1663 = relay.Function([], output)
mutated_mod['func_1663'] = func_1663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1706 = relay.var("var_1706", dtype = "float64", shape = (12, 9, 13))#candidate|1706|(12, 9, 13)|var|float64
uop_1707 = relay.asin(var_1706.astype('float64')) # shape=(12, 9, 13)
output = uop_1707
output2 = uop_1707
func_1721 = relay.Function([var_1706,], output)
mod['func_1721'] = func_1721
mod = relay.transform.InferType()(mod)
var_1722 = relay.var("var_1722", dtype = "float64", shape = (12, 9, 13))#candidate|1722|(12, 9, 13)|var|float64
output = func_1721(var_1722)
func_1723 = relay.Function([var_1722], output)
mutated_mod['func_1723'] = func_1723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_1728 = relay.TupleGetItem(func_1529_call(), 0)
call_1729 = relay.TupleGetItem(func_1530_call(), 0)
output = call_1728
output2 = call_1729
func_1731 = relay.Function([], output)
mod['func_1731'] = func_1731
mod = relay.transform.InferType()(mod)
output = func_1731()
func_1732 = relay.Function([], output)
mutated_mod['func_1732'] = func_1732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1750 = relay.var("var_1750", dtype = "int16", shape = ())#candidate|1750|()|var|int16
var_1751 = relay.var("var_1751", dtype = "int16", shape = (12, 14, 10))#candidate|1751|(12, 14, 10)|var|int16
bop_1752 = relay.greater_equal(var_1750.astype('bool'), var_1751.astype('bool')) # shape=(12, 14, 10)
func_1661_call = mod.get_global_var('func_1661')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_1774 = relay.TupleGetItem(func_1661_call(), 0)
call_1775 = relay.TupleGetItem(func_1663_call(), 0)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_1777 = func_237_call()
call_1778 = func_237_call()
output = relay.Tuple([bop_1752,call_1774,call_1777,])
output2 = relay.Tuple([bop_1752,call_1775,call_1778,])
func_1783 = relay.Function([var_1750,var_1751,], output)
mod['func_1783'] = func_1783
mod = relay.transform.InferType()(mod)
var_1784 = relay.var("var_1784", dtype = "int16", shape = ())#candidate|1784|()|var|int16
var_1785 = relay.var("var_1785", dtype = "int16", shape = (12, 14, 10))#candidate|1785|(12, 14, 10)|var|int16
output = func_1783(var_1784,var_1785,)
func_1786 = relay.Function([var_1784,var_1785,], output)
mutated_mod['func_1786'] = func_1786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_1811 = func_1286_call()
call_1812 = func_1286_call()
const_1813 = relay.const([[[9.425347,-6.213892,-0.451158,-0.783652,6.643627,-0.724269,3.477281,8.183922,-6.390726,-4.518055,1.203063],[6.703024,6.066331,3.370762,-4.968014,-2.967839,5.601612,2.005848,0.524600,2.318399,-7.136210,-9.362252],[-9.378790,-0.077300,-3.435292,6.825659,-7.888766,0.991928,-8.794954,9.516678,9.789569,-2.521872,-5.622738],[-2.887078,0.283231,-6.167439,1.746353,1.304414,5.113902,-9.709715,-7.275255,5.264728,-3.636338,-6.351179],[5.175668,0.226346,3.749125,0.224713,1.776050,-7.809906,7.883510,8.739535,8.467101,-2.947416,-8.727993],[-5.767376,1.684045,8.648266,-5.811493,-0.139262,7.498845,-0.660385,6.225058,-7.069073,7.461211,-5.932149],[-2.424645,9.336832,-3.098553,-6.522063,5.684023,-3.790005,-9.884639,-7.570276,7.516469,2.843556,5.583398],[-7.664721,3.701326,9.286869,2.049330,-5.476140,5.334059,2.077526,1.948551,9.686104,-2.183974,9.147934],[5.259914,6.963083,-3.155004,-1.814804,-7.669625,1.321830,2.847540,-4.125672,-7.063884,-5.532398,-9.469365],[4.057383,7.297046,-9.898016,-5.748475,6.508282,-2.414020,5.461751,9.231064,-5.950626,-2.662746,3.249160],[-8.828680,-0.094358,-3.407432,7.483332,-9.142223,8.865407,9.640818,3.902368,5.141884,4.220552,7.397882],[8.767182,-3.276534,-8.494568,4.073724,0.407836,4.175286,-6.150145,-8.451551,-2.948621,-9.841783,5.344846],[-6.036047,-1.949820,1.139823,8.355065,-1.741848,9.514007,-0.855876,4.128769,9.171213,4.605863,-4.788769],[6.948587,1.225633,6.516691,4.200997,0.519787,6.723481,5.102009,-0.093573,0.879937,3.275219,7.974948],[-7.789046,9.159987,4.081699,-1.285039,-2.809566,8.671536,6.424570,-6.759522,6.319449,-6.011464,6.841097],[0.735153,-7.594379,-6.240532,6.189154,3.049489,-4.114155,2.718649,-9.914542,4.233506,6.373168,-5.011616]],[[4.066940,7.762978,1.765554,5.012238,-9.583689,-6.699548,0.154471,-1.717047,-1.321413,-2.561490,9.678224],[5.539751,1.182454,-8.112128,7.131531,5.839147,1.259438,9.682908,7.362932,7.571790,3.812821,-7.954916],[-8.955327,0.865174,4.529895,1.797562,1.300151,-9.708601,7.641871,-8.637156,6.445813,5.678350,-3.765703],[6.952311,4.477980,6.765895,-6.861677,3.850303,2.727898,-1.458030,-2.906111,1.213482,-1.346264,-8.646121],[-0.693606,-7.248957,5.919530,4.199565,-3.293871,1.228646,0.732076,-5.886301,-0.473591,5.219568,-5.359601],[-4.064964,8.621461,-8.242400,1.552177,-7.850287,3.094307,-8.445259,-7.381886,4.533686,-4.415690,4.284523],[0.441656,-7.139737,2.547979,3.149535,9.816282,2.188693,4.633048,-6.986947,-2.591526,0.685122,6.923935],[-7.706646,2.599113,-0.411228,-4.744327,1.233254,3.858710,-4.575736,1.617983,-1.608943,0.204031,-2.153880],[9.646503,-7.651247,3.310212,-4.363571,4.233684,-8.164482,-0.623222,-5.376716,-5.642975,-8.097873,8.433261],[1.156800,9.067265,4.929418,1.719642,0.804273,-0.581071,-7.172387,5.817378,-8.077945,-1.041250,3.706405],[8.425283,6.583690,-5.092408,5.226845,-3.807292,-0.163029,-0.811271,5.273256,4.513363,3.534074,-4.527880],[0.395490,-0.091044,-3.286667,5.919367,6.492284,5.624381,-3.338136,-6.356106,-1.606661,-1.331765,-0.626640],[-6.900628,-8.016667,8.250546,-4.194890,-1.054768,8.644123,3.268292,2.724636,-0.733884,-9.660566,4.474165],[9.774712,-0.794264,8.436709,-6.976876,-8.967824,7.868712,8.712265,-5.679583,-9.337550,3.252391,6.136873],[8.187392,3.306045,1.491963,1.981286,8.368767,-7.193354,-9.852571,-4.753301,-2.305847,-4.868442,-1.226463],[-5.785252,9.284202,9.152400,-3.885964,4.173408,1.962231,3.239989,-6.561435,9.002082,8.309540,-4.092716]],[[3.854485,7.750287,8.314929,8.106831,2.959779,-4.731584,-9.384436,4.354469,-3.286332,-1.938875,-6.257028],[-0.797215,9.754100,-1.781140,9.983611,-6.790456,2.132652,-1.917701,4.504118,-3.640224,0.287843,8.517541],[-5.465318,5.967491,-4.969835,-1.235246,4.974100,4.822641,1.608431,-9.471949,-2.869163,2.096354,-9.559903],[-1.122420,-4.359193,-1.924051,9.139496,7.703624,-9.193053,-7.231303,6.688566,9.957518,9.552129,2.535884],[-3.529303,-8.631105,-9.884166,0.427913,2.552010,8.157209,-4.723440,-9.683525,5.338634,-2.211395,-3.253314],[-6.302968,7.337722,-0.659140,3.840507,8.949486,8.981340,-7.465285,-1.270477,-2.843474,-7.555043,9.156434],[9.066962,-7.239948,0.879633,4.836829,-8.189426,2.239214,1.187548,-3.504027,3.050816,1.882943,0.375884],[5.234771,3.067433,-7.360413,1.261829,-0.032342,1.085666,2.522754,3.629683,-4.562553,6.139940,-3.892233],[1.843498,8.720460,-4.000049,-1.731623,-3.937855,1.446282,8.499114,0.841724,0.490348,-8.808829,3.421661],[-6.041773,-0.430153,-0.567533,-0.508340,-5.980209,1.049907,2.153596,-0.074215,-7.613591,9.242566,-3.753467],[7.794068,0.642861,-0.274361,7.521739,4.742191,-2.984346,-0.929107,0.989813,9.355259,-8.731278,7.631189],[2.342209,3.406687,2.960377,8.694350,-1.556213,2.312934,-0.058586,6.150110,9.312107,2.574731,-9.181278],[-6.169548,-3.715032,7.766493,7.177931,-2.305895,9.755768,-0.718681,-2.830443,-6.680436,-4.531882,-0.638412],[1.458812,-4.869808,7.414089,3.517359,0.133590,8.510765,9.478933,-0.090224,-8.231415,0.961093,8.393653],[-2.482562,-0.543279,-5.798080,-3.862951,8.981623,-1.954593,3.120843,2.236935,5.886984,-5.294211,-1.111935],[6.192111,-3.567751,-3.316997,5.934138,1.852469,9.120240,4.340588,-6.928284,6.175101,5.610623,7.660905]],[[6.137607,7.489361,5.083143,0.435210,-4.464747,7.715638,-8.430579,-1.835926,2.659536,9.094844,6.562909],[-6.279448,7.277863,4.276338,5.850024,9.589545,0.120556,7.873565,-9.071109,8.327031,5.152459,-3.730186],[-3.632103,-4.626729,-9.845911,-3.344221,-3.923157,-8.673837,-7.307696,-8.564766,-1.196515,-5.256233,2.900026],[8.184548,7.184598,-4.518964,3.890133,-5.975308,4.296503,0.025316,1.740323,-1.456069,-1.077677,9.203937],[-2.179327,-8.591898,7.774404,2.247232,-0.601272,-2.456837,2.909069,-2.335338,9.506219,-2.441159,1.100143],[2.974139,2.468723,-9.673580,-1.336332,5.262579,-5.797376,0.551197,-6.935918,-4.161257,0.328523,-4.767912],[3.656174,9.750405,-8.337129,1.356802,6.251924,-6.945665,-9.891889,-6.872321,-9.639692,-9.639713,0.469174],[-9.519258,-9.405550,-3.152928,8.902433,-5.197985,-6.624554,-4.522977,6.723037,-2.089017,-0.723213,2.045235],[-5.905871,7.491462,4.252703,5.090946,2.293164,6.948658,-6.249283,-9.027668,-7.416774,-1.028920,-0.033011],[8.124231,-1.915219,4.802594,-4.534656,-8.545836,-7.214333,6.376775,2.151204,6.425919,-3.946401,-3.615802],[-8.450543,7.612676,3.086046,3.310764,-6.301477,0.732465,8.633925,6.090504,3.930904,-1.232787,4.581665],[-8.478499,-7.731451,5.500786,-7.892304,4.255452,-0.809688,8.397886,-1.306888,-6.528077,-3.670063,2.465934],[-3.087755,1.997723,-1.294548,3.347884,-5.281531,-1.453187,4.012252,6.199197,7.328322,0.177050,4.320512],[8.091917,1.546947,-5.552496,1.048480,8.593181,-7.676339,-9.693565,-1.848658,-8.439164,5.670046,2.705168],[4.534074,-8.535312,9.554219,-5.661536,-1.922486,-5.927874,5.493262,6.552552,0.777647,-9.796047,-9.760249],[-5.586778,5.742265,7.611047,-1.251989,1.967996,1.187375,-0.806707,4.877669,-9.983927,5.232248,-8.435950]],[[1.952042,0.116470,-4.960791,2.303786,-7.552197,-8.147730,-0.698645,-8.868659,-4.234906,-7.978291,9.852240],[8.409328,-4.523961,2.177103,-4.361416,-6.465898,5.323503,-2.224799,-7.664419,-2.964174,-8.557191,-6.246971],[-6.048207,6.396822,-8.193511,7.899604,-1.040607,6.683624,-8.891846,-3.240815,-6.668055,-3.855888,1.569832],[8.772995,-4.234569,-6.504478,-9.542296,-5.198648,-4.537748,-4.690205,0.810869,-1.994291,-9.783078,-5.057886],[-1.964852,3.882822,-2.117648,2.060843,4.198284,2.689324,-0.697218,-5.923786,-3.533393,-4.270059,-4.481200],[1.731870,-2.863252,9.345021,6.364373,6.912745,6.236165,-1.452538,-5.920430,6.922194,3.981571,-0.219380],[-3.541745,-4.551673,1.675097,3.676643,1.515916,5.077822,2.204061,-3.865546,1.741661,-0.397809,1.534673],[-0.975955,-2.657456,5.924358,-7.821414,-2.279648,-0.209973,0.427738,4.084051,5.231650,8.244809,-2.809725],[6.811248,-6.035006,-8.354691,8.280551,1.528381,4.931381,8.080085,3.135733,-5.967718,9.394474,7.816986],[-9.489934,8.719119,6.601065,1.895370,2.571176,8.137951,7.352117,9.649367,7.052769,-0.589020,-7.304264],[1.741733,0.157257,9.416089,-3.943413,6.279679,6.466066,-7.571912,4.887651,-8.217396,-1.538299,-3.414004],[6.590967,5.793826,8.052031,-9.368911,9.548610,7.447260,9.290599,5.576169,1.990617,4.846755,-9.723460],[-4.977923,9.284821,-4.750745,-2.474789,7.373918,-0.561832,-7.449138,-3.981561,-7.965731,-1.753869,-9.466179],[-8.812207,4.645044,-6.124218,5.819306,-2.862497,-2.427107,-7.995693,6.524801,-4.563168,2.387180,8.065778],[-7.007916,-1.344063,-9.052400,-4.474821,-9.169309,-8.722126,3.575744,-9.529219,9.022259,-0.306426,-3.147504],[4.524941,6.131456,-8.036058,-9.864321,-7.403993,7.193903,4.102682,8.718214,-4.862444,6.943532,8.131891]],[[8.720706,4.021014,-3.246535,5.523768,-9.273096,-7.677542,-2.803909,-5.778138,0.163909,4.069658,0.590902],[-7.912322,-1.692708,0.022777,1.315108,-5.005025,-1.569661,-5.494748,9.700994,-1.070376,-1.890011,1.323751],[5.200019,2.454187,-4.101376,-0.643080,-6.306906,-1.987804,0.375609,-3.897717,-1.769429,-2.690267,-5.830747],[0.792658,-1.599295,3.501017,2.805993,4.508282,3.880611,6.657604,0.667124,0.009140,-4.751565,-1.421528],[2.394310,-4.365513,-7.900252,4.619186,5.079233,-1.853258,-1.927474,-6.879198,2.524156,-4.855508,4.278813],[-6.181435,2.473214,-8.084004,-5.764753,-2.337938,1.701312,5.295351,6.501868,-3.315772,-0.558225,-5.470456],[-0.738478,-9.908431,-5.662338,-9.110843,-3.035585,-5.435798,2.208421,7.467080,2.195849,9.379068,-9.473168],[-4.757939,3.672146,9.622162,-6.159177,-0.323588,-6.489080,-8.459318,-6.678764,-1.980843,7.056316,-1.865712],[1.371782,-7.325726,0.410210,2.605542,8.715617,7.102113,-8.203030,-2.296814,-1.682226,-6.798032,0.562935],[0.117958,2.119226,-1.052331,-5.158781,9.927446,-4.416221,3.914841,-9.968003,4.252505,-1.304591,-9.887831],[0.298399,3.041196,-0.027419,5.657636,-6.629871,6.899623,-0.959990,9.521650,-1.006098,6.154118,-3.754210],[0.264811,3.878449,-3.968857,4.798121,1.591440,2.693699,3.906377,-8.794142,4.885311,8.872472,-7.372955],[-9.193105,6.205826,7.187890,0.779884,2.635228,-4.329270,-5.942023,-7.060751,2.352358,-1.580540,1.601574],[-8.694147,-5.349129,-6.300090,-6.711054,-0.113862,-3.769485,-2.264954,-1.563461,-8.929818,-0.055302,-8.956359],[3.090426,-2.517915,-2.857288,-9.364287,-3.337265,3.312926,-7.641385,0.473525,1.825497,-7.367531,9.400283],[0.991846,-0.546402,4.213885,-0.569218,0.833849,-5.990174,-6.868252,1.543950,-9.888492,-4.283356,-8.237877]],[[-2.276233,4.969854,3.331611,5.584539,-4.189793,-8.867071,-9.462118,3.607724,-0.063214,4.225624,4.837729],[9.813442,-6.443955,-5.085437,-2.110563,1.695884,-0.729654,-7.744661,-1.100814,-7.513061,-3.673289,-3.821263],[-3.976499,5.910981,-7.067217,-4.940569,-3.460684,-0.058624,7.009846,5.696193,-8.720236,-1.465544,-2.706834],[-5.632478,0.037792,6.787148,-7.457077,-4.824388,-6.640545,1.532257,-0.225104,-4.774945,6.143715,7.689781],[0.557056,-9.311971,-7.705084,4.044926,6.917186,4.580639,-3.149128,-2.810706,-6.447969,-0.354984,-8.926018],[-1.057194,6.683426,-1.960519,9.007851,4.799512,-4.694623,-1.136388,1.897086,9.032831,-1.415540,5.870655],[-0.377411,6.568730,-8.861100,9.235150,7.582706,-0.858144,-2.856692,3.321008,-9.545247,-9.127079,8.260043],[7.635443,-6.357477,4.397904,-8.444409,-4.470311,9.895904,6.488385,3.587669,-3.614267,-1.770937,6.517748],[2.061162,8.119946,1.489549,0.667817,-8.731387,6.400481,1.050609,0.735134,9.000175,-6.907887,5.288276],[5.553619,-9.373826,6.439443,-8.485633,5.822458,-9.017010,4.705088,0.680957,-2.809751,-8.417451,-0.195842],[-1.387583,8.893762,3.483181,-2.423851,9.821448,7.031849,-6.153280,6.151653,1.687716,-0.730355,4.593790],[-7.481775,-6.443682,-5.958967,-7.267533,0.956639,0.363898,4.480900,-3.212177,3.891317,6.243485,-2.843008],[-4.555726,-8.195421,-3.564629,6.222864,-1.778015,-4.073662,-1.163121,4.288572,-1.950651,8.406549,3.032455],[-3.535719,9.905215,-4.009886,3.498547,-6.271200,-2.815879,9.459687,6.737236,-4.455907,-5.898605,7.207023],[7.791062,-6.185949,0.337125,1.935585,-3.000135,-0.418573,-4.700825,-0.086922,5.790558,0.491504,1.454090],[5.557801,1.285727,-1.790176,-3.883700,-8.423446,0.261339,3.143757,-5.944457,7.329121,1.254890,-8.592016]],[[-4.288177,3.695247,0.472019,0.747441,2.255416,-2.670921,-8.341250,4.211348,-1.972610,4.332094,-9.146786],[-1.709891,0.168552,4.357986,7.870179,-6.123967,-5.595823,-3.008352,-7.905590,-3.416514,-7.865134,-6.306279],[0.154040,3.600020,2.803866,0.213693,-5.560313,5.679046,-7.623559,-2.630288,-0.477506,7.193546,-3.589121],[7.080941,-9.525020,-0.099614,-7.492080,2.216498,-4.854234,5.395803,6.259919,1.257339,-8.046975,-0.561046],[8.871007,-9.729436,1.857288,-6.258158,6.020271,4.910609,8.290607,-9.386780,-5.925770,-1.691334,9.271578],[8.152402,-5.524087,-7.587953,5.601251,4.345847,0.291338,-6.448476,-9.544972,-9.192276,-9.870538,1.275623],[3.650536,0.101481,6.960557,7.396053,6.193789,-1.634559,9.787137,-9.818491,4.150092,-0.469740,-6.089923],[9.264203,6.169999,-8.229967,9.349221,-5.583431,-3.248321,8.039696,5.272925,-7.882820,5.922680,-5.058432],[5.771147,3.623385,6.688698,5.701901,-5.497491,-7.898469,-3.038083,-1.724085,-4.342299,-2.000933,-8.942502],[-4.942596,-7.229366,7.877960,3.214734,6.124995,-0.792174,7.841704,-7.207414,2.820723,-3.789834,-6.830144],[3.144444,-4.203482,7.918038,-5.911011,-7.532194,0.926673,8.181083,-2.534692,7.569130,0.111441,-4.082957],[1.485996,6.517011,-6.344220,-5.668538,-4.255510,1.328015,2.568397,1.938653,-7.399378,-2.241444,2.163610],[-1.213905,0.688022,5.349903,-6.793532,2.862775,-0.935785,-2.939620,-0.923800,4.038034,-9.293167,-5.713267],[-3.292152,5.748871,9.700881,-3.357718,7.251072,8.131020,-5.582515,7.637902,-6.190006,-1.145170,4.112171],[9.194924,7.147711,-3.638716,6.251906,1.535984,3.166983,2.405718,6.898920,9.774091,-3.736025,1.979337],[3.044319,2.944920,4.905863,-0.227661,9.022764,5.395641,-8.930704,-5.093642,-9.276182,5.751812,0.677516]],[[-2.071079,7.555707,8.722812,-5.593082,-6.036736,-6.393827,-7.162946,-4.198833,-0.676151,-0.346853,-2.138617],[-5.784395,1.385258,9.588270,-8.875662,9.554273,7.670197,-8.860476,-3.534265,0.129860,-8.507757,0.294730],[4.687997,1.457671,8.541049,0.348271,-2.579083,-1.546500,-1.351036,7.056786,-4.451167,-0.755771,3.097389],[7.826227,7.608166,-1.342766,-4.700029,-6.147141,3.293265,8.631732,-3.964478,0.583574,-3.511451,-0.421306],[7.849976,7.153051,-3.215059,6.934201,-8.069792,8.430268,3.584632,7.465196,4.685658,6.048299,5.698698],[7.386504,-6.769122,3.628775,5.181348,4.384995,3.555663,-1.957239,-3.848497,0.163011,-3.488319,7.740078],[-0.755207,2.599430,-0.992683,8.930670,-0.918993,0.135632,8.920985,8.691322,-7.388670,0.822901,-1.289816],[1.167219,9.835691,3.017714,-6.259717,4.271175,-5.176685,-7.324107,1.352958,-8.686517,9.108759,-4.044095],[-1.103182,7.606024,0.811968,-4.133612,-6.729378,-1.933998,-0.747403,-7.699916,-8.588266,-1.157437,-1.639313],[-9.346124,-4.398163,0.400877,-6.555059,-1.891586,-6.843788,-1.334421,-7.077191,9.971389,-0.823281,-9.582828],[1.019927,8.458175,-6.623035,-7.416035,0.176393,-3.967178,-5.442125,7.940742,-9.608353,8.261785,1.654516],[-6.069762,1.260516,-9.858798,2.710882,-0.364294,7.890449,0.578264,1.077147,1.552933,-8.315088,-0.287973],[1.457011,5.623725,5.663371,-3.834590,-2.762584,-4.797834,-7.830679,-3.648322,1.623299,2.118342,-9.358453],[-5.144486,-6.868290,-7.226319,-2.808238,1.306565,-6.165130,0.222664,-6.124107,-4.934524,-3.108491,-3.883760],[-9.547794,-3.961116,9.861207,-6.803239,-0.351039,-7.092749,-0.167904,4.466237,6.397027,8.518779,-3.847914],[-7.383162,-0.654482,1.993068,3.148871,-5.370571,-4.993289,-8.305425,-5.313735,-4.676025,1.187374,7.236270]],[[2.363548,-1.038842,-2.729842,5.808087,-8.897808,7.271152,-4.389734,7.597310,-3.523469,2.092687,9.412594],[-3.918118,1.176241,-0.567676,1.656176,-3.453152,3.115777,-1.013373,-8.773504,-8.004057,7.709571,-0.784791],[-1.451205,2.627957,8.833733,-0.545083,-6.526059,-5.567537,7.230194,2.025755,-1.512749,8.666099,-5.796903],[2.396752,2.305947,-6.100246,5.386337,8.511087,-2.403479,-3.668434,1.135725,-5.470947,-8.734078,1.170476],[-4.416366,-9.662668,2.055822,-5.962726,8.792955,-3.199069,5.121400,9.853212,2.180161,-6.582816,-3.775228],[7.216640,4.341363,4.654626,-4.597871,5.191657,0.007344,-2.432610,-3.108619,8.033370,-8.767199,-3.345723],[-4.595754,1.069558,-3.042288,6.714574,-4.642761,4.182770,0.639693,2.310208,6.086224,-8.165898,7.562002],[4.175059,1.903187,5.835032,6.329780,3.092920,-6.031404,7.658204,-3.190811,7.775030,-4.975813,8.742147],[1.759985,1.098628,1.980523,-3.560821,-5.095307,-7.822232,-7.214798,-7.630595,-2.557183,5.370662,-8.697446],[6.968323,1.328205,8.116381,2.455863,0.301461,-1.194186,-7.501304,-4.736194,-6.394358,-9.510957,-0.533498],[-5.659575,-0.891085,-3.469910,4.656821,6.771939,-2.558015,1.782715,-9.226491,-6.795332,-5.920525,-9.266677],[-7.864228,2.360163,-7.848723,-3.008318,-1.982962,0.806340,2.809558,-2.748376,-6.734472,5.031664,-9.955945],[-2.442666,-4.588637,4.600411,2.294210,2.922617,-1.733259,-7.721858,-9.144104,-5.993395,-9.953294,-1.029554],[0.679834,-9.580629,-2.969509,-2.447762,6.143628,6.648876,1.864531,-8.817197,-1.918914,9.213671,-9.410391],[2.928136,-2.843836,3.845401,2.098692,-7.516171,-2.384326,-1.096604,-0.974612,0.914044,-1.714080,7.067379],[5.076448,-5.300953,3.322159,3.354818,-1.103456,2.345995,-5.708692,6.823823,-0.225829,-4.657570,-5.600841]]], dtype = "float32")#candidate|1813|(10, 16, 11)|const|float32
bop_1814 = relay.left_shift(call_1811.astype('uint16'), relay.reshape(const_1813.astype('uint16'), relay.shape_of(call_1811))) # shape=(10, 16, 11)
bop_1817 = relay.left_shift(call_1812.astype('uint16'), relay.reshape(const_1813.astype('uint16'), relay.shape_of(call_1812))) # shape=(10, 16, 11)
output = bop_1814
output2 = bop_1817
func_1822 = relay.Function([], output)
mod['func_1822'] = func_1822
mod = relay.transform.InferType()(mod)
mutated_mod['func_1822'] = func_1822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1822_call = mutated_mod.get_global_var('func_1822')
call_1823 = func_1822_call()
output = call_1823
func_1824 = relay.Function([], output)
mutated_mod['func_1824'] = func_1824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1096_call = mutated_mod.get_global_var('func_1096')
call_1854 = func_1094_call()
call_1855 = func_1094_call()
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_1859 = func_576_call()
call_1860 = func_576_call()
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_1863 = relay.TupleGetItem(func_854_call(), 0)
call_1864 = relay.TupleGetItem(func_855_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_1878 = func_800_call()
call_1879 = func_800_call()
output = relay.Tuple([call_1854,call_1859,call_1863,call_1878,])
output2 = relay.Tuple([call_1855,call_1860,call_1864,call_1879,])
func_1885 = relay.Function([], output)
mod['func_1885'] = func_1885
mod = relay.transform.InferType()(mod)
output = func_1885()
func_1886 = relay.Function([], output)
mutated_mod['func_1886'] = func_1886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_1960 = func_800_call()
call_1961 = func_800_call()
func_514_call = mod.get_global_var('func_514')
func_516_call = mutated_mod.get_global_var('func_516')
const_1966 = relay.const([4,10,-9,8,-3,-2,4,2,-4,-2,9,-5,2,9,7,-5,-5,4,-2,-2,1,-4,1,-5,-2,-5,-5,-7,8,-4,3,6,6,6,4,-1,-1,10,-10,9,3,4,6,2,-7,-1,-8,10,8,-2,-3,7,-9,-8,-3,-10,2,-2,-7,-4,-5,-5,-3,8,1,4,-4,-8,10,-9,-4,9,7,6,-10,-8,-5,-9,-10,-10,7,-4,8,2,-9,-1,4,-1,-1,-4,-7,-5,9,-1,-9,9,8,6,7,-2,-3,-1,10,7,-9,4,7,-8,-1,3,-9,-9,8,-1,-5,3,-5,-4,-8,-10,-2,-3,-2,-5,-8,-7,1,-6,-1,-3,-1,4,-5,-4,-9,-10,-7,-2,-1,-3,5,10,6,-6,4,-3,8,-4,10,-5,-2,-2,7,-9,-2,9,-4,7,4,7,3,-2,9,-3,4,8,3,5,7,-8,8,-10,6,-2,-9,6,-9,2,-6,9,-2,-6,-10,-3,-6,-7,8,-7,-3,5,-8,-5,-1,6,-1,-7,-1,-8,-3,7,-1,4,-2,-6,-1,-8,-3,-5,1,4,-4,6,4,-6,4,8,8,7,-4,6,5,2,8,-4,9,-2,1,-8,-2,3,10,3,3,9,-6,-3,-8,9,-2,-4,3,6,5,-8,-10,5,2,9,2,5,2,9,2,-5,-10,-7,-6,6,7,-8,-5,-9,3,-2,-6,10,-4,-10,-6,-1,6,1,1,3,1,4,-6,-3,-1,-3,2,8,2,-10,-3,-5,1,2,5,-7,-9,-2,-6,-4,-10,5,-10,-7,1,1,10,-4,5,-2,-1,7,-2,7,-4,4,-9,7,1,2,-5,5,-10,-8,-3,5,9,-6,-1,-8,3,10,-10,1,-4,3,-7,-5,-5,4,-3,-6,1,3,4,-10,3,10,8,5,6,1,6,2,9,1,-5,2,10,1,-9,2,-10,5,4,1,-8,3,6,-7,-9,5,-7,3,4,-1,4,5,6,3,-2,7,-5,-5,-6,-8,-1,1,1,5,-10,10,-8,10,-9,-3,7,2,-2,7,-7,3,7,6,-9,-7,7,-5,-6,-8,-7,-5,-3,-10,-2,-1,1,9,-7,10,-7,-7,6,-9,6,-7,-10,-9,7,-8,-6,8,-2,-7,-3,8,-4,4,8,2,3,-9,10,-6,9,6,2,5,2,-6,9,-6,-1,-10,-4,-3,2,7,-9,-8,8,6,-9,-5,-4,-7,5,3,4,4,-8,4,-8,3,-6,8,7,4,-6,1,2,-3,3,-4,1,-6,3,-10,-1,-8,6,-2,1,-2,-7,-7,1,5,-7,-3,-4,-9,9,10,6,8,6,-6,-8,-4,-3,1,2,-10,-2,7,-1,5,-8,1,-2,6,1,-5,-2,1,1,-1,-7,-1,-3,-4,-5,-4,5,6,4,-7,6,1,2,-3,-3,5,-5,-8,-3,3,-3,-10,10,-8,-8,9,-7,-1,-4,2,-9,7,3,2,-10,-3,-2,3,-1,-6,6,-10,-6,3,-5,7,-2,-2,10,1,1,-4,1,4,-6,8,6,6,10,3,-2,3,-7,-1,9,8,7,10,7,9,-4,7,6,-3,-1,-4,-9,9,10,-4,3,8,1,-10,-1,4,-6,7,-4,-8,9,10,-7,-3,-10,-7,-8,-2,2,-7,-1,-10,4,8,-8,-5,-10,-4,-7,-7,3,-9,-6,9,-5,1,-9,-2,8,3,10,-10,4,-9,-10,-7,10,-3,-8,-4,-9,8,6,1,4,8,1,-6,4,5,4,7,7,-8,-2,-8,7,-9,10,7,-3,7,4,8,-9,-2,-4,-4,-10,-5,-7,1,1,-7,9,6,-10,7,-6,-4,9,-9,6,3,-8,-6,1,8,-9,-4,10,2,3,-6,6,6,-5,-10,10,4,-10,-2,-2,-5,-9,1,9,1,-5,-2,6,-8,-5,-9,2,3,-8,2,-9,-8,6,-8,-3,8,8,10,-2,-5,7,-3,9,-2,3,4,-3,-10,4,-5,-9,-6,6,10,-4,-6,9,1,-7,7,-7,4,5,-8,-4,-7,-7,-1,-9,-1,-8,-6,-6,6,-8,-5,-4,-2,5,-10,-2,-3,2,-9,6,5,-7,-2,-6,8,1,-6,4,-4,7,-7,2,7,5,4,8,-7,8,7,6,-7,-1,-2,2,-6,-9,-9,5,5,-4,3,-8,-6,-10,4,10,-4,6,-8,1,9,-8,-3,6,5,8,-1,-10,7,-2,5,2,-3,-5,-7,6,8,-4,-7,8,-10,1,5,2,9,-10,-6,-4,-1,1,-3,1,8,-2,-6,8,9,1,9,5,-7,-2,9,1,5,7,-6,-1,6,1,4,-9,-7,6,-6,-5,5,-4,-5,4,5,-10,-10,7,-4,7,8,-2,8,2,-8,7,-8,10,5,5,-3,-3,8,8,-10,2,3,-4,4], dtype = "int8")#candidate|1966|(910,)|const|int8
call_1965 = relay.TupleGetItem(func_514_call(relay.reshape(const_1966.astype('int8'), [455, 2])), 2)
call_1967 = relay.TupleGetItem(func_516_call(relay.reshape(const_1966.astype('int8'), [455, 2])), 2)
func_556_call = mod.get_global_var('func_556')
func_561_call = mutated_mod.get_global_var('func_561')
var_1974 = relay.var("var_1974", dtype = "float64", shape = (1800,))#candidate|1974|(1800,)|var|float64
call_1973 = relay.TupleGetItem(func_556_call(relay.reshape(var_1974.astype('float64'), [8, 15, 15]), relay.reshape(var_1974.astype('float64'), [8, 15, 15]), relay.reshape(var_1974.astype('float64'), [8, 15, 15]), ), 1)
call_1975 = relay.TupleGetItem(func_561_call(relay.reshape(var_1974.astype('float64'), [8, 15, 15]), relay.reshape(var_1974.astype('float64'), [8, 15, 15]), relay.reshape(var_1974.astype('float64'), [8, 15, 15]), ), 1)
func_334_call = mod.get_global_var('func_334')
func_337_call = mutated_mod.get_global_var('func_337')
const_1980 = relay.const([[-3,8,-8,-3,8,-9,6,1,2,9,-5,-1,-10,-8,2,-3,-9,-2,3,-1,-3,-8,-8,6,-10,-2,-3,1,-1,-2,-7,9,5,4,-9,10,5,10,8,5,-2,5,10,-1,-5,4,-5,9,-6,-7,-9,-4,5,-8,-1,3,2,1,5,4,2,-3,1,-8,-8,10,1,2,2,-1,4,8,-3,9,10,8,-1,10,7,-9,-2,2,6,1,5,3,-7,7,-2,8,10,-4,10,-3,2,4,2,9,-2,-4,-6,6,7,-5,-2,1,-10,-2,-8,9,-6,6,-9,-4,9,7,6,-9,9,-4,-7,-10,9,-9,-9,-7,-3,3,-9,-2,8,4,-5,6,6,-2,4,-10,-5,8],[-1,-9,9,6,-2,8,10,-3,-4,-8,9,-3,-3,4,4,-2,-8,-9,4,6,-6,5,8,-2,6,-5,9,8,3,-9,-5,-3,-1,-1,-8,2,-5,1,-4,-10,-2,-7,-2,-2,-8,-3,-2,-7,9,-10,9,2,-9,-9,-3,-5,-3,7,-9,2,9,-2,2,-6,1,7,-5,6,-1,7,2,-10,-6,2,-7,3,-10,9,-8,2,-8,-9,-9,9,10,5,-9,8,-1,3,3,-5,2,-4,8,10,-6,-1,4,6,-7,5,-5,3,3,3,1,10,2,4,1,-8,-2,3,-8,-9,7,10,9,7,9,-10,10,2,6,-3,-9,-4,-9,-5,6,-3,10,-7,9,2,8,6,4,1],[3,4,5,3,7,-3,3,-7,1,3,10,8,9,-5,2,-2,-9,9,6,-10,-9,5,-10,5,8,1,-3,-5,1,-5,5,-1,2,10,1,3,2,-2,-2,-4,-4,8,4,-10,-5,-9,10,5,-10,-2,-5,-1,-2,-1,-9,-5,-2,10,10,10,-5,-4,-10,7,-3,1,3,-7,6,-1,5,-9,1,-2,1,6,10,9,8,2,-6,-1,6,5,-8,-10,-2,-9,-10,6,2,7,4,3,-1,-5,-7,-7,-6,8,1,-8,-7,-8,9,-8,7,-6,1,-5,4,1,-8,-8,-3,10,-4,-6,9,-8,9,-9,3,-9,5,-9,4,4,-10,-6,-9,-6,-9,4,6,4,9,-4,-1,1],[7,-8,-9,2,-3,2,-9,4,3,-3,9,-6,5,5,5,5,-3,2,3,3,4,-7,8,-8,9,-7,3,9,5,7,7,1,-2,5,-7,-1,-6,4,2,-2,-7,1,4,9,3,9,-5,1,-3,3,5,-3,-4,6,10,1,8,-7,-2,-4,-10,5,5,-5,4,-2,-1,1,-1,5,6,-7,6,9,-10,-2,-7,-8,-5,-3,-10,-8,-10,-8,8,2,-9,-10,-5,-4,-5,-5,-3,7,5,-7,-6,6,5,-9,-9,-1,-2,-5,2,-3,-8,-9,3,-1,7,3,-2,-9,3,2,-1,-10,3,-1,5,-2,-2,5,7,4,-3,-7,-6,-4,6,-8,-10,-1,4,-10,8,3,2,-7]], dtype = "int8")#candidate|1980|(4, 140)|const|int8
call_1979 = relay.TupleGetItem(func_334_call(relay.reshape(const_1980.astype('int8'), [8, 5, 14])), 3)
call_1981 = relay.TupleGetItem(func_337_call(relay.reshape(const_1980.astype('int8'), [8, 5, 14])), 3)
func_1440_call = mod.get_global_var('func_1440')
func_1443_call = mutated_mod.get_global_var('func_1443')
const_2002 = relay.const([2,-4,-4,-6,-8,-8,7,9,-4,3,-9,-10,-10,2,-9,-2,9,-2,10,3], dtype = "int8")#candidate|2002|(20,)|const|int8
call_2001 = relay.TupleGetItem(func_1440_call(relay.reshape(const_2002.astype('int8'), [10, 2])), 2)
call_2003 = relay.TupleGetItem(func_1443_call(relay.reshape(const_2002.astype('int8'), [10, 2])), 2)
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_2013 = relay.TupleGetItem(func_1529_call(), 0)
call_2014 = relay.TupleGetItem(func_1530_call(), 0)
bop_2015 = relay.logical_or(call_1960.astype('bool'), relay.reshape(call_1979.astype('bool'), relay.shape_of(call_1960))) # shape=(10, 16, 11)
bop_2018 = relay.logical_or(call_1961.astype('bool'), relay.reshape(call_1981.astype('bool'), relay.shape_of(call_1961))) # shape=(10, 16, 11)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_2044 = func_1333_call()
call_2045 = func_1333_call()
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
const_2049 = relay.const(-0.856479, dtype = "float32")#candidate|2049|()|const|float32
call_2048 = relay.TupleGetItem(func_1081_call(relay.reshape(const_2049.astype('float32'), [])), 1)
call_2050 = relay.TupleGetItem(func_1084_call(relay.reshape(const_2049.astype('float32'), [])), 1)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_2051 = relay.TupleGetItem(func_854_call(), 0)
call_2052 = relay.TupleGetItem(func_855_call(), 0)
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_2057 = relay.TupleGetItem(func_1529_call(), 0)
call_2058 = relay.TupleGetItem(func_1530_call(), 0)
bop_2064 = relay.power(var_1974.astype('float64'), call_2048.astype('float64')) # shape=(12, 10, 1800)
bop_2067 = relay.power(var_1974.astype('float64'), call_2050.astype('float64')) # shape=(12, 10, 1800)
func_156_call = mod.get_global_var('func_156')
func_159_call = mutated_mod.get_global_var('func_159')
call_2073 = relay.TupleGetItem(func_156_call(relay.reshape(const_1966.astype('int8'), [14, 13, 5]), relay.reshape(call_1965.astype('int8'), [14, 13, 5]), ), 0)
call_2074 = relay.TupleGetItem(func_159_call(relay.reshape(const_1966.astype('int8'), [14, 13, 5]), relay.reshape(call_1965.astype('int8'), [14, 13, 5]), ), 0)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
call_2078 = relay.TupleGetItem(func_629_call(relay.reshape(const_1980.astype('int8'), [560,])), 5)
call_2079 = relay.TupleGetItem(func_632_call(relay.reshape(const_1980.astype('int8'), [560,])), 5)
func_992_call = mod.get_global_var('func_992')
func_995_call = mutated_mod.get_global_var('func_995')
const_2082 = relay.const([-3.258531,-9.038452,-4.107566,6.909635,6.042219,0.062835,-7.129294,7.971093,9.417575,7.026100,5.479479,6.949052,7.969674,-0.980710,6.738521,-6.627432,-7.235488,9.083656,4.023930,-3.975608,1.205015,-9.200231,8.388398,-4.711338,1.199832,-3.143529,-7.107634,-6.479058,0.138236,-9.962706,-9.256181,-1.817728,5.122101,8.110633,-6.970275,8.234362,-2.388902,-2.055049,3.876936,-8.081594,-5.025474,1.492441,-2.915939,-2.395224,6.405867,4.080817,-3.126813,-3.442648,8.666940,-6.267601,1.228512,9.513901,7.538512,9.578940,-9.625642,1.346338,-0.572221,8.856217,5.463011,-4.007207,-6.546704,-5.534668,3.502004,-7.922036,-5.632156,2.031178,-2.825045,9.210953,-3.249330,5.314573,3.732509,2.933810,4.970547,-6.529173,9.687403,6.863238,-9.241431,-3.711189,9.174108,-4.175380,7.636629,8.998266,0.676098,-6.678401,-7.877565,-0.850829,-4.720504,6.732114,5.641511,-0.371275,8.252861,-0.692124,5.179622,5.667269,-6.013091,4.450425,7.272099,7.998405,3.840628,-7.073045,1.894953,8.922006,5.165917,-7.113927,3.403324,5.311120,-1.045784,-3.376892,-6.819737,-7.133746,-1.442490,-2.580537,3.097056,-3.822436,5.510626,-2.190088,1.812411,0.324464,-3.010666,6.968280,-6.648645,-4.546075,4.357527,0.168864,5.702644,-0.562855,2.964074,2.370721,-6.407515,6.582216,8.819024,6.024286,-2.753155,2.471983,-7.732435,-2.342924,6.520377,2.107027,6.648751,-7.796366,0.075822,-7.554993,4.827963,2.565002,9.425236,-9.178494,-0.803715,-8.255404,-5.100619,4.853914,-0.390824,3.080410,0.147792,-4.686581,2.629790,4.470130,0.401142,3.179034,0.846453,7.721877,-4.592108,6.016598,9.224646,1.143501,3.815240,-0.066782,-9.502340,7.251472,-8.458384,-2.498879,-5.774524,-8.118126,-5.908604,0.835980,-5.586443,-4.549624,-0.882141,3.910611,8.612364,6.942543,-8.141278,1.972528,1.673770,-8.878879,-0.093749,-3.343788,-0.198865,8.397605,-1.520104,-2.815602,2.551470,5.077026,8.669606,4.487863,5.849328,6.421297,-9.983169,-8.567275,-0.585997,8.665491], dtype = "float64")#candidate|2082|(200,)|const|float64
call_2081 = relay.TupleGetItem(func_992_call(relay.reshape(const_2082.astype('float64'), [200,])), 3)
call_2083 = relay.TupleGetItem(func_995_call(relay.reshape(const_2082.astype('float64'), [200,])), 3)
output = relay.Tuple([call_1965,const_1966,call_1973,const_1980,call_2001,const_2002,call_2013,bop_2015,call_2044,const_2049,call_2051,call_2057,bop_2064,call_2073,call_2078,call_2081,const_2082,])
output2 = relay.Tuple([call_1967,const_1966,call_1975,const_1980,call_2003,const_2002,call_2014,bop_2018,call_2045,const_2049,call_2052,call_2058,bop_2067,call_2074,call_2079,call_2083,const_2082,])
func_2084 = relay.Function([var_1974,], output)
mod['func_2084'] = func_2084
mod = relay.transform.InferType()(mod)
mutated_mod['func_2084'] = func_2084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2085 = relay.var("var_2085", dtype = "float64", shape = (1800,))#candidate|2085|(1800,)|var|float64
func_2084_call = mutated_mod.get_global_var('func_2084')
call_2086 = func_2084_call(var_2085)
output = call_2086
func_2087 = relay.Function([var_2085], output)
mutated_mod['func_2087'] = func_2087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_2120 = func_1333_call()
call_2121 = func_1333_call()
output = call_2120
output2 = call_2121
func_2148 = relay.Function([], output)
mod['func_2148'] = func_2148
mod = relay.transform.InferType()(mod)
mutated_mod['func_2148'] = func_2148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2148_call = mutated_mod.get_global_var('func_2148')
call_2149 = func_2148_call()
output = call_2149
func_2150 = relay.Function([], output)
mutated_mod['func_2150'] = func_2150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_2244 = func_1286_call()
call_2245 = func_1286_call()
output = call_2244
output2 = call_2245
func_2281 = relay.Function([], output)
mod['func_2281'] = func_2281
mod = relay.transform.InferType()(mod)
mutated_mod['func_2281'] = func_2281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mutated_mod.get_global_var('func_2281')
call_2282 = func_2281_call()
output = call_2282
func_2283 = relay.Function([], output)
mutated_mod['func_2283'] = func_2283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_2284 = func_1286_call()
call_2285 = func_1286_call()
func_556_call = mod.get_global_var('func_556')
func_561_call = mutated_mod.get_global_var('func_561')
const_2289 = relay.const([8.822397,5.662965,0.220381,-7.848558,-8.733588,3.761025,0.921954,-9.933011,-0.004644,3.515050,2.861008,-4.582151,1.614848,3.619424,-8.555297,0.458233,1.140679,8.742113,3.914491,7.143250,-4.268269,-0.104392,-5.885759,3.108988,-3.515875,7.344590,4.956480,-8.449540,2.011453,5.937046,3.684022,2.881869,2.851395,-4.255858,1.505430,-9.434677,-5.031544,4.843105,3.475102,1.789332,0.817838,-4.386216,-2.348131,2.723385,-5.540757,7.560225,3.029544,1.649541,9.922314,9.203357,2.549268,-2.317105,-8.642000,-6.449016,-9.327606,-7.328741,-3.209907,-2.005492,9.502771,-1.913079,-3.154198,-5.254877,5.998873,-1.721050,9.059841,7.378342,0.662182,-3.117663,6.112309,-3.614373,-0.211692,0.161297,6.924978,7.727691,9.644554,-6.854909,9.647926,7.086917,-7.337902,-2.580010,0.547969,4.435395,2.290931,-6.186617,-9.041784,7.490997,2.641061,-7.086256,-7.645784,-1.273929,7.262468,-8.411212,0.005961,3.655621,4.887069,7.423132,7.718211,-7.054404,-2.367671,8.139918,4.197923,5.988896,1.701788,4.996999,7.996096,0.924218,-7.607516,9.584660,3.813095,-1.916131,-7.540641,5.076335,-3.369737,4.973438,6.969661,9.307660,3.582506,7.695697,-9.829816,-5.355332,-1.220232,3.258037,0.385493,-1.624171,2.836606,-1.423048,-4.493915,-1.008121,0.702836,3.373429,-6.190874,2.756604,5.917186,5.931426,2.369900,7.360567,0.935599,-9.715463,-8.825577,-6.256685,8.213168,2.172642,-0.274762,-7.704825,0.316061,-6.052755,7.525236,5.920530,8.322671,-5.867842,3.626000,-1.907870,-2.134044,0.059377,-2.033820,1.789608,-6.598371,4.926418,-6.468252,-6.781507,-8.576450,1.694266,-4.003827,-2.912742,2.476749,-6.138396,3.395291,-5.318913,-6.173100,-5.046862,4.139083,-5.280752,-6.253917,-4.363107,-3.312024,8.475337,-6.558869,-8.419683,3.664781,-6.145911,5.774176,4.361779,9.742264,9.959223,-6.497550,-7.129733,8.631519,3.957481,0.120228,-8.653753,9.548695,-6.112701,-0.707546,-3.347582,3.798359,5.513595,-2.576928,3.921845,-7.583626,3.334761,-7.421398,-1.975158,-7.050554,-3.095311,8.716662,4.784037,-6.610919,-3.454350,-9.706524,-3.645417,1.078803,2.590487,9.370648,-5.718387,5.924943,-8.207088,4.316674,9.949289,-0.134167,6.826279,-0.391782,-8.051757,-3.860225,4.318271,-8.836201,5.191704,2.568604,1.150023,3.567535,-9.322004,1.494650,1.606575,1.392318,-7.636110,-1.289830,-8.724707,9.872012,5.376237,5.399432,-0.459449,-4.917506,-8.946723,-3.343100,-8.410891,2.471747,-5.089195,6.471006,0.270129,-9.617731,2.217969,-9.428617,4.033386,-1.219797,9.119026,-2.481791,4.945243,1.567359,-9.755377,9.306931,-7.509105,-8.606171,3.809580,-4.256616,-0.422319,1.246994,4.622919,3.242783,3.563956,9.849085,-8.408642,-2.394566,-2.970453,4.961441,-8.064739,-2.015813,4.772056,9.191781,-5.816097,0.644316,5.789807,-0.513003,-3.360301,5.673487,-6.163001,6.330928,-6.513334,-1.573769,4.302439,-4.412775,7.289646,-7.228311,0.868765,6.568615,1.247195,-5.906164,7.904977,7.944753,1.351160,2.027789,7.537930,-3.168631,0.539595,1.662659,-6.613376,-6.209315,-5.425600,-8.993797,-6.237207,7.339316,-4.813796,-2.977624,9.309888,-3.668950,6.570634,-3.848158,-2.693766,-4.867636,8.594594,-8.039055,8.889908,1.835657,-1.269951,2.228799,-4.073348,-2.672843,4.060992,-2.180967,8.701593,1.130773,6.639686,0.969869,-4.140303,2.189381,0.368319,1.889704,-1.431127,-8.720465,-1.888985,6.042770,5.369459,1.259545,6.018404,7.792215,-1.682297,4.000470,-6.405024,2.772621,-3.018409,-4.792314,5.064602,0.538420,0.539372,-9.303923,1.731492,-5.532312,1.092648,7.505485,4.371790,3.257190,2.939067,4.465278,-5.607166,-8.465658,3.968858,-4.470052,-7.563647,-4.922128,-6.035198,7.641751,1.091107,-1.953570,-1.728475,3.982255,-3.777087,9.597215,9.867960,7.114872,-5.037615,-9.230777,-2.452756,-8.508275,-5.995876,-8.231338,7.217598,4.821263,2.802641,7.491273,2.485212,-6.299169,-1.595203,-8.304435,-3.404942,5.439059,6.440801,3.513987,-3.891329,5.635476,-5.690987,2.319026,0.472758,-3.985410,-7.792078,-2.909264,-4.081540,4.502722,7.107868,-1.548296,1.465202,-9.392535,-1.507814,5.953537,1.944036,2.482491,-4.893321,5.183704,8.135084,1.434310,6.439026,-0.271792,-0.425149,-5.164587,1.622535,4.912292,-2.524003,6.766993,4.345795,-7.047177,8.262455,6.469656,-7.839446,-6.490075,-1.272003,-6.693616,7.520477,-4.213811,-7.189530,7.105725,4.208474,7.512109,-5.109997,-1.147217,0.372353,-4.881465,6.148146,-4.682913,-6.893985,2.467098,-1.784973,9.004761,-6.005388,7.575942,-3.214790,-3.420704,-2.607765,-9.726725,5.326322,-4.749954,9.305717,7.804673,-6.912114,-1.924991,-4.906222,-8.111905,4.238105,9.304670,5.642142,9.709942,2.385249,7.333034,8.856756,4.543999,8.316188,5.738482,-1.887499,2.353993,-7.222370,-8.680341,0.934412,-5.518822,-8.497161,9.734053,-1.000090,8.918254,-7.696196,6.823112,-9.417498,-2.653923,2.964725,-0.339049,9.649527,-0.078292,-8.832043,-3.332054,7.223128,-6.029398,-0.331110,4.742966,-7.504818,9.734493,-0.359036,-7.751942,8.797306,-1.371504,-7.203168,-0.210859,-7.545160,-0.948480,4.654602,-9.145233,0.474607,-1.907560,-0.422438,-8.864643,5.923503,-5.896472,8.353792,-8.459406,8.879157,3.224125,-0.927305,5.966224,-1.578521,6.859234,7.333958,4.266887,-1.787027,-9.238936,0.578454,-3.080509,-0.352919,-8.240711,2.688416,-0.601995,9.830374,5.495007,-7.540568,-0.548817,-9.378056,-8.377773,-6.918529,-1.240518,-5.188040,6.843435,0.287556,-6.646655,-2.478626,7.826655,4.282406,3.991865,8.717312,-3.453060,9.478972,6.137176,-5.836684,7.934864,0.963402,-0.380203,9.724078,3.052347,7.904972,-9.879346,3.027234,9.337421,-6.410111,7.864129,4.994677,7.702577,9.586833,-5.110627,-8.911626,-3.837430,6.199531,1.843692,-9.805284,-4.525606,-1.815625,-5.792660,-4.281363,2.257073,-4.048053,8.649705,-5.419014,-9.481938,7.213211,-6.306623,7.023913,1.309078,1.428177,4.084925,0.298495,5.566667,-1.144910,9.229335,9.783053,7.497104,-2.206247,-0.003692,4.516906,-5.673483,8.728743,4.117102,8.438937,-7.308961,5.878190,-9.574495,8.511532,9.610256,5.008829,-6.514037,6.359129,-7.600306,-3.792350,-9.646470,-8.208531,-4.287359,8.681428,-5.157736,-3.423137,0.865308,-8.698090,4.273663,3.176346,0.267993,0.255757,-7.221176,-3.018678,-6.482802,5.296272,-0.401195,4.777220,9.959183,-6.747821,3.490103,-1.580341,4.134186,3.960605,-0.183713,9.966270,7.129598,-9.341092,8.304835,3.215751,9.769380,-9.256243,-4.744317,1.935455,8.519004,7.972702,-4.687463,7.811516,-4.021196,-9.897446,-0.562686,-0.197772,1.059041,1.885501,6.893105,-5.199085,6.250206,8.037670,6.398821,5.193432,-7.559253,1.591855,5.269434,-0.724459,4.648232,-0.253357,-8.739776,-2.577676,8.838318,-5.245677,-9.049876,-3.366785,-9.936747,9.399024,-5.480427,-4.542967,9.626004,1.190711,-2.937539,-9.794352,3.810845,4.486042,7.355979,0.206182,5.271073,-6.117855,-3.994678,8.407865,-4.152529,-2.415876,-8.331263,1.992037,2.822729,-6.309124,5.756508,2.772429,0.872201,-1.964591,-7.152863,-5.984915,-6.203897,6.447629,9.145807,4.440372,0.771750,-9.645995,-6.396775,3.189715,-0.788246,7.765687,-9.913511,-4.983427,-3.544644,7.051665,-7.621586,-6.772384,-8.022722,-4.016517,8.586325,1.946689,0.369895,-8.604121,7.967795,8.546459,6.968628,5.685293,-8.169399,2.423477,7.458808,6.034969,-0.805818,-2.339243,-4.684711,-4.385429,-3.145675,-3.292834,8.431544,6.757313,9.589427,9.563365,4.164902,-7.807120,-8.424056,-9.249510,-9.697296,-7.823526,-6.865244,7.562994,0.172845,-2.371778,2.308414,6.368445,6.358341,-1.934737,-8.467190,5.991399,-7.622199,8.756011,2.011647,-2.320074,2.808597,3.530026,8.512314,-6.044691,-2.511032,-3.777059,-1.280466,9.089717,-7.266818,-0.573470,8.022585,4.265429,3.168034,-6.485007,-0.960587,2.698069,6.599397,7.297985,0.046019,3.401402,-2.710598,-7.334334,-8.115578,-9.086990,7.334285,8.438926,-6.621408,-6.912927,0.355041,6.953418,-4.830171,4.593724,4.192210,-6.131692,1.151513,-7.110403,-2.681865,-8.900437,-0.642480,6.977208,2.191468,-2.326565,6.914336,6.004725,-5.205908,4.508647,5.520083,-6.248847,3.721711,-6.531791,5.266321,5.685290,4.306039,-8.195053,-0.347345,4.264429,-4.867887,-9.878010,-5.728897,-3.800166,-6.166347,6.513669,-2.518806,-5.650804,8.302803,-1.865054,9.686075,-8.934300,8.825687,6.130569,-3.457286,8.512552,-4.580740,5.965800,-0.330671,8.691032,1.210905,-2.858475,9.958104,8.529626,6.014434,1.073306,4.089814,8.015722,-3.114500,7.623144,9.869418,8.959481,-3.386526,7.518714,-2.255240,4.313733,4.999219,4.872753,-5.113502,7.939319,5.469882,-8.583027,-4.008337,0.702489,-4.221127,-8.447334,-7.164164,-0.643829,-8.301572,3.176642,-1.336686,-1.341936,-3.258312,-0.587528,-6.247825,3.719597,-3.657828,4.309693,2.364636,5.792003,1.740022,-1.041364,0.924266,-4.423874,-1.367426,-6.146690,-2.683281,-8.762302,8.425925,0.350731,2.924733,6.352334,-2.849058,-5.329204,9.799971,-4.204077,8.621628,-6.473818,2.672197,-6.382576,-7.320344,-2.706301,9.514707,-3.278012,-9.625555,4.666024,-2.527978,9.197595,7.480197,-1.392989,-1.971684,8.885349,0.317998,-5.471786,-0.962088,-8.001102,-1.438031,4.512389,-3.533697,-5.295933,6.446956,-5.828406,-3.820103,-9.256755,2.006469,-8.063251,6.890721,-1.170594,-7.715542,3.334021,7.028037,8.010206,5.828547,-8.577359,-7.525001,-4.618595,-3.608618,2.153124,-1.338630,-6.354088,0.339350,4.840515,-8.341759,0.825127,2.786784,7.111482,4.053428,-6.442142,2.878321,-6.019487,1.263089,1.412631,0.340161,-0.364666,-9.319315,2.717377,3.695539,5.057567,-6.925531,-2.969837,1.910540,9.522070,2.466512,0.470100,-1.167426,-9.380056,-2.089064,5.089881,9.969479,-2.442128,-1.894169,1.943808,-5.282863,9.796495,7.432757,-1.594568,1.514012,3.199495,4.218014,5.420146,-2.168079,5.241772,2.665172,-7.371271,-3.396637,-0.456791,9.312876,4.318859,-9.024057,-9.636427,-5.239708,7.921696,-5.659826,-4.601020,2.230664,2.561327,-4.104251,1.171013,9.813610,-1.249426,-3.066578,-5.354496,-2.932481,7.885087,-5.981741,-1.874726,8.917836,-9.943652,9.813755,4.142859,-1.630128,-8.790029,-4.232014,-0.991649,-6.766157,9.539628,-9.154031,-5.476045,3.584594,4.569712,9.758046,1.680745,1.609317,0.963601,-4.132617,-3.877347,9.845043,7.022660,-4.319644,-6.434015,-7.546751,0.068929,1.175971,9.514916,7.645828,7.146835,8.683788,6.960787,-7.878120,3.857537,-2.434448,-0.257949,-5.435422,7.743629,2.904310,3.080757,1.033193,-7.976074,-0.167659,-1.608070,2.444110,0.753008,-5.210604,8.335219,8.063251,2.592198,-1.440993,2.898392,-6.114438,4.671237,-2.621812,6.355817,7.078965,8.046674,-1.753449,-1.754892,9.814320,-9.489164,-2.006885,-3.607462,-9.300341,0.353860,7.010352,7.718635,1.991789,-0.200492,-7.914803,-7.695433,2.376346,1.446342,1.930031,8.032265,1.411883,-3.688799,-8.229003,9.753053,-4.013560,4.556864,-3.068155,3.353328,-2.621414,6.052164,-8.807903,-3.536932,8.778508,3.519336,3.304888,4.952042,-1.982907,4.197567,8.495248,2.843574,1.658349,1.603825,1.634407,-8.643138,-0.842399,-9.074566,2.390051,3.724023,1.804307,8.944808,5.360094,1.269464,-8.361357,-2.612038,-8.609737,5.556351,9.009250,7.469925,-7.582454,-4.819883,0.247968,8.673505,7.612038,-2.618330,7.573096,-8.382709,-8.121072,-3.254532,-6.977963,-7.690897,-7.580959,-3.311161,3.052940,-4.738303,7.887250,-6.412135,-2.550503,4.942248,-4.703968,-2.265705,3.265546,2.893034,-3.771950,-3.341447,-5.636821,1.617019,0.800833,-6.429255,4.104594,-5.624827,2.243486,-3.293352,-8.374191,-0.008377,7.548137,-6.180305,7.662430,-4.272068,4.786320,-4.659765,-8.855174,-0.932129,6.777926,-4.390541,8.592194,-7.659233,9.448698,-1.796512,-2.187731,1.014498,5.546974,8.802359,5.443751,7.654087,-9.934154,-2.086678,0.281968,-1.036653,-2.599583,-9.127196,7.926493,-9.681818,0.405688,-5.156997,5.911015,2.760232,2.149366,4.277680,-0.339601,2.384887,-3.307099,1.462118,-8.572186,9.140729,-6.987888,2.312601,-1.898458,0.838125,-7.334956,8.004584,6.943583,8.278520,9.973758,5.654322,8.698560,0.312198,-7.272124,8.404576,-6.454567,0.504810,-4.751276,3.576769,4.109236,-5.140215,-9.299335,7.811251,-3.888746,3.314425,-4.303594,-4.424373,9.494672,1.686597,-1.791698,1.456092,3.125471,-4.620265,8.395080,-7.713335,-5.655288,-4.772591,2.776148,-1.883833,-7.003213,7.999853,-2.250480,-0.184428,6.456440,2.932565,1.007553,2.684781,-0.874420,-4.543060,4.897797,-0.699872,-6.673816,-8.246009,-1.132796,0.303097,-3.301199,0.052181,-0.087508,9.658824,-1.765674,-9.089312,3.618205,-8.342236,8.926846,5.159685,-8.056927,-4.869456,-0.202064,-8.057070,3.191883,-8.389225,-5.466165,-6.324924,5.470433,8.030591,-1.246675,7.510591,2.084593,5.072959,5.125096,1.110409,-2.529414,-2.286343,-7.503242,-5.424689,-7.816446,-6.909994,-9.877743,-2.082866,-0.853385,6.584687,9.212998,-3.435401,2.865169,1.723094,-4.375285,-9.261018,-8.372784,7.432941,8.636684,-5.668873,-3.410768,-0.725571,6.806126,5.028649,-1.951354,-5.736565,8.971875,-0.759501,3.018831,5.921135,-8.028704,-0.401304,-1.225518,-8.638462,8.973374,-6.955396,6.390418,0.054052,8.971505,-4.991809,7.219167,7.908341,9.212315,6.096228,3.956097,-7.058949,-2.292529,-9.676332,-3.417553,-7.801838,4.381675,-5.512437,-4.378045,1.454049,-0.283588,7.689814,-1.352802,-0.730883,5.453178,-0.254073,3.361670,-3.764508,-5.052623,-7.143537,0.113606,-8.518831,7.308423,6.756401,-6.901924,9.807776,-8.473919,5.489620,2.757697,-7.860349,7.888737,8.761028,0.911270,4.974930,-3.635817,6.062645,-2.684108,-9.704049,-5.560866,8.605677,-5.999809,1.377389,-0.782722,-9.528804,-2.460213,-1.150347,0.821475,-4.122616,5.093193,-5.140773,-9.484158,-5.610882,-2.211498,-3.005568,-3.175772,8.390122,7.832061,-7.782916,2.114232,3.539345,9.096680,-5.008704,-2.813637,-3.066366,-7.773897,2.545094,-5.021560,5.425960,2.222440,2.953041,-6.366142,-5.537659,2.322562,4.008819,9.898397,-7.733421,-3.484381,-1.494916,-3.616126,-0.613533,0.279306,3.884822,6.839332,-3.580710,-4.929314,1.438489,9.068035,-6.121316,-5.860494,3.892491,5.608204,-2.010084,-5.877069,-8.091724,5.769301,6.487670,-0.507127,-4.441585,-8.735465,-4.831149,-2.507308,3.529347,-2.022638,-7.586630,8.795748,-6.460290,-8.849575,-5.662605,7.047108,9.900195,4.614502,-7.715245,7.915537,-5.185527,7.899807,-6.820465,-0.799785,1.911416,-3.426522,8.970946,-0.653464,-7.050171,-1.089920,1.073245,1.880089,8.740316,-4.443265,-6.564990,-9.618958,5.695263,-4.151025,-4.639373,7.169968,1.069580,1.845118,1.606702,-8.694654,-6.726539,-3.882413,2.638480,-3.213524,-5.312610,-9.805575,-9.791067,6.295024,-8.453653,-9.662976,-6.690593,1.047517,2.920499,-5.042958,-7.712900,-5.637020,-1.215903,-4.370016,-3.314490,-0.445052,3.540580,8.226719,6.191204,4.379576,-5.230665,-8.522334,1.828370,-3.074855,8.137594,1.118146,-1.139025,-7.019360,-5.130288,-0.712810,-6.603824,-2.850139,9.290534,2.706489,-4.116516,-6.019824,-5.487752,-7.437717,-5.118619,-4.774294,3.516764,3.952278,5.922807,-7.606697,3.088201,-2.044665,6.189628,0.932426,5.071426,-7.519002,-8.023828,-5.491603,4.573695,-1.969372,-7.819323,6.722667,9.541818,8.466747,2.477613,-5.155895,-3.471875,-4.487554,5.207380,-8.279647,-4.045976,8.045635,8.029612,-8.774764,-7.042632,3.269888,9.361354,-6.171724,5.511280,-1.046101,-7.772483,0.395648,9.516076,-4.691036,-9.600701,1.656784,1.014394,6.926702,0.806238,-5.182083,-1.401000,-0.105092,-6.246923,-3.017133,-3.640178,-2.052739,-5.520310,0.717496,1.750822,-0.200117,-6.998796,9.287813,-9.237845,-5.818692,-4.822704,2.840231,-2.783446,-5.121013,9.739802,5.354716,2.331997,-7.125422,6.093888,-8.182707,4.080793,-6.293847,-9.204479,-3.390168,-6.243281,-3.684852,5.544871,-9.093907,4.524623,-7.434020,4.073461,-1.753093,-2.220357,-7.257625,-8.788549,-2.882240,-0.075112,8.595950,-1.865181,3.887284,5.729818,8.088202,-7.348106,-4.226801,0.758342,-9.691234,-3.740622,9.846782,7.413168,1.343681,-3.269655,3.885691,-1.643186,-8.302812,-0.762754,-7.291463,8.700617,-8.411471,0.015029,-5.102698,-9.044845,2.917738,1.811280,0.139010,8.811706,7.019108,-2.955947,-1.222662,7.570108,-0.350806,-9.902652,9.252941,-1.437584,6.579894,6.839571,-5.132317,-1.291940,-3.117459,1.214412,-6.085572,-6.659318,-9.421618,0.632445,-2.253405,7.211892,-6.987539,7.795230,-5.631679,-6.364674,5.315724,1.810611,6.667315,2.573461,6.406689,5.805164,2.900266,9.684425,-3.737268,-7.165864,-1.191388,2.964508,-1.580014,-8.503823,5.384848,-8.537645,-6.192991,-6.774934,-5.771980,-3.844874,-3.673006,9.641753,7.018572,-5.462429,0.201303,-3.171402,-5.655139,8.334403,-9.318119,1.344762,-3.694348,-8.599751,4.022215,-8.267453,2.777644,-9.559917,-8.401448,2.887465,-8.105308,9.362008,4.231467,0.196504,-6.990552,-9.407702,7.364155,-4.042633,1.404560,-9.037133,5.592856,-5.444279,7.204437,1.610727,9.510630,-1.622322,-1.235282,1.888670,6.773310,8.923140,8.519103,7.082446,-3.276689,-9.449491,-2.746432,-7.797873,8.824479,-9.706000,5.487473,-5.446039,6.100015,0.295028,5.952178,2.557131,3.822419,-7.562925,-5.792393,4.003978,2.674303,-9.188741,6.938826,5.325029,-4.338531,3.858868,9.539128,-0.453843,-5.524336,-6.489736,-2.055353,6.870015,6.411805,7.361100,7.483405,-2.728907,-1.219253,-7.639233,9.920688,8.570839,-8.673548,-8.251822,-7.860716,-8.528563,-0.767011,-6.218297,-3.653111,-6.118741,8.849396,2.909770,4.848088,8.753202,-8.199622,3.155775,-4.427062,0.284630,2.210402,-3.860879,-1.388115,1.673664,-8.998389,-4.287876,6.224020,-1.496825,-9.917164,9.736199,3.255803,4.368105,-7.178316,0.765542,6.645063,1.834968,-5.048971,4.024590,-9.305882,4.006367,-4.644605,7.305697,7.289864,5.509466,8.082356,3.186513,5.310721,9.632933,4.492508,-5.662839,1.424667,6.870780,-9.244526,7.477956,6.593535,8.592097,-5.707074,2.137597,-2.930966,0.450748,6.051760,-6.982428,9.603168,6.370845,-8.872400,-5.880459,6.311854,-3.319805,-5.562082,9.823368,-0.782526,8.616769], dtype = "float64")#candidate|2289|(1800,)|const|float64
call_2288 = relay.TupleGetItem(func_556_call(relay.reshape(const_2289.astype('float64'), [8, 15, 15]), relay.reshape(const_2289.astype('float64'), [8, 15, 15]), relay.reshape(const_2289.astype('float64'), [8, 15, 15]), ), 0)
call_2290 = relay.TupleGetItem(func_561_call(relay.reshape(const_2289.astype('float64'), [8, 15, 15]), relay.reshape(const_2289.astype('float64'), [8, 15, 15]), relay.reshape(const_2289.astype('float64'), [8, 15, 15]), ), 0)
bop_2294 = relay.divide(const_2289.astype('float64'), relay.reshape(call_2288.astype('float64'), relay.shape_of(const_2289))) # shape=(1800,)
bop_2297 = relay.divide(const_2289.astype('float64'), relay.reshape(call_2290.astype('float64'), relay.shape_of(const_2289))) # shape=(1800,)
output = relay.Tuple([call_2284,bop_2294,])
output2 = relay.Tuple([call_2285,bop_2297,])
func_2299 = relay.Function([], output)
mod['func_2299'] = func_2299
mod = relay.transform.InferType()(mod)
output = func_2299()
func_2300 = relay.Function([], output)
mutated_mod['func_2300'] = func_2300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_2421 = func_1286_call()
call_2422 = func_1286_call()
output = call_2421
output2 = call_2422
func_2424 = relay.Function([], output)
mod['func_2424'] = func_2424
mod = relay.transform.InferType()(mod)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2424_call = mutated_mod.get_global_var('func_2424')
call_2425 = func_2424_call()
output = call_2425
func_2426 = relay.Function([], output)
mutated_mod['func_2426'] = func_2426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_2432 = func_2148_call()
call_2433 = func_2148_call()
uop_2436 = relay.rsqrt(call_2432.astype('float32')) # shape=(10, 16, 11)
uop_2438 = relay.rsqrt(call_2433.astype('float32')) # shape=(10, 16, 11)
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
const_2453 = relay.const([6,-1,1,-9,5,-7,8,9,6,1,2,3,-1,-6,6,-10,3,7,1,10], dtype = "int8")#candidate|2453|(20,)|const|int8
call_2452 = relay.TupleGetItem(func_1229_call(relay.reshape(const_2453.astype('int8'), [20,])), 2)
call_2454 = relay.TupleGetItem(func_1232_call(relay.reshape(const_2453.astype('int8'), [20,])), 2)
output = relay.Tuple([uop_2436,call_2452,const_2453,])
output2 = relay.Tuple([uop_2438,call_2454,const_2453,])
func_2456 = relay.Function([], output)
mod['func_2456'] = func_2456
mod = relay.transform.InferType()(mod)
mutated_mod['func_2456'] = func_2456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mutated_mod.get_global_var('func_2456')
call_2457 = func_2456_call()
output = call_2457
func_2458 = relay.Function([], output)
mutated_mod['func_2458'] = func_2458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_2462 = func_1333_call()
call_2463 = func_1333_call()
output = relay.Tuple([call_2462,])
output2 = relay.Tuple([call_2463,])
func_2491 = relay.Function([], output)
mod['func_2491'] = func_2491
mod = relay.transform.InferType()(mod)
output = func_2491()
func_2492 = relay.Function([], output)
mutated_mod['func_2492'] = func_2492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1731_call = mod.get_global_var('func_1731')
func_1732_call = mutated_mod.get_global_var('func_1732')
call_2500 = func_1731_call()
call_2501 = func_1731_call()
output = relay.Tuple([call_2500,])
output2 = relay.Tuple([call_2501,])
func_2513 = relay.Function([], output)
mod['func_2513'] = func_2513
mod = relay.transform.InferType()(mod)
mutated_mod['func_2513'] = func_2513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2513_call = mutated_mod.get_global_var('func_2513')
call_2514 = func_2513_call()
output = call_2514
func_2515 = relay.Function([], output)
mutated_mod['func_2515'] = func_2515
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2518 = relay.const([[[4.672419],[-6.347670],[-7.625626],[1.480340],[0.332461],[-7.929550],[4.586817],[-9.762457],[-1.724840],[5.033244],[-8.185954],[-2.416602],[-8.201156]],[[-9.498300],[-2.831462],[-1.239803],[1.221083],[-3.124448],[0.931247],[-1.162437],[9.337603],[9.229318],[-8.344969],[-5.094852],[-2.529602],[8.462578]],[[-3.922622],[5.585505],[-9.437778],[-6.286595],[1.475037],[-9.009167],[7.650862],[1.782636],[-5.735408],[7.408050],[-2.436970],[-2.928895],[-9.418586]],[[4.130847],[-1.855003],[-8.330600],[4.486173],[-9.645050],[9.213661],[-4.128506],[0.663053],[8.211241],[-4.089778],[6.891990],[6.514199],[-2.938079]],[[6.535420],[-8.324416],[6.452379],[6.395513],[-1.920986],[-2.884747],[2.585722],[6.088059],[4.032546],[-8.947528],[-0.379844],[-0.278299],[-4.768673]],[[-5.779432],[-0.518834],[1.371187],[4.126730],[-9.537884],[-0.336199],[0.342510],[7.882699],[-5.426322],[-8.121438],[2.614448],[4.972204],[-4.049122]],[[3.668118],[-1.483643],[-8.281017],[6.002118],[4.089549],[6.992909],[-7.357652],[-9.824292],[3.792091],[-5.410162],[0.265310],[0.419099],[-4.788351]],[[-7.999959],[-0.904575],[-6.509839],[9.768139],[1.804968],[9.386070],[-9.829207],[-0.041716],[1.043777],[2.921469],[4.483754],[6.890033],[4.519367]]], dtype = "float32")#candidate|2518|(8, 13, 1)|const|float32
uop_2519 = relay.atanh(const_2518.astype('float32')) # shape=(8, 13, 1)
output = uop_2519
output2 = uop_2519
func_2526 = relay.Function([], output)
mod['func_2526'] = func_2526
mod = relay.transform.InferType()(mod)
mutated_mod['func_2526'] = func_2526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2526_call = mutated_mod.get_global_var('func_2526')
call_2527 = func_2526_call()
output = call_2527
func_2528 = relay.Function([], output)
mutated_mod['func_2528'] = func_2528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2491_call = mod.get_global_var('func_2491')
func_2492_call = mutated_mod.get_global_var('func_2492')
call_2598 = relay.TupleGetItem(func_2491_call(), 0)
call_2599 = relay.TupleGetItem(func_2492_call(), 0)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_2609 = func_237_call()
call_2610 = func_237_call()
output = relay.Tuple([call_2598,call_2609,])
output2 = relay.Tuple([call_2599,call_2610,])
func_2621 = relay.Function([], output)
mod['func_2621'] = func_2621
mod = relay.transform.InferType()(mod)
mutated_mod['func_2621'] = func_2621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mutated_mod.get_global_var('func_2621')
call_2622 = func_2621_call()
output = call_2622
func_2623 = relay.Function([], output)
mutated_mod['func_2623'] = func_2623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_2644 = func_237_call()
call_2645 = func_237_call()
const_2651 = relay.constdtype = "float32")#candidate|2651|(10, 16, 11)|const|float32
bop_2652 = relay.subtract(call_2644.astype('int32'), relay.reshape(const_2651.astype('int32'), relay.shape_of(call_2644))) # shape=(10, 16, 11)
bop_2655 = relay.subtract(call_2645.astype('int32'), relay.reshape(const_2651.astype('int32'), relay.shape_of(call_2645))) # shape=(10, 16, 11)
func_1488_call = mod.get_global_var('func_1488')
func_1490_call = mutated_mod.get_global_var('func_1490')
call_2673 = relay.TupleGetItem(func_1488_call(), 0)
call_2674 = relay.TupleGetItem(func_1490_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_2678 = func_800_call()
call_2679 = func_800_call()
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
const_2681 = relay.const(8.639245, dtype = "float32")#candidate|2681|()|const|float32
call_2680 = relay.TupleGetItem(func_1081_call(relay.reshape(const_2681.astype('float32'), [])), 0)
call_2682 = relay.TupleGetItem(func_1084_call(relay.reshape(const_2681.astype('float32'), [])), 0)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2710 = func_2281_call()
call_2711 = func_2281_call()
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_2714 = relay.TupleGetItem(func_1529_call(), 0)
call_2715 = relay.TupleGetItem(func_1530_call(), 0)
func_2424_call = mod.get_global_var('func_2424')
func_2426_call = mutated_mod.get_global_var('func_2426')
call_2721 = func_2424_call()
call_2722 = func_2424_call()
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_2731 = func_237_call()
call_2732 = func_237_call()
output = relay.Tuple([bop_2652,call_2673,call_2678,call_2680,const_2681,call_2710,call_2714,call_2721,call_2731,])
output2 = relay.Tuple([bop_2655,call_2674,call_2679,call_2682,const_2681,call_2711,call_2715,call_2722,call_2732,])
func_2738 = relay.Function([], output)
mod['func_2738'] = func_2738
mod = relay.transform.InferType()(mod)
mutated_mod['func_2738'] = func_2738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mutated_mod.get_global_var('func_2738')
call_2739 = func_2738_call()
output = call_2739
func_2740 = relay.Function([], output)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_2803 = relay.TupleGetItem(func_1117_call(), 0)
call_2804 = relay.TupleGetItem(func_1119_call(), 0)
var_2809 = relay.var("var_2809", dtype = "float32", shape = (10, 16, 11))#candidate|2809|(10, 16, 11)|var|float32
bop_2810 = relay.add(call_2803.astype('int8'), relay.reshape(var_2809.astype('int8'), relay.shape_of(call_2803))) # shape=(10, 16, 11)
bop_2813 = relay.add(call_2804.astype('int8'), relay.reshape(var_2809.astype('int8'), relay.shape_of(call_2804))) # shape=(10, 16, 11)
output = bop_2810
output2 = bop_2813
func_2817 = relay.Function([var_2809,], output)
mod['func_2817'] = func_2817
mod = relay.transform.InferType()(mod)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2818 = relay.var("var_2818", dtype = "float32", shape = (10, 16, 11))#candidate|2818|(10, 16, 11)|var|float32
func_2817_call = mutated_mod.get_global_var('func_2817')
call_2819 = func_2817_call(var_2818)
output = call_2819
func_2820 = relay.Function([var_2818], output)
mutated_mod['func_2820'] = func_2820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_2851 = relay.TupleGetItem(func_1117_call(), 1)
call_2852 = relay.TupleGetItem(func_1119_call(), 1)
output = relay.Tuple([call_2851,])
output2 = relay.Tuple([call_2852,])
func_2863 = relay.Function([], output)
mod['func_2863'] = func_2863
mod = relay.transform.InferType()(mod)
mutated_mod['func_2863'] = func_2863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mutated_mod.get_global_var('func_2863')
call_2864 = func_2863_call()
output = call_2864
func_2865 = relay.Function([], output)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_2917 = func_1286_call()
call_2918 = func_1286_call()
output = relay.Tuple([call_2917,])
output2 = relay.Tuple([call_2918,])
func_2919 = relay.Function([], output)
mod['func_2919'] = func_2919
mod = relay.transform.InferType()(mod)
output = func_2919()
func_2920 = relay.Function([], output)
mutated_mod['func_2920'] = func_2920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_2973 = relay.TupleGetItem(func_854_call(), 0)
call_2974 = relay.TupleGetItem(func_855_call(), 0)
output = call_2973
output2 = call_2974
func_2977 = relay.Function([], output)
mod['func_2977'] = func_2977
mod = relay.transform.InferType()(mod)
mutated_mod['func_2977'] = func_2977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mutated_mod.get_global_var('func_2977')
call_2978 = func_2977_call()
output = call_2978
func_2979 = relay.Function([], output)
mutated_mod['func_2979'] = func_2979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mod.get_global_var('func_1488')
func_1490_call = mutated_mod.get_global_var('func_1490')
call_3083 = relay.TupleGetItem(func_1488_call(), 1)
call_3084 = relay.TupleGetItem(func_1490_call(), 1)
output = call_3083
output2 = call_3084
func_3093 = relay.Function([], output)
mod['func_3093'] = func_3093
mod = relay.transform.InferType()(mod)
mutated_mod['func_3093'] = func_3093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mutated_mod.get_global_var('func_3093')
call_3094 = func_3093_call()
output = call_3094
func_3095 = relay.Function([], output)
mutated_mod['func_3095'] = func_3095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_3107 = relay.TupleGetItem(func_2863_call(), 0)
call_3108 = relay.TupleGetItem(func_2865_call(), 0)
var_3114 = relay.var("var_3114", dtype = "float32", shape = (10, 16, 11))#candidate|3114|(10, 16, 11)|var|float32
bop_3115 = relay.floor_mod(call_3107.astype('float32'), relay.reshape(var_3114.astype('float32'), relay.shape_of(call_3107))) # shape=(10, 16, 11)
bop_3118 = relay.floor_mod(call_3108.astype('float32'), relay.reshape(var_3114.astype('float32'), relay.shape_of(call_3108))) # shape=(10, 16, 11)
func_2084_call = mod.get_global_var('func_2084')
func_2087_call = mutated_mod.get_global_var('func_2087')
const_3120 = relay.const([-6.303719,-5.655264,-3.861086,4.385459,-9.731788,6.123695,0.723737,4.611526,8.304875,4.269954,5.261796,1.879562,2.676965,8.331664,2.760716,8.265088,8.138400,-2.786620,-8.296956,3.600090,4.714271,-6.624693,9.375020,4.720671,-2.813723,-8.984481,-8.856278,-2.407034,-3.526152,-3.145403,2.505449,-6.568441,8.035932,-6.876991,-9.081931,-6.107896,-7.414536,-3.592772,3.430946,-4.344977,8.656784,8.881822,-9.995916,8.110048,8.287601,-5.530594,-8.700393,-3.667300,0.504659,8.879577,-4.451671,6.364395,-9.120514,-2.309119,1.050613,7.442624,4.788407,-8.979236,1.723518,9.760915,0.551316,3.941059,-8.588241,7.224459,-1.617484,4.861007,7.214839,6.767641,-1.409346,4.278192,-7.609589,-7.149739,1.757093,8.498582,2.509179,8.743181,-2.601784,-0.373917,-5.684469,-0.854275,-9.589511,-1.345481,-4.487255,7.456803,1.829059,-1.546888,-9.851855,-0.704843,3.738324,-7.595933,-1.638392,6.825091,-0.739370,0.618016,4.851498,3.604401,5.018954,6.465684,4.395821,-5.765918,1.230660,-9.798727,-9.125391,0.492292,-7.991532,-0.631760,-6.868517,9.561020,2.222903,9.269091,-9.484867,-4.536504,-1.747360,7.357418,-8.596487,0.186366,-9.793111,9.308378,-8.245789,-4.188874,-4.809118,9.400409,-1.617991,1.474712,3.813950,-1.618470,4.144528,9.287173,7.269282,4.020629,-4.206415,6.898158,-0.992934,6.379167,-3.549959,5.758625,-2.047326,0.318988,0.528417,-8.911115,0.070024,-5.530544,5.453996,9.660262,-5.433734,5.826462,8.674365,5.565009,6.799961,-4.772836,-2.589568,8.168041,-9.031269,3.174339,6.066329,-1.156423,6.455908,-9.794007,-9.696785,4.023365,-7.230214,1.815401,7.226891,-8.420457,-1.463758,-3.638357,-8.022946,2.021412,-2.798854,1.682288,3.311460,1.643665,-9.686825,5.023820,4.980280,-9.737702,2.164467,3.530925,-9.501865,-4.315500,-5.486721,-5.713791,-1.254053,0.758747,-0.680433,-9.463544,-4.772463,-5.140062,0.515376,4.092261,-6.627791,2.598649,8.552232,7.310496,-3.347552,-1.048602,-4.901752,2.175793,8.725401,-3.919403,9.504840,2.496986,-9.486081,0.331500,9.623383,-3.813098,-4.133986,-1.831010,-2.867337,1.559522,8.144634,6.639107,-9.899965,-5.332282,2.766302,-6.124751,2.977633,-9.066990,0.120821,-2.068122,-5.997470,7.890492,-1.623703,-8.125396,2.896577,9.776835,-0.880038,-9.429067,7.783862,-9.678387,4.373896,-4.665058,-4.429405,-8.202886,-8.147201,-2.096267,1.558889,4.101126,9.447915,-3.718859,5.283696,3.487758,-0.977235,5.963733,-0.945586,-2.498298,-6.776569,2.757808,5.591113,-8.527744,-2.207416,-5.433795,-6.256398,3.164838,-6.808196,-5.732941,6.655164,8.640498,-6.366190,6.836811,-4.747756,-6.056977,-1.378987,0.119031,-1.580135,6.218185,-0.569443,-9.794968,2.557154,3.536735,-1.585183,-4.875136,3.288248,1.463109,-4.124651,2.967358,6.917328,5.445124,1.768351,6.316922,-8.404954,-8.170548,9.276033,-3.340645,-9.133221,-4.747713,6.314585,-8.962274,-6.621500,-4.361102,-3.029079,2.209081,-9.295894,-4.159723,7.490339,2.319903,-2.400251,-8.897008,-2.080801,7.726195,-3.066773,5.004489,-1.714800,2.951660,-9.861486,0.646462,7.577102,-8.808973,6.881278,4.709116,-7.115972,-0.828359,-3.847973,-3.142129,6.048964,8.215434,3.830919,-3.927818,-3.065669,-4.461291,3.801572,0.626965,-0.695401,-1.914450,-0.813400,-3.036088,-4.585092,-3.375984,-6.662086,-4.843462,-7.893885,9.948552,-2.791359,5.922274,2.121653,8.124468,4.835484,9.973836,-1.879436,2.897952,2.780874,-6.915264,-2.512276,-3.202196,2.394505,5.292535,-1.821285,-0.884675,-7.768882,6.778348,6.265035,-3.337108,-7.369847,2.135137,-8.975239,3.714908,-6.072116,6.949184,-3.790470,4.866922,-8.529822,7.875781,-5.023903,-1.207942,1.681160,-7.916143,-7.073225,4.088534,7.340549,-9.439257,1.961640,4.253983,8.335350,9.612976,1.406467,6.191655,6.165948,-4.793115,-3.015407,-3.106480,9.414209,0.848365,4.138530,-9.386644,6.867287,-1.836706,-4.241966,-1.126257,2.542334,-4.608934,5.997006,-9.368272,-9.079035,-5.135911,2.732466,8.711773,5.425425,7.307180,3.843787,2.511657,-3.598027,-3.251541,-0.192571,-6.240641,-2.155388,-5.023452,-2.849303,-5.361798,6.618602,-6.963010,5.365388,6.313775,-6.371851,6.241723,-0.127606,-3.334314,0.718378,-1.508432,2.596593,7.402405,3.703702,2.455988,-2.792654,-4.661813,-6.435665,5.733802,-0.151457,8.084849,9.373957,4.526306,3.694928,-1.194708,-4.755480,-5.304333,2.745383,7.361233,9.427419,-0.897136,-8.332079,-6.532360,9.422267,-1.267947,-9.922647,-6.990893,-9.170765,-3.620749,6.508526,-8.076893,7.551450,-1.192379,-4.227765,6.704952,-3.218271,-7.164751,-2.252891,-9.004420,-0.513566,-3.139599,-6.327520,-9.622561,-5.474571,-5.345029,4.401820,0.805392,-1.680981,3.338216,3.102718,-3.946549,-6.460463,-7.380775,7.817460,3.382948,2.045788,8.243391,-6.384325,-3.679581,-0.053538,8.831801,-8.539911,-2.181104,-6.882145,6.346852,-6.245492,6.471084,-1.484890,3.625177,-0.285489,7.536649,-8.630765,9.190275,-6.494324,7.644250,2.905877,-6.234534,0.669190,-1.466309,-8.990896,7.564587,2.301060,-1.762964,-2.936649,-6.134529,-0.769013,-4.709470,-8.869950,6.236700,-8.107194,4.913194,0.788587,0.579616,-9.960026,-5.771741,0.828817,1.599444,5.741584,3.782475,2.608733,-6.550338,0.534443,6.754840,4.091240,0.021571,1.599714,8.995865,-2.514350,-8.412031,-7.724340,-9.188309,-6.052803,-0.465043,1.634729,-9.181510,9.852616,-5.871488,3.274273,-6.787874,-4.564745,-0.376578,-1.825374,0.876597,-1.376338,8.915022,-5.450686,5.789716,6.783879,-4.968637,6.199984,-6.163168,-3.465417,3.397884,-9.750022,-6.575343,4.094073,-1.132942,-1.018650,7.076853,8.046477,3.625554,-0.855531,2.352184,-7.187034,-5.014685,-8.623526,5.239917,8.783990,-5.637260,-9.318164,-6.651971,-7.778053,-8.656097,-3.461354,8.080231,-9.835414,-8.173033,2.561504,9.211309,2.404326,3.079779,-5.997522,-2.576872,-0.386613,4.263460,8.950935,-7.552397,-9.412201,-8.620093,-7.993661,6.133704,-0.920757,2.617728,1.171256,-1.678424,-5.765013,-3.980728,-3.043334,-1.045884,9.021316,5.618081,-8.275259,-2.551943,-2.168916,6.793396,8.866780,-9.093406,-5.292081,3.489411,-5.335240,9.426021,-1.901448,2.353592,-0.667188,9.682018,1.500412,8.760270,-9.270591,-0.057657,-3.292662,-6.296357,-7.629103,-0.024000,-8.693690,-7.693356,9.374855,-6.672345,8.468551,-4.809770,7.306212,-9.868462,-1.378320,-4.264591,6.696551,-1.711853,3.089109,1.686105,8.329020,-1.753262,-8.389204,-9.548200,-5.434138,2.858179,-3.234602,-9.231497,1.329581,-3.095591,-5.483446,-7.773455,9.208510,3.270127,5.835562,3.048477,-0.091456,3.946663,-0.875344,-2.080148,-8.252936,9.714730,1.952199,-1.562222,-4.429267,7.012025,-0.557050,-6.938069,-6.330578,-3.180855,0.463083,-7.209670,8.115253,-1.901918,4.740360,8.179918,-7.053090,-4.637232,-4.019222,-9.167998,8.498560,4.680734,8.773602,8.316898,7.163765,-8.214426,0.903253,0.684933,-6.639894,4.427139,-2.831872,8.811203,3.786718,2.071337,-0.830866,-9.822273,2.743727,3.590390,6.134779,-9.915522,-5.598614,3.110084,9.416013,8.231656,-4.891305,3.352439,5.248131,4.145559,-4.151885,-6.037453,-8.135339,-2.204420,-1.834278,0.691659,-4.657171,-7.160858,-3.739038,3.569211,-6.859911,3.272504,6.353385,-4.436711,1.714987,2.511723,-6.577252,-3.857256,-3.089593,-3.987192,1.354499,-9.208880,6.701626,-7.111075,5.972958,3.561578,-3.568555,-9.036629,9.597215,-2.605039,2.701282,-7.478428,0.333947,-3.027001,8.785873,-7.274546,-3.981965,-0.824567,-6.506763,0.729974,-6.650458,6.101935,3.631055,-1.511361,-8.550875,4.482216,-9.210749,9.766593,7.244567,6.897362,-5.788944,9.475158,8.203338,-8.569929,-1.470990,5.582932,-7.594132,-4.628022,-6.267218,-5.845708,4.162004,-6.607011,8.082734,-1.843922,-6.744104,6.387318,7.061799,9.382490,5.316088,-2.922803,-9.247053,-7.203509,7.463261,-4.031935,-4.051883,-0.083066,8.261805,4.725545,6.784255,3.428605,-6.227866,-6.803210,4.877575,-5.663810,-0.343207,-9.138355,-7.455159,1.743722,4.003046,1.892896,4.795675,-5.420112,2.232708,0.246134,2.879955,-7.382545,-1.840499,8.912628,-7.802408,-9.854711,1.498940,6.042901,4.526731,1.844210,1.360718,-5.466379,-4.976703,0.628313,6.400120,-5.321788,0.754123,-0.063042,-6.813954,9.464681,0.963153,7.281165,-7.403105,-5.350550,4.970759,1.969966,-3.042582,7.031298,-4.112713,-1.508982,-5.638715,-9.256568,6.628390,2.305543,-1.986803,7.483261,-7.291869,-7.627928,4.241660,-7.339205,-5.984198,7.241497,-0.180754,-2.380154,7.848511,-5.562849,0.592255,1.971092,1.046287,-0.705014,5.166848,5.768423,-2.231152,3.507847,-4.943374,0.535726,1.178200,0.081920,7.493935,-7.796776,2.425642,-2.168913,6.414118,8.777814,-4.560874,-7.257785,4.397426,3.712567,-4.974219,-5.234583,7.994387,8.773315,-3.589444,-0.844643,-5.371426,0.794651,7.357742,4.499852,7.329685,8.306534,-0.401701,-9.750770,7.168607,-3.655412,-6.759804,-2.741013,-6.917267,-9.668074,-8.692467,-9.161765,8.871816,-4.060665,-6.432178,1.796542,6.102247,3.492164,-8.955740,2.972899,-5.590920,1.640886,-1.503995,-3.932540,-1.809290,-6.413972,8.583151,2.646826,-6.253256,4.267013,9.172385,-4.929274,7.793284,5.808235,2.702137,5.956508,-4.631330,-1.877578,-5.926968,4.268562,0.236659,6.073866,-0.255112,0.978282,5.823512,6.861213,7.436759,7.157014,-5.241754,2.402172,3.753181,3.970151,1.219272,1.842437,-2.250336,-3.925552,-1.332708,-5.127638,6.999285,5.065304,-3.394788,7.149731,-5.894018,-8.894896,3.790226,4.258397,-9.880314,-5.485218,-9.418837,5.473282,-9.937908,0.249123,4.035692,-4.873652,3.782918,9.003225,-7.561184,-0.396743,6.970210,9.301062,-0.838888,-7.006250,0.144564,-9.842404,-1.748416,-9.189742,-6.870330,3.837489,4.006207,-0.154599,6.220030,-8.173382,-1.769561,-9.882100,2.536770,5.383460,-4.423545,-3.226985,-9.558944,-6.889306,-6.380712,-0.613640,-3.971111,8.783593,8.124680,-4.074991,1.038290,-5.972293,0.353197,-4.236102,5.675378,-9.761869,3.126688,7.426720,-7.794623,-9.123682,6.250127,3.308309,-6.801538,7.430984,-3.749766,-5.034680,2.135977,8.057505,0.022494,8.185491,0.658472,2.347888,7.020746,0.393864,-4.343185,-1.556156,-4.727281,2.526624,-3.609384,-3.309415,-5.988083,9.002024,7.877705,5.673597,-4.951220,9.758683,-6.633215,-9.811412,-0.469986,6.893894,2.895943,-8.159996,4.325930,-4.178737,-5.861054,-5.461886,9.875327,-2.844104,0.663769,8.937074,4.520682,3.748584,2.857353,7.896458,1.757012,-6.582669,-8.890138,-9.671045,-2.492384,-5.199073,3.395928,-2.959188,-5.079117,-2.904239,-1.264313,0.512398,-5.719998,5.512338,-4.408318,3.544240,-3.944423,-3.337691,-0.192082,-0.549848,6.460090,-5.519430,-7.931600,0.365390,9.798440,-6.233437,0.556760,2.635442,-5.592640,-9.070365,9.956015,0.716756,2.316902,0.876574,-0.943107,6.976556,-7.835584,7.575537,-4.412560,7.180227,-0.891498,8.916353,1.883464,0.630720,8.377642,-2.303071,-0.189501,-9.033962,3.102294,8.301747,-2.664549,7.690322,-6.448568,0.046806,7.242841,1.830333,-8.456410,8.116325,5.487789,0.364508,-6.360479,-3.841300,7.278222,4.561381,-6.088677,3.630990,3.601130,6.952684,4.532275,-1.501452,8.213018,-5.940421,-9.897963,9.275885,-6.200761,-8.852183,-6.152815,5.299066,-3.625819,-3.875261,-0.701889,3.711828,-3.578311,8.327965,1.111341,-4.873527,2.255263,-4.286410,-2.435016,-3.274677,-0.998417,-4.005658,9.668924,2.594761,-4.185091,-4.258818,8.692827,-3.547996,-5.573586,8.765698,9.429097,-8.658124,-9.896905,-2.181068,-4.336739,7.210565,6.282342,0.678927,-2.939479,-6.873528,-2.531583,1.884186,-3.340686,8.504980,1.855107,-9.313273,-2.559717,-6.093741,7.324948,9.249943,9.729081,7.365199,-5.886884,9.434879,7.739314,9.067930,-3.588486,1.820257,-5.803677,0.936417,1.072634,-8.679541,-9.413849,-8.944968,1.206963,1.532844,-7.285927,-5.770632,9.160626,2.032031,2.417629,-6.143863,2.677643,0.753794,-8.838011,-5.055655,-8.850811,7.283750,8.700345,2.604028,8.514643,7.946316,6.737775,4.500243,2.382708,4.819299,6.745145,-0.173418,8.714172,0.357534,-4.185064,7.891132,-0.659493,4.203063,-9.692500,9.504028,1.558423,2.323874,-9.065226,1.293373,-0.318335,-1.970660,-8.167358,-8.534381,-9.274577,4.962278,1.359580,-2.245293,3.954825,7.701656,-3.223070,5.097286,0.639964,-6.076767,8.221228,1.267207,-2.281609,-7.230899,-8.693152,-4.413399,-6.028399,1.366731,-8.616706,7.967125,6.324906,0.561233,4.538019,5.998968,4.130633,-8.544642,3.624467,-2.137656,-9.775447,-4.432347,-3.964714,1.276993,-1.448031,-5.739555,-8.830454,-1.879215,1.438229,9.369866,2.186143,0.335856,-7.147529,0.897816,-8.543046,6.208979,-7.418546,7.688146,-5.447374,8.447075,-0.775779,9.524857,-9.844323,-9.142388,4.121511,-4.148787,4.814129,-6.787030,-4.314421,2.851349,0.148816,1.623341,7.730656,-2.266931,3.245388,-3.836999,-3.643100,7.151728,-6.127509,-8.646493,5.821981,-9.672701,-8.941304,0.037382,-5.700643,1.209028,1.162182,-1.189206,-5.232992,4.714960,-8.715162,6.603247,2.368143,3.484225,-5.012115,-6.166085,5.319897,-6.466607,0.375940,-6.330591,3.314695,1.017945,-8.240153,0.326116,2.084460,-8.958850,-5.096294,-6.733307,-3.935095,9.270816,6.638118,2.872757,-4.554381,-7.025211,8.652613,-7.941565,6.880200,3.297545,7.842857,-1.143085,7.113435,-4.148414,-0.621001,-7.301168,1.316375,4.913896,7.116568,5.086808,7.449561,9.577699,-8.464964,3.446203,4.951542,4.134247,3.269121,3.890907,-8.693039,-4.206489,-0.103713,-1.023536,5.507996,-0.057446,-0.870877,-6.375272,-4.756857,-4.426210,4.375024,-5.213868,-5.584639,9.829287,4.281992,4.608931,8.884925,-5.961819,-7.179748,6.293652,-6.518433,-7.039570,3.106558,-8.629259,-1.527297,-9.285802,-5.682186,-9.657576,-6.263978,-4.863681,1.208653,1.531289,-2.420915,-1.801543,-4.040424,-9.066468,-6.443207,2.204507,5.720621,6.663578,-0.694122,-5.822808,-9.594944,-7.648593,-0.440362,-2.609676,-8.541351,-1.934107,8.405147,5.927013,-6.493647,-6.076871,-5.385830,-1.755656,-6.139785,1.961603,2.631280,4.464955,-4.255024,-4.727224,7.858811,-0.773189,7.354863,-7.992174,-0.641333,-6.026264,8.369459,2.763872,8.141823,8.141341,0.534589,-3.397266,-4.501020,-3.002725,8.057801,-5.148601,9.830660,-8.720004,4.803604,7.682707,-6.097353,7.374994,-4.288801,2.392954,-1.710316,6.734176,7.629270,8.800950,-7.685396,9.973627,-9.333317,-2.202152,-7.375957,-6.979534,5.451851,4.112282,-9.388128,5.941497,7.037463,-2.854321,1.570371,6.940441,4.430087,6.925029,-6.717354,-4.029822,-5.834529,-4.333767,3.337690,-0.666733,-9.384152,0.301568,-0.720623,-3.659612,0.937580,-9.784503,-9.689429,-1.046369,-6.101349,5.085767,-9.542037,7.681399,-8.796574,8.818207,5.615934,-9.322449,-8.724416,-1.370296,-5.896743,-4.243907,4.537805,6.321382,5.583409,6.873308,1.676682,-4.155211,-9.715259,-5.968622,-1.750297,0.602631,9.380080,4.728841,4.266732,5.534421,-2.786850,9.609360,-1.700037,-3.997391,-5.849008,2.885955,-8.914594,3.372007,9.756611,-1.643803,-5.620960,8.094755,1.417471,4.820593,-5.787113,7.947897,-2.523201,-0.982472,2.816477,-7.149693,4.172353,2.385009,-0.995194,-7.611272,-5.662336,9.884374,-8.806605,-2.485518,3.280023,-8.696914,-6.330268,1.933404,2.589736,6.033600,-4.627859,-5.181851,0.336874,0.374394,4.490974,-9.844932,-2.292277,-0.068649,-1.830471,5.730433,-6.176252,-7.521890,5.650462,8.082924,0.731651,8.085839,2.850075,5.408769,0.447065,-9.915937,2.813590,-9.855758,-4.999860,-3.067783,7.635755,-2.200068,-8.299908,6.838504,-5.234629,-0.697451,5.561699,5.671200,6.549235,-0.725540,-4.683124,2.521365,9.669240,5.733473,-0.145072,-1.492768,1.034856,3.109081,0.362910,3.464328,-8.212968,-0.379303,5.555296,-3.103818,-0.931311,3.629003,5.253478,-3.939153,-5.470846,-0.087134,-1.056635,2.658974,9.647992,9.801188,1.507858,3.710246,-2.956063,1.095614,6.681508,-5.811278,-5.587509,-8.259010,9.808435,-6.396579,9.090327,-0.066975,-8.134200,4.536825,2.169047,-1.308895,-6.798816,-3.391116,1.386891,-3.081772,4.998667,3.880927,8.479195,6.853788,-6.458951,-2.874381,-8.050378,6.456258,-8.630213,-2.845114,4.530534,-9.208293,-5.056377,-0.784668,8.579850,4.870909,-6.415602,-7.945321,-1.216741,-0.415485,-2.517448,-4.365776,1.772745,5.275411,7.942127,1.231620,-2.101787,-2.821610,-9.982881,6.887010,3.145665,-8.090084,6.875801,7.753061,-4.849729,-7.259090,8.461080,1.424729,9.146446,-5.972719,1.588700,4.834708,-5.611859,-4.805526,6.141551,-8.069018,-8.573846,-5.539826,3.121773,-7.170743,7.388375,-0.118105,2.427632,7.036510,-3.371651,3.020668,-0.456300,-2.868200,-8.873476,4.634449,-8.884939,3.201479,5.975249,-0.669404,7.450296,-9.692106,4.124320,1.939208,7.116997,9.382516,5.921391,3.817946,-6.411571,-9.178309,-2.812478,-5.715654,3.731045,-4.256264,4.165086,9.661899,3.081979,1.850694,8.957648,8.050475,2.604607,-7.550296,-0.584215,-7.670924,4.618025,5.810653,6.376531,-4.067375,3.287134,6.735682,4.687707,-2.246671,-3.365451,-5.003585,-1.336641,-5.384661,-2.358943,-8.169435,-2.036251,6.764883,2.711062,-6.034771,-5.930139,1.614324,3.213465,-3.172004,-0.813240,8.785899,-5.966064,-3.860952,8.383252,0.619483,9.592106,-3.228276,-8.408789,-3.465106,4.927400,-7.347153,8.663196,5.138703,-4.995615,-1.214554,-5.146603,-7.297415,2.531734,-9.270998,2.771543,-8.600325,7.039393,9.437883,1.369365,-7.733842,-4.388361,-8.662929,-3.544779,-3.454478,-3.017067,1.660546,-3.410165,6.038952,-9.858249,-1.033658,9.177788,6.512111,-9.989362,4.359270,-0.094486,-7.390089,-6.143713,-2.372147,-9.728668,-5.744899,0.196655,-8.808076,4.680977,5.280959,0.258667,8.981743,2.400000,1.449609,3.595583,8.710984,-6.342453,-9.510398,-5.694521,-1.638016,6.917701,2.554022,-2.982435,-3.598630,-7.552176,-5.011041,-6.576610,-6.335153,-1.158207,5.926085,-2.138972,8.014795,-7.966497,-1.887707,-6.838686,5.799177,5.493767,2.916754,-5.178262,2.267764,0.568971,-0.654961,6.498161,0.354162,5.634684,-7.401950,8.125599,-3.563221,2.958745,9.761437,2.015396,-8.087227,3.698112,3.873491,4.709921,-1.352112,-0.195296,-3.317134,-2.000361,5.268177,-1.123676,4.434928], dtype = "float64")#candidate|3120|(1800,)|const|float64
call_3119 = relay.TupleGetItem(func_2084_call(relay.reshape(const_3120.astype('float64'), [1800,])), 6)
call_3121 = relay.TupleGetItem(func_2087_call(relay.reshape(const_3120.astype('float64'), [1800,])), 6)
output = relay.Tuple([bop_3115,call_3119,const_3120,])
output2 = relay.Tuple([bop_3118,call_3121,const_3120,])
func_3125 = relay.Function([var_3114,], output)
mod['func_3125'] = func_3125
mod = relay.transform.InferType()(mod)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3126 = relay.var("var_3126", dtype = "float32", shape = (10, 16, 11))#candidate|3126|(10, 16, 11)|var|float32
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3127 = func_3125_call(var_3126)
output = call_3127
func_3128 = relay.Function([var_3126], output)
mutated_mod['func_3128'] = func_3128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_3139 = relay.TupleGetItem(func_2621_call(), 0)
call_3140 = relay.TupleGetItem(func_2623_call(), 0)
output = call_3139
output2 = call_3140
func_3159 = relay.Function([], output)
mod['func_3159'] = func_3159
mod = relay.transform.InferType()(mod)
output = func_3159()
func_3160 = relay.Function([], output)
mutated_mod['func_3160'] = func_3160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_3170 = func_800_call()
call_3171 = func_800_call()
output = call_3170
output2 = call_3171
func_3177 = relay.Function([], output)
mod['func_3177'] = func_3177
mod = relay.transform.InferType()(mod)
mutated_mod['func_3177'] = func_3177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3177_call = mutated_mod.get_global_var('func_3177')
call_3178 = func_3177_call()
output = call_3178
func_3179 = relay.Function([], output)
mutated_mod['func_3179'] = func_3179
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3180 = relay.const([[[-9.361920,2.906355,-0.536853,-5.848114,4.593793,3.764753,5.219958,7.797513],[-5.526190,-8.932086,-6.315342,-7.315420,-5.487704,-9.028870,-4.407171,-5.254778],[-2.228539,8.713643,0.616448,-8.061310,-1.747096,-6.677533,5.035691,-3.092933],[2.722834,-5.750844,-8.601560,-6.159943,-2.334968,2.520263,-3.446370,9.328708],[-0.462278,9.468174,1.018752,-4.032875,6.560599,6.887749,-1.895864,7.930709],[-5.569239,4.409391,-5.994371,-8.295801,-5.176943,-0.904121,9.495204,9.486377],[-7.650041,1.152496,-2.805248,-8.675117,1.620954,-4.469074,3.623349,5.303363],[-6.669499,-4.760045,-1.946537,8.440092,3.237896,-8.216824,-3.746476,-0.277266],[-3.590948,-5.919663,5.820176,0.792877,-6.497391,-9.045190,8.838010,0.460768]],[[-5.957414,-8.159334,-7.209459,9.043425,7.876301,-7.602278,0.864772,6.387374],[6.999676,-9.542834,-5.923371,0.887484,-1.813654,-9.280766,5.231528,0.857162],[-1.660660,9.079535,1.783192,-2.542364,-1.703808,-9.481319,2.837471,6.523452],[2.700550,3.777327,8.761977,-4.011903,-7.041181,0.691132,0.967062,5.017406],[6.348086,-3.165580,5.666843,3.119238,-7.362038,3.349632,2.553902,-9.035166],[-0.389926,-3.321959,-6.955935,1.744357,-1.268446,-5.015975,7.617432,7.294955],[-7.306442,-0.458259,-0.966649,0.058283,3.746487,-9.891988,-9.512109,-6.714901],[-0.596701,-7.957608,3.660811,8.390884,0.607422,7.459290,9.121255,1.662958],[2.242219,6.769699,7.318130,-9.434713,6.745246,-3.641201,8.090870,-9.001597]],[[4.437665,-7.625200,5.673104,-0.264395,1.443388,7.587325,-6.896480,7.955226],[-1.505240,8.067652,5.585087,1.008816,-6.511125,-5.130371,-5.113454,7.312003],[-3.671886,-4.841200,1.022390,-1.746415,0.539121,6.358010,-2.607491,3.517554],[1.541984,-0.758222,-8.617745,5.450744,6.590518,-6.953184,7.658425,-4.231377],[9.205822,9.230921,2.109492,3.984732,2.491916,7.789006,5.171986,9.627793],[6.703779,-2.280308,0.620875,2.625947,0.112027,-1.387565,2.565969,-4.951976],[9.513479,-6.372557,5.306965,7.094942,-6.819299,-0.750781,1.814128,3.564169],[-9.448676,-3.599631,5.061369,-7.696893,4.173046,2.517523,4.949003,4.669678],[2.750602,-3.515812,-6.067019,-1.087800,-8.556532,-2.228323,-1.308820,-3.018257]],[[9.746482,-7.970327,-8.465721,-8.435057,3.176568,8.448223,2.047026,9.489555],[-3.795233,-4.554227,-6.754764,8.293249,4.211995,-1.315444,5.039330,-6.571580],[-6.816572,-3.300154,-6.387017,-3.861954,-6.048357,-6.770150,1.482160,0.511072],[1.699684,-2.574390,-4.349764,-5.583305,7.478251,4.548982,-3.444954,-7.674194],[-0.486253,2.063481,6.708621,-2.578928,9.044617,8.200907,-1.530469,-2.507353],[-6.350273,1.378449,4.390424,8.438286,1.654605,4.187708,-6.723256,-7.537015],[-1.620831,8.538853,2.406820,-4.778432,1.182747,8.973235,-7.634630,0.483277],[-0.217901,0.188231,1.155860,9.608032,9.041573,-0.259684,-7.728180,-1.522118],[-7.096420,-7.823309,6.226783,9.784508,-7.919806,-3.444841,-1.109457,-2.348673]],[[0.871448,-6.974540,-7.816853,8.553381,9.449914,9.988268,-2.953406,-6.908305],[-0.197744,-1.765562,2.165514,-8.984990,9.502073,-3.393399,-9.326974,-7.104085],[-8.654655,-4.061636,-1.192577,-0.019231,7.068361,9.640406,4.649184,2.428271],[-2.360382,4.577470,7.473031,-1.715220,0.787909,-2.746378,1.056415,9.566160],[-0.781177,-8.691360,1.391261,-1.771251,-7.978454,-6.191988,7.567518,1.202881],[2.867091,-0.271432,-1.980156,3.022231,4.500919,-5.486723,6.700334,6.010082],[1.171163,-6.076025,-6.976946,-7.837625,9.185882,8.720243,-1.344421,-8.558411],[6.525193,-0.818501,0.601860,6.110051,7.096741,2.285247,7.278563,-7.121422],[-4.935532,7.700964,5.280049,-8.010744,-0.041623,-5.453965,-1.059321,6.374828]]], dtype = "float32")#candidate|3180|(5, 9, 8)|const|float32
uop_3181 = relay.exp(const_3180.astype('float32')) # shape=(5, 9, 8)
output = uop_3181
output2 = uop_3181
func_3204 = relay.Function([], output)
mod['func_3204'] = func_3204
mod = relay.transform.InferType()(mod)
mutated_mod['func_3204'] = func_3204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mutated_mod.get_global_var('func_3204')
call_3205 = func_3204_call()
output = call_3205
func_3206 = relay.Function([], output)
mutated_mod['func_3206'] = func_3206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3274 = relay.var("var_3274", dtype = "float32", shape = (13, 9, 5))#candidate|3274|(13, 9, 5)|var|float32
var_3275 = relay.var("var_3275", dtype = "float32", shape = (13, 9, 5))#candidate|3275|(13, 9, 5)|var|float32
bop_3276 = relay.add(var_3274.astype('float32'), relay.reshape(var_3275.astype('float32'), relay.shape_of(var_3274))) # shape=(13, 9, 5)
output = bop_3276
output2 = bop_3276
func_3285 = relay.Function([var_3274,var_3275,], output)
mod['func_3285'] = func_3285
mod = relay.transform.InferType()(mod)
var_3286 = relay.var("var_3286", dtype = "float32", shape = (13, 9, 5))#candidate|3286|(13, 9, 5)|var|float32
var_3287 = relay.var("var_3287", dtype = "float32", shape = (13, 9, 5))#candidate|3287|(13, 9, 5)|var|float32
output = func_3285(var_3286,var_3287,)
func_3288 = relay.Function([var_3286,var_3287,], output)
mutated_mod['func_3288'] = func_3288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2299_call = mod.get_global_var('func_2299')
func_2300_call = mutated_mod.get_global_var('func_2300')
call_3373 = relay.TupleGetItem(func_2299_call(), 1)
call_3374 = relay.TupleGetItem(func_2300_call(), 1)
func_3159_call = mod.get_global_var('func_3159')
func_3160_call = mutated_mod.get_global_var('func_3160')
call_3398 = func_3159_call()
call_3399 = func_3159_call()
func_730_call = mod.get_global_var('func_730')
func_732_call = mutated_mod.get_global_var('func_732')
call_3403 = relay.TupleGetItem(func_730_call(relay.reshape(call_3398.astype('float32'), [10, 16, 11])), 0)
call_3404 = relay.TupleGetItem(func_732_call(relay.reshape(call_3398.astype('float32'), [10, 16, 11])), 0)
output = relay.Tuple([call_3373,call_3398,call_3403,])
output2 = relay.Tuple([call_3374,call_3399,call_3404,])
func_3405 = relay.Function([], output)
mod['func_3405'] = func_3405
mod = relay.transform.InferType()(mod)
output = func_3405()
func_3406 = relay.Function([], output)
mutated_mod['func_3406'] = func_3406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3555 = relay.var("var_3555", dtype = "float64", shape = (4, 6, 4))#candidate|3555|(4, 6, 4)|var|float64
uop_3556 = relay.sin(var_3555.astype('float64')) # shape=(4, 6, 4)
func_1661_call = mod.get_global_var('func_1661')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_3565 = relay.TupleGetItem(func_1661_call(), 0)
call_3566 = relay.TupleGetItem(func_1663_call(), 0)
output = relay.Tuple([uop_3556,call_3565,])
output2 = relay.Tuple([uop_3556,call_3566,])
func_3568 = relay.Function([var_3555,], output)
mod['func_3568'] = func_3568
mod = relay.transform.InferType()(mod)
mutated_mod['func_3568'] = func_3568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3569 = relay.var("var_3569", dtype = "float64", shape = (4, 6, 4))#candidate|3569|(4, 6, 4)|var|float64
func_3568_call = mutated_mod.get_global_var('func_3568')
call_3570 = func_3568_call(var_3569)
output = call_3570
func_3571 = relay.Function([var_3569], output)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2513_call = mod.get_global_var('func_2513')
func_2515_call = mutated_mod.get_global_var('func_2515')
call_3583 = relay.TupleGetItem(func_2513_call(), 0)
call_3584 = relay.TupleGetItem(func_2515_call(), 0)
func_3093_call = mod.get_global_var('func_3093')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_3597 = func_3093_call()
call_3598 = func_3093_call()
uop_3605 = relay.sqrt(call_3597.astype('float64')) # shape=(2, 2, 5)
uop_3607 = relay.sqrt(call_3598.astype('float64')) # shape=(2, 2, 5)
func_3568_call = mod.get_global_var('func_3568')
func_3571_call = mutated_mod.get_global_var('func_3571')
var_3614 = relay.var("var_3614", dtype = "float64", shape = (96,))#candidate|3614|(96,)|var|float64
call_3613 = relay.TupleGetItem(func_3568_call(relay.reshape(var_3614.astype('float64'), [4, 6, 4])), 0)
call_3615 = relay.TupleGetItem(func_3571_call(relay.reshape(var_3614.astype('float64'), [4, 6, 4])), 0)
uop_3621 = relay.exp(uop_3605.astype('float64')) # shape=(2, 2, 5)
uop_3623 = relay.exp(uop_3607.astype('float64')) # shape=(2, 2, 5)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_3632 = relay.TupleGetItem(func_854_call(), 0)
call_3633 = relay.TupleGetItem(func_855_call(), 0)
func_1721_call = mod.get_global_var('func_1721')
func_1723_call = mutated_mod.get_global_var('func_1723')
const_3638 = relay.const([[-7.016768,-3.708187,6.216358,4.172637,2.994010,-7.332777,-7.344309,6.993362,8.265205,-0.535837,-4.446791,3.588844,8.872327,-9.126490,9.472441,-6.053998,6.674459,9.107466,5.700566,-6.761577,-1.533678,2.913328,-2.670084,-6.482703,-5.960706,3.057771],[7.206575,-8.153846,8.330833,-2.364015,1.891739,-5.082420,2.130628,5.278027,-6.162649,-1.687920,-5.519824,-4.944025,-3.872911,-3.748444,4.703695,6.776853,1.342450,-5.625928,2.280406,1.342262,3.877639,4.684947,-5.237922,7.941410,3.466094,4.402614],[8.280990,-0.408546,-8.500853,-0.203295,-6.383410,-5.399421,6.921510,-4.046408,2.926639,4.691825,3.091561,5.640525,6.991492,2.848298,-6.051448,2.677061,-6.572606,-5.794204,-9.594697,-7.858960,-3.257928,-9.281304,9.479544,-1.705501,3.738826,5.689150],[4.475248,-1.866844,-2.656724,2.355088,-3.024157,-6.761159,-9.939733,8.837996,-4.440444,-0.803243,-5.675924,-4.271856,7.275990,-5.270785,8.473050,-2.037143,-9.000300,3.573047,-5.443985,-7.734791,0.011280,8.853794,8.572204,5.705698,-8.566137,-1.401401],[-3.996242,4.020584,-4.277169,-6.747040,3.311637,-1.446967,7.958646,-1.190658,-4.679496,-6.141711,-9.931015,0.953085,-4.979670,6.293816,-7.899964,5.048700,-7.194677,2.381825,-5.331083,-0.704276,-1.840090,-4.438070,8.957837,7.464420,1.714429,3.658951],[7.819495,5.400763,4.176407,-7.467128,-9.976535,7.969334,-6.035738,3.824569,-9.487518,7.084119,-2.326313,4.705023,-6.434883,1.406415,-1.357687,2.689146,-3.945939,-6.579862,0.992385,4.853686,-7.987657,1.203848,5.413354,-9.366771,-7.635137,-4.955939],[5.277777,-9.434679,-0.189977,6.174093,8.183695,-9.093108,0.783086,8.356988,-4.398008,-5.480856,6.883815,9.067998,9.936267,6.202349,1.899615,-8.127478,4.939697,9.060720,5.968939,-1.547597,9.628890,-1.049008,0.296953,-7.782304,-1.283052,8.195364],[-9.618321,3.383309,-0.677883,5.061641,-5.520409,-4.755679,0.029814,-6.880394,-4.649412,7.333193,2.180797,-7.817161,1.738040,-2.691211,0.379460,-3.001205,4.625903,8.402706,-6.796073,2.641794,1.638586,-6.544580,0.266126,4.819760,7.989978,-1.795463],[-5.622778,-4.130842,6.375735,4.885827,-6.379613,-8.230159,1.396302,5.645861,-4.349433,0.443084,-3.879287,-6.023227,-9.139434,1.197477,-0.225308,-8.005138,-2.297406,9.889277,-4.408667,-8.376768,-3.472336,-6.333728,1.926235,8.871560,-9.479442,7.182490],[-5.888848,4.932811,0.511214,-6.974932,-6.230829,-5.348053,2.268720,-5.620182,-3.761772,-8.974468,0.053568,9.805420,-6.141261,-2.520669,2.767273,5.470940,-1.979463,-9.268792,4.548440,0.970476,6.225329,-0.691601,8.568742,-4.117040,-2.896896,-2.392805],[2.232425,-9.962199,-7.991015,1.032663,-3.752759,3.753729,0.798402,-1.999448,5.768999,-7.667631,7.599436,2.346052,7.323704,-4.126521,3.550858,2.752554,-0.808821,-8.488791,-6.025054,-0.625312,9.496252,6.741095,0.943496,3.968087,-5.683524,-2.796051],[0.734193,-0.694325,1.159188,-9.657142,-5.553502,-8.916093,8.075674,0.612001,-5.575960,-0.074710,-0.139733,-5.718272,2.261025,-3.324938,6.398983,4.094303,-7.896443,5.103500,-6.408475,-8.312435,0.920589,-6.914820,-6.508665,-1.412614,9.662725,-0.872566],[5.625481,-9.279958,-4.143057,-1.987595,9.002606,-3.108884,2.034196,6.173320,6.765316,-0.060712,-8.011643,3.241390,6.765082,3.272449,-2.445484,-0.786835,-2.402058,-9.884606,2.736413,-5.990899,-0.467137,-6.257850,-0.328834,-1.518826,-0.841926,-9.932825],[4.231199,4.498302,-8.664899,4.683498,-2.274460,-2.543578,-9.834387,0.278531,0.915618,-3.709703,8.006304,6.363708,9.014446,8.783193,2.724153,-2.491757,-5.282483,8.924972,9.418497,5.887343,-3.276081,-1.137230,8.009621,-5.613214,-6.484943,-5.271104],[2.123640,6.572939,3.716691,-4.505404,5.275305,3.448071,-3.738269,-6.094681,-3.593176,5.400034,1.817268,4.065579,-3.583518,8.529170,6.382635,-4.389317,1.485232,7.055448,-5.979588,9.509742,-0.597394,0.461645,2.644915,-1.079325,-6.232117,-6.441495],[-6.308737,-0.706928,3.679060,0.027852,4.036418,-4.616206,3.929388,-4.775911,2.517621,4.360041,-8.865594,2.145685,-1.759422,6.136833,7.692778,-4.984564,-0.438403,-6.857187,-1.931118,-1.277523,8.385307,1.570103,-6.278105,1.740745,8.774956,4.776145],[6.177326,-3.593431,1.144804,-4.445333,0.130713,-7.458061,4.013432,-9.144195,-8.600756,-0.566312,3.264053,-6.200059,6.450781,0.877465,6.476005,-1.401433,9.449896,-2.670391,8.600648,-5.784440,-8.970161,-4.195583,4.859996,4.134543,6.736190,-8.123905],[8.478306,-6.186318,-8.434064,-5.690761,-1.665547,-4.542471,8.088775,-3.241947,-7.810355,8.719728,7.691142,-6.782279,-3.904666,-3.571877,4.889526,-9.712218,-3.576208,1.036069,6.871983,-1.147391,0.672546,9.619773,2.899660,4.752729,-4.814857,-6.769706],[-0.476239,8.563908,6.516278,-9.543712,-8.827244,1.721186,5.104834,2.895712,-6.009615,-3.772736,-3.114796,-7.157744,-7.555469,7.751600,2.506499,-6.991568,5.270140,-7.831567,-0.579747,2.529866,-5.696531,3.627956,-2.961996,-6.039995,-3.078126,-9.706723],[-6.570670,-3.202605,-5.570981,-8.581738,-9.148192,4.551894,-4.756097,-5.286240,-7.789459,2.633852,-3.702395,-9.115600,6.172549,-9.940726,7.864059,-8.787527,3.288116,-7.038711,2.040712,6.849368,-9.222769,1.074607,3.821893,2.446300,8.483880,-3.393538],[0.103881,-6.613693,8.219119,-6.660833,8.621615,-6.447065,3.408776,-9.206601,5.963631,-9.607101,-1.608953,-4.212418,2.072986,0.547071,-7.178652,0.299050,-8.144529,-9.135202,-4.301830,6.591967,-3.544270,-9.442724,-1.773098,-1.426916,5.598814,5.760716],[-2.960941,6.292662,8.506441,-0.987092,-5.912407,2.533167,-7.693295,-7.428398,-8.922812,-7.345185,9.230180,4.523979,-1.628525,-7.989662,-3.289185,3.012815,7.186472,8.496456,-2.011269,4.028687,1.491671,9.496040,-3.090609,-8.645455,4.712704,3.850838],[6.988595,7.373648,-5.262715,2.363526,3.458814,4.651718,4.535411,-0.514147,8.116170,-3.238342,-4.016946,-9.896705,5.414621,-6.810722,3.122190,-9.553234,-5.277858,-7.122591,4.545090,0.116807,5.590033,2.045485,9.953565,-7.293353,9.593859,7.240477],[-5.287420,5.125944,-0.337445,4.610841,1.280883,0.667582,2.550491,2.000301,3.937124,9.726942,7.612449,-5.396410,-5.656780,0.267039,3.466055,-0.735223,-6.230960,-2.206293,8.795095,4.153895,8.289065,-8.669226,-2.367097,6.693353,-0.263274,-1.213719],[0.189595,6.923440,2.670958,-8.387035,3.037030,2.620554,-5.880436,6.129937,6.280747,-2.588947,2.498765,2.796379,-0.568632,3.971132,2.394834,5.008503,-8.830988,2.950553,9.798395,3.497958,-3.819332,6.893362,-5.814305,-7.394284,2.103251,-2.935405],[5.049192,-3.382698,-9.861662,-5.522891,-2.908646,-9.252914,-0.748884,-3.919915,6.238899,3.105311,-6.183953,-3.545053,9.490849,-0.990953,-6.719539,1.902811,-9.800768,0.808367,4.031345,1.965684,4.356297,8.524350,7.281795,-0.561443,8.344778,-7.202870],[-7.301728,-7.111366,0.521542,-8.600146,3.039397,6.420055,6.741284,-0.041527,-1.632497,-9.406863,4.954789,-4.644515,-6.588337,-5.558075,-2.211066,7.678703,2.280162,-0.743121,5.735609,-9.204655,-2.143416,-0.473152,1.201111,-3.539534,-7.975818,4.728553],[-8.998098,-5.413023,-2.961455,-0.255616,0.070672,0.039480,2.662914,9.477272,-1.779576,2.278888,1.325675,6.583437,-0.968067,0.985717,-0.501828,5.514455,-5.019111,2.349931,-2.129555,3.303478,-2.504288,-4.692736,-5.335639,-4.109207,-6.134062,6.299423],[9.006317,-8.009614,-6.372461,3.752720,-8.938032,-7.459446,-9.654837,-3.486998,3.974681,6.477667,-8.019465,-6.874069,9.307551,-5.211965,-3.785172,-4.228760,-1.299694,-3.779490,-1.582429,5.522177,-6.857883,1.573724,-2.667519,7.536975,7.651029,3.977470],[-6.958712,-4.264746,-8.963695,3.739425,-7.703256,-7.624235,-5.236398,6.574539,-5.561839,-4.042832,-4.156702,-1.003722,0.149139,5.224578,-2.573353,-2.897620,-7.488921,-4.197170,2.104867,4.103583,9.648288,-6.655326,-8.739270,-9.130606,3.771117,0.505425],[-4.424443,-0.095548,6.165577,-7.955115,-8.329703,9.510186,8.050961,4.164157,1.131060,-8.356514,-9.456317,7.379464,8.363081,-6.697766,-9.820156,-4.388053,6.575582,-4.782076,-8.064618,-7.121566,6.900395,8.706238,3.122753,-7.934922,-3.986001,-6.309214],[5.354616,7.006933,2.270182,1.941054,-1.618741,2.573406,-9.359469,-6.466785,-5.086860,0.578346,-3.916723,4.120518,5.252316,6.227696,-7.373713,3.994091,8.276184,-9.947962,-8.607113,-9.115604,-5.745056,-4.806187,2.972151,7.843995,0.668577,8.514859],[-0.932672,5.184631,-6.860445,3.550362,-0.566442,0.859479,7.394241,2.997326,0.772430,-6.328137,2.687901,0.081704,-4.203635,-3.457566,2.692505,4.425947,-6.424136,-1.336727,2.097275,-5.392104,-3.092080,7.062044,6.857374,0.498652,-0.610004,-6.451222],[-3.834968,-2.008236,6.690114,-0.990662,1.069002,-9.909808,-2.122502,-0.974734,-5.468907,-8.598193,-7.101236,-5.564727,-4.681095,4.095198,-8.040155,-1.845961,4.123077,7.837295,7.199471,7.202739,5.117979,2.436275,-1.373370,-3.861644,-6.548143,4.992506],[-9.734612,-3.312511,1.853033,-7.013228,-7.512857,-7.395140,9.214564,-0.138022,8.478995,0.699639,9.241769,0.001848,2.560232,-8.535151,-4.563829,-3.957128,5.459157,8.360148,-5.584883,-2.456831,-8.648636,-8.820722,-0.712820,-4.873278,1.521102,1.282697],[-7.423090,-9.529589,-4.787894,9.922785,6.474286,9.564406,1.639265,2.196072,-7.618548,-9.995310,7.352999,2.607184,9.787530,0.506596,5.502097,7.752758,3.180237,0.006670,-4.249706,-2.231550,6.156686,-4.183386,-7.584639,-8.163835,-5.986058,6.435458],[-9.230570,4.691090,9.375561,-9.092871,5.881052,-1.842477,7.710572,-8.840262,4.328803,7.000850,8.111555,0.958829,-3.130013,-1.577533,-8.846329,-9.207551,-2.712821,-1.154703,-3.784369,1.521364,-7.673390,2.987544,6.716628,7.611085,-8.011845,2.327383],[-5.448137,-5.356901,5.568603,6.558137,-4.221843,-7.544779,-2.083614,-1.134566,1.027629,-0.690729,-7.363436,4.580078,-8.432954,-0.874812,-8.781870,-0.430185,-9.726185,5.087794,0.584402,8.901809,-6.550935,9.206645,-3.881900,8.312274,8.967244,6.783668],[8.460153,1.719890,2.355275,4.163606,-0.010458,-5.814825,-1.337351,-7.406214,9.968288,7.764985,0.006526,-7.687614,1.279535,4.630654,2.583623,-0.198202,2.414958,-1.644089,5.232732,-7.173044,7.113957,-4.011258,-7.584360,-3.118598,-9.629937,2.576264],[-3.497944,5.850070,-5.997531,-7.411406,4.119270,-8.151788,-4.718767,4.581316,-1.946313,9.400477,-8.471537,1.178802,-6.299209,-3.089116,-0.279028,-2.175824,8.911800,-2.103689,-3.163097,-6.970449,7.159566,7.729169,8.376948,1.742669,-9.270428,-3.760263],[-2.543176,-0.068584,2.089524,9.017840,-3.553442,-1.387787,1.529411,7.867639,3.993884,1.010900,7.363696,-0.920131,9.374871,-6.095534,4.038707,-1.042885,6.958220,-0.837561,-2.677547,-9.471931,-8.602722,-9.822432,5.965082,4.675918,6.962516,3.897026],[2.348506,-7.599341,1.021737,4.670916,2.806419,-3.313913,-5.194827,4.153535,-5.408814,1.304011,-7.093768,-4.313238,-4.520616,-1.555718,-6.904987,-1.303246,3.441757,-2.823191,7.986091,0.768158,1.775973,3.942305,3.468950,-0.535333,-0.810698,-5.905460],[-6.650922,-4.839335,-8.159074,-2.324612,-2.583479,5.320788,4.000423,-5.865598,5.706876,1.505321,9.291453,-3.866193,0.058735,-4.842007,-5.024840,-1.924204,6.878336,5.207600,7.284959,-4.312445,-3.096652,-4.244419,3.559434,5.043765,-4.509228,-3.792368],[0.864324,-7.238407,4.694214,0.388818,7.187599,-5.682103,-2.297697,6.609437,-7.759136,-4.399382,2.141930,-6.420062,0.573265,5.042334,7.475065,-3.501045,-0.486736,0.250512,5.977723,8.576114,7.497768,-4.047111,-1.939571,2.122319,8.966765,0.984625],[-3.108821,-3.609955,7.512593,-7.848433,0.724039,-2.012168,4.730840,0.061137,-8.104084,-0.121590,8.595030,9.138957,-3.420963,-2.598238,-1.747412,-5.350662,8.655426,8.950995,-9.576732,5.819372,-0.476990,2.808962,-2.396576,-0.687540,9.120362,-7.227341],[9.602578,-4.722952,-4.562125,-7.870601,9.323849,-7.665693,8.630113,7.603482,3.642495,7.594135,-6.600255,9.493820,3.435304,6.719354,-1.688648,1.851276,-9.736863,2.365727,-0.123746,3.476524,-3.324688,0.815181,9.377117,3.418282,8.857644,-7.256105],[5.165266,-4.029121,-4.914507,-9.223276,7.262424,-4.388762,6.340613,8.123073,9.946461,6.937126,-8.278849,3.948207,-8.735851,-5.208131,5.286862,4.268938,-2.103515,-1.338478,-2.100445,-3.704716,-1.213518,2.367230,-0.099712,-7.430868,5.755434,-8.689780],[-4.715638,-7.359165,-9.045203,-1.349831,6.785535,6.386747,-3.939265,-5.366538,-4.855385,-2.276251,-3.692775,-7.981041,-5.694934,-1.105455,0.047647,2.568028,8.995437,-6.508236,-8.803472,6.656719,-9.871394,-1.353206,-9.881878,0.751928,2.032224,-5.576662],[2.390242,-4.514186,1.309392,-6.624433,2.741310,-4.256812,8.113263,2.590649,9.930734,2.088660,7.093106,-0.492037,4.703757,-2.692987,-4.408908,-8.730331,3.600404,9.493169,2.964297,6.462190,-2.815280,3.572121,-3.421472,3.650349,-9.666600,-1.549056],[-7.819661,2.484575,-4.408315,-6.987874,-9.457492,9.154837,-2.527353,-6.868089,-1.068049,-9.284514,0.123052,-9.980220,-8.406055,-8.812922,-3.855001,-0.794452,2.946993,-9.612236,8.717346,-1.751101,6.012788,-7.998903,9.851134,-1.217281,-8.191390,-1.183256],[-3.333045,-4.923351,-6.775140,7.810712,1.966492,-3.397688,-0.249914,-6.299640,3.675211,1.497875,-9.229708,-8.556989,0.455165,9.073512,-7.356736,0.707813,-8.007149,4.675271,-5.503601,-8.085326,3.001582,5.989461,4.781844,6.832072,-8.355982,-7.589810],[-5.998749,-7.876028,1.426732,-8.035374,1.079944,-0.314752,1.112631,4.394629,6.955112,8.679260,-0.722459,-6.520130,-4.451277,-4.174879,-9.338059,-7.571322,-3.615776,-0.582547,-5.477222,6.302993,4.604549,-3.015609,9.384870,-4.494811,7.440801,7.415170],[-8.775175,1.241660,-6.406011,-5.177660,-1.417548,8.714530,4.333663,-3.050289,-0.739226,-1.271057,-6.667951,-9.271849,-1.621798,-2.407630,-0.123233,8.320437,3.177462,-2.639666,-4.336572,-4.359261,6.664041,2.462138,-8.059720,-5.762517,0.339626,-1.091427],[9.470129,-0.544472,4.443952,4.863875,-7.979565,5.062733,-8.691652,4.017568,-4.525454,7.887923,-1.893039,-0.426864,4.092299,9.095749,1.223602,-9.482928,9.876320,-0.529053,7.616507,-3.556284,-6.201578,7.107942,4.574410,-8.005191,-0.455843,4.695220]], dtype = "float64")#candidate|3638|(54, 26)|const|float64
call_3637 = func_1721_call(relay.reshape(const_3638.astype('float64'), [12, 9, 13]))
call_3639 = func_1721_call(relay.reshape(const_3638.astype('float64'), [12, 9, 13]))
func_1661_call = mod.get_global_var('func_1661')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_3642 = relay.TupleGetItem(func_1661_call(), 0)
call_3643 = relay.TupleGetItem(func_1663_call(), 0)
func_3177_call = mod.get_global_var('func_3177')
func_3179_call = mutated_mod.get_global_var('func_3179')
call_3644 = func_3177_call()
call_3645 = func_3177_call()
output = relay.Tuple([call_3583,call_3613,var_3614,uop_3621,call_3632,call_3637,const_3638,call_3642,call_3644,])
output2 = relay.Tuple([call_3584,call_3615,var_3614,uop_3623,call_3633,call_3639,const_3638,call_3643,call_3645,])
func_3653 = relay.Function([var_3614,], output)
mod['func_3653'] = func_3653
mod = relay.transform.InferType()(mod)
var_3654 = relay.var("var_3654", dtype = "float64", shape = (96,))#candidate|3654|(96,)|var|float64
output = func_3653(var_3654)
func_3655 = relay.Function([var_3654], output)
mutated_mod['func_3655'] = func_3655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3686 = relay.var("var_3686", dtype = "float64", shape = (7, 13, 8))#candidate|3686|(7, 13, 8)|var|float64
uop_3687 = relay.log10(var_3686.astype('float64')) # shape=(7, 13, 8)
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_3700 = relay.TupleGetItem(func_1529_call(), 0)
call_3701 = relay.TupleGetItem(func_1530_call(), 0)
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_3707 = func_2148_call()
call_3708 = func_2148_call()
output = relay.Tuple([uop_3687,call_3700,call_3707,])
output2 = relay.Tuple([uop_3687,call_3701,call_3708,])
func_3725 = relay.Function([var_3686,], output)
mod['func_3725'] = func_3725
mod = relay.transform.InferType()(mod)
var_3726 = relay.var("var_3726", dtype = "float64", shape = (7, 13, 8))#candidate|3726|(7, 13, 8)|var|float64
output = func_3725(var_3726)
func_3727 = relay.Function([var_3726], output)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_3766 = func_2281_call()
call_3767 = func_2281_call()
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_3785 = relay.TupleGetItem(func_2863_call(), 0)
call_3786 = relay.TupleGetItem(func_2865_call(), 0)
func_3725_call = mod.get_global_var('func_3725')
func_3727_call = mutated_mod.get_global_var('func_3727')
const_3790 = relay.const([-6.726485,8.706016,7.224785,-6.194054,0.439445,-4.192036,-2.977431,-9.043318,7.118163,-6.679719,9.529050,8.637170,-9.425796,-9.842140,-2.848772,-5.688665,7.562466,5.907021,-2.106333,6.523749,-3.308822,8.068266,-6.719015,9.203821,-7.360579,1.716866,-2.220966,6.091362,2.769813,-6.813267,-3.343504,8.349310,-7.140447,-4.130933,-2.833076,-1.178109,7.201350,-9.840936,8.897204,-8.133022,5.157328,6.007977,-3.658536,-5.535929,-4.278985,-0.774051,7.591675,1.661431,-4.586850,-4.688951,9.621762,4.247604,2.592268,-9.944312,-2.115133,-3.200184,-3.013831,0.494553,5.867381,-1.838725,-6.666115,-6.041207,-2.107915,4.385875,7.449139,-0.444173,-7.376733,6.347464,7.902672,3.354411,-6.904309,6.766944,0.342056,-3.268436,-7.225779,2.872402,2.662466,4.809116,0.396541,-0.465302,-9.323199,1.055490,8.546577,-3.444122,-2.128745,-5.975024,-8.308782,4.026758,-3.528076,-6.445117,-6.319150,3.076472,9.869342,-4.205177,5.579421,8.079243,4.005240,-5.661625,6.942466,6.535949,-1.456110,6.713914,2.989286,9.085907,-1.235352,-7.967322,3.273116,-5.826045,-7.169566,4.008857,4.082655,-0.605661,4.760543,9.564036,2.460311,-6.786302,-9.826809,-0.197209,-2.533730,7.439589,3.066679,7.576762,5.343041,7.571053,-1.546410,5.931089,2.042295,-4.060397,4.196878,-7.623621,-0.332316,-1.885723,-3.875700,-9.930135,-0.763097,5.347986,-5.049217,-4.858656,-3.999473,4.621149,-2.667009,-3.623048,-6.261505,-2.732826,0.616879,6.441916,0.134403,-2.900039,-8.634606,-7.163094,6.493314,1.037190,3.084904,1.521137,3.829303,-0.367820,-0.643258,-1.971584,-5.834389,-6.307277,4.931134,5.609818,9.430820,-7.123025,0.044839,0.583041,-4.058589,-9.433550,-3.680348,0.278440,-4.616238,-9.183358,-1.512898,-3.048080,7.632503,-2.369234,-7.752245,-9.198327,-2.940634,2.275459,2.556224,-1.232173,3.373045,4.576199,-7.180501,-3.229754,3.048881,0.787624,3.973917,-6.608996,-2.403865,2.179402,-0.632476,6.356124,-3.595692,-2.770185,5.575408,9.182081,1.656625,-8.753951,1.666196,2.742072,4.233867,-0.054654,-5.116302,-6.332532,-5.357522,3.197492,7.691266,4.243288,8.946358,3.248223,-9.045565,-5.287857,-1.485825,3.915446,9.712040,-2.353435,-1.448495,1.479175,0.633466,3.339404,3.093860,-1.274857,6.983370,-2.902747,-7.204623,0.570579,-4.276429,-0.333085,6.650743,-4.661577,-3.707345,2.704443,5.304644,7.248581,-7.056407,-3.242536,1.333198,-0.509445,-1.226338,-7.764881,7.876267,3.433675,1.331380,-0.543187,-2.939457,1.087862,9.285645,5.313195,3.468317,1.052247,7.625006,0.263475,-5.974704,-0.983236,-4.615486,3.582971,-8.473634,9.606602,5.477144,-9.453619,-9.895525,-8.729871,0.275285,-2.890293,1.156780,-9.099451,-3.674577,3.602578,-4.640560,2.635016,-7.684391,-1.585605,-7.700342,-2.575903,9.547478,0.647699,-2.084328,4.578997,7.699835,-2.188418,4.592099,3.994554,-4.188498,-9.224674,-4.579892,0.874971,8.000866,-4.072142,3.859707,5.412354,2.380468,-0.477297,-2.028929,8.923166,-7.199079,-5.005812,1.494919,3.081622,2.380101,-2.068762,7.007608,-8.622701,0.012407,-7.603061,-4.324632,8.631458,-0.421087,9.518648,6.420642,-4.406032,5.844610,3.795587,4.070457,-1.831129,-1.019615,-3.138334,4.932722,-9.970301,7.950757,0.117640,-7.178794,-4.151519,7.198982,-7.548577,-5.704637,-4.655991,3.548301,-3.464142,-3.692233,5.225477,4.796839,-9.397144,3.225127,1.533014,-2.133060,-1.156475,1.216997,2.432519,-4.556421,8.909069,6.092981,-9.177109,0.349214,0.981085,-4.478350,1.413293,-7.326606,-9.711448,-3.290143,5.582140,-4.354767,-5.831129,-2.441571,-8.538511,1.307085,9.300467,2.600400,5.040806,1.832655,-5.763712,-5.298255,5.482311,-3.456741,-4.837081,-8.202053,0.765342,8.909355,-8.381822,7.995923,-4.495196,5.220838,6.105713,-6.051521,7.822299,3.002103,5.642230,1.361031,2.162734,-3.701309,4.846433,0.033583,1.348666,-1.148952,-0.497016,5.687339,-4.891632,-3.622999,6.988523,-7.151730,-6.646298,4.577331,5.841459,4.485692,-3.446743,-7.985391,-5.773043,-8.686854,-1.629936,1.027711,-7.568494,-1.680722,0.285384,1.979399,2.111042,-8.998869,2.046402,5.571623,-5.347767,4.158032,-6.256215,-0.892436,3.001254,-1.049781,4.390040,-3.525409,-7.416564,-0.724587,-8.687083,3.882127,-0.303875,6.409424,2.999409,-6.557858,6.929709,-9.261389,-4.382118,-1.254114,5.512853,1.465549,8.023612,-3.598022,-1.162710,6.532967,-3.973940,-3.622026,-4.870795,6.237674,-1.969666,-5.930939,7.640391,7.978315,2.803584,-7.159974,5.322539,-4.874851,8.037192,-7.826502,7.771045,-3.207047,-2.651567,-8.614690,7.406080,-9.044604,-5.684189,7.551871,3.487251,8.615887,5.892307,0.857774,6.045211,4.317894,2.685116,8.840714,4.988006,-8.063442,-6.811994,4.336778,-4.280070,-1.902213,-6.731520,4.893491,-3.797478,-9.318171,-0.363898,-2.167918,5.537040,-7.731454,-7.805453,-0.651866,-6.984000,1.033042,3.362351,-0.564943,8.275579,-2.066152,-5.921442,1.758929,-6.133344,-1.532610,-0.677841,7.379904,-4.526235,-1.863663,6.621997,6.707339,5.826070,-7.574868,7.772463,3.954143,0.497409,-6.149683,4.691301,6.852410,1.271366,-2.675776,-5.018654,-9.674708,6.694817,1.801177,8.533336,-8.767689,-7.769650,9.891357,5.035914,-4.489890,0.559450,7.732646,-4.457583,-1.521611,-4.797766,5.717602,-5.996412,-6.891726,-9.258597,-5.538781,-0.177567,6.650294,-2.106829,-8.010693,7.920520,-3.164364,6.463070,7.790160,-4.173037,2.653420,-3.752818,-2.229008,-9.519854,-9.628223,-2.275415,-1.096361,-4.809964,2.316335,1.481975,-2.371219,-9.226826,1.194375,-9.224256,-6.808341,-6.958818,-0.152913,-4.167999,-6.406705,0.090456,-2.987172,6.000994,-8.702129,-4.134578,-1.122918,9.999105,-6.941594,-0.788683,5.224332,-1.991749,0.937922,0.043584,0.088645,-3.970846,1.386315,-2.709614,-9.471015,-2.400669,5.942667,-7.929077,-2.205180,6.223483,-4.873363,-0.164630,-8.908164,1.733963,-5.035558,4.476914,-4.623006,8.132651,1.668196,8.496276,4.352971,-9.747702,-2.493399,4.333998,-1.104819,3.954507,-9.784308,-5.594028,-3.984953,-2.866725,5.595338,-9.821357,-1.655777,4.961538,-8.962082,6.682162,-8.069964,-1.040788,-5.294706,-8.176853,-7.644791,7.623024,6.102998,-9.221309,7.200340,-7.206355,-1.319560,4.941737,-5.278176,9.475019,3.578341,3.156321,-6.587062,8.296716,4.628712,-4.263369,5.706741,-7.142490,2.098445,0.046468,3.652113,2.404077,-6.159451,-4.960207,6.431532,8.495102,-1.067060,5.759960,5.451149,-0.327620,-9.241644,-9.768167,-0.253955,-6.351599,5.396740,6.486155,-9.801737,0.192564,2.762629,9.078715,2.051021,8.538583,7.528841,-7.426955,5.441486,2.036951,5.804950,-1.724723,-1.465335,-3.693217,-6.896876,2.013768,-1.961484,4.286296,-3.300331,6.606015,-9.245760,-9.463504,9.147392,-8.841647,7.713359,-5.519600,4.789385,-2.928967,7.728041,-3.322206,-9.160524,-1.316527,-5.863127,-2.623761,2.708909,-5.634164,7.588229,6.159330,9.648470,4.687332,-9.999262,-3.555875,-2.587682,7.760280,5.852865,9.596343,5.204976,-6.934612,-7.057892,3.592349,-0.980145,9.307102,-3.939658,-2.591194,-6.662269,-4.838622,3.218270,-4.877558,4.948477,-2.610261,6.358990,0.481733,1.816509,-0.476916,-0.461956,2.784314,0.669854,-5.506429,-9.509710,-5.044289,0.701702,9.169510,3.439964,-8.171162,0.993862,5.966877,9.301609,-0.126210,-1.935112,-8.289758,-7.676263,-3.721781,-6.317555,7.245771], dtype = "float64")#candidate|3790|(728,)|const|float64
call_3789 = relay.TupleGetItem(func_3725_call(relay.reshape(const_3790.astype('float64'), [7, 13, 8])), 0)
call_3791 = relay.TupleGetItem(func_3727_call(relay.reshape(const_3790.astype('float64'), [7, 13, 8])), 0)
uop_3807 = relay.tan(call_3789.astype('float64')) # shape=(7, 13, 8)
uop_3809 = relay.tan(call_3791.astype('float64')) # shape=(7, 13, 8)
output = relay.Tuple([call_3766,call_3785,const_3790,uop_3807,])
output2 = relay.Tuple([call_3767,call_3786,const_3790,uop_3809,])
func_3819 = relay.Function([], output)
mod['func_3819'] = func_3819
mod = relay.transform.InferType()(mod)
output = func_3819()
func_3820 = relay.Function([], output)
mutated_mod['func_3820'] = func_3820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_3821 = func_237_call()
call_3822 = func_237_call()
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_3835 = func_2148_call()
call_3836 = func_2148_call()
output = relay.Tuple([call_3821,call_3835,])
output2 = relay.Tuple([call_3822,call_3836,])
func_3837 = relay.Function([], output)
mod['func_3837'] = func_3837
mod = relay.transform.InferType()(mod)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3837_call = mutated_mod.get_global_var('func_3837')
call_3838 = func_3837_call()
output = call_3838
func_3839 = relay.Function([], output)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2491_call = mod.get_global_var('func_2491')
func_2492_call = mutated_mod.get_global_var('func_2492')
call_3842 = relay.TupleGetItem(func_2491_call(), 0)
call_3843 = relay.TupleGetItem(func_2492_call(), 0)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
var_3859 = relay.var("var_3859", dtype = "int8", shape = (560,))#candidate|3859|(560,)|var|int8
call_3858 = relay.TupleGetItem(func_629_call(relay.reshape(var_3859.astype('int8'), [560,])), 3)
call_3860 = relay.TupleGetItem(func_632_call(relay.reshape(var_3859.astype('int8'), [560,])), 3)
func_334_call = mod.get_global_var('func_334')
func_337_call = mutated_mod.get_global_var('func_337')
call_3919 = relay.TupleGetItem(func_334_call(relay.reshape(var_3859.astype('int8'), [8, 5, 14])), 2)
call_3920 = relay.TupleGetItem(func_337_call(relay.reshape(var_3859.astype('int8'), [8, 5, 14])), 2)
output = relay.Tuple([call_3842,call_3858,var_3859,call_3919,])
output2 = relay.Tuple([call_3843,call_3860,var_3859,call_3920,])
func_3928 = relay.Function([var_3859,], output)
mod['func_3928'] = func_3928
mod = relay.transform.InferType()(mod)
var_3929 = relay.var("var_3929", dtype = "int8", shape = (560,))#candidate|3929|(560,)|var|int8
output = func_3928(var_3929)
func_3930 = relay.Function([var_3929], output)
mutated_mod['func_3930'] = func_3930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_4039 = func_2148_call()
call_4040 = func_2148_call()
func_3285_call = mod.get_global_var('func_3285')
func_3288_call = mutated_mod.get_global_var('func_3288')
const_4079 = relay.const([5.487857,3.556885,-8.296041,-3.491083,-6.357417,5.593130,3.548145,-4.355234,-3.486881,4.166355,9.046476,8.007815,-5.469174,-3.189980,6.596774,-6.068991,-2.887248,-2.362952,8.275202,-4.708231,-1.134011,-4.314872,-9.687817,6.722694,1.857382,-9.294301,1.827613,6.734334,-9.890096,6.974609,-1.758796,-8.780228,3.553062,3.418606,6.731368,-6.671284,2.714059,5.040323,-6.761739,-2.978858,8.015477,-4.527198,-4.306923,-7.959539,4.086206,-5.377359,-2.337614,0.682913,-0.608959,-5.848297,-4.370821,8.951521,3.292954,4.841606,-0.046932,2.285935,-0.275326,-5.135933,-5.004225,8.524894,-9.449548,2.260995,5.357520,-5.480342,7.508624,8.379197,5.774584,3.685835,-7.161634,-0.307885,-1.903158,-4.740007,1.938412,5.669831,-5.965353,-6.435451,-9.467225,3.014150,-5.536998,2.414962,-6.021429,3.807362,-2.304404,-7.393412,4.408392,8.259500,-3.604899,4.224113,-1.040689,0.272719,0.753649,3.177915,5.710086,5.913231,-8.659322,2.487842,-5.306187,-5.920955,9.327238,6.628435,-8.341038,-6.695673,-1.058861,-0.362134,-0.350557,3.360979,2.385882,-3.135885,2.420936,-0.341833,-0.848468,-6.091990,-2.643733,7.502386,4.979492,3.832166,7.123749,5.914436,3.610172,-1.605999,2.748139,4.004261,-5.935461,-9.374878,-1.678093,4.626470,-0.397398,1.763680,4.380730,1.174634,9.225798,-4.608853,-2.268915,-4.645178,7.103656,-8.843062,4.797922,-5.916442,7.980444,3.809664,2.274063,-3.909707,3.005231,3.467693,3.957300,9.301307,5.864520,0.154240,6.000788,2.599602,3.233854,-5.972358,7.258587,-2.587024,0.220803,-8.108941,8.867785,-5.932244,-5.605070,6.119159,-3.485728,-0.899294,-4.539143,-1.400202,-7.519503,-0.914999,3.311879,-7.236278,1.617699,6.591384,-0.832582,-6.959327,-6.602201,-4.453046,-4.690730,-3.426646,8.214601,-2.480821,4.524435,6.632360,-1.187978,2.843179,-4.847147,-8.177581,-6.086422,-3.569085,-6.229904,-8.766117,-1.176182,2.597578,-2.341155,2.004037,7.965246,3.015436,-4.974188,-9.192976,8.722477,-0.984541,5.348252,8.789580,-7.762907,-9.099942,-0.772245,-8.415592,-2.023590,9.938898,2.844865,-8.207429,-8.484382,1.170449,-1.992376,5.520978,9.936813,-2.651810,6.446062,0.563995,1.612749,-9.278865,-6.719977,-8.093317,-8.638540,-1.366199,6.592305,-1.760306,-3.776101,-9.534776,7.409217,-6.551076,-9.806519,6.803483,3.236799,1.905297,2.045032,-8.191751,-6.724191,-8.123187,3.858449,8.616976,5.232532,-3.305154,9.346826,-8.702350,5.642863,-4.275882,8.601168,6.055859,-9.265870,-0.981863,-0.826738,3.631121,6.041806,2.434057,-9.909578,5.606151,7.221022,-8.519365,1.803385,8.545132,6.780547,-1.459323,-0.877800,1.964059,-2.636530,-2.080026,3.838220,-8.109804,9.210217,3.588995,-6.253723,7.556623,-8.998780,-2.083467,-7.376849,-1.617385,3.079343,4.681298,-6.364591,-0.172584,-5.835106,3.429859,7.031452,-0.498822,-5.151800,-8.021545,4.290742,-0.008153,2.651109,9.872342,-6.178370,-0.006876,-4.195474,5.356028,-6.232703,4.642644,-1.741558,-5.396427,-0.811776,-6.438722,-9.781553,3.825657,-5.505730,-3.432131,9.353238,-6.227083,4.349876,6.545203,-7.254602,4.642646,1.198851,5.879431,1.895717,7.207584,-4.465721,-0.661187,-7.597011,-1.635989,2.216271,8.809885,-2.233021,3.596466,-9.225184,0.686254,3.476960,1.845633,-8.113495,8.620376,5.882473,7.062632,-2.342989,-6.224190,-7.287131,-9.206667,8.688569,-5.042007,2.952577,-9.698135,-6.596372,-8.543282,-0.225840,-2.546190,-8.475737,-1.783243,-5.053701,4.640213,-0.193235,-5.108465,1.716245,-0.098895,-9.850636,-8.338928,-7.267394,2.200875,0.561944,2.516119,6.137955,-3.521024,4.903013,2.268148,-3.888044,-4.366430,0.620272,9.617418,9.693722,0.727156,-1.906689,0.420584,-1.644137,-1.690719,-7.892405,6.063774,1.656399,6.859744,9.568652,9.251823,-0.146879,-7.112150,-6.605501,-4.218431,6.449543,1.607967,8.224550,0.637330,5.637205,9.502160,9.173287,9.669407,-0.165793,1.326026,-7.070450,-3.628850,-0.714968,-5.106381,-2.217694,4.193781,-1.134445,-1.470797,4.103954,-6.972100,6.806352,8.666158,-5.284973,1.135880,5.543645,-6.671727,9.112855,-4.029364,5.006112,-4.243233,6.664157,-5.511283,-3.093989,-1.766409,-6.572675,-4.663159,-6.151297,-0.704499,8.095185,-8.077065,-0.972691,-9.641488,3.825683,5.479099,7.751935,-6.157782,1.735137,-9.686078,9.218538,-7.064339,7.735385,9.014061,-9.202107,6.675925,-5.741758,-3.066597,-4.649018,-3.166258,-3.464826,5.426457,-1.616666,-8.616838,-2.848676,1.609626,1.982422,4.015321,5.569674,9.076962,-2.126741,0.929421,-3.826019,9.070213,-4.407357,-1.478766,1.119569,-0.717454,9.170626,-0.893562,1.640440,-8.235312,6.918801,-0.437604,-7.944759,-2.248123,-4.487891,0.655720,4.359214,3.138773,2.503733,-3.597130,8.059858,-0.857987,-5.492012,-3.907561,-9.264707,-0.505067,-0.643083,-0.837128,-9.436082,1.168155,-9.780528,8.126189,4.838193,9.801039,-4.587754,-4.037771,-5.174844,0.499642,2.664639,3.686119,-7.835323,0.152043,-0.542417,9.172624,-2.866591,9.021116,-7.913422,-3.135493,7.271412,-7.138940,-1.594321,-4.287351,6.375720,6.317669,1.563734,-2.451843,-7.490539,1.496424,-4.821335,-3.105393,2.423645,2.468856,-1.611793,-4.625648,-9.419421,-9.992219,4.331601,2.767967,-2.490971,4.361424,0.121582,2.087448,3.576747,-6.377373,7.441118,-5.305024,-2.856888,-5.344138,5.173672,7.992586,5.675285,-7.418041,-7.867202,1.573869,-4.225224,-3.748270,3.589940,-7.628995,-9.287890,-8.057559,0.109740,5.126194,-0.375705,-2.597406,-4.215167,5.381461,6.725391,-6.098713,-1.289061,-8.685603,-2.650786,-8.190618,-4.085909,-3.347525,-4.911093,8.945154,9.362745,5.893542,-5.700793,8.644623,0.312447,4.312443,8.901569,-6.947132,9.533148,-0.361995,-8.082821,9.276428,8.083424,1.233713,-5.483224,3.867910,4.890682,-4.781088,5.121210,-3.541848,-6.836013,4.892506,5.473164,4.414983,4.564475,-7.886364,5.009253,-7.750679,2.613775,-5.769590,-4.285523], dtype = "float32")#candidate|4079|(585,)|const|float32
call_4078 = func_3285_call(relay.reshape(const_4079.astype('float32'), [13, 9, 5]), relay.reshape(const_4079.astype('float32'), [13, 9, 5]), )
call_4080 = func_3285_call(relay.reshape(const_4079.astype('float32'), [13, 9, 5]), relay.reshape(const_4079.astype('float32'), [13, 9, 5]), )
output = relay.Tuple([call_4039,call_4078,const_4079,])
output2 = relay.Tuple([call_4040,call_4080,const_4079,])
func_4088 = relay.Function([], output)
mod['func_4088'] = func_4088
mod = relay.transform.InferType()(mod)
mutated_mod['func_4088'] = func_4088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4088_call = mutated_mod.get_global_var('func_4088')
call_4089 = func_4088_call()
output = call_4089
func_4090 = relay.Function([], output)
mutated_mod['func_4090'] = func_4090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2919_call = mod.get_global_var('func_2919')
func_2920_call = mutated_mod.get_global_var('func_2920')
call_4093 = relay.TupleGetItem(func_2919_call(), 0)
call_4094 = relay.TupleGetItem(func_2920_call(), 0)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_4107 = func_237_call()
call_4108 = func_237_call()
func_2084_call = mod.get_global_var('func_2084')
func_2087_call = mutated_mod.get_global_var('func_2087')
const_4110 = relay.const([6.161745,0.701920,4.892653,1.828002,-2.494351,-9.265168,-7.052360,8.125317,9.796048,5.124926,6.059254,0.628413,-6.830394,2.773590,-4.609321,-5.303810,-9.669663,-9.844086,-6.090000,-2.526228,9.030187,-6.804773,-9.694649,1.345690,3.015008,5.882801,0.802352,-3.145446,-0.532981,-5.558090,-1.931312,-4.215721,-8.815313,3.875761,-6.674161,-9.406225,-1.046747,-8.458712,-4.261998,-6.203326,-0.809207,-8.090998,-8.152943,7.641714,-6.327347,8.266901,3.336206,9.802539,0.720921,-1.057272,-1.738231,3.459789,4.022766,-1.704458,7.361555,-9.402138,-0.683043,9.326364,1.239545,3.796189,-4.771832,-5.413003,-2.466419,-0.459728,-6.176007,-8.220182,3.445124,6.772307,8.545808,-7.678538,2.803950,-1.624513,2.459582,-2.287743,-8.669055,1.997812,4.039998,-4.238100,6.845852,6.760692,-3.393604,8.974348,5.764806,-5.393898,-9.565638,6.607558,1.508167,2.134551,6.031058,8.030055,6.632597,5.454190,9.237326,-1.900325,-8.187965,-4.124854,1.089739,-2.894969,4.186915,4.334621,1.276778,7.492620,-1.173703,4.303134,-2.279567,-8.481483,6.790019,-4.566763,1.688772,-2.686110,-4.898227,-6.532146,-1.782711,-7.647539,-7.206472,9.799848,-6.084825,-7.370529,3.039136,6.281933,4.191092,2.212110,5.330648,5.481358,-8.958921,-3.787147,-5.943208,2.538143,9.912897,-9.185537,0.839969,4.420426,-5.340362,6.719637,1.997486,-0.719471,-6.166161,-1.041492,1.597108,-8.719271,5.135973,3.805531,-7.294089,-6.852674,-5.729862,7.141813,-3.894619,-6.365677,-8.733558,-1.318828,-9.208154,-4.002414,-2.340356,-0.677866,-6.697562,1.352671,4.734780,-5.516166,8.488758,2.846482,5.030266,-6.945694,6.398712,1.726397,-9.076414,4.399718,-2.450578,7.565310,-3.431588,-6.767317,-3.136504,-9.216608,-7.541366,8.014577,9.432140,-2.067534,0.690622,-2.881902,6.965704,0.656656,9.034544,-7.759128,-8.257239,-3.001405,9.819635,-5.808684,6.945861,6.557822,9.695629,4.125111,6.744246,8.641089,-3.966906,7.765358,2.518383,7.460755,0.423753,-2.132034,9.552641,7.315142,-5.018133,7.046017,-5.849371,4.524265,5.790790,6.432776,-8.901960,-7.666587,-6.147363,-3.771653,-0.249179,1.268403,8.981536,4.919901,-7.023913,9.318458,-2.415712,-2.826893,0.092654,-1.659986,4.135871,3.478303,2.875260,-3.276375,5.665736,9.810359,8.835037,-6.841036,5.915187,8.784380,-6.781665,-5.697269,5.426905,4.735168,-1.745508,-1.589192,1.259689,-2.799078,5.280669,7.113809,3.537553,-1.247884,8.365011,-9.791388,-3.684802,-7.534336,-3.902618,-6.421707,-4.545310,7.321421,2.578508,-7.599918,1.327231,1.469427,3.939914,-2.672172,-7.154232,5.325454,3.811174,-2.168266,-5.751209,-9.418973,2.606544,-2.297949,-9.470097,-9.165526,8.907135,0.021564,1.903183,5.230845,2.208880,-2.739009,-1.452864,7.903684,8.232538,-2.704013,-0.541797,-9.995928,4.741895,1.120595,-0.468833,1.048793,-8.134595,7.606374,-1.032036,7.604474,-4.053119,7.947139,1.321556,-7.616802,-5.742549,-8.481222,9.379892,-4.328034,-4.006615,-3.218635,9.790435,-7.540506,-0.025221,-8.272436,3.441596,-2.736591,2.943639,-4.247084,-3.287853,9.070065,7.741137,-9.570620,-2.824645,6.231363,-5.167426,-3.747636,-7.665733,-9.158873,-7.796440,9.367440,-1.329921,5.129932,1.512981,-2.882639,-7.302525,-0.434613,-6.264219,-6.008736,4.352034,7.850984,4.826095,3.434480,-2.228594,3.260087,-1.126393,-8.861549,-2.850620,-1.943239,-6.493911,-4.359880,-1.356747,-4.235637,2.380172,-1.956270,2.049637,-9.925960,2.042574,-1.541102,9.839093,-9.840781,-3.945256,-5.334723,-8.897546,-4.780719,-3.523826,5.856973,9.320054,2.445038,-9.398125,6.614084,1.828357,-9.162461,7.972694,-3.727492,-3.537794,1.807218,-3.481070,-6.182037,-7.686300,9.525075,6.650517,-9.253257,-6.308983,3.951534,7.473484,-1.859241,-6.406515,3.583546,1.474841,4.407979,-3.033250,-3.126020,-3.064333,1.384537,7.480527,9.551082,7.642379,0.775738,5.391598,-8.159365,2.976853,5.666229,3.796264,-6.935942,0.516082,1.709983,-7.572213,-5.881834,-8.874859,6.698509,-9.507791,-5.015041,-2.538155,2.815373,-5.254907,-4.895671,1.545899,0.623541,-8.650907,9.116150,8.151981,1.238364,8.959597,5.188616,7.870867,2.732638,6.063028,1.066498,-7.370752,-7.102500,-4.236807,-8.088976,-1.092200,4.865519,3.601484,-2.064964,1.762787,-3.473310,4.133936,-7.208691,6.589588,-2.301680,3.947552,-8.025264,6.903916,-6.841099,-2.880864,8.246034,-1.616691,7.395097,3.004160,4.176748,-3.720908,8.395602,9.729522,-1.437591,-5.183724,7.107492,2.564391,5.122162,-0.144829,-7.769551,-9.412087,-4.585036,-4.369483,5.332533,8.770624,-2.076744,-8.751829,-4.203165,2.305681,-0.482266,7.758374,9.266339,-3.568351,4.489115,-9.434852,9.777402,1.418388,-7.575901,6.202701,-6.244210,-9.537912,-2.217051,-9.930104,-8.215732,-6.770346,2.353291,-7.746797,-7.164355,5.033183,-4.862248,2.368893,7.385416,6.518606,6.173096,2.088292,6.139438,-5.735187,-2.953555,-1.882073,7.547994,-8.013651,7.129545,9.236791,4.386702,9.689314,8.983053,9.616934,-9.965270,-1.373908,5.832289,6.380859,5.962952,7.412963,-1.152303,-9.770672,-1.594733,7.232553,3.284990,3.009601,7.957806,-5.386858,9.708049,4.000996,-8.683496,2.285267,3.483656,4.854751,6.366286,6.107032,-3.644965,8.207034,-7.470468,-9.847376,1.001088,-2.142052,7.695410,8.430837,-0.885013,-7.035400,-0.655274,-9.280185,-6.327643,-4.284358,-7.933584,9.375566,2.816949,7.243606,8.736875,-5.802917,5.056910,-8.611913,4.152527,-7.989056,-5.687078,7.574753,-9.651981,7.454068,6.372036,-5.182054,6.130137,-1.159584,-1.524569,-7.871380,-9.241557,3.578491,7.112348,-7.433452,2.474623,-8.420958,5.778270,6.153417,4.266226,-2.643213,-1.026761,0.280621,-9.153268,1.068335,7.377097,3.878587,-0.523620,-0.630964,-7.138084,-9.122457,6.914407,2.775277,-0.928582,-0.500873,4.743445,-4.223779,-1.590433,4.044538,-2.902592,4.679845,-3.334476,0.264297,6.841076,-9.178744,-1.128922,-8.256256,8.145997,-9.171206,-9.590319,-6.461348,8.463333,6.231556,-9.988458,-4.523549,0.249577,-7.339662,-9.072572,-5.409682,0.435868,4.876705,-0.581035,2.160617,-2.363438,0.276947,2.451351,-7.260850,7.953209,-0.040782,9.593063,-1.736316,-8.092936,-4.616432,-4.637495,9.876558,-5.620739,4.133376,-2.103239,-4.013134,-4.342833,0.992637,0.623242,-3.357327,4.663078,-0.363894,4.780470,-1.040433,-1.735764,6.348216,2.738915,-5.950941,6.321035,-8.291077,7.445235,-6.088393,2.268756,9.736191,-1.897045,6.308143,-5.929870,-5.821699,-3.076110,2.639952,0.449912,7.791067,8.712158,-1.252465,5.979709,-7.209328,-8.315252,-6.211065,-0.977637,-7.740917,2.132923,6.540058,-2.026809,0.935571,-3.365501,1.971192,8.876154,-5.234991,-6.321031,-0.408449,-6.009336,-6.201914,0.108012,-6.759867,-5.826508,-6.172523,-9.885412,5.743855,9.621146,9.951124,-6.677720,-0.185770,7.034437,-2.832540,3.582811,5.197870,-2.700749,-4.042961,-6.503583,7.295730,-6.285569,-9.606133,8.033289,7.748439,-6.770874,-2.567919,7.636689,0.359692,-9.155445,-6.412817,-4.269322,4.644779,-5.148248,-3.553789,-2.995856,5.720974,-6.345042,9.627915,-4.506271,-7.819932,5.206199,8.522026,4.611735,7.307805,-3.420717,-8.229250,0.838748,9.812096,6.087581,-6.546199,-4.709170,-0.266953,1.849714,-0.011896,-9.913295,-6.181217,-1.429424,-7.777760,-9.970050,7.444210,-5.235619,1.932995,8.437631,5.044865,0.870347,-4.197329,6.527946,-5.461078,-7.768055,-3.999888,6.794925,-4.310440,-7.132108,-4.303001,-6.201018,-1.856104,0.957969,-3.693977,-2.116626,5.271522,6.903951,6.743455,6.408758,2.546673,7.059095,-4.570492,-9.862404,-7.224513,-5.447345,-8.602478,-5.902719,8.486106,-1.978111,-4.439157,9.495844,-1.989259,6.083171,8.631359,1.650639,-4.594271,0.774237,-8.288135,5.552388,-5.203950,0.422114,-3.725259,6.094095,0.909263,8.804619,1.905700,8.156290,7.677651,0.056448,3.374036,3.141350,1.637914,1.394739,-2.714759,-1.664982,-7.405350,7.227046,3.638666,-6.484674,5.142527,-0.073586,-1.013031,-2.049591,-5.546246,-9.047687,8.557973,3.943030,-9.215231,-7.220480,3.576422,-2.402367,-9.174937,-9.238588,-0.210556,-3.594831,-4.762569,-2.518950,-4.129409,-7.989533,1.666329,0.655511,-2.328336,9.815915,3.473111,-5.747477,3.157687,-9.691234,-8.745625,6.468353,5.142640,-6.496969,8.790677,-5.145941,-3.404065,-0.217634,8.486568,-4.615390,3.296206,1.127391,9.544588,4.189904,-4.917823,-4.582045,3.720390,8.551625,5.447754,-7.715168,6.340763,-9.403500,-5.282896,1.210392,-3.524019,7.556895,8.396835,-5.757752,-9.044318,6.984352,4.155766,-6.703080,-6.304533,6.032569,0.728098,-4.346801,-2.909728,-7.407580,2.948504,8.499776,9.549602,2.465363,1.618300,2.354209,-7.672404,-5.818372,-8.045151,-2.188928,-7.779032,-5.034070,0.652214,-2.344022,-4.591527,-3.812555,-8.765092,3.440431,4.948957,3.213179,7.102844,-1.731997,4.421478,4.899562,4.240859,-9.366352,-3.665594,-0.439760,2.986857,7.342714,8.741063,-4.278434,9.788477,-5.417644,-0.079594,4.016285,-1.807873,0.279537,-3.934320,-6.661415,-1.926478,-4.458565,2.971926,5.410694,4.801190,-1.451534,-5.270621,0.147523,3.229726,-4.610781,1.093209,6.711647,-8.606612,1.692325,0.337277,-5.981364,9.010522,-5.281503,1.134885,8.652839,3.156544,-8.618512,-9.320385,4.128513,0.213940,-3.324006,-5.060404,-7.556361,-9.204498,3.132521,0.623794,-3.790438,-1.922829,-2.653529,-6.620530,1.115514,4.265053,8.693755,3.722167,8.321845,9.318597,4.671873,8.440491,-4.998095,0.264588,-5.082501,6.996648,3.429880,2.404132,-8.682712,-6.108603,9.312063,9.752287,4.822448,-2.412640,7.791969,-7.466339,3.396255,-2.299582,-3.970809,5.629904,0.580848,3.170733,8.286032,-2.314083,-4.884697,3.487346,-0.526585,-7.556284,5.491334,2.977938,-0.938543,2.755095,1.741497,7.744769,0.235346,-9.345040,-2.407716,-0.551884,1.137643,4.467843,9.059284,7.499593,5.222753,5.630049,-9.174544,9.447800,3.488558,-4.620324,-9.580588,-3.262648,1.545251,-7.366712,-5.229407,3.076585,4.319159,9.508068,0.049646,1.152888,-9.315336,3.741101,9.551719,-8.716547,0.208400,3.357691,-2.145661,6.120900,4.758838,4.127004,-6.185900,4.338755,3.628194,-0.248641,8.222610,4.830693,4.344420,7.002580,2.769899,2.860158,-3.213170,3.227686,-0.728194,-6.805301,-0.608242,5.721239,-5.928136,4.744367,9.309836,-5.803018,5.831485,-7.001489,-8.142585,7.577439,3.998338,-7.403217,6.859007,8.638280,9.029339,4.013404,7.123902,-6.924292,3.354795,-1.899398,-1.518627,-3.964781,-9.194960,-4.670266,-7.938959,2.685916,-7.720259,5.653468,8.020443,9.818260,1.481429,-0.844399,5.156346,-5.808472,-2.570795,8.919486,-2.942901,-9.162907,-1.253943,5.143897,-6.720779,0.302675,5.257051,7.446340,1.485399,1.930674,4.546176,4.047590,-0.043564,-5.539025,-7.803659,8.072610,2.152653,-5.840048,-5.465195,-0.225854,-3.689429,8.193682,-0.846341,-5.064538,0.229375,-2.584581,6.048962,1.222364,-7.798983,7.183289,4.500311,0.528455,-9.046802,7.375747,3.028176,-1.261094,5.614241,8.515356,-1.624683,0.508651,3.234230,-0.902756,7.091242,3.045908,2.519530,4.153299,3.638999,9.359336,-9.148918,7.416759,-3.338790,4.466171,9.715915,-9.352471,-9.565005,-8.256561,8.563258,-0.537532,-0.814706,-5.025406,-2.270814,4.549343,-9.077314,-9.860327,3.970426,1.989812,2.872219,7.482920,0.372541,-1.166413,7.680794,-1.583716,6.410518,5.399855,-7.258422,-6.775984,3.676094,-6.472268,-8.583817,-2.837992,-9.144485,-5.765317,-7.486559,4.198920,7.163902,6.739675,-2.482734,6.765268,6.683215,6.637630,9.023424,-4.471265,6.368432,-4.660857,0.811259,8.551115,-7.807120,8.472240,5.846145,4.198290,-4.810925,7.796258,-2.794799,1.791739,-8.108737,9.466273,-4.758940,-3.545379,-7.280296,5.095352,-3.868458,-0.708325,-8.903817,5.472453,-7.630925,-0.257279,-5.511046,0.249727,0.941859,-5.159730,1.939590,0.935425,2.941448,-1.794996,-2.505706,-1.414468,-4.568630,-0.307639,-0.698431,3.445145,-8.652782,-5.404705,9.351126,1.697689,-2.570435,-1.055336,6.112799,8.230613,-2.161863,-5.751916,4.822847,7.101936,3.277326,0.504923,5.588099,-5.901612,-8.287663,-6.527335,-2.219293,-4.850174,2.477801,8.924786,-3.285944,-8.728595,-6.994680,-5.447834,7.768360,5.807444,6.538128,-1.468267,4.644467,-9.648313,8.528961,-8.231460,-3.115971,-4.295801,1.054160,-1.785931,-4.027143,-8.888656,4.064354,6.904638,-7.526576,-5.552868,7.260139,4.480764,8.365342,-6.068212,-4.073105,8.187176,-2.161171,4.572714,2.970851,4.582178,-3.202693,-8.425237,-5.851588,-5.389976,-6.112392,-9.152683,1.124871,7.151534,2.972168,-3.149501,-9.947041,-4.324524,4.075454,-7.509384,1.435730,2.335579,-6.721827,-4.057560,1.946461,5.302159,3.570300,7.894686,0.502501,7.160257,-2.941829,4.442467,4.471981,6.728199,6.690829,0.764437,-5.021207,-0.896474,-4.775439,9.681021,2.290497,-5.954527,0.767045,8.818013,-3.751672,6.357007,-8.991337,1.302968,9.997194,9.864712,-0.409397,0.701758,5.445232,5.659660,-2.101253,3.023020,-8.497704,-7.038985,1.859488,-8.694266,2.606190,-6.352537,-8.982995,0.823468,7.742952,-9.225067,-8.087159,-8.933369,3.442269,2.398624,-0.533402,7.142323,-4.070607,-2.422140,-0.875935,1.611124,7.589212,7.788897,9.582996,2.824018,8.783133,8.796174,6.823292,1.854270,6.246718,7.862198,7.497237,-5.780263,-2.201421,6.248542,-5.661660,-8.799291,9.025556,8.613800,0.641507,7.681756,0.801114,-6.684687,-4.189712,3.227975,-7.742543,0.205653,-7.324160,-7.806248,3.814286,5.938899,-0.929585,0.670557,8.186879,8.743924,3.827514,-9.355883,9.094691,7.311070,-8.582895,6.033392,5.196770,4.588078,4.713305,0.249150,8.197588,-1.272641,-8.942038,6.414734,-4.828718,-2.691202,5.898539,-5.626300,3.698259,-7.278566,9.539076,9.289811,4.758734,-4.780062,-1.225808,8.407717,-7.820899,0.189281,3.834019,-2.856858,0.228969,4.134694,7.915674,2.364243,1.335708,6.786620,-0.870259,-6.763807,0.086534,-7.381815,-4.752000,2.454889,9.506058,1.652582,-1.077181,-9.705349,0.239265,-5.921600,-8.249069,8.082219,-8.151515,-7.179932,4.360405,-6.396698,3.022183,-6.639327,-2.269410,-0.767858,7.161484,-2.722226,5.192054,9.306786,-3.792478,-9.761035,-2.336842,-6.303254,-1.842948,0.761972,8.567498,-0.287283,-4.464950,-1.998917,-9.495123,-9.307099,0.576385,8.189747,9.794123,8.719109,3.159568,-3.524203,9.342472,-4.460377,6.758507,-8.099528,8.267696,9.993662,6.745731,-7.250520,-5.558240,9.322310,5.851270,6.875362,-3.241348,-5.692593,-3.033193,8.041591,9.489680,9.750162,4.621279,-3.685785,-8.397071,-5.060826,3.117565,1.594266,0.136050,8.910304,-7.267834,9.096090,3.035133,-6.678942,7.835326,-0.889487,4.798078,6.762158,2.964567,9.844339,-1.587131,2.099651,-1.523362,3.080604,-7.472886,-7.925802,6.983828,9.415935,2.145649,-4.916713,2.637726,6.781015,-2.412136,1.657367,-0.654899,7.456805,-6.588017,1.731256,-7.534373,-4.589216,9.215747,0.090178,-5.494875,-6.800807,-7.620019,-1.244847,5.924548,-8.286551,0.710367,8.565959,-6.071754,-0.011620,2.909960,6.443678,-9.472858,-3.120391,-6.510193,8.795824,-1.936237,-2.091322,-1.884901,-2.929937,-6.611479,-9.673070,-2.132941,-2.144707,-8.120051,8.886801,-4.399040,6.322683,-4.309679,-0.816716,2.399272,-4.867085,0.399128,-9.478607,3.633944,1.186228,7.418237,9.859076,3.367454,-4.199143,-6.670704,-0.003351,-9.261690,-4.549419,2.664485,8.534023,-6.518835,6.106009,-1.013695,7.402524,-6.748565,-3.918004,-5.091419,-9.922950,8.116181,-8.354039,-2.289549,-7.156199,-3.486185,-4.213301,3.723024,3.854033,7.287293,-4.721465,-3.388426,3.460590,-9.775406,5.290787,-1.216013,5.811550,-3.215045,4.274336,-7.773570,-0.141402,-3.926489,-4.020591,-1.273721,9.384380,-0.904214,-5.430423,-9.971506,-3.439980,6.098310,0.714878,0.395103,9.300189,-2.841796,-3.648293,-1.435940,-4.662814,9.266388,-4.689771,-6.492796,2.452235,3.308118,9.053582,-4.401810,4.523168,5.665817,3.114282,7.809110,9.079393,1.336356,-7.430282,-1.092860,3.390748,6.139857,5.438303,9.571935,8.218769,-4.487287,-7.832936,-6.548650,-0.661412,7.360376,-7.459613,-9.727922,-2.310803,1.197950,7.911220,0.683053,-7.230401,6.428319,-1.886571,-9.582765,3.364197,3.905091,0.857131,9.045027,6.543266,1.227698,4.515067,0.549078,-7.358500,-2.391339,-4.163775,-8.299975,1.586501,6.683120,-0.061601,5.821985,-6.545884,-8.384577,-7.186705,-0.119323,-5.166624,1.876917,4.933820,6.025374,6.901795,-8.525085,-5.222610,-0.764072,-9.015803,3.705645,-5.357144,-4.672663,4.225709,-3.233229,3.693324,-0.956658,9.893486,4.549731,-6.759314,-7.540097,4.821882,-0.890963,3.691877,5.125615,-7.432995,-3.907727,3.675556,0.684028,9.579141,-2.490540,-4.313440,-1.848975,-1.660229,8.489213,4.821746,-9.724226,-5.936349,-6.127850,-2.038960,5.999529,-4.250579,0.633556,-0.853582,3.542933,-9.052502,-0.801610,-9.037486,-4.535071,6.231354,8.314654,4.036730,5.552067,-2.035932,2.391154,3.053691,2.634275,1.914840,6.982352,-6.688726,0.948694,-4.345991,3.651208,0.926604,1.983931,1.408223,4.447669,-3.802019,-9.235127,-4.598308,3.746983,-4.369035,6.697288,7.720760,-5.935368,2.908514,9.007624,9.075857,-5.149266,-1.115054,8.059693,6.877006,3.700798,7.102314,-9.531087,8.181992,9.814592,8.153403,0.737392,8.042427,-0.833203,-4.959847,-2.041602,-3.496998,-6.754196,-9.567603,9.394711,-5.906862,-9.125501,-0.537314,7.920577,-2.264840,-0.522781,5.331503,1.117193,5.789233,-1.880107,9.095812,2.369767,3.951207,-8.608814,-7.857444,4.480763,-3.476239,-2.949120,7.165821,8.652047,7.122228,5.257482,2.165109,4.356958,-6.270547,-8.501229,9.450847,8.790295,6.537041,-4.025484,4.644251,-9.221965,4.370805,9.665127,-5.233375,3.662394,-1.493637,0.021729,6.111189,-3.079306,-7.599791,6.273906,-1.583273,-5.238846,-7.397834,5.628119,8.986810,-4.247785,5.414313,2.338288,-6.761687,3.787568,9.278111,-1.056320,7.500904,-2.627223,-9.177758,9.182943,-5.577018,-6.218943,9.853413,0.063321,-5.990486,0.237251,2.213768,2.471272,6.468120,-0.225925,6.137967,7.664175,2.781507,-3.244650,2.918824,-3.755659,-8.144780,2.031782,2.627103,-2.095022,-2.905298,2.302330,-6.957485,8.287214], dtype = "float64")#candidate|4110|(1800,)|const|float64
call_4109 = relay.TupleGetItem(func_2084_call(relay.reshape(const_4110.astype('float64'), [1800,])), 0)
call_4111 = relay.TupleGetItem(func_2087_call(relay.reshape(const_4110.astype('float64'), [1800,])), 0)
var_4125 = relay.var("var_4125", dtype = "int8", shape = (455, 2))#candidate|4125|(455, 2)|var|int8
bop_4126 = relay.less_equal(call_4109.astype('bool'), relay.reshape(var_4125.astype('bool'), relay.shape_of(call_4109))) # shape=(455, 2)
bop_4129 = relay.less_equal(call_4111.astype('bool'), relay.reshape(var_4125.astype('bool'), relay.shape_of(call_4111))) # shape=(455, 2)
func_462_call = mod.get_global_var('func_462')
func_465_call = mutated_mod.get_global_var('func_465')
var_4143 = relay.var("var_4143", dtype = "int8", shape = (4, 140))#candidate|4143|(4, 140)|var|int8
call_4142 = relay.TupleGetItem(func_462_call(relay.reshape(var_4143.astype('int8'), [280, 2])), 3)
call_4144 = relay.TupleGetItem(func_465_call(relay.reshape(var_4143.astype('int8'), [280, 2])), 3)
func_3568_call = mod.get_global_var('func_3568')
func_3571_call = mutated_mod.get_global_var('func_3571')
var_4150 = relay.var("var_4150", dtype = "float64", shape = (96,))#candidate|4150|(96,)|var|float64
call_4149 = relay.TupleGetItem(func_3568_call(relay.reshape(var_4150.astype('float64'), [4, 6, 4])), 0)
call_4151 = relay.TupleGetItem(func_3571_call(relay.reshape(var_4150.astype('float64'), [4, 6, 4])), 0)
func_156_call = mod.get_global_var('func_156')
func_159_call = mutated_mod.get_global_var('func_159')
call_4166 = relay.TupleGetItem(func_156_call(relay.reshape(var_4125.astype('int8'), [14, 13, 5]), relay.reshape(var_4125.astype('int8'), [14, 13, 5]), ), 1)
call_4167 = relay.TupleGetItem(func_159_call(relay.reshape(var_4125.astype('int8'), [14, 13, 5]), relay.reshape(var_4125.astype('int8'), [14, 13, 5]), ), 1)
output = relay.Tuple([call_4093,call_4107,const_4110,bop_4126,call_4142,var_4143,call_4149,var_4150,call_4166,])
output2 = relay.Tuple([call_4094,call_4108,const_4110,bop_4129,call_4144,var_4143,call_4151,var_4150,call_4167,])
func_4177 = relay.Function([var_4125,var_4143,var_4150,], output)
mod['func_4177'] = func_4177
mod = relay.transform.InferType()(mod)
var_4178 = relay.var("var_4178", dtype = "int8", shape = (455, 2))#candidate|4178|(455, 2)|var|int8
var_4179 = relay.var("var_4179", dtype = "int8", shape = (4, 140))#candidate|4179|(4, 140)|var|int8
var_4180 = relay.var("var_4180", dtype = "float64", shape = (96,))#candidate|4180|(96,)|var|float64
output = func_4177(var_4178,var_4179,var_4180,)
func_4181 = relay.Function([var_4178,var_4179,var_4180,], output)
mutated_mod['func_4181'] = func_4181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_4254 = func_237_call()
call_4255 = func_237_call()
func_1661_call = mod.get_global_var('func_1661')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_4258 = relay.TupleGetItem(func_1661_call(), 0)
call_4259 = relay.TupleGetItem(func_1663_call(), 0)
func_1661_call = mod.get_global_var('func_1661')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_4265 = relay.TupleGetItem(func_1661_call(), 0)
call_4266 = relay.TupleGetItem(func_1663_call(), 0)
output = relay.Tuple([call_4254,call_4258,call_4265,])
output2 = relay.Tuple([call_4255,call_4259,call_4266,])
func_4277 = relay.Function([], output)
mod['func_4277'] = func_4277
mod = relay.transform.InferType()(mod)
mutated_mod['func_4277'] = func_4277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mutated_mod.get_global_var('func_4277')
call_4278 = func_4277_call()
output = call_4278
func_4279 = relay.Function([], output)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4325 = relay.TupleGetItem(func_3837_call(), 0)
call_4326 = relay.TupleGetItem(func_3839_call(), 0)
output = call_4325
output2 = call_4326
func_4341 = relay.Function([], output)
mod['func_4341'] = func_4341
mod = relay.transform.InferType()(mod)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4341_call = mutated_mod.get_global_var('func_4341')
call_4342 = func_4341_call()
output = call_4342
func_4343 = relay.Function([], output)
mutated_mod['func_4343'] = func_4343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4341_call = mod.get_global_var('func_4341')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_4344 = func_4341_call()
call_4345 = func_4341_call()
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_4349 = func_2977_call()
call_4350 = func_2977_call()
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_4366 = func_2148_call()
call_4367 = func_2148_call()
output = relay.Tuple([call_4344,call_4349,call_4366,])
output2 = relay.Tuple([call_4345,call_4350,call_4367,])
func_4375 = relay.Function([], output)
mod['func_4375'] = func_4375
mod = relay.transform.InferType()(mod)
mutated_mod['func_4375'] = func_4375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mutated_mod.get_global_var('func_4375')
call_4376 = func_4375_call()
output = call_4376
func_4377 = relay.Function([], output)
mutated_mod['func_4377'] = func_4377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2513_call = mod.get_global_var('func_2513')
func_2515_call = mutated_mod.get_global_var('func_2515')
call_4384 = relay.TupleGetItem(func_2513_call(), 0)
call_4385 = relay.TupleGetItem(func_2515_call(), 0)
output = call_4384
output2 = call_4385
func_4396 = relay.Function([], output)
mod['func_4396'] = func_4396
mod = relay.transform.InferType()(mod)
mutated_mod['func_4396'] = func_4396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4396_call = mutated_mod.get_global_var('func_4396')
call_4397 = func_4396_call()
output = call_4397
func_4398 = relay.Function([], output)
mutated_mod['func_4398'] = func_4398
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4411 = relay.const([[[-9],[-6],[-1],[-5],[-6],[-2],[4],[9],[-9],[9]],[[-9],[-10],[-9],[-4],[-5],[2],[-7],[-9],[9],[-9]],[[-10],[-1],[-3],[2],[-9],[9],[-7],[-9],[-8],[-9]],[[-1],[9],[9],[8],[-3],[-3],[8],[-9],[-4],[6]],[[-3],[-3],[3],[-7],[6],[-6],[-4],[7],[-4],[-9]],[[2],[1],[-6],[4],[1],[-5],[-4],[-3],[2],[-10]],[[5],[-7],[2],[2],[9],[-4],[-5],[-2],[5],[-3]],[[5],[-1],[8],[-7],[-7],[9],[2],[2],[-10],[-3]],[[-8],[-1],[-2],[-6],[-10],[-3],[6],[-3],[1],[5]],[[7],[-9],[1],[-7],[6],[3],[7],[-8],[8],[3]],[[-2],[-10],[-2],[3],[5],[1],[-5],[2],[-10],[9]]], dtype = "int8")#candidate|4411|(11, 10, 1)|const|int8
var_4412 = relay.var("var_4412", dtype = "int8", shape = (11, 10, 1))#candidate|4412|(11, 10, 1)|var|int8
bop_4413 = relay.greater_equal(const_4411.astype('bool'), relay.reshape(var_4412.astype('bool'), relay.shape_of(const_4411))) # shape=(11, 10, 1)
output = relay.Tuple([bop_4413,])
output2 = relay.Tuple([bop_4413,])
func_4423 = relay.Function([var_4412,], output)
mod['func_4423'] = func_4423
mod = relay.transform.InferType()(mod)
mutated_mod['func_4423'] = func_4423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4424 = relay.var("var_4424", dtype = "int8", shape = (11, 10, 1))#candidate|4424|(11, 10, 1)|var|int8
func_4423_call = mutated_mod.get_global_var('func_4423')
call_4425 = func_4423_call(var_4424)
output = call_4425
func_4426 = relay.Function([var_4424], output)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4438 = relay.var("var_4438", dtype = "float32", shape = (14, 1, 16))#candidate|4438|(14, 1, 16)|var|float32
uop_4439 = relay.erf(var_4438.astype('float32')) # shape=(14, 1, 16)
bop_4452 = relay.bitwise_xor(var_4438.astype('int8'), relay.reshape(uop_4439.astype('int8'), relay.shape_of(var_4438))) # shape=(14, 1, 16)
func_156_call = mod.get_global_var('func_156')
func_159_call = mutated_mod.get_global_var('func_159')
var_4458 = relay.var("var_4458", dtype = "int8", shape = (91, 10))#candidate|4458|(91, 10)|var|int8
call_4457 = relay.TupleGetItem(func_156_call(relay.reshape(var_4458.astype('int8'), [14, 13, 5]), relay.reshape(var_4458.astype('int8'), [14, 13, 5]), ), 1)
call_4459 = relay.TupleGetItem(func_159_call(relay.reshape(var_4458.astype('int8'), [14, 13, 5]), relay.reshape(var_4458.astype('int8'), [14, 13, 5]), ), 1)
func_556_call = mod.get_global_var('func_556')
func_561_call = mutated_mod.get_global_var('func_561')
const_4461 = relay.const([[3.079866,3.599450,0.176095,2.267886,9.191809,-2.686863,8.442538,3.439520,5.557968,9.195272,-4.122833,-3.621098,9.970004,4.992612,-0.780171,-9.258034,-7.934819,9.434886,4.505980,-3.574131,0.941511,-5.401194,-1.261718,-2.715956,-3.153604,-8.643525,1.765733,3.042090,5.001491,-2.447304,-5.448324,7.028317,-5.152637,-7.151851,9.902781,1.689194,5.815407,1.192050,1.459699,3.899996,1.794776,-7.555730,-9.818198,5.627352,-2.749571,8.422914,9.008061,5.476966,-6.070777,1.970760,-9.928980,-7.945073,-1.122177,8.985539,3.166536,6.852083,5.537968,1.798763,-7.971365,0.103344,-8.413350,3.166125,3.174311,-0.420246,-4.759097,9.093631,-0.232561,-9.283329,-2.719389,-1.285982,-5.206139,-4.040966,5.667483,4.808250,8.105830,-9.230249,1.352729,3.568222,-4.325935,-6.197828,3.937813,9.299487,0.275707,-8.520546,-5.117615,0.443238,2.925182,-0.660151,2.771319,-7.286647,-9.541733,1.651835,-1.785925,-4.198577,-1.983771,7.021826,-8.565038,6.131713,-0.871459,8.047399,-8.253604,6.714347,3.010777,-9.180705,7.887540,9.971540,3.618293,0.852526,4.444541,-2.958287,6.033885,3.067273,-0.036748,8.478909,-2.704758,7.149530,-1.686935,-2.926648,-2.042109,-6.900633,0.753382,6.788949,-3.978406,-1.630835,-9.292929,6.424213,-3.589605,-0.625586,0.709254,5.468574,-4.144525,-3.686350,6.864464,-9.982974,9.805153,2.258207,-1.719915,9.207551,-5.376842,-8.075210,-4.544181,-9.088873,-0.174877,-7.593620,-0.939806,-4.367178,-9.662838,4.749996,8.703115,-9.085671,9.376352,-5.855336,-6.512520,-8.650146,0.858649,-3.614668,4.142360,1.289111,4.616481,8.912341,2.019644,-4.504213,5.604973,-4.430338,-0.025913,6.768234,-1.488169,5.285409,-5.315986,1.291426,6.408914,5.017413,-3.822774,-2.385248,-0.336956,-1.337322,8.881150,-4.598445,-4.066995,-0.124329,9.998621,-4.853968,0.608894,-6.913653,-7.876936,4.011395,5.332450,-2.215040,5.502024,5.720359,-3.233528,-4.370877,6.309316,-3.292196,1.187741,-9.142112,3.865754,-9.579002,-7.257231,-3.820646,0.316128,-1.392714,-5.836531,-9.247192,-2.730286,-3.943115,2.446309,-4.237148,3.086256,6.212250,0.333676,9.772516,-4.932627,2.440818,-7.916459,3.827506,-4.549348,5.109064,-4.921530,-9.445175,3.761407,-2.307326,2.015045,5.929319,4.657667,3.457692,-2.329320,7.787759,4.918463,-9.836464,-8.060705,4.512829,9.102834,-5.547050,-7.901556,-6.533734,7.253676,9.244170,-2.300678,4.192344,2.420167,-5.352000,4.659305,-6.681770,9.098726,-8.164734,4.256593,-5.211004,-4.139736,-8.959778,3.417770,9.921874,9.460310,-0.103045,1.160787,-0.499879,-7.384869,2.161125,-6.064022,-8.188019,-4.764031,-3.298311,-2.078878,-2.424054,8.616895,-8.644896,-7.245521,9.835882,-8.184584,9.525529,5.768391,-3.444048,-4.225088,3.275298,7.139874,-9.616321,-1.032322,4.445521,1.044184,-8.541088,2.416737,-8.172046,-3.999742,8.703078,7.013967,-6.943346,-1.766750,-4.408637,-4.593009,-5.654622,-3.630322,9.188069,9.889164,2.783567,3.288951,5.397518,-9.823713,-0.485083,6.823878,4.307847,-7.374427,5.248193,-2.104620,8.025551,5.559255,0.112481,2.175889,-1.211018,8.354008,7.339794,7.125711,0.965164,-7.378057,-0.642705,-1.117207,-7.007067,-8.372213,0.891061,-8.898477,2.436450,-1.388318,0.857674,-5.164673,-3.129974,4.489595,-6.696317,-7.820183,4.468539,7.911671,-3.172355,2.863972,-2.256197,-8.937686,8.230917,-5.240217,-4.755846,9.352700,-2.601866,-5.956168,1.001588,2.425513,-9.119666,-7.422681,-8.062160,-7.885119,2.626568,-4.793100,6.255543,2.782248,9.323577,1.753909,5.992573,6.248091,-7.902421,-2.915176,4.061214,2.569366,-9.207526,3.779056,9.206132,8.213985,-3.361344,-4.178138,7.893167,-5.289323,-7.636073,-9.900489,-7.403317,4.822475,8.561922,-5.175461,4.684294,8.379580,0.775523,0.059935,-7.099226,3.520948,-0.622811,-9.468171,-0.910435,-1.589032,-7.367474,-9.723737,-2.650966,-8.215570,3.755224,-4.499176,-2.021580,-1.926440,1.257163,7.289704,9.663744,-6.147707,-9.030570,9.920929,7.095966,5.645452,-0.075653,-6.441203,-0.104365,6.519160,6.252124,-7.089474,2.428593,-0.561850,-2.993761,-7.573094,-6.228773,6.026182,9.722528,5.059202,-1.923700,-4.117594,-1.532736,9.801071,3.654725,3.286947,6.534753,6.540046,-9.174724,1.218957,5.689945,-8.139645,-7.099727,-0.444552,-7.181913,-8.427326,2.488496,-4.106199,6.840503,-3.022498,-5.315920,5.232707,4.336257,-8.839587,-2.584131,6.969640,5.929823,-9.584882,4.295013,9.910962,-9.859851,6.402352,-6.676788,-8.811997,1.356876,0.643948,-2.749721,1.979638,2.471426,2.461268,0.216927,8.030029,5.651706,-9.786381,-4.194250,-1.675677,7.077465,-8.296028,4.855718,0.179748,4.863055,-7.241054,-3.379609,-5.269451,7.790174,6.702611,-5.796848,3.401024,-3.900196,-7.515103,6.666766,-5.280212,-2.696125,8.764989,2.270427,7.998863,7.001664,-2.162817,0.817207,6.490250,-5.048289,-4.907283,7.890480,-0.731258,7.340925,-5.049527,-6.012476,-8.182976,-6.310856,-1.989412,-9.627882,-5.209223,-5.245703,7.549967,2.234347,-2.633744,-6.953763,-0.167098,1.159380,8.957885,-0.024143,9.295456,-6.106475,0.972390,4.095743,-6.282277,8.647407,6.843588,0.128085,-6.097678,9.396358,4.518172,8.110324,7.213181,-2.420809,4.247316,5.386140,2.746433,-4.542244,-1.737594,3.623105,-2.653669,9.858561,-0.740085,-7.169920,-7.483081,7.971048,2.841639,3.613472,8.814849,-0.865141,-5.689088,-4.935803,7.873841,3.942810,-4.146330,2.258616,1.094711,9.193845,6.741113,-8.199693,3.570033,2.937447,-0.708658,-6.966268,9.109697,4.451861,-7.209924,2.088969,-1.548137,6.617248,1.561544,4.124885,3.298307,-3.486375,8.142802,-5.712145,5.522762,8.416611,6.666168,0.058619,-2.637810,-3.371539,-7.465929,4.810492,-0.183669,-5.055859,3.049033,5.525258,-7.344804,9.914197,-1.447452,-3.419722,-6.317657,-8.046994,7.766382,-6.276477,-9.534029,-1.568009,-3.301311,4.849227,-9.715563,3.187992,-7.126691,0.711626,-5.670383,-3.911384,-2.909025,-0.348142,-5.575424,-9.398743,8.401831,-2.047612,-9.775281,-8.475385,-3.460601,7.807715,0.450443,-8.804437,1.820106,-8.966574,-4.323667,5.231006,-5.572717,5.934205,-1.075343,-2.854192,-9.174828,1.121596,-5.532496,-2.282134,8.461954,7.738306,-4.786972,-2.991463,4.258475,7.296030,3.502649,7.373519,0.343553,2.677214,-0.922811,4.233487,-3.100928,0.260736,-4.265167,2.622531,-9.261030,7.960928,-3.153756,-2.242232,-7.937490,5.464722,-4.519476,9.163409,-0.595088,0.856709,8.167987,7.056757,9.801636,-2.296954,-4.330963,-6.182453,-2.806340,3.138625,6.881917,8.872240,-1.173861,-8.294481,3.784306,-5.428438,-5.694165,-7.714458,-9.430579,0.569326,0.029579,3.969536,1.539788,-6.723703,4.870853,-9.226707,0.218725,8.266722,-9.542100,1.769909,8.227720,8.786180,5.273051,9.265227,-8.714027,-0.672520,-1.475814,5.066913,9.902653,-9.917751,-4.646313,5.046695,-1.511776,1.490882,-7.171007,-5.107656,-8.140836,0.483123,0.163774,2.094966,1.415645,4.497322,8.601883,9.924111,-3.100664,-6.493124,-9.124692,2.504222,-4.505700,-1.024282,2.732463,-3.022774,-7.246305,4.312966,8.506830,9.377537,-1.282366,-4.571256,-6.262199,-3.996346,5.415458,7.752511,2.242811,-9.161180,8.892555,-7.779664,6.194712,-7.047573,0.649276,-6.592410,-3.333514,8.817749,-4.584156,-8.758555,-2.435047,-0.968292,2.072436,5.663536,-3.118061,-2.102222,-1.592582,-6.846551,-1.918686,-9.591459,-1.848809,-8.921095,-6.662006,-5.774034,8.382542,3.530904,2.149913,-4.703492,2.168168,9.156491,1.201821,2.001734,1.371000,-8.145061,-8.143593,3.374584,3.529315,3.819858,2.600581,-2.043405,6.245948,-1.359167,5.738822,5.991037,6.160960,-7.985640,9.070197,-6.190655,0.915028,-1.590684,9.830647,0.266281,5.486017,2.431371,-9.102538,5.052864,2.875967,-8.486763,-6.476268,-1.707603,8.845484,2.767366,-1.820680,4.669552,-0.307878,-6.584840,7.792744,-5.544134,-5.824549,2.583022,5.879676,-2.992213,3.696500,-1.779688,6.981132,4.617357,3.134524,2.498888,-1.432998,-5.234818,-8.471840,8.497004,-6.131171,-8.413451,7.118085,7.346757,-9.336240,1.021093,-3.123249,-7.064481,-0.496943,-3.941768,-3.374701,-5.106184,-8.100987,5.433521,1.783881,-7.951725,-3.610833,-6.038452,6.723617,-4.786678,-4.162176,5.481144,3.523696,-1.872905,8.751266,-8.232792,-0.553760,-2.292550,8.303327,6.402119,-5.722811,-6.042473,-6.417246,-0.580917,-4.273477,3.343532,3.143000,7.617691,-4.723365,-1.184625,0.521023,4.233302,4.235670,-6.858803,6.933851,1.872106,-5.247791,-1.219490,0.069683,-7.023389,-0.045599,-0.021172,-5.363114,-7.304219,4.874032,-1.570727,9.661002,-4.309045,8.864747,2.537918,-7.192403,8.903413,-2.066905,5.062330,-5.115560,1.322782,2.745551,-3.666692,-1.837919,9.419921,-6.242038,-2.865213,7.816127,-8.919044,5.248874,-3.757325,5.140590,-2.331832,6.563399,6.439966,4.322585,-5.209909,-2.333525,-6.376192,-9.965950,-8.321672,7.622923,-9.060179,2.808929,-6.800113,1.616629,-3.085722,-0.862154,-1.461434,-1.459626,5.137884,4.374996,-7.274555,0.349119,-8.952900,-3.004350,-5.661788,6.118927,8.210637,9.951209,8.076885,-3.958762,0.606386,0.608759,-7.142544,2.671941,5.550978,-3.684233,-4.279886,3.811859,9.699477,3.772747,6.903337,-2.415617,1.601136,-4.407925,-1.174567,-5.629708,4.552345,-1.146873,9.097853,-6.794160,-9.993659,0.698644,-2.703809,6.292759,-4.414949,3.157997,3.843564,-4.062773,3.524459,1.073172,2.519149,-0.965460,0.100332,5.708735,-7.988184,-8.710846,-4.465361,-5.711858,-7.506657,-2.788496,-9.083092,-0.665976,0.114548,9.927773,-4.476387,6.313264,-4.355701,-2.600845,-6.113996,4.848098,1.666804,8.085377,0.436300,-2.140477,3.760362,-5.850355,-7.170597,1.166443,-8.496134,4.989055,5.521664,-2.938931,-7.661567,-3.505702,-0.511442,9.663902,2.644430,1.617546,-5.482416,-4.612674,-1.130664,-6.402036,2.224859,5.453285,-1.861071,-6.908620,2.425648,0.534419,-2.449173,-4.552593,1.594895,-2.303313,-6.142599,1.415947,-1.191716,-4.882487,6.028729,7.169272,-4.551434,-9.840285,2.051591,-4.493749,4.271301,-8.675511,3.778218,0.151617,0.810563,2.646536,7.835421,-5.180205,-3.837178,3.440920,2.950409,9.716112,6.838333,-7.855890,-5.736217,6.348158,4.771496,4.673085,-4.895876,1.487093,5.273174,1.117543,-7.921223,-8.111313,-2.502189,-1.362712,-5.548187,6.243674,8.097919,2.060337,-9.464935,6.234480,-6.034791,7.905550,6.352400,-6.961848,3.766855,-3.515703,-6.140968,1.339457,-1.308238,-7.437078,0.516763,-7.231141,-9.399958,-5.139141,-1.422712,-1.791163,5.321675,2.280262,-1.944927,7.850110,6.468758,1.114328,-0.850940,-1.265199,-8.512508,6.009128,-0.637855,-0.979960,7.911133,0.480470,2.354338,6.921022,7.211122,0.479069,-6.232204,-0.644415,-9.775505,6.047466,-4.783369,7.268991,8.481451,-3.018257,-1.978374,-8.642095,7.152504,6.976719,2.533413,0.439824,1.007284,-0.390568,1.597909,9.807992,8.664547,-7.884440,-5.155296,-3.292413,8.198577,6.730468,-1.070210,2.795592,-5.083041,-3.266450,2.157294,-0.544291,-7.693233,0.932512,0.083987,-2.070266,5.237406,-4.919363,-8.216430,7.538715,9.583505,-7.678358,-7.183351,-0.430787,-2.400487,-1.850418,-6.496498,5.343997,-4.449885,7.174215,0.690575,-5.650867,-9.766722,3.207922,8.963091,-9.201102,0.378801,-7.707128,3.741993,-0.307091,3.350508,0.968047,-8.523742,6.106631,0.315849,-0.919861,-6.012749,-3.344434,-8.114565,4.409107,-4.409689,-6.899188,-2.463975,-3.355184,3.224164,-0.523885,9.116900,7.019093,-5.519021,-6.948804,2.553312,-8.741988,3.928435,-8.675964,-8.216916,-4.024375,-3.964992,8.904589,1.198068,-8.275560,-8.213686,-3.437388,-5.339722,9.468675,-5.548949,7.847370,7.320301,4.779526,-0.683865,-1.253406,1.158421,1.401622,6.183334,2.594374,-1.116806,-3.494749,-1.817222,5.998448,-5.260537,0.149984,-1.616731,-3.190115,-7.502459,3.105225,0.091891,-5.151832,-5.434052,-6.792610,-1.938730,-0.522795,1.705596,9.869515,8.578791,4.473666,-0.114415,-6.755782,2.938719,-1.784043,-7.641564,-6.865746,7.570411,1.523371,-3.570915,4.461999,8.173083,-5.813267,-9.929651,-1.802991,-2.007209,1.264509,-8.765219,2.528939,-7.777879,6.420575,5.762135,3.556359,-6.167594,-3.979788,-1.211460,5.010174,-0.432104,6.079921,-2.155446,-9.634630,2.411431,2.243504,-3.932186,4.717467,-8.460050,0.575247,-5.927446,-5.429920,5.325390,1.884064,-1.291780,4.690003,-4.278084,-0.223167,-1.062840,0.943504,-9.660454,1.019774,-3.009425,-6.733481,-1.400640,-5.751521,-6.635432,9.014633,-2.210713,0.687432,-0.189147,5.327597,0.493368,8.878375,-7.419620,0.432106,2.018971,0.184359,3.708589,-6.893727,-1.890292,-1.990014,4.812695,-8.917381,3.032095,-3.806355,4.583376,-8.392339,8.791150,-5.655627,3.361568,7.418203,0.636338,-5.163174,-3.730840,-2.240054,9.855322,6.190490,-0.271304,-4.572881,4.215792,9.286726,-3.249030,-8.097376,6.561586,-6.061852,-9.021051,5.713775,-5.940289,9.652275,-1.642240,5.020037,-4.689012,-4.831581,3.723241,-7.375200,-5.075349,7.847482,-1.623325,-5.451344,-4.216115,-7.013173,-5.550825,-7.391027,6.567979,2.060472,8.947946,1.124636,7.306257,2.369962,1.619465,-5.436342,5.008245,-6.548809,1.713869,-6.547659,9.462478,-2.837605,-0.294749,0.396765,-8.339326,-4.213157,2.322726,-6.227921,6.196084,6.264539,7.788373,-0.630620,7.811391,-8.183750,-4.696352,5.864759,6.640933,9.029149,-6.555224,2.373770,-1.552562,8.354737,-9.696647,-4.666479,5.802185,-0.947804,7.198090,7.162491,2.202681,4.804906,-5.200020,-1.490534,0.116842,-7.215591,-7.061938,-4.560489,9.253724,-9.122489,4.759792,6.102894,4.978831,-9.889304,1.229298,1.127097,4.163780,-1.018831,5.322977,-8.003366,-5.827638,7.314744,-4.026345,6.635759,5.213142,5.847376,2.591306,1.796740,-7.440133,4.786341,1.316465,8.714936,-2.133713,0.301750,-7.819139,-1.111087,-9.633481,7.957724,5.214547,-2.716499,-6.386821,-9.694782,-2.954453,-5.523514,3.711885,-0.795791,8.515045,6.033168,2.995406,0.157217,-6.411161,0.624109,5.085963,-1.297153,9.987368,2.808125,-2.120440,9.200344,6.887524,-0.482274,-8.234284,-1.939792,-5.475300,7.556489,-0.299392,4.353128,-5.427564,4.433293,5.661933,-9.218474,-8.163457,-6.949741,3.082451,6.907004,-3.597650,8.815934,2.280966,-8.996256,-1.033155,4.026772,-3.058709,8.120310,7.156152,1.248416,-9.429883,-6.137468,8.672279,-8.669122,-7.884712,-6.097252,8.514018,4.162312,8.410023,-7.584977,4.762367,-2.229297,-6.646411,-8.889663,-8.923152,-2.031977,-9.370581,2.713990,8.718985,-6.849566,1.931238,-8.096954,8.373302,1.437547,6.500526,-6.326666,-4.774650,4.953120,-0.087757,-4.612795,2.407762,-2.428406,1.686039,4.854883,0.331339,0.626402,-5.026276,4.780779,7.652730,-6.488401,-5.188252,-7.484440,0.460756,8.864735,4.180822,-9.543910,-8.460550,-3.197856,-2.054743,-2.012031,-3.274945,1.933094,-9.085601,-0.568735,4.847629,-0.001099,5.502554,-4.000985,-9.733680,-8.046176,-2.294544,-1.446360,6.308411,-7.895421,2.807145,7.599093,-5.249856,-0.317117,7.907342,2.116378,-7.779557,-4.701929,-2.754606,-5.709060,-3.602890,-2.955324,-4.446478,5.476432,-8.033885,8.812563,7.348846,0.408672,0.832967,-4.676616,-9.739103,-2.845717,4.179391,-4.594812,5.866502,4.691892,6.523416,-9.213887,-2.998667,-7.918327,-8.102038,-3.966906,-1.828674,0.956105,-5.013110,8.309333,9.356621,9.982435,-5.592213,-7.760055,-7.498920,-5.059706,-8.832459,6.324760,-3.344420,5.364342,-6.960566,-4.757089,4.576021,-9.367047,3.596971,-2.622734,9.518132,-9.746542,5.645858,-0.172750,-6.276113,7.085215,5.403789,2.797910,-8.273761,-5.888567,9.779104,-9.749431,5.678069,-9.401312,-1.389875,9.673059,-9.343495,7.812648,3.640598,0.800248,-3.717709,-7.884699,-3.349094,-6.264021,-7.676379,6.422179,0.411275,-5.191524,-3.667131,-4.706952,6.341461,5.321523,6.157873,7.760335,-2.139110,-8.250543,9.747008,-4.186971,-9.605739,8.925074,-3.460820,-0.620216,-5.736963,-0.022864,6.654440,1.474997,-9.248435,-9.361385,5.489701,-3.146059,1.849824,4.440329,3.521476,-9.468734,-3.182591,-6.580644,-7.813220,-6.594516,4.825813,5.705504,3.334056,1.144833,2.861368,6.127308,9.370960,-7.833914,-2.644337,-8.724548,-6.360189,-6.120865,-5.542621,7.248981,9.266720,8.852107,-7.108815,-1.085439,5.429932,0.307045,8.193528,2.763177,6.702088,6.402500,0.211776,6.720629,-1.926536,-0.786114,5.840777,8.016562,-4.582031,3.651604,-9.241484,-1.502449,-4.501510,-4.729524,9.319603,-1.420279,-8.989881,-3.189082,5.250223,7.599578,6.221228,-8.937848,2.880067,-1.059541,-2.797413,-9.346262,8.016257,-2.431469,-1.435365,9.522991,9.570703,-1.729592,-4.323316,9.056634,7.775853,2.028920,8.495589,8.238654,-7.523414,-9.092137,7.735194,9.641996,5.668638,-6.327001,-8.235450,9.371949,-3.649076,0.928377,8.142471,-4.668154,8.501950,0.250775,-4.853616,8.656343,-4.517527,7.385185,-1.855681,-2.080466,1.769956,-9.904487,3.315204,9.925606,7.770865,-0.044617,2.674498,0.928438,-1.692215,0.539650,2.693094,7.162463,-2.401662,-1.884315,9.031480,5.992254,4.299805,2.722241,4.346539,-7.916485,9.941111,8.974577,-5.751262,-3.840784,-1.707762,8.318092,-5.456292,5.136045,8.125421,-6.126250,3.579263,1.005130,6.718299,4.178654,5.300369,0.861957,-8.895465,-5.201104,-8.399481,6.365686,-9.567872,-1.097049,-7.035301,-9.541197,6.400455,-8.964116,-2.194055,-6.468976,-4.624114,-3.663263,0.017885,8.210202,1.866296,-8.754035,-5.821486,-0.011632,-0.605723,3.924229,-9.661340,6.412270,-9.739363,-8.001622,9.914548,-6.027476,-1.939091,-5.033504,3.566614,7.758133,4.973232,-5.177873,-7.320685,-4.566073,8.044913,0.281348,7.524910,-2.602495,-0.404166,-5.258906,3.252561,-8.120906,-7.879519,6.084293,-5.751160,-7.721927,9.583777,5.350266,9.744137,-0.491120,2.020972,-3.918353,-7.159595,6.968347,-7.473920,4.078316,-7.277103,8.181628,-4.281311,-1.759723,-4.982936,-7.929770,2.890715,7.560224,3.186004,-8.259198,0.905319,-5.452136,0.757211,-3.018511,2.178227,2.610798,1.075936,-5.929646,2.617005,-0.409920,4.536100,9.406176,-8.045154,4.044790,4.489187,4.701111,6.880780,-2.963246,8.132209,-2.333926,-5.698420,-5.568740,-5.938332,8.400278,-7.340997,1.367008,-3.347271,-1.959864,8.092193]], dtype = "float64")#candidate|4461|(1, 1800)|const|float64
call_4460 = relay.TupleGetItem(func_556_call(relay.reshape(const_4461.astype('float64'), [8, 15, 15]), relay.reshape(const_4461.astype('float64'), [8, 15, 15]), relay.reshape(const_4461.astype('float64'), [8, 15, 15]), ), 3)
call_4462 = relay.TupleGetItem(func_561_call(relay.reshape(const_4461.astype('float64'), [8, 15, 15]), relay.reshape(const_4461.astype('float64'), [8, 15, 15]), relay.reshape(const_4461.astype('float64'), [8, 15, 15]), ), 3)
bop_4466 = relay.floor_mod(bop_4452.astype('float32'), relay.reshape(uop_4439.astype('float32'), relay.shape_of(bop_4452))) # shape=(14, 1, 16)
output = relay.Tuple([call_4457,var_4458,call_4460,const_4461,bop_4466,])
output2 = relay.Tuple([call_4459,var_4458,call_4462,const_4461,bop_4466,])
func_4472 = relay.Function([var_4438,var_4458,], output)
mod['func_4472'] = func_4472
mod = relay.transform.InferType()(mod)
var_4473 = relay.var("var_4473", dtype = "float32", shape = (14, 1, 16))#candidate|4473|(14, 1, 16)|var|float32
var_4474 = relay.var("var_4474", dtype = "int8", shape = (91, 10))#candidate|4474|(91, 10)|var|int8
output = func_4472(var_4473,var_4474,)
func_4475 = relay.Function([var_4473,var_4474,], output)
mutated_mod['func_4475'] = func_4475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4341_call = mod.get_global_var('func_4341')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_4479 = func_4341_call()
call_4480 = func_4341_call()
output = relay.Tuple([call_4479,])
output2 = relay.Tuple([call_4480,])
func_4500 = relay.Function([], output)
mod['func_4500'] = func_4500
mod = relay.transform.InferType()(mod)
mutated_mod['func_4500'] = func_4500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4500_call = mutated_mod.get_global_var('func_4500')
call_4501 = func_4500_call()
output = call_4501
func_4502 = relay.Function([], output)
mutated_mod['func_4502'] = func_4502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_4567 = relay.TupleGetItem(func_1117_call(), 2)
call_4568 = relay.TupleGetItem(func_1119_call(), 2)
uop_4574 = relay.log10(call_4567.astype('float64')) # shape=(1, 200)
uop_4576 = relay.log10(call_4568.astype('float64')) # shape=(1, 200)
var_4582 = relay.var("var_4582", dtype = "float64", shape = (6, 200))#candidate|4582|(6, 200)|var|float64
bop_4583 = relay.not_equal(uop_4574.astype('bool'), var_4582.astype('bool')) # shape=(6, 200)
bop_4586 = relay.not_equal(uop_4576.astype('bool'), var_4582.astype('bool')) # shape=(6, 200)
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_4593 = func_2148_call()
call_4594 = func_2148_call()
bop_4615 = relay.multiply(var_4582.astype('int64'), relay.reshape(bop_4583.astype('int64'), relay.shape_of(var_4582))) # shape=(6, 200)
bop_4618 = relay.multiply(var_4582.astype('int64'), relay.reshape(bop_4586.astype('int64'), relay.shape_of(var_4582))) # shape=(6, 200)
func_1488_call = mod.get_global_var('func_1488')
func_1490_call = mutated_mod.get_global_var('func_1490')
call_4621 = relay.TupleGetItem(func_1488_call(), 1)
call_4622 = relay.TupleGetItem(func_1490_call(), 1)
func_1094_call = mod.get_global_var('func_1094')
func_1096_call = mutated_mod.get_global_var('func_1096')
call_4623 = func_1094_call()
call_4624 = func_1094_call()
output = relay.Tuple([call_4593,bop_4615,call_4621,call_4623,])
output2 = relay.Tuple([call_4594,bop_4618,call_4622,call_4624,])
func_4634 = relay.Function([var_4582,], output)
mod['func_4634'] = func_4634
mod = relay.transform.InferType()(mod)
mutated_mod['func_4634'] = func_4634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4635 = relay.var("var_4635", dtype = "float64", shape = (6, 200))#candidate|4635|(6, 200)|var|float64
func_4634_call = mutated_mod.get_global_var('func_4634')
call_4636 = func_4634_call(var_4635)
output = call_4636
func_4637 = relay.Function([var_4635], output)
mutated_mod['func_4637'] = func_4637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1822_call = mod.get_global_var('func_1822')
func_1824_call = mutated_mod.get_global_var('func_1824')
call_4649 = func_1822_call()
call_4650 = func_1822_call()
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_4659 = relay.TupleGetItem(func_2621_call(), 0)
call_4660 = relay.TupleGetItem(func_2623_call(), 0)
output = relay.Tuple([call_4649,call_4659,])
output2 = relay.Tuple([call_4650,call_4660,])
func_4677 = relay.Function([], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mutated_mod.get_global_var('func_4677')
call_4678 = func_4677_call()
output = call_4678
func_4679 = relay.Function([], output)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_4711 = func_2977_call()
call_4712 = func_2977_call()
output = call_4711
output2 = call_4712
func_4719 = relay.Function([], output)
mod['func_4719'] = func_4719
mod = relay.transform.InferType()(mod)
mutated_mod['func_4719'] = func_4719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4719_call = mutated_mod.get_global_var('func_4719')
call_4720 = func_4719_call()
output = call_4720
func_4721 = relay.Function([], output)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4500_call = mod.get_global_var('func_4500')
func_4502_call = mutated_mod.get_global_var('func_4502')
call_4741 = relay.TupleGetItem(func_4500_call(), 0)
call_4742 = relay.TupleGetItem(func_4502_call(), 0)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_4745 = func_237_call()
call_4746 = func_237_call()
func_4088_call = mod.get_global_var('func_4088')
func_4090_call = mutated_mod.get_global_var('func_4090')
call_4753 = relay.TupleGetItem(func_4088_call(), 2)
call_4754 = relay.TupleGetItem(func_4090_call(), 2)
output = relay.Tuple([call_4741,call_4745,call_4753,])
output2 = relay.Tuple([call_4742,call_4746,call_4754,])
func_4769 = relay.Function([], output)
mod['func_4769'] = func_4769
mod = relay.transform.InferType()(mod)
output = func_4769()
func_4770 = relay.Function([], output)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3159_call = mod.get_global_var('func_3159')
func_3160_call = mutated_mod.get_global_var('func_3160')
call_4773 = func_3159_call()
call_4774 = func_3159_call()
func_3725_call = mod.get_global_var('func_3725')
func_3727_call = mutated_mod.get_global_var('func_3727')
var_4815 = relay.var("var_4815", dtype = "float64", shape = (728,))#candidate|4815|(728,)|var|float64
call_4814 = relay.TupleGetItem(func_3725_call(relay.reshape(var_4815.astype('float64'), [7, 13, 8])), 0)
call_4816 = relay.TupleGetItem(func_3727_call(relay.reshape(var_4815.astype('float64'), [7, 13, 8])), 0)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4825 = relay.TupleGetItem(func_3837_call(), 0)
call_4826 = relay.TupleGetItem(func_3839_call(), 0)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_4834 = func_2281_call()
call_4835 = func_2281_call()
func_4769_call = mod.get_global_var('func_4769')
func_4770_call = mutated_mod.get_global_var('func_4770')
call_4841 = relay.TupleGetItem(func_4769_call(), 2)
call_4842 = relay.TupleGetItem(func_4770_call(), 2)
output = relay.Tuple([call_4773,call_4814,var_4815,call_4825,call_4834,call_4841,])
output2 = relay.Tuple([call_4774,call_4816,var_4815,call_4826,call_4835,call_4842,])
func_4852 = relay.Function([var_4815,], output)
mod['func_4852'] = func_4852
mod = relay.transform.InferType()(mod)
var_4853 = relay.var("var_4853", dtype = "float64", shape = (728,))#candidate|4853|(728,)|var|float64
output = func_4852(var_4853)
func_4854 = relay.Function([var_4853], output)
mutated_mod['func_4854'] = func_4854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2491_call = mod.get_global_var('func_2491')
func_2492_call = mutated_mod.get_global_var('func_2492')
call_4856 = relay.TupleGetItem(func_2491_call(), 0)
call_4857 = relay.TupleGetItem(func_2492_call(), 0)
output = relay.Tuple([call_4856,])
output2 = relay.Tuple([call_4857,])
func_4862 = relay.Function([], output)
mod['func_4862'] = func_4862
mod = relay.transform.InferType()(mod)
output = func_4862()
func_4863 = relay.Function([], output)
mutated_mod['func_4863'] = func_4863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_4864 = func_1286_call()
call_4865 = func_1286_call()
output = call_4864
output2 = call_4865
func_4867 = relay.Function([], output)
mod['func_4867'] = func_4867
mod = relay.transform.InferType()(mod)
output = func_4867()
func_4868 = relay.Function([], output)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4874 = relay.var("var_4874", dtype = "float32", shape = (4, 1, 9))#candidate|4874|(4, 1, 9)|var|float32
uop_4875 = relay.erf(var_4874.astype('float32')) # shape=(4, 1, 9)
uop_4878 = relay.sin(uop_4875.astype('float64')) # shape=(4, 1, 9)
func_3177_call = mod.get_global_var('func_3177')
func_3179_call = mutated_mod.get_global_var('func_3179')
call_4880 = func_3177_call()
call_4881 = func_3177_call()
output = relay.Tuple([uop_4878,call_4880,])
output2 = relay.Tuple([uop_4878,call_4881,])
func_4882 = relay.Function([var_4874,], output)
mod['func_4882'] = func_4882
mod = relay.transform.InferType()(mod)
var_4883 = relay.var("var_4883", dtype = "float32", shape = (4, 1, 9))#candidate|4883|(4, 1, 9)|var|float32
output = func_4882(var_4883)
func_4884 = relay.Function([var_4883], output)
mutated_mod['func_4884'] = func_4884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_237_call = mod.get_global_var('func_237')
func_239_call = mutated_mod.get_global_var('func_239')
call_4942 = func_237_call()
call_4943 = func_237_call()
uop_4946 = relay.atan(call_4942.astype('float64')) # shape=(10, 16, 11)
uop_4948 = relay.atan(call_4943.astype('float64')) # shape=(10, 16, 11)
bop_4951 = relay.bitwise_or(uop_4946.astype('uint16'), relay.reshape(call_4942.astype('uint16'), relay.shape_of(uop_4946))) # shape=(10, 16, 11)
bop_4954 = relay.bitwise_or(uop_4948.astype('uint16'), relay.reshape(call_4943.astype('uint16'), relay.shape_of(uop_4948))) # shape=(10, 16, 11)
output = relay.Tuple([bop_4951,])
output2 = relay.Tuple([bop_4954,])
func_4955 = relay.Function([], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4955_call = mutated_mod.get_global_var('func_4955')
call_4956 = func_4955_call()
output = call_4956
func_4957 = relay.Function([], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4986 = relay.TupleGetItem(func_3819_call(), 0)
call_4987 = relay.TupleGetItem(func_3820_call(), 0)
output = call_4986
output2 = call_4987
func_5002 = relay.Function([], output)
mod['func_5002'] = func_5002
mod = relay.transform.InferType()(mod)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5002_call = mutated_mod.get_global_var('func_5002')
call_5003 = func_5002_call()
output = call_5003
func_5004 = relay.Function([], output)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5009 = relay.var("var_5009", dtype = "int32", shape = ())#candidate|5009|()|var|int32
var_5010 = relay.var("var_5010", dtype = "int32", shape = (11, 13, 3))#candidate|5010|(11, 13, 3)|var|int32
bop_5011 = relay.greater_equal(var_5009.astype('bool'), var_5010.astype('bool')) # shape=(11, 13, 3)
var_5023 = relay.var("var_5023", dtype = "int32", shape = (11, 13, 3))#candidate|5023|(11, 13, 3)|var|int32
bop_5024 = relay.logical_and(var_5010.astype('bool'), relay.reshape(var_5023.astype('bool'), relay.shape_of(var_5010))) # shape=(11, 13, 3)
func_4341_call = mod.get_global_var('func_4341')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_5029 = func_4341_call()
call_5030 = func_4341_call()
bop_5043 = relay.not_equal(bop_5011.astype('bool'), relay.reshape(var_5010.astype('bool'), relay.shape_of(bop_5011))) # shape=(11, 13, 3)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_5060 = relay.TupleGetItem(func_3837_call(), 1)
call_5061 = relay.TupleGetItem(func_3839_call(), 1)
func_4500_call = mod.get_global_var('func_4500')
func_4502_call = mutated_mod.get_global_var('func_4502')
call_5068 = relay.TupleGetItem(func_4500_call(), 0)
call_5069 = relay.TupleGetItem(func_4502_call(), 0)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_5075 = func_1333_call()
call_5076 = func_1333_call()
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
const_5087 = relay.const([-9,-1,9,5,-5,-6,6,6,7,-1,3,4,-10,8,-5,1,7,6,-3,3], dtype = "int8")#candidate|5087|(20,)|const|int8
call_5086 = relay.TupleGetItem(func_1229_call(relay.reshape(const_5087.astype('int8'), [20,])), 3)
call_5088 = relay.TupleGetItem(func_1232_call(relay.reshape(const_5087.astype('int8'), [20,])), 3)
uop_5097 = relay.log2(var_5023.astype('float64')) # shape=(11, 13, 3)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_5099 = relay.TupleGetItem(func_1117_call(), 2)
call_5100 = relay.TupleGetItem(func_1119_call(), 2)
output = relay.Tuple([bop_5024,call_5029,bop_5043,call_5060,call_5068,call_5075,call_5086,const_5087,uop_5097,call_5099,])
output2 = relay.Tuple([bop_5024,call_5030,bop_5043,call_5061,call_5069,call_5076,call_5088,const_5087,uop_5097,call_5100,])
func_5108 = relay.Function([var_5009,var_5010,var_5023,], output)
mod['func_5108'] = func_5108
mod = relay.transform.InferType()(mod)
mutated_mod['func_5108'] = func_5108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5108_call = mutated_mod.get_global_var('func_5108')
var_5110 = relay.var("var_5110", dtype = "int32", shape = ())#candidate|5110|()|var|int32
var_5111 = relay.var("var_5111", dtype = "int32", shape = (11, 13, 3))#candidate|5111|(11, 13, 3)|var|int32
var_5112 = relay.var("var_5112", dtype = "int32", shape = (11, 13, 3))#candidate|5112|(11, 13, 3)|var|int32
call_5109 = func_5108_call(var_5110,var_5111,var_5112,)
output = call_5109
func_5113 = relay.Function([var_5110,var_5111,var_5112,], output)
mutated_mod['func_5113'] = func_5113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1731_call = mod.get_global_var('func_1731')
func_1732_call = mutated_mod.get_global_var('func_1732')
call_5124 = func_1731_call()
call_5125 = func_1731_call()
output = relay.Tuple([call_5124,])
output2 = relay.Tuple([call_5125,])
func_5126 = relay.Function([], output)
mod['func_5126'] = func_5126
mod = relay.transform.InferType()(mod)
mutated_mod['func_5126'] = func_5126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5126_call = mutated_mod.get_global_var('func_5126')
call_5127 = func_5126_call()
output = call_5127
func_5128 = relay.Function([], output)
mutated_mod['func_5128'] = func_5128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_5152 = relay.TupleGetItem(func_3405_call(), 2)
call_5153 = relay.TupleGetItem(func_3406_call(), 2)
uop_5154 = relay.sqrt(call_5152.astype('float32')) # shape=(10, 16, 11)
uop_5156 = relay.sqrt(call_5153.astype('float32')) # shape=(10, 16, 11)
output = uop_5154
output2 = uop_5156
func_5157 = relay.Function([], output)
mod['func_5157'] = func_5157
mod = relay.transform.InferType()(mod)
output = func_5157()
func_5158 = relay.Function([], output)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_5187 = func_2977_call()
call_5188 = func_2977_call()
func_3093_call = mod.get_global_var('func_3093')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_5213 = func_3093_call()
call_5214 = func_3093_call()
output = relay.Tuple([call_5187,call_5213,])
output2 = relay.Tuple([call_5188,call_5214,])
func_5218 = relay.Function([], output)
mod['func_5218'] = func_5218
mod = relay.transform.InferType()(mod)
output = func_5218()
func_5219 = relay.Function([], output)
mutated_mod['func_5219'] = func_5219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_5272 = func_576_call()
call_5273 = func_576_call()
output = call_5272
output2 = call_5273
func_5297 = relay.Function([], output)
mod['func_5297'] = func_5297
mod = relay.transform.InferType()(mod)
output = func_5297()
func_5298 = relay.Function([], output)
mutated_mod['func_5298'] = func_5298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5218_call = mod.get_global_var('func_5218')
func_5219_call = mutated_mod.get_global_var('func_5219')
call_5308 = relay.TupleGetItem(func_5218_call(), 1)
call_5309 = relay.TupleGetItem(func_5219_call(), 1)
output = call_5308
output2 = call_5309
func_5315 = relay.Function([], output)
mod['func_5315'] = func_5315
mod = relay.transform.InferType()(mod)
mutated_mod['func_5315'] = func_5315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5315_call = mutated_mod.get_global_var('func_5315')
call_5316 = func_5315_call()
output = call_5316
func_5317 = relay.Function([], output)
mutated_mod['func_5317'] = func_5317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4279_call = mutated_mod.get_global_var('func_4279')
call_5375 = relay.TupleGetItem(func_4277_call(), 2)
call_5376 = relay.TupleGetItem(func_4279_call(), 2)
func_3725_call = mod.get_global_var('func_3725')
func_3727_call = mutated_mod.get_global_var('func_3727')
const_5385 = relay.const([[-9.195726,6.495598,7.870559,-8.527270,7.812515,-2.404375,5.491163,-7.228304,-0.029586,6.035724,6.843445,-5.779754,-3.573482,6.982929,7.870931,-4.349630,5.330692,-5.875274,-7.537113,0.849896,-2.204092,8.001495,-4.076625,4.160487,-9.684320,-7.837836,-5.074975,-1.416232,-2.258483,1.281721,3.844871,8.294166,6.325544,4.458950,3.879328,7.987232,-5.121609,1.472908,-1.294898,5.488579,8.627432,-0.979998,-8.126618,-1.807188,-8.656921,-2.638774,6.194290,-3.471767,-6.298548,3.111032,9.790984,8.738609,5.923578,-6.507959,1.990508,-1.229325,7.203830,-7.022506,7.710462,-2.073609,-5.665489,-8.597803,-1.573801,-9.971927,-5.759092,-5.689410,-5.708165,-1.219717,9.221885,2.407074,-5.011818,6.323285,-8.904754,-3.275021,8.681903,-6.253889,7.649587,4.472095,8.363000,-9.106243,3.055683,9.558838,-3.449396,-4.693752,-4.473581,-5.508641,3.857593,-2.400386,0.750498,-2.067805,1.103119,-2.968151,7.701421,2.974702,9.957181,-7.500982,-7.281188,-1.418916,0.290416,-3.756460,-3.875730,5.480719,5.099848,-9.486268],[-3.468943,5.198599,9.563846,-4.530058,6.510930,1.628891,-0.086251,-6.406344,-0.909813,0.420070,8.645563,1.426674,4.828087,9.852431,3.964698,6.397246,-1.230952,8.137686,0.073898,-0.062983,6.101464,8.983313,-2.986788,4.242652,5.124055,-7.323030,-0.760360,-0.972850,-9.866927,-9.761435,8.601594,7.425004,-6.571133,8.948695,6.938456,5.824499,-7.216851,-7.807885,-0.624288,3.363086,-4.092982,-8.237311,3.722376,-1.946600,-5.764506,8.367990,5.336573,-0.437731,-4.675940,8.115947,4.122468,-9.260735,7.187074,-2.330305,-9.294316,4.005903,-8.366524,-6.524157,9.401573,1.617034,6.713747,5.139912,-1.875311,0.787880,-4.808010,-2.603992,9.765761,3.568965,8.476468,-1.332763,8.941098,-8.973992,7.181156,7.047436,-7.703832,-2.028102,-1.634238,-5.024271,9.911174,3.321475,-7.215532,-6.958815,-2.423471,-4.115180,9.685116,-0.547710,3.897870,-8.573940,5.836944,3.852496,4.973543,7.110957,9.708736,-9.433878,5.395414,-1.806074,2.799462,2.371325,-0.408729,8.893762,-8.471506,-8.544966,-6.744941,-9.775442],[2.926155,0.292932,-9.630597,-0.101473,-4.301969,-9.065057,-1.268355,9.405783,8.234087,8.557270,4.200887,-5.944595,-1.780759,5.627389,0.554022,-4.741897,6.019064,3.290910,3.798953,2.879567,-7.652100,9.326357,2.387118,-0.789905,-0.519660,-2.517595,-2.579615,7.202177,-5.491341,-4.840755,9.302942,-0.990970,-8.251037,-1.648696,1.447251,-2.797301,7.617599,-0.638378,-9.812998,-1.962913,-8.595698,-7.450222,9.702738,-3.226651,-2.582222,9.201042,6.948348,-4.279276,-2.162110,3.435095,3.271363,8.158375,-9.686611,8.920872,7.422378,7.334273,-4.741871,-6.078829,6.024318,2.357113,0.772100,5.997046,-9.771766,9.007931,-4.134981,-7.767613,-5.912290,6.177531,1.736269,2.812411,-7.695798,7.436405,7.667080,-4.473912,-1.660645,-6.597955,-1.807086,-5.471076,-2.681983,2.258420,4.360351,-0.807446,-5.530171,-8.345766,-2.172328,-5.324246,-6.864203,5.553628,7.823685,-7.045662,-8.131528,-9.595559,9.335214,8.844941,-8.733042,-0.265076,3.834016,2.430303,-5.869827,1.366478,3.878530,9.921492,9.870706,6.803927],[-6.872309,-6.282767,0.209805,-8.334271,-0.567352,-4.782631,-5.686360,-9.425539,3.965056,8.679616,9.905253,-5.714263,-9.161447,-4.434860,-4.570205,3.103977,0.019529,3.455033,-1.995028,2.531781,-0.547803,1.687578,4.799066,-1.007078,4.031207,-0.469213,-2.300648,6.919479,4.304435,4.625500,-9.653043,-2.871309,-5.440163,-9.711213,3.466102,4.829827,5.872678,0.293559,-3.553358,1.978716,2.491457,-4.832445,-7.980747,3.412846,5.552877,7.856197,1.331702,-3.194899,-5.934029,-2.984518,-5.735770,1.388574,-9.174809,-2.939552,-7.529411,-5.265887,-9.003554,4.739305,-7.410094,-7.461851,1.032003,9.961767,9.267528,2.547545,-9.604976,-8.079148,5.451749,-9.630824,-8.001619,4.905303,-0.852530,-9.040934,-5.815365,4.319276,-7.885699,9.422308,-9.655750,-2.469601,-0.035946,5.271933,7.422561,0.026025,8.957803,-8.988567,8.152195,-7.958060,0.189476,-1.016752,-2.222742,6.344292,7.556152,4.127999,9.666501,2.282538,4.279239,4.543653,-3.512489,8.046554,-0.395475,3.453905,0.618020,-0.496406,4.709717,1.489313],[-0.949311,-2.833956,6.314613,4.681132,-9.911416,-1.518706,0.573973,-7.731327,-5.460122,0.830500,-9.395172,-2.651260,-3.271819,-6.901965,5.219353,-2.345452,-3.802947,9.017325,-4.970638,9.662332,-6.437612,-9.123778,5.822692,0.725011,-3.000160,-1.518067,-0.629709,5.704045,4.459823,-5.389566,4.203972,2.506540,6.596914,4.601099,2.184898,-6.694232,-3.785168,-6.771323,-0.495214,9.959069,-3.013073,3.471703,0.760276,-2.693117,-0.310449,9.324823,2.558218,-2.087980,-3.165199,-7.316420,-3.306382,2.547775,6.423949,-9.507505,9.140001,-7.458548,1.291769,-7.637189,-3.867922,-2.806201,4.947453,-6.939272,-6.900695,-5.417560,-8.478016,-2.325532,9.099690,3.710470,5.629828,-8.743010,-9.205528,0.630559,-8.846854,-4.037215,-1.760834,-6.341649,-7.510046,-1.186919,8.213770,3.518358,9.462967,-1.135354,5.430335,7.788683,4.172689,-3.071608,-0.167115,2.201370,1.513697,-2.546338,-4.470489,-2.894582,9.355336,9.126744,1.619846,2.114568,9.735527,9.838123,1.819308,9.861042,8.464421,-8.416761,3.823829,-9.233212],[4.763700,-9.545928,8.386576,7.961717,2.286301,3.292819,7.153596,2.249945,-5.797314,-1.606841,7.722246,-7.030856,0.075333,1.477974,8.942575,7.240136,-5.190115,-7.056053,-6.476200,-4.507282,4.272464,-3.314254,-7.557297,4.924198,5.077438,4.516227,9.729560,5.514079,-2.047796,-8.318064,-9.198246,9.900274,6.675312,9.605427,7.332063,-9.369605,2.990713,8.860959,-1.606209,9.419628,-2.416030,7.387557,-0.293109,-5.409149,6.699879,-5.652890,5.148550,-4.933033,-5.456663,-8.058673,1.305128,-4.811116,-0.963550,7.019309,-4.780931,-0.916547,5.022936,-3.129370,-4.358239,-2.630209,7.839883,8.016194,-6.493835,-1.440564,1.080589,-9.912822,7.462986,-8.582214,1.842062,-0.247581,-9.079479,-7.827103,-5.326901,1.244229,-1.982526,-7.170866,8.259503,-2.195910,9.124366,-6.336488,4.217588,-4.593792,9.491273,-9.686597,-1.421332,-0.704322,2.326691,-6.559729,2.723414,-8.342263,1.248460,-1.078108,8.255038,9.757905,3.535434,8.499793,-3.556874,5.877369,-7.556999,-1.538186,-0.563906,8.636790,-7.884537,-8.671080],[-1.298117,9.656266,5.104116,-4.656563,-4.400073,-7.675177,6.615286,-7.987738,3.049391,4.465139,-9.607018,-8.402793,-6.239962,-2.273557,9.028916,-9.836440,-8.591162,2.582843,1.388798,-7.015381,3.310380,2.902419,-3.622749,2.986750,8.155326,-7.010252,-0.769987,7.601123,-8.553427,5.203169,-8.575983,8.539776,7.584024,-0.624256,-4.853597,-3.382396,7.347533,-6.907643,-1.010079,0.407459,-3.166417,9.173748,-9.270512,6.755574,-2.855833,-0.962595,5.230248,7.035335,4.994518,6.033474,-9.027364,5.668017,-8.557106,-1.565196,3.665260,-2.676057,4.316829,4.513009,-9.574455,-6.047915,6.662603,0.636894,2.644081,-7.507665,3.485817,-9.414547,3.163154,9.272586,-4.990720,-2.217092,-2.439959,5.710113,-5.160227,2.567787,-6.289183,-2.159682,0.322439,-3.712473,-3.838030,4.051114,-7.183440,-5.355614,1.640462,8.117409,4.354784,-5.004598,2.131770,9.029473,-9.475625,-8.838117,-9.280057,-9.443146,9.274134,-7.234720,0.863001,8.858429,-0.013888,-5.443931,1.632259,5.171718,9.677960,-4.228425,0.231075,9.544847]], dtype = "float64")#candidate|5385|(7, 104)|const|float64
call_5384 = relay.TupleGetItem(func_3725_call(relay.reshape(const_5385.astype('float64'), [7, 13, 8])), 1)
call_5386 = relay.TupleGetItem(func_3727_call(relay.reshape(const_5385.astype('float64'), [7, 13, 8])), 1)
output = relay.Tuple([call_5375,call_5384,const_5385,])
output2 = relay.Tuple([call_5376,call_5386,const_5385,])
func_5401 = relay.Function([], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
mutated_mod['func_5401'] = func_5401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5401_call = mutated_mod.get_global_var('func_5401')
call_5402 = func_5401_call()
output = call_5402
func_5403 = relay.Function([], output)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5409 = relay.var("var_5409", dtype = "uint32", shape = (13, 8, 1))#candidate|5409|(13, 8, 1)|var|uint32
const_5410 = relay.const([[[-3,5,-2,-1,-1,-4,-10,6,10,-4],[6,3,4,-10,9,4,8,9,-6,-7],[-5,10,3,3,-3,-6,-6,-4,4,1],[7,5,-5,-7,7,7,-4,9,7,1],[-8,-9,-7,-9,9,4,5,3,-8,-2],[4,-8,10,-8,-9,7,9,6,-2,-8],[-2,7,4,9,2,-6,1,-7,-1,-8],[-3,10,2,7,-8,5,9,-9,-3,4]],[[10,-2,-6,-3,-3,7,-7,-9,2,5],[2,4,-3,2,-3,-3,-8,5,-3,1],[1,-1,7,-9,5,1,-5,7,-9,-4],[-7,3,-2,-9,1,1,8,-2,4,-5],[7,-6,-2,8,4,-2,-1,-8,5,7],[7,-8,2,9,-1,-4,-2,-1,-5,-4],[3,2,2,6,-7,-5,-3,-9,-3,8],[5,-4,-2,1,-6,-8,10,-4,10,-2]],[[-4,-1,-10,-9,-1,8,-1,-4,1,-2],[-2,-7,-10,7,-2,-9,5,-3,-10,-7],[1,10,-2,-7,-2,10,-1,6,-10,3],[1,-10,2,1,-6,-7,-6,1,3,-10],[8,7,-9,-3,6,-4,-10,3,-8,5],[3,-10,-9,8,10,-5,10,-10,-6,9],[-10,1,7,-1,-10,-8,-6,-5,-1,5],[1,-8,3,-1,10,3,4,2,-1,8]],[[-7,6,5,8,-4,-5,-6,-7,2,10],[-9,4,10,-7,-8,2,-1,9,-2,2],[-4,3,4,1,-8,-10,5,-4,-1,-5],[6,-4,-8,5,-4,5,7,-7,8,9],[-10,-6,-4,-7,-1,-3,10,6,-2,7],[9,3,-2,7,2,-9,-4,5,-5,-2],[-5,-3,-4,-4,-1,2,6,6,-10,9],[10,2,5,1,-10,-6,9,3,-10,10]],[[9,-1,-7,-3,1,-9,-4,-2,-6,8],[-7,-2,-4,10,3,5,-1,-7,5,-7],[3,-5,7,-5,2,1,-6,8,10,-5],[-7,3,9,10,9,10,3,1,5,-3],[7,-8,6,4,3,7,2,-2,1,4],[-7,-3,10,-10,-10,-1,6,-2,5,-8],[-3,-10,4,-5,2,-4,6,1,3,-2],[-6,-2,4,3,-7,-8,6,7,-2,7]],[[-6,4,10,9,-9,-8,5,7,3,-7],[-3,-5,4,10,-8,9,8,7,1,3],[8,6,3,-1,3,1,6,4,-1,6],[-9,-3,-2,-7,6,-4,-1,-8,-4,-5],[8,5,-1,3,-3,-1,-8,9,7,-5],[-6,-9,-1,-5,7,-4,-3,8,5,-8],[-4,1,5,2,-8,5,7,-4,3,3],[-9,-5,-3,-8,6,-9,5,2,3,-2]],[[-2,8,-2,-6,-2,-3,6,-3,10,-1],[7,7,-1,-4,5,-9,2,6,10,9],[3,-2,9,-9,-7,5,10,10,5,10],[-9,-6,-4,4,-4,-5,4,-7,-3,2],[-7,-5,-1,10,10,-5,-9,-9,5,7],[6,-8,9,3,-10,-3,-2,-5,5,10],[-7,2,7,-9,5,-2,9,-1,-5,-2],[7,-3,-6,-3,-6,-6,-9,-7,2,-9]],[[-3,7,-10,2,-3,2,10,1,6,6],[-9,2,-3,-2,-6,-1,1,3,-8,-9],[-1,-5,8,8,-1,3,9,8,6,-6],[-1,3,8,-5,5,1,7,-9,-1,-9],[1,2,9,3,-10,-2,-7,6,3,4],[-7,3,9,9,9,2,-9,-2,-6,8],[4,-8,-6,-6,6,-8,5,7,3,5],[1,2,4,2,6,6,9,1,-10,4]],[[-9,9,4,-9,9,7,-1,-3,10,7],[-3,-8,-8,-8,7,4,-6,3,8,-5],[6,-8,2,4,-7,9,-3,-4,7,-9],[8,4,4,-2,-9,-1,10,2,1,5],[6,-9,3,1,-7,-6,-2,7,-6,-10],[7,-10,1,2,-9,-3,10,-5,5,-5],[-6,7,9,-6,4,-10,9,1,-3,5],[9,8,-8,-4,-10,-7,-8,-6,2,-2]],[[10,-9,-3,9,3,-7,-2,4,7,-4],[7,-5,10,3,-3,-8,8,-2,-10,-6],[-6,7,-7,9,9,5,7,-2,-9,-8],[-10,5,-6,9,-9,10,8,-3,-10,-1],[8,-6,5,-3,-1,-9,7,-8,-3,8],[-2,7,-8,6,-3,-7,-4,5,9,4],[-8,2,8,-10,-7,-3,9,-10,10,-2],[-3,-3,2,-6,5,2,4,-1,-5,3]],[[9,2,6,2,-8,-9,5,-9,10,-7],[-5,8,-4,2,-10,-1,1,-7,-5,-4],[-5,-7,-5,-7,-2,-9,5,8,6,7],[5,5,1,-6,2,1,-5,10,-5,-4],[-3,-5,10,-6,-5,2,-10,7,-2,-8],[-5,4,7,9,-2,8,7,4,9,4],[2,4,-7,-3,-8,-3,-2,-2,-10,-1],[-7,10,4,-1,-3,-9,-3,6,5,-8]],[[10,5,-8,-1,9,3,-2,-10,-6,-1],[6,-3,-2,10,8,-10,9,2,-4,10],[-6,-9,-5,-7,10,9,10,8,10,-1],[5,-9,-9,-6,4,4,8,-10,-4,5],[7,-3,-7,-10,8,7,5,2,7,-4],[-3,-2,-4,3,1,4,-5,8,-8,2],[10,-1,-3,8,10,-10,-10,1,7,4],[5,10,4,3,6,10,-5,2,4,10]],[[2,5,4,-8,4,-1,-9,-1,8,-7],[-1,10,-9,-4,2,5,3,6,9,-8],[-5,2,-1,8,-8,4,3,-3,-6,-3],[8,4,9,-9,-3,1,-10,-3,5,10],[6,3,8,2,-3,-4,-5,4,-8,4],[4,1,-8,4,-6,9,8,1,-9,2],[10,-5,-6,-2,-6,8,-2,3,-5,-5],[3,3,7,-9,-1,-8,-9,-7,-4,1]]], dtype = "uint32")#candidate|5410|(13, 8, 10)|const|uint32
bop_5411 = relay.bitwise_and(var_5409.astype('uint32'), const_5410.astype('uint32')) # shape=(13, 8, 10)
uop_5418 = relay.log(bop_5411.astype('float32')) # shape=(13, 8, 10)
uop_5430 = relay.atan(bop_5411.astype('float32')) # shape=(13, 8, 10)
output = relay.Tuple([uop_5418,uop_5430,])
output2 = relay.Tuple([uop_5418,uop_5430,])
func_5454 = relay.Function([var_5409,], output)
mod['func_5454'] = func_5454
mod = relay.transform.InferType()(mod)
mutated_mod['func_5454'] = func_5454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5455 = relay.var("var_5455", dtype = "uint32", shape = (13, 8, 1))#candidate|5455|(13, 8, 1)|var|uint32
func_5454_call = mutated_mod.get_global_var('func_5454')
call_5456 = func_5454_call(var_5455)
output = call_5456
func_5457 = relay.Function([var_5455], output)
mutated_mod['func_5457'] = func_5457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_5503 = func_3093_call()
call_5504 = func_3093_call()
uop_5511 = relay.atan(call_5503.astype('float64')) # shape=(2, 2, 5)
uop_5513 = relay.atan(call_5504.astype('float64')) # shape=(2, 2, 5)
func_4177_call = mod.get_global_var('func_4177')
func_4181_call = mutated_mod.get_global_var('func_4181')
var_5515 = relay.var("var_5515", dtype = "int8", shape = (910,))#candidate|5515|(910,)|var|int8
const_5516 = relay.const([2,-4,2,-9,-2,9,8,3,-2,5,-10,10,3,4,-8,5,4,-10,7,-5,4,10,-2,7,-3,5,-1,-3,-6,4,-2,6,8,-2,-7,-5,3,-5,10,8,-2,7,2,8,7,-4,4,-4,-5,-9,-5,3,10,2,8,3,7,-5,-10,-6,8,-7,-9,-5,9,-7,6,2,-6,8,-6,-5,-1,-1,5,7,9,-6,-4,3,2,-8,9,-8,4,-8,9,3,-6,-10,-2,-4,10,9,10,-7,-3,-3,-3,-9,7,9,-3,-5,-7,-9,1,-1,-3,4,4,6,-4,-4,-9,8,-10,-3,9,1,-4,-6,6,-7,8,4,3,-1,-10,8,8,7,-2,1,2,-7,4,3,-1,-1,-4,-10,5,-5,-8,6,8,-2,-6,2,-6,-6,4,-2,-2,3,8,-10,-7,-9,8,9,-9,-6,7,-2,-1,-5,10,10,-10,5,-10,-2,1,-2,-5,5,-5,8,1,6,8,6,1,-9,3,-1,-8,10,2,-8,-6,-10,6,-4,8,8,3,6,-4,-7,7,-7,-8,-6,-10,9,7,-8,7,-1,-10,-1,-5,-9,1,5,1,-7,-1,-1,-7,-9,-10,-9,-9,-2,-1,3,1,6,-5,2,-3,7,1,-8,-8,5,6,-7,-4,3,3,1,8,-5,-8,-1,5,-8,-7,5,5,-5,3,5,2,-3,6,8,3,8,-2,2,-8,6,-7,3,10,-5,2,2,-10,9,-3,1,-2,-7,2,4,2,-5,2,10,-8,6,-5,-3,7,2,-1,-6,-5,-9,-6,7,4,6,-10,7,3,9,4,-4,6,-3,-10,1,-3,2,-7,7,1,-9,-2,-10,-2,3,-10,8,-3,-2,9,-10,-8,-2,-9,6,2,10,2,9,8,-9,-8,-4,-8,-6,4,1,-8,4,-4,7,6,2,-9,3,2,8,10,3,-2,7,4,-5,3,-2,-2,4,8,7,6,9,-1,-10,-10,-1,9,-8,7,7,-3,-8,-8,4,-10,-5,10,-6,10,-3,6,-5,-3,-10,-4,-10,-6,3,-3,-1,-9,-1,2,-1,-3,7,10,4,2,-4,3,-7,-4,-6,-9,-10,-5,9,-8,4,-7,-1,-10,10,3,10,10,6,10,-1,-10,9,-3,5,-1,3,9,-4,-10,-4,-10,8,4,2,-7,2,5,3,8,-9,10,-6,7,9,-6,-10,-9,-6,4,4,-2,-9,6,7,3,-2,10,-1,9,6,-2,4,5,-2,-10,10,-3,-1,10,-4,3,-3,5,4,5,1,-6,-9,-7,-2,9,10,-1,-2,8,6,-1,6,5,10,-10,7,10,-1,-9,5,-6,-2,8,2,10,-7,8,-7,-5,-3,9,-3,8,-7,8,6,9,-3,-4,2,2,4,-5,3,7,-5,7,-9,-3,-1,10,-4,-9,-7,1,-8,-9,3,5,-3,3,3,9,5,8,-2,-5,-1,-5,-9,8,-9,2,-2,-9,1,5,2,-4,6], dtype = "int8")#candidate|5516|(560,)|const|int8
var_5517 = relay.var("var_5517", dtype = "float64", shape = (96,))#candidate|5517|(96,)|var|float64
call_5514 = relay.TupleGetItem(func_4177_call(relay.reshape(var_5515.astype('int8'), [455, 2]), relay.reshape(const_5516.astype('int8'), [4, 140]), relay.reshape(var_5517.astype('float64'), [96,]), ), 8)
call_5518 = relay.TupleGetItem(func_4181_call(relay.reshape(var_5515.astype('int8'), [455, 2]), relay.reshape(const_5516.astype('int8'), [4, 140]), relay.reshape(var_5517.astype('float64'), [96,]), ), 8)
output = relay.Tuple([uop_5511,call_5514,var_5515,const_5516,var_5517,])
output2 = relay.Tuple([uop_5513,call_5518,var_5515,const_5516,var_5517,])
func_5531 = relay.Function([var_5515,var_5517,], output)
mod['func_5531'] = func_5531
mod = relay.transform.InferType()(mod)
var_5532 = relay.var("var_5532", dtype = "int8", shape = (910,))#candidate|5532|(910,)|var|int8
var_5533 = relay.var("var_5533", dtype = "float64", shape = (96,))#candidate|5533|(96,)|var|float64
output = func_5531(var_5532,var_5533,)
func_5534 = relay.Function([var_5532,var_5533,], output)
mutated_mod['func_5534'] = func_5534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_5593 = func_3204_call()
call_5594 = func_3204_call()
func_4769_call = mod.get_global_var('func_4769')
func_4770_call = mutated_mod.get_global_var('func_4770')
call_5595 = relay.TupleGetItem(func_4769_call(), 0)
call_5596 = relay.TupleGetItem(func_4770_call(), 0)
func_2513_call = mod.get_global_var('func_2513')
func_2515_call = mutated_mod.get_global_var('func_2515')
call_5611 = relay.TupleGetItem(func_2513_call(), 0)
call_5612 = relay.TupleGetItem(func_2515_call(), 0)
func_4862_call = mod.get_global_var('func_4862')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_5618 = relay.TupleGetItem(func_4862_call(), 0)
call_5619 = relay.TupleGetItem(func_4863_call(), 0)
output = relay.Tuple([call_5593,call_5595,call_5611,call_5618,])
output2 = relay.Tuple([call_5594,call_5596,call_5612,call_5619,])
func_5627 = relay.Function([], output)
mod['func_5627'] = func_5627
mod = relay.transform.InferType()(mod)
mutated_mod['func_5627'] = func_5627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mutated_mod.get_global_var('func_5627')
call_5628 = func_5627_call()
output = call_5628
func_5629 = relay.Function([], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_5652 = func_3093_call()
call_5653 = func_3093_call()
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_5673 = relay.TupleGetItem(func_1229_call(relay.reshape(call_5652.astype('int8'), [20,])), 0)
call_5674 = relay.TupleGetItem(func_1232_call(relay.reshape(call_5652.astype('int8'), [20,])), 0)
func_1822_call = mod.get_global_var('func_1822')
func_1824_call = mutated_mod.get_global_var('func_1824')
call_5675 = func_1822_call()
call_5676 = func_1822_call()
output = relay.Tuple([call_5652,call_5673,call_5675,])
output2 = relay.Tuple([call_5653,call_5674,call_5676,])
func_5680 = relay.Function([], output)
mod['func_5680'] = func_5680
mod = relay.transform.InferType()(mod)
mutated_mod['func_5680'] = func_5680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5680_call = mutated_mod.get_global_var('func_5680')
call_5681 = func_5680_call()
output = call_5681
func_5682 = relay.Function([], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_5727 = func_2148_call()
call_5728 = func_2148_call()
output = relay.Tuple([call_5727,])
output2 = relay.Tuple([call_5728,])
func_5744 = relay.Function([], output)
mod['func_5744'] = func_5744
mod = relay.transform.InferType()(mod)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5744_call = mutated_mod.get_global_var('func_5744')
call_5745 = func_5744_call()
output = call_5745
func_5746 = relay.Function([], output)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2299_call = mod.get_global_var('func_2299')
func_2300_call = mutated_mod.get_global_var('func_2300')
call_5752 = relay.TupleGetItem(func_2299_call(), 1)
call_5753 = relay.TupleGetItem(func_2300_call(), 1)
func_1165_call = mod.get_global_var('func_1165')
func_1167_call = mutated_mod.get_global_var('func_1167')
const_5756 = relay.const([[-6,-9,7,-8],[-2,-10,-5,-2],[-10,3,4,-2],[5,-2,-7,3],[-5,-8,-10,5]], dtype = "int8")#candidate|5756|(5, 4)|const|int8
call_5755 = relay.TupleGetItem(func_1165_call(relay.reshape(const_5756.astype('int8'), [2, 2, 5])), 0)
call_5757 = relay.TupleGetItem(func_1167_call(relay.reshape(const_5756.astype('int8'), [2, 2, 5])), 0)
bop_5758 = relay.greater(call_5755.astype('bool'), relay.reshape(const_5756.astype('bool'), relay.shape_of(call_5755))) # shape=(2, 2, 5)
bop_5761 = relay.greater(call_5757.astype('bool'), relay.reshape(const_5756.astype('bool'), relay.shape_of(call_5757))) # shape=(2, 2, 5)
bop_5764 = relay.maximum(bop_5758.astype('uint64'), relay.reshape(const_5756.astype('uint64'), relay.shape_of(bop_5758))) # shape=(2, 2, 5)
bop_5767 = relay.maximum(bop_5761.astype('uint64'), relay.reshape(const_5756.astype('uint64'), relay.shape_of(bop_5761))) # shape=(2, 2, 5)
output = relay.Tuple([call_5752,bop_5764,])
output2 = relay.Tuple([call_5753,bop_5767,])
func_5793 = relay.Function([], output)
mod['func_5793'] = func_5793
mod = relay.transform.InferType()(mod)
output = func_5793()
func_5794 = relay.Function([], output)
mutated_mod['func_5794'] = func_5794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mod.get_global_var('func_1488')
func_1490_call = mutated_mod.get_global_var('func_1490')
call_5865 = relay.TupleGetItem(func_1488_call(), 1)
call_5866 = relay.TupleGetItem(func_1490_call(), 1)
func_3725_call = mod.get_global_var('func_3725')
func_3727_call = mutated_mod.get_global_var('func_3727')
var_5870 = relay.var("var_5870", dtype = "float64", shape = (728,))#candidate|5870|(728,)|var|float64
call_5869 = relay.TupleGetItem(func_3725_call(relay.reshape(var_5870.astype('float64'), [7, 13, 8])), 0)
call_5871 = relay.TupleGetItem(func_3727_call(relay.reshape(var_5870.astype('float64'), [7, 13, 8])), 0)
func_5297_call = mod.get_global_var('func_5297')
func_5298_call = mutated_mod.get_global_var('func_5298')
call_5875 = func_5297_call()
call_5876 = func_5297_call()
func_4955_call = mod.get_global_var('func_4955')
func_4957_call = mutated_mod.get_global_var('func_4957')
call_5877 = relay.TupleGetItem(func_4955_call(), 0)
call_5878 = relay.TupleGetItem(func_4957_call(), 0)
output = relay.Tuple([call_5865,call_5869,var_5870,call_5875,call_5877,])
output2 = relay.Tuple([call_5866,call_5871,var_5870,call_5876,call_5878,])
func_5883 = relay.Function([var_5870,], output)
mod['func_5883'] = func_5883
mod = relay.transform.InferType()(mod)
mutated_mod['func_5883'] = func_5883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5884 = relay.var("var_5884", dtype = "float64", shape = (728,))#candidate|5884|(728,)|var|float64
func_5883_call = mutated_mod.get_global_var('func_5883')
call_5885 = func_5883_call(var_5884)
output = call_5885
func_5886 = relay.Function([var_5884], output)
mutated_mod['func_5886'] = func_5886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4867_call = mod.get_global_var('func_4867')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_5916 = func_4867_call()
call_5917 = func_4867_call()
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_5936 = relay.TupleGetItem(func_2738_call(), 4)
call_5937 = relay.TupleGetItem(func_2740_call(), 4)
output = relay.Tuple([call_5916,call_5936,])
output2 = relay.Tuple([call_5917,call_5937,])
func_5943 = relay.Function([], output)
mod['func_5943'] = func_5943
mod = relay.transform.InferType()(mod)
output = func_5943()
func_5944 = relay.Function([], output)
mutated_mod['func_5944'] = func_5944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5948 = relay.var("var_5948", dtype = "int32", shape = (15, 5, 3))#candidate|5948|(15, 5, 3)|var|int32
const_5949 = relay.const([[[7,8,2],[9,7,6],[-6,-2,6],[8,-6,3],[-9,3,-6]],[[-5,2,7],[5,4,1],[2,2,10],[4,1,4],[7,2,-9]],[[-8,-3,10],[-6,5,-7],[-1,-6,2],[2,6,9],[9,3,-5]],[[2,-9,-4],[5,5,4],[-8,2,-10],[2,2,7],[-7,-7,-10]],[[5,6,10],[-4,-3,-5],[-3,-2,9],[-9,7,-10],[-5,3,-9]],[[6,8,9],[-3,-3,4],[-1,-2,-1],[-8,3,-6],[-10,-2,-4]],[[-7,-7,2],[2,-1,-2],[-2,-3,10],[5,-6,3],[-3,-2,-7]],[[10,-7,-10],[-4,-6,9],[9,3,-6],[-6,10,3],[-6,8,3]],[[-4,-1,9],[4,6,-6],[10,-6,9],[-7,-5,9],[-2,-6,2]],[[-8,-2,9],[-10,5,-3],[-1,-8,7],[9,2,-4],[-3,3,9]],[[-9,-4,-5],[2,-6,-1],[8,3,9],[1,5,-5],[4,7,5]],[[5,-2,5],[-9,-3,2],[5,8,-3],[-9,8,-10],[5,8,1]],[[8,9,4],[7,1,-10],[6,2,-3],[-2,1,-8],[-2,7,5]],[[-5,-6,2],[8,-5,9],[-1,-1,10],[10,-8,-3],[-2,-1,5]],[[8,6,-6],[-2,-8,-5],[-2,-4,1],[-9,-6,-2],[5,-4,-4]]], dtype = "int32")#candidate|5949|(15, 5, 3)|const|int32
bop_5950 = relay.greater(var_5948.astype('bool'), relay.reshape(const_5949.astype('bool'), relay.shape_of(var_5948))) # shape=(15, 5, 3)
output = relay.Tuple([bop_5950,])
output2 = relay.Tuple([bop_5950,])
func_5962 = relay.Function([var_5948,], output)
mod['func_5962'] = func_5962
mod = relay.transform.InferType()(mod)
var_5963 = relay.var("var_5963", dtype = "int32", shape = (15, 5, 3))#candidate|5963|(15, 5, 3)|var|int32
output = func_5962(var_5963)
func_5964 = relay.Function([var_5963], output)
mutated_mod['func_5964'] = func_5964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5983 = relay.var("var_5983", dtype = "float32", shape = (13, 6, 4))#candidate|5983|(13, 6, 4)|var|float32
uop_5984 = relay.acosh(var_5983.astype('float32')) # shape=(13, 6, 4)
output = relay.Tuple([uop_5984,])
output2 = relay.Tuple([uop_5984,])
func_5986 = relay.Function([var_5983,], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
mutated_mod['func_5986'] = func_5986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5987 = relay.var("var_5987", dtype = "float32", shape = (13, 6, 4))#candidate|5987|(13, 6, 4)|var|float32
func_5986_call = mutated_mod.get_global_var('func_5986')
call_5988 = func_5986_call(var_5987)
output = call_5988
func_5989 = relay.Function([var_5987], output)
mutated_mod['func_5989'] = func_5989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3177_call = mod.get_global_var('func_3177')
func_3179_call = mutated_mod.get_global_var('func_3179')
call_5991 = func_3177_call()
call_5992 = func_3177_call()
func_2424_call = mod.get_global_var('func_2424')
func_2426_call = mutated_mod.get_global_var('func_2426')
call_5999 = func_2424_call()
call_6000 = func_2424_call()
func_4852_call = mod.get_global_var('func_4852')
func_4854_call = mutated_mod.get_global_var('func_4854')
const_6014 = relay.const([[-4.750444,-9.242158,-1.880608,3.231169,6.998397,4.541764,1.956976,-3.254031,0.879606,3.720475,0.504774,-8.008110,-3.329821,6.814070,-8.405993,-8.900229,-7.073087,7.889627,0.530879,-5.264976,-2.285345,-6.829649,-8.361953,4.368446,-8.799732,2.680948,1.122262,-1.901064,9.598040,-7.829355,5.408136,-0.011875,1.350126,-2.647458,2.988554,3.880311,6.078647,0.663354,-1.573634,4.135329,1.162974,-1.034385,-4.206258,-7.899147,-6.557988,9.693821,-0.891617,-0.392368,0.602130,-0.785983,3.304125,0.075030,-9.876444,-0.330687,7.662569,7.228888,-2.979602,0.675031,4.748654,-7.287367,-0.036278,5.271632,-3.654383,-9.725574,9.419538,-6.135018,-6.445706,6.509951,-6.062240,2.771316,4.804348,-1.600220,-2.196182,-3.321404,-8.357049,-0.792066,-6.340385,6.231013,8.951354,-0.708262,-6.119715,1.738817,-2.957705,2.080427,-4.309721,1.866827,-0.623973,-2.574245,9.024823,-4.145134,9.650993,1.634877,-2.384648,-2.451821,-6.561232,-6.664858,7.009522,-7.949597,-5.723808,-5.696806,-1.188222,-1.937444,-9.426822,-5.401051],[8.553537,1.629996,2.414386,-6.115442,5.682719,2.433317,-6.342321,-6.995685,1.531487,0.923649,5.693973,-6.491115,1.858500,-7.630615,1.264568,-7.583323,0.060726,-2.564221,-2.926822,-2.212915,7.557304,5.399586,-0.453887,-3.967198,-3.868331,1.690084,8.128065,-9.877316,6.862312,-9.687467,9.667909,7.674620,-1.501273,8.474933,2.161986,-9.040050,4.503162,-4.527798,-9.756214,7.292382,-2.615901,-2.237344,-3.502395,1.850068,3.612640,4.177812,-0.233763,4.856899,-2.115026,5.585959,-2.010499,-6.262911,7.094192,2.933377,3.017605,5.106705,-7.022806,-1.141028,-8.072299,-6.249707,0.966152,-4.104408,-3.310559,4.279660,-1.697372,-0.628721,-5.037612,-2.444385,2.340628,8.401925,-4.781159,8.366529,-5.329779,3.371810,8.093332,-4.464695,0.317285,-9.433275,-2.732985,-1.034343,-8.094899,-0.565300,-8.766019,-1.340334,-2.750040,-6.488051,-7.053733,6.814824,5.106412,9.136843,-0.398067,-5.232348,-8.880888,-0.074976,-5.939618,6.288551,7.808482,3.743363,-4.475656,-6.577855,-6.264560,3.944045,-3.167877,0.613764],[-5.608283,-4.388118,6.552937,-9.472518,6.040386,-9.554403,-7.629651,-5.870637,7.010283,2.208922,0.814872,4.663363,-0.539319,6.199344,5.653489,9.602067,8.768950,6.986906,-9.989156,4.531578,-5.084235,4.527144,0.335360,-7.190633,4.753976,4.991460,3.315179,-4.621405,3.384564,-8.989375,4.275711,-2.544108,1.846030,2.933335,-8.327117,4.835558,-1.555779,6.624854,-7.690158,0.074968,7.098411,5.964237,6.002195,-1.549854,5.486399,3.583526,-9.463193,0.591864,7.725651,2.340577,8.747724,-0.993996,2.886154,-3.823230,-5.985164,-0.389514,-5.202751,-7.711061,4.365799,-2.415992,-3.908956,3.291594,-7.834548,-5.587813,1.698139,2.719902,4.520127,5.018668,3.262878,-1.606733,4.988993,6.186497,-3.258340,1.218950,-6.491850,-6.843671,8.885773,-2.825627,8.002455,-7.058419,-2.013129,7.123269,2.410079,4.770169,-9.968635,-6.486744,-3.579286,4.000961,-5.477839,-4.090067,7.474520,6.287455,5.784518,-7.580236,-8.707601,7.433372,-0.001101,-1.254025,6.838397,-8.955061,-3.897134,7.734906,-4.560203,4.036928],[2.411212,8.841190,1.966841,-1.621929,-8.807125,0.258422,2.500879,-4.678094,7.578679,4.585691,-2.763462,1.607623,0.896619,7.531551,8.679197,-9.450636,-8.393978,3.206479,-8.644632,-4.670974,-0.416735,1.579542,4.797142,7.956472,8.281308,8.384778,-9.100373,-2.050163,-0.255393,6.445196,-4.122180,-3.527195,-2.605805,-7.046008,3.068397,9.343765,-3.926228,8.851461,-1.976987,0.731793,-5.316425,5.585306,1.774392,-2.769938,6.165839,9.762200,9.162213,7.935200,-4.401161,-5.886169,-6.202776,5.198880,-8.563556,-4.004371,-7.040981,-8.942739,6.461941,1.038656,1.488205,-5.423658,-9.015260,2.478031,1.817624,6.753036,-6.150436,-0.282177,2.744678,-7.019052,-4.923796,9.693907,-9.104735,7.844121,6.018454,-7.692831,-1.617733,-8.786294,-4.643868,-6.172458,-2.413154,6.188584,7.070838,6.313732,-7.105725,6.894517,6.733788,0.884574,-0.455031,1.165376,1.168632,8.866621,-7.676142,-7.585869,7.623993,-3.683054,-8.783562,-6.817366,2.871219,8.218267,4.919871,4.307714,7.604980,-3.021873,3.178460,1.513813],[8.239956,8.193235,-5.320437,1.060934,-4.748823,5.509434,0.278107,8.016881,-7.155124,-9.111036,8.967419,-3.852271,-4.451779,-1.831913,-8.194350,7.939621,-3.916392,3.312328,-7.791120,-7.327674,-6.993023,-4.740322,-6.019436,6.391133,-6.570574,-9.789242,2.109832,-2.215931,-8.042919,9.808059,-6.698843,-9.142840,6.172215,-9.779405,-0.418742,8.623227,-2.733058,3.103928,8.262170,1.107143,-2.291402,6.311733,-6.826893,-5.423433,-1.845579,3.858365,-2.309529,-0.296030,5.784731,0.430764,7.631216,1.118320,-0.193428,-9.616080,2.928859,2.026728,-2.130139,0.284163,-5.014578,8.057501,9.695332,-3.729391,-4.624139,-8.986061,5.857216,-2.705544,-1.973690,-3.457660,-1.072858,-4.705078,8.400219,2.818223,-3.752720,-5.076119,-3.068705,2.049399,4.680572,6.197843,-0.239210,2.394740,-3.646290,6.886517,9.778821,8.516833,-6.112216,0.743147,-2.150950,7.029483,2.304991,5.172833,2.269395,-0.170575,-6.147350,6.689888,3.637135,-2.285927,-8.765238,-2.356509,-6.778790,0.460970,6.661562,-1.601825,2.343740,-6.671883],[1.409582,6.678082,-4.720469,9.507541,1.148089,-3.025374,-3.520544,-2.969787,-4.246167,-4.409798,8.876061,1.101426,9.665018,-0.419441,-0.245418,8.413031,-1.625828,-2.164982,-2.171667,-3.817321,-9.017557,-1.692686,3.224080,6.481560,2.165523,-3.722180,3.991319,5.619221,6.908023,-9.480104,-6.137698,-6.752922,-2.844687,-4.510130,-5.461374,-2.361587,5.794383,8.151529,-4.803394,-7.570482,5.272061,-4.085174,-1.872722,4.162410,2.298477,9.128250,1.130933,-8.199254,3.045057,6.806076,5.651366,-8.018937,-5.637651,-2.189740,8.377579,1.157036,0.530589,3.553391,0.948344,-6.809352,-3.893001,4.675270,7.443473,5.504407,-3.264237,-0.275586,3.905294,-1.810236,2.927871,-6.161347,4.535347,7.439214,8.787506,-7.119808,2.868794,7.476829,0.805916,2.303042,-7.960072,0.434741,5.785023,7.856341,-9.427087,7.866555,-0.079812,-6.154718,8.974590,-8.430452,3.223729,4.341164,7.597979,-4.486105,5.711449,9.731663,2.587060,-6.810480,7.391634,1.624735,9.018847,7.423396,-2.042988,6.343926,1.636282,-5.548856],[1.564349,4.595836,-5.630101,2.513512,0.170415,8.480875,2.918859,-5.843435,1.897591,-5.460084,-5.522980,-5.005351,-4.961149,-6.203487,-5.732619,-4.848409,-8.662965,-7.358463,5.830400,7.418632,8.434463,0.700061,-2.895799,9.475537,3.754132,6.797866,7.675756,-5.680446,8.613232,4.231604,9.316089,0.927691,7.681551,-7.117732,0.438136,3.664038,9.999928,1.556481,-0.327823,3.603911,1.109845,6.645150,8.290708,-5.764579,-2.586607,-6.186514,9.817089,-6.134785,5.794855,5.968490,-8.374761,6.569599,-1.930991,0.954148,9.703414,-0.184026,1.439996,2.962436,-5.897905,-5.430094,8.323750,-7.019485,-6.515968,6.816319,-1.286199,5.537541,-6.411783,-0.513564,8.093809,1.328063,-1.686491,0.042633,-3.356662,-9.599335,-5.367887,8.422373,9.416855,-0.704510,-3.204794,-0.498681,9.655793,3.936597,-0.034593,-6.380527,-8.959912,4.019136,1.300999,-5.449695,7.508687,-2.829196,5.055301,-7.326323,-5.897874,5.469226,-3.702053,1.125561,9.475737,6.457306,-4.458734,7.983436,-5.635430,9.655880,-7.866269,9.602207]], dtype = "float64")#candidate|6014|(7, 104)|const|float64
call_6013 = relay.TupleGetItem(func_4852_call(relay.reshape(const_6014.astype('float64'), [728,])), 4)
call_6015 = relay.TupleGetItem(func_4854_call(relay.reshape(const_6014.astype('float64'), [728,])), 4)
func_2299_call = mod.get_global_var('func_2299')
func_2300_call = mutated_mod.get_global_var('func_2300')
call_6023 = relay.TupleGetItem(func_2299_call(), 1)
call_6024 = relay.TupleGetItem(func_2300_call(), 1)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_6031 = relay.TupleGetItem(func_854_call(), 0)
call_6032 = relay.TupleGetItem(func_855_call(), 0)
output = relay.Tuple([call_5991,call_5999,call_6013,const_6014,call_6023,call_6031,])
output2 = relay.Tuple([call_5992,call_6000,call_6015,const_6014,call_6024,call_6032,])
func_6036 = relay.Function([], output)
mod['func_6036'] = func_6036
mod = relay.transform.InferType()(mod)
output = func_6036()
func_6037 = relay.Function([], output)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2919_call = mod.get_global_var('func_2919')
func_2920_call = mutated_mod.get_global_var('func_2920')
call_6143 = relay.TupleGetItem(func_2919_call(), 0)
call_6144 = relay.TupleGetItem(func_2920_call(), 0)
output = call_6143
output2 = call_6144
func_6155 = relay.Function([], output)
mod['func_6155'] = func_6155
mod = relay.transform.InferType()(mod)
output = func_6155()
func_6156 = relay.Function([], output)
mutated_mod['func_6156'] = func_6156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6187 = relay.var("var_6187", dtype = "float32", shape = (15, 3, 3))#candidate|6187|(15, 3, 3)|var|float32
uop_6188 = relay.acos(var_6187.astype('float32')) # shape=(15, 3, 3)
output = relay.Tuple([uop_6188,])
output2 = relay.Tuple([uop_6188,])
func_6204 = relay.Function([var_6187,], output)
mod['func_6204'] = func_6204
mod = relay.transform.InferType()(mod)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6205 = relay.var("var_6205", dtype = "float32", shape = (15, 3, 3))#candidate|6205|(15, 3, 3)|var|float32
func_6204_call = mutated_mod.get_global_var('func_6204')
call_6206 = func_6204_call(var_6205)
output = call_6206
func_6207 = relay.Function([var_6205], output)
mutated_mod['func_6207'] = func_6207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_6212 = func_3204_call()
call_6213 = func_3204_call()
output = relay.Tuple([call_6212,])
output2 = relay.Tuple([call_6213,])
func_6225 = relay.Function([], output)
mod['func_6225'] = func_6225
mod = relay.transform.InferType()(mod)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6226 = func_6225_call()
output = call_6226
func_6227 = relay.Function([], output)
mutated_mod['func_6227'] = func_6227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5793_call = mod.get_global_var('func_5793')
func_5794_call = mutated_mod.get_global_var('func_5794')
call_6264 = relay.TupleGetItem(func_5793_call(), 1)
call_6265 = relay.TupleGetItem(func_5794_call(), 1)
func_5986_call = mod.get_global_var('func_5986')
func_5989_call = mutated_mod.get_global_var('func_5989')
const_6274 = relay.const([-5.387861,-4.936422,-1.868130,-7.443887,3.959343,-9.811858,7.580345,-9.445678,7.953466,-7.609011,-4.898494,-5.819709,6.209540,5.895206,-7.729333,1.548349,-4.726287,-6.324044,-2.389590,-1.813663,0.065125,1.030817,8.625616,-8.916271,-1.796251,2.555506,2.296223,9.452331,9.597894,9.407760,-8.081187,-9.198047,-3.658927,-4.551861,-2.006429,-9.354224,0.265790,-4.172653,-6.654799,-9.456916,-5.699613,1.816403,7.080237,-1.547976,8.578717,-5.843625,-6.531973,-6.272853,-0.306430,2.805708,8.039336,-8.431037,-3.102530,3.805589,-3.527334,6.207748,6.510223,-1.393409,7.376466,-9.128243,6.231459,5.179894,5.841497,-6.382600,-0.871706,-7.060354,-6.975768,-4.668233,-8.813812,1.801692,4.439409,3.691707,0.296290,0.826495,-6.364089,9.827374,5.533351,8.962912,-7.217738,-2.172022,-0.569032,-7.850402,8.743271,3.606127,7.502493,-7.219218,1.820962,9.535410,-3.532404,5.794024,-3.235993,-1.661170,6.846992,4.071489,9.483482,-1.123321,-0.371864,-7.606017,-2.307343,6.988401,-8.978606,-7.343539,8.361668,-5.684398,5.460950,-3.753731,-1.814710,2.244936,0.109399,4.668024,-9.270917,-8.150807,7.183721,-7.176094,-8.792875,8.037573,-5.966237,-6.916085,4.166011,4.972980,-7.532934,7.161778,-3.306927,1.562115,9.538847,-5.333152,-1.513357,-0.961867,-6.632104,8.087251,7.211092,4.755969,2.253967,6.837294,7.334633,6.548413,4.743477,-7.896739,0.230598,9.525703,4.477719,-5.573989,-0.015756,6.970714,7.190825,9.600938,3.138677,-4.936689,-0.134125,2.370717,-4.808814,8.887890,6.884316,9.122843,8.335969,9.694162,7.620111,0.370722,9.195492,-7.052159,2.394273,6.913123,-6.551684,5.812032,0.097353,-4.646540,4.341737,6.448868,-3.103842,0.626102,5.666347,-0.398873,-1.813062,-1.244143,-2.302713,3.447380,-5.455175,-6.909664,-5.393199,5.083616,-2.981037,-9.983803,-8.783076,3.668904,-0.054410,-6.263604,6.853360,-5.277401,-9.574247,6.169529,9.591581,3.229985,2.839983,1.369738,7.044207,-9.938559,-7.394418,-2.649691,-3.016718,3.029590,-2.039119,0.543458,-0.838066,-4.827811,-0.831441,3.493048,-1.161917,-8.823456,-8.626781,2.490078,-5.574934,-3.240369,-9.064635,7.888626,-5.495493,-1.121768,5.104537,-3.789293,0.196847,-7.368879,7.958366,-9.349693,-3.133543,0.744407,-3.439490,1.397939,-8.205986,6.335272,-6.775838,-8.468797,-4.662077,3.719921,-0.725571,3.009025,-1.566497,2.100764,-7.236559,2.058717,-5.701384,8.415505,-6.069600,-2.725142,-7.249892,2.731780,-0.878677,9.677395,-5.585737,-6.778494,7.360231,1.105887,-4.162892,1.033764,-9.041208,9.790555,4.510148,0.005923,7.091128,6.223737,4.739911,-2.217744,-9.681596,-5.717604,0.889378,9.113506,0.220562,-0.289529,2.807516,-6.008436,0.760653,7.940325,-7.171721,-7.887250,-9.137758,-6.257467,-9.350984,8.971633,-1.940729,-1.591835,4.634525,-2.221568,-5.797266,-5.385799,-7.192686,8.130234,-2.758597,9.126176,6.767291,4.681452,9.625096,3.628347,-9.051636,-1.737612,0.039252,-5.300796,-4.909590,4.028847,-1.131612,-5.623998,-4.679861,-9.237613,-9.600571,3.759718,3.936380,2.486042,-2.850709,-7.122181,-7.178429,-6.749518,6.012967,-3.411165,7.387875,-6.360960], dtype = "float32")#candidate|6274|(312,)|const|float32
call_6273 = relay.TupleGetItem(func_5986_call(relay.reshape(const_6274.astype('float32'), [13, 6, 4])), 0)
call_6275 = relay.TupleGetItem(func_5989_call(relay.reshape(const_6274.astype('float32'), [13, 6, 4])), 0)
output = relay.Tuple([call_6264,call_6273,const_6274,])
output2 = relay.Tuple([call_6265,call_6275,const_6274,])
func_6276 = relay.Function([], output)
mod['func_6276'] = func_6276
mod = relay.transform.InferType()(mod)
mutated_mod['func_6276'] = func_6276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6276_call = mutated_mod.get_global_var('func_6276')
call_6277 = func_6276_call()
output = call_6277
func_6278 = relay.Function([], output)
mutated_mod['func_6278'] = func_6278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5943_call = mod.get_global_var('func_5943')
func_5944_call = mutated_mod.get_global_var('func_5944')
call_6284 = relay.TupleGetItem(func_5943_call(), 1)
call_6285 = relay.TupleGetItem(func_5944_call(), 1)
output = call_6284
output2 = call_6285
func_6291 = relay.Function([], output)
mod['func_6291'] = func_6291
mod = relay.transform.InferType()(mod)
output = func_6291()
func_6292 = relay.Function([], output)
mutated_mod['func_6292'] = func_6292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5315_call = mod.get_global_var('func_5315')
func_5317_call = mutated_mod.get_global_var('func_5317')
call_6309 = func_5315_call()
call_6310 = func_5315_call()
output = call_6309
output2 = call_6310
func_6318 = relay.Function([], output)
mod['func_6318'] = func_6318
mod = relay.transform.InferType()(mod)
mutated_mod['func_6318'] = func_6318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6318_call = mutated_mod.get_global_var('func_6318')
call_6319 = func_6318_call()
output = call_6319
func_6320 = relay.Function([], output)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_6334 = relay.TupleGetItem(func_2621_call(), 1)
call_6335 = relay.TupleGetItem(func_2623_call(), 1)
func_2491_call = mod.get_global_var('func_2491')
func_2492_call = mutated_mod.get_global_var('func_2492')
call_6336 = relay.TupleGetItem(func_2491_call(), 0)
call_6337 = relay.TupleGetItem(func_2492_call(), 0)
output = relay.Tuple([call_6334,call_6336,])
output2 = relay.Tuple([call_6335,call_6337,])
func_6338 = relay.Function([], output)
mod['func_6338'] = func_6338
mod = relay.transform.InferType()(mod)
mutated_mod['func_6338'] = func_6338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6338_call = mutated_mod.get_global_var('func_6338')
call_6339 = func_6338_call()
output = call_6339
func_6340 = relay.Function([], output)
mutated_mod['func_6340'] = func_6340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_6350 = relay.TupleGetItem(func_1529_call(), 0)
call_6351 = relay.TupleGetItem(func_1530_call(), 0)
func_644_call = mod.get_global_var('func_644')
func_646_call = mutated_mod.get_global_var('func_646')
const_6383 = relay.const([3.587763,-7.746740,8.598706,-2.290520,6.938133,-5.854048,6.707735,-5.574625,3.237729,7.248886,-1.913744,3.026039,7.879850,-6.853932,-2.609165,1.569845,-5.734042,-8.690603,-3.616489,-8.977224,9.460266,-6.053001,-3.171251,-7.163499,0.366377,4.281263,7.015763,9.989899,2.060327,0.773835,4.348237,-1.602502,-5.209919,6.558685,3.933659,-9.691435,-1.429097,-5.848326,-9.415907,7.752524,-9.836636,1.485531,6.729108,4.664715,-3.282484,1.613256,9.805254,-2.624884,-8.083149,-1.082965,4.058545,9.647414,2.408501,-1.939516,-1.446093,7.538251,0.700781,-2.275710,4.348341,5.872688,-2.560287,9.398821,-2.831685,4.003865,4.580569,2.736642,9.463308,9.042864,-2.771681,-8.547845,4.272660,2.637101,-3.464535,3.308581,0.148189,5.769231,7.835985,4.302493,-9.645881,1.510923,-1.606069,-8.816786,9.964695,-0.467163,-3.896352,-0.874379,4.155340,-1.556091,-6.033313,9.524770,-9.176808,8.528797,-6.192072,-6.450763,-0.977063,-1.769453,-9.308807,-6.257221,-3.531180,2.619500,6.168008,-2.963122,2.764060,-3.000691,6.797080,-1.228911,-8.273261,8.316938,-2.916441,-4.546306,6.696578,-6.617133,2.568464,1.896713,2.482858,-3.280191,5.055720,4.641484,2.063735,-5.988229,-0.489859,5.311555,-5.685531,5.130796,-5.302418,1.183446,-4.841000,5.459432,-1.913252,-8.443183,6.757840,-0.183821,1.109643,5.240123,2.773803,6.153216,-6.968805,0.853967,-3.262742,-7.471780,-6.226292,-3.174344,3.745710,-6.582434,4.450375,2.915801,-9.879800,4.751697,-9.569161,-2.513773,-9.169868,9.382641,-6.389769,7.985218,5.790459,0.263051,-7.155706,-0.416642,0.114924,9.694806,3.614334,1.852358,6.096759,-2.029471,-1.719066,4.666754,-5.993301,1.511946,9.752481,8.215970,-5.817274,-7.732969,4.421398,-7.067542,-7.824400,7.836777,4.952262,5.272688,5.468287,-8.840802,-4.645271,-1.513941,-5.170977,-0.600517,-9.644417,-6.098035,-0.465433,3.665279,9.626468,5.664064,-3.848127,-7.256970,3.097631,-6.863247,8.424661,-4.276239,-9.596890,-0.006796,3.557906,0.336341], dtype = "float64")#candidate|6383|(200,)|const|float64
call_6382 = relay.TupleGetItem(func_644_call(relay.reshape(const_6383.astype('float64'), [10, 4, 5])), 0)
call_6384 = relay.TupleGetItem(func_646_call(relay.reshape(const_6383.astype('float64'), [10, 4, 5])), 0)
func_4719_call = mod.get_global_var('func_4719')
func_4721_call = mutated_mod.get_global_var('func_4721')
call_6388 = func_4719_call()
call_6389 = func_4719_call()
output = relay.Tuple([call_6350,call_6382,const_6383,call_6388,])
output2 = relay.Tuple([call_6351,call_6384,const_6383,call_6389,])
func_6392 = relay.Function([], output)
mod['func_6392'] = func_6392
mod = relay.transform.InferType()(mod)
mutated_mod['func_6392'] = func_6392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6392_call = mutated_mod.get_global_var('func_6392')
call_6393 = func_6392_call()
output = call_6393
func_6394 = relay.Function([], output)
mutated_mod['func_6394'] = func_6394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_6468 = relay.TupleGetItem(func_1117_call(), 2)
call_6469 = relay.TupleGetItem(func_1119_call(), 2)
output = call_6468
output2 = call_6469
func_6473 = relay.Function([], output)
mod['func_6473'] = func_6473
mod = relay.transform.InferType()(mod)
output = func_6473()
func_6474 = relay.Function([], output)
mutated_mod['func_6474'] = func_6474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2491_call = mod.get_global_var('func_2491')
func_2492_call = mutated_mod.get_global_var('func_2492')
call_6490 = relay.TupleGetItem(func_2491_call(), 0)
call_6491 = relay.TupleGetItem(func_2492_call(), 0)
output = call_6490
output2 = call_6491
func_6497 = relay.Function([], output)
mod['func_6497'] = func_6497
mod = relay.transform.InferType()(mod)
output = func_6497()
func_6498 = relay.Function([], output)
mutated_mod['func_6498'] = func_6498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_6499 = relay.TupleGetItem(func_3405_call(), 0)
call_6500 = relay.TupleGetItem(func_3406_call(), 0)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_6510 = func_2281_call()
call_6511 = func_2281_call()
var_6538 = relay.var("var_6538", dtype = "float64", shape = (1800,))#candidate|6538|(1800,)|var|float64
bop_6539 = relay.logical_xor(call_6499.astype('uint8'), relay.reshape(var_6538.astype('uint8'), relay.shape_of(call_6499))) # shape=(1800,)
bop_6542 = relay.logical_xor(call_6500.astype('uint8'), relay.reshape(var_6538.astype('uint8'), relay.shape_of(call_6500))) # shape=(1800,)
output = relay.Tuple([call_6510,bop_6539,])
output2 = relay.Tuple([call_6511,bop_6542,])
func_6546 = relay.Function([var_6538,], output)
mod['func_6546'] = func_6546
mod = relay.transform.InferType()(mod)
var_6547 = relay.var("var_6547", dtype = "float64", shape = (1800,))#candidate|6547|(1800,)|var|float64
output = func_6546(var_6547)
func_6548 = relay.Function([var_6547], output)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_6570 = func_2977_call()
call_6571 = func_2977_call()
func_6155_call = mod.get_global_var('func_6155')
func_6156_call = mutated_mod.get_global_var('func_6156')
call_6576 = func_6155_call()
call_6577 = func_6155_call()
func_2424_call = mod.get_global_var('func_2424')
func_2426_call = mutated_mod.get_global_var('func_2426')
call_6598 = func_2424_call()
call_6599 = func_2424_call()
func_2084_call = mod.get_global_var('func_2084')
func_2087_call = mutated_mod.get_global_var('func_2087')
var_6634 = relay.var("var_6634", dtype = "float64", shape = (1800,))#candidate|6634|(1800,)|var|float64
call_6633 = relay.TupleGetItem(func_2084_call(relay.reshape(var_6634.astype('float64'), [1800,])), 3)
call_6635 = relay.TupleGetItem(func_2087_call(relay.reshape(var_6634.astype('float64'), [1800,])), 3)
const_6639 = relay.const([-3.178051,8.400548,-6.062569,5.416947,6.258957,-4.553215,-5.212180,-1.091499,1.060978,-6.056884,-1.722512,8.343424,5.733417,-1.933429,-3.216062,-5.018846,-6.853120,-0.019914,-3.305721,2.104006,-9.078045,-2.891580,-9.956924,0.250467,-1.139324,-2.049956,-8.045168,-1.251295,-1.197875,-3.729443,-3.705632,0.247595,-8.940247,1.804529,2.314236,-7.571797,-1.814908,3.009074,-8.253371,-5.536788,-2.278109,3.776535,-7.246434,-5.212167,-7.867849,3.183092,8.034011,6.922062,0.682127,-1.245885,-6.934797,-9.306139,5.937189,7.466177,-6.014758,-0.122113,-8.557942,4.044836,1.141986,0.193116,1.593256,-1.022646,1.576818,-5.025124,-7.641986,-3.258518,-9.893244,0.904468,-7.251852,1.870615,7.384750,9.170022,7.062740,-9.522808,-3.108128,-8.793464,1.932376,-6.286502,-9.695689,5.994683,4.977261,8.415136,-2.830947,-5.003507,3.528868,-0.754809,2.556019,4.239965,-7.899543,-0.890682,1.262073,-5.642863,7.528065,-1.424958,-5.194327,4.176309,3.711321,0.701350,5.622410,-8.925052,7.725408,2.651706,-5.380607,7.446811,5.660795,5.537080,-5.424882,6.806366,-1.686275,0.956752,9.624517,-1.065703,-7.466385,-1.591948,8.999059,-6.497257,5.835320,-6.919859,-8.015330,1.665000,2.924215,9.243108,-3.288930,0.520493,-5.538204,6.626719,3.416332,-2.624838,9.971427,-3.902857,3.400344,0.292877,-9.971907,-4.817632,5.288838,-3.912060,-8.103404,-3.694358,-8.080439,3.047168,5.211937,-5.949478,-1.759408,-7.228649,-9.387566,6.843971,8.349136,-5.526105,-8.340689,6.145868,-2.125268,-4.544546,2.029987,-7.938045,-4.681932,-1.393637,-9.031845,4.258045,8.089872,5.038940,-2.894387,9.015371,4.810889,7.150126,-2.416823,-0.016581,4.729037,8.952087,1.447908,-1.462004,1.479027,0.569710,-1.551125,-4.346791,-7.047909,0.447119,-2.820997,7.965656,-2.252681,1.361799,4.730912,-8.208259,-1.430733,7.463768,5.356679,-8.131837,-8.067244,-3.830492,-3.293190,-1.525987,-0.457005,0.902977,-2.688688,2.400039,3.398012,5.256654,-8.849920,0.596946,3.555359,-3.487706,7.100332,8.821605,2.886339,-2.195449,-2.690017,-1.054885,-5.288417,-0.727708,-2.327603,4.847676,-5.014204,-7.070858,-6.400022,-0.951333,-8.355335,-0.051531,0.363290,8.886021,-2.682913,-4.888237,-0.448559,8.522090,-9.879575,5.310856,9.528557,-2.681089,3.910740,-8.700859,5.787947,1.150064,-0.082425,0.402011,8.014334,-8.908658,-2.822149,2.440676,6.879637,2.708098,-9.579885,5.630563,5.138755,1.909362,-3.159406,4.326299,-6.815287,-2.600219,-2.224802,-7.577591,-4.571165,2.975407,1.031398,-8.642555,-2.862133,-4.420507,-4.824550,-5.060133,-4.062326,1.217783,-4.123090,-7.704438,5.536847,9.444833,-7.912092,-3.493530,-1.455331,7.052312,-0.705777,-4.593711,7.069628,5.990057,-3.816438,2.405499,8.464922,-9.347044,6.316763,5.416960,8.308048,2.109154,-9.488895,-8.664357,7.985276,7.264302,1.103550,-2.135860,-0.611536,0.346231,-3.755536,1.995995,9.132452,3.832760,-3.651070,4.829818,7.598898,4.513878,-9.990385,-0.035743,8.907091,0.235702,7.058407,0.675367,5.043957,4.011311,-0.696118,-9.213149,-3.478347,-0.436562,-7.485626,-5.130792,-5.024682,2.625015,2.188207,3.926423,8.770585,-2.079746,-6.597126,2.239621,-1.059133,3.042234,5.547184,-2.934471,4.110936,7.214917,-4.985253,4.679115,7.182178,-7.822953,-3.200770,-9.015528,-2.853740,9.393606,-0.375580,5.801996,3.899966,4.238641,-5.754288,-5.733356,5.491720,3.335087,1.001043,-3.754604,7.644951,8.009355,-9.165373,-6.202322,-0.495021,-1.191879,-7.602669,3.891488,-7.272326,-9.184902,-8.861025,9.668377,-0.307569,-5.901459,5.441815,9.232173,3.093701,5.171632,-6.039979,-6.889004,4.572987,0.199963,-0.516598,2.373559,-4.110469,7.320557,-5.477266,-2.206837,4.027040,-6.033856,3.709257,-0.693894,-3.367083,4.221876,8.498365,-3.537164,-2.878606,-9.270774,-9.987919,9.902175,5.063893,-8.593148,3.501410,8.898227,6.602279,-8.717261,7.648177,9.423875,-7.302678,-3.518728,-1.379793,-0.150342,-3.599935,-9.640402,-1.285692,5.137309,-1.937208,4.368746,-2.756600,5.521985,-3.918380,2.320187,-8.638538,1.321007,2.610383,-9.456704,-1.912903,-0.786978,4.851473,-4.456222,-0.759067,5.766152,4.003955,3.185708,9.561505,4.959549,-9.236077,5.620652,5.027436,1.793254,-7.101039,-9.419322,-2.270900,-2.973735,3.397586,8.247279,-5.522741,1.989218,1.301069,-5.111644,4.872829,-5.753205,-9.459241,-3.544716,-6.424896,-6.880304,5.241547,-6.607578,8.810671,5.953999,1.242578,-3.090975,7.131437,8.621535,-1.996707,-9.722712,5.576394,4.144065,-7.654234,7.472850,3.285620,-1.974271,-3.059387,-7.675493,4.784021,3.659379,-4.622970,-1.236373,3.425198,-6.889744,2.640751,2.360807,0.810884,-8.645373,-5.889271,6.677814,3.287567,-7.067589,-2.836603,8.544302,-3.517038,-7.470925,2.716662,-3.713153,-4.075058,-4.619562,3.238072,-9.699703,0.114892,8.394459,-2.196253,1.278174,-5.321637,0.966833,5.398178,-0.765333,3.563849,-3.438600,9.677315,6.582455,-1.155529,-0.849587,2.339312,-4.099833,8.482397,-9.500643,-3.388524,-2.958310,5.289487,6.323103,-0.277255,-9.119648,-3.246498,-9.738642,-7.495592,7.145408,-0.184467,-0.660065,-7.630375,-7.404453,-6.341352,2.223003,-2.575769,7.916757,-7.019465,-5.863756,-2.808660,-2.112575,-0.418823,5.898664,2.910164,3.852740,-4.959919,9.133776,-1.098275,-7.885035,5.957195,-6.633046,9.678531,6.156527,-5.555234,6.373240,3.625641,-0.561531,-4.069693,-2.900762,-8.484970,8.525105,1.997862,-1.336458,-0.716605,5.175159,-9.776576,-7.098708,2.216126,6.281237,3.465540,6.933793,9.630636,-6.560316,6.508034,9.279366,-6.094635,-2.004057,7.718516,-7.509497,6.119112,5.706813,4.947140,-8.072279,-1.767821,-2.933347,-5.556819,-3.836273,8.721505,6.069404,4.732901,5.125607,-2.636967,6.282754,-9.536999,0.496883,4.466563,7.101695,-0.679418,-8.260095,-7.710639,8.410485,-7.931466,-1.748368,-7.446762,-2.761992,-2.361410,-4.497711,7.897431,-7.517043,5.884676,4.232677,4.296275,9.953631,-3.216474,-4.048233,-6.012517,9.329453,5.191865,0.495453,-4.720393,3.746076,3.322585,1.687907,8.560983,-0.293520,0.529785,-1.307901,-9.009891,0.150019,8.662169,4.289822,8.191835,-1.878543,-9.917239,-2.055366,7.970137,0.175964,7.592042,8.606079,7.182483,6.585086,7.009941,9.890411,3.707297,0.509421,-2.842034,7.512971,8.283724,-9.357034,5.587978,-0.817843,-0.239544,4.073164,-4.539401,-8.556043,-3.412920,6.206060,3.210692,5.634052,2.418230,9.825216,-1.905552,7.758094,-4.805494,5.148187,-5.466095,-8.883143,-9.144009,8.267505,-2.721064,-7.635979,5.613686,8.922934,-1.832316,-2.605427,6.303396,6.807331,-8.679512,6.467498,-1.800934,-1.171981,4.839483,4.349964,-6.631871,-6.552045,-8.551640,5.828497,-0.590502,7.556784,5.782353,-0.816833,2.315040,-9.623337,-8.821695,2.063882,6.118187,-3.042177,-2.273286,-2.559433,-9.275797,-9.029823,5.154067,-4.402660,-3.930348,-3.195869,0.205099,-8.141946,-2.958361,-5.324451,-6.348588,8.701050,1.721667,-1.520204,5.719313,-5.957907,-5.599923,-9.119111,-8.323257,5.604190,-1.483718,2.471339,0.293174,0.930392,-6.750547,-7.598449,4.106707,-2.549661,1.479045,-8.464020,2.716329,-4.715197,2.343161,0.564667,-4.377025,-2.394983,-2.195648,-6.751842,2.275611,3.751316,-1.166662,9.089859,9.399696,-5.143561,-5.576108,4.223828,-1.035989,2.925986,3.318391,1.795377,-1.618911,-7.999306,9.786420,-5.074294,-5.995535,2.901683,0.076792,-4.257465,-8.903913,-7.901371,-3.263154,3.311709,0.509940,-6.951016,2.929354,-1.390524,-0.028144,7.104646,-7.035553,-9.991962,6.248407,8.449680,-7.997184,-5.270790,-7.754674,-3.139660,-1.440070,5.978323,-9.259216,-7.008476,-7.226334,3.415768,-9.864794,-2.239139,-9.211248,2.252157,-4.188416,6.437024,2.967346,-3.783987,-1.720087,-8.570385,-9.505282,-0.879942,0.145759,-5.137253,-6.010677,-8.864817,-8.318519,6.947458,-3.482757,5.420227,2.200483,7.561046,-7.993555,-5.672597,-7.381622,7.809376,3.589729,-5.247879,8.794200,-6.574853,-5.295458,-9.868088,0.606366,-7.202924,-5.860323,5.434286,-7.985377,-8.329631,-7.007822,4.249145,5.504183,8.386144,-5.825269,-2.790197,-5.225312,3.828974,3.675878,-0.697916,9.624044,-3.597795,-5.950599,6.775661,0.838670,4.541474,9.330720,-1.871950,6.064532,3.186482,2.305839,2.602071,-5.836905,9.534655,-0.633150,-8.359659,-5.178442,-8.601714,-1.363762,8.845922,6.324681,9.473887,3.558346,-7.308864,9.498568,-6.918316,5.079731,8.569244,0.365672,8.775036,-2.384010,0.917727,1.006244,4.606094,-1.521914,1.019121,6.515012,-2.050686,-4.262498,6.674314,-8.764632,0.474480,-7.417874,2.614877,6.838438,0.033639,-8.748675,-3.553360,-9.255100,-3.473027,-3.589489,8.487350,-4.639904,-2.742475,-1.637581,8.632102,2.121995,-3.968707,6.075373,4.084769,-7.835374,-8.118662,-9.746624,-2.514441,-3.935123,3.206934,-0.916030,-5.721125,-3.188483,-2.528137,-1.307808,4.513099,-5.456299,9.419790,1.174332,-5.567897,-4.054436,-3.957555,1.095659,8.393052,4.473132,-0.606494,9.313375,8.754683,5.394677,-5.239407,8.892440,0.535102,8.493288,1.845982,-4.490562,7.703605,-5.667574,0.461032,-7.787831,8.655231,9.187051,-9.489628,-7.196272,-2.071207,1.102825,5.039679,-2.723582,-8.287346,-6.752737,-3.278105,8.599175,8.399963,8.879641,2.502590,0.147837,-7.383151,-3.985818,-6.931297,-4.083873,-0.985602,1.227972,-2.941523,-9.085488,-0.679340,-4.012857,6.547400,-1.110182,5.425647,4.093270,0.527172,5.995554,9.370961,-3.928245,-2.217493,-6.783428,-2.248570,-8.883661,1.673150,0.043184,7.981158,-3.889807,2.567022,4.322941,1.582040,1.539842,-3.000123,-1.096492,-2.362538,4.824309,3.209416,1.229971,4.860104,-6.340274,0.370137,-3.858223,4.572895,6.951070,7.080623,0.738320,-7.735295,-5.285020,0.174958,-5.754762,1.816470,-5.806567,-7.717458,2.459887,0.893304,-3.753958,0.296306,-3.540710,-3.388965,-0.208567,-6.868543,-8.090837,-1.204002,4.258933,5.350729,-4.843064,9.280789,3.984785,-4.696316,-9.621542,-1.232996,-1.389512,0.200870,-7.505836,1.800498,-0.101257,-8.084166,-8.133050,3.344091,-8.280914,3.392804,4.488736,6.377797,-7.889350,5.642590,2.199237,-7.326451,-2.624085,-1.365402,1.209043,1.826108,-6.023361,-5.917992,-9.179949,-1.036370,-7.735526,3.828433,5.801299,-5.976500,1.647040,-0.717574,5.276931,-1.858935,-5.060042,-7.773125,-2.101230,8.073533,9.849100,9.086077,8.980773,-1.710301,-5.692048,-2.449418,-1.743678,3.208232,-6.045381,-3.424592,-1.622766,5.614324,-9.494229,-9.835726,7.823931,1.152195,2.629512,7.511691,-6.499740,-2.882897,6.788788,-2.797610,5.580824,0.076632,1.793320,4.964250,0.966899,7.975648,-4.474491,-9.002558,7.506630,-4.534117,3.532813,-2.529150,4.990310,-2.460762,0.346978,-6.791249,-1.255546,-6.990481,-3.522187,-0.561412,7.084671,0.402952,6.649834,7.954115,0.444837,-3.822886,3.777174,-8.444947,3.865473,-7.773242,-7.813247,-9.552246,-4.234961,-7.701588,-3.284419,-5.264629,-5.196477,-3.253844,-0.496000,5.158063,0.293335,-0.091463,-5.503756,-5.294498,2.453327,-3.284553,1.854985,-1.532810,4.816174,-6.072924,5.301817,0.442694,-0.318999,-8.775348,-1.292318,-0.451498,3.048193,-5.941519,-8.945537,1.591924,8.480060,9.932232,-1.300199,5.540292,-8.172093,-1.718124,-7.008408,-5.481627,2.140373,4.123965,-5.047325,0.906667,-0.137103,1.556349,-5.273100,-0.371917,-9.791499,9.028842,-0.987903,-1.813552,-2.937760,-5.816877,7.549686,-3.756266,5.388232,-4.994898,3.475233,6.498876,2.964621,-0.318241,-4.211189,-5.524035,-6.161318,5.265674,-7.483124,-0.584446,-9.401566,9.151087,6.807300,-1.790831,-6.750339,-3.779967,5.242798,2.077774,-3.267660,-9.221007,2.676270,3.094970,-9.812321,-4.940967,-1.340509,-9.269781,7.198449,-7.860954,0.377800,-5.491645,7.302468,8.665444,-9.088053,-5.062506,9.712120,4.618006,3.982731,-0.330214,-3.084745,-4.026552,7.418194,0.724028,-8.820475,4.773572,8.247505,0.290864,-7.048110,2.054198,-0.665508,3.255506,-1.942727,-7.852728,6.789036,-4.067402,6.874974,3.084528,5.565055,2.888240,-2.893193,7.066735,-5.648946,8.585343,6.690706,-6.961656,-0.757978,0.607165,-1.594250,-0.277173,4.250520,5.042947,4.551712,8.691817,-1.947439,-3.413683,-9.136305,-3.927862,5.847816,9.039152,-2.416345,-6.807959,-7.772199,4.261867,6.928926,-4.710662,-5.688032,5.165835,-0.090653,-4.412258,1.604835,-7.504596,-5.159430,0.637418,-6.345807,7.871950,-7.174671,2.229341,0.558139,9.979809,-7.865081,9.483801,-2.866257,-9.959138,-1.192663,1.032608,7.988559,2.104032,-7.521691,2.078221,2.450323,5.142296,-4.727694,-3.848111,6.256541,-5.576483,-4.779967,7.192595,-8.672412,9.546110,-3.624865,3.097174,-6.785959,-1.690437,9.566108,1.095394,-2.125241,-5.485501,5.382254,-7.605553,-1.048443,-6.100920,9.484993,1.522223,1.402416,-0.549740,8.009215,-0.335539,-9.776934,-1.589503,-5.462585,-5.301644,-2.529049,-9.396207,-0.654150,4.416555,8.890418,3.789930,4.044172,2.149184,4.377056,-8.829445,4.215134,9.078119,8.303239,8.783161,5.730802,-6.013182,-1.367219,-5.914061,-2.912999,0.555433,7.720281,-4.762029,-5.258140,-1.174293,7.674484,-4.209798,5.319580,-1.078160,-3.698260,-2.483412,5.188594,6.223800,2.756039,-6.661774,1.549809,-9.125290,-4.843348,7.138409,-0.816846,1.661306,1.277495,-8.484181,9.569999,6.234160,-1.922580,2.733895,3.931519,2.261320,-9.089230,-4.711521,5.355683,4.451387,4.154787,-4.116070,-8.596662,9.735888,-7.459632,-6.637709,-6.889653,6.567511,8.081465,-8.459429,4.939643,-0.087009,-2.960937,-3.893314,9.528970,9.135575,-1.799478,-4.649683,1.215183,-4.242046,7.519134,2.048986,1.778338,-3.762178,-9.943535,9.398020,-6.744121,9.802306,-2.287732,-9.490796,9.407369,-8.963443,-2.854852,-6.357327,-9.660502,4.694361,1.357629,0.958955,9.165257,-5.856747,-3.001727,8.908260,4.439983,9.416766,-8.060338,6.023949,-1.317672,-0.193572,-0.743283,-3.689550,5.596221,-4.435287,2.348296,0.431288,5.259234,-7.401556,8.585059,-2.538542,-5.948299,-3.196969,5.716175,2.473474,0.170346,-0.800155,-1.679173,-1.971568,-9.707308,9.245246,-7.893102,-9.599520,-3.925264,-0.251937,6.140149,-3.418255,-6.379174,-6.211601,-2.040904,4.964914,8.447655,3.542248,6.103672,-9.009305,-2.880376,0.120114,-6.753942,-2.960149,-6.186176,3.959893,5.282285,6.210095,-3.336325,5.608015,6.062362,2.447816,4.356558,2.657997,-9.169486,-5.128080,4.484429,-0.316379,-5.849906,-0.084687,2.827705,-9.282934,3.192544,-4.728289,6.342046,-6.475672,6.613855,-7.719538,-8.395105,4.680935,7.501542,4.543931,2.222139,-9.693723,-3.853064,-3.817301,-4.025954,-8.633180,-6.417634,-3.231476,-4.044016,4.114762,-4.485780,-0.305738,9.016953,9.029876,-1.493259,7.965582,-2.139796,4.435347,-1.855873,-2.063120,-0.376243,-3.429075,-3.730957,-8.659736,4.580030,-2.687165,5.144278,-4.821863,-0.150935,8.037617,-0.852506,-4.024531,3.042811,2.171682,2.124209,-8.507568,-6.050587,-2.266193,2.008595,0.086176,-8.237402,-0.555527,4.291635,-7.334688,5.455352,-1.139053,-8.258164,-9.165120,-9.746733,0.851862,-6.012534,3.493559,-8.475163,0.332993,-7.559885,-0.331188,-3.585392,4.363759,6.635731,3.929431,4.755006,-1.003596,-4.682612,9.834205,-4.860205,-0.680261,3.038573,8.775163,5.033682,7.637643,-4.420764,8.772755,8.118531,-4.000437,-8.791064,0.472337,1.444236,-7.966992,-8.481305,-5.437569,-8.044282,6.507784,-2.205623,-3.106032,3.534706,4.019462,5.810011,-6.484956,9.821358,-9.061271,-2.897016,-6.246379,2.705788,3.371618,-6.407073,2.990883,-7.450710,-8.784539,3.728919,4.030784,6.110791,-8.338033,0.812985,0.726357,2.872381,-8.694914,0.101517,3.339522,9.606009,-8.045262,-5.514371,5.730074,5.463098,2.078174,-0.348989,2.422861,-3.554533,-9.516064,2.255528,-0.888872,2.806005,-2.633864,3.552288,-4.276627,4.025142,6.576956,-0.457144,-9.512310,-0.892506,-2.958157,-0.795616,-6.133401,-4.535115,-3.610831,-6.388675,-6.057022,-0.548401,-5.914954,5.292879,-6.733754,-6.720626,-0.449034,-1.885124,-3.842687,6.691716,6.325697,-5.113445,-9.774399,4.931285,-6.982129,4.804305,3.780669,-1.366648,-3.731131,-0.600459,-8.315208,-6.630226,2.291652,6.113753,0.369421,4.922021,2.107720,6.828912,-0.467137,-1.192746,-2.834351,2.240261,2.024303,-4.257775,4.296744,1.393629,6.036753,3.736304,-4.281747,-3.285955,9.447483,1.145264,2.966326,-0.826593,6.886483,1.710738,-3.817385,6.578713,-0.127779,6.159394,5.340144,5.509192,-6.878938,0.160074,9.503173,4.463563,4.780279,7.048596,0.984622,-4.234362,1.613376,-7.429898,8.198070,1.237986,8.575436,7.379014,0.869212,6.829655,7.473280,3.023676,-2.544884,9.437700,7.984323,4.036175,-9.190190,8.214140,5.528368,-3.129901,7.656010,-2.639015,-0.695635,3.700274,-3.619308,-9.902533,-7.956897,-9.742394,-4.630951,-7.365620,3.275727,-0.857670,-6.390644,0.655622,0.281293,-6.245378,1.620676,-4.776442,-6.242089,-9.023422,-7.233369,9.593248,-0.134415,-3.446797,4.682239,-5.192934,-3.366047,5.839422,-3.034975,-4.428844,-1.501476,-9.254762,0.901824,0.738370,7.801349,-1.115490,-6.018244,-8.243145,1.874642,8.089498,4.991400,0.020829,-9.158914,-9.084381,8.193475,7.795815,9.481470,-6.007494,-5.751794,9.282296,3.150236,3.692182,8.951434,-9.128273,-6.868684,8.284910,4.455997,5.377469,5.606301,-1.931498,-1.286900,-6.496957,4.999836,-8.354657,3.588194,2.692258,8.922320,-8.392620,-7.030612,-8.180678,8.862189,2.673492,-7.833868,-9.298935,-6.445128,9.778783,-1.674689,5.758072,-5.979073,0.012983,3.121261,-1.585164,-3.858368,1.208480,5.436399,3.345310,9.208144,1.116331,-8.853435,-9.629261,-4.804265,3.662481,6.804630,-9.344395,2.293515,0.159061,2.548327,1.279601,3.973428,-6.044317,-8.463797,6.649612,-3.359876,-1.567842,-6.920956,-8.101518,-3.808480,-4.399244,-2.911699,7.211751,-8.262884,-5.804025,-7.104743,6.635879,-6.440457,-2.164947,-6.511352,-0.907728,-2.320613,3.331418,0.821783,3.374834,4.269792,-1.313508,-9.317880,2.288350,-2.500498,-2.403643,-2.034373,-4.100675,-4.391270,1.152523,-6.453606,6.751855,-2.745201,-0.940413,-6.998224,8.106070,1.627392,9.243033,3.891695,-2.701698,-1.022648,-8.402286,8.454025,4.205973,6.828079,-9.269165,0.684151,-4.132111,-3.312084], dtype = "float64")#candidate|6639|(1800,)|const|float64
bop_6640 = relay.add(var_6634.astype('uint8'), relay.reshape(const_6639.astype('uint8'), relay.shape_of(var_6634))) # shape=(1800,)
func_5108_call = mod.get_global_var('func_5108')
func_5113_call = mutated_mod.get_global_var('func_5113')
const_6653 = relay.const(-3, dtype = "int32")#candidate|6653|()|const|int32
const_6654 = relay.const([-5,-2,-8,-3,7,4,-5,5,-4,-7,4,-5,10,2,-8,2,2,10,-4,4,7,5,10,-9,-4,5,-8,-5,-4,6,2,5,4,5,8,-9,-7,8,6,-2,-8,10,-7,-6,2,3,10,9,5,1,-3,-10,-5,-8,8,3,6,3,10,4,-3,-5,9,8,8,-9,8,-1,-10,5,-8,-3,2,8,7,-2,-3,3,1,-5,-1,-9,-4,3,7,1,4,10,1,-8,1,9,8,-3,-5,9,-3,-4,-7,10,-5,-1,-4,-7,-10,3,8,3,-8,-7,7,7,-2,-6,10,-7,4,5,1,-4,8,10,1,-2,-2,-2,-2,-8,1,-5,9,-7,-10,-4,4,-1,5,-8,7,-7,-8,-9,-7,-9,2,-9,-6,7,-9,-8,-8,7,2,-2,-5,9,8,-8,-4,3,-10,8,-1,3,-5,4,2,7,-7,3,7,-9,-2,10,-1,4,7,7,-9,9,3,-9,5,9,4,7,-5,-6,1,-3,-9,6,-10,-8,-7,-5,2,-5,10,10,5,-5,2,-7,7,9,-4,-6,10,-3,10,-5,-2,9,4,5,-7,-2,-4,-3,-7,-9,-5,-7,-8,2,-10,8,9,1,-7,5,-7,-2,-5,1,5,-5,6,7,-4,-10,6,-6,7,8,-4,-5,-9,-3,2,-6,-6,7,-5,-6,3,-5,5,-2,9,-6,3,5,10,8,-3,-9,7,3,-2,3,8,-2,7,7,6,-8,-5,-4,-2,7,7,4,-3,6,-9,-9,-6,10,-7,-9,8,-5,-10,-10,-9,8,2,-2,3,10,-8,7,-2,-7,-1,3,6,6,6,10,2,3,-2,-1,-4,4,-10,8,-7,-10,-3,-2,2,5,-4,3,-3,-10,-3,9,-1,-3,-6,-10,6,-5,-4,10,-5,-2,-1,4,5,-10,-6,8,-4,6,-2,4,6,-8,8,-6,4,3,7,9,3,10,10,7,-9,-5,9,10,1,-8,6,6,-4,-5,-6,2,-8,9,2,-4,-8,3,-8,-7,-1,-2,10,8,6,-6,-2,4,-3,-7,-10,8,-10,7,6,-1,-10,-5,-10,6,-10,10,5,1,-8,4,1,-8,-5,-1,1,-5,6,3,4,-3,4,-6,9,8,8,-7,-4,-2,-2], dtype = "int32")#candidate|6654|(429,)|const|int32
call_6652 = relay.TupleGetItem(func_5108_call(relay.reshape(const_6653.astype('int32'), []), relay.reshape(const_6654.astype('int32'), [11, 13, 3]), relay.reshape(const_6654.astype('int32'), [11, 13, 3]), ), 7)
call_6655 = relay.TupleGetItem(func_5113_call(relay.reshape(const_6653.astype('int32'), []), relay.reshape(const_6654.astype('int32'), [11, 13, 3]), relay.reshape(const_6654.astype('int32'), [11, 13, 3]), ), 7)
func_1094_call = mod.get_global_var('func_1094')
func_1096_call = mutated_mod.get_global_var('func_1096')
call_6660 = func_1094_call()
call_6661 = func_1094_call()
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_6666 = relay.TupleGetItem(func_3837_call(), 1)
call_6667 = relay.TupleGetItem(func_3839_call(), 1)
output = relay.Tuple([call_6570,call_6576,call_6598,call_6633,bop_6640,call_6652,const_6653,const_6654,call_6660,call_6666,])
output2 = relay.Tuple([call_6571,call_6577,call_6599,call_6635,bop_6640,call_6655,const_6653,const_6654,call_6661,call_6667,])
func_6675 = relay.Function([var_6634,], output)
mod['func_6675'] = func_6675
mod = relay.transform.InferType()(mod)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6676 = relay.var("var_6676", dtype = "float64", shape = (1800,))#candidate|6676|(1800,)|var|float64
func_6675_call = mutated_mod.get_global_var('func_6675')
call_6677 = func_6675_call(var_6676)
output = call_6677
func_6678 = relay.Function([var_6676], output)
mutated_mod['func_6678'] = func_6678
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6769 = relay.var("var_6769", dtype = "float32", shape = (5, 9, 11))#candidate|6769|(5, 9, 11)|var|float32
uop_6770 = relay.asin(var_6769.astype('float32')) # shape=(5, 9, 11)
func_4719_call = mod.get_global_var('func_4719')
func_4721_call = mutated_mod.get_global_var('func_4721')
call_6774 = func_4719_call()
call_6775 = func_4719_call()
func_4852_call = mod.get_global_var('func_4852')
func_4854_call = mutated_mod.get_global_var('func_4854')
var_6800 = relay.var("var_6800", dtype = "float64", shape = (364, 2))#candidate|6800|(364, 2)|var|float64
call_6799 = relay.TupleGetItem(func_4852_call(relay.reshape(var_6800.astype('float64'), [728,])), 4)
call_6801 = relay.TupleGetItem(func_4854_call(relay.reshape(var_6800.astype('float64'), [728,])), 4)
output = relay.Tuple([uop_6770,call_6774,call_6799,var_6800,])
output2 = relay.Tuple([uop_6770,call_6775,call_6801,var_6800,])
func_6820 = relay.Function([var_6769,var_6800,], output)
mod['func_6820'] = func_6820
mod = relay.transform.InferType()(mod)
var_6821 = relay.var("var_6821", dtype = "float32", shape = (5, 9, 11))#candidate|6821|(5, 9, 11)|var|float32
var_6822 = relay.var("var_6822", dtype = "float64", shape = (364, 2))#candidate|6822|(364, 2)|var|float64
output = func_6820(var_6821,var_6822,)
func_6823 = relay.Function([var_6821,var_6822,], output)
mutated_mod['func_6823'] = func_6823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_576_call = mod.get_global_var('func_576')
func_578_call = mutated_mod.get_global_var('func_578')
call_6825 = func_576_call()
call_6826 = func_576_call()
output = call_6825
output2 = call_6826
func_6831 = relay.Function([], output)
mod['func_6831'] = func_6831
mod = relay.transform.InferType()(mod)
mutated_mod['func_6831'] = func_6831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6831_call = mutated_mod.get_global_var('func_6831')
call_6832 = func_6831_call()
output = call_6832
func_6833 = relay.Function([], output)
mutated_mod['func_6833'] = func_6833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6862 = relay.var("var_6862", dtype = "float64", shape = (6, 8, 4))#candidate|6862|(6, 8, 4)|var|float64
uop_6863 = relay.sinh(var_6862.astype('float64')) # shape=(6, 8, 4)
func_5454_call = mod.get_global_var('func_5454')
func_5457_call = mutated_mod.get_global_var('func_5457')
var_6875 = relay.var("var_6875", dtype = "uint32", shape = (104,))#candidate|6875|(104,)|var|uint32
call_6874 = relay.TupleGetItem(func_5454_call(relay.reshape(var_6875.astype('uint32'), [13, 8, 1])), 1)
call_6876 = relay.TupleGetItem(func_5457_call(relay.reshape(var_6875.astype('uint32'), [13, 8, 1])), 1)
var_6877 = relay.var("var_6877", dtype = "float64", shape = (6, 8, 4))#candidate|6877|(6, 8, 4)|var|float64
bop_6878 = relay.equal(uop_6863.astype('bool'), relay.reshape(var_6877.astype('bool'), relay.shape_of(uop_6863))) # shape=(6, 8, 4)
func_4955_call = mod.get_global_var('func_4955')
func_4957_call = mutated_mod.get_global_var('func_4957')
call_6885 = relay.TupleGetItem(func_4955_call(), 0)
call_6886 = relay.TupleGetItem(func_4957_call(), 0)
uop_6895 = relay.atanh(uop_6863.astype('float64')) # shape=(6, 8, 4)
func_800_call = mod.get_global_var('func_800')
func_802_call = mutated_mod.get_global_var('func_802')
call_6901 = func_800_call()
call_6902 = func_800_call()
var_6905 = relay.var("var_6905", dtype = "float64", shape = (6, 8, 4))#candidate|6905|(6, 8, 4)|var|float64
bop_6906 = relay.floor_divide(uop_6895.astype('float64'), relay.reshape(var_6905.astype('float64'), relay.shape_of(uop_6895))) # shape=(6, 8, 4)
func_6155_call = mod.get_global_var('func_6155')
func_6156_call = mutated_mod.get_global_var('func_6156')
call_6911 = func_6155_call()
call_6912 = func_6155_call()
output = relay.Tuple([call_6874,var_6875,bop_6878,call_6885,call_6901,bop_6906,call_6911,])
output2 = relay.Tuple([call_6876,var_6875,bop_6878,call_6886,call_6902,bop_6906,call_6912,])
func_6916 = relay.Function([var_6862,var_6875,var_6877,var_6905,], output)
mod['func_6916'] = func_6916
mod = relay.transform.InferType()(mod)
mutated_mod['func_6916'] = func_6916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6916_call = mutated_mod.get_global_var('func_6916')
var_6918 = relay.var("var_6918", dtype = "float64", shape = (6, 8, 4))#candidate|6918|(6, 8, 4)|var|float64
var_6919 = relay.var("var_6919", dtype = "uint32", shape = (104,))#candidate|6919|(104,)|var|uint32
var_6920 = relay.var("var_6920", dtype = "float64", shape = (6, 8, 4))#candidate|6920|(6, 8, 4)|var|float64
var_6921 = relay.var("var_6921", dtype = "float64", shape = (6, 8, 4))#candidate|6921|(6, 8, 4)|var|float64
call_6917 = func_6916_call(var_6918,var_6919,var_6920,var_6921,)
output = call_6917
func_6922 = relay.Function([var_6918,var_6919,var_6920,var_6921,], output)
mutated_mod['func_6922'] = func_6922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4955_call = mod.get_global_var('func_4955')
func_4957_call = mutated_mod.get_global_var('func_4957')
call_7004 = relay.TupleGetItem(func_4955_call(), 0)
call_7005 = relay.TupleGetItem(func_4957_call(), 0)
func_6392_call = mod.get_global_var('func_6392')
func_6394_call = mutated_mod.get_global_var('func_6394')
call_7017 = relay.TupleGetItem(func_6392_call(), 3)
call_7018 = relay.TupleGetItem(func_6394_call(), 3)
output = relay.Tuple([call_7004,call_7017,])
output2 = relay.Tuple([call_7005,call_7018,])
func_7021 = relay.Function([], output)
mod['func_7021'] = func_7021
mod = relay.transform.InferType()(mod)
output = func_7021()
func_7022 = relay.Function([], output)
mutated_mod['func_7022'] = func_7022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1885_call = mod.get_global_var('func_1885')
func_1886_call = mutated_mod.get_global_var('func_1886')
call_7065 = relay.TupleGetItem(func_1885_call(), 0)
call_7066 = relay.TupleGetItem(func_1886_call(), 0)
output = call_7065
output2 = call_7066
func_7067 = relay.Function([], output)
mod['func_7067'] = func_7067
mod = relay.transform.InferType()(mod)
mutated_mod['func_7067'] = func_7067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7067_call = mutated_mod.get_global_var('func_7067')
call_7068 = func_7067_call()
output = call_7068
func_7069 = relay.Function([], output)
mutated_mod['func_7069'] = func_7069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_7095 = relay.TupleGetItem(func_3837_call(), 1)
call_7096 = relay.TupleGetItem(func_3839_call(), 1)
output = call_7095
output2 = call_7096
func_7097 = relay.Function([], output)
mod['func_7097'] = func_7097
mod = relay.transform.InferType()(mod)
output = func_7097()
func_7098 = relay.Function([], output)
mutated_mod['func_7098'] = func_7098
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7128 = relay.const([[[7.855495]],[[-2.031767]],[[9.146765]],[[2.276984]],[[9.579379]],[[-9.840417]],[[1.362877]],[[7.682032]],[[-7.914184]],[[-4.180490]],[[7.567139]],[[4.663912]],[[9.148127]],[[-9.317206]],[[7.364470]],[[9.539406]]], dtype = "float64")#candidate|7128|(16, 1, 1)|const|float64
uop_7129 = relay.log(const_7128.astype('float64')) # shape=(16, 1, 1)
output = relay.Tuple([uop_7129,])
output2 = relay.Tuple([uop_7129,])
func_7135 = relay.Function([], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7136 = func_7135_call()
output = call_7136
func_7137 = relay.Function([], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4088_call = mod.get_global_var('func_4088')
func_4090_call = mutated_mod.get_global_var('func_4090')
call_7148 = relay.TupleGetItem(func_4088_call(), 0)
call_7149 = relay.TupleGetItem(func_4090_call(), 0)
output = call_7148
output2 = call_7149
func_7157 = relay.Function([], output)
mod['func_7157'] = func_7157
mod = relay.transform.InferType()(mod)
mutated_mod['func_7157'] = func_7157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7157_call = mutated_mod.get_global_var('func_7157')
call_7158 = func_7157_call()
output = call_7158
func_7159 = relay.Function([], output)
mutated_mod['func_7159'] = func_7159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_7160 = func_1333_call()
call_7161 = func_1333_call()
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_7162 = func_3204_call()
call_7163 = func_3204_call()
var_7164 = relay.var("var_7164", dtype = "float32", shape = (5, 9, 8))#candidate|7164|(5, 9, 8)|var|float32
bop_7165 = relay.divide(call_7162.astype('float32'), relay.reshape(var_7164.astype('float32'), relay.shape_of(call_7162))) # shape=(5, 9, 8)
bop_7168 = relay.divide(call_7163.astype('float32'), relay.reshape(var_7164.astype('float32'), relay.shape_of(call_7163))) # shape=(5, 9, 8)
output = relay.Tuple([call_7160,bop_7165,])
output2 = relay.Tuple([call_7161,bop_7168,])
func_7182 = relay.Function([var_7164,], output)
mod['func_7182'] = func_7182
mod = relay.transform.InferType()(mod)
mutated_mod['func_7182'] = func_7182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7183 = relay.var("var_7183", dtype = "float32", shape = (5, 9, 8))#candidate|7183|(5, 9, 8)|var|float32
func_7182_call = mutated_mod.get_global_var('func_7182')
call_7184 = func_7182_call(var_7183)
output = call_7184
func_7185 = relay.Function([var_7183], output)
mutated_mod['func_7185'] = func_7185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_7196 = relay.TupleGetItem(func_854_call(), 0)
call_7197 = relay.TupleGetItem(func_855_call(), 0)
func_4277_call = mod.get_global_var('func_4277')
func_4279_call = mutated_mod.get_global_var('func_4279')
call_7200 = relay.TupleGetItem(func_4277_call(), 0)
call_7201 = relay.TupleGetItem(func_4279_call(), 0)
output = relay.Tuple([call_7196,call_7200,])
output2 = relay.Tuple([call_7197,call_7201,])
func_7206 = relay.Function([], output)
mod['func_7206'] = func_7206
mod = relay.transform.InferType()(mod)
mutated_mod['func_7206'] = func_7206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7206_call = mutated_mod.get_global_var('func_7206')
call_7207 = func_7206_call()
output = call_7207
func_7208 = relay.Function([], output)
mutated_mod['func_7208'] = func_7208
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7220 = relay.const([[[-8,2,-4,-3,-8,-10,8,-10,1,6,-7,-10,3,3,8],[1,-10,8,-8,7,-1,2,8,-8,1,-2,6,-3,7,-6],[7,3,-2,1,1,5,-4,-1,-1,1,2,10,-7,-6,-10],[9,2,5,2,-4,-6,7,10,-2,7,-10,-9,9,-3,10]],[[1,-3,3,7,-5,-10,-3,-9,-5,3,6,-2,-4,-1,-10],[-4,-2,4,-4,3,-5,8,-8,-1,10,6,7,-3,1,-2],[6,-9,-1,-6,-5,4,-1,-6,-3,-3,-2,1,7,2,7],[-8,-10,-1,-10,-5,7,-5,-4,-7,-9,-10,-9,2,-2,-3]],[[-8,1,-8,8,9,-4,-3,-5,9,3,-4,1,-3,-9,-7],[5,-3,-3,7,8,-7,4,-1,-8,-1,-10,-4,-10,4,-2],[-4,-8,3,8,5,10,2,3,-1,6,1,-10,-9,-2,2],[5,2,4,7,7,-2,5,9,7,-6,-5,-1,2,7,-2]],[[-7,-8,-2,-4,6,10,-8,-4,-10,8,-6,-5,-10,-6,2],[-8,6,-7,8,-7,5,-6,2,-2,3,-2,-7,-5,-5,-5],[-10,5,-9,-4,6,-3,9,-5,-9,3,9,10,-2,2,-7],[-6,10,-5,-4,7,-2,-2,-2,-4,-6,-3,-4,-10,10,-6]],[[10,6,-3,-8,3,6,8,8,7,-8,-1,-9,-4,1,-2],[2,9,2,10,9,-5,-1,-7,2,-3,8,-3,-8,5,-2],[-6,-10,2,-9,2,-10,-4,-2,1,4,4,7,8,-4,-3],[-1,1,-8,-3,-9,-4,2,9,-9,-7,2,5,-7,-5,8]],[[-7,8,2,3,10,8,9,4,-5,-8,-3,2,-10,-1,-1],[-2,9,8,-6,5,-3,2,7,1,6,-2,10,9,4,6],[10,-6,7,-10,-7,1,-2,-3,8,10,-5,-6,-8,-6,6],[2,9,-9,-1,1,6,7,6,6,6,-9,10,-6,2,-5]],[[-2,-6,-4,-9,-4,3,2,-9,-2,2,2,-8,9,-3,6],[9,4,10,10,2,-10,3,9,-10,-8,-10,6,-5,2,3],[-7,-5,-8,8,4,2,-9,6,1,-8,8,1,7,-8,7],[6,-4,6,6,1,-6,-4,2,-2,5,3,-9,7,2,5]],[[-7,-1,2,6,-1,-7,-4,3,-8,10,-4,-7,5,9,1],[5,2,10,5,-1,-5,-5,-7,4,3,9,4,10,-1,-9],[2,-10,-1,-8,8,-5,8,-1,-10,10,-10,-1,-6,6,-2],[10,8,-10,-2,-7,8,1,-4,10,-9,7,1,4,1,-5]],[[-6,6,-6,-4,5,-9,5,-10,4,3,2,3,-8,-1,10],[1,-2,1,-3,8,-8,2,7,-4,-4,4,-7,-9,5,-3],[5,-10,-10,5,-8,1,10,-1,9,-9,10,-9,10,1,8],[-10,-7,2,-1,-1,1,-5,9,-9,-1,1,10,10,10,5]],[[7,-2,6,-4,-10,8,-8,4,10,8,-10,5,-9,-1,-8],[8,4,4,6,8,4,9,8,-1,-7,-10,-6,-8,-1,7],[-9,-9,-6,4,-10,10,-8,-5,-2,-7,-5,-5,-3,9,6],[-5,10,-8,8,8,6,-1,-7,-3,5,6,-6,-3,6,4]],[[6,6,7,4,-8,3,-10,-10,-1,6,2,5,4,10,-8],[1,6,-3,1,-6,10,5,-4,-9,-8,10,-8,2,3,-2],[-6,8,-2,5,-6,4,-2,6,-6,10,9,-7,-7,8,1],[-10,7,-7,6,-2,-4,-10,9,-2,-2,-10,6,-7,6,-10]],[[9,4,-9,3,-4,10,5,-6,-8,9,5,-9,9,-2,5],[-4,6,-8,-8,10,8,-9,2,7,-6,-7,8,-1,-6,-3],[-9,-3,4,9,4,3,-1,-7,10,4,2,6,-9,-8,2],[-6,-10,-3,10,-4,3,-6,-2,9,9,-7,-5,1,-1,-1]],[[-2,-1,5,5,-8,-2,8,5,-3,1,8,-10,-2,8,-2],[6,5,-6,-1,-8,2,10,-9,8,-9,-1,7,-9,4,2],[-8,10,6,-6,9,-8,5,10,2,4,-9,8,6,-6,-7],[-8,7,-8,6,-1,-7,7,-6,-6,7,10,4,-3,-9,3]],[[-7,3,-9,-8,5,1,10,-6,4,-5,-1,-6,-6,5,8],[-3,9,1,-7,4,-2,-7,-2,9,6,-5,-10,2,-10,1],[-7,4,-10,-5,-6,10,5,-10,-2,-10,-2,7,-8,8,-8],[-7,-1,2,-6,10,-7,1,10,6,10,-2,3,-4,10,8]],[[-1,2,3,-5,2,-2,6,8,3,-7,10,-7,9,-3,-5],[7,-7,10,-5,-1,-10,4,4,-1,-8,2,-8,-10,-4,7],[7,7,-3,3,4,4,5,-2,-2,6,3,-7,-10,-1,-3],[4,-10,-1,8,2,-8,-7,-6,1,-4,-7,6,-10,-10,-1]]], dtype = "uint16")#candidate|7220|(15, 4, 15)|const|uint16
var_7221 = relay.var("var_7221", dtype = "uint16", shape = (15, 4, 15))#candidate|7221|(15, 4, 15)|var|uint16
bop_7222 = relay.less(const_7220.astype('bool'), relay.reshape(var_7221.astype('bool'), relay.shape_of(const_7220))) # shape=(15, 4, 15)
output = bop_7222
output2 = bop_7222
func_7225 = relay.Function([var_7221,], output)
mod['func_7225'] = func_7225
mod = relay.transform.InferType()(mod)
mutated_mod['func_7225'] = func_7225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7226 = relay.var("var_7226", dtype = "uint16", shape = (15, 4, 15))#candidate|7226|(15, 4, 15)|var|uint16
func_7225_call = mutated_mod.get_global_var('func_7225')
call_7227 = func_7225_call(var_7226)
output = call_7227
func_7228 = relay.Function([var_7226], output)
mutated_mod['func_7228'] = func_7228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1731_call = mod.get_global_var('func_1731')
func_1732_call = mutated_mod.get_global_var('func_1732')
call_7271 = func_1731_call()
call_7272 = func_1731_call()
func_2526_call = mod.get_global_var('func_2526')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_7273 = func_2526_call()
call_7274 = func_2526_call()
output = relay.Tuple([call_7271,call_7273,])
output2 = relay.Tuple([call_7272,call_7274,])
func_7280 = relay.Function([], output)
mod['func_7280'] = func_7280
mod = relay.transform.InferType()(mod)
mutated_mod['func_7280'] = func_7280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7280_call = mutated_mod.get_global_var('func_7280')
call_7281 = func_7280_call()
output = call_7281
func_7282 = relay.Function([], output)
mutated_mod['func_7282'] = func_7282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5157_call = mod.get_global_var('func_5157')
func_5158_call = mutated_mod.get_global_var('func_5158')
call_7336 = func_5157_call()
call_7337 = func_5157_call()
func_5531_call = mod.get_global_var('func_5531')
func_5534_call = mutated_mod.get_global_var('func_5534')
var_7368 = relay.var("var_7368", dtype = "int8", shape = (910,))#candidate|7368|(910,)|var|int8
var_7369 = relay.var("var_7369", dtype = "float64", shape = (96,))#candidate|7369|(96,)|var|float64
call_7367 = relay.TupleGetItem(func_5531_call(relay.reshape(var_7368.astype('int8'), [910,]), relay.reshape(var_7369.astype('float64'), [96,]), ), 4)
call_7370 = relay.TupleGetItem(func_5534_call(relay.reshape(var_7368.astype('int8'), [910,]), relay.reshape(var_7369.astype('float64'), [96,]), ), 4)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_7375 = func_1333_call()
call_7376 = func_1333_call()
func_1165_call = mod.get_global_var('func_1165')
func_1167_call = mutated_mod.get_global_var('func_1167')
const_7390 = relay.const([9,-4,5,5,8,-2,10,-2,3,4,-7,-5,-4,7,3,7,1,-3,1,-8], dtype = "int8")#candidate|7390|(20,)|const|int8
call_7389 = relay.TupleGetItem(func_1165_call(relay.reshape(const_7390.astype('int8'), [2, 2, 5])), 1)
call_7391 = relay.TupleGetItem(func_1167_call(relay.reshape(const_7390.astype('int8'), [2, 2, 5])), 1)
output = relay.Tuple([call_7336,call_7367,var_7368,var_7369,call_7375,call_7389,const_7390,])
output2 = relay.Tuple([call_7337,call_7370,var_7368,var_7369,call_7376,call_7391,const_7390,])
func_7394 = relay.Function([var_7368,var_7369,], output)
mod['func_7394'] = func_7394
mod = relay.transform.InferType()(mod)
var_7395 = relay.var("var_7395", dtype = "int8", shape = (910,))#candidate|7395|(910,)|var|int8
var_7396 = relay.var("var_7396", dtype = "float64", shape = (96,))#candidate|7396|(96,)|var|float64
output = func_7394(var_7395,var_7396,)
func_7397 = relay.Function([var_7395,var_7396,], output)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_854_call = mod.get_global_var('func_854')
func_855_call = mutated_mod.get_global_var('func_855')
call_7402 = relay.TupleGetItem(func_854_call(), 0)
call_7403 = relay.TupleGetItem(func_855_call(), 0)
const_7404 = relay.constdtype = "float32")#candidate|7404|(10, 16, 11)|const|float32
bop_7405 = relay.power(call_7402.astype('float32'), relay.reshape(const_7404.astype('float32'), relay.shape_of(call_7402))) # shape=(10, 16, 11)
bop_7408 = relay.power(call_7403.astype('float32'), relay.reshape(const_7404.astype('float32'), relay.shape_of(call_7403))) # shape=(10, 16, 11)
func_1822_call = mod.get_global_var('func_1822')
func_1824_call = mutated_mod.get_global_var('func_1824')
call_7412 = func_1822_call()
call_7413 = func_1822_call()
func_5883_call = mod.get_global_var('func_5883')
func_5886_call = mutated_mod.get_global_var('func_5886')
const_7420 = relay.const([2.078872,-2.191005,1.359251,-6.815949,6.073943,2.065350,9.755814,-9.335475,-4.650713,-1.390581,-5.235166,-2.976274,-4.336550,2.784602,-9.443824,2.791858,9.288808,9.779572,0.066789,-2.433447,4.853601,2.024587,2.815174,-6.649736,-4.898441,9.658356,-2.621689,-5.721407,-5.266559,-5.019544,-5.430857,-3.480962,-3.357640,-2.691577,1.833696,-6.208446,5.061180,6.058681,-8.941469,-7.306498,2.558466,5.146943,-0.758785,-3.737763,-0.874533,3.928007,-3.591949,-7.938275,-0.657520,-9.072600,9.655139,-7.083277,2.346043,6.357444,-5.724647,-0.110722,4.061075,1.520878,-9.467734,9.969326,8.629883,3.084976,-4.269563,-2.208073,-9.565237,5.476130,8.037212,-7.643969,3.299970,-1.914611,-3.404954,7.667891,3.764721,3.723528,4.518195,-7.568556,1.460418,-8.229071,7.739199,-2.636613,-4.972104,-8.082793,-7.613650,-9.736211,-0.207190,1.260396,8.361683,3.621527,8.686171,-1.211998,4.614130,3.796084,-2.750842,-1.966563,-7.123834,-9.550180,-3.657827,4.334657,9.432182,0.180152,-5.173820,-7.137413,5.896819,-2.344411,-6.074726,7.209562,1.548055,2.450146,9.700778,-9.514385,-6.319665,-3.282537,8.523630,6.722820,0.207241,-5.410665,4.300374,3.218813,-3.042762,-6.301358,9.317060,-1.705888,-3.299168,-0.250612,-5.330680,-0.877466,9.051781,8.488063,-7.092967,-0.555926,5.235293,3.742797,6.934642,-7.915471,7.784550,5.039642,-7.040298,9.773159,7.432098,-6.100185,-1.785985,-7.664324,4.311659,-8.065131,3.934572,0.023359,-2.346543,1.764445,-5.978421,6.358170,-8.435557,-2.059316,9.188902,-5.861913,6.541786,-2.760066,6.506949,-4.968509,-1.567408,-4.434762,3.063971,4.918960,-5.916173,5.843646,-9.903172,-5.951314,3.583587,2.489765,2.877913,8.989512,1.428416,-1.107392,7.820222,8.078185,-7.883257,1.597343,-8.073682,3.925240,1.921099,1.489251,6.213351,8.461152,-4.463583,0.747829,-6.191407,-2.967149,-3.213785,-8.654719,1.391764,-5.191763,4.580260,4.190004,-6.010608,-6.883930,-7.297120,1.970778,-7.248512,-3.241780,3.619998,-9.226488,6.380941,6.979170,2.894944,8.474439,-9.662877,-1.682630,8.601341,6.048590,-0.922041,9.920209,6.486665,0.240585,8.425908,-1.008696,9.096613,-6.644157,0.103117,9.350285,1.422435,-8.263187,-6.547464,7.466934,-5.723795,3.877788,6.745369,4.761967,9.824119,-0.114513,9.019492,8.382446,6.064353,5.965218,-6.067926,3.920148,5.313609,3.690788,5.304313,0.533562,3.602471,-4.962047,2.765043,1.745914,-8.816408,-1.659666,-6.050215,7.460659,3.023552,-2.427265,0.967926,-9.025337,1.392526,-6.987282,-4.506639,5.518529,-4.417362,-9.496273,9.564239,-3.152945,7.549000,1.023253,-8.207389,7.011895,8.613628,3.653398,-9.679164,4.528477,2.560825,-6.405578,7.861057,5.110114,7.071055,-7.977376,1.522928,8.485232,5.491012,-4.456923,7.266166,4.955885,-8.468579,5.235389,-8.630299,-1.727235,-0.595967,-0.904975,-2.845620,2.421219,8.571207,1.243124,-4.374167,-6.895589,1.167494,2.265340,-9.968740,-5.135204,-7.567122,6.913959,-5.294876,-3.293362,-3.726249,9.088225,4.315383,1.051433,-5.198297,7.912162,8.577912,-9.155634,1.663780,5.126877,-7.728009,-4.812928,5.821731,-5.338489,8.833994,-7.384606,2.625475,8.012578,-3.177227,0.704117,7.984978,4.314252,-8.058006,6.411216,1.712320,-3.043449,-1.624769,-6.656852,-9.436724,-2.966922,-3.402613,-3.767900,-7.520314,-8.206308,-6.117285,5.698660,-6.491279,-1.726635,-5.705561,-5.861231,-3.543818,4.302101,8.439484,-0.811887,-9.032032,-0.246416,5.900615,-4.686601,-4.932622,-8.606864,5.996407,-8.653994,-6.843990,-2.002512,-7.934489,-2.472335,6.199677,-2.835787,-0.259166,2.087532,1.433729,1.805036,-4.501977,-9.631146,-3.454274,3.787979,-4.934798,3.268559,-2.309085,6.871456,6.941488,6.994565,9.025915,8.302156,-3.762467,4.687033,-1.903198,-2.177996,-8.552142,3.129636,2.989801,-1.295884,-3.518186,-5.471799,-6.847340,-1.300313,8.338016,-3.866277,3.149998,-6.748358,-3.594021,2.970895,-2.944228,8.890866,-7.895038,1.144303,4.396964,4.940659,-9.828790,-3.299973,5.733153,-3.383628,-5.989967,1.558516,-7.996691,3.851495,6.584714,-4.812683,-8.805405,3.596142,-3.494108,-4.437067,-5.850777,-1.282919,3.565865,3.850748,3.557359,-0.658418,1.486967,5.044385,3.745685,-4.558739,3.484726,7.461864,6.805815,-9.821698,2.400737,3.686252,-1.803777,-7.258777,2.501574,-8.712859,4.038867,-0.415479,-4.833074,8.153402,4.624453,0.287909,-5.057244,-9.642436,4.351437,4.219877,-4.555719,-9.351141,-4.412213,-8.324479,2.717005,-6.040028,5.271637,6.388474,-5.421633,-3.769727,-6.317608,-7.866769,-2.618709,-8.014630,1.838303,-4.032005,7.113295,-3.688526,-1.098717,3.775371,3.250527,-9.857760,-9.719679,4.581816,-4.516471,-8.022166,1.567659,2.881935,-2.648869,5.964790,-5.060486,8.226119,-4.213995,1.549217,-3.863392,-1.297839,8.135011,7.987975,-4.927327,-0.379476,-2.633561,-9.033000,-0.916016,6.183949,5.926416,-4.116595,-7.850373,4.230514,-2.575449,9.714429,0.512671,-5.191640,8.305442,8.420147,-9.506737,-2.956003,-3.429095,-9.456601,9.723516,4.978787,-0.777301,-7.435076,8.294854,-6.677523,-7.019357,7.136509,0.830964,-1.207527,6.346093,3.475865,-6.050480,-0.338067,-5.747597,5.642411,-9.944719,-7.938310,-8.268578,7.346596,9.976660,7.376711,-8.193483,6.859474,1.299278,-4.650156,4.898822,-2.603846,8.038933,5.041265,-9.954113,0.124925,1.618731,4.986049,-5.755753,-1.994413,-7.396205,-3.480382,-6.624524,8.506644,3.225490,-9.965483,4.061327,-1.545942,8.776619,-2.913616,-9.041371,-4.551621,7.996726,-0.407483,-0.741574,3.827398,-1.894469,4.923873,-5.738696,-6.301461,-8.303443,-1.359856,-1.341354,1.463724,-9.556772,1.021469,5.552015,4.732758,5.458375,6.089163,-6.297671,4.666139,-1.783129,2.940967,8.033118,-0.247784,-5.344076,6.282309,-3.369490,-2.846474,-3.260892,2.190790,4.457604,-5.857491,-9.076272,-1.753830,7.110842,-9.963251,7.301013,-5.137097,7.559962,-0.894183,2.766634,-7.323544,-1.780455,6.259216,-6.656387,4.706214,5.412146,5.767114,6.812336,-0.582594,4.573475,-1.388522,-6.538955,4.437136,7.271024,3.395480,5.165081,-9.970342,-2.938768,-6.422473,0.424028,-7.266789,9.436860,-2.283570,8.161245,4.035321,0.290544,4.816571,-8.980798,-8.652832,4.722229,8.790945,5.897948,-7.024629,5.453208,9.209601,-4.696917,8.481516,8.896573,-0.058599,-0.666814,5.210081,9.845152,6.694582,5.709959,-0.873102,7.701569,7.573543,5.428235,-1.332540,-1.943983,8.711603,7.775546,-4.693016,2.636064,8.029503,5.621552,3.686127,-5.998306,-1.823914,-8.144678,-8.019830,-8.325890,7.825045,4.200530,-5.692428,2.069846,0.956046,-9.986749,9.810499,-2.680374,8.988725,8.640417,1.620362,0.258764,0.319801,-5.098044,2.670319,1.741011,-6.918382,-2.871720,-8.858160,5.940397,-0.791581,8.106157,8.663473,4.257678,5.997479,8.250892,-3.120139,6.772258,2.430757,1.342072,-0.310236,4.280933,2.181672,-2.051346,7.981871,3.005126,8.945685,7.254123,3.233806,-8.359094,3.699070,7.179280,-9.789879,7.115124,-8.023659,9.056395,6.405709,8.696978,-2.697835,-5.204507,4.743931,-6.543261,-9.182762,4.868489,-8.647302,3.667137,-6.892797,3.736286,7.713644,-8.956214,6.299952,-1.674345,-2.209900,3.857193,2.673267,-6.835814,-8.821851,-3.126442,-7.377836,-6.385157,8.650129,-7.472732,-6.180835,-4.107925,-3.968656,1.538715,-9.635656,-8.992086,5.366975], dtype = "float64")#candidate|7420|(728,)|const|float64
call_7419 = relay.TupleGetItem(func_5883_call(relay.reshape(const_7420.astype('float64'), [728,])), 2)
call_7421 = relay.TupleGetItem(func_5886_call(relay.reshape(const_7420.astype('float64'), [728,])), 2)
func_5297_call = mod.get_global_var('func_5297')
func_5298_call = mutated_mod.get_global_var('func_5298')
call_7423 = func_5297_call()
call_7424 = func_5297_call()
func_2148_call = mod.get_global_var('func_2148')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_7430 = func_2148_call()
call_7431 = func_2148_call()
output = relay.Tuple([bop_7405,call_7412,call_7419,const_7420,call_7423,call_7430,])
output2 = relay.Tuple([bop_7408,call_7413,call_7421,const_7420,call_7424,call_7431,])
func_7437 = relay.Function([], output)
mod['func_7437'] = func_7437
mod = relay.transform.InferType()(mod)
mutated_mod['func_7437'] = func_7437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7437_call = mutated_mod.get_global_var('func_7437')
call_7438 = func_7437_call()
output = call_7438
func_7439 = relay.Function([], output)
mutated_mod['func_7439'] = func_7439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6155_call = mod.get_global_var('func_6155')
func_6156_call = mutated_mod.get_global_var('func_6156')
call_7496 = func_6155_call()
call_7497 = func_6155_call()
func_7135_call = mod.get_global_var('func_7135')
func_7137_call = mutated_mod.get_global_var('func_7137')
call_7500 = relay.TupleGetItem(func_7135_call(), 0)
call_7501 = relay.TupleGetItem(func_7137_call(), 0)
uop_7509 = relay.exp(call_7500.astype('float64')) # shape=(16, 1, 1)
uop_7511 = relay.exp(call_7501.astype('float64')) # shape=(16, 1, 1)
var_7514 = relay.var("var_7514", dtype = "float64", shape = (16, 8, 7))#candidate|7514|(16, 8, 7)|var|float64
bop_7515 = relay.right_shift(uop_7509.astype('int8'), var_7514.astype('int8')) # shape=(16, 8, 7)
bop_7518 = relay.right_shift(uop_7511.astype('int8'), var_7514.astype('int8')) # shape=(16, 8, 7)
output = relay.Tuple([call_7496,bop_7515,])
output2 = relay.Tuple([call_7497,bop_7518,])
func_7525 = relay.Function([var_7514,], output)
mod['func_7525'] = func_7525
mod = relay.transform.InferType()(mod)
mutated_mod['func_7525'] = func_7525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7526 = relay.var("var_7526", dtype = "float64", shape = (16, 8, 7))#candidate|7526|(16, 8, 7)|var|float64
func_7525_call = mutated_mod.get_global_var('func_7525')
call_7527 = func_7525_call(var_7526)
output = call_7527
func_7528 = relay.Function([var_7526], output)
mutated_mod['func_7528'] = func_7528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5401_call = mod.get_global_var('func_5401')
func_5403_call = mutated_mod.get_global_var('func_5403')
call_7544 = relay.TupleGetItem(func_5401_call(), 0)
call_7545 = relay.TupleGetItem(func_5403_call(), 0)
func_3177_call = mod.get_global_var('func_3177')
func_3179_call = mutated_mod.get_global_var('func_3179')
call_7548 = func_3177_call()
call_7549 = func_3177_call()
output = relay.Tuple([call_7544,call_7548,])
output2 = relay.Tuple([call_7545,call_7549,])
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
output = func_7550()
func_7551 = relay.Function([], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1885_call = mod.get_global_var('func_1885')
func_1886_call = mutated_mod.get_global_var('func_1886')
call_7578 = relay.TupleGetItem(func_1885_call(), 0)
call_7579 = relay.TupleGetItem(func_1886_call(), 0)
output = call_7578
output2 = call_7579
func_7580 = relay.Function([], output)
mod['func_7580'] = func_7580
mod = relay.transform.InferType()(mod)
mutated_mod['func_7580'] = func_7580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7580_call = mutated_mod.get_global_var('func_7580')
call_7581 = func_7580_call()
output = call_7581
func_7582 = relay.Function([], output)
mutated_mod['func_7582'] = func_7582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_7598 = relay.TupleGetItem(func_3405_call(), 0)
call_7599 = relay.TupleGetItem(func_3406_call(), 0)
output = relay.Tuple([call_7598,])
output2 = relay.Tuple([call_7599,])
func_7600 = relay.Function([], output)
mod['func_7600'] = func_7600
mod = relay.transform.InferType()(mod)
output = func_7600()
func_7601 = relay.Function([], output)
mutated_mod['func_7601'] = func_7601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7580_call = mod.get_global_var('func_7580')
func_7582_call = mutated_mod.get_global_var('func_7582')
call_7612 = func_7580_call()
call_7613 = func_7580_call()
func_4867_call = mod.get_global_var('func_4867')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_7614 = func_4867_call()
call_7615 = func_4867_call()
output = relay.Tuple([call_7612,call_7614,])
output2 = relay.Tuple([call_7613,call_7615,])
func_7619 = relay.Function([], output)
mod['func_7619'] = func_7619
mod = relay.transform.InferType()(mod)
output = func_7619()
func_7620 = relay.Function([], output)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5680_call = mod.get_global_var('func_5680')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_7642 = relay.TupleGetItem(func_5680_call(), 1)
call_7643 = relay.TupleGetItem(func_5682_call(), 1)
func_5108_call = mod.get_global_var('func_5108')
func_5113_call = mutated_mod.get_global_var('func_5113')
var_7658 = relay.var("var_7658", dtype = "int32", shape = ())#candidate|7658|()|var|int32
const_7659 = relay.const([-2,6,9,9,4,-1,3,4,5,-8,5,4,-3,5,1,-1,10,-5,5,-4,7,8,7,5,5,-5,-7,6,-1,4,-3,-7,4,-2,9,-10,1,8,9,-2,-9,5,-5,5,-2,-9,6,7,-9,-9,-7,7,-4,-8,2,-7,4,-6,5,-6,-2,1,3,6,-9,2,-1,-3,-6,9,-8,1,-10,-4,8,-9,7,8,10,-3,10,-2,-4,7,-6,2,-5,-10,7,10,-6,-10,1,-2,-4,7,-10,-7,3,-8,4,-7,-10,4,10,7,-2,-8,4,1,7,-4,-8,3,6,-2,-1,9,-5,3,6,-3,4,9,-3,8,10,-9,4,10,5,-2,3,2,-4,-5,-2,7,2,-7,-10,-7,6,9,-9,-10,2,-3,-3,3,9,-8,-8,10,-2,-7,10,3,9,6,2,4,-9,-9,3,10,1,4,2,1,1,-8,-1,8,6,2,1,-10,-5,3,-2,-2,10,2,2,-9,3,-3,-10,-6,5,4,4,-8,-4,6,3,-9,-8,6,6,4,-3,-6,7,1,10,2,3,2,9,5,10,7,-5,-7,-8,-2,7,6,-2,10,6,5,-9,9,8,2,-8,-5,3,7,2,-4,9,-5,-1,-2,-6,-6,-5,5,-9,-1,-7,1,8,-3,7,-1,7,7,10,5,-8,1,8,-7,2,-7,6,-10,5,-5,1,9,2,6,-5,8,-3,-7,2,1,3,6,5,-4,-9,3,6,10,7,-10,8,-8,-4,6,-10,-3,-5,2,4,10,-8,-7,-4,2,2,6,9,-3,-6,10,-7,8,-1,4,10,-3,7,-3,-7,-4,7,1,1,-9,-4,-4,-2,-5,-7,-2,-4,-7,7,4,5,2,-6,-7,8,8,7,-3,6,-3,8,2,-2,-3,-9,2,-4,7,9,9,-4,-9,8,-9,9,-9,-9,7,10,-4,-8,4,-3,2,-8,9,-9,-10,-8,3,-3,6,-1,-7,4,9,-8,-2,3,2,8,-3,10,3,-4,-7,9,1,6,-3,9,-2,5,9,1,-9,-3,-3,-8,2,5,9,5,-5,7,-1,8,-5,-9,-2,6,-7,-6,5,-9,3,6,-9,1,-2,-2,7,8,4,8,6,-7,-4,-5,6,6], dtype = "int32")#candidate|7659|(429,)|const|int32
call_7657 = relay.TupleGetItem(func_5108_call(relay.reshape(var_7658.astype('int32'), []), relay.reshape(const_7659.astype('int32'), [11, 13, 3]), relay.reshape(const_7659.astype('int32'), [11, 13, 3]), ), 0)
call_7660 = relay.TupleGetItem(func_5113_call(relay.reshape(var_7658.astype('int32'), []), relay.reshape(const_7659.astype('int32'), [11, 13, 3]), relay.reshape(const_7659.astype('int32'), [11, 13, 3]), ), 0)
output = relay.Tuple([call_7642,call_7657,var_7658,const_7659,])
output2 = relay.Tuple([call_7643,call_7660,var_7658,const_7659,])
func_7678 = relay.Function([var_7658,], output)
mod['func_7678'] = func_7678
mod = relay.transform.InferType()(mod)
var_7679 = relay.var("var_7679", dtype = "int32", shape = ())#candidate|7679|()|var|int32
output = func_7678(var_7679)
func_7680 = relay.Function([var_7679], output)
mutated_mod['func_7680'] = func_7680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4867_call = mod.get_global_var('func_4867')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_7711 = func_4867_call()
call_7712 = func_4867_call()
output = call_7711
output2 = call_7712
func_7731 = relay.Function([], output)
mod['func_7731'] = func_7731
mod = relay.transform.InferType()(mod)
output = func_7731()
func_7732 = relay.Function([], output)
mutated_mod['func_7732'] = func_7732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1096_call = mutated_mod.get_global_var('func_1096')
call_7784 = func_1094_call()
call_7785 = func_1094_call()
output = relay.Tuple([call_7784,])
output2 = relay.Tuple([call_7785,])
func_7799 = relay.Function([], output)
mod['func_7799'] = func_7799
mod = relay.transform.InferType()(mod)
output = func_7799()
func_7800 = relay.Function([], output)
mutated_mod['func_7800'] = func_7800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7808 = relay.var("var_7808", dtype = "float32", shape = (3, 13, 10))#candidate|7808|(3, 13, 10)|var|float32
uop_7809 = relay.cos(var_7808.astype('float32')) # shape=(3, 13, 10)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_7811 = relay.TupleGetItem(func_2738_call(), 1)
call_7812 = relay.TupleGetItem(func_2740_call(), 1)
output = relay.Tuple([uop_7809,call_7811,])
output2 = relay.Tuple([uop_7809,call_7812,])
func_7813 = relay.Function([var_7808,], output)
mod['func_7813'] = func_7813
mod = relay.transform.InferType()(mod)
var_7814 = relay.var("var_7814", dtype = "float32", shape = (3, 13, 10))#candidate|7814|(3, 13, 10)|var|float32
output = func_7813(var_7814)
func_7815 = relay.Function([var_7814], output)
mutated_mod['func_7815'] = func_7815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7580_call = mod.get_global_var('func_7580')
func_7582_call = mutated_mod.get_global_var('func_7582')
call_7848 = func_7580_call()
call_7849 = func_7580_call()
output = relay.Tuple([call_7848,])
output2 = relay.Tuple([call_7849,])
func_7851 = relay.Function([], output)
mod['func_7851'] = func_7851
mod = relay.transform.InferType()(mod)
output = func_7851()
func_7852 = relay.Function([], output)
mutated_mod['func_7852'] = func_7852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1822_call = mod.get_global_var('func_1822')
func_1824_call = mutated_mod.get_global_var('func_1824')
call_7899 = func_1822_call()
call_7900 = func_1822_call()
output = relay.Tuple([call_7899,])
output2 = relay.Tuple([call_7900,])
func_7902 = relay.Function([], output)
mod['func_7902'] = func_7902
mod = relay.transform.InferType()(mod)
mutated_mod['func_7902'] = func_7902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7902_call = mutated_mod.get_global_var('func_7902')
call_7903 = func_7902_call()
output = call_7903
func_7904 = relay.Function([], output)
mutated_mod['func_7904'] = func_7904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1094_call = mod.get_global_var('func_1094')
func_1096_call = mutated_mod.get_global_var('func_1096')
call_7926 = func_1094_call()
call_7927 = func_1094_call()
output = call_7926
output2 = call_7927
func_7935 = relay.Function([], output)
mod['func_7935'] = func_7935
mod = relay.transform.InferType()(mod)
mutated_mod['func_7935'] = func_7935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7935_call = mutated_mod.get_global_var('func_7935')
call_7936 = func_7935_call()
output = call_7936
func_7937 = relay.Function([], output)
mutated_mod['func_7937'] = func_7937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1885_call = mod.get_global_var('func_1885')
func_1886_call = mutated_mod.get_global_var('func_1886')
call_7956 = relay.TupleGetItem(func_1885_call(), 1)
call_7957 = relay.TupleGetItem(func_1886_call(), 1)
func_5793_call = mod.get_global_var('func_5793')
func_5794_call = mutated_mod.get_global_var('func_5794')
call_8029 = relay.TupleGetItem(func_5793_call(), 0)
call_8030 = relay.TupleGetItem(func_5794_call(), 0)
output = relay.Tuple([call_7956,call_8029,])
output2 = relay.Tuple([call_7957,call_8030,])
func_8047 = relay.Function([], output)
mod['func_8047'] = func_8047
mod = relay.transform.InferType()(mod)
mutated_mod['func_8047'] = func_8047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8047_call = mutated_mod.get_global_var('func_8047')
call_8048 = func_8047_call()
output = call_8048
func_8049 = relay.Function([], output)
mutated_mod['func_8049'] = func_8049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_8073 = relay.TupleGetItem(func_1529_call(), 0)
call_8074 = relay.TupleGetItem(func_1530_call(), 0)
output = call_8073
output2 = call_8074
func_8088 = relay.Function([], output)
mod['func_8088'] = func_8088
mod = relay.transform.InferType()(mod)
mutated_mod['func_8088'] = func_8088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8088_call = mutated_mod.get_global_var('func_8088')
call_8089 = func_8088_call()
output = call_8089
func_8090 = relay.Function([], output)
mutated_mod['func_8090'] = func_8090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6318_call = mod.get_global_var('func_6318')
func_6320_call = mutated_mod.get_global_var('func_6320')
call_8104 = func_6318_call()
call_8105 = func_6318_call()
func_6820_call = mod.get_global_var('func_6820')
func_6823_call = mutated_mod.get_global_var('func_6823')
const_8115 = relay.const([[5.460375],[-5.262474],[5.667239],[2.857225],[9.831988],[-3.068607],[-4.623402],[-6.212586],[-2.617267],[-8.964679],[5.542848],[4.542521],[-2.945652],[-1.048862],[-7.289572],[-7.786655],[9.854690],[7.301565],[-7.611521],[5.357233],[-3.673096],[-5.344843],[-1.536303],[5.908795],[4.188976],[-1.513441],[-0.096724],[-1.177334],[-9.637470],[0.952756],[1.108237],[9.752694],[-7.415988],[9.299129],[7.526996],[7.234432],[-7.642126],[-9.438355],[-5.295736],[-4.984497],[9.228456],[4.736019],[-3.468992],[0.938009],[-4.514351],[-5.963270],[-5.052897],[-5.516589],[-8.657347],[-1.618770],[-5.646164],[0.540129],[5.277311],[-2.259007],[0.484076],[3.475298],[5.837249],[-4.545249],[-1.074295],[1.543286],[-9.132490],[-5.107458],[3.787316],[6.548845],[-4.359036],[3.872779],[8.374447],[-8.120160],[0.871207],[8.528879],[1.281957],[5.209790],[5.293379],[-0.722083],[5.492423],[-1.052741],[4.786632],[2.078302],[2.655480],[-1.012099],[-4.102636],[5.261379],[-6.490338],[-8.179722],[-1.260488],[-2.876299],[0.530161],[-1.137116],[1.359708],[-0.934944],[-5.857201],[-6.597304],[-0.256439],[-2.796002],[6.731567],[0.617212],[4.346869],[5.590945],[-7.016512],[9.046424],[9.179557],[-2.400455],[8.318314],[3.004243],[-5.764455],[-0.722119],[-8.807206],[-4.519005],[-2.954963],[6.524500],[-7.250422],[2.336885],[3.158490],[7.382642],[-8.054436],[-2.089027],[7.281661],[-9.628858],[1.777998],[6.091600],[-2.375392],[4.726451],[6.847493],[6.808347],[-4.221810],[8.566736],[4.623151],[-0.620350],[6.004086],[5.618950],[-4.873635],[-6.184599],[-8.337101],[9.231151],[-8.816532],[0.188198],[-5.201109],[-5.024488],[1.021313],[4.811065],[-9.774724],[-8.473242],[7.444474],[-0.086191],[-9.277539],[-3.804058],[1.676222],[-5.227716],[-1.126065],[3.881573],[2.861173],[6.415068],[7.663536],[0.698267],[7.506252],[8.973360],[3.429846],[6.723926],[-2.040229],[9.019768],[7.720310],[-5.519001],[-0.560223],[1.390017],[-6.567376],[-2.588416],[7.073045],[5.151134],[9.731191],[7.795723],[5.548136],[-0.183418],[-5.765192],[6.326410],[1.515517],[-8.773855],[-0.407589],[6.412425],[3.628810],[9.609236],[2.521080],[4.661306],[4.729940],[-0.263406],[6.464152],[9.472812],[-1.399633],[1.360083],[-8.043910],[5.967345],[-2.070174],[-0.595727],[-1.898495],[3.230129],[-5.979773],[9.776461],[-5.860104],[0.737030],[3.869545],[-3.203063],[7.992038],[3.572843],[2.164946],[1.324746],[0.576538],[9.597124],[-7.830674],[2.424878],[7.586906],[-7.279635],[7.267149],[-1.763882],[1.959957],[-2.204333],[7.562786],[7.500161],[-6.276242],[-5.665946],[-0.954781],[9.838677],[-9.607299],[0.895547],[4.205334],[-4.501991],[6.936761],[-9.623142],[-5.177607],[0.805753],[-8.229126],[7.793648],[-4.642971],[9.638478],[9.569993],[4.985997],[9.504824],[-5.097898],[5.310376],[-3.923757],[-1.101303],[-1.455689],[5.214325],[-9.052044],[0.834608],[7.538442],[0.753730],[4.730345],[-2.939290],[1.967921],[-7.757947],[1.534804],[8.634091],[1.986989],[2.953895],[6.083236],[-4.357042],[2.015068],[1.479436],[-5.324795],[2.062129],[-4.002615],[-8.572713],[3.034522],[-6.517214],[-3.083006],[3.364943],[-0.865324],[4.078103],[3.397276],[1.800670],[-7.648264],[-6.358267],[-9.538549],[-1.683441],[-3.840975],[-7.861765],[-3.749412],[-6.613665],[7.064736],[-0.328052],[7.894818],[2.327134],[7.900677],[-6.617946],[6.687968],[1.681918],[4.381949],[-3.397559],[9.748179],[-2.598231],[-7.633517],[2.311687],[7.388436],[-8.180616],[-5.011202],[2.119624],[-2.393496],[-0.450843],[7.028528],[4.757247],[-6.147584],[0.860848],[-9.157843],[9.245299],[-0.878420],[-4.774036],[5.959046],[6.793231],[6.278077],[1.348033],[8.074423],[-4.398408],[-8.128414],[2.280273],[5.281894],[-9.786859],[0.563136],[3.482456],[9.994728],[-4.136987],[5.215519],[5.403617],[-3.461710],[4.965947],[-3.844040],[5.194889],[0.986031],[-2.920948],[-5.809445],[-5.314399],[-8.847813],[-4.020563],[-1.010609],[0.622469],[-7.231539],[4.870292],[-2.448522],[-9.817576],[2.588445],[0.701902],[7.848959],[7.798203],[-9.632620],[-1.855748],[2.956246],[-0.119018],[9.867336],[-5.705556],[-4.569328],[-9.332691],[8.706129],[-0.239986],[-9.345701],[-1.537137],[8.330620],[5.324252],[-6.353251],[0.994581],[-8.874883],[-2.773815],[-4.540505],[2.902933],[1.560433],[2.642468],[-4.091538],[-7.771400],[4.596191],[4.930039],[-7.466481],[-6.621986],[3.437079],[-7.975596],[-3.881703],[-6.504209],[4.470410],[6.213364],[4.383836],[1.560160],[-6.073155],[9.888814],[-8.337295],[-1.178588],[-1.119512],[2.605510],[2.214561],[-2.025547],[-5.904591],[-3.835023],[1.082151],[3.818373],[3.980252],[-1.907889],[-4.059670],[7.174309],[5.936415],[7.836798],[1.892539],[3.877829],[6.446182],[-3.714696],[-6.741717],[-8.713651],[9.448600],[-9.576143],[4.841842],[5.317198],[-4.990155],[-8.183998],[8.746113],[9.525568],[-8.256655],[6.074034],[-4.141552],[8.337957],[1.575371],[-5.582609],[1.792606],[-4.096544],[6.771452],[0.512738],[3.079404],[-3.924392],[-2.933774],[-4.208752],[-8.985250],[-6.145468],[-0.630604],[-3.186218],[2.779711],[-3.427305],[0.019023],[-4.260010],[6.417345],[1.208482],[3.358994],[-6.318680],[3.761854],[-4.280520],[0.524924],[-6.103818],[-9.410682],[-7.106402],[-2.155986],[0.124376],[-5.763450],[-3.372829],[-3.757927],[-5.408462],[-4.897803],[2.009441],[-1.589255],[-4.895280],[-5.371495],[-5.135409],[3.777631],[7.810041],[7.056289],[-8.255532],[8.388216],[7.911187],[1.360156],[1.776653],[3.003010],[-8.681080],[-4.408458],[8.810578],[0.661724],[-3.472542],[9.747880],[6.931565],[0.630142],[-5.020966],[-5.529596],[-1.808821],[0.371019],[2.871144],[-1.957861],[-9.713590],[5.699386],[9.888432],[-6.892991],[-1.384724],[-9.009141],[4.235934],[7.338946],[-7.515544],[-6.348715],[-4.632430],[2.788736],[-0.735238],[-0.369282],[2.709368],[-7.280730],[-2.347621],[-1.865987],[7.244140]], dtype = "float32")#candidate|8115|(495, 1)|const|float32
const_8116 = relay.const([1.200402,3.616659,-5.124616,7.282660,-8.099759,8.940448,4.919942,-4.115822,-7.154455,-7.037370,-7.783824,-5.061887,-4.434153,2.556094,5.528895,9.472638,-6.527336,-6.703895,-1.251802,0.927919,2.098246,-0.282784,-0.130721,-1.976462,-9.632552,4.979248,-7.848562,-7.375086,-3.735498,-1.671150,5.953297,-3.255659,-4.815371,7.826919,-5.607422,0.674982,4.086697,-8.517250,2.311758,-1.281735,3.482259,-9.632036,3.118543,-3.927610,-7.105025,-2.479748,-2.797859,2.546894,1.669766,8.448647,4.605338,1.294016,-9.250646,-1.276187,-2.916577,-8.349798,5.655515,7.869666,6.752733,-1.193037,-9.227171,7.599003,9.288346,5.405270,6.150420,-9.450426,-3.531456,-4.001091,-8.363904,-3.016852,3.828203,-8.379215,6.284871,-4.269974,-6.873481,-2.814290,4.485642,2.382738,7.682350,1.741574,-2.933464,4.129517,2.752595,1.129911,6.051208,-6.665362,-8.942208,4.857073,6.787283,-3.783042,-6.307704,-5.395871,6.267414,-7.630425,0.189740,0.893141,1.602092,-9.823721,-4.123618,-3.749540,5.201127,2.476862,-6.439491,0.317224,-2.575540,7.907826,-8.462554,-1.584089,0.602110,-5.670056,-0.033938,-3.523762,4.785634,-5.101495,7.412812,8.091520,5.197172,-2.129023,6.399971,9.541468,-3.718918,-6.087526,6.252317,-1.803187,4.166020,4.081491,-0.653789,3.909994,-0.323244,-9.536086,7.440360,-3.692826,-6.053709,-1.162809,-3.778622,3.315352,-8.173298,5.833355,-7.340960,-3.361509,8.679587,2.293323,-4.744915,3.812009,-5.731430,-9.502842,7.604335,-2.742259,6.994369,9.197089,6.232460,-4.147391,-7.226211,4.834668,1.431855,-8.055419,5.014882,0.230088,-0.098710,-5.399606,-4.246502,-0.715954,0.264099,7.812308,0.012956,-8.073329,6.400349,-4.028231,-7.868135,-9.507201,-7.046543,-4.142914,-4.662593,4.343270,-1.400391,8.952504,-7.226430,-3.790059,-5.111230,-0.475373,-4.270410,-2.464636,-3.868398,0.602844,-5.468700,-8.697279,-1.591653,-0.163757,-3.262872,-4.856221,7.666349,1.981837,5.835621,4.847617,0.052957,-7.482423,-8.668768,2.025498,2.742522,-6.753331,-5.593023,-8.926158,3.643642,4.444184,-0.932142,9.800645,6.335630,7.312568,-0.362052,4.581817,3.601978,-0.561630,-8.093411,-7.707896,-9.965927,-3.092761,6.537107,-3.305645,3.676315,6.376373,6.905103,-8.684011,7.604564,8.870303,-7.244157,-5.301770,-1.668069,-2.198760,-3.568421,4.768455,1.187618,-5.935302,-0.660334,3.288771,-9.876261,-1.477033,3.160577,0.748801,-9.353887,0.589149,8.783283,-8.097950,-9.779629,-5.475119,0.782345,6.937215,2.016942,-6.674444,-1.203793,-3.337248,-1.957254,-0.823603,2.038644,-1.738241,2.592156,-5.154171,5.035259,-0.914685,2.878407,2.406219,-8.684162,8.363247,-8.436482,-8.583464,-4.155778,1.895621,4.576774,-5.274924,7.232624,-5.477822,-7.173880,5.643283,-4.353785,0.226059,8.700589,-2.578508,-2.901688,8.237353,4.455610,5.853915,-3.383916,-5.563066,9.301676,-8.826493,-0.745043,4.569705,-3.246951,-0.548780,-8.616955,-8.851020,-6.331120,-1.003461,6.955475,6.096926,8.736475,-8.307562,-8.263257,1.262700,7.241220,-3.001459,-5.420920,0.771379,9.699951,4.994203,3.369683,1.373336,4.575708,-4.493008,5.698150,5.211210,3.793714,0.986975,3.586966,1.598038,-8.545377,-8.964882,3.700208,0.373489,3.344179,-4.262863,1.948257,5.567439,1.932564,3.711421,3.352996,6.909598,-2.511060,-7.544947,0.497495,-3.639329,-7.158299,1.139576,-7.667843,-4.365081,5.879026,2.837756,-2.221243,1.259271,-0.877297,-1.660540,-6.856395,-9.029848,-8.566894,-7.717344,-1.225343,-3.394992,9.462232,-6.827357,-1.315216,4.128251,-9.939754,-4.709184,3.351370,-2.483293,-2.881469,-2.472281,6.652955,0.361030,9.785027,0.913195,0.913515,-3.578262,5.466849,-4.387045,7.069916,-7.961317,-3.729115,-0.356789,-6.350277,-7.566173,-4.879519,0.038412,6.413569,4.994063,-9.601988,6.854191,-8.969708,-2.248044,-2.239980,-8.429099,3.507470,8.957125,3.212464,8.498166,0.395835,6.048243,-0.681587,0.832922,2.869093,2.356515,6.301365,3.812374,-0.212277,-7.353629,3.214090,6.705695,6.184078,-9.487677,-5.634102,-3.048621,6.230520,1.626592,5.888324,-3.671064,-3.796560,-4.611795,-7.438068,2.888710,-3.865840,4.337701,-8.830543,-6.650622,-9.087043,2.135474,-2.516775,-8.923019,0.464963,-6.335969,-5.754393,4.265652,-3.054695,-1.588208,-1.333380,7.199529,6.959155,-3.684068,8.677677,9.125474,3.271660,5.563744,0.359776,-9.360419,7.567953,9.836160,2.635867,-4.472122,-1.607255,-2.008126,1.382566,8.137136,-9.401440,-3.102781,-9.570258,3.396918,-1.085413,-0.382421,-9.784664,-3.874175,6.562312,8.067699,9.898288,-7.267383,0.541354,-6.673749,-2.742752,7.665548,6.245847,4.919463,-1.058016,0.341357,7.506223,-6.775511,-1.851271,0.620788,-6.256800,-8.406005,9.978027,0.940132,3.405552,4.188000,-3.544813,6.378542,-6.375208,7.235912,1.738826,-4.178340,-8.727473,7.227088,3.385013,-3.805922,0.041180,5.635512,3.666516,6.408677,-1.382086,0.536948,-9.451188,-0.057686,9.620371,8.729327,8.836626,1.474508,-2.903903,-3.066055,8.047785,3.662926,-5.240299,9.729123,6.316081,-1.139057,8.768959,-4.859385,-7.021545,7.331987,2.144340,9.962352,-6.332598,-7.708838,9.375116,-7.423237,-0.889604,1.112294,1.022751,-4.464261,-6.568835,-9.029307,-5.173140,9.738903,-6.453989,-7.532630,4.405980,-9.096648,-5.511004,-2.049140,6.290318,7.737276,-5.958172,-2.152178,8.590815,-1.237945,-9.741636,-0.664697,-7.163753,4.065163,-6.528790,-0.834491,3.264569,3.529414,2.589853,6.148927,-1.363926,-0.833790,-8.986779,-1.816904,-9.372751,9.019700,-5.668048,3.972045,7.524350,4.484773,7.919644,6.067325,-2.625174,-6.757716,-8.691487,-7.837355,-8.792869,0.453334,-8.815662,4.569299,-4.619095,3.164059,-9.045723,4.905637,7.629041,9.014247,-5.656867,-4.112702,8.260249,4.155229,-1.157810,-3.021477,-3.749982,3.733404,-6.413828,2.303096,1.831109,7.156644,-7.903905,2.686251,8.543715,-1.805937,0.609469,-5.109419,5.831678,-1.413457,8.047940,3.131071,-8.382488,-8.197647,1.409982,-1.637267,-9.132143,-0.754124,-6.134320,2.881172,-4.119151,-8.011840,-2.470459,-0.243042,-8.293655,6.246193,5.041873,3.675151,-4.062204,-8.294692,-3.256091,-0.413131,-0.910235,1.338095,8.175961,-7.203285,-9.573471,8.783387,4.419351,-8.842679,7.525643,-8.914337,-4.050082,-8.091685,8.029316,-0.637308,0.632966,4.653912,4.446188,6.594163,2.483696,-5.881042,-0.045321,-8.110520,0.106577,9.860656,-7.212918,-2.242389,1.947850,4.530170,0.316520,-0.085255,5.082884,7.388044,-7.553694,4.757867,-9.745852,4.563645,0.682140,9.054630,9.052904,7.786018,-6.714424,-5.501399,2.560761,-3.058429,-4.564180,8.667430,-9.257623,-7.703101,7.388218,-1.844063,-8.063748,-4.042944,2.253528,-8.368019,-7.306566,0.417184,4.905063,4.386098,5.432211,-6.519129,-6.924356,3.501635,-9.754978,-1.548052,1.659671,9.302667,-7.986850,-8.200393,8.583540,-4.583738,-0.672034,-7.929258,-3.743489,-4.944452,-7.848643,3.071696,8.179226,2.429967,-2.088643,3.477745,0.756100,9.232857,9.942127,6.441805,2.728433,-6.829018,9.081757,4.477074,-4.785702,-5.545618,-6.166033,-5.900253,-1.834936,0.655752,3.243345,0.196159,-3.941144,-4.375792,-2.297820,-2.003217,-8.711551,4.790100,-9.981669,8.015557,1.752146,8.472647,7.203637,3.906738,4.530031,-2.483516,5.394029,7.713728,0.023177,1.118797,-2.962567,4.982989,9.843011,-4.067695,2.425152,-8.262861], dtype = "float64")#candidate|8116|(728,)|const|float64
call_8114 = relay.TupleGetItem(func_6820_call(relay.reshape(const_8115.astype('float32'), [5, 9, 11]), relay.reshape(const_8116.astype('float64'), [364, 2]), ), 3)
call_8117 = relay.TupleGetItem(func_6823_call(relay.reshape(const_8115.astype('float32'), [5, 9, 11]), relay.reshape(const_8116.astype('float64'), [364, 2]), ), 3)
func_5218_call = mod.get_global_var('func_5218')
func_5219_call = mutated_mod.get_global_var('func_5219')
call_8120 = relay.TupleGetItem(func_5218_call(), 0)
call_8121 = relay.TupleGetItem(func_5219_call(), 0)
bop_8134 = relay.greater(const_8116.astype('bool'), const_8115.astype('bool')) # shape=(495, 728)
var_8139 = relay.var("var_8139", dtype = "float64", shape = (728,))#candidate|8139|(728,)|var|float64
bop_8140 = relay.not_equal(const_8116.astype('bool'), relay.reshape(var_8139.astype('bool'), relay.shape_of(const_8116))) # shape=(728,)
bop_8148 = relay.add(const_8116.astype('float32'), bop_8134.astype('float32')) # shape=(495, 728)
func_8088_call = mod.get_global_var('func_8088')
func_8090_call = mutated_mod.get_global_var('func_8090')
call_8151 = func_8088_call()
call_8152 = func_8088_call()
output = relay.Tuple([call_8104,call_8114,call_8120,bop_8140,bop_8148,call_8151,])
output2 = relay.Tuple([call_8105,call_8117,call_8121,bop_8140,bop_8148,call_8152,])
func_8156 = relay.Function([var_8139,], output)
mod['func_8156'] = func_8156
mod = relay.transform.InferType()(mod)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8157 = relay.var("var_8157", dtype = "float64", shape = (728,))#candidate|8157|(728,)|var|float64
func_8156_call = mutated_mod.get_global_var('func_8156')
call_8158 = func_8156_call(var_8157)
output = call_8158
func_8159 = relay.Function([var_8157], output)
mutated_mod['func_8159'] = func_8159
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8202 = relay.var("var_8202", dtype = "float64", shape = (16, 11, 15))#candidate|8202|(16, 11, 15)|var|float64
var_8203 = relay.var("var_8203", dtype = "float64", shape = (16, 11, 15))#candidate|8203|(16, 11, 15)|var|float64
bop_8204 = relay.mod(var_8202.astype('float64'), relay.reshape(var_8203.astype('float64'), relay.shape_of(var_8202))) # shape=(16, 11, 15)
output = relay.Tuple([bop_8204,])
output2 = relay.Tuple([bop_8204,])
func_8236 = relay.Function([var_8202,var_8203,], output)
mod['func_8236'] = func_8236
mod = relay.transform.InferType()(mod)
var_8237 = relay.var("var_8237", dtype = "float64", shape = (16, 11, 15))#candidate|8237|(16, 11, 15)|var|float64
var_8238 = relay.var("var_8238", dtype = "float64", shape = (16, 11, 15))#candidate|8238|(16, 11, 15)|var|float64
output = func_8236(var_8237,var_8238,)
func_8239 = relay.Function([var_8237,var_8238,], output)
mutated_mod['func_8239'] = func_8239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8274 = relay.var("var_8274", dtype = "float32", shape = (4, 4, 11))#candidate|8274|(4, 4, 11)|var|float32
uop_8275 = relay.acos(var_8274.astype('float32')) # shape=(4, 4, 11)
output = uop_8275
output2 = uop_8275
func_8289 = relay.Function([var_8274,], output)
mod['func_8289'] = func_8289
mod = relay.transform.InferType()(mod)
var_8290 = relay.var("var_8290", dtype = "float32", shape = (4, 4, 11))#candidate|8290|(4, 4, 11)|var|float32
output = func_8289(var_8290)
func_8291 = relay.Function([var_8290], output)
mutated_mod['func_8291'] = func_8291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8301 = relay.var("var_8301", dtype = "float32", shape = (1, 9, 9))#candidate|8301|(1, 9, 9)|var|float32
uop_8302 = relay.cos(var_8301.astype('float32')) # shape=(1, 9, 9)
bop_8309 = relay.divide(uop_8302.astype('float64'), relay.reshape(var_8301.astype('float64'), relay.shape_of(uop_8302))) # shape=(1, 9, 9)
func_7600_call = mod.get_global_var('func_7600')
func_7601_call = mutated_mod.get_global_var('func_7601')
call_8314 = relay.TupleGetItem(func_7600_call(), 0)
call_8315 = relay.TupleGetItem(func_7601_call(), 0)
output = relay.Tuple([bop_8309,call_8314,])
output2 = relay.Tuple([bop_8309,call_8315,])
func_8321 = relay.Function([var_8301,], output)
mod['func_8321'] = func_8321
mod = relay.transform.InferType()(mod)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8322 = relay.var("var_8322", dtype = "float32", shape = (1, 9, 9))#candidate|8322|(1, 9, 9)|var|float32
func_8321_call = mutated_mod.get_global_var('func_8321')
call_8323 = func_8321_call(var_8322)
output = call_8323
func_8324 = relay.Function([var_8322], output)
mutated_mod['func_8324'] = func_8324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8373 = relay.var("var_8373", dtype = "int8", shape = (1, 7, 4))#candidate|8373|(1, 7, 4)|var|int8
var_8374 = relay.var("var_8374", dtype = "int8", shape = (12, 7, 4))#candidate|8374|(12, 7, 4)|var|int8
bop_8375 = relay.bitwise_and(var_8373.astype('int8'), var_8374.astype('int8')) # shape=(12, 7, 4)
var_8378 = relay.var("var_8378", dtype = "int8", shape = (12, 7, 4))#candidate|8378|(12, 7, 4)|var|int8
bop_8379 = relay.not_equal(bop_8375.astype('bool'), relay.reshape(var_8378.astype('bool'), relay.shape_of(bop_8375))) # shape=(12, 7, 4)
bop_8384 = relay.minimum(var_8374.astype('uint32'), relay.reshape(bop_8375.astype('uint32'), relay.shape_of(var_8374))) # shape=(12, 7, 4)
bop_8403 = relay.less_equal(bop_8379.astype('bool'), relay.reshape(bop_8384.astype('bool'), relay.shape_of(bop_8379))) # shape=(12, 7, 4)
uop_8407 = relay.log2(var_8373.astype('float64')) # shape=(1, 7, 4)
output = relay.Tuple([bop_8403,uop_8407,])
output2 = relay.Tuple([bop_8403,uop_8407,])
func_8409 = relay.Function([var_8373,var_8374,var_8378,], output)
mod['func_8409'] = func_8409
mod = relay.transform.InferType()(mod)
var_8410 = relay.var("var_8410", dtype = "int8", shape = (1, 7, 4))#candidate|8410|(1, 7, 4)|var|int8
var_8411 = relay.var("var_8411", dtype = "int8", shape = (12, 7, 4))#candidate|8411|(12, 7, 4)|var|int8
var_8412 = relay.var("var_8412", dtype = "int8", shape = (12, 7, 4))#candidate|8412|(12, 7, 4)|var|int8
output = func_8409(var_8410,var_8411,var_8412,)
func_8413 = relay.Function([var_8410,var_8411,var_8412,], output)
mutated_mod['func_8413'] = func_8413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7097_call = mod.get_global_var('func_7097')
func_7098_call = mutated_mod.get_global_var('func_7098')
call_8435 = func_7097_call()
call_8436 = func_7097_call()
func_4500_call = mod.get_global_var('func_4500')
func_4502_call = mutated_mod.get_global_var('func_4502')
call_8441 = relay.TupleGetItem(func_4500_call(), 0)
call_8442 = relay.TupleGetItem(func_4502_call(), 0)
output = relay.Tuple([call_8435,call_8441,])
output2 = relay.Tuple([call_8436,call_8442,])
func_8486 = relay.Function([], output)
mod['func_8486'] = func_8486
mod = relay.transform.InferType()(mod)
mutated_mod['func_8486'] = func_8486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8486_call = mutated_mod.get_global_var('func_8486')
call_8487 = func_8486_call()
output = call_8487
func_8488 = relay.Function([], output)
mutated_mod['func_8488'] = func_8488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7902_call = mod.get_global_var('func_7902')
func_7904_call = mutated_mod.get_global_var('func_7904')
call_8560 = relay.TupleGetItem(func_7902_call(), 0)
call_8561 = relay.TupleGetItem(func_7904_call(), 0)
func_4088_call = mod.get_global_var('func_4088')
func_4090_call = mutated_mod.get_global_var('func_4090')
call_8576 = relay.TupleGetItem(func_4088_call(), 1)
call_8577 = relay.TupleGetItem(func_4090_call(), 1)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_8588 = func_2281_call()
call_8589 = func_2281_call()
output = relay.Tuple([call_8560,call_8576,call_8588,])
output2 = relay.Tuple([call_8561,call_8577,call_8589,])
func_8613 = relay.Function([], output)
mod['func_8613'] = func_8613
mod = relay.transform.InferType()(mod)
output = func_8613()
func_8614 = relay.Function([], output)
mutated_mod['func_8614'] = func_8614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_8657 = func_3093_call()
call_8658 = func_3093_call()
output = relay.Tuple([call_8657,])
output2 = relay.Tuple([call_8658,])
func_8662 = relay.Function([], output)
mod['func_8662'] = func_8662
mod = relay.transform.InferType()(mod)
mutated_mod['func_8662'] = func_8662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8662_call = mutated_mod.get_global_var('func_8662')
call_8663 = func_8662_call()
output = call_8663
func_8664 = relay.Function([], output)
mutated_mod['func_8664'] = func_8664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8707 = relay.var("var_8707", dtype = "int8", shape = (5, 3, 3))#candidate|8707|(5, 3, 3)|var|int8
var_8708 = relay.var("var_8708", dtype = "int8", shape = (5, 3, 3))#candidate|8708|(5, 3, 3)|var|int8
bop_8709 = relay.right_shift(var_8707.astype('int8'), relay.reshape(var_8708.astype('int8'), relay.shape_of(var_8707))) # shape=(5, 3, 3)
func_7525_call = mod.get_global_var('func_7525')
func_7528_call = mutated_mod.get_global_var('func_7528')
var_8715 = relay.var("var_8715", dtype = "float64", shape = (896,))#candidate|8715|(896,)|var|float64
call_8714 = relay.TupleGetItem(func_7525_call(relay.reshape(var_8715.astype('float64'), [16, 8, 7])), 1)
call_8716 = relay.TupleGetItem(func_7528_call(relay.reshape(var_8715.astype('float64'), [16, 8, 7])), 1)
var_8723 = relay.var("var_8723", dtype = "float64", shape = (896,))#candidate|8723|(896,)|var|float64
bop_8724 = relay.less(var_8715.astype('bool'), relay.reshape(var_8723.astype('bool'), relay.shape_of(var_8715))) # shape=(896,)
func_6036_call = mod.get_global_var('func_6036')
func_6037_call = mutated_mod.get_global_var('func_6037')
call_8732 = relay.TupleGetItem(func_6036_call(), 2)
call_8733 = relay.TupleGetItem(func_6037_call(), 2)
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
var_8735 = relay.var("var_8735", dtype = "int8", shape = (20,))#candidate|8735|(20,)|var|int8
call_8734 = relay.TupleGetItem(func_1229_call(relay.reshape(var_8735.astype('int8'), [20,])), 0)
call_8736 = relay.TupleGetItem(func_1232_call(relay.reshape(var_8735.astype('int8'), [20,])), 0)
func_1333_call = mod.get_global_var('func_1333')
func_1335_call = mutated_mod.get_global_var('func_1335')
call_8751 = func_1333_call()
call_8752 = func_1333_call()
func_556_call = mod.get_global_var('func_556')
func_561_call = mutated_mod.get_global_var('func_561')
var_8756 = relay.var("var_8756", dtype = "float64", shape = (1800,))#candidate|8756|(1800,)|var|float64
call_8755 = relay.TupleGetItem(func_556_call(relay.reshape(var_8756.astype('float64'), [8, 15, 15]), relay.reshape(var_8756.astype('float64'), [8, 15, 15]), relay.reshape(var_8756.astype('float64'), [8, 15, 15]), ), 2)
call_8757 = relay.TupleGetItem(func_561_call(relay.reshape(var_8756.astype('float64'), [8, 15, 15]), relay.reshape(var_8756.astype('float64'), [8, 15, 15]), relay.reshape(var_8756.astype('float64'), [8, 15, 15]), ), 2)
output = relay.Tuple([bop_8709,call_8714,bop_8724,call_8732,call_8734,var_8735,call_8751,call_8755,var_8756,])
output2 = relay.Tuple([bop_8709,call_8716,bop_8724,call_8733,call_8736,var_8735,call_8752,call_8757,var_8756,])
func_8760 = relay.Function([var_8707,var_8708,var_8715,var_8723,var_8735,var_8756,], output)
mod['func_8760'] = func_8760
mod = relay.transform.InferType()(mod)
mutated_mod['func_8760'] = func_8760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mutated_mod.get_global_var('func_8760')
var_8762 = relay.var("var_8762", dtype = "int8", shape = (5, 3, 3))#candidate|8762|(5, 3, 3)|var|int8
var_8763 = relay.var("var_8763", dtype = "int8", shape = (5, 3, 3))#candidate|8763|(5, 3, 3)|var|int8
var_8764 = relay.var("var_8764", dtype = "float64", shape = (896,))#candidate|8764|(896,)|var|float64
var_8765 = relay.var("var_8765", dtype = "float64", shape = (896,))#candidate|8765|(896,)|var|float64
var_8766 = relay.var("var_8766", dtype = "int8", shape = (20,))#candidate|8766|(20,)|var|int8
var_8767 = relay.var("var_8767", dtype = "float64", shape = (1800,))#candidate|8767|(1800,)|var|float64
call_8761 = func_8760_call(var_8762,var_8763,var_8764,var_8765,var_8766,var_8767,)
output = call_8761
func_8768 = relay.Function([var_8762,var_8763,var_8764,var_8765,var_8766,var_8767,], output)
mutated_mod['func_8768'] = func_8768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1885_call = mod.get_global_var('func_1885')
func_1886_call = mutated_mod.get_global_var('func_1886')
call_8789 = relay.TupleGetItem(func_1885_call(), 1)
call_8790 = relay.TupleGetItem(func_1886_call(), 1)
output = relay.Tuple([call_8789,])
output2 = relay.Tuple([call_8790,])
func_8806 = relay.Function([], output)
mod['func_8806'] = func_8806
mod = relay.transform.InferType()(mod)
mutated_mod['func_8806'] = func_8806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8806_call = mutated_mod.get_global_var('func_8806')
call_8807 = func_8806_call()
output = call_8807
func_8808 = relay.Function([], output)
mutated_mod['func_8808'] = func_8808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4088_call = mod.get_global_var('func_4088')
func_4090_call = mutated_mod.get_global_var('func_4090')
call_8820 = relay.TupleGetItem(func_4088_call(), 1)
call_8821 = relay.TupleGetItem(func_4090_call(), 1)
func_6820_call = mod.get_global_var('func_6820')
func_6823_call = mutated_mod.get_global_var('func_6823')
var_8823 = relay.var("var_8823", dtype = "float32", shape = (55, 9))#candidate|8823|(55, 9)|var|float32
var_8824 = relay.var("var_8824", dtype = "float64", shape = (728,))#candidate|8824|(728,)|var|float64
call_8822 = relay.TupleGetItem(func_6820_call(relay.reshape(var_8823.astype('float32'), [5, 9, 11]), relay.reshape(var_8824.astype('float64'), [364, 2]), ), 2)
call_8825 = relay.TupleGetItem(func_6823_call(relay.reshape(var_8823.astype('float32'), [5, 9, 11]), relay.reshape(var_8824.astype('float64'), [364, 2]), ), 2)
output = relay.Tuple([call_8820,call_8822,var_8823,var_8824,])
output2 = relay.Tuple([call_8821,call_8825,var_8823,var_8824,])
func_8846 = relay.Function([var_8823,var_8824,], output)
mod['func_8846'] = func_8846
mod = relay.transform.InferType()(mod)
mutated_mod['func_8846'] = func_8846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8846_call = mutated_mod.get_global_var('func_8846')
var_8848 = relay.var("var_8848", dtype = "float32", shape = (55, 9))#candidate|8848|(55, 9)|var|float32
var_8849 = relay.var("var_8849", dtype = "float64", shape = (728,))#candidate|8849|(728,)|var|float64
call_8847 = func_8846_call(var_8848,var_8849,)
output = call_8847
func_8850 = relay.Function([var_8848,var_8849,], output)
mutated_mod['func_8850'] = func_8850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_8852 = relay.TupleGetItem(func_2621_call(), 1)
call_8853 = relay.TupleGetItem(func_2623_call(), 1)
func_5218_call = mod.get_global_var('func_5218')
func_5219_call = mutated_mod.get_global_var('func_5219')
call_8863 = relay.TupleGetItem(func_5218_call(), 0)
call_8864 = relay.TupleGetItem(func_5219_call(), 0)
output = relay.Tuple([call_8852,call_8863,])
output2 = relay.Tuple([call_8853,call_8864,])
func_8882 = relay.Function([], output)
mod['func_8882'] = func_8882
mod = relay.transform.InferType()(mod)
mutated_mod['func_8882'] = func_8882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8882_call = mutated_mod.get_global_var('func_8882')
call_8883 = func_8882_call()
output = call_8883
func_8884 = relay.Function([], output)
mutated_mod['func_8884'] = func_8884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1731_call = mod.get_global_var('func_1731')
func_1732_call = mutated_mod.get_global_var('func_1732')
call_8930 = func_1731_call()
call_8931 = func_1731_call()
func_5627_call = mod.get_global_var('func_5627')
func_5629_call = mutated_mod.get_global_var('func_5629')
call_8952 = relay.TupleGetItem(func_5627_call(), 0)
call_8953 = relay.TupleGetItem(func_5629_call(), 0)
const_8970 = relay.const([[[2.771611,9.537848,6.934652,-1.007598,4.337932,-3.389986,-9.800688,6.194767],[-9.004870,4.314959,-7.092085,-1.756102,3.992381,-5.014088,-5.183336,-8.809394],[-3.893408,-5.345812,-6.078460,8.563113,2.917565,-0.248930,7.275995,-8.862628],[0.923181,-8.949093,7.538045,-1.817668,-3.236378,-5.900677,-1.537858,-6.599801],[-4.005430,8.268928,8.610114,4.266175,-6.009773,-9.720692,2.783855,9.945046],[0.496748,-2.240577,4.944559,2.495353,-8.803274,-8.180059,9.574107,8.987423],[-5.094159,-5.471964,-0.777220,-4.023507,3.051394,-0.355711,6.188755,-7.847800],[-4.920081,-6.196552,7.870235,4.659094,2.563318,0.951146,-4.256385,4.380423],[6.669429,7.115484,7.391796,-6.326124,-2.152964,4.718014,9.809800,-9.768345]],[[-9.224146,9.561449,8.710008,7.724367,-8.477894,8.523648,-9.639208,3.937002],[-0.454305,9.973099,-6.799955,6.237970,-8.739375,5.396875,-2.121563,9.411914],[-8.385206,-7.077558,3.759219,-2.590247,-1.716208,7.527498,-2.472849,-2.619174],[7.489435,-6.461106,-3.516362,-3.876973,-0.981895,-9.174327,-5.780950,-2.492812],[-8.227875,-3.210731,-5.554435,5.445949,-1.164272,3.191138,-7.050779,1.188239],[6.214683,2.634370,4.754828,6.787964,8.798295,-2.137635,5.297883,-8.048896],[-8.173537,-8.877099,-4.876005,8.394669,-7.256962,0.094839,4.503993,-9.531439],[9.522752,-7.441630,7.814621,-6.039276,7.742162,-9.095920,3.354248,-7.248498],[8.828702,3.622448,-7.881212,-3.494575,9.076806,0.270727,2.177162,-0.952542]],[[-4.511523,7.058744,-7.515427,-3.991006,4.558708,-4.729676,-3.663876,-0.633421],[9.736629,1.557903,-2.116423,-8.576176,3.505926,-3.623968,6.123716,9.348278],[4.090711,-3.752099,0.484841,5.105590,9.735891,1.566889,-6.145445,-4.577135],[8.935028,-5.253924,1.703588,-6.492240,-0.174258,6.070354,6.946667,6.514990],[-4.824379,-1.736753,8.406526,-5.092374,3.748553,-2.532732,3.425389,-4.524182],[-4.350577,-4.337735,2.378458,-6.891873,-7.224781,-5.078786,0.466977,-2.499161],[5.187198,3.829621,2.863683,4.059861,0.557268,-2.657750,-1.619468,-7.518344],[1.978957,9.619045,2.198633,5.779872,5.836633,2.614262,5.613463,-5.662051],[-8.304244,6.211763,6.420594,-1.335087,-8.675340,2.744830,6.078331,4.102711]],[[3.768649,-7.914536,7.543127,-3.136518,1.970338,9.010130,7.352640,0.272234],[1.856361,7.559553,3.220118,2.813114,3.006209,0.837829,-1.231015,9.938516],[2.926400,-6.672039,7.308620,6.937408,-8.361410,-1.885088,0.358179,4.942666],[-1.300725,3.852036,1.454963,-6.274388,-9.919569,9.285017,-9.080786,-6.215051],[-4.698672,-5.079131,4.401754,-5.972911,-9.966840,7.846050,-4.783453,-3.392241],[-9.578080,0.162947,9.420406,-5.158579,5.004714,-9.724769,-8.047905,5.689028],[-2.757550,9.814637,7.004829,1.577759,-3.547200,3.280355,-8.019731,4.827139],[-3.442967,-7.926137,-4.282110,8.047372,-7.426705,-0.159481,-6.253040,-6.089530],[6.794032,-5.744569,4.315377,4.454392,-7.142640,7.776757,-3.505631,2.135387]],[[4.166511,-6.519452,-1.414380,3.224111,-0.738459,-8.432095,1.469447,0.314025],[-7.139316,3.637727,3.797380,2.708295,-2.646311,-0.270492,6.814443,2.946537],[1.842085,2.721491,9.867924,7.354908,-6.138628,-9.138120,-4.882893,-3.087334],[7.861439,-4.575294,-8.217053,-3.297294,-0.967346,-9.877186,6.930020,-1.262145],[6.100021,-7.382933,-6.045319,-9.155115,8.919477,-0.421049,-1.622110,-6.978359],[1.383843,4.879415,-5.834065,-6.565153,-7.319522,3.080459,-3.687236,6.293338],[4.122958,-2.274204,2.856879,-2.178307,6.861568,-7.181120,3.485931,6.072131],[9.930511,1.613268,-4.786331,4.652907,-5.611984,-4.291575,-3.331453,-8.149669],[-0.531137,-2.849052,-9.782470,-8.195396,4.477925,3.651761,-5.002196,6.018691]]], dtype = "float32")#candidate|8970|(5, 9, 8)|const|float32
bop_8971 = relay.add(call_8952.astype('uint16'), relay.reshape(const_8970.astype('uint16'), relay.shape_of(call_8952))) # shape=(5, 9, 8)
bop_8974 = relay.add(call_8953.astype('uint16'), relay.reshape(const_8970.astype('uint16'), relay.shape_of(call_8953))) # shape=(5, 9, 8)
func_8760_call = mod.get_global_var('func_8760')
func_8768_call = mutated_mod.get_global_var('func_8768')
const_8979 = relay.const([-3,6,9,4,1,-7,2,4,-5,-3,-8,-10,7,-5,2,-3,-1,3,-6,9,-10,6,8,2,-10,2,9,-10,-4,9,9,3,3,-3,4,8,10,-6,6,4,2,-4,2,1,9], dtype = "int8")#candidate|8979|(45,)|const|int8
const_8980 = relay.const([[1.792911,-3.910927,5.370818,2.559080,0.212465,-9.524014,7.788040,6.583018,6.751298,3.412133,9.915673,-8.165164,-6.696115,-7.035040,-9.805223,0.200553,5.594566,6.806655,8.974709,-9.770293,-9.000329,-2.471316,-8.330863,1.071736,-5.302456,-5.168232,1.699286,5.978032,-1.390795,-1.276181,6.455920,-4.609446,4.669027,-0.483619,-0.506695,-7.499089,4.483344,9.825621,-4.533484,8.676191,7.947154,-5.803537,-0.613997,-9.320939,-9.689062,3.300810,-2.132525,-4.149230,6.891694,-7.595526,2.402329,2.554016,-3.616473,-4.295586,2.770805,7.014463,-7.041409,8.017124,7.156827,7.080260,6.703656,-2.760502,0.729160,7.065774],[4.667646,-1.534354,-5.215922,9.822982,-4.167272,0.632376,-0.153883,-0.748269,3.944526,1.089759,9.650161,-5.305082,-8.121458,-6.367625,9.126202,-2.840232,-6.292111,0.721424,-7.663338,0.955206,-9.017176,-8.215819,1.809475,0.504978,3.739803,-8.946873,-9.505607,8.920211,5.138013,-1.175075,7.446237,6.242056,5.560506,9.603915,3.906953,4.457034,1.897019,-7.629665,-1.950365,0.973722,5.334212,5.762087,-7.358057,-3.847549,-9.591067,-4.761114,5.063251,5.731007,-7.458732,6.229936,8.550252,-6.555723,-0.793300,-1.169981,-6.299679,-9.143862,3.390531,0.527992,-8.609928,0.706977,-8.121186,5.646391,2.659830,9.402208],[1.561572,1.298261,1.320215,7.280768,5.013146,-4.791026,-6.340381,2.933564,-2.995713,5.363329,-6.214083,-1.408169,7.604068,-4.936877,-1.213029,-5.452846,-9.960749,0.386211,9.483095,-8.879833,-3.233200,6.087212,9.545326,-4.331794,7.627246,7.111240,-2.037608,2.236717,1.916778,-4.386994,0.843860,7.032738,-8.329179,8.497551,1.577101,-3.787296,-5.007999,-4.506690,-2.318457,-5.837118,7.730902,7.750657,1.816273,3.081149,7.773655,-9.310256,-1.210097,-8.947402,-4.511329,4.527579,8.582683,7.620460,3.022012,-5.455013,-4.122330,1.132600,-5.645855,6.098982,1.155500,-6.582022,-6.032082,2.910649,-5.952017,-1.684641],[9.858676,-8.265789,4.472104,7.579873,-8.238090,9.852327,-0.136647,-5.944955,8.373958,-5.396213,-3.937718,3.330275,9.053521,0.869126,2.522018,0.876692,9.117524,7.177035,1.354933,3.918517,-0.184468,4.833364,-6.878560,7.155111,6.697147,-6.817481,-0.651871,3.336508,4.948698,4.630107,-8.479359,9.387996,2.346382,-6.322392,2.859451,-8.314242,-5.224108,-5.959890,2.496383,5.419027,5.231346,-3.113898,3.850801,-3.299043,-6.818924,0.422594,-7.097701,7.641498,-2.560647,-4.450934,3.051136,8.905640,-7.880494,-6.475652,-3.940675,1.781142,-3.320086,8.035690,6.527218,-2.254447,-9.372451,-0.404362,-7.454688,-8.681827],[5.219639,8.699231,2.407995,6.808307,-4.087818,8.969215,7.559425,7.754694,-7.997627,4.326757,-8.344988,0.980682,-4.186188,7.716708,5.060892,0.026902,-6.708333,-3.223139,2.199801,-4.862102,1.782710,-0.815439,-6.756816,-5.511318,2.575793,-5.754250,5.630606,-8.139973,9.265507,8.909663,2.282695,5.516078,9.880581,4.645836,5.572906,-8.891838,5.299496,5.965729,-3.119247,-6.120387,-2.516472,6.919595,-8.106175,6.154685,4.252725,2.144522,0.788113,7.394257,-1.679178,1.150607,-2.713136,-3.046491,8.991561,8.533605,-8.245623,3.558757,-7.737219,-4.922812,-8.805141,-3.111626,-3.999753,-9.675128,-0.559479,-5.994600],[-2.651978,4.421287,-1.189484,-2.676791,9.538633,8.878008,6.661524,-9.431509,-1.718627,-0.240809,-4.503775,-8.305374,-4.393008,-8.507498,-0.785621,5.435152,4.562756,0.878870,2.428213,8.595819,7.735316,-7.164890,8.299761,-3.027264,3.990562,-5.849166,1.074185,4.165085,6.505668,0.135238,-6.170975,-3.792504,8.777991,4.367550,6.504435,3.401849,-8.693483,4.540042,8.573239,2.030564,-8.743065,-9.801608,-6.699278,-2.294138,-7.812164,-4.735240,-6.643509,-5.890413,-0.329581,-2.483626,-1.212592,6.390174,4.548893,-9.184308,-9.506425,-3.829971,8.440477,4.888886,-2.462214,0.526184,9.935813,0.066265,-5.616229,2.645158],[-1.559021,-3.589520,0.366152,4.454937,-8.151483,2.563312,5.035457,2.611039,3.102167,-0.910593,-0.126426,-2.539521,2.155905,-4.024954,9.472491,5.487438,7.187634,-9.357265,6.626962,-8.110106,1.503601,-1.072322,7.924960,4.680014,-7.293779,-4.913295,1.144207,-6.575217,-1.466330,-1.098418,-3.235568,3.735361,5.018565,0.025939,1.452913,-4.071458,2.763349,5.630910,-0.653818,5.100585,5.207825,-3.437826,-0.576862,8.899047,2.865351,-4.735468,9.362519,9.947648,6.410296,2.641736,-7.680470,6.081827,8.067461,-7.241904,2.823841,-0.941626,4.591670,2.281340,-7.120429,4.467908,-7.032865,5.979276,1.859283,-8.544125],[1.943614,-1.522202,2.466572,-3.015421,-0.030327,3.737534,-9.768977,-6.269738,-3.336681,-3.249611,8.161095,-6.055981,2.778306,5.750298,-0.334218,-7.134955,-1.734143,-0.443684,-9.622917,-6.021540,8.654002,3.573238,3.433290,-4.312665,2.833380,-8.215311,-1.623721,9.323459,8.574053,-7.762100,-6.350042,3.214742,1.176159,9.489734,-9.595656,5.198911,1.806932,-5.692315,-3.238843,-0.688378,9.527402,-6.483353,9.289590,0.866210,2.810256,-5.078191,-0.424335,-3.004552,4.980922,-0.812145,2.468560,-7.561656,-2.291451,7.240694,6.236930,-5.259820,4.038977,-2.455175,-4.825684,8.697398,8.712853,-3.222176,2.934923,-4.827874],[-8.329885,7.810623,-4.328403,-5.092985,-2.791129,5.608955,5.054710,-1.964614,4.886853,0.276732,-0.513568,1.925478,-8.581700,-0.965747,-9.501798,0.047171,3.651381,-0.976222,-4.919200,-3.854964,-7.217130,-6.134949,5.577895,-3.629113,6.580804,5.365388,-2.172390,7.804440,-4.960174,9.818456,-1.577105,7.821990,8.835813,3.948090,-7.209353,-7.015867,-6.418935,-7.648086,9.168073,-0.010061,-9.412930,-9.087232,-8.430525,7.818895,7.259022,8.287865,9.612417,9.417531,-1.950101,-7.462873,-8.599394,4.363245,5.853893,4.942459,3.802405,5.103458,4.366126,-2.966743,-8.529754,-0.439949,-9.779638,1.946269,-3.387144,-8.802225],[-0.982685,6.128690,5.724993,7.025694,-7.207136,9.945987,-2.878602,8.841461,6.957597,1.799820,0.505823,1.379433,8.367121,-3.051536,-8.146828,-2.566358,7.158504,0.834657,-2.603037,-5.755414,9.480576,-6.466664,-6.622957,7.544432,-9.864411,7.566183,-3.616784,9.539800,-5.594269,2.976974,0.165895,8.730557,1.204910,6.568552,3.055774,-2.202249,-7.428806,-1.706781,-0.234266,-0.437428,-8.916157,6.312453,-5.740755,-1.094072,-3.789618,3.060741,6.903787,-8.404247,-9.027987,-2.482541,7.366927,-9.037826,-9.111052,6.765177,4.584515,2.296125,5.375537,-2.683372,3.579320,-4.361362,0.001089,2.845212,-0.243459,5.674221],[-0.256101,-3.750564,3.778177,7.474741,6.414705,-4.255055,-8.685014,-1.067415,-5.393288,5.593486,0.726837,4.683982,-5.377868,8.463870,4.827277,3.024544,4.550285,1.547473,-3.509351,-3.547337,0.458912,-2.918958,-0.481663,-3.071397,-0.010239,-2.892210,5.205939,-0.976721,2.926914,9.376517,-1.219270,-6.702928,-1.255556,-9.284996,-4.581670,9.772330,-7.379664,1.104190,-5.086839,1.982416,7.632175,1.366192,-6.622213,-7.035083,2.339164,-9.696128,-0.046859,9.684735,-0.033174,-1.131195,-9.678147,7.115110,6.419665,7.128117,-0.181758,-5.869954,6.528942,-7.380957,9.390212,8.327571,-3.602280,4.756396,-8.134645,-2.058718],[-5.991739,7.269184,-8.056039,8.599654,8.874102,0.467154,-8.443116,5.377627,0.435569,4.325265,5.012622,-1.785211,-9.472502,-1.175559,-5.214516,5.025215,4.002629,-6.800256,4.279684,-1.860132,-2.231122,-1.870101,2.683255,-8.507919,-5.421292,-3.940866,-9.666123,7.900672,-9.975668,7.326651,-0.233462,2.032692,2.494675,4.744957,-2.202936,4.237756,-4.278163,6.318737,-9.868171,-8.053562,9.403918,-4.488560,5.362376,-6.723693,9.888641,7.235144,-0.093691,-9.944276,-3.197789,1.742753,4.955603,9.693102,-3.499151,7.489123,5.081486,6.581646,-8.415432,-0.914751,-7.893463,4.196675,4.565964,1.680213,-3.653651,1.467056],[-5.274434,9.488630,-5.682393,8.153796,0.499575,8.499207,-5.603687,3.157794,-0.972240,2.498546,-9.748709,-9.091248,0.037148,2.144332,2.110157,-2.173096,5.148667,6.269321,-4.331854,4.617666,-6.474747,-2.398978,5.061683,4.826181,-0.766972,-8.780194,-6.267776,-3.468624,5.671192,3.648871,-1.366586,-7.883430,9.799759,2.077601,-4.943781,9.916771,9.403224,0.501745,7.821030,-7.385611,6.809085,-7.612493,-5.453435,9.330571,-5.233163,-8.924683,-9.777351,5.522004,7.061774,-4.539562,1.177544,-6.329583,8.506179,1.820473,-7.358767,-6.560411,2.888829,0.999375,2.599834,5.204793,3.599199,9.096937,-2.174528,8.878380],[1.735452,9.802995,0.352585,-5.479653,1.484647,7.392870,6.816270,-6.617868,-3.021951,-7.392462,-1.089336,-6.131850,-3.507173,-8.278122,-2.768564,-5.694345,8.344048,-0.617422,8.275356,5.762644,-3.350409,-6.884931,5.002457,-0.278209,9.315797,5.545228,-8.842657,0.181454,6.918553,5.257940,-5.881801,-7.050793,5.451243,-2.157755,3.105139,-5.032675,7.359980,4.855953,1.612911,-4.528838,8.195286,-6.378906,4.210800,-2.171706,6.488381,-8.389172,7.365117,5.405148,6.384078,3.132310,-7.877645,8.025330,-1.833787,-4.858880,-2.504013,-2.104543,-6.059892,-7.228313,5.761751,5.089642,-8.073799,-5.770395,-1.363451,8.792660]], dtype = "float64")#candidate|8980|(14, 64)|const|float64
var_8981 = relay.var("var_8981", dtype = "int8", shape = (1, 20))#candidate|8981|(1, 20)|var|int8
var_8982 = relay.var("var_8982", dtype = "float64", shape = (1, 1800))#candidate|8982|(1, 1800)|var|float64
call_8978 = relay.TupleGetItem(func_8760_call(relay.reshape(const_8979.astype('int8'), [5, 3, 3]), relay.reshape(const_8979.astype('int8'), [5, 3, 3]), relay.reshape(const_8980.astype('float64'), [896,]), relay.reshape(const_8980.astype('float64'), [896,]), relay.reshape(var_8981.astype('int8'), [20,]), relay.reshape(var_8982.astype('float64'), [1800,]), ), 4)
call_8983 = relay.TupleGetItem(func_8768_call(relay.reshape(const_8979.astype('int8'), [5, 3, 3]), relay.reshape(const_8979.astype('int8'), [5, 3, 3]), relay.reshape(const_8980.astype('float64'), [896,]), relay.reshape(const_8980.astype('float64'), [896,]), relay.reshape(var_8981.astype('int8'), [20,]), relay.reshape(var_8982.astype('float64'), [1800,]), ), 4)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_8988 = relay.TupleGetItem(func_4677_call(), 0)
call_8989 = relay.TupleGetItem(func_4679_call(), 0)
output = relay.Tuple([call_8930,bop_8971,call_8978,const_8979,const_8980,var_8981,var_8982,call_8988,])
output2 = relay.Tuple([call_8931,bop_8974,call_8983,const_8979,const_8980,var_8981,var_8982,call_8989,])
func_9005 = relay.Function([var_8981,var_8982,], output)
mod['func_9005'] = func_9005
mod = relay.transform.InferType()(mod)
var_9006 = relay.var("var_9006", dtype = "int8", shape = (1, 20))#candidate|9006|(1, 20)|var|int8
var_9007 = relay.var("var_9007", dtype = "float64", shape = (1, 1800))#candidate|9007|(1, 1800)|var|float64
output = func_9005(var_9006,var_9007,)
func_9008 = relay.Function([var_9006,var_9007,], output)
mutated_mod['func_9008'] = func_9008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_9108 = func_2977_call()
call_9109 = func_2977_call()
func_1529_call = mod.get_global_var('func_1529')
func_1530_call = mutated_mod.get_global_var('func_1530')
call_9111 = relay.TupleGetItem(func_1529_call(), 0)
call_9112 = relay.TupleGetItem(func_1530_call(), 0)
output = relay.Tuple([call_9108,call_9111,])
output2 = relay.Tuple([call_9109,call_9112,])
func_9116 = relay.Function([], output)
mod['func_9116'] = func_9116
mod = relay.transform.InferType()(mod)
output = func_9116()
func_9117 = relay.Function([], output)
mutated_mod['func_9117'] = func_9117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7851_call = mod.get_global_var('func_7851')
func_7852_call = mutated_mod.get_global_var('func_7852')
call_9127 = relay.TupleGetItem(func_7851_call(), 0)
call_9128 = relay.TupleGetItem(func_7852_call(), 0)
var_9129 = relay.var("var_9129", dtype = "float32", shape = (10, 16, 11))#candidate|9129|(10, 16, 11)|var|float32
bop_9130 = relay.less_equal(call_9127.astype('bool'), relay.reshape(var_9129.astype('bool'), relay.shape_of(call_9127))) # shape=(10, 16, 11)
bop_9133 = relay.less_equal(call_9128.astype('bool'), relay.reshape(var_9129.astype('bool'), relay.shape_of(call_9128))) # shape=(10, 16, 11)
output = bop_9130
output2 = bop_9133
func_9136 = relay.Function([var_9129,], output)
mod['func_9136'] = func_9136
mod = relay.transform.InferType()(mod)
var_9137 = relay.var("var_9137", dtype = "float32", shape = (10, 16, 11))#candidate|9137|(10, 16, 11)|var|float32
output = func_9136(var_9137)
func_9138 = relay.Function([var_9137], output)
mutated_mod['func_9138'] = func_9138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6831_call = mod.get_global_var('func_6831')
func_6833_call = mutated_mod.get_global_var('func_6833')
call_9154 = func_6831_call()
call_9155 = func_6831_call()
func_7135_call = mod.get_global_var('func_7135')
func_7137_call = mutated_mod.get_global_var('func_7137')
call_9168 = relay.TupleGetItem(func_7135_call(), 0)
call_9169 = relay.TupleGetItem(func_7137_call(), 0)
var_9173 = relay.var("var_9173", dtype = "float64", shape = (16, 4, 8))#candidate|9173|(16, 4, 8)|var|float64
bop_9174 = relay.mod(call_9168.astype('float32'), var_9173.astype('float32')) # shape=(16, 4, 8)
bop_9177 = relay.mod(call_9169.astype('float32'), var_9173.astype('float32')) # shape=(16, 4, 8)
func_5680_call = mod.get_global_var('func_5680')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_9178 = relay.TupleGetItem(func_5680_call(), 2)
call_9179 = relay.TupleGetItem(func_5682_call(), 2)
output = relay.Tuple([call_9154,bop_9174,call_9178,])
output2 = relay.Tuple([call_9155,bop_9177,call_9179,])
func_9190 = relay.Function([var_9173,], output)
mod['func_9190'] = func_9190
mod = relay.transform.InferType()(mod)
var_9191 = relay.var("var_9191", dtype = "float64", shape = (16, 4, 8))#candidate|9191|(16, 4, 8)|var|float64
output = func_9190(var_9191)
func_9192 = relay.Function([var_9191], output)
mutated_mod['func_9192'] = func_9192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7902_call = mod.get_global_var('func_7902')
func_7904_call = mutated_mod.get_global_var('func_7904')
call_9225 = relay.TupleGetItem(func_7902_call(), 0)
call_9226 = relay.TupleGetItem(func_7904_call(), 0)
output = relay.Tuple([call_9225,])
output2 = relay.Tuple([call_9226,])
func_9245 = relay.Function([], output)
mod['func_9245'] = func_9245
mod = relay.transform.InferType()(mod)
mutated_mod['func_9245'] = func_9245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9245_call = mutated_mod.get_global_var('func_9245')
call_9246 = func_9245_call()
output = call_9246
func_9247 = relay.Function([], output)
mutated_mod['func_9247'] = func_9247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2491_call = mod.get_global_var('func_2491')
func_2492_call = mutated_mod.get_global_var('func_2492')
call_9273 = relay.TupleGetItem(func_2491_call(), 0)
call_9274 = relay.TupleGetItem(func_2492_call(), 0)
output = relay.Tuple([call_9273,])
output2 = relay.Tuple([call_9274,])
func_9276 = relay.Function([], output)
mod['func_9276'] = func_9276
mod = relay.transform.InferType()(mod)
output = func_9276()
func_9277 = relay.Function([], output)
mutated_mod['func_9277'] = func_9277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5002_call = mod.get_global_var('func_5002')
func_5004_call = mutated_mod.get_global_var('func_5004')
call_9287 = func_5002_call()
call_9288 = func_5002_call()
func_5401_call = mod.get_global_var('func_5401')
func_5403_call = mutated_mod.get_global_var('func_5403')
call_9309 = relay.TupleGetItem(func_5401_call(), 2)
call_9310 = relay.TupleGetItem(func_5403_call(), 2)
uop_9314 = relay.asinh(call_9309.astype('float64')) # shape=(7, 104)
uop_9316 = relay.asinh(call_9310.astype('float64')) # shape=(7, 104)
output = relay.Tuple([call_9287,uop_9314,])
output2 = relay.Tuple([call_9288,uop_9316,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

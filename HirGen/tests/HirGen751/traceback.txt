==========mod==========
#[version = "0.0.5"]
def @func_1339(%var_1315: Tensor[(13, 10, 5), float64]) -> (Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
  %0 = cast(%var_1315, dtype="float64") /* ty=Tensor[(13, 10, 5), float64] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %2 = reshape(%1, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %5 = reshape(%3, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %6 = reshape(%4, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %7 = sqrt(%0) /* ty=Tensor[(13, 10, 5), float64] */;
  %8 = @func_310(%2) /* ty=Tensor[(2, 4, 16), float64] */;
  %9 = @func_125(%5, %6) /* ty=Tensor[(12, 11, 9), uint32] */;
  (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(128), float64] */, %9, meta[relay.Constant][1] /* ty=Tensor[(1188), uint32] */)
}

def @func_9304(%var_9291: Tensor[(1365), int8], %var_9292: Tensor[(30, 6), int64]) -> (Tensor[(180), int64], Tensor[(30, 6), int64], Tensor[(5, 15, 1365), int32]) {
  %10 = cast(%var_9291, dtype="int8") /* ty=Tensor[(1365), int8] */;
  %11 = cast(%var_9292, dtype="int64") /* ty=Tensor[(30, 6), int64] */;
  %12 = reshape(%10, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), int8] */;
  %13 = reshape(%11, newshape=[180]) /* ty=Tensor[(180), int64] */;
  %14 = @func_3777(%12, %13) /* ty=(Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) */;
  %15 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
  %18 = cast(%var_9291, dtype="int32") /* ty=Tensor[(1365), int32] */;
  %19 = %14.2;
  %20 = maximum(%17, %18) /* ty=Tensor[(5, 15, 1365), int32] */;
  (%19, %var_9292, %20)
}

def @func_11941() -> (Tensor[(5, 15, 1), float64],) {
  %21 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %22 = %21.0;
  (%22,)
}

def @func_8750() -> (Tensor[(5, 15, 1), float64],) {
  %23 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %24 = %23.1;
  (%24,)
}

def @func_11200(%var_11194: Tensor[(5, 15, 11), float64]) -> Tensor[(5, 15, 11), uint32] {
  %25 = @func_10976() /* ty=Tensor[(5, 15, 1), float64] */;
  %26 = cast(%25, dtype="uint32") /* ty=Tensor[(5, 15, 1), uint32] */;
  %27 = cast(%var_11194, dtype="uint32") /* ty=Tensor[(5, 15, 11), uint32] */;
  logical_xor(%26, %27) /* ty=Tensor[(5, 15, 11), uint32] */
}

def @func_9870() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32]) {
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %29 = reshape(%28, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %30 = @func_5923(%29) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %31 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %32 = %30.0;
  (%31, %32, meta[relay.Constant][2] /* ty=Tensor[(90), float32] */)
}

def @func_9690() -> (Tensor[(330, 3), int8], Tensor[(5, 15, 990), float64], Tensor[(5, 15, 990), bool], Tensor[(32, 2), uint16]) {
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
  %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(990), int8] */, dtype="int8") /* ty=Tensor[(990), int8] */;
  %35 = reshape(%33, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
  %36 = reshape(%34, newshape=[330, 3]) /* ty=Tensor[(330, 3), int8] */;
  %37 = @func_8017(%35, %36) /* ty=(Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) */;
  %38 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %39 = cast(meta[relay.Constant][4] /* ty=Tensor[(990), int8] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %40 = cast(%38, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %41 = cast(%38, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(990), int8] */, dtype="bool") /* ty=Tensor[(990), bool] */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(32, 2), float64] */, dtype="float32") /* ty=Tensor[(32, 2), float32] */;
  %44 = acos(%43) /* ty=Tensor[(32, 2), float32] */;
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(32, 2), float32] */, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(2), int32] */;
  %47 = cast(%44, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %49 = %37.3;
  %50 = floor_divide(%39, %40) /* ty=Tensor[(5, 15, 990), float64] */;
  %51 = logical_or(%41, %42) /* ty=Tensor[(5, 15, 990), bool] */;
  %52 = bitwise_or(%47, %48) /* ty=Tensor[(32, 2), uint16] */;
  (%49, %50, %51, %52)
}

def @func_11439(%var_11428: Tensor[(5, 15, 12), float64]) -> (Tensor[(5, 15, 12), int16],) {
  %53 = @func_10547() /* ty=Tensor[(5, 15, 1), float64] */;
  %54 = cast(%53, dtype="int16") /* ty=Tensor[(5, 15, 1), int16] */;
  %55 = cast(%var_11428, dtype="int16") /* ty=Tensor[(5, 15, 12), int16] */;
  %56 = bitwise_xor(%54, %55) /* ty=Tensor[(5, 15, 12), int16] */;
  (%56,)
}

def @func_3777(%var_3751: Tensor[(13, 7, 15), int8], %var_3757: Tensor[(180), int64]) -> (Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) {
  %57 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 7, 15), int8] */, dtype="int8") /* ty=Tensor[(13, 7, 15), int8] */;
  %58 = shape_of(%var_3751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%var_3751, dtype="int8") /* ty=Tensor[(13, 7, 15), int8] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %61 = cast(%var_3757, dtype="int64") /* ty=Tensor[(180), int64] */;
  %62 = reshape(%61, newshape=[12, 15, 1]) /* ty=Tensor[(12, 15, 1), int64] */;
  %63 = @func_2489(%62) /* ty=(Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */;
  %64 = subtract(%59, %60) /* ty=Tensor[(13, 7, 15), int8] */;
  %65 = %63.2;
  (%64, %65, %var_3757)
}

def @func_11095() -> (Tensor[(5, 15, 1), float32],) {
  %66 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
  %67 = %66.0;
  (%67,)
}

def @func_8493(%var_8466: Tensor[(5, 15, 13), float64], %var_8481: Tensor[(990), int8]) -> (Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) {
  %68 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %69 = %68.0;
  %70 = cast(%69, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %71 = cast(%var_8466, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
  %72 = cast(%var_8481, dtype="int8") /* ty=Tensor[(990), int8] */;
  %73 = cast(%var_8481, dtype="int8") /* ty=Tensor[(990), int8] */;
  %74 = reshape(%72, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %75 = reshape(%73, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %76 = greater(%70, %71) /* ty=Tensor[(5, 15, 13), bool] */;
  %77 = @func_3442(%74, %75) /* ty=Tensor[(11, 6, 15), int8] */;
  (%76, %77, %var_8481)
}

def @func_1884(%var_1840: Tensor[(13, 12, 8), float64]) -> Tensor[(13, 12, 8), bool] {
  %78 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 12, 8), float64] */, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
  %79 = shape_of(%var_1840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_1840, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%80, %81) /* ty=Tensor[(13, 12, 8), bool] */
}

def @func_10816() -> (Tensor[(5, 15, 1), float64],) {
  %82 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %83 = %82.0;
  (%83,)
}

def @func_11811(%var_11802: Tensor[(70, 9), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(13, 12, 8), bool], Tensor[(126), float64], Tensor[(70, 9), float64]) {
  %84 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %85 = cast(meta[relay.Constant][8] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %86 = cast(%var_11802, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %87 = reshape(%85, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
  %88 = reshape(%86, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %89 = @func_2738(%87, %88) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
  %90 = %84.0;
  %91 = %89.1;
  (%90, %91, meta[relay.Constant][8] /* ty=Tensor[(126), float64] */, %var_11802)
}

def @func_11161(%var_11144: Tensor[(16, 5, 11), float32]) -> (Tensor[(16, 5, 11), float32], Tensor[(16, 5, 11), float32]) {
  %92 = cast(%var_11144, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %93 = cos(%92) /* ty=Tensor[(16, 5, 11), float32] */;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %95 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %96 = shape_of(%var_11144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_11144, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %99 = log2(%94) /* ty=Tensor[(16, 5, 11), float32] */;
  %100 = divide(%97, %98) /* ty=Tensor[(16, 5, 11), float32] */;
  (%99, %100)
}

def @func_708(%var_618: int16, %var_619: Tensor[(4, 5, 12), int16]) -> (Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
  %101 = cast(%var_618, dtype="int16") /* ty=int16 */;
  %102 = cast(%var_619, dtype="int16") /* ty=Tensor[(4, 5, 12), int16] */;
  %103 = cast(meta[relay.Constant][10] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %104 = reshape(%103, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %105 = cast(%var_619, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %106 = cast(%var_618, dtype="bool") /* ty=bool */;
  %107 = @func_310(%104) /* ty=Tensor[(2, 4, 16), float64] */;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
  %109 = reshape(%108, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %110 = cast(%107, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
  %111 = reshape(%110, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %112 = cast(meta[relay.Constant][11] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %113 = cast(meta[relay.Constant][11] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %114 = reshape(%112, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %115 = reshape(%113, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %116 = add(%101, %102) /* ty=Tensor[(4, 5, 12), int16] */;
  %117 = less(%105, %106) /* ty=Tensor[(4, 5, 12), bool] */;
  %118 = @func_310(%109) /* ty=Tensor[(2, 4, 16), float64] */;
  %119 = @func_310(%111) /* ty=Tensor[(2, 4, 16), float64] */;
  %120 = @func_125(%114, %115) /* ty=Tensor[(12, 11, 9), uint32] */;
  (%116, %107, meta[relay.Constant][10] /* ty=Tensor[(128), float64] */, %117, %118, %119, %120, meta[relay.Constant][11] /* ty=Tensor[(1188), uint32] */)
}

def @func_9526() -> (Tensor[(5, 15, 1), float64],) {
  %121 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %122 = %121.1;
  (%122,)
}

def @func_11659(%var_11621: Tensor[(1365), int8], %var_11622: Tensor[(180), int64]) -> (Tensor[(180), int64], Tensor[(1365), int8], Tensor[(5, 15, 180), bool], Tensor[(5, 15, 1), float64]) {
  %123 = cast(%var_11621, dtype="int8") /* ty=Tensor[(1365), int8] */;
  %124 = cast(%var_11622, dtype="int64") /* ty=Tensor[(180), int64] */;
  %125 = reshape(%123, newshape=[1365]) /* ty=Tensor[(1365), int8] */;
  %126 = reshape(%124, newshape=[30, 6]) /* ty=Tensor[(30, 6), int64] */;
  %127 = @func_9304(%125, %126) /* ty=(Tensor[(180), int64], Tensor[(30, 6), int64], Tensor[(5, 15, 1365), int32]) */;
  %128 = @func_10696() /* ty=Tensor[(5, 15, 1), float64] */;
  %129 = cast(%128, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %130 = cast(%var_11622, dtype="bool") /* ty=Tensor[(180), bool] */;
  %131 = @func_9342() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) */;
  %132 = %127.0;
  %133 = not_equal(%129, %130) /* ty=Tensor[(5, 15, 180), bool] */;
  %134 = %131.1;
  (%132, %var_11621, %133, %134)
}

def @func_10696() -> Tensor[(5, 15, 1), float64] {
  %135 = @func_9577() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %135.0
}

def @func_9616(%var_9600: Tensor[(10, 2, 12), float32]) -> Tensor[(10, 2, 12), float32] {
  %136 = cast(%var_9600, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
  cosh(%136) /* ty=Tensor[(10, 2, 12), float32] */
}

def @func_5411(%var_5357: Tensor[(1, 11, 13), float32], %var_5373: int16) -> (Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(11, 6, 15), int8], Tensor[(990), int8], Tensor[(?, 11, 13), bool]) {
  %137 = cast(%var_5373, dtype="int16") /* ty=int16 */;
  %138 = cast(meta[relay.Constant][12] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %139 = reshape(%137, newshape=[]) /* ty=int16 */;
  %140 = reshape(%138, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int16] */;
  %141 = @func_708(%139, %140) /* ty=(Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %142 = cast(meta[relay.Constant][13] /* ty=Tensor[(990), int8] */, dtype="int8") /* ty=Tensor[(990), int8] */;
  %143 = cast(meta[relay.Constant][13] /* ty=Tensor[(990), int8] */, dtype="int8") /* ty=Tensor[(990), int8] */;
  %144 = reshape(%142, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %145 = reshape(%143, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %146 = cast(%var_5357, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
  %147 = sqrt(%146) /* ty=Tensor[(1, 11, 13), float32] */;
  %148 = cast(%var_5357, dtype="int16") /* ty=Tensor[(1, 11, 13), int16] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="int16") /* ty=Tensor[(1, 11, 13), int16] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %152 = bitwise_or(%150, %151) /* ty=Tensor[(?, 11, 13), int16] */;
  %153 = cast(%152, dtype="bool") /* ty=Tensor[(?, 11, 13), bool] */;
  %154 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%147, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %157 = %141.4;
  %158 = @func_3442(%144, %145) /* ty=Tensor[(11, 6, 15), int8] */;
  %159 = less(%155, %156) /* ty=Tensor[(?, 11, 13), bool] */;
  (%157, %var_5373, meta[relay.Constant][12] /* ty=Tensor[(240), int16] */, %158, meta[relay.Constant][13] /* ty=Tensor[(990), int8] */, %159)
}

def @func_8437() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %160 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %161 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %162 = %160.0;
  %163 = %161.0;
  (%162, %163)
}

def @func_11611(%var_11602: Tensor[(5, 15, 14), float64]) -> (Tensor[(3, 84), float32], Tensor[(5, 15, ?), bool], Tensor[(5, 15, 14), uint8]) {
  %164 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %165 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %166 = reshape(%164, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %167 = reshape(%165, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %168 = @func_10481(%166, %167) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(4, 7, 9), int64]) */;
  %169 = %168.0;
  %170 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
  %171 = %170.0;
  %172 = cast(%171, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %173 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%169, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %176 = cast(%169, dtype="uint8") /* ty=Tensor[(5, 15, 1), uint8] */;
  %177 = cast(%var_11602, dtype="uint8") /* ty=Tensor[(5, 15, 14), uint8] */;
  %178 = logical_and(%174, %175) /* ty=Tensor[(5, 15, ?), bool] */;
  %179 = subtract(%176, %177) /* ty=Tensor[(5, 15, 14), uint8] */;
  (meta[relay.Constant][14] /* ty=Tensor[(3, 84), float32] */, %178, %179)
}

def @func_10446(%var_10261: Tensor[(128), float64], %var_10335: Tensor[(1, 120), float64], %var_10351: Tensor[(2, 624), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(5, 10, 14), int64], Tensor[(350, 2), int64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(1, 120), float64], Tensor[(2, 624), uint32], Tensor[(2, 624), uint64], Tensor[(2, 624), float32], Tensor[(7, 182), float64]) {
  %180 = cast(%var_10261, dtype="float64") /* ty=Tensor[(128), float64] */;
  %181 = reshape(%180, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %182 = cast(meta[relay.Constant][17] /* ty=Tensor[(350, 2), int64] */, dtype="int64") /* ty=Tensor[(350, 2), int64] */;
  %183 = cast(meta[relay.Constant][17] /* ty=Tensor[(350, 2), int64] */, dtype="int64") /* ty=Tensor[(350, 2), int64] */;
  %184 = reshape(%182, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %185 = reshape(%183, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %186 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 182), float32] */, dtype="float32") /* ty=Tensor[(7, 182), float32] */;
  %187 = cast(meta[relay.Constant][19] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %188 = reshape(%186, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %189 = reshape(%187, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %190 = @func_3172(%188, %189) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %191 = cast(%var_10335, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %192 = reshape(%191, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %193 = @func_8727(%192) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 3, 8), float64], Tensor[(120), float64], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64]) */;
  %194 = cast(meta[relay.Constant][15] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %195 = cast(meta[relay.Constant][16] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %196 = reshape(%194, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
  %197 = reshape(%195, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %198 = @func_2738(%196, %197) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
  %199 = %198.2;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %201 = atan(%200) /* ty=Tensor[(2, 624), float64] */;
  %202 = cast(%199, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
  %203 = shape_of(%201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %204 = cast(%201, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %206 = minimum(%204, %205) /* ty=Tensor[(2, 624), uint64] */;
  %207 = cast(%var_10351, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %208 = shape_of(%201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %209 = cast(%201, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %211 = mod(%209, %210) /* ty=Tensor[(2, 624), float64] */;
  %212 = cast(%211, dtype="uint32") /* ty=Tensor[(2, 624), uint32] */;
  %213 = shape_of(%206, dtype="int32") /* ty=Tensor[(2), int32] */;
  %214 = cast(%206, dtype="uint32") /* ty=Tensor[(2, 624), uint32] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %216 = cast(%201, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
  %217 = cos(%216) /* ty=Tensor[(2, 624), float32] */;
  %218 = cast(%199, dtype="uint8") /* ty=Tensor[(2, 624), uint8] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(2), int32] */;
  %220 = cast(%217, dtype="uint8") /* ty=Tensor[(2, 624), uint8] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %222 = maximum(%220, %221) /* ty=Tensor[(2, 624), uint8] */;
  %223 = cast(%222, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
  %224 = shape_of(%211, dtype="int32") /* ty=Tensor[(2), int32] */;
  %225 = cast(%211, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %227 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 624), float64] */, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %228 = shape_of(%201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %229 = cast(%201, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %231 = floor_mod(%229, %230) /* ty=Tensor[(2, 624), float64] */;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
  %233 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 182), float32] */, dtype="float64") /* ty=Tensor[(7, 182), float64] */;
  %234 = @func_10015() /* ty=Tensor[(5, 15, 1), float64] */;
  %235 = @func_310(%181) /* ty=Tensor[(2, 4, 16), float64] */;
  %236 = @func_6033(%184, %185) /* ty=Tensor[(5, 10, 14), int64] */;
  %237 = %190.4;
  %238 = %193.3;
  %239 = bitwise_or(%214, %215) /* ty=Tensor[(2, 624), uint32] */;
  %240 = right_shift(%225, %226) /* ty=Tensor[(2, 624), uint64] */;
  %241 = sqrt(%232) /* ty=Tensor[(2, 624), float32] */;
  %242 = log(%233) /* ty=Tensor[(7, 182), float64] */;
  (%234, %235, %var_10261, meta[relay.Constant][15] /* ty=Tensor[(126), float64] */, meta[relay.Constant][16] /* ty=Tensor[(630), float64] */, %236, meta[relay.Constant][17] /* ty=Tensor[(350, 2), int64] */, %237, meta[relay.Constant][19] /* ty=Tensor[(650), float64] */, %238, %var_10335, %239, %240, %241, %242)
}

def @func_8537(%var_8522: Tensor[(1274), float32], %var_8523: Tensor[(650), float64], %var_8534: Tensor[(180), int64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1, 1274), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(2, 4, 16), float64], Tensor[(180), int64]) {
  %243 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %244 = cast(meta[relay.Constant][21] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %245 = cast(%var_8522, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %246 = cast(%var_8523, dtype="float64") /* ty=Tensor[(650), float64] */;
  %247 = reshape(%244, newshape=[13, 16, 5]) /* ty=Tensor[(13, 16, 5), float64] */;
  %248 = reshape(%245, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), float32] */;
  %249 = reshape(%246, newshape=[650, 1]) /* ty=Tensor[(650, 1), float64] */;
  %250 = @func_3971(%247, %248, %249) /* ty=(Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) */;
  %251 = cast(%var_8534, dtype="int64") /* ty=Tensor[(180), int64] */;
  %252 = reshape(%251, newshape=[12, 15, 1]) /* ty=Tensor[(12, 15, 1), int64] */;
  %253 = @func_2489(%252) /* ty=(Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */;
  %254 = %243.1;
  %255 = %250.2;
  %256 = %253.1;
  (%254, %255, meta[relay.Constant][21] /* ty=Tensor[(1040), float64] */, %var_8522, %var_8523, %256, %var_8534)
}

def @func_11871(%var_11866: Tensor[(16, 2, 13), int16], %var_11867: Tensor[(16, 2, 13), int16]) -> Tensor[(16, 2, 13), int16] {
  %257 = cast(%var_11867, dtype="int16") /* ty=Tensor[(16, 2, 13), int16] */;
  %258 = shape_of(%var_11866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_11866, dtype="int16") /* ty=Tensor[(16, 2, 13), int16] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%259, %260) /* ty=Tensor[(16, 2, 13), int16] */
}

def @func_8017(%var_7954: Tensor[(8, 2, 4), float64], %var_8013: Tensor[(330, 3), int8]) -> (Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) {
  %261 = cast(%var_7954, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %262 = asinh(%261) /* ty=Tensor[(8, 2, 4), float64] */;
  %263 = cast(%var_7954, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %267 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
  %268 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%262, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = cast(%var_8013, dtype="int8") /* ty=Tensor[(330, 3), int8] */;
  %272 = cast(%var_8013, dtype="int8") /* ty=Tensor[(330, 3), int8] */;
  %273 = reshape(%271, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %274 = reshape(%272, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %275 = logical_and(%265, %266) /* ty=Tensor[(8, 2, 4), bool] */;
  %276 = not_equal(%269, %270) /* ty=Tensor[(8, 2, 4), bool] */;
  %277 = @func_3442(%273, %274) /* ty=Tensor[(11, 6, 15), int8] */;
  (%275, %276, %277, %var_8013)
}

def @func_10547() -> Tensor[(5, 15, 1), float64] {
  %278 = @func_9526() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %278.0
}

def @func_9786(%var_9784: Tensor[(9450), bool]) -> (Tensor[(5, 15, 1), float64], Tensor[(9, ?, 14), bool], Tensor[(9450), bool]) {
  %279 = cast(%var_9784, dtype="bool") /* ty=Tensor[(9450), bool] */;
  %280 = reshape(%279, newshape=[5, 15, 126]) /* ty=Tensor[(5, 15, 126), bool] */;
  %281 = @func_8875(%280) /* ty=(Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) */;
  %282 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %283 = %281.0;
  (%282, %283, %var_9784)
}

def @func_10804() -> Tensor[(5, 15, 1), float64] {
  %284 = @func_9526() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %284.0
}

def @func_6033(%var_6013: Tensor[(5, 10, 14), int64], %var_6014: Tensor[(5, 10, 14), int64]) -> Tensor[(5, 10, 14), int64] {
  %285 = cast(%var_6014, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
  %286 = shape_of(%var_6013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%var_6013, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_and(%287, %288) /* ty=Tensor[(5, 10, 14), int64] */
}

def @func_12272(%var_12244: Tensor[(5, 15, 6), float64], %var_12262: Tensor[(210, 45), bool]) -> (Tensor[(5, 15, 6), int64], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 126), bool], Tensor[(210, 45), bool]) {
  %289 = @func_10696() /* ty=Tensor[(5, 15, 1), float64] */;
  %290 = cast(%289, dtype="int64") /* ty=Tensor[(5, 15, 1), int64] */;
  %291 = cast(%var_12244, dtype="int64") /* ty=Tensor[(5, 15, 6), int64] */;
  %292 = cast(%var_12244, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
  %293 = cast(%289, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %294 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 15, 6), float64] */, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
  %295 = shape_of(%var_12244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_12244, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %298 = cast(%var_12262, dtype="bool") /* ty=Tensor[(210, 45), bool] */;
  %299 = reshape(%298, newshape=[5, 15, 126]) /* ty=Tensor[(5, 15, 126), bool] */;
  %300 = @func_8875(%299) /* ty=(Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) */;
  %301 = maximum(%290, %291) /* ty=Tensor[(5, 15, 6), int64] */;
  %302 = divide(%292, %293) /* ty=Tensor[(5, 15, 6), float32] */;
  %303 = floor_divide(%296, %297) /* ty=Tensor[(5, 15, 6), float32] */;
  %304 = %300.1;
  (%301, %302, %303, %304, %var_12262)
}

def @func_9949(%var_9885: Tensor[(5, 15, 9), float64]) -> (Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 1), float64]) {
  %305 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %308 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
  %309 = cast(%306, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %310 = cast(%var_9885, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %311 = mod(%309, %310) /* ty=Tensor[(5, 15, 9), float64] */;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %313 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %314 = exp(%307) /* ty=Tensor[(5, 15, 1), float32] */;
  %315 = %308.0;
  %316 = tan(%312) /* ty=Tensor[(5, 15, 9), float64] */;
  %317 = %313.1;
  (%314, %315, %316, %317)
}

def @func_11885() -> (Tensor[(5, 15, 1), float64],) {
  %318 = @func_10926() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %319 = %318.1;
  (%319,)
}

def @func_3442(%var_3432: Tensor[(11, 6, 15), int8], %var_3433: Tensor[(11, 6, 15), int8]) -> Tensor[(11, 6, 15), int8] {
  %320 = cast(%var_3433, dtype="int8") /* ty=Tensor[(11, 6, 15), int8] */;
  %321 = shape_of(%var_3432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%var_3432, dtype="int8") /* ty=Tensor[(11, 6, 15), int8] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%322, %323) /* ty=Tensor[(11, 6, 15), int8] */
}

def @func_9840(%var_9809: Tensor[(5, 15, 13), float64]) -> Tensor[(5, 15, 13), uint64] {
  %324 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %325 = cast(%324, dtype="uint64") /* ty=Tensor[(5, 15, 1), uint64] */;
  %326 = cast(%var_9809, dtype="uint64") /* ty=Tensor[(5, 15, 13), uint64] */;
  bitwise_or(%325, %326) /* ty=Tensor[(5, 15, 13), uint64] */
}

def @func_8685(%var_8676: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), float64] {
  %327 = cast(%var_8676, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  tan(%327) /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_9342() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) {
  %328 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %329 = cast(meta[relay.Constant][24] /* ty=Tensor[(64, 2), float64] */, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %330 = reshape(%329, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %331 = @func_8806(%330) /* ty=(Tensor[(975, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */;
  %332 = cast(meta[relay.Constant][25] /* ty=Tensor[(64, 2), float64] */, dtype="bool") /* ty=Tensor[(64, 2), bool] */;
  %333 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(64, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %334 = cast(meta[relay.Constant][24] /* ty=Tensor[(64, 2), float64] */, dtype="bool") /* ty=Tensor[(64, 2), bool] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %336 = less(%334, %335) /* ty=Tensor[(64, 2), bool] */;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %338 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(64, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %339 = cast(meta[relay.Constant][24] /* ty=Tensor[(64, 2), float64] */, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %341 = %328.0;
  %342 = %331.1;
  %343 = floor_mod(%339, %340) /* ty=Tensor[(64, 2), float64] */;
  (%341, %342, %343)
}

def @func_8674() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %344 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %345 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %346 = %344.0;
  %347 = %345.0;
  (%346, %347)
}

def @func_10644(%var_10637: Tensor[(5, 5, 16), float32]) -> (Tensor[(5, 5, 16), float32],) {
  %348 = cast(%var_10637, dtype="float32") /* ty=Tensor[(5, 5, 16), float32] */;
  %349 = atan(%348) /* ty=Tensor[(5, 5, 16), float32] */;
  (%349,)
}

def @func_9053(%var_9048: Tensor[(64), float64], %var_9049: Tensor[(110, 9), int8]) -> (Tensor[(5, 15, 1), float64], Tensor[(8, 2, 4), bool], Tensor[(64), float64], Tensor[(110, 9), int8]) {
  %350 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %351 = cast(%var_9048, dtype="float64") /* ty=Tensor[(64), float64] */;
  %352 = cast(%var_9049, dtype="int8") /* ty=Tensor[(110, 9), int8] */;
  %353 = reshape(%351, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
  %354 = reshape(%352, newshape=[330, 3]) /* ty=Tensor[(330, 3), int8] */;
  %355 = @func_8017(%353, %354) /* ty=(Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) */;
  %356 = %350.0;
  %357 = %355.1;
  (%356, %357, %var_9048, %var_9049)
}

def @func_11357() -> Tensor[(5, 15, 1), float64] {
  @func_10804() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_11536(%var_11485: Tensor[(1080), float64], %var_11489: Tensor[(220), uint16], %var_11490: Tensor[(120), float64], %var_11525: Tensor[(700), int64], %var_11528: Tensor[(90), float32]) -> (Tensor[(6, 15, 12), float64], Tensor[(128), float64], Tensor[(5, 15, 1), float64], Tensor[(120), float64], Tensor[(5, 15, 220), float64], Tensor[(1188), uint32], Tensor[(1188), uint32], Tensor[(700), int64], Tensor[(700), int64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(5, 15, 1080), float32], Tensor[(5, 15, 1), float64]) {
  %358 = cast(%var_11485, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %359 = cast(meta[relay.Constant][26] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %360 = reshape(%358, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
  %361 = reshape(%359, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %362 = @func_1399(%360, %361) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) */;
  %363 = cast(%var_11489, dtype="uint16") /* ty=Tensor[(220), uint16] */;
  %364 = cast(%var_11490, dtype="float64") /* ty=Tensor[(120), float64] */;
  %365 = reshape(%363, newshape=[1, 220]) /* ty=Tensor[(1, 220), uint16] */;
  %366 = reshape(%364, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %367 = @func_9446(%365, %366) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(1, 990), int8], Tensor[(4, 11, 5), bool], Tensor[(5, 3, 8), float64], Tensor[(120), float64]) */;
  %368 = @func_10804() /* ty=Tensor[(5, 15, 1), float64] */;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %370 = cast(%var_11489, dtype="float64") /* ty=Tensor[(220), float64] */;
  %371 = cast(meta[relay.Constant][27] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %372 = reshape(%371, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %373 = @func_9997(%372) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %374 = cast(%var_11525, dtype="int64") /* ty=Tensor[(700), int64] */;
  %375 = reshape(%374, newshape=[700]) /* ty=Tensor[(700), int64] */;
  %376 = @func_8557(%375) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) */;
  %377 = cast(%var_11528, dtype="float32") /* ty=Tensor[(90), float32] */;
  %378 = reshape(%377, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %379 = @func_5923(%378) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %380 = cast(%var_11485, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %381 = cast(%368, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %382 = @func_10897() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %383 = %362.0;
  %384 = %367.0;
  %385 = multiply(%369, %370) /* ty=Tensor[(5, 15, 220), float64] */;
  %386 = %373.2;
  %387 = %376.2;
  %388 = %379.0;
  %389 = divide(%380, %381) /* ty=Tensor[(5, 15, 1080), float32] */;
  %390 = %382.0;
  (%383, meta[relay.Constant][26] /* ty=Tensor[(128), float64] */, %384, %var_11490, %385, %386, meta[relay.Constant][27] /* ty=Tensor[(1188), uint32] */, %387, %var_11525, %388, %var_11528, %389, %390)
}

def @func_11033() -> (Tensor[(5, 15, 1), float64],) {
  %391 = @func_9577() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %392 = %391.0;
  (%392,)
}

def @func_9164(%var_9093: Tensor[(1188), uint32], %var_9123: Tensor[(975), float64], %var_9133: Tensor[(180), int64], %var_9140: Tensor[(1080), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 15, 1), float64], Tensor[(13, 14, 7), float32], Tensor[(5, 15, 13), bool], Tensor[(975), float64], Tensor[(330, 3), int8], Tensor[(180), int64], Tensor[(1365), int8], Tensor[(180), int64], Tensor[(650, 1), float64], Tensor[(22), uint16], Tensor[(1080), float64], Tensor[(128), float64], Tensor[(12, 11, 9), float32]) {
  %393 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %394 = cast(meta[relay.Constant][28] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %395 = cast(meta[relay.Constant][29] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %396 = reshape(%394, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %397 = reshape(%395, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %398 = @func_3172(%396, %397) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %399 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %400 = cast(meta[relay.Constant][28] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %401 = %398.4;
  %402 = cast(%401, dtype="float64") /* ty=Tensor[(650), float64] */;
  %403 = reshape(%400, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %404 = reshape(%402, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %405 = @func_3172(%403, %404) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %406 = cast(%var_9123, dtype="float64") /* ty=Tensor[(975), float64] */;
  %407 = cast(meta[relay.Constant][30] /* ty=Tensor[(330, 3), int8] */, dtype="int8") /* ty=Tensor[(330, 3), int8] */;
  %408 = reshape(%406, newshape=[5, 15, 13]) /* ty=Tensor[(5, 15, 13), float64] */;
  %409 = reshape(%407, newshape=[990]) /* ty=Tensor[(990), int8] */;
  %410 = @func_8493(%408, %409) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) */;
  %411 = cast(meta[relay.Constant][31] /* ty=Tensor[(1365), int8] */, dtype="int8") /* ty=Tensor[(1365), int8] */;
  %412 = cast(%var_9133, dtype="int64") /* ty=Tensor[(180), int64] */;
  %413 = reshape(%411, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), int8] */;
  %414 = reshape(%412, newshape=[180]) /* ty=Tensor[(180), int64] */;
  %415 = @func_3777(%413, %414) /* ty=(Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) */;
  %416 = cast(meta[relay.Constant][32] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %417 = cast(%var_9093, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %418 = cast(%var_9140, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %419 = cast(meta[relay.Constant][33] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %420 = reshape(%416, newshape=[1, 11, 2]) /* ty=Tensor[(1, 11, 2), uint16] */;
  %421 = reshape(%417, newshape=[3, 396]) /* ty=Tensor[(3, 396), uint32] */;
  %422 = reshape(%418, newshape=[1080, 1]) /* ty=Tensor[(1080, 1), float64] */;
  %423 = reshape(%419, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %424 = @func_6893(%420, %421, %422, %423) /* ty=(Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) */;
  %425 = cast(%var_9093, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %426 = cast(%var_9093, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %427 = reshape(%425, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %428 = reshape(%426, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %429 = @func_125(%427, %428) /* ty=Tensor[(12, 11, 9), uint32] */;
  %430 = cast(%429, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %431 = %393.0;
  %432 = %399.1;
  %433 = %405.0;
  %434 = %410.0;
  %435 = %415.2;
  %436 = %424.3;
  %437 = asin(%430) /* ty=Tensor[(12, 11, 9), float32] */;
  (%431, %var_9093, %401, meta[relay.Constant][28] /* ty=Tensor[(1274), float32] */, meta[relay.Constant][29] /* ty=Tensor[(650), float64] */, %432, %433, %434, %var_9123, meta[relay.Constant][30] /* ty=Tensor[(330, 3), int8] */, %435, meta[relay.Constant][31] /* ty=Tensor[(1365), int8] */, %var_9133, %436, meta[relay.Constant][32] /* ty=Tensor[(22), uint16] */, %var_9140, meta[relay.Constant][33] /* ty=Tensor[(128), float64] */, %437)
}

def @func_10015() -> Tensor[(5, 15, 1), float64] {
  %438 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  atan(%439) /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_12019() -> (Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float32]) {
  %440 = @func_9553() /* ty=(Tensor[(5, 15, ?), float64],) */;
  %441 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
  %442 = %440.0;
  %443 = %441.0;
  (%442, %443)
}

def @func_9016() -> (Tensor[(5, 15, 1), float64],) {
  %444 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %445 = %444.0;
  (%445,)
}

def @func_10481(%var_10458: Tensor[(4, 7, 9), float32], %var_10459: Tensor[(4, 7, 9), float32]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(4, 7, 9), int64]) {
  %446 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %447 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %448 = cast(%var_10459, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
  %449 = shape_of(%var_10458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%var_10458, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %452 = greater(%450, %451) /* ty=Tensor[(4, 7, 9), bool] */;
  %453 = cast(%452, dtype="int64") /* ty=Tensor[(4, 7, 9), int64] */;
  %454 = shape_of(%var_10458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%var_10458, dtype="int64") /* ty=Tensor[(4, 7, 9), int64] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %457 = %446.0;
  %458 = %447.0;
  %459 = right_shift(%455, %456) /* ty=Tensor[(4, 7, 9), int64] */;
  (%457, %458, %459)
}

def @func_8806(%var_8800: Tensor[(128), float64]) -> (Tensor[(975, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) {
  %460 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
  %461 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %462 = cast(%var_8800, dtype="float64") /* ty=Tensor[(128), float64] */;
  %463 = reshape(%462, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %464 = %460.2;
  %465 = %461.0;
  %466 = @func_310(%463) /* ty=Tensor[(2, 4, 16), float64] */;
  (%464, %465, %466, %var_8800)
}

def @func_125(%var_111: Tensor[(12, 11, 9), uint32], %var_112: Tensor[(12, 11, 9), uint32]) -> Tensor[(12, 11, 9), uint32] {
  %467 = cast(%var_112, dtype="uint32") /* ty=Tensor[(12, 11, 9), uint32] */;
  %468 = shape_of(%var_111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%var_111, dtype="uint32") /* ty=Tensor[(12, 11, 9), uint32] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%469, %470) /* ty=Tensor[(12, 11, 9), uint32] */
}

def @func_9553() -> (Tensor[(5, 15, ?), float64],) {
  %471 = @func_9222() /* ty=Tensor[(5, 15, 1), float64] */;
  %472 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%471, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %476 = floor_divide(%474, %475) /* ty=Tensor[(5, 15, ?), float64] */;
  (%476,)
}

def @func_2489(%var_2473: Tensor[(12, 15, 1), int64]) -> (Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) {
  %477 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %478 = cast(%var_2473, dtype="int64") /* ty=Tensor[(12, 15, 1), int64] */;
  %479 = cast(meta[relay.Constant][35] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %480 = reshape(%479, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %481 = bitwise_and(%477, %478) /* ty=Tensor[(12, 15, 1), int64] */;
  %482 = @func_310(%480) /* ty=Tensor[(2, 4, 16), float64] */;
  (%481, %482, meta[relay.Constant][35] /* ty=Tensor[(128), float64] */)
}

def @func_10897() -> (Tensor[(5, 15, 1), float64],) {
  %483 = @func_10085() /* ty=Tensor[(5, 15, 1), float64] */;
  (%483,)
}

def @func_11326(%var_11291: Tensor[(975, 2), float64]) -> (Tensor[(5, 15, ?), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(975, 2), float32], Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), float32]) {
  %484 = @func_10897() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %485 = %484.0;
  %486 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %487 = %486.0;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %489 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%485, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %492 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
  %493 = %492.2;
  %494 = cast(%493, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
  %495 = cast(%var_11291, dtype="float32") /* ty=Tensor[(975, 2), float32] */;
  %496 = cast(meta[relay.Constant][36] /* ty=Tensor[(18, 66), uint32] */, dtype="uint32") /* ty=Tensor[(18, 66), uint32] */;
  %497 = reshape(%496, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %498 = @func_9997(%497) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %499 = %498.1;
  %500 = cast(%499, dtype="int8") /* ty=Tensor[(12, 11, 9), int8] */;
  %501 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(18, 66), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %502 = cast(meta[relay.Constant][36] /* ty=Tensor[(18, 66), uint32] */, dtype="int8") /* ty=Tensor[(18, 66), int8] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %504 = right_shift(%502, %503) /* ty=Tensor[(18, 66), int8] */;
  %505 = cast(%504, dtype="float32") /* ty=Tensor[(18, 66), float32] */;
  %506 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%499, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %509 = power(%490, %491) /* ty=Tensor[(5, 15, ?), float32] */;
  %510 = @func_10547() /* ty=Tensor[(5, 15, 1), float64] */;
  %511 = @func_9222() /* ty=Tensor[(5, 15, 1), float64] */;
  %512 = mod(%494, %495) /* ty=Tensor[(975, 2), float32] */;
  %513 = @func_9222() /* ty=Tensor[(5, 15, 1), float64] */;
  %514 = divide(%507, %508) /* ty=Tensor[(12, 11, 9), float32] */;
  (%509, %510, %511, %512, %513, %514)
}

def @func_1399(%var_1369: Tensor[(6, 15, 12), float64], %var_1386: Tensor[(128), float64]) -> (Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) {
  %515 = cast(%var_1369, dtype="float64") /* ty=Tensor[(6, 15, 12), float64] */;
  %516 = cast(%var_1386, dtype="float64") /* ty=Tensor[(128), float64] */;
  %517 = reshape(%516, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %518 = @func_310(%517) /* ty=Tensor[(2, 4, 16), float64] */;
  %519 = cast(%518, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
  %520 = reshape(%519, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %521 = cos(%515) /* ty=Tensor[(6, 15, 12), float64] */;
  %522 = @func_310(%520) /* ty=Tensor[(2, 4, 16), float64] */;
  (%521, %518, %var_1386, %522)
}

def @func_9222() -> Tensor[(5, 15, 1), float64] {
  %523 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %523.0
}

def @func_10187() -> (Tensor[(5, 15, 1), float32],) {
  %524 = @func_9526() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %525 = %524.0;
  %526 = cast(%525, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %527 = cosh(%526) /* ty=Tensor[(5, 15, 1), float32] */;
  (%527,)
}

def @func_8241() -> (Tensor[(5, 15, 1), float64],) {
  %528 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %529 = acos(%528) /* ty=Tensor[(5, 15, 1), float64] */;
  (%529,)
}

def @func_8948(%var_8926: int16, %var_8927: Tensor[(240), int16]) -> (Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(5, 15, 1), float64]) {
  %530 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %531 = cast(%var_8926, dtype="int16") /* ty=int16 */;
  %532 = cast(%var_8927, dtype="int16") /* ty=Tensor[(240), int16] */;
  %533 = reshape(%531, newshape=[]) /* ty=int16 */;
  %534 = reshape(%532, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int16] */;
  %535 = @func_708(%533, %534) /* ty=(Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %536 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %537 = %530.0;
  %538 = %535.4;
  %539 = %536.0;
  (%537, %538, %var_8926, %var_8927, %539)
}

def @func_6893(%var_6790: Tensor[(1, 11, 2), uint16], %var_6796: Tensor[(3, 396), uint32], %var_6844: Tensor[(1080, 1), float64], %var_6845: Tensor[(128), float64]) -> (Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) {
  %540 = cast(%var_6796, dtype="uint32") /* ty=Tensor[(3, 396), uint32] */;
  %541 = cast(%var_6796, dtype="uint32") /* ty=Tensor[(3, 396), uint32] */;
  %542 = reshape(%540, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %543 = reshape(%541, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %544 = cast(%var_6790, dtype="uint16") /* ty=Tensor[(1, 11, 2), uint16] */;
  %545 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 11, 2), uint16] */, dtype="uint16") /* ty=Tensor[(2, 11, 2), uint16] */;
  %546 = multiply(%544, %545) /* ty=Tensor[(2, 11, 2), uint16] */;
  %547 = cast(%546, dtype="uint64") /* ty=Tensor[(2, 11, 2), uint64] */;
  %548 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(2, 11, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 11, 2), uint16] */, dtype="uint64") /* ty=Tensor[(2, 11, 2), uint64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %551 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 1040), float64] */, dtype="float64") /* ty=Tensor[(1, 1040), float64] */;
  %552 = cast(meta[relay.Constant][40] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %553 = cast(meta[relay.Constant][41] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %554 = reshape(%551, newshape=[13, 16, 5]) /* ty=Tensor[(13, 16, 5), float64] */;
  %555 = reshape(%552, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), float32] */;
  %556 = reshape(%553, newshape=[650, 1]) /* ty=Tensor[(650, 1), float64] */;
  %557 = @func_3971(%554, %555, %556) /* ty=(Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) */;
  %558 = cast(meta[relay.Constant][42] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %559 = reshape(%558, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %560 = @func_5923(%559) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %561 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 1040), float64] */, dtype="float32") /* ty=Tensor[(1, 1040), float32] */;
  %562 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 1040), float64] */, dtype="float32") /* ty=Tensor[(12, 1040), float32] */;
  %563 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %564 = cast(meta[relay.Constant][45] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %565 = reshape(%563, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
  %566 = reshape(%564, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %567 = @func_2738(%565, %566) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
  %568 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 1040), float64] */, dtype="bool") /* ty=Tensor[(12, 1040), bool] */;
  %569 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 1040), float64] */, dtype="bool") /* ty=Tensor[(1, 1040), bool] */;
  %570 = cast(%var_6844, dtype="float64") /* ty=Tensor[(1080, 1), float64] */;
  %571 = cast(%var_6845, dtype="float64") /* ty=Tensor[(128), float64] */;
  %572 = reshape(%570, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
  %573 = reshape(%571, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %574 = @func_1399(%572, %573) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) */;
  %575 = %557.3;
  %576 = cast(%575, dtype="float64") /* ty=Tensor[(650, 1), float64] */;
  %577 = reshape(%576, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float64] */;
  %578 = @func_1339(%577) /* ty=(Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %579 = cast(%var_6844, dtype="bool") /* ty=Tensor[(1080, 1), bool] */;
  %580 = cast(%var_6845, dtype="bool") /* ty=Tensor[(128), bool] */;
  %581 = @func_125(%542, %543) /* ty=Tensor[(12, 11, 9), uint32] */;
  %582 = right_shift(%549, %550) /* ty=Tensor[(2, 11, 2), uint64] */;
  %583 = %560.0;
  %584 = power(%561, %562) /* ty=Tensor[(12, 1040), float32] */;
  %585 = %567.2;
  %586 = logical_and(%568, %569) /* ty=Tensor[(12, 1040), bool] */;
  %587 = %574.0;
  %588 = %578.1;
  %589 = less_equal(%579, %580) /* ty=Tensor[(1080, 128), bool] */;
  (%581, %var_6796, %582, %575, meta[relay.Constant][40] /* ty=Tensor[(1274), float32] */, meta[relay.Constant][41] /* ty=Tensor[(650), float64] */, %583, meta[relay.Constant][42] /* ty=Tensor[(90), float32] */, %584, %585, meta[relay.Constant][44] /* ty=Tensor[(126), float64] */, meta[relay.Constant][45] /* ty=Tensor[(630), float64] */, %586, %587, %588, %589)
}

def @func_8417(%var_8372: Tensor[(126), float32], %var_8386: Tensor[(637, 2), float32]) -> (Tensor[(5, 15, 1), float64], Tensor[(9, 1, 14), float32], Tensor[(126), float32], Tensor[(650), float64], Tensor[(637, 2), float32], Tensor[(325, 2), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) {
  %590 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %591 = cast(%var_8372, dtype="float32") /* ty=Tensor[(126), float32] */;
  %592 = reshape(%591, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %593 = cast(%var_8386, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
  %594 = cast(meta[relay.Constant][46] /* ty=Tensor[(325, 2), float64] */, dtype="float64") /* ty=Tensor[(325, 2), float64] */;
  %595 = reshape(%593, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %596 = reshape(%594, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %597 = @func_3172(%595, %596) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %598 = cast(meta[relay.Constant][47] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %599 = cast(meta[relay.Constant][47] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %600 = reshape(%598, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %601 = reshape(%599, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %602 = %590.0;
  %603 = @func_2213(%592) /* ty=Tensor[(9, 1, 14), float32] */;
  %604 = %597.4;
  %605 = @func_6033(%600, %601) /* ty=Tensor[(5, 10, 14), int64] */;
  (%602, %603, %var_8372, %604, %var_8386, meta[relay.Constant][46] /* ty=Tensor[(325, 2), float64] */, %605, meta[relay.Constant][47] /* ty=Tensor[(700), int64] */)
}

def @func_8727(%var_8720: Tensor[(120), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 3, 8), float64], Tensor[(120), float64], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64]) {
  %606 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %607 = %606.0;
  %608 = cast(%607, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %609 = cast(%var_8720, dtype="float64") /* ty=Tensor[(120), float64] */;
  %610 = reshape(%609, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %611 = cast(meta[relay.Constant][48] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %612 = cast(meta[relay.Constant][49] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %613 = reshape(%611, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %614 = reshape(%612, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %615 = @func_3172(%613, %614) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %616 = rsqrt(%608) /* ty=Tensor[(5, 15, 1), float64] */;
  %617 = @func_8685(%610) /* ty=Tensor[(5, 3, 8), float64] */;
  %618 = %615.4;
  (%616, %617, %var_8720, %618, meta[relay.Constant][48] /* ty=Tensor[(1274), float32] */, meta[relay.Constant][49] /* ty=Tensor[(650), float64] */)
}

def @main(%var_12443: Tensor[(5, 15, 10), float64]) -> Tensor[(5, 15, 10), float64] {
  %619 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %620 = %619.0;
  %621 = cast(%620, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %622 = cast(%var_12443, dtype="float32") /* ty=Tensor[(5, 15, 10), float32] */;
  %623 = power(%621, %622) /* ty=Tensor[(5, 15, 10), float32] */;
  %624 = cast(%623, dtype="float64") /* ty=Tensor[(5, 15, 10), float64] */;
  sinh(%624) /* ty=Tensor[(5, 15, 10), float64] */
}

def @func_10926() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %625 = @func_9870() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32]) */;
  %626 = @func_10696() /* ty=Tensor[(5, 15, 1), float64] */;
  %627 = %625.0;
  (%626, %627)
}

def @func_5202(%var_5187: Tensor[(4, 11, 5), uint16]) -> (Tensor[(4, 11, 5), uint16],) {
  %628 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 11, 5), uint16] */, dtype="uint16") /* ty=Tensor[(4, 11, 5), uint16] */;
  %629 = shape_of(%var_5187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%var_5187, dtype="uint16") /* ty=Tensor[(4, 11, 5), uint16] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %632 = minimum(%630, %631) /* ty=Tensor[(4, 11, 5), uint16] */;
  (%632,)
}

def @func_12185() -> (Tensor[(5, 15, 16), int32],) {
  %633 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
  %634 = %633.0;
  %635 = cast(%634, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
  %636 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 15, 16), float32] */, dtype="int32") /* ty=Tensor[(5, 15, 16), int32] */;
  %637 = bitwise_or(%635, %636) /* ty=Tensor[(5, 15, 16), int32] */;
  (%637,)
}

def @func_8302() -> (Tensor[(5, 15, 1), float64],) {
  %638 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %639 = %638.0;
  (%639,)
}

def @func_9564() -> Tensor[(5, 15, 1), float64] {
  %640 = @func_9342() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) */;
  %640.1
}

def @func_8595() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) {
  %641 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %642 = cast(meta[relay.Constant][52] /* ty=Tensor[(975, 1), float64] */, dtype="float64") /* ty=Tensor[(975, 1), float64] */;
  %643 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 990), int8] */, dtype="int8") /* ty=Tensor[(1, 990), int8] */;
  %644 = reshape(%642, newshape=[5, 15, 13]) /* ty=Tensor[(5, 15, 13), float64] */;
  %645 = reshape(%643, newshape=[990]) /* ty=Tensor[(990), int8] */;
  %646 = @func_8493(%644, %645) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) */;
  %647 = %641.1;
  %648 = %646.0;
  (%647, %648, meta[relay.Constant][52] /* ty=Tensor[(975, 1), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1, 990), int8] */)
}

def @func_3172(%var_3148: Tensor[(13, 14, 7), float32], %var_3164: Tensor[(650), float64]) -> (Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) {
  %649 = cast(%var_3148, dtype="float32") /* ty=Tensor[(13, 14, 7), float32] */;
  %650 = cast(meta[relay.Constant][54] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %651 = reshape(%650, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %652 = cast(%var_3164, dtype="float64") /* ty=Tensor[(650), float64] */;
  %653 = reshape(%652, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float64] */;
  %654 = @func_1339(%653) /* ty=(Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %655 = exp(%649) /* ty=Tensor[(13, 14, 7), float32] */;
  %656 = @func_310(%651) /* ty=Tensor[(2, 4, 16), float64] */;
  %657 = %654.0;
  (%655, %656, meta[relay.Constant][54] /* ty=Tensor[(128), float64] */, %657, %var_3164)
}

def @func_9997(%var_9994: Tensor[(1188), uint32]) -> (Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
  %658 = @func_9553() /* ty=(Tensor[(5, 15, ?), float64],) */;
  %659 = cast(%var_9994, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %660 = cast(%var_9994, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %661 = reshape(%659, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %662 = reshape(%660, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %663 = %658.0;
  %664 = @func_125(%661, %662) /* ty=Tensor[(12, 11, 9), uint32] */;
  (%663, %664, %var_9994)
}

def @func_12345(%var_12327: Tensor[(5, 15, 1), float64]) -> (Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float64]) {
  %665 = @func_10804() /* ty=Tensor[(5, 15, 1), float64] */;
  %666 = cast(%var_12327, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%665, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %670 = @func_11941() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %671 = subtract(%668, %669) /* ty=Tensor[(5, 15, ?), float64] */;
  %672 = %670.0;
  (%671, %672)
}

def @func_11777(%var_11764: Tensor[(6, 5, 6), uint32], %var_11772: Tensor[(1040), float64], %var_11773: Tensor[(1274), float32]) -> (Tensor[(6, 5, 6), uint32], Tensor[(13, 14, 7), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64]) {
  %673 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(6, 5, 6), uint32] */;
  %674 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(6, 5, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 5, 6), uint32] */, dtype="uint32") /* ty=Tensor[(6, 5, 6), uint32] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %677 = cast(%var_11772, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %678 = cast(%var_11773, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %679 = cast(meta[relay.Constant][56] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %680 = reshape(%677, newshape=[13, 16, 5]) /* ty=Tensor[(13, 16, 5), float64] */;
  %681 = reshape(%678, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), float32] */;
  %682 = reshape(%679, newshape=[650, 1]) /* ty=Tensor[(650, 1), float64] */;
  %683 = @func_3971(%680, %681, %682) /* ty=(Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) */;
  %684 = logical_xor(%675, %676) /* ty=Tensor[(6, 5, 6), uint32] */;
  %685 = %683.1;
  (%684, %685, %var_11772, %var_11773, meta[relay.Constant][56] /* ty=Tensor[(650), float64] */)
}

def @func_9577() -> (Tensor[(5, 15, 1), float64],) {
  %686 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  (%686,)
}

def @func_3205(%var_3192: Tensor[(14, 5, 7), int16], %var_3193: Tensor[(14, 5, 7), int16]) -> (Tensor[(14, 5, 7), int16],) {
  %687 = cast(%var_3193, dtype="int16") /* ty=Tensor[(14, 5, 7), int16] */;
  %688 = shape_of(%var_3192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_3192, dtype="int16") /* ty=Tensor[(14, 5, 7), int16] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %691 = multiply(%689, %690) /* ty=Tensor[(14, 5, 7), int16] */;
  (%691,)
}

def @func_4837(%var_4748: Tensor[(6, 16, 2), float32], %var_4777: Tensor[(1274), float32], %var_4778: Tensor[(650), float64]) -> (Tensor[(2, 4, 16), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(13, 12, 8), bool], Tensor[(1248), float64], Tensor[(6, 16, 2), bool], Tensor[(2, 4, 16), float64]) {
  %692 = cast(%var_4777, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %693 = cast(%var_4778, dtype="float64") /* ty=Tensor[(650), float64] */;
  %694 = reshape(%692, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %695 = reshape(%693, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %696 = @func_3172(%694, %695) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %697 = cast(meta[relay.Constant][57] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %698 = reshape(%697, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float64] */;
  %699 = cast(%var_4748, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
  %700 = cosh(%699) /* ty=Tensor[(6, 16, 2), float32] */;
  %701 = cast(%700, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
  %702 = cos(%701) /* ty=Tensor[(6, 16, 2), float32] */;
  %703 = cast(%var_4748, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
  %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%702, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %707 = floor_mod(%705, %706) /* ty=Tensor[(6, 16, 2), float32] */;
  %708 = cast(%707, dtype="uint32") /* ty=Tensor[(6, 16, 2), uint32] */;
  %709 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%702, dtype="uint32") /* ty=Tensor[(6, 16, 2), uint32] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %712 = bitwise_xor(%710, %711) /* ty=Tensor[(6, 16, 2), uint32] */;
  %713 = cast(%var_4748, dtype="bool") /* ty=Tensor[(6, 16, 2), bool] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="bool") /* ty=Tensor[(6, 16, 2), bool] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %717 = %696.1;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
  %719 = reshape(%718, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %720 = @func_1884(%698) /* ty=Tensor[(13, 12, 8), bool] */;
  %721 = logical_or(%715, %716) /* ty=Tensor[(6, 16, 2), bool] */;
  %722 = @func_310(%719) /* ty=Tensor[(2, 4, 16), float64] */;
  (%717, %var_4777, %var_4778, %720, meta[relay.Constant][57] /* ty=Tensor[(1248), float64] */, %721, %722)
}

def @func_10976() -> Tensor[(5, 15, 1), float64] {
  %723 = @func_9342() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) */;
  %723.1
}

def @func_10085() -> Tensor[(5, 15, 1), float64] {
  %724 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %724.0
}

def @func_5923(%var_5916: Tensor[(5, 6, 3), float32]) -> (Tensor[(5, 6, 3), float32],) {
  %725 = cast(%var_5916, dtype="float32") /* ty=Tensor[(5, 6, 3), float32] */;
  %726 = asin(%725) /* ty=Tensor[(5, 6, 3), float32] */;
  (%726,)
}

def @func_10236() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %727 = @func_9577() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %728 = @func_10085() /* ty=Tensor[(5, 15, 1), float64] */;
  %729 = %727.0;
  (%728, %729)
}

def @func_9767(%var_9740: Tensor[(22), uint16]) -> (Tensor[(630), float64], Tensor[(22), uint16], Tensor[(1188), uint32], Tensor[(1080, 1), float64], Tensor[(128), float64], Tensor[(14, 9, 5), bool], Tensor[(5, 15, 126), uint64]) {
  %730 = cast(%var_9740, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %731 = cast(meta[relay.Constant][58] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %732 = cast(meta[relay.Constant][59] /* ty=Tensor[(1080, 1), float64] */, dtype="float64") /* ty=Tensor[(1080, 1), float64] */;
  %733 = cast(meta[relay.Constant][60] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %734 = reshape(%730, newshape=[1, 11, 2]) /* ty=Tensor[(1, 11, 2), uint16] */;
  %735 = reshape(%731, newshape=[3, 396]) /* ty=Tensor[(3, 396), uint32] */;
  %736 = reshape(%732, newshape=[1080, 1]) /* ty=Tensor[(1080, 1), float64] */;
  %737 = reshape(%733, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %738 = @func_6893(%734, %735, %736, %737) /* ty=(Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) */;
  %739 = cast(meta[relay.Constant][61] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %740 = cast(meta[relay.Constant][62] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %741 = reshape(%739, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
  %742 = reshape(%740, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %743 = @func_2738(%741, %742) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
  %744 = %743.0;
  %745 = cast(meta[relay.Constant][62] /* ty=Tensor[(630), float64] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%744, dtype="bool") /* ty=Tensor[(14, 9, 5), bool] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %749 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %752 = cos(%751) /* ty=Tensor[(5, 15, 1), float32] */;
  %753 = cast(%752, dtype="uint64") /* ty=Tensor[(5, 15, 1), uint64] */;
  %754 = cast(meta[relay.Constant][61] /* ty=Tensor[(126), float64] */, dtype="uint64") /* ty=Tensor[(126), uint64] */;
  %755 = %738.11;
  %756 = less(%747, %748) /* ty=Tensor[(14, 9, 5), bool] */;
  %757 = left_shift(%753, %754) /* ty=Tensor[(5, 15, 126), uint64] */;
  (%755, %var_9740, meta[relay.Constant][58] /* ty=Tensor[(1188), uint32] */, meta[relay.Constant][59] /* ty=Tensor[(1080, 1), float64] */, meta[relay.Constant][60] /* ty=Tensor[(128), float64] */, %756, %757)
}

def @func_8557(%var_8552: Tensor[(700), int64]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) {
  %758 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %759 = cast(%var_8552, dtype="int64") /* ty=Tensor[(700), int64] */;
  %760 = cast(%var_8552, dtype="int64") /* ty=Tensor[(700), int64] */;
  %761 = reshape(%759, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %762 = reshape(%760, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %763 = %758.0;
  %764 = @func_6033(%761, %762) /* ty=Tensor[(5, 10, 14), int64] */;
  (%763, %764, %var_8552)
}

def @func_10890() -> Tensor[(5, 15, 1), float64] {
  %765 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %765.0
}

def @func_3971(%var_3944: Tensor[(13, 16, 5), float64], %var_3953: Tensor[(1, 1274), float32], %var_3954: Tensor[(650, 1), float64]) -> (Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) {
  %766 = cast(%var_3944, dtype="float64") /* ty=Tensor[(13, 16, 5), float64] */;
  %767 = cast(%var_3953, dtype="float32") /* ty=Tensor[(1, 1274), float32] */;
  %768 = cast(%var_3954, dtype="float64") /* ty=Tensor[(650, 1), float64] */;
  %769 = reshape(%767, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %770 = reshape(%768, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %771 = @func_3172(%769, %770) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %772 = tan(%766) /* ty=Tensor[(13, 16, 5), float64] */;
  %773 = %771.0;
  (%772, %773, %var_3953, %var_3954)
}

def @func_2213(%var_2198: Tensor[(9, 1, 14), float32]) -> Tensor[(9, 1, 14), float32] {
  %774 = cast(%var_2198, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  rsqrt(%774) /* ty=Tensor[(9, 1, 14), float32] */
}

def @func_12082() -> (Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(5, 15, 1), float64]) {
  %775 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 396), uint32] */, dtype="uint32") /* ty=Tensor[(3, 396), uint32] */;
  %776 = reshape(%775, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %777 = @func_9997(%776) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %778 = @func_10976() /* ty=Tensor[(5, 15, 1), float64] */;
  %779 = %777.1;
  %780 = @func_11357() /* ty=Tensor[(5, 15, 1), float64] */;
  (%778, %779, meta[relay.Constant][63] /* ty=Tensor[(3, 396), uint32] */, %780)
}

def @func_9207(%var_9204: int16, %var_9205: Tensor[(8, 30), int16]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], int16, Tensor[(8, 30), int16]) {
  %781 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %782 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %783 = cast(%var_9204, dtype="int16") /* ty=int16 */;
  %784 = cast(%var_9205, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %785 = reshape(%783, newshape=[]) /* ty=int16 */;
  %786 = reshape(%784, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int16] */;
  %787 = @func_708(%785, %786) /* ty=(Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %788 = %781.0;
  %789 = %782.0;
  %790 = %787.7;
  (%788, %789, %790, %var_9204, %var_9205)
}

def @func_5574(%var_5539: Tensor[(3, 12, 10), uint16], %var_5540: Tensor[(3, 12, 10), uint16]) -> (Tensor[(3, 12, 10), uint16], Tensor[(3, 12, 10), float64], Tensor[(11, 6, 15), int8], Tensor[(5, 198), int8]) {
  %791 = cast(%var_5540, dtype="uint16") /* ty=Tensor[(3, 12, 10), uint16] */;
  %792 = shape_of(%var_5539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%var_5539, dtype="uint16") /* ty=Tensor[(3, 12, 10), uint16] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %795 = cast(%var_5540, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %796 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 198), int8] */, dtype="int8") /* ty=Tensor[(5, 198), int8] */;
  %797 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 198), int8] */, dtype="int8") /* ty=Tensor[(5, 198), int8] */;
  %798 = reshape(%796, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %799 = reshape(%797, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %800 = multiply(%793, %794) /* ty=Tensor[(3, 12, 10), uint16] */;
  %801 = log10(%795) /* ty=Tensor[(3, 12, 10), float64] */;
  %802 = @func_3442(%798, %799) /* ty=Tensor[(11, 6, 15), int8] */;
  (%800, %801, %802, meta[relay.Constant][64] /* ty=Tensor[(5, 198), int8] */)
}

def @func_2738(%var_2729: Tensor[(14, 9, 1), float64], %var_2730: Tensor[(14, 9, 5), float64]) -> (Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) {
  %803 = cast(%var_2729, dtype="float64") /* ty=Tensor[(14, 9, 1), float64] */;
  %804 = cast(%var_2730, dtype="float64") /* ty=Tensor[(14, 9, 5), float64] */;
  %805 = cast(meta[relay.Constant][65] /* ty=Tensor[(2, 624), float64] */, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %806 = reshape(%805, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float64] */;
  %807 = floor_divide(%803, %804) /* ty=Tensor[(14, 9, 5), float64] */;
  %808 = @func_1884(%806) /* ty=Tensor[(13, 12, 8), bool] */;
  (%807, %808, meta[relay.Constant][65] /* ty=Tensor[(2, 624), float64] */)
}

def @func_8875(%var_8870: Tensor[(5, 15, 126), bool]) -> (Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) {
  %809 = cast(meta[relay.Constant][66] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %810 = reshape(%809, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %811 = @func_2213(%810) /* ty=Tensor[(9, 1, 14), float32] */;
  %812 = cast(meta[relay.Constant][66] /* ty=Tensor[(126), float32] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="bool") /* ty=Tensor[(9, 1, 14), bool] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %816 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %819 = sqrt(%818) /* ty=Tensor[(5, 15, 1), float32] */;
  %820 = cast(%819, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %821 = cast(meta[relay.Constant][66] /* ty=Tensor[(126), float32] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %822 = less(%820, %821) /* ty=Tensor[(5, 15, 126), bool] */;
  %823 = cast(%var_8870, dtype="bool") /* ty=Tensor[(5, 15, 126), bool] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="bool") /* ty=Tensor[(5, 15, 126), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %827 = logical_and(%814, %815) /* ty=Tensor[(9, ?, 14), bool] */;
  %828 = logical_or(%825, %826) /* ty=Tensor[(5, 15, 126), bool] */;
  (%827, %828)
}

def @func_310(%var_292: Tensor[(2, 4, 16), float64]) -> Tensor[(2, 4, 16), float64] {
  %829 = cast(%var_292, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
  rsqrt(%829) /* ty=Tensor[(2, 4, 16), float64] */
}

def @func_12436() -> (Tensor[(5, 15, 1), float64],) {
  %830 = @func_11033() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %831 = %830.0;
  (%831,)
}

def @func_9446(%var_9390: Tensor[(1, 220), uint16], %var_9437: Tensor[(120), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1, 990), int8], Tensor[(4, 11, 5), bool], Tensor[(5, 3, 8), float64], Tensor[(120), float64]) {
  %832 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %833 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
  %834 = cast(%var_9390, dtype="uint16") /* ty=Tensor[(1, 220), uint16] */;
  %835 = reshape(%834, newshape=[4, 11, 5]) /* ty=Tensor[(4, 11, 5), uint16] */;
  %836 = @func_5202(%835) /* ty=(Tensor[(4, 11, 5), uint16],) */;
  %837 = %836.0;
  %838 = cast(%var_9390, dtype="bool") /* ty=Tensor[(1, 220), bool] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="bool") /* ty=Tensor[(4, 11, 5), bool] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %842 = cast(%var_9437, dtype="float64") /* ty=Tensor[(120), float64] */;
  %843 = reshape(%842, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %844 = %832.0;
  %845 = %833.3;
  %846 = logical_or(%840, %841) /* ty=Tensor[(4, 11, 5), bool] */;
  %847 = @func_8685(%843) /* ty=Tensor[(5, 3, 8), float64] */;
  (%844, %845, %846, %847, %var_9437)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12436() -> (Tensor[(5, 15, 1), float64],) {
  %0 = @func_11033() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_9207(%var_9204: int16, %var_9205: Tensor[(8, 30), int16]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], int16, Tensor[(8, 30), int16]) {
  %2 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %3 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %4 = cast(%var_9204, dtype="int16") /* ty=int16 */;
  %5 = cast(%var_9205, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %6 = reshape(%4, newshape=[]) /* ty=int16 */;
  %7 = reshape(%5, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int16] */;
  %8 = @func_708(%6, %7) /* ty=(Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %9 = %2.0;
  %10 = %3.0;
  %11 = %8.7;
  (%9, %10, %11, %var_9204, %var_9205)
}

def @func_8497(%var_8495: Tensor[(5, 15, 13), float64], %var_8496: Tensor[(990), int8]) -> (Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) {
  @func_8493(%var_8495, %var_8496) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) */
}

def @func_10646(%var_10645: Tensor[(5, 5, 16), float32]) -> (Tensor[(5, 5, 16), float32],) {
  %14 = fn (%var_10637: Tensor[(5, 5, 16), float32]) -> (Tensor[(5, 5, 16), float32],) {
    %12 = cast(%var_10637, dtype="float32") /* ty=Tensor[(5, 5, 16), float32] */;
    %13 = atan(%12) /* ty=Tensor[(5, 5, 16), float32] */;
    (%13,)
  };
  %14(%var_10645) /* ty=(Tensor[(5, 5, 16), float32],) */
}

def @func_11814(%var_11812: Tensor[(70, 9), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(13, 12, 8), bool], Tensor[(126), float64], Tensor[(70, 9), float64]) {
  @func_11811(%var_11812) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(13, 12, 8), bool], Tensor[(126), float64], Tensor[(70, 9), float64]) */
}

def @func_9616(%var_9600: Tensor[(10, 2, 12), float32]) -> Tensor[(10, 2, 12), float32] {
  %15 = cast(%var_9600, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
  cosh(%15) /* ty=Tensor[(10, 2, 12), float32] */
}

def @func_11033() -> (Tensor[(5, 15, 1), float64],) {
  %16 = @func_9577() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %17 = %16.0;
  (%17,)
}

def @func_10926() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %18 = @func_9870() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32]) */;
  %19 = @func_10696() /* ty=Tensor[(5, 15, 1), float64] */;
  %20 = %18.0;
  (%19, %20)
}

def @func_5923(%var_5916: Tensor[(5, 6, 3), float32]) -> (Tensor[(5, 6, 3), float32],) {
  %21 = cast(%var_5916, dtype="float32") /* ty=Tensor[(5, 6, 3), float32] */;
  %22 = asin(%21) /* ty=Tensor[(5, 6, 3), float32] */;
  (%22,)
}

def @func_9692() -> (Tensor[(330, 3), int8], Tensor[(5, 15, 990), float64], Tensor[(5, 15, 990), bool], Tensor[(32, 2), uint16]) {
  @func_9690() /* ty=(Tensor[(330, 3), int8], Tensor[(5, 15, 990), float64], Tensor[(5, 15, 990), bool], Tensor[(32, 2), uint16]) */
}

def @func_11543(%var_11538: Tensor[(1080), float64], %var_11539: Tensor[(220), uint16], %var_11540: Tensor[(120), float64], %var_11541: Tensor[(700), int64], %var_11542: Tensor[(90), float32]) -> (Tensor[(6, 15, 12), float64], Tensor[(128), float64], Tensor[(5, 15, 1), float64], Tensor[(120), float64], Tensor[(5, 15, 220), float64], Tensor[(1188), uint32], Tensor[(1188), uint32], Tensor[(700), int64], Tensor[(700), int64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(5, 15, 1080), float32], Tensor[(5, 15, 1), float64]) {
  @func_11536(%var_11538, %var_11539, %var_11540, %var_11541, %var_11542) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(128), float64], Tensor[(5, 15, 1), float64], Tensor[(120), float64], Tensor[(5, 15, 220), float64], Tensor[(1188), uint32], Tensor[(1188), uint32], Tensor[(700), int64], Tensor[(700), int64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(5, 15, 1080), float32], Tensor[(5, 15, 1), float64]) */
}

def @func_12438() -> (Tensor[(5, 15, 1), float64],) {
  @func_12436() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_10484(%var_10482: Tensor[(4, 7, 9), float32], %var_10483: Tensor[(4, 7, 9), float32]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(4, 7, 9), int64]) {
  %37 = fn (%var_10458: Tensor[(4, 7, 9), float32], %var_10459: Tensor[(4, 7, 9), float32]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(4, 7, 9), int64]) {
    %23 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %24 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %25 = cast(%var_10459, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
    %26 = shape_of(%var_10458, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%var_10458, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %29 = greater(%27, %28) /* ty=Tensor[(4, 7, 9), bool] */;
    %30 = cast(%29, dtype="int64") /* ty=Tensor[(4, 7, 9), int64] */;
    %31 = shape_of(%var_10458, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%var_10458, dtype="int64") /* ty=Tensor[(4, 7, 9), int64] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %34 = %23.0;
    %35 = %24.0;
    %36 = right_shift(%32, %33) /* ty=Tensor[(4, 7, 9), int64] */;
    (%34, %35, %36)
  };
  %37(%var_10482, %var_10483) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(4, 7, 9), int64]) */
}

def @func_8421(%var_8419: Tensor[(126), float32], %var_8420: Tensor[(637, 2), float32]) -> (Tensor[(5, 15, 1), float64], Tensor[(9, 1, 14), float32], Tensor[(126), float32], Tensor[(650), float64], Tensor[(637, 2), float32], Tensor[(325, 2), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) {
  @func_8417(%var_8419, %var_8420) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(9, 1, 14), float32], Tensor[(126), float32], Tensor[(650), float64], Tensor[(637, 2), float32], Tensor[(325, 2), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) */
}

def @func_5578(%var_5576: Tensor[(3, 12, 10), uint16], %var_5577: Tensor[(3, 12, 10), uint16]) -> (Tensor[(3, 12, 10), uint16], Tensor[(3, 12, 10), float64], Tensor[(11, 6, 15), int8], Tensor[(5, 198), int8]) {
  @func_5574(%var_5576, %var_5577) /* ty=(Tensor[(3, 12, 10), uint16], Tensor[(3, 12, 10), float64], Tensor[(11, 6, 15), int8], Tensor[(5, 198), int8]) */
}

def @func_8559(%var_8558: Tensor[(700), int64]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) {
  %45 = fn (%var_8552: Tensor[(700), int64]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) {
    %38 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %39 = cast(%var_8552, dtype="int64") /* ty=Tensor[(700), int64] */;
    %40 = cast(%var_8552, dtype="int64") /* ty=Tensor[(700), int64] */;
    %41 = reshape(%39, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
    %42 = reshape(%40, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
    %43 = %38.0;
    %44 = @func_6033(%41, %42) /* ty=Tensor[(5, 10, 14), int64] */;
    (%43, %44, %var_8552)
  };
  %45(%var_8558) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) */
}

def @func_312(%var_311: Tensor[(2, 4, 16), float64]) -> Tensor[(2, 4, 16), float64] {
  %47 = fn (%var_292: Tensor[(2, 4, 16), float64]) -> Tensor[(2, 4, 16), float64] {
    %46 = cast(%var_292, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
    rsqrt(%46) /* ty=Tensor[(2, 4, 16), float64] */
  };
  %47(%var_311) /* ty=Tensor[(2, 4, 16), float64] */
}

def @func_11536(%var_11485: Tensor[(1080), float64], %var_11489: Tensor[(220), uint16], %var_11490: Tensor[(120), float64], %var_11525: Tensor[(700), int64], %var_11528: Tensor[(90), float32]) -> (Tensor[(6, 15, 12), float64], Tensor[(128), float64], Tensor[(5, 15, 1), float64], Tensor[(120), float64], Tensor[(5, 15, 220), float64], Tensor[(1188), uint32], Tensor[(1188), uint32], Tensor[(700), int64], Tensor[(700), int64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(5, 15, 1080), float32], Tensor[(5, 15, 1), float64]) {
  %48 = cast(%var_11485, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %49 = cast(meta[relay.Constant][0] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %50 = reshape(%48, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
  %51 = reshape(%49, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %52 = @func_1399(%50, %51) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) */;
  %53 = cast(%var_11489, dtype="uint16") /* ty=Tensor[(220), uint16] */;
  %54 = cast(%var_11490, dtype="float64") /* ty=Tensor[(120), float64] */;
  %55 = reshape(%53, newshape=[1, 220]) /* ty=Tensor[(1, 220), uint16] */;
  %56 = reshape(%54, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %57 = @func_9446(%55, %56) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(1, 990), int8], Tensor[(4, 11, 5), bool], Tensor[(5, 3, 8), float64], Tensor[(120), float64]) */;
  %58 = @func_10804() /* ty=Tensor[(5, 15, 1), float64] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %60 = cast(%var_11489, dtype="float64") /* ty=Tensor[(220), float64] */;
  %61 = cast(meta[relay.Constant][1] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %62 = reshape(%61, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %63 = @func_9997(%62) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %64 = cast(%var_11525, dtype="int64") /* ty=Tensor[(700), int64] */;
  %65 = reshape(%64, newshape=[700]) /* ty=Tensor[(700), int64] */;
  %66 = @func_8557(%65) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) */;
  %67 = cast(%var_11528, dtype="float32") /* ty=Tensor[(90), float32] */;
  %68 = reshape(%67, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %69 = @func_5923(%68) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %70 = cast(%var_11485, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %71 = cast(%58, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %72 = @func_10897() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %73 = %52.0;
  %74 = %57.0;
  %75 = multiply(%59, %60) /* ty=Tensor[(5, 15, 220), float64] */;
  %76 = %63.2;
  %77 = %66.2;
  %78 = %69.0;
  %79 = divide(%70, %71) /* ty=Tensor[(5, 15, 1080), float32] */;
  %80 = %72.0;
  (%73, meta[relay.Constant][0] /* ty=Tensor[(128), float64] */, %74, %var_11490, %75, %76, meta[relay.Constant][1] /* ty=Tensor[(1188), uint32] */, %77, %var_11525, %78, %var_11528, %79, %80)
}

def @func_8685(%var_8676: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), float64] {
  %81 = cast(%var_8676, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  tan(%81) /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_11662(%var_11660: Tensor[(1365), int8], %var_11661: Tensor[(180), int64]) -> (Tensor[(180), int64], Tensor[(1365), int8], Tensor[(5, 15, 180), bool], Tensor[(5, 15, 1), float64]) {
  %94 = fn (%var_11621: Tensor[(1365), int8], %var_11622: Tensor[(180), int64]) -> (Tensor[(180), int64], Tensor[(1365), int8], Tensor[(5, 15, 180), bool], Tensor[(5, 15, 1), float64]) {
    %82 = cast(%var_11621, dtype="int8") /* ty=Tensor[(1365), int8] */;
    %83 = cast(%var_11622, dtype="int64") /* ty=Tensor[(180), int64] */;
    %84 = reshape(%82, newshape=[1365]) /* ty=Tensor[(1365), int8] */;
    %85 = reshape(%83, newshape=[30, 6]) /* ty=Tensor[(30, 6), int64] */;
    %86 = @func_9304(%84, %85) /* ty=(Tensor[(180), int64], Tensor[(30, 6), int64], Tensor[(5, 15, 1365), int32]) */;
    %87 = @func_10696() /* ty=Tensor[(5, 15, 1), float64] */;
    %88 = cast(%87, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
    %89 = cast(%var_11622, dtype="bool") /* ty=Tensor[(180), bool] */;
    %90 = @func_9342() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) */;
    %91 = %86.0;
    %92 = not_equal(%88, %89) /* ty=Tensor[(5, 15, 180), bool] */;
    %93 = %90.1;
    (%91, %var_11621, %92, %93)
  };
  %94(%var_11660, %var_11661) /* ty=(Tensor[(180), int64], Tensor[(1365), int8], Tensor[(5, 15, 180), bool], Tensor[(5, 15, 1), float64]) */
}

def @func_12347(%var_12346: Tensor[(5, 15, 1), float64]) -> (Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float64]) {
  %103 = fn (%var_12327: Tensor[(5, 15, 1), float64]) -> (Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float64]) {
    %95 = @func_10804() /* ty=Tensor[(5, 15, 1), float64] */;
    %96 = cast(%var_12327, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
    %98 = cast(%95, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %100 = @func_11941() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %101 = subtract(%98, %99) /* ty=Tensor[(5, 15, ?), float64] */;
    %102 = %100.0;
    (%101, %102)
  };
  %103(%var_12346) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float64]) */
}

def @func_8597() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) {
  @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */
}

def @func_9578() -> (Tensor[(5, 15, 1), float64],) {
  %105 = fn () -> (Tensor[(5, 15, 1), float64],) {
    %104 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
    (%104,)
  };
  %105() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_8437() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %106 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %107 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %108 = %106.0;
  %109 = %107.0;
  (%108, %109)
}

def @func_11782(%var_11779: Tensor[(6, 5, 6), uint32], %var_11780: Tensor[(1040), float64], %var_11781: Tensor[(1274), float32]) -> (Tensor[(6, 5, 6), uint32], Tensor[(13, 14, 7), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64]) {
  @func_11777(%var_11779, %var_11780, %var_11781) /* ty=(Tensor[(6, 5, 6), uint32], Tensor[(13, 14, 7), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64]) */
}

def @func_9872() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32]) {
  @func_9870() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32]) */
}

def @func_9446(%var_9390: Tensor[(1, 220), uint16], %var_9437: Tensor[(120), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1, 990), int8], Tensor[(4, 11, 5), bool], Tensor[(5, 3, 8), float64], Tensor[(120), float64]) {
  %110 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %111 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
  %112 = cast(%var_9390, dtype="uint16") /* ty=Tensor[(1, 220), uint16] */;
  %113 = reshape(%112, newshape=[4, 11, 5]) /* ty=Tensor[(4, 11, 5), uint16] */;
  %114 = @func_5202(%113) /* ty=(Tensor[(4, 11, 5), uint16],) */;
  %115 = %114.0;
  %116 = cast(%var_9390, dtype="bool") /* ty=Tensor[(1, 220), bool] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="bool") /* ty=Tensor[(4, 11, 5), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = cast(%var_9437, dtype="float64") /* ty=Tensor[(120), float64] */;
  %121 = reshape(%120, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %122 = %110.0;
  %123 = %111.3;
  %124 = logical_or(%118, %119) /* ty=Tensor[(4, 11, 5), bool] */;
  %125 = @func_8685(%121) /* ty=Tensor[(5, 3, 8), float64] */;
  (%122, %123, %124, %125, %var_9437)
}

def @func_11164(%var_11162: Tensor[(16, 5, 11), float32]) -> (Tensor[(16, 5, 11), float32], Tensor[(16, 5, 11), float32]) {
  @func_11161(%var_11162) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(16, 5, 11), float32]) */
}

def @func_11941() -> (Tensor[(5, 15, 1), float64],) {
  %126 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %127 = %126.0;
  (%127,)
}

def @func_129(%var_127: Tensor[(12, 11, 9), uint32], %var_128: Tensor[(12, 11, 9), uint32]) -> Tensor[(12, 11, 9), uint32] {
  @func_125(%var_127, %var_128) /* ty=Tensor[(12, 11, 9), uint32] */
}

def @func_3780(%var_3778: Tensor[(13, 7, 15), int8], %var_3779: Tensor[(180), int64]) -> (Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) {
  %137 = fn (%var_3751: Tensor[(13, 7, 15), int8], %var_3757: Tensor[(180), int64]) -> (Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) {
    %128 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 7, 15), int8] */, dtype="int8") /* ty=Tensor[(13, 7, 15), int8] */;
    %129 = shape_of(%var_3751, dtype="int32") /* ty=Tensor[(3), int32] */;
    %130 = cast(%var_3751, dtype="int8") /* ty=Tensor[(13, 7, 15), int8] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %132 = cast(%var_3757, dtype="int64") /* ty=Tensor[(180), int64] */;
    %133 = reshape(%132, newshape=[12, 15, 1]) /* ty=Tensor[(12, 15, 1), int64] */;
    %134 = @func_2489(%133) /* ty=(Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */;
    %135 = subtract(%130, %131) /* ty=Tensor[(13, 7, 15), int8] */;
    %136 = %134.2;
    (%135, %136, %var_3757)
  };
  %137(%var_3778, %var_3779) /* ty=(Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) */
}

def @func_2216(%var_2214: Tensor[(9, 1, 14), float32]) -> Tensor[(9, 1, 14), float32] {
  @func_2213(%var_2214) /* ty=Tensor[(9, 1, 14), float32] */
}

def @func_9788(%var_9787: Tensor[(9450), bool]) -> (Tensor[(5, 15, 1), float64], Tensor[(9, ?, 14), bool], Tensor[(9450), bool]) {
  %143 = fn (%var_9784: Tensor[(9450), bool]) -> (Tensor[(5, 15, 1), float64], Tensor[(9, ?, 14), bool], Tensor[(9450), bool]) {
    %138 = cast(%var_9784, dtype="bool") /* ty=Tensor[(9450), bool] */;
    %139 = reshape(%138, newshape=[5, 15, 126]) /* ty=Tensor[(5, 15, 126), bool] */;
    %140 = @func_8875(%139) /* ty=(Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) */;
    %141 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
    %142 = %140.0;
    (%141, %142, %var_9784)
  };
  %143(%var_9787) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(9, ?, 14), bool], Tensor[(9450), bool]) */
}

def @func_11328(%var_11327: Tensor[(975, 2), float64]) -> (Tensor[(5, 15, ?), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(975, 2), float32], Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), float32]) {
  %175 = fn (%var_11291: Tensor[(975, 2), float64]) -> (Tensor[(5, 15, ?), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(975, 2), float32], Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), float32]) {
    %144 = @func_10897() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %145 = %144.0;
    %146 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
    %147 = %146.0;
    %148 = cast(%147, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
    %149 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(%145, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %152 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
    %153 = %152.2;
    %154 = cast(%153, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
    %155 = cast(%var_11291, dtype="float32") /* ty=Tensor[(975, 2), float32] */;
    %156 = cast(meta[relay.Constant][3] /* ty=Tensor[(18, 66), uint32] */, dtype="uint32") /* ty=Tensor[(18, 66), uint32] */;
    %157 = reshape(%156, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
    %158 = @func_9997(%157) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
    %159 = %158.1;
    %160 = cast(%159, dtype="int8") /* ty=Tensor[(12, 11, 9), int8] */;
    %161 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(18, 66), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %162 = cast(meta[relay.Constant][3] /* ty=Tensor[(18, 66), uint32] */, dtype="int8") /* ty=Tensor[(18, 66), int8] */;
    %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %164 = right_shift(%162, %163) /* ty=Tensor[(18, 66), int8] */;
    %165 = cast(%164, dtype="float32") /* ty=Tensor[(18, 66), float32] */;
    %166 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
    %167 = cast(%159, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
    %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %169 = power(%150, %151) /* ty=Tensor[(5, 15, ?), float32] */;
    %170 = @func_10547() /* ty=Tensor[(5, 15, 1), float64] */;
    %171 = @func_9222() /* ty=Tensor[(5, 15, 1), float64] */;
    %172 = mod(%154, %155) /* ty=Tensor[(975, 2), float32] */;
    %173 = @func_9222() /* ty=Tensor[(5, 15, 1), float64] */;
    %174 = divide(%167, %168) /* ty=Tensor[(12, 11, 9), float32] */;
    (%169, %170, %171, %172, %173, %174)
  };
  %175(%var_11327) /* ty=(Tensor[(5, 15, ?), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(975, 2), float32], Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), float32]) */
}

def @func_6893(%var_6790: Tensor[(1, 11, 2), uint16], %var_6796: Tensor[(3, 396), uint32], %var_6844: Tensor[(1080, 1), float64], %var_6845: Tensor[(128), float64]) -> (Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) {
  %176 = cast(%var_6796, dtype="uint32") /* ty=Tensor[(3, 396), uint32] */;
  %177 = cast(%var_6796, dtype="uint32") /* ty=Tensor[(3, 396), uint32] */;
  %178 = reshape(%176, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %179 = reshape(%177, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %180 = cast(%var_6790, dtype="uint16") /* ty=Tensor[(1, 11, 2), uint16] */;
  %181 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 11, 2), uint16] */, dtype="uint16") /* ty=Tensor[(2, 11, 2), uint16] */;
  %182 = multiply(%180, %181) /* ty=Tensor[(2, 11, 2), uint16] */;
  %183 = cast(%182, dtype="uint64") /* ty=Tensor[(2, 11, 2), uint64] */;
  %184 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(2, 11, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 11, 2), uint16] */, dtype="uint64") /* ty=Tensor[(2, 11, 2), uint64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %187 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1040), float64] */, dtype="float64") /* ty=Tensor[(1, 1040), float64] */;
  %188 = cast(meta[relay.Constant][6] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %189 = cast(meta[relay.Constant][7] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %190 = reshape(%187, newshape=[13, 16, 5]) /* ty=Tensor[(13, 16, 5), float64] */;
  %191 = reshape(%188, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), float32] */;
  %192 = reshape(%189, newshape=[650, 1]) /* ty=Tensor[(650, 1), float64] */;
  %193 = @func_3971(%190, %191, %192) /* ty=(Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) */;
  %194 = cast(meta[relay.Constant][8] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %195 = reshape(%194, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %196 = @func_5923(%195) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %197 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1040), float64] */, dtype="float32") /* ty=Tensor[(1, 1040), float32] */;
  %198 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 1040), float64] */, dtype="float32") /* ty=Tensor[(12, 1040), float32] */;
  %199 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %200 = cast(meta[relay.Constant][11] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %201 = reshape(%199, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
  %202 = reshape(%200, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %203 = @func_2738(%201, %202) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
  %204 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 1040), float64] */, dtype="bool") /* ty=Tensor[(12, 1040), bool] */;
  %205 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1040), float64] */, dtype="bool") /* ty=Tensor[(1, 1040), bool] */;
  %206 = cast(%var_6844, dtype="float64") /* ty=Tensor[(1080, 1), float64] */;
  %207 = cast(%var_6845, dtype="float64") /* ty=Tensor[(128), float64] */;
  %208 = reshape(%206, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
  %209 = reshape(%207, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %210 = @func_1399(%208, %209) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) */;
  %211 = %193.3;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(650, 1), float64] */;
  %213 = reshape(%212, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float64] */;
  %214 = @func_1339(%213) /* ty=(Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
  %215 = cast(%var_6844, dtype="bool") /* ty=Tensor[(1080, 1), bool] */;
  %216 = cast(%var_6845, dtype="bool") /* ty=Tensor[(128), bool] */;
  %217 = @func_125(%178, %179) /* ty=Tensor[(12, 11, 9), uint32] */;
  %218 = right_shift(%185, %186) /* ty=Tensor[(2, 11, 2), uint64] */;
  %219 = %196.0;
  %220 = power(%197, %198) /* ty=Tensor[(12, 1040), float32] */;
  %221 = %203.2;
  %222 = logical_and(%204, %205) /* ty=Tensor[(12, 1040), bool] */;
  %223 = %210.0;
  %224 = %214.1;
  %225 = less_equal(%215, %216) /* ty=Tensor[(1080, 128), bool] */;
  (%217, %var_6796, %218, %211, meta[relay.Constant][6] /* ty=Tensor[(1274), float32] */, meta[relay.Constant][7] /* ty=Tensor[(650), float64] */, %219, meta[relay.Constant][8] /* ty=Tensor[(90), float32] */, %220, %221, meta[relay.Constant][10] /* ty=Tensor[(126), float64] */, meta[relay.Constant][11] /* ty=Tensor[(630), float64] */, %222, %223, %224, %225)
}

def @func_8878(%var_8876: Tensor[(5, 15, 126), bool]) -> (Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) {
  @func_8875(%var_8876) /* ty=(Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) */
}

def @func_12083() -> (Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(5, 15, 1), float64]) {
  %232 = fn () -> (Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(5, 15, 1), float64]) {
    %226 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 396), uint32] */, dtype="uint32") /* ty=Tensor[(3, 396), uint32] */;
    %227 = reshape(%226, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
    %228 = @func_9997(%227) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
    %229 = @func_10976() /* ty=Tensor[(5, 15, 1), float64] */;
    %230 = %228.1;
    %231 = @func_11357() /* ty=Tensor[(5, 15, 1), float64] */;
    (%229, %230, meta[relay.Constant][12] /* ty=Tensor[(3, 396), uint32] */, %231)
  };
  %232() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(5, 15, 1), float64]) */
}

def @func_10450(%var_10447: Tensor[(128), float64], %var_10448: Tensor[(1, 120), float64], %var_10449: Tensor[(2, 624), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(5, 10, 14), int64], Tensor[(350, 2), int64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(1, 120), float64], Tensor[(2, 624), uint32], Tensor[(2, 624), uint64], Tensor[(2, 624), float32], Tensor[(7, 182), float64]) {
  %296 = fn (%var_10261: Tensor[(128), float64], %var_10335: Tensor[(1, 120), float64], %var_10351: Tensor[(2, 624), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(5, 10, 14), int64], Tensor[(350, 2), int64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(1, 120), float64], Tensor[(2, 624), uint32], Tensor[(2, 624), uint64], Tensor[(2, 624), float32], Tensor[(7, 182), float64]) {
    %233 = cast(%var_10261, dtype="float64") /* ty=Tensor[(128), float64] */;
    %234 = reshape(%233, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
    %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(350, 2), int64] */, dtype="int64") /* ty=Tensor[(350, 2), int64] */;
    %236 = cast(meta[relay.Constant][15] /* ty=Tensor[(350, 2), int64] */, dtype="int64") /* ty=Tensor[(350, 2), int64] */;
    %237 = reshape(%235, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
    %238 = reshape(%236, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
    %239 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 182), float32] */, dtype="float32") /* ty=Tensor[(7, 182), float32] */;
    %240 = cast(meta[relay.Constant][17] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
    %241 = reshape(%239, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
    %242 = reshape(%240, newshape=[650]) /* ty=Tensor[(650), float64] */;
    %243 = @func_3172(%241, %242) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
    %244 = cast(%var_10335, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
    %245 = reshape(%244, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %246 = @func_8727(%245) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 3, 8), float64], Tensor[(120), float64], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64]) */;
    %247 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %248 = cast(meta[relay.Constant][14] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %249 = reshape(%247, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
    %250 = reshape(%248, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
    %251 = @func_2738(%249, %250) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
    %252 = %251.2;
    %253 = cast(%252, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
    %254 = atan(%253) /* ty=Tensor[(2, 624), float64] */;
    %255 = cast(%252, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
    %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(2), int32] */;
    %257 = cast(%254, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
    %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %259 = minimum(%257, %258) /* ty=Tensor[(2, 624), uint64] */;
    %260 = cast(%var_10351, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
    %261 = shape_of(%254, dtype="int32") /* ty=Tensor[(2), int32] */;
    %262 = cast(%254, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
    %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %264 = mod(%262, %263) /* ty=Tensor[(2, 624), float64] */;
    %265 = cast(%264, dtype="uint32") /* ty=Tensor[(2, 624), uint32] */;
    %266 = shape_of(%259, dtype="int32") /* ty=Tensor[(2), int32] */;
    %267 = cast(%259, dtype="uint32") /* ty=Tensor[(2, 624), uint32] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %269 = cast(%254, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
    %270 = cos(%269) /* ty=Tensor[(2, 624), float32] */;
    %271 = cast(%252, dtype="uint8") /* ty=Tensor[(2, 624), uint8] */;
    %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(2), int32] */;
    %273 = cast(%270, dtype="uint8") /* ty=Tensor[(2, 624), uint8] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %275 = maximum(%273, %274) /* ty=Tensor[(2, 624), uint8] */;
    %276 = cast(%275, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
    %277 = shape_of(%264, dtype="int32") /* ty=Tensor[(2), int32] */;
    %278 = cast(%264, dtype="uint64") /* ty=Tensor[(2, 624), uint64] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %280 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 624), float64] */, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
    %281 = shape_of(%254, dtype="int32") /* ty=Tensor[(2), int32] */;
    %282 = cast(%254, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
    %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %284 = floor_mod(%282, %283) /* ty=Tensor[(2, 624), float64] */;
    %285 = cast(%284, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
    %286 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 182), float32] */, dtype="float64") /* ty=Tensor[(7, 182), float64] */;
    %287 = @func_10015() /* ty=Tensor[(5, 15, 1), float64] */;
    %288 = @func_310(%234) /* ty=Tensor[(2, 4, 16), float64] */;
    %289 = @func_6033(%237, %238) /* ty=Tensor[(5, 10, 14), int64] */;
    %290 = %243.4;
    %291 = %246.3;
    %292 = bitwise_or(%267, %268) /* ty=Tensor[(2, 624), uint32] */;
    %293 = right_shift(%278, %279) /* ty=Tensor[(2, 624), uint64] */;
    %294 = sqrt(%285) /* ty=Tensor[(2, 624), float32] */;
    %295 = log(%286) /* ty=Tensor[(7, 182), float64] */;
    (%287, %288, %var_10261, meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, meta[relay.Constant][14] /* ty=Tensor[(630), float64] */, %289, meta[relay.Constant][15] /* ty=Tensor[(350, 2), int64] */, %290, meta[relay.Constant][17] /* ty=Tensor[(650), float64] */, %291, %var_10335, %292, %293, %294, %295)
  };
  %296(%var_10447, %var_10448, %var_10449) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(5, 10, 14), int64], Tensor[(350, 2), int64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(650), float64], Tensor[(1, 120), float64], Tensor[(2, 624), uint32], Tensor[(2, 624), uint64], Tensor[(2, 624), float32], Tensor[(7, 182), float64]) */
}

def @func_10816() -> (Tensor[(5, 15, 1), float64],) {
  %297 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %298 = %297.0;
  (%298,)
}

def @func_11095() -> (Tensor[(5, 15, 1), float32],) {
  %299 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
  %300 = %299.0;
  (%300,)
}

def @func_10697() -> Tensor[(5, 15, 1), float64] {
  %302 = fn () -> Tensor[(5, 15, 1), float64] {
    %301 = @func_9577() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %301.0
  };
  %302() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_9843(%var_9841: Tensor[(5, 15, 13), float64]) -> Tensor[(5, 15, 13), uint64] {
  @func_9840(%var_9841) /* ty=Tensor[(5, 15, 13), uint64] */
}

def @func_125(%var_111: Tensor[(12, 11, 9), uint32], %var_112: Tensor[(12, 11, 9), uint32]) -> Tensor[(12, 11, 9), uint32] {
  %303 = cast(%var_112, dtype="uint32") /* ty=Tensor[(12, 11, 9), uint32] */;
  %304 = shape_of(%var_111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%var_111, dtype="uint32") /* ty=Tensor[(12, 11, 9), uint32] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%305, %306) /* ty=Tensor[(12, 11, 9), uint32] */
}

def @func_9554() -> (Tensor[(5, 15, ?), float64],) {
  %313 = fn () -> (Tensor[(5, 15, ?), float64],) {
    %307 = @func_9222() /* ty=Tensor[(5, 15, 1), float64] */;
    %308 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%307, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %312 = floor_divide(%310, %311) /* ty=Tensor[(5, 15, ?), float64] */;
    (%312,)
  };
  %313() /* ty=(Tensor[(5, 15, ?), float64],) */
}

def @func_5926(%var_5924: Tensor[(5, 6, 3), float32]) -> (Tensor[(5, 6, 3), float32],) {
  @func_5923(%var_5924) /* ty=(Tensor[(5, 6, 3), float32],) */
}

def @func_11887() -> (Tensor[(5, 15, 1), float64],) {
  @func_11885() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_10547() -> Tensor[(5, 15, 1), float64] {
  %314 = @func_9526() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %314.0
}

def @func_8541(%var_8538: Tensor[(1274), float32], %var_8539: Tensor[(650), float64], %var_8540: Tensor[(180), int64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1, 1274), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(2, 4, 16), float64], Tensor[(180), int64]) {
  %329 = fn (%var_8522: Tensor[(1274), float32], %var_8523: Tensor[(650), float64], %var_8534: Tensor[(180), int64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1, 1274), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(2, 4, 16), float64], Tensor[(180), int64]) {
    %315 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
    %316 = cast(meta[relay.Constant][20] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %317 = cast(%var_8522, dtype="float32") /* ty=Tensor[(1274), float32] */;
    %318 = cast(%var_8523, dtype="float64") /* ty=Tensor[(650), float64] */;
    %319 = reshape(%316, newshape=[13, 16, 5]) /* ty=Tensor[(13, 16, 5), float64] */;
    %320 = reshape(%317, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), float32] */;
    %321 = reshape(%318, newshape=[650, 1]) /* ty=Tensor[(650, 1), float64] */;
    %322 = @func_3971(%319, %320, %321) /* ty=(Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) */;
    %323 = cast(%var_8534, dtype="int64") /* ty=Tensor[(180), int64] */;
    %324 = reshape(%323, newshape=[12, 15, 1]) /* ty=Tensor[(12, 15, 1), int64] */;
    %325 = @func_2489(%324) /* ty=(Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */;
    %326 = %315.1;
    %327 = %322.2;
    %328 = %325.1;
    (%326, %327, meta[relay.Constant][20] /* ty=Tensor[(1040), float64] */, %var_8522, %var_8523, %328, %var_8534)
  };
  %329(%var_8538, %var_8539, %var_8540) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(1, 1274), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(2, 4, 16), float64], Tensor[(180), int64]) */
}

def @func_2492(%var_2490: Tensor[(12, 15, 1), int64]) -> (Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) {
  @func_2489(%var_2490) /* ty=(Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */
}

def @func_4841(%var_4838: Tensor[(6, 16, 2), float32], %var_4839: Tensor[(1274), float32], %var_4840: Tensor[(650), float64]) -> (Tensor[(2, 4, 16), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(13, 12, 8), bool], Tensor[(1248), float64], Tensor[(6, 16, 2), bool], Tensor[(2, 4, 16), float64]) {
  %361 = fn (%var_4748: Tensor[(6, 16, 2), float32], %var_4777: Tensor[(1274), float32], %var_4778: Tensor[(650), float64]) -> (Tensor[(2, 4, 16), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(13, 12, 8), bool], Tensor[(1248), float64], Tensor[(6, 16, 2), bool], Tensor[(2, 4, 16), float64]) {
    %330 = cast(%var_4777, dtype="float32") /* ty=Tensor[(1274), float32] */;
    %331 = cast(%var_4778, dtype="float64") /* ty=Tensor[(650), float64] */;
    %332 = reshape(%330, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
    %333 = reshape(%331, newshape=[650]) /* ty=Tensor[(650), float64] */;
    %334 = @func_3172(%332, %333) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
    %335 = cast(meta[relay.Constant][21] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %336 = reshape(%335, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float64] */;
    %337 = cast(%var_4748, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
    %338 = cosh(%337) /* ty=Tensor[(6, 16, 2), float32] */;
    %339 = cast(%338, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
    %340 = cos(%339) /* ty=Tensor[(6, 16, 2), float32] */;
    %341 = cast(%var_4748, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
    %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
    %343 = cast(%340, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %345 = floor_mod(%343, %344) /* ty=Tensor[(6, 16, 2), float32] */;
    %346 = cast(%345, dtype="uint32") /* ty=Tensor[(6, 16, 2), uint32] */;
    %347 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
    %348 = cast(%340, dtype="uint32") /* ty=Tensor[(6, 16, 2), uint32] */;
    %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %350 = bitwise_xor(%348, %349) /* ty=Tensor[(6, 16, 2), uint32] */;
    %351 = cast(%var_4748, dtype="bool") /* ty=Tensor[(6, 16, 2), bool] */;
    %352 = shape_of(%350, dtype="int32") /* ty=Tensor[(3), int32] */;
    %353 = cast(%350, dtype="bool") /* ty=Tensor[(6, 16, 2), bool] */;
    %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %355 = %334.1;
    %356 = cast(%355, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
    %357 = reshape(%356, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
    %358 = @func_1884(%336) /* ty=Tensor[(13, 12, 8), bool] */;
    %359 = logical_or(%353, %354) /* ty=Tensor[(6, 16, 2), bool] */;
    %360 = @func_310(%357) /* ty=Tensor[(2, 4, 16), float64] */;
    (%355, %var_4777, %var_4778, %358, meta[relay.Constant][21] /* ty=Tensor[(1248), float64] */, %359, %360)
  };
  %361(%var_4838, %var_4839, %var_4840) /* ty=(Tensor[(2, 4, 16), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(13, 12, 8), bool], Tensor[(1248), float64], Tensor[(6, 16, 2), bool], Tensor[(2, 4, 16), float64]) */
}

def @func_8727(%var_8720: Tensor[(120), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 3, 8), float64], Tensor[(120), float64], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64]) {
  %362 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %363 = %362.0;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %365 = cast(%var_8720, dtype="float64") /* ty=Tensor[(120), float64] */;
  %366 = reshape(%365, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %367 = cast(meta[relay.Constant][22] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %368 = cast(meta[relay.Constant][23] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %369 = reshape(%367, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %370 = reshape(%368, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %371 = @func_3172(%369, %370) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %372 = rsqrt(%364) /* ty=Tensor[(5, 15, 1), float64] */;
  %373 = @func_8685(%366) /* ty=Tensor[(5, 3, 8), float64] */;
  %374 = %371.4;
  (%372, %373, %var_8720, %374, meta[relay.Constant][22] /* ty=Tensor[(1274), float32] */, meta[relay.Constant][23] /* ty=Tensor[(650), float64] */)
}

def @func_1342(%var_1340: Tensor[(13, 10, 5), float64]) -> (Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
  @func_1339(%var_1340) /* ty=(Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */
}

def @func_9564() -> Tensor[(5, 15, 1), float64] {
  %375 = @func_9342() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) */;
  %375.1
}

def @func_11871(%var_11866: Tensor[(16, 2, 13), int16], %var_11867: Tensor[(16, 2, 13), int16]) -> Tensor[(16, 2, 13), int16] {
  %376 = cast(%var_11867, dtype="int16") /* ty=Tensor[(16, 2, 13), int16] */;
  %377 = shape_of(%var_11866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%var_11866, dtype="int16") /* ty=Tensor[(16, 2, 13), int16] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%378, %379) /* ty=Tensor[(16, 2, 13), int16] */
}

def @func_8303() -> (Tensor[(5, 15, 1), float64],) {
  %382 = fn () -> (Tensor[(5, 15, 1), float64],) {
    %380 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %381 = %380.0;
    (%381,)
  };
  %382() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_10818() -> (Tensor[(5, 15, 1), float64],) {
  @func_10816() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_711(%var_709: int16, %var_710: Tensor[(4, 5, 12), int16]) -> (Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
  %403 = fn (%var_618: int16, %var_619: Tensor[(4, 5, 12), int16]) -> (Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
    %383 = cast(%var_618, dtype="int16") /* ty=int16 */;
    %384 = cast(%var_619, dtype="int16") /* ty=Tensor[(4, 5, 12), int16] */;
    %385 = cast(meta[relay.Constant][24] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %386 = reshape(%385, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
    %387 = cast(%var_619, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
    %388 = cast(%var_618, dtype="bool") /* ty=bool */;
    %389 = @func_310(%386) /* ty=Tensor[(2, 4, 16), float64] */;
    %390 = cast(%389, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
    %391 = reshape(%390, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
    %392 = cast(%389, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
    %393 = reshape(%392, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
    %394 = cast(meta[relay.Constant][25] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
    %395 = cast(meta[relay.Constant][25] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
    %396 = reshape(%394, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
    %397 = reshape(%395, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
    %398 = add(%383, %384) /* ty=Tensor[(4, 5, 12), int16] */;
    %399 = less(%387, %388) /* ty=Tensor[(4, 5, 12), bool] */;
    %400 = @func_310(%391) /* ty=Tensor[(2, 4, 16), float64] */;
    %401 = @func_310(%393) /* ty=Tensor[(2, 4, 16), float64] */;
    %402 = @func_125(%396, %397) /* ty=Tensor[(12, 11, 9), uint32] */;
    (%398, %389, meta[relay.Constant][24] /* ty=Tensor[(128), float64] */, %399, %400, %401, %402, meta[relay.Constant][25] /* ty=Tensor[(1188), uint32] */)
  };
  %403(%var_709, %var_710) /* ty=(Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */
}

def @func_12020() -> (Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float32]) {
  %408 = fn () -> (Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float32]) {
    %404 = @func_9553() /* ty=(Tensor[(5, 15, ?), float64],) */;
    %405 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
    %406 = %404.0;
    %407 = %405.0;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(5, 15, ?), float64], Tensor[(5, 15, 1), float32]) */
}

def @func_9222() -> Tensor[(5, 15, 1), float64] {
  %409 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %409.0
}

def @func_10549() -> Tensor[(5, 15, 1), float64] {
  @func_10547() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_8730(%var_8728: Tensor[(120), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 3, 8), float64], Tensor[(120), float64], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64]) {
  @func_8727(%var_8728) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 3, 8), float64], Tensor[(120), float64], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64]) */
}

def @func_2489(%var_2473: Tensor[(12, 15, 1), int64]) -> (Tensor[(12, 15, 1), int64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) {
  %410 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %411 = cast(%var_2473, dtype="int64") /* ty=Tensor[(12, 15, 1), int64] */;
  %412 = cast(meta[relay.Constant][26] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %413 = reshape(%412, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %414 = bitwise_and(%410, %411) /* ty=Tensor[(12, 15, 1), int64] */;
  %415 = @func_310(%413) /* ty=Tensor[(2, 4, 16), float64] */;
  (%414, %415, meta[relay.Constant][26] /* ty=Tensor[(128), float64] */)
}

def @func_8675() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %420 = fn () -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
    %416 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %417 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %418 = %416.0;
    %419 = %417.0;
    (%418, %419)
  };
  %420() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */
}

def @func_10892() -> Tensor[(5, 15, 1), float64] {
  @func_10890() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_9450(%var_9448: Tensor[(1, 220), uint16], %var_9449: Tensor[(120), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1, 990), int8], Tensor[(4, 11, 5), bool], Tensor[(5, 3, 8), float64], Tensor[(120), float64]) {
  @func_9446(%var_9448, %var_9449) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(1, 990), int8], Tensor[(4, 11, 5), bool], Tensor[(5, 3, 8), float64], Tensor[(120), float64]) */
}

def @func_9164(%var_9093: Tensor[(1188), uint32], %var_9123: Tensor[(975), float64], %var_9133: Tensor[(180), int64], %var_9140: Tensor[(1080), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 15, 1), float64], Tensor[(13, 14, 7), float32], Tensor[(5, 15, 13), bool], Tensor[(975), float64], Tensor[(330, 3), int8], Tensor[(180), int64], Tensor[(1365), int8], Tensor[(180), int64], Tensor[(650, 1), float64], Tensor[(22), uint16], Tensor[(1080), float64], Tensor[(128), float64], Tensor[(12, 11, 9), float32]) {
  %421 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %422 = cast(meta[relay.Constant][27] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %423 = cast(meta[relay.Constant][28] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %424 = reshape(%422, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %425 = reshape(%423, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %426 = @func_3172(%424, %425) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %427 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %428 = cast(meta[relay.Constant][27] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %429 = %426.4;
  %430 = cast(%429, dtype="float64") /* ty=Tensor[(650), float64] */;
  %431 = reshape(%428, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %432 = reshape(%430, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %433 = @func_3172(%431, %432) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %434 = cast(%var_9123, dtype="float64") /* ty=Tensor[(975), float64] */;
  %435 = cast(meta[relay.Constant][29] /* ty=Tensor[(330, 3), int8] */, dtype="int8") /* ty=Tensor[(330, 3), int8] */;
  %436 = reshape(%434, newshape=[5, 15, 13]) /* ty=Tensor[(5, 15, 13), float64] */;
  %437 = reshape(%435, newshape=[990]) /* ty=Tensor[(990), int8] */;
  %438 = @func_8493(%436, %437) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) */;
  %439 = cast(meta[relay.Constant][30] /* ty=Tensor[(1365), int8] */, dtype="int8") /* ty=Tensor[(1365), int8] */;
  %440 = cast(%var_9133, dtype="int64") /* ty=Tensor[(180), int64] */;
  %441 = reshape(%439, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), int8] */;
  %442 = reshape(%440, newshape=[180]) /* ty=Tensor[(180), int64] */;
  %443 = @func_3777(%441, %442) /* ty=(Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) */;
  %444 = cast(meta[relay.Constant][31] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %445 = cast(%var_9093, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %446 = cast(%var_9140, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %447 = cast(meta[relay.Constant][32] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %448 = reshape(%444, newshape=[1, 11, 2]) /* ty=Tensor[(1, 11, 2), uint16] */;
  %449 = reshape(%445, newshape=[3, 396]) /* ty=Tensor[(3, 396), uint32] */;
  %450 = reshape(%446, newshape=[1080, 1]) /* ty=Tensor[(1080, 1), float64] */;
  %451 = reshape(%447, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %452 = @func_6893(%448, %449, %450, %451) /* ty=(Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) */;
  %453 = cast(%var_9093, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %454 = cast(%var_9093, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %455 = reshape(%453, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %456 = reshape(%454, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %457 = @func_125(%455, %456) /* ty=Tensor[(12, 11, 9), uint32] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %459 = %421.0;
  %460 = %427.1;
  %461 = %433.0;
  %462 = %438.0;
  %463 = %443.2;
  %464 = %452.3;
  %465 = asin(%458) /* ty=Tensor[(12, 11, 9), float32] */;
  (%459, %var_9093, %429, meta[relay.Constant][27] /* ty=Tensor[(1274), float32] */, meta[relay.Constant][28] /* ty=Tensor[(650), float64] */, %460, %461, %462, %var_9123, meta[relay.Constant][29] /* ty=Tensor[(330, 3), int8] */, %463, meta[relay.Constant][30] /* ty=Tensor[(1365), int8] */, %var_9133, %464, meta[relay.Constant][31] /* ty=Tensor[(22), uint16] */, %var_9140, meta[relay.Constant][32] /* ty=Tensor[(128), float64] */, %465)
}

def @func_10890() -> Tensor[(5, 15, 1), float64] {
  %466 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %466.0
}

def @func_8951(%var_8949: int16, %var_8950: Tensor[(240), int16]) -> (Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(5, 15, 1), float64]) {
  %477 = fn (%var_8926: int16, %var_8927: Tensor[(240), int16]) -> (Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(5, 15, 1), float64]) {
    %467 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %468 = cast(%var_8926, dtype="int16") /* ty=int16 */;
    %469 = cast(%var_8927, dtype="int16") /* ty=Tensor[(240), int16] */;
    %470 = reshape(%468, newshape=[]) /* ty=int16 */;
    %471 = reshape(%469, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int16] */;
    %472 = @func_708(%470, %471) /* ty=(Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
    %473 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %474 = %467.0;
    %475 = %472.4;
    %476 = %473.0;
    (%474, %475, %var_8926, %var_8927, %476)
  };
  %477(%var_8949, %var_8950) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(5, 15, 1), float64]) */
}

def @func_9619(%var_9617: Tensor[(10, 2, 12), float32]) -> Tensor[(10, 2, 12), float32] {
  @func_9616(%var_9617) /* ty=Tensor[(10, 2, 12), float32] */
}

def @func_12187() -> (Tensor[(5, 15, 16), int32],) {
  @func_12185() /* ty=(Tensor[(5, 15, 16), int32],) */
}

def @func_6036(%var_6034: Tensor[(5, 10, 14), int64], %var_6035: Tensor[(5, 10, 14), int64]) -> Tensor[(5, 10, 14), int64] {
  %482 = fn (%var_6013: Tensor[(5, 10, 14), int64], %var_6014: Tensor[(5, 10, 14), int64]) -> Tensor[(5, 10, 14), int64] {
    %478 = cast(%var_6014, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
    %479 = shape_of(%var_6013, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%var_6013, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_and(%480, %481) /* ty=Tensor[(5, 10, 14), int64] */
  };
  %482(%var_6034, %var_6035) /* ty=Tensor[(5, 10, 14), int64] */
}

def @func_9840(%var_9809: Tensor[(5, 15, 13), float64]) -> Tensor[(5, 15, 13), uint64] {
  %483 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %484 = cast(%483, dtype="uint64") /* ty=Tensor[(5, 15, 1), uint64] */;
  %485 = cast(%var_9809, dtype="uint64") /* ty=Tensor[(5, 15, 13), uint64] */;
  bitwise_or(%484, %485) /* ty=Tensor[(5, 15, 13), uint64] */
}

def @func_12275(%var_12273: Tensor[(5, 15, 6), float64], %var_12274: Tensor[(210, 45), bool]) -> (Tensor[(5, 15, 6), int64], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 126), bool], Tensor[(210, 45), bool]) {
  %502 = fn (%var_12244: Tensor[(5, 15, 6), float64], %var_12262: Tensor[(210, 45), bool]) -> (Tensor[(5, 15, 6), int64], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 126), bool], Tensor[(210, 45), bool]) {
    %486 = @func_10696() /* ty=Tensor[(5, 15, 1), float64] */;
    %487 = cast(%486, dtype="int64") /* ty=Tensor[(5, 15, 1), int64] */;
    %488 = cast(%var_12244, dtype="int64") /* ty=Tensor[(5, 15, 6), int64] */;
    %489 = cast(%var_12244, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
    %490 = cast(%486, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
    %491 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 15, 6), float64] */, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
    %492 = shape_of(%var_12244, dtype="int32") /* ty=Tensor[(3), int32] */;
    %493 = cast(%var_12244, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
    %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %495 = cast(%var_12262, dtype="bool") /* ty=Tensor[(210, 45), bool] */;
    %496 = reshape(%495, newshape=[5, 15, 126]) /* ty=Tensor[(5, 15, 126), bool] */;
    %497 = @func_8875(%496) /* ty=(Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) */;
    %498 = maximum(%487, %488) /* ty=Tensor[(5, 15, 6), int64] */;
    %499 = divide(%489, %490) /* ty=Tensor[(5, 15, 6), float32] */;
    %500 = floor_divide(%493, %494) /* ty=Tensor[(5, 15, 6), float32] */;
    %501 = %497.1;
    (%498, %499, %500, %501, %var_12262)
  };
  %502(%var_12273, %var_12274) /* ty=(Tensor[(5, 15, 6), int64], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 6), float32], Tensor[(5, 15, 126), bool], Tensor[(210, 45), bool]) */
}

def @func_3445(%var_3443: Tensor[(11, 6, 15), int8], %var_3444: Tensor[(11, 6, 15), int8]) -> Tensor[(11, 6, 15), int8] {
  %507 = fn (%var_3432: Tensor[(11, 6, 15), int8], %var_3433: Tensor[(11, 6, 15), int8]) -> Tensor[(11, 6, 15), int8] {
    %503 = cast(%var_3433, dtype="int8") /* ty=Tensor[(11, 6, 15), int8] */;
    %504 = shape_of(%var_3432, dtype="int32") /* ty=Tensor[(3), int32] */;
    %505 = cast(%var_3432, dtype="int8") /* ty=Tensor[(11, 6, 15), int8] */;
    %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    right_shift(%505, %506) /* ty=Tensor[(11, 6, 15), int8] */
  };
  %507(%var_3443, %var_3444) /* ty=Tensor[(11, 6, 15), int8] */
}

def @func_1399(%var_1369: Tensor[(6, 15, 12), float64], %var_1386: Tensor[(128), float64]) -> (Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) {
  %508 = cast(%var_1369, dtype="float64") /* ty=Tensor[(6, 15, 12), float64] */;
  %509 = cast(%var_1386, dtype="float64") /* ty=Tensor[(128), float64] */;
  %510 = reshape(%509, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %511 = @func_310(%510) /* ty=Tensor[(2, 4, 16), float64] */;
  %512 = cast(%511, dtype="float64") /* ty=Tensor[(2, 4, 16), float64] */;
  %513 = reshape(%512, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %514 = cos(%508) /* ty=Tensor[(6, 15, 12), float64] */;
  %515 = @func_310(%513) /* ty=Tensor[(2, 4, 16), float64] */;
  (%514, %511, %var_1386, %515)
}

def @func_9528() -> (Tensor[(5, 15, 1), float64],) {
  @func_9526() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_3208(%var_3206: Tensor[(14, 5, 7), int16], %var_3207: Tensor[(14, 5, 7), int16]) -> (Tensor[(14, 5, 7), int16],) {
  %521 = fn (%var_3192: Tensor[(14, 5, 7), int16], %var_3193: Tensor[(14, 5, 7), int16]) -> (Tensor[(14, 5, 7), int16],) {
    %516 = cast(%var_3193, dtype="int16") /* ty=Tensor[(14, 5, 7), int16] */;
    %517 = shape_of(%var_3192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %518 = cast(%var_3192, dtype="int16") /* ty=Tensor[(14, 5, 7), int16] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %520 = multiply(%518, %519) /* ty=Tensor[(14, 5, 7), int16] */;
    (%520,)
  };
  %521(%var_3206, %var_3207) /* ty=(Tensor[(14, 5, 7), int16],) */
}

def @func_9870() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32]) {
  %522 = cast(meta[relay.Constant][34] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %523 = reshape(%522, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %524 = @func_5923(%523) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %525 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %526 = %524.0;
  (%525, %526, meta[relay.Constant][34] /* ty=Tensor[(90), float32] */)
}

def @func_9949(%var_9885: Tensor[(5, 15, 9), float64]) -> (Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 1), float64]) {
  %527 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %528 = %527.0;
  %529 = cast(%528, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %530 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
  %531 = cast(%528, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %532 = cast(%var_9885, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %533 = mod(%531, %532) /* ty=Tensor[(5, 15, 9), float64] */;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %535 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %536 = exp(%529) /* ty=Tensor[(5, 15, 1), float32] */;
  %537 = %530.0;
  %538 = tan(%534) /* ty=Tensor[(5, 15, 9), float64] */;
  %539 = %535.1;
  (%536, %537, %538, %539)
}

def @func_11097() -> (Tensor[(5, 15, 1), float32],) {
  @func_11095() /* ty=(Tensor[(5, 15, 1), float32],) */
}

def @func_11611(%var_11602: Tensor[(5, 15, 14), float64]) -> (Tensor[(3, 84), float32], Tensor[(5, 15, ?), bool], Tensor[(5, 15, 14), uint8]) {
  %540 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %541 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %542 = reshape(%540, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %543 = reshape(%541, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %544 = @func_10481(%542, %543) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(4, 7, 9), int64]) */;
  %545 = %544.0;
  %546 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
  %547 = %546.0;
  %548 = cast(%547, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %549 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%545, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %552 = cast(%545, dtype="uint8") /* ty=Tensor[(5, 15, 1), uint8] */;
  %553 = cast(%var_11602, dtype="uint8") /* ty=Tensor[(5, 15, 14), uint8] */;
  %554 = logical_and(%550, %551) /* ty=Tensor[(5, 15, ?), bool] */;
  %555 = subtract(%552, %553) /* ty=Tensor[(5, 15, 14), uint8] */;
  (meta[relay.Constant][35] /* ty=Tensor[(3, 84), float32] */, %554, %555)
}

def @func_12185() -> (Tensor[(5, 15, 16), int32],) {
  %556 = @func_10187() /* ty=(Tensor[(5, 15, 1), float32],) */;
  %557 = %556.0;
  %558 = cast(%557, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
  %559 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 15, 16), float32] */, dtype="int32") /* ty=Tensor[(5, 15, 16), int32] */;
  %560 = bitwise_or(%558, %559) /* ty=Tensor[(5, 15, 16), int32] */;
  (%560,)
}

def @func_3975(%var_3972: Tensor[(13, 16, 5), float64], %var_3973: Tensor[(1, 1274), float32], %var_3974: Tensor[(650, 1), float64]) -> (Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) {
  %569 = fn (%var_3944: Tensor[(13, 16, 5), float64], %var_3953: Tensor[(1, 1274), float32], %var_3954: Tensor[(650, 1), float64]) -> (Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) {
    %561 = cast(%var_3944, dtype="float64") /* ty=Tensor[(13, 16, 5), float64] */;
    %562 = cast(%var_3953, dtype="float32") /* ty=Tensor[(1, 1274), float32] */;
    %563 = cast(%var_3954, dtype="float64") /* ty=Tensor[(650, 1), float64] */;
    %564 = reshape(%562, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
    %565 = reshape(%563, newshape=[650]) /* ty=Tensor[(650), float64] */;
    %566 = @func_3172(%564, %565) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
    %567 = tan(%561) /* ty=Tensor[(13, 16, 5), float64] */;
    %568 = %566.0;
    (%567, %568, %var_3953, %var_3954)
  };
  %569(%var_3972, %var_3973, %var_3974) /* ty=(Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) */
}

def @func_11875(%var_11873: Tensor[(16, 2, 13), int16], %var_11874: Tensor[(16, 2, 13), int16]) -> Tensor[(16, 2, 13), int16] {
  @func_11871(%var_11873, %var_11874) /* ty=Tensor[(16, 2, 13), int16] */
}

def @func_9307(%var_9305: Tensor[(1365), int8], %var_9306: Tensor[(30, 6), int64]) -> (Tensor[(180), int64], Tensor[(30, 6), int64], Tensor[(5, 15, 1365), int32]) {
  %581 = fn (%var_9291: Tensor[(1365), int8], %var_9292: Tensor[(30, 6), int64]) -> (Tensor[(180), int64], Tensor[(30, 6), int64], Tensor[(5, 15, 1365), int32]) {
    %570 = cast(%var_9291, dtype="int8") /* ty=Tensor[(1365), int8] */;
    %571 = cast(%var_9292, dtype="int64") /* ty=Tensor[(30, 6), int64] */;
    %572 = reshape(%570, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), int8] */;
    %573 = reshape(%571, newshape=[180]) /* ty=Tensor[(180), int64] */;
    %574 = @func_3777(%572, %573) /* ty=(Tensor[(13, 7, 15), int8], Tensor[(128), float64], Tensor[(180), int64]) */;
    %575 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %576 = %575.0;
    %577 = cast(%576, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
    %578 = cast(%var_9291, dtype="int32") /* ty=Tensor[(1365), int32] */;
    %579 = %574.2;
    %580 = maximum(%577, %578) /* ty=Tensor[(5, 15, 1365), int32] */;
    (%579, %var_9292, %580)
  };
  %581(%var_9305, %var_9306) /* ty=(Tensor[(180), int64], Tensor[(30, 6), int64], Tensor[(5, 15, 1365), int32]) */
}

def @func_1886(%var_1885: Tensor[(13, 12, 8), float64]) -> Tensor[(13, 12, 8), bool] {
  %586 = fn (%var_1840: Tensor[(13, 12, 8), float64]) -> Tensor[(13, 12, 8), bool] {
    %582 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 12, 8), float64] */, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
    %583 = shape_of(%var_1840, dtype="int32") /* ty=Tensor[(3), int32] */;
    %584 = cast(%var_1840, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
    %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%584, %585) /* ty=Tensor[(13, 12, 8), bool] */
  };
  %586(%var_1885) /* ty=Tensor[(13, 12, 8), bool] */
}

def @func_8751() -> (Tensor[(5, 15, 1), float64],) {
  %589 = fn () -> (Tensor[(5, 15, 1), float64],) {
    %587 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
    %588 = %587.1;
    (%588,)
  };
  %589() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_11943() -> (Tensor[(5, 15, 1), float64],) {
  @func_11941() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_9526() -> (Tensor[(5, 15, 1), float64],) {
  %590 = @func_8674() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %591 = %590.1;
  (%591,)
}

def @func_9769(%var_9768: Tensor[(22), uint16]) -> (Tensor[(630), float64], Tensor[(22), uint16], Tensor[(1188), uint32], Tensor[(1080, 1), float64], Tensor[(128), float64], Tensor[(14, 9, 5), bool], Tensor[(5, 15, 126), uint64]) {
  %620 = fn (%var_9740: Tensor[(22), uint16]) -> (Tensor[(630), float64], Tensor[(22), uint16], Tensor[(1188), uint32], Tensor[(1080, 1), float64], Tensor[(128), float64], Tensor[(14, 9, 5), bool], Tensor[(5, 15, 126), uint64]) {
    %592 = cast(%var_9740, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %593 = cast(meta[relay.Constant][38] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
    %594 = cast(meta[relay.Constant][39] /* ty=Tensor[(1080, 1), float64] */, dtype="float64") /* ty=Tensor[(1080, 1), float64] */;
    %595 = cast(meta[relay.Constant][40] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %596 = reshape(%592, newshape=[1, 11, 2]) /* ty=Tensor[(1, 11, 2), uint16] */;
    %597 = reshape(%593, newshape=[3, 396]) /* ty=Tensor[(3, 396), uint32] */;
    %598 = reshape(%594, newshape=[1080, 1]) /* ty=Tensor[(1080, 1), float64] */;
    %599 = reshape(%595, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %600 = @func_6893(%596, %597, %598, %599) /* ty=(Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) */;
    %601 = cast(meta[relay.Constant][41] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %602 = cast(meta[relay.Constant][42] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %603 = reshape(%601, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
    %604 = reshape(%602, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
    %605 = @func_2738(%603, %604) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
    %606 = %605.0;
    %607 = cast(meta[relay.Constant][42] /* ty=Tensor[(630), float64] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %609 = cast(%606, dtype="bool") /* ty=Tensor[(14, 9, 5), bool] */;
    %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %611 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %612 = %611.0;
    %613 = cast(%612, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
    %614 = cos(%613) /* ty=Tensor[(5, 15, 1), float32] */;
    %615 = cast(%614, dtype="uint64") /* ty=Tensor[(5, 15, 1), uint64] */;
    %616 = cast(meta[relay.Constant][41] /* ty=Tensor[(126), float64] */, dtype="uint64") /* ty=Tensor[(126), uint64] */;
    %617 = %600.11;
    %618 = less(%609, %610) /* ty=Tensor[(14, 9, 5), bool] */;
    %619 = left_shift(%615, %616) /* ty=Tensor[(5, 15, 126), uint64] */;
    (%617, %var_9740, meta[relay.Constant][38] /* ty=Tensor[(1188), uint32] */, meta[relay.Constant][39] /* ty=Tensor[(1080, 1), float64] */, meta[relay.Constant][40] /* ty=Tensor[(128), float64] */, %618, %619)
  };
  %620(%var_9768) /* ty=(Tensor[(630), float64], Tensor[(22), uint16], Tensor[(1188), uint32], Tensor[(1080, 1), float64], Tensor[(128), float64], Tensor[(14, 9, 5), bool], Tensor[(5, 15, 126), uint64]) */
}

def @func_11441(%var_11440: Tensor[(5, 15, 12), float64]) -> (Tensor[(5, 15, 12), int16],) {
  %625 = fn (%var_11428: Tensor[(5, 15, 12), float64]) -> (Tensor[(5, 15, 12), int16],) {
    %621 = @func_10547() /* ty=Tensor[(5, 15, 1), float64] */;
    %622 = cast(%621, dtype="int16") /* ty=Tensor[(5, 15, 1), int16] */;
    %623 = cast(%var_11428, dtype="int16") /* ty=Tensor[(5, 15, 12), int16] */;
    %624 = bitwise_xor(%622, %623) /* ty=Tensor[(5, 15, 12), int16] */;
    (%624,)
  };
  %625(%var_11440) /* ty=(Tensor[(5, 15, 12), int16],) */
}

def @func_8806(%var_8800: Tensor[(128), float64]) -> (Tensor[(975, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) {
  %626 = @func_8595() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) */;
  %627 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %628 = cast(%var_8800, dtype="float64") /* ty=Tensor[(128), float64] */;
  %629 = reshape(%628, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %630 = %626.2;
  %631 = %627.0;
  %632 = @func_310(%629) /* ty=Tensor[(2, 4, 16), float64] */;
  (%630, %631, %632, %var_8800)
}

def @func_8595() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 13), bool], Tensor[(975, 1), float64], Tensor[(1, 990), int8]) {
  %633 = @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %634 = cast(meta[relay.Constant][43] /* ty=Tensor[(975, 1), float64] */, dtype="float64") /* ty=Tensor[(975, 1), float64] */;
  %635 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 990), int8] */, dtype="int8") /* ty=Tensor[(1, 990), int8] */;
  %636 = reshape(%634, newshape=[5, 15, 13]) /* ty=Tensor[(5, 15, 13), float64] */;
  %637 = reshape(%635, newshape=[990]) /* ty=Tensor[(990), int8] */;
  %638 = @func_8493(%636, %637) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) */;
  %639 = %633.1;
  %640 = %638.0;
  (%639, %640, meta[relay.Constant][43] /* ty=Tensor[(975, 1), float64] */, meta[relay.Constant][44] /* ty=Tensor[(1, 990), int8] */)
}

def @func_11811(%var_11802: Tensor[(70, 9), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(13, 12, 8), bool], Tensor[(126), float64], Tensor[(70, 9), float64]) {
  %641 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %642 = cast(meta[relay.Constant][45] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %643 = cast(%var_11802, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %644 = reshape(%642, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
  %645 = reshape(%643, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %646 = @func_2738(%644, %645) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */;
  %647 = %641.0;
  %648 = %646.1;
  (%647, %648, meta[relay.Constant][45] /* ty=Tensor[(126), float64] */, %var_11802)
}

def @func_9342() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) {
  %649 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %650 = cast(meta[relay.Constant][46] /* ty=Tensor[(64, 2), float64] */, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %651 = reshape(%650, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %652 = @func_8806(%651) /* ty=(Tensor[(975, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */;
  %653 = cast(meta[relay.Constant][47] /* ty=Tensor[(64, 2), float64] */, dtype="bool") /* ty=Tensor[(64, 2), bool] */;
  %654 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(64, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %655 = cast(meta[relay.Constant][46] /* ty=Tensor[(64, 2), float64] */, dtype="bool") /* ty=Tensor[(64, 2), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %657 = less(%655, %656) /* ty=Tensor[(64, 2), bool] */;
  %658 = cast(%657, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %659 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(64, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %660 = cast(meta[relay.Constant][46] /* ty=Tensor[(64, 2), float64] */, dtype="float64") /* ty=Tensor[(64, 2), float64] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %662 = %649.0;
  %663 = %652.1;
  %664 = floor_mod(%660, %661) /* ty=Tensor[(64, 2), float64] */;
  (%662, %663, %664)
}

def @func_8439() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  @func_8437() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */
}

def @func_11777(%var_11764: Tensor[(6, 5, 6), uint32], %var_11772: Tensor[(1040), float64], %var_11773: Tensor[(1274), float32]) -> (Tensor[(6, 5, 6), uint32], Tensor[(13, 14, 7), float32], Tensor[(1040), float64], Tensor[(1274), float32], Tensor[(650), float64]) {
  %665 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(6, 5, 6), uint32] */;
  %666 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(6, 5, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 5, 6), uint32] */, dtype="uint32") /* ty=Tensor[(6, 5, 6), uint32] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %669 = cast(%var_11772, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %670 = cast(%var_11773, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %671 = cast(meta[relay.Constant][49] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %672 = reshape(%669, newshape=[13, 16, 5]) /* ty=Tensor[(13, 16, 5), float64] */;
  %673 = reshape(%670, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), float32] */;
  %674 = reshape(%671, newshape=[650, 1]) /* ty=Tensor[(650, 1), float64] */;
  %675 = @func_3971(%672, %673, %674) /* ty=(Tensor[(13, 16, 5), float64], Tensor[(13, 14, 7), float32], Tensor[(1, 1274), float32], Tensor[(650, 1), float64]) */;
  %676 = logical_xor(%667, %668) /* ty=Tensor[(6, 5, 6), uint32] */;
  %677 = %675.1;
  (%676, %677, %var_11772, %var_11773, meta[relay.Constant][49] /* ty=Tensor[(650), float64] */)
}

def @func_6899(%var_6895: Tensor[(1, 11, 2), uint16], %var_6896: Tensor[(3, 396), uint32], %var_6897: Tensor[(1080, 1), float64], %var_6898: Tensor[(128), float64]) -> (Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) {
  @func_6893(%var_6895, %var_6896, %var_6897, %var_6898) /* ty=(Tensor[(12, 11, 9), uint32], Tensor[(3, 396), uint32], Tensor[(2, 11, 2), uint64], Tensor[(650, 1), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 1040), float32], Tensor[(2, 624), float64], Tensor[(126), float64], Tensor[(630), float64], Tensor[(12, 1040), bool], Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(1080, 128), bool]) */
}

def @func_9566() -> Tensor[(5, 15, 1), float64] {
  @func_9564() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_9224() -> Tensor[(5, 15, 1), float64] {
  @func_9222() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_5204(%var_5203: Tensor[(4, 11, 5), uint16]) -> (Tensor[(4, 11, 5), uint16],) {
  %683 = fn (%var_5187: Tensor[(4, 11, 5), uint16]) -> (Tensor[(4, 11, 5), uint16],) {
    %678 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 11, 5), uint16] */, dtype="uint16") /* ty=Tensor[(4, 11, 5), uint16] */;
    %679 = shape_of(%var_5187, dtype="int32") /* ty=Tensor[(3), int32] */;
    %680 = cast(%var_5187, dtype="uint16") /* ty=Tensor[(4, 11, 5), uint16] */;
    %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %682 = minimum(%680, %681) /* ty=Tensor[(4, 11, 5), uint16] */;
    (%682,)
  };
  %683(%var_5203) /* ty=(Tensor[(4, 11, 5), uint16],) */
}

def @func_11035() -> (Tensor[(5, 15, 1), float64],) {
  @func_11033() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_2742(%var_2740: Tensor[(14, 9, 1), float64], %var_2741: Tensor[(14, 9, 5), float64]) -> (Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) {
  @func_2738(%var_2740, %var_2741) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) */
}

def @func_10016() -> Tensor[(5, 15, 1), float64] {
  %686 = fn () -> Tensor[(5, 15, 1), float64] {
    %684 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
    %685 = cast(%684, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    atan(%685) /* ty=Tensor[(5, 15, 1), float64] */
  };
  %686() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_10188() -> (Tensor[(5, 15, 1), float32],) {
  %691 = fn () -> (Tensor[(5, 15, 1), float32],) {
    %687 = @func_9526() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %688 = %687.0;
    %689 = cast(%688, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
    %690 = cosh(%689) /* ty=Tensor[(5, 15, 1), float32] */;
    (%690,)
  };
  %691() /* ty=(Tensor[(5, 15, 1), float32],) */
}

def @func_11358() -> Tensor[(5, 15, 1), float64] {
  %692 = fn () -> Tensor[(5, 15, 1), float64] {
    @func_10804() /* ty=Tensor[(5, 15, 1), float64] */
  };
  %692() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_9952(%var_9950: Tensor[(5, 15, 9), float64]) -> (Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 1), float64]) {
  @func_9949(%var_9950) /* ty=(Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 1), float64]) */
}

def @func_2213(%var_2198: Tensor[(9, 1, 14), float32]) -> Tensor[(9, 1, 14), float32] {
  %693 = cast(%var_2198, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  rsqrt(%693) /* ty=Tensor[(9, 1, 14), float32] */
}

def @func_5414(%var_5412: Tensor[(1, 11, 13), float32], %var_5413: int16) -> (Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(11, 6, 15), int8], Tensor[(990), int8], Tensor[(?, 11, 13), bool]) {
  %717 = fn (%var_5357: Tensor[(1, 11, 13), float32], %var_5373: int16) -> (Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(11, 6, 15), int8], Tensor[(990), int8], Tensor[(?, 11, 13), bool]) {
    %694 = cast(%var_5373, dtype="int16") /* ty=int16 */;
    %695 = cast(meta[relay.Constant][51] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %696 = reshape(%694, newshape=[]) /* ty=int16 */;
    %697 = reshape(%695, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int16] */;
    %698 = @func_708(%696, %697) /* ty=(Tensor[(4, 5, 12), int16], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(4, 5, 12), bool], Tensor[(2, 4, 16), float64], Tensor[(2, 4, 16), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
    %699 = cast(meta[relay.Constant][52] /* ty=Tensor[(990), int8] */, dtype="int8") /* ty=Tensor[(990), int8] */;
    %700 = cast(meta[relay.Constant][52] /* ty=Tensor[(990), int8] */, dtype="int8") /* ty=Tensor[(990), int8] */;
    %701 = reshape(%699, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
    %702 = reshape(%700, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
    %703 = cast(%var_5357, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
    %704 = sqrt(%703) /* ty=Tensor[(1, 11, 13), float32] */;
    %705 = cast(%var_5357, dtype="int16") /* ty=Tensor[(1, 11, 13), int16] */;
    %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
    %707 = cast(%704, dtype="int16") /* ty=Tensor[(1, 11, 13), int16] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %709 = bitwise_or(%707, %708) /* ty=Tensor[(?, 11, 13), int16] */;
    %710 = cast(%709, dtype="bool") /* ty=Tensor[(?, 11, 13), bool] */;
    %711 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
    %712 = cast(%704, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
    %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %714 = %698.4;
    %715 = @func_3442(%701, %702) /* ty=Tensor[(11, 6, 15), int8] */;
    %716 = less(%712, %713) /* ty=Tensor[(?, 11, 13), bool] */;
    (%714, %var_5373, meta[relay.Constant][51] /* ty=Tensor[(240), int16] */, %715, meta[relay.Constant][52] /* ty=Tensor[(990), int8] */, %716)
  };
  %717(%var_5412, %var_5413) /* ty=(Tensor[(2, 4, 16), float64], int16, Tensor[(240), int16], Tensor[(11, 6, 15), int8], Tensor[(990), int8], Tensor[(?, 11, 13), bool]) */
}

def @func_5574(%var_5539: Tensor[(3, 12, 10), uint16], %var_5540: Tensor[(3, 12, 10), uint16]) -> (Tensor[(3, 12, 10), uint16], Tensor[(3, 12, 10), float64], Tensor[(11, 6, 15), int8], Tensor[(5, 198), int8]) {
  %718 = cast(%var_5540, dtype="uint16") /* ty=Tensor[(3, 12, 10), uint16] */;
  %719 = shape_of(%var_5539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%var_5539, dtype="uint16") /* ty=Tensor[(3, 12, 10), uint16] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %722 = cast(%var_5540, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %723 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 198), int8] */, dtype="int8") /* ty=Tensor[(5, 198), int8] */;
  %724 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 198), int8] */, dtype="int8") /* ty=Tensor[(5, 198), int8] */;
  %725 = reshape(%723, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %726 = reshape(%724, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %727 = multiply(%720, %721) /* ty=Tensor[(3, 12, 10), uint16] */;
  %728 = log10(%722) /* ty=Tensor[(3, 12, 10), float64] */;
  %729 = @func_3442(%725, %726) /* ty=Tensor[(11, 6, 15), int8] */;
  (%727, %728, %729, meta[relay.Constant][53] /* ty=Tensor[(5, 198), int8] */)
}

def @func_9344() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) {
  @func_9342() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) */
}

def @func_10237() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  %733 = fn () -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
    %730 = @func_9577() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %731 = @func_10085() /* ty=Tensor[(5, 15, 1), float64] */;
    %732 = %730.0;
    (%731, %732)
  };
  %733() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */
}

def @func_11161(%var_11144: Tensor[(16, 5, 11), float32]) -> (Tensor[(16, 5, 11), float32], Tensor[(16, 5, 11), float32]) {
  %734 = cast(%var_11144, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %735 = cos(%734) /* ty=Tensor[(16, 5, 11), float32] */;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %737 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %738 = shape_of(%var_11144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%var_11144, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %741 = log2(%736) /* ty=Tensor[(16, 5, 11), float32] */;
  %742 = divide(%739, %740) /* ty=Tensor[(16, 5, 11), float32] */;
  (%741, %742)
}

def @func_11885() -> (Tensor[(5, 15, 1), float64],) {
  %743 = @func_10926() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %744 = %743.1;
  (%744,)
}

def @func_11614(%var_11612: Tensor[(5, 15, 14), float64]) -> (Tensor[(3, 84), float32], Tensor[(5, 15, ?), bool], Tensor[(5, 15, 14), uint8]) {
  @func_11611(%var_11612) /* ty=(Tensor[(3, 84), float32], Tensor[(5, 15, ?), bool], Tensor[(5, 15, 14), uint8]) */
}

def @main(%var_12443: Tensor[(5, 15, 10), float64]) -> Tensor[(5, 15, 10), float64] {
  %745 = @func_8675() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */;
  %746 = %745.0;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %748 = cast(%var_12443, dtype="float32") /* ty=Tensor[(5, 15, 10), float32] */;
  %749 = power(%747, %748) /* ty=Tensor[(5, 15, 10), float32] */;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(5, 15, 10), float64] */;
  sinh(%750) /* ty=Tensor[(5, 15, 10), float64] */
}

def @func_9999(%var_9998: Tensor[(1188), uint32]) -> (Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
  %758 = fn (%var_9994: Tensor[(1188), uint32]) -> (Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
    %751 = @func_9553() /* ty=(Tensor[(5, 15, ?), float64],) */;
    %752 = cast(%var_9994, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
    %753 = cast(%var_9994, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
    %754 = reshape(%752, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
    %755 = reshape(%753, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
    %756 = %751.0;
    %757 = @func_125(%754, %755) /* ty=Tensor[(12, 11, 9), uint32] */;
    (%756, %757, %var_9994)
  };
  %758(%var_9998) /* ty=(Tensor[(5, 15, ?), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */
}

def @func_8688(%var_8686: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), float64] {
  @func_8685(%var_8686) /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10898() -> (Tensor[(5, 15, 1), float64],) {
  %760 = fn () -> (Tensor[(5, 15, 1), float64],) {
    %759 = @func_10085() /* ty=Tensor[(5, 15, 1), float64] */;
    (%759,)
  };
  %760() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_10978() -> Tensor[(5, 15, 1), float64] {
  @func_10976() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_11203(%var_11201: Tensor[(5, 15, 11), float64]) -> Tensor[(5, 15, 11), uint32] {
  @func_11200(%var_11201) /* ty=Tensor[(5, 15, 11), uint32] */
}

def @func_8809(%var_8807: Tensor[(128), float64]) -> (Tensor[(975, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) {
  @func_8806(%var_8807) /* ty=(Tensor[(975, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64]) */
}

def @func_1403(%var_1401: Tensor[(6, 15, 12), float64], %var_1402: Tensor[(128), float64]) -> (Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) {
  @func_1399(%var_1401, %var_1402) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(2, 4, 16), float64]) */
}

def @func_10805() -> Tensor[(5, 15, 1), float64] {
  %762 = fn () -> Tensor[(5, 15, 1), float64] {
    %761 = @func_9526() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %761.0
  };
  %762() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_9056(%var_9054: Tensor[(64), float64], %var_9055: Tensor[(110, 9), int8]) -> (Tensor[(5, 15, 1), float64], Tensor[(8, 2, 4), bool], Tensor[(64), float64], Tensor[(110, 9), int8]) {
  %771 = fn (%var_9048: Tensor[(64), float64], %var_9049: Tensor[(110, 9), int8]) -> (Tensor[(5, 15, 1), float64], Tensor[(8, 2, 4), bool], Tensor[(64), float64], Tensor[(110, 9), int8]) {
    %763 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %764 = cast(%var_9048, dtype="float64") /* ty=Tensor[(64), float64] */;
    %765 = cast(%var_9049, dtype="int8") /* ty=Tensor[(110, 9), int8] */;
    %766 = reshape(%764, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
    %767 = reshape(%765, newshape=[330, 3]) /* ty=Tensor[(330, 3), int8] */;
    %768 = @func_8017(%766, %767) /* ty=(Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) */;
    %769 = %763.0;
    %770 = %768.1;
    (%769, %770, %var_9048, %var_9049)
  };
  %771(%var_9054, %var_9055) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(8, 2, 4), bool], Tensor[(64), float64], Tensor[(110, 9), int8]) */
}

def @func_9170(%var_9166: Tensor[(1188), uint32], %var_9167: Tensor[(975), float64], %var_9168: Tensor[(180), int64], %var_9169: Tensor[(1080), float64]) -> (Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 15, 1), float64], Tensor[(13, 14, 7), float32], Tensor[(5, 15, 13), bool], Tensor[(975), float64], Tensor[(330, 3), int8], Tensor[(180), int64], Tensor[(1365), int8], Tensor[(180), int64], Tensor[(650, 1), float64], Tensor[(22), uint16], Tensor[(1080), float64], Tensor[(128), float64], Tensor[(12, 11, 9), float32]) {
  @func_9164(%var_9166, %var_9167, %var_9168, %var_9169) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], Tensor[(650), float64], Tensor[(1274), float32], Tensor[(650), float64], Tensor[(5, 15, 1), float64], Tensor[(13, 14, 7), float32], Tensor[(5, 15, 13), bool], Tensor[(975), float64], Tensor[(330, 3), int8], Tensor[(180), int64], Tensor[(1365), int8], Tensor[(180), int64], Tensor[(650, 1), float64], Tensor[(22), uint16], Tensor[(1080), float64], Tensor[(128), float64], Tensor[(12, 11, 9), float32]) */
}

def @func_8020(%var_8018: Tensor[(8, 2, 4), float64], %var_8019: Tensor[(330, 3), int8]) -> (Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) {
  %789 = fn (%var_7954: Tensor[(8, 2, 4), float64], %var_8013: Tensor[(330, 3), int8]) -> (Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) {
    %772 = cast(%var_7954, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
    %773 = asinh(%772) /* ty=Tensor[(8, 2, 4), float64] */;
    %774 = cast(%var_7954, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
    %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
    %776 = cast(%773, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
    %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %778 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
    %779 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
    %780 = cast(%773, dtype="bool") /* ty=Tensor[(8, 2, 4), bool] */;
    %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %782 = cast(%var_8013, dtype="int8") /* ty=Tensor[(330, 3), int8] */;
    %783 = cast(%var_8013, dtype="int8") /* ty=Tensor[(330, 3), int8] */;
    %784 = reshape(%782, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
    %785 = reshape(%783, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
    %786 = logical_and(%776, %777) /* ty=Tensor[(8, 2, 4), bool] */;
    %787 = not_equal(%780, %781) /* ty=Tensor[(8, 2, 4), bool] */;
    %788 = @func_3442(%784, %785) /* ty=Tensor[(11, 6, 15), int8] */;
    (%786, %787, %788, %var_8013)
  };
  %789(%var_8018, %var_8019) /* ty=(Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) */
}

def @func_2738(%var_2729: Tensor[(14, 9, 1), float64], %var_2730: Tensor[(14, 9, 5), float64]) -> (Tensor[(14, 9, 5), float64], Tensor[(13, 12, 8), bool], Tensor[(2, 624), float64]) {
  %790 = cast(%var_2729, dtype="float64") /* ty=Tensor[(14, 9, 1), float64] */;
  %791 = cast(%var_2730, dtype="float64") /* ty=Tensor[(14, 9, 5), float64] */;
  %792 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 624), float64] */, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %793 = reshape(%792, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float64] */;
  %794 = floor_divide(%790, %791) /* ty=Tensor[(14, 9, 5), float64] */;
  %795 = @func_1884(%793) /* ty=Tensor[(13, 12, 8), bool] */;
  (%794, %795, meta[relay.Constant][56] /* ty=Tensor[(2, 624), float64] */)
}

def @func_9690() -> (Tensor[(330, 3), int8], Tensor[(5, 15, 990), float64], Tensor[(5, 15, 990), bool], Tensor[(32, 2), uint16]) {
  %796 = cast(meta[relay.Constant][57] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
  %797 = cast(meta[relay.Constant][58] /* ty=Tensor[(990), int8] */, dtype="int8") /* ty=Tensor[(990), int8] */;
  %798 = reshape(%796, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), float64] */;
  %799 = reshape(%797, newshape=[330, 3]) /* ty=Tensor[(330, 3), int8] */;
  %800 = @func_8017(%798, %799) /* ty=(Tensor[(8, 2, 4), bool], Tensor[(8, 2, 4), bool], Tensor[(11, 6, 15), int8], Tensor[(330, 3), int8]) */;
  %801 = @func_9564() /* ty=Tensor[(5, 15, 1), float64] */;
  %802 = cast(meta[relay.Constant][58] /* ty=Tensor[(990), int8] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %803 = cast(%801, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %804 = cast(%801, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %805 = cast(meta[relay.Constant][58] /* ty=Tensor[(990), int8] */, dtype="bool") /* ty=Tensor[(990), bool] */;
  %806 = cast(meta[relay.Constant][57] /* ty=Tensor[(32, 2), float64] */, dtype="float32") /* ty=Tensor[(32, 2), float32] */;
  %807 = acos(%806) /* ty=Tensor[(32, 2), float32] */;
  %808 = cast(meta[relay.Constant][59] /* ty=Tensor[(32, 2), float32] */, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
  %809 = shape_of(%807, dtype="int32") /* ty=Tensor[(2), int32] */;
  %810 = cast(%807, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %812 = %800.3;
  %813 = floor_divide(%802, %803) /* ty=Tensor[(5, 15, 990), float64] */;
  %814 = logical_or(%804, %805) /* ty=Tensor[(5, 15, 990), bool] */;
  %815 = bitwise_or(%810, %811) /* ty=Tensor[(32, 2), uint16] */;
  (%812, %813, %814, %815)
}

def @func_8242() -> (Tensor[(5, 15, 1), float64],) {
  %818 = fn () -> (Tensor[(5, 15, 1), float64],) {
    %816 = cast(meta[relay.Constant][60] /* ty=Tensor[(5, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    %817 = acos(%816) /* ty=Tensor[(5, 15, 1), float64] */;
    (%817,)
  };
  %818() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_3175(%var_3173: Tensor[(13, 14, 7), float32], %var_3174: Tensor[(650), float64]) -> (Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) {
  %828 = fn (%var_3148: Tensor[(13, 14, 7), float32], %var_3164: Tensor[(650), float64]) -> (Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) {
    %819 = cast(%var_3148, dtype="float32") /* ty=Tensor[(13, 14, 7), float32] */;
    %820 = cast(meta[relay.Constant][61] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %821 = reshape(%820, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
    %822 = cast(%var_3164, dtype="float64") /* ty=Tensor[(650), float64] */;
    %823 = reshape(%822, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float64] */;
    %824 = @func_1339(%823) /* ty=(Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) */;
    %825 = exp(%819) /* ty=Tensor[(13, 14, 7), float32] */;
    %826 = @func_310(%821) /* ty=Tensor[(2, 4, 16), float64] */;
    %827 = %824.0;
    (%825, %826, meta[relay.Constant][61] /* ty=Tensor[(128), float64] */, %827, %var_3164)
  };
  %828(%var_3173, %var_3174) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */
}

def @func_11200(%var_11194: Tensor[(5, 15, 11), float64]) -> Tensor[(5, 15, 11), uint32] {
  %829 = @func_10976() /* ty=Tensor[(5, 15, 1), float64] */;
  %830 = cast(%829, dtype="uint32") /* ty=Tensor[(5, 15, 1), uint32] */;
  %831 = cast(%var_11194, dtype="uint32") /* ty=Tensor[(5, 15, 11), uint32] */;
  logical_xor(%830, %831) /* ty=Tensor[(5, 15, 11), uint32] */
}

def @func_8875(%var_8870: Tensor[(5, 15, 126), bool]) -> (Tensor[(9, ?, 14), bool], Tensor[(5, 15, 126), bool]) {
  %832 = cast(meta[relay.Constant][62] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %833 = reshape(%832, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %834 = @func_2213(%833) /* ty=Tensor[(9, 1, 14), float32] */;
  %835 = cast(meta[relay.Constant][62] /* ty=Tensor[(126), float32] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%834, dtype="bool") /* ty=Tensor[(9, 1, 14), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %839 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %840 = %839.0;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %842 = sqrt(%841) /* ty=Tensor[(5, 15, 1), float32] */;
  %843 = cast(%842, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %844 = cast(meta[relay.Constant][62] /* ty=Tensor[(126), float32] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %845 = less(%843, %844) /* ty=Tensor[(5, 15, 126), bool] */;
  %846 = cast(%var_8870, dtype="bool") /* ty=Tensor[(5, 15, 126), bool] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%845, dtype="bool") /* ty=Tensor[(5, 15, 126), bool] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %850 = logical_and(%837, %838) /* ty=Tensor[(9, ?, 14), bool] */;
  %851 = logical_or(%848, %849) /* ty=Tensor[(5, 15, 126), bool] */;
  (%850, %851)
}

def @func_8493(%var_8466: Tensor[(5, 15, 13), float64], %var_8481: Tensor[(990), int8]) -> (Tensor[(5, 15, 13), bool], Tensor[(11, 6, 15), int8], Tensor[(990), int8]) {
  %852 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %853 = %852.0;
  %854 = cast(%853, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %855 = cast(%var_8466, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
  %856 = cast(%var_8481, dtype="int8") /* ty=Tensor[(990), int8] */;
  %857 = cast(%var_8481, dtype="int8") /* ty=Tensor[(990), int8] */;
  %858 = reshape(%856, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %859 = reshape(%857, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), int8] */;
  %860 = greater(%854, %855) /* ty=Tensor[(5, 15, 13), bool] */;
  %861 = @func_3442(%858, %859) /* ty=Tensor[(11, 6, 15), int8] */;
  (%860, %861, %var_8481)
}

def @func_10086() -> Tensor[(5, 15, 1), float64] {
  %863 = fn () -> Tensor[(5, 15, 1), float64] {
    %862 = @func_8750() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %862.0
  };
  %863() /* ty=Tensor[(5, 15, 1), float64] */
}

def @func_10976() -> Tensor[(5, 15, 1), float64] {
  %864 = @func_9342() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(64, 2), float64]) */;
  %864.1
}

def @func_1339(%var_1315: Tensor[(13, 10, 5), float64]) -> (Tensor[(13, 10, 5), float64], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(12, 11, 9), uint32], Tensor[(1188), uint32]) {
  %865 = cast(%var_1315, dtype="float64") /* ty=Tensor[(13, 10, 5), float64] */;
  %866 = cast(meta[relay.Constant][63] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %867 = reshape(%866, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), float64] */;
  %868 = cast(meta[relay.Constant][64] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %869 = cast(meta[relay.Constant][64] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %870 = reshape(%868, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %871 = reshape(%869, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), uint32] */;
  %872 = sqrt(%865) /* ty=Tensor[(13, 10, 5), float64] */;
  %873 = @func_310(%867) /* ty=Tensor[(2, 4, 16), float64] */;
  %874 = @func_125(%870, %871) /* ty=Tensor[(12, 11, 9), uint32] */;
  (%872, %873, meta[relay.Constant][63] /* ty=Tensor[(128), float64] */, %874, meta[relay.Constant][64] /* ty=Tensor[(1188), uint32] */)
}

def @func_9211(%var_9209: int16, %var_9210: Tensor[(8, 30), int16]) -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], int16, Tensor[(8, 30), int16]) {
  @func_9207(%var_9209, %var_9210) /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64], Tensor[(1188), uint32], int16, Tensor[(8, 30), int16]) */
}

def @func_9017() -> (Tensor[(5, 15, 1), float64],) {
  %877 = fn () -> (Tensor[(5, 15, 1), float64],) {
    %875 = @func_8302() /* ty=(Tensor[(5, 15, 1), float64],) */;
    %876 = %875.0;
    (%876,)
  };
  %877() /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_8417(%var_8372: Tensor[(126), float32], %var_8386: Tensor[(637, 2), float32]) -> (Tensor[(5, 15, 1), float64], Tensor[(9, 1, 14), float32], Tensor[(126), float32], Tensor[(650), float64], Tensor[(637, 2), float32], Tensor[(325, 2), float64], Tensor[(5, 10, 14), int64], Tensor[(700), int64]) {
  %878 = @func_8241() /* ty=(Tensor[(5, 15, 1), float64],) */;
  %879 = cast(%var_8372, dtype="float32") /* ty=Tensor[(126), float32] */;
  %880 = reshape(%879, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %881 = cast(%var_8386, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
  %882 = cast(meta[relay.Constant][65] /* ty=Tensor[(325, 2), float64] */, dtype="float64") /* ty=Tensor[(325, 2), float64] */;
  %883 = reshape(%881, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float32] */;
  %884 = reshape(%882, newshape=[650]) /* ty=Tensor[(650), float64] */;
  %885 = @func_3172(%883, %884) /* ty=(Tensor[(13, 14, 7), float32], Tensor[(2, 4, 16), float64], Tensor[(128), float64], Tensor[(13, 10, 5), float64], Tensor[(650), float64]) */;
  %886 = cast(meta[relay.Constant][66] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %887 = cast(meta[relay.Constant][66] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %888 = reshape(%886, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %889 = reshape(%887, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int64] */;
  %890 = %878.0;
  %891 = @func_2213(%880) /* ty=Tensor[(9, 1, 14), float32] */;
  %892 = %885.4;
  %893 = @func_6033(%888, %889) /* ty=Tensor[(5, 10, 14), int64] */;
  (%890, %891, %var_8372, %892, %var_8386, meta[relay.Constant][65] /* ty=Tensor[(325, 2), float64] */, %893, meta[relay.Constant][66] /* ty=Tensor[(700), int64] */)
}

def @func_10928() -> (Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) {
  @func_10926() /* ty=(Tensor[(5, 15, 1), float64], Tensor[(5, 15, 1), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

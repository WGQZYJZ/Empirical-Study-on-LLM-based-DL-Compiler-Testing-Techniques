==========mod==========
#[version = "0.0.5"]
def @func_13638() -> Tensor[(6, 6, 4), float32] {
  %0 = @func_12986() /* ty=(Tensor[(6, 6, 4), float32],) */;
  %0.0
}

def @func_17101() -> (Tensor[(840), uint8], Tensor[(972), int64], Tensor[(972), float64]) {
  %1 = @func_13083() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %4 = reshape(%2, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %5 = reshape(%3, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %6 = @func_15515(%4, %5) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(1, 300), uint64], Tensor[(972), int16]) */;
  %7 = %6.3;
  %8 = cast(%7, dtype="float64") /* ty=Tensor[(972), float64] */;
  %9 = %1.0;
  %10 = atan(%8) /* ty=Tensor[(972), float64] */;
  (%9, meta[relay.Constant][0] /* ty=Tensor[(972), int64] */, %10)
}

def @func_16007() -> (Tensor[(13, 12, 10), uint16], Tensor[(128), uint16]) {
  %11 = @func_8486() /* ty=(Tensor[(128), uint16],) */;
  %12 = @func_13631() /* ty=Tensor[(13, 12, 10), uint16] */;
  %13 = %11.0;
  (%12, %13)
}

def @func_1518(%var_1502: Tensor[(9, 12, 9), int64], %var_1503: Tensor[(9, 12, 9), int64], %var_1515: Tensor[(210), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) {
  %14 = cast(%var_1503, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %15 = shape_of(%var_1502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%var_1502, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %18 = equal(%16, %17) /* ty=Tensor[(9, 12, 9), bool] */;
  %19 = cast(%18, dtype="float64") /* ty=Tensor[(9, 12, 9), float64] */;
  %20 = cast(%var_1515, dtype="float64") /* ty=Tensor[(210), float64] */;
  %21 = reshape(%20, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %22 = log(%19) /* ty=Tensor[(9, 12, 9), float64] */;
  %23 = @func_136(%21) /* ty=Tensor[(14, 15, 1), float64] */;
  (%22, %23, %var_1515)
}

def @func_16303() -> Tensor[(840), uint8] {
  %24 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %24.0
}

def @func_11933() -> (Tensor[(840), uint8],) {
  %25 = @func_10676() /* ty=Tensor[(840), uint8] */;
  (%25,)
}

def @func_12426() -> (Tensor[(840), uint8],) {
  %26 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %27 = %26.0;
  (%27,)
}

def @func_6503(%var_6476: Tensor[(15, 12, 13), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(5, 60), uint64], Tensor[(1, 1760), int16]) {
  %28 = cast(%var_6476, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %33 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 60), uint64] */, dtype="uint64") /* ty=Tensor[(5, 60), uint64] */;
  %34 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %35 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %36 = reshape(%29, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %37 = reshape(%30, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %38 = reshape(%31, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %39 = reshape(%32, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %40 = reshape(%33, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %41 = reshape(%34, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %42 = reshape(%35, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %43 = @func_2710(%36, %37, %38, %39, %40, %41, %42) /* ty=(Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) */;
  %44 = sigmoid(%28) /* ty=Tensor[(15, 12, 13), float32] */;
  %45 = %43.8;
  (%44, %45, meta[relay.Constant][1] /* ty=Tensor[(1344), float32] */, meta[relay.Constant][2] /* ty=Tensor[(210), float64] */, meta[relay.Constant][3] /* ty=Tensor[(972), int64] */, meta[relay.Constant][4] /* ty=Tensor[(5, 60), uint64] */, meta[relay.Constant][5] /* ty=Tensor[(1, 1760), int16] */)
}

def @func_9062() -> (Tensor[(840), uint8],) {
  %46 = @func_8894() /* ty=(Tensor[(128), uint16], Tensor[(840), uint8]) */;
  %47 = %46.1;
  (%47,)
}

def @func_17018(%var_17014: Tensor[(105, 2), float64]) -> (Tensor[(6, 6, 4), float32], Tensor[(840), uint8], Tensor[(16, 11, 10), int16], Tensor[(105, 2), float64]) {
  %48 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
  %49 = cast(%var_17014, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %50 = reshape(%49, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %51 = @func_12941(%50) /* ty=(Tensor[(6, 6, 4), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(16, 11, 10), int16], Tensor[(210), float64]) */;
  %52 = @func_16365() /* ty=Tensor[(6, 6, 4), float32] */;
  %53 = %48.0;
  %54 = %51.4;
  (%52, %53, %54, %var_17014)
}

def @func_13083() -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) {
  %55 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
  %56 = @func_11444() /* ty=(Tensor[(840), uint8],) */;
  %57 = @func_10639() /* ty=(Tensor[(840), uint8],) */;
  %58 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %59 = %55.0;
  %60 = %56.0;
  %61 = %57.0;
  %62 = %58.0;
  %63 = @func_12200() /* ty=Tensor[(840), uint8] */;
  (%59, %60, %61, %62, %63)
}

def @func_8271(%var_8262: Tensor[(1, 1760), int16], %var_8263: Tensor[(210), float64]) -> (Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) {
  %64 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
  %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(2100), float32] */, dtype="float32") /* ty=Tensor[(2100), float32] */;
  %66 = cast(%var_8262, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %67 = cast(%var_8263, dtype="float64") /* ty=Tensor[(210), float64] */;
  %68 = reshape(%65, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float32] */;
  %69 = reshape(%66, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %70 = reshape(%67, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %71 = @func_438(%68, %69, %70) /* ty=(Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) */;
  %72 = %64.0;
  %73 = %71.1;
  (%72, %73, meta[relay.Constant][6] /* ty=Tensor[(2100), float32] */, %var_8262, %var_8263)
}

def @func_15630(%var_15591: Tensor[(360), float64], %var_15598: Tensor[(4, 440), int16], %var_15608: Tensor[(128), uint16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(4, 440), bool], Tensor[(1, 16, 8), uint16], Tensor[(1560), uint16], Tensor[(128), uint64]) {
  %74 = @func_13083() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %75 = cast(%var_15591, dtype="float64") /* ty=Tensor[(360), float64] */;
  %76 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 440), int16] */, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
  %77 = reshape(%75, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %78 = reshape(%76, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %79 = @func_10326(%77, %78) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) */;
  %80 = cast(%var_15598, dtype="bool") /* ty=Tensor[(4, 440), bool] */;
  %81 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(4, 440), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 440), int16] */, dtype="bool") /* ty=Tensor[(4, 440), bool] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %84 = cast(meta[relay.Constant][8] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %85 = cast(%var_15608, dtype="uint16") /* ty=Tensor[(128), uint16] */;
  %86 = cast(meta[relay.Constant][9] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %87 = reshape(%84, newshape=[]) /* ty=uint16 */;
  %88 = reshape(%85, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), uint16] */;
  %89 = reshape(%86, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
  %90 = @func_7295(%87, %88, %89) /* ty=(Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) */;
  %91 = cast(%var_15608, dtype="float32") /* ty=Tensor[(128), float32] */;
  %92 = sinh(%91) /* ty=Tensor[(128), float32] */;
  %93 = cast(%92, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %94 = cast(meta[relay.Constant][8] /* ty=uint16 */, dtype="uint64") /* ty=uint64 */;
  %95 = %74.2;
  %96 = %79.1;
  %97 = not_equal(%82, %83) /* ty=Tensor[(4, 440), bool] */;
  %98 = %90.0;
  %99 = bitwise_or(%93, %94) /* ty=Tensor[(128), uint64] */;
  (%95, %96, %var_15591, %97, %98, meta[relay.Constant][9] /* ty=Tensor[(1560), uint16] */, %99)
}

def @func_9587() -> (Tensor[(840), uint8],) {
  %100 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %101 = %100.1;
  (%101,)
}

def @func_15434() -> (Tensor[(840), uint8],) {
  %102 = @func_9803() /* ty=(Tensor[(840), uint8],) */;
  %103 = %102.0;
  (%103,)
}

def @func_11536(%var_11522: Tensor[(6, 6, 4), float64]) -> Tensor[(6, 6, 4), bool] {
  %104 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %105 = %104.0;
  %106 = cast(%var_11522, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%105, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%108, %109) /* ty=Tensor[(6, 6, 4), bool] */
}

def @func_16445(%var_16441: Tensor[(297), bool]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(297), bool], Tensor[(144), float64], Tensor[(672), uint64]) {
  %110 = @func_10919() /* ty=(Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) */;
  %111 = cast(%var_16441, dtype="bool") /* ty=Tensor[(297), bool] */;
  %112 = cast(%var_16441, dtype="bool") /* ty=Tensor[(297), bool] */;
  %113 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %114 = cast(meta[relay.Constant][11] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %115 = reshape(%111, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %116 = reshape(%112, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %117 = reshape(%113, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %118 = reshape(%114, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %119 = @func_11788(%115, %116, %117, %118) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */;
  %120 = %110.0;
  %121 = %119.3;
  (%120, %121, %var_16441, meta[relay.Constant][10] /* ty=Tensor[(144), float64] */, meta[relay.Constant][11] /* ty=Tensor[(672), uint64] */)
}

def @func_12688() -> Tensor[(840), uint8] {
  @func_9228() /* ty=Tensor[(840), uint8] */
}

def @func_16691(%var_16680: Tensor[(128), uint16]) -> (Tensor[(840), uint8], Tensor[(4, 440), bool], Tensor[(360), float64], Tensor[(1760), int16], Tensor[(128), uint16]) {
  %122 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %123 = cast(meta[relay.Constant][13] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %124 = cast(%var_16680, dtype="uint16") /* ty=Tensor[(128), uint16] */;
  %125 = reshape(%122, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %126 = reshape(%123, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %127 = reshape(%124, newshape=[128]) /* ty=Tensor[(128), uint16] */;
  %128 = @func_15630(%125, %126, %127) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(4, 440), bool], Tensor[(1, 16, 8), uint16], Tensor[(1560), uint16], Tensor[(128), uint64]) */;
  %129 = @func_14724() /* ty=Tensor[(840), uint8] */;
  %130 = %128.3;
  (%129, %130, meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, meta[relay.Constant][13] /* ty=Tensor[(1760), int16] */, %var_16680)
}

def @func_11195(%var_11181: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(1, 3, 2), float64], Tensor[(18, 54), int64], Tensor[(210), float64], Tensor[(6, 6, 4), float64]) {
  %131 = cast(meta[relay.Constant][14] /* ty=Tensor[(18, 54), int64] */, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %132 = cast(%var_11181, dtype="float64") /* ty=Tensor[(210), float64] */;
  %133 = reshape(%131, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %134 = reshape(%132, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %135 = @func_9968(%133, %134) /* ty=(Tensor[(1, 3, 2), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64]) */;
  %136 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %137 = @func_8438() /* ty=Tensor[(840), uint8] */;
  %138 = %135.0;
  %139 = %136.0;
  (%137, %138, meta[relay.Constant][14] /* ty=Tensor[(18, 54), int64] */, %var_11181, %139)
}

def @func_15257() -> Tensor[(416), uint16] {
  @func_11213() /* ty=Tensor[(416), uint16] */
}

def @func_13870() -> (Tensor[(840), uint8],) {
  %140 = @func_9401() /* ty=Tensor[(840), uint8] */;
  (%140,)
}

def @func_14499() -> (Tensor[(13, 12, 10), uint16],) {
  %141 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %142 = %141.0;
  (%142,)
}

def @func_13484() -> (Tensor[(840), uint8],) {
  %143 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
  %144 = %143.0;
  (%144,)
}

def @func_9148(%var_9131: Tensor[(18, 54), int64], %var_9132: Tensor[(300), uint64], %var_9133: Tensor[(1760), int16]) -> (Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) {
  %145 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %146 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %147 = cast(meta[relay.Constant][15] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %148 = cast(meta[relay.Constant][15] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %149 = cast(meta[relay.Constant][16] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %150 = cast(%var_9131, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %151 = cast(%var_9132, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %152 = cast(%var_9133, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %153 = cast(%var_9133, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %154 = reshape(%147, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %155 = reshape(%148, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %156 = reshape(%149, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %157 = reshape(%150, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %158 = reshape(%151, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %159 = reshape(%152, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %160 = reshape(%153, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %161 = @func_2710(%154, %155, %156, %157, %158, %159, %160) /* ty=(Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) */;
  %162 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
  %163 = %145.0;
  %164 = %146.2;
  %165 = %161.2;
  %166 = %162.0;
  (%163, %164, %165, meta[relay.Constant][15] /* ty=Tensor[(1344), float32] */, meta[relay.Constant][16] /* ty=Tensor[(210), float64] */, %var_9131, %var_9132, %var_9133, %166)
}

def @func_11213() -> Tensor[(416), uint16] {
  %167 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %167.3
}

def @func_12683() -> Tensor[(1760), int16] {
  %168 = @func_9757() /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) */;
  %168.3
}

def @func_14371() -> (uint16, Tensor[(1760), float32]) {
  %169 = @func_10458() /* ty=(uint16, Tensor[(840), uint8]) */;
  %170 = @func_12683() /* ty=Tensor[(1760), int16] */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %172 = %169.0;
  %173 = cosh(%171) /* ty=Tensor[(1760), float32] */;
  (%172, %173)
}

def @func_13691(%var_13672: Tensor[(15, 1, 3), float32]) -> (Tensor[(15, 1, 3), bool],) {
  %174 = cast(1.63216f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %175 = cast(%var_13672, dtype="bool") /* ty=Tensor[(15, 1, 3), bool] */;
  %176 = greater(%174, %175) /* ty=Tensor[(15, 1, 3), bool] */;
  (%176,)
}

def @func_13631() -> Tensor[(13, 12, 10), uint16] {
  %177 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %177.0
}

def @func_12666(%var_12632: Tensor[(6, 6, 4), float64]) -> (Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) {
  %178 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %179 = %178.0;
  %180 = cast(%var_12632, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %184 = cast(%var_12632, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %185 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %186 = @func_11820() /* ty=Tensor[(6, 6, 4), float64] */;
  %187 = less(%182, %183) /* ty=Tensor[(6, 6, 4), bool] */;
  %188 = log10(%184) /* ty=Tensor[(6, 6, 4), float32] */;
  %189 = %185.0;
  (%186, %187, %188, %189)
}

def @func_2097(%var_2090: Tensor[(2, 1, 5), float64]) -> (Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) {
  %190 = cast(%var_2090, dtype="float64") /* ty=Tensor[(2, 1, 5), float64] */;
  %191 = cast(%var_2090, dtype="float32") /* ty=Tensor[(2, 1, 5), float32] */;
  %192 = acos(%190) /* ty=Tensor[(2, 1, 5), float64] */;
  %193 = rsqrt(%191) /* ty=Tensor[(2, 1, 5), float32] */;
  (%192, %193)
}

def @func_9757() -> (Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) {
  %194 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %195 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %196 = cast(meta[relay.Constant][18] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %197 = reshape(%195, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %198 = reshape(%196, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %199 = @func_8624(%197, %198) /* ty=(Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) */;
  %200 = @func_9209() /* ty=(uint16,) */;
  %201 = %194.0;
  %202 = %199.6;
  %203 = %200.0;
  (%201, %202, meta[relay.Constant][17] /* ty=Tensor[(360), float64] */, meta[relay.Constant][18] /* ty=Tensor[(1760), int16] */, %203)
}

def @func_12270(%var_12253: Tensor[(144), float64]) -> (Tensor[(840), uint8], Tensor[(2, 1, 9), float32], Tensor[(18), float32], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(156), float32], Tensor[(392), float32], Tensor[(3, 52), float32]) {
  %204 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %205 = cast(meta[relay.Constant][19] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %206 = reshape(%205, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float32] */;
  %207 = @func_7990(%206) /* ty=(Tensor[(2, 1, 9), float32],) */;
  %208 = cast(%var_12253, dtype="float64") /* ty=Tensor[(144), float64] */;
  %209 = reshape(%208, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
  %210 = cast(meta[relay.Constant][20] /* ty=Tensor[(392), float32] */, dtype="float32") /* ty=Tensor[(392), float32] */;
  %211 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 52), float32] */, dtype="float32") /* ty=Tensor[(3, 52), float32] */;
  %212 = reshape(%210, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
  %213 = reshape(%211, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %214 = @func_4783(%212, %213) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
  %215 = %204.0;
  %216 = %207.0;
  %217 = @func_11536(%209) /* ty=Tensor[(6, 6, 4), bool] */;
  %218 = %214.2;
  (%215, %216, meta[relay.Constant][19] /* ty=Tensor[(18), float32] */, %217, %var_12253, %218, meta[relay.Constant][20] /* ty=Tensor[(392), float32] */, meta[relay.Constant][21] /* ty=Tensor[(3, 52), float32] */)
}

def @func_10017() -> (Tensor[(6, 6, 4), float64],) {
  %219 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %220 = %219.0;
  %221 = cast(%220, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %222 = sin(%221) /* ty=Tensor[(6, 6, 4), float64] */;
  (%222,)
}

def @func_14050() -> (Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(60, 14), uint8]) {
  %223 = @func_12986() /* ty=(Tensor[(6, 6, 4), float32],) */;
  %224 = cast(meta[relay.Constant][22] /* ty=Tensor[(60, 14), uint8] */, dtype="uint8") /* ty=Tensor[(60, 14), uint8] */;
  %225 = reshape(%224, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
  %226 = @func_2023(%225) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
  %227 = %223.0;
  %228 = %226.1;
  (%227, %228, meta[relay.Constant][22] /* ty=Tensor[(60, 14), uint8] */)
}

def @func_15770() -> (Tensor[(1760), float32], Tensor[(840), uint8]) {
  %229 = @func_14371() /* ty=(uint16, Tensor[(1760), float32]) */;
  %230 = @func_12479() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */;
  %231 = %229.1;
  %232 = %230.0;
  (%231, %232)
}

def @func_10606(%var_10566: Tensor[(11, 3, 14), uint32], %var_10586: Tensor[(1760, 1), int16]) -> (Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) {
  %233 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 3, 14), uint32] */, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %234 = shape_of(%var_10566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_10566, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 3, 14), uint32] */, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %238 = cast(meta[relay.Constant][24] /* ty=Tensor[(21, 9), float64] */, dtype="float64") /* ty=Tensor[(21, 9), float64] */;
  %239 = cast(%var_10586, dtype="int16") /* ty=Tensor[(1760, 1), int16] */;
  %240 = reshape(%238, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float64] */;
  %241 = reshape(%239, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %242 = @func_482(%240, %241) /* ty=(Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) */;
  %243 = greater(%235, %236) /* ty=Tensor[(11, 3, 14), bool] */;
  %244 = atan(%237) /* ty=Tensor[(11, 3, 14), float32] */;
  %245 = %242.2;
  (%243, %244, %245, meta[relay.Constant][24] /* ty=Tensor[(21, 9), float64] */, %var_10586)
}

def @func_15951() -> Tensor[(6, 6, 4), float64] {
  %246 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %246.0
}

def @func_11820() -> Tensor[(6, 6, 4), float64] {
  %247 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %247.0
}

def @func_16647() -> Tensor[(128), uint16] {
  %248 = @func_16007() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(128), uint16]) */;
  %248.1
}

def @func_482(%var_456: Tensor[(9, 3, 7), float64], %var_467: Tensor[(4, 440), int16]) -> (Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) {
  %249 = cast(%var_456, dtype="float64") /* ty=Tensor[(9, 3, 7), float64] */;
  %250 = cast(meta[relay.Constant][25] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %251 = reshape(%250, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %252 = cast(%var_467, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
  %253 = cast(%var_467, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
  %254 = @func_136(%251) /* ty=Tensor[(14, 15, 1), float64] */;
  %255 = cast(%254, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %256 = reshape(%252, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %257 = reshape(%253, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %258 = reshape(%255, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %259 = @func_325(%256, %257, %258) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %260 = cast(%var_456, dtype="float64") /* ty=Tensor[(9, 3, 7), float64] */;
  %261 = exp(%249) /* ty=Tensor[(9, 3, 7), float64] */;
  %262 = %259.1;
  %263 = atan(%260) /* ty=Tensor[(9, 3, 7), float64] */;
  (%261, %254, meta[relay.Constant][25] /* ty=Tensor[(210), float64] */, %262, %var_467, %263)
}

def @func_9369(%var_9352: Tensor[(300), uint64], %var_9353: Tensor[(4, 440), int16]) -> (Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) {
  %264 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %265 = cast(meta[relay.Constant][26] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %266 = cast(%var_9352, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %267 = cast(%var_9353, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
  %268 = reshape(%265, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
  %269 = reshape(%266, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %270 = reshape(%267, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %271 = @func_9148(%268, %269, %270) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %272 = cast(meta[relay.Constant][26] /* ty=Tensor[(972), int64] */, dtype="float32") /* ty=Tensor[(972), float32] */;
  %273 = %264.0;
  %274 = %271.7;
  %275 = tan(%272) /* ty=Tensor[(972), float32] */;
  (%273, %274, %var_9352, %var_9353, %275)
}

def @func_9022(%var_9016: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) {
  %276 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %277 = cast(meta[relay.Constant][27] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %278 = cast(%var_9016, dtype="float64") /* ty=Tensor[(210), float64] */;
  %279 = reshape(%277, newshape=[1, 1760]) /* ty=Tensor[(1, 1760), int16] */;
  %280 = reshape(%278, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %281 = @func_8271(%279, %280) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) */;
  %282 = %276.0;
  %283 = %281.2;
  (%282, %283, meta[relay.Constant][27] /* ty=Tensor[(1760), int16] */, %var_9016)
}

def @func_9923(%var_9855: Tensor[(1200), float32], %var_9856: Tensor[(108), float32], %var_9897: Tensor[(210), float64]) -> (Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) {
  %284 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %285 = @func_9209() /* ty=(uint16,) */;
  %286 = cast(%var_9855, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %287 = cast(%var_9855, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %288 = cast(%var_9856, dtype="float32") /* ty=Tensor[(108), float32] */;
  %289 = reshape(%286, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %290 = reshape(%287, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %291 = reshape(%288, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %292 = @func_7568(%289, %290, %291) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %293 = cast(meta[relay.Constant][28] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %294 = cast(meta[relay.Constant][28] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %295 = cast(%var_9897, dtype="float64") /* ty=Tensor[(210), float64] */;
  %296 = reshape(%293, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %297 = reshape(%294, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %298 = reshape(%295, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %299 = @func_1518(%296, %297, %298) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %300 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %301 = %284.0;
  %302 = %285.0;
  %303 = %292.1;
  %304 = %299.1;
  %305 = %300.0;
  (%301, %302, %303, %var_9855, %var_9856, %304, meta[relay.Constant][28] /* ty=Tensor[(972), int64] */, %var_9897, %305)
}

def @func_14724() -> Tensor[(840), uint8] {
  %306 = @func_9803() /* ty=(Tensor[(840), uint8],) */;
  %306.0
}

def @func_10232() -> Tensor[(840), uint8] {
  @func_8464() /* ty=Tensor[(840), uint8] */
}

def @func_11878(%var_11832: Tensor[(50, 6), uint64], %var_11833: Tensor[(1760), int16], %var_11859: Tensor[(1344), float32]) -> (Tensor[(840), uint8], Tensor[(416), uint16], Tensor[(972), int64], Tensor[(50, 6), uint64], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(1344), float32]) {
  %307 = @func_9803() /* ty=(Tensor[(840), uint8],) */;
  %308 = cast(meta[relay.Constant][29] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %309 = cast(%var_11832, dtype="uint64") /* ty=Tensor[(50, 6), uint64] */;
  %310 = cast(%var_11833, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %311 = reshape(%308, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
  %312 = reshape(%309, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %313 = reshape(%310, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %314 = @func_9148(%311, %312, %313) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %315 = cast(%var_11859, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %316 = cast(%var_11832, dtype="uint64") /* ty=Tensor[(50, 6), uint64] */;
  %317 = reshape(%315, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %318 = reshape(%316, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %319 = @func_9454(%317, %318) /* ty=(Tensor[(416), uint16], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16], uint16) */;
  %320 = %307.0;
  %321 = %314.0;
  %322 = %319.4;
  (%320, %321, meta[relay.Constant][29] /* ty=Tensor[(972), int64] */, %var_11832, %var_11833, %322, %var_11859)
}

def @func_12584(%var_12576: Tensor[(972), int64], %var_12577: Tensor[(300, 1), uint64]) -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(840), uint8], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(300, 1), uint64], Tensor[(6, 6, 4), float32]) {
  %323 = @func_10458() /* ty=(uint16, Tensor[(840), uint8]) */;
  %324 = cast(meta[relay.Constant][30] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %325 = cast(meta[relay.Constant][30] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %326 = reshape(%324, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %327 = reshape(%325, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %328 = @func_5346(%326, %327) /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %329 = @func_10414() /* ty=(Tensor[(840), uint8],) */;
  %330 = cast(%var_12576, dtype="int64") /* ty=Tensor[(972), int64] */;
  %331 = cast(%var_12577, dtype="uint64") /* ty=Tensor[(300, 1), uint64] */;
  %332 = reshape(%330, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %333 = reshape(%331, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %334 = @func_12372(%332, %333) /* ty=(Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) */;
  %335 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %336 = reshape(%335, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
  %337 = @func_11536(%336) /* ty=Tensor[(6, 6, 4), bool] */;
  %338 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), float64] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %339 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%337, dtype="uint8") /* ty=Tensor[(6, 6, 4), uint8] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %342 = right_shift(%340, %341) /* ty=Tensor[(6, 6, 4), uint8] */;
  %343 = cast(%342, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %344 = %323.1;
  %345 = %328.0;
  %346 = %329.0;
  %347 = %334.4;
  %348 = log2(%343) /* ty=Tensor[(6, 6, 4), float32] */;
  (%344, %345, meta[relay.Constant][30] /* ty=Tensor[(1560), uint16] */, %346, %347, %var_12576, %var_12577, %348)
}

def @func_16224() -> (Tensor[(13, 12, 10), float64], Tensor[(840), uint8], Tensor[(840), uint8]) {
  %349 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %350 = %349.0;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
  %352 = sin(%351) /* ty=Tensor[(13, 12, 10), float64] */;
  %353 = cast(%352, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
  %354 = @func_13083() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %355 = @func_14513() /* ty=(Tensor[(840), uint8],) */;
  %356 = sinh(%353) /* ty=Tensor[(13, 12, 10), float64] */;
  %357 = %354.3;
  %358 = %355.0;
  (%356, %357, %358)
}

def @func_8464() -> Tensor[(840), uint8] {
  @func_8438() /* ty=Tensor[(840), uint8] */
}

def @func_9714(%var_9674: Tensor[(3, 1, 10), int64], %var_9675: Tensor[(3, 5, 10), int64], %var_9686: Tensor[(210), float64]) -> (Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) {
  %359 = cast(%var_9674, dtype="int64") /* ty=Tensor[(3, 1, 10), int64] */;
  %360 = cast(%var_9675, dtype="int64") /* ty=Tensor[(3, 5, 10), int64] */;
  %361 = cast(%var_9686, dtype="float64") /* ty=Tensor[(210), float64] */;
  %362 = reshape(%361, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %363 = @func_9022(%362) /* ty=(Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) */;
  %364 = cast(meta[relay.Constant][32] /* ty=Tensor[(18, 54), int64] */, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %365 = cast(meta[relay.Constant][32] /* ty=Tensor[(18, 54), int64] */, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %366 = cast(%var_9686, dtype="float64") /* ty=Tensor[(210), float64] */;
  %367 = reshape(%364, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %368 = reshape(%365, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %369 = reshape(%366, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %370 = @func_1518(%367, %368, %369) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %371 = minimum(%359, %360) /* ty=Tensor[(3, 5, 10), int64] */;
  %372 = %363.3;
  %373 = %370.2;
  (%371, %372, %var_9686, %373, meta[relay.Constant][32] /* ty=Tensor[(18, 54), int64] */)
}

def @func_14301(%var_14226: Tensor[(1200), float32], %var_14227: Tensor[(6, 18), float32], %var_14247: Tensor[(672), uint64], %var_14263: Tensor[(6, 18), float32]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(672), uint64], Tensor[(6, 18), float64], Tensor[(1560), uint16]) {
  %374 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %375 = cast(%var_14226, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %376 = cast(%var_14226, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %377 = cast(%var_14227, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %378 = reshape(%375, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %379 = reshape(%376, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %380 = reshape(%377, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %381 = @func_7568(%378, %379, %380) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %382 = @func_10919() /* ty=(Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) */;
  %383 = cast(%var_14247, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %384 = reshape(%383, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %385 = @func_11123(%384) /* ty=(Tensor[(6, 6, 4), bool], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */;
  %386 = cast(%var_14263, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %387 = shape_of(%var_14227, dtype="int32") /* ty=Tensor[(2), int32] */;
  %388 = cast(%var_14227, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %390 = subtract(%388, %389) /* ty=Tensor[(6, 18), uint8] */;
  %391 = cast(%var_14263, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(2), int32] */;
  %393 = cast(%390, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %395 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %396 = @func_8438() /* ty=Tensor[(840), uint8] */;
  %397 = %374.0;
  %398 = %381.3;
  %399 = %382.0;
  %400 = %385.0;
  %401 = floor_mod(%393, %394) /* ty=Tensor[(6, 18), float64] */;
  %402 = %395.2;
  (%396, %397, %398, %var_14226, %399, %400, %var_14247, %401, %402)
}

def @func_12200() -> Tensor[(840), uint8] {
  %403 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %403.0
}

def @func_15728(%var_15685: Tensor[(210), float64], %var_15692: Tensor[(1200), float32]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(6, 6, 4), float32], Tensor[(13, 12, 10), uint16]) {
  %404 = cast(meta[relay.Constant][33] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %405 = cast(meta[relay.Constant][33] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %406 = cast(%var_15685, dtype="float64") /* ty=Tensor[(210), float64] */;
  %407 = reshape(%404, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %408 = reshape(%405, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %409 = reshape(%406, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %410 = @func_1518(%407, %408, %409) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %411 = cast(%var_15692, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %412 = cast(%var_15692, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %413 = cast(meta[relay.Constant][34] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %414 = reshape(%411, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %415 = reshape(%412, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %416 = reshape(%413, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %417 = @func_7568(%414, %415, %416) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %418 = @func_9509() /* ty=Tensor[(840), uint8] */;
  %419 = @func_15388() /* ty=Tensor[(6, 6, 4), float64] */;
  %420 = %410.2;
  %421 = %417.3;
  %422 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  %423 = @func_11173() /* ty=Tensor[(13, 12, 10), uint16] */;
  (%418, %419, %420, meta[relay.Constant][33] /* ty=Tensor[(972), int64] */, %var_15685, %421, %var_15692, meta[relay.Constant][34] /* ty=Tensor[(108), float32] */, %422, %423)
}

def @func_2710(%var_2621: Tensor[(14, 16, 6), float32], %var_2622: Tensor[(14, 16, 6), float32], %var_2631: Tensor[(210), float64], %var_2650: Tensor[(972), int64], %var_2675: Tensor[(300), uint64], %var_2681: Tensor[(1760), int16], %var_2696: Tensor[(1760), int16]) -> (Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) {
  %424 = cast(%var_2622, dtype="bool") /* ty=Tensor[(14, 16, 6), bool] */;
  %425 = shape_of(%var_2621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_2621, dtype="bool") /* ty=Tensor[(14, 16, 6), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %428 = cast(%var_2631, dtype="float64") /* ty=Tensor[(210), float64] */;
  %429 = reshape(%428, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %430 = cast(meta[relay.Constant][35] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %431 = reshape(%430, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %432 = @func_2097(%431) /* ty=(Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) */;
  %433 = @func_136(%429) /* ty=Tensor[(14, 15, 1), float64] */;
  %434 = cast(%433, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %435 = reshape(%434, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %436 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
  %437 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
  %438 = @func_136(%435) /* ty=Tensor[(14, 15, 1), float64] */;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %440 = reshape(%436, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %441 = reshape(%437, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %442 = reshape(%439, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %443 = @func_1518(%440, %441, %442) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %444 = cast(meta[relay.Constant][35] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %445 = reshape(%444, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %446 = @func_2097(%445) /* ty=(Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) */;
  %447 = cast(%var_2675, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %448 = cast(%var_2675, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %449 = reshape(%447, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), uint64] */;
  %450 = reshape(%448, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), uint64] */;
  %451 = cast(meta[relay.Constant][36] /* ty=Tensor[(2100), float32] */, dtype="float32") /* ty=Tensor[(2100), float32] */;
  %452 = cast(%var_2681, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %453 = cast(%438, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %454 = reshape(%451, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float32] */;
  %455 = reshape(%452, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %456 = reshape(%453, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %457 = @func_438(%454, %455, %456) /* ty=(Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) */;
  %458 = cast(meta[relay.Constant][37] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %459 = reshape(%458, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
  %460 = %457.3;
  %461 = cast(%460, dtype="float64") /* ty=Tensor[(210), float64] */;
  %462 = reshape(%461, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %463 = cast(%var_2696, dtype="bool") /* ty=Tensor[(1760), bool] */;
  %464 = shape_of(%var_2681, dtype="int32") /* ty=Tensor[(1), int32] */;
  %465 = cast(%var_2681, dtype="bool") /* ty=Tensor[(1760), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?), bool] */;
  %467 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
  %468 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
  %469 = cast(%438, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %470 = reshape(%467, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %471 = reshape(%468, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %472 = reshape(%469, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %473 = @func_1518(%470, %471, %472) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %474 = less_equal(%426, %427) /* ty=Tensor[(14, 16, 6), bool] */;
  %475 = %432.0;
  %476 = %443.1;
  %477 = %446.0;
  %478 = @func_1279(%449, %450) /* ty=Tensor[(15, 10, 2), bool] */;
  %479 = @func_2461(%459) /* ty=Tensor[(3, 13, 4), float32] */;
  %480 = @func_136(%462) /* ty=Tensor[(14, 15, 1), float64] */;
  %481 = less_equal(%465, %466) /* ty=Tensor[(1760), bool] */;
  %482 = %473.0;
  (%474, %433, %var_2631, %475, meta[relay.Constant][35] /* ty=Tensor[(10), float64] */, %438, %476, %var_2650, %477, %478, %var_2675, %460, meta[relay.Constant][36] /* ty=Tensor[(2100), float32] */, %479, meta[relay.Constant][37] /* ty=Tensor[(39, 4), float32] */, %480, %481, %482)
}

def @func_13108() -> Tensor[(6, 6, 4), float64] {
  %483 = @func_11910() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %483.0
}

def @func_15661() -> Tensor[(128), uint16] {
  %484 = @func_8486() /* ty=(Tensor[(128), uint16],) */;
  %484.0
}

def @func_16020() -> Tensor[(840), uint8] {
  %485 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
  %485.0
}

def @func_9228() -> Tensor[(840), uint8] {
  %486 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %486.1
}

def @func_13202() -> Tensor[(360), float64] {
  %487 = @func_9757() /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) */;
  %487.2
}

def @func_15388() -> Tensor[(6, 6, 4), float64] {
  @func_13108() /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_8937() -> (Tensor[(840), uint8], Tensor[(840), uint8]) {
  %488 = @func_8894() /* ty=(Tensor[(128), uint16], Tensor[(840), uint8]) */;
  %489 = %488.1;
  %490 = @func_8438() /* ty=Tensor[(840), uint8] */;
  (%489, %490)
}

def @func_8894() -> (Tensor[(128), uint16], Tensor[(840), uint8]) {
  %491 = @func_8486() /* ty=(Tensor[(128), uint16],) */;
  %492 = %491.0;
  %493 = @func_8464() /* ty=Tensor[(840), uint8] */;
  (%492, %493)
}

def @func_10639() -> (Tensor[(840), uint8],) {
  %494 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %495 = %494.0;
  (%495,)
}

def @func_15233(%var_15182: Tensor[(13, 12, 10), uint16], %var_15194: Tensor[(1200), float32], %var_15195: Tensor[(108), float32], %var_15196: Tensor[(4, 168), uint64], %var_15206: int16, %var_15220: Tensor[(384), float64]) -> (Tensor[(13, 12, 10), bool], Tensor[(840), uint8], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(4, 168), uint64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(144), float64], Tensor[(600), uint8], int16, Tensor[(1560), uint16], Tensor[(384), float64], Tensor[(156, 1), float64], Tensor[(840), uint8]) {
  %496 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %497 = %496.0;
  %498 = cast(%var_15182, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %502 = cast(%var_15194, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %503 = cast(%var_15195, dtype="float32") /* ty=Tensor[(108), float32] */;
  %504 = cast(%var_15196, dtype="uint64") /* ty=Tensor[(4, 168), uint64] */;
  %505 = cast(%var_15195, dtype="float32") /* ty=Tensor[(108), float32] */;
  %506 = reshape(%502, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %507 = reshape(%503, newshape=[6, 18]) /* ty=Tensor[(6, 18), float32] */;
  %508 = reshape(%504, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %509 = reshape(%505, newshape=[6, 18]) /* ty=Tensor[(6, 18), float32] */;
  %510 = @func_14301(%506, %507, %508, %509) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(672), uint64], Tensor[(6, 18), float64], Tensor[(1560), uint16]) */;
  %511 = cast(meta[relay.Constant][38] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %512 = cast(%var_15194, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %513 = cast(meta[relay.Constant][39] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %514 = cast(meta[relay.Constant][40] /* ty=Tensor[(156, 1), float32] */, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
  %515 = cast(%var_15206, dtype="int16") /* ty=int16 */;
  %516 = reshape(%511, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %517 = reshape(%512, newshape=[4, 300]) /* ty=Tensor[(4, 300), float32] */;
  %518 = reshape(%513, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %519 = reshape(%514, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %520 = reshape(%515, newshape=[]) /* ty=int16 */;
  %521 = @func_13835(%516, %517, %518, %519, %520) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(6, 6, 4), float64], Tensor[(144), float64], Tensor[(5, 15, 8), bool], Tensor[(660), float32], Tensor[(4, 300), float32], Tensor[(108), float32], Tensor[(600), uint8], Tensor[(7, 8, 7), bool], Tensor[(1, 392), float32], Tensor[(156), float32], Tensor[(12, 9, 16), float32], Tensor[(1728), float32], int16) */;
  %522 = cast(%var_15220, dtype="float64") /* ty=Tensor[(384), float64] */;
  %523 = reshape(%522, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
  %524 = @func_7450(%523) /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(2, 16, 12), float32]) */;
  %525 = cast(meta[relay.Constant][40] /* ty=Tensor[(156, 1), float32] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %526 = @func_12399() /* ty=(Tensor[(840), uint8],) */;
  %527 = not_equal(%500, %501) /* ty=Tensor[(13, 12, 10), bool] */;
  %528 = %510.1;
  %529 = @func_9509() /* ty=Tensor[(840), uint8] */;
  %530 = %521.5;
  %531 = %524.1;
  %532 = asin(%525) /* ty=Tensor[(156, 1), float64] */;
  %533 = %526.0;
  (%527, %528, %var_15194, %var_15195, %var_15196, %529, %530, meta[relay.Constant][38] /* ty=Tensor[(144), float64] */, meta[relay.Constant][39] /* ty=Tensor[(600), uint8] */, %var_15206, %531, %var_15220, %532, %533)
}

def @func_11286(%var_11284: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(14, 15, 1), float64], Tensor[(72), uint32], Tensor[(210), float64]) {
  %534 = cast(meta[relay.Constant][41] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %535 = cast(%var_11284, dtype="float64") /* ty=Tensor[(210), float64] */;
  %536 = reshape(%534, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), uint32] */;
  %537 = reshape(%535, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %538 = @func_5453(%536, %537) /* ty=(Tensor[(4, 9, 2), uint32], Tensor[(16, 11, 10), int16], Tensor[(1, 1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64], Tensor[(2100), float32]) */;
  %539 = @func_10232() /* ty=Tensor[(840), uint8] */;
  %540 = %538.4;
  (%539, %540, meta[relay.Constant][41] /* ty=Tensor[(72), uint32] */, %var_11284)
}

def @func_8438() -> Tensor[(840), uint8] {
  %541 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %541.1
}

def @func_9209() -> (uint16,) {
  %542 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
  %543 = %542.2;
  (%543,)
}

def @func_13835(%var_13803: Tensor[(144), float64], %var_13809: Tensor[(4, 300), float32], %var_13811: Tensor[(600), uint8], %var_13815: Tensor[(156), float32], %var_13823: int16) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(6, 6, 4), float64], Tensor[(144), float64], Tensor[(5, 15, 8), bool], Tensor[(660), float32], Tensor[(4, 300), float32], Tensor[(108), float32], Tensor[(600), uint8], Tensor[(7, 8, 7), bool], Tensor[(1, 392), float32], Tensor[(156), float32], Tensor[(12, 9, 16), float32], Tensor[(1728), float32], int16) {
  %544 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
  %545 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
  %546 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %547 = cast(%var_13803, dtype="float64") /* ty=Tensor[(144), float64] */;
  %548 = reshape(%547, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
  %549 = @func_12666(%548) /* ty=(Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */;
  %550 = cast(meta[relay.Constant][42] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %551 = cast(%var_13809, dtype="float32") /* ty=Tensor[(4, 300), float32] */;
  %552 = cast(meta[relay.Constant][43] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %553 = cast(%var_13811, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %554 = reshape(%550, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), float32] */;
  %555 = reshape(%551, newshape=[12, 100]) /* ty=Tensor[(12, 100), float32] */;
  %556 = reshape(%552, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %557 = reshape(%553, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %558 = @func_11703(%554, %555, %556, %557) /* ty=(Tensor[(4, 11, 15), bool], Tensor[(12, 100), float32], Tensor[(108), float32], Tensor[(416), uint16], Tensor[(14, 15, ?), float64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(4, 11, 15), uint8], Tensor[(189), float64]) */;
  %559 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 392), float32] */, dtype="float32") /* ty=Tensor[(1, 392), float32] */;
  %560 = cast(%var_13815, dtype="float32") /* ty=Tensor[(156), float32] */;
  %561 = reshape(%559, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
  %562 = reshape(%560, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %563 = @func_4783(%561, %562) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
  %564 = cast(meta[relay.Constant][45] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %565 = cast(%var_13823, dtype="int16") /* ty=int16 */;
  %566 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 392), float32] */, dtype="float32") /* ty=Tensor[(1, 392), float32] */;
  %567 = cast(%var_13815, dtype="float32") /* ty=Tensor[(156), float32] */;
  %568 = reshape(%564, newshape=[12, 9, 16]) /* ty=Tensor[(12, 9, 16), float32] */;
  %569 = reshape(%565, newshape=[]) /* ty=int16 */;
  %570 = reshape(%566, newshape=[392]) /* ty=Tensor[(392), float32] */;
  %571 = reshape(%567, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %572 = @func_6282(%568, %569, %570, %571) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(1, 15, 9), bool], int16, Tensor[(135), int16], Tensor[(156), float32], Tensor[(392), float32], Tensor[(156), float32]) */;
  %573 = %544.0;
  %574 = %545.0;
  %575 = %546.0;
  %576 = %549.0;
  %577 = %558.6;
  %578 = %563.0;
  %579 = %572.0;
  (%573, %574, %575, %576, %var_13803, %577, meta[relay.Constant][42] /* ty=Tensor[(660), float32] */, %var_13809, meta[relay.Constant][43] /* ty=Tensor[(108), float32] */, %var_13811, %578, meta[relay.Constant][44] /* ty=Tensor[(1, 392), float32] */, %var_13815, %579, meta[relay.Constant][45] /* ty=Tensor[(1728), float32] */, %var_13823)
}

def @func_10843(%var_10834: Tensor[(14, 11, 11), float32]) -> (Tensor[(14, 11, 11), float32],) {
  %580 = cast(%var_10834, dtype="float32") /* ty=Tensor[(14, 11, 11), float32] */;
  %581 = log(%580) /* ty=Tensor[(14, 11, 11), float32] */;
  (%581,)
}

def @func_7568(%var_7535: Tensor[(15, 10, 8), float32], %var_7536: Tensor[(15, 10, 8), float32], %var_7543: Tensor[(108), float32]) -> (Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) {
  %582 = cast(%var_7536, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %583 = shape_of(%var_7535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_7535, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %586 = cast(%var_7543, dtype="float32") /* ty=Tensor[(108), float32] */;
  %587 = reshape(%586, newshape=[4, 3, 9]) /* ty=Tensor[(4, 3, 9), float32] */;
  %588 = @func_5540(%587) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) */;
  %589 = %588.2;
  %590 = cast(%589, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %591 = reshape(%590, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
  %592 = @func_4675(%591) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %593 = divide(%584, %585) /* ty=Tensor[(15, 10, 8), float32] */;
  %594 = %592.2;
  (%593, %589, %var_7543, %594)
}

def @func_14113() -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(3, 6), float32], Tensor[(2, 1, 9), float32]) {
  %595 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 6), float32] */, dtype="float32") /* ty=Tensor[(3, 6), float32] */;
  %596 = reshape(%595, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float32] */;
  %597 = @func_7990(%596) /* ty=(Tensor[(2, 1, 9), float32],) */;
  %598 = %597.0;
  %599 = cast(%598, dtype="float32") /* ty=Tensor[(2, 1, 9), float32] */;
  %600 = @func_8464() /* ty=Tensor[(840), uint8] */;
  %601 = @func_9401() /* ty=Tensor[(840), uint8] */;
  %602 = acosh(%599) /* ty=Tensor[(2, 1, 9), float32] */;
  (%600, %601, meta[relay.Constant][46] /* ty=Tensor[(3, 6), float32] */, %602)
}

def @func_11444() -> (Tensor[(840), uint8],) {
  %603 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %604 = %603.0;
  (%604,)
}

def @func_9651(%var_9642: Tensor[(6, 6, 4), float64]) -> Tensor[(6, 6, 4), float64] {
  %605 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
  %606 = %605.0;
  %607 = cast(%var_9642, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%606, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%609, %610) /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_15476() -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(840), uint8]) {
  %611 = @func_12479() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */;
  %612 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %613 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
  %614 = %611.0;
  %615 = %612.0;
  %616 = %613.0;
  (%614, %615, %616)
}

def @func_325(%var_263: Tensor[(16, 11, 10), int16], %var_264: Tensor[(16, 11, 10), int16], %var_270: Tensor[(210), float64]) -> (Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) {
  %617 = cast(%var_264, dtype="int16") /* ty=Tensor[(16, 11, 10), int16] */;
  %618 = shape_of(%var_263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_263, dtype="int16") /* ty=Tensor[(16, 11, 10), int16] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %621 = cast(%var_270, dtype="float64") /* ty=Tensor[(210), float64] */;
  %622 = reshape(%621, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %623 = @func_136(%622) /* ty=Tensor[(14, 15, 1), float64] */;
  %624 = cast(%623, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %625 = cos(%624) /* ty=Tensor[(14, 15, 1), float64] */;
  %626 = cast(%var_270, dtype="bool") /* ty=Tensor[(210), bool] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%625, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %630 = cast(%623, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %631 = reshape(%630, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %632 = logical_xor(%619, %620) /* ty=Tensor[(16, 11, 10), int16] */;
  %633 = not_equal(%628, %629) /* ty=Tensor[(14, 15, ?), bool] */;
  %634 = @func_136(%631) /* ty=Tensor[(14, 15, 1), float64] */;
  (%632, %633, %634)
}

def @func_12327(%var_12292: Tensor[(300), uint64]) -> (uint16, Tensor[(300), uint64], Tensor[(1760), uint64]) {
  %635 = @func_9209() /* ty=(uint16,) */;
  %636 = cast(%var_12292, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %637 = cast(meta[relay.Constant][47] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %638 = reshape(%636, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %639 = reshape(%637, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %640 = @func_9369(%638, %639) /* ty=(Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) */;
  %641 = %640.1;
  %642 = cast(%641, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %643 = asinh(%642) /* ty=Tensor[(1760), float64] */;
  %644 = cast(meta[relay.Constant][47] /* ty=Tensor[(1760), int16] */, dtype="uint64") /* ty=Tensor[(1760), uint64] */;
  %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(1), int32] */;
  %646 = cast(%643, dtype="uint64") /* ty=Tensor[(1760), uint64] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %648 = %635.0;
  %649 = bitwise_xor(%646, %647) /* ty=Tensor[(1760), uint64] */;
  (%648, %var_12292, %649)
}

def @func_16470() -> Tensor[(840), uint8] {
  %650 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %650.1
}

def @func_11010(%var_11008: Tensor[(440, 4), int16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(440, 4), int16]) {
  %651 = cast(meta[relay.Constant][48] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %652 = cast(%var_11008, dtype="int16") /* ty=Tensor[(440, 4), int16] */;
  %653 = reshape(%651, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %654 = reshape(%652, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %655 = @func_10326(%653, %654) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) */;
  %656 = @func_10232() /* ty=Tensor[(840), uint8] */;
  %657 = %655.1;
  (%656, %657, meta[relay.Constant][48] /* ty=Tensor[(360), float64] */, %var_11008)
}

def @func_15420() -> Tensor[(840), uint8] {
  %658 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %658.0
}

def @func_12112(%var_12080: float32, %var_12081: Tensor[(11, 9, 13), float32], %var_12095: Tensor[(462), uint32]) -> (Tensor[(11, 9, 13), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) {
  %659 = cast(%var_12080, dtype="float32") /* ty=float32 */;
  %660 = cast(%var_12081, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
  %661 = cast(%var_12095, dtype="uint32") /* ty=Tensor[(462), uint32] */;
  %662 = cast(meta[relay.Constant][49] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %663 = reshape(%661, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint32] */;
  %664 = reshape(%662, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), int16] */;
  %665 = @func_10606(%663, %664) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) */;
  %666 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
  %667 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %668 = power(%659, %660) /* ty=Tensor[(11, 9, 13), float32] */;
  %669 = %665.0;
  %670 = %666.0;
  %671 = %667.0;
  (%668, %669, %var_12095, meta[relay.Constant][49] /* ty=Tensor[(1760), int16] */, %670, %671)
}

def @func_7471(%var_7457: Tensor[(5, 15, 8), uint8], %var_7458: Tensor[(5, 15, 8), uint8]) -> (Tensor[(5, 15, 8), bool],) {
  %672 = cast(%var_7458, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
  %673 = shape_of(%var_7457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%var_7457, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %676 = not_equal(%674, %675) /* ty=Tensor[(5, 15, 8), bool] */;
  (%676,)
}

def @func_12372(%var_12367: Tensor[(972), int64], %var_12368: Tensor[(300), uint64]) -> (Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) {
  %677 = cast(%var_12367, dtype="int64") /* ty=Tensor[(972), int64] */;
  %678 = cast(%var_12368, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %679 = cast(meta[relay.Constant][50] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %680 = reshape(%677, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
  %681 = reshape(%678, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %682 = reshape(%679, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %683 = @func_9148(%680, %681, %682) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %684 = @func_10676() /* ty=Tensor[(840), uint8] */;
  %685 = %683.5;
  (%684, %685, %var_12367, %var_12368, meta[relay.Constant][50] /* ty=Tensor[(1760), int16] */)
}

def @func_13418(%var_13411: Tensor[(1560), uint16]) -> (Tensor[(416), uint16], Tensor[(13, 12, 10), float64], Tensor[(1560), uint16], Tensor[(840), uint8]) {
  %686 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %687 = cast(%var_13411, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %688 = reshape(%687, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
  %689 = @func_11423(%688) /* ty=(Tensor[(840), uint8], Tensor[(1560), uint16], Tensor[(13, 12, 10), float64]) */;
  %690 = %686.2;
  %691 = %689.2;
  %692 = @func_10232() /* ty=Tensor[(840), uint8] */;
  (%690, %691, %var_13411, %692)
}

def @func_14156(%var_14142: Tensor[(13, 12, 10), uint16]) -> (Tensor[(13, 12, 10), float32], Tensor[(1760), uint64], Tensor[(1, 300), uint64]) {
  %693 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %694 = %693.0;
  %695 = cast(%var_14142, dtype="float32") /* ty=Tensor[(13, 12, 10), float32] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%694, dtype="float32") /* ty=Tensor[(13, 12, 10), float32] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %699 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 300), uint64] */, dtype="uint64") /* ty=Tensor[(1, 300), uint64] */;
  %700 = reshape(%699, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %701 = @func_12327(%700) /* ty=(uint16, Tensor[(300), uint64], Tensor[(1760), uint64]) */;
  %702 = multiply(%697, %698) /* ty=Tensor[(13, 12, 10), float32] */;
  %703 = %701.2;
  (%702, %703, meta[relay.Constant][51] /* ty=Tensor[(1, 300), uint64] */)
}

def @func_14614(%var_14597: Tensor[(1200), float32], %var_14599: Tensor[(210), float64]) -> (Tensor[(13, 12, 10), float64], Tensor[(6, 6, 4), float32], Tensor[(6, 6, 4), float64], uint16, Tensor[(1200), float32], Tensor[(6, 18), float32], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(840), uint8]) {
  %704 = @func_13631() /* ty=Tensor[(13, 12, 10), uint16] */;
  %705 = cast(%704, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
  %706 = @func_10017() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %707 = cast(%var_14597, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %708 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 18), float32] */, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %709 = cast(%var_14599, dtype="float64") /* ty=Tensor[(210), float64] */;
  %710 = reshape(%707, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %711 = reshape(%708, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %712 = reshape(%709, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %713 = @func_9923(%710, %711, %712) /* ty=(Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) */;
  %714 = @func_13638() /* ty=Tensor[(6, 6, 4), float32] */;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %716 = reshape(%715, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
  %717 = @func_12666(%716) /* ty=(Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */;
  %718 = asin(%705) /* ty=Tensor[(13, 12, 10), float64] */;
  %719 = %706.0;
  %720 = %713.1;
  %721 = @func_9228() /* ty=Tensor[(840), uint8] */;
  %722 = %717.1;
  %723 = @func_14546() /* ty=Tensor[(840), uint8] */;
  (%718, %714, %719, %720, %var_14597, meta[relay.Constant][52] /* ty=Tensor[(6, 18), float32] */, %var_14599, %721, %722, %723)
}

def @func_12986() -> (Tensor[(6, 6, 4), float32],) {
  %724 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  (%724,)
}

def @func_12941(%var_12937: Tensor[(210), float64]) -> (Tensor[(6, 6, 4), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(16, 11, 10), int16], Tensor[(210), float64]) {
  %725 = cast(meta[relay.Constant][53] /* ty=Tensor[(462), uint32] */, dtype="uint32") /* ty=Tensor[(462), uint32] */;
  %726 = cast(meta[relay.Constant][54] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %727 = reshape(%725, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint32] */;
  %728 = reshape(%726, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), int16] */;
  %729 = @func_10606(%727, %728) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) */;
  %730 = cast(meta[relay.Constant][54] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %731 = cast(%var_12937, dtype="float64") /* ty=Tensor[(210), float64] */;
  %732 = reshape(%730, newshape=[1, 1760]) /* ty=Tensor[(1, 1760), int16] */;
  %733 = reshape(%731, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %734 = @func_8271(%732, %733) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) */;
  %735 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  %736 = %729.0;
  %737 = %734.1;
  (%735, %736, meta[relay.Constant][53] /* ty=Tensor[(462), uint32] */, meta[relay.Constant][54] /* ty=Tensor[(1760), int16] */, %737, %var_12937)
}

def @func_9968(%var_9963: Tensor[(972), int64], %var_9964: Tensor[(210), float64]) -> (Tensor[(1, 3, 2), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64]) {
  %738 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 3, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 3, 2), float64] */;
  %739 = cast(%var_9963, dtype="int64") /* ty=Tensor[(972), int64] */;
  %740 = cast(%var_9963, dtype="int64") /* ty=Tensor[(972), int64] */;
  %741 = cast(%var_9964, dtype="float64") /* ty=Tensor[(210), float64] */;
  %742 = reshape(%739, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %743 = reshape(%740, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %744 = reshape(%741, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %745 = @func_1518(%742, %743, %744) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %746 = tan(%738) /* ty=Tensor[(1, 3, 2), float64] */;
  %747 = %745.1;
  (%746, %747, %var_9963, %var_9964)
}

def @func_14513() -> (Tensor[(840), uint8],) {
  %748 = @func_12866() /* ty=(Tensor[(840), uint8],) */;
  %749 = %748.0;
  (%749,)
}

def @func_15526() -> Tensor[(840), uint8] {
  @func_10232() /* ty=Tensor[(840), uint8] */
}

def @func_15359() -> (Tensor[(840), uint8],) {
  %750 = @func_12426() /* ty=(Tensor[(840), uint8],) */;
  %751 = %750.0;
  (%751,)
}

def @func_4928(%var_4923: int16, %var_4924: Tensor[(1, 15, 9), int16]) -> (Tensor[(1, 15, 9), bool],) {
  %752 = cast(%var_4923, dtype="bool") /* ty=bool */;
  %753 = cast(%var_4924, dtype="bool") /* ty=Tensor[(1, 15, 9), bool] */;
  %754 = greater_equal(%752, %753) /* ty=Tensor[(1, 15, 9), bool] */;
  (%754,)
}

def @func_15918() -> Tensor[(13, 12, 10), uint16] {
  %755 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
  %755.1
}

def @func_12479() -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) {
  %756 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %757 = %756.0;
  %758 = cast(%757, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %759 = @func_10676() /* ty=Tensor[(840), uint8] */;
  %760 = sigmoid(%758) /* ty=Tensor[(6, 6, 4), float32] */;
  (%759, %760)
}

def @func_15120(%var_15003: Tensor[(462), uint32], %var_15004: Tensor[(8, 220), int16], %var_15010: Tensor[(8, 220), int16], %var_15116: Tensor[(156), float32]) -> (Tensor[(13, 12, 10), uint16], Tensor[(360), float64], Tensor[(210), float64], Tensor[(462), uint32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(8, 220), int8], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) {
  %761 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %762 = @func_13602() /* ty=(Tensor[(360), float64],) */;
  %763 = cast(%var_15003, dtype="uint32") /* ty=Tensor[(462), uint32] */;
  %764 = cast(%var_15004, dtype="int16") /* ty=Tensor[(8, 220), int16] */;
  %765 = reshape(%763, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint32] */;
  %766 = reshape(%764, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), int16] */;
  %767 = @func_10606(%765, %766) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) */;
  %768 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
  %769 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %770 = cast(%var_15004, dtype="float64") /* ty=Tensor[(8, 220), float64] */;
  %771 = atanh(%770) /* ty=Tensor[(8, 220), float64] */;
  %772 = cast(%var_15004, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
  %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(2), int32] */;
  %774 = cast(%771, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %776 = less(%774, %775) /* ty=Tensor[(8, 220), bool] */;
  %777 = cast(%var_15010, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
  %778 = shape_of(%var_15004, dtype="int32") /* ty=Tensor[(2), int32] */;
  %779 = cast(%var_15004, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %781 = not_equal(%779, %780) /* ty=Tensor[(8, 220), bool] */;
  %782 = cast(%781, dtype="int8") /* ty=Tensor[(8, 220), int8] */;
  %783 = shape_of(%776, dtype="int32") /* ty=Tensor[(2), int32] */;
  %784 = cast(%776, dtype="int8") /* ty=Tensor[(8, 220), int8] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %786 = cast(%var_15116, dtype="float32") /* ty=Tensor[(156), float32] */;
  %787 = reshape(%786, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
  %788 = %761.0;
  %789 = %762.0;
  %790 = %767.2;
  %791 = %768.0;
  %792 = @func_13956() /* ty=Tensor[(840), uint8] */;
  %793 = %769.0;
  %794 = bitwise_xor(%784, %785) /* ty=Tensor[(8, 220), int8] */;
  %795 = @func_2461(%787) /* ty=Tensor[(3, 13, 4), float32] */;
  (%788, %789, %790, %var_15003, %791, %792, %793, %794, %795, %var_15116)
}

def @func_10414() -> (Tensor[(840), uint8],) {
  %796 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
  %797 = %796.0;
  (%797,)
}

def @func_10534(%var_10525: Tensor[(9, 10, 8), bool], %var_10526: Tensor[(9, 10, 8), bool]) -> Tensor[(9, 10, 8), bool] {
  %798 = cast(%var_10526, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %799 = shape_of(%var_10525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%var_10525, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%800, %801) /* ty=Tensor[(9, 10, 8), bool] */
}

def @func_10458() -> (uint16, Tensor[(840), uint8]) {
  %802 = @func_9209() /* ty=(uint16,) */;
  %803 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %804 = %802.0;
  %805 = %803.0;
  (%804, %805)
}

def @func_1279(%var_1273: Tensor[(15, 10, 2), uint64], %var_1274: Tensor[(15, 10, 2), uint64]) -> Tensor[(15, 10, 2), bool] {
  %806 = cast(%var_1274, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %807 = shape_of(%var_1273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%var_1273, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%808, %809) /* ty=Tensor[(15, 10, 2), bool] */
}

def @func_2023(%var_2002: Tensor[(7, 15, 8), uint8]) -> (Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) {
  %810 = cast(meta[relay.Constant][56] /* ty=Tensor[(7, 15, 8), uint8] */, dtype="uint8") /* ty=Tensor[(7, 15, 8), uint8] */;
  %811 = shape_of(%var_2002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%var_2002, dtype="uint8") /* ty=Tensor[(7, 15, 8), uint8] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %814 = cast(meta[relay.Constant][57] /* ty=Tensor[(189), float64] */, dtype="float64") /* ty=Tensor[(189), float64] */;
  %815 = cast(meta[relay.Constant][58] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %816 = reshape(%814, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float64] */;
  %817 = reshape(%815, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %818 = @func_482(%816, %817) /* ty=(Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) */;
  %819 = bitwise_xor(%812, %813) /* ty=Tensor[(7, 15, 8), uint8] */;
  %820 = %818.5;
  (%819, %820, meta[relay.Constant][57] /* ty=Tensor[(189), float64] */, meta[relay.Constant][58] /* ty=Tensor[(1760), int16] */)
}

def @main() -> (Tensor[(9, 2, 3), uint16], Tensor[(9, 2, 3), bool], Tensor[(9, 1, 3), float32]) {
  %821 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 1, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 1, 3), uint16] */;
  %822 = cast(meta[relay.Constant][60] /* ty=Tensor[(9, 2, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 2, 3), uint16] */;
  %823 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 1, 3), uint16] */, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
  %824 = cast(meta[relay.Constant][60] /* ty=Tensor[(9, 2, 3), uint16] */, dtype="bool") /* ty=Tensor[(9, 2, 3), bool] */;
  %825 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 1, 3), uint16] */, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  %826 = maximum(%821, %822) /* ty=Tensor[(9, 2, 3), uint16] */;
  %827 = logical_and(%823, %824) /* ty=Tensor[(9, 2, 3), bool] */;
  %828 = erf(%825) /* ty=Tensor[(9, 1, 3), float32] */;
  (%826, %827, %828)
}

def @func_7990(%var_7977: Tensor[(2, 1, 9), float32]) -> (Tensor[(2, 1, 9), float32],) {
  %829 = cast(%var_7977, dtype="float32") /* ty=Tensor[(2, 1, 9), float32] */;
  %830 = sigmoid(%829) /* ty=Tensor[(2, 1, 9), float32] */;
  (%830,)
}

def @func_12866() -> (Tensor[(840), uint8],) {
  %831 = @func_9509() /* ty=Tensor[(840), uint8] */;
  (%831,)
}

def @func_9803() -> (Tensor[(840), uint8],) {
  %832 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
  %833 = %832.0;
  (%833,)
}

def @func_13161(%var_13152: Tensor[(189), float64]) -> (Tensor[(840), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(880, 2), int16]) {
  %834 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %835 = cast(%var_13152, dtype="float64") /* ty=Tensor[(189), float64] */;
  %836 = cast(meta[relay.Constant][61] /* ty=Tensor[(880, 2), int16] */, dtype="int16") /* ty=Tensor[(880, 2), int16] */;
  %837 = reshape(%835, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float64] */;
  %838 = reshape(%836, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %839 = @func_482(%837, %838) /* ty=(Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) */;
  %840 = %834.0;
  %841 = %839.5;
  (%840, %841, %var_13152, meta[relay.Constant][61] /* ty=Tensor[(880, 2), int16] */)
}

def @func_9044() -> (Tensor[(6, 6, 4), float64],) {
  %842 = cast(meta[relay.Constant][63] /* ty=Tensor[(6, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %843 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(6, 6, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(meta[relay.Constant][62] /* ty=Tensor[(6, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %846 = divide(%844, %845) /* ty=Tensor[(6, 6, 4), float64] */;
  (%846,)
}

def @func_13526(%var_13495: Tensor[(2, 7, 16), uint16], %var_13496: Tensor[(2, 7, 16), uint16]) -> (Tensor[(2, 7, 16), uint16], Tensor[(2, 7, 16), float64]) {
  %847 = cast(%var_13496, dtype="uint16") /* ty=Tensor[(2, 7, 16), uint16] */;
  %848 = shape_of(%var_13495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%var_13495, dtype="uint16") /* ty=Tensor[(2, 7, 16), uint16] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %851 = cast(%var_13496, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  %852 = right_shift(%849, %850) /* ty=Tensor[(2, 7, 16), uint16] */;
  %853 = cos(%851) /* ty=Tensor[(2, 7, 16), float64] */;
  (%852, %853)
}

def @func_4564(%var_4561: Tensor[(5, 9, 8), float64]) -> Tensor[(5, 9, 8), float64] {
  %854 = cast(%var_4561, dtype="float64") /* ty=Tensor[(5, 9, 8), float64] */;
  rsqrt(%854) /* ty=Tensor[(5, 9, 8), float64] */
}

def @func_7450(%var_7412: Tensor[(2, 16, 12), float64]) -> (Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(2, 16, 12), float32]) {
  %855 = cast(meta[relay.Constant][64] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %856 = cast(meta[relay.Constant][64] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %857 = reshape(%855, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %858 = reshape(%856, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %859 = @func_5346(%857, %858) /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %860 = cast(%var_7412, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
  %861 = sigmoid(%860) /* ty=Tensor[(2, 16, 12), float64] */;
  %862 = cast(%861, dtype="float32") /* ty=Tensor[(2, 16, 12), float32] */;
  %863 = %859.0;
  %864 = cosh(%862) /* ty=Tensor[(2, 16, 12), float32] */;
  (%863, meta[relay.Constant][64] /* ty=Tensor[(1560), uint16] */, %864)
}

def @func_10656() -> (Tensor[(6, 6, 4), float64],) {
  %865 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %866 = %865.0;
  (%866,)
}

def @func_11703(%var_11592: Tensor[(4, 11, 15), float32], %var_11603: Tensor[(12, 100), float32], %var_11604: Tensor[(108), float32], %var_11689: Tensor[(600), uint8]) -> (Tensor[(4, 11, 15), bool], Tensor[(12, 100), float32], Tensor[(108), float32], Tensor[(416), uint16], Tensor[(14, 15, ?), float64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(4, 11, 15), uint8], Tensor[(189), float64]) {
  %867 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(4, 1, 15), bool] */;
  %868 = cast(%var_11592, dtype="bool") /* ty=Tensor[(4, 11, 15), bool] */;
  %869 = cast(%var_11603, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
  %870 = cast(%var_11603, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
  %871 = cast(%var_11604, dtype="float32") /* ty=Tensor[(108), float32] */;
  %872 = reshape(%869, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %873 = reshape(%870, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %874 = reshape(%871, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %875 = @func_7568(%872, %873, %874) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %876 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %877 = reshape(%876, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %878 = @func_136(%877) /* ty=Tensor[(14, 15, 1), float64] */;
  %879 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %883 = cast(%var_11689, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %884 = cast(%var_11689, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %885 = reshape(%883, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %886 = reshape(%884, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %887 = @func_7471(%885, %886) /* ty=(Tensor[(5, 15, 8), bool],) */;
  %888 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %889 = atanh(%888) /* ty=Tensor[(4, 1, 15), float32] */;
  %890 = cast(%var_11603, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
  %891 = cast(%var_11604, dtype="float32") /* ty=Tensor[(108), float32] */;
  %892 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %893 = reshape(%890, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %894 = reshape(%891, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %895 = reshape(%892, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %896 = @func_9923(%893, %894, %895) /* ty=(Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) */;
  %897 = %896.1;
  %898 = cast(%889, dtype="int32") /* ty=Tensor[(4, 1, 15), int32] */;
  %899 = cast(%897, dtype="int32") /* ty=int32 */;
  %900 = subtract(%898, %899) /* ty=Tensor[(4, 1, 15), int32] */;
  %901 = cast(%900, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %902 = sigmoid(%901) /* ty=Tensor[(4, 1, 15), float32] */;
  %903 = cast(%902, dtype="uint8") /* ty=Tensor[(4, 1, 15), uint8] */;
  %904 = cast(%var_11592, dtype="uint8") /* ty=Tensor[(4, 11, 15), uint8] */;
  %905 = @func_9228() /* ty=Tensor[(840), uint8] */;
  %906 = cast(%905, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %907 = reshape(%906, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
  %908 = @func_2023(%907) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
  %909 = less(%867, %868) /* ty=Tensor[(4, 11, 15), bool] */;
  %910 = %875.1;
  %911 = mod(%881, %882) /* ty=Tensor[(14, 15, ?), float64] */;
  %912 = %887.0;
  %913 = logical_xor(%903, %904) /* ty=Tensor[(4, 11, 15), uint8] */;
  %914 = %908.2;
  (%909, %var_11603, %var_11604, %910, %911, %905, %912, %var_11689, %913, %914)
}

def @func_5540(%var_5521: Tensor[(4, 3, 9), float32]) -> (Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) {
  %915 = cast(%var_5521, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
  %916 = cast(meta[relay.Constant][67] /* ty=Tensor[(416), uint16] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %917 = reshape(%916, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
  %918 = @func_4675(%917) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %919 = acos(%915) /* ty=Tensor[(4, 3, 9), float32] */;
  %920 = %918.2;
  (%919, %920, meta[relay.Constant][67] /* ty=Tensor[(416), uint16] */)
}

def @func_10326(%var_10289: Tensor[(360), float64], %var_10290: Tensor[(1760), int16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) {
  %921 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %922 = cast(%var_10289, dtype="float64") /* ty=Tensor[(360), float64] */;
  %923 = cast(%var_10290, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %924 = reshape(%922, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %925 = reshape(%923, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %926 = @func_8624(%924, %925) /* ty=(Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) */;
  %927 = %926.4;
  %928 = cast(%927, dtype="bool") /* ty=Tensor[(1760), bool] */;
  %929 = shape_of(%var_10290, dtype="int32") /* ty=Tensor[(1), int32] */;
  %930 = cast(%var_10290, dtype="bool") /* ty=Tensor[(1760), bool] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?), bool] */;
  %932 = %921.0;
  %933 = logical_and(%930, %931) /* ty=Tensor[(1760), bool] */;
  (%932, %var_10289, %933)
}

def @func_13738(%var_13720: Tensor[(210), float64]) -> (Tensor[(13, 12, 10), uint16], Tensor[(210), float64], Tensor[(14, 15, 1), float32]) {
  %934 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
  %935 = cast(%var_13720, dtype="float64") /* ty=Tensor[(210), float64] */;
  %936 = reshape(%935, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %937 = @func_136(%936) /* ty=Tensor[(14, 15, 1), float64] */;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(14, 15, 1), float32] */;
  %939 = %934.1;
  %940 = asinh(%938) /* ty=Tensor[(14, 15, 1), float32] */;
  (%939, %var_13720, %940)
}

def @func_16102() -> Tensor[(840), uint8] {
  %941 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %941.0
}

def @func_5346(%var_5329: Tensor[(13, 12, 10), uint16], %var_5330: Tensor[(13, 12, 10), uint16]) -> (Tensor[(13, 12, 10), uint16],) {
  %942 = cast(%var_5330, dtype="uint16") /* ty=Tensor[(13, 12, 10), uint16] */;
  %943 = shape_of(%var_5329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%var_5329, dtype="uint16") /* ty=Tensor[(13, 12, 10), uint16] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %946 = logical_xor(%944, %945) /* ty=Tensor[(13, 12, 10), uint16] */;
  (%946,)
}

def @func_11336() -> (Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) {
  %947 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %948 = cast(meta[relay.Constant][68] /* ty=Tensor[(416), uint16] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %949 = reshape(%948, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
  %950 = @func_4675(%949) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %951 = %947.0;
  %952 = %950.3;
  (%951, %952, meta[relay.Constant][68] /* ty=Tensor[(416), uint16] */)
}

def @func_12077() -> Tensor[(840), uint8] {
  @func_10676() /* ty=Tensor[(840), uint8] */
}

def @func_16365() -> Tensor[(6, 6, 4), float32] {
  %953 = @func_11046() /* ty=(Tensor[(6, 6, 4), float32],) */;
  %953.0
}

def @func_11423(%var_11407: Tensor[(1560), uint16]) -> (Tensor[(840), uint8], Tensor[(1560), uint16], Tensor[(13, 12, 10), float64]) {
  %954 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %955 = cast(%var_11407, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %956 = cast(%var_11407, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %957 = reshape(%955, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %958 = reshape(%956, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %959 = @func_5346(%957, %958) /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %960 = %959.0;
  %961 = cast(%960, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
  %962 = %954.0;
  %963 = exp(%961) /* ty=Tensor[(13, 12, 10), float64] */;
  (%962, %var_11407, %963)
}

def @func_6282(%var_6264: Tensor[(12, 9, 16), float32], %var_6275: int16, %var_6279: Tensor[(392), float32], %var_6280: Tensor[(156), float32]) -> (Tensor[(12, 9, 16), float32], Tensor[(1, 15, 9), bool], int16, Tensor[(135), int16], Tensor[(156), float32], Tensor[(392), float32], Tensor[(156), float32]) {
  %964 = cast(%var_6264, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  %965 = cast(%var_6275, dtype="int16") /* ty=int16 */;
  %966 = cast(meta[relay.Constant][69] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %967 = reshape(%965, newshape=[]) /* ty=int16 */;
  %968 = reshape(%966, newshape=[1, 15, 9]) /* ty=Tensor[(1, 15, 9), int16] */;
  %969 = @func_4928(%967, %968) /* ty=(Tensor[(1, 15, 9), bool],) */;
  %970 = cast(%var_6279, dtype="float32") /* ty=Tensor[(392), float32] */;
  %971 = cast(%var_6280, dtype="float32") /* ty=Tensor[(156), float32] */;
  %972 = reshape(%970, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
  %973 = reshape(%971, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %974 = @func_4783(%972, %973) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
  %975 = sinh(%964) /* ty=Tensor[(12, 9, 16), float32] */;
  %976 = %969.0;
  %977 = %974.2;
  (%975, %976, %var_6275, meta[relay.Constant][69] /* ty=Tensor[(135), int16] */, %977, %var_6279, %var_6280)
}

def @func_10919() -> (Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) {
  %978 = cast(meta[relay.Constant][70] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %979 = cast(meta[relay.Constant][70] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %980 = reshape(%978, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %981 = reshape(%979, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %982 = @func_7471(%980, %981) /* ty=(Tensor[(5, 15, 8), bool],) */;
  %983 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %984 = @func_10232() /* ty=Tensor[(840), uint8] */;
  %985 = %982.0;
  %986 = %983.0;
  (%984, %985, meta[relay.Constant][70] /* ty=Tensor[(600), uint8] */, %986)
}

def @func_14636(%var_14632: Tensor[(1694), float32]) -> (Tensor[(5, 15, 8), bool], Tensor[(14, 11, 11), float32], Tensor[(1694), float32]) {
  %987 = @func_10919() /* ty=(Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) */;
  %988 = cast(%var_14632, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %989 = reshape(%988, newshape=[14, 11, 11]) /* ty=Tensor[(14, 11, 11), float32] */;
  %990 = @func_10843(%989) /* ty=(Tensor[(14, 11, 11), float32],) */;
  %991 = %987.1;
  %992 = %990.0;
  (%991, %992, %var_14632)
}

def @func_10676() -> Tensor[(840), uint8] {
  @func_9401() /* ty=Tensor[(840), uint8] */
}

def @func_2461(%var_2446: Tensor[(3, 13, 4), float32]) -> Tensor[(3, 13, 4), float32] {
  %993 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(1, 13, 4), float32] */;
  %994 = cast(%var_2446, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  mod(%993, %994) /* ty=Tensor[(3, 13, 4), float32] */
}

def @func_13365(%var_13353: Tensor[(3, 52), float32]) -> (Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(33, 9), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float32], Tensor[(12, 4, 14), bool], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(18), float32], Tensor[(392), float32], Tensor[(3, 52), float32], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16]) {
  %995 = @func_8438() /* ty=Tensor[(840), uint8] */;
  %996 = cast(%995, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %997 = reshape(%996, newshape=[6, 140]) /* ty=Tensor[(6, 140), uint8] */;
  %998 = @func_12513(%997) /* ty=(Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(6, 140), uint8]) */;
  %999 = cast(meta[relay.Constant][72] /* ty=Tensor[(33, 9), bool] */, dtype="bool") /* ty=Tensor[(33, 9), bool] */;
  %1000 = cast(meta[relay.Constant][72] /* ty=Tensor[(33, 9), bool] */, dtype="bool") /* ty=Tensor[(33, 9), bool] */;
  %1001 = cast(meta[relay.Constant][73] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1002 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %1003 = reshape(%999, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %1004 = reshape(%1000, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %1005 = reshape(%1001, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1006 = reshape(%1002, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %1007 = @func_11788(%1003, %1004, %1005, %1006) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */;
  %1008 = %1007.4;
  %1009 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), uint64] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%1008, dtype="bool") /* ty=Tensor[(12, 4, 14), bool] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1013 = @func_12426() /* ty=(Tensor[(840), uint8],) */;
  %1014 = cast(meta[relay.Constant][75] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1015 = reshape(%1014, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1016 = @func_11286(%1015) /* ty=(Tensor[(840), uint8], Tensor[(14, 15, 1), float64], Tensor[(72), uint32], Tensor[(210), float64]) */;
  %1017 = cast(meta[relay.Constant][76] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1018 = cast(meta[relay.Constant][77] /* ty=Tensor[(392), float32] */, dtype="float32") /* ty=Tensor[(392), float32] */;
  %1019 = cast(%var_13353, dtype="float32") /* ty=Tensor[(3, 52), float32] */;
  %1020 = reshape(%1017, newshape=[6, 3]) /* ty=Tensor[(6, 3), float32] */;
  %1021 = reshape(%1018, newshape=[392]) /* ty=Tensor[(392), float32] */;
  %1022 = reshape(%1019, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %1023 = @func_12851(%1020, %1021, %1022) /* ty=(Tensor[(840), uint8], Tensor[(1344), float32], Tensor[(972), int64], Tensor[(10, 30), uint64], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(2, 1, 9), float32], Tensor[(6, 3), float32], Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(3, 13, 4), float32], Tensor[(392), float32], Tensor[(1, 156), float32]) */;
  %1024 = @func_12399() /* ty=(Tensor[(840), uint8],) */;
  %1025 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %1026 = @func_11213() /* ty=Tensor[(416), uint16] */;
  %1027 = %998.0;
  %1028 = less(%1011, %1012) /* ty=Tensor[(12, 4, 14), bool] */;
  %1029 = %1013.0;
  %1030 = %1016.0;
  %1031 = %1023.9;
  %1032 = %1024.0;
  %1033 = %1025.0;
  (%1026, %995, meta[relay.Constant][72] /* ty=Tensor[(33, 9), bool] */, meta[relay.Constant][73] /* ty=Tensor[(144), float64] */, %1027, %1028, %1029, %1030, meta[relay.Constant][75] /* ty=Tensor[(210), float64] */, %1031, meta[relay.Constant][76] /* ty=Tensor[(18), float32] */, meta[relay.Constant][77] /* ty=Tensor[(392), float32] */, %var_13353, %1032, %1033)
}

def @func_10521() -> (Tensor[(13, 12, 10), uint16],) {
  %1034 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %1035 = %1034.1;
  (%1035,)
}

def @func_16927() -> (Tensor[(840), uint8],) {
  %1036 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
  %1037 = %1036.0;
  (%1037,)
}

def @func_10714() -> Tensor[(840), uint8] {
  %1038 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %1038.0
}

def @func_8995(%var_8971: Tensor[(12, 4, 14), uint64], %var_8972: Tensor[(12, 4, 14), uint64]) -> Tensor[(12, 4, 14), bool] {
  %1039 = cast(%var_8972, dtype="bool") /* ty=Tensor[(12, 4, 14), bool] */;
  %1040 = shape_of(%var_8971, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%var_8971, dtype="bool") /* ty=Tensor[(12, 4, 14), bool] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1041, %1042) /* ty=Tensor[(12, 4, 14), bool] */
}

def @func_13956() -> Tensor[(840), uint8] {
  @func_9509() /* ty=Tensor[(840), uint8] */
}

def @func_15151(%var_15136: int8) -> (Tensor[(1, 14, 11), int8], Tensor[(840), uint8]) {
  %1043 = cast(%var_15136, dtype="int8") /* ty=int8 */;
  %1044 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 14, 11), int8] */, dtype="int8") /* ty=Tensor[(1, 14, 11), int8] */;
  %1045 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
  %1046 = multiply(%1043, %1044) /* ty=Tensor[(1, 14, 11), int8] */;
  %1047 = %1045.0;
  (%1046, %1047)
}

def @func_10069() -> Tensor[(6, 6, 4), float32] {
  %1048 = @func_10017() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1049 = %1048.0;
  %1050 = cast(meta[relay.Constant][79] /* ty=Tensor[(6, 6, 4), float64] */, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %1051 = shape_of(%1049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1052 = cast(%1049, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%1052, %1053) /* ty=Tensor[(6, 6, 4), float32] */
}

def @func_438(%var_374: Tensor[(15, 14, 10), float32], %var_404: Tensor[(1760), int16], %var_405: Tensor[(210), float64]) -> (Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) {
  %1054 = cast(meta[relay.Constant][80] /* ty=Tensor[(15, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 10), float32] */;
  %1055 = shape_of(%var_374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(%var_374, dtype="float32") /* ty=Tensor[(15, 14, 10), float32] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1058 = cast(%var_404, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1059 = cast(%var_404, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1060 = cast(%var_405, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1061 = reshape(%1058, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1062 = reshape(%1059, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1063 = reshape(%1060, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1064 = @func_325(%1061, %1062, %1063) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %1065 = cast(%var_405, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1066 = reshape(%1065, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %1067 = mod(%1056, %1057) /* ty=Tensor[(15, 14, 10), float32] */;
  %1068 = %1064.0;
  %1069 = @func_136(%1066) /* ty=Tensor[(14, 15, 1), float64] */;
  (%1067, %1068, %var_404, %var_405, %1069)
}

def @func_9454(%var_9432: Tensor[(1344), float32], %var_9435: Tensor[(300), uint64]) -> (Tensor[(416), uint16], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16], uint16) {
  %1070 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %1071 = cast(%var_9432, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1072 = cast(%var_9432, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1073 = cast(meta[relay.Constant][81] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1074 = cast(meta[relay.Constant][82] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %1075 = cast(%var_9435, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %1076 = cast(meta[relay.Constant][83] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1077 = cast(meta[relay.Constant][83] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1078 = reshape(%1071, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %1079 = reshape(%1072, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %1080 = reshape(%1073, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1081 = reshape(%1074, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %1082 = reshape(%1075, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %1083 = reshape(%1076, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %1084 = reshape(%1077, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %1085 = @func_2710(%1078, %1079, %1080, %1081, %1082, %1083, %1084) /* ty=(Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) */;
  %1086 = @func_9209() /* ty=(uint16,) */;
  %1087 = %1070.0;
  %1088 = %1085.8;
  %1089 = %1086.0;
  (%1087, %1088, %var_9432, meta[relay.Constant][81] /* ty=Tensor[(210), float64] */, meta[relay.Constant][82] /* ty=Tensor[(972), int64] */, %var_9435, meta[relay.Constant][83] /* ty=Tensor[(1760), int16] */, %1089)
}

def @func_9099() -> (Tensor[(840), uint8],) {
  %1090 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %1091 = %1090.0;
  (%1091,)
}

def @func_8151() -> (Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) {
  %1092 = cast(meta[relay.Constant][84] /* ty=Tensor[(6, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %1093 = cast(meta[relay.Constant][85] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1094 = cast(meta[relay.Constant][86] /* ty=Tensor[(128), uint16] */, dtype="uint16") /* ty=Tensor[(128), uint16] */;
  %1095 = cast(meta[relay.Constant][87] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1096 = reshape(%1093, newshape=[]) /* ty=uint16 */;
  %1097 = reshape(%1094, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), uint16] */;
  %1098 = reshape(%1095, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
  %1099 = @func_7295(%1096, %1097, %1098) /* ty=(Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) */;
  %1100 = rsqrt(%1092) /* ty=Tensor[(6, 14, 16), float32] */;
  %1101 = %1099.1;
  (%1100, %1101, meta[relay.Constant][85] /* ty=uint16 */, meta[relay.Constant][86] /* ty=Tensor[(128), uint16] */, meta[relay.Constant][87] /* ty=Tensor[(1560), uint16] */)
}

def @func_11788(%var_11714: Tensor[(3, 9, 11), bool], %var_11715: Tensor[(3, 9, 11), bool], %var_11740: Tensor[(144), float64], %var_11755: Tensor[(672), uint64]) -> (Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) {
  %1102 = cast(%var_11715, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
  %1103 = shape_of(%var_11714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%var_11714, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = cast(%var_11740, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1107 = reshape(%1106, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
  %1108 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1109 = cast(%var_11755, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %1110 = cast(%var_11755, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %1111 = reshape(%1109, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
  %1112 = reshape(%1110, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
  %1113 = logical_and(%1104, %1105) /* ty=Tensor[(3, 9, 11), bool] */;
  %1114 = @func_11536(%1107) /* ty=Tensor[(6, 6, 4), bool] */;
  %1115 = %1108.0;
  %1116 = @func_8995(%1111, %1112) /* ty=Tensor[(12, 4, 14), bool] */;
  (%1113, %1114, %var_11740, %1115, %1116, %var_11755)
}

def @func_8794() -> (Tensor[(840), uint8],) {
  %1117 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %1118 = %1117.1;
  (%1118,)
}

def @func_14800(%var_14770: Tensor[(1760), float32]) -> (Tensor[(1760), int32], Tensor[(1760), int64], Tensor[(840), uint8]) {
  %1119 = @func_14371() /* ty=(uint16, Tensor[(1760), float32]) */;
  %1120 = %1119.1;
  %1121 = cast(%1120, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %1122 = atan(%1121) /* ty=Tensor[(1760), float32] */;
  %1123 = cast(%1120, dtype="int32") /* ty=Tensor[(1760), int32] */;
  %1124 = shape_of(%1122, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1125 = cast(%1122, dtype="int32") /* ty=Tensor[(1760), int32] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1127 = cast(%var_14770, dtype="int64") /* ty=Tensor[(1760), int64] */;
  %1128 = shape_of(%1120, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1129 = cast(%1120, dtype="int64") /* ty=Tensor[(1760), int64] */;
  %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1131 = subtract(%1125, %1126) /* ty=Tensor[(1760), int32] */;
  %1132 = logical_xor(%1129, %1130) /* ty=Tensor[(1760), int64] */;
  %1133 = @func_14546() /* ty=Tensor[(840), uint8] */;
  (%1131, %1132, %1133)
}

def @func_16108() -> Tensor[(1760), float32] {
  %1134 = @func_15770() /* ty=(Tensor[(1760), float32], Tensor[(840), uint8]) */;
  %1134.0
}

def @func_4675(%var_4635: Tensor[(16, 2, 13), uint16]) -> (Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) {
  %1135 = cast(meta[relay.Constant][88] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1136 = reshape(%1135, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
  %1137 = cast(meta[relay.Constant][89] /* ty=Tensor[(16, 2, 13), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2, 13), uint16] */;
  %1138 = shape_of(%var_4635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1139 = cast(%var_4635, dtype="uint16") /* ty=Tensor[(16, 2, 13), uint16] */;
  %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1141 = logical_xor(%1139, %1140) /* ty=Tensor[(16, 2, 13), uint16] */;
  %1142 = cast(%1141, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
  %1143 = cast(meta[relay.Constant][90] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %1144 = reshape(%1143, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
  %1145 = @func_2023(%1144) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
  %1146 = @func_2461(%1136) /* ty=Tensor[(3, 13, 4), float32] */;
  %1147 = sinh(%1142) /* ty=Tensor[(16, 2, 13), float64] */;
  %1148 = %1145.3;
  (%1146, meta[relay.Constant][88] /* ty=Tensor[(156), float32] */, %1147, %1148, meta[relay.Constant][90] /* ty=Tensor[(840), uint8] */)
}

def @func_12399() -> (Tensor[(840), uint8],) {
  %1149 = @func_10414() /* ty=(Tensor[(840), uint8],) */;
  %1150 = %1149.0;
  (%1150,)
}

def @func_16840() -> Tensor[(840), uint8] {
  %1151 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %1151.0
}

def @func_7295(%var_7263: uint16, %var_7264: Tensor[(1, 16, 8), uint16], %var_7281: Tensor[(1560), uint16]) -> (Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) {
  %1152 = cast(%var_7263, dtype="uint16") /* ty=uint16 */;
  %1153 = cast(%var_7264, dtype="uint16") /* ty=Tensor[(1, 16, 8), uint16] */;
  %1154 = cast(%var_7281, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1155 = cast(%var_7281, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1156 = reshape(%1154, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1157 = reshape(%1155, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1158 = @func_5346(%1156, %1157) /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %1159 = bitwise_or(%1152, %1153) /* ty=Tensor[(1, 16, 8), uint16] */;
  %1160 = %1158.0;
  (%1159, %1160, %var_7281)
}

def @func_16417() -> (uint16,) {
  %1161 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
  %1162 = %1161.2;
  (%1162,)
}

def @func_8486() -> (Tensor[(128), uint16],) {
  %1163 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
  %1164 = %1163.3;
  (%1164,)
}

def @func_14018(%var_13993: Tensor[(210, 1), float64]) -> (Tensor[(840), uint8], Tensor[(210), float64], Tensor[(210, 1), float64]) {
  %1165 = @func_12866() /* ty=(Tensor[(840), uint8],) */;
  %1166 = cast(%var_13993, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1167 = reshape(%1166, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1168 = @func_9022(%1167) /* ty=(Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) */;
  %1169 = %1165.0;
  %1170 = %1168.3;
  (%1169, %1170, %var_13993)
}

def @func_8336() -> (Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) {
  %1171 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
  %1172 = cast(meta[relay.Constant][91] /* ty=Tensor[(416), uint16] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %1173 = reshape(%1172, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
  %1174 = @func_4675(%1173) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %1175 = %1171.1;
  %1176 = %1174.4;
  (%1175, %1176, meta[relay.Constant][91] /* ty=Tensor[(416), uint16] */)
}

def @func_9509() -> Tensor[(840), uint8] {
  @func_8464() /* ty=Tensor[(840), uint8] */
}

def @func_14437() -> (Tensor[(416), uint16], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150), int64], Tensor[(210), float64]) {
  %1177 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %1178 = cast(meta[relay.Constant][92] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %1179 = cast(meta[relay.Constant][93] /* ty=Tensor[(150), int64] */, dtype="int64") /* ty=Tensor[(150), int64] */;
  %1180 = cast(meta[relay.Constant][94] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1181 = reshape(%1178, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int64] */;
  %1182 = reshape(%1179, newshape=[3, 5, 10]) /* ty=Tensor[(3, 5, 10), int64] */;
  %1183 = reshape(%1180, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1184 = @func_9714(%1181, %1182, %1183) /* ty=(Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) */;
  %1185 = %1177.2;
  %1186 = %1184.1;
  (%1185, %1186, meta[relay.Constant][92] /* ty=Tensor[(30), int64] */, meta[relay.Constant][93] /* ty=Tensor[(150), int64] */, meta[relay.Constant][94] /* ty=Tensor[(210), float64] */)
}

def @func_8721(%var_8697: Tensor[(10), float64], %var_8717: Tensor[(210, 1), float64]) -> (Tensor[(416), uint16], Tensor[(2, 1, 5), float32], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(1760), int16], Tensor[(210, 1), float64]) {
  %1187 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %1188 = cast(%var_8697, dtype="float64") /* ty=Tensor[(10), float64] */;
  %1189 = reshape(%1188, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %1190 = @func_2097(%1189) /* ty=(Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) */;
  %1191 = cast(meta[relay.Constant][95] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1192 = cast(meta[relay.Constant][95] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1193 = cast(%var_8717, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1194 = reshape(%1191, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1195 = reshape(%1192, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1196 = reshape(%1193, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1197 = @func_325(%1194, %1195, %1196) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %1198 = %1187.0;
  %1199 = %1190.1;
  %1200 = %1197.2;
  (%1198, %1199, %var_8697, %1200, meta[relay.Constant][95] /* ty=Tensor[(1760), int16] */, %var_8717)
}

def @func_13602() -> (Tensor[(360), float64],) {
  %1201 = @func_13202() /* ty=Tensor[(360), float64] */;
  (%1201,)
}

def @func_9401() -> Tensor[(840), uint8] {
  @func_8464() /* ty=Tensor[(840), uint8] */
}

def @func_13545(%var_13535: Tensor[(30), int64], %var_13536: Tensor[(150, 1), int64], %var_13537: Tensor[(210), float64]) -> (Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150, 1), int64], Tensor[(210), float64], Tensor[(210), float64]) {
  %1202 = cast(%var_13535, dtype="int64") /* ty=Tensor[(30), int64] */;
  %1203 = cast(%var_13536, dtype="int64") /* ty=Tensor[(150, 1), int64] */;
  %1204 = cast(%var_13537, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1205 = reshape(%1202, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int64] */;
  %1206 = reshape(%1203, newshape=[3, 5, 10]) /* ty=Tensor[(3, 5, 10), int64] */;
  %1207 = reshape(%1204, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1208 = @func_9714(%1205, %1206, %1207) /* ty=(Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) */;
  %1209 = %1208.2;
  %1210 = cast(%1209, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1211 = reshape(%1210, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1212 = @func_9022(%1211) /* ty=(Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) */;
  %1213 = @func_13108() /* ty=Tensor[(6, 6, 4), float64] */;
  %1214 = %1212.3;
  (%1213, %1209, %var_13535, %var_13536, %var_13537, %1214)
}

def @func_11046() -> (Tensor[(6, 6, 4), float32],) {
  %1215 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  (%1215,)
}

def @func_11123(%var_11111: Tensor[(672), uint64]) -> (Tensor[(6, 6, 4), bool], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) {
  %1216 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1217 = %1216.0;
  %1218 = cast(%1217, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %1219 = tan(%1218) /* ty=Tensor[(6, 6, 4), float64] */;
  %1220 = cast(%1219, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %1221 = shape_of(%1217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1222 = cast(%1217, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1224 = cast(%var_11111, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %1225 = cast(%var_11111, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %1226 = reshape(%1224, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
  %1227 = reshape(%1225, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
  %1228 = greater(%1222, %1223) /* ty=Tensor[(6, 6, 4), bool] */;
  %1229 = @func_8995(%1226, %1227) /* ty=Tensor[(12, 4, 14), bool] */;
  (%1228, %1229, %var_11111)
}

def @func_4783(%var_4770: Tensor[(7, 8, 7), float32], %var_4780: Tensor[(156), float32]) -> (Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) {
  %1230 = cast(meta[relay.Constant][96] /* ty=Tensor[(7, 8, 7), float32] */, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  %1231 = shape_of(%var_4770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(%var_4770, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1234 = cast(%var_4780, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1235 = reshape(%1234, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
  %1236 = not_equal(%1232, %1233) /* ty=Tensor[(7, 8, 7), bool] */;
  %1237 = @func_2461(%1235) /* ty=Tensor[(3, 13, 4), float32] */;
  (%1236, %1237, %var_4780)
}

def @func_11173() -> Tensor[(13, 12, 10), uint16] {
  %1238 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %1238.0
}

def @func_16261() -> (Tensor[(840), uint8], Tensor[(210), float64]) {
  %1239 = @func_14437() /* ty=(Tensor[(416), uint16], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150), int64], Tensor[(210), float64]) */;
  %1240 = @func_14724() /* ty=Tensor[(840), uint8] */;
  %1241 = %1239.4;
  (%1240, %1241)
}

def @func_8510() -> (Tensor[(416), uint16],) {
  %1242 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %1243 = %1242.2;
  (%1243,)
}

def @func_11910() -> (Tensor[(6, 6, 4), float64],) {
  %1244 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1245 = %1244.0;
  (%1245,)
}

def @func_8624(%var_8588: Tensor[(360), float64], %var_8593: Tensor[(1760), int16]) -> (Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) {
  %1246 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %1247 = cast(%var_8588, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1248 = reshape(%1247, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float64] */;
  %1249 = cast(%var_8593, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1250 = cast(%var_8593, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1251 = cast(meta[relay.Constant][97] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1252 = reshape(%1249, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1253 = reshape(%1250, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1254 = reshape(%1251, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1255 = @func_325(%1252, %1253, %1254) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %1256 = cast(meta[relay.Constant][98] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1257 = reshape(%1256, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), float32] */;
  %1258 = @func_6503(%1257) /* ty=(Tensor[(15, 12, 13), float32], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(5, 60), uint64], Tensor[(1, 1760), int16]) */;
  %1259 = cast(meta[relay.Constant][99] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %1260 = cast(meta[relay.Constant][99] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %1261 = reshape(%1259, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %1262 = reshape(%1260, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %1263 = @func_7471(%1261, %1262) /* ty=(Tensor[(5, 15, 8), bool],) */;
  %1264 = %1246.0;
  %1265 = @func_4564(%1248) /* ty=Tensor[(5, 9, 8), float64] */;
  %1266 = %1255.0;
  %1267 = %1258.3;
  %1268 = %1263.0;
  (%1264, %1265, %var_8588, %1266, %var_8593, meta[relay.Constant][97] /* ty=Tensor[(210), float64] */, %1267, meta[relay.Constant][98] /* ty=Tensor[(2340), float32] */, %1268, meta[relay.Constant][99] /* ty=Tensor[(600), uint8] */)
}

def @func_16631(%var_16610: Tensor[(144), float64]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(144), float64]) {
  %1269 = cast(%var_16610, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1270 = reshape(%1269, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
  %1271 = @func_16020() /* ty=Tensor[(840), uint8] */;
  %1272 = @func_11536(%1270) /* ty=Tensor[(6, 6, 4), bool] */;
  (%1271, %1272, %var_16610)
}

def @func_12178() -> (Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) {
  %1273 = @func_10017() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1274 = %1273.0;
  %1275 = cast(%1274, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %1276 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %1277 = log(%1275) /* ty=Tensor[(6, 6, 4), float32] */;
  %1278 = %1276.0;
  (%1277, %1278)
}

def @func_12351() -> (Tensor[(840), uint8],) {
  %1279 = @func_9228() /* ty=Tensor[(840), uint8] */;
  (%1279,)
}

def @func_17004(%var_17000: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(210, 1), float64], Tensor[(210), float64]) {
  %1280 = cast(%var_17000, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1281 = reshape(%1280, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %1282 = @func_14018(%1281) /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(210, 1), float64]) */;
  %1283 = @func_16470() /* ty=Tensor[(840), uint8] */;
  %1284 = %1282.2;
  (%1283, %1284, %var_17000)
}

def @func_12513(%var_12511: Tensor[(6, 140), uint8]) -> (Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(6, 140), uint8]) {
  %1285 = cast(%var_12511, dtype="uint8") /* ty=Tensor[(6, 140), uint8] */;
  %1286 = reshape(%1285, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
  %1287 = @func_2023(%1286) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
  %1288 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  %1289 = %1287.1;
  (%1288, %1289, %var_12511)
}

def @func_136(%var_133: Tensor[(14, 15, 1), float64]) -> Tensor[(14, 15, 1), float64] {
  %1290 = cast(%var_133, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  atan(%1290) /* ty=Tensor[(14, 15, 1), float64] */
}

def @func_15324() -> (Tensor[(840), uint8],) {
  %1291 = @func_10714() /* ty=Tensor[(840), uint8] */;
  (%1291,)
}

def @func_12851(%var_12837: Tensor[(6, 3), float32], %var_12848: Tensor[(392), float32], %var_12849: Tensor[(1, 156), float32]) -> (Tensor[(840), uint8], Tensor[(1344), float32], Tensor[(972), int64], Tensor[(10, 30), uint64], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(2, 1, 9), float32], Tensor[(6, 3), float32], Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(3, 13, 4), float32], Tensor[(392), float32], Tensor[(1, 156), float32]) {
  %1292 = cast(meta[relay.Constant][100] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %1293 = cast(meta[relay.Constant][101] /* ty=Tensor[(10, 30), uint64] */, dtype="uint64") /* ty=Tensor[(10, 30), uint64] */;
  %1294 = cast(meta[relay.Constant][102] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1295 = reshape(%1292, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
  %1296 = reshape(%1293, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %1297 = reshape(%1294, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %1298 = @func_9148(%1295, %1296, %1297) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %1299 = cast(meta[relay.Constant][101] /* ty=Tensor[(10, 30), uint64] */, dtype="uint64") /* ty=Tensor[(10, 30), uint64] */;
  %1300 = cast(meta[relay.Constant][102] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1301 = reshape(%1299, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %1302 = reshape(%1300, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %1303 = @func_9369(%1301, %1302) /* ty=(Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) */;
  %1304 = cast(%var_12837, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %1305 = reshape(%1304, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float32] */;
  %1306 = @func_7990(%1305) /* ty=(Tensor[(2, 1, 9), float32],) */;
  %1307 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %1308 = cast(%var_12848, dtype="float32") /* ty=Tensor[(392), float32] */;
  %1309 = cast(%var_12849, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %1310 = reshape(%1308, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
  %1311 = reshape(%1309, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1312 = @func_4783(%1310, %1311) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
  %1313 = @func_9401() /* ty=Tensor[(840), uint8] */;
  %1314 = %1298.3;
  %1315 = %1303.2;
  %1316 = %1306.0;
  %1317 = %1307.2;
  %1318 = @func_9401() /* ty=Tensor[(840), uint8] */;
  %1319 = %1312.1;
  (%1313, %1314, meta[relay.Constant][100] /* ty=Tensor[(972), int64] */, meta[relay.Constant][101] /* ty=Tensor[(10, 30), uint64] */, meta[relay.Constant][102] /* ty=Tensor[(1760), int16] */, %1315, %1316, %var_12837, %1317, %1318, %1319, %var_12848, %var_12849)
}

def @func_12745() -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) {
  %1320 = @func_12479() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */;
  %1321 = @func_12178() /* ty=(Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */;
  %1322 = %1320.0;
  %1323 = %1321.0;
  (%1322, %1323)
}

def @func_5453(%var_5412: Tensor[(4, 9, 2), uint32], %var_5440: Tensor[(210), float64]) -> (Tensor[(4, 9, 2), uint32], Tensor[(16, 11, 10), int16], Tensor[(1, 1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64], Tensor[(2100), float32]) {
  %1324 = cast(meta[relay.Constant][103] /* ty=Tensor[(1, 9, 1), uint32] */, dtype="uint32") /* ty=Tensor[(1, 9, 1), uint32] */;
  %1325 = cast(%var_5412, dtype="uint32") /* ty=Tensor[(4, 9, 2), uint32] */;
  %1326 = cast(meta[relay.Constant][104] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %1327 = cast(meta[relay.Constant][104] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %1328 = cast(%var_5440, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1329 = reshape(%1326, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1330 = reshape(%1327, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1331 = reshape(%1328, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1332 = @func_325(%1329, %1330, %1331) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %1333 = cast(meta[relay.Constant][105] /* ty=Tensor[(2100), float32] */, dtype="float32") /* ty=Tensor[(2100), float32] */;
  %1334 = cast(meta[relay.Constant][104] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %1335 = cast(%var_5440, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1336 = reshape(%1333, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float32] */;
  %1337 = reshape(%1334, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %1338 = reshape(%1335, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1339 = @func_438(%1336, %1337, %1338) /* ty=(Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) */;
  %1340 = bitwise_and(%1324, %1325) /* ty=Tensor[(4, 9, 2), uint32] */;
  %1341 = %1332.0;
  %1342 = %1339.4;
  (%1340, %1341, meta[relay.Constant][104] /* ty=Tensor[(1, 1760), int16] */, %var_5440, %1342, meta[relay.Constant][105] /* ty=Tensor[(2100), float32] */)
}

def @func_12761(%var_12756: Tensor[(108), float32]) -> (Tensor[(840), uint8], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) {
  %1343 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %1344 = cast(%var_12756, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1345 = reshape(%1344, newshape=[4, 3, 9]) /* ty=Tensor[(4, 3, 9), float32] */;
  %1346 = @func_5540(%1345) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) */;
  %1347 = %1343.1;
  %1348 = %1346.0;
  (%1347, %1348, %var_12756)
}

def @func_15515(%var_15482: Tensor[(972), int64], %var_15497: Tensor[(972), int64]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(1, 300), uint64], Tensor[(972), int16]) {
  %1349 = cast(%var_15482, dtype="int64") /* ty=Tensor[(972), int64] */;
  %1350 = cast(meta[relay.Constant][106] /* ty=Tensor[(1, 300), uint64] */, dtype="uint64") /* ty=Tensor[(1, 300), uint64] */;
  %1351 = reshape(%1349, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %1352 = reshape(%1350, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %1353 = @func_12372(%1351, %1352) /* ty=(Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) */;
  %1354 = cast(%var_15497, dtype="int16") /* ty=Tensor[(972), int16] */;
  %1355 = shape_of(%var_15482, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1356 = cast(%var_15482, dtype="int16") /* ty=Tensor[(972), int16] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1358 = @func_12077() /* ty=Tensor[(840), uint8] */;
  %1359 = %1353.0;
  %1360 = subtract(%1356, %1357) /* ty=Tensor[(972), int16] */;
  (%1358, %1359, meta[relay.Constant][106] /* ty=Tensor[(1, 300), uint64] */, %1360)
}

def @func_14546() -> Tensor[(840), uint8] {
  @func_9228() /* ty=Tensor[(840), uint8] */
}

def @func_16769(%var_16741: Tensor[(7, 6, 6), float32]) -> (Tensor[(7, 6, 6), float32],) {
  %1361 = cast(%var_16741, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  %1362 = sinh(%1361) /* ty=Tensor[(7, 6, 6), float32] */;
  (%1362,)
}

def @func_9491() -> (Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) {
  %1363 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1364 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %1365 = %1363.0;
  %1366 = %1364.1;
  (%1365, %1366)
}

def @func_9175() -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) {
  %1367 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %1368 = cast(meta[relay.Constant][107] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1369 = cast(meta[relay.Constant][107] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1370 = reshape(%1368, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1371 = reshape(%1369, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1372 = @func_5346(%1370, %1371) /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %1373 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %1374 = %1367.0;
  %1375 = %1372.0;
  %1376 = %1373.0;
  (%1374, %1375, meta[relay.Constant][107] /* ty=Tensor[(1560), uint16] */, %1376)
}

def @func_15382(%var_15377: Tensor[(15, 9), int16]) -> (Tensor[(840), uint8], Tensor[(1, 15, 9), bool], int16, Tensor[(15, 9), int16]) {
  %1377 = cast(meta[relay.Constant][108] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1378 = cast(%var_15377, dtype="int16") /* ty=Tensor[(15, 9), int16] */;
  %1379 = reshape(%1377, newshape=[]) /* ty=int16 */;
  %1380 = reshape(%1378, newshape=[1, 15, 9]) /* ty=Tensor[(1, 15, 9), int16] */;
  %1381 = @func_4928(%1379, %1380) /* ty=(Tensor[(1, 15, 9), bool],) */;
  %1382 = @func_8438() /* ty=Tensor[(840), uint8] */;
  %1383 = %1381.0;
  (%1382, %1383, meta[relay.Constant][108] /* ty=int16 */, %var_15377)
}

def @func_6707(%var_6699: Tensor[(9, 5, 4), int64], %var_6700: Tensor[(9, 5, 4), int64]) -> (Tensor[(9, 5, 4), bool], Tensor[(9, 5, 4), float64]) {
  %1384 = cast(%var_6700, dtype="bool") /* ty=Tensor[(9, 5, 4), bool] */;
  %1385 = shape_of(%var_6699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1386 = cast(%var_6699, dtype="bool") /* ty=Tensor[(9, 5, 4), bool] */;
  %1387 = dyn.reshape(%1384, %1385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1388 = cast(%var_6699, dtype="float64") /* ty=Tensor[(9, 5, 4), float64] */;
  %1389 = equal(%1386, %1387) /* ty=Tensor[(9, 5, 4), bool] */;
  %1390 = asin(%1388) /* ty=Tensor[(9, 5, 4), float64] */;
  (%1389, %1390)
}

def @func_17029() -> (Tensor[(840), uint8],) {
  %1391 = @func_16102() /* ty=Tensor[(840), uint8] */;
  (%1391,)
}

def @func_15776() -> Tensor[(840), uint8] {
  %1392 = @func_12426() /* ty=(Tensor[(840), uint8],) */;
  %1392.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_14802(%var_14801: Tensor[(1760), float32]) -> (Tensor[(1760), int32], Tensor[(1760), int64], Tensor[(840), uint8]) {
  %15 = fn (%var_14770: Tensor[(1760), float32]) -> (Tensor[(1760), int32], Tensor[(1760), int64], Tensor[(840), uint8]) {
    %0 = @func_14371() /* ty=(uint16, Tensor[(1760), float32]) */;
    %1 = %0.1;
    %2 = cast(%1, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %3 = atan(%2) /* ty=Tensor[(1760), float32] */;
    %4 = cast(%1, dtype="int32") /* ty=Tensor[(1760), int32] */;
    %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(1), int32] */;
    %6 = cast(%3, dtype="int32") /* ty=Tensor[(1760), int32] */;
    %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?), int32] */;
    %8 = cast(%var_14770, dtype="int64") /* ty=Tensor[(1760), int64] */;
    %9 = shape_of(%1, dtype="int32") /* ty=Tensor[(1), int32] */;
    %10 = cast(%1, dtype="int64") /* ty=Tensor[(1760), int64] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?), int64] */;
    %12 = subtract(%6, %7) /* ty=Tensor[(1760), int32] */;
    %13 = logical_xor(%10, %11) /* ty=Tensor[(1760), int64] */;
    %14 = @func_14546() /* ty=Tensor[(840), uint8] */;
    (%12, %13, %14)
  };
  %15(%var_14801) /* ty=(Tensor[(1760), int32], Tensor[(1760), int64], Tensor[(840), uint8]) */
}

def @func_15778() -> Tensor[(840), uint8] {
  @func_15776() /* ty=Tensor[(840), uint8] */
}

def @func_17004(%var_17000: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(210, 1), float64], Tensor[(210), float64]) {
  %16 = cast(%var_17000, dtype="float64") /* ty=Tensor[(210), float64] */;
  %17 = reshape(%16, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %18 = @func_14018(%17) /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(210, 1), float64]) */;
  %19 = @func_16470() /* ty=Tensor[(840), uint8] */;
  %20 = %18.2;
  (%19, %20, %var_17000)
}

def @func_13638() -> Tensor[(6, 6, 4), float32] {
  %21 = @func_12986() /* ty=(Tensor[(6, 6, 4), float32],) */;
  %21.0
}

def @func_4564(%var_4561: Tensor[(5, 9, 8), float64]) -> Tensor[(5, 9, 8), float64] {
  %22 = cast(%var_4561, dtype="float64") /* ty=Tensor[(5, 9, 8), float64] */;
  rsqrt(%22) /* ty=Tensor[(5, 9, 8), float64] */
}

def @func_12587(%var_12585: Tensor[(972), int64], %var_12586: Tensor[(300, 1), uint64]) -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(840), uint8], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(300, 1), uint64], Tensor[(6, 6, 4), float32]) {
  %49 = fn (%var_12576: Tensor[(972), int64], %var_12577: Tensor[(300, 1), uint64]) -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(840), uint8], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(300, 1), uint64], Tensor[(6, 6, 4), float32]) {
    %23 = @func_10458() /* ty=(uint16, Tensor[(840), uint8]) */;
    %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %26 = reshape(%24, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
    %27 = reshape(%25, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
    %28 = @func_5346(%26, %27) /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %29 = @func_10414() /* ty=(Tensor[(840), uint8],) */;
    %30 = cast(%var_12576, dtype="int64") /* ty=Tensor[(972), int64] */;
    %31 = cast(%var_12577, dtype="uint64") /* ty=Tensor[(300, 1), uint64] */;
    %32 = reshape(%30, newshape=[972]) /* ty=Tensor[(972), int64] */;
    %33 = reshape(%31, newshape=[300]) /* ty=Tensor[(300), uint64] */;
    %34 = @func_12372(%32, %33) /* ty=(Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) */;
    %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %36 = reshape(%35, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
    %37 = @func_11536(%36) /* ty=Tensor[(6, 6, 4), bool] */;
    %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(%37, dtype="uint8") /* ty=Tensor[(6, 6, 4), uint8] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %42 = right_shift(%40, %41) /* ty=Tensor[(6, 6, 4), uint8] */;
    %43 = cast(%42, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
    %44 = %23.1;
    %45 = %28.0;
    %46 = %29.0;
    %47 = %34.4;
    %48 = log2(%43) /* ty=Tensor[(6, 6, 4), float32] */;
    (%44, %45, meta[relay.Constant][0] /* ty=Tensor[(1560), uint16] */, %46, %47, %var_12576, %var_12577, %48)
  };
  %49(%var_12585, %var_12586) /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(840), uint8], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(300, 1), uint64], Tensor[(6, 6, 4), float32]) */
}

def @func_8271(%var_8262: Tensor[(1, 1760), int16], %var_8263: Tensor[(210), float64]) -> (Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) {
  %50 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(2100), float32] */, dtype="float32") /* ty=Tensor[(2100), float32] */;
  %52 = cast(%var_8262, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %53 = cast(%var_8263, dtype="float64") /* ty=Tensor[(210), float64] */;
  %54 = reshape(%51, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float32] */;
  %55 = reshape(%52, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %56 = reshape(%53, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %57 = @func_438(%54, %55, %56) /* ty=(Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) */;
  %58 = %50.0;
  %59 = %57.1;
  (%58, %59, meta[relay.Constant][2] /* ty=Tensor[(2100), float32] */, %var_8262, %var_8263)
}

def @func_14724() -> Tensor[(840), uint8] {
  %60 = @func_9803() /* ty=(Tensor[(840), uint8],) */;
  %60.0
}

def @func_16769(%var_16741: Tensor[(7, 6, 6), float32]) -> (Tensor[(7, 6, 6), float32],) {
  %61 = cast(%var_16741, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  %62 = sinh(%61) /* ty=Tensor[(7, 6, 6), float32] */;
  (%62,)
}

def @func_13632() -> Tensor[(13, 12, 10), uint16] {
  %64 = fn () -> Tensor[(13, 12, 10), uint16] {
    %63 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
    %63.0
  };
  %64() /* ty=Tensor[(13, 12, 10), uint16] */
}

def @func_5350(%var_5348: Tensor[(13, 12, 10), uint16], %var_5349: Tensor[(13, 12, 10), uint16]) -> (Tensor[(13, 12, 10), uint16],) {
  @func_5346(%var_5348, %var_5349) /* ty=(Tensor[(13, 12, 10), uint16],) */
}

def @func_11793(%var_11789: Tensor[(3, 9, 11), bool], %var_11790: Tensor[(3, 9, 11), bool], %var_11791: Tensor[(144), float64], %var_11792: Tensor[(672), uint64]) -> (Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) {
  %80 = fn (%var_11714: Tensor[(3, 9, 11), bool], %var_11715: Tensor[(3, 9, 11), bool], %var_11740: Tensor[(144), float64], %var_11755: Tensor[(672), uint64]) -> (Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) {
    %65 = cast(%var_11715, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
    %66 = shape_of(%var_11714, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%var_11714, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %69 = cast(%var_11740, dtype="float64") /* ty=Tensor[(144), float64] */;
    %70 = reshape(%69, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
    %71 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %72 = cast(%var_11755, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %73 = cast(%var_11755, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %74 = reshape(%72, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
    %75 = reshape(%73, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
    %76 = logical_and(%67, %68) /* ty=Tensor[(3, 9, 11), bool] */;
    %77 = @func_11536(%70) /* ty=Tensor[(6, 6, 4), bool] */;
    %78 = %71.0;
    %79 = @func_8995(%74, %75) /* ty=Tensor[(12, 4, 14), bool] */;
    (%76, %77, %var_11740, %78, %79, %var_11755)
  };
  %80(%var_11789, %var_11790, %var_11791, %var_11792) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */
}

def @func_11445() -> (Tensor[(840), uint8],) {
  %83 = fn () -> (Tensor[(840), uint8],) {
    %81 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
    %82 = %81.0;
    (%82,)
  };
  %83() /* ty=(Tensor[(840), uint8],) */
}

def @func_13108() -> Tensor[(6, 6, 4), float64] {
  %84 = @func_11910() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %84.0
}

def @func_13420(%var_13419: Tensor[(1560), uint16]) -> (Tensor[(416), uint16], Tensor[(13, 12, 10), float64], Tensor[(1560), uint16], Tensor[(840), uint8]) {
  %92 = fn (%var_13411: Tensor[(1560), uint16]) -> (Tensor[(416), uint16], Tensor[(13, 12, 10), float64], Tensor[(1560), uint16], Tensor[(840), uint8]) {
    %85 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
    %86 = cast(%var_13411, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %87 = reshape(%86, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
    %88 = @func_11423(%87) /* ty=(Tensor[(840), uint8], Tensor[(1560), uint16], Tensor[(13, 12, 10), float64]) */;
    %89 = %85.2;
    %90 = %88.2;
    %91 = @func_10232() /* ty=Tensor[(840), uint8] */;
    (%89, %90, %var_13411, %91)
  };
  %92(%var_13419) /* ty=(Tensor[(416), uint16], Tensor[(13, 12, 10), float64], Tensor[(1560), uint16], Tensor[(840), uint8]) */
}

def @func_15388() -> Tensor[(6, 6, 4), float64] {
  @func_13108() /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_13163(%var_13162: Tensor[(189), float64]) -> (Tensor[(840), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(880, 2), int16]) {
  %101 = fn (%var_13152: Tensor[(189), float64]) -> (Tensor[(840), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(880, 2), int16]) {
    %93 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
    %94 = cast(%var_13152, dtype="float64") /* ty=Tensor[(189), float64] */;
    %95 = cast(meta[relay.Constant][3] /* ty=Tensor[(880, 2), int16] */, dtype="int16") /* ty=Tensor[(880, 2), int16] */;
    %96 = reshape(%94, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float64] */;
    %97 = reshape(%95, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
    %98 = @func_482(%96, %97) /* ty=(Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) */;
    %99 = %93.0;
    %100 = %98.5;
    (%99, %100, %var_13152, meta[relay.Constant][3] /* ty=Tensor[(880, 2), int16] */)
  };
  %101(%var_13162) /* ty=(Tensor[(840), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(880, 2), int16]) */
}

def @func_16445(%var_16441: Tensor[(297), bool]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(297), bool], Tensor[(144), float64], Tensor[(672), uint64]) {
  %102 = @func_10919() /* ty=(Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) */;
  %103 = cast(%var_16441, dtype="bool") /* ty=Tensor[(297), bool] */;
  %104 = cast(%var_16441, dtype="bool") /* ty=Tensor[(297), bool] */;
  %105 = cast(meta[relay.Constant][4] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %106 = cast(meta[relay.Constant][5] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %107 = reshape(%103, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %108 = reshape(%104, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %109 = reshape(%105, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %110 = reshape(%106, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %111 = @func_11788(%107, %108, %109, %110) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */;
  %112 = %102.0;
  %113 = %111.3;
  (%112, %113, %var_16441, meta[relay.Constant][4] /* ty=Tensor[(144), float64] */, meta[relay.Constant][5] /* ty=Tensor[(672), uint64] */)
}

def @func_7992(%var_7991: Tensor[(2, 1, 9), float32]) -> (Tensor[(2, 1, 9), float32],) {
  %116 = fn (%var_7977: Tensor[(2, 1, 9), float32]) -> (Tensor[(2, 1, 9), float32],) {
    %114 = cast(%var_7977, dtype="float32") /* ty=Tensor[(2, 1, 9), float32] */;
    %115 = sigmoid(%114) /* ty=Tensor[(2, 1, 9), float32] */;
    (%115,)
  };
  %116(%var_7991) /* ty=(Tensor[(2, 1, 9), float32],) */
}

def @func_12866() -> (Tensor[(840), uint8],) {
  %117 = @func_9509() /* ty=Tensor[(840), uint8] */;
  (%117,)
}

def @func_14156(%var_14142: Tensor[(13, 12, 10), uint16]) -> (Tensor[(13, 12, 10), float32], Tensor[(1760), uint64], Tensor[(1, 300), uint64]) {
  %118 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %119 = %118.0;
  %120 = cast(%var_14142, dtype="float32") /* ty=Tensor[(13, 12, 10), float32] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="float32") /* ty=Tensor[(13, 12, 10), float32] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 300), uint64] */, dtype="uint64") /* ty=Tensor[(1, 300), uint64] */;
  %125 = reshape(%124, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %126 = @func_12327(%125) /* ty=(uint16, Tensor[(300), uint64], Tensor[(1760), uint64]) */;
  %127 = multiply(%122, %123) /* ty=Tensor[(13, 12, 10), float32] */;
  %128 = %126.2;
  (%127, %128, meta[relay.Constant][6] /* ty=Tensor[(1, 300), uint64] */)
}

def @func_15776() -> Tensor[(840), uint8] {
  %129 = @func_12426() /* ty=(Tensor[(840), uint8],) */;
  %129.0
}

def @func_9229() -> Tensor[(840), uint8] {
  %131 = fn () -> Tensor[(840), uint8] {
    %130 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
    %130.1
  };
  %131() /* ty=Tensor[(840), uint8] */
}

def @func_11703(%var_11592: Tensor[(4, 11, 15), float32], %var_11603: Tensor[(12, 100), float32], %var_11604: Tensor[(108), float32], %var_11689: Tensor[(600), uint8]) -> (Tensor[(4, 11, 15), bool], Tensor[(12, 100), float32], Tensor[(108), float32], Tensor[(416), uint16], Tensor[(14, 15, ?), float64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(4, 11, 15), uint8], Tensor[(189), float64]) {
  %132 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(4, 1, 15), bool] */;
  %133 = cast(%var_11592, dtype="bool") /* ty=Tensor[(4, 11, 15), bool] */;
  %134 = cast(%var_11603, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
  %135 = cast(%var_11603, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
  %136 = cast(%var_11604, dtype="float32") /* ty=Tensor[(108), float32] */;
  %137 = reshape(%134, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %138 = reshape(%135, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %139 = reshape(%136, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %140 = @func_7568(%137, %138, %139) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %141 = cast(meta[relay.Constant][8] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %142 = reshape(%141, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %143 = @func_136(%142) /* ty=Tensor[(14, 15, 1), float64] */;
  %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %148 = cast(%var_11689, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %149 = cast(%var_11689, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %150 = reshape(%148, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %151 = reshape(%149, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %152 = @func_7471(%150, %151) /* ty=(Tensor[(5, 15, 8), bool],) */;
  %153 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %154 = atanh(%153) /* ty=Tensor[(4, 1, 15), float32] */;
  %155 = cast(%var_11603, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
  %156 = cast(%var_11604, dtype="float32") /* ty=Tensor[(108), float32] */;
  %157 = cast(meta[relay.Constant][8] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %158 = reshape(%155, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %159 = reshape(%156, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %160 = reshape(%157, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %161 = @func_9923(%158, %159, %160) /* ty=(Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) */;
  %162 = %161.1;
  %163 = cast(%154, dtype="int32") /* ty=Tensor[(4, 1, 15), int32] */;
  %164 = cast(%162, dtype="int32") /* ty=int32 */;
  %165 = subtract(%163, %164) /* ty=Tensor[(4, 1, 15), int32] */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %167 = sigmoid(%166) /* ty=Tensor[(4, 1, 15), float32] */;
  %168 = cast(%167, dtype="uint8") /* ty=Tensor[(4, 1, 15), uint8] */;
  %169 = cast(%var_11592, dtype="uint8") /* ty=Tensor[(4, 11, 15), uint8] */;
  %170 = @func_9228() /* ty=Tensor[(840), uint8] */;
  %171 = cast(%170, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %172 = reshape(%171, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
  %173 = @func_2023(%172) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
  %174 = less(%132, %133) /* ty=Tensor[(4, 11, 15), bool] */;
  %175 = %140.1;
  %176 = mod(%146, %147) /* ty=Tensor[(14, 15, ?), float64] */;
  %177 = %152.0;
  %178 = logical_xor(%168, %169) /* ty=Tensor[(4, 11, 15), uint8] */;
  %179 = %173.2;
  (%174, %var_11603, %var_11604, %175, %176, %170, %177, %var_11689, %178, %179)
}

def @func_15361() -> (Tensor[(840), uint8],) {
  @func_15359() /* ty=(Tensor[(840), uint8],) */
}

def @func_10658() -> (Tensor[(6, 6, 4), float64],) {
  @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */
}

def @func_9369(%var_9352: Tensor[(300), uint64], %var_9353: Tensor[(4, 440), int16]) -> (Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) {
  %180 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %181 = cast(meta[relay.Constant][9] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %182 = cast(%var_9352, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %183 = cast(%var_9353, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
  %184 = reshape(%181, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
  %185 = reshape(%182, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %186 = reshape(%183, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %187 = @func_9148(%184, %185, %186) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %188 = cast(meta[relay.Constant][9] /* ty=Tensor[(972), int64] */, dtype="float32") /* ty=Tensor[(972), float32] */;
  %189 = %180.0;
  %190 = %187.7;
  %191 = tan(%188) /* ty=Tensor[(972), float32] */;
  (%189, %190, %var_9352, %var_9353, %191)
}

def @func_13204() -> Tensor[(360), float64] {
  @func_13202() /* ty=Tensor[(360), float64] */
}

def @func_9454(%var_9432: Tensor[(1344), float32], %var_9435: Tensor[(300), uint64]) -> (Tensor[(416), uint16], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16], uint16) {
  %192 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %193 = cast(%var_9432, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %194 = cast(%var_9432, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %195 = cast(meta[relay.Constant][10] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %197 = cast(%var_9435, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %199 = cast(meta[relay.Constant][12] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %200 = reshape(%193, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %201 = reshape(%194, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %202 = reshape(%195, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %203 = reshape(%196, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %204 = reshape(%197, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %205 = reshape(%198, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %206 = reshape(%199, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %207 = @func_2710(%200, %201, %202, %203, %204, %205, %206) /* ty=(Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) */;
  %208 = @func_9209() /* ty=(uint16,) */;
  %209 = %192.0;
  %210 = %207.8;
  %211 = %208.0;
  (%209, %210, %var_9432, meta[relay.Constant][10] /* ty=Tensor[(210), float64] */, meta[relay.Constant][11] /* ty=Tensor[(972), int64] */, %var_9435, meta[relay.Constant][12] /* ty=Tensor[(1760), int16] */, %211)
}

def @func_8465() -> Tensor[(840), uint8] {
  %212 = fn () -> Tensor[(840), uint8] {
    @func_8438() /* ty=Tensor[(840), uint8] */
  };
  %212() /* ty=Tensor[(840), uint8] */
}

def @func_9045() -> (Tensor[(6, 6, 4), float64],) {
  %218 = fn () -> (Tensor[(6, 6, 4), float64],) {
    %213 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
    %214 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(6, 6, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %215 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %217 = divide(%215, %216) /* ty=Tensor[(6, 6, 4), float64] */;
    (%217,)
  };
  %218() /* ty=(Tensor[(6, 6, 4), float64],) */
}

def @func_11934() -> (Tensor[(840), uint8],) {
  %220 = fn () -> (Tensor[(840), uint8],) {
    %219 = @func_10676() /* ty=Tensor[(840), uint8] */;
    (%219,)
  };
  %220() /* ty=(Tensor[(840), uint8],) */
}

def @func_14439() -> (Tensor[(416), uint16], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150), int64], Tensor[(210), float64]) {
  @func_14437() /* ty=(Tensor[(416), uint16], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150), int64], Tensor[(210), float64]) */
}

def @func_15359() -> (Tensor[(840), uint8],) {
  %221 = @func_12426() /* ty=(Tensor[(840), uint8],) */;
  %222 = %221.0;
  (%222,)
}

def @func_12764(%var_12762: Tensor[(108), float32]) -> (Tensor[(840), uint8], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) {
  @func_12761(%var_12762) /* ty=(Tensor[(840), uint8], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) */
}

def @func_9971(%var_9969: Tensor[(972), int64], %var_9970: Tensor[(210), float64]) -> (Tensor[(1, 3, 2), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64]) {
  %233 = fn (%var_9963: Tensor[(972), int64], %var_9964: Tensor[(210), float64]) -> (Tensor[(1, 3, 2), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64]) {
    %223 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 3, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 3, 2), float64] */;
    %224 = cast(%var_9963, dtype="int64") /* ty=Tensor[(972), int64] */;
    %225 = cast(%var_9963, dtype="int64") /* ty=Tensor[(972), int64] */;
    %226 = cast(%var_9964, dtype="float64") /* ty=Tensor[(210), float64] */;
    %227 = reshape(%224, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
    %228 = reshape(%225, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
    %229 = reshape(%226, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %230 = @func_1518(%227, %228, %229) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
    %231 = tan(%223) /* ty=Tensor[(1, 3, 2), float64] */;
    %232 = %230.1;
    (%231, %232, %var_9963, %var_9964)
  };
  %233(%var_9969, %var_9970) /* ty=(Tensor[(1, 3, 2), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64]) */
}

def @func_11882(%var_11879: Tensor[(50, 6), uint64], %var_11880: Tensor[(1760), int16], %var_11881: Tensor[(1344), float32]) -> (Tensor[(840), uint8], Tensor[(416), uint16], Tensor[(972), int64], Tensor[(50, 6), uint64], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(1344), float32]) {
  %250 = fn (%var_11832: Tensor[(50, 6), uint64], %var_11833: Tensor[(1760), int16], %var_11859: Tensor[(1344), float32]) -> (Tensor[(840), uint8], Tensor[(416), uint16], Tensor[(972), int64], Tensor[(50, 6), uint64], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(1344), float32]) {
    %234 = @func_9803() /* ty=(Tensor[(840), uint8],) */;
    %235 = cast(meta[relay.Constant][16] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
    %236 = cast(%var_11832, dtype="uint64") /* ty=Tensor[(50, 6), uint64] */;
    %237 = cast(%var_11833, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %238 = reshape(%235, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
    %239 = reshape(%236, newshape=[300]) /* ty=Tensor[(300), uint64] */;
    %240 = reshape(%237, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
    %241 = @func_9148(%238, %239, %240) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
    %242 = cast(%var_11859, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %243 = cast(%var_11832, dtype="uint64") /* ty=Tensor[(50, 6), uint64] */;
    %244 = reshape(%242, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
    %245 = reshape(%243, newshape=[300]) /* ty=Tensor[(300), uint64] */;
    %246 = @func_9454(%244, %245) /* ty=(Tensor[(416), uint16], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16], uint16) */;
    %247 = %234.0;
    %248 = %241.0;
    %249 = %246.4;
    (%247, %248, meta[relay.Constant][16] /* ty=Tensor[(972), int64] */, %var_11832, %var_11833, %249, %var_11859)
  };
  %250(%var_11879, %var_11880, %var_11881) /* ty=(Tensor[(840), uint8], Tensor[(416), uint16], Tensor[(972), int64], Tensor[(50, 6), uint64], Tensor[(1760), int16], Tensor[(972), int64], Tensor[(1344), float32]) */
}

def @func_8895() -> (Tensor[(128), uint16], Tensor[(840), uint8]) {
  %254 = fn () -> (Tensor[(128), uint16], Tensor[(840), uint8]) {
    %251 = @func_8486() /* ty=(Tensor[(128), uint16],) */;
    %252 = %251.0;
    %253 = @func_8464() /* ty=Tensor[(840), uint8] */;
    (%252, %253)
  };
  %254() /* ty=(Tensor[(128), uint16], Tensor[(840), uint8]) */
}

def @func_10522() -> (Tensor[(13, 12, 10), uint16],) {
  %257 = fn () -> (Tensor[(13, 12, 10), uint16],) {
    %255 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
    %256 = %255.1;
    (%256,)
  };
  %257() /* ty=(Tensor[(13, 12, 10), uint16],) */
}

def @func_14115() -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(3, 6), float32], Tensor[(2, 1, 9), float32]) {
  @func_14113() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(3, 6), float32], Tensor[(2, 1, 9), float32]) */
}

def @func_16649() -> Tensor[(128), uint16] {
  @func_16647() /* ty=Tensor[(128), uint16] */
}

def @func_15390() -> Tensor[(6, 6, 4), float64] {
  @func_15388() /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_2718(%var_2711: Tensor[(14, 16, 6), float32], %var_2712: Tensor[(14, 16, 6), float32], %var_2713: Tensor[(210), float64], %var_2714: Tensor[(972), int64], %var_2715: Tensor[(300), uint64], %var_2716: Tensor[(1760), int16], %var_2717: Tensor[(1760), int16]) -> (Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) {
  %317 = fn (%var_2621: Tensor[(14, 16, 6), float32], %var_2622: Tensor[(14, 16, 6), float32], %var_2631: Tensor[(210), float64], %var_2650: Tensor[(972), int64], %var_2675: Tensor[(300), uint64], %var_2681: Tensor[(1760), int16], %var_2696: Tensor[(1760), int16]) -> (Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) {
    %258 = cast(%var_2622, dtype="bool") /* ty=Tensor[(14, 16, 6), bool] */;
    %259 = shape_of(%var_2621, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(%var_2621, dtype="bool") /* ty=Tensor[(14, 16, 6), bool] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %262 = cast(%var_2631, dtype="float64") /* ty=Tensor[(210), float64] */;
    %263 = reshape(%262, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %264 = cast(meta[relay.Constant][17] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
    %265 = reshape(%264, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
    %266 = @func_2097(%265) /* ty=(Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) */;
    %267 = @func_136(%263) /* ty=Tensor[(14, 15, 1), float64] */;
    %268 = cast(%267, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
    %269 = reshape(%268, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %270 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
    %271 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
    %272 = @func_136(%269) /* ty=Tensor[(14, 15, 1), float64] */;
    %273 = cast(%272, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
    %274 = reshape(%270, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
    %275 = reshape(%271, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
    %276 = reshape(%273, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %277 = @func_1518(%274, %275, %276) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
    %278 = cast(meta[relay.Constant][17] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
    %279 = reshape(%278, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
    %280 = @func_2097(%279) /* ty=(Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) */;
    %281 = cast(%var_2675, dtype="uint64") /* ty=Tensor[(300), uint64] */;
    %282 = cast(%var_2675, dtype="uint64") /* ty=Tensor[(300), uint64] */;
    %283 = reshape(%281, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), uint64] */;
    %284 = reshape(%282, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), uint64] */;
    %285 = cast(meta[relay.Constant][18] /* ty=Tensor[(2100), float32] */, dtype="float32") /* ty=Tensor[(2100), float32] */;
    %286 = cast(%var_2681, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %287 = cast(%272, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
    %288 = reshape(%285, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float32] */;
    %289 = reshape(%286, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
    %290 = reshape(%287, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %291 = @func_438(%288, %289, %290) /* ty=(Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) */;
    %292 = cast(meta[relay.Constant][19] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
    %293 = reshape(%292, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
    %294 = %291.3;
    %295 = cast(%294, dtype="float64") /* ty=Tensor[(210), float64] */;
    %296 = reshape(%295, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %297 = cast(%var_2696, dtype="bool") /* ty=Tensor[(1760), bool] */;
    %298 = shape_of(%var_2681, dtype="int32") /* ty=Tensor[(1), int32] */;
    %299 = cast(%var_2681, dtype="bool") /* ty=Tensor[(1760), bool] */;
    %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?), bool] */;
    %301 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
    %302 = cast(%var_2650, dtype="int64") /* ty=Tensor[(972), int64] */;
    %303 = cast(%272, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
    %304 = reshape(%301, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
    %305 = reshape(%302, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
    %306 = reshape(%303, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %307 = @func_1518(%304, %305, %306) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
    %308 = less_equal(%260, %261) /* ty=Tensor[(14, 16, 6), bool] */;
    %309 = %266.0;
    %310 = %277.1;
    %311 = %280.0;
    %312 = @func_1279(%283, %284) /* ty=Tensor[(15, 10, 2), bool] */;
    %313 = @func_2461(%293) /* ty=Tensor[(3, 13, 4), float32] */;
    %314 = @func_136(%296) /* ty=Tensor[(14, 15, 1), float64] */;
    %315 = less_equal(%299, %300) /* ty=Tensor[(1760), bool] */;
    %316 = %307.0;
    (%308, %267, %var_2631, %309, meta[relay.Constant][17] /* ty=Tensor[(10), float64] */, %272, %310, %var_2650, %311, %312, %var_2675, %294, meta[relay.Constant][18] /* ty=Tensor[(2100), float32] */, %313, meta[relay.Constant][19] /* ty=Tensor[(39, 4), float32] */, %314, %315, %316)
  };
  %317(%var_2711, %var_2712, %var_2713, %var_2714, %var_2715, %var_2716, %var_2717) /* ty=(Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) */
}

def @func_10537(%var_10535: Tensor[(9, 10, 8), bool], %var_10536: Tensor[(9, 10, 8), bool]) -> Tensor[(9, 10, 8), bool] {
  %322 = fn (%var_10525: Tensor[(9, 10, 8), bool], %var_10526: Tensor[(9, 10, 8), bool]) -> Tensor[(9, 10, 8), bool] {
    %318 = cast(%var_10526, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
    %319 = shape_of(%var_10525, dtype="int32") /* ty=Tensor[(3), int32] */;
    %320 = cast(%var_10525, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
    %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%320, %321) /* ty=Tensor[(9, 10, 8), bool] */
  };
  %322(%var_10535, %var_10536) /* ty=Tensor[(9, 10, 8), bool] */
}

def @func_10609(%var_10607: Tensor[(11, 3, 14), uint32], %var_10608: Tensor[(1760, 1), int16]) -> (Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) {
  %336 = fn (%var_10566: Tensor[(11, 3, 14), uint32], %var_10586: Tensor[(1760, 1), int16]) -> (Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) {
    %323 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 3, 14), uint32] */, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
    %324 = shape_of(%var_10566, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%var_10566, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %327 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 3, 14), uint32] */, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
    %328 = cast(meta[relay.Constant][21] /* ty=Tensor[(21, 9), float64] */, dtype="float64") /* ty=Tensor[(21, 9), float64] */;
    %329 = cast(%var_10586, dtype="int16") /* ty=Tensor[(1760, 1), int16] */;
    %330 = reshape(%328, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float64] */;
    %331 = reshape(%329, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
    %332 = @func_482(%330, %331) /* ty=(Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) */;
    %333 = greater(%325, %326) /* ty=Tensor[(11, 3, 14), bool] */;
    %334 = atan(%327) /* ty=Tensor[(11, 3, 14), float32] */;
    %335 = %332.2;
    (%333, %334, %335, meta[relay.Constant][21] /* ty=Tensor[(21, 9), float64] */, %var_10586)
  };
  %336(%var_10607, %var_10608) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) */
}

def @func_16007() -> (Tensor[(13, 12, 10), uint16], Tensor[(128), uint16]) {
  %337 = @func_8486() /* ty=(Tensor[(128), uint16],) */;
  %338 = @func_13631() /* ty=Tensor[(13, 12, 10), uint16] */;
  %339 = %337.0;
  (%338, %339)
}

def @func_9373(%var_9371: Tensor[(300), uint64], %var_9372: Tensor[(4, 440), int16]) -> (Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) {
  @func_9369(%var_9371, %var_9372) /* ty=(Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) */
}

def @func_10640() -> (Tensor[(840), uint8],) {
  %342 = fn () -> (Tensor[(840), uint8],) {
    %340 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
    %341 = %340.0;
    (%341,)
  };
  %342() /* ty=(Tensor[(840), uint8],) */
}

def @func_16366() -> Tensor[(6, 6, 4), float32] {
  %344 = fn () -> Tensor[(6, 6, 4), float32] {
    %343 = @func_11046() /* ty=(Tensor[(6, 6, 4), float32],) */;
    %343.0
  };
  %344() /* ty=Tensor[(6, 6, 4), float32] */
}

def @func_8628(%var_8626: Tensor[(360), float64], %var_8627: Tensor[(1760), int16]) -> (Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) {
  @func_8624(%var_8626, %var_8627) /* ty=(Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) */
}

def @func_14373() -> (uint16, Tensor[(1760), float32]) {
  @func_14371() /* ty=(uint16, Tensor[(1760), float32]) */
}

def @func_12941(%var_12937: Tensor[(210), float64]) -> (Tensor[(6, 6, 4), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(16, 11, 10), int16], Tensor[(210), float64]) {
  %345 = cast(meta[relay.Constant][22] /* ty=Tensor[(462), uint32] */, dtype="uint32") /* ty=Tensor[(462), uint32] */;
  %346 = cast(meta[relay.Constant][23] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %347 = reshape(%345, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint32] */;
  %348 = reshape(%346, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), int16] */;
  %349 = @func_10606(%347, %348) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) */;
  %350 = cast(meta[relay.Constant][23] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %351 = cast(%var_12937, dtype="float64") /* ty=Tensor[(210), float64] */;
  %352 = reshape(%350, newshape=[1, 1760]) /* ty=Tensor[(1, 1760), int16] */;
  %353 = reshape(%351, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %354 = @func_8271(%352, %353) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) */;
  %355 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  %356 = %349.0;
  %357 = %354.1;
  (%355, %356, meta[relay.Constant][22] /* ty=Tensor[(462), uint32] */, meta[relay.Constant][23] /* ty=Tensor[(1760), int16] */, %357, %var_12937)
}

def @func_13110() -> Tensor[(6, 6, 4), float64] {
  @func_13108() /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_16108() -> Tensor[(1760), float32] {
  %358 = @func_15770() /* ty=(Tensor[(1760), float32], Tensor[(840), uint8]) */;
  %358.0
}

def @func_15732(%var_15730: Tensor[(210), float64], %var_15731: Tensor[(1200), float32]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(6, 6, 4), float32], Tensor[(13, 12, 10), uint16]) {
  @func_15728(%var_15730, %var_15731) /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(6, 6, 4), float32], Tensor[(13, 12, 10), uint16]) */
}

def @func_9401() -> Tensor[(840), uint8] {
  @func_8464() /* ty=Tensor[(840), uint8] */
}

def @func_11174() -> Tensor[(13, 12, 10), uint16] {
  %360 = fn () -> Tensor[(13, 12, 10), uint16] {
    %359 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %359.0
  };
  %360() /* ty=Tensor[(13, 12, 10), uint16] */
}

def @func_7453(%var_7451: Tensor[(2, 16, 12), float64]) -> (Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(2, 16, 12), float32]) {
  @func_7450(%var_7451) /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(2, 16, 12), float32]) */
}

def @func_10677() -> Tensor[(840), uint8] {
  %361 = fn () -> Tensor[(840), uint8] {
    @func_9401() /* ty=Tensor[(840), uint8] */
  };
  %361() /* ty=Tensor[(840), uint8] */
}

def @func_10843(%var_10834: Tensor[(14, 11, 11), float32]) -> (Tensor[(14, 11, 11), float32],) {
  %362 = cast(%var_10834, dtype="float32") /* ty=Tensor[(14, 11, 11), float32] */;
  %363 = log(%362) /* ty=Tensor[(14, 11, 11), float32] */;
  (%363,)
}

def @func_10233() -> Tensor[(840), uint8] {
  %364 = fn () -> Tensor[(840), uint8] {
    @func_8464() /* ty=Tensor[(840), uint8] */
  };
  %364() /* ty=Tensor[(840), uint8] */
}

def @func_9492() -> (Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) {
  %369 = fn () -> (Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) {
    %365 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %366 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
    %367 = %365.0;
    %368 = %366.1;
    (%367, %368)
  };
  %369() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */
}

def @main() -> (Tensor[(9, 2, 3), uint16], Tensor[(9, 2, 3), bool], Tensor[(9, 1, 3), float32]) {
  %370 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 1, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 1, 3), uint16] */;
  %371 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 2, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 2, 3), uint16] */;
  %372 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 1, 3), uint16] */, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
  %373 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 2, 3), uint16] */, dtype="bool") /* ty=Tensor[(9, 2, 3), bool] */;
  %374 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 1, 3), uint16] */, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  %375 = maximum(%370, %371) /* ty=Tensor[(9, 2, 3), uint16] */;
  %376 = logical_and(%372, %373) /* ty=Tensor[(9, 2, 3), bool] */;
  %377 = erf(%374) /* ty=Tensor[(9, 1, 3), float32] */;
  (%375, %376, %377)
}

def @func_13740(%var_13739: Tensor[(210), float64]) -> (Tensor[(13, 12, 10), uint16], Tensor[(210), float64], Tensor[(14, 15, 1), float32]) {
  %385 = fn (%var_13720: Tensor[(210), float64]) -> (Tensor[(13, 12, 10), uint16], Tensor[(210), float64], Tensor[(14, 15, 1), float32]) {
    %378 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
    %379 = cast(%var_13720, dtype="float64") /* ty=Tensor[(210), float64] */;
    %380 = reshape(%379, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %381 = @func_136(%380) /* ty=Tensor[(14, 15, 1), float64] */;
    %382 = cast(%381, dtype="float32") /* ty=Tensor[(14, 15, 1), float32] */;
    %383 = %378.1;
    %384 = asinh(%382) /* ty=Tensor[(14, 15, 1), float32] */;
    (%383, %var_13720, %384)
  };
  %385(%var_13739) /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(210), float64], Tensor[(14, 15, 1), float32]) */
}

def @func_15240(%var_15234: Tensor[(13, 12, 10), uint16], %var_15235: Tensor[(1200), float32], %var_15236: Tensor[(108), float32], %var_15237: Tensor[(4, 168), uint64], %var_15238: int16, %var_15239: Tensor[(384), float64]) -> (Tensor[(13, 12, 10), bool], Tensor[(840), uint8], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(4, 168), uint64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(144), float64], Tensor[(600), uint8], int16, Tensor[(1560), uint16], Tensor[(384), float64], Tensor[(156, 1), float64], Tensor[(840), uint8]) {
  %424 = fn (%var_15182: Tensor[(13, 12, 10), uint16], %var_15194: Tensor[(1200), float32], %var_15195: Tensor[(108), float32], %var_15196: Tensor[(4, 168), uint64], %var_15206: int16, %var_15220: Tensor[(384), float64]) -> (Tensor[(13, 12, 10), bool], Tensor[(840), uint8], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(4, 168), uint64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(144), float64], Tensor[(600), uint8], int16, Tensor[(1560), uint16], Tensor[(384), float64], Tensor[(156, 1), float64], Tensor[(840), uint8]) {
    %386 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
    %387 = %386.0;
    %388 = cast(%var_15182, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
    %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
    %390 = cast(%387, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
    %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %392 = cast(%var_15194, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %393 = cast(%var_15195, dtype="float32") /* ty=Tensor[(108), float32] */;
    %394 = cast(%var_15196, dtype="uint64") /* ty=Tensor[(4, 168), uint64] */;
    %395 = cast(%var_15195, dtype="float32") /* ty=Tensor[(108), float32] */;
    %396 = reshape(%392, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
    %397 = reshape(%393, newshape=[6, 18]) /* ty=Tensor[(6, 18), float32] */;
    %398 = reshape(%394, newshape=[672]) /* ty=Tensor[(672), uint64] */;
    %399 = reshape(%395, newshape=[6, 18]) /* ty=Tensor[(6, 18), float32] */;
    %400 = @func_14301(%396, %397, %398, %399) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(672), uint64], Tensor[(6, 18), float64], Tensor[(1560), uint16]) */;
    %401 = cast(meta[relay.Constant][26] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %402 = cast(%var_15194, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %403 = cast(meta[relay.Constant][27] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %404 = cast(meta[relay.Constant][28] /* ty=Tensor[(156, 1), float32] */, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
    %405 = cast(%var_15206, dtype="int16") /* ty=int16 */;
    %406 = reshape(%401, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %407 = reshape(%402, newshape=[4, 300]) /* ty=Tensor[(4, 300), float32] */;
    %408 = reshape(%403, newshape=[600]) /* ty=Tensor[(600), uint8] */;
    %409 = reshape(%404, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %410 = reshape(%405, newshape=[]) /* ty=int16 */;
    %411 = @func_13835(%406, %407, %408, %409, %410) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(6, 6, 4), float64], Tensor[(144), float64], Tensor[(5, 15, 8), bool], Tensor[(660), float32], Tensor[(4, 300), float32], Tensor[(108), float32], Tensor[(600), uint8], Tensor[(7, 8, 7), bool], Tensor[(1, 392), float32], Tensor[(156), float32], Tensor[(12, 9, 16), float32], Tensor[(1728), float32], int16) */;
    %412 = cast(%var_15220, dtype="float64") /* ty=Tensor[(384), float64] */;
    %413 = reshape(%412, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
    %414 = @func_7450(%413) /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(2, 16, 12), float32]) */;
    %415 = cast(meta[relay.Constant][28] /* ty=Tensor[(156, 1), float32] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %416 = @func_12399() /* ty=(Tensor[(840), uint8],) */;
    %417 = not_equal(%390, %391) /* ty=Tensor[(13, 12, 10), bool] */;
    %418 = %400.1;
    %419 = @func_9509() /* ty=Tensor[(840), uint8] */;
    %420 = %411.5;
    %421 = %414.1;
    %422 = asin(%415) /* ty=Tensor[(156, 1), float64] */;
    %423 = %416.0;
    (%417, %418, %var_15194, %var_15195, %var_15196, %419, %420, meta[relay.Constant][26] /* ty=Tensor[(144), float64] */, meta[relay.Constant][27] /* ty=Tensor[(600), uint8] */, %var_15206, %421, %var_15220, %422, %423)
  };
  %424(%var_15234, %var_15235, %var_15236, %var_15237, %var_15238, %var_15239) /* ty=(Tensor[(13, 12, 10), bool], Tensor[(840), uint8], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(4, 168), uint64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(144), float64], Tensor[(600), uint8], int16, Tensor[(1560), uint16], Tensor[(384), float64], Tensor[(156, 1), float64], Tensor[(840), uint8]) */
}

def @func_15771() -> (Tensor[(1760), float32], Tensor[(840), uint8]) {
  %429 = fn () -> (Tensor[(1760), float32], Tensor[(840), uint8]) {
    %425 = @func_14371() /* ty=(uint16, Tensor[(1760), float32]) */;
    %426 = @func_12479() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */;
    %427 = %425.1;
    %428 = %426.0;
    (%427, %428)
  };
  %429() /* ty=(Tensor[(1760), float32], Tensor[(840), uint8]) */
}

def @func_12944(%var_12942: Tensor[(210), float64]) -> (Tensor[(6, 6, 4), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(16, 11, 10), int16], Tensor[(210), float64]) {
  @func_12941(%var_12942) /* ty=(Tensor[(6, 6, 4), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(16, 11, 10), int16], Tensor[(210), float64]) */
}

def @func_11536(%var_11522: Tensor[(6, 6, 4), float64]) -> Tensor[(6, 6, 4), bool] {
  %430 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %431 = %430.0;
  %432 = cast(%var_11522, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %433 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%431, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%434, %435) /* ty=Tensor[(6, 6, 4), bool] */
}

def @func_12685() -> Tensor[(1760), int16] {
  @func_12683() /* ty=Tensor[(1760), int16] */
}

def @func_485(%var_483: Tensor[(9, 3, 7), float64], %var_484: Tensor[(4, 440), int16]) -> (Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) {
  %451 = fn (%var_456: Tensor[(9, 3, 7), float64], %var_467: Tensor[(4, 440), int16]) -> (Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) {
    %436 = cast(%var_456, dtype="float64") /* ty=Tensor[(9, 3, 7), float64] */;
    %437 = cast(meta[relay.Constant][29] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %438 = reshape(%437, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %439 = cast(%var_467, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
    %440 = cast(%var_467, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
    %441 = @func_136(%438) /* ty=Tensor[(14, 15, 1), float64] */;
    %442 = cast(%441, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
    %443 = reshape(%439, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
    %444 = reshape(%440, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
    %445 = reshape(%442, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %446 = @func_325(%443, %444, %445) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
    %447 = cast(%var_456, dtype="float64") /* ty=Tensor[(9, 3, 7), float64] */;
    %448 = exp(%436) /* ty=Tensor[(9, 3, 7), float64] */;
    %449 = %446.1;
    %450 = atan(%447) /* ty=Tensor[(9, 3, 7), float64] */;
    (%448, %441, meta[relay.Constant][29] /* ty=Tensor[(210), float64] */, %449, %var_467, %450)
  };
  %451(%var_483, %var_484) /* ty=(Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) */
}

def @func_9654(%var_9652: Tensor[(6, 6, 4), float64]) -> Tensor[(6, 6, 4), float64] {
  @func_9651(%var_9652) /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_13485() -> (Tensor[(840), uint8],) {
  %454 = fn () -> (Tensor[(840), uint8],) {
    %452 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
    %453 = %452.0;
    (%453,)
  };
  %454() /* ty=(Tensor[(840), uint8],) */
}

def @func_12178() -> (Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) {
  %455 = @func_10017() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %456 = %455.0;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %458 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %459 = log(%457) /* ty=Tensor[(6, 6, 4), float32] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_8624(%var_8588: Tensor[(360), float64], %var_8593: Tensor[(1760), int16]) -> (Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) {
  %461 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %462 = cast(%var_8588, dtype="float64") /* ty=Tensor[(360), float64] */;
  %463 = reshape(%462, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float64] */;
  %464 = cast(%var_8593, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %465 = cast(%var_8593, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %466 = cast(meta[relay.Constant][30] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %467 = reshape(%464, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %468 = reshape(%465, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %469 = reshape(%466, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %470 = @func_325(%467, %468, %469) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %471 = cast(meta[relay.Constant][31] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %472 = reshape(%471, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), float32] */;
  %473 = @func_6503(%472) /* ty=(Tensor[(15, 12, 13), float32], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(5, 60), uint64], Tensor[(1, 1760), int16]) */;
  %474 = cast(meta[relay.Constant][32] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %475 = cast(meta[relay.Constant][32] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %476 = reshape(%474, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %477 = reshape(%475, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
  %478 = @func_7471(%476, %477) /* ty=(Tensor[(5, 15, 8), bool],) */;
  %479 = %461.0;
  %480 = @func_4564(%463) /* ty=Tensor[(5, 9, 8), float64] */;
  %481 = %470.0;
  %482 = %473.3;
  %483 = %478.0;
  (%479, %480, %var_8588, %481, %var_8593, meta[relay.Constant][30] /* ty=Tensor[(210), float64] */, %482, meta[relay.Constant][31] /* ty=Tensor[(2340), float32] */, %483, meta[relay.Constant][32] /* ty=Tensor[(600), uint8] */)
}

def @func_14514() -> (Tensor[(840), uint8],) {
  %486 = fn () -> (Tensor[(840), uint8],) {
    %484 = @func_12866() /* ty=(Tensor[(840), uint8],) */;
    %485 = %484.0;
    (%485,)
  };
  %486() /* ty=(Tensor[(840), uint8],) */
}

def @func_15527() -> Tensor[(840), uint8] {
  %487 = fn () -> Tensor[(840), uint8] {
    @func_10232() /* ty=Tensor[(840), uint8] */
  };
  %487() /* ty=Tensor[(840), uint8] */
}

def @func_17021(%var_17019: Tensor[(105, 2), float64]) -> (Tensor[(6, 6, 4), float32], Tensor[(840), uint8], Tensor[(16, 11, 10), int16], Tensor[(105, 2), float64]) {
  @func_17018(%var_17019) /* ty=(Tensor[(6, 6, 4), float32], Tensor[(840), uint8], Tensor[(16, 11, 10), int16], Tensor[(105, 2), float64]) */
}

def @func_15436() -> (Tensor[(840), uint8],) {
  @func_15434() /* ty=(Tensor[(840), uint8],) */
}

def @func_16225() -> (Tensor[(13, 12, 10), float64], Tensor[(840), uint8], Tensor[(840), uint8]) {
  %498 = fn () -> (Tensor[(13, 12, 10), float64], Tensor[(840), uint8], Tensor[(840), uint8]) {
    %488 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %489 = %488.0;
    %490 = cast(%489, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
    %491 = sin(%490) /* ty=Tensor[(13, 12, 10), float64] */;
    %492 = cast(%491, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
    %493 = @func_13083() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) */;
    %494 = @func_14513() /* ty=(Tensor[(840), uint8],) */;
    %495 = sinh(%492) /* ty=Tensor[(13, 12, 10), float64] */;
    %496 = %493.3;
    %497 = %494.0;
    (%495, %496, %497)
  };
  %498() /* ty=(Tensor[(13, 12, 10), float64], Tensor[(840), uint8], Tensor[(840), uint8]) */
}

def @func_14113() -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(3, 6), float32], Tensor[(2, 1, 9), float32]) {
  %499 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 6), float32] */, dtype="float32") /* ty=Tensor[(3, 6), float32] */;
  %500 = reshape(%499, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float32] */;
  %501 = @func_7990(%500) /* ty=(Tensor[(2, 1, 9), float32],) */;
  %502 = %501.0;
  %503 = cast(%502, dtype="float32") /* ty=Tensor[(2, 1, 9), float32] */;
  %504 = @func_8464() /* ty=Tensor[(840), uint8] */;
  %505 = @func_9401() /* ty=Tensor[(840), uint8] */;
  %506 = acosh(%503) /* ty=Tensor[(2, 1, 9), float32] */;
  (%504, %505, meta[relay.Constant][33] /* ty=Tensor[(3, 6), float32] */, %506)
}

def @func_10415() -> (Tensor[(840), uint8],) {
  %509 = fn () -> (Tensor[(840), uint8],) {
    %507 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
    %508 = %507.0;
    (%508,)
  };
  %509() /* ty=(Tensor[(840), uint8],) */
}

def @func_9148(%var_9131: Tensor[(18, 54), int64], %var_9132: Tensor[(300), uint64], %var_9133: Tensor[(1760), int16]) -> (Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) {
  %510 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %511 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %512 = cast(meta[relay.Constant][34] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %513 = cast(meta[relay.Constant][34] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %514 = cast(meta[relay.Constant][35] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %515 = cast(%var_9131, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %516 = cast(%var_9132, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %517 = cast(%var_9133, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %518 = cast(%var_9133, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %519 = reshape(%512, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %520 = reshape(%513, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %521 = reshape(%514, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %522 = reshape(%515, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %523 = reshape(%516, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %524 = reshape(%517, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %525 = reshape(%518, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %526 = @func_2710(%519, %520, %521, %522, %523, %524, %525) /* ty=(Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) */;
  %527 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
  %528 = %510.0;
  %529 = %511.2;
  %530 = %526.2;
  %531 = %527.0;
  (%528, %529, %530, meta[relay.Constant][34] /* ty=Tensor[(1344), float32] */, meta[relay.Constant][35] /* ty=Tensor[(210), float64] */, %var_9131, %var_9132, %var_9133, %531)
}

def @func_14546() -> Tensor[(840), uint8] {
  @func_9228() /* ty=Tensor[(840), uint8] */
}

def @func_14020(%var_14019: Tensor[(210, 1), float64]) -> (Tensor[(840), uint8], Tensor[(210), float64], Tensor[(210, 1), float64]) {
  %538 = fn (%var_13993: Tensor[(210, 1), float64]) -> (Tensor[(840), uint8], Tensor[(210), float64], Tensor[(210, 1), float64]) {
    %532 = @func_12866() /* ty=(Tensor[(840), uint8],) */;
    %533 = cast(%var_13993, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %534 = reshape(%533, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %535 = @func_9022(%534) /* ty=(Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) */;
    %536 = %532.0;
    %537 = %535.3;
    (%536, %537, %var_13993)
  };
  %538(%var_14019) /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(210, 1), float64]) */
}

def @func_17007(%var_17005: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(210, 1), float64], Tensor[(210), float64]) {
  @func_17004(%var_17005) /* ty=(Tensor[(840), uint8], Tensor[(210, 1), float64], Tensor[(210), float64]) */
}

def @func_15420() -> Tensor[(840), uint8] {
  %539 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %539.0
}

def @func_8438() -> Tensor[(840), uint8] {
  %540 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
  %540.1
}

def @func_6282(%var_6264: Tensor[(12, 9, 16), float32], %var_6275: int16, %var_6279: Tensor[(392), float32], %var_6280: Tensor[(156), float32]) -> (Tensor[(12, 9, 16), float32], Tensor[(1, 15, 9), bool], int16, Tensor[(135), int16], Tensor[(156), float32], Tensor[(392), float32], Tensor[(156), float32]) {
  %541 = cast(%var_6264, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  %542 = cast(%var_6275, dtype="int16") /* ty=int16 */;
  %543 = cast(meta[relay.Constant][36] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %544 = reshape(%542, newshape=[]) /* ty=int16 */;
  %545 = reshape(%543, newshape=[1, 15, 9]) /* ty=Tensor[(1, 15, 9), int16] */;
  %546 = @func_4928(%544, %545) /* ty=(Tensor[(1, 15, 9), bool],) */;
  %547 = cast(%var_6279, dtype="float32") /* ty=Tensor[(392), float32] */;
  %548 = cast(%var_6280, dtype="float32") /* ty=Tensor[(156), float32] */;
  %549 = reshape(%547, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
  %550 = reshape(%548, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %551 = @func_4783(%549, %550) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
  %552 = sinh(%541) /* ty=Tensor[(12, 9, 16), float32] */;
  %553 = %546.0;
  %554 = %551.2;
  (%552, %553, %var_6275, meta[relay.Constant][36] /* ty=Tensor[(135), int16] */, %554, %var_6279, %var_6280)
}

def @func_10656() -> (Tensor[(6, 6, 4), float64],) {
  %555 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %556 = %555.0;
  (%556,)
}

def @func_10458() -> (uint16, Tensor[(840), uint8]) {
  %557 = @func_9209() /* ty=(uint16,) */;
  %558 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %559 = %557.0;
  %560 = %558.0;
  (%559, %560)
}

def @func_9588() -> (Tensor[(840), uint8],) {
  %563 = fn () -> (Tensor[(840), uint8],) {
    %561 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
    %562 = %561.1;
    (%562,)
  };
  %563() /* ty=(Tensor[(840), uint8],) */
}

def @func_14500() -> (Tensor[(13, 12, 10), uint16],) {
  %566 = fn () -> (Tensor[(13, 12, 10), uint16],) {
    %564 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %565 = %564.0;
    (%565,)
  };
  %566() /* ty=(Tensor[(13, 12, 10), uint16],) */
}

def @func_12868() -> (Tensor[(840), uint8],) {
  @func_12866() /* ty=(Tensor[(840), uint8],) */
}

def @func_12351() -> (Tensor[(840), uint8],) {
  %567 = @func_9228() /* ty=Tensor[(840), uint8] */;
  (%567,)
}

def @func_10070() -> Tensor[(6, 6, 4), float32] {
  %574 = fn () -> Tensor[(6, 6, 4), float32] {
    %568 = @func_10017() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %569 = %568.0;
    %570 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 6, 4), float64] */, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
    %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%569, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    add(%572, %573) /* ty=Tensor[(6, 6, 4), float32] */
  };
  %574() /* ty=Tensor[(6, 6, 4), float32] */
}

def @func_12479() -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) {
  %575 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %578 = @func_10676() /* ty=Tensor[(840), uint8] */;
  %579 = sigmoid(%577) /* ty=Tensor[(6, 6, 4), float32] */;
  (%578, %579)
}

def @func_15324() -> (Tensor[(840), uint8],) {
  %580 = @func_10714() /* ty=Tensor[(840), uint8] */;
  (%580,)
}

def @func_8440() -> Tensor[(840), uint8] {
  @func_8438() /* ty=Tensor[(840), uint8] */
}

def @func_8275(%var_8273: Tensor[(1, 1760), int16], %var_8274: Tensor[(210), float64]) -> (Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) {
  @func_8271(%var_8273, %var_8274) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) */
}

def @func_13526(%var_13495: Tensor[(2, 7, 16), uint16], %var_13496: Tensor[(2, 7, 16), uint16]) -> (Tensor[(2, 7, 16), uint16], Tensor[(2, 7, 16), float64]) {
  %581 = cast(%var_13496, dtype="uint16") /* ty=Tensor[(2, 7, 16), uint16] */;
  %582 = shape_of(%var_13495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_13495, dtype="uint16") /* ty=Tensor[(2, 7, 16), uint16] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %585 = cast(%var_13496, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  %586 = right_shift(%583, %584) /* ty=Tensor[(2, 7, 16), uint16] */;
  %587 = cos(%585) /* ty=Tensor[(2, 7, 16), float64] */;
  (%586, %587)
}

def @func_14052() -> (Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(60, 14), uint8]) {
  @func_14050() /* ty=(Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(60, 14), uint8]) */
}

def @func_12747() -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) {
  @func_12745() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */
}

def @func_1518(%var_1502: Tensor[(9, 12, 9), int64], %var_1503: Tensor[(9, 12, 9), int64], %var_1515: Tensor[(210), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) {
  %588 = cast(%var_1503, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %589 = shape_of(%var_1502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_1502, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %592 = equal(%590, %591) /* ty=Tensor[(9, 12, 9), bool] */;
  %593 = cast(%592, dtype="float64") /* ty=Tensor[(9, 12, 9), float64] */;
  %594 = cast(%var_1515, dtype="float64") /* ty=Tensor[(210), float64] */;
  %595 = reshape(%594, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %596 = log(%593) /* ty=Tensor[(9, 12, 9), float64] */;
  %597 = @func_136(%595) /* ty=Tensor[(14, 15, 1), float64] */;
  (%596, %597, %var_1515)
}

def @func_9803() -> (Tensor[(840), uint8],) {
  %598 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
  %599 = %598.0;
  (%599,)
}

def @func_12669(%var_12667: Tensor[(6, 6, 4), float64]) -> (Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) {
  @func_12666(%var_12667) /* ty=(Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */
}

def @func_1523(%var_1520: Tensor[(9, 12, 9), int64], %var_1521: Tensor[(9, 12, 9), int64], %var_1522: Tensor[(210), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) {
  @func_1518(%var_1520, %var_1521, %var_1522) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */
}

def @func_11425(%var_11424: Tensor[(1560), uint16]) -> (Tensor[(840), uint8], Tensor[(1560), uint16], Tensor[(13, 12, 10), float64]) {
  %610 = fn (%var_11407: Tensor[(1560), uint16]) -> (Tensor[(840), uint8], Tensor[(1560), uint16], Tensor[(13, 12, 10), float64]) {
    %600 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
    %601 = cast(%var_11407, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %602 = cast(%var_11407, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %603 = reshape(%601, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
    %604 = reshape(%602, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
    %605 = @func_5346(%603, %604) /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %606 = %605.0;
    %607 = cast(%606, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
    %608 = %600.0;
    %609 = exp(%607) /* ty=Tensor[(13, 12, 10), float64] */;
    (%608, %var_11407, %609)
  };
  %610(%var_11424) /* ty=(Tensor[(840), uint8], Tensor[(1560), uint16], Tensor[(13, 12, 10), float64]) */
}

def @func_13693(%var_13692: Tensor[(15, 1, 3), float32]) -> (Tensor[(15, 1, 3), bool],) {
  %614 = fn (%var_13672: Tensor[(15, 1, 3), float32]) -> (Tensor[(15, 1, 3), bool],) {
    %611 = cast(1.63216f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %612 = cast(%var_13672, dtype="bool") /* ty=Tensor[(15, 1, 3), bool] */;
    %613 = greater(%611, %612) /* ty=Tensor[(15, 1, 3), bool] */;
    (%613,)
  };
  %614(%var_13692) /* ty=(Tensor[(15, 1, 3), bool],) */
}

def @func_12427() -> (Tensor[(840), uint8],) {
  %617 = fn () -> (Tensor[(840), uint8],) {
    %615 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
    %616 = %615.0;
    (%616,)
  };
  %617() /* ty=(Tensor[(840), uint8],) */
}

def @func_8151() -> (Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) {
  %618 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %619 = cast(meta[relay.Constant][39] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %620 = cast(meta[relay.Constant][40] /* ty=Tensor[(128), uint16] */, dtype="uint16") /* ty=Tensor[(128), uint16] */;
  %621 = cast(meta[relay.Constant][41] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %622 = reshape(%619, newshape=[]) /* ty=uint16 */;
  %623 = reshape(%620, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), uint16] */;
  %624 = reshape(%621, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
  %625 = @func_7295(%622, %623, %624) /* ty=(Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) */;
  %626 = rsqrt(%618) /* ty=Tensor[(6, 14, 16), float32] */;
  %627 = %625.1;
  (%626, %627, meta[relay.Constant][39] /* ty=uint16 */, meta[relay.Constant][40] /* ty=Tensor[(128), uint16] */, meta[relay.Constant][41] /* ty=Tensor[(1560), uint16] */)
}

def @func_12683() -> Tensor[(1760), int16] {
  %628 = @func_9757() /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) */;
  %628.3
}

def @func_442(%var_439: Tensor[(15, 14, 10), float32], %var_440: Tensor[(1760), int16], %var_441: Tensor[(210), float64]) -> (Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) {
  %645 = fn (%var_374: Tensor[(15, 14, 10), float32], %var_404: Tensor[(1760), int16], %var_405: Tensor[(210), float64]) -> (Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) {
    %629 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 10), float32] */;
    %630 = shape_of(%var_374, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(%var_374, dtype="float32") /* ty=Tensor[(15, 14, 10), float32] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %633 = cast(%var_404, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %634 = cast(%var_404, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %635 = cast(%var_405, dtype="float64") /* ty=Tensor[(210), float64] */;
    %636 = reshape(%633, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
    %637 = reshape(%634, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
    %638 = reshape(%635, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %639 = @func_325(%636, %637, %638) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
    %640 = cast(%var_405, dtype="float64") /* ty=Tensor[(210), float64] */;
    %641 = reshape(%640, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %642 = mod(%631, %632) /* ty=Tensor[(15, 14, 10), float32] */;
    %643 = %639.0;
    %644 = @func_136(%641) /* ty=Tensor[(14, 15, 1), float64] */;
    (%642, %643, %var_404, %var_405, %644)
  };
  %645(%var_439, %var_440, %var_441) /* ty=(Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) */
}

def @func_15635(%var_15632: Tensor[(360), float64], %var_15633: Tensor[(4, 440), int16], %var_15634: Tensor[(128), uint16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(4, 440), bool], Tensor[(1, 16, 8), uint16], Tensor[(1560), uint16], Tensor[(128), uint64]) {
  @func_15630(%var_15632, %var_15633, %var_15634) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(4, 440), bool], Tensor[(1, 16, 8), uint16], Tensor[(1560), uint16], Tensor[(128), uint64]) */
}

def @func_14307(%var_14303: Tensor[(1200), float32], %var_14304: Tensor[(6, 18), float32], %var_14305: Tensor[(672), uint64], %var_14306: Tensor[(6, 18), float32]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(672), uint64], Tensor[(6, 18), float64], Tensor[(1560), uint16]) {
  @func_14301(%var_14303, %var_14304, %var_14305, %var_14306) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(672), uint64], Tensor[(6, 18), float64], Tensor[(1560), uint16]) */
}

def @func_13640() -> Tensor[(6, 6, 4), float32] {
  @func_13638() /* ty=Tensor[(6, 6, 4), float32] */
}

def @func_16470() -> Tensor[(840), uint8] {
  %646 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %646.1
}

def @func_15422() -> Tensor[(840), uint8] {
  @func_15420() /* ty=Tensor[(840), uint8] */
}

def @func_17103() -> (Tensor[(840), uint8], Tensor[(972), int64], Tensor[(972), float64]) {
  @func_17101() /* ty=(Tensor[(840), uint8], Tensor[(972), int64], Tensor[(972), float64]) */
}

def @func_12372(%var_12367: Tensor[(972), int64], %var_12368: Tensor[(300), uint64]) -> (Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) {
  %647 = cast(%var_12367, dtype="int64") /* ty=Tensor[(972), int64] */;
  %648 = cast(%var_12368, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %649 = cast(meta[relay.Constant][43] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %650 = reshape(%647, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
  %651 = reshape(%648, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %652 = reshape(%649, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %653 = @func_9148(%650, %651, %652) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %654 = @func_10676() /* ty=Tensor[(840), uint8] */;
  %655 = %653.5;
  (%654, %655, %var_12367, %var_12368, meta[relay.Constant][43] /* ty=Tensor[(1760), int16] */)
}

def @func_16021() -> Tensor[(840), uint8] {
  %657 = fn () -> Tensor[(840), uint8] {
    %656 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
    %656.0
  };
  %657() /* ty=Tensor[(840), uint8] */
}

def @func_13530(%var_13528: Tensor[(2, 7, 16), uint16], %var_13529: Tensor[(2, 7, 16), uint16]) -> (Tensor[(2, 7, 16), uint16], Tensor[(2, 7, 16), float64]) {
  @func_13526(%var_13528, %var_13529) /* ty=(Tensor[(2, 7, 16), uint16], Tensor[(2, 7, 16), float64]) */
}

def @func_12330(%var_12328: Tensor[(300), uint64]) -> (uint16, Tensor[(300), uint64], Tensor[(1760), uint64]) {
  @func_12327(%var_12328) /* ty=(uint16, Tensor[(300), uint64], Tensor[(1760), uint64]) */
}

def @func_13085() -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) {
  @func_13083() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) */
}

def @func_16929() -> (Tensor[(840), uint8],) {
  @func_16927() /* ty=(Tensor[(840), uint8],) */
}

def @func_17031() -> (Tensor[(840), uint8],) {
  @func_17029() /* ty=(Tensor[(840), uint8],) */
}

def @func_7474(%var_7472: Tensor[(5, 15, 8), uint8], %var_7473: Tensor[(5, 15, 8), uint8]) -> (Tensor[(5, 15, 8), bool],) {
  %663 = fn (%var_7457: Tensor[(5, 15, 8), uint8], %var_7458: Tensor[(5, 15, 8), uint8]) -> (Tensor[(5, 15, 8), bool],) {
    %658 = cast(%var_7458, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
    %659 = shape_of(%var_7457, dtype="int32") /* ty=Tensor[(3), int32] */;
    %660 = cast(%var_7457, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
    %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %662 = not_equal(%660, %661) /* ty=Tensor[(5, 15, 8), bool] */;
    (%662,)
  };
  %663(%var_7472, %var_7473) /* ty=(Tensor[(5, 15, 8), bool],) */
}

def @func_10846(%var_10844: Tensor[(14, 11, 11), float32]) -> (Tensor[(14, 11, 11), float32],) {
  @func_10843(%var_10844) /* ty=(Tensor[(14, 11, 11), float32],) */
}

def @func_11288(%var_11287: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(14, 15, 1), float64], Tensor[(72), uint32], Tensor[(210), float64]) {
  %671 = fn (%var_11284: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(14, 15, 1), float64], Tensor[(72), uint32], Tensor[(210), float64]) {
    %664 = cast(meta[relay.Constant][44] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
    %665 = cast(%var_11284, dtype="float64") /* ty=Tensor[(210), float64] */;
    %666 = reshape(%664, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), uint32] */;
    %667 = reshape(%665, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %668 = @func_5453(%666, %667) /* ty=(Tensor[(4, 9, 2), uint32], Tensor[(16, 11, 10), int16], Tensor[(1, 1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64], Tensor[(2100), float32]) */;
    %669 = @func_10232() /* ty=Tensor[(840), uint8] */;
    %670 = %668.4;
    (%669, %670, meta[relay.Constant][44] /* ty=Tensor[(72), uint32] */, %var_11284)
  };
  %671(%var_11287) /* ty=(Tensor[(840), uint8], Tensor[(14, 15, 1), float64], Tensor[(72), uint32], Tensor[(210), float64]) */
}

def @func_9923(%var_9855: Tensor[(1200), float32], %var_9856: Tensor[(108), float32], %var_9897: Tensor[(210), float64]) -> (Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) {
  %672 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %673 = @func_9209() /* ty=(uint16,) */;
  %674 = cast(%var_9855, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %675 = cast(%var_9855, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %676 = cast(%var_9856, dtype="float32") /* ty=Tensor[(108), float32] */;
  %677 = reshape(%674, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %678 = reshape(%675, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %679 = reshape(%676, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %680 = @func_7568(%677, %678, %679) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %681 = cast(meta[relay.Constant][45] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %682 = cast(meta[relay.Constant][45] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %683 = cast(%var_9897, dtype="float64") /* ty=Tensor[(210), float64] */;
  %684 = reshape(%681, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %685 = reshape(%682, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %686 = reshape(%683, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %687 = @func_1518(%684, %685, %686) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %688 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %689 = %672.0;
  %690 = %673.0;
  %691 = %680.1;
  %692 = %687.1;
  %693 = %688.0;
  (%689, %690, %691, %var_9855, %var_9856, %692, meta[relay.Constant][45] /* ty=Tensor[(972), int64] */, %var_9897, %693)
}

def @func_15477() -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(840), uint8]) {
  %700 = fn () -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(840), uint8]) {
    %694 = @func_12479() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */;
    %695 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %696 = @func_9062() /* ty=(Tensor[(840), uint8],) */;
    %697 = %694.0;
    %698 = %695.0;
    %699 = %696.0;
    (%697, %698, %699)
  };
  %700() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(840), uint8]) */
}

def @func_139(%var_137: Tensor[(14, 15, 1), float64]) -> Tensor[(14, 15, 1), float64] {
  @func_136(%var_137) /* ty=Tensor[(14, 15, 1), float64] */
}

def @func_9210() -> (uint16,) {
  %703 = fn () -> (uint16,) {
    %701 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
    %702 = %701.2;
    (%702,)
  };
  %703() /* ty=(uint16,) */
}

def @func_5346(%var_5329: Tensor[(13, 12, 10), uint16], %var_5330: Tensor[(13, 12, 10), uint16]) -> (Tensor[(13, 12, 10), uint16],) {
  %704 = cast(%var_5330, dtype="uint16") /* ty=Tensor[(13, 12, 10), uint16] */;
  %705 = shape_of(%var_5329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%var_5329, dtype="uint16") /* ty=Tensor[(13, 12, 10), uint16] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %708 = logical_xor(%706, %707) /* ty=Tensor[(13, 12, 10), uint16] */;
  (%708,)
}

def @func_16263() -> (Tensor[(840), uint8], Tensor[(210), float64]) {
  @func_16261() /* ty=(Tensor[(840), uint8], Tensor[(210), float64]) */
}

def @func_11047() -> (Tensor[(6, 6, 4), float32],) {
  %710 = fn () -> (Tensor[(6, 6, 4), float32],) {
    %709 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
    (%709,)
  };
  %710() /* ty=(Tensor[(6, 6, 4), float32],) */
}

def @func_12079() -> Tensor[(840), uint8] {
  @func_12077() /* ty=Tensor[(840), uint8] */
}

def @func_12272(%var_12271: Tensor[(144), float64]) -> (Tensor[(840), uint8], Tensor[(2, 1, 9), float32], Tensor[(18), float32], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(156), float32], Tensor[(392), float32], Tensor[(3, 52), float32]) {
  %726 = fn (%var_12253: Tensor[(144), float64]) -> (Tensor[(840), uint8], Tensor[(2, 1, 9), float32], Tensor[(18), float32], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(156), float32], Tensor[(392), float32], Tensor[(3, 52), float32]) {
    %711 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
    %712 = cast(meta[relay.Constant][46] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
    %713 = reshape(%712, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float32] */;
    %714 = @func_7990(%713) /* ty=(Tensor[(2, 1, 9), float32],) */;
    %715 = cast(%var_12253, dtype="float64") /* ty=Tensor[(144), float64] */;
    %716 = reshape(%715, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
    %717 = cast(meta[relay.Constant][47] /* ty=Tensor[(392), float32] */, dtype="float32") /* ty=Tensor[(392), float32] */;
    %718 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 52), float32] */, dtype="float32") /* ty=Tensor[(3, 52), float32] */;
    %719 = reshape(%717, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
    %720 = reshape(%718, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %721 = @func_4783(%719, %720) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
    %722 = %711.0;
    %723 = %714.0;
    %724 = @func_11536(%716) /* ty=Tensor[(6, 6, 4), bool] */;
    %725 = %721.2;
    (%722, %723, meta[relay.Constant][46] /* ty=Tensor[(18), float32] */, %724, %var_12253, %725, meta[relay.Constant][47] /* ty=Tensor[(392), float32] */, meta[relay.Constant][48] /* ty=Tensor[(3, 52), float32] */)
  };
  %726(%var_12271) /* ty=(Tensor[(840), uint8], Tensor[(2, 1, 9), float32], Tensor[(18), float32], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(156), float32], Tensor[(392), float32], Tensor[(3, 52), float32]) */
}

def @func_15952() -> Tensor[(6, 6, 4), float64] {
  %728 = fn () -> Tensor[(6, 6, 4), float64] {
    %727 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %727.0
  };
  %728() /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_13957() -> Tensor[(840), uint8] {
  %729 = fn () -> Tensor[(840), uint8] {
    @func_9509() /* ty=Tensor[(840), uint8] */
  };
  %729() /* ty=Tensor[(840), uint8] */
}

def @func_16631(%var_16610: Tensor[(144), float64]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(144), float64]) {
  %730 = cast(%var_16610, dtype="float64") /* ty=Tensor[(144), float64] */;
  %731 = reshape(%730, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
  %732 = @func_16020() /* ty=Tensor[(840), uint8] */;
  %733 = @func_11536(%731) /* ty=Tensor[(6, 6, 4), bool] */;
  (%732, %733, %var_16610)
}

def @func_2464(%var_2462: Tensor[(3, 13, 4), float32]) -> Tensor[(3, 13, 4), float32] {
  @func_2461(%var_2462) /* ty=Tensor[(3, 13, 4), float32] */
}

def @func_9024(%var_9023: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) {
  %742 = fn (%var_9016: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) {
    %734 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
    %735 = cast(meta[relay.Constant][49] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %736 = cast(%var_9016, dtype="float64") /* ty=Tensor[(210), float64] */;
    %737 = reshape(%735, newshape=[1, 1760]) /* ty=Tensor[(1, 1760), int16] */;
    %738 = reshape(%736, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %739 = @func_8271(%737, %738) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(16, 11, 10), int16], Tensor[(2100), float32], Tensor[(1, 1760), int16], Tensor[(210), float64]) */;
    %740 = %734.0;
    %741 = %739.2;
    (%740, %741, meta[relay.Constant][49] /* ty=Tensor[(1760), int16] */, %var_9016)
  };
  %742(%var_9023) /* ty=(Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) */
}

def @func_12851(%var_12837: Tensor[(6, 3), float32], %var_12848: Tensor[(392), float32], %var_12849: Tensor[(1, 156), float32]) -> (Tensor[(840), uint8], Tensor[(1344), float32], Tensor[(972), int64], Tensor[(10, 30), uint64], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(2, 1, 9), float32], Tensor[(6, 3), float32], Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(3, 13, 4), float32], Tensor[(392), float32], Tensor[(1, 156), float32]) {
  %743 = cast(meta[relay.Constant][50] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %744 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 30), uint64] */, dtype="uint64") /* ty=Tensor[(10, 30), uint64] */;
  %745 = cast(meta[relay.Constant][52] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %746 = reshape(%743, newshape=[18, 54]) /* ty=Tensor[(18, 54), int64] */;
  %747 = reshape(%744, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %748 = reshape(%745, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %749 = @func_9148(%746, %747, %748) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %750 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 30), uint64] */, dtype="uint64") /* ty=Tensor[(10, 30), uint64] */;
  %751 = cast(meta[relay.Constant][52] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %752 = reshape(%750, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %753 = reshape(%751, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %754 = @func_9369(%752, %753) /* ty=(Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) */;
  %755 = cast(%var_12837, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %756 = reshape(%755, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float32] */;
  %757 = @func_7990(%756) /* ty=(Tensor[(2, 1, 9), float32],) */;
  %758 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %759 = cast(%var_12848, dtype="float32") /* ty=Tensor[(392), float32] */;
  %760 = cast(%var_12849, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %761 = reshape(%759, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
  %762 = reshape(%760, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %763 = @func_4783(%761, %762) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
  %764 = @func_9401() /* ty=Tensor[(840), uint8] */;
  %765 = %749.3;
  %766 = %754.2;
  %767 = %757.0;
  %768 = %758.2;
  %769 = @func_9401() /* ty=Tensor[(840), uint8] */;
  %770 = %763.1;
  (%764, %765, meta[relay.Constant][50] /* ty=Tensor[(972), int64] */, meta[relay.Constant][51] /* ty=Tensor[(10, 30), uint64] */, meta[relay.Constant][52] /* ty=Tensor[(1760), int16] */, %766, %767, %var_12837, %768, %769, %770, %var_12848, %var_12849)
}

def @func_15434() -> (Tensor[(840), uint8],) {
  %771 = @func_9803() /* ty=(Tensor[(840), uint8],) */;
  %772 = %771.0;
  (%772,)
}

def @func_4677(%var_4676: Tensor[(16, 2, 13), uint16]) -> (Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) {
  %787 = fn (%var_4635: Tensor[(16, 2, 13), uint16]) -> (Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) {
    %773 = cast(meta[relay.Constant][53] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %774 = reshape(%773, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
    %775 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 2, 13), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2, 13), uint16] */;
    %776 = shape_of(%var_4635, dtype="int32") /* ty=Tensor[(3), int32] */;
    %777 = cast(%var_4635, dtype="uint16") /* ty=Tensor[(16, 2, 13), uint16] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %779 = logical_xor(%777, %778) /* ty=Tensor[(16, 2, 13), uint16] */;
    %780 = cast(%779, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
    %781 = cast(meta[relay.Constant][55] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %782 = reshape(%781, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
    %783 = @func_2023(%782) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
    %784 = @func_2461(%774) /* ty=Tensor[(3, 13, 4), float32] */;
    %785 = sinh(%780) /* ty=Tensor[(16, 2, 13), float64] */;
    %786 = %783.3;
    (%784, meta[relay.Constant][53] /* ty=Tensor[(156), float32] */, %785, %786, meta[relay.Constant][55] /* ty=Tensor[(840), uint8] */)
  };
  %787(%var_4676) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */
}

def @func_7299(%var_7296: uint16, %var_7297: Tensor[(1, 16, 8), uint16], %var_7298: Tensor[(1560), uint16]) -> (Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) {
  %797 = fn (%var_7263: uint16, %var_7264: Tensor[(1, 16, 8), uint16], %var_7281: Tensor[(1560), uint16]) -> (Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) {
    %788 = cast(%var_7263, dtype="uint16") /* ty=uint16 */;
    %789 = cast(%var_7264, dtype="uint16") /* ty=Tensor[(1, 16, 8), uint16] */;
    %790 = cast(%var_7281, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %791 = cast(%var_7281, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %792 = reshape(%790, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
    %793 = reshape(%791, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
    %794 = @func_5346(%792, %793) /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %795 = bitwise_or(%788, %789) /* ty=Tensor[(1, 16, 8), uint16] */;
    %796 = %794.0;
    (%795, %796, %var_7281)
  };
  %797(%var_7296, %var_7297, %var_7298) /* ty=(Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) */
}

def @func_16110() -> Tensor[(1760), float32] {
  @func_16108() /* ty=Tensor[(1760), float32] */
}

def @func_15125(%var_15121: Tensor[(462), uint32], %var_15122: Tensor[(8, 220), int16], %var_15123: Tensor[(8, 220), int16], %var_15124: Tensor[(156), float32]) -> (Tensor[(13, 12, 10), uint16], Tensor[(360), float64], Tensor[(210), float64], Tensor[(462), uint32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(8, 220), int8], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) {
  %833 = fn (%var_15003: Tensor[(462), uint32], %var_15004: Tensor[(8, 220), int16], %var_15010: Tensor[(8, 220), int16], %var_15116: Tensor[(156), float32]) -> (Tensor[(13, 12, 10), uint16], Tensor[(360), float64], Tensor[(210), float64], Tensor[(462), uint32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(8, 220), int8], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) {
    %798 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %799 = @func_13602() /* ty=(Tensor[(360), float64],) */;
    %800 = cast(%var_15003, dtype="uint32") /* ty=Tensor[(462), uint32] */;
    %801 = cast(%var_15004, dtype="int16") /* ty=Tensor[(8, 220), int16] */;
    %802 = reshape(%800, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint32] */;
    %803 = reshape(%801, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), int16] */;
    %804 = @func_10606(%802, %803) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) */;
    %805 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
    %806 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
    %807 = cast(%var_15004, dtype="float64") /* ty=Tensor[(8, 220), float64] */;
    %808 = atanh(%807) /* ty=Tensor[(8, 220), float64] */;
    %809 = cast(%var_15004, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
    %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(2), int32] */;
    %811 = cast(%808, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
    %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %813 = less(%811, %812) /* ty=Tensor[(8, 220), bool] */;
    %814 = cast(%var_15010, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
    %815 = shape_of(%var_15004, dtype="int32") /* ty=Tensor[(2), int32] */;
    %816 = cast(%var_15004, dtype="bool") /* ty=Tensor[(8, 220), bool] */;
    %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %818 = not_equal(%816, %817) /* ty=Tensor[(8, 220), bool] */;
    %819 = cast(%818, dtype="int8") /* ty=Tensor[(8, 220), int8] */;
    %820 = shape_of(%813, dtype="int32") /* ty=Tensor[(2), int32] */;
    %821 = cast(%813, dtype="int8") /* ty=Tensor[(8, 220), int8] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %823 = cast(%var_15116, dtype="float32") /* ty=Tensor[(156), float32] */;
    %824 = reshape(%823, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
    %825 = %798.0;
    %826 = %799.0;
    %827 = %804.2;
    %828 = %805.0;
    %829 = @func_13956() /* ty=Tensor[(840), uint8] */;
    %830 = %806.0;
    %831 = bitwise_xor(%821, %822) /* ty=Tensor[(8, 220), int8] */;
    %832 = @func_2461(%824) /* ty=Tensor[(3, 13, 4), float32] */;
    (%825, %826, %827, %var_15003, %828, %829, %830, %831, %832, %var_15116)
  };
  %833(%var_15121, %var_15122, %var_15123, %var_15124) /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(360), float64], Tensor[(210), float64], Tensor[(462), uint32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(8, 220), int8], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */
}

def @func_8511() -> (Tensor[(416), uint16],) {
  %836 = fn () -> (Tensor[(416), uint16],) {
    %834 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
    %835 = %834.2;
    (%835,)
  };
  %836() /* ty=(Tensor[(416), uint16],) */
}

def @func_12690() -> Tensor[(840), uint8] {
  @func_12688() /* ty=Tensor[(840), uint8] */
}

def @func_8995(%var_8971: Tensor[(12, 4, 14), uint64], %var_8972: Tensor[(12, 4, 14), uint64]) -> Tensor[(12, 4, 14), bool] {
  %837 = cast(%var_8972, dtype="bool") /* ty=Tensor[(12, 4, 14), bool] */;
  %838 = shape_of(%var_8971, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_8971, dtype="bool") /* ty=Tensor[(12, 4, 14), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%839, %840) /* ty=Tensor[(12, 4, 14), bool] */
}

def @func_12856(%var_12853: Tensor[(6, 3), float32], %var_12854: Tensor[(392), float32], %var_12855: Tensor[(1, 156), float32]) -> (Tensor[(840), uint8], Tensor[(1344), float32], Tensor[(972), int64], Tensor[(10, 30), uint64], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(2, 1, 9), float32], Tensor[(6, 3), float32], Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(3, 13, 4), float32], Tensor[(392), float32], Tensor[(1, 156), float32]) {
  @func_12851(%var_12853, %var_12854, %var_12855) /* ty=(Tensor[(840), uint8], Tensor[(1344), float32], Tensor[(972), int64], Tensor[(10, 30), uint64], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(2, 1, 9), float32], Tensor[(6, 3), float32], Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(3, 13, 4), float32], Tensor[(392), float32], Tensor[(1, 156), float32]) */
}

def @func_15728(%var_15685: Tensor[(210), float64], %var_15692: Tensor[(1200), float32]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(6, 6, 4), float32], Tensor[(13, 12, 10), uint16]) {
  %841 = cast(meta[relay.Constant][56] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %842 = cast(meta[relay.Constant][56] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %843 = cast(%var_15685, dtype="float64") /* ty=Tensor[(210), float64] */;
  %844 = reshape(%841, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %845 = reshape(%842, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %846 = reshape(%843, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %847 = @func_1518(%844, %845, %846) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %848 = cast(%var_15692, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %849 = cast(%var_15692, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %850 = cast(meta[relay.Constant][57] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %851 = reshape(%848, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %852 = reshape(%849, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %853 = reshape(%850, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %854 = @func_7568(%851, %852, %853) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %855 = @func_9509() /* ty=Tensor[(840), uint8] */;
  %856 = @func_15388() /* ty=Tensor[(6, 6, 4), float64] */;
  %857 = %847.2;
  %858 = %854.3;
  %859 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  %860 = @func_11173() /* ty=Tensor[(13, 12, 10), uint16] */;
  (%855, %856, %857, meta[relay.Constant][56] /* ty=Tensor[(972), int64] */, %var_15685, %858, %var_15692, meta[relay.Constant][57] /* ty=Tensor[(108), float32] */, %859, %860)
}

def @func_16927() -> (Tensor[(840), uint8],) {
  %861 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
  %862 = %861.0;
  (%862,)
}

def @func_13603() -> (Tensor[(360), float64],) {
  %864 = fn () -> (Tensor[(360), float64],) {
    %863 = @func_13202() /* ty=Tensor[(360), float64] */;
    (%863,)
  };
  %864() /* ty=(Tensor[(360), float64],) */
}

def @func_9714(%var_9674: Tensor[(3, 1, 10), int64], %var_9675: Tensor[(3, 5, 10), int64], %var_9686: Tensor[(210), float64]) -> (Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) {
  %865 = cast(%var_9674, dtype="int64") /* ty=Tensor[(3, 1, 10), int64] */;
  %866 = cast(%var_9675, dtype="int64") /* ty=Tensor[(3, 5, 10), int64] */;
  %867 = cast(%var_9686, dtype="float64") /* ty=Tensor[(210), float64] */;
  %868 = reshape(%867, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %869 = @func_9022(%868) /* ty=(Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) */;
  %870 = cast(meta[relay.Constant][58] /* ty=Tensor[(18, 54), int64] */, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %871 = cast(meta[relay.Constant][58] /* ty=Tensor[(18, 54), int64] */, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %872 = cast(%var_9686, dtype="float64") /* ty=Tensor[(210), float64] */;
  %873 = reshape(%870, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %874 = reshape(%871, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int64] */;
  %875 = reshape(%872, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %876 = @func_1518(%873, %874, %875) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64]) */;
  %877 = minimum(%865, %866) /* ty=Tensor[(3, 5, 10), int64] */;
  %878 = %869.3;
  %879 = %876.2;
  (%877, %878, %var_9686, %879, meta[relay.Constant][58] /* ty=Tensor[(18, 54), int64] */)
}

def @func_136(%var_133: Tensor[(14, 15, 1), float64]) -> Tensor[(14, 15, 1), float64] {
  %880 = cast(%var_133, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  atan(%880) /* ty=Tensor[(14, 15, 1), float64] */
}

def @func_10920() -> (Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) {
  %890 = fn () -> (Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) {
    %881 = cast(meta[relay.Constant][59] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %882 = cast(meta[relay.Constant][59] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %883 = reshape(%881, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
    %884 = reshape(%882, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), uint8] */;
    %885 = @func_7471(%883, %884) /* ty=(Tensor[(5, 15, 8), bool],) */;
    %886 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %887 = @func_10232() /* ty=Tensor[(840), uint8] */;
    %888 = %885.0;
    %889 = %886.0;
    (%887, %888, meta[relay.Constant][59] /* ty=Tensor[(600), uint8] */, %889)
  };
  %890() /* ty=(Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) */
}

def @func_16840() -> Tensor[(840), uint8] {
  %891 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %891.0
}

def @func_14617(%var_14615: Tensor[(1200), float32], %var_14616: Tensor[(210), float64]) -> (Tensor[(13, 12, 10), float64], Tensor[(6, 6, 4), float32], Tensor[(6, 6, 4), float64], uint16, Tensor[(1200), float32], Tensor[(6, 18), float32], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(840), uint8]) {
  %912 = fn (%var_14597: Tensor[(1200), float32], %var_14599: Tensor[(210), float64]) -> (Tensor[(13, 12, 10), float64], Tensor[(6, 6, 4), float32], Tensor[(6, 6, 4), float64], uint16, Tensor[(1200), float32], Tensor[(6, 18), float32], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(840), uint8]) {
    %892 = @func_13631() /* ty=Tensor[(13, 12, 10), uint16] */;
    %893 = cast(%892, dtype="float64") /* ty=Tensor[(13, 12, 10), float64] */;
    %894 = @func_10017() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %895 = cast(%var_14597, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %896 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 18), float32] */, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
    %897 = cast(%var_14599, dtype="float64") /* ty=Tensor[(210), float64] */;
    %898 = reshape(%895, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
    %899 = reshape(%896, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %900 = reshape(%897, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %901 = @func_9923(%898, %899, %900) /* ty=(Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) */;
    %902 = @func_13638() /* ty=Tensor[(6, 6, 4), float32] */;
    %903 = cast(%902, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
    %904 = reshape(%903, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
    %905 = @func_12666(%904) /* ty=(Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */;
    %906 = asin(%893) /* ty=Tensor[(13, 12, 10), float64] */;
    %907 = %894.0;
    %908 = %901.1;
    %909 = @func_9228() /* ty=Tensor[(840), uint8] */;
    %910 = %905.1;
    %911 = @func_14546() /* ty=Tensor[(840), uint8] */;
    (%906, %902, %907, %908, %var_14597, meta[relay.Constant][60] /* ty=Tensor[(6, 18), float32] */, %var_14599, %909, %910, %911)
  };
  %912(%var_14615, %var_14616) /* ty=(Tensor[(13, 12, 10), float64], Tensor[(6, 6, 4), float32], Tensor[(6, 6, 4), float64], uint16, Tensor[(1200), float32], Tensor[(6, 18), float32], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(840), uint8]) */
}

def @func_12745() -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) {
  %913 = @func_12479() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */;
  %914 = @func_12178() /* ty=(Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */;
  %915 = %913.0;
  %916 = %914.0;
  (%915, %916)
}

def @func_15519(%var_15517: Tensor[(972), int64], %var_15518: Tensor[(972), int64]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(1, 300), uint64], Tensor[(972), int16]) {
  @func_15515(%var_15517, %var_15518) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(1, 300), uint64], Tensor[(972), int16]) */
}

def @func_10329(%var_10327: Tensor[(360), float64], %var_10328: Tensor[(1760), int16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) {
  %930 = fn (%var_10289: Tensor[(360), float64], %var_10290: Tensor[(1760), int16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) {
    %917 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
    %918 = cast(%var_10289, dtype="float64") /* ty=Tensor[(360), float64] */;
    %919 = cast(%var_10290, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %920 = reshape(%918, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %921 = reshape(%919, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
    %922 = @func_8624(%920, %921) /* ty=(Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) */;
    %923 = %922.4;
    %924 = cast(%923, dtype="bool") /* ty=Tensor[(1760), bool] */;
    %925 = shape_of(%var_10290, dtype="int32") /* ty=Tensor[(1), int32] */;
    %926 = cast(%var_10290, dtype="bool") /* ty=Tensor[(1760), bool] */;
    %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?), bool] */;
    %928 = %917.0;
    %929 = logical_and(%926, %927) /* ty=Tensor[(1760), bool] */;
    (%928, %var_10289, %929)
  };
  %930(%var_10327, %var_10328) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) */
}

def @func_9177() -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) {
  @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */
}

def @func_12516(%var_12514: Tensor[(6, 140), uint8]) -> (Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(6, 140), uint8]) {
  @func_12513(%var_12514) /* ty=(Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(6, 140), uint8]) */
}

def @func_13202() -> Tensor[(360), float64] {
  %931 = @func_9757() /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) */;
  %931.2
}

def @func_16772(%var_16770: Tensor[(7, 6, 6), float32]) -> (Tensor[(7, 6, 6), float32],) {
  @func_16769(%var_16770) /* ty=(Tensor[(7, 6, 6), float32],) */
}

def @func_10715() -> Tensor[(840), uint8] {
  %933 = fn () -> Tensor[(840), uint8] {
    %932 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
    %932.0
  };
  %933() /* ty=Tensor[(840), uint8] */
}

def @func_16472() -> Tensor[(840), uint8] {
  @func_16470() /* ty=Tensor[(840), uint8] */
}

def @func_8937() -> (Tensor[(840), uint8], Tensor[(840), uint8]) {
  %934 = @func_8894() /* ty=(Tensor[(128), uint16], Tensor[(840), uint8]) */;
  %935 = %934.1;
  %936 = @func_8438() /* ty=Tensor[(840), uint8] */;
  (%935, %936)
}

def @func_16647() -> Tensor[(128), uint16] {
  %937 = @func_16007() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(128), uint16]) */;
  %937.1
}

def @func_12180() -> (Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) {
  @func_12178() /* ty=(Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */
}

def @func_9403() -> Tensor[(840), uint8] {
  @func_9401() /* ty=Tensor[(840), uint8] */
}

def @func_8721(%var_8697: Tensor[(10), float64], %var_8717: Tensor[(210, 1), float64]) -> (Tensor[(416), uint16], Tensor[(2, 1, 5), float32], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(1760), int16], Tensor[(210, 1), float64]) {
  %938 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %939 = cast(%var_8697, dtype="float64") /* ty=Tensor[(10), float64] */;
  %940 = reshape(%939, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %941 = @func_2097(%940) /* ty=(Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) */;
  %942 = cast(meta[relay.Constant][61] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %943 = cast(meta[relay.Constant][61] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %944 = cast(%var_8717, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %945 = reshape(%942, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %946 = reshape(%943, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %947 = reshape(%944, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %948 = @func_325(%945, %946, %947) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %949 = %938.0;
  %950 = %941.1;
  %951 = %948.2;
  (%949, %950, %var_8697, %951, meta[relay.Constant][61] /* ty=Tensor[(1760), int16] */, %var_8717)
}

def @func_11336() -> (Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) {
  %952 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %953 = cast(meta[relay.Constant][62] /* ty=Tensor[(416), uint16] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %954 = reshape(%953, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
  %955 = @func_4675(%954) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
  %956 = %952.0;
  %957 = %955.3;
  (%956, %957, meta[relay.Constant][62] /* ty=Tensor[(416), uint16] */)
}

def @func_12666(%var_12632: Tensor[(6, 6, 4), float64]) -> (Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) {
  %958 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %959 = %958.0;
  %960 = cast(%var_12632, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%959, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %964 = cast(%var_12632, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %965 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %966 = @func_11820() /* ty=Tensor[(6, 6, 4), float64] */;
  %967 = less(%962, %963) /* ty=Tensor[(6, 6, 4), bool] */;
  %968 = log10(%964) /* ty=Tensor[(6, 6, 4), float32] */;
  %969 = %965.0;
  (%966, %967, %968, %969)
}

def @func_17101() -> (Tensor[(840), uint8], Tensor[(972), int64], Tensor[(972), float64]) {
  %970 = @func_13083() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %971 = cast(meta[relay.Constant][63] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %972 = cast(meta[relay.Constant][63] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
  %973 = reshape(%971, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %974 = reshape(%972, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %975 = @func_15515(%973, %974) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(1, 300), uint64], Tensor[(972), int16]) */;
  %976 = %975.3;
  %977 = cast(%976, dtype="float64") /* ty=Tensor[(972), float64] */;
  %978 = %970.0;
  %979 = atan(%977) /* ty=Tensor[(972), float64] */;
  (%978, meta[relay.Constant][63] /* ty=Tensor[(972), int64] */, %979)
}

def @func_1283(%var_1281: Tensor[(15, 10, 2), uint64], %var_1282: Tensor[(15, 10, 2), uint64]) -> Tensor[(15, 10, 2), bool] {
  @func_1279(%var_1281, %var_1282) /* ty=Tensor[(15, 10, 2), bool] */
}

def @func_13083() -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) {
  %980 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
  %981 = @func_11444() /* ty=(Tensor[(840), uint8],) */;
  %982 = @func_10639() /* ty=(Tensor[(840), uint8],) */;
  %983 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %984 = %980.0;
  %985 = %981.0;
  %986 = %982.0;
  %987 = %983.0;
  %988 = @func_12200() /* ty=Tensor[(840), uint8] */;
  (%984, %985, %986, %987, %988)
}

def @func_14437() -> (Tensor[(416), uint16], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150), int64], Tensor[(210), float64]) {
  %989 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
  %990 = cast(meta[relay.Constant][64] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %991 = cast(meta[relay.Constant][65] /* ty=Tensor[(150), int64] */, dtype="int64") /* ty=Tensor[(150), int64] */;
  %992 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %993 = reshape(%990, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int64] */;
  %994 = reshape(%991, newshape=[3, 5, 10]) /* ty=Tensor[(3, 5, 10), int64] */;
  %995 = reshape(%992, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %996 = @func_9714(%993, %994, %995) /* ty=(Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) */;
  %997 = %989.2;
  %998 = %996.1;
  (%997, %998, meta[relay.Constant][64] /* ty=Tensor[(30), int64] */, meta[relay.Constant][65] /* ty=Tensor[(150), int64] */, meta[relay.Constant][66] /* ty=Tensor[(210), float64] */)
}

def @func_14159(%var_14157: Tensor[(13, 12, 10), uint16]) -> (Tensor[(13, 12, 10), float32], Tensor[(1760), uint64], Tensor[(1, 300), uint64]) {
  @func_14156(%var_14157) /* ty=(Tensor[(13, 12, 10), float32], Tensor[(1760), uint64], Tensor[(1, 300), uint64]) */
}

def @func_5457(%var_5455: Tensor[(4, 9, 2), uint32], %var_5456: Tensor[(210), float64]) -> (Tensor[(4, 9, 2), uint32], Tensor[(16, 11, 10), int16], Tensor[(1, 1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64], Tensor[(2100), float32]) {
  @func_5453(%var_5455, %var_5456) /* ty=(Tensor[(4, 9, 2), uint32], Tensor[(16, 11, 10), int16], Tensor[(1, 1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64], Tensor[(2100), float32]) */
}

def @func_15630(%var_15591: Tensor[(360), float64], %var_15598: Tensor[(4, 440), int16], %var_15608: Tensor[(128), uint16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(4, 440), bool], Tensor[(1, 16, 8), uint16], Tensor[(1560), uint16], Tensor[(128), uint64]) {
  %999 = @func_13083() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %1000 = cast(%var_15591, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1001 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 440), int16] */, dtype="int16") /* ty=Tensor[(4, 440), int16] */;
  %1002 = reshape(%1000, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1003 = reshape(%1001, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %1004 = @func_10326(%1002, %1003) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) */;
  %1005 = cast(%var_15598, dtype="bool") /* ty=Tensor[(4, 440), bool] */;
  %1006 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(4, 440), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1007 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 440), int16] */, dtype="bool") /* ty=Tensor[(4, 440), bool] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1009 = cast(meta[relay.Constant][68] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1010 = cast(%var_15608, dtype="uint16") /* ty=Tensor[(128), uint16] */;
  %1011 = cast(meta[relay.Constant][69] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1012 = reshape(%1009, newshape=[]) /* ty=uint16 */;
  %1013 = reshape(%1010, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), uint16] */;
  %1014 = reshape(%1011, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
  %1015 = @func_7295(%1012, %1013, %1014) /* ty=(Tensor[(1, 16, 8), uint16], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16]) */;
  %1016 = cast(%var_15608, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1017 = sinh(%1016) /* ty=Tensor[(128), float32] */;
  %1018 = cast(%1017, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %1019 = cast(meta[relay.Constant][68] /* ty=uint16 */, dtype="uint64") /* ty=uint64 */;
  %1020 = %999.2;
  %1021 = %1004.1;
  %1022 = not_equal(%1007, %1008) /* ty=Tensor[(4, 440), bool] */;
  %1023 = %1015.0;
  %1024 = bitwise_or(%1018, %1019) /* ty=Tensor[(128), uint64] */;
  (%1020, %1021, %var_15591, %1022, %1023, meta[relay.Constant][69] /* ty=Tensor[(1560), uint16] */, %1024)
}

def @func_8999(%var_8997: Tensor[(12, 4, 14), uint64], %var_8998: Tensor[(12, 4, 14), uint64]) -> Tensor[(12, 4, 14), bool] {
  @func_8995(%var_8997, %var_8998) /* ty=Tensor[(12, 4, 14), bool] */
}

def @func_2100(%var_2098: Tensor[(2, 1, 5), float64]) -> (Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) {
  @func_2097(%var_2098) /* ty=(Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) */
}

def @func_9719(%var_9716: Tensor[(3, 1, 10), int64], %var_9717: Tensor[(3, 5, 10), int64], %var_9718: Tensor[(210), float64]) -> (Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) {
  @func_9714(%var_9716, %var_9717, %var_9718) /* ty=(Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) */
}

def @func_11012(%var_11011: Tensor[(440, 4), int16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(440, 4), int16]) {
  %1032 = fn (%var_11008: Tensor[(440, 4), int16]) -> (Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(440, 4), int16]) {
    %1025 = cast(meta[relay.Constant][70] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1026 = cast(%var_11008, dtype="int16") /* ty=Tensor[(440, 4), int16] */;
    %1027 = reshape(%1025, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %1028 = reshape(%1026, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
    %1029 = @func_10326(%1027, %1028) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(1760), bool]) */;
    %1030 = @func_10232() /* ty=Tensor[(840), uint8] */;
    %1031 = %1029.1;
    (%1030, %1031, meta[relay.Constant][70] /* ty=Tensor[(360), float64] */, %var_11008)
  };
  %1032(%var_11011) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(440, 4), int16]) */
}

def @func_11911() -> (Tensor[(6, 6, 4), float64],) {
  %1035 = fn () -> (Tensor[(6, 6, 4), float64],) {
    %1033 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %1034 = %1033.0;
    (%1034,)
  };
  %1035() /* ty=(Tensor[(6, 6, 4), float64],) */
}

def @func_8725(%var_8723: Tensor[(10), float64], %var_8724: Tensor[(210, 1), float64]) -> (Tensor[(416), uint16], Tensor[(2, 1, 5), float32], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(1760), int16], Tensor[(210, 1), float64]) {
  @func_8721(%var_8723, %var_8724) /* ty=(Tensor[(416), uint16], Tensor[(2, 1, 5), float32], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(1760), int16], Tensor[(210, 1), float64]) */
}

def @func_16103() -> Tensor[(840), uint8] {
  %1037 = fn () -> Tensor[(840), uint8] {
    %1036 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
    %1036.0
  };
  %1037() /* ty=Tensor[(840), uint8] */
}

def @func_13367(%var_13366: Tensor[(3, 52), float32]) -> (Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(33, 9), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float32], Tensor[(12, 4, 14), bool], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(18), float32], Tensor[(392), float32], Tensor[(3, 52), float32], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16]) {
  %1077 = fn (%var_13353: Tensor[(3, 52), float32]) -> (Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(33, 9), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float32], Tensor[(12, 4, 14), bool], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(18), float32], Tensor[(392), float32], Tensor[(3, 52), float32], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16]) {
    %1038 = @func_8438() /* ty=Tensor[(840), uint8] */;
    %1039 = cast(%1038, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %1040 = reshape(%1039, newshape=[6, 140]) /* ty=Tensor[(6, 140), uint8] */;
    %1041 = @func_12513(%1040) /* ty=(Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(6, 140), uint8]) */;
    %1042 = cast(meta[relay.Constant][71] /* ty=Tensor[(33, 9), bool] */, dtype="bool") /* ty=Tensor[(33, 9), bool] */;
    %1043 = cast(meta[relay.Constant][71] /* ty=Tensor[(33, 9), bool] */, dtype="bool") /* ty=Tensor[(33, 9), bool] */;
    %1044 = cast(meta[relay.Constant][72] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1045 = cast(meta[relay.Constant][73] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %1046 = reshape(%1042, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
    %1047 = reshape(%1043, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
    %1048 = reshape(%1044, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %1049 = reshape(%1045, newshape=[672]) /* ty=Tensor[(672), uint64] */;
    %1050 = @func_11788(%1046, %1047, %1048, %1049) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(6, 6, 4), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float64], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */;
    %1051 = %1050.4;
    %1052 = cast(meta[relay.Constant][73] /* ty=Tensor[(672), uint64] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %1053 = shape_of(%1051, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1054 = cast(%1051, dtype="bool") /* ty=Tensor[(12, 4, 14), bool] */;
    %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1056 = @func_12426() /* ty=(Tensor[(840), uint8],) */;
    %1057 = cast(meta[relay.Constant][74] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1058 = reshape(%1057, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1059 = @func_11286(%1058) /* ty=(Tensor[(840), uint8], Tensor[(14, 15, 1), float64], Tensor[(72), uint32], Tensor[(210), float64]) */;
    %1060 = cast(meta[relay.Constant][75] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
    %1061 = cast(meta[relay.Constant][76] /* ty=Tensor[(392), float32] */, dtype="float32") /* ty=Tensor[(392), float32] */;
    %1062 = cast(%var_13353, dtype="float32") /* ty=Tensor[(3, 52), float32] */;
    %1063 = reshape(%1060, newshape=[6, 3]) /* ty=Tensor[(6, 3), float32] */;
    %1064 = reshape(%1061, newshape=[392]) /* ty=Tensor[(392), float32] */;
    %1065 = reshape(%1062, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
    %1066 = @func_12851(%1063, %1064, %1065) /* ty=(Tensor[(840), uint8], Tensor[(1344), float32], Tensor[(972), int64], Tensor[(10, 30), uint64], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(2, 1, 9), float32], Tensor[(6, 3), float32], Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(3, 13, 4), float32], Tensor[(392), float32], Tensor[(1, 156), float32]) */;
    %1067 = @func_12399() /* ty=(Tensor[(840), uint8],) */;
    %1068 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
    %1069 = @func_11213() /* ty=Tensor[(416), uint16] */;
    %1070 = %1041.0;
    %1071 = less(%1054, %1055) /* ty=Tensor[(12, 4, 14), bool] */;
    %1072 = %1056.0;
    %1073 = %1059.0;
    %1074 = %1066.9;
    %1075 = %1067.0;
    %1076 = %1068.0;
    (%1069, %1038, meta[relay.Constant][71] /* ty=Tensor[(33, 9), bool] */, meta[relay.Constant][72] /* ty=Tensor[(144), float64] */, %1070, %1071, %1072, %1073, meta[relay.Constant][74] /* ty=Tensor[(210), float64] */, %1074, meta[relay.Constant][75] /* ty=Tensor[(18), float32] */, meta[relay.Constant][76] /* ty=Tensor[(392), float32] */, %var_13353, %1075, %1076)
  };
  %1077(%var_13366) /* ty=(Tensor[(416), uint16], Tensor[(840), uint8], Tensor[(33, 9), bool], Tensor[(144), float64], Tensor[(6, 6, 4), float32], Tensor[(12, 4, 14), bool], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(210), float64], Tensor[(840), uint8], Tensor[(18), float32], Tensor[(392), float32], Tensor[(3, 52), float32], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16]) */
}

def @func_8153() -> (Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) {
  @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */
}

def @func_9805() -> (Tensor[(840), uint8],) {
  @func_9803() /* ty=(Tensor[(840), uint8],) */
}

def @func_329(%var_326: Tensor[(16, 11, 10), int16], %var_327: Tensor[(16, 11, 10), int16], %var_328: Tensor[(210), float64]) -> (Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) {
  %1096 = fn (%var_263: Tensor[(16, 11, 10), int16], %var_264: Tensor[(16, 11, 10), int16], %var_270: Tensor[(210), float64]) -> (Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) {
    %1078 = cast(%var_264, dtype="int16") /* ty=Tensor[(16, 11, 10), int16] */;
    %1079 = shape_of(%var_263, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1080 = cast(%var_263, dtype="int16") /* ty=Tensor[(16, 11, 10), int16] */;
    %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1082 = cast(%var_270, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1083 = reshape(%1082, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %1084 = @func_136(%1083) /* ty=Tensor[(14, 15, 1), float64] */;
    %1085 = cast(%1084, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
    %1086 = cos(%1085) /* ty=Tensor[(14, 15, 1), float64] */;
    %1087 = cast(%var_270, dtype="bool") /* ty=Tensor[(210), bool] */;
    %1088 = shape_of(%1086, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1089 = cast(%1086, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
    %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1091 = cast(%1084, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
    %1092 = reshape(%1091, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
    %1093 = logical_xor(%1080, %1081) /* ty=Tensor[(16, 11, 10), int16] */;
    %1094 = not_equal(%1089, %1090) /* ty=Tensor[(14, 15, ?), bool] */;
    %1095 = @func_136(%1092) /* ty=Tensor[(14, 15, 1), float64] */;
    (%1093, %1094, %1095)
  };
  %1096(%var_326, %var_327, %var_328) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */
}

def @func_10460() -> (uint16, Tensor[(840), uint8]) {
  @func_10458() /* ty=(uint16, Tensor[(840), uint8]) */
}

def @func_8488() -> (Tensor[(128), uint16],) {
  @func_8486() /* ty=(Tensor[(128), uint16],) */
}

def @func_9928(%var_9925: Tensor[(1200), float32], %var_9926: Tensor[(108), float32], %var_9927: Tensor[(210), float64]) -> (Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) {
  @func_9923(%var_9925, %var_9926, %var_9927) /* ty=(Tensor[(840), uint8], uint16, Tensor[(416), uint16], Tensor[(1200), float32], Tensor[(108), float32], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64], Tensor[(840), uint8]) */
}

def @func_12116(%var_12113: float32, %var_12114: Tensor[(11, 9, 13), float32], %var_12115: Tensor[(462), uint32]) -> (Tensor[(11, 9, 13), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) {
  %1110 = fn (%var_12080: float32, %var_12081: Tensor[(11, 9, 13), float32], %var_12095: Tensor[(462), uint32]) -> (Tensor[(11, 9, 13), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) {
    %1097 = cast(%var_12080, dtype="float32") /* ty=float32 */;
    %1098 = cast(%var_12081, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
    %1099 = cast(%var_12095, dtype="uint32") /* ty=Tensor[(462), uint32] */;
    %1100 = cast(meta[relay.Constant][77] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %1101 = reshape(%1099, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint32] */;
    %1102 = reshape(%1100, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), int16] */;
    %1103 = @func_10606(%1101, %1102) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32], Tensor[(210), float64], Tensor[(21, 9), float64], Tensor[(1760, 1), int16]) */;
    %1104 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
    %1105 = @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */;
    %1106 = power(%1097, %1098) /* ty=Tensor[(11, 9, 13), float32] */;
    %1107 = %1103.0;
    %1108 = %1104.0;
    %1109 = %1105.0;
    (%1106, %1107, %var_12095, meta[relay.Constant][77] /* ty=Tensor[(1760), int16] */, %1108, %1109)
  };
  %1110(%var_12113, %var_12114, %var_12115) /* ty=(Tensor[(11, 9, 13), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */
}

def @func_15515(%var_15482: Tensor[(972), int64], %var_15497: Tensor[(972), int64]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(1, 300), uint64], Tensor[(972), int16]) {
  %1111 = cast(%var_15482, dtype="int64") /* ty=Tensor[(972), int64] */;
  %1112 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 300), uint64] */, dtype="uint64") /* ty=Tensor[(1, 300), uint64] */;
  %1113 = reshape(%1111, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %1114 = reshape(%1112, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %1115 = @func_12372(%1113, %1114) /* ty=(Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) */;
  %1116 = cast(%var_15497, dtype="int16") /* ty=Tensor[(972), int16] */;
  %1117 = shape_of(%var_15482, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1118 = cast(%var_15482, dtype="int16") /* ty=Tensor[(972), int16] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1120 = @func_12077() /* ty=Tensor[(840), uint8] */;
  %1121 = %1115.0;
  %1122 = subtract(%1118, %1119) /* ty=Tensor[(972), int16] */;
  (%1120, %1121, meta[relay.Constant][78] /* ty=Tensor[(1, 300), uint64] */, %1122)
}

def @func_11198(%var_11196: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(1, 3, 2), float64], Tensor[(18, 54), int64], Tensor[(210), float64], Tensor[(6, 6, 4), float64]) {
  @func_11195(%var_11196) /* ty=(Tensor[(840), uint8], Tensor[(1, 3, 2), float64], Tensor[(18, 54), int64], Tensor[(210), float64], Tensor[(6, 6, 4), float64]) */
}

def @func_12688() -> Tensor[(840), uint8] {
  @func_9228() /* ty=Tensor[(840), uint8] */
}

def @func_4931(%var_4929: int16, %var_4930: Tensor[(1, 15, 9), int16]) -> (Tensor[(1, 15, 9), bool],) {
  %1126 = fn (%var_4923: int16, %var_4924: Tensor[(1, 15, 9), int16]) -> (Tensor[(1, 15, 9), bool],) {
    %1123 = cast(%var_4923, dtype="bool") /* ty=bool */;
    %1124 = cast(%var_4924, dtype="bool") /* ty=Tensor[(1, 15, 9), bool] */;
    %1125 = greater_equal(%1123, %1124) /* ty=Tensor[(1, 15, 9), bool] */;
    (%1125,)
  };
  %1126(%var_4929, %var_4930) /* ty=(Tensor[(1, 15, 9), bool],) */
}

def @func_12376(%var_12374: Tensor[(972), int64], %var_12375: Tensor[(300), uint64]) -> (Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) {
  @func_12372(%var_12374, %var_12375) /* ty=(Tensor[(840), uint8], Tensor[(18, 54), int64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16]) */
}

def @func_16448(%var_16446: Tensor[(297), bool]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(297), bool], Tensor[(144), float64], Tensor[(672), uint64]) {
  @func_16445(%var_16446) /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float64], Tensor[(297), bool], Tensor[(144), float64], Tensor[(672), uint64]) */
}

def @func_6288(%var_6284: Tensor[(12, 9, 16), float32], %var_6285: int16, %var_6286: Tensor[(392), float32], %var_6287: Tensor[(156), float32]) -> (Tensor[(12, 9, 16), float32], Tensor[(1, 15, 9), bool], int16, Tensor[(135), int16], Tensor[(156), float32], Tensor[(392), float32], Tensor[(156), float32]) {
  @func_6282(%var_6284, %var_6285, %var_6286, %var_6287) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(1, 15, 9), bool], int16, Tensor[(135), int16], Tensor[(156), float32], Tensor[(392), float32], Tensor[(156), float32]) */
}

def @func_16634(%var_16632: Tensor[(144), float64]) -> (Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(144), float64]) {
  @func_16631(%var_16632) /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(144), float64]) */
}

def @func_2097(%var_2090: Tensor[(2, 1, 5), float64]) -> (Tensor[(2, 1, 5), float64], Tensor[(2, 1, 5), float32]) {
  %1127 = cast(%var_2090, dtype="float64") /* ty=Tensor[(2, 1, 5), float64] */;
  %1128 = cast(%var_2090, dtype="float32") /* ty=Tensor[(2, 1, 5), float32] */;
  %1129 = acos(%1127) /* ty=Tensor[(2, 1, 5), float64] */;
  %1130 = rsqrt(%1128) /* ty=Tensor[(2, 1, 5), float32] */;
  (%1129, %1130)
}

def @func_12077() -> Tensor[(840), uint8] {
  @func_10676() /* ty=Tensor[(840), uint8] */
}

def @func_9458(%var_9456: Tensor[(1344), float32], %var_9457: Tensor[(300), uint64]) -> (Tensor[(416), uint16], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16], uint16) {
  @func_9454(%var_9456, %var_9457) /* ty=(Tensor[(416), uint16], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(300), uint64], Tensor[(1760), int16], uint16) */
}

def @func_16842() -> Tensor[(840), uint8] {
  @func_16840() /* ty=Tensor[(840), uint8] */
}

def @func_16305() -> Tensor[(840), uint8] {
  @func_16303() /* ty=Tensor[(840), uint8] */
}

def @func_16303() -> Tensor[(840), uint8] {
  %1131 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %1131.0
}

def @func_6711(%var_6709: Tensor[(9, 5, 4), int64], %var_6710: Tensor[(9, 5, 4), int64]) -> (Tensor[(9, 5, 4), bool], Tensor[(9, 5, 4), float64]) {
  @func_6707(%var_6709, %var_6710) /* ty=(Tensor[(9, 5, 4), bool], Tensor[(9, 5, 4), float64]) */
}

def @func_1279(%var_1273: Tensor[(15, 10, 2), uint64], %var_1274: Tensor[(15, 10, 2), uint64]) -> Tensor[(15, 10, 2), bool] {
  %1132 = cast(%var_1274, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %1133 = shape_of(%var_1273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(%var_1273, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1134, %1135) /* ty=Tensor[(15, 10, 2), bool] */
}

def @func_8486() -> (Tensor[(128), uint16],) {
  %1136 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
  %1137 = %1136.3;
  (%1137,)
}

def @func_11195(%var_11181: Tensor[(210), float64]) -> (Tensor[(840), uint8], Tensor[(1, 3, 2), float64], Tensor[(18, 54), int64], Tensor[(210), float64], Tensor[(6, 6, 4), float64]) {
  %1138 = cast(meta[relay.Constant][79] /* ty=Tensor[(18, 54), int64] */, dtype="int64") /* ty=Tensor[(18, 54), int64] */;
  %1139 = cast(%var_11181, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1140 = reshape(%1138, newshape=[972]) /* ty=Tensor[(972), int64] */;
  %1141 = reshape(%1139, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1142 = @func_9968(%1140, %1141) /* ty=(Tensor[(1, 3, 2), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(210), float64]) */;
  %1143 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1144 = @func_8438() /* ty=Tensor[(840), uint8] */;
  %1145 = %1142.0;
  %1146 = %1143.0;
  (%1144, %1145, meta[relay.Constant][79] /* ty=Tensor[(18, 54), int64] */, %var_11181, %1146)
}

def @func_16418() -> (uint16,) {
  %1149 = fn () -> (uint16,) {
    %1147 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
    %1148 = %1147.2;
    (%1148,)
  };
  %1149() /* ty=(uint16,) */
}

def @func_14371() -> (uint16, Tensor[(1760), float32]) {
  %1150 = @func_10458() /* ty=(uint16, Tensor[(840), uint8]) */;
  %1151 = @func_12683() /* ty=Tensor[(1760), int16] */;
  %1152 = cast(%1151, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %1153 = %1150.0;
  %1154 = cosh(%1152) /* ty=Tensor[(1760), float32] */;
  (%1153, %1154)
}

def @func_16261() -> (Tensor[(840), uint8], Tensor[(210), float64]) {
  %1155 = @func_14437() /* ty=(Tensor[(416), uint16], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150), int64], Tensor[(210), float64]) */;
  %1156 = @func_14724() /* ty=Tensor[(840), uint8] */;
  %1157 = %1155.4;
  (%1156, %1157)
}

def @func_11709(%var_11705: Tensor[(4, 11, 15), float32], %var_11706: Tensor[(12, 100), float32], %var_11707: Tensor[(108), float32], %var_11708: Tensor[(600), uint8]) -> (Tensor[(4, 11, 15), bool], Tensor[(12, 100), float32], Tensor[(108), float32], Tensor[(416), uint16], Tensor[(14, 15, ?), float64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(4, 11, 15), uint8], Tensor[(189), float64]) {
  @func_11703(%var_11705, %var_11706, %var_11707, %var_11708) /* ty=(Tensor[(4, 11, 15), bool], Tensor[(12, 100), float32], Tensor[(108), float32], Tensor[(416), uint16], Tensor[(14, 15, ?), float64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(4, 11, 15), uint8], Tensor[(189), float64]) */
}

def @func_4567(%var_4565: Tensor[(5, 9, 8), float64]) -> Tensor[(5, 9, 8), float64] {
  @func_4564(%var_4565) /* ty=Tensor[(5, 9, 8), float64] */
}

def @func_2461(%var_2446: Tensor[(3, 13, 4), float32]) -> Tensor[(3, 13, 4), float32] {
  %1158 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(1, 13, 4), float32] */;
  %1159 = cast(%var_2446, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  mod(%1158, %1159) /* ty=Tensor[(3, 13, 4), float32] */
}

def @func_8337() -> (Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) {
  %1166 = fn () -> (Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) {
    %1160 = @func_8151() /* ty=(Tensor[(6, 14, 16), float32], Tensor[(13, 12, 10), uint16], uint16, Tensor[(128), uint16], Tensor[(1560), uint16]) */;
    %1161 = cast(meta[relay.Constant][81] /* ty=Tensor[(416), uint16] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
    %1162 = reshape(%1161, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
    %1163 = @func_4675(%1162) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
    %1164 = %1160.1;
    %1165 = %1163.4;
    (%1164, %1165, meta[relay.Constant][81] /* ty=Tensor[(416), uint16] */)
  };
  %1166() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */
}

def @func_9100() -> (Tensor[(840), uint8],) {
  %1169 = fn () -> (Tensor[(840), uint8],) {
    %1167 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
    %1168 = %1167.0;
    (%1168,)
  };
  %1169() /* ty=(Tensor[(840), uint8],) */
}

def @func_12513(%var_12511: Tensor[(6, 140), uint8]) -> (Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(6, 140), uint8]) {
  %1170 = cast(%var_12511, dtype="uint8") /* ty=Tensor[(6, 140), uint8] */;
  %1171 = reshape(%1170, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
  %1172 = @func_2023(%1171) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
  %1173 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
  %1174 = %1172.1;
  (%1173, %1174, %var_12511)
}

def @func_5453(%var_5412: Tensor[(4, 9, 2), uint32], %var_5440: Tensor[(210), float64]) -> (Tensor[(4, 9, 2), uint32], Tensor[(16, 11, 10), int16], Tensor[(1, 1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64], Tensor[(2100), float32]) {
  %1175 = cast(meta[relay.Constant][82] /* ty=Tensor[(1, 9, 1), uint32] */, dtype="uint32") /* ty=Tensor[(1, 9, 1), uint32] */;
  %1176 = cast(%var_5412, dtype="uint32") /* ty=Tensor[(4, 9, 2), uint32] */;
  %1177 = cast(meta[relay.Constant][83] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %1178 = cast(meta[relay.Constant][83] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %1179 = cast(%var_5440, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1180 = reshape(%1177, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1181 = reshape(%1178, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), int16] */;
  %1182 = reshape(%1179, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1183 = @func_325(%1180, %1181, %1182) /* ty=(Tensor[(16, 11, 10), int16], Tensor[(14, 15, ?), bool], Tensor[(14, 15, 1), float64]) */;
  %1184 = cast(meta[relay.Constant][84] /* ty=Tensor[(2100), float32] */, dtype="float32") /* ty=Tensor[(2100), float32] */;
  %1185 = cast(meta[relay.Constant][83] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
  %1186 = cast(%var_5440, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1187 = reshape(%1184, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float32] */;
  %1188 = reshape(%1185, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %1189 = reshape(%1186, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1190 = @func_438(%1187, %1188, %1189) /* ty=(Tensor[(15, 14, 10), float32], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(14, 15, 1), float64]) */;
  %1191 = bitwise_and(%1175, %1176) /* ty=Tensor[(4, 9, 2), uint32] */;
  %1192 = %1183.0;
  %1193 = %1190.4;
  (%1191, %1192, meta[relay.Constant][83] /* ty=Tensor[(1, 1760), int16] */, %var_5440, %1193, meta[relay.Constant][84] /* ty=Tensor[(2100), float32] */)
}

def @func_12987() -> (Tensor[(6, 6, 4), float32],) {
  %1195 = fn () -> (Tensor[(6, 6, 4), float32],) {
    %1194 = @func_10069() /* ty=Tensor[(6, 6, 4), float32] */;
    (%1194,)
  };
  %1195() /* ty=(Tensor[(6, 6, 4), float32],) */
}

def @func_11821() -> Tensor[(6, 6, 4), float64] {
  %1197 = fn () -> Tensor[(6, 6, 4), float64] {
    %1196 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %1196.0
  };
  %1197() /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_4786(%var_4784: Tensor[(7, 8, 7), float32], %var_4785: Tensor[(156), float32]) -> (Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) {
  %1206 = fn (%var_4770: Tensor[(7, 8, 7), float32], %var_4780: Tensor[(156), float32]) -> (Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) {
    %1198 = cast(meta[relay.Constant][85] /* ty=Tensor[(7, 8, 7), float32] */, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
    %1199 = shape_of(%var_4770, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1200 = cast(%var_4770, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
    %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1202 = cast(%var_4780, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1203 = reshape(%1202, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float32] */;
    %1204 = not_equal(%1200, %1201) /* ty=Tensor[(7, 8, 7), bool] */;
    %1205 = @func_2461(%1203) /* ty=Tensor[(3, 13, 4), float32] */;
    (%1204, %1205, %var_4780)
  };
  %1206(%var_4784, %var_4785) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */
}

def @func_9511() -> Tensor[(840), uint8] {
  @func_9509() /* ty=Tensor[(840), uint8] */
}

def @func_6505(%var_6504: Tensor[(15, 12, 13), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(5, 60), uint64], Tensor[(1, 1760), int16]) {
  %1225 = fn (%var_6476: Tensor[(15, 12, 13), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(5, 60), uint64], Tensor[(1, 1760), int16]) {
    %1207 = cast(%var_6476, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
    %1208 = cast(meta[relay.Constant][86] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %1209 = cast(meta[relay.Constant][86] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %1210 = cast(meta[relay.Constant][87] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1211 = cast(meta[relay.Constant][88] /* ty=Tensor[(972), int64] */, dtype="int64") /* ty=Tensor[(972), int64] */;
    %1212 = cast(meta[relay.Constant][89] /* ty=Tensor[(5, 60), uint64] */, dtype="uint64") /* ty=Tensor[(5, 60), uint64] */;
    %1213 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
    %1214 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 1760), int16] */, dtype="int16") /* ty=Tensor[(1, 1760), int16] */;
    %1215 = reshape(%1208, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
    %1216 = reshape(%1209, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
    %1217 = reshape(%1210, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1218 = reshape(%1211, newshape=[972]) /* ty=Tensor[(972), int64] */;
    %1219 = reshape(%1212, newshape=[300]) /* ty=Tensor[(300), uint64] */;
    %1220 = reshape(%1213, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
    %1221 = reshape(%1214, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
    %1222 = @func_2710(%1215, %1216, %1217, %1218, %1219, %1220, %1221) /* ty=(Tensor[(14, 16, 6), bool], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(2, 1, 5), float64], Tensor[(10), float64], Tensor[(14, 15, 1), float64], Tensor[(14, 15, 1), float64], Tensor[(972), int64], Tensor[(2, 1, 5), float64], Tensor[(15, 10, 2), bool], Tensor[(300), uint64], Tensor[(210), float64], Tensor[(2100), float32], Tensor[(3, 13, 4), float32], Tensor[(39, 4), float32], Tensor[(14, 15, 1), float64], Tensor[(1760), bool], Tensor[(9, 12, 9), float64]) */;
    %1223 = sigmoid(%1207) /* ty=Tensor[(15, 12, 13), float32] */;
    %1224 = %1222.8;
    (%1223, %1224, meta[relay.Constant][86] /* ty=Tensor[(1344), float32] */, meta[relay.Constant][87] /* ty=Tensor[(210), float64] */, meta[relay.Constant][88] /* ty=Tensor[(972), int64] */, meta[relay.Constant][89] /* ty=Tensor[(5, 60), uint64] */, meta[relay.Constant][90] /* ty=Tensor[(1, 1760), int16] */)
  };
  %1225(%var_6504) /* ty=(Tensor[(15, 12, 13), float32], Tensor[(2, 1, 5), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(972), int64], Tensor[(5, 60), uint64], Tensor[(1, 1760), int16]) */
}

def @func_9651(%var_9642: Tensor[(6, 6, 4), float64]) -> Tensor[(6, 6, 4), float64] {
  %1226 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
  %1227 = %1226.0;
  %1228 = cast(%var_9642, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %1229 = shape_of(%1227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1230 = cast(%1227, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %1231 = dyn.reshape(%1228, %1229, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%1230, %1231) /* ty=Tensor[(6, 6, 4), float64] */
}

def @func_11214() -> Tensor[(416), uint16] {
  %1233 = fn () -> Tensor[(416), uint16] {
    %1232 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
    %1232.3
  };
  %1233() /* ty=Tensor[(416), uint16] */
}

def @func_14548() -> Tensor[(840), uint8] {
  @func_14546() /* ty=Tensor[(840), uint8] */
}

def @func_13870() -> (Tensor[(840), uint8],) {
  %1234 = @func_9401() /* ty=Tensor[(840), uint8] */;
  (%1234,)
}

def @func_14638(%var_14637: Tensor[(1694), float32]) -> (Tensor[(5, 15, 8), bool], Tensor[(14, 11, 11), float32], Tensor[(1694), float32]) {
  %1241 = fn (%var_14632: Tensor[(1694), float32]) -> (Tensor[(5, 15, 8), bool], Tensor[(14, 11, 11), float32], Tensor[(1694), float32]) {
    %1235 = @func_10919() /* ty=(Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) */;
    %1236 = cast(%var_14632, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %1237 = reshape(%1236, newshape=[14, 11, 11]) /* ty=Tensor[(14, 11, 11), float32] */;
    %1238 = @func_10843(%1237) /* ty=(Tensor[(14, 11, 11), float32],) */;
    %1239 = %1235.1;
    %1240 = %1238.0;
    (%1239, %1240, %var_14632)
  };
  %1241(%var_14637) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(14, 11, 11), float32], Tensor[(1694), float32]) */
}

def @func_9175() -> (Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) {
  %1242 = @func_9099() /* ty=(Tensor[(840), uint8],) */;
  %1243 = cast(meta[relay.Constant][91] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1244 = cast(meta[relay.Constant][91] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1245 = reshape(%1243, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1246 = reshape(%1244, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1247 = @func_5346(%1245, %1246) /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %1248 = @func_8510() /* ty=(Tensor[(416), uint16],) */;
  %1249 = %1242.0;
  %1250 = %1247.0;
  %1251 = %1248.0;
  (%1249, %1250, meta[relay.Constant][91] /* ty=Tensor[(1560), uint16] */, %1251)
}

def @func_15918() -> Tensor[(13, 12, 10), uint16] {
  %1252 = @func_9491() /* ty=(Tensor[(6, 6, 4), float64], Tensor[(13, 12, 10), uint16]) */;
  %1252.1
}

def @func_6707(%var_6699: Tensor[(9, 5, 4), int64], %var_6700: Tensor[(9, 5, 4), int64]) -> (Tensor[(9, 5, 4), bool], Tensor[(9, 5, 4), float64]) {
  %1253 = cast(%var_6700, dtype="bool") /* ty=Tensor[(9, 5, 4), bool] */;
  %1254 = shape_of(%var_6699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1255 = cast(%var_6699, dtype="bool") /* ty=Tensor[(9, 5, 4), bool] */;
  %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1257 = cast(%var_6699, dtype="float64") /* ty=Tensor[(9, 5, 4), float64] */;
  %1258 = equal(%1255, %1256) /* ty=Tensor[(9, 5, 4), bool] */;
  %1259 = asin(%1257) /* ty=Tensor[(9, 5, 4), float64] */;
  (%1258, %1259)
}

def @func_14726() -> Tensor[(840), uint8] {
  @func_14724() /* ty=Tensor[(840), uint8] */
}

def @func_7572(%var_7569: Tensor[(15, 10, 8), float32], %var_7570: Tensor[(15, 10, 8), float32], %var_7571: Tensor[(108), float32]) -> (Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) {
  %1273 = fn (%var_7535: Tensor[(15, 10, 8), float32], %var_7536: Tensor[(15, 10, 8), float32], %var_7543: Tensor[(108), float32]) -> (Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) {
    %1260 = cast(%var_7536, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
    %1261 = shape_of(%var_7535, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1262 = cast(%var_7535, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
    %1263 = dyn.reshape(%1260, %1261, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1264 = cast(%var_7543, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1265 = reshape(%1264, newshape=[4, 3, 9]) /* ty=Tensor[(4, 3, 9), float32] */;
    %1266 = @func_5540(%1265) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) */;
    %1267 = %1266.2;
    %1268 = cast(%1267, dtype="uint16") /* ty=Tensor[(416), uint16] */;
    %1269 = reshape(%1268, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
    %1270 = @func_4675(%1269) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
    %1271 = divide(%1262, %1263) /* ty=Tensor[(15, 10, 8), float32] */;
    %1272 = %1270.2;
    (%1271, %1267, %var_7543, %1272)
  };
  %1273(%var_7569, %var_7570, %var_7571) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */
}

def @func_11125(%var_11124: Tensor[(672), uint64]) -> (Tensor[(6, 6, 4), bool], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) {
  %1288 = fn (%var_11111: Tensor[(672), uint64]) -> (Tensor[(6, 6, 4), bool], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) {
    %1274 = @func_10656() /* ty=(Tensor[(6, 6, 4), float64],) */;
    %1275 = %1274.0;
    %1276 = cast(%1275, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
    %1277 = tan(%1276) /* ty=Tensor[(6, 6, 4), float64] */;
    %1278 = cast(%1277, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
    %1279 = shape_of(%1275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1280 = cast(%1275, dtype="bool") /* ty=Tensor[(6, 6, 4), bool] */;
    %1281 = dyn.reshape(%1278, %1279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1282 = cast(%var_11111, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %1283 = cast(%var_11111, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %1284 = reshape(%1282, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
    %1285 = reshape(%1283, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), uint64] */;
    %1286 = greater(%1280, %1281) /* ty=Tensor[(6, 6, 4), bool] */;
    %1287 = @func_8995(%1284, %1285) /* ty=Tensor[(12, 4, 14), bool] */;
    (%1286, %1287, %var_11111)
  };
  %1288(%var_11124) /* ty=(Tensor[(6, 6, 4), bool], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */
}

def @func_13872() -> (Tensor[(840), uint8],) {
  @func_13870() /* ty=(Tensor[(840), uint8],) */
}

def @func_14050() -> (Tensor[(6, 6, 4), float32], Tensor[(9, 3, 7), float64], Tensor[(60, 14), uint8]) {
  %1289 = @func_12986() /* ty=(Tensor[(6, 6, 4), float32],) */;
  %1290 = cast(meta[relay.Constant][92] /* ty=Tensor[(60, 14), uint8] */, dtype="uint8") /* ty=Tensor[(60, 14), uint8] */;
  %1291 = reshape(%1290, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), uint8] */;
  %1292 = @func_2023(%1291) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */;
  %1293 = %1289.0;
  %1294 = %1292.1;
  (%1293, %1294, meta[relay.Constant][92] /* ty=Tensor[(60, 14), uint8] */)
}

def @func_14301(%var_14226: Tensor[(1200), float32], %var_14227: Tensor[(6, 18), float32], %var_14247: Tensor[(672), uint64], %var_14263: Tensor[(6, 18), float32]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(16, 2, 13), float64], Tensor[(1200), float32], Tensor[(840), uint8], Tensor[(6, 6, 4), bool], Tensor[(672), uint64], Tensor[(6, 18), float64], Tensor[(1560), uint16]) {
  %1295 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
  %1296 = cast(%var_14226, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %1297 = cast(%var_14226, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %1298 = cast(%var_14227, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %1299 = reshape(%1296, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %1300 = reshape(%1297, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %1301 = reshape(%1298, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1302 = @func_7568(%1299, %1300, %1301) /* ty=(Tensor[(15, 10, 8), float32], Tensor[(416), uint16], Tensor[(108), float32], Tensor[(16, 2, 13), float64]) */;
  %1303 = @func_10919() /* ty=(Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(6, 6, 4), float64]) */;
  %1304 = cast(%var_14247, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %1305 = reshape(%1304, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %1306 = @func_11123(%1305) /* ty=(Tensor[(6, 6, 4), bool], Tensor[(12, 4, 14), bool], Tensor[(672), uint64]) */;
  %1307 = cast(%var_14263, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %1308 = shape_of(%var_14227, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1309 = cast(%var_14227, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1311 = subtract(%1309, %1310) /* ty=Tensor[(6, 18), uint8] */;
  %1312 = cast(%var_14263, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
  %1313 = shape_of(%1311, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1314 = cast(%1311, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
  %1315 = dyn.reshape(%1312, %1313, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1316 = @func_9175() /* ty=(Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(416), uint16]) */;
  %1317 = @func_8438() /* ty=Tensor[(840), uint8] */;
  %1318 = %1295.0;
  %1319 = %1302.3;
  %1320 = %1303.0;
  %1321 = %1306.0;
  %1322 = floor_mod(%1314, %1315) /* ty=Tensor[(6, 18), float64] */;
  %1323 = %1316.2;
  (%1317, %1318, %1319, %var_14226, %1320, %1321, %var_14247, %1322, %1323)
}

def @func_15257() -> Tensor[(416), uint16] {
  @func_11213() /* ty=Tensor[(416), uint16] */
}

def @func_12400() -> (Tensor[(840), uint8],) {
  %1326 = fn () -> (Tensor[(840), uint8],) {
    %1324 = @func_10414() /* ty=(Tensor[(840), uint8],) */;
    %1325 = %1324.0;
    (%1325,)
  };
  %1326() /* ty=(Tensor[(840), uint8],) */
}

def @func_15326() -> (Tensor[(840), uint8],) {
  @func_15324() /* ty=(Tensor[(840), uint8],) */
}

def @func_8795() -> (Tensor[(840), uint8],) {
  %1329 = fn () -> (Tensor[(840), uint8],) {
    %1327 = @func_8336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(840), uint8], Tensor[(416), uint16]) */;
    %1328 = %1327.1;
    (%1328,)
  };
  %1329() /* ty=(Tensor[(840), uint8],) */
}

def @func_15153(%var_15152: int8) -> (Tensor[(1, 14, 11), int8], Tensor[(840), uint8]) {
  %1335 = fn (%var_15136: int8) -> (Tensor[(1, 14, 11), int8], Tensor[(840), uint8]) {
    %1330 = cast(%var_15136, dtype="int8") /* ty=int8 */;
    %1331 = cast(meta[relay.Constant][93] /* ty=Tensor[(1, 14, 11), int8] */, dtype="int8") /* ty=Tensor[(1, 14, 11), int8] */;
    %1332 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
    %1333 = multiply(%1330, %1331) /* ty=Tensor[(1, 14, 11), int8] */;
    %1334 = %1332.0;
    (%1333, %1334)
  };
  %1335(%var_15152) /* ty=(Tensor[(1, 14, 11), int8], Tensor[(840), uint8]) */
}

def @func_11338() -> (Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) {
  @func_11336() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(1760), int16], Tensor[(416), uint16]) */
}

def @func_17029() -> (Tensor[(840), uint8],) {
  %1336 = @func_16102() /* ty=Tensor[(840), uint8] */;
  (%1336,)
}

def @func_13549(%var_13546: Tensor[(30), int64], %var_13547: Tensor[(150, 1), int64], %var_13548: Tensor[(210), float64]) -> (Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150, 1), int64], Tensor[(210), float64], Tensor[(210), float64]) {
  %1350 = fn (%var_13535: Tensor[(30), int64], %var_13536: Tensor[(150, 1), int64], %var_13537: Tensor[(210), float64]) -> (Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150, 1), int64], Tensor[(210), float64], Tensor[(210), float64]) {
    %1337 = cast(%var_13535, dtype="int64") /* ty=Tensor[(30), int64] */;
    %1338 = cast(%var_13536, dtype="int64") /* ty=Tensor[(150, 1), int64] */;
    %1339 = cast(%var_13537, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1340 = reshape(%1337, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int64] */;
    %1341 = reshape(%1338, newshape=[3, 5, 10]) /* ty=Tensor[(3, 5, 10), int64] */;
    %1342 = reshape(%1339, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1343 = @func_9714(%1340, %1341, %1342) /* ty=(Tensor[(3, 5, 10), int64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(18, 54), int64]) */;
    %1344 = %1343.2;
    %1345 = cast(%1344, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1346 = reshape(%1345, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1347 = @func_9022(%1346) /* ty=(Tensor[(840), uint8], Tensor[(2100), float32], Tensor[(1760), int16], Tensor[(210), float64]) */;
    %1348 = @func_13108() /* ty=Tensor[(6, 6, 4), float64] */;
    %1349 = %1347.3;
    (%1348, %1344, %var_13535, %var_13536, %var_13537, %1349)
  };
  %1350(%var_13546, %var_13547, %var_13548) /* ty=(Tensor[(6, 6, 4), float64], Tensor[(210), float64], Tensor[(30), int64], Tensor[(150, 1), int64], Tensor[(210), float64], Tensor[(210), float64]) */
}

def @func_7450(%var_7412: Tensor[(2, 16, 12), float64]) -> (Tensor[(13, 12, 10), uint16], Tensor[(1560), uint16], Tensor[(2, 16, 12), float32]) {
  %1351 = cast(meta[relay.Constant][94] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1352 = cast(meta[relay.Constant][94] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1353 = reshape(%1351, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1354 = reshape(%1352, newshape=[13, 12, 10]) /* ty=Tensor[(13, 12, 10), uint16] */;
  %1355 = @func_5346(%1353, %1354) /* ty=(Tensor[(13, 12, 10), uint16],) */;
  %1356 = cast(%var_7412, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
  %1357 = sigmoid(%1356) /* ty=Tensor[(2, 16, 12), float64] */;
  %1358 = cast(%1357, dtype="float32") /* ty=Tensor[(2, 16, 12), float32] */;
  %1359 = %1355.0;
  %1360 = cosh(%1358) /* ty=Tensor[(2, 16, 12), float32] */;
  (%1359, meta[relay.Constant][94] /* ty=Tensor[(1560), uint16] */, %1360)
}

def @func_9759() -> (Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) {
  @func_9757() /* ty=(Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) */
}

def @func_9153(%var_9150: Tensor[(18, 54), int64], %var_9151: Tensor[(300), uint64], %var_9152: Tensor[(1760), int16]) -> (Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) {
  @func_9148(%var_9150, %var_9151, %var_9152) /* ty=(Tensor[(416), uint16], Tensor[(416), uint16], Tensor[(210), float64], Tensor[(1344), float32], Tensor[(210), float64], Tensor[(18, 54), int64], Tensor[(300), uint64], Tensor[(1760), int16], Tensor[(840), uint8]) */
}

def @func_9063() -> (Tensor[(840), uint8],) {
  %1363 = fn () -> (Tensor[(840), uint8],) {
    %1361 = @func_8894() /* ty=(Tensor[(128), uint16], Tensor[(840), uint8]) */;
    %1362 = %1361.1;
    (%1362,)
  };
  %1363() /* ty=(Tensor[(840), uint8],) */
}

def @func_10017() -> (Tensor[(6, 6, 4), float64],) {
  %1364 = @func_9044() /* ty=(Tensor[(6, 6, 4), float64],) */;
  %1365 = %1364.0;
  %1366 = cast(%1365, dtype="float64") /* ty=Tensor[(6, 6, 4), float64] */;
  %1367 = sin(%1366) /* ty=Tensor[(6, 6, 4), float64] */;
  (%1367,)
}

def @func_15384(%var_15383: Tensor[(15, 9), int16]) -> (Tensor[(840), uint8], Tensor[(1, 15, 9), bool], int16, Tensor[(15, 9), int16]) {
  %1375 = fn (%var_15377: Tensor[(15, 9), int16]) -> (Tensor[(840), uint8], Tensor[(1, 15, 9), bool], int16, Tensor[(15, 9), int16]) {
    %1368 = cast(meta[relay.Constant][95] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1369 = cast(%var_15377, dtype="int16") /* ty=Tensor[(15, 9), int16] */;
    %1370 = reshape(%1368, newshape=[]) /* ty=int16 */;
    %1371 = reshape(%1369, newshape=[1, 15, 9]) /* ty=Tensor[(1, 15, 9), int16] */;
    %1372 = @func_4928(%1370, %1371) /* ty=(Tensor[(1, 15, 9), bool],) */;
    %1373 = @func_8438() /* ty=Tensor[(840), uint8] */;
    %1374 = %1372.0;
    (%1373, %1374, meta[relay.Constant][95] /* ty=int16 */, %var_15377)
  };
  %1375(%var_15383) /* ty=(Tensor[(840), uint8], Tensor[(1, 15, 9), bool], int16, Tensor[(15, 9), int16]) */
}

def @func_10019() -> (Tensor[(6, 6, 4), float64],) {
  @func_10017() /* ty=(Tensor[(6, 6, 4), float64],) */
}

def @func_2025(%var_2024: Tensor[(7, 15, 8), uint8]) -> (Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) {
  %1387 = fn (%var_2002: Tensor[(7, 15, 8), uint8]) -> (Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) {
    %1376 = cast(meta[relay.Constant][96] /* ty=Tensor[(7, 15, 8), uint8] */, dtype="uint8") /* ty=Tensor[(7, 15, 8), uint8] */;
    %1377 = shape_of(%var_2002, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1378 = cast(%var_2002, dtype="uint8") /* ty=Tensor[(7, 15, 8), uint8] */;
    %1379 = dyn.reshape(%1376, %1377, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1380 = cast(meta[relay.Constant][97] /* ty=Tensor[(189), float64] */, dtype="float64") /* ty=Tensor[(189), float64] */;
    %1381 = cast(meta[relay.Constant][98] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %1382 = reshape(%1380, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float64] */;
    %1383 = reshape(%1381, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
    %1384 = @func_482(%1382, %1383) /* ty=(Tensor[(9, 3, 7), float64], Tensor[(14, 15, 1), float64], Tensor[(210), float64], Tensor[(14, 15, ?), bool], Tensor[(4, 440), int16], Tensor[(9, 3, 7), float64]) */;
    %1385 = bitwise_xor(%1378, %1379) /* ty=Tensor[(7, 15, 8), uint8] */;
    %1386 = %1384.5;
    (%1385, %1386, meta[relay.Constant][97] /* ty=Tensor[(189), float64] */, meta[relay.Constant][98] /* ty=Tensor[(1760), int16] */)
  };
  %1387(%var_2024) /* ty=(Tensor[(7, 15, 8), uint8], Tensor[(9, 3, 7), float64], Tensor[(189), float64], Tensor[(1760), int16]) */
}

def @func_12327(%var_12292: Tensor[(300), uint64]) -> (uint16, Tensor[(300), uint64], Tensor[(1760), uint64]) {
  %1388 = @func_9209() /* ty=(uint16,) */;
  %1389 = cast(%var_12292, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %1390 = cast(meta[relay.Constant][99] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1391 = reshape(%1389, newshape=[300]) /* ty=Tensor[(300), uint64] */;
  %1392 = reshape(%1390, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
  %1393 = @func_9369(%1391, %1392) /* ty=(Tensor[(416), uint16], Tensor[(1760), int16], Tensor[(300), uint64], Tensor[(4, 440), int16], Tensor[(972), float32]) */;
  %1394 = %1393.1;
  %1395 = cast(%1394, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %1396 = asinh(%1395) /* ty=Tensor[(1760), float64] */;
  %1397 = cast(meta[relay.Constant][99] /* ty=Tensor[(1760), int16] */, dtype="uint64") /* ty=Tensor[(1760), uint64] */;
  %1398 = shape_of(%1396, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1399 = cast(%1396, dtype="uint64") /* ty=Tensor[(1760), uint64] */;
  %1400 = dyn.reshape(%1397, %1398, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1401 = %1388.0;
  %1402 = bitwise_xor(%1399, %1400) /* ty=Tensor[(1760), uint64] */;
  (%1401, %var_12292, %1402)
}

def @func_9509() -> Tensor[(840), uint8] {
  @func_8464() /* ty=Tensor[(840), uint8] */
}

def @func_13841(%var_13836: Tensor[(144), float64], %var_13837: Tensor[(4, 300), float32], %var_13838: Tensor[(600), uint8], %var_13839: Tensor[(156), float32], %var_13840: int16) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(6, 6, 4), float64], Tensor[(144), float64], Tensor[(5, 15, 8), bool], Tensor[(660), float32], Tensor[(4, 300), float32], Tensor[(108), float32], Tensor[(600), uint8], Tensor[(7, 8, 7), bool], Tensor[(1, 392), float32], Tensor[(156), float32], Tensor[(12, 9, 16), float32], Tensor[(1728), float32], int16) {
  %1439 = fn (%var_13803: Tensor[(144), float64], %var_13809: Tensor[(4, 300), float32], %var_13811: Tensor[(600), uint8], %var_13815: Tensor[(156), float32], %var_13823: int16) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(6, 6, 4), float64], Tensor[(144), float64], Tensor[(5, 15, 8), bool], Tensor[(660), float32], Tensor[(4, 300), float32], Tensor[(108), float32], Tensor[(600), uint8], Tensor[(7, 8, 7), bool], Tensor[(1, 392), float32], Tensor[(156), float32], Tensor[(12, 9, 16), float32], Tensor[(1728), float32], int16) {
    %1403 = @func_12351() /* ty=(Tensor[(840), uint8],) */;
    %1404 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
    %1405 = @func_10521() /* ty=(Tensor[(13, 12, 10), uint16],) */;
    %1406 = cast(%var_13803, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1407 = reshape(%1406, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), float64] */;
    %1408 = @func_12666(%1407) /* ty=(Tensor[(6, 6, 4), float64], Tensor[(6, 6, 4), bool], Tensor[(6, 6, 4), float32], Tensor[(840), uint8]) */;
    %1409 = cast(meta[relay.Constant][100] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %1410 = cast(%var_13809, dtype="float32") /* ty=Tensor[(4, 300), float32] */;
    %1411 = cast(meta[relay.Constant][101] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1412 = cast(%var_13811, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %1413 = reshape(%1409, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), float32] */;
    %1414 = reshape(%1410, newshape=[12, 100]) /* ty=Tensor[(12, 100), float32] */;
    %1415 = reshape(%1411, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %1416 = reshape(%1412, newshape=[600]) /* ty=Tensor[(600), uint8] */;
    %1417 = @func_11703(%1413, %1414, %1415, %1416) /* ty=(Tensor[(4, 11, 15), bool], Tensor[(12, 100), float32], Tensor[(108), float32], Tensor[(416), uint16], Tensor[(14, 15, ?), float64], Tensor[(840), uint8], Tensor[(5, 15, 8), bool], Tensor[(600), uint8], Tensor[(4, 11, 15), uint8], Tensor[(189), float64]) */;
    %1418 = cast(meta[relay.Constant][102] /* ty=Tensor[(1, 392), float32] */, dtype="float32") /* ty=Tensor[(1, 392), float32] */;
    %1419 = cast(%var_13815, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1420 = reshape(%1418, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float32] */;
    %1421 = reshape(%1419, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %1422 = @func_4783(%1420, %1421) /* ty=(Tensor[(7, 8, 7), bool], Tensor[(3, 13, 4), float32], Tensor[(156), float32]) */;
    %1423 = cast(meta[relay.Constant][103] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %1424 = cast(%var_13823, dtype="int16") /* ty=int16 */;
    %1425 = cast(meta[relay.Constant][102] /* ty=Tensor[(1, 392), float32] */, dtype="float32") /* ty=Tensor[(1, 392), float32] */;
    %1426 = cast(%var_13815, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1427 = reshape(%1423, newshape=[12, 9, 16]) /* ty=Tensor[(12, 9, 16), float32] */;
    %1428 = reshape(%1424, newshape=[]) /* ty=int16 */;
    %1429 = reshape(%1425, newshape=[392]) /* ty=Tensor[(392), float32] */;
    %1430 = reshape(%1426, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %1431 = @func_6282(%1427, %1428, %1429, %1430) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(1, 15, 9), bool], int16, Tensor[(135), int16], Tensor[(156), float32], Tensor[(392), float32], Tensor[(156), float32]) */;
    %1432 = %1403.0;
    %1433 = %1404.0;
    %1434 = %1405.0;
    %1435 = %1408.0;
    %1436 = %1417.6;
    %1437 = %1422.0;
    %1438 = %1431.0;
    (%1432, %1433, %1434, %1435, %var_13803, %1436, meta[relay.Constant][100] /* ty=Tensor[(660), float32] */, %var_13809, meta[relay.Constant][101] /* ty=Tensor[(108), float32] */, %var_13811, %1437, meta[relay.Constant][102] /* ty=Tensor[(1, 392), float32] */, %var_13815, %1438, meta[relay.Constant][103] /* ty=Tensor[(1728), float32] */, %var_13823)
  };
  %1439(%var_13836, %var_13837, %var_13838, %var_13839, %var_13840) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(13, 12, 10), uint16], Tensor[(6, 6, 4), float64], Tensor[(144), float64], Tensor[(5, 15, 8), bool], Tensor[(660), float32], Tensor[(4, 300), float32], Tensor[(108), float32], Tensor[(600), uint8], Tensor[(7, 8, 7), bool], Tensor[(1, 392), float32], Tensor[(156), float32], Tensor[(12, 9, 16), float32], Tensor[(1728), float32], int16) */
}

def @func_16009() -> (Tensor[(13, 12, 10), uint16], Tensor[(128), uint16]) {
  @func_16007() /* ty=(Tensor[(13, 12, 10), uint16], Tensor[(128), uint16]) */
}

def @func_17018(%var_17014: Tensor[(105, 2), float64]) -> (Tensor[(6, 6, 4), float32], Tensor[(840), uint8], Tensor[(16, 11, 10), int16], Tensor[(105, 2), float64]) {
  %1440 = @func_11933() /* ty=(Tensor[(840), uint8],) */;
  %1441 = cast(%var_17014, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %1442 = reshape(%1441, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1443 = @func_12941(%1442) /* ty=(Tensor[(6, 6, 4), float32], Tensor[(11, 3, 14), bool], Tensor[(462), uint32], Tensor[(1760), int16], Tensor[(16, 11, 10), int16], Tensor[(210), float64]) */;
  %1444 = @func_16365() /* ty=Tensor[(6, 6, 4), float32] */;
  %1445 = %1440.0;
  %1446 = %1443.4;
  (%1444, %1445, %1446, %var_17014)
}

def @func_8939() -> (Tensor[(840), uint8], Tensor[(840), uint8]) {
  @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */
}

def @func_11539(%var_11537: Tensor[(6, 6, 4), float64]) -> Tensor[(6, 6, 4), bool] {
  @func_11536(%var_11537) /* ty=Tensor[(6, 6, 4), bool] */
}

def @func_9757() -> (Tensor[(840), uint8], Tensor[(210), float64], Tensor[(360), float64], Tensor[(1760), int16], uint16) {
  %1447 = @func_8794() /* ty=(Tensor[(840), uint8],) */;
  %1448 = cast(meta[relay.Constant][104] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1449 = cast(meta[relay.Constant][105] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
  %1450 = reshape(%1448, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1451 = reshape(%1449, newshape=[1760]) /* ty=Tensor[(1760), int16] */;
  %1452 = @func_8624(%1450, %1451) /* ty=(Tensor[(416), uint16], Tensor[(5, 9, 8), float64], Tensor[(360), float64], Tensor[(16, 11, 10), int16], Tensor[(1760), int16], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2340), float32], Tensor[(5, 15, 8), bool], Tensor[(600), uint8]) */;
  %1453 = @func_9209() /* ty=(uint16,) */;
  %1454 = %1447.0;
  %1455 = %1452.6;
  %1456 = %1453.0;
  (%1454, %1455, meta[relay.Constant][104] /* ty=Tensor[(360), float64] */, meta[relay.Constant][105] /* ty=Tensor[(1760), int16] */, %1456)
}

def @func_16693(%var_16692: Tensor[(128), uint16]) -> (Tensor[(840), uint8], Tensor[(4, 440), bool], Tensor[(360), float64], Tensor[(1760), int16], Tensor[(128), uint16]) {
  %1466 = fn (%var_16680: Tensor[(128), uint16]) -> (Tensor[(840), uint8], Tensor[(4, 440), bool], Tensor[(360), float64], Tensor[(1760), int16], Tensor[(128), uint16]) {
    %1457 = cast(meta[relay.Constant][106] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1458 = cast(meta[relay.Constant][107] /* ty=Tensor[(1760), int16] */, dtype="int16") /* ty=Tensor[(1760), int16] */;
    %1459 = cast(%var_16680, dtype="uint16") /* ty=Tensor[(128), uint16] */;
    %1460 = reshape(%1457, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %1461 = reshape(%1458, newshape=[4, 440]) /* ty=Tensor[(4, 440), int16] */;
    %1462 = reshape(%1459, newshape=[128]) /* ty=Tensor[(128), uint16] */;
    %1463 = @func_15630(%1460, %1461, %1462) /* ty=(Tensor[(840), uint8], Tensor[(360), float64], Tensor[(360), float64], Tensor[(4, 440), bool], Tensor[(1, 16, 8), uint16], Tensor[(1560), uint16], Tensor[(128), uint64]) */;
    %1464 = @func_14724() /* ty=Tensor[(840), uint8] */;
    %1465 = %1463.3;
    (%1464, %1465, meta[relay.Constant][106] /* ty=Tensor[(360), float64] */, meta[relay.Constant][107] /* ty=Tensor[(1760), int16] */, %var_16680)
  };
  %1466(%var_16692) /* ty=(Tensor[(840), uint8], Tensor[(4, 440), bool], Tensor[(360), float64], Tensor[(1760), int16], Tensor[(128), uint16]) */
}

def @func_5542(%var_5541: Tensor[(4, 3, 9), float32]) -> (Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) {
  %1473 = fn (%var_5521: Tensor[(4, 3, 9), float32]) -> (Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) {
    %1467 = cast(%var_5521, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
    %1468 = cast(meta[relay.Constant][108] /* ty=Tensor[(416), uint16] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
    %1469 = reshape(%1468, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), uint16] */;
    %1470 = @func_4675(%1469) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(156), float32], Tensor[(16, 2, 13), float64], Tensor[(1760), int16], Tensor[(840), uint8]) */;
    %1471 = acos(%1467) /* ty=Tensor[(4, 3, 9), float32] */;
    %1472 = %1470.2;
    (%1471, %1472, meta[relay.Constant][108] /* ty=Tensor[(416), uint16] */)
  };
  %1473(%var_5541) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) */
}

def @func_12481() -> (Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) {
  @func_12479() /* ty=(Tensor[(840), uint8], Tensor[(6, 6, 4), float32]) */
}

def @func_15259() -> Tensor[(416), uint16] {
  @func_15257() /* ty=Tensor[(416), uint16] */
}

def @func_15662() -> Tensor[(128), uint16] {
  %1475 = fn () -> Tensor[(128), uint16] {
    %1474 = @func_8486() /* ty=(Tensor[(128), uint16],) */;
    %1474.0
  };
  %1475() /* ty=Tensor[(128), uint16] */
}

def @func_15920() -> Tensor[(13, 12, 10), uint16] {
  @func_15918() /* ty=Tensor[(13, 12, 10), uint16] */
}

def @func_12761(%var_12756: Tensor[(108), float32]) -> (Tensor[(840), uint8], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) {
  %1476 = @func_8937() /* ty=(Tensor[(840), uint8], Tensor[(840), uint8]) */;
  %1477 = cast(%var_12756, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1478 = reshape(%1477, newshape=[4, 3, 9]) /* ty=Tensor[(4, 3, 9), float32] */;
  %1479 = @func_5540(%1478) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(16, 2, 13), float64], Tensor[(416), uint16]) */;
  %1480 = %1476.1;
  %1481 = %1479.0;
  (%1480, %1481, %var_12756)
}

def @func_12353() -> (Tensor[(840), uint8],) {
  @func_12351() /* ty=(Tensor[(840), uint8],) */
}

def @func_12201() -> Tensor[(840), uint8] {
  %1483 = fn () -> Tensor[(840), uint8] {
    %1482 = @func_9587() /* ty=(Tensor[(840), uint8],) */;
    %1482.0
  };
  %1483() /* ty=Tensor[(840), uint8] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen782/build/output.py:3964: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen782/build/output.py:3969: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen782/build/output.py", line 3990, in <module>
    mod = seq(mod)
  File "/home/yujunzhe/tvm/python/tvm/ir/transform.py", line 161, in __call__
    return _ffi_transform_api.RunPass(self, mod)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  10: TVMFuncCall
  9: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::transform::Pass, tvm::IRModule)>::AssignTypedLambda<tvm::transform::__mk_TVM8::{lambda(tvm::transform::Pass, tvm::IRModule)#1}>(tvm::transform::__mk_TVM8::{lambda(tvm::transform::Pass, tvm::IRModule)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  8: tvm::transform::Pass::operator()(tvm::IRModule) const
  7: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  6: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  5: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  4: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::LazyGradientInit()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::LazyGradientInit()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::relay::LazyGradientInit(tvm::RelayExpr const&, tvm::IRModule)
  1: tvm::relay::CheckFeature(tvm::RelayExpr const&, tvm::relay::FeatureSet const&)
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/src/relay/analysis/feature.cc", line 142
TVMError: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------
  Check failed: (dfs.is_subset_of(fs)) is false: #[version = "0.0.5"]
fn () -> ((Tensor[(9, 2, 3), uint16], Tensor[(9, 2, 3), bool], Tensor[(9, 1, 3), float32]), ()) {
  let %x: Tensor[(9, 2, 3), uint16] = meta[relay.Constant][0] /* ty=Tensor[(9, 2, 3), uint16] */;
  let %x1: Tensor[(9, 2, 3), uint16] = zeros_like(%x) /* ty=Tensor[(9, 2, 3), uint16] */;
  let %x2: Tensor[(9, 2, 3), bool] = meta[relay.Constant][1] /* ty=Tensor[(9, 2, 3), bool] */;
  let %x3: Tensor[(9, 2, 3), bool] = zeros_like(%x2) /* ty=Tensor[(9, 2, 3), bool] */;
  let %x4: Tensor[(9, 1, 3), float32] = meta[relay.Constant][2] /* ty=Tensor[(9, 1, 3), float32] */;
  let %x5: Tensor[(9, 1, 3), float32] = zeros_like(%x4) /* ty=Tensor[(9, 1, 3), float32] */;
  let %x6: (Tensor[(9, 2, 3), uint16], Tensor[(9, 2, 3), bool], Tensor[(9, 1, 3), float32]) = (%x, %x2, %x4);
  %0 = zeros(shape=[9, 2, 3], dtype="uint16") /* ty=Tensor[(9, 2, 3), uint16] */;
  %1 = zeros(shape=[9, 2, 3], dtype="bool") /* ty=Tensor[(9, 2, 3), bool] */;
  %2 = zeros(shape=[9, 1, 3], dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  let %x7: (Tensor[(9, 2, 3), uint16], Tensor[(9, 2, 3), bool], Tensor[(9, 1, 3), float32]) = (%0, %1, %2);
  %3 = ones(shape=[9, 2, 3], dtype="uint16") /* ty=Tensor[(9, 2, 3), uint16] */;
  %4 = ones(shape=[9, 2, 3], dtype="bool") /* ty=Tensor[(9, 2, 3), bool] */;
  %5 = ones(shape=[9, 1, 3], dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  %6 = (%3, %4, %5);
  %7 = %6.0;
  %10 = (
    let %x8: Tensor[(9, 2, 3), uint16] = add(%x1, %7) /* ty=Tensor[(9, 2, 3), uint16] */;
    %8 = %6.1;
    let %x9: Tensor[(9, 2, 3), bool] = add(%x3, %8) /* ty=Tensor[(9, 2, 3), bool] */;
    %9 = %6.2;
    let %x10: Tensor[(9, 1, 3), float32] = add(%x5, %9) /* ty=Tensor[(9, 1, 3), float32] */;
    ()
  );
  (%x6, %10)
}
/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
has unsupported feature: [fGraph, ]

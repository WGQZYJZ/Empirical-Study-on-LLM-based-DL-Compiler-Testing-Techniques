import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_103 = relay.var("var_103", dtype = "int16", shape = (15, 13, 7))#candidate|103|(15, 13, 7)|var|int16
var_104 = relay.var("var_104", dtype = "int16", shape = (15, 13, 7))#candidate|104|(15, 13, 7)|var|int16
bop_105 = relay.maximum(var_103.astype('int16'), relay.reshape(var_104.astype('int16'), relay.shape_of(var_103))) # shape=(15, 13, 7)
output = bop_105
output2 = bop_105
func_111 = relay.Function([var_103,var_104,], output)
mod['func_111'] = func_111
mod = relay.transform.InferType()(mod)
mutated_mod['func_111'] = func_111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_111_call = mutated_mod.get_global_var('func_111')
var_113 = relay.var("var_113", dtype = "int16", shape = (15, 13, 7))#candidate|113|(15, 13, 7)|var|int16
var_114 = relay.var("var_114", dtype = "int16", shape = (15, 13, 7))#candidate|114|(15, 13, 7)|var|int16
call_112 = func_111_call(var_113,var_114,)
output = call_112
func_115 = relay.Function([var_113,var_114,], output)
mutated_mod['func_115'] = func_115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_251 = relay.var("var_251", dtype = "float64", shape = (4, 9, 3))#candidate|251|(4, 9, 3)|var|float64
uop_252 = relay.cosh(var_251.astype('float64')) # shape=(4, 9, 3)
bop_279 = relay.equal(var_251.astype('bool'), relay.reshape(uop_252.astype('bool'), relay.shape_of(var_251))) # shape=(4, 9, 3)
func_111_call = mod.get_global_var('func_111')
func_115_call = mutated_mod.get_global_var('func_115')
var_291 = relay.var("var_291", dtype = "int16", shape = (1365,))#candidate|291|(1365,)|var|int16
call_290 = func_111_call(relay.reshape(var_291.astype('int16'), [15, 13, 7]), relay.reshape(var_291.astype('int16'), [15, 13, 7]), )
call_292 = func_111_call(relay.reshape(var_291.astype('int16'), [15, 13, 7]), relay.reshape(var_291.astype('int16'), [15, 13, 7]), )
output = relay.Tuple([bop_279,call_290,var_291,])
output2 = relay.Tuple([bop_279,call_292,var_291,])
func_293 = relay.Function([var_251,var_291,], output)
mod['func_293'] = func_293
mod = relay.transform.InferType()(mod)
mutated_mod['func_293'] = func_293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_293_call = mutated_mod.get_global_var('func_293')
var_295 = relay.var("var_295", dtype = "float64", shape = (4, 9, 3))#candidate|295|(4, 9, 3)|var|float64
var_296 = relay.var("var_296", dtype = "int16", shape = (1365,))#candidate|296|(1365,)|var|int16
call_294 = func_293_call(var_295,var_296,)
output = call_294
func_297 = relay.Function([var_295,var_296,], output)
mutated_mod['func_297'] = func_297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_615 = relay.var("var_615", dtype = "float32", shape = (9, 10, 10))#candidate|615|(9, 10, 10)|var|float32
uop_616 = relay.atan(var_615.astype('float32')) # shape=(9, 10, 10)
func_111_call = mod.get_global_var('func_111')
func_115_call = mutated_mod.get_global_var('func_115')
var_624 = relay.var("var_624", dtype = "int16", shape = (1365,))#candidate|624|(1365,)|var|int16
call_623 = func_111_call(relay.reshape(var_624.astype('int16'), [15, 13, 7]), relay.reshape(var_624.astype('int16'), [15, 13, 7]), )
call_625 = func_111_call(relay.reshape(var_624.astype('int16'), [15, 13, 7]), relay.reshape(var_624.astype('int16'), [15, 13, 7]), )
func_111_call = mod.get_global_var('func_111')
func_115_call = mutated_mod.get_global_var('func_115')
call_627 = func_111_call(relay.reshape(var_624.astype('int16'), [15, 13, 7]), relay.reshape(call_623.astype('int16'), [15, 13, 7]), )
call_628 = func_111_call(relay.reshape(var_624.astype('int16'), [15, 13, 7]), relay.reshape(call_623.astype('int16'), [15, 13, 7]), )
output = relay.Tuple([uop_616,call_623,var_624,call_627,])
output2 = relay.Tuple([uop_616,call_625,var_624,call_628,])
func_629 = relay.Function([var_615,var_624,], output)
mod['func_629'] = func_629
mod = relay.transform.InferType()(mod)
var_630 = relay.var("var_630", dtype = "float32", shape = (9, 10, 10))#candidate|630|(9, 10, 10)|var|float32
var_631 = relay.var("var_631", dtype = "int16", shape = (1365,))#candidate|631|(1365,)|var|int16
output = func_629(var_630,var_631,)
func_632 = relay.Function([var_630,var_631,], output)
mutated_mod['func_632'] = func_632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_721 = relay.var("var_721", dtype = "float64", shape = (8, 13, 7))#candidate|721|(8, 13, 7)|var|float64
uop_722 = relay.atan(var_721.astype('float64')) # shape=(8, 13, 7)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
const_732 = relay.const([-1.077822,-1.895934,0.749329,0.439360,-8.515484,-0.319045,-1.768404,0.477199,-0.835175,-4.570997,3.385593,3.457301,2.370584,-9.131388,-1.089216,0.847991,2.450592,7.206139,8.087551,4.939000,-3.315705,3.667611,-4.483765,-8.909974,-3.132746,1.989387,-1.729161,-9.243255,2.384489,-8.109235,-6.093033,-9.982278,8.891806,-3.187276,4.380936,-2.043252,-1.527028,-2.016477,-3.736965,8.261051,3.900702,6.185073,-2.297468,-4.134741,-6.996469,6.224898,-3.292763,-5.006059,-3.665303,-5.522925,-7.328142,3.971695,-1.745440,8.480432,-6.769385,-5.836956,-5.565243,1.268944,6.678106,-2.674356,-2.012357,9.552691,6.331626,5.395226,-6.607469,3.509697,-6.934651,4.573776,9.766523,-5.310782,-8.399847,1.303328,-4.150224,6.808240,-3.659252,9.807465,0.629001,5.189163,-6.993307,-2.002017,-2.388713,-4.073443,0.666845,-1.793734,-0.391538,-1.942373,6.695994,5.004828,4.537180,0.233282,-6.473152,-7.456106,5.952628,0.399162,-4.807371,8.038764,4.053576,-2.252728,2.297034,3.100239,1.381526,-1.816227,-9.747129,-4.777471,-7.292051,6.547376,-3.798371,2.150733,-8.223347,7.633469,-6.185325,3.686477,-4.107575,-2.627989,-3.020812,-1.579270,-8.210137,-9.564967,-0.480805,-4.639404,8.475274,-3.541208,9.021727,2.730196,-0.878342,6.156538,1.703517,-7.174122,-5.614555,-0.383698,7.802253,-8.704062,8.417729,-5.784188,2.307952,3.165644,-0.555590,-0.919219,1.661451,3.954944,-9.063466,-8.692078,-2.376956,-7.711910,-7.123363,5.256455,3.305487,4.741055,1.573773,-0.632048,-3.773956,9.508255,9.701755,-2.118073,2.026216,-5.797936,-1.961015,-0.002514,-3.696449,8.815482,3.426407,-1.122445,-8.896852,7.096274,9.439438,-8.638878,2.586090,-6.102793,8.854108,8.542447,5.452231,2.408954,1.391885,-2.071033,-6.253780,-9.525220,-4.303248,-3.299489,-5.856375,-8.664935,9.732876,6.811105,-2.108646,-9.290863,-0.867105,4.924470,8.032541,-5.042321,-8.494473,-8.673201,-4.530328,-0.485839,2.884599,-8.964112,-4.952266,7.721815,2.168628,6.224207,1.663947,-9.528821,8.287835,3.624980,-6.018201,0.916512,-0.009019,6.404056,-4.967389,0.608885,-4.907717,4.832236,9.237182,-9.121043,0.648822,-0.612961,1.759858,0.673337,-0.088854,-7.455928,-4.924979,5.441550,7.787818,0.644367,-9.663832,-0.680213,-9.652982,-5.892253,-1.086545,2.966376,-9.494960,-8.314067,-9.791271,-6.110099,-5.202073,5.840135,5.657265,7.307382,7.301848,-0.604881,-1.770747,-1.613899,4.257533,-2.761054,1.695920,6.794290,1.392343,-1.989135,0.111935,5.491853,0.717751,-4.303988,2.455018,0.889777,8.278506,2.470320,-1.035458,-8.430459,-4.529710,-8.062811,-3.901019,8.690743,4.274686,3.446663,-7.488335,0.565828,7.338116,-8.560444,1.048469,4.165938,-4.353527,-5.579546,-1.120002,-2.333597,7.927642,9.734280,-4.813050,-8.171670,-6.742908,4.919240,-3.975832,-3.439286,-7.658555,-8.682537,-4.105418,-7.810432,-7.582393,-7.703237,-7.748633,9.000572,7.930696,3.968036,9.732215,8.309325,-1.391648,4.431073,8.569935,-8.304622,-9.748455,-6.578825,2.891963,6.543886,5.395382,-9.937887,-5.972728,-8.090385,-5.144977,-9.882639,4.468661,9.817593,-5.471128,-4.342663,-5.604344,0.388556,3.857590,-6.356227,6.442361,6.193119,3.311627,-9.573887,9.995160,1.772522,-0.854051,-7.023443,5.293191,9.200389,-0.150787,-6.275486,1.401819,1.334645,0.335383,2.475616,-5.410969,9.987887,-0.939676,9.337942,-8.479350,-7.647214,-4.609064,-6.644391,-4.105255,0.860751,5.361558,-8.279879,-3.460223,-7.818891,4.408009,-5.918376,-0.200643,7.436055,6.061864,-4.829637,5.425401,-1.373029,0.670506,1.762373,5.267713,-5.828942,-5.737011,3.353541,4.606791,-1.352741,4.706746,-5.341379,7.674361,-6.989468,-3.083845,-9.235492,4.703936,-3.429108,-6.578235,8.802307,-2.069991,-5.124572,-2.390488,0.784436,8.065226,-8.108509,-3.658405,-6.852828,-8.319334,-6.130802,-3.697403,-9.538013,-6.568578,-4.252977,-9.518427,-5.754015,-9.431478,-6.264749,-8.413190,-5.694694,1.725102,-8.007984,4.414551,3.099025,1.705526,-2.515636,2.685508,-8.735775,2.643052,-1.673815,-4.399914,1.291670,0.586183,3.102670,3.757277,-3.819525,-8.045277,7.799439,5.957686,9.552597,-8.721399,-9.744623,-8.182901,2.175571,-9.316097,7.803398,-1.823128,3.602889,-7.611614,7.859632,-7.147123,5.292650,-7.219268,-9.563591,2.476380,9.681724,8.137107,3.604890,-4.785434,-0.769940,-2.781152,3.335205,-1.059395,6.785560,8.188803,-3.691708,-0.177337,-0.840821,-6.376504,-9.986917,-4.634784,-8.753564,-9.655557,7.156977,-7.322607,4.883635,4.798315,-3.600858,4.135293,7.273968,-7.215557,-0.616473,4.822932,-7.208590,5.535262,1.921371,-1.619659,1.521380,-1.419147,8.755361,-8.593455,4.632685,3.273226,1.555005,3.966465,3.296825,5.312992,-0.306112,-7.388827,-5.919569,-1.875729,0.329008,8.168983,6.637655,4.031725,0.556319,4.566182,1.499286,-3.627721,6.692250,8.337195,3.055025,-8.642209,3.042632,-9.531615,-0.661632,-9.354410,8.222935,-0.452495,6.902259,1.949631,-2.885193,3.560550,7.977358,-6.756582,-1.196247,4.879991,-1.182087,1.759973,-2.202614,-3.924913,-3.688372,-6.751274,-1.046087,-9.293354,-6.679790,-6.234879,-2.718009,3.054005,5.387313,-9.572380,3.773695,-8.242616,4.883196,-5.237213,5.153134,-3.787039,8.401936,-0.132466,-6.795296,9.014179,-3.541553,6.375180,2.275963,5.734117,-3.795896,-7.549379,5.862337,-1.762589,7.502185,4.366109,9.744625,-3.835711,-7.145671,-3.079232,-1.120558,-8.011987,-9.630383,8.573186,-0.672294,-7.623721,7.337372,-5.106009,4.870700,8.041069,8.396568,-5.523635,4.505170,8.539144,0.668212,-4.874613,6.392380,-2.219368,-6.270718,-3.359844,-9.587055,5.428642,5.529578,9.311711,-9.885580,7.558375,1.200444,-6.397236,3.420696,-1.342779,-4.316303,-1.804239,5.009711,1.155729,-0.925477,-5.444415,-9.612014,-3.749456,-6.345441,0.171585,8.508064,-9.197672,-2.061833,0.556165,1.917805,-4.576796,-6.052345,2.018021,3.779991,5.709567,-5.247340,8.649379,0.243561,1.756563,5.314416,1.236815,7.469298,0.473230,-5.670195,6.752917,-2.051520,3.408374,-6.692408,3.272514,2.268075,-9.129800,-2.456736,2.356475,3.967747,4.038129,2.074482,2.807701,1.803065,-0.989951,5.194917,1.215859,4.546360,-1.850088,9.474357,6.443656,-2.937734,4.063240,2.690077,0.739017,4.007099,4.425764,8.975131,5.223702,3.913558,-6.235191,-7.996211,7.680996,3.605086,7.719911,7.515814,0.839436,-7.406695,-3.488772,2.088698,0.085883,7.211699,0.534509,1.611970,4.464943,-9.644593,-7.089100,1.940526,-5.662107,9.325555,1.294687,3.663082,6.086546,7.495494,9.594247,9.810411,3.187238,-6.813784,1.245933,-3.911345,-5.097540,-9.580968,4.276228,-8.009801,-5.586465,2.644234,-1.531330,3.432180,0.539916,-9.504385,5.739420,1.072371,-0.675971,-8.803727,7.122492,-4.577414,2.125925,-3.966299,-7.214923,5.206844,3.619850,-0.052382,9.661341,0.590899,1.991396,8.237745,3.923975,7.373383,-2.298941,4.683328,-4.471067,-1.986827,-8.147901,-2.375535,0.720472,-7.069357,8.290930,0.393359,-0.960937,6.516716,-4.955673,-4.862333,9.544143,7.227728,2.111826,7.172051,-3.526857,-0.916473,6.502877,4.752398,-1.307635,8.230999,-4.374342,-4.372116,0.995533,-8.970522,-3.741774,5.844080,7.950532,-0.412386,1.345569,-3.605640,6.041698,-6.792261,-4.169738,3.376448,8.074524,-5.886497,0.713690,-7.855220,-8.698343,-9.588967,-9.707424,-1.419194,-9.781681,-6.165975,-7.249375,3.576849,8.891156,-6.278419,6.892361,-2.935701,-4.162008,5.645299,1.116029,-3.870662,-6.073456,5.571983,-2.899940,-3.601240,-1.375407,-3.533602,-6.057314,-7.021291,-0.354176,0.629372,-6.297671,-6.785721,-2.387513,2.176478,-4.175140,1.545580,-0.004519,9.601283,-7.715665,-6.985279,-9.148026,8.625942,-7.786990,8.233696,2.224548,0.087195,-2.341343,-6.008402,0.447898,0.241197,-0.321059,-3.677747,4.532737,8.290037,-6.528203,-2.694611,2.100047,1.340836,2.503699,-6.789345,3.267150,-6.961643,8.989494,-6.415250,-4.427312,-3.073441,-0.600123,-8.057508,-4.828055,5.707049,4.099584,-6.390097,2.755683,-7.288792,-2.004521,7.941684,-1.228524,7.647665,4.829516,-6.966445,0.319030,-7.734360,-3.949871,6.125565,-6.974746,8.406471,-0.938727,-1.896887,7.035853,-1.815036,1.034305,1.705916,-4.786367,-1.212140,-8.975774,4.118514,6.153091,5.931203,-3.108158,6.897013,7.460542,-4.077736,-1.801338,6.577250,-5.038406,4.361138,-9.759219,9.298230,6.818035,-1.531870,3.371499,-1.082647,2.573478,-2.728291,-4.083331,-5.130103,-5.536727,-6.384452,-3.042152,-2.552218,9.879188,-8.320817,-6.303782,-7.402822,5.162986,2.766240,3.631265,-0.950827,2.877242,-3.658509,-2.318202,8.442020,-7.873685,1.324837,7.292410,1.660610,6.497749,-4.907008,1.347843,3.088658,5.233121,6.426157,-2.187692,9.005045,-4.853789,-6.094245,4.623733,7.945591,4.040511,-8.992567,-1.391571,3.829528,6.232638,8.371345,5.358339,-2.065374,1.859934,7.175754,6.539141,1.583702,-9.898993,-1.439602,1.803332,5.663931,-9.928245,-5.705082,9.491224,-5.115048,5.170723,-3.467859,-9.008925,-6.897146,-4.035143,-7.085343,-4.159687,-3.922367,4.638252,-1.140454,-7.392946,9.834996], dtype = "float32")#candidate|732|(900,)|const|float32
const_733 = relay.const([-9,2,5,1,9,-2,7,-7,6,5,-6,-2,-7,9,-8,6,7,9,-7,-1,-2,-5,4,1,3,5,1,2,-6,-9,-5,4,-3,1,3,-8,-6,6,-6,1,-3,1,-6,3,-3,-6,7,10,1,10,5,1,-1,-1,-3,8,-9,-9,-1,-4,-3,5,-10,-8,6,7,7,3,4,-7,-8,-1,4,-1,2,-1,8,5,-9,-9,2,-6,-5,-7,5,-5,8,10,-8,9,8,3,4,-4,-2,1,10,-2,-6,-5,2,-4,6,6,-4,-3,5,-8,5,-3,4,8,-1,10,-9,10,3,-6,9,4,-7,8,3,10,-6,3,-6,6,3,-9,-1,6,5,6,3,9,-6,-9,-3,-7,3,10,4,9,4,-2,8,-10,9,9,7,-4,-7,2,-4,-8,2,6,-6,3,-4,-6,2,-7,3,5,-8,-2,3,-2,4,6,9,-2,-1,-4,10,9,-7,3,4,9,10,-6,7,2,9,-7,-1,3,4,7,9,-3,4,-8,7,-2,-1,10,6,7,-9,2,-3,-4,-4,10,8,-10,3,-3,-5,5,-1,2,-6,-1,-5,-7,-9,7,1,-7,-3,1,4,6,9,3,-4,-7,8,-5,4,1,-2,-7,8,-2,-10,8,-9,1,-6,9,-3,-10,6,-2,-9,4,-5,-6,4,5,3,5,-10,9,5,5,4,-7,-3,3,-5,-5,7,-3,-9,6,-4,3,9,7,2,2,-9,8,-9,6,-9,4,2,8,6,3,-5,3,10,8,3,-10,8,-4,1,8,-1,-8,10,6,10,-7,8,10,3,2,7,-10,-9,1,4,-10,4,2,3,-1,7,-9,1,7,-7,-1,8,-1,-6,9,-6,9,-4,-5,6,2,-5,2,-10,1,5,-4,-1,-4,-9,-9,9,-6,-8,3,-6,-1,4,6,-10,1,-9,2,10,-9,6,-6,5,-1,-3,-8,7,-10,1,-5,3,8,-1,-1,6,-3,-7,7,-3,6,-3,2,4,-1,8,-7,1,2,-8,6,3,6,10,-4,2,-6,-6,4,-10,6,10,8,1,-5,5,2,-3,-9,-2,4,3,-10,10,-9,-7,-8,-8,-10,8,-9,9,2,10,4,4,-7,-10,8,-10,-10,-1,6,7,-10,3,2,1,-5,5,4,-7,-8,7,-7,-4,4,7,7,-7,-1,-8,-4,6,1,-9,1,-5,7,7,-9,-10,6,-4,-1,2,3,4,-1,9,2,-7,7,3,4,-7,1,-7,-5,2,3,-10,3,8,-4,4,-6,-6,2,5,9,10,-9,7,-9,-2,2,-1,-5,7,-5,-3,5,-1,1,5,-8,-2,-2,-3,-7,-3,8,-3,2,-2,4,-5,-7,6,-4,7,-5,-1,9,8,-10,6,7,-2,-1,4,-10,-4,7,4,-2,3,2,-6,9,-7,-7,8,-2,10,5,-1,-7,9,-7,-5,-7,-8,-4,10,-8,-4,-9,8,-5,5,4,-2,-2,-7,7,10,2,-1,-4,-2,7,9,10,-7,8,2,7,5,6,-10,1,5,2,10,8,-10,7,10,7,-2,-9,-6,-8,-8,2,9,10,9,-1,-9,10,-3,7,6,-9,10,3,-4,9,-7,-2,6,-10,5,3,-8,1,4,5,5,-8,-3,3,2,-1,-2,-5,4,-3,-7,-3,3,-8,-6,-5,-8,6,-4,1,10,6,5,-4,9,2,-6,-4,-10,6,-7,9,-5,-9,3,-6,-3,8,-6,-1,-10,4,7,-4,2,5,2,9,8,-6,-9,5,-7,-2,-5,-9,-5,2,-2,-10,-8,-6,-8,8,2,-8,-8,-2,8,-5,6,-2,8,-10,-2,-5,-5,3,-3,-1,4,-5,-4,5,-1,-9,-6,-6,4,-7,6,9,2,-5,10,1,5,8,2,-3,6,8,2,-8,-9,5,6,7,5,-2,-9,-10,-8,-6,-2,3,-1,-1,4,1,4,-7,9,8,-5,8,-5,10,7,-6,-5,6,-10,10,6,-5,7,-5,-7,10,-5,-8,9,6,2,-4,2,4,8,-8,-5,-9,7,9,-6,8,9,2,1,-3,-3,-1,-8,-9,-7,1,1,4,-3,-2,4,-8,5,1,1,9,3,-1,5,7,8,-5,9,7,-4,9,-10,-3,1,8,-9,8,-1,3,10,9,10,-8,-1,1,7,-3,10,-9,9,-3,-8,-2,-1,-4,-5,-10,5,5,5,3,-7,9,2,8,-7,2,3,2,-9,4,9,10,-2,-2,-1,10,-1,5,5,7,-6,7,4,-3,8,-8,1,-3,-3,1,9,-1,-8,-4,-10,7,3,-5,-5,-2,6,-10,-10,-10,-7,6,-2,-6,5,-7,2,-1,8,-4,4,6,7,-5,-8,-9,-7,10,-4,-2,-6,-2,-5,-7,-10,-7,-8,4,-8,10,5,-2,-6,2,1,-7,-4,-7,-3,-1,-5,9,1,9,-4,9,10,-4,8,-4,-1,-5,-1,4,-9,9,5,-9,1,8,-7,-7,-10,5,8,-6,2,5,-6,-9,8,-10,6,-1,-7,6,-10,3,5,-10,7,3,-7,-5,1,-9,10,4,-1,6,-6,4,-5,-5,-4,5,-1,3,9,1,1,-1,-1,8,-9,-10,7,10,10,2,2,-7,6,-1,9,-6,-3,-1,1,-6,4,-7,7,-2,-5,-1,2,8,-10,-4,10,-9,-7,9,10,8,9,-4,3,5,10,4,6,9,-2,6,3,7,4,5,1,-9,-1,7,8,-3,-8,2,1,-1,-4,-7,10,4,9,-9,7,1,10,-1,9,-1,-10,-2,-4,-4,-10,5,4,-8,-3,5,7,-7,3,-7,1,-1,1,-4,8,5,-10,10,2,-8,6,-4,-7,-10,-8,-5,5,3,-1,10,4,7,-6,7,6,-4,9,5,-10,8,-2,-10,-9,2,10,1,-9,-10,-9,4,4,-8,-9,-9,-6,8,10,-4,1,-10,9,-6,2,-3,3,-6,7,-10,-7,-5,5,-2,3,3,3,6,-7,-8,6,-1,1,8,1,6,10,-4,7,10,-3,6,10,-6,2,-7,-9,1,-6,-10,10,7,-9,3,-7,8,9,6,5,6,7,-8,-2,6,10,4,-4,-8,-2,-1,-5,10,6,-3,5,-10,5,-9,-9,-4,3,-6,9,-1,6,-1,-4,7,5,1,-3,4,-9,4,10,-4,4,-9,6,5,2,5,6,-6,-3,-5,-5,2,-6,1,-4,8,-9,-2,-8,6,-4,-8,4,5,8,-2,1,-9,2,-2,9,6,-8,2,9,8,1,-6,-9,-2,3,3,2,2,6,-2,-5,-10,1,10,1,3,-5,9,-2,-2,5,-8,9,-10,-3,9,-3,10,2,1,-10,-9,5,-1,-7,1,-10,10,10,-6,4,-10,6,-2,2,6,-10,-8,-1,10,-2,3,-2,5,4,-3,-7,-7,5,-3,-5,-10,4,-9,-5,-4,-2,10,1,-5,7,5,-3,8,4,-6,2,5,3,10,5,-6,-2,-10,-4,-10,-5,4,7,-7,-7,9,8,-5,8,-9,-1,9,-3,-8,5,5,-3,7,5,9,6,3,-4,3,6,-2,-8,2,-1,8,10,-8,-6,-3,9,-5,1,-7,4,6,5,-9,-10,-4,-3], dtype = "int16")#candidate|733|(1365,)|const|int16
call_731 = relay.TupleGetItem(func_629_call(relay.reshape(const_732.astype('float32'), [9, 10, 10]), relay.reshape(const_733.astype('int16'), [1365,]), ), 1)
call_734 = relay.TupleGetItem(func_632_call(relay.reshape(const_732.astype('float32'), [9, 10, 10]), relay.reshape(const_733.astype('int16'), [1365,]), ), 1)
func_293_call = mod.get_global_var('func_293')
func_297_call = mutated_mod.get_global_var('func_297')
const_751 = relay.const([[-0.905176],[-3.085882],[-6.904965],[7.601593],[0.651041],[0.059544],[0.936557],[2.359438],[1.231895],[-2.615935],[6.946797],[8.494566],[-9.640645],[-8.596311],[3.631618],[-6.436758],[-6.193044],[-4.961564],[-6.282677],[-4.983689],[-4.366617],[7.006160],[-9.306349],[-4.484399],[6.450949],[-4.892365],[-8.077437],[9.767761],[6.170463],[6.257788],[-9.899082],[-6.278978],[-0.980436],[9.621672],[9.788785],[1.158761],[-6.688000],[7.841100],[7.270911],[-6.198688],[-0.256971],[4.775816],[8.099009],[1.894171],[-4.184648],[2.655006],[0.476189],[4.497028],[-2.515856],[-8.991155],[-4.934281],[2.553805],[-5.304724],[5.386418],[2.000996],[-4.658057],[1.124865],[-6.787743],[-2.258452],[3.578230],[-3.945200],[3.392181],[-4.093724],[7.404365],[1.509446],[-1.267770],[9.468407],[-0.811891],[-8.736628],[3.196929],[-0.967152],[-6.613166],[-8.674579],[-9.751413],[-7.883616],[4.463928],[-8.746671],[-0.431556],[-0.264663],[-0.119052],[5.201079],[3.147710],[-9.856766],[-1.034788],[-8.066839],[-6.260000],[3.348147],[-7.727072],[7.723304],[-0.588791],[-3.458620],[-1.011941],[-0.102171],[4.112199],[0.197367],[9.831857],[3.717731],[9.299632],[-7.669975],[-2.254250],[-3.310917],[9.814447],[2.801748],[4.673430],[-8.416600],[3.857750],[3.358056],[-7.595807]], dtype = "float64")#candidate|751|(108, 1)|const|float64
call_750 = relay.TupleGetItem(func_293_call(relay.reshape(const_751.astype('float64'), [4, 9, 3]), relay.reshape(call_731.astype('int16'), [1365,]), ), 2)
call_752 = relay.TupleGetItem(func_297_call(relay.reshape(const_751.astype('float64'), [4, 9, 3]), relay.reshape(call_731.astype('int16'), [1365,]), ), 2)
output = relay.Tuple([uop_722,call_731,const_732,const_733,call_750,const_751,])
output2 = relay.Tuple([uop_722,call_734,const_732,const_733,call_752,const_751,])
func_761 = relay.Function([var_721,], output)
mod['func_761'] = func_761
mod = relay.transform.InferType()(mod)
var_762 = relay.var("var_762", dtype = "float64", shape = (8, 13, 7))#candidate|762|(8, 13, 7)|var|float64
output = func_761(var_762)
func_763 = relay.Function([var_762], output)
mutated_mod['func_763'] = func_763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_845 = relay.var("var_845", dtype = "float64", shape = (5, 12, 15))#candidate|845|(5, 12, 15)|var|float64
uop_846 = relay.tan(var_845.astype('float64')) # shape=(5, 12, 15)
output = uop_846
output2 = uop_846
func_857 = relay.Function([var_845,], output)
mod['func_857'] = func_857
mod = relay.transform.InferType()(mod)
mutated_mod['func_857'] = func_857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_858 = relay.var("var_858", dtype = "float64", shape = (5, 12, 15))#candidate|858|(5, 12, 15)|var|float64
func_857_call = mutated_mod.get_global_var('func_857')
call_859 = func_857_call(var_858)
output = call_859
func_860 = relay.Function([var_858], output)
mutated_mod['func_860'] = func_860
mutated_mod = relay.transform.InferType()(mutated_mod)
const_875 = relay.const([[[1.887151,-1.189434,-1.076912,6.892757,-8.865933,3.488197,9.993168,9.217234,-1.576489,-5.347852,-9.164285,9.493833],[-8.031430,-8.848569,-1.587117,-7.641846,-2.210550,8.056141,2.082038,-4.745266,2.645558,-1.211871,-1.531791,-7.100208],[-5.170548,-9.173854,6.506554,-1.024182,-2.799118,7.476192,1.645421,-7.415121,-6.225947,-0.834891,4.566841,-2.073174],[4.038609,2.215452,-8.001306,-8.876762,-2.703541,4.310173,-3.373712,7.302251,7.910658,9.560943,-3.068678,-6.716968],[5.375297,-7.575711,3.743996,8.272505,-9.171418,4.761547,0.869577,0.905396,-6.311295,0.746674,1.668317,-7.216914],[7.675881,3.442410,4.258417,6.722406,-1.199088,0.444290,-1.624840,-9.971074,4.954743,5.220424,7.674119,-0.112613],[-9.110362,6.140627,-6.919687,-1.988543,0.313427,-5.778998,3.223253,-6.816535,6.576501,6.768137,-6.134702,-5.405372],[3.440442,-5.697328,2.431281,6.068219,6.008169,6.980977,-7.177019,0.793037,3.769345,-4.678687,3.150875,-1.790379],[9.445780,-9.727972,-5.395565,2.498435,8.217542,-5.517276,4.402659,-4.936436,-1.641466,-5.214612,0.158401,6.228330]],[[2.627801,6.497925,-2.374119,-5.341041,1.889903,0.643340,1.203339,-4.572089,8.141381,8.669799,-8.311322,4.282898],[3.640537,2.906975,0.793400,7.648546,-5.478885,-2.021419,2.760035,-2.316454,6.367883,-0.700594,2.498013,4.928197],[1.234347,1.132612,-0.104930,7.480236,-7.963658,-2.996688,8.990563,2.725974,-7.903376,-2.077819,-0.598046,5.981773],[-8.548501,-0.860053,-2.921735,-7.967099,4.952681,6.883307,-8.922263,0.450437,8.302145,1.939665,-5.633236,-1.972041],[-7.553165,-9.614981,-7.693821,-2.444116,4.816585,-7.748842,6.309313,6.542700,-1.565977,-7.348684,8.895957,3.939935],[-5.521751,4.484376,1.017328,3.536280,-7.571407,-1.574583,2.375060,-8.300731,-7.417002,-6.732972,0.177577,-8.823658],[-5.681863,3.080491,-3.547205,-9.838167,3.431314,8.579239,-4.305676,-2.308705,-6.096462,9.149785,0.694803,-6.844703],[-1.356205,2.532217,1.177738,1.010708,5.734039,0.458222,1.831847,-8.851763,-3.421843,-3.322272,-9.121001,6.772685],[9.784206,9.277106,-2.619292,-4.782211,-4.637153,2.724668,3.337479,-2.180271,3.042628,2.678140,6.257766,2.729438]],[[1.417690,-4.098857,-9.437819,0.226600,-6.224481,-1.629742,-2.315957,8.074871,8.791835,-0.220755,5.249268,9.846889],[9.457009,-2.290984,-4.153496,-4.976624,6.574923,1.318632,-2.434857,1.164424,3.278687,-2.797047,3.473351,6.014701],[-1.008891,6.501766,-3.400377,-9.636864,9.085367,-8.519623,-6.156017,-5.387790,-3.202237,4.715244,-8.058133,6.497307],[-4.083157,3.221315,-2.238145,-2.908798,0.018570,-2.319124,-4.188325,9.637971,3.908059,6.231838,-2.045544,1.340590],[-1.185815,2.813976,-4.684146,-0.793136,-7.216330,-2.064938,-9.448771,1.684319,-9.594169,9.618196,-3.645028,1.296284],[7.466096,9.311669,-5.516007,-9.164456,1.453581,5.930009,-9.689882,2.543728,1.542679,1.793924,-8.911818,1.147094],[5.710606,-1.229875,4.823516,6.577606,-3.716892,-0.804734,-3.041892,1.792117,2.202390,5.735016,0.966929,-5.454246],[-5.071101,-3.319386,0.456795,9.540862,2.435402,-0.012950,2.523835,6.198539,2.728255,-3.835828,-5.922683,2.769145],[-4.052375,5.531370,8.357874,5.096519,-4.598805,1.387157,9.060153,-6.294075,-4.747735,-5.564192,-0.741840,1.739622]],[[6.203479,9.459786,-2.087801,7.396590,8.795653,-3.365037,7.677038,-1.316211,2.337578,0.187005,3.565864,9.964192],[-9.937056,2.852243,6.670676,-3.499102,4.867458,-8.210639,2.916525,-3.402252,9.395469,6.195265,-3.680168,-0.399347],[6.466092,9.140122,5.692333,-4.322299,-7.677293,-6.400261,2.181884,-6.689967,1.199970,-5.750096,3.161350,8.126390],[8.757797,2.052780,4.535295,0.621119,2.354343,8.822152,-7.379060,-2.212937,1.006158,-0.129931,-5.921732,3.871289],[-9.526660,-9.602794,0.221650,-7.406413,-3.763399,-4.754412,2.419507,8.978038,-6.562368,4.933971,-9.598957,7.244656],[-1.652675,-4.996174,2.996972,-9.308784,8.564200,5.443004,1.640387,5.013428,4.769653,4.660210,-9.648432,7.704313],[7.330420,2.298057,-7.638557,7.843449,-6.454243,7.850915,-3.374750,2.336646,-9.251348,-7.634123,-1.817023,-9.615715],[4.555065,-9.205830,-6.719799,1.103960,-0.814102,5.128977,0.266168,-9.007550,7.842091,8.724695,5.369133,9.313862],[2.296043,8.869136,-4.120580,9.390271,3.099524,0.104543,5.303849,8.749474,2.823769,9.305825,-9.594857,-1.454387]],[[6.708229,8.242663,6.043413,2.879822,-4.154627,-8.208288,-7.006226,-0.306201,-0.783684,2.635565,-5.205942,9.917086],[7.826204,0.319555,-6.187747,6.801425,9.039628,6.656853,-6.008601,-7.851667,5.176726,0.982208,-8.480446,-7.180547],[6.949644,0.610682,-7.166445,7.674373,7.193169,0.820869,-8.749520,3.327147,4.904697,-2.699191,6.867169,-3.256833],[-5.459803,-2.294228,-4.837384,8.261014,-8.322231,7.003171,2.859522,5.216585,4.013578,0.072740,7.464642,-7.878129],[4.650129,-6.026093,5.151334,8.308591,-9.592151,-5.586613,-1.820488,-8.698252,-6.704067,-7.565412,-9.843986,-9.738517],[-4.822333,-9.375072,0.811898,6.819051,9.464537,8.643787,-8.844783,-9.061185,6.820077,9.822486,-6.871480,-3.887283],[-5.068374,8.802633,-5.768568,-8.819218,8.222918,8.555980,8.185581,7.011556,-3.817497,4.629330,4.881111,-4.586143],[8.281088,0.913711,6.343688,-0.848400,-9.022688,6.905856,-3.001136,3.131346,-7.739749,-9.935391,7.047088,-4.097892],[-8.304155,5.351156,-2.603450,-3.960169,6.798240,7.340659,-1.088020,-5.497400,8.838116,5.236944,-9.379763,5.306750]]], dtype = "float64")#candidate|875|(5, 9, 12)|const|float64
uop_876 = relay.cos(const_875.astype('float64')) # shape=(5, 9, 12)
func_111_call = mod.get_global_var('func_111')
func_115_call = mutated_mod.get_global_var('func_115')
var_892 = relay.var("var_892", dtype = "int16", shape = (7, 195))#candidate|892|(7, 195)|var|int16
call_891 = func_111_call(relay.reshape(var_892.astype('int16'), [15, 13, 7]), relay.reshape(var_892.astype('int16'), [15, 13, 7]), )
call_893 = func_111_call(relay.reshape(var_892.astype('int16'), [15, 13, 7]), relay.reshape(var_892.astype('int16'), [15, 13, 7]), )
uop_917 = relay.atanh(uop_876.astype('float32')) # shape=(5, 9, 12)
func_761_call = mod.get_global_var('func_761')
func_763_call = mutated_mod.get_global_var('func_763')
const_936 = relay.const([0.703341,5.919396,6.697632,-9.715759,-7.920100,-2.917763,2.741091,5.485947,3.117400,-9.232434,8.340461,-1.676705,-7.645941,6.414846,-6.970670,8.549671,-2.649784,8.238710,0.753544,-4.718888,6.342020,-5.489163,6.158421,-2.729242,2.519644,3.798182,8.317320,9.269250,1.601778,-5.469054,-8.727666,8.898247,-9.501824,-6.825055,-8.370715,5.625848,0.041443,-7.069810,-5.383942,0.259660,7.523598,-9.777922,-1.384362,-0.584265,-9.091489,1.893778,3.109740,-6.325824,-8.098213,4.388890,6.796808,-3.160293,2.105675,0.104959,5.802060,6.802694,6.790156,-3.666687,-4.515781,5.709376,0.991670,4.031102,6.185394,-3.430043,-1.007365,-1.427017,-1.708982,-2.418958,4.114756,7.022251,-3.549469,3.341344,6.585674,4.964009,0.031670,-5.333461,7.183316,9.632841,3.978042,-1.384604,5.346395,4.180111,-3.586640,6.009158,-3.465327,-7.554579,-4.861447,-0.634749,6.259553,2.002718,6.799104,1.406492,4.148731,5.770807,-6.318754,-5.067067,6.006627,-8.585879,0.894911,2.450734,-2.833072,-1.054372,-6.332038,-8.588849,-5.253801,-7.405957,-6.832700,-4.486529,-1.855082,-8.313249,-5.899237,-6.665440,5.610747,1.116457,8.936703,-5.310711,-6.268877,-7.917038,9.353874,0.073779,-7.790897,7.406715,2.340409,-3.568546,-2.240860,7.286748,4.995077,-7.336822,-1.639002,3.842190,-6.641059,1.652027,-7.184550,8.766064,1.978313,5.814050,-5.906257,-0.138035,-2.477718,3.599880,4.357659,8.899536,8.132367,2.808291,4.511351,0.679093,-4.789397,8.696690,-5.548343,9.229105,1.661165,5.585179,2.917412,4.213908,-8.368640,-6.480087,6.722862,-0.968058,2.013251,-2.175934,-3.546772,4.019024,5.985011,9.785051,0.568841,0.055542,3.449969,9.223636,-0.935831,-3.387252,1.631568,-4.226293,9.052169,7.806354,5.096031,6.056833,7.359775,-0.743454,5.977814,-0.554763,-4.973371,1.970899,-9.121223,9.276292,-8.335366,7.273125,-4.336694,-1.093143,-2.446185,6.491277,-1.707462,1.182985,6.591085,-4.616917,7.741710,3.596656,-3.503304,6.991332,1.999908,7.705855,1.868938,-3.529845,-5.572472,4.998230,-8.109812,-0.792073,0.873709,3.552239,-8.360486,-9.526359,-0.745346,7.372100,-7.551326,-2.204657,8.524450,8.001351,-5.035564,2.622160,2.998448,-6.650415,4.099971,-7.389813,-9.591990,8.398945,2.269485,6.607455,2.696778,-5.949865,0.278508,-6.830284,-2.254169,5.485332,4.484853,9.121316,9.522550,-1.294618,8.003533,-7.567834,-5.688342,-9.340062,1.108588,-8.784795,-8.241260,-6.725681,0.364467,9.613665,1.786571,-4.849297,4.852324,9.447666,9.217990,3.441956,-4.737468,4.864998,2.551639,-3.230810,9.749864,3.794965,8.525491,6.694148,-1.730189,-9.296885,-8.287756,-5.659507,-7.497171,-9.774511,-9.370050,-3.720580,1.748534,5.844393,1.303978,6.095846,-3.731451,0.348094,7.187508,-8.042828,8.722463,2.666841,-9.806162,5.843154,6.319753,-3.060770,2.440305,-2.942345,-0.690441,2.452525,3.566094,-8.107852,5.845007,0.288583,7.930112,3.826459,-8.124133,-7.381864,-6.842368,3.797426,2.896344,0.438863,7.989126,-8.098975,-5.893954,5.548012,-0.696498,9.638906,1.502068,-7.541544,3.418049,4.722609,-1.142703,-9.480181,3.633753,-4.944564,7.092329,3.643300,3.892424,7.288558,9.552579,4.974895,-3.701621,-0.218784,6.442625,-2.231792,-0.928193,-0.956308,9.025452,2.485396,0.889297,-2.997968,-0.916197,5.081353,9.885818,1.007528,5.669542,-9.535636,7.572796,-4.618220,-9.106539,9.175727,-7.526062,2.306142,-5.506613,6.727306,0.016477,6.506302,9.383483,0.065507,7.389546,-6.640249,-0.453744,-2.223968,5.775436,-5.605093,-8.755803,-5.628403,-0.484376,-5.781595,-4.221222,-4.360511,4.688043,5.833894,-9.506768,1.849543,0.094262,-4.222466,3.688876,-7.833222,8.294093,-9.102057,-1.759480,1.305913,-9.653815,-7.313474,8.685457,-8.872450,-3.935860,4.798397,6.379220,-4.480411,-2.564742,-4.990735,8.496309,-5.814834,7.580544,-6.538692,7.835755,-9.754348,-2.063890,7.542171,9.354255,-6.656466,9.125129,-3.825195,5.734915,-5.236595,-9.881165,9.101892,9.586683,-5.926191,-6.569177,-5.136126,-7.930646,8.785275,6.785966,-7.402286,7.450765,-2.174109,2.550302,8.749049,1.836451,-5.768534,-4.082743,-7.074217,-0.378678,-6.555508,4.373756,-9.447830,-4.577777,-1.627250,-2.150049,-9.211671,-7.953536,6.937961,-5.022692,-5.554404,-6.169911,0.828059,-2.116401,-7.375970,-6.098929,6.112654,2.781080,-1.995164,4.465696,-4.248559,1.653988,0.166277,4.214520,6.137686,9.664252,-0.190730,4.108624,-4.613117,5.670112,-2.442387,-9.527813,8.401124,3.086795,3.141265,7.631740,2.935582,-4.715395,-5.279697,3.512178,5.878750,3.384745,-9.949956,8.191657,-2.420135,4.731732,8.218033,-4.255207,8.942773,-0.803494,-7.284220,-3.141137,-2.536894,1.533989,9.770736,3.637057,5.427417,-8.733292,2.764397,1.391229,-6.003523,-4.058497,-2.435720,-7.283407,-6.383781,-2.204142,-1.957511,-3.411744,8.031705,0.608265,-4.847784,-6.943184,8.792039,6.906562,-6.116399,-1.071325,2.276753,-2.582139,0.663035,-9.522671,4.735693,0.036142,4.117158,3.352108,7.479579,9.768724,2.629362,7.727522,-5.099936,3.355393,8.288137,6.474773,-8.150875,-9.447737,5.978311,3.419203,5.241489,-5.514021,5.942185,-3.997578,4.487522,-3.978394,4.509675,9.225818,0.556871,-6.250723,4.510749,2.200253,-8.735606,4.767131,-1.714729,-1.951446,0.638095,2.550944,-2.028011,7.616098,6.018963,-6.856981,-9.007365,4.873725,-0.648982,-6.955415,1.818369,3.856205,-9.158317,6.408843,-5.641573,-6.550259,0.863599,-0.518280,0.939709,5.250635,2.739244,3.796905,7.619606,5.087615,8.498876,3.588409,-3.016708,-6.893407,-7.761925,2.566781,1.622888,-2.770940,2.358999,9.643711,3.025030,-5.483841,-6.349652,-4.703111,-0.085864,-3.657814,3.043348,-5.585467,-0.889369,-8.266335,3.073075,7.302295,-4.712525,6.201525,-7.296239,-0.933553,2.131364,4.045309,6.409752,5.969794,5.942227,0.057651,-5.608445,-7.862661,-2.120356,1.691146,1.298613,-1.516643,-0.535386,6.245663,-1.916753,-8.177790,-9.481352,-0.615664,9.161970,0.234014,0.158810,-3.580992,9.976308,-8.643929,7.883814,6.001720,9.612829,-6.361700,8.835657,-7.139678,-2.633257,7.188549,-1.173697,-4.193132,2.367265,0.442059,-0.709710,-5.990446,-5.864199,6.942657,-8.198267,-0.441609,-7.302736,-3.712657,6.757721,-9.918507,7.478305,-1.861630,2.314370,-3.538819,5.990687,4.045939,9.163605,7.845036,-9.027820,2.984122,0.601987,-1.199831,0.685897,1.385461,-2.826549,-7.094756,6.291635,5.996077,1.270918,2.435319,5.169958,-7.288443,8.276128,6.922886,-6.310154,-8.586861,-0.340519,5.983650,4.548627,-3.531144,-2.272546,-9.809497,-8.327002,-0.775854,8.338660,-8.882087,-4.088104,6.246900,-8.186483,-5.499618,2.822889,-5.654684,5.677201,4.735689,-7.318258,-1.686901,-7.856784,-3.965740,7.679749,-1.430648,-3.132995,0.525911,3.577247,-1.530324,4.857307,-7.463586,-1.806965,7.082008,9.165471,-2.021498,-2.773262,-2.588785,7.969195,3.909230,-1.482733,9.847055,-0.858874,6.663033,9.613845,9.704131,-1.308682,-0.422627,-8.245514,0.282069,-8.387570,1.909921,-9.019239,-9.132717,-9.587126,-8.300120,6.142224,-7.131076,1.777201,-3.123581,6.810166,5.208242,9.726027,-4.405372,3.900503,3.829479,-4.264035,7.858599,5.566940,-4.304095,0.957270,-2.035715,2.661132,6.068680,-7.223877,8.563352,4.615869,-2.720754,-3.181892,3.535154,-8.691141,-7.455159,0.739904], dtype = "float64")#candidate|936|(728,)|const|float64
call_935 = relay.TupleGetItem(func_761_call(relay.reshape(const_936.astype('float64'), [8, 13, 7])), 0)
call_937 = relay.TupleGetItem(func_763_call(relay.reshape(const_936.astype('float64'), [8, 13, 7])), 0)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
var_942 = relay.var("var_942", dtype = "float32", shape = (900,))#candidate|942|(900,)|var|float32
call_941 = relay.TupleGetItem(func_629_call(relay.reshape(var_942.astype('float32'), [9, 10, 10]), relay.reshape(var_892.astype('int16'), [1365,]), ), 1)
call_943 = relay.TupleGetItem(func_632_call(relay.reshape(var_942.astype('float32'), [9, 10, 10]), relay.reshape(var_892.astype('int16'), [1365,]), ), 1)
func_761_call = mod.get_global_var('func_761')
func_763_call = mutated_mod.get_global_var('func_763')
call_950 = relay.TupleGetItem(func_761_call(relay.reshape(const_936.astype('float64'), [8, 13, 7])), 0)
call_951 = relay.TupleGetItem(func_763_call(relay.reshape(const_936.astype('float64'), [8, 13, 7])), 0)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
call_970 = relay.TupleGetItem(func_629_call(relay.reshape(var_942.astype('float32'), [9, 10, 10]), relay.reshape(call_891.astype('int16'), [1365,]), ), 0)
call_971 = relay.TupleGetItem(func_632_call(relay.reshape(var_942.astype('float32'), [9, 10, 10]), relay.reshape(call_891.astype('int16'), [1365,]), ), 0)
output = relay.Tuple([call_891,var_892,uop_917,call_935,const_936,call_941,var_942,call_950,call_970,])
output2 = relay.Tuple([call_893,var_892,uop_917,call_937,const_936,call_943,var_942,call_951,call_971,])
func_975 = relay.Function([var_892,var_942,], output)
mod['func_975'] = func_975
mod = relay.transform.InferType()(mod)
var_976 = relay.var("var_976", dtype = "int16", shape = (7, 195))#candidate|976|(7, 195)|var|int16
var_977 = relay.var("var_977", dtype = "float32", shape = (900,))#candidate|977|(900,)|var|float32
output = func_975(var_976,var_977,)
func_978 = relay.Function([var_976,var_977,], output)
mutated_mod['func_978'] = func_978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1041 = relay.var("var_1041", dtype = "float64", shape = (14, 14, 12))#candidate|1041|(14, 14, 12)|var|float64
uop_1042 = relay.atanh(var_1041.astype('float64')) # shape=(14, 14, 12)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
const_1048 = relay.const([-9.180946,5.669555,-5.619828,0.638585,8.105869,-3.360512,-0.297199,-2.512676,6.978128,-0.248661,-8.081494,8.857149,-1.756632,-1.500979,-9.140966,-3.122055,5.674939,-2.389243,7.801241,-1.185969,0.529727,6.104741,-1.190641,-5.143350,8.601683,1.059876,8.488156,-7.693585,-7.357993,0.342937,-5.176564,-3.438577,-3.296602,9.930325,-2.244105,-9.067057,-6.004158,6.376467,5.161192,-0.043246,-8.895703,9.383087,3.470008,2.762794,-9.731487,-9.754327,-7.599886,-1.211579,2.119754,-5.067325,8.854624,-4.951126,-5.413227,-7.895116,1.335724,2.589780,-7.296475,8.839824,-7.279095,-4.294638,-8.558596,0.913606,5.773890,6.065331,5.152648,-5.822363,-7.787423,-9.204734,-4.140063,-9.363202,2.914502,-8.860912,-3.775959,1.694277,-2.200763,1.319335,6.802539,-3.615683,8.662502,7.227459,7.877372,7.136783,-3.372981,2.054871,8.534092,-1.380760,8.304826,-8.055950,9.523745,-9.947213,3.038998,-7.116976,-6.897074,0.152887,-5.327808,-8.881539,-6.836215,6.658039,3.733564,-4.205916,-1.195844,8.060937,5.513465,-1.478097,-8.243778,-2.052027,-6.225919,-2.059789,4.016910,-9.624938,-3.886865,-0.242537,1.256216,-6.980923,-4.665754,2.968467,0.996785,-9.138916,-8.142366,9.540191,4.533355,0.057070,-2.392210,-0.736260,8.928420,2.336080,3.147741,6.423679,9.548810,1.081332,-6.719834,5.048871,9.108477,-2.215174,-2.132573,-0.685372,9.848773,6.317520,1.298070,-5.281726,4.956426,7.269395,2.026873,4.057559,-6.129520,-5.281001,9.009335,-9.269003,4.156419,-3.180170,1.232498,3.788106,-2.323855,-0.689078,-1.062769,6.964914,1.631678,-4.907840,6.784496,4.895837,-2.012995,-8.942211,2.104496,-3.816708,9.080641,-2.877309,-2.359730,2.661639,7.556896,-8.858569,-4.463205,8.997537,-4.444541,-0.910524,3.964729,2.253117,4.276972,2.300784,8.686658,5.658843,-2.847536,3.439594,8.860040,-7.508629,-0.164661,-9.746254,-6.875938,-5.295678,9.999666,-5.604569,6.331018,-3.079423,3.247841,1.362103,-5.033010,5.832971,6.509907,9.339429,9.755046,3.713305,-7.634918,9.263296,6.825045,-8.021954,-1.236187,0.417533,-2.548696,6.261203,4.300288,-3.268019,3.277133,-0.867086,-2.723350,-2.819824,0.287793,-8.156651,9.021905,-2.055117,1.023403,-4.860390,6.798133,0.288964,9.364858,2.020313,-3.748928,-0.565331,0.071659,-0.623704,-7.969506,-7.441212,-0.644787,-2.763787,-0.936731,-5.125341,3.760568,3.732543,-0.278781,-5.758615,2.580937,-4.268958,-6.612572,-1.983064,7.406730,0.206386,1.391651,-2.693293,-0.070421,5.819826,8.463799,5.777630,-8.292367,-2.497979,0.466842,8.063723,-1.108736,-5.998039,-2.116178,0.846888,4.519327,-7.892590,-5.900236,-9.124325,3.675702,8.217830,8.178328,9.747573,3.816550,-3.211870,-2.104351,-1.679840,0.483735,0.031964,5.727152,-9.813684,-6.542099,6.458583,3.480948,4.820993,3.321903,7.062328,8.820614,7.311157,-0.291758,-5.268989,8.803086,-8.953326,7.354934,-4.796830,-9.693100,-7.747028,6.399572,7.137372,6.921710,6.048806,0.212420,-5.437535,0.049486,0.500827,8.617782,5.432847,-0.137884,-2.544140,6.185730,-9.494621,1.748332,-0.781064,-4.100782,6.915152,3.081418,9.540881,7.323634,0.215769,5.098842,3.007296,-5.866368,0.827869,-6.949998,8.010880,-2.104648,9.588906,-6.556109,5.949031,0.703231,-1.303817,8.973961,3.854049,2.218800,-5.139344,3.634150,-0.251440,-5.111974,3.718303,6.878444,-7.334569,-4.606060,4.450483,-1.331337,-8.751819,4.534633,-3.117640,-5.594590,8.511074,-8.394349,-8.874979,4.229874,-3.597912,-4.724448,-0.586720,-3.915640,0.966555,-8.381793,8.112956,9.877447,-3.732557,-4.125059,-6.945712,-9.895054,8.605722,9.182237,4.882571,-2.859087,-9.192203,7.986387,-2.775875,7.730149,-3.030315,-9.474045,-4.752883,1.860605,-8.699912,3.374918,-5.629663,-6.026739,0.660052,6.215648,2.118708,-7.293111,-2.895323,-3.383618,3.115211,2.413581,-6.694368,8.835973,1.423841,0.788822,-8.393412,-3.618560,0.005528,-3.774816,-0.601313,9.670630,4.281991,5.725251,1.477142,-4.472677,-9.477073,-5.205121,6.342075,8.344136,0.995263,-3.605632,-0.167527,-2.652388,-7.201419,-7.403915,7.011924,-1.529665,0.392403,-2.068791,5.503465,8.949144,-7.978519,-7.582528,5.728346,1.475520,9.850769,-7.949001,-8.139296,6.074076,-6.240952,-8.166307,7.697739,-8.523354,-4.051494,0.935831,-8.574144,1.867148,-2.459067,-3.043746,-2.351392,-7.234266,-2.443059,5.918805,-7.954328,2.527730,-0.294338,-9.172769,-2.025922,-5.694781,6.704501,-1.913931,-6.258006,4.911702,-1.417190,-7.306799,4.399703,-9.457699,1.749724,-6.587339,-9.404835,-5.410874,5.452655,-5.057759,-5.062284,6.700460,-3.030812,0.401462,8.465053,2.176788,-1.020491,-9.712557,0.513838,1.380362,-6.519061,-8.208954,9.239180,1.550088,0.187251,-5.787331,-8.738693,6.559296,-0.702490,5.736262,1.493811,6.558065,-8.511536,9.075393,-4.609914,4.098074,4.037359,9.415093,-8.358633,1.474867,-2.535575,7.995932,4.382477,9.341950,3.550696,-4.916068,0.481740,7.084563,5.304645,3.332304,3.568959,2.680618,-8.425995,-7.280277,6.847675,-3.154271,8.672861,4.058119,5.374130,-3.522641,7.366302,0.927372,-5.521109,9.366341,-0.390142,1.198289,3.013943,-9.203426,8.218104,-5.391768,-5.154656,-0.147281,5.314292,3.514442,-4.120400,6.224719,-8.431340,1.681535,5.078488,-0.075803,0.346812,-6.265140,-1.545804,4.888285,1.399381,5.315470,-9.712400,9.509966,0.257548,-9.296646,2.652902,7.767216,9.566259,-3.001516,3.665430,-9.183691,7.583293,1.005493,7.670701,7.546953,3.138935,-2.018774,0.784185,6.571141,-7.155442,-2.383714,3.083251,0.208770,-4.492896,-4.201395,2.938148,4.616018,9.715795,-0.779679,3.664261,8.396837,-6.480235,-8.267590,9.564366,-2.591999,-0.509850,7.628639,4.877967,-3.326778,3.692676,9.786851,4.177287,5.718824,-2.537179,7.122770,4.977339,-3.481499,-9.919206,0.703865,-1.319680,-5.995940,2.785849,-3.995119,-3.608875,-7.084794,6.087343,-2.305477,-2.864199,2.823553,-7.670639,-5.527088,7.468323,7.755950,-3.389212,-9.207909,3.457517,0.488139,-6.328179,5.708253,-7.925335,-4.461170,3.498360,-1.183118,-2.734046,-6.605577,-8.690259,3.145276,0.367642,0.773026,3.350925,-8.722592,-6.449329,3.447055,-0.673419,-2.465344,1.471530,-6.559266,1.136044,-0.829616,6.394052,-7.158123,-5.850348,1.505908,0.620949,9.975302,-3.707639,0.832738,2.966361,-7.590959,1.304494,-3.969392,1.247510,0.853793,1.273640,4.447167,6.215250,-9.816160,6.905475,2.811873,-6.809341,0.032625,8.648237,-7.122680,-0.252826,-7.405215,2.299386,-1.878880,6.542030,2.347276,9.797018,7.883758,6.763542,-9.062597,-7.311969,2.483689,-5.119340,9.850274,6.586009,-1.585831,-2.844938,5.753113,1.644114,6.331858,8.946937,5.016263,8.156052,9.866986,-5.821561,4.620408,-4.669923,-4.166906,4.604267,-8.414994,2.760805,-3.804574,8.272808,5.407738,3.225822,6.257925,8.869101,-4.642390,-4.870024,3.367611,6.468634,1.845171,4.607475,7.076940,7.921971,9.876166,-6.670546,4.196161,9.138418,9.064923,2.900800,-5.747083,5.820210,8.269044,-6.882269,4.836117,0.512510,8.195326,-2.685911,8.401766,-0.858257,-3.274286,7.661762,-8.733223,-4.799361,1.669850,8.245200,-4.219845,-3.647960,-4.916779,9.245986,4.467640,-2.299352,3.853565,7.506564,-4.461384,-4.326109,-3.212843,-1.516860,-4.838966,-1.624269,-5.982940,4.412093,8.533863,-0.580082,7.528424,0.268809,-6.832232,5.594746,-1.172422,3.457543,5.945894,3.927696,9.495126,-4.486298,-1.145882,5.901288,-6.490555,0.286814,9.271084,4.255076,1.185485,9.855587,-1.534391,-1.755671,4.989445,-0.041817,9.860604,-2.711622,8.002512,-0.814465,-6.687385,3.884184,7.432748,-8.092353,-9.885111,3.333236,-5.201537,-0.012498,7.222699,0.057378,-1.928023,3.762742,4.842908,-7.169451,8.058919,-9.464045,-1.839134,-3.567815,-0.850970,-9.661144,6.190182,0.373536,-5.265593,-4.326913,-9.277853,-7.114578,6.720683,-3.640799,-6.241201,-0.509868,6.586810,3.046426,-7.620508,1.562760,-0.487216,8.298875,0.324472,4.908760,-0.273231,-8.062932,6.750935,8.296887,-2.265101,4.426213,-5.495154,-0.164360,-2.198696,-4.518998,-9.975094,1.158233,9.857963,-5.916344,2.813823,0.624305,0.349142,-5.945221,-8.377595,-0.653052,3.678536,6.441380,4.606864,-7.649514,4.793270,-9.793368,-3.837131,-5.804797,-5.406046,5.373813,-9.987431,-5.004841,-5.957968,-4.116027,-6.194015,6.614720,-2.848860,-3.331064,4.287585,2.258739,5.253704,-2.175277,-0.618630,1.976944,5.587906,-7.104686,3.220049,2.370933,-4.075491,0.011947,-3.288841,-5.243374,0.188680,-3.366690,7.251800,-2.912219,6.237425,2.360773,5.605639,8.348146,2.887177,1.759116,-0.563554,-9.284402,-8.978293,9.585738,-8.127382,-1.364932,-0.229436,-9.831889,-1.731420,-1.323708,9.520664,9.269721,6.011512,2.680695,1.155761,7.351586,-7.033193,-5.405945,4.001226,9.811651,0.117369,-4.882646,3.652051,-9.649419,5.260225,4.998249,-8.119009,7.091046,6.049713,-2.001117,3.414850,-1.329727,5.862369,7.029076,8.957127,-0.066282,-1.941196,-9.358552,-3.327503,1.151885,-2.706214,-7.661232,-4.537977,-1.925565,3.447146,-6.682767,-8.231013,-8.112408], dtype = "float32")#candidate|1048|(900,)|const|float32
const_1049 = relay.const([4,-4,-10,9,4,4,-9,3,-2,6,4,10,-4,-10,-3,2,3,-6,-2,1,-7,9,4,9,-2,-1,-9,-8,-4,-7,-7,8,-4,3,9,10,-8,1,3,-5,5,3,1,-4,10,-5,2,-7,6,-2,1,-1,3,1,2,-2,6,-10,5,-5,7,1,1,-8,7,4,-4,-9,6,4,7,-4,9,3,8,-10,6,-6,1,-8,4,6,-6,4,4,2,3,-8,2,8,-7,-6,-10,-2,6,9,1,-7,-10,-8,10,6,6,6,5,-7,-10,5,-5,3,8,-1,-7,3,1,2,9,-5,-3,-2,-2,-1,2,-4,-5,-8,1,10,-8,-5,-4,10,-4,2,-3,6,-3,-10,2,-4,3,8,9,-1,-2,-6,3,4,1,7,-10,9,-9,-2,3,8,8,-9,7,-6,6,7,-7,1,9,-2,-2,-4,-10,-3,-2,10,-8,-7,-8,-4,-4,-8,-4,-9,-8,1,1,-2,-2,5,-6,4,-3,1,-3,-8,5,-7,4,3,-8,1,-2,2,9,-9,-2,1,5,7,-6,-4,8,4,-1,5,1,-9,-10,-8,10,-4,-2,8,-8,5,9,-4,3,10,-5,1,10,1,-3,-8,10,-5,-10,10,-9,9,4,-6,5,1,10,8,-4,-1,9,1,-3,2,1,-9,-8,-8,-6,-9,10,-1,-2,10,7,4,-1,7,-1,-5,-2,-1,-7,-3,3,3,2,2,10,-1,-5,5,9,-10,-3,-1,1,3,10,10,10,7,-7,7,2,6,-2,-5,-5,9,10,-2,3,1,-3,-9,4,2,-6,1,-6,7,-10,-9,7,-2,10,-10,-9,-8,-3,3,4,1,6,-8,-10,2,-7,-4,9,-1,-10,-3,3,-1,-10,-8,-4,2,10,6,-7,10,9,8,2,8,4,10,5,-6,10,9,2,5,3,3,-10,-6,9,-9,-7,2,10,-9,-7,-10,-10,10,2,5,5,-7,-3,3,7,4,9,-5,1,-6,10,3,6,-3,7,4,-6,-6,-2,-2,1,4,3,8,5,10,9,7,-9,4,8,9,-6,4,5,10,-3,5,4,-8,7,-4,5,4,2,9,3,-6,4,9,-6,-5,-3,-5,-6,-6,2,3,-5,-1,-4,-9,-8,-8,-4,4,-7,-1,1,-9,-10,2,-9,1,-2,1,3,-3,-6,5,-9,2,-8,-8,10,6,4,-1,-4,5,5,2,-9,-10,7,4,4,3,2,3,-9,-1,-8,6,-5,8,10,-9,-4,-1,-4,-6,-5,-2,-10,-7,3,-2,10,-3,-10,8,-10,8,-6,2,5,10,-6,-5,7,-5,-1,1,6,10,-4,5,-5,-7,-3,-1,-8,-6,-5,-9,4,5,3,-9,-10,5,5,-10,-5,1,6,4,-5,8,-3,4,-3,5,3,-4,-10,10,1,6,-5,-3,9,6,-10,-5,1,2,-6,-1,8,-5,4,-6,3,10,8,-10,-1,-2,1,5,5,-8,-4,-2,-4,-3,-10,5,2,1,9,9,-8,-10,-8,-10,2,-6,9,-9,4,-3,-2,8,-4,-3,2,2,5,-8,-8,-8,8,-7,3,-10,-9,-1,-1,-6,-2,9,-3,6,6,-2,4,-5,7,1,-9,7,6,-10,1,-4,-6,-6,6,8,-6,4,-4,6,2,-1,10,8,8,-3,-5,1,-9,-2,-9,-5,-5,-8,-10,10,4,3,-1,-10,-1,1,1,9,1,5,4,-8,2,9,10,4,-3,8,7,7,10,-6,-10,-2,-8,2,8,-10,5,2,1,1,-2,9,6,9,-4,8,-2,8,7,2,9,8,3,9,-6,7,-9,1,-2,3,7,-3,-4,-1,-10,-10,6,1,8,1,-2,3,-5,-9,7,7,5,-5,1,-2,8,8,-10,3,-10,-1,3,2,-10,-6,-2,3,3,8,5,-2,4,8,8,-1,6,-9,-7,8,3,-6,-9,4,-6,-3,-4,5,7,-5,3,-5,9,-9,-6,-8,2,-4,3,-10,-2,-2,-10,-8,10,-3,-9,-3,2,-7,-10,-9,-8,-3,3,-10,8,3,10,-8,3,3,-10,10,-8,-2,1,1,6,-10,9,6,-3,9,10,-4,-7,-7,-3,10,-6,-4,-4,8,-10,1,-10,9,3,9,-3,8,-9,-8,-2,8,3,-4,-6,8,-3,-5,3,-8,-10,-2,7,-5,-5,-1,-3,4,10,2,-2,-1,-9,-8,10,1,-3,5,4,-6,-6,5,-7,-7,9,-10,2,-6,10,5,1,10,-10,-4,8,5,-9,5,-1,3,-4,1,-6,8,2,-6,9,9,-2,4,-4,-5,-1,-1,5,-10,-6,-6,7,-8,7,-6,-9,-6,9,-2,10,8,-2,-2,2,7,-3,10,-6,3,-2,10,5,4,-7,-8,6,6,4,4,-2,-4,3,-6,-4,-4,9,8,1,9,8,5,-3,1,-1,-5,-5,7,-3,-9,-4,-3,-1,9,5,-10,-5,-9,7,8,-5,10,-2,-10,-2,3,-3,10,-1,6,9,9,2,-2,9,5,-3,-4,2,9,2,-1,-10,1,-10,-7,4,2,-5,-6,-4,-8,8,1,5,-3,6,4,-4,9,-3,-2,-2,4,9,-2,1,-2,-2,-8,-7,-8,6,8,8,-6,4,9,-2,-5,-4,-8,9,-5,-4,-1,-5,-3,10,3,-1,-10,-6,-2,3,3,-8,-2,10,-9,-10,7,-9,8,-4,-9,9,9,-8,6,-10,-9,-10,5,-8,-6,7,6,6,7,-7,4,-6,3,-3,7,10,10,-5,-1,1,3,-3,-4,-3,8,9,-7,-2,-1,9,-8,4,-10,5,3,-1,2,3,4,8,7,-3,-4,-5,1,5,-5,-9,7,6,-8,6,4,7,-7,-1,6,-1,8,7,1,1,2,-1,-4,9,-6,1,4,10,-6,-10,-3,-3,8,-2,-4,3,5,-5,10,8,-10,-8,10,10,8,-8,-2,6,1,-6,-3,10,-2,-4,2,-10,4,1,-7,9,10,8,6,-9,-2,-3,4,2,10,-8,-9,-7,8,6,-6,1,-10,-9,3,-5,-2,1,-2,2,10,-6,-10,-1,-8,6,-1,3,7,8,-7,8,-1,-7,-1,-7,-3,-1,4,3,-10,8,-7,-3,-3,6,-5,-1,-3,-1,9,7,-1,-7,10,-8,9,2,-9,2,-5,1,-3,8,1,2,7,4,-8,4,-10,-10,8,-7,-6,-8,9,5,-2,-10,4,6,3,-1,8,-3,-6,9,7,-3,-7,8,-10,8,5,8,-1,-1,2,-7,5,-1,5,7,8,-4,2,-2,2,6,-7,-7,9,-5,7,-3,4,-5,6,8,1,2,4,8,4,-3,10,-1,7,-10,-10,7,9,-2,4,-10,1,-10,5,-1,2,10,-4,-1,-9,-5,3,2,6,6,3,8,-7,-1,6,1,-5,-2,-2,-2,-3,9,-1,-8,4,-10,10,-4,-8,-1,-6,4,1,-10,10,-3,1,9,-2,2,10,4,-9,1,3,2,2,9,-4,8,3,7,3,7,-4,9,10,-6,-2,-8,8,-4,-8,6,4,-7,5,-4,-9,-2,-9,-7,-6,9,1,-5,-9,-9,-2,10,9,6,1,-2,10,-5,9,-7,6,-7,1,-4], dtype = "int16")#candidate|1049|(1365,)|const|int16
call_1047 = relay.TupleGetItem(func_629_call(relay.reshape(const_1048.astype('float32'), [9, 10, 10]), relay.reshape(const_1049.astype('int16'), [1365,]), ), 1)
call_1050 = relay.TupleGetItem(func_632_call(relay.reshape(const_1048.astype('float32'), [9, 10, 10]), relay.reshape(const_1049.astype('int16'), [1365,]), ), 1)
output = relay.Tuple([uop_1042,call_1047,const_1048,const_1049,])
output2 = relay.Tuple([uop_1042,call_1050,const_1048,const_1049,])
func_1054 = relay.Function([var_1041,], output)
mod['func_1054'] = func_1054
mod = relay.transform.InferType()(mod)
var_1055 = relay.var("var_1055", dtype = "float64", shape = (14, 14, 12))#candidate|1055|(14, 14, 12)|var|float64
output = func_1054(var_1055)
func_1056 = relay.Function([var_1055], output)
mutated_mod['func_1056'] = func_1056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1130 = relay.var("var_1130", dtype = "float32", shape = (7, 10, 13))#candidate|1130|(7, 10, 13)|var|float32
uop_1131 = relay.acos(var_1130.astype('float32')) # shape=(7, 10, 13)
bop_1139 = relay.minimum(uop_1131.astype('int16'), relay.reshape(var_1130.astype('int16'), relay.shape_of(uop_1131))) # shape=(7, 10, 13)
output = bop_1139
output2 = bop_1139
func_1157 = relay.Function([var_1130,], output)
mod['func_1157'] = func_1157
mod = relay.transform.InferType()(mod)
mutated_mod['func_1157'] = func_1157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1158 = relay.var("var_1158", dtype = "float32", shape = (7, 10, 13))#candidate|1158|(7, 10, 13)|var|float32
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1159 = func_1157_call(var_1158)
output = call_1159
func_1160 = relay.Function([var_1158], output)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1642 = relay.var("var_1642", dtype = "float64", shape = (8, 9, 6))#candidate|1642|(8, 9, 6)|var|float64
uop_1643 = relay.tan(var_1642.astype('float64')) # shape=(8, 9, 6)
bop_1659 = relay.left_shift(uop_1643.astype('uint64'), relay.reshape(var_1642.astype('uint64'), relay.shape_of(uop_1643))) # shape=(8, 9, 6)
output = bop_1659
output2 = bop_1659
func_1663 = relay.Function([var_1642,], output)
mod['func_1663'] = func_1663
mod = relay.transform.InferType()(mod)
mutated_mod['func_1663'] = func_1663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1664 = relay.var("var_1664", dtype = "float64", shape = (8, 9, 6))#candidate|1664|(8, 9, 6)|var|float64
func_1663_call = mutated_mod.get_global_var('func_1663')
call_1665 = func_1663_call(var_1664)
output = call_1665
func_1666 = relay.Function([var_1664], output)
mutated_mod['func_1666'] = func_1666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1900 = relay.var("var_1900", dtype = "int32", shape = ())#candidate|1900|()|var|int32
var_1901 = relay.var("var_1901", dtype = "int32", shape = (1, 4))#candidate|1901|(1, 4)|var|int32
bop_1902 = relay.minimum(var_1900.astype('int32'), var_1901.astype('int32')) # shape=(1, 4)
output = relay.Tuple([bop_1902,])
output2 = relay.Tuple([bop_1902,])
func_1911 = relay.Function([var_1900,var_1901,], output)
mod['func_1911'] = func_1911
mod = relay.transform.InferType()(mod)
mutated_mod['func_1911'] = func_1911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mutated_mod.get_global_var('func_1911')
var_1913 = relay.var("var_1913", dtype = "int32", shape = ())#candidate|1913|()|var|int32
var_1914 = relay.var("var_1914", dtype = "int32", shape = (1, 4))#candidate|1914|(1, 4)|var|int32
call_1912 = func_1911_call(var_1913,var_1914,)
output = call_1912
func_1915 = relay.Function([var_1913,var_1914,], output)
mutated_mod['func_1915'] = func_1915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1964 = relay.var("var_1964", dtype = "float32", shape = (9, 14, 12))#candidate|1964|(9, 14, 12)|var|float32
var_1965 = relay.var("var_1965", dtype = "float32", shape = (9, 14, 12))#candidate|1965|(9, 14, 12)|var|float32
bop_1966 = relay.not_equal(var_1964.astype('bool'), relay.reshape(var_1965.astype('bool'), relay.shape_of(var_1964))) # shape=(9, 14, 12)
func_1157_call = mod.get_global_var('func_1157')
func_1160_call = mutated_mod.get_global_var('func_1160')
const_1970 = relay.const([-6.191918,8.406086,8.728539,2.341460,0.376176,0.129811,-9.707617,-4.669721,8.930548,-5.239506,3.156804,2.559157,-5.584193,-7.903941,3.410505,4.317474,-2.305676,-9.887846,-7.551435,-0.903085,-0.458541,-7.862336,4.474537,6.226670,5.471777,5.218400,-5.490993,-7.871839,-9.791845,-0.476586,-2.813198,-6.479697,-8.418426,-2.932761,-9.023045,3.643011,3.046267,6.117291,-9.579996,2.315479,-8.773530,-0.852933,7.207349,-2.335570,2.553824,7.948301,-3.668665,5.795706,5.743754,-6.207552,-9.299211,-6.903864,7.055627,-2.815228,-7.474007,-5.925019,-8.746091,7.838613,9.983833,-9.236922,-6.161216,-9.592381,9.097440,-4.781459,6.874320,-2.623562,-4.596374,7.026899,9.060847,8.031478,-1.296892,-4.598660,8.107447,-7.961715,5.158246,8.362582,7.144024,9.155924,8.723198,8.324497,-6.304291,-8.291249,-5.799966,-5.593274,-3.659137,1.171351,0.603974,8.169226,-8.281854,5.055785,-4.533698,1.653314,-8.747539,-7.104454,-7.958057,0.275786,-0.332855,6.565799,2.793095,-3.431134,-5.614232,-4.178513,9.659701,-1.639602,-8.883038,-9.780039,-7.455745,-8.798602,-1.400978,8.040798,-0.322282,7.828937,-1.932610,8.203185,-1.407083,1.983761,1.004471,9.564576,-5.036451,-5.116873,9.147785,1.692421,4.245626,6.713838,7.594337,-8.475627,9.762404,-9.433321,5.969320,2.422962,7.389348,-9.964186,0.773710,5.200242,2.534084,-0.974443,-5.186445,-6.425544,4.059514,4.384296,-8.780902,-6.770453,5.476698,-6.517129,-7.516523,8.232399,-9.942173,-4.742449,2.297571,5.667438,-0.063977,3.790341,-7.405241,-0.097443,0.062986,-0.151167,0.381863,9.752356,9.747767,9.829682,-5.471887,6.495940,-5.881240,-2.724456,3.240977,-8.502802,3.637549,8.706050,-3.595510,0.911159,1.614681,7.861313,-9.523453,-2.437342,-1.131307,2.707057,-6.150274,-8.516467,-4.472726,-8.300981,-1.098195,2.698630,-7.371604,6.294516,-4.101538,3.718380,-3.898851,1.434757,3.645823,-9.970325,1.243414,-1.842607,-6.844962,1.548954,8.046562,8.480333,-8.744877,0.133977,5.569407,8.999345,1.649126,6.215836,-7.524250,-0.536426,-0.071099,9.771343,-5.504340,0.201975,-8.572469,-0.672875,-9.279857,-9.912286,-7.410184,-9.329445,-9.775764,-8.093341,-4.730242,-9.470683,-5.407388,-7.870810,5.762962,-4.615447,-0.645947,4.265038,-2.789948,-7.897252,8.911875,-4.286276,8.928471,6.321172,-0.435679,5.445869,0.932540,5.050257,0.706393,3.731139,-7.591399,-6.470331,0.956888,9.524359,7.511092,9.969176,-3.642195,7.438023,-5.385448,-5.262194,-2.535148,9.354812,4.647847,5.985092,-5.320686,9.541961,-3.712954,6.536949,4.203679,-6.346917,1.154377,3.348177,5.704958,7.074214,2.410222,-4.201192,7.132971,-9.221332,3.783036,3.240065,-9.606231,-1.969909,8.534018,-5.716969,-3.704922,9.993368,-7.886146,-1.258869,7.331982,3.378349,9.350255,-5.375123,1.502719,2.864104,-8.560158,8.771277,0.509031,-9.031493,5.060054,-3.967924,8.156582,1.112184,-9.353358,4.167747,3.933215,9.793453,-9.895773,-8.565309,-1.827377,-4.876024,-5.762705,8.805463,4.456199,-7.098117,-8.848582,3.110478,0.447195,-6.694439,-4.374890,9.303299,-8.257860,-7.768611,8.732177,4.069360,-8.001017,-5.595477,7.993286,-9.145147,2.486387,0.165374,4.277211,0.229385,-2.797366,7.702175,9.493398,-7.675286,1.640210,4.889476,8.122072,-8.596274,-1.264230,6.217686,-1.740387,7.533458,-1.429909,5.397727,1.253945,-0.084950,-1.605498,-7.511528,3.407311,-6.772086,5.903228,3.078175,-2.096003,-7.075199,-1.101698,-4.367608,3.631063,6.625423,-9.338994,-3.502583,1.052505,9.400012,-2.412855,-1.949205,0.077525,-4.912843,-1.818658,3.639309,8.999025,7.010968,2.872677,-6.265237,1.716254,3.503800,-5.645907,9.433873,-1.347765,-3.735759,-8.802704,-8.772817,1.740688,-2.705493,-5.866695,-4.800607,6.017759,-2.019672,9.444221,-1.270845,-6.354505,-2.001153,2.608496,-3.436053,8.654189,-4.739279,7.177002,2.618542,3.384400,-0.984710,5.290609,0.771206,1.637700,-8.698049,-9.940672,6.835973,-3.828843,5.814662,-9.748003,0.480441,-4.922231,4.628316,4.350378,-8.918235,9.258149,-9.765906,9.704763,2.093886,9.572772,1.190558,-5.524067,-4.442686,9.822453,-0.566424,-3.810352,9.502501,4.901936,-5.077873,1.758878,0.569658,-7.798408,6.723061,0.818636,-3.772962,-4.196594,-8.531924,-4.765028,1.527458,4.755487,6.511637,-0.481236,-5.569579,-2.720270,-0.148533,-3.878791,-4.668421,4.009880,-6.410286,-6.832990,-9.393108,0.462471,-4.698760,8.325171,8.985364,3.600089,-5.697115,7.898453,-0.554650,-8.496497,6.307487,-7.830174,6.662754,4.070945,6.518861,-7.491574,7.409066,-0.690226,6.394119,1.115391,-0.893921,-0.340228,-1.547763,-6.339113,5.063898,4.751033,7.302143,-7.545990,-1.821127,-1.104173,3.642760,7.710323,-1.945684,-2.143261,7.826014,-3.911005,5.674478,9.244605,-1.091757,-4.291691,-4.439240,-8.600207,4.369643,-1.414853,2.921786,8.405979,6.921296,1.793295,4.032929,7.013082,0.780514,-3.244081,-9.266347,3.943559,1.570436,-2.293424,6.704449,2.822216,3.474218,-9.106689,4.529840,-1.207876,-4.090525,-2.156394,6.836601,7.508724,-2.666882,7.517575,6.993095,3.670477,-3.516612,-7.495518,6.304520,1.887854,8.634371,5.446206,0.519759,6.984852,3.793818,7.382597,3.178032,5.126845,1.625370,5.592498,1.856081,9.552511,-3.631949,-3.254567,-9.977111,0.053351,6.960934,-0.754108,-5.987808,0.906817,3.750158,-3.829047,8.999126,-3.102303,2.954383,1.396232,9.817351,-6.570435,-6.553436,1.514689,-1.379643,-9.949784,2.215194,9.554083,-2.116160,0.010675,6.527859,-9.275815,4.414348,0.118832,-0.788778,-7.114593,-3.497950,-4.172696,4.541653,1.073365,-0.926378,5.324827,-5.738581,0.190987,7.030218,-1.016703,-1.630724,9.192523,-6.640488,-6.476820,1.358155,-9.057006,-4.415138,-9.189563,-5.778882,0.125347,9.294851,-3.636752,8.968404,-4.161485,-6.604791,-6.157802,-9.885794,-8.272523,-6.662226,6.819586,2.956142,2.292134,-4.542075,5.734471,7.343609,0.828501,-5.566420,-4.237499,2.484575,-7.731225,-8.953913,7.082127,5.963731,4.900976,-6.955790,3.825699,-5.192433,2.239179,3.941065,6.490418,-8.934391,0.815526,-1.886576,-6.907665,6.646648,1.271186,1.058908,-7.342842,-2.374603,9.820153,-8.995986,1.096856,1.353052,-8.334527,0.285797,-9.413586,-6.208555,-4.959175,1.869775,4.508389,-5.081018,-0.655365,0.356979,-0.878293,-7.400595,-9.287635,-5.734356,0.005951,7.356621,-6.519772,0.465631,-2.725927,8.004519,-4.579408,3.720580,4.833029,-2.193756,-8.135293,-7.017574,-9.378101,-1.812652,6.122646,-1.210946,-0.976358,-6.038387,-6.063610,0.255537,-6.741905,-7.611613,-4.622541,-3.368842,4.470737,1.221917,-2.923427,-1.794652,8.566524,7.823415,1.503682,7.032849,3.245454,5.635836,-0.546181,-7.386439,8.702124,7.414746,4.173156,8.011156,8.341093,-4.866517,-4.384768,-3.264110,5.101214,-5.392463,3.592083,-1.589478,-6.105031,-4.837215,5.607285,4.154405,2.606573,-1.080893,-6.731315,3.183243,-8.415209,8.772954,-9.169175,-6.339699,9.740719,7.415708,1.577470,-5.431402,9.730301,-3.533276,7.688663,6.770771,-4.316977,5.668985,7.670993,-7.275840,-4.055543,-0.018509,8.522852,-0.941674,4.572602,7.779853,-4.867794,-9.153436,8.287830,-1.894738,-7.475067,5.705738,9.759873,3.808205,-2.756824,-5.760665,1.618347,5.954198,-0.465342,-2.473990,6.623654,-6.559187,3.658641,1.619657,9.560456,3.015527,6.419780,-3.056040,-4.182675,4.562545,-4.439504,1.850186,-4.000917,-9.102065,2.222912,3.336581,8.290586,-3.029049,-2.363540,0.081368,5.925651,-8.333985,0.599465,1.344791,-9.615130,-5.508582,-1.416310,7.579718,8.011235,2.596582,-7.864820,9.415334,-4.498553,-6.896307,-2.268789,-0.318395,-0.044033,-1.301436,-2.685564,4.425905,2.297927,7.208397,-7.186660,-0.082586,-9.400497,-9.611019,-1.902267,-4.208755,8.207458,-0.587960,-6.426842,4.668585,7.400013,0.594376,3.190197,-9.877804,-3.989823,-3.008256,-1.693098,-4.376204,6.676238,3.145584,3.007324,-4.345173,-5.660191,-9.174356,-8.990701,-9.010888,7.069082,7.461029,-3.910985,2.149177,1.500949,5.719298,0.510351,-3.925849,-6.911619,-0.307297,-2.609708,-4.161143,0.274271,6.246379,-2.041089,9.971432,0.385630,-9.673422,5.429882,6.975199,-7.193651,-6.115302,-7.634176,-7.959563,6.764137,-9.754151,9.422109,-2.530036,5.222777,-9.113786,4.123868,-6.392276,-9.489409,9.268597,-6.466628,-3.409972,3.723286,-5.377270,-9.361453,0.322557,-3.568667,1.341548,-0.259829,-3.456317,2.377647,-6.279221,5.459564,-4.585661,2.305942,5.511051,-3.752550,-4.181557,-7.209862,3.539267,8.240976,-7.442197,2.722490,-8.048596,-0.818673,0.668170,8.713245,-0.239538,-8.123908,1.827156,-1.510684,-2.288067,-2.639202,6.531216,8.042065,8.488757,2.254640,-4.084097,1.537393,-2.827949,-3.537015,-2.899324,7.259023,-5.127195,3.387117,-7.202914,-8.586456,-6.361900,8.483940,5.044737,-3.825090,-9.178340,8.065100,-7.305793,6.841470,-8.226165,6.699613,7.164143,4.510846,-6.682186,9.502843,5.210402,3.825756,8.877754,0.473264,-8.224543,0.439286,0.215057,6.383435,-2.056757,-4.640425,-4.035266,5.477127,1.238789,8.517860,2.372935,-1.551586,-3.533398,-3.684540,-1.537041,3.666218,8.693961,9.961223,4.223337,0.845256,7.403142,-7.234738,4.088505], dtype = "float32")#candidate|1970|(910,)|const|float32
call_1969 = func_1157_call(relay.reshape(const_1970.astype('float32'), [7, 10, 13]))
call_1971 = func_1157_call(relay.reshape(const_1970.astype('float32'), [7, 10, 13]))
func_1157_call = mod.get_global_var('func_1157')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1981 = func_1157_call(relay.reshape(call_1969.astype('float32'), [7, 10, 13]))
call_1982 = func_1157_call(relay.reshape(call_1969.astype('float32'), [7, 10, 13]))
func_761_call = mod.get_global_var('func_761')
func_763_call = mutated_mod.get_global_var('func_763')
const_1986 = relay.const([-1.017273,-6.187186,-0.394653,5.931326,-2.690655,-4.838443,7.955572,-3.939051,2.853590,2.310679,-3.303405,3.647032,-1.178795,-9.459800,4.130978,-0.985445,8.885393,-0.409842,2.250277,8.003801,-7.103949,1.629570,-6.713170,-1.219220,8.514043,3.174753,8.359626,-2.996249,-1.964099,-8.335343,9.507436,7.605889,4.086094,-3.680554,0.600046,-9.546240,7.727946,6.455515,7.769058,0.485919,4.789345,3.354371,1.172461,-5.197586,-6.427935,7.030324,7.864221,-4.570118,-4.254181,6.237252,7.204185,9.340927,9.428326,-8.628742,-5.807357,1.386587,-5.700879,6.774779,9.661365,4.646429,-4.517070,9.078884,6.601701,-2.372487,-2.411733,4.171541,0.909324,-2.784147,4.601571,-5.482930,-9.231340,-9.767464,-4.454786,-3.990373,2.219599,5.164155,-1.355821,-5.168632,-0.695151,2.568251,-6.417333,-0.597025,-7.104166,3.679041,5.265247,2.899662,7.126584,-8.272647,8.699728,8.702700,-4.498628,-1.326372,5.685855,-7.724897,2.845551,-5.183710,-1.647540,-7.235334,0.948524,8.209336,9.355215,-8.592241,-0.448962,-4.587693,8.486082,-4.669638,-0.519318,-8.688499,2.343848,6.828230,1.159255,6.933707,2.379031,-9.649926,1.753146,8.820728,-3.837972,9.258946,6.115772,8.219446,-5.344477,-5.745752,-3.053020,-4.248534,-7.753443,3.575919,-8.759220,8.539657,-4.522111,-9.098743,3.264209,-1.006807,-4.551707,-2.784140,7.007280,-5.424615,-4.252709,-7.635380,-8.119401,-8.701644,-2.554752,-9.973418,-0.996056,-5.393288,4.742761,-3.741626,1.656005,-8.902770,2.062745,2.214259,-5.277123,-9.251145,-2.717976,-9.705768,9.665533,3.294273,-9.046180,-1.018491,-8.004915,2.021833,-7.763444,-1.694358,-5.620422,8.525124,-0.714248,-6.074739,-2.056031,1.768332,2.484705,8.376357,-7.455601,-5.543592,-5.971365,-8.691963,-5.153740,-1.226986,9.529876,-3.630836,-7.308065,6.889662,-5.923889,5.347690,-1.381467,3.799534,-9.168708,4.755777,-5.240745,4.692938,-5.129584,6.185655,3.963884,6.591972,-0.516408,-6.150451,5.052165,9.922319,1.646568,5.348370,5.211822,1.175469,4.395585,0.118935,1.877116,7.216571,-3.582649,-6.397738,-2.785517,-5.612898,8.383076,8.651347,2.292204,-0.131571,-1.648458,-4.093871,-1.911048,5.673077,-8.896206,9.389529,-4.581342,-9.957561,5.082287,-9.670369,-1.976477,5.517431,-4.028913,4.577609,7.368402,-6.734994,2.169197,-9.915180,3.268640,8.034251,-0.011356,5.658267,8.659551,5.609119,-5.620319,7.810851,-7.249801,-5.189090,2.432478,-1.838872,2.090400,-0.319014,-2.652717,-9.102828,1.816637,1.440860,8.657478,-4.162251,-6.487128,9.971328,8.644361,-8.394216,8.195708,-9.874049,-6.732378,-7.490881,-7.082793,-1.564905,1.173778,-3.917104,-1.286552,-2.167794,-6.135017,5.233228,-7.142063,9.811201,6.442781,0.472090,-6.474765,5.984431,7.674732,-1.860617,5.596696,-2.697289,8.202634,8.341949,-5.611600,5.414362,-4.728556,-8.806025,-2.194038,-7.336178,7.437703,-4.351618,-0.537537,-4.320872,9.784114,2.355204,2.887418,1.933275,-3.787496,-2.509455,-1.139988,7.286060,-7.661236,9.357012,4.550243,-8.792101,-4.319494,-8.069744,5.966323,-5.365450,3.039630,8.351902,7.911100,6.675059,1.433832,-5.261872,-0.676341,-5.744796,8.269372,1.145686,7.543984,7.337437,-4.619210,-1.420277,-4.772444,0.773735,-4.585921,-1.480951,2.019637,2.787568,-4.147058,6.344679,2.146756,0.520867,9.427787,9.571927,2.847629,-1.512054,-4.634643,5.292378,7.298916,-0.422942,2.377425,7.045807,9.942982,9.249510,6.652884,-6.396352,-5.260809,9.280583,-9.854249,-4.307572,-4.927245,8.031547,-9.616916,0.048587,8.280642,1.632498,3.027117,-6.704501,-1.415934,-9.512169,-0.180433,-5.583930,-6.393595,-7.723032,2.663032,-2.596771,-0.086818,-7.703385,-2.505941,-3.683850,-4.396798,-3.670987,9.411250,-1.719924,-9.918941,9.482386,4.414559,8.928941,9.030052,-7.223733,4.668462,-0.349988,-8.024094,-1.203913,4.336165,8.248347,-8.298969,5.725846,-2.889474,1.075022,-8.037623,4.447072,1.459606,2.336230,-8.213270,9.662794,6.327774,1.429489,-1.654263,-2.439060,0.391292,3.841000,-6.699873,7.059054,-9.374432,1.691158,6.358305,-0.106654,-0.323860,7.887363,8.238306,-0.581854,5.901450,0.797550,5.884886,7.415143,3.750970,-1.673076,3.744937,-4.281721,8.610368,-2.924147,-1.072690,8.260847,-6.900500,9.116249,7.910138,-8.694137,-2.721886,-7.914829,-4.224540,-7.853287,8.123751,2.889169,-1.565654,-3.963728,2.239833,-5.163950,-0.944029,-3.883371,-6.122803,-1.427522,2.447754,-7.808448,-3.316761,9.046086,-6.480257,-7.516210,4.762386,-4.207495,7.482772,8.904028,9.076835,-3.657659,9.475494,9.573758,9.077977,7.457517,-6.986037,-4.800518,-1.179814,3.530366,7.691292,-4.670016,9.782121,-6.756469,-5.576122,-6.858858,6.418985,2.579762,7.649347,-6.067248,-1.079472,-2.097707,-2.460052,-0.157578,-1.866844,3.510677,1.388517,-4.070265,2.159800,-6.769118,-7.055634,0.398551,9.682641,-9.264282,4.262808,2.016151,-2.651030,8.541605,-0.410804,-6.892168,7.302237,-5.058171,5.250049,-6.623487,6.693043,-5.353186,4.974177,3.752749,-3.632294,3.957198,8.357809,-0.047549,-9.690154,-6.118872,2.193193,-4.853106,-5.628525,1.077551,6.645275,-1.095950,-4.831036,3.231528,0.526579,4.708752,-5.124712,4.456905,7.354476,-1.663967,1.922757,3.504194,5.978010,-4.407004,-3.413067,5.767983,0.948985,4.040324,3.336649,1.519765,3.836799,-7.692505,0.158791,5.832889,1.886064,0.486355,-7.303883,6.988373,-9.403258,-7.089017,-8.939269,-6.351502,7.895353,1.211925,-7.025442,8.269168,3.085998,-7.825622,-0.906611,-4.282869,5.233276,-1.866002,-4.930363,8.969118,8.581242,1.047668,3.444135,0.561936,0.528174,1.524824,4.824889,-1.981849,1.785141,-8.698069,-5.619005,3.220605,-1.349260,-7.008180,-6.991585,0.400995,7.667848,7.578819,-7.665103,6.204230,3.453741,-7.025829,-5.600796,-6.151245,8.425940,3.553523,3.777517,1.284123,-6.939181,-9.742759,2.104136,9.744362,-3.326473,0.054068,8.751749,5.045955,-7.349599,-8.465833,-4.468388,-8.453826,8.070730,3.420315,-9.892094,-6.602449,-0.820043,8.920416,-0.600990,-0.916353,9.469827,4.144292,0.876848,-4.134255,-3.210689,-3.814786,1.947193,-5.520980,-5.572561,2.963387,-2.721058,6.195080,-2.539646,-0.454842,4.183990,9.506869,2.009072,-7.548589,7.035187,-9.455090,1.277464,-7.495774,4.072563,0.889723,6.540262,-5.669716,-6.696908,-9.035691,4.677572,0.172212,-4.214012,6.369538,0.029731,-0.859249,-5.947964,4.211418,6.998720,-7.193942,-4.740584,-1.733042,-3.437059,-5.496932,-0.033351,9.974172,5.978933,0.595979,-8.815399,8.969603,-6.833818,-6.316977,-9.050134,-6.727076,-9.065100,-7.562364,-9.096015,-0.132750,-8.039917,9.920688,2.052266,-6.345586,1.190709,-1.254984,-7.324345,7.697400,9.700610,-6.002695,3.014352,5.539595,5.927726,7.550809,-5.066377,4.556811,-3.678059,-6.756074,3.661341,-3.557843,-8.173968,-0.355277,7.341009,8.471553,-2.003381,-4.621762,-6.837782,9.057059,-8.946622,0.847332,-4.375599,8.685559,2.942453,-0.832490,-3.750238,0.992418,-7.285315,3.610330,8.061151,-5.625359,-6.319267,-4.999623,2.374222,7.672580,-5.698624,-2.251943,7.629181,1.337854,0.716621,4.034576,-7.785013,-9.097631,2.239527,-0.949704,-7.050669,-6.456057,-5.437592,5.414726,-6.947060,3.778311,8.449325,0.181554,3.901238,7.044519,-0.408010,-1.608373,4.690665,5.608895,-1.227949,-2.849416,6.646491,-9.249617,5.882675,2.883218], dtype = "float64")#candidate|1986|(728,)|const|float64
call_1985 = relay.TupleGetItem(func_761_call(relay.reshape(const_1986.astype('float64'), [8, 13, 7])), 5)
call_1987 = relay.TupleGetItem(func_763_call(relay.reshape(const_1986.astype('float64'), [8, 13, 7])), 5)
output = relay.Tuple([bop_1966,call_1969,const_1970,call_1981,call_1985,const_1986,])
output2 = relay.Tuple([bop_1966,call_1971,const_1970,call_1982,call_1987,const_1986,])
func_1991 = relay.Function([var_1964,var_1965,], output)
mod['func_1991'] = func_1991
mod = relay.transform.InferType()(mod)
mutated_mod['func_1991'] = func_1991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1991_call = mutated_mod.get_global_var('func_1991')
var_1993 = relay.var("var_1993", dtype = "float32", shape = (9, 14, 12))#candidate|1993|(9, 14, 12)|var|float32
var_1994 = relay.var("var_1994", dtype = "float32", shape = (9, 14, 12))#candidate|1994|(9, 14, 12)|var|float32
call_1992 = func_1991_call(var_1993,var_1994,)
output = call_1992
func_1995 = relay.Function([var_1993,var_1994,], output)
mutated_mod['func_1995'] = func_1995
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2676 = relay.const([[[2.395213,-8.298823,-0.843516,-8.456311,1.480401,5.524514,-9.052489,1.052556,-7.800562],[-3.391840,5.967179,-4.126626,-6.229360,7.909698,-1.046182,-0.723303,4.100412,8.506735],[-7.183571,-9.573863,7.023653,9.117449,9.130686,-4.364721,9.545861,-2.645231,4.941723]],[[-2.396594,-8.085487,2.151301,-8.988505,-9.596758,-1.591539,-3.789857,1.410540,-2.163887],[-6.622547,0.075739,0.169577,9.281780,-6.694084,6.449418,-9.885211,-9.997800,0.624147],[0.535240,6.933704,5.740672,8.781598,-6.601734,-3.865915,9.607952,-1.917769,-5.232846]]], dtype = "float32")#candidate|2676|(2, 3, 9)|const|float32
uop_2677 = relay.log10(const_2676.astype('float32')) # shape=(2, 3, 9)
output = relay.Tuple([uop_2677,])
output2 = relay.Tuple([uop_2677,])
func_2681 = relay.Function([], output)
mod['func_2681'] = func_2681
mod = relay.transform.InferType()(mod)
output = func_2681()
func_2682 = relay.Function([], output)
mutated_mod['func_2682'] = func_2682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_2683 = relay.TupleGetItem(func_2681_call(), 0)
call_2684 = relay.TupleGetItem(func_2682_call(), 0)
var_2696 = relay.var("var_2696", dtype = "float32", shape = (2, 3, 9))#candidate|2696|(2, 3, 9)|var|float32
bop_2697 = relay.floor_divide(call_2683.astype('float32'), relay.reshape(var_2696.astype('float32'), relay.shape_of(call_2683))) # shape=(2, 3, 9)
bop_2700 = relay.floor_divide(call_2684.astype('float32'), relay.reshape(var_2696.astype('float32'), relay.shape_of(call_2684))) # shape=(2, 3, 9)
output = bop_2697
output2 = bop_2700
func_2701 = relay.Function([var_2696,], output)
mod['func_2701'] = func_2701
mod = relay.transform.InferType()(mod)
mutated_mod['func_2701'] = func_2701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2702 = relay.var("var_2702", dtype = "float32", shape = (2, 3, 9))#candidate|2702|(2, 3, 9)|var|float32
func_2701_call = mutated_mod.get_global_var('func_2701')
call_2703 = func_2701_call(var_2702)
output = call_2703
func_2704 = relay.Function([var_2702], output)
mutated_mod['func_2704'] = func_2704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_2714 = relay.TupleGetItem(func_2681_call(), 0)
call_2715 = relay.TupleGetItem(func_2682_call(), 0)
output = call_2714
output2 = call_2715
func_2717 = relay.Function([], output)
mod['func_2717'] = func_2717
mod = relay.transform.InferType()(mod)
output = func_2717()
func_2718 = relay.Function([], output)
mutated_mod['func_2718'] = func_2718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2739 = relay.var("var_2739", dtype = "uint8", shape = (11, 11, 6))#candidate|2739|(11, 11, 6)|var|uint8
var_2740 = relay.var("var_2740", dtype = "uint8", shape = (11, 11, 6))#candidate|2740|(11, 11, 6)|var|uint8
bop_2741 = relay.left_shift(var_2739.astype('uint8'), relay.reshape(var_2740.astype('uint8'), relay.shape_of(var_2739))) # shape=(11, 11, 6)
func_111_call = mod.get_global_var('func_111')
func_115_call = mutated_mod.get_global_var('func_115')
const_2766 = relay.const([-8,10,-8,-8,-2,6,7,-2,4,-10,10,-10,3,5,-5,-9,-3,-3,-10,9,-6,-6,7,-5,1,-10,3,7,3,-9,-2,-3,9,-5,-7,-5,-9,5,8,-9,-5,9,8,6,-9,2,-7,-6,1,7,8,-8,-2,5,2,8,-2,5,-2,3,-10,-3,-10,-3,-2,8,10,-9,8,2,-9,-7,-7,10,7,-3,8,4,-6,-8,5,10,-1,-10,4,-3,2,3,4,9,9,-10,9,-5,-3,3,1,5,-2,-5,9,-7,-7,10,-4,-5,-10,-9,3,4,-9,5,-8,-3,7,7,5,-7,-6,6,-6,4,7,7,-9,7,-7,9,-5,8,-2,8,-10,-10,1,-6,-6,-5,4,-7,2,-1,6,-4,4,-3,-6,-4,7,3,-9,-7,9,-9,3,-8,-10,3,10,-7,9,9,-4,-4,-6,-10,-5,-9,10,-9,-4,1,-5,1,4,-8,-1,-10,1,-7,10,1,6,-10,-7,-3,-6,-8,1,-6,9,-9,2,-5,-5,9,10,1,-9,-4,9,-1,4,-4,9,9,4,8,7,-1,6,8,-2,-1,7,9,-7,-1,-10,-5,4,4,-1,-6,-6,3,-6,5,7,9,5,1,8,2,-6,-4,-4,8,3,-6,-10,-8,-9,6,-10,3,3,-7,6,1,-10,-2,-5,10,4,-4,6,-3,-6,-2,-4,-4,-10,1,4,-8,7,9,-10,-10,6,9,8,8,2,4,8,4,1,-2,7,1,9,6,10,2,-9,-9,-6,5,-10,6,7,4,5,-6,7,6,7,3,-7,-3,-9,-7,1,3,-1,9,-8,9,-8,-6,2,9,4,-7,9,9,-4,3,8,-9,4,6,-9,-5,-10,2,-5,-1,4,-1,-10,3,9,-1,9,-6,6,-4,9,-3,-2,-10,9,7,-1,-8,-1,7,4,-6,8,7,6,-10,-1,-3,-10,-10,-6,2,-5,10,-1,7,7,-10,7,-2,9,7,6,10,5,-5,-7,10,-9,-10,-9,8,2,2,5,4,7,1,3,9,3,1,-3,4,3,-4,10,-10,-2,-4,8,1,1,-9,5,-6,-4,-10,10,-10,-5,7,8,10,10,7,3,-3,9,-1,-10,5,-4,10,9,6,6,-3,-1,-4,-8,2,8,6,-9,-4,-3,-2,5,2,-4,10,-4,-4,-6,7,-9,3,-4,5,-7,-2,-9,9,8,8,10,6,10,8,-10,8,-3,7,2,-1,-2,-9,-7,6,10,1,-1,5,-7,-7,-7,6,-8,7,8,8,1,2,-8,5,-2,9,3,7,6,-9,-9,-4,2,6,9,10,3,-8,-10,-10,-9,-8,-2,4,-8,-10,-10,3,-6,-9,-5,5,-3,-9,-5,-5,-8,1,-5,10,10,2,6,1,6,-9,3,9,6,-6,8,9,4,8,7,-5,-9,8,-2,-7,2,-9,9,-8,-7,8,-8,3,-9,3,10,4,5,-5,2,7,-10,-7,-6,4,1,-1,10,-1,5,-4,4,-4,-9,-7,-1,-5,5,-9,-8,6,-6,-10,-9,7,7,-8,-1,-9,1,1,4,-4,1,10,8,-1,-3,3,2,-5,-1,-9,5,-3,5,10,-4,-8,8,4,-6,-10,-4,10,-3,4,-9,-8,-2,-3,-9,-8,-7,-7,8,3,-4,2,8,-3,-6,8,-3,-10,-9,4,5,-10,10,-1,7,-2,-7,-9,4,-5,-3,6,9,-1,-8,-6,-8,-9,-2,-7,-2,-9,3,3,2,-10,3,8,-1,-10,-5,3,-1,-2,-3,-1,7,-6,-8,10,9,2,3,3,3,4,-10,-1,-1,7,1,-1,-7,-1,-5,6,10,-7,-10,-8,6,10,8,10,-4,5,4,-6,-2,8,7,-3,-2,1,-3,-6,10,6,9,9,-10,9,-8,-4,9,10,-6,4,-5,3,-3,-6,6,10,7,-9,4,10,-2,-4,8,8,7,3,8,-10,6,-3,-10,-10,-2,4,8,10,10,-10,6,-2,1,-4,1,9,2,10,4,-8,8,2,8,5,-6,6,-2,-4,4,-3,4,2,3,-9,-1,-3,1,-4,-7,-8,-3,-6,3,-9,10,9,3,1,3,-3,6,-5,1,-9,10,1,2,-10,9,-9,3,-2,-1,-4,-2,-3,1,7,-9,10,4,5,-1,10,-6,9,-8,10,4,8,-1,6,10,5,10,9,1,9,-10,-3,7,-10,3,-8,3,6,-8,-9,-6,8,-2,-9,2,6,-6,-2,1,1,1,-2,7,2,10,6,6,1,2,4,7,-7,8,-5,-9,-2,6,-7,-4,10,10,8,-9,-5,-9,4,8,-9,1,5,2,2,-3,-3,-6,9,-1,2,-7,3,-8,2,-10,-2,4,-1,-5,4,-2,3,2,-3,-2,-6,-4,5,-6,7,5,-9,5,5,2,7,8,1,-5,-4,-1,-4,-9,-8,5,3,7,10,1,-3,7,-9,2,-7,-6,2,3,-4,-6,-9,2,-2,5,10,-9,1,2,3,9,9,-2,3,-8,10,-1,-6,3,1,-3,-4,-3,10,-4,-9,4,-8,-8,4,10,-1,-2,-6,-8,1,-10,-6,1,-8,9,-9,7,9,-10,3,-6,-1,-5,3,3,-5,-10,-6,6,-5,-5,-10,-2,8,-4,2,-7,-8,1,6,-7,7,-3,-8,10,6,10,6,4,5,-6,8,9,6,1,-4,-6,-6,7,-9,-1,-10,8,-4,1,2,6,1,-8,-7,-2,7,-3,8,-1,5,-10,3,-5,2,-8,-3,4,10,-4,3,8,-3,-7,1,8,9,2,-7,1,-5,6,3,-4,4,-2,4,-10,-10,-10,4,6,-7,7,7,7,-9,2,3,-7,-5,-7,-6,8,2,7,-9,9,-3,-1,-6,-4,1,7,1,-2,-2,5,-6,5,4,-5,-7,8,1,-2,-8,-2,-2,3,-2,10,-6,3,2,1,10,-1,-10,-4,-10,10,3,-9,10,8,8,7,3,-9,5,-2,-8,1,2,1,-2,-10,-10,9,10,3,5,4,-9,4,-3,-1,7,-8,-7,-1,-9,-7,-1,-10,-4,-10,4,-9,-7,9,9,-2,3,-7,9,1,-2,-9,-5,-3,4,9,7,3,1,5,-3,8,7,6,5,3,6,-10,3,-1,7,4,-6,-10,-10,-6,-2,-1,-2,-4,-6,6,-3,4,-2,-2,3,-4,5,-7,-1,-2,-9,-1,-1,10,5,1,2,3,-2,-2,-1,3,2,-10,5,7,6,5,-6,7,10,-9,-5,8,-5,2,9,-1,7,6,-5,6,-1,-9,5,-8,3,-9,10,-6,8,-3,5,-9,-7,-4,8,-2,-10,-7,6,-2,-5,-7,-6,1,1,2,8,-8,-8,5,-2,-6,9,-7,-1,2,-10,8,-10,-2,3,-6,-7,5,-7,-1,9,-3,-3,3,-1,-7,-4,7,-7,6,4,10,8,-9,8,-6,-9,5,-9,-7,3,-9,10,10,6,-7,10,4,-7,-3,-2,1,-5,-5,-5,5,6,-5,-4,6,-3,-2,4,-8,-10,-3,-9,-6,-1,1,3,5,3,-10,7,7,-8,-2,7,-3,-1,1,-1,8,-10,-1,6,4,8,-6,-9,6,4,-2,-7,9,-1,10,7,-5,7,-10], dtype = "int16")#candidate|2766|(1365,)|const|int16
call_2765 = func_111_call(relay.reshape(const_2766.astype('int16'), [15, 13, 7]), relay.reshape(const_2766.astype('int16'), [15, 13, 7]), )
call_2767 = func_111_call(relay.reshape(const_2766.astype('int16'), [15, 13, 7]), relay.reshape(const_2766.astype('int16'), [15, 13, 7]), )
output = relay.Tuple([bop_2741,call_2765,const_2766,])
output2 = relay.Tuple([bop_2741,call_2767,const_2766,])
func_2781 = relay.Function([var_2739,var_2740,], output)
mod['func_2781'] = func_2781
mod = relay.transform.InferType()(mod)
var_2782 = relay.var("var_2782", dtype = "uint8", shape = (11, 11, 6))#candidate|2782|(11, 11, 6)|var|uint8
var_2783 = relay.var("var_2783", dtype = "uint8", shape = (11, 11, 6))#candidate|2783|(11, 11, 6)|var|uint8
output = func_2781(var_2782,var_2783,)
func_2784 = relay.Function([var_2782,var_2783,], output)
mutated_mod['func_2784'] = func_2784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_2803 = func_2717_call()
call_2804 = func_2717_call()
output = relay.Tuple([call_2803,])
output2 = relay.Tuple([call_2804,])
func_2815 = relay.Function([], output)
mod['func_2815'] = func_2815
mod = relay.transform.InferType()(mod)
output = func_2815()
func_2816 = relay.Function([], output)
mutated_mod['func_2816'] = func_2816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_2860 = relay.TupleGetItem(func_2815_call(), 0)
call_2861 = relay.TupleGetItem(func_2816_call(), 0)
func_1663_call = mod.get_global_var('func_1663')
func_1666_call = mutated_mod.get_global_var('func_1666')
const_2872 = relay.const([6.131859,6.001216,-2.131912,2.229425,-0.403315,6.385515,6.138994,1.998211,2.669817,3.749420,6.206374,-1.085893,4.501890,2.251336,2.940910,5.745641,9.729029,-0.321109,-5.106039,-3.245516,-3.129860,8.549822,7.637931,4.758309,-6.557487,-2.896434,8.904569,-3.788271,-0.053190,6.717641,-3.953989,-3.920537,-1.708439,0.355289,-2.543008,4.976557,3.786943,1.991567,6.066031,2.281872,6.862695,7.086174,-5.717099,-6.212813,0.156296,-2.503493,-5.794715,6.402594,1.580953,2.280811,-9.673927,9.503996,4.208735,-2.584351,6.983017,7.849236,7.054244,-2.908933,-2.622369,5.707134,-5.131282,5.501907,-7.986917,6.859640,8.113739,-5.059188,8.887204,3.956169,-3.337053,-9.907350,0.089511,-8.227936,-5.386133,4.164948,9.870316,7.127669,-6.472263,-4.883575,9.474757,1.230356,9.552592,5.994132,4.607493,8.504594,-5.493139,8.216209,4.010656,8.924365,-9.905284,9.820479,0.934571,-7.899883,4.616157,-2.411260,-7.817017,-9.605775,6.592166,3.689931,-4.929401,-4.884235,-7.494827,5.493576,-5.696728,6.850764,8.957032,-3.181941,7.964494,-4.227371,-6.358302,-8.558997,-8.111242,-9.794189,-7.616512,-0.751850,-1.877056,8.724360,8.264415,3.946349,3.585885,-8.646215,1.550634,4.822190,8.075863,5.984175,6.716515,3.818065,-0.398938,0.971720,9.337831,-9.786556,5.575628,-0.308405,-2.982804,-1.630823,-6.123223,-7.907561,7.552135,1.565331,0.500514,-1.101210,-0.037328,7.818613,3.952113,7.887352,-4.405243,4.035619,0.372050,-0.817266,4.985410,-1.847143,-2.212156,6.709482,-1.570555,-8.860730,5.035968,-1.818935,-1.692497,0.183278,9.792731,-2.855867,-3.961506,0.324169,4.822995,5.063226,-8.348369,3.652194,-2.306891,-6.786953,4.351417,-0.620018,-1.460192,-4.922940,-7.224032,-2.427731,-4.182131,-8.233335,-6.695064,-8.425272,6.213310,-9.939086,9.451121,-6.859842,-5.323699,6.095824,-3.796762,1.903365,-4.407950,5.415717,6.639758,-4.528486,7.926630,-0.127668,-6.083094,7.489204,-2.560204,6.667929,0.269662,5.174678,9.485724,1.337516,-0.008554,-4.147339,-3.719267,-8.737679,4.441023,8.906603,3.192570,9.219119,1.106179,2.977579,-5.653900,0.298278,0.639337,-2.455369,0.478083,-9.402514,-4.538501,2.543466,-0.332038,-3.792994,-3.884923,-8.520186,1.520266,-6.623145,2.736132,-5.593730,-5.420264,8.556868,-6.772043,-5.475006,-1.967434,7.607663,5.165454,7.939327,-4.968254,-2.869361,-2.778579,-3.906488,-1.994974,-0.682032,2.087543,5.931722,-6.273158,6.603387,-8.744567,1.877398,-4.222601,9.989925,6.768308,4.579140,-8.473077,-2.658709,1.871941,-6.697251,0.503460,7.307175,8.781215,5.628792,6.842785,-7.557797,-8.396114,-8.058821,5.854070,1.779951,0.975582,-2.182336,-7.430010,-3.516911,-3.383970,0.652498,6.320516,-9.523411,5.731535,-5.139842,-2.953557,4.586605,-8.036070,5.687794,2.753041,-6.635732,1.446355,0.414066,-3.383630,5.579170,-8.917804,-2.638575,7.757681,6.615668,-7.111248,-4.998577,-0.230240,-7.917972,3.957487,-2.704034,-8.673527,1.343798,-4.976227,7.344330,-2.073839,8.880912,2.670149,-6.995406,-6.439994,0.218944,-5.861988,5.955531,4.975503,3.006686,4.056749,-2.938027,8.061494,0.084626,-6.586103,-9.292418,-4.650064,3.732056,9.894822,-2.822357,9.497293,3.078215,3.062345,7.061983,-4.394409,-4.171837,-4.809119,3.744649,-8.775343,3.150524,8.406951,-8.879940,3.049740,6.187350,9.935329,-5.566810,1.994114,-4.155835,-7.867306,-6.639506,1.423031,-2.309234,2.492328,3.331569,8.921358,-5.606129,-8.537666,-6.298909,-3.870770,-7.909207,2.581584,2.253277,-3.828909,-8.828178,1.086039,5.238530,2.525377,-6.888440,5.160889,-7.231286,9.330820,1.542089,5.099545,5.261309,7.971839,-7.356902,1.314867,-2.595279,9.498072,-3.510743,8.813558,7.406143,-7.655909,0.611416,2.248461,-2.889262,-6.614475,-0.171422,7.652350,6.827706,-6.332972,5.268596,9.192099,4.447157,-4.836167,3.599490,-4.636021,-6.247735,6.151856,-9.817913,-8.269259,0.675771,8.719340,-6.115070,3.495880,2.430647,4.407623,5.975217,-3.859119,-4.238308,4.942784,-4.714819,-5.767920,-9.941069,-8.112025,4.527492,3.925927,6.452630,-2.838861,7.495480,-9.328826,2.635151,9.667811,-7.539825,-1.911688,8.066587,7.280789,7.962742,-5.708683,0.899736,-1.703827,0.275618,3.107021,-6.066293,3.016067,8.807394,2.055108,2.251738,-0.151429,-4.544381,-3.931759,-7.027794,-5.407676,-2.646466], dtype = "float64")#candidate|2872|(432,)|const|float64
call_2871 = func_1663_call(relay.reshape(const_2872.astype('float64'), [8, 9, 6]))
call_2873 = func_1663_call(relay.reshape(const_2872.astype('float64'), [8, 9, 6]))
func_2701_call = mod.get_global_var('func_2701')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_2880 = func_2701_call(relay.reshape(call_2860.astype('float32'), [2, 3, 9]))
call_2881 = func_2701_call(relay.reshape(call_2860.astype('float32'), [2, 3, 9]))
func_293_call = mod.get_global_var('func_293')
func_297_call = mutated_mod.get_global_var('func_297')
const_2884 = relay.const([[5.434249,7.773385],[9.221972,-1.613243],[0.380923,3.239297],[-5.762921,-4.246846],[-2.716807,-5.777746],[-4.515698,4.621375],[2.384665,-5.180287],[-5.153574,-3.033016],[7.368753,3.136175],[-2.632702,7.836926],[-9.429916,-6.094379],[0.427624,-2.886318],[-4.873070,0.305730],[3.670212,4.563542],[7.746284,-6.805145],[3.970577,5.081358],[8.698591,2.435758],[-5.693174,9.937222],[1.035024,4.289962],[-8.242810,5.024335],[3.269400,5.202987],[3.184379,6.940539],[-0.934268,8.401097],[-9.500885,-5.075727],[6.191931,5.482258],[-5.444827,-3.925198],[-9.583837,-9.144635],[-2.217994,-9.148559],[-7.706713,-4.606010],[-2.241275,-3.482309],[-5.251104,5.331842],[4.977085,-4.005892],[0.923882,-3.096078],[-5.217867,-7.489162],[5.896456,7.359520],[-1.203875,8.334672],[-9.891011,-7.013347],[3.595989,7.372609],[-6.568109,-9.828289],[9.925642,-0.183763],[-3.352222,-0.220843],[-6.199628,-5.937409],[-3.631995,5.453360],[7.309081,0.737399],[-4.961163,-5.430173],[3.377344,9.112062],[-0.211224,6.279110],[-4.576399,8.602568],[-6.761035,5.757423],[-0.496094,-4.984060],[-3.806009,1.330976],[-4.392450,0.690708],[-8.890543,-4.037648],[7.027355,-9.890559]], dtype = "float64")#candidate|2884|(54, 2)|const|float64
const_2885 = relay.const([9,-3,-10,-2,-10,-3,8,-10,-7,-2,5,8,1,-8,2,4,-3,-10,-7,5,1,-2,-5,3,7,2,5,-3,4,9,-1,9,8,-8,-4,-4,-2,5,-9,1,4,-7,-5,-5,4,-5,7,-10,7,-9,4,7,-2,-5,-9,-6,-8,-3,-5,-2,-2,-3,-4,3,-4,2,8,4,-10,-2,3,-5,2,6,6,-8,8,9,-6,-3,7,-8,5,-6,1,7,7,-7,-9,8,-2,6,-6,1,-9,4,-10,-2,4,-3,7,1,1,3,-10,5,-5,-1,10,-5,-8,7,-3,4,-9,4,-6,-10,-10,7,1,-1,7,-9,6,7,5,4,5,5,7,-1,-4,-2,-3,-4,4,-1,1,-7,-4,-3,-8,-6,4,-10,3,-6,2,9,10,2,-3,5,2,1,8,-6,-8,1,6,-5,-3,-3,-2,2,10,-5,6,-4,-2,8,-8,8,9,-10,-1,5,9,-10,-2,10,-6,-2,-5,-5,-1,8,-9,7,-4,-6,-3,10,9,-10,2,-3,-7,3,1,-8,2,4,-2,1,8,-2,8,-3,-2,8,-5,2,-5,-1,-2,-1,-6,-8,-7,-6,-8,-8,-2,3,-3,6,1,-9,3,-5,10,-1,-2,-7,-8,4,3,10,10,-1,-6,3,7,4,-2,6,4,10,-6,4,2,-8,9,-4,3,4,-2,-9,-8,6,-1,-4,10,2,1,-10,6,-1,7,-6,9,-4,-6,8,5,6,8,2,3,6,3,-8,3,4,5,4,9,-4,8,-10,8,8,5,-6,7,-2,-7,9,-2,-1,4,-2,3,9,8,2,-5,-1,-2,9,-8,-10,-3,-4,4,3,-3,1,1,-5,9,-4,-10,7,4,3,-8,9,-2,8,10,-3,8,-7,6,-7,-1,-1,8,5,5,3,1,-5,-5,-10,-6,-8,-9,-1,-8,1,-9,-2,-2,8,7,9,3,2,6,-3,-4,-5,7,-7,-6,4,-1,-4,-7,10,-4,-1,-2,-5,2,-1,10,-9,-3,1,5,7,-4,-8,-3,-5,7,4,-9,-8,-8,9,-4,-4,-5,8,-10,5,-8,-5,3,-10,5,10,6,5,6,1,-2,-10,-9,8,-5,-5,8,-6,9,-1,-1,-8,-8,10,-9,-5,5,2,4,-5,-3,-4,10,1,-5,6,1,2,1,3,-10,-4,4,2,4,-10,8,7,3,1,-8,3,-5,9,4,7,-2,2,-7,-5,2,7,9,-9,-1,8,9,9,6,-7,9,6,-7,7,-3,-6,-10,-4,-8,-9,5,-8,-1,-6,6,1,9,9,8,-1,-10,5,-1,-9,3,-8,7,1,-5,-7,2,6,-5,-9,-1,-3,7,-1,8,7,-7,-10,-1,4,-7,6,-1,3,9,1,2,3,4,6,-5,3,-8,-8,-3,-6,5,2,-6,4,-6,-7,10,6,7,6,-6,4,2,-4,6,5,-2,9,-1,5,-9,6,4,5,-5,-3,-2,5,-1,-8,9,-10,4,8,4,3,-8,5,10,-3,-3,-5,5,10,9,5,-5,8,8,-5,9,-6,-8,9,2,-2,-10,3,-7,3,3,5,-7,-7,8,5,-1,-6,-3,4,9,-2,5,4,8,-9,7,9,8,7,10,-5,5,8,6,-3,2,-4,1,-8,-7,-8,-2,8,-6,5,-7,5,-10,9,-8,3,-10,-4,8,7,-8,2,5,7,-5,5,3,-5,6,-10,-8,4,-3,8,10,-7,-2,8,8,-9,10,-6,-6,5,-7,-6,-2,-5,-9,-4,-10,-9,1,10,-3,-4,-4,5,3,4,6,9,2,-1,-8,-2,-10,-3,-6,-2,-3,-3,9,7,-7,4,-2,-3,6,5,-1,-4,-6,1,9,5,10,-9,6,-10,8,10,6,2,5,6,4,8,7,6,-5,-10,-8,5,-6,9,-9,-1,10,7,-3,-5,4,-9,-5,9,-3,-4,-9,-5,3,8,-2,-7,4,-10,-6,4,-8,-3,5,2,2,-8,-4,5,-8,-1,3,3,-9,-4,9,7,10,-10,-1,-6,-8,-3,9,2,-2,-6,-1,2,-3,7,6,-7,1,5,10,4,-6,-10,4,10,3,10,-6,-5,3,-1,3,7,-7,-5,-4,5,-5,-4,-7,4,-2,-5,1,9,10,-2,10,-9,2,6,-5,5,-5,9,-3,1,1,8,-4,3,9,-10,-5,-7,-5,2,-3,-9,3,-8,3,6,5,-6,-2,-6,-4,-1,-5,5,-1,-1,-3,-3,-10,-5,-2,9,-4,8,-3,7,1,8,4,8,-2,2,-9,2,-5,2,-7,-5,-5,-6,-9,8,9,-8,1,10,4,9,-6,3,-9,9,8,-6,6,1,-3,5,-7,6,-10,-3,10,-8,-4,-8,-9,-8,10,10,-6,-3,-2,-2,5,6,6,-10,3,3,-10,-10,-9,-8,2,8,10,6,2,-10,-6,2,8,-8,-9,-10,-3,10,9,-2,-5,-1,-4,7,-7,-4,-5,-4,-8,4,5,-6,4,-2,-3,6,-7,-5,5,8,8,4,-10,-4,3,4,4,8,-10,-1,-5,3,5,4,7,-2,7,6,-8,-4,2,1,-1,-2,-9,4,-1,7,-4,-7,-4,7,7,-7,-6,8,-2,-4,7,-6,10,-10,6,8,-8,-2,-6,-4,-2,9,-5,-6,5,-1,-7,-9,-4,7,-6,-1,-1,-7,-2,9,-3,2,5,-4,-9,3,10,2,-4,-6,-5,5,2,3,4,-7,-8,2,10,-4,-10,6,2,4,6,-6,-10,7,4,5,-9,4,5,5,-1,4,-7,-1,-8,-6,-6,-5,3,8,3,-5,10,-4,-7,-8,-7,10,-5,-4,6,7,-2,10,-8,3,6,4,9,-8,-4,-5,-1,4,5,-8,7,5,-10,5,5,-9,-7,-6,-8,1,3,4,10,-9,-7,-8,-2,6,-9,-2,-8,-5,2,1,8,-6,7,-4,-8,-4,9,1,-4,-5,-7,-7,-6,2,-6,9,-5,4,3,-1,-10,-7,-4,10,5,-10,10,9,-2,3,-2,-1,-5,10,-2,10,5,-8,-6,-8,-4,5,-6,8,-5,-5,3,-3,10,8,-4,5,-6,10,-1,-4,7,-9,-4,-10,-7,-6,-10,9,-4,-3,5,-10,10,4,-8,-8,-8,9,-5,-2,3,-5,1,-2,-10,5,-2,-8,-5,-8,1,-10,-3,4,8,-2,-6,-2,10,-1,-1,-8,1,7,-10,-1,-1,1,-1,-1,1,-10,10,-3,9,3,-10,1,10,-9,3,9,-2,7,5,4,3,4,-9,-6,-1,-6,-3,-4,7,1,-5,3,3,3,-9,-4,3,8,5,2,-2,-10,-7,7,-8,-5,1,10,-9,-1,-2,-3,-5,8,-2,7,-9,10,-9,-2,-7,2,9,1,-9,-8,-9,7,-9,-3,5,6,5,2,5,5,-2,-8,-10,-1,-3,-9,8,-6,1,10,7,2,4,-8,-7,-8,9,-2,-7,8,-9,-2,-5,8,6,-3,-5,-7,-8,-7,5,6,3,2,10,-2,9,10,2,1,5,3,7,-9,4,-2,1,-2,7,-8,6,-7,-2,10,-6,-4,-2,-3,8,6,7,-10,5,5,-7,-10,-3,-9,-6,10,1,5,2,4,9,9,-9,4,-2,5,-4], dtype = "int16")#candidate|2885|(1365,)|const|int16
call_2883 = relay.TupleGetItem(func_293_call(relay.reshape(const_2884.astype('float64'), [4, 9, 3]), relay.reshape(const_2885.astype('int16'), [1365,]), ), 2)
call_2886 = relay.TupleGetItem(func_297_call(relay.reshape(const_2884.astype('float64'), [4, 9, 3]), relay.reshape(const_2885.astype('int16'), [1365,]), ), 2)
var_2890 = relay.var("var_2890", dtype = "uint64", shape = (8, 9, 6))#candidate|2890|(8, 9, 6)|var|uint64
bop_2891 = relay.equal(call_2871.astype('bool'), relay.reshape(var_2890.astype('bool'), relay.shape_of(call_2871))) # shape=(8, 9, 6)
bop_2894 = relay.equal(call_2873.astype('bool'), relay.reshape(var_2890.astype('bool'), relay.shape_of(call_2873))) # shape=(8, 9, 6)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_2911 = relay.TupleGetItem(func_2815_call(), 0)
call_2912 = relay.TupleGetItem(func_2816_call(), 0)
output = relay.Tuple([call_2860,const_2872,call_2880,call_2883,const_2884,const_2885,bop_2891,call_2911,])
output2 = relay.Tuple([call_2861,const_2872,call_2881,call_2886,const_2884,const_2885,bop_2894,call_2912,])
func_2918 = relay.Function([var_2890,], output)
mod['func_2918'] = func_2918
mod = relay.transform.InferType()(mod)
mutated_mod['func_2918'] = func_2918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2919 = relay.var("var_2919", dtype = "uint64", shape = (8, 9, 6))#candidate|2919|(8, 9, 6)|var|uint64
func_2918_call = mutated_mod.get_global_var('func_2918')
call_2920 = func_2918_call(var_2919)
output = call_2920
func_2921 = relay.Function([var_2919], output)
mutated_mod['func_2921'] = func_2921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_2931 = relay.TupleGetItem(func_2815_call(), 0)
call_2932 = relay.TupleGetItem(func_2816_call(), 0)
uop_2941 = relay.rsqrt(call_2931.astype('float64')) # shape=(2, 3, 9)
uop_2943 = relay.rsqrt(call_2932.astype('float64')) # shape=(2, 3, 9)
bop_2950 = relay.not_equal(call_2931.astype('bool'), relay.reshape(uop_2941.astype('bool'), relay.shape_of(call_2931))) # shape=(2, 3, 9)
bop_2953 = relay.not_equal(call_2932.astype('bool'), relay.reshape(uop_2943.astype('bool'), relay.shape_of(call_2932))) # shape=(2, 3, 9)
output = relay.Tuple([bop_2950,])
output2 = relay.Tuple([bop_2953,])
func_2971 = relay.Function([], output)
mod['func_2971'] = func_2971
mod = relay.transform.InferType()(mod)
mutated_mod['func_2971'] = func_2971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mutated_mod.get_global_var('func_2971')
call_2972 = func_2971_call()
output = call_2972
func_2973 = relay.Function([], output)
mutated_mod['func_2973'] = func_2973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_2992 = relay.TupleGetItem(func_2971_call(), 0)
call_2993 = relay.TupleGetItem(func_2973_call(), 0)
func_2781_call = mod.get_global_var('func_2781')
func_2784_call = mutated_mod.get_global_var('func_2784')
var_2996 = relay.var("var_2996", dtype = "uint8", shape = (363, 2))#candidate|2996|(363, 2)|var|uint8
call_2995 = relay.TupleGetItem(func_2781_call(relay.reshape(var_2996.astype('uint8'), [11, 11, 6]), relay.reshape(var_2996.astype('uint8'), [11, 11, 6]), ), 1)
call_2997 = relay.TupleGetItem(func_2784_call(relay.reshape(var_2996.astype('uint8'), [11, 11, 6]), relay.reshape(var_2996.astype('uint8'), [11, 11, 6]), ), 1)
uop_3001 = relay.sinh(call_2992.astype('float32')) # shape=(2, 3, 9)
uop_3003 = relay.sinh(call_2993.astype('float32')) # shape=(2, 3, 9)
var_3010 = relay.var("var_3010", dtype = "int16", shape = (15, 13, 7))#candidate|3010|(15, 13, 7)|var|int16
bop_3011 = relay.floor_mod(call_2995.astype('float32'), relay.reshape(var_3010.astype('float32'), relay.shape_of(call_2995))) # shape=(15, 13, 7)
bop_3014 = relay.floor_mod(call_2997.astype('float32'), relay.reshape(var_3010.astype('float32'), relay.shape_of(call_2997))) # shape=(15, 13, 7)
func_2701_call = mod.get_global_var('func_2701')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_3015 = func_2701_call(relay.reshape(call_2992.astype('float32'), [2, 3, 9]))
call_3016 = func_2701_call(relay.reshape(call_2992.astype('float32'), [2, 3, 9]))
output = relay.Tuple([var_2996,uop_3001,bop_3011,call_3015,])
output2 = relay.Tuple([var_2996,uop_3003,bop_3014,call_3016,])
func_3025 = relay.Function([var_2996,var_3010,], output)
mod['func_3025'] = func_3025
mod = relay.transform.InferType()(mod)
mutated_mod['func_3025'] = func_3025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3025_call = mutated_mod.get_global_var('func_3025')
var_3027 = relay.var("var_3027", dtype = "uint8", shape = (363, 2))#candidate|3027|(363, 2)|var|uint8
var_3028 = relay.var("var_3028", dtype = "int16", shape = (15, 13, 7))#candidate|3028|(15, 13, 7)|var|int16
call_3026 = func_3025_call(var_3027,var_3028,)
output = call_3026
func_3029 = relay.Function([var_3027,var_3028,], output)
mutated_mod['func_3029'] = func_3029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3053 = relay.TupleGetItem(func_2971_call(), 0)
call_3054 = relay.TupleGetItem(func_2973_call(), 0)
uop_3055 = relay.log2(call_3053.astype('float64')) # shape=(2, 3, 9)
uop_3057 = relay.log2(call_3054.astype('float64')) # shape=(2, 3, 9)
bop_3065 = relay.minimum(uop_3055.astype('float32'), relay.reshape(call_3053.astype('float32'), relay.shape_of(uop_3055))) # shape=(2, 3, 9)
bop_3068 = relay.minimum(uop_3057.astype('float32'), relay.reshape(call_3054.astype('float32'), relay.shape_of(uop_3057))) # shape=(2, 3, 9)
func_1157_call = mod.get_global_var('func_1157')
func_1160_call = mutated_mod.get_global_var('func_1160')
var_3077 = relay.var("var_3077", dtype = "float32", shape = (910,))#candidate|3077|(910,)|var|float32
call_3076 = func_1157_call(relay.reshape(var_3077.astype('float32'), [7, 10, 13]))
call_3078 = func_1157_call(relay.reshape(var_3077.astype('float32'), [7, 10, 13]))
func_2701_call = mod.get_global_var('func_2701')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_3080 = func_2701_call(relay.reshape(uop_3055.astype('float32'), [2, 3, 9]))
call_3081 = func_2701_call(relay.reshape(uop_3055.astype('float32'), [2, 3, 9]))
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_3085 = relay.TupleGetItem(func_2681_call(), 0)
call_3086 = relay.TupleGetItem(func_2682_call(), 0)
output = relay.Tuple([bop_3065,call_3076,var_3077,call_3080,call_3085,])
output2 = relay.Tuple([bop_3068,call_3078,var_3077,call_3081,call_3086,])
func_3108 = relay.Function([var_3077,], output)
mod['func_3108'] = func_3108
mod = relay.transform.InferType()(mod)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3109 = relay.var("var_3109", dtype = "float32", shape = (910,))#candidate|3109|(910,)|var|float32
func_3108_call = mutated_mod.get_global_var('func_3108')
call_3110 = func_3108_call(var_3109)
output = call_3110
func_3111 = relay.Function([var_3109], output)
mutated_mod['func_3111'] = func_3111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_3133 = relay.TupleGetItem(func_2815_call(), 0)
call_3134 = relay.TupleGetItem(func_2816_call(), 0)
var_3140 = relay.var("var_3140", dtype = "float32", shape = (2, 3, 9))#candidate|3140|(2, 3, 9)|var|float32
bop_3141 = relay.greater_equal(call_3133.astype('bool'), relay.reshape(var_3140.astype('bool'), relay.shape_of(call_3133))) # shape=(2, 3, 9)
bop_3144 = relay.greater_equal(call_3134.astype('bool'), relay.reshape(var_3140.astype('bool'), relay.shape_of(call_3134))) # shape=(2, 3, 9)
output = relay.Tuple([bop_3141,])
output2 = relay.Tuple([bop_3144,])
func_3149 = relay.Function([var_3140,], output)
mod['func_3149'] = func_3149
mod = relay.transform.InferType()(mod)
var_3150 = relay.var("var_3150", dtype = "float32", shape = (2, 3, 9))#candidate|3150|(2, 3, 9)|var|float32
output = func_3149(var_3150)
func_3151 = relay.Function([var_3150], output)
mutated_mod['func_3151'] = func_3151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3156 = relay.TupleGetItem(func_2971_call(), 0)
call_3157 = relay.TupleGetItem(func_2973_call(), 0)
var_3166 = relay.var("var_3166", dtype = "bool", shape = (2, 3, 9))#candidate|3166|(2, 3, 9)|var|bool
bop_3167 = relay.add(call_3156.astype('int8'), relay.reshape(var_3166.astype('int8'), relay.shape_of(call_3156))) # shape=(2, 3, 9)
bop_3170 = relay.add(call_3157.astype('int8'), relay.reshape(var_3166.astype('int8'), relay.shape_of(call_3157))) # shape=(2, 3, 9)
uop_3172 = relay.tan(call_3156.astype('float32')) # shape=(2, 3, 9)
uop_3174 = relay.tan(call_3157.astype('float32')) # shape=(2, 3, 9)
uop_3187 = relay.asinh(bop_3167.astype('float64')) # shape=(2, 3, 9)
uop_3189 = relay.asinh(bop_3170.astype('float64')) # shape=(2, 3, 9)
output = relay.Tuple([uop_3172,uop_3187,])
output2 = relay.Tuple([uop_3174,uop_3189,])
func_3195 = relay.Function([var_3166,], output)
mod['func_3195'] = func_3195
mod = relay.transform.InferType()(mod)
var_3196 = relay.var("var_3196", dtype = "bool", shape = (2, 3, 9))#candidate|3196|(2, 3, 9)|var|bool
output = func_3195(var_3196)
func_3197 = relay.Function([var_3196], output)
mutated_mod['func_3197'] = func_3197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_3217 = relay.TupleGetItem(func_2681_call(), 0)
call_3218 = relay.TupleGetItem(func_2682_call(), 0)
uop_3224 = relay.acosh(call_3217.astype('float64')) # shape=(2, 3, 9)
uop_3226 = relay.acosh(call_3218.astype('float64')) # shape=(2, 3, 9)
func_3149_call = mod.get_global_var('func_3149')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_3228 = relay.TupleGetItem(func_3149_call(relay.reshape(uop_3224.astype('float32'), [2, 3, 9])), 0)
call_3229 = relay.TupleGetItem(func_3151_call(relay.reshape(uop_3224.astype('float32'), [2, 3, 9])), 0)
output = relay.Tuple([uop_3224,call_3228,])
output2 = relay.Tuple([uop_3226,call_3229,])
func_3231 = relay.Function([], output)
mod['func_3231'] = func_3231
mod = relay.transform.InferType()(mod)
output = func_3231()
func_3232 = relay.Function([], output)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3259 = relay.TupleGetItem(func_2971_call(), 0)
call_3260 = relay.TupleGetItem(func_2973_call(), 0)
output = call_3259
output2 = call_3260
func_3263 = relay.Function([], output)
mod['func_3263'] = func_3263
mod = relay.transform.InferType()(mod)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3263_call = mutated_mod.get_global_var('func_3263')
call_3264 = func_3263_call()
output = call_3264
func_3265 = relay.Function([], output)
mutated_mod['func_3265'] = func_3265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_3277 = relay.TupleGetItem(func_2815_call(), 0)
call_3278 = relay.TupleGetItem(func_2816_call(), 0)
func_1157_call = mod.get_global_var('func_1157')
func_1160_call = mutated_mod.get_global_var('func_1160')
var_3303 = relay.var("var_3303", dtype = "float32", shape = (7, 130))#candidate|3303|(7, 130)|var|float32
call_3302 = func_1157_call(relay.reshape(var_3303.astype('float32'), [7, 10, 13]))
call_3304 = func_1157_call(relay.reshape(var_3303.astype('float32'), [7, 10, 13]))
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_3307 = relay.TupleGetItem(func_3231_call(), 0)
call_3308 = relay.TupleGetItem(func_3232_call(), 0)
func_857_call = mod.get_global_var('func_857')
func_860_call = mutated_mod.get_global_var('func_860')
var_3310 = relay.var("var_3310", dtype = "float64", shape = (900,))#candidate|3310|(900,)|var|float64
call_3309 = func_857_call(relay.reshape(var_3310.astype('float64'), [5, 12, 15]))
call_3311 = func_857_call(relay.reshape(var_3310.astype('float64'), [5, 12, 15]))
output = relay.Tuple([call_3277,call_3302,var_3303,call_3307,call_3309,var_3310,])
output2 = relay.Tuple([call_3278,call_3304,var_3303,call_3308,call_3311,var_3310,])
func_3312 = relay.Function([var_3303,var_3310,], output)
mod['func_3312'] = func_3312
mod = relay.transform.InferType()(mod)
mutated_mod['func_3312'] = func_3312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3312_call = mutated_mod.get_global_var('func_3312')
var_3314 = relay.var("var_3314", dtype = "float32", shape = (7, 130))#candidate|3314|(7, 130)|var|float32
var_3315 = relay.var("var_3315", dtype = "float64", shape = (900,))#candidate|3315|(900,)|var|float64
call_3313 = func_3312_call(var_3314,var_3315,)
output = call_3313
func_3316 = relay.Function([var_3314,var_3315,], output)
mutated_mod['func_3316'] = func_3316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_3318 = func_2717_call()
call_3319 = func_2717_call()
output = relay.Tuple([call_3318,])
output2 = relay.Tuple([call_3319,])
func_3327 = relay.Function([], output)
mod['func_3327'] = func_3327
mod = relay.transform.InferType()(mod)
output = func_3327()
func_3328 = relay.Function([], output)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_3338 = func_2717_call()
call_3339 = func_2717_call()
func_2918_call = mod.get_global_var('func_2918')
func_2921_call = mutated_mod.get_global_var('func_2921')
var_3346 = relay.var("var_3346", dtype = "uint64", shape = (108, 4))#candidate|3346|(108, 4)|var|uint64
call_3345 = relay.TupleGetItem(func_2918_call(relay.reshape(var_3346.astype('uint64'), [8, 9, 6])), 5)
call_3347 = relay.TupleGetItem(func_2921_call(relay.reshape(var_3346.astype('uint64'), [8, 9, 6])), 5)
var_3351 = relay.var("var_3351", dtype = "int16", shape = (1365,))#candidate|3351|(1365,)|var|int16
bop_3352 = relay.logical_or(call_3345.astype('bool'), relay.reshape(var_3351.astype('bool'), relay.shape_of(call_3345))) # shape=(1365,)
bop_3355 = relay.logical_or(call_3347.astype('bool'), relay.reshape(var_3351.astype('bool'), relay.shape_of(call_3347))) # shape=(1365,)
var_3361 = relay.var("var_3361", dtype = "uint64", shape = (108, 4))#candidate|3361|(108, 4)|var|uint64
bop_3362 = relay.left_shift(var_3346.astype('uint32'), relay.reshape(var_3361.astype('uint32'), relay.shape_of(var_3346))) # shape=(108, 4)
func_2781_call = mod.get_global_var('func_2781')
func_2784_call = mutated_mod.get_global_var('func_2784')
var_3370 = relay.var("var_3370", dtype = "uint8", shape = (726,))#candidate|3370|(726,)|var|uint8
call_3369 = relay.TupleGetItem(func_2781_call(relay.reshape(var_3370.astype('uint8'), [11, 11, 6]), relay.reshape(var_3370.astype('uint8'), [11, 11, 6]), ), 0)
call_3371 = relay.TupleGetItem(func_2784_call(relay.reshape(var_3370.astype('uint8'), [11, 11, 6]), relay.reshape(var_3370.astype('uint8'), [11, 11, 6]), ), 0)
uop_3375 = relay.log10(var_3361.astype('float32')) # shape=(108, 4)
var_3379 = relay.var("var_3379", dtype = "float32", shape = (108, 4))#candidate|3379|(108, 4)|var|float32
bop_3380 = relay.logical_xor(uop_3375.astype('uint64'), relay.reshape(var_3379.astype('uint64'), relay.shape_of(uop_3375))) # shape=(108, 4)
output = relay.Tuple([call_3338,bop_3352,bop_3362,call_3369,var_3370,bop_3380,])
output2 = relay.Tuple([call_3339,bop_3355,bop_3362,call_3371,var_3370,bop_3380,])
func_3383 = relay.Function([var_3346,var_3351,var_3361,var_3370,var_3379,], output)
mod['func_3383'] = func_3383
mod = relay.transform.InferType()(mod)
var_3384 = relay.var("var_3384", dtype = "uint64", shape = (108, 4))#candidate|3384|(108, 4)|var|uint64
var_3385 = relay.var("var_3385", dtype = "int16", shape = (1365,))#candidate|3385|(1365,)|var|int16
var_3386 = relay.var("var_3386", dtype = "uint64", shape = (108, 4))#candidate|3386|(108, 4)|var|uint64
var_3387 = relay.var("var_3387", dtype = "uint8", shape = (726,))#candidate|3387|(726,)|var|uint8
var_3388 = relay.var("var_3388", dtype = "float32", shape = (108, 4))#candidate|3388|(108, 4)|var|float32
output = func_3383(var_3384,var_3385,var_3386,var_3387,var_3388,)
func_3389 = relay.Function([var_3384,var_3385,var_3386,var_3387,var_3388,], output)
mutated_mod['func_3389'] = func_3389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_3493 = func_2717_call()
call_3494 = func_2717_call()
func_3025_call = mod.get_global_var('func_3025')
func_3029_call = mutated_mod.get_global_var('func_3029')
var_3496 = relay.var("var_3496", dtype = "uint8", shape = (1, 726))#candidate|3496|(1, 726)|var|uint8
var_3497 = relay.var("var_3497", dtype = "int16", shape = (1365, 1))#candidate|3497|(1365, 1)|var|int16
call_3495 = relay.TupleGetItem(func_3025_call(relay.reshape(var_3496.astype('uint8'), [363, 2]), relay.reshape(var_3497.astype('int16'), [15, 13, 7]), ), 1)
call_3498 = relay.TupleGetItem(func_3029_call(relay.reshape(var_3496.astype('uint8'), [363, 2]), relay.reshape(var_3497.astype('int16'), [15, 13, 7]), ), 1)
output = relay.Tuple([call_3493,call_3495,var_3496,var_3497,])
output2 = relay.Tuple([call_3494,call_3498,var_3496,var_3497,])
func_3503 = relay.Function([var_3496,var_3497,], output)
mod['func_3503'] = func_3503
mod = relay.transform.InferType()(mod)
mutated_mod['func_3503'] = func_3503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mutated_mod.get_global_var('func_3503')
var_3505 = relay.var("var_3505", dtype = "uint8", shape = (1, 726))#candidate|3505|(1, 726)|var|uint8
var_3506 = relay.var("var_3506", dtype = "int16", shape = (1365, 1))#candidate|3506|(1365, 1)|var|int16
call_3504 = func_3503_call(var_3505,var_3506,)
output = call_3504
func_3507 = relay.Function([var_3505,var_3506,], output)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_3628 = relay.TupleGetItem(func_2815_call(), 0)
call_3629 = relay.TupleGetItem(func_2816_call(), 0)
output = call_3628
output2 = call_3629
func_3652 = relay.Function([], output)
mod['func_3652'] = func_3652
mod = relay.transform.InferType()(mod)
mutated_mod['func_3652'] = func_3652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mutated_mod.get_global_var('func_3652')
call_3653 = func_3652_call()
output = call_3653
func_3654 = relay.Function([], output)
mutated_mod['func_3654'] = func_3654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3673 = relay.TupleGetItem(func_2971_call(), 0)
call_3674 = relay.TupleGetItem(func_2973_call(), 0)
output = relay.Tuple([call_3673,])
output2 = relay.Tuple([call_3674,])
func_3716 = relay.Function([], output)
mod['func_3716'] = func_3716
mod = relay.transform.InferType()(mod)
mutated_mod['func_3716'] = func_3716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mutated_mod.get_global_var('func_3716')
call_3717 = func_3716_call()
output = call_3717
func_3718 = relay.Function([], output)
mutated_mod['func_3718'] = func_3718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mod.get_global_var('func_3716')
func_3718_call = mutated_mod.get_global_var('func_3718')
call_3733 = relay.TupleGetItem(func_3716_call(), 0)
call_3734 = relay.TupleGetItem(func_3718_call(), 0)
output = relay.Tuple([call_3733,])
output2 = relay.Tuple([call_3734,])
func_3775 = relay.Function([], output)
mod['func_3775'] = func_3775
mod = relay.transform.InferType()(mod)
mutated_mod['func_3775'] = func_3775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3775_call = mutated_mod.get_global_var('func_3775')
call_3776 = func_3775_call()
output = call_3776
func_3777 = relay.Function([], output)
mutated_mod['func_3777'] = func_3777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3786 = relay.TupleGetItem(func_2971_call(), 0)
call_3787 = relay.TupleGetItem(func_2973_call(), 0)
output = call_3786
output2 = call_3787
func_3789 = relay.Function([], output)
mod['func_3789'] = func_3789
mod = relay.transform.InferType()(mod)
mutated_mod['func_3789'] = func_3789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mutated_mod.get_global_var('func_3789')
call_3790 = func_3789_call()
output = call_3790
func_3791 = relay.Function([], output)
mutated_mod['func_3791'] = func_3791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3795 = relay.var("var_3795", dtype = "bool", shape = (4, 9, 14))#candidate|3795|(4, 9, 14)|var|bool
var_3796 = relay.var("var_3796", dtype = "bool", shape = (4, 9, 14))#candidate|3796|(4, 9, 14)|var|bool
bop_3797 = relay.logical_or(var_3795.astype('bool'), relay.reshape(var_3796.astype('bool'), relay.shape_of(var_3795))) # shape=(4, 9, 14)
func_975_call = mod.get_global_var('func_975')
func_978_call = mutated_mod.get_global_var('func_978')
var_3808 = relay.var("var_3808", dtype = "int16", shape = (1365,))#candidate|3808|(1365,)|var|int16
var_3809 = relay.var("var_3809", dtype = "float32", shape = (900,))#candidate|3809|(900,)|var|float32
call_3807 = relay.TupleGetItem(func_975_call(relay.reshape(var_3808.astype('int16'), [7, 195]), relay.reshape(var_3809.astype('float32'), [900,]), ), 8)
call_3810 = relay.TupleGetItem(func_978_call(relay.reshape(var_3808.astype('int16'), [7, 195]), relay.reshape(var_3809.astype('float32'), [900,]), ), 8)
func_857_call = mod.get_global_var('func_857')
func_860_call = mutated_mod.get_global_var('func_860')
call_3819 = func_857_call(relay.reshape(call_3807.astype('float64'), [5, 12, 15]))
call_3820 = func_857_call(relay.reshape(call_3807.astype('float64'), [5, 12, 15]))
func_3025_call = mod.get_global_var('func_3025')
func_3029_call = mutated_mod.get_global_var('func_3029')
var_3829 = relay.var("var_3829", dtype = "uint8", shape = (726,))#candidate|3829|(726,)|var|uint8
call_3828 = relay.TupleGetItem(func_3025_call(relay.reshape(var_3829.astype('uint8'), [363, 2]), relay.reshape(var_3808.astype('int16'), [15, 13, 7]), ), 2)
call_3830 = relay.TupleGetItem(func_3029_call(relay.reshape(var_3829.astype('uint8'), [363, 2]), relay.reshape(var_3808.astype('int16'), [15, 13, 7]), ), 2)
uop_3833 = relay.rsqrt(call_3807.astype('float32')) # shape=(9, 10, 10)
uop_3835 = relay.rsqrt(call_3810.astype('float32')) # shape=(9, 10, 10)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3840 = relay.TupleGetItem(func_2971_call(), 0)
call_3841 = relay.TupleGetItem(func_2973_call(), 0)
uop_3843 = relay.acos(call_3828.astype('float32')) # shape=(15, 13, 7)
uop_3845 = relay.acos(call_3830.astype('float32')) # shape=(15, 13, 7)
uop_3858 = relay.acos(var_3808.astype('float64')) # shape=(1365,)
output = relay.Tuple([bop_3797,var_3809,call_3819,var_3829,uop_3833,call_3840,uop_3843,uop_3858,])
output2 = relay.Tuple([bop_3797,var_3809,call_3820,var_3829,uop_3835,call_3841,uop_3845,uop_3858,])
func_3860 = relay.Function([var_3795,var_3796,var_3808,var_3809,var_3829,], output)
mod['func_3860'] = func_3860
mod = relay.transform.InferType()(mod)
mutated_mod['func_3860'] = func_3860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3860_call = mutated_mod.get_global_var('func_3860')
var_3862 = relay.var("var_3862", dtype = "bool", shape = (4, 9, 14))#candidate|3862|(4, 9, 14)|var|bool
var_3863 = relay.var("var_3863", dtype = "bool", shape = (4, 9, 14))#candidate|3863|(4, 9, 14)|var|bool
var_3864 = relay.var("var_3864", dtype = "int16", shape = (1365,))#candidate|3864|(1365,)|var|int16
var_3865 = relay.var("var_3865", dtype = "float32", shape = (900,))#candidate|3865|(900,)|var|float32
var_3866 = relay.var("var_3866", dtype = "uint8", shape = (726,))#candidate|3866|(726,)|var|uint8
call_3861 = func_3860_call(var_3862,var_3863,var_3864,var_3865,var_3866,)
output = call_3861
func_3867 = relay.Function([var_3862,var_3863,var_3864,var_3865,var_3866,], output)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3884 = relay.var("var_3884", dtype = "float64", shape = (14, 10, 5))#candidate|3884|(14, 10, 5)|var|float64
uop_3885 = relay.acosh(var_3884.astype('float64')) # shape=(14, 10, 5)
output = relay.Tuple([uop_3885,])
output2 = relay.Tuple([uop_3885,])
func_3888 = relay.Function([var_3884,], output)
mod['func_3888'] = func_3888
mod = relay.transform.InferType()(mod)
mutated_mod['func_3888'] = func_3888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3889 = relay.var("var_3889", dtype = "float64", shape = (14, 10, 5))#candidate|3889|(14, 10, 5)|var|float64
func_3888_call = mutated_mod.get_global_var('func_3888')
call_3890 = func_3888_call(var_3889)
output = call_3890
func_3891 = relay.Function([var_3889], output)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3328_call = mutated_mod.get_global_var('func_3328')
call_3916 = relay.TupleGetItem(func_3327_call(), 0)
call_3917 = relay.TupleGetItem(func_3328_call(), 0)
func_3149_call = mod.get_global_var('func_3149')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_3921 = relay.TupleGetItem(func_3149_call(relay.reshape(call_3916.astype('float32'), [2, 3, 9])), 0)
call_3922 = relay.TupleGetItem(func_3151_call(relay.reshape(call_3916.astype('float32'), [2, 3, 9])), 0)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
const_3929 = relay.const([[2.125761,1.790540,-3.330288,-9.710903,4.714750,9.446178,-4.715145,9.128158,-5.949791,-3.161098,-2.352872,0.302691,-3.342472,2.467200,-7.461649,6.034200,0.238115,6.924575,-3.865622,8.244904,2.704047,3.511880,0.724167,-2.951197,5.986283,-7.081373,4.406425,3.225721,-3.210405,-4.442128,1.545097,-9.460497,-7.143164,-7.152774,-8.077042,-4.504557,9.987330,5.251507,8.124813,-2.941691,-3.068907,-1.980238,-8.707484,0.050705,0.429522,-2.412764,9.169071,2.677409,-4.998394,-5.549836,7.598968,-0.174411,-1.004932,-3.384481,6.308690,6.388654,5.187521,6.220627,1.449548,-0.827685,-3.923459,4.339448,-5.000031,1.572692,0.163890,7.079760,0.532506,3.923057,6.847378,0.716857,-4.829013,-2.996194,-6.843529,-8.805406,-7.522263,-8.662303,9.568242,7.595060,-9.391097,-8.891357,-7.974211,3.040160,9.474549,-3.129534,-0.500901,5.315164,-4.767319,-7.491037,-1.417246,-1.740110,7.015253,2.868151,-5.631513,-3.656065,-4.865653,-5.821919,-4.094781,-9.773330,-8.629193,-2.422231,-5.488609,-5.489344,1.544559,3.362370,0.523330,3.179030,4.578013,9.399394,9.596519,-5.852527,-7.994857,-4.299626,-7.753622,-4.161036,1.689459,7.264776,-0.943160,-2.234280,-6.325894,9.702707,3.188570,6.264106,-5.995639,0.862036,-5.881662,8.616191,-3.425248,-3.881908,-6.756695,-2.232494,2.320002,3.254963,3.915837,-8.756253,7.071792,9.093124,-5.061694,2.160620,4.860270,-4.485375,1.874915,-9.428101,3.736852,-8.668447,2.881723,-5.996712,1.093467,-6.273775,9.056369,-3.566028,4.531010,-7.534054,-5.082825,-3.998452,-2.053808,-5.547297,-0.859638,8.008116,7.067974,8.940688,-0.392117,2.418632,9.900493,-1.607572,-8.098622,2.233689,-0.444685,4.765061,-2.849077,-9.207995,-8.022416,-6.816070,2.449043,4.923968,4.249570,5.610371,-5.911789,4.001622,0.863491,-5.590874,0.007893,7.679637,6.066559,-5.286913,-7.872766,-7.508636,4.772303,4.425399,8.197256,9.555478,8.048268,-0.976431,-8.782361,2.954853,-4.925659,2.541161,0.925068,5.267040,-6.750116,-1.663398,6.680427,6.516282,6.655055,3.066552,3.873544,-3.223708,-2.652270,-2.120233,-0.093799,-2.854865,-6.397967,-1.460415,-0.977870,-8.888078,-1.022900,8.753003,-1.587088,-2.392210,7.178980,-0.121150,3.075392,6.534594,4.931436,-4.201426,9.802815,-8.172517,-7.477006,6.641519,1.930940,2.144681,0.642354,0.792037,-9.919964,6.122194,8.873436,-8.347020,-6.509955,-8.485502,-3.145989,-8.621027,7.151864,2.637579,2.022391,-1.147509,-7.159455,-9.140225,-3.039947,7.268486,-5.572017,-7.918001,-3.923444,-2.981712,-7.090003,4.188029,7.627205,-4.187812,-9.150693,-6.557381,8.035490,-2.048320,2.596871,0.716338,-5.275757,-9.042358,7.969245,2.332512,5.867120,8.553774,-5.660996,-4.503153,-9.750164,6.336168,-3.309225,-7.010067,-3.283063,-8.997776,-2.210659,-6.240997,-8.790839,8.906284,8.539175,-5.375719,-7.281475,1.386281,-3.416711,-3.143485,-2.330947,9.006887,1.143688,-4.885003,2.256680,6.094940,-0.738513,-8.241760,-5.278243,7.942324,-3.277119,5.254729,2.423080,-2.564933],[-0.434590,-6.078010,-5.747962,-9.869814,1.579858,9.893483,7.837894,-0.202510,-3.525355,-8.703815,-7.430652,3.374319,8.346840,1.027868,7.371366,-6.359552,-2.725765,-0.888749,5.566256,5.726516,-7.605166,5.576469,9.699561,2.794568,-6.754170,5.430039,8.953651,-0.710508,9.031868,0.036417,3.610770,-8.520714,-1.276189,-2.404947,6.682546,4.961155,-1.009946,8.299279,-4.837510,-6.377725,9.743309,-4.012923,-4.507295,3.230252,-5.883589,-4.041607,2.291195,-5.001611,8.961279,0.180499,-7.769484,-1.322016,9.323521,-6.174746,2.647949,-2.061681,-1.376388,4.338296,8.104324,-5.674291,-8.223442,1.954667,-1.618423,6.552388,-7.611672,-0.090128,1.962582,-1.120252,5.541479,4.196367,0.258765,9.772778,-9.183922,-5.210784,8.496677,8.878077,6.730831,5.695550,-3.358421,6.979830,5.299796,3.080710,3.527948,8.769708,8.786724,8.886866,6.645234,-6.689242,5.961943,1.592503,-2.054581,-4.990770,-6.649051,6.380339,4.502901,8.785310,-0.283066,5.568329,-9.466929,-4.869559,7.156930,-5.784797,-3.996245,-6.166104,6.285237,5.590916,8.725038,3.484022,6.240790,-3.367856,-5.976788,-8.552076,7.464223,-8.838039,-3.306591,4.265661,-6.167553,-2.255298,-3.602013,-1.576475,7.991431,0.933387,-3.136266,-3.612797,2.419177,-9.738888,-4.515119,1.738379,-5.250450,-1.933812,-9.452367,8.554653,5.882692,-7.461827,-4.239091,-6.079850,-2.114902,-3.760349,-7.733413,-1.130308,-1.014962,0.102828,8.502147,-1.344064,-4.767283,2.424040,-5.642949,8.519189,-9.274030,8.098053,6.080126,-0.864624,-5.952087,-3.549641,6.684431,-1.195499,1.702317,9.896739,-7.253346,-4.857310,-8.791612,-7.166513,-4.798801,-3.796040,5.243626,-4.372692,0.450549,-7.586608,3.789578,0.878870,4.661069,-2.992181,1.321307,-5.296758,5.274312,3.330351,-0.497430,-5.041386,1.269968,1.921151,4.928310,8.239018,5.473187,-7.000656,-1.814311,3.357233,7.058966,-7.157735,1.444723,1.329324,-5.815949,-6.925115,-0.938930,5.358216,-0.338280,-9.435445,-1.107943,-0.739284,7.141408,2.501142,-2.103770,8.342298,-9.918768,5.446138,-4.796993,7.395456,4.986844,8.459687,-7.798907,1.798981,-3.101487,-0.948018,-1.591718,-8.041122,4.830777,8.268663,-9.604886,-0.683463,2.528176,4.681891,-0.846984,-9.607789,-5.435412,8.371284,-8.362849,8.133297,-0.539007,-0.082553,9.148262,-1.579584,-4.405212,-8.143805,-1.204021,5.976541,-6.660791,-2.518743,8.404401,-0.924330,-9.027099,7.539288,3.754979,3.342877,-6.227285,-8.676871,-6.647220,6.184824,-4.572721,-6.433756,-5.659468,-8.283131,-4.798514,9.268822,6.977308,1.348386,1.184773,0.642371,-9.020818,-2.121001,-1.810812,-9.646023,2.616509,6.982578,1.389497,-9.503630,9.016777,4.851297,5.930973,-0.173899,-3.593926,0.247057,-0.883101,-7.553674,4.519949,0.361280,2.828125,1.881627,4.273816,3.799748,-8.333386,-0.438900,-7.719022,9.911243,-2.814600,9.009645,6.262008,-4.460906,4.815329,-4.079890,9.311495,-7.338341,3.962292,6.942686,-7.997723,-3.277060,4.220114,-3.997474,-7.752571,3.466769,8.754901,7.462213],[5.366157,-3.531534,0.714805,-1.361387,9.327754,4.195733,-0.803360,8.728661,6.537379,4.426397,6.741894,0.152606,1.018377,-1.337483,9.424228,5.101572,-6.891031,2.668736,0.654155,-6.526808,-1.550945,5.809515,5.774495,3.872818,-8.587788,1.004616,-6.245075,7.503550,6.951644,3.191908,-6.915541,-4.526322,-7.121027,-8.226481,1.638104,-3.526131,-4.123458,-7.568246,0.652972,0.505861,-9.553583,5.788374,9.697099,-3.580042,-7.679508,0.150997,-1.114507,6.932162,5.322337,-7.987437,9.612585,-4.618541,7.640512,1.610346,-0.950524,-2.548579,2.007368,1.732784,4.544586,2.499053,2.043636,-5.457106,-4.467294,6.025732,3.176133,-0.748993,-8.315054,-3.035408,9.962939,-0.778877,-8.344950,-3.584571,-1.273918,-5.980057,4.108886,-1.590616,-9.647363,2.717009,-1.013098,-9.734623,-8.367472,-1.763340,1.065843,-4.882391,-6.105291,-1.337079,-5.506457,-3.673638,9.716469,-0.882534,8.682624,1.288448,3.831376,-1.415076,3.061277,1.739742,-4.064726,7.889843,-3.496858,-7.972440,-9.752277,-9.421214,-5.857861,-8.294981,0.940688,-2.768864,0.590334,4.569290,-9.145175,-4.074343,-5.964999,-7.374565,-1.494645,9.772285,1.108954,4.382870,-0.975019,-3.250698,9.408570,-3.634458,8.570924,3.938219,1.129099,3.944710,-6.351501,7.592656,3.732717,4.726914,4.355064,2.236078,1.824313,4.662772,-6.677358,-1.867709,-4.397722,-3.961665,6.102025,-1.036501,-5.803895,8.090829,1.472589,-7.044945,-6.496892,-1.489048,-4.874314,-7.716627,0.569761,3.263950,-8.041301,1.993777,4.168510,-8.621717,8.960624,0.359547,2.995632,-5.027073,9.901057,7.460178,0.473022,-0.334263,2.455416,4.807105,-3.302187,-6.178932,-5.297083,0.362911,-6.458279,-5.418221,-1.421361,7.546564,-6.422539,-4.255218,-5.713446,7.603432,-1.144426,6.988484,0.853562,-3.896785,-0.611167,-6.283430,-5.585091,-4.207114,3.814149,-1.022740,-8.449201,9.869965,3.152432,-3.088858,-7.671058,5.615329,3.148601,-0.380579,9.411022,-0.030830,-3.091446,-9.354303,-6.700409,4.257851,-5.218236,0.820337,8.678034,1.456358,0.756126,9.095145,-1.959256,-4.457574,5.572981,-4.892074,3.128174,-0.784307,0.724392,-0.158546,2.274544,7.101528,6.424310,-8.187327,-0.221757,3.998107,-2.859835,8.965355,-6.409418,-1.876018,-2.781116,-7.401826,-5.381184,1.500276,-5.717767,2.077224,2.959760,7.316062,-6.287861,-1.691353,9.577147,-2.401302,-3.688167,-8.839691,6.715310,-6.627513,5.373823,3.494435,-3.391408,1.245932,-5.452417,-5.184734,-8.164742,-8.390591,-5.213055,8.083090,-3.538884,8.873076,9.754179,9.724899,-4.783838,-5.353271,7.881305,7.482067,9.211928,-1.471006,-3.147540,2.012553,-5.113649,4.425715,-9.877348,-7.260610,-0.137892,5.936525,-2.357297,-9.445647,4.925720,-3.713276,-3.495673,-2.431256,1.617875,5.670180,2.505200,-3.883598,-8.637707,-1.852606,-8.100561,5.676093,-5.549128,-8.361142,-0.004307,-6.126224,8.119480,-9.201704,-9.403660,3.636270,6.509550,3.467192,-8.325766,-9.644646,1.776235,7.974772,0.902591,-4.468046,-3.635207,-7.951821,6.337764,-7.217352]], dtype = "float32")#candidate|3929|(3, 300)|const|float32
var_3930 = relay.var("var_3930", dtype = "int16", shape = (1365,))#candidate|3930|(1365,)|var|int16
call_3928 = relay.TupleGetItem(func_629_call(relay.reshape(const_3929.astype('float32'), [9, 10, 10]), relay.reshape(var_3930.astype('int16'), [1365,]), ), 1)
call_3931 = relay.TupleGetItem(func_632_call(relay.reshape(const_3929.astype('float32'), [9, 10, 10]), relay.reshape(var_3930.astype('int16'), [1365,]), ), 1)
bop_3933 = relay.mod(call_3916.astype('float64'), relay.reshape(call_3921.astype('float64'), relay.shape_of(call_3916))) # shape=(2, 3, 9)
bop_3936 = relay.mod(call_3917.astype('float64'), relay.reshape(call_3922.astype('float64'), relay.shape_of(call_3917))) # shape=(2, 3, 9)
output = relay.Tuple([call_3928,const_3929,var_3930,bop_3933,])
output2 = relay.Tuple([call_3931,const_3929,var_3930,bop_3936,])
func_3938 = relay.Function([var_3930,], output)
mod['func_3938'] = func_3938
mod = relay.transform.InferType()(mod)
mutated_mod['func_3938'] = func_3938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3939 = relay.var("var_3939", dtype = "int16", shape = (1365,))#candidate|3939|(1365,)|var|int16
func_3938_call = mutated_mod.get_global_var('func_3938')
call_3940 = func_3938_call(var_3939)
output = call_3940
func_3941 = relay.Function([var_3939], output)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3943 = relay.var("var_3943", dtype = "int64", shape = (7, 11, 1))#candidate|3943|(7, 11, 1)|var|int64
var_3944 = relay.var("var_3944", dtype = "int64", shape = (7, 11, 7))#candidate|3944|(7, 11, 7)|var|int64
bop_3945 = relay.equal(var_3943.astype('bool'), var_3944.astype('bool')) # shape=(7, 11, 7)
func_3025_call = mod.get_global_var('func_3025')
func_3029_call = mutated_mod.get_global_var('func_3029')
const_3960 = relay.const([[-4],[-8],[5],[9],[4],[6],[3],[8],[-5],[3],[-3],[-6],[4],[3],[-4],[4],[6],[-6],[-9],[-6],[3],[4],[7],[9],[1],[1],[-8],[-4],[-5],[-6],[9],[-8],[4],[-6],[3],[6],[4],[-3],[2],[-5],[5],[-6],[5],[7],[-8],[-10],[5],[-2],[3],[1],[-9],[-1],[9],[-6],[-7],[3],[-8],[-5],[10],[4],[9],[6],[1],[-2],[-7],[-2],[2],[-1],[-9],[-1],[9],[6],[-4],[2],[-7],[3],[-10],[9],[-1],[10],[5],[-6],[7],[-9],[4],[1],[-3],[-1],[-2],[-10],[-1],[2],[-6],[-5],[-3],[4],[-6],[7],[10],[10],[-4],[-7],[1],[-4],[5],[1],[-7],[-7],[3],[9],[-6],[-4],[-5],[-8],[6],[9],[2],[-9],[-8],[-6],[-6],[-6],[10],[-5],[5],[9],[-9],[6],[5],[-7],[5],[-3],[3],[-9],[-4],[1],[2],[5],[1],[6],[-6],[-9],[-9],[8],[-2],[-5],[2],[5],[-1],[-6],[1],[-6],[-5],[6],[-3],[-5],[-9],[-3],[-1],[2],[-8],[2],[8],[-5],[2],[-3],[7],[6],[10],[-1],[6],[9],[2],[4],[5],[-9],[-5],[-2],[6],[2],[-7],[1],[-4],[-9],[10],[-5],[-7],[2],[10],[-3],[3],[7],[2],[-1],[-5],[6],[-7],[7],[5],[4],[-5],[4],[7],[1],[3],[10],[5],[4],[-7],[6],[9],[5],[1],[7],[-7],[1],[-2],[-5],[-10],[-4],[-10],[7],[-4],[-5],[-7],[2],[-4],[-1],[-10],[-9],[1],[-10],[-5],[-2],[1],[6],[-4],[1],[7],[6],[6],[9],[6],[5],[8],[2],[3],[2],[7],[3],[-4],[3],[3],[6],[9],[-3],[2],[7],[1],[4],[5],[9],[-10],[-6],[-9],[-6],[9],[10],[3],[-3],[8],[7],[7],[9],[-7],[7],[1],[-2],[9],[7],[-8],[-10],[4],[8],[-4],[10],[-6],[-3],[3],[10],[5],[2],[5],[6],[-1],[-1],[-7],[5],[-1],[-1],[-5],[-8],[-9],[5],[-10],[-4],[2],[10],[9],[1],[-8],[10],[-3],[1],[7],[10],[2],[-2],[-8],[-5],[-1],[3],[4],[-3],[9],[4],[8],[7],[8],[-7],[9],[-8],[5],[5],[8],[-4],[-8],[6],[-10],[8],[7],[-1],[7],[-8],[5],[3],[-5],[8],[-2],[7],[-1],[-1],[-8],[5],[-10],[-9],[7],[1],[7],[1],[7],[7],[-5],[-5],[-6],[-9],[1],[-9],[8],[7],[9],[4],[8],[-9],[5],[9],[4],[-7],[1],[-7],[2],[7],[5],[4],[-2],[-3],[9],[-6],[-3],[1],[7],[-1],[6],[-1],[9],[5],[6],[-9],[-9],[-6],[4],[-3],[-7],[7],[6],[-9],[8],[5],[9],[2],[-5],[-1],[10],[-2],[1],[-4],[-9],[7],[8],[7],[1],[-8],[-5],[4],[8],[-4],[-4],[4],[5],[7],[-3],[-2],[-7],[-8],[2],[-10],[1],[-4],[10],[4],[6],[1],[-3],[6],[-10],[-5],[-3],[5],[5],[-7],[-1],[9],[-7],[-2],[-3],[-5],[2],[-8],[8],[4],[-6],[-10],[5],[9],[3],[4],[6],[-7],[6],[-10],[-6],[7],[8],[7],[-9],[7],[-10],[-4],[-4],[-5],[-2],[-10],[4],[-1],[-1],[-9],[-3],[-8],[-2],[-10],[-4],[8],[-4],[10],[-9],[5],[-6],[10],[-6],[-2],[2],[-5],[8],[8],[8],[4],[-7],[-7],[7],[10],[-4],[9],[-2],[10],[10],[7],[3],[-6],[7],[4],[-6],[-7],[-1],[3],[-4],[7],[-10],[6],[5],[-1],[9],[-4],[-2],[-5],[6],[4],[8],[-4],[-6],[10],[-2],[7],[-3],[-3],[10],[1],[6],[4],[-10],[6],[-10],[8],[2],[10],[3],[-9],[7],[6],[-9],[-8],[6],[8],[9],[-9],[1],[-4],[6],[1],[-8],[-9],[9],[3],[-3],[7],[1],[-9],[-7],[7],[1],[4],[1],[-2],[-2],[8],[-2],[-10],[-4],[10],[-3],[7],[2],[-8],[-5],[6],[3],[7],[-10],[3],[-2],[1],[-8],[8],[3],[7],[-2],[-1],[-2],[-7],[6],[-2],[-3],[-10],[-10],[6],[-6],[7],[-7],[3],[-2],[9],[7],[-10],[9],[-6],[1],[1],[-9],[-9],[-6],[2],[-2],[-5],[5],[-3],[10],[-2],[-2],[-6],[2],[-5],[1],[8],[-8],[10],[2],[5],[4],[-6],[-10],[7],[1],[-9],[-4],[5],[6],[-8],[7],[-1],[-3],[-9],[5],[-10],[6],[10],[-5],[7],[6],[2],[-10],[3],[-8],[-5],[7],[7],[8],[-6],[4],[4],[3],[7],[10],[-7],[-10],[6],[5],[-6],[-2],[-5],[-10],[2],[2],[1],[-5],[-5],[10],[8],[6],[6],[-4],[5],[-6],[2],[3],[-1],[-2],[1],[1],[10],[-8],[8],[-7],[-7],[2],[6],[-10],[5],[4],[-5],[5],[-10],[-7],[2],[4],[5],[5],[1]], dtype = "uint8")#candidate|3960|(726, 1)|const|uint8
var_3961 = relay.var("var_3961", dtype = "int16", shape = (1365,))#candidate|3961|(1365,)|var|int16
call_3959 = relay.TupleGetItem(func_3025_call(relay.reshape(const_3960.astype('uint8'), [363, 2]), relay.reshape(var_3961.astype('int16'), [15, 13, 7]), ), 2)
call_3962 = relay.TupleGetItem(func_3029_call(relay.reshape(const_3960.astype('uint8'), [363, 2]), relay.reshape(var_3961.astype('int16'), [15, 13, 7]), ), 2)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_3969 = relay.TupleGetItem(func_2815_call(), 0)
call_3970 = relay.TupleGetItem(func_2816_call(), 0)
func_629_call = mod.get_global_var('func_629')
func_632_call = mutated_mod.get_global_var('func_632')
var_3976 = relay.var("var_3976", dtype = "float32", shape = (900,))#candidate|3976|(900,)|var|float32
call_3975 = relay.TupleGetItem(func_629_call(relay.reshape(var_3976.astype('float32'), [9, 10, 10]), relay.reshape(var_3961.astype('int16'), [1365,]), ), 1)
call_3977 = relay.TupleGetItem(func_632_call(relay.reshape(var_3976.astype('float32'), [9, 10, 10]), relay.reshape(var_3961.astype('int16'), [1365,]), ), 1)
output = relay.Tuple([bop_3945,call_3959,const_3960,var_3961,call_3969,call_3975,var_3976,])
output2 = relay.Tuple([bop_3945,call_3962,const_3960,var_3961,call_3970,call_3977,var_3976,])
func_3986 = relay.Function([var_3943,var_3944,var_3961,var_3976,], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
var_3987 = relay.var("var_3987", dtype = "int64", shape = (7, 11, 1))#candidate|3987|(7, 11, 1)|var|int64
var_3988 = relay.var("var_3988", dtype = "int64", shape = (7, 11, 7))#candidate|3988|(7, 11, 7)|var|int64
var_3989 = relay.var("var_3989", dtype = "int16", shape = (1365,))#candidate|3989|(1365,)|var|int16
var_3990 = relay.var("var_3990", dtype = "float32", shape = (900,))#candidate|3990|(900,)|var|float32
output = func_3986(var_3987,var_3988,var_3989,var_3990,)
func_3991 = relay.Function([var_3987,var_3988,var_3989,var_3990,], output)
mutated_mod['func_3991'] = func_3991
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3998 = relay.const([[[-1,-9,6,-10,-8,6,-3,-5,1,6,-6,1],[-3,3,-5,-3,-1,-1,10,-8,4,-10,-6,4],[2,-5,9,6,-7,7,-3,6,5,-1,-1,-5],[-4,-2,10,10,-7,4,-8,-8,-1,-7,-5,8],[-2,-7,9,10,9,-4,9,4,-6,4,9,1],[4,4,-10,-1,3,-7,-2,-4,10,-1,-9,-5],[-3,2,-10,2,10,-5,-8,7,6,4,3,-10],[-5,2,-8,-2,5,-3,-7,-10,10,-1,4,2]],[[4,-8,5,7,-1,-5,-5,9,10,-6,-8,-6],[-4,9,-5,-9,-8,-3,7,2,-1,8,-1,-8],[3,-8,4,9,2,-7,-2,3,3,4,10,-9],[-2,-8,6,-6,4,9,-9,-6,-8,-6,-9,-10],[-9,-2,10,-1,-8,7,-7,-10,6,-6,8,6],[7,8,-2,-8,-5,-1,2,7,-1,2,7,6],[3,-8,8,-9,-5,10,-5,2,9,-5,5,10],[8,3,-6,-7,-5,-2,-9,9,-7,-5,9,4]],[[-9,10,-3,-2,-2,4,-8,-7,-8,-9,9,4],[8,8,-5,9,1,9,-8,3,-10,8,-2,4],[-5,10,10,7,1,9,-8,-1,-6,1,3,-7],[-4,2,1,5,-8,7,-9,10,-2,6,-5,-8],[-7,-6,4,-5,10,4,5,7,-6,-5,-1,-3],[-2,-2,7,-10,9,-7,1,3,3,-1,9,-4],[-4,-8,-4,7,-1,2,9,2,-8,-2,3,8],[-3,4,9,-6,7,-8,-4,-6,6,-3,-10,4]],[[6,-6,-1,4,-5,5,6,-9,-3,5,-5,-4],[-9,-5,-4,8,5,10,8,10,-2,-9,6,1],[-6,9,-7,2,2,6,8,-7,-8,9,-8,-1],[-3,9,8,-9,6,6,10,3,5,7,5,-6],[-8,-9,5,-9,2,-8,-7,7,-4,1,10,6],[-3,-9,-9,-9,10,-5,10,3,-1,-2,-7,-4],[-1,7,-6,7,7,8,-8,5,7,-5,4,-10],[-9,5,-1,-9,1,4,-8,-9,-6,3,3,4]],[[-7,-8,-8,-8,-1,7,2,-6,1,-2,-2,5],[7,-2,5,-10,-6,5,-7,5,6,1,7,10],[-7,6,-3,-7,-1,1,-4,10,1,6,-8,5],[-2,-1,2,-4,6,-10,4,-9,6,-5,-3,2],[10,-10,-8,2,9,-6,5,-4,3,9,-3,4],[-10,-2,4,7,-2,4,-1,-2,10,-5,-10,-7],[5,2,-8,-7,-5,-1,5,-5,-4,8,5,-8],[-8,3,2,-2,-10,4,1,6,2,-7,7,5]],[[2,9,-3,-6,1,-10,-3,-1,7,1,-7,-5],[6,8,-5,5,6,7,-2,-10,-4,8,-5,10],[-4,-1,8,4,2,-7,2,-6,-7,-8,8,4],[10,-1,10,-10,-4,7,-9,-6,-2,-9,7,3],[-10,5,-10,-2,-8,7,6,-4,10,-2,2,-1],[-3,9,4,5,2,4,6,4,10,-4,1,-7],[-9,10,-9,6,-1,-3,4,1,-6,9,10,6],[5,8,-7,-6,6,-6,7,8,-6,5,6,7]],[[10,4,7,1,1,7,6,2,9,8,1,-6],[-6,-6,-8,6,7,9,1,8,-1,8,6,7],[10,-3,-1,6,1,-2,5,8,-8,-7,-9,1],[-10,5,-8,5,-10,-9,-7,-10,8,-7,10,6],[2,-6,-10,1,5,10,-10,3,1,-3,-6,-7],[7,-7,9,6,9,-4,-1,9,-1,-1,-1,-3],[6,-1,10,-9,1,-7,-1,4,7,9,3,3],[-6,-8,-9,-1,8,-9,1,-7,-6,-5,-7,9]],[[8,-1,-3,-6,-9,7,-5,6,10,2,-3,-6],[-5,-8,-1,-6,4,-10,10,-7,2,10,2,-1],[-1,-6,3,-5,-4,-1,-1,-5,-2,1,3,-2],[2,2,-8,-8,7,-5,-7,-9,5,-7,-4,-1],[-7,10,-10,5,-6,8,2,-5,4,-7,10,4],[-5,10,-5,-6,5,4,-8,-9,-8,10,-5,-8],[5,-9,-3,-8,8,-8,3,5,9,1,-10,4],[9,7,1,4,3,10,-8,4,10,-9,7,-9]],[[3,8,2,1,-7,7,6,-3,5,-6,-4,1],[4,5,3,-8,3,10,-7,7,1,-4,-5,5],[10,5,2,6,-5,7,-4,-6,10,-10,-7,5],[-3,5,3,8,-3,-9,-10,-3,5,-4,-7,-6],[6,-6,-5,3,7,3,-7,-7,-7,-7,1,-3],[10,-7,-8,3,-1,7,1,1,7,2,-9,6],[5,-3,5,-7,3,-3,-9,5,7,-5,3,8],[1,5,7,6,-7,10,-6,9,1,10,-8,9]],[[10,-6,9,4,2,-2,3,2,-8,3,9,1],[6,1,10,-3,-1,5,3,-10,1,7,-1,-5],[3,-10,4,4,7,-5,-3,-9,-7,6,4,-6],[-9,8,-10,-6,-2,5,10,-5,-5,3,-9,6],[-7,-4,10,5,-1,-9,9,-5,-4,9,4,-10],[-6,-8,-3,9,-9,-10,-4,-8,1,9,-7,-3],[7,-4,5,1,-4,6,-5,9,9,3,-6,8],[2,-9,4,-7,-1,-3,4,-10,2,10,-1,9]],[[8,-1,5,-6,-9,-4,-7,3,4,6,9,-10],[2,-6,9,-2,9,3,-5,1,-4,-8,-9,-8],[-6,-3,-2,5,1,6,-9,8,4,-6,-2,4],[3,8,-2,5,3,-4,-10,-1,-2,-2,-7,-1],[-2,1,-5,10,6,9,6,-7,-1,6,-10,4],[-5,-3,9,-5,-2,-4,1,4,-4,7,-7,1],[-5,-1,3,9,6,-2,7,-3,-4,-5,-3,-6],[1,6,-8,-8,-3,10,-6,6,2,-4,-7,-9]],[[6,-8,4,-7,-7,-3,-10,-10,9,1,-2,5],[6,2,-8,4,4,4,-8,-2,-4,2,5,-8],[-5,-10,-5,8,6,-5,-10,2,-3,-1,-7,-9],[-6,-6,-4,-7,-3,-5,-2,2,-4,6,-7,7],[5,2,9,-3,-2,-7,-3,-7,-1,-7,-7,3],[-5,5,-7,2,10,-4,-7,5,-5,-6,-7,7],[7,-1,4,-6,-2,10,3,1,-10,-4,1,-4],[2,-7,7,8,-9,-8,2,-1,-5,6,-5,-3]],[[10,-1,7,-9,9,9,-1,8,6,2,-10,-4],[6,-2,5,-7,5,7,-3,-10,-4,6,5,-7],[2,9,-4,4,3,10,-5,4,-5,1,-1,10],[-9,-3,2,5,3,3,-5,7,5,7,-4,-10],[-3,-7,-4,-2,-3,9,-6,7,-8,-7,7,2],[-3,4,9,-8,-8,7,-2,-7,3,-10,10,-10],[-8,-3,5,9,-4,7,10,6,-10,10,-3,9],[-4,-8,-6,5,7,1,3,10,-4,1,-2,-3]],[[-3,6,-1,3,-4,10,-1,-6,-4,10,6,7],[9,-5,6,-5,1,6,-8,7,-9,-4,3,9],[-4,7,3,9,3,-2,1,9,-9,-4,-3,1],[-10,-4,-2,2,-6,-5,4,-10,9,7,9,2],[2,-7,8,1,-10,1,-2,7,4,6,7,7],[5,-5,-4,2,-6,-3,6,2,-10,7,8,9],[-7,1,8,9,-6,10,3,7,3,-4,5,3],[9,-9,-6,-10,-3,7,3,-7,-10,8,-10,-5]]], dtype = "uint8")#candidate|3998|(14, 8, 12)|const|uint8
var_3999 = relay.var("var_3999", dtype = "uint8", shape = (14, 8, 12))#candidate|3999|(14, 8, 12)|var|uint8
bop_4000 = relay.less(const_3998.astype('bool'), relay.reshape(var_3999.astype('bool'), relay.shape_of(const_3998))) # shape=(14, 8, 12)
output = relay.Tuple([bop_4000,])
output2 = relay.Tuple([bop_4000,])
func_4024 = relay.Function([var_3999,], output)
mod['func_4024'] = func_4024
mod = relay.transform.InferType()(mod)
mutated_mod['func_4024'] = func_4024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4025 = relay.var("var_4025", dtype = "uint8", shape = (14, 8, 12))#candidate|4025|(14, 8, 12)|var|uint8
func_4024_call = mutated_mod.get_global_var('func_4024')
call_4026 = func_4024_call(var_4025)
output = call_4026
func_4027 = relay.Function([var_4025], output)
mutated_mod['func_4027'] = func_4027
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4055 = relay.const([[[10],[3]],[[7],[2]],[[-6],[6]],[[-3],[-9]],[[1],[6]],[[-6],[10]],[[-6],[-10]],[[-3],[8]],[[-6],[-9]],[[-9],[-9]],[[-9],[4]],[[9],[4]],[[3],[-3]],[[1],[-7]],[[-4],[-1]],[[10],[10]]], dtype = "uint8")#candidate|4055|(16, 2, 1)|const|uint8
var_4056 = relay.var("var_4056", dtype = "uint8", shape = (16, 2, 16))#candidate|4056|(16, 2, 16)|var|uint8
bop_4057 = relay.equal(const_4055.astype('bool'), var_4056.astype('bool')) # shape=(16, 2, 16)
var_4062 = relay.var("var_4062", dtype = "uint8", shape = (16, 2, 16))#candidate|4062|(16, 2, 16)|var|uint8
bop_4063 = relay.bitwise_xor(var_4056.astype('int32'), relay.reshape(var_4062.astype('int32'), relay.shape_of(var_4056))) # shape=(16, 2, 16)
func_3860_call = mod.get_global_var('func_3860')
func_3867_call = mutated_mod.get_global_var('func_3867')
var_4074 = relay.var("var_4074", dtype = "bool", shape = (504,))#candidate|4074|(504,)|var|bool
var_4075 = relay.var("var_4075", dtype = "int16", shape = (1365,))#candidate|4075|(1365,)|var|int16
var_4076 = relay.var("var_4076", dtype = "float32", shape = (90, 10))#candidate|4076|(90, 10)|var|float32
var_4077 = relay.var("var_4077", dtype = "uint8", shape = (726,))#candidate|4077|(726,)|var|uint8
call_4073 = relay.TupleGetItem(func_3860_call(relay.reshape(var_4074.astype('bool'), [4, 9, 14]), relay.reshape(var_4074.astype('bool'), [4, 9, 14]), relay.reshape(var_4075.astype('int16'), [1365,]), relay.reshape(var_4076.astype('float32'), [900,]), relay.reshape(var_4077.astype('uint8'), [726,]), ), 7)
call_4078 = relay.TupleGetItem(func_3867_call(relay.reshape(var_4074.astype('bool'), [4, 9, 14]), relay.reshape(var_4074.astype('bool'), [4, 9, 14]), relay.reshape(var_4075.astype('int16'), [1365,]), relay.reshape(var_4076.astype('float32'), [900,]), relay.reshape(var_4077.astype('uint8'), [726,]), ), 7)
uop_4084 = relay.sqrt(bop_4057.astype('float32')) # shape=(16, 2, 16)
output = relay.Tuple([bop_4063,call_4073,var_4074,var_4075,var_4076,var_4077,uop_4084,])
output2 = relay.Tuple([bop_4063,call_4078,var_4074,var_4075,var_4076,var_4077,uop_4084,])
func_4096 = relay.Function([var_4056,var_4062,var_4074,var_4075,var_4076,var_4077,], output)
mod['func_4096'] = func_4096
mod = relay.transform.InferType()(mod)
var_4097 = relay.var("var_4097", dtype = "uint8", shape = (16, 2, 16))#candidate|4097|(16, 2, 16)|var|uint8
var_4098 = relay.var("var_4098", dtype = "uint8", shape = (16, 2, 16))#candidate|4098|(16, 2, 16)|var|uint8
var_4099 = relay.var("var_4099", dtype = "bool", shape = (504,))#candidate|4099|(504,)|var|bool
var_4100 = relay.var("var_4100", dtype = "int16", shape = (1365,))#candidate|4100|(1365,)|var|int16
var_4101 = relay.var("var_4101", dtype = "float32", shape = (90, 10))#candidate|4101|(90, 10)|var|float32
var_4102 = relay.var("var_4102", dtype = "uint8", shape = (726,))#candidate|4102|(726,)|var|uint8
output = func_4096(var_4097,var_4098,var_4099,var_4100,var_4101,var_4102,)
func_4103 = relay.Function([var_4097,var_4098,var_4099,var_4100,var_4101,var_4102,], output)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mod.get_global_var('func_3716')
func_3718_call = mutated_mod.get_global_var('func_3718')
call_4113 = relay.TupleGetItem(func_3716_call(), 0)
call_4114 = relay.TupleGetItem(func_3718_call(), 0)
var_4121 = relay.var("var_4121", dtype = "bool", shape = (2, 3, 9))#candidate|4121|(2, 3, 9)|var|bool
bop_4122 = relay.maximum(call_4113.astype('uint32'), relay.reshape(var_4121.astype('uint32'), relay.shape_of(call_4113))) # shape=(2, 3, 9)
bop_4125 = relay.maximum(call_4114.astype('uint32'), relay.reshape(var_4121.astype('uint32'), relay.shape_of(call_4114))) # shape=(2, 3, 9)
output = relay.Tuple([bop_4122,])
output2 = relay.Tuple([bop_4125,])
func_4134 = relay.Function([var_4121,], output)
mod['func_4134'] = func_4134
mod = relay.transform.InferType()(mod)
mutated_mod['func_4134'] = func_4134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4135 = relay.var("var_4135", dtype = "bool", shape = (2, 3, 9))#candidate|4135|(2, 3, 9)|var|bool
func_4134_call = mutated_mod.get_global_var('func_4134')
call_4136 = func_4134_call(var_4135)
output = call_4136
func_4137 = relay.Function([var_4135], output)
mutated_mod['func_4137'] = func_4137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3328_call = mutated_mod.get_global_var('func_3328')
call_4153 = relay.TupleGetItem(func_3327_call(), 0)
call_4154 = relay.TupleGetItem(func_3328_call(), 0)
func_2918_call = mod.get_global_var('func_2918')
func_2921_call = mutated_mod.get_global_var('func_2921')
const_4168 = relay.const([[-10,4,4,7,-1,10,-8,-8,-2,3,8,-4,2,-3,-1,-10,-8,5,8,3,4,9,-2,10,9,-1,3,3,1,4,7,-3,10,-6,-9,-2,-4,7,-10,-1,-10,6,-8,-9,-7,8,-8,-8,8,-1,-2,-2,-3,-4,5,4,8,1,10,-4,4,10,5,-2,-1,2,5,-4,10,-3,-5,-2,-6,-8,4,1,4,-2,1,-1,-7,10,4,2,1,-3,-10,-9,8,3,9,-2,9,-3,-7,5,-7,8,10,-9,5,7,-7,-4,-6,-8,2,10,-3,-2,-7,-6,5,-8,-4,-5,-9,6,1,-2,6,-3,-2,-2,8,-7,2,-3,-9,-1,10,-4,8,-6,10,9,-9,-6,9,-6,-1,-4,-10,1,8,4,8,8,10,9,1,7,10,1,-3,-6,1,1,-9,-1,-4,6,5,-10,-7,6,-6,-7,8,8,6,8,-6,-1,1,1,-10,-7,-10,-1,-7,4,-10,10,1,-1,-3,-6,-8,-3,2,-2,2,7,-8,8,3,-9,-5,3,8,-6,-3,-10,-1,7,7,-6,-3,-9,-9,-6,-1,9,5,-5,-6,-4,3,-1,4,-10,9,10,-8,5,-7,2,-8,-7,3,-8,3,9,5,-2,7,-2,9,10,-2,-3,-8,1,5,8,8,-6,-7,8,-4,1,-4,2,4,9,9,-6,-8,-10,5,-9,-4,-5,-2,1,3,1,-4,1,5,3,-3,-8,6,-1,7,-5,7,-2,-2,8,4,5,10,-5,7,10,6,8,-7,-4,-1,5,-8,-8,9,-8,-5,10,-10,-2,-2,-4,8,10,-10,-10,-5,10,2,-6,4,-4,8,4,-9,-2,9,-9,9,-2,6,-10,9,-4,10,9,-3,-4,-7,6,5,6,5,10,-7,-3,-8,-3,4,5,-7,-9,9,1,4,-3,7,-4,7,6,-10,-4,-3,3,-4,3,-5,2,-8,2,-2,2,6,-4,9,4,1,8,-7,-3,-1,4,1,-2,1,-10,8,-2,5,7,6,-5,-3,10,4,-1,-10,-3,-1,1,-10,4,-2,-4,2,2,5,6,-8,8,-2,9,3,4,-8,7,5,-7,10,5,-3,2,4,-5,-8,6,-3,-3,-6,2,3,3,-3,-6,-2,-6,10,4,-8,8]], dtype = "uint64")#candidate|4168|(1, 432)|const|uint64
call_4167 = relay.TupleGetItem(func_2918_call(relay.reshape(const_4168.astype('uint64'), [8, 9, 6])), 3)
call_4169 = relay.TupleGetItem(func_2921_call(relay.reshape(const_4168.astype('uint64'), [8, 9, 6])), 3)
const_4172 = relay.const([2,6,3,-8,-8,1,-1,6,9,5,-2,-10,-2,-4,-1,-5,-10,-4,-8,7,-3,9,-9,9,2,-1,6,-3,-4,-1,10,7,8,3,4,-3,8,-4,-6,-6,7,-5,3,-1,-6,3,8,-4,-1,-4,6,-5,-9,5,2,-8,-1,1,-10,10,-5,-2,2,1,2,10,5,4,2,1,-1,2,1,-3,-8,-7,-5,-7,-4,10,-6,-5,4,6,1,4,8,5,1,-10,-2,-1,-7,-5,9,-8,4,7,-7,7,-2,-1,7,10,5,-7,9,5,8,-7,-3,-3,10,-8,3,-4,-6,-7,-2,-3,9,3,9,3,8,-6,5,-2,9,4,5,7,5,-8,-1,2,-10,7,5,-1,-10,-3,-6,1,-5,7,3,3,10,-4,2,-2,-3,6,-8,8,-3,4,6,-9,10,-10,2,2,-7,-6,2,-1,-8,10,3,-6,1,-10,-5,9,-4,10,-4,-9,-9,-10,-4,8,8,-10,8,-9,-5,-7,5,6,6,-5,-10,-3,-1,4,6,9,-9,-6,6,7,4,10,3,9,5,2,-10,6,2,9,1,-3,-1,-9,-6,-8,4,2,-5,-7,-6,-6,7,-10,-4,-6,-8,-5,-8,6,5,-4,2,-6,-8,-7,-3,-1,-7,-9,9,-3,-4,8,7,6,7,-10,-8,8,-7,-8,-8,-1,9,3,3,7,-8,-9,-8,-4,-9,-4,1,2,-6,8,-1,-8,-1,10,-1,-3,-1,-2,9,4,2,-4,-9,-1,-7,9,-10,-8,-2,-4,5,-1,-2,-5,-1,-9,-6,-6,-7,10,-7,-10,7,-9,4,1,-3,-6,-5,3,8,9,-5,9,-3,4,9,9,1,7,9,7,-10,6,3,-1,1,5,8,-8,6,-1,7,10,-5,-7,5,-8,-6,10,4,-10,-5,1,-2,2,-2,-10,-2,8,9,4,9,3,-6,3,-6,7,10,3,-8,8,10,8,2,1,-1,-9,9,-4,-5,-7,1,-2,-1,-5,-2,6,2,-5,-9,-8,-3,9,-9,7,1,6,-5,7,5,-4,4,10,3,10,6,-4,-7,1,7,1,-1,2,-5,-1,-10,7,4,-7,7,-2,-7,9,9,-1,7,4,7,3,6,2,10,7,-1,4,-4,-10,-3,7,1,6,-10,-6,-8,-2,-5,-8,6,-9,-10,6,9,6,-8,-4,5,-7,-2,-3,-3,5,-9,-3,8,5,-6,3,8,-9,-4,-3,3,-3,6,7,3,9,3,-1,5,1,7,-9,5,9,-1,10,4,-2,1,2,-9,10,-1,5,6,-9,1,-8,-10,-6,1,6,9,-8,7,-6,8,-10,-8,-9,2,7,-8,10,2,-8,1,-10,3,-3,-5,7,-7,-4,-2,9,-1,-7,-1,-8,2,6,1,4,-4,-4,-9,4,-6,1,3,1,-6,6,5,2,1,1,-4,6,3,6,-1,-8,-1,6,-10,-10,5,-6,10,-6,-4,3,-1,7,-10,-7,-3,9,-3,10,2,-10,5,-7,-1,-8,-1,6,-9,-7,-4,-10,-9,-5,-2,6,6,-2,1,8,4,1,-4,-9,-8,3,-1,2,-10,4,1,-7,-5,10,8,-10,-3,-8,-7,-1,3,8,-7,-6,7,-10,-10,-7,-7,3,-4,-10,3,5,4,5,-10,-3,-5,-3,-9,-3,1,3,7,-5,-8,-10,-4,-3,3,-6,-2,9,10,-10,-6,-7,4,-8,8,4,10,-7,10,-3,-9,-5,9,-8,7,-7,2,-3,6,5,-7,-7,4,-3,5,7,-6,3,-6,2,1,-8,3,-7,-5,2,3,10,3,-4,-9,2,-1,1,-8,-3,-4,9,-6,-8,-1,4,-10,-5,-8,-3,10,-2,-10,10,-6,6,8,9,4,-5,-6,2,3,-8,6,8,7,-7,-3,-5,-2,10,8,1,7,-8,-7,10,8,1,-1,10,-8,-5,3,-1,2,-2,3,2,-3,4,3,-8,-3,-4,7,-2,-10,10,-8,-8,-4,-9,-8,-8,3,9,-5,-6,-7,5,-6,-10,4,2,1,-2,-2,2,4,-9,2,-3,-6,-7,9,8,1,-4,8,-8,-7,5,-3,-9,9,-4,-7,-9,-5,-5,-10,-2,1,-5,1,1,6,-7,-5,6,4,4,-6,-6,1,5,-4,-4,2,-7,5,-1,4,-7,-4,-2,2,2,10,9,1,7,-1,-4,2,-6,-9,-7,-6,-9,-9,1,-8,-9,2,10,-10,-1,-7,3,-6,6,7,6,8,-6,-8,-8,1,-5,-5,-8,-1,7,-6,7,9,-5,5,-2,9,-1,4,-5,7,1,2,-9,10,1,4,8,-9,4,6,-8,3,-4,-9,5,9,-9,5,6,-2,3,-6,3,-4,1,2,-7,-1,3,1,7,4,-3,-2,4,7,-1,-8,8,1,4,-1,8,3,3,1,-8,-5,-4,9,2,7,8,-6,-9,-8,-10,-5,2,-4,-6,4,-10,2,-6,3,-8,9,-8,-2,4,2,-8,4,7,-6,3,-6,7,-8,-10,2,3,-1,10,10,3,10,8,-5,4,-9,-9,1,-10,2,-9,-7,-6,3,-4,-10,4,-2,5,-9,-7,5,3,6,4,5,-10,4,-1,-2,10,1,1,8,1,5,8,-5,-8,4,9,-3,-10,-7,-6,7,2,-1,3,10,-9,-1,-9,-7,9,6,1,-9,10,5,6,3,-9,-2,6,-6,1,3,6,-4,5,5,3,8,-1,-9,-4,6,7,-6,1,7,1,-1,-3,-4,-7,4,-2,-3,-5,9,-5,5,-4,-4,-2,7,2,-10,3,3,2,1,-10,-8,-9,6,-3,-5,-1,2,-9,-7,-6,-7,-1,-2,10,9,-10,-6,-8,-10,-5,-8,3,10,-10,6,-3,7,-5,-9,10,4,-8,8,5,7,-4,-4,6,10,2,9,9,1,5,-9,-9,7,-5,3,3,-8,4,4,8,3,-8,-7,-10,-2,-8,2,-6,-7,3,9,-10,3,-10,4,-8,10,-9,4,-5,6,9,-5,6,4,-3,-3,1,-7,-2,-1,-5,-8,-7,-8,1,8,-10,3,-4,-5,-1,8,-4,-2,-5,7,-5,-6,9,7,-8,8,-7,-3,-9,7,-7,-1,-1,9,8,-8,3,9,10,2,2,-5,2,-1,-8,-10,-5,-10,-5,-4,7,8,-8,3,-3,-5,6,4,-9,10,3,-6,2,5,-5,10,3,-1,5,10,-1,-4,4,-9,-3,4,-9,-4,-4,-6,-10,-10,-6,-5,-7,10,-9,-6,-2,-7,4,-1,-2,5,6,5,-10,10,-6,-9,-1,10,3,2,-3,-2,-2,1,10,10,-7,-1,-1,-5,7,9,-2,5,-9,3,-7,10,-10,5,-8,5,1,-4,-6,-9,-2,-8,-9,8,-1,1,-7,-9,-3,6,-1,-9,-6,5,2,4,4,8,6,-3,-8,7,5,-4,-2,10,-3,4,-1,-1,4,-9,-5,4,-3,-8,-1,-8,-3,-5,-3,6,5,5,-2,-1,2,-7,-6,-10,-9,-2,5,9,2,-3,-2,-3,3,-10,-6,1,10,-5,-2,7,-3,-4,-1,-8,-10,2,-2,-6,4,-7,-9,-8,-10,-9,-8,-6,7,3,6,3,-2,7,-1,-6,10,-7,6,2,-10,10,7,-1], dtype = "int16")#candidate|4172|(1365,)|const|int16
bop_4173 = relay.logical_and(call_4167.astype('bool'), relay.reshape(const_4172.astype('bool'), relay.shape_of(call_4167))) # shape=(1365,)
bop_4176 = relay.logical_and(call_4169.astype('bool'), relay.reshape(const_4172.astype('bool'), relay.shape_of(call_4169))) # shape=(1365,)
output = relay.Tuple([call_4153,const_4168,bop_4173,])
output2 = relay.Tuple([call_4154,const_4168,bop_4176,])
func_4180 = relay.Function([], output)
mod['func_4180'] = func_4180
mod = relay.transform.InferType()(mod)
output = func_4180()
func_4181 = relay.Function([], output)
mutated_mod['func_4181'] = func_4181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mod.get_global_var('func_3716')
func_3718_call = mutated_mod.get_global_var('func_3718')
call_4218 = relay.TupleGetItem(func_3716_call(), 0)
call_4219 = relay.TupleGetItem(func_3718_call(), 0)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_4223 = relay.TupleGetItem(func_3231_call(), 0)
call_4224 = relay.TupleGetItem(func_3232_call(), 0)
bop_4230 = relay.bitwise_or(call_4223.astype('int32'), relay.reshape(call_4218.astype('int32'), relay.shape_of(call_4223))) # shape=(2, 3, 9)
bop_4233 = relay.bitwise_or(call_4224.astype('int32'), relay.reshape(call_4219.astype('int32'), relay.shape_of(call_4224))) # shape=(2, 3, 9)
func_3383_call = mod.get_global_var('func_3383')
func_3389_call = mutated_mod.get_global_var('func_3389')
var_4237 = relay.var("var_4237", dtype = "uint64", shape = (432,))#candidate|4237|(432,)|var|uint64
var_4238 = relay.var("var_4238", dtype = "int16", shape = (1365,))#candidate|4238|(1365,)|var|int16
var_4239 = relay.var("var_4239", dtype = "uint8", shape = (363, 2))#candidate|4239|(363, 2)|var|uint8
call_4236 = relay.TupleGetItem(func_3383_call(relay.reshape(var_4237.astype('uint64'), [108, 4]), relay.reshape(var_4238.astype('int16'), [1365,]), relay.reshape(var_4237.astype('uint64'), [108, 4]), relay.reshape(var_4239.astype('uint8'), [726,]), relay.reshape(var_4237.astype('float32'), [108, 4]), ), 3)
call_4240 = relay.TupleGetItem(func_3389_call(relay.reshape(var_4237.astype('uint64'), [108, 4]), relay.reshape(var_4238.astype('int16'), [1365,]), relay.reshape(var_4237.astype('uint64'), [108, 4]), relay.reshape(var_4239.astype('uint8'), [726,]), relay.reshape(var_4237.astype('float32'), [108, 4]), ), 3)
output = relay.Tuple([bop_4230,call_4236,var_4237,var_4238,var_4239,])
output2 = relay.Tuple([bop_4233,call_4240,var_4237,var_4238,var_4239,])
func_4244 = relay.Function([var_4237,var_4238,var_4239,], output)
mod['func_4244'] = func_4244
mod = relay.transform.InferType()(mod)
var_4245 = relay.var("var_4245", dtype = "uint64", shape = (432,))#candidate|4245|(432,)|var|uint64
var_4246 = relay.var("var_4246", dtype = "int16", shape = (1365,))#candidate|4246|(1365,)|var|int16
var_4247 = relay.var("var_4247", dtype = "uint8", shape = (363, 2))#candidate|4247|(363, 2)|var|uint8
output = func_4244(var_4245,var_4246,var_4247,)
func_4248 = relay.Function([var_4245,var_4246,var_4247,], output)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_4291 = relay.TupleGetItem(func_2815_call(), 0)
call_4292 = relay.TupleGetItem(func_2816_call(), 0)
func_3149_call = mod.get_global_var('func_3149')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_4297 = relay.TupleGetItem(func_3149_call(relay.reshape(call_4291.astype('float32'), [2, 3, 9])), 0)
call_4298 = relay.TupleGetItem(func_3151_call(relay.reshape(call_4291.astype('float32'), [2, 3, 9])), 0)
output = relay.Tuple([call_4291,call_4297,])
output2 = relay.Tuple([call_4292,call_4298,])
func_4304 = relay.Function([], output)
mod['func_4304'] = func_4304
mod = relay.transform.InferType()(mod)
output = func_4304()
func_4305 = relay.Function([], output)
mutated_mod['func_4305'] = func_4305
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4349 = relay.const([[[8.625694],[-4.624461],[-8.154756],[-2.170152],[0.922289],[6.715363]],[[9.386879],[-9.994693],[3.610325],[-7.381625],[-7.092203],[7.193483]],[[5.833803],[1.348654],[4.298921],[0.488450],[7.866171],[-8.192970]],[[-9.167669],[3.127520],[6.994808],[5.613672],[-6.602642],[-0.234515]],[[-7.731343],[9.856441],[-8.761506],[-4.824429],[-1.348618],[-9.209298]],[[-3.396496],[0.460275],[1.553441],[6.934823],[-1.558511],[4.336132]],[[0.108102],[-4.947085],[4.505659],[-3.301268],[0.330505],[-1.610078]]], dtype = "float64")#candidate|4349|(7, 6, 1)|const|float64
uop_4350 = relay.sinh(const_4349.astype('float64')) # shape=(7, 6, 1)
func_3860_call = mod.get_global_var('func_3860')
func_3867_call = mutated_mod.get_global_var('func_3867')
var_4354 = relay.var("var_4354", dtype = "bool", shape = (504,))#candidate|4354|(504,)|var|bool
var_4355 = relay.var("var_4355", dtype = "int16", shape = (7, 195))#candidate|4355|(7, 195)|var|int16
var_4356 = relay.var("var_4356", dtype = "float32", shape = (900,))#candidate|4356|(900,)|var|float32
var_4357 = relay.var("var_4357", dtype = "uint8", shape = (11, 66))#candidate|4357|(11, 66)|var|uint8
call_4353 = relay.TupleGetItem(func_3860_call(relay.reshape(var_4354.astype('bool'), [4, 9, 14]), relay.reshape(var_4354.astype('bool'), [4, 9, 14]), relay.reshape(var_4355.astype('int16'), [1365,]), relay.reshape(var_4356.astype('float32'), [900,]), relay.reshape(var_4357.astype('uint8'), [726,]), ), 0)
call_4358 = relay.TupleGetItem(func_3867_call(relay.reshape(var_4354.astype('bool'), [4, 9, 14]), relay.reshape(var_4354.astype('bool'), [4, 9, 14]), relay.reshape(var_4355.astype('int16'), [1365,]), relay.reshape(var_4356.astype('float32'), [900,]), relay.reshape(var_4357.astype('uint8'), [726,]), ), 0)
var_4359 = relay.var("var_4359", dtype = "uint8", shape = (11, 66))#candidate|4359|(11, 66)|var|uint8
bop_4360 = relay.left_shift(var_4357.astype('int32'), relay.reshape(var_4359.astype('int32'), relay.shape_of(var_4357))) # shape=(11, 66)
uop_4366 = relay.sqrt(uop_4350.astype('float64')) # shape=(7, 6, 1)
func_3263_call = mod.get_global_var('func_3263')
func_3265_call = mutated_mod.get_global_var('func_3265')
call_4381 = func_3263_call()
call_4382 = func_3263_call()
func_2781_call = mod.get_global_var('func_2781')
func_2784_call = mutated_mod.get_global_var('func_2784')
call_4394 = relay.TupleGetItem(func_2781_call(relay.reshape(var_4359.astype('uint8'), [11, 11, 6]), relay.reshape(var_4357.astype('uint8'), [11, 11, 6]), ), 1)
call_4395 = relay.TupleGetItem(func_2784_call(relay.reshape(var_4359.astype('uint8'), [11, 11, 6]), relay.reshape(var_4357.astype('uint8'), [11, 11, 6]), ), 1)
output = relay.Tuple([call_4353,var_4354,var_4355,var_4356,bop_4360,uop_4366,call_4381,call_4394,])
output2 = relay.Tuple([call_4358,var_4354,var_4355,var_4356,bop_4360,uop_4366,call_4382,call_4395,])
func_4398 = relay.Function([var_4354,var_4355,var_4356,var_4357,var_4359,], output)
mod['func_4398'] = func_4398
mod = relay.transform.InferType()(mod)
mutated_mod['func_4398'] = func_4398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mutated_mod.get_global_var('func_4398')
var_4400 = relay.var("var_4400", dtype = "bool", shape = (504,))#candidate|4400|(504,)|var|bool
var_4401 = relay.var("var_4401", dtype = "int16", shape = (7, 195))#candidate|4401|(7, 195)|var|int16
var_4402 = relay.var("var_4402", dtype = "float32", shape = (900,))#candidate|4402|(900,)|var|float32
var_4403 = relay.var("var_4403", dtype = "uint8", shape = (11, 66))#candidate|4403|(11, 66)|var|uint8
var_4404 = relay.var("var_4404", dtype = "uint8", shape = (11, 66))#candidate|4404|(11, 66)|var|uint8
call_4399 = func_4398_call(var_4400,var_4401,var_4402,var_4403,var_4404,)
output = call_4399
func_4405 = relay.Function([var_4400,var_4401,var_4402,var_4403,var_4404,], output)
mutated_mod['func_4405'] = func_4405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3328_call = mutated_mod.get_global_var('func_3328')
call_4469 = relay.TupleGetItem(func_3327_call(), 0)
call_4470 = relay.TupleGetItem(func_3328_call(), 0)
func_1054_call = mod.get_global_var('func_1054')
func_1056_call = mutated_mod.get_global_var('func_1056')
const_4475 = relay.const([9.199694,8.825875,7.208873,-8.538880,-3.805683,-3.817823,-6.231351,-7.555016,0.792989,-4.871085,2.708874,-8.457286,-0.132734,-9.566078,-4.880828,-6.067251,-1.482430,3.391754,8.821005,-3.063786,0.840347,8.923031,-9.182291,-3.936058,7.175948,6.803548,5.248127,-1.711649,9.841025,1.242864,-2.231892,-6.276497,-1.122505,-3.385184,0.674604,2.528127,3.694310,6.302213,-2.877644,0.356441,-3.570982,7.060793,-0.656786,6.441480,-6.826778,6.958300,2.570726,-4.859455,3.067018,4.066763,7.238801,1.389160,2.426222,-2.604880,7.113857,-6.996854,-7.993410,4.815036,0.782833,5.427089,-0.769546,-3.586464,-0.132317,9.789769,7.841866,-0.883576,6.490446,6.004489,-2.018017,-2.317056,3.223411,-8.073127,-8.597493,8.688856,-6.793877,-9.616438,1.011361,-3.507168,4.806925,-2.929012,6.097611,9.583562,-0.474270,2.426704,3.403070,-9.393636,-0.080640,-5.327416,7.488552,-3.201441,-7.301600,-5.390046,1.982485,5.189463,-4.104328,4.202750,9.463760,-1.339215,5.148231,-6.320444,0.146717,-6.214894,0.010100,3.186070,-3.215533,9.207662,-0.334853,-7.898113,-7.015407,-4.603910,8.603120,-8.288826,-8.604285,2.579997,2.607945,-1.115335,-1.937891,-3.821647,-9.002034,-1.032751,-7.765767,5.754431,1.264192,-6.244951,-5.027800,-7.855788,1.074831,-0.452619,8.050137,3.620528,2.334777,-1.820676,-5.633352,-0.086502,-8.835794,8.758934,-5.227206,0.341771,2.931562,2.134509,-1.327099,5.520465,3.975953,6.109988,4.203461,8.730241,7.196633,5.563007,-2.822974,-5.410934,-3.874653,0.271052,-6.364439,3.883737,7.468907,4.607161,-3.064038,4.817621,-6.726997,2.706945,0.628684,1.807941,-4.604956,6.226652,-2.064488,3.419089,5.307302,7.999437,7.140344,4.831094,1.843733,-5.556024,-4.937731,1.604909,-3.169998,-9.081532,9.166236,-5.427249,-4.790302,3.106629,6.434727,-2.266010,2.747560,0.386233,-1.728552,5.285346,1.571398,2.881179,7.525775,8.266633,8.028795,-1.421795,8.643826,-5.005201,-8.097891,-4.768801,-6.921876,-6.580645,-1.561262,-7.984790,4.649515,-4.949956,4.060062,-7.810388,3.763303,0.228070,2.260364,6.392052,-5.545684,7.024133,5.021274,1.390754,-1.838993,-7.603979,1.615536,6.496712,-5.955118,0.285734,3.814852,1.542886,3.083081,-7.391775,-6.697274,6.138831,8.303611,4.794701,-6.845696,3.889670,-7.647267,5.314608,-1.007036,-8.104659,9.760324,4.130996,7.980487,7.353968,9.492070,-8.651699,8.463687,-7.698797,-0.533530,-5.488105,-2.326910,5.678654,6.147530,-0.725149,1.821880,-6.308131,5.980906,0.827200,-4.909152,1.346690,-1.937334,1.231661,-9.317004,0.954762,7.295235,2.281887,8.792788,1.091999,-2.103248,-9.092005,-6.876525,-3.218583,-9.212090,8.242497,-1.261755,-5.156496,-6.342794,-5.724683,-8.291974,1.935481,7.146077,1.957171,0.812419,3.222239,9.647345,3.729442,4.669702,5.954546,0.831048,-3.766272,4.270599,3.491351,8.713990,-6.170365,3.436367,6.017065,2.454265,2.272978,8.580016,-5.493164,-8.362856,4.459568,4.111664,-0.391433,2.020867,-7.377973,2.469564,-6.198900,8.318743,-8.052914,-7.956819,-6.837409,6.347571,-9.129004,-5.694733,9.690878,-9.994547,-7.122797,3.322729,-4.669900,-7.471356,5.359414,-3.193300,-8.370405,3.596103,-4.902380,-1.359518,7.411404,-1.333010,4.578486,-6.986539,-8.061340,8.487097,-7.964929,7.962332,5.580966,0.375070,8.258303,-9.666348,1.143358,6.093394,1.091345,-2.700971,9.550711,-2.948588,-3.128808,9.843372,2.006182,6.195027,4.238673,-8.724488,-9.855667,1.660515,-1.658300,3.735783,2.121158,8.066504,4.479740,3.912741,2.035772,5.257106,-1.826647,-9.562130,8.903434,7.976962,-4.249369,3.148511,2.661388,-1.074197,-5.198977,-2.918045,-1.327687,-5.717232,9.152662,-9.629001,9.090105,-7.625366,-8.163745,0.068437,1.890375,-0.149731,-6.112924,-3.106691,8.843046,3.547527,9.009365,1.980005,-4.824061,5.561313,-2.211020,-4.331540,4.938142,0.787698,8.509947,4.087957,-4.843727,-7.993933,4.072137,-8.705166,4.100225,-2.255625,2.389452,9.205295,6.601968,-3.670277,-3.467518,0.763108,1.343172,-2.928433,3.719884,6.197749,1.987539,-1.727877,4.474343,9.780616,8.326973,3.170081,-5.647939,-2.981725,6.463787,6.630405,5.141579,4.159286,4.571263,6.236869,3.702122,-9.534708,-3.721444,9.715088,-5.327567,-7.993941,-0.363571,-2.091962,-0.401716,-7.853585,3.773029,-4.345101,-6.518330,-6.235261,4.523579,-3.556537,-1.056270,4.787019,5.201231,-1.971173,-7.087672,9.034711,-9.103225,2.402623,-0.984405,-4.432843,4.559707,-8.446199,-5.767146,9.798088,-3.653324,-9.233092,1.842382,2.348896,-0.399732,-6.376800,4.256503,1.223268,3.670369,-5.825996,-4.650196,-3.515920,5.223323,5.631286,1.926490,3.722305,-3.366737,-2.476643,-1.470202,4.121715,-1.027535,5.747458,0.499297,2.963757,6.793148,4.479272,7.257298,1.920626,-8.160216,-9.658633,3.428281,-3.334603,-7.437979,2.175243,-3.459923,1.185198,-1.959059,-7.315328,-0.734826,3.813207,-3.370649,1.958312,-6.111209,-2.031933,-5.918038,-2.469024,9.410026,5.452319,7.210393,-6.802943,8.819696,-5.766574,-8.417181,-3.494025,0.389039,-4.279717,-8.311536,8.315082,-8.530925,4.680671,-8.727607,-4.943460,-1.221305,2.608458,3.523469,-3.728308,-6.616907,-7.155366,5.053080,7.794423,-9.045781,-1.564280,2.562666,6.752436,-0.516405,-2.805363,-0.265792,-8.475105,4.422298,0.508700,8.867259,4.057045,-0.396227,-0.670571,-4.296811,-7.367419,1.523724,9.756965,-7.435269,-9.451337,-6.454014,-8.516645,7.336383,3.753334,-9.236408,3.636837,-2.557658,6.758594,8.073202,8.441193,1.792669,-9.843061,-7.104237,-7.476321,1.687292,5.951792,1.814816,-8.546719,-0.181631,4.928637,-1.463447,-6.967615,-3.099891,-7.872587,2.168566,2.565299,4.570746,2.519903,-1.425715,4.463352,-7.283613,0.555290,-6.492989,9.099714,4.029736,0.787526,8.761390,4.454275,-2.775254,8.430347,4.557817,-6.519837,0.120118,-6.972490,7.945992,1.038004,7.058191,-5.709921,-9.549903,-8.093325,-8.948059,-2.232685,-5.042514,5.410843,7.483675,-7.522172,-1.195795,8.776661,6.911749,1.272698,0.092667,-6.189005,4.981494,-8.254212,-1.671846,0.691880,3.492928,2.892367,8.352680,-2.990015,4.322289,6.688849,3.712205,3.371980,7.119137,-0.101556,8.283832,2.951101,6.187598,5.916009,-9.491927,-0.780339,-0.746712,4.661502,8.871937,-6.003986,9.941817,-4.231153,-1.586257,6.163807,-1.898425,0.874727,-9.684034,-7.839457,-0.306806,-6.098279,-1.802870,-4.965390,-4.967892,7.456616,0.039984,-0.717738,1.696069,-3.630857,3.955028,4.176217,2.036842,4.221591,9.799953,4.959931,1.211280,3.156326,-7.013221,-9.285880,2.084902,-0.705230,8.440021,1.948049,1.896146,2.195242,3.718750,-2.159562,8.073865,4.707089,7.451486,-8.739185,-0.916544,1.003349,-6.456942,1.127285,0.555756,-6.131440,-9.298206,7.944121,3.518330,-8.601056,-4.571718,6.389632,0.330927,-6.374821,1.086114,0.509996,-4.546134,4.532890,1.470529,7.668939,-6.217952,3.489594,1.104067,8.643161,8.081204,-6.355904,-3.147437,3.193366,-7.130442,5.335877,5.771294,2.132859,0.805393,-0.984943,9.055159,8.177252,1.044156,-1.925170,4.531525,-5.100955,-9.349403,-7.234042,-0.291091,-9.647519,-9.092446,9.617749,-0.125637,6.912946,4.812036,-0.685344,9.984383,-1.750283,0.816327,-1.572282,-9.417208,9.667561,4.386631,-6.329465,-5.010115,-9.953290,-1.088430,-0.402034,-7.583049,-5.645996,7.316478,-1.909436,-5.439823,4.569187,7.568884,-4.005330,-1.853992,-1.163165,-5.881800,-3.762306,2.613445,2.823840,-2.305553,5.739820,2.659116,-8.658690,-7.522924,-8.697293,8.524745,-8.078492,6.164805,2.706578,1.155046,2.963020,-7.067704,-0.890311,-1.965085,1.557054,0.970466,6.449577,-4.510712,6.094145,-6.108075,7.336346,7.871888,-4.735458,-8.511723,4.597213,-0.881198,0.683036,-0.571932,-6.947620,8.731881,0.686795,-8.708323,-6.368757,-7.120106,-0.977224,6.736149,-7.235391,4.770021,4.908989,-1.050392,0.718318,9.391450,6.093451,-3.042573,-4.421909,6.234950,-2.543202,-0.957099,-3.213932,-3.348203,8.914846,-1.655263,7.774546,-3.376310,-1.267631,5.741180,7.367030,-1.607975,-7.657351,5.437634,7.373919,-4.171557,-9.029018,-2.639453,3.489313,6.646435,-0.054115,-1.744627,-8.211719,-8.644390,-4.955455,-8.603574,-3.662090,-9.379572,-5.128641,4.930889,8.074777,3.968858,-9.037350,-2.434838,6.935636,-8.258666,-0.541860,0.993793,1.603020,9.060775,9.897829,-2.980669,-0.766411,-8.777147,-6.575146,-6.595566,1.702044,8.483649,2.534871,2.223593,-0.518268,-0.515047,-5.453628,3.011472,3.106907,7.819556,-1.947619,-8.060541,5.224212,8.171749,-3.133717,5.118770,-4.997160,5.410600,-0.407009,-7.752687,-4.211774,6.088878,-4.684930,8.328720,5.318890,-3.733992,-9.058290,9.370412,1.753173,9.231194,-2.404704,6.927871,8.285445,8.273981,7.393700,-5.004940,-6.837098,-8.885392,-6.532586,4.795392,3.026203,-7.709349,-9.153394,7.292432,-1.799024,-1.217234,3.708666,2.473878,-7.226445,-2.956705,-6.973359,-1.371856,4.092569,7.552570,-0.178889,2.318358,-9.767012,1.753371,8.241309,-6.550719,9.678881,6.817245,-6.975953,7.575641,3.937624,-5.632702,0.552412,-7.065854,-2.869329,-9.602870,-9.149797,-3.343674,0.694225,-8.577123,-2.367582,5.927926,0.179615,-7.662503,5.611962,-3.360498,9.417061,8.152456,2.248721,1.874665,0.080747,-8.789044,-8.019531,6.980915,-6.335713,-9.327890,-0.437200,-9.075345,-7.304112,-4.391787,4.247877,-3.979911,4.383375,1.651620,-4.869750,-1.261047,-7.907576,2.235098,3.503429,4.752474,-4.502145,-9.828050,4.646306,-1.760911,5.578712,7.916358,-9.180909,-9.398943,4.944657,-0.740587,-3.001510,-4.478955,-0.554930,9.023264,-2.513828,9.230223,3.534187,0.348273,1.016282,-7.030118,-6.917108,0.979786,-7.377709,7.217852,6.371780,2.910737,-2.599325,-4.695947,8.120317,2.839878,-3.101095,2.024788,-6.733473,-6.270326,-5.790017,7.694541,5.676493,7.466813,-6.603484,0.448111,1.207583,2.484818,-8.501005,-6.186849,-3.731798,6.808699,-1.687726,-5.414112,-1.848631,-9.107767,2.282200,3.195632,-1.064675,-7.263305,4.586864,-8.162951,-5.749611,5.466284,-6.655362,4.309047,1.408841,4.063700,7.937732,-5.492773,5.409858,-1.016691,-1.550451,2.449866,9.696646,8.743853,2.492328,2.812482,-9.892909,0.582141,-5.612598,0.619967,6.528938,3.346035,-7.367095,-6.902037,4.714913,-0.268972,1.309008,-4.029980,-6.522126,5.742422,-8.796216,1.167036,8.501269,6.735907,6.010343,1.013563,8.930292,6.351404,7.414346,8.491858,1.230833,-5.221741,4.903181,5.650110,4.309392,-3.824138,8.121255,-0.273948,-8.499769,-4.597170,-3.484036,-0.935240,-6.874973,4.333023,-7.395291,-9.308334,-8.201904,-1.819939,-2.779062,2.406491,-1.211589,5.770454,-8.585277,9.579824,4.873739,-4.197274,2.243942,2.386346,9.457190,0.423782,-8.978112,8.449632,8.651365,-3.637321,3.174915,6.910480,7.513064,1.147125,-3.194016,-0.090251,-4.920128,0.132852,-3.670153,4.148020,2.751439,3.540150,3.178934,-8.669339,-8.254716,-7.122636,9.028582,3.235771,-5.237644,-3.836568,0.477704,-4.138088,8.052849,-7.858982,-6.427464,5.272218,-9.578747,4.628991,5.297253,-7.110531,7.090264,0.571012,-3.518760,5.839919,3.434929,7.819539,1.324157,-1.863212,7.724866,-4.135466,2.061566,9.657269,-7.320631,9.299535,8.173700,5.889764,-8.979816,6.457731,8.229362,9.044760,-7.225079,-8.436639,-5.736149,-2.296764,1.812438,0.671949,5.569753,-2.596100,-2.668007,9.570480,-5.792845,-5.665549,-1.953373,6.274660,-5.552521,-7.636721,-2.752662,-8.418492,-4.572356,-9.876559,5.394555,-9.299943,7.928468,-5.860240,-9.887895,8.117234,-7.301847,0.922004,5.982769,7.864851,9.072115,-6.216484,-2.123992,-9.262625,3.546603,-8.896099,-9.714401,9.008780,3.315195,7.859666,-4.584810,-5.057550,-9.779352,3.635115,4.872584,-4.415140,-4.214933,-3.971537,4.469436,8.955540,6.147558,-5.324871,-0.601808,8.446743,7.270927,9.242387,5.137745,5.952713,8.916931,1.995250,6.549676,2.279458,-3.587707,-7.217649,-8.073402,0.783124,6.628946,-9.802566,7.097212,5.637674,-8.018764,-9.737745,2.978804,-4.438112,-0.138762,0.528500,6.052451,-7.456605,-2.283907,0.169505,-2.753811,-2.498157,-6.981895,-9.308194,0.503327,9.688829,-5.410794,2.489809,4.731765,0.741600,-2.857582,2.610585,1.703219,2.899012,-9.220656,2.197418,2.408736,-5.282117,-3.533817,-6.689836,-5.528365,0.599055,5.509764,-5.289767,-3.112543,0.664547,-4.566163,-9.977070,-6.302292,4.606938,0.639356,5.310919,8.852472,-3.164761,-1.232380,4.163518,-0.718624,-6.475496,8.492563,-3.923433,-1.075000,-2.847149,-4.399272,-1.227821,3.387101,4.356134,-8.914201,9.166712,-7.281138,5.327433,-8.801293,-5.553346,-2.320203,5.040464,5.439591,8.080234,1.778515,6.266270,3.784213,-5.119014,8.316646,7.197908,-6.411051,3.622288,-0.047993,-1.959896,4.923490,-3.402289,6.502746,-5.295724,4.802739,-3.184218,9.022299,6.368091,0.426928,8.165824,8.395376,4.224404,-8.871706,5.914970,7.272652,4.911546,-7.713800,-7.383884,0.062826,-9.240822,0.211125,9.566294,-4.751501,8.877611,-6.647486,2.747204,1.744267,-1.813573,1.399380,-9.068462,0.722021,-1.275991,8.061150,7.202008,8.541294,-8.261176,-5.562198,4.507496,-3.549884,-1.882475,-0.421187,-5.787431,-7.031152,9.505419,-0.405088,0.585351,3.640498,7.059580,-7.643631,-3.454270,8.756583,-9.320215,-8.389500,-4.621382,-9.274451,-0.068326,-8.289562,-0.722968,1.454389,8.167124,-0.020546,7.915560,-3.773192,-4.443872,3.463344,-0.290483,6.929980,-2.184941,-3.795346,-5.565537,0.476075,4.305781,-2.208187,8.504779,7.164549,8.990557,7.652148,-4.032384,-8.052928,-7.126073,0.361051,-1.231326,-3.533905,-5.130720,5.702928,9.385015,7.838402,3.760772,9.011366,2.498842,7.648450,-8.387576,4.894996,-7.063851,4.913412,6.779848,0.211131,-1.388051,-6.317195,-1.688086,7.493391,8.476968,8.835337,-0.869178,8.367685,0.638036,3.246061,6.035609,-7.565937,-7.341556,-0.605445,-1.112854,6.195573,3.240641,-2.950259,5.472188,-6.151197,-9.515393,6.508409,-8.633380,2.486812,9.572964,9.051602,5.497468,-3.300926,8.702342,-5.830614,-4.882489,-9.735453,0.060132,-8.784031,0.850465,1.343374,-3.653119,-2.031523,3.371625,-4.891676,-1.186214,0.462629,-2.258654,8.571617,4.174333,3.996712,0.301764,5.907974,-7.121977,-6.717300,-6.748505,-4.786148,-8.108751,2.628608,-7.416477,7.727703,4.386797,-7.959353,-0.962443,-3.270701,0.435467,-0.345414,6.620554,-0.994051,6.359215,2.418654,-4.081803,-3.092676,2.106839,0.537505,4.493584,-1.799032,9.742930,-2.046275,7.400263,5.183186,6.916405,4.675024,-6.153304,-8.430912,-3.932489,0.071620,1.375086,-6.113080,-2.332067,-6.738180,-7.837851,-1.252979,-2.184989,3.908606,8.422227,-3.896700,-2.137709,-1.008859,7.790167,-3.635557,-5.062516,3.039303,2.347165,-1.259463,3.727673,-3.909558,-8.194994,6.514069,9.882593,-4.694467,-2.662350,6.838661,-8.081710,2.903764,1.681255,-2.479535,1.436610,7.127772,1.544039,-4.769293,7.697373,-1.250610,-2.036224,-6.444650,-6.929601,-7.313003,3.856371,-3.366869,2.195159,-5.927453,0.526787,9.113746,-6.442907,-2.370290,-1.629983,-1.521135,2.518248,3.787121,-3.259778,5.163330,-7.726736,5.677450,-6.410685,-1.146319,0.934810,-2.496114,3.227762,-4.927615,-3.054683,5.396986,0.269481,-2.636130,-3.820551,-1.300443,5.217997,0.157849,-4.919221,-2.430936,-4.238559,-5.358611,2.055648,2.143111,-4.570673,-1.391516,-7.324984,-3.237433,4.347403,-2.895993,-2.750208,-5.410298,-7.313061,-7.205132,4.165226,4.206535,3.464445,3.086412,-1.041025,5.446935,-1.932601,-8.840447,6.905108,7.887205,3.002238,-4.079339,-8.048559,-6.476286,-6.990679,7.915578,9.586412,-1.331449,6.120661,8.497355,-9.257095,-0.436370,-4.213837,5.844427,4.692231,-9.249492,-3.586074,6.326176,5.871660,4.707983,-5.924752,7.488902,-1.452132,-5.768779,-0.897116,7.977459,-8.544365,3.701699,-1.279436,-0.684908,7.032613,1.035065,1.126585,0.294442,-7.190074,-4.483136,4.127275,-8.906618,2.713268,8.460518,-7.071583,-1.533892,5.533703,1.706912,-0.243768,8.436711,-1.168123,3.480911,8.093480,-2.085229,-0.404535,-8.965340,2.181771,8.465743,0.709688,-3.130679,1.327812,-6.852323,-9.992945,5.762096,6.617758,2.835977,1.570854,4.449097,9.658157,-8.366988,4.254931,8.102290,5.574249,7.955040,-4.668834,-6.604422,6.985753,-8.324566,-2.192149,-3.922713,-0.363549,8.889613,1.483048,9.378757,-1.139739,-4.045678,-1.666455,-3.291103,-2.465384,4.439827,1.140976,-9.136156,-2.086670,6.093385,-1.698859,0.380831,5.578659,-1.735974,9.003095,1.603625,4.756084,8.080140,7.394933,5.715524,-8.069318,-1.935849,-8.899276,-2.999333,6.458440,9.621318,3.595005,5.215574,0.515536,9.096607,6.247732,3.778333,-6.083945,-3.540569,-8.262636,0.859402,-4.467236,1.187364,1.038981,-6.650003,5.302626,-3.788348,-1.556888,7.586440,-1.238300,-8.406905,2.208049,-2.387608,7.664004,1.332846,7.817022,-7.872655,3.483251,-8.061848,3.591050,9.508125,8.612811,1.398458,6.544113,1.688289,-1.845585,3.247597,0.996114,7.318381,3.169293,9.268637,-1.052392,-6.398355,9.366350,-5.516696,6.770285,2.209937,3.811863,-0.452207,0.273127,-7.716986,-5.717029,7.658691,-4.855475,-7.959168,0.620955,-0.612755,9.542609,5.430572,1.749531,6.821582,-6.479527,2.332256,7.622968,-5.980249,-0.924289,-6.582971,6.050636,-8.691702,5.983758,1.565153,-6.842090,-8.682658,-9.030674,-6.147682,3.763428,1.167501,-1.579390,8.744956,-9.661524,-1.406464,4.837996,8.786967,-5.712371,-5.605105,-0.197728,8.941371,3.935948,-9.336936,4.005701,7.879151,-8.833527,-7.229010,-7.790587,1.742049,-7.309855,2.714757,-9.497955,-0.786034,-9.380471,-0.888762,-8.180572,-3.870508,6.970153,8.682235,3.723257,9.756138,4.301807,7.712177,-4.028756,5.697124,-3.890260,-4.977135,9.476933,-9.681019,0.600414,2.782652,-6.790469,3.773099,-0.508738,-3.440090,9.850265,-1.564821,-1.304819,-5.048381,-8.069723,5.071608,-9.814233,9.984104,-6.622736,-4.480498,7.479347,2.984755,8.778939,3.322191,6.377461,9.638407,-6.024847,-5.177941,3.111026,2.254464,-8.689655,7.086968,-3.650739,-0.523392,-0.858587,-9.699635,-3.906627,6.867064,-4.488116,-1.101925,-9.157387,-8.866649,0.041211,7.574727,-6.877410,-8.836217,8.245966,1.800467,-4.580858,-9.262346,-5.734885,-0.101532,-7.835992,-2.082036,6.666278,2.217536,5.204942,-8.608058,-1.567923,0.914527,-6.496138,5.578106,3.164261,1.714983,-3.336773,-4.935945,-8.366722,-2.825324,-6.068182,0.336573,1.276467,-1.616725,-0.873585,5.790917,-7.281302,2.224707,-8.003170,3.056359,-2.961906,0.803935,-3.520593,5.099679,5.018530,-2.253170,4.262918,9.197711,-9.561192,6.256310,-5.152676,7.096435,5.291074,9.879787,3.958263,-4.567592,3.661524,-0.177141,3.907411,-8.332515,7.253415,0.142871,-0.314804,5.143959,-7.035703,4.342460,1.785709,0.988724,-2.388890,-7.105934,2.168400,9.181631,0.952896,3.132952,3.794632,1.992091,-3.256448,7.002875,9.163647,7.538854,4.390084,-4.619397,3.517491,-3.212663,-7.650386,0.505585,5.178898,-3.812234,-2.728265,9.362283,1.201808,0.026570,1.734479,-0.943527,1.352407,-7.425967,-7.149006,-4.601138,5.018116,9.652974,7.499936,5.117985,0.264105,2.479412,0.971979,-1.602410,1.414814,-9.712333,-1.750140,8.188393,-8.747646,7.349970,-0.861056,-1.177379,-4.371217,4.596823,-9.254704,-6.274781,-3.851082,-6.723434,-4.236666,-5.069574,-0.363013,0.848023,9.939125,-4.313152,-1.013653,0.147347,5.027584,-8.873760,7.252700,-1.241635,5.841309,-9.167073,-3.124905,9.929283,0.478597,7.673712,8.141392,-1.119998,0.389365,-3.597607,-4.861984,1.412280,-1.012271,2.324330,6.722572,1.011074,-2.733650,9.535870,-3.422012,-4.054112,-9.624261,9.588772,-1.091046,1.099259,4.945678,1.740313,8.479202,1.901763,3.435540,9.369607,-3.523759,3.412628,-6.630743,-9.320290,5.050088,-7.980860,-8.396551,8.386720,-7.953205,-3.609462,6.930848,7.882798,-4.382286,-9.880898,-8.982582,8.044522,-1.562835,5.014975,1.551478,-4.651291,-3.184741,-3.442146,-7.937147,3.247599,-3.517147,-7.200861,-6.077971,-0.658868,4.987459,-7.398780,1.165870,-8.750928,-8.755990,-4.578820,1.174608,-3.709377,-7.268017,-4.469426,7.790251,3.303540,-3.265171,9.841944,7.920333,4.247246,-9.119812,-6.677522,4.439597,6.781510,0.070870,3.046952,-3.973274,-5.180770,5.682950,-0.885471,9.525305,-3.376706,9.874719,-9.007519,-5.471063,1.258722,1.521299,-4.842101,5.894042,-9.964123,0.948684,5.239246,0.421790,-2.489676,6.156993,8.469999,-4.509221,-1.994515,7.293164,7.344937,-3.671015,-7.682388,-8.850306,2.326079,7.494230,-3.257830,5.800210,-0.129437,-7.427110,2.355678,3.134317,-8.661418,3.153751,-4.751307,2.833671,-9.342807,-7.111795,8.396996,6.980946,-6.329511,-8.822781,9.221968,3.503042,-0.165654,1.110911,9.132103,7.699299,-0.514842,-1.267869,5.887614,-1.033467,2.890434,3.519594,-6.933532,0.663709,2.488779,4.885704,-0.759974,-0.713979,-1.360982,-4.944659,6.451055,9.714193,-4.595262,-5.095759,3.997101,8.396696,7.838572,3.567401,7.436664,6.308783,-1.566060,-5.881932,8.629906,-3.425387,-6.634790,4.491941,-8.701018,5.341147,-0.913863,-0.101628,8.161564,-3.670225,-0.650664,-3.515535,2.972662,-8.872927,-5.964478,-7.949059,-2.755809,-1.559102,1.641942,-7.266429,-0.898382,5.956003,7.924167,0.504588,7.731749,9.934610,1.223281,-2.687004,4.110486,4.521664,8.867112,6.766445,-9.967791,-0.885998,2.378101,2.901141,-9.390573,-6.663069,-1.760984,-0.783283,-3.492301,-1.312916,3.253434,-3.621546,3.564173,0.919276,1.641261,-9.786075,-6.879641,5.640788,1.872160,6.676793,3.780599,4.543139,0.570026,-5.048685,-5.507772,-9.435121,9.125080,-3.922050,-3.990714,6.612823,6.231290,9.583863,-9.015675,8.669500,5.792886,8.510283,1.463524,-6.643301,6.155164,-3.525274,6.907138,3.649902,4.321616,-0.554462,8.265131,4.009259,1.234806,-7.695739,4.632524,-9.775382,8.675067,-0.561698,-3.133611,6.496507,2.233345,8.955951,-4.561233,0.413387,4.279454,7.522439,7.968773,2.115870,5.114487,-8.228266,0.280438,2.035651,-1.513250,1.847593,2.067619,-8.092179,-1.932939,6.805036,9.607901,-7.973714,-8.409204,3.916961,-9.361473,9.019434,2.321962,0.608579,-1.873752,6.329743,-7.483161,5.542561,6.598511,-4.566915,-5.535232,0.781391,-9.992519,-9.210668,7.347926,-2.251373,-8.974211,-1.460657,1.824514,-6.070281,-0.589092,-5.598214,6.122285,-6.686415,-0.861069,-1.476432,6.663014,-1.355863,-0.155029,-0.290142,-8.374384,9.898569,-6.637684,-6.775015,7.452790,3.780454,-4.847893,-0.048249,-5.749078,5.266013,3.285529,6.660209,6.749956,-5.865804,-7.897966,3.973140,1.421001,1.091443,-2.612379,8.367084,-5.262908,-8.507434,3.966086,-8.915209,2.251375,-1.480524,-1.176918,4.133569,5.285139,1.943115,0.619271,-3.541556,8.601801,-9.126180,-7.227887,-7.913494,5.517819,2.324882,1.026840,-0.622361,9.779219,-3.157926,-5.779852,2.540947,3.061541,9.708590,-9.417903,-5.883187,8.351412,6.224545,-1.367727,-9.520117,-5.589738,-0.413238,-3.067682,5.913774,8.203591,2.362187,6.852315,2.397498,2.792944,7.249562,1.823711,5.569079,0.703987,-0.153371,-2.975269,0.593456,-8.888787,3.147155,-9.919676,3.843791,-2.371019,0.516405,7.089360,-7.834560,2.932026,-1.987087,5.680814,3.201930,7.720495,8.154019,-0.661879,-8.920235,-9.675438,7.619813,-6.357894,5.881053,0.926681,4.845887,3.766176,0.173185,6.770304,5.097164,-3.270386,4.294637,-6.147306,2.711173,7.340694,-4.505274,6.773463,-7.160101,-2.427589,-0.687105,-8.124982,-3.790769,-8.930541,-1.228183,-6.876861,-6.021642,-3.038826,-3.867114,-8.386686,-1.225562,1.742384,-8.210121,-1.083103,6.466498,-2.275070,2.348879,3.237353,-3.810984,6.804897,3.274818,9.007026,-0.304528,-6.110924,-7.905016,6.228946,-2.548995,2.242777,0.576737,-2.012051,-9.810134], dtype = "float64")#candidate|4475|(2352,)|const|float64
call_4474 = relay.TupleGetItem(func_1054_call(relay.reshape(const_4475.astype('float64'), [14, 14, 12])), 2)
call_4476 = relay.TupleGetItem(func_1056_call(relay.reshape(const_4475.astype('float64'), [14, 14, 12])), 2)
var_4481 = relay.var("var_4481", dtype = "float64", shape = (2352,))#candidate|4481|(2352,)|var|float64
bop_4482 = relay.multiply(const_4475.astype('uint16'), relay.reshape(var_4481.astype('uint16'), relay.shape_of(const_4475))) # shape=(2352,)
func_3312_call = mod.get_global_var('func_3312')
func_3316_call = mutated_mod.get_global_var('func_3316')
var_4489 = relay.var("var_4489", dtype = "float32", shape = (910,))#candidate|4489|(910,)|var|float32
call_4488 = relay.TupleGetItem(func_3312_call(relay.reshape(var_4489.astype('float32'), [7, 130]), relay.reshape(call_4474.astype('float64'), [900,]), ), 2)
call_4490 = relay.TupleGetItem(func_3316_call(relay.reshape(var_4489.astype('float32'), [7, 130]), relay.reshape(call_4474.astype('float64'), [900,]), ), 2)
func_3312_call = mod.get_global_var('func_3312')
func_3316_call = mutated_mod.get_global_var('func_3316')
call_4496 = relay.TupleGetItem(func_3312_call(relay.reshape(call_4488.astype('float32'), [7, 130]), relay.reshape(call_4474.astype('float64'), [900,]), ), 4)
call_4497 = relay.TupleGetItem(func_3316_call(relay.reshape(call_4488.astype('float32'), [7, 130]), relay.reshape(call_4474.astype('float64'), [900,]), ), 4)
output = relay.Tuple([call_4469,call_4474,bop_4482,call_4488,var_4489,call_4496,])
output2 = relay.Tuple([call_4470,call_4476,bop_4482,call_4490,var_4489,call_4497,])
func_4508 = relay.Function([var_4481,var_4489,], output)
mod['func_4508'] = func_4508
mod = relay.transform.InferType()(mod)
var_4509 = relay.var("var_4509", dtype = "float64", shape = (2352,))#candidate|4509|(2352,)|var|float64
var_4510 = relay.var("var_4510", dtype = "float32", shape = (910,))#candidate|4510|(910,)|var|float32
output = func_4508(var_4509,var_4510,)
func_4511 = relay.Function([var_4509,var_4510,], output)
mutated_mod['func_4511'] = func_4511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mod.get_global_var('func_4304')
func_4305_call = mutated_mod.get_global_var('func_4305')
call_4585 = relay.TupleGetItem(func_4304_call(), 0)
call_4586 = relay.TupleGetItem(func_4305_call(), 0)
func_3025_call = mod.get_global_var('func_3025')
func_3029_call = mutated_mod.get_global_var('func_3029')
const_4594 = relay.const([8,1,-4,9,5,9,-9,-7,2,-5,7,-9,9,5,7,-9,-9,-2,-3,10,4,-7,8,-4,-10,-9,8,-10,-4,-8,2,-5,-8,-5,-9,-2,-6,-7,-5,-7,2,3,-5,-7,-9,-9,2,1,10,-2,5,-3,-3,5,1,-2,-9,-5,8,-3,-6,-8,-6,-8,-9,7,-4,-4,1,4,3,-5,3,-7,3,-9,-2,-9,8,-5,10,8,2,-1,-1,-5,3,7,1,8,-3,4,4,4,-1,-8,2,-4,-9,-7,2,-7,3,2,9,9,6,7,-7,3,-9,10,8,6,-9,-10,-7,7,-2,-8,-6,2,2,-4,-8,8,8,1,-2,-3,-1,1,1,-2,6,5,6,-5,-5,-1,6,4,-7,-7,-1,-1,7,-2,1,-3,-3,10,6,-2,-4,7,2,3,-6,10,3,10,3,-10,10,-1,2,4,7,-10,-9,-3,8,-10,-6,-2,2,-1,-5,-1,-4,8,4,-5,-10,-1,2,9,10,4,2,7,7,-2,10,-9,-6,2,1,-10,-4,1,5,-8,3,-10,-8,-2,-6,-9,-8,3,-5,1,-2,-8,-1,4,1,10,-4,1,-9,6,7,-4,-4,-6,-1,3,-9,-2,2,-8,-6,8,-1,3,-2,-7,-4,4,5,-5,9,10,10,10,-5,-6,-9,4,-3,-9,-6,6,7,-8,-9,7,-4,8,8,-8,8,-6,8,6,7,-10,4,-2,5,-3,6,4,6,6,4,9,-9,9,-6,-1,-2,5,9,9,7,10,-2,3,-10,6,-4,4,-1,-1,9,2,-6,-9,2,9,-2,5,5,3,-7,-7,-1,4,-5,-1,-8,-8,-9,7,7,-3,7,2,-3,7,-2,-1,-9,-7,10,9,-2,-2,5,2,-7,10,10,8,-5,-5,1,-1,3,-3,7,-10,-10,-10,4,-7,-7,-7,-7,2,9,-2,-3,9,3,8,-7,-1,-3,-1,2,-9,3,6,2,5,-5,-2,-9,6,-6,-2,-5,9,5,-6,-8,-6,5,-4,-9,-8,5,5,-2,6,5,10,-2,-9,-9,-3,-2,-7,-4,1,9,10,-1,7,-3,-1,2,10,10,-10,4,3,4,-10,2,-2,3,6,6,-5,-10,-9,8,6,-9,-5,10,9,-2,4,10,-9,-9,-5,2,-6,-8,3,-6,-4,-5,-10,-10,1,-5,8,-3,8,-3,7,-3,-6,-9,9,-7,-2,1,-7,8,3,-5,1,-7,9,2,-5,-10,7,1,-5,-6,-3,9,-10,-10,-2,-5,2,-2,3,-1,-10,-9,-10,-1,-1,4,-8,5,-9,2,-1,-4,8,-6,-1,-9,-7,8,-1,4,9,-7,10,4,7,1,-10,3,-5,1,5,9,-10,-1,7,4,-5,3,-3,7,1,-9,6,-1,10,-9,3,9,4,-8,-7,-6,-5,10,-6,-1,-6,7,4,-3,1,-1,9,-10,10,-5,-2,1,-10,7,-7,-2,-1,-3,1,9,-5,6,10,6,-6,9,1,-5,-1,8,1,9,3,6,7,3,8,7,-9,-10,-3,3,10,-7,-2,-9,7,6,-9,3,10,9,7,-5,-8,-9,5,6,-4,8,-2,-1,-4,-10,-1,-2,-6,6,6,10,-8,6,-3,-1,-7,-2,-6,9,-2,-5,-9,4,8,9,-3,10,9,5,10,8,-2,8,5,-10,-4,2,1,-9,7,-3,-6,-2,-8,-7,-2,6,9,-4,1,3,-6,-7,10,6,-3,-8,1,-5,6,7,-1,1,-9,4,8,3,4,-3,-7,4,9,10,3,-10,9,6,-2,-2,4,3,5,6,-8,-6,9,5,-3,7,-2,6,4,-3,-2,9,1,8,8,5,-2,-10,-2,-8,-10,4,1,5,-3,4,-3,1,-7,-10,-2,2,10,6,9,-9,-10,10,3,9,-6,-3,-9,3,-5,2,1], dtype = "uint8")#candidate|4594|(726,)|const|uint8
const_4595 = relay.const([8,-3,7,5,-4,-3,2,5,6,-5,6,3,-2,-3,1,-2,-1,-3,6,8,-2,-9,2,10,-3,6,-4,3,6,-9,-3,-5,7,-3,-5,-6,-3,-1,8,4,8,-5,1,-10,-3,5,3,10,-5,6,-3,6,5,2,1,-9,8,-3,9,7,6,9,1,9,10,7,-6,-1,10,-8,-9,-10,-8,-7,8,-2,7,2,-9,-5,8,4,5,-7,-1,6,2,9,8,-1,-4,-3,-4,-9,7,2,6,-9,5,5,-3,-6,-6,-6,-2,5,2,7,2,-9,-1,-4,8,7,-3,9,-3,10,-9,6,-7,-9,6,5,3,-8,-4,1,-8,-5,-3,7,-9,-5,-5,-2,-1,-1,9,4,-7,-6,5,-5,10,-5,6,6,1,6,2,10,2,-10,-7,-3,-7,7,8,8,-6,8,-7,9,-8,7,4,-5,9,7,2,-2,9,-2,3,-7,-6,-1,3,-2,5,-3,7,7,-5,-3,6,-5,-5,4,-8,-7,7,-7,7,1,1,3,4,-5,6,-4,-3,7,-6,6,-3,-8,10,-1,7,9,8,7,3,10,3,-4,-3,-4,4,-4,-4,7,10,-3,2,6,-3,3,-8,-7,-7,5,2,2,3,2,10,3,7,-6,7,10,-6,8,-6,-3,8,6,1,-5,-3,2,-8,3,3,6,-1,2,7,-1,6,7,-4,-3,8,9,-7,-5,10,-10,-7,-2,3,8,-3,5,5,-1,-3,-5,-6,-4,-7,-10,9,9,8,-6,5,-3,5,8,-7,2,-7,3,-1,-6,10,-5,-8,6,-8,-7,8,-1,-5,6,10,-4,-3,10,-5,-4,2,3,6,6,-2,6,2,-7,-8,10,9,7,-2,7,3,2,9,-7,-7,-8,5,-10,-3,5,8,-3,9,10,-7,9,-6,-7,-8,-1,-7,-5,5,1,-4,1,-2,-10,6,-4,-7,-3,6,10,-2,1,10,-2,-3,4,1,-9,2,6,9,1,3,-9,-3,4,-9,-7,-3,5,3,-1,-5,-7,-2,-2,-3,7,6,6,4,-7,5,4,-4,-3,-6,-3,-7,-7,3,9,2,-1,-3,-10,-7,2,2,9,4,-4,10,-1,-6,-7,-10,5,4,2,5,4,10,3,1,7,7,6,-9,-4,7,-3,8,9,-8,-9,7,-2,-9,-1,8,-4,1,10,-6,2,8,10,-7,-7,-2,-7,-10,-5,5,-7,-4,-8,2,-3,-4,4,2,9,-3,-4,5,-3,10,3,-4,8,3,2,-6,6,10,4,-1,3,1,10,-1,-8,1,-6,-4,-10,2,4,7,-2,9,-10,8,6,-5,5,7,6,-7,-2,1,-7,4,-3,-1,-9,-10,1,-6,-9,-3,-6,-10,-10,-9,7,4,2,-7,-10,-9,-1,10,9,10,7,-4,6,7,10,-8,-3,3,2,-2,2,-3,-2,-6,-1,1,-2,2,9,-3,3,-6,-6,4,10,-2,9,5,10,-2,-8,10,-10,-7,10,-5,-3,-1,-1,7,-3,2,-4,-1,8,7,8,7,8,4,6,-2,2,8,-10,-5,-3,3,3,4,-9,9,-8,5,10,5,3,-5,-1,-10,-9,2,-1,-1,-10,8,-8,7,5,4,-3,3,8,-1,-2,-10,6,-3,8,1,-9,-7,8,-4,6,-10,9,-5,5,6,8,10,-9,-9,7,6,9,-4,7,-1,8,-2,-7,1,-4,9,4,-4,-2,-1,2,-6,3,1,-10,3,-6,-2,-1,-4,2,4,3,-9,10,-6,9,7,-4,2,-1,-1,-9,7,-9,-6,4,-7,10,4,7,-4,3,-10,8,-2,-4,-5,9,-4,2,-9,2,7,-5,-1,2,1,-7,-4,-1,-5,1,-2,1,-7,6,1,-6,-9,9,1,7,9,-3,10,-1,-10,6,-1,8,10,-7,-5,9,-2,-3,-4,-7,4,-7,-5,-1,9,9,-4,9,2,-7,9,-10,-8,3,3,4,1,6,-8,-3,4,-8,-8,4,-4,-8,7,-1,-2,7,-6,5,-2,3,7,8,7,-2,2,-6,7,7,-1,10,-7,-9,10,10,6,-4,1,-6,8,3,4,-8,1,-6,6,-8,-7,-5,2,10,1,10,-8,10,4,7,3,10,1,-10,4,-9,2,7,-1,1,3,-6,6,6,-3,8,8,-2,4,5,8,10,-10,-6,-5,5,-10,8,8,8,7,-7,-3,-2,-1,-6,1,-2,4,1,7,-7,6,-3,-1,6,-6,-3,-2,-8,3,3,-2,6,1,5,-3,4,-8,-2,7,-7,10,2,6,-4,-3,-5,-10,-1,8,2,8,9,-3,7,10,3,-5,-4,6,-3,5,-6,-9,-9,-2,-8,-4,-10,-9,-9,2,-1,-10,9,-2,-6,10,-3,10,-8,10,-7,-5,5,4,5,7,-3,10,4,-6,-9,4,-9,-4,1,3,10,4,3,9,-4,-3,-5,10,-5,10,7,7,-2,-3,5,-10,-5,10,2,6,-8,-2,-2,-10,3,2,-8,3,8,-1,-3,9,5,8,1,-3,4,9,10,-2,3,-2,-3,-9,3,5,2,8,5,7,9,-2,9,-9,-5,3,-7,9,2,-2,-1,-2,10,2,-5,1,3,9,7,3,2,-9,1,-10,7,7,-8,-3,-1,4,-6,-10,-8,-10,-8,6,1,9,-5,-4,-1,-2,-3,7,-10,8,6,4,8,9,-9,5,2,1,-3,2,7,2,1,-2,10,6,9,-8,-3,2,-1,1,1,1,-8,-7,-8,-5,-10,-9,-8,-4,4,5,-10,1,-1,7,4,-5,2,7,5,-3,10,5,7,-8,-3,8,9,-7,2,4,3,-10,5,8,-1,5,1,3,9,-8,-2,8,-8,4,8,-7,7,-7,-5,2,-6,-1,-5,6,4,6,2,9,-8,9,-1,10,-4,-10,-2,6,7,6,10,8,7,1,-10,9,-5,8,5,-4,5,-7,-6,6,10,7,-5,7,-1,-1,-1,8,9,2,4,-10,-9,7,-1,1,6,-3,-5,10,1,6,2,-9,-2,2,8,6,-10,-5,5,-10,5,9,-6,-7,-10,2,-9,-10,4,8,5,-1,6,-4,1,-1,1,-8,10,-7,-8,-4,-10,9,-8,5,-2,10,2,10,-10,-10,4,-2,-3,7,-6,10,5,9,10,-9,-10,-2,-3,-6,7,5,-5,-6,-6,10,3,-7,1,4,-1,6,1,4,10,6,7,9,-10,10,9,7,4,-2,3,-8,8,8,10,3,3,9,3,-3,4,-1,5,-7,-6,-6,5,-3,-6,2,4,-7,-7,8,6,-4,-5,5,3,-1,-1,7,-8,10,-1,9,-8,-2,-5,-4,2,-5,-3,8,-2,-4,-5,10,-1,-7,-3,-8,5,5,-2,4,8,-10,-10,6,7,-7,-9,6,-9,4,1,2,-4,7,9,10,9,-6,-10,2,-2,-10,8,-3,-10,7,-1,-7,-8,-2,6,-4,-4,5,-3,-1,-6,6,-8,-8,-5,10,-4,2,-1,-10,-8,3,7,8,-3,-4,4,10,10,2,3,-3,9,2,2,9,8,-4,10,-4,-2,1,-8,-8,10,-6,-2,-1,-4,4,-7,-6,7,-10,3,-9,2,-1,-2,9], dtype = "int16")#candidate|4595|(1365,)|const|int16
call_4593 = relay.TupleGetItem(func_3025_call(relay.reshape(const_4594.astype('uint8'), [363, 2]), relay.reshape(const_4595.astype('int16'), [15, 13, 7]), ), 3)
call_4596 = relay.TupleGetItem(func_3029_call(relay.reshape(const_4594.astype('uint8'), [363, 2]), relay.reshape(const_4595.astype('int16'), [15, 13, 7]), ), 3)
uop_4608 = relay.log(call_4593.astype('float64')) # shape=(2, 3, 9)
uop_4610 = relay.log(call_4596.astype('float64')) # shape=(2, 3, 9)
output = relay.Tuple([call_4585,const_4594,const_4595,uop_4608,])
output2 = relay.Tuple([call_4586,const_4594,const_4595,uop_4610,])
func_4614 = relay.Function([], output)
mod['func_4614'] = func_4614
mod = relay.transform.InferType()(mod)
mutated_mod['func_4614'] = func_4614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4614_call = mutated_mod.get_global_var('func_4614')
call_4615 = func_4614_call()
output = call_4615
func_4616 = relay.Function([], output)
mutated_mod['func_4616'] = func_4616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3775_call = mod.get_global_var('func_3775')
func_3777_call = mutated_mod.get_global_var('func_3777')
call_4644 = relay.TupleGetItem(func_3775_call(), 0)
call_4645 = relay.TupleGetItem(func_3777_call(), 0)
output = relay.Tuple([call_4644,])
output2 = relay.Tuple([call_4645,])
func_4652 = relay.Function([], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
output = func_4652()
func_4653 = relay.Function([], output)
mutated_mod['func_4653'] = func_4653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_4697 = func_3652_call()
call_4698 = func_3652_call()
output = relay.Tuple([call_4697,])
output2 = relay.Tuple([call_4698,])
func_4707 = relay.Function([], output)
mod['func_4707'] = func_4707
mod = relay.transform.InferType()(mod)
output = func_4707()
func_4708 = relay.Function([], output)
mutated_mod['func_4708'] = func_4708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4614_call = mod.get_global_var('func_4614')
func_4616_call = mutated_mod.get_global_var('func_4616')
call_4788 = relay.TupleGetItem(func_4614_call(), 0)
call_4789 = relay.TupleGetItem(func_4616_call(), 0)
const_4792 = relay.const([[[-5.557876,-4.855478,2.592435,4.239325,8.048578,2.013236,4.520348,7.759422,-6.829047],[-0.194352,-2.875806,-7.337859,-4.031601,8.977201,8.027362,-1.004540,-9.636021,-0.310898],[9.834237,-5.614363,4.342163,-1.601214,-4.916020,5.914282,8.595175,0.057741,0.668782]],[[1.905184,2.538295,-2.786406,9.929112,-8.390886,9.149161,-8.405755,-6.320985,8.938142],[-0.872243,-7.155444,4.190196,3.674337,2.813150,8.279451,3.319548,-3.635181,4.055380],[9.717911,-9.817576,-8.572649,3.353111,-4.885649,-4.182262,0.302055,3.226609,0.489274]]], dtype = "float32")#candidate|4792|(2, 3, 9)|const|float32
bop_4793 = relay.divide(call_4788.astype('float64'), relay.reshape(const_4792.astype('float64'), relay.shape_of(call_4788))) # shape=(2, 3, 9)
bop_4796 = relay.divide(call_4789.astype('float64'), relay.reshape(const_4792.astype('float64'), relay.shape_of(call_4789))) # shape=(2, 3, 9)
func_4398_call = mod.get_global_var('func_4398')
func_4405_call = mutated_mod.get_global_var('func_4405')
var_4803 = relay.var("var_4803", dtype = "bool", shape = (2, 252))#candidate|4803|(2, 252)|var|bool
var_4804 = relay.var("var_4804", dtype = "int16", shape = (1365, 1))#candidate|4804|(1365, 1)|var|int16
const_4805 = relay.const([-7.023981,-8.599840,8.864742,5.384355,-4.126079,7.416058,-8.826991,-6.622811,5.564066,6.245280,4.999789,-6.278004,0.166471,-7.495124,-5.899014,6.935446,9.717408,9.254681,-7.540329,0.091173,8.008103,-8.171521,-9.559642,-2.767124,4.065417,-4.154050,8.778876,8.225017,-1.564226,-0.073740,1.813158,4.217076,3.970474,-5.566048,9.963374,0.982565,-5.590556,-4.543484,-2.380652,1.273000,5.912107,-3.225950,-0.910101,0.878722,2.054572,9.496701,-2.846899,-9.016386,5.857779,4.454411,-3.354569,2.105069,-7.201712,-0.127141,-5.314144,3.705964,9.244128,1.633292,0.214635,-7.696650,-2.847433,6.112580,-0.463381,-0.457349,-1.145706,-7.891008,-5.209574,-7.398071,-4.984551,1.855259,-8.462483,-3.630722,-0.762868,5.169403,-8.585372,5.523208,3.590436,1.610529,-1.249308,-7.138896,4.183356,0.900255,-7.884468,4.372958,-8.348211,-2.870141,9.263112,-9.121804,-8.270406,7.735789,8.770874,4.203580,5.058453,-4.474312,-0.115512,9.442158,-0.708836,-0.957946,-2.003275,7.921436,-6.934408,8.145903,-9.724497,-1.687034,7.436059,0.017506,-2.368331,5.341788,-3.666807,4.234423,-8.717395,-7.463012,0.289701,-2.157503,-3.288877,0.397221,2.938774,-5.794126,-9.540266,-8.740357,-5.857755,3.441474,-1.602909,1.674168,-1.699073,6.478279,6.038723,5.567276,-1.549104,-3.398725,5.126766,-0.698570,-9.325977,-3.929691,6.162096,-0.084142,9.756966,-0.675519,-4.211272,-3.167551,-4.725210,-5.600916,3.157964,-8.766930,3.451198,8.721880,-0.123503,2.765991,-4.471894,-5.956577,-6.802559,-8.539128,-8.941673,7.722448,-5.291004,0.993909,8.935283,-9.238697,-8.878007,3.119886,5.850879,-4.845879,-6.419809,-1.685061,-8.128593,-6.456800,9.755260,-5.869149,2.546992,-6.782200,8.302851,-9.371270,0.596785,5.444804,2.265241,7.052697,0.966868,3.717749,2.476229,7.159190,-4.533573,-1.285183,-4.704154,4.010031,-1.672886,5.982876,9.894002,6.239561,-2.166497,-6.445916,4.752806,-8.679526,-4.436075,-7.237796,1.876295,9.227783,5.596397,6.161574,-5.503108,8.543028,-9.525409,-2.260772,-6.975226,1.464835,-8.265133,-0.782581,6.143838,0.191773,-2.649345,-7.204842,0.479143,1.343751,1.944007,-8.891588,4.074447,6.021754,-6.574057,-7.938905,4.264743,6.977988,1.360323,0.819110,-7.647750,-9.270865,-2.169583,-8.435637,-7.224699,-0.537234,-2.552015,8.350024,-9.285763,5.516477,-2.685334,9.786224,7.005022,-6.355114,-0.657643,-3.808723,-5.932726,-3.670837,5.093823,-3.652391,-7.813715,4.976562,8.876734,4.796639,3.566368,-1.508519,-1.376483,2.964258,-2.979854,-0.384452,9.284587,4.015966,-0.992899,-5.216365,-5.747355,4.063743,6.408168,2.584635,-1.540512,-5.729016,8.295092,0.646914,-4.024986,-0.733588,-5.987926,-0.390779,4.671559,2.092653,4.806883,3.960496,-5.524360,-5.161299,8.211568,-6.257667,-1.270499,-0.908759,6.555026,9.619415,-0.817521,-2.782903,0.822731,9.706025,-1.025425,-3.380645,-7.491234,0.441340,-7.982541,3.250956,4.625926,7.639151,-3.918693,-8.054792,-6.411721,-5.012812,8.447461,4.822325,5.560154,7.395613,-6.755165,5.651762,7.920501,0.301662,-5.879352,2.511238,7.582977,-1.498709,-9.911227,6.805462,-4.909772,-4.345935,3.312028,-5.668798,-1.291199,-8.790779,0.392118,8.062601,2.069924,0.208056,4.239866,0.084780,1.267912,4.591258,-3.122450,-1.810174,-3.282126,-2.474561,4.139360,-7.774559,-2.310417,-6.705906,-3.086237,-3.361421,-1.015117,5.855742,0.570751,-3.393900,-8.735135,-7.180657,1.849971,-7.959173,0.742294,7.312414,2.654622,-1.337918,-6.941761,-9.980781,3.229442,-3.012003,-7.316662,7.171970,4.746141,-7.132172,6.937278,-9.035959,-8.203111,-0.891896,-4.491786,-5.564016,9.318554,9.641518,5.350972,-0.290907,5.101475,-5.145148,2.026487,3.435602,-8.966524,-0.170710,-0.873135,-6.055669,2.507372,8.440440,-7.503382,-4.858344,-2.380876,5.535726,4.602914,-9.340151,4.280761,-3.696459,6.418601,1.338313,5.893274,2.514182,-1.632621,-0.646674,2.388947,3.181739,5.636742,9.079482,-0.854380,5.854446,1.435271,-7.304840,9.350472,2.894118,-4.535917,-1.922508,-1.485435,2.266727,3.899887,6.168827,6.952792,-2.916592,-3.200310,8.205468,-9.245921,-3.751924,-8.645596,-3.809868,7.159385,-5.662218,-7.269427,5.321925,2.100007,-1.150761,5.088012,8.525779,-1.903715,7.186652,9.302776,8.709238,-2.888435,8.520104,-5.151580,-1.357382,1.912558,4.832514,0.692060,0.768913,-3.863429,1.035517,4.967376,-4.400676,-1.304679,-2.176237,-2.822336,3.447005,4.746473,-6.320913,6.384529,7.542689,3.651196,-1.772729,5.002451,8.449029,5.365943,5.770568,7.117623,8.332794,-8.164910,-0.561129,3.028220,2.665985,-4.562821,9.167016,-1.285904,9.307113,4.528357,-7.396938,8.677095,-0.099684,-4.082098,4.513766,-3.939744,4.901384,-0.423140,8.591910,8.381027,-7.429572,-2.138455,3.057535,-9.783569,3.600614,8.827760,-0.151487,0.681458,8.539598,1.698223,-6.927177,6.820391,-8.609607,8.332129,-2.282104,-9.607218,-5.407519,-3.544689,8.706739,-9.849673,-2.366701,-0.865405,-4.660293,-5.571087,0.233770,-0.113280,2.017220,9.967531,6.291314,7.513310,4.869118,-2.725517,6.436355,-8.651094,9.552165,4.152775,-4.825892,8.423150,5.355425,-6.977916,5.831890,-8.738390,6.264688,-8.821460,-7.056610,-0.917174,4.476723,-3.866244,4.331885,2.772688,5.731909,-6.347026,-6.153320,1.898340,6.973936,-8.630084,-4.876051,1.102753,-6.238778,3.950868,-3.563960,-3.474298,-2.331155,-1.453073,5.988925,3.492541,-7.162463,-8.798567,6.906960,-9.146017,-3.529254,3.805169,-4.539596,-7.049938,-7.209285,8.070636,3.088147,-2.980772,-1.379919,0.974336,-4.676001,8.316394,-7.289739,4.905080,5.185082,3.564324,-0.461163,-5.571233,3.576629,9.270332,-2.218220,-8.939541,-1.580498,-2.433667,0.797718,5.734317,-8.495299,-1.026092,-8.357036,-4.223690,-0.438902,4.742750,-9.046892,1.369078,-9.209072,0.667832,7.475963,-9.106137,-0.846773,0.717784,-5.790027,7.128558,5.717847,-9.667302,5.025176,3.698613,-2.716130,-9.323954,-8.403539,-6.513123,-7.908620,-7.699129,-1.097411,6.983473,6.757037,-5.506760,0.435709,-9.301454,-0.024405,8.919450,5.719950,6.892248,3.002486,-8.018384,8.097177,1.643645,-2.133454,6.357393,-3.075430,6.238618,8.309304,-8.052866,1.123548,1.853743,5.490810,8.493261,6.411289,-4.603442,-2.478359,7.864008,4.893297,0.904460,-2.572251,-1.892005,3.125425,-5.590832,-4.162167,-5.099051,4.509049,8.049354,-9.108098,8.930127,4.313899,-4.216911,-4.482851,0.561530,-2.621402,7.825591,6.844168,-3.311736,0.652446,-2.688152,0.893173,6.311211,-1.140567,1.641558,3.657334,7.924770,-1.287383,-0.426400,5.513904,-3.894277,-9.309990,-7.836237,-7.198514,-3.591937,7.918590,4.824116,2.100596,7.884211,0.434546,-2.724453,1.963519,7.003292,-4.642454,-0.112364,1.138051,8.249328,-8.691023,0.302345,-4.077970,-2.111108,-9.573331,-1.920855,-6.342004,-1.910785,-0.257248,-4.036570,-5.356878,1.021008,1.018333,-4.423808,4.016445,-2.926848,4.036406,-9.075462,4.805561,8.590931,-5.360781,-5.909111,4.698184,-7.978521,7.819942,7.127333,-0.138276,-2.140442,-3.805940,-5.718172,7.443132,1.557243,-2.693366,-3.255774,-1.151355,-4.178181,-5.401945,4.171109,0.666919,5.601534,-0.582040,-5.802421,-7.995606,-7.710285,3.182691,-2.479625,9.731091,5.610991,2.710132,6.797444,2.576209,-8.904192,-0.338185,9.058888,9.681037,2.208307,6.448626,-5.345865,-5.729118,-1.508282,5.236265,-5.822878,-5.965147,-3.647910,-5.960283,2.951803,9.224914,4.508501,2.045653,2.731839,6.852092,-8.079920,-1.504697,-5.483469,8.771719,-4.694732,3.754472,7.545600,-4.236103,8.786471,2.464500,-9.187617,-8.791399,2.145382,-3.274018,-7.903444,8.732189,-6.368915,3.363089,-4.163933,3.672852,3.555326,-7.690965,-4.610706,2.600018,9.075984,-7.387404,5.253954,6.891091,-4.700720,-7.828100,7.908854,5.446505,4.799218,9.290061,0.292533,0.475657,4.739861,2.391166,-0.118240,-1.580427,-5.402065,-9.036076,5.676758,-8.532867,4.007705,7.207331,-2.278140,4.953954,6.876071,9.718438,1.455916,-7.148887,-1.599524,4.385124,-6.785561,-9.568308,-5.843497,-3.014428,-2.365399,-6.041089,1.785455,2.866164,-3.425947,-4.738015,6.001452,6.505816,-3.081750,3.552735,1.296663,8.537588,-5.267885,-2.992419,-8.635052,3.436705,7.007799,9.340798,6.446648,-7.613349,3.477332,7.649276,3.326192,7.244148,-7.674234,-6.425502,5.135064,5.872232,-2.301712,8.607231,8.164730,6.148005,-4.454104,2.117132,7.703257,1.397139,-3.910209,8.187125,9.655867,1.228631,-8.802485,-1.831765,-8.526028,6.113305,6.429837,0.331699,9.737246,-7.189504,3.830734,2.337874,8.677021,1.306441,-1.731450,7.689467,-3.657691,4.441177,1.754480,-8.773151,-7.591880,-1.761135,-8.575612,-0.096940,-6.882793,2.050404,-8.652085,7.004645,-9.281434,-1.073345,4.938272,-7.034730,-8.358812,-0.853462,0.708688,3.983905,6.327148,-4.100112,-7.602512,3.770850,8.180537,-6.166280,-6.524569,9.659202,1.666134,3.998929,-5.072257,-1.707228,0.526083,-6.790504,7.773315,-7.684262,1.826443,5.518331,2.118354,-6.878692,3.498855,0.308817,-5.528998,-4.520715,-3.738304,0.592584,-9.468028,3.001193], dtype = "float32")#candidate|4805|(900,)|const|float32
var_4806 = relay.var("var_4806", dtype = "uint8", shape = (11, 66))#candidate|4806|(11, 66)|var|uint8
call_4802 = relay.TupleGetItem(func_4398_call(relay.reshape(var_4803.astype('bool'), [504,]), relay.reshape(var_4804.astype('int16'), [7, 195]), relay.reshape(const_4805.astype('float32'), [900,]), relay.reshape(var_4806.astype('uint8'), [11, 66]), relay.reshape(var_4806.astype('uint8'), [11, 66]), ), 5)
call_4807 = relay.TupleGetItem(func_4405_call(relay.reshape(var_4803.astype('bool'), [504,]), relay.reshape(var_4804.astype('int16'), [7, 195]), relay.reshape(const_4805.astype('float32'), [900,]), relay.reshape(var_4806.astype('uint8'), [11, 66]), relay.reshape(var_4806.astype('uint8'), [11, 66]), ), 5)
output = relay.Tuple([bop_4793,call_4802,var_4803,var_4804,const_4805,var_4806,])
output2 = relay.Tuple([bop_4796,call_4807,var_4803,var_4804,const_4805,var_4806,])
func_4808 = relay.Function([var_4803,var_4804,var_4806,], output)
mod['func_4808'] = func_4808
mod = relay.transform.InferType()(mod)
mutated_mod['func_4808'] = func_4808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mutated_mod.get_global_var('func_4808')
var_4810 = relay.var("var_4810", dtype = "bool", shape = (2, 252))#candidate|4810|(2, 252)|var|bool
var_4811 = relay.var("var_4811", dtype = "int16", shape = (1365, 1))#candidate|4811|(1365, 1)|var|int16
var_4812 = relay.var("var_4812", dtype = "uint8", shape = (11, 66))#candidate|4812|(11, 66)|var|uint8
call_4809 = func_4808_call(var_4810,var_4811,var_4812,)
output = call_4809
func_4813 = relay.Function([var_4810,var_4811,var_4812,], output)
mutated_mod['func_4813'] = func_4813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3328_call = mutated_mod.get_global_var('func_3328')
call_4977 = relay.TupleGetItem(func_3327_call(), 0)
call_4978 = relay.TupleGetItem(func_3328_call(), 0)
func_4096_call = mod.get_global_var('func_4096')
func_4103_call = mutated_mod.get_global_var('func_4103')
const_4983 = relay.const([-6,4,5,-8,-9,2,2,9,5,9,1,-9,-1,-9,5,-9,-2,-9,-10,-3,-2,4,-2,-4,-2,-1,2,7,1,4,-4,8,-7,-3,6,5,-3,-1,-3,-2,-10,9,6,-7,4,4,-4,5,9,-8,4,-4,4,1,-2,4,9,6,-1,-10,-2,-4,7,8,7,-3,-9,9,-2,-5,-5,-6,4,8,5,-2,-4,-5,-6,-9,7,6,-8,-3,5,-5,-7,-5,-5,6,-10,-8,7,-7,4,-5,-5,1,6,-4,-4,-3,1,1,10,-5,8,-7,7,-7,8,-6,-3,-8,2,3,-2,8,2,-9,-9,-3,10,-1,3,-1,-7,8,5,2,10,5,2,7,-3,8,-3,-8,-2,1,4,-8,9,5,-2,3,-4,5,-2,-10,1,6,9,-8,-2,6,-2,-10,-2,9,4,7,-10,2,9,6,1,5,-7,-1,-3,-8,-5,10,-3,-1,-8,-5,-5,10,-10,-3,10,1,10,-10,-2,9,-9,5,7,1,6,-6,2,4,-4,-2,-4,6,6,-8,6,-6,-8,9,6,-3,-3,-5,6,-6,8,-7,-9,-6,-10,-3,-6,1,9,1,7,8,-6,-6,4,-3,8,-3,-2,3,-7,-8,5,-9,9,-10,8,10,-2,-4,-6,7,8,2,2,2,4,-2,-1,-5,-3,-1,-4,-2,-5,5,5,5,5,-3,-5,-6,-7,7,-1,2,-7,2,-2,-2,-3,8,10,-1,-5,1,1,6,-10,-10,5,-5,-3,-6,3,3,4,6,-9,8,-3,-1,-8,6,9,-9,8,-7,-2,7,10,3,-3,9,-6,-3,7,3,2,5,5,-6,-9,3,7,-9,10,-2,-3,-3,9,7,-4,1,-2,-7,-2,10,-9,5,3,-4,7,5,10,-10,8,3,2,7,-2,-2,9,-6,-7,4,-6,-4,-8,-5,-9,-5,4,8,-4,1,9,-10,7,5,-8,5,-1,7,10,-8,-8,-7,-3,-2,9,-4,-9,7,2,-4,-2,6,-10,1,-6,-10,-3,9,-1,2,-4,-8,-1,-1,-6,-5,3,-10,-4,-4,1,5,8,-10,4,-9,-8,-3,10,2,-8,4,8,-6,-8,-3,4,-5,-1,-1,6,-3,-5,-3,-10,-2,-4,2,2,-6,-8,-9,6,-5,8,-2,-4,-7,1,3,-7,-2,1,2,-1,2,-7,4,-5,-10,2,7,9,6,-6,-1,-6,-1,-6,10,3,-9,-5,4,9,-4,6,-9,-7,-4,6,5,10,-8,-1,4,-2,-4,3,8,-2,6,-6,-2,2,6,-3,9,-9,10,7,3,6,-8,-5,-2,1,-4,3,-1,-4,-4,-10,-10,1,-8,-3,-8,10,7,-2,-4,-9,1], dtype = "uint8")#candidate|4983|(512,)|const|uint8
var_4984 = relay.var("var_4984", dtype = "bool", shape = (6, 84))#candidate|4984|(6, 84)|var|bool
const_4985 = relay.const([-7,-2,-5,-7,3,-6,9,9,-5,7,6,-8,7,-7,-6,-6,5,-9,2,5,-8,-6,-1,2,-8,3,-6,-8,7,-9,-4,-5,2,-1,-2,2,9,6,5,-6,-9,-4,2,-8,-9,-3,2,4,-5,-10,3,-6,10,-4,10,-7,-1,-3,-2,5,10,8,7,7,7,9,-1,-4,-9,-7,8,-1,4,-3,7,-10,7,8,-2,-6,-4,10,-3,8,3,-4,-9,2,-9,2,5,2,1,-4,6,-3,8,-10,6,-5,-5,-1,-4,-10,8,-8,5,2,9,-9,9,-7,-5,-8,-7,1,-3,-6,5,-9,-9,5,4,-10,-7,-2,-10,3,-8,-6,7,-4,-10,-5,-8,8,-1,1,-4,10,9,10,-3,-5,-6,-3,-10,1,-9,3,-3,5,5,1,5,1,-5,5,3,-6,-3,-4,-6,-3,5,10,-8,-2,-1,4,-4,1,-5,-5,6,-1,-10,2,-2,-9,-2,5,-6,-2,-9,2,-1,-5,9,9,3,4,5,-7,2,3,7,-1,4,7,-10,-9,1,-9,3,-6,8,-8,-6,1,3,10,-10,10,-6,7,7,1,9,-10,10,7,-6,2,-1,9,-6,3,-2,2,-1,8,-7,8,10,8,-4,9,-1,-1,5,6,1,-9,-4,2,4,-5,-10,-6,-1,-4,1,-4,-6,5,-4,-7,2,-7,9,-4,-3,5,-4,-6,7,-9,-3,1,5,-5,6,-4,-7,9,-2,10,-3,-1,-6,-9,8,1,8,-5,5,4,1,2,-10,-4,3,10,-7,-3,1,-5,-10,2,-8,3,-6,-7,-6,5,-1,2,2,-1,4,-3,-6,4,7,-5,5,-10,-6,8,-5,2,1,-1,-6,2,-4,7,-5,7,-10,-9,-2,-6,4,-2,6,-7,8,9,-10,-5,8,-6,6,-7,6,9,-2,8,-8,9,6,2,3,9,-2,10,8,-5,1,-9,7,-7,-3,-7,5,9,-1,3,-10,-7,-9,-4,-5,1,10,-5,8,-6,-4,5,8,-9,3,-2,6,-9,8,-10,-4,-1,1,-1,-5,-1,1,-8,-10,-9,1,-7,-3,-2,10,6,-4,-8,10,-5,8,3,4,2,8,-4,-3,6,5,-6,9,-9,-6,8,-8,-10,9,-8,5,-6,1,2,10,7,5,2,-3,6,10,7,9,4,1,2,4,-6,7,-9,5,4,-9,-5,9,-4,-7,7,-8,-5,-5,-2,-4,-3,8,8,8,-5,-10,9,-2,-10,-4,5,10,-1,-7,-5,3,2,10,7,3,6,2,3,-10,5,10,8,-1,4,-1,-1,-6,6,-2,-7,6,-6,-9,-4,-4,5,-10,3,-1,1,5,-6,2,9,4,-9,-9,9,-6,7,4,3,4,-5,-10,-6,-6,-7,4,-2,-2,-1,6,9,2,1,7,-10,-7,-7,-9,3,7,4,6,2,-9,-2,-2,6,-6,-10,10,-5,4,5,5,9,-9,-3,-2,-4,-7,-5,-7,3,-9,-8,2,7,7,9,1,-4,-4,-5,4,-7,-6,-10,-3,-8,-7,-1,-4,-6,10,3,-7,2,-5,-8,-6,10,9,-7,-6,-5,5,-3,-6,-8,-6,10,9,7,-6,-3,-1,-6,-4,3,10,-2,-5,4,5,10,4,-7,3,-6,-10,-3,1,-3,2,2,3,-9,-10,4,6,9,5,2,9,-6,7,1,-1,-1,-10,7,9,-4,8,4,-1,3,-8,-3,-4,-7,-2,-9,3,-6,-4,-6,8,4,9,7,1,-5,6,8,-1,-3,3,4,1,-1,-2,10,9,3,1,8,-3,-1,-3,10,-3,-6,6,-4,-1,-4,4,-2,-9,8,8,-2,-1,1,1,9,-6,-10,-7,1,-1,-5,-10,-5,4,9,-1,5,3,5,9,7,9,10,-6,-7,4,10,-9,-3,2,8,-2,-5,-1,10,-6,-7,-8,4,6,9,-1,5,7,4,-9,-3,7,9,-10,-8,-8,3,2,10,-9,7,1,2,2,-5,10,4,-8,5,-2,6,8,7,-9,7,9,9,-7,-8,-9,-10,3,-8,6,10,-8,9,-8,-5,5,-6,-5,-2,4,-3,-5,3,6,-8,7,-2,6,1,8,-2,8,-5,1,-7,-9,9,3,1,-5,6,7,-7,1,-7,-3,-2,-7,6,-8,4,-5,-1,-6,2,1,5,5,-3,1,-5,-10,-7,-8,4,8,-3,-2,-5,-7,2,-2,8,-3,6,-10,8,10,9,-10,3,-3,-5,9,3,-5,-3,-4,-8,1,-10,-5,-3,6,2,-6,-6,-9,4,-10,-3,-2,4,7,-2,6,-9,10,5,-5,4,1,-10,2,10,1,-7,-2,-10,4,9,-3,8,-2,1,-9,-9,-4,1,-5,8,-4,10,9,-7,1,1,-4,-9,-4,-6,-5,5,7,7,-7,-7,-1,9,6,-3,1,3,6,6,2,5,8,-9,6,-7,3,3,1,-6,-7,-6,-6,6,2,-2,-3,-4,-6,5,8,-4,6,-7,-1,-5,-3,-9,-1,10,6,-8,10,-9,4,8,-6,7,2,-6,-8,-1,2,-1,-4,8,5,-8,-9,-3,1,-9,6,6,9,-10,4,1,3,3,-4,-9,7,6,-6,-1,10,3,-5,3,4,-4,-9,6,-6,1,-10,-1,-8,4,-5,3,4,-1,-7,-4,10,-1,2,10,8,8,-2,4,-5,5,1,5,-4,-6,-1,-5,-10,-1,-6,10,4,2,8,-9,-2,3,2,3,-4,-8,1,7,10,4,1,-9,-2,1,5,-3,4,-4,-1,2,-6,-10,6,8,7,1,4,1,1,5,3,4,-3,-4,5,-2,10,8,1,-3,6,4,-4,-7,10,2,10,-1,-4,7,-4,-10,3,10,4,2,-7,-1,5,7,-9,-7,5,-2,-4,10,-2,-2,-10,8,-6,-5,9,6,-5,-7,4,-5,-3,-9,10,5,-2,4,9,-8,-4,-2,3,9,2,2,2,-6,6,2,-7,-7,-3,-10,5,-1,-5,6,-2,-5,10,2,-7,-9,-6,-1,9,1,-9,6,3,4,10,-5,4,-9,-9,8,-1,-1,9,9,9,10,1,3,3,1,9,8,-5,-10,7,-10,-5,5,-4,2,2,-1,-7,-8,-4,-4,4,8,8,-4,6,-3,-7,-6,3,-4,9,-10,2,5,-7,-10,-2,2,6,6,2,-4,-10,-1,10,7,-3,-4,-7,10,9,-6,-8,-2,6,8,-1,-6,7,-3,-5,4,9,10,6,-1,9,7,-8,6,1,2,10,-1,7,2,8,7,-6,5,-8,9,6,7,-7,9,-8,-7,1,3,-6,2,-3,-1,-8,10,-3,-3,7,4,-4,-1,6,-1,8,6,1,7,-7,-4,7,10,5,10,5,5,6,4,-5,-8,-8,-10,10,-4,8,-3,2,-2,9,10,-5,-5,-2,-5,-3,4,7,2,-1,-6,4,1,-3,4,6,-5,-10,6,-1,-1,-5,-8,8,2,6,-8,7,6,-4,-1,-6,-3,-9,8,-9,-4,5,7,-2,5,-8,8,-2,-7,-9,-7,7,1,1,5,10,6,-3,-3,1,5,-8,-7,9,7,2,-3,5,4,5,8,1,5,7,9,3,-9,8,3,8,7,5,-7,-4], dtype = "int16")#candidate|4985|(1365,)|const|int16
var_4986 = relay.var("var_4986", dtype = "float32", shape = (9, 100))#candidate|4986|(9, 100)|var|float32
const_4987 = relay.const([-2,10,-6,-5,8,-3,8,-2,6,3,7,-3,-6,-8,-8,1,3,-5,8,-4,-9,7,-6,-4,-4,8,-9,-10,7,-3,-1,5,6,3,-10,-2,-5,-8,-10,5,-9,7,5,-7,5,9,4,4,-4,6,5,4,-9,-2,5,4,10,4,-9,2,-10,-4,5,-4,4,-4,8,-10,8,-5,-7,9,-10,-5,-5,-5,-7,7,6,2,3,-8,4,7,9,-7,3,-6,-10,-4,-7,9,-7,-8,2,-2,6,6,-9,1,7,6,5,-4,6,-1,-6,-9,-1,-5,-8,5,-6,-3,-6,-5,-4,4,5,-4,8,6,-8,-7,1,-1,7,-3,9,-8,-4,-9,-5,8,2,3,-9,-4,-3,5,10,-4,-4,-2,7,-9,4,-9,-2,9,9,4,10,-7,10,10,10,7,-3,6,-10,10,2,2,-4,-5,-2,3,10,6,3,-8,-10,-6,7,-2,4,10,9,7,-1,-8,-5,7,-4,3,-9,-10,-9,1,-8,-2,6,10,2,-1,-4,-7,2,4,7,5,2,6,-2,7,1,-6,-9,-2,-4,5,-2,6,-6,-3,-10,10,4,3,-4,-7,10,-2,10,4,-9,-1,-3,6,-9,-4,-7,-3,2,-6,8,1,-7,-1,-9,10,-3,-8,1,-8,2,1,8,-8,-2,7,8,-10,-1,1,-5,5,-3,6,6,4,6,9,1,-6,-2,5,-1,6,-5,1,9,1,10,7,3,-5,-9,5,-2,3,4,-5,-2,-6,-9,10,-4,3,8,9,1,2,-8,8,-8,1,10,6,8,-10,10,8,-10,-9,1,2,1,10,1,-7,-2,2,6,-5,-3,-3,6,8,-4,-6,2,-5,-4,-4,4,5,-2,7,6,-4,8,1,-1,-9,3,-10,-5,-1,9,-3,5,-10,-4,6,-10,8,-10,-1,7,7,-9,-6,9,5,-3,2,8,-6,10,4,-2,7,1,-4,10,-8,-6,5,-2,-7,9,-4,3,9,9,3,-6,-5,8,5,1,-9,8,4,4,-6,1,10,-9,7,-2,1,-9,-3,4,-7,1,-1,1,2,9,8,9,3,-7,-6,-1,5,3,-8,-7,-3,-2,1,2,-9,-3,-10,-7,10,5,10,-3,5,4,5,8,-2,-2,6,-6,4,1,2,9,1,8,-8,-8,-6,-6,-6,9,-5,-10,-7,-5,6,7,6,-9,-9,-10,-7,10,3,-6,-10,-10,6,-7,8,3,10,3,-5,-2,-1,-3,-3,6,1,-8,7,-8,-7,5,7,-1,-8,-4,9,7,-10,-2,5,10,10,-7,-5,-9,9,8,-9,-6,3,10,-6,6,7,-1,-4,8,-9,10,-9,-6,10,-6,-3,6,2,10,4,4,-1,-6,7,2,7,10,10,6,-10,-1,-5,-8,6,5,-5,-1,-5,3,1,10,9,5,7,-1,4,-9,2,7,9,-8,-10,-1,8,-9,-1,-8,-8,-10,-4,2,-3,-8,2,3,-5,6,-9,-2,-10,3,-1,-2,4,6,10,-8,10,-10,-9,-6,1,4,6,7,9,9,-1,-1,-2,-4,4,7,-8,-10,9,3,-5,-10,-5,1,8,-3,3,-5,10,9,-1,-10,5,-8,-4,-4,10,-4,-2,-8,-4,-9,-5,-2,-6,-1,-7,-8,10,7,-6,7,-7,-8,5,-1,-7,8,7,-10,-10,3,-1,2,-6,-5,1,6,-2,-1,2,-6,4,-4,-3,-5,-3,-2,9,6,-4,8,5,-7,10,-2,10,3,3,5,2,-8,-10,1,-6,-5,-8,-8,-6,-9,-3,-1,10,-6,-3,-6,-3,-10,-7,-2,-6,5,-9,8,-10,-4,-10,5,-10,3,-10,-6,5,5,7,-7,4,8,7,-1,-4,9,1,-4,-2,4,-7,-6,8,-6,-9,-9,-7,6,-4,-10,-3,4,2,7,-6,8,3], dtype = "uint8")#candidate|4987|(726,)|const|uint8
call_4982 = relay.TupleGetItem(func_4096_call(relay.reshape(const_4983.astype('uint8'), [16, 2, 16]), relay.reshape(const_4983.astype('uint8'), [16, 2, 16]), relay.reshape(var_4984.astype('bool'), [504,]), relay.reshape(const_4985.astype('int16'), [1365,]), relay.reshape(var_4986.astype('float32'), [90, 10]), relay.reshape(const_4987.astype('uint8'), [726,]), ), 4)
call_4988 = relay.TupleGetItem(func_4103_call(relay.reshape(const_4983.astype('uint8'), [16, 2, 16]), relay.reshape(const_4983.astype('uint8'), [16, 2, 16]), relay.reshape(var_4984.astype('bool'), [504,]), relay.reshape(const_4985.astype('int16'), [1365,]), relay.reshape(var_4986.astype('float32'), [90, 10]), relay.reshape(const_4987.astype('uint8'), [726,]), ), 4)
uop_5000 = relay.log(const_4987.astype('float64')) # shape=(726,)
bop_5006 = relay.not_equal(uop_5000.astype('bool'), relay.reshape(const_4987.astype('bool'), relay.shape_of(uop_5000))) # shape=(726,)
output = relay.Tuple([call_4977,call_4982,const_4983,var_4984,const_4985,var_4986,bop_5006,])
output2 = relay.Tuple([call_4978,call_4988,const_4983,var_4984,const_4985,var_4986,bop_5006,])
func_5010 = relay.Function([var_4984,var_4986,], output)
mod['func_5010'] = func_5010
mod = relay.transform.InferType()(mod)
mutated_mod['func_5010'] = func_5010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mutated_mod.get_global_var('func_5010')
var_5012 = relay.var("var_5012", dtype = "bool", shape = (6, 84))#candidate|5012|(6, 84)|var|bool
var_5013 = relay.var("var_5013", dtype = "float32", shape = (9, 100))#candidate|5013|(9, 100)|var|float32
call_5011 = func_5010_call(var_5012,var_5013,)
output = call_5011
func_5014 = relay.Function([var_5012,var_5013,], output)
mutated_mod['func_5014'] = func_5014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3263_call = mod.get_global_var('func_3263')
func_3265_call = mutated_mod.get_global_var('func_3265')
call_5075 = func_3263_call()
call_5076 = func_3263_call()
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_5082 = func_2717_call()
call_5083 = func_2717_call()
output = relay.Tuple([call_5075,call_5082,])
output2 = relay.Tuple([call_5076,call_5083,])
func_5092 = relay.Function([], output)
mod['func_5092'] = func_5092
mod = relay.transform.InferType()(mod)
output = func_5092()
func_5093 = relay.Function([], output)
mutated_mod['func_5093'] = func_5093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_5123 = relay.TupleGetItem(func_2971_call(), 0)
call_5124 = relay.TupleGetItem(func_2973_call(), 0)
output = call_5123
output2 = call_5124
func_5138 = relay.Function([], output)
mod['func_5138'] = func_5138
mod = relay.transform.InferType()(mod)
mutated_mod['func_5138'] = func_5138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5138_call = mutated_mod.get_global_var('func_5138')
call_5139 = func_5138_call()
output = call_5139
func_5140 = relay.Function([], output)
mutated_mod['func_5140'] = func_5140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5158 = relay.var("var_5158", dtype = "bool", shape = ())#candidate|5158|()|var|bool
var_5159 = relay.var("var_5159", dtype = "bool", shape = (9, 7, 11))#candidate|5159|(9, 7, 11)|var|bool
bop_5160 = relay.logical_and(var_5158.astype('bool'), var_5159.astype('bool')) # shape=(9, 7, 11)
output = relay.Tuple([bop_5160,])
output2 = relay.Tuple([bop_5160,])
func_5167 = relay.Function([var_5158,var_5159,], output)
mod['func_5167'] = func_5167
mod = relay.transform.InferType()(mod)
mutated_mod['func_5167'] = func_5167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5167_call = mutated_mod.get_global_var('func_5167')
var_5169 = relay.var("var_5169", dtype = "bool", shape = ())#candidate|5169|()|var|bool
var_5170 = relay.var("var_5170", dtype = "bool", shape = (9, 7, 11))#candidate|5170|(9, 7, 11)|var|bool
call_5168 = func_5167_call(var_5169,var_5170,)
output = call_5168
func_5171 = relay.Function([var_5169,var_5170,], output)
mutated_mod['func_5171'] = func_5171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4614_call = mod.get_global_var('func_4614')
func_4616_call = mutated_mod.get_global_var('func_4616')
call_5233 = relay.TupleGetItem(func_4614_call(), 1)
call_5234 = relay.TupleGetItem(func_4616_call(), 1)
output = relay.Tuple([call_5233,])
output2 = relay.Tuple([call_5234,])
func_5242 = relay.Function([], output)
mod['func_5242'] = func_5242
mod = relay.transform.InferType()(mod)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5242_call = mutated_mod.get_global_var('func_5242')
call_5243 = func_5242_call()
output = call_5243
func_5244 = relay.Function([], output)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_5251 = relay.TupleGetItem(func_3231_call(), 1)
call_5252 = relay.TupleGetItem(func_3232_call(), 1)
const_5266 = relay.const([[[False,False,False,False,True,False,False,True,True],[False,False,False,True,False,True,False,False,True],[False,True,False,False,False,False,False,True,False]],[[False,False,True,False,False,True,False,True,True],[True,True,False,False,False,False,False,True,False],[True,True,True,False,True,False,True,True,True]]], dtype = "bool")#candidate|5266|(2, 3, 9)|const|bool
bop_5267 = relay.greater(call_5251.astype('bool'), relay.reshape(const_5266.astype('bool'), relay.shape_of(call_5251))) # shape=(2, 3, 9)
bop_5270 = relay.greater(call_5252.astype('bool'), relay.reshape(const_5266.astype('bool'), relay.shape_of(call_5252))) # shape=(2, 3, 9)
output = relay.Tuple([bop_5267,])
output2 = relay.Tuple([bop_5270,])
func_5299 = relay.Function([], output)
mod['func_5299'] = func_5299
mod = relay.transform.InferType()(mod)
output = func_5299()
func_5300 = relay.Function([], output)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mod.get_global_var('func_3716')
func_3718_call = mutated_mod.get_global_var('func_3718')
call_5318 = relay.TupleGetItem(func_3716_call(), 0)
call_5319 = relay.TupleGetItem(func_3718_call(), 0)
func_3503_call = mod.get_global_var('func_3503')
func_3507_call = mutated_mod.get_global_var('func_3507')
var_5323 = relay.var("var_5323", dtype = "uint8", shape = (726,))#candidate|5323|(726,)|var|uint8
var_5324 = relay.var("var_5324", dtype = "int16", shape = (91, 15))#candidate|5324|(91, 15)|var|int16
call_5322 = relay.TupleGetItem(func_3503_call(relay.reshape(var_5323.astype('uint8'), [1, 726]), relay.reshape(var_5324.astype('int16'), [1365, 1]), ), 3)
call_5325 = relay.TupleGetItem(func_3507_call(relay.reshape(var_5323.astype('uint8'), [1, 726]), relay.reshape(var_5324.astype('int16'), [1365, 1]), ), 3)
func_3263_call = mod.get_global_var('func_3263')
func_3265_call = mutated_mod.get_global_var('func_3265')
call_5336 = func_3263_call()
call_5337 = func_3263_call()
bop_5349 = relay.not_equal(call_5322.astype('bool'), var_5323.astype('bool')) # shape=(1365, 726)
bop_5352 = relay.not_equal(call_5325.astype('bool'), var_5323.astype('bool')) # shape=(1365, 726)
uop_5368 = relay.sinh(call_5322.astype('float32')) # shape=(1365, 1)
uop_5370 = relay.sinh(call_5325.astype('float32')) # shape=(1365, 1)
output = relay.Tuple([call_5318,var_5324,call_5336,bop_5349,uop_5368,])
output2 = relay.Tuple([call_5319,var_5324,call_5337,bop_5352,uop_5370,])
func_5377 = relay.Function([var_5323,var_5324,], output)
mod['func_5377'] = func_5377
mod = relay.transform.InferType()(mod)
var_5378 = relay.var("var_5378", dtype = "uint8", shape = (726,))#candidate|5378|(726,)|var|uint8
var_5379 = relay.var("var_5379", dtype = "int16", shape = (91, 15))#candidate|5379|(91, 15)|var|int16
output = func_5377(var_5378,var_5379,)
func_5380 = relay.Function([var_5378,var_5379,], output)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_5413 = func_2717_call()
call_5414 = func_2717_call()
output = call_5413
output2 = call_5414
func_5443 = relay.Function([], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
output = func_5443()
func_5444 = relay.Function([], output)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5518 = relay.var("var_5518", dtype = "float32", shape = (12, 11, 11))#candidate|5518|(12, 11, 11)|var|float32
uop_5519 = relay.acosh(var_5518.astype('float32')) # shape=(12, 11, 11)
func_4096_call = mod.get_global_var('func_4096')
func_4103_call = mutated_mod.get_global_var('func_4103')
const_5526 = relay.const([-7,4,-9,10,10,6,9,7,-3,6,6,3,-4,8,3,9,-2,-4,10,8,9,-10,-10,-6,3,-2,4,1,-8,-7,4,4,1,-8,-1,-2,10,1,-6,2,-10,8,-10,1,8,2,6,-10,2,-7,-6,-5,9,-8,-4,-4,-5,-8,1,-6,7,-3,-1,-9,10,-8,-3,3,-1,-8,-1,1,7,2,9,9,5,-1,4,1,-6,-2,-6,-2,8,-1,-4,-5,-2,-1,7,8,-3,-10,9,-4,-4,3,-1,-6,6,-8,-2,1,3,6,3,6,5,4,-9,10,-5,5,1,-7,-3,-5,-1,10,8,6,3,9,7,-3,-2,-2,-9,6,-10,-5,9,9,-6,-6,6,8,-3,9,-8,6,7,-10,-7,-4,-1,-10,-9,-2,8,1,-9,3,-4,10,5,6,6,-10,-4,7,-3,8,6,1,8,-5,-1,-9,-3,10,4,3,4,10,6,-5,-6,5,3,-3,-7,9,1,4,-6,-3,10,10,-7,-2,-2,6,-10,-8,-6,-5,3,5,-4,7,3,10,-6,-7,-5,-6,6,4,2,8,-5,4,-10,2,-8,-4,7,-6,6,-5,-6,9,4,7,-7,7,9,10,10,3,-10,-1,-1,-1,-4,-8,-7,2,10,9,-4,9,-8,5,2,-8,-5,1,-7,2,7,2,9,-9,-3,6,7,-3,6,-4,7,3,10,5,6,-9,-7,1,4,5,-8,-7,8,-9,9,5,5,8,-1,3,10,2,-4,5,1,-7,3,-6,-3,5,8,10,7,-9,10,-8,3,-2,-1,6,7,10,7,-10,1,-2,3,-4,-9,1,-6,-2,6,-7,2,-8,-7,10,-6,-2,-6,-8,8,1,9,-9,-8,-4,-6,1,4,-9,-8,3,-9,-3,-3,4,-6,-1,5,-8,2,7,-2,-7,8,5,3,1,5,7,-6,-1,3,5,-1,-1,6,-2,6,5,5,9,-2,-10,-4,-6,7,1,9,-8,-3,-5,8,-9,7,10,6,10,10,4,8,-6,-9,-4,5,1,2,-8,5,7,-1,-6,6,4,9,-2,2,-1,-5,1,7,-9,-10,-1,4,1,-7,-2,-4,-9,-8,9,10,-1,2,-6,-4,10,-4,10,-1,3,9,-8,-4,5,1,4,-3,6,-8,6,1,-7,9,3,10,5,-1,-2,2,-9,-3,-4,-7,-6,7,7,8,-3,3,6,-1,-1,-3,-7,2,10,8,-6,8,-10,-3,-3,2,7,-1,9,3,-4,4,-3,-7,4,9,-10,1,4,-10,-5,2,-8,-5,6,-8,6,4,-8,4,-6,-3,10,10,-6,-10,3,-2,-8,7,-7,-6,6,-2,-9,-8,9,-3,3], dtype = "uint8")#candidate|5526|(512,)|const|uint8
var_5527 = relay.var("var_5527", dtype = "bool", shape = (504,))#candidate|5527|(504,)|var|bool
const_5528 = relay.const([6,3,-6,3,-10,-6,5,-7,-5,-8,-3,-7,2,-8,-4,4,-3,-5,2,2,-6,-4,6,-10,4,-5,6,2,1,-2,-4,-4,-7,-10,8,9,-2,5,-2,-2,4,5,-7,-1,6,-5,2,-9,-10,-6,-1,-2,-7,5,-3,-10,-4,8,10,2,-3,-4,8,-3,-4,-5,-5,-10,-4,-6,1,4,8,9,-1,4,9,8,3,6,-4,2,7,-6,6,10,7,-7,5,-3,-8,-10,-6,4,2,5,-2,5,-1,-4,2,-8,-7,-6,-10,9,-7,-5,-7,-10,-1,-3,4,-4,-1,-3,2,4,4,-10,-8,-2,-7,-5,6,-1,2,1,4,-2,4,9,-7,-5,-10,5,3,-10,2,5,1,-6,2,1,-3,-2,-10,-2,4,6,-2,4,8,-8,-9,10,-10,7,2,-9,-2,-3,-6,7,-2,-5,-6,4,3,6,-8,4,-3,-10,-8,1,4,2,8,-9,2,9,-1,2,6,7,-6,-1,-1,-5,4,1,-9,5,10,-10,-5,10,3,-1,-2,4,-1,-7,10,3,10,-9,5,-6,9,7,6,-2,-1,-9,-3,-3,10,7,3,-1,2,-2,7,1,-6,7,-6,-3,6,-4,-5,-3,8,-2,-10,4,4,-8,-3,-4,-7,-3,4,4,7,8,6,6,3,-4,10,6,3,-6,3,7,3,-5,-7,-8,8,6,-9,-5,-10,-5,7,6,-5,6,4,-10,-5,-5,-5,-7,-9,6,-5,10,1,8,9,10,8,-2,1,-1,-10,-7,1,9,-6,8,7,9,-5,8,4,-8,3,-7,3,-1,6,9,3,-7,-2,-4,-5,8,1,4,3,-10,-1,3,4,-8,-5,8,-4,8,-10,-6,5,-4,10,-4,9,3,8,5,-1,4,1,-3,5,-10,2,-7,-10,5,-9,6,10,8,-5,-2,10,-2,8,-8,5,-7,6,5,-6,-7,-9,3,-2,9,-5,-4,7,-8,9,7,3,-2,9,-4,-10,-10,-6,6,3,5,-6,-3,-5,9,6,-8,1,6,9,-5,-3,-6,5,8,9,7,2,-10,2,1,-7,-5,-10,8,-4,-8,5,7,10,-9,-7,-6,-6,-6,-8,-6,-5,-3,3,4,-4,4,8,1,-5,7,-7,-2,1,-3,6,-4,-10,6,10,-3,-6,-4,-8,-4,-5,8,-4,-9,10,-4,1,7,-6,-7,7,-1,-8,-7,9,-3,2,10,-2,1,-9,8,4,1,10,-6,-9,10,-1,-4,-10,-7,-8,10,-4,-4,7,-4,9,1,-3,-8,4,-10,9,-7,2,-5,1,-2,8,1,-10,-8,-8,10,-8,6,10,-6,9,-10,-9,3,2,-8,-9,-8,2,8,7,-3,-8,-4,4,-7,-7,-8,-4,6,-4,6,3,-4,10,-7,10,9,-1,-8,6,10,4,8,6,-4,10,6,4,10,-2,2,-9,1,5,-4,7,-4,3,1,-10,2,6,5,5,-5,-4,-8,9,10,-1,7,-10,10,-5,-3,-7,6,10,-5,-9,-4,9,-4,3,4,-10,-1,2,-2,-2,3,-7,-5,10,-3,-2,2,9,10,1,6,-5,-10,10,-5,4,-4,-4,-9,8,-5,-9,2,4,9,-7,7,-4,8,-8,10,10,-4,-4,-1,4,-5,-7,-10,10,-6,-6,9,-9,-8,10,8,2,4,-6,-10,-5,5,1,-2,-7,-8,-3,-5,-3,-9,8,3,-9,6,6,-6,-1,10,6,-1,-2,8,-5,8,-3,-1,4,3,-2,1,-6,-8,9,7,2,10,8,-1,-8,-8,-6,6,-6,-5,9,-6,-2,2,-4,7,-8,2,-5,-8,2,6,7,-9,-2,-1,10,-7,-4,4,-9,-6,9,2,8,7,-6,-9,-6,5,-3,-10,-6,5,-6,-9,-1,-2,2,-4,-4,2,5,-4,-10,-8,7,-5,-5,-6,1,-7,-2,-5,-5,-5,-2,-10,8,8,4,10,4,-6,-8,-3,8,3,1,4,-1,-6,8,9,-1,-4,3,-6,-1,-7,5,-8,-9,2,-1,7,-5,-4,-10,-9,-10,-4,10,1,2,-10,9,9,3,10,-8,-7,-10,8,-3,-9,-1,-7,4,-2,-7,3,-2,-4,4,10,-2,6,5,-2,-10,-3,-5,-2,8,5,-8,-1,-9,-7,2,-6,2,4,6,8,-6,-1,-1,10,-8,-7,1,7,7,-4,1,3,4,1,-3,9,9,-2,10,-2,-5,5,8,-8,5,-4,-4,10,-4,9,9,9,-6,8,1,6,-10,-3,-4,3,-5,-6,4,8,-8,-5,6,4,-5,10,6,-3,9,-5,7,2,5,-2,5,-6,8,9,7,6,8,1,3,10,-10,-3,-1,10,5,4,5,-3,3,-8,5,-4,1,-9,-9,-4,-2,-9,-4,-8,2,-6,-3,-9,1,7,-1,-1,8,7,-6,8,10,10,6,-2,9,-5,-9,9,4,-7,10,-9,9,6,9,-3,1,4,1,-6,-7,5,7,-7,-3,-8,-6,1,-3,1,1,2,7,-9,-1,3,8,-4,-3,6,7,8,2,-9,6,-8,3,-1,3,1,7,-4,1,9,-10,9,-10,-3,6,-9,1,3,5,-4,-6,-4,10,-7,5,2,-1,-5,8,5,-1,8,10,-5,5,-5,6,-3,7,-5,6,-2,-10,9,-6,-4,7,-6,-1,-5,-10,-7,-10,-3,2,3,-7,4,1,-9,-6,-3,-5,3,10,2,10,6,-2,9,9,2,9,7,-9,-7,9,1,9,-10,4,10,-3,-4,-7,1,-6,-4,-8,7,7,-4,5,8,1,-2,-10,-1,-9,10,-9,-4,3,-2,-10,10,-2,-4,4,-1,-2,2,-7,6,7,4,8,-10,5,-4,10,2,2,9,10,1,-4,5,-5,7,-9,-7,-8,-10,9,-8,9,3,10,9,1,-3,4,-4,10,-2,-2,-8,6,-3,-3,5,3,-7,-9,2,-6,-5,-2,9,10,-3,-10,3,10,-10,7,8,5,-2,10,2,-10,4,8,5,5,-2,-10,1,-1,4,-8,7,-6,6,4,1,9,-7,1,6,-10,10,-3,10,2,9,4,5,-6,5,-3,3,2,-8,10,8,10,9,-9,-7,-1,-2,4,-5,10,-10,8,4,3,-2,4,4,8,-9,-2,-9,-5,-10,-10,-9,8,-5,3,6,-1,-1,-10,1,8,-6,-10,-7,-8,6,-3,8,6,-8,3,7,2,-9,2,-10,-1,3,1,-6,7,7,-9,-1,-8,-6,-3,-5,10,7,5,2,-4,-7,5,4,-9,3,-5,3,-5,6,-9,-5,6,-10,-9,-7,9,10,1,-7,-4,-8,-5,4,-7,10,-5,6,-4,2,-1,8,3,6,-3,-4,-3,8,3,-10,4,8,-4,1,-1,5,10,-1,-3,-8,-10,-3,-7,3,-3,-10,-4,6,-1,7,-8,5,6,-2,5,-5,-4,-7,9,1,-4,9,-7,5,-2,1,3,-9,-2,-7,-2,-1,3,9,10,4,-1,2,-1,-6,-7,4,-3,-10,5,1,2,-6,-9,-6,5,3,-4,1,-9,-8,-6,-8,-7,-1,8,10,3,2,8,-9,8,8,4,-9,8,1,2,-2,-10,9,-4,-5,-2,-9,4,7,1,-6,-5], dtype = "int16")#candidate|5528|(1365,)|const|int16
const_5529 = relay.const([-4.848561,-2.874687,6.782645,8.400100,-8.716341,-8.825828,1.409305,8.264173,-3.261161,0.435501,8.287802,5.168299,1.247147,1.784922,7.564654,-0.071171,-4.705382,3.636057,0.004099,0.416402,6.241620,-4.592256,-1.511205,9.613768,-3.959303,3.163008,-2.019867,-9.033733,-6.479831,-1.110857,1.108134,-7.220675,9.067223,6.504184,-0.764348,-9.501242,0.192787,-8.935094,-9.093207,-4.894371,3.897445,-4.943086,-7.688227,4.421830,-2.760054,-1.627777,-0.962014,2.530808,-5.743133,2.489418,-2.026320,-2.137206,-3.807490,6.077759,-3.302310,1.713090,2.637901,8.507767,-1.667468,-9.376404,2.413293,-7.670023,6.854954,5.955901,6.231242,3.864808,2.309574,2.149775,-7.480703,-2.476567,-5.339658,-9.013009,-4.893114,7.021576,-6.858910,7.185157,5.451375,-3.711710,-1.122721,-3.481364,-3.236355,2.595576,-7.729035,6.995346,1.847339,6.450575,1.631354,3.936116,-3.674626,-3.497883,-2.579698,-7.266834,3.183828,9.055099,-5.510416,3.447089,5.382612,-2.610990,2.961734,-9.273130,-7.634252,-3.483020,-2.511753,0.175950,6.209305,4.121308,0.547504,9.972741,-0.528100,-5.635590,-8.885487,8.578414,-5.118160,7.968243,2.470243,-7.355539,-4.662748,8.311540,-3.850677,8.604084,-3.104301,-4.417308,-9.551146,8.199276,-9.104969,0.388938,7.105224,-1.539437,9.324296,-8.892432,6.492698,-6.183537,6.893895,-7.898016,-1.208060,0.162221,6.281710,-5.513589,6.751906,-4.696705,-7.224887,0.926834,1.538059,7.474620,3.572755,0.883252,0.294866,-1.605793,-0.460634,-8.344409,-3.796534,7.607362,1.376723,9.516213,3.893334,-9.956822,-4.028774,-1.742361,0.307239,-6.383274,5.202945,-2.062148,4.958893,2.461869,3.740615,-2.638595,-6.974311,2.655699,7.436708,-9.308546,1.887826,-8.772048,-4.893744,8.091747,7.941982,5.666733,0.451470,0.786559,-6.904496,-0.074447,-1.661286,-2.355840,3.420844,6.057801,-9.789812,2.857835,-2.830997,4.447603,-9.625584,1.627129,-9.157446,-5.221136,-1.518001,-2.185006,0.484790,-8.534439,2.749961,-8.969992,2.441855,-2.026915,5.542481,5.152423,4.080128,8.355916,0.379648,3.597524,8.455916,9.022211,3.793884,-6.920772,0.534743,4.030705,6.896509,5.896155,1.767229,1.607220,1.760277,-9.196632,9.912163,3.264428,-3.666819,1.036381,-3.251066,9.441140,-7.685466,-6.574389,9.890970,6.487390,1.612826,4.135357,-2.001262,-9.806688,9.316979,-4.059258,-7.838872,4.355878,6.835595,-0.067482,0.039734,3.074402,7.500166,0.776484,7.778889,-6.910800,4.634990,0.365133,-3.901054,-1.328667,3.549341,-4.718434,-7.106307,-9.040333,-1.524944,1.436160,0.745561,-1.764226,8.074700,6.443563,-3.221562,8.156459,0.435807,4.066514,-5.752969,6.830001,-0.745926,5.805059,5.068856,-2.833892,-7.403161,0.473931,5.927987,2.367623,-5.539908,6.331444,-3.112170,-7.046781,-4.769294,4.094818,8.557989,-6.738914,-0.312396,-9.005987,0.777349,-5.717058,8.375591,1.267435,2.374271,0.039993,8.824108,-5.227816,9.752723,8.323881,-0.243313,6.626952,0.813747,4.623930,5.920789,1.510979,3.633710,8.336995,-2.460497,0.299879,0.850968,0.086670,9.544863,-4.875061,-3.899536,-6.182288,-8.055315,5.046625,2.657662,7.445713,-3.004197,-7.098011,-1.195937,-0.920703,-4.225438,-2.646816,-3.468771,9.810045,5.544726,3.720978,5.317912,-0.289594,2.929225,-7.073403,7.856041,9.082239,-6.728373,9.073169,3.350063,2.355033,5.209990,8.807923,9.118136,7.419659,-2.912224,5.775060,1.953225,3.375612,9.638060,9.528362,-0.073673,-8.057956,-4.781542,5.047466,-6.612291,-4.250543,8.609165,0.561183,-9.663684,8.876251,0.545119,-1.073776,4.002282,0.399875,5.758079,7.737085,-5.743978,6.878087,4.887673,-5.406067,1.677259,7.999042,7.204215,-6.767880,9.718604,-7.412784,-4.744788,5.750844,4.312437,-2.887193,-8.832144,-9.779787,0.758038,7.076927,-4.072947,-5.959698,-7.913217,-0.702806,1.530466,1.923220,4.574521,7.398103,0.013180,8.987401,-3.146091,8.941872,6.027333,3.002718,2.298839,7.265890,-4.283096,-5.592639,9.765279,-6.091082,8.904560,3.032159,-1.179085,-8.463782,-9.183246,-6.993185,7.002610,4.348537,3.908459,8.173398,7.352037,-6.957626,7.262665,3.139818,-8.433580,2.838341,7.016010,-8.970076,1.117939,9.109969,-8.505444,-2.705721,-2.843660,-2.559969,-6.215545,-0.332348,-6.252858,-3.592239,3.760973,-6.829282,0.267160,9.346707,-2.983047,-8.797406,-1.640255,7.743914,3.646223,-0.962231,5.957235,3.798724,9.735820,-6.188479,7.907148,2.842567,-1.359159,-5.448704,0.352286,-9.514280,3.412068,8.104724,7.547061,-8.125193,9.659096,-4.844105,6.864884,-3.411218,1.646314,-1.160159,7.334401,-8.455884,5.525780,-5.854808,-1.830745,-7.052506,7.540264,-1.325987,3.148528,-5.686359,2.276409,3.876376,-0.488611,6.118052,-7.133049,-4.229084,7.979399,7.442275,1.972063,8.178341,7.381406,7.004763,-4.324641,3.774912,-9.289246,-4.885867,-9.885390,-9.024482,9.625226,-4.745102,4.922469,-6.295637,1.405396,3.448049,6.372809,9.398990,0.824061,8.985371,-8.853542,5.639488,-6.363857,-1.236267,4.217627,-2.524289,4.909738,3.835715,2.025323,9.537008,0.172144,-6.369004,-8.713696,8.924583,-9.055627,3.243414,3.782182,-5.505042,-8.136846,-1.224470,9.411306,-3.878753,-1.978918,-6.179253,4.081227,-0.480281,-5.417278,5.740358,-1.338160,-8.059384,-4.344876,9.938080,-1.901010,9.805297,6.133654,7.377899,-9.879072,3.138394,2.422672,7.076253,4.544207,5.443809,-3.973359,-0.938779,-9.240056,9.834902,-0.832416,-3.067083,-7.279844,2.308231,-9.065351,8.112990,3.625536,7.750093,-9.208802,2.592511,-8.296940,5.552900,-3.907300,-6.756262,6.791857,9.035400,-5.627758,-8.863217,9.233672,-9.909169,-4.930463,7.369616,-5.279935,-0.204277,7.772760,2.864680,5.016282,-7.612716,-8.318157,-5.728250,-6.570672,-9.513581,4.878033,-4.482326,-5.984945,-4.364689,-3.754255,-3.308509,-0.806713,1.216520,3.936968,-7.709321,9.391896,-8.893514,0.585676,0.667734,-6.723558,-5.180323,8.146707,-5.790074,-1.892402,-1.302981,-5.983759,2.378519,-2.950550,-7.805301,3.785755,-9.457016,4.600662,2.092380,6.838518,2.532792,-1.743041,5.449753,-0.516464,8.789423,9.290210,6.045830,8.699242,-5.299645,3.803596,5.051941,8.754417,0.505487,-7.444463,4.876219,-0.744483,2.168397,5.201252,-3.380724,-5.175522,-5.835459,4.939841,-2.526006,-1.291743,-6.674367,9.468393,0.720629,9.518847,-8.953837,2.046229,4.031793,-5.320647,-7.000708,-4.646741,8.885792,-3.301804,-4.456190,9.652397,-3.878959,8.665309,4.825686,-1.129984,-0.126972,0.739616,1.009838,-0.206862,-9.585161,8.942364,-6.110683,1.293825,2.754754,3.256535,-3.542730,-8.829392,8.835111,8.130129,-3.015878,2.071827,-4.840260,3.325806,0.526758,-3.252765,-2.770583,-6.558936,3.425189,-3.469070,6.330224,-7.359222,-7.900097,0.020714,6.680604,-0.741984,-2.260944,-0.997077,3.744584,3.696657,7.516999,-7.344768,4.507873,6.211157,9.045645,7.705886,5.000897,-0.532968,-6.132262,9.885072,-2.764864,-0.758114,4.102886,4.308984,-5.712745,6.547248,9.146287,-9.953601,-6.508771,4.868064,8.946913,8.862291,1.477302,7.536068,7.614386,1.621671,-6.351792,-1.778003,-0.957910,-9.874837,-9.729972,-3.772190,-6.725741,4.654795,-9.346436,-4.127677,1.453809,0.361612,0.150107,4.719408,7.494926,-1.213557,-6.372733,-5.146339,0.948853,5.413572,-9.614558,4.935775,-8.727190,-2.412580,7.688029,6.140987,-2.764676,6.987420,5.006267,-0.263652,6.861104,-6.377549,8.255317,-4.668318,-9.289498,9.101063,-3.864523,2.536566,4.580097,7.649463,-4.678999,4.262833,6.590443,-8.999823,4.258686,-3.985870,1.105116,-8.972393,8.710559,8.446695,0.639299,-3.234429,4.941120,-7.314512,7.337800,-4.888278,-1.645108,-0.892527,-6.999047,-5.491771,7.735487,9.493102,-6.818248,-6.365727,-1.458846,9.500380,-0.362321,5.761261,7.218632,-2.824433,-5.074728,-7.276801,-2.783984,-1.788283,7.376410,1.263306,3.212112,6.696647,-9.580109,3.775933,-2.090353,-4.519973,5.554098,-7.629233,-8.984648,0.782396,2.761102,7.116188,3.848095,1.694430,6.163818,6.884448,1.655104,-5.677227,-5.322039,-7.935617,-1.336931,2.854167,6.756002,-1.845708,-7.981913,-0.679909,7.357982,-1.371682,7.885167,0.068711,-1.594048,-8.422604,6.960743,0.646135,-4.075558,-9.319883,1.481477,-8.816495,-7.402414,-2.233571,4.226939,-6.214028,-9.354580,1.096737,-6.594444,-2.135253,1.511059,-9.670271,3.023710,3.582949,-1.377630,-5.902091,6.057052,-0.366096,2.348739,1.849424,9.908014,7.162438,-4.714073,9.874164,0.334291,7.448763,-8.722143,-0.663466,6.186375,-3.361956,9.059518,8.044285,1.074225,-2.382886,-5.000847,2.603908,-4.195016,-8.828924,0.799952,5.802018,2.266482,-2.509810,3.336598,-5.656313,-0.313904,-6.188751,9.082601,-0.198973,2.666446,-4.637449,-4.998469,4.999266,-8.212772,1.984894,3.703309,8.960879,7.832212,7.262484,-8.009850,-7.514231,-0.635492,-8.184400,-9.811529,-0.796589,-0.146068,-5.435848,1.596602,5.416927,4.330646,2.000419,4.858476,8.752259,-3.990039,3.134780,-0.639722,4.211822,-8.609053,6.339451,7.101924,-6.357394,-8.156360,-1.687845,-8.166364,9.467692,5.218546,7.391930,9.002306], dtype = "float32")#candidate|5529|(900,)|const|float32
const_5530 = relay.const([-4,-4,6,9,7,-9,9,-7,-5,3,8,10,-2,-7,-7,-6,9,-5,4,-10,-9,-1,-5,1,5,-3,-5,4,9,4,-4,-7,10,6,8,-5,7,7,6,-1,6,-3,8,-8,-3,-5,3,-7,-5,-5,1,4,-7,9,1,-6,5,-7,9,9,8,-6,-7,-3,8,-7,-1,-8,-2,-4,8,-1,1,5,5,-9,-10,-3,-8,9,-8,6,7,-10,10,3,5,-10,-2,-4,10,10,-10,7,3,5,-4,1,-4,2,4,-3,-9,-3,9,10,3,-9,4,1,6,9,5,-3,10,5,3,4,3,7,-7,1,-6,10,-10,7,5,8,-5,-10,-8,-10,-3,5,4,-7,-8,8,3,-3,-9,9,-6,5,-9,8,-2,-10,-5,-10,-6,9,-7,7,-6,-3,1,-10,-8,-10,-2,4,-1,10,9,6,-8,9,-3,-5,9,4,7,-10,-9,-2,1,6,10,1,-5,-7,3,8,4,-4,9,-4,-2,-3,-5,1,-3,-1,2,-4,-8,-9,9,-6,9,8,8,4,6,-10,-2,-10,-9,-8,2,7,5,8,3,6,4,10,6,3,-9,7,-5,4,8,6,-8,-10,10,6,4,5,-6,1,7,7,6,-7,1,-6,5,-8,4,5,-8,7,-3,-9,7,2,-3,-10,-3,9,-8,4,6,6,2,3,-2,-9,3,5,-7,6,8,-6,-2,-4,1,-4,9,-4,-5,8,-9,4,4,-4,8,10,5,-6,2,-7,-7,-7,-5,7,10,-7,4,-3,-1,-1,6,-5,-9,5,-3,4,5,8,4,8,-3,-5,4,-7,-4,6,-2,-10,-5,4,-9,-8,2,2,1,2,-5,-1,6,6,8,1,-6,-3,-7,-9,-5,-9,-2,3,-3,9,3,-8,10,10,-7,-10,-3,4,-9,-6,-9,-1,8,-6,10,-8,5,-3,-10,-3,-5,2,5,8,8,-8,9,-9,5,7,-9,10,2,9,6,1,-4,-9,-10,2,-9,6,-10,-6,-8,-2,-9,-3,6,3,5,-3,-8,7,-9,5,-7,-5,-5,4,5,2,-6,5,6,-4,-3,-9,1,-8,-5,8,5,3,-4,5,10,-3,2,-10,7,1,-3,2,8,-4,-4,-9,6,1,8,1,-3,6,-6,4,-10,-3,7,1,-5,10,-7,-10,-2,7,7,6,6,-5,-8,-4,-6,-3,4,10,-9,1,-1,3,2,-1,-9,10,1,-8,6,7,-2,-7,-6,-6,-9,-3,7,-4,-5,7,6,-1,-3,-5,-2,-3,7,-9,-6,6,-1,6,4,-7,6,2,1,8,2,-5,8,-7,7,-5,-2,-8,1,-2,-5,3,5,3,1,-2,-3,-5,4,-5,1,-3,1,7,9,-7,10,-6,-7,3,-10,-1,3,-5,10,-7,8,-4,-5,-10,-10,-9,-9,7,3,4,-4,-6,10,3,1,-1,-2,-7,5,1,6,-8,-4,1,-7,-3,-9,-8,-2,9,1,-2,4,-1,-9,-6,6,-2,-3,10,-1,8,1,8,-7,5,-6,2,-8,-1,-9,4,5,6,2,-5,-8,-2,1,2,-7,-5,-6,7,3,-3,-6,-10,4,8,-3,-10,6,-7,3,4,-6,5,9,6,-1,-6,7,-10,1,8,1,-2,1,5,-1,-4,-1,1,-2,-1,7,3,-1,-4,1,6,-1,10,-10,-5,-5,9,9,-3,8,-5,-1,-10,1,7,-5,3,-3,-9,-7,7,-3,-5,8,-3,-4,-3,7,9,7,-10,-1,10,6,-1,2,-5,4,-7,-10,9,1,8,7,-7,-3,7,-10,10,-6,8,-6,-5,5,-3,4,-6,5,-2,1,-7,6,10,10,-3,8,-6,-6,-7,5,-5,-1,4,7,10,-5,4,-10,-9,-2,-9,-6,9,8,-5,5,3,-3,3,3,7,10,-1,-6,3], dtype = "uint8")#candidate|5530|(726,)|const|uint8
call_5525 = relay.TupleGetItem(func_4096_call(relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(var_5527.astype('bool'), [504,]), relay.reshape(const_5528.astype('int16'), [1365,]), relay.reshape(const_5529.astype('float32'), [90, 10]), relay.reshape(const_5530.astype('uint8'), [726,]), ), 2)
call_5531 = relay.TupleGetItem(func_4103_call(relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(var_5527.astype('bool'), [504,]), relay.reshape(const_5528.astype('int16'), [1365,]), relay.reshape(const_5529.astype('float32'), [90, 10]), relay.reshape(const_5530.astype('uint8'), [726,]), ), 2)
bop_5538 = relay.logical_xor(uop_5519.astype('int16'), relay.reshape(var_5518.astype('int16'), relay.shape_of(uop_5519))) # shape=(12, 11, 11)
func_4096_call = mod.get_global_var('func_4096')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_5541 = relay.TupleGetItem(func_4096_call(relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(var_5527.astype('bool'), [504,]), relay.reshape(const_5528.astype('int16'), [1365,]), relay.reshape(const_5529.astype('float32'), [90, 10]), relay.reshape(const_5530.astype('uint8'), [726,]), ), 1)
call_5542 = relay.TupleGetItem(func_4103_call(relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(const_5526.astype('uint8'), [16, 2, 16]), relay.reshape(var_5527.astype('bool'), [504,]), relay.reshape(const_5528.astype('int16'), [1365,]), relay.reshape(const_5529.astype('float32'), [90, 10]), relay.reshape(const_5530.astype('uint8'), [726,]), ), 1)
output = relay.Tuple([call_5525,const_5526,var_5527,const_5528,const_5529,const_5530,bop_5538,call_5541,])
output2 = relay.Tuple([call_5531,const_5526,var_5527,const_5528,const_5529,const_5530,bop_5538,call_5542,])
func_5551 = relay.Function([var_5518,var_5527,], output)
mod['func_5551'] = func_5551
mod = relay.transform.InferType()(mod)
var_5552 = relay.var("var_5552", dtype = "float32", shape = (12, 11, 11))#candidate|5552|(12, 11, 11)|var|float32
var_5553 = relay.var("var_5553", dtype = "bool", shape = (504,))#candidate|5553|(504,)|var|bool
output = func_5551(var_5552,var_5553,)
func_5554 = relay.Function([var_5552,var_5553,], output)
mutated_mod['func_5554'] = func_5554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_5556 = relay.TupleGetItem(func_2681_call(), 0)
call_5557 = relay.TupleGetItem(func_2682_call(), 0)
func_1911_call = mod.get_global_var('func_1911')
func_1915_call = mutated_mod.get_global_var('func_1915')
var_5607 = relay.var("var_5607", dtype = "int32", shape = ())#candidate|5607|()|var|int32
const_5608 = relay.const([8,5,-3,-1], dtype = "int32")#candidate|5608|(4,)|const|int32
call_5606 = relay.TupleGetItem(func_1911_call(relay.reshape(var_5607.astype('int32'), []), relay.reshape(const_5608.astype('int32'), [1, 4]), ), 0)
call_5609 = relay.TupleGetItem(func_1915_call(relay.reshape(var_5607.astype('int32'), []), relay.reshape(const_5608.astype('int32'), [1, 4]), ), 0)
func_1054_call = mod.get_global_var('func_1054')
func_1056_call = mutated_mod.get_global_var('func_1056')
var_5624 = relay.var("var_5624", dtype = "float64", shape = (2352,))#candidate|5624|(2352,)|var|float64
call_5623 = relay.TupleGetItem(func_1054_call(relay.reshape(var_5624.astype('float64'), [14, 14, 12])), 2)
call_5625 = relay.TupleGetItem(func_1056_call(relay.reshape(var_5624.astype('float64'), [14, 14, 12])), 2)
func_4180_call = mod.get_global_var('func_4180')
func_4181_call = mutated_mod.get_global_var('func_4181')
call_5637 = relay.TupleGetItem(func_4180_call(), 1)
call_5638 = relay.TupleGetItem(func_4181_call(), 1)
output = relay.Tuple([call_5556,call_5606,var_5607,const_5608,call_5623,var_5624,call_5637,])
output2 = relay.Tuple([call_5557,call_5609,var_5607,const_5608,call_5625,var_5624,call_5638,])
func_5663 = relay.Function([var_5607,var_5624,], output)
mod['func_5663'] = func_5663
mod = relay.transform.InferType()(mod)
mutated_mod['func_5663'] = func_5663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mutated_mod.get_global_var('func_5663')
var_5665 = relay.var("var_5665", dtype = "int32", shape = ())#candidate|5665|()|var|int32
var_5666 = relay.var("var_5666", dtype = "float64", shape = (2352,))#candidate|5666|(2352,)|var|float64
call_5664 = func_5663_call(var_5665,var_5666,)
output = call_5664
func_5667 = relay.Function([var_5665,var_5666,], output)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_5700 = func_2717_call()
call_5701 = func_2717_call()
func_3775_call = mod.get_global_var('func_3775')
func_3777_call = mutated_mod.get_global_var('func_3777')
call_5707 = relay.TupleGetItem(func_3775_call(), 0)
call_5708 = relay.TupleGetItem(func_3777_call(), 0)
output = relay.Tuple([call_5700,call_5707,])
output2 = relay.Tuple([call_5701,call_5708,])
func_5721 = relay.Function([], output)
mod['func_5721'] = func_5721
mod = relay.transform.InferType()(mod)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5721_call = mutated_mod.get_global_var('func_5721')
call_5722 = func_5721_call()
output = call_5722
func_5723 = relay.Function([], output)
mutated_mod['func_5723'] = func_5723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_5755 = func_3652_call()
call_5756 = func_3652_call()
func_3025_call = mod.get_global_var('func_3025')
func_3029_call = mutated_mod.get_global_var('func_3029')
var_5769 = relay.var("var_5769", dtype = "uint8", shape = (726,))#candidate|5769|(726,)|var|uint8
const_5770 = relay.const([-3,4,-8,-3,7,1,6,-3,-8,-6,-4,8,1,8,-2,-9,-10,4,9,2,3,-1,7,2,4,-6,2,-4,4,2,2,2,-8,1,6,-3,-7,8,2,-9,-9,-3,-9,-5,10,2,1,-8,-10,6,2,-7,-8,1,6,-4,-5,5,5,-8,7,1,-3,7,-5,1,4,6,-2,10,9,10,-1,9,-7,5,8,-4,-2,-4,5,6,-3,1,-9,3,5,1,10,-5,6,3,-3,-5,-9,2,6,5,-10,5,9,5,-3,1,-6,-2,-6,8,-3,4,6,8,-6,1,9,-3,-6,-2,7,-6,-2,9,5,-7,2,2,7,-10,-1,9,9,-10,-2,-5,8,6,-2,-7,-4,-7,6,-4,7,8,-5,2,10,-10,-4,5,-8,1,-8,1,5,-8,-7,-7,-8,-4,3,8,8,8,-5,-6,-6,5,9,3,3,-6,8,5,-8,1,-7,-7,-7,10,9,-6,-5,6,8,6,3,-2,-5,6,-5,7,6,-8,-8,-8,4,-2,5,-3,-7,4,10,2,-2,1,5,-1,1,-7,-10,7,-9,3,5,8,-4,4,8,-3,6,8,-9,4,8,10,6,-2,-6,-10,-2,7,-1,-3,-8,-9,-8,6,6,9,1,2,9,-4,-10,10,-3,9,7,-6,6,-9,-2,4,-5,2,4,-5,7,-8,4,-8,-4,-4,8,-7,-5,9,-9,5,-7,10,-10,-2,4,5,-9,-6,3,5,-10,-6,-9,2,9,2,6,-5,6,-5,-1,-8,-7,-5,-6,2,3,3,-4,-9,-4,-8,4,-7,3,1,-6,4,5,4,10,-1,3,-4,-9,-9,-6,3,2,-10,-6,1,-2,-5,-6,10,6,-10,5,7,9,-9,5,-2,-6,6,-3,-3,-3,4,9,7,5,-6,3,6,-1,4,-9,-5,-1,6,-9,1,-7,-3,-8,4,10,-6,5,-3,-9,2,-7,4,1,4,-8,4,-7,-2,9,-10,7,-10,-10,-7,-1,-6,10,-6,9,-1,-2,-2,3,-6,1,-9,-4,9,3,-2,6,3,-7,9,7,-2,-4,-2,8,9,-5,-8,-9,-10,4,7,9,8,-6,-3,6,6,10,8,7,1,-8,-9,-5,-9,3,1,-3,10,-5,-6,8,2,1,10,-7,-8,-8,-4,-7,4,-9,2,3,5,2,-10,3,-10,1,-2,1,-5,-6,3,-2,-3,-3,4,4,-5,-9,9,-6,10,-1,8,-2,-2,-2,4,-4,-6,10,5,9,2,-7,-4,4,-2,4,-8,3,-7,-4,10,7,-3,7,-3,-9,4,8,1,-10,8,1,2,-5,-10,9,-5,7,1,9,10,-1,-4,-2,2,5,8,7,1,-9,10,-2,-2,6,-5,-9,3,-9,10,9,3,-3,4,-1,3,8,5,2,-1,1,3,10,10,10,-9,2,-7,-3,7,7,-1,7,7,3,8,-3,-4,5,-2,-3,-8,-3,10,-5,1,8,7,9,-5,-3,6,1,10,-3,-5,-3,1,-7,5,9,3,7,-5,3,7,-2,-1,5,1,4,-4,8,-5,8,6,-4,-9,1,7,3,-2,-9,9,6,1,7,-7,3,-1,-3,-10,-8,-10,-2,-4,3,1,-9,-7,10,3,3,2,3,9,-2,5,-10,10,-1,9,8,-7,8,-2,-2,-6,6,-3,3,6,-2,9,5,-6,-4,10,6,-1,-1,-5,-7,-10,-10,3,-6,3,10,-2,1,-9,6,7,9,6,-8,-5,-3,7,9,-9,8,2,3,-1,5,-9,3,3,-3,-6,-2,-7,7,8,-5,10,10,1,10,-10,-6,-8,-7,3,-1,-3,1,8,6,-3,-7,-4,6,10,9,-3,-1,2,-1,7,5,5,-10,1,2,-6,-8,4,6,-2,-8,-8,3,6,-6,-7,1,-4,-6,-8,2,7,-4,5,-9,-5,-1,5,-4,9,-1,2,8,-6,2,3,8,3,3,2,-5,6,-9,-10,-1,2,5,6,9,-8,-6,6,-10,-5,-8,-4,3,9,-10,-2,9,-3,-9,6,4,10,4,3,-6,-9,-5,-9,1,-10,-6,4,-8,8,9,-5,9,-3,1,6,-6,2,-6,-2,9,-1,-4,-2,3,10,-5,3,10,6,-1,9,-7,-9,-3,3,-10,-1,-1,-9,-3,4,-5,4,4,7,2,1,10,-6,10,9,4,-8,-10,-9,7,-5,-2,-8,-8,-2,-2,2,4,6,-7,-7,2,-8,-2,7,10,-2,10,-9,-4,1,-3,-9,-2,2,-8,2,2,-4,5,-6,5,9,9,-6,-10,-10,-3,-1,-3,-4,-4,5,-4,-2,2,8,-7,5,-7,-10,1,4,-10,8,-10,8,-7,-9,2,4,1,-3,8,-6,-2,-6,10,-6,-4,6,7,9,-7,-6,2,-2,1,3,5,6,10,10,-9,10,3,1,-2,-3,-9,-5,-9,3,-4,9,8,7,-7,-7,5,2,-5,-7,3,5,1,2,9,-1,-6,4,-6,-3,8,-1,-7,-1,8,-9,-10,-3,-6,-10,-4,10,1,-3,3,-2,-6,-5,8,5,-8,4,-1,-6,6,2,8,10,-3,6,1,-10,3,-9,-3,-4,9,8,7,-6,1,2,7,-7,-5,10,-3,2,-6,-6,3,2,7,3,4,-8,-5,-2,-4,-7,-4,-4,7,-4,5,4,9,2,-5,-2,4,4,2,-4,-7,-5,7,-1,-5,7,-4,-10,6,8,8,-2,2,2,4,-2,8,-3,9,9,-10,6,7,6,1,-7,-6,1,-7,-5,10,3,7,3,3,-9,-10,6,2,-3,7,-2,-2,-4,6,1,7,4,-3,9,10,-6,3,-10,-3,-8,4,7,2,5,1,2,10,-1,2,7,-7,2,7,7,-4,2,6,4,-1,4,4,1,1,-9,3,4,-10,-10,-10,-9,-3,-4,2,-6,8,-6,-7,8,-8,-10,-2,-1,-3,-1,9,7,3,-10,9,10,6,-10,3,-1,-7,-4,-7,3,-5,5,6,-5,-3,-6,8,2,1,7,1,9,-8,7,7,7,6,-7,6,-3,-6,3,-4,10,-8,1,4,9,4,-9,-10,4,-10,10,4,5,10,-4,7,-2,-2,6,5,-1,-3,-10,9,-9,-7,-5,10,-1,-9,7,-10,1,-1,1,4,5,-2,-2,-10,-8,-10,10,-4,-4,-5,-9,9,-10,-10,-6,-10,-4,9,3,-7,-8,5,-10,-8,-2,-5,-9,-2,5,-9,6,4,-4,-6,-4,-10,-1,-10,-4,3,-3,-8,3,3,-1,8,2,9,-7,-2,9,3,7,-1,4,-6,4,-1,-3,2,-7,-3,-6,-4,9,-4,-8,-8,-2,5,-3,-5,4,-2,10,-2,8,-7,-10,-7,-7,-5,2,9,2,-10,-4,2,10,-6,9,1,-5,-4,-9,6,-4,4,-6,-9,-6,3,-3,9,-8,8,-7,7,-5,-9,-1,-4,-5,2,1,10,-10,9,-8,1,-7,5,5,-6,-2,9,-9,10,-3,-5,-4,4,-8,1,3,-1,-8,2,6,-6,-2,-2,9,-5,6,7,-5,-6,-3,-8,-9,-7,-3,2,9,-10,4,2,-5,4,-6,-1,-1,7,-6,-10,-4,-3,8,-10,5,7,-3,-1], dtype = "int16")#candidate|5770|(1365,)|const|int16
call_5768 = relay.TupleGetItem(func_3025_call(relay.reshape(var_5769.astype('uint8'), [363, 2]), relay.reshape(const_5770.astype('int16'), [15, 13, 7]), ), 1)
call_5771 = relay.TupleGetItem(func_3029_call(relay.reshape(var_5769.astype('uint8'), [363, 2]), relay.reshape(const_5770.astype('int16'), [15, 13, 7]), ), 1)
uop_5791 = relay.atan(const_5770.astype('float32')) # shape=(1365,)
output = relay.Tuple([call_5755,call_5768,var_5769,uop_5791,])
output2 = relay.Tuple([call_5756,call_5771,var_5769,uop_5791,])
func_5799 = relay.Function([var_5769,], output)
mod['func_5799'] = func_5799
mod = relay.transform.InferType()(mod)
var_5800 = relay.var("var_5800", dtype = "uint8", shape = (726,))#candidate|5800|(726,)|var|uint8
output = func_5799(var_5800)
func_5801 = relay.Function([var_5800], output)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mod.get_global_var('func_4304')
func_4305_call = mutated_mod.get_global_var('func_4305')
call_5830 = relay.TupleGetItem(func_4304_call(), 0)
call_5831 = relay.TupleGetItem(func_4305_call(), 0)
func_3327_call = mod.get_global_var('func_3327')
func_3328_call = mutated_mod.get_global_var('func_3328')
call_5838 = relay.TupleGetItem(func_3327_call(), 0)
call_5839 = relay.TupleGetItem(func_3328_call(), 0)
output = relay.Tuple([call_5830,call_5838,])
output2 = relay.Tuple([call_5831,call_5839,])
func_5850 = relay.Function([], output)
mod['func_5850'] = func_5850
mod = relay.transform.InferType()(mod)
mutated_mod['func_5850'] = func_5850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5850_call = mutated_mod.get_global_var('func_5850')
call_5851 = func_5850_call()
output = call_5851
func_5852 = relay.Function([], output)
mutated_mod['func_5852'] = func_5852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3263_call = mod.get_global_var('func_3263')
func_3265_call = mutated_mod.get_global_var('func_3265')
call_5924 = func_3263_call()
call_5925 = func_3263_call()
output = call_5924
output2 = call_5925
func_5929 = relay.Function([], output)
mod['func_5929'] = func_5929
mod = relay.transform.InferType()(mod)
mutated_mod['func_5929'] = func_5929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mutated_mod.get_global_var('func_5929')
call_5930 = func_5929_call()
output = call_5930
func_5931 = relay.Function([], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_5942 = relay.TupleGetItem(func_2681_call(), 0)
call_5943 = relay.TupleGetItem(func_2682_call(), 0)
func_4508_call = mod.get_global_var('func_4508')
func_4511_call = mutated_mod.get_global_var('func_4511')
const_5963 = relay.const([-5.059383,-0.765716,3.840360,7.672954,5.854922,-6.315923,-7.858500,-2.511467,8.458254,-8.328042,4.407161,-3.000335,6.975011,2.459612,5.680273,-5.004447,-1.033328,7.160221,3.455718,-9.607675,8.120038,7.381750,7.008041,0.571867,7.023103,1.831013,-0.820838,8.761897,-7.232744,-1.268858,0.802910,6.268634,-1.715934,6.452614,-1.400522,-4.301317,3.834359,6.440551,-9.002195,5.928113,-2.915347,-5.200192,-3.947019,6.782089,-3.904803,-6.487428,-7.671160,6.813860,-9.594176,-5.634259,8.916480,6.746020,3.926506,5.294882,5.351177,6.764041,-0.331079,-2.067991,1.077195,5.407035,2.506483,6.832459,8.747617,-6.236845,-8.330535,-9.712215,-7.849869,-5.880763,-7.678486,0.822710,-4.455458,-5.048470,-4.802431,6.808008,-6.177524,6.111944,2.146836,1.863797,-0.699268,-5.071652,-3.096544,-7.616831,-2.522745,-1.355645,-1.882056,-0.381259,1.754806,1.075096,9.008848,9.409400,5.945438,-3.834121,-8.643134,-1.789689,9.978193,1.191754,3.474296,-5.454385,-3.721702,9.174695,-5.054643,1.002502,-8.912433,6.865449,1.089933,4.815445,-0.399809,4.771222,9.042623,9.200659,2.731774,-9.420796,-3.175218,-8.611653,-6.190421,2.360375,-8.366658,-1.159738,-9.056728,-2.692128,-0.229247,-2.287889,2.092753,3.075019,6.655881,-2.654107,8.526798,-7.930641,2.610269,-1.382195,-9.383081,8.049066,-3.645084,3.319941,9.204188,0.952848,0.849397,-6.048896,2.591895,5.157565,-4.142570,1.640893,-1.157769,5.667889,8.239461,8.775542,-4.587533,-2.502566,-1.370628,6.982182,2.341626,-4.811499,-3.552571,-8.159606,-6.918961,6.973931,1.653984,0.309924,-6.388988,8.075418,-1.183552,8.847392,7.606658,-9.308726,0.705603,-9.188489,-0.890505,7.315794,3.826187,-7.994598,9.662552,7.580261,4.020855,-2.151809,9.430235,2.671569,9.027286,-8.257738,-7.196772,-5.212059,-1.249184,-5.494487,5.518070,-4.526741,1.379460,8.376490,-8.451243,2.011072,3.024213,6.256635,-3.631395,-7.102205,2.778619,-3.743953,0.496321,0.141102,9.229529,-9.357899,9.999028,-1.844838,-6.565724,4.199981,-6.468202,-6.096973,-6.272626,-5.836154,-1.335198,-7.142764,-8.946369,0.597749,-4.116728,3.522213,-9.741654,-8.160143,-5.646850,2.145017,-3.434998,3.975783,6.741258,-2.272513,2.845844,-1.754409,-1.745239,1.854403,-8.385249,-0.407529,6.450346,-2.330961,-7.938022,2.247937,4.210014,5.378073,9.692536,-4.551669,-1.313459,6.916885,-9.481480,3.199904,-6.747116,2.312672,3.824554,6.516574,6.385468,-4.526288,0.795665,4.493190,-4.925088,-1.598678,9.689049,5.165131,-0.943622,-4.492900,-3.708474,4.447473,-2.241618,4.742042,-9.521205,6.225754,6.104201,4.305710,0.292123,9.306374,8.268239,-4.049286,9.425087,-2.083022,-1.121271,-2.956870,-8.210989,9.995971,-8.036428,-0.806927,-5.174382,-7.375368,-9.748529,-4.766346,-1.179973,1.247712,8.592499,4.756950,4.127227,-3.710478,-5.399500,3.167797,-9.576263,3.451055,8.561910,-9.474471,2.539226,1.439383,-5.541392,-1.029202,-0.196427,2.939248,2.525485,-3.519122,-2.648524,-4.329387,3.312818,-8.420300,-8.971153,-0.968699,8.174280,5.016334,1.673973,-2.696366,-6.537817,0.982384,9.213566,9.653033,8.024999,3.571208,-0.765101,-1.476567,7.097169,-5.604200,-1.155478,-3.039539,3.088931,5.278873,-8.983617,-5.973234,-2.012465,3.228397,-6.938010,-3.089876,-4.331295,-9.203068,1.501007,-6.708891,0.982663,-0.194931,1.552692,5.307868,0.205253,-2.664174,9.275019,-3.265570,-6.185300,6.273223,-2.911360,-2.603671,9.380981,-0.183322,3.153007,-0.945470,2.036480,-9.083114,7.486510,0.687025,-2.299725,-4.406684,-8.177014,9.391796,3.191909,-0.722242,-9.424947,-0.716021,0.396280,-4.660547,-0.707684,2.699228,-2.033737,-5.005298,0.192465,-5.710749,5.677902,5.686834,7.927321,-7.463157,5.103383,9.689160,9.883274,-2.065124,-2.370870,8.786579,6.370367,-0.534328,6.767110,3.468873,-8.006813,-4.301977,-8.159543,0.693687,0.659590,-1.691324,-9.532657,-1.636383,-3.016888,-2.188190,-5.202130,3.345164,-5.281075,1.406492,-3.891599,3.404368,-5.844764,5.704348,9.566793,-2.371612,-4.045255,-3.530841,-9.346672,5.639988,5.625842,9.038052,3.205559,3.214239,-3.774556,3.180929,3.340356,7.436352,6.968305,-8.705912,-1.874024,8.471941,-8.380046,9.777367,-3.613103,2.456811,2.862691,6.404783,4.171260,-0.443870,2.969952,-8.534658,-9.152257,-0.534773,-0.201960,4.157216,-9.358117,-0.783556,-5.881447,6.163785,-1.861942,-7.338820,-0.313345,-1.085390,-4.361228,7.752431,2.992201,-2.298337,-6.730040,8.839443,3.925612,3.061615,6.932582,-7.317517,6.954029,-8.398997,-7.331620,1.986490,3.243194,-6.133993,2.550087,6.168416,-8.588111,-2.047902,9.213625,0.113418,-4.430832,-5.901519,-5.104091,5.533087,-1.814592,7.168672,-0.511357,3.871386,9.765237,6.843581,-3.151743,4.808306,-1.907196,9.474719,4.320668,2.807445,9.273963,8.197422,-4.540208,9.467708,-2.679201,-6.877354,-3.554976,-7.300171,2.013335,-2.634927,8.520255,-6.587073,5.161503,5.904886,7.451428,5.964736,-3.953172,-4.360424,0.622698,3.961743,7.034085,6.139490,-4.779273,8.535863,6.624347,9.133136,5.324381,1.811971,4.980427,6.968311,3.773261,9.347604,3.248496,-0.902877,8.664235,-2.124609,3.057443,-1.924178,-2.144321,-9.337084,7.071850,-9.859015,4.478310,-8.696093,-7.524154,4.889622,-8.721611,5.334879,2.271126,-1.481044,1.055034,5.426505,-8.095651,-2.908962,9.454049,4.852414,-3.313129,9.340160,5.479223,-9.874923,9.189733,2.665169,-5.958398,5.450506,-7.959697,0.822718,-4.161274,1.575228,-4.927630,3.810485,-4.185829,9.144370,-0.593621,-3.170003,-9.097357,6.239732,0.422474,6.920079,7.453594,6.717725,-7.373369,-6.756802,8.014920,-5.512079,9.342309,7.841766,-5.317829,2.412626,5.570751,-6.455061,-8.705395,5.911715,-1.939730,-6.967600,0.214100,4.025158,-5.517220,-6.322149,9.540524,1.013622,3.215108,-9.395897,1.444517,-4.656247,-9.364095,-9.241585,5.700063,-3.834936,-1.159738,3.675140,-5.048552,-5.732085,-2.705255,-5.869862,1.033135,2.264898,-6.221623,-2.330098,0.548067,-2.809004,2.968996,-6.584998,-0.034613,-0.584093,3.172153,-2.849498,-0.583176,-9.588858,9.634171,6.247805,8.853319,5.075589,-1.003429,5.742006,5.152078,1.499893,4.402986,4.556821,-7.327139,-8.786969,6.627470,5.065417,8.970370,3.931465,-0.240818,6.026173,9.365448,0.839309,-3.186290,2.985016,-2.115277,-9.757219,-5.939120,6.380831,4.796018,3.899779,-2.692658,5.683469,-6.542069,2.752413,5.787077,-8.520153,1.830625,-7.057985,2.624337,4.017789,0.290417,2.064777,8.026711,-2.997632,-2.296429,-8.971447,4.921597,5.254289,-2.879655,-6.960208,6.453805,-7.754272,2.090860,2.582810,-6.267735,-4.390520,-0.856362,7.094089,0.741571,0.049427,1.443771,-0.370991,3.612255,2.000627,-1.520103,3.936392,-7.348847,5.754886,-4.344126,-7.775154,4.079405,-5.924757,-1.318503,-9.455798,-3.608166,-8.405941,2.790589,-9.959564,-7.061321,-9.657567,2.258803,-2.317436,3.088108,4.803529,-7.719726,-6.604207,2.222252,-4.956428,-6.733350,0.365462,-8.679234,7.021762,-4.433474,-5.719923,5.144165,-3.873362,-7.420324,-6.713978,-1.134856,5.765392,-9.838788,-5.573573,7.903828,5.696490,9.802876,-5.270541,-8.428430,4.776444,5.945468,7.923320,-1.361501,2.119313,3.378986,-6.546490,-5.583784,-4.888745,4.448433,-0.113296,7.450004,3.596931,-7.989604,-8.577405,0.535063,8.563376,7.925039,4.107482,-1.860103,-7.438761,-2.362424,5.534886,8.754999,2.833954,3.342096,3.921974,-3.423566,8.071480,-4.750670,5.284653,-4.968172,-3.260658,-3.241582,6.938320,-2.020225,-5.906131,5.261501,5.920126,0.081376,0.464349,-6.250506,-3.271368,2.717036,1.002426,9.377461,7.130186,-6.634885,-7.977986,4.196252,8.061802,5.893456,1.014143,-9.102839,2.192636,2.546612,-8.063204,5.667711,-4.101233,-4.466568,-3.595696,1.147068,8.304771,8.487984,-5.955992,-2.287673,3.409346,8.006061,-5.168155,5.075820,1.033533,-0.650252,8.221645,-3.375923,9.330854,8.199610,4.741264,8.258373,-7.974894,-0.149213,-8.094234,5.986494,-0.367185,-7.922952,-6.571316,2.125618,-2.323938,2.027225,6.223732,-3.939382,-8.256560,3.662684,-6.422987,1.127599,6.538912,5.320592,-7.374759,2.655577,4.510004,0.261078,-5.955969,0.143091,-7.195534,-9.713828,8.849945,-5.402206,-2.911687,6.934461,2.158295,-1.111516,-2.133410,-1.567102,-9.377320,3.746785,3.375264,6.305363,4.657657,-5.465335,3.151439,-0.849883,6.094124,-8.511625,-6.038507,-0.953859,-0.218874,-9.314200,-4.567557,5.771934,7.985395,-1.713475,6.901066,-2.440658,8.528956,7.549542,0.558732,4.253672,-3.473626,-3.996525,0.540587,-8.125360,4.938271,-1.125530,1.511919,-8.962492,-5.171823,7.366738,-4.850589,1.223875,9.379611,-1.335831,-7.456122,4.481795,-9.378535,6.944590,9.479053,9.399126,-6.302225,-0.289540,-3.022590,-5.109518,-3.917465,-5.313286,2.407405,-3.562262,-9.021142,5.532149,-2.807829,-5.346424,4.219571,-1.249434,2.397919,8.868538,7.558275,-8.892021,1.999984,-2.845110,-2.795387,-2.053306,-2.291796,-6.840323,-6.564742,0.488358,6.153692,8.808268,0.521106,2.873732,5.763868,5.056562,-3.814917,-8.256368,-8.569902,7.053252,-9.699929,6.004320,-8.435919,1.991823,0.291317,8.087743,-9.823478,6.893790,-1.820891,8.141308,-6.722884,-1.612215,-7.952014,-0.771741,-4.533918,3.851730,0.828690,4.942563,4.610771,-4.483783,-1.340167,8.013795,-5.466956,-2.056383,8.815445,4.508340,-1.609683,-6.303622,-8.034265,-0.326996,2.510389,6.901413,-8.576525,-9.366393,-6.877522,-4.137654,1.510865,1.046243,4.008199,-2.739220,0.018742,-5.133839,-9.528722,-6.060174,5.310188,4.706983,2.641875,3.588150,6.012418,1.774832,9.930239,-8.635749,9.635274,-7.859760,-6.709525,7.097524,-1.462887,4.395341,-7.426229,-7.929171,-6.777779,-5.859927,-3.866634,3.333326,-9.530536,0.982891,1.488481,-8.001101,-1.379617,1.857053,8.501893,-2.702892,-0.476767,-1.599464,-6.483556,-5.111824,-4.521119,-0.301903,-4.844437,1.418877,-7.137762,-6.771238,-8.704329,-2.401511,-1.766621,9.473236,-2.820214,9.204661,-8.166093,2.359500,-9.646918,8.931399,3.832207,-6.089347,-4.171968,-9.211980,-4.284268,-9.397149,3.355008,2.549195,-9.997539,2.799195,4.229504,6.677795,0.849763,-9.072496,-6.627211,-0.883903,6.177858,5.143909,-0.966866,-3.139682,8.647498,-7.245367,1.214853,-7.837085,-0.132246,-0.899365,-5.291052,0.285581,-7.251096,-3.092816,-8.333405,-3.659446,6.179933,5.058887,0.268397,-0.024910,-0.980529,4.354821,9.421439,5.964705,-5.128563,6.029984,9.812388,-6.336300,-1.842239,-0.189981,4.756398,-9.154534,-7.558487,8.309377,1.933287,-5.385819,-4.492173,8.482983,3.558339,9.083245,-8.481546,6.428027,-3.066080,0.717416,-1.587367,4.055191,6.606983,-1.129108,2.648248,5.049597,6.068902,-0.999347,-0.086721,6.424924,-9.983665,5.180662,2.419539,-9.204345,-6.993039,-1.501347,1.571465,-3.535282,3.509103,-8.910462,-4.233263,6.967250,-3.129634,7.845027,4.933934,-9.893815,-0.712967,-8.915086,-1.938752,4.189946,7.153630,2.909613,5.145712,2.359683,-4.678386,7.042692,4.035074,9.206509,-5.165018,-3.761051,9.061867,3.590984,-9.495505,-1.631726,-5.392407,1.271604,7.425532,-1.457812,4.285458,-0.640402,9.267367,-6.086706,-0.493595,-2.402004,3.588112,1.029783,-9.315574,-7.984878,-6.616217,5.680953,-8.204096,-0.735067,-9.469877,-9.829864,-9.030362,1.578270,-9.252537,3.822874,2.079227,2.236262,-4.516668,-7.383488,1.966320,-3.301831,3.878255,-5.911183,-9.346797,5.105711,4.300422,-4.945698,-6.824112,9.900740,-4.741013,-8.423269,2.063576,-0.028670,-1.282509,-4.145369,6.909609,1.153986,-7.099361,-8.743366,3.668321,6.286703,5.506053,-8.983772,-7.305693,-4.786591,-1.052581,-7.706784,-3.330842,-8.689767,7.106755,-2.359423,6.902933,5.239899,4.003425,-1.146045,-5.211582,9.501638,-3.938284,1.973472,3.934722,1.178897,-6.422764,7.941159,-7.635566,2.865469,-5.784848,-7.194273,-9.264968,-5.866727,3.693249,-7.943051,-2.538561,9.271941,2.425767,2.830134,-5.193939,7.472949,9.307641,6.319968,-4.198713,7.129660,-3.792263,-0.199960,-2.933200,-9.704129,7.184804,9.745434,-4.834759,-4.397422,3.496179,-7.566215,-6.034317,2.465183,3.837005,8.817134,1.426650,-6.305000,-2.590706,-9.307676,8.982763,-0.881445,5.059572,7.559952,-7.421719,-5.481590,5.704269,0.243355,-7.937938,3.606962,7.228896,8.444261,-6.594972,-9.057972,-3.402407,8.260176,2.044331,-3.626923,7.120698,-7.962998,-3.044234,9.938603,-8.575503,0.943583,2.412135,-6.411285,-5.958137,-8.035459,8.562676,3.542022,7.870811,-1.005926,2.634214,-1.110466,-5.740199,-0.031923,5.577759,-0.246984,5.930629,-3.338421,8.788228,6.045579,-8.694758,-7.595237,0.352993,3.520864,-6.460740,1.704047,-4.580444,-2.506857,7.949113,6.823008,-0.451851,-7.475306,-5.325266,5.005560,0.220278,0.103982,-1.335442,1.617035,2.488852,-3.515028,-2.419207,1.684405,5.189821,4.197222,7.332337,4.304851,0.221028,9.948896,-3.537126,3.015626,8.788217,6.776968,-5.497035,7.940395,6.089374,4.060032,-2.270359,9.541551,-1.482969,-8.065761,7.869190,3.000852,2.861451,-0.396560,3.127381,4.500193,-3.577003,-8.558282,7.062139,4.012939,-4.021328,4.702123,4.641795,-6.207792,6.937505,3.071565,0.735604,5.421107,7.952605,-4.766506,9.731256,-6.950086,3.438024,-5.852900,-1.624596,8.046887,-3.649432,8.444794,2.652750,5.303720,-7.721228,-8.587370,-0.899407,-2.726397,6.848522,-1.669416,-8.778109,0.244368,-2.667935,7.368453,8.321699,4.663141,5.674526,0.003911,-7.483847,8.457139,-6.544063,-1.487904,-0.489701,-0.756172,-8.056039,-8.390128,3.490673,-6.733061,-3.439678,5.204915,-1.938604,4.442255,1.851553,3.990190,-5.172456,7.513615,-7.006871,8.477516,-6.368411,-9.774158,-5.731136,-5.972046,-8.711763,8.877526,-4.427381,-7.179790,7.250369,-1.221188,8.219416,0.772244,-1.835550,-3.929730,-1.506234,0.085666,5.479647,6.497902,6.550009,-5.070560,-7.697562,-4.436587,-6.040521,-9.495762,-5.017182,-3.384920,-6.419717,7.015762,-5.635118,4.128768,8.783564,-9.031899,-6.071434,4.895707,4.632736,-9.937474,4.806465,-8.585890,2.063594,-8.743805,2.506831,0.755142,-8.501690,-1.719855,-6.022577,2.760529,9.552519,4.885664,-1.822310,1.909838,-2.676257,6.261795,-3.229086,6.726827,-4.347283,8.618317,-8.912309,0.776375,-2.755604,-6.198371,8.296495,-1.913623,5.372136,5.293590,-1.353293,2.562567,-5.358274,2.861234,-6.870557,-8.906799,-7.787245,-2.919984,9.323828,9.014389,3.313257,-7.422454,4.110424,1.358760,-4.152556,-6.178995,8.282116,1.384015,7.207149,-7.392423,4.637754,-6.618456,6.051314,8.276930,4.735660,-9.229833,-1.763828,1.007924,6.579257,-3.646058,1.369551,3.159538,-8.783647,-9.009168,2.894731,9.732838,-6.510213,-5.042620,-5.836355,-2.016002,-2.323071,-7.757310,6.447070,-8.382928,0.335589,9.272523,-2.120737,7.931246,5.939401,-1.309673,5.634070,-9.202452,0.816644,1.409451,-3.068767,8.985439,-1.660075,1.003500,-4.102936,-6.412273,-6.376891,-0.073261,-0.080031,4.254066,-2.969350,-3.643572,8.710565,6.354108,8.174884,-4.681025,-6.142112,-3.107029,1.314382,-3.376026,-1.632208,7.013986,-7.261873,2.291965,-3.269057,7.306178,-7.730677,-3.825728,-2.529533,-3.390529,-9.579903,2.694137,0.249108,2.489690,4.957599,-0.219181,-4.126457,-4.779044,6.475878,-6.558197,-2.367481,-0.293262,9.440036,-4.886520,-8.576713,-3.485521,2.890696,6.715022,2.232504,7.361334,3.481011,-1.922126,-7.581199,-2.827877,-5.197330,4.110163,-8.624916,0.527173,-5.368490,1.230650,6.222181,1.034048,2.527585,3.141487,9.987975,1.569542,-3.963569,-4.070158,-7.307461,-0.823521,6.398356,1.736376,-2.917371,-3.660967,-9.100041,6.919953,3.438607,-0.026085,-8.637652,5.678843,1.560990,-9.236162,9.914278,-3.381396,2.400641,-3.338336,-7.408225,9.646619,2.292499,7.565069,5.585609,6.471908,2.735021,-6.098432,3.857597,8.110499,-2.985334,-6.747127,-6.699005,-7.775047,2.130833,1.430762,-9.600935,-3.131860,-7.374859,-1.941990,9.284143,-3.359605,8.814170,-4.446312,-3.643896,8.381407,4.859595,-4.294550,-2.573663,4.624959,-3.726645,1.326865,9.646464,-1.891248,8.628097,-2.372565,-7.224266,4.413019,5.677094,-0.163876,8.063676,-0.291422,1.502884,3.026767,2.228696,5.151187,8.026592,5.624734,6.058935,-0.004323,-4.767670,3.094670,5.991786,-2.744689,-6.124218,-4.205639,5.517222,-9.236454,-7.039773,-8.771978,-3.297439,9.249195,7.561149,5.331291,-2.384531,8.404044,-8.555086,6.773924,-3.362429,-1.796282,-3.085911,-3.214181,8.068051,-1.231525,-1.639914,-1.250877,-9.742464,-5.278895,-6.253624,-7.616209,1.206221,2.031854,-0.620511,1.984486,-4.125472,1.873599,1.466900,-4.531055,-3.064836,-0.706645,-4.701938,-3.251758,-5.888641,-3.176608,-9.865950,7.453291,-2.090287,5.239134,1.303765,5.260523,-9.078856,-5.399968,0.413070,-5.969310,4.538106,-0.165649,1.450307,-6.472228,-1.268314,-7.482122,-9.367920,-8.463206,-5.205811,1.214101,2.254445,-1.494436,-5.579416,6.305742,1.099805,7.294351,-5.348989,-4.465220,-9.468338,5.364077,6.998378,3.653032,0.655942,1.766071,6.353075,5.327877,3.442141,-8.071221,-7.892225,8.610387,-1.466380,-7.370230,1.719986,-8.766251,3.526717,-7.133054,-7.778551,-7.821005,8.720890,0.981328,5.728070,4.860568,-5.007942,-8.328254,3.162039,3.789700,-1.870338,-6.900444,-3.888440,-9.145874,-6.151793,1.888725,-2.512674,-1.018237,9.027946,0.653189,-8.208692,4.152019,-4.451562,1.778895,-3.311752,7.770040,-0.889245,-8.950994,9.957472,9.907753,6.202725,-4.555886,-0.819733,0.458913,-3.429845,-6.798547,-7.321763,-5.050904,5.347681,-8.377045,-9.802780,0.709428,-3.167708,0.590131,-5.142096,4.976287,1.705956,6.455673,1.070925,4.106310,8.416486,-1.572968,-8.411134,4.898540,2.835849,6.182097,0.675925,-6.711166,-2.367401,3.905620,-4.228973,-3.130361,-9.049091,-9.989529,-8.554579,-0.200044,9.372181,6.686767,9.212249,-1.044145,9.527089,-6.275935,-9.877532,-9.012402,-3.908654,5.350793,-5.997499,1.028795,9.867438,-2.769571,5.303123,-8.228241,-7.839125,-0.477820,-4.443762,-8.824935,-9.420514,-1.301783,3.719774,1.457071,6.888434,2.107818,-4.335308,-1.221021,-7.531722,-4.684671,7.260935,-7.918822,-1.845882,0.470904,6.385702,-6.435057,-9.355134,-6.504171,2.318266,-6.589546,-6.280029,1.050674,-5.528188,2.262845,-7.785591,-8.022781,-7.088827,7.315189,-4.603384,6.525615,-6.199634,0.334109,-1.541486,0.264522,-6.126281,-7.193858,3.506262,9.011898,-5.282867,-5.745152,-0.692278,-1.594815,2.013265,-7.299065,1.136365,-9.115018,2.902708,-0.342980,0.092892,-4.597588,7.642973,8.185628,-9.356071,-3.540807,1.625074,5.634514,-0.213759,-1.209074,-7.509885,3.668352,-0.290180,2.943332,4.368928,8.690203,7.328555,-4.881817,7.517885,2.981180,2.500224,-4.389311,-8.858066,-6.984078,5.748739,1.020947,2.991996,7.771717,-0.385891,-9.747662,5.070957,-7.879151,6.573382,3.392808,-9.626218,-1.063189,2.106222,-9.967926,-9.871112,-9.757899,2.850123,0.099084,-4.115669,-9.680205,-5.881993,-8.156534,3.256934,-8.411427,-7.439466,6.821544,4.198458,-9.942778,-6.195520,-0.907775,0.970991,-2.245685,-8.420916,-4.393912,2.269558,8.248085,8.311059,2.405812,2.262135,2.921646,6.104793,-5.626658,-1.981619,7.173082,-2.526948,7.538664,-5.828627,-2.755574,-4.062975,0.870437,-0.403764,4.348050,9.734898,-1.184924,-1.177892,-3.550540,-5.317157,-9.500161,7.913846,5.564289,-8.269567,2.438454,-0.947939,1.048448,-8.972966,-3.025296,-2.830231,-1.772477,-2.293560,-9.085910,-8.590915,9.442129,8.754375,8.485970,6.295291,-3.835544,-7.212549,5.710516,-4.795036,0.966796,5.690751,9.940157,2.510944,3.761343,-1.081500,-4.674461,-9.488579,1.554663,-9.144310,-2.610545,6.773620,3.351371,7.297921,-6.781217,0.899818,-0.361066,-6.015818,-4.015736,-2.986086,3.838346,6.369002,0.838645,3.160009,-6.292994,-5.445109,-1.637800,2.291333,1.615319,-2.580485,-3.359524,4.006546,-4.274020,-8.774677,5.866801,3.944328,2.541846,-4.569986,-0.651978,8.937545,4.543906,-0.773827,2.079404,7.207333,-3.169001,4.816882,-5.900513,8.138347,-2.598250,9.997594,-6.562916,-1.061614,-3.160585,8.420791,2.193036,0.979249,-7.535706,-9.544977,0.198321,-7.471598,2.354015,4.815875,-4.130234,-6.876731,-8.258817,-1.882924,-0.705887,9.815318,0.734750,-3.088043,8.067511,-0.526158,6.869976,-2.720392,-2.540255,-9.597135,-3.325022,3.667492,-7.826035,1.357409,-3.991158,-3.125518,-1.197961,4.767014,-9.238532,-2.294518,8.938783,4.850987,7.417005,1.651635,-0.077946,0.846341,1.613869,2.905992,2.862898,1.183359,-3.171019,-4.009911,9.076174,-7.664399,9.715550,1.434570,9.027027,7.954029,-6.196550,9.688055,-7.571371,2.391520,9.571438,-8.803526,9.082993,-6.818167,1.886680,0.845681,-3.287084,-0.490182,-6.661718,-5.855189,-4.697636,7.974303,7.008696,4.627657,5.193508,6.361406,6.353406,6.411758,4.549515,-4.683651,1.162404,3.510802,8.656955,9.349511,-0.190987,-8.689038,-7.279975,6.295204,-8.411310,0.833225,-7.421886,-1.245687,-2.608774,-1.761914,-8.776668,-6.384477,-2.666086,5.970862,0.669042,-1.462528,1.117012,-6.406664,-4.438275,6.778097,-0.790336,-5.602699,2.172664,-1.195687,9.722465,-7.931993,0.974076,8.346636,-9.203637,-5.331547,9.364467,9.317992,4.336191,-6.118119,-3.610596,-4.651716,5.327204,5.242650,1.287776,-5.653278,-8.160001,-5.461452,-5.670828,-5.535958,3.939305,-9.530977,0.600468,5.453284,-0.008104,-5.849751,8.784024,0.990482,6.936629,9.808426,2.121923,0.119934,-7.910744,2.863355,8.101775,-2.084061,-3.612513,-9.181754,-4.197129,-5.419849,3.065302,8.744478,6.890422,1.930306,8.155170,-0.500902,4.313498,3.073248,0.700560,-5.266490,-2.187675,2.615034,2.783075,-4.422983,3.055591,-4.518431,9.925995,9.033413,0.444222,3.708675,-1.911444,9.932050,-4.017831,7.747428,5.346835,-8.505757,-8.870811,6.904859,1.006299,-9.301620,-1.673556,-2.470772,-6.390833,5.352714,-2.377153,9.379094,-6.297730,-9.051886,5.208944,-9.086656,9.703002,-4.109737,7.667902,-6.036818,9.096841,1.198655,4.166273,3.849289,-1.627314,0.836627,6.981550,0.462848,3.137712,-8.771876,6.574976,-7.327824,-4.870189,2.569915,-4.672235,-8.787785,-3.488855,7.584407,8.586116,4.990215,4.903152,2.553057,5.137178,-1.352815,-1.537876,9.774945,-2.398601,0.804985,-8.536335,-3.405920,-7.304628,-0.371626,-8.616370,-3.914549,-8.765913,6.219203,1.295355,7.535544,1.949618,5.431792,-2.787614,-3.622548,-2.931817,7.715502,-1.911065,4.227302,6.118563,1.922983,-4.313360,6.181601,0.263764,-4.033897,2.910198,-7.918947,-0.229325,5.478577,-6.817910,4.717449,0.117142,-1.060061,-4.351570,-4.433462,1.179562,7.964148,5.139703,8.457674,-6.822742,8.691026,5.911143,-3.722208,-9.761140,-3.715146,9.917674,7.117424,4.734651,-7.900097,-7.506289,0.934544,-4.856215,4.297384,6.130519,2.106740,-3.643075,-6.559578,-1.788165,6.620109,-1.460193,3.311299,0.434896,-9.046291,-9.954435,-4.719462,0.505386,8.523248,3.218906,8.352557,9.789409,-7.282644,-5.672439,3.649553,5.640643,4.104419,-3.293683,-5.129315,7.917925,-0.248894,7.269566,-2.849382,-1.391296,3.698261,-1.748713,0.238879,6.307681,-8.415411,-9.618562,-0.463577,-2.879197,9.363229,-3.226478,5.199471,-3.807358,-6.379012,-3.001381,-1.010638,-6.481859,-5.943560,-9.296766,-4.517570,0.822950,6.312485,-1.800363,-5.754334,7.260696,6.806334,2.088734,-6.243821,9.014073,5.094476,5.483901,-7.381635,3.825590,1.574193,-1.001298,1.721751,-9.998218,9.492084,-5.931532,5.388404,1.390541,-1.314731,8.239160,-0.370525,8.887166,6.166016,3.187965,-9.394843,-6.929323,8.417387,8.348699,6.598144,7.112788,-0.619866,-8.750364,-3.048532,-1.582722,-6.773665,6.251701,-4.857745,-3.335570,5.508879,-7.524606,8.209354,8.141650,8.294209,2.648131,-3.497031,-5.432699,0.108931,8.844241,-2.004597], dtype = "float64")#candidate|5963|(2352,)|const|float64
var_5964 = relay.var("var_5964", dtype = "float32", shape = (910,))#candidate|5964|(910,)|var|float32
call_5962 = relay.TupleGetItem(func_4508_call(relay.reshape(const_5963.astype('float64'), [2352,]), relay.reshape(var_5964.astype('float32'), [910,]), ), 2)
call_5965 = relay.TupleGetItem(func_4511_call(relay.reshape(const_5963.astype('float64'), [2352,]), relay.reshape(var_5964.astype('float32'), [910,]), ), 2)
uop_5974 = relay.exp(const_5963.astype('float64')) # shape=(2352,)
uop_5977 = relay.log2(const_5963.astype('float64')) # shape=(2352,)
bop_5983 = relay.mod(uop_5977.astype('float32'), relay.reshape(const_5963.astype('float32'), relay.shape_of(uop_5977))) # shape=(2352,)
func_1157_call = mod.get_global_var('func_1157')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_5990 = func_1157_call(relay.reshape(var_5964.astype('float32'), [7, 10, 13]))
call_5991 = func_1157_call(relay.reshape(var_5964.astype('float32'), [7, 10, 13]))
var_6020 = relay.var("var_6020", dtype = "uint16", shape = (2352,))#candidate|6020|(2352,)|var|uint16
bop_6021 = relay.logical_xor(call_5962.astype('int64'), relay.reshape(var_6020.astype('int64'), relay.shape_of(call_5962))) # shape=(2352,)
bop_6024 = relay.logical_xor(call_5965.astype('int64'), relay.reshape(var_6020.astype('int64'), relay.shape_of(call_5965))) # shape=(2352,)
output = relay.Tuple([call_5942,var_5964,uop_5974,bop_5983,call_5990,bop_6021,])
output2 = relay.Tuple([call_5943,var_5964,uop_5974,bop_5983,call_5991,bop_6024,])
func_6041 = relay.Function([var_5964,var_6020,], output)
mod['func_6041'] = func_6041
mod = relay.transform.InferType()(mod)
var_6042 = relay.var("var_6042", dtype = "float32", shape = (910,))#candidate|6042|(910,)|var|float32
var_6043 = relay.var("var_6043", dtype = "uint16", shape = (2352,))#candidate|6043|(2352,)|var|uint16
output = func_6041(var_6042,var_6043,)
func_6044 = relay.Function([var_6042,var_6043,], output)
mutated_mod['func_6044'] = func_6044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5850_call = mod.get_global_var('func_5850')
func_5852_call = mutated_mod.get_global_var('func_5852')
call_6055 = relay.TupleGetItem(func_5850_call(), 1)
call_6056 = relay.TupleGetItem(func_5852_call(), 1)
output = relay.Tuple([call_6055,])
output2 = relay.Tuple([call_6056,])
func_6082 = relay.Function([], output)
mod['func_6082'] = func_6082
mod = relay.transform.InferType()(mod)
output = func_6082()
func_6083 = relay.Function([], output)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6163 = relay.var("var_6163", dtype = "float32", shape = (2, 7, 15))#candidate|6163|(2, 7, 15)|var|float32
uop_6164 = relay.atanh(var_6163.astype('float32')) # shape=(2, 7, 15)
func_3775_call = mod.get_global_var('func_3775')
func_3777_call = mutated_mod.get_global_var('func_3777')
call_6168 = relay.TupleGetItem(func_3775_call(), 0)
call_6169 = relay.TupleGetItem(func_3777_call(), 0)
bop_6175 = relay.subtract(uop_6164.astype('int16'), relay.reshape(var_6163.astype('int16'), relay.shape_of(uop_6164))) # shape=(2, 7, 15)
func_4096_call = mod.get_global_var('func_4096')
func_4103_call = mutated_mod.get_global_var('func_4103')
const_6180 = relay.const([-2,-8,-9,5,-3,5,5,10,-2,6,9,8,10,-6,-10,5,-6,-6,10,-6,8,-8,-5,-1,-3,-3,-9,-4,3,-5,-5,-7,-7,-5,2,-9,3,5,6,-3,5,3,-6,-4,7,4,-2,-2,-3,8,-10,-8,-4,1,9,9,9,-7,-9,6,10,7,-10,-5,-7,8,9,10,-9,5,4,-1,8,-2,8,-4,-7,-2,-1,1,9,-7,7,4,-8,-3,3,-9,-1,7,-6,-8,1,3,-9,1,-6,-6,6,9,9,8,6,-2,-8,-4,1,1,-4,-5,9,-2,-4,9,10,-4,10,10,1,2,-2,-6,-10,6,-9,8,-7,-4,1,-1,-1,-10,10,8,-2,1,-7,-9,-1,-1,-4,-10,-9,1,8,-9,-8,-4,8,10,-2,-8,-9,8,-9,-2,-7,-5,-7,-6,-10,-7,-5,9,-3,-5,-1,6,9,-9,2,-3,-4,-3,9,-7,4,9,3,3,8,-2,3,8,1,-10,9,-10,-4,-3,4,-1,-3,10,-10,-3,2,-7,3,-5,-3,5,-8,6,-10,4,8,-4,8,9,6,-4,7,-3,9,5,5,-5,-7,-7,-9,-2,-8,7,8,-4,8,-3,1,7,8,-1,4,-7,6,-1,-9,-1,-7,5,-4,2,-8,9,2,1,-10,2,10,-8,-5,1,-9,-1,1,-6,6,9,2,3,-5,-6,9,-10,7,-5,-4,8,-7,4,6,2,-7,-6,-10,2,5,10,-6,-1,6,-9,2,-8,8,-8,-1,6,3,6,1,7,-8,10,-7,8,8,-6,5,-9,5,5,8,-3,-3,4,-6,4,10,-7,6,10,3,4,9,8,1,-9,7,1,10,-8,8,10,5,-3,-3,6,-1,1,-4,-6,-6,-5,9,-5,-1,5,4,-5,3,3,-5,1,9,-7,-4,-9,2,-3,10,-9,-2,10,2,-8,-5,2,-10,-7,-8,4,-1,-2,9,-3,-5,1,9,-5,7,7,-4,6,-5,-3,-9,-6,-1,3,-6,-8,1,10,1,4,-1,-3,-1,9,2,-10,10,-1,-6,1,-3,5,-10,-7,-10,-2,1,6,-4,1,-8,7,8,-10,-4,-8,-4,4,-6,7,-3,9,-6,-9,1,-6,-2,-8,3,-7,-1,-8,6,10,-5,9,8,2,-2,-4,-1,-1,-3,3,9,5,-3,-6,4,-2,-5,-7,-9,-8,-9,6,-3,3,8,-4,-6,-8,1,-9,-1,4,-1,10,-9,3,-3,8,-5,-3,-6,1,-3,10,-2,9,-9,-1,1,10,-2,-7,-1,-2,-7,1,-10,-7,1,7,6,7,8,-4,9,-10,-9,7,-4,-6,2,6,10,-6,-1,-6,-8,2,1,6,4,-5], dtype = "uint8")#candidate|6180|(512,)|const|uint8
const_6181 = relay.const([[False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True],[False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True],[False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False],[True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False],[True,False,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False],[False,False,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True]], dtype = "bool")#candidate|6181|(6, 84)|const|bool
var_6182 = relay.var("var_6182", dtype = "int16", shape = (1365,))#candidate|6182|(1365,)|var|int16
const_6183 = relay.const([9.063527,2.961110,-1.511600,-3.323586,-2.115633,-6.337649,3.892758,-8.752468,-2.639511,-9.576258,8.954885,-2.821978,-9.760139,-2.782659,-0.841354,-0.732005,6.170466,-3.730075,-7.735550,-1.058596,-1.040518,-4.442199,-1.149038,-8.051837,-7.028730,7.871638,1.386403,0.463772,-5.496119,4.355041,-7.118395,-3.295552,-1.131318,4.831280,3.060501,2.452896,-6.372668,6.234472,8.394215,5.765252,-3.207437,2.234867,-6.921753,8.818928,-4.561429,5.131162,-9.238973,-8.663149,-3.860856,1.865911,0.441280,9.019425,1.363870,7.544016,-8.791730,-5.373303,7.303169,-2.961317,4.264612,-3.149209,9.864337,-7.485959,4.158478,-9.461287,-3.324941,6.655835,-7.035718,2.433296,2.271170,-8.686743,0.223323,-7.051607,5.612907,-7.614233,-7.076647,-7.532397,-0.210840,-4.985176,-8.491985,5.087078,-3.287658,-2.111731,-6.471461,-1.501252,-8.861262,7.303100,-2.386438,2.584368,8.209094,-8.092115,-2.745883,3.797108,2.682648,8.306453,-3.178323,-7.368005,7.859023,2.852374,-4.573510,-0.393635,5.237851,-5.913306,7.320457,0.591678,7.265606,2.343221,-6.654477,-1.150291,-2.955083,0.766239,-5.867121,9.464964,9.240169,3.208430,0.643674,-0.189043,-8.154745,-1.246199,-6.370371,-6.675869,8.354666,-1.676239,-5.277631,6.552493,-2.779744,2.707974,-2.033222,-0.418679,1.064301,2.395655,8.724652,1.871950,-6.966884,-7.468320,3.684265,-8.508053,-7.265467,0.804910,4.931697,4.026259,2.014737,-2.644435,7.481358,4.567082,7.965626,3.474543,0.107639,-7.914315,-5.142913,-9.397844,0.159067,-2.531442,7.058059,-5.739562,-2.832117,-0.870479,-0.052425,9.917739,-5.792760,-3.642926,5.775133,-8.943976,2.148906,-6.948782,3.267366,4.596252,0.559106,-8.245699,7.702282,7.722502,-2.435739,-1.595854,1.643322,3.231815,-1.297597,5.433667,6.090416,-3.511527,-7.659087,9.222965,-0.430423,-1.002901,-9.294746,-8.089628,3.834658,-6.736580,-4.884474,-3.868104,-3.045027,7.864108,7.829683,5.362413,-0.465102,0.684734,-1.931752,6.471510,-9.969245,1.790833,-2.106584,-9.181602,7.098086,-3.998370,6.981850,5.496818,-1.301582,5.660100,3.602284,-0.419470,-4.087182,-3.022061,-6.130436,4.418611,6.066787,-5.272636,4.444718,9.384529,7.985561,-7.344899,-3.283399,-8.046159,-1.466934,2.789400,-7.708348,7.396697,0.510182,-9.179063,8.719100,-3.200501,-5.422832,0.992845,-5.924524,-7.825301,-8.208669,-1.825919,5.854747,3.296569,-9.697253,5.581932,-5.111702,-5.449590,6.289843,-0.958834,-1.498021,5.474541,5.387335,-8.186445,-3.692421,7.285611,7.028592,2.301742,-4.893323,-8.081986,3.669224,-5.287973,2.700585,-9.037595,6.143321,8.820775,8.944448,-9.612951,9.799769,-1.847057,2.696250,-2.603017,-3.415588,6.289338,-9.989837,6.143798,-9.566605,-4.247563,-4.983778,-9.768364,8.301520,-2.816233,-6.884719,5.555216,2.002404,8.295388,6.970389,-2.647979,-2.813903,-0.166606,8.134165,-3.117161,6.856029,7.089759,9.633901,2.041662,-4.323545,-4.260974,-0.522854,-3.248407,3.405215,6.768684,-7.548789,-7.697597,2.311893,0.873117,2.742353,-0.778465,-2.310075,-1.687920,5.418337,-1.388776,3.629560,5.682511,-8.908241,-4.299054,4.196943,-7.494306,1.174649,-2.040567,-0.428117,8.390090,-0.686841,-3.684760,-8.229718,-7.633804,1.932866,8.573011,8.426476,-7.740678,-8.209131,-6.543269,-0.635476,6.974130,6.482736,0.749443,-8.541897,4.635887,-5.846407,8.790582,4.117590,2.431649,0.045509,0.204358,9.309795,-1.301806,-1.034007,2.827106,-8.244839,-0.629243,4.592484,8.725088,8.366647,-5.198696,-4.541740,-5.178054,6.930649,-7.721992,-6.463859,-6.973454,-3.324727,5.839652,9.450983,6.511956,-0.371971,1.319972,5.188646,4.887038,-9.698310,2.307365,4.398297,-6.638916,7.820738,7.895882,-5.911114,4.670787,3.049264,-0.898116,2.891243,-6.145632,8.782712,7.184887,-2.851895,1.924230,-7.525776,0.860201,-7.393907,7.959520,3.642360,9.135029,-7.964809,-8.941825,-0.408651,-5.363335,-0.225859,3.258785,-6.213007,7.411053,0.476945,7.017375,0.667041,0.310909,-2.248894,4.666798,-8.843313,-9.398462,1.552130,-7.635345,3.007802,4.660741,2.065709,2.729289,-4.256957,-2.923661,-4.767169,8.819777,-0.761918,9.921981,2.793551,-0.328743,-8.355378,-2.138970,4.489250,2.359974,9.003689,7.539881,1.840052,9.681082,2.757044,0.112931,0.624081,0.121015,7.741514,6.128923,1.592793,-0.345128,-7.634786,8.921797,3.588206,-2.723472,8.633531,6.237705,-1.334027,-3.945575,-5.024167,5.756234,0.652509,-2.769832,-5.748401,7.173259,8.972996,1.456899,1.943714,-8.880861,1.633981,2.121011,-8.044154,1.929128,9.689275,-4.169106,0.234549,-6.602447,-9.593378,9.836958,-3.444163,-4.264006,2.853206,6.959820,-4.132851,0.371046,-0.051771,-1.605831,-3.444104,9.394581,-4.644151,9.821759,-9.870536,-2.231811,-8.148408,1.663992,-9.557703,7.394380,2.329726,-8.382291,-1.411444,3.938522,0.571403,0.174756,6.602354,3.621275,-8.316918,6.900497,-5.836603,0.723586,3.035645,2.868042,-8.026535,0.420476,2.874206,3.986394,-5.682039,-1.667733,-3.816861,7.122505,3.956545,0.941015,4.714832,-4.745506,-2.949386,7.287067,-3.037874,-9.464909,8.862514,-3.404290,6.826738,-8.082800,-3.246300,1.039463,-7.842167,-1.901621,-5.674525,8.221454,-2.206323,5.834706,4.219814,-2.923759,-9.724740,-9.475877,8.458935,-0.826761,-0.492741,-9.519107,-7.022558,4.552944,-5.314013,-5.258234,-0.132769,-9.989800,5.282386,6.267773,-5.368345,-9.075603,-5.164974,-1.810473,0.717863,1.209423,3.327119,-5.703621,3.577460,-8.467817,3.852799,-7.558753,-6.974102,-1.011624,8.408030,-9.630213,6.379125,-0.248755,3.499621,6.362561,8.526952,-0.531526,-2.549461,-6.048783,9.497090,1.216654,7.280108,-8.214730,2.049512,2.682063,-4.941047,-1.884436,-6.732739,-1.742714,-3.371351,-4.583862,-2.072733,-4.690928,7.723706,-7.078640,-5.094914,0.737748,-2.694264,7.696251,-2.447634,-8.783524,4.221174,2.065517,7.119404,5.476843,0.971395,1.294649,9.590085,0.564314,5.925784,8.063008,0.824308,8.596077,-1.889197,1.453552,-2.734408,6.083227,1.457065,5.331801,-0.520733,-4.762954,0.972160,4.254062,8.712429,2.265058,2.006356,-8.935820,-3.718687,-0.707263,9.397172,4.133865,8.728575,7.600666,7.532183,4.205401,2.610387,-9.357453,4.383672,4.397735,-6.694090,1.791428,6.265579,-5.839822,-1.260986,-4.294891,8.345938,5.775682,7.334851,6.687518,6.758418,-0.705568,-5.247095,5.366622,5.421121,-8.033642,-1.285565,3.820433,-7.705209,9.596641,-4.852651,-5.978503,5.010550,-7.272688,-3.059113,-3.911589,-6.247392,-3.570786,4.635691,-7.815508,4.709317,-7.536760,2.693294,7.842937,7.999072,-0.298961,8.531614,9.235215,-8.065269,4.699889,8.348812,-0.512852,-2.350843,-6.779766,8.232776,-5.653188,-7.932362,-5.573544,-5.861139,6.257531,-1.627432,9.687539,-0.554354,-4.917225,-8.301054,9.055898,1.057593,2.589250,-1.088708,0.212986,6.481675,-0.991383,-0.538146,0.445238,1.661549,0.456442,-8.784637,7.650941,5.675857,3.856388,9.039344,-2.520616,-7.721828,-4.596957,1.723012,-1.176915,-5.204166,-5.132150,4.912129,6.338954,-2.731035,-0.250639,-9.425001,5.680133,-4.209955,2.641631,4.678850,-4.189038,-8.880679,4.055960,7.497764,-3.064002,-2.767927,-9.284084,-9.742136,-6.849969,-0.410262,6.253024,-6.602590,8.886257,9.488466,-8.919635,-2.698769,-7.102454,-1.346551,-1.288568,-9.350075,5.797486,-5.102945,-7.588913,4.849264,0.661038,-0.242049,-2.055686,-7.018660,0.553701,0.640887,-4.268839,-2.878016,-3.690397,-4.490711,-9.054315,6.133249,-5.494284,-7.690064,-0.796608,1.274287,2.821660,-1.306181,4.594881,9.390961,-0.214994,-0.519866,-9.236550,6.096722,8.110169,-2.466623,-0.640727,4.578905,4.972951,-1.229578,-9.515259,3.603970,0.234079,9.429830,-9.468536,3.588131,1.064008,-8.859462,-2.300989,-6.674394,3.916558,-7.949056,-7.918997,-3.048942,4.157230,1.322164,9.030573,2.167226,-7.210495,0.674021,-6.688632,1.747197,-2.112523,6.167493,-6.598231,0.592345,-8.659805,6.280523,2.781646,-2.271004,-5.445097,-7.126823,5.008380,-6.064806,1.386413,-2.830517,-1.281926,7.989583,5.012117,-2.542515,3.428771,-5.938190,3.250048,-0.208068,7.395713,8.298833,6.102638,3.458362,9.400239,-4.139040,7.451309,-7.521379,2.235066,6.326230,7.088090,-7.823211,6.448262,-9.801222,-4.549122,6.757490,-2.095980,-1.595646,3.521306,-3.589137,0.785913,0.450296,5.374818,5.015664,3.242472,-3.854849,-8.278846,7.225956,0.396861,-1.840664,6.934217,0.095108,-9.173461,5.549106,-3.972257,-3.108444,-3.900745,-2.037916,-6.892166,-9.667727,-2.453856,-9.784921,0.139098,-3.098997,0.080124,5.905546,0.398590,-9.785891,-2.337317,8.492623,5.696221,-2.806885,7.507836,-7.215457,-5.516640,7.495701,9.900690,5.808258,-1.080025,9.466194,-7.499935,-5.051341,7.214576,9.513660,-3.134801,-0.814485,2.828790,8.967423,-5.559464,-4.409192,1.402837,8.913850,8.846099,9.134267,0.739762,8.593952,7.697834,7.307236,6.607378,-6.876756,3.163230,4.125392,-3.162702,6.497152,-7.332412,5.345864,7.360536,-8.318464,-4.479408,-2.242345,-7.849057,2.886724,6.884525,8.083862,-8.103009,-6.975310,-7.499530,-0.469916,0.233637], dtype = "float32")#candidate|6183|(900,)|const|float32
const_6184 = relay.const([-9,5,4,-10,9,-2,-4,5,10,-6,-10,-8,-3,-6,-6,-8,-5,-6,5,3,-8,4,9,5,-7,-4,4,-8,8,4,8,8,-7,10,2,7,10,4,-5,1,-2,10,6,-4,1,10,-2,-3,-5,-2,-8,-7,-4,-10,-1,-8,-5,-8,-6,7,2,9,8,-4,8,-7,9,-7,-6,10,9,10,-8,-6,5,-4,-1,-3,-8,1,5,4,-4,4,9,7,4,3,8,-8,1,1,6,2,-1,10,10,9,-7,6,-9,-6,-10,6,-6,-2,6,-10,7,6,4,-5,2,-10,7,4,7,-2,9,-9,-2,-2,6,1,-4,1,-3,-2,-10,-3,-6,-4,9,4,-4,2,3,4,-8,3,2,-9,2,-9,2,9,10,-3,-9,-6,-9,9,-6,3,8,5,-2,4,-4,4,8,7,9,9,-8,-3,7,9,6,5,-8,5,-5,-3,5,-8,-5,1,5,-3,6,10,-1,5,10,3,-2,-9,-7,-5,-4,-5,8,-2,-7,5,-3,7,3,3,-3,3,-5,2,7,-4,10,9,-7,-10,7,8,-10,6,-8,-7,3,6,-2,-10,8,1,5,-6,2,7,-3,1,-9,-9,6,-9,5,7,-6,10,2,1,-3,10,-5,7,1,3,7,-6,-7,-1,10,4,6,-9,-5,-8,7,8,-6,-2,-4,-6,5,3,-8,-6,2,-6,2,-9,-6,-9,-6,7,-1,8,1,6,7,-8,4,5,4,8,-5,-4,5,-3,10,4,6,9,-7,5,-6,9,9,-10,5,8,7,10,9,5,-5,3,1,1,6,-4,-1,4,6,4,2,-1,5,-10,-9,6,-4,-7,8,4,6,-8,-10,-10,6,8,-5,4,-4,-6,9,-7,8,7,2,4,9,8,4,-8,9,6,-6,-5,5,3,3,7,4,9,-7,-5,-5,-8,10,-7,1,-4,-4,-9,-10,2,-2,7,5,1,9,8,10,10,9,10,1,-9,5,-3,-2,-10,-6,-10,3,2,-9,5,-4,9,2,-5,5,7,4,7,-9,-10,-6,-7,-4,-2,-7,2,1,7,3,8,6,10,-7,7,5,-2,-10,1,-8,-6,-9,-8,-10,-6,5,-2,9,-2,-10,2,-6,10,5,-9,4,8,4,4,9,10,3,-6,6,9,-6,-5,7,-10,7,-5,-7,-2,7,8,7,-1,-9,-3,4,1,4,2,-1,6,-4,-7,-4,-5,-7,8,-10,-4,-5,-4,-8,-6,-10,6,3,-7,4,9,5,8,6,7,4,-4,8,-7,2,-1,-4,-4,-10,5,7,2,7,-3,8,10,1,3,2,8,-3,-6,5,-3,3,8,1,1,10,2,5,-1,6,8,2,-1,4,-10,-9,5,-9,1,5,-8,5,-4,-2,7,-7,-5,10,1,-5,-4,-4,-8,3,4,9,-4,4,3,3,3,4,8,-5,-9,-2,7,-1,10,2,6,8,8,-10,-7,2,2,7,1,8,2,-10,-5,-4,8,1,-9,-6,10,-9,-6,4,-6,-5,-2,-4,3,3,-8,-3,5,2,4,3,1,-10,3,-4,-4,6,4,-2,8,4,-4,-2,-2,5,2,9,-9,10,-2,1,-5,-4,8,7,5,10,10,-10,-8,-8,4,2,6,-7,8,6,4,-6,10,-8,5,-4,-2,5,1,10,3,-1,6,9,6,1,7,-4,-1,2,2,8,10,6,1,5,10,4,3,-3,-1,1,-2,-7,-1,8,4,-9,-1,4,-5,-5,6,-2,-3,10,-9,-5,9,-5,-2,-4,-9,1,-2,-10,-5,-1,-4,-1,-9,-4,5,-1,-3,7,-9,10,-5,-6,5,5,2,-2,-10,7,6,-10,-3,7,9,-9,-4,4,1,8,9,7,-9,2,-2,1,-2,-2,3,-1,3,9,-1,9,-7], dtype = "uint8")#candidate|6184|(726,)|const|uint8
call_6179 = relay.TupleGetItem(func_4096_call(relay.reshape(const_6180.astype('uint8'), [16, 2, 16]), relay.reshape(const_6180.astype('uint8'), [16, 2, 16]), relay.reshape(const_6181.astype('bool'), [504,]), relay.reshape(var_6182.astype('int16'), [1365,]), relay.reshape(const_6183.astype('float32'), [90, 10]), relay.reshape(const_6184.astype('uint8'), [726,]), ), 0)
call_6185 = relay.TupleGetItem(func_4103_call(relay.reshape(const_6180.astype('uint8'), [16, 2, 16]), relay.reshape(const_6180.astype('uint8'), [16, 2, 16]), relay.reshape(const_6181.astype('bool'), [504,]), relay.reshape(var_6182.astype('int16'), [1365,]), relay.reshape(const_6183.astype('float32'), [90, 10]), relay.reshape(const_6184.astype('uint8'), [726,]), ), 0)
output = relay.Tuple([call_6168,bop_6175,call_6179,const_6180,const_6181,var_6182,const_6183,const_6184,])
output2 = relay.Tuple([call_6169,bop_6175,call_6185,const_6180,const_6181,var_6182,const_6183,const_6184,])
func_6188 = relay.Function([var_6163,var_6182,], output)
mod['func_6188'] = func_6188
mod = relay.transform.InferType()(mod)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6188_call = mutated_mod.get_global_var('func_6188')
var_6190 = relay.var("var_6190", dtype = "float32", shape = (2, 7, 15))#candidate|6190|(2, 7, 15)|var|float32
var_6191 = relay.var("var_6191", dtype = "int16", shape = (1365,))#candidate|6191|(1365,)|var|int16
call_6189 = func_6188_call(var_6190,var_6191,)
output = call_6189
func_6192 = relay.Function([var_6190,var_6191,], output)
mutated_mod['func_6192'] = func_6192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_6205 = relay.TupleGetItem(func_2815_call(), 0)
call_6206 = relay.TupleGetItem(func_2816_call(), 0)
output = call_6205
output2 = call_6206
func_6212 = relay.Function([], output)
mod['func_6212'] = func_6212
mod = relay.transform.InferType()(mod)
output = func_6212()
func_6213 = relay.Function([], output)
mutated_mod['func_6213'] = func_6213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_6249 = func_3652_call()
call_6250 = func_3652_call()
func_3025_call = mod.get_global_var('func_3025')
func_3029_call = mutated_mod.get_global_var('func_3029')
var_6252 = relay.var("var_6252", dtype = "uint8", shape = (726, 1))#candidate|6252|(726, 1)|var|uint8
const_6253 = relay.const([-1,-6,3,-1,9,-8,2,-10,2,9,-9,-10,4,7,-9,9,-5,8,-5,3,-6,5,-2,9,10,7,-2,-4,10,-10,4,-2,4,-1,6,3,2,1,4,9,6,3,2,6,-1,-4,6,5,3,-9,7,-2,-9,-4,-3,-6,10,10,-7,5,-5,-2,-4,-10,-1,7,-10,-7,-4,-3,4,5,-7,6,-1,3,-10,6,-1,3,7,2,-1,-8,9,-1,9,9,-10,1,7,-9,8,-5,4,-1,-9,8,-1,4,-8,-7,2,-2,-4,-6,-8,2,-2,4,-4,-7,-7,3,-1,-10,-4,5,-4,8,1,-10,1,-4,-6,1,5,-5,10,2,6,10,10,8,2,3,2,-4,-5,9,9,3,5,6,-5,9,-2,-5,-4,-10,1,-2,9,7,6,-7,-4,-9,-10,6,-5,9,4,2,5,6,5,8,-6,10,-2,7,9,7,-10,5,8,3,-5,1,6,7,-7,-7,-1,5,4,-1,7,-10,-9,-4,-6,8,-3,3,-8,1,7,-8,-3,-2,-4,-9,9,10,4,-6,3,6,-6,-3,9,-8,2,-5,-7,-1,9,4,9,9,-7,8,2,-4,-2,1,-3,-8,-2,-9,9,2,9,-10,-1,6,4,8,7,-2,-10,-8,1,5,10,-4,3,-9,-3,5,-7,-2,4,-7,-3,-7,2,-6,-5,6,-7,4,-8,6,-3,-7,-1,-1,8,-7,-7,-4,2,-3,10,-2,-2,9,-1,-3,-6,-5,9,4,-6,-10,5,-3,3,4,7,-2,-2,9,6,10,-4,8,10,3,-1,8,-9,3,-9,9,2,-7,4,10,9,1,6,7,1,2,4,-10,-5,7,1,-1,9,9,-3,-3,-10,6,-8,-2,2,3,-7,1,7,7,-5,-8,8,8,-8,-4,7,-6,2,4,-3,-3,1,2,3,-3,-10,3,-2,-9,-1,-1,-4,5,-5,3,-7,10,-8,5,4,10,-1,-3,-5,3,7,6,1,1,-10,5,9,-5,-10,10,8,-7,4,-4,-2,5,-1,5,2,-1,10,-10,-3,-8,5,6,-10,4,3,-5,5,8,-2,-1,9,-9,-9,-10,7,-7,7,-8,8,-3,2,-8,1,-6,-1,9,8,-10,10,1,-9,-10,4,3,1,-3,-5,1,-8,-9,3,-8,-8,10,-8,3,-1,-4,-2,5,3,8,8,4,-8,5,-2,2,1,10,-5,9,-8,1,7,3,5,-10,1,-10,-10,10,-8,-4,8,-10,-6,1,1,-4,-9,10,8,-6,7,-10,9,-1,-6,-5,8,7,4,10,9,4,10,-1,-8,-9,-1,2,-9,-8,-7,-9,-10,-2,4,10,5,1,-1,-4,-9,2,10,-1,-8,-5,-6,1,-3,-10,5,10,7,-5,-4,-5,-2,3,2,4,-5,-6,-5,6,-2,-5,-8,8,6,4,-4,5,8,1,-3,4,6,-10,-9,-1,3,-9,-10,-10,10,-10,-3,-2,10,4,10,3,8,-9,8,-7,3,-5,2,-3,9,9,-6,-4,-6,-2,-6,2,-6,10,-10,-6,2,-8,-7,9,2,-8,10,-5,-4,-3,-1,6,-8,1,3,1,-1,2,-9,3,-8,10,-5,-4,-3,1,6,1,-4,-1,2,-6,10,8,-8,3,-2,-4,9,9,-9,-5,-8,8,-1,-2,-1,-3,-6,-2,-3,-2,7,5,-8,-7,-3,-9,-3,4,7,6,-4,-3,-1,9,-2,-1,9,-5,8,-1,8,-5,-10,-4,7,-7,10,-3,4,5,3,7,1,8,-5,4,2,4,-8,-8,-10,-8,-4,-9,5,8,-3,-1,-6,6,9,-7,-9,2,1,6,7,-10,-7,1,5,9,4,-4,8,-2,-2,-5,-9,-10,-6,-10,10,-6,-8,-8,-6,-3,-6,1,-9,-8,-1,1,1,8,8,2,7,7,-5,-10,-2,3,2,-2,8,-9,7,7,-3,-7,5,1,7,9,2,5,6,4,4,10,-7,9,1,2,-4,-5,8,3,5,-9,5,3,-4,1,2,-7,10,-3,-5,5,3,8,-5,9,7,6,-4,5,-5,-5,8,8,-10,-1,5,2,-7,1,3,3,-10,4,-8,-9,5,-4,5,-5,2,-10,3,6,4,3,7,-9,-4,10,-2,-9,-2,2,-2,4,4,-2,6,6,-5,-7,-6,1,9,-4,-10,-8,3,-2,6,10,10,6,9,-5,-2,9,1,7,-1,9,-3,4,4,2,1,-9,-5,-6,6,1,6,-5,1,-4,-5,4,9,-4,5,4,-2,-7,-7,-1,4,2,-3,-6,-1,7,-5,-1,-10,-9,5,-10,-6,3,-10,6,-8,6,5,8,-6,9,-9,-8,-9,3,-8,-10,10,8,10,3,-10,1,-5,-1,-5,2,3,2,-7,-6,8,9,-1,-7,1,-9,3,8,9,8,-2,-8,10,-6,5,-2,-8,-10,-10,-10,-10,-5,10,-8,-5,-5,-7,-9,-2,-4,7,-7,-8,5,-7,2,5,8,-1,4,-5,2,-1,10,7,8,1,2,6,9,4,9,-9,5,-5,7,-10,-1,9,4,-7,-2,10,10,-1,9,10,-7,5,10,-2,10,-5,3,-2,2,1,-8,7,-9,8,-6,-8,-9,4,4,6,8,-5,-7,-7,-8,4,1,5,2,8,2,-10,10,2,-7,-8,-2,-5,-9,10,3,5,-5,-4,2,4,1,-6,-5,-4,7,-9,-2,9,-9,1,5,7,-6,9,-6,-3,7,7,8,-8,1,7,4,-9,7,6,-5,3,8,9,-5,3,4,7,1,-10,-3,-8,-2,-9,-8,-2,9,-6,7,3,10,5,-5,-7,-6,-1,-3,-5,7,-6,10,-9,5,-8,-1,-4,8,-4,-10,1,5,6,-10,-4,4,1,-10,-4,4,-5,4,5,-7,-7,7,4,8,1,-8,5,5,-7,-8,7,-3,-8,-4,-9,9,7,-3,-1,10,9,7,1,3,6,-10,-3,7,-10,-2,1,6,-1,-10,10,-4,-7,6,-4,9,10,5,2,3,-3,4,10,2,9,-4,2,-1,-1,-1,5,7,7,9,1,3,8,-8,7,8,3,-6,-1,8,-5,-9,8,8,-5,5,8,2,5,-2,3,10,-3,-5,-5,-8,-1,-1,-2,-4,-5,-5,-9,8,-8,-8,-2,8,-5,2,5,10,-7,-5,-1,6,-10,-10,-9,-6,-1,-7,-3,2,8,-7,4,-9,8,1,-4,7,7,4,-8,-2,-5,3,6,5,9,-6,-9,7,-10,-1,5,-8,-7,-10,-5,3,-3,-7,2,-4,-5,-8,-7,6,-3,-4,6,1,-6,-6,3,-10,-8,7,10,4,4,-2,7,8,6,6,-4,3,10,-1,-3,-1,-10,2,10,7,-8,-4,-8,4,-6,6,-9,-2,-10,-4,-5,-3,-3,-7,3,-8,-3,-7,-7,-5,-1,-5,-1,1,-1,4,2,-3,6,-10,1,9,10,-7,7,10,-4,-2,1,6,-10,7,10,7,-9,-5,4,-6,-2,-9,-6,8,-3,5,-6,5,-3,-10,-2,9,3,-4,7,-9,-7,-9,9,-3,10,6,10,5,-4,6,-1,9,-8,1,7,6,10,4,-5,-4,8,-2,-1,-2,2,-3,5,-9,7], dtype = "int16")#candidate|6253|(1365,)|const|int16
call_6251 = relay.TupleGetItem(func_3025_call(relay.reshape(var_6252.astype('uint8'), [363, 2]), relay.reshape(const_6253.astype('int16'), [15, 13, 7]), ), 1)
call_6254 = relay.TupleGetItem(func_3029_call(relay.reshape(var_6252.astype('uint8'), [363, 2]), relay.reshape(const_6253.astype('int16'), [15, 13, 7]), ), 1)
bop_6265 = relay.not_equal(const_6253.astype('bool'), var_6252.astype('bool')) # shape=(726, 1365)
bop_6270 = relay.logical_and(const_6253.astype('bool'), var_6252.astype('bool')) # shape=(726, 1365)
func_5850_call = mod.get_global_var('func_5850')
func_5852_call = mutated_mod.get_global_var('func_5852')
call_6285 = relay.TupleGetItem(func_5850_call(), 0)
call_6286 = relay.TupleGetItem(func_5852_call(), 0)
output = relay.Tuple([call_6249,call_6251,bop_6265,bop_6270,call_6285,])
output2 = relay.Tuple([call_6250,call_6254,bop_6265,bop_6270,call_6286,])
func_6295 = relay.Function([var_6252,], output)
mod['func_6295'] = func_6295
mod = relay.transform.InferType()(mod)
mutated_mod['func_6295'] = func_6295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6296 = relay.var("var_6296", dtype = "uint8", shape = (726, 1))#candidate|6296|(726, 1)|var|uint8
func_6295_call = mutated_mod.get_global_var('func_6295')
call_6297 = func_6295_call(var_6296)
output = call_6297
func_6298 = relay.Function([var_6296], output)
mutated_mod['func_6298'] = func_6298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_6303 = relay.TupleGetItem(func_2681_call(), 0)
call_6304 = relay.TupleGetItem(func_2682_call(), 0)
output = call_6303
output2 = call_6304
func_6305 = relay.Function([], output)
mod['func_6305'] = func_6305
mod = relay.transform.InferType()(mod)
output = func_6305()
func_6306 = relay.Function([], output)
mutated_mod['func_6306'] = func_6306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mod.get_global_var('func_4652')
func_4653_call = mutated_mod.get_global_var('func_4653')
call_6329 = relay.TupleGetItem(func_4652_call(), 0)
call_6330 = relay.TupleGetItem(func_4653_call(), 0)
output = call_6329
output2 = call_6330
func_6345 = relay.Function([], output)
mod['func_6345'] = func_6345
mod = relay.transform.InferType()(mod)
output = func_6345()
func_6346 = relay.Function([], output)
mutated_mod['func_6346'] = func_6346
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6372 = relay.var("var_6372", dtype = "float32", shape = (16, 7, 2))#candidate|6372|(16, 7, 2)|var|float32
uop_6373 = relay.rsqrt(var_6372.astype('float32')) # shape=(16, 7, 2)
uop_6386 = relay.cosh(uop_6373.astype('float64')) # shape=(16, 7, 2)
uop_6391 = relay.exp(uop_6386.astype('float32')) # shape=(16, 7, 2)
output = relay.Tuple([uop_6391,])
output2 = relay.Tuple([uop_6391,])
func_6404 = relay.Function([var_6372,], output)
mod['func_6404'] = func_6404
mod = relay.transform.InferType()(mod)
mutated_mod['func_6404'] = func_6404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6405 = relay.var("var_6405", dtype = "float32", shape = (16, 7, 2))#candidate|6405|(16, 7, 2)|var|float32
func_6404_call = mutated_mod.get_global_var('func_6404')
call_6406 = func_6404_call(var_6405)
output = call_6406
func_6407 = relay.Function([var_6405], output)
mutated_mod['func_6407'] = func_6407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3328_call = mutated_mod.get_global_var('func_3328')
call_6417 = relay.TupleGetItem(func_3327_call(), 0)
call_6418 = relay.TupleGetItem(func_3328_call(), 0)
func_3195_call = mod.get_global_var('func_3195')
func_3197_call = mutated_mod.get_global_var('func_3197')
call_6420 = relay.TupleGetItem(func_3195_call(relay.reshape(call_6417.astype('bool'), [2, 3, 9])), 1)
call_6421 = relay.TupleGetItem(func_3197_call(relay.reshape(call_6417.astype('bool'), [2, 3, 9])), 1)
output = relay.Tuple([call_6417,call_6420,])
output2 = relay.Tuple([call_6418,call_6421,])
func_6426 = relay.Function([], output)
mod['func_6426'] = func_6426
mod = relay.transform.InferType()(mod)
mutated_mod['func_6426'] = func_6426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mutated_mod.get_global_var('func_6426')
call_6427 = func_6426_call()
output = call_6427
func_6428 = relay.Function([], output)
mutated_mod['func_6428'] = func_6428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_6439 = func_3652_call()
call_6440 = func_3652_call()
func_3716_call = mod.get_global_var('func_3716')
func_3718_call = mutated_mod.get_global_var('func_3718')
call_6457 = relay.TupleGetItem(func_3716_call(), 0)
call_6458 = relay.TupleGetItem(func_3718_call(), 0)
func_6041_call = mod.get_global_var('func_6041')
func_6044_call = mutated_mod.get_global_var('func_6044')
var_6467 = relay.var("var_6467", dtype = "float32", shape = (910,))#candidate|6467|(910,)|var|float32
var_6468 = relay.var("var_6468", dtype = "uint16", shape = (12, 196))#candidate|6468|(12, 196)|var|uint16
call_6466 = relay.TupleGetItem(func_6041_call(relay.reshape(var_6467.astype('float32'), [910,]), relay.reshape(var_6468.astype('uint16'), [2352,]), ), 0)
call_6469 = relay.TupleGetItem(func_6044_call(relay.reshape(var_6467.astype('float32'), [910,]), relay.reshape(var_6468.astype('uint16'), [2352,]), ), 0)
output = relay.Tuple([call_6439,call_6457,call_6466,var_6467,var_6468,])
output2 = relay.Tuple([call_6440,call_6458,call_6469,var_6467,var_6468,])
func_6472 = relay.Function([var_6467,var_6468,], output)
mod['func_6472'] = func_6472
mod = relay.transform.InferType()(mod)
var_6473 = relay.var("var_6473", dtype = "float32", shape = (910,))#candidate|6473|(910,)|var|float32
var_6474 = relay.var("var_6474", dtype = "uint16", shape = (12, 196))#candidate|6474|(12, 196)|var|uint16
output = func_6472(var_6473,var_6474,)
func_6475 = relay.Function([var_6473,var_6474,], output)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5721_call = mod.get_global_var('func_5721')
func_5723_call = mutated_mod.get_global_var('func_5723')
call_6587 = relay.TupleGetItem(func_5721_call(), 0)
call_6588 = relay.TupleGetItem(func_5723_call(), 0)
output = call_6587
output2 = call_6588
func_6609 = relay.Function([], output)
mod['func_6609'] = func_6609
mod = relay.transform.InferType()(mod)
output = func_6609()
func_6610 = relay.Function([], output)
mutated_mod['func_6610'] = func_6610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6345_call = mod.get_global_var('func_6345')
func_6346_call = mutated_mod.get_global_var('func_6346')
call_6626 = func_6345_call()
call_6627 = func_6345_call()
output = relay.Tuple([call_6626,])
output2 = relay.Tuple([call_6627,])
func_6635 = relay.Function([], output)
mod['func_6635'] = func_6635
mod = relay.transform.InferType()(mod)
output = func_6635()
func_6636 = relay.Function([], output)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_6657 = relay.TupleGetItem(func_3231_call(), 0)
call_6658 = relay.TupleGetItem(func_3232_call(), 0)
const_6662 = relay.const([[[-5.357346,-7.707724,3.283479,-2.264542,-5.221392,-8.773412,0.494145,-8.234465,6.915841],[-9.085108,-6.002232,-6.132127,-3.069585,-5.257773,-0.882211,3.162014,7.432801,-5.400198],[8.386474,6.516630,-5.305591,-1.895961,2.346762,7.012902,8.926766,8.507431,3.570899]],[[-8.477849,-7.399134,1.209517,-6.228286,8.866161,7.134474,-8.249041,-7.298842,-9.465471],[7.236166,-2.365267,9.290601,0.337284,2.369565,-8.771295,-4.895300,4.919703,-6.820093],[5.064990,2.094701,-2.118217,-1.904243,-6.324253,-1.691408,9.269372,9.762171,-3.428838]]], dtype = "float64")#candidate|6662|(2, 3, 9)|const|float64
bop_6663 = relay.less(call_6657.astype('bool'), relay.reshape(const_6662.astype('bool'), relay.shape_of(call_6657))) # shape=(2, 3, 9)
bop_6666 = relay.less(call_6658.astype('bool'), relay.reshape(const_6662.astype('bool'), relay.shape_of(call_6658))) # shape=(2, 3, 9)
func_2781_call = mod.get_global_var('func_2781')
func_2784_call = mutated_mod.get_global_var('func_2784')
var_6676 = relay.var("var_6676", dtype = "uint8", shape = (726,))#candidate|6676|(726,)|var|uint8
call_6675 = relay.TupleGetItem(func_2781_call(relay.reshape(var_6676.astype('uint8'), [11, 11, 6]), relay.reshape(var_6676.astype('uint8'), [11, 11, 6]), ), 0)
call_6677 = relay.TupleGetItem(func_2784_call(relay.reshape(var_6676.astype('uint8'), [11, 11, 6]), relay.reshape(var_6676.astype('uint8'), [11, 11, 6]), ), 0)
func_293_call = mod.get_global_var('func_293')
func_297_call = mutated_mod.get_global_var('func_297')
var_6687 = relay.var("var_6687", dtype = "float64", shape = (108,))#candidate|6687|(108,)|var|float64
const_6688 = relay.const([4,-9,-6,-6,4,9,9,-8,1,7,-4,-10,10,6,-1,-8,2,10,6,7,7,7,9,4,-9,-7,-5,6,10,-9,8,5,-3,-6,-10,-3,8,-5,-5,-4,-10,-7,-1,-10,4,9,7,2,9,-2,-2,8,-5,4,3,-4,2,-8,4,-3,1,2,7,9,1,-7,-6,-2,9,3,-7,-5,-6,-3,4,1,-9,-3,-7,2,-4,3,-5,5,5,8,-4,-1,7,-3,10,-4,4,-7,10,1,10,7,8,-3,-9,5,3,4,-1,-1,-8,2,-2,5,10,-7,-9,-8,-6,2,-2,-7,-4,-7,7,-6,2,-10,-8,-6,10,-9,-10,8,7,-1,6,6,-10,-4,8,3,1,6,-8,-8,-8,9,-3,3,-6,1,-4,-3,9,-1,-9,-8,-8,10,7,-4,4,-2,-10,-8,-9,10,7,8,-1,4,-3,-2,7,7,-1,-10,4,-3,8,1,-2,3,-2,-5,9,-5,-2,-3,9,6,1,-5,9,-7,1,6,-1,-3,9,-8,-7,-1,7,9,-4,-4,-10,-7,-8,6,4,-3,1,8,3,-6,-6,-9,-1,-9,-3,7,5,-10,10,-2,-8,-9,-2,8,-4,8,-3,5,7,-8,-10,-4,1,-7,2,5,-6,-10,3,6,4,7,2,3,7,-2,8,-1,-9,-10,-8,10,9,-2,10,10,-1,5,-9,5,-2,3,10,-9,-2,2,1,-4,4,3,-4,-1,-9,10,-5,-6,-1,-6,-4,-4,3,-8,7,-7,8,6,2,-8,-4,-9,-5,-5,-5,-1,-6,-7,8,5,7,-6,-9,-6,-10,2,-5,2,-7,6,9,-4,10,-4,-9,6,9,1,-6,1,-3,1,-5,8,1,-7,-1,5,-4,-2,10,-9,1,8,-8,5,-3,1,-9,-3,3,3,3,-7,-7,-8,-8,7,-6,7,6,-7,-8,1,9,10,-6,-8,-10,-5,-6,5,9,-3,7,-1,2,5,8,7,-10,1,-1,4,-6,10,2,-5,-7,6,-8,8,6,-10,-9,-4,-6,-6,6,10,-7,-3,4,-1,-8,-7,-5,6,10,8,3,-10,-6,7,4,-3,8,1,-8,4,-9,-4,-4,8,6,-3,5,-9,-8,5,4,7,6,5,-10,1,8,6,4,7,-9,1,4,4,-6,7,7,-3,2,8,-7,-3,-4,8,-4,-10,-5,-6,-10,-2,1,8,1,-2,1,5,1,-2,9,-3,-3,6,3,-7,-2,9,6,3,9,10,-7,6,3,1,8,-4,8,-8,-2,1,-2,7,-8,-7,6,-6,2,-1,2,6,-9,-10,10,5,3,-8,-8,6,7,-2,-1,-8,-10,6,2,-1,-4,-5,1,8,9,2,1,3,1,1,-6,3,-7,-10,-2,-9,4,-1,-7,2,7,1,-9,-7,4,10,-8,-7,-3,5,10,2,-1,10,3,2,-3,9,-1,-4,-4,-4,9,-9,-6,8,8,1,-2,-7,-2,-7,4,-9,-2,-8,1,-1,3,5,-2,-7,-2,2,-7,10,-6,4,-3,-4,10,-1,4,-1,10,6,8,4,2,-3,3,-8,-10,-8,9,-6,-4,8,-9,-6,-7,-10,-8,5,8,-8,-1,1,-1,2,1,-7,-5,4,7,2,2,9,6,-7,3,-5,-2,-8,5,10,-10,-2,5,-8,4,8,-1,6,-2,2,-8,10,5,-10,-7,-8,-1,-3,-4,1,-2,6,6,3,-4,-1,-3,-2,-10,1,-5,6,7,4,-10,-1,-2,8,-8,-3,-5,5,-7,8,-9,7,-6,-2,10,-6,9,-5,-6,-10,-3,9,9,-5,2,6,-2,7,-5,3,-5,8,-10,-8,5,3,2,5,7,-10,3,10,8,-5,8,-10,1,-10,10,-9,5,4,-3,9,-9,9,-4,7,-8,-6,-2,-3,2,-4,-1,-1,5,4,-2,-10,-1,-3,9,8,4,-8,-8,-7,-4,7,4,-2,1,6,10,-6,-4,7,-9,-3,-8,-7,-1,1,7,-1,-5,-9,2,2,1,4,-5,3,7,-6,6,-3,2,-4,-1,-2,-9,-3,-6,2,2,-7,6,-10,-5,-8,-4,9,7,6,8,4,-9,-8,-3,4,-6,-2,-10,-5,-1,-7,-8,-2,2,4,-4,-9,7,-9,8,6,6,-8,10,-3,-10,9,-9,-2,-7,-2,5,5,9,-2,7,2,-6,10,-6,1,3,4,9,4,-2,-10,-8,-9,-8,5,-1,-9,-7,-4,-1,-9,-5,8,-8,-3,-9,-7,5,-1,9,8,-2,8,5,-4,-1,3,-7,1,3,8,-4,-6,-3,3,4,-3,-8,8,6,-10,-7,2,-1,-1,-6,4,-4,-10,9,10,-5,-8,7,-6,9,2,6,10,-9,-4,10,7,-10,4,10,-3,-8,-8,8,-1,-8,1,-9,5,-3,-4,-9,-8,6,8,-5,-1,-1,-1,-2,6,-5,6,-9,3,2,-5,-8,9,5,2,-8,5,1,-10,8,3,-2,-9,-1,-1,10,1,-8,-4,10,3,8,-9,3,1,5,5,4,8,-8,8,4,-8,2,5,9,-1,-3,-7,2,-8,-4,6,-8,-5,3,6,3,-10,-7,8,-1,2,-1,-2,9,-2,2,-10,2,9,-9,5,-9,8,9,2,8,8,5,4,8,6,6,2,-1,5,6,-3,-6,2,8,-7,-10,-6,3,-8,10,2,-9,-5,-7,-2,2,-9,6,-6,-5,-3,-8,-9,-2,3,-8,7,-3,-10,7,-3,-7,9,-6,-10,-8,6,-3,-6,-2,5,5,-9,-8,-9,1,4,-6,3,-8,5,-5,1,-5,-3,7,9,1,10,-7,4,3,-5,-3,-3,1,-8,-8,-6,-5,2,-8,3,8,-1,-2,-2,3,6,-6,-6,8,5,2,-10,4,-8,-2,-4,-2,-5,9,1,-5,-7,-7,-9,-8,10,-10,6,2,-6,3,-5,4,1,-9,5,-9,-4,7,1,8,5,10,1,5,6,-7,3,5,7,6,8,4,4,-5,-5,6,2,1,-10,1,4,-9,3,5,-7,-2,8,7,5,7,-5,-4,-9,-2,-3,6,-5,6,-10,6,2,2,-3,-2,-9,2,3,2,-1,2,-9,1,3,10,8,1,-5,2,10,-8,-6,-6,6,-1,-4,1,1,-5,-1,8,-4,-1,-9,-9,-10,9,-9,5,5,-4,-8,10,9,6,4,-9,-2,-7,5,2,-5,1,6,-1,1,9,2,-1,-7,-1,10,9,-10,2,4,-3,5,-5,10,-3,5,2,-3,10,-1,-3,1,-2,-10,-8,-10,-5,3,-7,10,-3,2,-2,-10,5,1,2,-1,5,-1,-8,-2,-6,-5,-9,5,-7,9,3,2,-9,-7,-7,7,10,4,9,-10,-2,-9,1,-3,2,10,1,5,-6,-1,1,-6,-6,-8,6,-1,5,9,6,4,4,-5,-7,5,3,8,-3,-4,5,-3,1,9,-6,2,10,1,-2,-9,7,2,-9,5,-3,1,10,-8,10,7,-6,7,4,2,-4,-5,-4,-2,-5,6,-5,-7,3,-4,-5,-8,-9,-8,2,-1,10,7,10,6,-8,5,-1,8,10,-6,4,-7,-8,-6,-5,-7,2,9,-5,9,-9,-7,-9,-4,-9,-5,6,-6,8], dtype = "int16")#candidate|6688|(1365,)|const|int16
call_6686 = relay.TupleGetItem(func_293_call(relay.reshape(var_6687.astype('float64'), [4, 9, 3]), relay.reshape(const_6688.astype('int16'), [1365,]), ), 1)
call_6689 = relay.TupleGetItem(func_297_call(relay.reshape(var_6687.astype('float64'), [4, 9, 3]), relay.reshape(const_6688.astype('int16'), [1365,]), ), 1)
uop_6712 = relay.rsqrt(var_6676.astype('float64')) # shape=(726,)
func_6404_call = mod.get_global_var('func_6404')
func_6407_call = mutated_mod.get_global_var('func_6407')
var_6719 = relay.var("var_6719", dtype = "float32", shape = (224,))#candidate|6719|(224,)|var|float32
call_6718 = relay.TupleGetItem(func_6404_call(relay.reshape(var_6719.astype('float32'), [16, 7, 2])), 0)
call_6720 = relay.TupleGetItem(func_6407_call(relay.reshape(var_6719.astype('float32'), [16, 7, 2])), 0)
output = relay.Tuple([bop_6663,call_6675,call_6686,var_6687,const_6688,uop_6712,call_6718,var_6719,])
output2 = relay.Tuple([bop_6666,call_6677,call_6689,var_6687,const_6688,uop_6712,call_6720,var_6719,])
func_6731 = relay.Function([var_6676,var_6687,var_6719,], output)
mod['func_6731'] = func_6731
mod = relay.transform.InferType()(mod)
mutated_mod['func_6731'] = func_6731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6731_call = mutated_mod.get_global_var('func_6731')
var_6733 = relay.var("var_6733", dtype = "uint8", shape = (726,))#candidate|6733|(726,)|var|uint8
var_6734 = relay.var("var_6734", dtype = "float64", shape = (108,))#candidate|6734|(108,)|var|float64
var_6735 = relay.var("var_6735", dtype = "float32", shape = (224,))#candidate|6735|(224,)|var|float32
call_6732 = func_6731_call(var_6733,var_6734,var_6735,)
output = call_6732
func_6736 = relay.Function([var_6733,var_6734,var_6735,], output)
mutated_mod['func_6736'] = func_6736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mod.get_global_var('func_4304')
func_4305_call = mutated_mod.get_global_var('func_4305')
call_6738 = relay.TupleGetItem(func_4304_call(), 0)
call_6739 = relay.TupleGetItem(func_4305_call(), 0)
output = relay.Tuple([call_6738,])
output2 = relay.Tuple([call_6739,])
func_6759 = relay.Function([], output)
mod['func_6759'] = func_6759
mod = relay.transform.InferType()(mod)
mutated_mod['func_6759'] = func_6759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6759_call = mutated_mod.get_global_var('func_6759')
call_6760 = func_6759_call()
output = call_6760
func_6761 = relay.Function([], output)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5299_call = mod.get_global_var('func_5299')
func_5300_call = mutated_mod.get_global_var('func_5300')
call_6792 = relay.TupleGetItem(func_5299_call(), 0)
call_6793 = relay.TupleGetItem(func_5300_call(), 0)
output = relay.Tuple([call_6792,])
output2 = relay.Tuple([call_6793,])
func_6794 = relay.Function([], output)
mod['func_6794'] = func_6794
mod = relay.transform.InferType()(mod)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mutated_mod.get_global_var('func_6794')
call_6795 = func_6794_call()
output = call_6795
func_6796 = relay.Function([], output)
mutated_mod['func_6796'] = func_6796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_6800 = relay.TupleGetItem(func_6759_call(), 0)
call_6801 = relay.TupleGetItem(func_6761_call(), 0)
output = relay.Tuple([call_6800,])
output2 = relay.Tuple([call_6801,])
func_6802 = relay.Function([], output)
mod['func_6802'] = func_6802
mod = relay.transform.InferType()(mod)
output = func_6802()
func_6803 = relay.Function([], output)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_6850 = func_5929_call()
call_6851 = func_5929_call()
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_6866 = func_5929_call()
call_6867 = func_5929_call()
output = relay.Tuple([call_6850,call_6866,])
output2 = relay.Tuple([call_6851,call_6867,])
func_6873 = relay.Function([], output)
mod['func_6873'] = func_6873
mod = relay.transform.InferType()(mod)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mutated_mod.get_global_var('func_6873')
call_6874 = func_6873_call()
output = call_6874
func_6875 = relay.Function([], output)
mutated_mod['func_6875'] = func_6875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5721_call = mod.get_global_var('func_5721')
func_5723_call = mutated_mod.get_global_var('func_5723')
call_6936 = relay.TupleGetItem(func_5721_call(), 0)
call_6937 = relay.TupleGetItem(func_5723_call(), 0)
output = relay.Tuple([call_6936,])
output2 = relay.Tuple([call_6937,])
func_6943 = relay.Function([], output)
mod['func_6943'] = func_6943
mod = relay.transform.InferType()(mod)
mutated_mod['func_6943'] = func_6943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6943_call = mutated_mod.get_global_var('func_6943')
call_6944 = func_6943_call()
output = call_6944
func_6945 = relay.Function([], output)
mutated_mod['func_6945'] = func_6945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mod.get_global_var('func_3789')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_6987 = func_3789_call()
call_6988 = func_3789_call()
output = call_6987
output2 = call_6988
func_7018 = relay.Function([], output)
mod['func_7018'] = func_7018
mod = relay.transform.InferType()(mod)
mutated_mod['func_7018'] = func_7018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7018_call = mutated_mod.get_global_var('func_7018')
call_7019 = func_7018_call()
output = call_7019
func_7020 = relay.Function([], output)
mutated_mod['func_7020'] = func_7020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6635_call = mod.get_global_var('func_6635')
func_6636_call = mutated_mod.get_global_var('func_6636')
call_7114 = relay.TupleGetItem(func_6635_call(), 0)
call_7115 = relay.TupleGetItem(func_6636_call(), 0)
output = relay.Tuple([call_7114,])
output2 = relay.Tuple([call_7115,])
func_7126 = relay.Function([], output)
mod['func_7126'] = func_7126
mod = relay.transform.InferType()(mod)
output = func_7126()
func_7127 = relay.Function([], output)
mutated_mod['func_7127'] = func_7127
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7162 = relay.const([[[-10,2,9,-2,3,7,-8],[-1,-3,-6,9,-9,-8,7],[-8,9,-9,-3,7,1,7],[7,6,-10,5,4,-2,5],[5,-5,-4,9,5,2,-9],[-10,-10,2,7,4,10,3],[9,5,10,7,6,7,-9],[-3,-1,-5,-2,-6,-10,8],[-8,-5,1,-3,2,2,7],[9,-10,6,-9,-2,-9,9],[-1,-1,-2,-6,-6,1,-6],[-6,-4,-10,-9,-6,9,-1],[-6,-8,-9,-6,7,3,8],[1,-7,-8,2,-5,-4,9],[-9,-2,3,4,2,5,1]],[[-3,10,-6,9,-9,-3,1],[-5,3,-3,3,-8,9,6],[-9,10,7,-6,-8,-8,-5],[1,-8,-8,-2,-7,-8,1],[-7,9,-5,8,2,4,10],[-7,3,-2,-6,-4,-3,3],[-8,-7,1,-8,9,-8,-3],[-1,6,-9,5,2,4,-10],[-6,6,-7,-8,-1,5,-4],[10,-7,10,8,4,1,-5],[-1,1,7,-3,2,-3,8],[4,-2,1,5,5,-3,5],[7,10,-4,-5,-8,-5,8],[5,5,9,-6,-9,4,-2],[-4,-2,8,9,10,-3,2]],[[1,6,-7,-9,-10,-9,-6],[6,-1,-7,-3,4,9,6],[6,-9,-10,-5,8,5,9],[-1,-8,-2,-9,-3,-6,-2],[5,-6,-8,8,-2,4,8],[-1,3,3,9,4,6,10],[-6,-6,2,2,9,-7,4],[2,-1,1,7,7,9,5],[9,-7,10,8,7,2,-7],[-8,2,-2,-3,7,5,5],[7,9,-5,-3,-4,-7,-8],[-9,-1,7,-7,6,-2,-9],[9,4,5,-4,-2,7,9],[-6,-4,5,2,-9,-10,8],[-8,-2,-4,-4,2,3,-6]],[[-9,-4,-3,2,6,-9,10],[7,-5,6,3,6,10,7],[1,4,10,6,8,1,-9],[-6,10,-6,10,2,3,9],[5,7,-1,5,8,-5,7],[-10,-6,5,2,1,-5,-3],[3,4,-10,-4,-1,-2,-10],[5,3,-4,-4,7,2,5],[-2,-8,2,5,-2,-3,-7],[3,-4,-5,-6,5,7,3],[9,9,-8,-10,-10,2,-3],[-8,-10,10,-9,-10,-5,4],[-9,3,7,-1,2,3,6],[5,-10,4,4,-5,-10,-10],[2,-8,3,10,7,4,5]],[[-1,-5,-2,1,-9,9,-8],[1,-7,1,5,-9,5,8],[-5,-9,2,5,10,-10,-1],[-5,2,-6,-8,-4,-3,7],[1,7,8,4,-3,6,5],[4,-6,4,2,7,-8,-2],[6,-9,7,-2,-6,-5,-3],[2,-6,3,-5,2,-6,-9],[1,-7,3,1,6,6,-8],[-10,-1,-1,3,9,-3,-7],[-9,5,-8,-5,10,2,1],[-7,9,2,-2,-7,8,-2],[6,-2,-6,4,-1,6,7],[7,-7,7,-4,8,-3,-2],[2,6,3,-4,6,2,9]],[[1,7,-5,2,10,2,-3],[-2,10,1,1,-3,-5,-3],[8,-7,9,7,-6,-6,7],[4,-5,-7,2,10,-1,8],[-3,5,4,-10,-3,5,-6],[-8,8,-4,-2,-5,-8,8],[9,-7,7,-4,3,-4,-1],[-8,9,-3,-1,10,-8,6],[2,-5,-9,1,-4,9,-9],[6,1,10,-1,6,7,-5],[-3,-1,6,5,-2,-3,3],[6,4,-5,-5,4,-5,-9],[-8,-9,7,7,-10,1,1],[8,6,8,-3,5,-6,-5],[-1,5,-9,2,8,1,4]],[[-10,8,8,2,-3,9,-5],[7,7,-4,-9,9,-1,3],[-5,-6,1,-4,7,7,1],[8,-10,-5,4,1,2,-7],[9,5,-8,-10,4,-9,8],[-10,1,-6,-4,-10,-10,-2],[-3,7,8,7,-4,4,-2],[8,-1,10,6,-5,-7,-9],[-7,9,-1,-3,10,-6,10],[-2,-4,-2,-7,-5,8,-1],[4,-2,-2,-3,7,1,-10],[2,6,-10,-2,-5,7,-2],[-9,-2,3,-6,-4,8,-6],[9,-4,6,4,-2,10,-5],[-5,-4,10,-1,-9,-9,-7]],[[4,-4,9,-5,1,1,-8],[-9,10,2,10,1,6,-10],[10,-2,3,1,-7,7,8],[9,2,10,2,7,5,-5],[5,8,5,4,-7,9,1],[-1,-7,4,-8,1,-8,4],[-6,6,8,-9,-3,8,7],[-5,-5,-7,7,-2,-8,5],[-3,9,9,1,9,-8,-4],[-4,8,-1,-6,-5,-10,5],[2,-5,-10,4,-10,-7,-6],[3,5,-5,5,-6,-4,3],[10,3,-10,8,-3,-9,7],[3,-3,7,2,-1,-6,7],[7,-6,-9,-10,-7,9,1]],[[2,4,-3,-2,6,-2,2],[-1,-10,10,-7,4,6,-8],[-3,2,8,3,-4,-2,8],[5,-2,8,7,9,-4,5],[-6,4,-1,5,2,-1,-10],[5,8,7,-8,-3,2,3],[5,-6,1,8,-6,-3,8],[7,8,-7,3,6,8,8],[-1,6,1,5,-1,5,-8],[8,-4,-6,-6,-9,-7,-10],[-6,5,-1,1,2,-3,-3],[-10,1,-6,2,7,5,5],[-5,-8,-5,-6,3,-8,7],[8,4,-10,-8,7,-8,-8],[-4,-4,-9,-10,7,-3,-7]],[[-7,-2,4,-5,-8,9,-2],[4,10,4,9,-8,10,-4],[8,-3,6,10,-1,4,-7],[-9,-10,1,-2,-7,10,9],[1,-2,7,-3,-1,2,-5],[5,1,-5,8,-2,4,-3],[-5,6,-10,-6,-4,-9,-2],[-10,9,-3,1,3,5,-2],[-7,1,9,-1,-6,7,7],[-8,9,6,-5,-10,6,-6],[1,7,-4,1,8,4,8],[-5,-7,2,2,6,8,2],[1,2,-5,-1,9,-4,-1],[-10,-8,-4,9,3,-7,-9],[-6,6,8,-9,-8,3,2]]], dtype = "int8")#candidate|7162|(10, 15, 7)|const|int8
var_7163 = relay.var("var_7163", dtype = "int8", shape = (10, 15, 7))#candidate|7163|(10, 15, 7)|var|int8
bop_7164 = relay.bitwise_xor(const_7162.astype('int8'), relay.reshape(var_7163.astype('int8'), relay.shape_of(const_7162))) # shape=(10, 15, 7)
func_3312_call = mod.get_global_var('func_3312')
func_3316_call = mutated_mod.get_global_var('func_3316')
const_7185 = relay.const([-0.546892,-2.119254,-6.371515,2.983415,-1.596161,7.992266,6.872636,9.957472,0.660600,-9.911263,0.851604,7.405337,-9.412556,-8.296175,-4.959592,-8.952132,1.025578,8.696869,-4.236441,-5.531369,5.891413,1.912219,-1.514699,-8.856646,-9.840610,-9.239510,4.528960,-9.081688,3.036634,-5.481389,4.643008,2.420473,5.578452,-5.651326,6.441710,-3.725097,2.118261,0.752791,-8.177779,8.372777,-8.263323,-7.494975,1.521091,7.004782,1.743414,-6.786461,3.240446,-3.165418,4.824460,-2.343781,6.831414,4.704419,-1.203239,-1.250515,-4.948789,4.990334,5.375343,4.807239,8.432152,4.877565,-7.017245,6.960052,4.408196,-1.691256,-9.487577,7.074827,-0.407746,-8.286832,-5.334651,3.966867,-5.701556,1.679458,7.580628,-9.226211,-8.071195,6.449324,-8.393769,-8.732595,-2.910085,-5.028276,6.208210,-8.319018,-0.503967,-4.917201,4.137747,-6.088091,2.719375,4.955763,-5.652486,0.796112,-9.729065,6.433798,3.501302,-4.452214,-5.282346,-9.415926,1.332569,4.667614,-2.884125,-6.892636,-4.319087,9.743013,-6.589192,-4.461009,5.023855,8.662030,-8.151991,-9.446533,-6.724661,-2.398475,1.565020,-0.138498,3.742958,-7.835851,-6.797775,-2.891838,6.492504,-0.852966,-2.309393,-9.497486,-7.764337,7.830469,-6.644620,-3.470667,3.707532,-8.812601,1.829211,0.467196,-2.721899,-3.654895,-4.435394,1.884569,7.732584,8.313175,-0.868067,5.021100,-4.899945,-7.695520,-3.129713,0.123620,3.102453,-9.878002,4.606942,2.644622,1.226893,-2.721155,-0.642342,-3.047907,4.378321,-0.827832,8.947080,-3.293517,-4.420496,1.634124,1.641188,-8.150062,-5.429639,0.701148,-8.026368,6.184987,6.670375,4.895231,-9.768741,7.853713,-9.490705,0.630008,7.496560,2.191790,-0.575374,-8.416189,2.340091,-6.313074,5.729014,4.871611,1.572699,6.691754,-5.078922,-7.871592,-6.495744,-7.277264,3.199771,6.250065,7.307056,4.719124,5.644939,2.693645,-6.763171,-0.403791,-3.415870,-6.242006,-4.079302,-1.867087,-0.537429,3.688470,-5.847599,3.007910,-3.067657,-1.508606,0.183426,1.111811,7.811459,-1.630581,1.836004,7.125860,-3.611984,4.482366,1.423156,-9.295165,-7.535978,4.081292,0.776885,7.871082,6.046343,-6.690495,8.145029,5.402686,-6.950912,-0.196303,-2.193467,8.024159,0.267010,9.306867,-0.413414,8.798868,-8.729905,3.880067,1.773162,7.414612,-2.097158,-7.084960,3.468990,-5.211853,5.287773,1.333528,-4.572941,-9.546168,0.023253,4.924208,9.086310,0.079621,2.745477,-2.331545,0.159373,2.287499,5.016945,1.719686,2.287008,-0.346750,-6.085313,-2.730655,6.711926,9.437280,-6.918171,-6.883518,0.142924,2.855596,5.925939,1.592770,3.906598,-4.793737,-5.001817,-4.216280,-9.550556,-6.074513,-8.326614,5.733095,-6.591708,0.753161,7.961014,-2.116437,4.637746,4.438820,9.529006,8.172288,9.894807,1.183470,9.924789,4.955454,0.742441,-7.330962,-6.302694,3.479768,-9.700404,-6.118346,-9.848347,-0.812961,-2.217968,-5.223526,2.717502,0.049675,-8.058437,-5.350580,-3.593238,7.831150,-7.907366,2.013261,5.238549,3.306205,8.508429,-0.909257,-7.792496,8.240923,-9.514909,4.033347,0.905255,9.801089,8.354633,4.808133,0.887328,7.040831,9.543425,5.728464,3.578714,-8.966786,-4.476185,6.039248,-4.620893,7.371291,-1.959415,-5.613747,2.906644,3.353689,2.147329,-1.610492,5.714935,-2.160588,6.990045,-3.927090,-5.918568,2.617341,0.849042,-6.928376,-9.261099,-4.214471,-1.486704,-8.718472,-2.906458,-3.052876,5.742797,8.009963,1.398336,9.731778,1.851613,8.314622,-2.412281,-3.276351,4.105235,8.988971,-9.630703,7.503078,-5.080713,1.418697,8.795660,9.860324,-4.422979,-6.884174,-5.754439,-7.074641,5.859982,-6.387540,4.824625,1.365116,2.759187,-6.825025,-4.884032,-2.317281,6.653539,-4.367159,3.495015,6.711192,-7.503943,7.419611,0.778484,-4.196424,-5.816782,3.510181,3.586965,-0.899648,6.822475,-0.404747,-3.884889,2.918992,-6.914640,9.779707,4.427726,-8.822421,-8.523084,-0.860561,8.174121,-4.026091,0.195329,4.401308,-3.923728,2.206996,-4.419920,0.570239,-3.400614,6.470915,-3.552824,1.450148,4.384303,7.631778,5.154276,-4.608381,-8.814203,-6.747464,-3.346956,-5.615301,-2.381513,-4.244386,-7.470368,2.301343,-3.504777,9.211148,6.585827,-9.630120,-0.390979,-2.794244,-5.712233,6.527022,1.157916,-7.457597,6.902219,-7.200994,0.304496,0.851886,2.057144,-0.204028,2.732813,-3.474948,-5.458573,8.719622,6.234284,7.254585,-4.831716,-7.798760,-6.779678,8.775586,-8.126686,3.250606,0.953244,9.256924,-0.938964,-7.373128,0.984289,-3.579179,-4.558030,3.104197,-3.902183,5.190421,5.362028,-6.539134,-0.976021,5.699082,-3.628362,-8.178725,3.361888,-8.702506,-3.463856,1.183735,9.683843,2.160411,-5.430452,5.088980,5.972808,2.146754,7.791261,8.158934,-1.873559,-9.237631,5.863303,-0.911099,-9.527543,-1.894919,8.590943,-5.987532,-7.806601,-6.598284,-1.264354,4.209550,-9.721088,-6.812343,-4.552253,-8.646410,3.556515,1.450016,4.887432,9.082349,-4.434459,-8.565337,-7.774231,8.112233,0.056897,7.529546,7.091146,0.960864,3.814757,7.008102,6.937922,-9.000038,-5.728867,-9.419856,2.731276,3.272856,2.942206,-7.696629,1.718351,-1.126338,3.163504,-8.765577,-9.012631,7.399219,-1.598153,-6.160585,-6.114958,-5.934759,-4.144157,-9.636492,-5.058151,-5.630312,-8.560812,2.926785,-8.670744,-0.854768,2.510664,-3.586937,-7.676177,-3.987817,8.991421,2.366548,0.677126,-8.589518,-6.826722,-6.816112,8.406529,-6.737112,7.842060,2.084015,-8.330245,2.632396,-7.233004,4.149219,2.951129,9.176729,-5.013659,-8.399208,-9.288684,-7.535170,-5.416409,-2.166245,1.072188,4.689721,-9.468827,-5.886580,-1.322278,1.017457,2.329700,3.725850,-0.818523,3.467098,1.682578,-7.842100,6.902881,-4.518593,6.100206,3.034587,-3.392094,5.306941,3.518470,7.028136,-3.083448,-3.138390,2.879464,-7.017348,6.148086,7.877913,-8.667202,-5.792025,-5.997738,9.771811,5.710526,-7.826454,8.498265,7.040145,0.049146,-9.524882,2.214812,2.014118,-6.356954,-4.305180,-9.311220,4.047470,4.818599,-4.696925,-4.901618,-5.204505,-4.725379,7.687820,-4.026777,-8.896052,8.478615,0.187680,0.327698,-0.762238,7.602459,5.699788,-4.830552,-4.159226,4.346706,5.746005,-1.796244,5.852556,-4.661760,-9.280203,9.760716,-9.149129,6.056971,2.702801,-0.946044,-6.273722,-7.618262,4.441257,-3.197236,8.546599,-6.954918,-7.393051,-7.167527,3.162800,-1.816706,0.348447,-4.252102,5.650913,-7.875141,6.521207,-4.980433,-4.351822,3.964324,0.854480,6.910044,8.614960,9.051928,-6.018618,-8.443036,-6.159681,1.710156,-0.862871,6.648478,8.549002,7.772680,-6.541721,-2.409922,-7.831617,6.305886,-5.742182,-0.375130,-8.268456,5.901144,7.199100,1.956491,-1.523861,-5.415754,-2.477878,-7.388848,3.994202,-5.306343,0.117339,-3.490658,8.562961,0.552523,-2.317595,6.005654,3.547392,2.898723,-3.078558,-4.103961,4.659733,-6.936069,-1.113147,3.329489,-3.495081,-0.517621,-9.246399,0.060996,-8.008983,6.994946,0.476810,4.267192,6.494561,1.695742,4.281912,2.501362,-8.235180,0.365733,-7.390221,-6.964554,-4.434994,2.803004,5.407720,-3.351514,9.482120,-6.354439,3.476030,-7.637013,-8.029361,-9.951152,0.665358,-1.467132,1.639447,4.848899,-7.965232,-9.119562,-0.479002,-9.587845,1.930867,5.622499,-3.160138,5.691649,7.080537,8.729618,2.432255,-0.718794,4.676458,4.647999,-5.520637,-5.198392,-7.650960,0.393277,-1.942300,1.684309,6.019132,5.649251,-9.213819,1.811493,-9.949474,-5.492288,-2.564574,-7.804723,9.738219,7.107612,-2.714717,1.924983,-0.663884,6.896427,-8.197991,-4.242323,1.682587,4.399413,-0.909840,-8.618682,9.536220,9.428245,5.693891,4.307385,6.845031,-4.201799,7.069748,-7.892473,-0.177236,-3.766192,-7.450088,-9.883830,-0.118954,-1.027129,-5.187433,9.049048,7.878055,-8.336265,0.601423,9.923663,-5.532100,-0.929351,8.898675,6.607298,9.978404,-1.599947,1.287238,7.287689,9.993138,-5.244640,-1.684888,7.056137,-4.355184,-2.047129,-8.445702,-6.365788,2.298056,-3.631029,-3.176843,2.427091,6.885450,2.216696,-8.672693,3.753262,-1.448319,-9.181685,8.490268,-5.718415,5.304710,1.945438,7.044473,-8.452459,6.509525,2.462969,-9.547891,3.970453,8.706317,-6.839494,7.866042,2.472512,-4.581649,8.528402,6.157980,3.023298,-9.560028,-3.775294,8.687637,1.605143,3.683468,-3.082503,5.889629,-1.715241,-9.199383,-5.119459,-0.371066,-5.681856,4.773910,-0.495622,1.808817,7.114604,5.074897,4.293808,-2.341156,6.530176,-1.820551,-4.251670,6.431962,-4.550762,5.259831,1.595876,-6.564587,-8.308437,9.498383,-7.897399,8.792032,9.458512,-6.534745,4.703064,5.715546,-7.378519,-6.726505,1.336702,5.452239,6.143125,-2.870622,-4.952790,-1.954563,1.917862,-4.312624,2.979264,5.818268,-2.607249,0.008622,5.079148,-5.916293,-7.734249,-4.680338,-1.963874,2.946011,-1.261687,-9.428458,-6.069874,-5.680355,6.692628,-6.951751,-0.585976,2.067870,7.544682,-0.672340,4.236098,-8.936855,7.958926,7.524837,8.287662,8.821535,-1.114585,-9.437927,4.826122,-2.669737,2.600790,2.847544,9.749488,-8.177575,2.340946,5.351329,4.985887,5.213957,-2.403355,-2.290848,8.187561,2.255955,-3.099711,8.966022,-3.058955,-1.582009,-8.912339,6.399753,-0.519374,-2.120938,-4.900214,-9.419003], dtype = "float32")#candidate|7185|(910,)|const|float32
const_7186 = relay.const([-4.851148,9.405286,3.534425,9.612675,2.564842,7.512158,6.473307,8.446506,6.937203,1.257294,6.771254,9.506495,6.603681,6.129055,8.902140,-8.907061,1.255948,-7.285999,-9.443542,-5.432601,-2.604063,-5.872997,0.852025,5.011430,-0.518554,-4.669895,-6.002289,-8.389517,9.026187,-9.041875,3.606577,-2.160731,1.819213,1.839449,-5.820445,4.968084,8.287544,-5.795714,8.596347,2.655520,-5.850192,5.530545,-5.624285,-8.203290,-2.989328,-2.684523,9.922465,-6.686750,2.418276,7.110970,7.337988,-6.978240,-3.048456,1.653331,-3.561560,7.925243,-6.275299,3.001654,-3.688138,-1.365310,7.989591,3.349868,7.314278,3.082446,3.796795,-1.438907,5.348972,-1.628282,-8.729139,1.048360,-4.892393,6.714410,-4.149048,5.002084,0.683586,5.117625,3.129414,3.050891,-5.149218,1.795952,3.861071,-2.056023,8.132885,-5.355966,-5.700055,-9.867116,1.711468,1.609901,3.408578,-2.485901,-7.569498,5.331032,-7.590636,-5.908103,9.865717,7.391307,5.950202,9.608278,-8.581052,-6.214760,9.872996,2.552764,7.508982,-6.856136,-4.049560,3.839004,-9.025256,-0.083336,4.398056,5.324252,-3.558780,-2.861990,-9.571684,-4.186467,6.207600,3.010097,-5.844102,0.769498,9.211646,-0.127258,0.458880,-9.435956,-7.014013,-6.502087,0.721987,-7.792341,-3.683554,-8.735787,-1.014772,1.192102,4.200010,-6.074650,-7.357117,8.260505,-6.224540,9.836611,1.591521,0.291469,-1.408072,-4.171129,-4.219074,8.204090,7.996293,7.169459,1.552904,2.756690,-0.535844,-6.977903,-9.079830,-2.887518,7.530415,-1.434116,-7.724255,-1.302892,6.763810,-7.397101,4.340384,8.068123,4.683441,-1.281498,6.156648,-4.395398,8.511377,-3.981086,-2.944870,-4.320723,-9.281677,5.329695,7.666455,9.037949,-7.919551,-9.767957,-4.379494,-1.156952,-9.464225,-2.281606,-3.355392,3.861511,8.834547,6.131433,4.173770,5.608372,-5.511123,-2.156493,-1.153249,4.177120,0.592155,-2.785007,6.868696,-1.798688,8.142353,9.256692,5.590502,2.328529,1.273148,-2.495549,3.986663,-3.070054,-0.316291,0.346659,4.218341,0.244355,-3.999314,-6.719965,-7.614039,9.212357,1.626797,-0.841506,-5.939784,7.442617,-5.938472,-2.567770,7.737030,-5.721703,5.645113,-4.274267,-3.689546,0.280490,6.270889,-4.120837,-9.625463,4.896160,-6.722133,-0.030184,6.072982,-6.720473,-9.848774,3.373987,-6.913460,1.754491,7.605312,-6.316270,-4.448495,-3.715659,3.056375,9.059190,5.505875,2.279066,-9.392018,-7.205053,8.112050,-7.352131,1.815387,7.694206,7.291702,9.680931,-7.753593,-6.420003,5.600497,-7.847034,3.439576,5.806494,-9.859767,-4.524076,-7.115169,-8.109186,-6.856445,0.258979,2.858292,5.134809,-7.271603,8.983963,-8.124594,1.085720,3.326733,-9.404902,5.386962,6.800398,-3.084010,9.698782,-7.859563,-5.725851,-2.644229,-6.287375,-6.118282,-6.467137,-7.745706,8.785485,7.804912,-7.099608,-4.677354,4.573497,-8.875037,0.762827,-6.147630,-2.542373,-2.099735,0.554792,-4.302948,-4.451460,1.628675,5.362864,7.961434,-0.010169,4.842133,8.508210,8.365859,-3.277311,0.813813,-4.147532,-0.051688,-0.965786,7.518471,6.034004,3.640339,-8.661670,-2.349376,-6.114902,-0.654237,-1.837796,1.538731,3.783971,-5.239400,1.764473,2.146146,5.964260,-7.441702,8.273438,-8.485951,5.871799,-3.936675,-7.844311,-8.217612,-6.851502,-1.259508,-7.588810,-8.043545,-9.180127,1.157343,-0.747141,-0.588978,-4.110979,6.970500,-3.495771,-3.725159,7.818310,-7.505392,8.197016,-4.362962,4.620787,-3.084453,5.512252,-6.826135,4.779374,0.550061,-4.945952,-5.349429,-0.170752,-3.255261,9.853505,-0.276675,-0.172789,-1.936001,4.466017,8.267300,4.334111,9.446037,2.299555,5.340835,0.160915,-1.440863,-1.605326,0.844557,5.944279,2.579168,-7.165443,1.817763,-1.461637,7.342966,3.338214,9.147288,-2.852802,4.134837,-3.909732,3.398667,6.761854,6.548026,-2.099074,-3.569661,5.131917,-3.075921,3.433546,-9.280585,4.036514,-0.531741,-9.079400,-8.381921,-8.351848,-3.266981,-5.976334,-3.999908,-3.223735,8.124845,-0.226033,-4.878499,2.570684,-2.071813,-7.028549,7.723175,-1.991521,-8.260472,5.386055,8.527681,-9.865046,-7.022702,4.791666,-3.193300,-6.302842,-7.259605,9.644250,-0.881337,2.354878,-0.577418,2.570890,-0.026285,3.688182,3.133522,3.881119,-1.252499,-0.154676,-5.132926,7.654901,0.468654,-1.734615,1.364103,-6.471785,-8.911036,-4.146618,-4.548079,-5.010804,6.120103,6.474326,-1.620057,4.514855,6.853947,2.750951,-1.887261,-0.898803,9.643491,6.585465,4.469237,-0.815760,-2.101283,-3.802241,3.294548,5.492278,-4.245433,6.223617,2.338935,9.983666,-9.504864,-1.584991,1.691705,6.132481,8.268236,1.152856,-5.627680,-9.827163,-1.685077,2.271383,-4.283346,-7.162317,-5.683394,9.542917,5.673330,-4.968444,-3.618470,-4.041017,4.027276,-3.794680,-3.771903,4.595040,9.933442,1.187250,-3.088838,6.406706,1.535783,0.015421,8.358903,4.099367,7.459500,5.745034,-7.168372,-8.774114,5.315093,-8.284453,-3.065509,-8.639020,-1.130410,-2.994078,9.764415,5.771279,6.483536,-4.264982,3.164188,3.386823,3.404413,-2.055546,-0.976031,4.018122,7.267168,-3.869398,-3.437057,-6.576908,-7.921778,9.716363,-8.833671,8.957657,-7.352804,5.500044,6.552855,-3.358176,2.989879,0.466528,1.441236,4.856327,-6.441462,8.457909,-0.453005,4.447389,-3.207476,-0.859288,7.610988,-4.387920,0.992822,-0.222748,5.768299,8.597212,9.868247,-4.049935,-6.390606,-8.103014,4.272086,8.382027,1.595221,1.750577,2.255881,-3.392032,5.577563,-6.494530,-9.573370,7.583207,-1.020554,-4.940693,0.481570,-7.311366,-3.439831,1.907066,-4.875796,-1.732191,6.430787,2.707963,5.785732,-4.286020,9.872065,-9.715020,9.475349,7.678206,-9.116315,9.677816,-8.410953,2.217768,-6.316308,8.796944,7.353864,-3.502863,1.660688,-0.763566,-7.577462,8.387975,6.587072,5.735365,5.694636,-2.618030,1.970736,-9.560796,-6.415360,-0.023255,-8.212950,6.435015,4.185741,-9.379864,-7.701092,-2.973634,4.441643,-2.298084,6.008186,4.470655,-9.873565,-1.776998,-8.564053,7.698281,6.673308,3.685824,3.493053,6.632528,7.095336,6.752693,-3.864042,-4.602229,6.260369,9.866073,-2.583655,-4.238336,-4.679783,-3.399342,8.139459,5.603642,-2.134283,-5.634467,-9.420613,-1.080505,6.715501,7.824493,8.282494,-8.971515,-4.437151,9.922160,-5.647190,0.421681,8.551667,7.319007,1.195287,2.944246,-3.140159,-8.193026,8.304964,-0.479028,-8.188484,6.297757,4.426772,5.798477,0.109040,-6.249787,-2.816330,-0.465793,-8.848209,-9.942599,7.835904,8.997704,3.098236,-6.461035,-6.112045,7.161518,-6.638219,8.533375,-5.504444,7.177098,6.351386,-9.191058,7.291100,1.173496,-5.012941,6.241910,9.850869,8.231550,-4.113520,-7.642640,-6.974288,-5.345925,-0.292921,-3.566604,-3.711566,-8.933659,-7.666942,7.062232,4.002836,9.513398,-8.927895,4.838407,8.911698,-3.068703,-2.020998,-4.595157,-6.346203,4.119127,-6.816930,-7.581653,1.602001,1.006819,9.977818,4.295898,3.404236,-4.583262,-5.816449,-7.163572,6.539417,5.877445,7.575339,-5.427415,-2.896835,-7.050662,-7.529698,2.998014,1.559870,6.907648,8.739769,5.937508,4.802830,-3.019085,-8.866096,2.087934,8.807153,4.635757,-9.343218,6.383466,-3.190502,-8.405857,-5.327448,-9.526927,-6.002167,-0.191622,6.213937,-6.816375,0.669648,-0.417781,8.622588,5.551507,-7.494837,0.848178,1.416946,-0.719238,-2.567050,-8.235647,-5.169401,-5.021058,-0.216869,5.603775,4.077972,-5.621446,-6.052073,-9.114106,-3.400227,7.460847,-2.688720,3.945486,9.350104,4.410668,-3.975595,-0.429185,6.967117,5.537956,9.773188,9.256231,1.042097,8.229494,-9.017602,2.286335,-2.402645,6.996052,-9.756535,-7.962738,-1.007761,9.196150,7.165087,-6.513499,9.222319,-7.974347,-2.914615,5.046754,9.745229,2.744742,-2.652717,-3.025051,0.453189,6.009707,-6.846813,2.048126,-4.182142,-6.740790,-0.406928,-6.935739,-3.437317,-2.901632,-5.711848,-6.090304,9.713186,3.056304,0.769032,-7.952455,0.240068,-9.478166,5.153979,4.902424,-0.625364,6.605260,-2.452155,-9.197685,-8.666265,0.867755,-3.828093,-4.180799,9.510422,5.618079,2.701604,-5.960071,-7.450859,-5.558248,-3.136055,1.220957,8.873517,-1.051764,-4.465217,2.464827,6.474731,2.362935,-2.748498,7.096783,0.575030,-9.644744,-2.315685,4.885837,1.463594,-5.702136,5.763694,1.638495,-6.536600,-8.282559,-5.543510,8.332729,-7.627251,-3.902507,-4.613553,5.390382,-0.315188,-8.261378,-1.469598,2.325013,-4.802804,1.313096,0.473137,-0.013043,-2.277293,-2.463038,-1.910767,9.275387,-7.669508,-6.276701,6.821401,-1.772314,5.595264,8.077616,7.938724,-9.939865,-5.810556,6.070019,-8.370456,-5.487293,4.645561,2.323179,-4.406285,-8.349249,-6.622901,-1.423208,-4.399275,-6.003725,4.626938,0.404538,-7.147762,-1.357804,-8.947913,6.009483,-8.719841,7.244046,-0.685173,7.628722,1.465167,-0.826287,-4.302435,-8.877584,5.527257,6.606852,-5.754334,8.008632,-7.054015,5.588033,-6.370647,0.092464,-1.608252,-3.857212,9.616933,-2.460812,4.209738,0.051558,3.512743,5.369417,-0.210731,4.107952,3.987737,8.385562,7.693844,-1.041991,3.596661,-8.324024,0.861186,5.165640,-1.802522,1.892814,-8.415434,-7.542282], dtype = "float64")#candidate|7186|(900,)|const|float64
call_7184 = relay.TupleGetItem(func_3312_call(relay.reshape(const_7185.astype('float32'), [7, 130]), relay.reshape(const_7186.astype('float64'), [900,]), ), 3)
call_7187 = relay.TupleGetItem(func_3316_call(relay.reshape(const_7185.astype('float32'), [7, 130]), relay.reshape(const_7186.astype('float64'), [900,]), ), 3)
output = relay.Tuple([bop_7164,call_7184,const_7185,const_7186,])
output2 = relay.Tuple([bop_7164,call_7187,const_7185,const_7186,])
func_7199 = relay.Function([var_7163,], output)
mod['func_7199'] = func_7199
mod = relay.transform.InferType()(mod)
var_7200 = relay.var("var_7200", dtype = "int8", shape = (10, 15, 7))#candidate|7200|(10, 15, 7)|var|int8
output = func_7199(var_7200)
func_7201 = relay.Function([var_7200], output)
mutated_mod['func_7201'] = func_7201
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7237 = relay.const([[[-8,4,-2,-5],[-10,-2,4,10],[3,-1,10,-2],[2,-5,-6,6],[3,-10,-4,8],[5,-10,5,6],[-10,8,2,8],[9,6,4,9],[-1,-4,5,1],[-3,8,1,-5]],[[-2,-8,-2,10],[-4,7,8,5],[9,6,-1,-6],[8,-2,8,9],[-2,-6,-7,-8],[-1,-9,4,-8],[-3,-7,-1,-9],[-4,9,8,-2],[7,5,-4,-5],[9,-6,7,-6]],[[-8,5,5,-2],[2,-3,-1,1],[2,-4,-2,-3],[-4,-3,-3,-1],[1,2,-9,7],[8,-2,-6,9],[-2,6,3,-4],[-6,-9,-4,-10],[8,1,8,9],[-7,-3,7,-2]],[[-4,-4,6,7],[4,3,-8,-5],[8,-4,-5,10],[-5,6,6,2],[4,10,-5,-6],[-1,-9,3,-7],[-9,7,5,7],[-2,-3,-8,-10],[-2,-4,7,4],[-8,-9,6,-2]],[[-7,2,-8,-4],[-9,-1,-4,9],[1,-1,-1,6],[-9,-2,1,3],[-5,-1,-1,3],[4,6,5,3],[9,4,-10,-1],[7,5,5,7],[-2,-3,7,-2],[-8,-8,6,-10]],[[-5,4,5,4],[7,2,-7,4],[-9,-4,-2,7],[7,-4,-7,7],[-9,7,8,-7],[-3,1,-8,-1],[3,-3,-2,-9],[-8,-1,7,6],[2,-1,-9,5],[9,-1,-2,-6]],[[-8,2,-1,-8],[-3,-3,8,8],[5,10,2,-7],[3,8,2,10],[2,9,-10,2],[5,-6,7,5],[-5,-7,2,6],[1,1,-7,-3],[-3,-4,-9,-8],[4,-9,8,-4]],[[-1,-2,4,-8],[-3,8,2,-10],[-4,-7,5,-5],[-9,-1,-10,-2],[7,-6,1,5],[3,-5,-5,-9],[1,9,-3,-8],[-3,-3,-5,6],[10,-10,5,6],[-1,4,-6,-6]],[[-1,7,-1,10],[2,-9,-10,-9],[-8,-1,6,-3],[-8,2,4,-3],[3,10,-2,10],[-6,3,5,-8],[10,-7,9,-1],[1,-3,3,9],[-5,-2,1,-5],[10,-5,-1,-9]]], dtype = "uint16")#candidate|7237|(9, 10, 4)|const|uint16
var_7238 = relay.var("var_7238", dtype = "uint16", shape = (9, 10, 4))#candidate|7238|(9, 10, 4)|var|uint16
bop_7239 = relay.greater_equal(const_7237.astype('bool'), relay.reshape(var_7238.astype('bool'), relay.shape_of(const_7237))) # shape=(9, 10, 4)
output = bop_7239
output2 = bop_7239
func_7249 = relay.Function([var_7238,], output)
mod['func_7249'] = func_7249
mod = relay.transform.InferType()(mod)
var_7250 = relay.var("var_7250", dtype = "uint16", shape = (9, 10, 4))#candidate|7250|(9, 10, 4)|var|uint16
output = func_7249(var_7250)
func_7251 = relay.Function([var_7250], output)
mutated_mod['func_7251'] = func_7251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mod.get_global_var('func_3716')
func_3718_call = mutated_mod.get_global_var('func_3718')
call_7329 = relay.TupleGetItem(func_3716_call(), 0)
call_7330 = relay.TupleGetItem(func_3718_call(), 0)
output = relay.Tuple([call_7329,])
output2 = relay.Tuple([call_7330,])
func_7333 = relay.Function([], output)
mod['func_7333'] = func_7333
mod = relay.transform.InferType()(mod)
output = func_7333()
func_7334 = relay.Function([], output)
mutated_mod['func_7334'] = func_7334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mod.get_global_var('func_6873')
func_6875_call = mutated_mod.get_global_var('func_6875')
call_7337 = relay.TupleGetItem(func_6873_call(), 1)
call_7338 = relay.TupleGetItem(func_6875_call(), 1)
func_6472_call = mod.get_global_var('func_6472')
func_6475_call = mutated_mod.get_global_var('func_6475')
var_7340 = relay.var("var_7340", dtype = "float32", shape = (910,))#candidate|7340|(910,)|var|float32
var_7341 = relay.var("var_7341", dtype = "uint16", shape = (4, 588))#candidate|7341|(4, 588)|var|uint16
call_7339 = relay.TupleGetItem(func_6472_call(relay.reshape(var_7340.astype('float32'), [910,]), relay.reshape(var_7341.astype('uint16'), [12, 196]), ), 4)
call_7342 = relay.TupleGetItem(func_6475_call(relay.reshape(var_7340.astype('float32'), [910,]), relay.reshape(var_7341.astype('uint16'), [12, 196]), ), 4)
bop_7345 = relay.bitwise_or(var_7341.astype('uint16'), relay.reshape(call_7339.astype('uint16'), relay.shape_of(var_7341))) # shape=(4, 588)
bop_7348 = relay.bitwise_or(var_7341.astype('uint16'), relay.reshape(call_7342.astype('uint16'), relay.shape_of(var_7341))) # shape=(4, 588)
func_4180_call = mod.get_global_var('func_4180')
func_4181_call = mutated_mod.get_global_var('func_4181')
call_7361 = relay.TupleGetItem(func_4180_call(), 2)
call_7362 = relay.TupleGetItem(func_4181_call(), 2)
output = relay.Tuple([call_7337,var_7340,bop_7345,call_7361,])
output2 = relay.Tuple([call_7338,var_7340,bop_7348,call_7362,])
func_7368 = relay.Function([var_7340,var_7341,], output)
mod['func_7368'] = func_7368
mod = relay.transform.InferType()(mod)
var_7369 = relay.var("var_7369", dtype = "float32", shape = (910,))#candidate|7369|(910,)|var|float32
var_7370 = relay.var("var_7370", dtype = "uint16", shape = (4, 588))#candidate|7370|(4, 588)|var|uint16
output = func_7368(var_7369,var_7370,)
func_7371 = relay.Function([var_7369,var_7370,], output)
mutated_mod['func_7371'] = func_7371
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7415 = relay.const([[[9.147674,4.962585,3.712350,-6.341929,-2.228684,-8.681572,-5.074570,5.234813,-8.690516,0.623545,-1.332093,-8.102000,0.271782,2.780542],[9.932853,-8.944145,-9.183409,8.429424,-2.380794,8.592471,-6.886130,-3.071614,5.282768,-0.587077,-3.703501,6.418536,2.466442,-1.630799],[6.616392,5.453825,-3.185512,8.886801,4.848820,-8.193966,9.284979,3.339880,-8.336252,-4.881763,0.914230,3.553989,-7.247610,-5.911481],[-5.928842,-8.173867,-7.199426,0.175162,7.805882,-7.155946,6.774101,3.517970,-9.751655,-6.266772,-5.440303,8.324819,0.369858,-7.236515],[6.662490,-4.329579,6.537444,1.957006,-8.783254,9.642373,-4.487961,-1.400170,-7.784881,-5.646276,-1.625620,9.254089,6.053749,-3.828543],[-3.378127,-2.178691,9.828537,6.936661,9.438973,9.571969,2.468432,2.454000,-6.822275,-1.437144,5.266967,0.324221,1.664714,2.529543]],[[9.867552,-5.937005,-5.892888,-8.485467,3.504919,-8.885378,-4.322632,-2.738321,-0.464657,7.633524,7.934547,-2.346387,-4.532914,1.515902],[-2.136223,-1.702653,-0.547538,6.313789,9.365877,1.544422,-1.428597,5.421873,5.672954,-4.827688,-4.159467,-8.735388,8.879145,-1.124088],[-8.475907,-0.581513,-0.213817,6.741990,7.537466,7.914180,-0.623795,3.007148,2.257339,8.311960,-2.479305,-2.732066,-6.759694,-4.752276],[4.025110,4.469936,-9.057007,1.163660,6.637651,-4.072778,0.926861,6.544070,-0.532001,-5.910931,-3.928736,-5.917456,-1.774939,5.442131],[2.493652,-0.956132,-3.070805,-7.400442,7.089899,-7.935191,-0.881894,0.901624,-2.191313,6.359806,5.982871,-3.590848,-1.976070,-2.688715],[-7.068461,6.952803,-5.252010,-2.834992,2.993785,5.859907,-6.547375,5.258673,-1.497459,0.728506,-3.551827,1.244181,-7.544977,0.226165]],[[-3.451513,5.192179,8.454275,-9.829663,5.327889,-8.339477,-0.739280,4.568034,9.471188,3.888313,-5.763628,9.157081,-5.058959,-8.307944],[-4.320007,7.673891,-1.114069,7.271643,6.361818,4.717465,2.246368,5.586335,3.017691,-4.687512,-0.710096,0.114830,-4.648899,9.809343],[6.377146,-7.632615,1.103075,3.491974,-7.694510,0.691814,-0.645686,-4.888810,-4.152538,3.592855,6.000735,2.389666,-8.632952,-3.746547],[8.577805,9.189544,3.153127,-9.161463,8.022754,-4.060998,9.503479,2.113805,-3.405639,8.285132,6.793240,2.405046,-0.715384,-6.604176],[5.159598,-4.494629,-1.076905,5.370086,3.367786,-3.018196,4.156308,-0.383758,-2.978632,5.017023,-3.596782,-4.630798,0.839807,-0.708518],[-0.692413,-3.446494,9.685658,-1.449027,-4.663753,9.402486,5.120106,-4.230338,9.023482,8.764202,-5.983655,-6.996732,3.489268,9.037562]],[[-9.549570,2.935853,-2.244387,-8.227325,-7.950572,-5.808904,3.036826,-8.035659,6.305364,0.178097,4.095793,7.405118,1.085689,-3.195078],[-3.942420,-4.121995,3.834994,6.244274,4.059764,5.657676,-0.475332,4.090997,-1.978650,-3.355687,-2.261355,-2.853298,8.196678,-0.204083],[7.905383,4.917030,-5.289657,3.873819,4.681056,8.313287,-9.974852,-4.332354,-0.695817,-5.646201,1.905903,9.138347,9.583483,-8.418366],[4.886315,3.961236,0.313084,-4.647960,-7.508469,-2.493116,-8.743967,0.204963,-8.215558,7.890461,2.421521,1.536905,-5.073397,-0.628692],[-7.692252,-0.159265,9.370181,4.963917,8.332635,-3.061891,8.669512,0.704668,4.346072,-9.625582,4.885838,-8.506316,-6.060762,9.219884],[-6.673100,-4.061346,-8.198055,-8.946617,-0.454478,4.146197,9.504773,-5.676757,-2.066724,-3.452512,-9.999099,6.437604,-6.234380,-9.212161]],[[-1.459584,-8.563574,6.987007,7.176622,6.966406,-9.442249,5.194101,1.810424,9.806843,1.261777,-4.951358,2.350158,1.883376,-9.802960],[8.339174,-4.379661,-7.852889,-8.930260,6.797001,-4.471161,-2.329583,-6.011116,-0.052391,-9.463701,7.337739,0.487443,-1.578958,-2.617931],[2.326747,7.886490,5.246130,-2.119139,-7.261402,-2.570268,0.486143,0.687037,9.702908,4.669199,3.895594,5.640940,-5.573112,-3.243252],[-4.742929,-5.475753,0.052982,-3.809026,2.706141,4.360088,5.736457,8.192334,-4.162569,-4.559342,-1.138410,9.360936,-2.943826,4.363080],[6.379874,7.691730,-0.090525,1.452285,4.343269,3.673046,8.800694,5.287580,-7.328266,7.705813,8.936913,-2.789279,5.655244,7.585891],[-6.747228,-6.551921,0.923611,1.577684,4.722842,9.453483,-8.489902,2.611343,3.217535,9.522286,9.649893,-6.720315,-4.203781,6.346976]],[[-7.343308,8.443330,9.981478,-2.215595,4.965326,-2.076999,6.205492,-7.103997,-9.253423,9.277121,-2.096981,3.161469,7.367484,-2.355419],[-7.805094,7.227159,-0.383516,-1.876983,8.740203,-5.773678,-9.848002,8.370443,0.239864,-7.376973,-1.832904,3.905821,-9.228549,-5.024587],[3.157955,6.774138,-1.844867,-7.320121,-2.932269,-0.017567,-8.857857,-3.708758,-2.091716,-9.629136,1.455880,3.859793,-3.681295,-9.625269],[-0.528872,-4.560941,7.546851,3.450722,-7.833839,6.998339,-7.225623,-1.565690,-4.660051,-1.465352,6.280189,-5.225252,4.090598,-4.239786],[0.590691,-9.951592,7.146043,5.807806,-0.945049,6.093251,-1.570956,9.657435,-0.295030,2.528439,9.889489,9.749686,-3.619774,0.087967],[-7.980221,2.553889,2.794346,0.036358,-9.088900,6.892406,0.723777,-3.937922,9.425094,6.553124,0.550367,3.158180,-1.851514,0.756689]],[[-2.520956,-5.548442,-3.025494,-3.776696,6.486383,4.735042,-9.491236,-6.812857,1.339473,-6.223171,3.916969,-4.135820,-9.047661,2.154559],[5.320459,-4.794629,3.072402,-9.590833,-5.077288,1.015886,-7.085962,-9.700664,-3.538882,-0.299342,8.783904,-7.425361,-4.872771,0.846407],[-9.125578,4.219339,-6.697766,-6.045973,-1.474319,9.155734,2.891456,-0.071587,1.711203,5.886435,-4.381896,5.840702,-6.570747,-1.992450],[8.607053,1.831196,-2.608578,1.591636,-8.022676,-3.566248,-4.688530,-7.028422,6.734894,8.889291,8.973579,-6.570762,-2.306809,6.086907],[1.239767,-5.305789,8.724109,3.253968,-5.728382,-6.123017,-8.585843,-4.944511,9.380312,-9.550299,2.159336,6.177230,-0.807165,-7.220255],[-0.581172,9.844020,9.522713,-1.483208,-0.288027,-8.350155,-1.832036,1.369713,-1.282330,7.292852,-5.591235,-2.633132,6.739685,-4.719690]],[[4.225668,-8.694509,-6.400297,3.925470,2.853954,9.270266,9.885656,7.330828,-2.285620,-9.648087,-4.077862,-2.314656,-8.207169,-9.681068],[8.292127,2.992236,-6.251187,-0.336049,-0.932866,-8.015754,5.161309,7.541170,-9.596755,-0.890106,4.607442,5.182976,-4.970113,4.958866],[-8.242309,-5.470907,-8.115704,-3.633934,4.957181,-0.528885,-0.049289,-8.578752,-7.124274,9.908890,-9.596082,4.047999,-5.444589,2.863463],[6.381568,1.945732,-4.667453,9.867861,-2.712428,8.358665,-1.442169,5.629679,2.396664,-7.861271,7.416234,-6.762511,2.254939,2.642180],[-3.012081,-8.937093,7.586846,0.549618,2.788714,0.546901,-8.124085,1.364761,-6.591388,1.035649,-6.064336,0.352534,5.907543,9.302828],[4.691386,1.730546,7.808938,1.987015,8.895802,4.473487,0.019518,-3.616635,8.788464,-5.465949,-8.317933,8.208832,3.726514,-0.123280]],[[-5.633038,7.687456,1.168312,8.532821,-9.162219,9.992017,7.318826,-6.013319,0.572867,-4.010295,0.709117,-2.243988,7.166261,-1.526396],[-7.809883,7.053199,6.492996,8.388868,2.511079,0.210218,7.726514,-0.626802,2.914924,-4.833065,8.377802,-0.996667,5.792097,5.750378],[-9.631281,-0.507593,-2.564903,-3.681477,-7.613447,-3.436588,-9.391551,-3.781107,2.752457,3.891162,3.317228,4.606661,-6.369616,5.560146],[7.350891,-3.462996,0.309537,-2.540415,8.148848,8.675226,-1.597408,2.385776,3.885540,3.244115,-8.312930,-6.872046,-3.843354,8.347598],[5.282766,-1.164524,5.463888,-0.725810,0.691487,-1.948116,2.696529,6.773212,-2.867225,7.220711,-3.123680,-9.495967,7.823195,-3.760311],[-9.230568,-8.639486,1.752335,-1.047787,-1.140285,4.529204,-5.162393,-6.778763,5.825316,0.468023,-6.604287,7.450331,0.176626,-7.190944]],[[-0.968134,-0.710670,-8.074707,-4.798271,-7.714787,-3.089066,-4.226954,-4.024102,1.360272,-7.786387,-3.453887,-9.857304,-9.646817,0.301567],[2.584952,-4.322148,5.099399,7.365049,-9.951643,9.565005,-4.114796,8.385571,7.803856,9.798054,-2.500292,8.183870,-1.970844,2.416785],[2.582798,-2.149092,-0.843278,1.922220,-5.962492,2.173588,-0.234185,7.875919,-6.598656,3.184620,-8.595437,8.399477,9.994960,-7.941906],[-2.656534,-5.274408,-2.558849,6.963949,-6.494118,-1.458347,0.095148,0.326132,-4.033343,-0.161507,1.778275,-0.727329,8.159474,-7.256603],[-5.394329,-4.787426,-6.786246,3.428017,7.132137,-4.818550,5.952457,-5.222048,-1.833455,-0.038621,-6.713637,-9.237805,1.290089,-7.294106],[-6.746483,5.789183,0.373139,7.131647,-7.077746,-3.121935,9.431524,8.396392,-2.352439,9.201041,0.504142,8.644943,4.259912,0.381079]],[[7.107087,3.589421,-9.738067,-5.323761,-9.670315,-0.613770,-9.921455,-1.017988,7.258542,-4.820523,-7.407548,-5.516804,-8.378738,4.330008],[3.075332,-6.843960,-9.201831,-3.045642,-0.096422,-1.006989,9.039634,4.335870,-4.073398,0.169039,-2.676816,9.966483,-6.520937,-5.629885],[4.976805,-3.871190,9.752776,5.655990,-4.770454,-9.233105,2.026834,5.460841,6.536912,-4.401916,-8.457248,5.158905,-4.992273,6.271093],[3.824105,6.498920,-0.045878,4.083056,-9.408693,5.187442,9.578864,1.640258,3.697559,2.471524,7.439080,-1.940702,9.336290,-8.954341],[-3.836747,-8.658473,-0.422321,-5.354786,7.380316,-3.620499,7.009709,-5.110037,8.782021,1.748106,-5.680962,-1.243128,-0.373775,-8.828598],[-4.001528,3.843612,-9.688700,-5.533944,3.639499,8.551065,0.807069,-8.189227,-7.592869,4.579061,-9.319786,-1.922055,2.120530,1.494190]]], dtype = "float64")#candidate|7415|(11, 6, 14)|const|float64
uop_7416 = relay.asin(const_7415.astype('float64')) # shape=(11, 6, 14)
uop_7419 = relay.log2(const_7415.astype('float32')) # shape=(11, 6, 14)
output = relay.Tuple([uop_7416,uop_7419,])
output2 = relay.Tuple([uop_7416,uop_7419,])
func_7439 = relay.Function([], output)
mod['func_7439'] = func_7439
mod = relay.transform.InferType()(mod)
output = func_7439()
func_7440 = relay.Function([], output)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7443 = relay.var("var_7443", dtype = "int16", shape = (14, 2, 13))#candidate|7443|(14, 2, 13)|var|int16
const_7444 = relay.const([[[-4,-8,-2,-6,5,2,-7,3,-9,6,2,6,10],[8,-7,-4,7,-5,10,-2,7,-1,5,4,8,9]],[[-1,-9,2,-7,-2,3,-4,-8,10,-7,4,-3,-2],[4,4,10,-2,-6,-4,-7,-5,6,7,-2,-4,3]],[[-7,-8,3,8,7,3,-5,-6,-4,-5,-1,10,5],[-6,3,6,8,-8,7,-8,-2,-4,2,7,-2,8]],[[-3,5,10,-6,3,-4,7,-1,8,9,-2,8,-4],[3,7,-1,-10,8,-8,-7,-8,1,3,-10,-3,2]],[[1,-1,-4,10,6,4,8,9,8,-6,-5,4,10],[8,10,-9,9,-5,-4,6,6,7,-4,1,-2,-10]],[[5,6,7,-9,3,9,7,7,-1,-3,-3,-3,9],[-8,-1,2,4,3,10,-10,9,-7,5,10,-6,-1]],[[5,7,7,7,-6,6,-4,1,1,9,1,6,7],[-10,-9,4,-6,-8,-6,3,-3,-2,-7,3,4,-8]],[[5,1,-2,-8,3,-6,3,-3,8,-3,-4,10,-7],[9,-2,-6,-3,-2,7,7,-2,-8,9,-5,5,10]],[[2,3,10,3,-9,10,6,-8,-1,-1,-7,9,-10],[3,-2,-7,2,8,-1,3,-9,-1,-6,-6,-3,-2]],[[-5,6,-7,1,3,-6,7,4,-2,-8,-1,-4,8],[-6,8,-3,10,10,-10,7,-10,-8,-4,5,-1,-8]],[[1,-1,-3,-2,-6,-4,4,-6,-7,-10,5,-4,-10],[6,9,6,-6,-9,-6,10,5,2,9,6,8,-3]],[[-3,1,-7,7,-1,-5,1,-5,-6,1,-10,3,-1],[-5,6,-4,-8,-4,-4,-10,3,-3,1,9,5,-3]],[[5,4,6,6,9,2,-5,-10,-7,-3,8,-3,5],[8,-4,-5,-8,6,8,7,2,-5,-6,-5,7,-1]],[[5,6,8,10,-7,-2,3,7,9,-9,5,-7,10],[4,-1,4,9,-6,4,-8,10,-5,9,4,-8,-1]]], dtype = "int16")#candidate|7444|(14, 2, 13)|const|int16
bop_7445 = relay.maximum(var_7443.astype('int16'), relay.reshape(const_7444.astype('int16'), relay.shape_of(var_7443))) # shape=(14, 2, 13)
output = relay.Tuple([bop_7445,])
output2 = relay.Tuple([bop_7445,])
func_7466 = relay.Function([var_7443,], output)
mod['func_7466'] = func_7466
mod = relay.transform.InferType()(mod)
var_7467 = relay.var("var_7467", dtype = "int16", shape = (14, 2, 13))#candidate|7467|(14, 2, 13)|var|int16
output = func_7466(var_7467)
func_7468 = relay.Function([var_7467], output)
mutated_mod['func_7468'] = func_7468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6609_call = mod.get_global_var('func_6609')
func_6610_call = mutated_mod.get_global_var('func_6610')
call_7483 = func_6609_call()
call_7484 = func_6609_call()
uop_7486 = relay.atanh(call_7483.astype('float32')) # shape=(2, 3, 9)
uop_7488 = relay.atanh(call_7484.astype('float32')) # shape=(2, 3, 9)
func_1991_call = mod.get_global_var('func_1991')
func_1995_call = mutated_mod.get_global_var('func_1995')
var_7496 = relay.var("var_7496", dtype = "float32", shape = (1512,))#candidate|7496|(1512,)|var|float32
call_7495 = relay.TupleGetItem(func_1991_call(relay.reshape(var_7496.astype('float32'), [9, 14, 12]), relay.reshape(var_7496.astype('float32'), [9, 14, 12]), ), 3)
call_7497 = relay.TupleGetItem(func_1995_call(relay.reshape(var_7496.astype('float32'), [9, 14, 12]), relay.reshape(var_7496.astype('float32'), [9, 14, 12]), ), 3)
func_2918_call = mod.get_global_var('func_2918')
func_2921_call = mutated_mod.get_global_var('func_2921')
const_7511 = relay.const([[1,-6,10,7,7,-1,-9,-4,3,-4,-4,-4,-2,5,-8,-8,10,3,9,10,-4,-9,-7,1,4,2,-2,5,1,-5,-10,6,-4,9,-3,-3,10,-1,5,-7,-7,-9,7,5,5,-5,-1,-4,-3,10,10,4,-5,6,-7,1,4,-5,7,9,9,6,8,-7,-2,7,-2,3,6,-7,4,8,-1,9,2,9,-3,-1,4,-1,5,-10,9,-4,5,-9,-1,-7,10,10,5,3,-4,-8,-2,-7,-7,4,10,-2,-9,-4,-9,-5,-8,-3,2,-2,2,-5,8,-1,-6,-2,3,1,-8,4,-7,-8,-2,7,-7,-8,-10,-5,-4,-5,1,9,5,6,7,3,-9,-9,2,-4,-7,-9,-7,7,-1,4,-2,-8,4,-2,-5,5,6,4,-9,6,-3,3,9,1,-2,2,9,3,-5,4,-2,4,10,3,-6,-5,5,-9,8,4,7,6,-7,7,5,-2,10,-2,-3,10,-7,-10,-1,-5,-1,8,5,1,-2,4,2,4,-1,2,5,-7,5,3,8,-6,8,-6,8,7,-8,9,8,-3,10,-4,7,7],[9,-9,-9,4,1,-4,-9,-10,3,-8,3,-7,7,7,-3,6,-4,6,2,-3,-2,-3,-8,-8,4,-2,-7,9,-2,-8,1,-4,-10,10,-2,6,-2,5,-4,10,10,7,1,-1,-4,-6,2,-2,4,-4,-7,-2,-9,-8,1,5,10,-7,9,3,-7,-10,3,-9,4,-3,4,-9,-4,10,-4,5,8,-4,1,10,-8,-7,2,6,-9,-6,-6,-8,1,4,-4,9,2,-8,-3,-3,9,-2,5,-9,-8,-9,-2,-5,-8,10,9,-3,5,7,2,-10,9,-3,1,9,7,-6,-9,-3,1,9,3,2,-5,-7,-7,9,-1,10,-6,-3,-9,3,-9,4,-10,-9,-5,2,-8,-9,7,2,-2,-2,-1,3,-4,-9,3,-5,6,-3,-7,-3,5,1,-1,2,5,-4,-10,8,1,9,1,-4,-9,10,-5,2,-8,-4,6,-2,1,-7,3,5,3,8,9,2,3,6,8,8,1,-5,-9,9,-3,10,-4,-9,-10,-2,1,9,-10,1,-4,-4,-10,-3,-5,8,-3,-5,-5,5,-5,4,-2,1,-9,10,9,8]], dtype = "uint64")#candidate|7511|(2, 216)|const|uint64
call_7510 = relay.TupleGetItem(func_2918_call(relay.reshape(const_7511.astype('uint64'), [8, 9, 6])), 6)
call_7512 = relay.TupleGetItem(func_2921_call(relay.reshape(const_7511.astype('uint64'), [8, 9, 6])), 6)
func_5799_call = mod.get_global_var('func_5799')
func_5801_call = mutated_mod.get_global_var('func_5801')
const_7523 = relay.const([1,5,10,5,2,-8,-2,-7,-8,-5,-4,-6,1,-6,-2,-10,1,-10,1,5,-3,-4,-1,-10,-3,9,-7,4,6,3,-5,10,-10,8,-6,-7,-5,6,9,-4,-2,2,9,1,3,1,7,-5,4,8,-6,10,3,-7,3,9,-4,9,4,-7,4,-9,1,-7,9,4,-2,5,10,2,-3,9,1,-1,7,-5,7,-1,-8,-3,6,2,-10,5,-1,3,7,3,1,-2,1,-1,-1,-9,1,-6,9,-6,5,1,8,9,-8,-3,6,1,-5,10,-5,5,-10,4,8,-8,-3,10,3,-9,2,1,-9,7,-5,2,-5,7,-7,-5,-2,10,2,-7,9,-7,9,-1,2,-2,7,6,-10,-7,3,6,5,-1,7,-3,5,9,7,10,-10,-6,-8,-10,7,-7,-1,6,-10,4,-6,-4,-6,2,-5,-5,-9,-3,-7,-7,-2,5,-9,1,9,-5,-2,-3,-1,6,-9,10,-3,-5,6,5,6,3,-2,-3,10,5,8,-2,4,7,-8,1,10,2,-8,5,-10,9,3,-2,-1,-4,-4,10,-2,-1,-3,-2,8,10,4,10,-6,-5,-3,1,-3,-5,-1,6,9,6,2,7,-5,-8,6,2,-8,-2,-3,5,8,-4,2,-2,9,-4,-5,1,-8,8,6,6,6,-5,1,-6,9,-9,2,-3,-9,-2,-8,6,-9,-9,-4,-10,-5,3,2,-6,-1,-3,6,6,5,-10,8,-8,-10,-3,-6,-7,8,6,1,-3,6,-7,-2,-8,8,9,-5,4,-7,-2,-2,1,-10,9,2,-6,-8,3,-6,8,-10,-2,5,2,3,-3,6,-4,-5,-10,5,-5,8,4,8,10,8,-5,-5,2,-5,-4,3,7,-3,4,4,-2,7,8,7,-5,9,-5,-7,6,-6,-2,10,-6,8,-2,9,-7,-9,4,-7,8,-7,2,-4,7,-9,-8,10,-4,3,-3,10,-1,-8,-5,-3,1,-8,5,9,1,-3,-9,-10,-1,8,7,7,7,2,10,-4,5,-4,-5,4,-3,2,10,-6,7,7,6,-2,9,4,7,-10,2,-3,-7,3,-4,5,-9,6,-6,1,-7,6,5,5,10,4,-9,10,-6,7,10,-5,-2,-6,-4,-2,-8,-4,8,4,-5,3,7,-10,-8,4,-9,-6,2,1,9,-4,2,9,-1,2,-1,-10,8,-1,10,-4,-6,2,-2,-3,-6,7,7,10,9,4,6,-6,7,-3,-3,-8,7,7,10,-2,7,6,7,3,-9,4,4,-10,-9,10,9,-3,7,-8,9,5,1,-1,-7,-2,5,2,10,-2,2,-3,9,7,-5,3,5,2,-9,-4,-9,-3,-6,2,6,7,6,-10,5,3,4,-5,-3,-7,-10,-9,9,1,-8,3,7,-3,-9,9,2,-5,-7,-7,7,-3,5,4,-5,-1,-8,-6,-4,9,5,7,-10,-4,-5,9,5,7,-3,5,-5,-10,1,-7,6,8,4,9,-10,-2,5,6,-1,-9,-3,-10,-3,3,-8,-8,-6,6,-4,3,9,8,5,4,-7,10,-9,10,3,-3,4,5,-10,8,-7,5,-6,-10,6,-7,-6,5,-7,7,-10,1,4,4,7,5,4,-10,4,1,5,-3,5,6,4,-2,-6,10,8,-3,7,9,-9,-4,-10,-10,-3,5,2,-9,-7,-5,-3,2,-1,8,-2,-1,-7,-1,-2,-1,-8,2,-10,-10,-4,-1,-10,-10,-9,-8,5,-1,6,1,-6,2,1,-6,7,-1,9,-7,4,-9,-8,-3,8,-7,-7,-4,-3,7,-2,-8,-6,-9,-8,5,6,6,-3,-6,2,-7,4,-3,8,2,2,-9,6,5,-4,9,-4,-3,1,-8,-3,-3,6,5,-6,4,-6,6,2,-9,10,6,10,-1,-9,5,3,8,-5,-3,-9], dtype = "uint8")#candidate|7523|(726,)|const|uint8
call_7522 = relay.TupleGetItem(func_5799_call(relay.reshape(const_7523.astype('uint8'), [726,])), 0)
call_7524 = relay.TupleGetItem(func_5801_call(relay.reshape(const_7523.astype('uint8'), [726,])), 0)
output = relay.Tuple([uop_7486,call_7495,var_7496,call_7510,const_7511,call_7522,const_7523,])
output2 = relay.Tuple([uop_7488,call_7497,var_7496,call_7512,const_7511,call_7524,const_7523,])
func_7537 = relay.Function([var_7496,], output)
mod['func_7537'] = func_7537
mod = relay.transform.InferType()(mod)
var_7538 = relay.var("var_7538", dtype = "float32", shape = (1512,))#candidate|7538|(1512,)|var|float32
output = func_7537(var_7538)
func_7539 = relay.Function([var_7538], output)
mutated_mod['func_7539'] = func_7539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6305_call = mod.get_global_var('func_6305')
func_6306_call = mutated_mod.get_global_var('func_6306')
call_7541 = func_6305_call()
call_7542 = func_6305_call()
output = call_7541
output2 = call_7542
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
mutated_mod['func_7550'] = func_7550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7550_call = mutated_mod.get_global_var('func_7550')
call_7551 = func_7550_call()
output = call_7551
func_7552 = relay.Function([], output)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_7606 = relay.TupleGetItem(func_5092_call(), 0)
call_7607 = relay.TupleGetItem(func_5093_call(), 0)
uop_7645 = relay.cos(call_7606.astype('float32')) # shape=(2, 3, 9)
uop_7647 = relay.cos(call_7607.astype('float32')) # shape=(2, 3, 9)
output = uop_7645
output2 = uop_7647
func_7654 = relay.Function([], output)
mod['func_7654'] = func_7654
mod = relay.transform.InferType()(mod)
output = func_7654()
func_7655 = relay.Function([], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_7714 = relay.TupleGetItem(func_2971_call(), 0)
call_7715 = relay.TupleGetItem(func_2973_call(), 0)
output = relay.Tuple([call_7714,])
output2 = relay.Tuple([call_7715,])
func_7742 = relay.Function([], output)
mod['func_7742'] = func_7742
mod = relay.transform.InferType()(mod)
output = func_7742()
func_7743 = relay.Function([], output)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_7744 = relay.TupleGetItem(func_2815_call(), 0)
call_7745 = relay.TupleGetItem(func_2816_call(), 0)
output = relay.Tuple([call_7744,])
output2 = relay.Tuple([call_7745,])
func_7765 = relay.Function([], output)
mod['func_7765'] = func_7765
mod = relay.transform.InferType()(mod)
output = func_7765()
func_7766 = relay.Function([], output)
mutated_mod['func_7766'] = func_7766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mod.get_global_var('func_3789')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_7772 = func_3789_call()
call_7773 = func_3789_call()
output = relay.Tuple([call_7772,])
output2 = relay.Tuple([call_7773,])
func_7794 = relay.Function([], output)
mod['func_7794'] = func_7794
mod = relay.transform.InferType()(mod)
mutated_mod['func_7794'] = func_7794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7794_call = mutated_mod.get_global_var('func_7794')
call_7795 = func_7794_call()
output = call_7795
func_7796 = relay.Function([], output)
mutated_mod['func_7796'] = func_7796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7550_call = mod.get_global_var('func_7550')
func_7552_call = mutated_mod.get_global_var('func_7552')
call_7804 = func_7550_call()
call_7805 = func_7550_call()
func_3986_call = mod.get_global_var('func_3986')
func_3991_call = mutated_mod.get_global_var('func_3991')
var_7813 = relay.var("var_7813", dtype = "int64", shape = (77,))#candidate|7813|(77,)|var|int64
var_7814 = relay.var("var_7814", dtype = "int64", shape = (1, 539))#candidate|7814|(1, 539)|var|int64
var_7815 = relay.var("var_7815", dtype = "int16", shape = (455, 3))#candidate|7815|(455, 3)|var|int16
const_7816 = relay.const([-0.994580,-2.140750,3.793963,-6.737563,-7.168986,-6.833454,-3.004753,-2.377479,2.481769,-5.239988,8.717719,9.047961,9.389922,-8.736838,5.818678,-7.471793,9.505363,-7.205813,-5.950274,-5.053881,9.323706,-0.210247,8.575913,-9.493326,9.796050,3.897295,4.949010,-9.075530,-1.256506,-1.983132,-5.318341,3.823096,0.877532,-5.490153,-8.095046,-4.080065,7.227007,0.342398,-7.212358,9.616023,4.433612,-0.111797,4.225834,8.216574,-6.223310,-5.920990,-5.696279,-9.296307,3.955252,-8.857295,3.745195,8.180475,8.143621,5.152458,-1.972062,5.191724,-6.641166,0.509133,-4.030075,4.328665,-4.224199,4.949736,5.902716,-4.684913,0.102928,-0.640316,-6.666422,2.747934,5.692136,0.489813,-5.307631,9.768263,-3.114229,-1.769365,3.112352,2.696021,9.972886,-6.353868,-2.096338,9.060019,4.095310,2.080383,7.271960,5.101759,7.361353,1.793744,1.306855,-7.534453,8.823709,6.091731,-0.721448,-9.685737,0.907938,-5.551115,0.691819,2.428481,-0.637467,-7.581907,-2.098831,-0.369493,-5.786330,5.667574,-8.537978,-1.818955,-8.514667,-4.254432,-8.263180,9.029426,1.381550,-7.207062,8.594945,-5.497367,-1.088128,-2.074817,-9.676036,-9.041003,-7.169583,1.949419,-7.166014,-7.014858,3.525154,3.970518,7.787484,3.424886,0.635561,2.407325,-5.001109,-3.735508,5.061516,4.636534,8.979560,-9.036826,0.105339,-9.185265,6.561888,-7.618681,9.915461,2.049665,-7.711273,4.806871,-7.624498,4.955725,-0.661143,6.623108,-8.275365,-0.057558,-9.879056,6.217557,-2.317609,4.552480,-4.085678,-4.586616,-8.504048,-8.839265,-8.750078,-5.655169,-6.248444,8.891699,2.475723,-0.264141,9.523814,9.534227,-0.823294,7.220154,-5.068898,-2.095825,0.010949,-0.741316,-1.681171,-7.505803,-7.009371,3.801022,-4.454215,-3.082637,7.277886,1.782764,2.209773,4.358946,0.857197,-6.625188,5.650631,-8.746636,9.396132,-9.734475,2.809802,-8.119980,0.369982,5.562105,0.240726,8.026787,-0.125916,8.403985,9.305284,3.556816,-2.827119,-5.945613,2.968156,-0.522129,6.376151,-5.939586,9.832502,5.802301,2.230837,5.026252,-6.179001,0.321434,4.882696,-2.399152,5.983338,-8.827701,9.956514,-4.127712,9.365500,5.709103,1.511183,-1.278208,-2.600968,-7.409080,-8.533304,-0.479178,-8.653226,3.161668,6.966905,2.741780,-6.415352,-5.106258,-9.844213,-5.963656,6.097186,7.745800,0.763312,5.367530,9.795291,4.201241,9.526714,-8.666347,-5.260151,-4.700352,6.426964,-0.606625,0.448287,5.995303,4.875780,8.502417,2.774171,-4.934825,-3.323534,-8.642232,1.218867,8.441370,-1.217118,-6.225443,-9.865877,-3.273977,-0.095758,6.225129,1.484273,-8.172052,-2.310434,8.306132,-4.473980,-0.251477,0.623084,-1.103020,6.934212,-6.909014,5.412411,-0.338825,8.512230,3.986343,3.873858,1.041850,4.286664,-4.885077,9.175045,1.197332,0.910241,2.111240,-2.718848,9.717026,1.644942,5.231440,-5.557721,-4.521748,-2.650614,-7.869471,-1.113683,-8.246589,3.499360,8.620334,-1.584166,-5.957489,3.193816,5.495186,0.392814,3.621957,-9.628884,4.939338,-1.555251,-3.013740,8.999187,-1.196159,-0.606040,5.371588,0.232521,-7.699575,7.559605,5.907021,-1.766045,-3.396794,7.380629,8.327801,0.436614,6.705396,-1.329426,-0.043005,-7.695539,-4.125089,-0.346522,-7.402069,-0.043125,6.186971,3.426718,-1.298229,5.639138,7.682848,-2.544134,-4.743835,7.229412,9.893928,5.790439,5.785117,6.374825,-2.603497,0.875376,6.332388,-2.176376,1.392533,-6.373756,6.812614,-7.515755,-2.084651,9.803687,-3.505489,-8.559877,7.580521,-8.130910,9.438372,-3.688578,3.911263,-5.857554,5.142551,9.225382,-1.707164,6.034640,-3.774174,-9.917951,-9.638710,2.092324,-1.584350,4.063296,-7.931343,-3.050953,7.400040,3.189091,-6.026949,5.517133,-6.772056,-5.996965,-5.398681,1.327924,-3.906187,-0.313956,7.930187,2.765399,0.717122,6.889348,-4.942036,-7.278951,-6.004193,-0.208727,9.829694,8.823097,5.713370,5.863459,3.076897,-0.743512,-5.389948,-7.106707,-6.250531,-4.209632,-5.173601,6.874890,9.720208,-6.947885,-7.617399,4.661006,0.278783,8.540674,-0.238645,-0.176849,8.705206,8.509273,2.910597,-9.867272,-4.187382,-9.959555,-2.441480,8.671651,8.370266,-6.046273,9.188863,2.549168,-7.599112,9.753253,9.834010,-2.355697,-1.307789,7.637782,1.551016,4.745931,-6.999119,5.383484,-9.529254,-1.462596,-6.624165,3.694726,-8.242930,-4.305094,0.413819,-1.685176,-9.666424,-6.047934,-9.941511,-8.925527,6.343993,7.080351,8.450417,-9.891604,-9.600226,0.825782,1.085492,-8.332744,-9.547651,-3.113762,-6.369498,-2.915807,1.570290,3.551609,-3.429055,-8.253176,7.848021,1.485130,-3.161661,-9.650869,0.673902,2.144483,-7.038410,-5.268726,0.694878,1.847644,1.854704,-3.428015,-4.323791,9.763641,5.057973,-4.582893,3.950375,-6.057332,8.088944,-8.240757,-6.361071,-1.371844,1.851470,4.108204,3.201020,-4.747756,3.400412,-3.936402,-4.727869,-6.278278,1.152479,3.714175,1.163374,-4.171473,-0.933251,4.495674,-9.232359,-4.268333,-2.013888,-7.969933,-0.287037,8.876993,3.592574,5.363493,3.925848,-7.450531,-3.133678,5.172814,8.011327,-5.174128,6.960351,-9.585330,8.722571,5.423659,7.427484,-4.761544,8.015200,2.056163,2.867825,-9.041559,-7.018300,0.499459,-5.385530,-8.605093,-5.668118,-1.297523,-3.385905,9.911270,6.510285,-2.217387,4.269387,-9.470256,-3.174492,9.516978,-8.935236,-6.597718,-7.130996,5.997578,-8.011985,-1.883311,-2.501467,-5.467743,-9.236785,0.386831,8.953637,-5.392297,-0.822594,0.810169,-4.393013,-5.499791,-5.618317,7.076886,-4.845451,-7.632469,9.120538,7.076323,6.185315,-9.862315,4.053606,9.524045,2.800953,7.586617,-3.935034,-5.907780,-4.346586,1.899671,4.610287,3.837462,7.725355,6.275950,1.814097,-3.069816,-8.473016,-4.432813,-2.440951,-4.911387,8.306226,6.082143,-6.047052,-8.394035,-2.287626,-4.319055,-6.921279,4.118791,0.328041,-1.723475,4.588397,6.299108,-1.153777,-3.566406,7.582781,-8.674394,-9.808525,-7.269766,-9.412721,1.576697,-5.696471,-1.850632,-5.665376,-2.463634,-4.188884,-8.883120,4.572728,-3.676614,1.084516,7.460971,6.666310,5.844638,6.076814,8.792353,-8.105353,5.188420,-9.699204,1.847009,6.543795,-1.338760,1.907138,-1.757776,-5.932891,-3.621460,4.155558,-6.328048,2.113455,-7.235839,4.994887,-5.844384,2.572870,-7.806214,-8.273465,-7.127569,5.933049,7.957693,5.022868,9.077354,-2.190992,0.192224,2.125443,1.179713,2.923999,-3.167017,9.708369,-3.327362,-2.104008,-7.682603,-1.672090,-0.306646,8.964284,-9.938146,9.056548,-3.205876,6.905765,7.031037,7.554380,-5.830367,8.858223,1.584042,8.854926,1.859825,-5.843603,-2.560239,-2.186129,-1.385062,5.227349,-2.640883,-7.313225,-3.115900,-3.384448,0.080180,-5.391965,-1.842028,-9.491767,-5.964611,1.125599,0.091444,3.706927,-1.129401,-5.784315,4.959442,-2.146666,3.322404,-7.718156,-1.527103,6.309100,-2.469566,2.395488,4.683236,-8.150099,-4.348628,9.523932,4.530734,3.820046,-5.503065,-2.014388,2.394918,9.465406,-0.769604,6.000352,-4.312928,-6.298406,-8.329940,0.229259,1.802230,-6.263927,2.236924,0.309169,-5.860381,1.626333,-5.067373,3.815880,-8.586000,-3.070350,-1.968276,1.329112,5.431722,-1.369710,-7.014602,1.447957,0.997891,2.811088,-5.027055,-8.908654,7.997856,7.853617,5.501268,-3.591258,-0.848836,-6.895386,-3.964717,6.148448,2.231114,4.822680,-1.055392,5.136073,-4.900606,-0.429205,6.414660,-8.537413,-6.322853,4.905264,-4.605025,7.719936,-8.887604,5.435057,-5.633630,-2.991391,-6.533452,1.840415,4.647843,7.172788,8.600074,-8.918374,-3.348399,7.521091,-8.565688,-7.648026,-6.176054,3.232910,-2.519123,9.815144,-4.724180,-7.012737,-3.540958,0.938924,2.631610,4.434177,-2.480169,8.013034,-5.094201,-5.312146,3.986645,3.426079,-9.001311,5.827081,-5.722269,2.446940,-7.520086,5.076212,5.127772,-7.817785,8.179399,7.042686,3.484506,-7.387407,-1.177049,9.484802,-5.264855,3.121716,3.449903,4.640247,-5.504522,-2.031429,-3.706357,4.001208,-5.331618,-2.683368,9.280402,-8.030271,5.774762,0.022204,1.113895,0.158032,3.805039,-0.558220,9.401750,-6.600176,7.097307,3.109360,1.108519,5.540474,-3.629741,0.904404,-2.802834,3.633505,6.988864,1.999601,7.909058,-2.598852,1.282012,0.194206,-9.482041,-9.107287,5.383170,2.206447,-4.688230,-0.576025,6.271057,1.961122,0.172918,4.626650,4.896800,3.517489,3.217283,4.375548,8.994940,-9.017849,4.015672,5.245381,-6.186560,8.433388,0.835854,3.496915,7.940997,-4.564012,7.909426,3.824571,-8.326180,5.919415,-7.955542,4.382953,-5.392072,0.641219,-9.655037,-2.682917,-6.868270,-3.383576,8.357902,-0.595293,-3.326482,-3.144007,-3.678057,-9.836745,-6.352971,-4.749885,-5.084726,-7.147507,2.939061,-8.147275,-9.268662,-9.407594,-2.936753,6.711413,4.417127,8.364054,-6.816110,7.107086,6.929995,-9.400904,-1.192030,2.698825,-3.600074,4.725526,5.652219,6.638758,-5.699740,-5.276298,-9.673150,-4.324540,0.650392,9.219788,3.410632,-9.604153,-2.831683,6.601206,-5.728617,-0.794849,-7.995147,-6.440383,6.565004,-6.644807,-7.172223,5.823986,-1.694373,-6.457672,0.829584,6.324884,-2.864387,8.822101,-9.642494,0.845348], dtype = "float32")#candidate|7816|(900,)|const|float32
call_7812 = relay.TupleGetItem(func_3986_call(relay.reshape(var_7813.astype('int64'), [7, 11, 1]), relay.reshape(var_7814.astype('int64'), [7, 11, 7]), relay.reshape(var_7815.astype('int16'), [1365,]), relay.reshape(const_7816.astype('float32'), [900,]), ), 0)
call_7817 = relay.TupleGetItem(func_3991_call(relay.reshape(var_7813.astype('int64'), [7, 11, 1]), relay.reshape(var_7814.astype('int64'), [7, 11, 7]), relay.reshape(var_7815.astype('int16'), [1365,]), relay.reshape(const_7816.astype('float32'), [900,]), ), 0)
var_7818 = relay.var("var_7818", dtype = "int16", shape = (455, 3))#candidate|7818|(455, 3)|var|int16
bop_7819 = relay.maximum(var_7815.astype('int64'), relay.reshape(var_7818.astype('int64'), relay.shape_of(var_7815))) # shape=(455, 3)
output = relay.Tuple([call_7804,call_7812,var_7813,var_7814,const_7816,bop_7819,])
output2 = relay.Tuple([call_7805,call_7817,var_7813,var_7814,const_7816,bop_7819,])
func_7823 = relay.Function([var_7813,var_7814,var_7815,var_7818,], output)
mod['func_7823'] = func_7823
mod = relay.transform.InferType()(mod)
mutated_mod['func_7823'] = func_7823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7823_call = mutated_mod.get_global_var('func_7823')
var_7825 = relay.var("var_7825", dtype = "int64", shape = (77,))#candidate|7825|(77,)|var|int64
var_7826 = relay.var("var_7826", dtype = "int64", shape = (1, 539))#candidate|7826|(1, 539)|var|int64
var_7827 = relay.var("var_7827", dtype = "int16", shape = (455, 3))#candidate|7827|(455, 3)|var|int16
var_7828 = relay.var("var_7828", dtype = "int16", shape = (455, 3))#candidate|7828|(455, 3)|var|int16
call_7824 = func_7823_call(var_7825,var_7826,var_7827,var_7828,)
output = call_7824
func_7829 = relay.Function([var_7825,var_7826,var_7827,var_7828,], output)
mutated_mod['func_7829'] = func_7829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_7874 = func_3652_call()
call_7875 = func_3652_call()
func_3938_call = mod.get_global_var('func_3938')
func_3941_call = mutated_mod.get_global_var('func_3941')
const_7877 = relay.const([-10,-5,9,-5,9,2,-7,-6,1,-2,-9,8,-2,-7,4,-1,9,3,2,-4,-1,5,-7,6,3,8,4,7,6,-3,2,-5,1,-8,-9,-8,-9,8,-5,5,-2,-2,-6,4,-3,-2,-2,7,-8,8,7,8,8,3,10,-3,-10,9,-4,-8,10,3,9,-7,4,4,3,7,-8,5,8,-10,-3,-4,4,3,4,-7,-5,-9,10,-10,7,-4,-8,3,-7,2,-4,6,-8,1,6,-4,10,9,9,3,-7,-3,8,-8,-10,6,7,-9,2,7,-8,8,-6,-10,-6,-3,1,-7,1,-5,-6,-5,4,9,6,3,-9,-1,-10,10,-5,-1,8,-5,-1,-3,1,3,-4,1,-10,-5,9,-4,7,5,8,8,3,-8,-4,-3,-1,-10,1,-4,-8,-2,4,-6,-1,-5,-8,-8,8,5,-8,-7,-7,3,-10,8,5,7,-7,2,-7,-8,2,5,-5,2,-1,4,9,7,-4,1,7,1,-2,-2,2,3,-10,-5,-9,10,-7,-1,10,8,-4,-5,7,-5,-9,-6,-8,6,-7,5,-8,-9,7,-3,-7,3,10,-10,-4,-5,-3,7,-10,-9,5,-5,9,10,-4,-7,6,10,-7,-2,-7,-5,8,2,-6,6,-7,4,5,-3,7,-9,9,-8,2,-9,-6,7,-8,-1,10,-6,8,-4,-4,-3,-7,5,-4,2,4,2,8,4,-10,2,4,-6,6,7,-7,2,-5,-9,9,-2,5,-4,5,2,-3,-5,10,9,-3,7,-9,5,-5,2,6,-8,-9,-7,-10,-2,-3,2,-10,1,-9,5,-9,-1,-5,-10,-8,5,1,-6,10,6,4,-7,8,2,-8,3,-9,6,9,4,-6,-9,-10,-10,10,4,-3,-10,8,-6,9,8,8,-2,9,6,-7,-2,7,-9,-7,3,-3,9,-5,10,8,3,-1,3,-3,7,6,-8,1,-2,-10,8,-7,5,-4,9,-4,-8,-9,6,1,-3,3,10,9,-2,-4,-2,-7,-5,3,-3,-6,3,3,9,-3,1,-4,-1,2,3,4,-8,-4,2,-9,-6,7,2,1,5,4,1,6,10,-5,-5,8,-10,10,-2,8,-6,7,6,-9,-1,9,-8,4,-5,1,-8,7,3,-9,-6,5,5,-8,-10,-3,10,7,-7,6,-9,-3,-7,-4,-8,9,3,4,6,8,10,10,-3,8,7,-3,-2,-5,7,-3,-4,6,4,5,5,7,9,5,-4,4,-6,8,-3,9,2,-4,-4,-4,-2,8,4,-3,5,-5,-1,-8,5,-7,9,-8,-9,7,-5,-2,2,4,-7,9,7,9,-4,-8,-5,9,2,2,10,-7,-10,1,10,8,-6,-1,2,4,-9,4,7,5,-1,-3,8,-7,8,10,7,7,-4,10,-8,-1,7,10,-1,5,6,6,-7,-2,-2,5,10,-7,-8,-10,1,5,9,2,-2,1,-5,2,9,-9,6,-4,-7,1,-8,-4,-4,-5,-4,-2,-1,4,9,10,-10,1,-6,-10,-6,8,4,2,-1,-1,-3,-3,6,-4,3,-3,4,9,-10,1,-2,1,1,5,10,6,7,-2,7,7,8,5,3,2,-4,9,-3,3,-4,5,4,-9,-3,5,-7,-3,2,8,1,7,4,3,-6,3,-7,-6,-4,-2,-8,-8,-9,9,-9,7,9,-5,-1,2,7,9,-6,4,2,6,5,2,-2,-5,9,1,7,-1,-8,-8,-8,8,-2,3,-8,-3,-10,-9,7,5,8,-4,-4,5,-7,7,-10,1,-7,5,3,10,-4,-10,-5,-6,3,-7,-4,10,-5,-9,4,-4,-6,8,-8,7,-7,10,-3,4,8,-4,-4,-4,-1,-4,4,-6,9,-4,-4,7,-7,5,5,6,1,-6,2,5,-6,10,9,2,2,2,-4,-9,-8,-1,-4,-8,4,-3,5,-4,7,1,-2,3,-9,-3,-4,6,-7,-6,-3,-9,6,7,-9,2,-7,-3,8,-6,-1,-3,-1,8,7,10,-6,-1,10,6,9,5,-5,-6,4,-1,10,9,-3,1,1,-2,-2,-9,-10,-2,-7,6,7,4,-5,4,8,-9,2,-3,-3,10,-7,-8,6,-6,8,4,6,-5,-4,10,-4,-7,9,9,-6,-9,-8,1,-8,-6,1,-2,-9,-1,7,6,-8,-2,-2,1,10,2,9,-3,-10,-3,-10,-9,-3,-3,-10,4,10,9,6,2,1,5,5,5,6,6,3,6,-8,6,6,7,7,1,-7,-9,-7,6,-10,-9,9,4,-3,-9,9,-8,-7,-4,3,6,-8,-8,-9,9,7,8,3,9,-4,8,4,-8,-3,3,-8,5,6,-1,10,-8,7,-1,10,8,-10,5,2,-5,8,8,9,-9,9,-3,9,-3,7,-7,-6,1,1,10,-1,-6,-4,-4,10,-1,-3,-7,4,-9,6,10,-2,9,-6,5,-3,8,-7,-2,8,-5,8,5,2,4,1,1,2,-7,9,10,4,1,2,8,7,-1,7,-8,2,-8,-4,6,-9,8,6,-1,-8,4,6,-2,-7,-9,-8,5,6,3,-6,-8,4,4,4,10,6,3,-6,-8,-7,9,-3,-7,2,1,-3,-3,-4,6,-2,1,-2,1,-1,-3,5,6,-8,7,5,8,-6,4,7,2,-8,-9,-9,-8,-1,-9,-3,-4,-7,1,-8,1,-1,8,5,-9,-4,3,9,4,-2,-6,-7,8,-1,8,-9,7,-6,-9,-4,-5,-5,2,10,5,8,-9,-2,-8,7,6,9,-7,8,-7,4,-3,-8,4,2,2,-3,-4,9,9,2,-3,9,-5,5,1,1,8,-2,9,-6,-3,-1,3,1,-5,9,3,9,-7,1,6,6,3,-8,10,-5,-2,-2,-8,9,5,3,-8,-9,7,-4,1,-6,-8,1,10,-2,4,-7,6,-6,-4,10,-9,8,8,8,-4,6,-9,-1,-4,-1,-7,-9,-2,8,1,-1,-7,-8,-1,-6,9,6,-10,-8,1,1,6,3,-6,-8,-8,-9,8,-2,2,-5,-2,2,9,6,-9,-8,-8,7,-1,-1,5,-8,7,-1,9,-3,-6,-5,-7,5,-10,5,3,2,-8,-4,6,6,-1,-6,3,-3,6,-4,-9,-1,1,8,7,-7,-4,-7,-3,6,10,-6,1,1,-7,10,-5,4,-6,-7,2,-9,-5,9,-9,-3,4,9,-9,3,-7,-2,4,8,10,-5,9,1,10,3,-6,6,6,-7,10,-10,3,-1,8,8,-5,2,-7,-2,-4,6,-3,-10,-10,3,7,6,5,-6,7,3,-9,7,-10,4,-6,-4,5,-8,-10,-4,6,6,9,8,-8,-9,-8,4,7,-1,-10,-10,8,-7,-10,-5,5,10,5,-2,-9,-9,-7,-2,-3,-7,-8,6,-6,-6,8,-5,-5,6,10,-3,7,5,-9,10,2,4,6,-9,7,-9,9,7,-6,5,9,9,2,-1,3,-4,1,-8,-10,-7,2,-3,9,-4,10,-5,7,-6,7,1,-1,6,3,-8,9,-1,3,-2,3,-9,5,-4,7,-3,-9,4,-9,1,4,-6,-5,4,2,-2,1,-10,7,-9,7,-1,-8,6,9,1,5,6,6,-9,3,-5,-5,1,2], dtype = "int16")#candidate|7877|(1365,)|const|int16
call_7876 = relay.TupleGetItem(func_3938_call(relay.reshape(const_7877.astype('int16'), [1365,])), 2)
call_7878 = relay.TupleGetItem(func_3941_call(relay.reshape(const_7877.astype('int16'), [1365,])), 2)
bop_7889 = relay.minimum(call_7876.astype('uint8'), relay.reshape(const_7877.astype('uint8'), relay.shape_of(call_7876))) # shape=(1365,)
bop_7892 = relay.minimum(call_7878.astype('uint8'), relay.reshape(const_7877.astype('uint8'), relay.shape_of(call_7878))) # shape=(1365,)
bop_7912 = relay.bitwise_or(call_7876.astype('uint64'), relay.reshape(bop_7889.astype('uint64'), relay.shape_of(call_7876))) # shape=(1365,)
bop_7915 = relay.bitwise_or(call_7878.astype('uint64'), relay.reshape(bop_7892.astype('uint64'), relay.shape_of(call_7878))) # shape=(1365,)
output = relay.Tuple([call_7874,bop_7912,])
output2 = relay.Tuple([call_7875,bop_7915,])
func_7917 = relay.Function([], output)
mod['func_7917'] = func_7917
mod = relay.transform.InferType()(mod)
mutated_mod['func_7917'] = func_7917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7917_call = mutated_mod.get_global_var('func_7917')
call_7918 = func_7917_call()
output = call_7918
func_7919 = relay.Function([], output)
mutated_mod['func_7919'] = func_7919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_7938 = relay.TupleGetItem(func_5092_call(), 0)
call_7939 = relay.TupleGetItem(func_5093_call(), 0)
output = relay.Tuple([call_7938,])
output2 = relay.Tuple([call_7939,])
func_7950 = relay.Function([], output)
mod['func_7950'] = func_7950
mod = relay.transform.InferType()(mod)
mutated_mod['func_7950'] = func_7950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7950_call = mutated_mod.get_global_var('func_7950')
call_7951 = func_7950_call()
output = call_7951
func_7952 = relay.Function([], output)
mutated_mod['func_7952'] = func_7952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7765_call = mod.get_global_var('func_7765')
func_7766_call = mutated_mod.get_global_var('func_7766')
call_7963 = relay.TupleGetItem(func_7765_call(), 0)
call_7964 = relay.TupleGetItem(func_7766_call(), 0)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_7977 = relay.TupleGetItem(func_6759_call(), 0)
call_7978 = relay.TupleGetItem(func_6761_call(), 0)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_8036 = relay.TupleGetItem(func_5092_call(), 0)
call_8037 = relay.TupleGetItem(func_5093_call(), 0)
func_7654_call = mod.get_global_var('func_7654')
func_7655_call = mutated_mod.get_global_var('func_7655')
call_8042 = func_7654_call()
call_8043 = func_7654_call()
output = relay.Tuple([call_7963,call_7977,call_8036,call_8042,])
output2 = relay.Tuple([call_7964,call_7978,call_8037,call_8043,])
func_8046 = relay.Function([], output)
mod['func_8046'] = func_8046
mod = relay.transform.InferType()(mod)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8046_call = mutated_mod.get_global_var('func_8046')
call_8047 = func_8046_call()
output = call_8047
func_8048 = relay.Function([], output)
mutated_mod['func_8048'] = func_8048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3775_call = mod.get_global_var('func_3775')
func_3777_call = mutated_mod.get_global_var('func_3777')
call_8061 = relay.TupleGetItem(func_3775_call(), 0)
call_8062 = relay.TupleGetItem(func_3777_call(), 0)
func_7742_call = mod.get_global_var('func_7742')
func_7743_call = mutated_mod.get_global_var('func_7743')
call_8063 = relay.TupleGetItem(func_7742_call(), 0)
call_8064 = relay.TupleGetItem(func_7743_call(), 0)
func_1991_call = mod.get_global_var('func_1991')
func_1995_call = mutated_mod.get_global_var('func_1995')
const_8075 = relay.const([-5.411768,-8.093904,2.955557,9.500704,-8.893200,9.353590,-5.822318,-3.680678,7.049966,-7.228908,8.578152,1.702473,0.184351,1.356504,3.490517,4.502810,0.427795,7.339293,-7.155514,9.168125,6.424081,4.974705,-5.507020,3.027129,-8.505113,3.495667,-5.439110,-7.726133,-2.111770,-2.292279,6.148213,6.118031,-8.055389,2.338814,-4.926346,2.747474,0.326947,8.958974,-8.295538,6.125291,-8.646620,4.738079,-6.039612,-9.373695,4.736291,-2.356512,4.903242,6.657838,0.275700,-8.642606,0.566306,6.791881,-5.427162,-8.420467,4.428948,0.080700,5.952800,-3.996801,2.152276,-3.777909,-0.434451,4.951054,9.837799,1.571334,6.978837,-8.431006,7.207913,9.534449,-6.086988,-6.636946,3.102456,7.713527,-2.520611,-8.252790,-1.812540,-6.092045,-4.445869,-5.371447,-8.890117,-2.434414,1.128936,-2.057609,-6.426930,-1.881521,-0.914544,-3.873933,9.657295,-9.180381,-0.296797,8.641766,9.911379,1.200700,3.692688,8.751414,9.861725,2.403336,-6.656759,8.309884,1.292045,1.647128,-7.813301,0.091003,5.566026,-9.840405,2.387225,4.731766,0.280741,-3.579734,-9.685754,4.982514,9.497314,2.929866,-4.791222,-9.846013,-9.110868,0.349872,0.917813,-3.694276,-3.279225,-1.848447,-8.197061,7.685034,-2.939428,-5.819118,0.299682,-5.038889,-8.747370,3.924697,-6.542711,-1.266950,7.629934,-0.565136,2.749722,-8.340993,7.984653,5.155053,-1.202435,2.582425,-8.345194,7.309254,8.923763,-9.238495,6.984371,3.593645,4.013652,5.221716,8.031254,5.623668,-8.506978,8.659615,0.984608,-4.340799,4.116129,-5.580864,3.036379,4.216959,-4.178369,3.398961,2.919411,3.242893,-8.759903,-5.263510,-6.664726,-7.867971,5.869380,-2.033322,-8.681148,-4.884180,2.848153,1.462075,-3.712181,1.940189,-5.621596,4.308848,1.810039,-8.832554,5.825780,-4.622256,5.743420,-8.473459,-0.754147,0.412006,5.796887,-6.518912,-9.996094,-2.586630,-1.226492,1.950083,-6.294420,6.969488,-0.091883,1.743236,-8.195099,1.544870,2.786443,-8.739791,0.630147,-9.634233,7.034920,8.758026,5.855238,-6.942176,3.635118,-3.056345,-4.852433,-5.116324,-0.398154,-6.495499,7.701620,-7.605225,-8.838343,-9.079317,-1.527515,-1.389267,3.109498,5.165307,7.723664,-9.734568,-1.299661,-0.722965,-8.208579,4.345233,6.578937,4.071074,2.029691,0.365159,-9.884008,2.920834,-1.197062,-9.966025,9.731655,-7.658486,-0.934917,-3.010870,-6.367445,3.995863,1.606631,7.871408,8.661157,6.379943,-9.307858,-0.844565,-7.538020,1.439006,0.268244,-3.594136,3.261140,-8.998280,7.375494,-9.473458,2.168545,2.763355,-1.119252,4.505024,2.489576,8.915716,4.944828,8.395223,6.529391,6.197591,-7.164599,-6.262358,-8.313048,2.553708,7.126164,9.158188,-4.744766,9.029977,9.153876,-9.470406,1.124003,-9.813069,7.040010,-3.875680,-1.350510,8.559361,1.882687,6.395155,-8.799551,0.118329,-0.474217,7.597824,5.602442,-7.058279,3.890659,-8.542733,-6.046082,-3.350739,-7.348856,-7.634650,-6.679646,1.335894,4.111032,1.490379,-1.996293,9.025991,-5.179733,2.414865,7.419695,-0.523173,-7.159535,7.525315,-2.539455,-0.810032,-1.090732,4.609747,-3.094237,-9.064848,2.358355,-1.568541,9.883739,2.296629,-0.280652,5.877428,-6.336464,-5.247567,-1.129841,0.895109,8.792942,1.747179,-3.801379,-6.434396,-8.223005,9.134046,9.269295,9.562317,8.851166,-6.657128,3.886258,-7.106303,0.490275,-8.815444,-7.705722,-6.243422,4.994203,-4.664318,4.379977,-6.615558,3.800028,5.803292,5.839459,5.073914,6.048379,-9.852738,-3.237310,-8.179789,-9.171408,6.313450,-2.747141,-0.299323,-7.852112,-6.511392,-2.677478,4.267329,-7.689356,-4.778810,6.717986,-7.568402,5.471346,4.393131,3.871333,4.644897,-8.906303,2.701359,4.065239,-2.778043,-7.204241,1.262076,3.611980,-5.685961,8.251520,-8.495324,0.899925,-2.600604,1.198782,-4.058671,8.610325,-0.399085,-3.072062,4.516322,-0.764579,9.338803,-6.668402,4.137059,0.472831,7.115661,-8.624282,6.029171,-8.546343,-3.658389,7.135247,1.521041,-9.421981,-3.195120,2.043070,-5.991239,8.991667,-1.484083,-1.299166,-4.358715,5.148020,4.851970,2.950339,6.323814,-9.703769,7.729120,-9.341662,-1.394972,9.528627,-3.475763,-0.084372,-6.034517,-5.690430,1.340238,-5.801554,6.291011,8.274172,6.942863,6.336540,4.638890,-6.467981,-5.359962,0.465139,2.494546,0.459255,5.145832,8.590560,-9.769035,-8.754943,-6.554599,5.441530,-1.353153,-3.682150,3.272951,5.494725,0.068239,6.764267,-0.200447,5.366147,0.682255,4.879371,-1.814922,-0.485286,8.007588,0.734281,3.401032,2.087316,3.822503,1.956672,3.489395,2.599633,-0.151118,-1.634757,4.810207,9.146142,0.039033,2.791900,5.783978,-3.842804,-9.383573,-9.345382,-1.691086,-9.971456,-0.939170,-2.985614,-0.946569,-8.320149,-1.288621,9.553456,-8.478638,6.874536,-1.941706,-8.292398,-5.099118,-7.000435,-9.877057,9.725398,-6.605071,-3.756200,4.715560,-3.683701,8.589423,4.710447,-4.176891,6.767873,1.170502,-2.950030,-5.275307,6.145692,2.934918,6.208149,-9.107811,-3.276693,-7.826661,3.386763,9.631960,4.345692,9.549213,-7.920979,-4.396208,-8.181793,-6.556340,7.749800,1.303592,-8.502937,-2.413030,-5.762829,-9.882902,6.678266,-2.913603,-0.598646,-4.650806,-3.098477,-1.448186,6.767770,-4.865770,-3.825944,-0.478607,5.456905,-1.107323,-4.225069,-0.911029,-0.995994,6.212459,1.428829,-2.179230,4.066988,-5.817972,-8.977546,6.059910,7.274014,-3.623866,-4.680855,2.480053,-6.235236,3.948225,-4.263134,-6.266581,-8.444098,-3.793874,9.088914,-5.744048,6.157707,-0.923476,5.687680,-1.368502,4.935267,8.930997,3.640709,-8.148440,-0.351192,8.426747,1.281611,8.313814,2.977645,8.631564,0.260837,-5.654148,-5.043216,-3.993975,-0.260331,-7.691673,7.375588,3.822450,-1.321634,9.847784,-2.166946,2.310019,-5.484834,4.256863,-9.291990,-4.018597,-5.684012,9.210310,8.640229,6.749171,-0.528295,8.968191,8.949211,-4.764330,-1.827740,-9.822919,-9.899612,-9.275649,2.852673,1.010386,2.786320,8.655300,-2.980673,-8.316833,-4.066405,7.824182,-4.909470,6.651143,2.391348,2.289859,4.372632,-9.358660,-6.685271,-7.876291,5.021887,7.985467,6.527783,-0.911130,6.709406,0.890414,-9.057980,-9.570552,6.814874,-7.726063,-1.407508,1.649338,-6.720188,5.867120,-1.298490,-7.506035,0.534300,-6.719194,-0.940977,-9.981860,-3.399157,8.838900,-8.504493,3.940722,9.945173,7.089489,6.927931,0.741616,-9.249859,-9.110611,-7.959351,-1.664687,7.602525,-9.826048,-1.552715,2.582487,-4.065507,4.957780,4.136879,2.113040,2.322339,-5.788161,2.035437,-3.637612,-4.762405,-5.409003,7.500754,9.187998,-3.286949,-0.372259,-9.316648,1.170862,-2.389956,-4.868578,5.539085,4.765959,-6.293132,2.855172,4.779910,5.161204,6.170813,2.849641,9.259487,9.156661,-5.102633,-4.268003,6.119972,-9.809285,-6.148774,1.236896,-4.752747,-0.660073,-0.838299,-7.587515,6.686515,-3.540785,4.790886,2.217008,-7.739938,-0.460044,-0.977145,7.859921,-3.541576,-1.315821,-1.684821,-6.116905,-5.432162,5.650835,1.962711,-3.968834,-4.019664,9.602875,-7.988365,-4.606675,5.092126,-7.387318,7.832189,5.779814,4.459888,-4.309901,-6.444175,-9.193531,-4.786084,1.119101,5.712820,-1.448670,-0.670356,9.221652,9.841808,8.175187,8.150536,-5.597778,-7.054352,-9.849773,1.511770,5.684937,-7.842733,-4.418281,-8.596038,-2.519183,-9.042476,0.845726,-0.253112,3.668794,-8.992075,-3.014077,-5.336052,-5.397268,-5.716119,-3.207829,4.671837,4.059501,7.181846,-4.469840,-1.739883,7.202934,-5.014147,2.169427,-0.533984,-9.589621,-2.916881,-3.872727,2.249225,4.453594,1.427488,-5.847567,1.710708,-2.098868,2.772415,-1.508396,1.733619,-6.424306,-3.263220,-6.987289,4.115824,9.320855,7.593097,-3.835962,-1.050438,0.128480,-0.722650,2.119304,6.421370,-7.831955,-8.235730,-5.823754,2.625195,6.317587,8.970105,-9.285400,-6.602414,-9.053765,2.290877,7.105251,-5.689928,9.542253,-2.986707,-1.673918,3.041925,-6.634750,-9.508118,9.120445,-7.712651,4.506055,8.680925,-3.509820,-4.933669,3.385517,0.514824,4.047551,6.986798,-3.943124,5.825682,-1.730185,-5.017429,6.772548,0.890488,-2.716716,2.053916,6.414417,5.293944,2.097504,-6.094310,4.189633,2.465949,1.477441,7.867472,-5.245724,4.995629,8.035291,8.125222,-2.226011,-2.049449,-6.411059,-1.138304,-4.353359,8.856563,6.498960,-5.776602,-8.880420,-0.894501,6.756086,2.954582,-3.808751,-8.326155,-7.875411,-0.170709,-8.668756,7.292505,2.905725,8.027369,1.316477,4.044124,-6.674968,1.691998,5.901278,1.457380,-3.122497,-0.174645,9.414544,-9.056247,-4.019133,-1.661983,3.195201,-1.509415,5.955588,-5.903080,-2.849595,-7.107132,-7.971917,8.417114,6.907939,-6.038940,-6.620151,-1.206583,2.624109,1.751147,-0.705526,-3.278331,-4.406279,-3.013356,-8.931230,-3.538470,-0.391144,-5.449335,0.626985,-6.337904,-8.197436,-2.928919,2.964126,-2.077810,0.259621,-1.921523,6.494667,-7.863910,8.150618,6.468528,8.081915,7.487352,-0.269667,-0.216285,3.185065,-5.631008,2.691860,-8.842414,-3.417075,9.998304,7.105048,6.464297,2.877735,-4.434012,-1.254327,-0.828697,9.305707,5.815790,9.536447,9.088078,-0.974753,-5.059520,-1.299389,-5.746198,8.601337,4.327312,9.229321,9.826093,-9.248133,-8.072121,-7.143669,-0.389495,-6.851160,2.957215,-4.509519,-0.325621,5.088708,-9.161548,-3.424777,-0.213006,2.262297,-0.031852,-2.020706,7.160098,3.788707,3.004048,-9.747872,7.438136,0.264171,6.651747,-6.297755,-6.735702,-6.831545,7.109113,8.551455,4.473843,3.857492,3.665922,4.749099,-5.889121,-4.665737,-8.543967,-0.004790,1.601660,2.367506,0.388132,5.178450,7.291487,-0.114709,-3.712003,-7.357298,-9.415096,4.913085,3.247034,-9.571052,2.108880,0.486186,-7.227717,5.255080,7.040437,-8.459978,-3.285107,-4.052800,9.350030,7.636192,-7.624050,3.028864,1.914288,-8.987623,-2.618247,5.556564,-5.868280,9.570985,-8.822066,-6.616120,0.137782,-7.834957,-2.439915,4.065980,2.949561,4.441771,-1.314559,2.264834,9.475988,-9.413107,-6.176470,9.141129,-1.343734,4.417491,-9.878184,-6.770856,-5.284924,0.845722,4.075064,6.157354,9.659174,-4.977945,5.035503,-4.554527,-0.528636,-0.336818,-8.099903,1.084679,2.504697,3.682633,-6.907405,8.121772,-1.082039,-6.446826,-0.055147,-7.138316,-9.319705,4.072606,-7.524810,5.359385,1.832124,-2.331047,6.978549,-8.475061,-2.273721,-4.160809,-2.780347,-0.412400,9.901236,-8.320980,-4.431653,6.045672,-2.218112,-4.535670,-9.376973,7.687153,-7.724249,7.694126,6.937144,-1.983760,8.832505,-6.996084,-0.532368,-7.348477,3.170126,3.199757,-5.702063,6.822982,-5.623687,2.516492,6.824942,-9.694835,-3.040221,4.856716,4.348168,-9.000882,7.271776,-0.922509,3.616774,4.278164,-0.650200,-8.611723,5.342795,3.913232,9.657616,3.797731,9.790090,-5.489100,6.069373,7.330194,7.077270,-8.093566,-9.406547,1.955825,2.902435,1.594976,0.999553,-0.348446,8.400810,-9.547268,0.094692,4.763335,5.355875,-4.654528,5.394567,-6.372349,5.664759,3.813393,9.218603,5.669582,7.747959,-6.165701,-8.747989,-9.478062,-5.446774,2.510189,-9.070549,-1.468678,-1.892860,-4.237947,-2.217396,0.230954,1.695589,-0.805846,8.844188,-8.118221,-2.416782,3.626320,2.020060,-7.403750,4.379310,2.142644,-1.159585,1.023422,6.625886,-5.898370,-3.185385,8.864118,4.499299,3.660109,-0.747533,4.783103,-1.504692,0.058702,-5.844878,-1.597122,0.915001,4.298818,4.996659,8.231115,8.816764,3.348104,0.590998,1.733164,-9.288155,3.801844,-5.009868,6.966234,9.416630,8.150654,-4.272918,8.694031,2.324196,0.307357,-8.363119,0.261147,-3.351795,0.935429,-5.370694,-1.558600,8.396226,0.690781,7.954401,8.701590,6.379732,-3.159339,-8.953711,-1.082737,1.287094,-4.900270,-8.039127,1.039505,-5.679956,-3.580016,0.577723,6.730536,-8.974025,1.728811,1.868361,-9.371953,5.069863,-8.885922,4.217938,8.094063,-3.400348,-4.439809,-7.319769,-4.010255,-2.217581,4.979413,3.049702,5.066508,5.569793,8.646139,7.988909,5.926521,2.395131,-4.827002,-0.238581,3.046464,4.152047,5.472358,5.250994,7.876078,-5.883452,6.376026,5.036933,1.858183,9.196103,-2.031081,6.282992,6.299345,9.536351,6.193875,-9.916730,6.695431,-6.469112,8.546992,-6.494135,2.802790,6.151433,-1.064664,3.966554,1.297804,9.026001,6.120200,6.006711,5.685987,-7.452962,2.217837,4.347869,3.286470,6.337480,6.183290,2.379748,4.601399,0.101079,3.381211,2.612849,-9.355578,-4.398697,6.575414,-5.799658,6.172097,6.529827,6.940614,8.353115,-7.630705,0.669561,-3.626443,2.833149,3.100001,9.595382,5.370127,4.480513,5.594405,-4.308872,-0.686923,1.248636,4.786976,-8.205117,5.626235,4.473953,-8.923015,1.385431,6.162145,-8.213483,-3.138233,-3.665094,5.197103,3.788898,8.769752,1.400312,-2.982250,1.065449,-3.065140,3.214378,0.750221,2.835263,4.987385,-2.010318,7.428448,-2.115691,6.747892,-3.564569,-6.494668,7.133796,8.656310,1.544154,-9.492054,6.813193,-4.320484,-4.255047,-5.247687,-6.297579,5.348784,-2.535478,4.202597,-0.059356,7.818562,6.700843,-0.820123,-8.790554,-4.474827,5.593528,-1.874216,5.118419,9.234038,7.756326,3.034182,-2.544492,-7.608405,-8.227439,1.513295,-8.894845,2.413780,-9.444874,0.862128,6.642317,5.047336,-9.461177,4.970543,-1.567595,9.684187,-0.457987,9.678902,4.372798,-0.747049,-2.265137,-1.828033,-7.769431,-3.240666,4.329104,7.549407,5.919403,-6.855584,1.040316,4.257360,-9.170019,1.744679,-0.168888,6.056132,-3.774900,8.042739,1.808149,-0.656493,2.955231,7.969823,-0.903551,5.106808,8.373257,8.319821,6.018993,-6.416755,4.731387,7.277685,6.389496,-2.402945,-5.059192,-6.910710,7.603249,7.961882,6.377295,-0.478212,-0.141149,-9.791464,1.704768,-0.334018,-1.130161,-0.516924,-8.575081,5.675545,2.163394,2.071777,9.168306,8.412760,-4.133937,6.724918,3.118859,1.461362,7.999130,9.186301,2.767780,-6.180172,3.181336,-5.051372,-7.867932,0.533740,1.670583,3.166329,-4.733735,3.485131,1.382940,-9.374459,-4.782234,-4.179316,1.235780,-6.471740,8.587162,2.162132,-8.060227,-4.302725,8.784483,-3.509390,1.524611,-0.940249,-1.251680,-2.862630,-2.850018,4.951243,2.219916,8.754774,0.613333,3.457183,-5.000501,2.999256,-4.755711,8.165400,3.957338,-9.235675,8.380673,-0.384003,6.729621,7.776991,-4.342289,-4.954628,4.648115,-5.796351,-1.552971,1.945684,-8.311949,1.872209,9.105633,0.958778,-8.670380,4.369205,-9.072044,1.835519,-7.535895,8.509878,5.771993,-0.821938,0.823875,-6.368632,2.760307,-0.084148,-9.627452,-8.879298,-5.789612,2.482992,-1.207021,-0.921943,-4.276327,-1.169898,0.976528,0.185673,8.097131,1.577325,7.889047,-4.555525,1.562596,-3.739914,-2.165059,5.862702,-8.393690,6.359627,5.474822,3.927258,-6.655190,9.332489,-2.622910,-6.617703,-7.821367,-5.026633,6.465282,-8.133358,-5.022893,6.046702,-9.664194,5.349888,4.305469,2.155952,6.093233,-1.744881,-6.005058,2.729701,7.620896,-5.728551,3.247358,6.095745,-1.396097,8.222166,-6.303119,2.826890,-8.382446,-5.292422,-4.789652,-1.600367,-5.169666,7.411012,-4.528172,8.160979,-2.242425,-3.420230,5.723524,1.921497,4.816948,-2.211889,1.199452,-1.236510,-6.209061,5.627513,-1.722698,-1.733760,-6.752728,9.156496,-9.098370,-3.162204,2.873345,-5.213690,-7.608851,-2.263429,1.538112,-9.902747,-7.142103,-7.129129,8.531571,5.089632,6.446448,-2.541170], dtype = "float32")#candidate|8075|(1512,)|const|float32
call_8074 = relay.TupleGetItem(func_1991_call(relay.reshape(const_8075.astype('float32'), [9, 14, 12]), relay.reshape(const_8075.astype('float32'), [9, 14, 12]), ), 1)
call_8076 = relay.TupleGetItem(func_1995_call(relay.reshape(const_8075.astype('float32'), [9, 14, 12]), relay.reshape(const_8075.astype('float32'), [9, 14, 12]), ), 1)
bop_8080 = relay.logical_or(call_8063.astype('bool'), relay.reshape(call_8061.astype('bool'), relay.shape_of(call_8063))) # shape=(2, 3, 9)
bop_8083 = relay.logical_or(call_8064.astype('bool'), relay.reshape(call_8062.astype('bool'), relay.shape_of(call_8064))) # shape=(2, 3, 9)
output = relay.Tuple([call_8074,const_8075,bop_8080,])
output2 = relay.Tuple([call_8076,const_8075,bop_8083,])
func_8087 = relay.Function([], output)
mod['func_8087'] = func_8087
mod = relay.transform.InferType()(mod)
mutated_mod['func_8087'] = func_8087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8087_call = mutated_mod.get_global_var('func_8087')
call_8088 = func_8087_call()
output = call_8088
func_8089 = relay.Function([], output)
mutated_mod['func_8089'] = func_8089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7333_call = mod.get_global_var('func_7333')
func_7334_call = mutated_mod.get_global_var('func_7334')
call_8153 = relay.TupleGetItem(func_7333_call(), 0)
call_8154 = relay.TupleGetItem(func_7334_call(), 0)
output = relay.Tuple([call_8153,])
output2 = relay.Tuple([call_8154,])
func_8165 = relay.Function([], output)
mod['func_8165'] = func_8165
mod = relay.transform.InferType()(mod)
output = func_8165()
func_8166 = relay.Function([], output)
mutated_mod['func_8166'] = func_8166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7439_call = mod.get_global_var('func_7439')
func_7440_call = mutated_mod.get_global_var('func_7440')
call_8175 = relay.TupleGetItem(func_7439_call(), 1)
call_8176 = relay.TupleGetItem(func_7440_call(), 1)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_8178 = relay.TupleGetItem(func_6426_call(), 1)
call_8179 = relay.TupleGetItem(func_6428_call(), 1)
output = relay.Tuple([call_8175,call_8178,])
output2 = relay.Tuple([call_8176,call_8179,])
func_8180 = relay.Function([], output)
mod['func_8180'] = func_8180
mod = relay.transform.InferType()(mod)
mutated_mod['func_8180'] = func_8180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8180_call = mutated_mod.get_global_var('func_8180')
call_8181 = func_8180_call()
output = call_8181
func_8182 = relay.Function([], output)
mutated_mod['func_8182'] = func_8182
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8223 = relay.const([[[-10,-5,-6,-2,-7],[2,4,7,-3,-8],[-1,-2,-1,-3,2],[6,4,7,-8,6],[7,-3,2,-1,-5],[5,-9,4,-9,-2],[-9,-5,2,3,-10],[7,-7,-8,-4,-3],[7,5,-6,-8,8]],[[-5,2,9,9,6],[-3,7,-7,8,-4],[-10,-10,9,-8,10],[-10,-2,-3,6,5],[5,7,7,-7,-3],[7,-5,2,4,2],[-5,-8,-5,-2,-5],[3,6,-2,-3,-9],[3,2,2,2,4]],[[-7,-6,-8,6,-4],[-6,2,6,-4,-4],[-5,-8,5,-1,-5],[8,-5,-6,7,-2],[6,-9,-1,-4,-6],[-9,-7,10,-6,-6],[-7,2,-3,5,-4],[-3,7,9,-7,-3],[3,-5,-7,-2,-5]],[[4,7,4,-4,-9],[5,9,6,-8,-2],[7,2,-10,5,4],[2,-10,3,8,2],[-8,-1,-7,-6,1],[7,-7,-8,-10,9],[-10,3,2,5,-5],[-1,-4,-1,-1,-9],[9,8,4,3,6]],[[-7,4,10,8,-8],[-6,8,-1,-2,-10],[-3,-6,-4,-7,-4],[10,-3,3,-2,1],[-4,9,7,-4,4],[-2,2,-10,-8,-5],[1,-4,-10,8,-6],[2,-7,3,-10,-5],[-1,-3,-6,-1,-9]],[[-5,-2,5,-5,-1],[-3,2,-3,6,-4],[-10,-1,-9,-4,-9],[9,-3,6,10,-2],[-4,-6,-7,-5,-2],[7,5,-3,-2,7],[1,-9,4,2,-7],[-6,9,1,-1,-10],[-5,-5,4,-5,8]],[[-2,-9,-1,6,-8],[8,-8,-8,-5,-3],[-1,4,1,7,-4],[9,2,-7,-10,8],[10,3,-3,6,9],[-4,10,-8,4,6],[-8,6,-4,3,-9],[-3,7,6,-9,9],[-4,10,-1,-6,4]]], dtype = "int32")#candidate|8223|(7, 9, 5)|const|int32
var_8224 = relay.var("var_8224", dtype = "int32", shape = (7, 9, 5))#candidate|8224|(7, 9, 5)|var|int32
bop_8225 = relay.bitwise_or(const_8223.astype('int32'), relay.reshape(var_8224.astype('int32'), relay.shape_of(const_8223))) # shape=(7, 9, 5)
output = bop_8225
output2 = bop_8225
func_8228 = relay.Function([var_8224,], output)
mod['func_8228'] = func_8228
mod = relay.transform.InferType()(mod)
var_8229 = relay.var("var_8229", dtype = "int32", shape = (7, 9, 5))#candidate|8229|(7, 9, 5)|var|int32
output = func_8228(var_8229)
func_8230 = relay.Function([var_8229], output)
mutated_mod['func_8230'] = func_8230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6635_call = mod.get_global_var('func_6635')
func_6636_call = mutated_mod.get_global_var('func_6636')
call_8240 = relay.TupleGetItem(func_6635_call(), 0)
call_8241 = relay.TupleGetItem(func_6636_call(), 0)
output = relay.Tuple([call_8240,])
output2 = relay.Tuple([call_8241,])
func_8249 = relay.Function([], output)
mod['func_8249'] = func_8249
mod = relay.transform.InferType()(mod)
mutated_mod['func_8249'] = func_8249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8249_call = mutated_mod.get_global_var('func_8249')
call_8250 = func_8249_call()
output = call_8250
func_8251 = relay.Function([], output)
mutated_mod['func_8251'] = func_8251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mod.get_global_var('func_4652')
func_4653_call = mutated_mod.get_global_var('func_4653')
call_8319 = relay.TupleGetItem(func_4652_call(), 0)
call_8320 = relay.TupleGetItem(func_4653_call(), 0)
output = call_8319
output2 = call_8320
func_8322 = relay.Function([], output)
mod['func_8322'] = func_8322
mod = relay.transform.InferType()(mod)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8322_call = mutated_mod.get_global_var('func_8322')
call_8323 = func_8322_call()
output = call_8323
func_8324 = relay.Function([], output)
mutated_mod['func_8324'] = func_8324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_8336 = relay.TupleGetItem(func_2681_call(), 0)
call_8337 = relay.TupleGetItem(func_2682_call(), 0)
output = relay.Tuple([call_8336,])
output2 = relay.Tuple([call_8337,])
func_8338 = relay.Function([], output)
mod['func_8338'] = func_8338
mod = relay.transform.InferType()(mod)
output = func_8338()
func_8339 = relay.Function([], output)
mutated_mod['func_8339'] = func_8339
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8405 = relay.const([[[6.876213,3.119076,-5.501784,3.531909,2.032262,7.337200,-3.345474,6.378816,1.344310,-3.927598],[1.488731,-5.700155,-0.152920,9.094499,-2.122739,2.916367,0.289878,6.190922,-6.183586,-2.749580],[4.129023,2.224449,8.622798,-3.791543,1.667410,-8.681368,-4.005964,-8.462497,4.420288,9.994590],[-1.178101,-4.301309,0.377659,9.272438,-3.853019,6.826832,6.623037,6.650040,8.263874,-6.590771]],[[-1.046282,8.623547,9.224496,-6.406570,-5.703443,-7.692551,-4.080528,-4.393090,-1.044557,8.512401],[0.945922,-0.780094,9.598046,4.445219,-8.434888,1.453626,-3.880494,8.669184,-3.726004,0.942194],[9.680146,-7.288370,-9.785163,2.676911,-9.092066,9.655820,5.186205,4.047099,0.387851,-8.403432],[-2.939644,1.752284,-3.612868,-7.281948,-1.725161,8.123691,-1.856413,4.778158,-4.899093,5.592572]],[[0.795593,-4.579780,5.793955,3.163906,-9.324980,-6.072390,5.657930,-2.059819,-6.127233,-7.924509],[-2.693049,-5.710461,2.831214,3.145813,-5.394097,0.627695,7.298600,-8.475419,2.215438,0.098311],[9.296812,-3.514735,1.784172,7.761617,4.141334,-9.208084,3.452958,-6.101748,-0.560618,3.666604],[9.172381,-7.228452,-9.546003,1.087664,-7.454454,-2.548722,-7.154460,-0.849511,7.411414,7.055974]],[[-2.714399,-7.820701,-8.874622,-9.946184,-8.040416,7.237735,-4.264272,-7.280772,-0.095534,-0.732250],[-3.335974,7.618287,0.794208,4.383288,9.541777,-4.818079,-7.271035,7.234468,7.931216,-5.227209],[4.604819,6.839647,1.306139,6.888900,6.997968,3.937905,-7.234604,-2.650580,-7.855572,-4.816928],[-5.244486,6.135253,1.440564,4.198917,8.630126,-3.581659,1.895349,-2.903307,7.144514,2.162433]],[[-6.002639,-7.052141,7.342606,-4.612968,-3.310061,0.588377,8.864903,-6.848409,9.311392,-0.610985],[2.897253,-7.738096,-7.521451,9.732696,-9.538805,7.457658,3.147720,9.436844,-1.543297,7.283979],[-4.652429,-3.947596,6.207820,-2.873164,-9.645628,2.843832,9.903971,5.591607,0.765750,6.038821],[8.863865,-1.265083,-1.582103,4.846236,1.696493,-0.750917,1.080210,-3.561849,6.379821,4.380072]],[[3.530808,0.080942,-9.592518,-8.462260,9.383835,7.526100,-5.829649,-1.549102,1.102591,-7.093464],[-0.098654,-1.901268,3.633430,-2.214046,0.822932,-4.138179,8.969377,0.150820,-6.438169,3.420012],[1.824274,-8.692028,-1.529481,9.120881,-5.460320,-6.695019,-1.108931,-2.955041,4.223939,-4.051830],[5.964941,0.884670,-5.151517,-9.195033,3.621945,-4.613440,2.579973,-7.293289,3.497154,0.169877]],[[8.283507,-2.759954,6.499289,8.835991,-9.663383,8.087094,0.112221,-3.497813,-8.482927,-1.062208],[-3.016296,-1.630335,-1.116028,4.628708,-6.654934,1.551024,-6.214410,7.619069,9.666908,8.111887],[-1.584440,3.967298,4.101889,1.173895,-3.606805,6.059776,7.874736,-1.648774,0.900764,7.062100],[4.606631,9.904448,2.825293,0.104113,-7.126632,-4.296278,6.467998,-3.186328,0.466004,-6.284553]],[[1.042404,-7.764363,-3.194605,-2.162379,-6.602027,0.891652,8.390353,8.084011,-8.834277,6.680825],[4.750109,5.576758,2.021687,-4.570499,-4.315454,-4.083755,-4.228054,-6.664244,-1.861547,-9.977831],[-7.910061,-8.047520,9.082279,-0.142219,-4.690415,-7.394579,6.197935,-3.219466,5.608953,1.991988],[-4.805064,0.291445,-8.343932,2.618671,8.819374,3.817088,8.784681,0.591838,-5.716513,-6.806178]]], dtype = "float32")#candidate|8405|(8, 4, 10)|const|float32
uop_8406 = relay.acos(const_8405.astype('float32')) # shape=(8, 4, 10)
func_7823_call = mod.get_global_var('func_7823')
func_7829_call = mutated_mod.get_global_var('func_7829')
const_8412 = relay.const([-9,-4,-6,-3,-8,-8,-9,-6,7,8,4,4,9,6,-5,10,1,-4,-10,5,-5,-4,9,9,-1,-1,6,-7,-1,7,-7,9,2,4,-10,3,-2,-10,-6,-1,7,-4,-9,-8,-3,6,1,-7,-7,-8,-1,-2,7,-6,-2,-1,-6,4,5,6,6,-9,7,1,-10,1,-9,4,5,-10,-4,-10,6,-8,7,-3,7], dtype = "int64")#candidate|8412|(77,)|const|int64
const_8413 = relay.const([2,6,-10,-3,10,-6,5,3,-6,4,6,-7,5,5,3,-4,-5,-5,9,-5,-5,-3,-6,-4,9,6,-7,8,2,5,9,-8,-2,-9,-3,2,-5,10,1,-4,9,6,3,-9,-9,-10,-6,3,3,10,8,6,9,3,-10,-10,6,-7,2,-4,2,1,4,7,8,5,-1,9,9,-8,10,-9,6,5,-4,2,5,-6,-9,-8,10,5,6,-1,-8,3,-9,-2,8,6,8,-10,3,-4,8,-9,3,2,-8,4,4,-3,10,9,-5,-2,2,8,9,-8,-3,-9,-3,-8,6,8,-9,-2,-8,-7,-5,-8,4,-4,9,3,-1,10,5,-6,8,-8,6,-6,-10,-7,-3,-4,2,-1,10,-5,-6,4,1,-10,-5,-5,-10,-3,-3,7,-7,4,-9,-2,-1,-9,-2,-8,-2,-3,9,-7,-9,1,-3,10,9,9,1,6,-8,8,-7,-4,-7,7,-3,6,5,5,-8,-5,-1,5,-8,5,-6,-6,1,4,-7,3,5,3,9,-7,-3,5,9,-7,5,-2,4,5,-8,-3,-8,-4,-8,-3,4,-5,2,-2,-4,-7,10,-9,7,-2,-3,-1,-3,-5,1,9,8,2,-6,1,3,8,-5,-2,2,-9,-10,5,-5,-4,6,2,7,-4,-2,4,4,1,-2,-4,-8,7,-1,-3,3,-3,-1,5,-2,-3,-7,-10,-1,-2,7,-5,-9,4,7,8,-7,8,-9,5,3,8,7,9,-2,-10,7,3,-2,-9,8,-6,10,10,7,3,-5,8,-10,1,9,10,-1,-3,-3,9,-10,6,-8,-1,4,-7,-6,3,3,9,-7,8,-5,-8,-3,-2,3,3,6,10,-10,1,1,4,-9,-4,6,-4,-4,1,-3,-10,-1,-10,7,-7,5,2,3,10,1,-10,-7,-5,-9,8,-1,10,1,1,8,-6,-7,8,4,-3,1,9,-10,-9,-5,2,-5,-10,-2,4,-10,-2,-9,-10,-10,10,-8,1,7,10,-9,8,5,-10,-10,7,-7,10,3,10,2,-7,1,10,-10,-2,3,4,-9,-6,-1,2,6,-3,-9,-2,-7,1,9,-7,-2,-9,-8,-4,5,7,-5,-3,8,-9,3,8,-2,-7,4,1,3,-2,1,8,-6,-4,-4,3,5,9,-3,7,9,8,9,7,7,5,-5,-6,7,-5,8,-3,10,-2,-10,-10,-4,10,6,-7,9,3,-4,9,10,4,-10,3,-10,2,-4,9,-1,-1,-10,-3,2,-7,6,10,7,-6,-3,-8,-3,-5,5,5,6,-6,-8,-7,5,-7,-9,-7,-4,-5,3,2,-6,-3,2,8,5,6,10,-4,-7,-6,-9,-3,7,2,1,-5,10,7,-7,-1,8,-6,1,3,-10,-4,-1,5,-5,7,-10,5,4,3,-9,-6,2,-5,-1,-10,-7,-1,1], dtype = "int64")#candidate|8413|(539,)|const|int64
var_8414 = relay.var("var_8414", dtype = "int16", shape = (1365,))#candidate|8414|(1365,)|var|int16
call_8411 = relay.TupleGetItem(func_7823_call(relay.reshape(const_8412.astype('int64'), [77,]), relay.reshape(const_8413.astype('int64'), [1, 539]), relay.reshape(var_8414.astype('int16'), [455, 3]), relay.reshape(var_8414.astype('int16'), [455, 3]), ), 1)
call_8415 = relay.TupleGetItem(func_7829_call(relay.reshape(const_8412.astype('int64'), [77,]), relay.reshape(const_8413.astype('int64'), [1, 539]), relay.reshape(var_8414.astype('int16'), [455, 3]), relay.reshape(var_8414.astype('int16'), [455, 3]), ), 1)
output = relay.Tuple([uop_8406,call_8411,const_8412,const_8413,var_8414,])
output2 = relay.Tuple([uop_8406,call_8415,const_8412,const_8413,var_8414,])
func_8421 = relay.Function([var_8414,], output)
mod['func_8421'] = func_8421
mod = relay.transform.InferType()(mod)
var_8422 = relay.var("var_8422", dtype = "int16", shape = (1365,))#candidate|8422|(1365,)|var|int16
output = func_8421(var_8422)
func_8423 = relay.Function([var_8422], output)
mutated_mod['func_8423'] = func_8423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8165_call = mod.get_global_var('func_8165')
func_8166_call = mutated_mod.get_global_var('func_8166')
call_8438 = relay.TupleGetItem(func_8165_call(), 0)
call_8439 = relay.TupleGetItem(func_8166_call(), 0)
output = call_8438
output2 = call_8439
func_8453 = relay.Function([], output)
mod['func_8453'] = func_8453
mod = relay.transform.InferType()(mod)
mutated_mod['func_8453'] = func_8453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8453_call = mutated_mod.get_global_var('func_8453')
call_8454 = func_8453_call()
output = call_8454
func_8455 = relay.Function([], output)
mutated_mod['func_8455'] = func_8455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5299_call = mod.get_global_var('func_5299')
func_5300_call = mutated_mod.get_global_var('func_5300')
call_8549 = relay.TupleGetItem(func_5299_call(), 0)
call_8550 = relay.TupleGetItem(func_5300_call(), 0)
uop_8567 = relay.acos(call_8549.astype('float32')) # shape=(2, 3, 9)
uop_8569 = relay.acos(call_8550.astype('float32')) # shape=(2, 3, 9)
func_1991_call = mod.get_global_var('func_1991')
func_1995_call = mutated_mod.get_global_var('func_1995')
const_8571 = relay.const([[9.483722,-3.078295],[-1.993408,-1.588713],[-2.140956,9.175392],[-5.901361,-1.156145],[-6.497438,-1.357102],[-8.088994,-5.237445],[1.756955,-1.605259],[-7.733068,3.460835],[-5.839023,-3.609269],[-8.854426,-2.508849],[-8.848376,0.548399],[9.813517,9.322650],[-2.083765,0.356119],[5.404504,-3.218611],[1.853711,5.778926],[-4.421699,-1.101195],[-9.999494,4.117758],[0.040944,4.083452],[0.528820,-5.923213],[-3.577864,6.173573],[8.466534,-3.304146],[-1.883397,8.257603],[7.450078,9.283555],[-3.718913,-4.137380],[-6.309995,8.996186],[9.498853,3.608137],[6.698776,1.967230],[4.249735,-6.655437],[-5.035042,-4.795724],[3.201147,-5.690904],[-1.406918,1.024159],[2.123038,4.058172],[4.894969,2.356090],[-3.596967,-0.057549],[7.358242,7.979843],[-8.304016,5.097089],[-9.752409,8.246601],[-1.792738,5.442095],[5.320850,0.628895],[-0.583463,-2.190710],[7.258850,0.376251],[-5.680035,7.608736],[8.232173,3.197332],[-6.599263,-2.480770],[-1.469981,4.074484],[-0.703489,4.782230],[2.665965,-7.831252],[2.419455,4.145516],[2.367568,-3.916327],[-3.004517,6.180421],[7.882280,1.918780],[1.678307,-8.192681],[1.050371,-4.563932],[-8.298030,9.307358],[-2.702290,-6.144373],[-2.443237,-9.507098],[-9.653116,-5.270784],[-5.212702,-4.117721],[-2.559671,-8.584307],[-4.228861,2.935315],[-5.927071,7.283350],[9.110723,-8.979729],[-0.338163,0.062988],[-7.217575,-1.258870],[2.909856,-2.200046],[-5.128538,1.166798],[-2.533190,3.396665],[-5.679614,2.633346],[-5.620397,-9.160370],[3.498581,-7.063873],[6.028246,0.597624],[4.035036,-2.540406],[-8.394492,2.644871],[3.057700,9.970719],[-6.634942,-9.474614],[6.322578,1.918714],[-8.904047,0.065119],[-1.642567,-2.890499],[5.530952,4.484243],[6.790500,3.015011],[-3.430465,2.004604],[8.924145,-1.708380],[4.775354,6.390374],[-7.025907,-9.812222],[-0.876163,-9.581438],[4.199039,-3.680989],[-1.618147,-4.126068],[3.057625,1.077743],[-9.638113,2.147910],[6.289880,1.130586],[4.712699,5.805232],[3.517995,-1.722048],[2.610120,-9.497242],[9.797790,-4.559918],[-2.317086,-3.715098],[-3.237159,-7.130566],[-2.008249,5.223565],[4.585197,-6.129060],[5.939885,-3.181633],[3.715704,-6.485179],[4.592797,-0.839361],[2.673861,6.466501],[3.034702,2.854841],[9.772090,-8.743481],[9.048980,-1.888259],[-7.893798,3.447805],[-6.084583,-3.579003],[1.767771,6.381269],[4.980382,7.497550],[-3.334721,-4.389309],[-9.322933,0.220662],[7.309156,1.564848],[1.754288,9.980925],[-0.417258,9.336129],[-9.728440,7.992938],[-5.500177,0.458653],[-5.979062,-6.247560],[6.222865,-6.316333],[-7.219272,6.468459],[3.627707,9.036706],[-2.288569,-1.263075],[2.341507,-9.516906],[4.121462,3.626326],[-8.840788,0.673957],[-5.074316,0.583699],[-2.765831,1.581958],[2.233022,8.372609],[-5.713881,-7.781755],[7.490081,7.974213],[-6.800121,0.112110],[3.884010,-1.253052],[4.224763,-3.567952],[2.903511,7.120498],[2.818777,4.945390],[6.211222,9.353051],[5.680940,1.354465],[-1.896512,6.700253],[-3.749950,-2.501561],[-1.148785,1.263694],[-8.555192,4.525439],[3.962899,-0.926450],[0.989871,6.937565],[-1.197325,-2.255444],[-9.023262,-1.051056],[6.947518,-5.132099],[-9.165805,9.211106],[8.488666,-1.703917],[9.963993,5.840083],[-7.932872,4.536856],[5.706039,2.643756],[-2.786739,2.876127],[1.576793,8.393958],[-4.025410,-8.255917],[2.889039,7.513722],[-9.403465,-5.431391],[5.654417,-8.731837],[2.308102,3.435073],[-7.274621,-2.377176],[0.885554,-2.800029],[-0.257513,8.368268],[1.288441,8.930097],[1.311677,9.025124],[5.961821,6.672505],[9.936834,-4.444232],[-8.879958,-1.013820],[-6.823100,2.545368],[-1.534918,-5.051752],[8.897839,7.450547],[2.614375,2.004368],[2.637319,-3.648620],[8.479086,7.212863],[3.257492,3.242067],[-6.121490,8.235870],[3.906114,-6.957476],[-8.902782,-0.190417],[-3.992718,-9.930187],[-4.463942,-6.511475],[-2.222106,-2.440497],[0.444677,-8.151106],[-0.127814,-8.888770],[0.569455,0.072674],[-9.888386,4.839199],[0.933041,-3.279254],[7.961742,2.090556],[9.156367,-5.670901],[7.272885,9.078544],[-7.785226,9.916389],[2.856761,0.405944],[2.878911,6.922963],[-3.107775,-3.910207],[-5.076333,3.476672],[0.069009,-3.250949],[3.680830,-4.855253],[8.534264,3.147571],[-9.261643,-0.554569],[-0.595057,-8.178252],[0.635679,7.207624],[-2.416207,0.327155],[-7.240561,0.266303],[8.132428,-9.040614],[-3.976270,7.667470],[-5.052221,1.277175],[-0.346243,9.647250],[-7.257066,-0.821228],[8.500958,0.863781],[-4.418605,4.227874],[-8.576552,-9.272624],[-8.271451,-4.333041],[-3.531337,-0.491857],[-2.436961,4.602768],[-3.627431,8.778452],[-0.695566,-3.522850],[5.098606,-8.083356],[-4.770383,-5.804864],[-4.991062,-0.726519],[-8.441073,9.424808],[3.846098,5.920177],[2.554234,-1.584600],[7.908738,-3.133659],[2.574957,-2.572275],[5.145679,-2.577937],[-9.608792,-5.947447],[-7.477158,1.822502],[8.614057,5.218397],[-7.944878,-6.488597],[0.864305,9.672927],[-9.842182,-2.351615],[-6.449721,-5.624886],[4.870787,3.533677],[9.216459,-6.560406],[0.291638,-4.806266],[-0.434087,4.011625],[3.715132,5.554003],[-1.891721,4.776960],[-4.525683,-9.102683],[-3.214249,-0.017842],[-4.448368,6.097458],[4.290249,3.046121],[1.844365,5.385703],[4.348486,1.081343],[-5.933289,8.644727],[8.201347,8.364700],[-2.752226,9.422128],[-7.551074,3.726027],[4.123223,4.874632],[-0.186483,2.305005],[-8.917786,-6.941444],[3.403547,-4.146915],[-7.498945,-3.855597],[3.249449,6.355431],[-0.324312,-0.005884],[6.916608,5.750148],[5.188971,1.817619],[8.327673,7.247054],[-7.571814,1.904744],[6.690686,1.651245],[8.725632,-7.326289],[-5.734460,-9.254440],[-7.604847,0.918071],[-5.959396,-5.625439],[7.086213,-6.110054],[9.092150,5.422676],[3.243672,9.771512],[-7.049611,-8.979969],[7.983467,-1.153725],[-2.984594,-1.062130],[-4.943208,-9.521960],[-2.009106,-4.120600],[1.884453,-8.136315],[-8.400366,-3.953840],[-7.051603,5.870147],[-8.165654,-6.948828],[-0.842222,8.742936],[0.196270,3.742873],[-4.754961,9.419642],[-9.673062,-6.102756],[-9.930797,-0.659378],[-9.599233,-2.558948],[2.613920,-8.110934],[6.702439,2.156302],[1.123553,-8.741106],[-3.432517,-8.307120],[-9.303564,7.723332],[4.607567,-5.720356],[-3.836076,7.542180],[6.886781,4.784551],[6.468916,-1.980964],[-0.078639,-4.062325],[3.155665,-0.985896],[-2.858336,-1.242453],[-8.659261,1.098208],[7.632248,3.413866],[9.927870,3.545192],[-9.506239,2.329946],[-7.399797,-5.239478],[6.914387,-0.987880],[-2.737905,-4.156974],[-3.406352,6.256666],[-7.139144,-8.043852],[-4.660118,9.757875],[-8.539986,-6.368658],[6.189002,-7.064023],[7.936125,-7.857705],[1.326403,9.594326],[9.229638,-9.518504],[-2.536266,6.035075],[9.928809,8.595490],[5.884145,3.628825],[4.820745,3.614419],[8.748708,-8.176536],[-5.618434,8.561889],[9.474097,0.691556],[-5.669322,-4.923876],[5.052610,2.228696],[-5.571196,-4.407701],[7.526806,5.671190],[0.271176,0.859166],[1.947724,-2.834311],[-2.321487,4.580495],[-7.591040,-4.232237],[8.053922,-8.635541],[-4.488417,1.296183],[-9.497441,0.014644],[6.381926,-8.625533],[3.694725,7.615475],[3.188601,-5.057751],[9.073509,6.040095],[4.430870,-1.922784],[2.179673,9.935986],[-9.666645,-5.462534],[5.386763,-5.901764],[-3.781530,0.841726],[-8.553463,-6.063456],[-3.327921,1.649810],[3.841568,-4.832652],[-4.146308,8.315750],[4.677333,-5.961639],[4.723432,-0.133822],[-9.829524,0.302076],[2.251695,-5.130981],[4.361213,5.186650],[0.682841,2.542569],[1.784490,4.776140],[-1.470105,5.606097],[-3.068646,8.969570],[-0.352364,-6.496805],[-1.527528,-9.474764],[-1.965538,1.273829],[9.928823,-5.430736],[9.776982,7.221696],[5.528252,-1.026215],[3.841763,2.263374],[9.185232,1.435629],[-2.690098,-7.785742],[7.406986,-3.353348],[9.805889,0.595324],[-3.598588,-5.797629],[3.445084,-4.397473],[-2.433324,-0.216511],[3.961270,9.773073],[-3.910383,-4.215072],[-9.463077,5.102076],[1.471431,-6.842280],[4.839500,-1.730363],[3.321316,1.333460],[-2.131570,0.863165],[4.600972,8.877263],[6.593441,0.701828],[9.900130,-2.015269],[0.619265,-1.894789],[0.278265,8.079050],[-4.227344,-3.114463],[-2.282223,5.026727],[0.463884,-5.513315],[-7.207250,5.252857],[-5.150102,-6.120741],[3.151784,-3.441691],[-3.640570,2.261597],[0.743529,4.921451],[-0.589563,7.714275],[6.056997,-5.390883],[7.534400,5.552978],[-8.749155,9.491157],[-0.509737,-6.509364],[-3.313300,-9.677510],[6.769209,-4.824008],[-1.101551,7.272146],[0.338396,-1.566338],[8.391720,2.356177],[8.647801,-3.092794],[-6.490310,-1.820790],[9.896197,-2.530317],[0.265441,8.064135],[-4.081168,7.457878],[2.679181,-0.317980],[1.936453,6.438507],[0.209822,5.492499],[-3.706539,-1.174945],[3.259934,1.780937],[0.378553,-5.938338],[-5.345373,-7.752208],[6.505705,0.618410],[-2.538573,1.007062],[-5.623494,-9.267172],[-5.579914,-8.826493],[0.454553,4.013781],[-7.350086,-0.219788],[-7.697240,-5.789325],[-8.119313,3.538685],[1.161704,-5.671779],[-3.083528,2.640370],[-6.996820,-4.987611],[-3.105230,3.150567],[2.406727,-6.386039],[4.292131,-0.288023],[-7.220714,-4.735073],[7.708845,-0.996988],[2.571416,-7.922207],[6.154119,-1.669751],[6.364454,-2.657679],[-9.903794,4.814748],[-7.833922,5.824248],[-2.432980,4.187369],[-3.152438,3.990012],[1.908743,-9.502870],[-0.928845,4.529857],[8.573805,-2.106581],[-4.547440,-5.755018],[-9.278551,2.331971],[1.828534,1.147284],[-4.167956,-6.111813],[-8.765532,-3.254740],[-6.810567,-2.602142],[9.772348,-4.688903],[-6.848329,2.433375],[0.201911,3.914513],[3.835585,-4.494990],[7.269897,9.048181],[-3.034704,-8.387900],[9.518147,-3.440492],[-1.903955,9.463309],[-6.565326,-1.811095],[-8.279486,-5.959937],[0.714286,7.417892],[-4.220860,7.741348],[3.934032,4.581662],[7.831265,1.905938],[-2.146309,-3.448376],[-1.091848,-4.222832],[6.551385,6.083998],[-1.947757,4.305594],[0.155033,-5.977598],[-5.363417,9.912091],[-9.315524,5.547029],[5.753261,5.035777],[-2.758290,-9.648726],[9.523206,-9.000805],[4.644333,-3.928238],[7.744804,6.308303],[-5.866410,-1.094325],[1.001549,6.902844],[-4.617881,1.175891],[0.502730,8.204751],[-6.500271,-5.256308],[-3.636755,-4.772389],[8.981662,9.249729],[-3.114757,4.844306],[-3.911248,1.848772],[-5.052469,-5.923658],[6.153763,-7.522747],[-7.079512,3.892882],[5.304626,-3.002014],[-7.138311,9.035154],[2.144179,-4.580405],[7.900876,-4.608281],[6.496171,9.382538],[-7.920544,-1.449361],[-8.804481,-5.071815],[-5.032208,9.034368],[-2.461681,6.103539],[9.151597,-8.777302],[2.745216,-8.811996],[-6.957337,-4.782226],[4.625421,3.793733],[4.119787,5.583318],[-7.369069,-9.439557],[3.042666,-8.010240],[9.299259,-4.995891],[-2.107431,3.008876],[4.471223,-2.744526],[8.249839,3.729663],[2.972257,-4.194879],[-3.953201,-6.512018],[-0.464644,5.932474],[-3.971397,6.042573],[1.008125,-4.018971],[-5.384544,0.161261],[-6.246531,4.148652],[4.665448,-2.417996],[-3.392264,8.989299],[-4.820144,2.853793],[2.751462,3.954150],[2.413834,2.820612],[-6.869036,-1.243944],[-2.784697,1.016256],[-1.410079,-5.395234],[5.960907,-4.417969],[2.058784,8.427818],[4.580809,-9.790414],[0.221034,-1.160128],[-2.063673,-2.762414],[-0.578670,5.008064],[-9.672227,6.758812],[-6.082807,-2.548942],[-7.639599,0.787226],[0.128414,9.692572],[8.243888,4.407769],[5.581380,4.122034],[5.719167,8.765350],[7.630240,-7.240467],[1.960024,-5.761281],[5.683319,4.599616],[7.710836,-5.254761],[3.458332,1.826268],[2.085022,-4.761458],[-0.640113,7.629911],[3.433573,5.957535],[0.957548,-7.792118],[4.207498,-4.289493],[-1.172856,-1.186026],[-4.475446,-0.723780],[3.201088,6.337547],[-6.678938,1.821619],[5.759148,-5.354321],[8.718839,5.368806],[-1.161082,3.033672],[-2.715143,-3.930484],[-9.117094,-1.183562],[9.590076,-0.180392],[-2.322669,-1.870296],[0.050301,-8.353592],[-2.086011,0.984162],[-7.061017,-3.080788],[3.808968,6.199228],[-5.970248,-5.103572],[-5.161983,2.478360],[8.121698,-8.448927],[8.304291,-3.101077],[0.726259,-6.468968],[5.898569,6.137898],[-8.140960,-5.131243],[-5.843097,-1.365930],[-3.953212,8.638600],[8.209364,-5.736583],[-2.557229,7.854852],[8.645131,0.768077],[-9.492052,-0.855581],[5.545296,0.047305],[-4.821183,7.893149],[9.346029,0.864860],[-9.356459,4.257764],[5.125982,-6.250917],[-6.303356,-4.780058],[3.276794,-8.773638],[5.545463,-9.078112],[6.939981,-6.914011],[1.191269,-4.223530],[9.937207,-3.314648],[-1.867044,-0.015603],[-8.079251,3.757615],[-1.349288,-3.307228],[8.042847,1.690454],[-6.842838,-6.185376],[8.796687,5.856119],[-2.753839,-7.131920],[9.038583,-3.626369],[-6.200900,2.851503],[0.747366,6.310126],[-8.774856,-2.772501],[8.709336,-5.150040],[2.738335,2.794172],[-3.601496,4.864472],[-8.371700,-4.352748],[9.746547,3.387350],[7.601024,-1.106724],[9.117068,-9.262673],[4.002720,-5.668005],[-2.850204,-5.456361],[2.269216,5.521289],[-9.336150,-6.526516],[-7.751713,-1.651786],[5.577518,8.310986],[2.629970,-3.241949],[8.128202,-1.960561],[6.996585,0.843157],[-8.958548,5.574723],[0.571749,4.696067],[9.901634,-3.866108],[-3.874508,6.681223],[-2.650085,6.680750],[-8.357054,8.407160],[-6.708416,3.630434],[-3.788004,-8.028759],[-6.850937,-6.647349],[-4.776963,-3.130957],[6.941297,9.696843],[4.868931,-0.784430],[0.775753,3.547526],[1.173946,0.525770],[6.358549,7.228298],[-5.107152,-1.791268],[1.306777,-3.896954],[-3.403179,8.918981],[-1.395392,7.300318],[-2.266000,4.340985],[1.507635,7.015205],[3.028434,6.622687],[3.167197,-4.839221],[-7.425500,6.446051],[0.060478,7.092300],[-4.221755,-2.274676],[9.176191,-9.477611],[2.169464,4.243245],[3.247792,2.625350],[8.731350,9.124761],[7.942680,-9.990909],[-6.207778,8.185107],[-4.456173,7.888601],[7.075620,6.614689],[5.819986,-9.479256],[7.957349,-8.454133],[4.000186,-2.391585],[-8.503759,2.569157],[3.180411,1.424184],[7.932905,-4.359909],[8.733656,-8.789666],[1.512209,6.808915],[-5.109364,3.314672],[7.363506,-5.210095],[9.515042,9.150717],[-6.997820,1.078909],[1.651017,3.311227],[0.269834,-3.653317],[7.799298,6.415994],[-2.315146,7.097303],[1.383975,-1.299975],[-5.214470,4.708233],[0.006467,6.866662],[9.597116,-5.371837],[0.647541,-1.327566],[6.080899,8.065493],[2.046400,0.945327],[4.287893,-4.370569],[9.078866,3.991628],[2.277637,1.458209],[-3.853587,-8.202767],[4.304542,-3.923777],[-0.732431,7.941042],[3.020367,-3.146784],[8.344837,-5.003624],[8.579855,0.769943],[5.841398,-7.960149],[8.467540,-0.192952],[2.721595,-1.989499],[1.875826,4.900849],[8.371768,3.946581],[-8.342032,2.860418],[3.712398,-9.532292],[2.435562,7.685609],[7.907182,4.697168],[5.958776,-8.705588],[4.953242,9.617121],[7.755755,-5.172145],[6.471853,2.993105],[-1.936785,6.172466],[-3.897293,-0.401539],[-1.648153,-8.869651],[9.924883,-6.052153],[7.642404,9.171185],[6.271731,7.935691],[-0.733133,2.474318],[9.833150,3.310031],[-0.620172,7.980263],[-2.625452,-8.124299],[5.590922,-9.359791],[-3.137905,4.420382],[5.329776,-7.702477],[4.680289,4.411056],[-4.683579,3.347302],[0.233437,5.190496],[-7.005675,-0.311437],[-8.582869,5.074164],[-2.126135,-8.734323],[-7.129410,-4.790279],[0.422334,3.157541],[3.519923,-8.847034],[8.665891,9.537978],[-8.363381,-2.456707],[-4.807993,3.978767],[9.649858,-6.091675],[6.260359,5.003896],[6.981180,8.724258],[-8.936701,7.361005],[-6.480430,6.996621],[-8.053665,-9.500230],[1.523499,3.411829],[-1.558367,-7.136145],[2.111413,3.818955],[-7.406013,-2.026602],[-5.512205,-3.717262],[-8.541815,-7.200818],[4.366284,8.948184],[7.497361,-6.251259],[-1.817513,-6.924653],[-2.122573,8.558394],[4.061742,-1.147822],[9.965446,6.798229],[4.877634,-8.247277],[-8.205871,-0.036258],[9.145638,8.742929],[2.869725,2.629065],[5.464315,-6.928200],[9.009487,5.666463],[-4.267895,-8.246863],[-7.791006,-1.062267],[4.250471,-8.480948],[3.533572,0.618936],[-0.487906,8.853395],[-7.638179,8.272535],[-7.090158,1.625762],[2.003664,4.737149],[5.471189,1.019248],[0.754663,1.806864],[3.807013,-8.881493],[-7.024074,8.557247],[-0.616321,-5.419746],[5.473592,-7.911913],[-9.172485,5.726195],[-8.317499,2.786323],[-5.990245,-4.718693],[-4.038571,-3.773993],[2.616058,0.922080],[-5.658578,-0.383701],[4.156146,3.497861],[-4.807823,6.537330],[-5.466910,1.365921],[1.348686,-4.234297],[0.607270,1.891223],[-3.808066,4.852981],[4.033216,8.321327],[7.478147,-4.316672],[-2.254289,-2.696205],[-4.416084,3.062724],[-6.293836,2.969334],[-8.119362,-7.474099],[-6.561887,8.071261]], dtype = "float32")#candidate|8571|(756, 2)|const|float32
call_8570 = relay.TupleGetItem(func_1991_call(relay.reshape(const_8571.astype('float32'), [9, 14, 12]), relay.reshape(const_8571.astype('float32'), [9, 14, 12]), ), 3)
call_8572 = relay.TupleGetItem(func_1995_call(relay.reshape(const_8571.astype('float32'), [9, 14, 12]), relay.reshape(const_8571.astype('float32'), [9, 14, 12]), ), 3)
func_6873_call = mod.get_global_var('func_6873')
func_6875_call = mutated_mod.get_global_var('func_6875')
call_8583 = relay.TupleGetItem(func_6873_call(), 1)
call_8584 = relay.TupleGetItem(func_6875_call(), 1)
const_8611 = relay.const([[[3,-3,-2,-7,3,-6,4,4,-1,-2,-9,1,-10],[-5,-4,-6,-8,7,2,-8,-7,8,8,-7,-6,-3],[-5,-2,-3,-3,3,4,-2,1,3,7,-6,1,6],[4,7,8,-2,-7,5,-1,-3,2,-6,-7,4,10],[10,5,1,9,9,-2,-8,-7,2,3,-7,-1,8],[3,-6,4,-8,4,-10,-9,-10,1,3,1,8,-1],[9,-7,1,-10,4,-3,-3,-4,-9,2,-6,-5,9],[-4,-2,-1,8,9,-9,-8,-5,5,-7,-8,2,6],[-1,8,-9,-8,-9,3,10,-9,-2,-1,-8,-2,-7],[-1,-2,-8,-8,-4,9,9,4,5,3,-10,1,-10]],[[10,-1,-4,-6,9,-9,2,-7,7,9,7,5,10],[-3,-9,-9,4,-5,-4,3,9,-4,5,-2,-5,-4],[-6,2,-6,-8,-7,3,-7,-2,-3,6,-6,1,-10],[-6,3,-9,10,-7,-6,9,-2,-5,-5,1,1,-8],[-8,2,1,4,7,4,-5,-4,-10,2,-7,2,-5],[8,10,7,-6,-5,5,2,3,1,-9,-6,-8,-10],[9,-7,-6,-4,-2,6,10,-6,3,8,3,5,-2],[2,3,-7,5,9,-10,10,4,1,-9,8,6,-1],[5,3,-9,9,9,4,-9,-7,-6,2,-5,3,-1],[-10,-6,6,-9,9,5,9,4,-10,-8,4,8,-5]],[[9,8,10,-5,-1,8,-1,7,8,2,1,7,-2],[7,-4,-2,-2,-3,8,-9,-10,-8,-7,-8,1,7],[5,3,-4,5,3,-1,10,7,1,-9,-4,-3,-2],[-6,-3,6,8,5,-8,-9,10,5,-3,9,10,-6],[-5,-7,-2,-9,-7,-6,4,6,4,2,5,-5,2],[2,-10,-8,9,-1,10,9,4,-4,-5,-2,-6,-4],[-4,9,10,9,10,-4,-5,-10,-6,-2,-2,-1,-9],[-7,-7,-7,-7,8,8,9,7,4,8,-6,-3,-7],[9,4,-8,2,-2,-6,-5,-6,4,-10,-9,-4,10],[-5,2,-8,7,8,2,3,-1,3,-5,-9,-6,-3]],[[-3,6,-9,-6,1,4,7,5,2,-3,7,8,-5],[-3,8,-8,3,6,-2,-6,8,1,10,5,4,-4],[2,-4,-1,-9,-1,9,8,-9,-8,3,3,-1,2],[6,4,8,3,4,-7,2,8,5,9,-6,6,-4],[7,-1,-1,-4,8,10,2,-7,7,-8,-3,2,-6],[2,10,-9,3,-6,9,-9,2,10,5,4,9,6],[-6,5,-7,-1,4,5,-4,-2,-1,-1,2,8,9],[9,5,-1,4,-2,-4,1,5,-3,-7,1,6,10],[5,5,-9,1,10,4,7,-6,-8,-9,2,-3,7],[-6,8,-2,5,7,2,7,-10,-5,-8,-10,-7,-1]],[[-10,-8,8,3,2,-9,3,-1,3,-6,-1,-4,1],[5,-2,6,1,-3,10,5,9,8,-7,6,9,7],[-2,-8,2,10,-2,-7,4,9,6,-5,7,9,-4],[-6,-9,-2,-3,-4,8,10,-2,-2,-9,-2,5,1],[3,-8,7,2,8,-8,6,5,-8,3,-3,8,-6],[-6,8,-4,9,7,-7,-3,3,-3,3,-5,2,1],[-5,-7,7,-5,-3,5,-1,10,-3,3,4,9,6],[8,-5,3,-10,-2,-6,-2,-6,-10,3,-6,-3,-6],[-7,-8,-10,2,7,-5,8,4,4,2,6,8,-4],[-6,5,5,7,-8,-2,-2,8,4,5,-1,-5,-1]],[[-6,10,5,-6,10,-6,-7,-5,5,-5,-5,8,-8],[-8,-3,-6,10,-7,-4,7,4,-2,-8,-9,-2,-5],[-5,6,-3,8,5,-2,-2,2,-2,9,-2,7,5],[2,-10,6,-9,1,-7,7,5,-7,-8,2,-7,6],[-1,1,10,-7,10,8,-6,-1,-9,6,-8,2,3],[-6,4,-2,-6,3,8,-8,3,-8,-6,3,9,-1],[4,1,-5,8,10,6,-4,-3,3,1,-9,7,9],[-3,1,3,7,-5,-4,4,4,9,-3,10,-4,-1],[1,-2,-10,-7,1,8,-8,10,5,-4,-6,-9,-5],[-4,-2,-6,5,-1,3,7,2,1,10,1,-5,-6]],[[-10,-9,-6,6,10,-8,9,9,1,-7,-3,4,10],[-1,-2,6,-4,9,-10,7,-6,-4,-6,9,10,10],[-2,9,10,7,-8,6,-9,-1,9,-10,5,-1,8],[-8,-6,2,-5,-2,-2,8,3,2,-8,-5,-3,3],[-1,-8,-6,5,-7,4,9,-6,6,-1,-8,2,-7],[3,4,-1,2,-1,-8,-2,7,-6,1,-7,7,-5],[10,1,8,1,-1,6,2,4,6,-4,2,-9,-3],[10,-4,-7,6,-4,-3,6,-9,-9,-10,10,9,-8],[3,5,-4,10,-2,2,6,-4,-3,4,5,-3,-6],[-2,5,7,-9,-8,7,-9,-4,9,-9,10,5,3]]], dtype = "int16")#candidate|8611|(7, 10, 13)|const|int16
bop_8612 = relay.multiply(call_8570.astype('int8'), relay.reshape(const_8611.astype('int8'), relay.shape_of(call_8570))) # shape=(7, 10, 13)
bop_8615 = relay.multiply(call_8572.astype('int8'), relay.reshape(const_8611.astype('int8'), relay.shape_of(call_8572))) # shape=(7, 10, 13)
output = relay.Tuple([uop_8567,const_8571,call_8583,bop_8612,])
output2 = relay.Tuple([uop_8569,const_8571,call_8584,bop_8615,])
func_8623 = relay.Function([], output)
mod['func_8623'] = func_8623
mod = relay.transform.InferType()(mod)
mutated_mod['func_8623'] = func_8623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8623_call = mutated_mod.get_global_var('func_8623')
call_8624 = func_8623_call()
output = call_8624
func_8625 = relay.Function([], output)
mutated_mod['func_8625'] = func_8625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_8672 = func_3652_call()
call_8673 = func_3652_call()
output = call_8672
output2 = call_8673
func_8674 = relay.Function([], output)
mod['func_8674'] = func_8674
mod = relay.transform.InferType()(mod)
output = func_8674()
func_8675 = relay.Function([], output)
mutated_mod['func_8675'] = func_8675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7950_call = mod.get_global_var('func_7950')
func_7952_call = mutated_mod.get_global_var('func_7952')
call_8716 = relay.TupleGetItem(func_7950_call(), 0)
call_8717 = relay.TupleGetItem(func_7952_call(), 0)
uop_8735 = relay.erf(call_8716.astype('float32')) # shape=(2, 3, 9)
uop_8737 = relay.erf(call_8717.astype('float32')) # shape=(2, 3, 9)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_8742 = relay.TupleGetItem(func_8338_call(), 0)
call_8743 = relay.TupleGetItem(func_8339_call(), 0)
output = relay.Tuple([uop_8735,call_8742,])
output2 = relay.Tuple([uop_8737,call_8743,])
func_8751 = relay.Function([], output)
mod['func_8751'] = func_8751
mod = relay.transform.InferType()(mod)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8751_call = mutated_mod.get_global_var('func_8751')
call_8752 = func_8751_call()
output = call_8752
func_8753 = relay.Function([], output)
mutated_mod['func_8753'] = func_8753
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8789 = relay.const([[[0.986935,-0.037205,-2.406088,9.976671,-8.698707,-2.426201,-0.446309,-4.151133],[-1.937160,-1.663187,-0.559928,5.854155,-3.450183,-0.908964,7.687309,1.128554],[-2.560813,-8.617278,4.057149,8.659575,-3.834582,-4.425355,-7.760394,4.352350],[-6.213159,4.499565,4.688428,-1.719774,-5.456529,-5.100998,-4.191850,-6.811622],[-0.772244,-6.480232,-5.679332,9.832094,6.701783,9.056721,8.214898,-2.498801],[8.817711,-7.865694,-0.919614,-3.897525,6.640665,9.222634,-6.978146,-4.987125],[-2.500838,-7.739627,-0.437181,-3.708870,5.545248,-1.267238,-8.286987,-5.932322],[-0.793632,-7.666014,-7.231493,0.683774,-8.162206,9.963344,-8.361004,8.880143],[-5.404008,-4.940285,9.974883,1.506032,-7.492410,9.144981,-8.441597,-3.520589],[-4.347631,-0.236566,0.808572,-0.680805,-4.580825,-7.536756,5.326280,7.801926],[8.870355,7.843094,-9.007620,4.718232,-5.511516,-8.743965,0.222616,9.028252],[3.272748,-3.777042,9.081374,-1.737735,-0.565972,-7.050400,-1.230793,-9.767213],[2.417042,3.021057,-3.318187,2.172296,1.611660,9.565698,-4.883581,8.185525],[-3.963904,4.960182,-8.221159,7.607313,-4.260056,5.709525,-0.736079,9.033944],[0.828028,4.439139,1.557797,-7.101271,-9.673435,2.872988,-3.469824,5.135119],[-1.687355,-1.473989,-0.570973,-5.367507,0.903022,-5.729112,5.963521,-0.872925]],[[-0.023325,-2.490013,-2.924923,-6.968819,-5.864475,4.898684,-0.196927,-1.774605],[9.224508,-9.566343,-8.599198,0.687165,-2.401623,5.388808,0.434079,-6.493663],[-1.413834,9.088965,0.331307,0.703772,-8.291718,-9.761290,7.133298,0.694513],[4.340954,9.885146,-7.600941,8.653392,-9.833532,-5.694876,-5.247358,8.648422],[7.783473,5.756914,-9.712644,6.701628,-8.923859,-2.672806,-3.386959,-4.981432],[2.949483,7.434336,-4.170923,-4.532141,-8.838685,-5.393187,4.668143,8.794296],[6.889717,1.752686,2.123876,-2.761455,-2.956476,-5.683696,-9.868580,-1.617954],[-6.039990,-4.382203,-2.585707,2.966494,7.034951,-9.485050,8.233815,-1.818800],[-7.666705,-4.748063,-3.077071,1.856181,2.307777,4.387717,1.391845,2.874982],[7.471657,-4.931331,-0.264518,-1.337586,-2.654964,-4.589934,-5.977134,-3.857503],[-2.037990,4.068159,2.816693,6.649546,-8.930305,-8.547398,-5.869227,1.406750],[6.159662,-4.916495,0.827368,-7.146846,9.244632,8.073584,6.347967,-2.689688],[-2.731629,-7.359370,2.880518,1.041669,-8.553293,9.120814,2.265396,-4.158773],[-8.149027,1.636495,-7.026171,6.105532,-5.832162,4.900527,-6.578187,-2.582735],[0.048669,-5.509323,-2.924262,-3.750037,-1.857754,-3.465107,-2.857349,-0.908335],[6.512809,-5.723575,3.432847,7.928880,-9.706510,2.403893,-7.644812,-8.590329]],[[-8.016664,-3.006980,-2.389672,5.334351,-3.334425,-6.453654,5.832108,-3.597804],[-8.396026,-8.153615,-1.190862,-9.376366,-1.050221,-5.480028,1.511209,0.893273],[3.786243,-9.935541,-4.654050,-6.713979,5.057004,-2.948067,-8.163831,5.249837],[5.501175,-6.097321,0.554385,9.960794,6.413396,4.888632,-8.061947,-3.944740],[-6.320146,2.291622,0.772826,-6.810133,-4.491749,3.845383,1.785697,-4.964671],[-1.708080,-1.210230,2.129125,8.000205,9.122661,5.457478,4.868985,-0.402167],[-9.629750,8.627383,8.107243,0.296612,-6.102278,-0.774903,6.090645,-4.693991],[-9.508598,-7.210736,-1.789135,-8.258695,-6.573554,7.177615,9.096089,6.180750],[4.573795,1.721684,-1.743872,9.555258,0.562258,-9.990651,-1.930957,-4.379718],[-0.211615,-0.238811,5.275335,-1.554035,-1.928461,9.100142,1.523501,0.691473],[1.909371,-3.247514,7.052194,-4.015601,0.415525,-4.952651,-0.443765,-4.802333],[8.981968,1.434330,0.230186,-8.183367,-1.957525,-0.703514,-4.798567,-0.037455],[-8.899702,-8.517682,-3.351211,4.622476,3.904737,3.610338,-5.729166,-5.257337],[-0.738250,-8.145292,-9.795596,0.585982,8.685009,-4.383642,-2.108082,0.086933],[0.427886,-1.074001,4.106012,-4.684785,1.557369,-9.192441,0.755508,2.323033],[-3.190213,-9.652061,-1.246107,3.841370,4.999765,-7.882455,5.712765,-5.650364]],[[6.978611,-0.017682,-0.916769,5.826394,8.332252,-6.621861,7.138135,-0.186984],[7.848905,-0.839603,3.850465,4.932055,2.436567,-4.446395,-1.219117,-9.737769],[8.598951,-0.175518,2.017674,-5.480442,4.730933,3.710849,-7.097297,-0.002925],[-0.674137,-1.714462,1.869500,-2.339163,7.972480,4.637066,-3.754951,9.687774],[-4.485512,8.730499,2.138002,-2.375376,-9.192073,7.665922,-3.875455,4.843137],[-8.592667,-7.501925,2.443752,6.986516,9.748296,-7.911795,-7.808775,2.942451],[5.040122,-9.954961,-3.092161,4.593279,-6.868637,-9.445866,1.381029,-9.667739],[1.131936,0.459674,8.506970,0.753250,4.827709,-4.716547,6.863704,-2.593512],[2.359147,2.919110,-8.887554,-1.127587,-2.249502,4.299125,-1.940512,0.895080],[-1.389946,3.908734,9.126386,-8.566762,-8.054606,-7.344883,-1.488147,3.808787],[2.935593,-6.574472,2.128435,5.861058,5.835174,5.618758,-9.177500,8.892788],[0.218322,-2.753501,6.186347,1.849118,-5.048535,2.629317,8.058226,-9.226335],[3.323980,-8.464512,6.054361,-4.735511,-2.801460,6.101209,2.674632,9.106350],[1.081812,6.471142,-3.273898,-4.422908,3.289753,4.674456,-8.029334,1.868414],[-4.856374,4.150469,8.762455,-2.837293,5.661518,-5.998279,-3.936442,-2.883542],[-8.591695,-0.600660,-3.993781,2.908273,-2.552636,-3.436408,-5.846825,1.574879]],[[6.253599,-5.583484,-7.841848,-3.647549,-7.129088,-0.646691,-5.309735,-9.575895],[6.544947,8.070616,-3.365077,3.241089,-3.766322,8.607396,2.527785,2.508055],[2.038530,-5.845152,7.360635,-7.395724,6.339674,-3.125895,0.287345,-0.946514],[-5.821190,-0.478488,-0.506355,2.472054,-2.100723,8.133176,1.472745,-3.616207],[6.105641,5.443367,-9.825448,-7.425991,-7.126691,8.735701,-9.328587,-8.273635],[-9.429081,1.952985,-2.463620,0.812789,8.494201,2.499570,3.247032,-4.047038],[-1.606798,0.117549,8.131118,-6.126544,0.044479,5.191694,-3.955920,-0.854748],[-8.008336,1.822386,-9.361121,2.046934,-5.257103,0.493927,9.142337,-6.648924],[0.440049,-2.786275,1.125860,-7.380600,-9.873958,-2.686847,-9.108165,0.209941],[-1.074192,4.480681,2.538156,7.762658,5.449277,-1.615489,-3.192820,-9.173400],[-3.903491,-9.352937,-8.673404,-6.367290,-2.964844,6.308512,4.090300,1.927335],[0.315630,3.611608,-6.161462,-3.518248,1.596657,-6.775312,5.978713,5.768739],[7.722006,-2.251431,-1.686931,-6.659492,9.726866,9.294765,9.468601,4.058079],[-9.272146,6.379543,4.245654,-5.398705,-7.148114,-1.227106,-0.836329,-0.881855],[3.124489,7.742220,6.175482,-6.518332,6.835990,-0.773139,-9.823639,6.942787],[-9.667441,4.720436,3.440045,-9.116442,-2.755104,6.944693,-3.811585,-7.204687]],[[-4.568908,6.390712,-6.243410,7.442694,-8.723588,-7.299805,5.072918,5.496941],[-4.372787,6.055398,-9.575073,-0.225951,-8.748621,3.655367,7.501719,-7.901843],[6.416491,2.940510,7.616047,7.912955,-5.791872,-2.785145,-3.112641,4.390102],[9.681791,-2.225541,-6.562671,-8.856247,-3.502259,3.852559,-0.031240,-6.954547],[-4.716756,5.423326,-4.223701,1.601671,-0.544752,-9.193158,4.486299,9.280048],[-8.051381,-5.903283,-6.279979,6.817557,2.724519,-8.740632,-8.064285,8.968481],[6.938974,-2.410800,-8.006994,-1.512669,0.933408,7.212977,8.366769,7.948976],[-4.794617,-4.148372,4.409053,5.003588,2.681682,-4.145782,-2.837912,-2.101131],[-7.950826,7.346206,-6.845503,5.643772,-7.062482,-6.675231,0.777158,7.736562],[0.512040,2.217327,7.259809,4.311988,-7.582164,-3.875026,-0.342096,-1.951219],[4.199292,8.403285,-2.367556,-2.997455,5.803784,-2.931343,-4.759344,-8.537259],[7.897728,-8.699295,-5.965653,2.927025,8.033339,-6.685842,-0.721966,-8.136870],[-5.974110,7.783207,-7.817268,-0.823097,-4.184136,4.268317,-1.605351,1.969081],[5.046902,1.283440,9.901179,-9.083069,-6.463037,-3.970111,-6.783209,5.307766],[-4.031609,0.122059,-9.610904,-7.433380,-8.368583,8.527237,3.985409,-6.096630],[0.952271,8.641013,6.087174,0.170082,-6.300757,-0.565490,7.624670,8.686175]],[[2.717665,-0.234779,-2.059095,-1.480159,-9.617665,-9.266553,-2.715063,-4.786032],[-2.698356,3.640745,-8.454783,8.598064,-2.700491,3.508268,8.119009,-2.476588],[1.823402,-9.553133,0.987797,-3.558818,3.360466,-1.729118,0.029470,9.373699],[-3.146571,7.241080,9.108032,5.736206,3.880465,6.393119,4.892488,3.860984],[7.126341,1.177914,-2.861702,-6.197908,-1.042447,-2.275048,-2.229381,0.534272],[-4.959051,4.434129,0.151414,6.913088,1.886724,-4.360096,-4.974473,1.330239],[6.856403,3.477235,-0.130689,6.768728,-7.427926,-4.181025,3.433704,5.884116],[9.337438,-6.424548,3.325846,1.256422,-6.257161,5.027579,9.463295,-9.605721],[1.971384,-4.595621,-2.339425,-9.746875,6.983848,6.622384,-8.891051,-7.485556],[0.321086,0.560764,4.870713,7.530951,-8.321708,-9.706667,4.995757,-4.043588],[-9.705434,-9.541145,4.870091,6.029766,1.730021,3.484391,2.388569,3.189397],[-3.674963,8.297737,4.796157,-5.594895,-7.701547,5.712680,3.976464,-4.378651],[2.611851,-1.703877,-1.795911,5.594449,-3.253954,5.443799,9.763187,-3.363947],[3.535788,9.124973,-7.910295,-4.948644,-9.906894,-4.227059,-7.525973,-1.863909],[9.451881,-3.494544,-8.361286,-7.043703,-2.923715,0.672361,-0.658213,-3.220977],[5.470002,5.979020,9.015262,-7.859074,0.323779,1.720717,-9.453459,5.611401]],[[0.509547,4.958195,-0.361841,-0.182181,2.059659,-2.996597,-9.243186,-4.449308],[-2.211053,6.478926,0.463184,3.606489,3.248362,-8.009144,-8.430501,2.633968],[8.522622,-9.954579,-9.318257,4.991387,-5.860876,-5.064348,-6.934799,-4.027360],[-6.412843,-5.940598,-0.839999,-5.151373,-4.116857,4.258215,0.826242,-4.432577],[7.467350,-2.819471,-8.786046,6.950355,5.214317,1.303125,-1.402166,-9.075993],[0.552613,9.672381,-1.041716,1.123107,-9.140452,-0.010644,-5.358486,1.450947],[1.914675,7.899089,1.290803,-2.105449,-8.035390,-3.916119,4.932396,1.080833],[8.722405,-9.567483,0.680005,-7.463446,-4.568990,7.639144,-0.233056,-8.530223],[-1.840315,6.481905,2.965270,-6.438749,1.840219,-4.737730,2.000961,1.446085],[-0.883808,-1.735533,-6.742886,-4.999522,6.612371,0.160977,-1.609244,3.504567],[3.683972,-4.144513,-6.837002,0.945244,2.367505,3.106286,8.415762,2.368140],[-5.080199,6.595679,-7.187314,-1.506166,7.567109,0.490451,2.361478,-2.264680],[5.851707,4.092573,0.243169,7.449267,4.092085,3.011107,-2.826718,-9.450615],[6.280445,0.608958,6.961123,4.493577,1.517417,-9.048208,-6.837659,4.704156],[3.537264,7.732552,9.988339,6.752269,5.684754,-6.717191,9.131984,1.449096],[-1.975962,6.934211,-4.731660,4.972843,2.717896,-2.763941,-8.432131,-5.779658]],[[5.588394,5.721702,-2.560613,0.288849,1.303505,0.446550,-5.987346,5.999346],[6.805297,3.148695,-2.295301,6.978444,-1.843237,0.172719,-3.463903,4.036432],[6.964335,-4.281516,3.738627,-7.898628,1.175884,-8.532029,-3.566332,7.845292],[-8.211560,1.272800,4.288756,-5.448016,-6.473619,-0.940190,6.150697,-3.004536],[-6.118660,3.963840,-6.977012,1.974809,5.452825,-7.120309,6.519416,-6.192172],[-8.334602,-0.577097,-2.643999,6.891381,-8.392472,6.873263,5.646073,2.038617],[0.391913,-4.335115,-3.585756,4.226993,9.272148,2.354303,8.634480,-9.305501],[4.214124,5.246408,2.312034,-9.798328,1.049153,-2.918429,-1.756904,-6.985110],[-7.175037,4.607188,-2.623726,-9.134884,-3.467348,0.420971,3.969794,8.928994],[-7.698862,9.085005,-3.036625,-3.380331,1.801079,-1.684964,-6.831813,2.343783],[5.169587,1.941624,-7.153923,3.274573,8.107173,-0.729331,-4.337908,6.870738],[9.685581,3.079528,-2.149617,4.052613,-5.214060,6.298952,-5.629194,5.443782],[-8.970646,-3.366338,-1.550731,0.401009,-2.472633,3.326536,-2.222251,9.165825],[2.641553,2.017337,-8.473250,7.539802,-1.445741,1.516553,-4.618980,7.690294],[0.768368,2.351331,7.876962,0.671614,-0.177019,4.411339,1.101746,-4.979053],[8.511317,0.617686,-3.574562,-5.563707,3.377617,-8.426661,-3.186896,-2.998010]],[[6.932699,3.666495,7.649176,-3.248419,3.906513,-6.689882,-1.463457,9.661994],[-5.995376,-0.550338,-2.038423,9.434567,-3.739800,6.906105,5.653556,4.256316],[4.409269,-8.902304,7.731646,-3.764360,-4.292429,-1.296355,-8.162603,-5.606449],[-8.410247,3.409802,6.479446,-7.330984,-5.736405,-6.011915,-3.880743,-2.323199],[-0.330903,-4.684265,4.718486,7.191008,6.198490,4.174993,7.561669,-8.135375],[-0.208317,-2.603711,-0.226268,5.399246,-1.582301,9.119113,3.870953,-1.311033],[-0.799061,-7.650367,-1.625163,6.085994,4.359265,7.711704,-7.538677,-2.163810],[2.956853,-3.553841,7.277717,2.297263,1.153803,-1.495835,-6.186791,-6.973179],[9.758706,5.544052,-2.495959,4.095713,1.271397,3.202972,-4.043127,-3.265844],[-9.072339,-7.885643,-1.256286,-8.965591,-8.987373,8.969057,4.924148,4.059254],[-6.592977,-3.536223,2.882959,-7.068653,-4.164161,-9.990466,8.864088,8.660908],[2.880850,2.424072,1.564012,8.013375,8.591087,-3.118227,-9.064521,5.975776],[-9.023838,-1.876484,-2.146168,-9.247449,-6.270262,2.012443,3.018492,0.672242],[-2.017757,8.430750,-3.209045,5.027805,8.236932,6.551488,2.519775,-6.777940],[-4.190280,7.569254,8.685405,-3.185073,-7.241307,3.005810,-3.114643,-7.812146],[1.116887,-0.559331,-0.752685,5.057583,5.501553,-4.702009,-6.307969,4.249995]],[[3.403406,1.827564,-9.664304,-0.264286,7.544646,1.661375,-5.011936,6.964265],[9.079764,-0.343039,7.421431,6.935423,-6.253959,-1.196664,-8.704371,1.463315],[-4.364093,-8.021614,-7.465106,-8.531763,-7.774091,8.177030,3.772157,-2.220585],[-2.319403,8.722502,1.994806,9.585136,-3.292607,-3.338698,1.150427,-4.089879],[-3.969765,-4.360346,1.637017,-6.058874,-2.836788,-9.925895,-9.447712,-9.651631],[5.200583,6.768014,-6.402576,-1.843227,-1.043720,1.376601,0.777925,3.723763],[-5.777367,-2.715284,-6.888544,4.199376,2.527607,9.602751,6.730543,-3.103516],[3.562250,2.417453,-3.803802,-7.538135,-9.715407,-3.284845,0.653689,8.329457],[-0.123982,7.516151,-6.565715,3.203504,-4.185022,-9.980408,5.271831,1.970328],[-3.962908,-9.981095,-1.835251,6.238525,9.520683,-7.964308,6.337516,-5.176848],[-4.306610,6.324294,9.465420,-0.872880,0.141475,8.194056,7.996925,9.967355],[0.692656,3.076221,-7.315586,-1.291372,-1.173080,-7.638182,-3.896044,5.356510],[-7.467682,2.514099,-4.878878,7.381054,-6.324397,-3.341153,6.428589,9.753779],[9.820727,0.205787,8.920967,4.667728,-4.993259,-4.076846,1.022712,9.556174],[-2.439034,4.365517,-0.845933,-5.934047,2.360532,3.604832,-8.209837,7.956116],[8.344506,5.391073,-5.587605,-4.038004,-3.562572,4.341012,6.992362,2.495277]],[[9.016583,-9.307855,0.365149,0.039469,3.851779,-0.407743,8.738905,9.186792],[-0.894691,-5.841532,-1.487371,0.077503,9.713849,-4.681295,-6.958930,-8.274783],[-9.411593,6.893094,2.277227,-9.085826,5.741813,-6.393083,-9.695415,6.836978],[-8.878815,4.699387,1.207417,9.407763,2.271015,4.545360,7.700009,2.003265],[-8.849757,0.791315,3.530696,-7.249809,-3.860295,-8.159676,-9.161516,6.577262],[7.823232,3.280181,-7.583018,8.339684,-3.098391,4.285592,-3.785984,2.755097],[1.325611,-8.061607,-0.547315,-6.010714,1.091910,4.744617,-3.242922,-9.422179],[1.679135,-0.769508,-6.236280,9.148844,-7.129897,-4.204385,-1.843852,1.961627],[-2.272835,-9.755834,-1.921681,-9.967427,2.564239,-1.851174,-9.825558,2.367780],[-8.266065,0.267319,7.832511,-3.595958,7.926990,-0.275501,-7.428895,-7.163915],[3.407713,-9.616949,5.451015,8.427896,-5.187019,-3.292897,-9.374976,6.292446],[-0.290800,2.904205,9.907837,1.711363,-6.324283,-3.746519,-3.750848,-9.138903],[-2.936070,0.982244,3.720197,-2.449028,-8.127760,-8.315242,5.282107,-6.841633],[2.958153,6.659716,5.141299,6.005833,6.624546,-3.266509,-1.381647,3.110189],[2.779783,-8.920217,-3.780496,2.092708,-4.991521,4.494977,7.923025,1.529035],[-6.002594,4.943533,5.633651,7.184655,5.976392,-6.225773,-4.777367,-1.218949]],[[7.791647,-3.113542,3.238293,-8.970676,-9.300993,6.106864,8.206065,-0.591383],[-3.104354,5.718749,-9.823485,-1.387251,0.077191,-8.336093,-3.438740,5.200782],[5.528007,8.592722,5.295733,-0.589170,-6.549163,5.092752,-2.846046,1.385914],[-6.882650,2.667661,7.612529,-1.469304,-2.842577,2.367930,9.379955,-5.691371],[-1.388403,2.469158,-7.731399,1.020691,-3.603666,-2.432789,-5.435455,9.338048],[6.342739,-4.976860,-3.597357,3.652452,7.165065,2.739095,2.389012,9.186951],[-4.450528,-9.811756,1.982882,7.461439,-5.012512,-7.954998,9.259559,7.616442],[-9.309144,7.535249,-9.859917,-1.749712,2.153141,-6.638763,6.167158,5.107529],[0.943007,-2.252727,3.546820,-8.442513,-7.984743,9.433735,-6.688264,-2.270144],[-0.040011,7.663913,-4.249137,-8.850835,1.400042,-6.314300,-2.617611,-0.322354],[1.447840,-1.148382,-5.089999,0.151149,-4.562267,-3.742606,3.152497,1.156221],[0.203053,9.643735,-5.170737,8.032703,-9.898462,1.889762,3.782027,-5.900124],[-9.280213,-8.722593,8.574253,9.925760,-2.393059,-0.320190,-0.107144,2.328688],[-1.422424,2.235716,-5.160660,0.468950,2.767414,0.797372,-4.050131,5.111111],[2.540829,-3.911651,5.252339,-2.213248,8.954129,-1.104472,-2.950944,5.500526],[-8.813281,-8.601319,-8.218274,5.988565,-5.519316,-9.725925,1.322338,1.150060]]], dtype = "float64")#candidate|8789|(13, 16, 8)|const|float64
uop_8790 = relay.asin(const_8789.astype('float64')) # shape=(13, 16, 8)
func_3888_call = mod.get_global_var('func_3888')
func_3891_call = mutated_mod.get_global_var('func_3891')
const_8793 = relay.const([-4.428683,-5.544168,-0.960762,3.163898,-8.681018,-2.339752,-3.810258,-4.012448,-9.300783,-7.945131,4.005236,9.230616,3.467035,9.926313,-0.765043,-2.301137,-4.169622,0.831808,4.608345,0.384196,7.616366,-0.546909,-7.863218,8.260033,2.825216,3.477584,-3.891373,-9.375000,-4.733421,-1.617974,-6.083079,-0.615662,9.595751,1.741688,-7.339623,8.470875,-5.390512,5.619991,-6.112978,-9.840514,-3.730447,-7.644912,-5.875674,-4.785972,-7.904211,2.750549,-2.995216,3.779794,7.687046,-6.636127,3.226225,3.863577,-4.010612,5.041343,-0.729351,-2.970219,9.661666,6.583509,4.189855,-2.020232,-7.038445,-8.446518,3.099214,-9.198018,7.438495,7.718945,-0.935359,-5.754248,2.316582,6.496464,3.790108,8.074295,-0.926410,-7.676520,-9.587206,-0.451482,-0.933223,5.659278,-7.178267,-7.715264,9.998855,1.786224,5.750346,-1.824917,0.945849,-6.631874,5.777813,5.719227,-1.865346,5.904954,-3.158232,7.130414,-8.680726,3.590638,-2.014898,-1.981234,8.947244,-9.070928,-4.861879,3.873497,-1.923352,-8.327477,3.343294,-9.535975,-0.002333,0.536843,2.516900,8.509955,2.287815,-4.609013,0.984363,0.065628,-6.866403,6.439225,-0.631640,-8.983529,-3.756152,-7.103364,-1.774952,5.052073,-1.016639,-7.130596,8.170267,-7.137971,-0.772210,-7.612145,6.713836,-6.210804,1.178542,-7.821949,-9.482218,6.805245,-8.120192,2.563705,-7.973916,4.064128,8.413124,-8.695128,6.905488,7.162208,4.637905,7.930774,-2.996828,9.027065,3.447474,4.661354,-3.445516,-0.418666,2.068403,-0.055432,-9.643462,-1.063141,7.754655,-0.801731,7.954009,-2.628860,-0.758127,-6.683052,7.833779,-0.684362,4.742566,-9.849650,-3.113141,-6.875317,-2.064120,3.306854,-9.518353,-2.850758,-8.194032,6.676204,6.956189,4.349170,9.730965,-5.957789,4.589660,-6.515799,-9.653109,-5.543968,2.534441,-3.736691,7.022597,5.806479,-6.973141,3.221484,-7.110215,-5.292183,-6.264719,6.332020,5.967927,-1.083447,0.371144,-6.505983,-9.548497,-5.256803,8.583795,3.035388,2.476916,5.726934,4.476651,-7.767067,1.223436,0.350103,-5.277616,2.420644,-7.639365,-5.786158,-1.997122,6.597820,-5.953257,6.675613,6.456127,-3.131217,9.446334,-1.322623,2.006043,-0.381171,5.478259,-5.562565,4.942880,-8.061241,-4.557550,5.742852,0.465582,2.072112,-2.026773,4.547272,6.085407,-8.131897,9.117133,6.405054,-3.225372,1.566127,8.796982,4.242466,-6.936904,-8.639045,8.255564,4.991553,6.622743,-2.007947,9.579092,2.929577,2.363350,9.372591,-8.943251,7.712808,6.196100,-8.933494,6.907259,2.434854,7.393492,-2.232492,8.107173,1.621493,-8.063454,-5.192236,-4.037628,-3.733749,-7.188583,-0.716622,5.510030,9.485415,1.638845,4.631620,6.442284,-2.473930,7.657221,4.099647,-4.655812,3.153494,-5.612357,3.140364,3.313552,5.256962,7.110948,-4.169982,7.716161,5.921687,0.516319,5.712031,8.362117,-9.859023,-8.884081,6.681278,-9.139742,6.935316,9.544795,0.217244,3.540107,-7.263286,9.708807,4.847918,-4.191846,1.276498,9.922475,-5.251895,-3.352087,6.755399,0.536206,8.125838,4.244123,-2.417828,9.759479,7.972115,-8.287781,-2.813183,-8.224374,9.229223,-7.522382,5.567764,7.245236,4.334298,-4.263942,8.560745,8.286360,3.181531,9.661773,9.514559,-0.236894,6.183858,-5.891417,-3.197926,9.717754,2.467597,-2.220377,-4.418277,7.491913,7.524956,-2.821639,6.475355,0.113623,2.539043,-0.926300,-2.220397,1.716850,-7.737901,7.953666,0.554728,-2.683741,-5.657158,0.283280,-8.348851,-0.178365,-3.664584,-7.494852,8.177716,-5.758063,2.227119,3.315513,1.147633,5.419510,6.810283,-6.405094,-9.720930,2.595117,0.318880,1.176127,8.933139,7.824186,-3.314346,6.196585,-8.997686,-2.466115,7.705202,3.725540,4.022215,-9.037282,6.140702,9.032681,1.151114,-9.915739,1.053255,-5.376145,-7.529903,-6.219431,-6.767018,-4.662264,5.150879,-0.895480,-0.985786,-3.202249,-4.870673,-9.457693,9.179304,4.193179,3.831017,-7.056486,6.753334,8.856820,-2.368748,6.169158,-9.082932,4.209118,-5.266246,-8.698226,0.997128,-4.006986,9.713449,9.654277,-9.143273,9.652481,9.501967,-5.764745,-5.582701,-1.735139,9.548387,5.102220,1.540616,-2.707614,-7.490011,-2.420049,0.301340,-1.832096,-0.279719,1.423527,-5.765338,-1.000396,-5.829232,3.826688,-3.178426,-2.299101,4.057106,9.252003,-4.916566,-4.713079,-6.199887,2.803704,-1.857933,-7.284119,9.399479,1.407820,-8.374678,1.803437,6.192754,-5.530188,-3.636691,4.223997,-2.753231,-0.163733,-5.765863,-9.532124,-5.317999,-5.912710,4.040815,2.461186,3.867819,-7.977266,-6.108786,-5.442286,-9.052436,6.828806,5.598910,-4.437872,-3.864451,4.975124,-0.027525,5.882962,0.456026,2.931423,3.382414,7.799127,8.755148,-3.654712,-7.642262,5.593985,7.168376,7.419460,-8.850805,6.344163,2.288397,8.491016,-2.299538,-2.536533,5.796126,-2.646482,-3.846536,7.072037,8.548314,5.577118,-1.998716,4.989522,3.285955,9.387286,-7.547387,-7.977143,2.400716,6.269533,1.084379,4.252062,1.393543,4.218836,2.884806,-3.196065,-9.933227,-9.855417,-6.854216,1.270632,3.514181,4.240912,0.181655,6.627678,-9.867144,-7.742873,-3.923956,-1.714286,8.583628,7.333068,-5.413608,1.462595,7.192717,6.923674,2.494026,6.413555,3.016706,9.263243,9.339994,9.202984,7.041849,8.635980,9.760895,-1.485284,7.468308,-3.336177,1.547702,-2.548007,1.028169,-4.422402,-3.274847,4.276986,9.106923,-0.557022,0.090167,-6.915980,5.931479,-4.098465,8.286731,7.590698,-8.304571,-2.342020,-7.784920,-1.352681,-9.408259,-0.838815,1.920513,2.548694,-2.232944,7.483774,4.754130,0.535906,3.665450,-4.401280,-2.796069,8.489674,9.787506,-5.937580,-3.752309,0.289846,1.815584,-0.762160,-3.601531,3.317558,9.240191,-1.564625,-7.884295,-9.320765,-0.549497,-4.236092,-3.604117,0.259721,0.863340,1.156965,0.181870,1.229251,6.057453,5.604545,2.396552,-0.857676,5.962787,5.393028,-4.422549,7.656875,-4.634615,5.288292,8.526327,-4.012467,-2.209475,-8.838062,3.369501,5.098627,5.235074,-1.879915,2.918303,-4.224185,4.064559,5.618813,2.405386,-3.193265,-8.693142,-2.014835,9.586944,4.015227,8.364036,6.237062,5.326690,1.684653,4.918421,1.285491,-5.702909,9.771792,1.200748,-5.156709,9.280978,0.474339,-2.800216,7.637450,-9.278219,-3.741069,-3.793211,-9.934747,-8.616211,3.616553,6.609464,-5.830362,-4.308326,-8.597762,-6.183070,-1.151012,6.874484,-3.658778,1.501778,2.027148,-5.176827,1.740226,0.560137,-4.304947,1.023209,4.218933,-6.559948,4.759095,3.568040,-7.388135,-5.419385,8.888769,-1.753625,5.198055,4.933146,-4.119396,-1.759243,9.515067,4.897924,6.447095,0.176758,-5.834758,2.951355,-1.646764,9.820486,-4.069705,5.108699,0.965932,3.235253,0.834702,-6.827449,-2.445390,-0.146764,-0.614904,6.965929,-8.587798,0.348792,-2.824151,-3.178755,8.000573,-9.973990,0.933283,-9.662863,1.309644,-6.843120,-8.727672,-8.401798,9.818730,-0.049209,4.012185,-5.129263,-0.204302,-8.355516,-7.058891,4.517425,-3.800114,7.745318,0.971888,-6.982539,-7.330866,-8.133958,4.718969,7.998041,0.932085,0.490256,-0.078775,-0.093953,6.866978,5.733228], dtype = "float64")#candidate|8793|(700,)|const|float64
call_8792 = relay.TupleGetItem(func_3888_call(relay.reshape(const_8793.astype('float64'), [14, 10, 5])), 0)
call_8794 = relay.TupleGetItem(func_3891_call(relay.reshape(const_8793.astype('float64'), [14, 10, 5])), 0)
bop_8799 = relay.power(uop_8790.astype('float32'), relay.reshape(const_8789.astype('float32'), relay.shape_of(uop_8790))) # shape=(13, 16, 8)
bop_8805 = relay.less_equal(uop_8790.astype('bool'), relay.reshape(bop_8799.astype('bool'), relay.shape_of(uop_8790))) # shape=(13, 16, 8)
func_6345_call = mod.get_global_var('func_6345')
func_6346_call = mutated_mod.get_global_var('func_6346')
call_8812 = func_6345_call()
call_8813 = func_6345_call()
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_8816 = func_3652_call()
call_8817 = func_3652_call()
var_8818 = relay.var("var_8818", dtype = "float64", shape = (13, 16, 8))#candidate|8818|(13, 16, 8)|var|float64
bop_8819 = relay.not_equal(const_8789.astype('bool'), relay.reshape(var_8818.astype('bool'), relay.shape_of(const_8789))) # shape=(13, 16, 8)
func_3312_call = mod.get_global_var('func_3312')
func_3316_call = mutated_mod.get_global_var('func_3316')
const_8837 = relay.const([6.207315,4.142763,-6.532916,4.024651,-4.641945,-9.650182,-3.024476,2.847964,4.137505,-5.902130,8.156711,-3.360159,-1.452350,-4.592264,-7.583222,-0.210144,-9.115197,1.757770,-5.344018,-9.945627,6.010045,1.389184,-2.363178,-0.347166,-3.447499,-8.437735,0.854928,-3.468979,0.559775,9.949655,2.537767,-6.843664,3.168719,-5.332566,-7.243453,-4.022659,7.881313,3.189332,-8.116869,-6.885819,-8.062197,0.660238,9.591301,5.121737,-8.251463,-0.846314,1.136615,2.552151,-4.866478,-3.728599,-6.436835,-5.146429,9.293234,3.890599,2.388407,-0.948174,-7.597959,0.615960,3.415058,0.470967,6.679032,3.631307,-2.564161,-0.608425,-4.427682,5.024212,0.793498,8.037785,2.037451,0.364762,-9.419971,-6.432067,4.412723,-4.953169,9.257894,-1.964438,3.617482,1.361190,4.355663,-4.561532,-4.188300,-1.981262,8.155963,-5.976519,1.637847,-0.728340,4.678950,-2.087239,-8.194952,-8.565986,-4.523036,2.864797,-6.371761,6.661478,-9.809434,-1.350943,9.715497,-4.921731,-0.590576,8.647391,-0.681487,9.474772,9.396013,-7.413307,-3.818905,3.835073,-8.670968,-6.199003,6.889628,-1.077441,7.298362,-5.552532,6.538312,5.375522,-5.537106,7.703219,-8.142410,-3.147424,8.607124,-3.840539,3.626646,-4.372627,-0.951179,4.994750,1.432206,9.376583,-2.726709,9.566716,-2.964520,8.042446,-8.360387,-9.717378,8.757774,-2.591437,3.920220,-4.112964,-0.949572,-4.937843,0.539692,-9.518051,3.403391,4.753442,9.735548,-6.826279,1.345310,-0.486647,-5.973923,2.310208,-9.938185,-8.634441,-0.521381,-3.492177,-8.708451,0.227727,-2.241342,-3.281822,9.632971,6.215526,-8.066639,-9.615971,5.091524,2.920844,2.275107,1.363520,-4.778101,-9.395310,-1.343002,4.456328,5.824449,-4.077356,-6.523127,-8.826854,-2.471604,1.299249,1.543471,2.567696,-9.339576,-7.268882,5.070816,7.652744,-4.695711,-3.880201,5.820300,3.262683,-0.713952,-0.478321,-2.659557,-7.140520,2.924640,9.883112,7.398994,8.374941,-3.937266,-7.201669,-3.194966,8.779815,2.011154,4.837175,-2.827020,1.269140,3.545996,6.563617,-6.137686,-8.463833,5.794712,-4.094901,-9.346187,4.250328,-9.751551,-0.427809,5.071050,3.372767,9.926024,9.497597,9.097628,-4.627157,4.410448,-7.710463,3.956048,5.883229,-4.696015,-3.457022,1.205624,4.893420,7.320459,-8.107766,-0.044223,4.921814,3.992267,4.652775,4.184145,5.573114,2.493610,0.506548,-9.551697,-5.595655,-0.785788,-7.361133,-1.784829,1.997836,0.790518,-7.384139,6.756204,-7.266573,7.984109,8.785303,9.074765,5.504002,-2.477657,-8.209263,4.662436,-8.546735,8.353685,0.574595,-2.277460,9.749499,8.152648,3.132360,7.367906,0.831602,9.086307,5.491361,0.306122,-8.109835,4.383656,-2.251637,1.214517,5.276190,8.664109,-9.503997,0.340654,-3.799996,9.318109,-1.668262,2.177400,6.830317,-8.131595,2.720084,5.327089,-6.961186,-6.522140,8.490650,1.716849,-1.840870,-1.822215,-5.029564,-4.779042,-9.690001,6.164749,-4.794924,-1.219626,5.390787,4.997925,-6.023714,-5.731831,5.973068,6.676745,-2.527540,0.327823,-4.375757,1.977484,-7.187293,5.712832,-1.020618,7.210490,5.163315,-4.725636,-3.109173,5.720483,5.885402,1.647845,0.365388,0.111279,7.191758,-9.815430,-3.121720,7.520366,-3.400297,1.602812,4.212824,5.023227,-1.157196,9.384504,6.731912,8.942643,5.211447,-0.456699,-4.140681,-3.166229,-3.632831,4.964046,8.759715,8.214299,1.955498,-2.284859,4.707548,5.138955,6.395548,1.026137,9.397515,1.266251,0.183651,1.047292,-2.090926,-2.267410,4.904899,4.617249,-0.840441,-4.991955,-8.661540,-2.103285,-7.856912,0.664895,-1.831505,7.208406,-0.587215,-5.559473,-3.199487,1.446329,-1.348039,3.353714,2.145956,-5.883035,-6.676221,6.158348,8.379586,-5.814652,7.343345,5.315293,-3.096343,1.256417,-2.531486,7.299722,-1.010749,3.828324,-2.525892,-8.614924,1.314466,9.573170,5.043124,-8.063011,-3.910088,-6.983674,6.000555,9.522290,-4.016418,-0.947535,6.945149,2.042962,-6.272638,-6.268404,-5.249030,-3.030351,0.640593,3.713664,-3.258139,7.561849,-8.490577,-9.888972,8.410353,-9.250213,-2.118664,-7.900677,-3.078701,1.402431,-3.904941,7.251642,-8.285871,0.473403,9.858965,-7.540806,-2.378787,-6.673720,-5.784609,-0.078173,-1.577758,1.444499,4.760499,-9.563590,-3.415690,-0.159776,3.127030,8.316610,1.701466,7.794705,8.014571,-3.141442,6.028502,-0.230312,5.838663,-2.318477,1.091083,9.577738,0.193303,-7.979115,4.956039,5.203250,-9.963398,5.073688,7.539565,-6.482901,-4.652447,-8.831034,4.224315,8.573997,-2.292455,7.981151,-3.250557,-4.253979,-5.239536,1.875904,-1.225481,0.018526,4.642414,-7.697627,0.534165,7.218061,-8.711431,-6.937128,-7.945260,-7.222365,7.748699,6.226173,-0.961186,6.901896,-0.668389,1.266297,8.090651,-6.719387,0.919176,8.187142,6.034060,-2.174869,2.282289,-1.246765,8.156044,-3.987430,-4.576012,-5.891297,9.757217,5.094769,-1.882831,-4.479120,2.060529,-7.103815,-9.687062,-8.589908,-8.725951,9.005845,8.574905,3.916766,-7.812551,5.687081,3.290139,-1.244042,0.209295,3.087063,-4.099057,-8.858659,-2.203785,-5.863248,-0.442166,-9.364557,3.393400,-4.398772,6.390540,5.745747,3.249904,-8.506635,-5.952162,-5.551660,8.725315,9.278885,7.357636,1.645769,-4.841602,-6.692209,-1.758930,2.553070,-1.712810,-5.261568,-2.203932,-1.913574,-3.197918,-6.867231,3.784556,5.526210,-7.841971,-7.022365,-8.226480,8.004337,2.486159,9.405200,5.053670,1.032293,9.348310,3.293774,-3.613403,0.701299,2.704543,2.819392,-9.999592,2.904511,-7.017385,7.701715,0.336831,4.063410,-1.017965,3.739215,-0.854050,-6.846640,-7.603040,2.939870,2.450624,-7.427054,-0.503388,0.554659,-5.147232,-0.028867,-4.590473,9.873196,-2.915826,-9.108519,6.077896,-8.456310,-6.578379,2.055722,0.314816,8.768460,-3.507404,9.952061,-2.608488,3.395980,3.108650,2.450434,8.200355,4.196817,4.433351,9.124550,0.305617,-1.478988,-8.710938,0.601789,-2.085822,-3.768267,-4.129317,-9.812848,-7.912354,9.615484,6.180519,6.782627,4.919677,-3.067563,-3.332061,2.787179,-7.227340,5.755847,-2.249193,-2.413075,-8.661282,5.471297,-5.939669,8.599416,5.757744,-5.452730,4.738180,-0.150305,-7.088281,1.656257,-0.162734,1.902829,8.057232,3.361199,0.940370,-4.614682,-8.074588,-8.121392,5.169614,5.741382,-5.659429,1.400475,6.479196,-0.758090,0.194027,-0.085274,-9.319170,-2.820031,-1.048669,0.504122,8.976590,4.800843,8.805985,-6.816728,9.808125,-2.337963,0.647057,7.499389,5.734924,-9.657324,-2.272804,-9.913102,-5.642125,-4.047133,-1.257612,-3.844441,9.198759,2.520269,5.886334,-9.658774,8.916497,-4.107239,-9.043662,5.908238,6.381825,-2.111969,-0.722613,9.519134,3.269858,2.454245,2.337263,5.251793,-5.835214,-6.259525,-9.320507,-7.892931,4.562313,-5.961430,4.125821,6.661554,-1.922280,-0.231347,-2.540104,8.141687,4.070801,9.782531,7.382253,4.430017,5.165754,6.370833,-6.367089,6.465645,9.924126,-0.291024,7.820411,8.979688,0.136648,-6.830811,1.336936,-4.448240,-5.456046,-9.147077,-7.176925,2.003189,6.859371,-0.803490,2.240311,5.026243,5.977740,9.105523,0.757781,-5.673051,-6.622965,-7.211217,1.742905,-8.025684,-6.182813,4.232418,-5.704163,-6.386867,9.626466,-0.007565,-8.745140,7.525918,7.555821,-5.412731,-3.665121,6.062124,5.362872,-8.053817,-6.627376,-7.268638,8.378736,-1.159928,3.316080,2.041052,7.400320,9.209995,9.879560,7.392140,4.191456,2.110016,8.568867,-1.492646,-0.365199,4.706805,2.051709,1.596645,6.287474,-4.227533,-9.594228,4.645234,7.760691,1.164964,-8.428294,9.226140,-1.713033,6.054988,-1.152242,-0.827751,-4.595900,2.824798,-0.313139,6.915998,-1.928099,-8.213043,2.576822,-8.775766,-6.517316,-1.673546,6.369343,-5.339509,-5.706291,7.371425,5.592545,-5.079278,6.650711,4.871129,-9.743938,4.206304,-1.329651,-4.703137,3.210077,8.230176,-8.434786,-3.035084,8.668426,-7.669028,-9.715171,-1.541431,5.331613,-2.384704,6.857633,-7.682929,-6.878418,-8.792025,9.661224,-7.689770,-2.072949,-5.227292,1.955131,-3.813343,7.143859,3.389382,-8.447147,9.413325,-1.403687,-6.161955,3.400189,7.941978,-0.324346,6.062554,-4.126467,-2.782810,0.363395,-6.770647,-5.121976,5.842330,4.929620,6.857358,2.932120,6.818680,-7.548344,5.157426,3.352329,6.129674,-3.969617,2.676342,4.867457,7.523311,4.920225,3.693752,-9.790823,0.991737,8.053883,9.100400,-1.698052,-7.736101,-8.734195,-4.487365,7.806793,5.871490,-4.969338,-9.408861,0.981142,-0.810218,4.162494,-7.918055,8.232547,5.371838,-6.837800,0.677001,-4.908247,-2.738048,4.405746,-7.392233,-9.623338,-6.724184,-4.314851,-6.747633,3.351392,-3.726499,8.395655,-6.206258,5.082219,5.748069,8.498890,-1.494024,4.899757,-9.468773,9.063385,2.128638,7.763786,3.026102,-4.652766,5.322017,-7.389726,9.869780,-7.088310,-2.178017,0.994582,8.839971,-4.707413,-6.485230,-7.151836,-7.231396,8.169955,-1.829648,-5.289593,5.483465,7.241350,-1.284453,-6.348389,3.351526,3.741529,-2.879650,-4.388083,4.340869,2.750374,-9.281164,7.579751,-5.549178,-2.422942,6.556937,-6.629635,8.400842,2.636451,3.123099,4.410467,-2.907928,6.514814,-0.151665,-2.174515,-0.818415,6.653319,-0.941576,-1.332756,-7.295590,9.110691,7.819352,-0.815268], dtype = "float32")#candidate|8837|(910,)|const|float32
const_8838 = relay.const([0.452528,-8.587292,-4.938187,4.637961,6.447442,7.109965,4.712331,-8.560824,2.162556,-3.660711,3.978957,2.317939,2.712685,6.008988,4.716905,-6.405012,-9.655063,-6.342250,-2.769258,7.214847,4.019018,1.107039,6.826880,-5.414273,-8.754858,-9.548501,-2.564669,-9.182381,3.548211,3.346262,9.708784,-8.042767,-4.494826,5.143089,-6.059498,-3.112678,6.543912,-0.650325,8.180695,9.537043,-8.486127,6.195665,7.253442,-0.066979,3.488630,6.944182,1.413131,-1.369499,-6.782388,-9.147415,-4.160184,-5.537928,2.131070,1.536248,-5.486949,-8.860261,-1.292295,4.972291,-6.269422,5.435934,9.973686,-3.708433,-6.997996,-8.243125,-9.255913,0.312030,3.481631,-3.257205,-7.390106,2.392002,-1.349119,6.296655,1.678724,-6.329168,5.275068,-1.189121,-2.188796,4.061262,9.125324,9.174854,8.364148,9.572969,5.890903,5.963128,6.483919,-4.094387,-4.677621,-6.061188,-0.383096,3.057742,-7.384442,9.531772,0.364161,4.948509,-4.271635,-1.728880,2.918049,3.909792,-8.727063,6.742090,5.231016,5.756861,9.255547,-4.032288,0.200338,9.346429,0.817364,-0.310758,-7.769648,8.543033,5.864319,-0.451148,3.019979,2.135132,-4.317032,5.741254,-2.822848,7.135654,7.939192,9.838545,-1.803971,-9.398688,5.079214,-7.094801,0.267593,8.480516,7.714061,2.382070,6.789283,-5.126777,2.054432,2.780721,0.060048,-2.811453,-7.963688,8.146370,-7.763291,-7.308868,-5.613791,0.963050,7.217788,-4.378036,-3.943781,6.089141,-2.399782,1.479097,-7.310287,5.486430,-8.345087,-7.208138,-4.172489,3.981735,3.542608,-0.355297,-1.538711,8.949012,-9.617472,-4.772558,-8.657752,-5.213584,-5.443490,-4.946604,2.101693,-0.919119,2.184623,-8.806523,-4.979205,4.923611,-3.550477,0.842304,7.959833,-5.206229,6.053861,1.733232,-5.040096,-0.576490,3.119562,2.436598,0.839325,-7.561653,-0.352572,-4.158771,-7.867456,4.835600,9.734345,8.779824,8.884712,9.031096,2.649912,-3.625727,-7.499123,-6.718195,-8.611232,-7.414748,0.283209,-2.580140,-8.132824,-9.337822,-0.951040,9.138916,-9.486546,8.999779,-3.421708,-0.089935,4.683511,2.484164,-3.199060,1.616675,-8.297353,-2.294020,4.249926,1.142357,2.219906,-2.051650,5.086246,1.897554,7.037983,-5.182450,7.013049,4.593223,9.378908,7.508964,-7.119423,-0.053060,-3.623351,-0.972700,-3.731425,0.629065,2.963293,3.502507,8.592412,-3.250938,1.993212,-0.773994,-1.868865,4.855594,6.175171,7.229621,-9.604156,-7.871812,-2.234029,-4.360156,-9.992701,-2.613779,5.615775,9.250268,-6.514042,5.946203,-3.306833,9.217800,5.587982,-1.651771,9.078564,-5.967076,-7.573679,-7.497893,6.426075,5.180259,7.969622,5.753963,2.997949,9.865031,2.279497,-7.430122,6.266233,-6.718783,-5.741294,9.998005,-6.583482,4.992577,-4.858329,5.851920,-2.196266,2.475028,-0.656708,1.922223,9.334966,4.863661,3.540564,-3.483871,3.630833,-6.025793,-2.192132,4.629643,5.973737,1.589511,7.462666,-4.899767,9.198120,8.519664,-7.427009,4.625155,4.540133,-1.740214,-3.193779,7.836633,2.632878,-5.877543,1.165639,-0.210671,-1.371689,-0.703847,-7.120369,-2.105931,1.933706,1.107260,-7.062167,7.725661,-5.041309,-6.603693,8.918712,-9.355526,1.535969,-5.397599,8.002851,-6.668064,-0.370311,5.875485,6.972591,-7.529361,2.153868,-2.030310,-4.095905,4.076320,-3.055301,-6.073825,-2.654821,-0.715924,2.657384,-4.514546,-8.573397,-6.643922,-1.996372,6.170667,3.974624,-3.032219,-6.765507,-6.410195,-8.857066,0.872896,-4.806315,-5.137426,-8.098938,-7.932322,5.103573,-5.084040,2.964947,-9.110825,-5.509758,6.993091,1.901267,-8.594732,3.782732,8.127137,7.864970,-9.212460,-2.288516,-4.201253,0.306233,-5.794222,1.221880,-5.060011,2.091497,-3.111126,0.805623,-6.086585,2.233462,-6.966678,4.226632,6.177214,-9.116915,-2.600094,-1.961469,9.627514,-7.772964,5.158349,3.692690,-0.831265,-7.406129,-4.251315,4.480558,7.087797,-5.781993,1.985132,6.577143,-2.359555,-4.913931,-3.532342,8.102117,-0.806357,6.453453,7.419222,-1.725204,5.781430,2.026925,-7.860233,-0.141520,0.896889,7.378469,8.366741,8.058369,-6.039824,-9.619896,4.071895,-3.221338,6.858156,4.418337,-5.603489,6.274523,-7.132059,-5.223538,1.702169,-6.826890,2.980386,1.667836,-9.573830,-6.701325,-2.212857,1.527697,-1.174813,2.573445,4.359324,-4.436899,-9.369041,-1.863632,-0.744991,7.178601,6.796103,0.621307,5.383212,6.187718,6.930326,-1.281329,9.953936,4.698897,-7.721761,1.126974,6.066403,1.596098,9.505867,0.985533,-3.610523,8.000162,-1.448900,-6.915162,8.938918,-1.541358,7.758287,-0.928247,-6.530037,-9.962401,3.359595,0.815482,-6.977055,-7.940524,-9.694263,6.076846,8.051160,-6.794675,1.765625,8.161823,7.907042,-5.170361,9.553632,3.411381,-6.977889,-9.780324,1.154037,2.155740,-7.628584,-3.338024,1.253091,-1.545496,-6.866071,-0.574281,3.910748,7.120007,8.098757,-3.799638,-0.223194,0.761534,5.121217,-7.128261,1.422194,-9.496233,-0.378016,-1.964057,0.313139,-7.139759,7.164860,8.168695,-0.711099,9.700729,-6.937934,-4.066642,6.752983,-4.566644,7.589696,-8.849631,-5.829210,4.232928,9.468731,-8.849425,-9.975351,-2.511415,5.373320,-5.714573,-5.741442,-0.245770,4.517126,-8.202843,-7.295734,-6.481106,0.170045,-2.358664,0.664295,-1.652926,7.558745,0.833990,1.105928,0.452849,-4.297005,5.148253,-4.265925,3.116202,-8.864926,-4.420670,-0.923355,1.117196,7.215056,3.753249,7.854897,8.357338,-8.358858,-6.781195,3.384685,0.625010,5.124954,-9.628624,-4.047586,-0.760461,9.380080,0.611150,5.242174,-9.114094,-6.008065,3.757567,8.677646,-1.984222,-4.073850,-7.215871,-7.363415,7.386138,-2.622698,9.870116,6.576245,5.717441,3.366458,0.664073,3.678479,6.427103,7.647161,5.638693,-9.182379,5.356834,-7.912917,-3.455905,1.952433,5.556144,5.482706,-6.005734,-1.750550,-3.946338,-0.704103,-9.165265,5.590312,6.830208,-1.012808,2.659856,-6.768781,8.340906,-7.150482,5.207402,9.614077,5.364545,-3.752565,-9.069899,-9.844749,-7.461113,-8.179340,-1.739437,-6.520270,-8.727824,5.934032,9.432859,-2.262779,-0.266758,-3.986895,-4.081282,-5.752035,3.391262,0.786933,1.144809,-2.372980,-9.789278,-2.444690,-3.317628,-3.927896,-5.921004,-5.225064,7.063530,-8.649351,-2.662274,-5.702826,4.167507,-5.359708,8.035493,-3.709636,2.790637,-7.632034,8.051334,4.676763,3.511941,-0.657547,0.460052,-6.513603,-1.183738,-8.585127,0.562955,8.858194,-0.073911,9.856319,-8.996077,-5.284413,-3.530572,3.444621,-0.216368,6.604219,3.882557,5.096244,4.004014,9.732181,-3.618506,-2.986709,-4.877372,-9.878081,7.212735,-9.292938,0.013947,-6.233160,4.351881,3.148742,-0.576802,-9.018317,4.433456,-3.457652,5.662821,-1.596723,3.910042,3.118255,-5.385031,-8.386262,-4.746393,2.775460,-8.622538,6.663158,-0.485330,0.634024,-6.580497,-8.077847,5.790963,-5.115962,-6.249143,-6.433976,1.100457,-7.579756,-8.306018,7.925938,5.750681,-0.426749,-5.885138,-4.827228,3.325969,0.038302,4.191724,4.672778,-9.741709,2.477330,-8.683141,5.607723,7.495510,4.562904,-5.243515,-0.401453,-9.955641,7.022280,3.301216,0.174559,7.885265,-0.903370,-1.550522,5.157553,3.567653,8.252513,4.205185,7.561175,-8.907624,-2.105483,7.151233,5.715427,6.444786,5.307445,-0.275407,0.459410,0.050508,-4.369856,4.126753,9.322592,-1.298471,-8.855732,0.543341,-4.090070,6.322448,-5.822296,-4.678963,-4.733185,5.735394,-6.014925,-5.130353,3.652094,4.298775,4.826107,-8.626836,8.532312,4.442189,-1.074259,8.358215,8.268612,0.412750,6.636090,6.140328,5.792684,8.366364,-9.996818,-7.709694,-8.975272,6.582391,-9.576408,-9.463633,-6.885510,-3.043098,-6.929307,3.107562,-8.826303,3.538851,-3.737698,4.154997,6.456579,7.955557,-8.805387,-6.755749,0.851074,-8.742848,6.797498,6.192448,-6.701081,-3.799734,4.031057,-3.218600,-9.140541,-3.179245,-3.926964,-0.779209,-7.029275,5.618657,1.977225,6.870190,9.931728,1.583506,-5.698668,-0.502676,-3.755592,2.837928,2.441064,7.495398,-7.050291,-5.821480,6.246498,-7.348226,5.089506,-9.687277,0.483187,0.478255,4.420288,1.210709,-5.546765,-0.212453,-0.463272,-1.359954,-9.095759,7.466819,8.857399,7.956805,1.765652,6.395442,-7.501709,4.446460,9.038274,-2.168986,7.791874,9.574961,-7.000097,-9.499250,5.224460,-3.666487,-1.167412,-2.411361,8.165041,-6.929412,-2.211119,8.686553,3.807684,-9.702176,-9.168642,3.492103,1.806416,9.606638,0.142180,-2.751329,-6.740872,-0.599615,9.231574,7.682733,-1.731403,2.991832,0.887470,0.594398,3.934652,2.143850,4.042057,-6.071865,0.608684,-6.191578,6.957825,-3.128672,8.161769,6.132306,7.505903,0.436577,-1.898615,-0.264918,-5.515635,6.698216,-3.618858,7.027169,3.594946,-2.586712,2.332612,5.701383,0.953920,-9.073794,-2.054738,1.472643,-5.757715,-1.862359,8.083001,-4.971441,-1.157038,-0.537963,1.662467,-5.277553,3.788628,3.389928,6.472138,3.318683,-0.050317,3.793509,7.363694,1.044820,-4.768948,2.380916,-4.435724,0.659311,0.589019,0.742638,9.901004,5.119140,-8.272831,3.430425,-3.271892,3.899995,-2.498878,8.634021,0.544378,-6.620906,-6.630056,-4.795297,5.208820,-1.730433,2.905056], dtype = "float64")#candidate|8838|(900,)|const|float64
call_8836 = relay.TupleGetItem(func_3312_call(relay.reshape(const_8837.astype('float32'), [7, 130]), relay.reshape(const_8838.astype('float64'), [900,]), ), 3)
call_8839 = relay.TupleGetItem(func_3316_call(relay.reshape(const_8837.astype('float32'), [7, 130]), relay.reshape(const_8838.astype('float64'), [900,]), ), 3)
output = relay.Tuple([call_8792,const_8793,bop_8805,call_8812,call_8816,bop_8819,call_8836,const_8837,const_8838,])
output2 = relay.Tuple([call_8794,const_8793,bop_8805,call_8813,call_8817,bop_8819,call_8839,const_8837,const_8838,])
func_8841 = relay.Function([var_8818,], output)
mod['func_8841'] = func_8841
mod = relay.transform.InferType()(mod)
var_8842 = relay.var("var_8842", dtype = "float64", shape = (13, 16, 8))#candidate|8842|(13, 16, 8)|var|float64
output = func_8841(var_8842)
func_8843 = relay.Function([var_8842], output)
mutated_mod['func_8843'] = func_8843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5850_call = mod.get_global_var('func_5850')
func_5852_call = mutated_mod.get_global_var('func_5852')
call_8870 = relay.TupleGetItem(func_5850_call(), 1)
call_8871 = relay.TupleGetItem(func_5852_call(), 1)
output = call_8870
output2 = call_8871
func_8893 = relay.Function([], output)
mod['func_8893'] = func_8893
mod = relay.transform.InferType()(mod)
output = func_8893()
func_8894 = relay.Function([], output)
mutated_mod['func_8894'] = func_8894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5850_call = mod.get_global_var('func_5850')
func_5852_call = mutated_mod.get_global_var('func_5852')
call_8972 = relay.TupleGetItem(func_5850_call(), 0)
call_8973 = relay.TupleGetItem(func_5852_call(), 0)
func_8228_call = mod.get_global_var('func_8228')
func_8230_call = mutated_mod.get_global_var('func_8230')
var_8975 = relay.var("var_8975", dtype = "int32", shape = (315,))#candidate|8975|(315,)|var|int32
call_8974 = func_8228_call(relay.reshape(var_8975.astype('int32'), [7, 9, 5]))
call_8976 = func_8228_call(relay.reshape(var_8975.astype('int32'), [7, 9, 5]))
func_2701_call = mod.get_global_var('func_2701')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_9023 = func_2701_call(relay.reshape(call_8972.astype('float32'), [2, 3, 9]))
call_9024 = func_2701_call(relay.reshape(call_8972.astype('float32'), [2, 3, 9]))
bop_9034 = relay.divide(call_8974.astype('float32'), relay.reshape(var_8975.astype('float32'), relay.shape_of(call_8974))) # shape=(7, 9, 5)
bop_9037 = relay.divide(call_8976.astype('float32'), relay.reshape(var_8975.astype('float32'), relay.shape_of(call_8976))) # shape=(7, 9, 5)
output = relay.Tuple([call_8972,call_9023,bop_9034,])
output2 = relay.Tuple([call_8973,call_9024,bop_9037,])
func_9044 = relay.Function([var_8975,], output)
mod['func_9044'] = func_9044
mod = relay.transform.InferType()(mod)
mutated_mod['func_9044'] = func_9044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9045 = relay.var("var_9045", dtype = "int32", shape = (315,))#candidate|9045|(315,)|var|int32
func_9044_call = mutated_mod.get_global_var('func_9044')
call_9046 = func_9044_call(var_9045)
output = call_9046
func_9047 = relay.Function([var_9045], output)
mutated_mod['func_9047'] = func_9047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9097 = relay.var("var_9097", dtype = "float32", shape = (4, 3, 14))#candidate|9097|(4, 3, 14)|var|float32
uop_9098 = relay.asinh(var_9097.astype('float32')) # shape=(4, 3, 14)
var_9110 = relay.var("var_9110", dtype = "float32", shape = (4, 3, 14))#candidate|9110|(4, 3, 14)|var|float32
bop_9111 = relay.left_shift(var_9097.astype('int32'), relay.reshape(var_9110.astype('int32'), relay.shape_of(var_9097))) # shape=(4, 3, 14)
output = relay.Tuple([uop_9098,bop_9111,])
output2 = relay.Tuple([uop_9098,bop_9111,])
F = relay.Function([var_9097,var_9110,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9097,var_9110,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

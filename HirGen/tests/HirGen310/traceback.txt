==========mod==========
#[version = "0.0.5"]
def @func_2781(%var_2739: Tensor[(11, 11, 6), uint8], %var_2740: Tensor[(11, 11, 6), uint8]) -> (Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) {
  %0 = cast(%var_2740, dtype="uint8") /* ty=Tensor[(11, 11, 6), uint8] */;
  %1 = shape_of(%var_2739, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_2739, dtype="uint8") /* ty=Tensor[(11, 11, 6), uint8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %6 = reshape(%4, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %7 = reshape(%5, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %8 = left_shift(%2, %3) /* ty=Tensor[(11, 11, 6), uint8] */;
  %9 = @func_111(%6, %7) /* ty=Tensor[(15, 13, 7), int16] */;
  (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(1365), int16] */)
}

def @func_3938(%var_3930: Tensor[(1365), int16]) -> (Tensor[(15, 13, 7), int16], Tensor[(3, 300), float32], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) {
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 300), float32] */, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
  %11 = cast(%var_3930, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %12 = reshape(%10, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
  %13 = reshape(%11, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %14 = @func_629(%12, %13) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
  %15 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %18 = reshape(%17, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %19 = @func_3149(%18) /* ty=(Tensor[(2, 3, 9), bool],) */;
  %20 = %19.0;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %22 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%16, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %25 = %14.1;
  %26 = mod(%23, %24) /* ty=Tensor[(2, 3, 9), float64] */;
  (%25, meta[relay.Constant][1] /* ty=Tensor[(3, 300), float32] */, %var_3930, %26)
}

def @func_7368(%var_7340: Tensor[(910), float32], %var_7341: Tensor[(4, 588), uint16]) -> (Tensor[(2, 3, 9), bool], Tensor[(910), float32], Tensor[(4, 588), uint16], Tensor[(1365), bool]) {
  %27 = @func_6873() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) */;
  %28 = cast(%var_7340, dtype="float32") /* ty=Tensor[(910), float32] */;
  %29 = cast(%var_7341, dtype="uint16") /* ty=Tensor[(4, 588), uint16] */;
  %30 = reshape(%28, newshape=[910]) /* ty=Tensor[(910), float32] */;
  %31 = reshape(%29, newshape=[12, 196]) /* ty=Tensor[(12, 196), uint16] */;
  %32 = @func_6472(%30, %31) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(12, 196), uint16]) */;
  %33 = %32.4;
  %34 = cast(%33, dtype="uint16") /* ty=Tensor[(12, 196), uint16] */;
  %35 = shape_of(%var_7341, dtype="int32") /* ty=Tensor[(2), int32] */;
  %36 = cast(%var_7341, dtype="uint16") /* ty=Tensor[(4, 588), uint16] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %38 = @func_4180() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) */;
  %39 = %27.1;
  %40 = bitwise_or(%36, %37) /* ty=Tensor[(4, 588), uint16] */;
  %41 = %38.2;
  (%39, %var_7340, %40, %41)
}

def @func_7126() -> (Tensor[(2, 3, 9), bool],) {
  %42 = @func_6635() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %43 = %42.0;
  (%43,)
}

def @func_3149(%var_3140: Tensor[(2, 3, 9), float32]) -> (Tensor[(2, 3, 9), bool],) {
  %44 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %45 = %44.0;
  %46 = cast(%var_3140, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%45, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %50 = greater_equal(%48, %49) /* ty=Tensor[(2, 3, 9), bool] */;
  (%50,)
}

def @func_3195(%var_3166: Tensor[(2, 3, 9), bool]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) {
  %51 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %52 = %51.0;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %54 = cast(%var_3166, dtype="int8") /* ty=Tensor[(2, 3, 9), int8] */;
  %55 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%52, dtype="int8") /* ty=Tensor[(2, 3, 9), int8] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %58 = add(%56, %57) /* ty=Tensor[(2, 3, 9), int8] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %60 = tan(%53) /* ty=Tensor[(2, 3, 9), float32] */;
  %61 = asinh(%59) /* ty=Tensor[(2, 3, 9), float64] */;
  (%60, %61)
}

def @func_3231() -> (Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) {
  %62 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %63 = %62.0;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %65 = acosh(%64) /* ty=Tensor[(2, 3, 9), float64] */;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %67 = reshape(%66, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %68 = @func_3149(%67) /* ty=(Tensor[(2, 3, 9), bool],) */;
  %69 = %68.0;
  (%65, %69)
}

def @func_8338() -> (Tensor[(2, 3, 9), float32],) {
  %70 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %71 = %70.0;
  (%71,)
}

def @func_3327() -> (Tensor[(2, 3, 9), float32],) {
  %72 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  (%72,)
}

def @func_7018() -> Tensor[(2, 3, 9), bool] {
  @func_3789() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_3716() -> (Tensor[(2, 3, 9), bool],) {
  %73 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %74 = %73.0;
  (%74,)
}

def @func_6305() -> Tensor[(2, 3, 9), float32] {
  %75 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %75.0
}

def @func_3860(%var_3795: Tensor[(4, 9, 14), bool], %var_3796: Tensor[(4, 9, 14), bool], %var_3808: Tensor[(1365), int16], %var_3809: Tensor[(900), float32], %var_3829: Tensor[(726), uint8]) -> (Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) {
  %76 = cast(%var_3796, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %77 = shape_of(%var_3795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_3795, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %80 = cast(%var_3808, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %81 = cast(%var_3809, dtype="float32") /* ty=Tensor[(900), float32] */;
  %82 = reshape(%80, newshape=[7, 195]) /* ty=Tensor[(7, 195), int16] */;
  %83 = reshape(%81, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %84 = @func_975(%82, %83) /* ty=(Tensor[(15, 13, 7), int16], Tensor[(7, 195), int16], Tensor[(5, 9, 12), float32], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(8, 13, 7), float64], Tensor[(9, 10, 10), float32]) */;
  %85 = %84.8;
  %86 = cast(%85, dtype="float64") /* ty=Tensor[(9, 10, 10), float64] */;
  %87 = reshape(%86, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), float64] */;
  %88 = cast(%85, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %89 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %90 = cast(%var_3829, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %91 = cast(%var_3808, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %92 = reshape(%90, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %93 = reshape(%91, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %94 = @func_3025(%92, %93) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %95 = %94.2;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %97 = cast(%var_3808, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %98 = logical_or(%78, %79) /* ty=Tensor[(4, 9, 14), bool] */;
  %99 = @func_857(%87) /* ty=Tensor[(5, 12, 15), float64] */;
  %100 = rsqrt(%88) /* ty=Tensor[(9, 10, 10), float32] */;
  %101 = %89.0;
  %102 = acos(%96) /* ty=Tensor[(15, 13, 7), float32] */;
  %103 = acos(%97) /* ty=Tensor[(1365), float64] */;
  (%98, %var_3809, %99, %var_3829, %100, %101, %102, %103)
}

def @func_7466(%var_7443: Tensor[(14, 2, 13), int16]) -> (Tensor[(14, 2, 13), int16],) {
  %104 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 2, 13), int16] */, dtype="int16") /* ty=Tensor[(14, 2, 13), int16] */;
  %105 = shape_of(%var_7443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_7443, dtype="int16") /* ty=Tensor[(14, 2, 13), int16] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %108 = maximum(%106, %107) /* ty=Tensor[(14, 2, 13), int16] */;
  (%108,)
}

def @func_7199(%var_7163: Tensor[(10, 15, 7), int8]) -> (Tensor[(10, 15, 7), int8], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) {
  %109 = cast(%var_7163, dtype="int8") /* ty=Tensor[(10, 15, 7), int8] */;
  %110 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(10, 15, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 15, 7), int8] */, dtype="int8") /* ty=Tensor[(10, 15, 7), int8] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %113 = cast(meta[relay.Constant][4] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %114 = cast(meta[relay.Constant][5] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %115 = reshape(%113, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
  %116 = reshape(%114, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %117 = @func_3312(%115, %116) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
  %118 = bitwise_xor(%111, %112) /* ty=Tensor[(10, 15, 7), int8] */;
  %119 = %117.3;
  (%118, %119, meta[relay.Constant][4] /* ty=Tensor[(910), float32] */, meta[relay.Constant][5] /* ty=Tensor[(900), float64] */)
}

def @func_5721() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) {
  %120 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %121 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  %122 = %120.0;
  (%121, %122)
}

def @func_8674() -> Tensor[(2, 3, 9), float32] {
  @func_3652() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_4134(%var_4121: Tensor[(2, 3, 9), bool]) -> (Tensor[(2, 3, 9), uint32],) {
  %123 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %124 = %123.0;
  %125 = cast(%var_4121, dtype="uint32") /* ty=Tensor[(2, 3, 9), uint32] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="uint32") /* ty=Tensor[(2, 3, 9), uint32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %129 = maximum(%127, %128) /* ty=Tensor[(2, 3, 9), uint32] */;
  (%129,)
}

def @func_8046() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) {
  %130 = @func_7765() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %131 = @func_6759() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %132 = @func_5092() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */;
  %133 = %130.0;
  %134 = %131.0;
  %135 = %132.0;
  %136 = @func_7654() /* ty=Tensor[(2, 3, 9), float32] */;
  (%133, %134, %135, %136)
}

def @func_761(%var_721: Tensor[(8, 13, 7), float64]) -> (Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) {
  %137 = cast(%var_721, dtype="float64") /* ty=Tensor[(8, 13, 7), float64] */;
  %138 = cast(meta[relay.Constant][6] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %140 = reshape(%138, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
  %141 = reshape(%139, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %142 = @func_629(%140, %141) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
  %143 = cast(meta[relay.Constant][8] /* ty=Tensor[(108, 1), float64] */, dtype="float64") /* ty=Tensor[(108, 1), float64] */;
  %144 = %142.1;
  %145 = cast(%144, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
  %146 = reshape(%143, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %147 = reshape(%145, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %148 = @func_293(%146, %147) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %149 = atan(%137) /* ty=Tensor[(8, 13, 7), float64] */;
  %150 = %148.2;
  (%149, %144, meta[relay.Constant][6] /* ty=Tensor[(900), float32] */, meta[relay.Constant][7] /* ty=Tensor[(1365), int16] */, %150, meta[relay.Constant][8] /* ty=Tensor[(108, 1), float64] */)
}

def @func_8453() -> Tensor[(2, 3, 9), bool] {
  %151 = @func_8165() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %151.0
}

def @func_1663(%var_1642: Tensor[(8, 9, 6), float64]) -> Tensor[(8, 9, 6), uint64] {
  %152 = cast(%var_1642, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
  %153 = tan(%152) /* ty=Tensor[(8, 9, 6), float64] */;
  %154 = cast(%var_1642, dtype="uint64") /* ty=Tensor[(8, 9, 6), uint64] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%153, dtype="uint64") /* ty=Tensor[(8, 9, 6), uint64] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%156, %157) /* ty=Tensor[(8, 9, 6), uint64] */
}

def @func_6609() -> Tensor[(2, 3, 9), float32] {
  %158 = @func_5721() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %158.0
}

def @func_6635() -> (Tensor[(2, 3, 9), bool],) {
  %159 = @func_6345() /* ty=Tensor[(2, 3, 9), bool] */;
  (%159,)
}

def @func_2701(%var_2696: Tensor[(2, 3, 9), float32]) -> Tensor[(2, 3, 9), float32] {
  %160 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %161 = %160.0;
  %162 = cast(%var_2696, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%164, %165) /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_293(%var_251: Tensor[(4, 9, 3), float64], %var_291: Tensor[(1365), int16]) -> (Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) {
  %166 = cast(%var_251, dtype="float64") /* ty=Tensor[(4, 9, 3), float64] */;
  %167 = cosh(%166) /* ty=Tensor[(4, 9, 3), float64] */;
  %168 = cast(%167, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
  %169 = shape_of(%var_251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_251, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %172 = cast(%var_291, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %173 = cast(%var_291, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %174 = reshape(%172, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %175 = reshape(%173, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %176 = equal(%170, %171) /* ty=Tensor[(4, 9, 3), bool] */;
  %177 = @func_111(%174, %175) /* ty=Tensor[(15, 13, 7), int16] */;
  (%176, %177, %var_291)
}

def @func_5299() -> (Tensor[(2, 3, 9), bool],) {
  %178 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
  %179 = %178.1;
  %180 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 3, 9), bool] */, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %184 = greater(%182, %183) /* ty=Tensor[(2, 3, 9), bool] */;
  (%184,)
}

def @func_5138() -> Tensor[(2, 3, 9), bool] {
  %185 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %185.0
}

def @func_3312(%var_3303: Tensor[(7, 130), float32], %var_3310: Tensor[(900), float64]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) {
  %186 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %187 = cast(%var_3303, dtype="float32") /* ty=Tensor[(7, 130), float32] */;
  %188 = reshape(%187, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %189 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
  %190 = cast(%var_3310, dtype="float64") /* ty=Tensor[(900), float64] */;
  %191 = reshape(%190, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), float64] */;
  %192 = %186.0;
  %193 = @func_1157(%188) /* ty=Tensor[(7, 10, 13), int16] */;
  %194 = %189.0;
  %195 = @func_857(%191) /* ty=Tensor[(5, 12, 15), float64] */;
  (%192, %193, %var_3303, %194, %195, %var_3310)
}

def @func_5377(%var_5323: Tensor[(726), uint8], %var_5324: Tensor[(91, 15), int16]) -> (Tensor[(2, 3, 9), bool], Tensor[(91, 15), int16], Tensor[(2, 3, 9), bool], Tensor[(1365, 726), bool], Tensor[(1365, 1), float32]) {
  %196 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %197 = cast(%var_5323, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %198 = cast(%var_5324, dtype="int16") /* ty=Tensor[(91, 15), int16] */;
  %199 = reshape(%197, newshape=[1, 726]) /* ty=Tensor[(1, 726), uint8] */;
  %200 = reshape(%198, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), int16] */;
  %201 = @func_3503(%199, %200) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(1, 726), uint8], Tensor[(1365, 1), int16]) */;
  %202 = %201.3;
  %203 = cast(%202, dtype="bool") /* ty=Tensor[(1365, 1), bool] */;
  %204 = cast(%var_5323, dtype="bool") /* ty=Tensor[(726), bool] */;
  %205 = cast(%202, dtype="float32") /* ty=Tensor[(1365, 1), float32] */;
  %206 = %196.0;
  %207 = @func_3263() /* ty=Tensor[(2, 3, 9), bool] */;
  %208 = not_equal(%203, %204) /* ty=Tensor[(1365, 726), bool] */;
  %209 = sinh(%205) /* ty=Tensor[(1365, 1), float32] */;
  (%206, %var_5324, %207, %208, %209)
}

def @func_6295(%var_6252: Tensor[(726, 1), uint8]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726, 1365), bool], Tensor[(726, 1365), bool], Tensor[(2, 3, 9), float32]) {
  %210 = cast(%var_6252, dtype="uint8") /* ty=Tensor[(726, 1), uint8] */;
  %211 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %212 = reshape(%210, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %213 = reshape(%211, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %214 = @func_3025(%212, %213) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %215 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), int16] */, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %216 = cast(%var_6252, dtype="bool") /* ty=Tensor[(726, 1), bool] */;
  %217 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), int16] */, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %218 = cast(%var_6252, dtype="bool") /* ty=Tensor[(726, 1), bool] */;
  %219 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
  %220 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  %221 = %214.1;
  %222 = not_equal(%215, %216) /* ty=Tensor[(726, 1365), bool] */;
  %223 = logical_and(%217, %218) /* ty=Tensor[(726, 1365), bool] */;
  %224 = %219.0;
  (%220, %221, %222, %223, %224)
}

def @func_8228(%var_8224: Tensor[(7, 9, 5), int32]) -> Tensor[(7, 9, 5), int32] {
  %225 = cast(%var_8224, dtype="int32") /* ty=Tensor[(7, 9, 5), int32] */;
  %226 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(7, 9, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 9, 5), int32] */, dtype="int32") /* ty=Tensor[(7, 9, 5), int32] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_or(%227, %228) /* ty=Tensor[(7, 9, 5), int32] */
}

def @func_1157(%var_1130: Tensor[(7, 10, 13), float32]) -> Tensor[(7, 10, 13), int16] {
  %229 = cast(%var_1130, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %230 = acos(%229) /* ty=Tensor[(7, 10, 13), float32] */;
  %231 = cast(%var_1130, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%230, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%233, %234) /* ty=Tensor[(7, 10, 13), int16] */
}

def @func_5551(%var_5518: Tensor[(12, 11, 11), float32], %var_5527: Tensor[(504), bool]) -> (Tensor[(504), bool], Tensor[(512), uint8], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8], Tensor[(12, 11, 11), int16], Tensor[(1365), float64]) {
  %235 = cast(meta[relay.Constant][12] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %236 = cast(meta[relay.Constant][12] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %237 = cast(%var_5527, dtype="bool") /* ty=Tensor[(504), bool] */;
  %238 = cast(meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %239 = cast(meta[relay.Constant][14] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %240 = cast(meta[relay.Constant][15] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %241 = reshape(%235, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %242 = reshape(%236, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %243 = reshape(%237, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %244 = reshape(%238, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %245 = reshape(%239, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
  %246 = reshape(%240, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %247 = @func_4096(%241, %242, %243, %244, %245, %246) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
  %248 = cast(%var_5518, dtype="float32") /* ty=Tensor[(12, 11, 11), float32] */;
  %249 = acosh(%248) /* ty=Tensor[(12, 11, 11), float32] */;
  %250 = cast(%var_5518, dtype="int16") /* ty=Tensor[(12, 11, 11), int16] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="int16") /* ty=Tensor[(12, 11, 11), int16] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %254 = cast(meta[relay.Constant][12] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %255 = cast(meta[relay.Constant][12] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %256 = cast(%var_5527, dtype="bool") /* ty=Tensor[(504), bool] */;
  %257 = cast(meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %258 = cast(meta[relay.Constant][14] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %259 = cast(meta[relay.Constant][15] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %260 = reshape(%254, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %261 = reshape(%255, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %262 = reshape(%256, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %263 = reshape(%257, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %264 = reshape(%258, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
  %265 = reshape(%259, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %266 = @func_4096(%260, %261, %262, %263, %264, %265) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
  %267 = %247.2;
  %268 = logical_xor(%252, %253) /* ty=Tensor[(12, 11, 11), int16] */;
  %269 = %266.1;
  (%267, meta[relay.Constant][12] /* ty=Tensor[(512), uint8] */, %var_5527, meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */, meta[relay.Constant][14] /* ty=Tensor[(900), float32] */, meta[relay.Constant][15] /* ty=Tensor[(726), uint8] */, %268, %269)
}

def @func_8087() -> (Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(2, 3, 9), bool]) {
  %270 = cast(meta[relay.Constant][16] /* ty=Tensor[(1512), float32] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %271 = cast(meta[relay.Constant][16] /* ty=Tensor[(1512), float32] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %272 = reshape(%270, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %273 = reshape(%271, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %274 = @func_1991(%272, %273) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) */;
  %275 = @func_7742() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %276 = %275.0;
  %277 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %280 = shape_of(%276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%276, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %283 = %274.1;
  %284 = logical_or(%281, %282) /* ty=Tensor[(2, 3, 9), bool] */;
  (%283, meta[relay.Constant][16] /* ty=Tensor[(1512), float32] */, %284)
}

def @func_6759() -> (Tensor[(2, 3, 9), float32],) {
  %285 = @func_4304() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %286 = %285.0;
  (%286,)
}

def @func_7550() -> Tensor[(2, 3, 9), float32] {
  @func_6305() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_7742() -> (Tensor[(2, 3, 9), bool],) {
  %287 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %288 = %287.0;
  (%288,)
}

def @func_7917() -> (Tensor[(2, 3, 9), float32], Tensor[(1365), uint64]) {
  %289 = cast(meta[relay.Constant][17] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %290 = reshape(%289, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %291 = @func_3938(%290) /* ty=(Tensor[(15, 13, 7), int16], Tensor[(3, 300), float32], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */;
  %292 = %291.2;
  %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(1365), int16] */, dtype="uint8") /* ty=Tensor[(1365), uint8] */;
  %294 = shape_of(%292, dtype="int32") /* ty=Tensor[(1), int32] */;
  %295 = cast(%292, dtype="uint8") /* ty=Tensor[(1365), uint8] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %297 = minimum(%295, %296) /* ty=Tensor[(1365), uint8] */;
  %298 = cast(%297, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %299 = shape_of(%292, dtype="int32") /* ty=Tensor[(1), int32] */;
  %300 = cast(%292, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %302 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  %303 = bitwise_or(%300, %301) /* ty=Tensor[(1365), uint64] */;
  (%302, %303)
}

def @func_2971() -> (Tensor[(2, 3, 9), bool],) {
  %304 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %305 = %304.0;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %307 = rsqrt(%306) /* ty=Tensor[(2, 3, 9), float64] */;
  %308 = cast(%307, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %309 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%305, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %312 = not_equal(%310, %311) /* ty=Tensor[(2, 3, 9), bool] */;
  (%312,)
}

def @func_7950() -> (Tensor[(2, 3, 9), bool],) {
  %313 = @func_5092() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */;
  %314 = %313.0;
  (%314,)
}

def @func_975(%var_892: Tensor[(7, 195), int16], %var_942: Tensor[(900), float32]) -> (Tensor[(15, 13, 7), int16], Tensor[(7, 195), int16], Tensor[(5, 9, 12), float32], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(8, 13, 7), float64], Tensor[(9, 10, 10), float32]) {
  %315 = cast(%var_892, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
  %316 = cast(%var_892, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
  %317 = reshape(%315, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %318 = reshape(%316, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %319 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 12), float64] */;
  %320 = cos(%319) /* ty=Tensor[(5, 9, 12), float64] */;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(5, 9, 12), float32] */;
  %322 = cast(meta[relay.Constant][19] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %323 = reshape(%322, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %324 = @func_761(%323) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) */;
  %325 = cast(%var_942, dtype="float32") /* ty=Tensor[(900), float32] */;
  %326 = cast(%var_892, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
  %327 = reshape(%325, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
  %328 = reshape(%326, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %329 = @func_629(%327, %328) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
  %330 = cast(meta[relay.Constant][19] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %331 = reshape(%330, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %332 = @func_761(%331) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) */;
  %333 = cast(%var_942, dtype="float32") /* ty=Tensor[(900), float32] */;
  %334 = @func_111(%317, %318) /* ty=Tensor[(15, 13, 7), int16] */;
  %335 = cast(%334, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
  %336 = reshape(%333, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
  %337 = reshape(%335, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %338 = @func_629(%336, %337) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
  %339 = atanh(%321) /* ty=Tensor[(5, 9, 12), float32] */;
  %340 = %324.0;
  %341 = %329.1;
  %342 = %332.0;
  %343 = %338.0;
  (%334, %var_892, %339, %340, meta[relay.Constant][19] /* ty=Tensor[(728), float64] */, %341, %var_942, %342, %343)
}

def @func_1991(%var_1964: Tensor[(9, 14, 12), float32], %var_1965: Tensor[(9, 14, 12), float32]) -> (Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) {
  %344 = cast(%var_1965, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %345 = shape_of(%var_1964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%var_1964, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %348 = cast(meta[relay.Constant][20] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %349 = reshape(%348, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %350 = @func_1157(%349) /* ty=Tensor[(7, 10, 13), int16] */;
  %351 = cast(%350, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %352 = reshape(%351, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %353 = cast(meta[relay.Constant][21] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %354 = reshape(%353, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %355 = @func_761(%354) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) */;
  %356 = not_equal(%346, %347) /* ty=Tensor[(9, 14, 12), bool] */;
  %357 = @func_1157(%352) /* ty=Tensor[(7, 10, 13), int16] */;
  %358 = %355.5;
  (%356, %350, meta[relay.Constant][20] /* ty=Tensor[(910), float32] */, %357, %358, meta[relay.Constant][21] /* ty=Tensor[(728), float64] */)
}

def @func_111(%var_103: Tensor[(15, 13, 7), int16], %var_104: Tensor[(15, 13, 7), int16]) -> Tensor[(15, 13, 7), int16] {
  %359 = cast(%var_104, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
  %360 = shape_of(%var_103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_103, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%361, %362) /* ty=Tensor[(15, 13, 7), int16] */
}

def @func_629(%var_615: Tensor[(9, 10, 10), float32], %var_624: Tensor[(1365), int16]) -> (Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) {
  %363 = cast(%var_615, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %364 = cast(%var_624, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %365 = cast(%var_624, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %366 = reshape(%364, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %367 = reshape(%365, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %368 = cast(%var_624, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %369 = @func_111(%366, %367) /* ty=Tensor[(15, 13, 7), int16] */;
  %370 = cast(%369, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
  %371 = reshape(%368, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %372 = reshape(%370, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %373 = atan(%363) /* ty=Tensor[(9, 10, 10), float32] */;
  %374 = @func_111(%371, %372) /* ty=Tensor[(15, 13, 7), int16] */;
  (%373, %369, %var_624, %374)
}

def @func_4508(%var_4481: Tensor[(2352), float64], %var_4489: Tensor[(910), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(900), float32], Tensor[(2352), uint16], Tensor[(7, 130), float32], Tensor[(910), float32], Tensor[(5, 12, 15), float64]) {
  %375 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %376 = cast(meta[relay.Constant][22] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %377 = reshape(%376, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
  %378 = @func_1054(%377) /* ty=(Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) */;
  %379 = cast(%var_4481, dtype="uint16") /* ty=Tensor[(2352), uint16] */;
  %380 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2352), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %381 = cast(meta[relay.Constant][22] /* ty=Tensor[(2352), float64] */, dtype="uint16") /* ty=Tensor[(2352), uint16] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %383 = cast(%var_4489, dtype="float32") /* ty=Tensor[(910), float32] */;
  %384 = %378.2;
  %385 = cast(%384, dtype="float64") /* ty=Tensor[(900), float64] */;
  %386 = reshape(%383, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
  %387 = reshape(%385, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %388 = @func_3312(%386, %387) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
  %389 = %388.2;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(7, 130), float32] */;
  %391 = cast(%384, dtype="float64") /* ty=Tensor[(900), float64] */;
  %392 = reshape(%390, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
  %393 = reshape(%391, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %394 = @func_3312(%392, %393) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
  %395 = %375.0;
  %396 = multiply(%381, %382) /* ty=Tensor[(2352), uint16] */;
  %397 = %394.4;
  (%395, %384, %396, %389, %var_4489, %397)
}

def @func_5443() -> Tensor[(2, 3, 9), float32] {
  @func_2717() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_7333() -> (Tensor[(2, 3, 9), bool],) {
  %398 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %399 = %398.0;
  (%399,)
}

def @func_3025(%var_2996: Tensor[(363, 2), uint8], %var_3010: Tensor[(15, 13, 7), int16]) -> (Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) {
  %400 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %403 = cast(%var_2996, dtype="uint8") /* ty=Tensor[(363, 2), uint8] */;
  %404 = cast(%var_2996, dtype="uint8") /* ty=Tensor[(363, 2), uint8] */;
  %405 = reshape(%403, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %406 = reshape(%404, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %407 = @func_2781(%405, %406) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %408 = %407.1;
  %409 = cast(%var_3010, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %413 = cast(%401, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %414 = reshape(%413, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %415 = sinh(%402) /* ty=Tensor[(2, 3, 9), float32] */;
  %416 = floor_mod(%411, %412) /* ty=Tensor[(15, 13, 7), float32] */;
  %417 = @func_2701(%414) /* ty=Tensor[(2, 3, 9), float32] */;
  (%var_2996, %415, %416, %417)
}

def @func_7439() -> (Tensor[(11, 6, 14), float64], Tensor[(11, 6, 14), float32]) {
  %418 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %419 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 6, 14), float64] */, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
  %420 = asin(%418) /* ty=Tensor[(11, 6, 14), float64] */;
  %421 = log2(%419) /* ty=Tensor[(11, 6, 14), float32] */;
  (%420, %421)
}

def @func_3383(%var_3346: Tensor[(108, 4), uint64], %var_3351: Tensor[(1365), int16], %var_3361: Tensor[(108, 4), uint64], %var_3370: Tensor[(726), uint8], %var_3379: Tensor[(108, 4), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(1365), bool], Tensor[(108, 4), uint32], Tensor[(11, 11, 6), uint8], Tensor[(726), uint8], Tensor[(108, 4), uint64]) {
  %422 = cast(%var_3346, dtype="uint64") /* ty=Tensor[(108, 4), uint64] */;
  %423 = reshape(%422, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), uint64] */;
  %424 = @func_2918(%423) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) */;
  %425 = %424.5;
  %426 = cast(%var_3351, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(1), int32] */;
  %428 = cast(%425, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?), bool] */;
  %430 = cast(%var_3361, dtype="uint32") /* ty=Tensor[(108, 4), uint32] */;
  %431 = shape_of(%var_3346, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(%var_3346, dtype="uint32") /* ty=Tensor[(108, 4), uint32] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %434 = cast(%var_3370, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %435 = cast(%var_3370, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %436 = reshape(%434, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %437 = reshape(%435, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %438 = @func_2781(%436, %437) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %439 = cast(%var_3361, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
  %440 = log10(%439) /* ty=Tensor[(108, 4), float32] */;
  %441 = cast(%var_3379, dtype="uint64") /* ty=Tensor[(108, 4), uint64] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(2), int32] */;
  %443 = cast(%440, dtype="uint64") /* ty=Tensor[(108, 4), uint64] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %445 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  %446 = logical_or(%428, %429) /* ty=Tensor[(1365), bool] */;
  %447 = left_shift(%432, %433) /* ty=Tensor[(108, 4), uint32] */;
  %448 = %438.0;
  %449 = logical_xor(%443, %444) /* ty=Tensor[(108, 4), uint64] */;
  (%445, %446, %447, %448, %var_3370, %449)
}

def @func_5850() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  %450 = @func_4304() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %451 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %452 = %450.0;
  %453 = %451.0;
  (%452, %453)
}

def @func_7654() -> Tensor[(2, 3, 9), float32] {
  %454 = @func_5092() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  cos(%456) /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_5167(%var_5158: bool, %var_5159: Tensor[(9, 7, 11), bool]) -> (Tensor[(9, 7, 11), bool],) {
  %457 = cast(%var_5158, dtype="bool") /* ty=bool */;
  %458 = cast(%var_5159, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %459 = logical_and(%457, %458) /* ty=Tensor[(9, 7, 11), bool] */;
  (%459,)
}

def @func_5799(%var_5769: Tensor[(726), uint8]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), float32]) {
  %460 = cast(%var_5769, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %461 = cast(meta[relay.Constant][24] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %462 = reshape(%460, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %463 = reshape(%461, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %464 = @func_3025(%462, %463) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %465 = cast(meta[relay.Constant][24] /* ty=Tensor[(1365), int16] */, dtype="float32") /* ty=Tensor[(1365), float32] */;
  %466 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  %467 = %464.1;
  %468 = atan(%465) /* ty=Tensor[(1365), float32] */;
  (%466, %467, %var_5769, %468)
}

def @func_8751() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  %469 = @func_7950() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %470 = %469.0;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %472 = @func_8338() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %473 = erf(%471) /* ty=Tensor[(2, 3, 9), float32] */;
  %474 = %472.0;
  (%473, %474)
}

def @func_4096(%var_4056: Tensor[(16, 2, 16), uint8], %var_4062: Tensor[(16, 2, 16), uint8], %var_4074: Tensor[(504), bool], %var_4075: Tensor[(1365), int16], %var_4076: Tensor[(90, 10), float32], %var_4077: Tensor[(726), uint8]) -> (Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) {
  %475 = cast(%var_4062, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
  %476 = shape_of(%var_4056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_4056, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %479 = cast(%var_4074, dtype="bool") /* ty=Tensor[(504), bool] */;
  %480 = cast(%var_4074, dtype="bool") /* ty=Tensor[(504), bool] */;
  %481 = cast(%var_4075, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %482 = cast(%var_4076, dtype="float32") /* ty=Tensor[(90, 10), float32] */;
  %483 = cast(%var_4077, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %484 = reshape(%479, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %485 = reshape(%480, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %486 = reshape(%481, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %487 = reshape(%482, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %488 = reshape(%483, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %489 = @func_3860(%484, %485, %486, %487, %488) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) */;
  %490 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 2, 1), uint8] */, dtype="bool") /* ty=Tensor[(16, 2, 1), bool] */;
  %491 = cast(%var_4056, dtype="bool") /* ty=Tensor[(16, 2, 16), bool] */;
  %492 = equal(%490, %491) /* ty=Tensor[(16, 2, 16), bool] */;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
  %494 = bitwise_xor(%477, %478) /* ty=Tensor[(16, 2, 16), int32] */;
  %495 = %489.7;
  %496 = sqrt(%493) /* ty=Tensor[(16, 2, 16), float32] */;
  (%494, %495, %var_4074, %var_4075, %var_4076, %var_4077, %496)
}

def @func_4808(%var_4803: Tensor[(2, 252), bool], %var_4804: Tensor[(1365, 1), int16], %var_4806: Tensor[(11, 66), uint8]) -> (Tensor[(2, 3, 9), float64], Tensor[(7, 6, 1), float64], Tensor[(2, 252), bool], Tensor[(1365, 1), int16], Tensor[(900), float32], Tensor[(11, 66), uint8]) {
  %497 = @func_4614() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */;
  %498 = %497.0;
  %499 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 3, 9), float32] */, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %503 = cast(%var_4803, dtype="bool") /* ty=Tensor[(2, 252), bool] */;
  %504 = cast(%var_4804, dtype="int16") /* ty=Tensor[(1365, 1), int16] */;
  %505 = cast(meta[relay.Constant][27] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %506 = cast(%var_4806, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %507 = cast(%var_4806, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %508 = reshape(%503, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %509 = reshape(%504, newshape=[7, 195]) /* ty=Tensor[(7, 195), int16] */;
  %510 = reshape(%505, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %511 = reshape(%506, newshape=[11, 66]) /* ty=Tensor[(11, 66), uint8] */;
  %512 = reshape(%507, newshape=[11, 66]) /* ty=Tensor[(11, 66), uint8] */;
  %513 = @func_4398(%508, %509, %510, %511, %512) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(504), bool], Tensor[(7, 195), int16], Tensor[(900), float32], Tensor[(11, 66), int32], Tensor[(7, 6, 1), float64], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), int16]) */;
  %514 = divide(%501, %502) /* ty=Tensor[(2, 3, 9), float64] */;
  %515 = %513.5;
  (%514, %515, %var_4803, %var_4804, meta[relay.Constant][27] /* ty=Tensor[(900), float32] */, %var_4806)
}

def @func_3986(%var_3943: Tensor[(7, 11, 1), int64], %var_3944: Tensor[(7, 11, 7), int64], %var_3961: Tensor[(1365), int16], %var_3976: Tensor[(900), float32]) -> (Tensor[(7, 11, 7), bool], Tensor[(15, 13, 7), float32], Tensor[(726, 1), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), int16], Tensor[(900), float32]) {
  %516 = cast(%var_3943, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %517 = cast(%var_3944, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
  %518 = cast(meta[relay.Constant][28] /* ty=Tensor[(726, 1), uint8] */, dtype="uint8") /* ty=Tensor[(726, 1), uint8] */;
  %519 = cast(%var_3961, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %520 = reshape(%518, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %521 = reshape(%519, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %522 = @func_3025(%520, %521) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %523 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %524 = cast(%var_3976, dtype="float32") /* ty=Tensor[(900), float32] */;
  %525 = cast(%var_3961, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %526 = reshape(%524, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
  %527 = reshape(%525, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %528 = @func_629(%526, %527) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
  %529 = equal(%516, %517) /* ty=Tensor[(7, 11, 7), bool] */;
  %530 = %522.2;
  %531 = %523.0;
  %532 = %528.1;
  (%529, %530, meta[relay.Constant][28] /* ty=Tensor[(726, 1), uint8] */, %var_3961, %531, %532, %var_3976)
}

def @func_2815() -> (Tensor[(2, 3, 9), float32],) {
  %533 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  (%533,)
}

def @func_6212() -> Tensor[(2, 3, 9), float32] {
  %534 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %534.0
}

def @func_8322() -> Tensor[(2, 3, 9), bool] {
  %535 = @func_4652() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %535.0
}

def @func_7765() -> (Tensor[(2, 3, 9), float32],) {
  %536 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %537 = %536.0;
  (%537,)
}

def @func_1054(%var_1041: Tensor[(14, 14, 12), float64]) -> (Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) {
  %538 = cast(%var_1041, dtype="float64") /* ty=Tensor[(14, 14, 12), float64] */;
  %539 = cast(meta[relay.Constant][29] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %540 = cast(meta[relay.Constant][30] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %541 = reshape(%539, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
  %542 = reshape(%540, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %543 = @func_629(%541, %542) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
  %544 = atanh(%538) /* ty=Tensor[(14, 14, 12), float64] */;
  %545 = %543.1;
  (%544, %545, meta[relay.Constant][29] /* ty=Tensor[(900), float32] */, meta[relay.Constant][30] /* ty=Tensor[(1365), int16] */)
}

def @func_2717() -> Tensor[(2, 3, 9), float32] {
  %546 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %546.0
}

def @func_1911(%var_1900: int32, %var_1901: Tensor[(1, 4), int32]) -> (Tensor[(1, 4), int32],) {
  %547 = cast(%var_1900, dtype="int32") /* ty=int32 */;
  %548 = cast(%var_1901, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %549 = minimum(%547, %548) /* ty=Tensor[(1, 4), int32] */;
  (%549,)
}

def @func_6731(%var_6676: Tensor[(726), uint8], %var_6687: Tensor[(108), float64], %var_6719: Tensor[(224), float32]) -> (Tensor[(2, 3, 9), bool], Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(108), float64], Tensor[(1365), int16], Tensor[(726), float64], Tensor[(16, 7, 2), float32], Tensor[(224), float32]) {
  %550 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
  %551 = %550.0;
  %552 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 3, 9), float64] */, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %556 = cast(%var_6676, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %557 = cast(%var_6676, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %558 = reshape(%556, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %559 = reshape(%557, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %560 = @func_2781(%558, %559) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %561 = cast(%var_6687, dtype="float64") /* ty=Tensor[(108), float64] */;
  %562 = cast(meta[relay.Constant][32] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %563 = reshape(%561, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %564 = reshape(%562, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %565 = @func_293(%563, %564) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %566 = cast(%var_6676, dtype="float64") /* ty=Tensor[(726), float64] */;
  %567 = cast(%var_6719, dtype="float32") /* ty=Tensor[(224), float32] */;
  %568 = reshape(%567, newshape=[16, 7, 2]) /* ty=Tensor[(16, 7, 2), float32] */;
  %569 = @func_6404(%568) /* ty=(Tensor[(16, 7, 2), float32],) */;
  %570 = less(%554, %555) /* ty=Tensor[(2, 3, 9), bool] */;
  %571 = %560.0;
  %572 = %565.1;
  %573 = rsqrt(%566) /* ty=Tensor[(726), float64] */;
  %574 = %569.0;
  (%570, %571, %572, %var_6687, meta[relay.Constant][32] /* ty=Tensor[(1365), int16] */, %573, %574, %var_6719)
}

def @func_6943() -> (Tensor[(2, 3, 9), float32],) {
  %575 = @func_5721() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %576 = %575.0;
  (%576,)
}

def @func_857(%var_845: Tensor[(5, 12, 15), float64]) -> Tensor[(5, 12, 15), float64] {
  %577 = cast(%var_845, dtype="float64") /* ty=Tensor[(5, 12, 15), float64] */;
  tan(%577) /* ty=Tensor[(5, 12, 15), float64] */
}

def @func_8623() -> (Tensor[(2, 3, 9), float32], Tensor[(756, 2), float32], Tensor[(2, 3, 9), bool], Tensor[(7, 10, 13), int8]) {
  %578 = @func_5299() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %579 = %578.0;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %581 = @func_6873() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) */;
  %582 = cast(meta[relay.Constant][33] /* ty=Tensor[(756, 2), float32] */, dtype="float32") /* ty=Tensor[(756, 2), float32] */;
  %583 = cast(meta[relay.Constant][33] /* ty=Tensor[(756, 2), float32] */, dtype="float32") /* ty=Tensor[(756, 2), float32] */;
  %584 = reshape(%582, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %585 = reshape(%583, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %586 = @func_1991(%584, %585) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) */;
  %587 = %586.3;
  %588 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 10, 13), int16] */, dtype="int8") /* ty=Tensor[(7, 10, 13), int8] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="int8") /* ty=Tensor[(7, 10, 13), int8] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %592 = acos(%580) /* ty=Tensor[(2, 3, 9), float32] */;
  %593 = %581.1;
  %594 = multiply(%590, %591) /* ty=Tensor[(7, 10, 13), int8] */;
  (%592, meta[relay.Constant][33] /* ty=Tensor[(756, 2), float32] */, %593, %594)
}

def @func_4652() -> (Tensor[(2, 3, 9), bool],) {
  %595 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %596 = %595.0;
  (%596,)
}

def @func_3503(%var_3496: Tensor[(1, 726), uint8], %var_3497: Tensor[(1365, 1), int16]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(1, 726), uint8], Tensor[(1365, 1), int16]) {
  %597 = cast(%var_3496, dtype="uint8") /* ty=Tensor[(1, 726), uint8] */;
  %598 = cast(%var_3497, dtype="int16") /* ty=Tensor[(1365, 1), int16] */;
  %599 = reshape(%597, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %600 = reshape(%598, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %601 = @func_3025(%599, %600) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %602 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  %603 = %601.1;
  (%602, %603, %var_3496, %var_3497)
}

def @func_8249() -> (Tensor[(2, 3, 9), bool],) {
  %604 = @func_6635() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %605 = %604.0;
  (%605,)
}

def @func_6802() -> (Tensor[(2, 3, 9), float32],) {
  %606 = @func_6759() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %607 = %606.0;
  (%607,)
}

def @func_4398(%var_4354: Tensor[(504), bool], %var_4355: Tensor[(7, 195), int16], %var_4356: Tensor[(900), float32], %var_4357: Tensor[(11, 66), uint8], %var_4359: Tensor[(11, 66), uint8]) -> (Tensor[(4, 9, 14), bool], Tensor[(504), bool], Tensor[(7, 195), int16], Tensor[(900), float32], Tensor[(11, 66), int32], Tensor[(7, 6, 1), float64], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), int16]) {
  %608 = cast(%var_4354, dtype="bool") /* ty=Tensor[(504), bool] */;
  %609 = cast(%var_4354, dtype="bool") /* ty=Tensor[(504), bool] */;
  %610 = cast(%var_4355, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
  %611 = cast(%var_4356, dtype="float32") /* ty=Tensor[(900), float32] */;
  %612 = cast(%var_4357, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %613 = reshape(%608, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %614 = reshape(%609, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %615 = reshape(%610, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %616 = reshape(%611, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %617 = reshape(%612, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %618 = @func_3860(%613, %614, %615, %616, %617) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) */;
  %619 = cast(%var_4359, dtype="int32") /* ty=Tensor[(11, 66), int32] */;
  %620 = shape_of(%var_4357, dtype="int32") /* ty=Tensor[(2), int32] */;
  %621 = cast(%var_4357, dtype="int32") /* ty=Tensor[(11, 66), int32] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %623 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %624 = sinh(%623) /* ty=Tensor[(7, 6, 1), float64] */;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %626 = cast(%var_4359, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %627 = cast(%var_4357, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %628 = reshape(%626, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %629 = reshape(%627, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %630 = @func_2781(%628, %629) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %631 = %618.0;
  %632 = left_shift(%621, %622) /* ty=Tensor[(11, 66), int32] */;
  %633 = sqrt(%625) /* ty=Tensor[(7, 6, 1), float64] */;
  %634 = @func_3263() /* ty=Tensor[(2, 3, 9), bool] */;
  %635 = %630.1;
  (%631, %var_4354, %var_4355, %var_4356, %632, %633, %634, %635)
}

def @func_7794() -> (Tensor[(2, 3, 9), bool],) {
  %636 = @func_3789() /* ty=Tensor[(2, 3, 9), bool] */;
  (%636,)
}

def @func_2681() -> (Tensor[(2, 3, 9), float32],) {
  %637 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 3, 9), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %638 = log10(%637) /* ty=Tensor[(2, 3, 9), float32] */;
  (%638,)
}

def @func_4304() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) {
  %639 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %640 = %639.0;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %642 = reshape(%641, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %643 = @func_3149(%642) /* ty=(Tensor[(2, 3, 9), bool],) */;
  %644 = %643.0;
  (%640, %644)
}

def @func_4180() -> (Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) {
  %645 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %646 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 432), uint64] */, dtype="uint64") /* ty=Tensor[(1, 432), uint64] */;
  %647 = reshape(%646, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), uint64] */;
  %648 = @func_2918(%647) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) */;
  %649 = %648.3;
  %650 = cast(meta[relay.Constant][38] /* ty=Tensor[(1365), int16] */, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(1), int32] */;
  %652 = cast(%649, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?), bool] */;
  %654 = %645.0;
  %655 = logical_and(%652, %653) /* ty=Tensor[(1365), bool] */;
  (%654, meta[relay.Constant][37] /* ty=Tensor[(1, 432), uint64] */, %655)
}

def @main(%var_9097: Tensor[(4, 3, 14), float32], %var_9110: Tensor[(4, 3, 14), float32]) -> (Tensor[(4, 3, 14), float32], Tensor[(4, 3, 14), int32]) {
  %656 = cast(%var_9097, dtype="float32") /* ty=Tensor[(4, 3, 14), float32] */;
  %657 = cast(%var_9110, dtype="int32") /* ty=Tensor[(4, 3, 14), int32] */;
  %658 = shape_of(%var_9097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%var_9097, dtype="int32") /* ty=Tensor[(4, 3, 14), int32] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %661 = asinh(%656) /* ty=Tensor[(4, 3, 14), float32] */;
  %662 = left_shift(%659, %660) /* ty=Tensor[(4, 3, 14), int32] */;
  (%661, %662)
}

def @func_4024(%var_3999: Tensor[(14, 8, 12), uint8]) -> (Tensor[(14, 8, 12), bool],) {
  %663 = cast(%var_3999, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %664 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(14, 8, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 8, 12), uint8] */, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %667 = less(%665, %666) /* ty=Tensor[(14, 8, 12), bool] */;
  (%667,)
}

def @func_4614() -> (Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) {
  %668 = @func_4304() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %669 = cast(meta[relay.Constant][40] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %670 = cast(meta[relay.Constant][41] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %671 = reshape(%669, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %672 = reshape(%670, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %673 = @func_3025(%671, %672) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %674 = %673.3;
  %675 = cast(%674, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %676 = %668.0;
  %677 = log(%675) /* ty=Tensor[(2, 3, 9), float64] */;
  (%676, meta[relay.Constant][40] /* ty=Tensor[(726), uint8] */, meta[relay.Constant][41] /* ty=Tensor[(1365), int16] */, %677)
}

def @func_3108(%var_3077: Tensor[(910), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  %678 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %679 = %678.0;
  %680 = cast(%679, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %681 = log2(%680) /* ty=Tensor[(2, 3, 9), float64] */;
  %682 = cast(%679, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %686 = cast(%var_3077, dtype="float32") /* ty=Tensor[(910), float32] */;
  %687 = reshape(%686, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %688 = cast(%681, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %689 = reshape(%688, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %690 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %691 = minimum(%684, %685) /* ty=Tensor[(2, 3, 9), float32] */;
  %692 = @func_1157(%687) /* ty=Tensor[(7, 10, 13), int16] */;
  %693 = @func_2701(%689) /* ty=Tensor[(2, 3, 9), float32] */;
  %694 = %690.0;
  (%691, %692, %var_3077, %693, %694)
}

def @func_6404(%var_6372: Tensor[(16, 7, 2), float32]) -> (Tensor[(16, 7, 2), float32],) {
  %695 = cast(%var_6372, dtype="float32") /* ty=Tensor[(16, 7, 2), float32] */;
  %696 = rsqrt(%695) /* ty=Tensor[(16, 7, 2), float32] */;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(16, 7, 2), float64] */;
  %698 = cosh(%697) /* ty=Tensor[(16, 7, 2), float64] */;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(16, 7, 2), float32] */;
  %700 = exp(%699) /* ty=Tensor[(16, 7, 2), float32] */;
  (%700,)
}

def @func_4707() -> (Tensor[(2, 3, 9), float32],) {
  %701 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  (%701,)
}

def @func_6426() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) {
  %702 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %703 = %702.0;
  %704 = cast(%703, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %705 = reshape(%704, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), bool] */;
  %706 = @func_3195(%705) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) */;
  %707 = %706.1;
  (%703, %707)
}

def @func_6041(%var_5964: Tensor[(910), float32], %var_6020: Tensor[(2352), uint16]) -> (Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(2352), float64], Tensor[(2352), float32], Tensor[(7, 10, 13), int16], Tensor[(2352), int64]) {
  %708 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %709 = cast(meta[relay.Constant][42] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %710 = cast(meta[relay.Constant][42] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %711 = log2(%710) /* ty=Tensor[(2352), float64] */;
  %712 = cast(meta[relay.Constant][42] /* ty=Tensor[(2352), float64] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(1), int32] */;
  %714 = cast(%711, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?), float32] */;
  %716 = cast(%var_5964, dtype="float32") /* ty=Tensor[(910), float32] */;
  %717 = reshape(%716, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %718 = cast(meta[relay.Constant][42] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %719 = cast(%var_5964, dtype="float32") /* ty=Tensor[(910), float32] */;
  %720 = reshape(%718, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
  %721 = reshape(%719, newshape=[910]) /* ty=Tensor[(910), float32] */;
  %722 = @func_4508(%720, %721) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(900), float32], Tensor[(2352), uint16], Tensor[(7, 130), float32], Tensor[(910), float32], Tensor[(5, 12, 15), float64]) */;
  %723 = %722.2;
  %724 = cast(%var_6020, dtype="int64") /* ty=Tensor[(2352), int64] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(1), int32] */;
  %726 = cast(%723, dtype="int64") /* ty=Tensor[(2352), int64] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?), int64] */;
  %728 = %708.0;
  %729 = exp(%709) /* ty=Tensor[(2352), float64] */;
  %730 = mod(%714, %715) /* ty=Tensor[(2352), float32] */;
  %731 = @func_1157(%717) /* ty=Tensor[(7, 10, 13), int16] */;
  %732 = logical_xor(%726, %727) /* ty=Tensor[(2352), int64] */;
  (%728, %var_5964, %729, %730, %731, %732)
}

def @func_7537(%var_7496: Tensor[(1512), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(8, 9, 6), bool], Tensor[(2, 216), uint64], Tensor[(2, 3, 9), float32], Tensor[(726), uint8]) {
  %733 = @func_6609() /* ty=Tensor[(2, 3, 9), float32] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %735 = cast(%var_7496, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %736 = cast(%var_7496, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %737 = reshape(%735, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %738 = reshape(%736, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %739 = @func_1991(%737, %738) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) */;
  %740 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 216), uint64] */, dtype="uint64") /* ty=Tensor[(2, 216), uint64] */;
  %741 = reshape(%740, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), uint64] */;
  %742 = @func_2918(%741) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) */;
  %743 = cast(meta[relay.Constant][44] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %744 = reshape(%743, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %745 = @func_5799(%744) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), float32]) */;
  %746 = atanh(%734) /* ty=Tensor[(2, 3, 9), float32] */;
  %747 = %739.3;
  %748 = %742.6;
  %749 = %745.0;
  (%746, %747, %var_7496, %748, meta[relay.Constant][43] /* ty=Tensor[(2, 216), uint64] */, %749, meta[relay.Constant][44] /* ty=Tensor[(726), uint8] */)
}

def @func_3652() -> Tensor[(2, 3, 9), float32] {
  %750 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %750.0
}

def @func_8180() -> (Tensor[(11, 6, 14), float32], Tensor[(2, 3, 9), float64]) {
  %751 = @func_7439() /* ty=(Tensor[(11, 6, 14), float64], Tensor[(11, 6, 14), float32]) */;
  %752 = @func_6426() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) */;
  %753 = %751.1;
  %754 = %752.1;
  (%753, %754)
}

def @func_8421(%var_8414: Tensor[(1365), int16]) -> (Tensor[(8, 4, 10), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(539), int64], Tensor[(1365), int16]) {
  %755 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 4, 10), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
  %756 = cast(meta[relay.Constant][46] /* ty=Tensor[(77), int64] */, dtype="int64") /* ty=Tensor[(77), int64] */;
  %757 = cast(meta[relay.Constant][47] /* ty=Tensor[(539), int64] */, dtype="int64") /* ty=Tensor[(539), int64] */;
  %758 = cast(%var_8414, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %759 = cast(%var_8414, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %760 = reshape(%756, newshape=[77]) /* ty=Tensor[(77), int64] */;
  %761 = reshape(%757, newshape=[1, 539]) /* ty=Tensor[(1, 539), int64] */;
  %762 = reshape(%758, newshape=[455, 3]) /* ty=Tensor[(455, 3), int16] */;
  %763 = reshape(%759, newshape=[455, 3]) /* ty=Tensor[(455, 3), int16] */;
  %764 = @func_7823(%760, %761, %762, %763) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(1, 539), int64], Tensor[(900), float32], Tensor[(455, 3), int64]) */;
  %765 = acos(%755) /* ty=Tensor[(8, 4, 10), float32] */;
  %766 = %764.1;
  (%765, %766, meta[relay.Constant][46] /* ty=Tensor[(77), int64] */, meta[relay.Constant][47] /* ty=Tensor[(539), int64] */, %var_8414)
}

def @func_9044(%var_8975: Tensor[(315), int32]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(7, 9, 5), float32]) {
  %767 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
  %768 = %767.0;
  %769 = cast(%768, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %770 = reshape(%769, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %771 = cast(%var_8975, dtype="int32") /* ty=Tensor[(315), int32] */;
  %772 = reshape(%771, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), int32] */;
  %773 = @func_8228(%772) /* ty=Tensor[(7, 9, 5), int32] */;
  %774 = cast(%var_8975, dtype="float32") /* ty=Tensor[(315), float32] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="float32") /* ty=Tensor[(7, 9, 5), float32] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %778 = @func_2701(%770) /* ty=Tensor[(2, 3, 9), float32] */;
  %779 = divide(%776, %777) /* ty=Tensor[(7, 9, 5), float32] */;
  (%768, %778, %779)
}

def @func_5663(%var_5607: int32, %var_5624: Tensor[(2352), float64]) -> (Tensor[(2, 3, 9), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(900), float32], Tensor[(2352), float64], Tensor[(1, 432), uint64]) {
  %780 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %781 = cast(%var_5607, dtype="int32") /* ty=int32 */;
  %782 = cast(meta[relay.Constant][48] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %783 = reshape(%781, newshape=[]) /* ty=int32 */;
  %784 = reshape(%782, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %785 = @func_1911(%783, %784) /* ty=(Tensor[(1, 4), int32],) */;
  %786 = cast(%var_5624, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %787 = reshape(%786, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
  %788 = @func_1054(%787) /* ty=(Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) */;
  %789 = @func_4180() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) */;
  %790 = %780.0;
  %791 = %785.0;
  %792 = %788.2;
  %793 = %789.1;
  (%790, %791, %var_5607, meta[relay.Constant][48] /* ty=Tensor[(4), int32] */, %792, %var_5624, %793)
}

def @func_5092() -> (Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) {
  %794 = @func_3263() /* ty=Tensor[(2, 3, 9), bool] */;
  %795 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  (%794, %795)
}

def @func_3789() -> Tensor[(2, 3, 9), bool] {
  %796 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %796.0
}

def @func_8841(%var_8818: Tensor[(13, 16, 8), float64]) -> (Tensor[(14, 10, 5), float64], Tensor[(700), float64], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) {
  %797 = cast(meta[relay.Constant][49] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %798 = reshape(%797, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), float64] */;
  %799 = @func_3888(%798) /* ty=(Tensor[(14, 10, 5), float64],) */;
  %800 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 16, 8), float64] */;
  %801 = asin(%800) /* ty=Tensor[(13, 16, 8), float64] */;
  %802 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 16, 8), float64] */, dtype="float32") /* ty=Tensor[(13, 16, 8), float32] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="float32") /* ty=Tensor[(13, 16, 8), float32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %806 = power(%804, %805) /* ty=Tensor[(13, 16, 8), float32] */;
  %807 = cast(%806, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
  %808 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%801, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %811 = cast(%var_8818, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
  %812 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(13, 16, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 16, 8), float64] */, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %815 = cast(meta[relay.Constant][51] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %816 = cast(meta[relay.Constant][52] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %817 = reshape(%815, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
  %818 = reshape(%816, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %819 = @func_3312(%817, %818) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
  %820 = %799.0;
  %821 = less_equal(%809, %810) /* ty=Tensor[(13, 16, 8), bool] */;
  %822 = @func_6345() /* ty=Tensor[(2, 3, 9), bool] */;
  %823 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  %824 = not_equal(%813, %814) /* ty=Tensor[(13, 16, 8), bool] */;
  %825 = %819.3;
  (%820, meta[relay.Constant][49] /* ty=Tensor[(700), float64] */, %821, %822, %823, %824, %825, meta[relay.Constant][51] /* ty=Tensor[(910), float32] */, meta[relay.Constant][52] /* ty=Tensor[(900), float64] */)
}

def @func_6873() -> (Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) {
  %826 = @func_5929() /* ty=Tensor[(2, 3, 9), bool] */;
  %827 = @func_5929() /* ty=Tensor[(2, 3, 9), bool] */;
  (%826, %827)
}

def @func_6188(%var_6163: Tensor[(2, 7, 15), float32], %var_6182: Tensor[(1365), int16]) -> (Tensor[(2, 3, 9), bool], Tensor[(2, 7, 15), int16], Tensor[(16, 2, 16), int32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8]) {
  %828 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %829 = cast(%var_6163, dtype="float32") /* ty=Tensor[(2, 7, 15), float32] */;
  %830 = atanh(%829) /* ty=Tensor[(2, 7, 15), float32] */;
  %831 = cast(%var_6163, dtype="int16") /* ty=Tensor[(2, 7, 15), int16] */;
  %832 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%830, dtype="int16") /* ty=Tensor[(2, 7, 15), int16] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %835 = cast(meta[relay.Constant][53] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %836 = cast(meta[relay.Constant][53] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %837 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 84), bool] */, dtype="bool") /* ty=Tensor[(6, 84), bool] */;
  %838 = cast(%var_6182, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %839 = cast(meta[relay.Constant][55] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %840 = cast(meta[relay.Constant][56] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %841 = reshape(%835, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %842 = reshape(%836, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %843 = reshape(%837, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %844 = reshape(%838, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %845 = reshape(%839, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
  %846 = reshape(%840, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %847 = @func_4096(%841, %842, %843, %844, %845, %846) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
  %848 = %828.0;
  %849 = subtract(%833, %834) /* ty=Tensor[(2, 7, 15), int16] */;
  %850 = %847.0;
  (%848, %849, %850, meta[relay.Constant][53] /* ty=Tensor[(512), uint8] */, meta[relay.Constant][54] /* ty=Tensor[(6, 84), bool] */, %var_6182, meta[relay.Constant][55] /* ty=Tensor[(900), float32] */, meta[relay.Constant][56] /* ty=Tensor[(726), uint8] */)
}

def @func_6794() -> (Tensor[(2, 3, 9), bool],) {
  %851 = @func_5299() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %852 = %851.0;
  (%852,)
}

def @func_7823(%var_7813: Tensor[(77), int64], %var_7814: Tensor[(1, 539), int64], %var_7815: Tensor[(455, 3), int16], %var_7818: Tensor[(455, 3), int16]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(1, 539), int64], Tensor[(900), float32], Tensor[(455, 3), int64]) {
  %853 = cast(%var_7813, dtype="int64") /* ty=Tensor[(77), int64] */;
  %854 = cast(%var_7814, dtype="int64") /* ty=Tensor[(1, 539), int64] */;
  %855 = cast(%var_7815, dtype="int16") /* ty=Tensor[(455, 3), int16] */;
  %856 = cast(meta[relay.Constant][57] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %857 = reshape(%853, newshape=[7, 11, 1]) /* ty=Tensor[(7, 11, 1), int64] */;
  %858 = reshape(%854, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), int64] */;
  %859 = reshape(%855, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %860 = reshape(%856, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %861 = @func_3986(%857, %858, %859, %860) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(15, 13, 7), float32], Tensor[(726, 1), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), int16], Tensor[(900), float32]) */;
  %862 = cast(%var_7818, dtype="int64") /* ty=Tensor[(455, 3), int64] */;
  %863 = shape_of(%var_7815, dtype="int32") /* ty=Tensor[(2), int32] */;
  %864 = cast(%var_7815, dtype="int64") /* ty=Tensor[(455, 3), int64] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %866 = @func_7550() /* ty=Tensor[(2, 3, 9), float32] */;
  %867 = %861.0;
  %868 = maximum(%864, %865) /* ty=Tensor[(455, 3), int64] */;
  (%866, %867, %var_7813, %var_7814, meta[relay.Constant][57] /* ty=Tensor[(900), float32] */, %868)
}

def @func_5010(%var_4984: Tensor[(6, 84), bool], %var_4986: Tensor[(9, 100), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(90, 10), float32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(9, 100), float32], Tensor[(726), bool]) {
  %869 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %870 = cast(meta[relay.Constant][58] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %871 = cast(meta[relay.Constant][58] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %872 = cast(%var_4984, dtype="bool") /* ty=Tensor[(6, 84), bool] */;
  %873 = cast(meta[relay.Constant][59] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %874 = cast(%var_4986, dtype="float32") /* ty=Tensor[(9, 100), float32] */;
  %875 = cast(meta[relay.Constant][60] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %876 = reshape(%870, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %877 = reshape(%871, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %878 = reshape(%872, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %879 = reshape(%873, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %880 = reshape(%874, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
  %881 = reshape(%875, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %882 = @func_4096(%876, %877, %878, %879, %880, %881) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
  %883 = cast(meta[relay.Constant][60] /* ty=Tensor[(726), uint8] */, dtype="float64") /* ty=Tensor[(726), float64] */;
  %884 = log(%883) /* ty=Tensor[(726), float64] */;
  %885 = cast(meta[relay.Constant][60] /* ty=Tensor[(726), uint8] */, dtype="bool") /* ty=Tensor[(726), bool] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(1), int32] */;
  %887 = cast(%884, dtype="bool") /* ty=Tensor[(726), bool] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?), bool] */;
  %889 = %869.0;
  %890 = %882.4;
  %891 = not_equal(%887, %888) /* ty=Tensor[(726), bool] */;
  (%889, %890, meta[relay.Constant][58] /* ty=Tensor[(512), uint8] */, %var_4984, meta[relay.Constant][59] /* ty=Tensor[(1365), int16] */, %var_4986, %891)
}

def @func_5929() -> Tensor[(2, 3, 9), bool] {
  @func_3263() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_3888(%var_3884: Tensor[(14, 10, 5), float64]) -> (Tensor[(14, 10, 5), float64],) {
  %892 = cast(%var_3884, dtype="float64") /* ty=Tensor[(14, 10, 5), float64] */;
  %893 = acosh(%892) /* ty=Tensor[(14, 10, 5), float64] */;
  (%893,)
}

def @func_6345() -> Tensor[(2, 3, 9), bool] {
  %894 = @func_4652() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %894.0
}

def @func_7249(%var_7238: Tensor[(9, 10, 4), uint16]) -> Tensor[(9, 10, 4), bool] {
  %895 = cast(%var_7238, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
  %896 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(9, 10, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(meta[relay.Constant][61] /* ty=Tensor[(9, 10, 4), uint16] */, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%897, %898) /* ty=Tensor[(9, 10, 4), bool] */
}

def @func_3775() -> (Tensor[(2, 3, 9), bool],) {
  %899 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %900 = %899.0;
  (%900,)
}

def @func_6082() -> (Tensor[(2, 3, 9), float32],) {
  %901 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
  %902 = %901.1;
  (%902,)
}

def @func_5242() -> (Tensor[(726), uint8],) {
  %903 = @func_4614() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */;
  %904 = %903.1;
  (%904,)
}

def @func_2918(%var_2890: Tensor[(8, 9, 6), uint64]) -> (Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) {
  %905 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %906 = %905.0;
  %907 = cast(%906, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %908 = reshape(%907, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %909 = cast(meta[relay.Constant][63] /* ty=Tensor[(54, 2), float64] */, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
  %910 = cast(meta[relay.Constant][64] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %911 = reshape(%909, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %912 = reshape(%910, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %913 = @func_293(%911, %912) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %914 = cast(meta[relay.Constant][62] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %915 = reshape(%914, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), float64] */;
  %916 = @func_1663(%915) /* ty=Tensor[(8, 9, 6), uint64] */;
  %917 = cast(%var_2890, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %918 = shape_of(%916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%916, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %921 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %922 = @func_2701(%908) /* ty=Tensor[(2, 3, 9), float32] */;
  %923 = %913.2;
  %924 = equal(%919, %920) /* ty=Tensor[(8, 9, 6), bool] */;
  %925 = %921.0;
  (%906, meta[relay.Constant][62] /* ty=Tensor[(432), float64] */, %922, %923, meta[relay.Constant][63] /* ty=Tensor[(54, 2), float64] */, meta[relay.Constant][64] /* ty=Tensor[(1365), int16] */, %924, %925)
}

def @func_8893() -> Tensor[(2, 3, 9), float32] {
  %926 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
  %926.1
}

def @func_4244(%var_4237: Tensor[(432), uint64], %var_4238: Tensor[(1365), int16], %var_4239: Tensor[(363, 2), uint8]) -> (Tensor[(2, 3, 9), int32], Tensor[(11, 11, 6), uint8], Tensor[(432), uint64], Tensor[(1365), int16], Tensor[(363, 2), uint8]) {
  %927 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
  %928 = %927.0;
  %929 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %930 = %929.0;
  %931 = cast(%930, dtype="int32") /* ty=Tensor[(2, 3, 9), int32] */;
  %932 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%928, dtype="int32") /* ty=Tensor[(2, 3, 9), int32] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %935 = cast(%var_4237, dtype="uint64") /* ty=Tensor[(432), uint64] */;
  %936 = cast(%var_4238, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %937 = cast(%var_4237, dtype="uint64") /* ty=Tensor[(432), uint64] */;
  %938 = cast(%var_4239, dtype="uint8") /* ty=Tensor[(363, 2), uint8] */;
  %939 = cast(%var_4237, dtype="float32") /* ty=Tensor[(432), float32] */;
  %940 = reshape(%935, newshape=[108, 4]) /* ty=Tensor[(108, 4), uint64] */;
  %941 = reshape(%936, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %942 = reshape(%937, newshape=[108, 4]) /* ty=Tensor[(108, 4), uint64] */;
  %943 = reshape(%938, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %944 = reshape(%939, newshape=[108, 4]) /* ty=Tensor[(108, 4), float32] */;
  %945 = @func_3383(%940, %941, %942, %943, %944) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1365), bool], Tensor[(108, 4), uint32], Tensor[(11, 11, 6), uint8], Tensor[(726), uint8], Tensor[(108, 4), uint64]) */;
  %946 = bitwise_or(%933, %934) /* ty=Tensor[(2, 3, 9), int32] */;
  %947 = %945.3;
  (%946, %947, %var_4237, %var_4238, %var_4239)
}

def @func_3263() -> Tensor[(2, 3, 9), bool] {
  %948 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %948.0
}

def @func_8165() -> (Tensor[(2, 3, 9), bool],) {
  %949 = @func_7333() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %950 = %949.0;
  (%950,)
}

def @func_6472(%var_6467: Tensor[(910), float32], %var_6468: Tensor[(12, 196), uint16]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(12, 196), uint16]) {
  %951 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %952 = cast(%var_6467, dtype="float32") /* ty=Tensor[(910), float32] */;
  %953 = cast(%var_6468, dtype="uint16") /* ty=Tensor[(12, 196), uint16] */;
  %954 = reshape(%952, newshape=[910]) /* ty=Tensor[(910), float32] */;
  %955 = reshape(%953, newshape=[2352]) /* ty=Tensor[(2352), uint16] */;
  %956 = @func_6041(%954, %955) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(2352), float64], Tensor[(2352), float32], Tensor[(7, 10, 13), int16], Tensor[(2352), int64]) */;
  %957 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  %958 = %951.0;
  %959 = %956.0;
  (%957, %958, %959, %var_6467, %var_6468)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5093() -> (Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) {
  %2 = fn () -> (Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) {
    %0 = @func_3263() /* ty=Tensor[(2, 3, 9), bool] */;
    %1 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
    (%0, %1)
  };
  %2() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */
}

def @func_5663(%var_5607: int32, %var_5624: Tensor[(2352), float64]) -> (Tensor[(2, 3, 9), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(900), float32], Tensor[(2352), float64], Tensor[(1, 432), uint64]) {
  %3 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %4 = cast(%var_5607, dtype="int32") /* ty=int32 */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(4), int32] */, dtype="int32") /* ty=Tensor[(4), int32] */;
  %6 = reshape(%4, newshape=[]) /* ty=int32 */;
  %7 = reshape(%5, newshape=[1, 4]) /* ty=Tensor[(1, 4), int32] */;
  %8 = @func_1911(%6, %7) /* ty=(Tensor[(1, 4), int32],) */;
  %9 = cast(%var_5624, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %10 = reshape(%9, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
  %11 = @func_1054(%10) /* ty=(Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) */;
  %12 = @func_4180() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) */;
  %13 = %3.0;
  %14 = %8.0;
  %15 = %11.2;
  %16 = %12.1;
  (%13, %14, %var_5607, meta[relay.Constant][0] /* ty=Tensor[(4), int32] */, %15, %var_5624, %16)
}

def @func_7917() -> (Tensor[(2, 3, 9), float32], Tensor[(1365), uint64]) {
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %18 = reshape(%17, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %19 = @func_3938(%18) /* ty=(Tensor[(15, 13, 7), int16], Tensor[(3, 300), float32], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */;
  %20 = %19.2;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(1365), int16] */, dtype="uint8") /* ty=Tensor[(1365), uint8] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(1), int32] */;
  %23 = cast(%20, dtype="uint8") /* ty=Tensor[(1365), uint8] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %25 = minimum(%23, %24) /* ty=Tensor[(1365), uint8] */;
  %26 = cast(%25, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %27 = shape_of(%20, dtype="int32") /* ty=Tensor[(1), int32] */;
  %28 = cast(%20, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %30 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  %31 = bitwise_or(%28, %29) /* ty=Tensor[(1365), uint64] */;
  (%30, %31)
}

def @func_1915(%var_1913: int32, %var_1914: Tensor[(1, 4), int32]) -> (Tensor[(1, 4), int32],) {
  @func_1911(%var_1913, %var_1914) /* ty=(Tensor[(1, 4), int32],) */
}

def @func_2784(%var_2782: Tensor[(11, 11, 6), uint8], %var_2783: Tensor[(11, 11, 6), uint8]) -> (Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) {
  %42 = fn (%var_2739: Tensor[(11, 11, 6), uint8], %var_2740: Tensor[(11, 11, 6), uint8]) -> (Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) {
    %32 = cast(%var_2740, dtype="uint8") /* ty=Tensor[(11, 11, 6), uint8] */;
    %33 = shape_of(%var_2739, dtype="int32") /* ty=Tensor[(3), int32] */;
    %34 = cast(%var_2739, dtype="uint8") /* ty=Tensor[(11, 11, 6), uint8] */;
    %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %38 = reshape(%36, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %39 = reshape(%37, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %40 = left_shift(%34, %35) /* ty=Tensor[(11, 11, 6), uint8] */;
    %41 = @func_111(%38, %39) /* ty=Tensor[(15, 13, 7), int16] */;
    (%40, %41, meta[relay.Constant][2] /* ty=Tensor[(1365), int16] */)
  };
  %42(%var_2782, %var_2783) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */
}

def @func_6295(%var_6252: Tensor[(726, 1), uint8]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726, 1365), bool], Tensor[(726, 1365), bool], Tensor[(2, 3, 9), float32]) {
  %43 = cast(%var_6252, dtype="uint8") /* ty=Tensor[(726, 1), uint8] */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %45 = reshape(%43, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %46 = reshape(%44, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %47 = @func_3025(%45, %46) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %48 = cast(meta[relay.Constant][3] /* ty=Tensor[(1365), int16] */, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %49 = cast(%var_6252, dtype="bool") /* ty=Tensor[(726, 1), bool] */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(1365), int16] */, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %51 = cast(%var_6252, dtype="bool") /* ty=Tensor[(726, 1), bool] */;
  %52 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
  %53 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
  %54 = %47.1;
  %55 = not_equal(%48, %49) /* ty=Tensor[(726, 1365), bool] */;
  %56 = logical_and(%50, %51) /* ty=Tensor[(726, 1365), bool] */;
  %57 = %52.0;
  (%53, %54, %55, %56, %57)
}

def @func_3025(%var_2996: Tensor[(363, 2), uint8], %var_3010: Tensor[(15, 13, 7), int16]) -> (Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) {
  %58 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %59 = %58.0;
  %60 = cast(%59, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %61 = cast(%var_2996, dtype="uint8") /* ty=Tensor[(363, 2), uint8] */;
  %62 = cast(%var_2996, dtype="uint8") /* ty=Tensor[(363, 2), uint8] */;
  %63 = reshape(%61, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %64 = reshape(%62, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %65 = @func_2781(%63, %64) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %66 = %65.1;
  %67 = cast(%var_3010, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %71 = cast(%59, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %72 = reshape(%71, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %73 = sinh(%60) /* ty=Tensor[(2, 3, 9), float32] */;
  %74 = floor_mod(%69, %70) /* ty=Tensor[(15, 13, 7), float32] */;
  %75 = @func_2701(%72) /* ty=Tensor[(2, 3, 9), float32] */;
  (%var_2996, %73, %74, %75)
}

def @func_5929() -> Tensor[(2, 3, 9), bool] {
  @func_3263() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_7550() -> Tensor[(2, 3, 9), float32] {
  @func_6305() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_297(%var_295: Tensor[(4, 9, 3), float64], %var_296: Tensor[(1365), int16]) -> (Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) {
  @func_293(%var_295, %var_296) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */
}

def @func_2921(%var_2919: Tensor[(8, 9, 6), uint64]) -> (Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) {
  @func_2918(%var_2919) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) */
}

def @func_8230(%var_8229: Tensor[(7, 9, 5), int32]) -> Tensor[(7, 9, 5), int32] {
  %80 = fn (%var_8224: Tensor[(7, 9, 5), int32]) -> Tensor[(7, 9, 5), int32] {
    %76 = cast(%var_8224, dtype="int32") /* ty=Tensor[(7, 9, 5), int32] */;
    %77 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(7, 9, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 9, 5), int32] */, dtype="int32") /* ty=Tensor[(7, 9, 5), int32] */;
    %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_or(%78, %79) /* ty=Tensor[(7, 9, 5), int32] */
  };
  %80(%var_8229) /* ty=Tensor[(7, 9, 5), int32] */
}

def @func_4398(%var_4354: Tensor[(504), bool], %var_4355: Tensor[(7, 195), int16], %var_4356: Tensor[(900), float32], %var_4357: Tensor[(11, 66), uint8], %var_4359: Tensor[(11, 66), uint8]) -> (Tensor[(4, 9, 14), bool], Tensor[(504), bool], Tensor[(7, 195), int16], Tensor[(900), float32], Tensor[(11, 66), int32], Tensor[(7, 6, 1), float64], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), int16]) {
  %81 = cast(%var_4354, dtype="bool") /* ty=Tensor[(504), bool] */;
  %82 = cast(%var_4354, dtype="bool") /* ty=Tensor[(504), bool] */;
  %83 = cast(%var_4355, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
  %84 = cast(%var_4356, dtype="float32") /* ty=Tensor[(900), float32] */;
  %85 = cast(%var_4357, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %86 = reshape(%81, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %87 = reshape(%82, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %88 = reshape(%83, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %89 = reshape(%84, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %90 = reshape(%85, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %91 = @func_3860(%86, %87, %88, %89, %90) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) */;
  %92 = cast(%var_4359, dtype="int32") /* ty=Tensor[(11, 66), int32] */;
  %93 = shape_of(%var_4357, dtype="int32") /* ty=Tensor[(2), int32] */;
  %94 = cast(%var_4357, dtype="int32") /* ty=Tensor[(11, 66), int32] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %97 = sinh(%96) /* ty=Tensor[(7, 6, 1), float64] */;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %99 = cast(%var_4359, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %100 = cast(%var_4357, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %101 = reshape(%99, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %102 = reshape(%100, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %103 = @func_2781(%101, %102) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %104 = %91.0;
  %105 = left_shift(%94, %95) /* ty=Tensor[(11, 66), int32] */;
  %106 = sqrt(%98) /* ty=Tensor[(7, 6, 1), float64] */;
  %107 = @func_3263() /* ty=Tensor[(2, 3, 9), bool] */;
  %108 = %103.1;
  (%104, %var_4354, %var_4355, %var_4356, %105, %106, %107, %108)
}

def @func_3232() -> (Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) {
  %117 = fn () -> (Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) {
    %109 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %110 = %109.0;
    %111 = cast(%110, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
    %112 = acosh(%111) /* ty=Tensor[(2, 3, 9), float64] */;
    %113 = cast(%112, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
    %114 = reshape(%113, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
    %115 = @func_3149(%114) /* ty=(Tensor[(2, 3, 9), bool],) */;
    %116 = %115.0;
    (%112, %116)
  };
  %117() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */
}

def @func_1666(%var_1664: Tensor[(8, 9, 6), float64]) -> Tensor[(8, 9, 6), uint64] {
  @func_1663(%var_1664) /* ty=Tensor[(8, 9, 6), uint64] */
}

def @func_3312(%var_3303: Tensor[(7, 130), float32], %var_3310: Tensor[(900), float64]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) {
  %118 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %119 = cast(%var_3303, dtype="float32") /* ty=Tensor[(7, 130), float32] */;
  %120 = reshape(%119, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %121 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
  %122 = cast(%var_3310, dtype="float64") /* ty=Tensor[(900), float64] */;
  %123 = reshape(%122, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), float64] */;
  %124 = %118.0;
  %125 = @func_1157(%120) /* ty=Tensor[(7, 10, 13), int16] */;
  %126 = %121.0;
  %127 = @func_857(%123) /* ty=Tensor[(5, 12, 15), float64] */;
  (%124, %125, %var_3303, %126, %127, %var_3310)
}

def @func_4708() -> (Tensor[(2, 3, 9), float32],) {
  %129 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %128 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
    (%128,)
  };
  %129() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_5167(%var_5158: bool, %var_5159: Tensor[(9, 7, 11), bool]) -> (Tensor[(9, 7, 11), bool],) {
  %130 = cast(%var_5158, dtype="bool") /* ty=bool */;
  %131 = cast(%var_5159, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %132 = logical_and(%130, %131) /* ty=Tensor[(9, 7, 11), bool] */;
  (%132,)
}

def @func_632(%var_630: Tensor[(9, 10, 10), float32], %var_631: Tensor[(1365), int16]) -> (Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) {
  %145 = fn (%var_615: Tensor[(9, 10, 10), float32], %var_624: Tensor[(1365), int16]) -> (Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) {
    %133 = cast(%var_615, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
    %134 = cast(%var_624, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %135 = cast(%var_624, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %136 = reshape(%134, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %137 = reshape(%135, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %138 = cast(%var_624, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %139 = @func_111(%136, %137) /* ty=Tensor[(15, 13, 7), int16] */;
    %140 = cast(%139, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
    %141 = reshape(%138, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %142 = reshape(%140, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %143 = atan(%133) /* ty=Tensor[(9, 10, 10), float32] */;
    %144 = @func_111(%141, %142) /* ty=Tensor[(15, 13, 7), int16] */;
    (%143, %139, %var_624, %144)
  };
  %145(%var_630, %var_631) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */
}

def @func_1911(%var_1900: int32, %var_1901: Tensor[(1, 4), int32]) -> (Tensor[(1, 4), int32],) {
  %146 = cast(%var_1900, dtype="int32") /* ty=int32 */;
  %147 = cast(%var_1901, dtype="int32") /* ty=Tensor[(1, 4), int32] */;
  %148 = minimum(%146, %147) /* ty=Tensor[(1, 4), int32] */;
  (%148,)
}

def @func_5667(%var_5665: int32, %var_5666: Tensor[(2352), float64]) -> (Tensor[(2, 3, 9), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(900), float32], Tensor[(2352), float64], Tensor[(1, 432), uint64]) {
  @func_5663(%var_5665, %var_5666) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1, 4), int32], int32, Tensor[(4), int32], Tensor[(900), float32], Tensor[(2352), float64], Tensor[(1, 432), uint64]) */
}

def @func_7950() -> (Tensor[(2, 3, 9), bool],) {
  %149 = @func_5092() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */;
  %150 = %149.0;
  (%150,)
}

def @func_8843(%var_8842: Tensor[(13, 16, 8), float64]) -> (Tensor[(14, 10, 5), float64], Tensor[(700), float64], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) {
  %180 = fn (%var_8818: Tensor[(13, 16, 8), float64]) -> (Tensor[(14, 10, 5), float64], Tensor[(700), float64], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) {
    %151 = cast(meta[relay.Constant][6] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
    %152 = reshape(%151, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), float64] */;
    %153 = @func_3888(%152) /* ty=(Tensor[(14, 10, 5), float64],) */;
    %154 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 16, 8), float64] */;
    %155 = asin(%154) /* ty=Tensor[(13, 16, 8), float64] */;
    %156 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 16, 8), float64] */, dtype="float32") /* ty=Tensor[(13, 16, 8), float32] */;
    %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
    %158 = cast(%155, dtype="float32") /* ty=Tensor[(13, 16, 8), float32] */;
    %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %160 = power(%158, %159) /* ty=Tensor[(13, 16, 8), float32] */;
    %161 = cast(%160, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
    %162 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
    %163 = cast(%155, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
    %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %165 = cast(%var_8818, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
    %166 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(13, 16, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %167 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 16, 8), float64] */, dtype="bool") /* ty=Tensor[(13, 16, 8), bool] */;
    %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %169 = cast(meta[relay.Constant][8] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %170 = cast(meta[relay.Constant][9] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
    %171 = reshape(%169, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
    %172 = reshape(%170, newshape=[900]) /* ty=Tensor[(900), float64] */;
    %173 = @func_3312(%171, %172) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
    %174 = %153.0;
    %175 = less_equal(%163, %164) /* ty=Tensor[(13, 16, 8), bool] */;
    %176 = @func_6345() /* ty=Tensor[(2, 3, 9), bool] */;
    %177 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
    %178 = not_equal(%167, %168) /* ty=Tensor[(13, 16, 8), bool] */;
    %179 = %173.3;
    (%174, meta[relay.Constant][6] /* ty=Tensor[(700), float64] */, %175, %176, %177, %178, %179, meta[relay.Constant][8] /* ty=Tensor[(910), float32] */, meta[relay.Constant][9] /* ty=Tensor[(900), float64] */)
  };
  %180(%var_8842) /* ty=(Tensor[(14, 10, 5), float64], Tensor[(700), float64], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(13, 16, 8), bool], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) */
}

def @func_3718() -> (Tensor[(2, 3, 9), bool],) {
  @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_5010(%var_4984: Tensor[(6, 84), bool], %var_4986: Tensor[(9, 100), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(90, 10), float32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(9, 100), float32], Tensor[(726), bool]) {
  %181 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %182 = cast(meta[relay.Constant][10] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %184 = cast(%var_4984, dtype="bool") /* ty=Tensor[(6, 84), bool] */;
  %185 = cast(meta[relay.Constant][11] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %186 = cast(%var_4986, dtype="float32") /* ty=Tensor[(9, 100), float32] */;
  %187 = cast(meta[relay.Constant][12] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %188 = reshape(%182, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %189 = reshape(%183, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %190 = reshape(%184, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %191 = reshape(%185, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %192 = reshape(%186, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
  %193 = reshape(%187, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %194 = @func_4096(%188, %189, %190, %191, %192, %193) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
  %195 = cast(meta[relay.Constant][12] /* ty=Tensor[(726), uint8] */, dtype="float64") /* ty=Tensor[(726), float64] */;
  %196 = log(%195) /* ty=Tensor[(726), float64] */;
  %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(726), uint8] */, dtype="bool") /* ty=Tensor[(726), bool] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(1), int32] */;
  %199 = cast(%196, dtype="bool") /* ty=Tensor[(726), bool] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?), bool] */;
  %201 = %181.0;
  %202 = %194.4;
  %203 = not_equal(%199, %200) /* ty=Tensor[(726), bool] */;
  (%201, %202, meta[relay.Constant][10] /* ty=Tensor[(512), uint8] */, %var_4984, meta[relay.Constant][11] /* ty=Tensor[(1365), int16] */, %var_4986, %203)
}

def @func_8180() -> (Tensor[(11, 6, 14), float32], Tensor[(2, 3, 9), float64]) {
  %204 = @func_7439() /* ty=(Tensor[(11, 6, 14), float64], Tensor[(11, 6, 14), float32]) */;
  %205 = @func_6426() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) */;
  %206 = %204.1;
  %207 = %205.1;
  (%206, %207)
}

def @func_8166() -> (Tensor[(2, 3, 9), bool],) {
  %210 = fn () -> (Tensor[(2, 3, 9), bool],) {
    %208 = @func_7333() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %209 = %208.0;
    (%209,)
  };
  %210() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_6407(%var_6405: Tensor[(16, 7, 2), float32]) -> (Tensor[(16, 7, 2), float32],) {
  @func_6404(%var_6405) /* ty=(Tensor[(16, 7, 2), float32],) */
}

def @func_4808(%var_4803: Tensor[(2, 252), bool], %var_4804: Tensor[(1365, 1), int16], %var_4806: Tensor[(11, 66), uint8]) -> (Tensor[(2, 3, 9), float64], Tensor[(7, 6, 1), float64], Tensor[(2, 252), bool], Tensor[(1365, 1), int16], Tensor[(900), float32], Tensor[(11, 66), uint8]) {
  %211 = @func_4614() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */;
  %212 = %211.0;
  %213 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 3, 9), float32] */, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%212, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %217 = cast(%var_4803, dtype="bool") /* ty=Tensor[(2, 252), bool] */;
  %218 = cast(%var_4804, dtype="int16") /* ty=Tensor[(1365, 1), int16] */;
  %219 = cast(meta[relay.Constant][14] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %220 = cast(%var_4806, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %221 = cast(%var_4806, dtype="uint8") /* ty=Tensor[(11, 66), uint8] */;
  %222 = reshape(%217, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %223 = reshape(%218, newshape=[7, 195]) /* ty=Tensor[(7, 195), int16] */;
  %224 = reshape(%219, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %225 = reshape(%220, newshape=[11, 66]) /* ty=Tensor[(11, 66), uint8] */;
  %226 = reshape(%221, newshape=[11, 66]) /* ty=Tensor[(11, 66), uint8] */;
  %227 = @func_4398(%222, %223, %224, %225, %226) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(504), bool], Tensor[(7, 195), int16], Tensor[(900), float32], Tensor[(11, 66), int32], Tensor[(7, 6, 1), float64], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), int16]) */;
  %228 = divide(%215, %216) /* ty=Tensor[(2, 3, 9), float64] */;
  %229 = %227.5;
  (%228, %229, %var_4803, %var_4804, meta[relay.Constant][14] /* ty=Tensor[(900), float32] */, %var_4806)
}

def @func_5723() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) {
  @func_5721() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */
}

def @func_7794() -> (Tensor[(2, 3, 9), bool],) {
  %230 = @func_3789() /* ty=Tensor[(2, 3, 9), bool] */;
  (%230,)
}

def @func_3197(%var_3196: Tensor[(2, 3, 9), bool]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) {
  %242 = fn (%var_3166: Tensor[(2, 3, 9), bool]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) {
    %231 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %232 = %231.0;
    %233 = cast(%232, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
    %234 = cast(%var_3166, dtype="int8") /* ty=Tensor[(2, 3, 9), int8] */;
    %235 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %236 = cast(%232, dtype="int8") /* ty=Tensor[(2, 3, 9), int8] */;
    %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %238 = add(%236, %237) /* ty=Tensor[(2, 3, 9), int8] */;
    %239 = cast(%238, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
    %240 = tan(%233) /* ty=Tensor[(2, 3, 9), float32] */;
    %241 = asinh(%239) /* ty=Tensor[(2, 3, 9), float64] */;
    (%240, %241)
  };
  %242(%var_3196) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) */
}

def @func_6426() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) {
  %243 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %244 = %243.0;
  %245 = cast(%244, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %246 = reshape(%245, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), bool] */;
  %247 = @func_3195(%246) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) */;
  %248 = %247.1;
  (%244, %248)
}

def @func_857(%var_845: Tensor[(5, 12, 15), float64]) -> Tensor[(5, 12, 15), float64] {
  %249 = cast(%var_845, dtype="float64") /* ty=Tensor[(5, 12, 15), float64] */;
  tan(%249) /* ty=Tensor[(5, 12, 15), float64] */
}

def @func_4248(%var_4245: Tensor[(432), uint64], %var_4246: Tensor[(1365), int16], %var_4247: Tensor[(363, 2), uint8]) -> (Tensor[(2, 3, 9), int32], Tensor[(11, 11, 6), uint8], Tensor[(432), uint64], Tensor[(1365), int16], Tensor[(363, 2), uint8]) {
  %271 = fn (%var_4237: Tensor[(432), uint64], %var_4238: Tensor[(1365), int16], %var_4239: Tensor[(363, 2), uint8]) -> (Tensor[(2, 3, 9), int32], Tensor[(11, 11, 6), uint8], Tensor[(432), uint64], Tensor[(1365), int16], Tensor[(363, 2), uint8]) {
    %250 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
    %251 = %250.0;
    %252 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %253 = %252.0;
    %254 = cast(%253, dtype="int32") /* ty=Tensor[(2, 3, 9), int32] */;
    %255 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(%251, dtype="int32") /* ty=Tensor[(2, 3, 9), int32] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %258 = cast(%var_4237, dtype="uint64") /* ty=Tensor[(432), uint64] */;
    %259 = cast(%var_4238, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %260 = cast(%var_4237, dtype="uint64") /* ty=Tensor[(432), uint64] */;
    %261 = cast(%var_4239, dtype="uint8") /* ty=Tensor[(363, 2), uint8] */;
    %262 = cast(%var_4237, dtype="float32") /* ty=Tensor[(432), float32] */;
    %263 = reshape(%258, newshape=[108, 4]) /* ty=Tensor[(108, 4), uint64] */;
    %264 = reshape(%259, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %265 = reshape(%260, newshape=[108, 4]) /* ty=Tensor[(108, 4), uint64] */;
    %266 = reshape(%261, newshape=[726]) /* ty=Tensor[(726), uint8] */;
    %267 = reshape(%262, newshape=[108, 4]) /* ty=Tensor[(108, 4), float32] */;
    %268 = @func_3383(%263, %264, %265, %266, %267) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1365), bool], Tensor[(108, 4), uint32], Tensor[(11, 11, 6), uint8], Tensor[(726), uint8], Tensor[(108, 4), uint64]) */;
    %269 = bitwise_or(%256, %257) /* ty=Tensor[(2, 3, 9), int32] */;
    %270 = %268.3;
    (%269, %270, %var_4237, %var_4238, %var_4239)
  };
  %271(%var_4245, %var_4246, %var_4247) /* ty=(Tensor[(2, 3, 9), int32], Tensor[(11, 11, 6), uint8], Tensor[(432), uint64], Tensor[(1365), int16], Tensor[(363, 2), uint8]) */
}

def @func_6346() -> Tensor[(2, 3, 9), bool] {
  %273 = fn () -> Tensor[(2, 3, 9), bool] {
    %272 = @func_4652() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %272.0
  };
  %273() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_4181() -> (Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) {
  %285 = fn () -> (Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) {
    %274 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %275 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 432), uint64] */, dtype="uint64") /* ty=Tensor[(1, 432), uint64] */;
    %276 = reshape(%275, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), uint64] */;
    %277 = @func_2918(%276) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) */;
    %278 = %277.3;
    %279 = cast(meta[relay.Constant][16] /* ty=Tensor[(1365), int16] */, dtype="bool") /* ty=Tensor[(1365), bool] */;
    %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(1), int32] */;
    %281 = cast(%278, dtype="bool") /* ty=Tensor[(1365), bool] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?), bool] */;
    %283 = %274.0;
    %284 = logical_and(%281, %282) /* ty=Tensor[(1365), bool] */;
    (%283, meta[relay.Constant][15] /* ty=Tensor[(1, 432), uint64] */, %284)
  };
  %285() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) */
}

def @func_4103(%var_4097: Tensor[(16, 2, 16), uint8], %var_4098: Tensor[(16, 2, 16), uint8], %var_4099: Tensor[(504), bool], %var_4100: Tensor[(1365), int16], %var_4101: Tensor[(90, 10), float32], %var_4102: Tensor[(726), uint8]) -> (Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) {
  %308 = fn (%var_4056: Tensor[(16, 2, 16), uint8], %var_4062: Tensor[(16, 2, 16), uint8], %var_4074: Tensor[(504), bool], %var_4075: Tensor[(1365), int16], %var_4076: Tensor[(90, 10), float32], %var_4077: Tensor[(726), uint8]) -> (Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) {
    %286 = cast(%var_4062, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
    %287 = shape_of(%var_4056, dtype="int32") /* ty=Tensor[(3), int32] */;
    %288 = cast(%var_4056, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
    %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %290 = cast(%var_4074, dtype="bool") /* ty=Tensor[(504), bool] */;
    %291 = cast(%var_4074, dtype="bool") /* ty=Tensor[(504), bool] */;
    %292 = cast(%var_4075, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %293 = cast(%var_4076, dtype="float32") /* ty=Tensor[(90, 10), float32] */;
    %294 = cast(%var_4077, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %295 = reshape(%290, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
    %296 = reshape(%291, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
    %297 = reshape(%292, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %298 = reshape(%293, newshape=[900]) /* ty=Tensor[(900), float32] */;
    %299 = reshape(%294, newshape=[726]) /* ty=Tensor[(726), uint8] */;
    %300 = @func_3860(%295, %296, %297, %298, %299) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) */;
    %301 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 2, 1), uint8] */, dtype="bool") /* ty=Tensor[(16, 2, 1), bool] */;
    %302 = cast(%var_4056, dtype="bool") /* ty=Tensor[(16, 2, 16), bool] */;
    %303 = equal(%301, %302) /* ty=Tensor[(16, 2, 16), bool] */;
    %304 = cast(%303, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
    %305 = bitwise_xor(%288, %289) /* ty=Tensor[(16, 2, 16), int32] */;
    %306 = %300.7;
    %307 = sqrt(%304) /* ty=Tensor[(16, 2, 16), float32] */;
    (%305, %306, %var_4074, %var_4075, %var_4076, %var_4077, %307)
  };
  %308(%var_4097, %var_4098, %var_4099, %var_4100, %var_4101, %var_4102) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */
}

def @func_3716() -> (Tensor[(2, 3, 9), bool],) {
  %309 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %310 = %309.0;
  (%310,)
}

def @func_8251() -> (Tensor[(2, 3, 9), bool],) {
  @func_8249() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_7020() -> Tensor[(2, 3, 9), bool] {
  @func_7018() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_4616() -> (Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) {
  @func_4614() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */
}

def @func_6192(%var_6190: Tensor[(2, 7, 15), float32], %var_6191: Tensor[(1365), int16]) -> (Tensor[(2, 3, 9), bool], Tensor[(2, 7, 15), int16], Tensor[(16, 2, 16), int32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8]) {
  @func_6188(%var_6190, %var_6191) /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 7, 15), int16], Tensor[(16, 2, 16), int32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8]) */
}

def @func_6761() -> (Tensor[(2, 3, 9), float32],) {
  @func_6759() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_3652() -> Tensor[(2, 3, 9), float32] {
  %311 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %311.0
}

def @func_2704(%var_2702: Tensor[(2, 3, 9), float32]) -> Tensor[(2, 3, 9), float32] {
  @func_2701(%var_2702) /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_3389(%var_3384: Tensor[(108, 4), uint64], %var_3385: Tensor[(1365), int16], %var_3386: Tensor[(108, 4), uint64], %var_3387: Tensor[(726), uint8], %var_3388: Tensor[(108, 4), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(1365), bool], Tensor[(108, 4), uint32], Tensor[(11, 11, 6), uint8], Tensor[(726), uint8], Tensor[(108, 4), uint64]) {
  %340 = fn (%var_3346: Tensor[(108, 4), uint64], %var_3351: Tensor[(1365), int16], %var_3361: Tensor[(108, 4), uint64], %var_3370: Tensor[(726), uint8], %var_3379: Tensor[(108, 4), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(1365), bool], Tensor[(108, 4), uint32], Tensor[(11, 11, 6), uint8], Tensor[(726), uint8], Tensor[(108, 4), uint64]) {
    %312 = cast(%var_3346, dtype="uint64") /* ty=Tensor[(108, 4), uint64] */;
    %313 = reshape(%312, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), uint64] */;
    %314 = @func_2918(%313) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) */;
    %315 = %314.5;
    %316 = cast(%var_3351, dtype="bool") /* ty=Tensor[(1365), bool] */;
    %317 = shape_of(%315, dtype="int32") /* ty=Tensor[(1), int32] */;
    %318 = cast(%315, dtype="bool") /* ty=Tensor[(1365), bool] */;
    %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?), bool] */;
    %320 = cast(%var_3361, dtype="uint32") /* ty=Tensor[(108, 4), uint32] */;
    %321 = shape_of(%var_3346, dtype="int32") /* ty=Tensor[(2), int32] */;
    %322 = cast(%var_3346, dtype="uint32") /* ty=Tensor[(108, 4), uint32] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %324 = cast(%var_3370, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %325 = cast(%var_3370, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %326 = reshape(%324, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
    %327 = reshape(%325, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
    %328 = @func_2781(%326, %327) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
    %329 = cast(%var_3361, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
    %330 = log10(%329) /* ty=Tensor[(108, 4), float32] */;
    %331 = cast(%var_3379, dtype="uint64") /* ty=Tensor[(108, 4), uint64] */;
    %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(2), int32] */;
    %333 = cast(%330, dtype="uint64") /* ty=Tensor[(108, 4), uint64] */;
    %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %335 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
    %336 = logical_or(%318, %319) /* ty=Tensor[(1365), bool] */;
    %337 = left_shift(%322, %323) /* ty=Tensor[(108, 4), uint32] */;
    %338 = %328.0;
    %339 = logical_xor(%333, %334) /* ty=Tensor[(108, 4), uint64] */;
    (%335, %336, %337, %338, %var_3370, %339)
  };
  %340(%var_3384, %var_3385, %var_3386, %var_3387, %var_3388) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1365), bool], Tensor[(108, 4), uint32], Tensor[(11, 11, 6), uint8], Tensor[(726), uint8], Tensor[(108, 4), uint64]) */
}

def @func_6803() -> (Tensor[(2, 3, 9), float32],) {
  %343 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %341 = @func_6759() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %342 = %341.0;
    (%342,)
  };
  %343() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_4614() -> (Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) {
  %344 = @func_4304() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %345 = cast(meta[relay.Constant][18] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %346 = cast(meta[relay.Constant][19] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %347 = reshape(%345, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %348 = reshape(%346, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %349 = @func_3025(%347, %348) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %350 = %349.3;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %352 = %344.0;
  %353 = log(%351) /* ty=Tensor[(2, 3, 9), float64] */;
  (%352, meta[relay.Constant][18] /* ty=Tensor[(726), uint8] */, meta[relay.Constant][19] /* ty=Tensor[(1365), int16] */, %353)
}

def @func_7468(%var_7467: Tensor[(14, 2, 13), int16]) -> (Tensor[(14, 2, 13), int16],) {
  %359 = fn (%var_7443: Tensor[(14, 2, 13), int16]) -> (Tensor[(14, 2, 13), int16],) {
    %354 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 2, 13), int16] */, dtype="int16") /* ty=Tensor[(14, 2, 13), int16] */;
    %355 = shape_of(%var_7443, dtype="int32") /* ty=Tensor[(3), int32] */;
    %356 = cast(%var_7443, dtype="int16") /* ty=Tensor[(14, 2, 13), int16] */;
    %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %358 = maximum(%356, %357) /* ty=Tensor[(14, 2, 13), int16] */;
    (%358,)
  };
  %359(%var_7467) /* ty=(Tensor[(14, 2, 13), int16],) */
}

def @func_7655() -> Tensor[(2, 3, 9), float32] {
  %363 = fn () -> Tensor[(2, 3, 9), float32] {
    %360 = @func_5092() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */;
    %361 = %360.0;
    %362 = cast(%361, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
    cos(%362) /* ty=Tensor[(2, 3, 9), float32] */
  };
  %363() /* ty=Tensor[(2, 3, 9), float32] */
}

def @main(%var_9097: Tensor[(4, 3, 14), float32], %var_9110: Tensor[(4, 3, 14), float32]) -> (Tensor[(4, 3, 14), float32], Tensor[(4, 3, 14), int32]) {
  %364 = cast(%var_9097, dtype="float32") /* ty=Tensor[(4, 3, 14), float32] */;
  %365 = cast(%var_9110, dtype="int32") /* ty=Tensor[(4, 3, 14), int32] */;
  %366 = shape_of(%var_9097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_9097, dtype="int32") /* ty=Tensor[(4, 3, 14), int32] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %369 = asinh(%364) /* ty=Tensor[(4, 3, 14), float32] */;
  %370 = left_shift(%367, %368) /* ty=Tensor[(4, 3, 14), int32] */;
  (%369, %370)
}

def @func_8623() -> (Tensor[(2, 3, 9), float32], Tensor[(756, 2), float32], Tensor[(2, 3, 9), bool], Tensor[(7, 10, 13), int8]) {
  %371 = @func_5299() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %372 = %371.0;
  %373 = cast(%372, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %374 = @func_6873() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) */;
  %375 = cast(meta[relay.Constant][21] /* ty=Tensor[(756, 2), float32] */, dtype="float32") /* ty=Tensor[(756, 2), float32] */;
  %376 = cast(meta[relay.Constant][21] /* ty=Tensor[(756, 2), float32] */, dtype="float32") /* ty=Tensor[(756, 2), float32] */;
  %377 = reshape(%375, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %378 = reshape(%376, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %379 = @func_1991(%377, %378) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) */;
  %380 = %379.3;
  %381 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 10, 13), int16] */, dtype="int8") /* ty=Tensor[(7, 10, 13), int8] */;
  %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%380, dtype="int8") /* ty=Tensor[(7, 10, 13), int8] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %385 = acos(%373) /* ty=Tensor[(2, 3, 9), float32] */;
  %386 = %374.1;
  %387 = multiply(%383, %384) /* ty=Tensor[(7, 10, 13), int8] */;
  (%385, meta[relay.Constant][21] /* ty=Tensor[(756, 2), float32] */, %386, %387)
}

def @func_2701(%var_2696: Tensor[(2, 3, 9), float32]) -> Tensor[(2, 3, 9), float32] {
  %388 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %389 = %388.0;
  %390 = cast(%var_2696, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%392, %393) /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_3151(%var_3150: Tensor[(2, 3, 9), float32]) -> (Tensor[(2, 3, 9), bool],) {
  %401 = fn (%var_3140: Tensor[(2, 3, 9), float32]) -> (Tensor[(2, 3, 9), bool],) {
    %394 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %395 = %394.0;
    %396 = cast(%var_3140, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
    %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
    %398 = cast(%395, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
    %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %400 = greater_equal(%398, %399) /* ty=Tensor[(2, 3, 9), bool] */;
    (%400,)
  };
  %401(%var_3150) /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_978(%var_976: Tensor[(7, 195), int16], %var_977: Tensor[(900), float32]) -> (Tensor[(15, 13, 7), int16], Tensor[(7, 195), int16], Tensor[(5, 9, 12), float32], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(8, 13, 7), float64], Tensor[(9, 10, 10), float32]) {
  %431 = fn (%var_892: Tensor[(7, 195), int16], %var_942: Tensor[(900), float32]) -> (Tensor[(15, 13, 7), int16], Tensor[(7, 195), int16], Tensor[(5, 9, 12), float32], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(8, 13, 7), float64], Tensor[(9, 10, 10), float32]) {
    %402 = cast(%var_892, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
    %403 = cast(%var_892, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
    %404 = reshape(%402, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %405 = reshape(%403, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %406 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 12), float64] */;
    %407 = cos(%406) /* ty=Tensor[(5, 9, 12), float64] */;
    %408 = cast(%407, dtype="float32") /* ty=Tensor[(5, 9, 12), float32] */;
    %409 = cast(meta[relay.Constant][24] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %410 = reshape(%409, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
    %411 = @func_761(%410) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) */;
    %412 = cast(%var_942, dtype="float32") /* ty=Tensor[(900), float32] */;
    %413 = cast(%var_892, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
    %414 = reshape(%412, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
    %415 = reshape(%413, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %416 = @func_629(%414, %415) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
    %417 = cast(meta[relay.Constant][24] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %418 = reshape(%417, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
    %419 = @func_761(%418) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) */;
    %420 = cast(%var_942, dtype="float32") /* ty=Tensor[(900), float32] */;
    %421 = @func_111(%404, %405) /* ty=Tensor[(15, 13, 7), int16] */;
    %422 = cast(%421, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
    %423 = reshape(%420, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
    %424 = reshape(%422, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %425 = @func_629(%423, %424) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
    %426 = atanh(%408) /* ty=Tensor[(5, 9, 12), float32] */;
    %427 = %411.0;
    %428 = %416.1;
    %429 = %419.0;
    %430 = %425.0;
    (%421, %var_892, %426, %427, meta[relay.Constant][24] /* ty=Tensor[(728), float64] */, %428, %var_942, %429, %430)
  };
  %431(%var_976, %var_977) /* ty=(Tensor[(15, 13, 7), int16], Tensor[(7, 195), int16], Tensor[(5, 9, 12), float32], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(8, 13, 7), float64], Tensor[(9, 10, 10), float32]) */
}

def @func_3775() -> (Tensor[(2, 3, 9), bool],) {
  %432 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %433 = %432.0;
  (%433,)
}

def @func_6794() -> (Tensor[(2, 3, 9), bool],) {
  %434 = @func_5299() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %435 = %434.0;
  (%435,)
}

def @func_6428() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) {
  @func_6426() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float64]) */
}

def @func_7539(%var_7538: Tensor[(1512), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(8, 9, 6), bool], Tensor[(2, 216), uint64], Tensor[(2, 3, 9), float32], Tensor[(726), uint8]) {
  %453 = fn (%var_7496: Tensor[(1512), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(8, 9, 6), bool], Tensor[(2, 216), uint64], Tensor[(2, 3, 9), float32], Tensor[(726), uint8]) {
    %436 = @func_6609() /* ty=Tensor[(2, 3, 9), float32] */;
    %437 = cast(%436, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
    %438 = cast(%var_7496, dtype="float32") /* ty=Tensor[(1512), float32] */;
    %439 = cast(%var_7496, dtype="float32") /* ty=Tensor[(1512), float32] */;
    %440 = reshape(%438, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
    %441 = reshape(%439, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
    %442 = @func_1991(%440, %441) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) */;
    %443 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 216), uint64] */, dtype="uint64") /* ty=Tensor[(2, 216), uint64] */;
    %444 = reshape(%443, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), uint64] */;
    %445 = @func_2918(%444) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) */;
    %446 = cast(meta[relay.Constant][26] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %447 = reshape(%446, newshape=[726]) /* ty=Tensor[(726), uint8] */;
    %448 = @func_5799(%447) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), float32]) */;
    %449 = atanh(%437) /* ty=Tensor[(2, 3, 9), float32] */;
    %450 = %442.3;
    %451 = %445.6;
    %452 = %448.0;
    (%449, %450, %var_7496, %451, meta[relay.Constant][25] /* ty=Tensor[(2, 216), uint64] */, %452, meta[relay.Constant][26] /* ty=Tensor[(726), uint8] */)
  };
  %453(%var_7538) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(8, 9, 6), bool], Tensor[(2, 216), uint64], Tensor[(2, 3, 9), float32], Tensor[(726), uint8]) */
}

def @func_3867(%var_3862: Tensor[(4, 9, 14), bool], %var_3863: Tensor[(4, 9, 14), bool], %var_3864: Tensor[(1365), int16], %var_3865: Tensor[(900), float32], %var_3866: Tensor[(726), uint8]) -> (Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) {
  @func_3860(%var_3862, %var_3863, %var_3864, %var_3865, %var_3866) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) */
}

def @func_5300() -> (Tensor[(2, 3, 9), bool],) {
  %461 = fn () -> (Tensor[(2, 3, 9), bool],) {
    %454 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
    %455 = %454.1;
    %456 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 3, 9), bool] */, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
    %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(%455, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %460 = greater(%458, %459) /* ty=Tensor[(2, 3, 9), bool] */;
    (%460,)
  };
  %461() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_6759() -> (Tensor[(2, 3, 9), float32],) {
  %462 = @func_4304() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %463 = %462.0;
  (%463,)
}

def @func_8087() -> (Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(2, 3, 9), bool]) {
  %464 = cast(meta[relay.Constant][28] /* ty=Tensor[(1512), float32] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %465 = cast(meta[relay.Constant][28] /* ty=Tensor[(1512), float32] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %466 = reshape(%464, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %467 = reshape(%465, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), float32] */;
  %468 = @func_1991(%466, %467) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) */;
  %469 = @func_7742() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %470 = %469.0;
  %471 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %472 = %471.0;
  %473 = cast(%472, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %474 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%470, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %477 = %468.1;
  %478 = logical_or(%475, %476) /* ty=Tensor[(2, 3, 9), bool] */;
  (%477, meta[relay.Constant][28] /* ty=Tensor[(1512), float32] */, %478)
}

def @func_7440() -> (Tensor[(11, 6, 14), float64], Tensor[(11, 6, 14), float32]) {
  %483 = fn () -> (Tensor[(11, 6, 14), float64], Tensor[(11, 6, 14), float32]) {
    %479 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
    %480 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 6, 14), float64] */, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
    %481 = asin(%479) /* ty=Tensor[(11, 6, 14), float64] */;
    %482 = log2(%480) /* ty=Tensor[(11, 6, 14), float32] */;
    (%481, %482)
  };
  %483() /* ty=(Tensor[(11, 6, 14), float64], Tensor[(11, 6, 14), float32]) */
}

def @func_1995(%var_1993: Tensor[(9, 14, 12), float32], %var_1994: Tensor[(9, 14, 12), float32]) -> (Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) {
  @func_1991(%var_1993, %var_1994) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) */
}

def @func_4134(%var_4121: Tensor[(2, 3, 9), bool]) -> (Tensor[(2, 3, 9), uint32],) {
  %484 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %485 = %484.0;
  %486 = cast(%var_4121, dtype="uint32") /* ty=Tensor[(2, 3, 9), uint32] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="uint32") /* ty=Tensor[(2, 3, 9), uint32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %490 = maximum(%488, %489) /* ty=Tensor[(2, 3, 9), uint32] */;
  (%490,)
}

def @func_5014(%var_5012: Tensor[(6, 84), bool], %var_5013: Tensor[(9, 100), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(90, 10), float32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(9, 100), float32], Tensor[(726), bool]) {
  @func_5010(%var_5012, %var_5013) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(90, 10), float32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(9, 100), float32], Tensor[(726), bool]) */
}

def @func_6475(%var_6473: Tensor[(910), float32], %var_6474: Tensor[(12, 196), uint16]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(12, 196), uint16]) {
  %500 = fn (%var_6467: Tensor[(910), float32], %var_6468: Tensor[(12, 196), uint16]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(12, 196), uint16]) {
    %491 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %492 = cast(%var_6467, dtype="float32") /* ty=Tensor[(910), float32] */;
    %493 = cast(%var_6468, dtype="uint16") /* ty=Tensor[(12, 196), uint16] */;
    %494 = reshape(%492, newshape=[910]) /* ty=Tensor[(910), float32] */;
    %495 = reshape(%493, newshape=[2352]) /* ty=Tensor[(2352), uint16] */;
    %496 = @func_6041(%494, %495) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(2352), float64], Tensor[(2352), float32], Tensor[(7, 10, 13), int16], Tensor[(2352), int64]) */;
    %497 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
    %498 = %491.0;
    %499 = %496.0;
    (%497, %498, %499, %var_6467, %var_6468)
  };
  %500(%var_6473, %var_6474) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(12, 196), uint16]) */
}

def @func_3777() -> (Tensor[(2, 3, 9), bool],) {
  @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_8455() -> Tensor[(2, 3, 9), bool] {
  @func_8453() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_8453() -> Tensor[(2, 3, 9), bool] {
  %501 = @func_8165() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %501.0
}

def @func_6298(%var_6296: Tensor[(726, 1), uint8]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726, 1365), bool], Tensor[(726, 1365), bool], Tensor[(2, 3, 9), float32]) {
  @func_6295(%var_6296) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726, 1365), bool], Tensor[(726, 1365), bool], Tensor[(2, 3, 9), float32]) */
}

def @func_5554(%var_5552: Tensor[(12, 11, 11), float32], %var_5553: Tensor[(504), bool]) -> (Tensor[(504), bool], Tensor[(512), uint8], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8], Tensor[(12, 11, 11), int16], Tensor[(1365), float64]) {
  %537 = fn (%var_5518: Tensor[(12, 11, 11), float32], %var_5527: Tensor[(504), bool]) -> (Tensor[(504), bool], Tensor[(512), uint8], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8], Tensor[(12, 11, 11), int16], Tensor[(1365), float64]) {
    %502 = cast(meta[relay.Constant][30] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
    %503 = cast(meta[relay.Constant][30] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
    %504 = cast(%var_5527, dtype="bool") /* ty=Tensor[(504), bool] */;
    %505 = cast(meta[relay.Constant][31] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %506 = cast(meta[relay.Constant][32] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
    %507 = cast(meta[relay.Constant][33] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %508 = reshape(%502, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
    %509 = reshape(%503, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
    %510 = reshape(%504, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %511 = reshape(%505, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %512 = reshape(%506, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
    %513 = reshape(%507, newshape=[726]) /* ty=Tensor[(726), uint8] */;
    %514 = @func_4096(%508, %509, %510, %511, %512, %513) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
    %515 = cast(%var_5518, dtype="float32") /* ty=Tensor[(12, 11, 11), float32] */;
    %516 = acosh(%515) /* ty=Tensor[(12, 11, 11), float32] */;
    %517 = cast(%var_5518, dtype="int16") /* ty=Tensor[(12, 11, 11), int16] */;
    %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %519 = cast(%516, dtype="int16") /* ty=Tensor[(12, 11, 11), int16] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %521 = cast(meta[relay.Constant][30] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
    %522 = cast(meta[relay.Constant][30] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
    %523 = cast(%var_5527, dtype="bool") /* ty=Tensor[(504), bool] */;
    %524 = cast(meta[relay.Constant][31] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %525 = cast(meta[relay.Constant][32] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
    %526 = cast(meta[relay.Constant][33] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %527 = reshape(%521, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
    %528 = reshape(%522, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
    %529 = reshape(%523, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %530 = reshape(%524, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %531 = reshape(%525, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
    %532 = reshape(%526, newshape=[726]) /* ty=Tensor[(726), uint8] */;
    %533 = @func_4096(%527, %528, %529, %530, %531, %532) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
    %534 = %514.2;
    %535 = logical_xor(%519, %520) /* ty=Tensor[(12, 11, 11), int16] */;
    %536 = %533.1;
    (%534, meta[relay.Constant][30] /* ty=Tensor[(512), uint8] */, %var_5527, meta[relay.Constant][31] /* ty=Tensor[(1365), int16] */, meta[relay.Constant][32] /* ty=Tensor[(900), float32] */, meta[relay.Constant][33] /* ty=Tensor[(726), uint8] */, %535, %536)
  };
  %537(%var_5552, %var_5553) /* ty=(Tensor[(504), bool], Tensor[(512), uint8], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8], Tensor[(12, 11, 11), int16], Tensor[(1365), float64]) */
}

def @func_3263() -> Tensor[(2, 3, 9), bool] {
  %538 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %538.0
}

def @func_3938(%var_3930: Tensor[(1365), int16]) -> (Tensor[(15, 13, 7), int16], Tensor[(3, 300), float32], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) {
  %539 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 300), float32] */, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
  %540 = cast(%var_3930, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %541 = reshape(%539, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
  %542 = reshape(%540, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %543 = @func_629(%541, %542) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
  %544 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %545 = %544.0;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %547 = reshape(%546, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %548 = @func_3149(%547) /* ty=(Tensor[(2, 3, 9), bool],) */;
  %549 = %548.0;
  %550 = cast(%549, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %551 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%545, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %554 = %543.1;
  %555 = mod(%552, %553) /* ty=Tensor[(2, 3, 9), float64] */;
  (%554, meta[relay.Constant][34] /* ty=Tensor[(3, 300), float32] */, %var_3930, %555)
}

def @func_8046() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) {
  %556 = @func_7765() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %557 = @func_6759() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %558 = @func_5092() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */;
  %559 = %556.0;
  %560 = %557.0;
  %561 = %558.0;
  %562 = @func_7654() /* ty=Tensor[(2, 3, 9), float32] */;
  (%559, %560, %561, %562)
}

def @func_8753() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  @func_8751() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */
}

def @func_6404(%var_6372: Tensor[(16, 7, 2), float32]) -> (Tensor[(16, 7, 2), float32],) {
  %563 = cast(%var_6372, dtype="float32") /* ty=Tensor[(16, 7, 2), float32] */;
  %564 = rsqrt(%563) /* ty=Tensor[(16, 7, 2), float32] */;
  %565 = cast(%564, dtype="float64") /* ty=Tensor[(16, 7, 2), float64] */;
  %566 = cosh(%565) /* ty=Tensor[(16, 7, 2), float64] */;
  %567 = cast(%566, dtype="float32") /* ty=Tensor[(16, 7, 2), float32] */;
  %568 = exp(%567) /* ty=Tensor[(16, 7, 2), float32] */;
  (%568,)
}

def @func_5850() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  %569 = @func_4304() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %570 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %571 = %569.0;
  %572 = %570.0;
  (%571, %572)
}

def @func_3991(%var_3987: Tensor[(7, 11, 1), int64], %var_3988: Tensor[(7, 11, 7), int64], %var_3989: Tensor[(1365), int16], %var_3990: Tensor[(900), float32]) -> (Tensor[(7, 11, 7), bool], Tensor[(15, 13, 7), float32], Tensor[(726, 1), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), int16], Tensor[(900), float32]) {
  %590 = fn (%var_3943: Tensor[(7, 11, 1), int64], %var_3944: Tensor[(7, 11, 7), int64], %var_3961: Tensor[(1365), int16], %var_3976: Tensor[(900), float32]) -> (Tensor[(7, 11, 7), bool], Tensor[(15, 13, 7), float32], Tensor[(726, 1), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), int16], Tensor[(900), float32]) {
    %573 = cast(%var_3943, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
    %574 = cast(%var_3944, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
    %575 = cast(meta[relay.Constant][35] /* ty=Tensor[(726, 1), uint8] */, dtype="uint8") /* ty=Tensor[(726, 1), uint8] */;
    %576 = cast(%var_3961, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %577 = reshape(%575, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
    %578 = reshape(%576, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %579 = @func_3025(%577, %578) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
    %580 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %581 = cast(%var_3976, dtype="float32") /* ty=Tensor[(900), float32] */;
    %582 = cast(%var_3961, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %583 = reshape(%581, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
    %584 = reshape(%582, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %585 = @func_629(%583, %584) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
    %586 = equal(%573, %574) /* ty=Tensor[(7, 11, 7), bool] */;
    %587 = %579.2;
    %588 = %580.0;
    %589 = %585.1;
    (%586, %587, meta[relay.Constant][35] /* ty=Tensor[(726, 1), uint8] */, %var_3961, %588, %589, %var_3976)
  };
  %590(%var_3987, %var_3988, %var_3989, %var_3990) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(15, 13, 7), float32], Tensor[(726, 1), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), int16], Tensor[(900), float32]) */
}

def @func_2918(%var_2890: Tensor[(8, 9, 6), uint64]) -> (Tensor[(2, 3, 9), float32], Tensor[(432), float64], Tensor[(2, 3, 9), float32], Tensor[(1365), int16], Tensor[(54, 2), float64], Tensor[(1365), int16], Tensor[(8, 9, 6), bool], Tensor[(2, 3, 9), float32]) {
  %591 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %592 = %591.0;
  %593 = cast(%592, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %594 = reshape(%593, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %595 = cast(meta[relay.Constant][37] /* ty=Tensor[(54, 2), float64] */, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
  %596 = cast(meta[relay.Constant][38] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %597 = reshape(%595, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %598 = reshape(%596, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %599 = @func_293(%597, %598) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %600 = cast(meta[relay.Constant][36] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %601 = reshape(%600, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), float64] */;
  %602 = @func_1663(%601) /* ty=Tensor[(8, 9, 6), uint64] */;
  %603 = cast(%var_2890, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %604 = shape_of(%602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%602, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %607 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %608 = @func_2701(%594) /* ty=Tensor[(2, 3, 9), float32] */;
  %609 = %599.2;
  %610 = equal(%605, %606) /* ty=Tensor[(8, 9, 6), bool] */;
  %611 = %607.0;
  (%592, meta[relay.Constant][36] /* ty=Tensor[(432), float64] */, %608, %609, meta[relay.Constant][37] /* ty=Tensor[(54, 2), float64] */, meta[relay.Constant][38] /* ty=Tensor[(1365), int16] */, %610, %611)
}

def @func_3791() -> Tensor[(2, 3, 9), bool] {
  @func_3789() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_6736(%var_6733: Tensor[(726), uint8], %var_6734: Tensor[(108), float64], %var_6735: Tensor[(224), float32]) -> (Tensor[(2, 3, 9), bool], Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(108), float64], Tensor[(1365), int16], Tensor[(726), float64], Tensor[(16, 7, 2), float32], Tensor[(224), float32]) {
  @func_6731(%var_6733, %var_6734, %var_6735) /* ty=(Tensor[(2, 3, 9), bool], Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(108), float64], Tensor[(1365), int16], Tensor[(726), float64], Tensor[(16, 7, 2), float32], Tensor[(224), float32]) */
}

def @func_7952() -> (Tensor[(2, 3, 9), bool],) {
  @func_7950() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_3888(%var_3884: Tensor[(14, 10, 5), float64]) -> (Tensor[(14, 10, 5), float64],) {
  %612 = cast(%var_3884, dtype="float64") /* ty=Tensor[(14, 10, 5), float64] */;
  %613 = acosh(%612) /* ty=Tensor[(14, 10, 5), float64] */;
  (%613,)
}

def @func_6875() -> (Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) {
  @func_6873() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) */
}

def @func_4405(%var_4400: Tensor[(504), bool], %var_4401: Tensor[(7, 195), int16], %var_4402: Tensor[(900), float32], %var_4403: Tensor[(11, 66), uint8], %var_4404: Tensor[(11, 66), uint8]) -> (Tensor[(4, 9, 14), bool], Tensor[(504), bool], Tensor[(7, 195), int16], Tensor[(900), float32], Tensor[(11, 66), int32], Tensor[(7, 6, 1), float64], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), int16]) {
  @func_4398(%var_4400, %var_4401, %var_4402, %var_4403, %var_4404) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(504), bool], Tensor[(7, 195), int16], Tensor[(900), float32], Tensor[(11, 66), int32], Tensor[(7, 6, 1), float64], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), int16]) */
}

def @func_7743() -> (Tensor[(2, 3, 9), bool],) {
  %616 = fn () -> (Tensor[(2, 3, 9), bool],) {
    %614 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %615 = %614.0;
    (%615,)
  };
  %616() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_8249() -> (Tensor[(2, 3, 9), bool],) {
  %617 = @func_6635() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %618 = %617.0;
  (%618,)
}

def @func_2816() -> (Tensor[(2, 3, 9), float32],) {
  %620 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %619 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
    (%619,)
  };
  %620() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_2718() -> Tensor[(2, 3, 9), float32] {
  %622 = fn () -> Tensor[(2, 3, 9), float32] {
    %621 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %621.0
  };
  %622() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_1056(%var_1055: Tensor[(14, 14, 12), float64]) -> (Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) {
  %631 = fn (%var_1041: Tensor[(14, 14, 12), float64]) -> (Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) {
    %623 = cast(%var_1041, dtype="float64") /* ty=Tensor[(14, 14, 12), float64] */;
    %624 = cast(meta[relay.Constant][39] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
    %625 = cast(meta[relay.Constant][40] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %626 = reshape(%624, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
    %627 = reshape(%625, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %628 = @func_629(%626, %627) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
    %629 = atanh(%623) /* ty=Tensor[(14, 14, 12), float64] */;
    %630 = %628.1;
    (%629, %630, meta[relay.Constant][39] /* ty=Tensor[(900), float32] */, meta[relay.Constant][40] /* ty=Tensor[(1365), int16] */)
  };
  %631(%var_1055) /* ty=(Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) */
}

def @func_8625() -> (Tensor[(2, 3, 9), float32], Tensor[(756, 2), float32], Tensor[(2, 3, 9), bool], Tensor[(7, 10, 13), int8]) {
  @func_8623() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(756, 2), float32], Tensor[(2, 3, 9), bool], Tensor[(7, 10, 13), int8]) */
}

def @func_3503(%var_3496: Tensor[(1, 726), uint8], %var_3497: Tensor[(1365, 1), int16]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(1, 726), uint8], Tensor[(1365, 1), int16]) {
  %632 = cast(%var_3496, dtype="uint8") /* ty=Tensor[(1, 726), uint8] */;
  %633 = cast(%var_3497, dtype="int16") /* ty=Tensor[(1365, 1), int16] */;
  %634 = reshape(%632, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %635 = reshape(%633, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %636 = @func_3025(%634, %635) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %637 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  %638 = %636.1;
  (%637, %638, %var_3496, %var_3497)
}

def @func_5801(%var_5800: Tensor[(726), uint8]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), float32]) {
  %648 = fn (%var_5769: Tensor[(726), uint8]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), float32]) {
    %639 = cast(%var_5769, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %640 = cast(meta[relay.Constant][41] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %641 = reshape(%639, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
    %642 = reshape(%640, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
    %643 = @func_3025(%641, %642) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
    %644 = cast(meta[relay.Constant][41] /* ty=Tensor[(1365), int16] */, dtype="float32") /* ty=Tensor[(1365), float32] */;
    %645 = @func_3652() /* ty=Tensor[(2, 3, 9), float32] */;
    %646 = %643.1;
    %647 = atan(%644) /* ty=Tensor[(1365), float32] */;
    (%645, %646, %var_5769, %647)
  };
  %648(%var_5800) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), float32]) */
}

def @func_6083() -> (Tensor[(2, 3, 9), float32],) {
  %651 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %649 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
    %650 = %649.1;
    (%650,)
  };
  %651() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_7919() -> (Tensor[(2, 3, 9), float32], Tensor[(1365), uint64]) {
  @func_7917() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1365), uint64]) */
}

def @func_7552() -> Tensor[(2, 3, 9), float32] {
  @func_7550() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_7251(%var_7250: Tensor[(9, 10, 4), uint16]) -> Tensor[(9, 10, 4), bool] {
  %656 = fn (%var_7238: Tensor[(9, 10, 4), uint16]) -> Tensor[(9, 10, 4), bool] {
    %652 = cast(%var_7238, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
    %653 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(9, 10, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 10, 4), uint16] */, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%654, %655) /* ty=Tensor[(9, 10, 4), bool] */
  };
  %656(%var_7250) /* ty=Tensor[(9, 10, 4), bool] */
}

def @func_3941(%var_3939: Tensor[(1365), int16]) -> (Tensor[(15, 13, 7), int16], Tensor[(3, 300), float32], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) {
  @func_3938(%var_3939) /* ty=(Tensor[(15, 13, 7), int16], Tensor[(3, 300), float32], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */
}

def @func_6943() -> (Tensor[(2, 3, 9), float32],) {
  %657 = @func_5721() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
  %658 = %657.0;
  (%658,)
}

def @func_3328() -> (Tensor[(2, 3, 9), float32],) {
  %660 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %659 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
    (%659,)
  };
  %660() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_6213() -> Tensor[(2, 3, 9), float32] {
  %662 = fn () -> Tensor[(2, 3, 9), float32] {
    %661 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %661.0
  };
  %662() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_6731(%var_6676: Tensor[(726), uint8], %var_6687: Tensor[(108), float64], %var_6719: Tensor[(224), float32]) -> (Tensor[(2, 3, 9), bool], Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(108), float64], Tensor[(1365), int16], Tensor[(726), float64], Tensor[(16, 7, 2), float32], Tensor[(224), float32]) {
  %663 = @func_3231() /* ty=(Tensor[(2, 3, 9), float64], Tensor[(2, 3, 9), bool]) */;
  %664 = %663.0;
  %665 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 3, 9), float64] */, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %666 = shape_of(%664, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%664, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %669 = cast(%var_6676, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %670 = cast(%var_6676, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %671 = reshape(%669, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %672 = reshape(%670, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), uint8] */;
  %673 = @func_2781(%671, %672) /* ty=(Tensor[(11, 11, 6), uint8], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %674 = cast(%var_6687, dtype="float64") /* ty=Tensor[(108), float64] */;
  %675 = cast(meta[relay.Constant][44] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %676 = reshape(%674, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %677 = reshape(%675, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %678 = @func_293(%676, %677) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
  %679 = cast(%var_6676, dtype="float64") /* ty=Tensor[(726), float64] */;
  %680 = cast(%var_6719, dtype="float32") /* ty=Tensor[(224), float32] */;
  %681 = reshape(%680, newshape=[16, 7, 2]) /* ty=Tensor[(16, 7, 2), float32] */;
  %682 = @func_6404(%681) /* ty=(Tensor[(16, 7, 2), float32],) */;
  %683 = less(%667, %668) /* ty=Tensor[(2, 3, 9), bool] */;
  %684 = %673.0;
  %685 = %678.1;
  %686 = rsqrt(%679) /* ty=Tensor[(726), float64] */;
  %687 = %682.0;
  (%683, %684, %685, %var_6687, meta[relay.Constant][44] /* ty=Tensor[(1365), int16] */, %686, %687, %var_6719)
}

def @func_5171(%var_5169: bool, %var_5170: Tensor[(9, 7, 11), bool]) -> (Tensor[(9, 7, 11), bool],) {
  @func_5167(%var_5169, %var_5170) /* ty=(Tensor[(9, 7, 11), bool],) */
}

def @func_8675() -> Tensor[(2, 3, 9), float32] {
  %688 = fn () -> Tensor[(2, 3, 9), float32] {
    @func_3652() /* ty=Tensor[(2, 3, 9), float32] */
  };
  %688() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_8089() -> (Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(2, 3, 9), bool]) {
  @func_8087() /* ty=(Tensor[(7, 10, 13), int16], Tensor[(1512), float32], Tensor[(2, 3, 9), bool]) */
}

def @func_3111(%var_3109: Tensor[(910), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  @func_3108(%var_3109) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */
}

def @func_5380(%var_5378: Tensor[(726), uint8], %var_5379: Tensor[(91, 15), int16]) -> (Tensor[(2, 3, 9), bool], Tensor[(91, 15), int16], Tensor[(2, 3, 9), bool], Tensor[(1365, 726), bool], Tensor[(1365, 1), float32]) {
  %703 = fn (%var_5323: Tensor[(726), uint8], %var_5324: Tensor[(91, 15), int16]) -> (Tensor[(2, 3, 9), bool], Tensor[(91, 15), int16], Tensor[(2, 3, 9), bool], Tensor[(1365, 726), bool], Tensor[(1365, 1), float32]) {
    %689 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %690 = cast(%var_5323, dtype="uint8") /* ty=Tensor[(726), uint8] */;
    %691 = cast(%var_5324, dtype="int16") /* ty=Tensor[(91, 15), int16] */;
    %692 = reshape(%690, newshape=[1, 726]) /* ty=Tensor[(1, 726), uint8] */;
    %693 = reshape(%691, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), int16] */;
    %694 = @func_3503(%692, %693) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(1, 726), uint8], Tensor[(1365, 1), int16]) */;
    %695 = %694.3;
    %696 = cast(%695, dtype="bool") /* ty=Tensor[(1365, 1), bool] */;
    %697 = cast(%var_5323, dtype="bool") /* ty=Tensor[(726), bool] */;
    %698 = cast(%695, dtype="float32") /* ty=Tensor[(1365, 1), float32] */;
    %699 = %689.0;
    %700 = @func_3263() /* ty=Tensor[(2, 3, 9), bool] */;
    %701 = not_equal(%696, %697) /* ty=Tensor[(1365, 726), bool] */;
    %702 = sinh(%698) /* ty=Tensor[(1365, 1), float32] */;
    (%699, %var_5324, %700, %701, %702)
  };
  %703(%var_5378, %var_5379) /* ty=(Tensor[(2, 3, 9), bool], Tensor[(91, 15), int16], Tensor[(2, 3, 9), bool], Tensor[(1365, 726), bool], Tensor[(1365, 1), float32]) */
}

def @func_4653() -> (Tensor[(2, 3, 9), bool],) {
  %706 = fn () -> (Tensor[(2, 3, 9), bool],) {
    %704 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %705 = %704.0;
    (%705,)
  };
  %706() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_4813(%var_4810: Tensor[(2, 252), bool], %var_4811: Tensor[(1365, 1), int16], %var_4812: Tensor[(11, 66), uint8]) -> (Tensor[(2, 3, 9), float64], Tensor[(7, 6, 1), float64], Tensor[(2, 252), bool], Tensor[(1365, 1), int16], Tensor[(900), float32], Tensor[(11, 66), uint8]) {
  @func_4808(%var_4810, %var_4811, %var_4812) /* ty=(Tensor[(2, 3, 9), float64], Tensor[(7, 6, 1), float64], Tensor[(2, 252), bool], Tensor[(1365, 1), int16], Tensor[(900), float32], Tensor[(11, 66), uint8]) */
}

def @func_6796() -> (Tensor[(2, 3, 9), bool],) {
  @func_6794() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_763(%var_762: Tensor[(8, 13, 7), float64]) -> (Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) {
  %721 = fn (%var_721: Tensor[(8, 13, 7), float64]) -> (Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) {
    %707 = cast(%var_721, dtype="float64") /* ty=Tensor[(8, 13, 7), float64] */;
    %708 = cast(meta[relay.Constant][45] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
    %709 = cast(meta[relay.Constant][46] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %710 = reshape(%708, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), float32] */;
    %711 = reshape(%709, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %712 = @func_629(%710, %711) /* ty=(Tensor[(9, 10, 10), float32], Tensor[(15, 13, 7), int16], Tensor[(1365), int16], Tensor[(15, 13, 7), int16]) */;
    %713 = cast(meta[relay.Constant][47] /* ty=Tensor[(108, 1), float64] */, dtype="float64") /* ty=Tensor[(108, 1), float64] */;
    %714 = %712.1;
    %715 = cast(%714, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
    %716 = reshape(%713, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
    %717 = reshape(%715, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
    %718 = @func_293(%716, %717) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) */;
    %719 = atan(%707) /* ty=Tensor[(8, 13, 7), float64] */;
    %720 = %718.2;
    (%719, %714, meta[relay.Constant][45] /* ty=Tensor[(900), float32] */, meta[relay.Constant][46] /* ty=Tensor[(1365), int16] */, %720, meta[relay.Constant][47] /* ty=Tensor[(108, 1), float64] */)
  };
  %721(%var_762) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) */
}

def @func_9044(%var_8975: Tensor[(315), int32]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(7, 9, 5), float32]) {
  %722 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
  %723 = %722.0;
  %724 = cast(%723, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %725 = reshape(%724, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %726 = cast(%var_8975, dtype="int32") /* ty=Tensor[(315), int32] */;
  %727 = reshape(%726, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), int32] */;
  %728 = @func_8228(%727) /* ty=Tensor[(7, 9, 5), int32] */;
  %729 = cast(%var_8975, dtype="float32") /* ty=Tensor[(315), float32] */;
  %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%728, dtype="float32") /* ty=Tensor[(7, 9, 5), float32] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %733 = @func_2701(%725) /* ty=Tensor[(2, 3, 9), float32] */;
  %734 = divide(%731, %732) /* ty=Tensor[(7, 9, 5), float32] */;
  (%723, %733, %734)
}

def @func_5138() -> Tensor[(2, 3, 9), bool] {
  %735 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %735.0
}

def @func_6044(%var_6042: Tensor[(910), float32], %var_6043: Tensor[(2352), uint16]) -> (Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(2352), float64], Tensor[(2352), float32], Tensor[(7, 10, 13), int16], Tensor[(2352), int64]) {
  %761 = fn (%var_5964: Tensor[(910), float32], %var_6020: Tensor[(2352), uint16]) -> (Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(2352), float64], Tensor[(2352), float32], Tensor[(7, 10, 13), int16], Tensor[(2352), int64]) {
    %736 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %737 = cast(meta[relay.Constant][48] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %738 = cast(meta[relay.Constant][48] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %739 = log2(%738) /* ty=Tensor[(2352), float64] */;
    %740 = cast(meta[relay.Constant][48] /* ty=Tensor[(2352), float64] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %741 = shape_of(%739, dtype="int32") /* ty=Tensor[(1), int32] */;
    %742 = cast(%739, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?), float32] */;
    %744 = cast(%var_5964, dtype="float32") /* ty=Tensor[(910), float32] */;
    %745 = reshape(%744, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
    %746 = cast(meta[relay.Constant][48] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %747 = cast(%var_5964, dtype="float32") /* ty=Tensor[(910), float32] */;
    %748 = reshape(%746, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
    %749 = reshape(%747, newshape=[910]) /* ty=Tensor[(910), float32] */;
    %750 = @func_4508(%748, %749) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(900), float32], Tensor[(2352), uint16], Tensor[(7, 130), float32], Tensor[(910), float32], Tensor[(5, 12, 15), float64]) */;
    %751 = %750.2;
    %752 = cast(%var_6020, dtype="int64") /* ty=Tensor[(2352), int64] */;
    %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(1), int32] */;
    %754 = cast(%751, dtype="int64") /* ty=Tensor[(2352), int64] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?), int64] */;
    %756 = %736.0;
    %757 = exp(%737) /* ty=Tensor[(2352), float64] */;
    %758 = mod(%742, %743) /* ty=Tensor[(2352), float32] */;
    %759 = @func_1157(%745) /* ty=Tensor[(7, 10, 13), int16] */;
    %760 = logical_xor(%754, %755) /* ty=Tensor[(2352), int64] */;
    (%756, %var_5964, %757, %758, %759, %760)
  };
  %761(%var_6042, %var_6043) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(2352), float64], Tensor[(2352), float32], Tensor[(7, 10, 13), int16], Tensor[(2352), int64]) */
}

def @func_3029(%var_3027: Tensor[(363, 2), uint8], %var_3028: Tensor[(15, 13, 7), int16]) -> (Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) {
  @func_3025(%var_3027, %var_3028) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */
}

def @func_293(%var_251: Tensor[(4, 9, 3), float64], %var_291: Tensor[(1365), int16]) -> (Tensor[(4, 9, 3), bool], Tensor[(15, 13, 7), int16], Tensor[(1365), int16]) {
  %762 = cast(%var_251, dtype="float64") /* ty=Tensor[(4, 9, 3), float64] */;
  %763 = cosh(%762) /* ty=Tensor[(4, 9, 3), float64] */;
  %764 = cast(%763, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
  %765 = shape_of(%var_251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%var_251, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %768 = cast(%var_291, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %769 = cast(%var_291, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %770 = reshape(%768, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %771 = reshape(%769, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %772 = equal(%766, %767) /* ty=Tensor[(4, 9, 3), bool] */;
  %773 = @func_111(%770, %771) /* ty=Tensor[(15, 13, 7), int16] */;
  (%772, %773, %var_291)
}

def @func_3789() -> Tensor[(2, 3, 9), bool] {
  %774 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %774.0
}

def @func_6945() -> (Tensor[(2, 3, 9), float32],) {
  @func_6943() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_5931() -> Tensor[(2, 3, 9), bool] {
  @func_5929() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_1663(%var_1642: Tensor[(8, 9, 6), float64]) -> Tensor[(8, 9, 6), uint64] {
  %775 = cast(%var_1642, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
  %776 = tan(%775) /* ty=Tensor[(8, 9, 6), float64] */;
  %777 = cast(%var_1642, dtype="uint64") /* ty=Tensor[(8, 9, 6), uint64] */;
  %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%776, dtype="uint64") /* ty=Tensor[(8, 9, 6), uint64] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%779, %780) /* ty=Tensor[(8, 9, 6), uint64] */
}

def @func_4511(%var_4509: Tensor[(2352), float64], %var_4510: Tensor[(910), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(900), float32], Tensor[(2352), uint16], Tensor[(7, 130), float32], Tensor[(910), float32], Tensor[(5, 12, 15), float64]) {
  %804 = fn (%var_4481: Tensor[(2352), float64], %var_4489: Tensor[(910), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(900), float32], Tensor[(2352), uint16], Tensor[(7, 130), float32], Tensor[(910), float32], Tensor[(5, 12, 15), float64]) {
    %781 = @func_3327() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %782 = cast(meta[relay.Constant][49] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %783 = reshape(%782, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
    %784 = @func_1054(%783) /* ty=(Tensor[(14, 14, 12), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16]) */;
    %785 = cast(%var_4481, dtype="uint16") /* ty=Tensor[(2352), uint16] */;
    %786 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(2352), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %787 = cast(meta[relay.Constant][49] /* ty=Tensor[(2352), float64] */, dtype="uint16") /* ty=Tensor[(2352), uint16] */;
    %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %789 = cast(%var_4489, dtype="float32") /* ty=Tensor[(910), float32] */;
    %790 = %784.2;
    %791 = cast(%790, dtype="float64") /* ty=Tensor[(900), float64] */;
    %792 = reshape(%789, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
    %793 = reshape(%791, newshape=[900]) /* ty=Tensor[(900), float64] */;
    %794 = @func_3312(%792, %793) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
    %795 = %794.2;
    %796 = cast(%795, dtype="float32") /* ty=Tensor[(7, 130), float32] */;
    %797 = cast(%790, dtype="float64") /* ty=Tensor[(900), float64] */;
    %798 = reshape(%796, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
    %799 = reshape(%797, newshape=[900]) /* ty=Tensor[(900), float64] */;
    %800 = @func_3312(%798, %799) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
    %801 = %781.0;
    %802 = multiply(%787, %788) /* ty=Tensor[(2352), uint16] */;
    %803 = %800.4;
    (%801, %790, %802, %795, %var_4489, %803)
  };
  %804(%var_4509, %var_4510) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(900), float32], Tensor[(2352), uint16], Tensor[(7, 130), float32], Tensor[(910), float32], Tensor[(5, 12, 15), float64]) */
}

def @func_4024(%var_3999: Tensor[(14, 8, 12), uint8]) -> (Tensor[(14, 8, 12), bool],) {
  %805 = cast(%var_3999, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %806 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(14, 8, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 8, 12), uint8] */, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = less(%807, %808) /* ty=Tensor[(14, 8, 12), bool] */;
  (%809,)
}

def @func_6306() -> Tensor[(2, 3, 9), float32] {
  %811 = fn () -> Tensor[(2, 3, 9), float32] {
    %810 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %810.0
  };
  %811() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_6610() -> Tensor[(2, 3, 9), float32] {
  %813 = fn () -> Tensor[(2, 3, 9), float32] {
    %812 = @func_5721() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */;
    %812.0
  };
  %813() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_1157(%var_1130: Tensor[(7, 10, 13), float32]) -> Tensor[(7, 10, 13), int16] {
  %814 = cast(%var_1130, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %815 = acos(%814) /* ty=Tensor[(7, 10, 13), float32] */;
  %816 = cast(%var_1130, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%815, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%818, %819) /* ty=Tensor[(7, 10, 13), int16] */
}

def @func_8894() -> Tensor[(2, 3, 9), float32] {
  %821 = fn () -> Tensor[(2, 3, 9), float32] {
    %820 = @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */;
    %820.1
  };
  %821() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_5721() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) {
  %822 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %823 = @func_2717() /* ty=Tensor[(2, 3, 9), float32] */;
  %824 = %822.0;
  (%823, %824)
}

def @func_3108(%var_3077: Tensor[(910), float32]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  %825 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %826 = %825.0;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %828 = log2(%827) /* ty=Tensor[(2, 3, 9), float64] */;
  %829 = cast(%826, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%828, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %833 = cast(%var_3077, dtype="float32") /* ty=Tensor[(910), float32] */;
  %834 = reshape(%833, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %835 = cast(%828, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %836 = reshape(%835, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
  %837 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %838 = minimum(%831, %832) /* ty=Tensor[(2, 3, 9), float32] */;
  %839 = @func_1157(%834) /* ty=Tensor[(7, 10, 13), int16] */;
  %840 = @func_2701(%836) /* ty=Tensor[(2, 3, 9), float32] */;
  %841 = %837.0;
  (%838, %839, %var_3077, %840, %841)
}

def @func_7201(%var_7200: Tensor[(10, 15, 7), int8]) -> (Tensor[(10, 15, 7), int8], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) {
  %853 = fn (%var_7163: Tensor[(10, 15, 7), int8]) -> (Tensor[(10, 15, 7), int8], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) {
    %842 = cast(%var_7163, dtype="int8") /* ty=Tensor[(10, 15, 7), int8] */;
    %843 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(10, 15, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %844 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 15, 7), int8] */, dtype="int8") /* ty=Tensor[(10, 15, 7), int8] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %846 = cast(meta[relay.Constant][52] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %847 = cast(meta[relay.Constant][53] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
    %848 = reshape(%846, newshape=[7, 130]) /* ty=Tensor[(7, 130), float32] */;
    %849 = reshape(%847, newshape=[900]) /* ty=Tensor[(900), float64] */;
    %850 = @func_3312(%848, %849) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */;
    %851 = bitwise_xor(%844, %845) /* ty=Tensor[(10, 15, 7), int8] */;
    %852 = %850.3;
    (%851, %852, meta[relay.Constant][52] /* ty=Tensor[(910), float32] */, meta[relay.Constant][53] /* ty=Tensor[(900), float64] */)
  };
  %853(%var_7200) /* ty=(Tensor[(10, 15, 7), int8], Tensor[(2, 3, 9), float64], Tensor[(910), float32], Tensor[(900), float64]) */
}

def @func_115(%var_113: Tensor[(15, 13, 7), int16], %var_114: Tensor[(15, 13, 7), int16]) -> Tensor[(15, 13, 7), int16] {
  @func_111(%var_113, %var_114) /* ty=Tensor[(15, 13, 7), int16] */
}

def @func_7371(%var_7369: Tensor[(910), float32], %var_7370: Tensor[(4, 588), uint16]) -> (Tensor[(2, 3, 9), bool], Tensor[(910), float32], Tensor[(4, 588), uint16], Tensor[(1365), bool]) {
  %869 = fn (%var_7340: Tensor[(910), float32], %var_7341: Tensor[(4, 588), uint16]) -> (Tensor[(2, 3, 9), bool], Tensor[(910), float32], Tensor[(4, 588), uint16], Tensor[(1365), bool]) {
    %854 = @func_6873() /* ty=(Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) */;
    %855 = cast(%var_7340, dtype="float32") /* ty=Tensor[(910), float32] */;
    %856 = cast(%var_7341, dtype="uint16") /* ty=Tensor[(4, 588), uint16] */;
    %857 = reshape(%855, newshape=[910]) /* ty=Tensor[(910), float32] */;
    %858 = reshape(%856, newshape=[12, 196]) /* ty=Tensor[(12, 196), uint16] */;
    %859 = @func_6472(%857, %858) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32], Tensor[(910), float32], Tensor[(12, 196), uint16]) */;
    %860 = %859.4;
    %861 = cast(%860, dtype="uint16") /* ty=Tensor[(12, 196), uint16] */;
    %862 = shape_of(%var_7341, dtype="int32") /* ty=Tensor[(2), int32] */;
    %863 = cast(%var_7341, dtype="uint16") /* ty=Tensor[(4, 588), uint16] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %865 = @func_4180() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(1, 432), uint64], Tensor[(1365), bool]) */;
    %866 = %854.1;
    %867 = bitwise_or(%863, %864) /* ty=Tensor[(4, 588), uint16] */;
    %868 = %865.2;
    (%866, %var_7340, %867, %868)
  };
  %869(%var_7369, %var_7370) /* ty=(Tensor[(2, 3, 9), bool], Tensor[(910), float32], Tensor[(4, 588), uint16], Tensor[(1365), bool]) */
}

def @func_4137(%var_4135: Tensor[(2, 3, 9), bool]) -> (Tensor[(2, 3, 9), uint32],) {
  @func_4134(%var_4135) /* ty=(Tensor[(2, 3, 9), uint32],) */
}

def @func_3891(%var_3889: Tensor[(14, 10, 5), float64]) -> (Tensor[(14, 10, 5), float64],) {
  @func_3888(%var_3889) /* ty=(Tensor[(14, 10, 5), float64],) */
}

def @func_8182() -> (Tensor[(11, 6, 14), float32], Tensor[(2, 3, 9), float64]) {
  @func_8180() /* ty=(Tensor[(11, 6, 14), float32], Tensor[(2, 3, 9), float64]) */
}

def @func_9047(%var_9045: Tensor[(315), int32]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(7, 9, 5), float32]) {
  @func_9044(%var_9045) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(7, 9, 5), float32]) */
}

def @func_5140() -> Tensor[(2, 3, 9), bool] {
  @func_5138() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_2971() -> (Tensor[(2, 3, 9), bool],) {
  %870 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %871 = %870.0;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(2, 3, 9), float64] */;
  %873 = rsqrt(%872) /* ty=Tensor[(2, 3, 9), float64] */;
  %874 = cast(%873, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %875 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%871, dtype="bool") /* ty=Tensor[(2, 3, 9), bool] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %878 = not_equal(%876, %877) /* ty=Tensor[(2, 3, 9), bool] */;
  (%878,)
}

def @func_1991(%var_1964: Tensor[(9, 14, 12), float32], %var_1965: Tensor[(9, 14, 12), float32]) -> (Tensor[(9, 14, 12), bool], Tensor[(7, 10, 13), int16], Tensor[(910), float32], Tensor[(7, 10, 13), int16], Tensor[(108, 1), float64], Tensor[(728), float64]) {
  %879 = cast(%var_1965, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %880 = shape_of(%var_1964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%var_1964, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %883 = cast(meta[relay.Constant][54] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %884 = reshape(%883, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %885 = @func_1157(%884) /* ty=Tensor[(7, 10, 13), int16] */;
  %886 = cast(%885, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %887 = reshape(%886, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %888 = cast(meta[relay.Constant][55] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %889 = reshape(%888, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %890 = @func_761(%889) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(108, 1), float64]) */;
  %891 = not_equal(%881, %882) /* ty=Tensor[(9, 14, 12), bool] */;
  %892 = @func_1157(%887) /* ty=Tensor[(7, 10, 13), int16] */;
  %893 = %890.5;
  (%891, %885, meta[relay.Constant][54] /* ty=Tensor[(910), float32] */, %892, %893, meta[relay.Constant][55] /* ty=Tensor[(728), float64] */)
}

def @func_8339() -> (Tensor[(2, 3, 9), float32],) {
  %896 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %894 = @func_2681() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %895 = %894.0;
    (%895,)
  };
  %896() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_6636() -> (Tensor[(2, 3, 9), bool],) {
  %898 = fn () -> (Tensor[(2, 3, 9), bool],) {
    %897 = @func_6345() /* ty=Tensor[(2, 3, 9), bool] */;
    (%897,)
  };
  %898() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_2973() -> (Tensor[(2, 3, 9), bool],) {
  @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_5242() -> (Tensor[(726), uint8],) {
  %899 = @func_4614() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(726), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float64]) */;
  %900 = %899.1;
  (%900,)
}

def @func_3860(%var_3795: Tensor[(4, 9, 14), bool], %var_3796: Tensor[(4, 9, 14), bool], %var_3808: Tensor[(1365), int16], %var_3809: Tensor[(900), float32], %var_3829: Tensor[(726), uint8]) -> (Tensor[(4, 9, 14), bool], Tensor[(900), float32], Tensor[(5, 12, 15), float64], Tensor[(726), uint8], Tensor[(9, 10, 10), float32], Tensor[(2, 3, 9), bool], Tensor[(15, 13, 7), float32], Tensor[(1365), float64]) {
  %901 = cast(%var_3796, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %902 = shape_of(%var_3795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_3795, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = cast(%var_3808, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %906 = cast(%var_3809, dtype="float32") /* ty=Tensor[(900), float32] */;
  %907 = reshape(%905, newshape=[7, 195]) /* ty=Tensor[(7, 195), int16] */;
  %908 = reshape(%906, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %909 = @func_975(%907, %908) /* ty=(Tensor[(15, 13, 7), int16], Tensor[(7, 195), int16], Tensor[(5, 9, 12), float32], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(15, 13, 7), int16], Tensor[(900), float32], Tensor[(8, 13, 7), float64], Tensor[(9, 10, 10), float32]) */;
  %910 = %909.8;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(9, 10, 10), float64] */;
  %912 = reshape(%911, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), float64] */;
  %913 = cast(%910, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %914 = @func_2971() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %915 = cast(%var_3829, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %916 = cast(%var_3808, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %917 = reshape(%915, newshape=[363, 2]) /* ty=Tensor[(363, 2), uint8] */;
  %918 = reshape(%916, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), int16] */;
  %919 = @func_3025(%917, %918) /* ty=(Tensor[(363, 2), uint8], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), float32], Tensor[(2, 3, 9), float32]) */;
  %920 = %919.2;
  %921 = cast(%920, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %922 = cast(%var_3808, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %923 = logical_or(%903, %904) /* ty=Tensor[(4, 9, 14), bool] */;
  %924 = @func_857(%912) /* ty=Tensor[(5, 12, 15), float64] */;
  %925 = rsqrt(%913) /* ty=Tensor[(9, 10, 10), float32] */;
  %926 = %914.0;
  %927 = acos(%921) /* ty=Tensor[(15, 13, 7), float32] */;
  %928 = acos(%922) /* ty=Tensor[(1365), float64] */;
  (%923, %var_3809, %924, %var_3829, %925, %926, %927, %928)
}

def @func_6873() -> (Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), bool]) {
  %929 = @func_5929() /* ty=Tensor[(2, 3, 9), bool] */;
  %930 = @func_5929() /* ty=Tensor[(2, 3, 9), bool] */;
  (%929, %930)
}

def @func_8322() -> Tensor[(2, 3, 9), bool] {
  %931 = @func_4652() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %931.0
}

def @func_3265() -> Tensor[(2, 3, 9), bool] {
  @func_3263() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_8751() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  %932 = @func_7950() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %933 = %932.0;
  %934 = cast(%933, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
  %935 = @func_8338() /* ty=(Tensor[(2, 3, 9), float32],) */;
  %936 = erf(%934) /* ty=Tensor[(2, 3, 9), float32] */;
  %937 = %935.0;
  (%936, %937)
}

def @func_8324() -> Tensor[(2, 3, 9), bool] {
  @func_8322() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_5444() -> Tensor[(2, 3, 9), float32] {
  %938 = fn () -> Tensor[(2, 3, 9), float32] {
    @func_2717() /* ty=Tensor[(2, 3, 9), float32] */
  };
  %938() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_1160(%var_1158: Tensor[(7, 10, 13), float32]) -> Tensor[(7, 10, 13), int16] {
  @func_1157(%var_1158) /* ty=Tensor[(7, 10, 13), int16] */
}

def @func_2682() -> (Tensor[(2, 3, 9), float32],) {
  %941 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %939 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 3, 9), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
    %940 = log10(%939) /* ty=Tensor[(2, 3, 9), float32] */;
    (%940,)
  };
  %941() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_7829(%var_7825: Tensor[(77), int64], %var_7826: Tensor[(1, 539), int64], %var_7827: Tensor[(455, 3), int16], %var_7828: Tensor[(455, 3), int16]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(1, 539), int64], Tensor[(900), float32], Tensor[(455, 3), int64]) {
  @func_7823(%var_7825, %var_7826, %var_7827, %var_7828) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(1, 539), int64], Tensor[(900), float32], Tensor[(455, 3), int64]) */
}

def @func_5244() -> (Tensor[(726), uint8],) {
  @func_5242() /* ty=(Tensor[(726), uint8],) */
}

def @func_8423(%var_8422: Tensor[(1365), int16]) -> (Tensor[(8, 4, 10), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(539), int64], Tensor[(1365), int16]) {
  %954 = fn (%var_8414: Tensor[(1365), int16]) -> (Tensor[(8, 4, 10), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(539), int64], Tensor[(1365), int16]) {
    %942 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 4, 10), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
    %943 = cast(meta[relay.Constant][58] /* ty=Tensor[(77), int64] */, dtype="int64") /* ty=Tensor[(77), int64] */;
    %944 = cast(meta[relay.Constant][59] /* ty=Tensor[(539), int64] */, dtype="int64") /* ty=Tensor[(539), int64] */;
    %945 = cast(%var_8414, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %946 = cast(%var_8414, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %947 = reshape(%943, newshape=[77]) /* ty=Tensor[(77), int64] */;
    %948 = reshape(%944, newshape=[1, 539]) /* ty=Tensor[(1, 539), int64] */;
    %949 = reshape(%945, newshape=[455, 3]) /* ty=Tensor[(455, 3), int16] */;
    %950 = reshape(%946, newshape=[455, 3]) /* ty=Tensor[(455, 3), int16] */;
    %951 = @func_7823(%947, %948, %949, %950) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(1, 539), int64], Tensor[(900), float32], Tensor[(455, 3), int64]) */;
    %952 = acos(%942) /* ty=Tensor[(8, 4, 10), float32] */;
    %953 = %951.1;
    (%952, %953, meta[relay.Constant][58] /* ty=Tensor[(77), int64] */, meta[relay.Constant][59] /* ty=Tensor[(539), int64] */, %var_8414)
  };
  %954(%var_8422) /* ty=(Tensor[(8, 4, 10), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(539), int64], Tensor[(1365), int16]) */
}

def @func_7823(%var_7813: Tensor[(77), int64], %var_7814: Tensor[(1, 539), int64], %var_7815: Tensor[(455, 3), int16], %var_7818: Tensor[(455, 3), int16]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 11, 7), bool], Tensor[(77), int64], Tensor[(1, 539), int64], Tensor[(900), float32], Tensor[(455, 3), int64]) {
  %955 = cast(%var_7813, dtype="int64") /* ty=Tensor[(77), int64] */;
  %956 = cast(%var_7814, dtype="int64") /* ty=Tensor[(1, 539), int64] */;
  %957 = cast(%var_7815, dtype="int16") /* ty=Tensor[(455, 3), int16] */;
  %958 = cast(meta[relay.Constant][60] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %959 = reshape(%955, newshape=[7, 11, 1]) /* ty=Tensor[(7, 11, 1), int64] */;
  %960 = reshape(%956, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), int64] */;
  %961 = reshape(%957, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %962 = reshape(%958, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %963 = @func_3986(%959, %960, %961, %962) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(15, 13, 7), float32], Tensor[(726, 1), uint8], Tensor[(1365), int16], Tensor[(2, 3, 9), float32], Tensor[(15, 13, 7), int16], Tensor[(900), float32]) */;
  %964 = cast(%var_7818, dtype="int64") /* ty=Tensor[(455, 3), int64] */;
  %965 = shape_of(%var_7815, dtype="int32") /* ty=Tensor[(2), int32] */;
  %966 = cast(%var_7815, dtype="int64") /* ty=Tensor[(455, 3), int64] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %968 = @func_7550() /* ty=Tensor[(2, 3, 9), float32] */;
  %969 = %963.0;
  %970 = maximum(%966, %967) /* ty=Tensor[(455, 3), int64] */;
  (%968, %969, %var_7813, %var_7814, meta[relay.Constant][60] /* ty=Tensor[(900), float32] */, %970)
}

def @func_3316(%var_3314: Tensor[(7, 130), float32], %var_3315: Tensor[(900), float64]) -> (Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) {
  @func_3312(%var_3314, %var_3315) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(7, 10, 13), int16], Tensor[(7, 130), float32], Tensor[(2, 3, 9), float64], Tensor[(5, 12, 15), float64], Tensor[(900), float64]) */
}

def @func_5852() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) {
  @func_5850() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32]) */
}

def @func_4027(%var_4025: Tensor[(14, 8, 12), uint8]) -> (Tensor[(14, 8, 12), bool],) {
  @func_4024(%var_4025) /* ty=(Tensor[(14, 8, 12), bool],) */
}

def @func_3654() -> Tensor[(2, 3, 9), float32] {
  @func_3652() /* ty=Tensor[(2, 3, 9), float32] */
}

def @func_7127() -> (Tensor[(2, 3, 9), bool],) {
  %973 = fn () -> (Tensor[(2, 3, 9), bool],) {
    %971 = @func_6635() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %972 = %971.0;
    (%972,)
  };
  %973() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_8048() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) {
  @func_8046() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool], Tensor[(2, 3, 9), float32]) */
}

def @func_4305() -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) {
  %980 = fn () -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) {
    %974 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %975 = %974.0;
    %976 = cast(%975, dtype="float32") /* ty=Tensor[(2, 3, 9), float32] */;
    %977 = reshape(%976, newshape=[2, 3, 9]) /* ty=Tensor[(2, 3, 9), float32] */;
    %978 = @func_3149(%977) /* ty=(Tensor[(2, 3, 9), bool],) */;
    %979 = %978.0;
    (%975, %979)
  };
  %980() /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), bool]) */
}

def @func_7334() -> (Tensor[(2, 3, 9), bool],) {
  %983 = fn () -> (Tensor[(2, 3, 9), bool],) {
    %981 = @func_3716() /* ty=(Tensor[(2, 3, 9), bool],) */;
    %982 = %981.0;
    (%982,)
  };
  %983() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_7796() -> (Tensor[(2, 3, 9), bool],) {
  @func_7794() /* ty=(Tensor[(2, 3, 9), bool],) */
}

def @func_7766() -> (Tensor[(2, 3, 9), float32],) {
  %986 = fn () -> (Tensor[(2, 3, 9), float32],) {
    %984 = @func_2815() /* ty=(Tensor[(2, 3, 9), float32],) */;
    %985 = %984.0;
    (%985,)
  };
  %986() /* ty=(Tensor[(2, 3, 9), float32],) */
}

def @func_860(%var_858: Tensor[(5, 12, 15), float64]) -> Tensor[(5, 12, 15), float64] {
  @func_857(%var_858) /* ty=Tensor[(5, 12, 15), float64] */
}

def @func_7018() -> Tensor[(2, 3, 9), bool] {
  @func_3789() /* ty=Tensor[(2, 3, 9), bool] */
}

def @func_6188(%var_6163: Tensor[(2, 7, 15), float32], %var_6182: Tensor[(1365), int16]) -> (Tensor[(2, 3, 9), bool], Tensor[(2, 7, 15), int16], Tensor[(16, 2, 16), int32], Tensor[(512), uint8], Tensor[(6, 84), bool], Tensor[(1365), int16], Tensor[(900), float32], Tensor[(726), uint8]) {
  %987 = @func_3775() /* ty=(Tensor[(2, 3, 9), bool],) */;
  %988 = cast(%var_6163, dtype="float32") /* ty=Tensor[(2, 7, 15), float32] */;
  %989 = atanh(%988) /* ty=Tensor[(2, 7, 15), float32] */;
  %990 = cast(%var_6163, dtype="int16") /* ty=Tensor[(2, 7, 15), int16] */;
  %991 = shape_of(%989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(%989, dtype="int16") /* ty=Tensor[(2, 7, 15), int16] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %994 = cast(meta[relay.Constant][61] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %995 = cast(meta[relay.Constant][61] /* ty=Tensor[(512), uint8] */, dtype="uint8") /* ty=Tensor[(512), uint8] */;
  %996 = cast(meta[relay.Constant][62] /* ty=Tensor[(6, 84), bool] */, dtype="bool") /* ty=Tensor[(6, 84), bool] */;
  %997 = cast(%var_6182, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %998 = cast(meta[relay.Constant][63] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %999 = cast(meta[relay.Constant][64] /* ty=Tensor[(726), uint8] */, dtype="uint8") /* ty=Tensor[(726), uint8] */;
  %1000 = reshape(%994, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %1001 = reshape(%995, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), uint8] */;
  %1002 = reshape(%996, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1003 = reshape(%997, newshape=[1365]) /* ty=Tensor[(1365), int16] */;
  %1004 = reshape(%998, newshape=[90, 10]) /* ty=Tensor[(90, 10), float32] */;
  %1005 = reshape(%999, newshape=[726]) /* ty=Tensor[(726), uint8] */;
  %1006 = @func_4096(%1000, %1001, %1002, %1003, %1004, %1005) /* ty=(Tensor[(16, 2, 16), int32], Tensor[(1365), float64], Tensor[(504), bool], Tensor[(1365), int16], Tensor[(90, 10), float32], Tensor[(726), uint8], Tensor[(16, 2, 16), float32]) */;
  %1007 = %987.0;
  %1008 = subtract(%992, %993) /* ty=Tensor[(2, 7, 15), int16] */;
  %1009 = %1006.0;
  (%1007, %1008, %1009, meta[relay.Constant][61] /* ty=Tensor[(512), uint8] */, meta[relay.Constant][62] /* ty=Tensor[(6, 84), bool] */, %var_6182, meta[relay.Constant][63] /* ty=Tensor[(900), float32] */, meta[relay.Constant][64] /* ty=Tensor[(726), uint8] */)
}

def @func_3507(%var_3505: Tensor[(1, 726), uint8], %var_3506: Tensor[(1365, 1), int16]) -> (Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(1, 726), uint8], Tensor[(1365, 1), int16]) {
  @func_3503(%var_3505, %var_3506) /* ty=(Tensor[(2, 3, 9), float32], Tensor[(2, 3, 9), float32], Tensor[(1, 726), uint8], Tensor[(1365, 1), int16]) */
}

def @func_111(%var_103: Tensor[(15, 13, 7), int16], %var_104: Tensor[(15, 13, 7), int16]) -> Tensor[(15, 13, 7), int16] {
  %1010 = cast(%var_104, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
  %1011 = shape_of(%var_103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%var_103, dtype="int16") /* ty=Tensor[(15, 13, 7), int16] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%1012, %1013) /* ty=Tensor[(15, 13, 7), int16] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen310/build/output.py:2425: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen310/build/output.py", line 2430, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(168) tvmgen_default_fused_asinh_kernel0(float* __restrict__ T_asinh, float* __restrict__ placeholder) {
  T_asinh[(((int)threadIdx.x))] = asinhf(placeholder[(((int)threadIdx.x))]);
}

extern "C" __global__ void __launch_bounds__(168) tvmgen_default_fused_cast_cast_reshape_left_shift_kernel0(int* __restrict__ T_left_shift, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_left_shift[(((int)threadIdx.x))] = (((int)placeholder[(((int)threadIdx.x))]) << ((int)placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


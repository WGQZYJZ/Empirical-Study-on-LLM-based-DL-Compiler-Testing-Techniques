import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_10 = relay.const([[[0.895338,-3.917343,4.020637,3.981252,0.589905,-1.251517,-3.220801,8.683692,-0.920631,0.466619],[-7.088930,9.117526,2.552565,-0.235520,2.744967,4.325364,-0.184404,-5.995922,-3.362378,3.346927],[4.149335,-0.843862,-6.457604,4.426826,-9.227773,-7.511074,2.532710,-1.908898,-7.808784,-5.232248],[-5.714017,-9.288779,1.702865,-9.868404,0.133516,-9.643761,0.468517,-0.997592,-4.905389,0.001291],[4.515878,1.623123,7.900599,3.206177,-2.318886,1.482402,4.524850,-4.982689,1.531559,-4.061947],[-2.418950,7.596761,-7.088536,9.400605,0.524002,7.381257,-6.162743,1.222877,5.052605,-7.317718],[-1.250427,-4.012133,1.015234,8.975293,-2.379313,0.134528,-7.533570,-6.547852,8.544269,3.994837],[-9.714873,0.688100,5.770402,-8.249911,0.877711,-2.531247,7.473702,-5.285377,6.298967,2.447128],[6.717253,9.079597,2.175824,-7.446408,5.104135,1.915457,0.408172,2.879861,-2.164448,8.719702],[-5.132454,2.532288,-7.029766,-8.120345,4.694205,2.653947,4.608995,-8.245142,7.472633,5.128323],[-4.199120,-8.019666,9.934222,-4.101129,-1.283483,4.012576,-7.915382,-6.428553,-4.889562,-6.715125]],[[-3.683143,8.110436,-1.774064,-6.149552,-8.981328,4.806372,-3.739903,-1.485632,7.508497,9.574811],[-2.350240,-1.281401,-4.151838,-3.780177,8.911411,-3.687895,-7.720449,9.901371,-5.767696,-8.253311],[7.231262,3.770059,-6.742357,8.113075,3.736861,6.352342,-9.235122,-9.711899,-7.056553,8.299756],[2.700361,1.283422,4.054802,8.985729,-1.580676,7.777429,6.207567,7.082810,-3.720917,4.293491],[-8.644222,-6.257260,-1.063979,8.854354,9.856335,-2.255404,-0.566563,-8.725230,6.801908,0.543910],[-9.528794,6.014433,-1.795767,9.239808,-7.397259,-6.680712,7.425030,4.240708,6.584234,-8.278438],[0.911615,8.532743,-8.647511,-1.339063,9.549015,2.445819,-1.622230,0.862504,1.022818,0.498535],[4.611702,-0.931119,-5.703828,-1.911970,-9.932660,-9.114089,-7.382436,-1.923226,-4.666463,-9.238907],[-7.467796,9.903990,-9.195706,4.549604,1.542343,5.696020,-3.378714,9.509118,1.281832,-4.752806],[-3.069463,-5.637905,8.854532,5.374697,6.581808,4.496924,0.060016,-3.745669,-2.055294,9.811709],[-4.662645,-1.552155,9.578968,-4.948076,-8.714560,-0.787362,7.407903,8.815604,2.185891,-7.862343]],[[-0.136832,6.254786,-9.983729,2.924394,5.180988,-5.110387,-7.824874,9.339779,-1.013299,-0.202518],[-4.998505,5.029717,0.733090,-5.257305,5.284235,3.529703,7.245662,4.093423,-5.857336,-2.343831],[-6.658371,-9.864177,3.737651,-7.738523,1.611893,-7.747142,9.005980,2.236892,-1.099570,-5.187111],[4.967197,6.392209,-3.314948,-9.001441,-3.993911,-0.234553,-3.968110,4.705830,-5.372923,7.333104],[-5.478885,-5.436217,-8.896526,0.530790,3.758956,-2.838182,9.609592,9.661013,2.066739,8.447761],[-4.896865,-9.299363,-8.924803,0.205634,3.530709,-6.512188,-0.150983,8.494194,-6.731701,-8.061237],[-1.413438,-1.561694,-0.133403,7.502398,-7.156376,8.224203,5.136931,2.395167,1.980143,-6.236709],[3.014804,2.547326,0.030282,-0.983786,4.228908,-0.364148,-9.442034,0.050875,-9.704492,-7.439357],[1.983980,-7.439953,0.102642,-0.307037,-2.975774,7.376412,9.602817,0.135913,1.627543,4.342521],[-0.644380,4.950458,-3.765617,-4.136014,4.807957,3.233826,-7.701964,2.548290,9.965683,0.664426],[3.603895,-5.172757,0.684863,8.767384,3.181335,5.501671,-7.373344,-6.671781,4.665133,-1.149521]],[[2.780216,-4.707763,0.857765,7.761371,2.638986,-7.377337,9.418573,-8.840192,-8.341395,-9.416977],[-8.498790,-3.093787,-8.598414,9.408265,5.063532,-4.379956,-2.788972,-5.381704,6.974078,-7.752857],[-7.340967,8.821144,5.151536,-7.178010,8.691398,-7.109764,-6.642404,9.551049,5.612834,4.730604],[-4.453146,-0.276276,-9.244627,-6.217448,-5.242296,-7.571656,0.199573,3.567515,9.184577,-6.878476],[-4.562985,-7.428651,2.391839,9.295784,8.361168,6.474313,-2.011682,-4.931180,9.125004,-6.287805],[6.514950,-4.198109,-2.317660,-8.193010,-2.990571,0.660271,9.982509,7.996236,8.485492,5.268115],[5.041800,-7.507423,-8.295302,-6.960557,1.306052,-3.712640,-1.735604,5.136779,-0.997538,-8.776765],[-7.627344,8.981302,-4.429973,5.432115,5.281740,-1.407653,1.667174,-1.845701,6.217117,4.493152],[-6.894603,9.973299,6.613057,4.622327,-1.787504,-9.466981,6.504816,-4.391680,-9.742030,2.972958],[4.601467,8.014384,-1.314570,-1.649831,-7.352083,-7.293786,3.864056,8.320759,-4.031096,-7.504911],[8.134259,-7.541467,-6.526618,-4.443159,-9.183466,-8.771171,5.453982,-9.377670,-1.052800,2.779818]],[[8.167253,1.365974,8.165473,1.225738,4.128212,4.765773,-7.015064,-3.522224,-4.610924,2.604905],[-2.962203,-4.744661,3.641907,-3.799522,-6.815425,0.254623,3.404484,-2.248607,6.935826,6.434273],[-4.874763,6.573178,-4.710238,0.939173,-2.932702,7.941961,3.898356,-5.360859,-2.863143,-6.035017],[-0.296364,-4.674960,-7.514569,1.311685,-1.999163,-2.265851,8.363010,1.509850,6.945961,-4.713511],[-9.593125,5.104366,-9.539345,-6.537997,-7.368062,7.344951,-1.685415,-5.783732,-7.355438,5.736285],[-2.934972,8.742902,5.069956,3.842905,-9.307707,8.199367,9.187596,-8.414698,-2.899568,8.056501],[4.739431,-6.961073,-5.055750,-8.839187,-0.921461,-9.045317,1.834916,-1.342682,-8.471542,-1.145005],[3.142554,4.382730,-5.944203,-1.182756,8.087877,4.709158,-3.357540,-5.201575,-4.520066,-2.655397],[-5.461785,-2.916147,-6.625644,7.718669,-6.266064,3.623722,3.702776,4.338807,-8.175609,-5.941614],[3.153525,-1.988178,1.798402,-0.153532,5.835764,-1.341888,3.200221,-9.046716,4.902331,7.974567],[6.426680,-1.455382,1.892289,-7.717578,6.965037,1.174087,-9.259332,9.609476,1.069569,1.510653]],[[-4.431247,-7.390449,-4.840095,6.612014,-0.986570,-6.177206,-1.228101,-4.830139,-9.552740,0.507920],[-9.830944,-1.756073,9.644714,-4.493287,5.253119,1.138943,-4.422825,-5.535937,-8.770886,-9.654374],[-8.923867,-8.082628,2.151229,-3.861670,4.643050,-5.059375,6.124810,-3.950602,-7.784580,4.791650],[6.247287,5.122205,-6.602193,-1.454309,1.151962,-4.735616,2.948634,-2.951294,2.426107,-0.901914],[1.298175,-9.133692,5.762492,8.179251,-7.450225,-4.421765,4.210336,2.348857,9.630154,8.662430],[-1.479123,-5.944490,-8.435935,8.314466,2.817416,1.701954,-9.930538,1.310703,-7.917226,1.243239],[1.097708,-1.115580,4.306140,3.065864,-2.426095,0.770628,-0.793119,-4.505747,0.179449,-9.831737],[-2.945276,7.413862,-3.914917,-3.537486,7.626086,9.363981,0.292277,3.725681,0.394620,2.761646],[4.016558,-3.144308,-1.589353,6.598701,-8.429448,8.699965,4.016478,6.845869,9.495274,-0.011066],[4.559521,-9.229516,-7.183190,8.025939,-9.206971,9.342475,-2.331328,2.977079,-1.031179,-3.770137],[-0.367084,4.480975,-9.947656,7.675859,5.817857,-2.185204,4.105823,0.058909,-6.980518,1.009961]],[[-3.315667,6.813289,1.113149,4.641847,1.195248,-4.055323,9.392524,9.464438,6.098064,-5.508458],[-7.621994,7.774006,9.451384,3.792592,-4.074195,-5.572730,4.821214,9.375581,-6.854958,0.354284],[-9.404604,7.937480,6.178368,2.737632,-8.554764,2.355983,-0.763784,-4.017110,-9.297050,3.122646],[0.296040,3.145491,9.168644,0.253211,3.709503,2.051748,-6.867182,-5.259621,8.105501,-8.045144],[3.766494,1.665107,6.287437,6.100607,0.521529,-0.626631,-4.160149,-1.600673,-6.582592,2.806395],[-5.787922,2.590906,7.619184,-9.602755,1.137205,-3.744407,4.085683,-6.271474,-3.823273,-2.505091],[-4.084865,-3.443732,-4.640853,5.711505,-5.312259,-8.174540,0.204799,0.301917,4.351621,-2.012314],[0.619039,8.000685,-2.551785,2.590918,0.168987,-2.009570,-1.838315,-4.004352,6.840031,2.690026],[-4.408738,-5.603080,1.988597,2.135171,-1.952030,3.987542,-6.152023,-9.014265,-2.621287,6.486639],[1.924917,6.722121,-8.466166,-5.497923,5.879314,7.035124,7.363040,-1.361581,-2.715793,-6.100301],[3.394248,-6.937948,-2.569344,-7.957412,-3.722435,2.934123,6.382694,3.940264,-9.230073,-3.017543]]], dtype = "float64")#candidate|10|(7, 11, 10)|const|float64
uop_11 = relay.sinh(const_10.astype('float64')) # shape=(7, 11, 10)
output = relay.Tuple([uop_11,])
output2 = relay.Tuple([uop_11,])
func_21 = relay.Function([], output)
mod['func_21'] = func_21
mod = relay.transform.InferType()(mod)
mutated_mod['func_21'] = func_21
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mutated_mod.get_global_var('func_21')
call_22 = func_21_call()
output = call_22
func_23 = relay.Function([], output)
mutated_mod['func_23'] = func_23
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_31 = relay.TupleGetItem(func_21_call(), 0)
call_32 = relay.TupleGetItem(func_23_call(), 0)
output = call_31
output2 = call_32
func_55 = relay.Function([], output)
mod['func_55'] = func_55
mod = relay.transform.InferType()(mod)
mutated_mod['func_55'] = func_55
mutated_mod = relay.transform.InferType()(mutated_mod)
func_55_call = mutated_mod.get_global_var('func_55')
call_56 = func_55_call()
output = call_56
func_57 = relay.Function([], output)
mutated_mod['func_57'] = func_57
mutated_mod = relay.transform.InferType()(mutated_mod)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_75 = func_55_call()
call_76 = func_55_call()
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_78 = relay.TupleGetItem(func_21_call(), 0)
call_79 = relay.TupleGetItem(func_23_call(), 0)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_81 = relay.TupleGetItem(func_21_call(), 0)
call_82 = relay.TupleGetItem(func_23_call(), 0)
uop_97 = relay.log(call_75.astype('float32')) # shape=(7, 11, 10)
uop_99 = relay.log(call_76.astype('float32')) # shape=(7, 11, 10)
output = relay.Tuple([call_78,call_81,uop_97,])
output2 = relay.Tuple([call_79,call_82,uop_99,])
func_113 = relay.Function([], output)
mod['func_113'] = func_113
mod = relay.transform.InferType()(mod)
mutated_mod['func_113'] = func_113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_113_call = mutated_mod.get_global_var('func_113')
call_114 = func_113_call()
output = call_114
func_115 = relay.Function([], output)
mutated_mod['func_115'] = func_115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_156 = func_55_call()
call_157 = func_55_call()
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_160 = relay.TupleGetItem(func_113_call(), 2)
call_161 = relay.TupleGetItem(func_115_call(), 2)
bop_162 = relay.floor_mod(call_160.astype('float32'), relay.reshape(call_156.astype('float32'), relay.shape_of(call_160))) # shape=(7, 11, 10)
bop_165 = relay.floor_mod(call_161.astype('float32'), relay.reshape(call_157.astype('float32'), relay.shape_of(call_161))) # shape=(7, 11, 10)
output = bop_162
output2 = bop_165
func_171 = relay.Function([], output)
mod['func_171'] = func_171
mod = relay.transform.InferType()(mod)
mutated_mod['func_171'] = func_171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_171_call = mutated_mod.get_global_var('func_171')
call_172 = func_171_call()
output = call_172
func_173 = relay.Function([], output)
mutated_mod['func_173'] = func_173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_205 = relay.var("var_205", dtype = "float32", shape = (11, 4, 3))#candidate|205|(11, 4, 3)|var|float32
uop_206 = relay.asinh(var_205.astype('float32')) # shape=(11, 4, 3)
output = relay.Tuple([uop_206,])
output2 = relay.Tuple([uop_206,])
func_214 = relay.Function([var_205,], output)
mod['func_214'] = func_214
mod = relay.transform.InferType()(mod)
var_215 = relay.var("var_215", dtype = "float32", shape = (11, 4, 3))#candidate|215|(11, 4, 3)|var|float32
output = func_214(var_215)
func_216 = relay.Function([var_215], output)
mutated_mod['func_216'] = func_216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_255 = relay.TupleGetItem(func_21_call(), 0)
call_256 = relay.TupleGetItem(func_23_call(), 0)
uop_267 = relay.rsqrt(call_255.astype('float64')) # shape=(7, 11, 10)
uop_269 = relay.rsqrt(call_256.astype('float64')) # shape=(7, 11, 10)
output = uop_267
output2 = uop_269
func_271 = relay.Function([], output)
mod['func_271'] = func_271
mod = relay.transform.InferType()(mod)
mutated_mod['func_271'] = func_271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_271_call = mutated_mod.get_global_var('func_271')
call_272 = func_271_call()
output = call_272
func_273 = relay.Function([], output)
mutated_mod['func_273'] = func_273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_350 = func_271_call()
call_351 = func_271_call()
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_352 = func_271_call()
call_353 = func_271_call()
bop_356 = relay.equal(call_350.astype('bool'), relay.reshape(call_352.astype('bool'), relay.shape_of(call_350))) # shape=(7, 11, 10)
bop_359 = relay.equal(call_351.astype('bool'), relay.reshape(call_353.astype('bool'), relay.shape_of(call_351))) # shape=(7, 11, 10)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_361 = func_55_call()
call_362 = func_55_call()
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_363 = func_55_call()
call_364 = func_55_call()
output = relay.Tuple([bop_356,call_361,call_363,])
output2 = relay.Tuple([bop_359,call_362,call_364,])
func_366 = relay.Function([], output)
mod['func_366'] = func_366
mod = relay.transform.InferType()(mod)
mutated_mod['func_366'] = func_366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_366_call = mutated_mod.get_global_var('func_366')
call_367 = func_366_call()
output = call_367
func_368 = relay.Function([], output)
mutated_mod['func_368'] = func_368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_379 = relay.var("var_379", dtype = "float32", shape = (7, 13, 15))#candidate|379|(7, 13, 15)|var|float32
uop_380 = relay.cos(var_379.astype('float32')) # shape=(7, 13, 15)
output = relay.Tuple([uop_380,])
output2 = relay.Tuple([uop_380,])
func_384 = relay.Function([var_379,], output)
mod['func_384'] = func_384
mod = relay.transform.InferType()(mod)
mutated_mod['func_384'] = func_384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_385 = relay.var("var_385", dtype = "float32", shape = (7, 13, 15))#candidate|385|(7, 13, 15)|var|float32
func_384_call = mutated_mod.get_global_var('func_384')
call_386 = func_384_call(var_385)
output = call_386
func_387 = relay.Function([var_385], output)
mutated_mod['func_387'] = func_387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_395 = relay.var("var_395", dtype = "float32", shape = (12, 9, 6))#candidate|395|(12, 9, 6)|var|float32
uop_396 = relay.acos(var_395.astype('float32')) # shape=(12, 9, 6)
output = uop_396
output2 = uop_396
func_403 = relay.Function([var_395,], output)
mod['func_403'] = func_403
mod = relay.transform.InferType()(mod)
mutated_mod['func_403'] = func_403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_404 = relay.var("var_404", dtype = "float32", shape = (12, 9, 6))#candidate|404|(12, 9, 6)|var|float32
func_403_call = mutated_mod.get_global_var('func_403')
call_405 = func_403_call(var_404)
output = call_405
func_406 = relay.Function([var_404], output)
mutated_mod['func_406'] = func_406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_478 = relay.var("var_478", dtype = "int8", shape = (2, 13, 4))#candidate|478|(2, 13, 4)|var|int8
var_479 = relay.var("var_479", dtype = "int8", shape = (2, 13, 4))#candidate|479|(2, 13, 4)|var|int8
bop_480 = relay.minimum(var_478.astype('int8'), relay.reshape(var_479.astype('int8'), relay.shape_of(var_478))) # shape=(2, 13, 4)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_483 = relay.TupleGetItem(func_113_call(), 2)
call_484 = relay.TupleGetItem(func_115_call(), 2)
output = relay.Tuple([bop_480,call_483,])
output2 = relay.Tuple([bop_480,call_484,])
func_490 = relay.Function([var_478,var_479,], output)
mod['func_490'] = func_490
mod = relay.transform.InferType()(mod)
var_491 = relay.var("var_491", dtype = "int8", shape = (2, 13, 4))#candidate|491|(2, 13, 4)|var|int8
var_492 = relay.var("var_492", dtype = "int8", shape = (2, 13, 4))#candidate|492|(2, 13, 4)|var|int8
output = func_490(var_491,var_492,)
func_493 = relay.Function([var_491,var_492,], output)
mutated_mod['func_493'] = func_493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_509 = func_271_call()
call_510 = func_271_call()
output = call_509
output2 = call_510
func_535 = relay.Function([], output)
mod['func_535'] = func_535
mod = relay.transform.InferType()(mod)
output = func_535()
func_536 = relay.Function([], output)
mutated_mod['func_536'] = func_536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_558 = relay.TupleGetItem(func_113_call(), 0)
call_559 = relay.TupleGetItem(func_115_call(), 0)
output = relay.Tuple([call_558,])
output2 = relay.Tuple([call_559,])
func_567 = relay.Function([], output)
mod['func_567'] = func_567
mod = relay.transform.InferType()(mod)
mutated_mod['func_567'] = func_567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_567_call = mutated_mod.get_global_var('func_567')
call_568 = func_567_call()
output = call_568
func_569 = relay.Function([], output)
mutated_mod['func_569'] = func_569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_366_call = mod.get_global_var('func_366')
func_368_call = mutated_mod.get_global_var('func_368')
call_599 = relay.TupleGetItem(func_366_call(), 1)
call_600 = relay.TupleGetItem(func_368_call(), 1)
output = relay.Tuple([call_599,])
output2 = relay.Tuple([call_600,])
func_601 = relay.Function([], output)
mod['func_601'] = func_601
mod = relay.transform.InferType()(mod)
mutated_mod['func_601'] = func_601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_601_call = mutated_mod.get_global_var('func_601')
call_602 = func_601_call()
output = call_602
func_603 = relay.Function([], output)
mutated_mod['func_603'] = func_603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_611 = relay.var("var_611", dtype = "float64", shape = (7, 11, 4))#candidate|611|(7, 11, 4)|var|float64
var_612 = relay.var("var_612", dtype = "float64", shape = (7, 11, 4))#candidate|612|(7, 11, 4)|var|float64
bop_613 = relay.floor_mod(var_611.astype('float64'), relay.reshape(var_612.astype('float64'), relay.shape_of(var_611))) # shape=(7, 11, 4)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_616 = func_55_call()
call_617 = func_55_call()
output = relay.Tuple([bop_613,call_616,])
output2 = relay.Tuple([bop_613,call_617,])
func_619 = relay.Function([var_611,var_612,], output)
mod['func_619'] = func_619
mod = relay.transform.InferType()(mod)
var_620 = relay.var("var_620", dtype = "float64", shape = (7, 11, 4))#candidate|620|(7, 11, 4)|var|float64
var_621 = relay.var("var_621", dtype = "float64", shape = (7, 11, 4))#candidate|621|(7, 11, 4)|var|float64
output = func_619(var_620,var_621,)
func_622 = relay.Function([var_620,var_621,], output)
mutated_mod['func_622'] = func_622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_660 = func_271_call()
call_661 = func_271_call()
func_214_call = mod.get_global_var('func_214')
func_216_call = mutated_mod.get_global_var('func_216')
const_667 = relay.const([-1.751974,0.666880,-3.869402,-4.461361,-7.845521,-6.624639,9.858293,2.432056,-1.055744,8.745534,-0.858162,-1.435523,-7.886509,3.012172,-0.526540,4.921975,-4.322986,8.434407,-1.104453,-1.533701,6.038561,-2.680090,4.555964,-7.583807,6.237646,-7.731051,-0.264651,1.905932,-4.809426,-0.188410,-8.303398,2.106364,0.406315,-3.542712,-4.598463,-1.621650,8.225704,-7.256134,-7.162309,8.236749,-5.193198,4.281631,-2.652129,3.625006,6.145568,-9.359595,6.087363,0.391335,-5.585942,4.894995,-6.617025,-4.098136,-4.645658,-1.018209,9.498602,-7.160284,-2.283950,-5.681767,-1.176777,4.580671,-1.594962,-7.641978,1.197313,-6.045624,8.337574,-1.039401,4.868951,3.767261,4.060749,-2.460360,0.884513,-1.999284,-5.588769,4.087200,7.244687,2.209775,-0.250207,9.631638,0.589443,6.772982,4.542752,-1.760124,-5.077622,-3.923552,-5.684779,-7.007885,7.570820,9.247087,1.862128,2.414067,0.617168,-6.893083,-9.355545,7.364285,2.225528,-2.235577,-6.219523,7.820176,-2.451293,-8.465765,-2.619936,6.760316,3.722143,-0.378037,0.708741,5.066148,-9.029662,-6.044292,-0.723090,-0.781061,-0.198661,-5.475618,2.003611,6.238300,-2.709543,-5.372830,-3.017004,-8.485702,-5.702662,-9.534092,-2.300317,-5.006001,-6.788001,5.444654,-3.618613,-7.297022,-9.233810,7.743051,3.975934,-4.144946,-5.660626,-7.830497], dtype = "float32")#candidate|667|(132,)|const|float32
call_666 = relay.TupleGetItem(func_214_call(relay.reshape(const_667.astype('float32'), [11, 4, 3])), 0)
call_668 = relay.TupleGetItem(func_216_call(relay.reshape(const_667.astype('float32'), [11, 4, 3])), 0)
output = relay.Tuple([call_660,call_666,const_667,])
output2 = relay.Tuple([call_661,call_668,const_667,])
func_671 = relay.Function([], output)
mod['func_671'] = func_671
mod = relay.transform.InferType()(mod)
output = func_671()
func_672 = relay.Function([], output)
mutated_mod['func_672'] = func_672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_673 = relay.TupleGetItem(func_113_call(), 1)
call_674 = relay.TupleGetItem(func_115_call(), 1)
func_490_call = mod.get_global_var('func_490')
func_493_call = mutated_mod.get_global_var('func_493')
var_692 = relay.var("var_692", dtype = "int8", shape = (104,))#candidate|692|(104,)|var|int8
call_691 = relay.TupleGetItem(func_490_call(relay.reshape(var_692.astype('int8'), [2, 13, 4]), relay.reshape(var_692.astype('int8'), [2, 13, 4]), ), 0)
call_693 = relay.TupleGetItem(func_493_call(relay.reshape(var_692.astype('int8'), [2, 13, 4]), relay.reshape(var_692.astype('int8'), [2, 13, 4]), ), 0)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_698 = func_271_call()
call_699 = func_271_call()
output = relay.Tuple([call_673,call_691,var_692,call_698,])
output2 = relay.Tuple([call_674,call_693,var_692,call_699,])
func_706 = relay.Function([var_692,], output)
mod['func_706'] = func_706
mod = relay.transform.InferType()(mod)
var_707 = relay.var("var_707", dtype = "int8", shape = (104,))#candidate|707|(104,)|var|int8
output = func_706(var_707)
func_708 = relay.Function([var_707], output)
mutated_mod['func_708'] = func_708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_738 = relay.var("var_738", dtype = "uint32", shape = ())#candidate|738|()|var|uint32
const_739 = relay.const([[[9,5,-4,10,6,6,7,-9,3,-2,8,8,8,-2,-7],[7,8,3,-10,1,-3,3,-1,6,6,6,-2,1,-10,-10],[-5,3,8,5,-7,8,-5,1,-3,2,4,5,-10,5,3],[-7,2,-4,-5,2,7,-1,1,10,8,-5,-10,8,1,2],[-9,-2,8,-3,5,5,3,6,-10,8,-10,2,-5,10,4],[-10,10,3,-6,-2,-10,-4,-7,-7,-9,-6,-9,-9,-9,-10],[10,5,10,1,-2,8,4,-7,2,-9,-10,-10,-5,5,9],[-6,-5,-10,-7,-2,5,-3,2,9,5,-7,-5,5,-7,4],[6,-4,9,6,8,-6,-8,4,-10,-5,3,1,-2,-5,-7],[-4,9,3,-5,-5,-7,-8,4,6,-6,-1,7,-6,10,-8],[2,-1,-4,-8,-3,4,6,6,3,-3,5,10,8,10,9],[7,2,2,-2,4,5,-7,9,2,5,3,-3,-1,6,9],[9,-7,-3,4,-1,-1,8,9,1,-9,1,8,4,-3,1]],[[8,-9,1,-5,-7,5,5,6,-1,7,7,4,2,-5,10],[8,-7,2,8,3,6,-3,-1,4,10,-4,1,-10,-5,9],[-2,3,5,7,5,-9,8,-9,-5,-3,-6,9,6,-2,8],[-6,10,2,-5,9,9,-8,-1,9,1,10,10,9,-1,-7],[-4,-1,-10,-10,-2,-2,6,-7,8,3,-10,1,4,-6,-10],[-6,-5,9,-10,10,-7,-2,-6,-1,6,8,-9,-6,8,8],[4,-4,-2,6,-1,3,-3,-8,3,5,-3,5,-1,-5,-2],[9,-8,7,-6,-2,-3,5,-2,-7,4,4,7,1,10,-1],[8,10,-4,6,2,-9,4,3,6,-1,-3,10,-6,-10,-7],[-9,-2,1,-6,6,-8,4,-8,10,-8,6,7,3,-7,2],[-5,-8,-1,-3,-9,-8,-3,-9,-1,6,-1,3,10,-5,-3],[2,-9,-5,1,-9,6,-5,10,-1,-6,-10,-1,7,1,10],[-9,1,3,10,5,-2,7,-1,5,9,9,8,-4,-3,7]],[[8,6,-3,5,-10,-3,3,-4,-8,-4,-10,-8,-3,3,7],[9,-3,-5,3,10,-2,8,2,8,8,-6,-7,7,7,7],[-10,-9,1,-1,-6,8,3,-3,-7,-4,-5,3,7,5,2],[9,-8,4,4,6,6,8,-1,4,-4,-2,3,4,-9,-5],[8,-2,-2,-8,4,6,9,1,7,-9,-8,-1,-8,10,-1],[-8,-8,-7,-9,-9,-2,-4,1,2,-3,-8,-2,1,-3,7],[7,-2,6,-5,8,-7,-1,1,6,-9,-4,1,5,4,-4],[-9,-6,6,-4,-4,-7,1,2,9,5,9,4,-3,-4,4],[-10,1,-7,6,9,2,-9,-5,6,8,-3,-1,9,-5,-3],[-2,-3,-6,9,-10,2,-4,6,3,-5,-3,8,-5,-10,-9],[-9,-7,-4,-3,-7,-9,6,9,7,5,-2,2,4,6,-8],[-10,-6,9,10,-2,4,5,9,3,-5,-7,9,-7,-7,-1],[-10,3,-6,7,-6,-4,-10,-2,2,-4,6,-3,1,1,7]],[[-6,-1,-4,-1,6,1,10,8,2,-9,-6,-8,-1,-3,10],[4,-6,4,5,-4,-5,-10,6,-4,9,-5,-8,6,-3,-4],[10,10,5,9,-9,1,-5,6,-1,10,-6,7,-7,5,-3],[-6,9,10,-7,-3,9,10,-9,5,-9,-9,9,10,8,-7],[-6,-5,-6,8,3,2,9,6,-2,-7,-6,-7,2,-1,3],[-3,-1,-6,3,-2,7,-8,10,4,5,-5,6,7,9,10],[8,-3,-4,-7,2,3,7,-8,7,1,1,-4,5,-9,-9],[-8,-4,7,-7,7,6,-1,-5,-10,-10,2,-6,-10,-8,-7],[8,8,-4,4,-9,-3,2,8,4,8,8,5,8,6,6],[7,-7,-8,9,-4,-2,1,-4,1,-8,2,-1,-1,6,-9],[1,6,10,-10,-5,-5,-3,1,9,5,-3,5,-6,6,-4],[-2,-10,2,2,9,6,6,-4,9,1,1,9,-9,-2,6],[-10,8,9,-2,-4,8,-6,-1,1,6,-2,-7,2,-7,-3]],[[-10,-3,4,10,3,-8,-6,-7,-7,-7,-2,9,-1,7,7],[2,4,-6,7,6,-2,3,9,4,-10,-8,-9,2,-9,-7],[3,-4,7,7,7,-6,-8,-6,-10,-2,9,-1,-8,-8,5],[5,-7,5,8,9,-5,-4,-5,9,-9,4,-2,6,-1,1],[2,-4,-5,-2,-10,8,-8,-8,3,10,10,-1,2,-6,-4],[9,-5,4,9,-2,-10,4,-7,3,-2,3,9,-6,-5,-4],[-1,6,3,5,7,2,-2,-5,1,-8,-5,6,-6,4,7],[2,-10,-4,-10,6,-8,5,7,6,2,-10,6,-10,8,-6],[4,5,-6,-1,-9,4,-7,5,2,3,-7,10,9,-8,6],[4,-1,7,9,4,5,3,-10,6,-4,-6,2,-6,10,1],[-7,-7,5,8,2,-10,-1,-8,5,-4,5,-2,10,1,4],[-5,9,1,-7,-6,10,-5,2,3,9,6,9,-4,-6,6],[-7,10,4,9,-8,-8,4,-1,-9,2,4,-6,6,2,5]],[[9,-1,-9,10,-4,-5,-9,10,-5,-6,8,7,-5,-4,-4],[-6,-2,-3,2,8,-4,-2,2,-4,-10,-6,-4,-2,5,-5],[4,1,8,4,-9,-8,7,-7,10,10,6,8,-8,-9,6],[-1,5,4,-7,-5,-3,1,-1,-3,-4,10,-8,7,9,-8],[-10,-3,10,-2,8,-7,-10,-4,-9,-3,9,-2,-4,-10,7],[-7,-6,5,10,5,5,-10,10,-6,-1,3,-2,5,-6,-8],[5,-3,8,9,3,9,-5,3,-2,-6,7,1,4,5,4],[-4,-9,-2,-5,8,-4,-6,-5,-4,-7,8,-10,3,-8,6],[10,-3,-9,7,-9,-1,-1,3,5,10,10,6,-10,3,-7],[-10,-9,7,1,1,2,-2,-7,8,-2,6,8,-1,-2,4],[3,8,10,-1,3,10,2,-8,-7,-4,5,-3,3,9,8],[7,-1,5,-2,2,-8,1,-6,-2,-5,6,-6,3,2,-5],[7,-4,-6,-2,7,6,-8,-7,7,-9,-6,2,-3,3,7]],[[10,1,4,4,10,2,7,2,-6,5,-1,2,5,6,-3],[-10,-9,-6,10,1,-1,5,-2,-4,-8,-4,10,-2,-3,6],[3,8,9,-5,6,-9,8,5,-3,-6,5,-9,6,-1,10],[-7,-3,3,1,-1,5,-3,5,10,-6,8,8,8,9,-5],[9,1,8,-4,-5,5,-8,-2,-8,-3,-1,-6,10,-7,3],[7,-5,-4,4,2,-6,7,7,8,-4,-10,2,5,9,-1],[5,4,6,-3,-7,-10,-3,-8,-8,8,5,-6,3,9,5],[-2,-9,2,-6,6,1,-6,-4,-9,-1,4,-2,-3,2,-6],[-3,9,7,-7,-6,6,-2,-4,-9,9,-9,-3,5,-5,-9],[6,-9,6,-4,-9,-8,10,7,6,-6,-3,-10,-7,4,2],[4,7,-2,-1,8,9,-3,5,2,4,-8,4,-5,3,-2],[3,4,1,-5,-2,-10,-6,-9,-3,-4,-2,5,-10,-8,8],[-9,-8,-2,-9,-9,7,-6,-2,-6,8,1,-2,-8,7,-5]],[[-6,7,-9,10,6,-1,-9,-8,1,-6,-5,1,-5,10,-2],[8,-1,-1,6,8,-1,6,7,-8,9,-9,1,10,8,-10],[6,8,5,-8,1,6,7,9,-6,-4,1,7,-5,9,-8],[-2,9,2,9,6,5,1,3,-6,7,6,-5,-3,2,2],[3,4,7,-5,-5,-6,2,-2,7,6,2,-3,4,7,-10],[-8,4,2,-10,-8,9,-5,1,-7,-9,-2,6,-6,-3,-8],[2,3,-10,7,-3,4,1,2,9,10,-4,-7,-10,-3,-7],[-6,-1,-7,6,-10,9,1,-5,1,4,-4,-8,1,5,2],[6,-3,9,-7,-3,5,3,1,-9,-6,8,3,10,-5,-9],[8,-5,2,10,10,-8,-5,-9,3,-1,-2,6,6,-1,-2],[7,6,1,-7,-9,4,10,-10,-6,-10,1,-7,-9,-4,1],[1,-8,-10,-2,1,4,1,-3,-6,6,-5,7,-8,2,-9],[10,2,4,8,-1,-9,2,-10,1,-1,1,5,-5,-6,-7]],[[-1,2,6,5,4,-10,-10,3,7,-7,2,-6,6,2,-10],[7,-5,-7,7,-4,8,3,6,2,-9,-4,5,-10,1,2],[-10,-5,10,-5,-3,-5,2,-3,-4,-4,1,6,5,-8,-7],[-10,-1,-1,4,-7,4,8,-2,6,5,10,5,-6,1,9],[-6,2,-1,-10,10,1,-9,-10,1,6,-6,-4,2,1,5],[1,8,-1,-10,-3,-8,4,7,-10,-2,4,5,-8,9,-2],[9,6,-1,-6,7,9,8,-5,-7,-1,3,6,-7,-5,-4],[-1,-2,-2,-3,2,-10,7,6,2,9,2,-1,10,-3,-6],[-1,9,3,4,10,8,-1,-1,-1,10,-6,-3,-3,7,-7],[-2,-10,-2,2,1,-4,-5,7,1,7,-9,-6,-2,-3,-4],[3,-7,-6,-8,-6,10,1,4,1,6,-9,-3,-5,-3,-5],[9,4,5,-6,8,-3,2,6,-1,-1,5,10,-6,-4,-3],[7,-8,-7,-1,-7,5,-9,-3,-2,4,-9,-5,6,6,-10]],[[8,1,8,-1,3,8,-8,-4,4,5,-9,-6,5,-4,3],[-10,-1,10,-10,-8,9,-10,5,-7,-8,-8,7,1,-7,5],[-9,4,7,-7,5,2,3,8,-6,8,7,10,9,8,-6],[-7,-9,5,5,2,9,-1,-6,2,-5,-7,-6,6,10,-3],[-6,-3,5,10,-2,-9,8,5,10,5,8,8,9,-1,-8],[5,-9,1,-8,4,-5,3,5,-5,-7,-2,4,-1,6,4],[-8,-9,9,3,-1,7,9,7,-10,-9,-7,-2,-1,-6,4],[-2,-2,1,1,9,10,9,-8,1,1,4,1,10,8,-10],[9,7,10,-3,4,4,1,-3,-10,-6,-4,-10,6,-8,10],[-7,7,10,-1,-10,-6,9,10,6,-6,-2,3,-7,5,-1],[3,-4,1,-10,9,-7,8,2,-8,7,-1,6,4,2,3],[6,1,-8,6,-5,10,9,8,8,-2,-1,6,6,5,1],[1,-5,7,-5,3,-5,-1,-3,-10,6,5,-6,7,3,1]],[[-9,9,-5,7,-7,-9,3,1,-9,-6,4,2,-2,-1,10],[-9,4,-3,4,8,-10,8,-9,9,1,-4,-7,-2,-5,4],[-2,-4,-10,-5,9,-8,4,-4,4,-2,-1,7,-3,6,1],[-3,4,-1,-6,-9,-2,6,2,1,-5,10,-9,3,5,2],[-3,10,4,-2,-10,7,-7,-9,3,4,3,4,-2,-6,8],[4,2,-9,-5,-7,1,8,7,6,7,7,-5,-6,10,3],[-1,-1,10,9,10,-2,-2,-8,8,-8,-5,7,-8,6,-6],[-7,-5,9,-6,-5,-8,7,9,-6,1,-4,-3,-8,-5,-8],[-3,-7,3,8,-8,-8,-1,-6,-10,9,-8,-10,5,1,-2],[10,-8,-6,7,-10,6,-3,3,-7,-2,6,1,-3,4,6],[-7,-1,-7,3,8,1,1,1,3,-9,-6,7,3,-4,3],[10,8,2,8,-1,1,10,-6,-8,-3,-4,-1,8,8,-10],[-2,3,-4,7,-2,-8,-8,7,-1,5,-1,3,-7,-8,3]]], dtype = "uint32")#candidate|739|(11, 13, 15)|const|uint32
bop_740 = relay.bitwise_xor(var_738.astype('uint32'), const_739.astype('uint32')) # shape=(11, 13, 15)
uop_744 = relay.log10(bop_740.astype('float64')) # shape=(11, 13, 15)
func_706_call = mod.get_global_var('func_706')
func_708_call = mutated_mod.get_global_var('func_708')
const_780 = relay.const([-8,-9,-9,10,-4,-4,-9,-3,-1,10,10,1,-9,4,-8,-8,6,-3,-4,10,4,-6,-5,9,-2,9,8,1,-5,-7,-4,7,2,-4,-5,-6,-10,-9,3,-4,-8,-8,1,2,-6,8,5,9,7,8,10,8,-8,9,-6,-8,-6,-9,-6,2,3,4,-7,-7,-10,6,-1,-2,-3,8,-3,-4,-3,-5,-5,4,9,7,-3,-10,-9,3,-1,9,-7,5,-5,9,3,8,-3,7,-10,-9,9,6,-6,-8,-5,2,3,-1,6,6], dtype = "int8")#candidate|780|(104,)|const|int8
call_779 = relay.TupleGetItem(func_706_call(relay.reshape(const_780.astype('int8'), [104,])), 2)
call_781 = relay.TupleGetItem(func_708_call(relay.reshape(const_780.astype('int8'), [104,])), 2)
output = relay.Tuple([uop_744,call_779,const_780,])
output2 = relay.Tuple([uop_744,call_781,const_780,])
func_784 = relay.Function([var_738,], output)
mod['func_784'] = func_784
mod = relay.transform.InferType()(mod)
var_785 = relay.var("var_785", dtype = "uint32", shape = ())#candidate|785|()|var|uint32
output = func_784(var_785)
func_786 = relay.Function([var_785], output)
mutated_mod['func_786'] = func_786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
call_791 = relay.TupleGetItem(func_601_call(), 0)
call_792 = relay.TupleGetItem(func_603_call(), 0)
output = relay.Tuple([call_791,])
output2 = relay.Tuple([call_792,])
func_793 = relay.Function([], output)
mod['func_793'] = func_793
mod = relay.transform.InferType()(mod)
output = func_793()
func_794 = relay.Function([], output)
mutated_mod['func_794'] = func_794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_837 = func_271_call()
call_838 = func_271_call()
func_403_call = mod.get_global_var('func_403')
func_406_call = mutated_mod.get_global_var('func_406')
const_845 = relay.const([[2.150140,-9.179838,5.653218,0.795039],[-8.344755,-1.906625,-3.795976,9.895559],[-5.859657,-0.402525,9.288177,-5.159785],[6.322483,7.329706,1.478254,-5.303772],[-6.773954,-8.462569,5.472979,-1.830591],[-7.359435,-3.002587,7.528321,-7.204314],[-7.049729,2.204533,-0.467841,-1.942675],[9.176681,-2.044515,7.422537,8.577423],[9.163525,9.795088,8.947783,-1.002324],[4.707561,-9.599320,-7.593092,-2.855214],[-7.485141,3.352418,9.587971,-4.017094],[8.550692,-9.884810,7.496464,9.730713],[9.487253,5.022017,-6.732183,-9.502488],[2.451096,-4.996659,0.519620,-9.453862],[-2.455737,8.346301,1.637986,1.792108],[-5.787435,8.063546,9.088436,-0.388523],[-0.869177,-0.786319,3.756219,-0.113749],[7.726609,-3.298508,4.327572,-5.606655],[-8.348396,9.771564,8.435991,3.292446],[-0.241159,-4.425033,9.620210,-4.057537],[-5.873624,-8.420724,1.930005,-8.615973],[2.476730,-1.904035,3.633875,5.802967],[-0.708059,2.574912,9.189204,8.942517],[-3.343752,6.858961,-6.292732,9.301826],[-4.619049,-5.556837,-8.166750,7.904819],[1.086162,-7.842144,-4.838249,7.056873],[-2.653330,9.068661,9.817557,-4.373650],[-7.350239,4.990540,5.796914,9.370521],[-8.955488,-5.055415,1.969871,-3.036400],[1.434064,4.835730,-4.379927,-1.416258],[-5.355307,-9.057935,-9.920142,9.500180],[1.147139,8.590694,4.929351,-7.246486],[-8.713663,-4.418169,-0.279827,-1.167607],[8.647341,-2.393677,-9.209339,-2.612676],[-0.958501,-6.585780,7.598973,4.847751],[-2.068530,-4.093265,4.244400,2.822964],[2.364647,8.019218,2.337608,6.378348],[-5.084877,-7.256520,-4.585040,2.207605],[-9.859330,3.062496,5.300792,-3.467927],[9.733544,5.997467,6.276711,-3.793879],[-3.822523,3.160974,6.987745,-6.521289],[-8.067007,2.392012,8.628844,4.956702],[-9.392641,-2.584782,6.172933,-3.389324],[5.296663,1.145251,-9.647721,9.274431],[-7.391489,-0.077597,4.300562,5.251046],[-5.650030,-2.376988,9.985779,4.292647],[-3.001164,4.279701,-3.449191,-3.810226],[7.381284,-9.899096,5.976954,-5.110990],[-8.836502,9.439197,4.500526,8.868202],[0.104383,9.889113,6.227799,5.121628],[-1.641363,3.429441,-4.207732,-1.366220],[-1.011480,1.186034,-5.192061,3.731165],[0.403048,-1.462378,8.284140,-2.059925],[1.566172,2.949327,-7.937539,-7.031088],[7.008500,7.555813,3.936683,4.122048],[-3.661603,9.521198,-4.188634,-9.405318],[-8.071906,-1.730352,-3.556502,-4.244996],[-5.708724,1.200700,-2.022510,-0.867869],[9.830374,4.453945,4.286186,-4.521630],[-6.146552,6.934370,-5.780086,-7.269289],[-7.359688,-1.013189,9.813690,9.195346],[-9.976339,-3.951276,-6.478372,-2.531955],[-9.692629,4.722857,-5.444653,3.916394],[8.333302,8.840503,-7.201688,-0.054952],[-1.969295,-1.515878,-2.106174,-7.103743],[-9.210536,9.037754,0.849475,-0.444281],[-6.955606,0.701511,-4.577407,1.309493],[5.600286,8.059253,-2.956887,8.694044],[0.062854,-9.927191,4.291788,-2.097059],[8.085267,-5.798012,-7.661333,-0.059308],[-2.361855,5.408104,-8.274897,4.700996],[-0.376324,-2.318019,-3.539024,2.881931],[2.686653,7.041728,-0.313041,-4.817596],[-6.392119,-2.730867,1.990018,5.473859],[9.406692,-2.348933,2.193759,1.699124],[1.177984,-3.897742,7.217673,5.410569],[0.820303,0.559245,-8.573165,6.032571],[0.340488,5.640325,-5.863097,-7.634542],[-4.168522,6.258164,-1.837207,7.302951],[-4.130812,-6.863782,3.622286,-4.061331],[-6.189877,1.871681,0.207524,8.472094],[-9.188229,-5.507304,4.664501,-5.799088],[9.641126,0.879448,7.932013,2.760040],[-5.144005,2.567384,6.153080,-8.803808],[-9.655232,1.306125,-8.219512,-7.753606],[4.657079,1.846025,6.010403,-2.714813],[-7.284871,1.317860,-3.920675,3.092257],[-7.294349,9.595297,8.259157,9.434316],[8.952386,0.723346,-6.991039,-1.554250],[-4.863076,-1.334919,-5.046695,1.552992],[9.306350,-8.665440,6.948608,-5.299617],[-0.163489,-3.036212,-5.303389,6.454589],[-3.512041,3.989586,-2.141854,-1.767552],[-2.703326,1.983058,-9.635459,3.246624],[6.473511,6.524805,3.821536,-8.803173],[1.206726,7.919186,-2.605062,7.489441],[-8.066956,6.400288,8.907059,1.969718],[0.114771,-4.076647,3.774374,6.571771],[2.835778,-9.977146,-9.705113,-8.616039],[2.870756,4.315296,1.231511,-3.820447],[-9.910510,-3.170077,7.693044,1.249455],[-1.308344,-4.650535,8.986933,-2.987281],[8.286598,2.759979,3.205223,6.883617],[-7.073557,7.917846,-9.772042,2.856641],[9.864028,-6.263761,7.123069,7.514352],[9.609496,-0.941259,6.365856,5.009261],[0.827233,8.997577,-9.789275,0.853280],[4.672823,-5.508500,-5.269969,-5.466456],[-8.204118,-3.383294,-5.795843,2.508330],[-8.567812,-0.892627,6.624197,-1.317227],[7.627258,9.010969,-1.697653,-3.317378],[0.322125,9.448094,-3.248863,-7.644464],[-8.697121,-5.857289,-5.360054,-1.075546],[7.025276,1.104566,-8.550031,2.515410],[4.631199,-7.797594,2.823002,1.713166],[8.954957,-7.229781,9.002413,-6.813475],[-3.979169,-7.818397,1.093709,0.423720],[-1.006807,7.214769,-7.679216,-4.718633],[5.761547,3.135157,7.739983,-0.701087],[-0.569258,-2.547951,5.265323,9.559422],[0.738284,-1.946877,6.054075,-8.395636],[-5.315687,-3.718982,-4.410155,-1.650804],[3.834600,6.342474,6.141551,-8.904174],[-7.075306,6.087649,2.421373,9.881530],[-8.712395,5.653993,1.899881,2.870445],[4.056169,-0.042662,-5.901714,-2.718885],[2.252581,-7.369416,8.289515,-4.710060],[1.314766,0.642144,-5.747181,-0.122524],[-1.830932,-5.059351,0.919802,-0.260063],[-1.309955,-9.591220,1.982126,-2.205223],[-3.031810,1.664599,6.274270,-1.695147],[8.816619,-6.435244,-6.883923,3.035591],[-6.942881,9.793109,7.759840,5.475099],[-3.156926,8.612820,-0.184242,-2.621397],[-8.395238,-7.760463,6.379946,2.115651],[-9.531341,0.535280,-5.164445,1.219177],[-6.700903,-8.595147,-0.013019,5.082678],[8.847823,1.323898,6.800650,8.565364],[2.923943,6.864062,-8.102999,-0.868618],[-9.986588,4.443188,-4.010682,-8.948652],[1.883761,-2.861306,-9.663255,6.857634],[-3.976673,4.283186,-3.528380,-1.814093],[-5.552117,4.509047,-4.444280,3.897383],[9.617829,5.213259,6.172236,-4.500954],[-6.600033,1.731385,2.093254,-2.234123],[1.963554,9.352287,-9.629953,5.456749],[7.106618,8.846614,-5.280273,2.854981],[-1.597321,8.943374,-2.607353,-8.158773],[4.061472,9.290051,-4.253649,-9.920324],[1.870458,-8.733106,9.200293,-1.150238],[-3.348778,-8.628384,-3.749463,-5.402858],[-0.511388,-7.234431,0.224095,6.815563],[-8.359856,2.763238,3.480462,-2.791541],[6.986034,-0.535601,1.473572,-3.939827],[6.005363,-0.854966,-7.302643,-0.090749],[2.684734,4.610147,2.074035,3.327150],[5.648131,6.355425,-9.930621,0.399522],[-7.208547,7.389432,-8.807357,7.398664],[-5.186954,0.920104,-2.400833,-4.278416],[-3.846933,-0.754375,-2.409591,-4.132113],[2.396472,-2.119600,1.929229,0.162684],[-9.266483,3.333864,-5.674762,-6.291776]], dtype = "float32")#candidate|845|(162, 4)|const|float32
call_844 = func_403_call(relay.reshape(const_845.astype('float32'), [12, 9, 6]))
call_846 = func_403_call(relay.reshape(const_845.astype('float32'), [12, 9, 6]))
func_706_call = mod.get_global_var('func_706')
func_708_call = mutated_mod.get_global_var('func_708')
var_850 = relay.var("var_850", dtype = "int8", shape = (104,))#candidate|850|(104,)|var|int8
call_849 = relay.TupleGetItem(func_706_call(relay.reshape(var_850.astype('int8'), [104,])), 2)
call_851 = relay.TupleGetItem(func_708_call(relay.reshape(var_850.astype('int8'), [104,])), 2)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_860 = relay.TupleGetItem(func_567_call(), 0)
call_861 = relay.TupleGetItem(func_569_call(), 0)
func_619_call = mod.get_global_var('func_619')
func_622_call = mutated_mod.get_global_var('func_622')
const_864 = relay.const([1.177919,-3.896548,-2.944471,-1.164185,8.875201,5.931251,3.103994,7.056961,-4.040925,-5.319646,-9.880703,-7.891647,1.403598,9.154149,5.039002,-2.469060,-5.393671,6.249683,4.062315,-3.664052,-2.469553,-7.011232,0.013259,-0.435461,-2.020014,9.947126,-8.460493,-6.871288,-3.075762,-5.555255,-6.874490,-4.583811,6.784821,6.802269,4.727224,0.938221,3.330490,7.114523,0.960131,2.787724,0.991178,5.881119,-5.360432,6.792532,9.246663,-4.807993,-2.114320,-2.662576,6.566870,9.091701,5.670979,-3.041051,-6.009195,-5.484444,2.222150,-4.368127,-7.921110,-5.141469,9.760664,5.572143,2.037186,-8.591075,-6.271543,8.092677,-4.261544,-3.289069,-5.463409,-7.714219,8.247674,-1.760939,-8.634592,5.699859,-0.872196,5.141558,1.293667,-6.816641,6.778703,6.016763,-9.447815,4.480917,9.160748,-9.878350,-3.783149,-7.267624,3.468399,0.449788,9.591810,9.613842,-3.505423,4.203512,0.919248,6.645605,-2.158944,0.825908,0.056189,3.681969,-2.491936,-6.995377,8.863921,-3.157372,-7.329499,-2.547360,-2.813082,4.164666,5.476370,0.510404,9.728875,9.331265,0.415750,-9.836082,0.296825,4.595017,1.452714,-9.201797,-9.717171,-4.526971,-2.845205,2.660258,-0.874030,-5.645463,9.435114,-9.003032,-8.704699,1.744840,-9.672037,-9.471810,6.961709,-9.616204,-6.245835,3.063570,2.407946,5.361510,2.662932,3.352154,1.930165,9.339059,8.062167,4.408615,5.943613,6.692765,-7.603911,6.688778,1.147975,0.198306,-1.466022,-6.647219,-0.278829,-0.551078,-2.265616,8.475957,2.143024,2.282567,-8.330395,-4.027557,9.799599,-4.728437,9.917328,8.012588,9.213321,-4.494707,-6.798385,2.069050,-6.688523,-1.419544,5.240273,5.197881,-6.268056,5.876649,2.233450,-3.578707,2.093195,7.330018,-8.983233,4.895153,5.784189,4.336355,3.820070,-3.374636,-5.985306,-6.388074,-9.343980,-6.099781,-2.617091,0.006877,8.022014,-1.256560,-3.005744,-7.126154,7.421161,-9.351158,0.276328,-2.447688,6.053856,5.336495,9.527576,9.075376,1.434529,-1.063436,-3.931190,1.430629,7.712927,-1.423612,7.023667,-4.064508,5.676681,8.944884,-6.765480,1.627042,-8.097174,-4.311999,-9.851343,4.946367,6.692257,-6.123187,-2.573297,-3.030382,5.811426,0.889715,3.524391,7.718305,0.338569,4.658908,-8.391662,1.388496,9.537275,-9.514880,6.154404,3.180502,0.643805,-9.526136,-7.419899,2.390039,-2.436625,-5.217684,-7.082207,-5.179766,5.658363,-0.477410,-8.231414,-2.715966,0.059111,6.956345,0.481365,1.488714,-1.535855,-7.644893,-5.785268,8.210763,-5.942797,-5.801655,7.388971,-4.750676,1.316759,9.246158,-5.316575,9.290906,-2.773779,9.607552,-4.181656,1.521408,-3.300847,1.992567,8.263740,1.614099,-9.832808,9.188367,-8.502733,-8.314250,-7.697363,4.538025,-9.997280,-3.447267,-9.703549,-3.542641,-6.795054,7.304540,5.388096,-7.773985,9.481081,-4.548072,4.555844,-3.111699,-3.419261,9.029020,-9.761296,8.047891,-2.447159,5.429138,0.258986,2.934991,8.667542,2.429165,0.069645,-5.209426,0.822354,-0.700341,-1.777077,5.639670,-0.279092,2.392473,4.793854,9.788657,-2.221762,-2.014496,-2.503166,8.892042,7.446642,-3.302564], dtype = "float64")#candidate|864|(308,)|const|float64
call_863 = relay.TupleGetItem(func_619_call(relay.reshape(const_864.astype('float64'), [7, 11, 4]), relay.reshape(const_864.astype('float64'), [7, 11, 4]), ), 0)
call_865 = relay.TupleGetItem(func_622_call(relay.reshape(const_864.astype('float64'), [7, 11, 4]), relay.reshape(const_864.astype('float64'), [7, 11, 4]), ), 0)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_866 = relay.TupleGetItem(func_113_call(), 0)
call_867 = relay.TupleGetItem(func_115_call(), 0)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_882 = relay.TupleGetItem(func_113_call(), 0)
call_883 = relay.TupleGetItem(func_115_call(), 0)
output = relay.Tuple([call_837,call_844,const_845,call_849,var_850,call_860,call_863,const_864,call_866,call_882,])
output2 = relay.Tuple([call_838,call_846,const_845,call_851,var_850,call_861,call_865,const_864,call_867,call_883,])
func_897 = relay.Function([var_850,], output)
mod['func_897'] = func_897
mod = relay.transform.InferType()(mod)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_898 = relay.var("var_898", dtype = "int8", shape = (104,))#candidate|898|(104,)|var|int8
func_897_call = mutated_mod.get_global_var('func_897')
call_899 = func_897_call(var_898)
output = call_899
func_900 = relay.Function([var_898], output)
mutated_mod['func_900'] = func_900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
call_907 = func_171_call()
call_908 = func_171_call()
output = relay.Tuple([call_907,])
output2 = relay.Tuple([call_908,])
func_909 = relay.Function([], output)
mod['func_909'] = func_909
mod = relay.transform.InferType()(mod)
mutated_mod['func_909'] = func_909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_909_call = mutated_mod.get_global_var('func_909')
call_910 = func_909_call()
output = call_910
func_911 = relay.Function([], output)
mutated_mod['func_911'] = func_911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_985 = relay.TupleGetItem(func_21_call(), 0)
call_986 = relay.TupleGetItem(func_23_call(), 0)
uop_1005 = relay.cos(call_985.astype('float32')) # shape=(7, 11, 10)
uop_1007 = relay.cos(call_986.astype('float32')) # shape=(7, 11, 10)
output = uop_1005
output2 = uop_1007
func_1010 = relay.Function([], output)
mod['func_1010'] = func_1010
mod = relay.transform.InferType()(mod)
output = func_1010()
func_1011 = relay.Function([], output)
mutated_mod['func_1011'] = func_1011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1032 = relay.var("var_1032", dtype = "uint16", shape = ())#candidate|1032|()|var|uint16
var_1033 = relay.var("var_1033", dtype = "uint16", shape = (2, 15, 7))#candidate|1033|(2, 15, 7)|var|uint16
bop_1034 = relay.bitwise_or(var_1032.astype('uint16'), var_1033.astype('uint16')) # shape=(2, 15, 7)
func_1010_call = mod.get_global_var('func_1010')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1037 = func_1010_call()
call_1038 = func_1010_call()
output = relay.Tuple([bop_1034,call_1037,])
output2 = relay.Tuple([bop_1034,call_1038,])
func_1042 = relay.Function([var_1032,var_1033,], output)
mod['func_1042'] = func_1042
mod = relay.transform.InferType()(mod)
mutated_mod['func_1042'] = func_1042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1042_call = mutated_mod.get_global_var('func_1042')
var_1044 = relay.var("var_1044", dtype = "uint16", shape = ())#candidate|1044|()|var|uint16
var_1045 = relay.var("var_1045", dtype = "uint16", shape = (2, 15, 7))#candidate|1045|(2, 15, 7)|var|uint16
call_1043 = func_1042_call(var_1044,var_1045,)
output = call_1043
func_1046 = relay.Function([var_1044,var_1045,], output)
mutated_mod['func_1046'] = func_1046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_366_call = mod.get_global_var('func_366')
func_368_call = mutated_mod.get_global_var('func_368')
call_1051 = relay.TupleGetItem(func_366_call(), 0)
call_1052 = relay.TupleGetItem(func_368_call(), 0)
output = call_1051
output2 = call_1052
func_1066 = relay.Function([], output)
mod['func_1066'] = func_1066
mod = relay.transform.InferType()(mod)
mutated_mod['func_1066'] = func_1066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mutated_mod.get_global_var('func_1066')
call_1067 = func_1066_call()
output = call_1067
func_1068 = relay.Function([], output)
mutated_mod['func_1068'] = func_1068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_1132 = func_55_call()
call_1133 = func_55_call()
func_909_call = mod.get_global_var('func_909')
func_911_call = mutated_mod.get_global_var('func_911')
call_1168 = relay.TupleGetItem(func_909_call(), 0)
call_1169 = relay.TupleGetItem(func_911_call(), 0)
func_214_call = mod.get_global_var('func_214')
func_216_call = mutated_mod.get_global_var('func_216')
const_1190 = relay.const([[6.996883],[-2.488079],[-8.469931],[7.377037],[7.537131],[6.543561],[6.122849],[-5.894563],[1.225427],[-0.845338],[1.804633],[9.542213],[-1.618640],[3.927809],[-2.307014],[2.080229],[-4.236476],[-4.393022],[-3.541398],[-2.841171],[-4.339806],[-8.318629],[-4.672646],[9.000279],[3.764302],[-8.853487],[9.108125],[-8.130616],[3.307447],[0.153595],[-3.099533],[2.460873],[-9.847190],[5.706680],[4.278968],[-0.607299],[-5.539947],[5.852016],[2.553391],[-1.211452],[-8.037826],[-3.804821],[-3.090014],[6.528872],[-3.329192],[-7.632350],[7.665935],[1.485634],[6.561913],[-9.128217],[6.095670],[-9.449980],[4.950295],[-6.159025],[-1.939420],[6.815630],[-7.398366],[2.697160],[-6.604266],[-9.296225],[1.995873],[-2.875032],[-1.352403],[-7.664711],[-8.652754],[-0.437936],[-9.347001],[9.271577],[-3.805827],[-1.516343],[6.156178],[1.351327],[2.782939],[-4.762967],[6.084766],[1.702393],[4.280095],[9.084779],[2.349350],[-8.563863],[-6.781544],[1.222859],[5.397105],[-2.429648],[3.318946],[8.623720],[1.766891],[-2.114591],[7.282445],[-9.088915],[6.220528],[5.381723],[4.890376],[-9.387735],[-3.321578],[2.370871],[3.916424],[1.507939],[9.811692],[-7.447776],[9.136513],[7.231667],[-9.173142],[0.452125],[7.949093],[-3.857171],[2.300865],[4.892600],[-5.253851],[-8.094995],[-2.415910],[4.300657],[-6.800306],[2.810788],[-4.934338],[-4.338275],[9.456482],[-2.179715],[7.040098],[8.298708],[-4.015679],[5.737432],[2.386202],[-9.834497],[-9.423443],[-2.689192],[-2.311518],[-1.313047],[5.485436],[6.977301],[4.467760],[3.054447]], dtype = "float32")#candidate|1190|(132, 1)|const|float32
call_1189 = relay.TupleGetItem(func_214_call(relay.reshape(const_1190.astype('float32'), [11, 4, 3])), 0)
call_1191 = relay.TupleGetItem(func_216_call(relay.reshape(const_1190.astype('float32'), [11, 4, 3])), 0)
const_1193 = relay.const([[[-7.586036,-7.775887,6.287607],[-6.337619,-3.343012,2.988761],[1.034635,-9.621844,3.203914],[-3.149917,1.261560,2.122501]],[[-2.036339,-2.199734,6.848497],[3.113100,-5.064370,5.018503],[9.193226,-5.975828,0.255784],[-2.550141,-7.967029,6.495596]],[[-7.249942,-9.878812,-3.206166],[5.878494,-1.984706,-4.543341],[-4.083405,5.729370,-6.288690],[-4.643637,-6.832574,7.670717]],[[8.215499,1.842297,-2.641136],[6.381109,-7.331344,-7.749423],[-6.620891,2.163167,-1.389641],[-1.867997,-8.925047,6.271547]],[[-4.388033,-0.275773,-1.336579],[-7.167292,5.168010,2.878222],[-1.288831,9.029621,0.593425],[-2.083151,7.670387,-8.451335]],[[3.920843,-9.864006,-1.352412],[-7.601675,-1.447970,-1.329448],[-6.388451,-5.280724,-0.229485],[-4.830706,-8.517369,1.319793]],[[3.564833,6.248412,-0.380131],[-2.847630,-7.933288,3.928252],[-2.615627,3.004966,-4.398550],[-5.794773,-5.085318,3.305194]],[[-4.841190,-1.040215,4.583022],[-6.705615,2.191209,6.293809],[1.907099,4.856091,6.100051],[2.118265,1.824844,-3.938583]],[[-4.700016,-9.838805,2.387450],[0.013126,1.756551,-7.675198],[1.847020,-1.287647,8.615442],[-5.176075,3.672535,-2.509585]],[[-0.983656,2.585268,2.071869],[-4.289946,-8.042878,-4.543666],[-5.896211,2.145517,0.788587],[-8.581536,4.087402,3.235260]],[[-2.249392,5.179610,-3.105102],[-2.730554,3.869818,-8.210970],[5.455963,-7.258470,3.163088],[3.652835,-1.530591,-4.980288]]], dtype = "float32")#candidate|1193|(11, 4, 3)|const|float32
bop_1194 = relay.bitwise_and(call_1189.astype('uint16'), relay.reshape(const_1193.astype('uint16'), relay.shape_of(call_1189))) # shape=(11, 4, 3)
bop_1197 = relay.bitwise_and(call_1191.astype('uint16'), relay.reshape(const_1193.astype('uint16'), relay.shape_of(call_1191))) # shape=(11, 4, 3)
func_897_call = mod.get_global_var('func_897')
func_900_call = mutated_mod.get_global_var('func_900')
const_1202 = relay.const([[2],[6],[3],[-5],[3],[4],[4],[10],[-3],[1],[-3],[-1],[10],[-6],[5],[-5],[-3],[-3],[8],[-1],[9],[-6],[-7],[1],[9],[1],[5],[-6],[-9],[-1],[2],[3],[9],[-2],[-3],[8],[10],[-7],[10],[-7],[9],[10],[-2],[-9],[1],[-7],[-6],[-8],[6],[1],[-5],[-3],[1],[-4],[-7],[-2],[10],[10],[-8],[-7],[9],[-2],[6],[-1],[2],[-4],[-1],[3],[-7],[4],[7],[2],[-8],[3],[1],[5],[-4],[6],[-8],[2],[9],[6],[3],[1],[-6],[7],[1],[-5],[10],[-4],[-8],[1],[-5],[3],[4],[-5],[3],[10],[-3],[-7],[-5],[4],[-2],[4]], dtype = "int8")#candidate|1202|(104, 1)|const|int8
call_1201 = relay.TupleGetItem(func_897_call(relay.reshape(const_1202.astype('int8'), [104,])), 5)
call_1203 = relay.TupleGetItem(func_900_call(relay.reshape(const_1202.astype('int8'), [104,])), 5)
func_1066_call = mod.get_global_var('func_1066')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1210 = func_1066_call()
call_1211 = func_1066_call()
bop_1214 = relay.power(call_1201.astype('float64'), relay.reshape(call_1132.astype('float64'), relay.shape_of(call_1201))) # shape=(7, 11, 10)
bop_1217 = relay.power(call_1203.astype('float64'), relay.reshape(call_1133.astype('float64'), relay.shape_of(call_1203))) # shape=(7, 11, 10)
func_897_call = mod.get_global_var('func_897')
func_900_call = mutated_mod.get_global_var('func_900')
call_1238 = relay.TupleGetItem(func_897_call(relay.reshape(const_1202.astype('int8'), [104,])), 6)
call_1239 = relay.TupleGetItem(func_900_call(relay.reshape(const_1202.astype('int8'), [104,])), 6)
output = relay.Tuple([call_1168,const_1190,bop_1194,const_1202,call_1210,bop_1214,call_1238,])
output2 = relay.Tuple([call_1169,const_1190,bop_1197,const_1202,call_1211,bop_1217,call_1239,])
func_1255 = relay.Function([], output)
mod['func_1255'] = func_1255
mod = relay.transform.InferType()(mod)
output = func_1255()
func_1256 = relay.Function([], output)
mutated_mod['func_1256'] = func_1256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_1267 = relay.TupleGetItem(func_21_call(), 0)
call_1268 = relay.TupleGetItem(func_23_call(), 0)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_1271 = func_55_call()
call_1272 = func_55_call()
output = relay.Tuple([call_1267,call_1271,])
output2 = relay.Tuple([call_1268,call_1272,])
func_1293 = relay.Function([], output)
mod['func_1293'] = func_1293
mod = relay.transform.InferType()(mod)
output = func_1293()
func_1294 = relay.Function([], output)
mutated_mod['func_1294'] = func_1294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_1295 = func_55_call()
call_1296 = func_55_call()
uop_1300 = relay.acos(call_1295.astype('float32')) # shape=(7, 11, 10)
uop_1302 = relay.acos(call_1296.astype('float32')) # shape=(7, 11, 10)
func_1042_call = mod.get_global_var('func_1042')
func_1046_call = mutated_mod.get_global_var('func_1046')
const_1317 = relay.const(-8, dtype = "uint16")#candidate|1317|()|const|uint16
const_1318 = relay.const([[-5,8,-1,-4,-10,-4],[-4,7,5,-7,1,-7],[1,-2,7,-6,8,2],[-3,-10,9,-9,8,-6],[-10,-4,-8,-3,-1,8],[10,-10,-9,8,1,5],[2,2,10,5,-5,-10],[-9,4,8,8,5,8],[2,-6,-6,2,4,9],[6,-5,-2,3,-10,9],[-8,-7,5,-9,-1,-2],[7,-6,10,9,9,6],[-1,-3,8,8,-1,1],[8,4,6,-8,-10,5],[2,-5,-6,-2,-1,-7],[-9,7,9,7,-9,-9],[-7,-7,3,-8,-4,6],[5,8,-5,9,9,5],[5,5,2,-6,-3,5],[-4,3,-5,9,-8,-8],[-1,8,-2,-8,-2,-8],[9,3,-8,1,3,-2],[-2,-10,8,-5,6,1],[-4,-4,3,3,9,-5],[-8,9,-10,-2,1,-5],[10,8,-3,4,7,8],[-2,-4,-10,-8,-7,10],[9,2,-3,-9,-10,1],[-5,3,-4,3,-1,-7],[-6,-9,-1,2,10,9],[4,-6,-4,-6,-1,2],[1,1,2,2,2,-3],[-10,-4,9,-4,1,5],[-5,2,-3,9,-10,5],[8,-2,-9,-5,9,1]], dtype = "uint16")#candidate|1318|(35, 6)|const|uint16
call_1316 = relay.TupleGetItem(func_1042_call(relay.reshape(const_1317.astype('uint16'), []), relay.reshape(const_1318.astype('uint16'), [2, 15, 7]), ), 0)
call_1319 = relay.TupleGetItem(func_1046_call(relay.reshape(const_1317.astype('uint16'), []), relay.reshape(const_1318.astype('uint16'), [2, 15, 7]), ), 0)
output = relay.Tuple([uop_1300,call_1316,const_1317,const_1318,])
output2 = relay.Tuple([uop_1302,call_1319,const_1317,const_1318,])
func_1328 = relay.Function([], output)
mod['func_1328'] = func_1328
mod = relay.transform.InferType()(mod)
output = func_1328()
func_1329 = relay.Function([], output)
mutated_mod['func_1329'] = func_1329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
call_1346 = func_171_call()
call_1347 = func_171_call()
output = call_1346
output2 = call_1347
func_1349 = relay.Function([], output)
mod['func_1349'] = func_1349
mod = relay.transform.InferType()(mod)
output = func_1349()
func_1350 = relay.Function([], output)
mutated_mod['func_1350'] = func_1350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1255_call = mod.get_global_var('func_1255')
func_1256_call = mutated_mod.get_global_var('func_1256')
call_1364 = relay.TupleGetItem(func_1255_call(), 5)
call_1365 = relay.TupleGetItem(func_1256_call(), 5)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_1377 = relay.TupleGetItem(func_21_call(), 0)
call_1378 = relay.TupleGetItem(func_23_call(), 0)
bop_1379 = relay.logical_and(call_1364.astype('bool'), relay.reshape(call_1377.astype('bool'), relay.shape_of(call_1364))) # shape=(7, 11, 10)
bop_1382 = relay.logical_and(call_1365.astype('bool'), relay.reshape(call_1378.astype('bool'), relay.shape_of(call_1365))) # shape=(7, 11, 10)
func_214_call = mod.get_global_var('func_214')
func_216_call = mutated_mod.get_global_var('func_216')
var_1384 = relay.var("var_1384", dtype = "float32", shape = (132,))#candidate|1384|(132,)|var|float32
call_1383 = relay.TupleGetItem(func_214_call(relay.reshape(var_1384.astype('float32'), [11, 4, 3])), 0)
call_1385 = relay.TupleGetItem(func_216_call(relay.reshape(var_1384.astype('float32'), [11, 4, 3])), 0)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
call_1386 = relay.TupleGetItem(func_601_call(), 0)
call_1387 = relay.TupleGetItem(func_603_call(), 0)
func_490_call = mod.get_global_var('func_490')
func_493_call = mutated_mod.get_global_var('func_493')
const_1395 = relay.const([8,4,10,2,-1,-2,7,-5,9,5,-2,7,-6,-10,-7,-10,-9,-5,-2,-1,-9,-10,-8,9,2,5,8,2,2,-4,-5,4,-1,-2,-7,-6,8,3,10,3,5,-6,2,6,9,3,-4,-7,7,6,4,2,-7,-2,-6,-8,5,-5,-1,-8,-9,-6,9,8,5,-2,5,5,-7,-6,1,6,-8,-2,-2,-3,3,-5,-3,8,6,-10,-2,-2,3,-3,-4,10,-2,4,5,6,-5,10,-6,9,-8,5,-6,-10,9,-1,4,4], dtype = "int8")#candidate|1395|(104,)|const|int8
call_1394 = relay.TupleGetItem(func_490_call(relay.reshape(const_1395.astype('int8'), [2, 13, 4]), relay.reshape(const_1395.astype('int8'), [2, 13, 4]), ), 1)
call_1396 = relay.TupleGetItem(func_493_call(relay.reshape(const_1395.astype('int8'), [2, 13, 4]), relay.reshape(const_1395.astype('int8'), [2, 13, 4]), ), 1)
func_909_call = mod.get_global_var('func_909')
func_911_call = mutated_mod.get_global_var('func_911')
call_1407 = relay.TupleGetItem(func_909_call(), 0)
call_1408 = relay.TupleGetItem(func_911_call(), 0)
func_619_call = mod.get_global_var('func_619')
func_622_call = mutated_mod.get_global_var('func_622')
const_1428 = relay.const([4.149856,8.822095,0.416039,3.248688,-1.271821,1.574488,-3.975188,-1.883177,4.644722,8.997158,6.242445,-0.816049,-8.485515,-0.170471,-5.242106,-2.139278,-8.855142,7.830674,-1.914110,-4.075054,-8.195789,6.774615,-4.682894,-8.669189,-0.558337,2.661808,4.505720,5.759711,-4.846419,6.682804,5.469737,-6.598341,-7.167845,5.942942,-3.415361,4.197340,4.201287,4.475110,2.459458,0.884797,-8.675767,1.711434,-4.417529,4.818735,9.548770,6.192947,-8.864932,-4.825819,0.998983,1.597686,0.663584,-5.003585,-6.505564,-4.627672,4.297076,5.491169,-4.830383,-6.442702,7.684442,-7.962440,-3.471862,9.596376,8.971156,4.261826,8.625960,9.457663,-4.830691,1.060532,7.289789,-9.805162,1.675448,-1.176681,-8.388268,-2.202095,-5.892263,-3.407534,-8.452350,6.579511,3.937725,-9.207647,-8.538297,-0.056230,8.598027,2.081855,4.902987,-1.518081,1.940056,0.841557,9.434858,-1.942530,-1.132963,-8.209352,-0.544368,-8.266564,4.226907,5.666334,-0.626160,-5.758715,1.949824,5.468071,8.729358,-2.490108,-1.792863,-2.927863,9.294861,-2.364732,-8.617546,0.206317,-4.282471,-0.758870,-8.258015,9.145576,0.533153,4.884806,5.690483,-8.354353,-1.551931,-9.169679,-4.435670,-6.026132,5.024795,5.789336,3.631536,-0.867058,-2.681246,1.007262,-9.902904,-0.616762,-3.722594,6.046141,-8.229136,-4.195951,-3.859717,3.311547,-8.986557,-7.136696,-9.908946,0.730138,-1.214677,-6.125538,-4.220923,-0.106948,-1.491003,5.399938,-8.336862,9.443284,-5.959120,5.205408,-8.631289,9.266010,-3.931077,-0.425312,3.304185,-4.084314,0.172870,-8.176026,5.082934,1.211052,1.042378,-2.622438,3.542952,-4.545880,-4.930251,-8.302051,1.746696,1.129918,7.380905,-5.911730,1.326739,0.610417,1.264597,-5.385096,-5.549940,2.768353,-9.646034,1.677947,2.838761,4.750953,1.210112,-1.601314,5.086222,-7.169280,1.674311,2.212340,9.968363,8.565848,7.190617,4.257530,6.105360,3.242159,8.857111,5.879934,8.333508,-4.626911,-9.877734,8.802393,-6.892514,9.773185,-6.171639,-0.844032,5.241559,1.267149,0.459212,-4.457418,8.057518,5.531517,-9.254209,2.272045,7.254917,-7.038168,-5.440177,-8.104001,7.719026,-0.825368,-6.112907,8.424871,-5.554199,-0.685529,-7.620407,9.471370,0.551683,-1.268045,1.052733,4.472626,9.444958,2.467984,0.555615,-8.471525,0.983317,-2.261580,0.398685,4.784497,-0.055260,0.157408,-7.684189,-5.506285,2.514421,0.701618,-7.903923,-3.351507,-5.273662,1.220016,6.369199,-8.954308,-6.511138,-8.319839,-1.983627,-9.475069,-6.779387,6.169627,-5.385037,-5.609823,-7.200439,-4.644498,-3.204373,-2.126187,-8.228635,-7.883375,5.411246,-5.102007,0.355116,3.045817,-4.342759,9.157745,-5.937355,8.340075,-5.281631,-8.123822,5.083596,-4.242879,8.585828,-3.531711,-6.593150,4.152935,0.905732,-2.964625,2.447481,5.677862,9.985867,-1.032582,5.442914,-5.730279,0.332334,3.640289,2.573262,-2.772133,-5.597516,5.328141,0.421738,7.243852,-6.915462,2.397666,1.254804,-9.438134,2.950220,-8.556454,-6.012935,6.041191,-8.426590,5.999457,-5.141288,-3.648659,-7.776776,3.728300,9.174377,9.141255,-8.770619,3.103594], dtype = "float64")#candidate|1428|(308,)|const|float64
call_1427 = relay.TupleGetItem(func_619_call(relay.reshape(const_1428.astype('float64'), [7, 11, 4]), relay.reshape(const_1428.astype('float64'), [7, 11, 4]), ), 1)
call_1429 = relay.TupleGetItem(func_622_call(relay.reshape(const_1428.astype('float64'), [7, 11, 4]), relay.reshape(const_1428.astype('float64'), [7, 11, 4]), ), 1)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_1434 = relay.TupleGetItem(func_793_call(), 0)
call_1435 = relay.TupleGetItem(func_794_call(), 0)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_1436 = relay.TupleGetItem(func_113_call(), 2)
call_1437 = relay.TupleGetItem(func_115_call(), 2)
uop_1447 = relay.atan(bop_1379.astype('float32')) # shape=(7, 11, 10)
uop_1449 = relay.atan(bop_1382.astype('float32')) # shape=(7, 11, 10)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_1461 = relay.TupleGetItem(func_793_call(), 0)
call_1462 = relay.TupleGetItem(func_794_call(), 0)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_1493 = relay.TupleGetItem(func_21_call(), 0)
call_1494 = relay.TupleGetItem(func_23_call(), 0)
bop_1496 = relay.greater(uop_1447.astype('bool'), relay.reshape(call_1427.astype('bool'), relay.shape_of(uop_1447))) # shape=(7, 11, 10)
bop_1499 = relay.greater(uop_1449.astype('bool'), relay.reshape(call_1429.astype('bool'), relay.shape_of(uop_1449))) # shape=(7, 11, 10)
output = relay.Tuple([call_1383,var_1384,call_1386,call_1394,const_1395,call_1407,const_1428,call_1434,call_1436,call_1461,call_1493,bop_1496,])
output2 = relay.Tuple([call_1385,var_1384,call_1387,call_1396,const_1395,call_1408,const_1428,call_1435,call_1437,call_1462,call_1494,bop_1499,])
func_1509 = relay.Function([var_1384,], output)
mod['func_1509'] = func_1509
mod = relay.transform.InferType()(mod)
var_1510 = relay.var("var_1510", dtype = "float32", shape = (132,))#candidate|1510|(132,)|var|float32
output = func_1509(var_1510)
func_1511 = relay.Function([var_1510], output)
mutated_mod['func_1511'] = func_1511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_1541 = relay.TupleGetItem(func_21_call(), 0)
call_1542 = relay.TupleGetItem(func_23_call(), 0)
func_706_call = mod.get_global_var('func_706')
func_708_call = mutated_mod.get_global_var('func_708')
const_1557 = relay.const([1,-6,5,1,-1,4,5,-7,10,1,1,-7,-2,2,-7,9,-1,2,5,5,-4,-6,-4,4,-10,4,-8,8,6,-5,-6,-1,-9,4,6,2,6,-9,-8,2,9,-1,-1,-6,-8,-7,5,-1,1,-8,3,-9,7,-9,2,-5,9,5,-7,-6,1,-7,-3,1,-6,-3,1,7,-9,-5,10,-1,7,9,-6,-7,8,5,6,5,5,10,9,3,6,10,-9,-4,-6,10,-10,1,5,-9,-2,-1,-4,2,-8,3,7,1,4,-2], dtype = "int8")#candidate|1557|(104,)|const|int8
call_1556 = relay.TupleGetItem(func_706_call(relay.reshape(const_1557.astype('int8'), [104,])), 1)
call_1558 = relay.TupleGetItem(func_708_call(relay.reshape(const_1557.astype('int8'), [104,])), 1)
output = relay.Tuple([call_1541,call_1556,const_1557,])
output2 = relay.Tuple([call_1542,call_1558,const_1557,])
func_1573 = relay.Function([], output)
mod['func_1573'] = func_1573
mod = relay.transform.InferType()(mod)
mutated_mod['func_1573'] = func_1573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mutated_mod.get_global_var('func_1573')
call_1574 = func_1573_call()
output = call_1574
func_1575 = relay.Function([], output)
mutated_mod['func_1575'] = func_1575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_1600 = relay.TupleGetItem(func_21_call(), 0)
call_1601 = relay.TupleGetItem(func_23_call(), 0)
func_1010_call = mod.get_global_var('func_1010')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1605 = func_1010_call()
call_1606 = func_1010_call()
func_1349_call = mod.get_global_var('func_1349')
func_1350_call = mutated_mod.get_global_var('func_1350')
call_1611 = func_1349_call()
call_1612 = func_1349_call()
func_1066_call = mod.get_global_var('func_1066')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1623 = func_1066_call()
call_1624 = func_1066_call()
output = relay.Tuple([call_1600,call_1605,call_1611,call_1623,])
output2 = relay.Tuple([call_1601,call_1606,call_1612,call_1624,])
func_1626 = relay.Function([], output)
mod['func_1626'] = func_1626
mod = relay.transform.InferType()(mod)
mutated_mod['func_1626'] = func_1626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mutated_mod.get_global_var('func_1626')
call_1627 = func_1626_call()
output = call_1627
func_1628 = relay.Function([], output)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1635 = relay.var("var_1635", dtype = "float64", shape = (7, 8, 15))#candidate|1635|(7, 8, 15)|var|float64
var_1636 = relay.var("var_1636", dtype = "float64", shape = (7, 8, 15))#candidate|1636|(7, 8, 15)|var|float64
bop_1637 = relay.mod(var_1635.astype('float64'), relay.reshape(var_1636.astype('float64'), relay.shape_of(var_1635))) # shape=(7, 8, 15)
var_1640 = relay.var("var_1640", dtype = "float64", shape = (7, 8, 15))#candidate|1640|(7, 8, 15)|var|float64
bop_1641 = relay.bitwise_xor(var_1636.astype('uint8'), relay.reshape(var_1640.astype('uint8'), relay.shape_of(var_1636))) # shape=(7, 8, 15)
output = relay.Tuple([bop_1637,bop_1641,])
output2 = relay.Tuple([bop_1637,bop_1641,])
func_1653 = relay.Function([var_1635,var_1636,var_1640,], output)
mod['func_1653'] = func_1653
mod = relay.transform.InferType()(mod)
var_1654 = relay.var("var_1654", dtype = "float64", shape = (7, 8, 15))#candidate|1654|(7, 8, 15)|var|float64
var_1655 = relay.var("var_1655", dtype = "float64", shape = (7, 8, 15))#candidate|1655|(7, 8, 15)|var|float64
var_1656 = relay.var("var_1656", dtype = "float64", shape = (7, 8, 15))#candidate|1656|(7, 8, 15)|var|float64
output = func_1653(var_1654,var_1655,var_1656,)
func_1657 = relay.Function([var_1654,var_1655,var_1656,], output)
mutated_mod['func_1657'] = func_1657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_1665 = relay.TupleGetItem(func_21_call(), 0)
call_1666 = relay.TupleGetItem(func_23_call(), 0)
output = relay.Tuple([call_1665,])
output2 = relay.Tuple([call_1666,])
func_1694 = relay.Function([], output)
mod['func_1694'] = func_1694
mod = relay.transform.InferType()(mod)
output = func_1694()
func_1695 = relay.Function([], output)
mutated_mod['func_1695'] = func_1695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_1704 = relay.TupleGetItem(func_113_call(), 1)
call_1705 = relay.TupleGetItem(func_115_call(), 1)
output = relay.Tuple([call_1704,])
output2 = relay.Tuple([call_1705,])
func_1710 = relay.Function([], output)
mod['func_1710'] = func_1710
mod = relay.transform.InferType()(mod)
output = func_1710()
func_1711 = relay.Function([], output)
mutated_mod['func_1711'] = func_1711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_535_call = mod.get_global_var('func_535')
func_536_call = mutated_mod.get_global_var('func_536')
call_1720 = func_535_call()
call_1721 = func_535_call()
func_1255_call = mod.get_global_var('func_1255')
func_1256_call = mutated_mod.get_global_var('func_1256')
call_1726 = relay.TupleGetItem(func_1255_call(), 2)
call_1727 = relay.TupleGetItem(func_1256_call(), 2)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_1728 = relay.TupleGetItem(func_567_call(), 0)
call_1729 = relay.TupleGetItem(func_569_call(), 0)
bop_1730 = relay.bitwise_and(call_1720.astype('int8'), relay.reshape(call_1728.astype('int8'), relay.shape_of(call_1720))) # shape=(7, 11, 10)
bop_1733 = relay.bitwise_and(call_1721.astype('int8'), relay.reshape(call_1729.astype('int8'), relay.shape_of(call_1721))) # shape=(7, 11, 10)
func_1010_call = mod.get_global_var('func_1010')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1743 = func_1010_call()
call_1744 = func_1010_call()
output = relay.Tuple([call_1726,bop_1730,call_1743,])
output2 = relay.Tuple([call_1727,bop_1733,call_1744,])
func_1745 = relay.Function([], output)
mod['func_1745'] = func_1745
mod = relay.transform.InferType()(mod)
mutated_mod['func_1745'] = func_1745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mutated_mod.get_global_var('func_1745')
call_1746 = func_1745_call()
output = call_1746
func_1747 = relay.Function([], output)
mutated_mod['func_1747'] = func_1747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_1774 = relay.TupleGetItem(func_113_call(), 1)
call_1775 = relay.TupleGetItem(func_115_call(), 1)
output = call_1774
output2 = call_1775
func_1782 = relay.Function([], output)
mod['func_1782'] = func_1782
mod = relay.transform.InferType()(mod)
mutated_mod['func_1782'] = func_1782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mutated_mod.get_global_var('func_1782')
call_1783 = func_1782_call()
output = call_1783
func_1784 = relay.Function([], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mod.get_global_var('func_1328')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_1824 = relay.TupleGetItem(func_1328_call(), 3)
call_1825 = relay.TupleGetItem(func_1329_call(), 3)
const_1828 = relay.const([[8,5,-6,8,-9,5],[-1,-1,4,2,-5,-1],[-3,-5,7,-1,2,6],[6,1,8,-5,2,-3],[-7,8,-1,3,7,5],[6,10,-9,-5,-2,-4],[-4,-9,-5,3,-7,-4],[-9,2,-2,1,-10,-7],[-9,8,1,-10,-1,1],[3,-5,-4,-1,-5,10],[-8,7,-4,-9,-9,2],[8,-4,3,2,9,10],[-6,8,-2,1,1,-9],[4,-6,6,-2,-2,-1],[2,-2,-3,-6,-3,-2],[-5,6,3,-3,-7,2],[8,8,-10,4,-4,-5],[-3,6,9,3,-1,2],[-6,4,3,-7,-8,1],[-5,2,-5,6,9,-2],[-10,-2,3,6,8,-5],[6,10,-8,-3,-5,-4],[-1,-6,10,9,-4,2],[5,-9,8,2,9,-7],[4,-1,5,9,4,6],[-7,6,6,-9,6,3],[-3,7,8,8,-5,1],[4,6,7,-4,7,-4],[-7,-3,4,-6,-3,-8],[10,3,8,-7,-5,-2],[7,7,-7,-6,-5,-7],[6,-5,-6,-2,-2,2],[-10,-2,-2,-7,10,2],[4,-2,-10,7,2,-7],[-6,7,-3,-8,7,-5]], dtype = "uint16")#candidate|1828|(35, 6)|const|uint16
bop_1829 = relay.mod(call_1824.astype('float32'), relay.reshape(const_1828.astype('float32'), relay.shape_of(call_1824))) # shape=(35, 6)
bop_1832 = relay.mod(call_1825.astype('float32'), relay.reshape(const_1828.astype('float32'), relay.shape_of(call_1825))) # shape=(35, 6)
uop_1836 = relay.rsqrt(bop_1829.astype('float64')) # shape=(35, 6)
uop_1838 = relay.rsqrt(bop_1832.astype('float64')) # shape=(35, 6)
bop_1839 = relay.greater_equal(uop_1836.astype('bool'), relay.reshape(bop_1829.astype('bool'), relay.shape_of(uop_1836))) # shape=(35, 6)
bop_1842 = relay.greater_equal(uop_1838.astype('bool'), relay.reshape(bop_1832.astype('bool'), relay.shape_of(uop_1838))) # shape=(35, 6)
func_1653_call = mod.get_global_var('func_1653')
func_1657_call = mutated_mod.get_global_var('func_1657')
var_1848 = relay.var("var_1848", dtype = "float64", shape = (840,))#candidate|1848|(840,)|var|float64
call_1847 = relay.TupleGetItem(func_1653_call(relay.reshape(var_1848.astype('float64'), [7, 8, 15]), relay.reshape(var_1848.astype('float64'), [7, 8, 15]), relay.reshape(var_1848.astype('float64'), [7, 8, 15]), ), 0)
call_1849 = relay.TupleGetItem(func_1657_call(relay.reshape(var_1848.astype('float64'), [7, 8, 15]), relay.reshape(var_1848.astype('float64'), [7, 8, 15]), relay.reshape(var_1848.astype('float64'), [7, 8, 15]), ), 0)
bop_1867 = relay.greater(bop_1839.astype('bool'), relay.reshape(uop_1836.astype('bool'), relay.shape_of(bop_1839))) # shape=(35, 6)
bop_1870 = relay.greater(bop_1842.astype('bool'), relay.reshape(uop_1838.astype('bool'), relay.shape_of(bop_1842))) # shape=(35, 6)
const_1882 = relay.const([[True,False,True,False,False,False],[False,False,True,False,True,True],[False,False,False,True,True,False],[False,False,True,False,True,False],[False,True,True,False,False,False],[False,True,True,False,True,True],[False,True,True,True,True,True],[False,True,True,False,False,True],[False,True,True,False,True,False],[False,True,False,True,True,False],[False,True,True,True,True,False],[False,True,True,True,False,False],[False,True,True,False,True,False],[True,False,True,False,False,False],[False,False,True,False,True,False],[False,True,True,True,False,True],[True,False,False,False,False,True],[False,False,False,False,False,True],[False,True,True,True,True,True],[True,False,True,False,False,True],[False,True,False,True,False,True],[False,False,True,True,False,True],[False,True,False,False,True,False],[True,True,False,True,False,True],[False,True,True,False,True,False],[True,True,True,True,False,True],[False,True,True,False,False,False],[True,False,True,True,False,False],[False,True,True,False,False,True],[True,True,False,True,True,True],[True,False,False,False,True,False],[True,False,True,True,False,True],[True,True,True,False,True,True],[False,True,True,True,True,True],[False,False,False,False,True,True]], dtype = "bool")#candidate|1882|(35, 6)|const|bool
bop_1883 = relay.power(bop_1867.astype('float32'), relay.reshape(const_1882.astype('float32'), relay.shape_of(bop_1867))) # shape=(35, 6)
bop_1886 = relay.power(bop_1870.astype('float32'), relay.reshape(const_1882.astype('float32'), relay.shape_of(bop_1870))) # shape=(35, 6)
func_1653_call = mod.get_global_var('func_1653')
func_1657_call = mutated_mod.get_global_var('func_1657')
call_1912 = relay.TupleGetItem(func_1653_call(relay.reshape(var_1848.astype('float64'), [7, 8, 15]), relay.reshape(call_1847.astype('float64'), [7, 8, 15]), relay.reshape(var_1848.astype('float64'), [7, 8, 15]), ), 0)
call_1913 = relay.TupleGetItem(func_1657_call(relay.reshape(var_1848.astype('float64'), [7, 8, 15]), relay.reshape(call_1847.astype('float64'), [7, 8, 15]), relay.reshape(var_1848.astype('float64'), [7, 8, 15]), ), 0)
output = relay.Tuple([call_1847,var_1848,bop_1883,call_1912,])
output2 = relay.Tuple([call_1849,var_1848,bop_1886,call_1913,])
func_1921 = relay.Function([var_1848,], output)
mod['func_1921'] = func_1921
mod = relay.transform.InferType()(mod)
var_1922 = relay.var("var_1922", dtype = "float64", shape = (840,))#candidate|1922|(840,)|var|float64
output = func_1921(var_1922)
func_1923 = relay.Function([var_1922], output)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_366_call = mod.get_global_var('func_366')
func_368_call = mutated_mod.get_global_var('func_368')
call_1930 = relay.TupleGetItem(func_366_call(), 2)
call_1931 = relay.TupleGetItem(func_368_call(), 2)
output = call_1930
output2 = call_1931
func_1932 = relay.Function([], output)
mod['func_1932'] = func_1932
mod = relay.transform.InferType()(mod)
output = func_1932()
func_1933 = relay.Function([], output)
mutated_mod['func_1933'] = func_1933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1293_call = mod.get_global_var('func_1293')
func_1294_call = mutated_mod.get_global_var('func_1294')
call_1986 = relay.TupleGetItem(func_1293_call(), 0)
call_1987 = relay.TupleGetItem(func_1294_call(), 0)
output = relay.Tuple([call_1986,])
output2 = relay.Tuple([call_1987,])
func_1989 = relay.Function([], output)
mod['func_1989'] = func_1989
mod = relay.transform.InferType()(mod)
mutated_mod['func_1989'] = func_1989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1989_call = mutated_mod.get_global_var('func_1989')
call_1990 = func_1989_call()
output = call_1990
func_1991 = relay.Function([], output)
mutated_mod['func_1991'] = func_1991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1010_call = mod.get_global_var('func_1010')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1999 = func_1010_call()
call_2000 = func_1010_call()
output = relay.Tuple([call_1999,])
output2 = relay.Tuple([call_2000,])
func_2015 = relay.Function([], output)
mod['func_2015'] = func_2015
mod = relay.transform.InferType()(mod)
output = func_2015()
func_2016 = relay.Function([], output)
mutated_mod['func_2016'] = func_2016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_2027 = relay.TupleGetItem(func_567_call(), 0)
call_2028 = relay.TupleGetItem(func_569_call(), 0)
output = relay.Tuple([call_2027,])
output2 = relay.Tuple([call_2028,])
func_2030 = relay.Function([], output)
mod['func_2030'] = func_2030
mod = relay.transform.InferType()(mod)
output = func_2030()
func_2031 = relay.Function([], output)
mutated_mod['func_2031'] = func_2031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2015_call = mod.get_global_var('func_2015')
func_2016_call = mutated_mod.get_global_var('func_2016')
call_2039 = relay.TupleGetItem(func_2015_call(), 0)
call_2040 = relay.TupleGetItem(func_2016_call(), 0)
func_1293_call = mod.get_global_var('func_1293')
func_1294_call = mutated_mod.get_global_var('func_1294')
call_2044 = relay.TupleGetItem(func_1293_call(), 0)
call_2045 = relay.TupleGetItem(func_1294_call(), 0)
output = relay.Tuple([call_2039,call_2044,])
output2 = relay.Tuple([call_2040,call_2045,])
func_2047 = relay.Function([], output)
mod['func_2047'] = func_2047
mod = relay.transform.InferType()(mod)
mutated_mod['func_2047'] = func_2047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2047_call = mutated_mod.get_global_var('func_2047')
call_2048 = func_2047_call()
output = call_2048
func_2049 = relay.Function([], output)
mutated_mod['func_2049'] = func_2049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_671_call = mod.get_global_var('func_671')
func_672_call = mutated_mod.get_global_var('func_672')
call_2098 = relay.TupleGetItem(func_671_call(), 0)
call_2099 = relay.TupleGetItem(func_672_call(), 0)
output = call_2098
output2 = call_2099
func_2113 = relay.Function([], output)
mod['func_2113'] = func_2113
mod = relay.transform.InferType()(mod)
mutated_mod['func_2113'] = func_2113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2113_call = mutated_mod.get_global_var('func_2113')
call_2114 = func_2113_call()
output = call_2114
func_2115 = relay.Function([], output)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2131 = relay.var("var_2131", dtype = "float32", shape = (1, 2, 13))#candidate|2131|(1, 2, 13)|var|float32
const_2132 = relay.const([[[-6.213556,8.446786,-8.900245,-8.756083,-5.972571,-3.752991,-2.929063,8.859564,5.930548,2.733670,-1.961548,-3.335352,-5.085875],[-4.299801,-5.142698,3.985183,-3.715956,8.296533,6.192917,1.185930,-0.761386,7.398920,-3.165103,8.478105,-5.229665,-4.173150]],[[-2.027303,-2.760747,6.773396,6.736221,-9.170482,0.720936,7.897429,0.308584,-1.603842,-4.416413,7.498570,8.190706,0.723604],[3.917670,5.225133,-7.816553,-2.508464,-1.195651,5.865450,-2.740217,8.856983,-0.583163,-4.853059,9.635914,0.528638,9.486522]],[[9.218543,-5.735896,6.382516,-5.243325,2.264919,-3.782223,4.750624,-2.914380,-6.836839,6.865520,-2.565124,-2.683657,5.577068],[9.841729,-0.024198,3.656567,5.391228,-3.051823,8.748084,1.612884,1.517906,4.512498,2.622512,0.053815,-0.221729,9.137575]],[[9.162727,8.834934,7.959061,7.126274,-8.548910,2.669343,-1.041350,-7.230058,-8.542683,-7.677124,-5.395565,-5.795683,2.811828],[6.923178,-2.640366,-9.297144,7.760411,2.519546,-6.915895,-8.659997,0.272967,-7.623765,2.377733,-9.168709,2.799956,6.764812]],[[-5.518644,4.620619,1.732620,3.399726,2.487320,2.308038,0.479876,9.361995,2.381459,-0.599252,5.264316,-7.497588,-4.871232],[-9.792840,-0.563195,0.993104,3.204217,-6.452481,3.422017,5.303921,-9.997525,0.118834,9.975881,1.283460,-6.736136,0.762164]],[[7.249987,-5.481934,-1.993771,1.926357,-5.951126,4.717072,8.681907,8.905726,7.540478,2.945837,7.170344,-8.770227,7.768969],[-7.936917,2.924270,0.081603,4.567439,-6.463973,-3.378670,-3.231548,-6.794664,-1.029395,-8.836440,2.839182,-7.027454,9.812365]]], dtype = "float32")#candidate|2132|(6, 2, 13)|const|float32
bop_2133 = relay.mod(var_2131.astype('float32'), const_2132.astype('float32')) # shape=(6, 2, 13)
uop_2144 = relay.exp(const_2132.astype('float32')) # shape=(6, 2, 13)
output = relay.Tuple([bop_2133,uop_2144,])
output2 = relay.Tuple([bop_2133,uop_2144,])
func_2162 = relay.Function([var_2131,], output)
mod['func_2162'] = func_2162
mod = relay.transform.InferType()(mod)
var_2163 = relay.var("var_2163", dtype = "float32", shape = (1, 2, 13))#candidate|2163|(1, 2, 13)|var|float32
output = func_2162(var_2163)
func_2164 = relay.Function([var_2163], output)
mutated_mod['func_2164'] = func_2164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mod.get_global_var('func_1328')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_2201 = relay.TupleGetItem(func_1328_call(), 2)
call_2202 = relay.TupleGetItem(func_1329_call(), 2)
const_2203 = relay.const([[-10,-9,10]], dtype = "uint16")#candidate|2203|(1, 3)|const|uint16
bop_2204 = relay.maximum(call_2201.astype('int64'), const_2203.astype('int64')) # shape=(1, 3)
bop_2207 = relay.maximum(call_2202.astype('int64'), const_2203.astype('int64')) # shape=(1, 3)
func_384_call = mod.get_global_var('func_384')
func_387_call = mutated_mod.get_global_var('func_387')
var_2224 = relay.var("var_2224", dtype = "float32", shape = (1365,))#candidate|2224|(1365,)|var|float32
call_2223 = relay.TupleGetItem(func_384_call(relay.reshape(var_2224.astype('float32'), [7, 13, 15])), 0)
call_2225 = relay.TupleGetItem(func_387_call(relay.reshape(var_2224.astype('float32'), [7, 13, 15])), 0)
output = relay.Tuple([bop_2204,call_2223,var_2224,])
output2 = relay.Tuple([bop_2207,call_2225,var_2224,])
func_2229 = relay.Function([var_2224,], output)
mod['func_2229'] = func_2229
mod = relay.transform.InferType()(mod)
var_2230 = relay.var("var_2230", dtype = "float32", shape = (1365,))#candidate|2230|(1365,)|var|float32
output = func_2229(var_2230)
func_2231 = relay.Function([var_2230], output)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1747_call = mutated_mod.get_global_var('func_1747')
call_2252 = relay.TupleGetItem(func_1745_call(), 1)
call_2253 = relay.TupleGetItem(func_1747_call(), 1)
func_619_call = mod.get_global_var('func_619')
func_622_call = mutated_mod.get_global_var('func_622')
var_2257 = relay.var("var_2257", dtype = "float64", shape = (308,))#candidate|2257|(308,)|var|float64
call_2256 = relay.TupleGetItem(func_619_call(relay.reshape(var_2257.astype('float64'), [7, 11, 4]), relay.reshape(var_2257.astype('float64'), [7, 11, 4]), ), 0)
call_2258 = relay.TupleGetItem(func_622_call(relay.reshape(var_2257.astype('float64'), [7, 11, 4]), relay.reshape(var_2257.astype('float64'), [7, 11, 4]), ), 0)
bop_2267 = relay.not_equal(call_2256.astype('bool'), relay.reshape(var_2257.astype('bool'), relay.shape_of(call_2256))) # shape=(7, 11, 4)
bop_2270 = relay.not_equal(call_2258.astype('bool'), relay.reshape(var_2257.astype('bool'), relay.shape_of(call_2258))) # shape=(7, 11, 4)
output = relay.Tuple([call_2252,bop_2267,])
output2 = relay.Tuple([call_2253,bop_2270,])
func_2279 = relay.Function([var_2257,], output)
mod['func_2279'] = func_2279
mod = relay.transform.InferType()(mod)
mutated_mod['func_2279'] = func_2279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2280 = relay.var("var_2280", dtype = "float64", shape = (308,))#candidate|2280|(308,)|var|float64
func_2279_call = mutated_mod.get_global_var('func_2279')
call_2281 = func_2279_call(var_2280)
output = call_2281
func_2282 = relay.Function([var_2280], output)
mutated_mod['func_2282'] = func_2282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2344 = relay.var("var_2344", dtype = "float32", shape = (7, 1, 7))#candidate|2344|(7, 1, 7)|var|float32
var_2345 = relay.var("var_2345", dtype = "float32", shape = (7, 11, 7))#candidate|2345|(7, 11, 7)|var|float32
bop_2346 = relay.floor_mod(var_2344.astype('float32'), var_2345.astype('float32')) # shape=(7, 11, 7)
func_909_call = mod.get_global_var('func_909')
func_911_call = mutated_mod.get_global_var('func_911')
call_2351 = relay.TupleGetItem(func_909_call(), 0)
call_2352 = relay.TupleGetItem(func_911_call(), 0)
output = relay.Tuple([bop_2346,call_2351,])
output2 = relay.Tuple([bop_2346,call_2352,])
func_2355 = relay.Function([var_2344,var_2345,], output)
mod['func_2355'] = func_2355
mod = relay.transform.InferType()(mod)
var_2356 = relay.var("var_2356", dtype = "float32", shape = (7, 1, 7))#candidate|2356|(7, 1, 7)|var|float32
var_2357 = relay.var("var_2357", dtype = "float32", shape = (7, 11, 7))#candidate|2357|(7, 11, 7)|var|float32
output = func_2355(var_2356,var_2357,)
func_2358 = relay.Function([var_2356,var_2357,], output)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_2377 = relay.TupleGetItem(func_21_call(), 0)
call_2378 = relay.TupleGetItem(func_23_call(), 0)
output = relay.Tuple([call_2377,])
output2 = relay.Tuple([call_2378,])
func_2380 = relay.Function([], output)
mod['func_2380'] = func_2380
mod = relay.transform.InferType()(mod)
mutated_mod['func_2380'] = func_2380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mutated_mod.get_global_var('func_2380')
call_2381 = func_2380_call()
output = call_2381
func_2382 = relay.Function([], output)
mutated_mod['func_2382'] = func_2382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
call_2383 = func_171_call()
call_2384 = func_171_call()
func_619_call = mod.get_global_var('func_619')
func_622_call = mutated_mod.get_global_var('func_622')
var_2386 = relay.var("var_2386", dtype = "float64", shape = (308, 1))#candidate|2386|(308, 1)|var|float64
call_2385 = relay.TupleGetItem(func_619_call(relay.reshape(var_2386.astype('float64'), [7, 11, 4]), relay.reshape(var_2386.astype('float64'), [7, 11, 4]), ), 1)
call_2387 = relay.TupleGetItem(func_622_call(relay.reshape(var_2386.astype('float64'), [7, 11, 4]), relay.reshape(var_2386.astype('float64'), [7, 11, 4]), ), 1)
func_784_call = mod.get_global_var('func_784')
func_786_call = mutated_mod.get_global_var('func_786')
const_2390 = relay.const(-1, dtype = "uint32")#candidate|2390|()|const|uint32
call_2389 = relay.TupleGetItem(func_784_call(relay.reshape(const_2390.astype('uint32'), [])), 1)
call_2391 = relay.TupleGetItem(func_786_call(relay.reshape(const_2390.astype('uint32'), [])), 1)
output = relay.Tuple([call_2383,call_2385,var_2386,call_2389,const_2390,])
output2 = relay.Tuple([call_2384,call_2387,var_2386,call_2391,const_2390,])
func_2403 = relay.Function([var_2386,], output)
mod['func_2403'] = func_2403
mod = relay.transform.InferType()(mod)
mutated_mod['func_2403'] = func_2403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2404 = relay.var("var_2404", dtype = "float64", shape = (308, 1))#candidate|2404|(308, 1)|var|float64
func_2403_call = mutated_mod.get_global_var('func_2403')
call_2405 = func_2403_call(var_2404)
output = call_2405
func_2406 = relay.Function([var_2404], output)
mutated_mod['func_2406'] = func_2406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_2484 = relay.TupleGetItem(func_567_call(), 0)
call_2485 = relay.TupleGetItem(func_569_call(), 0)
output = relay.Tuple([call_2484,])
output2 = relay.Tuple([call_2485,])
func_2489 = relay.Function([], output)
mod['func_2489'] = func_2489
mod = relay.transform.InferType()(mod)
output = func_2489()
func_2490 = relay.Function([], output)
mutated_mod['func_2490'] = func_2490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_2517 = relay.TupleGetItem(func_2030_call(), 0)
call_2518 = relay.TupleGetItem(func_2031_call(), 0)
output = relay.Tuple([call_2517,])
output2 = relay.Tuple([call_2518,])
func_2521 = relay.Function([], output)
mod['func_2521'] = func_2521
mod = relay.transform.InferType()(mod)
output = func_2521()
func_2522 = relay.Function([], output)
mutated_mod['func_2522'] = func_2522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_2531 = func_1066_call()
call_2532 = func_1066_call()
output = call_2531
output2 = call_2532
func_2539 = relay.Function([], output)
mod['func_2539'] = func_2539
mod = relay.transform.InferType()(mod)
output = func_2539()
func_2540 = relay.Function([], output)
mutated_mod['func_2540'] = func_2540
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2557 = relay.const([[[6.531616,-7.734791,0.996776],[3.557661,1.313292,-7.443326],[-6.279785,4.897090,0.980377],[0.642711,6.774822,3.859199],[-4.320487,-0.432615,-0.160057],[-2.304975,7.034749,7.455052],[-1.041570,-1.414115,-8.039866],[3.440846,-4.389075,2.248598],[-4.449439,-8.504362,4.051841]],[[-0.330698,9.684845,7.489808],[-1.480856,5.333945,-5.600002],[5.941175,5.245580,-9.274454],[-4.112025,-7.431510,-2.801322],[-7.751070,5.885790,2.087964],[-1.832748,-5.720086,-4.092172],[2.639443,2.722791,7.806639],[8.050973,-9.266284,-5.405828],[2.073325,-1.165663,4.340297]],[[6.370455,-3.850735,0.098717],[1.190864,1.913178,5.660160],[2.797407,-1.755051,2.430308],[3.759201,-5.600596,8.535954],[-9.695683,8.987187,-2.119885],[-4.952557,-7.186569,-4.719402],[-9.120218,6.506744,-4.035829],[4.996325,-0.709556,-0.077081],[1.611296,-4.280090,-5.156180]],[[-9.759431,-7.864482,4.959710],[1.342090,1.541198,-8.354600],[1.471897,3.659500,-6.603978],[8.323786,-0.351837,-6.273559],[8.671228,-0.004548,6.681523],[8.609055,7.460238,-8.346487],[-4.201076,-9.025557,5.257962],[-6.069913,9.610783,-9.363780],[9.380941,-2.145928,6.916510]],[[-3.561359,-8.217545,-2.402604],[9.430853,-6.964697,-7.400007],[-4.186657,-1.205528,-1.450066],[4.049627,-8.763674,-3.880345],[5.121185,-2.157980,8.187343],[-8.568001,-1.104780,-4.005464],[-4.124150,-6.613685,2.929863],[1.632455,2.087621,-2.470773],[-4.956948,-6.993896,1.772704]],[[8.318439,-5.806557,-6.008688],[3.868368,-0.990245,5.860289],[-3.743414,-9.793454,-1.513159],[9.699403,5.735942,9.435620],[-8.969239,-4.550707,-6.817335],[-6.565272,-1.739561,0.445274],[-5.388757,9.285538,-6.843866],[-3.693421,-3.651772,4.895302],[-0.530533,5.963356,-2.882462]],[[1.777418,-9.473744,7.995188],[6.463435,-1.258718,9.494862],[-3.386351,-3.321370,-1.451674],[4.428416,4.494972,6.483668],[-3.659247,-4.353086,-9.189742],[1.662115,8.246304,0.461408],[-0.456464,-9.195789,-9.876318],[2.525399,-6.746290,-8.151583],[-8.004203,4.290225,5.781546]],[[3.345034,-9.076695,3.854997],[-4.825831,-3.283466,-9.843978],[-1.734125,1.842606,5.383488],[-7.155472,-9.776728,-6.854560],[0.895613,-8.540654,9.982061],[-0.371556,-2.644509,-7.325213],[1.922256,-0.558767,-6.101803],[1.466655,7.756187,-1.151351],[-4.650225,5.432969,4.097207]],[[0.759651,7.633071,0.207850],[5.760445,6.152331,-2.750257],[-0.392675,-9.508471,9.065985],[8.933176,3.261413,7.023161],[-7.540183,9.935873,3.791749],[7.456932,1.500144,-9.325968],[9.971993,-8.942343,9.142312],[-7.848796,-9.185506,-9.311692],[-0.071277,-2.648711,4.700126]],[[6.557486,3.351386,7.211759],[6.455266,3.725034,2.674354],[2.957405,-1.765796,3.754157],[-9.727822,3.153545,-2.866268],[-3.003467,1.631798,2.702498],[1.637068,-9.013886,4.564505],[7.799521,7.229677,2.639090],[-2.767748,0.532074,9.932769],[4.365892,5.351504,-2.397840]],[[-5.740063,-2.569586,-4.522607],[-1.227953,-8.833865,-1.024173],[3.449261,-5.505554,6.614261],[5.752772,-7.482557,-7.091870],[-9.780911,9.781745,-4.129361],[7.377029,-5.546266,-8.942479],[7.833227,-0.998801,-0.400073],[7.383980,-5.875179,-9.902182],[-1.187668,-5.283076,-9.964843]],[[-0.284434,-4.428095,-0.963778],[0.637102,0.832290,8.433669],[-1.008949,4.674987,-8.811653],[-4.176976,5.711357,0.946149],[-0.423349,4.950666,-4.194880],[1.336612,-3.498429,-3.977268],[-0.741401,4.406471,-5.480585],[4.262141,4.049652,9.885319],[-3.062036,-9.675506,9.717224]],[[3.121607,4.931777,-2.601714],[6.631823,-9.266211,0.109590],[-3.917611,-3.393399,5.956009],[8.583863,-8.258160,1.229749],[-5.530668,0.808797,7.049233],[0.394435,-6.333763,-1.138171],[-1.276522,-7.615489,8.064303],[-4.386362,4.134513,6.737321],[2.025245,9.145217,-7.952027]],[[4.745815,7.621170,3.604082],[7.793776,2.972214,8.979620],[-9.267048,6.005203,-0.334470],[-5.908481,5.182413,3.675747],[5.280786,2.216563,-6.296842],[7.016359,-3.527414,-8.549901],[-8.545411,-5.705058,9.878266],[7.809840,-7.506316,-7.558339],[6.691860,8.212288,-7.615913]],[[-4.970625,8.561445,9.368521],[7.771834,7.361426,3.990020],[4.646948,-8.899426,8.585977],[4.673932,8.304891,-7.947480],[-9.831238,8.777501,-0.093081],[-7.950655,1.770525,-3.499907],[-5.320194,7.706700,1.094990],[8.398823,-4.785925,7.874800],[-4.803198,-2.602602,-1.403934]],[[5.631617,3.085354,-7.968432],[8.490400,-2.521726,-8.274721],[0.971272,-4.242437,-3.891433],[6.031451,-0.105888,8.784564],[5.494780,-3.533615,-6.602737],[-2.097057,4.440121,-2.334543],[9.045428,-1.624263,-9.229220],[-2.963228,6.483170,-3.847801],[3.306463,-9.134822,-0.246617]]], dtype = "float64")#candidate|2557|(16, 9, 3)|const|float64
var_2558 = relay.var("var_2558", dtype = "float64", shape = (16, 9, 3))#candidate|2558|(16, 9, 3)|var|float64
bop_2559 = relay.floor_mod(const_2557.astype('float64'), relay.reshape(var_2558.astype('float64'), relay.shape_of(const_2557))) # shape=(16, 9, 3)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2562 = relay.TupleGetItem(func_1626_call(), 0)
call_2563 = relay.TupleGetItem(func_1628_call(), 0)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_2571 = relay.TupleGetItem(func_567_call(), 0)
call_2572 = relay.TupleGetItem(func_569_call(), 0)
func_2489_call = mod.get_global_var('func_2489')
func_2490_call = mutated_mod.get_global_var('func_2490')
call_2583 = relay.TupleGetItem(func_2489_call(), 0)
call_2584 = relay.TupleGetItem(func_2490_call(), 0)
var_2585 = relay.var("var_2585", dtype = "float64", shape = (16, 9, 3))#candidate|2585|(16, 9, 3)|var|float64
bop_2586 = relay.equal(var_2558.astype('bool'), relay.reshape(var_2585.astype('bool'), relay.shape_of(var_2558))) # shape=(16, 9, 3)
output = relay.Tuple([bop_2559,call_2562,call_2571,call_2583,bop_2586,])
output2 = relay.Tuple([bop_2559,call_2563,call_2572,call_2584,bop_2586,])
func_2618 = relay.Function([var_2558,var_2585,], output)
mod['func_2618'] = func_2618
mod = relay.transform.InferType()(mod)
var_2619 = relay.var("var_2619", dtype = "float64", shape = (16, 9, 3))#candidate|2619|(16, 9, 3)|var|float64
var_2620 = relay.var("var_2620", dtype = "float64", shape = (16, 9, 3))#candidate|2620|(16, 9, 3)|var|float64
output = func_2618(var_2619,var_2620,)
func_2621 = relay.Function([var_2619,var_2620,], output)
mutated_mod['func_2621'] = func_2621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_2632 = relay.TupleGetItem(func_1573_call(), 1)
call_2633 = relay.TupleGetItem(func_1575_call(), 1)
uop_2644 = relay.sqrt(call_2632.astype('float64')) # shape=(2, 13, 4)
uop_2646 = relay.sqrt(call_2633.astype('float64')) # shape=(2, 13, 4)
bop_2649 = relay.floor_divide(uop_2644.astype('float64'), relay.reshape(call_2632.astype('float64'), relay.shape_of(uop_2644))) # shape=(2, 13, 4)
bop_2652 = relay.floor_divide(uop_2646.astype('float64'), relay.reshape(call_2633.astype('float64'), relay.shape_of(uop_2646))) # shape=(2, 13, 4)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
call_2656 = func_171_call()
call_2657 = func_171_call()
output = relay.Tuple([bop_2649,call_2656,])
output2 = relay.Tuple([bop_2652,call_2657,])
func_2663 = relay.Function([], output)
mod['func_2663'] = func_2663
mod = relay.transform.InferType()(mod)
output = func_2663()
func_2664 = relay.Function([], output)
mutated_mod['func_2664'] = func_2664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1349_call = mod.get_global_var('func_1349')
func_1350_call = mutated_mod.get_global_var('func_1350')
call_2735 = func_1349_call()
call_2736 = func_1349_call()
uop_2746 = relay.tan(call_2735.astype('float32')) # shape=(7, 11, 10)
uop_2748 = relay.tan(call_2736.astype('float32')) # shape=(7, 11, 10)
output = uop_2746
output2 = uop_2748
func_2766 = relay.Function([], output)
mod['func_2766'] = func_2766
mod = relay.transform.InferType()(mod)
output = func_2766()
func_2767 = relay.Function([], output)
mutated_mod['func_2767'] = func_2767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_2785 = func_271_call()
call_2786 = func_271_call()
output = relay.Tuple([call_2785,])
output2 = relay.Tuple([call_2786,])
func_2787 = relay.Function([], output)
mod['func_2787'] = func_2787
mod = relay.transform.InferType()(mod)
output = func_2787()
func_2788 = relay.Function([], output)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_2792 = func_1066_call()
call_2793 = func_1066_call()
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_2807 = relay.TupleGetItem(func_2047_call(), 0)
call_2808 = relay.TupleGetItem(func_2049_call(), 0)
func_366_call = mod.get_global_var('func_366')
func_368_call = mutated_mod.get_global_var('func_368')
call_2827 = relay.TupleGetItem(func_366_call(), 1)
call_2828 = relay.TupleGetItem(func_368_call(), 1)
output = relay.Tuple([call_2792,call_2807,call_2827,])
output2 = relay.Tuple([call_2793,call_2808,call_2828,])
func_2834 = relay.Function([], output)
mod['func_2834'] = func_2834
mod = relay.transform.InferType()(mod)
mutated_mod['func_2834'] = func_2834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2834_call = mutated_mod.get_global_var('func_2834')
call_2835 = func_2834_call()
output = call_2835
func_2836 = relay.Function([], output)
mutated_mod['func_2836'] = func_2836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2539_call = mod.get_global_var('func_2539')
func_2540_call = mutated_mod.get_global_var('func_2540')
call_2845 = func_2539_call()
call_2846 = func_2539_call()
func_706_call = mod.get_global_var('func_706')
func_708_call = mutated_mod.get_global_var('func_708')
var_2855 = relay.var("var_2855", dtype = "int8", shape = (104,))#candidate|2855|(104,)|var|int8
call_2854 = relay.TupleGetItem(func_706_call(relay.reshape(var_2855.astype('int8'), [104,])), 0)
call_2856 = relay.TupleGetItem(func_708_call(relay.reshape(var_2855.astype('int8'), [104,])), 0)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
const_2861 = relay.const([6.888420,5.635824,-9.472284,4.603209,3.813981,-6.492889,-7.083124,-2.073335,-2.715099,-3.879270,9.743483,-9.382623,7.623090,2.368809,-7.722512,-3.487304,2.903102,-6.285206,-5.856524,-6.887633,0.051971,4.211903,-4.192114,-6.827121,-2.537752,1.696678,-9.464811,4.407237,9.292892,-8.678244,2.848796,-8.796281,7.478023,1.884194,-5.066990,2.840023,-1.044341,-7.224233,-4.269766,7.366518,6.612674,-2.054313,1.965444,-3.382206,-9.396017,-2.219231,3.709568,-1.402237,8.551566,-1.066257,5.545431,3.651709,-8.015491,3.462489,-4.316252,8.016351,7.840441,9.716020,-9.893273,-0.845349,0.960709,-9.698505,0.678908,1.771528,-2.602500,-2.115616,1.764677,-8.722131,1.556541,-1.661553,-0.891402,-7.475313,5.934484,-1.121249,5.459102,-2.278518,2.743538,8.241415,8.392866,4.179234,-0.735221,8.002908,2.710793,5.424552,9.192819,3.402949,5.528210,-3.147632,0.138398,-7.235087,0.416247,1.654540,-9.543657,0.025110,5.289674,1.719367,-0.284225,3.396554,-8.109445,0.676237,-8.849694,-5.345916,-2.753228,-0.049185,6.118446,-8.294680,7.332789,-5.954899,-7.084598,7.874162,-0.359754,5.530238,-9.431709,9.209628,5.933717,-5.260943,9.691691,4.994903,9.300849,4.360990,0.459054,1.133523,-9.996532,-1.244578,5.274943,-6.267299,-2.651416,8.332097,8.692239,-7.486497,6.638301,-5.453570,4.697418,-5.085435,-9.396401,8.666144,7.083681,-4.975390,-9.573801,-3.878811,2.211447,-2.711008,-8.950177,-5.076737,-5.614747,-8.123389,9.792214,-9.092147,-0.674885,-0.196182,-4.252744,-7.425451,-3.397827,7.871537,4.528561,6.846299,1.796584,5.936238,9.899666,0.718390,-1.965871,3.364024,-1.390737,-8.183730,-8.821597,8.112955,-0.209305,-7.898095,3.961083,-7.231592,1.528606,7.398754,8.745640,-9.095104,-2.652634,-5.916015,2.471313,-6.229055,6.992164,-8.939140,5.802203,-7.940967,-7.490756,9.753404,9.803542,-0.264186,3.600347,3.083042,-6.415893,4.025755,9.077343,5.733940,0.584104,-5.491637,-3.072929,-5.070074,4.993960,-4.427542,3.676842,0.565878,2.937076,8.507548,5.618842,6.133651,-9.129701,-7.597842,-3.979745,-1.317433,7.342729,-1.984031,3.545017,-8.200105,8.308015,-0.578085,-3.495692,1.380744,-6.418967,-1.409872,6.463967,5.801187,-8.588363,5.397217,-2.917614,-8.601475,3.595133,5.082581,7.002916,3.104478,-6.273574,8.938351,6.276102,-5.009992,2.389534,2.548087,-2.605357,-1.809673,-3.214080,2.217202,4.372615,-5.365330,-3.472575,9.757452,1.784204,9.947182,3.693260,-7.447605,5.337558,-4.300919,2.142179,-0.108540,-5.379417,-1.591966,-3.533282,2.736914,5.815817,-3.976250,-1.787517,6.570779,-6.101598,5.422594,8.788107,-6.101696,7.969101,0.954572,-9.591953,-7.004239,-7.419260,4.246649,3.929762,-0.046186,1.119322,-6.222669,5.668630,9.320907,-2.678347,4.813297,6.139061,1.524482,-7.709038,0.806271,-8.224747,9.980243,0.424737,0.760097,-0.761234,6.392308,0.049567,8.223765,-0.905951,-9.867058,5.762795,-9.777977,-9.653671,1.060432,2.051276,2.585875,1.290517,-0.758261,-0.102601,1.375649,-3.453742,-3.595196,-8.814207,-6.159616,-7.473428,-4.980425,-2.570759,-1.627675,-3.107107,8.101057,8.031798,9.217637,2.752621,5.024116,5.076343,-3.199153,8.862756,2.924968,-0.775919,-8.582965,8.445223,5.322891,-4.747092,-3.532820,6.125522,-5.794652,-9.709176,4.448373,6.065710,4.712655,1.225334,-1.196472,-6.565282,6.347461,2.284193,-7.368459,-6.935437,-2.207852,7.151870,9.659627,-7.430930,6.442213,7.018243,4.484214,0.211749,5.473834,-7.846957,-7.025940,-1.983861,-9.974845,0.270244,-5.008844,-0.100591,-5.548079,5.062982,-6.169306,1.276293,-8.218419,5.523505,-3.360906,2.344083,0.028184,6.790854,-7.391379,9.388851,-4.872392,1.940163,-9.033623,9.226092,-0.545130,-1.175691,3.166659,-3.643805,-4.531692,3.553401,8.917141,0.441725,-3.453844,-0.621828,-3.849776,6.827325,-8.767296,6.491659,-3.248171,-8.491990,6.120228,-5.573197,-7.718246,-4.085465,-1.571302,2.886606,-5.261465,-2.857269,-1.619975,-7.286925,0.638729,6.197821,-4.434281,-9.089215,4.676650,5.412756,-7.625353,3.270888,7.602122,1.189543,5.590856,8.100591,9.190326,0.491047,-1.495644,-7.739473,2.137299,9.983276,-3.521209,6.014546,-2.524096,-7.370748,-3.689420,-0.953953,-5.082813,8.758689,-2.886658,2.917379,-7.288327,4.769819,-8.852058,-5.297383,1.867167,-1.887400,-5.964586,-1.324204,-0.552659,6.797392,-2.750366,-4.628742,9.383178,7.147207,-3.120442,-6.412243,8.579123,2.177124,6.905442,1.377077,-5.867863,6.546520,3.412729,4.265948,-3.734830,-6.983031,-0.148491,7.145173,-1.547549,-3.060513,-1.687315,-9.028122,-6.250507,5.562454,2.827363,6.067999,-9.940917,-7.336954,-8.932223,-7.020432,-5.123950,9.859449,7.082983,4.357522,4.631244,0.757829,-2.533777,0.113823,2.313187,-7.794111,-0.912831,-6.752681,-2.693609,-1.137095,0.550439,-1.795280,-7.172872,-4.270060,-9.249423,4.249136,0.872003,9.525715,-7.603141,5.901943,-2.825487,5.300907,2.029911,1.733991,-8.723658,-1.729988,-6.546326,-7.161578,-8.572260,2.070720,-2.568347,7.127195,6.212141,7.559592,9.110637,8.775343,-0.241045,-3.826874,7.304758,-5.935773,-1.300254,9.086194,0.136181,7.029372,-2.175561,-3.951631,0.700399,2.282770,7.687619,4.405758,5.843645,-9.227905,8.504746,6.336606,-5.131796,-7.943044,-1.886998,-4.675241,4.211526,2.591650,-5.843318,-7.263333,0.213189,-1.173778,-0.488637,-4.508461,-2.899719,-9.071375,3.865449,-8.778635,4.080890,-1.259805,-8.762642,1.510219,-4.725933,-4.756743,-0.099042,4.306134,-4.099622,-9.188407,1.917968,-5.354983,2.524925,4.064087,-5.675646,6.497051,-6.873021,1.892772,-3.946734,4.424974,9.380017,6.565840,-8.255082,-7.632795,-4.275370,-7.719514,1.451291,5.204010,5.293586,6.287626,3.480709,7.514250,3.795284,-3.977622,4.952774,-8.264570,9.133508,-1.518222,-9.711620,-5.066364,-6.524645,-4.418084,0.457271,-2.413426,-6.546098,-6.267238,-3.726292,-8.306774,-7.381036,9.953667,-9.292830,6.928833,9.681924,8.723903,-6.321204,-5.355776,-2.149057,-3.985235,4.271483,-3.534412,-8.285416,1.071485,-1.461146,-0.657574,-4.037316,-0.778506,-5.189616,3.377795,-3.428018,3.414223,-9.145764,5.364405,8.162931,0.129678,-6.551063,-5.910372,-7.034549,-0.909502,5.957427,-8.926563,-1.318327,-7.704361,-6.791162,3.900572,5.060403,9.998450,-5.097449,-5.034498,-3.722609,-7.497170,-7.551619,8.624916,-2.329895,2.050292,9.479633,-7.485598,8.068968,-1.326282,-8.211131,-7.408744,-9.218111,1.896031,-9.007760,-3.483097,6.456001,0.659194,-0.122440,1.403704,-1.932635,-2.939744,-7.575470,-0.796651,-5.695177,0.379373,-4.018331,-7.104520,0.161654,0.345041,7.326362,-5.289332,1.587766,-5.599073,-1.386811,-4.187268,2.196262,-3.586470,3.391644,8.266848,1.906025,-0.510871,-1.755081,8.048241,3.908257,0.737337,-1.822542,8.239144,1.895913,8.342979,1.814476,9.081579,9.267259,-0.523763,-0.726022,-7.654646,-3.632070,6.927866,2.368660,-9.769085,7.930702,0.995064,1.242913,0.694789,9.329633,5.046454,6.297380,6.421053,-6.630833,0.504223,6.398557,4.975103,0.952663,-5.864700,1.216750,3.461479,-8.029906,-2.318230,8.638826,-1.332773,7.815925,-5.524443,-3.457816,8.697131,6.762463,5.924314,-6.903776,3.381904,1.430956,-4.803876,-9.362021,-2.665148,-1.728178,9.793513,-9.158895,-6.563252,4.146398,-8.454097,-1.923519,-4.750404,8.772048,-8.806004,-2.634962,6.925637,2.182928,-5.494814,0.709111,-3.407163,-5.333131,3.090658,-0.679686,-9.677482,-2.161716,7.990048,-9.170460,0.878865,-8.643203,2.895374,4.751966,-5.669529,-9.241825,-8.776114,1.106776,5.190090,-3.381666,1.212584,8.879120,-7.585470,-8.292276,-4.118892,-6.671332,-3.969556,-6.064658,2.385475,-4.581990,-2.405289,0.265902,-9.455965,-5.739550,-9.991228,4.265120,8.520301,3.814729,-2.197751,0.950105,-8.161896,-7.702212,-5.154536,-8.386608,-8.124155,-4.864576,4.399912,-2.714984,-2.504008,0.694196,2.096445,-8.163187,3.064920,3.163151,-2.378529,0.577433,-9.228231,1.396088,-8.456223,-1.347903,3.366253,1.750933,-3.614194,-4.776430,-4.702112,4.135532,-6.515792,-1.276266,5.603743,-2.857281,2.172328,-8.444233,6.778456,-2.109210,0.584570,7.862022,3.536599,8.183915,-7.031916,7.746855,-4.341512,-2.854373,-2.950193,-8.848746,-0.552733,9.795364,-9.279388,6.163781,-5.402719,5.496946,7.122048,-0.934400,-6.108936,-5.811971,9.419876,0.096126,3.610899,6.359675,3.401094,0.349875,-6.202341,9.592244,6.793017,-5.791952,-8.502734,8.623875,-8.937654,3.352253,-1.110967,6.471257], dtype = "float64")#candidate|2861|(840,)|const|float64
call_2860 = relay.TupleGetItem(func_1921_call(relay.reshape(const_2861.astype('float64'), [840,])), 2)
call_2862 = relay.TupleGetItem(func_1923_call(relay.reshape(const_2861.astype('float64'), [840,])), 2)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
call_2867 = relay.TupleGetItem(func_1921_call(relay.reshape(const_2861.astype('float64'), [840,])), 0)
call_2868 = relay.TupleGetItem(func_1923_call(relay.reshape(const_2861.astype('float64'), [840,])), 0)
output = relay.Tuple([call_2845,call_2854,var_2855,call_2860,const_2861,call_2867,])
output2 = relay.Tuple([call_2846,call_2856,var_2855,call_2862,const_2861,call_2868,])
func_2873 = relay.Function([var_2855,], output)
mod['func_2873'] = func_2873
mod = relay.transform.InferType()(mod)
mutated_mod['func_2873'] = func_2873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2874 = relay.var("var_2874", dtype = "int8", shape = (104,))#candidate|2874|(104,)|var|int8
func_2873_call = mutated_mod.get_global_var('func_2873')
call_2875 = func_2873_call(var_2874)
output = call_2875
func_2876 = relay.Function([var_2874], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_366_call = mod.get_global_var('func_366')
func_368_call = mutated_mod.get_global_var('func_368')
call_2884 = relay.TupleGetItem(func_366_call(), 2)
call_2885 = relay.TupleGetItem(func_368_call(), 2)
var_2914 = relay.var("var_2914", dtype = "float64", shape = (7, 11, 10))#candidate|2914|(7, 11, 10)|var|float64
bop_2915 = relay.maximum(call_2884.astype('float64'), relay.reshape(var_2914.astype('float64'), relay.shape_of(call_2884))) # shape=(7, 11, 10)
bop_2918 = relay.maximum(call_2885.astype('float64'), relay.reshape(var_2914.astype('float64'), relay.shape_of(call_2885))) # shape=(7, 11, 10)
func_2403_call = mod.get_global_var('func_2403')
func_2406_call = mutated_mod.get_global_var('func_2406')
var_2927 = relay.var("var_2927", dtype = "float64", shape = (7, 44))#candidate|2927|(7, 44)|var|float64
call_2926 = relay.TupleGetItem(func_2403_call(relay.reshape(var_2927.astype('float64'), [308, 1])), 2)
call_2928 = relay.TupleGetItem(func_2406_call(relay.reshape(var_2927.astype('float64'), [308, 1])), 2)
output = relay.Tuple([bop_2915,call_2926,var_2927,])
output2 = relay.Tuple([bop_2918,call_2928,var_2927,])
func_2931 = relay.Function([var_2914,var_2927,], output)
mod['func_2931'] = func_2931
mod = relay.transform.InferType()(mod)
var_2932 = relay.var("var_2932", dtype = "float64", shape = (7, 11, 10))#candidate|2932|(7, 11, 10)|var|float64
var_2933 = relay.var("var_2933", dtype = "float64", shape = (7, 44))#candidate|2933|(7, 44)|var|float64
output = func_2931(var_2932,var_2933,)
func_2934 = relay.Function([var_2932,var_2933,], output)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_2940 = relay.TupleGetItem(func_2521_call(), 0)
call_2941 = relay.TupleGetItem(func_2522_call(), 0)
func_2663_call = mod.get_global_var('func_2663')
func_2664_call = mutated_mod.get_global_var('func_2664')
call_2962 = relay.TupleGetItem(func_2663_call(), 0)
call_2963 = relay.TupleGetItem(func_2664_call(), 0)
func_1328_call = mod.get_global_var('func_1328')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_2965 = relay.TupleGetItem(func_1328_call(), 3)
call_2966 = relay.TupleGetItem(func_1329_call(), 3)
func_2015_call = mod.get_global_var('func_2015')
func_2016_call = mutated_mod.get_global_var('func_2016')
call_2969 = relay.TupleGetItem(func_2015_call(), 0)
call_2970 = relay.TupleGetItem(func_2016_call(), 0)
output = relay.Tuple([call_2940,call_2962,call_2965,call_2969,])
output2 = relay.Tuple([call_2941,call_2963,call_2966,call_2970,])
func_2990 = relay.Function([], output)
mod['func_2990'] = func_2990
mod = relay.transform.InferType()(mod)
output = func_2990()
func_2991 = relay.Function([], output)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1989_call = mod.get_global_var('func_1989')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_3033 = relay.TupleGetItem(func_1989_call(), 0)
call_3034 = relay.TupleGetItem(func_1991_call(), 0)
output = relay.Tuple([call_3033,])
output2 = relay.Tuple([call_3034,])
func_3043 = relay.Function([], output)
mod['func_3043'] = func_3043
mod = relay.transform.InferType()(mod)
output = func_3043()
func_3044 = relay.Function([], output)
mutated_mod['func_3044'] = func_3044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_3058 = relay.TupleGetItem(func_21_call(), 0)
call_3059 = relay.TupleGetItem(func_23_call(), 0)
output = call_3058
output2 = call_3059
func_3069 = relay.Function([], output)
mod['func_3069'] = func_3069
mod = relay.transform.InferType()(mod)
mutated_mod['func_3069'] = func_3069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mutated_mod.get_global_var('func_3069')
call_3070 = func_3069_call()
output = call_3070
func_3071 = relay.Function([], output)
mutated_mod['func_3071'] = func_3071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_366_call = mod.get_global_var('func_366')
func_368_call = mutated_mod.get_global_var('func_368')
call_3140 = relay.TupleGetItem(func_366_call(), 2)
call_3141 = relay.TupleGetItem(func_368_call(), 2)
output = relay.Tuple([call_3140,])
output2 = relay.Tuple([call_3141,])
func_3146 = relay.Function([], output)
mod['func_3146'] = func_3146
mod = relay.transform.InferType()(mod)
mutated_mod['func_3146'] = func_3146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3146_call = mutated_mod.get_global_var('func_3146')
call_3147 = func_3146_call()
output = call_3147
func_3148 = relay.Function([], output)
mutated_mod['func_3148'] = func_3148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
call_3155 = relay.TupleGetItem(func_601_call(), 0)
call_3156 = relay.TupleGetItem(func_603_call(), 0)
func_2162_call = mod.get_global_var('func_2162')
func_2164_call = mutated_mod.get_global_var('func_2164')
var_3158 = relay.var("var_3158", dtype = "float32", shape = (26,))#candidate|3158|(26,)|var|float32
call_3157 = relay.TupleGetItem(func_2162_call(relay.reshape(var_3158.astype('float32'), [1, 2, 13])), 0)
call_3159 = relay.TupleGetItem(func_2164_call(relay.reshape(var_3158.astype('float32'), [1, 2, 13])), 0)
var_3164 = relay.var("var_3164", dtype = "float32", shape = (26,))#candidate|3164|(26,)|var|float32
bop_3165 = relay.floor_mod(var_3158.astype('float32'), relay.reshape(var_3164.astype('float32'), relay.shape_of(var_3158))) # shape=(26,)
func_909_call = mod.get_global_var('func_909')
func_911_call = mutated_mod.get_global_var('func_911')
call_3201 = relay.TupleGetItem(func_909_call(), 0)
call_3202 = relay.TupleGetItem(func_911_call(), 0)
output = relay.Tuple([call_3155,call_3157,bop_3165,call_3201,])
output2 = relay.Tuple([call_3156,call_3159,bop_3165,call_3202,])
func_3223 = relay.Function([var_3158,var_3164,], output)
mod['func_3223'] = func_3223
mod = relay.transform.InferType()(mod)
var_3224 = relay.var("var_3224", dtype = "float32", shape = (26,))#candidate|3224|(26,)|var|float32
var_3225 = relay.var("var_3225", dtype = "float32", shape = (26,))#candidate|3225|(26,)|var|float32
output = func_3223(var_3224,var_3225,)
func_3226 = relay.Function([var_3224,var_3225,], output)
mutated_mod['func_3226'] = func_3226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2489_call = mod.get_global_var('func_2489')
func_2490_call = mutated_mod.get_global_var('func_2490')
call_3254 = relay.TupleGetItem(func_2489_call(), 0)
call_3255 = relay.TupleGetItem(func_2490_call(), 0)
func_1710_call = mod.get_global_var('func_1710')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_3260 = relay.TupleGetItem(func_1710_call(), 0)
call_3261 = relay.TupleGetItem(func_1711_call(), 0)
output = relay.Tuple([call_3254,call_3260,])
output2 = relay.Tuple([call_3255,call_3261,])
func_3267 = relay.Function([], output)
mod['func_3267'] = func_3267
mod = relay.transform.InferType()(mod)
output = func_3267()
func_3268 = relay.Function([], output)
mutated_mod['func_3268'] = func_3268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mod.get_global_var('func_1328')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_3269 = relay.TupleGetItem(func_1328_call(), 3)
call_3270 = relay.TupleGetItem(func_1329_call(), 3)
func_2663_call = mod.get_global_var('func_2663')
func_2664_call = mutated_mod.get_global_var('func_2664')
call_3278 = relay.TupleGetItem(func_2663_call(), 1)
call_3279 = relay.TupleGetItem(func_2664_call(), 1)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_3280 = relay.TupleGetItem(func_2030_call(), 0)
call_3281 = relay.TupleGetItem(func_2031_call(), 0)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_3283 = func_1932_call()
call_3284 = func_1932_call()
output = relay.Tuple([call_3269,call_3278,call_3280,call_3283,])
output2 = relay.Tuple([call_3270,call_3279,call_3281,call_3284,])
func_3287 = relay.Function([], output)
mod['func_3287'] = func_3287
mod = relay.transform.InferType()(mod)
output = func_3287()
func_3288 = relay.Function([], output)
mutated_mod['func_3288'] = func_3288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_3289 = relay.TupleGetItem(func_113_call(), 2)
call_3290 = relay.TupleGetItem(func_115_call(), 2)
output = relay.Tuple([call_3289,])
output2 = relay.Tuple([call_3290,])
func_3308 = relay.Function([], output)
mod['func_3308'] = func_3308
mod = relay.transform.InferType()(mod)
mutated_mod['func_3308'] = func_3308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3308_call = mutated_mod.get_global_var('func_3308')
call_3309 = func_3308_call()
output = call_3309
func_3310 = relay.Function([], output)
mutated_mod['func_3310'] = func_3310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3313 = relay.var("var_3313", dtype = "float64", shape = (2, 10, 11))#candidate|3313|(2, 10, 11)|var|float64
uop_3314 = relay.acosh(var_3313.astype('float64')) # shape=(2, 10, 11)
output = relay.Tuple([uop_3314,])
output2 = relay.Tuple([uop_3314,])
func_3325 = relay.Function([var_3313,], output)
mod['func_3325'] = func_3325
mod = relay.transform.InferType()(mod)
var_3326 = relay.var("var_3326", dtype = "float64", shape = (2, 10, 11))#candidate|3326|(2, 10, 11)|var|float64
output = func_3325(var_3326)
func_3327 = relay.Function([var_3326], output)
mutated_mod['func_3327'] = func_3327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2834_call = mod.get_global_var('func_2834')
func_2836_call = mutated_mod.get_global_var('func_2836')
call_3345 = relay.TupleGetItem(func_2834_call(), 1)
call_3346 = relay.TupleGetItem(func_2836_call(), 1)
func_403_call = mod.get_global_var('func_403')
func_406_call = mutated_mod.get_global_var('func_406')
const_3356 = relay.const([9.858059,-9.798658,-6.191705,5.716626,3.700602,-0.922572,1.919305,9.067449,7.611241,3.274879,-8.096550,1.700137,3.191439,-7.275302,-0.602941,-9.253238,8.771504,4.574468,-1.404376,-8.543590,-6.532192,-0.704518,-5.316658,3.410623,-3.252640,0.493006,-6.904358,-2.223632,9.633219,6.375845,9.162061,7.960491,-2.011185,-5.807514,3.180933,-4.444432,0.242287,8.469753,9.218541,1.401355,-1.131570,-0.926372,2.532254,-0.374270,5.431847,0.137595,-6.619726,9.541264,9.698581,5.083467,-2.180081,-2.743289,-5.494405,-4.385019,3.434078,1.152625,-1.471829,-9.122267,9.981255,8.809735,-5.439691,5.012296,2.951029,7.157574,6.598862,-8.616278,6.030618,3.679533,-4.059745,1.893813,-7.354828,6.531629,-2.135481,-6.673570,1.425575,-2.171837,-0.838828,-3.432412,-0.802052,-1.101082,-4.323756,-8.184853,-2.552521,4.302273,2.328688,-4.512751,4.001852,-9.260178,6.277433,1.097362,-2.584849,9.658493,-8.868368,4.596205,3.993533,-6.370156,-4.649715,2.280166,-9.376368,3.458831,5.858696,9.467044,-5.975738,-7.679978,0.122831,-3.482082,6.977707,-8.839193,2.825659,0.028798,-2.486468,-5.193408,-3.465365,5.872684,-8.953754,-7.977325,-2.592422,-0.054908,2.807073,-7.187425,1.783308,5.463901,-9.644520,-7.788769,8.578173,6.553022,7.883433,-4.356742,1.186168,-4.503194,-0.961211,-6.935530,1.385482,7.952317,3.565626,5.905435,-5.575247,-1.785804,-4.867741,-8.181649,-4.528732,2.970603,7.208592,0.313653,6.219682,-5.546820,-4.088733,-3.059704,-6.825558,-4.223692,-2.511769,-3.915513,-1.886250,4.612431,0.670810,-8.192802,0.131097,3.605678,0.441526,-9.159845,-3.031798,8.592678,3.944487,-2.226786,4.604401,9.750692,-9.713162,7.741220,-7.834837,-5.417854,-8.432858,3.119690,-0.531799,8.938456,8.332149,9.345516,-2.457720,-3.703317,-3.221973,6.788629,-5.459711,2.620237,-6.617559,8.830322,-9.673495,-0.595946,4.102172,-3.959691,-1.957492,6.110814,7.710953,-8.094443,9.534634,9.196124,5.072013,-2.787922,-0.904409,8.896206,-8.557156,4.856140,-2.718864,3.658240,-3.103813,3.975873,3.947954,-3.218802,1.168782,3.815603,-5.963737,9.815921,5.729350,7.342458,6.046772,9.241235,0.791760,-7.426361,-6.619195,5.196098,-0.875856,-0.211260,-8.710047,-6.471391,6.381767,-2.649042,9.945938,4.580413,2.177303,-3.981196,3.831534,-1.177819,-2.560076,-7.279840,8.345228,0.407482,6.305692,1.739570,8.963682,9.349784,8.605313,-0.170201,1.580608,-9.049855,-5.166465,-4.082701,-5.473922,-3.201104,4.937072,0.584756,6.390890,-4.909664,-6.870466,-4.217265,-9.920273,-7.869232,7.435487,-7.741163,5.140802,-1.166831,2.134434,8.552633,6.969482,-1.212172,4.988203,5.390419,8.170583,7.841806,-2.647437,1.362452,0.638984,-6.446261,-3.247355,-6.206137,9.143878,1.868390,3.830650,-9.234887,-7.261856,0.015316,4.124761,-8.108375,0.389225,-9.839577,3.826222,-6.971330,-8.228869,-0.479389,9.239354,-7.905249,0.988663,3.734072,-3.151243,6.972014,-0.236576,-2.617943,-0.226183,-0.379768,-1.539373,1.744281,-6.260811,7.137010,-8.088150,2.367011,-0.302428,2.000491,8.857161,-6.734111,-7.421407,6.926096,-4.377004,-9.352751,-0.271754,-7.073382,-6.039409,3.367024,3.932450,2.983521,-4.024577,5.106890,-0.661513,-2.934775,2.204653,7.496339,-6.433965,1.705876,7.722669,4.462954,-9.800402,-6.748121,1.798964,-2.819098,-3.084877,8.779024,-1.882245,3.034068,0.108044,9.121221,-4.539769,-1.783460,8.741028,-2.790773,-2.701906,-2.419422,3.218250,8.284203,-1.972625,-8.119621,9.531728,6.293501,-2.379205,-2.617912,-2.582109,6.140430,-6.761098,-6.553539,4.682606,-3.997933,-5.595801,-2.997206,-6.580194,9.079184,2.336698,1.286774,3.280912,4.406868,-4.983096,4.612613,7.852789,9.892665,-5.952034,9.997051,-6.869243,6.468392,-2.197251,8.760122,4.599267,-8.149291,-5.806425,1.378082,-9.202684,5.455483,-5.916931,-3.485795,7.023735,-7.733253,3.085079,4.213618,2.958624,-3.045304,1.489859,-6.255761,-6.799236,8.931389,1.328068,-3.904688,4.681811,-6.935601,-7.963436,4.759874,-1.153623,-2.443937,9.636543,-8.282788,-5.236642,1.046353,-6.444245,3.140390,-7.205731,3.368217,7.190004,6.500823,3.599462,1.178359,-1.209288,-1.185059,-1.578669,-9.391612,-1.459978,-8.481074,-0.349718,-0.900892,-5.507129,3.032357,3.089121,-9.238840,9.661811,8.536495,6.076280,-3.335346,-9.805931,-5.776286,3.652042,-8.173593,0.264032,8.363039,-4.801872,-9.575462,4.904066,7.871578,-6.050484,5.739136,-9.373281,4.893123,5.024491,4.421697,-9.887399,-9.125910,5.579721,5.381421,-2.169066,-0.707166,1.068616,2.259464,-9.723449,3.218979,-3.864034,-8.055312,1.476582,-1.531448,-8.122659,-0.479536,9.785709,-0.649384,-8.261405,-4.639580,-1.406292,2.425311,9.434517,-7.964042,-8.198847,8.188936,5.191973,6.922456,5.776381,0.088210,1.566433,-5.885956,3.890877,7.060513,-3.687577,-0.655851,-8.691923,-6.753152,-9.363896,-0.676703,-3.297483,5.440484,2.574612,5.229741,-4.464190,-0.376650,-3.532968,-2.675000,-1.582529,7.609819,9.859613,8.823380,-2.543321,-8.918510,8.740420,2.602563,-0.960232,6.722542,4.711139,-4.738814,0.026250,5.784908,7.138934,9.299478,-7.318383,-5.165354,-3.497361,5.782437,-6.366982,3.450141,-2.638650,9.100489,7.972131,2.562341,0.443517,-9.373289,-2.383508,7.107610,-2.703578,5.696887,9.521218,-4.813064,-7.966672,-4.001666,1.346379,-4.402244,-3.021812,-0.061892,-8.988496,-3.667184,2.479236,-7.936408,4.344743,4.367549,7.771431,-5.452902,4.857703,-7.098109,-5.440660,-8.985509,8.157236,-9.119406,-3.791150,8.377902,-5.927066,6.333124,0.523117,8.088305,2.402904,-3.094723,-8.172153,5.297538,0.775280,9.002505,8.388235,-7.846697,-8.499465,-8.808160,3.944867,5.456894,-1.163034,-0.105838,-8.216464,-6.717348,-0.037854,-6.335018,3.532904,-9.216995,-9.216949,-9.103372,8.076877,-5.352047,4.765647,8.108236,-8.545040,-0.304123,7.871144,-4.750468,6.424098,2.456506,0.039818,-9.747422,2.645810,-2.159056,-8.784357,5.926965,5.816969,5.517851,0.090159,7.849138,2.968690,-7.016938,-0.409478,-0.701141,6.228780,-3.281675,-9.167129,2.381669,2.278398,3.913047,-8.350570,-5.912123,-3.579302,4.796238,-6.821306,5.380920,-4.567163,-8.966380,6.118405,-1.969887,-8.515541,6.697518,5.621703,-7.260558,-5.321862,-0.133618,5.066280,-3.393716,-3.736235,5.772824,9.212355,-4.313791,-4.763728,-0.395281,-2.351952,-4.253898,3.475298,3.706576,-9.469321,-6.938714,9.646621,8.513936,9.626956,-0.108599,2.164880,-4.430782,-5.504010,4.855791,2.998604,-6.796474,-8.911088,-4.160414,1.052537,5.444639], dtype = "float32")#candidate|3356|(648,)|const|float32
call_3355 = func_403_call(relay.reshape(const_3356.astype('float32'), [12, 9, 6]))
call_3357 = func_403_call(relay.reshape(const_3356.astype('float32'), [12, 9, 6]))
var_3358 = relay.var("var_3358", dtype = "float32", shape = (12, 9, 6))#candidate|3358|(12, 9, 6)|var|float32
bop_3359 = relay.less(call_3355.astype('bool'), relay.reshape(var_3358.astype('bool'), relay.shape_of(call_3355))) # shape=(12, 9, 6)
bop_3362 = relay.less(call_3357.astype('bool'), relay.reshape(var_3358.astype('bool'), relay.shape_of(call_3357))) # shape=(12, 9, 6)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_3378 = relay.TupleGetItem(func_2047_call(), 0)
call_3379 = relay.TupleGetItem(func_2049_call(), 0)
output = relay.Tuple([call_3345,const_3356,bop_3359,call_3378,])
output2 = relay.Tuple([call_3346,const_3356,bop_3362,call_3379,])
func_3388 = relay.Function([var_3358,], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
mutated_mod['func_3388'] = func_3388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3389 = relay.var("var_3389", dtype = "float32", shape = (12, 9, 6))#candidate|3389|(12, 9, 6)|var|float32
func_3388_call = mutated_mod.get_global_var('func_3388')
call_3390 = func_3388_call(var_3389)
output = call_3390
func_3391 = relay.Function([var_3389], output)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2834_call = mod.get_global_var('func_2834')
func_2836_call = mutated_mod.get_global_var('func_2836')
call_3406 = relay.TupleGetItem(func_2834_call(), 0)
call_3407 = relay.TupleGetItem(func_2836_call(), 0)
func_384_call = mod.get_global_var('func_384')
func_387_call = mutated_mod.get_global_var('func_387')
var_3437 = relay.var("var_3437", dtype = "float32", shape = (1365,))#candidate|3437|(1365,)|var|float32
call_3436 = relay.TupleGetItem(func_384_call(relay.reshape(var_3437.astype('float32'), [7, 13, 15])), 0)
call_3438 = relay.TupleGetItem(func_387_call(relay.reshape(var_3437.astype('float32'), [7, 13, 15])), 0)
output = relay.Tuple([call_3406,call_3436,var_3437,])
output2 = relay.Tuple([call_3407,call_3438,var_3437,])
func_3447 = relay.Function([var_3437,], output)
mod['func_3447'] = func_3447
mod = relay.transform.InferType()(mod)
var_3448 = relay.var("var_3448", dtype = "float32", shape = (1365,))#candidate|3448|(1365,)|var|float32
output = func_3447(var_3448)
func_3449 = relay.Function([var_3448], output)
mutated_mod['func_3449'] = func_3449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3308_call = mod.get_global_var('func_3308')
func_3310_call = mutated_mod.get_global_var('func_3310')
call_3472 = relay.TupleGetItem(func_3308_call(), 0)
call_3473 = relay.TupleGetItem(func_3310_call(), 0)
output = call_3472
output2 = call_3473
func_3518 = relay.Function([], output)
mod['func_3518'] = func_3518
mod = relay.transform.InferType()(mod)
output = func_3518()
func_3519 = relay.Function([], output)
mutated_mod['func_3519'] = func_3519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3524 = relay.var("var_3524", dtype = "float32", shape = (12, 14, 16))#candidate|3524|(12, 14, 16)|var|float32
var_3525 = relay.var("var_3525", dtype = "float32", shape = (12, 14, 16))#candidate|3525|(12, 14, 16)|var|float32
bop_3526 = relay.floor_divide(var_3524.astype('float32'), relay.reshape(var_3525.astype('float32'), relay.shape_of(var_3524))) # shape=(12, 14, 16)
func_3043_call = mod.get_global_var('func_3043')
func_3044_call = mutated_mod.get_global_var('func_3044')
call_3529 = relay.TupleGetItem(func_3043_call(), 0)
call_3530 = relay.TupleGetItem(func_3044_call(), 0)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_3539 = relay.TupleGetItem(func_3287_call(), 0)
call_3540 = relay.TupleGetItem(func_3288_call(), 0)
func_3325_call = mod.get_global_var('func_3325')
func_3327_call = mutated_mod.get_global_var('func_3327')
var_3561 = relay.var("var_3561", dtype = "float64", shape = (55, 4))#candidate|3561|(55, 4)|var|float64
call_3560 = relay.TupleGetItem(func_3325_call(relay.reshape(var_3561.astype('float64'), [2, 10, 11])), 0)
call_3562 = relay.TupleGetItem(func_3327_call(relay.reshape(var_3561.astype('float64'), [2, 10, 11])), 0)
bop_3568 = relay.not_equal(var_3561.astype('bool'), relay.reshape(call_3560.astype('bool'), relay.shape_of(var_3561))) # shape=(55, 4)
bop_3571 = relay.not_equal(var_3561.astype('bool'), relay.reshape(call_3562.astype('bool'), relay.shape_of(var_3561))) # shape=(55, 4)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_3574 = relay.TupleGetItem(func_567_call(), 0)
call_3575 = relay.TupleGetItem(func_569_call(), 0)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_3578 = relay.TupleGetItem(func_3287_call(), 1)
call_3579 = relay.TupleGetItem(func_3288_call(), 1)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_3589 = func_271_call()
call_3590 = func_271_call()
output = relay.Tuple([bop_3526,call_3529,call_3539,bop_3568,call_3574,call_3578,call_3589,])
output2 = relay.Tuple([bop_3526,call_3530,call_3540,bop_3571,call_3575,call_3579,call_3590,])
func_3595 = relay.Function([var_3524,var_3525,var_3561,], output)
mod['func_3595'] = func_3595
mod = relay.transform.InferType()(mod)
mutated_mod['func_3595'] = func_3595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3595_call = mutated_mod.get_global_var('func_3595')
var_3597 = relay.var("var_3597", dtype = "float32", shape = (12, 14, 16))#candidate|3597|(12, 14, 16)|var|float32
var_3598 = relay.var("var_3598", dtype = "float32", shape = (12, 14, 16))#candidate|3598|(12, 14, 16)|var|float32
var_3599 = relay.var("var_3599", dtype = "float64", shape = (55, 4))#candidate|3599|(55, 4)|var|float64
call_3596 = func_3595_call(var_3597,var_3598,var_3599,)
output = call_3596
func_3600 = relay.Function([var_3597,var_3598,var_3599,], output)
mutated_mod['func_3600'] = func_3600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3146_call = mod.get_global_var('func_3146')
func_3148_call = mutated_mod.get_global_var('func_3148')
call_3633 = relay.TupleGetItem(func_3146_call(), 0)
call_3634 = relay.TupleGetItem(func_3148_call(), 0)
func_1349_call = mod.get_global_var('func_1349')
func_1350_call = mutated_mod.get_global_var('func_1350')
call_3651 = func_1349_call()
call_3652 = func_1349_call()
output = relay.Tuple([call_3633,call_3651,])
output2 = relay.Tuple([call_3634,call_3652,])
func_3655 = relay.Function([], output)
mod['func_3655'] = func_3655
mod = relay.transform.InferType()(mod)
mutated_mod['func_3655'] = func_3655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3655_call = mutated_mod.get_global_var('func_3655')
call_3656 = func_3655_call()
output = call_3656
func_3657 = relay.Function([], output)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
call_3686 = func_2113_call()
call_3687 = func_2113_call()
output = call_3686
output2 = call_3687
func_3688 = relay.Function([], output)
mod['func_3688'] = func_3688
mod = relay.transform.InferType()(mod)
output = func_3688()
func_3689 = relay.Function([], output)
mutated_mod['func_3689'] = func_3689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3268_call = mutated_mod.get_global_var('func_3268')
call_3724 = relay.TupleGetItem(func_3267_call(), 1)
call_3725 = relay.TupleGetItem(func_3268_call(), 1)
output = call_3724
output2 = call_3725
func_3726 = relay.Function([], output)
mod['func_3726'] = func_3726
mod = relay.transform.InferType()(mod)
mutated_mod['func_3726'] = func_3726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3726_call = mutated_mod.get_global_var('func_3726')
call_3727 = func_3726_call()
output = call_3727
func_3728 = relay.Function([], output)
mutated_mod['func_3728'] = func_3728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_3764 = relay.TupleGetItem(func_1573_call(), 2)
call_3765 = relay.TupleGetItem(func_1575_call(), 2)
output = relay.Tuple([call_3764,])
output2 = relay.Tuple([call_3765,])
func_3776 = relay.Function([], output)
mod['func_3776'] = func_3776
mod = relay.transform.InferType()(mod)
mutated_mod['func_3776'] = func_3776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3776_call = mutated_mod.get_global_var('func_3776')
call_3777 = func_3776_call()
output = call_3777
func_3778 = relay.Function([], output)
mutated_mod['func_3778'] = func_3778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3787 = relay.var("var_3787", dtype = "float32", shape = (3, 1, 3))#candidate|3787|(3, 1, 3)|var|float32
uop_3788 = relay.rsqrt(var_3787.astype('float32')) # shape=(3, 1, 3)
bop_3795 = relay.multiply(uop_3788.astype('int8'), relay.reshape(var_3787.astype('int8'), relay.shape_of(uop_3788))) # shape=(3, 1, 3)
func_490_call = mod.get_global_var('func_490')
func_493_call = mutated_mod.get_global_var('func_493')
var_3818 = relay.var("var_3818", dtype = "int8", shape = (104,))#candidate|3818|(104,)|var|int8
call_3817 = relay.TupleGetItem(func_490_call(relay.reshape(var_3818.astype('int8'), [2, 13, 4]), relay.reshape(var_3818.astype('int8'), [2, 13, 4]), ), 1)
call_3819 = relay.TupleGetItem(func_493_call(relay.reshape(var_3818.astype('int8'), [2, 13, 4]), relay.reshape(var_3818.astype('int8'), [2, 13, 4]), ), 1)
func_2873_call = mod.get_global_var('func_2873')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_3821 = relay.TupleGetItem(func_2873_call(relay.reshape(var_3818.astype('int8'), [104,])), 4)
call_3822 = relay.TupleGetItem(func_2876_call(relay.reshape(var_3818.astype('int8'), [104,])), 4)
output = relay.Tuple([bop_3795,call_3817,var_3818,call_3821,])
output2 = relay.Tuple([bop_3795,call_3819,var_3818,call_3822,])
func_3831 = relay.Function([var_3787,var_3818,], output)
mod['func_3831'] = func_3831
mod = relay.transform.InferType()(mod)
var_3832 = relay.var("var_3832", dtype = "float32", shape = (3, 1, 3))#candidate|3832|(3, 1, 3)|var|float32
var_3833 = relay.var("var_3833", dtype = "int8", shape = (104,))#candidate|3833|(104,)|var|int8
output = func_3831(var_3832,var_3833,)
func_3834 = relay.Function([var_3832,var_3833,], output)
mutated_mod['func_3834'] = func_3834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_366_call = mod.get_global_var('func_366')
func_368_call = mutated_mod.get_global_var('func_368')
call_3850 = relay.TupleGetItem(func_366_call(), 1)
call_3851 = relay.TupleGetItem(func_368_call(), 1)
func_3388_call = mod.get_global_var('func_3388')
func_3391_call = mutated_mod.get_global_var('func_3391')
const_3854 = relay.const([[7.239492,7.609074,2.673956,7.317737,4.509537,-9.224740,-7.451712,2.585978,-7.955698,1.028231,-3.161591,-2.501846,-6.883808,7.908294,-5.444406,7.844725,-4.878011,6.849198,1.132588,1.552095,-1.334277,6.981758,-1.779820,7.052230,3.613113,-4.097494,-6.380696,3.973588,-6.715293,0.502645,-4.286267,-0.953417,-9.828935,-6.162604,-3.063868,-1.252447],[2.787282,1.884626,-1.782096,2.399239,3.617926,8.375858,-1.564813,-3.600012,8.222157,9.890110,-5.909434,6.058136,2.821001,7.403123,5.204124,1.949941,8.971155,8.340936,4.496416,-9.519627,-0.192161,7.368443,-2.250123,2.470022,3.865734,-2.749263,-1.665398,-8.324585,1.098733,-2.289035,5.498159,-1.025661,-1.366616,3.214668,-0.202849,0.048064],[3.969379,4.170218,-6.645861,-2.704279,-9.726594,-1.987477,-0.372192,-9.379290,-3.315243,-4.443483,-6.892967,-3.605321,-6.109348,4.017462,3.271035,4.485596,2.878825,8.455520,1.949702,7.739935,-7.052362,0.889856,0.293754,-3.774228,-3.546541,6.280429,0.365474,0.864626,2.426865,-0.019555,7.263401,-8.446724,5.598625,8.078765,6.504348,-3.195319],[-4.974666,-8.477806,0.986517,4.146129,1.547562,0.504708,-7.648838,9.510922,1.428497,9.699816,7.288083,8.135416,7.690014,-6.283896,0.597609,-3.086942,-9.653259,3.035856,2.559511,0.421885,-1.587555,-7.043615,3.152548,-2.950739,0.653059,-7.360488,2.571190,2.964797,-5.742482,4.965766,-5.553643,1.353411,-6.817245,7.628528,3.914255,7.971775],[3.952945,-9.686680,9.636018,7.081002,-8.727644,6.650217,7.453753,-5.583762,-2.454278,8.707270,1.542181,4.543647,-1.275101,-1.489442,0.456640,2.710184,7.230358,-8.819012,-8.696803,1.362493,5.567603,2.881838,-8.352213,-8.244210,2.918077,3.198223,-8.819246,6.874529,9.026320,-4.401902,2.625494,4.875224,9.194094,8.171314,1.418506,8.094472],[7.987894,0.424208,-6.591139,3.883944,-4.832492,1.088376,7.144660,8.148386,-6.537743,-0.967177,6.570630,-0.829634,2.593284,-8.619181,-1.969179,3.793667,-0.572561,4.913529,-6.011965,4.442602,-7.574568,9.600905,8.419030,-5.855370,-2.083085,8.088763,9.338858,-1.783974,2.058541,3.204927,-2.769559,7.747541,-3.218891,-6.369259,7.824229,3.654861],[-2.186462,-9.734017,0.038692,6.632741,5.195549,9.012288,-1.082814,7.667739,-7.814504,1.968206,9.043376,-2.791075,-4.490131,-1.326682,-6.631150,7.656005,-4.761221,-7.737471,-6.238651,3.839919,-2.321344,-3.409274,-1.740015,-8.397623,6.301699,-9.704875,-1.610174,-8.689098,8.588598,1.145260,-3.317390,-1.270908,-2.357346,-8.531736,-1.742218,-4.601130],[-7.034905,8.185658,-0.921478,5.769124,2.429584,-8.689454,-8.051491,-1.409771,0.225067,5.383582,-8.644945,-7.196978,-0.609234,-1.924051,-6.520145,1.545807,2.140604,0.895473,-2.115959,5.139283,-1.739154,-2.370536,-4.223074,-5.969097,-3.980489,8.521959,4.003696,3.081642,-2.388793,-8.155500,-8.919559,1.358131,-7.904916,6.558892,-1.605984,7.540195],[-8.827760,9.238735,-1.428514,-3.334261,-5.733659,-2.831837,0.850350,5.036103,7.568648,-9.415392,-5.088992,7.359816,-2.422538,2.346127,-0.583870,-6.236737,-5.412173,6.980986,3.314990,3.794659,-6.273553,-0.947315,9.540913,3.388822,9.878904,-2.171166,-6.077809,4.335883,-0.439629,6.910736,7.037262,9.433280,7.600779,-3.053206,-3.002230,-6.418836],[6.343414,-6.989526,8.842697,2.194116,3.420267,-0.984044,-0.516345,8.680142,-5.659521,5.958575,-0.520290,-2.472870,1.026476,-5.162043,-0.799322,-5.205764,6.589028,0.049390,8.781319,-8.377385,-2.722453,-0.103731,-7.992570,-5.778668,-1.874823,-3.344579,-0.110566,-9.528216,9.829285,-9.454461,-5.494455,-5.531948,6.334177,-4.442973,-0.312456,-2.945622],[7.117587,8.757024,-0.327084,-9.436640,1.527522,2.745870,1.673357,-3.109473,-0.152724,4.631034,5.366978,0.142974,7.982044,8.091570,-6.015037,-8.552889,-8.081000,2.983162,6.565792,2.524443,-2.258540,3.786816,4.248835,-3.300840,-0.156025,-3.623477,0.512962,-7.878158,0.520089,2.917158,2.558302,8.902913,7.785904,-7.465381,-0.052715,-7.074527],[-0.742503,4.550767,5.184638,-4.322985,8.941690,4.862230,-9.599375,6.763377,-1.435970,0.714939,-4.795349,0.995390,4.977972,3.139217,-3.240517,-6.083913,9.951923,-5.014911,7.443812,-8.961980,7.512096,-0.798282,8.576429,4.711142,-3.094374,-1.708674,4.116861,-8.089547,3.167688,-7.462852,6.401754,9.981729,-2.613441,3.869732,-2.653848,-4.061423],[-5.019782,9.756535,-4.852302,1.545795,6.567565,-0.724776,0.591802,1.826834,-6.390558,-5.575728,-2.939392,-8.879321,0.765231,-9.501527,8.141308,4.669137,0.014382,7.177658,4.112462,-4.234077,-9.573362,6.380858,-1.574257,1.028191,0.999229,-9.789118,0.919415,-9.010150,1.566535,-9.282396,-4.012348,-4.523896,-5.918588,7.391066,-5.551412,-8.999689],[-9.772583,-6.030208,-8.278075,3.018976,-1.483708,2.729632,-1.940501,-2.181665,-8.838958,-4.427500,6.938484,3.753422,6.124899,7.470877,-1.274803,-7.393476,-8.813308,1.783868,-7.615736,-2.591501,3.044031,-9.690734,0.960264,7.869490,9.857156,-2.198095,-5.203890,-3.043364,5.185331,2.730732,0.659758,-2.690829,-5.174839,-2.100683,2.560790,4.901800],[-1.932173,-7.929105,2.207617,-5.512721,-9.130235,1.107408,-7.323411,-6.909273,7.487986,9.775983,0.750604,-9.306743,-8.892542,0.939989,3.605457,-8.849650,-0.052103,-0.104867,-6.579746,6.372063,7.113961,1.389530,-1.813262,1.717673,8.466453,9.934200,0.456069,-4.399203,-2.431598,0.912935,7.894340,-5.465395,-7.484860,0.397643,8.869448,0.676572],[1.620479,-8.770730,-9.513159,2.337104,-1.069994,8.500416,9.775378,8.955961,3.862934,8.640051,-9.238776,-6.701158,-2.447380,8.642699,-0.116015,9.940518,0.142728,-2.228485,4.415973,6.821464,-0.980289,8.022978,7.717032,3.128760,7.784448,8.828662,-4.070579,0.227331,5.871958,-4.751757,1.290051,5.478433,3.869716,5.467045,5.917636,3.745297],[6.280551,8.092278,1.778299,4.471620,-9.215822,0.338819,-8.081580,1.564647,0.300796,-8.025372,4.045069,-8.376095,0.321851,-0.921697,-2.103748,-7.555992,-8.323071,-0.203483,-3.803697,9.746956,-0.756798,-3.750976,9.558044,-3.848768,0.396838,0.840846,-3.203326,-8.428147,3.505942,7.513397,-1.488989,6.980939,7.829603,-9.213033,3.653252,-8.325011],[-8.341285,3.321744,2.879112,9.086803,-2.521551,6.946591,-4.926868,-7.056303,-5.347676,7.295456,3.630187,-6.166678,8.627650,-4.110607,-2.800476,-9.038891,5.664614,-3.679001,-2.146782,-3.023291,-5.866863,5.530501,7.774966,9.050965,8.460128,-3.969197,2.724814,-5.034941,5.496789,-3.076969,8.402510,7.566201,-8.415138,3.933897,0.272881,8.213622]], dtype = "float32")#candidate|3854|(18, 36)|const|float32
call_3853 = relay.TupleGetItem(func_3388_call(relay.reshape(const_3854.astype('float32'), [12, 9, 6])), 2)
call_3855 = relay.TupleGetItem(func_3391_call(relay.reshape(const_3854.astype('float32'), [12, 9, 6])), 2)
var_3868 = relay.var("var_3868", dtype = "float32", shape = (18, 36))#candidate|3868|(18, 36)|var|float32
bop_3869 = relay.bitwise_xor(const_3854.astype('uint8'), relay.reshape(var_3868.astype('uint8'), relay.shape_of(const_3854))) # shape=(18, 36)
uop_3876 = relay.log2(bop_3869.astype('float64')) # shape=(18, 36)
uop_3880 = relay.asin(uop_3876.astype('float32')) # shape=(18, 36)
output = relay.Tuple([call_3850,call_3853,uop_3880,])
output2 = relay.Tuple([call_3851,call_3855,uop_3880,])
func_3887 = relay.Function([var_3868,], output)
mod['func_3887'] = func_3887
mod = relay.transform.InferType()(mod)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3888 = relay.var("var_3888", dtype = "float32", shape = (18, 36))#candidate|3888|(18, 36)|var|float32
func_3887_call = mutated_mod.get_global_var('func_3887')
call_3889 = func_3887_call(var_3888)
output = call_3889
func_3890 = relay.Function([var_3888], output)
mutated_mod['func_3890'] = func_3890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3069_call = mod.get_global_var('func_3069')
func_3071_call = mutated_mod.get_global_var('func_3071')
call_3903 = func_3069_call()
call_3904 = func_3069_call()
output = call_3903
output2 = call_3904
func_3915 = relay.Function([], output)
mod['func_3915'] = func_3915
mod = relay.transform.InferType()(mod)
output = func_3915()
func_3916 = relay.Function([], output)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3968 = relay.var("var_3968", dtype = "float64", shape = (4, 15, 15))#candidate|3968|(4, 15, 15)|var|float64
var_3969 = relay.var("var_3969", dtype = "float64", shape = (4, 15, 15))#candidate|3969|(4, 15, 15)|var|float64
bop_3970 = relay.mod(var_3968.astype('float64'), relay.reshape(var_3969.astype('float64'), relay.shape_of(var_3968))) # shape=(4, 15, 15)
output = bop_3970
output2 = bop_3970
func_3974 = relay.Function([var_3968,var_3969,], output)
mod['func_3974'] = func_3974
mod = relay.transform.InferType()(mod)
mutated_mod['func_3974'] = func_3974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3974_call = mutated_mod.get_global_var('func_3974')
var_3976 = relay.var("var_3976", dtype = "float64", shape = (4, 15, 15))#candidate|3976|(4, 15, 15)|var|float64
var_3977 = relay.var("var_3977", dtype = "float64", shape = (4, 15, 15))#candidate|3977|(4, 15, 15)|var|float64
call_3975 = func_3974_call(var_3976,var_3977,)
output = call_3975
func_3978 = relay.Function([var_3976,var_3977,], output)
mutated_mod['func_3978'] = func_3978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_3980 = relay.TupleGetItem(func_1626_call(), 1)
call_3981 = relay.TupleGetItem(func_1628_call(), 1)
output = relay.Tuple([call_3980,])
output2 = relay.Tuple([call_3981,])
func_3986 = relay.Function([], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
output = func_3986()
func_3987 = relay.Function([], output)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mod.get_global_var('func_3986')
func_3987_call = mutated_mod.get_global_var('func_3987')
call_3991 = relay.TupleGetItem(func_3986_call(), 0)
call_3992 = relay.TupleGetItem(func_3987_call(), 0)
output = relay.Tuple([call_3991,])
output2 = relay.Tuple([call_3992,])
func_4011 = relay.Function([], output)
mod['func_4011'] = func_4011
mod = relay.transform.InferType()(mod)
mutated_mod['func_4011'] = func_4011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4011_call = mutated_mod.get_global_var('func_4011')
call_4012 = func_4011_call()
output = call_4012
func_4013 = relay.Function([], output)
mutated_mod['func_4013'] = func_4013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_4066 = func_1932_call()
call_4067 = func_1932_call()
output = relay.Tuple([call_4066,])
output2 = relay.Tuple([call_4067,])
func_4068 = relay.Function([], output)
mod['func_4068'] = func_4068
mod = relay.transform.InferType()(mod)
output = func_4068()
func_4069 = relay.Function([], output)
mutated_mod['func_4069'] = func_4069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3146_call = mod.get_global_var('func_3146')
func_3148_call = mutated_mod.get_global_var('func_3148')
call_4087 = relay.TupleGetItem(func_3146_call(), 0)
call_4088 = relay.TupleGetItem(func_3148_call(), 0)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_4106 = relay.TupleGetItem(func_3287_call(), 1)
call_4107 = relay.TupleGetItem(func_3288_call(), 1)
func_2931_call = mod.get_global_var('func_2931')
func_2934_call = mutated_mod.get_global_var('func_2934')
const_4119 = relay.const([6.229460,-7.460126,-8.684944,8.493370,-3.088386,-5.638110,3.962845,9.163366,7.425174,4.842650,-7.556622,-7.230397,8.891162,-0.942276,-3.541357,2.680221,8.807479,5.893719,-5.301237,-2.077037,8.067558,-1.897302,0.883765,3.259901,2.651140,5.548532,-7.372223,4.447456,6.332082,4.573592,8.141053,1.176216,-6.914533,-2.913148,6.932774,6.508217,-3.371746,-8.669846,5.569318,-6.318444,-7.404711,4.358796,6.967488,-9.093527,-2.869008,4.567045,4.333603,-7.408209,8.560877,-9.294229,2.878800,9.455374,6.170095,7.754917,0.807104,1.241987,6.003867,1.584633,6.875947,1.129586,7.317484,0.880304,9.812632,-8.796332,-5.057815,-4.208349,0.828397,7.244485,6.103846,6.643898,-7.645580,-9.928180,8.671961,4.103312,-7.337542,1.414728,2.650227,-1.136547,-5.162223,2.118753,6.313183,5.767853,6.106900,4.985140,3.937732,-4.687056,8.018512,-4.656086,-1.643098,0.208924,-5.753596,-8.173523,4.949316,6.462701,5.305776,-9.284528,-2.475503,4.824212,3.491407,-0.416752,-8.314042,-2.753677,9.503360,-1.732449,-7.164543,-6.390796,-3.846715,-1.013116,8.732475,-0.310089,-9.612356,1.720230,-2.714788,2.543684,2.104690,-7.802555,-0.840830,8.953811,9.637552,5.062104,7.652917,4.187927,-0.588100,4.201597,3.338415,-1.119137,5.639070,-4.960533,5.495924,8.425352,6.671821,-8.300054,-7.058327,8.973614,5.596227,-2.847578,7.167505,4.246854,1.745044,1.946129,-0.458867,3.222427,-0.719098,0.364370,6.359413,-2.680937,-6.655883,-0.686234,1.567904,1.153927,-8.041764,6.277038,7.686211,0.697547,-0.784221,0.628869,-8.943644,-2.186878,-0.030822,-5.089083,-9.454980,-6.163275,7.352901,5.589755,-7.564942,-0.965194,-8.310198,-1.863828,-1.405994,1.024719,8.340512,3.177058,7.632211,-6.713144,0.056511,5.287660,1.684336,-3.663194,-3.672758,1.478293,-4.447672,5.982531,-7.049205,-7.260021,3.502767,5.689004,-4.461954,-5.780787,-6.920632,9.079894,-5.093991,1.516812,-4.436447,-5.674260,9.075392,-5.441881,5.526152,0.020916,9.865070,-3.808853,5.079361,2.309635,-4.095609,9.203962,-3.891690,-1.369313,7.076516,5.472638,-7.201324,-8.285933,7.260378,4.428904,-7.633947,-6.781888,2.514157,-9.663815,-6.858178,-3.954455,8.987642,6.102863,9.439444,-3.148781,8.453146,-3.848587,-3.176228,-6.983415,9.273306,-4.636085,-9.077731,-3.074303,-8.683008,-4.969021,-4.557531,2.617246,-7.208785,-1.551542,4.624897,-7.581242,-5.415444,-6.866981,6.432923,-3.577536,-1.280217,-3.942170,-0.011431,-4.764152,6.608183,7.804345,-8.525815,9.102933,-2.980483,-6.720096,2.395191,-2.410350,0.889776,-1.772876,8.095274,-5.041030,0.707906,-5.820534,6.545940,-4.949484,4.557906,-0.571392,0.011711,-4.496311,0.505170,5.939933,3.679393,-3.237364,-3.756484,7.145464,-7.245224,5.345414,-3.700521,7.409407,4.472667,-6.029070,8.449314,-8.513900,3.862834,-5.218001,6.893329,5.695078,-9.261398,5.770899,-7.582630,-1.394248,-2.831898,-1.400891,-6.213250,-1.065835,-1.905020,-3.292559,-2.668513,-8.348168,-5.904907,-4.419124,-6.335530,-3.080233,-8.406446,7.559112,0.975828,0.346738,6.374456,-6.123154,6.175242,2.567504], dtype = "float64")#candidate|4119|(308,)|const|float64
call_4118 = relay.TupleGetItem(func_2931_call(relay.reshape(call_4087.astype('float64'), [7, 11, 10]), relay.reshape(const_4119.astype('float64'), [7, 44]), ), 1)
call_4120 = relay.TupleGetItem(func_2934_call(relay.reshape(call_4087.astype('float64'), [7, 11, 10]), relay.reshape(const_4119.astype('float64'), [7, 44]), ), 1)
uop_4121 = relay.cosh(call_4118.astype('float64')) # shape=(308, 1)
uop_4123 = relay.cosh(call_4120.astype('float64')) # shape=(308, 1)
bop_4126 = relay.left_shift(uop_4121.astype('uint32'), relay.reshape(call_4118.astype('uint32'), relay.shape_of(uop_4121))) # shape=(308, 1)
bop_4129 = relay.left_shift(uop_4123.astype('uint32'), relay.reshape(call_4120.astype('uint32'), relay.shape_of(uop_4123))) # shape=(308, 1)
uop_4143 = relay.sin(call_4118.astype('float64')) # shape=(308, 1)
uop_4145 = relay.sin(call_4120.astype('float64')) # shape=(308, 1)
bop_4147 = relay.multiply(bop_4126.astype('int32'), relay.reshape(uop_4121.astype('int32'), relay.shape_of(bop_4126))) # shape=(308, 1)
bop_4150 = relay.multiply(bop_4129.astype('int32'), relay.reshape(uop_4123.astype('int32'), relay.shape_of(bop_4129))) # shape=(308, 1)
func_271_call = mod.get_global_var('func_271')
func_273_call = mutated_mod.get_global_var('func_273')
call_4164 = func_271_call()
call_4165 = func_271_call()
bop_4168 = relay.divide(call_4118.astype('float64'), relay.reshape(uop_4143.astype('float64'), relay.shape_of(call_4118))) # shape=(308, 1)
bop_4171 = relay.divide(call_4120.astype('float64'), relay.reshape(uop_4145.astype('float64'), relay.shape_of(call_4120))) # shape=(308, 1)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_4172 = func_55_call()
call_4173 = func_55_call()
var_4174 = relay.var("var_4174", dtype = "int32", shape = (308, 15))#candidate|4174|(308, 15)|var|int32
bop_4175 = relay.less(bop_4147.astype('bool'), var_4174.astype('bool')) # shape=(308, 15)
bop_4178 = relay.less(bop_4150.astype('bool'), var_4174.astype('bool')) # shape=(308, 15)
output = relay.Tuple([call_4087,call_4106,const_4119,call_4164,bop_4168,call_4172,bop_4175,])
output2 = relay.Tuple([call_4088,call_4107,const_4119,call_4165,bop_4171,call_4173,bop_4178,])
func_4180 = relay.Function([var_4174,], output)
mod['func_4180'] = func_4180
mod = relay.transform.InferType()(mod)
var_4181 = relay.var("var_4181", dtype = "int32", shape = (308, 15))#candidate|4181|(308, 15)|var|int32
output = func_4180(var_4181)
func_4182 = relay.Function([var_4181], output)
mutated_mod['func_4182'] = func_4182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
call_4316 = relay.TupleGetItem(func_601_call(), 0)
call_4317 = relay.TupleGetItem(func_603_call(), 0)
output = call_4316
output2 = call_4317
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mutated_mod.get_global_var('func_4323')
call_4324 = func_4323_call()
output = call_4324
func_4325 = relay.Function([], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_4354 = func_1066_call()
call_4355 = func_1066_call()
output = relay.Tuple([call_4354,])
output2 = relay.Tuple([call_4355,])
func_4356 = relay.Function([], output)
mod['func_4356'] = func_4356
mod = relay.transform.InferType()(mod)
mutated_mod['func_4356'] = func_4356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4356_call = mutated_mod.get_global_var('func_4356')
call_4357 = func_4356_call()
output = call_4357
func_4358 = relay.Function([], output)
mutated_mod['func_4358'] = func_4358
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4362 = relay.const([[[-5.517831,-9.887862,-3.203054,-8.352250,-7.187284,-4.451043,5.989171,-2.812270],[-7.756677,-6.627083,-9.930608,5.744015,9.974887,0.594078,0.139060,-9.302713],[8.103931,2.770047,-1.269853,-1.125387,-7.589573,7.335635,4.803281,1.577897],[2.285033,7.455146,1.979716,2.621112,8.327813,-9.149006,4.177056,-4.160576],[9.937392,4.779317,6.588839,-1.204442,-1.912802,8.483817,-3.541436,3.374271],[0.444386,9.853861,5.966105,3.083090,-7.691723,-1.203330,-8.042934,-6.905252],[-7.810679,7.795545,9.360211,8.744942,0.002293,2.046869,-8.445470,0.277235],[-1.367233,-6.162879,3.026296,-8.733628,1.707216,-4.747404,3.279592,2.816617],[-2.579416,3.031324,3.456822,4.511274,-7.426536,-8.861078,1.448794,-2.079665],[-6.015271,6.843757,-3.872367,3.532050,-3.277154,-9.381914,5.922945,9.433866],[-3.603712,7.624328,-3.210318,9.035314,-3.198135,4.570682,3.558530,2.015275],[-8.120505,-0.604687,-1.820949,-1.978907,0.042043,-6.615931,-2.647913,-4.145486],[-3.052219,-3.120070,-6.609331,6.399585,1.839344,-4.764452,-2.203223,3.366665],[-5.366246,-5.534997,1.492741,-9.549467,1.507366,3.230729,-4.167806,-4.550881]],[[-7.404624,1.115398,-9.098741,2.829777,3.405625,2.678679,4.504069,-7.032804],[-7.951189,-5.662511,9.804617,-4.326757,0.178585,2.345424,7.369767,-0.588317],[-4.942660,-1.936547,8.150192,5.504951,3.259052,-8.074176,5.032417,-9.362314],[9.579273,4.639110,3.928235,3.615339,-1.835601,5.638023,3.651598,5.515408],[9.989543,-3.369904,8.745867,-5.413957,-1.678354,4.826524,8.258273,6.585148],[-9.489026,-3.663614,-7.315915,-1.230303,-3.529566,-1.173142,1.881837,5.331389],[0.741774,3.456311,1.074930,1.992859,1.937536,1.268545,7.778657,6.340339],[-0.948248,1.289383,-6.191496,1.155960,5.329173,-7.236668,1.847504,-7.035793],[2.884041,1.159676,9.514511,4.865346,6.631227,4.219468,8.076568,-6.152221],[-9.118914,4.028261,1.142738,4.468856,-0.390801,5.885564,-9.068401,9.637586],[-4.823184,-6.687067,8.716167,-8.770305,8.361253,6.161783,-5.000921,-6.465221],[-9.674562,9.987103,-2.766559,-5.390366,-0.033092,-7.816799,8.473085,5.551665],[-8.236470,9.761459,6.637433,-5.844765,-1.840565,3.835401,4.851783,6.602957],[7.770200,0.915808,-6.550582,8.172842,8.594957,6.904889,7.383545,-9.177426]],[[-4.281378,7.140728,4.616970,-5.122287,-1.300777,1.237292,6.654092,9.863074],[6.089551,-6.205438,-3.273027,2.283030,8.163554,7.503305,3.566196,-9.500740],[5.539444,6.604360,8.222461,-0.297434,6.104835,6.779869,4.742901,-6.297391],[1.772976,-0.463949,-3.480217,-9.856696,-9.638798,-9.986414,8.111353,4.163595],[-4.945382,-8.002441,5.471510,2.669874,-1.779845,0.397878,9.810469,-6.185303],[6.925194,0.399636,-0.119105,9.543488,0.870449,-2.947634,2.421372,5.584577],[-6.542153,7.220544,1.050834,2.755638,-5.168256,4.276743,-2.373901,-8.449199],[-9.825563,2.493763,7.553787,6.419059,-5.138022,-9.914794,8.469764,4.317790],[6.097636,9.847654,-5.757023,-7.077848,-5.869451,-5.744971,7.339181,-6.753253],[-6.148095,0.762009,-5.864147,-2.859614,-0.559912,-0.200246,3.035373,-1.263331],[5.525793,4.874803,-3.157088,-0.100370,3.632673,5.826816,0.993090,-4.608870],[3.989033,-2.563720,-7.881067,-8.597741,8.313285,-1.443848,-4.902579,8.264046],[4.148445,9.636956,-7.287610,-8.899426,0.602197,-1.340857,5.360393,-8.822651],[-1.152309,-8.619187,-2.911551,-8.868811,-4.631749,-4.907389,5.250417,-8.277339]],[[-8.044140,-4.307963,6.916197,-5.586788,-1.015410,6.598821,3.860787,-3.052777],[-8.036755,-7.929545,2.501457,-6.632562,4.220663,-1.454879,-8.936793,7.697142],[1.020824,4.827144,-6.258686,1.666479,8.442489,-8.341106,-2.125348,-9.702889],[-4.572423,2.009767,0.899598,0.292162,-5.857062,5.061278,-3.871909,4.685487],[-0.059031,-7.787243,-6.405601,6.524644,-8.950932,-2.576667,-8.601470,-1.628579],[0.263429,-9.243497,3.009593,-7.309765,-8.988532,4.561932,-3.300977,-4.430497],[8.422554,-7.612133,-0.508593,1.726799,5.899325,1.952550,0.938196,-3.069245],[-1.713891,9.633881,-8.274947,6.098785,-3.091944,3.426880,-1.031557,6.473435],[-8.089328,9.497535,-5.121557,-0.234126,8.402835,6.589999,8.825356,3.584833],[9.158498,8.864838,-7.922062,-6.411547,1.822693,-5.879286,1.600567,-2.566762],[5.702970,-0.834323,-0.936178,1.093976,-3.101689,-3.152268,2.653522,4.971545],[5.028261,-0.648301,-5.157833,-9.794127,9.392872,5.821937,-0.863100,-8.049780],[8.991005,4.808055,5.302576,4.924871,-2.412463,5.463789,-0.191868,-0.348987],[-8.043727,8.223681,0.915500,-7.033134,-0.685478,3.685204,3.389250,-2.385638]],[[-9.714900,2.774828,1.178235,4.293168,-9.609958,4.997969,-3.257246,-5.331798],[-8.115113,2.563891,0.177124,-7.365545,2.109708,7.588962,-9.544685,3.245463],[1.560430,-9.537994,-5.149527,-6.679632,5.605367,9.425441,8.737319,-0.074780],[9.112622,5.619141,8.564041,5.895821,1.137296,-1.874261,-2.718546,-4.997369],[-1.488359,-0.198234,0.717271,7.963474,-2.848938,-5.311033,8.528549,-5.389695],[-5.785040,8.561702,8.808727,-8.981577,6.746067,-6.697335,-6.020126,-5.319045],[-8.150198,9.146282,0.402828,-5.065476,4.733004,-0.459670,9.200710,-2.022167],[-1.617710,6.160191,-6.247362,6.511077,-8.031500,0.605566,-6.632919,7.995637],[9.727344,-6.238548,-8.362567,-7.509548,6.415643,-6.578190,1.885699,-7.330155],[-6.929620,-7.805934,7.811763,1.123633,9.710667,2.975534,-9.079680,-4.542267],[1.890846,-5.021202,4.881426,-8.019240,6.236343,9.186725,8.717199,3.216746],[-7.060522,-2.998204,2.840206,6.154741,-1.277387,-3.091172,-3.736107,-2.734083],[-3.889924,9.185688,-0.357817,-6.477066,-5.895459,-9.501146,-5.151190,1.403077],[3.647103,-5.175158,2.462445,-7.801993,-2.522457,-5.250898,6.669435,5.647511]],[[-0.476576,-9.441031,-5.675174,-3.123997,-4.330470,-7.920301,-6.406211,4.576766],[5.746609,-7.191737,-6.433000,-4.353932,-5.963093,6.344238,-7.328761,3.117909],[4.445023,3.213989,-2.242975,-5.919050,-2.892519,6.270649,-2.262520,8.795862],[3.214935,9.159625,-6.184733,-5.143586,-5.729090,-7.178904,-7.178752,3.563779],[4.371133,1.523488,7.119297,3.487533,-8.920678,-4.228075,9.898357,-0.502109],[-2.080469,-5.067222,-6.098874,3.604695,-5.064227,7.412841,4.949752,-6.797686],[0.906343,-1.963453,7.160302,-0.680983,7.526484,9.519400,-0.967053,1.800615],[3.825411,0.130293,-7.343573,-3.620243,9.544518,-1.085518,7.708053,4.530627],[-3.681651,7.250362,6.861661,-5.563944,-0.132693,-3.502440,4.614125,3.272668],[2.616391,-4.954829,6.891141,5.456573,-4.792409,4.672597,-4.305523,-2.172886],[1.545181,5.655040,-6.209949,0.304515,3.475997,7.036633,6.228123,6.696798],[-6.960951,-6.394351,-9.012647,-1.227709,7.549097,-2.583372,-4.820692,0.316552],[-6.669374,5.021218,-7.651793,-7.569302,-6.625784,-6.285269,-5.192872,-6.028378],[-9.723266,8.580152,-4.099084,1.085723,7.866549,-8.700653,6.430276,1.159513]],[[-8.423668,-0.977701,6.484782,-5.126428,-4.828998,0.191682,-2.238530,3.269245],[7.724784,7.841177,-4.098524,5.300108,1.079673,-2.640286,1.132208,-5.583234],[-7.958234,-3.459514,8.840798,9.800212,-6.199976,1.074529,-6.535159,5.295856],[9.223365,-4.952147,5.644820,5.456117,8.939649,1.933938,-1.084775,-5.896065],[-5.507787,-9.187264,4.647774,-5.560626,6.489224,-4.455459,-5.544063,1.000196],[-1.730128,-1.691363,6.455619,-6.956788,1.562987,-5.762640,-1.730441,-6.363586],[9.214804,-3.780262,-7.139968,-6.137431,-9.737027,6.122936,-3.749443,-8.727379],[-4.464362,7.246247,0.793286,-1.744157,4.147626,-1.026463,5.532282,1.173932],[7.916267,8.970902,-8.965319,2.552174,-6.941571,5.230719,7.918964,-2.199451],[-5.415014,-4.681288,0.221174,-2.499884,6.919898,-4.313244,6.421898,3.992015],[-8.733882,-4.932641,3.337055,9.958417,7.449877,-7.612653,5.779451,-8.600797],[-0.350145,5.963178,-2.878126,3.974889,-1.447351,-1.026238,9.608424,-5.337643],[2.584774,-9.845626,6.406476,-4.276983,-3.447120,9.423466,1.436707,-4.022614],[-2.741585,-1.608625,2.777565,-6.733895,7.347615,-3.987432,7.994237,-0.107081]]], dtype = "float64")#candidate|4362|(7, 14, 8)|const|float64
uop_4363 = relay.log10(const_4362.astype('float64')) # shape=(7, 14, 8)
func_1694_call = mod.get_global_var('func_1694')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_4367 = relay.TupleGetItem(func_1694_call(), 0)
call_4368 = relay.TupleGetItem(func_1695_call(), 0)
func_4180_call = mod.get_global_var('func_4180')
func_4182_call = mutated_mod.get_global_var('func_4182')
const_4378 = relay.const([-2,-7,3,3,-9,-9,10,3,-4,7,-5,1,-10,-5,-10,3,-7,3,10,-5,6,9,3,-1,-5,5,9,-6,-4,-2,-9,8,-9,-5,6,10,-7,10,-5,9,1,-9,-9,-9,-8,-9,10,-3,2,-8,2,-2,8,-1,5,2,1,6,8,4,8,1,5,-7,-5,-5,2,6,-1,3,-4,-4,8,-6,7,2,-7,3,8,7,4,10,9,-6,-2,6,5,2,10,-2,2,-2,7,-9,7,8,-7,-5,-6,-7,-1,-6,-5,-2,8,3,7,7,3,1,-3,1,-9,6,-7,-4,10,-7,-8,-1,2,-6,-1,5,8,-4,-6,1,-1,-9,-2,1,2,-8,-4,5,-2,8,-4,7,-10,-5,8,-10,-4,9,3,-9,-7,-5,7,8,-1,-5,9,10,-3,-6,2,-1,-6,-4,2,5,-2,10,-2,-1,7,9,7,7,-4,-10,10,5,-2,6,2,-3,4,6,-4,-1,2,-8,1,9,-10,-4,-2,6,-5,10,-6,6,8,5,2,4,-6,-2,-10,4,2,8,-4,10,7,-1,-4,-2,-2,4,-3,-5,-1,-5,10,8,-7,7,-1,5,6,-10,4,3,-8,-7,5,9,-10,6,-4,-3,-1,4,-7,1,-4,6,-4,3,5,-3,3,8,-4,5,-9,1,-9,3,4,1,-8,6,-5,-3,9,5,-6,9,-5,2,-5,5,7,-1,-3,-9,-1,-2,3,9,9,-6,-6,7,-9,7,-1,7,-10,9,3,4,-10,-10,-2,-5,-2,-8,-5,-10,-3,6,9,1,4,-5,-5,-10,-7,-8,-9,10,3,2,2,-2,-10,10,-4,1,1,6,6,3,-6,4,5,9,-3,-7,2,1,-8,1,2,-3,-9,8,-6,-1,-3,10,-1,5,-9,-9,2,4,1,-5,9,-5,-6,4,-4,-6,7,5,6,-2,-4,7,10,-9,9,5,1,-4,3,-1,-10,3,5,-7,-8,8,-9,10,-8,-2,1,5,-7,1,7,-6,10,-6,9,-6,2,9,-8,-3,-7,3,4,2,-7,3,4,10,-1,7,-2,7,6,7,6,-4,7,-1,-7,6,5,-7,1,10,-8,3,3,-3,-7,-5,-2,-4,-8,4,7,9,-9,10,6,3,-9,1,6,3,6,-4,8,-9,-4,-10,-3,2,5,-2,-2,-4,-1,4,-1,-1,-4,-7,-7,-9,-1,2,7,-6,6,3,4,10,2,-5,1,-2,-4,-7,7,-10,4,10,5,-6,-5,10,6,-7,4,-3,-9,-1,-4,-4,4,-7,5,2,5,-5,-8,-10,-5,-5,8,-5,3,-1,-4,-7,-8,-9,-4,-7,10,9,-6,-2,-5,-1,5,3,-2,6,-1,4,-9,-4,-5,-2,-4,-5,-10,-5,-6,-8,-4,10,5,-10,6,6,9,10,5,-3,3,-1,-6,7,-3,-4,8,-3,-7,1,-8,-1,-9,3,3,4,5,-10,-2,-3,-6,3,1,8,8,-1,8,-5,3,2,-5,1,-10,1,9,-8,-2,-6,-7,-9,6,5,-4,-1,-10,10,-7,-5,1,10,1,5,-3,6,-7,-6,9,-7,4,7,-8,9,-7,6,-2,9,6,-7,-5,8,-2,-7,10,1,9,-5,-4,-6,-1,-2,-9,-6,-7,6,10,5,10,2,-5,3,-10,3,-5,8,9,10,-2,-5,-1,-10,4,-2,7,-4,6,6,-6,-3,-10,-8,2,-7,4,3,2,8,-9,10,-6,-10,-4,10,9,-2,4,-8,-9,1,8,1,-5,5,1,4,2,10,4,5,-3,2,8,-6,-4,2,-8,1,-4,-9,-2,2,1,-9,4,-8,-10,6,10,-4,-8,-6,9,-2,-6,10,6,-1,6,1,3,-8,-10,10,8,-4,-10,3,-10,6,7,-5,8,9,-7,5,-10,2,9,9,5,6,-4,7,-5,1,9,-5,3,2,-4,9,-1,-3,-10,-10,6,2,-6,-5,4,-2,-1,1,-1,-3,9,9,10,10,4,8,-5,-9,1,-1,9,9,10,-3,10,-8,-7,-9,-8,-8,-9,10,7,3,1,-5,7,10,2,10,1,-5,2,-5,4,-3,-10,-7,10,6,-5,-4,3,-2,9,-10,-8,9,8,-2,-7,-5,8,5,3,-1,-10,-1,-9,9,2,6,-4,-4,9,5,1,-3,4,-6,9,5,10,-4,6,-7,-5,-2,8,-3,4,-2,-10,3,-5,10,8,-3,9,7,3,8,7,-8,6,3,-1,-6,-2,-4,-9,10,10,-6,-3,6,9,7,-4,4,-8,1,-1,-10,-5,1,1,-1,-7,3,4,-9,5,-10,10,-10,-10,-10,5,6,-8,-6,-8,-1,-6,6,-4,-2,8,-8,5,-1,-9,7,-2,-6,10,9,-8,5,-5,-3,-4,9,-8,-2,-5,7,-3,7,-7,-4,-4,-7,3,8,10,8,8,-8,4,-9,-3,2,1,3,-4,-7,2,-3,-5,-5,-4,-9,-2,-9,8,-7,4,-9,1,-3,9,-3,5,5,9,-4,-7,-5,1,5,-2,10,-2,-1,3,7,-5,2,-6,-9,-1,10,-6,-4,1,-8,-6,10,-9,10,-4,-3,-7,10,-4,-10,2,10,7,6,-7,-2,3,10,3,-4,-7,8,2,9,7,-10,1,6,3,-7,-8,-3,1,5,-3,10,7,-6,-6,-4,8,1,-3,-9,-2,-9,5,3,7,-7,8,2,5,-6,-5,-5,6,4,4,-8,-10,-7,10,3,10,10,9,-3,10,-5,-2,9,6,-7,-9,-7,3,5,5,-3,-8,-3,2,1,-7,-8,9,-7,5,7,1,2,-9,-7,5,-9,10,-1,-8,-6,-1,4,-6,-6,6,-2,7,-1,2,-3,10,3,-2,4,-9,6,7,-1,-2,-3,-10,5,10,6,-6,3,10,5,10,-5,10,-8,-1,1,6,2,-2,5,-3,-5,1,2,-2,5,-6,3,-2,-4,-10,8,10,1,-7,3,-9,-6,6,2,-4,-4,-9,-6,-5,-6,7,10,4,-1,-10,-10,5,-7,-5,-1,-8,-9,9,2,8,-1,-3,-2,4,7,-8,-3,2,-3,1,-8,-8,-7,-4,3,8,5,-6,-8,2,6,-4,-2,9,5,-1,8,-8,6,-6,4,-2,-5,7,1,-1,-9,6,-1,-9,4,9,-7,6,1,-4,-6,-3,7,4,-1,-4,10,-4,-4,9,-2,9,5,5,-9,-10,-5,6,5,7,7,-6,1,1,-2,-3,-9,4,-8,-10,5,-2,5,10,9,7,3,4,3,1,-6,-8,7,-8,8,-3,-10,-3,4,8,-5,1,6,1,-1,-5,-7,1,-4,10,-9,-6,8,7,-5,3,-7,9,2,-5,2,-1,2,4,2,-7,-5,-1,2,-4,2,8,-4,5,7,-8,-1,-8,8,6,-6,-1,5,5,-2,4,-6,5,9,3,-3,5,-7,-4,6,7,4,2,-1,-7,-6,9,5,-10,-8,-4,-6,-3,-3,10,-1,-1,4,-6,-4,10,-6,-2,4,9,6,3,2,5,-6,-7,9,-2,5,9,-1,-7,-7,1,-10,-5,4,8,-7,1,5,2,8,-8,2,-2,8,3,8,-1,4,7,-6,-4,-8,-8,-5,-1,-4,5,8,-10,-7,-4,-7,-5,10,9,-9,-1,-9,3,1,6,5,-3,9,1,-8,-2,9,6,-1,7,7,8,1,10,5,9,-7,3,6,3,9,9,-5,7,-1,8,6,-3,-7,-9,7,2,-8,2,-9,10,-2,-5,-5,5,-9,-3,8,2,-9,8,8,-3,-7,2,2,3,2,-3,10,-2,-8,4,3,1,-6,9,1,10,-7,-3,6,-4,-1,5,2,2,4,-8,-3,-8,-10,-3,-9,8,-7,6,6,-2,-5,-10,-4,-1,-10,5,7,-2,-10,-7,-2,-6,7,-2,2,-2,1,-7,6,-1,-6,8,10,10,9,-1,-4,9,3,-4,7,3,10,1,6,10,8,7,10,-10,-7,-9,9,2,-1,-6,-6,4,-9,-10,9,-8,10,5,-3,10,-5,2,-6,8,3,-4,5,5,-5,2,8,10,-7,9,-9,1,9,10,8,-3,-3,1,8,-5,-2,-6,-9,8,1,-6,-8,4,8,3,3,-6,6,8,5,7,-2,-6,1,-5,-3,5,-7,9,5,3,1,-8,-9,10,-2,9,-2,-5,1,7,2,-7,1,6,9,5,9,8,-10,1,-5,-5,7,2,-9,-4,-9,2,7,5,7,8,3,-3,-4,4,7,8,9,-4,9,9,-8,-9,9,3,-5,-2,-8,-3,1,2,9,2,2,-6,5,-10,-6,-10,-2,-3,-5,-7,-1,-5,-10,-2,7,-6,-1,1,-8,1,-9,-3,5,9,-10,-4,9,-5,4,-7,-3,-3,5,-2,-4,-1,5,5,-7,-9,3,7,-1,-10,-2,-10,-1,-1,7,-3,8,4,-5,1,-3,10,6,-7,-2,5,-7,-8,8,-7,5,-7,-4,-4,2,-3,-10,3,10,4,-9,7,4,4,-7,8,-1,-2,-8,3,6,6,-9,-1,-9,3,1,-3,7,6,8,-3,1,-3,-4,2,4,-5,7,2,-8,-3,8,4,3,9,-6,-2,10,7,-4,3,6,-9,-1,-8,-9,-9,-9,2,3,-3,6,7,3,-9,4,2,-1,5,-3,2,-6,-1,-4,-6,4,7,7,5,9,-4,7,4,-9,1,-2,6,-4,10,9,6,-5,5,-6,-1,-4,9,-3,1,-2,5,-5,-1,-9,-8,6,4,-6,5,-9,8,-3,7,10,5,-2,5,1,-8,-6,9,-10,-7,-1,-8,-1,4,-3,-8,-8,-4,-5,-10,6,7,4,-6,-8,-9,-5,9,-3,-10,1,9,2,4,4,-4,-1,2,8,8,-3,6,5,-6,8,5,5,-3,-7,4,8,-4,10,4,6,-5,10,8,9,-4,-9,6,-2,1,-3,-3,-5,-2,4,5,10,10,-3,5,-2,7,-7,5,2,-9,3,10,10,4,-7,-6,1,9,4,-4,-5,8,-5,-1,9,4,1,-9,-5,5,-4,-1,8,-6,3,1,-2,10,-1,6,3,3,3,7,7,-2,-4,5,-2,-6,-3,-5,-7,-4,-9,10,10,8,-7,1,-8,4,-5,-5,10,-6,-10,7,7,10,2,8,5,-5,-10,4,-1,-9,7,-5,-7,9,-1,9,-8,4,8,1,-7,-4,7,6,-10,4,8,6,2,5,4,3,-2,1,10,-3,-2,-5,-7,-5,-5,6,-10,-1,8,8,-1,-3,8,10,9,5,10,-8,-1,8,4,9,6,8,7,7,5,-8,-5,-10,-4,4,5,3,-5,-1,-4,-2,-2,6,6,-7,3,-3,4,3,-8,-3,10,-10,8,-3,4,3,-8,5,-10,5,8,4,-3,1,7,-6,-2,4,-10,10,-4,1,-2,8,-1,-7,-10,2,-1,7,-8,5,-1,-10,7,6,5,-5,-4,-10,3,3,-10,9,9,-1,10,9,-6,4,-8,-3,10,7,9,10,-5,-9,9,8,5,6,-7,9,-1,5,5,-10,5,10,7,10,-2,-8,-7,10,-8,-9,3,-8,-3,6,10,5,-5,3,-5,-5,2,-8,4,2,6,8,-9,4,9,2,-5,-7,3,4,5,-3,-5,-5,-10,-10,8,6,2,9,-9,1,9,-6,-9,10,-2,-10,-5,3,-4,2,10,-9,-7,6,-1,-9,6,-5,-8,9,-10,-6,-4,10,3,-9,-7,7,-9,9,-1,-4,-6,10,-6,5,-7,-10,-1,10,2,8,10,-5,-10,10,-3,-6,3,-4,-6,6,-1,6,-9,-5,-8,10,10,-8,10,-10,4,3,-4,8,-7,5,3,9,2,10,-8,-9,-8,9,-8,-10,-6,10,3,4,-4,-9,2,6,-5,-3,9,-1,10,-4,10,-1,-8,-8,10,-2,-1,-9,10,-7,4,-7,-2,9,-10,-2,-6,9,-1,6,9,6,-10,2,-2,4,-7,-8,-3,4,-7,-4,-7,-8,9,2,1,-7,4,-2,6,-2,-9,5,7,-5,-4,-7,3,-3,-9,-10,2,-3,7,-3,-3,10,-5,-4,-4,7,8,-3,1,-3,1,-5,3,9,5,-4,7,8,1,-4,-1,-5,7,1,-3,10,-10,-7,3,4,8,-6,-4,-6,-8,-1,3,9,-3,-8,7,-10,-3,9,-3,-5,2,5,-6,2,3,-5,9,-6,4,-1,-2,-7,8,-10,-10,-1,6,10,-8,8,-6,-10,4,-7,10,9,-9,-6,2,-7,2,-7,-5,-10,9,-6,10,-8,-2,5,3,3,-10,-8,-6,7,4,-6,-2,1,4,-6,3,-1,1,8,-7,3,-1,-2,-5,-5,-6,7,5,9,5,-6,-1,5,2,-3,4,8,8,-2,-2,1,6,-6,-6,-2,10,9,-6,3,-8,7,-6,-5,9,-7,-4,9,-6,1,-7,3,5,-1,6,9,2,-6,-4,-3,8,-2,-8,-2,-5,6,-8,-1,1,-5,8,3,-1,8,-9,8,9,-2,2,-3,9,-9,10,-9,4,10,-8,-1,1,6,-8,-9,-6,-6,-7,5,10,-2,-6,3,-6,1,7,5,-9,10,-7,6,4,-6,-5,-6,7,-7,-10,2,-3,-10,-2,10,7,-1,-1,-2,3,5,-6,-4,8,5,-10,-5,-9,3,1,-7,3,5,-6,-8,-2,8,-3,-3,2,2,7,4,2,9,1,2,-5,2,3,-2,-5,2,-3,-1,-3,6,2,-5,-9,8,2,6,8,-1,-9,5,-3,2,-4,-2,7,6,-10,-4,9,9,-3,-1,4,-3,4,7,-6,5,1,6,7,-9,-5,4,-4,-7,1,-9,9,9,1,3,2,-5,5,-3,3,9,-5,-4,-7,8,-7,4,1,9,7,1,-10,-4,-8,-9,-1,1,-1,-4,5,8,-1,10,-6,-5,-3,-6,-3,-9,-9,5,9,5,10,10,-3,9,-1,-7,-10,-3,1,5,10,-8,-6,-1,9,-5,-5,-6,1,2,4,2,2,-6,-5,-8,7,-7,6,-8,-4,-6,5,-9,9,10,-1,-7,8,-7,-4,-9,10,6,4,3,-4,-8,4,7,1,9,2,6,-9,4,-9,-8,8,6,-7,-1,9,2,-9,7,8,1,-1,-9,-1,8,5,8,10,-7,-3,10,2,-7,10,-2,-1,-8,1,7,-10,3,-10,1,4,-9,-10,3,8,2,6,-8,-8,-9,6,2,-10,-1,5,4,-2,8,-9,-2,1,-7,-10,3,-3,-9,-8,-5,6,-3,-8,8,-8,-1,-9,6,-9,-6,9,-10,-2,1,10,2,-2,4,-2,1,1,8,5,10,8,6,7,-8,-3,-1,-5,-8,10,10,-6,-5,-2,-9,-9,-4,6,2,4,-4,-1,1,-10,6,10,-5,4,5,2,-5,-2,-6,9,-2,2,-1,3,-10,10,4,-1,-8,6,2,-7,1,-8,-6,6,9,5,10,3,-10,7,4,-2,4,-8,-10,-5,-2,7,-1,9,-1,-1,2,-5,8,-8,-2,7,-10,4,1,8,-6,5,-8,-9,-9,-9,4,-3,8,5,2,5,10,-10,1,-8,3,-4,6,-9,4,5,-4,10,-10,1,10,1,-7,5,-1,5,-4,4,-2,6,10,4,10,5,3,-9,2,-7,1,9,2,-5,-4,-8,-9,-2,6,3,2,-3,4,1,1,4,-7,3,6,-8,8,-7,-10,8,-5,-1,8,3,5,-7,2,-8,4,-10,1,3,6,6,8,-2,-4,-1,7,2,10,8,-1,-10,-8,-9,10,10,-3,2,10,-6,8,-7,-5,-7,-10,-6,-1,-8,-7,-10,9,3,-6,-5,8,3,1,1,8,-1,-2,9,-3,2,4,-9,4,4,6,8,-1,9,10,-7,9,7,7,5,-3,-4,-1,-9,-4,4,-2,-5,5,6,6,-2,-5,6,-2,-4,8,-1,10,3,-3,-5,1,-10,5,-10,1,-8,10,8,5,-9,7,-1,10,-2,-10,7,-8,8,5,6,9,-10,-10,-2,-10,9,1,-4,-5,-1,5,6,7,5,-1,7,7,-10,-8,1,3,5,1,4,-10,-10,-5,6,-2,5,4,-3,3,-7,6,-9,9,3,-7,-5,-4,-2,1,4,-9,-7,2,5,5,-6,-1,2,-3,1,3,-7,-10,7,-6,-7,9,9,5,-7,-7,3,-8,-1,9,-10,-7,1,-7,3,7,-8,5,8,-3,-10,7,-10,8,7,3,-2,-6,2,-9,-7,-4,-5,-4,8,-7,8,2,9,9,-9,-5,5,-4,-5,1,-1,8,-3,-10,-10,9,-1,7,-3,7,-1,3,-4,-2,-9,-2,9,8,-2,2,7,9,-4,-1,-3,9,1,-9,-10,-5,-5,1,8,-5,-10,-2,8,-7,8,-9,6,-6,-3,-3,9,2,-6,-7,4,5,-6,-3,6,9,7,8,10,-4,10,-4,7,2,-6,-8,-8,-4,-9,1,8,1,9,-1,-3,10,2,2,-9,-5,-3,7,7,6,-10,-1,-6,-4,-4,-4,1,2,-7,5,1,10,2,-5,-1,-2,7,-7,-8,8,9,-10,-5,6,-1,7,-10,5,-6,-10,9,-6,-7,-9,-8,-10,-8,-9,-5,4,-5,-5,10,8,10,3,-10,-6,-3,-6,4,8,-6,-7,-2,-4,-4,6,1,-1,2,10,2,2,3,-6,2,10,-3,-9,-10,3,-6,-9,3,-9,4,8,7,9,8,6,-1,7,3,-8,3,-8,-2,-7,7,-1,-5,-6,9,-10,-1,6,-3,6,1,1,-5,4,-6,-2,4,3,-2,-2,4,-5,-10,-9,-6,-1,8,2,10,1,-4,8,-4,-9,-2,7,-3,-5,5,-8,-8,7,-10,9,4,6,1,-8,-7,-3,-10,-8,-5,7,-6,1,3,-10,-7,-1,-7,1,-10,-4,7,-9,10,-9,-8,-6,-1,-8,5,5,5,4,-2,-1,-5,-3,-4,9,-10,10,-5,2,-3,10,8,-1,3,6,-2,2,-4,10,-7,-4,7,5,-2,10,7,5,-9,-10,-4,2,5,-3,-8,9,-10,-2,-8,-1,-4,-8,-4,8,-1,-8,7,3,5,-3,7,-10,-4,5,1,-4,10,-8,7,10,6,-5,7,7,3,4,-1,-6,9,6,-9,5,-2,-4,10,-9,1,1,1,1,-7,4,1,10,-3,-10,-7,-4,9,-10,-1,5,-10,-1,4,4,10,7,10,-1,-6,-5,-7,3,-6,-5,9,-10,-8,-1,4,-4,-5,-6,-10,8,-2,-10,2,7,4,9,-3,4,2,6,3,2,2,-3,-9,-10,-3,-9,4,7,7,-3,4,2,5,4,7,-7,6,-1,2,5,2,2,-10,-3,-4,-7,-4,-6,8,-6,-10,4,-5,-10,-8,2,-8,5,-5,5,5,-10,5,-9,-10,8,9,5,-6,-9,-9,-4,7,-5,10,-2,5,5,9,-1,-8,-6,-10,9,5,10,-10,1,8,8,7,2,-1,10,-2,9,-1,-6,-8,-6,-4,-7,3,-4,3,8,3,1,-10,3,3,9,-9,-2,-2,9,5,2,1,10,9,3,-1,-7,-5,-2,-4,-2,-7,-1,-5,5,-6,1,-5,3,-2,-10,-1,5,-7,4,-7,6,5,3,10,1,6,-5,-4,9,-5,10,-3,-3,9,4,6,-9,9,-2,-1,3,6,10,-6,-7,-5,-8,9,1,-9,-3,4,7,-6,-2,-1,-2,-3,-8,-1,-2,9,7,1,3,2,6,-9,-1,1,2,8,-10,6,2,10,-4,-5,-6,-8,10,-6,9,-1,-10,4,8,-6,5,-6,-1,-2,-5,5,-7,2,-4,6,-6,4,1,8,1,8,9,-4,10,5,-5,9,-5,1,-9,-5,-6,-1,-8,-6,6,-5,-6,3,-5,3,1,3,-3,9,3,-9,2,4,2,1,4,2,4,-5,-6,-8,2,-4,8,-9,7,8,9,-1,3,-8,7,6,5,-10,-2,7,2,7,7,10,5,3,-1,-6,6,1,5,-5,-9,-3,-5,-2,-4,-8,-8,-4,8,8,4,6,-1,-5,4,-7,7,3,2,1,-8,-8,-7,7,2,7,-1,-9,-1,9,8,-10,7,9,3,-7,6,5,-2,9,10,-1,10,-3,6,-10,-9,-9,6,-8,-5,9,-2,7,7,-7,3,-9,-10,7,6,8,8,2,5,-4,-4,-2,-7,2,4,-2,9,-1,4,5,-5,-3,-10,8,4,-6,5,9,-8,6,4,10,-9,-2,-10,1,10,6,-1,-5,-6,-7,10,5,-9,-1,-10,6,-3,2,-5,-7,-1,5,9,8,3,-8,-3,3,3,3,-5,3,-7,-1,10,-9,3,2,6,-7,7,-3,6,10,-10,-7,4,-4,6,5,-3,6,10,8,-10,-6,8,-5,7,-8,-10,1,4,5,1,6,4,-10,2,10,-2,-6,8,-7,-9,-10,-9,-3,8,-2,7,5,-2,6,4,5,-2,4,-4,-5,-5,2,-9,6,-2,-6,-8,8,7,-5,10,5,-3,-4,-2,-2,5,3,-6,1,7,6,-2,7,-8,10,-6,-2,6,8,6,-6,-1,-6,8,-6,7,-2,6,-8,-4,4,3,-9,-3,-10,-4,-9,7,-3,-5,2,2,-10,-3,-5,-7,9,7,3,-4,9,1,-4,-5,5,-9,-1,1,9,2,-3,5,2,-9,-9,8,-2,8,-9,-4,-1,9,3,-3,-6,-8,-5,10,-2,10,1,-1,-1,8,10,-4,6,-4,5,-1,4,9,-2,-7,-7,8,-7,2,8,7,3,-10,7,8,-5,1,8,-1,9,5,-4,-6,9,-10,10,-4,9,2,2,-7,8,-6,-8,-7,2,-4,2,-7,8,10,5,10,10,9,3,6,-4,8,-9,2,6,10,-6,10,4,-3,-4,4,-7,5,-9,-1,-5,-6,3,-8,3,-8,-4,-6,-6,9,2,-3,6,-8,1,9,-10,2,4,4,-7,10,-9,-2,-5,-7,4,-7,10,-5,-7,-8,-1,2,-8,5,-9,9,-9,-4,-1,3,-3,-4,-6,-3,-3,-1,1,10,-10,-7,9,-8,6,-5,5,10,8,10,-5,8,5,-2,5,-6,-8,5,-8,6,-6,-8,-6,-8,2,-8,-2,5,-8,-2,3,-9,10,6,8,1,-2,-5,-9,5,-3,-10,-1,-4,6,-3,5,-9,7,-4,-9,9,6,-10,-8,-6,-9,-8,3,-1,-8,-5,-8,10,10,-8,-9,-10,10,-7,6,3,-2,-6,-3,-2,-1,5,-3,-5,-9,2,10,2,-4,2,4,5,-6,-1,-6,-3,-1,-8,-5,9,-8,1,-5,-1,4,8,7,-4,-4,4,-9,9,-5,-4,2,4,6,-9,10,9,1,2,3,-5,-10,-7,5,-8,-4,3,-8,5,4,-5,4,-8,3,5,3,-3,8,-1,5,-3,4,7,5,-5,8,3,6,-6,-9,-7,10,7,-9,1,8,4,-2,-3,7,-5,-10,8,8,-6,-5,-9,-10,-5,5,-4,-1,-4,-1,9,-6,4,1,-1,6,-5,-8,-7,9,9,7,-6,4,-1,-8,5,-3,10,-9,-2,-8,-5,9,9,4,-3,-1,-9,-2,2,-1,4,3,7,-6,-8,-5,-5,7,-6,1,-3,-2,-9,-5,4,7,-9,3,4,-4,-6,-7,5,4,-4,3,-9,-10,-7,9,-10,-9,-9,-4,2,7,-6,10,6,-5,10,8,10,10,-4,7,7,2,8,9,3,-9,-10,-2,-6,-7,-4,-8,4,10,-8,1,-4,-9,8,-4,4,1,4,-10,-2,-9,-3,-1,-6,4,-9,-9,-9,-5,8,9,-3,-8,8,1,5,6,-8,5,-7,10,-4,-9,7,10,-3,7,-1,-5,3,7,-6,7,10,-10,1,-3,10,5,-3,-3,6,-2,-7,4,-5,-9,7,-6,10,-4,-7,3,6,-7,5,-7,1,7,-8,-9,5,-3,6,7,-7,-6,-7,-4,-10,-2,-10,-7,-8,-9,5,-9,-8,1,4,-9,-1,7,-5,-1,-9,-10,-3,10,-1,-10,-8,7,3,-9,9,10,-6,-8,-8,-6,3,8,4,7,-10,4,-8,-6,-10,-10,5,-9,-8,2,7,7,-5,-5,-4,6,9,-3,-10,10,4,-9,3,-1,-6,-9,2,-10,-10,8,7,-7,4,5,-9,-6,-8,-1,4,2,-5,-2,6,6,8,9,9,-4,-5,7,-8,6,-7,-7,-9,10,9,-2,5,-8,-1,-8,2,-3,5,-3,-2,-8,-8,-9,-3,2,2,-4,2,-10,8,3,-4,-1], dtype = "int32")#candidate|4378|(4620,)|const|int32
call_4377 = relay.TupleGetItem(func_4180_call(relay.reshape(const_4378.astype('int32'), [308, 15])), 1)
call_4379 = relay.TupleGetItem(func_4182_call(relay.reshape(const_4378.astype('int32'), [308, 15])), 1)
output = relay.Tuple([uop_4363,call_4367,call_4377,const_4378,])
output2 = relay.Tuple([uop_4363,call_4368,call_4379,const_4378,])
func_4385 = relay.Function([], output)
mod['func_4385'] = func_4385
mod = relay.transform.InferType()(mod)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4385_call = mutated_mod.get_global_var('func_4385')
call_4386 = func_4385_call()
output = call_4386
func_4387 = relay.Function([], output)
mutated_mod['func_4387'] = func_4387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3268_call = mutated_mod.get_global_var('func_3268')
call_4391 = relay.TupleGetItem(func_3267_call(), 1)
call_4392 = relay.TupleGetItem(func_3268_call(), 1)
output = relay.Tuple([call_4391,])
output2 = relay.Tuple([call_4392,])
func_4413 = relay.Function([], output)
mod['func_4413'] = func_4413
mod = relay.transform.InferType()(mod)
output = func_4413()
func_4414 = relay.Function([], output)
mutated_mod['func_4414'] = func_4414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
call_4451 = func_171_call()
call_4452 = func_171_call()
output = relay.Tuple([call_4451,])
output2 = relay.Tuple([call_4452,])
func_4465 = relay.Function([], output)
mod['func_4465'] = func_4465
mod = relay.transform.InferType()(mod)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4465_call = mutated_mod.get_global_var('func_4465')
call_4466 = func_4465_call()
output = call_4466
func_4467 = relay.Function([], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1293_call = mod.get_global_var('func_1293')
func_1294_call = mutated_mod.get_global_var('func_1294')
call_4483 = relay.TupleGetItem(func_1293_call(), 0)
call_4484 = relay.TupleGetItem(func_1294_call(), 0)
output = call_4483
output2 = call_4484
func_4489 = relay.Function([], output)
mod['func_4489'] = func_4489
mod = relay.transform.InferType()(mod)
mutated_mod['func_4489'] = func_4489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4489_call = mutated_mod.get_global_var('func_4489')
call_4490 = func_4489_call()
output = call_4490
func_4491 = relay.Function([], output)
mutated_mod['func_4491'] = func_4491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4501 = relay.var("var_4501", dtype = "uint16", shape = (12, 6, 5))#candidate|4501|(12, 6, 5)|var|uint16
const_4502 = relay.const([[[2,-10,-3,1,3],[4,7,4,7,-7],[8,-6,9,-3,1],[-4,-3,1,3,-5],[7,4,5,2,-7],[8,4,-4,-1,7]],[[8,-6,-8,-7,10],[-9,-1,10,10,7],[-10,-3,-10,-9,-1],[2,8,10,-6,8],[9,2,-10,-6,-4],[-8,-8,1,5,7]],[[-6,5,9,-1,4],[-1,-7,-3,-5,9],[-1,-4,-7,5,4],[-10,-2,-6,2,-8],[-9,9,3,-4,8],[8,10,8,-8,9]],[[-6,-4,-4,1,-10],[-2,7,-6,3,9],[-5,3,-2,3,4],[3,1,-6,2,2],[-6,2,8,-6,-7],[-2,-5,-8,-6,6]],[[-2,-7,10,9,3],[-3,-8,4,2,6],[-6,-2,3,-7,-10],[6,4,7,9,6],[-9,-2,-4,4,-8],[-5,-9,5,-6,1]],[[-5,-10,-2,-3,-4],[4,-5,-2,-5,-7],[9,9,-9,-9,7],[3,-9,-3,7,-2],[2,-6,-2,-8,-7],[2,-6,-5,7,2]],[[-6,-8,-5,5,-6],[4,-3,-6,1,4],[10,-5,8,1,-3],[-9,-9,3,-9,-7],[5,10,-6,-5,-2],[-4,-6,9,8,-9]],[[-5,8,-7,-8,-9],[-9,10,2,-10,2],[7,-4,-4,9,5],[3,-8,3,-1,-2],[-10,5,-4,4,6],[-6,2,6,-1,10]],[[-4,-5,3,10,1],[-4,-4,-10,8,2],[2,4,6,-1,-6],[-4,-1,5,-8,-8],[6,1,3,-8,-5],[-4,8,10,2,4]],[[2,8,-8,-9,-7],[-7,-1,3,-8,-6],[3,10,9,-7,1],[9,-1,9,2,-6],[-5,2,-1,-1,-5],[-4,8,-2,-3,-10]],[[-10,8,-7,-1,-2],[-8,9,-2,-4,-1],[-1,-7,-6,8,8],[4,6,-1,8,2],[8,7,-1,-10,-6],[-1,-6,6,7,-1]],[[-1,-5,6,1,-8],[4,-6,-5,-3,-9],[-6,6,1,3,-7],[5,1,6,-7,-1],[-2,3,5,-3,3],[-7,-4,-2,-4,-5]]], dtype = "uint16")#candidate|4502|(12, 6, 5)|const|uint16
bop_4503 = relay.bitwise_or(var_4501.astype('uint16'), relay.reshape(const_4502.astype('uint16'), relay.shape_of(var_4501))) # shape=(12, 6, 5)
func_671_call = mod.get_global_var('func_671')
func_672_call = mutated_mod.get_global_var('func_672')
call_4515 = relay.TupleGetItem(func_671_call(), 0)
call_4516 = relay.TupleGetItem(func_672_call(), 0)
output = relay.Tuple([bop_4503,call_4515,])
output2 = relay.Tuple([bop_4503,call_4516,])
func_4530 = relay.Function([var_4501,], output)
mod['func_4530'] = func_4530
mod = relay.transform.InferType()(mod)
var_4531 = relay.var("var_4531", dtype = "uint16", shape = (12, 6, 5))#candidate|4531|(12, 6, 5)|var|uint16
output = func_4530(var_4531)
func_4532 = relay.Function([var_4531], output)
mutated_mod['func_4532'] = func_4532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_4565 = relay.TupleGetItem(func_113_call(), 0)
call_4566 = relay.TupleGetItem(func_115_call(), 0)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_4571 = relay.TupleGetItem(func_3287_call(), 0)
call_4572 = relay.TupleGetItem(func_3288_call(), 0)
func_4489_call = mod.get_global_var('func_4489')
func_4491_call = mutated_mod.get_global_var('func_4491')
call_4574 = func_4489_call()
call_4575 = func_4489_call()
func_2229_call = mod.get_global_var('func_2229')
func_2231_call = mutated_mod.get_global_var('func_2231')
var_4580 = relay.var("var_4580", dtype = "float32", shape = (455, 3))#candidate|4580|(455, 3)|var|float32
call_4579 = relay.TupleGetItem(func_2229_call(relay.reshape(var_4580.astype('float32'), [1365,])), 0)
call_4581 = relay.TupleGetItem(func_2231_call(relay.reshape(var_4580.astype('float32'), [1365,])), 0)
var_4595 = relay.var("var_4595", dtype = "uint16", shape = (35, 6))#candidate|4595|(35, 6)|var|uint16
bop_4596 = relay.logical_xor(call_4571.astype('int64'), relay.reshape(var_4595.astype('int64'), relay.shape_of(call_4571))) # shape=(35, 6)
bop_4599 = relay.logical_xor(call_4572.astype('int64'), relay.reshape(var_4595.astype('int64'), relay.shape_of(call_4572))) # shape=(35, 6)
output = relay.Tuple([call_4565,call_4574,call_4579,var_4580,bop_4596,])
output2 = relay.Tuple([call_4566,call_4575,call_4581,var_4580,bop_4599,])
func_4605 = relay.Function([var_4580,var_4595,], output)
mod['func_4605'] = func_4605
mod = relay.transform.InferType()(mod)
var_4606 = relay.var("var_4606", dtype = "float32", shape = (455, 3))#candidate|4606|(455, 3)|var|float32
var_4607 = relay.var("var_4607", dtype = "uint16", shape = (35, 6))#candidate|4607|(35, 6)|var|uint16
output = func_4605(var_4606,var_4607,)
func_4608 = relay.Function([var_4606,var_4607,], output)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_4639 = relay.TupleGetItem(func_2047_call(), 0)
call_4640 = relay.TupleGetItem(func_2049_call(), 0)
output = call_4639
output2 = call_4640
func_4646 = relay.Function([], output)
mod['func_4646'] = func_4646
mod = relay.transform.InferType()(mod)
output = func_4646()
func_4647 = relay.Function([], output)
mutated_mod['func_4647'] = func_4647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_4674 = relay.TupleGetItem(func_2047_call(), 1)
call_4675 = relay.TupleGetItem(func_2049_call(), 1)
func_3688_call = mod.get_global_var('func_3688')
func_3689_call = mutated_mod.get_global_var('func_3689')
call_4677 = func_3688_call()
call_4678 = func_3688_call()
output = relay.Tuple([call_4674,call_4677,])
output2 = relay.Tuple([call_4675,call_4678,])
func_4698 = relay.Function([], output)
mod['func_4698'] = func_4698
mod = relay.transform.InferType()(mod)
mutated_mod['func_4698'] = func_4698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4698_call = mutated_mod.get_global_var('func_4698')
call_4699 = func_4698_call()
output = call_4699
func_4700 = relay.Function([], output)
mutated_mod['func_4700'] = func_4700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2766_call = mod.get_global_var('func_2766')
func_2767_call = mutated_mod.get_global_var('func_2767')
call_4719 = func_2766_call()
call_4720 = func_2766_call()
output = call_4719
output2 = call_4720
func_4746 = relay.Function([], output)
mod['func_4746'] = func_4746
mod = relay.transform.InferType()(mod)
output = func_4746()
func_4747 = relay.Function([], output)
mutated_mod['func_4747'] = func_4747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3915_call = mod.get_global_var('func_3915')
func_3916_call = mutated_mod.get_global_var('func_3916')
call_4767 = func_3915_call()
call_4768 = func_3915_call()
func_113_call = mod.get_global_var('func_113')
func_115_call = mutated_mod.get_global_var('func_115')
call_4786 = relay.TupleGetItem(func_113_call(), 0)
call_4787 = relay.TupleGetItem(func_115_call(), 0)
func_2403_call = mod.get_global_var('func_2403')
func_2406_call = mutated_mod.get_global_var('func_2406')
var_4817 = relay.var("var_4817", dtype = "float64", shape = (308,))#candidate|4817|(308,)|var|float64
call_4816 = relay.TupleGetItem(func_2403_call(relay.reshape(var_4817.astype('float64'), [308, 1])), 0)
call_4818 = relay.TupleGetItem(func_2406_call(relay.reshape(var_4817.astype('float64'), [308, 1])), 0)
func_4465_call = mod.get_global_var('func_4465')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_4827 = relay.TupleGetItem(func_4465_call(), 0)
call_4828 = relay.TupleGetItem(func_4467_call(), 0)
output = relay.Tuple([call_4767,call_4786,call_4816,var_4817,call_4827,])
output2 = relay.Tuple([call_4768,call_4787,call_4818,var_4817,call_4828,])
func_4834 = relay.Function([var_4817,], output)
mod['func_4834'] = func_4834
mod = relay.transform.InferType()(mod)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4835 = relay.var("var_4835", dtype = "float64", shape = (308,))#candidate|4835|(308,)|var|float64
func_4834_call = mutated_mod.get_global_var('func_4834')
call_4836 = func_4834_call(var_4835)
output = call_4836
func_4837 = relay.Function([var_4835], output)
mutated_mod['func_4837'] = func_4837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1349_call = mod.get_global_var('func_1349')
func_1350_call = mutated_mod.get_global_var('func_1350')
call_4855 = func_1349_call()
call_4856 = func_1349_call()
output = call_4855
output2 = call_4856
func_4857 = relay.Function([], output)
mod['func_4857'] = func_4857
mod = relay.transform.InferType()(mod)
output = func_4857()
func_4858 = relay.Function([], output)
mutated_mod['func_4858'] = func_4858
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4861 = relay.const([[[3.594770,-4.011391,1.848936,0.514119,-6.715621,3.080808,-7.224359,-2.198907,-7.930454,-6.806689,-7.228219,-5.061638,-4.212920,-3.724769,-8.715453,-6.531160],[5.306023,-0.159742,2.037184,-5.312653,8.540023,-3.351651,-6.843357,2.173965,1.010414,6.442377,-8.831246,-7.930985,-4.617721,-2.690930,1.339543,-1.787970],[9.508401,5.356553,-8.603347,-2.294816,5.672928,2.974830,-9.623684,-7.372897,-9.638105,9.179239,-2.774906,6.532894,-8.548380,1.375272,6.282533,-8.564029],[-5.947400,5.613876,6.536043,-6.251387,-1.531810,-4.590780,1.269344,2.027169,-8.913630,-0.813007,-1.559757,5.540863,8.303013,-8.012779,-6.081767,4.650305],[-2.961838,9.878324,3.564392,-4.675670,-9.216762,-4.558614,-2.619647,7.433991,-7.731509,9.177584,-0.433469,0.691187,0.243701,-9.473499,1.129719,-3.177149],[-1.599540,0.586920,-6.169495,-9.575913,5.239092,-3.421111,-4.875926,-3.344839,4.438104,8.822529,3.558142,-3.572405,7.379111,-5.673305,-5.251556,-7.765059],[4.403262,-2.341172,-4.332605,-2.390901,5.544557,3.947298,-6.830701,-0.649614,3.435693,6.141870,3.091688,0.246843,-4.465358,8.331476,-5.752184,-2.132577],[4.886642,0.650411,7.628478,5.964686,-1.470101,-7.697366,4.627416,3.813427,-0.907641,3.376900,-8.337975,-9.480994,-4.718265,9.661589,-8.791494,-3.537515],[8.253094,9.360686,2.207655,4.719792,6.955239,7.811966,9.959599,3.443953,6.995327,1.236361,8.511810,6.193612,7.368557,-2.646597,-7.524141,9.316732],[0.774943,-3.244171,-6.430859,-2.331863,9.718166,-1.965720,-4.382025,-3.464756,-3.073822,7.198882,-9.288894,3.887301,-2.339048,4.056617,1.170563,-9.242968],[7.535683,0.824362,-1.194628,5.186842,9.020920,-8.386552,6.392527,-7.898408,-2.400643,7.997271,-7.014223,-9.952424,-8.046390,8.134896,3.160122,-1.982271],[-8.377558,-3.881329,-9.267152,-7.144624,2.698179,0.010609,5.633165,-4.010641,-1.083658,-6.854016,-9.974511,0.361093,-9.807263,-5.663442,-6.917285,-1.823166],[1.319582,0.014574,-1.269907,7.402054,5.149145,-4.348241,-5.730702,-1.498660,-5.236524,5.633616,-9.162766,-8.977939,3.308448,-1.465911,0.565029,-8.206981],[5.330811,-3.367694,4.172097,2.180752,3.659782,-8.088217,-6.657694,-8.451862,1.078002,1.500330,-4.221921,0.684151,8.684911,9.473139,-5.861916,1.734063],[4.677508,-1.554895,8.079503,4.465901,8.530528,1.027543,0.260526,8.819879,8.325293,-5.932708,-5.344196,-5.918116,2.352662,-1.710033,0.845465,8.209544],[-1.257071,-1.387762,1.116101,-0.440537,0.024164,-3.663202,1.785077,0.405786,-0.205485,-1.731367,9.924534,-5.760761,-0.854364,8.961109,-0.178749,-6.017623]],[[-7.692904,9.067182,0.634198,-9.416153,4.292776,3.320892,-7.018115,4.345298,-0.768204,0.880885,-3.052480,-8.190022,9.881292,9.335818,-4.219167,-6.080926],[-2.895706,-2.570575,8.680190,-9.913380,4.015410,9.410139,-8.533512,-9.870995,-2.569646,6.204300,-3.242603,4.988780,2.424108,8.844814,-2.231236,-2.956655],[3.060371,-6.475253,6.540818,1.467692,-5.338008,1.313700,-2.978226,5.259290,1.998244,0.818403,-3.485480,1.458853,1.771586,6.631889,-6.095384,-4.069111],[-5.841842,-1.307891,5.109124,-8.924026,-6.060192,8.465625,-0.061912,7.005934,0.819617,0.630346,6.403715,1.314389,8.562225,8.617682,-6.950450,-1.187850],[-8.521961,-4.788531,-6.337636,-6.119169,-4.024718,9.972700,-9.555160,3.404848,-8.778935,-4.780731,3.918818,-4.169309,-7.709685,6.748798,-2.932165,-0.311227],[-7.621487,-4.420980,7.305033,-6.249738,-9.357873,-8.333604,-2.591773,-5.279080,-9.305313,5.060230,-3.692475,9.754194,6.301277,4.532352,-3.250127,-5.422144],[1.222818,2.312179,8.490652,-5.443911,-9.842581,1.263788,-1.410653,8.938056,-2.794495,6.691367,-3.609217,4.824534,2.545799,3.047264,-7.867333,-3.226109],[7.241391,9.446109,3.453637,-6.771514,-0.405452,9.077574,-4.187361,-8.523464,8.574848,8.981729,-2.056016,8.107343,-2.467107,4.575559,-8.384094,-8.424189],[4.675685,7.022888,1.992415,-6.891548,3.196510,7.159691,-4.096201,-8.744169,3.733193,-3.068343,-8.451786,7.320573,-0.960741,-8.241977,-4.618215,-1.044734],[-4.528460,4.631297,-5.030782,0.253672,4.963975,6.379243,-1.023505,3.893011,3.541749,9.657236,3.316787,-5.422664,5.319439,-0.467144,4.165440,-9.723068],[-1.076254,-4.863111,9.933847,-8.888224,-2.866480,5.014059,9.070881,-5.376967,-0.353649,9.556754,-3.616815,7.654775,-1.508194,3.678062,8.477978,6.366297],[1.575479,-9.946936,7.827760,3.818337,-1.134566,8.484781,7.645237,-0.810690,4.697871,1.936607,-8.524676,-7.474443,6.927554,-9.634284,1.495836,-6.879496],[3.585941,8.966822,-1.060834,-0.327735,5.540109,-7.127774,3.776093,-5.577382,-9.912457,-1.726417,4.860439,4.661878,1.054318,1.057883,8.240455,6.498322],[-0.694625,-2.350771,-6.398800,7.746261,-9.426144,-3.351076,-7.379590,-5.469060,7.032891,1.592549,7.554166,3.452232,0.731330,3.625213,-3.080483,8.750229],[-2.109887,0.296252,3.354322,-5.574955,2.738005,4.073465,-5.690801,-8.665133,1.469117,-3.738423,0.763734,5.097842,-3.560229,2.136610,1.443512,8.738384],[-2.107043,-1.925064,3.868911,9.496053,-8.561372,-7.001129,9.264750,-1.700972,4.098310,7.217286,-4.116055,1.630077,-8.745163,2.930127,9.189884,9.131213]],[[-8.958381,6.375419,-1.423468,-0.456380,-2.185464,5.039301,0.653209,-8.400325,-9.612383,9.404482,-0.646511,8.213242,-4.277221,-4.887614,7.354121,3.314721],[-6.500441,2.969929,-3.635393,5.605048,4.263107,-0.505996,-2.449732,5.748729,-2.224304,5.216541,8.169995,3.850469,9.636134,6.403620,9.467180,-5.751309],[-7.845058,8.770782,0.871324,8.935796,7.412667,-5.214636,-3.400182,0.284352,-0.881969,4.517347,2.976312,6.572952,-1.573561,-3.911510,-1.776228,4.755156],[-8.348681,6.321608,8.000353,-6.448114,-9.968632,-4.211928,-1.094563,0.401760,-9.984303,-6.567567,-4.193062,0.250198,2.179920,-0.058825,-7.186177,-7.993988],[-8.430973,4.767639,-4.190832,8.661245,-1.860465,7.567233,9.086403,4.073887,2.773576,8.796212,-8.052087,-9.942287,-6.320590,9.440437,1.956759,-8.854291],[5.651573,4.188394,5.137498,-3.355845,6.548550,5.917445,-1.448258,-1.986710,-2.225600,8.689288,-0.592951,-7.604730,4.021347,-0.760635,2.882820,-4.464763],[-6.152948,-9.882975,-1.671075,8.466211,-7.508129,-2.659623,4.453585,-6.646969,2.183861,-1.077578,-7.550570,-2.495670,-6.178175,-0.643648,5.237103,-7.406138],[-2.422430,-6.590680,0.508002,-7.763093,-9.962874,8.419257,-2.696947,1.027625,8.348732,4.486302,6.963085,0.727276,-6.314951,9.857471,2.531289,0.702554],[7.423264,-4.586237,7.596321,-5.297415,-8.910323,-8.704580,-3.965511,-7.639327,6.975937,3.281937,8.470515,0.007499,-8.637319,-9.873219,-5.629617,5.042519],[4.972487,6.123195,9.910163,-1.991893,1.582958,-9.545047,-6.415908,4.518910,-1.944629,-9.797746,-8.491453,-9.516838,5.675651,-2.497595,-9.565194,5.377143],[7.173442,1.006162,-0.414487,-1.400656,-5.702871,3.106252,8.475400,-3.836803,6.238726,-5.115539,-7.257578,-0.985142,1.897994,-6.211225,7.824686,4.124418],[-9.936564,1.348204,-0.018768,-7.685343,-5.103305,4.011537,-6.870083,5.023314,4.184087,0.230978,-4.049968,3.249057,-3.101846,-0.282766,3.299768,9.424204],[-0.718001,-6.782060,-7.835148,6.897576,7.849440,1.155563,-4.136694,1.390681,-1.164240,-5.579335,3.635408,-6.201205,2.035776,5.278148,-2.192929,-4.437456],[5.994200,4.516544,4.581455,-0.624897,1.197972,-3.702062,-8.608788,2.079346,3.396484,-0.099762,3.868337,-5.011203,7.819731,0.403133,-2.065528,-4.864727],[6.017502,-8.180217,-7.829877,4.497047,-3.269512,2.460638,3.418983,0.681680,-9.101211,2.271815,-4.616027,-9.495109,8.877929,2.347594,9.889056,9.589925],[4.902522,4.841792,-1.522093,4.964656,6.542539,-2.248921,-0.803301,7.518730,9.483835,-5.420383,-6.382342,1.595331,2.489336,-8.668295,-9.067634,8.953245]],[[0.875274,4.482534,8.131748,-6.291722,8.991803,7.247719,-9.142853,7.753545,-8.264384,1.958305,-7.156517,-7.968563,3.629130,4.817531,6.877658,7.787892],[7.655351,-2.556067,3.579801,6.630330,3.986801,-5.038693,8.401338,7.788607,-0.697457,8.668992,1.009520,-7.348594,-6.883975,-6.533986,-7.643939,-9.696137],[-3.817580,-3.490109,3.966522,0.813875,-9.654175,-6.198522,9.542634,4.409590,-8.383914,-2.605506,7.638833,-8.573676,-9.299023,9.089636,-3.192633,0.555776],[-1.711843,-9.507602,2.109430,6.981757,-0.590454,-7.951053,2.620961,3.510639,-8.924298,-4.343446,-4.276326,1.946541,0.515678,6.597302,-8.764476,2.030819],[-0.136935,-9.448892,8.975350,3.026871,3.480421,5.466702,-3.758946,-9.910752,-4.108203,-9.520647,0.559262,-9.486779,-8.927103,-5.393756,-7.269191,4.218748],[1.030022,-0.825698,7.119550,-8.816998,6.350162,-4.515867,-3.312675,-9.728000,6.348243,2.533968,-9.576145,1.513929,2.364546,0.803033,5.993436,-5.421007],[-9.849823,2.764874,3.196469,-7.030814,4.541737,-8.915012,5.671262,0.261510,2.946645,2.250566,-0.098781,-7.759755,-6.042113,0.667684,-0.166432,5.315041],[-5.353590,3.778217,-5.603641,3.425286,-5.901052,-3.912686,-8.039431,-2.595359,-1.710612,-2.315647,-2.987197,2.639608,-6.284406,7.830524,-3.312077,-6.448573],[5.696623,-4.238754,9.865276,-8.507093,1.509501,-1.838985,-0.843299,5.447591,-1.001241,2.187556,-7.970642,-6.341126,0.307534,-0.857497,-4.285074,-6.280679],[-6.103387,6.220701,-9.593024,6.115652,-0.023836,-3.206007,-1.078074,-5.991554,4.375141,8.670498,-1.518484,-4.461326,0.408851,4.618990,9.665001,-6.574509],[8.050989,-8.770952,9.481190,2.236347,2.529651,-9.423314,-0.674973,-5.551513,-2.479485,6.115541,7.527051,-1.418788,-7.763419,-1.885577,1.583006,3.109562],[1.654360,2.531933,8.248141,-2.330937,-7.296175,-8.159970,1.239069,-9.283708,2.371389,-6.828522,0.211666,7.098975,4.402769,-0.633189,-6.322843,5.937735],[3.469781,-5.157048,9.974301,4.040995,5.669942,-7.710114,-5.221497,-8.650834,4.167811,0.549365,8.646484,-6.722608,-1.406740,-2.509501,2.701324,-5.380060],[-2.065669,1.448062,-8.101593,1.720664,4.252502,-1.559358,-1.678394,5.244796,-4.236200,-2.082141,6.033326,-9.158719,3.015876,9.296121,-6.468141,5.502987],[-4.477539,-7.878542,8.694633,9.653281,-5.320272,6.413437,-9.159491,-9.806115,4.370514,2.385620,5.302409,-0.940946,-7.999414,5.891071,-1.108377,2.363930],[-3.544417,0.399068,8.001155,-4.167578,-4.211688,-1.517672,-6.685617,5.908829,5.885223,-3.830703,-8.827766,-4.504466,-3.880164,5.601574,-0.732805,-6.660329]],[[5.177232,1.413715,-3.745030,-8.549600,5.765321,3.785671,2.220489,1.381995,6.409605,0.423739,-6.292081,-5.672972,-2.763524,9.295243,-0.647316,8.443329],[2.878947,-0.860844,-0.482564,6.942561,0.855070,8.325400,9.524226,-1.262106,-6.463134,7.506058,7.436470,-8.672049,3.717014,-9.452280,9.830101,0.456364],[-0.242459,-8.271925,-6.173519,-9.846701,-6.197032,-7.325929,-9.257334,8.155671,6.399052,-9.688675,-3.612314,-7.212624,-9.945819,-2.874026,-7.800134,7.869092],[4.882245,8.722718,6.146096,-0.790016,8.530475,5.166809,2.562189,-4.983341,9.040767,5.714533,4.106501,-4.881034,-0.694975,2.516738,-2.819832,-3.367316],[-2.004336,-6.624444,5.639017,-9.693529,2.624021,7.990359,-1.553309,5.167898,-1.904517,9.088671,-7.310706,4.481858,-3.390251,4.018260,5.681715,5.647085],[3.140059,5.537693,-3.701497,3.841860,-6.725421,-8.984144,1.723364,-5.490514,-6.548635,5.192126,9.855397,5.613698,-8.384026,9.772880,-1.452996,7.299219],[-8.666885,6.601603,-5.051125,-4.681932,5.946863,0.628770,4.582784,-1.261736,-2.816825,-6.753812,-2.234148,6.445650,2.958398,0.349707,4.818710,9.544208],[1.670020,-8.826180,-9.318316,-8.931301,4.859204,-1.865872,-0.520459,-0.640074,-4.349949,-8.693377,1.034497,2.167142,-7.957504,-9.032891,-2.771755,6.596965],[-0.412664,2.715854,3.838473,-5.876767,-8.928292,1.578797,2.938717,2.775199,-0.335356,6.228524,6.524271,-0.381327,3.332022,-6.129889,4.727774,3.343885],[3.414453,-6.519497,9.776396,-8.623649,3.068779,-4.935875,3.209125,-4.328229,0.203549,7.854044,2.415023,5.096399,8.371247,-9.709452,2.749898,-6.252420],[-5.916194,1.613656,-1.260051,1.941527,0.531301,-6.678462,9.652980,0.845109,-3.311326,-3.755508,-7.298143,-7.235095,0.444254,-9.412521,1.829265,4.636342],[3.187483,7.167968,-7.151066,5.800546,-8.478120,7.772843,0.945750,-9.470649,2.457930,7.968456,-5.418722,4.574511,-9.451119,7.786984,4.504171,6.820800],[4.369464,-3.471474,-5.405017,-7.192960,2.757027,-5.541979,-1.582241,7.985600,3.545246,0.578532,-2.768514,4.517168,6.352236,-8.828203,-6.371435,8.524788],[-8.606864,2.501405,-5.292041,7.493776,8.130806,-3.251740,6.015913,-8.927495,-1.465106,-8.298138,-9.495606,2.589518,-5.924662,-3.823479,2.608407,2.050172],[3.646359,-4.449745,-0.080410,-3.315632,-2.632604,6.637040,-9.753592,-9.807335,7.608611,0.223033,1.893006,0.422695,1.384103,-1.927785,-4.188117,-4.514092],[-0.809946,8.069121,6.427385,3.155766,-4.106373,9.870781,-0.754004,8.673458,-7.712203,6.742958,0.995371,-4.640590,5.040099,1.377965,-5.277287,4.911281]],[[0.400899,9.819235,-4.324193,-1.124533,4.804696,8.380458,1.760279,9.773242,-7.711199,5.825697,-6.419415,-0.407516,-5.359987,1.247582,0.370828,-4.210660],[6.838306,6.179896,-6.423778,-4.486042,3.701979,2.433647,-1.371221,7.546354,9.689088,-7.314520,-6.247604,2.289735,-3.504271,3.867708,-1.548044,-1.645358],[0.689400,3.318513,0.491952,6.938439,-5.136852,-6.601432,8.717826,5.332684,-3.415096,-6.291171,-2.488819,-1.737280,-1.600907,-3.818346,8.313203,-2.641487],[5.347697,-6.352714,6.537526,2.829597,-7.604229,-1.530534,1.456807,-4.531033,9.632167,-0.736859,5.832738,0.464548,-9.446759,-4.436208,-6.760811,-4.166913],[-2.349541,3.420101,-7.013376,7.051748,-1.355051,2.831464,0.573481,2.123096,-7.297219,-5.325994,-8.138882,-5.963160,-5.562497,-2.963592,2.505905,-5.125949],[6.408093,-4.489209,-9.984294,-3.988064,9.143003,9.465276,-3.483281,-4.205716,-1.127979,-6.531416,-3.888305,-8.231890,3.740376,9.875631,0.598670,-3.529380],[5.922081,4.776355,1.381412,-4.352234,2.292485,3.300367,3.251208,-3.941598,6.323676,-4.325809,8.303087,-7.860989,-1.743046,-8.899599,5.310368,-3.679857],[4.246127,-4.848662,-5.345245,3.396976,-5.088938,6.982826,-3.413651,-8.735024,-9.705279,2.543087,6.881466,-9.234415,-9.423364,4.387746,1.702246,-1.644779],[5.918372,8.651906,-7.328341,0.586616,-4.098994,-5.251000,9.442772,-1.828205,8.909181,2.448943,3.226794,-0.754834,-1.407553,2.581553,-3.455351,-7.688128],[-2.211201,5.174181,5.216763,-0.824443,4.512849,-2.484907,7.282004,-5.944152,7.603865,7.075191,8.865076,-5.262767,3.237443,0.789831,4.170045,-3.245323],[-5.367230,-4.515186,-7.280703,5.664087,2.192790,-1.370525,-5.299484,-5.655186,7.177788,-8.098390,5.413937,-1.958040,-8.680584,-7.630051,-7.362496,0.129313],[-0.612990,-9.852785,-2.307101,-2.453874,9.875371,-3.967330,5.371810,2.327756,-3.712522,5.479452,-4.495380,4.773348,-6.080495,1.471967,-9.177748,0.210175],[-6.499086,0.649968,7.908421,8.522558,0.720014,-7.756238,-5.112272,9.912652,0.340988,-8.315618,-6.153692,-7.844023,-8.847871,5.936497,-1.897438,3.660366],[-6.914719,-1.812107,3.164656,0.605522,6.002718,9.729891,3.141729,0.045703,-5.218538,4.464837,8.210927,4.213607,6.253268,-3.404170,9.094151,-2.464799],[-9.903433,5.976053,-3.329160,-5.177370,-7.101223,9.498480,-0.987105,-6.575973,6.710963,-3.227607,0.838976,-1.346013,-2.643020,-3.631900,-4.700099,-3.240494],[1.919961,-9.201005,-1.878355,-8.437702,9.301462,-1.566937,-1.820089,-9.923403,-5.537977,-9.647751,-2.638006,-6.151480,5.115241,-4.125153,-5.062034,-8.278005]],[[-9.143572,7.840936,-1.538699,7.775620,-1.385096,2.209390,-3.181791,-2.279352,-4.118530,-2.721639,0.014370,-0.057252,6.912968,-3.806910,8.998794,-4.443628],[-9.670914,-9.683805,0.762937,-0.064842,0.525678,-8.845738,5.943611,4.229202,8.503522,-1.568859,-4.348035,1.248124,7.197185,7.290839,-3.992311,-8.825827],[-3.089033,2.437120,-0.323316,7.006228,-4.906393,1.443919,-4.991316,0.381301,-1.721310,-2.209353,-8.772982,-0.538590,3.214015,-3.319532,0.142843,-1.512824],[5.897655,1.663401,7.186821,-4.884505,-2.865639,3.403046,-8.591445,-4.987075,-6.471998,8.077363,-8.056014,-1.723865,-3.717995,-0.385100,6.981633,1.245778],[-6.281687,-3.195974,0.283186,6.988719,-9.019310,-9.327888,-4.476772,5.703902,2.399359,2.619258,8.110018,1.589855,3.537714,7.696523,3.065469,8.746460],[-0.758437,2.391474,-2.238439,2.494610,-4.037817,6.460634,1.228557,5.087556,-5.538701,-4.122891,5.743323,9.104871,5.013308,0.132446,5.847279,0.960719],[9.054103,3.825081,2.499953,-9.864743,-4.850140,-0.164295,4.718198,-3.936494,5.998353,2.007404,-7.437267,1.903319,5.110937,-9.913747,7.921268,-2.554624],[8.666423,0.654565,3.417970,-0.718254,0.328960,3.924331,-8.466381,-7.385166,-5.855926,-3.806195,-8.006837,1.143388,5.465106,-9.811762,7.986670,1.035499],[-9.411178,1.861314,-9.020600,7.253160,8.097654,-6.316124,-5.448396,9.702041,-1.880065,-5.366511,6.829077,5.579710,8.503009,6.700411,-4.896913,9.534268],[8.646561,-9.206075,-7.840075,-2.552323,-7.925951,-7.076349,1.542090,-6.459587,0.417799,2.016862,-1.561980,8.189868,-9.087796,-3.608699,9.753357,-0.984152],[-8.700285,3.509522,-1.592909,-2.114274,-0.073594,-3.278966,-8.602555,-4.212810,8.959471,-4.791794,-0.417298,5.756728,3.240856,1.944558,-9.588590,7.767968],[2.766945,9.550003,-9.116628,-2.045729,-8.791790,8.499595,2.419897,3.247260,4.433437,-6.535444,4.627809,-9.637578,6.058240,-6.045714,6.208652,1.957370],[-6.363470,0.639327,-1.590894,8.856498,-2.094556,-9.455011,-9.328802,-5.181001,0.617494,2.105530,-2.282328,3.679901,-7.542516,3.675425,-1.666362,-4.556607],[-6.775713,2.684472,3.003893,2.204575,5.956638,-1.605817,2.511736,1.032668,2.259786,-6.174374,2.411399,-8.229657,2.776787,6.551534,-8.260092,-3.116469],[3.652902,7.906333,-6.761009,-8.141088,-8.801009,-5.496318,0.829541,5.165902,-1.751457,9.064884,0.049786,1.605603,1.931427,-9.322984,-4.445676,-3.711412],[0.322051,6.029658,7.660938,7.480486,-6.909255,2.677207,-9.913229,-6.160023,-2.460902,-8.099864,4.095192,-5.052716,-3.576879,-0.194150,7.201038,2.544614]],[[0.678817,0.483987,-0.444452,-7.972623,-8.105493,7.255465,-3.232647,2.845321,7.957461,8.591247,-8.589411,9.125541,-8.381781,7.696846,9.470531,-7.596968],[6.133240,1.674890,8.216567,-8.350574,2.163631,-9.994211,-5.602079,1.485947,0.372803,-3.905913,-6.022777,-0.933399,-6.628193,6.432645,-1.174417,-7.594343],[8.514118,-8.525394,2.855501,-5.582579,-5.327640,9.917692,-3.063492,-4.685452,4.117474,7.867112,-2.201148,-3.151086,-7.468333,-3.836051,-8.966116,-2.998831],[-1.538950,-3.422363,-5.730824,7.509293,5.435844,8.479877,8.501963,7.523581,-1.241613,-4.207787,-6.541932,1.243877,-1.414666,-5.805733,-0.017114,-5.842616],[8.726110,0.068072,0.415569,-9.615443,5.577306,1.969142,2.679278,7.645303,7.209796,-7.934596,-7.954763,-1.635672,-4.000277,2.749901,-0.613494,6.165895],[-0.375373,8.594752,1.539611,-7.524274,4.811040,1.610609,-6.097237,-7.124259,2.641118,-0.825868,5.474872,-6.736807,9.765337,-3.125610,-1.968912,0.230173],[-3.377896,-8.842728,-0.854735,-8.725124,-8.569092,-5.573104,-1.357290,2.865136,9.395740,-7.871556,-1.512254,-8.767450,-1.986638,2.020822,8.698448,-3.089136],[3.783418,3.400689,8.574883,1.678077,-7.938240,6.699542,9.936403,-8.406832,-4.197702,8.797432,5.659480,-0.931821,-8.283306,-3.297352,-7.024507,-5.221630],[-6.869258,0.223592,6.854922,4.270827,-4.640170,9.828832,4.857895,-7.713216,-9.005783,8.255450,-5.267646,0.055351,3.789041,-0.742206,-6.006713,-7.006393],[-4.165774,6.134521,-3.680390,4.419162,5.035351,-1.368418,-3.477070,-2.035444,-0.383861,2.535248,3.898050,-4.752024,-2.993265,-6.528962,3.840971,0.682015],[-6.969261,9.748144,-0.858815,7.678851,5.577319,-8.384208,-8.568086,-8.885189,-8.312806,1.524949,1.833732,3.089688,-3.354828,-8.611354,-1.455878,-0.602717],[-0.672787,8.986098,-4.139527,-6.083956,5.504904,-3.167172,2.545642,-7.083431,-6.887281,3.834724,1.617692,3.230340,-1.069210,4.449184,-5.870946,3.088255],[-6.072859,2.680743,5.419666,-0.491845,-4.663723,6.385560,-0.696325,-3.058021,3.108906,-6.024365,-4.436427,3.914176,1.788315,5.603641,-5.168250,5.340134],[7.315479,9.495163,-2.965069,5.094000,-9.998232,0.712060,0.359488,9.841121,2.086437,8.785980,-9.107813,0.510303,-3.341315,5.643365,9.063385,5.929902],[6.434456,-1.663224,-1.269260,-5.661897,-5.135033,7.188334,9.403444,-1.483160,-2.824778,-3.720691,-7.465417,7.242794,-6.008260,7.841160,5.496762,5.149362],[-4.096310,-9.541914,0.217731,7.896249,-3.715876,9.188536,-4.400054,7.553745,-5.197592,7.762661,1.782909,2.291811,1.815845,3.894904,5.903921,0.229395]],[[-7.836268,-7.400405,-8.500261,6.335411,7.867287,2.914819,2.054980,-4.180891,-3.194350,-6.190439,-7.225886,-2.527989,4.230586,-6.388908,-3.735127,-0.978023],[-6.913024,-3.370831,-0.351400,7.776593,8.437853,2.356174,3.369100,-2.798861,4.904326,1.701189,-9.587576,0.452754,-3.054934,-5.030102,2.663692,5.489737],[8.082247,5.208022,-2.930418,0.825310,5.587182,-2.940255,6.138762,-6.225683,6.306845,-6.371588,9.092139,8.443251,-9.614692,-4.512154,-9.524796,1.048562],[-9.565644,-7.953790,4.766210,-3.511606,-2.722472,-8.612199,6.454761,0.867594,-8.388333,-7.232242,1.776046,4.365257,6.748673,-0.081506,-5.818738,8.353472],[-3.592629,4.089750,-4.987190,-7.477559,-8.965561,-5.320672,8.026455,-4.915687,8.103217,-8.068324,9.210392,-1.147488,5.481260,-7.565016,-1.176710,-9.976934],[2.179482,4.709431,4.702099,2.893587,-5.923166,5.102173,3.113380,8.602428,-7.174106,8.220392,-2.039108,-5.154675,-2.020214,1.368833,4.220486,1.636533],[0.596590,-4.490672,-1.638852,-4.035378,3.321335,5.542619,4.597174,7.183325,-3.513932,9.282777,5.306426,-0.303189,4.406078,-9.672834,-9.311396,1.785997],[-4.276731,-8.173866,4.070640,7.221882,0.469194,6.309269,-8.831530,-5.625296,-6.226112,5.253078,-1.054178,5.116952,2.204182,-8.421694,-3.012925,1.815698],[8.184218,7.570590,-6.535198,2.615696,6.551364,-7.068281,4.039792,-4.141322,4.882290,7.835153,-3.214599,6.647076,8.672246,2.479902,6.327566,-3.993806],[-5.981660,-4.055335,1.916054,-6.309448,-1.381666,-9.546996,-7.149364,7.279500,-3.842390,1.129856,-5.928869,-5.209482,-4.421871,2.115456,-9.825943,-8.190908],[2.602507,9.472461,-7.613344,-4.262311,-7.283435,-9.443487,7.638507,-1.911884,1.649887,-8.576362,-9.131012,2.346744,-0.856013,7.132406,-6.695990,-6.336329],[-2.416479,-1.821237,9.452481,2.482220,2.612250,-6.632734,-2.540094,-8.523037,-1.504422,6.149468,2.662062,4.958562,1.207846,-5.001914,-3.302729,9.494845],[-9.376853,7.060370,-2.644778,-3.686601,4.448133,0.184795,6.333532,8.795033,-3.510572,6.731479,7.681079,-0.190737,9.361311,-6.310915,9.303619,-0.983607],[-2.093872,6.199265,-2.663984,-1.177537,0.689700,4.640174,-1.093246,-3.445623,3.120460,-8.507249,4.813255,4.518397,-8.985542,-2.707688,-5.870902,2.390680],[3.517800,0.169301,-5.773287,8.453898,6.629060,2.569165,2.698790,7.760694,8.645156,2.041204,-0.470615,2.967644,-8.719339,-9.555314,-9.082289,1.990292],[-9.656601,1.120620,7.336716,-9.291931,-1.256783,-8.139140,-1.674884,-1.646940,3.158187,-3.592946,7.882466,-2.292254,4.735847,-9.328482,3.859536,5.671312]],[[-6.345719,-6.763529,3.259444,6.070883,-2.756569,7.725417,6.827753,-8.042705,2.647586,-5.756976,-6.998072,6.310564,5.692047,0.221943,6.281651,-8.605606],[-3.933252,1.257053,-1.850299,7.405138,-2.676260,7.386502,-7.311185,3.866327,-9.564132,-3.062049,-9.212278,-0.778141,0.214373,-6.066970,7.502796,9.922414],[-6.293774,0.958185,4.769569,5.664604,-8.974891,6.319679,5.349843,-7.729892,-5.507718,-5.186573,-9.713811,-6.742184,3.877734,1.402873,5.454513,-7.219241],[5.518281,-2.321334,-0.869578,1.151500,-1.422330,7.403862,1.532945,9.199842,8.430829,-7.964369,3.265174,2.311354,-7.293199,0.309597,7.790919,1.341993],[8.204235,5.729352,7.959926,-2.931801,5.682210,7.265043,-5.600605,-5.932403,5.766242,7.415877,2.747146,5.588100,2.973656,-6.939513,-5.667677,-7.349600],[5.612156,5.688467,-1.498393,3.863036,7.795446,-2.348731,8.727890,1.548404,8.437099,3.121486,-2.232498,-3.034515,2.335814,-8.493063,-8.731450,-9.925972],[7.719610,4.514566,2.900448,7.687096,1.996989,-8.387666,6.247522,8.953194,0.775763,5.827306,3.456023,7.471337,-1.762114,-9.755604,-1.894178,1.494457],[-1.942535,8.608743,2.752816,5.868566,-0.819812,8.529206,7.219587,3.678702,-4.873198,-9.018285,-4.667384,-8.456824,-5.762638,-5.807668,7.109423,-7.206973],[-5.915770,-0.482703,-9.065559,-0.119859,5.605483,-2.704134,9.259718,2.809925,4.362216,0.394618,-8.036294,-6.346428,4.330530,8.238727,-5.033881,-0.974785],[-1.764763,-1.595175,-5.633598,8.571264,1.127899,9.259432,1.285458,-6.916210,-6.621163,0.045497,0.382866,1.089513,-5.260582,-7.174704,-5.138398,9.298130],[1.251696,-1.818737,-9.069819,9.254138,7.879694,-7.828595,-9.532516,0.219426,5.181041,3.056913,2.228046,6.833217,8.790127,-3.269647,-3.131640,-5.506259],[-7.578853,-4.182860,8.439699,-2.346116,-8.641486,3.249698,1.540454,2.075588,0.808968,8.422530,-4.577204,-6.602457,-0.893295,1.805802,-0.202450,-4.504788],[-2.197719,-3.159009,0.559253,0.682667,1.153065,-6.414232,7.665658,3.000325,-3.906764,9.847805,6.548825,-2.085521,0.908225,5.993035,-8.806880,-4.590004],[-6.639945,-7.641890,1.547071,5.195348,-2.850744,3.366712,4.746009,4.090799,7.026786,-6.595865,-1.583637,6.290797,7.058107,-4.656580,-8.949701,-5.261699],[8.570343,-3.801326,-1.021619,8.972338,1.617109,4.296782,-1.801938,-6.049794,5.579724,-1.960803,-3.017838,7.712119,-0.024369,2.895431,-4.098335,8.744091],[-4.673080,-6.179438,2.738438,1.282245,-1.874120,-3.580697,1.958595,9.034814,3.105179,7.801463,0.848739,8.892771,-6.962548,-8.034537,7.059189,-6.245267]],[[-3.463097,-3.728552,-1.429743,-6.910457,-6.264967,5.789717,-4.136972,6.176915,5.329356,3.792649,2.146047,-7.947653,5.334217,7.418038,4.680352,-8.184383],[-4.521282,2.241379,-3.783888,-5.293601,-5.556492,4.019519,-9.887919,1.946056,1.872754,-9.709294,2.574647,-4.422766,0.353627,6.153727,0.008719,-3.790354],[1.212632,-8.323642,-0.512751,-2.534880,0.268846,2.990424,-5.579072,5.421367,1.687370,2.006879,-6.558201,7.003072,5.672405,-4.151382,-7.045017,-9.300386],[5.559719,8.417511,1.142235,-7.140039,8.423111,-9.608363,-7.219068,4.702904,0.209489,2.484797,-8.797486,-4.803305,0.904850,-0.038625,4.322275,9.562657],[-4.462525,-0.302967,2.437991,-8.439818,-8.886836,-9.582307,-2.474213,-0.777567,-7.802797,1.700543,-8.840349,-7.888740,3.399670,4.968017,-1.828276,2.517181],[-6.181613,-0.676584,-9.319651,-6.950973,-6.699173,-8.265129,6.018278,-9.530709,-5.487407,-7.660024,8.799852,-9.625048,-0.112153,-0.998098,5.671757,2.845310],[0.687612,7.620608,-3.264133,6.395634,-7.577092,5.815615,-7.432115,-6.459898,3.548384,-7.915425,9.617289,0.429631,-0.987418,-2.380756,5.857209,5.264239],[-3.911533,1.672611,1.737178,0.913676,-6.058012,6.138673,-4.949163,9.099836,-3.500716,7.941093,-3.965628,4.354630,-3.651352,-9.574374,5.084064,-6.522706],[-0.351108,-0.203006,-9.905290,-6.574363,-2.850103,-3.266066,9.283814,7.160714,9.853367,9.716321,9.060666,-0.737128,7.011605,-7.966530,9.959752,-5.402541],[-9.907927,9.674716,-7.178058,9.186687,2.470018,2.618559,8.291620,-7.699836,2.993338,-5.579383,3.045486,-5.005519,-2.246402,6.259430,-6.463350,8.002783],[5.304594,7.272453,-9.678792,-9.884199,-1.510348,-8.956759,-6.232323,-2.520082,4.240333,6.515830,-6.917794,5.123343,-5.362840,-8.854221,-7.332534,9.214331],[-5.844416,7.532460,9.059294,-7.267636,3.121045,1.400870,4.378247,-2.099161,-9.477550,4.171430,5.546378,7.153884,-9.327032,-9.210101,-6.299201,-7.072701],[7.116619,0.310452,7.948650,-1.068501,6.425932,3.887775,-3.937475,7.687253,8.802687,9.834820,8.945802,-6.996974,-5.121087,-3.313549,-1.625329,2.869972],[-0.155992,-8.231864,-3.921321,-5.472409,-7.227832,-8.512612,7.695297,3.933290,0.712569,-3.576539,-1.026729,-8.788920,0.686315,7.296060,1.249349,0.784839],[4.132243,2.697769,0.845529,1.852343,4.957898,-1.424850,4.653787,9.064067,-1.916135,1.082595,-3.569133,3.982556,-2.088397,7.555417,2.210032,7.931971],[-0.998689,-0.594193,5.325680,7.751017,7.852683,0.861341,-2.616208,9.724536,-5.764182,1.006334,-8.188356,5.965383,7.834217,-2.500834,4.834607,7.026771]],[[7.073832,8.697551,-1.352311,0.533028,-5.944927,-1.735032,-5.573687,8.656234,1.880028,8.434596,1.268446,-5.185807,-8.332937,4.939026,5.178538,3.311764],[-6.568062,6.678246,-6.483010,7.100008,8.318049,7.538992,0.500530,9.220588,3.145870,6.939607,1.737332,4.029809,-8.154040,2.322111,8.026859,-3.123774],[-2.522529,-8.507689,5.437909,1.470124,-0.490498,-0.586801,-1.838966,-9.524360,-8.297097,-2.551234,9.736859,2.106662,7.667521,8.901671,-2.613157,-9.297040],[4.455901,5.118648,-7.915347,-6.443257,1.007221,8.910818,-0.723832,2.170029,2.883921,-7.649222,0.188065,-7.494499,-3.418147,5.081076,-9.567485,7.615927],[8.737732,-0.587799,-5.964209,-8.555009,1.752108,1.856639,0.646997,-1.839245,-5.411707,1.797996,6.405873,-8.573117,-6.131310,-0.605873,-8.702418,-0.503947],[-2.067194,8.761516,4.369083,-5.182244,1.624397,-6.898327,-5.668551,0.297095,4.219182,-6.143827,0.042979,2.130765,-8.590304,-3.252096,3.849008,-3.207364],[8.795338,-1.250544,5.790959,5.142667,-4.282777,2.613517,-9.286557,-5.658582,-3.224055,-2.296129,9.620546,7.865159,7.972549,-1.794170,-6.681148,-0.951916],[8.234572,5.084969,0.090007,2.005129,-9.663755,-7.512837,-6.349521,0.751245,2.263467,-0.389677,6.921826,1.504464,3.162988,6.596285,-1.104973,4.618640],[5.643088,7.285559,1.567045,-8.718231,0.187489,-2.914847,5.698885,-2.410356,-1.346752,-8.024490,-0.435587,-0.917072,4.058716,-5.516529,-7.837841,1.121709],[-1.695036,-9.809621,-2.637073,1.448378,-7.432169,9.638162,2.601394,-8.310609,-6.480155,6.143625,-9.613557,-1.314372,-8.589210,-2.768647,-7.818325,-1.926840],[-9.061020,-7.652087,7.584379,-6.427181,3.664335,-1.140696,-8.151908,-3.845774,6.464909,5.893741,-9.860443,2.074928,-9.824912,9.650494,-4.296529,5.918680],[-1.035812,6.059304,-8.141434,9.890512,8.373199,-0.132613,6.085526,-3.354898,6.111385,-4.487511,8.969079,-1.530284,7.913823,-7.206103,2.514882,-2.264648],[9.114167,8.708924,-5.140515,4.534230,-5.521931,5.674819,2.563184,-3.066819,5.234012,-7.597987,4.586154,6.571284,-5.460688,-1.568742,6.523398,0.736246],[-8.008692,-7.156835,-8.645986,-3.298538,-5.669108,-1.179280,4.460450,-5.959030,9.599311,8.853996,8.028297,-0.638201,-6.942608,2.290489,9.323025,-7.143973],[9.938854,-1.795107,-0.201051,6.200749,-0.015563,-6.066303,-8.682585,6.668866,2.383958,-1.665466,4.166553,-8.991365,1.113233,8.088397,7.903410,-7.781567],[4.552784,-9.830287,3.924068,-6.780857,1.749310,6.594265,7.035996,1.344521,2.059004,7.841538,-4.581734,-7.434641,9.541229,7.899766,6.269701,9.015028]]], dtype = "float32")#candidate|4861|(12, 16, 16)|const|float32
var_4862 = relay.var("var_4862", dtype = "float32", shape = (12, 16, 16))#candidate|4862|(12, 16, 16)|var|float32
bop_4863 = relay.power(const_4861.astype('float32'), relay.reshape(var_4862.astype('float32'), relay.shape_of(const_4861))) # shape=(12, 16, 16)
var_4871 = relay.var("var_4871", dtype = "float32", shape = (12, 16, 16))#candidate|4871|(12, 16, 16)|var|float32
bop_4872 = relay.subtract(var_4862.astype('float32'), relay.reshape(var_4871.astype('float32'), relay.shape_of(var_4862))) # shape=(12, 16, 16)
output = relay.Tuple([bop_4863,bop_4872,])
output2 = relay.Tuple([bop_4863,bop_4872,])
func_4880 = relay.Function([var_4862,var_4871,], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mutated_mod.get_global_var('func_4880')
var_4882 = relay.var("var_4882", dtype = "float32", shape = (12, 16, 16))#candidate|4882|(12, 16, 16)|var|float32
var_4883 = relay.var("var_4883", dtype = "float32", shape = (12, 16, 16))#candidate|4883|(12, 16, 16)|var|float32
call_4881 = func_4880_call(var_4882,var_4883,)
output = call_4881
func_4884 = relay.Function([var_4882,var_4883,], output)
mutated_mod['func_4884'] = func_4884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
call_4903 = func_171_call()
call_4904 = func_171_call()
output = relay.Tuple([call_4903,])
output2 = relay.Tuple([call_4904,])
func_4915 = relay.Function([], output)
mod['func_4915'] = func_4915
mod = relay.transform.InferType()(mod)
mutated_mod['func_4915'] = func_4915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4915_call = mutated_mod.get_global_var('func_4915')
call_4916 = func_4915_call()
output = call_4916
func_4917 = relay.Function([], output)
mutated_mod['func_4917'] = func_4917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4954 = relay.var("var_4954", dtype = "uint8", shape = (16, 4, 2))#candidate|4954|(16, 4, 2)|var|uint8
var_4955 = relay.var("var_4955", dtype = "uint8", shape = (16, 4, 2))#candidate|4955|(16, 4, 2)|var|uint8
bop_4956 = relay.less(var_4954.astype('bool'), relay.reshape(var_4955.astype('bool'), relay.shape_of(var_4954))) # shape=(16, 4, 2)
output = bop_4956
output2 = bop_4956
func_4966 = relay.Function([var_4954,var_4955,], output)
mod['func_4966'] = func_4966
mod = relay.transform.InferType()(mod)
var_4967 = relay.var("var_4967", dtype = "uint8", shape = (16, 4, 2))#candidate|4967|(16, 4, 2)|var|uint8
var_4968 = relay.var("var_4968", dtype = "uint8", shape = (16, 4, 2))#candidate|4968|(16, 4, 2)|var|uint8
output = func_4966(var_4967,var_4968,)
func_4969 = relay.Function([var_4967,var_4968,], output)
mutated_mod['func_4969'] = func_4969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_4980 = relay.TupleGetItem(func_4011_call(), 0)
call_4981 = relay.TupleGetItem(func_4013_call(), 0)
output = relay.Tuple([call_4980,])
output2 = relay.Tuple([call_4981,])
func_5006 = relay.Function([], output)
mod['func_5006'] = func_5006
mod = relay.transform.InferType()(mod)
output = func_5006()
func_5007 = relay.Function([], output)
mutated_mod['func_5007'] = func_5007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_535_call = mod.get_global_var('func_535')
func_536_call = mutated_mod.get_global_var('func_536')
call_5016 = func_535_call()
call_5017 = func_535_call()
func_1328_call = mod.get_global_var('func_1328')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_5042 = relay.TupleGetItem(func_1328_call(), 3)
call_5043 = relay.TupleGetItem(func_1329_call(), 3)
output = relay.Tuple([call_5016,call_5042,])
output2 = relay.Tuple([call_5017,call_5043,])
func_5053 = relay.Function([], output)
mod['func_5053'] = func_5053
mod = relay.transform.InferType()(mod)
output = func_5053()
func_5054 = relay.Function([], output)
mutated_mod['func_5054'] = func_5054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
call_5075 = relay.TupleGetItem(func_21_call(), 0)
call_5076 = relay.TupleGetItem(func_23_call(), 0)
func_1989_call = mod.get_global_var('func_1989')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_5102 = relay.TupleGetItem(func_1989_call(), 0)
call_5103 = relay.TupleGetItem(func_1991_call(), 0)
func_706_call = mod.get_global_var('func_706')
func_708_call = mutated_mod.get_global_var('func_708')
const_5127 = relay.const([[7],[7],[10],[-2],[-6],[-9],[-4],[10],[-5],[-2],[-5],[-3],[7],[-1],[-8],[-7],[2],[4],[3],[-1],[8],[-5],[-5],[10],[3],[1],[3],[4],[-5],[-8],[-3],[7],[-3],[9],[6],[-7],[8],[-9],[-7],[4],[-5],[8],[2],[7],[7],[10],[2],[-7],[-10],[-1],[6],[3],[9],[8],[-2],[-8],[1],[4],[7],[1],[-7],[-8],[-10],[-2],[-1],[7],[10],[-3],[1],[-7],[-4],[-10],[10],[-8],[-5],[5],[-2],[1],[-7],[-10],[-7],[-6],[-4],[-7],[10],[8],[10],[1],[-3],[-7],[10],[10],[-4],[-1],[5],[9],[-8],[-10],[6],[9],[-3],[2],[-6],[3]], dtype = "int8")#candidate|5127|(104, 1)|const|int8
call_5126 = relay.TupleGetItem(func_706_call(relay.reshape(const_5127.astype('int8'), [104,])), 0)
call_5128 = relay.TupleGetItem(func_708_call(relay.reshape(const_5127.astype('int8'), [104,])), 0)
func_4489_call = mod.get_global_var('func_4489')
func_4491_call = mutated_mod.get_global_var('func_4491')
call_5130 = func_4489_call()
call_5131 = func_4489_call()
output = relay.Tuple([call_5075,call_5102,call_5126,const_5127,call_5130,])
output2 = relay.Tuple([call_5076,call_5103,call_5128,const_5127,call_5131,])
func_5133 = relay.Function([], output)
mod['func_5133'] = func_5133
mod = relay.transform.InferType()(mod)
mutated_mod['func_5133'] = func_5133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5133_call = mutated_mod.get_global_var('func_5133')
call_5134 = func_5133_call()
output = call_5134
func_5135 = relay.Function([], output)
mutated_mod['func_5135'] = func_5135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mod.get_global_var('func_1328')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_5214 = relay.TupleGetItem(func_1328_call(), 3)
call_5215 = relay.TupleGetItem(func_1329_call(), 3)
func_4413_call = mod.get_global_var('func_4413')
func_4414_call = mutated_mod.get_global_var('func_4414')
call_5216 = relay.TupleGetItem(func_4413_call(), 0)
call_5217 = relay.TupleGetItem(func_4414_call(), 0)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_5236 = relay.TupleGetItem(func_2030_call(), 0)
call_5237 = relay.TupleGetItem(func_2031_call(), 0)
func_5006_call = mod.get_global_var('func_5006')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_5241 = relay.TupleGetItem(func_5006_call(), 0)
call_5242 = relay.TupleGetItem(func_5007_call(), 0)
uop_5250 = relay.log10(call_5214.astype('float32')) # shape=(35, 6)
uop_5252 = relay.log10(call_5215.astype('float32')) # shape=(35, 6)
func_1010_call = mod.get_global_var('func_1010')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_5259 = func_1010_call()
call_5260 = func_1010_call()
uop_5262 = relay.acosh(uop_5250.astype('float64')) # shape=(35, 6)
uop_5264 = relay.acosh(uop_5252.astype('float64')) # shape=(35, 6)
func_3267_call = mod.get_global_var('func_3267')
func_3268_call = mutated_mod.get_global_var('func_3268')
call_5272 = relay.TupleGetItem(func_3267_call(), 1)
call_5273 = relay.TupleGetItem(func_3268_call(), 1)
var_5280 = relay.var("var_5280", dtype = "float64", shape = (35, 6))#candidate|5280|(35, 6)|var|float64
bop_5281 = relay.equal(uop_5262.astype('bool'), relay.reshape(var_5280.astype('bool'), relay.shape_of(uop_5262))) # shape=(35, 6)
bop_5284 = relay.equal(uop_5264.astype('bool'), relay.reshape(var_5280.astype('bool'), relay.shape_of(uop_5264))) # shape=(35, 6)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_5293 = func_1932_call()
call_5294 = func_1932_call()
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_5304 = relay.TupleGetItem(func_793_call(), 0)
call_5305 = relay.TupleGetItem(func_794_call(), 0)
func_3595_call = mod.get_global_var('func_3595')
func_3600_call = mutated_mod.get_global_var('func_3600')
var_5307 = relay.var("var_5307", dtype = "float32", shape = (96, 28))#candidate|5307|(96, 28)|var|float32
var_5308 = relay.var("var_5308", dtype = "float64", shape = (220, 1))#candidate|5308|(220, 1)|var|float64
call_5306 = relay.TupleGetItem(func_3595_call(relay.reshape(var_5307.astype('float32'), [12, 14, 16]), relay.reshape(var_5307.astype('float32'), [12, 14, 16]), relay.reshape(var_5308.astype('float64'), [55, 4]), ), 4)
call_5309 = relay.TupleGetItem(func_3600_call(relay.reshape(var_5307.astype('float32'), [12, 14, 16]), relay.reshape(var_5307.astype('float32'), [12, 14, 16]), relay.reshape(var_5308.astype('float64'), [55, 4]), ), 4)
func_2787_call = mod.get_global_var('func_2787')
func_2788_call = mutated_mod.get_global_var('func_2788')
call_5316 = relay.TupleGetItem(func_2787_call(), 0)
call_5317 = relay.TupleGetItem(func_2788_call(), 0)
uop_5320 = relay.cos(uop_5250.astype('float64')) # shape=(35, 6)
uop_5322 = relay.cos(uop_5252.astype('float64')) # shape=(35, 6)
output = relay.Tuple([call_5216,call_5236,call_5241,call_5259,call_5272,bop_5281,call_5293,call_5304,call_5306,var_5307,var_5308,call_5316,uop_5320,])
output2 = relay.Tuple([call_5217,call_5237,call_5242,call_5260,call_5273,bop_5284,call_5294,call_5305,call_5309,var_5307,var_5308,call_5317,uop_5322,])
func_5334 = relay.Function([var_5280,var_5307,var_5308,], output)
mod['func_5334'] = func_5334
mod = relay.transform.InferType()(mod)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5334_call = mutated_mod.get_global_var('func_5334')
var_5336 = relay.var("var_5336", dtype = "float64", shape = (35, 6))#candidate|5336|(35, 6)|var|float64
var_5337 = relay.var("var_5337", dtype = "float32", shape = (96, 28))#candidate|5337|(96, 28)|var|float32
var_5338 = relay.var("var_5338", dtype = "float64", shape = (220, 1))#candidate|5338|(220, 1)|var|float64
call_5335 = func_5334_call(var_5336,var_5337,var_5338,)
output = call_5335
func_5339 = relay.Function([var_5336,var_5337,var_5338,], output)
mutated_mod['func_5339'] = func_5339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5355 = relay.var("var_5355", dtype = "uint32", shape = (4, 1, 10))#candidate|5355|(4, 1, 10)|var|uint32
const_5356 = relay.const([[[7,-10,1,9,-1,3,-9,-1,-5,-3],[1,-3,-9,-4,-4,-8,-6,-1,2,3],[8,9,-10,8,-7,6,-2,-6,-5,-5],[5,-9,-6,6,-10,-1,-6,-8,1,2],[6,6,8,-7,4,-4,-7,-8,3,9],[4,4,2,-8,5,-3,-1,-8,-2,-4],[7,5,-10,7,8,7,-7,6,2,-4],[-4,-7,-7,4,10,-6,-5,-4,-6,8],[-6,10,7,-7,-7,-7,10,-8,1,-6],[3,1,-5,-2,-4,8,7,-5,1,-7]],[[-3,-3,-8,-1,6,-1,9,6,-5,-8],[-9,10,2,4,7,6,-6,6,2,3],[3,7,-4,-8,1,7,-2,-10,2,10],[5,-3,6,5,5,8,-1,-1,-9,-5],[7,-10,1,-5,-4,-4,2,-10,-5,8],[2,-9,2,10,-3,2,9,10,2,2],[-10,-4,4,-3,-8,10,-9,-5,-10,-2],[1,4,-6,1,8,3,-10,2,-1,-4],[6,-9,2,5,10,-7,-1,-3,3,-4],[-9,-1,-2,-4,8,1,1,-10,-3,-7]],[[2,4,-6,10,-2,2,-1,-10,-8,7],[-2,1,-8,6,-7,6,10,-5,-8,-6],[1,-2,1,-7,-8,-6,-3,-2,1,6],[-5,-7,2,-9,-7,3,-3,2,8,-4],[4,-7,-10,-9,8,-8,8,8,-5,4],[-2,-2,3,10,1,-8,-5,-3,-3,-7],[-10,4,8,1,8,7,-2,6,1,7],[-9,9,9,2,-6,2,4,5,-9,7],[-10,9,3,9,1,-10,-10,-6,-2,-2],[-5,-6,4,1,8,3,4,1,-9,-3]],[[-6,-9,-1,7,3,-4,4,9,9,-3],[10,4,8,-1,-6,7,7,-8,3,4],[5,-4,5,-8,3,-3,7,-7,3,-4],[-10,2,-7,8,8,-3,9,5,-3,10],[6,9,1,10,1,4,5,1,-8,1],[10,-8,-5,4,-6,2,-8,-5,8,-2],[9,2,-1,7,3,-5,4,-3,8,5],[-2,8,-9,-6,8,5,3,5,-2,5],[-8,8,6,1,9,-8,2,-10,8,-7],[3,8,-1,1,-3,9,-7,-5,8,-6]]], dtype = "uint32")#candidate|5356|(4, 10, 10)|const|uint32
bop_5357 = relay.logical_xor(var_5355.astype('uint32'), const_5356.astype('uint32')) # shape=(4, 10, 10)
const_5363 = relay.const([[[-5,6,6,-5,9,4,4,-6,-4,3],[8,-3,-2,2,-9,-7,9,2,-3,6],[4,-2,7,-5,9,-1,4,5,-6,6]],[[-9,-2,4,-4,10,-1,-9,-3,2,-7],[9,-7,3,1,-8,7,-7,8,10,10],[-1,4,-5,6,6,6,3,-10,-3,6]],[[-5,-3,-9,-6,4,-8,-9,6,-1,9],[8,-5,-9,5,-4,-5,3,3,-10,2],[-7,8,-5,7,-9,-3,2,-7,-1,-2]],[[5,-5,-7,4,-7,1,9,9,-8,-1],[-3,-5,2,-5,-6,1,-6,2,5,3],[4,-8,-5,-8,3,9,4,2,-6,1]]], dtype = "uint32")#candidate|5363|(4, 3, 10)|const|uint32
bop_5364 = relay.not_equal(var_5355.astype('bool'), const_5363.astype('bool')) # shape=(4, 3, 10)
output = relay.Tuple([bop_5357,bop_5364,])
output2 = relay.Tuple([bop_5357,bop_5364,])
func_5373 = relay.Function([var_5355,], output)
mod['func_5373'] = func_5373
mod = relay.transform.InferType()(mod)
var_5374 = relay.var("var_5374", dtype = "uint32", shape = (4, 1, 10))#candidate|5374|(4, 1, 10)|var|uint32
output = func_5373(var_5374)
func_5375 = relay.Function([var_5374], output)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_5390 = func_1932_call()
call_5391 = func_1932_call()
func_3595_call = mod.get_global_var('func_3595')
func_3600_call = mutated_mod.get_global_var('func_3600')
var_5399 = relay.var("var_5399", dtype = "float32", shape = (2688,))#candidate|5399|(2688,)|var|float32
const_5400 = relay.const([1.698182,-5.996853,-9.648565,5.192281,-1.536116,0.128452,9.673052,-3.621121,-3.785072,1.998647,4.717522,-3.356752,-1.270903,-0.947287,-7.417280,0.453625,1.044068,0.773551,0.946471,7.625264,-8.927720,0.427239,-5.209092,-1.082109,-3.990670,7.400697,8.497066,-4.188376,7.321574,-0.313289,-7.665809,-8.507360,0.894960,3.093507,-7.549774,2.358771,9.164910,-2.924619,-3.152123,-7.497626,-9.596281,2.911394,1.038021,-9.123936,-2.818979,2.037473,-6.838002,7.477596,8.048413,-5.699161,6.271528,6.374775,-5.937773,-1.974541,-1.549224,1.295931,-5.241152,4.510524,8.444279,3.616185,-0.023464,-8.385238,-6.545345,-0.161278,-5.134695,3.137296,-4.251905,-3.471661,-4.373760,-1.586600,-0.708947,4.183583,-0.726776,-0.321129,-8.859918,2.030958,-2.418778,9.923143,2.572948,9.944992,-8.917448,1.754534,8.428378,-3.067662,2.348738,-6.010638,-0.686059,-9.106774,-4.851374,-7.564919,-9.464264,9.898139,8.597903,6.378985,3.711172,-3.730246,9.258803,-5.013509,-8.798023,-2.999352,6.180416,1.849395,2.811878,-1.511445,-3.481147,-1.989639,0.585720,-4.220550,0.796958,4.097999,-5.501306,-5.115653,-8.495888,-4.752655,3.117681,-9.519139,1.157895,7.286416,8.937290,3.779449,-1.180009,8.838939,3.297179,2.015041,6.467233,0.376768,-5.383623,-1.173394,2.428502,0.757572,2.900515,1.066259,6.745709,1.434179,0.385778,3.492580,2.681028,0.749859,-1.564012,3.423078,1.638667,0.815609,-6.524903,-7.982325,-9.792911,5.915306,4.527921,-9.862806,4.651916,-5.040540,-9.407956,-2.230895,-0.538098,6.270292,-6.500840,-6.841179,6.560259,-4.423558,0.272899,8.800572,-2.482692,-3.965124,-9.528174,6.498532,-9.198075,-1.894102,8.495575,-9.727253,-4.919250,-6.580339,-3.358044,-5.529391,-6.646419,-9.962979,-3.051736,5.170756,-0.424276,-9.659274,-1.891342,-1.772364,8.903168,-8.083819,7.321016,-6.151302,-5.942430,8.724446,-5.089171,-5.560647,-6.035441,-0.510936,1.144283,7.285139,5.243112,-1.251743,8.603497,1.280109,1.092890,5.606912,-2.621847,-0.270326,-7.203005,-7.210044,2.945574,3.185506,0.257714,-6.720560,0.017042,-2.800461,-8.098773,6.217117,1.914959,-0.444537,-4.516504,4.533369,-7.242303,7.536567,4.928425,7.389588,-4.005454,-6.895270], dtype = "float64")#candidate|5400|(220,)|const|float64
call_5398 = relay.TupleGetItem(func_3595_call(relay.reshape(var_5399.astype('float32'), [12, 14, 16]), relay.reshape(var_5399.astype('float32'), [12, 14, 16]), relay.reshape(const_5400.astype('float64'), [55, 4]), ), 3)
call_5401 = relay.TupleGetItem(func_3600_call(relay.reshape(var_5399.astype('float32'), [12, 14, 16]), relay.reshape(var_5399.astype('float32'), [12, 14, 16]), relay.reshape(const_5400.astype('float64'), [55, 4]), ), 3)
output = relay.Tuple([call_5390,call_5398,var_5399,const_5400,])
output2 = relay.Tuple([call_5391,call_5401,var_5399,const_5400,])
func_5402 = relay.Function([var_5399,], output)
mod['func_5402'] = func_5402
mod = relay.transform.InferType()(mod)
var_5403 = relay.var("var_5403", dtype = "float32", shape = (2688,))#candidate|5403|(2688,)|var|float32
output = func_5402(var_5403)
func_5404 = relay.Function([var_5403], output)
mutated_mod['func_5404'] = func_5404
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5497 = relay.const([[[0.421076,8.884362,5.267386,-5.197642,0.117578,6.009936,-8.549882,-5.719054,4.930470,-0.667209,-4.135210,-3.500558],[7.272529,1.231638,9.219897,-5.962837,-8.351582,6.161553,-2.744232,9.183397,-9.744155,-0.472044,-3.575896,-0.353784],[6.948629,0.728654,6.245395,-0.030860,7.889706,-4.431848,2.945011,-6.328354,-8.602674,7.970720,4.626237,-2.040651],[4.863557,-1.078286,-5.738356,1.251320,-5.723040,1.690161,-5.058519,-7.016142,-2.492000,-5.473432,1.183969,3.604728],[-9.709185,-4.067799,3.777355,-7.341911,-8.583183,6.247155,0.951866,-6.456113,9.579116,0.395884,-4.979723,-6.872398],[-7.974646,-3.115282,4.654387,7.262171,-5.366498,2.561063,-8.383676,-6.288258,0.309212,4.265747,-6.945140,-9.797615],[-4.610882,4.043215,2.324778,8.797560,0.871791,-1.791855,0.186735,-2.019692,0.822947,-9.663376,2.232037,-2.749845],[-1.241978,9.797642,-2.618768,-1.110781,8.369913,1.077949,0.820183,-6.793870,-4.188182,9.475576,-4.103718,7.013144],[-9.594594,-5.112068,-2.913773,-4.361851,-8.228203,0.082363,5.906029,2.663077,5.214403,2.917420,2.810368,2.231332],[-8.862856,-5.585830,1.065658,6.220382,0.347806,3.779755,-1.582501,-2.835734,-1.301767,9.964994,8.006411,-3.516810],[7.886268,-7.806989,-5.869961,-9.634687,-0.958157,5.099410,-4.944280,1.183146,-9.791055,4.977146,-0.586255,-0.283609]],[[0.226539,-3.950048,-2.635828,-9.584666,9.290744,6.403793,-5.194867,-0.113104,-6.603197,-9.477554,-6.125693,-7.889884],[3.831771,-8.303599,0.830742,-8.397443,-6.062022,0.983956,8.309782,4.322451,-8.612488,-8.488296,-0.791696,-5.702224],[8.997904,-6.327409,-6.935857,-6.475922,-9.670518,-6.501070,5.803264,5.624969,9.336264,5.873830,-5.401109,5.305058],[6.273357,0.338319,5.713703,-7.224228,6.249678,-8.837813,3.918637,0.539190,6.198567,1.305364,-7.398234,4.000811],[9.399245,-5.532201,3.324087,5.936693,-3.825353,-1.833268,-2.614178,-9.201167,8.829923,0.612088,6.104522,6.926428],[-6.514518,-3.658564,1.098863,6.572701,-2.135476,-2.921177,8.266213,-3.556872,-5.865100,3.552243,1.941864,-5.447614],[2.587108,3.277517,-9.710788,7.655441,0.763970,3.479053,9.381945,0.406031,7.684291,0.838797,6.549981,-4.870218],[4.596906,-7.506407,0.330695,5.256588,0.748573,7.252686,1.644460,-2.001759,-2.375196,7.663337,-8.718427,8.351783],[-7.162499,9.898346,-5.136849,-3.890062,9.954109,-0.442350,8.510518,4.768656,-2.316434,2.455609,-9.707252,-6.106882],[4.843009,-4.620112,6.291467,7.465972,8.749037,7.654637,-0.655119,5.352608,2.776642,-2.404849,3.193240,3.377766],[0.069133,-5.498758,-2.738029,-1.146056,-7.677874,-2.606994,1.078094,-8.421315,-3.160905,-1.343474,1.241048,-0.762793]],[[-6.030970,9.357988,5.595489,2.354070,1.820181,-2.745622,6.941463,-9.472738,4.252742,9.879211,-7.316413,7.624942],[2.358333,-9.880586,9.254472,6.545871,0.084764,-0.044242,2.637895,3.041662,0.365318,0.040993,6.402638,-6.621845],[-5.322279,3.215389,7.280750,8.855606,-6.771469,9.041583,-9.645324,6.874182,-7.460792,-4.094372,-7.122400,-2.808008],[8.806395,-0.226714,8.168609,-8.560176,-4.106746,3.634703,-1.377669,-4.884864,-2.907871,5.967873,9.865122,-8.246610],[-5.176572,4.729393,1.707814,-8.792417,8.629429,8.539701,2.723505,-0.442933,5.687939,-2.644129,-6.504347,-9.890099],[-0.964854,-6.221982,2.130289,1.789273,5.615425,-6.748174,5.684396,-8.744957,7.597527,1.587113,0.413187,-9.928208],[6.328916,-5.904914,4.111677,-6.609741,-0.534334,2.018937,-2.112859,6.649499,-7.543024,-3.311306,-5.120867,-3.232094],[-0.629784,2.819924,-6.947715,-3.140709,-0.320667,4.456765,7.744156,9.687566,-8.437639,8.992851,-1.177353,2.227160],[-0.110504,-9.192703,-2.648700,-8.178685,-2.995759,-4.732116,5.916191,7.331609,2.166853,-3.989690,-1.922943,6.760047],[-7.546613,8.074092,9.865833,2.269424,-5.521544,7.973766,3.049091,0.681978,2.962562,-7.500546,-7.502239,-8.237663],[-5.926014,1.598176,-3.212168,-4.805869,2.690576,9.941410,-4.885493,2.627472,-8.132816,9.594554,-8.754114,-5.485537]],[[-9.142472,1.262076,-6.904963,-6.239907,-6.006490,2.763331,-8.061072,6.948158,-1.844425,2.290293,-5.921915,5.396376],[9.864311,-8.465626,-2.270184,4.281662,5.445438,5.514181,-7.679503,-0.683339,0.760289,9.614063,1.896653,-5.183307],[-1.712682,-4.287716,-2.698454,1.840101,-8.019954,9.262451,-5.243916,2.936876,2.697875,2.989415,7.442705,-8.892473],[-2.601293,-6.507650,4.747124,0.034193,-1.130933,-9.471826,4.757638,-7.381316,3.708486,-6.755288,-2.353571,4.971991],[8.441456,7.851781,-3.220216,2.627888,-1.816761,8.979141,-5.773840,9.117126,-2.447697,3.909406,2.836789,-1.009584],[-0.829454,5.459107,-3.922201,-7.022161,6.978284,-0.488941,-4.403209,-3.003346,-9.996048,-3.045623,-3.536653,5.550751],[3.845499,6.890296,7.177254,2.381537,-8.958498,-2.099706,4.589041,-5.302106,9.602213,-8.389166,9.509009,-4.706720],[-3.933652,-0.526709,-7.031278,-5.250580,5.994650,-9.363856,8.961795,-4.616531,-4.976102,-8.946650,8.014075,8.039401],[-8.296063,-3.475370,-2.532595,5.234375,8.912093,-9.885812,0.089604,9.667968,-2.782806,0.217409,6.853521,2.411804],[4.877509,7.034574,3.242257,3.299217,8.368516,0.118344,-7.385142,-2.840159,-9.045443,7.542233,2.863908,-4.286438],[-3.297362,4.628797,8.385129,-2.316602,0.025858,-5.486542,-9.403576,-1.059117,9.796391,0.796229,-7.084769,-9.444448]],[[-4.716383,-4.091952,-6.898451,0.766848,0.541570,7.831589,-3.130158,5.283269,4.866084,-2.314048,7.887850,8.109169],[-9.277341,-0.279262,9.246497,2.952139,-1.807582,4.290642,1.437703,0.839018,-1.573530,0.797125,-8.558177,-7.543726],[-8.904295,4.795209,5.549055,7.269546,-9.490151,-5.028741,-7.044674,4.849881,3.395740,2.488432,-0.210792,6.561551],[4.998495,8.830394,4.709846,-8.346287,-9.792446,0.865541,-8.421508,8.608473,-2.343676,-2.010473,2.215290,5.275381],[3.133473,7.090936,-9.813465,-4.319166,-3.032966,7.874429,3.592536,0.290629,-1.943140,1.652045,1.604238,2.475826],[-7.203758,-1.652129,7.633146,-3.899323,7.489571,-8.096513,1.928880,0.802784,-8.551523,6.147063,-9.035933,7.029253],[-3.867874,-1.896501,1.424786,3.621918,9.908656,-2.205515,-7.189055,9.586974,-5.891581,4.598695,-4.355040,5.142213],[4.947029,-5.707872,-2.379349,-3.897108,-7.032019,-5.311197,-8.798678,8.403251,-0.067448,5.241545,8.868699,-1.425404],[-3.721874,6.176683,-9.823116,-1.363528,5.836535,-2.259055,-3.512264,-5.287622,9.565281,4.231395,8.509161,5.013143],[-0.097313,-6.570422,-2.151088,2.152606,-6.394164,7.982678,-1.547480,-1.480923,9.487544,4.205360,-8.992352,-7.171668],[-7.535858,0.999427,6.268087,1.073582,5.749123,2.547694,-9.426292,6.613807,0.166333,-5.705561,-9.675469,6.943550]],[[4.555461,3.407902,2.607175,3.352653,5.768453,0.748217,1.334117,-8.205167,-2.595866,-6.636274,5.321049,8.223944],[3.653953,-3.455551,-6.942299,9.711348,-7.612293,0.001004,-5.970980,0.502753,-8.850160,-8.335374,-3.694033,-2.580709],[-4.785893,8.945783,-1.133502,-4.086938,-9.141810,1.424498,6.624025,-0.190050,-1.348145,1.492646,-6.263863,-0.618181],[4.500019,4.359806,-7.829172,-0.993133,-7.214669,-3.776759,-8.494327,-3.942786,4.063956,5.176633,-6.137538,-6.988181],[-7.187109,-9.968514,-3.045273,2.378063,1.453024,7.655027,-1.270434,6.451779,-8.585901,-7.993252,-6.519405,4.045024],[-5.361540,-4.389442,7.660003,0.571415,-9.572257,-6.545662,2.793665,-7.386698,-1.856767,-1.499214,0.073424,-0.175341],[6.425533,-7.992466,8.922865,5.116537,1.550564,7.381600,-9.230152,-1.768459,-6.966538,9.785631,-0.556561,-2.679913],[-8.402894,9.337780,-6.338850,2.827038,-6.382524,-9.282425,1.467819,-9.604504,8.592850,6.585341,-8.948486,6.848617],[9.063001,-7.069754,-2.295178,-1.606967,3.658182,7.388145,4.424589,4.084907,-4.402354,-3.889763,0.254270,-6.224263],[-5.910344,-5.096915,4.848641,0.653110,8.000855,-0.964956,-4.774841,-0.306964,8.975732,-3.031660,-1.848463,-2.780579],[5.362383,-0.476590,0.335039,7.358732,0.166759,7.934525,5.361869,3.283658,-0.079146,7.492108,-5.681377,5.349783]],[[2.931754,4.363715,9.885211,-3.369774,-8.960988,-7.178300,-7.993812,9.094980,4.886080,-3.934267,6.553278,0.207739],[-3.268083,-6.450061,-1.933428,-4.985529,4.512423,3.176976,5.793095,5.690944,0.616787,-5.504980,-0.809551,3.627466],[-5.021888,-2.177604,4.574308,5.693351,-8.839802,-5.294455,4.867005,-0.983448,-4.294536,-0.622440,-7.899925,7.339998],[1.113046,1.000952,3.464413,2.915248,-3.366166,9.031945,-6.716569,4.883367,6.275281,5.643856,-7.546432,6.812471],[-2.703941,1.282278,-7.968967,-5.474272,-4.675594,9.437543,-5.507447,3.302814,-6.682068,-9.436306,5.324526,-1.036781],[1.230155,-6.911898,1.802247,6.254427,6.950386,-6.323088,4.991629,9.770523,-5.057275,-3.321441,0.909775,-2.127732],[-7.771605,-0.310482,-2.002813,-1.168203,4.274743,-6.075152,4.644748,-1.341735,-2.990381,-0.072633,9.676631,1.126467],[-5.836436,-1.575771,4.484690,0.401741,3.264810,8.383583,-6.062851,0.205049,-1.898206,8.748269,3.843805,-0.644246],[-0.389570,-7.448535,-1.942629,-8.898858,8.065652,1.246259,4.185489,-5.855465,-7.517871,-6.395055,-7.605213,-6.332139],[3.103539,-5.113905,9.916106,-2.540279,3.065765,1.787658,-3.898481,-0.386563,-4.001140,-1.997385,-4.513336,-5.588408],[0.366811,-1.594984,6.835821,-0.567295,-2.792325,9.205325,-4.457481,6.674522,-8.458533,6.713005,-8.080242,-4.274510]],[[8.387606,-0.413391,-2.436421,5.705768,-6.167138,8.733547,-7.878171,-7.791332,-0.114945,2.623233,-2.247041,-7.451769],[4.334655,7.670806,6.316752,6.853701,7.807184,-3.666033,-8.495298,6.022427,3.402200,-5.998680,-5.257072,-9.475816],[8.898891,4.356489,7.092445,-3.835533,-2.625369,-3.498683,-9.885033,-1.941829,-7.899051,4.244189,-8.170790,1.365589],[0.608084,-1.153622,-0.361247,-2.567152,-7.803954,6.604852,6.435604,-5.586050,-5.029442,6.955813,-5.985114,-2.113989],[-6.532090,-6.618036,-4.058704,5.622966,0.445944,0.914826,-0.134430,6.873611,-7.523021,-6.632259,0.536540,5.055198],[-8.793025,-2.461802,-2.660423,6.731422,-6.048190,-6.851685,1.921296,-8.650293,5.579874,-5.013333,7.554880,-2.130676],[6.626848,7.571595,9.770564,-6.463972,6.457983,1.986720,8.509291,-0.854534,-2.434843,-0.271540,-6.665215,-7.073275],[-5.256126,-2.213230,8.458104,7.340184,6.239320,8.337686,4.863807,-3.001266,-2.311019,4.807402,-3.275376,1.163212],[-6.595626,-8.541995,-5.645959,-6.581580,-6.568442,-0.960263,3.897583,-6.722170,-7.452333,0.961958,0.106427,-0.887271],[2.451241,0.277375,4.496927,-4.145754,-0.226440,2.202472,-5.665705,1.301724,-1.893570,-8.238389,-3.801932,-4.246902],[-4.064271,-1.036551,-9.216452,2.321483,-9.061147,2.324813,0.050552,0.480940,2.922336,-8.521952,-0.498756,-1.065757]],[[3.486381,-9.388123,2.760384,-4.027767,4.037969,5.159053,1.202765,8.116706,8.106487,5.255053,4.228084,-0.302986],[0.279658,-5.384250,-5.291054,-1.760609,7.364508,5.758504,-4.877435,-8.987440,4.039254,3.677235,-9.815568,-1.039451],[5.508141,-0.614700,9.842964,0.600407,4.118975,-3.158293,-0.355744,9.898596,-9.970375,-4.381814,-0.618407,-1.467718],[-6.405546,-0.478725,-2.899606,-8.023024,-4.627195,-4.042616,0.291225,4.582861,8.348108,1.930288,-7.207688,0.133191],[0.293748,3.587560,-6.776249,6.025111,2.154332,0.850973,4.692987,-6.992138,-0.764150,6.687431,-5.236199,-4.063976],[-1.405521,-9.221496,-0.590496,0.206731,0.807597,9.936887,-7.570633,7.981149,-9.375228,-1.195379,-6.937635,-2.879121],[2.105737,5.246341,-8.636590,-7.589250,3.249329,0.785246,-0.808233,2.568555,-0.388697,-2.987341,-8.179417,-9.835853],[-8.269900,-5.468787,0.662191,-9.124417,-0.562089,3.702002,5.736199,7.917662,-1.996006,5.115005,-8.662434,-4.399222],[3.478417,9.230241,-5.039074,4.912573,-3.740724,-5.280023,-0.244332,3.453961,-0.538360,7.645565,-5.524657,-4.405636],[4.477009,1.138565,-7.058635,-3.407334,-8.663374,8.770283,-8.118069,-0.088648,-0.291936,-3.053845,2.286090,1.830053],[-6.217098,7.865883,-3.619121,3.046959,4.372726,4.228218,6.450932,-7.157331,2.350073,-1.811905,-9.884539,0.777689]],[[8.368381,8.330302,0.074779,-0.182526,3.181713,-9.766710,3.572462,8.105926,-4.904251,8.511935,6.677920,-8.878787],[4.686688,-5.086847,4.892390,6.653720,2.336111,6.359491,3.142946,1.651831,3.905247,-1.438232,8.299000,-5.047842],[-7.538996,2.005035,8.413334,3.612879,8.873939,-1.263260,1.904388,5.380125,-2.515094,6.038711,5.504709,-3.025598],[-0.638185,5.948317,-9.937803,6.876149,8.077843,-0.850537,-7.465983,-6.265851,7.900628,-6.385655,-4.591093,-5.060765],[-5.966086,-3.601419,-1.688307,2.452478,-1.851059,-8.200399,-0.618509,8.628030,0.706697,-8.779845,5.807276,7.380349],[4.359934,0.913772,3.999070,-0.794914,0.791637,5.433040,3.434064,-1.466019,-2.621648,-8.906699,9.871876,-0.966091],[-9.605129,-1.825371,4.492856,-2.164782,-3.581667,-9.040612,5.498286,9.872920,-3.754110,-9.613959,9.385737,7.159354],[-0.337527,-0.746179,5.065026,-4.699445,8.181407,-8.305506,-1.324264,7.263257,-6.759140,-6.093581,-8.135740,2.613834],[4.221926,-7.024813,-1.707068,-2.413009,-2.351602,-2.391641,7.454477,6.392194,-1.051103,-0.665131,-6.560199,3.747623],[3.040029,2.750841,3.524545,-8.622735,-2.675382,-7.497625,-2.588175,2.679004,9.208490,6.594099,-0.813409,-4.115138],[-6.971018,9.293447,-7.795974,2.697898,8.399234,-3.242799,4.504718,7.936409,0.463677,1.771157,-3.785301,-5.651025]]], dtype = "float32")#candidate|5497|(10, 11, 12)|const|float32
uop_5498 = relay.erf(const_5497.astype('float32')) # shape=(10, 11, 12)
output = uop_5498
output2 = uop_5498
func_5510 = relay.Function([], output)
mod['func_5510'] = func_5510
mod = relay.transform.InferType()(mod)
output = func_5510()
func_5511 = relay.Function([], output)
mutated_mod['func_5511'] = func_5511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4356_call = mod.get_global_var('func_4356')
func_4358_call = mutated_mod.get_global_var('func_4358')
call_5512 = relay.TupleGetItem(func_4356_call(), 0)
call_5513 = relay.TupleGetItem(func_4358_call(), 0)
func_2489_call = mod.get_global_var('func_2489')
func_2490_call = mutated_mod.get_global_var('func_2490')
call_5514 = relay.TupleGetItem(func_2489_call(), 0)
call_5515 = relay.TupleGetItem(func_2490_call(), 0)
func_1042_call = mod.get_global_var('func_1042')
func_1046_call = mutated_mod.get_global_var('func_1046')
const_5521 = relay.const(-5, dtype = "uint16")#candidate|5521|()|const|uint16
const_5522 = relay.const([[9],[3],[-1],[-6],[7],[5],[10],[-8],[-4],[-3],[-10],[-7],[1],[8],[3],[5],[1],[8],[5],[6],[-4],[9],[-10],[4],[4],[10],[4],[-6],[-5],[-6],[2],[8],[9],[5],[2],[5],[2],[-1],[1],[-10],[-3],[-10],[-10],[-3],[3],[-3],[9],[10],[9],[-4],[-9],[-8],[5],[7],[3],[2],[10],[4],[-8],[-4],[6],[-10],[9],[7],[-7],[9],[-1],[9],[6],[-1],[-5],[-6],[5],[-2],[-9],[-6],[6],[-2],[-5],[-4],[-1],[10],[-2],[10],[-5],[7],[-6],[-3],[-5],[5],[-5],[-10],[8],[9],[2],[-6],[8],[9],[-5],[6],[-9],[-1],[7],[7],[-3],[7],[5],[1],[3],[7],[-5],[10],[-10],[-1],[-7],[-8],[3],[-3],[-5],[2],[1],[8],[-9],[9],[10],[7],[2],[-7],[8],[7],[9],[4],[-5],[10],[-5],[8],[4],[-4],[-6],[6],[1],[-1],[3],[-5],[-8],[-10],[10],[-8],[-1],[6],[5],[-6],[9],[-3],[-4],[-1],[2],[-10],[-10],[10],[9],[-6],[4],[-3],[6],[-4],[3],[-9],[9],[9],[1],[-10],[4],[2],[5],[1],[-1],[-1],[4],[-1],[5],[-1],[-5],[-5],[4],[-10],[6],[2],[10],[-3],[5],[8],[-2],[1],[5],[6],[7],[-10],[-10],[7],[-1],[-1],[-6],[8],[-4],[-2],[-6],[4],[-9],[3]], dtype = "uint16")#candidate|5522|(210, 1)|const|uint16
call_5520 = relay.TupleGetItem(func_1042_call(relay.reshape(const_5521.astype('uint16'), []), relay.reshape(const_5522.astype('uint16'), [2, 15, 7]), ), 1)
call_5523 = relay.TupleGetItem(func_1046_call(relay.reshape(const_5521.astype('uint16'), []), relay.reshape(const_5522.astype('uint16'), [2, 15, 7]), ), 1)
output = relay.Tuple([call_5512,call_5514,call_5520,const_5521,const_5522,])
output2 = relay.Tuple([call_5513,call_5515,call_5523,const_5521,const_5522,])
func_5525 = relay.Function([], output)
mod['func_5525'] = func_5525
mod = relay.transform.InferType()(mod)
mutated_mod['func_5525'] = func_5525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5525_call = mutated_mod.get_global_var('func_5525')
call_5526 = func_5525_call()
output = call_5526
func_5527 = relay.Function([], output)
mutated_mod['func_5527'] = func_5527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4385_call = mod.get_global_var('func_4385')
func_4387_call = mutated_mod.get_global_var('func_4387')
call_5536 = relay.TupleGetItem(func_4385_call(), 2)
call_5537 = relay.TupleGetItem(func_4387_call(), 2)
func_4605_call = mod.get_global_var('func_4605')
func_4608_call = mutated_mod.get_global_var('func_4608')
var_5547 = relay.var("var_5547", dtype = "float32", shape = (1, 1365))#candidate|5547|(1, 1365)|var|float32
const_5548 = relay.const([[-7],[-1],[1],[-5],[10],[9],[-7],[-3],[-1],[-8],[7],[4],[-10],[-8],[2],[-6],[2],[-8],[-5],[-3],[9],[7],[9],[2],[-8],[8],[6],[7],[6],[7],[-3],[9],[-2],[6],[1],[2],[-1],[8],[9],[-1],[-2],[2],[1],[-4],[-9],[7],[5],[5],[4],[-5],[-3],[5],[-8],[-6],[-4],[-5],[8],[-4],[9],[7],[8],[9],[-1],[-1],[10],[-2],[-4],[6],[1],[-10],[9],[-3],[3],[5],[5],[1],[10],[-9],[6],[8],[7],[-6],[-8],[-7],[-4],[-5],[-10],[-9],[6],[-4],[-8],[8],[-5],[-8],[8],[-7],[-7],[-10],[-7],[5],[-1],[4],[9],[-4],[-7],[-7],[3],[2],[-2],[-9],[8],[5],[-2],[10],[9],[-1],[-6],[-2],[6],[9],[4],[10],[-1],[5],[5],[-2],[-1],[8],[-2],[-3],[2],[3],[-6],[-2],[-3],[-8],[8],[6],[2],[-1],[-5],[-10],[1],[-2],[-6],[8],[-8],[5],[-8],[-8],[9],[1],[4],[7],[9],[5],[-2],[-4],[2],[-8],[10],[6],[6],[10],[10],[8],[4],[9],[7],[5],[3],[-1],[4],[-9],[-1],[5],[-2],[-9],[-4],[-4],[-7],[-8],[-2],[-2],[-2],[-4],[-9],[-1],[2],[1],[5],[-5],[9],[-5],[3],[9],[-2],[4],[1],[-2],[4],[-9],[2],[-6],[-10],[-10],[-3],[1],[-8],[-4]], dtype = "uint16")#candidate|5548|(210, 1)|const|uint16
call_5546 = relay.TupleGetItem(func_4605_call(relay.reshape(var_5547.astype('float32'), [455, 3]), relay.reshape(const_5548.astype('uint16'), [35, 6]), ), 0)
call_5549 = relay.TupleGetItem(func_4608_call(relay.reshape(var_5547.astype('float32'), [455, 3]), relay.reshape(const_5548.astype('uint16'), [35, 6]), ), 0)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_5552 = relay.TupleGetItem(func_1626_call(), 2)
call_5553 = relay.TupleGetItem(func_1628_call(), 2)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_5565 = relay.TupleGetItem(func_2521_call(), 0)
call_5566 = relay.TupleGetItem(func_2522_call(), 0)
var_5567 = relay.var("var_5567", dtype = "float32", shape = (2, 1365))#candidate|5567|(2, 1365)|var|float32
bop_5568 = relay.logical_and(var_5547.astype('bool'), var_5567.astype('bool')) # shape=(2, 1365)
output = relay.Tuple([call_5536,call_5546,const_5548,call_5552,call_5565,bop_5568,])
output2 = relay.Tuple([call_5537,call_5549,const_5548,call_5553,call_5566,bop_5568,])
func_5576 = relay.Function([var_5547,var_5567,], output)
mod['func_5576'] = func_5576
mod = relay.transform.InferType()(mod)
var_5577 = relay.var("var_5577", dtype = "float32", shape = (1, 1365))#candidate|5577|(1, 1365)|var|float32
var_5578 = relay.var("var_5578", dtype = "float32", shape = (2, 1365))#candidate|5578|(2, 1365)|var|float32
output = func_5576(var_5577,var_5578,)
func_5579 = relay.Function([var_5577,var_5578,], output)
mutated_mod['func_5579'] = func_5579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_5598 = relay.TupleGetItem(func_4011_call(), 0)
call_5599 = relay.TupleGetItem(func_4013_call(), 0)
func_4413_call = mod.get_global_var('func_4413')
func_4414_call = mutated_mod.get_global_var('func_4414')
call_5603 = relay.TupleGetItem(func_4413_call(), 0)
call_5604 = relay.TupleGetItem(func_4414_call(), 0)
output = relay.Tuple([call_5598,call_5603,])
output2 = relay.Tuple([call_5599,call_5604,])
func_5607 = relay.Function([], output)
mod['func_5607'] = func_5607
mod = relay.transform.InferType()(mod)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5607_call = mutated_mod.get_global_var('func_5607')
call_5608 = func_5607_call()
output = call_5608
func_5609 = relay.Function([], output)
mutated_mod['func_5609'] = func_5609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3518_call = mod.get_global_var('func_3518')
func_3519_call = mutated_mod.get_global_var('func_3519')
call_5691 = func_3518_call()
call_5692 = func_3518_call()
func_535_call = mod.get_global_var('func_535')
func_536_call = mutated_mod.get_global_var('func_536')
call_5693 = func_535_call()
call_5694 = func_535_call()
output = relay.Tuple([call_5691,call_5693,])
output2 = relay.Tuple([call_5692,call_5694,])
func_5697 = relay.Function([], output)
mod['func_5697'] = func_5697
mod = relay.transform.InferType()(mod)
output = func_5697()
func_5698 = relay.Function([], output)
mutated_mod['func_5698'] = func_5698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5006_call = mod.get_global_var('func_5006')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_5709 = relay.TupleGetItem(func_5006_call(), 0)
call_5710 = relay.TupleGetItem(func_5007_call(), 0)
output = call_5709
output2 = call_5710
func_5739 = relay.Function([], output)
mod['func_5739'] = func_5739
mod = relay.transform.InferType()(mod)
mutated_mod['func_5739'] = func_5739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5739_call = mutated_mod.get_global_var('func_5739')
call_5740 = func_5739_call()
output = call_5740
func_5741 = relay.Function([], output)
mutated_mod['func_5741'] = func_5741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5775 = relay.var("var_5775", dtype = "float32", shape = (5, 11, 13))#candidate|5775|(5, 11, 13)|var|float32
uop_5776 = relay.log(var_5775.astype('float32')) # shape=(5, 11, 13)
func_384_call = mod.get_global_var('func_384')
func_387_call = mutated_mod.get_global_var('func_387')
const_5784 = relay.const([6.350762,-2.327075,3.917762,-0.334615,6.496369,6.581052,3.883020,5.799105,-6.118069,-1.179598,3.899435,-6.530471,-4.866202,-3.284014,4.927493,9.381549,5.445981,-3.364886,4.781734,0.640566,9.131097,-2.689316,3.657471,1.234815,-5.993762,7.859073,-2.470737,-3.420732,0.610024,2.566208,3.838040,-4.313729,-0.694583,6.370629,6.214729,-0.110520,8.939414,7.268257,-4.767120,-5.480390,-0.777675,-4.002839,-3.466382,2.150961,7.579637,-1.842914,0.132814,-0.498737,4.738823,3.438275,-1.174454,7.756020,-6.829629,-6.289118,6.247153,5.710960,-6.825619,0.701804,2.160342,9.126783,4.030412,1.982896,-3.157008,-0.749628,3.463715,-4.938062,2.898610,0.361993,1.016325,5.758287,-9.738738,-0.383684,-6.582002,1.080840,4.543854,9.123149,3.795235,6.672767,-3.176294,1.287255,-9.240323,7.215176,-0.004736,6.513960,-7.848481,-3.121586,-8.754439,-2.203765,-2.982529,-0.256126,-0.423741,-8.274326,-9.483289,6.893745,9.567503,-4.854867,-7.900740,-5.687714,-2.301472,-5.890670,-8.293409,1.914737,-4.969199,9.879087,-5.673177,-6.336047,9.432133,-8.255099,-9.082536,-9.153965,-8.649992,8.499450,-8.877970,7.333531,-1.273102,-6.217033,3.034531,8.972075,2.096250,-2.622177,-1.488184,-8.897105,-2.445544,0.335047,-9.614420,-3.247272,-9.371129,0.377934,3.271039,0.239142,0.036661,-4.761819,0.271857,-5.253755,9.593763,-1.678887,0.779138,2.261712,4.493954,-4.695852,1.395341,9.144939,7.397350,-7.512904,9.299622,-1.835061,4.362801,9.824179,-3.034242,6.408153,3.278327,1.829217,-7.063162,-5.738569,8.712095,8.247385,9.258343,-0.107248,-0.544813,-1.944006,-1.103600,-0.243900,1.220558,-9.341148,4.919017,2.481099,-3.054415,8.228267,-5.124005,-0.621638,-1.881769,-9.581263,-5.204408,-6.145556,6.139932,5.382133,8.259999,-9.887939,4.696849,-0.370369,-5.158791,7.321120,-7.588076,-3.898167,-6.957897,-7.960450,-0.763897,3.857496,6.728647,9.135366,-3.491075,-7.881295,-4.052033,-7.856224,-8.661486,-4.585394,3.931161,7.025099,-2.014126,-4.390625,-6.112716,-1.082679,7.033183,-0.419022,0.815293,2.747051,-3.345249,-5.379764,-6.510859,-4.258041,3.024784,-0.754350,5.244025,6.511754,1.265609,-1.514416,-0.192486,-3.870730,-5.340670,0.664839,8.568121,2.939133,-6.121954,-7.564247,0.517254,4.066098,-7.411649,3.202766,6.356834,7.110054,-6.768682,0.706533,-6.701349,-5.842314,-5.509185,2.996947,-5.978196,2.378831,-3.267416,-5.415332,-9.967175,-5.541838,3.443471,-7.647220,-8.492866,0.350803,-9.585289,-6.618109,-7.245420,6.136639,-6.203268,-4.585116,-6.107574,9.497374,-5.952177,-7.061762,-3.377139,2.523455,-7.105136,-2.469027,0.811541,8.533468,-3.430950,5.047002,-2.974863,9.723061,9.497889,5.370627,3.429044,-2.122298,-8.978791,6.198886,5.902754,-3.087347,-7.182873,3.219142,-5.827915,0.913637,-8.556482,-5.192893,-0.434777,3.394434,0.515999,1.070167,8.440811,-8.557840,-6.677659,-6.144512,-7.234462,9.201697,-8.881610,1.843132,3.919834,7.022040,7.510242,-3.846758,-8.935848,8.964903,-6.474221,-9.840671,-3.880211,-5.031420,-9.930372,-0.589114,0.863691,-2.625365,-9.824157,9.180593,-8.768995,9.251223,-5.237205,9.724474,4.946225,-7.869850,6.295227,-4.832817,-5.241476,-4.385619,3.124994,1.522947,-8.858536,-9.610072,9.566840,-8.508625,7.500891,6.399291,4.884898,-8.025573,6.992452,4.595934,7.649217,-9.610602,-1.453928,1.063699,-6.927305,-8.447599,-1.697887,3.511421,-2.413288,5.165989,-8.953480,6.412794,-9.369969,-8.446646,0.049305,-0.636304,9.464878,-2.973505,-8.604756,-0.584047,-8.790933,3.680073,0.995947,2.036332,5.084523,5.164148,9.535278,8.104731,-2.616655,-1.055058,8.654774,5.620285,0.231360,-0.353152,1.461354,-2.346480,-8.438842,-8.333810,3.350883,5.633594,-8.817142,-7.611512,-5.661794,4.412132,6.492722,-0.681779,1.834017,-9.671159,3.300283,-5.062897,5.971910,-8.174609,-6.437133,6.834693,-5.269001,-0.912109,-8.839981,2.436863,9.174151,3.987155,-6.319732,0.487396,3.865699,-6.891395,0.257990,1.602028,-0.455347,-0.273546,-8.889413,-2.951147,-3.978765,-5.204508,1.241016,0.291944,-1.545556,1.960163,-9.358292,-5.896380,-9.660381,-9.776643,7.814532,-5.476710,-1.878987,1.108668,4.566170,6.808428,-0.932575,-8.236448,2.386586,-2.855113,-8.630295,-9.154482,2.247770,7.864742,-3.471646,6.118021,8.609622,8.337893,-6.574859,5.449976,-3.491585,0.230090,-7.584723,-2.440903,-1.440753,3.323040,-6.979021,1.975651,7.167241,-8.932321,8.182334,3.443559,5.277695,-7.681280,8.714942,9.002138,-0.841192,2.116134,-0.345669,4.561476,-1.709465,-9.330708,-3.121995,-2.190640,-3.782378,2.435594,-7.505110,-4.875094,2.141610,1.190827,-7.327258,-9.974835,-5.903753,0.638115,2.660721,0.109368,-2.457207,4.996241,3.928554,-2.622431,-5.614826,2.604370,-4.986198,-4.461234,-0.191521,7.811799,7.351635,-1.467979,6.589126,-7.784690,-3.029004,-9.415372,0.501276,6.313542,-6.028040,-5.700098,-1.378923,4.995379,-5.755999,-4.016471,-7.878917,8.607909,-9.154347,2.911999,-0.183185,-7.499156,9.701987,9.195648,-6.631842,6.787787,-6.798498,5.543285,-2.747905,9.821816,5.335638,6.051404,9.110275,9.226659,-9.326741,4.943751,-6.372397,8.977422,5.897344,6.806465,-6.579833,-7.512126,-1.337063,2.185207,-4.479384,0.380399,-2.668833,7.328543,-9.456846,3.790141,2.075541,3.746953,4.012222,9.595096,5.469552,-1.249742,-5.540097,-1.979771,6.808042,8.622381,-8.130014,8.080987,5.721571,0.163539,3.395528,4.846193,6.250009,-6.624547,8.295711,2.916231,-5.726523,-1.105512,-5.659985,-6.509629,-5.883550,-2.522514,-6.338631,-0.343514,-3.467845,3.155222,-6.479547,4.729167,8.642445,-2.492939,0.335192,3.458460,-6.371971,-7.409445,-3.504228,-0.237685,-8.498678,-8.309328,-4.332932,5.759958,-9.412129,-0.236042,0.027562,-8.088019,5.207122,6.141039,5.445315,8.364114,1.072154,-6.973029,-0.032276,-2.477954,8.440218,2.785768,0.473548,7.170031,-8.773191,5.848792,3.018838,-7.643370,-0.552368,4.113452,3.534176,0.511911,5.753830,-4.990961,-6.739746,-1.570599,7.993799,1.142055,-9.518884,-4.437695,-9.931744,-3.339060,-8.837420,7.814096,0.700696,-7.386971,0.419318,9.016909,0.968976,-4.069007,-1.619143,-9.276123,-8.717330,7.021197,-9.994975,8.766550,6.031976,-5.942729,5.652317,-1.053681,-3.400892,8.977824,6.474726,-9.691999,-1.140272,-5.784753,-2.621696,0.546974,2.577059,5.448294,-8.138850,-7.031359,3.342213,1.922589,-8.190789,4.058029,-5.390036,-0.256098,4.353825,4.807713,5.525440,-5.180100,-4.807778,8.699204,-5.743907,9.171960,7.813475,-7.162156,-8.719511,3.659656,-1.870253,3.379256,9.384962,-3.227511,3.701549,1.967006,3.070165,-2.309629,7.844714,9.255976,-5.062734,-7.071298,5.410877,-6.371353,1.905518,-5.118956,-1.093825,-9.807166,-1.080726,-2.293534,-8.298420,-3.528776,-3.254941,4.439611,-7.545297,0.125573,8.935209,2.622012,4.129020,-6.184371,7.033392,-6.807002,9.784532,-7.685116,1.168327,1.602516,-7.567827,3.239797,-7.022582,-1.052939,-1.289487,9.023519,2.697783,-5.379020,3.987799,4.720048,0.537589,-7.545027,9.862512,-7.643732,-8.058963,-7.832869,-5.149765,9.354587,4.475127,2.971613,1.125746,2.541801,0.713808,1.512273,2.369114,-0.740322,-7.995890,1.591602,5.303678,-2.639073,5.898243,-2.466077,9.531753,-0.156536,3.170406,-9.143876,-0.290998,7.549158,4.909120,-4.412384,-3.606360,8.751121,-7.562657,-1.855955,2.979131,9.250724,3.980121,-3.051104,1.896209,5.225096,-5.342631,9.683972,-9.093531,4.313224,-3.925708,-1.079512,-6.457325,7.338191,-1.170903,-1.944360,5.555278,-9.607064,0.090706,3.095369,9.260035,5.414728,-3.105657,-8.570784,4.172215,-3.554307,-7.328455,-5.464231,-4.243683,5.353996,0.019647,-6.974461,5.711598,-5.799340,4.659208,0.013642,-7.521924,4.248031,2.741585,0.208989,6.625130,-3.086866,-8.102843,-8.990886,6.517515,1.768734,6.330272,0.124899,-8.093043,5.427037,1.583476,-1.030453,5.633800,-3.986234,-5.980434,5.275160,7.681746,2.195818,9.202459,-0.749639,2.069484,9.131962,-7.568478,2.552226,-4.455095,-3.191360,8.113550,-6.549682,-1.895381,6.641366,-2.572009,-1.743466,4.252741,-0.500975,6.474204,0.704049,-4.347252,6.671753,5.818479,-3.807717,5.780652,8.565128,1.899116,7.189086,-5.888157,-2.969289,-3.180436,-9.229132,-4.310174,-8.772592,3.819401,-3.614853,-9.549989,-3.516046,-4.214053,-9.556546,-2.416648,-4.781645,2.035051,9.350015,5.788807,-0.367865,0.973716,6.985860,9.041845,2.490132,9.569781,1.679346,-7.406118,5.886496,-2.361454,-5.080566,2.566640,-3.247562,1.483222,-3.545769,-7.520312,-2.319646,2.094536,5.540490,9.745332,2.742803,1.255321,-3.768240,5.491652,-9.649056,5.383672,-6.209666,-6.309188,1.736597,-8.546064,-5.074729,3.868116,-2.922046,-7.914861,7.079823,6.790686,-6.366807,9.349805,-2.539555,-7.986677,-3.668413,6.910036,-3.294423,-1.628557,9.964853,5.571514,0.275497,-8.067902,8.182657,6.088346,-9.595660,2.952514,9.676599,-1.976587,2.701592,1.922143,-2.780661,-2.543458,-1.369920,2.483672,-3.602255,9.047703,4.929571,1.683826,-3.440350,9.704220,4.012678,0.584431,-7.348673,-3.461975,-3.866682,7.353571,8.244325,1.566301,-1.302983,3.529998,9.286415,-6.777563,3.473538,3.235162,8.490967,-4.768931,6.635201,0.585587,2.563239,-0.552161,9.323489,6.089918,5.680457,-9.615099,5.706204,-8.312729,-4.698090,4.083693,8.940146,1.248010,6.121991,2.690039,1.801718,-0.154223,5.298475,-0.705125,8.006263,8.335495,-7.941141,-9.676184,4.350910,-9.493931,-8.296892,5.811056,-0.960926,-2.753166,0.606338,8.454727,-5.342303,2.544284,-1.565303,5.307078,9.664988,-2.004725,-9.969373,7.261338,-5.591840,-7.634302,2.069740,-3.836789,-9.244695,-2.154255,-4.374747,9.010536,1.251581,-3.387443,-6.605232,7.466416,-5.231812,-3.933373,8.440189,6.525636,6.910653,-3.123752,1.377267,9.769000,1.020456,2.417807,0.337586,-0.493521,-7.791456,-3.753807,-8.668351,-9.642048,0.327745,-1.073700,9.005634,-0.229497,3.937204,2.999714,3.541562,-1.864627,-0.056944,0.786654,-1.935272,7.987954,-2.934364,-2.932094,4.790443,-0.292558,8.538681,7.284028,-1.632495,5.878216,-0.676766,-7.583875,6.175672,-1.503416,8.777579,5.891539,-2.991513,-2.857310,-8.563331,2.280766,8.501202,8.236332,-4.299841,5.038512,-1.585648,-8.609502,-3.644497,3.201053,-3.245797,9.737458,4.918322,5.374188,1.870535,-0.578698,-9.176306,-6.282137,1.940023,-3.000469,-9.158590,-8.938815,0.417219,-0.231451,-4.597086,8.863115,3.041079,-9.641686,-5.098340,-3.416683,5.824930,5.190829,2.927552,7.264623,1.249891,-2.561268,-7.601194,4.078415,-4.357099,8.148302,9.912984,9.223769,6.335235,0.264381,4.448074,-3.034527,-3.023021,0.567933,7.974805,5.533452,-6.847616,-9.745175,-6.265137,-5.414043,9.706278,6.047006,8.597435,-4.774421,-9.071541,-4.537459,4.110349,-4.261961,-4.549738,0.742656,6.235936,1.678752,8.286073,-8.469512,6.851035,-2.098759,-7.471497,0.505228,-9.583111,-4.826478,2.135924,-5.630734,9.929752,-9.580205,-2.359939,2.570812,-7.775950,-7.547709,6.288153,-3.432333,7.088300,8.614882,-9.846889,9.956616,-2.560605,-6.823684,-2.430916,0.717154,7.362266,-6.764157,8.676186,4.593852,-7.621469,2.040524,-4.558266,-3.561683,-4.078522,7.812035,-1.971938,7.724273,2.650950,-4.597973,7.521155,4.378905,0.483137,-5.254071,-6.984728,4.210141,0.500913,-2.328862,-6.551577,-6.376516,-2.745836,9.914077,-2.009464,-9.854419,-1.430228,-6.582643,-7.566943,3.901303,1.725031,-3.237606,0.437138,-7.356273,9.550893,7.718267,5.378605,-6.558920,7.201828,-1.760833,7.121969,4.113665,9.746021,0.702772,-4.023161,7.676699,-1.595491,3.975651,5.631125,2.603710,-2.232166,-1.286994,-1.458977,0.951152,5.462875,5.171195,-3.415093,-0.844317,-1.107158,7.275676,-1.446350,-4.149985,1.689383,7.756709,5.877008,8.301252,3.807965,3.695258,-9.141452,8.266177,-1.977772,-4.895184,-4.420033,-7.865855,-2.667562,4.310401,4.184543,-4.709283,3.126320,0.224453,-8.842994,-1.120171,9.674425,8.206346,-7.529887,6.340692,4.506806,-1.629373,-7.547231,3.637738,-5.397628,-6.166750,-2.357933,-2.224019,-5.035444,2.572827,-8.426298,-7.892637,3.590981,-5.195073,-7.134620,7.306020,7.607874,9.629239,-3.620910,5.691387,5.920395,-3.154530,-5.921675,7.626495,4.108684,9.725378,-2.695770,6.972598,0.521429,-0.445441,3.052688,1.408552,2.263625,-9.789272,6.383413,-7.473371,1.789864,0.004943,-9.757190,-3.524173,3.307382,3.616253,1.971544,4.574451,-6.690362,0.587405,1.333084,6.370272,3.723451,2.130539,5.728405,-6.894173,-6.955182,-2.534085,-8.452975,-4.370247,-2.695883,-2.503837,-8.419407,-7.109540,2.243729,-5.499487,-2.668584,6.707689,-2.854699,4.247356,-2.946055,-5.304082,6.756184,7.558506,-0.059035,2.546942,-8.182186,-1.743941,6.237789,5.936416,-6.921534,-7.282834,5.361774,7.075630,-3.314737,4.285793,-3.810852,6.674736,-1.057049,9.806487,3.194843,9.096570,-5.526249,-8.809599,-0.946831,-3.670619,-7.058755,-9.891989,-9.261390,7.717953,-2.992830,-9.394192,-0.774456,-3.395409,-7.623384,7.960695,-4.298241,0.155947,5.871789,-2.462281,-7.917080,-9.112598,6.585651,-6.478586,-5.487796,-9.547469,2.128701,6.428147,3.976400,-7.544012,-2.863050,2.446069,8.917745,3.031388,-0.450624,-0.479247,8.256208,5.400695,6.643417,-4.168533,6.692035,-1.350853,9.256868,4.043865,3.314188,9.330581,2.382385,-8.818708,9.635814,3.799078,-6.192562,-2.185210,6.392172,-9.092256,-2.464426,-2.334079,-3.982030,-0.106578,1.918038,-2.738918,3.361947,-3.362822,-5.981175,6.749744,-2.501139,3.549408,2.795081,-9.033469,-4.720862,7.184919,-0.901102,-4.053421,9.434518,-0.857117,-4.320060,7.839479,-8.514832,2.765761,9.999819,2.667068,3.482018,-6.951673,-7.776171,7.223647,9.388690,9.426076,8.991211,-6.476276,-3.018414,2.952393], dtype = "float32")#candidate|5784|(1365,)|const|float32
call_5783 = relay.TupleGetItem(func_384_call(relay.reshape(const_5784.astype('float32'), [7, 13, 15])), 0)
call_5785 = relay.TupleGetItem(func_387_call(relay.reshape(const_5784.astype('float32'), [7, 13, 15])), 0)
output = relay.Tuple([uop_5776,call_5783,const_5784,])
output2 = relay.Tuple([uop_5776,call_5785,const_5784,])
func_5791 = relay.Function([var_5775,], output)
mod['func_5791'] = func_5791
mod = relay.transform.InferType()(mod)
mutated_mod['func_5791'] = func_5791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5792 = relay.var("var_5792", dtype = "float32", shape = (5, 11, 13))#candidate|5792|(5, 11, 13)|var|float32
func_5791_call = mutated_mod.get_global_var('func_5791')
call_5793 = func_5791_call(var_5792)
output = call_5793
func_5794 = relay.Function([var_5792], output)
mutated_mod['func_5794'] = func_5794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_5856 = relay.TupleGetItem(func_2047_call(), 0)
call_5857 = relay.TupleGetItem(func_2049_call(), 0)
output = call_5856
output2 = call_5857
func_5879 = relay.Function([], output)
mod['func_5879'] = func_5879
mod = relay.transform.InferType()(mod)
output = func_5879()
func_5880 = relay.Function([], output)
mutated_mod['func_5880'] = func_5880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3308_call = mod.get_global_var('func_3308')
func_3310_call = mutated_mod.get_global_var('func_3310')
call_5974 = relay.TupleGetItem(func_3308_call(), 0)
call_5975 = relay.TupleGetItem(func_3310_call(), 0)
func_1989_call = mod.get_global_var('func_1989')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_5981 = relay.TupleGetItem(func_1989_call(), 0)
call_5982 = relay.TupleGetItem(func_1991_call(), 0)
func_3726_call = mod.get_global_var('func_3726')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_5984 = func_3726_call()
call_5985 = func_3726_call()
output = relay.Tuple([call_5974,call_5981,call_5984,])
output2 = relay.Tuple([call_5975,call_5982,call_5985,])
func_6029 = relay.Function([], output)
mod['func_6029'] = func_6029
mod = relay.transform.InferType()(mod)
mutated_mod['func_6029'] = func_6029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6029_call = mutated_mod.get_global_var('func_6029')
call_6030 = func_6029_call()
output = call_6030
func_6031 = relay.Function([], output)
mutated_mod['func_6031'] = func_6031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_6098 = func_55_call()
call_6099 = func_55_call()
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
call_6104 = func_2113_call()
call_6105 = func_2113_call()
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_6107 = relay.TupleGetItem(func_2521_call(), 0)
call_6108 = relay.TupleGetItem(func_2522_call(), 0)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
call_6130 = relay.TupleGetItem(func_601_call(), 0)
call_6131 = relay.TupleGetItem(func_603_call(), 0)
output = relay.Tuple([call_6098,call_6104,call_6107,call_6130,])
output2 = relay.Tuple([call_6099,call_6105,call_6108,call_6131,])
func_6132 = relay.Function([], output)
mod['func_6132'] = func_6132
mod = relay.transform.InferType()(mod)
output = func_6132()
func_6133 = relay.Function([], output)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_6211 = func_4323_call()
call_6212 = func_4323_call()
output = relay.Tuple([call_6211,])
output2 = relay.Tuple([call_6212,])
func_6224 = relay.Function([], output)
mod['func_6224'] = func_6224
mod = relay.transform.InferType()(mod)
output = func_6224()
func_6225 = relay.Function([], output)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5697_call = mod.get_global_var('func_5697')
func_5698_call = mutated_mod.get_global_var('func_5698')
call_6250 = relay.TupleGetItem(func_5697_call(), 1)
call_6251 = relay.TupleGetItem(func_5698_call(), 1)
func_4605_call = mod.get_global_var('func_4605')
func_4608_call = mutated_mod.get_global_var('func_4608')
var_6254 = relay.var("var_6254", dtype = "float32", shape = (1365,))#candidate|6254|(1365,)|var|float32
var_6255 = relay.var("var_6255", dtype = "uint16", shape = (210,))#candidate|6255|(210,)|var|uint16
call_6253 = relay.TupleGetItem(func_4605_call(relay.reshape(var_6254.astype('float32'), [455, 3]), relay.reshape(var_6255.astype('uint16'), [35, 6]), ), 4)
call_6256 = relay.TupleGetItem(func_4608_call(relay.reshape(var_6254.astype('float32'), [455, 3]), relay.reshape(var_6255.astype('uint16'), [35, 6]), ), 4)
func_619_call = mod.get_global_var('func_619')
func_622_call = mutated_mod.get_global_var('func_622')
const_6262 = relay.const([[-3.599780,6.918448],[-4.141596,0.628802],[-7.672465,-0.505719],[-8.103418,-0.539153],[6.680535,0.474638],[5.991781,-6.478105],[1.545698,8.456960],[1.257054,-8.719814],[-6.069943,-3.028431],[-9.123351,-8.005675],[8.234055,4.799874],[-0.527777,-7.124831],[5.020438,8.649400],[-6.999509,9.606106],[6.241830,3.962166],[7.330781,5.306978],[3.863446,-0.883178],[2.944735,-2.606728],[5.708940,-6.101852],[3.018028,5.390574],[-5.937369,-3.402903],[4.822913,-5.852307],[-0.880938,0.261460],[8.678784,0.118286],[-4.860673,-0.601132],[2.405089,-4.384543],[6.066465,-7.782701],[-5.269738,0.526225],[-4.268288,2.357983],[4.084160,-7.629718],[5.578451,9.884711],[-2.318818,1.220075],[1.838283,-0.668360],[-2.368062,1.451711],[7.457816,-7.724861],[-8.355472,-2.751461],[7.865597,-6.683253],[9.808632,-3.708609],[-5.688698,8.710574],[4.183392,-4.504371],[4.850464,9.350838],[8.169754,1.935893],[-8.254818,-1.468040],[4.217860,3.375289],[-8.136740,5.965016],[-1.991505,-2.192027],[7.819794,-4.565516],[-8.508998,4.552509],[4.108051,6.609200],[-6.194958,-4.137229],[0.502066,2.979294],[9.219852,4.777581],[-4.188438,-2.403583],[5.303009,2.014274],[-1.345669,0.772399],[-0.358123,-3.060624],[9.244657,9.504277],[-2.224988,-2.544183],[-4.633227,-3.696647],[-7.843536,-5.412010],[-1.088739,3.514419],[4.460328,5.073996],[-0.145160,2.152909],[9.191572,7.821151],[8.488447,-4.630361],[-1.692745,4.608352],[-7.901427,-1.569582],[-1.887418,8.778035],[6.707359,-9.236137],[-3.888073,4.647655],[-9.220164,8.916331],[-6.741197,-5.261018],[2.148215,-0.201336],[0.685276,2.434802],[1.729976,-3.418558],[-4.326725,9.123320],[-8.821378,-8.124873],[7.268800,-9.271978],[-0.876779,0.675639],[-1.935739,3.840175],[5.088487,7.551251],[5.446943,-8.269372],[-0.994247,-6.401713],[6.999318,9.340060],[0.891290,-6.556482],[0.403663,-3.649978],[-8.965060,-3.318110],[4.064206,7.966926],[7.307645,7.143626],[7.440361,-7.837075],[-8.248450,-1.763771],[-7.360849,-9.180097],[1.893740,-9.233539],[5.535221,4.464178],[-1.457164,-3.815620],[1.847537,-3.799146],[-9.123541,9.738640],[-0.659744,9.241859],[8.158646,-8.544264],[0.267041,2.734235],[7.803034,8.718881],[9.975575,-9.039224],[8.293608,9.156067],[-0.383862,0.890278],[-7.473477,-6.972556],[-7.222484,6.370911],[8.631165,8.962672],[-3.352106,-4.080973],[-6.744230,-9.451705],[-0.372700,-5.626475],[1.600063,-1.352864],[9.673974,-0.651824],[-0.237308,-0.239404],[5.635434,-2.271753],[5.344065,9.108603],[8.787812,8.549395],[-3.980910,4.996992],[7.557858,-7.679129],[0.964124,-3.555868],[-5.880639,-5.756396],[-6.449669,-4.694846],[4.437648,-6.905565],[-7.456527,-3.585119],[3.092780,-6.602867],[-9.310494,-3.249013],[3.346312,-1.419719],[6.060337,5.123240],[-2.787993,7.763374],[1.301359,-8.696105],[-9.604330,5.243073],[-8.314440,-1.883660],[-8.285769,4.979121],[-7.113242,-2.525042],[-0.437953,2.709293],[4.847567,-2.367857],[-1.117809,-1.078484],[1.387665,-3.775877],[-8.385435,-9.223385],[-2.398404,-6.746081],[3.911428,5.498635],[-3.421564,6.906794],[-1.384239,-1.602119],[-9.876007,1.461733],[-8.644036,-6.643569],[-2.264650,-5.214848],[-9.070638,-8.134774],[7.688281,0.527141],[-3.576078,3.250711],[-7.350553,-3.820415],[3.645337,6.462778],[0.807291,-0.398841],[-4.411275,4.976029],[-0.748962,6.312372],[-9.363456,4.593784]], dtype = "float64")#candidate|6262|(154, 2)|const|float64
call_6261 = relay.TupleGetItem(func_619_call(relay.reshape(const_6262.astype('float64'), [7, 11, 4]), relay.reshape(const_6262.astype('float64'), [7, 11, 4]), ), 0)
call_6263 = relay.TupleGetItem(func_622_call(relay.reshape(const_6262.astype('float64'), [7, 11, 4]), relay.reshape(const_6262.astype('float64'), [7, 11, 4]), ), 0)
output = relay.Tuple([call_6250,call_6253,var_6254,var_6255,call_6261,const_6262,])
output2 = relay.Tuple([call_6251,call_6256,var_6254,var_6255,call_6263,const_6262,])
func_6274 = relay.Function([var_6254,var_6255,], output)
mod['func_6274'] = func_6274
mod = relay.transform.InferType()(mod)
var_6275 = relay.var("var_6275", dtype = "float32", shape = (1365,))#candidate|6275|(1365,)|var|float32
var_6276 = relay.var("var_6276", dtype = "uint16", shape = (210,))#candidate|6276|(210,)|var|uint16
output = func_6274(var_6275,var_6276,)
func_6277 = relay.Function([var_6275,var_6276,], output)
mutated_mod['func_6277'] = func_6277
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6366 = relay.const([[[-0.919844,5.041357,7.968602,1.537455,-2.100357,-9.747697,-2.426309,7.779096,-4.075161,-2.573712],[-1.068990,-6.834783,-0.675468,-8.090288,0.177101,-9.070955,-9.369388,2.727312,-8.906518,-8.672745],[9.919734,4.499414,9.492325,7.378207,-1.378227,-2.980945,-8.506514,4.041199,-8.863948,6.044719],[4.900928,2.892972,0.217714,0.413101,-1.848081,1.660179,-7.095325,2.597911,9.344859,0.616250],[-8.081261,-4.308153,9.078466,3.852987,-6.015715,2.272401,-5.343742,4.103726,0.824478,2.456300],[1.769781,5.432679,4.059576,2.820659,5.675817,0.277653,-7.941666,2.785057,8.867491,9.701407],[8.389042,2.948949,-6.298010,-5.865433,-1.707218,4.250522,-0.527208,6.441197,3.080883,-0.888575],[-7.865248,-5.610262,3.416939,-5.515761,1.726792,-5.840201,-5.279909,-1.004906,5.960545,3.100769],[6.402697,2.688842,7.931786,0.342341,9.772279,-1.294276,3.466818,5.318882,-8.666401,2.090990],[7.371731,-1.117962,-8.144409,-7.055871,9.283325,1.215914,-1.729056,-6.260949,2.623091,-3.245535],[4.746061,-3.273218,-8.547260,-1.039674,6.052457,-0.269129,4.577193,8.595587,3.860353,7.687931],[9.580537,8.752224,9.845888,2.043358,-0.339546,-6.364001,-7.782864,-0.009256,-3.113065,1.479931],[1.590459,-6.969796,5.364544,-4.011716,-0.280727,5.581532,-0.734037,8.430398,9.078230,-2.274914]],[[4.310493,8.577193,-8.963695,-6.124690,-5.795839,-7.311644,6.186834,3.887905,-3.743628,0.415752],[4.594505,-9.053591,-6.512061,-4.451955,3.460134,9.815414,0.328341,-4.954958,-4.939169,-9.545050],[1.503852,-3.927964,6.364568,7.607455,8.112812,-6.240589,4.713597,-0.853894,6.302386,6.597087],[-1.575228,8.597323,-3.453884,5.858039,-8.564582,7.797036,-0.724818,-4.379170,3.498748,-0.957864],[-9.817335,-3.520414,7.987068,4.136646,7.652591,3.817180,5.625812,0.209795,1.383700,2.801553],[-9.897346,9.309784,-7.552948,-8.351202,9.472736,3.130404,-5.314518,0.329701,-5.792481,-8.225211],[-6.388540,3.595174,-7.853554,8.247170,8.649689,5.781784,2.071585,9.438624,-4.821840,-2.927759],[-3.331070,2.896145,3.679324,-9.405601,-1.544909,0.842181,8.242873,-5.751431,0.785015,6.615444],[-7.802238,-2.063940,3.992539,-8.075173,5.284344,6.861427,-8.778471,-6.858865,9.290307,5.825771],[7.976752,-1.779031,-0.540449,-9.861371,-2.866242,-3.603320,-1.065621,7.414864,-2.884212,4.450185],[-3.499998,6.573522,-1.921810,-4.790103,2.054638,5.747817,-3.100262,0.221341,-2.806808,-5.983249],[8.056294,-5.588032,2.604848,0.735014,3.223678,7.174218,3.556065,-9.731900,0.184607,0.816522],[-0.696169,9.118885,9.173629,1.855655,3.856438,-8.076999,6.236915,-0.506452,-4.866908,-3.602118]],[[0.469626,8.932149,7.571560,-9.652365,-5.433285,7.142995,-7.616963,5.294019,1.485638,7.493739],[-1.261555,2.607478,-6.636864,-8.801382,1.480748,-2.491827,0.834103,5.697248,3.637648,0.896781],[0.277856,6.168545,4.371757,8.955865,7.364104,1.676469,5.004948,1.090162,3.540689,-5.686348],[6.834497,0.382186,0.304043,2.238895,-1.213057,-8.799769,2.676999,7.518816,5.253753,9.399550],[1.066500,-2.003563,4.894756,5.808759,-1.125853,3.647885,-9.873718,-7.906907,1.505693,3.969849],[-5.318230,0.836115,1.475948,-9.351642,-4.001359,2.099383,7.000245,-4.466102,-5.621533,6.144524],[7.270925,-2.309945,3.481583,2.550714,-9.283683,-7.339335,2.369775,-1.608614,-1.890260,0.526331],[-3.973008,-8.742468,-8.403113,-4.445218,-3.119788,5.454368,-7.029465,-6.758931,-0.517410,-2.317917],[-5.536152,1.576405,-8.553360,-1.929337,2.612778,2.257228,-2.674922,4.035605,-4.938644,4.722774],[1.004900,6.116202,-3.596628,0.056661,1.623433,2.293706,-5.617651,8.013518,-9.575839,2.494898],[6.956900,6.447531,-8.972348,4.293907,-0.834000,-9.662729,9.477706,8.195936,5.319141,6.730822],[-5.009791,-7.720448,7.087619,-0.270253,9.034095,9.518342,-9.265212,-9.244066,1.428032,-3.297588],[5.734712,1.886650,-2.804161,-1.039500,2.466070,-1.166896,5.694436,-6.908225,6.125055,-1.011564]],[[-7.531997,5.625057,8.838748,-7.283753,6.364960,-1.934780,2.353370,-2.229454,7.457240,0.127163],[-6.043525,-0.993795,-7.125429,-2.282567,4.688983,-8.902202,6.738030,5.850868,4.430713,7.252200],[-7.969076,3.545421,-4.995993,6.626127,5.453763,-8.338137,-3.098698,7.891115,-4.616845,-1.408249],[-5.646114,4.439180,1.324311,-4.783351,-0.666119,0.209294,-6.410352,-4.008077,-9.484743,-3.248896],[-9.589110,3.051909,9.390660,2.606117,1.227968,-3.758038,-4.177913,4.457082,-5.256536,5.235675],[0.344810,6.934179,1.508481,-8.283583,7.537449,7.271978,-2.487372,-5.101646,3.904123,2.927104],[-4.929111,9.833462,3.662621,-8.102964,-3.723831,7.809221,-3.799365,2.712067,-1.609952,-4.686231],[-3.982317,-1.692081,-7.215355,9.396825,-7.303490,-6.986836,-9.800362,-3.570771,-6.785685,9.702660],[-3.057893,9.961146,0.586905,-0.211726,-1.462174,1.742249,1.904731,3.618298,-4.386785,2.583484],[3.353506,9.417801,1.706959,-4.919819,-4.879831,6.095415,-3.803235,-6.351392,3.828930,3.252948],[8.783764,4.249364,-5.373673,-0.718631,5.798802,-7.838907,-4.134245,-5.076740,1.822647,2.106096],[-4.049191,-8.092597,2.968903,-8.963426,0.187840,9.717573,-8.133051,3.160733,8.173064,5.878603],[-7.459618,-1.103946,-1.511504,-7.780947,2.796262,6.511055,-2.141419,-1.266993,-9.496968,1.502327]],[[-0.112243,-7.881185,6.329965,-9.874417,-0.264508,8.003543,3.813373,2.961191,-7.052501,0.514730],[3.976416,7.234290,-4.350028,-0.807595,-8.507353,-9.323659,-0.157047,4.025423,1.014468,-3.123616],[2.454719,-0.662392,7.113237,-0.833125,4.580169,2.557123,1.816870,5.251374,-7.834370,-1.920152],[0.447336,-8.287892,-8.622749,8.649046,1.255045,9.815892,5.571572,4.253526,3.775930,-1.906131],[2.925779,7.880498,-1.313150,-9.639428,-5.896217,7.670656,9.300120,3.765265,2.576880,1.691883],[2.484527,2.458268,-3.398648,4.469448,1.951356,5.570950,-1.267548,5.717201,1.540583,8.182513],[-7.324479,6.834324,-6.910311,1.768315,6.421601,-8.448547,5.887864,1.322480,-8.817077,1.956919],[-1.302833,-3.646904,-7.010415,2.756219,8.973438,0.990823,0.212348,-2.793144,-6.913455,0.308225],[-5.887304,-6.836941,9.722472,-6.463977,-7.364849,7.166643,-5.568717,8.287148,7.176727,-6.991134],[-2.535133,1.553610,-9.129747,1.277743,8.825951,-8.103227,8.441896,-9.531368,-2.178207,-8.019141],[-6.184531,9.649958,-4.138638,8.897993,6.114889,-7.128508,-5.804520,0.252970,3.848186,2.917182],[2.796390,5.822172,-1.062453,8.784446,-8.996345,1.587150,-4.494113,2.420834,-5.544129,-0.918360],[-8.256030,5.254084,-7.048139,8.537049,8.022209,1.701410,-2.693761,3.531720,-9.580813,5.670242]],[[9.945975,1.791882,0.624604,-3.334145,-5.503332,5.992915,3.692520,2.082107,2.461190,-5.824233],[0.321625,7.396023,-9.171433,-0.037893,3.628650,5.922196,-6.658766,-0.199691,0.474929,6.804905],[-4.653468,-6.299679,8.995672,0.121120,-9.425408,-0.331942,2.652959,4.522313,-7.923196,-7.886648],[4.627122,-7.668407,1.018965,7.380476,3.593979,-2.232790,1.495264,-3.659958,-2.820621,5.653847],[9.336348,-9.291161,8.167921,-6.668266,5.953830,8.582877,-2.486685,-7.030405,2.189033,-0.380498],[1.475630,-2.120568,1.029309,5.849697,-9.715101,-9.652701,-7.884943,9.996822,-9.482826,-5.299481],[-6.471982,-9.428816,7.816197,-8.464813,-6.315625,-3.545496,2.902286,-7.039760,3.331763,-8.263887],[-4.143287,8.443930,3.589450,-8.403715,-9.894394,6.978066,-2.122961,7.378562,8.430842,-0.702363],[-5.265945,5.968961,4.359240,-6.862145,2.160989,6.884376,5.612565,3.903815,0.379033,-0.897642],[-9.200900,-6.743184,4.443831,-4.179185,-4.869733,-8.845970,0.805927,-1.392572,7.593621,0.435892],[-5.243811,-2.515405,8.988279,-7.845912,2.865123,-9.003277,0.472611,-6.614244,-7.884432,1.385061],[-6.327040,3.594617,2.064602,-9.064252,-3.478482,9.925887,-7.736762,-1.683079,7.734505,-8.695121],[0.609740,-0.822731,-4.313112,5.431581,-3.944523,8.011833,-7.542620,-1.424950,-5.722300,-9.039202]],[[4.126367,0.257751,4.682682,1.169207,4.809991,2.616126,3.880937,1.581305,6.381096,-4.146654],[0.658564,-3.447338,2.529417,0.216995,0.367978,-5.615081,3.217516,4.674008,-2.074265,-4.275151],[-7.546377,-8.251566,6.577722,0.685926,5.312389,-9.659349,1.860346,-9.718928,-3.169095,9.998661],[-7.530668,-8.450752,1.776133,-7.427126,-5.149589,8.645890,0.691513,-2.815701,4.258319,3.164503],[-2.564071,5.264282,-1.244413,-2.640162,6.116729,-5.739776,7.345825,-9.349975,-1.832497,-8.941313],[8.325602,-4.174379,-7.146835,8.561717,-9.307724,-0.478575,4.847628,7.744551,9.459851,-3.428786],[3.586690,-7.446809,0.483153,7.764940,-6.178193,-1.253458,-6.581658,-8.968134,-3.289445,-1.546957],[-0.789047,0.701218,3.779931,2.827049,-7.841170,3.913489,-4.111990,-3.346172,-8.389893,-0.860253],[-9.427725,-5.476517,1.375858,6.138704,8.177675,-3.768927,-7.012872,3.274505,-9.212586,-2.058757],[-2.196823,-9.025475,-1.473166,-1.664068,1.935557,8.637980,5.104466,-2.769045,-5.630505,-2.670373],[6.936053,9.906080,-3.451981,7.562040,0.166684,2.007791,-6.996424,-8.787352,1.128171,5.364378],[9.020027,-7.936020,5.828425,7.906472,-0.012650,1.799390,4.122105,5.686088,6.472216,-8.409080],[-5.514662,-9.342421,-8.566286,4.709928,1.921450,-2.122308,1.389514,8.474929,2.404619,-4.138070]],[[7.385345,7.791799,-9.332707,-8.964055,-4.597241,-7.480208,9.713388,4.090981,-0.461994,4.733105],[1.511855,-5.408474,-9.361676,2.180191,3.073436,1.590738,3.032403,8.324570,3.462926,6.657659],[-4.933366,-4.359800,-2.780761,5.594395,8.134171,-6.528076,-3.121111,3.925520,3.623849,-1.191055],[2.893367,1.953868,8.170968,-5.224849,-8.591766,-8.192038,-5.949496,-4.718361,-3.243306,1.121714],[-4.875903,-2.990320,-5.365033,2.371281,1.879859,-3.198382,0.677751,1.878256,-6.072141,4.050938],[-8.664661,-1.970928,6.070976,6.290160,-9.816029,0.675539,8.139905,-4.603609,8.021627,0.480707],[4.252373,0.778260,0.939822,3.156061,4.970254,-4.637072,-9.420677,-4.048063,-0.498173,2.087907],[-3.656436,4.537269,3.669789,9.925664,-7.951342,8.992456,7.546549,-2.235577,1.990367,-0.610550],[0.980759,-3.626909,8.310166,2.530712,0.481785,2.199295,5.296756,0.403086,-1.258036,9.196967],[2.037375,-0.775642,-5.244376,3.194313,7.203301,-4.262732,-4.366002,-2.226071,4.394179,8.787929],[2.902960,-3.606546,-8.494873,9.412951,-7.434293,9.557450,7.494003,-8.705766,-6.740808,6.170833],[-9.095679,-0.814895,5.286777,-1.538538,-9.636214,5.396441,-4.342053,-7.777831,8.008698,2.682579],[9.045235,6.164546,1.741631,-7.757723,4.628210,3.315949,8.111910,-0.993706,-3.823228,1.593099]],[[7.648281,-7.309371,-4.936254,-9.850771,-7.897536,1.635663,-8.304871,-1.454438,1.033915,5.163759],[2.952673,-9.965742,2.745458,6.204493,8.086037,-5.273618,4.196592,3.307951,-1.543060,2.421831],[2.382242,-1.882793,1.509867,8.569666,5.617026,7.851707,6.808871,7.022615,-7.061527,5.742167],[0.558782,-9.615354,-2.498767,-3.741497,2.569616,-1.763383,-9.901336,-3.730441,4.991807,-8.884796],[1.704740,9.691363,2.968189,6.603193,9.766866,-8.704567,-1.477406,6.153237,-3.442817,3.814304],[8.481736,-0.125015,-7.253204,6.305473,8.218824,-7.707286,6.597432,2.519509,-1.822475,2.470196],[9.794549,-8.279759,-3.987359,0.055361,7.649470,7.486785,-1.284029,9.902996,-6.319528,-1.654677],[-9.440000,-8.248343,1.054045,6.787529,-7.001663,2.609950,-4.129991,-8.063474,-0.081876,4.504972],[-3.201720,-0.437568,-8.200131,-6.114983,9.827615,-3.329617,8.240340,6.195097,0.504605,8.753525],[2.369585,9.055823,-9.670568,2.810874,2.701288,9.451274,3.126433,-5.997061,9.764272,-5.619284],[-6.388259,-2.477073,-9.592693,-6.452276,-0.599374,6.710292,-4.749949,4.602578,-1.546362,8.019129],[6.051486,-1.049882,0.663073,5.578462,2.659103,5.973428,-3.748732,8.634600,0.287378,-9.385539],[7.649781,-9.572035,4.280516,1.894543,-6.715048,6.542859,6.887931,-6.412287,0.389397,9.890171]],[[0.106761,-1.277055,-4.073444,-9.030499,0.060502,-7.529915,8.300463,-2.688377,-1.043310,-1.245918],[1.056564,0.004676,7.120763,8.623554,7.180241,3.363231,9.508006,-6.070716,-3.218350,0.483533],[-3.651520,-4.961693,-0.501417,-0.124982,-0.854029,6.957409,-0.919958,-9.455657,-5.091074,-9.817089],[-5.430803,4.653909,2.443750,-6.705454,-0.166615,5.903432,8.706322,-2.316936,0.913834,-2.864312],[-0.810761,6.446109,-2.130978,-4.265211,3.253333,-2.485003,6.696462,7.831220,-2.293878,-2.476402],[0.605018,6.610853,9.569977,3.522936,-3.774689,9.378344,2.863114,3.445746,-6.140837,4.705819],[6.530428,-3.317747,5.564602,2.540232,9.639542,-2.760473,-3.904722,8.331859,-3.098418,-4.539046],[-4.386282,7.826581,-7.849930,-5.828919,-3.996002,-0.812952,6.856970,-6.178775,-3.360267,-4.482626],[8.437203,-9.729465,-1.144700,-2.745176,-9.028604,2.929359,-2.093044,0.413735,-0.882484,2.247457],[9.755973,-7.412597,-2.407849,0.218338,-4.161017,-6.914480,-2.025535,9.834566,-5.990575,8.938420],[-0.246173,-3.202154,7.833020,8.901623,7.886268,3.426869,-8.868963,1.376956,-7.193398,2.880824],[6.386082,2.197672,1.047776,-6.422091,-6.402804,-9.325075,7.546560,2.094729,-3.180353,-1.278824],[9.476213,-4.730414,0.490495,6.875467,-5.066328,-0.295225,-7.990473,-3.474194,9.852907,-1.161312]],[[-2.074909,-0.729537,7.963404,2.145469,6.574973,6.771298,3.115267,-4.066504,6.253753,-5.791964],[2.303937,5.022724,-4.016744,8.716971,2.341741,0.426231,-2.352625,8.344413,3.243879,-7.641484],[-4.284136,-4.753298,5.498549,-4.111223,-2.803916,6.303143,7.929671,2.299199,-6.528083,9.165633],[-2.066882,0.028620,5.061514,-7.272117,9.617335,2.269289,-5.536285,0.189761,-7.292265,4.806549],[0.873803,-1.984088,3.529954,-8.975541,-2.506079,5.706336,8.879198,-5.320307,9.382455,0.970997],[2.106505,-0.671467,-7.754254,9.802905,1.485646,0.460858,7.225673,-7.785613,-2.460018,-0.960343],[-6.604262,2.189842,0.560274,-0.163647,0.240615,3.924454,-2.947101,-3.798343,-6.922970,-0.847520],[-9.653739,-0.257679,7.250185,4.605814,6.302804,3.476269,3.836596,0.961306,-6.416755,-8.905128],[-8.138972,-2.187910,1.681563,0.598323,-3.065732,-1.900445,-1.068576,7.868276,6.924497,8.611317],[-9.995530,-9.287207,2.390187,-4.282148,-5.061767,2.596718,9.615222,6.051333,5.245590,-4.320283],[-8.036268,-7.070717,2.388651,1.366372,-8.836646,6.732227,8.384469,2.880307,-9.589686,-3.041178],[-4.145782,0.233549,9.156145,-9.747280,4.972943,-8.292981,7.795706,-0.519486,-2.072470,8.417644],[-1.122234,-7.695504,9.117955,9.079824,0.781433,-4.784242,4.680155,7.452818,-3.252628,2.376139]]], dtype = "float64")#candidate|6366|(11, 13, 10)|const|float64
uop_6367 = relay.rsqrt(const_6366.astype('float64')) # shape=(11, 13, 10)
output = relay.Tuple([uop_6367,])
output2 = relay.Tuple([uop_6367,])
func_6375 = relay.Function([], output)
mod['func_6375'] = func_6375
mod = relay.transform.InferType()(mod)
mutated_mod['func_6375'] = func_6375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6375_call = mutated_mod.get_global_var('func_6375')
call_6376 = func_6375_call()
output = call_6376
func_6377 = relay.Function([], output)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1747_call = mutated_mod.get_global_var('func_1747')
call_6381 = relay.TupleGetItem(func_1745_call(), 2)
call_6382 = relay.TupleGetItem(func_1747_call(), 2)
func_2931_call = mod.get_global_var('func_2931')
func_2934_call = mutated_mod.get_global_var('func_2934')
const_6405 = relay.const([-4.667302,7.906887,-0.508164,4.289536,0.771215,-3.809056,2.771740,-0.265255,0.658523,6.358718,-5.999142,-9.168958,-1.144505,0.376482,-7.914479,3.372844,-6.792101,-0.246853,8.358135,-8.721600,4.839345,9.410121,-5.014535,8.479099,4.893381,-0.389115,-6.733304,-3.966643,-2.829042,-9.048965,2.347409,1.757550,-8.886591,-9.028281,3.570321,-8.255296,4.779853,8.763564,0.277643,-0.044446,6.826589,3.238735,9.766053,-6.875222,2.252554,2.318128,-6.774328,-2.713236,-7.370199,-4.725002,-6.853927,-9.343888,-3.852523,8.841193,-0.009630,6.472602,-7.832185,6.491816,-4.629314,0.809432,-3.904302,-3.450657,-1.245262,6.713995,9.805917,-4.502585,-6.552783,-7.785749,8.158074,2.319961,9.377863,3.960560,4.174951,4.173966,7.749107,6.868325,1.668600,-1.675401,-8.448046,-3.606743,-1.575353,8.575381,3.770876,7.356818,9.695915,-1.181795,6.529638,-2.060120,-8.554263,0.087500,1.756037,6.986569,-6.638912,-4.877364,3.023595,2.324979,0.807232,5.303156,-0.384169,3.899932,6.513055,-6.947080,-2.071511,1.719952,-6.185652,-4.088603,8.867479,3.246607,9.816829,-0.709447,-6.770611,-6.814646,1.135400,2.191877,5.261302,8.578737,-1.719158,9.010590,0.413194,-7.568906,0.438264,8.119494,-9.929228,9.056324,-7.171831,3.103317,5.076632,-3.067884,5.526682,-4.832723,5.791752,3.272541,8.863798,-2.185309,2.779318,-2.504844,3.038674,1.334979,-5.841339,6.912053,-3.631388,-8.865558,4.937641,-8.241751,-6.246033,9.320490,6.876078,9.532248,0.476185,5.181014,-8.006638,-9.336542,3.764668,-9.261721,-2.491677,-6.227463,-2.710103,-9.229914,3.985666,-2.017092,8.550768,0.094332,-6.733344,8.842222,-9.072700,-1.354243,-0.370258,-0.119892,-4.010935,-6.421933,3.993057,1.496010,8.960646,2.153500,5.168163,-6.141993,2.542322,6.550414,-7.839918,3.539866,4.378887,-3.824236,-1.566471,2.686646,9.091864,9.754513,-4.276664,-2.947702,-5.399075,-5.816139,3.911082,-6.367881,7.689465,-7.564318,-9.088172,-7.011183,0.638155,-6.090594,-2.863361,-3.816139,8.650623,-4.854966,-2.797278,2.703854,-9.773513,-7.288365,-7.422078,-5.307382,-3.302729,4.251893,-6.731942,-5.980673,-9.025518,-6.634151,-9.780328,-2.667211,-4.670793,6.123499,9.947347,-4.114158,0.433101,0.249676,9.485749,9.988572,-9.108618,8.189723,-6.512644,-3.255416,-6.469797,3.444595,5.554103,-7.532489,-8.730472,1.568614,-4.216487,7.447551,-7.232709,3.139776,-6.087741,-6.000563,8.280950,-9.501181,5.516348,6.412468,4.611898,0.464078,-1.951758,-2.952386,3.802948,5.650972,4.442301,5.290684,5.589915,-9.410348,5.705096,6.677965,-2.500434,1.089104,-2.336258,5.410544,6.930779,0.205269,-9.126017,8.899874,4.566132,8.173986,9.413394,-0.790682,4.828749,8.011548,4.605792,0.384597,-9.149604,-1.584442,2.658156,-8.940657,-5.832987,0.040374,1.382128,-3.049826,7.542071,-2.685182,0.776089,4.577623,0.299048,8.552599,0.662466,-2.747681,7.821615,0.661429,-6.437526,-4.325664,3.495940,1.742382,-0.481604,7.184699,4.063320,-7.221411,-4.142939,8.326434,-6.465886,5.650636,1.113523,8.414472,-8.915551,-3.097681,-2.725684,8.362950], dtype = "float64")#candidate|6405|(308,)|const|float64
call_6404 = relay.TupleGetItem(func_2931_call(relay.reshape(call_6381.astype('float64'), [7, 11, 10]), relay.reshape(const_6405.astype('float64'), [7, 44]), ), 0)
call_6406 = relay.TupleGetItem(func_2934_call(relay.reshape(call_6381.astype('float64'), [7, 11, 10]), relay.reshape(const_6405.astype('float64'), [7, 44]), ), 0)
output = relay.Tuple([call_6381,call_6404,const_6405,])
output2 = relay.Tuple([call_6382,call_6406,const_6405,])
func_6419 = relay.Function([], output)
mod['func_6419'] = func_6419
mod = relay.transform.InferType()(mod)
output = func_6419()
func_6420 = relay.Function([], output)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6420_call = mutated_mod.get_global_var('func_6420')
call_6465 = relay.TupleGetItem(func_6419_call(), 2)
call_6466 = relay.TupleGetItem(func_6420_call(), 2)
var_6467 = relay.var("var_6467", dtype = "float64", shape = (308,))#candidate|6467|(308,)|var|float64
bop_6468 = relay.not_equal(call_6465.astype('bool'), relay.reshape(var_6467.astype('bool'), relay.shape_of(call_6465))) # shape=(308,)
bop_6471 = relay.not_equal(call_6466.astype('bool'), relay.reshape(var_6467.astype('bool'), relay.shape_of(call_6466))) # shape=(308,)
func_4646_call = mod.get_global_var('func_4646')
func_4647_call = mutated_mod.get_global_var('func_4647')
call_6493 = func_4646_call()
call_6494 = func_4646_call()
uop_6507 = relay.sin(var_6467.astype('float32')) # shape=(308,)
output = relay.Tuple([bop_6468,call_6493,uop_6507,])
output2 = relay.Tuple([bop_6471,call_6494,uop_6507,])
func_6514 = relay.Function([var_6467,], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6515 = relay.var("var_6515", dtype = "float64", shape = (308,))#candidate|6515|(308,)|var|float64
func_6514_call = mutated_mod.get_global_var('func_6514')
call_6516 = func_6514_call(var_6515)
output = call_6516
func_6517 = relay.Function([var_6515], output)
mutated_mod['func_6517'] = func_6517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6224_call = mod.get_global_var('func_6224')
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6556 = relay.TupleGetItem(func_6224_call(), 0)
call_6557 = relay.TupleGetItem(func_6225_call(), 0)
output = relay.Tuple([call_6556,])
output2 = relay.Tuple([call_6557,])
func_6560 = relay.Function([], output)
mod['func_6560'] = func_6560
mod = relay.transform.InferType()(mod)
output = func_6560()
func_6561 = relay.Function([], output)
mutated_mod['func_6561'] = func_6561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4413_call = mod.get_global_var('func_4413')
func_4414_call = mutated_mod.get_global_var('func_4414')
call_6565 = relay.TupleGetItem(func_4413_call(), 0)
call_6566 = relay.TupleGetItem(func_4414_call(), 0)
func_4413_call = mod.get_global_var('func_4413')
func_4414_call = mutated_mod.get_global_var('func_4414')
call_6571 = relay.TupleGetItem(func_4413_call(), 0)
call_6572 = relay.TupleGetItem(func_4414_call(), 0)
output = relay.Tuple([call_6565,call_6571,])
output2 = relay.Tuple([call_6566,call_6572,])
func_6581 = relay.Function([], output)
mod['func_6581'] = func_6581
mod = relay.transform.InferType()(mod)
output = func_6581()
func_6582 = relay.Function([], output)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6648 = relay.const([[[-8.222019,9.155000,-1.299606,-3.394112,5.119707,-1.216551,8.466069],[-7.733447,-6.988487,-8.488778,4.043561,3.419771,-1.118925,-4.944032],[-3.722138,-0.700291,2.380432,-5.177017,-5.464515,-3.003772,-3.696098],[6.768941,-5.036544,2.171358,9.196435,-8.835996,-6.111896,-4.716902],[-0.765466,-6.434620,3.785021,6.362774,3.112900,-6.919861,4.896436]],[[7.142773,1.259630,3.471304,5.409730,-6.561187,-7.721638,3.511490],[2.024623,-7.354751,-1.565080,-0.063786,4.974708,2.260622,9.240465],[-8.202722,-6.136649,-9.291618,3.561510,-9.064881,-3.292294,1.901499],[2.938962,4.594953,-4.348947,-2.360609,7.839540,-6.944195,9.908317],[9.155082,-1.054935,9.116262,9.794793,-1.855493,6.773524,4.636974]],[[-5.415423,1.398688,6.464745,-2.468653,-9.337976,5.430318,8.046672],[-5.003025,1.254337,7.082477,-9.146192,-7.766262,7.248382,-1.814782],[8.504713,-9.812933,-5.025008,0.218721,2.321237,7.702933,9.506037],[0.459467,2.073606,3.381240,1.068426,-3.032867,4.815176,6.088880],[7.050456,3.144247,-9.133635,-5.139173,6.473517,-0.993849,0.546339]],[[-2.832897,-4.663765,8.815427,-7.402434,-2.817687,-3.751252,8.367165],[-2.719587,-6.332482,-8.329325,-5.041518,3.893755,5.558977,9.452692],[4.517800,5.991739,0.344372,0.780957,9.860077,4.221637,0.732516],[-8.192398,3.560126,-5.445678,6.122642,9.959178,8.174527,-3.059220],[-9.297915,-6.124776,6.596118,6.377527,-2.108252,8.550591,-7.243798]],[[4.920003,-3.533084,-6.738658,-8.224776,8.988347,8.075792,-6.545094],[-0.372907,2.887567,-9.974397,-0.917132,-7.044135,-3.546826,2.157446],[-0.796179,-0.905212,1.212236,-3.788821,-4.403822,-1.161807,-2.294245],[-8.159627,-4.229426,5.999839,8.329299,-8.231326,3.791120,-4.763597],[2.967169,-4.373676,1.108655,0.028373,6.072663,0.836026,4.165698]],[[-2.350479,7.343869,-9.550342,2.570718,-5.375334,3.596169,-9.988195],[9.890621,-4.490840,-5.561602,-5.067468,5.193429,1.285561,8.807047],[-1.364210,-1.667945,-3.568592,3.911894,-5.586060,5.986335,-0.820288],[3.481916,6.896896,8.934463,9.157253,-3.924990,4.556331,0.171954],[4.699810,9.436713,8.221377,-7.207784,-0.074784,-4.287445,-5.752961]],[[1.566884,-7.576648,1.105168,1.425974,5.878176,4.584596,-4.499562],[7.308962,8.231154,8.078445,-7.553653,-2.139949,-4.896472,3.545137],[7.614199,-0.754338,-3.392332,4.690943,1.890591,-8.108866,4.084486],[-7.706516,-7.852333,-4.774528,-5.827559,0.906801,-8.597526,5.352265],[-2.475955,-3.233815,-8.973296,-9.028919,6.215348,5.897657,-7.124495]],[[-9.370147,7.955781,2.218494,-8.171195,5.976886,9.859819,-9.703555],[-9.145627,8.429923,-0.949705,0.290604,-4.558423,5.783322,7.803356],[-4.730092,-2.793193,-6.246716,-0.654731,7.046281,2.738846,9.274590],[7.583724,-3.880601,-9.879971,-4.463772,6.633100,3.036358,0.715097],[-7.380544,8.470080,-4.508615,0.213428,2.417520,7.079395,-6.285166]],[[0.050063,3.837659,2.963210,0.135916,5.621704,-0.543957,2.674463],[1.768692,-1.736611,7.071638,-9.257208,3.053641,-5.806916,9.269300],[-5.963725,-5.613345,-5.008093,-5.537148,-3.482911,8.748718,-6.564151],[-1.986164,5.963554,-1.796384,8.605681,-6.174116,-3.788379,9.242330],[-9.958400,-6.178897,9.422220,0.496979,-8.667069,7.624200,8.882778]],[[4.378352,2.167822,9.447702,5.084084,-3.067268,5.839317,-8.681494],[9.268481,4.071549,5.685863,-3.134899,-4.405322,-9.123254,8.806478],[7.802973,-7.692335,-5.591122,2.390769,-8.484886,-5.703418,6.496816],[3.973259,5.457023,-5.279285,1.323505,-0.146535,-0.103771,3.497381],[1.805518,-8.778547,4.062389,6.443760,-2.722708,8.143557,9.389973]],[[-2.344341,6.926913,9.576377,-6.363723,1.314947,5.560686,9.993869],[6.443839,-4.034708,7.557531,2.009990,0.499659,1.800522,1.381444],[-6.862422,-1.842963,-4.290695,6.270278,-8.014454,0.224282,8.736491],[6.838866,-1.711825,4.218487,4.962140,0.138085,6.940557,-6.076769],[3.634888,6.620224,-4.251950,-1.387824,6.066805,-0.062788,3.607361]],[[-6.044813,-8.424728,7.878885,-5.384902,3.687360,9.264517,-2.733176],[6.878477,4.367296,4.657097,7.264259,-9.247702,-9.745951,9.422880],[5.169509,-7.614385,4.187397,1.980157,7.621029,5.062238,-4.039845],[8.075641,0.181272,5.164636,5.521186,5.946790,-5.266035,-2.456742],[2.771448,-1.076834,-7.148885,-3.482686,2.420125,-0.691045,7.392499]],[[-1.514982,3.630258,9.750199,-6.949515,4.954402,0.503037,-0.205994],[2.916765,-8.572878,-4.785629,6.421925,8.831510,-1.620085,-0.381986],[3.497972,-2.825286,4.079019,9.815162,-9.028965,2.353299,-6.326927],[-9.747445,-4.495877,2.603259,1.696352,1.950255,1.341425,-6.134243],[-4.894988,-9.867155,8.657981,7.139200,-1.025288,0.736340,-2.792637]],[[7.338145,2.674312,-4.559362,6.131753,-9.028033,1.109220,1.747835],[-8.786534,1.195460,-0.910480,-4.362425,-5.086927,-4.040309,-6.905852],[-2.729964,-5.882341,5.665358,6.493860,-2.688456,-2.402629,7.368005],[-6.569872,-1.607621,4.158596,1.560193,9.616175,9.578766,2.090205],[2.233199,1.058360,0.627229,0.521098,2.153092,-9.158390,6.346734]]], dtype = "float32")#candidate|6648|(14, 5, 7)|const|float32
uop_6649 = relay.tan(const_6648.astype('float32')) # shape=(14, 5, 7)
uop_6659 = relay.erf(uop_6649.astype('float32')) # shape=(14, 5, 7)
func_1349_call = mod.get_global_var('func_1349')
func_1350_call = mutated_mod.get_global_var('func_1350')
call_6664 = func_1349_call()
call_6665 = func_1349_call()
func_4068_call = mod.get_global_var('func_4068')
func_4069_call = mutated_mod.get_global_var('func_4069')
call_6675 = relay.TupleGetItem(func_4068_call(), 0)
call_6676 = relay.TupleGetItem(func_4069_call(), 0)
uop_6678 = relay.cosh(uop_6659.astype('float64')) # shape=(14, 5, 7)
output = relay.Tuple([call_6664,call_6675,uop_6678,])
output2 = relay.Tuple([call_6665,call_6676,uop_6678,])
func_6681 = relay.Function([], output)
mod['func_6681'] = func_6681
mod = relay.transform.InferType()(mod)
output = func_6681()
func_6682 = relay.Function([], output)
mutated_mod['func_6682'] = func_6682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6688 = relay.var("var_6688", dtype = "float64", shape = (4, 5, 2))#candidate|6688|(4, 5, 2)|var|float64
uop_6689 = relay.asin(var_6688.astype('float64')) # shape=(4, 5, 2)
bop_6699 = relay.right_shift(uop_6689.astype('int64'), relay.reshape(var_6688.astype('int64'), relay.shape_of(uop_6689))) # shape=(4, 5, 2)
uop_6702 = relay.log2(uop_6689.astype('float64')) # shape=(4, 5, 2)
func_5334_call = mod.get_global_var('func_5334')
func_5339_call = mutated_mod.get_global_var('func_5339')
var_6709 = relay.var("var_6709", dtype = "float64", shape = (210, 1))#candidate|6709|(210, 1)|var|float64
const_6710 = relay.const([[-5.499468,-2.948388,9.294927,-3.288664,-6.967779,0.181250,8.907962,-2.191577,3.001965,-2.677389,-2.633638,-7.266348,-4.972402,2.777153,4.059921,-3.987075,9.658505,-9.509124,-4.591860,-8.632472,-3.928791,-1.680020,3.870163,4.242915,6.551194,-3.142254,-9.229315,8.787415,4.720752,-8.158098,-7.822601,-4.974736,7.628080,-6.762760,7.552854,-8.433415,6.854470,7.464871,0.919804,0.079601,-5.412088,-2.432130,-4.469482,1.631269,-4.439855,-0.373967,8.025557,-0.026624,6.528082,-5.867034,0.183062,7.601637,-2.535608,-1.671863,2.694574,-8.229922,2.719984,3.717273,7.159482,0.585703,-9.311402,-5.933836,-4.470952,-1.969858,4.901506,2.503572,1.728795,3.611433,3.026777,7.194677,2.015490,6.885058,-3.992946,-5.534261,3.419588,-4.147503,6.314970,1.835512,5.204233,-4.508099,8.197983,-6.760752,-1.431653,-9.947605,6.920322,-5.712774,9.092578,3.134484,-0.592491,8.419151,-1.929379,6.484361,-3.816050,5.214270,-1.970718,5.460558,8.625658,-5.251341,2.787106,-6.278429,-2.000189,-6.265693,-7.729554,-3.536476,7.199260,-5.998322,0.200751,-4.335090,5.880529,4.109098,8.904160,8.237553,-9.382370,-6.737300,-9.505716,-1.817467,2.493919,-9.975397,3.854231,1.500681,5.723681,-1.885233,5.928869,-8.141033,-6.610352,5.265963,-6.472784,6.706437,-1.820927,9.599313,-2.551990,-3.868071,-2.546717,0.277495,3.400366,-4.873886,-1.651140,3.726592,7.153215,-4.920179,4.002806,4.299146,-6.120255,5.973119,-3.389370,1.592671,-2.117147,9.779775,2.641465,-4.783305,3.182632,7.350551,2.464914,9.890623,-9.150418,9.584652,4.046343,-0.927110,9.020370,6.096407,-3.813340,-9.236031,-2.460611,7.019903,-4.343885,-7.652588,-4.095764,6.415065,-5.183344,3.426521,8.443117,-6.649803,3.584271,-6.646827,-9.418366,6.565454,4.322693,-0.474053,8.992703,2.545086,2.950994,3.470812,3.014485,-8.005682,0.295683,-8.445803,-3.926655,-7.835489,2.136755,-7.280311,-3.464236,-3.822788,4.944193,9.322485,-3.004021,-8.467978,-5.388635,-7.069691,-0.254898,7.749365,-5.914964,-7.142177,-5.948515,-1.914229,-9.952309,-1.853982,-4.359307,-3.955489,5.338491,-3.307503,-7.716942,8.567643,-6.449201,-5.149478,-7.679094,8.603025,6.095923,1.132001,-0.479053,-2.594234,-1.058409,3.908174,7.168481,-1.472184,5.651153,1.486548,4.545440,-8.100684,-6.349843,9.255647,-1.159965,2.799885,-7.194629,4.826833,-9.801886,2.907251,-4.016163,-9.783276,-2.691744,-4.702433,0.859331,8.020159,6.733188,4.535656,-9.096380,-6.843694,5.928808,7.740414,1.976388,-7.594411,-3.484321,-5.097184,-2.021472,-1.493579,-5.434389,-3.568656,-2.800940,-0.663111,0.529807,0.495280,-1.249135,-3.982573,3.769524,-9.688778,-1.969889,4.717855,-0.278377,-5.678994,-8.906104,-0.863509,9.747042,-8.071927,-7.015093,9.948420,-0.437345,-2.509272,5.453302,-8.517700,-4.051542,1.200002,1.117151,6.648986,-5.090757,-2.491625,-8.566851,3.399966,4.473522,-1.154033,1.165971,1.207652,-4.613845,-9.612437,-0.953864,4.337691,9.986726,-3.888974,4.630783,1.292738,8.474735,-4.103626,-2.557996,8.538387,8.362133,6.528298,-4.014114,6.955776,-8.940136,-8.830577,-5.706238,1.415871,-0.563927,8.364639,5.295201,7.926164,-1.945050,1.600715,-0.633589,1.122746,-1.910501,-3.740748,7.517053,8.688159,4.791039,9.066054,4.431537,-5.644439,-0.797706,5.139892,-2.227982,-9.128680,-6.572169,4.858516,-5.572482,8.611128,9.702827,5.616788,8.040464,0.871003,-4.947285,-5.417546,8.959115,1.446062,-0.546875,-8.319742,-1.743647,-1.527503,-9.212135,2.721867,-1.276514,5.575204,-5.270492,-4.862152,8.994455,-9.360825,-7.628365,-8.821168,1.782517,3.550901,-7.552612,-6.781408,-0.107732,-5.129143,-5.029649,-2.482776,-2.146450,9.685270,-9.754616,-9.168733,3.351043,-1.079745,6.092054,2.849996,-4.436494,8.750848,-3.510196,3.235973,-4.643000,7.916852,7.100979,2.979097,4.353409,-6.782188,-7.683785,-8.236060,-2.395744,-4.656599,1.618038,-7.772273,-7.972424,-2.414856,-6.615091,-8.410743,5.319688,9.156649,2.161625,-7.456056,0.733842,-9.810988,2.296007,1.977200,2.849354,-4.794524,-2.073588,9.838111,-9.543508,7.697434,5.552405,6.181294,-3.245457,-7.589434,8.437383,-7.843195,0.582239,-0.961216,4.797296,-0.527797,5.651835,4.973006,-2.862061,2.799142,2.076586,3.704042,-6.052051,6.851428,3.106779,-9.961775,2.617886,-3.328822,8.038701,1.708814,-1.470844,-1.753864,-0.507617,6.864661,-5.959303,3.145451,-9.001213,-7.210078,7.917238,8.419116,2.284603,7.998134,-4.817623,-7.738176,2.425276,0.355162,9.083873,3.046988,5.030495,-2.667285,8.981381,3.474427,-9.842615,-4.744539,-3.676706,4.808962,1.664626,-9.942174,-2.839276,-8.904699,-9.558115,8.528389,0.799953,-2.791206,-7.258838,-0.008794,-9.423490,3.571895,6.136851,8.379522,3.722966,-8.932674,4.432925,-8.462970,3.712733,4.219457,-3.682421,5.706631,-8.137328,3.539668,6.386461,-3.176402,5.863023,-8.438301,-4.860672,-1.423022,-4.683407,-4.051053,2.887785,6.548116,6.132564,8.199214,-3.611984,5.974135,-0.104290,8.840854,-8.131891,3.355601,3.442010,0.543576,7.700249,4.489379,-2.313382,-4.427638,-5.870774,-4.899470,-5.308957,-4.053300,-0.267149,9.049323,-1.688021,-7.345431,5.342449,-1.611548,-8.706416,-5.211561,-3.084722,7.605523,7.328796,-4.311137,-9.699212,-0.017793,-4.661599,7.291946,-1.545374,2.674706,4.700916,-2.238687,-5.951753,7.401554,-3.835221,-5.713218,4.365262,4.217782,4.202056,-5.712914,-0.345869,0.034726,9.498149,9.796988,0.529330,-4.649891,8.323702,7.942795,-7.702645,-6.587150,-2.581502,9.105937,-1.180476,6.173912,-0.193273,4.713385,-9.263292,-2.836222,4.642982,7.376308,-4.521734,9.806070,-1.294136,1.226739,2.757945,3.120499,0.028138,1.145250,8.979345,2.395316,0.811230,-2.761203,1.517632,4.394561,0.219457,-8.803449,8.627967,4.538947,-7.108931,-0.023307,-3.035093,-0.378058,-0.084592,8.568967,-2.501628,9.384506,-8.387257,1.543940,-8.402670,-5.416397,3.852587,-9.101692,7.786864,1.132659,-0.725903,1.145331,1.449133,-5.369415,-7.905731,-2.396204,4.357425,-1.073328,5.617829,6.279693,-0.116713,3.497577,-4.714844,-0.043222,4.448735,-4.075310,1.916256,-6.995021,3.632589,-5.816281,0.208043,-7.791188,1.594904,-1.870316,-1.345274,-9.928938,7.322932,-2.390004,3.313698,6.162023,-3.290474,0.192641,-5.164671,5.885465,-5.696408,8.098040,-1.001245,-1.738440,-3.002760,-8.455055,0.239323,7.025466,8.198702,-8.655697,0.206869,4.145560,5.805171,4.873192,4.714266,5.700331,3.319979,7.177823,-7.009826,2.690459,-1.386904,7.975761,-6.308662,-7.257178,5.697627,3.524106,2.274152,-2.283456,9.480792,-7.614311,-9.897803,-4.981933,-3.313682,2.351291,-6.879932,2.842300,4.587844,-7.133307,3.452458,6.631302,1.230558,1.405824,3.205383,-5.901565,-4.917052,6.207338,-8.953723,-0.113268],[0.002720,-5.262051,-2.764833,-2.046279,-3.036881,3.096408,-9.337009,-9.258768,6.547823,-4.211540,-2.525280,9.698531,8.047986,8.484627,6.030317,-7.703302,-0.998486,-6.962624,-9.391503,-4.149793,2.267352,-2.605953,-6.973572,9.690817,8.413858,-8.961976,-3.950066,-0.174832,5.987392,-1.749923,8.303730,8.160115,5.893711,-9.527471,7.175491,-9.062664,-8.635854,-3.097411,-7.312897,7.915185,5.701360,4.702622,8.918406,6.232484,4.093744,2.194800,-8.719303,-3.119740,-5.289917,5.539136,2.240624,-8.011967,-5.822215,-3.302554,2.928251,-2.466025,-4.956255,-0.384000,5.782854,-5.134787,5.669179,5.310345,-8.676251,8.999839,-6.089182,-2.531898,8.334374,-1.649737,7.872321,-5.630155,-3.886303,2.151078,-1.260823,-2.226556,6.930833,-4.494190,1.716334,-6.489746,-5.455528,-5.591885,-4.143721,-1.437093,-6.920235,-8.051790,-7.920433,-7.363329,4.491820,4.033415,2.868087,-4.128734,-4.460335,-9.925637,-3.603220,0.094123,-5.847796,-2.138075,1.000803,-3.409095,4.889214,7.777644,9.518163,-5.200261,-5.204791,-2.766605,3.029979,-2.981432,-9.181719,8.509755,-3.416949,5.137637,9.948100,0.697241,-7.985192,-0.225894,-1.820981,5.441642,9.109526,7.608279,4.516891,7.938685,-3.998709,-3.433112,-1.241032,1.533930,3.948523,-3.388948,-9.904719,5.203533,9.141635,-4.616272,0.378915,-7.705180,8.270298,-5.661333,1.663601,-3.410441,-0.328514,-1.260107,-1.083723,2.215953,-8.173656,-1.834767,9.033390,-3.119335,4.075340,9.210937,-7.541531,0.614909,9.087277,5.536174,-9.241987,-5.624945,-6.184013,7.240042,-6.649173,-4.367919,-1.329336,-8.982757,-3.052769,8.537752,3.734063,3.569646,-6.160336,-6.122124,-3.523798,-2.074775,9.976419,0.476281,-5.545412,-6.151376,6.367798,8.416192,-2.813826,-4.008670,-2.857743,-6.821724,-2.450293,-1.289467,1.260621,-8.710016,-2.272633,-5.446503,8.222196,8.488772,-2.649646,-1.266870,1.638886,-6.796706,9.421610,-7.085712,-5.252734,-4.632408,-5.476870,1.108652,3.102576,-7.795912,-1.748340,0.047019,-9.197790,4.740185,-5.297490,1.863741,-6.383450,8.666036,-5.762625,1.467169,8.822568,6.445431,-2.370291,1.851874,-1.880245,6.859375,-7.755207,-7.001868,-4.316502,7.462520,9.340365,-8.184100,-7.543831,-7.659700,9.526210,7.966505,4.821154,5.504524,8.566659,8.649608,-5.722465,6.259283,0.714531,3.509433,3.537415,-4.399847,2.939164,-7.923482,8.603489,-1.144035,9.093867,2.529253,-8.377091,-2.898907,1.456411,9.276090,5.582634,-7.980349,-8.178041,-3.970901,-7.664199,6.550663,8.086003,-4.723773,-4.570280,6.363739,-2.628228,-3.592851,2.953730,6.567182,-6.410275,-4.910299,1.614452,-2.567587,7.473256,1.370718,5.383967,4.616378,5.707997,9.318844,2.033835,8.812057,2.016245,-7.918299,-0.218640,3.637626,7.749228,-3.470170,-0.490686,-8.246085,3.108619,-3.675516,-5.228026,1.994747,0.793664,8.656083,-5.249087,-3.362207,-1.730296,-0.376363,-3.168276,0.098565,-4.080677,-1.325438,-1.961128,-9.466216,8.297219,2.409913,-6.992329,5.509172,9.951500,-4.366938,1.251786,-1.430545,-7.900002,-9.730286,-9.413284,-9.316432,-4.661119,-0.421424,3.680471,-5.434254,1.127072,1.727084,5.300517,1.953775,4.569861,-8.786805,-5.237663,0.211251,8.215181,-3.846644,7.110265,-7.203394,5.378728,0.238417,5.588909,3.369951,1.453176,8.416948,7.368243,9.787072,-8.634748,8.754526,-9.261479,0.017032,1.429741,-3.981779,-2.533839,-6.699190,1.733301,4.872334,1.236516,1.313381,9.312988,1.434036,0.905880,4.218416,-8.170018,-7.364548,3.531463,9.451313,0.475576,-1.255210,-7.419608,-9.425221,-0.280643,9.212843,-7.898459,-0.364058,2.101003,3.288420,-9.174711,-4.555915,3.069682,-5.304710,1.729883,3.721925,9.495027,-6.496000,-0.702376,4.482893,-2.503503,8.896352,2.391687,-4.002632,0.922315,8.149797,5.972755,2.907055,-3.227983,0.410082,6.199702,3.173717,-6.778688,-6.521883,-3.364668,8.560604,-0.103440,4.667113,-5.251702,-0.974164,3.686015,-7.858804,-3.811009,-3.399864,3.503111,-1.828225,-8.953944,1.964809,9.535330,-0.478108,1.506535,5.147032,-7.732204,7.010264,-3.825579,-4.451636,3.431779,-0.147786,-8.095192,-6.111837,9.851759,-1.492558,-2.518481,-3.865322,-8.886531,4.220767,9.189950,3.942457,-4.891905,-7.756446,4.845844,-3.345021,0.043833,-0.404321,5.040958,6.987655,5.206389,6.040150,5.672119,1.069360,-5.219723,2.121711,2.778978,9.840835,2.961088,2.647346,-7.229459,4.613034,-5.293131,-6.179672,7.067727,-2.531833,9.364058,-5.915574,-1.882249,-9.255158,1.488166,-3.839683,7.424351,-0.355548,4.208492,5.635465,6.757430,-8.784155,-0.163487,-2.232732,-5.188000,-7.964585,-7.045861,0.276388,-5.751349,2.888645,7.105339,1.294491,7.094079,-0.355453,8.481506,-5.211924,-5.613341,-0.697454,1.070195,-9.739427,-2.784382,-8.962150,-0.215978,7.405312,4.248163,-9.197033,-1.001522,5.835842,2.185383,-1.753223,7.765442,8.021807,8.379597,-0.172447,-2.727379,6.310277,6.805053,6.863723,3.238547,3.484271,7.032284,3.279399,7.244870,0.591633,-5.675836,9.927631,5.784849,-7.709988,-4.688936,2.489325,5.362690,8.657084,-8.312460,-4.432871,2.245145,1.919538,6.377555,-3.600635,7.280576,7.089553,-2.197137,-0.656275,-7.388328,-1.088907,2.253077,2.553071,-2.210295,-3.928236,-8.208109,-0.315444,-5.365971,-3.862055,0.580735,-6.624654,8.546379,-9.212340,-9.859287,6.226418,7.277676,7.073971,9.447645,-6.539920,-8.878000,3.904196,0.951960,-9.255217,0.417849,-6.473976,-3.585183,2.576667,-1.989593,0.195607,-5.681732,2.783570,-2.714255,5.654957,-8.786831,-0.543649,-1.970298,1.359173,9.482110,7.094515,-7.187158,0.957527,-3.559888,-2.100141,7.849806,3.415710,-9.362483,1.188813,6.262523,6.101644,-9.755451,-0.626580,2.097945,4.592455,-3.655679,1.400272,-3.077360,0.813373,1.792568,1.168741,3.299284,9.333180,-0.581774,-9.703732,7.642920,0.260642,0.765422,-7.853428,4.324714,-8.295221,-7.813450,-4.783911,-0.828377,1.503052,-3.326196,-3.863786,1.129922,8.379192,0.690401,1.676707,4.092712,-9.410527,6.713597,2.654982,-2.961417,-8.693652,3.980355,4.268827,-6.728945,-1.214040,-9.483500,-5.667155,-7.461805,5.705349,5.466125,-5.462844,1.469761,-2.697781,0.507561,3.748899,8.184736,-5.069664,-1.540172,-8.361473,-6.644118,6.437523,-7.777853,-6.546813,-7.329157,-7.272619,-7.028136,-8.897144,0.361810,-9.547337,4.922717,9.302383,0.615340,4.379699,3.200128,-1.200949,-7.726355,-5.101229,0.115518,8.391823,-5.792213,-9.487136,-0.826319,-8.686613,5.433710,-3.600649,-2.102953,0.994880,6.710141,-9.070854,-5.032789,-5.173663,-0.403450,2.673114,6.910461,5.913310,-9.543404,6.528025,1.753559,7.713489,-2.648597,6.964793,0.716645,4.133615,6.181761,4.394542,-5.974856,0.285602,6.105907,1.774147,8.361987,-4.537063,-4.209659,4.077780,-0.795034,-3.531149],[-0.822172,5.078726,-5.035685,1.914378,-2.458476,1.045786,-9.504358,-1.392379,-0.752606,6.829103,-7.050910,5.241801,8.839246,-5.128450,2.293289,-8.197090,-2.293468,3.124719,-3.640284,3.578808,-7.998035,-9.243693,7.743979,-4.224244,-3.992739,3.409509,4.975307,7.725070,1.045673,-9.920652,-7.620610,2.254241,5.122378,0.222082,6.346123,-8.977632,8.953570,-8.271445,9.704265,-3.802373,-2.015411,9.875875,0.101568,-0.661905,-3.600205,7.383568,-7.735483,-2.566999,-7.532148,9.022028,-3.329590,7.338400,-4.182259,-0.225364,-3.298696,5.628911,-7.047540,-9.536848,0.853573,4.285484,-7.491952,-6.063983,3.956812,-2.473997,-0.989767,7.690513,2.821789,9.270360,-3.149058,-4.575302,-3.844260,-2.989544,-7.151403,-0.654506,9.152920,7.030168,7.573534,-2.932864,-4.777950,-5.051675,3.088189,6.727237,-1.649094,-2.099489,-1.600603,2.305152,5.366447,-5.046367,-7.582239,3.109126,-9.720935,5.761392,9.677372,-9.370751,-2.976390,-8.555927,-3.933602,8.387116,-9.959048,1.444343,-3.445251,-5.774088,-8.231406,9.986739,1.082380,5.386639,9.578035,0.344284,-3.258598,0.992800,-0.818714,-7.998284,6.003890,1.389724,-0.608807,6.389755,8.302075,-0.023505,-3.951922,6.075353,-5.471869,8.834386,4.778547,-8.622662,-1.763179,9.702885,-2.483238,1.993910,7.933411,1.692688,6.071971,-1.122766,-4.402868,7.006519,-8.164345,5.584442,2.154884,-5.854836,5.419065,-8.713271,-4.972300,3.822934,-6.151484,5.512440,3.177572,8.016245,3.216122,-8.058184,-5.222076,-9.086235,-6.624873,8.738995,-2.543444,-1.363098,0.786338,7.299489,-7.548977,-1.845239,1.767647,-1.374823,-7.379454,0.395209,5.202056,-5.004670,0.803703,-2.272525,-5.010288,0.119961,-5.892305,-6.364541,8.182228,4.680054,-1.102993,-2.631791,5.562303,7.545102,-9.268741,3.994927,-2.918645,6.922640,-6.389976,5.189828,3.789321,9.793347,-1.265010,2.337526,5.179978,-9.345352,-2.427652,2.629106,7.376012,-9.141715,-4.456829,-8.537831,8.137069,-5.048445,3.690766,-5.407210,6.401599,-6.696055,2.213708,9.047851,7.150908,1.650450,-8.042686,4.599891,4.496334,9.437352,-3.132251,-0.704178,9.131377,8.050011,-2.524248,0.412783,-1.573232,3.566176,-9.922848,-8.840842,-3.286999,1.176806,9.697935,6.017026,-9.243722,-2.351334,-2.854088,-3.014290,3.254133,-8.674022,1.476019,6.120294,-5.228404,-4.981480,8.807205,-2.547963,-7.924914,-5.898036,-7.864026,-0.679142,-6.862868,3.250292,1.486251,-9.300285,-3.759146,-7.472824,4.823248,7.846436,-6.266963,-3.957114,-4.526700,-8.520658,-3.830624,-0.256338,-3.702524,-9.568971,2.329887,5.947482,5.637630,-0.864142,-8.534244,-1.570031,-7.156296,4.657446,1.611334,9.933839,-7.866750,-6.482918,-8.937061,-2.060289,3.818523,-0.637798,-1.688717,5.524519,0.603207,9.214813,-5.807512,5.543861,7.732871,6.036759,-0.856832,4.948883,-0.738519,-4.034770,-5.162972,9.654913,1.410619,5.032283,2.994717,3.497117,-8.093992,7.429846,-2.465222,0.780207,0.424433,-5.439103,9.635467,1.865964,1.114802,2.013251,-6.806131,4.240773,-7.426286,7.976729,1.809484,-1.783782,-9.987510,-0.454666,4.611451,-5.681748,4.286618,-3.887758,-3.955865,-3.032814,5.833051,-1.360701,9.028563,2.909483,-7.137699,6.783588,-0.621055,4.799095,7.056609,6.232507,7.408351,-7.765069,8.224716,-7.746474,-2.436143,3.471635,-6.880385,3.408883,-6.256992,8.687898,4.488482,-7.914771,-1.567490,-7.675979,-4.925444,-1.486706,-7.143069,-1.853961,-3.541112,3.668979,8.445242,-5.218488,-8.280128,4.390437,2.404051,9.911982,-4.066377,-3.854137,9.261859,-3.698873,-6.832281,-1.827406,3.370883,-3.225983,8.650075,-4.561749,1.843273,-4.299087,-5.178198,-0.775091,-4.346429,7.185972,5.510768,6.496270,-3.336993,-1.394375,8.836476,5.209228,1.601405,-8.829954,-1.699700,-7.755363,5.647543,8.170402,-5.614108,7.507758,-9.958908,1.643850,-0.777935,-6.815022,0.579167,-7.322594,8.399735,8.695742,7.263420,2.185339,6.431676,1.864551,-8.943182,-5.626232,-9.409908,3.667664,-3.648149,1.041278,-6.170608,-6.411177,-7.877611,-9.290845,-6.025530,9.133551,5.797621,3.430831,-9.191209,9.146182,-5.475353,8.507294,-2.297766,2.386439,-0.796433,2.417706,-5.034040,-2.469842,-8.188096,5.528285,-8.813054,1.525050,6.800073,-6.334070,1.611315,7.863215,-3.901952,6.870998,4.216243,3.294273,5.092550,-2.409892,-5.312204,-5.859312,6.990589,-3.088913,-0.932723,5.270227,-7.339265,6.248761,-7.170713,0.005693,-5.747736,1.555065,0.208324,1.705505,6.760985,6.285959,-5.514902,0.031116,2.721253,4.352136,8.165951,9.952836,3.176451,9.311704,1.885772,-9.452878,7.063639,-7.330649,-1.882977,0.093803,2.899817,-9.721146,6.137818,-8.173874,3.486709,-0.263375,-5.689477,-6.617386,0.323333,6.844954,5.890860,-5.043915,5.768300,6.393062,-4.315033,-5.300905,2.263249,9.461867,-7.397640,0.909499,6.733288,-4.725830,-4.325098,6.600821,-4.743627,-1.103649,-6.936801,5.680646,8.469466,-8.212819,3.008534,-8.590827,8.650737,4.242724,3.591644,2.527390,7.985775,-2.152461,-8.985883,1.325919,2.561636,-1.216912,-8.910887,2.966998,3.888888,2.539250,-7.053608,3.841113,7.015378,2.079428,-1.617674,6.867246,-1.963155,2.435587,-5.718556,-8.813132,-8.444061,5.072291,-2.721253,3.071535,-2.374419,-3.326288,-5.024356,-5.459826,2.756516,-5.824146,-4.767918,8.953286,4.315294,-8.446549,0.602876,3.799821,7.119181,-2.774409,-3.260794,4.963327,-9.744955,5.861991,-1.607910,-0.364097,-2.675034,1.419673,-1.815716,7.848851,3.902465,6.762830,-2.208601,-5.675950,-2.562608,0.229628,-5.146337,1.803082,5.842357,4.866033,4.501507,7.713035,-0.286613,-1.552935,0.714024,7.123682,3.553689,9.562485,8.638379,-2.291484,-8.154401,-5.561540,-5.244822,8.780223,1.537669,3.677408,-3.227148,-7.300645,4.594364,0.574839,-0.504956,7.403989,-7.756312,-1.827336,2.680982,0.160948,-5.327272,-5.340084,4.055896,-9.171611,4.188235,9.740849,-4.675847,-0.525849,7.943867,-5.405447,-8.407182,2.348731,-0.227213,3.636503,-3.753409,4.756554,-0.320369,-0.522012,8.688056,-0.664104,-6.095176,-2.596458,9.867833,2.941500,9.498221,7.770383,8.719896,-4.961992,-9.173481,6.900829,-5.368619,3.165662,0.177478,-2.604420,5.525997,0.961620,3.697707,-0.459093,-9.656690,5.470751,-8.882685,-7.552199,1.369547,4.982943,-4.992819,2.192912,-0.425502,2.680083,-3.977365,-5.595363,5.398321,9.979166,-2.011981,2.462946,7.002311,-4.853024,9.260895,-0.740766,1.768448,-5.422225,-3.999880,-8.900605,2.051361,-0.995157,2.277070,5.494715,-4.214953,8.956003,-5.609486,-6.115540,7.414482,3.885831,8.115222,-2.067321,-3.717510,-4.923481,-6.536953,8.264564,-2.852174,4.759865,-3.817176,-5.381420,9.097923,4.379950,0.534512,-0.711161,-1.763142,4.578372,5.118669,-2.694269,9.538784,-0.200027,2.752790,4.325279],[-0.854393,-1.588316,4.158352,8.522183,-4.487749,-8.031640,-2.287387,2.921766,2.734805,-9.265716,-2.770030,-9.158092,2.241461,4.009521,-0.444377,5.375067,1.482369,3.310518,-4.048539,0.852784,-6.034053,-1.382223,-9.927055,3.343589,9.549687,-8.458948,1.556365,3.686091,-8.839698,7.102039,9.800920,4.272123,-7.170504,2.366925,9.036097,-4.400945,-1.458878,2.912161,-8.227949,-5.382077,-5.501722,0.438211,9.021873,2.642926,8.974204,-1.662327,8.494937,7.952580,6.876308,-3.595809,4.599595,-2.314284,-6.990615,9.882390,-7.520615,-5.422422,-4.862631,-9.866527,-0.010364,1.455867,3.571619,-9.700303,5.744587,-4.452030,-8.015062,-9.616993,0.258866,5.511386,-1.368318,-1.437355,4.570123,4.044120,-8.501275,5.801338,4.585079,-6.928823,0.496214,3.853449,-7.053144,9.186435,1.480688,8.595188,-9.555772,-1.087130,9.485545,1.042417,5.989543,-3.250185,1.759197,-9.946298,6.107768,6.049644,0.316830,0.147394,-4.779600,-0.920396,-2.395607,2.563355,-6.902534,7.559978,-5.760156,-7.900156,-3.201881,-2.230140,0.886258,-9.930455,5.036264,9.592988,9.566779,7.009631,5.025528,6.405808,6.009727,-4.278300,-8.221050,2.631926,-8.751061,-9.808504,-5.466926,-2.977233,5.033323,-5.309034,-9.263478,0.429571,4.025342,-0.043661,-2.901228,-5.235849,-6.048386,5.642680,0.555280,2.449245,4.713687,-6.294900,-0.534859,7.429345,9.023018,1.919355,5.252997,6.909175,9.338726,3.592017,5.070382,1.230820,-4.685132,-5.862069,6.670813,0.875293,2.868905,-5.376156,2.722604,6.954790,-2.998577,-8.154039,0.037932,-2.217944,2.928327,-6.283073,5.855878,-4.063393,4.997534,2.358379,6.963900,4.431683,-3.584740,-3.193282,4.216358,9.698951,-4.979969,1.846731,3.642604,-0.585205,9.007980,-2.429381,-9.741413,-4.475345,1.134310,-6.002895,-4.206387,-0.088039,-6.993466,-0.014012,-4.745417,4.573512,-1.040908,0.821538,-1.010953,-3.371311,-6.348742,-2.207584,-9.375294,-2.148705,1.029575,-4.282097,-0.112426,-1.110113,2.960582,-4.933232,-6.744015,6.133743,-6.360012,4.378244,-3.409931,-6.974926,-6.497991,-2.969575,3.918088,-1.579644,1.329127,6.482380,8.179223,-7.903108,-0.280199,8.452491,-3.573616,0.404602,0.479225,2.407058,0.995009,-4.653547,9.992891,-5.459938,-7.432112,4.837110,9.258984,8.683176,-7.712461,0.223734,2.628407,-4.612955,8.742836,-8.795687,-3.770744,2.747648,-8.198856,2.505960,-6.535700,-9.236864,-0.646079,-4.081972,-1.214681,0.198110,-2.041636,-0.265394,3.408387,0.412213,-3.142340,9.871031,-5.578302,-7.605496,-7.656291,-5.802622,3.062124,5.615185,-5.051483,3.998654,-0.495256,0.822360,-6.819933,-3.320826,-7.354109,-5.084676,7.204840,1.951013,-9.490565,-8.393854,6.159970,1.477560,-8.080356,3.655188,1.277949,6.440222,0.818495,-9.899047,-9.861856,4.861174,-2.165241,-4.343360,9.018039,5.155020,6.611767,-3.846578,-6.273975,-6.088468,8.996490,2.204550,-5.297536,-7.703434,-5.501601,6.169362,5.005331,9.295278,9.436339,2.123451,-7.052136,-1.553400,6.740063,-9.064871,6.241180,-8.000725,-9.968619,4.850617,-6.728700,-6.820385,-9.540349,-0.180787,-6.798754,9.477324,9.148876,-1.120308,-9.270488,0.896810,-8.689373,3.361392,-4.775267,-7.391507,-9.765289,-0.568294,8.680847,6.967755,-7.576236,2.583000,6.484431,-1.525229,3.049492,-2.973953,-1.956453,0.699718,-9.883444,-9.028723,-6.864110,8.346936,-8.516778,-0.989489,6.456594,9.666233,8.499884,-8.190361,7.429188,2.229375,-0.973845,-9.561295,9.849979,9.621305,2.640752,2.308796,-4.594982,-0.642877,-6.189053,-5.719945,-1.057294,8.574435,-6.347812,-9.863011,2.444514,-2.022598,-4.094584,-1.728206,3.046271,5.782191,6.070587,-5.233366,2.225326,-5.296912,9.116877,8.586489,-7.218148,8.409368,8.415135,-6.381517,1.645664,-9.867892,-3.791186,-9.813589,-7.283285,-9.264575,-2.918978,9.825662,4.510673,7.377267,-7.620014,-2.135239,0.293361,1.385766,6.795042,8.176466,-6.811728,-2.822734,-2.207981,-2.632753,-3.884738,-4.049374,-0.549904,4.564672,5.932280,-2.172232,6.733672,-3.409116,5.240820,0.882232,-5.614496,9.477342,-1.327125,4.543566,-8.215557,3.084862,-0.547921,1.988156,8.295703,-5.484294,1.874202,-6.867509,3.380068,-6.562967,-4.249749,6.273257,-5.466058,-7.441077,9.317119,-1.929368,6.514122,-0.734975,5.782111,-0.553498,-1.849350,-6.810918,-1.217153,3.676369,4.601707,-4.016316,9.082508,-1.223585,-1.060104,9.982117,-4.934282,-7.238146,4.443841,6.567129,-0.095333,-4.526918,-2.669448,8.432968,4.985578,-5.533230,-8.059483,1.088684,8.965809,6.990520,-3.649532,4.198634,-3.278539,-2.397391,-3.008432,7.654841,-0.756871,-3.046769,-8.687077,4.582627,-8.969771,-7.393476,-9.018205,-5.907018,-6.535307,4.070977,-0.784103,9.345559,-8.881245,3.291936,-9.145253,-4.633436,-3.451111,1.430388,-9.825802,-4.992557,2.081834,7.698187,-4.761604,7.440926,9.535795,3.395206,5.991491,8.455059,3.598765,-0.349488,3.460383,-3.904062,3.634700,-0.370519,-0.182468,-5.335250,4.143392,1.640818,-3.404351,-3.664516,6.182464,9.536017,5.029222,5.156720,0.580080,-3.348098,-4.659398,-9.217923,-3.518164,0.155633,-0.470701,-4.731655,3.118164,7.503538,-2.250490,2.601748,-4.527443,-8.992520,7.123405,-5.116043,-2.514707,3.962212,6.178197,-5.872792,-7.300990,-2.210869,-6.157275,2.604617,-7.625760,6.827026,-5.261335,-9.275987,7.653256,-5.969620,-7.364562,-4.002580,1.810197,9.891144,8.912481,5.119434,8.708101,-6.161371,-6.546942,7.275912,5.179190,-9.332872,-7.318588,-7.146559,9.726820,-6.690047,3.933004,-7.167411,1.611683,1.184874,-4.832941,-6.260409,-9.342853,1.887617,-4.285044,8.861278,0.972105,-7.829619,-6.095570,1.579236,8.356948,-8.930729,-4.433040,-3.190756,-7.360696,4.423844,-6.775734,7.032945,-6.989720,4.132656,6.492891,-8.837110,-0.367627,-5.870751,3.517901,0.585875,-9.924254,1.078468,-5.568266,-0.428686,3.294685,3.084567,0.588795,-8.072749,5.615014,1.389237,-2.821084,5.004049,-6.317545,-6.697359,-0.647712,-8.134385,0.485749,7.220502,9.351556,-8.458748,7.640075,-9.019345,-9.377893,4.530650,7.233091,4.167063,-3.305032,-0.414902,-7.005810,3.610066,-2.401933,1.795021,6.565078,-9.407735,-4.544608,-1.487578,-6.494942,3.490866,7.260245,5.149513,0.160811,3.955263,9.401706,-4.346944,-8.262075,-8.425158,1.126710,-6.633239,4.669826,-9.379248,7.124444,1.657261,6.186077,9.936601,1.551042,2.734158,7.000379,7.776062,3.732178,-0.800134,9.376720,-5.299913,7.477301,4.958869,4.011373,-7.195042,-1.009535,1.236391,-7.492568,4.685509,8.521062,-3.836791,2.687282,3.637305,3.137309,-6.450029,7.094350,-2.431375,5.217620,7.039652,7.951813,0.362512,6.797716,0.726440,6.663938,-0.531209,-7.495462,9.663749,-2.167231,-4.695974,7.642981,-1.348782,7.258888,5.627556,-8.258344,-0.145787,-0.055781,-9.954147]], dtype = "float32")#candidate|6710|(4, 672)|const|float32
var_6711 = relay.var("var_6711", dtype = "float64", shape = (55, 4))#candidate|6711|(55, 4)|var|float64
call_6708 = relay.TupleGetItem(func_5334_call(relay.reshape(var_6709.astype('float64'), [35, 6]), relay.reshape(const_6710.astype('float32'), [96, 28]), relay.reshape(var_6711.astype('float64'), [220, 1]), ), 5)
call_6712 = relay.TupleGetItem(func_5339_call(relay.reshape(var_6709.astype('float64'), [35, 6]), relay.reshape(const_6710.astype('float32'), [96, 28]), relay.reshape(var_6711.astype('float64'), [220, 1]), ), 5)
func_2539_call = mod.get_global_var('func_2539')
func_2540_call = mutated_mod.get_global_var('func_2540')
call_6717 = func_2539_call()
call_6718 = func_2539_call()
output = relay.Tuple([bop_6699,uop_6702,call_6708,var_6709,const_6710,var_6711,call_6717,])
output2 = relay.Tuple([bop_6699,uop_6702,call_6712,var_6709,const_6710,var_6711,call_6718,])
func_6729 = relay.Function([var_6688,var_6709,var_6711,], output)
mod['func_6729'] = func_6729
mod = relay.transform.InferType()(mod)
var_6730 = relay.var("var_6730", dtype = "float64", shape = (4, 5, 2))#candidate|6730|(4, 5, 2)|var|float64
var_6731 = relay.var("var_6731", dtype = "float64", shape = (210, 1))#candidate|6731|(210, 1)|var|float64
var_6732 = relay.var("var_6732", dtype = "float64", shape = (55, 4))#candidate|6732|(55, 4)|var|float64
output = func_6729(var_6730,var_6731,var_6732,)
func_6733 = relay.Function([var_6730,var_6731,var_6732,], output)
mutated_mod['func_6733'] = func_6733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mod.get_global_var('func_3986')
func_3987_call = mutated_mod.get_global_var('func_3987')
call_6737 = relay.TupleGetItem(func_3986_call(), 0)
call_6738 = relay.TupleGetItem(func_3987_call(), 0)
func_1710_call = mod.get_global_var('func_1710')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_6746 = relay.TupleGetItem(func_1710_call(), 0)
call_6747 = relay.TupleGetItem(func_1711_call(), 0)
func_5879_call = mod.get_global_var('func_5879')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6748 = func_5879_call()
call_6749 = func_5879_call()
output = relay.Tuple([call_6737,call_6746,call_6748,])
output2 = relay.Tuple([call_6738,call_6747,call_6749,])
func_6751 = relay.Function([], output)
mod['func_6751'] = func_6751
mod = relay.transform.InferType()(mod)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6751_call = mutated_mod.get_global_var('func_6751')
call_6752 = func_6751_call()
output = call_6752
func_6753 = relay.Function([], output)
mutated_mod['func_6753'] = func_6753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mod.get_global_var('func_3986')
func_3987_call = mutated_mod.get_global_var('func_3987')
call_6789 = relay.TupleGetItem(func_3986_call(), 0)
call_6790 = relay.TupleGetItem(func_3987_call(), 0)
func_3518_call = mod.get_global_var('func_3518')
func_3519_call = mutated_mod.get_global_var('func_3519')
call_6794 = func_3518_call()
call_6795 = func_3518_call()
output = relay.Tuple([call_6789,call_6794,])
output2 = relay.Tuple([call_6790,call_6795,])
func_6802 = relay.Function([], output)
mod['func_6802'] = func_6802
mod = relay.transform.InferType()(mod)
output = func_6802()
func_6803 = relay.Function([], output)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6835 = relay.var("var_6835", dtype = "float32", shape = (5, 2, 1))#candidate|6835|(5, 2, 1)|var|float32
uop_6836 = relay.asin(var_6835.astype('float32')) # shape=(5, 2, 1)
bop_6848 = relay.floor_divide(uop_6836.astype('float32'), relay.reshape(var_6835.astype('float32'), relay.shape_of(uop_6836))) # shape=(5, 2, 1)
func_4356_call = mod.get_global_var('func_4356')
func_4358_call = mutated_mod.get_global_var('func_4358')
call_6857 = relay.TupleGetItem(func_4356_call(), 0)
call_6858 = relay.TupleGetItem(func_4358_call(), 0)
output = relay.Tuple([bop_6848,call_6857,])
output2 = relay.Tuple([bop_6848,call_6858,])
func_6865 = relay.Function([var_6835,], output)
mod['func_6865'] = func_6865
mod = relay.transform.InferType()(mod)
mutated_mod['func_6865'] = func_6865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6866 = relay.var("var_6866", dtype = "float32", shape = (5, 2, 1))#candidate|6866|(5, 2, 1)|var|float32
func_6865_call = mutated_mod.get_global_var('func_6865')
call_6867 = func_6865_call(var_6866)
output = call_6867
func_6868 = relay.Function([var_6866], output)
mutated_mod['func_6868'] = func_6868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_6902 = func_4323_call()
call_6903 = func_4323_call()
func_6802_call = mod.get_global_var('func_6802')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_6907 = relay.TupleGetItem(func_6802_call(), 0)
call_6908 = relay.TupleGetItem(func_6803_call(), 0)
func_2873_call = mod.get_global_var('func_2873')
func_2876_call = mutated_mod.get_global_var('func_2876')
const_6910 = relay.const([-4,10,1,-6,9,3,5,-6,7,-6,7,4,-5,9,1,8,6,-5,-1,-5,8,10,6,-8,4,-1,-7,6,-2,-5,5,-8,-3,-8,-3,5,-1,-7,-2,1,-8,-5,-7,-10,-8,-10,8,5,-1,6,-6,-7,7,-5,8,3,8,2,2,4,7,-2,2,-6,10,6,4,-4,-7,10,-7,-3,2,10,-7,4,10,9,-3,2,-9,-1,2,-6,8,-4,8,10,5,5,-6,-6,-5,8,-1,3,-1,-7,-2,1,6,5,-5,5], dtype = "int8")#candidate|6910|(104,)|const|int8
call_6909 = relay.TupleGetItem(func_2873_call(relay.reshape(const_6910.astype('int8'), [104,])), 1)
call_6911 = relay.TupleGetItem(func_2876_call(relay.reshape(const_6910.astype('int8'), [104,])), 1)
var_6926 = relay.var("var_6926", dtype = "int8", shape = (104,))#candidate|6926|(104,)|var|int8
bop_6927 = relay.power(const_6910.astype('float32'), relay.reshape(var_6926.astype('float32'), relay.shape_of(const_6910))) # shape=(104,)
output = relay.Tuple([call_6902,call_6907,call_6909,bop_6927,])
output2 = relay.Tuple([call_6903,call_6908,call_6911,bop_6927,])
func_6932 = relay.Function([var_6926,], output)
mod['func_6932'] = func_6932
mod = relay.transform.InferType()(mod)
mutated_mod['func_6932'] = func_6932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6933 = relay.var("var_6933", dtype = "int8", shape = (104,))#candidate|6933|(104,)|var|int8
func_6932_call = mutated_mod.get_global_var('func_6932')
call_6934 = func_6932_call(var_6933)
output = call_6934
func_6935 = relay.Function([var_6933], output)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_6995 = relay.TupleGetItem(func_567_call(), 0)
call_6996 = relay.TupleGetItem(func_569_call(), 0)
output = relay.Tuple([call_6995,])
output2 = relay.Tuple([call_6996,])
func_6998 = relay.Function([], output)
mod['func_6998'] = func_6998
mod = relay.transform.InferType()(mod)
output = func_6998()
func_6999 = relay.Function([], output)
mutated_mod['func_6999'] = func_6999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7043 = relay.var("var_7043", dtype = "uint64", shape = (13, 4, 14))#candidate|7043|(13, 4, 14)|var|uint64
var_7044 = relay.var("var_7044", dtype = "uint64", shape = (13, 4, 14))#candidate|7044|(13, 4, 14)|var|uint64
bop_7045 = relay.not_equal(var_7043.astype('bool'), relay.reshape(var_7044.astype('bool'), relay.shape_of(var_7043))) # shape=(13, 4, 14)
bop_7063 = relay.greater(var_7044.astype('bool'), relay.reshape(var_7043.astype('bool'), relay.shape_of(var_7044))) # shape=(13, 4, 14)
uop_7074 = relay.asin(bop_7045.astype('float64')) # shape=(13, 4, 14)
func_1066_call = mod.get_global_var('func_1066')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_7082 = func_1066_call()
call_7083 = func_1066_call()
func_1710_call = mod.get_global_var('func_1710')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_7089 = relay.TupleGetItem(func_1710_call(), 0)
call_7090 = relay.TupleGetItem(func_1711_call(), 0)
output = relay.Tuple([bop_7063,uop_7074,call_7082,call_7089,])
output2 = relay.Tuple([bop_7063,uop_7074,call_7083,call_7090,])
func_7098 = relay.Function([var_7043,var_7044,], output)
mod['func_7098'] = func_7098
mod = relay.transform.InferType()(mod)
mutated_mod['func_7098'] = func_7098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mutated_mod.get_global_var('func_7098')
var_7100 = relay.var("var_7100", dtype = "uint64", shape = (13, 4, 14))#candidate|7100|(13, 4, 14)|var|uint64
var_7101 = relay.var("var_7101", dtype = "uint64", shape = (13, 4, 14))#candidate|7101|(13, 4, 14)|var|uint64
call_7099 = func_7098_call(var_7100,var_7101,)
output = call_7099
func_7102 = relay.Function([var_7100,var_7101,], output)
mutated_mod['func_7102'] = func_7102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_7145 = func_4323_call()
call_7146 = func_4323_call()
func_535_call = mod.get_global_var('func_535')
func_536_call = mutated_mod.get_global_var('func_536')
call_7159 = func_535_call()
call_7160 = func_535_call()
func_6029_call = mod.get_global_var('func_6029')
func_6031_call = mutated_mod.get_global_var('func_6031')
call_7163 = relay.TupleGetItem(func_6029_call(), 1)
call_7164 = relay.TupleGetItem(func_6031_call(), 1)
output = relay.Tuple([call_7145,call_7159,call_7163,])
output2 = relay.Tuple([call_7146,call_7160,call_7164,])
func_7165 = relay.Function([], output)
mod['func_7165'] = func_7165
mod = relay.transform.InferType()(mod)
output = func_7165()
func_7166 = relay.Function([], output)
mutated_mod['func_7166'] = func_7166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7188 = relay.var("var_7188", dtype = "bool", shape = ())#candidate|7188|()|var|bool
var_7189 = relay.var("var_7189", dtype = "bool", shape = (1, 2))#candidate|7189|(1, 2)|var|bool
bop_7190 = relay.logical_or(var_7188.astype('bool'), var_7189.astype('bool')) # shape=(1, 2)
func_784_call = mod.get_global_var('func_784')
func_786_call = mutated_mod.get_global_var('func_786')
call_7195 = relay.TupleGetItem(func_784_call(relay.reshape(var_7188.astype('uint32'), [])), 1)
call_7196 = relay.TupleGetItem(func_786_call(relay.reshape(var_7188.astype('uint32'), [])), 1)
func_1010_call = mod.get_global_var('func_1010')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_7207 = func_1010_call()
call_7208 = func_1010_call()
func_1745_call = mod.get_global_var('func_1745')
func_1747_call = mutated_mod.get_global_var('func_1747')
call_7211 = relay.TupleGetItem(func_1745_call(), 2)
call_7212 = relay.TupleGetItem(func_1747_call(), 2)
output = relay.Tuple([bop_7190,call_7195,call_7207,call_7211,])
output2 = relay.Tuple([bop_7190,call_7196,call_7208,call_7212,])
func_7219 = relay.Function([var_7188,var_7189,], output)
mod['func_7219'] = func_7219
mod = relay.transform.InferType()(mod)
var_7220 = relay.var("var_7220", dtype = "bool", shape = ())#candidate|7220|()|var|bool
var_7221 = relay.var("var_7221", dtype = "bool", shape = (1, 2))#candidate|7221|(1, 2)|var|bool
output = func_7219(var_7220,var_7221,)
func_7222 = relay.Function([var_7220,var_7221,], output)
mutated_mod['func_7222'] = func_7222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3655_call = mod.get_global_var('func_3655')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_7256 = relay.TupleGetItem(func_3655_call(), 1)
call_7257 = relay.TupleGetItem(func_3657_call(), 1)
func_2403_call = mod.get_global_var('func_2403')
func_2406_call = mutated_mod.get_global_var('func_2406')
const_7259 = relay.const([-3.669859,0.879456,-5.409208,-2.755402,4.883797,-6.779594,-8.123795,6.428974,-8.802103,-1.459188,-0.052310,-3.325204,9.738842,9.766971,-4.020547,7.127829,-9.572394,-2.170317,-0.010237,8.668143,-7.906528,-5.862369,6.092753,2.448248,-1.611684,-0.653981,-5.918644,-2.947287,-2.776421,9.334096,-0.235231,7.834297,2.857517,7.343424,-5.969542,-4.264023,-7.863477,3.858125,-6.525410,-9.252662,-6.062469,7.081409,9.051293,-8.630845,4.263067,-2.731114,-4.310408,-8.982492,-9.256131,-0.769286,-6.846868,3.324623,9.609128,-4.536224,4.304420,-2.389558,5.666566,0.012477,7.387704,-4.898790,8.158362,9.526072,6.468874,7.019952,7.691053,-0.332189,-4.170858,5.184713,1.013447,9.273214,-5.130919,-2.823220,6.472006,-1.069515,-1.484676,8.993265,8.692389,5.863531,9.778410,-9.867999,-1.170722,-1.403300,-2.639493,-4.668120,-5.036721,6.724948,-2.249276,-0.889127,1.251697,-5.607476,-2.533095,2.658610,-0.152056,-5.475997,8.323849,4.637120,4.247605,8.967077,9.683316,4.135785,1.220770,-5.855256,5.419344,-2.454521,5.348062,-5.442234,-1.336417,3.411797,-3.012289,-7.148205,1.191439,-4.743483,-5.679233,-7.544548,6.368448,7.825082,-4.461157,-0.471832,-3.452135,-9.974281,-6.819824,5.947349,-0.593507,2.900174,-9.900163,5.247473,7.540780,7.146904,1.224567,9.684674,8.577801,5.960690,-0.196056,1.867881,-4.006019,-9.145207,-9.595551,-4.795415,9.722089,-6.652189,9.781103,9.039118,6.607750,-6.561571,-3.502914,0.314936,-1.669691,-5.098905,4.146755,-6.051557,3.293928,-3.400212,-2.284116,9.931452,-5.179745,-6.064071,3.283669,7.642096,-9.558970,4.094675,3.565038,-8.655977,4.431541,8.485989,9.264683,6.317337,-0.058539,-5.507234,-2.990653,-5.399652,1.486426,-3.113900,-0.644697,8.741583,-8.489711,-5.451106,-9.565030,9.782520,9.568667,-6.590520,-0.045265,4.887727,6.091996,-4.004044,6.915358,-6.922489,9.099219,7.008410,-4.897432,-6.988457,0.242112,6.463574,9.917981,-9.374234,5.543786,5.411469,-5.305470,-7.552112,3.087718,5.917158,-2.325568,6.703539,-6.260955,6.260556,-6.736386,9.827455,-2.148038,0.230825,-0.761883,-6.909481,-3.471259,2.945993,9.050951,-6.140308,-4.011212,0.164901,1.032943,-3.391169,-3.090411,7.227808,0.174912,-8.045968,7.942160,-2.082842,6.312729,3.566128,-0.936713,-6.154147,-4.026287,-2.238274,-3.246995,7.243914,5.823638,-2.061100,-2.985227,-7.245265,-0.838043,8.265150,-3.536399,2.909790,7.833455,6.547335,-4.963973,2.069652,-1.001041,8.046749,8.240571,-0.833465,9.694704,-5.721955,-4.638260,1.080344,-5.837690,-2.686767,-0.931120,-7.519425,-0.160491,-9.556655,-9.949495,-9.905457,6.435346,9.700777,-8.112038,5.773716,-4.822311,3.816972,-9.491685,-8.726643,-0.788059,4.499086,-3.556844,-5.648537,1.557274,3.579794,-1.593447,-1.804460,-8.007463,-4.332892,-4.585349,-4.448677,-4.664641,9.523548,-9.043092,6.881032,5.644073,-6.368191,-4.241875,-9.272893,0.005691,6.833495,0.974852,4.570261,-0.200126,1.676019,-9.640875,3.854069,6.513144,0.656735,-7.433830,-1.002985,-3.566670,-8.670802,7.576066,-5.648557,-0.793849,-2.502342,-8.763343,0.180178], dtype = "float64")#candidate|7259|(308,)|const|float64
call_7258 = relay.TupleGetItem(func_2403_call(relay.reshape(const_7259.astype('float64'), [308, 1])), 3)
call_7260 = relay.TupleGetItem(func_2406_call(relay.reshape(const_7259.astype('float64'), [308, 1])), 3)
func_784_call = mod.get_global_var('func_784')
func_786_call = mutated_mod.get_global_var('func_786')
const_7262 = relay.const(-1, dtype = "uint32")#candidate|7262|()|const|uint32
call_7261 = relay.TupleGetItem(func_784_call(relay.reshape(const_7262.astype('uint32'), [])), 1)
call_7263 = relay.TupleGetItem(func_786_call(relay.reshape(const_7262.astype('uint32'), [])), 1)
func_3776_call = mod.get_global_var('func_3776')
func_3778_call = mutated_mod.get_global_var('func_3778')
call_7266 = relay.TupleGetItem(func_3776_call(), 0)
call_7267 = relay.TupleGetItem(func_3778_call(), 0)
uop_7268 = relay.cos(const_7259.astype('float32')) # shape=(308,)
output = relay.Tuple([call_7256,call_7258,call_7261,const_7262,call_7266,uop_7268,])
output2 = relay.Tuple([call_7257,call_7260,call_7263,const_7262,call_7267,uop_7268,])
func_7271 = relay.Function([], output)
mod['func_7271'] = func_7271
mod = relay.transform.InferType()(mod)
mutated_mod['func_7271'] = func_7271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7271_call = mutated_mod.get_global_var('func_7271')
call_7272 = func_7271_call()
output = call_7272
func_7273 = relay.Function([], output)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6132_call = mod.get_global_var('func_6132')
func_6133_call = mutated_mod.get_global_var('func_6133')
call_7293 = relay.TupleGetItem(func_6132_call(), 1)
call_7294 = relay.TupleGetItem(func_6133_call(), 1)
func_4698_call = mod.get_global_var('func_4698')
func_4700_call = mutated_mod.get_global_var('func_4700')
call_7295 = relay.TupleGetItem(func_4698_call(), 1)
call_7296 = relay.TupleGetItem(func_4700_call(), 1)
func_4746_call = mod.get_global_var('func_4746')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_7301 = func_4746_call()
call_7302 = func_4746_call()
func_5334_call = mod.get_global_var('func_5334')
func_5339_call = mutated_mod.get_global_var('func_5339')
const_7312 = relay.const([[3.270742],[-3.863758],[3.645571],[-3.948240],[1.699905],[-6.367276],[-4.095770],[-7.255359],[4.737445],[7.021383],[3.685095],[8.256613],[-5.708268],[1.202304],[-9.264744],[-3.821581],[-0.996336],[-7.290363],[-5.353499],[-9.217010],[-8.529774],[1.135826],[7.817357],[-3.519651],[4.916652],[5.444133],[8.697039],[-6.335367],[4.299636],[-6.448983],[8.457701],[-4.038165],[0.950908],[1.696503],[6.158029],[9.605194],[6.190561],[7.486670],[0.150246],[3.325102],[9.314495],[9.352188],[0.461815],[3.099711],[7.142980],[-3.755137],[-4.873152],[-8.492486],[5.421316],[7.155524],[4.442912],[-4.253274],[-7.941183],[-6.527777],[6.402201],[-3.450728],[-8.381782],[5.634238],[1.695763],[-5.402216],[-8.340493],[-5.249003],[3.423886],[3.470919],[-2.448356],[-7.408561],[7.195733],[-2.156977],[-0.389801],[2.437369],[-6.757313],[-9.673390],[1.670884],[-2.333551],[-9.162228],[8.074551],[2.677242],[1.028279],[2.899001],[4.731743],[-8.868363],[4.975544],[5.972537],[6.667278],[-6.737981],[7.997161],[-7.606143],[3.623189],[-6.194926],[-1.184654],[2.530889],[2.479987],[5.787385],[4.668253],[3.799918],[4.050771],[-7.208354],[-7.743118],[-5.434245],[6.024645],[-4.897252],[-2.542264],[6.807700],[8.007719],[8.417110],[-7.040213],[2.278774],[-2.200859],[1.705964],[7.227760],[-9.428078],[-8.098114],[-5.674500],[-6.278733],[-5.818630],[0.357254],[8.677457],[8.276145],[-6.412158],[-5.684535],[-5.589845],[-6.958172],[-8.269344],[6.785711],[-7.091385],[3.346481],[3.619104],[-4.107281],[-3.850223],[-6.514499],[-2.451673],[3.609540],[6.752600],[-6.080230],[0.135954],[-0.431824],[-0.662107],[-3.448551],[4.842129],[-2.555384],[-7.528144],[-8.323888],[4.497401],[8.369702],[-2.600641],[-0.546600],[-4.633884],[-4.414890],[-5.391601],[7.404822],[4.054408],[8.218553],[-3.067548],[-3.688627],[8.620125],[6.414392],[-3.290774],[0.273607],[-6.737488],[5.670488],[7.794433],[-4.607307],[-5.179348],[6.405535],[5.190266],[-9.279393],[-1.749670],[-2.744113],[9.469689],[-2.033593],[0.864391],[9.612999],[-0.394939],[8.560084],[5.512723],[7.923581],[-4.185007],[-4.137666],[-4.917883],[9.482743],[-4.269378],[-6.666357],[-2.547267],[9.353400],[2.829501],[-6.102711],[-6.949669],[2.720374],[0.084910],[8.722236],[2.954695],[2.774391],[-7.931958],[-8.710876],[3.090154],[3.090139],[-1.331134],[4.936455],[-7.272744],[-4.228245],[-6.198766],[8.690476],[-9.787801],[3.446290],[9.802815],[9.595551],[5.764416],[5.903413],[-8.242718],[-2.943008]], dtype = "float64")#candidate|7312|(210, 1)|const|float64
const_7313 = relay.const([1.098861,-8.145235,-6.103243,-7.825951,-9.932586,4.285649,-7.131863,-9.745510,-9.518746,-2.635298,-5.038342,5.504468,-9.390546,-2.240341,3.273372,4.603268,-9.722796,9.799588,-9.028547,-4.374589,2.426416,-5.955119,-7.451909,7.949697,-3.969395,6.560254,4.587759,5.432081,-8.119879,-7.443798,-0.510921,6.086115,2.246650,-8.133521,-9.630102,-1.086324,-7.875071,4.276605,8.038903,8.271391,-2.384821,-4.386773,-4.479911,4.930557,-4.734776,-2.901208,7.678154,3.571014,-2.137232,1.574397,-0.509770,-5.874109,-3.493302,-2.118272,1.894890,2.326729,-5.045751,1.192256,4.611395,4.964841,-4.780035,2.546892,0.350416,1.621272,-2.669266,-0.093648,-3.502592,7.255527,-0.531820,4.298284,-5.490732,-4.007295,-2.455305,7.286707,-6.925588,1.612580,-2.409003,4.541409,-2.960019,-8.072028,6.698552,6.994548,6.934432,-6.547609,-2.508894,9.644898,-3.513796,8.167478,-7.026538,-8.661841,-7.264702,6.747226,-0.060101,-6.838200,3.213738,1.432464,-4.373601,6.335651,-6.682986,8.283970,9.394877,1.521938,-8.041732,-7.524627,6.588568,-5.621126,7.957443,-1.562633,-7.543387,-7.014960,2.551591,-3.308762,-3.363097,-5.341085,9.607354,-3.116128,-1.373214,-4.167706,-2.921224,5.025700,6.728606,5.275736,-6.002636,0.509780,6.172400,-6.284357,0.851133,-7.828474,-4.135338,-1.143510,-4.586758,-7.086299,-0.873920,-1.450830,-1.122387,-3.356653,4.306232,-1.537038,-7.128599,-8.787217,5.514267,-9.672081,2.598026,-6.659563,5.133457,7.310530,9.434790,5.888734,-5.664881,8.148552,3.056527,-2.323876,3.534208,-3.375735,-1.493598,6.278123,-4.900125,0.647451,-5.475161,2.879006,-6.166557,-6.282210,6.837025,-8.818623,9.461039,-9.813903,4.209662,9.443558,1.188566,-8.962908,-5.061864,2.409701,-0.314572,-5.029072,-1.497287,-8.053213,-2.515703,3.530953,-6.595315,4.446179,4.191438,4.102274,-0.246616,7.297062,-3.653194,-8.218607,-3.296406,2.793618,-2.284950,5.331766,-9.530876,1.629537,-3.303900,-4.552084,-8.884436,-0.521768,2.478935,0.082706,-4.889008,6.229393,-7.406441,9.019351,4.193113,6.055120,-9.977202,-1.797158,2.418923,5.049688,-9.494367,-0.975613,1.640032,-4.058985,-5.358207,3.391602,7.324266,-7.516754,-4.889019,-2.890339,-8.850103,2.653442,-6.785532,4.183567,2.426873,-7.475874,-4.362254,3.452626,5.637773,-6.362184,7.371950,5.369012,-0.207748,-9.715670,5.158780,-0.701724,3.077835,1.090523,-7.502966,8.346476,9.706934,8.421728,-6.783165,-8.251375,6.445147,-2.498380,-9.389519,7.705451,1.109795,7.391416,-6.487113,-4.905512,7.427098,1.281544,9.436563,4.918849,-6.803838,-9.708860,6.803678,4.857781,-8.122555,7.168190,3.436442,4.409481,7.450755,8.755426,0.122961,7.693020,5.905245,-7.817171,3.099605,-3.642126,-2.208407,-2.666994,2.358104,-2.004491,6.590715,-0.732787,-1.587749,3.243990,-2.489373,5.291746,3.108146,-0.177633,-8.139646,0.027317,-4.439654,7.452807,-2.291219,7.520787,4.392831,7.622935,2.818825,7.585985,-8.092227,0.788684,-7.846525,-4.703801,6.981365,-1.244452,5.866149,0.845927,7.931601,-0.882732,8.159975,3.777841,-6.599821,3.288494,-6.085009,0.389750,-1.710083,3.050666,-9.305352,-4.378279,-0.774496,3.537192,-7.391175,-2.291979,3.159768,3.844374,-3.870620,-7.801181,-3.237722,-4.882139,-4.742226,6.326130,6.563510,7.181988,-3.582326,3.372298,7.102520,-5.291696,-4.555584,9.983124,3.039883,-7.799332,-0.556516,-6.101135,-7.795382,8.837153,8.948520,2.801344,-6.073102,-8.555562,-6.094589,0.876994,-1.028769,3.611328,-0.826690,-9.215623,-8.127234,8.510501,0.032948,3.105922,3.860364,4.788219,0.114551,4.655829,8.058881,-0.978059,0.635921,3.225440,7.147912,-9.875158,-8.773811,2.837269,1.142948,5.233043,3.857606,6.029878,3.784553,1.656747,5.972491,-6.973878,-2.790170,7.093795,7.990555,5.724233,2.481518,-1.419172,-2.311418,-7.565575,4.392395,4.687714,-2.708407,6.664623,3.863497,-5.568970,2.464395,6.383679,2.391796,7.005266,-9.746564,2.614818,7.716570,8.862341,-2.734742,2.619245,5.198918,-8.147539,6.518871,3.101127,-2.491754,-5.161523,8.212627,4.705745,-2.103044,3.291596,1.348276,-8.634225,-1.361399,-0.513296,-7.935239,-7.111223,-4.790454,4.776701,-4.210373,-0.852056,0.885885,-3.100005,3.629706,8.546353,6.814890,-0.741308,-6.488231,3.016272,-1.861433,5.672535,4.697215,-2.089879,-0.208356,-6.004270,-2.182388,6.086732,4.231928,-3.574179,7.285537,-4.395711,-3.750851,3.331174,3.921338,-2.908109,-0.471479,-5.028544,3.516570,-4.654735,9.174616,5.345960,3.655376,3.663971,-4.846916,8.528096,5.217105,-1.038311,-1.187515,-7.369820,-2.263383,1.442745,-6.550179,7.557649,-5.857666,1.766727,-0.009059,-9.131449,7.376389,-1.461557,6.637181,7.470176,5.691118,0.021451,5.107777,9.492794,-4.470411,6.028606,2.474053,-9.991318,-6.017955,4.463012,-6.195359,-6.094015,1.587684,-0.756476,7.995359,0.435525,6.793731,-7.078735,5.701620,7.195635,5.180992,-7.305356,2.581717,-3.384566,1.302140,-1.965714,5.478614,7.691787,1.538423,-5.679722,-0.879652,5.261335,-8.900186,-1.848511,3.387029,1.935979,-3.384545,4.756557,-6.452528,1.790887,8.004042,-5.208144,7.154731,0.249944,1.277383,7.842609,-9.389984,1.479436,-5.302198,-3.375091,3.957967,-6.696227,7.611541,3.656694,-8.807713,1.210133,-1.716200,-7.625900,-5.898632,-7.390800,9.788262,4.985288,-8.655784,-4.221608,-4.915280,5.437608,-7.073577,-8.614745,0.237694,-6.386598,-6.212485,-1.559414,3.764226,-8.101961,-8.297770,0.463884,-7.150373,6.392117,5.129058,-3.223034,-6.715103,-4.634341,7.434546,7.474657,-0.700196,-4.365547,8.709992,-6.889455,-2.744844,-1.098512,0.583976,-4.263270,-1.111804,7.064288,-7.373815,-6.135172,2.877141,4.928559,5.167385,2.707376,-0.657223,-1.361520,-8.309415,-6.817359,-5.413020,-9.111688,-2.900777,7.134568,-1.284528,0.885730,-0.515511,-2.116223,-2.832647,0.788011,-2.932179,1.497196,-7.059902,-5.258780,-0.077624,7.264146,-4.462312,6.452815,0.582545,2.826230,1.200496,-1.898301,-8.399513,4.449067,-1.229018,-6.552527,4.501318,-8.998583,-0.955357,5.182150,2.467374,0.145905,-5.163054,6.937295,5.887055,2.295444,1.169803,6.385127,-6.318932,-7.067520,4.037143,9.677400,-2.864088,-3.961966,6.923484,-2.140033,1.517217,-7.028716,-7.370006,3.403524,-7.951762,-3.243106,-8.300114,-8.504131,-2.077376,9.600022,4.900300,-1.158680,-5.065491,-8.573727,-7.125976,3.780178,-7.757796,4.610896,4.032583,5.635521,-1.346187,5.990144,6.102846,6.322979,-5.585089,8.416483,-6.447356,5.224508,-4.439355,-5.435645,-4.990975,-8.809911,6.653009,7.377641,-1.747926,-7.784953,-4.792952,3.091307,5.613675,0.559956,-7.955515,-2.143302,8.091075,7.966199,6.759587,-6.647274,8.048730,9.166982,8.179717,1.475204,0.409109,-0.406179,4.430137,0.841362,-7.640456,-8.961362,9.033000,2.365591,2.549763,-8.450491,-7.633585,-6.436272,-9.010048,-9.552900,3.481637,7.875835,-4.469685,-3.404776,-6.571556,-4.483273,7.241830,4.008681,8.528599,6.014141,0.527940,-4.047555,-2.066214,-3.342385,-7.830956,-6.687836,-8.970376,-0.860186,1.579685,0.972392,-7.069116,8.948671,-5.040575,-9.972256,3.867115,-9.280291,6.213641,7.154066,-8.663827,-0.912190,-6.613778,-8.649986,1.557219,2.004359,9.669190,-2.840362,2.131518,2.850808,-3.689647,3.993873,7.720306,-5.173475,-5.951735,4.308253,7.238333,4.857623,-1.113339,9.123516,-2.978415,2.401896,4.556813,5.131774,4.697263,-4.914823,-9.405822,8.269257,-5.696766,1.396139,1.423080,3.756217,-4.371049,0.749956,-4.753285,-2.749182,4.782824,-3.147626,4.161212,8.014612,7.429584,-9.472773,-2.028412,5.592231,-7.061487,6.478592,6.450819,-1.028941,-9.420098,0.599031,-8.926623,5.816290,4.873462,-5.524305,-9.747578,2.842067,-2.853271,8.487117,2.000942,5.530550,4.081945,-7.789548,7.689443,3.213701,-3.501351,-0.290429,-3.346771,-5.709404,3.293137,7.756565,8.027194,0.371242,-0.029437,-2.348886,-1.053664,2.540090,-7.126098,-9.185714,5.755785,7.052564,-1.629021,-8.544575,-5.352765,-0.808372,-4.168950,5.105182,-9.721165,2.641302,3.517924,3.531950,0.805174,-6.597332,-7.921019,5.644205,-2.231493,2.270613,-1.086377,1.536408,-6.656742,-5.809042,6.911103,-5.893441,7.020260,4.617476,0.006839,-0.515475,0.798308,3.756225,0.388106,9.953876,9.909847,2.138935,0.479921,-1.718308,-2.125822,-4.959641,-5.946556,-2.792437,-8.470158,2.444296,-3.398228,-7.644057,-0.154582,5.000400,-3.375745,9.036240,3.809948,7.920107,7.716736,-1.439811,-8.150695,-1.843962,-0.178907,-9.296527,-5.670398,-6.340464,0.028826,-6.227693,-8.243787,-3.288915,2.004930,4.220765,-8.169799,6.836508,-7.337807,5.153317,-2.109073,-2.269589,-7.204049,3.563169,-2.300407,9.610409,-3.097870,1.807882,6.917670,8.559831,2.551969,2.658012,8.337127,4.424030,6.683824,-3.407467,-9.741204,-5.252434,-7.798002,8.202418,5.759425,-5.120376,4.022185,7.891517,9.085122,9.067845,8.020805,-5.364006,0.179226,-7.511772,6.462650,-9.858034,5.929501,-9.313663,-4.397311,-7.454566,8.041259,7.658548,-6.070292,1.372784,8.748233,-3.258688,-4.933941,6.587485,2.997691,-3.871435,-6.186139,-3.559930,1.931642,4.602554,9.054457,5.022855,1.846885,7.050108,6.487717,0.835777,4.885800,9.987502,0.546436,2.053973,7.372769,8.376872,-7.148814,4.204635,-2.256315,6.614986,0.803337,-0.327272,1.156910,-2.936973,0.350879,5.870950,-2.011025,-6.047728,9.547687,-4.230469,5.703221,-3.159849,5.156297,8.215430,0.005992,4.447270,4.128456,3.547181,4.883064,-5.689449,0.434807,9.628366,-5.281422,5.494194,6.342811,-3.430105,2.973597,-7.300303,9.521543,9.707003,-9.035548,3.596306,-8.633140,-5.531419,-2.656182,-6.553524,-5.296451,1.216503,2.829516,-4.510499,-8.155648,5.919586,-8.580489,2.136324,8.741418,-1.618333,8.012267,-4.702434,-5.240870,-4.389454,8.254518,-4.009720,-9.178293,-5.608187,3.819595,4.509625,-2.599593,1.522248,-6.962770,-2.475879,7.927775,-1.544560,-2.609683,6.807041,4.335659,1.929932,-1.915963,1.439645,-1.043583,2.004932,-5.551422,6.941420,6.119276,4.562378,8.443882,-7.714830,-9.586536,-7.588576,6.694104,6.918869,2.045002,5.689677,5.680621,-6.179743,-3.102006,9.039823,-9.755347,2.090868,1.764606,-4.647602,-7.363964,-0.032013,8.015077,8.383447,-5.641986,6.602269,-0.673084,6.042741,5.184503,5.974344,0.931053,7.553983,0.954467,-6.589906,7.341486,-9.665390,9.459120,8.640310,2.163937,8.212177,3.781985,5.634203,7.383419,7.878869,-9.707607,-9.260548,7.265533,-5.409748,5.725379,-6.096019,2.505832,-4.992962,0.078963,8.860392,1.851071,-3.923480,2.167067,-2.668392,-2.356006,-9.056746,-6.456525,1.813741,-1.509896,-4.391435,-3.949807,-3.713617,5.673586,-4.946026,-0.554342,0.282093,-0.443032,7.670011,4.817652,-3.187110,5.337633,9.305909,2.660055,-0.405045,-5.119194,8.384188,8.828718,-1.456336,3.847064,0.291172,-2.234183,6.137475,-0.892825,-8.005989,-7.095665,1.290585,9.116972,6.041883,8.874976,-0.522139,-7.799307,-3.921489,-2.511564,3.071321,2.830021,2.175965,5.093959,-0.397447,7.888689,-5.398404,3.663295,-6.354784,-7.491403,-3.411432,7.796177,1.957870,-7.169826,0.313188,-6.943722,-8.011025,9.850696,0.531941,-1.262934,-2.289971,-4.467458,1.859473,-0.630042,8.874133,2.119224,2.268625,-7.273611,9.147969,-0.012324,6.197942,1.060784,9.649317,-5.899244,4.338832,-9.835332,-8.419105,-8.420737,1.906643,3.012936,0.236937,-4.083202,9.761084,1.785253,4.032049,6.968370,-8.774749,6.260701,9.375307,-0.398313,-2.650693,-8.641455,-4.308344,0.938006,-5.282548,-1.692224,1.237808,-3.441846,7.647346,2.791479,3.677664,-2.181315,4.592572,6.771761,0.060877,-4.067572,9.804695,-8.578285,9.750697,2.727678,4.611065,-9.516375,-7.483715,7.864900,-4.573873,-6.253059,-2.395152,-1.498157,-9.690037,-0.486069,9.350615,-5.398726,-9.544347,-0.046722,-2.313761,4.496599,3.597029,-0.387429,-2.920135,-2.801399,2.979283,-6.237176,9.447557,1.838186,5.282962,9.692709,-1.262072,2.186978,-5.328547,0.591763,2.363856,-5.788832,-5.172541,-0.607285,2.241544,8.569138,1.149039,-1.174396,-4.448849,1.819108,7.087282,8.753664,-4.898949,-5.837394,-5.721939,4.857938,-9.840917,5.129680,-8.650034,7.974589,-8.218481,-4.137100,5.880076,-5.829279,4.832898,8.743892,-5.012429,-0.563363,7.105235,4.050663,-4.348627,0.499554,9.457464,4.342712,-4.013873,9.773928,-0.043561,-4.238990,-4.199832,5.507384,-6.547911,-8.297329,9.362340,2.981084,-6.694108,2.291001,6.101418,3.917019,7.956125,6.720332,-9.746519,-4.823720,-1.337529,-3.684127,4.775579,-4.354816,-2.061396,-3.899944,-8.982553,-7.067187,-9.949031,2.640696,-3.506547,-3.269864,-7.750643,6.984015,-4.381885,5.597085,-1.045187,0.267742,5.668029,-5.184989,2.585469,-6.128950,-9.699160,-7.000952,-1.738845,0.124071,-9.916317,-8.359394,1.694413,8.874674,0.444085,-4.030869,-8.761141,8.137772,-4.974755,7.949262,-6.620902,6.553582,-8.088539,4.148570,2.407228,9.575186,8.198834,-3.817734,0.466089,-6.612284,-2.019367,2.174364,3.855337,0.647142,-6.010632,5.542919,-0.235052,8.184479,-6.915018,3.335980,9.384063,2.923976,-8.562985,3.598891,-6.929338,-1.636510,4.757912,6.804844,-8.189634,-1.385216,-8.963108,5.004425,-9.468291,7.373102,3.178979,-8.553255,-5.314666,6.039955,-1.849887,-8.087373,2.266719,8.406313,-2.876180,9.432942,9.969187,9.323838,1.337793,-2.333054,-3.716801,-1.545543,-2.263465,-0.975490,-3.218150,7.237490,5.626046,2.961754,-6.124854,2.044003,-2.309928,2.367703,-6.263868,5.696911,1.519584,4.648366,5.666736,-6.060016,-8.437857,-4.718854,-4.928627,8.339276,-0.486722,-6.672040,-3.334364,5.103963,-6.149935,-0.145506,-1.359118,-7.956670,-9.209522,6.826781,8.703875,2.522628,-9.459481,1.949258,-4.002289,-3.207590,4.735907,0.196825,-2.068189,-5.938107,-9.246403,7.344376,-7.741292,-5.493301,1.332246,0.182459,3.591922,6.353062,-8.928299,5.313022,2.380180,2.863625,-2.882485,-9.280013,-3.099499,-1.051570,-9.708497,5.471287,9.808436,9.908821,2.295940,-7.363938,1.881603,-8.469754,-4.305023,-3.229947,-6.885351,-8.139376,9.068467,9.920217,-2.602140,-0.513566,-7.286320,0.867470,6.321797,-2.522453,4.229239,-1.688459,-9.961561,7.663214,-1.793231,6.840739,3.054108,2.412439,-1.073113,-3.228032,-1.761272,4.076671,-8.122085,3.002958,4.289449,-3.114915,-5.679369,-4.559981,-9.725822,3.996671,7.303871,6.787476,-5.335029,1.805233,1.394493,5.467152,-2.622403,-4.917651,-4.608739,7.091763,-0.634511,-7.460100,-9.453757,8.097465,-2.119705,5.885377,4.139291,9.068236,5.386602,4.073736,-7.004040,3.239579,8.440122,-4.596980,8.573684,-2.712408,8.585762,-1.149625,2.941727,-6.038753,-1.953688,0.008803,-4.686769,3.915514,-3.253716,6.867192,-8.621418,8.733137,-3.177747,6.362787,5.257075,1.937450,-1.449288,-6.247909,-7.320132,-2.246954,-7.844565,-3.922576,-7.072926,4.433226,-7.762385,6.332066,3.319187,9.019238,-8.142561,0.997692,-8.913860,7.705989,-1.571526,-2.814346,-0.279423,5.498054,-6.420085,-0.619341,8.010464,4.456004,-7.588240,-5.723187,-8.782512,1.052276,-9.242296,-7.389256,-8.943457,-0.370879,-7.374868,8.998679,4.703569,6.240531,-5.254769,-9.004837,1.948280,-8.700030,-4.526977,3.782263,-2.088352,-9.512942,3.120650,0.215320,-7.433757,-8.860166,-1.858664,3.146141,-4.780313,8.269676,-2.373915,2.032121,-0.790251,2.579476,-0.606804,2.367699,-4.493664,-3.954519,-9.500117,6.436923,3.276831,2.021743,6.646530,9.711800,-9.014352,-8.268954,-4.049457,-2.714139,2.051037,8.863588,5.063828,-8.612054,-9.281724,4.077942,-7.512049,4.901429,6.422038,1.898035,-7.093382,-0.021620,-4.590495,6.465214,-4.686720,4.156468,-8.334017,-2.942665,4.974016,1.492375,8.878965,-9.225630,5.426081,9.319401,9.651655,9.761291,5.094803,-0.254623,-6.923698,-4.231324,2.755085,0.517959,-8.357316,5.613400,-8.212201,-0.207413,-8.236845,-4.372110,-1.469130,-1.561735,-9.899957,8.632212,6.634154,2.616478,-0.902103,9.372942,1.415811,8.220256,-8.362531,7.148070,0.850677,-5.323571,8.749834,2.848020,-8.086585,3.459364,7.068586,-1.764287,-6.330072,-3.027161,1.278820,-8.761885,-9.450388,-3.964048,3.661262,-8.893878,7.251948,-0.630554,5.901761,4.270187,0.200082,-4.786743,0.738468,3.910087,3.211471,-0.011115,8.916678,8.178092,-2.159161,-9.447116,-0.322627,-9.455544,1.875561,-3.247838,-1.432948,-7.799179,-2.798577,-2.835475,4.442924,0.646699,-2.798641,4.779415,-1.248728,9.469751,9.150340,-8.913387,-1.848742,0.542060,0.434722,-1.492411,7.395131,4.641717,-0.712268,-5.456432,-1.282987,-5.039669,1.505079,-0.147680,-0.867712,3.266592,-2.179031,2.486546,-9.560607,-9.651647,-4.959024,-8.614594,-9.631441,6.033757,4.739260,-7.257586,0.537822,-0.434705,0.971410,6.644658,0.189078,4.293629,-1.329082,-2.392114,2.039453,9.716838,-7.175025,-9.574143,1.595439,8.528920,1.888230,-7.702931,-6.419740,3.741178,-5.916358,4.590138,5.744911,1.122619,-2.763098,4.484530,-3.375778,9.943811,-2.818793,1.185511,-4.486806,-4.464994,3.314760,-8.290447,-1.410909,1.927686,-1.411060,-7.775058,5.479121,-0.598318,3.195423,2.227511,-7.793414,-7.136859,-0.475047,-6.051992,-1.885255,-2.795400,-0.820533,9.518658,1.957476,8.733034,-1.229873,0.026946,2.719072,4.433223,7.179040,-2.086438,9.329437,-8.324026,2.067236,-4.534310,-8.586398,6.972530,-6.112044,2.839608,6.643217,0.623618,-0.309644,9.343843,-2.585346,-0.658915,4.568660,1.550438,-6.291052,6.811724,3.686847,9.453575,-6.887039,-4.198365,-2.854288,-3.484060,-1.795802,7.879147,4.668592,-3.530733,9.502092,8.467106,8.452765,4.113095,2.521553,4.345730,1.531062,-6.967946,2.631637,-4.358812,-5.883445,0.459177,-6.271350,4.877723,9.175396,-3.059414,-5.803124,-7.047130,-8.889470,6.651678,-5.754461,-8.053043,-2.783546,7.744593,7.297223,3.986378,3.854717,-9.474284,8.167650,1.300802,7.549720,2.816615,5.449384,-2.103644,9.918667,4.349108,-9.019725,4.464372,-5.819173,8.826343,-4.095917,6.853293,0.866261,-6.854392,4.373931,-4.000904,2.810567,4.987099,7.442840,-3.072600,0.935767,-4.549866,-2.379723,-4.113359,-4.496005,-0.101248,-1.526989,-0.228771,-3.134069,-4.704349,-9.264576,-1.716462,-4.678934,6.040258,2.764175,4.405711,2.851020,3.111237,1.496323,0.236883,4.194751,2.555719,3.836702,8.616912,-6.021573,-3.093892,-6.905997,-8.526676,-4.174283,-8.686615,5.990991,-8.479618,4.073482,-3.549001,-0.766811,2.494633,-4.772753,3.799657,-7.028151,4.181498,1.491093,-2.632732,-7.762408,-1.178765,-6.553189,0.969182,-2.321494,-4.903529,4.278244,0.119389,-0.392584,8.255364,3.413042,1.065563,1.587867,-9.650062,-0.717424,4.171770,6.832853,6.253682,-9.701586,7.062499,-5.710845,7.420679,2.961072,0.509603,1.205934,-9.076087,-4.857628,-5.333920,-3.265144,-6.837122,7.465706,9.815118,1.891008,-1.285468,5.917079,8.739576,-2.112722,4.288143,6.849787,0.046535,5.081813,4.154959,4.379381,-4.552043,-7.697106,-9.041320,-8.362335,-0.909782,-1.260833,1.589092,-7.324896,-1.981810,1.715268,-3.071772,-0.211530,3.179744,7.997999,5.039408,9.244527,-0.169915,-4.344146,9.746054,1.970752,9.767292,8.719880,3.221376,4.237873,-5.800950,-2.079938,1.780887,-3.821374,-4.072344,8.766918,1.451890,1.852611,-3.349458,-5.305300,-4.911825,3.376598,-1.360628,5.663400,-1.199725,6.823634,2.787791,-6.925027,-0.786538,-8.919773,-6.456729,4.708941,-2.582613,-9.547174,-2.822886,-0.380582,-9.591912,-5.308864,-5.416349,-3.958147,-4.402937,6.384620,8.150390,-2.936519,3.643976,8.175806,-4.424827,4.782004,9.466131,0.567805,-5.168366,4.216866,6.306782,3.124751,5.697829,8.162884,7.639925,7.374270,-6.669352,9.389763,-0.633239,1.430228,4.497847,9.160452,-6.636694,-8.835990,5.365725,4.227738,-6.932540,-9.844280,4.095771,2.884311,5.546724,4.232942,1.990163,2.064167,6.508189,-0.461696,6.261217,-3.670969,4.184063,-4.652409,-6.591536,2.839017,2.702233,-9.820904,5.479057,2.136031,-3.249062,-3.641064,7.313699,-6.945715,1.850419,4.805055,-8.819235,-8.821138,1.983735,-6.628560,0.757389,-0.449079,-8.814092,4.420947,-4.683341,-5.187743,7.857250,-8.284568,-7.035124,-8.286510,-1.335883,-3.849189,6.789148,-1.120155,2.491916,-4.497616,-3.022857,5.191133,0.741840,9.486103,-0.657025,-9.728247,-5.368110,-0.438941,9.791447,-3.801472,0.011508,0.928442,-0.564704,9.383707,-3.920789,-8.891473,-8.906932,4.307175,-9.122933,9.786045,-5.242439,-4.875033,3.737632,3.398535,1.666922,-3.804323,-4.280341,4.429260,9.448904,1.717261,-4.115817,-6.837917,8.091778,-5.733040,-6.698523,-5.675310,-5.508107,-8.910471,-9.648362,-1.368268,9.428376,-9.987812,-4.384931,-4.966363,-5.940913,-6.427739,6.627587,9.099309,-2.459668,-0.539826,0.162384,-0.883689,-4.517228,1.804030,-6.978772,-9.862888,-0.715579,-9.153542,6.006041,-7.756940,-0.172041,-3.982093,-4.620715,-0.700912,-6.551176,8.462548,-2.748260,4.966925,-5.206318,0.816884,-6.731762,6.489110,-2.327301,-4.920701,-1.642984,1.758029,7.620080,6.647756,1.851212,-1.007684,-7.197047,5.977707,9.729793,2.903324,-4.452853,7.721156,3.274437,8.018777,-8.187762,0.914342,5.414275,0.766057,-1.891006,-7.055770,-5.814861,6.201818,-6.071133,6.694975,2.577882,-3.491444,7.819509,1.366455,-2.411719,-8.399697,-7.802407,9.672339,-9.973580,-1.624958,2.126671,-6.782196,5.411192,7.339258,0.251654,-4.560957,3.325707,-5.622466,-2.274769,1.174565,-3.863271,0.726430,8.966125,-8.534908,1.276773,6.786426,5.827774,-0.310562,2.219404,5.883765,6.726767,-2.196081,-6.066344,2.024923,-5.266675,2.535029,2.830517,1.700438,0.302915,-0.298818,-4.666063,-4.160443,-0.314200,-9.767366,-0.253496,-5.292685,7.374072,-0.439382,2.687235,-1.068787,9.588442,-0.507509,-5.505537,3.441582,-7.652583,-1.223390,3.933183,-6.044013,-7.127019,-5.028826,-5.023468,-3.646770,4.616611,8.159918,-8.537448,-0.861200,8.079833,-8.737372,-2.100109,-2.134585,-2.778355,9.393710,9.940085,4.257818,-4.296972,-8.988859,-4.714558,5.509663,2.754015,-8.024300,-3.225581,3.805123,5.119674,-2.280269,-8.153848,-2.319063,2.799194,-9.527282,-7.765830,-2.237660,1.264976,5.545216,4.867537,1.653944,-7.194852,4.418754,-8.517164,-2.091665,-4.631129,6.585513,5.475398,4.786967,5.303697,4.819137,6.644024,1.093162,-5.990961,-1.352747,2.317595,5.220172,3.542023,-8.520750,7.402687,-9.623260,7.343218,-5.419829,0.503082,-9.997512,-1.450643,-4.589037,0.230130,-6.817797,6.816083,-2.985036,5.109105,-7.037951,-0.416813,-4.685271,1.272051,6.514178,4.457900,-7.259731,-1.363565,2.935528,-4.910033,-1.958653,6.597811,-3.747327,-7.108112,4.468271,-2.016635,-5.418370,6.397731,-9.124970,1.277002,9.209071,-6.533097,-7.863706,-4.865742,3.971567,3.155465,1.229378,-2.699441,3.392175,-5.965378,-3.839431,-6.218067,0.359034,-8.379362,6.609446,1.138957,-4.566769,-4.130935,-1.817143,-1.474960,8.436537,-7.975760,6.646591,-5.019194,8.236245,8.375513,0.887751,-0.039567,8.879728,4.669893,3.793461,-0.189218,-5.378786,-2.357684,8.092039,-4.253513,-8.986934,8.463083,8.565457,0.201564,-8.340232,5.733892,-9.309103,-7.703487,-3.568027,-7.755265,3.735209,1.491602,1.732086,-5.586727,-2.574458,-2.423044,7.944813,-9.059829,6.901271,0.252245,3.349126,-8.894093,6.858495,9.946205,-1.303299,3.159203,-2.310536,7.079067,-4.170776,7.127113,-1.161258,3.326308,3.654002,-8.553114,8.946203,2.274477,-2.969173,5.511938,-1.368914,7.885147,-1.964733,-9.302328,6.865551,4.997541,-1.556844,5.480806,-1.249121,-0.169146,-0.468883,-3.459649,7.576259,-1.863352,9.175386,2.129659,4.469244,-5.057588,3.141701,-7.324671,-2.165732,-2.624095,-4.295348,2.156761,-3.591832,0.879902,3.493883,3.752826,1.317100,-3.436698,2.875729,-2.687370,8.797184,-8.285864,-3.808011,1.769194,-7.833350,5.486873,2.408796,0.929167,-0.589897,2.869724,6.518078,-2.177650,-5.924193,9.389574,-2.081810,-7.457172,1.967997,-1.248562,-2.909107,-2.082906,1.444247,7.790404,2.588646,9.052143,2.143110,1.204015,4.830524,5.356021,-4.522283,2.883702,3.210429,-6.860601,-7.840069,-4.367428,0.481782,-4.386928,-6.593833,5.836854,-8.699082,8.107482,3.701516,-5.856216,9.730695,4.327989,2.488457,-1.624433,-4.178262,6.610140,-4.453670,5.147265,-1.719862,-5.503655,-1.279281,-8.505297,-5.169215,-0.964704,-1.224143,-6.158233,0.686429,-1.933776,-9.933567,4.456648,0.282680,-8.562271,-7.959831,1.326106,1.976793,8.325614,-8.738608,-7.092414,4.723016,-1.738894,-2.555813,0.279388,-5.668527,-1.049059,5.316434,-3.951150,-7.999534,-7.446183,-7.941579,7.821284,5.511671,8.415057,2.506244,1.351801,6.775723,-9.672048,-4.493501,8.242417,1.782900,-9.902449,5.936458,-0.766874,6.393426,-9.824672,-9.936708,7.696588,-7.076571,3.682042,-6.114856,-8.504958,3.458110,3.501440,0.083797,-4.894287,-1.215068,9.702329,4.880727,8.554958,-4.363528,3.076256,-2.744253,-2.043329,0.030881,-1.144617,-4.167039,6.644421,5.304246,-9.900009,6.579452,-1.503612,9.807430,5.912564,3.111659,7.334911,-8.923512,-5.544997,0.476760,4.013933,8.646427,-9.793909,9.320989,5.429716,9.049648,7.674529,-1.095328,-3.004043,8.401103,7.307019,7.660152,-2.902100,1.549494,-4.739918,1.087512,8.659033,5.803802,2.453263,-1.301821,0.239150,-1.639489,-5.183120,-3.390660,-3.679306,9.138069,-4.183383,-5.470948,-1.868901,-0.545567,-5.097746,8.545074,-5.430274,6.780553,1.557137,-0.808679,8.735688,9.983592,3.436034,6.180619,6.385134,1.721560,6.772244,-3.356717,4.294823,-4.098036,-0.373882,-1.026504,-3.981637,-0.372738,8.939096,-9.977776,2.618215,-8.220323,-1.303821,-8.515625,-0.858375,7.016282,5.672723,-9.095719,-8.763516,-0.813816,-0.050719,5.512437,1.673224,-3.608396,-6.662020,5.920525,-2.193590,6.526217,2.610750,-8.725597,1.488608,1.946650,5.127960,-5.101425,-0.528916,-3.653002,6.612102,7.451021,-3.896389,6.268254,9.239891,-5.460365,-3.174331,-6.167657,-5.574364,-0.660174,-7.516280,-4.376021,5.236078,-6.671563,-4.598930,-1.425275,-7.547191,-8.540069,9.919398,-6.478116,-2.100265,-9.585026,-3.571908,2.003323,9.189986,-2.255466,6.352258,8.170513,8.674409,0.747983,-0.885140,3.443464,4.658226,4.771907,4.814800,9.559399,8.935778,1.295227,-5.064953,-7.741729,-8.664585,-0.219646,6.470958,-4.689808,0.248204,-7.434204,1.555305,-1.271117,9.712390,7.903776,5.066967,8.982153,-4.849824,-2.692608,6.208902,-4.137612,-1.703703,7.940441,-8.425792,-0.597961,7.915926,0.065625,1.169885,-4.545098,-9.963709,2.052889,-6.168338,-4.428875,4.529020,-6.605825,1.016427,-0.536076,9.806617,4.275991,1.703287,1.851931,8.483427,5.662176,-9.813266,2.922905,6.559916,0.231936,1.025914,-3.824318,-5.635571,0.665865,7.354743,0.977186,-8.890713,-1.719891,2.326106,-1.150696,7.740960,2.980986,1.935667,-5.882403,1.038978,8.421923,4.140865,-8.109909,-1.102551,3.871293,1.879928,-4.919487,8.824299,-9.399168,-9.922251,5.790596,-6.574081,3.039629,-7.012350,2.600413,2.692028,-7.816019,-9.669574,0.036273,4.364746,4.734209,1.141029,-9.245118,-5.611075,9.823073,7.945415,-1.370083,0.919270,-9.561048,9.718099,-0.139405,-2.396900,9.244126,3.925742,3.975294], dtype = "float32")#candidate|7313|(2688,)|const|float32
const_7314 = relay.const([-6.937149,-7.026238,-4.022276,8.275100,-5.779968,-4.285157,3.887484,8.164447,-3.974622,-5.979117,9.767137,9.365962,-4.193226,7.990010,2.257078,-1.510226,-4.298483,5.329368,7.141062,-1.449313,-3.813124,1.406384,2.189703,3.161708,-5.254637,-3.087352,5.816280,-6.321938,-2.557440,-8.373635,5.812010,0.224578,6.558008,-0.303006,6.333733,-0.290946,5.128761,-5.097205,9.672059,-8.817927,1.673488,0.518581,7.455722,-1.393224,8.937553,3.651940,5.479781,-6.070322,3.021034,7.600575,9.189617,8.292695,-7.212570,-5.983602,6.874419,1.790563,8.299167,6.309507,5.590072,6.846335,-0.023996,5.676564,2.763701,-9.636231,-4.143611,-5.828466,-8.928551,1.861665,8.271640,-9.083084,-9.062571,6.153751,-3.369146,-3.058508,-3.104628,-6.425545,8.684257,-5.979802,1.991984,9.572726,8.971290,2.839526,8.227149,-4.104853,-7.872948,7.213368,-7.278822,7.206273,-3.594124,-3.275554,8.890817,3.520829,-6.554340,7.080809,2.188279,-5.998919,-6.763654,-1.875561,-3.542123,-6.375490,5.099394,0.735080,-3.560915,-1.102927,6.523672,6.614285,2.287660,5.055040,9.936592,4.161104,3.630391,4.321370,0.195821,-7.156695,-4.505138,2.455185,-7.011127,7.972970,1.197730,3.262685,5.068436,6.566717,-7.464030,-3.300929,2.379710,-5.209422,3.228435,1.992774,5.559006,-7.599569,-2.215678,5.532279,4.207925,-5.182826,-2.290070,0.988423,-9.418160,-4.590038,9.285848,-7.005490,-2.600201,5.191439,-1.553893,-9.609500,-4.161820,1.388268,-7.099737,-3.950593,-4.848909,-6.603928,-6.950624,-8.427578,-5.890881,9.219925,2.035079,1.325714,-0.656263,-2.880856,5.426569,-1.726050,2.975284,-5.261346,-2.942642,6.904223,6.316942,1.254796,3.252919,2.091204,-4.948480,8.731312,-6.203379,8.456692,-9.677210,-7.212281,0.249470,4.339075,-1.649269,-5.559022,-4.098693,6.032886,-7.769786,-8.158687,-7.752884,7.579178,-2.969891,4.461037,6.902202,-2.169641,-2.555603,8.205010,5.658224,-4.555036,7.722466,1.530233,3.611610,9.011123,7.322753,0.911969,4.158886,4.321207,-7.836657,9.162230,4.914716,4.240000,-3.297827,2.088883,0.208364,3.456699,0.787843,8.704377,-8.621363,-8.812177,-8.707842,4.007559,-2.067853,4.380226,7.708163,2.726694,-9.979286,-3.568269], dtype = "float64")#candidate|7314|(220,)|const|float64
call_7311 = relay.TupleGetItem(func_5334_call(relay.reshape(const_7312.astype('float64'), [35, 6]), relay.reshape(const_7313.astype('float32'), [96, 28]), relay.reshape(const_7314.astype('float64'), [220, 1]), ), 6)
call_7315 = relay.TupleGetItem(func_5339_call(relay.reshape(const_7312.astype('float64'), [35, 6]), relay.reshape(const_7313.astype('float32'), [96, 28]), relay.reshape(const_7314.astype('float64'), [220, 1]), ), 6)
func_5053_call = mod.get_global_var('func_5053')
func_5054_call = mutated_mod.get_global_var('func_5054')
call_7319 = relay.TupleGetItem(func_5053_call(), 0)
call_7320 = relay.TupleGetItem(func_5054_call(), 0)
func_1042_call = mod.get_global_var('func_1042')
func_1046_call = mutated_mod.get_global_var('func_1046')
var_7326 = relay.var("var_7326", dtype = "uint16", shape = ())#candidate|7326|()|var|uint16
call_7325 = relay.TupleGetItem(func_1042_call(relay.reshape(var_7326.astype('uint16'), []), relay.reshape(const_7312.astype('uint16'), [2, 15, 7]), ), 1)
call_7327 = relay.TupleGetItem(func_1046_call(relay.reshape(var_7326.astype('uint16'), []), relay.reshape(const_7312.astype('uint16'), [2, 15, 7]), ), 1)
func_2618_call = mod.get_global_var('func_2618')
func_2621_call = mutated_mod.get_global_var('func_2621')
const_7342 = relay.const([2.315746,4.963353,-0.763119,9.349144,1.559561,-2.711258,9.077107,3.785327,7.612439,3.138777,0.948285,-6.493648,2.546470,-6.114232,0.964605,9.521186,2.700642,3.000501,-9.345012,2.678899,-8.557217,8.070517,-8.139279,0.089102,-2.761141,-3.565793,-9.500357,-7.311657,-0.502189,3.691675,-5.302499,-4.680189,8.316926,7.765133,-9.291138,9.772734,9.230306,-2.241821,9.336812,9.423400,-5.102624,9.316019,-5.092821,3.002588,-3.468082,2.880327,1.561471,6.345105,8.291393,-0.692842,1.158758,-9.013911,-9.829423,-3.286707,-0.133895,0.127779,-3.860828,-4.631489,1.248296,7.917664,-1.352979,-5.032963,8.826158,-4.797173,-6.646796,-6.871874,-3.157349,-8.749860,-7.445292,-0.656557,6.791830,8.274412,-5.417596,-4.200399,2.337411,-9.338635,-7.233278,6.017222,-2.398175,8.275641,3.174317,-5.164942,-1.719567,-5.617974,-9.777231,-2.817640,7.928803,0.631627,7.220294,0.807455,7.439652,-1.179767,-2.161131,8.850853,0.349981,2.945344,5.710436,-5.465617,4.041310,-7.734259,2.984664,4.055935,-9.486445,-1.205246,-9.969561,1.792113,9.813721,-1.789833,3.731985,-8.269877,-7.095065,0.670372,-4.477386,7.179582,3.997380,2.211776,-2.311185,1.192502,6.917060,-2.014143,6.326481,6.688075,0.875838,-2.375418,-5.476614,5.448102,-0.680805,-2.893772,-9.309716,-0.326541,3.865301,-6.114792,-6.578744,-2.946891,-5.516371,-9.887380,-7.153508,-2.511471,8.359847,0.201833,-6.459138,-4.222094,4.400222,6.428650,-3.756219,4.303712,0.158534,-0.155449,1.192943,8.893260,3.523073,8.147439,0.947000,-7.373793,-5.665026,-1.894581,-7.612547,-9.431451,0.977406,-9.080750,6.705222,6.853769,1.428283,9.592266,5.500871,-9.746896,-6.555374,-4.213078,-5.339949,-4.963977,-9.779971,0.641381,3.043376,9.556775,1.167499,-2.119840,9.515185,1.764405,0.313607,-4.283436,2.866142,-7.382499,-1.390701,3.899629,8.899039,-7.754458,8.994855,-9.530056,4.694530,5.294912,2.834978,9.237320,-0.370695,-1.431033,7.572065,-4.359976,0.045063,-3.723541,2.466992,-2.133443,6.589671,2.331798,-7.365487,8.287473,8.567177,-6.175562,5.962729,8.073180,-5.997973,8.378431,-5.579128,-3.170186,-7.767125,-2.073683,2.704434,-6.731965,7.110106,3.542519,-3.441647,3.431341,8.824557,-5.486342,9.171531,-5.230530,0.995982,-5.658725,5.287484,-6.203533,6.395209,-1.515574,8.819176,-3.598436,-2.999594,7.154752,-1.051406,-0.514333,-4.030964,-7.008618,-1.947088,-0.159471,8.820064,-2.218214,9.527569,-1.378212,0.574833,8.679425,-9.159729,0.823461,5.757964,2.117211,9.983065,-8.846190,-0.107504,7.758389,9.853052,4.771706,-4.086755,-1.486155,-3.218235,2.992884,1.353830,-1.998821,-0.577198,-7.273463,-2.689345,4.696664,4.269312,-7.276257,4.251498,-3.758778,6.520575,1.127991,7.574447,2.940933,-1.335166,0.968042,-9.112431,6.817223,1.145171,-7.946981,1.876965,5.148900,9.960500,9.685261,-4.292593,-8.017210,2.761631,9.181485,7.874185,-9.296008,6.291318,7.994007,6.047316,-0.873696,-0.577581,2.411756,4.379836,-6.288886,-1.336017,9.227259,4.321298,-9.701868,1.982568,-0.217699,-1.093474,-6.541809,-9.320268,1.210289,4.709874,0.899753,6.797773,5.130558,6.565762,1.389390,2.639865,-0.746621,-9.658213,2.805530,7.106305,-4.111966,-2.093409,7.236461,-0.827406,4.675239,8.647537,2.816276,1.554697,8.176916,-8.851521,-9.126363,1.918696,7.390616,4.052690,8.930556,-5.902491,-6.223900,-9.051335,6.544810,3.590512,-8.188392,2.994261,8.871176,6.106215,-4.656725,9.735052,1.221648,7.250753,7.206417,-9.218246,5.130265,-9.570008,8.174078,-9.190471,-9.963637,8.521622,-3.022410,-7.817197,4.930131,-9.492342,-0.310295,-8.079746,-2.370200,-1.953723,-1.545676,-9.524448,0.100298,-4.895324,4.223255,3.212903,-8.293953,2.739974,-6.406071,-0.264306,0.647803,4.250887,-7.188940,0.600161,3.536331,-4.001274,-0.590988,-0.458671,-9.435121,2.571881,2.225562,2.756089,3.780111,-6.357893,-8.965237,-3.377790,5.761898,0.567068,2.047850,-8.701931,-9.715933,1.629656,0.141178,-1.497274,-6.682984,2.663878,5.979627,2.060861,2.813170,-1.222125,-6.575977,7.547159,-7.020698,4.064206,-8.279635,-4.879017,1.383620,5.316128,4.289309,-8.773965,8.820716,2.851625,-5.539887,-3.252481,-7.570738,0.589603,3.955907,-3.854365,-7.218191,9.174617,8.403552,8.962199,0.534816,3.261448,9.215052,-7.793744,-8.747352,4.913543,-8.319808], dtype = "float64")#candidate|7342|(432,)|const|float64
call_7341 = relay.TupleGetItem(func_2618_call(relay.reshape(const_7342.astype('float64'), [16, 9, 3]), relay.reshape(const_7342.astype('float64'), [16, 9, 3]), ), 2)
call_7343 = relay.TupleGetItem(func_2621_call(relay.reshape(const_7342.astype('float64'), [16, 9, 3]), relay.reshape(const_7342.astype('float64'), [16, 9, 3]), ), 2)
output = relay.Tuple([call_7293,call_7295,call_7301,call_7311,const_7312,const_7313,const_7314,call_7319,call_7325,var_7326,call_7341,const_7342,])
output2 = relay.Tuple([call_7294,call_7296,call_7302,call_7315,const_7312,const_7313,const_7314,call_7320,call_7327,var_7326,call_7343,const_7342,])
func_7352 = relay.Function([var_7326,], output)
mod['func_7352'] = func_7352
mod = relay.transform.InferType()(mod)
var_7353 = relay.var("var_7353", dtype = "uint16", shape = ())#candidate|7353|()|var|uint16
output = func_7352(var_7353)
func_7354 = relay.Function([var_7353], output)
mutated_mod['func_7354'] = func_7354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6029_call = mod.get_global_var('func_6029')
func_6031_call = mutated_mod.get_global_var('func_6031')
call_7364 = relay.TupleGetItem(func_6029_call(), 0)
call_7365 = relay.TupleGetItem(func_6031_call(), 0)
func_403_call = mod.get_global_var('func_403')
func_406_call = mutated_mod.get_global_var('func_406')
var_7371 = relay.var("var_7371", dtype = "float32", shape = (3, 216))#candidate|7371|(3, 216)|var|float32
call_7370 = func_403_call(relay.reshape(var_7371.astype('float32'), [12, 9, 6]))
call_7372 = func_403_call(relay.reshape(var_7371.astype('float32'), [12, 9, 6]))
output = relay.Tuple([call_7364,call_7370,var_7371,])
output2 = relay.Tuple([call_7365,call_7372,var_7371,])
func_7384 = relay.Function([var_7371,], output)
mod['func_7384'] = func_7384
mod = relay.transform.InferType()(mod)
mutated_mod['func_7384'] = func_7384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7385 = relay.var("var_7385", dtype = "float32", shape = (3, 216))#candidate|7385|(3, 216)|var|float32
func_7384_call = mutated_mod.get_global_var('func_7384')
call_7386 = func_7384_call(var_7385)
output = call_7386
func_7387 = relay.Function([var_7385], output)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2663_call = mod.get_global_var('func_2663')
func_2664_call = mutated_mod.get_global_var('func_2664')
call_7392 = relay.TupleGetItem(func_2663_call(), 1)
call_7393 = relay.TupleGetItem(func_2664_call(), 1)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_7402 = relay.TupleGetItem(func_2030_call(), 0)
call_7403 = relay.TupleGetItem(func_2031_call(), 0)
func_7219_call = mod.get_global_var('func_7219')
func_7222_call = mutated_mod.get_global_var('func_7222')
var_7411 = relay.var("var_7411", dtype = "bool", shape = ())#candidate|7411|()|var|bool
var_7412 = relay.var("var_7412", dtype = "bool", shape = (1, 2))#candidate|7412|(1, 2)|var|bool
call_7410 = relay.TupleGetItem(func_7219_call(relay.reshape(var_7411.astype('bool'), []), relay.reshape(var_7412.astype('bool'), [1, 2]), ), 1)
call_7413 = relay.TupleGetItem(func_7222_call(relay.reshape(var_7411.astype('bool'), []), relay.reshape(var_7412.astype('bool'), [1, 2]), ), 1)
output = relay.Tuple([call_7392,call_7402,call_7410,var_7411,var_7412,])
output2 = relay.Tuple([call_7393,call_7403,call_7413,var_7411,var_7412,])
func_7423 = relay.Function([var_7411,var_7412,], output)
mod['func_7423'] = func_7423
mod = relay.transform.InferType()(mod)
mutated_mod['func_7423'] = func_7423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7423_call = mutated_mod.get_global_var('func_7423')
var_7425 = relay.var("var_7425", dtype = "bool", shape = ())#candidate|7425|()|var|bool
var_7426 = relay.var("var_7426", dtype = "bool", shape = (1, 2))#candidate|7426|(1, 2)|var|bool
call_7424 = func_7423_call(var_7425,var_7426,)
output = call_7424
func_7427 = relay.Function([var_7425,var_7426,], output)
mutated_mod['func_7427'] = func_7427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7490 = relay.var("var_7490", dtype = "float32", shape = (12, 10, 3))#candidate|7490|(12, 10, 3)|var|float32
uop_7491 = relay.sqrt(var_7490.astype('float32')) # shape=(12, 10, 3)
uop_7494 = relay.asin(uop_7491.astype('float64')) # shape=(12, 10, 3)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_7502 = relay.TupleGetItem(func_567_call(), 0)
call_7503 = relay.TupleGetItem(func_569_call(), 0)
output = relay.Tuple([uop_7494,call_7502,])
output2 = relay.Tuple([uop_7494,call_7503,])
func_7521 = relay.Function([var_7490,], output)
mod['func_7521'] = func_7521
mod = relay.transform.InferType()(mod)
var_7522 = relay.var("var_7522", dtype = "float32", shape = (12, 10, 3))#candidate|7522|(12, 10, 3)|var|float32
output = func_7521(var_7522)
func_7523 = relay.Function([var_7522], output)
mutated_mod['func_7523'] = func_7523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
call_7543 = func_55_call()
call_7544 = func_55_call()
output = call_7543
output2 = call_7544
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
mutated_mod['func_7550'] = func_7550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7550_call = mutated_mod.get_global_var('func_7550')
call_7551 = func_7550_call()
output = call_7551
func_7552 = relay.Function([], output)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_909_call = mod.get_global_var('func_909')
func_911_call = mutated_mod.get_global_var('func_911')
call_7558 = relay.TupleGetItem(func_909_call(), 0)
call_7559 = relay.TupleGetItem(func_911_call(), 0)
output = call_7558
output2 = call_7559
func_7606 = relay.Function([], output)
mod['func_7606'] = func_7606
mod = relay.transform.InferType()(mod)
output = func_7606()
func_7607 = relay.Function([], output)
mutated_mod['func_7607'] = func_7607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_7622 = relay.TupleGetItem(func_1626_call(), 0)
call_7623 = relay.TupleGetItem(func_1628_call(), 0)
output = relay.Tuple([call_7622,])
output2 = relay.Tuple([call_7623,])
func_7632 = relay.Function([], output)
mod['func_7632'] = func_7632
mod = relay.transform.InferType()(mod)
mutated_mod['func_7632'] = func_7632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7632_call = mutated_mod.get_global_var('func_7632')
call_7633 = func_7632_call()
output = call_7633
func_7634 = relay.Function([], output)
mutated_mod['func_7634'] = func_7634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4069_call = mutated_mod.get_global_var('func_4069')
call_7637 = relay.TupleGetItem(func_4068_call(), 0)
call_7638 = relay.TupleGetItem(func_4069_call(), 0)
output = call_7637
output2 = call_7638
func_7670 = relay.Function([], output)
mod['func_7670'] = func_7670
mod = relay.transform.InferType()(mod)
output = func_7670()
func_7671 = relay.Function([], output)
mutated_mod['func_7671'] = func_7671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7702 = relay.var("var_7702", dtype = "float64", shape = (9, 15, 3))#candidate|7702|(9, 15, 3)|var|float64
var_7703 = relay.var("var_7703", dtype = "float64", shape = (9, 15, 3))#candidate|7703|(9, 15, 3)|var|float64
bop_7704 = relay.divide(var_7702.astype('float64'), relay.reshape(var_7703.astype('float64'), relay.shape_of(var_7702))) # shape=(9, 15, 3)
output = relay.Tuple([bop_7704,])
output2 = relay.Tuple([bop_7704,])
func_7711 = relay.Function([var_7702,var_7703,], output)
mod['func_7711'] = func_7711
mod = relay.transform.InferType()(mod)
mutated_mod['func_7711'] = func_7711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7711_call = mutated_mod.get_global_var('func_7711')
var_7713 = relay.var("var_7713", dtype = "float64", shape = (9, 15, 3))#candidate|7713|(9, 15, 3)|var|float64
var_7714 = relay.var("var_7714", dtype = "float64", shape = (9, 15, 3))#candidate|7714|(9, 15, 3)|var|float64
call_7712 = func_7711_call(var_7713,var_7714,)
output = call_7712
func_7715 = relay.Function([var_7713,var_7714,], output)
mutated_mod['func_7715'] = func_7715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4857_call = mod.get_global_var('func_4857')
func_4858_call = mutated_mod.get_global_var('func_4858')
call_7717 = func_4857_call()
call_7718 = func_4857_call()
output = relay.Tuple([call_7717,])
output2 = relay.Tuple([call_7718,])
func_7734 = relay.Function([], output)
mod['func_7734'] = func_7734
mod = relay.transform.InferType()(mod)
output = func_7734()
func_7735 = relay.Function([], output)
mutated_mod['func_7735'] = func_7735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_7755 = relay.TupleGetItem(func_4011_call(), 0)
call_7756 = relay.TupleGetItem(func_4013_call(), 0)
output = call_7755
output2 = call_7756
func_7809 = relay.Function([], output)
mod['func_7809'] = func_7809
mod = relay.transform.InferType()(mod)
mutated_mod['func_7809'] = func_7809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7809_call = mutated_mod.get_global_var('func_7809')
call_7810 = func_7809_call()
output = call_7810
func_7811 = relay.Function([], output)
mutated_mod['func_7811'] = func_7811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7831 = relay.var("var_7831", dtype = "uint8", shape = (7, 14, 13))#candidate|7831|(7, 14, 13)|var|uint8
var_7832 = relay.var("var_7832", dtype = "uint8", shape = (7, 14, 13))#candidate|7832|(7, 14, 13)|var|uint8
bop_7833 = relay.multiply(var_7831.astype('uint8'), relay.reshape(var_7832.astype('uint8'), relay.shape_of(var_7831))) # shape=(7, 14, 13)
func_3388_call = mod.get_global_var('func_3388')
func_3391_call = mutated_mod.get_global_var('func_3391')
const_7839 = relay.const([2.060200,9.654966,-2.734108,-6.067911,3.967112,1.615164,-2.774694,-6.695066,8.038462,4.947765,5.629662,0.169293,-6.013279,6.960921,7.304068,0.812784,-0.923100,7.909107,-6.703194,3.828222,4.700558,6.781857,-3.549814,-8.414684,-9.633119,-2.607726,6.316833,-1.415994,-7.033417,1.063708,-1.813970,-8.866519,0.503167,-5.677828,-5.954750,2.068168,-2.518941,7.406469,-1.499176,-1.567241,1.651915,-0.151869,3.995219,-4.849364,4.875131,2.471887,-5.711047,-2.225941,-3.639944,8.042719,-4.758831,-9.265769,-1.539974,9.202528,1.649772,0.437080,-4.044895,0.245457,-9.173007,7.343218,5.852854,-3.792762,7.088640,1.541064,3.891684,-8.233820,7.371792,-7.130583,-3.847500,-9.910937,7.543065,-3.992360,-2.482863,2.677017,0.356860,-1.573133,-5.957281,-1.700552,0.439826,4.348647,6.741487,-1.138195,-2.711086,-1.188176,8.604607,-6.601605,-8.880793,-9.778929,-2.767248,-0.283819,5.280876,-1.443176,2.296463,7.119948,-0.695588,2.316768,-4.462596,-2.761524,-8.979737,2.065087,4.847564,-7.762954,-3.563739,-6.940651,8.061471,-5.914946,7.081403,-2.160002,5.346769,4.596394,-3.879106,0.977841,1.848280,4.535815,-9.383158,4.354207,-9.956012,-8.990989,-5.959527,4.057474,9.963452,-2.614606,-9.499229,1.198700,-0.830084,3.973368,6.195861,7.447698,-5.789931,-3.354018,9.717348,-2.409455,0.290318,-7.207136,-9.556710,0.652301,1.431281,-4.955576,-2.247591,-3.522849,3.422949,5.167877,-2.783214,3.681013,5.506242,-6.029964,0.280701,-8.799595,6.666375,-1.510422,-0.207403,1.550186,-2.950684,3.701983,0.375876,1.177014,1.845358,4.654833,-1.161571,-1.714829,-6.859052,-0.662798,-9.527510,-4.165439,-6.662294,1.722679,0.782904,-2.468756,-5.244471,-7.221766,9.609472,-9.078057,6.290341,1.511976,-6.198078,0.176181,-8.715464,-0.355180,3.607779,-1.359491,-8.961881,-6.518812,-6.760015,2.713612,4.319383,-8.105389,4.151394,4.723134,-9.959560,-1.179210,9.117148,4.360925,-4.173531,-9.030666,-9.908168,3.886713,-4.951063,-8.156484,-2.968462,7.440541,-6.613921,2.438686,6.735456,-0.075929,8.666172,-3.775380,-9.756710,-7.936432,-2.650932,-7.198671,6.606019,7.685052,-2.353382,-6.615322,4.477428,-4.800600,3.379786,6.287232,-1.813123,-1.792865,4.015494,-7.465148,-0.206196,-8.484517,5.034944,4.804241,-9.087664,-7.746861,7.121923,7.916391,8.693956,-1.892344,1.518029,8.968276,3.062065,3.156426,-9.196779,-6.476172,-3.473308,7.549991,-1.043560,-7.208309,5.516761,0.184202,3.297811,4.849365,-7.346595,0.843939,-2.401381,5.301579,-3.740715,-5.625165,0.341709,0.466340,5.303236,0.169404,-3.374734,-0.322294,9.153521,-8.904971,-3.986725,5.323228,7.507501,3.789753,6.967361,4.778780,8.668476,-8.805495,-4.458249,7.019808,2.617459,4.362817,-2.479555,5.519937,5.533030,9.424766,-7.230089,-9.557615,9.288928,1.171901,0.227319,2.767476,-0.446038,0.183763,3.091904,-7.570926,8.656956,-7.132780,2.384669,8.312148,6.955956,-5.183429,1.423182,9.555048,-4.058708,5.328321,3.121386,1.667129,9.553807,9.270586,2.538021,6.918648,0.538931,-6.501384,8.357111,-8.623879,-3.762795,-9.912545,4.903196,5.441250,-0.641726,4.100897,2.300943,3.749075,3.136000,0.166515,-2.975089,-2.110703,5.117658,-5.594863,-7.731331,6.231247,-5.712831,1.330451,-7.830294,4.239269,4.539380,-6.966189,5.010530,9.677639,-7.992929,1.076692,8.638926,6.076421,9.919367,-3.627174,-4.068642,-4.425819,9.730306,-9.534613,-3.574334,5.982342,7.542984,-7.945605,7.869433,6.272571,4.125191,7.902239,-5.977461,0.981508,-8.128713,-5.157581,2.367591,4.866971,-8.566174,-3.101005,-7.510346,-0.556591,-0.359307,-5.611188,6.365318,7.662679,5.721454,3.842964,9.747549,1.520789,-0.577066,-3.203557,-0.747691,4.676128,-4.407099,-7.258606,2.362235,-6.190348,2.763275,8.298921,-0.674406,4.041449,9.472689,-2.254968,9.481957,1.097047,2.433118,-6.735316,3.058286,-7.028951,4.366365,-3.925913,1.423830,-2.349907,-9.652979,1.159062,4.017681,-8.690272,-1.426971,0.280877,-5.498889,1.761192,0.087039,0.909245,4.365275,-8.806687,-4.818724,5.444612,9.151580,6.238775,-0.036215,-1.693706,2.968997,-3.465843,0.052690,-6.737455,-0.365004,6.408752,2.285486,3.105387,-5.592869,2.796031,-1.471307,4.649656,7.320908,6.624565,7.584995,6.092615,-3.390992,-3.549238,6.684590,0.966530,7.910998,3.892038,-9.239047,8.726368,-6.817435,6.708965,-3.571836,-2.133171,8.302179,5.032509,-1.645443,-1.501072,-5.577432,-9.267420,3.704219,-2.719293,3.464292,5.647385,-8.277356,-5.639302,7.515187,5.819537,-4.080646,5.360532,-3.514760,1.955795,3.755472,0.424301,-4.580502,-5.510949,-8.666856,-6.263068,-0.706138,1.478500,3.073760,-4.112907,3.478697,-8.135471,3.772372,-3.445449,-8.977254,-5.177621,1.906403,7.974223,-6.985762,1.245602,-6.115086,-1.198874,2.461167,0.834687,6.529787,1.264132,-5.720101,9.664357,-7.048615,7.135372,4.737726,-2.194766,6.863598,-6.956669,1.210282,-9.118213,-2.518727,2.402475,-7.535989,-5.289377,-7.409382,0.293630,2.729674,-4.955788,-3.520234,-2.181993,-1.822394,-6.477856,-4.263690,2.505443,-7.888582,-0.392194,-5.985048,-1.225963,-7.271922,-4.553802,-9.995469,1.859910,-1.389209,7.265908,2.471390,-0.787637,2.758427,-9.119447,-4.627935,9.208122,9.056238,6.958066,5.075575,9.471851,-5.203778,-6.839751,0.142593,-3.365045,-0.107880,-3.633150,5.068030,4.186009,6.607090,-0.726425,5.053545,-9.103873,3.229692,-9.244445,4.976333,5.675444,3.367190,-7.411852,7.158566,6.749226,3.701241,-5.663663,-5.685533,2.860608,1.158133,8.484927,4.344533,0.766783,6.174426,-9.215289,3.958006,-2.051942,8.509690,2.809741,4.693187,-6.015895,-4.771306,1.474305,-3.839698,-7.911959,7.363237,-3.518040,9.116390,0.526955,8.168023,5.379244,4.890037,-5.376173,4.088231,-3.334039,-4.139985,1.366275,3.187405,2.665803,1.372507,3.450018,-3.935958,6.028364,1.636913,-2.222456,-9.806021,-2.880032,-5.949830,4.259738,-2.347634,-3.997174,-3.692928,-1.508403,4.578025,-7.506417,5.739118,7.086815,5.050826,-9.642397,0.574579,-8.345201,-9.692526,-8.877209,0.015616,-6.856812,4.392171,-0.714787,-9.596789,5.898014,-6.206667,-2.327157,6.224816,0.799264,1.333417,8.430310,2.319721,-0.232507,-7.965214,-9.512018,-6.805519,-6.364724,2.126616,-5.583689,0.318354,7.903969,5.637224,6.990909,5.409998,0.053651,-6.506574,-8.802293,-9.561560,-1.703894,7.816652,-7.979981,8.745501,6.973388,3.936847,6.447105,5.520058,4.173982,-9.043803,5.536526,4.754877,-0.867879,9.848296,8.428362,-4.450544,8.391230], dtype = "float32")#candidate|7839|(648,)|const|float32
call_7838 = relay.TupleGetItem(func_3388_call(relay.reshape(const_7839.astype('float32'), [12, 9, 6])), 0)
call_7840 = relay.TupleGetItem(func_3391_call(relay.reshape(const_7839.astype('float32'), [12, 9, 6])), 0)
func_7670_call = mod.get_global_var('func_7670')
func_7671_call = mutated_mod.get_global_var('func_7671')
call_7844 = func_7670_call()
call_7845 = func_7670_call()
func_5402_call = mod.get_global_var('func_5402')
func_5404_call = mutated_mod.get_global_var('func_5404')
var_7860 = relay.var("var_7860", dtype = "float32", shape = (2688,))#candidate|7860|(2688,)|var|float32
call_7859 = relay.TupleGetItem(func_5402_call(relay.reshape(var_7860.astype('float32'), [2688,])), 0)
call_7861 = relay.TupleGetItem(func_5404_call(relay.reshape(var_7860.astype('float32'), [2688,])), 0)
output = relay.Tuple([bop_7833,call_7838,const_7839,call_7844,call_7859,var_7860,])
output2 = relay.Tuple([bop_7833,call_7840,const_7839,call_7845,call_7861,var_7860,])
func_7867 = relay.Function([var_7831,var_7832,var_7860,], output)
mod['func_7867'] = func_7867
mod = relay.transform.InferType()(mod)
var_7868 = relay.var("var_7868", dtype = "uint8", shape = (7, 14, 13))#candidate|7868|(7, 14, 13)|var|uint8
var_7869 = relay.var("var_7869", dtype = "uint8", shape = (7, 14, 13))#candidate|7869|(7, 14, 13)|var|uint8
var_7870 = relay.var("var_7870", dtype = "float32", shape = (2688,))#candidate|7870|(2688,)|var|float32
output = func_7867(var_7868,var_7869,var_7870,)
func_7871 = relay.Function([var_7868,var_7869,var_7870,], output)
mutated_mod['func_7871'] = func_7871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7938 = relay.var("var_7938", dtype = "float32", shape = (12, 13, 15))#candidate|7938|(12, 13, 15)|var|float32
uop_7939 = relay.acosh(var_7938.astype('float32')) # shape=(12, 13, 15)
uop_7944 = relay.cosh(uop_7939.astype('float32')) # shape=(12, 13, 15)
bop_7946 = relay.multiply(uop_7944.astype('int64'), relay.reshape(uop_7939.astype('int64'), relay.shape_of(uop_7944))) # shape=(12, 13, 15)
output = relay.Tuple([bop_7946,])
output2 = relay.Tuple([bop_7946,])
func_7950 = relay.Function([var_7938,], output)
mod['func_7950'] = func_7950
mod = relay.transform.InferType()(mod)
mutated_mod['func_7950'] = func_7950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7951 = relay.var("var_7951", dtype = "float32", shape = (12, 13, 15))#candidate|7951|(12, 13, 15)|var|float32
func_7950_call = mutated_mod.get_global_var('func_7950')
call_7952 = func_7950_call(var_7951)
output = call_7952
func_7953 = relay.Function([var_7951], output)
mutated_mod['func_7953'] = func_7953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1255_call = mod.get_global_var('func_1255')
func_1256_call = mutated_mod.get_global_var('func_1256')
call_7958 = relay.TupleGetItem(func_1255_call(), 5)
call_7959 = relay.TupleGetItem(func_1256_call(), 5)
output = relay.Tuple([call_7958,])
output2 = relay.Tuple([call_7959,])
func_7999 = relay.Function([], output)
mod['func_7999'] = func_7999
mod = relay.transform.InferType()(mod)
mutated_mod['func_7999'] = func_7999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7999_call = mutated_mod.get_global_var('func_7999')
call_8000 = func_7999_call()
output = call_8000
func_8001 = relay.Function([], output)
mutated_mod['func_8001'] = func_8001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3308_call = mod.get_global_var('func_3308')
func_3310_call = mutated_mod.get_global_var('func_3310')
call_8012 = relay.TupleGetItem(func_3308_call(), 0)
call_8013 = relay.TupleGetItem(func_3310_call(), 0)
output = call_8012
output2 = call_8013
func_8024 = relay.Function([], output)
mod['func_8024'] = func_8024
mod = relay.transform.InferType()(mod)
output = func_8024()
func_8025 = relay.Function([], output)
mutated_mod['func_8025'] = func_8025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4857_call = mod.get_global_var('func_4857')
func_4858_call = mutated_mod.get_global_var('func_4858')
call_8034 = func_4857_call()
call_8035 = func_4857_call()
output = call_8034
output2 = call_8035
func_8036 = relay.Function([], output)
mod['func_8036'] = func_8036
mod = relay.transform.InferType()(mod)
output = func_8036()
func_8037 = relay.Function([], output)
mutated_mod['func_8037'] = func_8037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7999_call = mod.get_global_var('func_7999')
func_8001_call = mutated_mod.get_global_var('func_8001')
call_8043 = relay.TupleGetItem(func_7999_call(), 0)
call_8044 = relay.TupleGetItem(func_8001_call(), 0)
output = call_8043
output2 = call_8044
func_8060 = relay.Function([], output)
mod['func_8060'] = func_8060
mod = relay.transform.InferType()(mod)
output = func_8060()
func_8061 = relay.Function([], output)
mutated_mod['func_8061'] = func_8061
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8093 = relay.const([[[-1.671465,-7.051528,-0.798138,-6.911259,6.217696,-6.698111,-9.914870,7.810383,-1.190396,2.200850,-9.498815,5.164387],[1.555719,-9.064309,2.029360,-3.111288,7.502823,-0.513406,-3.088481,-5.049479,8.293143,9.583424,5.041706,1.448219],[1.718242,-8.085372,-6.094719,-4.270127,0.299523,6.004036,-0.892719,-1.879010,-1.722400,8.479307,4.815091,-5.395472],[0.738126,7.138594,6.519096,-0.579393,2.725171,-9.444302,4.605575,1.239447,9.637722,5.932113,-7.773188,9.616677],[-8.647430,-7.747918,3.470097,-3.999582,-9.431611,8.946362,0.131499,-9.143999,-8.861658,-1.640777,7.111602,2.327823],[7.897912,-2.773474,-4.948969,-0.941892,4.941715,9.593601,-2.022538,9.274368,3.575245,-4.268966,-5.527068,0.066725],[7.944028,-6.800419,7.838013,3.492591,-0.343077,-0.948100,0.035383,7.082174,2.626048,2.626454,0.827390,-3.031727],[2.492748,0.867167,4.260087,8.276710,-8.907765,1.742915,8.739437,-8.455503,7.763102,-1.501923,-6.687792,6.814932],[-7.101876,7.994780,1.925169,-1.302907,-0.405682,-7.646721,-0.628319,-2.527737,-1.744316,-4.285251,-1.656484,7.935157],[-6.463321,-4.640247,-7.065191,-0.844377,6.842288,-6.289093,-3.728566,7.005895,-2.532558,-5.944445,3.781651,6.915147],[7.128871,7.794798,8.535433,3.218790,0.427513,-9.879886,1.406794,-1.155604,-8.277455,8.996494,-7.455086,9.022123],[-0.434289,1.273243,-8.098749,2.812188,4.978494,3.809084,-9.105617,-6.460988,-6.602234,0.289445,9.162340,-1.033070]],[[-8.335541,-7.169734,2.072416,7.016530,-4.282331,0.018803,9.479717,-5.441967,-6.186674,6.810461,-1.801237,-0.496232],[-0.179542,-0.659771,6.427428,1.937012,-0.029477,-3.184009,7.646775,9.472556,0.369723,-9.845615,-1.849480,9.566015],[-1.850844,3.331142,-0.974608,-0.986877,9.924548,-2.822498,1.194171,-0.490624,-3.862477,6.628644,-6.684524,0.181518],[-1.038135,-2.475792,-7.732836,1.796296,7.718023,0.531561,-3.869290,-7.896149,-8.474297,-0.240950,1.188072,6.667491],[-4.484456,6.774720,8.641877,-1.770068,8.123604,-0.792717,-4.666797,-4.438240,-8.856335,3.523262,6.544457,-1.611348],[-5.103449,-1.260033,4.505973,8.286553,-6.899179,-1.224881,5.580225,3.558312,-5.425910,-6.752223,2.808981,-9.876158],[-0.092546,-8.438776,0.213210,9.925886,-1.219205,2.684438,7.268021,2.230091,-1.394819,-6.815209,-4.297939,-1.848027],[7.789007,5.863047,6.784962,4.904386,5.008682,-7.630864,-6.990619,-6.002858,5.715198,9.415252,6.774121,-5.775555],[-3.581641,5.750370,0.519956,9.025811,6.584974,2.985061,-1.313797,-5.807159,0.172200,2.106733,7.332209,-5.127555],[2.182808,8.264460,-7.869370,-9.468704,-1.402922,4.318614,4.536551,8.984573,5.777296,-8.674125,8.522685,2.657666],[7.147677,-3.799171,-6.604776,2.869603,-6.779929,-4.405600,-5.905971,-7.570455,4.889287,-8.473631,-9.431441,2.231497],[9.874399,-1.934145,-3.295865,1.519534,-2.331931,-5.949954,-0.659469,-9.925013,2.756129,7.951311,-0.794502,-3.962877]],[[9.448415,-6.415083,-4.823173,7.442435,0.259306,-3.255363,2.870072,1.428654,-2.672805,-2.523818,0.313271,1.975805],[-5.100611,4.370696,-6.948511,-8.950878,-2.531335,-6.984617,-6.026286,-6.072430,7.606895,9.571150,-8.662787,-3.507291],[2.092129,4.404183,8.176894,9.778447,4.238744,-7.922417,-0.532828,4.490495,-1.115384,-5.891125,9.570714,-6.161365],[5.622312,5.083960,4.271596,-3.591909,2.138971,6.231304,6.039718,-3.878947,4.755988,-7.647392,3.406401,9.038335],[8.906776,-2.311383,-8.624954,8.029878,-5.352623,-0.470610,-2.960244,-7.206834,-1.250865,5.345327,-7.820327,3.999546],[-0.673477,-7.285150,3.027820,0.003741,3.844135,-1.891601,3.563542,6.295789,-7.944625,9.424730,2.211726,-9.199686],[2.492609,6.299516,4.062228,-5.141978,-2.909492,4.937621,-6.831228,3.959530,-4.984096,8.889912,8.138290,-3.790722],[-5.324738,7.447128,3.647674,-9.176499,4.033355,0.925668,-3.177161,-2.555814,-7.916692,-9.809025,3.946567,-6.682637],[9.083346,5.398040,-9.922215,5.313555,6.329886,-2.739609,-6.458754,4.185864,-6.378866,5.733164,-2.755799,-5.652039],[7.398278,4.592740,-7.219434,7.210457,-2.295379,-8.448102,-3.188250,2.862792,-8.870126,-8.037190,-1.459933,-7.608024],[-1.007564,1.478617,-7.428653,3.502589,2.315895,-7.007617,-4.032145,9.149004,-9.603938,-4.242197,0.379267,-3.220149],[0.272883,4.585395,-9.240413,8.344033,9.544673,-8.019053,-2.836269,1.490847,-3.644752,4.344004,6.598282,2.483942]],[[-9.301431,-0.122297,-3.485652,-2.812264,-0.290122,6.835445,6.477353,9.178797,-6.822652,-7.044344,-1.038657,-2.621919],[2.302268,8.273597,-7.714403,-6.166019,-5.152725,3.205705,8.076672,4.643501,6.701288,8.030865,4.642960,2.989544],[-8.455844,-3.200423,2.216844,6.912560,-7.328125,-0.313064,-8.296563,5.280116,2.191059,1.481510,-7.681083,-5.857920],[8.769642,5.458498,2.694263,-0.789335,-2.128112,-0.176877,2.492654,1.140985,-8.288842,1.765588,-0.775482,-7.605823],[2.839505,2.198583,-4.141656,2.464825,8.210750,-7.235360,6.300638,-6.089764,4.060049,6.871606,-3.665976,-5.719627],[-0.257808,5.506329,-4.055757,3.340887,2.538165,-6.416187,-9.510728,-4.973982,-1.131795,-8.769780,1.321416,6.855668],[8.516151,-3.807035,9.319536,3.796743,-0.824889,3.724959,-8.446386,-0.525552,0.948178,7.196549,-0.097308,6.529320],[-4.790852,-2.831191,-8.491146,-9.648993,-8.806199,7.601940,8.645925,-7.184871,-2.990394,-8.716843,-0.349304,-1.315534],[1.696965,4.747280,7.477724,-4.990657,8.011618,-0.058134,3.065987,1.723693,7.056684,0.052284,3.220314,-8.283211],[9.420512,-8.155040,2.700130,9.564053,-9.231807,-5.868701,5.415813,1.100452,6.346375,-9.299864,-5.205089,-3.755945],[4.757012,-9.251595,1.448078,-7.925499,-2.261230,-5.985764,6.229063,-3.318286,1.457546,-9.533055,-8.418142,3.194444],[2.967453,-4.366714,0.958905,4.264481,-4.562717,-0.315909,-3.770396,2.762493,3.930009,-1.771954,3.565105,0.485134]]], dtype = "float32")#candidate|8093|(4, 12, 12)|const|float32
uop_8094 = relay.atanh(const_8093.astype('float32')) # shape=(4, 12, 12)
uop_8097 = relay.acosh(const_8093.astype('float64')) # shape=(4, 12, 12)
uop_8100 = relay.sqrt(const_8093.astype('float32')) # shape=(4, 12, 12)
output = relay.Tuple([uop_8094,uop_8097,uop_8100,])
output2 = relay.Tuple([uop_8094,uop_8097,uop_8100,])
func_8110 = relay.Function([], output)
mod['func_8110'] = func_8110
mod = relay.transform.InferType()(mod)
mutated_mod['func_8110'] = func_8110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8110_call = mutated_mod.get_global_var('func_8110')
call_8111 = func_8110_call()
output = call_8111
func_8112 = relay.Function([], output)
mutated_mod['func_8112'] = func_8112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8133 = relay.var("var_8133", dtype = "uint16", shape = (7, 14, 9))#candidate|8133|(7, 14, 9)|var|uint16
var_8134 = relay.var("var_8134", dtype = "uint16", shape = (7, 14, 9))#candidate|8134|(7, 14, 9)|var|uint16
bop_8135 = relay.less_equal(var_8133.astype('bool'), relay.reshape(var_8134.astype('bool'), relay.shape_of(var_8133))) # shape=(7, 14, 9)
output = bop_8135
output2 = bop_8135
func_8151 = relay.Function([var_8133,var_8134,], output)
mod['func_8151'] = func_8151
mod = relay.transform.InferType()(mod)
mutated_mod['func_8151'] = func_8151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8151_call = mutated_mod.get_global_var('func_8151')
var_8153 = relay.var("var_8153", dtype = "uint16", shape = (7, 14, 9))#candidate|8153|(7, 14, 9)|var|uint16
var_8154 = relay.var("var_8154", dtype = "uint16", shape = (7, 14, 9))#candidate|8154|(7, 14, 9)|var|uint16
call_8152 = func_8151_call(var_8153,var_8154,)
output = call_8152
func_8155 = relay.Function([var_8153,var_8154,], output)
mutated_mod['func_8155'] = func_8155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1710_call = mod.get_global_var('func_1710')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_8165 = relay.TupleGetItem(func_1710_call(), 0)
call_8166 = relay.TupleGetItem(func_1711_call(), 0)
func_1328_call = mod.get_global_var('func_1328')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_8173 = relay.TupleGetItem(func_1328_call(), 2)
call_8174 = relay.TupleGetItem(func_1329_call(), 2)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_8175 = relay.TupleGetItem(func_3287_call(), 1)
call_8176 = relay.TupleGetItem(func_3288_call(), 1)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_8233 = relay.TupleGetItem(func_2521_call(), 0)
call_8234 = relay.TupleGetItem(func_2522_call(), 0)
output = relay.Tuple([call_8165,call_8173,call_8175,call_8233,])
output2 = relay.Tuple([call_8166,call_8174,call_8176,call_8234,])
func_8239 = relay.Function([], output)
mod['func_8239'] = func_8239
mod = relay.transform.InferType()(mod)
mutated_mod['func_8239'] = func_8239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8239_call = mutated_mod.get_global_var('func_8239')
call_8240 = func_8239_call()
output = call_8240
func_8241 = relay.Function([], output)
mutated_mod['func_8241'] = func_8241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8060_call = mod.get_global_var('func_8060')
func_8061_call = mutated_mod.get_global_var('func_8061')
call_8293 = func_8060_call()
call_8294 = func_8060_call()
func_5739_call = mod.get_global_var('func_5739')
func_5741_call = mutated_mod.get_global_var('func_5741')
call_8302 = func_5739_call()
call_8303 = func_5739_call()
func_4698_call = mod.get_global_var('func_4698')
func_4700_call = mutated_mod.get_global_var('func_4700')
call_8304 = relay.TupleGetItem(func_4698_call(), 1)
call_8305 = relay.TupleGetItem(func_4700_call(), 1)
output = relay.Tuple([call_8293,call_8302,call_8304,])
output2 = relay.Tuple([call_8294,call_8303,call_8305,])
func_8309 = relay.Function([], output)
mod['func_8309'] = func_8309
mod = relay.transform.InferType()(mod)
mutated_mod['func_8309'] = func_8309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8309_call = mutated_mod.get_global_var('func_8309')
call_8310 = func_8309_call()
output = call_8310
func_8311 = relay.Function([], output)
mutated_mod['func_8311'] = func_8311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4915_call = mod.get_global_var('func_4915')
func_4917_call = mutated_mod.get_global_var('func_4917')
call_8319 = relay.TupleGetItem(func_4915_call(), 0)
call_8320 = relay.TupleGetItem(func_4917_call(), 0)
output = call_8319
output2 = call_8320
func_8328 = relay.Function([], output)
mod['func_8328'] = func_8328
mod = relay.transform.InferType()(mod)
mutated_mod['func_8328'] = func_8328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8328_call = mutated_mod.get_global_var('func_8328')
call_8329 = func_8328_call()
output = call_8329
func_8330 = relay.Function([], output)
mutated_mod['func_8330'] = func_8330
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8362 = relay.var("var_8362", dtype = "int8", shape = ())#candidate|8362|()|var|int8
var_8363 = relay.var("var_8363", dtype = "int8", shape = (6, 13, 16))#candidate|8363|(6, 13, 16)|var|int8
bop_8364 = relay.not_equal(var_8362.astype('bool'), var_8363.astype('bool')) # shape=(6, 13, 16)
output = bop_8364
output2 = bop_8364
F = relay.Function([var_8362,var_8363,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8362,var_8363,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_1509(%var_1384: Tensor[(132), float32]) -> (Tensor[(11, 4, 3), float32], Tensor[(132), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), bool]) {
  %0 = cast(%var_1384, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1 = reshape(%0, newshape=[11, 4, 3]) /* ty=Tensor[(11, 4, 3), float32] */;
  %2 = @func_214(%1) /* ty=(Tensor[(11, 4, 3), float32],) */;
  %3 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %6 = reshape(%4, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
  %7 = reshape(%5, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
  %8 = @func_490(%6, %7) /* ty=(Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) */;
  %9 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %10 = @func_793() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %11 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %12 = @func_793() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %13 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %14 = @func_1255() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) */;
  %15 = %14.5;
  %16 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %17 = %16.0;
  %18 = cast(%17, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %19 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%15, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %22 = logical_and(%20, %21) /* ty=Tensor[(7, 11, 10), bool] */;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %24 = atan(%23) /* ty=Tensor[(7, 11, 10), float32] */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %27 = reshape(%25, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %28 = reshape(%26, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %29 = @func_619(%27, %28) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %30 = %29.1;
  %31 = cast(%30, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %32 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%24, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = %2.0;
  %36 = %3.0;
  %37 = %8.1;
  %38 = %9.0;
  %39 = %10.0;
  %40 = %11.2;
  %41 = %12.0;
  %42 = %13.0;
  %43 = greater(%33, %34) /* ty=Tensor[(7, 11, 10), bool] */;
  (%35, %var_1384, %36, %37, meta[relay.Constant][0] /* ty=Tensor[(104), int8] */, %38, meta[relay.Constant][1] /* ty=Tensor[(308), float64] */, %39, %40, %41, %42, %43)
}

def @func_1694() -> (Tensor[(7, 11, 10), float64],) {
  %44 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %45 = %44.0;
  (%45,)
}

def @func_21() -> (Tensor[(7, 11, 10), float64],) {
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %47 = sinh(%46) /* ty=Tensor[(7, 11, 10), float64] */;
  (%47,)
}

def @func_4834(%var_4817: Tensor[(308), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float32]) {
  %48 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %49 = cast(%var_4817, dtype="float64") /* ty=Tensor[(308), float64] */;
  %50 = reshape(%49, newshape=[308, 1]) /* ty=Tensor[(308, 1), float64] */;
  %51 = @func_2403(%50) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) */;
  %52 = @func_4465() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %53 = @func_3915() /* ty=Tensor[(7, 11, 10), float64] */;
  %54 = %48.0;
  %55 = %51.0;
  %56 = %52.0;
  (%53, %54, %55, %var_4817, %56)
}

def @func_1782() -> Tensor[(7, 11, 10), float64] {
  %57 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %57.1
}

def @func_4530(%var_4501: Tensor[(12, 6, 5), uint16]) -> (Tensor[(12, 6, 5), uint16], Tensor[(7, 11, 10), float64]) {
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 6, 5), uint16] */, dtype="uint16") /* ty=Tensor[(12, 6, 5), uint16] */;
  %59 = shape_of(%var_4501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%var_4501, dtype="uint16") /* ty=Tensor[(12, 6, 5), uint16] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %62 = @func_671() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) */;
  %63 = bitwise_or(%60, %61) /* ty=Tensor[(12, 6, 5), uint16] */;
  %64 = %62.0;
  (%63, %64)
}

def @func_5053() -> (Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16]) {
  %65 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %66 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
  %67 = %65.3;
  (%66, %67)
}

def @func_2521() -> (Tensor[(7, 11, 10), float64],) {
  %68 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %69 = %68.0;
  (%69,)
}

def @func_113() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  %70 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %71 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %72 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %74 = %70.0;
  %75 = %71.0;
  %76 = log(%73) /* ty=Tensor[(7, 11, 10), float32] */;
  (%74, %75, %76)
}

def @func_214(%var_205: Tensor[(11, 4, 3), float32]) -> (Tensor[(11, 4, 3), float32],) {
  %77 = cast(%var_205, dtype="float32") /* ty=Tensor[(11, 4, 3), float32] */;
  %78 = asinh(%77) /* ty=Tensor[(11, 4, 3), float32] */;
  (%78,)
}

def @func_3974(%var_3968: Tensor[(4, 15, 15), float64], %var_3969: Tensor[(4, 15, 15), float64]) -> Tensor[(4, 15, 15), float64] {
  %79 = cast(%var_3969, dtype="float64") /* ty=Tensor[(4, 15, 15), float64] */;
  %80 = shape_of(%var_3968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_3968, dtype="float64") /* ty=Tensor[(4, 15, 15), float64] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%81, %82) /* ty=Tensor[(4, 15, 15), float64] */
}

def @func_7950(%var_7938: Tensor[(12, 13, 15), float32]) -> (Tensor[(12, 13, 15), int64],) {
  %83 = cast(%var_7938, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %84 = acosh(%83) /* ty=Tensor[(12, 13, 15), float32] */;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %86 = cosh(%85) /* ty=Tensor[(12, 13, 15), float32] */;
  %87 = cast(%84, dtype="int64") /* ty=Tensor[(12, 13, 15), int64] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="int64") /* ty=Tensor[(12, 13, 15), int64] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %91 = multiply(%89, %90) /* ty=Tensor[(12, 13, 15), int64] */;
  (%91,)
}

def @func_601() -> (Tensor[(7, 11, 10), float64],) {
  %92 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %93 = %92.1;
  (%93,)
}

def @func_6729(%var_6688: Tensor[(4, 5, 2), float64], %var_6709: Tensor[(210, 1), float64], %var_6711: Tensor[(55, 4), float64]) -> (Tensor[(4, 5, 2), int64], Tensor[(4, 5, 2), float64], Tensor[(35, 6), bool], Tensor[(210, 1), float64], Tensor[(4, 672), float32], Tensor[(55, 4), float64], Tensor[(7, 11, 10), bool]) {
  %94 = cast(%var_6688, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %95 = asin(%94) /* ty=Tensor[(4, 5, 2), float64] */;
  %96 = cast(%var_6688, dtype="int64") /* ty=Tensor[(4, 5, 2), int64] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="int64") /* ty=Tensor[(4, 5, 2), int64] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %100 = cast(%95, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %101 = cast(%var_6709, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %102 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 672), float32] */, dtype="float32") /* ty=Tensor[(4, 672), float32] */;
  %103 = cast(%var_6711, dtype="float64") /* ty=Tensor[(55, 4), float64] */;
  %104 = reshape(%101, newshape=[35, 6]) /* ty=Tensor[(35, 6), float64] */;
  %105 = reshape(%102, newshape=[96, 28]) /* ty=Tensor[(96, 28), float32] */;
  %106 = reshape(%103, newshape=[220, 1]) /* ty=Tensor[(220, 1), float64] */;
  %107 = @func_5334(%104, %105, %106) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) */;
  %108 = right_shift(%98, %99) /* ty=Tensor[(4, 5, 2), int64] */;
  %109 = log2(%100) /* ty=Tensor[(4, 5, 2), float64] */;
  %110 = %107.5;
  %111 = @func_2539() /* ty=Tensor[(7, 11, 10), bool] */;
  (%108, %109, %110, %var_6709, meta[relay.Constant][4] /* ty=Tensor[(4, 672), float32] */, %var_6711, %111)
}

def @func_4489() -> Tensor[(7, 11, 10), float64] {
  %112 = @func_1293() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %112.0
}

def @func_171() -> Tensor[(7, 11, 10), float32] {
  %113 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %114 = %113.2;
  %115 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %117 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%114, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%118, %119) /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_4915() -> (Tensor[(7, 11, 10), float32],) {
  %120 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  (%120,)
}

def @func_1710() -> (Tensor[(7, 11, 10), float64],) {
  %121 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %122 = %121.1;
  (%122,)
}

def @func_3325(%var_3313: Tensor[(2, 10, 11), float64]) -> (Tensor[(2, 10, 11), float64],) {
  %123 = cast(%var_3313, dtype="float64") /* ty=Tensor[(2, 10, 11), float64] */;
  %124 = acosh(%123) /* ty=Tensor[(2, 10, 11), float64] */;
  (%124,)
}

def @func_784(%var_738: uint32) -> (Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) {
  %125 = cast(%var_738, dtype="uint32") /* ty=uint32 */;
  %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 13, 15), uint32] */, dtype="uint32") /* ty=Tensor[(11, 13, 15), uint32] */;
  %127 = bitwise_xor(%125, %126) /* ty=Tensor[(11, 13, 15), uint32] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %130 = reshape(%129, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %131 = @func_706(%130) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %132 = log10(%128) /* ty=Tensor[(11, 13, 15), float64] */;
  %133 = %131.2;
  (%132, %133, meta[relay.Constant][6] /* ty=Tensor[(104), int8] */)
}

def @func_793() -> (Tensor[(7, 11, 10), float64],) {
  %134 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %135 = %134.0;
  (%135,)
}

def @func_403(%var_395: Tensor[(12, 9, 6), float32]) -> Tensor[(12, 9, 6), float32] {
  %136 = cast(%var_395, dtype="float32") /* ty=Tensor[(12, 9, 6), float32] */;
  acos(%136) /* ty=Tensor[(12, 9, 6), float32] */
}

def @func_706(%var_692: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) {
  %137 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %138 = cast(%var_692, dtype="int8") /* ty=Tensor[(104), int8] */;
  %139 = cast(%var_692, dtype="int8") /* ty=Tensor[(104), int8] */;
  %140 = reshape(%138, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
  %141 = reshape(%139, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
  %142 = @func_490(%140, %141) /* ty=(Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) */;
  %143 = %137.1;
  %144 = %142.0;
  %145 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  (%143, %144, %var_692, %145)
}

def @func_2229(%var_2224: Tensor[(1365), float32]) -> (Tensor[(1, 3), int64], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
  %146 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %147 = %146.2;
  %148 = cast(%147, dtype="int64") /* ty=int64 */;
  %149 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 3), uint16] */, dtype="int64") /* ty=Tensor[(1, 3), int64] */;
  %150 = cast(%var_2224, dtype="float32") /* ty=Tensor[(1365), float32] */;
  %151 = reshape(%150, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float32] */;
  %152 = @func_384(%151) /* ty=(Tensor[(7, 13, 15), float32],) */;
  %153 = maximum(%148, %149) /* ty=Tensor[(1, 3), int64] */;
  %154 = %152.0;
  (%153, %154, %var_2224)
}

def @func_8110() -> (Tensor[(4, 12, 12), float32], Tensor[(4, 12, 12), float64], Tensor[(4, 12, 12), float32]) {
  %155 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 12), float32] */;
  %156 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 12, 12), float32] */, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
  %157 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 12), float32] */;
  %158 = atanh(%155) /* ty=Tensor[(4, 12, 12), float32] */;
  %159 = acosh(%156) /* ty=Tensor[(4, 12, 12), float64] */;
  %160 = sqrt(%157) /* ty=Tensor[(4, 12, 12), float32] */;
  (%158, %159, %160)
}

def @func_7711(%var_7702: Tensor[(9, 15, 3), float64], %var_7703: Tensor[(9, 15, 3), float64]) -> (Tensor[(9, 15, 3), float64],) {
  %161 = cast(%var_7703, dtype="float64") /* ty=Tensor[(9, 15, 3), float64] */;
  %162 = shape_of(%var_7702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_7702, dtype="float64") /* ty=Tensor[(9, 15, 3), float64] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %165 = divide(%163, %164) /* ty=Tensor[(9, 15, 3), float64] */;
  (%165,)
}

def @func_7384(%var_7371: Tensor[(3, 216), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(12, 9, 6), float32], Tensor[(3, 216), float32]) {
  %166 = @func_6029() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %167 = cast(%var_7371, dtype="float32") /* ty=Tensor[(3, 216), float32] */;
  %168 = reshape(%167, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %169 = %166.0;
  %170 = @func_403(%168) /* ty=Tensor[(12, 9, 6), float32] */;
  (%169, %170, %var_7371)
}

def @func_3043() -> (Tensor[(7, 11, 10), float64],) {
  %171 = @func_1989() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %172 = %171.0;
  (%172,)
}

def @func_5373(%var_5355: Tensor[(4, 1, 10), uint32]) -> (Tensor[(4, 10, 10), uint32], Tensor[(4, 3, 10), bool]) {
  %173 = cast(%var_5355, dtype="uint32") /* ty=Tensor[(4, 1, 10), uint32] */;
  %174 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 10, 10), uint32] */, dtype="uint32") /* ty=Tensor[(4, 10, 10), uint32] */;
  %175 = cast(%var_5355, dtype="bool") /* ty=Tensor[(4, 1, 10), bool] */;
  %176 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 3, 10), uint32] */, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
  %177 = logical_xor(%173, %174) /* ty=Tensor[(4, 10, 10), uint32] */;
  %178 = not_equal(%175, %176) /* ty=Tensor[(4, 3, 10), bool] */;
  (%177, %178)
}

def @func_4857() -> Tensor[(7, 11, 10), float32] {
  @func_1349() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_3267() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %179 = @func_2489() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %180 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %181 = %179.0;
  %182 = %180.0;
  (%181, %182)
}

def @func_271() -> Tensor[(7, 11, 10), float64] {
  %183 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %184 = %183.0;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  rsqrt(%185) /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_1349() -> Tensor[(7, 11, 10), float32] {
  @func_171() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_2618(%var_2558: Tensor[(16, 9, 3), float64], %var_2585: Tensor[(16, 9, 3), float64]) -> (Tensor[(16, 9, 3), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(16, 9, 3), bool]) {
  %186 = cast(%var_2558, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
  %187 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 9, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %190 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
  %191 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %192 = @func_2489() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %193 = cast(%var_2585, dtype="bool") /* ty=Tensor[(16, 9, 3), bool] */;
  %194 = shape_of(%var_2558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_2558, dtype="bool") /* ty=Tensor[(16, 9, 3), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %197 = floor_mod(%188, %189) /* ty=Tensor[(16, 9, 3), float64] */;
  %198 = %190.0;
  %199 = %191.0;
  %200 = %192.0;
  %201 = equal(%195, %196) /* ty=Tensor[(16, 9, 3), bool] */;
  (%197, %198, %199, %200, %201)
}

def @func_3388(%var_3358: Tensor[(12, 9, 6), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) {
  %202 = @func_2834() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %203 = cast(meta[relay.Constant][12] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %204 = reshape(%203, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %205 = @func_403(%204) /* ty=Tensor[(12, 9, 6), float32] */;
  %206 = cast(%var_3358, dtype="bool") /* ty=Tensor[(12, 9, 6), bool] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="bool") /* ty=Tensor[(12, 9, 6), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %210 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %211 = %202.1;
  %212 = less(%208, %209) /* ty=Tensor[(12, 9, 6), bool] */;
  %213 = %210.0;
  (%211, meta[relay.Constant][12] /* ty=Tensor[(648), float32] */, %212, %213)
}

def @func_7867(%var_7831: Tensor[(7, 14, 13), uint8], %var_7832: Tensor[(7, 14, 13), uint8], %var_7860: Tensor[(2688), float32]) -> (Tensor[(7, 14, 13), uint8], Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(2688), float32]) {
  %214 = cast(%var_7832, dtype="uint8") /* ty=Tensor[(7, 14, 13), uint8] */;
  %215 = shape_of(%var_7831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%var_7831, dtype="uint8") /* ty=Tensor[(7, 14, 13), uint8] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %218 = cast(meta[relay.Constant][13] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %219 = reshape(%218, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %220 = @func_3388(%219) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) */;
  %221 = cast(%var_7860, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %222 = reshape(%221, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %223 = @func_5402(%222) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(55, 4), bool], Tensor[(2688), float32], Tensor[(220), float64]) */;
  %224 = multiply(%216, %217) /* ty=Tensor[(7, 14, 13), uint8] */;
  %225 = %220.0;
  %226 = @func_7670() /* ty=Tensor[(7, 11, 10), float64] */;
  %227 = %223.0;
  (%224, %225, meta[relay.Constant][13] /* ty=Tensor[(648), float32] */, %226, %227, %var_7860)
}

def @func_5334(%var_5280: Tensor[(35, 6), float64], %var_5307: Tensor[(96, 28), float32], %var_5308: Tensor[(220, 1), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) {
  %228 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %229 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %230 = @func_5006() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %231 = @func_3267() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %232 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %233 = %232.3;
  %234 = cast(%233, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %235 = log10(%234) /* ty=Tensor[(35, 6), float32] */;
  %236 = cast(%235, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %237 = acosh(%236) /* ty=Tensor[(35, 6), float64] */;
  %238 = cast(%var_5280, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(2), int32] */;
  %240 = cast(%237, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %242 = @func_793() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %243 = cast(%var_5307, dtype="float32") /* ty=Tensor[(96, 28), float32] */;
  %244 = cast(%var_5307, dtype="float32") /* ty=Tensor[(96, 28), float32] */;
  %245 = cast(%var_5308, dtype="float64") /* ty=Tensor[(220, 1), float64] */;
  %246 = reshape(%243, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
  %247 = reshape(%244, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
  %248 = reshape(%245, newshape=[55, 4]) /* ty=Tensor[(55, 4), float64] */;
  %249 = @func_3595(%246, %247, %248) /* ty=(Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %250 = @func_2787() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %251 = cast(%235, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %252 = %228.0;
  %253 = %229.0;
  %254 = %230.0;
  %255 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  %256 = %231.1;
  %257 = equal(%240, %241) /* ty=Tensor[(35, 6), bool] */;
  %258 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
  %259 = %242.0;
  %260 = %249.4;
  %261 = %250.0;
  %262 = cos(%251) /* ty=Tensor[(35, 6), float64] */;
  (%252, %253, %254, %255, %256, %257, %258, %259, %260, %var_5307, %var_5308, %261, %262)
}

def @func_4413() -> (Tensor[(7, 11, 10), float64],) {
  %263 = @func_3267() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %264 = %263.1;
  (%264,)
}

def @func_7423(%var_7411: bool, %var_7412: Tensor[(1, 2), bool]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), int8], bool, Tensor[(1, 2), bool]) {
  %265 = @func_2663() /* ty=(Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) */;
  %266 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %267 = cast(%var_7411, dtype="bool") /* ty=bool */;
  %268 = cast(%var_7412, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
  %269 = reshape(%267, newshape=[]) /* ty=bool */;
  %270 = reshape(%268, newshape=[1, 2]) /* ty=Tensor[(1, 2), bool] */;
  %271 = @func_7219(%269, %270) /* ty=(Tensor[(1, 2), bool], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) */;
  %272 = %265.1;
  %273 = %266.0;
  %274 = %271.1;
  (%272, %273, %274, %var_7411, %var_7412)
}

def @func_2990() -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), float64], Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32]) {
  %275 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %276 = @func_2663() /* ty=(Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) */;
  %277 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %278 = @func_2015() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %279 = %275.0;
  %280 = %276.0;
  %281 = %277.3;
  %282 = %278.0;
  (%279, %280, %281, %282)
}

def @func_2162(%var_2131: Tensor[(1, 2, 13), float32]) -> (Tensor[(6, 2, 13), float32], Tensor[(6, 2, 13), float32]) {
  %283 = cast(%var_2131, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
  %284 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 13), float32] */;
  %285 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 13), float32] */;
  %286 = mod(%283, %284) /* ty=Tensor[(6, 2, 13), float32] */;
  %287 = exp(%285) /* ty=Tensor[(6, 2, 13), float32] */;
  (%286, %287)
}

def @func_4385() -> (Tensor[(7, 14, 8), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(4620), int32]) {
  %288 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 8), float64] */;
  %289 = @func_1694() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %290 = cast(meta[relay.Constant][16] /* ty=Tensor[(4620), int32] */, dtype="int32") /* ty=Tensor[(4620), int32] */;
  %291 = reshape(%290, newshape=[308, 15]) /* ty=Tensor[(308, 15), int32] */;
  %292 = @func_4180(%291) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(308, ?), float64], Tensor[(7, 11, 10), float64], Tensor[(308, 15), bool]) */;
  %293 = log10(%288) /* ty=Tensor[(7, 14, 8), float64] */;
  %294 = %289.0;
  %295 = %292.1;
  (%293, %294, %295, meta[relay.Constant][16] /* ty=Tensor[(4620), int32] */)
}

def @func_5006() -> (Tensor[(7, 11, 10), float32],) {
  %296 = @func_4011() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %297 = %296.0;
  (%297,)
}

def @func_3986() -> (Tensor[(7, 11, 10), float32],) {
  %298 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
  %299 = %298.1;
  (%299,)
}

def @func_6375() -> (Tensor[(11, 13, 10), float64],) {
  %300 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 10), float64] */;
  %301 = rsqrt(%300) /* ty=Tensor[(11, 13, 10), float64] */;
  (%301,)
}

def @func_7098(%var_7043: Tensor[(13, 4, 14), uint64], %var_7044: Tensor[(13, 4, 14), uint64]) -> (Tensor[(13, 4, 14), bool], Tensor[(13, 4, 14), float64], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64]) {
  %302 = cast(%var_7043, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %303 = shape_of(%var_7044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_7044, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %306 = cast(%var_7044, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %307 = shape_of(%var_7043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_7043, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %310 = not_equal(%308, %309) /* ty=Tensor[(13, 4, 14), bool] */;
  %311 = cast(%310, dtype="float64") /* ty=Tensor[(13, 4, 14), float64] */;
  %312 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %313 = greater(%304, %305) /* ty=Tensor[(13, 4, 14), bool] */;
  %314 = asin(%311) /* ty=Tensor[(13, 4, 14), float64] */;
  %315 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  %316 = %312.0;
  (%313, %314, %315, %316)
}

def @func_6419() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308), float64]) {
  %317 = @func_1745() /* ty=(Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) */;
  %318 = %317.2;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %320 = cast(meta[relay.Constant][18] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %321 = reshape(%319, newshape=[7, 11, 10]) /* ty=Tensor[(7, 11, 10), float64] */;
  %322 = reshape(%320, newshape=[7, 44]) /* ty=Tensor[(7, 44), float64] */;
  %323 = @func_2931(%321, %322) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) */;
  %324 = %323.0;
  (%318, %324, meta[relay.Constant][18] /* ty=Tensor[(308), float64] */)
}

def @func_8036() -> Tensor[(7, 11, 10), float32] {
  @func_4857() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_2355(%var_2344: Tensor[(7, 1, 7), float32], %var_2345: Tensor[(7, 11, 7), float32]) -> (Tensor[(7, 11, 7), float32], Tensor[(7, 11, 10), float32]) {
  %325 = cast(%var_2344, dtype="float32") /* ty=Tensor[(7, 1, 7), float32] */;
  %326 = cast(%var_2345, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
  %327 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %328 = floor_mod(%325, %326) /* ty=Tensor[(7, 11, 7), float32] */;
  %329 = %327.0;
  (%328, %329)
}

def @func_5739() -> Tensor[(7, 11, 10), float32] {
  %330 = @func_5006() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %330.0
}

def @func_3655() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  %331 = @func_3146() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %332 = %331.0;
  %333 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
  (%332, %333)
}

def @func_3223(%var_3158: Tensor[(26), float32], %var_3164: Tensor[(26), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(6, 2, 13), float32], Tensor[(26), float32], Tensor[(7, 11, 10), float32]) {
  %334 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %335 = cast(%var_3158, dtype="float32") /* ty=Tensor[(26), float32] */;
  %336 = reshape(%335, newshape=[1, 2, 13]) /* ty=Tensor[(1, 2, 13), float32] */;
  %337 = @func_2162(%336) /* ty=(Tensor[(6, 2, 13), float32], Tensor[(6, 2, 13), float32]) */;
  %338 = cast(%var_3164, dtype="float32") /* ty=Tensor[(26), float32] */;
  %339 = shape_of(%var_3158, dtype="int32") /* ty=Tensor[(1), int32] */;
  %340 = cast(%var_3158, dtype="float32") /* ty=Tensor[(26), float32] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?), float32] */;
  %342 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %343 = %334.0;
  %344 = %337.0;
  %345 = floor_mod(%340, %341) /* ty=Tensor[(26), float32] */;
  %346 = %342.0;
  (%343, %344, %345, %346)
}

def @func_7165() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %347 = @func_6029() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %348 = @func_4323() /* ty=Tensor[(7, 11, 10), float64] */;
  %349 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
  %350 = %347.1;
  (%348, %349, %350)
}

def @func_1328() -> (Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) {
  %351 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %353 = cast(meta[relay.Constant][19] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %354 = cast(meta[relay.Constant][20] /* ty=Tensor[(35, 6), uint16] */, dtype="uint16") /* ty=Tensor[(35, 6), uint16] */;
  %355 = reshape(%353, newshape=[]) /* ty=uint16 */;
  %356 = reshape(%354, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint16] */;
  %357 = @func_1042(%355, %356) /* ty=(Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) */;
  %358 = acos(%352) /* ty=Tensor[(7, 11, 10), float32] */;
  %359 = %357.0;
  (%358, %359, meta[relay.Constant][19] /* ty=uint16 */, meta[relay.Constant][20] /* ty=Tensor[(35, 6), uint16] */)
}

def @func_6132() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %360 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %361 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %362 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %363 = @func_2113() /* ty=Tensor[(7, 11, 10), float64] */;
  %364 = %360.0;
  %365 = %361.0;
  (%362, %363, %364, %365)
}

def @func_2279(%var_2257: Tensor[(308), float64]) -> (Tensor[(7, 11, 10), int8], Tensor[(7, 11, 4), bool]) {
  %366 = @func_1745() /* ty=(Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) */;
  %367 = cast(%var_2257, dtype="float64") /* ty=Tensor[(308), float64] */;
  %368 = cast(%var_2257, dtype="float64") /* ty=Tensor[(308), float64] */;
  %369 = reshape(%367, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %370 = reshape(%368, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %371 = @func_619(%369, %370) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %372 = %371.0;
  %373 = cast(%var_2257, dtype="bool") /* ty=Tensor[(308), bool] */;
  %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%372, dtype="bool") /* ty=Tensor[(7, 11, 4), bool] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %377 = %366.1;
  %378 = not_equal(%375, %376) /* ty=Tensor[(7, 11, 4), bool] */;
  (%377, %378)
}

def @func_2380() -> (Tensor[(7, 11, 10), float64],) {
  %379 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %380 = %379.0;
  (%380,)
}

def @func_1653(%var_1635: Tensor[(7, 8, 15), float64], %var_1636: Tensor[(7, 8, 15), float64], %var_1640: Tensor[(7, 8, 15), float64]) -> (Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) {
  %381 = cast(%var_1636, dtype="float64") /* ty=Tensor[(7, 8, 15), float64] */;
  %382 = shape_of(%var_1635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_1635, dtype="float64") /* ty=Tensor[(7, 8, 15), float64] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %385 = cast(%var_1640, dtype="uint8") /* ty=Tensor[(7, 8, 15), uint8] */;
  %386 = shape_of(%var_1636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%var_1636, dtype="uint8") /* ty=Tensor[(7, 8, 15), uint8] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %389 = mod(%383, %384) /* ty=Tensor[(7, 8, 15), float64] */;
  %390 = bitwise_xor(%387, %388) /* ty=Tensor[(7, 8, 15), uint8] */;
  (%389, %390)
}

def @func_897(%var_850: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %391 = cast(meta[relay.Constant][21] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %392 = reshape(%391, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %393 = cast(%var_850, dtype="int8") /* ty=Tensor[(104), int8] */;
  %394 = reshape(%393, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %395 = @func_706(%394) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %396 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %397 = cast(meta[relay.Constant][22] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %398 = cast(meta[relay.Constant][22] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %399 = reshape(%397, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %400 = reshape(%398, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %401 = @func_619(%399, %400) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %402 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %403 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %404 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %405 = @func_403(%392) /* ty=Tensor[(12, 9, 6), float32] */;
  %406 = %395.2;
  %407 = %396.0;
  %408 = %401.0;
  %409 = %402.0;
  %410 = %403.0;
  (%404, %405, meta[relay.Constant][21] /* ty=Tensor[(162, 4), float32] */, %406, %var_850, %407, %408, meta[relay.Constant][22] /* ty=Tensor[(308), float64] */, %409, %410)
}

def @func_55() -> Tensor[(7, 11, 10), float64] {
  %411 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %411.0
}

def @func_6224() -> (Tensor[(7, 11, 10), float64],) {
  %412 = @func_4323() /* ty=Tensor[(7, 11, 10), float64] */;
  (%412,)
}

def @func_2030() -> (Tensor[(7, 11, 10), float64],) {
  %413 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %414 = %413.0;
  (%414,)
}

def @func_2663() -> (Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) {
  %415 = @func_1573() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) */;
  %416 = %415.1;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(2, 13, 4), float64] */;
  %418 = sqrt(%417) /* ty=Tensor[(2, 13, 4), float64] */;
  %419 = cast(%416, dtype="float64") /* ty=Tensor[(2, 13, 4), float64] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%418, dtype="float64") /* ty=Tensor[(2, 13, 4), float64] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %423 = floor_divide(%421, %422) /* ty=Tensor[(2, 13, 4), float64] */;
  %424 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  (%423, %424)
}

def @func_4068() -> (Tensor[(7, 11, 10), float64],) {
  %425 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
  (%425,)
}

def @func_4966(%var_4954: Tensor[(16, 4, 2), uint8], %var_4955: Tensor[(16, 4, 2), uint8]) -> Tensor[(16, 4, 2), bool] {
  %426 = cast(%var_4955, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
  %427 = shape_of(%var_4954, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%var_4954, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%428, %429) /* ty=Tensor[(16, 4, 2), bool] */
}

def @func_5791(%var_5775: Tensor[(5, 11, 13), float32]) -> (Tensor[(5, 11, 13), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
  %430 = cast(%var_5775, dtype="float32") /* ty=Tensor[(5, 11, 13), float32] */;
  %431 = cast(meta[relay.Constant][23] /* ty=Tensor[(1365), float32] */, dtype="float32") /* ty=Tensor[(1365), float32] */;
  %432 = reshape(%431, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float32] */;
  %433 = @func_384(%432) /* ty=(Tensor[(7, 13, 15), float32],) */;
  %434 = log(%430) /* ty=Tensor[(5, 11, 13), float32] */;
  %435 = %433.0;
  (%434, %435, meta[relay.Constant][23] /* ty=Tensor[(1365), float32] */)
}

def @func_490(%var_478: Tensor[(2, 13, 4), int8], %var_479: Tensor[(2, 13, 4), int8]) -> (Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) {
  %436 = cast(%var_479, dtype="int8") /* ty=Tensor[(2, 13, 4), int8] */;
  %437 = shape_of(%var_478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_478, dtype="int8") /* ty=Tensor[(2, 13, 4), int8] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %440 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %441 = minimum(%438, %439) /* ty=Tensor[(2, 13, 4), int8] */;
  %442 = %440.2;
  (%441, %442)
}

def @func_7521(%var_7490: Tensor[(12, 10, 3), float32]) -> (Tensor[(12, 10, 3), float64], Tensor[(7, 11, 10), float64]) {
  %443 = cast(%var_7490, dtype="float32") /* ty=Tensor[(12, 10, 3), float32] */;
  %444 = sqrt(%443) /* ty=Tensor[(12, 10, 3), float32] */;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(12, 10, 3), float64] */;
  %446 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %447 = asin(%445) /* ty=Tensor[(12, 10, 3), float64] */;
  %448 = %446.0;
  (%447, %448)
}

def @func_7999() -> (Tensor[(7, 11, 10), float64],) {
  %449 = @func_1255() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) */;
  %450 = %449.5;
  (%450,)
}

def @main(%var_8362: int8, %var_8363: Tensor[(6, 13, 16), int8]) -> Tensor[(6, 13, 16), bool] {
  %451 = cast(%var_8362, dtype="bool") /* ty=bool */;
  %452 = cast(%var_8363, dtype="bool") /* ty=Tensor[(6, 13, 16), bool] */;
  not_equal(%451, %452) /* ty=Tensor[(6, 13, 16), bool] */
}

def @func_6865(%var_6835: Tensor[(5, 2, 1), float32]) -> (Tensor[(5, 2, ?), float32], Tensor[(7, 11, 10), bool]) {
  %453 = cast(%var_6835, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %454 = asin(%453) /* ty=Tensor[(5, 2, 1), float32] */;
  %455 = cast(%var_6835, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%454, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %459 = @func_4356() /* ty=(Tensor[(7, 11, 10), bool],) */;
  %460 = floor_divide(%457, %458) /* ty=Tensor[(5, 2, ?), float32] */;
  %461 = %459.0;
  (%460, %461)
}

def @func_1932() -> Tensor[(7, 11, 10), float64] {
  %462 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %462.2
}

def @func_3287() -> (Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %463 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %464 = @func_2663() /* ty=(Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) */;
  %465 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %466 = %463.3;
  %467 = %464.1;
  %468 = %465.0;
  %469 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
  (%466, %467, %468, %469)
}

def @func_5402(%var_5399: Tensor[(2688), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(55, 4), bool], Tensor[(2688), float32], Tensor[(220), float64]) {
  %470 = cast(%var_5399, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %471 = cast(%var_5399, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %472 = cast(meta[relay.Constant][24] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
  %473 = reshape(%470, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
  %474 = reshape(%471, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
  %475 = reshape(%472, newshape=[55, 4]) /* ty=Tensor[(55, 4), float64] */;
  %476 = @func_3595(%473, %474, %475) /* ty=(Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %477 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
  %478 = %476.3;
  (%477, %478, %var_5399, meta[relay.Constant][24] /* ty=Tensor[(220), float64] */)
}

def @func_4323() -> Tensor[(7, 11, 10), float64] {
  %479 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %479.0
}

def @func_2931(%var_2914: Tensor[(7, 11, 10), float64], %var_2927: Tensor[(7, 44), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) {
  %480 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %481 = %480.2;
  %482 = cast(%var_2914, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%481, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %486 = cast(%var_2927, dtype="float64") /* ty=Tensor[(7, 44), float64] */;
  %487 = reshape(%486, newshape=[308, 1]) /* ty=Tensor[(308, 1), float64] */;
  %488 = @func_2403(%487) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) */;
  %489 = maximum(%484, %485) /* ty=Tensor[(7, 11, 10), float64] */;
  %490 = %488.2;
  (%489, %490, %var_2927)
}

def @func_1010() -> Tensor[(7, 11, 10), float32] {
  %491 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %492 = %491.0;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  cos(%493) /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_2873(%var_2855: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) {
  %494 = cast(%var_2855, dtype="int8") /* ty=Tensor[(104), int8] */;
  %495 = reshape(%494, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %496 = @func_706(%495) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %497 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %498 = reshape(%497, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %499 = @func_1921(%498) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) */;
  %500 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %501 = reshape(%500, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %502 = @func_1921(%501) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) */;
  %503 = @func_2539() /* ty=Tensor[(7, 11, 10), bool] */;
  %504 = %496.0;
  %505 = %499.2;
  %506 = %502.0;
  (%503, %504, %var_2855, %505, meta[relay.Constant][25] /* ty=Tensor[(840), float64] */, %506)
}

def @func_6029() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %507 = @func_3308() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %508 = @func_1989() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %509 = %507.0;
  %510 = %508.0;
  %511 = @func_3726() /* ty=Tensor[(7, 11, 10), float64] */;
  (%509, %510, %511)
}

def @func_8328() -> Tensor[(7, 11, 10), float32] {
  %512 = @func_4915() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %512.0
}

def @func_7809() -> Tensor[(7, 11, 10), float32] {
  %513 = @func_4011() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %513.0
}

def @func_2787() -> (Tensor[(7, 11, 10), float64],) {
  %514 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  (%514,)
}

def @func_2766() -> Tensor[(7, 11, 10), float32] {
  %515 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
  %516 = cast(%515, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  tan(%516) /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_7606() -> Tensor[(7, 11, 10), float32] {
  %517 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %517.0
}

def @func_6560() -> (Tensor[(7, 11, 10), float64],) {
  %518 = @func_6224() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %519 = %518.0;
  (%519,)
}

def @func_3518() -> Tensor[(7, 11, 10), float32] {
  %520 = @func_3308() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %520.0
}

def @func_8239() -> (Tensor[(7, 11, 10), float64], uint16, Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %521 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %522 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %523 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %524 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %525 = %521.0;
  %526 = %522.2;
  %527 = %523.1;
  %528 = %524.0;
  (%525, %526, %527, %528)
}

def @func_7219(%var_7188: bool, %var_7189: Tensor[(1, 2), bool]) -> (Tensor[(1, 2), bool], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) {
  %529 = cast(%var_7188, dtype="bool") /* ty=bool */;
  %530 = cast(%var_7189, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
  %531 = cast(%var_7188, dtype="uint32") /* ty=uint32 */;
  %532 = reshape(%531, newshape=[]) /* ty=uint32 */;
  %533 = @func_784(%532) /* ty=(Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) */;
  %534 = @func_1745() /* ty=(Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) */;
  %535 = logical_or(%529, %530) /* ty=Tensor[(1, 2), bool] */;
  %536 = %533.1;
  %537 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  %538 = %534.2;
  (%535, %536, %537, %538)
}

def @func_7271() -> (Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(104), int8], uint32, Tensor[(104), int8], Tensor[(308), float32]) {
  %539 = @func_3655() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %540 = cast(meta[relay.Constant][26] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %541 = reshape(%540, newshape=[308, 1]) /* ty=Tensor[(308, 1), float64] */;
  %542 = @func_2403(%541) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) */;
  %543 = cast(meta[relay.Constant][27] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %544 = reshape(%543, newshape=[]) /* ty=uint32 */;
  %545 = @func_784(%544) /* ty=(Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) */;
  %546 = @func_3776() /* ty=(Tensor[(104), int8],) */;
  %547 = cast(meta[relay.Constant][26] /* ty=Tensor[(308), float64] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %548 = %539.1;
  %549 = %542.3;
  %550 = %545.1;
  %551 = %546.0;
  %552 = cos(%547) /* ty=Tensor[(308), float32] */;
  (%548, %549, %550, meta[relay.Constant][27] /* ty=uint32 */, %551, %552)
}

def @func_3831(%var_3787: Tensor[(3, 1, 3), float32], %var_3818: Tensor[(104), int8]) -> (Tensor[(3, ?, 3), int8], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(840), float64]) {
  %553 = cast(%var_3787, dtype="float32") /* ty=Tensor[(3, 1, 3), float32] */;
  %554 = rsqrt(%553) /* ty=Tensor[(3, 1, 3), float32] */;
  %555 = cast(%var_3787, dtype="int8") /* ty=Tensor[(3, 1, 3), int8] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="int8") /* ty=Tensor[(3, 1, 3), int8] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %559 = cast(%var_3818, dtype="int8") /* ty=Tensor[(104), int8] */;
  %560 = cast(%var_3818, dtype="int8") /* ty=Tensor[(104), int8] */;
  %561 = reshape(%559, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
  %562 = reshape(%560, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
  %563 = @func_490(%561, %562) /* ty=(Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) */;
  %564 = cast(%var_3818, dtype="int8") /* ty=Tensor[(104), int8] */;
  %565 = reshape(%564, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %566 = @func_2873(%565) /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) */;
  %567 = multiply(%557, %558) /* ty=Tensor[(3, ?, 3), int8] */;
  %568 = %563.1;
  %569 = %566.4;
  (%567, %568, %var_3818, %569)
}

def @func_567() -> (Tensor[(7, 11, 10), float64],) {
  %570 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %571 = %570.0;
  (%571,)
}

def @func_2113() -> Tensor[(7, 11, 10), float64] {
  %572 = @func_671() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) */;
  %572.0
}

def @func_5607() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %573 = @func_4011() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %574 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %575 = %573.0;
  %576 = %574.0;
  (%575, %576)
}

def @func_5525() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(210, 1), uint16]) {
  %577 = @func_4356() /* ty=(Tensor[(7, 11, 10), bool],) */;
  %578 = @func_2489() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %579 = cast(meta[relay.Constant][28] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %580 = cast(meta[relay.Constant][29] /* ty=Tensor[(210, 1), uint16] */, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
  %581 = reshape(%579, newshape=[]) /* ty=uint16 */;
  %582 = reshape(%580, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint16] */;
  %583 = @func_1042(%581, %582) /* ty=(Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) */;
  %584 = %577.0;
  %585 = %578.0;
  %586 = %583.1;
  (%584, %585, %586, meta[relay.Constant][28] /* ty=uint16 */, meta[relay.Constant][29] /* ty=Tensor[(210, 1), uint16] */)
}

def @func_4180(%var_4174: Tensor[(308, 15), int32]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(308, ?), float64], Tensor[(7, 11, 10), float64], Tensor[(308, 15), bool]) {
  %587 = @func_3146() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %588 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %589 = %587.0;
  %590 = cast(%589, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %591 = cast(meta[relay.Constant][30] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %592 = reshape(%590, newshape=[7, 11, 10]) /* ty=Tensor[(7, 11, 10), float64] */;
  %593 = reshape(%591, newshape=[7, 44]) /* ty=Tensor[(7, 44), float64] */;
  %594 = @func_2931(%592, %593) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) */;
  %595 = %594.1;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %597 = sin(%596) /* ty=Tensor[(308, 1), float64] */;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %599 = shape_of(%595, dtype="int32") /* ty=Tensor[(2), int32] */;
  %600 = cast(%595, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %602 = cast(%595, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %603 = cosh(%602) /* ty=Tensor[(308, 1), float64] */;
  %604 = cast(%595, dtype="uint32") /* ty=Tensor[(308, 1), uint32] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(2), int32] */;
  %606 = cast(%603, dtype="uint32") /* ty=Tensor[(308, 1), uint32] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %608 = left_shift(%606, %607) /* ty=Tensor[(308, ?), uint32] */;
  %609 = cast(%603, dtype="int32") /* ty=Tensor[(308, 1), int32] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(2), int32] */;
  %611 = cast(%608, dtype="int32") /* ty=Tensor[(308, ?), int32] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %613 = multiply(%611, %612) /* ty=Tensor[(308, ?), int32] */;
  %614 = cast(%613, dtype="bool") /* ty=Tensor[(308, ?), bool] */;
  %615 = cast(%var_4174, dtype="bool") /* ty=Tensor[(308, 15), bool] */;
  %616 = %588.1;
  %617 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %618 = divide(%600, %601) /* ty=Tensor[(308, ?), float64] */;
  %619 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %620 = less(%614, %615) /* ty=Tensor[(308, 15), bool] */;
  (%589, %616, meta[relay.Constant][30] /* ty=Tensor[(308), float64] */, %617, %618, %619, %620)
}

def @func_5697() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %621 = @func_3518() /* ty=Tensor[(7, 11, 10), float32] */;
  %622 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
  (%621, %622)
}

def @func_6681() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(14, 5, 7), float64]) {
  %623 = @func_4068() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %624 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
  %625 = tan(%624) /* ty=Tensor[(14, 5, 7), float32] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
  %627 = erf(%626) /* ty=Tensor[(14, 5, 7), float32] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(14, 5, 7), float64] */;
  %629 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
  %630 = %623.0;
  %631 = cosh(%628) /* ty=Tensor[(14, 5, 7), float64] */;
  (%629, %630, %631)
}

def @func_1921(%var_1848: Tensor[(840), float64]) -> (Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) {
  %632 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
  %633 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
  %634 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
  %635 = reshape(%632, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
  %636 = reshape(%633, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
  %637 = reshape(%634, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
  %638 = @func_1653(%635, %636, %637) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) */;
  %639 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %640 = %639.3;
  %641 = cast(meta[relay.Constant][32] /* ty=Tensor[(35, 6), uint16] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(2), int32] */;
  %643 = cast(%640, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %645 = mod(%643, %644) /* ty=Tensor[(35, 6), float32] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %647 = rsqrt(%646) /* ty=Tensor[(35, 6), float64] */;
  %648 = cast(%645, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %649 = shape_of(%647, dtype="int32") /* ty=Tensor[(2), int32] */;
  %650 = cast(%647, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %652 = greater_equal(%650, %651) /* ty=Tensor[(35, 6), bool] */;
  %653 = cast(%647, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %655 = cast(%652, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %657 = greater(%655, %656) /* ty=Tensor[(35, 6), bool] */;
  %658 = cast(meta[relay.Constant][33] /* ty=Tensor[(35, 6), bool] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(2), int32] */;
  %660 = cast(%657, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %662 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
  %663 = %638.0;
  %664 = cast(%663, dtype="float64") /* ty=Tensor[(7, 8, 15), float64] */;
  %665 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
  %666 = reshape(%662, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
  %667 = reshape(%664, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
  %668 = reshape(%665, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
  %669 = @func_1653(%666, %667, %668) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) */;
  %670 = power(%660, %661) /* ty=Tensor[(35, 6), float32] */;
  %671 = %669.0;
  (%663, %var_1848, %670, %671)
}

def @func_1255() -> (Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) {
  %672 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %673 = cast(meta[relay.Constant][34] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %674 = reshape(%673, newshape=[11, 4, 3]) /* ty=Tensor[(11, 4, 3), float32] */;
  %675 = @func_214(%674) /* ty=(Tensor[(11, 4, 3), float32],) */;
  %676 = %675.0;
  %677 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 4, 3), float32] */, dtype="uint16") /* ty=Tensor[(11, 4, 3), uint16] */;
  %678 = shape_of(%676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%676, dtype="uint16") /* ty=Tensor[(11, 4, 3), uint16] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %681 = cast(meta[relay.Constant][36] /* ty=Tensor[(104, 1), int8] */, dtype="int8") /* ty=Tensor[(104, 1), int8] */;
  %682 = reshape(%681, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %683 = @func_897(%682) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %684 = %683.5;
  %685 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %687 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%684, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %690 = cast(meta[relay.Constant][36] /* ty=Tensor[(104, 1), int8] */, dtype="int8") /* ty=Tensor[(104, 1), int8] */;
  %691 = reshape(%690, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %692 = @func_897(%691) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %693 = %672.0;
  %694 = bitwise_and(%679, %680) /* ty=Tensor[(11, 4, 3), uint16] */;
  %695 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  %696 = power(%688, %689) /* ty=Tensor[(7, 11, 10), float64] */;
  %697 = %692.6;
  (%693, meta[relay.Constant][34] /* ty=Tensor[(132, 1), float32] */, %694, meta[relay.Constant][36] /* ty=Tensor[(104, 1), int8] */, %695, %696, %697)
}

def @func_3146() -> (Tensor[(7, 11, 10), float64],) {
  %698 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %699 = %698.2;
  (%699,)
}

def @func_2047() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %700 = @func_2015() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %701 = @func_1293() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %702 = %700.0;
  %703 = %701.0;
  (%702, %703)
}

def @func_671() -> (Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) {
  %704 = cast(meta[relay.Constant][37] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %705 = reshape(%704, newshape=[11, 4, 3]) /* ty=Tensor[(11, 4, 3), float32] */;
  %706 = @func_214(%705) /* ty=(Tensor[(11, 4, 3), float32],) */;
  %707 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %708 = %706.0;
  (%707, %708, meta[relay.Constant][37] /* ty=Tensor[(132), float32] */)
}

def @func_3688() -> Tensor[(7, 11, 10), float64] {
  @func_2113() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_8309() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %709 = @func_4698() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %710 = @func_8060() /* ty=Tensor[(7, 11, 10), float64] */;
  %711 = @func_5739() /* ty=Tensor[(7, 11, 10), float32] */;
  %712 = %709.1;
  (%710, %711, %712)
}

def @func_3776() -> (Tensor[(104), int8],) {
  %713 = @func_1573() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) */;
  %714 = %713.2;
  (%714,)
}

def @func_4746() -> Tensor[(7, 11, 10), float32] {
  @func_2766() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_2834() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %715 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %716 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %717 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  %718 = %715.0;
  %719 = %716.1;
  (%717, %718, %719)
}

def @func_4698() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %720 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %721 = %720.1;
  %722 = @func_3688() /* ty=Tensor[(7, 11, 10), float64] */;
  (%721, %722)
}

def @func_1293() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %723 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %724 = %723.0;
  %725 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  (%724, %725)
}

def @func_3308() -> (Tensor[(7, 11, 10), float32],) {
  %726 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %727 = %726.2;
  (%727,)
}

def @func_2015() -> (Tensor[(7, 11, 10), float32],) {
  %728 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  (%728,)
}

def @func_6932(%var_6926: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), float32]) {
  %729 = @func_6802() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) */;
  %730 = cast(meta[relay.Constant][38] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %731 = reshape(%730, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %732 = @func_2873(%731) /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) */;
  %733 = cast(%var_6926, dtype="float32") /* ty=Tensor[(104), float32] */;
  %734 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(104), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %735 = cast(meta[relay.Constant][38] /* ty=Tensor[(104), int8] */, dtype="float32") /* ty=Tensor[(104), float32] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?), float32] */;
  %737 = @func_4323() /* ty=Tensor[(7, 11, 10), float64] */;
  %738 = %729.0;
  %739 = %732.1;
  %740 = power(%735, %736) /* ty=Tensor[(104), float32] */;
  (%737, %738, %739, %740)
}

def @func_535() -> Tensor[(7, 11, 10), float64] {
  @func_271() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_7734() -> (Tensor[(7, 11, 10), float32],) {
  %741 = @func_4857() /* ty=Tensor[(7, 11, 10), float32] */;
  (%741,)
}

def @func_3447(%var_3437: Tensor[(1365), float32]) -> (Tensor[(7, 11, 10), bool], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
  %742 = @func_2834() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %743 = cast(%var_3437, dtype="float32") /* ty=Tensor[(1365), float32] */;
  %744 = reshape(%743, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float32] */;
  %745 = @func_384(%744) /* ty=(Tensor[(7, 13, 15), float32],) */;
  %746 = %742.0;
  %747 = %745.0;
  (%746, %747, %var_3437)
}

def @func_1745() -> (Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) {
  %748 = @func_1255() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) */;
  %749 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
  %750 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="int8") /* ty=Tensor[(7, 11, 10), int8] */;
  %753 = shape_of(%749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%749, dtype="int8") /* ty=Tensor[(7, 11, 10), int8] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %756 = %748.2;
  %757 = bitwise_and(%754, %755) /* ty=Tensor[(7, 11, 10), int8] */;
  %758 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  (%756, %757, %758)
}

def @func_6581() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %759 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %760 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %761 = %759.0;
  %762 = %760.0;
  (%761, %762)
}

def @func_8060() -> Tensor[(7, 11, 10), float64] {
  %763 = @func_7999() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %763.0
}

def @func_6514(%var_6467: Tensor[(308), float64]) -> (Tensor[(308), bool], Tensor[(7, 11, 10), float32], Tensor[(308), float32]) {
  %764 = @func_6419() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308), float64]) */;
  %765 = %764.2;
  %766 = cast(%var_6467, dtype="bool") /* ty=Tensor[(308), bool] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(1), int32] */;
  %768 = cast(%765, dtype="bool") /* ty=Tensor[(308), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?), bool] */;
  %770 = cast(%var_6467, dtype="float32") /* ty=Tensor[(308), float32] */;
  %771 = not_equal(%768, %769) /* ty=Tensor[(308), bool] */;
  %772 = @func_4646() /* ty=Tensor[(7, 11, 10), float32] */;
  %773 = sin(%770) /* ty=Tensor[(308), float32] */;
  (%771, %772, %773)
}

def @func_7550() -> Tensor[(7, 11, 10), float64] {
  @func_55() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_619(%var_611: Tensor[(7, 11, 4), float64], %var_612: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) {
  %774 = cast(%var_612, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %775 = shape_of(%var_611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_611, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %778 = floor_mod(%776, %777) /* ty=Tensor[(7, 11, 4), float64] */;
  %779 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  (%778, %779)
}

def @func_4605(%var_4580: Tensor[(455, 3), float32], %var_4595: Tensor[(35, 6), uint16]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) {
  %780 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %781 = cast(%var_4580, dtype="float32") /* ty=Tensor[(455, 3), float32] */;
  %782 = reshape(%781, newshape=[1365]) /* ty=Tensor[(1365), float32] */;
  %783 = @func_2229(%782) /* ty=(Tensor[(1, 3), int64], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) */;
  %784 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %785 = %784.0;
  %786 = cast(%var_4595, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(2), int32] */;
  %788 = cast(%785, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %790 = %780.0;
  %791 = @func_4489() /* ty=Tensor[(7, 11, 10), float64] */;
  %792 = %783.0;
  %793 = logical_xor(%788, %789) /* ty=Tensor[(35, 6), int64] */;
  (%790, %791, %792, %var_4580, %793)
}

def @func_3069() -> Tensor[(7, 11, 10), float64] {
  %794 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %794.0
}

def @func_2403(%var_2386: Tensor[(308, 1), float64]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) {
  %795 = cast(%var_2386, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %796 = cast(%var_2386, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %797 = reshape(%795, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %798 = reshape(%796, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %799 = @func_619(%797, %798) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %800 = cast(meta[relay.Constant][39] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %801 = reshape(%800, newshape=[]) /* ty=uint32 */;
  %802 = @func_784(%801) /* ty=(Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) */;
  %803 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  %804 = %799.1;
  %805 = %802.1;
  (%803, %804, %var_2386, %805, meta[relay.Constant][39] /* ty=uint32 */)
}

def @func_366() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %806 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %807 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %808 = cast(%807, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %809 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%806, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %812 = equal(%810, %811) /* ty=Tensor[(7, 11, 10), bool] */;
  %813 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %814 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  (%812, %813, %814)
}

def @func_6274(%var_6254: Tensor[(1365), float32], %var_6255: Tensor[(210), uint16]) -> (Tensor[(7, 11, 10), float64], Tensor[(35, 6), int64], Tensor[(1365), float32], Tensor[(210), uint16], Tensor[(7, 11, 4), float64], Tensor[(154, 2), float64]) {
  %815 = @func_5697() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %816 = cast(%var_6254, dtype="float32") /* ty=Tensor[(1365), float32] */;
  %817 = cast(%var_6255, dtype="uint16") /* ty=Tensor[(210), uint16] */;
  %818 = reshape(%816, newshape=[455, 3]) /* ty=Tensor[(455, 3), float32] */;
  %819 = reshape(%817, newshape=[35, 6]) /* ty=Tensor[(35, 6), uint16] */;
  %820 = @func_4605(%818, %819) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) */;
  %821 = cast(meta[relay.Constant][40] /* ty=Tensor[(154, 2), float64] */, dtype="float64") /* ty=Tensor[(154, 2), float64] */;
  %822 = cast(meta[relay.Constant][40] /* ty=Tensor[(154, 2), float64] */, dtype="float64") /* ty=Tensor[(154, 2), float64] */;
  %823 = reshape(%821, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %824 = reshape(%822, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %825 = @func_619(%823, %824) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %826 = %815.1;
  %827 = %820.4;
  %828 = %825.0;
  (%826, %827, %var_6254, %var_6255, %828, meta[relay.Constant][40] /* ty=Tensor[(154, 2), float64] */)
}

def @func_6998() -> (Tensor[(7, 11, 10), float64],) {
  %829 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %830 = %829.0;
  (%830,)
}

def @func_1626() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) {
  %831 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %832 = %831.0;
  %833 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  %834 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
  %835 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  (%832, %833, %834, %835)
}

def @func_1989() -> (Tensor[(7, 11, 10), float64],) {
  %836 = @func_1293() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %837 = %836.0;
  (%837,)
}

def @func_1042(%var_1032: uint16, %var_1033: Tensor[(2, 15, 7), uint16]) -> (Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) {
  %838 = cast(%var_1032, dtype="uint16") /* ty=uint16 */;
  %839 = cast(%var_1033, dtype="uint16") /* ty=Tensor[(2, 15, 7), uint16] */;
  %840 = bitwise_or(%838, %839) /* ty=Tensor[(2, 15, 7), uint16] */;
  %841 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  (%840, %841)
}

def @func_2489() -> (Tensor[(7, 11, 10), float64],) {
  %842 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %843 = %842.0;
  (%843,)
}

def @func_7670() -> Tensor[(7, 11, 10), float64] {
  %844 = @func_4068() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %844.0
}

def @func_5510() -> Tensor[(10, 11, 12), float32] {
  %845 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 12), float32] */;
  erf(%845) /* ty=Tensor[(10, 11, 12), float32] */
}

def @func_7352(%var_7326: uint16) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), float64], Tensor[(2688), float32], Tensor[(220), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(7, 11, 10), float64], Tensor[(432), float64]) {
  %846 = @func_6132() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %847 = @func_4698() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %848 = cast(meta[relay.Constant][42] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %849 = cast(meta[relay.Constant][43] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %850 = cast(meta[relay.Constant][44] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
  %851 = reshape(%848, newshape=[35, 6]) /* ty=Tensor[(35, 6), float64] */;
  %852 = reshape(%849, newshape=[96, 28]) /* ty=Tensor[(96, 28), float32] */;
  %853 = reshape(%850, newshape=[220, 1]) /* ty=Tensor[(220, 1), float64] */;
  %854 = @func_5334(%851, %852, %853) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) */;
  %855 = @func_5053() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16]) */;
  %856 = cast(%var_7326, dtype="uint16") /* ty=uint16 */;
  %857 = cast(meta[relay.Constant][42] /* ty=Tensor[(210, 1), float64] */, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
  %858 = reshape(%856, newshape=[]) /* ty=uint16 */;
  %859 = reshape(%857, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint16] */;
  %860 = @func_1042(%858, %859) /* ty=(Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) */;
  %861 = cast(meta[relay.Constant][45] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %862 = cast(meta[relay.Constant][45] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %863 = reshape(%861, newshape=[16, 9, 3]) /* ty=Tensor[(16, 9, 3), float64] */;
  %864 = reshape(%862, newshape=[16, 9, 3]) /* ty=Tensor[(16, 9, 3), float64] */;
  %865 = @func_2618(%863, %864) /* ty=(Tensor[(16, 9, 3), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(16, 9, 3), bool]) */;
  %866 = %846.1;
  %867 = %847.1;
  %868 = @func_4746() /* ty=Tensor[(7, 11, 10), float32] */;
  %869 = %854.6;
  %870 = %855.0;
  %871 = %860.1;
  %872 = %865.2;
  (%866, %867, %868, %869, meta[relay.Constant][42] /* ty=Tensor[(210, 1), float64] */, meta[relay.Constant][43] /* ty=Tensor[(2688), float32] */, meta[relay.Constant][44] /* ty=Tensor[(220), float64] */, %870, %871, %var_7326, %872, meta[relay.Constant][45] /* ty=Tensor[(432), float64] */)
}

def @func_6751() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  %873 = @func_3986() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %874 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %875 = %873.0;
  %876 = %874.0;
  %877 = @func_5879() /* ty=Tensor[(7, 11, 10), float32] */;
  (%875, %876, %877)
}

def @func_4011() -> (Tensor[(7, 11, 10), float32],) {
  %878 = @func_3986() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %879 = %878.0;
  (%879,)
}

def @func_5133() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(104, 1), int8], Tensor[(7, 11, 10), float64]) {
  %880 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %881 = @func_1989() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %882 = cast(meta[relay.Constant][46] /* ty=Tensor[(104, 1), int8] */, dtype="int8") /* ty=Tensor[(104, 1), int8] */;
  %883 = reshape(%882, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %884 = @func_706(%883) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %885 = %880.0;
  %886 = %881.0;
  %887 = %884.0;
  %888 = @func_4489() /* ty=Tensor[(7, 11, 10), float64] */;
  (%885, %886, %887, meta[relay.Constant][46] /* ty=Tensor[(104, 1), int8] */, %888)
}

def @func_384(%var_379: Tensor[(7, 13, 15), float32]) -> (Tensor[(7, 13, 15), float32],) {
  %889 = cast(%var_379, dtype="float32") /* ty=Tensor[(7, 13, 15), float32] */;
  %890 = cos(%889) /* ty=Tensor[(7, 13, 15), float32] */;
  (%890,)
}

def @func_909() -> (Tensor[(7, 11, 10), float32],) {
  %891 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  (%891,)
}

def @func_5879() -> Tensor[(7, 11, 10), float32] {
  %892 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %892.0
}

def @func_7632() -> (Tensor[(7, 11, 10), float64],) {
  %893 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
  %894 = %893.0;
  (%894,)
}

def @func_8024() -> Tensor[(7, 11, 10), float32] {
  %895 = @func_3308() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %895.0
}

def @func_6802() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) {
  %896 = @func_3986() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %897 = %896.0;
  %898 = @func_3518() /* ty=Tensor[(7, 11, 10), float32] */;
  (%897, %898)
}

def @func_4646() -> Tensor[(7, 11, 10), float32] {
  %899 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %899.0
}

def @func_2539() -> Tensor[(7, 11, 10), bool] {
  @func_1066() /* ty=Tensor[(7, 11, 10), bool] */
}

def @func_3726() -> Tensor[(7, 11, 10), float64] {
  %900 = @func_3267() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %900.1
}

def @func_4356() -> (Tensor[(7, 11, 10), bool],) {
  %901 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  (%901,)
}

def @func_4880(%var_4862: Tensor[(12, 16, 16), float32], %var_4871: Tensor[(12, 16, 16), float32]) -> (Tensor[(12, 16, 16), float32], Tensor[(12, 16, 16), float32]) {
  %902 = cast(%var_4862, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %903 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(12, 16, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %906 = cast(%var_4871, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %907 = shape_of(%var_4862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%var_4862, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %910 = power(%904, %905) /* ty=Tensor[(12, 16, 16), float32] */;
  %911 = subtract(%908, %909) /* ty=Tensor[(12, 16, 16), float32] */;
  (%910, %911)
}

def @func_3887(%var_3868: Tensor[(18, 36), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), bool], Tensor[(18, 36), float32]) {
  %912 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %913 = cast(meta[relay.Constant][48] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %914 = reshape(%913, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %915 = @func_3388(%914) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) */;
  %916 = cast(%var_3868, dtype="uint8") /* ty=Tensor[(18, 36), uint8] */;
  %917 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(18, 36), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %918 = cast(meta[relay.Constant][48] /* ty=Tensor[(18, 36), float32] */, dtype="uint8") /* ty=Tensor[(18, 36), uint8] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %920 = bitwise_xor(%918, %919) /* ty=Tensor[(18, 36), uint8] */;
  %921 = cast(%920, dtype="float64") /* ty=Tensor[(18, 36), float64] */;
  %922 = log2(%921) /* ty=Tensor[(18, 36), float64] */;
  %923 = cast(%922, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %924 = %912.1;
  %925 = %915.2;
  %926 = asin(%923) /* ty=Tensor[(18, 36), float32] */;
  (%924, %925, %926)
}

def @func_5576(%var_5547: Tensor[(1, 1365), float32], %var_5567: Tensor[(2, 1365), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(2, 1365), bool]) {
  %927 = @func_4385() /* ty=(Tensor[(7, 14, 8), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(4620), int32]) */;
  %928 = cast(%var_5547, dtype="float32") /* ty=Tensor[(1, 1365), float32] */;
  %929 = cast(meta[relay.Constant][49] /* ty=Tensor[(210, 1), uint16] */, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
  %930 = reshape(%928, newshape=[455, 3]) /* ty=Tensor[(455, 3), float32] */;
  %931 = reshape(%929, newshape=[35, 6]) /* ty=Tensor[(35, 6), uint16] */;
  %932 = @func_4605(%930, %931) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) */;
  %933 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
  %934 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %935 = cast(%var_5547, dtype="bool") /* ty=Tensor[(1, 1365), bool] */;
  %936 = cast(%var_5567, dtype="bool") /* ty=Tensor[(2, 1365), bool] */;
  %937 = %927.2;
  %938 = %932.0;
  %939 = %933.2;
  %940 = %934.0;
  %941 = logical_and(%935, %936) /* ty=Tensor[(2, 1365), bool] */;
  (%937, %938, meta[relay.Constant][49] /* ty=Tensor[(210, 1), uint16] */, %939, %940, %941)
}

def @func_1066() -> Tensor[(7, 11, 10), bool] {
  %942 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %942.0
}

def @func_3915() -> Tensor[(7, 11, 10), float64] {
  @func_3069() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_8151(%var_8133: Tensor[(7, 14, 9), uint16], %var_8134: Tensor[(7, 14, 9), uint16]) -> Tensor[(7, 14, 9), bool] {
  %943 = cast(%var_8134, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %944 = shape_of(%var_8133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%var_8133, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%945, %946) /* ty=Tensor[(7, 14, 9), bool] */
}

def @func_1573() -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) {
  %947 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %948 = cast(meta[relay.Constant][50] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %949 = reshape(%948, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %950 = @func_706(%949) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %951 = %947.0;
  %952 = %950.1;
  (%951, %952, meta[relay.Constant][50] /* ty=Tensor[(104), int8] */)
}

def @func_3595(%var_3524: Tensor[(12, 14, 16), float32], %var_3525: Tensor[(12, 14, 16), float32], %var_3561: Tensor[(55, 4), float64]) -> (Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %953 = cast(%var_3525, dtype="float32") /* ty=Tensor[(12, 14, 16), float32] */;
  %954 = shape_of(%var_3524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%var_3524, dtype="float32") /* ty=Tensor[(12, 14, 16), float32] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %957 = @func_3043() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %958 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %959 = cast(%var_3561, dtype="float64") /* ty=Tensor[(55, 4), float64] */;
  %960 = reshape(%959, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), float64] */;
  %961 = @func_3325(%960) /* ty=(Tensor[(2, 10, 11), float64],) */;
  %962 = %961.0;
  %963 = cast(%962, dtype="bool") /* ty=Tensor[(2, 10, 11), bool] */;
  %964 = shape_of(%var_3561, dtype="int32") /* ty=Tensor[(2), int32] */;
  %965 = cast(%var_3561, dtype="bool") /* ty=Tensor[(55, 4), bool] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %967 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %968 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %969 = floor_divide(%955, %956) /* ty=Tensor[(12, 14, 16), float32] */;
  %970 = %957.0;
  %971 = %958.0;
  %972 = not_equal(%965, %966) /* ty=Tensor[(55, 4), bool] */;
  %973 = %967.0;
  %974 = %968.1;
  %975 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  (%969, %970, %971, %972, %973, %974, %975)
}

def @func_4465() -> (Tensor[(7, 11, 10), float32],) {
  %976 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  (%976,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1011() -> Tensor[(7, 11, 10), float32] {
  %3 = fn () -> Tensor[(7, 11, 10), float32] {
    %0 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %1 = %0.0;
    %2 = cast(%1, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
    cos(%2) /* ty=Tensor[(7, 11, 10), float32] */
  };
  %3() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_8061() -> Tensor[(7, 11, 10), float64] {
  %5 = fn () -> Tensor[(7, 11, 10), float64] {
    %4 = @func_7999() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %4.0
  };
  %5() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_3689() -> Tensor[(7, 11, 10), float64] {
  %6 = fn () -> Tensor[(7, 11, 10), float64] {
    @func_2113() /* ty=Tensor[(7, 11, 10), float64] */
  };
  %6() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_6031() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  @func_6029() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_2047() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %7 = @func_2015() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %8 = @func_1293() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %9 = %7.0;
  %10 = %8.0;
  (%9, %10)
}

def @func_2231(%var_2230: Tensor[(1365), float32]) -> (Tensor[(1, 3), int64], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
  %20 = fn (%var_2224: Tensor[(1365), float32]) -> (Tensor[(1, 3), int64], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
    %11 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
    %12 = %11.2;
    %13 = cast(%12, dtype="int64") /* ty=int64 */;
    %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 3), uint16] */, dtype="int64") /* ty=Tensor[(1, 3), int64] */;
    %15 = cast(%var_2224, dtype="float32") /* ty=Tensor[(1365), float32] */;
    %16 = reshape(%15, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float32] */;
    %17 = @func_384(%16) /* ty=(Tensor[(7, 13, 15), float32],) */;
    %18 = maximum(%13, %14) /* ty=Tensor[(1, 3), int64] */;
    %19 = %17.0;
    (%18, %19, %var_2224)
  };
  %20(%var_2230) /* ty=(Tensor[(1, 3), int64], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) */
}

def @func_4385() -> (Tensor[(7, 14, 8), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(4620), int32]) {
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 8), float64] */;
  %22 = @func_1694() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(4620), int32] */, dtype="int32") /* ty=Tensor[(4620), int32] */;
  %24 = reshape(%23, newshape=[308, 15]) /* ty=Tensor[(308, 15), int32] */;
  %25 = @func_4180(%24) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(308, ?), float64], Tensor[(7, 11, 10), float64], Tensor[(308, 15), bool]) */;
  %26 = log10(%21) /* ty=Tensor[(7, 14, 8), float64] */;
  %27 = %22.0;
  %28 = %25.1;
  (%26, %27, %28, meta[relay.Constant][2] /* ty=Tensor[(4620), int32] */)
}

def @func_5511() -> Tensor[(10, 11, 12), float32] {
  %30 = fn () -> Tensor[(10, 11, 12), float32] {
    %29 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 12), float32] */;
    erf(%29) /* ty=Tensor[(10, 11, 12), float32] */
  };
  %30() /* ty=Tensor[(10, 11, 12), float32] */
}

def @func_8110() -> (Tensor[(4, 12, 12), float32], Tensor[(4, 12, 12), float64], Tensor[(4, 12, 12), float32]) {
  %31 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 12), float32] */;
  %32 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 12, 12), float32] */, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
  %33 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 12), float32] */;
  %34 = atanh(%31) /* ty=Tensor[(4, 12, 12), float32] */;
  %35 = acosh(%32) /* ty=Tensor[(4, 12, 12), float64] */;
  %36 = sqrt(%33) /* ty=Tensor[(4, 12, 12), float32] */;
  (%34, %35, %36)
}

def @func_4969(%var_4967: Tensor[(16, 4, 2), uint8], %var_4968: Tensor[(16, 4, 2), uint8]) -> Tensor[(16, 4, 2), bool] {
  %41 = fn (%var_4954: Tensor[(16, 4, 2), uint8], %var_4955: Tensor[(16, 4, 2), uint8]) -> Tensor[(16, 4, 2), bool] {
    %37 = cast(%var_4955, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
    %38 = shape_of(%var_4954, dtype="int32") /* ty=Tensor[(3), int32] */;
    %39 = cast(%var_4954, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%39, %40) /* ty=Tensor[(16, 4, 2), bool] */
  };
  %41(%var_4967, %var_4968) /* ty=Tensor[(16, 4, 2), bool] */
}

def @func_55() -> Tensor[(7, 11, 10), float64] {
  %42 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %42.0
}

def @func_2113() -> Tensor[(7, 11, 10), float64] {
  %43 = @func_671() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) */;
  %43.0
}

def @func_4647() -> Tensor[(7, 11, 10), float32] {
  %45 = fn () -> Tensor[(7, 11, 10), float32] {
    %44 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
    %44.0
  };
  %45() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_5698() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %48 = fn () -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
    %46 = @func_3518() /* ty=Tensor[(7, 11, 10), float32] */;
    %47 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
    (%46, %47)
  };
  %48() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */
}

def @func_115() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */
}

def @func_6999() -> (Tensor[(7, 11, 10), float64],) {
  %51 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %49 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %50 = %49.0;
    (%50,)
  };
  %51() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_8328() -> Tensor[(7, 11, 10), float32] {
  %52 = @func_4915() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %52.0
}

def @func_1923(%var_1922: Tensor[(840), float64]) -> (Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) {
  %93 = fn (%var_1848: Tensor[(840), float64]) -> (Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) {
    %53 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
    %54 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
    %55 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
    %56 = reshape(%53, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
    %57 = reshape(%54, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
    %58 = reshape(%55, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
    %59 = @func_1653(%56, %57, %58) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) */;
    %60 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
    %61 = %60.3;
    %62 = cast(meta[relay.Constant][5] /* ty=Tensor[(35, 6), uint16] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
    %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(2), int32] */;
    %64 = cast(%61, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
    %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %66 = mod(%64, %65) /* ty=Tensor[(35, 6), float32] */;
    %67 = cast(%66, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
    %68 = rsqrt(%67) /* ty=Tensor[(35, 6), float64] */;
    %69 = cast(%66, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
    %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(2), int32] */;
    %71 = cast(%68, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
    %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %73 = greater_equal(%71, %72) /* ty=Tensor[(35, 6), bool] */;
    %74 = cast(%68, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
    %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(2), int32] */;
    %76 = cast(%73, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
    %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %78 = greater(%76, %77) /* ty=Tensor[(35, 6), bool] */;
    %79 = cast(meta[relay.Constant][6] /* ty=Tensor[(35, 6), bool] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
    %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(2), int32] */;
    %81 = cast(%78, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %83 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
    %84 = %59.0;
    %85 = cast(%84, dtype="float64") /* ty=Tensor[(7, 8, 15), float64] */;
    %86 = cast(%var_1848, dtype="float64") /* ty=Tensor[(840), float64] */;
    %87 = reshape(%83, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
    %88 = reshape(%85, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
    %89 = reshape(%86, newshape=[7, 8, 15]) /* ty=Tensor[(7, 8, 15), float64] */;
    %90 = @func_1653(%87, %88, %89) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) */;
    %91 = power(%81, %82) /* ty=Tensor[(35, 6), float32] */;
    %92 = %90.0;
    (%84, %var_1848, %91, %92)
  };
  %93(%var_1922) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) */
}

def @func_2115() -> Tensor[(7, 11, 10), float64] {
  @func_2113() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_1745() -> (Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) {
  %94 = @func_1255() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) */;
  %95 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
  %96 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %97 = %96.0;
  %98 = cast(%97, dtype="int8") /* ty=Tensor[(7, 11, 10), int8] */;
  %99 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%95, dtype="int8") /* ty=Tensor[(7, 11, 10), int8] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %102 = %94.2;
  %103 = bitwise_and(%100, %101) /* ty=Tensor[(7, 11, 10), int8] */;
  %104 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  (%102, %103, %104)
}

def @func_603() -> (Tensor[(7, 11, 10), float64],) {
  @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_4013() -> (Tensor[(7, 11, 10), float32],) {
  @func_4011() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_2382() -> (Tensor[(7, 11, 10), float64],) {
  @func_2380() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_4837(%var_4835: Tensor[(308), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float32]) {
  @func_4834(%var_4835) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float32]) */
}

def @func_4700() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  @func_4698() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_6561() -> (Tensor[(7, 11, 10), float64],) {
  %107 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %105 = @func_6224() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %106 = %105.0;
    (%106,)
  };
  %107() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_6582() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %112 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
    %108 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %109 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %110 = %108.0;
    %111 = %109.0;
    (%110, %111)
  };
  %112() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_4747() -> Tensor[(7, 11, 10), float32] {
  %113 = fn () -> Tensor[(7, 11, 10), float32] {
    @func_2766() /* ty=Tensor[(7, 11, 10), float32] */
  };
  %113() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_21() -> (Tensor[(7, 11, 10), float64],) {
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  %115 = sinh(%114) /* ty=Tensor[(7, 11, 10), float64] */;
  (%115,)
}

def @func_7384(%var_7371: Tensor[(3, 216), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(12, 9, 6), float32], Tensor[(3, 216), float32]) {
  %116 = @func_6029() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %117 = cast(%var_7371, dtype="float32") /* ty=Tensor[(3, 216), float32] */;
  %118 = reshape(%117, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %119 = %116.0;
  %120 = @func_403(%118) /* ty=Tensor[(12, 9, 6), float32] */;
  (%119, %120, %var_7371)
}

def @func_4489() -> Tensor[(7, 11, 10), float64] {
  %121 = @func_1293() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %121.0
}

def @func_911() -> (Tensor[(7, 11, 10), float32],) {
  @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_1784() -> Tensor[(7, 11, 10), float64] {
  @func_1782() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_622(%var_620: Tensor[(7, 11, 4), float64], %var_621: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) {
  %128 = fn (%var_611: Tensor[(7, 11, 4), float64], %var_612: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) {
    %122 = cast(%var_612, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
    %123 = shape_of(%var_611, dtype="int32") /* ty=Tensor[(3), int32] */;
    %124 = cast(%var_611, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
    %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %126 = floor_mod(%124, %125) /* ty=Tensor[(7, 11, 4), float64] */;
    %127 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
    (%126, %127)
  };
  %128(%var_620, %var_621) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_5007() -> (Tensor[(7, 11, 10), float32],) {
  %131 = fn () -> (Tensor[(7, 11, 10), float32],) {
    %129 = @func_4011() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %130 = %129.0;
    (%130,)
  };
  %131() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_5375(%var_5374: Tensor[(4, 1, 10), uint32]) -> (Tensor[(4, 10, 10), uint32], Tensor[(4, 3, 10), bool]) {
  %138 = fn (%var_5355: Tensor[(4, 1, 10), uint32]) -> (Tensor[(4, 10, 10), uint32], Tensor[(4, 3, 10), bool]) {
    %132 = cast(%var_5355, dtype="uint32") /* ty=Tensor[(4, 1, 10), uint32] */;
    %133 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 10, 10), uint32] */, dtype="uint32") /* ty=Tensor[(4, 10, 10), uint32] */;
    %134 = cast(%var_5355, dtype="bool") /* ty=Tensor[(4, 1, 10), bool] */;
    %135 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 3, 10), uint32] */, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
    %136 = logical_xor(%132, %133) /* ty=Tensor[(4, 10, 10), uint32] */;
    %137 = not_equal(%134, %135) /* ty=Tensor[(4, 3, 10), bool] */;
    (%136, %137)
  };
  %138(%var_5374) /* ty=(Tensor[(4, 10, 10), uint32], Tensor[(4, 3, 10), bool]) */
}

def @func_7102(%var_7100: Tensor[(13, 4, 14), uint64], %var_7101: Tensor[(13, 4, 14), uint64]) -> (Tensor[(13, 4, 14), bool], Tensor[(13, 4, 14), float64], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64]) {
  @func_7098(%var_7100, %var_7101) /* ty=(Tensor[(13, 4, 14), bool], Tensor[(13, 4, 14), float64], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64]) */
}

def @func_6514(%var_6467: Tensor[(308), float64]) -> (Tensor[(308), bool], Tensor[(7, 11, 10), float32], Tensor[(308), float32]) {
  %139 = @func_6419() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308), float64]) */;
  %140 = %139.2;
  %141 = cast(%var_6467, dtype="bool") /* ty=Tensor[(308), bool] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(1), int32] */;
  %143 = cast(%140, dtype="bool") /* ty=Tensor[(308), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?), bool] */;
  %145 = cast(%var_6467, dtype="float32") /* ty=Tensor[(308), float32] */;
  %146 = not_equal(%143, %144) /* ty=Tensor[(308), bool] */;
  %147 = @func_4646() /* ty=Tensor[(7, 11, 10), float32] */;
  %148 = sin(%145) /* ty=Tensor[(308), float32] */;
  (%146, %147, %148)
}

def @func_1747() -> (Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) {
  @func_1745() /* ty=(Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) */
}

def @func_3728() -> Tensor[(7, 11, 10), float64] {
  @func_3726() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_5133() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(104, 1), int8], Tensor[(7, 11, 10), float64]) {
  %149 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %150 = @func_1989() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %151 = cast(meta[relay.Constant][10] /* ty=Tensor[(104, 1), int8] */, dtype="int8") /* ty=Tensor[(104, 1), int8] */;
  %152 = reshape(%151, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %153 = @func_706(%152) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %154 = %149.0;
  %155 = %150.0;
  %156 = %153.0;
  %157 = @func_4489() /* ty=Tensor[(7, 11, 10), float64] */;
  (%154, %155, %156, meta[relay.Constant][10] /* ty=Tensor[(104, 1), int8] */, %157)
}

def @func_5579(%var_5577: Tensor[(1, 1365), float32], %var_5578: Tensor[(2, 1365), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(2, 1365), bool]) {
  %173 = fn (%var_5547: Tensor[(1, 1365), float32], %var_5567: Tensor[(2, 1365), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(2, 1365), bool]) {
    %158 = @func_4385() /* ty=(Tensor[(7, 14, 8), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(4620), int32]) */;
    %159 = cast(%var_5547, dtype="float32") /* ty=Tensor[(1, 1365), float32] */;
    %160 = cast(meta[relay.Constant][11] /* ty=Tensor[(210, 1), uint16] */, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
    %161 = reshape(%159, newshape=[455, 3]) /* ty=Tensor[(455, 3), float32] */;
    %162 = reshape(%160, newshape=[35, 6]) /* ty=Tensor[(35, 6), uint16] */;
    %163 = @func_4605(%161, %162) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) */;
    %164 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
    %165 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %166 = cast(%var_5547, dtype="bool") /* ty=Tensor[(1, 1365), bool] */;
    %167 = cast(%var_5567, dtype="bool") /* ty=Tensor[(2, 1365), bool] */;
    %168 = %158.2;
    %169 = %163.0;
    %170 = %164.2;
    %171 = %165.0;
    %172 = logical_and(%166, %167) /* ty=Tensor[(2, 1365), bool] */;
    (%168, %169, meta[relay.Constant][11] /* ty=Tensor[(210, 1), uint16] */, %170, %171, %172)
  };
  %173(%var_5577, %var_5578) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(2, 1365), bool]) */
}

def @func_3655() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  %174 = @func_3146() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %175 = %174.0;
  %176 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
  (%175, %176)
}

def @func_7098(%var_7043: Tensor[(13, 4, 14), uint64], %var_7044: Tensor[(13, 4, 14), uint64]) -> (Tensor[(13, 4, 14), bool], Tensor[(13, 4, 14), float64], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64]) {
  %177 = cast(%var_7043, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %178 = shape_of(%var_7044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%var_7044, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %181 = cast(%var_7044, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %182 = shape_of(%var_7043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%var_7043, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = not_equal(%183, %184) /* ty=Tensor[(13, 4, 14), bool] */;
  %186 = cast(%185, dtype="float64") /* ty=Tensor[(13, 4, 14), float64] */;
  %187 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %188 = greater(%179, %180) /* ty=Tensor[(13, 4, 14), bool] */;
  %189 = asin(%186) /* ty=Tensor[(13, 4, 14), float64] */;
  %190 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  %191 = %187.0;
  (%188, %189, %190, %191)
}

def @func_6420() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308), float64]) {
  %200 = fn () -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308), float64]) {
    %192 = @func_1745() /* ty=(Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) */;
    %193 = %192.2;
    %194 = cast(%193, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
    %195 = cast(meta[relay.Constant][12] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %196 = reshape(%194, newshape=[7, 11, 10]) /* ty=Tensor[(7, 11, 10), float64] */;
    %197 = reshape(%195, newshape=[7, 44]) /* ty=Tensor[(7, 44), float64] */;
    %198 = @func_2931(%196, %197) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) */;
    %199 = %198.0;
    (%193, %199, meta[relay.Constant][12] /* ty=Tensor[(308), float64] */)
  };
  %200() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308), float64]) */
}

def @func_5739() -> Tensor[(7, 11, 10), float32] {
  %201 = @func_5006() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %201.0
}

def @func_7607() -> Tensor[(7, 11, 10), float32] {
  %203 = fn () -> Tensor[(7, 11, 10), float32] {
    %202 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %202.0
  };
  %203() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_368() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_3226(%var_3224: Tensor[(26), float32], %var_3225: Tensor[(26), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(6, 2, 13), float32], Tensor[(26), float32], Tensor[(7, 11, 10), float32]) {
  %217 = fn (%var_3158: Tensor[(26), float32], %var_3164: Tensor[(26), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(6, 2, 13), float32], Tensor[(26), float32], Tensor[(7, 11, 10), float32]) {
    %204 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %205 = cast(%var_3158, dtype="float32") /* ty=Tensor[(26), float32] */;
    %206 = reshape(%205, newshape=[1, 2, 13]) /* ty=Tensor[(1, 2, 13), float32] */;
    %207 = @func_2162(%206) /* ty=(Tensor[(6, 2, 13), float32], Tensor[(6, 2, 13), float32]) */;
    %208 = cast(%var_3164, dtype="float32") /* ty=Tensor[(26), float32] */;
    %209 = shape_of(%var_3158, dtype="int32") /* ty=Tensor[(1), int32] */;
    %210 = cast(%var_3158, dtype="float32") /* ty=Tensor[(26), float32] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?), float32] */;
    %212 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %213 = %204.0;
    %214 = %207.0;
    %215 = floor_mod(%210, %211) /* ty=Tensor[(26), float32] */;
    %216 = %212.0;
    (%213, %214, %215, %216)
  };
  %217(%var_3224, %var_3225) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(6, 2, 13), float32], Tensor[(26), float32], Tensor[(7, 11, 10), float32]) */
}

def @func_7671() -> Tensor[(7, 11, 10), float64] {
  %219 = fn () -> Tensor[(7, 11, 10), float64] {
    %218 = @func_4068() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %218.0
  };
  %219() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_8311() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  @func_8309() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */
}

def @func_7950(%var_7938: Tensor[(12, 13, 15), float32]) -> (Tensor[(12, 13, 15), int64],) {
  %220 = cast(%var_7938, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %221 = acosh(%220) /* ty=Tensor[(12, 13, 15), float32] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %223 = cosh(%222) /* ty=Tensor[(12, 13, 15), float32] */;
  %224 = cast(%221, dtype="int64") /* ty=Tensor[(12, 13, 15), int64] */;
  %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%223, dtype="int64") /* ty=Tensor[(12, 13, 15), int64] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %228 = multiply(%226, %227) /* ty=Tensor[(12, 13, 15), int64] */;
  (%228,)
}

def @func_113() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  %229 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %230 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %231 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %233 = %229.0;
  %234 = %230.0;
  %235 = log(%232) /* ty=Tensor[(7, 11, 10), float32] */;
  (%233, %234, %235)
}

def @func_1068() -> Tensor[(7, 11, 10), bool] {
  @func_1066() /* ty=Tensor[(7, 11, 10), bool] */
}

def @func_171() -> Tensor[(7, 11, 10), float32] {
  %236 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %237 = %236.2;
  %238 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %240 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%237, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%241, %242) /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_7811() -> Tensor[(7, 11, 10), float32] {
  @func_7809() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_1046(%var_1044: uint16, %var_1045: Tensor[(2, 15, 7), uint16]) -> (Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) {
  @func_1042(%var_1044, %var_1045) /* ty=(Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) */
}

def @func_4387() -> (Tensor[(7, 14, 8), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(4620), int32]) {
  @func_4385() /* ty=(Tensor[(7, 14, 8), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(4620), int32]) */
}

def @func_2279(%var_2257: Tensor[(308), float64]) -> (Tensor[(7, 11, 10), int8], Tensor[(7, 11, 4), bool]) {
  %243 = @func_1745() /* ty=(Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) */;
  %244 = cast(%var_2257, dtype="float64") /* ty=Tensor[(308), float64] */;
  %245 = cast(%var_2257, dtype="float64") /* ty=Tensor[(308), float64] */;
  %246 = reshape(%244, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %247 = reshape(%245, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %248 = @func_619(%246, %247) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %249 = %248.0;
  %250 = cast(%var_2257, dtype="bool") /* ty=Tensor[(308), bool] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="bool") /* ty=Tensor[(7, 11, 4), bool] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %254 = %243.1;
  %255 = not_equal(%252, %253) /* ty=Tensor[(7, 11, 4), bool] */;
  (%254, %255)
}

def @func_909() -> (Tensor[(7, 11, 10), float32],) {
  %256 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  (%256,)
}

def @func_3148() -> (Tensor[(7, 11, 10), float64],) {
  @func_3146() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_403(%var_395: Tensor[(12, 9, 6), float32]) -> Tensor[(12, 9, 6), float32] {
  %257 = cast(%var_395, dtype="float32") /* ty=Tensor[(12, 9, 6), float32] */;
  acos(%257) /* ty=Tensor[(12, 9, 6), float32] */
}

def @func_567() -> (Tensor[(7, 11, 10), float64],) {
  %258 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %259 = %258.0;
  (%259,)
}

def @func_2016() -> (Tensor[(7, 11, 10), float32],) {
  %261 = fn () -> (Tensor[(7, 11, 10), float32],) {
    %260 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
    (%260,)
  };
  %261() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_3146() -> (Tensor[(7, 11, 10), float64],) {
  %262 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %263 = %262.2;
  (%263,)
}

def @func_4698() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %264 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %265 = %264.1;
  %266 = @func_3688() /* ty=Tensor[(7, 11, 10), float64] */;
  (%265, %266)
}

def @func_6753() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  @func_6751() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */
}

def @func_4011() -> (Tensor[(7, 11, 10), float32],) {
  %267 = @func_3986() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %268 = %267.0;
  (%268,)
}

def @func_493(%var_491: Tensor[(2, 13, 4), int8], %var_492: Tensor[(2, 13, 4), int8]) -> (Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) {
  %276 = fn (%var_478: Tensor[(2, 13, 4), int8], %var_479: Tensor[(2, 13, 4), int8]) -> (Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) {
    %269 = cast(%var_479, dtype="int8") /* ty=Tensor[(2, 13, 4), int8] */;
    %270 = shape_of(%var_478, dtype="int32") /* ty=Tensor[(3), int32] */;
    %271 = cast(%var_478, dtype="int8") /* ty=Tensor[(2, 13, 4), int8] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %273 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
    %274 = minimum(%271, %272) /* ty=Tensor[(2, 13, 4), int8] */;
    %275 = %273.2;
    (%274, %275)
  };
  %276(%var_491, %var_492) /* ty=(Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) */
}

def @func_1989() -> (Tensor[(7, 11, 10), float64],) {
  %277 = @func_1293() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %278 = %277.0;
  (%278,)
}

def @func_3776() -> (Tensor[(104), int8],) {
  %279 = @func_1573() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) */;
  %280 = %279.2;
  (%280,)
}

def @func_1657(%var_1654: Tensor[(7, 8, 15), float64], %var_1655: Tensor[(7, 8, 15), float64], %var_1656: Tensor[(7, 8, 15), float64]) -> (Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) {
  %291 = fn (%var_1635: Tensor[(7, 8, 15), float64], %var_1636: Tensor[(7, 8, 15), float64], %var_1640: Tensor[(7, 8, 15), float64]) -> (Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) {
    %281 = cast(%var_1636, dtype="float64") /* ty=Tensor[(7, 8, 15), float64] */;
    %282 = shape_of(%var_1635, dtype="int32") /* ty=Tensor[(3), int32] */;
    %283 = cast(%var_1635, dtype="float64") /* ty=Tensor[(7, 8, 15), float64] */;
    %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %285 = cast(%var_1640, dtype="uint8") /* ty=Tensor[(7, 8, 15), uint8] */;
    %286 = shape_of(%var_1636, dtype="int32") /* ty=Tensor[(3), int32] */;
    %287 = cast(%var_1636, dtype="uint8") /* ty=Tensor[(7, 8, 15), uint8] */;
    %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %289 = mod(%283, %284) /* ty=Tensor[(7, 8, 15), float64] */;
    %290 = bitwise_xor(%287, %288) /* ty=Tensor[(7, 8, 15), uint8] */;
    (%289, %290)
  };
  %291(%var_1654, %var_1655, %var_1656) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(7, 8, 15), uint8]) */
}

def @func_2540() -> Tensor[(7, 11, 10), bool] {
  %292 = fn () -> Tensor[(7, 11, 10), bool] {
    @func_1066() /* ty=Tensor[(7, 11, 10), bool] */
  };
  %292() /* ty=Tensor[(7, 11, 10), bool] */
}

def @func_387(%var_385: Tensor[(7, 13, 15), float32]) -> (Tensor[(7, 13, 15), float32],) {
  @func_384(%var_385) /* ty=(Tensor[(7, 13, 15), float32],) */
}

def @func_5339(%var_5336: Tensor[(35, 6), float64], %var_5337: Tensor[(96, 28), float32], %var_5338: Tensor[(220, 1), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) {
  @func_5334(%var_5336, %var_5337, %var_5338) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) */
}

def @func_6377() -> (Tensor[(11, 13, 10), float64],) {
  @func_6375() /* ty=(Tensor[(11, 13, 10), float64],) */
}

def @func_7809() -> Tensor[(7, 11, 10), float32] {
  %293 = @func_4011() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %293.0
}

def @func_2380() -> (Tensor[(7, 11, 10), float64],) {
  %294 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %295 = %294.0;
  (%295,)
}

def @func_8330() -> Tensor[(7, 11, 10), float32] {
  @func_8328() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_1711() -> (Tensor[(7, 11, 10), float64],) {
  %298 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %296 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
    %297 = %296.1;
    (%297,)
  };
  %298() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_3657() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  @func_3655() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */
}

def @func_5135() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(104, 1), int8], Tensor[(7, 11, 10), float64]) {
  @func_5133() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(104, 1), int8], Tensor[(7, 11, 10), float64]) */
}

def @func_384(%var_379: Tensor[(7, 13, 15), float32]) -> (Tensor[(7, 13, 15), float32],) {
  %299 = cast(%var_379, dtype="float32") /* ty=Tensor[(7, 13, 15), float32] */;
  %300 = cos(%299) /* ty=Tensor[(7, 13, 15), float32] */;
  (%300,)
}

def @func_4491() -> Tensor[(7, 11, 10), float64] {
  @func_4489() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_4880(%var_4862: Tensor[(12, 16, 16), float32], %var_4871: Tensor[(12, 16, 16), float32]) -> (Tensor[(12, 16, 16), float32], Tensor[(12, 16, 16), float32]) {
  %301 = cast(%var_4862, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %302 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(12, 16, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %305 = cast(%var_4871, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %306 = shape_of(%var_4862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%var_4862, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %309 = power(%303, %304) /* ty=Tensor[(12, 16, 16), float32] */;
  %310 = subtract(%307, %308) /* ty=Tensor[(12, 16, 16), float32] */;
  (%309, %310)
}

def @func_3288() -> (Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %318 = fn () -> (Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
    %311 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
    %312 = @func_2663() /* ty=(Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) */;
    %313 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %314 = %311.3;
    %315 = %312.1;
    %316 = %313.0;
    %317 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
    (%314, %315, %316, %317)
  };
  %318() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_1042(%var_1032: uint16, %var_1033: Tensor[(2, 15, 7), uint16]) -> (Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) {
  %319 = cast(%var_1032, dtype="uint16") /* ty=uint16 */;
  %320 = cast(%var_1033, dtype="uint16") /* ty=Tensor[(2, 15, 7), uint16] */;
  %321 = bitwise_or(%319, %320) /* ty=Tensor[(2, 15, 7), uint16] */;
  %322 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  (%321, %322)
}

def @func_1933() -> Tensor[(7, 11, 10), float64] {
  %324 = fn () -> Tensor[(7, 11, 10), float64] {
    %323 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %323.2
  };
  %324() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_5054() -> (Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16]) {
  %328 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16]) {
    %325 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
    %326 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
    %327 = %325.3;
    (%326, %327)
  };
  %328() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16]) */
}

def @func_4532(%var_4531: Tensor[(12, 6, 5), uint16]) -> (Tensor[(12, 6, 5), uint16], Tensor[(7, 11, 10), float64]) {
  %336 = fn (%var_4501: Tensor[(12, 6, 5), uint16]) -> (Tensor[(12, 6, 5), uint16], Tensor[(7, 11, 10), float64]) {
    %329 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 6, 5), uint16] */, dtype="uint16") /* ty=Tensor[(12, 6, 5), uint16] */;
    %330 = shape_of(%var_4501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(%var_4501, dtype="uint16") /* ty=Tensor[(12, 6, 5), uint16] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %333 = @func_671() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) */;
    %334 = bitwise_or(%331, %332) /* ty=Tensor[(12, 6, 5), uint16] */;
    %335 = %333.0;
    (%334, %335)
  };
  %336(%var_4531) /* ty=(Tensor[(12, 6, 5), uint16], Tensor[(7, 11, 10), float64]) */
}

def @func_672() -> (Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) {
  %342 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) {
    %337 = cast(meta[relay.Constant][15] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %338 = reshape(%337, newshape=[11, 4, 3]) /* ty=Tensor[(11, 4, 3), float32] */;
    %339 = @func_214(%338) /* ty=(Tensor[(11, 4, 3), float32],) */;
    %340 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
    %341 = %339.0;
    (%340, %341, meta[relay.Constant][15] /* ty=Tensor[(132), float32] */)
  };
  %342() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(11, 4, 3), float32], Tensor[(132), float32]) */
}

def @func_366() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %343 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %344 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %345 = cast(%344, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %346 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%343, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %349 = equal(%347, %348) /* ty=Tensor[(7, 11, 10), bool] */;
  %350 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  %351 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
  (%349, %350, %351)
}

def @func_5607() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %352 = @func_4011() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %353 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %354 = %352.0;
  %355 = %353.0;
  (%354, %355)
}

def @func_5609() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  @func_5607() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */
}

def @func_6935(%var_6933: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), float32]) {
  @func_6932(%var_6933) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), float32]) */
}

def @func_7634() -> (Tensor[(7, 11, 10), float64],) {
  @func_7632() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_4858() -> Tensor[(7, 11, 10), float32] {
  %356 = fn () -> Tensor[(7, 11, 10), float32] {
    @func_1349() /* ty=Tensor[(7, 11, 10), float32] */
  };
  %356() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_5794(%var_5792: Tensor[(5, 11, 13), float32]) -> (Tensor[(5, 11, 13), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
  @func_5791(%var_5792) /* ty=(Tensor[(5, 11, 13), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) */
}

def @func_6029() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %357 = @func_3308() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %358 = @func_1989() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %359 = %357.0;
  %360 = %358.0;
  %361 = @func_3726() /* ty=Tensor[(7, 11, 10), float64] */;
  (%359, %360, %361)
}

def @func_7354(%var_7353: uint16) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), float64], Tensor[(2688), float32], Tensor[(220), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(7, 11, 10), float64], Tensor[(432), float64]) {
  %389 = fn (%var_7326: uint16) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), float64], Tensor[(2688), float32], Tensor[(220), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(7, 11, 10), float64], Tensor[(432), float64]) {
    %362 = @func_6132() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %363 = @func_4698() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %364 = cast(meta[relay.Constant][16] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %365 = cast(meta[relay.Constant][17] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %366 = cast(meta[relay.Constant][18] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
    %367 = reshape(%364, newshape=[35, 6]) /* ty=Tensor[(35, 6), float64] */;
    %368 = reshape(%365, newshape=[96, 28]) /* ty=Tensor[(96, 28), float32] */;
    %369 = reshape(%366, newshape=[220, 1]) /* ty=Tensor[(220, 1), float64] */;
    %370 = @func_5334(%367, %368, %369) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) */;
    %371 = @func_5053() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16]) */;
    %372 = cast(%var_7326, dtype="uint16") /* ty=uint16 */;
    %373 = cast(meta[relay.Constant][16] /* ty=Tensor[(210, 1), float64] */, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
    %374 = reshape(%372, newshape=[]) /* ty=uint16 */;
    %375 = reshape(%373, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint16] */;
    %376 = @func_1042(%374, %375) /* ty=(Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) */;
    %377 = cast(meta[relay.Constant][19] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %378 = cast(meta[relay.Constant][19] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %379 = reshape(%377, newshape=[16, 9, 3]) /* ty=Tensor[(16, 9, 3), float64] */;
    %380 = reshape(%378, newshape=[16, 9, 3]) /* ty=Tensor[(16, 9, 3), float64] */;
    %381 = @func_2618(%379, %380) /* ty=(Tensor[(16, 9, 3), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(16, 9, 3), bool]) */;
    %382 = %362.1;
    %383 = %363.1;
    %384 = @func_4746() /* ty=Tensor[(7, 11, 10), float32] */;
    %385 = %370.6;
    %386 = %371.0;
    %387 = %376.1;
    %388 = %381.2;
    (%382, %383, %384, %385, meta[relay.Constant][16] /* ty=Tensor[(210, 1), float64] */, meta[relay.Constant][17] /* ty=Tensor[(2688), float32] */, meta[relay.Constant][18] /* ty=Tensor[(220), float64] */, %386, %387, %var_7326, %388, meta[relay.Constant][19] /* ty=Tensor[(432), float64] */)
  };
  %389(%var_7353) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(210, 1), float64], Tensor[(2688), float32], Tensor[(220), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(7, 11, 10), float64], Tensor[(432), float64]) */
}

def @func_4834(%var_4817: Tensor[(308), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float32]) {
  %390 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %391 = cast(%var_4817, dtype="float64") /* ty=Tensor[(308), float64] */;
  %392 = reshape(%391, newshape=[308, 1]) /* ty=Tensor[(308, 1), float64] */;
  %393 = @func_2403(%392) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) */;
  %394 = @func_4465() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %395 = @func_3915() /* ty=Tensor[(7, 11, 10), float64] */;
  %396 = %390.0;
  %397 = %393.0;
  %398 = %394.0;
  (%395, %396, %397, %var_4817, %398)
}

def @func_4325() -> Tensor[(7, 11, 10), float64] {
  @func_4323() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_3987() -> (Tensor[(7, 11, 10), float32],) {
  %401 = fn () -> (Tensor[(7, 11, 10), float32],) {
    %399 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
    %400 = %399.1;
    (%400,)
  };
  %401() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_3449(%var_3448: Tensor[(1365), float32]) -> (Tensor[(7, 11, 10), bool], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
  %408 = fn (%var_3437: Tensor[(1365), float32]) -> (Tensor[(7, 11, 10), bool], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
    %402 = @func_2834() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
    %403 = cast(%var_3437, dtype="float32") /* ty=Tensor[(1365), float32] */;
    %404 = reshape(%403, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float32] */;
    %405 = @func_384(%404) /* ty=(Tensor[(7, 13, 15), float32],) */;
    %406 = %402.0;
    %407 = %405.0;
    (%406, %407, %var_3437)
  };
  %408(%var_3448) /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) */
}

def @func_3519() -> Tensor[(7, 11, 10), float32] {
  %410 = fn () -> Tensor[(7, 11, 10), float32] {
    %409 = @func_3308() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %409.0
  };
  %410() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_5880() -> Tensor[(7, 11, 10), float32] {
  %412 = fn () -> Tensor[(7, 11, 10), float32] {
    %411 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
    %411.0
  };
  %412() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_3974(%var_3968: Tensor[(4, 15, 15), float64], %var_3969: Tensor[(4, 15, 15), float64]) -> Tensor[(4, 15, 15), float64] {
  %413 = cast(%var_3969, dtype="float64") /* ty=Tensor[(4, 15, 15), float64] */;
  %414 = shape_of(%var_3968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_3968, dtype="float64") /* ty=Tensor[(4, 15, 15), float64] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%415, %416) /* ty=Tensor[(4, 15, 15), float64] */
}

def @func_4069() -> (Tensor[(7, 11, 10), float64],) {
  %418 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %417 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
    (%417,)
  };
  %418() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_897(%var_850: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %419 = cast(meta[relay.Constant][20] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %420 = reshape(%419, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %421 = cast(%var_850, dtype="int8") /* ty=Tensor[(104), int8] */;
  %422 = reshape(%421, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %423 = @func_706(%422) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %424 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %425 = cast(meta[relay.Constant][21] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %426 = cast(meta[relay.Constant][21] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %427 = reshape(%425, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %428 = reshape(%426, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %429 = @func_619(%427, %428) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %430 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %431 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %432 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  %433 = @func_403(%420) /* ty=Tensor[(12, 9, 6), float32] */;
  %434 = %423.2;
  %435 = %424.0;
  %436 = %429.0;
  %437 = %430.0;
  %438 = %431.0;
  (%432, %433, meta[relay.Constant][20] /* ty=Tensor[(162, 4), float32] */, %434, %var_850, %435, %436, meta[relay.Constant][21] /* ty=Tensor[(308), float64] */, %437, %438)
}

def @func_2767() -> Tensor[(7, 11, 10), float32] {
  %441 = fn () -> Tensor[(7, 11, 10), float32] {
    %439 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
    %440 = cast(%439, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
    tan(%440) /* ty=Tensor[(7, 11, 10), float32] */
  };
  %441() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_6868(%var_6866: Tensor[(5, 2, 1), float32]) -> (Tensor[(5, 2, ?), float32], Tensor[(7, 11, 10), bool]) {
  @func_6865(%var_6866) /* ty=(Tensor[(5, 2, ?), float32], Tensor[(7, 11, 10), bool]) */
}

def @func_2991() -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), float64], Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32]) {
  %450 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), float64], Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32]) {
    %442 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %443 = @func_2663() /* ty=(Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) */;
    %444 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
    %445 = @func_2015() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %446 = %442.0;
    %447 = %443.0;
    %448 = %444.3;
    %449 = %445.0;
    (%446, %447, %448, %449)
  };
  %450() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), float64], Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32]) */
}

def @func_4356() -> (Tensor[(7, 11, 10), bool],) {
  %451 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  (%451,)
}

def @func_2406(%var_2404: Tensor[(308, 1), float64]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) {
  @func_2403(%var_2404) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) */
}

def @func_23() -> (Tensor[(7, 11, 10), float64],) {
  @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_2836() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  @func_2834() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */
}

def @func_6133() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %458 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
    %452 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %453 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %454 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
    %455 = @func_2113() /* ty=Tensor[(7, 11, 10), float64] */;
    %456 = %452.0;
    %457 = %453.0;
    (%454, %455, %456, %457)
  };
  %458() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_7427(%var_7425: bool, %var_7426: Tensor[(1, 2), bool]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), int8], bool, Tensor[(1, 2), bool]) {
  @func_7423(%var_7425, %var_7426) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), int8], bool, Tensor[(1, 2), bool]) */
}

def @func_7552() -> Tensor[(7, 11, 10), float64] {
  @func_7550() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_2164(%var_2163: Tensor[(1, 2, 13), float32]) -> (Tensor[(6, 2, 13), float32], Tensor[(6, 2, 13), float32]) {
  %464 = fn (%var_2131: Tensor[(1, 2, 13), float32]) -> (Tensor[(6, 2, 13), float32], Tensor[(6, 2, 13), float32]) {
    %459 = cast(%var_2131, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
    %460 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 13), float32] */;
    %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 13), float32] */;
    %462 = mod(%459, %460) /* ty=Tensor[(6, 2, 13), float32] */;
    %463 = exp(%461) /* ty=Tensor[(6, 2, 13), float32] */;
    (%462, %463)
  };
  %464(%var_2163) /* ty=(Tensor[(6, 2, 13), float32], Tensor[(6, 2, 13), float32]) */
}

def @func_1573() -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) {
  %465 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %466 = cast(meta[relay.Constant][23] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %467 = reshape(%466, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %468 = @func_706(%467) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %469 = %465.0;
  %470 = %468.1;
  (%469, %470, meta[relay.Constant][23] /* ty=Tensor[(104), int8] */)
}

def @func_57() -> Tensor[(7, 11, 10), float64] {
  @func_55() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_3310() -> (Tensor[(7, 11, 10), float32],) {
  @func_3308() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_7632() -> (Tensor[(7, 11, 10), float64],) {
  %471 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
  %472 = %471.0;
  (%472,)
}

def @func_1294() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %476 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
    %473 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %474 = %473.0;
    %475 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
    (%474, %475)
  };
  %476() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_2358(%var_2356: Tensor[(7, 1, 7), float32], %var_2357: Tensor[(7, 11, 7), float32]) -> (Tensor[(7, 11, 7), float32], Tensor[(7, 11, 10), float32]) {
  %482 = fn (%var_2344: Tensor[(7, 1, 7), float32], %var_2345: Tensor[(7, 11, 7), float32]) -> (Tensor[(7, 11, 7), float32], Tensor[(7, 11, 10), float32]) {
    %477 = cast(%var_2344, dtype="float32") /* ty=Tensor[(7, 1, 7), float32] */;
    %478 = cast(%var_2345, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
    %479 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %480 = floor_mod(%477, %478) /* ty=Tensor[(7, 11, 7), float32] */;
    %481 = %479.0;
    (%480, %481)
  };
  %482(%var_2356, %var_2357) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(7, 11, 10), float32]) */
}

def @func_2522() -> (Tensor[(7, 11, 10), float64],) {
  %485 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %483 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %484 = %483.0;
    (%484,)
  };
  %485() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_536() -> Tensor[(7, 11, 10), float64] {
  %486 = fn () -> Tensor[(7, 11, 10), float64] {
    @func_271() /* ty=Tensor[(7, 11, 10), float64] */
  };
  %486() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_1782() -> Tensor[(7, 11, 10), float64] {
  %487 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %487.1
}

def @func_173() -> Tensor[(7, 11, 10), float32] {
  @func_171() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_1575() -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) {
  @func_1573() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) */
}

def @func_3044() -> (Tensor[(7, 11, 10), float64],) {
  %490 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %488 = @func_1989() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %489 = %488.0;
    (%489,)
  };
  %490() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_3391(%var_3389: Tensor[(12, 9, 6), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) {
  @func_3388(%var_3389) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) */
}

def @func_5741() -> Tensor[(7, 11, 10), float32] {
  @func_5739() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_601() -> (Tensor[(7, 11, 10), float64],) {
  %491 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %492 = %491.1;
  (%492,)
}

def @func_786(%var_785: uint32) -> (Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) {
  %502 = fn (%var_738: uint32) -> (Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) {
    %493 = cast(%var_738, dtype="uint32") /* ty=uint32 */;
    %494 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 13, 15), uint32] */, dtype="uint32") /* ty=Tensor[(11, 13, 15), uint32] */;
    %495 = bitwise_xor(%493, %494) /* ty=Tensor[(11, 13, 15), uint32] */;
    %496 = cast(%495, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
    %497 = cast(meta[relay.Constant][25] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
    %498 = reshape(%497, newshape=[104]) /* ty=Tensor[(104), int8] */;
    %499 = @func_706(%498) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
    %500 = log10(%496) /* ty=Tensor[(11, 13, 15), float64] */;
    %501 = %499.2;
    (%500, %501, meta[relay.Constant][25] /* ty=Tensor[(104), int8] */)
  };
  %502(%var_785) /* ty=(Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) */
}

def @func_6375() -> (Tensor[(11, 13, 10), float64],) {
  %503 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 10), float64] */;
  %504 = rsqrt(%503) /* ty=Tensor[(11, 13, 10), float64] */;
  (%504,)
}

def @func_7735() -> (Tensor[(7, 11, 10), float32],) {
  %506 = fn () -> (Tensor[(7, 11, 10), float32],) {
    %505 = @func_4857() /* ty=Tensor[(7, 11, 10), float32] */;
    (%505,)
  };
  %506() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_7711(%var_7702: Tensor[(9, 15, 3), float64], %var_7703: Tensor[(9, 15, 3), float64]) -> (Tensor[(9, 15, 3), float64],) {
  %507 = cast(%var_7703, dtype="float64") /* ty=Tensor[(9, 15, 3), float64] */;
  %508 = shape_of(%var_7702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%var_7702, dtype="float64") /* ty=Tensor[(9, 15, 3), float64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %511 = divide(%509, %510) /* ty=Tensor[(9, 15, 3), float64] */;
  (%511,)
}

def @func_1695() -> (Tensor[(7, 11, 10), float64],) {
  %514 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %512 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %513 = %512.0;
    (%513,)
  };
  %514() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_900(%var_898: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  @func_897(%var_898) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_7871(%var_7868: Tensor[(7, 14, 13), uint8], %var_7869: Tensor[(7, 14, 13), uint8], %var_7870: Tensor[(2688), float32]) -> (Tensor[(7, 14, 13), uint8], Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(2688), float32]) {
  %529 = fn (%var_7831: Tensor[(7, 14, 13), uint8], %var_7832: Tensor[(7, 14, 13), uint8], %var_7860: Tensor[(2688), float32]) -> (Tensor[(7, 14, 13), uint8], Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(2688), float32]) {
    %515 = cast(%var_7832, dtype="uint8") /* ty=Tensor[(7, 14, 13), uint8] */;
    %516 = shape_of(%var_7831, dtype="int32") /* ty=Tensor[(3), int32] */;
    %517 = cast(%var_7831, dtype="uint8") /* ty=Tensor[(7, 14, 13), uint8] */;
    %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %519 = cast(meta[relay.Constant][27] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %520 = reshape(%519, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
    %521 = @func_3388(%520) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) */;
    %522 = cast(%var_7860, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %523 = reshape(%522, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
    %524 = @func_5402(%523) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(55, 4), bool], Tensor[(2688), float32], Tensor[(220), float64]) */;
    %525 = multiply(%517, %518) /* ty=Tensor[(7, 14, 13), uint8] */;
    %526 = %521.0;
    %527 = @func_7670() /* ty=Tensor[(7, 11, 10), float64] */;
    %528 = %524.0;
    (%525, %526, meta[relay.Constant][27] /* ty=Tensor[(648), float32] */, %527, %528, %var_7860)
  };
  %529(%var_7868, %var_7869, %var_7870) /* ty=(Tensor[(7, 14, 13), uint8], Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(2688), float32]) */
}

def @func_3916() -> Tensor[(7, 11, 10), float64] {
  %530 = fn () -> Tensor[(7, 11, 10), float64] {
    @func_3069() /* ty=Tensor[(7, 11, 10), float64] */
  };
  %530() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_6517(%var_6515: Tensor[(308), float64]) -> (Tensor[(308), bool], Tensor[(7, 11, 10), float32], Tensor[(308), float32]) {
  @func_6514(%var_6515) /* ty=(Tensor[(308), bool], Tensor[(7, 11, 10), float32], Tensor[(308), float32]) */
}

def @func_3071() -> Tensor[(7, 11, 10), float64] {
  @func_3069() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_7953(%var_7951: Tensor[(12, 13, 15), float32]) -> (Tensor[(12, 13, 15), int64],) {
  @func_7950(%var_7951) /* ty=(Tensor[(12, 13, 15), int64],) */
}

def @func_8025() -> Tensor[(7, 11, 10), float32] {
  %532 = fn () -> Tensor[(7, 11, 10), float32] {
    %531 = @func_3308() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %531.0
  };
  %532() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_8037() -> Tensor[(7, 11, 10), float32] {
  %533 = fn () -> Tensor[(7, 11, 10), float32] {
    @func_4857() /* ty=Tensor[(7, 11, 10), float32] */
  };
  %533() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_3726() -> Tensor[(7, 11, 10), float64] {
  %534 = @func_3267() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %534.1
}

def @func_8241() -> (Tensor[(7, 11, 10), float64], uint16, Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  @func_8239() /* ty=(Tensor[(7, 11, 10), float64], uint16, Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */
}

def @func_3978(%var_3976: Tensor[(4, 15, 15), float64], %var_3977: Tensor[(4, 15, 15), float64]) -> Tensor[(4, 15, 15), float64] {
  @func_3974(%var_3976, %var_3977) /* ty=Tensor[(4, 15, 15), float64] */
}

def @func_3887(%var_3868: Tensor[(18, 36), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), bool], Tensor[(18, 36), float32]) {
  %535 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %536 = cast(meta[relay.Constant][28] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %537 = reshape(%536, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %538 = @func_3388(%537) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) */;
  %539 = cast(%var_3868, dtype="uint8") /* ty=Tensor[(18, 36), uint8] */;
  %540 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(18, 36), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %541 = cast(meta[relay.Constant][28] /* ty=Tensor[(18, 36), float32] */, dtype="uint8") /* ty=Tensor[(18, 36), uint8] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %543 = bitwise_xor(%541, %542) /* ty=Tensor[(18, 36), uint8] */;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(18, 36), float64] */;
  %545 = log2(%544) /* ty=Tensor[(18, 36), float64] */;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %547 = %535.1;
  %548 = %538.2;
  %549 = asin(%546) /* ty=Tensor[(18, 36), float32] */;
  (%547, %548, %549)
}

def @func_3890(%var_3888: Tensor[(18, 36), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), bool], Tensor[(18, 36), float32]) {
  @func_3887(%var_3888) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), bool], Tensor[(18, 36), float32]) */
}

def @func_794() -> (Tensor[(7, 11, 10), float64],) {
  %552 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %550 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %551 = %550.0;
    (%551,)
  };
  %552() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_3308() -> (Tensor[(7, 11, 10), float32],) {
  %553 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %554 = %553.2;
  (%554,)
}

def @func_4467() -> (Tensor[(7, 11, 10), float32],) {
  @func_4465() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_273() -> Tensor[(7, 11, 10), float64] {
  @func_271() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_8112() -> (Tensor[(4, 12, 12), float32], Tensor[(4, 12, 12), float64], Tensor[(4, 12, 12), float32]) {
  @func_8110() /* ty=(Tensor[(4, 12, 12), float32], Tensor[(4, 12, 12), float64], Tensor[(4, 12, 12), float32]) */
}

def @main(%var_8362: int8, %var_8363: Tensor[(6, 13, 16), int8]) -> Tensor[(6, 13, 16), bool] {
  %555 = cast(%var_8362, dtype="bool") /* ty=bool */;
  %556 = cast(%var_8363, dtype="bool") /* ty=Tensor[(6, 13, 16), bool] */;
  not_equal(%555, %556) /* ty=Tensor[(6, 13, 16), bool] */
}

def @func_8155(%var_8153: Tensor[(7, 14, 9), uint16], %var_8154: Tensor[(7, 14, 9), uint16]) -> Tensor[(7, 14, 9), bool] {
  @func_8151(%var_8153, %var_8154) /* ty=Tensor[(7, 14, 9), bool] */
}

def @func_7423(%var_7411: bool, %var_7412: Tensor[(1, 2), bool]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), int8], bool, Tensor[(1, 2), bool]) {
  %557 = @func_2663() /* ty=(Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) */;
  %558 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %559 = cast(%var_7411, dtype="bool") /* ty=bool */;
  %560 = cast(%var_7412, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
  %561 = reshape(%559, newshape=[]) /* ty=bool */;
  %562 = reshape(%560, newshape=[1, 2]) /* ty=Tensor[(1, 2), bool] */;
  %563 = @func_7219(%561, %562) /* ty=(Tensor[(1, 2), bool], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) */;
  %564 = %557.1;
  %565 = %558.0;
  %566 = %563.1;
  (%564, %565, %566, %var_7411, %var_7412)
}

def @func_569() -> (Tensor[(7, 11, 10), float64],) {
  @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_5527() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(210, 1), uint16]) {
  @func_5525() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(210, 1), uint16]) */
}

def @func_6277(%var_6275: Tensor[(1365), float32], %var_6276: Tensor[(210), uint16]) -> (Tensor[(7, 11, 10), float64], Tensor[(35, 6), int64], Tensor[(1365), float32], Tensor[(210), uint16], Tensor[(7, 11, 4), float64], Tensor[(154, 2), float64]) {
  %581 = fn (%var_6254: Tensor[(1365), float32], %var_6255: Tensor[(210), uint16]) -> (Tensor[(7, 11, 10), float64], Tensor[(35, 6), int64], Tensor[(1365), float32], Tensor[(210), uint16], Tensor[(7, 11, 4), float64], Tensor[(154, 2), float64]) {
    %567 = @func_5697() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
    %568 = cast(%var_6254, dtype="float32") /* ty=Tensor[(1365), float32] */;
    %569 = cast(%var_6255, dtype="uint16") /* ty=Tensor[(210), uint16] */;
    %570 = reshape(%568, newshape=[455, 3]) /* ty=Tensor[(455, 3), float32] */;
    %571 = reshape(%569, newshape=[35, 6]) /* ty=Tensor[(35, 6), uint16] */;
    %572 = @func_4605(%570, %571) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) */;
    %573 = cast(meta[relay.Constant][29] /* ty=Tensor[(154, 2), float64] */, dtype="float64") /* ty=Tensor[(154, 2), float64] */;
    %574 = cast(meta[relay.Constant][29] /* ty=Tensor[(154, 2), float64] */, dtype="float64") /* ty=Tensor[(154, 2), float64] */;
    %575 = reshape(%573, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
    %576 = reshape(%574, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
    %577 = @func_619(%575, %576) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
    %578 = %567.1;
    %579 = %572.4;
    %580 = %577.0;
    (%578, %579, %var_6254, %var_6255, %580, meta[relay.Constant][29] /* ty=Tensor[(154, 2), float64] */)
  };
  %581(%var_6275, %var_6276) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(35, 6), int64], Tensor[(1365), float32], Tensor[(210), uint16], Tensor[(7, 11, 4), float64], Tensor[(154, 2), float64]) */
}

def @func_4917() -> (Tensor[(7, 11, 10), float32],) {
  @func_4915() /* ty=(Tensor[(7, 11, 10), float32],) */
}

def @func_2873(%var_2855: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) {
  %582 = cast(%var_2855, dtype="int8") /* ty=Tensor[(104), int8] */;
  %583 = reshape(%582, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %584 = @func_706(%583) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */;
  %585 = cast(meta[relay.Constant][30] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %586 = reshape(%585, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %587 = @func_1921(%586) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) */;
  %588 = cast(meta[relay.Constant][30] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %589 = reshape(%588, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %590 = @func_1921(%589) /* ty=(Tensor[(7, 8, 15), float64], Tensor[(840), float64], Tensor[(35, 6), float32], Tensor[(7, 8, 15), float64]) */;
  %591 = @func_2539() /* ty=Tensor[(7, 11, 10), bool] */;
  %592 = %584.0;
  %593 = %587.2;
  %594 = %590.0;
  (%591, %592, %var_2855, %593, meta[relay.Constant][30] /* ty=Tensor[(840), float64] */, %594)
}

def @func_2788() -> (Tensor[(7, 11, 10), float64],) {
  %596 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %595 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
    (%595,)
  };
  %596() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_5334(%var_5280: Tensor[(35, 6), float64], %var_5307: Tensor[(96, 28), float32], %var_5308: Tensor[(220, 1), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) {
  %597 = @func_4413() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %598 = @func_2030() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %599 = @func_5006() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %600 = @func_3267() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %601 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %602 = %601.3;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %604 = log10(%603) /* ty=Tensor[(35, 6), float32] */;
  %605 = cast(%604, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %606 = acosh(%605) /* ty=Tensor[(35, 6), float64] */;
  %607 = cast(%var_5280, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(2), int32] */;
  %609 = cast(%606, dtype="bool") /* ty=Tensor[(35, 6), bool] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %611 = @func_793() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %612 = cast(%var_5307, dtype="float32") /* ty=Tensor[(96, 28), float32] */;
  %613 = cast(%var_5307, dtype="float32") /* ty=Tensor[(96, 28), float32] */;
  %614 = cast(%var_5308, dtype="float64") /* ty=Tensor[(220, 1), float64] */;
  %615 = reshape(%612, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
  %616 = reshape(%613, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
  %617 = reshape(%614, newshape=[55, 4]) /* ty=Tensor[(55, 4), float64] */;
  %618 = @func_3595(%615, %616, %617) /* ty=(Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %619 = @func_2787() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %620 = cast(%604, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %621 = %597.0;
  %622 = %598.0;
  %623 = %599.0;
  %624 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  %625 = %600.1;
  %626 = equal(%609, %610) /* ty=Tensor[(35, 6), bool] */;
  %627 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
  %628 = %611.0;
  %629 = %618.4;
  %630 = %619.0;
  %631 = cos(%620) /* ty=Tensor[(35, 6), float64] */;
  (%621, %622, %623, %624, %625, %626, %627, %628, %629, %var_5307, %var_5308, %630, %631)
}

def @func_2049() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */
}

def @func_1626() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) {
  %632 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %633 = %632.0;
  %634 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
  %635 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
  %636 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  (%633, %634, %635, %636)
}

def @func_2282(%var_2280: Tensor[(308), float64]) -> (Tensor[(7, 11, 10), int8], Tensor[(7, 11, 4), bool]) {
  @func_2279(%var_2280) /* ty=(Tensor[(7, 11, 10), int8], Tensor[(7, 11, 4), bool]) */
}

def @func_1991() -> (Tensor[(7, 11, 10), float64],) {
  @func_1989() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_5404(%var_5403: Tensor[(2688), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(55, 4), bool], Tensor[(2688), float32], Tensor[(220), float64]) {
  %646 = fn (%var_5399: Tensor[(2688), float32]) -> (Tensor[(7, 11, 10), float64], Tensor[(55, 4), bool], Tensor[(2688), float32], Tensor[(220), float64]) {
    %637 = cast(%var_5399, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %638 = cast(%var_5399, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %639 = cast(meta[relay.Constant][31] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
    %640 = reshape(%637, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
    %641 = reshape(%638, newshape=[12, 14, 16]) /* ty=Tensor[(12, 14, 16), float32] */;
    %642 = reshape(%639, newshape=[55, 4]) /* ty=Tensor[(55, 4), float64] */;
    %643 = @func_3595(%640, %641, %642) /* ty=(Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
    %644 = @func_1932() /* ty=Tensor[(7, 11, 10), float64] */;
    %645 = %643.3;
    (%644, %645, %var_5399, meta[relay.Constant][31] /* ty=Tensor[(220), float64] */)
  };
  %646(%var_5403) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(55, 4), bool], Tensor[(2688), float32], Tensor[(220), float64]) */
}

def @func_3327(%var_3326: Tensor[(2, 10, 11), float64]) -> (Tensor[(2, 10, 11), float64],) {
  %649 = fn (%var_3313: Tensor[(2, 10, 11), float64]) -> (Tensor[(2, 10, 11), float64],) {
    %647 = cast(%var_3313, dtype="float64") /* ty=Tensor[(2, 10, 11), float64] */;
    %648 = acosh(%647) /* ty=Tensor[(2, 10, 11), float64] */;
    (%648,)
  };
  %649(%var_3326) /* ty=(Tensor[(2, 10, 11), float64],) */
}

def @func_1350() -> Tensor[(7, 11, 10), float32] {
  %650 = fn () -> Tensor[(7, 11, 10), float32] {
    @func_171() /* ty=Tensor[(7, 11, 10), float32] */
  };
  %650() /* ty=Tensor[(7, 11, 10), float32] */
}

def @func_708(%var_707: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) {
  %660 = fn (%var_692: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) {
    %651 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
    %652 = cast(%var_692, dtype="int8") /* ty=Tensor[(104), int8] */;
    %653 = cast(%var_692, dtype="int8") /* ty=Tensor[(104), int8] */;
    %654 = reshape(%652, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
    %655 = reshape(%653, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
    %656 = @func_490(%654, %655) /* ty=(Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) */;
    %657 = %651.1;
    %658 = %656.0;
    %659 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
    (%657, %658, %var_692, %659)
  };
  %660(%var_707) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64]) */
}

def @func_1511(%var_1510: Tensor[(132), float32]) -> (Tensor[(11, 4, 3), float32], Tensor[(132), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), bool]) {
  %705 = fn (%var_1384: Tensor[(132), float32]) -> (Tensor[(11, 4, 3), float32], Tensor[(132), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), bool]) {
    %661 = cast(%var_1384, dtype="float32") /* ty=Tensor[(132), float32] */;
    %662 = reshape(%661, newshape=[11, 4, 3]) /* ty=Tensor[(11, 4, 3), float32] */;
    %663 = @func_214(%662) /* ty=(Tensor[(11, 4, 3), float32],) */;
    %664 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %665 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
    %666 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
    %667 = reshape(%665, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
    %668 = reshape(%666, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
    %669 = @func_490(%667, %668) /* ty=(Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) */;
    %670 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %671 = @func_793() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %672 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
    %673 = @func_793() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %674 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %675 = @func_1255() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) */;
    %676 = %675.5;
    %677 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %678 = %677.0;
    %679 = cast(%678, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
    %680 = shape_of(%676, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(%676, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %683 = logical_and(%681, %682) /* ty=Tensor[(7, 11, 10), bool] */;
    %684 = cast(%683, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
    %685 = atan(%684) /* ty=Tensor[(7, 11, 10), float32] */;
    %686 = cast(meta[relay.Constant][33] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %687 = cast(meta[relay.Constant][33] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %688 = reshape(%686, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
    %689 = reshape(%687, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
    %690 = @func_619(%688, %689) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
    %691 = %690.1;
    %692 = cast(%691, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
    %693 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
    %694 = cast(%685, dtype="bool") /* ty=Tensor[(7, 11, 10), bool] */;
    %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %696 = %663.0;
    %697 = %664.0;
    %698 = %669.1;
    %699 = %670.0;
    %700 = %671.0;
    %701 = %672.2;
    %702 = %673.0;
    %703 = %674.0;
    %704 = greater(%694, %695) /* ty=Tensor[(7, 11, 10), bool] */;
    (%696, %var_1384, %697, %698, meta[relay.Constant][32] /* ty=Tensor[(104), int8] */, %699, meta[relay.Constant][33] /* ty=Tensor[(308), float64] */, %700, %701, %702, %703, %704)
  };
  %705(%var_1510) /* ty=(Tensor[(11, 4, 3), float32], Tensor[(132), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), bool]) */
}

def @func_2834() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %706 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %707 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %708 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
  %709 = %706.0;
  %710 = %707.1;
  (%708, %709, %710)
}

def @func_3268() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %715 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
    %711 = @func_2489() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %712 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %713 = %711.0;
    %714 = %712.0;
    (%713, %714)
  };
  %715() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_6751() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) {
  %716 = @func_3986() /* ty=(Tensor[(7, 11, 10), float32],) */;
  %717 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %718 = %716.0;
  %719 = %717.0;
  %720 = @func_5879() /* ty=Tensor[(7, 11, 10), float32] */;
  (%718, %719, %720)
}

def @func_6865(%var_6835: Tensor[(5, 2, 1), float32]) -> (Tensor[(5, 2, ?), float32], Tensor[(7, 11, 10), bool]) {
  %721 = cast(%var_6835, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %722 = asin(%721) /* ty=Tensor[(5, 2, 1), float32] */;
  %723 = cast(%var_6835, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%722, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %727 = @func_4356() /* ty=(Tensor[(7, 11, 10), bool],) */;
  %728 = floor_divide(%725, %726) /* ty=Tensor[(5, 2, ?), float32] */;
  %729 = %727.0;
  (%728, %729)
}

def @func_6225() -> (Tensor[(7, 11, 10), float64],) {
  %731 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %730 = @func_4323() /* ty=Tensor[(7, 11, 10), float64] */;
    (%730,)
  };
  %731() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_6932(%var_6926: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(104), float32]) {
  %732 = @func_6802() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) */;
  %733 = cast(meta[relay.Constant][34] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %734 = reshape(%733, newshape=[104]) /* ty=Tensor[(104), int8] */;
  %735 = @func_2873(%734) /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) */;
  %736 = cast(%var_6926, dtype="float32") /* ty=Tensor[(104), float32] */;
  %737 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(104), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %738 = cast(meta[relay.Constant][34] /* ty=Tensor[(104), int8] */, dtype="float32") /* ty=Tensor[(104), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?), float32] */;
  %740 = @func_4323() /* ty=Tensor[(7, 11, 10), float64] */;
  %741 = %732.0;
  %742 = %735.1;
  %743 = power(%738, %739) /* ty=Tensor[(104), float32] */;
  (%740, %741, %742, %743)
}

def @func_7166() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
  %748 = fn () -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) {
    %744 = @func_6029() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %745 = @func_4323() /* ty=Tensor[(7, 11, 10), float64] */;
    %746 = @func_535() /* ty=Tensor[(7, 11, 10), float64] */;
    %747 = %744.1;
    (%745, %746, %747)
  };
  %748() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_7550() -> Tensor[(7, 11, 10), float64] {
  @func_55() /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_7273() -> (Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(104), int8], uint32, Tensor[(104), int8], Tensor[(308), float32]) {
  @func_7271() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(104), int8], uint32, Tensor[(104), int8], Tensor[(308), float32]) */
}

def @func_8309() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %749 = @func_4698() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %750 = @func_8060() /* ty=Tensor[(7, 11, 10), float64] */;
  %751 = @func_5739() /* ty=Tensor[(7, 11, 10), float32] */;
  %752 = %749.1;
  (%750, %751, %752)
}

def @func_1628() -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) {
  @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */
}

def @func_3778() -> (Tensor[(104), int8],) {
  @func_3776() /* ty=(Tensor[(104), int8],) */
}

def @func_5791(%var_5775: Tensor[(5, 11, 13), float32]) -> (Tensor[(5, 11, 13), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) {
  %753 = cast(%var_5775, dtype="float32") /* ty=Tensor[(5, 11, 13), float32] */;
  %754 = cast(meta[relay.Constant][35] /* ty=Tensor[(1365), float32] */, dtype="float32") /* ty=Tensor[(1365), float32] */;
  %755 = reshape(%754, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float32] */;
  %756 = @func_384(%755) /* ty=(Tensor[(7, 13, 15), float32],) */;
  %757 = log(%753) /* ty=Tensor[(5, 11, 13), float32] */;
  %758 = %756.0;
  (%757, %758, meta[relay.Constant][35] /* ty=Tensor[(1365), float32] */)
}

def @func_3834(%var_3832: Tensor[(3, 1, 3), float32], %var_3833: Tensor[(104), int8]) -> (Tensor[(3, ?, 3), int8], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(840), float64]) {
  %776 = fn (%var_3787: Tensor[(3, 1, 3), float32], %var_3818: Tensor[(104), int8]) -> (Tensor[(3, ?, 3), int8], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(840), float64]) {
    %759 = cast(%var_3787, dtype="float32") /* ty=Tensor[(3, 1, 3), float32] */;
    %760 = rsqrt(%759) /* ty=Tensor[(3, 1, 3), float32] */;
    %761 = cast(%var_3787, dtype="int8") /* ty=Tensor[(3, 1, 3), int8] */;
    %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(%760, dtype="int8") /* ty=Tensor[(3, 1, 3), int8] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %765 = cast(%var_3818, dtype="int8") /* ty=Tensor[(104), int8] */;
    %766 = cast(%var_3818, dtype="int8") /* ty=Tensor[(104), int8] */;
    %767 = reshape(%765, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
    %768 = reshape(%766, newshape=[2, 13, 4]) /* ty=Tensor[(2, 13, 4), int8] */;
    %769 = @func_490(%767, %768) /* ty=(Tensor[(2, 13, 4), int8], Tensor[(7, 11, 10), float32]) */;
    %770 = cast(%var_3818, dtype="int8") /* ty=Tensor[(104), int8] */;
    %771 = reshape(%770, newshape=[104]) /* ty=Tensor[(104), int8] */;
    %772 = @func_2873(%771) /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) */;
    %773 = multiply(%763, %764) /* ty=Tensor[(3, ?, 3), int8] */;
    %774 = %769.1;
    %775 = %772.4;
    (%773, %774, %var_3818, %775)
  };
  %776(%var_3832, %var_3833) /* ty=(Tensor[(3, ?, 3), int8], Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(840), float64]) */
}

def @func_2621(%var_2619: Tensor[(16, 9, 3), float64], %var_2620: Tensor[(16, 9, 3), float64]) -> (Tensor[(16, 9, 3), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(16, 9, 3), bool]) {
  %793 = fn (%var_2558: Tensor[(16, 9, 3), float64], %var_2585: Tensor[(16, 9, 3), float64]) -> (Tensor[(16, 9, 3), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(16, 9, 3), bool]) {
    %777 = cast(%var_2558, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
    %778 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(16, 9, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %779 = cast(meta[relay.Constant][36] /* ty=Tensor[(16, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %781 = @func_1626() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), bool]) */;
    %782 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %783 = @func_2489() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %784 = cast(%var_2585, dtype="bool") /* ty=Tensor[(16, 9, 3), bool] */;
    %785 = shape_of(%var_2558, dtype="int32") /* ty=Tensor[(3), int32] */;
    %786 = cast(%var_2558, dtype="bool") /* ty=Tensor[(16, 9, 3), bool] */;
    %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %788 = floor_mod(%779, %780) /* ty=Tensor[(16, 9, 3), float64] */;
    %789 = %781.0;
    %790 = %782.0;
    %791 = %783.0;
    %792 = equal(%786, %787) /* ty=Tensor[(16, 9, 3), bool] */;
    (%788, %789, %790, %791, %792)
  };
  %793(%var_2619, %var_2620) /* ty=(Tensor[(16, 9, 3), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(16, 9, 3), bool]) */
}

def @func_7523(%var_7522: Tensor[(12, 10, 3), float32]) -> (Tensor[(12, 10, 3), float64], Tensor[(7, 11, 10), float64]) {
  %800 = fn (%var_7490: Tensor[(12, 10, 3), float32]) -> (Tensor[(12, 10, 3), float64], Tensor[(7, 11, 10), float64]) {
    %794 = cast(%var_7490, dtype="float32") /* ty=Tensor[(12, 10, 3), float32] */;
    %795 = sqrt(%794) /* ty=Tensor[(12, 10, 3), float32] */;
    %796 = cast(%795, dtype="float64") /* ty=Tensor[(12, 10, 3), float64] */;
    %797 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %798 = asin(%796) /* ty=Tensor[(12, 10, 3), float64] */;
    %799 = %797.0;
    (%798, %799)
  };
  %800(%var_7522) /* ty=(Tensor[(12, 10, 3), float64], Tensor[(7, 11, 10), float64]) */
}

def @func_4915() -> (Tensor[(7, 11, 10), float32],) {
  %801 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  (%801,)
}

def @func_7222(%var_7220: bool, %var_7221: Tensor[(1, 2), bool]) -> (Tensor[(1, 2), bool], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) {
  %812 = fn (%var_7188: bool, %var_7189: Tensor[(1, 2), bool]) -> (Tensor[(1, 2), bool], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) {
    %802 = cast(%var_7188, dtype="bool") /* ty=bool */;
    %803 = cast(%var_7189, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
    %804 = cast(%var_7188, dtype="uint32") /* ty=uint32 */;
    %805 = reshape(%804, newshape=[]) /* ty=uint32 */;
    %806 = @func_784(%805) /* ty=(Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) */;
    %807 = @func_1745() /* ty=(Tensor[(11, 4, 3), uint16], Tensor[(7, 11, 10), int8], Tensor[(7, 11, 10), float32]) */;
    %808 = logical_or(%802, %803) /* ty=Tensor[(1, 2), bool] */;
    %809 = %806.1;
    %810 = @func_1010() /* ty=Tensor[(7, 11, 10), float32] */;
    %811 = %807.2;
    (%808, %809, %810, %811)
  };
  %812(%var_7220, %var_7221) /* ty=(Tensor[(1, 2), bool], Tensor[(104), int8], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) */
}

def @func_1066() -> Tensor[(7, 11, 10), bool] {
  %813 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %813.0
}

def @func_3388(%var_3358: Tensor[(12, 9, 6), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(648), float32], Tensor[(12, 9, 6), bool], Tensor[(7, 11, 10), float32]) {
  %814 = @func_2834() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %815 = cast(meta[relay.Constant][37] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %816 = reshape(%815, newshape=[12, 9, 6]) /* ty=Tensor[(12, 9, 6), float32] */;
  %817 = @func_403(%816) /* ty=Tensor[(12, 9, 6), float32] */;
  %818 = cast(%var_3358, dtype="bool") /* ty=Tensor[(12, 9, 6), bool] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%817, dtype="bool") /* ty=Tensor[(12, 9, 6), bool] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %822 = @func_2047() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */;
  %823 = %814.1;
  %824 = less(%820, %821) /* ty=Tensor[(12, 9, 6), bool] */;
  %825 = %822.0;
  (%823, meta[relay.Constant][37] /* ty=Tensor[(648), float32] */, %824, %825)
}

def @func_4323() -> Tensor[(7, 11, 10), float64] {
  %826 = @func_601() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %826.0
}

def @func_4608(%var_4606: Tensor[(455, 3), float32], %var_4607: Tensor[(35, 6), uint16]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) {
  %841 = fn (%var_4580: Tensor[(455, 3), float32], %var_4595: Tensor[(35, 6), uint16]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) {
    %827 = @func_113() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
    %828 = cast(%var_4580, dtype="float32") /* ty=Tensor[(455, 3), float32] */;
    %829 = reshape(%828, newshape=[1365]) /* ty=Tensor[(1365), float32] */;
    %830 = @func_2229(%829) /* ty=(Tensor[(1, 3), int64], Tensor[(7, 13, 15), float32], Tensor[(1365), float32]) */;
    %831 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %832 = %831.0;
    %833 = cast(%var_4595, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
    %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(2), int32] */;
    %835 = cast(%832, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %837 = %827.0;
    %838 = @func_4489() /* ty=Tensor[(7, 11, 10), float64] */;
    %839 = %830.0;
    %840 = logical_xor(%835, %836) /* ty=Tensor[(35, 6), int64] */;
    (%837, %838, %839, %var_4580, %840)
  };
  %841(%var_4606, %var_4607) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(1, 3), int64], Tensor[(455, 3), float32], Tensor[(35, 6), int64]) */
}

def @func_4414() -> (Tensor[(7, 11, 10), float64],) {
  %844 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %842 = @func_3267() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %843 = %842.1;
    (%843,)
  };
  %844() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_406(%var_404: Tensor[(12, 9, 6), float32]) -> Tensor[(12, 9, 6), float32] {
  @func_403(%var_404) /* ty=Tensor[(12, 9, 6), float32] */
}

def @func_2403(%var_2386: Tensor[(308, 1), float64]) -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) {
  %845 = cast(%var_2386, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %846 = cast(%var_2386, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
  %847 = reshape(%845, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %848 = reshape(%846, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %849 = @func_619(%847, %848) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 10), float64]) */;
  %850 = cast(meta[relay.Constant][38] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %851 = reshape(%850, newshape=[]) /* ty=uint32 */;
  %852 = @func_784(%851) /* ty=(Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) */;
  %853 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  %854 = %849.1;
  %855 = %852.1;
  (%853, %854, %var_2386, %855, meta[relay.Constant][38] /* ty=uint32 */)
}

def @func_3600(%var_3597: Tensor[(12, 14, 16), float32], %var_3598: Tensor[(12, 14, 16), float32], %var_3599: Tensor[(55, 4), float64]) -> (Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  @func_3595(%var_3597, %var_3598, %var_3599) /* ty=(Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) */
}

def @func_6682() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(14, 5, 7), float64]) {
  %865 = fn () -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(14, 5, 7), float64]) {
    %856 = @func_4068() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %857 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
    %858 = tan(%857) /* ty=Tensor[(14, 5, 7), float32] */;
    %859 = cast(%858, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
    %860 = erf(%859) /* ty=Tensor[(14, 5, 7), float32] */;
    %861 = cast(%860, dtype="float64") /* ty=Tensor[(14, 5, 7), float64] */;
    %862 = @func_1349() /* ty=Tensor[(7, 11, 10), float32] */;
    %863 = %856.0;
    %864 = cosh(%861) /* ty=Tensor[(14, 5, 7), float64] */;
    (%862, %863, %864)
  };
  %865() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(14, 5, 7), float64]) */
}

def @func_6733(%var_6730: Tensor[(4, 5, 2), float64], %var_6731: Tensor[(210, 1), float64], %var_6732: Tensor[(55, 4), float64]) -> (Tensor[(4, 5, 2), int64], Tensor[(4, 5, 2), float64], Tensor[(35, 6), bool], Tensor[(210, 1), float64], Tensor[(4, 672), float32], Tensor[(55, 4), float64], Tensor[(7, 11, 10), bool]) {
  %884 = fn (%var_6688: Tensor[(4, 5, 2), float64], %var_6709: Tensor[(210, 1), float64], %var_6711: Tensor[(55, 4), float64]) -> (Tensor[(4, 5, 2), int64], Tensor[(4, 5, 2), float64], Tensor[(35, 6), bool], Tensor[(210, 1), float64], Tensor[(4, 672), float32], Tensor[(55, 4), float64], Tensor[(7, 11, 10), bool]) {
    %866 = cast(%var_6688, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
    %867 = asin(%866) /* ty=Tensor[(4, 5, 2), float64] */;
    %868 = cast(%var_6688, dtype="int64") /* ty=Tensor[(4, 5, 2), int64] */;
    %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %870 = cast(%867, dtype="int64") /* ty=Tensor[(4, 5, 2), int64] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %872 = cast(%867, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
    %873 = cast(%var_6709, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %874 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 672), float32] */, dtype="float32") /* ty=Tensor[(4, 672), float32] */;
    %875 = cast(%var_6711, dtype="float64") /* ty=Tensor[(55, 4), float64] */;
    %876 = reshape(%873, newshape=[35, 6]) /* ty=Tensor[(35, 6), float64] */;
    %877 = reshape(%874, newshape=[96, 28]) /* ty=Tensor[(96, 28), float32] */;
    %878 = reshape(%875, newshape=[220, 1]) /* ty=Tensor[(220, 1), float64] */;
    %879 = @func_5334(%876, %877, %878) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64], Tensor[(96, 28), float32], Tensor[(220, 1), float64], Tensor[(7, 11, 10), float64], Tensor[(35, 6), float64]) */;
    %880 = right_shift(%870, %871) /* ty=Tensor[(4, 5, 2), int64] */;
    %881 = log2(%872) /* ty=Tensor[(4, 5, 2), float64] */;
    %882 = %879.5;
    %883 = @func_2539() /* ty=Tensor[(7, 11, 10), bool] */;
    (%880, %881, %882, %var_6709, meta[relay.Constant][40] /* ty=Tensor[(4, 672), float32] */, %var_6711, %883)
  };
  %884(%var_6730, %var_6731, %var_6732) /* ty=(Tensor[(4, 5, 2), int64], Tensor[(4, 5, 2), float64], Tensor[(35, 6), bool], Tensor[(210, 1), float64], Tensor[(4, 672), float32], Tensor[(55, 4), float64], Tensor[(7, 11, 10), bool]) */
}

def @func_3069() -> Tensor[(7, 11, 10), float64] {
  %885 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %885.0
}

def @func_7271() -> (Tensor[(7, 11, 10), float32], Tensor[(104), int8], Tensor[(104), int8], uint32, Tensor[(104), int8], Tensor[(308), float32]) {
  %886 = @func_3655() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32]) */;
  %887 = cast(meta[relay.Constant][41] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %888 = reshape(%887, newshape=[308, 1]) /* ty=Tensor[(308, 1), float64] */;
  %889 = @func_2403(%888) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) */;
  %890 = cast(meta[relay.Constant][42] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %891 = reshape(%890, newshape=[]) /* ty=uint32 */;
  %892 = @func_784(%891) /* ty=(Tensor[(11, 13, 15), float64], Tensor[(104), int8], Tensor[(104), int8]) */;
  %893 = @func_3776() /* ty=(Tensor[(104), int8],) */;
  %894 = cast(meta[relay.Constant][41] /* ty=Tensor[(308), float64] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %895 = %886.1;
  %896 = %889.3;
  %897 = %892.1;
  %898 = %893.0;
  %899 = cos(%894) /* ty=Tensor[(308), float32] */;
  (%895, %896, %897, meta[relay.Constant][42] /* ty=uint32 */, %898, %899)
}

def @func_8239() -> (Tensor[(7, 11, 10), float64], uint16, Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %900 = @func_1710() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %901 = @func_1328() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */;
  %902 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %903 = @func_2521() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %904 = %900.0;
  %905 = %901.2;
  %906 = %902.1;
  %907 = %903.0;
  (%904, %905, %906, %907)
}

def @func_4465() -> (Tensor[(7, 11, 10), float32],) {
  %908 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
  (%908,)
}

def @func_7999() -> (Tensor[(7, 11, 10), float64],) {
  %909 = @func_1255() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) */;
  %910 = %909.5;
  (%910,)
}

def @func_1329() -> (Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) {
  %920 = fn () -> (Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) {
    %911 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
    %912 = cast(%911, dtype="float32") /* ty=Tensor[(7, 11, 10), float32] */;
    %913 = cast(meta[relay.Constant][43] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %914 = cast(meta[relay.Constant][44] /* ty=Tensor[(35, 6), uint16] */, dtype="uint16") /* ty=Tensor[(35, 6), uint16] */;
    %915 = reshape(%913, newshape=[]) /* ty=uint16 */;
    %916 = reshape(%914, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint16] */;
    %917 = @func_1042(%915, %916) /* ty=(Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) */;
    %918 = acos(%912) /* ty=Tensor[(7, 11, 10), float32] */;
    %919 = %917.0;
    (%918, %919, meta[relay.Constant][43] /* ty=uint16 */, meta[relay.Constant][44] /* ty=Tensor[(35, 6), uint16] */)
  };
  %920() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(2, 15, 7), uint16], uint16, Tensor[(35, 6), uint16]) */
}

def @func_2490() -> (Tensor[(7, 11, 10), float64],) {
  %923 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %921 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %922 = %921.0;
    (%922,)
  };
  %923() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_2876(%var_2874: Tensor[(104), int8]) -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) {
  @func_2873(%var_2874) /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(104), int8], Tensor[(35, 6), float32], Tensor[(840), float64], Tensor[(7, 8, 15), float64]) */
}

def @func_2031() -> (Tensor[(7, 11, 10), float64],) {
  %926 = fn () -> (Tensor[(7, 11, 10), float64],) {
    %924 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %925 = %924.0;
    (%925,)
  };
  %926() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_1256() -> (Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) {
  %953 = fn () -> (Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) {
    %927 = @func_909() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %928 = cast(meta[relay.Constant][45] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
    %929 = reshape(%928, newshape=[11, 4, 3]) /* ty=Tensor[(11, 4, 3), float32] */;
    %930 = @func_214(%929) /* ty=(Tensor[(11, 4, 3), float32],) */;
    %931 = %930.0;
    %932 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 4, 3), float32] */, dtype="uint16") /* ty=Tensor[(11, 4, 3), uint16] */;
    %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
    %934 = cast(%931, dtype="uint16") /* ty=Tensor[(11, 4, 3), uint16] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %936 = cast(meta[relay.Constant][47] /* ty=Tensor[(104, 1), int8] */, dtype="int8") /* ty=Tensor[(104, 1), int8] */;
    %937 = reshape(%936, newshape=[104]) /* ty=Tensor[(104), int8] */;
    %938 = @func_897(%937) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %939 = %938.5;
    %940 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
    %941 = cast(%940, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
    %942 = shape_of(%939, dtype="int32") /* ty=Tensor[(3), int32] */;
    %943 = cast(%939, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
    %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %945 = cast(meta[relay.Constant][47] /* ty=Tensor[(104, 1), int8] */, dtype="int8") /* ty=Tensor[(104, 1), int8] */;
    %946 = reshape(%945, newshape=[104]) /* ty=Tensor[(104), int8] */;
    %947 = @func_897(%946) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(12, 9, 6), float32], Tensor[(162, 4), float32], Tensor[(104), int8], Tensor[(104), int8], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %948 = %927.0;
    %949 = bitwise_and(%934, %935) /* ty=Tensor[(11, 4, 3), uint16] */;
    %950 = @func_1066() /* ty=Tensor[(7, 11, 10), bool] */;
    %951 = power(%943, %944) /* ty=Tensor[(7, 11, 10), float64] */;
    %952 = %947.6;
    (%948, meta[relay.Constant][45] /* ty=Tensor[(132, 1), float32] */, %949, meta[relay.Constant][47] /* ty=Tensor[(104, 1), int8] */, %950, %951, %952)
  };
  %953() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(132, 1), float32], Tensor[(11, 4, 3), uint16], Tensor[(104, 1), int8], Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 4), float64]) */
}

def @func_4884(%var_4882: Tensor[(12, 16, 16), float32], %var_4883: Tensor[(12, 16, 16), float32]) -> (Tensor[(12, 16, 16), float32], Tensor[(12, 16, 16), float32]) {
  @func_4880(%var_4882, %var_4883) /* ty=(Tensor[(12, 16, 16), float32], Tensor[(12, 16, 16), float32]) */
}

def @func_5525() -> (Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], uint16, Tensor[(210, 1), uint16]) {
  %954 = @func_4356() /* ty=(Tensor[(7, 11, 10), bool],) */;
  %955 = @func_2489() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %956 = cast(meta[relay.Constant][48] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %957 = cast(meta[relay.Constant][49] /* ty=Tensor[(210, 1), uint16] */, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
  %958 = reshape(%956, newshape=[]) /* ty=uint16 */;
  %959 = reshape(%957, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint16] */;
  %960 = @func_1042(%958, %959) /* ty=(Tensor[(2, 15, 7), uint16], Tensor[(7, 11, 10), float32]) */;
  %961 = %954.0;
  %962 = %955.0;
  %963 = %960.1;
  (%961, %962, %963, meta[relay.Constant][48] /* ty=uint16 */, meta[relay.Constant][49] /* ty=Tensor[(210, 1), uint16] */)
}

def @func_6803() -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) {
  %967 = fn () -> (Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) {
    %964 = @func_3986() /* ty=(Tensor[(7, 11, 10), float32],) */;
    %965 = %964.0;
    %966 = @func_3518() /* ty=Tensor[(7, 11, 10), float32] */;
    (%965, %966)
  };
  %967() /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float32]) */
}

def @func_4358() -> (Tensor[(7, 11, 10), bool],) {
  @func_4356() /* ty=(Tensor[(7, 11, 10), bool],) */
}

def @func_7715(%var_7713: Tensor[(9, 15, 3), float64], %var_7714: Tensor[(9, 15, 3), float64]) -> (Tensor[(9, 15, 3), float64],) {
  @func_7711(%var_7713, %var_7714) /* ty=(Tensor[(9, 15, 3), float64],) */
}

def @func_2934(%var_2932: Tensor[(7, 11, 10), float64], %var_2933: Tensor[(7, 44), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) {
  %979 = fn (%var_2914: Tensor[(7, 11, 10), float64], %var_2927: Tensor[(7, 44), float64]) -> (Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) {
    %968 = @func_366() /* ty=(Tensor[(7, 11, 10), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %969 = %968.2;
    %970 = cast(%var_2914, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
    %971 = shape_of(%969, dtype="int32") /* ty=Tensor[(3), int32] */;
    %972 = cast(%969, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
    %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %974 = cast(%var_2927, dtype="float64") /* ty=Tensor[(7, 44), float64] */;
    %975 = reshape(%974, newshape=[308, 1]) /* ty=Tensor[(308, 1), float64] */;
    %976 = @func_2403(%975) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(104), int8], uint32) */;
    %977 = maximum(%972, %973) /* ty=Tensor[(7, 11, 10), float64] */;
    %978 = %976.2;
    (%977, %978, %var_2927)
  };
  %979(%var_2932, %var_2933) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) */
}

def @func_8151(%var_8133: Tensor[(7, 14, 9), uint16], %var_8134: Tensor[(7, 14, 9), uint16]) -> Tensor[(7, 14, 9), bool] {
  %980 = cast(%var_8134, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %981 = shape_of(%var_8133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%var_8133, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%982, %983) /* ty=Tensor[(7, 14, 9), bool] */
}

def @func_271() -> Tensor[(7, 11, 10), float64] {
  %984 = @func_21() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %985 = %984.0;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
  rsqrt(%986) /* ty=Tensor[(7, 11, 10), float64] */
}

def @func_2664() -> (Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) {
  %997 = fn () -> (Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) {
    %987 = @func_1573() /* ty=(Tensor[(7, 11, 10), float64], Tensor[(2, 13, 4), int8], Tensor[(104), int8]) */;
    %988 = %987.1;
    %989 = cast(%988, dtype="float64") /* ty=Tensor[(2, 13, 4), float64] */;
    %990 = sqrt(%989) /* ty=Tensor[(2, 13, 4), float64] */;
    %991 = cast(%988, dtype="float64") /* ty=Tensor[(2, 13, 4), float64] */;
    %992 = shape_of(%990, dtype="int32") /* ty=Tensor[(3), int32] */;
    %993 = cast(%990, dtype="float64") /* ty=Tensor[(2, 13, 4), float64] */;
    %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %995 = floor_divide(%993, %994) /* ty=Tensor[(2, 13, 4), float64] */;
    %996 = @func_171() /* ty=Tensor[(7, 11, 10), float32] */;
    (%995, %996)
  };
  %997() /* ty=(Tensor[(2, 13, 4), float64], Tensor[(7, 11, 10), float32]) */
}

def @func_7387(%var_7385: Tensor[(3, 216), float32]) -> (Tensor[(7, 11, 10), float32], Tensor[(12, 9, 6), float32], Tensor[(3, 216), float32]) {
  @func_7384(%var_7385) /* ty=(Tensor[(7, 11, 10), float32], Tensor[(12, 9, 6), float32], Tensor[(3, 216), float32]) */
}

def @func_216(%var_215: Tensor[(11, 4, 3), float32]) -> (Tensor[(11, 4, 3), float32],) {
  %1000 = fn (%var_205: Tensor[(11, 4, 3), float32]) -> (Tensor[(11, 4, 3), float32],) {
    %998 = cast(%var_205, dtype="float32") /* ty=Tensor[(11, 4, 3), float32] */;
    %999 = asinh(%998) /* ty=Tensor[(11, 4, 3), float32] */;
    (%999,)
  };
  %1000(%var_215) /* ty=(Tensor[(11, 4, 3), float32],) */
}

def @func_4182(%var_4181: Tensor[(308, 15), int32]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(308, ?), float64], Tensor[(7, 11, 10), float64], Tensor[(308, 15), bool]) {
  %1035 = fn (%var_4174: Tensor[(308, 15), int32]) -> (Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(308, ?), float64], Tensor[(7, 11, 10), float64], Tensor[(308, 15), bool]) {
    %1001 = @func_3146() /* ty=(Tensor[(7, 11, 10), float64],) */;
    %1002 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
    %1003 = %1001.0;
    %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(7, 11, 10), float64] */;
    %1005 = cast(meta[relay.Constant][50] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %1006 = reshape(%1004, newshape=[7, 11, 10]) /* ty=Tensor[(7, 11, 10), float64] */;
    %1007 = reshape(%1005, newshape=[7, 44]) /* ty=Tensor[(7, 44), float64] */;
    %1008 = @func_2931(%1006, %1007) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(308, 1), float64], Tensor[(7, 44), float64]) */;
    %1009 = %1008.1;
    %1010 = cast(%1009, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
    %1011 = sin(%1010) /* ty=Tensor[(308, 1), float64] */;
    %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
    %1013 = shape_of(%1009, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1014 = cast(%1009, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
    %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1016 = cast(%1009, dtype="float64") /* ty=Tensor[(308, 1), float64] */;
    %1017 = cosh(%1016) /* ty=Tensor[(308, 1), float64] */;
    %1018 = cast(%1009, dtype="uint32") /* ty=Tensor[(308, 1), uint32] */;
    %1019 = shape_of(%1017, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1020 = cast(%1017, dtype="uint32") /* ty=Tensor[(308, 1), uint32] */;
    %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %1022 = left_shift(%1020, %1021) /* ty=Tensor[(308, ?), uint32] */;
    %1023 = cast(%1017, dtype="int32") /* ty=Tensor[(308, 1), int32] */;
    %1024 = shape_of(%1022, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1025 = cast(%1022, dtype="int32") /* ty=Tensor[(308, ?), int32] */;
    %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %1027 = multiply(%1025, %1026) /* ty=Tensor[(308, ?), int32] */;
    %1028 = cast(%1027, dtype="bool") /* ty=Tensor[(308, ?), bool] */;
    %1029 = cast(%var_4174, dtype="bool") /* ty=Tensor[(308, 15), bool] */;
    %1030 = %1002.1;
    %1031 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
    %1032 = divide(%1014, %1015) /* ty=Tensor[(308, ?), float64] */;
    %1033 = @func_55() /* ty=Tensor[(7, 11, 10), float64] */;
    %1034 = less(%1028, %1029) /* ty=Tensor[(308, 15), bool] */;
    (%1003, %1030, meta[relay.Constant][50] /* ty=Tensor[(308), float64] */, %1031, %1032, %1033, %1034)
  };
  %1035(%var_4181) /* ty=(Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(308), float64], Tensor[(7, 11, 10), float64], Tensor[(308, ?), float64], Tensor[(7, 11, 10), float64], Tensor[(308, 15), bool]) */
}

def @func_8001() -> (Tensor[(7, 11, 10), float64],) {
  @func_7999() /* ty=(Tensor[(7, 11, 10), float64],) */
}

def @func_3595(%var_3524: Tensor[(12, 14, 16), float32], %var_3525: Tensor[(12, 14, 16), float32], %var_3561: Tensor[(55, 4), float64]) -> (Tensor[(12, 14, 16), float32], Tensor[(7, 11, 10), float64], Tensor[(35, 6), uint16], Tensor[(55, 4), bool], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64]) {
  %1036 = cast(%var_3525, dtype="float32") /* ty=Tensor[(12, 14, 16), float32] */;
  %1037 = shape_of(%var_3524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%var_3524, dtype="float32") /* ty=Tensor[(12, 14, 16), float32] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1040 = @func_3043() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %1041 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %1042 = cast(%var_3561, dtype="float64") /* ty=Tensor[(55, 4), float64] */;
  %1043 = reshape(%1042, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), float64] */;
  %1044 = @func_3325(%1043) /* ty=(Tensor[(2, 10, 11), float64],) */;
  %1045 = %1044.0;
  %1046 = cast(%1045, dtype="bool") /* ty=Tensor[(2, 10, 11), bool] */;
  %1047 = shape_of(%var_3561, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1048 = cast(%var_3561, dtype="bool") /* ty=Tensor[(55, 4), bool] */;
  %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1050 = @func_567() /* ty=(Tensor[(7, 11, 10), float64],) */;
  %1051 = @func_3287() /* ty=(Tensor[(35, 6), uint16], Tensor[(7, 11, 10), float32], Tensor[(7, 11, 10), float64], Tensor[(7, 11, 10), float64]) */;
  %1052 = floor_divide(%1038, %1039) /* ty=Tensor[(12, 14, 16), float32] */;
  %1053 = %1040.0;
  %1054 = %1041.0;
  %1055 = not_equal(%1048, %1049) /* ty=Tensor[(55, 4), bool] */;
  %1056 = %1050.0;
  %1057 = %1051.1;
  %1058 = @func_271() /* ty=Tensor[(7, 11, 10), float64] */;
  (%1052, %1053, %1054, %1055, %1056, %1057, %1058)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen191/build/output.py:3213: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen191/build/output.py", line 3218, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_cast_not_equal_kernel0(signed char* __restrict__ T_not_equal, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) < 78) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1248) {
      T_not_equal[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[(0)]) != ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])));
    }
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


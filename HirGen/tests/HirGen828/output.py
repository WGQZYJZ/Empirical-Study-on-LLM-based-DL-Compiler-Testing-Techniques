import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_464 = relay.var("var_464", dtype = "float64", shape = (4, 7, 15))#candidate|464|(4, 7, 15)|var|float64
var_465 = relay.var("var_465", dtype = "float64", shape = (4, 7, 15))#candidate|465|(4, 7, 15)|var|float64
bop_466 = relay.floor_divide(var_464.astype('float64'), relay.reshape(var_465.astype('float64'), relay.shape_of(var_464))) # shape=(4, 7, 15)
output = relay.Tuple([bop_466,])
output2 = relay.Tuple([bop_466,])
func_469 = relay.Function([var_464,var_465,], output)
mod['func_469'] = func_469
mod = relay.transform.InferType()(mod)
var_470 = relay.var("var_470", dtype = "float64", shape = (4, 7, 15))#candidate|470|(4, 7, 15)|var|float64
var_471 = relay.var("var_471", dtype = "float64", shape = (4, 7, 15))#candidate|471|(4, 7, 15)|var|float64
output = func_469(var_470,var_471,)
func_472 = relay.Function([var_470,var_471,], output)
mutated_mod['func_472'] = func_472
mutated_mod = relay.transform.InferType()(mutated_mod)
const_574 = relay.const([[[9,-6,-9,4],[-9,3,5,-8],[-2,10,9,2],[-10,-2,1,-7],[-10,-5,-4,-5],[9,10,-1,-4],[1,6,3,-5],[8,4,-3,-10]],[[-5,-4,-5,4],[4,-9,-4,-7],[8,-4,1,7],[-9,9,-3,-9],[-5,9,-1,-5],[9,-1,8,6],[1,-10,-1,4],[-10,-4,-5,9]],[[-3,1,3,8],[-1,-3,-8,8],[10,4,4,3],[-2,-7,9,6],[-6,5,-2,-9],[5,3,-4,-1],[-8,8,-4,6],[-8,-2,8,-9]],[[6,4,-1,10],[-7,-7,3,-5],[-4,4,4,5],[-2,-8,-6,7],[-3,9,-3,9],[-3,1,6,-8],[-1,-10,2,-6],[2,-7,1,2]],[[6,-5,2,9],[10,-5,7,9],[-8,2,4,-6],[-10,-7,-8,4],[-10,-3,4,-10],[-3,3,8,10],[10,-6,10,1],[5,-2,8,-7]],[[4,3,-3,4],[-7,5,-8,-3],[-7,-3,1,8],[3,-2,-3,-9],[8,-6,-4,6],[7,1,8,-4],[-3,3,-10,-1],[-8,-1,-2,1]],[[4,-3,-10,-4],[-2,-2,6,-7],[-10,4,-9,10],[10,10,4,3],[9,-10,9,-5],[6,-1,-1,3],[9,9,2,5],[3,-3,-7,6]],[[-6,-4,-10,-6],[-6,1,5,7],[1,2,-7,7],[-10,-8,-9,-2],[3,-10,7,-9],[2,8,-4,-1],[-3,10,10,2],[8,-9,-6,-3]],[[-9,4,-8,-6],[-5,-10,-1,5],[6,6,3,-5],[7,9,5,2],[7,-9,-9,7],[-1,-2,-2,6],[2,-3,9,-7],[2,-8,10,-10]]], dtype = "int16")#candidate|574|(9, 8, 4)|const|int16
var_575 = relay.var("var_575", dtype = "int16", shape = (9, 8, 4))#candidate|575|(9, 8, 4)|var|int16
bop_576 = relay.multiply(const_574.astype('int16'), relay.reshape(var_575.astype('int16'), relay.shape_of(const_574))) # shape=(9, 8, 4)
uop_592 = relay.cosh(const_574.astype('float64')) # shape=(9, 8, 4)
bop_595 = relay.equal(uop_592.astype('bool'), relay.reshape(bop_576.astype('bool'), relay.shape_of(uop_592))) # shape=(9, 8, 4)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
const_600 = relay.const([0.768912,6.185758,-9.614324,-1.598625,6.709085,7.361582,-6.761169,-0.704180,6.005415,-6.198289,-1.535539,4.425421,3.209958,-0.449955,-7.023300,5.002750,-6.349571,-9.244474,-0.446770,9.786317,7.576649,9.975818,1.819659,-4.634075,-9.990916,-4.227931,6.682584,3.849781,-6.239621,4.032284,4.001131,-9.706537,2.973078,8.837693,-7.296345,1.293196,9.619325,6.600046,9.174679,3.755455,2.776494,-0.490059,9.537949,4.315752,9.504336,0.892708,5.311219,9.867756,-8.813032,-0.975528,0.715481,-4.595788,-2.900299,2.911407,4.293510,-5.971524,2.943620,6.857761,-9.819370,-7.359295,-3.654074,7.266703,2.214870,-2.348718,3.051013,-4.490048,8.069404,3.497047,8.431935,1.932444,9.535435,8.883805,-2.178663,-9.692470,4.483465,-7.894072,-2.362452,9.615855,-9.212127,3.167408,-3.049522,9.933011,-9.740762,-9.363694,3.951327,-1.225752,9.296820,2.814563,5.738824,-0.104803,-4.898879,-1.543269,-8.340387,4.914931,1.298184,-3.349223,-3.245759,2.080600,-1.034641,-2.732404,7.648309,4.134140,-1.567335,-4.627471,-1.589941,-2.937726,-6.785400,6.262317,-1.511086,1.889818,6.935378,-8.948635,2.606593,-5.112856,5.108023,-3.028042,6.723657,5.378746,-7.259397,0.892582,-8.431907,-2.390944,-6.401048,-1.451221,-5.751227,1.476535,9.706744,5.301677,7.290729,1.060963,7.816033,-5.976163,1.459068,-6.628413,6.826102,-3.853038,-3.666444,-1.351387,-2.578992,0.868171,6.838416,-9.994189,-5.903869,1.469684,0.509450,-5.763742,-5.486333,1.630791,-4.849740,-4.292036,-2.709470,-6.811031,9.658665,4.859242,7.374817,-5.604630,0.764407,4.453965,-9.941916,-5.977962,4.518967,-5.974227,6.971430,3.571618,-5.333780,5.840866,-6.670797,5.064124,5.746685,8.099241,4.236786,5.642034,-6.626623,2.506109,2.179380,-2.538851,-7.207578,5.690561,2.601033,-5.391034,-5.114469,-3.517722,9.793549,-7.213521,-1.515258,5.833894,5.026419,9.755773,8.957321,-4.500905,-3.457473,-3.318188,-2.744762,-7.153764,-8.988168,5.490296,-3.573601,-6.359928,5.057714,-9.896246,-8.464964,7.168749,-6.473426,-8.730852,7.775774,6.344942,7.585674,2.586220,9.535670,5.131144,-8.076794,-4.392684,-0.946023,-7.162615,0.272722,-4.837534,-6.836514,0.385897,-8.707813,-4.221028,-2.760288,8.584452,5.424877,0.048368,-0.718867,1.038183,9.797444,4.141991,-1.415385,3.019600,4.217514,0.561487,-8.151785,-3.778411,-9.263280,-7.407285,-6.181081,2.298767,-6.882903,-4.519047,3.885859,6.000233,7.872507,7.847984,-5.373933,5.109487,-6.356468,4.406708,3.636586,9.905351,4.391329,3.979122,8.900447,1.974354,3.490208,-6.845221,8.887493,-2.756082,-1.663498,-6.320012,-9.808241,-7.395556,0.437105,8.094897,-9.943253,-2.367506,1.143605,7.520290,-2.376290,-5.326916,9.335756,3.721057,7.091325,2.142106,0.324752,-2.193869,-0.462496,-2.042366,3.217288,-0.272635,-0.682108,1.306226,-3.167414,-9.479869,3.113852,1.093290,7.014658,-0.290317,-2.048390,-8.626130,5.515672,8.798063,-7.486014,1.663972,-2.146127,5.375308,8.410516,-3.161386,9.312193,-5.080349,3.142622,7.511664,-8.063481,6.025510,-2.890308,-7.204707,1.052121,4.443780,9.771629,5.155941,-8.637684,-5.842599,1.470971,-6.885373,6.273901,6.470640,-3.554653,4.701209,-4.052590,7.455629,5.600133,6.771949,8.924517,-2.100752,9.551905,-6.773033,-9.202547,6.796957,7.926321,-6.244059,7.149359,-4.040777,5.789310,-3.390153,-9.591647,-1.439865,-0.010449,-7.548351,-5.993670,-8.548602,-9.927410,7.663338,-1.816752,-3.399968,-6.387359,-1.510111,3.910916,4.948099,9.511425,-0.442927,1.661541,5.300284,-5.423037,-7.474656,-0.974817,7.176057,9.714733,3.786069,9.285875,-6.382443,-8.091060,7.752705,6.691839,-1.118781,3.442686,-2.046126,9.303803,-5.500479,-6.892021,-5.135920,1.026272,1.249988,3.005218,-0.155376,0.347923,-5.728543,-7.930979,9.626054,5.037353,-8.013955,-7.267815,6.242000,-5.897683,-9.063950,-7.894441,7.391129,-5.365277,4.697938,7.753307,-8.429329,-4.023267,-4.142641,1.625977,-8.099181,-5.638361,2.344651,6.618817,-6.833254,-2.143121,-5.951188,-6.959429,-7.873441,1.118487,-8.919219,-3.317748,9.558530,9.181331,6.450661,3.941735,3.330725,-1.430625,-9.327727,-3.303985,4.333405,4.815974,9.634984,3.178312,-3.731831,3.277861,5.339445], dtype = "float64")#candidate|600|(420,)|const|float64
call_599 = relay.TupleGetItem(func_469_call(relay.reshape(const_600.astype('float64'), [4, 7, 15]), relay.reshape(const_600.astype('float64'), [4, 7, 15]), ), 0)
call_601 = relay.TupleGetItem(func_472_call(relay.reshape(const_600.astype('float64'), [4, 7, 15]), relay.reshape(const_600.astype('float64'), [4, 7, 15]), ), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_605 = relay.TupleGetItem(func_469_call(relay.reshape(const_600.astype('float64'), [4, 7, 15]), relay.reshape(call_599.astype('float64'), [4, 7, 15]), ), 0)
call_606 = relay.TupleGetItem(func_472_call(relay.reshape(const_600.astype('float64'), [4, 7, 15]), relay.reshape(call_599.astype('float64'), [4, 7, 15]), ), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_612 = relay.TupleGetItem(func_469_call(relay.reshape(call_599.astype('float64'), [4, 7, 15]), relay.reshape(call_599.astype('float64'), [4, 7, 15]), ), 0)
call_613 = relay.TupleGetItem(func_472_call(relay.reshape(call_599.astype('float64'), [4, 7, 15]), relay.reshape(call_599.astype('float64'), [4, 7, 15]), ), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_619 = relay.TupleGetItem(func_469_call(relay.reshape(call_599.astype('float64'), [4, 7, 15]), relay.reshape(call_612.astype('float64'), [4, 7, 15]), ), 0)
call_620 = relay.TupleGetItem(func_472_call(relay.reshape(call_599.astype('float64'), [4, 7, 15]), relay.reshape(call_612.astype('float64'), [4, 7, 15]), ), 0)
var_624 = relay.var("var_624", dtype = "float64", shape = (4, 7, 15))#candidate|624|(4, 7, 15)|var|float64
bop_625 = relay.less_equal(call_612.astype('bool'), relay.reshape(var_624.astype('bool'), relay.shape_of(call_612))) # shape=(4, 7, 15)
bop_628 = relay.less_equal(call_613.astype('bool'), relay.reshape(var_624.astype('bool'), relay.shape_of(call_613))) # shape=(4, 7, 15)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_631 = relay.TupleGetItem(func_469_call(relay.reshape(call_619.astype('float64'), [4, 7, 15]), relay.reshape(const_600.astype('float64'), [4, 7, 15]), ), 0)
call_632 = relay.TupleGetItem(func_472_call(relay.reshape(call_619.astype('float64'), [4, 7, 15]), relay.reshape(const_600.astype('float64'), [4, 7, 15]), ), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_634 = relay.TupleGetItem(func_469_call(relay.reshape(call_619.astype('float64'), [4, 7, 15]), relay.reshape(var_624.astype('float64'), [4, 7, 15]), ), 0)
call_635 = relay.TupleGetItem(func_472_call(relay.reshape(call_619.astype('float64'), [4, 7, 15]), relay.reshape(var_624.astype('float64'), [4, 7, 15]), ), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_653 = relay.TupleGetItem(func_469_call(relay.reshape(call_605.astype('float64'), [4, 7, 15]), relay.reshape(call_599.astype('float64'), [4, 7, 15]), ), 0)
call_654 = relay.TupleGetItem(func_472_call(relay.reshape(call_605.astype('float64'), [4, 7, 15]), relay.reshape(call_599.astype('float64'), [4, 7, 15]), ), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_666 = relay.TupleGetItem(func_469_call(relay.reshape(const_600.astype('float64'), [4, 7, 15]), relay.reshape(call_634.astype('float64'), [4, 7, 15]), ), 0)
call_667 = relay.TupleGetItem(func_472_call(relay.reshape(const_600.astype('float64'), [4, 7, 15]), relay.reshape(call_634.astype('float64'), [4, 7, 15]), ), 0)
output = relay.Tuple([bop_595,call_599,const_600,call_605,call_619,bop_625,call_631,call_634,call_653,call_666,])
output2 = relay.Tuple([bop_595,call_601,const_600,call_606,call_620,bop_628,call_632,call_635,call_654,call_667,])
func_670 = relay.Function([var_575,var_624,], output)
mod['func_670'] = func_670
mod = relay.transform.InferType()(mod)
var_671 = relay.var("var_671", dtype = "int16", shape = (9, 8, 4))#candidate|671|(9, 8, 4)|var|int16
var_672 = relay.var("var_672", dtype = "float64", shape = (4, 7, 15))#candidate|672|(4, 7, 15)|var|float64
output = func_670(var_671,var_672,)
func_673 = relay.Function([var_671,var_672,], output)
mutated_mod['func_673'] = func_673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_932 = relay.var("var_932", dtype = "float32", shape = (11, 2, 7))#candidate|932|(11, 2, 7)|var|float32
uop_933 = relay.log(var_932.astype('float32')) # shape=(11, 2, 7)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
const_940 = relay.const([[5.421633,-5.384177,-4.756881,-6.064817,2.809209,-1.962353],[1.762888,3.745249,-6.332924,9.998241,-1.421178,-5.826471],[-8.765111,5.513936,4.302236,-1.701206,-6.197769,0.971810],[-1.996607,3.116751,-5.309397,-3.397515,0.590622,5.710666],[-6.853686,-1.549089,4.280384,1.355619,-2.964321,-8.012804],[-8.547752,-4.263081,6.741878,-9.808667,1.644962,3.135261],[0.188574,2.846791,-0.518093,-4.432611,-1.736713,3.540272],[-8.097299,2.589237,0.052968,-4.095298,-8.870225,-2.090364],[-2.580465,9.994000,4.284413,2.696362,9.415043,3.783127],[0.166378,-9.146675,-0.113449,9.419068,-2.121537,0.967376],[-3.636971,-4.920665,0.412648,-9.944893,9.673596,5.477441],[-8.692587,5.588905,-4.451058,4.448850,4.030705,6.606869],[4.828477,-0.669090,4.691604,-6.343516,9.320975,-7.228196],[6.881259,-6.500294,-0.505802,0.781393,-8.775542,-9.837244],[5.339317,-0.814160,3.291673,-8.941168,-6.588526,8.669093],[4.694787,2.316990,-2.791185,8.979000,-1.666072,-7.568790],[1.812354,9.208506,-7.886062,-1.995210,-7.736206,-2.789992],[-1.335803,-7.877365,1.567763,-6.367832,9.916727,1.479514],[6.922372,-8.563691,-5.165655,0.079416,-2.870564,0.924545],[-0.892727,1.082670,-1.203314,4.453597,-1.733196,7.393845],[7.064063,-8.542240,9.324297,-1.718988,-1.937879,-0.931920],[7.072959,2.960654,0.402624,-7.816894,-0.444687,-6.440521],[-6.910857,-6.454363,7.361264,-4.221165,0.977476,-8.034608],[8.445227,-1.408575,0.380975,-2.562214,-8.635374,-3.447213],[1.767541,1.000796,-5.111252,-1.340990,2.932463,-3.738828],[6.870677,1.775066,2.849071,4.851641,-2.916906,8.825515],[5.079199,-2.029206,0.214882,5.322950,-4.912143,-7.031968],[-1.139029,6.728957,8.898383,-3.285532,-1.313612,-7.324124],[7.450584,-5.919762,8.211084,4.299627,-1.184596,-8.358455],[2.304223,-3.481337,-8.589518,-6.630154,6.262341,5.444479],[7.682580,9.860068,8.567486,-2.759851,-1.241462,6.132308],[-3.399920,-7.659645,-0.980093,-3.792155,-3.102935,2.341163],[0.704235,3.933363,6.832901,-2.468281,-4.463833,1.354160],[4.329112,2.361289,-2.834038,5.624433,1.210018,0.525760],[-4.556288,2.900407,-7.163487,4.834502,9.103693,2.826014],[2.485976,4.207393,3.857023,-7.895258,-0.800027,-0.038397],[-6.616097,4.006449,7.093132,6.463280,-7.617060,-1.221522],[-4.499585,2.424228,-7.868595,-7.833827,-7.108584,-9.517786],[-3.012603,-6.014960,-8.407951,-5.179329,-4.477183,-4.210919],[-4.159678,8.541736,5.862972,-1.983772,7.498309,8.190721],[-7.961239,-7.507556,4.196235,-2.198352,0.314985,4.691595],[-1.721826,-2.776241,2.316750,-9.730937,-9.975185,3.212195],[-4.410089,6.132047,5.202701,2.402259,3.429379,-7.089782],[-5.996863,-3.551654,5.591265,2.993259,4.741832,-8.739154],[0.790676,5.600177,-6.602762,2.109080,-8.618929,-0.647454],[6.388315,0.215482,3.285939,6.516053,-9.200233,5.507661],[1.862819,7.702182,-4.701140,-5.026722,9.628215,-1.343554],[-9.396165,-1.825861,-1.864975,-0.360224,-7.308037,-3.586607],[9.184472,-0.685714,-0.687478,3.506059,-8.755737,-8.172764],[-6.672653,-3.233922,-0.980350,2.911572,-0.273868,0.229837],[-0.934526,-5.715997,9.057043,1.113679,7.831983,0.977203],[5.176521,2.694627,4.088841,5.226681,-0.711149,6.062546],[-8.527094,6.241847,-6.663257,5.946543,-5.743276,-6.039980],[9.958158,-1.159287,9.219187,-4.910989,-2.876289,-5.174905],[1.340794,5.209556,-6.930741,1.238834,3.357696,7.437932],[5.671970,6.659862,8.877281,-5.552589,7.096163,1.603628],[-8.339169,7.854630,9.112792,-9.192278,1.168746,9.174732],[8.702909,-8.805257,4.239200,-0.072112,6.431519,1.202860],[3.481994,9.432687,-7.310805,5.412896,-8.639450,-0.698091],[5.583464,-1.128900,-5.167317,-5.052539,-6.587846,0.111957],[-6.546567,0.203432,8.978694,-7.015472,-4.401064,4.841248],[-5.152095,5.792484,5.672678,5.019316,-3.914678,-6.723505],[2.376991,-1.253988,8.883621,5.265575,-3.328909,7.678624],[2.446040,-4.840107,6.660081,7.074750,0.776907,-1.404911],[-9.012935,0.211577,-3.582387,1.784156,-3.036550,8.112670],[7.412097,5.651568,5.577219,0.450752,1.587072,-4.419679],[6.340169,-8.191171,-8.665415,-5.151965,-2.777539,-6.313040],[5.121882,-2.600649,4.886783,6.165736,2.322593,-3.797026],[-5.462943,3.698566,-0.197692,-9.922638,2.254787,-2.926455],[-4.631865,-8.655651,-9.209059,4.442666,2.242472,5.600568]], dtype = "float64")#candidate|940|(70, 6)|const|float64
call_939 = relay.TupleGetItem(func_469_call(relay.reshape(const_940.astype('float64'), [4, 7, 15]), relay.reshape(const_940.astype('float64'), [4, 7, 15]), ), 0)
call_941 = relay.TupleGetItem(func_472_call(relay.reshape(const_940.astype('float64'), [4, 7, 15]), relay.reshape(const_940.astype('float64'), [4, 7, 15]), ), 0)
uop_943 = relay.sinh(uop_933.astype('float32')) # shape=(11, 2, 7)
uop_976 = relay.sqrt(uop_933.astype('float64')) # shape=(11, 2, 7)
func_670_call = mod.get_global_var('func_670')
func_673_call = mutated_mod.get_global_var('func_673')
var_991 = relay.var("var_991", dtype = "int16", shape = (288,))#candidate|991|(288,)|var|int16
call_990 = relay.TupleGetItem(func_670_call(relay.reshape(var_991.astype('int16'), [9, 8, 4]), relay.reshape(const_940.astype('float64'), [4, 7, 15]), ), 2)
call_992 = relay.TupleGetItem(func_673_call(relay.reshape(var_991.astype('int16'), [9, 8, 4]), relay.reshape(const_940.astype('float64'), [4, 7, 15]), ), 2)
uop_1008 = relay.exp(uop_943.astype('float32')) # shape=(11, 2, 7)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_1021 = relay.TupleGetItem(func_469_call(relay.reshape(call_990.astype('float64'), [4, 7, 15]), relay.reshape(const_940.astype('float64'), [4, 7, 15]), ), 0)
call_1022 = relay.TupleGetItem(func_472_call(relay.reshape(call_990.astype('float64'), [4, 7, 15]), relay.reshape(const_940.astype('float64'), [4, 7, 15]), ), 0)
output = relay.Tuple([call_939,const_940,uop_976,call_990,var_991,uop_1008,call_1021,])
output2 = relay.Tuple([call_941,const_940,uop_976,call_992,var_991,uop_1008,call_1022,])
func_1023 = relay.Function([var_932,var_991,], output)
mod['func_1023'] = func_1023
mod = relay.transform.InferType()(mod)
var_1024 = relay.var("var_1024", dtype = "float32", shape = (11, 2, 7))#candidate|1024|(11, 2, 7)|var|float32
var_1025 = relay.var("var_1025", dtype = "int16", shape = (288,))#candidate|1025|(288,)|var|int16
output = func_1023(var_1024,var_1025,)
func_1026 = relay.Function([var_1024,var_1025,], output)
mutated_mod['func_1026'] = func_1026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1323 = relay.var("var_1323", dtype = "float32", shape = (8, 11, 11))#candidate|1323|(8, 11, 11)|var|float32
uop_1324 = relay.cos(var_1323.astype('float32')) # shape=(8, 11, 11)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
var_1340 = relay.var("var_1340", dtype = "float64", shape = (420,))#candidate|1340|(420,)|var|float64
call_1339 = relay.TupleGetItem(func_469_call(relay.reshape(var_1340.astype('float64'), [4, 7, 15]), relay.reshape(var_1340.astype('float64'), [4, 7, 15]), ), 0)
call_1341 = relay.TupleGetItem(func_472_call(relay.reshape(var_1340.astype('float64'), [4, 7, 15]), relay.reshape(var_1340.astype('float64'), [4, 7, 15]), ), 0)
output = relay.Tuple([uop_1324,call_1339,var_1340,])
output2 = relay.Tuple([uop_1324,call_1341,var_1340,])
func_1342 = relay.Function([var_1323,var_1340,], output)
mod['func_1342'] = func_1342
mod = relay.transform.InferType()(mod)
mutated_mod['func_1342'] = func_1342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1342_call = mutated_mod.get_global_var('func_1342')
var_1344 = relay.var("var_1344", dtype = "float32", shape = (8, 11, 11))#candidate|1344|(8, 11, 11)|var|float32
var_1345 = relay.var("var_1345", dtype = "float64", shape = (420,))#candidate|1345|(420,)|var|float64
call_1343 = func_1342_call(var_1344,var_1345,)
output = call_1343
func_1346 = relay.Function([var_1344,var_1345,], output)
mutated_mod['func_1346'] = func_1346
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2044 = relay.var("var_2044", dtype = "uint8", shape = (3, 7, 15))#candidate|2044|(3, 7, 15)|var|uint8
var_2045 = relay.var("var_2045", dtype = "uint8", shape = (3, 7, 15))#candidate|2045|(3, 7, 15)|var|uint8
bop_2046 = relay.bitwise_or(var_2044.astype('uint8'), relay.reshape(var_2045.astype('uint8'), relay.shape_of(var_2044))) # shape=(3, 7, 15)
uop_2052 = relay.sqrt(bop_2046.astype('float64')) # shape=(3, 7, 15)
output = relay.Tuple([uop_2052,])
output2 = relay.Tuple([uop_2052,])
func_2086 = relay.Function([var_2044,var_2045,], output)
mod['func_2086'] = func_2086
mod = relay.transform.InferType()(mod)
var_2087 = relay.var("var_2087", dtype = "uint8", shape = (3, 7, 15))#candidate|2087|(3, 7, 15)|var|uint8
var_2088 = relay.var("var_2088", dtype = "uint8", shape = (3, 7, 15))#candidate|2088|(3, 7, 15)|var|uint8
output = func_2086(var_2087,var_2088,)
func_2089 = relay.Function([var_2087,var_2088,], output)
mutated_mod['func_2089'] = func_2089
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3035 = relay.const([[[3.480256,9.023628,2.814445,8.420270],[2.438715,7.471438,-5.733861,7.321648],[7.902767,-5.535849,-5.339862,-6.346926],[-3.498906,-5.570602,1.306241,9.187133],[-0.644136,4.252970,-5.141908,9.012890],[-1.762279,7.709819,-2.914037,-6.231658],[1.843157,-0.737239,0.640277,7.705571],[-1.190446,5.218001,3.480465,-8.794449],[5.388512,6.633314,1.356585,0.919288],[4.582733,-3.337580,6.309346,-5.908822],[6.229791,7.274010,9.269299,-1.643406],[-3.938649,9.140895,1.165532,9.488400],[8.972702,-7.612923,-5.467794,1.110202],[-6.036680,8.027477,-4.605924,1.193819],[-4.761504,7.654270,5.935837,5.072078]]], dtype = "float32")#candidate|3035|(1, 15, 4)|const|float32
uop_3036 = relay.asinh(const_3035.astype('float32')) # shape=(1, 15, 4)
bop_3052 = relay.bitwise_or(uop_3036.astype('uint16'), relay.reshape(const_3035.astype('uint16'), relay.shape_of(uop_3036))) # shape=(1, 15, 4)
var_3057 = relay.var("var_3057", dtype = "float32", shape = (16, 15, 4))#candidate|3057|(16, 15, 4)|var|float32
bop_3058 = relay.less_equal(uop_3036.astype('bool'), var_3057.astype('bool')) # shape=(16, 15, 4)
output = relay.Tuple([bop_3052,bop_3058,])
output2 = relay.Tuple([bop_3052,bop_3058,])
func_3066 = relay.Function([var_3057,], output)
mod['func_3066'] = func_3066
mod = relay.transform.InferType()(mod)
var_3067 = relay.var("var_3067", dtype = "float32", shape = (16, 15, 4))#candidate|3067|(16, 15, 4)|var|float32
output = func_3066(var_3067)
func_3068 = relay.Function([var_3067], output)
mutated_mod['func_3068'] = func_3068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3531 = relay.var("var_3531", dtype = "uint8", shape = ())#candidate|3531|()|var|uint8
var_3532 = relay.var("var_3532", dtype = "uint8", shape = (3, 1, 14))#candidate|3532|(3, 1, 14)|var|uint8
bop_3533 = relay.multiply(var_3531.astype('uint8'), var_3532.astype('uint8')) # shape=(3, 1, 14)
output = relay.Tuple([bop_3533,])
output2 = relay.Tuple([bop_3533,])
func_3538 = relay.Function([var_3531,var_3532,], output)
mod['func_3538'] = func_3538
mod = relay.transform.InferType()(mod)
mutated_mod['func_3538'] = func_3538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mutated_mod.get_global_var('func_3538')
var_3540 = relay.var("var_3540", dtype = "uint8", shape = ())#candidate|3540|()|var|uint8
var_3541 = relay.var("var_3541", dtype = "uint8", shape = (3, 1, 14))#candidate|3541|(3, 1, 14)|var|uint8
call_3539 = func_3538_call(var_3540,var_3541,)
output = call_3539
func_3542 = relay.Function([var_3540,var_3541,], output)
mutated_mod['func_3542'] = func_3542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3560 = relay.var("var_3560", dtype = "float32", shape = (9, 1, 9))#candidate|3560|(9, 1, 9)|var|float32
uop_3561 = relay.atanh(var_3560.astype('float32')) # shape=(9, 1, 9)
uop_3567 = relay.tan(uop_3561.astype('float32')) # shape=(9, 1, 9)
bop_3572 = relay.greater(uop_3567.astype('bool'), relay.reshape(uop_3561.astype('bool'), relay.shape_of(uop_3567))) # shape=(9, 1, 9)
output = bop_3572
output2 = bop_3572
func_3575 = relay.Function([var_3560,], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
var_3576 = relay.var("var_3576", dtype = "float32", shape = (9, 1, 9))#candidate|3576|(9, 1, 9)|var|float32
output = func_3575(var_3576)
func_3577 = relay.Function([var_3576], output)
mutated_mod['func_3577'] = func_3577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3650 = relay.var("var_3650", dtype = "float64", shape = (14, 16, 15))#candidate|3650|(14, 16, 15)|var|float64
uop_3651 = relay.sinh(var_3650.astype('float64')) # shape=(14, 16, 15)
output = relay.Tuple([uop_3651,])
output2 = relay.Tuple([uop_3651,])
func_3657 = relay.Function([var_3650,], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3658 = relay.var("var_3658", dtype = "float64", shape = (14, 16, 15))#candidate|3658|(14, 16, 15)|var|float64
func_3657_call = mutated_mod.get_global_var('func_3657')
call_3659 = func_3657_call(var_3658)
output = call_3659
func_3660 = relay.Function([var_3658], output)
mutated_mod['func_3660'] = func_3660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4192 = relay.var("var_4192", dtype = "float64", shape = (16, 7, 9))#candidate|4192|(16, 7, 9)|var|float64
var_4193 = relay.var("var_4193", dtype = "float64", shape = (16, 7, 9))#candidate|4193|(16, 7, 9)|var|float64
bop_4194 = relay.maximum(var_4192.astype('float64'), relay.reshape(var_4193.astype('float64'), relay.shape_of(var_4192))) # shape=(16, 7, 9)
output = relay.Tuple([bop_4194,])
output2 = relay.Tuple([bop_4194,])
func_4198 = relay.Function([var_4192,var_4193,], output)
mod['func_4198'] = func_4198
mod = relay.transform.InferType()(mod)
mutated_mod['func_4198'] = func_4198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4198_call = mutated_mod.get_global_var('func_4198')
var_4200 = relay.var("var_4200", dtype = "float64", shape = (16, 7, 9))#candidate|4200|(16, 7, 9)|var|float64
var_4201 = relay.var("var_4201", dtype = "float64", shape = (16, 7, 9))#candidate|4201|(16, 7, 9)|var|float64
call_4199 = func_4198_call(var_4200,var_4201,)
output = call_4199
func_4202 = relay.Function([var_4200,var_4201,], output)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4637 = relay.var("var_4637", dtype = "uint16", shape = (6, 10, 5))#candidate|4637|(6, 10, 5)|var|uint16
const_4638 = relay.const([[[6,2,4,-7,3],[-8,-8,6,6,-4],[9,3,-2,8,2],[3,-7,-1,-8,-3],[-10,6,9,-5,-9],[9,4,7,-3,-7],[-2,-5,7,9,2],[-6,10,-2,3,5],[-8,-1,8,-8,2],[6,-6,-2,-6,-8]],[[-2,3,-8,2,2],[-5,-4,5,-8,-5],[-6,4,-3,-5,-9],[7,7,3,7,-7],[7,-1,10,-4,-7],[-9,-9,5,1,-1],[2,2,-10,-3,4],[-5,-3,1,10,-4],[-4,2,-7,-7,6],[3,-6,7,1,2]],[[-1,-6,1,2,3],[-2,10,-2,2,7],[7,-8,-4,10,5],[3,-9,4,8,-3],[1,-10,9,8,-1],[-1,-7,-3,4,-8],[-7,6,-10,6,-6],[9,-4,6,10,7],[9,2,-7,-6,-10],[9,-3,-3,-5,1]],[[6,9,-10,7,7],[1,-2,-3,-8,1],[1,-5,-4,1,5],[-3,3,-5,4,-1],[4,10,-5,-8,-10],[-10,6,9,-6,-3],[2,4,-7,8,-8],[4,-1,1,-7,-8],[5,-10,-7,-3,9],[4,2,-7,-6,2]],[[-4,-10,-1,2,10],[-5,-1,-8,-3,-9],[-6,4,-2,7,-5],[-4,5,5,-6,6],[-8,1,-7,6,-9],[-2,10,5,8,2],[2,2,1,-5,-4],[-3,3,2,2,-10],[4,5,8,8,1],[9,5,1,1,-2]],[[-9,9,-8,2,8],[-8,5,-8,1,-9],[7,6,-1,7,2],[-9,6,-3,-9,-2],[-8,-9,4,-6,-5],[-9,-4,4,9,1],[5,-2,-8,-3,1],[-3,-6,10,4,-4],[2,3,6,3,-3],[9,-4,6,8,-8]]], dtype = "uint16")#candidate|4638|(6, 10, 5)|const|uint16
bop_4639 = relay.maximum(var_4637.astype('uint16'), relay.reshape(const_4638.astype('uint16'), relay.shape_of(var_4637))) # shape=(6, 10, 5)
func_3657_call = mod.get_global_var('func_3657')
func_3660_call = mutated_mod.get_global_var('func_3660')
const_4646 = relay.const([-6.155399,3.214142,7.601750,6.563168,-6.344580,-8.506185,-4.502551,9.674166,-5.048228,4.561906,9.062974,-0.818502,8.531226,-5.067765,9.121637,-3.919180,-0.428873,-8.372759,-8.859408,-8.889198,1.264077,-6.279272,6.825465,2.171258,-4.946594,-0.895809,0.217910,-3.143413,-6.596527,6.996147,-6.051649,0.138745,0.309294,-6.942806,-6.533083,4.001828,3.628520,3.590677,5.937441,9.585609,0.135241,9.895962,-6.708374,-0.898902,-3.048529,8.419982,5.593012,8.468209,-0.907322,4.401667,-2.894683,-0.252419,-5.122307,-4.055302,8.262725,7.408542,-0.022092,7.396561,-3.767289,2.427660,-8.214430,0.116780,-3.580119,-7.492512,-2.679605,0.918624,-7.578137,-1.348750,3.599573,3.232842,-0.949349,2.967498,0.030393,-0.376784,-4.984620,2.866635,-7.424407,8.198974,8.496331,2.275928,5.830066,5.606651,0.609039,-7.245537,-4.399769,2.758787,-4.483584,7.477451,5.471600,3.492734,-2.955933,-5.844649,4.654848,0.708879,-3.660112,-0.191150,3.137394,3.844364,8.124857,4.938963,0.909724,5.021347,0.321340,-5.677114,-5.602726,5.862665,-9.352048,0.875973,2.734998,-8.386013,2.991584,4.655418,-2.581628,2.583812,-3.571804,-9.630450,2.590311,3.517967,-1.920984,-6.188858,3.126112,7.620910,4.203533,4.320049,1.195850,-7.818953,-6.958584,4.401569,0.954142,-6.362602,4.142893,3.498578,-6.834526,-0.554426,-8.679079,2.115802,-2.989236,5.178538,3.035293,-7.155182,0.241328,-4.521276,-5.024983,-7.355021,-6.181292,5.997207,7.752008,7.933390,8.823348,6.488054,-9.241504,6.689892,0.011681,-2.083377,6.609717,-4.897934,-7.493085,-5.319129,-2.175046,-8.584611,5.539822,3.799295,-0.215007,3.940932,-4.126892,-7.819763,6.804037,8.658451,-3.030554,-5.622772,-3.909027,-1.650924,9.773939,6.535048,-8.843250,-9.738162,6.212733,-6.271541,-4.619010,6.778334,-8.766383,8.412701,7.615404,7.745694,2.959787,2.409597,-8.880414,-4.485307,-1.409070,9.218375,9.419521,-1.574534,6.763701,-1.274553,-5.912341,-7.936190,5.026412,8.164755,-2.969434,6.101018,-7.032248,4.736661,-4.399752,-1.058595,5.955161,2.532575,1.742771,4.846573,4.742519,1.281304,4.234724,-3.061082,9.930737,2.211405,-3.402725,5.920131,6.719089,3.204936,-5.472438,-9.681215,-4.152352,-6.363587,-5.708032,-6.516093,-9.659767,2.325292,-9.763301,-0.099876,1.641345,7.917336,-8.789727,-5.177017,-6.825505,-3.729588,8.746313,-2.182869,-0.140207,-9.349095,4.524998,-0.146484,-1.984315,2.180295,-8.955347,-9.422921,-5.113181,7.740246,4.614756,-9.239602,-6.964783,-0.310984,-3.131642,4.239766,-3.831727,2.957091,-7.464330,3.181472,3.380149,2.767030,-3.822733,-5.450844,-9.705604,-7.625230,2.210460,1.647064,9.768206,-8.156136,-2.363588,-4.410568,8.703144,-8.552122,-7.471949,-3.716591,8.344514,1.559018,9.037706,-8.741782,1.398979,5.873183,4.131600,-0.830593,7.411449,-8.660527,-1.670333,-0.564787,-0.909199,-8.734692,-5.092440,6.282702,-6.890896,9.895755,-2.744715,0.911167,-7.376124,-7.630331,1.692507,-5.916689,6.563429,8.543249,-6.347483,7.216914,-1.349823,6.415850,-1.099522,-8.507852,0.047485,9.285825,2.286299,5.962133,3.655818,-4.191711,8.953024,8.186224,6.652801,-2.361391,-3.347644,8.444056,1.905391,1.602694,6.182106,6.219784,-8.581439,-2.490988,6.048166,7.606165,5.549231,-5.776293,0.047589,-9.403400,-5.096468,-1.895015,-1.553065,2.108547,-8.256637,-6.499267,6.676773,-3.530930,-9.655733,7.679669,-8.158449,-8.771293,-7.033441,-2.344197,2.683254,0.533539,-9.136746,-7.902002,7.188825,-8.138928,8.106972,5.964128,-8.923583,-6.935241,-2.456024,2.174714,-1.161471,-0.227367,-8.452946,-2.719374,9.406797,7.883746,2.816461,7.107176,9.983088,-7.263353,-9.604632,2.376286,3.162115,5.399443,-0.627289,5.560242,-6.054896,6.523931,-6.488543,-8.249433,4.088433,8.428800,-2.905460,2.249544,1.496341,-4.547210,5.207945,-0.312942,3.695315,-0.042369,-4.001815,-9.220770,-3.609403,5.479763,-9.892154,-1.135913,2.999572,-9.602623,-3.515932,-8.468443,-7.878531,1.347040,-1.891819,-3.765771,4.413275,8.024948,-1.464175,8.798934,-3.400043,-4.128406,-7.387297,-0.923650,-9.818188,8.031302,8.899313,-1.114049,-6.501958,6.835219,-1.531298,-6.526813,4.032284,0.716182,-5.737692,-8.182312,-9.637507,7.439372,0.650932,-4.142701,-4.581631,4.744535,2.211437,5.380544,6.773383,4.905543,2.067939,-4.205215,2.399846,-2.143496,-2.218355,-8.617064,3.536186,2.492378,-2.763939,7.147112,-0.232157,-0.538819,-8.857569,2.864171,-9.217252,3.537200,2.874509,-2.255482,-0.645696,-7.700100,4.139965,8.871529,-4.540769,-7.125727,-4.239985,5.476694,-0.184144,6.283527,-9.769836,-5.069337,1.693972,-9.779973,9.646604,8.158884,1.082371,-5.760696,1.305490,-4.278611,7.900339,-8.244843,-0.479685,-3.437360,1.214046,0.599753,-8.715335,-6.296406,-0.700265,-1.335855,-3.680558,9.078883,4.904530,-8.545169,7.311060,-6.278201,5.497080,-3.228618,7.030167,-0.274702,-5.081003,-2.607413,-5.865267,-6.711119,1.025599,-8.452679,9.762978,9.350858,-6.133305,7.101634,-8.644289,-5.625638,-5.200889,5.316051,4.604102,-3.162942,-4.970609,-0.605147,0.788476,6.260975,-9.032326,-3.506569,7.527465,-9.933071,-4.897924,4.012715,-7.630733,-0.693910,-5.744426,-3.380746,-8.304022,-3.350555,2.918786,0.238955,5.352764,3.731678,-0.880742,5.802487,0.192393,0.938107,9.223975,7.400292,-3.651249,-4.355981,4.633982,-3.463407,4.383245,-3.707521,-6.234472,-0.467197,-7.230905,4.519048,2.274865,-5.579284,-4.482630,-0.434590,-0.731091,3.705356,-0.692866,-3.679935,-7.467145,7.970466,7.359073,-4.462784,7.191741,7.105581,-7.302029,-5.515862,-7.530795,1.925530,4.129721,-6.230295,3.294792,-2.114393,-3.221765,6.666076,-2.295756,-6.423893,3.915358,2.618854,4.188720,-4.738131,7.627229,-0.134286,-1.458367,-7.458922,0.065630,5.716000,2.843515,-1.553139,-5.454399,-6.639056,-2.281843,-7.235523,-9.142658,-8.006095,0.310672,2.395621,-0.492129,-1.432614,9.781291,-3.974135,6.894278,0.294615,6.652108,-8.820039,-7.825504,-0.036504,-3.532435,-1.469021,-3.001056,-7.183553,6.956959,-3.107561,7.365634,-4.950304,-1.392946,-6.677670,7.322323,-2.024135,4.656524,-9.442076,2.285033,9.081510,-8.343774,-6.916842,-6.598576,-7.094753,2.283279,7.133328,2.658536,2.452200,-5.328731,9.473700,-3.866368,2.752719,8.717624,6.388886,-6.094021,-2.842698,-6.139620,-3.503614,3.135016,-9.171531,4.170515,-1.784506,-5.685243,-0.323315,0.231544,-3.288219,4.540068,1.652605,3.203809,-0.250433,9.726030,-3.135028,0.565385,4.410285,0.505847,0.135147,9.074863,4.789483,-2.893370,7.418680,-7.930691,9.772667,2.197251,-2.466512,9.034647,-9.662132,6.392337,-3.230180,7.512185,2.962894,2.666976,-0.806700,-5.112611,-6.968913,3.652423,-6.355025,9.811516,-8.640347,8.598376,-0.051465,7.792158,4.286570,8.527509,0.475992,3.875610,-9.341412,-8.620345,-3.853834,-6.762406,9.388589,-0.306817,3.496863,6.834786,-6.271728,-9.759265,4.858036,0.179983,-2.323559,-5.932448,-6.952241,2.424188,-1.570778,6.559535,-9.921634,-9.324298,2.870797,-0.343330,-1.453834,-7.957958,-1.049006,8.973148,-8.642379,-3.313037,-3.425532,5.316516,1.836784,6.880712,-9.391362,-1.352420,-8.898463,-8.287369,6.928506,4.735116,-2.926823,-3.333055,-5.768133,-9.887353,-4.952083,-1.878273,1.938506,3.320423,-9.007004,-3.743859,9.340691,6.676588,7.997686,-3.864586,-8.090392,8.692009,9.705970,4.703942,9.652416,9.225349,7.547424,-1.144387,8.346547,0.684901,-0.437502,-6.973812,-1.182011,-3.870002,4.389226,-1.492392,-9.660060,-9.312191,7.570852,9.463409,1.134171,-5.233608,-0.396203,6.906394,5.904182,4.855743,-8.111990,6.007545,-5.815890,2.679821,-1.679257,3.072606,9.056390,8.736616,-2.905803,5.680661,9.442912,-1.599078,7.864314,3.282831,-8.830576,-2.377627,-6.128385,3.423110,7.287047,-6.154037,-8.047187,-1.126028,7.940368,-2.711802,5.911973,0.427580,5.179472,-9.341419,4.026635,6.815615,0.328143,-7.502293,-9.849058,-5.434374,-2.057856,3.316415,-2.841405,-0.122839,0.956299,1.336900,0.906978,4.531669,-6.882825,8.515846,8.888276,9.737752,-8.300382,-8.871637,9.922488,8.285951,2.318938,-3.341075,-4.124739,2.440482,5.962358,-1.682750,3.946424,-1.205215,-9.401200,5.828567,-4.134292,-2.828522,0.460770,1.022410,6.800973,-3.368074,-2.040964,-3.936297,-2.733065,-3.098808,4.270933,-9.574153,3.507941,-1.944605,-2.795649,9.589167,9.958776,4.426960,3.243737,2.676344,0.476375,5.278572,5.069402,0.445166,-3.584639,2.162643,-5.400031,-0.545193,-7.752271,9.940918,8.606710,-5.416560,-9.000964,6.113388,-1.061949,-5.123968,-0.534333,9.759415,-9.006401,3.676353,2.356729,-6.894327,-9.317977,3.265233,7.649710,0.047516,6.777861,7.288031,-2.170649,0.344498,-6.087277,-2.426143,-0.170267,-1.841144,-4.488617,9.881161,-6.636742,-8.698838,-6.191552,-7.312567,-6.866907,-8.673840,8.297485,-1.497596,-1.427468,-7.237332,1.867247,-9.976876,7.516249,-7.426400,-6.765016,0.624734,4.422263,-0.489166,7.530382,-0.727353,-7.576064,5.691666,-7.225435,8.943527,-6.700658,8.896880,6.097687,9.087067,-6.839535,-2.826364,9.452896,-8.264740,3.546869,-8.724258,1.734648,5.926306,-8.892235,2.296560,-3.250707,2.052696,-6.290214,-0.508565,-4.137882,-1.486487,-4.019680,-1.511442,-2.603241,-2.318728,4.698251,-1.118384,5.807896,-1.645393,2.839814,3.853571,6.418341,-2.619824,6.595505,6.225328,-0.566181,7.352072,-0.480247,-7.253331,-7.772732,8.803674,4.333600,-2.121820,4.653963,-0.093819,-3.239155,-0.216517,8.478787,7.933553,3.583627,-2.145713,7.247500,-6.758308,2.992072,-8.220141,-4.249778,2.199419,-0.562921,-8.376178,5.780937,-6.155714,-0.279205,1.433346,8.640342,7.228522,8.187024,-2.985776,2.886744,-8.198981,1.577111,-7.155704,-4.126147,6.695795,3.472167,-6.383918,6.382076,-3.633555,4.867631,3.487427,-2.532575,-4.915143,-2.048566,-8.974856,0.080903,4.432261,-2.567337,-1.912501,7.031821,1.138690,-8.068526,7.376638,-3.225244,0.033975,2.080613,-2.513124,2.432928,1.422344,2.954857,8.457756,1.457853,1.147646,-5.756672,-2.177135,0.474345,-7.460831,-0.337894,3.386059,6.624518,-7.135108,4.996916,4.951053,0.472886,3.263923,-5.723723,-5.613094,4.083052,1.224828,3.777248,0.674326,7.374654,-6.138932,-5.343096,-1.248023,2.970237,-0.405347,1.191936,5.310669,3.028905,9.086697,-5.832998,9.280279,3.448430,6.501112,-4.614787,-7.913249,4.933488,9.429294,-5.332868,0.197284,9.442399,9.046971,1.205062,6.570090,1.954964,1.466960,-6.056876,3.147612,0.958547,3.638129,4.163477,-9.732622,-0.094000,-2.169002,0.774005,-3.006022,-3.176453,-0.620032,3.999387,-1.858838,-0.029887,-2.227399,-5.812990,2.338456,-5.772645,7.372331,-2.071292,-0.882004,-0.174462,7.114128,3.969362,-5.026788,0.668966,1.900707,-2.589235,3.384923,9.836104,-0.606921,5.669763,-9.433265,-1.783212,-9.639489,4.171189,0.790624,0.414348,8.230131,4.023855,-0.379886,-4.165527,7.944814,1.023908,-9.882291,-8.446139,-9.995279,-2.996901,3.418664,1.088403,5.543708,9.537847,-2.026287,6.577223,7.616475,3.488015,-0.431637,6.307434,-5.987720,-5.901241,-7.669729,3.239473,0.798456,4.383654,-2.655185,-9.764097,0.668861,5.162574,-7.439013,1.966725,2.180600,-5.478746,8.800343,1.054223,-6.165038,-7.964010,-0.711728,-8.858070,5.508414,-4.728911,-9.637430,0.088282,-4.254346,1.664209,7.786743,-3.907565,1.745804,-5.997348,1.531816,-3.018155,-9.234047,-3.531074,1.572899,-9.156806,-0.721485,-9.053433,3.588881,-0.901811,-5.983136,-7.022901,-1.234214,-0.533564,3.160198,-5.169407,-0.244943,2.831410,9.793098,0.210999,-4.219993,4.745757,1.257173,6.520808,7.600315,-1.184055,1.485238,-6.532640,-0.073188,2.020982,9.757217,-3.696304,-3.646091,-3.636595,6.641882,-5.165716,3.656751,-4.134916,-9.669337,6.461890,3.486053,8.202249,1.243624,-5.891676,6.622638,1.736551,-0.150164,-7.483435,7.826762,-0.765478,5.264622,-0.600763,3.277856,7.387492,-5.365794,3.768051,-0.997936,-1.250612,-0.457902,1.075866,-9.447533,8.610195,-2.819502,-9.496523,-0.855928,-4.482906,6.140523,1.064271,1.825301,-0.563571,5.648524,9.823970,1.855326,2.626152,7.436184,0.982363,-5.889073,-8.017521,-2.000435,-2.910860,6.182476,-0.727747,-2.570123,1.033794,-7.266260,9.984817,-7.308590,-0.459187,0.316238,3.575958,-0.199469,-3.911940,2.208243,-1.469556,2.397523,9.218607,3.156402,-6.017234,9.636398,-0.391809,1.971670,8.739574,-7.102359,3.586706,-6.713289,-8.604365,8.724990,6.842247,7.601362,1.847015,-8.035800,-0.781737,-9.753432,8.510766,-8.413303,-5.353844,-9.567855,9.927818,7.603371,-9.315594,-4.535870,-5.634484,7.476511,-2.620407,1.895391,-2.806898,-1.913551,-8.710619,3.476569,-4.982403,7.055887,4.011080,0.731950,-3.778535,-2.221003,-5.006484,-3.424877,-3.006471,-7.466073,-0.908059,-5.733103,6.404721,0.996533,-7.607235,-5.974501,5.691581,7.714111,3.328473,5.141528,9.482009,-1.084318,-4.383001,-7.087449,-3.510231,-3.612140,1.758636,5.881252,1.148293,-8.090211,0.421112,2.393770,-4.289296,-0.209812,9.381642,2.798133,7.126012,-4.737001,-1.390453,-6.998317,6.451705,-9.456004,-4.633416,1.682420,-3.777137,1.693661,-9.826703,-7.783473,7.289836,-1.322862,7.574890,3.721881,4.099141,-5.914900,-2.480305,0.558734,9.361472,-6.734435,5.224912,-3.461105,4.605982,-7.435390,-8.364684,-8.555543,9.989722,-9.815084,6.891195,5.116572,5.500594,-4.758028,-3.954684,8.284556,3.500925,1.817726,4.069450,6.504685,8.780164,6.854699,-6.497135,1.476371,-5.724277,-0.200966,0.627963,9.224940,-3.169390,1.534393,9.566975,-4.414594,-7.339300,6.292668,5.883131,3.952765,-0.049691,-7.133231,-2.430756,-0.565887,9.131374,-4.712743,-1.822116,5.103108,-4.984796,-2.961254,5.148464,-7.335209,-7.409097,-5.840643,-8.474485,7.135412,-8.917671,-5.863888,0.444103,9.636738,8.949762,-3.512363,4.202058,-8.878563,-5.742574,0.692558,-8.248981,7.622189,-5.665746,-4.000024,6.497060,6.796768,-1.170830,4.321299,0.952929,-9.109397,-5.067078,-3.570498,7.652639,2.522309,7.696373,1.063724,1.718289,2.174785,-6.303148,-4.066023,0.844050,1.225770,2.432001,9.012892,-5.483202,-2.679002,-9.492761,-5.727916,6.369771,5.673470,1.256735,-1.859245,-7.850201,-0.235384,-8.154901,-7.905299,-6.557173,4.269192,-9.269460,-2.733677,-6.469483,-7.296906,-6.807775,-1.188957,-3.757268,-0.966106,2.334723,-7.369086,-5.663371,-1.674665,-5.363317,-4.381883,1.824196,-7.945924,8.151647,-1.320121,4.432396,-2.824879,1.615216,-2.704374,6.391925,9.479990,5.001972,-8.537235,-7.499042,-6.627394,5.597980,-9.270558,-3.549364,8.565567,0.274465,-3.123074,-5.570221,-7.420078,2.779260,8.127276,-0.623162,1.003114,3.125994,8.449078,8.480014,-4.548304,2.030532,3.871924,2.571594,4.544854,-3.039364,-7.780427,-8.409840,-4.703232,1.017483,-8.751817,4.488129,2.386584,7.195616,-9.055336,0.468664,-0.905053,4.277194,-8.208816,-6.606895,-4.865863,5.855483,7.672315,0.676581,-9.205971,3.490301,-3.075999,-0.013424,7.149168,8.698807,-6.823277,-4.604694,3.521754,-6.795283,6.996207,7.965623,0.270239,-8.471447,-3.423927,4.633158,-1.393048,-7.154498,5.332209,-6.614410,-4.874386,-6.767811,-6.953372,4.272502,1.968252,-2.962770,-0.573032,-7.789390,-4.791068,-3.478555,-6.361745,4.844217,1.033077,-4.768698,4.841929,8.663971,-4.916626,-2.605303,4.490572,-7.111859,-2.200797,4.224406,-4.950963,-9.028668,-7.815664,3.913249,-6.344520,8.552188,-2.952526,-4.452998,-8.569176,-1.358499,-1.600209,-6.615973,-4.979481,-1.308737,2.264372,-3.594261,0.302282,-5.765865,3.867526,-2.914275,1.925902,0.506785,7.517686,8.649036,-1.814994,-2.391185,-7.195263,-2.155070,0.066466,3.751463,-4.170296,-9.770905,3.555416,6.175768,8.614064,-8.694461,7.359319,-3.159006,-0.010735,-6.758497,9.993129,8.602302,1.289533,8.375798,-7.847227,7.493100,-9.094646,-6.280551,2.865105,-2.018546,2.734098,3.900404,2.322734,-7.498252,1.200826,-3.416564,5.363154,-4.883341,0.451061,-6.548235,5.885274,-5.535358,6.282601,0.831237,-4.793429,3.709744,-9.662974,-3.095405,7.278224,6.374730,6.103045,7.264504,4.055318,-1.964086,2.054397,-8.127286,-6.115919,-9.206246,2.402299,-4.762808,-7.633041,-8.937719,-5.566101,-3.873114,8.804400,-6.902403,5.201209,7.659126,-8.926293,5.900226,-2.514377,-7.306320,-0.290077,8.869748,-1.819095,8.404426,7.883816,2.302854,-3.364560,4.330462,-8.766824,-1.054180,-8.164064,-3.788098,9.134107,-5.423807,-0.083401,9.593434,-4.531732,-7.667161,-1.266661,9.995145,3.977175,-1.171892,-8.825572,5.360725,9.705567,-4.317393,-2.073141,-1.538154,-4.456879,5.521539,6.850836,4.518356,4.334078,-3.198287,6.326763,-8.375105,9.035699,-4.325082,-2.875665,-9.372869,3.493936,0.499620,8.124024,-6.943052,9.934070,-1.525423,-0.555872,-9.188332,-6.322486,2.085705,-1.555664,-0.356865,-5.387870,4.979218,4.224916,8.712611,-5.265628,-9.363211,-4.294919,7.660823,-3.837494,7.551045,1.150616,2.845405,-7.636579,3.394874,-7.540402,-3.479445,-5.656951,9.084979,4.139161,-6.847451,-4.318617,-1.101806,2.888150,-1.318499,7.881807,-3.681270,4.593311,-7.697470,6.007413,-7.648468,-7.891410,-7.259033,-0.068396,-5.922397,-6.213718,4.125808,1.038699,-7.507874,2.851379,-5.687614,-4.800604,1.753463,-1.000240,3.708442,3.391935,1.918540,4.961649,-5.185897,-7.779560,1.455524,3.683022,1.240554,-6.859611,-3.232803,-2.728531,2.057320,3.149387,-5.163418,-6.420847,8.059824,5.134798,9.040681,0.146667,-6.434600,-2.166299,-0.449183,-5.495612,-7.403341,8.782545,-1.005044,-2.169323,-8.947548,-7.601076,3.588881,1.417903,-2.165049,-9.132395,1.636950,4.698523,5.879217,2.422656,4.161941,6.347799,7.261041,-4.404169,-6.927684,6.843577,6.523996,3.202295,-2.656918,2.814278,3.083042,7.444793,4.756282,-9.859092,-1.541752,5.342580,4.501418,-1.362292,7.856385,-3.132335,7.662634,3.909024,6.710499,8.711510,3.265734,-4.056500,-3.519874,3.242346,-3.449723,-5.714136,7.163607,-1.897298,-3.651935,6.442754,-7.719883,5.416487,2.171477,-4.679135,7.576948,5.085058,-0.180180,0.964172,3.298878,1.421136,-5.704818,-0.286813,0.385363,-1.758043,2.017747,1.462208,6.755545,1.641714,5.642428,2.059173,-1.178746,7.908596,-1.970098,3.496091,8.760674,8.632985,5.820502,-2.539617,7.507081,-5.411856,-0.779355,-4.494467,5.686028,0.877276,9.171982,7.525380,1.778702,-3.682262,-7.639315,7.053062,-1.257700,6.431334,-2.798461,-9.311870,9.705987,7.680680,1.682273,5.144276,9.803390,5.788550,-0.276840,-9.807970,-7.612467,9.793335,9.820412,-3.755238,-7.229280,4.493762,4.665845,-6.864858,-0.408352,4.228220,0.096446,-7.590147,5.275608,6.066765,3.954186,0.693246,-7.994146,-7.199626,9.105988,-2.605191,-6.321184,-7.447568,9.630168,-7.165130,-9.542912,2.854372,4.764547,5.319729,-1.333988,-4.163394,-7.703899,5.425975,-7.556227,-7.888357,-2.633936,2.575844,-8.059245,1.547909,-5.585741,-7.227365,7.785313,-5.365960,0.132233,7.782695,-3.930815,1.230841,7.897723,-3.314355,-4.472735,2.152162,9.695300,-6.144377,-3.608699,6.009048,4.273650,-0.040980,-7.978297,5.130337,-9.333950,6.404774,-4.764125,3.741189,1.976301,-6.759907,3.410676,-0.768899,-2.545623,-4.330997,-0.282851,-4.914133,0.803587,-7.562469,5.179003,-2.307556,-7.904246,6.937905,-0.422082,-4.422723,-9.559041,-0.876497,-7.503863,-0.784986,0.208799,-0.622421,-1.430940,6.756043,2.541934,9.504371,-7.218454,-8.095125,7.344515,9.142782,-6.825777,9.111922,-1.349371,-8.235112,9.465785,-0.140005,-0.830495,-3.673330,1.024930,-1.225765,-6.596188,1.738521,9.550976,5.800724,0.064244,4.127349,2.703764,-9.616062,-8.629502,-8.976786,1.981336,-7.187240,2.774516,4.087944,-0.826852,7.222493,7.550941,3.296355,-7.651814,-4.674288,-8.936508,-5.879629,-8.877473,9.975289,5.849373,-5.509611,-8.695224,-1.905074,-8.839621,-1.431242,-4.867151,1.176467,3.119421,-8.062805,7.152898,7.769188,-8.264896,0.827125,3.614649,5.694728,6.484394,8.236777,-7.715872,3.172323,0.420764,-7.491484,-3.100324,-9.032343,-6.029733,9.310531,5.026992,6.491824,-2.039296,-5.896870,-9.259269,1.033303,-5.769398,0.551258,-7.415130,8.460851,7.598837,9.827349,7.089181,1.937691,2.637705,5.932029,8.788951,-7.227248,-2.034148,5.104979,7.645040,-8.795706,-7.472128,-9.007134,-8.276103,-7.679053,2.746929,8.471152,7.455056,5.331243,-3.599730,8.019954,8.832198,6.960235,9.896447,-9.642982,3.065630,-7.334291,4.326277,9.913743,-1.293924,7.227069,5.453937,-6.966340,5.315112,0.749634,-9.383219,8.752944,8.163845,9.904920,-3.687723,2.628947,-8.496425,1.967421,-0.020767,-7.941993,-9.054171,7.483066,-1.730029,1.928739,5.797724,6.314749,2.066855,1.369056,-0.238024,5.511797,2.065971,-4.995060,-9.124399,8.652387,-8.190300,9.734521,9.252482,2.443530,-2.384730,4.987247,4.310516,-3.285204,6.941159,8.453020,-4.255928,-0.960308,9.705551,-2.213878,-7.039951,3.214566,8.975480,-5.113987,2.824244,-0.096524,-2.583007,1.116616,5.318490,-1.492112,1.892537,-3.295017,8.637214,0.356913,0.421924,-9.848016,3.620342,1.950721,8.272242,9.883152,4.788771,-6.896088,8.309315,3.336755,9.680911,-3.508036,-8.169287,2.598342,6.614617,-7.423033,-0.701252,1.379284,-2.635425,-8.236555,-0.100415,-4.894894,1.032628,0.021211,-6.368637,5.025368,-7.492848,5.235461,-3.094584,-9.696165,8.804227,3.885785,-6.883605,-3.102858,6.543703,-5.993432,-0.676018,7.622193,9.430516,5.714687,2.499597,-9.537060,-3.491095,-2.776698,-4.834086,-4.061586,-8.889329,9.896278,-9.636244,2.515351,-8.186236,5.207194,8.302682,-1.324110,5.487428,-6.513467,4.065187,6.626319,-1.302428,-6.614635,-7.493446,3.199815,-7.818826,9.824370,-3.533429,-9.262725,-7.434909,6.792348,-1.731653,2.897044,6.919610,8.828861,-7.569159,-9.175493,-2.322077,8.747194,-0.530498,2.801017,2.855491,3.800946,-2.076572,-9.599827,-5.058680,-8.491201,9.527295,-6.793199,1.825634,0.163292,-5.214040,4.142691,4.828306,-7.089037,5.670230,-8.547783,-9.212219,-6.676087,-6.724126,-6.302381,-5.693102,3.243684,-3.392242,8.472742,1.730032,0.981177,-6.226759,6.291652,0.286406,5.708703,5.993065,0.140118,-1.637057,-3.658716,-5.117735,0.506123,1.985556,-3.563176,-1.056162,-3.116020,7.167739,-4.464474,-3.575531,8.557534,0.282175,-6.714933,-0.510436,-5.349410,3.493674,4.466126,7.561048,-5.914601,-2.379583,-7.129396,-0.331491,-7.810910,-2.339194,-0.780747,-7.870076,-4.213964,-7.086149,4.831288,-9.969830,7.811912,-2.228428,4.713075,0.389603,6.687704,1.994057,1.273370,-7.658244,8.342166,-2.432595,7.468469,1.194418,-2.760920,-8.622595,-6.031333,1.038441,-1.730636,9.667361,-3.914281,5.205233,-5.465742,3.561818,6.684129,1.795458,2.396249,-7.387039,1.986525,-7.408895,5.985990,1.224644,-9.731597,-4.195412,-0.219361,-3.899909,-7.802175,-1.646005,-6.086135,-9.580494,5.720473,-8.013470,4.155823,3.379526,-1.625067,-4.001903,-4.747127,-3.388445,6.314643,4.368475,-7.217405,-1.561772,-8.276117,9.648468,-1.297710,-1.485077,9.483564,-1.905324,6.157449,0.360542,-0.013023,7.958484,5.056947,5.893909,-2.499161,8.042739,-8.760814,-2.636503,-7.197806,-2.175404,3.932192,8.093534,4.144890,-3.309072,8.325266,8.589597,2.695367,6.876098,-5.708170,3.813207,1.400214,7.895854,-7.971720,-0.048133,5.717533,-6.353733,0.084769,9.624083,1.995838,5.214546,-2.741357,-2.890911,-7.207859,-9.278615,-1.658241,0.153519,-3.115833,-4.789443,-4.509557,-8.488694,9.075190,3.156741,-1.886923,2.547774,-9.512945,-3.840162,0.934328,-1.597132,-1.584305,-7.536777,8.381312,0.551721,-6.873071,-9.863626,-1.119405,-2.878877,2.147495,7.502985,5.382690,-0.754306,9.324502,-6.079391,2.305658,-6.220689,3.924403,6.257436,8.890996,5.852721,-8.661805,-0.202289,-8.044368,-6.087375,-0.804268,1.199100,-1.084996,3.495137,-5.319867,7.520419,7.256221,-2.657926,-0.713544,8.319065,-0.182305,-8.644647,-5.046613,7.305393,3.792748,5.709706,8.830901,2.286279,-7.703114,-4.938164,-4.353303,-0.454073,7.982065,9.971187,-3.045050,1.214861,5.729381,0.599421,3.581871,-3.373847,-6.050671,-6.856874,-4.354530,-9.836914,4.265996,6.144202,-1.394418,7.857899,-1.129429,2.033698,7.106257,2.559016,-7.695016,-4.076531,-9.055951,0.877138,-4.932250,-6.631406,7.193884,0.158038,2.086824,5.519196,8.646031,-6.953706,7.778931,-9.348243,-3.675213,7.022320,1.488351,-9.155912,-2.772961,-7.085909,-7.940612,8.535028,9.476733,-2.219250,9.577567,-4.721996,-9.771342,9.469336,4.254910,-6.518508,2.142381,-7.837417,8.198207,-7.038790,-3.882327,7.460978,-1.424127,8.133480,2.187615,-1.454890,5.969463,5.966977,3.933752,6.016272,4.332653,7.137962,4.622825,3.100430,-8.046371,-9.465100,-6.968208,7.944343,-5.891566,8.323761,-7.790826,-5.667189,-7.175936,8.955019,-8.623506,-5.020211,-7.748741,6.298427,-6.171490,1.234090,-8.357045,7.402332,2.493120,9.174017,7.502645,0.691323,0.441494,7.761629,-1.792581,6.686236,3.809364,-8.142412,5.427052,3.678466,-3.943806,3.772565,-6.034063,6.098768,6.862362,6.286093,2.193385,1.023687,3.946589,6.667837,1.252230,-4.277928,-9.842739,7.014284,-8.708154,5.656971,1.794934,-9.078066,-7.240328,1.682596,-9.224336,-9.423531,4.373308,-6.739493,6.633516,-9.915668,1.299612,7.052069,5.775013,4.498545,-3.678269,-2.818978,7.661838,7.884036,0.244218,-4.772489,-6.792636,7.556862,-3.130182,-9.842916,1.623008,-4.277680,0.060901,3.706953,-8.953075,2.643794,9.953270,-3.420899,-2.936621,-3.100013,-5.201080,5.221270,-3.137980,2.577378,8.366908,-4.890478,-6.279644,9.935560,-3.475753,0.832086,2.323836,0.503178,-9.665768,-7.950034,-8.577488,-1.308804,9.549439,5.120814,2.576131,-5.442367,-3.110645,9.336922,4.858983,-9.476550,1.867510,8.984414,-2.417149,-9.879172,-2.897651,6.106465,7.028338,-4.612474,-2.437753,-7.225063,-9.284314,-4.883671,4.055251,3.197748,-1.682801,8.532476,1.166510,-2.019379,2.725314,1.757034,1.634675,-9.845391,-4.998106,4.451241,-7.902963,-9.844485,-7.081805,3.717128,0.557657,1.700847,1.304844,7.483264,7.087201,-5.784672,-8.978581,-1.490044,0.648006,3.979108,5.443619,-7.386094,-1.349154,-3.062144,2.495595,0.126114,5.111993,-9.092622,3.964178,3.956722,8.322215,0.340336,7.405750,-4.097013,1.043911,5.264247,-8.824344,-9.934698,-5.351140,-5.559656,3.316685,-6.411749,-8.572483,3.975721,1.753209,-7.691536,-8.193455,-9.313192,5.034937,-7.743787,-9.860047,-7.965635,8.576860,-3.294549,0.506766,6.580764,-2.313605,4.322583,-3.323228,-6.942934,-0.117445,6.604784,-2.906189,-8.057481,-3.317000,-9.425277,-2.425078,1.313327,-9.517963,-9.536992,-1.617916,-1.091290,4.390146,8.613558,-9.084730,2.446542,-6.589020,5.780958,4.676863,9.704198,1.816386,-8.411887,-3.721779,6.937525,8.071197,-0.805691,-3.833648,-0.972781,9.686280,5.178440,6.067894,-1.383906,5.506284,2.336334,6.770836,-5.906390,-3.015776,9.799641,3.308051,3.528880,-1.858609,-5.428488,-3.056397,-4.507966,2.559857,1.991433,6.551726,-9.894091,-2.238579,0.448666,-5.818185,-6.997380,-8.718515,3.663314,-6.876173,7.066766,2.035948,8.546046,-8.183733,0.742604,-7.690808,0.152344,-2.432838,-0.002076,1.226128,-8.554406,-5.447225,-2.022488,-7.220899,-5.280601,1.352876,3.529391,0.698586,-8.882047,2.736694,4.792470,1.001628,5.651095,2.774829,-4.511215,9.262831,-7.887429,2.755245,-5.112920,7.829344,-7.776347,-5.538623,0.568070,2.842725,-2.099879,0.195695,-2.084168,-4.886243,-4.155390,9.771408,-1.662427,4.680846,-1.304809,0.283160,4.499180,2.119480,4.220713,9.597063,-6.302861,2.517682,0.901775,-1.324918,0.791929,6.173680,-3.406270,-0.275840,3.741912,-9.144598,-8.933963,4.083671,-2.715019,5.402256,-3.413039,-4.848161,5.430618,6.480636,-7.139845,-0.041477,-9.813910,1.794080,2.222873,4.377820,9.135915,-6.903268,-4.685908,9.494261,3.120669,-9.709896,-2.019143,-8.095238,-5.762702,-3.267916,9.956928,-9.145967,6.531557,1.140701,4.796011,3.211464,-2.126036,-9.735813,3.261514,5.485070,8.794677,8.666033,-1.249262,0.820034,4.457503,5.229995,7.264981,1.330942,5.929304,4.071178,6.819576,1.719479,-3.874998,-8.159981,-5.116821,-2.155049,-9.933671,6.724416,4.447103,0.165281,-0.004439,-1.308625,7.135286,-1.083993,-5.005304,7.998496,4.302237,4.671352,5.357328,5.686195,0.634771,5.882464,9.764774,-7.166486,1.845713,-4.611942,-7.912380,3.739964,-4.149779,-9.502141,5.457156,-5.719980,-7.409443,6.532956,-2.769213,2.914422,-1.098688,5.967191,5.924281,8.819276,3.384568,1.199179,-9.415193,6.766723,-7.503445,6.489996,-7.387129,-3.726894,6.296351,-3.679453,0.759388,2.201858,-3.280401,7.332353,-3.348150,-1.136899,-6.343914,7.979070,2.399681,6.410876,-8.592546,2.501731,0.521824,5.155016,4.536582,-0.842632,-4.346707,6.566618,-8.954277,-5.796397,0.501707,-2.347763,-4.968794,-9.496287,7.949626,-9.133139,-4.651810,-8.031341,1.792679,-4.817022,3.095838,0.126338,-1.611559,-5.419815,-2.788615,3.246186,5.750025,7.242556,9.937600,2.319384,-7.983740,-5.532639,-9.176031,-4.361277,-8.943875,-9.238723,6.581003,6.323018,-7.616235,-6.919440,8.492725,-6.777044,2.784415,-3.715248,7.988239,8.610901,7.537463,-5.735439,-9.591497,-2.722069,3.386601,-5.071974,-6.595979,-5.908186,0.136437,0.914949,-1.957543,-7.564294,-2.048851,-6.947853,-6.097314,9.769765,7.252710,3.626843,-6.975328,3.345617,4.359635,-2.265010,0.001571,-7.524381,0.896961,4.508208,-4.326901,4.936771,6.171056,-3.450623,-9.337198,8.389705,-6.608899,3.099710,-6.257026,-5.254101,3.487095,-1.376333,-7.188904,4.301649,-6.884287,9.190800,-2.005592,4.938422,0.335388,-5.598982,3.208928,5.712631,-4.258205,-4.120613,7.288922,-5.804986,9.039540,-9.941551,-4.154928,9.131234,-5.169088,4.033279,-4.750909,-0.600691,-8.836149,5.172171,9.669409,9.158883,3.436771,-7.420857,4.326074,2.053031,8.609929,-0.178559,-1.046563,7.032583,-5.456259,4.161968,0.073764,-5.613514,-5.966160,-9.218184,9.415286,-8.056415,0.460121,5.944741,1.045644,-1.901408,-0.674094,-3.792259,-5.285812,-6.104979,-5.329290,0.163856,2.285249,-2.160670,4.403484,3.142939,-7.859698,-0.842643,8.753058,-4.313817,-0.753225,1.916970,0.010654,0.766900,0.799321,8.873547,-1.735956,-2.119991,-7.198923,4.258319,0.910202,-7.432843,-2.842692,4.676003,0.249345,6.892244,-4.952526,-2.846426,-9.098762,-1.971113,8.706495,-4.648495,-4.685323,-5.623216,9.636975,5.483894,-8.835575,-0.116055,-9.559455,-8.692733,-0.787823,4.211694,5.156885,-3.677298,-5.265819,0.918655,-1.896939,2.460118,-8.627975,-6.086865,3.350245,-6.771403,9.257310,5.947850,5.602961,2.192522,4.840562,-0.175425,6.832817,-8.277042,9.027706,6.159608,6.680614,6.554959,-2.175512,3.729926,2.585686,-1.656788,9.007706,-6.907625,1.740863,-5.912122,-9.515889,3.176588,0.283691,3.061324,-4.020692,6.396204,7.781643,7.706279,-7.321212,-0.490680,9.508563,-2.013671,-4.851121,3.494470,4.235773,-9.247465,-1.028618,4.241303,2.080873,7.405145,8.800158,-3.174452,4.278685,2.820222,-6.280174,2.256912,-9.307799,-6.328326,-3.367195,-6.647992,3.123367,0.463090,2.806696,-2.471527,-2.167077,-3.254328,-2.998546,-0.980944,-3.008799,6.160742,7.034632,-6.077976,-4.065234,-7.510154,-3.251458,-1.279160,5.352759,-3.052456,-1.060955,-4.052851,-8.582558,9.686581,7.456642,-9.551022,1.020581,-8.212341,-5.073286,-0.100921,-9.132901,7.956420,9.439868,-2.850340,2.228624,2.645227,4.846882,-2.674442,-7.525150,-0.048161,-2.231247,-0.053084,-1.627002,-9.890268,0.706313,-3.280881,-7.465486,2.518357,9.834668,-1.460772,-6.245170,1.506811,6.948951,7.645606,1.334932,0.811971,-9.077095,5.528303,1.358303,8.501683,-0.207747,-5.990725,3.126286,-5.757848,3.942544,1.828153,7.100446,-7.333389,9.779013,-1.648988,6.332445,-3.644850,3.404965,2.045161,8.840698,-3.624171,-3.468559,-7.010124,-0.662122,-0.325658,-0.218138,2.364895,-7.046288,-3.562537,2.824565,-9.343916,1.234575,-3.470266,-6.579284,9.728207,-3.277710,9.719704,-3.662255,-5.166036,1.892176,-7.574077,-6.261768,8.006587,3.640457,-5.383427,-1.733540,-2.009945,9.038117,0.922150,-1.083366,-5.663049,-5.561716,2.603253,1.541574,2.989399,-1.266092,-3.893742,7.910336,-2.882739,-5.780285,6.680683,3.724762,-8.921953,-4.206012,4.382612,-3.552388,1.951375,1.264540,6.475756,-0.057045,6.861244,-3.690842,1.286663,3.253032,5.415675,6.902163,9.371636,-6.400298,6.889531,5.551233,5.943645,-0.912176,-4.853343,1.941114,2.366216,-5.059840,-6.128027,-0.554910,-1.500746,1.073942,0.606113,-7.796857,-0.672291,-0.208053,3.668030,-0.275355,1.621696,2.874686,-7.004879,5.071544,-7.106350,8.821738,6.428421,-5.490958,8.610869,2.576570,-4.380095,5.576931,-5.778092,4.494682,8.695378,-3.402676,-0.960700,-4.169514,-9.885216,-0.860656,4.015468,4.227830,-0.652231,-3.441753,-0.353182,-6.287261,8.747255,5.654327,-4.011055,3.871947,-9.638515,-4.461706,5.932034,2.910536,1.178797,-6.299244,5.215800,6.488285,-6.851072,-1.868578,7.090016,2.051749,-1.734463,-6.466911,0.944918,6.298043,9.561073,9.362419,-3.224401,-9.751840,-5.289969,1.893262,-6.463989,4.746811,-3.864351,0.920503,0.118826,0.147461,1.925553,-5.720577,8.410724,-7.675284,3.953312,-6.676214,3.888852,5.197042,9.779019,1.098888,3.292818,-2.697222,-3.106784,4.652992,7.820843,-3.025815,-8.168185,5.246666,-6.945398,-0.329426,1.293170,8.032715,0.072997,1.307715,3.080984,6.430099,3.475364,8.109697,5.345771,3.569139,6.317067,-6.016358,-1.136661,3.936418,6.244029,4.633061,-9.608415,0.401743,8.810807,7.084631,-8.193894,-3.471714,-8.506123,2.298010,-4.152346,-8.795745,-3.237453,-7.798763,3.898819,9.254800,5.050617,3.412966,-8.439300,-5.614247,7.640722,-8.483003,-5.134074,-1.496421,-0.909802,-3.683179,-3.560970,-5.890217,3.957744,-2.054030,6.422725,-6.144561,-6.513637,-9.688222,-7.759209,-2.169175,-5.673414,5.161746,6.086841,-0.150478,-8.428534,6.542351], dtype = "float64")#candidate|4646|(3360,)|const|float64
call_4645 = relay.TupleGetItem(func_3657_call(relay.reshape(const_4646.astype('float64'), [14, 16, 15])), 0)
call_4647 = relay.TupleGetItem(func_3660_call(relay.reshape(const_4646.astype('float64'), [14, 16, 15])), 0)
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
const_4657 = relay.const([7.210477,-4.450352,-5.055048,3.019441,8.041603,-5.580563,-8.281937,4.035182,-4.005059,-6.823750,9.951773,-9.498152,-8.838391,0.189048,7.530595,-9.578680,1.427397,-4.717215,-0.121122,-3.379967,-1.476938,7.082031,-6.176766,9.538552,1.585576,-7.201970,-9.098654,-4.579686,-4.686447,6.382791,8.801183,8.875439,-6.489165,-6.090292,5.124176,-2.098985,9.229393,9.641560,6.722849,3.318274,-1.930828,7.678223,-7.710950,2.851329,7.736489,-8.285494,-4.869572,-3.886226,-7.013563,5.753676,3.327391,2.236762,9.940864,-0.785402,-5.847823,-5.577213,-5.729495,4.373832,2.653447,7.620726,9.888718,6.083724,3.319010,8.998476,5.967286,-6.665791,-9.100025,3.919771,-8.954642,-8.918763,5.016218,1.507584,9.837517,2.302362,-0.041362,7.989466,-2.949198,3.521174,-4.557131,1.960212,-4.123167,7.943006,-2.008479,-2.986923,-2.929948,7.679784,5.499412,2.207720,3.369856,-9.913580,-5.315391,-2.871602,-5.870325,-5.640804,-5.015814,-6.547976,6.420572,3.433269,2.798702,-1.053513,3.261860,7.673992,8.023540,2.008265,9.306090,-3.136638,5.948435,9.716378,-8.056026,3.803559,0.763862,9.242023,9.210405,-4.859013,5.760448,-4.762455,-3.677427,8.183024,7.300381,1.459886,-5.683449,-2.926736,-5.882984,-4.566702,9.191021,9.487161,8.216555,-2.662192,5.878609,3.717990,9.180171,0.846692,-3.980786,0.729615,9.645357,-4.122789,-6.431049,-8.683138,-2.743192,-0.545408,-1.035172,4.420696,-6.602356,-5.448975,-9.865211,-9.170853,9.047932,-4.519164,5.870112,7.979423,-5.855961,-9.301135,-6.724035,4.123882,3.538844,5.275062,4.421241,-7.986513,-6.293530,0.943518,-9.723498,-7.995014,-7.847092,9.958707,7.330247,-5.364815,4.626628,-9.887289,2.257298,-6.236992,5.445603,-0.023490,-6.154939,0.246256,4.838067,-9.817146,-8.401943,-1.306723,2.965734,-4.675721,-4.086157,-8.755043,-3.342841,-7.294683,-6.627907,-5.094530,-9.124320,-4.427942,2.982004,7.298271,-0.465009,2.991797,-9.552327,2.205963,2.449256,-4.647999,9.868425,2.604962,-1.155340,6.812354,5.342030,-3.535071,4.484795,-0.459030,-3.172610,6.608286,9.998507,-8.421570,-2.814198,0.967204,3.775524,-3.785727,-1.881957,-8.473491,8.274501,2.464934,-4.515262,-1.185749,-2.656503,-9.795050,-9.011021,-8.410996,-6.731442,3.296842,-4.143452,6.061235,2.077740,-3.015813,4.674352,-8.470554,4.417840,1.314945,5.494025,1.258214,2.584954,4.893090,3.440502,8.034230,-6.742464,0.550029,-0.600106,-3.915832,-1.834533,2.582748,-5.767353,-8.787890,-4.212624,4.914330,7.749343,9.355555,-0.619177,-2.711806,-8.640470,-0.968859,-1.599158,-9.258466,-5.180281,-6.808042,5.851587,-0.610407,7.293483,8.743939,6.445267,-1.325404,0.615195,1.119785,-2.429731,-2.126922,1.980573,7.162666,-6.685007,-3.254441,-6.316194,5.416856,1.380631,7.669112,-7.103152,-9.179982,8.416268,-9.282477,-8.977819,7.381418,9.752948,-6.257214,-5.997290,-3.354410,3.746592,1.762210,-4.221471,7.815215,-3.991347,-1.381821,-0.319613,-3.174293,5.282610,-6.640737,-1.559866,-2.160783,5.897832,6.383591,-8.104386,-1.329149,-4.172582,-8.436496,-2.048621,-5.814193,-0.013659,5.078772,8.599520,2.262813,-9.482378,5.340915,0.258058,-6.313349,-5.697338,-5.908189,-7.738020,-6.440957,-6.818819,1.702332,-8.891623,3.148453,-1.973015,9.188635,0.897347,9.391501,3.588040,-1.350604,-3.845063,5.936830,-6.449515,-5.578102,0.055096,-2.288536,5.611852,-8.640891,2.460141,-3.705460,3.002037,-4.801178,-6.976541,-9.155390,-4.191155,-4.258578,-6.461678,2.036876,4.251682,4.249619,-8.802042,-5.475243,1.767816,2.614233,1.278675,-1.104570,-5.462723,7.322864,-8.106584,-0.600473,-1.819046,-2.308786,-8.654365,-8.078663,4.056832,-8.033735,0.186502,4.597959,-2.374672,9.597922,-9.068433,-3.051888,-1.178393,-9.348262,6.635425,5.978673,3.843977,-6.361210,1.020385,-9.310636,-4.572577,-8.436640,3.196312,-9.171222,5.336997,6.960600,-5.136157,-5.424763,6.909799,4.296831,3.259673,6.802789,-3.071394,-0.458414,-0.968778,-3.431692,-8.200877,-2.099000,-1.638037,3.328382,-8.451275,-1.484351,-6.936105,-8.621991,8.595194,-6.832865,-0.150882,2.430381,-1.571494,1.463642,-0.491023,1.564545,-4.483577,5.359204,4.397267,-0.161692,2.875513,-0.842726,2.800649,-6.502168,-6.510605,1.248003,-2.200032,-4.483840,7.615137,7.218992,1.693772,-8.356886,-8.334594,8.055974,-1.070838,8.125004,-1.542376,5.859128,-1.996873,-3.167757,-9.631704,-3.365455,-0.295609,1.231725,-8.745410,-2.736789,-2.449451,3.081190,-3.205336,-8.203995,5.923180,-6.439736,0.600247,3.639634,9.701302,-0.757064,-5.777691,-2.967583,3.049049,-2.602422,-1.172389,-0.699934,4.594328,6.623943,-3.945806,-7.312387,-9.526345,5.119949,-4.052457,2.391005,-9.828329,2.013077,-4.370275,6.725474,-0.492426,9.310132,-3.169404,6.766098,-4.222856,8.747714,-5.918201,-1.860053,6.155738,-0.847901,-1.654339,8.130260,5.486954,3.154203,6.818574,-2.113241,-4.934128,-3.811681,6.049840,-3.823360,3.466718,-4.716823,3.206950,-7.777739,-5.050239,-7.159718,-9.435366,5.401384,6.239782,-0.753815,9.079826,-4.856535,-8.856173,2.750955,-2.961776,5.906869,0.825894,0.806847,-4.928805,3.904676,-1.401215,-8.382771,-8.329954,-5.053417,-4.456825,-2.865121,3.424113,-3.826293,6.691647,7.039661,6.051364,3.996266,-1.385741,-4.604406,-9.202853,9.817472,4.529684,-1.582377,2.861397,1.448850,5.256436,-2.543140,-1.673831,-3.239753,-0.059341,0.050086,7.902297,-6.060485,4.591005,-6.750711,1.358413,-8.285452,7.586666,-1.680017,-9.456025,4.146697,3.603885,-1.071538,-9.909215,7.860729,5.309691,-0.692234,-2.971066,-2.022314,5.467793,4.682490,9.891325,-2.089270,-4.063516,9.313994,-3.229513,-3.074067,-4.870911,-0.609217,-2.592595,4.144395,-1.858915,-1.314928,9.260303,8.087113,8.774081,5.676759,-6.180265,-9.162424,-2.923627,5.585451,-6.920696,-0.865040,6.163433,4.453971,-7.820693,7.003198,-7.536373,6.366963,-6.997817,9.017708,-9.495082,-5.714673,-5.967041,2.685717,5.940363,1.656995,0.361681,-3.915912,-9.770061,-3.006663,1.887107,-3.898357,2.375287,0.762000,-4.490598,9.680480,8.383357,4.059723,-7.354446,-7.615579,-6.613714,7.163123,4.571724,-7.576393,4.514072,-1.774311,-2.530905,1.675565,1.390270,2.531783,2.663424,-3.417209,3.386511,-0.638805,-8.515169,0.783981,-4.716717,-1.080792,-0.033348,-3.543575,4.913230,-0.678097,8.624723,1.824048,-8.393345,-0.158164,-7.041141,-5.955169,-8.278584,1.826153,1.146532,4.759558,-1.686668,4.700785,-8.463056,-1.602083,4.305084,4.658728,-9.944325,1.800856,-2.012542,-0.370997,-9.018959,-8.136811,4.034020,4.505436,-0.030124,7.412067,8.336279,2.971212,-1.542005,9.492387,9.892037,-3.154496,-3.200675,-4.512331,4.906047,7.090921,-9.843523,-4.225075,2.001749,-8.920054,6.913965,-0.936757,7.492965,-6.220508,-4.036584,3.413750,4.926373,3.672172,8.436991,-1.166513,7.774388,-5.745623,2.730842,3.503718,-2.538315,-1.233596,7.353695,-5.934264,-2.540392,-4.365309,1.047740,-8.852887,3.409828,-9.467366,-6.698517,8.156726,-5.364114,3.471408,8.020832,-2.336557,-7.522567,2.601978,-1.833323,-1.409958,-8.903467,1.346755,-0.273826,-0.621820,3.245947,-3.620237,7.219127,8.364671,9.384148,1.920189,-3.966925,1.211550,-5.557282,-9.014221,-7.077158,-4.053382,-8.124218,-1.165105,7.965728,-4.055994,6.710776,-2.602732,9.114504,-9.197432,-3.867924,0.310246,-9.841281,-8.502889,2.102790,1.723992,9.877736,-9.420757,2.766671,4.960661,-7.844594,7.617107,-3.786402,-8.939762,-5.001452,1.161977,5.077742,6.797354,2.019180,-8.317745,-9.782152,-6.259314,0.217007,9.199956,-7.275905,-2.677114,7.331888,-6.949879,1.942492,9.315722,-6.951237,2.493453,8.424938,0.816823,-1.935149,1.428372,5.026403,-4.374968,-2.478994,3.029031,-8.429185,5.600447,9.214978,-9.046724,7.943642,-6.656836,-0.368550,2.980422,-6.568273,-6.071228,-5.608727,-1.874679,9.858230,4.557258,-1.643112,-5.019445,-0.267302,-9.292395,-6.253366,-3.886520,-8.933857,3.796366,-6.604389,-8.242340,1.148783,7.064592,-6.825493,2.983741,2.397586,-8.664550,9.493409,-7.521226,-1.673635,7.943939,2.549782,-8.956521,7.510237,-5.316424,-5.282563,-3.164236,9.898155,-3.528782,6.832013,-8.937413,-6.266021,6.223373,7.708744,2.310790,-5.438760,-4.754441,-6.936177,-6.401834,-7.885478,-5.906852,8.243624,-1.188024,-4.749970,6.881477,-7.681792,-5.958986,-9.006874,-9.910176,-3.577343,2.633077,8.061532,-4.936137,9.525683,1.691367,-6.871889,-9.895402,-8.279045,-4.230249,1.266236,8.592422,9.367417,-4.572582,3.304280,-4.513098,-1.785282,-1.283914,2.657145,-3.383296,0.615320,0.304280,3.649402,-7.613805,-6.210507,-7.274088,-2.206258,-2.103515,-1.094557,9.342801,9.141594,5.876720,4.236782,1.165309,-1.693722,3.643929,9.147829,3.003118,5.061797,6.984652,4.778466,7.592976,2.010035,8.936912,8.928700,1.270508,-8.895335,-7.402579,-0.239501,4.847534,7.080879,8.635622,2.712096,5.117298,-1.690494,-6.639867,6.984387,0.412726,8.770577,-9.788883,9.960861,-7.072302,-5.029492,2.521398,-7.022713,5.600737,-0.474887,1.373092,-1.855143,-2.958784,9.807066,-9.550660,-5.556939,0.273575,-9.278754,-9.616148,3.381758,-4.664714,-6.214961,-4.153887,-5.554257,-4.199315,-3.079112,-8.594163,3.880895,3.854750,4.523012,0.302692,7.705329,-6.916309,-0.248657,0.274775,3.827086,4.681448,-8.345100,-4.272859,9.741776,7.439551,-2.669394,-3.708160,-5.192388,-6.547113,2.645038,7.498030,-0.904361,1.478267,7.555172,-3.825422,-1.484348,-3.390272,-6.211295,0.757803,5.369041,7.057100,-5.135201,1.126021,-0.913528,-7.396615,1.240540,-8.886218,2.182035,-1.512443,1.804766,7.722596,-1.617854,-6.677272,3.846850,8.696384,-4.533278,-2.524269,-1.517785,0.949007,-5.396725,5.040891], dtype = "float32")#candidate|4657|(960,)|const|float32
call_4656 = relay.TupleGetItem(func_3066_call(relay.reshape(const_4657.astype('float32'), [16, 15, 4])), 0)
call_4658 = relay.TupleGetItem(func_3068_call(relay.reshape(const_4657.astype('float32'), [16, 15, 4])), 0)
output = relay.Tuple([bop_4639,call_4645,const_4646,call_4656,const_4657,])
output2 = relay.Tuple([bop_4639,call_4647,const_4646,call_4658,const_4657,])
func_4680 = relay.Function([var_4637,], output)
mod['func_4680'] = func_4680
mod = relay.transform.InferType()(mod)
var_4681 = relay.var("var_4681", dtype = "uint16", shape = (6, 10, 5))#candidate|4681|(6, 10, 5)|var|uint16
output = func_4680(var_4681)
func_4682 = relay.Function([var_4681], output)
mutated_mod['func_4682'] = func_4682
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4895 = relay.const([[[7.395806,-1.883687,-6.436301,9.534827,-2.132767,6.035661]],[[0.372241,8.870767,-6.616123,0.864617,-8.347053,-3.883885]],[[0.063042,2.663273,-4.774368,-0.338207,1.346305,3.038532]],[[-8.750328,6.130047,4.884332,9.879717,0.623519,-5.544325]],[[6.092434,9.782929,8.229917,-5.202460,6.784224,-0.133366]],[[-1.029701,9.355028,3.050710,9.031033,6.254056,5.318921]],[[-2.951537,-8.711421,2.249860,6.295253,-8.416390,-3.214155]],[[-7.499964,-8.133415,6.452002,-3.578148,-5.252378,3.289533]],[[-8.223678,7.643227,8.452772,1.716724,4.941308,-8.645966]],[[-6.111390,-5.593779,-5.794327,-2.296856,8.231237,-4.984342]],[[-3.430847,-4.762326,6.002640,-3.494195,-9.960740,8.828026]]], dtype = "float32")#candidate|4895|(11, 1, 6)|const|float32
uop_4896 = relay.asinh(const_4895.astype('float32')) # shape=(11, 1, 6)
output = relay.Tuple([uop_4896,])
output2 = relay.Tuple([uop_4896,])
func_4899 = relay.Function([], output)
mod['func_4899'] = func_4899
mod = relay.transform.InferType()(mod)
output = func_4899()
func_4900 = relay.Function([], output)
mutated_mod['func_4900'] = func_4900
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4955 = relay.const([[[-6.463711,4.695563,-5.458893,7.891446,-6.167011,5.131672,4.965423,0.109319,6.078060,7.424399,-3.140505,6.137995,-9.536839,-8.409103,-5.217787],[-7.310688,2.731823,-4.799112,5.511778,8.384406,9.385495,8.709458,-4.081870,6.010701,8.113364,-6.971595,7.821723,-8.394111,0.252573,2.088860],[-3.915817,4.465748,2.211053,-2.516557,5.318879,4.399271,-8.659263,2.468991,3.367062,-3.816543,0.989339,7.502635,-1.177294,8.316149,-8.291255],[-3.421284,-2.761517,-4.675528,2.365868,-9.162927,7.556460,8.354446,0.213772,-7.022388,-4.935180,8.250049,5.214911,-2.611608,-5.378808,3.443766],[-7.956188,-0.530047,9.499813,2.362502,1.053449,-4.506504,4.209597,-7.318320,-9.699374,6.318608,-7.478928,5.898767,9.928135,8.137888,9.290354],[-5.332807,-2.330216,-6.486281,-3.567212,8.858787,-8.613457,-1.025387,9.324994,-8.254295,7.556519,-4.581781,-2.866493,7.671040,5.444622,7.770030],[6.009273,3.019513,-0.447540,-4.337349,9.569659,-7.035843,4.517766,2.978007,-0.211956,-5.273874,6.348527,2.399508,-9.445068,-1.099430,7.614909],[-4.767259,0.238796,2.450717,-6.511329,-5.056979,0.270315,3.462444,1.534941,0.259105,-9.983066,6.172434,5.092651,2.790790,4.849142,6.859976],[9.642363,-8.464339,5.878464,3.942627,8.204797,5.498279,-4.544982,7.372730,4.013369,8.829949,-9.346272,-4.613083,5.423463,-4.105293,6.917494],[-5.162348,0.628323,7.228367,-9.061433,-8.017527,8.382022,-9.931101,-1.565120,1.214930,-6.882215,9.573283,-2.311190,-6.624995,3.791947,-8.998453],[0.851673,-6.948957,1.558868,3.564167,-4.810296,2.077653,-6.796523,6.902594,5.007600,-5.392274,-9.120583,4.878506,5.569015,-0.983594,-9.466356],[8.883341,8.834340,-0.786940,-3.112725,-6.648937,-3.754486,-1.540024,6.526839,2.279830,-7.292782,1.563910,-8.922564,2.604572,-7.924610,-8.513394],[7.789477,-2.637765,2.725271,0.317920,0.323920,-0.160908,-2.206788,-6.987694,1.809869,-5.847282,9.493737,-4.033136,-5.675973,-8.435078,3.102364],[9.502124,-6.092383,-7.818917,6.762620,1.105786,4.090959,-7.335024,-1.427160,-3.375641,-1.924191,-5.359796,-5.792675,1.452371,-6.768986,8.457973],[1.788195,-7.206594,3.847226,7.085670,2.016636,4.164780,7.838844,-0.810207,-6.112044,4.417616,6.739327,-3.594747,-9.964749,9.914473,3.329746],[-4.465039,9.472914,1.309505,4.415567,2.295562,5.922473,-9.968326,-5.551989,3.507597,8.728004,-8.316124,-7.341138,-9.497932,-8.579353,7.844459]],[[-3.162374,-7.665557,2.355251,-8.399205,4.559406,8.592270,-0.056016,9.994183,-0.125805,4.987668,5.706724,-5.381723,4.791611,-6.671121,-7.440134],[1.028421,7.174046,6.454415,4.534920,-9.002249,8.137770,-6.834993,2.005823,1.490238,-6.673247,3.598057,-3.354417,2.908492,-3.770276,4.350740],[4.639838,8.642639,9.939822,5.288824,4.677600,7.297579,8.477876,-1.246927,9.341515,-0.040001,7.072773,4.853330,-3.385983,5.670317,-5.023143],[2.664193,7.436244,-4.647708,9.559092,-3.559660,7.046236,-4.065633,1.129445,9.186588,-1.565464,-3.879206,9.854094,9.140334,-7.325189,-3.258783],[5.667662,-9.576098,1.599613,0.705583,6.197598,3.703533,1.872126,6.867342,-3.185467,6.332618,3.012011,-5.506802,0.119837,-1.742303,-7.555184],[-5.676577,-4.029169,2.210912,-9.069728,6.486953,-2.280210,-9.420513,-0.868622,-2.843836,0.799976,6.305666,7.573024,6.340688,4.722572,-7.671623],[4.530180,2.777693,9.296440,0.723346,-7.041442,5.164618,1.411497,-0.808016,-3.002139,-7.809763,7.982695,-3.941610,-9.250259,7.395205,7.968223],[0.057425,1.059583,-1.245070,8.342486,-5.962218,-5.341080,-8.564958,6.502655,8.973396,8.635989,3.797908,3.742458,6.322574,-7.612967,8.188703],[-2.940014,-5.980239,-0.134817,7.310419,-5.878560,4.023613,8.132057,-2.652335,-9.353243,-6.888403,5.974394,-4.640631,6.691105,-3.963869,4.206583],[4.598757,2.669838,9.380396,2.358410,2.152809,-9.709280,-4.959143,4.550934,-5.091177,9.822362,5.871536,7.203677,4.725663,-2.118513,-7.674519],[-0.479556,5.422861,6.506591,0.500788,2.879595,-1.249297,3.760458,-3.685492,0.998704,-9.580154,7.759857,9.508945,-7.914583,-1.249056,6.322919],[-4.063645,-1.762653,1.200700,-7.546028,-8.433928,3.157695,7.527951,-9.868317,6.504707,-7.937934,-5.152301,-2.754858,-8.216300,-6.915000,0.406108],[7.613799,4.218757,6.547964,8.756694,0.422758,-7.547001,-8.865050,9.066284,8.017695,-9.899712,5.512322,9.612598,3.204522,-7.160959,-3.740873],[7.046985,6.994619,-2.283801,5.584787,-6.847392,9.697579,1.767423,-1.465003,-2.317816,-2.272385,3.156898,9.441377,9.849976,6.400320,4.903533],[6.461646,3.167868,0.594254,4.169075,-1.562199,-8.884602,-1.371706,7.208270,-9.990823,-8.570368,3.376542,-5.480616,4.875783,7.906373,5.477093],[-4.103214,6.107628,6.469001,5.654514,9.261004,-0.511059,-3.504602,1.784834,3.513841,7.548089,-1.586258,-9.822934,-5.375439,-6.082099,-2.682594]]], dtype = "float64")#candidate|4955|(2, 16, 15)|const|float64
uop_4956 = relay.cos(const_4955.astype('float64')) # shape=(2, 16, 15)
output = uop_4956
output2 = uop_4956
func_4964 = relay.Function([], output)
mod['func_4964'] = func_4964
mod = relay.transform.InferType()(mod)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mutated_mod.get_global_var('func_4964')
call_4965 = func_4964_call()
output = call_4965
func_4966 = relay.Function([], output)
mutated_mod['func_4966'] = func_4966
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4992 = relay.const([[[6,-9,1,10,1,-2,-6,3,-4,2,8,1,8,2,8,10],[-6,-8,-8,-8,6,-8,-10,2,5,5,-5,-5,-8,1,-8,9],[1,8,8,8,7,8,7,1,-6,-7,3,-6,-8,-7,9,2],[-7,-1,8,1,-7,3,1,-8,-10,-9,-7,-4,-1,5,8,2],[-8,2,-2,1,2,-3,-6,3,8,-9,-7,3,-3,-10,6,8],[-4,-9,-1,-6,-4,9,2,6,-2,-6,-7,8,7,-10,-9,6],[7,10,6,5,8,2,4,9,-4,-6,4,-8,2,-4,6,-6],[5,-3,3,3,-1,-1,-2,10,9,-6,10,4,1,2,-7,-2],[-4,5,4,1,2,10,-6,1,-6,8,10,7,1,-1,-8,3],[10,3,6,9,8,2,-10,1,2,10,-5,-5,6,7,9,-8],[-7,-2,7,-9,-1,-10,5,-4,3,9,1,-4,-8,-3,-10,7],[-1,10,-10,-4,-1,-1,8,-5,9,10,-6,9,7,4,-2,-7],[-9,3,-8,-10,3,-7,-7,5,6,8,-2,-9,-8,6,-1,-4]],[[-2,10,6,-8,1,4,-10,4,4,8,-8,3,-10,-7,-4,3],[-10,3,-3,8,8,2,9,-4,7,-7,10,10,-10,1,7,-9],[7,4,-5,-5,-4,-1,-2,-6,-8,1,-4,8,-7,-10,-4,-3],[3,2,2,10,-4,-7,-7,-5,-7,-5,-9,-8,1,-3,7,6],[5,-7,-3,3,10,-4,-4,-4,-5,-3,-1,1,9,4,1,-5],[6,-3,8,8,7,-7,-9,1,9,8,-5,9,-6,9,5,-4],[-5,-1,5,1,9,3,8,-4,10,-8,-3,-8,-1,6,2,-6],[1,1,7,9,1,-8,6,7,-3,10,1,-7,-8,8,-7,8],[-6,-5,5,10,6,7,9,-9,-9,2,-10,4,-4,-7,-1,-8],[-7,9,-6,6,-9,5,6,-2,-4,9,-5,-3,9,1,-6,6],[-3,5,-8,-1,-5,6,-2,-8,-5,4,2,-1,7,1,-1,9],[6,3,-7,10,3,-3,6,-5,10,3,7,3,5,9,2,2],[-4,-9,-1,2,7,-1,9,-4,-7,3,10,-8,-9,-3,-7,-1]],[[9,-1,-1,6,-10,-8,5,8,-8,6,6,-5,4,-9,2,-1],[10,-3,7,-6,8,-6,10,7,-6,8,-10,8,-10,5,5,-6],[10,-5,-9,-5,-8,2,-8,6,3,-5,-8,4,-10,-3,-5,-1],[8,-5,8,4,3,-4,6,-5,5,-9,-5,-2,-4,-1,1,5],[9,-6,9,2,9,-3,5,1,7,4,7,-6,-10,9,10,-3],[-3,5,3,2,-3,-5,4,-10,-10,-3,-10,-7,8,6,-9,7],[9,3,-9,-4,-1,-1,-6,6,-5,4,-9,-8,6,-7,4,-8],[7,-5,-6,9,9,-2,10,5,-8,1,-10,4,-4,3,-4,10],[-4,-8,-5,10,6,3,2,9,4,5,10,2,-10,-1,7,8],[8,2,2,1,3,-3,-9,3,6,-9,-9,10,7,-6,5,-6],[1,-10,1,2,-3,-1,1,8,-3,-4,10,-2,7,1,-1,9],[-8,-6,10,3,2,10,7,1,-6,2,8,3,1,1,3,-5],[-9,-10,-8,-4,8,-6,-1,6,-1,-3,2,4,2,-9,-5,5]],[[-5,5,-9,-6,3,1,8,-3,-6,7,2,3,-9,8,7,10],[-8,7,-3,4,4,10,-3,-2,1,6,5,9,2,-7,-1,-10],[1,-6,-10,-10,6,-10,-5,9,-4,-9,-6,2,-6,-6,-8,-5],[6,3,6,2,-5,2,-7,-6,-5,1,-3,-1,5,-3,-6,2],[-4,9,8,1,-8,-3,-3,7,4,-1,-2,-4,-2,10,9,-1],[6,-2,-3,-10,-7,5,2,2,-1,-2,7,-10,5,6,-1,-7],[-7,5,-4,-3,10,3,-10,-9,-9,-4,7,3,3,3,6,-2],[9,-5,2,5,5,-3,4,6,1,8,-3,7,10,-9,-10,-9],[8,-3,1,-10,8,9,-5,3,-4,-3,4,4,-10,2,6,10],[-5,-4,-2,3,10,-10,-9,-9,8,2,2,7,9,-5,-1,6],[-9,-2,-7,-9,-7,9,5,-8,10,4,4,-7,1,7,-6,-7],[3,5,4,-4,6,8,-1,-4,-6,6,-10,-4,-2,2,-4,-4],[6,-9,-5,3,6,3,-10,2,-5,-8,1,5,-3,-3,4,3]],[[9,4,5,-5,1,-2,-7,6,3,7,6,-7,-9,-5,8,-4],[-2,-10,8,-9,7,9,-8,-4,-9,-2,4,-5,10,7,9,-6],[2,9,-5,-8,-2,6,3,8,2,-8,-1,-9,-2,2,8,4],[6,-9,-2,3,5,3,-1,2,4,10,-3,-8,-7,-8,-8,6],[-4,5,3,1,9,-8,8,4,7,9,4,7,-8,8,-7,-2],[-1,-8,-6,6,4,8,1,-6,-5,-2,-10,4,-4,-6,9,2],[6,8,-1,-9,-6,9,-6,-10,7,4,9,-9,-2,-3,-4,5],[-7,10,-7,2,-6,5,-7,-5,-4,-6,-8,-7,-10,1,7,4],[9,1,4,1,8,10,-8,-10,5,-7,-10,3,-9,4,10,-2],[-1,-7,8,-5,-4,2,1,6,7,-8,2,-7,-6,6,10,-7],[1,-7,3,-5,-8,-9,-8,-4,-10,2,-4,2,-3,-5,4,-7],[7,-4,-8,7,6,3,-3,-7,-1,-7,-9,4,7,6,-3,-8],[6,3,1,-8,-8,-10,-9,-5,7,5,1,9,-9,1,7,4]],[[-1,7,-7,-10,-7,-7,9,-9,6,-6,5,6,2,6,9,5],[7,6,9,8,-8,4,-6,6,9,10,-7,10,6,-9,7,6],[3,7,-8,8,9,3,-9,1,1,3,-8,7,8,8,7,-9],[-6,4,3,-9,-6,-10,-3,4,-2,2,-10,5,-3,3,-9,-2],[-1,8,-8,6,1,-10,9,-6,1,-3,7,8,3,9,6,-8],[8,10,-4,2,2,-8,6,-4,-2,-7,-6,-8,-8,2,8,2],[-7,2,7,-5,-5,-4,6,9,4,8,5,-1,-3,-9,-5,7],[-3,1,2,-1,-10,-2,-2,8,-9,9,10,-8,-3,4,-8,-7],[-9,-1,8,-1,-8,7,-4,-7,1,8,6,-6,3,-6,-2,-1],[5,3,-5,-4,-7,-2,-7,-3,-7,-2,5,1,-2,10,-1,-7],[5,10,6,3,-4,-2,8,-1,-6,-7,3,-10,6,-8,-1,3],[-5,-5,8,4,-7,-5,4,9,7,3,-3,-4,5,5,-7,1],[3,4,-8,-3,7,-9,4,-10,-3,2,8,-4,-9,8,-9,-9]],[[8,4,-6,-2,-7,-5,-8,-1,-10,6,8,-2,3,3,10,4],[9,-6,9,7,9,-6,-7,-10,9,-6,8,-3,7,-2,-10,-8],[6,-2,-4,-10,3,1,-4,-8,7,-9,-1,9,-8,6,9,7],[-8,2,-9,4,-10,-3,-6,-7,-4,-1,1,-2,10,9,10,5],[-4,-9,-7,5,7,-4,-9,-7,1,6,5,3,6,3,5,-5],[2,1,4,-1,-6,-4,-7,-7,-9,10,-1,-9,4,-4,-1,9],[-2,7,8,8,2,-10,3,5,10,-7,-8,-9,-10,1,-3,-7],[1,-10,-1,-5,-10,-1,-10,-6,2,3,-10,2,5,-3,4,-3],[5,5,10,8,5,-3,-6,7,-10,9,3,2,-5,-8,7,5],[3,-8,2,-10,-7,-5,-2,2,3,4,3,5,10,-6,-3,7],[-2,8,2,2,3,-4,-2,-6,8,-2,-3,8,10,-10,-4,8],[3,2,6,-7,-3,-1,-9,-9,-7,7,-8,5,8,1,-2,8],[7,-5,5,-1,2,5,-10,-8,7,-9,10,-3,7,10,2,-7]],[[9,-1,3,-5,3,8,-6,2,-4,8,-3,2,-4,-9,2,5],[-9,8,-10,9,-2,-9,-5,-2,10,-5,-9,-10,1,9,-9,-5],[-3,-2,-5,-6,-8,-7,-6,4,-9,6,5,-10,9,-10,-8,-7],[-9,5,10,2,8,2,10,-7,-4,6,-1,6,10,8,-2,-8],[-6,4,4,-5,-7,6,5,-8,-8,-8,3,-9,-1,-8,6,3],[-8,-9,5,9,-4,-3,10,-8,4,-7,4,-9,-5,-10,-4,4],[-2,-8,-10,2,2,3,-5,-8,8,7,1,7,-4,8,1,-1],[4,9,4,8,-7,8,3,-2,-1,-3,6,10,-8,-7,10,-2],[-7,10,4,-9,-10,-2,3,6,-2,8,-10,7,7,-6,2,-5],[1,-10,7,6,6,-2,4,1,-6,6,-7,5,9,-5,1,9],[7,-9,-1,-2,6,4,-2,8,5,-6,-8,-8,-4,7,-3,9],[8,-2,4,-5,-8,10,3,-7,-1,1,-4,4,2,-3,-10,4],[-2,-6,-2,7,-8,-9,-5,1,9,-5,1,-9,3,-5,-6,-10]],[[7,5,6,7,-10,-7,5,3,10,-5,9,1,7,2,6,2],[-7,3,10,7,8,-9,2,5,1,-10,-5,10,-8,5,-4,9],[3,-5,2,5,6,3,5,9,-9,4,-1,-7,-9,-4,1,-6],[-5,-9,3,-7,5,8,-7,6,5,3,6,-4,4,10,3,-2],[-9,5,5,4,3,10,6,-7,5,6,10,6,1,-1,-6,-3],[6,-8,2,-10,3,-5,5,-9,-4,2,8,-9,-6,3,5,-6],[6,1,7,4,-3,-8,-3,-9,-5,-10,-8,1,-1,-5,-10,9],[-6,-5,4,-4,10,-5,10,-1,-4,-7,-10,-6,3,-7,-2,-9],[9,-3,3,1,-9,6,10,-6,8,9,-4,-1,8,-1,6,-1],[6,-7,-3,-4,-5,-4,8,3,7,-6,-9,-9,-6,-7,4,7],[-4,-1,-3,1,-5,-6,7,1,-1,7,7,-5,8,-3,-10,4],[-7,10,10,-9,-8,-8,-4,9,9,5,1,6,4,4,4,-9],[-3,-10,-2,-7,-5,5,5,7,9,-9,6,2,9,-5,5,3]],[[-6,-2,3,1,6,9,2,-7,-2,3,-6,-7,4,7,9,-9],[2,-3,1,-4,2,8,1,-4,2,10,-6,-2,-2,-8,-10,4],[-8,-8,3,-4,5,-8,7,-1,3,8,10,-8,10,1,-2,-1],[-4,-9,-1,3,-5,4,4,3,-7,-7,-1,-7,-10,1,5,-4],[3,5,6,-1,10,-5,3,4,-8,-6,5,-10,-4,-8,-2,-8],[-6,10,3,-3,1,7,-5,-3,-1,4,4,10,-4,7,-1,-5],[-9,6,-8,-3,8,-2,-3,8,6,8,5,-10,-6,-6,-1,3],[6,2,-10,-5,-6,-3,-4,3,-2,-1,-8,-7,7,1,-6,10],[4,10,-8,6,1,-5,10,-8,6,1,-10,8,6,7,-4,6],[2,5,10,-6,-1,-10,8,5,-5,9,7,-5,9,-6,3,-2],[-9,-3,-10,-2,9,-10,-9,-10,-1,2,-6,-2,-2,-7,-2,8],[-10,10,1,9,-7,-6,5,-3,-6,-6,-3,-7,-9,-10,7,-2],[-10,-7,8,10,6,-10,-3,-7,9,1,-2,-8,7,1,5,-1]],[[6,5,-3,-9,-2,-9,-3,4,-10,5,5,2,-1,-6,-6,1],[-6,-8,-1,7,6,-8,2,3,7,3,-3,-6,8,3,8,10],[2,2,-4,7,-6,-1,9,10,3,-9,-8,3,4,2,1,7],[-9,-9,7,5,4,-4,3,8,5,4,-2,-9,-2,10,4,-1],[6,6,-7,-9,-10,-4,4,8,-9,5,9,8,7,-9,7,2],[9,7,2,8,10,4,2,-5,6,2,4,-7,10,-9,-5,10],[-2,9,-4,7,-9,-8,-5,-1,3,-4,-3,-5,8,-2,7,-6],[-1,-5,4,-1,-3,3,3,6,-7,-2,-3,7,-3,4,-1,10],[-7,-8,-5,3,7,-3,-10,-6,-3,-9,-5,10,3,7,6,7],[10,-4,4,2,-3,-2,6,-10,-6,5,-5,-7,-1,-6,2,8],[-9,-7,-10,-6,4,6,8,10,6,5,-2,-2,9,-8,1,2],[-10,3,-8,5,-9,-5,-8,10,2,-7,-10,-7,-7,1,-3,-6],[-2,7,9,5,4,4,-4,-5,-2,3,1,2,-7,4,5,-6]],[[-2,-8,-4,9,-2,-9,-9,-5,9,4,9,8,10,9,5,-2],[-8,-7,3,10,1,4,-4,-3,-10,-2,5,-7,5,8,-3,6],[3,4,9,1,-1,-10,-7,-7,9,6,-1,-9,-10,4,-9,3],[-6,-6,-10,5,-6,-6,9,8,3,2,-8,8,-9,-9,7,-8],[10,-7,5,-4,8,-1,-3,5,-4,10,1,10,-4,-6,-5,-3],[-10,-7,-4,-3,-1,1,7,10,6,-5,-1,7,-6,-6,9,5],[-2,4,5,2,4,-10,1,4,1,4,-4,9,4,-10,7,-2],[-10,-6,-4,9,-2,-2,-10,-2,-6,4,7,-2,9,6,7,-6],[4,10,-2,9,9,-7,-6,9,-5,-5,-6,-7,-7,2,1,-1],[-2,5,1,8,-5,-8,-5,-4,9,5,6,-2,-3,9,4,10],[-2,-8,3,2,2,-9,-4,-7,4,-2,-2,-5,9,-2,3,-9],[-1,7,-4,9,6,2,5,-7,-9,-9,-3,9,-8,7,5,6],[4,7,10,-5,-6,-10,-6,9,-8,-10,5,-3,10,-2,-7,-10]],[[-2,2,-5,-10,-3,1,9,-7,-10,-8,-6,-8,2,-1,10,1],[-8,-4,9,3,6,3,6,4,7,-3,-2,9,-2,-6,-4,4],[1,5,4,4,-2,7,7,7,1,6,2,-1,8,9,-4,3],[3,-5,-4,6,6,-7,3,4,4,1,-7,-2,-8,4,6,-7],[-5,-3,-1,-8,-10,-9,-7,-9,5,8,-2,5,-1,-4,-8,5],[7,-4,-7,-5,-5,2,-7,4,-10,-4,-3,4,9,3,3,3],[-6,-8,9,-9,-10,-10,-3,1,-9,8,5,9,4,-3,10,6],[-5,8,-2,10,-10,-2,-9,6,9,1,8,8,-2,10,7,9],[-4,5,3,-9,10,-6,4,6,-10,5,-6,1,-4,-1,6,-2],[-6,6,6,4,7,-4,6,2,6,-3,2,2,2,8,5,10],[-9,-3,-4,-1,-9,-9,5,-8,-1,-3,2,1,-1,3,9,9],[2,2,-9,6,-10,-10,10,-5,-8,6,-6,-5,3,4,3,-9],[3,2,8,9,-5,-4,6,8,10,5,10,-2,10,-5,9,-10]],[[7,4,2,-3,2,-3,-7,-4,4,2,1,-9,1,-4,7,-5],[-5,-10,-2,-5,-10,-7,-9,3,-10,1,10,2,3,-4,-9,-5],[-7,1,-7,6,-7,4,3,1,-6,-7,-2,10,3,4,-2,-6],[5,8,6,-1,8,8,7,-9,4,9,-4,-9,-2,1,-5,3],[-6,6,-9,-4,-4,-2,-4,4,-6,-3,-4,7,7,-2,-5,-4],[9,5,-7,-7,-3,-4,10,8,2,4,4,-4,9,5,2,-7],[7,9,10,5,-6,4,-6,10,4,4,5,-10,3,-10,-5,5],[8,-8,-3,6,3,-3,-2,6,7,5,7,8,-1,4,5,9],[-7,-2,1,8,-7,10,-4,-7,-6,4,-8,-3,9,6,-1,7],[-4,-8,8,9,-7,-5,7,3,-4,9,9,2,1,4,-5,-2],[10,5,8,-3,3,7,2,3,6,8,4,-5,-10,-9,-8,5],[2,7,-4,-4,-10,6,2,-8,1,-6,-7,-2,-8,3,3,-7],[10,3,-6,-2,10,8,9,-10,3,-5,-7,-9,-7,4,-10,5]],[[6,-5,-6,9,-7,8,3,8,6,-10,10,9,-2,9,3,-2],[-1,9,6,-3,-5,8,-9,-7,10,7,5,-1,-6,-8,2,7],[-9,-3,4,-7,-7,8,3,-10,-1,7,2,4,6,-8,-4,-4],[-3,7,2,-6,-10,2,10,-8,-10,10,3,-1,-5,-7,-4,-3],[7,4,-5,6,-7,-1,-4,-9,-6,-6,2,-7,-6,10,-5,-9],[-3,4,7,5,2,-2,-7,-1,-1,-1,6,-4,2,6,-4,-4],[10,-5,9,1,-6,-8,-6,-7,5,2,7,6,7,-1,-9,-10],[-2,-7,6,10,3,-6,-6,5,-10,5,-2,-9,4,-2,2,3],[-6,4,-8,-6,2,-9,-3,-2,-1,10,-1,-2,8,10,-3,-3],[3,3,-2,10,10,-4,4,-6,6,-8,-7,-2,2,5,6,8],[-5,-9,-1,3,-10,4,5,-9,-8,-8,7,9,3,-9,-2,-6],[-10,-4,-6,2,-3,2,-4,7,-9,-8,6,-8,-3,-7,3,-4],[10,4,4,-4,10,-5,6,-8,-8,1,-6,-2,-5,-6,2,-1]],[[-9,-8,1,-1,5,-7,9,-8,-4,10,10,-10,1,-5,-7,3],[3,8,3,-7,5,-1,-3,-1,2,8,-5,6,6,9,10,-9],[5,-9,7,7,3,-6,9,-3,3,2,10,6,-1,-9,-6,4],[-8,-10,-10,-6,-4,-9,-2,-5,-4,2,5,9,-2,-9,-1,-2],[7,-1,-8,1,-1,-9,1,-7,1,8,-7,3,9,10,4,-8],[-3,-9,-8,-4,-9,2,-7,6,2,3,2,1,-8,1,2,-3],[8,7,-10,-7,-4,-10,1,8,-9,3,6,5,4,6,-5,10],[-2,-3,9,-3,8,3,-1,-1,1,4,-7,-1,-4,4,7,7],[2,-2,-10,4,-10,7,8,-2,3,6,4,10,6,1,9,-1],[-10,4,7,7,-6,9,-4,5,-8,7,10,-3,-1,-10,-4,5],[-3,1,-8,-9,3,-10,-2,6,8,3,-1,6,3,-4,6,-1],[10,-1,2,-3,-2,4,10,4,-3,7,5,8,9,7,3,4],[-3,2,-7,-2,9,-2,8,-6,3,7,-7,8,-8,3,6,-5]]], dtype = "int8")#candidate|4992|(16, 13, 16)|const|int8
var_4993 = relay.var("var_4993", dtype = "int8", shape = (16, 13, 16))#candidate|4993|(16, 13, 16)|var|int8
bop_4994 = relay.left_shift(const_4992.astype('int8'), relay.reshape(var_4993.astype('int8'), relay.shape_of(const_4992))) # shape=(16, 13, 16)
output = bop_4994
output2 = bop_4994
func_5007 = relay.Function([var_4993,], output)
mod['func_5007'] = func_5007
mod = relay.transform.InferType()(mod)
var_5008 = relay.var("var_5008", dtype = "int8", shape = (16, 13, 16))#candidate|5008|(16, 13, 16)|var|int8
output = func_5007(var_5008)
func_5009 = relay.Function([var_5008], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5077 = relay.TupleGetItem(func_4899_call(), 0)
call_5078 = relay.TupleGetItem(func_4900_call(), 0)
var_5084 = relay.var("var_5084", dtype = "float32", shape = (11, 10, 6))#candidate|5084|(11, 10, 6)|var|float32
bop_5085 = relay.less(call_5077.astype('bool'), var_5084.astype('bool')) # shape=(11, 10, 6)
bop_5088 = relay.less(call_5078.astype('bool'), var_5084.astype('bool')) # shape=(11, 10, 6)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5089 = relay.TupleGetItem(func_4899_call(), 0)
call_5090 = relay.TupleGetItem(func_4900_call(), 0)
output = relay.Tuple([bop_5085,call_5089,])
output2 = relay.Tuple([bop_5088,call_5090,])
func_5099 = relay.Function([var_5084,], output)
mod['func_5099'] = func_5099
mod = relay.transform.InferType()(mod)
var_5100 = relay.var("var_5100", dtype = "float32", shape = (11, 10, 6))#candidate|5100|(11, 10, 6)|var|float32
output = func_5099(var_5100)
func_5101 = relay.Function([var_5100], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5175 = relay.TupleGetItem(func_4899_call(), 0)
call_5176 = relay.TupleGetItem(func_4900_call(), 0)
func_5007_call = mod.get_global_var('func_5007')
func_5009_call = mutated_mod.get_global_var('func_5009')
var_5185 = relay.var("var_5185", dtype = "int8", shape = (3328,))#candidate|5185|(3328,)|var|int8
call_5184 = func_5007_call(relay.reshape(var_5185.astype('int8'), [16, 13, 16]))
call_5186 = func_5007_call(relay.reshape(var_5185.astype('int8'), [16, 13, 16]))
output = relay.Tuple([call_5175,call_5184,var_5185,])
output2 = relay.Tuple([call_5176,call_5186,var_5185,])
func_5187 = relay.Function([var_5185,], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5188 = relay.var("var_5188", dtype = "int8", shape = (3328,))#candidate|5188|(3328,)|var|int8
func_5187_call = mutated_mod.get_global_var('func_5187')
call_5189 = func_5187_call(var_5188)
output = call_5189
func_5190 = relay.Function([var_5188], output)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_5230 = func_4964_call()
call_5231 = func_4964_call()
uop_5233 = relay.acos(call_5230.astype('float64')) # shape=(2, 16, 15)
uop_5235 = relay.acos(call_5231.astype('float64')) # shape=(2, 16, 15)
func_1023_call = mod.get_global_var('func_1023')
func_1026_call = mutated_mod.get_global_var('func_1026')
var_5247 = relay.var("var_5247", dtype = "float32", shape = (154,))#candidate|5247|(154,)|var|float32
const_5248 = relay.const([1,-6,5,-6,2,-4,6,-3,9,4,4,2,2,10,9,7,-9,-3,-7,-7,10,-9,5,3,-4,1,-3,-7,2,1,1,3,2,-4,4,-10,-5,1,3,-3,3,4,-6,-10,-8,-10,-10,-1,-7,-3,-6,-5,4,-2,-4,-3,-8,-2,7,3,-5,-6,-7,9,-2,5,9,-1,-10,7,8,10,6,10,-3,9,-9,-3,4,8,-8,5,7,-8,1,-8,5,4,-9,5,9,-8,-2,3,-4,-1,-6,-8,2,-9,-1,-1,6,-10,-10,-4,2,7,4,-8,-1,-1,-5,1,6,2,6,6,1,-4,2,1,-2,7,-8,-8,-4,-7,9,10,-5,-3,-8,-10,8,1,4,3,10,-3,5,-7,-2,1,10,7,4,6,-2,2,-10,9,6,-9,-1,5,6,8,6,-1,9,-4,1,-4,8,-2,-10,4,2,10,-8,1,9,-5,-9,3,-4,10,1,-8,-3,-9,1,6,-7,-9,3,2,-1,7,1,5,-1,3,-2,-10,3,-5,1,10,-10,-4,8,5,2,9,-5,1,1,7,8,8,5,8,7,-7,-6,1,6,3,-9,-1,9,10,9,5,5,9,-9,7,4,4,-4,3,-3,9,-1,8,-4,9,-8,-3,8,-2,-10,4,4,3,2,-1,6,-9,-10,-6,7,-10,-2,7,-4,6,1,-9,9,-6,-9,8,-5,-2,-3,-9,-8,5,-1,-9,-3,-10,-4,-1,10,3,-2,-5,-7,-2,-9,-3,10,-6], dtype = "int16")#candidate|5248|(288,)|const|int16
call_5246 = relay.TupleGetItem(func_1023_call(relay.reshape(var_5247.astype('float32'), [11, 2, 7]), relay.reshape(const_5248.astype('int16'), [288,]), ), 5)
call_5249 = relay.TupleGetItem(func_1026_call(relay.reshape(var_5247.astype('float32'), [11, 2, 7]), relay.reshape(const_5248.astype('int16'), [288,]), ), 5)
func_5007_call = mod.get_global_var('func_5007')
func_5009_call = mutated_mod.get_global_var('func_5009')
var_5251 = relay.var("var_5251", dtype = "int8", shape = (3328,))#candidate|5251|(3328,)|var|int8
call_5250 = func_5007_call(relay.reshape(var_5251.astype('int8'), [16, 13, 16]))
call_5252 = func_5007_call(relay.reshape(var_5251.astype('int8'), [16, 13, 16]))
func_4680_call = mod.get_global_var('func_4680')
func_4682_call = mutated_mod.get_global_var('func_4682')
var_5254 = relay.var("var_5254", dtype = "uint16", shape = (300,))#candidate|5254|(300,)|var|uint16
call_5253 = relay.TupleGetItem(func_4680_call(relay.reshape(var_5254.astype('uint16'), [6, 10, 5])), 1)
call_5255 = relay.TupleGetItem(func_4682_call(relay.reshape(var_5254.astype('uint16'), [6, 10, 5])), 1)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_5263 = func_4964_call()
call_5264 = func_4964_call()
output = relay.Tuple([uop_5233,call_5246,var_5247,const_5248,call_5250,var_5251,call_5253,var_5254,call_5263,])
output2 = relay.Tuple([uop_5235,call_5249,var_5247,const_5248,call_5252,var_5251,call_5255,var_5254,call_5264,])
func_5266 = relay.Function([var_5247,var_5251,var_5254,], output)
mod['func_5266'] = func_5266
mod = relay.transform.InferType()(mod)
mutated_mod['func_5266'] = func_5266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5266_call = mutated_mod.get_global_var('func_5266')
var_5268 = relay.var("var_5268", dtype = "float32", shape = (154,))#candidate|5268|(154,)|var|float32
var_5269 = relay.var("var_5269", dtype = "int8", shape = (3328,))#candidate|5269|(3328,)|var|int8
var_5270 = relay.var("var_5270", dtype = "uint16", shape = (300,))#candidate|5270|(300,)|var|uint16
call_5267 = func_5266_call(var_5268,var_5269,var_5270,)
output = call_5267
func_5271 = relay.Function([var_5268,var_5269,var_5270,], output)
mutated_mod['func_5271'] = func_5271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5282 = relay.TupleGetItem(func_4899_call(), 0)
call_5283 = relay.TupleGetItem(func_4900_call(), 0)
output = call_5282
output2 = call_5283
func_5285 = relay.Function([], output)
mod['func_5285'] = func_5285
mod = relay.transform.InferType()(mod)
mutated_mod['func_5285'] = func_5285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mutated_mod.get_global_var('func_5285')
call_5286 = func_5285_call()
output = call_5286
func_5287 = relay.Function([], output)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5288 = relay.TupleGetItem(func_4899_call(), 0)
call_5289 = relay.TupleGetItem(func_4900_call(), 0)
output = relay.Tuple([call_5288,])
output2 = relay.Tuple([call_5289,])
func_5295 = relay.Function([], output)
mod['func_5295'] = func_5295
mod = relay.transform.InferType()(mod)
mutated_mod['func_5295'] = func_5295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5295_call = mutated_mod.get_global_var('func_5295')
call_5296 = func_5295_call()
output = call_5296
func_5297 = relay.Function([], output)
mutated_mod['func_5297'] = func_5297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5328 = relay.var("var_5328", dtype = "float64", shape = (14, 4, 2))#candidate|5328|(14, 4, 2)|var|float64
uop_5329 = relay.rsqrt(var_5328.astype('float64')) # shape=(14, 4, 2)
func_3538_call = mod.get_global_var('func_3538')
func_3542_call = mutated_mod.get_global_var('func_3542')
var_5332 = relay.var("var_5332", dtype = "uint8", shape = ())#candidate|5332|()|var|uint8
var_5333 = relay.var("var_5333", dtype = "uint8", shape = (42,))#candidate|5333|(42,)|var|uint8
call_5331 = relay.TupleGetItem(func_3538_call(relay.reshape(var_5332.astype('uint8'), []), relay.reshape(var_5333.astype('uint8'), [3, 1, 14]), ), 0)
call_5334 = relay.TupleGetItem(func_3542_call(relay.reshape(var_5332.astype('uint8'), []), relay.reshape(var_5333.astype('uint8'), [3, 1, 14]), ), 0)
func_3538_call = mod.get_global_var('func_3538')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_5336 = relay.TupleGetItem(func_3538_call(relay.reshape(var_5332.astype('uint8'), []), relay.reshape(var_5333.astype('uint8'), [3, 1, 14]), ), 0)
call_5337 = relay.TupleGetItem(func_3542_call(relay.reshape(var_5332.astype('uint8'), []), relay.reshape(var_5333.astype('uint8'), [3, 1, 14]), ), 0)
uop_5343 = relay.sinh(uop_5329.astype('float64')) # shape=(14, 4, 2)
output = relay.Tuple([call_5331,var_5332,var_5333,call_5336,uop_5343,])
output2 = relay.Tuple([call_5334,var_5332,var_5333,call_5337,uop_5343,])
func_5347 = relay.Function([var_5328,var_5332,var_5333,], output)
mod['func_5347'] = func_5347
mod = relay.transform.InferType()(mod)
var_5348 = relay.var("var_5348", dtype = "float64", shape = (14, 4, 2))#candidate|5348|(14, 4, 2)|var|float64
var_5349 = relay.var("var_5349", dtype = "uint8", shape = ())#candidate|5349|()|var|uint8
var_5350 = relay.var("var_5350", dtype = "uint8", shape = (42,))#candidate|5350|(42,)|var|uint8
output = func_5347(var_5348,var_5349,var_5350,)
func_5351 = relay.Function([var_5348,var_5349,var_5350,], output)
mutated_mod['func_5351'] = func_5351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5359 = relay.TupleGetItem(func_4899_call(), 0)
call_5360 = relay.TupleGetItem(func_4900_call(), 0)
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
const_5371 = relay.const([[-1.688054,9.002800,-0.216437,8.547331],[-1.701374,9.262467,9.121170,-0.490663],[1.584371,-4.625777,-9.950242,3.660456],[7.953926,0.365686,-1.658284,-9.685567],[4.518768,-6.474981,-5.636880,5.817104],[3.290834,8.786257,-0.959018,9.781471],[8.286762,-9.910945,9.304263,3.560502],[-3.505615,-0.044771,-0.034068,-8.166079],[-4.106947,-0.614286,-0.585134,4.330317],[-2.500667,-1.295231,-5.782890,-2.480794],[7.917906,3.996716,-6.001297,0.138495],[-9.665652,0.993128,-4.107867,-5.491388],[-8.605245,-5.014488,-7.458892,0.836344],[-9.964426,2.259936,8.731187,-9.510400],[-6.809574,7.452048,-7.372022,-3.835600],[-7.068437,-2.719048,5.483729,6.625676],[7.484664,-7.514410,9.188843,-3.358172],[2.830384,-2.254451,8.216727,2.290450],[6.883157,-1.618436,-6.094742,-4.681158],[9.385960,9.695378,0.309521,-3.052282],[-2.592288,-9.599397,-7.923957,2.615281],[4.060318,8.217596,-9.799164,-6.197501],[8.975706,-4.329158,9.887243,0.548071],[2.365420,7.574946,8.260570,5.014577],[-1.518459,-6.425819,-6.190919,-1.782330],[4.071950,-8.493434,3.126963,8.571912],[0.567440,-3.621021,-1.412610,9.394159],[-1.923923,-5.650798,4.599741,-0.464556],[-9.248153,-8.735469,-7.526623,-3.732883],[-7.430933,-3.292379,3.197035,3.308215],[2.978912,-5.855908,0.171160,3.087836],[-1.728986,5.859787,9.306267,-1.909110],[-3.711367,-2.944412,8.080125,1.975672],[7.856354,9.340852,7.405298,8.797179],[-8.398354,6.849657,-4.188641,-3.691667],[-1.330514,-0.885762,9.220167,3.694866],[6.892511,-3.304303,-0.971002,9.603169],[9.623190,7.383299,8.968922,3.378769],[-7.743857,2.109418,6.013038,6.345275],[4.066214,2.560415,-8.153757,3.740920],[-4.604317,3.429654,6.481726,-2.780299],[1.771953,3.215708,3.253725,2.724946],[0.376396,-8.447617,-3.161042,2.575388],[8.950694,-9.428819,2.499067,7.120959],[1.617421,7.138941,2.356510,-2.010214],[0.199539,4.635020,-4.126229,-6.923981],[3.544864,6.969406,-4.810270,-9.074647],[9.730977,-0.696776,-6.852598,7.801219],[-4.194145,-7.733781,-9.263449,-4.098796],[-5.357663,-1.261457,-7.742035,3.189561],[0.840801,3.519666,1.936700,7.134983],[-4.024484,3.281159,-3.205138,5.054618],[2.941427,-7.455018,-1.916805,2.018793],[2.860824,3.534735,-5.819934,5.719468],[6.443084,-0.836243,-7.042948,-6.758632],[5.201774,7.438263,-4.779538,-1.489606],[-3.938905,2.737098,8.141941,-5.427551],[3.750812,6.492588,-9.934534,1.005742],[7.128345,-5.952338,-8.587606,7.569681],[-9.601741,9.189980,9.259170,7.142577],[-8.992039,-0.862240,5.749244,-9.946003],[-3.102128,9.115724,0.256558,6.550477],[-0.728715,-2.983812,-4.197125,-3.575422],[0.474732,4.693535,6.723813,-0.199295],[3.923553,1.352570,4.135883,6.418882],[0.758830,-2.773756,-2.766958,-8.208299],[5.559731,8.230236,-9.966496,2.185797],[9.232010,-9.385786,4.199099,-2.634302],[2.065493,0.360774,-2.071219,-6.167942],[9.520153,-1.890534,-5.363666,-0.365593],[4.174055,9.550483,7.967591,4.158632],[9.976703,6.912127,2.504685,-1.986368],[-7.039286,4.768112,-2.850152,-0.589451],[6.777835,7.108479,6.927065,6.399478],[4.640788,-5.986833,0.698182,7.155844],[0.342288,4.255962,0.571827,7.514195],[-4.133736,-1.127949,5.673194,-7.369164],[3.665469,-1.447704,-9.845467,8.791979],[9.529057,-6.009160,-2.323450,6.502708],[0.573542,-0.780717,-2.326890,-5.265829],[-3.415256,-9.283269,2.550482,-8.676820],[-0.589452,-9.225912,1.280410,6.786460],[1.639672,8.081905,7.562072,-3.160480],[-9.511819,9.618898,-5.350150,0.983326],[-2.759980,-3.998792,-5.110039,-9.030338],[-4.681628,6.835253,3.879230,-3.045080],[1.572452,-6.845763,-3.514784,4.151273],[8.035295,-0.834503,-4.865128,-6.082628],[9.730105,-3.313028,-9.888164,-5.896899],[7.796501,-2.007557,-4.871115,-6.812041],[-5.420294,9.039936,5.845821,5.989259],[3.080803,-6.466188,3.723670,7.841461],[-9.249991,3.530521,-1.739286,4.747407],[0.785986,-6.812925,-6.856216,6.777806],[0.360100,6.802993,6.029526,3.955679],[-5.414286,-4.382318,6.408328,-3.295323],[-8.899256,-8.867210,-3.981845,-7.448507],[2.059840,5.371446,3.705841,-4.773857],[3.472149,9.133353,7.712807,-4.006754],[1.582107,4.836516,-5.781988,-1.953574],[6.130551,0.092968,-4.909889,-8.820222],[4.779156,5.301956,-1.263091,7.079921],[2.729364,8.625328,-3.421264,8.273005],[-8.042435,-8.002989,-5.008109,1.123775],[2.862071,0.877861,0.598048,8.608232],[-2.802178,5.890784,-9.265076,-3.656894],[-4.109683,-1.300470,8.233057,-2.466497],[2.919731,-1.446367,2.213917,6.963714],[3.155761,-8.875037,-2.821487,1.373150],[-4.315038,-3.147795,6.730482,-5.716764],[-6.954357,-8.176458,-7.171789,4.831335],[2.523384,-3.797966,-4.432524,0.333950],[-5.840580,-3.837548,3.413153,2.348284],[-2.608121,1.173695,6.306511,0.209356],[-7.769976,1.134860,-4.570459,-4.322198],[5.020219,-4.349288,6.095837,9.773114],[8.392288,-6.943759,5.642436,-4.974568],[2.607453,6.506589,-3.391717,-8.292816],[1.277024,5.331048,2.616526,5.365401],[-8.614122,-6.056769,-7.327749,-3.923062],[4.624973,-3.095463,-5.930269,-6.469968],[-4.039554,-2.387985,3.014392,-6.632180],[8.666294,-6.594164,1.682081,5.076687],[-8.814691,8.129551,1.952872,-3.220829],[1.225208,9.096374,-7.031354,9.060057],[8.080061,8.867991,1.858293,8.099154],[1.593438,1.166469,-3.236865,5.744897],[-9.457413,8.787046,-6.905519,-2.228761],[-8.824245,7.903939,6.365095,-6.879761],[2.634918,3.943021,0.828549,7.187937],[4.408558,0.404040,8.719331,-9.985519],[-0.969108,5.993708,3.074322,-8.789295],[4.516381,-3.308695,-0.792449,9.803388],[-9.003072,-7.028855,-3.546227,4.641572],[-0.847476,8.467546,1.752826,0.282197],[5.383549,-1.677058,-9.344483,-3.419836],[-3.455557,8.700899,0.238171,-0.724648],[1.043820,9.326669,-0.552887,6.070517],[-4.862964,-3.543280,-1.390676,2.082915],[-0.913894,6.313412,-3.651708,-1.400376],[-9.363632,1.808058,4.651840,-6.123095],[2.016269,-8.585183,-5.741784,-5.186448],[-7.498596,-7.511397,4.435214,-3.493608],[0.181420,-8.068197,9.141292,-9.880238],[-6.491902,-3.495093,-4.788392,7.327863],[-8.580569,5.164935,8.573590,4.287863],[8.533983,8.588451,2.498485,-4.308826],[9.731263,-3.489551,-9.087579,-5.052003],[5.663425,-2.727641,5.438684,8.106535],[2.696946,-3.048155,-4.271663,-4.718867],[1.326293,-2.551037,2.659828,0.064372],[-1.103022,9.842707,7.448341,4.447245],[-0.818002,-6.793314,0.343401,-2.026453],[-1.015306,-4.939767,-8.523958,-3.350554],[-0.070380,9.321422,-3.136227,-9.781824],[-7.582046,7.687544,2.697978,-2.801720],[-0.271987,-7.867776,-9.209863,-7.543740],[9.646770,-8.775125,1.036752,-4.164363],[3.914402,6.203755,-7.164912,-1.970489],[0.939291,-2.295330,7.301346,3.304310],[0.839076,6.539158,-9.503740,7.812607],[-5.737417,0.528193,-0.616250,6.576740],[7.666521,7.727907,-0.063314,5.025374],[9.632868,8.736067,-4.639769,-2.651133],[-7.556199,-5.706466,0.376175,-5.373703],[6.673728,1.683966,9.251584,2.808625],[8.402588,3.781539,3.894056,-3.995643],[-2.565872,5.155795,-8.742227,5.939932],[1.213647,3.323466,2.751985,1.538727],[2.698898,-0.048557,0.352089,-5.002833],[3.525454,0.078623,-5.808686,5.486840],[6.280467,5.084418,2.163388,-1.524409],[-3.424115,2.249658,6.665316,-6.923364],[-8.384294,-9.063758,1.261458,-0.356093],[-9.091054,6.803808,0.919013,2.318939],[6.956466,-3.672162,1.091889,0.965925],[-0.642828,8.658968,1.597311,7.809365],[0.473598,-0.763189,-5.849487,3.373764],[-1.743949,7.394908,4.058893,-2.575171],[4.692180,5.630422,7.555034,8.224179],[-7.425542,3.328772,-9.868951,7.574858],[-3.477754,-9.294822,-9.393249,9.695089],[-3.326439,1.193500,-6.300644,-1.053696],[-8.414357,-9.034107,9.638742,-3.702078],[2.698287,5.530333,-5.949257,4.458795],[-6.214786,8.760208,8.737605,3.351647],[4.972507,4.683326,-4.073915,2.533199],[-1.001011,-7.285651,0.737024,8.480226],[0.341448,3.194725,8.062570,-2.631934],[-8.200175,-3.123986,4.828561,-7.742622],[-4.722604,-0.151142,7.999647,-7.713519],[8.120624,7.317011,4.832031,5.997413],[-7.668030,-4.866998,2.401452,6.378044],[-1.156808,8.097156,-1.032406,-4.888810],[-8.100665,6.946279,-3.172127,6.064915],[4.355168,1.132886,5.726858,7.137447],[4.717442,4.092163,-6.657749,-9.111082],[-8.387834,-3.877872,9.255565,-3.214366],[2.115566,-1.393992,5.900365,-9.931335],[-0.656402,4.196317,-9.617539,6.527712],[-7.775115,5.263528,-7.571544,6.354174],[9.584055,3.981634,-0.032150,-5.617791],[0.002485,8.624063,-2.719384,1.598659],[4.633458,-0.041611,3.911167,5.758759],[-2.854841,6.276954,9.383366,-8.724983],[-5.968211,0.800815,3.505288,4.139615],[-6.197012,3.152080,-9.425655,-7.882157],[0.053086,9.363274,-6.206625,-9.365115],[1.515990,7.073645,-4.132516,-5.413310],[6.088866,1.380918,8.310596,-4.975337],[3.248850,7.767314,-8.482693,-0.426968],[-5.667072,6.509254,-1.769336,-9.255591],[7.406570,-9.922852,4.616520,-1.048508],[6.148951,3.050545,-9.498972,-1.323428],[6.655061,3.871901,0.006128,4.209274],[-6.555538,8.072456,-0.453621,-3.586004],[4.438288,2.811922,1.487394,-1.127479],[0.663943,-2.958800,4.312744,1.870936],[-4.027079,-9.495254,-7.237573,3.972832],[-4.508715,-5.002072,-0.337442,-7.551609],[7.081607,-9.766065,-2.350463,9.222012],[-7.426568,8.474537,7.294675,-8.608789],[-9.621135,8.798929,-3.496805,9.545498],[7.967381,1.407908,-6.156325,-2.680427],[6.202507,4.043290,2.764985,9.163909],[-9.958687,4.375551,-5.459867,0.275361],[-6.262243,2.245359,7.769324,-3.531268],[-3.083669,4.951555,7.441768,8.340525],[-8.544926,-6.316569,2.690484,-9.621530],[7.128228,8.600446,1.639140,-4.778021],[-8.431971,8.844359,-0.165121,-2.526465],[6.151402,2.661302,9.744037,-4.523504],[2.783386,1.611798,-4.210214,-7.673740],[3.361195,2.052250,-1.211449,7.070999],[-3.180337,0.269601,-0.078845,0.428279],[0.806407,-0.997163,6.515763,-2.941869],[-8.494179,-0.952800,8.739946,-6.328715],[-3.705442,-5.455802,0.826358,7.041624],[-8.304882,-6.876042,5.319388,-6.964400],[-8.554924,3.585514,0.712815,8.365497]], dtype = "float32")#candidate|5371|(240, 4)|const|float32
call_5370 = relay.TupleGetItem(func_3066_call(relay.reshape(const_5371.astype('float32'), [16, 15, 4])), 0)
call_5372 = relay.TupleGetItem(func_3068_call(relay.reshape(const_5371.astype('float32'), [16, 15, 4])), 0)
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
call_5379 = relay.TupleGetItem(func_3066_call(relay.reshape(const_5371.astype('float32'), [16, 15, 4])), 1)
call_5380 = relay.TupleGetItem(func_3068_call(relay.reshape(const_5371.astype('float32'), [16, 15, 4])), 1)
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
call_5384 = relay.TupleGetItem(func_3066_call(relay.reshape(const_5371.astype('float32'), [16, 15, 4])), 1)
call_5385 = relay.TupleGetItem(func_3068_call(relay.reshape(const_5371.astype('float32'), [16, 15, 4])), 1)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
const_5388 = relay.const([[-6.957279,-1.623520,8.142893,5.768931,-4.095809,0.590301],[-2.778651,2.386178,4.389615,1.153104,2.432574,-8.659834],[-2.414414,-1.015293,-8.018827,-9.661596,-5.489970,-5.826787],[6.971210,-7.523084,7.584598,7.902792,6.698382,6.519600],[-5.851782,-3.094337,4.984753,1.500233,-4.693370,-1.393934],[-0.363140,5.164321,-7.288153,-0.801306,9.173408,7.748058],[4.045016,0.635916,-1.942159,3.922180,2.513746,-2.087297],[-1.793615,2.946172,-7.356553,-1.987942,-3.918999,4.693616],[6.591174,-7.378946,-4.083127,1.820358,-8.673014,-3.950672],[8.500668,4.691565,-5.660971,-9.499964,-7.355639,2.932374],[7.928258,0.037148,-0.646274,-9.369223,6.188380,-7.467190],[7.747605,3.635478,-6.298176,-4.241476,9.224318,6.713834],[9.282267,2.699903,1.213157,-4.448856,-9.570860,-5.457483],[-2.493453,-0.372962,4.342253,-1.190283,-6.756620,-3.544171],[8.791268,2.704826,-9.147655,-7.422856,-2.224066,1.990580],[8.372088,-2.827026,-2.997972,-1.005701,-2.357982,-0.088422],[4.144389,-3.172418,-8.281147,3.297068,2.857122,-3.709415],[1.683189,1.833436,-6.539280,5.687951,8.117458,0.443985],[-2.056268,-9.706918,-3.138037,-7.795916,1.024777,-9.998924],[9.868640,-0.678421,-8.275891,-1.556146,2.073135,6.804967],[2.564841,5.483468,-6.030547,-4.848132,-9.792372,7.946209],[2.469975,1.046321,-9.491452,-9.673788,9.306510,-2.873594],[2.813139,1.268466,6.705647,5.609745,7.127151,7.338182],[1.678719,-8.837506,-3.417584,6.333128,3.290568,8.166236],[-5.785805,8.250377,-7.894718,4.985682,-9.452515,-3.367795],[2.441225,-1.222711,9.708529,-0.101259,3.899883,-0.155386],[8.794680,3.880608,-2.979763,-7.908734,-5.686721,-9.307555],[-4.547624,5.202055,-7.644661,-1.751708,1.852681,-0.119791],[-6.953792,3.014262,9.058162,1.334144,3.197757,0.369635],[9.063837,-1.045470,0.907855,-4.192393,-7.051438,1.103142],[-1.889947,-1.185154,-8.192243,-3.417423,-6.022573,2.341127],[3.406996,-3.274678,4.415695,5.095097,9.782430,6.607480],[-2.352685,-8.806561,8.878856,-9.842982,5.981951,8.880549],[7.522244,-5.456998,4.767358,-9.397700,7.219400,-3.567280],[-5.012337,2.814099,4.722467,5.977458,9.602443,8.601651],[3.296899,-2.939868,-8.531225,-5.925668,5.036502,5.377654],[-3.324751,3.484267,-1.286229,6.287670,8.101623,2.406415],[1.396222,3.960979,-6.521299,0.014698,-6.125577,7.926321],[7.813448,-9.293455,-3.634019,4.854294,7.759597,-4.895244],[-9.923884,1.793045,0.912291,2.239526,2.006422,3.317093],[2.030253,8.894491,-0.520632,-9.560840,-9.775814,-4.211749],[9.009168,-4.272372,-8.574748,-7.916270,-1.846215,2.597443],[-5.135885,-6.845362,1.477704,-3.772036,-3.816767,-6.970055],[-3.247538,-0.370673,1.952980,0.290870,-4.414638,-1.024983],[8.637593,-7.421552,-4.798224,8.934377,-8.944508,-6.784419],[2.165473,-8.262835,-2.556660,-2.089288,4.296638,4.176386],[8.122031,1.589035,-5.787058,-4.476835,9.000004,4.417280],[-5.193160,-4.932339,-3.550919,-0.080391,0.505401,7.494822],[5.961143,-0.131308,-6.260287,-3.133808,7.368727,-5.794449],[0.063148,6.413426,1.996390,-9.218572,8.730372,-1.675618],[8.977408,1.300425,4.935203,-6.451487,-5.129938,1.857215],[-1.536360,-8.048859,-1.166071,-8.712400,1.896806,-8.128513],[-0.365134,7.789793,1.904501,-9.599063,-5.355302,-9.994803],[-0.748960,4.989650,6.286758,-9.809634,-4.455800,9.823052],[0.011065,-8.498735,3.298676,7.954180,8.544360,3.706968],[-0.596522,4.656178,9.499392,-2.923885,-4.983926,-7.649561],[-0.364424,5.172675,6.725384,4.570165,-9.671490,-5.800774],[-4.467508,-9.944649,-1.517332,5.840285,3.255824,0.892355],[-1.404985,-0.805938,8.460406,-0.727191,7.752405,-6.403897],[5.245661,8.860344,4.422003,3.825688,9.094811,4.903076],[-3.061817,-4.686063,2.883169,-1.359737,4.919476,-8.912033],[-8.706231,8.869177,0.118290,-8.138851,8.530435,-6.086162],[6.250704,4.894896,3.807037,-6.728671,7.460126,1.776798],[9.898569,-9.220132,2.577818,0.583326,3.419117,1.639228],[9.153507,2.469174,-4.727316,9.173925,-0.885404,-9.180994],[-4.050821,8.088655,-8.290490,-5.617365,-1.666607,-4.205033],[-8.686967,1.307410,-3.684167,-7.717790,3.865879,3.723682],[1.112901,4.968854,0.995874,-7.978071,1.624211,6.975272],[-5.984442,7.819568,-0.734522,-7.046166,9.179171,-5.110214],[6.898795,5.905839,7.599933,-8.900181,-5.453737,-0.210552]], dtype = "float64")#candidate|5388|(70, 6)|const|float64
call_5387 = relay.TupleGetItem(func_469_call(relay.reshape(const_5388.astype('float64'), [4, 7, 15]), relay.reshape(const_5388.astype('float64'), [4, 7, 15]), ), 0)
call_5389 = relay.TupleGetItem(func_472_call(relay.reshape(const_5388.astype('float64'), [4, 7, 15]), relay.reshape(const_5388.astype('float64'), [4, 7, 15]), ), 0)
uop_5401 = relay.sinh(call_5370.astype('float64')) # shape=(1, 15, 4)
uop_5403 = relay.sinh(call_5372.astype('float64')) # shape=(1, 15, 4)
func_5187_call = mod.get_global_var('func_5187')
func_5190_call = mutated_mod.get_global_var('func_5190')
const_5411 = relay.const([6,7,5,-5,-5,4,10,-4,6,-10,7,-3,7,-3,5,8,-9,-7,6,-1,-10,10,2,6,9,-2,2,-5,1,-3,-5,-8,-5,-1,8,3,8,9,-7,-9,2,5,1,2,-10,-6,7,3,8,2,7,-3,1,6,6,-6,-9,2,-1,-1,1,-7,-1,10,-2,7,-10,-6,-2,-8,-8,-9,-5,8,-7,-6,6,5,-4,1,7,-7,6,-9,4,9,2,-10,10,3,-6,-4,-4,4,-5,-4,-10,-1,-4,7,8,1,-3,-6,-8,-10,10,9,-6,2,7,-6,-6,-3,7,-10,5,4,-4,-3,-9,-9,1,-1,-10,-6,10,3,-9,8,-6,1,-2,3,5,-8,-3,1,4,8,-6,2,8,-2,2,3,10,3,-8,6,4,-8,-1,-8,-3,-9,-3,-7,-4,8,-10,-8,-6,2,7,9,-2,-8,-6,-7,5,9,5,-8,4,-9,-8,5,-7,-10,-5,-6,4,1,4,-10,-4,-6,-5,-9,2,-5,4,4,9,4,3,-2,-7,8,10,10,-8,-2,1,-4,-9,5,1,5,-5,5,-10,-4,1,-8,-1,7,-5,2,10,10,7,5,7,9,10,10,4,-8,-10,-7,7,2,-3,-9,-2,-6,-6,-8,-2,5,-2,3,10,2,2,-1,-3,10,-7,1,-7,8,-8,6,-3,4,-7,3,2,5,5,2,9,6,-10,5,3,-1,-8,-3,-8,-6,7,10,5,3,3,9,-9,10,-1,-5,6,7,2,5,-10,5,-10,-7,2,6,9,-9,-2,6,-4,10,-8,4,-9,-2,-7,6,-1,4,-5,3,10,2,1,-5,-2,4,4,-2,4,9,10,-3,-8,-8,-9,-9,-3,1,1,-8,3,-3,-10,7,10,7,3,2,-9,6,-9,7,6,-5,-3,9,7,-2,-8,10,7,7,9,3,2,-6,-6,5,10,-10,5,9,-1,10,2,-7,-9,-10,6,8,7,-10,-6,7,-7,9,8,5,-8,1,6,8,-4,6,4,-9,8,3,6,-8,-1,-4,-6,8,-5,4,9,-7,-2,5,6,8,7,6,3,6,-2,1,-1,-1,-2,-6,-9,-5,5,-1,-6,-5,-8,6,-6,5,3,7,9,-8,5,1,10,-8,-8,8,-6,8,-3,-7,-7,8,-10,-3,4,-1,7,2,-10,2,9,-1,-2,-9,3,3,-10,-9,-7,3,-4,-10,-8,8,-5,5,2,-7,5,9,-3,8,-5,-8,-9,-6,5,6,8,-1,-6,-5,4,-3,9,7,-6,9,-3,-6,10,-7,-7,8,7,-10,-8,3,8,-1,10,3,2,-7,-1,-9,-6,3,7,1,-3,-9,6,2,-10,3,10,3,-9,9,5,8,2,7,5,5,10,10,6,2,-5,-3,10,-7,8,9,-1,9,10,-5,5,-4,2,3,-8,-3,1,-7,3,1,9,-9,7,-6,-3,2,10,6,-2,1,3,2,-1,-6,5,8,-5,8,2,-7,-6,-4,6,8,9,7,-5,-8,10,-1,-9,-2,-5,-6,-4,-3,-3,5,-8,-7,-4,1,-3,-6,-4,1,7,8,2,10,-9,4,-1,-1,-6,8,-3,9,-1,-1,3,8,5,-3,-2,-5,-5,4,10,9,-6,-5,-9,6,-3,-4,-1,8,8,5,6,2,-8,1,6,5,-8,-10,7,6,-3,10,-1,-9,2,1,-3,9,-1,-1,-10,-8,7,3,4,-5,10,-2,-4,1,7,3,-5,1,-3,-1,-9,1,-7,-9,4,9,-9,-6,-1,8,9,8,-6,-7,3,3,-9,5,9,-8,-8,-8,9,2,10,-8,3,-10,8,9,-9,5,-7,5,-6,8,3,3,-1,-10,6,10,7,-10,1,-8,2,-10,4,2,2,4,-9,5,-1,-2,4,-8,-4,-8,8,7,9,-8,5,-1,-1,10,3,9,-10,-2,-3,-7,-9,-3,-1,6,10,-3,5,3,10,-5,1,-8,6,-7,-10,-7,-1,5,-5,-2,-6,-1,8,6,-9,2,6,-1,7,1,-2,6,1,5,-4,-10,-1,-3,6,8,2,-3,9,-1,2,6,2,-9,-5,10,3,-4,-2,-5,6,-2,-5,-7,9,-3,-3,6,10,10,-10,-7,-10,-9,-7,3,-10,-10,-1,1,6,-2,-2,-4,-2,10,-7,-6,9,1,2,7,-8,8,5,-9,3,2,8,2,2,-3,-10,-6,-6,2,1,-9,8,8,9,8,1,-9,-6,2,-2,7,-5,10,-1,1,-4,3,-10,-9,10,-10,7,-1,-10,-3,9,-4,-2,-6,-7,-5,7,-4,10,-5,3,3,-5,-5,9,-7,7,-3,-6,-1,5,-5,-5,1,-4,-6,-2,-7,5,-3,-9,3,2,4,-4,-2,-3,3,-7,3,-1,-8,-8,-1,8,-9,4,10,7,-5,-9,10,-5,-1,-7,6,3,-2,-1,-6,-7,-4,5,9,10,-3,-1,2,-5,-8,7,-10,-10,-1,-7,9,-10,-7,9,-8,-9,9,-3,-8,5,-1,-2,3,5,-10,-3,-6,-4,-9,-8,1,8,-9,-2,-9,5,-1,1,6,2,-10,-8,7,9,2,-4,5,6,3,3,7,2,-2,6,2,-7,-10,-9,5,-6,5,4,2,-8,-8,-8,6,4,4,-7,7,-7,10,-5,-3,-4,1,-2,7,-7,-8,1,7,-3,7,-7,5,1,-9,-10,7,5,-3,-10,-7,-5,-4,-1,6,-1,-4,-7,-2,4,-5,6,-10,2,7,2,-1,-9,7,-5,3,-4,-4,-8,9,8,8,-10,6,-2,3,7,2,8,-7,2,1,-9,-9,3,-10,-6,6,9,-7,5,4,4,7,7,7,5,5,4,4,-4,8,-5,5,4,-6,1,-10,-5,-9,2,2,-3,-3,3,-4,-4,-6,-5,-4,2,-10,9,8,-9,-8,2,-8,9,3,1,-8,10,-5,-2,7,-8,-6,7,2,-10,6,-10,-10,8,-8,1,-5,9,-7,8,6,-9,4,6,-3,-6,-2,-3,-5,4,-9,1,-7,5,-3,7,10,2,3,10,6,-3,2,9,-7,3,9,2,-4,9,10,7,-2,-4,4,-1,1,9,1,3,10,-4,9,6,-10,1,2,10,4,1,9,10,-7,5,6,4,1,-8,3,-4,-10,-5,-2,6,-10,-7,10,-10,6,-5,-3,-2,-6,-7,-6,-1,7,-9,-2,8,-4,2,-2,-1,10,-3,-2,9,7,6,-8,-10,-5,-5,-3,-1,-8,1,7,-8,-5,-10,-10,-6,5,-10,10,-10,-8,4,-10,8,-7,-7,8,-1,-6,9,-2,-3,-6,-3,-5,-3,-10,2,-3,-7,9,7,7,10,1,-1,6,-1,9,3,7,-4,-5,6,-9,8,-4,5,3,7,9,-8,-4,-9,4,-8,10,-7,-10,-2,-3,9,7,1,1,5,-7,-5,5,5,-8,10,5,-2,10,8,-8,3,10,7,-1,1,9,-9,4,2,7,1,-9,8,10,-5,10,-4,-1,4,-5,-7,3,-7,-10,-10,-2,8,3,-3,2,1,-5,4,8,-5,3,9,10,4,6,-4,2,-2,-7,-7,-2,-3,-5,-2,-7,6,-10,5,-1,-9,-2,7,-6,8,-1,-6,-5,-9,-8,-3,-9,4,-4,-1,-9,-3,-7,4,9,-1,-8,5,-6,6,-5,-6,8,6,-8,-8,-7,-7,-3,-10,-4,5,5,-7,-4,4,4,4,9,-5,-6,5,5,-10,4,3,10,-10,-7,8,2,9,-10,-7,4,8,-4,-3,-5,-9,2,7,-9,-9,-3,-8,-6,10,-1,-7,-8,4,7,5,10,-3,8,-6,-6,-5,-1,6,1,7,5,-6,-10,7,8,1,7,-2,-5,-4,-3,-2,4,-4,-5,7,-7,-3,5,-2,5,3,-1,-7,-1,-9,-1,-1,-10,10,-5,5,9,-7,-1,9,6,8,-5,4,-7,10,-6,5,-5,-3,-1,2,-8,6,2,5,-5,5,-9,4,2,6,-7,3,-7,2,-7,-7,7,-6,7,7,4,2,1,-9,-1,10,-7,10,9,1,-8,1,-2,-4,-8,-2,3,8,-1,-6,4,-10,8,7,2,3,6,5,3,-8,-10,-5,-4,8,10,8,1,8,-10,9,1,-3,-8,-5,-10,1,-3,5,-9,-3,-9,4,-10,3,7,5,-6,7,9,-6,-4,8,-3,-5,8,-1,10,8,10,-2,-3,-7,5,2,5,-2,-5,6,-3,-10,10,9,9,-10,9,7,8,1,-7,7,3,1,-10,-7,8,4,-9,6,10,-6,-7,-3,5,8,10,-4,-5,-2,1,-9,-5,7,-8,1,-10,-9,7,1,7,-6,7,10,4,-8,-9,2,-10,9,3,-7,8,1,7,9,-3,9,-6,1,-10,3,-6,5,-5,3,8,-2,-6,-2,-4,7,10,7,-6,4,-7,-7,-5,8,-9,-9,-3,-3,-5,-3,10,6,7,-3,-10,-9,5,10,8,-1,1,6,-2,-4,-8,4,5,7,3,-7,9,10,1,6,-9,10,7,-5,-7,-6,4,-2,-9,-4,-8,-5,-6,3,-8,9,-5,9,-5,1,-3,-8,6,-9,10,9,-2,-7,1,6,-8,-5,3,5,8,1,-2,2,10,2,3,-8,-6,-5,-2,4,-7,-2,-5,-8,2,8,-10,-1,10,-8,5,-9,-10,7,5,-3,2,-3,-2,-2,2,-8,8,1,-3,2,7,-8,-6,-1,8,-5,9,9,-1,-6,3,-5,3,1,-7,3,-4,10,-8,3,3,10,6,-5,-2,-9,-7,8,-10,-4,-1,10,-10,7,1,5,8,8,-7,-10,-6,-6,1,10,2,-10,-3,-10,1,10,-7,-8,2,-8,2,8,5,8,-9,-7,4,-5,8,-7,-3,2,4,5,-9,3,-9,7,6,-9,-6,5,6,7,7,4,3,-10,-10,-10,-7,10,7,-9,-5,-7,7,-10,-4,-6,1,1,-9,-10,7,8,7,10,-7,7,7,4,-8,4,3,10,-3,-9,-3,1,-1,2,9,1,10,10,4,9,10,1,-5,-9,-4,-1,7,7,-1,7,-2,7,-10,7,-1,-3,10,-6,7,-5,4,-1,8,-1,8,10,-10,-10,-2,-4,3,-7,1,10,-9,-2,3,-3,1,9,-6,9,-5,-8,-8,-3,-8,-6,4,-1,-2,-5,8,5,4,9,4,7,7,-6,8,5,-10,6,-6,-6,-4,3,-8,9,2,-3,-8,-6,8,7,3,-1,-3,-6,6,9,-10,-1,-1,-2,10,7,-8,2,-5,9,3,1,-8,6,7,-5,-10,-7,9,-1,-5,-7,-1,6,-10,-6,-6,10,1,8,-3,-7,1,1,-3,9,3,8,6,2,10,8,2,-10,6,-5,2,2,-7,-1,9,6,-5,6,10,-7,5,-6,3,-3,5,10,9,-9,6,7,-2,-7,-9,8,10,-2,1,1,-4,-5,-2,6,-6,10,-7,-9,-1,-5,9,2,9,4,1,-5,2,4,4,7,-5,4,-3,-2,-9,-7,-10,-8,4,-10,7,-10,5,5,5,9,-9,3,-6,-8,-2,3,-5,-3,-3,4,10,1,9,7,7,6,-9,-10,4,9,-7,9,3,1,-7,-8,-10,-6,-6,-4,9,1,-1,-2,-10,-10,-5,-9,3,6,8,8,-4,10,7,3,6,-3,-6,1,-6,-5,1,1,7,-5,1,4,10,-3,7,-3,1,-9,9,-3,10,7,-3,5,-4,-4,6,10,9,2,-9,-1,9,5,10,6,-7,3,-1,-1,-1,-2,2,-10,3,-9,5,3,7,-5,-10,-7,3,-9,8,-9,-5,-5,-1,8,-7,8,-4,-9,1,-8,-2,-9,4,-9,-8,-3,-9,7,-3,8,9,-3,9,6,5,-2,-10,2,-9,-8,9,-9,2,-10,1,7,2,-5,-4,-10,4,6,2,-7,6,7,9,-4,2,-5,10,2,-2,4,9,-4,7,-6,7,10,-1,1,-3,-8,-10,7,-5,-3,-8,-4,2,-8,10,-8,9,4,-4,-7,-1,1,10,-1,-7,-1,-1,1,-6,4,5,7,-9,4,-6,-2,6,10,1,10,-6,-4,7,-4,-4,-1,8,3,-8,3,-7,-3,-8,8,4,9,10,-1,-9,-2,-1,2,-10,9,9,4,-4,-9,-1,4,-7,-7,6,-6,3,8,2,3,4,-1,-3,8,-1,-2,8,-8,-8,-3,-3,1,-8,9,-10,1,-6,8,-7,-9,-5,-9,-8,7,-1,4,1,9,-8,-9,-3,-2,-3,10,-7,8,-3,-7,3,-9,-4,8,10,-5,8,-7,-4,-1,1,9,-2,2,-2,-6,-2,-9,8,2,-9,-8,-10,-7,6,-3,9,5,-9,-7,-3,-7,-8,1,-6,-5,1,1,8,8,-7,-1,3,10,-10,-2,-9,-7,-5,-6,3,-5,7,-6,3,-1,2,-7,-7,-6,3,9,5,3,-4,1,2,-2,2,-6,-1,-5,8,-10,10,-1,2,-9,5,8,-10,-9,-5,-1,-8,-3,-3,-3,-4,-5,7,-7,5,-9,-7,2,-6,-2,-3,-1,2,-1,4,-6,-7,1,7,6,-6,-2,9,-4,8,-7,1,-3,2,7,-10,-4,-6,-2,7,-4,-10,-7,4,-8,-9,3,-5,-4,2,4,-6,10,3,4,-9,-4,9,-2,5,7,-4,-6,9,-5,3,5,-8,-3,9,3,-8,-7,-8,-3,-8,7,-3,1,6,4,-5,-1,6,-4,-1,-2,-3,9,-7,-2,-3,7,5,7,-3,-3,10,1,-7,-10,3,-9,-1,8,9,3,1,7,7,9,4,8,5,-9,-6,9,1,6,6,-1,3,8,-5,4,-8,-4,5,6,1,2,-8,-9,-9,-2,8,-2,7,-9,-5,-4,5,5,10,-10,1,-10,-3,6,3,-10,1,-4,-2,-1,-5,9,-3,-10,8,-5,3,5,-4,1,1,8,3,-10,-2,-9,-6,-7,-3,-3,10,-9,3,1,7,5,-3,-9,5,-9,-10,6,-9,4,-1,-4,-5,5,8,-7,10,-2,5,9,-3,-8,9,1,-6,-9,-4,-9,-7,-8,2,10,9,5,5,3,2,-3,5,6,-8,10,9,2,-6,9,-6,-2,-10,9,10,-5,5,-3,3,4,6,5,5,-1,6,1,-8,-8,-1,-6,-1,5,-1,6,8,7,-6,-1,-10,2,-2,-9,-7,1,-4,-10,7,10,-2,4,-10,7,-3,-5,-1,-8,-3,3,6,9,-10,6,2,9,-6,-7,-6,-10,-1,4,5,4,1,-7,3,8,5,-3,1,5,7,-4,4,-3,-1,8,-9,2,-10,-6,7,8,-7,10,-5,3,-5,-6,-1,8,6,-7,-6,4,10,-1,-3,8,10,-7,-1,8,9,8,2,3,-10,2,1,-4,-7,5,-3,-9,-1,9,-9,9,-2,-8,-3,-4,-1,-8,4,3,-8,3,-3,4,9,5,2,-7,-3,9,-6,-6,1,1,-8,9,3,7,4,-10,-5,-4,9,1,4,5,-5,1,8,5,6,-2,-6,5,-10,-7,-7,2,-10,-9,5,6,-6,-7,-9,-10,6,4,-1,-4,-3,6,9,8,-2,-4,1,-8,7,1,6,10,3,4,2,-5,-8,-7,-2,6,1,3,-2,-1,4,6,5,-4,10,2,-5,-7,1,-9,8,-7,7,-3,8,-7,-7,-4,9,-1,-5,10,-2,-4,10,6,-9,9,10,5,7,2,-7,8,-8,4,2,5,3,-8,3,1,4,9,3,6,8,-7,6,-10,4,8,-9,1,4,-5,3,10,7,5,-5,-3,9,-9,-5,1,-4,7,-4,5,8,-5,-7,10,4,5,6,-2,10,-10,-10,-6,2,10,-2,3,7,2,-3,-8,-8,6,-1,-9,-10,7,1,-8,7,-8,3,10,1,3,-4,1,-4,-6,-3,-7,3,7,-9,7,-3,6,8,7,6,3,1,-2,9,1,4,-9,5,-2,-10,-10,-6,10,-2,3,-7,10,10,-4,-9,-1,6,-1,-5,-3,2,8,2,1,-5,4,1,-1,-5,8,-1,-8,-10,-5,-1,-1,-4,10,9,3,-6,-7,2,-7,-2,-2,7,-9,10,3,-4,4,-3,7,-6,5,7,10,-9,-8,-4,-5,2,-8,-10,4,5,-4,-2,8,1,-1,-5,-10,8,9,-6,-2,10,1,-3,4,2,-4,-8,4,8,-8,8,1,-3,9,5,-10,-3,5,-5,-4,6,3,2,1,-3,-7,4,7,8,-9,-7,-8,-1,8,1,-4,10,10,5,4,-10,-8,-8,-4,-3,1,-3,2,-3,1,-2,10,-2,-4,2,4,-8,8,9,4,6,-6,4,4,-10,-1,2,4,4,9,-5,-9,7,-9,-9,10,6,-6,-4,10,-9,-6,-2,5,8,3,-8,8,-10,-2,10,8,-8,8,7,7,9,-9,6,9,7,-9,6,8,4,7,-4,10,1,5,6,-6,-7,-5,6,-1,8,7,9,10,-7,-7,-3,-4,-7,-2,3,9,4,5,10,4,5,-3,-9,8,-1,-7,-2,-1,-10,-5,3,-2,-9,-7,-2,8,2,-10,4,7,2,2,-6,6,-5,8,-4,5,9,4,-2,-7,-4,7,6,5,-9,2,9,-3,9,-2,-4,-6,-10,-2,-5,-1,7,-8,10,-9,-10,6,10,-4,1,-4,5,-7,2,-1,8,5,8,6,-7,-8,-9,6,4,-10,6,-9,6,7,-3,7,10,7,-7,5,2,-1,-10,10,-5,-8,-8,1,2,6,-8,-1,4,4,2,5,7,-5,-3,10,9,8,-8,3,-8,-7,9,5,-7,7,10,-3,10,-3,-5,10,4,1,-8,2,-1], dtype = "int8")#candidate|5411|(3328,)|const|int8
call_5410 = relay.TupleGetItem(func_5187_call(relay.reshape(const_5411.astype('int8'), [3328,])), 2)
call_5412 = relay.TupleGetItem(func_5190_call(relay.reshape(const_5411.astype('int8'), [3328,])), 2)
output = relay.Tuple([call_5359,const_5371,call_5379,call_5384,call_5387,const_5388,uop_5401,call_5410,const_5411,])
output2 = relay.Tuple([call_5360,const_5371,call_5380,call_5385,call_5389,const_5388,uop_5403,call_5412,const_5411,])
func_5413 = relay.Function([], output)
mod['func_5413'] = func_5413
mod = relay.transform.InferType()(mod)
output = func_5413()
func_5414 = relay.Function([], output)
mutated_mod['func_5414'] = func_5414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5417 = relay.var("var_5417", dtype = "float32", shape = (11, 5, 14))#candidate|5417|(11, 5, 14)|var|float32
uop_5418 = relay.asinh(var_5417.astype('float32')) # shape=(11, 5, 14)
bop_5433 = relay.equal(var_5417.astype('bool'), relay.reshape(uop_5418.astype('bool'), relay.shape_of(var_5417))) # shape=(11, 5, 14)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5436 = relay.TupleGetItem(func_4899_call(), 0)
call_5437 = relay.TupleGetItem(func_4900_call(), 0)
func_5099_call = mod.get_global_var('func_5099')
func_5101_call = mutated_mod.get_global_var('func_5101')
const_5445 = relay.const([-4.885081,-4.468951,7.038634,1.378234,9.586636,0.668842,1.532783,7.453284,7.593114,-2.102307,-9.545763,2.043876,-5.766198,-7.961344,-7.768941,-9.183891,0.296179,-1.567785,1.251122,-1.911763,-8.637879,6.654259,-5.437468,-8.458036,-1.081098,8.941921,3.402756,9.102004,-1.416136,9.138579,3.839826,4.906669,5.667223,3.514170,8.467810,3.004398,-9.825442,-8.548517,8.190275,-8.324696,0.657596,-0.184180,-1.353528,-6.845599,0.045298,-7.787621,0.863739,-4.873676,8.154985,2.635003,6.308272,-7.563745,3.776228,5.009545,3.328300,0.543768,2.159108,0.607876,8.954974,-3.236349,-4.354981,-9.540592,-3.038827,-5.041518,-1.449375,-4.739306,-6.726613,5.812781,4.955091,7.473597,8.038211,8.258426,-4.332258,-0.971233,-3.729311,4.603677,3.220660,-2.381604,-5.620104,-1.533942,-0.831305,-4.452971,0.135787,2.410839,-5.506530,-2.569051,6.288563,-7.551121,-1.485839,8.061290,9.169709,7.915810,-2.492233,-3.799575,-5.629813,-0.317536,-7.437113,-5.334046,-7.547472,-3.328707,-3.617275,-2.926315,3.510212,3.195663,-6.086791,-0.059525,5.627488,-2.492657,-4.699594,-4.533275,1.695994,2.740794,-6.366191,-1.672656,6.405994,0.184747,6.278830,4.773962,2.863072,-5.511222,-6.173835,6.496528,6.139689,5.073908,9.342131,-4.754002,-0.008731,-6.881108,0.483814,-8.394468,5.831833,-2.641478,5.113863,8.813562,6.506263,-6.782839,2.993554,8.021735,-7.955347,-5.406673,1.285810,-1.919277,-1.591315,-4.986381,7.654190,7.802311,-8.117337,7.832768,1.978651,-6.251497,0.264211,-8.768787,8.247899,8.348472,9.550742,3.057543,-3.549699,-2.810803,-8.674905,6.031910,9.513642,-6.057019,-5.205675,-7.632337,1.195922,-9.248658,1.235764,9.920561,9.384587,-2.954313,-9.429202,4.291329,-3.235807,4.853162,-2.691987,-3.626702,6.322149,2.127039,5.561745,-2.092012,9.940253,1.583030,9.347248,8.649902,8.759206,5.835831,7.259101,-2.176826,5.066006,-0.400334,-4.366722,4.660008,7.214427,-6.633246,-6.718360,7.499063,2.462126,4.976001,5.291794,2.378101,-3.492661,-2.583497,9.147198,3.590307,4.913240,-5.760581,7.313220,5.555612,1.264704,3.994074,-1.095885,6.556033,8.357400,7.114811,5.404300,1.767632,8.512698,3.110238,-6.677848,7.352733,-0.623580,-0.641451,-8.503411,-9.693964,8.613940,3.399271,1.453221,8.466306,0.759883,1.354025,-6.175314,2.133041,1.853611,-7.248994,6.918733,1.976399,-9.830218,1.042541,0.327585,-5.926972,9.430279,9.738156,-7.821319,5.622844,8.484341,-5.602559,1.952308,2.887025,-6.895639,3.884829,-2.462593,0.063415,-3.585242,6.157673,-9.811419,-9.285686,2.993433,-6.516696,-8.439026,-7.253616,8.092192,3.579954,-6.520794,8.689063,8.522553,-6.378137,3.598492,-8.351768,3.349368,7.712748,2.960092,3.860277,6.728510,-1.883701,-6.731715,7.993678,5.485181,-1.501800,-1.299985,-4.139068,-0.671848,5.017038,-9.036843,4.813295,2.941075,9.191645,-5.557742,0.263014,9.070802,-3.268839,-2.728115,1.739508,-5.489379,8.647270,1.320510,-4.707651,9.946629,6.963285,0.530231,7.155485,0.882192,4.237323,7.229486,-5.354508,-8.666859,-5.018962,-3.958539,-2.827737,-1.857162,2.290480,4.409896,0.934557,5.418976,-5.581501,-7.052543,8.305407,8.815408,3.128587,-4.258885,1.212192,-4.228160,8.946905,3.880008,-4.155228,-0.561782,8.823595,2.744459,-6.821320,4.603342,-5.434658,-6.837682,4.883259,-0.252732,-4.249861,-5.167109,-5.525073,-4.086151,-3.090560,8.011303,0.534174,-5.936625,-6.514658,1.832779,8.368227,5.738107,-1.981309,7.743141,7.235372,3.861955,-7.297913,2.840597,-0.940265,5.582545,7.462579,7.343655,-4.856729,2.799481,-7.124084,5.896696,3.417229,6.250680,-5.404649,-8.362025,-6.928223,7.806787,2.290534,5.409818,-2.841045,-2.064260,-4.315164,-3.555369,-1.520134,7.437918,8.274688,-9.365608,5.546136,-7.894098,-9.563347,-3.961536,-4.546720,-0.065259,-1.615431,-9.239840,-6.953898,6.112452,-2.175157,2.574918,0.773316,2.487271,8.142453,-0.809316,8.439638,-9.916192,1.576006,1.252759,-2.506419,4.391611,7.346330,-0.306264,4.461026,-3.439945,5.215907,-5.159174,-1.509282,3.825024,2.736752,5.525286,9.720863,-3.062134,-7.240293,-9.410911,6.021733,3.080996,6.280763,-5.214509,1.397672,9.393746,-3.310684,-7.920487,7.041435,-5.308488,8.781037,-6.293067,2.065680,1.370133,-6.376922,9.571051,0.154548,-1.032324,-8.985006,5.450835,-7.990150,-7.926001,-6.111452,3.568583,3.166224,-1.668510,1.125598,1.249393,-2.919764,-9.818066,-0.425181,-0.701332,3.124978,1.117802,-2.984922,8.853345,7.889917,0.276519,-6.080949,7.747278,1.695842,-9.771147,-9.712881,4.028417,-3.089765,7.314291,1.641343,8.381027,8.864791,-7.959614,9.262891,-7.289170,-8.470525,8.008771,-4.271604,-1.803216,-3.332966,7.072284,-1.948168,8.607730,-5.144595,4.096866,8.589536,-7.864353,1.524371,-3.111375,3.930668,6.307901,-7.801217,-9.867567,-2.168624,-2.092487,-0.298665,2.046925,7.928876,0.996330,-5.005614,0.963956,0.446704,-7.394779,2.388229,-8.825698,0.243234,-1.551081,-0.905671,-7.853084,1.456040,6.102552,-9.588348,-1.106736,-2.894989,-5.488792,-9.092242,-1.392924,2.268800,2.552179,4.327946,0.144544,0.860244,-7.413041,0.920617,-5.598696,-6.993737,-8.807424,5.460585,-4.404580,-9.402359,-2.923229,-8.066043,4.737959,4.787672,-0.305380,-9.499502,0.921542,5.044660,3.637951,-5.718262,9.704356,5.109366,-3.851276,-2.685860,-2.260096,2.878497,-3.425619,6.511029,5.239627,-5.711231,7.324058,-2.363874,-8.732502,9.038462,-9.662681,-9.701523,-6.259752,3.930355,-4.690024,6.475699,-2.572761,5.663195,-1.516378,-4.046550,7.149365,-4.943651,8.886935,6.724942,-6.315764,5.641806,-5.486446,6.645571,-5.504994,6.795416,-6.337566,9.794149,1.477089,0.244725,-2.853982,-5.173569,-5.708027,-2.582920,7.705236,-6.900655,-6.912025,-2.948502,4.531593,0.794696,-8.746755,-9.794404,9.000175,5.855481,-4.563390,7.319978,2.448353,-3.682642,-6.142158,2.898799,-9.152381,9.342871,-0.383678,2.397975,5.550218,7.460939,-3.369349,2.387788,5.859279,-9.427235,0.464819,-7.623773,5.147332,4.102023,-0.262875,1.563199,-5.198035,7.940585,-3.842905,-2.110770,-6.473807,3.600818,9.481341,-9.653833,-8.835723,-6.350887,-3.613390,-4.274208,0.472028,3.336008,-1.206082,-7.882434,-2.804175,7.139796,-7.217933,-8.559054,8.809537,2.483660,-3.136855,-3.624719,5.112840,3.832962,1.061312,9.235364,4.968508,-4.847575,-7.171755,-5.785795,2.340842,7.359224,3.575412,-4.029996,-6.182087,6.240220,5.961851,8.012991,-2.323053,7.548240,-5.683007,-4.849875,5.694160,8.959509,4.191551,-3.404903,-3.772115,-9.754250,-9.731638,-3.655124,2.333960,7.556814,8.921696,7.940265,8.526033,-5.062073], dtype = "float32")#candidate|5445|(660,)|const|float32
call_5444 = relay.TupleGetItem(func_5099_call(relay.reshape(const_5445.astype('float32'), [11, 10, 6])), 1)
call_5446 = relay.TupleGetItem(func_5101_call(relay.reshape(const_5445.astype('float32'), [11, 10, 6])), 1)
func_3657_call = mod.get_global_var('func_3657')
func_3660_call = mutated_mod.get_global_var('func_3660')
const_5470 = relay.const([[9.902679,-5.616753,-1.833957,2.812068,6.098727,-2.003563,-0.422647,0.260346,4.845351,-5.795653,-7.842350,7.101864,6.593234,-8.724601,-1.608836,1.245231,-5.570887,-6.889744,-8.323030,-2.643539,3.309887,3.088529,0.400437,3.595307,6.867966,-5.491002,-7.725074,0.803704,-9.723189,9.182930,-5.543104,-7.892102,-7.546308,5.560318,-5.886443,2.389375,-8.515957,-0.758169,0.521803,-5.079285,9.245499,9.652356,-5.397311,4.342827,-8.653358,2.482532,5.185832,4.728498,-0.505150,-9.629257,-8.138522,-3.677556,-4.534967,-8.729585,3.850749,-1.442549,6.847990,-1.413788,-6.480408,-2.478945,-9.874213,2.597585,-5.857621,-1.189908,2.869848,8.125039,-3.148463,-0.973177,-1.099208,-7.522771,4.225191,-5.340992,-4.657820,8.134237,-3.069843,4.119572,4.881695,2.114674,-5.461333,2.111278,-1.894507,5.213571,-8.668214,-9.399642,3.788292,-3.844712,9.600699,0.287775,1.583358,5.532291,6.072811,1.153686,1.219165,-8.952587,-9.557942,-4.437614,-3.982257,9.950081,3.913899,-4.780430,-2.115984,-0.509872,4.737051,-1.139312,-3.038314,8.742031,-4.275553,-4.971811,9.028649,2.868546,-5.718979,-9.658382,-1.088726,-6.459162,8.997721,-7.194363,2.334327,-9.514137,-3.191031,-3.964468,-0.503392,-0.025893,-4.104298,-5.653954,7.620158,8.052040,5.379234,1.117480,6.310001,-9.174232,-5.236457,-2.913747,4.001865,-6.095802,0.871070,-5.965338,-3.708724,2.631258,9.219772,-1.283518,6.784635,9.313424,-8.618939,-1.348993,-9.171024,-1.987487,9.145115,-2.248982,5.313424,1.413125,2.975858,-8.489249,-6.848841,-1.618493,-5.529226,9.240622,-4.856563,-5.242113,8.258766,-4.180724,2.170169,-9.311934,-2.911014,9.479921,3.447805,-4.938615,-2.109852,9.370894,-0.121632,2.450861,-4.111945,4.251388,9.042101,7.129899,-8.140988,-8.039065,9.064219,2.261416,0.528240,7.043657,7.027638,-3.303504,9.406783,-5.368074,4.719770,-8.682683,-2.465129,1.601302,3.470810,-9.583587,-4.514215,-7.924222,5.082853,8.369859,-4.365425,-8.789981,1.883676,-4.535555,-0.946608,-6.922390,-7.659049,8.876952,-9.906835,-0.159204,-4.157331,-3.485611,7.199319,-5.792683,-0.790785,3.123348,-8.826240,-3.929243,-4.183160,-7.101216,3.597556,2.940109,7.211560,4.139907,2.717787,-3.802605,-2.376469,-3.622119,9.515252,1.087076,4.782501,-0.830497,-8.356334,2.868083,2.272253,3.159508,-6.945118,-2.075792,9.863769,-4.069060,5.553301,-2.578685,5.737818,7.477536,5.999883,-7.766516],[-3.224923,9.118890,6.677153,0.771938,-7.741162,7.002795,8.938558,4.937386,9.189433,2.424043,-2.183786,5.890242,1.979453,-5.235547,8.073238,7.058444,4.574822,-9.159784,5.868992,-7.154214,-7.711561,-4.820047,9.699633,-3.470470,6.037882,-4.384046,-0.406841,7.303545,-1.510755,-2.900629,-3.193162,1.589171,-5.168028,-5.900230,-0.572792,-8.798909,8.017926,-3.720247,-8.418543,9.450856,1.400764,1.345295,1.271646,1.407638,-4.155462,0.481517,0.215439,-8.835268,-1.327773,7.578573,4.338360,5.812922,-1.167734,-4.643662,5.482425,0.564462,7.287576,-3.691604,7.378157,-2.824765,4.398616,5.738070,2.818704,4.921446,-7.235875,-6.153735,-4.624544,-0.932732,7.140960,3.372837,5.157462,7.590542,2.059879,9.325752,9.713442,-1.610108,-2.013028,7.383895,0.360129,5.789955,8.138226,-3.411388,-4.520160,9.112008,7.675478,-0.092228,9.463066,5.634333,0.456844,1.636291,-2.429716,8.665716,5.505537,-8.328733,0.337645,3.743343,8.145449,-8.174609,-0.762920,-7.729794,-1.020102,-5.797132,-3.786222,-7.335319,6.452511,9.139495,3.642338,-9.143600,7.091363,-2.684597,-4.574253,-4.765248,6.858621,7.388719,-8.944669,7.252752,-0.308161,-2.909213,9.114278,-0.339253,-3.207152,-2.286014,4.562461,3.307630,-1.248632,0.542300,8.738293,-7.934245,9.992280,-8.287230,3.598098,-5.488922,-2.823767,7.930636,-8.372054,-3.950882,0.209491,-2.310378,7.923124,0.220997,4.745856,-3.662731,-5.712609,3.732818,7.494374,3.809678,1.980999,-9.567944,-7.276656,3.871433,-2.554668,-2.924534,5.774569,-6.055413,-1.766787,-5.288117,-4.662770,-1.918047,6.569085,-5.511116,4.552942,-7.765572,-3.655363,-9.460558,-7.851237,7.919843,2.940623,-2.822775,-4.592925,3.173571,-1.705907,0.467580,5.546885,-6.228779,8.837857,3.418083,-3.088698,-2.396835,-6.872810,-2.217445,-6.812915,6.441806,1.284153,-4.756775,-6.742098,-3.522150,7.629586,-9.050680,4.526111,-3.889975,8.738992,2.071510,6.795576,-9.026320,4.434422,-7.383325,-3.071207,5.981989,8.501778,-3.738718,-4.197383,-2.986682,-3.343019,-4.046568,0.975991,-2.416868,-3.885376,2.899056,5.181668,0.558209,-8.471479,1.086292,-6.489170,-2.286651,-2.836970,6.483478,1.077069,3.565814,-4.543735,6.305293,-0.283291,0.184555,9.649224,-1.106254,-2.168401,3.739434,9.883802,-4.057576,-2.819475,5.341961,8.477721,7.770785,-4.954626,-7.214727,-2.956944,5.016163,2.382497,6.012373,2.480970,-7.311569],[2.987334,-8.299720,-3.023804,-5.256640,1.043855,4.387258,8.617127,2.141078,3.599711,-4.051839,1.823936,-1.124279,-7.934232,3.008756,3.199135,-2.841562,-5.401190,9.728869,1.062597,5.816187,9.306065,6.028239,2.522113,4.769452,-6.252675,-1.560875,2.443495,-7.227095,-9.913999,1.041761,8.613295,-8.361187,-2.205140,-9.449296,-0.218105,-9.933687,6.766664,-6.637494,-4.834187,2.348543,9.786801,-0.909895,9.012913,3.227111,-2.292369,8.970832,-6.985233,0.089446,-1.697792,-5.258238,0.492631,-3.791298,-7.170657,2.944509,-2.774788,7.217278,-5.512459,-6.191443,-9.198520,8.258459,-2.120451,2.687965,9.091415,6.514600,-2.918592,-3.760176,-3.850344,-6.567873,4.483196,9.501931,1.932432,5.549676,-7.379526,1.892697,5.234727,-4.251476,6.232949,-2.589752,-1.733874,-6.408636,7.225307,2.805646,-5.844250,-6.457064,9.311903,5.167243,-1.609111,7.763491,6.237093,-5.057205,5.684441,-3.187431,-7.402535,4.669073,6.504034,0.006117,-7.573786,-0.841871,8.741069,-9.686395,2.658250,0.097503,5.770205,-7.328236,1.019395,0.927870,0.961240,6.553214,3.707164,5.755080,9.025755,7.030584,8.920286,-3.729201,8.435586,3.011444,-9.073747,-2.690174,4.521153,-6.548261,2.367475,-1.008322,-8.538502,-4.030991,-1.550957,-0.123117,6.744351,-7.062932,0.128011,4.964205,4.539337,1.860921,4.276132,6.676198,2.275948,2.795265,-6.285631,9.042417,0.682317,-4.902280,5.275837,2.347136,-1.787523,3.204059,-0.966236,-5.433621,-2.979191,-0.873949,-2.957757,-3.712417,1.980961,-3.331768,3.517631,-8.776529,-7.456985,0.833981,7.174301,-5.255660,-5.335508,-7.169178,-5.600327,-3.870752,-0.745935,-3.320812,3.952343,-5.182772,-4.280408,-9.355412,5.607674,-7.180110,4.705763,3.710622,2.541075,-1.953221,-0.538269,-5.868931,-9.020569,3.905985,6.228683,3.685084,-6.815810,-0.830497,-6.920716,7.128710,6.493944,1.172759,9.337536,-3.385843,-6.553904,-1.196317,5.714370,7.196514,0.474941,-9.186125,-8.318889,0.365133,-7.399471,9.637360,-8.277291,-0.392563,3.815760,-0.195853,-8.939017,4.455583,-3.543692,0.139773,-2.171226,5.668839,6.184616,5.167374,2.409585,3.081688,-9.586690,-8.292001,9.815526,-6.972391,2.524186,8.286103,0.507615,-3.763671,-7.777728,9.725661,2.084085,-4.069523,6.589283,-0.544560,8.637628,-8.690413,1.098499,-4.752330,8.264937,7.012229,-9.610159,-9.059004,1.411498,5.433191,6.898340,-4.757612,2.726556,7.021873],[-8.535448,1.503950,4.852917,2.772319,-4.335614,7.875690,1.477131,-2.215146,3.133893,6.167225,-7.409388,-2.846625,-9.967825,-5.821809,-2.381574,-3.826569,5.082595,-8.646763,1.513293,1.720142,9.362198,3.211496,2.220349,-9.641427,-4.737192,8.216938,-3.158574,-0.414065,7.048128,-4.198053,8.796573,-1.051318,-7.883925,7.821431,8.828432,-8.430544,-8.372268,0.314659,7.180219,-6.542651,2.774576,-3.088004,-6.332243,-4.248086,1.701324,8.858701,4.515876,-6.946175,-4.149311,3.453133,-3.675661,-8.254384,8.087584,0.367874,-6.552323,0.981169,8.542523,4.640075,-1.534472,3.232314,2.037425,-7.210935,2.413654,-4.714633,0.528802,6.872317,7.773097,-8.475215,5.553409,-4.202619,6.520464,1.161019,6.185109,-0.744613,8.434003,-7.548102,-8.472086,2.164816,6.764359,6.710257,-5.988097,-4.902154,8.510797,-6.648974,-0.054951,-1.942472,-4.041509,2.665293,-5.998643,-1.128960,3.245747,-2.296780,1.756849,7.259305,-4.628194,4.047689,0.749341,-2.968974,-8.794897,3.132772,8.556423,3.784186,-4.282167,-2.542340,-7.787012,-7.805036,3.907941,-4.531178,-1.996782,0.084339,-5.062549,8.081844,-9.106665,-3.671169,6.801827,-6.260303,6.667102,-6.796033,-5.916271,1.090593,1.109804,-4.695042,-2.402528,-6.366486,7.543790,7.308569,-5.365148,8.400778,3.832010,-0.087408,-7.985073,6.411663,-6.084578,7.217781,-1.149529,2.789439,-8.897467,-3.021687,-3.808735,2.672187,-3.725647,-4.508646,-2.558527,-2.734524,1.247784,-2.672992,8.560373,-6.210017,0.821841,-9.944260,-3.234000,-1.298911,7.562820,9.269332,4.947706,6.640839,-5.611049,-0.612481,-4.257573,-1.438066,6.641650,0.426598,-5.426216,-2.243011,7.153651,-3.654162,2.327304,-8.366039,8.432893,-1.226283,-9.783768,5.073418,8.714021,0.615460,-1.828180,-7.574348,-5.900216,-3.090906,0.840911,6.136196,0.685542,-9.672422,-0.072698,9.775121,-4.950944,-5.910611,-1.987607,4.517258,2.008297,1.739403,-5.472971,-7.955329,5.932154,-3.611494,7.963258,8.265736,0.032132,5.420850,-4.314168,5.386227,7.740765,9.899100,6.815786,0.208951,-4.121701,-8.817906,-3.810509,9.929402,2.513270,-9.534552,3.701548,5.847339,0.338932,-9.261223,-0.603992,7.470120,4.755149,3.912098,4.150358,-8.917393,7.476323,2.394076,2.243917,6.567070,-2.211534,2.696572,4.543256,-0.700175,-0.540085,-1.357326,-4.279574,-6.378442,-3.569782,0.072633,-9.903031,2.056499,-1.711483,-2.268118,-5.717881,2.703991],[5.472049,-0.008319,2.043663,-2.274676,-2.063335,-8.231542,-6.530356,-6.544169,-2.068214,-9.311905,3.026544,-3.300746,-8.718065,9.214057,-6.715168,1.917372,-3.717338,-7.975827,-3.318669,0.155926,7.147475,-0.314967,-1.100000,4.622330,-0.708961,6.651112,2.002056,6.524495,-4.571637,-6.442901,2.043854,0.280362,-4.048133,-8.462610,-7.302051,6.444207,2.031025,9.437834,-9.598676,9.277924,-5.430395,3.244132,-8.258160,-4.532338,2.123764,-1.879987,-8.301268,-2.050878,9.734589,-6.522492,-5.520042,-2.388406,8.613617,6.403600,-6.292726,-5.028017,-6.034810,-4.220998,-6.682486,5.685886,-2.400516,6.002583,9.682509,9.513593,-9.813941,-8.879945,0.007888,-9.366993,-8.952807,-6.818696,-5.390978,-3.967710,-4.671091,-2.044505,8.852490,1.279184,5.307367,-5.101373,-5.542538,3.836211,9.454283,-8.594317,-3.672043,8.317960,-2.336019,1.964414,-4.318837,0.229570,6.402702,-1.333187,-8.590903,-9.245686,-9.562152,-8.054833,-6.115012,5.035416,-8.248184,-3.604589,-6.644243,2.460135,9.940258,-4.161471,-8.201297,2.832060,6.479200,-6.456368,6.327450,0.272581,-1.620724,-4.288886,0.473566,-3.817777,1.437580,4.496397,4.952793,7.964418,9.623495,-5.792711,7.683660,1.391657,7.645466,-2.777902,-6.418468,-3.557495,-5.587888,2.623784,-9.999266,0.336636,-1.436811,-1.912403,3.202140,5.846186,0.617890,9.494683,2.919942,7.643020,-0.805558,7.737381,2.383057,5.822909,-4.081161,0.789806,9.922176,2.840772,9.249292,9.561078,6.053343,-4.879611,-3.771540,5.050416,-4.059605,8.271827,8.159898,-1.440585,-2.018393,-0.464444,-0.193569,-0.816165,-6.986011,-5.837373,7.577043,-7.247107,-7.914212,5.547428,-1.793431,-3.109121,4.641881,-1.393861,-9.839060,0.382110,-0.703267,2.102918,7.415520,-7.983868,8.448644,-3.055418,-3.003387,8.401381,7.373621,-5.915447,-8.524997,-1.257313,-1.476351,-6.011219,1.481255,4.129623,9.522910,4.843211,-6.513809,-3.557036,-5.625371,-3.361182,0.588538,7.554266,-3.127821,9.954287,-7.144584,-6.400883,-5.831975,1.255866,-0.951818,1.971731,6.435974,8.020114,9.146884,-3.458318,-6.548521,-6.526217,-9.100120,-6.074310,1.824105,6.720074,8.422275,-5.025500,-1.595461,-5.885013,3.236770,-9.765089,-3.718647,-1.890400,3.217651,4.273234,-3.400729,-9.031972,2.758377,6.495046,-1.362619,-3.602729,1.808530,8.330829,-1.759489,-9.182119,6.383970,-1.609979,-7.009441,8.204281,9.124187,4.518944,2.266602,1.123637],[-2.960100,7.818734,5.595975,4.062032,8.670214,5.965256,-2.021335,0.275727,-1.782423,5.475592,-0.790894,2.798895,3.211423,0.786200,-0.952410,0.285145,-5.858489,5.613929,-8.057496,-7.725289,0.571236,1.151837,9.662460,6.581103,-0.770763,6.820367,-1.768153,6.953006,7.093910,-2.806261,0.658323,8.868557,-6.467362,1.676338,1.287264,-4.712929,5.115572,-2.812473,-8.251728,2.420764,-3.156572,-4.110348,7.136543,-5.270497,-3.595123,-9.898178,-0.927114,4.249548,-7.608854,8.511355,-0.282414,-8.343112,0.918758,7.124903,-6.630345,-8.501045,0.378461,7.640674,-2.568390,8.609278,-5.657795,-7.942980,2.630888,-3.725922,3.137775,6.098136,3.774180,7.940146,-3.004626,6.408004,2.362158,9.730328,-7.993000,4.726598,-3.448138,6.968399,-5.148498,5.016635,-6.564557,3.145835,9.512475,2.531323,-6.139101,3.830684,6.699853,-5.691557,5.863660,7.047589,-9.907331,-7.521358,-5.075492,-4.322574,-0.765993,-6.161301,7.401659,-7.096442,7.476514,8.942057,-9.118634,-9.393618,7.944423,7.078433,0.425454,-2.631164,8.162272,-2.834151,7.017015,4.770393,4.601393,-0.733454,0.682262,9.055582,-3.204856,0.309139,-4.339100,7.339355,-1.330109,-9.459548,5.658378,2.607340,3.495724,-8.724565,-4.462338,-2.917404,-0.572132,-2.553629,1.106112,-1.477810,2.149851,7.579534,9.057262,3.047979,4.988769,8.330665,7.043298,8.120456,2.121146,0.612418,0.236365,5.580633,-2.610272,-1.107166,0.930607,1.078544,-1.194227,-7.899925,0.223502,4.573897,2.264270,-6.168932,4.205874,-1.568005,0.245150,4.474434,6.699789,-7.941821,-8.255322,-0.501020,2.526733,-7.816847,-2.701764,-9.081489,9.470797,-5.661854,-4.899198,1.590648,-0.106030,-0.748187,5.195952,4.915965,-6.518229,-5.305800,-3.566561,5.143938,-0.436076,0.581053,-0.581395,9.449539,3.341609,6.868794,-0.681867,5.172147,-5.340484,-9.179066,9.259463,-4.018476,-7.130443,7.728989,2.466339,-4.122072,-4.933057,-9.365896,9.467261,-9.448931,3.339586,5.381772,-6.709407,0.540150,-7.308781,-5.407735,5.595421,-4.358203,3.361306,-8.368782,-3.293714,1.588779,-1.172850,8.570211,7.392915,-8.963583,1.455880,-8.549689,-1.024539,-3.041564,6.056174,4.338980,-8.466579,-7.854036,6.062890,-8.136182,-5.446730,-6.930789,-7.327219,-9.739936,-7.663922,-0.273883,-4.977801,7.609747,-1.267583,-2.261566,1.485000,-8.925157,3.199645,9.752895,4.620118,-8.038434,9.298140,-0.920638,-9.380336,7.442731],[7.890697,6.211204,-6.464356,8.243868,-4.506680,0.217766,4.315448,7.481225,-1.197567,8.138838,9.443779,2.461905,-9.859696,-8.008689,8.427645,6.499064,7.888898,-1.309724,-2.872811,8.663157,1.860079,-7.401380,-1.880201,7.182100,-0.958981,6.267654,-5.959437,1.139778,-4.643654,-0.412540,3.237619,9.669242,-0.228386,2.939392,7.518404,5.549125,5.095704,5.778158,-8.598225,-7.360683,4.049567,-0.645460,3.861281,-5.706997,9.359245,7.490586,8.269130,2.591329,-0.501626,-1.900719,5.086317,5.251905,4.341747,4.001632,9.281034,-9.224465,1.813975,5.440905,-8.341307,-0.561177,-9.268816,2.268490,-6.910178,0.586730,4.773759,-9.529539,0.065167,2.521193,-1.471341,-3.534497,-1.617458,-7.174884,6.895114,-5.940795,-0.186342,1.116250,-6.248745,-1.284806,-4.603020,-1.487232,3.817976,-2.956515,-5.388195,6.846281,-4.282865,-1.688648,-7.547853,-3.655898,-3.201321,-5.015645,-1.229681,9.679050,-1.936034,1.484038,5.340477,-8.064433,2.183104,-7.353815,-6.279264,-7.573066,8.946180,9.631306,-0.629673,-9.967600,8.755975,3.101059,-8.785164,-3.237637,-6.658518,4.632339,0.327718,-4.465194,0.274266,-7.758084,-9.776314,-8.952075,-6.540554,1.758621,-5.261154,8.074739,-7.360978,0.629748,-7.310030,2.280188,9.805814,-8.797636,-7.825592,6.104823,7.861108,5.361512,3.512044,-4.916351,-3.077673,-1.271964,4.650080,-1.651860,-5.396113,-6.444686,3.529920,3.136172,4.171313,-3.735739,-4.577175,5.371036,1.350528,8.691424,-9.283706,-2.527685,0.688891,3.060234,4.409125,8.475396,7.018029,-0.859608,9.492572,-7.448922,1.805969,4.148072,-9.884650,-5.182164,7.143333,-0.214019,1.229150,-2.936419,4.278158,9.265949,7.276676,-9.824885,-2.565394,-7.471655,-4.284103,-5.451191,2.736203,1.323239,-1.218100,5.920862,1.330340,-6.151735,7.709283,-6.451094,-7.291227,9.756460,-1.811453,4.498886,-4.841660,-0.693045,-1.606644,-0.486105,-2.158477,7.959270,4.768451,2.087907,8.284535,5.255505,-4.856871,5.141445,0.280793,7.890575,7.884798,8.491993,-1.648747,-6.370534,-4.707641,-6.074346,2.269903,-2.660911,-5.600903,8.476910,2.168988,-3.778793,-6.551961,-1.185830,-0.763246,5.808331,-9.492044,9.553961,3.638092,6.468638,5.246857,-2.268890,-4.868057,1.725894,-2.138251,-3.732423,-9.141715,-1.313962,-2.608578,-5.736125,-1.078527,-7.897716,-6.939228,5.903684,-2.544747,-0.709429,-5.199087,-1.422127,1.675018,6.800320,-3.181484,2.785861],[9.816615,-2.548423,-0.546122,-4.431727,-5.291495,-1.359688,0.298007,-5.922802,-4.294907,6.742204,-5.622688,7.807109,9.757454,7.006422,-1.754392,-2.111143,-7.529970,-5.521393,-6.830438,9.457541,4.400108,7.237427,5.189522,-5.292803,-6.999691,-0.918853,4.201089,-5.402971,7.415894,4.336515,-8.893770,9.502059,-6.701419,-4.131518,-9.051806,4.133952,6.475525,-0.482482,2.128219,-7.374455,-3.139934,-1.081382,8.394021,6.410964,-9.638161,-8.625057,-4.016210,-0.012215,4.497899,0.741378,-9.827413,-1.243552,-6.627488,7.369626,1.057500,7.829941,-1.782011,-5.680176,0.498997,-8.163511,-6.750134,-5.157786,-5.875829,8.984992,7.962665,-0.459043,5.100870,0.851263,8.024099,3.572247,3.572493,6.056988,-6.041578,3.701270,6.626656,-3.440303,-9.435727,-2.649442,5.507359,1.203452,9.386972,-8.671550,-4.999014,-5.604854,-2.349783,-9.010661,-6.544471,-4.808657,1.433108,-4.190757,5.278073,-8.678497,-6.743086,1.675123,-9.867994,-4.295598,-8.027399,4.051666,2.557153,-4.781894,4.240135,3.643451,-8.357021,9.371770,1.585049,-1.974507,-0.433460,-9.520955,-6.992154,-3.929740,-1.273516,-1.721016,8.545913,9.890846,2.806381,4.246185,5.196140,-8.447877,-4.187678,5.532259,-3.220639,-2.141180,8.006573,4.909601,-8.423094,-5.203329,-2.824331,7.752172,-9.508597,-2.199016,0.967130,3.963600,-6.952488,-3.908768,5.160634,-1.723056,-6.625025,-0.593539,-2.183103,8.309162,0.836011,2.332483,-7.169701,6.352282,-7.351230,-5.680894,6.241120,-0.308604,3.330966,-2.206871,-3.887266,-4.715115,-1.356833,-2.516333,-8.148857,9.659118,-9.171505,-9.337899,-9.052776,8.979879,0.589608,-8.808893,1.479929,5.018015,0.291089,5.082775,-8.860035,-4.356756,-0.454449,9.141622,-7.516151,-9.007366,-8.328970,2.643694,2.463919,5.439443,-1.693073,6.074534,-5.874090,8.690795,6.499503,6.464233,-8.131990,-1.987641,2.915097,-3.517036,-3.555558,-2.179366,6.171974,0.844314,-5.193825,7.118884,-7.933806,4.018816,6.865133,1.127942,0.481123,2.354774,-2.378650,8.666247,5.837230,-6.246234,-1.640623,-8.586979,-8.862620,-5.327027,-7.410136,-2.030353,4.430811,6.001305,-2.337679,0.566844,-2.080736,9.761046,-5.169588,-2.367482,-7.133545,0.280384,2.189254,-2.101346,-2.898399,-1.250801,8.999467,7.803524,-0.688780,6.018287,2.852335,5.983481,1.679908,3.265972,0.046548,-8.764651,-3.779671,-8.547837,6.899944,6.645043,-5.953026,2.638416,-8.307838,-9.267834],[6.078004,4.499637,-5.101760,-8.043277,-2.241637,4.644621,0.314337,9.486858,7.503474,6.919388,6.011667,-3.345570,5.371085,7.853118,4.738018,-8.820015,8.739209,8.688158,-4.335243,-4.515768,3.706285,-9.790769,3.411662,-1.593961,-0.774581,6.159462,6.534974,4.253499,9.964098,-2.443357,-8.980898,-3.839912,2.888563,7.917255,6.360077,-5.341333,5.669188,-9.912729,-3.300214,0.597722,-1.904076,-0.070671,2.671339,-2.795957,-6.899839,0.936228,-2.840103,9.953924,0.584604,8.438448,-4.064740,-6.699222,7.655142,-8.799238,5.364793,-6.190695,-8.377530,3.815070,-5.444361,1.938928,6.491920,0.428947,-2.286733,9.980419,4.763818,-0.935825,-5.006605,3.335604,4.481941,0.449462,6.685745,6.260022,4.964777,6.021585,-1.670340,-2.884062,4.170371,1.361094,-4.502405,-5.107941,-8.897996,7.977750,8.957286,-8.707982,-0.407591,6.786009,6.333010,-0.985561,-8.482020,-6.910427,-0.821587,-5.207658,-6.444233,5.563078,-3.639861,-9.635531,-1.541150,3.152530,-5.757766,9.020903,1.801830,-4.992309,9.369583,5.171040,0.205804,-2.554397,9.376750,5.893446,2.085499,-5.723897,-4.684310,-5.364051,7.705136,-9.128939,4.628818,-0.935205,3.992633,2.294252,0.216477,-7.838251,-1.974657,-8.709426,3.181805,8.812156,-5.210368,-2.590280,-9.566389,-6.715342,-6.710008,2.946680,-8.816297,-7.241438,-2.498220,-3.943802,3.471185,-6.805603,2.456337,1.064832,7.701592,7.734655,-3.066796,-9.735094,-4.777828,-8.343774,-9.828359,-2.815558,-8.016203,-7.652703,-5.310265,-0.450317,4.008077,6.461530,-4.535343,8.560299,9.968887,6.602525,-6.840449,-2.451580,-4.082061,8.248760,-7.857842,9.471802,-9.494176,-5.582971,-7.341785,-9.062508,9.525286,3.249811,-2.877877,4.753807,7.526494,-1.322953,7.192610,3.291333,4.780421,-4.808972,-2.661106,-3.953908,1.793991,-5.978273,-4.069960,9.175983,-5.751637,1.879993,8.007054,7.565375,4.675589,-5.083179,-8.248803,8.814503,-0.922795,-0.328343,5.884757,7.289544,9.363042,7.421947,0.134608,6.509940,0.552733,-1.985875,-4.000004,4.401765,6.605486,-8.874029,3.756984,-9.217407,8.971276,1.650802,5.819167,3.001938,-6.531666,-7.307226,4.052599,2.252229,-3.032348,4.790421,7.121937,2.047073,-6.479866,5.902147,5.688874,4.039389,-3.195864,2.560215,5.165919,-2.730240,6.803830,2.664365,-3.649554,7.039345,1.513518,9.826108,-9.120093,5.542826,-1.578331,-4.971273,-6.994488,-1.770107,-7.730080,6.674052],[-2.270451,5.813390,-0.084452,-1.826319,-1.151204,-0.282604,-8.891303,-7.466247,-7.170931,5.003602,-2.436372,-5.914020,5.889734,3.728770,-5.605036,-7.272345,-3.731631,7.133634,-4.814403,-8.901403,8.526194,-9.904427,-5.911061,-5.848985,3.907618,-5.297842,-8.786075,-0.799807,6.390664,0.832822,-5.461156,4.815209,-6.307672,-1.169487,-1.847885,1.373049,3.425118,-4.395674,-5.756440,-4.612912,-1.554516,-6.005982,2.662941,1.258104,-8.570023,-6.521713,-6.403347,-5.795827,-1.875859,1.889398,5.157084,3.796227,6.717788,-7.870630,-6.865712,2.156039,6.184680,0.810940,-7.943469,-2.644956,-7.527681,-0.676286,-9.783983,2.624449,8.222554,4.715385,6.399135,7.851048,-7.262992,-9.175386,-1.050999,-8.966487,3.393518,-7.147880,-0.327583,2.140564,8.783639,4.974953,-5.001046,0.824622,9.269656,-4.763490,7.575327,7.204452,9.705811,-6.567378,6.293315,-6.750151,5.900847,0.672639,7.682529,-5.027363,-9.045409,-9.270160,-2.558577,-7.541312,-0.901341,-5.961755,-4.549970,-2.923781,4.829079,9.501748,4.135942,-7.871718,-7.017815,-2.594414,-6.330846,-3.245387,-6.414930,2.393816,-8.928878,-4.486505,-7.632376,-9.882923,3.614788,-6.696596,-3.161120,9.240293,5.619293,-4.010914,0.148171,4.967659,4.359692,-9.409189,-3.100199,-8.693183,0.893288,-8.821586,7.153754,-1.794328,0.955392,1.743683,-4.558131,4.414353,-8.218759,2.621376,-1.889182,9.793915,1.352348,1.289753,1.398234,-5.124424,-1.084265,-9.725767,-3.558754,-1.309270,-8.753724,2.612995,7.614558,-5.182012,-4.401139,2.879399,5.712200,-0.668605,1.772567,-0.184001,4.346175,8.823935,6.857377,2.320848,0.062832,8.260551,9.416746,-5.691905,1.716116,0.625486,6.372136,-3.614959,9.787404,4.019541,-0.007528,-0.110512,-5.520651,-7.803188,9.272929,1.748547,2.077459,-1.173508,3.874518,5.426507,-8.367231,-7.642387,-9.773415,-7.021946,6.468323,-6.740600,0.244797,5.919868,-4.082236,-3.759535,6.106442,-7.806307,-1.880362,-8.846945,-6.192228,5.623661,-5.708701,-2.306191,-6.803131,-6.178450,-9.013993,-9.510812,5.072328,2.190951,7.509242,-9.752324,-5.654909,0.702629,4.794798,-6.534375,-8.047868,-9.895699,-3.430545,1.287361,8.175111,-5.928099,-1.579968,-3.054893,7.894205,8.849033,6.338321,2.388828,7.552674,-4.951602,-8.152191,-0.565178,-8.264385,6.352996,1.427294,-4.909826,2.443039,-7.484861,9.723024,9.922131,-3.667922,7.749271,-9.069397,0.408318,1.699108,6.652445],[2.080727,-8.770557,-6.046909,-7.229202,-6.527271,0.847653,7.781831,1.653974,-3.399493,3.868008,-7.568414,-6.352197,-8.525096,-1.591633,2.944745,3.890476,4.822408,1.752155,-7.942292,8.955653,-2.535475,-1.705520,-9.524551,-8.923933,-3.913654,4.905659,-2.514342,-9.396591,-6.937853,-0.881908,-8.406625,-6.773668,-1.017139,0.979547,3.611895,9.300103,1.762870,2.446311,-6.433939,-3.938783,-4.418547,0.705901,4.846356,6.245641,-2.480212,-2.785064,6.551234,-0.060399,-3.150992,-1.032154,-1.782704,2.385397,4.166069,6.545361,-5.220132,8.946523,2.719904,5.701700,-6.967410,-8.107136,-8.926291,9.872409,8.865088,3.644024,8.242896,3.320811,-5.207357,-7.904450,-3.829912,8.234070,7.449392,9.668149,3.007895,-2.034297,7.295286,-1.737751,6.769549,4.763087,7.380765,-4.827692,6.378518,-1.333787,-5.562550,2.376837,-7.687623,6.901772,4.071839,-4.209965,4.437548,-8.747101,-0.468629,-6.426107,-2.857959,-7.935182,8.327676,1.266897,1.855721,-8.455558,-5.921396,-0.175741,-7.743885,-7.761682,-7.850097,-8.966861,0.153270,-5.066661,2.584892,6.415809,-2.621932,4.346224,-1.642418,-2.238715,-4.675419,9.396110,2.187738,6.368395,5.585681,1.877037,-0.222947,9.495739,3.304582,4.159912,6.182338,-1.852303,2.855074,3.002761,-1.507338,0.242839,-1.416428,0.370816,-2.536536,7.942405,4.830458,5.936659,-9.459695,9.804247,-4.400509,-3.659371,-1.077463,6.370830,-8.422701,5.164953,7.032954,9.170740,-3.162957,2.643252,6.857918,-1.716954,1.415395,-6.423465,1.859311,3.371899,1.732109,7.125590,7.494990,1.674939,8.416149,-8.356124,0.873236,-1.641134,0.015899,-3.727772,-9.263216,1.520772,-8.749321,7.925478,3.772341,7.845695,-2.990821,-5.841967,8.100442,5.679947,3.660599,4.485352,2.577302,-4.579812,7.694552,6.816932,0.166941,-1.163155,-6.833131,1.787927,-8.490355,-3.120660,8.327012,-8.663146,-1.239461,8.400204,-2.726484,-0.167123,-2.008466,-0.711750,0.265584,2.690484,-7.646562,-2.953046,0.560796,-1.506018,-0.356461,-3.958747,-4.420380,1.155934,-7.017344,-9.573350,5.705722,-3.441438,6.953321,-3.347404,-6.524772,1.890429,3.550859,-9.680605,-7.987903,-9.881325,4.608466,-3.878792,-8.499808,7.541096,9.401031,5.960288,-4.565646,-3.856239,-3.148185,4.390393,7.705422,0.264021,-8.418887,4.668322,-2.711425,-9.205620,6.023632,7.227027,-4.937602,-5.977696,-7.042119,-9.050825,-3.135686,-0.730293,2.559230,2.032570],[5.068538,3.173957,-0.532982,-6.819599,0.309049,4.153090,8.554910,-6.529836,2.679126,2.490265,-2.300902,-3.941001,9.351002,7.946948,-0.421613,6.376626,7.138579,-0.431228,5.336594,-5.478381,5.223950,2.781908,9.468719,-8.901343,0.500303,-4.894674,4.416027,-6.206972,-6.147901,-1.094063,-7.829781,-0.522916,-7.676640,-7.640978,9.459419,-9.240952,-4.600740,8.191260,6.609764,-0.974821,-0.053278,-8.639737,4.307874,-4.051053,-4.823428,0.889224,-2.542440,-2.081976,-1.041029,-4.674508,-7.162562,-6.662815,1.522963,-2.887049,5.279117,6.421669,8.504455,4.348540,-8.566942,-4.454643,-4.040652,3.009793,9.282428,-9.587006,-8.384085,4.205186,9.823797,8.722272,-3.131283,-5.829773,-5.706884,2.893821,5.206496,2.352563,-2.411690,8.248462,7.640683,4.064488,-8.310248,-4.883811,-8.470070,5.467884,0.892391,-9.621844,-5.156668,5.176847,-0.752006,0.722856,0.481847,3.319026,-4.932195,4.315335,-4.848509,2.454502,-6.756292,1.889835,2.799592,-6.285660,-7.271074,-1.847555,1.822677,4.546089,-3.030456,-1.318195,5.628654,1.915072,-5.904501,2.808332,1.443834,3.060840,-2.010005,0.179454,-7.651805,-3.009197,-1.792235,6.719231,-5.698079,-8.772664,8.355354,8.405123,-2.454987,7.699855,6.539773,8.937977,6.760769,-1.821534,-6.694250,7.224282,6.621582,5.016696,7.508901,-7.847799,6.744818,-7.974530,8.820068,-4.140866,9.285194,-8.512559,-1.682517,5.114228,-1.919531,-6.990990,0.551462,6.887570,7.022818,2.199978,-5.671397,2.875346,-1.626228,-0.614723,6.181169,7.877358,-6.444806,2.713074,-3.354182,-8.538306,-4.974814,2.217498,4.515456,-1.636179,7.251182,5.691826,4.383334,8.008762,-2.285968,5.962538,-3.902266,-6.807703,-4.321071,-0.210839,2.679502,-4.927351,3.220139,9.484701,-5.018589,3.647437,2.076325,6.058080,1.816463,-5.747509,2.389970,4.926407,0.823580,-6.622166,3.013144,-8.906352,-0.075399,-6.393614,-0.253645,-4.082266,-6.218327,-7.079114,-0.110338,-2.452555,-2.626906,9.068276,3.861423,-7.788035,0.520678,-8.025521,3.229253,9.569570,8.312675,1.333501,4.199129,0.834394,8.376607,-0.161180,5.817828,-4.631809,1.405794,1.627998,-7.012684,6.743139,3.392210,5.377616,-5.683236,-2.499418,-4.433166,1.693200,8.007308,3.415791,-7.225451,-9.809167,0.876839,-5.872929,-3.918659,4.765997,9.646908,-0.294424,-0.330315,4.744070,-4.963568,6.720084,7.615594,7.382468,5.465517,7.827518,-8.426628,6.108389],[-4.218125,-0.303093,-6.908095,-8.722804,4.521265,-6.390302,-0.717793,-5.736706,5.274419,3.327936,2.342625,6.916186,-0.100475,-9.656978,-3.391795,-2.553939,2.858068,6.792810,-6.195325,0.953721,0.879635,1.104970,9.804949,-3.610181,9.249356,4.991360,-5.809683,3.110219,-4.863634,0.303943,-2.657982,9.153438,8.914293,7.206770,-5.483212,4.036795,-0.222628,1.461269,-1.897698,-5.978186,-1.904729,-8.742620,-7.100355,0.513646,-1.551000,5.149930,-7.266254,-9.612823,0.728842,2.639236,0.536701,1.188804,1.701909,9.422732,9.437062,-5.889343,-6.760704,-6.915032,-2.174703,2.298697,7.158387,3.250221,0.712143,1.668072,6.239869,1.394026,7.847761,-5.945043,4.170588,-5.736952,9.917423,-8.647775,-0.443396,-2.442288,-0.680015,0.792292,-1.756115,2.800631,-9.485597,0.660596,0.687087,-2.860550,8.233409,-7.192933,1.729477,5.119406,8.314530,-5.943132,1.999753,-1.991814,-9.664145,0.554283,7.270886,-9.199528,5.945369,7.938687,-5.070776,6.472754,8.328651,9.495110,-0.397804,6.161776,-2.959994,5.800075,3.189910,-9.964248,6.601697,-7.105173,-5.499320,1.463469,-0.639117,8.131019,-4.274287,8.526797,-8.052815,-7.049686,4.828141,-4.898922,3.264431,9.588130,0.056925,-6.356193,7.215852,5.275521,-7.272064,0.683327,-2.853789,5.954341,9.879109,-3.238605,3.734170,7.196472,-5.528305,5.854132,5.495873,-2.300431,-2.223552,-3.222787,-2.456080,8.250274,-1.480808,9.233421,1.030541,4.771292,3.735686,-1.635888,9.765431,-1.622210,2.549876,7.980802,-3.742104,-5.886142,4.481496,7.037816,-0.190938,-2.800195,0.811281,1.697676,-8.193759,-3.132252,-3.113332,8.832525,-2.357685,-2.157919,1.011059,-8.406495,1.820811,-1.082047,0.130836,-8.309075,-6.703963,-4.851724,5.870545,9.412964,7.542518,2.975457,-8.652778,0.397658,-9.733105,5.566563,7.875152,-6.909591,-7.038920,2.402558,-8.351603,1.858951,-7.789737,-0.389049,-2.030704,-8.029668,9.357264,4.168960,-6.062003,-3.401533,-5.765249,-1.286124,-8.004910,8.758980,5.634883,-0.094120,-4.278520,-4.560764,-4.650629,-9.632145,-2.018771,-4.749059,4.456173,-1.202656,-5.629233,-1.892408,-6.585818,-9.937419,5.900087,1.046320,2.943074,-6.740325,2.878926,-7.764716,-8.634728,-9.998486,4.383634,-4.680554,0.622582,-8.944098,-1.607887,-4.952708,7.936430,4.317184,-0.158388,9.766353,-5.342595,-5.307053,6.863468,5.226163,1.204269,-6.016084,-6.040430,5.035887,5.184881,1.984903],[1.314067,-1.282245,2.801041,9.619098,-7.222341,2.982231,5.563852,7.315495,-2.315803,-3.075748,-5.382124,5.566571,5.329641,-3.814297,-8.896273,-7.364731,-5.028127,0.097189,-0.904038,0.829152,5.252446,-2.302636,-0.724831,4.810860,-9.847045,3.927815,2.195720,-0.538402,4.064790,9.797749,-0.548057,4.901860,7.307575,-6.548868,-8.337675,-0.851119,-9.514618,-2.581425,-9.333012,-0.066060,3.398340,-9.400178,-0.364706,2.383175,0.525107,8.805004,6.280878,-8.779137,2.339906,-0.048667,0.251412,-0.171288,0.673185,-9.875951,-5.508344,8.660295,-6.596044,-4.286097,-2.815312,2.726390,8.364453,8.112822,9.096064,8.529845,2.943143,-0.333838,-3.184941,-6.014452,4.590015,-0.013776,8.644106,2.382906,3.458057,-0.592386,-3.411390,7.377911,2.321331,-7.640784,8.132243,4.969045,2.203176,2.156162,-6.552217,-4.789144,-5.713914,-0.842472,-3.748321,-3.042487,5.698462,5.238383,-1.683445,0.562361,1.202888,-7.667572,8.768547,0.694634,-3.711338,4.580745,8.197371,-2.341797,-6.100133,5.856204,1.864005,-8.100048,8.356090,-9.440472,-4.435689,9.364892,5.919562,-3.774835,8.765213,5.244009,-2.830816,0.475605,-8.454775,-8.801908,-5.313991,7.027046,4.647881,-5.189695,0.640210,-2.168138,4.768026,-3.134340,6.242319,0.529924,-3.054410,-4.438183,9.617197,-7.163542,-1.662892,-6.223303,2.953021,-8.313918,8.714788,1.208580,1.733998,7.138037,5.525046,6.400374,-8.834255,5.103602,4.092591,-3.576714,4.198051,9.520772,2.070454,-4.029943,7.165265,9.467489,-2.921641,-2.077118,-3.875538,-6.037748,1.461715,-5.993859,-4.009369,-9.067710,-1.629466,6.301097,-4.454225,6.823292,-0.098015,-4.359937,-4.807650,7.793845,-3.436554,-9.630661,4.087134,-9.770537,-4.915859,-1.124751,-2.993156,-4.763766,1.871490,5.793641,-3.652194,8.126908,-3.785732,7.372695,6.460309,6.316283,-5.486325,-8.368574,-1.405737,-8.602546,-8.203039,-6.478578,8.344810,8.221338,-3.705736,-1.269646,0.797073,8.857512,6.530426,-6.810983,4.498765,-7.886412,1.864190,3.257536,6.888110,-1.449839,2.508677,1.632331,7.506626,1.779787,1.490034,0.795404,-4.173385,-5.186706,1.961780,-8.240849,0.201397,-7.326250,-1.229650,-7.412802,5.555981,7.520249,0.372056,0.826579,1.892284,-5.364638,5.862623,0.716960,1.404321,6.108770,-7.043313,7.684017,7.084201,-8.298155,-8.110345,5.670131,9.381066,-6.742799,4.818758,2.945162,-3.114894,8.472199,4.613892,1.571385]], dtype = "float64")#candidate|5470|(14, 240)|const|float64
call_5469 = relay.TupleGetItem(func_3657_call(relay.reshape(const_5470.astype('float64'), [14, 16, 15])), 0)
call_5471 = relay.TupleGetItem(func_3660_call(relay.reshape(const_5470.astype('float64'), [14, 16, 15])), 0)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
const_5474 = relay.const([-2.510528,-0.737544,8.504568,-4.656149,-1.750797,9.080884,5.288209,3.300873,3.987578,-4.421975,-7.784391,-8.776825,-8.761468,2.225264,-8.384548,-1.929302,-0.689547,8.168137,3.903468,2.791601,2.260710,3.659190,5.557620,0.280694,1.665732,-4.644205,-7.158529,-7.963889,8.262038,-2.105488,-6.032500,-1.782096,-1.781263,-6.414630,8.842650,7.029803,9.021143,5.367897,8.555700,4.240145,-0.282254,-7.855929,-0.576173,1.862015,-3.522265,-7.235639,-8.829258,-8.100067,-1.370146,-4.142690,-9.782199,-3.249028,6.310948,-5.017960,-8.217776,5.818777,7.769968,6.584042,-2.372991,6.907615,7.074769,-9.552457,-3.621165,-9.122619,6.492538,-7.200544,-1.087267,1.472477,-6.905498,8.509087,-3.381545,3.273904,-6.215289,3.605195,6.781343,-4.024675,-4.627867,-5.700764,7.651773,1.651933,-4.093782], dtype = "float32")#candidate|5474|(81,)|const|float32
call_5473 = func_3575_call(relay.reshape(const_5474.astype('float32'), [9, 1, 9]))
call_5475 = func_3575_call(relay.reshape(const_5474.astype('float32'), [9, 1, 9]))
func_1023_call = mod.get_global_var('func_1023')
func_1026_call = mutated_mod.get_global_var('func_1026')
var_5478 = relay.var("var_5478", dtype = "float32", shape = (154,))#candidate|5478|(154,)|var|float32
const_5479 = relay.const([[8,9,6,-6,-8,6,2,8,3,-4,2,4,-2,6,6,2,-5,-9,-1,-10,3,-6,-3,6,-10,6,2,-7,-2,4,6,-3,9,4,8,-8,-9,7,-3,-9,-3,4,6,10,6,-7,9,5,-3,-7,2,-3,4,-4,-4,9,-7,-5,-6,-2,-6,-9,10,-3,5,-5,5,-2,9,5,9,3,9,-3,-10,9,4,2,-4,-9,5,5,-4,-9,3,8,-10,-1,8,3,-7,-7,10,6,-4,-2,9,-9,4,-9,3,-2,10,-1,-5,10,7,-6,-7,-3,-5,8,-4,-8,4,-7,7,-10,-3,7,7,4,5,3,10,2,2,-1,6,7,9,9,-5,2,3,-10,9,4,-3,7,-4,-1,9,-7],[3,9,9,-7,8,-4,1,1,7,-3,2,-6,-8,-7,10,4,-7,7,-10,10,-6,-10,10,6,-7,-10,8,7,4,3,-9,9,-1,-2,1,-2,8,-3,-5,6,5,-1,3,-8,-6,-10,9,9,-6,-10,2,-3,4,-1,-4,-1,4,-1,-3,-3,-2,-2,-4,1,-3,-6,-5,-7,4,7,4,6,-3,-4,-10,5,-2,4,-9,6,8,-9,1,-1,4,5,-8,-8,2,9,-3,-3,-1,-10,2,4,-8,-10,-9,-3,10,2,9,-1,6,-2,-4,3,-1,-8,9,-2,7,5,2,-10,6,-10,-6,7,-1,-8,-3,2,5,9,-4,-2,-3,-8,7,-9,1,-9,2,-6,6,-10,6,4,-4,7,4,-10]], dtype = "int16")#candidate|5479|(2, 144)|const|int16
call_5477 = relay.TupleGetItem(func_1023_call(relay.reshape(var_5478.astype('float32'), [11, 2, 7]), relay.reshape(const_5479.astype('int16'), [288,]), ), 5)
call_5480 = relay.TupleGetItem(func_1026_call(relay.reshape(var_5478.astype('float32'), [11, 2, 7]), relay.reshape(const_5479.astype('int16'), [288,]), ), 5)
output = relay.Tuple([bop_5433,call_5436,call_5444,const_5445,call_5469,const_5470,call_5473,const_5474,call_5477,var_5478,const_5479,])
output2 = relay.Tuple([bop_5433,call_5437,call_5446,const_5445,call_5471,const_5470,call_5475,const_5474,call_5480,var_5478,const_5479,])
func_5491 = relay.Function([var_5417,var_5478,], output)
mod['func_5491'] = func_5491
mod = relay.transform.InferType()(mod)
mutated_mod['func_5491'] = func_5491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5491_call = mutated_mod.get_global_var('func_5491')
var_5493 = relay.var("var_5493", dtype = "float32", shape = (11, 5, 14))#candidate|5493|(11, 5, 14)|var|float32
var_5494 = relay.var("var_5494", dtype = "float32", shape = (154,))#candidate|5494|(154,)|var|float32
call_5492 = func_5491_call(var_5493,var_5494,)
output = call_5492
func_5495 = relay.Function([var_5493,var_5494,], output)
mutated_mod['func_5495'] = func_5495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5295_call = mod.get_global_var('func_5295')
func_5297_call = mutated_mod.get_global_var('func_5297')
call_5505 = relay.TupleGetItem(func_5295_call(), 0)
call_5506 = relay.TupleGetItem(func_5297_call(), 0)
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
var_5530 = relay.var("var_5530", dtype = "float32", shape = (240, 4))#candidate|5530|(240, 4)|var|float32
call_5529 = relay.TupleGetItem(func_3066_call(relay.reshape(var_5530.astype('float32'), [16, 15, 4])), 1)
call_5531 = relay.TupleGetItem(func_3068_call(relay.reshape(var_5530.astype('float32'), [16, 15, 4])), 1)
output = relay.Tuple([call_5505,call_5529,var_5530,])
output2 = relay.Tuple([call_5506,call_5531,var_5530,])
func_5533 = relay.Function([var_5530,], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
var_5534 = relay.var("var_5534", dtype = "float32", shape = (240, 4))#candidate|5534|(240, 4)|var|float32
output = func_5533(var_5534)
func_5535 = relay.Function([var_5534], output)
mutated_mod['func_5535'] = func_5535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5413_call = mod.get_global_var('func_5413')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_5680 = relay.TupleGetItem(func_5413_call(), 6)
call_5681 = relay.TupleGetItem(func_5414_call(), 6)
output = call_5680
output2 = call_5681
func_5704 = relay.Function([], output)
mod['func_5704'] = func_5704
mod = relay.transform.InferType()(mod)
output = func_5704()
func_5705 = relay.Function([], output)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5738 = relay.TupleGetItem(func_4899_call(), 0)
call_5739 = relay.TupleGetItem(func_4900_call(), 0)
func_2086_call = mod.get_global_var('func_2086')
func_2089_call = mutated_mod.get_global_var('func_2089')
var_5745 = relay.var("var_5745", dtype = "uint8", shape = (315,))#candidate|5745|(315,)|var|uint8
call_5744 = relay.TupleGetItem(func_2086_call(relay.reshape(var_5745.astype('uint8'), [3, 7, 15]), relay.reshape(var_5745.astype('uint8'), [3, 7, 15]), ), 0)
call_5746 = relay.TupleGetItem(func_2089_call(relay.reshape(var_5745.astype('uint8'), [3, 7, 15]), relay.reshape(var_5745.astype('uint8'), [3, 7, 15]), ), 0)
func_1342_call = mod.get_global_var('func_1342')
func_1346_call = mutated_mod.get_global_var('func_1346')
var_5752 = relay.var("var_5752", dtype = "float32", shape = (968,))#candidate|5752|(968,)|var|float32
var_5753 = relay.var("var_5753", dtype = "float64", shape = (420,))#candidate|5753|(420,)|var|float64
call_5751 = relay.TupleGetItem(func_1342_call(relay.reshape(var_5752.astype('float32'), [8, 11, 11]), relay.reshape(var_5753.astype('float64'), [420,]), ), 1)
call_5754 = relay.TupleGetItem(func_1346_call(relay.reshape(var_5752.astype('float32'), [8, 11, 11]), relay.reshape(var_5753.astype('float64'), [420,]), ), 1)
uop_5757 = relay.atanh(call_5744.astype('float32')) # shape=(3, 7, 15)
uop_5759 = relay.atanh(call_5746.astype('float32')) # shape=(3, 7, 15)
output = relay.Tuple([call_5738,var_5745,call_5751,var_5752,var_5753,uop_5757,])
output2 = relay.Tuple([call_5739,var_5745,call_5754,var_5752,var_5753,uop_5759,])
func_5800 = relay.Function([var_5745,var_5752,var_5753,], output)
mod['func_5800'] = func_5800
mod = relay.transform.InferType()(mod)
var_5801 = relay.var("var_5801", dtype = "uint8", shape = (315,))#candidate|5801|(315,)|var|uint8
var_5802 = relay.var("var_5802", dtype = "float32", shape = (968,))#candidate|5802|(968,)|var|float32
var_5803 = relay.var("var_5803", dtype = "float64", shape = (420,))#candidate|5803|(420,)|var|float64
output = func_5800(var_5801,var_5802,var_5803,)
func_5804 = relay.Function([var_5801,var_5802,var_5803,], output)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5849 = func_5285_call()
call_5850 = func_5285_call()
var_5860 = relay.var("var_5860", dtype = "float32", shape = (11, 9, 6))#candidate|5860|(11, 9, 6)|var|float32
bop_5861 = relay.greater(call_5849.astype('bool'), var_5860.astype('bool')) # shape=(11, 9, 6)
bop_5864 = relay.greater(call_5850.astype('bool'), var_5860.astype('bool')) # shape=(11, 9, 6)
output = bop_5861
output2 = bop_5864
func_5870 = relay.Function([var_5860,], output)
mod['func_5870'] = func_5870
mod = relay.transform.InferType()(mod)
var_5871 = relay.var("var_5871", dtype = "float32", shape = (11, 9, 6))#candidate|5871|(11, 9, 6)|var|float32
output = func_5870(var_5871)
func_5872 = relay.Function([var_5871], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5909 = func_5285_call()
call_5910 = func_5285_call()
output = call_5909
output2 = call_5910
func_5911 = relay.Function([], output)
mod['func_5911'] = func_5911
mod = relay.transform.InferType()(mod)
output = func_5911()
func_5912 = relay.Function([], output)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5957 = relay.var("var_5957", dtype = "float64", shape = ())#candidate|5957|()|var|float64
var_5958 = relay.var("var_5958", dtype = "float64", shape = (8, 15, 6))#candidate|5958|(8, 15, 6)|var|float64
bop_5959 = relay.divide(var_5957.astype('float64'), var_5958.astype('float64')) # shape=(8, 15, 6)
func_5704_call = mod.get_global_var('func_5704')
func_5705_call = mutated_mod.get_global_var('func_5705')
call_5976 = func_5704_call()
call_5977 = func_5704_call()
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5979 = relay.TupleGetItem(func_4899_call(), 0)
call_5980 = relay.TupleGetItem(func_4900_call(), 0)
output = relay.Tuple([bop_5959,call_5976,call_5979,])
output2 = relay.Tuple([bop_5959,call_5977,call_5980,])
func_5983 = relay.Function([var_5957,var_5958,], output)
mod['func_5983'] = func_5983
mod = relay.transform.InferType()(mod)
mutated_mod['func_5983'] = func_5983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5983_call = mutated_mod.get_global_var('func_5983')
var_5985 = relay.var("var_5985", dtype = "float64", shape = ())#candidate|5985|()|var|float64
var_5986 = relay.var("var_5986", dtype = "float64", shape = (8, 15, 6))#candidate|5986|(8, 15, 6)|var|float64
call_5984 = func_5983_call(var_5985,var_5986,)
output = call_5984
func_5987 = relay.Function([var_5985,var_5986,], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5997 = func_5285_call()
call_5998 = func_5285_call()
func_5347_call = mod.get_global_var('func_5347')
func_5351_call = mutated_mod.get_global_var('func_5351')
var_6000 = relay.var("var_6000", dtype = "float64", shape = (1, 112))#candidate|6000|(1, 112)|var|float64
var_6001 = relay.var("var_6001", dtype = "uint8", shape = ())#candidate|6001|()|var|uint8
const_6002 = relay.const([-1,-10,5,-7,-5,5,-7,2,1,-10,8,4,-2,-7,5,2,-5,7,2,-4,-2,-4,5,4,-5,-6,4,3,6,9,-5,7,5,-1,-7,-5,3,8,7,-1,-6,-5], dtype = "uint8")#candidate|6002|(42,)|const|uint8
call_5999 = relay.TupleGetItem(func_5347_call(relay.reshape(var_6000.astype('float64'), [14, 4, 2]), relay.reshape(var_6001.astype('uint8'), []), relay.reshape(const_6002.astype('uint8'), [42,]), ), 0)
call_6003 = relay.TupleGetItem(func_5351_call(relay.reshape(var_6000.astype('float64'), [14, 4, 2]), relay.reshape(var_6001.astype('uint8'), []), relay.reshape(const_6002.astype('uint8'), [42,]), ), 0)
func_2086_call = mod.get_global_var('func_2086')
func_2089_call = mutated_mod.get_global_var('func_2089')
const_6011 = relay.const([7,1,-6,6,-10,3,-4,10,-7,5,-4,-7,-3,3,-7,4,-2,8,1,4,-4,9,-3,2,-3,-7,9,1,-2,10,1,-3,-10,-10,5,-4,-2,-9,-1,-5,7,-1,-6,8,9,5,-5,-2,9,8,8,3,5,5,2,-2,1,-7,6,-5,5,-4,10,7,-9,-5,7,7,1,-7,1,4,-3,-1,8,3,-7,4,-4,-7,6,-10,-10,-2,-8,-6,8,-2,-10,-1,8,2,2,3,8,9,-1,-4,3,-4,7,-9,-9,-8,-6,7,-3,-9,6,-1,3,-6,-6,-7,-8,-9,2,-10,10,10,-6,-10,-6,2,-3,6,-2,2,5,-8,-2,-10,6,3,-7,-2,10,2,2,-9,8,1,-10,-9,-4,-9,-3,-1,6,-6,9,-8,1,8,-3,-8,-4,10,-4,8,5,4,-4,-6,1,7,-10,-8,4,-2,-2,-7,-1,-10,-7,5,-4,7,-4,-10,5,-4,2,-5,9,-3,-10,-7,9,-8,-6,8,3,-9,10,-1,-7,-1,-8,-5,-4,8,-1,6,2,8,-6,9,-6,8,8,-3,6,-5,-2,1,-3,9,4,5,9,4,-4,7,-1,-7,4,-5,-6,5,5,4,-3,-1,10,2,3,-7,1,6,10,-1,5,-7,8,-9,-7,10,-9,8,-9,1,8,-1,-5,-1,2,9,9,8,-7,-8,-1,-4,-1,10,-5,-4,-10,-4,-3,9,-8,-1,-4,2,-6,-4,1,7,-2,-2,9,-10,2,-5,-8,10,-1,-2,-10,4,5,4,8,7,-10,7,-6,2,2,3,-10,-5,-6,7,1,3,-1,-1,-10,-3,1,2,8], dtype = "uint8")#candidate|6011|(315,)|const|uint8
call_6010 = relay.TupleGetItem(func_2086_call(relay.reshape(const_6011.astype('uint8'), [3, 7, 15]), relay.reshape(const_6011.astype('uint8'), [3, 7, 15]), ), 0)
call_6012 = relay.TupleGetItem(func_2089_call(relay.reshape(const_6011.astype('uint8'), [3, 7, 15]), relay.reshape(const_6011.astype('uint8'), [3, 7, 15]), ), 0)
func_5911_call = mod.get_global_var('func_5911')
func_5912_call = mutated_mod.get_global_var('func_5912')
call_6034 = func_5911_call()
call_6035 = func_5911_call()
uop_6039 = relay.sin(var_6000.astype('float32')) # shape=(1, 112)
output = relay.Tuple([call_5997,call_5999,var_6001,const_6002,call_6010,const_6011,call_6034,uop_6039,])
output2 = relay.Tuple([call_5998,call_6003,var_6001,const_6002,call_6012,const_6011,call_6035,uop_6039,])
func_6049 = relay.Function([var_6000,var_6001,], output)
mod['func_6049'] = func_6049
mod = relay.transform.InferType()(mod)
var_6050 = relay.var("var_6050", dtype = "float64", shape = (1, 112))#candidate|6050|(1, 112)|var|float64
var_6051 = relay.var("var_6051", dtype = "uint8", shape = ())#candidate|6051|()|var|uint8
output = func_6049(var_6050,var_6051,)
func_6052 = relay.Function([var_6050,var_6051,], output)
mutated_mod['func_6052'] = func_6052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_6093 = relay.TupleGetItem(func_4899_call(), 0)
call_6094 = relay.TupleGetItem(func_4900_call(), 0)
output = relay.Tuple([call_6093,])
output2 = relay.Tuple([call_6094,])
func_6100 = relay.Function([], output)
mod['func_6100'] = func_6100
mod = relay.transform.InferType()(mod)
output = func_6100()
func_6101 = relay.Function([], output)
mutated_mod['func_6101'] = func_6101
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6135 = relay.var("var_6135", dtype = "float32", shape = (3, 3, 13))#candidate|6135|(3, 3, 13)|var|float32
var_6136 = relay.var("var_6136", dtype = "float32", shape = (3, 3, 13))#candidate|6136|(3, 3, 13)|var|float32
bop_6137 = relay.mod(var_6135.astype('float32'), relay.reshape(var_6136.astype('float32'), relay.shape_of(var_6135))) # shape=(3, 3, 13)
func_5266_call = mod.get_global_var('func_5266')
func_5271_call = mutated_mod.get_global_var('func_5271')
var_6150 = relay.var("var_6150", dtype = "float32", shape = (154,))#candidate|6150|(154,)|var|float32
const_6151 = relay.const([1,-6,-4,1,-2,1,2,7,-3,6,-10,5,8,9,1,6,5,9,7,-3,2,3,9,-7,6,6,4,3,5,9,-1,-10,-7,6,-8,2,-4,-3,-6,7,6,1,5,4,-7,-8,8,-5,-8,6,1,-7,5,-1,-10,7,4,-6,2,-10,2,7,5,-2,4,-8,-10,-1,-5,-7,3,-1,-10,7,-6,2,3,8,3,1,-2,4,4,-4,-10,-3,5,-1,10,8,2,-6,1,-7,5,-4,8,8,7,-10,5,1,7,6,9,5,-5,-8,-6,3,-4,-10,-8,2,-2,-2,6,-8,7,-10,7,-8,8,-9,3,-8,2,9,8,-3,4,9,1,2,-1,-4,10,1,10,-4,3,-1,-2,4,2,10,5,7,-9,3,3,-2,-9,-3,-4,-3,-3,-1,5,-4,-3,2,-6,-3,7,-8,-5,-5,3,3,-9,4,3,6,3,4,6,5,4,-10,-5,-3,-9,5,8,-9,6,-6,1,6,4,3,5,-6,7,4,-4,-4,-5,5,9,-10,-7,6,10,3,4,-8,3,10,9,4,10,6,-9,1,-5,4,7,2,-4,5,-3,6,6,8,9,9,-3,5,8,-9,6,4,7,-5,3,10,-3,-3,-2,6,-6,1,10,1,-3,-10,8,-4,-2,-6,9,2,-2,-2,-10,8,-3,-5,-6,-2,9,-7,6,1,-10,-4,3,-2,-2,9,-3,8,-5,-1,-9,9,-5,-6,10,8,4,-9,-7,-2,-5,1,-10,-6,-1,-8,-9,10,-5,-6,4,5,7,5,-4,5,9,-7,-4,-4,9,-5,8,4,-4,10,-4,9,10,-5,10,2,-7,-6,10,-4,-1,7,8,7,-2,1,-4,7,-4,-6,6,6,7,-2,4,-5,-7,-6,-6,7,2,5,-10,-9,7,-3,-5,4,-2,6,4,-1,-6,6,-4,1,2,-3,8,-9,9,-8,10,4,-10,-8,-4,5,-9,-1,5,8,-7,4,-3,2,6,6,-4,7,-1,-10,3,-4,-8,5,8,-5,-6,-4,-1,-3,-6,2,-7,6,4,-4,1,1,-4,5,4,9,-8,-9,9,7,-10,7,-7,-7,1,10,-9,3,9,-5,9,-3,9,7,5,-3,-2,4,7,4,5,2,-7,9,-3,1,8,-9,7,5,10,6,-2,3,4,-7,-3,2,4,-10,-6,6,-6,-3,1,-4,7,2,2,9,7,4,-7,-2,10,7,-2,1,10,-10,3,-1,-3,10,-10,-9,8,-7,-2,5,10,5,7,-9,-2,-7,2,-5,-2,-10,7,1,5,-10,8,6,-9,9,8,4,-6,5,10,-1,-7,7,2,-9,8,1,-5,2,-7,2,9,-7,9,-3,4,-1,4,-6,6,3,-5,9,-1,-7,-2,-6,-5,7,9,-2,3,5,-3,-6,-8,-4,3,-6,4,3,-2,-8,5,2,-5,-6,-10,-6,4,4,10,9,-1,6,-8,-1,1,9,7,2,10,8,9,-4,7,6,-8,-1,-10,4,9,8,7,7,-3,-5,7,2,9,-10,6,4,-1,-4,-3,10,-6,-1,8,-8,-7,3,-6,9,-2,2,4,-3,2,-7,6,4,-6,6,2,-4,-6,-2,-1,-8,9,5,9,-8,5,-5,-3,-6,5,-2,7,8,2,-6,3,7,7,5,10,-6,-9,10,1,2,8,-2,9,-8,2,-5,1,6,6,3,-5,2,1,7,-8,5,2,-2,-7,-3,8,5,3,-7,-3,6,-1,-1,2,2,6,9,7,10,-4,5,4,-1,-1,8,1,1,2,-2,-1,-6,4,-8,9,-4,-4,4,9,5,-6,-4,-6,-8,-1,5,-7,-1,-8,-3,-9,-9,6,-1,1,-6,10,3,-7,6,-3,9,4,2,-1,7,2,2,-1,4,2,8,-10,-10,4,-4,-7,-5,-3,2,-2,3,-7,1,-2,10,4,8,1,-10,3,9,5,2,-3,-3,3,8,-4,8,5,-10,5,3,-3,10,7,8,3,3,4,2,1,-9,-10,-1,-6,6,-6,-9,1,6,7,1,6,8,7,7,-2,5,5,7,-6,7,1,4,5,10,-6,4,5,9,-3,-4,-5,5,6,5,6,-5,-6,-10,8,3,-3,5,-10,-1,-3,8,-5,-9,-8,4,-4,10,7,3,2,-1,-4,2,-1,8,10,-1,10,8,4,-1,-1,2,-3,-3,-2,9,-1,1,5,-5,7,2,7,5,-9,10,9,8,-7,-6,-7,5,3,-9,9,-3,-1,-4,-4,10,5,-3,-1,6,-2,-9,7,-7,1,-9,4,-5,-9,-3,-9,-6,2,9,-2,5,9,-5,5,-7,1,-7,9,10,-2,-3,-6,7,10,-5,-3,8,-4,8,-6,8,-10,10,8,9,5,-2,1,-10,5,5,8,10,6,-1,-3,-8,3,-4,10,-2,-5,5,-2,-9,4,7,-7,4,-4,-6,6,-10,3,-2,9,-9,8,2,-1,-9,7,9,-2,7,-7,-5,-8,4,10,6,7,6,9,7,1,7,1,-3,-8,-1,5,10,10,5,-7,1,-6,1,-5,7,4,5,9,-6,-10,4,2,9,7,6,-4,-9,-4,-6,-9,-6,-7,8,-10,-3,-3,6,-2,-9,-6,2,-2,10,1,6,7,5,-4,9,7,-6,2,6,-4,2,8,2,5,7,-8,-8,-6,10,-5,-5,5,-3,-1,1,-1,-9,-5,10,-3,-7,-9,-9,-9,-6,9,7,3,1,8,-3,-2,-10,1,8,7,6,-10,3,-3,-4,-2,-8,-2,1,10,-8,6,9,8,-3,3,-2,-6,4,6,2,10,7,9,-1,1,1,-7,-5,10,-9,9,7,6,5,-1,4,-8,-5,-8,-6,-8,-8,-7,-8,-3,9,-8,-7,10,-10,10,-4,4,3,-8,3,-6,-8,6,-10,-5,-2,7,-9,1,10,3,8,-3,-1,2,4,-9,-2,10,-5,-5,8,-4,1,-6,7,-2,9,9,-6,-8,-10,-3,-3,6,-10,2,-3,6,-4,-4,4,-9,3,6,1,-10,-2,-5,7,-10,-2,-6,-9,-10,5,-5,2,-3,-1,4,3,-3,6,8,9,2,-10,-8,-1,5,2,6,-5,-9,-7,8,-7,-5,-1,8,-10,-3,1,3,-8,9,-8,6,-3,10,9,10,-1,9,-9,-3,-7,1,-6,9,1,-7,-4,-2,9,-9,-10,-4,-5,4,-2,-4,5,-9,10,-6,10,1,6,3,5,-6,4,-7,-5,-4,2,-9,3,-8,8,5,-7,1,4,-1,-7,-6,-6,-9,-8,9,-1,6,8,9,8,-5,-4,10,-2,7,-7,10,7,-6,4,-4,-6,9,4,2,-1,9,-3,3,2,-5,-2,4,-6,-4,-8,5,9,-7,-3,-5,8,-2,-4,8,-3,-7,-10,4,-3,-8,5,2,9,-6,-2,7,-6,-1,-3,6,-4,1,-6,-1,3,10,5,3,3,8,-2,-5,5,-7,-5,-4,-10,4,-4,-6,8,-7,8,-9,-3,6,4,-2,-7,9,5,-2,10,2,-3,-3,4,4,-1,-5,-1,-10,2,6,-2,-3,8,-4,1,4,-6,-5,-6,4,-1,2,2,9,-3,-5,-9,3,-4,-6,5,-9,7,-1,10,-10,6,4,-3,2,-7,-4,3,-4,6,-2,-1,10,-2,1,-8,-2,3,10,9,6,9,2,7,9,-7,-2,1,-6,-5,-4,8,-7,3,10,9,8,6,-10,-8,-6,-1,3,2,-4,6,2,-5,6,-6,10,4,3,-9,-3,-5,10,-7,9,-2,-8,2,-4,-7,-5,-9,-8,2,-3,6,8,2,9,-10,-1,-3,3,-9,2,-1,10,-1,-5,2,4,1,-1,-1,-6,-1,5,8,-9,9,4,10,10,-4,6,10,-6,-3,7,9,5,2,2,-10,-6,6,-6,8,10,10,10,6,-4,4,3,5,-3,-7,-7,-8,5,7,-10,9,6,6,1,5,2,-7,5,2,8,-3,-8,10,-6,-7,9,-8,5,-5,7,2,-9,4,-10,2,-8,3,-7,-1,7,1,4,-4,-5,-7,-7,2,7,-10,4,3,6,-10,-10,-5,-9,-4,8,-5,-7,7,-1,-9,-7,-5,2,5,-7,-10,7,3,-6,10,7,8,10,-7,2,-1,-7,-2,-6,7,-1,8,6,4,2,-5,3,-2,-7,-4,-7,10,3,4,-6,-1,-2,4,2,-8,-6,-3,4,-2,8,-2,4,2,-1,-5,9,-3,-6,-9,-9,-5,1,5,-7,8,4,-10,-9,4,-1,6,-6,3,8,-2,-2,-3,7,8,-5,-7,6,7,-4,-3,1,-4,-8,9,-2,4,-10,-5,-5,8,1,6,7,-1,4,5,-5,2,-8,1,4,4,-2,-8,1,-6,-5,10,-6,2,-6,7,6,7,10,5,-3,7,-5,-4,-3,1,-5,-8,3,-2,7,-10,-7,-8,-5,1,10,-7,3,5,4,-3,-8,-9,-1,10,10,-2,7,6,-4,1,-6,-1,2,4,2,2,-8,-3,-1,10,2,-10,3,2,4,-1,4,9,8,1,-1,-3,3,2,8,-5,4,-1,1,6,1,-6,-9,-10,-8,-8,3,2,7,9,-3,-6,-10,-6,2,-6,9,-7,-7,-7,9,6,9,7,-9,1,-1,-1,-8,9,8,3,7,8,-9,9,-2,-8,-2,-9,1,4,-1,-10,1,6,-7,1,-1,10,-3,5,-5,-8,-10,-7,-9,3,-6,-6,6,-8,-3,9,-7,-3,9,8,5,-10,-3,5,7,-9,-3,-2,8,-2,-1,4,-1,10,7,3,-6,-6,-9,10,-1,1,-5,-4,2,-2,8,-3,-5,10,-1,-1,-5,5,-7,10,-5,5,3,-2,5,10,-2,-4,-5,6,-7,-2,-5,6,1,2,-6,-5,6,4,3,-9,-6,-1,-7,-7,-5,7,-6,-2,9,-3,2,-6,9,-2,-5,-7,-5,-1,5,-9,7,-10,8,-9,7,4,4,-10,9,3,-4,-4,-9,1,3,6,-5,2,-10,10,5,-9,-3,9,-2,5,-5,4,4,-9,5,-6,4,2,10,-3,8,-1,-2,3,5,1,7,-5,3,7,-9,-8,2,9,4,5,4,4,-8,-2,-5,4,-2,-4,-3,3,-5,-7,3,-8,-5,-2,1,-7,-3,4,3,3,-7,10,-7,3,8,-6,3,-9,-7,1,6,-8,8,10,-2,-7,-7,10,-4,5,-3,2,-5,6,3,-1,-5,2,3,-5,5,7,-2,8,-9,5,-4,-10,9,2,-5,-5,-3,4,-8,-4,-2,5,-7,-10,-5,-10,4,-9,-8,-7,7,-3,-8,8,-7,-7,3,-3,-6,-9,-7,-2,-1,-4,-6,-9,-2,3,9,-5,2,-5,5,-5,10,4,5,10,8,6,-6,7,7,-9,-9,-5,8,8,-8,4,9,9,3,1,-5,3,1,-1,-10,-7,5,-10,1,-6,-10,-1,8,2,-9,-1,9,-6,-6,1,7,2,1,7,-1,5,3,10,-5,-3,9,-1,-9,-1,1,-8,-1,2,-6,7,4,-9,-9,-10,-5,-1,6,3,6,-10,-5,7,1,-9,2,4,-10,-5,-4,-3,8,3,5,-1,9,10,-2,-1,10,-1,8,8,-8,4,8,1,1,-3,-10,-7,-8,1,6,6,-4,6,-2,-9,-7,-4,-2,2,1,-10,-10,7,4,9,-2,5,1,7,6,-6,10,-10,7,6,7,-8,-2,6,-5,-7,-9,-4,-4,6,8,2,3,10,4,-7,-1,8,2,-1,-9,5,-1,-8,1,-2,5,-8,-6,8,2,10,2,7,2,-2,-6,-8,-7,9,-2,8,-5,-6,5,-10,1,10,-8,9,7,-2,10,8,-8,-9,10,-10,4,-7,-9,-5,6,6,-6,-5,-8,-6,9,-8,-2,9,-4,4,-4,8,7,6,1,-1,-8,-10,5,5,-1,-1,1,3,-9,-5,10,-6,7,4,5,6,4,-10,-3,3,9,7,5,7,-8,7,-6,-5,-7,2,4,3,-8,-7,7,7,5,8,-3,-4,-9,-7,3,9,-2,-10,-3,-4,-6,-3,10,-1,-5,5,-7,-7,9,1,-9,-2,3,9,6,6,4,-7,1,-1,8,-2,-4,-1,-6,-5,-5,8,-8,2,10,-6,-7,-3,2,5,-10,6,8,9,10,-9,-2,10,5,3,-2,-2,-1,-9,8,2,-1,-4,-6,10,-10,10,7,-9,6,8,1,8,4,5,-1,10,7,-8,-10,8,9,-9,10,1,-1,1,-10,6,-6,5,-9,-7,10,9,6,-7,5,-3,7,-8,-4,2,10,7,-8,5,-7,4,-10,7,-10,2,2,10,-1,6,9,-1,-6,9,3,3,-6,9,-10,3,1,-5,3,2,4,-1,-8,6,-5,7,-6,-9,-9,-2,7,1,1,10,-1,-7,-2,2,5,3,-10,7,3,2,-6,-1,8,-2,-7,-2,-7,-5,-9,7,2,3,2,-2,8,5,8,9,-7,4,3,2,7,7,4,-10,-5,10,3,-2,-6,4,-4,-10,2,-7,-2,-3,8,-4,7,1,-7,9,3,-8,10,-10,5,-5,6,1,3,-6,5,3,6,-6,-3,2,8,-4,3,3,6,6,10,-9,-1,-3,-6,10,8,-8,1,-10,1,-7,10,6,-8,9,8,-2,-4,7,1,4,3,2,-2,-3,6,1,8,3,8,3,-9,-6,9,-5,-1,10,2,8,-6,-9,10,10,9,-3,7,-4,-2,1,4,-4,6,-10,7,4,-8,-10,5,8,5,-1,-9,3,5,-7,-2,3,2,-8,-1,4,5,10,4,-4,-9,-5,9,-4,-2,1,-9,-1,10,-1,2,-2,1,-7,-10,-8,-5,9,-9,-6,1,4,-6,2,4,8,-1,5,2,1,-2,-3,9,10,-5,8,6,8,7,-9,-3,9,7,8,-7,-3,5,7,-10,-4,5,-10,4,-4,-8,-3,10,-7,-9,10,5,4,-1,-5,-10,-5,3,-8,3,-1,7,-6,-8,-5,9,3,-9,3,8,1,9,2,1,-10,-4,-9,-4,9,5,1,9,5,10,10,-6,-7,6,6,1,-4,-6,5,8,-4,-8,-7,10,7,-2,10,-9,-4,6,6,7,-2,5,-6,1,-3,6,8,-6,6,5,7,-10,-2,-4,-6,8,-5,-7,-3,-1,-9,-10,3,-5,3,2,3,4,10,4,8,-6,-7,6,-1,-10,-5,9,-6,4,4,1,10,5,-3,8,4,-4,6,3,-8,10,-5,9,5,3,3,-9,9,-7,-4,4,10,1,10,5,-8,1,-6,-3,8,-10,-9,-6,-2,5,-7,-4,-8,4,8,8,-4,9,9,-1,-7,-10,8,9,8,-4,2,3,-4,8,6,-9,-4,10,-8,2,2,6,-5,-7,-8,9,2,9,-7,-7,-2,-5,5,-10,6,10,4,-7,-2,4,-7,9,-3,5,-5,6,1,4,7,-8,-7,-1,6,-2,2,8,8,-9,8,-4,-8,-10,2,-4,-9,-1,3,-7,-10,9,6,-3,7,-9,6,7,4,3,-3,-2,-9,9,7,-1,7,-8,9,9,-3,-10,2,5,7,1,-4,2,-7,5,9,10,-8,-8,2,-3,-6,4,-4,-1,8,1,-6,-5,-6,-7,-6,8,5,-3,5,-2,10,-8,-6,7,2,3,-1,-9,9,-1,-2,1,6,4,9,-4,-1,-5,-1,10,10,-9,2,-9,5,9,8,-5,-3,10,5,5,4,3,-2,-9,6,5,-10,-10,6,-2,-9,-1,-8,-6,-4,-10,-1,-6,-8,7,-4,4,1,-9,-5,-1,2,9,-4,-4,6,-7,-9,-1,-7,-2,5,5,2,-2,6,1,7,7,-5,-2,-7,9,1,2,2,-10,-10,4,-10,-6,2,-6,7,2,6,-2,-2,-8,5,-10,-6,6,5,7,-6,4,10,9,-5,9,5,-6,-6,-10,6,10,10,5,5,5,-5,-1,10,4,1,9,-9,-2,9,8,4,5,-3,1,4,-9,-6,-8,8,-2,-7,6,-5,-3,-10,8,-8,-8,-5,8,9,-10,6,1,-10,-7,-3,-5,1,3,-10,7,-5,-10,6,-10,5,-9,-6,9,3,-4,-6,7,6,1,10,-7,-3,-5,-3,5,5,-1,4,8,3,-6,-1,-8,-2,5,7,8,9,10,-10,-1,6,-7,-9,8,7,1,-8,4,-10,-5,-1,8,8,-1,2,3,-2,-8,5,3,3,-7,6,10,-10,-4,10,10,-9,-6,5,-9,-2,-9,7,9,9,1,-7,1,8,10,-9,-3,3,9,1,-4,7,7,7,-1,4,-2,-3,-10,-10,8,-3,8,-10,-4,5,3,-3,-5,8,7,-8,-5,-1,3,-7,1,-1,6,3,4,9,-9,10,5,10,2,-10,-2,-1,-4,-5,8,3,-9,5,-6,1,-9,9,-8,5,-8,6,7,4,-8,6,7,2,-8,9,3,9,-10,-7,7,10,-6,5,6,5,-10,-9,-2,1,10,-2,-10,7,9,-10,-6,2,-9,-7,8,-8,-5,-5,8,5,-8,2,-7,-7,5,-3,-10,-4,3,1,-5,4,-5,-7,7,-10,-8,-2,-3,1,8,8,-10,4,-6,-9,-5,-1,1,3,9,-10,8,-3,-1,-9,-10,-5,-9,-6,-6,-6,-5,1,-4,-4,2,1,6,-2,-8,-7,8,-9,-3,-2,7,1,-6,7,-1,-4,-5,-2,8,-9,5,-5,10,-9,-8,-3,2,6,-10,-9,-6,-1,-9,3,1,8,-9,-10,-8,1,2,8,2,4,-8,1,8,-4,-9,6,8,5,-8,6,3,-1], dtype = "int8")#candidate|6151|(3328,)|const|int8
const_6152 = relay.const([-1,-4,-7,5,-8,-1,10,9,9,4,5,-8,8,-10,8,-10,2,-1,-8,-8,1,-7,1,-1,-5,4,-6,3,-6,3,-10,-1,6,-1,2,1,9,8,-5,-10,-3,10,-9,-3,8,8,-8,-2,3,-1,3,10,-9,3,7,-4,-10,-10,-9,-5,-9,-7,-4,-3,2,-3,3,8,4,-6,5,-3,-4,5,6,-2,-4,3,-10,6,10,9,-5,-7,-10,-1,-3,-1,7,-2,-7,7,-7,-1,9,-9,7,6,8,-2,-8,-3,-7,-10,2,5,-10,3,5,4,-1,4,-2,-1,-6,9,6,-5,-6,-7,-10,-10,-7,8,8,7,-5,-9,-3,-9,5,-3,2,4,-4,8,5,6,2,-5,6,-4,-5,1,-5,-9,10,1,-9,-10,6,-8,-8,3,8,4,2,-8,3,6,-10,8,6,-2,6,9,9,-3,4,9,-5,-10,9,3,5,-9,4,-5,-9,-7,-8,-7,8,6,-7,7,-5,9,3,7,-1,5,6,-8,-8,9,3,-4,7,4,2,8,-6,-3,-6,9,9,-3,-5,-1,7,-10,8,-1,4,1,-9,-5,-3,-6,-9,8,-10,-4,-3,-7,-4,1,10,7,9,2,-6,-3,-5,1,3,-3,-2,7,1,6,-2,7,8,8,5,-5,6,1,-8,-7,-10,3,7,-7,-5,-6,-7,1,-9,5,10,5,10,9,-6,9,7,10,-4,-4,10,-6,-3,4,-7,-7,1,-2,8,8,-8,-2,1,-10,-10,1,-4,-7,-3,10,2,-6,-7,-3,-10,1,-10,-2], dtype = "uint16")#candidate|6152|(300,)|const|uint16
call_6149 = relay.TupleGetItem(func_5266_call(relay.reshape(var_6150.astype('float32'), [154,]), relay.reshape(const_6151.astype('int8'), [3328,]), relay.reshape(const_6152.astype('uint16'), [300,]), ), 3)
call_6153 = relay.TupleGetItem(func_5271_call(relay.reshape(var_6150.astype('float32'), [154,]), relay.reshape(const_6151.astype('int8'), [3328,]), relay.reshape(const_6152.astype('uint16'), [300,]), ), 3)
func_5413_call = mod.get_global_var('func_5413')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_6154 = relay.TupleGetItem(func_5413_call(), 8)
call_6155 = relay.TupleGetItem(func_5414_call(), 8)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
const_6157 = relay.const([[6.994260,-9.899816,8.619340,2.706390,3.614533,8.138793,-0.523518,-7.180512,7.048487,2.053181,2.047826,0.136380,-7.282944,7.827528,7.710646,5.283113,1.883004,0.337202,0.355281,-4.129557,-6.947380,-1.840654,8.090173,5.387636,9.939222,4.332136,1.105885,-5.003391,6.639316,-5.290493,2.059845,8.239094,6.011427,-0.590551,-6.252576,-1.043886,-2.052514,0.525392,3.662486,-0.165776,8.932039,-4.433703,-2.777913,8.572355,-2.886528,-2.592903,5.325962,-9.727303,-4.658278,-0.308658,2.225874,8.699826,3.142826,5.507837,5.131314,6.611133,7.066601,-6.268241,8.933065,-9.927643,7.442327,9.393103,-4.240653,-0.609019,-5.000360,2.915709,8.191824,2.527461,8.114784,5.158848,-5.168478,-8.819982,-1.290901,-2.309660,-9.144687,-4.370452,2.671957,-8.737423,0.134224,8.033527,0.798853,-5.331831,3.297978,-9.826685,-4.069017,-9.816639,-0.270751,9.738633,6.693238,-7.848728,-6.286802,9.465763,5.838414,0.187156,-7.006829,-7.018270,-4.535206,-2.899702,3.555210,-6.542165,5.389169,-3.832613,3.950205,-5.367834,7.717830,-1.087117,1.379259,-9.754588,-1.189860,-1.727486,-0.073604,-4.549934,0.470503,-3.840946,7.713843,-3.113006,1.237211,1.712703,-6.719019,9.370936,-6.210579,6.977164,-5.621773,-2.720945,-9.206178,0.433089,-3.733838,6.106486,1.928593,-1.284922,-0.644996,5.473518,8.730567,9.238383,-4.100631,-3.921470,-9.669729,3.617875,1.174756,8.389767,-1.437838,-2.568227,8.592007,-2.116535,6.016357,5.012369,6.790565,-8.013481,1.090437,8.369541,-5.647319,3.845896,4.577792,8.640571,-7.721049,-1.871558,-7.833338,0.112532,-4.000645,-9.505463,-3.193086,-9.099214,-7.321933,8.600638,-4.014243,0.534856,-6.447799,7.800384,7.835303,-5.623920,-0.333585,-7.395505,8.863933,-9.850001,8.353408,1.906126,-6.056234,-9.327744,-6.944629,9.888290,-4.714467,-0.572041,9.438364,-2.696012,-7.980843,-4.527997,-6.240015,3.388995,9.703447,8.782140,-8.365170,-8.144824,-5.072264,6.321061,-6.518089,8.171161,-4.564142,7.166635],[-2.094420,-0.695575,-2.250755,3.552486,-3.730231,-8.332935,-4.812791,-0.405959,0.808327,6.946224,6.316924,-2.897987,3.674280,-2.129585,5.557234,9.042615,-9.539453,3.032652,7.990241,5.216188,8.932892,7.959605,9.991105,8.760213,-8.702333,2.375912,1.821687,-8.614486,3.048178,-4.994708,-3.307288,-5.515457,-6.400921,-1.981671,-2.627266,3.678302,4.178075,6.182245,-0.662331,1.690210,-2.655179,7.248117,7.185694,-4.983785,-9.478081,7.179466,5.616762,8.604363,0.251015,2.107517,2.081038,-0.077795,1.994248,-9.025656,-4.734323,-0.050932,-2.935401,-5.905256,1.288821,-3.101957,-3.129049,5.138141,-8.907596,8.871689,-6.292967,5.981842,7.186145,-5.050834,-2.409672,-2.019259,7.143755,8.181915,-3.906250,1.131719,-5.322385,-1.335422,3.220993,-3.772755,-4.256280,-2.142074,-1.725304,8.720636,1.797810,-5.098543,-7.714572,-1.909983,-8.919604,3.102992,4.663690,-8.322321,-3.620658,-6.964435,-4.988077,7.064197,-0.244798,8.302913,-5.032302,-4.502467,3.652363,5.873432,-6.007871,9.993667,6.226934,2.216451,3.566420,-6.010903,-9.091935,2.203881,-4.555638,-4.305334,-2.448004,8.402246,-2.383686,-3.793062,5.311466,5.596180,8.390115,-0.817156,5.413001,-0.866107,9.758278,-2.029443,2.282982,5.597043,8.139761,4.721945,2.111543,-0.721632,-6.228724,4.101647,-7.936089,0.713977,8.837090,-4.046126,-9.345195,3.180804,0.703584,2.062319,-9.440211,-5.327370,-6.983882,1.208236,6.160200,2.851182,6.068321,0.940187,6.643934,7.788398,-6.190909,4.023367,-7.163895,-6.433173,0.356516,7.301813,-0.793379,4.451592,6.732872,0.010935,-3.343835,-7.565278,6.427251,4.485977,8.126730,-3.956810,-5.720123,-4.585954,-7.742554,-0.741264,-4.651380,8.239898,-9.182689,-1.003166,-6.011342,-6.023786,-6.823183,-0.487321,-1.675134,8.619629,-4.396209,9.675076,1.056396,-0.479240,-9.749085,7.030540,-7.642265,-0.135033,0.097837,-2.315283,-5.029434,-5.478329,7.910153,-2.174887,-3.850294,4.681221,5.985881,2.855092,-3.207602,7.915568],[3.318990,-2.521399,4.170071,-5.833464,2.262014,-7.510583,3.829249,-1.896897,8.632566,-2.129834,-6.580312,0.914145,-5.514977,2.085256,-5.994070,6.432599,8.137691,3.223581,-0.874803,-0.756206,-8.034092,3.324195,1.982547,-0.924243,5.261621,2.951060,0.462577,8.231243,4.858786,-5.425398,2.929662,0.500330,2.227116,-3.203377,-0.550036,2.663191,6.680334,-9.742613,7.452226,-2.976228,0.626712,-0.771419,-9.711371,-1.850270,-9.696188,9.000772,0.530244,8.135998,8.132263,-0.582194,-4.313814,-9.123208,2.961289,-3.443300,9.479202,9.153694,-7.278986,8.555308,0.510412,8.188486,8.888355,-5.587837,7.723043,7.412953,1.384010,0.203431,-9.987461,4.140038,-2.879308,-4.648165,-7.825051,7.322564,0.327831,6.175236,-9.841900,4.493010,6.627711,-3.574354,0.889775,2.437012,-2.086240,-7.163164,-9.311917,-7.151749,9.952050,4.996387,-3.979867,2.788431,7.360465,-4.895808,9.438737,1.509098,7.680969,0.737338,-2.738402,2.084801,8.444964,3.504186,-5.688308,5.518801,-9.978449,5.395262,9.270137,-2.438147,-5.857815,-9.368128,-7.379425,-2.327170,-1.469589,-1.222303,0.088539,4.832430,4.704527,-4.317762,-0.848013,-4.526546,-2.345252,3.384182,-7.128656,5.785993,-5.833856,-8.401797,2.198827,8.329248,-6.253384,-6.577328,9.767110,4.048256,-0.269985,-7.092985,0.292568,9.864752,5.365889,1.930941,2.799171,-1.411859,-6.810064,-5.352094,2.787742,6.213485,-9.646635,0.940378,9.136478,-8.472306,3.053336,-7.981613,4.331839,-8.375173,-9.612626,-9.303512,-7.492865,-9.763523,0.317013,1.860978,-6.973385,9.593791,-6.928390,-6.422177,2.630484,-8.982603,-3.795918,4.522790,-7.025354,-0.597222,9.202461,-3.688446,0.931532,-9.894311,-3.840358,8.051126,9.070270,8.146879,-6.436762,1.488851,-6.230170,-8.309107,6.897118,0.229587,9.956934,-1.470122,-1.962435,6.590331,9.720335,3.085734,0.919624,-1.168254,7.016146,-6.115933,-5.434436,3.884782,0.515090,7.838659,0.152740,4.575770,-9.361415,1.968907,-0.295505,-9.424897]], dtype = "float32")#candidate|6157|(3, 198)|const|float32
call_6156 = func_5870_call(relay.reshape(const_6157.astype('float32'), [11, 9, 6]))
call_6158 = func_5870_call(relay.reshape(const_6157.astype('float32'), [11, 9, 6]))
func_3657_call = mod.get_global_var('func_3657')
func_3660_call = mutated_mod.get_global_var('func_3660')
var_6160 = relay.var("var_6160", dtype = "float64", shape = (3360,))#candidate|6160|(3360,)|var|float64
call_6159 = relay.TupleGetItem(func_3657_call(relay.reshape(var_6160.astype('float64'), [14, 16, 15])), 0)
call_6161 = relay.TupleGetItem(func_3660_call(relay.reshape(var_6160.astype('float64'), [14, 16, 15])), 0)
func_5800_call = mod.get_global_var('func_5800')
func_5804_call = mutated_mod.get_global_var('func_5804')
var_6167 = relay.var("var_6167", dtype = "uint8", shape = (315,))#candidate|6167|(315,)|var|uint8
const_6168 = relay.const([-1.747926,8.158565,-9.441857,1.413712,1.835282,-6.489658,-2.435430,-9.082070,1.439915,8.534192,1.561789,-0.036894,1.052155,7.610909,2.511833,-9.999738,4.061299,1.034873,7.549118,-0.270807,4.848323,-6.232171,-3.842457,5.248172,-0.769672,-3.289291,-3.523415,9.847685,-7.399103,-0.779447,9.370323,-7.765525,-6.565912,-6.884756,-0.265159,1.629609,-7.999887,-0.771794,-5.798314,-8.745382,-8.359467,-3.483997,-8.027162,-8.201860,1.507519,-1.239502,5.555329,8.141949,-3.744525,-3.917910,3.640934,-8.343249,6.393772,-4.895321,-2.885346,-2.452633,-0.775154,-6.468651,-9.197235,8.733320,2.693400,-3.435711,-9.644070,5.028720,-6.989480,-6.348984,6.178495,8.861318,8.581274,-1.124050,-5.843694,-3.786281,-2.361980,7.521844,3.640168,-5.431417,-3.304960,-0.892519,-6.310412,6.831988,5.000434,-6.775686,9.424889,9.792417,-5.192327,-9.908095,-7.537871,2.358295,5.553435,8.326577,9.387178,-1.788135,-7.011173,3.615253,-2.178407,2.988077,-5.330544,-3.126341,8.086589,-3.055676,2.125894,0.698863,6.805029,-4.311704,3.793428,5.360705,4.256231,5.251418,-1.511827,8.624532,5.107253,-2.163535,-4.060807,8.855131,-3.038770,1.169947,4.095814,3.445952,7.496169,9.301104,7.439734,-1.517685,-8.721028,4.051490,-5.355080,1.028347,0.407750,9.809399,-3.347843,-8.173565,-2.818950,3.698045,-8.495840,-8.998025,-5.588370,-4.309549,-4.067036,9.172367,-8.764227,-9.097697,4.265206,6.342316,5.967321,-4.940307,7.195900,2.636859,7.225875,5.148078,6.624269,0.064732,-0.416657,-6.671411,-1.766770,6.091594,-7.789514,1.722131,-2.816942,-4.605918,1.573091,6.114712,5.129774,-3.174290,2.763196,-4.625137,0.132562,0.749514,-0.565052,8.123416,5.649871,0.034895,-2.750409,8.700769,7.398067,-8.130464,-0.475943,-1.100936,-1.214449,-5.553330,-8.492861,9.762445,9.500953,9.854861,-6.851917,-0.274339,-4.003344,2.221930,4.381074,2.411026,-9.205779,2.149856,2.457845,1.383877,1.133239,-6.088174,-0.113132,5.762625,-3.974599,2.152256,1.941445,-4.365074,-2.644170,-1.610070,-8.598368,-3.696526,-5.276686,5.994008,7.909191,7.278189,0.641690,9.689083,0.230580,7.977268,1.387148,-7.141875,-4.471286,-6.337348,-6.225750,-7.859850,-7.400108,-8.777469,6.098695,3.363794,-6.932397,9.096540,-0.283439,9.510865,2.905024,0.065398,-0.884283,-8.572113,-0.544441,4.666129,0.209675,4.627691,-3.545444,-9.943593,1.967739,5.706059,9.694245,2.721702,0.963110,8.087866,2.213304,1.512178,9.634171,7.925157,9.997857,-2.960439,-4.685938,-6.993010,7.696599,-0.440917,-1.210351,-1.123185,-0.240275,3.492987,6.571008,6.968745,2.584563,-7.148237,-5.968323,-8.565183,-9.216183,-6.322897,-2.524585,2.171422,-1.383269,4.980874,6.961543,-7.869029,8.510312,3.430972,-8.872841,-8.518858,-9.629637,-1.298371,-8.409078,-1.842452,-4.871185,3.320626,8.770479,-8.640032,9.742309,4.537714,-8.476848,-4.567809,8.572174,-9.785984,-4.352368,-8.468458,1.466792,3.363854,0.555200,-0.153206,3.181496,0.136506,-2.994418,-0.389867,3.283277,4.739110,9.147081,2.688655,5.053905,-6.616640,-9.023664,-0.320613,-6.642348,7.302792,1.713560,9.533486,-4.296977,-6.874039,-3.347518,-7.848218,-0.277296,3.021528,5.644885,-1.681054,-4.551681,8.337938,8.442829,-1.704128,1.693079,-2.541999,7.732145,1.551778,-8.436894,1.997020,-2.604649,-5.065554,8.621248,-4.091379,-2.447052,7.874724,-8.712547,-7.095921,5.506087,4.478160,-3.734919,6.834289,0.803856,1.898414,-6.224538,-3.403504,-0.572688,9.240110,6.951892,1.227128,5.948544,-9.002993,7.975778,2.344589,-1.241106,5.314731,-4.957353,-8.210796,-3.259386,9.229284,-7.607043,6.953977,-1.907695,-7.361747,6.449373,-4.772837,0.520343,-4.384289,2.762194,0.658297,-5.049055,-6.243021,3.802071,-3.261559,2.820313,0.609173,6.659147,-1.249856,8.764068,1.383494,-7.363609,6.018727,8.996813,-4.905247,-8.615732,-7.316585,1.464669,3.002991,4.592303,-8.856254,-4.333591,8.684871,-9.402401,0.534581,-7.149795,-5.610462,-6.831927,-1.844565,8.170434,-0.919651,-3.552842,-1.195662,-8.371670,0.163376,4.998033,-2.187093,0.624041,-1.037614,0.117230,4.151200,-6.507097,3.986791,-8.094205,-1.887118,-2.205380,1.368724,7.895609,-0.644555,0.223747,-4.099581,3.580816,-5.431593,-9.125227,5.787911,5.240593,7.871383,-0.270694,-2.740821,2.513865,5.957232,-2.346864,-3.734841,-8.031685,0.306993,-6.499998,1.472045,-7.052197,-1.824132,-8.924279,-9.280280,9.004578,4.830434,-9.468807,-1.618315,3.037672,-2.051465,-7.974692,9.194651,8.864576,-5.152783,-1.133852,-3.937901,-8.601376,1.838204,-1.057643,-0.067342,-7.968736,3.040523,9.061772,-1.080062,5.723472,-9.120642,6.780686,4.234863,-7.634281,4.716913,5.165659,0.556382,-1.676482,-5.359216,1.958512,-6.550287,-1.359628,-8.276476,6.253625,-0.380114,8.496628,-5.240980,9.090301,-0.625280,-9.610193,-4.798659,3.807486,0.223179,5.250296,-2.767603,-0.097463,-7.317311,-7.234530,-3.650774,9.797128,4.130612,-9.117673,3.901459,9.088338,7.705691,4.358467,8.378928,-7.111983,8.426851,-0.518550,-2.173033,-9.093993,8.866289,7.867070,5.215817,1.009338,-9.706891,-8.493591,5.083096,8.048353,1.325475,-6.745056,3.638393,4.263996,-8.874245,-6.740973,-8.234104,5.634849,8.918540,-3.242994,2.165918,3.998012,3.487725,-9.546177,6.650646,4.234876,-6.358331,1.813302,-3.016773,-5.384495,-9.678944,0.233435,-7.423515,8.381869,-8.264637,-4.893854,3.906782,3.181455,4.429848,4.043143,1.520387,-0.596105,-7.409189,0.247301,-4.014821,-8.784924,-6.426332,-2.852230,-8.866908,-1.597086,3.838995,2.352512,2.408742,7.512535,-0.569321,8.181436,9.710585,7.516906,-0.865185,2.181634,3.196226,7.409505,9.018894,-2.074078,4.021592,-4.844697,4.471760,7.286143,-0.413813,7.802592,6.288660,-9.757593,-1.020768,9.480132,-8.785688,-0.015258,-5.986334,3.922234,3.805125,4.720849,6.314013,5.265328,0.406218,1.661588,2.806462,-8.074525,0.708542,3.336503,4.403715,-7.187355,9.943580,2.663322,5.271402,-1.715688,-8.855514,8.921345,7.857737,-2.229934,-9.276162,4.899795,-3.420381,-5.972709,-5.713573,-7.162577,-0.199677,-7.345627,6.028593,0.006574,-7.464588,7.146858,-0.601172,-4.561225,9.455396,-8.608709,-1.505412,9.714550,-6.490770,6.228871,4.034050,-2.367742,-3.995681,-7.060029,-1.513066,-5.290645,7.429484,3.777427,0.420492,2.472306,-2.844132,-9.081017,8.180863,5.537555,7.406643,5.760494,-4.447902,5.389973,-9.350801,-4.168216,3.796173,0.080394,-0.300482,-3.428251,9.106924,-9.531231,-4.816849,-1.655923,-4.112218,4.099044,-5.210318,0.187123,-5.459949,-9.853095,-5.258616,8.043255,5.695696,-4.626630,0.233412,7.079840,-6.306248,-9.734389,-5.588446,4.801647,-0.131679,1.389417,9.579810,-2.594766,6.390834,-5.998173,7.701972,0.038684,-7.286899,0.653967,3.694611,-4.803783,-3.952830,-8.526967,-7.266594,-3.454086,-1.401275,1.974333,-2.020211,6.494728,-2.973355,3.204249,2.030710,5.428347,-5.938807,2.007429,4.036377,7.282126,-2.286840,1.496343,5.939347,7.039340,3.677591,9.974854,-5.637584,3.667319,-4.233090,1.759544,5.710789,-1.738252,8.128069,2.238872,2.671891,-8.426359,-8.498947,-3.864671,4.630020,6.613339,8.237657,-4.639991,0.792260,-8.061464,-1.342479,4.642785,-4.920862,2.665732,9.248558,1.317434,-4.558142,-2.064461,8.623148,-5.568247,0.632423,0.083623,4.018701,-7.382516,6.745544,-0.861411,-6.885786,4.374293,3.766702,-3.594429,-8.620236,-6.407756,-9.997406,5.404464,9.191288,-7.135199,-4.992617,9.015960,-3.414036,-8.209907,4.975555,2.727342,7.883749,-3.403489,-8.926684,2.838600,-2.909643,2.805803,3.070501,-3.281128,-9.074288,5.514078,-6.226563,-0.607638,-6.605091,-3.785268,-5.701519,-1.495860,3.844377,-4.997297,2.968125,-5.874674,2.825461,-9.339355,-7.144953,-5.250847,-7.776654,7.132694,-9.372084,7.302233,0.188980,-2.005369,3.922110,6.700246,-4.877301,-7.053336,3.909526,8.449542,-9.944897,8.298473,8.455780,-6.790021,5.556116,-9.910870,5.585654,5.884785,-0.696081,-7.501091,-7.455763,-6.776788,-0.831152,-1.435252,8.336654,-6.109354,-2.632689,-0.872753,3.698881,0.554390,5.122794,4.938673,6.158962,8.039274,-9.824743,0.211428,1.670691,9.319265,8.801224,2.953560,-1.026110,-1.815924,-3.077041,-8.244068,0.376682,-4.146893,8.225417,-5.483590,-8.387928,-9.345665,2.965367,0.463863,1.641141,-1.949401,5.868746,9.379848,-5.786382,-2.073243,6.975728,-1.264973,-4.058729,7.886564,-3.506605,-7.608108,4.584128,-4.167887,-9.797955,5.214132,-7.438313,-9.535387,0.616548,1.997568,-7.758727,-8.112611,-6.592058,-9.225452,-7.386531,4.132961,6.648960,6.822469,-3.056543,-9.069469,-1.773213,8.879853,7.405684,-4.335940,7.249330,-2.725233,9.963554,4.019751,-0.362051,-0.804398,8.524332,6.119668,8.244874,1.084438,-8.218923,-7.160657,7.579493,-2.954527,-7.494032,-5.352616,-6.197838,1.563906,3.787977,-2.379624,-6.605152,-6.182849,-7.707712,0.905077,5.013366,6.423619,-0.320257,-0.669534,7.032928,-6.595728,3.337397,-3.282376,-4.585148,2.037846,-5.895733,8.943451,-6.006052,7.940311,0.980995,-1.397120,1.242308,2.347053,4.920201,-2.700105,-8.054948,-7.848670,4.085749,6.849829,-2.638081,6.205057,-9.899665,-4.665842,7.651456,0.166597,-6.271639,8.891216,-5.710141,8.110693,-5.765466,-2.069031,-9.260818,-2.097485,4.380808,6.899726,-5.809509,5.023479,2.416852,9.454741,7.386442,-7.360346,-0.553279,0.312728,-5.881626,-1.653425,-8.618528,5.022042,-9.353639,-0.234448,0.373475,3.321486,6.146821,4.877529,-0.190618,8.197644,1.878237,0.009767,6.696107,-6.121257,2.038540,-7.159223,-2.910062,8.527052,5.115013,-6.489029,3.378036,-7.107804,-7.528035,-9.754323,-3.900974,-6.572478,1.940686,7.082562,2.011082,-8.453120,-4.827023,-6.537484,-5.543516,9.629565,-8.412644,-2.293579,-4.631506], dtype = "float32")#candidate|6168|(968,)|const|float32
var_6169 = relay.var("var_6169", dtype = "float64", shape = (210, 2))#candidate|6169|(210, 2)|var|float64
call_6166 = relay.TupleGetItem(func_5800_call(relay.reshape(var_6167.astype('uint8'), [315,]), relay.reshape(const_6168.astype('float32'), [968,]), relay.reshape(var_6169.astype('float64'), [420,]), ), 1)
call_6170 = relay.TupleGetItem(func_5804_call(relay.reshape(var_6167.astype('uint8'), [315,]), relay.reshape(const_6168.astype('float32'), [968,]), relay.reshape(var_6169.astype('float64'), [420,]), ), 1)
output = relay.Tuple([bop_6137,call_6149,var_6150,const_6151,const_6152,call_6154,call_6156,const_6157,call_6159,var_6160,call_6166,var_6167,const_6168,var_6169,])
output2 = relay.Tuple([bop_6137,call_6153,var_6150,const_6151,const_6152,call_6155,call_6158,const_6157,call_6161,var_6160,call_6170,var_6167,const_6168,var_6169,])
func_6172 = relay.Function([var_6135,var_6136,var_6150,var_6160,var_6167,var_6169,], output)
mod['func_6172'] = func_6172
mod = relay.transform.InferType()(mod)
var_6173 = relay.var("var_6173", dtype = "float32", shape = (3, 3, 13))#candidate|6173|(3, 3, 13)|var|float32
var_6174 = relay.var("var_6174", dtype = "float32", shape = (3, 3, 13))#candidate|6174|(3, 3, 13)|var|float32
var_6175 = relay.var("var_6175", dtype = "float32", shape = (154,))#candidate|6175|(154,)|var|float32
var_6176 = relay.var("var_6176", dtype = "float64", shape = (3360,))#candidate|6176|(3360,)|var|float64
var_6177 = relay.var("var_6177", dtype = "uint8", shape = (315,))#candidate|6177|(315,)|var|uint8
var_6178 = relay.var("var_6178", dtype = "float64", shape = (210, 2))#candidate|6178|(210, 2)|var|float64
output = func_6172(var_6173,var_6174,var_6175,var_6176,var_6177,var_6178,)
func_6179 = relay.Function([var_6173,var_6174,var_6175,var_6176,var_6177,var_6178,], output)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5704_call = mod.get_global_var('func_5704')
func_5705_call = mutated_mod.get_global_var('func_5705')
call_6278 = func_5704_call()
call_6279 = func_5704_call()
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
const_6282 = relay.const([-7.368336,-0.097703,-8.065420,0.882265,7.995576,8.172523,-5.900926,6.111525,9.172806,-8.746722,-3.610003,6.110858,-0.943688,2.605916,-3.895809,-1.526969,-3.449911,0.964434,-8.510379,-9.298041,8.150915,9.688294,6.448686,8.855312,8.871162,4.204514,-0.514181,-7.316532,-2.002701,-1.380355,-5.099735,0.485885,5.347290,7.959185,-1.118372,8.544121,8.789857,8.395508,4.517764,-3.723552,5.313089,-1.461148,-6.414167,-3.507967,-4.399552,7.598186,3.668069,8.257678,-7.624497,-0.349985,3.365382,-1.209241,-9.556322,0.078009,-2.755435,2.239619,3.877640,5.459569,-0.765171,9.719377,-1.355360,8.598487,3.570158,-0.693569,9.123162,-4.842959,2.322438,-2.851570,8.560212,6.631906,8.773072,1.140947,6.832542,-7.825832,-7.843569,-8.285133,8.353132,4.254200,1.891294,-7.604753,-5.924304], dtype = "float32")#candidate|6282|(81,)|const|float32
call_6281 = func_3575_call(relay.reshape(const_6282.astype('float32'), [9, 1, 9]))
call_6283 = func_3575_call(relay.reshape(const_6282.astype('float32'), [9, 1, 9]))
output = relay.Tuple([call_6278,call_6281,const_6282,])
output2 = relay.Tuple([call_6279,call_6283,const_6282,])
func_6286 = relay.Function([], output)
mod['func_6286'] = func_6286
mod = relay.transform.InferType()(mod)
output = func_6286()
func_6287 = relay.Function([], output)
mutated_mod['func_6287'] = func_6287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_6324 = func_5285_call()
call_6325 = func_5285_call()
output = call_6324
output2 = call_6325
func_6354 = relay.Function([], output)
mod['func_6354'] = func_6354
mod = relay.transform.InferType()(mod)
output = func_6354()
func_6355 = relay.Function([], output)
mutated_mod['func_6355'] = func_6355
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6358 = relay.const([[[4.518877,2.652461],[4.885103,2.678670],[-2.527177,6.324791],[-2.898018,3.005524],[-2.071373,-1.887821],[-7.538797,-9.095034],[-6.083167,0.023242],[0.292480,9.919058],[-6.084912,7.275794]],[[5.898197,-7.650216],[-1.349950,-2.031120],[6.573311,1.892518],[-1.922126,-7.951721],[5.192261,4.829657],[5.110716,-1.131099],[3.535986,1.180040],[-5.773324,5.056032],[6.069142,9.176732]],[[-1.472105,4.537050],[-3.343865,9.281335],[-7.201191,0.922871],[-4.963499,2.853826],[3.332981,-9.892533],[-9.567895,9.630464],[-1.091951,-9.911917],[-3.200704,-9.719090],[5.389217,-1.831818]],[[-3.366673,-9.514911],[5.369921,-2.774613],[-5.808235,9.755654],[-8.497536,8.034754],[-6.451581,6.206293],[0.747980,-8.604355],[-8.315880,-8.015066],[-0.638992,6.452154],[-4.881809,2.582690]],[[1.529251,-8.124140],[-2.623252,-2.954269],[4.383793,6.503508],[-6.586043,9.556131],[-1.053566,2.566042],[-5.891852,-7.921277],[-4.049085,7.647941],[0.390455,-8.260553],[6.747351,3.104516]],[[4.359468,-8.115365],[2.950865,-3.185361],[-1.426653,4.877329],[4.642008,2.733255],[8.603188,4.268765],[0.117982,-8.609373],[6.619120,-6.635996],[4.533582,-8.108459],[7.223705,-4.753016]],[[-4.028205,-2.852888],[-9.442742,0.545695],[-4.285699,9.794493],[-3.023905,2.925304],[3.466682,3.672933],[-2.214214,7.526159],[4.352680,-4.491680],[-8.168709,4.829474],[4.136500,-7.673224]],[[9.003439,-7.891852],[-7.338017,4.804292],[-5.361510,8.346796],[2.285313,-2.320241],[-4.781132,5.288136],[-0.397267,-0.090449],[-6.387007,1.403818],[9.334049,4.061742],[-1.583524,-0.706543]],[[6.068707,2.829902],[-7.853977,-9.537406],[0.098366,0.228791],[-7.032636,3.046352],[8.308151,-2.068980],[8.376181,8.701566],[2.720446,-7.226767],[-9.610860,-4.798447],[-9.015484,2.547211]],[[-6.816168,-9.567238],[8.605716,5.018356],[1.788911,-5.546644],[-8.740977,-2.381982],[-1.168004,-9.829808],[6.698763,2.350827],[6.714717,3.137064],[-8.885431,-0.361445],[-1.692922,-9.588081]],[[1.222723,-0.758951],[7.612981,9.383801],[3.569363,6.977622],[0.926294,0.856141],[-2.785893,6.681814],[-7.140878,-5.501334],[3.778613,-6.251103],[0.276459,9.636061],[-0.807576,0.929200]]], dtype = "float32")#candidate|6358|(11, 9, 2)|const|float32
uop_6359 = relay.log(const_6358.astype('float32')) # shape=(11, 9, 2)
func_3538_call = mod.get_global_var('func_3538')
func_3542_call = mutated_mod.get_global_var('func_3542')
const_6362 = relay.const(-9, dtype = "uint8")#candidate|6362|()|const|uint8
var_6363 = relay.var("var_6363", dtype = "uint8", shape = (42,))#candidate|6363|(42,)|var|uint8
call_6361 = relay.TupleGetItem(func_3538_call(relay.reshape(const_6362.astype('uint8'), []), relay.reshape(var_6363.astype('uint8'), [3, 1, 14]), ), 0)
call_6364 = relay.TupleGetItem(func_3542_call(relay.reshape(const_6362.astype('uint8'), []), relay.reshape(var_6363.astype('uint8'), [3, 1, 14]), ), 0)
output = relay.Tuple([uop_6359,call_6361,const_6362,var_6363,])
output2 = relay.Tuple([uop_6359,call_6364,const_6362,var_6363,])
func_6376 = relay.Function([var_6363,], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
mutated_mod['func_6376'] = func_6376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6377 = relay.var("var_6377", dtype = "uint8", shape = (42,))#candidate|6377|(42,)|var|uint8
func_6376_call = mutated_mod.get_global_var('func_6376')
call_6378 = func_6376_call(var_6377)
output = call_6378
func_6379 = relay.Function([var_6377], output)
mutated_mod['func_6379'] = func_6379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_6460 = relay.TupleGetItem(func_4899_call(), 0)
call_6461 = relay.TupleGetItem(func_4900_call(), 0)
output = call_6460
output2 = call_6461
func_6462 = relay.Function([], output)
mod['func_6462'] = func_6462
mod = relay.transform.InferType()(mod)
mutated_mod['func_6462'] = func_6462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6462_call = mutated_mod.get_global_var('func_6462')
call_6463 = func_6462_call()
output = call_6463
func_6464 = relay.Function([], output)
mutated_mod['func_6464'] = func_6464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5911_call = mod.get_global_var('func_5911')
func_5912_call = mutated_mod.get_global_var('func_5912')
call_6546 = func_5911_call()
call_6547 = func_5911_call()
output = relay.Tuple([call_6546,])
output2 = relay.Tuple([call_6547,])
func_6552 = relay.Function([], output)
mod['func_6552'] = func_6552
mod = relay.transform.InferType()(mod)
mutated_mod['func_6552'] = func_6552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mutated_mod.get_global_var('func_6552')
call_6553 = func_6552_call()
output = call_6553
func_6554 = relay.Function([], output)
mutated_mod['func_6554'] = func_6554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_6583 = relay.TupleGetItem(func_4899_call(), 0)
call_6584 = relay.TupleGetItem(func_4900_call(), 0)
func_4680_call = mod.get_global_var('func_4680')
func_4682_call = mutated_mod.get_global_var('func_4682')
var_6613 = relay.var("var_6613", dtype = "uint16", shape = (300,))#candidate|6613|(300,)|var|uint16
call_6612 = relay.TupleGetItem(func_4680_call(relay.reshape(var_6613.astype('uint16'), [6, 10, 5])), 2)
call_6614 = relay.TupleGetItem(func_4682_call(relay.reshape(var_6613.astype('uint16'), [6, 10, 5])), 2)
output = relay.Tuple([call_6583,call_6612,var_6613,])
output2 = relay.Tuple([call_6584,call_6614,var_6613,])
func_6615 = relay.Function([var_6613,], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6616 = relay.var("var_6616", dtype = "uint16", shape = (300,))#candidate|6616|(300,)|var|uint16
func_6615_call = mutated_mod.get_global_var('func_6615')
call_6617 = func_6615_call(var_6616)
output = call_6617
func_6618 = relay.Function([var_6616], output)
mutated_mod['func_6618'] = func_6618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5295_call = mod.get_global_var('func_5295')
func_5297_call = mutated_mod.get_global_var('func_5297')
call_6620 = relay.TupleGetItem(func_5295_call(), 0)
call_6621 = relay.TupleGetItem(func_5297_call(), 0)
func_6615_call = mod.get_global_var('func_6615')
func_6618_call = mutated_mod.get_global_var('func_6618')
var_6626 = relay.var("var_6626", dtype = "uint16", shape = (300,))#candidate|6626|(300,)|var|uint16
call_6625 = relay.TupleGetItem(func_6615_call(relay.reshape(var_6626.astype('uint16'), [300,])), 1)
call_6627 = relay.TupleGetItem(func_6618_call(relay.reshape(var_6626.astype('uint16'), [300,])), 1)
func_4198_call = mod.get_global_var('func_4198')
func_4202_call = mutated_mod.get_global_var('func_4202')
const_6634 = relay.const([7.909565,3.818904,9.718857,9.788859,-8.058874,-0.797032,1.626405,2.863419,0.145742,6.626321,-4.448687,8.994398,5.363305,5.102186,-6.322317,-8.202647,0.780708,5.165858,6.522399,-1.353974,9.916306,-6.442555,-7.727221,-2.700291,-9.225498,-1.684393,5.060317,7.730094,3.257302,-1.897665,7.871205,-8.398224,-7.946745,6.993004,-9.045274,7.900916,4.154062,-5.844151,3.649628,3.955703,-4.001200,-0.898175,6.244962,-1.739245,-7.003487,9.158983,1.552411,2.395825,6.121813,-7.965313,-7.319898,9.468655,4.686135,9.546071,-9.056082,-0.031650,-0.124242,4.774901,-1.783751,-3.165131,-3.217558,0.116954,0.706141,1.179407,7.966735,1.015019,7.085355,5.577735,-0.921618,-8.271274,-7.171922,-7.213384,0.439229,-1.531762,5.943925,1.354877,-3.250909,-1.306476,0.422788,-6.076595,0.367629,-0.313276,4.186419,2.385475,-5.417350,-9.710829,-9.758693,8.051427,-6.077175,3.053999,-3.413049,6.628866,2.927285,7.070311,6.176716,-6.644174,7.815610,-4.962863,-4.866048,-1.449747,8.563973,2.254701,0.671852,3.072636,6.272004,-0.703088,7.388824,-8.500247,5.273163,2.403849,-4.196258,3.062973,-5.370746,-3.766541,2.340026,7.201221,9.722191,-2.968806,3.909954,1.986513,-3.664259,6.204563,2.398628,0.182153,9.933971,-5.472579,-4.412163,2.258378,4.751667,6.486891,-9.332760,0.365409,-4.965310,2.232278,1.770454,-2.878050,-6.296453,-5.749586,4.957640,-2.628937,-0.876636,-3.642341,-2.511347,-4.084207,9.978179,-6.155125,-7.758021,-0.259223,3.522705,4.422796,-7.854610,-8.001655,8.744535,-3.805451,-4.836956,0.911473,6.606593,2.410751,8.462247,0.403732,-8.934394,-8.015796,4.528587,6.701414,-3.840967,-1.581930,-3.673630,6.433130,2.281885,-1.001350,-7.266027,-4.900323,-6.430229,0.184495,5.366808,-6.406453,-0.867012,5.779737,7.329068,-3.965479,0.664976,-5.422083,-6.098144,5.804638,-5.021418,9.918804,3.449092,-1.279374,-4.747592,7.549562,3.069198,4.738139,-2.851853,1.788023,2.187058,-4.068810,-4.607841,-2.337789,-2.533656,-0.375793,2.628333,-3.531148,-3.493241,-2.465655,-1.630784,-1.967209,-0.587304,-0.234000,-4.148276,-3.394774,3.864946,-0.900013,-3.334295,-1.416025,-4.098276,4.081538,7.478707,-8.142363,-2.600730,-3.073054,-3.598521,-7.275686,-5.865038,-5.008197,3.763385,-3.803473,5.468237,-7.548805,4.125312,-4.918435,-3.502423,7.226684,8.311170,6.758543,4.145080,3.863642,-2.086850,-4.910431,-3.255604,-1.833023,9.314538,-6.498747,0.389991,-0.416444,-9.315112,1.542737,-8.822610,-3.015499,-9.486552,-6.314252,2.119015,-8.840163,9.911269,-6.015046,5.300005,3.010008,1.449282,8.124593,1.098070,7.805885,-8.011921,-3.295821,1.917941,0.769928,-9.096757,6.508039,6.270593,0.652676,-2.218309,-0.505187,-8.086465,0.370614,1.725121,4.409731,-0.961551,-4.475590,3.962488,-3.201577,7.243947,-1.308409,6.284061,8.848937,8.542199,5.206844,-9.384100,3.536372,-0.845880,-1.787499,0.459824,-9.229013,-2.348355,1.168983,1.929088,7.501769,3.175938,-9.184358,2.204939,6.165648,-1.257502,0.872618,-1.228768,-9.203609,9.528390,-8.747960,-7.881384,-7.316985,-0.503260,-8.237737,0.928314,-4.689409,9.382861,4.143400,7.278266,-6.442700,-1.900354,-0.418972,-4.226377,0.572710,-6.861915,3.352059,-2.648502,2.178592,6.852448,-4.899930,6.925833,6.528322,8.649510,-6.432302,6.085490,-6.321304,-6.160934,-7.221898,5.074310,-4.485886,2.773246,-1.802610,4.561543,-1.166250,4.587376,-9.987979,-7.535749,-4.955023,-1.902417,-7.492359,6.906054,6.835055,7.476416,-7.419355,5.900237,-3.595559,-5.022239,-7.995469,1.629002,-6.173368,4.176854,7.428124,-6.952645,4.912955,-6.596464,-1.758088,4.518295,9.356748,6.428059,4.907879,-1.056508,-7.559163,7.919780,1.194540,6.684471,8.476984,-4.406246,-9.101444,-2.886921,5.364743,5.725743,-5.621477,-9.760643,-0.147672,-7.484382,-8.570337,6.329486,3.595806,-7.694228,5.258826,1.893436,-8.352252,-4.878210,-0.914362,3.257854,3.681031,-3.200406,2.725937,-1.273572,-9.896143,5.409567,5.452792,5.532356,5.657236,9.026966,-2.491667,-2.154659,-5.633795,5.611120,8.723039,7.222269,-7.678918,0.187830,-1.353090,3.263923,-8.534409,6.307381,2.151982,-9.296333,-8.940850,-4.227721,-8.324722,-6.299444,5.858116,-5.032245,-7.093541,3.852970,5.427704,-6.123069,-1.476438,-0.546674,-5.774228,9.344769,6.658018,7.104729,2.805080,-9.889003,-2.649055,4.227280,-2.892821,-5.753624,6.336613,3.690330,-4.085731,-3.629105,4.644622,7.427296,-8.961720,-6.437908,6.032819,-9.654313,2.554494,-1.926462,0.978719,6.389587,7.903309,-9.685293,2.106398,3.794909,9.295959,3.847191,8.689174,-6.725489,2.134260,7.919731,-2.951898,4.346375,-8.812911,2.293692,8.522193,1.217624,2.997568,9.581259,-9.656397,-8.533104,-6.017176,-1.634565,6.496367,-8.292759,1.786474,0.737969,6.703681,5.960384,-6.180239,5.220926,0.482273,6.226981,-1.782162,-8.442252,5.499224,-9.737641,-7.353458,5.731865,3.874054,-3.652968,9.794772,0.119991,-8.239122,-6.317827,7.412012,4.482556,4.901982,6.381369,7.087714,-4.562411,0.723107,0.875816,9.240539,8.263298,-6.798689,-8.602914,1.813114,-3.913974,-3.549281,-1.002222,-3.420882,8.619772,-2.541608,0.810656,-2.232649,4.569786,-0.805467,8.558716,7.212771,-8.899777,-6.414953,-1.825268,-6.336630,5.836679,7.841650,2.718183,2.560491,3.964060,7.583084,-5.707068,-9.256062,0.804437,-6.608690,6.337449,3.621634,7.649527,-0.154485,4.731889,-8.704911,8.155496,5.132926,4.997227,9.090577,-8.983316,4.852683,-2.517241,-0.346741,-7.886883,-7.777420,4.839188,7.623328,2.198216,-1.382595,6.369710,-1.758964,-4.946523,2.378918,-6.785537,6.387203,6.273627,0.435332,-0.724696,-8.051344,-2.808083,-8.494455,-7.574053,-9.185864,6.977768,3.519838,8.621371,-1.682833,3.573239,1.558105,-8.012991,-0.483269,2.774029,-3.052346,-0.128605,-2.319418,8.655555,-4.133873,5.907791,-5.787086,2.182269,3.927890,2.399898,-8.840544,7.059570,-2.605076,-7.200591,9.525957,4.034478,-8.530278,-3.035146,-6.978788,5.392092,-9.603828,-7.727780,-6.624968,-1.472391,-3.939672,6.425487,-7.500331,2.327696,-9.802854,0.935364,7.164241,5.579042,-5.774519,1.689908,-6.285508,9.087703,8.126861,1.524812,2.756147,6.343168,6.165506,6.497233,6.877758,-4.284277,-6.553129,7.420772,-1.541974,2.230427,5.379973,-2.666259,-7.212132,-1.506495,2.275094,3.118846,6.687092,-3.730826,7.503704,-4.543263,-2.562104,-7.879488,-5.874687,4.891978,0.760771,-6.361117,8.648426,-7.060374,-2.678776,6.138178,-3.052793,9.412381,2.546686,-0.174193,3.585698,2.428336,0.991572,-2.515650,3.895570,8.327165,1.880856,3.015123,-5.495030,-4.975127,-6.351682,-2.033760,-1.821937,-9.185038,2.420731,-3.517223,7.754012,7.169752,2.332279,3.591212,6.225689,4.390100,-7.736542,9.638670,-1.107775,7.675701,9.651459,6.002041,4.781497,2.616448,-4.925615,2.580646,9.066253,3.343256,4.880192,8.533153,0.268109,9.108007,-2.146177,-7.803490,-0.051924,6.803380,0.341619,6.265414,9.744052,8.189538,-6.430999,1.111060,7.229731,-7.660211,2.652333,8.971769,2.676254,-9.068304,7.158872,-3.227452,4.774082,7.127421,0.142919,9.394686,5.960736,-7.662010,-9.788428,5.485807,-6.651345,-9.570637,-4.809880,-4.190651,-0.778826,4.920746,9.855298,7.820524,8.269664,9.845735,9.165205,4.433743,-2.916370,-3.234135,-3.055880,-3.180027,8.692456,-6.392139,1.109270,9.672211,-1.050737,9.039191,6.032015,-9.839689,-8.075781,3.588090,-0.052358,-6.807346,-5.276078,9.207564,4.022314,-5.354180,-9.382832,-3.362205,6.431682,9.154650,-5.883451,-0.954559,0.324829,-5.840889,-3.424053,1.331399,4.992953,9.208982,-5.488179,-5.589622,7.045749,8.803700,8.936440,2.059083,0.586393,-1.449607,9.959735,9.073585,2.224882,-6.895941,6.353089,8.276384,-0.203466,4.743673,3.603243,-4.845534,-1.541766,0.944127,6.880901,-6.408320,2.878274,-3.300317,2.739656,-3.517982,8.772639,1.602633,-1.770958,4.961432,4.966413,-1.888683,-8.342267,7.420400,-1.233283,5.367021,7.598936,-3.675606,-0.455017,-5.382480,9.563801,7.567760,3.308077,8.260623,1.504008,-4.407877,3.321511,5.241791,4.381271,-0.263757,6.653892,1.228579,-2.764175,-5.952767,-9.586241,-8.546450,5.621929,4.897338,-8.582338,-4.088651,6.956816,3.622726,3.036600,9.920485,1.020609,-6.873761,6.443744,-1.863433,-1.793779,-9.441007,0.662367,-7.964779,-6.001660,7.866272,-3.579854,-5.198437,7.350415,0.413243,8.073086,7.974658,-8.617667,2.208643,-4.828931,6.888337,-3.809269,3.893438,5.548367,-4.562463,1.815326,-3.538384,-5.670195,-7.312822,-1.229887,-6.686223,-8.574166,7.165817,-2.395916,-0.952045,-7.993524,6.706556,5.791914,-8.253548,-3.055039,5.605678,-2.061130,1.170219,-3.998176,-7.037181,1.657165,-1.293220,9.141958,7.411483,3.284977,-0.950601,6.657852,-3.585742,-9.647572,2.330770,-2.087212,4.968122,4.124444,5.542116,-7.879634,-7.228883,-3.300841,8.985670,-9.168464,5.093443,-6.419540,7.767185,0.468707,-1.447565,-5.050141,-6.823696,-1.454709,-4.046012,5.794236,-5.059815,8.372937,6.405923,7.481652,2.971030,1.644852,4.019919,-0.907529,-0.426034,1.301329,-8.825703,-3.535866,-5.108769,-5.793114,-9.358480,-8.136558,4.751887,-5.795175,3.347350,9.637116,3.235939,-3.610023,-9.116849,-9.749711,-1.019562,9.254641,4.957386,-9.597720,7.587859,-8.009513,-5.751824,-8.971474,0.921084,-0.504377,-8.260753,0.584042,4.156132,3.401069,3.406845,-8.331917,7.020158,-4.999581,6.844613,-4.501420,6.641175,7.332481,8.027536,6.291934,-6.776547,5.351819,5.680646,-6.966294,-4.658600,-6.876863,8.383305,-5.066214,-2.450805,-9.135093,6.649795,-4.563097,8.163496,-5.753042,8.071092,6.858487,8.743049,1.329783,-7.203593,3.654426,8.706226,-2.626618,-8.973998,7.108025,8.254619,5.294085,-7.301344,3.551663,0.304573,-6.835894,7.406700,-2.853059,-6.650444,6.997946,1.059707,-6.245278,-8.294048,-4.410667,5.474086,8.603638,2.230375,9.044955,0.493811,0.705559,-2.373669,7.389642,-5.762591,-3.233700,3.302271,5.142579,9.793717,6.599931,-4.438026,-3.085505,3.847057,-2.832725,-1.779474,-1.812542,-9.048468,-1.992554,7.968799,-2.487529,9.732505,9.959486,-4.250447,-6.929302,-2.101776,5.408893], dtype = "float64")#candidate|6634|(1008,)|const|float64
call_6633 = relay.TupleGetItem(func_4198_call(relay.reshape(const_6634.astype('float64'), [16, 7, 9]), relay.reshape(const_6634.astype('float64'), [16, 7, 9]), ), 0)
call_6635 = relay.TupleGetItem(func_4202_call(relay.reshape(const_6634.astype('float64'), [16, 7, 9]), relay.reshape(const_6634.astype('float64'), [16, 7, 9]), ), 0)
func_4198_call = mod.get_global_var('func_4198')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_6647 = relay.TupleGetItem(func_4198_call(relay.reshape(call_6633.astype('float64'), [16, 7, 9]), relay.reshape(call_6633.astype('float64'), [16, 7, 9]), ), 0)
call_6648 = relay.TupleGetItem(func_4202_call(relay.reshape(call_6633.astype('float64'), [16, 7, 9]), relay.reshape(call_6633.astype('float64'), [16, 7, 9]), ), 0)
output = relay.Tuple([call_6620,call_6625,var_6626,call_6633,const_6634,call_6647,])
output2 = relay.Tuple([call_6621,call_6627,var_6626,call_6635,const_6634,call_6648,])
func_6656 = relay.Function([var_6626,], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
var_6657 = relay.var("var_6657", dtype = "uint16", shape = (300,))#candidate|6657|(300,)|var|uint16
output = func_6656(var_6657)
func_6658 = relay.Function([var_6657], output)
mutated_mod['func_6658'] = func_6658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5704_call = mod.get_global_var('func_5704')
func_5705_call = mutated_mod.get_global_var('func_5705')
call_6703 = func_5704_call()
call_6704 = func_5704_call()
output = relay.Tuple([call_6703,])
output2 = relay.Tuple([call_6704,])
func_6730 = relay.Function([], output)
mod['func_6730'] = func_6730
mod = relay.transform.InferType()(mod)
mutated_mod['func_6730'] = func_6730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6730_call = mutated_mod.get_global_var('func_6730')
call_6731 = func_6730_call()
output = call_6731
func_6732 = relay.Function([], output)
mutated_mod['func_6732'] = func_6732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_6740 = relay.TupleGetItem(func_6552_call(), 0)
call_6741 = relay.TupleGetItem(func_6554_call(), 0)
output = relay.Tuple([call_6740,])
output2 = relay.Tuple([call_6741,])
func_6748 = relay.Function([], output)
mod['func_6748'] = func_6748
mod = relay.transform.InferType()(mod)
mutated_mod['func_6748'] = func_6748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6748_call = mutated_mod.get_global_var('func_6748')
call_6749 = func_6748_call()
output = call_6749
func_6750 = relay.Function([], output)
mutated_mod['func_6750'] = func_6750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6286_call = mod.get_global_var('func_6286')
func_6287_call = mutated_mod.get_global_var('func_6287')
call_6919 = relay.TupleGetItem(func_6286_call(), 2)
call_6920 = relay.TupleGetItem(func_6287_call(), 2)
output = relay.Tuple([call_6919,])
output2 = relay.Tuple([call_6920,])
func_6925 = relay.Function([], output)
mod['func_6925'] = func_6925
mod = relay.transform.InferType()(mod)
mutated_mod['func_6925'] = func_6925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6925_call = mutated_mod.get_global_var('func_6925')
call_6926 = func_6925_call()
output = call_6926
func_6927 = relay.Function([], output)
mutated_mod['func_6927'] = func_6927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6100_call = mod.get_global_var('func_6100')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_7007 = relay.TupleGetItem(func_6100_call(), 0)
call_7008 = relay.TupleGetItem(func_6101_call(), 0)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_7009 = func_5285_call()
call_7010 = func_5285_call()
output = relay.Tuple([call_7007,call_7009,])
output2 = relay.Tuple([call_7008,call_7010,])
func_7019 = relay.Function([], output)
mod['func_7019'] = func_7019
mod = relay.transform.InferType()(mod)
mutated_mod['func_7019'] = func_7019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7019_call = mutated_mod.get_global_var('func_7019')
call_7020 = func_7019_call()
output = call_7020
func_7021 = relay.Function([], output)
mutated_mod['func_7021'] = func_7021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6286_call = mod.get_global_var('func_6286')
func_6287_call = mutated_mod.get_global_var('func_6287')
call_7041 = relay.TupleGetItem(func_6286_call(), 1)
call_7042 = relay.TupleGetItem(func_6287_call(), 1)
output = call_7041
output2 = call_7042
func_7045 = relay.Function([], output)
mod['func_7045'] = func_7045
mod = relay.transform.InferType()(mod)
output = func_7045()
func_7046 = relay.Function([], output)
mutated_mod['func_7046'] = func_7046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_7066 = func_4964_call()
call_7067 = func_4964_call()
func_6925_call = mod.get_global_var('func_6925')
func_6927_call = mutated_mod.get_global_var('func_6927')
call_7087 = relay.TupleGetItem(func_6925_call(), 0)
call_7088 = relay.TupleGetItem(func_6927_call(), 0)
output = relay.Tuple([call_7066,call_7087,])
output2 = relay.Tuple([call_7067,call_7088,])
func_7093 = relay.Function([], output)
mod['func_7093'] = func_7093
mod = relay.transform.InferType()(mod)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mutated_mod.get_global_var('func_7093')
call_7094 = func_7093_call()
output = call_7094
func_7095 = relay.Function([], output)
mutated_mod['func_7095'] = func_7095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_7181 = relay.TupleGetItem(func_6552_call(), 0)
call_7182 = relay.TupleGetItem(func_6554_call(), 0)
func_5491_call = mod.get_global_var('func_5491')
func_5495_call = mutated_mod.get_global_var('func_5495')
const_7196 = relay.const([1.411267,3.117992,4.515681,-6.571293,2.128798,5.247928,-1.566916,8.907302,-6.702205,-6.559332,8.319185,-2.020450,-8.838717,2.176288,5.263176,-6.480969,-7.790660,-9.437891,2.752305,-4.026150,7.937056,-7.302541,-3.137671,-4.293403,-4.805186,4.513307,3.178940,4.132633,-9.637264,0.155810,2.231664,9.220439,8.652095,3.740739,-6.805860,1.029687,2.314451,-2.313531,-1.009634,7.985518,4.156804,-6.757160,-8.376111,-7.542556,0.726149,-9.536679,3.622227,-6.392823,0.639720,0.031456,0.073225,-0.231481,0.258715,3.419649,2.624527,-0.599843,6.029523,1.419177,2.103945,4.640195,1.657609,9.484281,9.560820,0.783616,6.268208,-3.146727,-5.087053,7.824392,8.914283,5.066650,5.361240,9.103520,-9.830013,-6.178962,8.635362,-6.478909,-0.661584,1.791718,-8.941161,-0.948831,-4.935986,-9.082918,3.964424,-2.177155,-4.331200,3.312052,5.397156,1.116319,1.510608,9.030632,3.839809,4.428992,0.183104,5.422609,-5.423019,1.889797,-1.661301,1.938356,-5.596445,0.479303,6.030879,-6.625039,6.709068,-6.672116,-2.716525,7.894671,-6.667801,7.651724,-4.017799,3.479841,-6.146240,5.036492,-7.055210,4.497240,-3.547246,-1.063275,8.073173,-6.265073,-0.607266,-7.217045,2.628991,-7.579808,-5.478359,2.627475,-9.508801,6.436617,-8.086395,1.135782,6.393915,1.392401,4.846263,9.416907,-3.270357,-0.735136,0.415692,4.249172,-6.590479,-8.133608,9.950345,1.398576,-1.328094,8.081517,8.819361,8.165067,8.090780,-0.761295,-7.662477,8.354231,-9.935057,7.831543,-2.721855,-9.530526,-4.996575,-8.640793,-2.768760,6.351618,-6.680928,9.536694,-3.820044,9.884873,7.901014,-1.216600,9.082588,3.828355,1.885073,1.710131,1.779924,8.045087,-5.543717,-7.488334,3.290630,4.987789,-3.698093,-7.790741,-6.290138,-2.436198,0.870723,6.491575,-7.860048,-8.226840,-9.695239,-2.522861,2.040314,5.845409,7.131158,5.792690,-9.671605,-6.165053,7.714664,7.107388,-4.894930,-7.254253,-0.177899,3.562112,-2.675636,1.782774,7.434968,-5.081964,3.765391,1.619250,8.884554,9.962091,2.376553,-8.041722,-5.529340,-6.357527,8.737931,6.713158,9.226034,2.279964,-4.463542,-9.900443,-4.990690,1.493029,-8.891968,-8.883054,6.511280,8.425308,0.785885,3.230322,1.511851,3.393972,-5.178978,4.052333,1.184643,2.043887,0.616622,5.914104,1.755637,2.376658,8.250330,0.066129,9.951482,-7.956236,2.091630,0.188310,5.000554,9.914551,9.453103,2.153088,3.223333,-4.031866,-8.010676,-8.807416,-8.716343,-3.814687,5.979711,-3.032465,-2.821497,-7.991832,2.590278,2.861255,-0.207416,-4.740767,3.517464,-9.829823,5.589522,2.528834,-7.126555,8.122124,5.106360,1.453337,5.015345,4.140159,-8.452209,2.560575,9.553179,-0.340330,-5.593500,2.342315,0.233377,-3.211634,5.286460,-1.736562,-7.122834,-5.754990,2.988500,-0.765077,-0.566712,6.294340,3.435723,-7.156053,1.066403,-6.597201,4.651312,1.861225,0.284818,0.056527,2.080372,1.198183,0.153776,6.734576,7.378675,-7.746882,5.445027,-1.113325,-3.061364,-8.545103,3.633411,7.729718,-2.271796,6.034323,1.319135,-0.289190,5.672413,-7.564010,-8.541341,2.486723,4.801652,0.900149,7.657028,-5.966565,-8.770047,8.569024,4.636606,-1.842964,8.722167,-4.629816,7.545887,6.838510,-8.825375,2.406075,6.320345,-5.402315,-6.192594,-1.294023,6.198459,-5.570075,9.537183,8.364288,-1.207250,-1.932646,-3.181353,-2.171209,-6.516775,-6.665970,9.290698,1.686710,-6.704832,-8.833063,7.244571,4.624200,4.740116,-4.389652,4.974682,2.888608,8.211959,-5.424249,-6.138030,9.537132,-0.076056,6.015090,-6.607722,0.270801,-7.266267,2.281968,-2.316598,-5.180361,-3.337691,-0.458795,2.573878,-5.972325,9.968146,-7.218098,6.072592,-7.419416,1.889215,-5.331158,-8.483951,-2.600670,8.756273,-4.748349,-4.356714,6.686936,2.480879,8.594773,7.398627,-1.257573,-1.038545,3.646115,-2.717627,5.727953,9.723707,1.863359,3.972936,6.869289,-3.209876,-7.791711,-3.301151,6.456788,8.405756,-4.761503,-8.687371,-2.724194,4.221138,9.997438,8.645307,5.174512,-6.261778,9.316920,1.761980,-5.173061,-1.907198,-5.123292,-4.058508,6.230720,-8.074953,-2.808382,-9.949257,7.002513,-2.570706,5.228102,-0.298095,0.792924,-0.022365,-8.228050,1.849085,4.078294,-5.394670,-0.893518,2.653196,-6.853684,-3.879279,5.630556,8.410823,-2.673568,6.005994,-3.151627,4.533505,-4.065607,-0.194540,1.590412,6.268108,7.598355,-3.133606,-6.857094,1.311790,-1.444637,8.885801,-5.137574,-9.551168,2.091908,4.140139,9.638515,9.636749,-3.750531,6.433847,5.056991,-8.319947,-2.500920,-7.890236,-9.488423,8.967300,7.403737,-1.528887,-2.181035,2.932940,-0.954278,3.825835,9.841103,0.907510,-3.168589,4.500086,2.327013,-5.705285,-7.382133,-8.022008,2.759055,8.135462,6.017435,-7.004026,8.097762,7.669951,-6.533500,9.530855,6.362957,4.830246,0.890125,5.308761,-0.021171,-1.946928,-4.314663,-3.796319,3.054052,8.221067,0.200546,-3.361932,0.206975,5.872598,-0.013699,3.038998,3.280499,5.826888,4.380613,-5.056901,-7.986971,-9.954690,4.741434,-6.076500,8.393856,1.949741,-3.394499,3.925207,0.522483,8.021354,1.297666,7.283301,-1.889907,-3.318077,1.290234,3.878112,5.094850,6.480137,-5.514252,3.905544,1.875352,5.925203,-0.545545,5.373296,1.468516,6.043232,0.685407,9.780767,2.091911,1.553069,-7.896866,8.239501,-7.720605,9.444478,-8.738242,-6.980400,9.801149,2.014228,-9.602205,-0.492481,-7.832374,8.874841,-1.609918,0.822581,-0.730551,4.475620,7.759189,-9.554304,5.310611,8.995436,4.582586,8.589471,1.275204,-0.644834,8.026981,7.316661,8.671952,6.243239,4.176979,9.825496,8.802131,7.744535,4.861275,-1.210910,3.842752,5.193956,-4.891619,8.778197,1.264003,6.920998,-1.440464,-5.945517,8.572921,-5.336357,-4.764171,-1.762031,-1.169509,4.769637,-2.640115,-0.155083,4.118437,-6.823996,-6.158706,0.750740,5.340610,-8.465647,4.610863,3.478843,-6.609358,3.330505,-8.669374,-2.768813,7.109748,-1.746991,8.269123,4.774759,-4.679786,-2.130889,-7.403290,3.830000,1.563155,4.564029,-3.910281,0.071913,-6.447743,-7.712069,1.228622,5.318910,-7.897553,-7.914944,-9.753431,-2.029668,9.072202,3.494814,-6.508768,6.437906,-1.946124,-5.249645,-2.234273,7.911291,-6.337718,9.823217,-0.744114,5.270290,-8.489193,7.690928,1.820665,-7.381755,-5.249345,-7.547304,-0.697254,-5.239165,2.764302,0.053947,0.490516,-8.354348,-1.190424,6.824663,6.366577,7.710843,-1.719370,-2.577211,-4.780547,-7.583588,5.915851,8.494636,-9.189248,-6.352960,-9.657297,8.468443,8.043523,-4.033642,1.652589,-6.744117,-6.092552,2.562523,-1.402398,-2.607602,-6.292957,-3.002311,-6.870855,6.643441,7.729700,-3.059882,2.450641,4.389038,1.553307,1.551650,9.285196,4.186745,9.326884,-1.222905,4.383525,1.617891,3.106030,0.442288,1.025887,1.608087,-6.214134,5.146516,5.002102,-4.246456,-4.444278,-1.170999,-7.756862,9.363488,-1.008683,9.067546,-8.288892,9.229539,-4.346817,5.960722,7.852726,7.375349,-0.577613,1.247584,1.387881,1.730346,7.656892,-9.600265,9.454479,-7.044293,5.075853,1.263556,-2.011566,-4.807814,0.226617,-5.743411,-5.739383,9.109655,-4.392187,-8.887968,-5.122837,1.707763,6.070487,9.839637,2.182871,-2.300208,-1.402036,1.632728,-8.713676,8.302486,4.323409,-8.795177,4.164172,2.290458,5.283037,-1.876018,7.400595,2.888171,1.380969,8.940337,-1.953255,2.821702,-2.863362,5.068802,-0.745956,-6.358035,9.453686,8.557697,-8.986221,-2.115024,5.477968,-5.556503,3.573227,0.742722,-5.941339,7.182795,9.509237,0.782932,3.224517,-6.353088,-4.528839,-8.139095,-1.103565,-4.632175,-3.679140,-2.961062,4.716794,-8.378288,-6.336734,2.699954,-2.499044,-4.522694,-1.519779,9.008494,-6.961020,4.860890,6.240768,-3.902710,-0.585055,-6.430088,-9.467023,-9.902264,0.107953], dtype = "float32")#candidate|7196|(770,)|const|float32
var_7197 = relay.var("var_7197", dtype = "float32", shape = (154,))#candidate|7197|(154,)|var|float32
call_7195 = relay.TupleGetItem(func_5491_call(relay.reshape(const_7196.astype('float32'), [11, 5, 14]), relay.reshape(var_7197.astype('float32'), [154,]), ), 7)
call_7198 = relay.TupleGetItem(func_5495_call(relay.reshape(const_7196.astype('float32'), [11, 5, 14]), relay.reshape(var_7197.astype('float32'), [154,]), ), 7)
output = relay.Tuple([call_7181,call_7195,const_7196,var_7197,])
output2 = relay.Tuple([call_7182,call_7198,const_7196,var_7197,])
func_7221 = relay.Function([var_7197,], output)
mod['func_7221'] = func_7221
mod = relay.transform.InferType()(mod)
var_7222 = relay.var("var_7222", dtype = "float32", shape = (154,))#candidate|7222|(154,)|var|float32
output = func_7221(var_7222)
func_7223 = relay.Function([var_7222], output)
mutated_mod['func_7223'] = func_7223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5413_call = mod.get_global_var('func_5413')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_7323 = relay.TupleGetItem(func_5413_call(), 3)
call_7324 = relay.TupleGetItem(func_5414_call(), 3)
output = relay.Tuple([call_7323,])
output2 = relay.Tuple([call_7324,])
func_7331 = relay.Function([], output)
mod['func_7331'] = func_7331
mod = relay.transform.InferType()(mod)
mutated_mod['func_7331'] = func_7331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mutated_mod.get_global_var('func_7331')
call_7332 = func_7331_call()
output = call_7332
func_7333 = relay.Function([], output)
mutated_mod['func_7333'] = func_7333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_7356 = relay.TupleGetItem(func_7331_call(), 0)
call_7357 = relay.TupleGetItem(func_7333_call(), 0)
output = call_7356
output2 = call_7357
func_7371 = relay.Function([], output)
mod['func_7371'] = func_7371
mod = relay.transform.InferType()(mod)
mutated_mod['func_7371'] = func_7371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7371_call = mutated_mod.get_global_var('func_7371')
call_7372 = func_7371_call()
output = call_7372
func_7373 = relay.Function([], output)
mutated_mod['func_7373'] = func_7373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_7377 = relay.TupleGetItem(func_4899_call(), 0)
call_7378 = relay.TupleGetItem(func_4900_call(), 0)
func_5295_call = mod.get_global_var('func_5295')
func_5297_call = mutated_mod.get_global_var('func_5297')
call_7387 = relay.TupleGetItem(func_5295_call(), 0)
call_7388 = relay.TupleGetItem(func_5297_call(), 0)
bop_7391 = relay.equal(call_7377.astype('bool'), relay.reshape(call_7387.astype('bool'), relay.shape_of(call_7377))) # shape=(11, 1, 6)
bop_7394 = relay.equal(call_7378.astype('bool'), relay.reshape(call_7388.astype('bool'), relay.shape_of(call_7378))) # shape=(11, 1, 6)
uop_7406 = relay.cosh(call_7377.astype('float32')) # shape=(11, 1, 6)
uop_7408 = relay.cosh(call_7378.astype('float32')) # shape=(11, 1, 6)
uop_7409 = relay.acosh(uop_7406.astype('float64')) # shape=(11, 1, 6)
uop_7411 = relay.acosh(uop_7408.astype('float64')) # shape=(11, 1, 6)
output = relay.Tuple([bop_7391,uop_7409,])
output2 = relay.Tuple([bop_7394,uop_7411,])
func_7412 = relay.Function([], output)
mod['func_7412'] = func_7412
mod = relay.transform.InferType()(mod)
mutated_mod['func_7412'] = func_7412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7412_call = mutated_mod.get_global_var('func_7412')
call_7413 = func_7412_call()
output = call_7413
func_7414 = relay.Function([], output)
mutated_mod['func_7414'] = func_7414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_7522 = func_4964_call()
call_7523 = func_4964_call()
func_1023_call = mod.get_global_var('func_1023')
func_1026_call = mutated_mod.get_global_var('func_1026')
const_7526 = relay.const([8.216675,-1.385526,3.854254,4.824512,1.136635,-9.019840,3.091854,2.965917,-0.030896,-5.109694,-2.601759,0.073106,-6.227942,-2.541345,-3.210688,-1.202672,4.971374,7.045633,-6.718939,-2.006996,-6.212439,8.934129,-9.482494,-6.127602,-7.731677,-0.208909,-7.971190,-2.230711,-3.533838,-7.219185,3.744111,-2.319818,0.206824,8.343850,-3.411494,2.319668,2.058911,3.555831,-1.413758,-6.044565,-6.003901,9.446411,-2.853128,8.394018,-3.059245,-9.622098,3.748324,3.791148,-3.812683,-6.484251,-1.946705,1.504308,-6.819928,8.808197,-8.423167,-3.315071,-5.485487,1.501870,1.272663,-8.819111,-2.023388,-3.741600,3.423386,5.322199,-1.396149,2.443241,0.404957,-0.856716,5.126875,-5.662854,1.342760,-5.154681,-4.889998,4.392456,4.963277,-4.115664,-6.375993,7.115152,-2.309422,4.082098,-5.342328,0.157235,9.574868,4.084502,9.086838,-9.431181,-4.826361,-0.977629,4.325069,8.818542,2.514885,-0.323784,-9.668388,-9.214200,-8.563012,4.716826,-8.652831,0.190934,3.246755,-8.930370,-0.456261,1.199092,9.609140,-4.241653,0.572109,6.573977,6.716876,-0.100489,1.123674,-5.608314,-7.725800,-9.797856,-2.272515,-7.800863,4.966547,-1.218871,-9.028687,-0.603270,1.805753,-8.324821,-5.027778,-6.713395,3.193729,4.679908,3.331646,8.525335,-3.129614,-4.970780,4.264005,-6.719398,2.977492,-2.948950,-5.217405,8.278014,2.126060,7.056232,-4.351424,5.656811,-6.150268,-9.701323,-8.303322,-6.729124,-1.544837,1.341044,9.425824,-5.292055,-2.494294,-6.601631,2.485448,7.997415,8.819493,5.029537,-1.155636,-5.355074], dtype = "float32")#candidate|7526|(154,)|const|float32
const_7527 = relay.const([-10,-9,7,5,-5,-7,-10,-6,9,-6,-4,-7,-8,8,3,-4,-4,1,6,-9,6,-4,8,9,-7,-4,-5,-5,3,2,5,-8,-8,2,-7,-5,-8,-9,10,-4,5,9,8,1,-9,5,9,-5,-6,-1,8,6,-6,2,5,4,-1,7,6,1,3,9,3,8,-9,-2,8,4,-5,1,-2,9,5,5,8,-7,3,-4,8,-6,3,-5,-8,-7,7,2,-1,7,8,9,9,6,2,8,2,-8,-4,7,3,-2,2,-2,-6,2,10,-10,9,-10,-8,2,4,6,-2,9,-1,-8,6,7,-6,8,2,6,5,-4,-6,-4,6,-8,7,6,8,-10,-3,-8,7,6,5,-3,-9,5,5,8,9,4,3,1,-5,10,7,-8,6,-6,-7,1,-7,-1,-6,-8,5,3,1,3,-5,3,-1,-8,4,-7,-2,6,5,-4,8,-7,3,3,4,-9,9,2,-2,8,-4,-8,3,6,3,2,3,4,-9,-9,5,3,1,-5,-8,10,9,-8,3,-2,-7,8,4,-3,1,4,-9,1,2,4,10,-2,3,-1,8,-1,-8,3,10,-2,8,-8,-5,-9,-4,9,-7,3,2,6,-9,-3,7,6,-3,-10,-6,-10,-5,10,-1,5,9,-10,4,-1,3,10,9,7,6,-3,-6,-3,-3,2,3,4,9,-3,9,6,7,2,-3,9,6,10,-6,-5,-10,-3,-6,5,2,-8,3,5,-1,-7,7,2,8,7,8,1], dtype = "int16")#candidate|7527|(288,)|const|int16
call_7525 = relay.TupleGetItem(func_1023_call(relay.reshape(const_7526.astype('float32'), [11, 2, 7]), relay.reshape(const_7527.astype('int16'), [288,]), ), 3)
call_7528 = relay.TupleGetItem(func_1026_call(relay.reshape(const_7526.astype('float32'), [11, 2, 7]), relay.reshape(const_7527.astype('int16'), [288,]), ), 3)
output = relay.Tuple([call_7522,call_7525,const_7526,const_7527,])
output2 = relay.Tuple([call_7523,call_7528,const_7526,const_7527,])
func_7542 = relay.Function([], output)
mod['func_7542'] = func_7542
mod = relay.transform.InferType()(mod)
mutated_mod['func_7542'] = func_7542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mutated_mod.get_global_var('func_7542')
call_7543 = func_7542_call()
output = call_7543
func_7544 = relay.Function([], output)
mutated_mod['func_7544'] = func_7544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5911_call = mod.get_global_var('func_5911')
func_5912_call = mutated_mod.get_global_var('func_5912')
call_7614 = func_5911_call()
call_7615 = func_5911_call()
const_7616 = relay.const([[[-0.540140,-8.201046,-9.233099,-7.280308,7.464609,-3.673431],[0.631998,4.299871,-2.533756,-2.985847,8.561668,-3.201723],[8.110841,4.495031,-0.614824,-4.088528,-1.095435,-9.497775],[9.098501,-3.983668,0.223254,0.284464,4.064096,0.156701]],[[3.830558,-0.800724,-1.735804,-1.620258,1.917303,7.802142],[-4.389797,-3.708392,-0.314680,-9.490738,2.496702,-6.154452],[7.213755,3.633606,0.791979,-4.487568,-3.867071,6.362158],[2.276344,-8.711675,4.772235,4.833067,1.887960,-6.204428]],[[-1.999115,1.265403,0.687280,-0.577106,3.831894,-1.937638],[2.673111,-0.754831,8.778218,-4.692306,4.089962,2.577524],[-9.315379,6.606836,-3.012927,-3.972559,-2.096397,-6.271767],[2.521015,-5.312510,1.657826,3.946524,6.008661,-3.676023]],[[1.620744,4.686753,-1.375492,6.438084,5.996581,-8.921582],[-3.316248,0.732900,4.328404,2.932090,-6.750258,5.584639],[-3.977016,-0.631251,-2.085423,-2.035319,1.925395,1.417727],[-6.703067,5.641089,3.405094,2.300807,-7.987079,-9.557584]],[[-9.419919,-1.476236,8.758162,-1.315595,5.992694,0.494907],[-4.603656,3.607803,7.003304,0.162252,-5.012075,-6.384437],[-0.814030,8.777878,-7.413131,-7.322080,7.037609,0.667532],[4.866407,-9.246767,1.340196,-3.825693,6.594739,9.760752]],[[-5.713056,-1.338719,1.670604,-2.597836,-4.146278,-1.605817],[3.799377,-8.071060,-7.944216,1.555578,4.371129,-9.104992],[1.466261,-1.178462,-1.525402,-8.678528,-5.057058,4.331246],[1.908354,-8.545089,-8.615899,-5.794480,4.870163,-6.758615]],[[-9.225131,4.979499,-8.683045,-4.026016,8.667462,-0.567801],[3.562570,-1.950550,-7.418649,2.258889,-9.066586,8.355620],[4.371273,-5.670426,-4.323911,-2.344169,2.754501,5.695127],[7.777905,4.144716,-4.492890,-2.666296,-7.208679,-3.367250]],[[9.939218,-1.813350,0.071322,-6.124934,6.104347,1.095543],[1.929304,3.237995,-7.996486,-5.232847,-4.483617,-9.527457],[-8.140817,-4.123865,6.110532,2.336850,4.670843,-2.711451],[6.197752,4.308590,-0.001656,6.684439,-9.676927,-7.857315]],[[2.400365,-3.636143,-5.365384,-2.668549,8.314200,-6.981210],[4.062862,0.708196,9.084405,5.218055,-1.231460,-8.809995],[-9.227011,6.066810,-2.181917,7.472545,-2.448194,5.861689],[-4.068951,3.034330,0.951139,-7.503205,8.964074,4.935760]],[[-6.896762,-6.240207,5.739593,3.775091,-3.360772,-9.815109],[-7.064899,-3.566775,7.830270,1.514983,2.233506,4.398366],[-2.909587,-7.371304,-8.710716,3.859720,-0.972924,8.573175],[-7.479575,8.179331,1.333351,6.732141,8.270207,8.485299]],[[5.262125,-9.914678,0.998007,2.504350,-1.712706,-2.927233],[1.682595,5.580290,7.243350,3.324852,1.895174,-8.867864],[-1.953244,-8.898194,0.658254,-6.316974,-2.139821,8.332114],[8.374194,-7.975430,-9.931813,-9.360891,-2.843439,-7.105339]]], dtype = "float32")#candidate|7616|(11, 4, 6)|const|float32
bop_7617 = relay.logical_and(call_7614.astype('bool'), const_7616.astype('bool')) # shape=(11, 4, 6)
bop_7620 = relay.logical_and(call_7615.astype('bool'), const_7616.astype('bool')) # shape=(11, 4, 6)
func_7542_call = mod.get_global_var('func_7542')
func_7544_call = mutated_mod.get_global_var('func_7544')
call_7631 = relay.TupleGetItem(func_7542_call(), 2)
call_7632 = relay.TupleGetItem(func_7544_call(), 2)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
var_7638 = relay.var("var_7638", dtype = "float32", shape = (594,))#candidate|7638|(594,)|var|float32
call_7637 = func_5870_call(relay.reshape(var_7638.astype('float32'), [11, 9, 6]))
call_7639 = func_5870_call(relay.reshape(var_7638.astype('float32'), [11, 9, 6]))
output = relay.Tuple([bop_7617,call_7631,call_7637,var_7638,])
output2 = relay.Tuple([bop_7620,call_7632,call_7639,var_7638,])
func_7652 = relay.Function([var_7638,], output)
mod['func_7652'] = func_7652
mod = relay.transform.InferType()(mod)
mutated_mod['func_7652'] = func_7652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7653 = relay.var("var_7653", dtype = "float32", shape = (594,))#candidate|7653|(594,)|var|float32
func_7652_call = mutated_mod.get_global_var('func_7652')
call_7654 = func_7652_call(var_7653)
output = call_7654
func_7655 = relay.Function([var_7653], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6925_call = mod.get_global_var('func_6925')
func_6927_call = mutated_mod.get_global_var('func_6927')
call_7718 = relay.TupleGetItem(func_6925_call(), 0)
call_7719 = relay.TupleGetItem(func_6927_call(), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
const_7730 = relay.const([-8.083396,-9.481206,2.026144,6.148910,-2.690651,-8.995307,-5.769525,8.232309,9.665839,-3.087229,5.614880,9.570923,6.732320,0.818053,-4.217378,-3.407492,2.032297,7.250052,-6.084249,5.754008,-7.172439,-6.603528,-6.303442,3.365493,5.205132,7.897666,-4.264583,-0.066146,6.381159,-7.850429,3.985685,6.466710,3.575356,4.463049,1.006253,0.538369,-3.623898,-9.960023,8.838790,2.355581,0.546160,6.239908,3.651070,5.484175,0.743924,-5.226465,9.502045,-9.999704,-5.086360,-6.144733,-7.976400,-3.614723,-9.916124,9.656883,-7.953278,-8.550791,-9.559095,8.173635,6.920578,-3.906870,5.317090,6.053534,-2.235359,5.324853,8.886811,5.937934,2.135810,9.096751,-0.203641,2.985463,5.171203,2.283398,2.124885,7.535288,6.033977,-5.350029,-2.920820,8.481340,6.588917,3.339521,0.411432,-0.884060,-4.485175,-7.247088,-8.580960,-9.847480,2.256802,4.724334,-4.079210,-3.309784,1.156079,-0.817679,-9.133199,-2.050871,4.956547,6.408435,-9.150734,6.643957,2.376676,-4.194069,-3.594989,2.637294,-5.814528,-7.773073,3.491838,-9.492696,5.796345,-1.565545,6.248527,0.283880,-1.071632,6.290725,-6.715872,-2.250890,-9.387863,-8.389118,8.504472,-9.500013,-9.657816,-0.565932,6.540119,-4.761211,-4.613464,1.818115,-0.519717,-7.386634,7.120098,4.260327,-4.259641,0.334250,-0.298784,0.803328,0.223507,2.441727,2.512943,9.402197,2.099340,7.818289,-4.228754,8.757700,-4.942610,2.721157,6.495627,5.270458,-1.664639,-3.289605,-4.654342,-3.039617,2.213824,-5.663525,-0.959438,-8.063574,8.098419,9.665462,-3.658778,-3.997941,-4.474638,-8.561546,1.470789,6.641568,-2.748295,-4.556088,-7.765179,-0.587689,1.684491,-0.529114,-0.827985,0.079890,-8.926350,1.113480,7.959821,4.234817,9.239157,4.524254,-7.127909,4.408715,-9.572704,3.255439,-5.092263,-7.862222,-4.919102,8.819372,6.664748,7.718376,5.840412,-9.734348,-4.163918,-3.883239,1.318828,-8.185515,6.673275,-7.105367,-3.678584,-5.089037,4.731006,-6.821181,7.635850,-4.002489,-2.377112,-2.822969,-1.421032,-7.082744,0.837193,6.297989,-3.191034,-5.276280,8.302912,3.917849,-1.650065,-7.732853,-2.528042,-3.530558,9.129864,4.554438,-1.640434,7.968361,-6.784071,5.390934,3.590104,6.849485,8.315497,9.035761,-5.317200,-4.889968,-6.069018,4.050270,7.113233,-3.778090,-9.051623,-9.683869,2.962314,-1.030552,6.843822,6.432466,-9.801253,-7.949582,-2.979026,-7.309926,-6.059322,-7.446120,1.779634,2.210214,0.701326,0.013490,2.912781,-5.386755,-0.980852,8.665474,-9.391199,-3.082794,2.983051,-5.349742,-5.183774,-0.461598,5.061633,7.730336,-6.431458,4.055391,-3.162833,-8.914938,-4.371758,-2.458141,2.211137,-0.998481,3.139641,-9.586160,9.632227,-5.545501,2.521911,-3.524332,9.036308,2.289143,2.825664,0.816343,-2.025341,2.712244,-0.227030,5.775620,2.888164,-4.687546,-7.522892,6.637276,6.340219,3.383573,5.566013,-2.591557,1.809489,-3.079129,-3.125802,-3.935794,1.236260,-5.491673,5.621308,0.326253,1.856363,7.310975,-5.440098,-6.808956,9.616833,-6.454815,4.960373,2.027152,7.718273,3.756331,-1.513606,-1.785378,-3.943959,1.201358,-7.450851,-7.133824,-1.879516,4.640876,5.816342,3.811998,0.180741,1.186478,-0.143308,4.719955,-3.322949,2.059378,-6.966360,4.292009,-9.710619,-9.998436,2.881844,5.237425,3.152200,6.781991,-4.186419,8.610744,-8.815168,-9.845177,9.069126,-8.268886,6.822304,-3.449092,6.630372,-2.872683,0.297141,-2.450092,6.267411,-4.684468,-5.166765,5.240995,-6.568863,-6.654512,4.202530,1.240691,-8.128351,7.128026,-3.405587,6.254319,1.086797,2.446036,4.543080,0.439600,6.339742,6.989797,5.450408,-9.228782,2.749160,1.749176,-3.808177,2.725877,-8.332377,-7.836500,5.927147,5.253131,6.710532,7.271174,-7.327969,9.490209,-3.351304,-1.073224,-0.443667,-1.440128,8.017865,-6.519873,-8.062841,7.273898,-7.064318,4.186799,9.745266,-6.043911,-1.890189,3.091413,1.860027,-1.515044,9.600565,3.447188,-0.186141,2.392458,9.427250,7.309504,-9.044021,5.788378,-3.828096,-8.637965,1.610485,-7.817761,-1.044492,-0.313351,-2.015930,0.489762,2.732299,2.964884,-4.936099,-0.273273,5.105753,-3.957405,-8.933486,-9.472282,-1.138877,-9.514273,-2.315320,4.479464,8.246015,-7.766495,3.380590,8.940638], dtype = "float64")#candidate|7730|(420,)|const|float64
call_7729 = relay.TupleGetItem(func_469_call(relay.reshape(const_7730.astype('float64'), [4, 7, 15]), relay.reshape(const_7730.astype('float64'), [4, 7, 15]), ), 0)
call_7731 = relay.TupleGetItem(func_472_call(relay.reshape(const_7730.astype('float64'), [4, 7, 15]), relay.reshape(const_7730.astype('float64'), [4, 7, 15]), ), 0)
output = relay.Tuple([call_7718,call_7729,const_7730,])
output2 = relay.Tuple([call_7719,call_7731,const_7730,])
func_7740 = relay.Function([], output)
mod['func_7740'] = func_7740
mod = relay.transform.InferType()(mod)
output = func_7740()
func_7741 = relay.Function([], output)
mutated_mod['func_7741'] = func_7741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7371_call = mod.get_global_var('func_7371')
func_7373_call = mutated_mod.get_global_var('func_7373')
call_7752 = func_7371_call()
call_7753 = func_7371_call()
output = relay.Tuple([call_7752,])
output2 = relay.Tuple([call_7753,])
func_7759 = relay.Function([], output)
mod['func_7759'] = func_7759
mod = relay.transform.InferType()(mod)
mutated_mod['func_7759'] = func_7759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7759_call = mutated_mod.get_global_var('func_7759')
call_7760 = func_7759_call()
output = call_7760
func_7761 = relay.Function([], output)
mutated_mod['func_7761'] = func_7761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6462_call = mod.get_global_var('func_6462')
func_6464_call = mutated_mod.get_global_var('func_6464')
call_7762 = func_6462_call()
call_7763 = func_6462_call()
output = call_7762
output2 = call_7763
func_7767 = relay.Function([], output)
mod['func_7767'] = func_7767
mod = relay.transform.InferType()(mod)
mutated_mod['func_7767'] = func_7767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7767_call = mutated_mod.get_global_var('func_7767')
call_7768 = func_7767_call()
output = call_7768
func_7769 = relay.Function([], output)
mutated_mod['func_7769'] = func_7769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_7816 = relay.TupleGetItem(func_6552_call(), 0)
call_7817 = relay.TupleGetItem(func_6554_call(), 0)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_7819 = relay.TupleGetItem(func_7331_call(), 0)
call_7820 = relay.TupleGetItem(func_7333_call(), 0)
func_4198_call = mod.get_global_var('func_4198')
func_4202_call = mutated_mod.get_global_var('func_4202')
const_7871 = relay.const([[5.243511,1.931220,-0.052327,8.068970,1.900075,0.107892,0.471409,7.983511,3.035582,2.321448,4.039460,-9.518023,-2.166308,3.931043,6.700883,5.296148,-8.019647,-0.891353,-5.490137,-6.819934,8.766662,-4.060400,5.090419,4.876039,9.463874,-5.480529,8.208845,1.137767,9.787245,-6.136602,-9.284209,8.010646,-7.418478,8.018327,2.890524,6.146213,1.131126,-3.700080,3.930920,8.904426,-8.010024,7.024996,9.581233,-4.300948,3.613732,5.833699,-7.412258,9.764885,-5.753061,-9.858869,-3.424961,-8.131299,8.334518,7.178567,9.286724,-1.871233,-1.878819,6.305524,-1.729996,-6.213005,8.060408,7.166135,7.719771,-6.046340,7.608939,1.209042,-8.089572,4.906937,-7.008220,-8.147956,2.788345,-3.627690,2.407210,6.276380,2.502112,0.446846,-6.567276,-2.556043,0.121541,6.688183,5.341092,5.324900,1.767562,-3.071228,2.782535,7.813882,1.815909,-7.715931,6.076911,-3.546175,-2.162910,9.358199,-1.427796,-6.786338,2.186756,-6.684891,-9.335678,-1.659868,-5.810068,-0.422368,-0.025419,-7.480747,5.258285,-5.751313,8.309699,5.281139,-2.681266,-5.658865,-1.004436,5.978314,-4.152329,0.364416,7.539065,-7.564558,-0.105443,9.638349,-8.516294,-5.076980,-4.360827,9.051332,7.298979,8.298431,9.590260,-8.034359,-9.913079,0.397483,3.235731,-2.785440,9.653164,-3.023523,0.674153,-0.862951,7.389342,2.712034,3.373192,8.666869,5.322489,-6.357418,-9.782219,-0.533615,-5.375950,-0.322979,-1.995272,-2.632755,0.650265,6.515472,-2.766249,3.859562,-3.871216,-3.439413,8.327822,-5.153554,-5.852613,7.708255,3.542542,-9.479786,-2.959745,6.588568,2.996864,-4.186727,-6.429509,4.176388,3.304796,9.382744,0.821000,4.604518,2.034061,8.938419,-2.822881,5.005534,-7.115826,-1.822419,-9.392086,-8.805844,9.088875,-5.954574,-4.606196,7.812663,-7.141740,-2.466565,-7.881848,-2.440231,4.973698,4.545338,8.175724,-8.436427,-7.396856,-4.928129,-4.520560,-8.431090,1.100462,-3.701271,-7.703453,0.769233,-2.979867,-6.027598,6.455418,-1.448278,-5.810718,-5.815727,-6.999595,-5.643080,9.653030,3.878798,8.713858,-2.587538,1.824822,-4.041862,-1.456086,-6.932375,2.306349,6.629549,-4.366785,-0.658857,4.765528,-6.298432,0.700293,2.248433,4.738912,-1.417733,-6.090998,5.554964,3.049434,-8.472672,7.271683,-9.466501,5.338835,6.956261,-5.981040,6.809490,-7.796652,3.130736,-1.050324,4.480627,-5.945433,-3.707708,-2.309113,-9.002728,6.443509,0.220714,8.383884,-4.395422,8.282179,-0.564740,2.948170,9.340636,2.780846,5.996855,6.235645,2.746910,-6.468575,5.209455,2.160439,8.105263,-4.165160,6.393795,-6.889049,-3.805257,7.185430,8.668861,-0.872615,0.759844,-9.490014,7.798399,2.307257,8.170176,-7.975509,-4.098268,-6.507325,1.085161,-1.076598,-2.508664,-7.526821,-8.283623,-1.656016,-6.574848,-0.165824,-3.639018,-4.680489,7.564558,7.436912,2.899331,7.507707,4.157673,9.254977,-0.599169,-7.621031,4.333059,3.492099,-9.572079,7.046506,7.339191,-5.379616,-6.989979,5.337374,-1.776201,-1.820624,8.269418,9.676561,9.683884,7.269561,-4.633982,4.611213,-1.650705,2.631743,-5.671881,9.929120,9.018738,7.057239,-1.804457,5.237822,2.865528,-9.889956,5.527188,-5.535828,8.007082,-7.472846,2.026384,5.337456,-2.684550,-0.854068,3.715443,-4.197653,-8.964833,5.907980,1.624042,6.686277,-0.344643,2.103759,-1.853315,5.386435,8.006095,1.580939,4.372183,-7.385405,-4.457138,-6.002081,-1.179162,-4.198240,-7.506807,0.870196,-2.801350,9.830898,-9.752767,-1.614821,-6.757148,-9.783296,8.007649,-4.838144,-9.776074,-1.396419,4.872162,0.903930,-0.015541,-7.198635,2.999278,-7.385072,7.101348,-5.934486,-0.736347,-3.793991,-1.701294,-5.594010,-9.867470,-0.268932,0.113577,0.488886,8.725856,-1.885244,-6.904797,3.049854,-3.379386,0.408320,3.334317,3.669184,-7.959718,-6.638734,5.620671,-8.929279,4.032728,-9.374493,-9.077899,0.105848,-0.273023,2.655582,7.293644,-1.204871,-5.442999,8.031331,-4.066005,7.911498,-5.874286,1.223202,-9.370183,3.600349,7.057763,-1.615006,-6.811631,4.619628,4.131523,7.550542,9.961314,-0.860167,-3.771332,6.091549,-9.716939,6.700580,-4.216695,-8.080652,0.872777,-6.935643,-8.111767,-8.514553,1.589066,7.884179,-9.355139,9.141880,3.098643,9.571743,7.169690,-9.942201,2.232503,-1.103882,-5.858768,-5.965254,-6.590716,-8.031256,3.719532,5.953198,2.785980,0.843869,-1.924200,1.696743,-9.894467,2.867156,-5.661554,1.699855,3.570433,3.887031,7.068600,6.341698,3.194055,-5.331850,-3.522142,5.257960,-4.950669,9.931815,4.722451,-6.286354,7.342296,4.997352,3.536822,2.654271,-1.433928,4.329119,-1.444458,4.349368,-9.362596,-1.315278,-5.113511,-5.678462,-4.403490,0.258178,4.318704,2.716710,3.775799,-5.481688,-6.838377,0.800497,-5.406539,-9.001901,-2.743814,-6.841952,1.807336,2.693234,-9.368937,-2.411273,-5.734233,-4.393082,-6.869127,-4.720409,-4.875914,-1.838668,1.626317,9.220945,-9.582506,-1.681750,-4.498264,-5.927794,-4.237427,2.687565,5.695369,5.484532,6.392193,3.100122,-9.132961,1.855436,-4.717269,3.060767,6.357897,-9.926442,-1.363138,-6.994088,2.244560],[-4.316874,9.907956,7.839765,9.739434,-6.519180,-9.225461,-0.694354,1.688923,-7.509207,-0.749410,2.587743,-9.243270,0.686199,4.362392,4.170315,-6.652251,-7.990901,7.203474,9.647296,-3.590844,7.833292,7.748300,0.594965,8.780423,9.796394,2.326315,-6.032195,-3.352954,-8.905031,1.934530,-3.936337,9.648394,3.702699,-7.477197,-6.548647,-3.012766,-4.194802,3.802690,2.075002,4.417179,-7.929622,4.842582,-4.314006,5.255816,6.215742,3.450364,-5.133864,-6.327494,4.396009,-3.889525,-4.201505,-2.184254,2.116239,-5.734506,-8.561119,1.276340,9.625611,2.117518,-0.411778,-1.169602,-9.122354,0.222913,0.999672,-6.016958,6.876355,-3.545632,-0.580635,-9.341952,-4.434509,-1.138889,-3.509413,-7.316582,-9.583377,7.295927,-7.733911,0.515795,3.065584,4.273071,-7.905762,-0.004217,9.911100,0.470023,8.460559,8.448156,0.202308,-1.827327,3.343491,0.864548,0.384135,-5.905218,-7.552454,-1.637619,-6.043490,-3.905739,7.588623,-9.085812,1.302056,-2.513041,3.445926,5.116964,2.926435,-6.284948,-5.710066,7.209632,9.899965,4.896601,4.512727,7.116135,2.842948,-4.124320,-0.012652,2.098010,6.052996,-9.423037,7.064786,2.211371,-5.826847,4.705490,1.959011,-6.740640,-5.878881,-2.000567,4.098944,-4.702778,-4.405684,2.507538,1.726783,-1.511461,8.082772,-0.358371,-7.738518,0.792173,6.382482,5.500170,1.179460,3.703800,2.385547,9.606004,-9.241033,-1.872221,2.774393,6.523899,-6.633524,6.579660,4.830731,3.377557,3.928482,-3.862060,0.650611,7.352985,5.265272,3.397473,-4.416819,2.410421,-9.536260,5.546573,6.403065,-6.689886,3.759390,8.973721,5.362848,-4.571634,-7.128874,-8.406654,0.875656,-2.761701,-7.702170,0.966556,3.928201,5.136377,-0.932372,3.315763,-2.182380,-7.878237,1.467453,-6.526748,-5.321956,5.484740,9.728394,-1.818284,5.327140,5.443823,-7.187890,-2.872913,3.583253,5.120910,8.085186,6.008781,0.287925,5.138041,-5.911267,2.099033,-2.296401,4.359176,-2.235678,-4.016297,-0.135255,-9.219810,8.829098,-0.161445,-6.637163,-1.376089,-4.362249,7.537708,9.068836,-6.985474,-6.777280,-1.749226,-2.514304,-8.041643,-4.286999,-6.016602,-9.618163,2.617738,-7.972598,-1.274135,-6.821744,-9.662278,0.056728,-7.717331,-9.063418,-2.787727,-2.869557,1.923011,-6.075890,-7.376460,6.218653,1.242744,9.651636,9.191826,6.414975,-2.111225,-9.835637,-6.994490,7.354359,6.953489,-5.488454,-0.641205,-0.970066,9.482467,-2.480555,4.087202,2.509346,8.891383,-3.289871,-2.757173,0.378342,6.562336,8.789470,4.118893,-0.211796,-7.142920,-8.331225,3.153587,-2.253949,4.855492,-8.659796,-2.488739,8.343324,-6.760740,-3.492302,1.741184,-5.562856,-9.836018,2.168014,-3.154526,-2.401665,-0.244495,5.406329,6.651496,-5.665658,-1.781826,-5.125306,-8.714578,2.704352,5.456421,2.673110,5.459052,6.102987,9.053652,7.988670,-5.825744,-1.753372,-3.833116,-0.953476,-3.654194,-3.499293,-9.953549,1.844740,-8.188618,4.618734,2.457917,0.798218,-5.508818,-6.265633,1.905988,2.336502,2.031029,-9.744435,-9.916947,6.679491,7.027429,1.185736,-1.369140,8.281086,8.889543,-4.149482,1.029366,4.717440,-2.255331,-2.386515,8.512597,4.732934,2.130740,-8.225922,4.665292,-7.574932,9.133731,-2.168364,2.821096,3.353054,-5.596184,3.171010,1.971296,-6.902933,-5.670130,7.832915,-9.943361,-4.738346,-8.203270,4.207378,-5.655033,-2.359085,-9.648385,-5.581318,-2.676456,-0.167549,1.561654,4.505619,6.823678,9.479918,-9.436024,6.925430,3.058058,-5.019528,1.236277,0.357928,-4.388527,0.424492,-9.759391,-4.219782,2.606216,-1.234650,-3.377409,2.735121,5.055112,8.231251,5.275911,-9.053521,-1.918812,-8.458425,5.191841,4.488886,-6.484151,-6.169045,-7.478824,7.335708,9.218552,4.324693,8.923134,2.969623,5.811760,-7.608384,-4.208263,4.580039,-6.840732,-8.526522,-5.685528,3.329430,-3.532040,5.981009,-6.369210,7.249141,-7.686425,6.847305,8.242151,-0.684686,2.209261,-5.610150,-7.789564,-7.870422,8.128371,-2.192375,-2.522241,-3.825455,0.291578,-5.091278,8.431782,1.840191,-3.012845,8.559628,-4.700892,-7.536319,7.002319,3.821666,-5.456272,-8.432531,-7.606577,0.026378,-7.225619,5.570527,-4.176196,6.808381,4.573264,6.042310,9.638631,-3.642311,2.586648,0.478869,9.983896,-2.052824,-0.087984,6.503878,5.780554,2.189409,2.377672,2.796241,-9.194801,4.819518,8.335809,5.958654,7.916186,-5.822097,-9.888206,3.572213,-6.547672,-6.698221,-6.433710,8.775579,-7.019306,5.637598,-2.642184,8.435299,3.438096,-6.967115,-9.920319,0.624739,5.496836,-8.042845,6.233972,6.216206,9.275619,-7.439894,-6.118466,9.073670,6.476451,-3.181720,0.502950,-0.252304,-3.231584,1.142439,4.966058,-3.876886,7.387097,-8.340647,1.465401,-8.583922,9.232637,-8.430869,6.542909,3.497064,3.411150,-1.117271,1.766029,5.712387,6.853644,-7.875219,-8.765167,-6.861080,2.874359,-6.852013,-1.225066,8.802898,-8.159849,8.796652,8.036555,-4.287601,-6.250505,4.816762,6.393002,1.671780,-0.663131,4.175903,9.444005,-3.150303,0.176113,5.319605,8.320719,1.490629,-5.970538,5.591334,4.360756,-1.581409,-4.653336]], dtype = "float64")#candidate|7871|(2, 504)|const|float64
call_7870 = relay.TupleGetItem(func_4198_call(relay.reshape(const_7871.astype('float64'), [16, 7, 9]), relay.reshape(const_7871.astype('float64'), [16, 7, 9]), ), 0)
call_7872 = relay.TupleGetItem(func_4202_call(relay.reshape(const_7871.astype('float64'), [16, 7, 9]), relay.reshape(const_7871.astype('float64'), [16, 7, 9]), ), 0)
func_6100_call = mod.get_global_var('func_6100')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_7894 = relay.TupleGetItem(func_6100_call(), 0)
call_7895 = relay.TupleGetItem(func_6101_call(), 0)
func_7652_call = mod.get_global_var('func_7652')
func_7655_call = mutated_mod.get_global_var('func_7655')
const_7914 = relay.const([-4.728555,-7.599582,-0.975590,8.751668,2.239343,-1.298524,5.570652,2.473144,9.528249,-1.343509,0.096318,-7.604950,-8.680286,8.804932,-8.918594,5.766573,2.014233,-5.326718,-3.258085,2.605794,-0.360051,1.946674,-9.720199,-5.773677,8.589693,6.714482,-3.288947,3.802995,-7.861716,4.231943,5.137628,6.228710,-2.543993,-9.644672,4.585504,5.330284,9.918145,7.813188,7.930042,4.353543,3.318565,6.330297,-2.174260,-7.931432,6.171801,7.054386,-4.197298,4.657733,1.449507,6.821855,1.238776,-1.451337,2.811780,-9.295780,-4.937853,7.025916,-7.152158,9.733601,7.309118,7.053335,0.235569,8.955459,-4.681655,4.898271,5.995063,-4.908265,2.458750,5.756772,8.277057,0.568781,-6.103134,6.635239,-8.407648,9.274675,-0.437761,-2.960373,-9.433697,2.025427,7.804157,-9.858856,2.551810,3.836229,0.859774,8.434840,2.959201,-2.929058,-3.134757,-2.095194,4.842532,-2.537066,9.930127,6.332444,6.939602,-7.450616,4.197171,8.052979,2.070960,1.581652,2.089635,3.101848,-7.742432,-0.127951,8.123896,0.397968,5.514465,-1.995192,-8.922029,-6.501107,-6.027294,-1.746830,4.030957,-9.798965,6.026290,5.524234,3.518429,4.108648,6.949789,-4.698858,-1.985528,5.522201,5.872950,-7.302181,4.069663,0.113946,7.961803,-8.537979,0.775446,-3.467889,-4.159265,-6.188314,-1.069259,7.114633,3.132500,8.074126,8.137919,0.218311,-0.339069,0.687731,-6.468245,-4.480324,-0.191576,-5.301713,2.526042,-7.604358,7.652944,4.464850,-8.877038,7.527801,-4.668364,-0.442759,6.861344,5.428093,6.898709,3.147675,5.270760,-9.549682,-2.555690,-7.563553,9.526828,-9.821799,8.145531,-5.884135,-6.215467,5.679311,-6.932214,9.069056,-8.292218,-2.828428,3.398528,3.760492,2.619256,-7.059964,8.658863,2.880234,-8.367345,0.791402,-7.187182,1.942645,5.323771,3.712580,-5.779754,1.487361,7.957831,0.014865,4.796336,-4.158567,-3.463950,2.365503,3.510985,-8.512615,-3.220142,3.267403,2.231170,1.063666,1.876837,1.841077,4.998902,-3.664948,-5.482626,7.132354,9.329562,-6.980751,1.733712,5.809462,-5.995741,-8.254259,2.132023,4.082948,-5.715190,5.611278,-9.064746,-0.112561,3.251222,-9.519255,-8.293708,1.040593,4.516222,6.612590,1.462307,4.570730,-2.557151,-9.837780,0.110015,-9.706983,8.997227,-0.577487,-4.763272,1.483104,9.218719,0.384167,-4.697908,2.158194,-8.808750,-5.416653,7.328240,-1.426065,8.453062,2.143946,-7.215358,-0.073543,2.643937,7.637459,7.339169,1.406212,1.160796,-8.465988,-1.589870,0.240774,-6.205331,-0.893086,-8.064961,4.725616,-7.898681,-7.352779,2.736285,-6.283206,1.213673,-7.946774,-6.488077,-9.150471,0.047445,0.652497,-8.684403,-8.397849,-1.945867,1.216839,0.959508,-3.122115,1.656345,6.302895,-9.054171,-5.379038,4.334168,-3.472005,-0.539837,4.907805,-5.244128,1.106570,-1.651132,2.553220,0.958571,5.586587,-6.175658,-3.224581,-4.919131,-8.766343,8.500184,2.757934,5.192486,-2.547045,-1.275639,3.918358,2.871254,0.701041,4.156633,-4.317244,0.763479,0.574996,-2.144242,-8.714910,6.311807,7.821588,7.195005,-2.586574,-3.863531,-4.600178,-1.885317,9.211283,1.108914,5.336326,-1.587645,7.415243,0.274869,8.012972,-3.455433,3.197465,-5.837214,-3.016718,8.691337,-3.783872,9.810657,-3.219099,3.262543,5.590055,-1.243624,5.668074,9.382494,0.319216,5.083188,-0.911452,-8.164482,-4.202709,-2.956034,-5.043236,5.959757,4.936995,0.076921,-4.226643,-9.633194,3.723916,0.430290,8.354053,9.241609,0.525226,5.906538,-6.538126,3.462014,-5.323668,9.790774,4.155665,9.230333,-7.072610,-1.908239,8.221063,-8.687138,-8.890830,1.075174,-3.612093,-4.591298,-3.644040,6.076670,2.279121,9.313392,-5.349336,-8.980236,3.290450,2.817253,-6.889806,-5.899951,-7.635195,8.418098,-2.606144,-4.467941,2.206528,5.747771,-0.708449,1.588037,3.616382,2.843991,2.776141,-1.341745,8.619821,-3.969022,6.322435,-4.662835,-0.316520,-1.624317,-1.418022,9.319465,9.677728,6.146730,-7.245673,8.953649,2.499113,5.747616,-6.825868,0.312869,3.697853,-3.603165,5.860675,-7.687571,-2.972962,-1.192023,6.247569,-5.826062,-9.578381,-4.222530,-2.737070,4.837531,-1.789805,5.203441,-4.136235,9.533229,-7.253819,-3.651563,-9.869561,8.244241,-5.627389,5.958176,-1.143377,-2.213090,-6.604754,9.675692,7.791863,-4.791399,9.055857,-9.858820,6.430406,-7.209089,5.807621,3.200274,4.825177,-6.631910,-0.785718,-5.254258,-6.923723,-1.492831,7.689105,7.120694,-3.632426,7.943917,7.789566,5.986536,5.335404,1.728101,-4.942757,-9.862637,4.125118,6.242548,-3.613814,-2.888149,3.666403,1.707737,-7.964890,5.859275,8.544695,7.459143,-8.952936,1.465812,-9.994662,2.347621,5.805828,-7.644582,-4.336590,-5.997031,8.357921,7.162331,8.845180,-3.187798,-7.876167,-5.200799,-0.180479,-3.190372,-5.345909,-4.977673,-1.516985,-2.135413,1.067344,6.451995,-5.290619,-3.390428,-8.795705,-3.054560,4.735105,-3.559333,-4.351202,1.270627,-8.320558,-0.083290,9.663047,7.902545,-1.093979,0.383893,-4.191264,4.320736,-3.238386,5.838005,-3.503972,2.016247,-6.961251,8.295745,-5.620705,1.537957,-8.559397,-7.163448,-3.251195,-1.746676,3.772022,-5.237084,-2.044442,-3.431769,1.335602,4.780580,-0.776274,1.734372,-4.474498,4.855335,3.189549,1.065500,-1.031683,4.425405,5.921573,9.413988,9.429483,4.456721,-6.036602,8.630176,0.625305,4.411796,4.873831,-5.680979,0.273380,-2.837382,-1.566563,-4.019311,2.754327,1.976182,6.741142,6.195065,-5.256774,-6.905297,0.180661,-2.672485,7.919453,-7.352616,1.826187,-7.244246,-7.482951,4.152380,5.464083,-5.325763,-4.554447,6.536286,-1.104389,-0.303951,2.258033,2.829766,-4.722012,0.870133,4.436549,-8.959836,-6.250359,1.830735,-5.133116,2.678594,1.643894,-5.158549,4.357570,8.298474,0.292125,-2.780242,5.697352,2.013455,-9.891130,8.137420,-3.098847,-7.593538,-8.547354,0.378022,-0.631918,-9.355647,-2.133698,2.992885,2.671288,-4.904317,1.627756,3.408975,-7.988692,-0.253243,-7.665749,1.631243,-9.600237,2.185825,1.400991], dtype = "float32")#candidate|7914|(594,)|const|float32
call_7913 = relay.TupleGetItem(func_7652_call(relay.reshape(const_7914.astype('float32'), [594,])), 1)
call_7915 = relay.TupleGetItem(func_7655_call(relay.reshape(const_7914.astype('float32'), [594,])), 1)
output = relay.Tuple([call_7816,call_7819,call_7870,const_7871,call_7894,call_7913,const_7914,])
output2 = relay.Tuple([call_7817,call_7820,call_7872,const_7871,call_7895,call_7915,const_7914,])
func_7927 = relay.Function([], output)
mod['func_7927'] = func_7927
mod = relay.transform.InferType()(mod)
output = func_7927()
func_7928 = relay.Function([], output)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5413_call = mod.get_global_var('func_5413')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_7972 = relay.TupleGetItem(func_5413_call(), 2)
call_7973 = relay.TupleGetItem(func_5414_call(), 2)
func_7412_call = mod.get_global_var('func_7412')
func_7414_call = mutated_mod.get_global_var('func_7414')
call_7979 = relay.TupleGetItem(func_7412_call(), 1)
call_7980 = relay.TupleGetItem(func_7414_call(), 1)
var_8006 = relay.var("var_8006", dtype = "bool", shape = (16, 15, 4))#candidate|8006|(16, 15, 4)|var|bool
bop_8007 = relay.power(call_7972.astype('float32'), relay.reshape(var_8006.astype('float32'), relay.shape_of(call_7972))) # shape=(16, 15, 4)
bop_8010 = relay.power(call_7973.astype('float32'), relay.reshape(var_8006.astype('float32'), relay.shape_of(call_7973))) # shape=(16, 15, 4)
var_8018 = relay.var("var_8018", dtype = "float64", shape = (11, 5, 6))#candidate|8018|(11, 5, 6)|var|float64
bop_8019 = relay.subtract(call_7979.astype('float64'), var_8018.astype('float64')) # shape=(11, 5, 6)
bop_8022 = relay.subtract(call_7980.astype('float64'), var_8018.astype('float64')) # shape=(11, 5, 6)
func_5413_call = mod.get_global_var('func_5413')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_8025 = relay.TupleGetItem(func_5413_call(), 2)
call_8026 = relay.TupleGetItem(func_5414_call(), 2)
output = relay.Tuple([bop_8007,bop_8019,call_8025,])
output2 = relay.Tuple([bop_8010,bop_8022,call_8026,])
func_8052 = relay.Function([var_8006,var_8018,], output)
mod['func_8052'] = func_8052
mod = relay.transform.InferType()(mod)
mutated_mod['func_8052'] = func_8052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8052_call = mutated_mod.get_global_var('func_8052')
var_8054 = relay.var("var_8054", dtype = "bool", shape = (16, 15, 4))#candidate|8054|(16, 15, 4)|var|bool
var_8055 = relay.var("var_8055", dtype = "float64", shape = (11, 5, 6))#candidate|8055|(11, 5, 6)|var|float64
call_8053 = func_8052_call(var_8054,var_8055,)
output = call_8053
func_8056 = relay.Function([var_8054,var_8055,], output)
mutated_mod['func_8056'] = func_8056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5704_call = mod.get_global_var('func_5704')
func_5705_call = mutated_mod.get_global_var('func_5705')
call_8058 = func_5704_call()
call_8059 = func_5704_call()
var_8088 = relay.var("var_8088", dtype = "float64", shape = (6, 15, 4))#candidate|8088|(6, 15, 4)|var|float64
bop_8089 = relay.minimum(call_8058.astype('uint32'), var_8088.astype('uint32')) # shape=(6, 15, 4)
bop_8092 = relay.minimum(call_8059.astype('uint32'), var_8088.astype('uint32')) # shape=(6, 15, 4)
func_7412_call = mod.get_global_var('func_7412')
func_7414_call = mutated_mod.get_global_var('func_7414')
call_8110 = relay.TupleGetItem(func_7412_call(), 1)
call_8111 = relay.TupleGetItem(func_7414_call(), 1)
var_8113 = relay.var("var_8113", dtype = "float64", shape = (13, 15, 4))#candidate|8113|(13, 15, 4)|var|float64
bop_8114 = relay.divide(call_8058.astype('float32'), var_8113.astype('float32')) # shape=(13, 15, 4)
bop_8117 = relay.divide(call_8059.astype('float32'), var_8113.astype('float32')) # shape=(13, 15, 4)
func_7542_call = mod.get_global_var('func_7542')
func_7544_call = mutated_mod.get_global_var('func_7544')
call_8127 = relay.TupleGetItem(func_7542_call(), 3)
call_8128 = relay.TupleGetItem(func_7544_call(), 3)
const_8129 = relay.const([[[7.324867,-7.854368,-2.857164,-6.012416],[5.248220,-8.589699,-5.178069,-8.667723],[-3.916471,-6.024098,1.864535,9.831413],[-7.096963,3.995064,-2.487694,-9.104994],[5.349866,1.759651,2.807087,-2.342715],[-6.392658,2.443336,-0.722336,5.775810],[-7.506493,5.926805,0.524447,-1.156605],[0.990194,-2.380187,-9.675661,4.201555],[7.532227,5.676447,-5.754289,5.352492],[-7.370144,4.375297,-7.114708,-3.067413],[-4.356623,-4.576561,-8.682636,6.367657],[-9.792959,0.566628,8.575053,-5.142075],[-6.416026,0.540444,2.864254,7.572123],[7.687508,-4.165237,7.381740,7.829760],[-5.296691,8.596560,-2.656296,-4.664787]]], dtype = "float64")#candidate|8129|(1, 15, 4)|const|float64
bop_8130 = relay.floor_divide(call_8058.astype('float32'), relay.reshape(const_8129.astype('float32'), relay.shape_of(call_8058))) # shape=(1, 15, 4)
bop_8133 = relay.floor_divide(call_8059.astype('float32'), relay.reshape(const_8129.astype('float32'), relay.shape_of(call_8059))) # shape=(1, 15, 4)
output = relay.Tuple([bop_8089,call_8110,bop_8114,call_8127,bop_8130,])
output2 = relay.Tuple([bop_8092,call_8111,bop_8117,call_8128,bop_8133,])
func_8139 = relay.Function([var_8088,var_8113,], output)
mod['func_8139'] = func_8139
mod = relay.transform.InferType()(mod)
var_8140 = relay.var("var_8140", dtype = "float64", shape = (6, 15, 4))#candidate|8140|(6, 15, 4)|var|float64
var_8141 = relay.var("var_8141", dtype = "float64", shape = (13, 15, 4))#candidate|8141|(13, 15, 4)|var|float64
output = func_8139(var_8140,var_8141,)
func_8142 = relay.Function([var_8140,var_8141,], output)
mutated_mod['func_8142'] = func_8142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7371_call = mod.get_global_var('func_7371')
func_7373_call = mutated_mod.get_global_var('func_7373')
call_8195 = func_7371_call()
call_8196 = func_7371_call()
func_6462_call = mod.get_global_var('func_6462')
func_6464_call = mutated_mod.get_global_var('func_6464')
call_8198 = func_6462_call()
call_8199 = func_6462_call()
output = relay.Tuple([call_8195,call_8198,])
output2 = relay.Tuple([call_8196,call_8199,])
func_8204 = relay.Function([], output)
mod['func_8204'] = func_8204
mod = relay.transform.InferType()(mod)
output = func_8204()
func_8205 = relay.Function([], output)
mutated_mod['func_8205'] = func_8205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8204_call = mod.get_global_var('func_8204')
func_8205_call = mutated_mod.get_global_var('func_8205')
call_8212 = relay.TupleGetItem(func_8204_call(), 0)
call_8213 = relay.TupleGetItem(func_8205_call(), 0)
func_4198_call = mod.get_global_var('func_4198')
func_4202_call = mutated_mod.get_global_var('func_4202')
const_8215 = relay.const([-8.420640,-8.136649,0.419314,-9.130342,9.894991,4.719069,-3.706636,-5.966135,-7.704711,-4.180809,-9.058877,6.147554,9.599419,-1.036129,-2.748051,1.615411,-5.783487,7.689203,6.488581,-3.766879,9.505342,-8.312816,6.092425,-4.122479,3.598326,5.369721,3.018080,-5.250763,1.821446,4.221151,6.912730,-2.384977,0.385648,5.704753,7.601369,3.101783,0.750769,7.492986,-3.300294,3.828850,-1.828660,6.265727,7.481932,-7.507062,-9.435812,-0.972104,-1.486971,-3.204738,4.708159,1.796854,6.995034,5.744004,-7.708678,4.094428,-2.103404,-1.473699,2.843994,-7.184948,4.885210,1.210449,4.669581,-7.753880,-6.264633,5.914059,-9.136590,8.828830,7.967723,8.370370,9.734062,-9.516449,9.459320,-6.439165,-7.294672,0.532694,7.000279,-8.180506,0.131021,6.448454,6.423852,2.840013,0.814710,0.333843,8.585295,-3.656367,-8.874888,-9.437127,-7.963983,-9.174130,9.382470,-2.799824,0.135894,7.576871,0.750136,-4.173507,8.458230,6.532225,-0.246715,4.340363,3.801370,-1.246813,-3.123699,8.213363,7.074482,-9.689961,2.879241,-8.869257,9.314015,7.652479,-1.515441,1.165546,5.859448,-8.444772,6.856584,8.978682,9.154651,-2.876358,-6.525707,-8.701947,-9.877705,4.900819,-1.004455,-6.096749,2.465153,-6.647678,0.255982,-6.544397,-4.178768,0.082776,-3.847443,-0.985167,-2.027516,-5.221936,-7.379155,4.707619,6.335907,5.625711,-7.861216,7.380390,9.226733,6.551001,0.156731,-3.179015,-9.468269,7.840156,-5.708694,-8.351688,7.092283,-5.903885,-2.525381,-2.616968,-4.744860,0.416758,8.807965,-0.619433,-2.980566,7.410824,8.613665,-7.446886,5.615697,0.856067,7.121815,6.074015,-3.140236,0.548750,5.537349,-2.643184,5.803485,-8.949750,-1.949425,8.091218,-1.480682,-8.513223,-1.091954,6.979332,-9.896125,-4.665009,-0.344988,-8.693708,6.977116,9.179200,5.417412,-9.634573,9.315243,6.599753,7.144289,6.668357,-8.178716,-9.909829,-2.743149,-9.131111,-9.232504,-3.867809,-6.376766,8.398718,-7.255131,-1.669953,-4.044506,-3.006428,2.370659,6.938358,9.816935,-3.198416,-1.789651,-6.683017,-2.539237,7.141241,9.179623,-1.172322,8.065113,0.124415,-0.497921,6.101642,-5.099361,4.081486,-1.217043,3.637773,2.265090,7.327081,-6.951446,-1.161434,-9.449295,9.327896,8.849423,-3.423398,8.114584,1.915060,6.657392,-2.416842,-2.217015,-9.495882,-9.353551,-8.883819,0.469247,6.667176,-6.731249,2.061765,0.950933,-0.547975,-4.252359,2.819457,6.286901,0.719167,-1.332230,-6.680466,0.770235,4.831702,-3.470131,9.636332,9.338132,0.404991,-5.081770,-3.745039,4.438404,2.031906,9.697013,7.105528,7.113697,-2.064533,-3.890771,-7.470896,9.851199,3.213794,-8.433197,5.854090,5.201507,9.836562,3.445305,-2.298108,-4.834814,-5.960573,-2.688542,-5.711434,3.220199,1.091272,-1.746252,2.646171,1.960587,2.837311,-1.581626,2.820250,-7.508157,4.904818,2.652421,-5.026172,4.353076,1.604517,1.188092,0.070287,-0.908328,-9.449448,6.158881,-2.265911,1.512713,-4.394052,3.342493,3.024120,-8.040146,9.790385,-8.638313,4.214139,1.142477,-0.677608,0.263606,6.311897,-9.250031,-3.818706,6.109577,7.464943,-1.089299,-2.678001,9.912179,6.294573,6.207749,1.955534,1.588169,2.265649,-0.541607,9.580500,-8.968315,7.478037,-7.272056,-6.206140,1.468270,-1.536811,9.904192,6.056891,7.441913,-4.882806,4.548951,-0.988131,-0.196078,8.612056,8.073548,-9.715831,4.704380,1.659431,9.589797,-7.841356,5.317795,7.970997,7.802454,7.600637,8.263292,8.661026,-1.454997,9.868208,-6.909394,4.996768,6.331871,7.942452,5.956318,2.389315,-1.038687,0.887025,-1.039806,-7.208189,0.564186,-5.991252,6.509646,-0.556929,-6.845811,-5.053979,-1.335422,-8.442129,-9.938368,1.123148,-5.252377,-5.470063,-6.213213,-2.982810,-6.284826,-7.765751,7.454183,1.110058,8.998034,-3.198243,3.650487,-1.556189,-8.329619,-2.385827,-9.557003,-8.195162,-0.194558,0.548581,6.138400,6.537761,-2.568445,6.503607,9.112422,-5.868510,-8.627168,-0.970266,3.163939,-6.262073,0.367852,-1.786585,-8.080590,8.561962,-6.541907,3.395731,-7.006906,1.204322,-2.012335,-5.978372,0.699342,-3.590257,4.713843,-5.929817,6.938952,-7.884527,3.538424,-7.339886,-7.483473,-9.782934,-1.823758,-5.508009,-0.237664,5.519651,-8.188701,-5.663299,-0.297680,-5.853930,5.362141,6.778523,2.986948,-8.559281,-1.914145,-8.484834,-7.239225,3.877918,-7.147679,2.948699,-8.432381,7.390220,1.679865,-5.617182,1.807150,3.640412,2.820268,3.838966,3.577236,7.232303,1.915982,-0.847842,-6.499855,-3.204792,5.579410,-5.017473,1.296996,-6.214873,9.285799,-8.248709,9.598521,-5.552345,-9.495271,3.409217,1.021772,-4.908170,-4.731719,-8.397637,-7.990440,6.271246,-1.542104,6.626132,-1.126886,-0.905832,0.890836,-9.929213,8.005738,4.008999,-8.475802,9.706009,-4.333248,-1.798764,-3.109016,2.049858,-1.389580,-2.500780,-8.421379,-7.293103,9.215073,5.650723,4.093903,-9.341649,-9.679881,7.589609,-9.708528,-6.360309,-6.166884,-2.034724,7.681990,7.458837,-0.374334,-8.432820,-1.101987,7.173370,-9.954689,-7.659550,-8.957578,-4.994612,-1.865381,-5.890705,-1.703163,1.421627,3.115876,7.868218,-2.477843,-6.326434,-9.280093,6.772883,5.510388,-7.750167,6.819204,-6.362034,4.891516,-7.147925,-2.875325,8.270128,9.248718,2.860029,-1.374765,0.085739,6.858359,9.734598,7.783361,-5.848541,-6.932415,-8.107637,2.302533,0.017712,7.113710,5.636504,-9.314763,-5.966036,9.141963,6.652515,-6.907295,-0.360150,-5.843150,8.777656,8.217728,5.734263,-1.430798,8.725533,-6.663004,2.660969,4.744840,4.400699,3.005615,5.762172,6.814480,-9.240805,-7.999740,5.785913,-2.447463,-2.046119,4.795511,9.882129,5.045922,1.571156,-5.540427,0.661199,8.917682,1.190593,-7.929860,-6.426249,5.458748,0.485642,3.687771,0.671668,2.485082,9.793075,0.183846,-3.788943,-7.154933,-1.003504,-2.891884,-7.016460,-8.945964,-5.500004,-6.517933,-5.229091,3.823576,6.543670,-9.756097,1.493181,-3.286901,-0.235583,0.638055,-3.472223,1.607009,-2.026494,-7.855286,0.491216,8.982977,3.240101,-8.178403,4.137344,7.264970,0.662049,1.826155,8.643568,7.054975,6.494694,2.590713,-1.688044,-5.881361,-7.968961,6.561805,5.956791,-9.017442,5.030333,-3.669271,-6.819619,1.475617,-8.472383,-0.007579,3.957472,0.303787,2.179266,-9.560053,4.371356,-6.390877,-5.073730,-8.360179,-6.495553,-7.095543,2.662096,3.779801,3.992456,6.970460,3.148113,7.217888,-7.088230,-0.109684,2.425539,9.771073,1.132702,7.991418,-7.643990,-4.613490,-0.305110,-7.056316,1.786329,8.821066,-0.404690,-3.637672,5.103711,-2.081836,0.469667,8.823367,-3.004057,8.875021,-6.811935,7.511516,-0.244447,-5.120716,-7.450142,5.568244,-7.442663,-6.543705,6.669554,-2.381986,2.254846,-9.661628,3.926346,1.715987,4.160114,-3.343377,5.703371,-6.916670,8.497182,-8.569949,0.090786,4.212037,9.299164,-3.321152,5.477324,2.281466,-6.160548,6.681575,5.427017,5.445395,0.759233,-1.810615,3.297722,7.766532,5.679945,-2.934452,7.936121,-0.010648,-7.250182,6.956564,-4.652754,-9.772994,5.732651,-9.149257,-7.267213,3.257613,1.690481,9.734653,-0.609561,2.083240,-8.320076,-9.678917,-3.734726,-8.606284,4.822759,-0.328428,-4.781114,-4.826573,-2.265689,-0.050802,-6.857966,-9.047100,-5.887073,-8.221773,-6.719171,-4.543938,-2.606348,-5.253801,-7.854488,8.371015,2.549403,1.662701,-9.041480,5.820337,-9.593253,7.245622,9.606688,6.646571,5.174679,-8.230280,2.033105,3.536431,9.916787,-5.544687,-8.663150,1.749728,8.201847,-6.633471,4.462514,-4.349394,7.318511,-4.880263,-2.723286,-0.185859,-6.172656,4.183357,-8.481758,7.446351,7.915344,7.612846,6.508494,6.092250,9.581376,-9.449162,0.178172,-3.247885,-3.895153,5.442958,-2.605721,1.961230,-0.626379,0.669122,7.903681,-8.801028,-7.781240,-5.219386,-0.486973,8.448553,5.572536,-8.675968,-9.502320,-7.444135,-5.815169,5.205862,1.931630,7.379326,-3.788792,-2.502862,5.585562,-2.632971,-7.880380,5.135681,-0.060317,-4.547104,-6.139595,-6.283473,-1.158244,0.815392,-3.834861,6.539299,4.514447,1.889743,9.853965,0.882117,-1.041960,2.484054,2.652811,5.318198,3.927529,9.107014,7.914993,-3.033935,-5.689026,-1.865071,1.766312,2.330150,-5.047520,-6.307480,-3.869813,-0.149598,8.699692,-1.689515,-0.153991,-7.817827,2.254075,8.711950,0.753516,-3.155383,8.167143,-9.618344,6.556856,-4.356091,-5.888191,5.420916,-3.203790,6.854664,8.979114,-9.684011,6.709266,6.391803,6.545373,0.438982,3.539635,-6.661379,-9.176569,2.764713,-5.370514,9.562287,-2.070474,-6.367075,-5.834846,-4.419152,7.142908,9.265309,4.311214,0.719298,7.735268,5.650384,8.590260,-1.658208,-3.534896,0.533650,5.335498,2.685227,6.094553,-4.905834,4.994280,-7.518370,-8.581057,3.012166,-8.626048,-3.110331,-8.237598,-3.672019,3.623853,9.343788,-5.670846,6.795182,-8.378898,5.586019,-5.903193,3.796562,-2.059167,-4.052072,-3.511976,-4.068617,-5.245663,-0.933061,-6.172543,-6.198597,6.944673,1.361885,-7.723420,6.928312,5.852226,8.545267,1.729019,1.223150,-4.735769,-7.366339,-4.216633,7.863605,8.168270,6.516315,0.875468,0.256796,9.481492,-7.373953,9.291326,-5.390754,2.228278,-2.857462,0.180630,-8.254396,5.637191,-7.333219,-1.052104,7.529906,8.521441,4.426861,-6.814344,-6.975234,-5.231814,-5.800150,-8.728719,-8.111397,-7.485948,-5.520081,3.984943,5.016508,3.615789,-2.838113,1.082144,4.260443,-0.701841,6.617670,-7.810992,-8.379273,0.490575,-2.286790,-7.137565,6.174472,-6.453642,-4.301052,-9.659627,-3.013158,7.985985,3.419623,-4.200879,4.733068,-1.347183,-3.032882,-3.454811,1.022010,3.115871,-4.924996,-9.582873,-1.911016,0.043117,-1.157769,-7.684066,-1.639729,8.322211,-2.274509,-0.530988,-7.382664,4.321596,8.149475,-5.450249,1.048089,8.213895,6.796148,9.492148,-8.546000,-0.077767,-3.675118,9.809530,-8.094526,2.700841,8.658497,-6.701270,-0.164855,-1.200747,-8.587177,-2.132281,-9.559479,5.967325,3.032465,5.025431,2.302010,1.860762,-5.009048,-2.958552,4.102600,2.443902,-6.230982,6.807292,4.291887,-6.618166,-8.329701,9.564036,-0.564556,-9.384654,3.298114,9.363579,7.204011,8.348911,-9.176997,-8.574936,5.115210,-0.386484,1.678397,-6.169685,0.098749,-5.363056], dtype = "float64")#candidate|8215|(1008,)|const|float64
call_8214 = relay.TupleGetItem(func_4198_call(relay.reshape(const_8215.astype('float64'), [16, 7, 9]), relay.reshape(const_8215.astype('float64'), [16, 7, 9]), ), 0)
call_8216 = relay.TupleGetItem(func_4202_call(relay.reshape(const_8215.astype('float64'), [16, 7, 9]), relay.reshape(const_8215.astype('float64'), [16, 7, 9]), ), 0)
uop_8222 = relay.cos(call_8212.astype('float32')) # shape=(16, 15, 4)
uop_8224 = relay.cos(call_8213.astype('float32')) # shape=(16, 15, 4)
uop_8225 = relay.asin(uop_8222.astype('float64')) # shape=(16, 15, 4)
uop_8227 = relay.asin(uop_8224.astype('float64')) # shape=(16, 15, 4)
output = relay.Tuple([call_8214,const_8215,uop_8225,])
output2 = relay.Tuple([call_8216,const_8215,uop_8227,])
func_8230 = relay.Function([], output)
mod['func_8230'] = func_8230
mod = relay.transform.InferType()(mod)
mutated_mod['func_8230'] = func_8230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8230_call = mutated_mod.get_global_var('func_8230')
call_8231 = func_8230_call()
output = call_8231
func_8232 = relay.Function([], output)
mutated_mod['func_8232'] = func_8232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8239 = relay.var("var_8239", dtype = "float32", shape = (5, 9, 10))#candidate|8239|(5, 9, 10)|var|float32
uop_8240 = relay.erf(var_8239.astype('float32')) # shape=(5, 9, 10)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_8248 = relay.TupleGetItem(func_7093_call(), 1)
call_8249 = relay.TupleGetItem(func_7095_call(), 1)
uop_8286 = relay.asinh(call_8248.astype('float64')) # shape=(81,)
uop_8288 = relay.asinh(call_8249.astype('float64')) # shape=(81,)
output = relay.Tuple([uop_8240,uop_8286,])
output2 = relay.Tuple([uop_8240,uop_8288,])
func_8290 = relay.Function([var_8239,], output)
mod['func_8290'] = func_8290
mod = relay.transform.InferType()(mod)
var_8291 = relay.var("var_8291", dtype = "float32", shape = (5, 9, 10))#candidate|8291|(5, 9, 10)|var|float32
output = func_8290(var_8291)
func_8292 = relay.Function([var_8291], output)
mutated_mod['func_8292'] = func_8292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_8314 = relay.TupleGetItem(func_7331_call(), 0)
call_8315 = relay.TupleGetItem(func_7333_call(), 0)
uop_8330 = relay.sin(call_8314.astype('float64')) # shape=(16, 15, 4)
uop_8332 = relay.sin(call_8315.astype('float64')) # shape=(16, 15, 4)
output = relay.Tuple([uop_8330,])
output2 = relay.Tuple([uop_8332,])
func_8333 = relay.Function([], output)
mod['func_8333'] = func_8333
mod = relay.transform.InferType()(mod)
output = func_8333()
func_8334 = relay.Function([], output)
mutated_mod['func_8334'] = func_8334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mod.get_global_var('func_7542')
func_7544_call = mutated_mod.get_global_var('func_7544')
call_8354 = relay.TupleGetItem(func_7542_call(), 3)
call_8355 = relay.TupleGetItem(func_7544_call(), 3)
func_7740_call = mod.get_global_var('func_7740')
func_7741_call = mutated_mod.get_global_var('func_7741')
call_8357 = relay.TupleGetItem(func_7740_call(), 0)
call_8358 = relay.TupleGetItem(func_7741_call(), 0)
output = relay.Tuple([call_8354,call_8357,])
output2 = relay.Tuple([call_8355,call_8358,])
func_8384 = relay.Function([], output)
mod['func_8384'] = func_8384
mod = relay.transform.InferType()(mod)
output = func_8384()
func_8385 = relay.Function([], output)
mutated_mod['func_8385'] = func_8385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8454 = relay.var("var_8454", dtype = "float64", shape = (12, 1, 13))#candidate|8454|(12, 1, 13)|var|float64
uop_8455 = relay.erf(var_8454.astype('float64')) # shape=(12, 1, 13)
func_6354_call = mod.get_global_var('func_6354')
func_6355_call = mutated_mod.get_global_var('func_6355')
call_8468 = func_6354_call()
call_8469 = func_6354_call()
var_8474 = relay.var("var_8474", dtype = "float32", shape = (11, 2, 6))#candidate|8474|(11, 2, 6)|var|float32
bop_8475 = relay.bitwise_and(call_8468.astype('uint16'), var_8474.astype('uint16')) # shape=(11, 2, 6)
bop_8478 = relay.bitwise_and(call_8469.astype('uint16'), var_8474.astype('uint16')) # shape=(11, 2, 6)
func_6656_call = mod.get_global_var('func_6656')
func_6658_call = mutated_mod.get_global_var('func_6658')
var_8487 = relay.var("var_8487", dtype = "uint16", shape = (10, 30))#candidate|8487|(10, 30)|var|uint16
call_8486 = relay.TupleGetItem(func_6656_call(relay.reshape(var_8487.astype('uint16'), [300,])), 1)
call_8488 = relay.TupleGetItem(func_6658_call(relay.reshape(var_8487.astype('uint16'), [300,])), 1)
output = relay.Tuple([uop_8455,bop_8475,call_8486,var_8487,])
output2 = relay.Tuple([uop_8455,bop_8478,call_8488,var_8487,])
func_8491 = relay.Function([var_8454,var_8474,var_8487,], output)
mod['func_8491'] = func_8491
mod = relay.transform.InferType()(mod)
mutated_mod['func_8491'] = func_8491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8491_call = mutated_mod.get_global_var('func_8491')
var_8493 = relay.var("var_8493", dtype = "float64", shape = (12, 1, 13))#candidate|8493|(12, 1, 13)|var|float64
var_8494 = relay.var("var_8494", dtype = "float32", shape = (11, 2, 6))#candidate|8494|(11, 2, 6)|var|float32
var_8495 = relay.var("var_8495", dtype = "uint16", shape = (10, 30))#candidate|8495|(10, 30)|var|uint16
call_8492 = func_8491_call(var_8493,var_8494,var_8495,)
output = call_8492
func_8496 = relay.Function([var_8493,var_8494,var_8495,], output)
mutated_mod['func_8496'] = func_8496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_8529 = func_7045_call()
call_8530 = func_7045_call()
func_8139_call = mod.get_global_var('func_8139')
func_8142_call = mutated_mod.get_global_var('func_8142')
const_8543 = relay.const([9.387661,6.202839,-4.946254,-5.740398,-2.058337,7.967969,-4.192189,-1.249595,-8.376947,-9.338900,-6.547839,-1.161401,-6.390324,1.361049,0.545627,-8.342770,0.848941,-3.898065,-5.492305,-2.504473,5.077833,7.244530,-5.923067,-2.310866,-1.419649,-2.583854,-2.591748,9.750418,5.175082,-3.627783,5.252052,7.532692,-1.523923,-1.367251,-8.521230,-9.763957,-3.821801,7.977366,5.216401,9.510746,-6.789209,-3.221289,-7.789179,8.401724,1.406274,-0.436792,-0.384466,7.899700,5.957552,-5.342487,8.497787,3.467440,-9.042638,-0.719149,-4.026958,-7.294089,3.785112,5.019753,-1.444178,0.167173,-4.488670,1.164123,4.167559,-9.643764,-2.944359,-6.126663,0.195072,-3.438507,-9.935237,5.440716,-9.588377,-0.598568,2.011981,-0.322544,-7.130872,5.460777,6.306511,-3.638671,0.451887,-3.941631,3.562228,8.874557,-1.919598,-6.765898,-4.550282,-9.525025,6.355913,5.192105,-8.483767,5.923036,3.643881,-4.217032,9.163054,-0.524377,3.664398,-1.645110,1.590035,3.757252,2.952954,9.014678,1.683209,6.445196,-5.213878,3.323925,-5.392848,6.236973,0.375882,-2.450301,-2.575751,-2.438550,0.825289,-1.552457,-3.350657,6.661313,-1.373032,-9.233885,-1.431930,-8.566073,-7.916358,1.994407,-4.261448,-1.583904,-6.429873,-2.599379,0.958276,-2.182493,-1.896772,-6.489642,-6.299074,-2.387892,-7.835356,7.320926,-8.744348,3.335077,7.729250,3.546641,8.247395,-3.969340,4.862310,0.739128,1.230439,3.798872,-9.787013,-4.678863,2.229264,9.205799,3.765297,-3.852024,8.944246,-2.627950,0.561245,-3.965044,-9.369430,-9.100677,-6.538020,-5.369225,-3.646320,1.902651,4.995835,0.439955,-5.506601,-0.597138,5.237610,-5.890081,-4.235843,-8.227189,-2.118431,2.677307,6.180543,-2.165280,4.857800,6.838265,6.288709,-9.662431,-8.033296,8.037194,2.932961,0.487128,8.975109,8.933883,-3.585509,7.606897,-7.449640,6.478136,-2.554737,3.411806,7.111515,4.262282,9.538880,1.875723,-9.901810,5.667260,6.354776,-2.180318,-0.331974,-9.865472,1.965844,9.191440,-6.973945,9.202818,6.751080,-1.083728,8.494287,8.774901,-8.639197,7.135013,4.239230,-9.459301,9.187162,9.842645,-5.499746,-2.367687,7.560191,4.379977,1.808213,2.750211,-4.654870,3.338193,9.660979,-1.420045,4.351779,-3.565782,-8.781371,0.497030,-0.763784,2.742636,3.287615,-8.538291,-7.501775,-4.044258,1.762594,-4.829245,-9.528915,9.293719,-5.449490,4.251889,2.438917,-0.021410,-1.920665,4.367643,9.916654,1.675981,1.826778,4.030325,0.068273,4.077745,5.638143,-7.995784,6.473476,-0.521527,-9.006380,8.295729,4.647505,1.405399,-5.080941,-2.257492,-1.728036,-4.538529,-9.934661,4.416410,5.827188,-3.087268,-9.223047,-1.166664,-3.950671,4.188028,-4.094493,9.237277,-3.261714,8.035927,4.284729,-1.151233,8.569514,1.207095,8.149299,-6.099713,9.011027,6.902632,4.549539,0.040570,-1.285206,-7.750736,-6.684950,8.278068,3.024463,8.428631,-6.207739,-1.712427,-0.722398,1.204674,-2.599257,-1.620252,-0.412613,7.150432,-7.441979,-0.980409,3.007302,5.687105,-5.724736,-0.012152,-8.863607,-5.382310,-9.518318,-6.946124,7.267328,-4.862645,8.270887,5.350954,-8.202386,-7.322572,-0.341128,-8.171715,7.546833,5.245559,-8.560526,5.531974,6.481879,5.073802,-3.304054,-1.103097,-3.278929,2.792540,1.135169,5.304475,1.777927,-0.603172,-6.759043,3.482252,0.808883,2.237275,5.545927,-2.960741,8.827960,-3.388548,9.146798,8.986841,4.590514,-8.247942,7.360863,-3.183313,0.940494,-4.892946,1.462260,4.718775,-2.100663,-3.746243,-4.376877,-7.053003,0.371458,9.237968,6.691720,-1.535647,-3.893308,-4.215382,-5.374720,-8.753919,6.366317,-8.259915,7.311860,0.990551], dtype = "float64")#candidate|8543|(360,)|const|float64
var_8544 = relay.var("var_8544", dtype = "float64", shape = (780,))#candidate|8544|(780,)|var|float64
call_8542 = relay.TupleGetItem(func_8139_call(relay.reshape(const_8543.astype('float64'), [6, 15, 4]), relay.reshape(var_8544.astype('float64'), [13, 15, 4]), ), 1)
call_8545 = relay.TupleGetItem(func_8142_call(relay.reshape(const_8543.astype('float64'), [6, 15, 4]), relay.reshape(var_8544.astype('float64'), [13, 15, 4]), ), 1)
func_5295_call = mod.get_global_var('func_5295')
func_5297_call = mutated_mod.get_global_var('func_5297')
call_8556 = relay.TupleGetItem(func_5295_call(), 0)
call_8557 = relay.TupleGetItem(func_5297_call(), 0)
uop_8558 = relay.asin(call_8529.astype('float32')) # shape=(9, 1, 9)
uop_8560 = relay.asin(call_8530.astype('float32')) # shape=(9, 1, 9)
uop_8580 = relay.acosh(uop_8558.astype('float32')) # shape=(9, 1, 9)
uop_8582 = relay.acosh(uop_8560.astype('float32')) # shape=(9, 1, 9)
uop_8587 = relay.acos(uop_8580.astype('float64')) # shape=(9, 1, 9)
uop_8589 = relay.acos(uop_8582.astype('float64')) # shape=(9, 1, 9)
output = relay.Tuple([call_8542,const_8543,var_8544,call_8556,uop_8587,])
output2 = relay.Tuple([call_8545,const_8543,var_8544,call_8557,uop_8589,])
func_8591 = relay.Function([var_8544,], output)
mod['func_8591'] = func_8591
mod = relay.transform.InferType()(mod)
var_8592 = relay.var("var_8592", dtype = "float64", shape = (780,))#candidate|8592|(780,)|var|float64
output = func_8591(var_8592)
func_8593 = relay.Function([var_8592], output)
mutated_mod['func_8593'] = func_8593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6100_call = mod.get_global_var('func_6100')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_8624 = relay.TupleGetItem(func_6100_call(), 0)
call_8625 = relay.TupleGetItem(func_6101_call(), 0)
output = call_8624
output2 = call_8625
func_8631 = relay.Function([], output)
mod['func_8631'] = func_8631
mod = relay.transform.InferType()(mod)
output = func_8631()
func_8632 = relay.Function([], output)
mutated_mod['func_8632'] = func_8632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8631_call = mod.get_global_var('func_8631')
func_8632_call = mutated_mod.get_global_var('func_8632')
call_8633 = func_8631_call()
call_8634 = func_8631_call()
func_5413_call = mod.get_global_var('func_5413')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_8638 = relay.TupleGetItem(func_5413_call(), 1)
call_8639 = relay.TupleGetItem(func_5414_call(), 1)
uop_8647 = relay.tan(call_8633.astype('float64')) # shape=(11, 1, 6)
uop_8649 = relay.tan(call_8634.astype('float64')) # shape=(11, 1, 6)
uop_8660 = relay.rsqrt(uop_8647.astype('float32')) # shape=(11, 1, 6)
uop_8662 = relay.rsqrt(uop_8649.astype('float32')) # shape=(11, 1, 6)
func_7767_call = mod.get_global_var('func_7767')
func_7769_call = mutated_mod.get_global_var('func_7769')
call_8675 = func_7767_call()
call_8676 = func_7767_call()
uop_8680 = relay.asin(uop_8660.astype('float64')) # shape=(11, 1, 6)
uop_8682 = relay.asin(uop_8662.astype('float64')) # shape=(11, 1, 6)
output = relay.Tuple([call_8638,call_8675,uop_8680,])
output2 = relay.Tuple([call_8639,call_8676,uop_8682,])
func_8683 = relay.Function([], output)
mod['func_8683'] = func_8683
mod = relay.transform.InferType()(mod)
output = func_8683()
func_8684 = relay.Function([], output)
mutated_mod['func_8684'] = func_8684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_8748 = func_4964_call()
call_8749 = func_4964_call()
func_6730_call = mod.get_global_var('func_6730')
func_6732_call = mutated_mod.get_global_var('func_6732')
call_8780 = relay.TupleGetItem(func_6730_call(), 0)
call_8781 = relay.TupleGetItem(func_6732_call(), 0)
func_6748_call = mod.get_global_var('func_6748')
func_6750_call = mutated_mod.get_global_var('func_6750')
call_8794 = relay.TupleGetItem(func_6748_call(), 0)
call_8795 = relay.TupleGetItem(func_6750_call(), 0)
func_5099_call = mod.get_global_var('func_5099')
func_5101_call = mutated_mod.get_global_var('func_5101')
const_8798 = relay.const([[-1.090796,-6.576427],[0.875712,9.352505],[6.723688,4.433971],[7.183070,1.586321],[-7.034428,-2.178704],[-7.791004,1.568733],[-7.737952,8.087354],[-4.286438,-0.140493],[-1.255330,-2.235064],[-0.239523,-3.901743],[1.933904,9.716461],[4.109002,8.118603],[9.654302,-2.920173],[2.734414,8.657115],[-5.239968,-1.717661],[-7.521240,-5.528011],[2.397143,-5.124957],[-4.821951,5.894913],[-9.915671,-9.137512],[5.893271,3.463476],[2.023512,-4.009522],[-6.170508,7.743970],[-2.019019,3.743640],[-4.982734,-0.980625],[-1.110067,-2.355379],[3.167350,4.860761],[-4.948271,4.418481],[5.125823,4.310194],[6.606094,1.626611],[0.172070,-0.414799],[-0.464142,-5.977763],[5.911672,7.025877],[9.802670,-0.613108],[9.493445,-8.206908],[-0.165300,-2.035067],[0.148676,-8.061373],[3.383245,-5.994043],[-6.277879,1.228614],[-8.048713,-5.485126],[-7.939306,-7.850432],[9.198323,-7.191005],[-7.696078,-2.193862],[2.395638,-0.864540],[-8.938041,9.914238],[3.957013,6.152508],[-9.535630,-3.370722],[-2.897380,2.383873],[-6.096381,9.192959],[-5.054157,7.755435],[-6.537019,5.772866],[-1.239153,-6.682794],[8.964918,-4.482297],[5.941670,-0.214928],[-9.482405,3.329427],[4.106215,1.698788],[-3.265247,6.412860],[3.769368,2.771137],[8.714837,4.789186],[-9.366912,-9.356105],[1.235113,-2.072350],[-6.196654,-6.020487],[-3.046115,-3.445752],[-3.326626,4.338009],[-0.390955,-4.627743],[2.580853,9.173157],[-9.707881,-1.484774],[5.277716,-6.218012],[-3.311598,8.755990],[-5.793364,0.551960],[8.613651,-5.413176],[-5.113137,-9.495133],[5.742247,-4.201830],[-9.793329,9.466931],[-3.938197,-0.418200],[-0.868881,-1.559055],[4.859341,-0.204845],[5.252133,-8.399080],[5.329926,9.398781],[1.577063,-2.955459],[-8.440003,5.265593],[-6.904844,7.946570],[3.436084,-9.895903],[3.436991,-2.115250],[0.318252,-4.702067],[-9.249489,4.063979],[2.243081,1.101029],[7.808886,2.522503],[-7.059877,-0.292876],[3.074585,4.892886],[4.539053,1.290121],[-9.838217,-7.322970],[-3.478795,7.439737],[2.971610,-8.611008],[2.334447,5.950637],[7.093020,-9.248583],[-8.912501,-0.157190],[-0.575180,-1.006208],[-8.303631,-1.019573],[4.685351,-9.804453],[9.111098,-1.766534],[-1.560674,-9.600945],[4.210645,-9.528617],[-8.810234,-6.233305],[-6.636958,1.749359],[9.562430,-2.241055],[7.688220,-4.182847],[6.698831,-2.868352],[-3.136420,-1.905960],[5.849849,-7.654472],[-9.773945,9.263818],[4.388743,7.424327],[-9.021054,5.279810],[-0.816982,2.803745],[-0.980771,-6.874968],[-7.147046,4.954870],[-1.743205,-0.884908],[-0.037544,-8.350784],[4.274117,6.811414],[6.678298,-5.378037],[6.372309,5.944961],[-3.441303,3.936169],[5.693399,-8.725405],[-1.421984,-7.164537],[4.221188,-1.641629],[-1.179924,2.168852],[-7.496474,-1.940572],[7.912636,-8.550759],[-1.848084,6.018190],[-4.637138,-5.759233],[-2.694406,-8.420221],[-2.419828,4.682286],[6.465774,0.816671],[-1.119694,0.278837],[3.229231,0.579350],[0.319370,-4.820845],[6.041439,-0.150418],[-0.998857,2.479164],[4.783000,-2.650197],[4.149382,-8.136143],[9.108419,-7.007128],[-8.031469,3.511652],[8.205835,-4.467152],[-8.643674,7.639034],[-8.930529,0.969518],[-8.589518,-7.836929],[-2.228093,1.939156],[-9.723434,-1.676027],[4.273737,-9.174316],[5.645158,8.180779],[-3.108350,4.991253],[-2.469242,-5.025641],[-6.522971,-3.553162],[1.811716,-2.216482],[9.882338,9.847925],[7.012500,4.929808],[-6.554525,-9.664113],[4.457479,-3.052447],[-4.015641,-5.347097],[-8.666350,9.189358],[9.678111,7.470415],[-9.187132,-1.717160],[5.429948,-8.855073],[-6.445927,4.929240],[0.694133,-5.124202],[-3.683262,-9.744187],[-7.278112,8.651475],[9.704541,1.018602],[-8.741255,6.665464],[-8.343080,-1.532520],[2.689626,7.870970],[3.693255,-5.788956],[-7.014268,8.579920],[-9.817302,8.706856],[4.155911,6.616970],[-9.723631,2.447998],[-2.510754,0.112884],[-1.439683,-0.315182],[-2.350524,5.176992],[3.871054,-9.949455],[-5.173731,-7.892496],[3.374828,9.098451],[-9.194424,-6.120177],[4.883975,-3.319712],[-5.756584,5.608523],[9.363695,2.047852],[4.001012,6.252871],[-5.025350,-4.728097],[-3.775982,9.662227],[5.388626,-6.014817],[-2.001192,-9.850433],[-0.326317,0.601138],[-1.567803,5.267820],[-5.938325,-1.074489],[-8.603815,-4.490787],[5.966177,8.642896],[3.715312,-4.850555],[-2.066966,5.754705],[6.514771,-6.729616],[-1.333698,-0.018823],[-5.126416,-0.219946],[-2.419781,-4.555472],[4.721351,-2.690652],[-5.230790,-2.552248],[-7.452392,-2.737754],[9.763007,1.413286],[8.255677,-3.060335],[7.445804,-7.966598],[-6.170678,6.602086],[3.039577,1.381998],[-3.131363,-9.589285],[-7.610571,7.407646],[4.747080,8.158730],[6.400526,7.339415],[-5.501758,-7.330999],[-7.560101,-7.907814],[1.440364,-2.555354],[3.810616,1.106301],[2.730298,-6.724302],[-2.110566,-1.053306],[9.188457,-1.785581],[5.056482,3.290699],[8.587824,0.968038],[5.715816,4.542913],[1.428995,9.156392],[4.109959,8.732632],[-9.552485,-4.885827],[0.019627,-7.666667],[-3.367781,1.235645],[-9.922243,-3.400458],[-9.140025,-4.281012],[7.855998,-9.917895],[7.044700,8.526969],[1.257581,9.329113],[6.362518,-4.610583],[-0.365169,8.494875],[-6.379645,-1.281888],[-4.240499,-4.121779],[2.297893,-5.349720],[-3.211664,9.346453],[-4.087353,3.266015],[1.453734,-0.081941],[-0.387490,8.802153],[2.166373,-8.136027],[5.377214,8.828747],[8.020227,-2.698506],[-0.665217,7.548261],[-7.674597,-0.832768],[5.168428,-5.753092],[-0.731385,8.756765],[7.641899,6.688358],[-0.383768,-5.641569],[3.424261,9.609471],[-7.841911,0.034840],[-7.922473,8.669036],[7.410311,5.538748],[6.832069,-3.927712],[-9.456274,9.500609],[-1.710968,5.020017],[-1.974990,5.521456],[3.198916,-4.877139],[-3.253838,-9.726323],[-9.042173,9.876001],[3.685006,-0.571799],[-1.008733,-9.904044],[3.747255,0.352923],[-7.804521,-2.551220],[-0.104372,-2.918022],[-8.296249,7.236945],[-9.229235,8.100362],[-8.099430,8.637465],[3.577909,-4.102878],[-5.606414,7.257505],[-1.808707,5.379229],[0.105721,1.271255],[0.785110,3.083313],[-2.392259,4.971020],[-6.908008,4.470177],[0.887204,-1.582491],[1.038348,5.814504],[8.371468,3.450852],[3.330705,-4.072006],[-7.137814,-6.545871],[-0.248035,8.312347],[9.159132,7.705314],[0.531057,-4.230611],[1.072589,8.911129],[0.632614,-1.247781],[0.278452,8.498373],[0.231568,5.719843],[7.218719,7.806688],[9.098586,3.618421],[4.771207,-6.616927],[1.129901,-3.050951],[4.601054,9.001264],[-3.068440,1.874653],[6.650425,-3.693534],[5.731014,-4.687875],[7.821163,-3.359706],[-3.689024,9.107719],[-9.720054,-7.332856],[-5.953764,2.999630],[3.877544,1.024059],[-6.374096,5.686819],[8.656965,-4.590445],[-3.019762,1.329183],[1.440105,-5.186475],[0.242412,8.352111],[-0.228298,-7.360704],[-6.397168,-7.327215],[-5.988475,2.557319],[2.884081,0.318495],[-6.552479,4.337648],[-2.627333,1.950032],[-4.225383,-7.307597],[1.156472,8.174575],[1.661180,1.086875],[5.785449,4.463571],[2.875815,8.934962],[-5.183606,6.940313],[-9.567374,7.577353],[1.011805,-4.986170],[-9.766307,-5.045135],[9.833156,8.052523],[8.126083,-2.217910],[8.256122,-8.809227],[3.150769,8.389402],[-5.435958,-5.666942],[3.367076,-8.112182],[-7.566572,-7.536667],[6.181844,5.378624]], dtype = "float32")#candidate|8798|(330, 2)|const|float32
call_8797 = relay.TupleGetItem(func_5099_call(relay.reshape(const_8798.astype('float32'), [11, 10, 6])), 0)
call_8799 = relay.TupleGetItem(func_5101_call(relay.reshape(const_8798.astype('float32'), [11, 10, 6])), 0)
uop_8802 = relay.asinh(call_8797.astype('float64')) # shape=(11, 10, 6)
uop_8804 = relay.asinh(call_8799.astype('float64')) # shape=(11, 10, 6)
func_8683_call = mod.get_global_var('func_8683')
func_8684_call = mutated_mod.get_global_var('func_8684')
call_8813 = relay.TupleGetItem(func_8683_call(), 2)
call_8814 = relay.TupleGetItem(func_8684_call(), 2)
func_7221_call = mod.get_global_var('func_7221')
func_7223_call = mutated_mod.get_global_var('func_7223')
const_8820 = relay.const([-3.179403,2.315969,8.245735,5.512648,8.835515,7.267700,3.576205,2.372588,-5.624181,1.932353,7.653610,3.582164,1.199145,-0.897462,4.860174,-0.681345,2.807666,-6.059949,-9.108211,4.062343,2.780094,1.125979,-9.324851,-4.157720,3.353312,-5.134555,5.418615,-3.156021,2.525802,-5.415656,9.096939,-7.119530,-3.068389,5.658592,-8.580610,8.627621,9.952653,9.100756,4.668869,0.579306,9.401568,7.285191,0.120417,0.500646,5.778703,-0.367862,-8.515054,4.860746,4.687479,5.315878,9.894323,0.023510,3.173012,9.603977,-3.373221,-6.182498,-9.100722,-5.405511,2.441641,-4.184254,2.595519,4.061305,-8.973698,7.980911,-5.322514,4.021806,5.679666,-5.910078,1.023477,2.977670,-3.818567,6.242624,3.859380,6.135737,5.402008,0.950350,-3.693566,-7.264882,-9.818616,-3.938646,-8.509328,-0.122609,-8.102319,7.224127,-8.388420,8.444147,-9.861194,9.206428,-5.140078,-1.740573,3.600834,5.110946,2.057771,-0.399618,3.298544,-5.760448,-1.414442,2.449994,9.304579,6.789569,5.543392,6.899703,6.516079,9.438780,5.353038,-7.984429,-9.071338,-7.978381,5.722925,4.673701,5.793362,1.305600,-3.660429,-2.723597,1.247841,-7.433708,-5.435911,-1.639590,-9.392764,1.395625,2.904435,-5.141756,7.739544,1.064765,9.368430,9.634848,-3.519085,9.371593,2.396135,3.504990,9.220448,9.668748,1.940277,8.292209,-6.407937,3.281631,-8.660768,8.488226,-4.278370,4.996624,7.722258,-1.788134,8.926655,-5.920707,7.275475,9.916313,1.866042,-8.020292,-6.765389,8.856120,-3.810336,-7.020098,-7.328059,1.267764], dtype = "float32")#candidate|8820|(154,)|const|float32
call_8819 = relay.TupleGetItem(func_7221_call(relay.reshape(const_8820.astype('float32'), [154,])), 3)
call_8821 = relay.TupleGetItem(func_7223_call(relay.reshape(const_8820.astype('float32'), [154,])), 3)
func_6376_call = mod.get_global_var('func_6376')
func_6379_call = mutated_mod.get_global_var('func_6379')
const_8834 = relay.const([-10,5,3,8,-6,-8,1,-7,-10,-9,1,-5,1,10,-5,9,-4,-9,-4,6,9,4,1,-9,8,-10,-1,-10,8,-2,6,10,-8,9,-8,-4,1,7,1,-3,-3,-10], dtype = "uint8")#candidate|8834|(42,)|const|uint8
call_8833 = relay.TupleGetItem(func_6376_call(relay.reshape(const_8834.astype('uint8'), [42,])), 0)
call_8835 = relay.TupleGetItem(func_6379_call(relay.reshape(const_8834.astype('uint8'), [42,])), 0)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
const_8837 = relay.const([[-4.465443,1.585966,-8.798012],[-9.461738,2.889370,0.956157],[7.530896,-8.703569,4.471072],[-5.467489,5.357641,-7.679703],[5.197737,4.348190,-6.675897],[8.549703,0.602467,7.950950],[-3.641275,9.844706,7.762345],[2.161348,9.671556,-0.360689],[-7.794999,-8.931202,-9.500338],[-0.027996,-9.392310,9.101447],[-7.923679,-7.808645,6.526743],[-4.115035,3.700211,8.540513],[-8.682556,-8.476596,5.431303],[-8.865402,1.410541,0.538660],[0.592003,5.663859,9.263461],[8.713273,3.949165,7.104501],[4.283088,-6.212628,7.907315],[8.501242,7.288334,-9.057848],[-9.140482,-2.410533,8.218315],[7.348049,-1.094264,2.572854],[1.742363,6.468137,-1.097366],[5.727430,-3.773458,-2.431318],[-1.382514,4.385109,9.225242],[-3.765762,-9.354284,2.919045],[-2.438495,9.892200,7.069152],[3.303273,1.910442,-0.271275],[1.994418,7.438857,5.782264],[-1.751610,6.872426,0.876020],[0.390512,-2.587650,0.972819],[8.542886,-9.781220,-1.305062],[9.645913,-6.035749,-9.044204],[-9.885486,-1.833308,-8.782709],[-4.769741,7.214445,-4.755995],[-6.410039,-7.317389,-4.713959],[4.750717,-2.910794,-0.744137],[4.397558,-9.361649,-3.484941],[-9.448479,-7.210088,-0.982667],[0.203432,6.101575,-4.096063],[5.467939,1.900211,1.432195],[7.127325,-3.611395,-3.893913],[-1.443097,-8.729550,6.999986],[-4.495312,-1.382018,-8.093407],[1.513145,3.293395,5.245469],[-2.072116,-6.770783,-1.961715],[2.566060,-0.008344,8.015275],[-1.155486,3.393987,-8.602939],[3.275184,-8.546723,-8.293614],[-5.103383,-6.444639,-6.689150],[5.551504,4.290364,0.460011],[4.536987,0.856737,-7.954954],[-0.590673,9.166943,1.521000],[-0.709533,-0.054395,-8.615095],[-6.703699,-7.030487,-5.340582],[-3.979363,0.098997,-6.542834],[9.719239,-5.114645,3.466362],[-0.942792,0.852858,5.439712],[3.891901,-3.832051,2.491444],[-8.813247,6.580604,-9.705903],[-8.660617,-0.652119,-8.153855],[-3.145476,-3.780246,9.443757],[9.152327,-4.183007,9.790062],[4.168871,9.004186,-3.768025],[6.889307,-5.488474,1.602129],[-3.744915,7.243899,3.868282],[1.640686,-6.310276,-3.221993],[-3.208612,4.176817,0.558722],[-7.479023,7.688720,-1.649585],[-1.773208,1.726186,-0.340316],[-4.095088,-8.782577,7.615502],[0.165301,4.329921,9.259408],[5.410896,8.051114,-4.706525],[5.652125,2.493885,-9.435611],[-0.474372,7.533131,-2.079668],[-5.216478,7.109817,-6.931116],[7.510649,6.495702,9.434247],[-2.239706,-4.698614,5.350221],[-1.194159,-0.957365,-3.557209],[9.233578,7.823772,-2.694384],[9.652709,-4.359203,1.060354],[2.177764,2.353205,0.598406],[0.660245,9.891936,8.289764],[-8.820204,-3.817480,5.514734],[-3.244266,7.249960,-5.544389],[3.508555,4.341887,-0.389043],[-2.869021,7.265659,-5.495565],[9.081512,-7.493338,-9.703209],[1.590963,-9.860545,6.649637],[-9.312707,-1.181601,8.680810],[4.960070,-7.582112,6.928097],[7.539889,9.530259,8.774413],[8.797407,7.363999,5.392951],[5.600237,5.753411,-5.059170],[-4.024781,-4.454748,2.409026],[2.550796,-1.381039,3.195478],[-1.560027,3.306582,2.098920],[8.267217,5.030189,-8.075724],[-9.982825,-6.812966,0.715001],[-6.264988,6.043052,8.066003],[3.571849,-4.889066,-1.582955],[5.936973,-8.778724,-7.927387],[6.782443,9.488234,2.110425],[2.637853,7.224333,3.619762],[0.415327,-2.278548,-1.144253],[0.852267,-5.184610,8.986183],[2.907085,9.366749,7.718188],[4.434192,-3.784806,-6.588494],[-7.990615,1.503933,9.621319],[1.849335,9.365404,1.005229],[5.820516,4.264364,-3.516825],[-2.707838,6.273210,-8.080493],[-0.319637,9.496115,-7.599609],[-7.057095,1.067327,-4.759225],[-9.385174,4.849219,-3.519097],[7.108567,0.305272,7.667212],[0.335419,7.217529,-8.983640],[3.027317,2.630262,4.129324],[-9.922038,3.379832,6.240406],[-7.795415,0.256745,7.313450],[9.752661,8.074134,1.518771],[-0.150175,-1.343579,4.182701],[4.760329,7.408911,6.810348],[-3.713155,-6.384795,-2.249843],[-9.723621,2.647778,-4.682934],[3.201611,5.003442,9.493975],[9.358742,7.119909,3.592941],[-5.087529,-3.193475,-4.652472],[-4.564051,8.472547,-0.737956],[8.196627,4.970993,-0.086712],[0.706264,5.695171,-5.093550],[-8.296038,-6.867212,1.420118],[-8.943442,4.883160,-5.665978],[0.969574,-8.574537,2.042648],[-0.762906,7.021188,-9.556720],[1.583229,5.232256,-7.321482],[0.494127,-2.885318,8.403502],[-9.190060,3.474875,-5.573650],[3.359875,7.787548,-7.939479],[-8.941721,7.516579,-4.004160],[7.915115,1.577030,-5.716446],[-6.102812,-0.107847,-5.075739],[-7.314726,-2.703728,-3.300369],[8.344528,-4.707374,3.459492],[-2.863176,5.053503,-2.098873],[9.254882,1.345587,-1.992133],[-8.140474,-9.863038,2.386058],[-4.725749,9.797526,-6.818542],[2.439621,9.535989,-8.709754],[5.170185,-7.766647,-8.584507],[-9.139667,-0.762987,-3.369493],[-3.101266,7.081824,-2.567238],[7.187898,-7.204508,9.608415],[-0.369507,3.168479,-6.506280],[-3.133473,-4.216009,-8.164159],[0.911932,-5.177575,-7.052399],[6.834630,7.037285,6.537170],[1.999557,4.746182,0.699057],[-4.869700,9.170625,5.945660],[1.605722,4.364830,-3.119787],[-1.583535,2.909535,0.907598],[-3.713469,-1.379674,8.868159],[0.042054,-3.969872,6.008223],[9.063715,7.715331,9.651151],[-2.761004,-6.865042,-0.117929],[2.652975,3.893779,7.104174],[-9.931960,4.963583,9.302298],[5.550613,0.344013,9.633019],[9.283302,0.189627,-6.226572],[-9.895947,0.304059,-5.848516],[2.845470,0.488476,-8.582761],[-1.443703,-1.662477,9.128274],[-0.352146,-8.406717,-3.396954],[-8.153537,-3.082440,-4.371455],[-8.695544,6.673632,-9.284125],[1.282035,5.314620,-9.964377],[5.807038,-0.274392,-9.467229],[-3.083015,-9.080771,-0.212748],[-3.043800,4.685900,-1.212836],[7.848293,-4.473970,1.187174],[4.578861,-6.305498,0.789534],[-2.371485,4.010887,-0.800984],[9.970209,5.695441,2.284213],[-4.346856,-1.069107,-9.191494],[-6.249428,-1.295130,-9.125104],[5.472193,-0.950165,-9.507926],[-7.515426,3.385643,3.794320],[2.936790,-4.384466,4.164619],[-2.313349,9.848028,2.906445],[-2.198340,-5.683697,-7.760488],[-0.617980,-6.301223,1.521160],[-1.301692,1.375944,-4.760599],[4.531999,8.836257,-7.808085],[4.355800,6.462708,5.116198],[-6.438806,-4.003582,-7.908576],[2.695206,-4.074599,-3.094268],[-1.206596,8.971626,-1.510443],[-8.602406,6.473748,2.247194],[-1.541402,-2.127211,9.664981],[-0.784655,7.834939,-6.830309]], dtype = "float32")#candidate|8837|(198, 3)|const|float32
call_8836 = func_5870_call(relay.reshape(const_8837.astype('float32'), [11, 9, 6]))
call_8838 = func_5870_call(relay.reshape(const_8837.astype('float32'), [11, 9, 6]))
var_8841 = relay.var("var_8841", dtype = "float32", shape = (330, 2))#candidate|8841|(330, 2)|var|float32
bop_8842 = relay.divide(const_8798.astype('float64'), relay.reshape(var_8841.astype('float64'), relay.shape_of(const_8798))) # shape=(330, 2)
output = relay.Tuple([call_8748,call_8780,call_8794,uop_8802,call_8813,call_8819,const_8820,call_8833,const_8834,call_8836,const_8837,bop_8842,])
output2 = relay.Tuple([call_8749,call_8781,call_8795,uop_8804,call_8814,call_8821,const_8820,call_8835,const_8834,call_8838,const_8837,bop_8842,])
func_8847 = relay.Function([var_8841,], output)
mod['func_8847'] = func_8847
mod = relay.transform.InferType()(mod)
var_8848 = relay.var("var_8848", dtype = "float32", shape = (330, 2))#candidate|8848|(330, 2)|var|float32
output = func_8847(var_8848)
func_8849 = relay.Function([var_8848], output)
mutated_mod['func_8849'] = func_8849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8877 = relay.var("var_8877", dtype = "int16", shape = (16, 10, 10))#candidate|8877|(16, 10, 10)|var|int16
const_8878 = relay.const([[[-7,-8,6,-5,-2,-4,-6,9,1,5],[2,5,-1,-5,-4,-4,7,5,-7,4],[5,-6,-4,9,9,-1,-7,9,5,-8],[8,-9,-4,-8,5,4,3,9,3,1],[1,4,-2,5,-8,6,4,1,-10,-1],[-5,4,-5,3,2,-1,-10,10,-8,9],[5,2,-1,-7,3,5,-5,6,-4,7],[7,-9,-2,8,4,-8,1,8,4,-4],[-5,5,-7,-9,1,7,3,4,-4,7],[-2,-7,-6,6,2,7,8,-9,-4,-8]],[[-6,3,-10,7,3,-2,-9,-7,-5,3],[10,7,3,-3,-4,-1,5,-2,-5,10],[10,-1,2,4,-1,-5,8,-9,7,7],[4,-4,6,-5,-2,6,-9,-3,-7,10],[-5,-8,-6,5,2,5,-1,-6,-4,7],[8,-7,2,-9,6,-4,-4,-3,1,4],[-1,-1,7,-1,-8,6,-2,4,3,-5],[-3,-10,-3,-7,-3,10,-9,4,8,-8],[4,4,-9,1,2,-10,7,3,-5,6],[3,-9,7,-10,-1,-3,4,-2,-4,2]],[[-1,2,-4,-7,7,-6,9,5,-3,3],[5,10,1,-2,-6,-2,9,-4,9,6],[3,8,-9,8,-10,-5,-4,6,-6,-2],[-5,9,6,-8,5,3,-6,-1,-6,9],[9,4,-9,-3,-1,7,-7,9,-2,-10],[-3,-6,-6,5,6,-9,-8,-10,-5,3],[-6,-1,9,-10,-1,5,-5,-4,-7,-4],[-3,-8,6,-9,1,-7,2,-3,10,-1],[4,-4,6,2,4,-6,9,-9,2,-5],[2,9,10,7,5,-8,4,10,9,-5]],[[7,2,-5,-2,1,-7,9,-8,-8,-10],[3,-2,1,6,3,3,-3,8,5,3],[7,-10,-8,9,3,10,7,-2,-3,6],[-2,-6,3,-4,-3,-4,-9,-9,3,4],[7,-4,4,-3,-8,1,-10,-6,-10,-1],[7,3,10,-4,10,-10,10,1,2,10],[-5,-2,7,-7,-10,10,-4,5,7,-10],[5,-5,-6,8,-2,-9,-9,-1,-1,-5],[-9,-10,10,-10,5,5,9,-7,-8,-2],[3,-9,-4,-9,1,8,9,-2,5,7]],[[9,4,-3,3,-5,-4,-10,-1,3,1],[-3,3,-9,4,-6,-6,4,5,8,-1],[-4,-3,9,-1,3,-4,1,10,-2,-3],[-5,5,6,9,9,9,6,-10,-6,-7],[10,-5,1,-2,10,-3,-4,-6,-10,6],[-6,5,-9,-7,5,-3,-7,8,6,1],[7,2,-4,-2,3,6,-3,1,5,6],[-4,-6,9,-7,6,-10,-3,2,1,2],[2,-3,-8,-8,2,4,4,5,6,6],[-1,2,-1,1,-10,5,-2,10,1,-4]],[[3,9,10,1,-9,7,-5,3,-5,7],[-9,9,9,1,9,-4,-5,-2,-10,-10],[-1,-8,6,-4,8,-6,4,-8,7,4],[5,8,3,-5,-2,2,10,2,1,-6],[-5,-6,10,-3,-3,4,-5,8,-4,-2],[7,-10,4,-4,-5,-4,3,-1,-3,-1],[-1,4,7,5,8,8,3,-4,-1,2],[9,10,9,6,-6,-10,-3,-5,8,-4],[7,-2,1,7,-4,-1,8,-6,3,-9],[-10,5,3,4,10,-10,1,9,-1,5]],[[7,10,-5,2,-8,-8,2,-2,5,-8],[5,4,-3,-7,1,-2,7,-4,8,-2],[-1,-7,-6,-7,6,-6,5,-8,-2,5],[-8,-2,8,-1,3,3,6,6,8,10],[9,6,5,6,-8,1,-7,2,10,-10],[-9,-9,-2,6,6,-5,-2,-3,-6,4],[-10,-1,-7,-2,8,-10,-6,1,-1,9],[3,-4,-6,3,6,5,2,4,-9,-6],[10,-6,-2,4,4,-3,-9,5,6,5],[-3,9,-6,-5,-9,4,7,-6,8,4]],[[-7,-10,-8,10,-3,9,7,3,2,10],[1,3,-5,6,-10,5,1,-4,2,-4],[-2,1,10,-5,-4,-4,-1,2,7,-9],[-2,6,2,2,-5,7,7,7,3,-10],[4,-1,-2,-3,3,-5,6,6,-1,-4],[-5,2,-10,-1,-8,10,-8,9,4,-8],[3,9,5,9,-6,-2,3,-4,2,6],[10,-6,-6,6,-6,-6,10,-8,5,-2],[-10,3,-10,-8,4,-4,9,3,-4,7],[3,-7,-3,7,4,-10,-4,8,1,8]],[[-10,-2,-2,-8,1,-6,-1,9,-10,3],[-8,8,5,7,4,3,-8,6,-7,-6],[-10,-7,7,-6,-2,1,-3,3,-7,-5],[-4,6,1,-1,6,1,4,-6,3,8],[-4,-7,-1,4,9,-10,8,-6,-8,1],[8,10,9,-1,-10,10,-1,1,-7,10],[6,10,6,5,5,-9,-8,-3,7,-1],[-4,-2,-6,-6,2,9,-6,4,-7,7],[4,4,-7,1,2,2,1,-2,-9,-1],[4,8,1,1,8,-1,-4,-6,-2,4]],[[9,2,9,10,-2,-8,-3,6,6,-5],[5,-1,-10,9,-6,-8,10,8,3,9],[8,-6,4,8,-9,-6,-6,-3,-4,8],[9,8,5,-9,3,-8,5,-4,5,-9],[-5,-1,2,7,8,7,-1,-7,10,-7],[-3,-3,-8,-7,1,7,1,-6,4,10],[-1,9,1,-10,-1,-3,1,-5,7,2],[-6,-3,-9,-9,-4,-4,5,9,-1,-10],[-6,-9,10,-8,3,-6,-2,-7,10,5],[6,-1,5,8,10,10,-2,-7,-10,1]],[[6,6,6,9,1,2,-3,8,-6,6],[6,-4,-3,-1,7,-10,-9,10,-2,-3],[-5,10,-9,-8,7,-1,-9,1,5,7],[-4,-4,5,-8,5,10,6,9,-8,-10],[-2,8,-3,3,1,-1,-9,7,1,9],[-9,-5,8,-10,-3,-3,-9,-6,10,-4],[9,5,10,-10,-9,6,-1,-3,-7,7],[-5,-6,-1,-1,-10,-1,10,-7,-8,-1],[7,5,10,-6,2,8,-4,-4,-5,-8],[-7,5,5,-8,-8,-9,8,-4,-1,7]],[[6,1,-10,-8,7,1,5,3,-6,2],[-4,1,-5,2,7,-7,3,-4,-2,-9],[8,-7,3,-4,5,-5,7,10,-2,5],[-2,-4,-2,-9,3,-7,5,4,6,-9],[4,-9,-3,-4,-3,-6,-3,1,1,2],[-5,6,3,-2,-10,7,6,-6,6,3],[10,4,2,-1,-3,-8,1,2,4,2],[-4,7,-6,-8,4,10,1,-7,7,-5],[-10,1,-4,7,7,-1,8,-1,-10,7],[-10,-6,-10,3,1,-10,-2,-2,3,6]],[[1,-1,3,5,8,-9,-8,-9,-8,-6],[2,-9,6,-1,-5,9,4,4,1,-3],[9,7,-7,-6,9,-5,9,-3,7,5],[1,-7,5,2,-9,3,7,5,-4,-10],[-6,-4,-8,1,-1,9,-10,6,-6,-9],[5,4,4,7,-2,-1,-1,3,-1,7],[1,-3,4,8,10,-6,-1,-7,10,3],[1,2,10,-1,10,-3,8,3,7,-4],[9,2,-10,5,2,-6,5,-3,3,-7],[4,5,-8,-3,-10,-4,7,-10,-2,9]],[[-4,-7,2,3,-5,-2,2,2,8,7],[-2,-6,6,8,-3,-3,3,-6,-9,-2],[-1,5,2,3,3,-7,-10,4,10,-3],[-10,-10,6,7,6,2,-6,9,4,-9],[2,4,2,8,-1,-7,-7,3,4,9],[-1,-5,7,6,-6,10,2,1,-3,8],[-10,-6,-1,-2,-9,2,1,-9,-3,-2],[2,8,8,-10,8,5,-10,-7,-10,-5],[-10,-10,-6,1,-6,10,-5,-3,-10,3],[8,6,-9,-10,-3,-9,-2,4,-8,7]],[[10,-1,6,7,7,-3,-8,-5,-3,-9],[10,9,-4,1,-10,5,8,4,-10,-1],[10,1,5,6,-3,-4,2,-6,-8,8],[7,-5,-7,-10,-9,5,-5,7,4,-7],[10,-9,-7,-9,-4,-1,8,6,7,4],[7,7,-8,3,10,9,3,4,-5,-5],[8,9,-5,1,3,10,-7,-5,3,-6],[-7,-5,-7,2,-10,10,-2,3,-6,-9],[-2,-10,-8,-3,-2,-4,-6,-1,7,-2],[8,-6,2,10,-4,8,10,4,-4,10]],[[5,-7,4,1,-1,10,-8,-2,6,10],[-2,7,-8,-3,7,10,-7,5,5,5],[-1,-5,-1,-1,8,-10,-2,4,7,4],[-1,10,-1,9,10,-2,-9,10,-2,1],[-2,4,-8,-6,6,-3,-4,4,5,-3],[-9,6,10,2,-8,-5,3,-4,8,8],[-10,2,1,3,-1,-10,1,-10,3,6],[4,4,1,-10,8,6,6,-3,-5,-4],[-3,9,-2,7,-3,-9,-4,-8,-10,7],[-6,-7,-2,1,9,6,-10,7,5,1]]], dtype = "int16")#candidate|8878|(16, 10, 10)|const|int16
bop_8879 = relay.less(var_8877.astype('bool'), relay.reshape(const_8878.astype('bool'), relay.shape_of(var_8877))) # shape=(16, 10, 10)
func_7542_call = mod.get_global_var('func_7542')
func_7544_call = mutated_mod.get_global_var('func_7544')
call_8882 = relay.TupleGetItem(func_7542_call(), 1)
call_8883 = relay.TupleGetItem(func_7544_call(), 1)
output = relay.Tuple([bop_8879,call_8882,])
output2 = relay.Tuple([bop_8879,call_8883,])
func_8904 = relay.Function([var_8877,], output)
mod['func_8904'] = func_8904
mod = relay.transform.InferType()(mod)
var_8905 = relay.var("var_8905", dtype = "int16", shape = (16, 10, 10))#candidate|8905|(16, 10, 10)|var|int16
output = func_8904(var_8905)
func_8906 = relay.Function([var_8905], output)
mutated_mod['func_8906'] = func_8906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8917 = relay.var("var_8917", dtype = "float64", shape = (11, 9, 7))#candidate|8917|(11, 9, 7)|var|float64
uop_8918 = relay.asinh(var_8917.astype('float64')) # shape=(11, 9, 7)
output = uop_8918
output2 = uop_8918
func_8936 = relay.Function([var_8917,], output)
mod['func_8936'] = func_8936
mod = relay.transform.InferType()(mod)
var_8937 = relay.var("var_8937", dtype = "float64", shape = (11, 9, 7))#candidate|8937|(11, 9, 7)|var|float64
output = func_8936(var_8937)
func_8938 = relay.Function([var_8937], output)
mutated_mod['func_8938'] = func_8938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8204_call = mod.get_global_var('func_8204')
func_8205_call = mutated_mod.get_global_var('func_8205')
call_8984 = relay.TupleGetItem(func_8204_call(), 1)
call_8985 = relay.TupleGetItem(func_8205_call(), 1)
output = call_8984
output2 = call_8985
func_9022 = relay.Function([], output)
mod['func_9022'] = func_9022
mod = relay.transform.InferType()(mod)
output = func_9022()
func_9023 = relay.Function([], output)
mutated_mod['func_9023'] = func_9023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6730_call = mod.get_global_var('func_6730')
func_6732_call = mutated_mod.get_global_var('func_6732')
call_9026 = relay.TupleGetItem(func_6730_call(), 0)
call_9027 = relay.TupleGetItem(func_6732_call(), 0)
output = relay.Tuple([call_9026,])
output2 = relay.Tuple([call_9027,])
func_9036 = relay.Function([], output)
mod['func_9036'] = func_9036
mod = relay.transform.InferType()(mod)
output = func_9036()
func_9037 = relay.Function([], output)
mutated_mod['func_9037'] = func_9037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7371_call = mod.get_global_var('func_7371')
func_7373_call = mutated_mod.get_global_var('func_7373')
call_9052 = func_7371_call()
call_9053 = func_7371_call()
func_7652_call = mod.get_global_var('func_7652')
func_7655_call = mutated_mod.get_global_var('func_7655')
var_9070 = relay.var("var_9070", dtype = "float32", shape = (3, 198))#candidate|9070|(3, 198)|var|float32
call_9069 = relay.TupleGetItem(func_7652_call(relay.reshape(var_9070.astype('float32'), [594,])), 3)
call_9071 = relay.TupleGetItem(func_7655_call(relay.reshape(var_9070.astype('float32'), [594,])), 3)
var_9075 = relay.var("var_9075", dtype = "float32", shape = (3, 198))#candidate|9075|(3, 198)|var|float32
bop_9076 = relay.minimum(var_9070.astype('int64'), relay.reshape(var_9075.astype('int64'), relay.shape_of(var_9070))) # shape=(3, 198)
uop_9079 = relay.log2(var_9070.astype('float64')) # shape=(3, 198)
bop_9083 = relay.less(uop_9079.astype('bool'), relay.reshape(var_9075.astype('bool'), relay.shape_of(uop_9079))) # shape=(3, 198)
uop_9093 = relay.rsqrt(bop_9083.astype('float32')) # shape=(3, 198)
func_5347_call = mod.get_global_var('func_5347')
func_5351_call = mutated_mod.get_global_var('func_5351')
const_9096 = relay.const([0.338873,-8.874370,-1.864454,-1.475382,6.897969,-7.606495,2.735263,1.887700,-3.650521,1.274602,7.457968,8.577756,1.725311,-8.949024,-5.371313,-2.836399,-3.083850,3.562764,8.366635,-9.363363,9.357622,-9.542558,3.515545,-3.051461,9.836269,-7.839417,3.527527,0.088242,7.068531,9.752490,9.187483,-5.893743,-8.964231,-5.712895,3.978938,-3.640191,-4.310536,6.889619,-5.064831,2.101498,-0.559215,4.778104,-9.663294,-4.262363,-3.845673,0.114529,1.976627,3.000274,3.418377,-9.892710,-3.774939,0.724507,4.300098,-1.143327,-4.764386,-0.970735,8.007923,-7.020602,-2.452617,-3.210512,-3.533589,-2.443421,2.815869,-3.551389,0.214894,5.582470,5.042368,-9.379023,4.192988,3.985368,0.547532,-8.496315,9.067936,-3.035629,6.074853,-9.196143,-1.971064,-0.765860,-3.429850,-2.897046,0.025785,0.082059,-2.816794,3.894782,-0.042498,8.377351,-8.393787,5.211551,-9.560254,6.996688,-7.650112,0.170985,-7.559503,-2.982760,-7.316605,0.212304,-9.424218,0.461399,-6.370084,-1.812188,4.852065,-1.408991,-5.411540,8.650552,3.119202,-3.520360,-5.598547,-5.101430,3.322663,5.584662,5.481149,2.440189], dtype = "float64")#candidate|9096|(112,)|const|float64
const_9097 = relay.const(-4, dtype = "uint8")#candidate|9097|()|const|uint8
var_9098 = relay.var("var_9098", dtype = "uint8", shape = (42,))#candidate|9098|(42,)|var|uint8
call_9095 = relay.TupleGetItem(func_5347_call(relay.reshape(const_9096.astype('float64'), [14, 4, 2]), relay.reshape(const_9097.astype('uint8'), []), relay.reshape(var_9098.astype('uint8'), [42,]), ), 3)
call_9099 = relay.TupleGetItem(func_5351_call(relay.reshape(const_9096.astype('float64'), [14, 4, 2]), relay.reshape(const_9097.astype('uint8'), []), relay.reshape(var_9098.astype('uint8'), [42,]), ), 3)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_9100 = relay.TupleGetItem(func_7093_call(), 0)
call_9101 = relay.TupleGetItem(func_7095_call(), 0)
func_6172_call = mod.get_global_var('func_6172')
func_6179_call = mutated_mod.get_global_var('func_6179')
const_9103 = relay.const([7.528403,2.930169,7.609301,1.203986,7.435689,5.216551,8.855126,-9.040194,-4.145612,7.501056,5.950632,0.069603,-9.417017,-8.476803,-8.354885,-6.057077,3.588642,-8.807071,-7.279135,-4.644781,2.647192,-0.879787,-0.331908,-3.801383,5.617145,-0.053411,0.731777,-5.424566,9.763184,5.837830,7.595177,-5.995426,-5.336866,-4.705476,-7.962787,-4.639135,-4.055787,7.410417,2.306973,5.804942,9.172277,5.298545,9.983555,2.978143,2.726113,-2.223103,-2.854202,2.611134,-5.347263,-3.955640,-6.174860,-3.886984,6.477989,5.496549,8.535474,8.012349,4.565944,2.681592,-5.263319,0.990863,-4.473997,8.807640,-2.438315,9.271949,-9.996655,-7.725407,-7.054701,9.364247,-9.936421,-9.191420,0.114646,-8.445762,2.413671,4.633614,-6.889266,1.267925,0.480400,-0.931772,6.335526,-8.300556,5.384401,-6.280375,9.376238,6.042628,7.840865,-2.905043,2.508973,5.573862,-3.167638,0.520548,5.678268,4.820778,5.554917,5.781499,0.135900,-3.611660,-0.188856,-2.119893,-8.043778,4.151567,-6.628114,-8.935331,-3.448371,-6.499419,-6.279639,-1.194296,-3.769313,-6.665453,8.176865,-2.429945,7.993781,0.750683,2.664223,-2.163817,1.480378,4.989059,0.993376], dtype = "float32")#candidate|9103|(117,)|const|float32
const_9104 = relay.const([[-4.622982,0.893627,9.045122,-5.340083,0.877266,-3.299755,4.619306],[5.649867,0.504632,3.049843,-6.214708,-1.393580,-7.176971,4.744592],[-4.904580,4.556301,-5.899408,4.612487,4.384065,9.148532,-4.797427],[7.929048,9.881521,2.604827,7.821101,-4.778776,7.852903,-9.163288],[-9.559629,-4.372992,-1.705061,0.287817,-0.862767,5.113884,-6.142812],[1.656712,-0.124512,-1.400028,1.267130,9.754297,-3.085707,-7.713608],[-6.481720,-0.565460,-8.540911,2.854783,-3.633902,8.738494,-8.468468],[1.528548,2.625753,1.469846,0.813780,6.627010,5.458852,-5.955616],[-2.279298,0.342429,0.065416,-1.894551,-0.387564,-6.044769,-1.667689],[-1.780119,-7.415905,-6.226183,-8.605332,-7.319043,3.614976,-7.747331],[-2.011162,8.822387,9.842434,7.373239,-9.496198,-9.604441,-8.074617],[5.779564,-8.382403,5.679416,9.004031,-9.496241,3.061070,-2.958304],[-0.574963,6.245525,9.181981,-6.619446,6.581422,9.986945,0.469529],[-4.419503,-6.262889,-6.526729,2.808531,-0.307451,6.980334,-9.398393],[0.554026,-4.665552,5.165244,-2.714794,-7.277209,0.395488,-2.344363],[9.154613,-9.398928,2.071254,9.944397,6.998792,0.432053,-3.664682],[-5.654982,7.937038,3.106285,-5.573801,1.770347,0.016669,4.257461],[1.639066,3.128514,5.884702,1.426583,-2.393277,-5.297229,3.862805],[2.902312,1.952623,7.530317,3.318001,-5.772897,8.100576,-2.466308],[6.426636,-8.778093,-5.448979,6.022474,2.314833,-8.565295,8.087299],[-1.337836,5.518629,-6.495970,9.593915,1.775957,-8.963310,-3.505541],[-9.207032,-8.750016,-2.483932,-2.756186,-2.076744,-4.955721,-3.786865]], dtype = "float32")#candidate|9104|(22, 7)|const|float32
var_9105 = relay.var("var_9105", dtype = "float64", shape = (1680, 2))#candidate|9105|(1680, 2)|var|float64
var_9106 = relay.var("var_9106", dtype = "uint8", shape = (315,))#candidate|9106|(315,)|var|uint8
const_9107 = relay.const([3.645008,3.092288,-6.917631,1.594517,-2.035238,8.603010,8.829034,9.959513,6.556831,6.916245,-5.546131,2.932591,5.165535,-7.332852,1.131373,-2.493174,-1.585322,-8.410763,-1.651925,1.090266,-1.470528,7.501524,6.325751,7.770432,-0.894544,-5.029925,3.006718,-8.095934,5.941737,7.226625,-9.771887,0.309386,-4.420449,9.455235,3.526077,5.883171,-4.461691,1.606206,7.170717,-8.587096,6.179958,-5.454487,-9.931191,2.780438,-4.135377,-5.837493,2.107452,9.277735,-9.278183,-4.251100,4.764469,8.798754,-1.861912,7.773007,4.783952,-4.259822,-8.674717,-9.557177,6.193274,-0.548852,-4.976898,-7.279120,-2.643727,2.732218,-9.143572,-4.237228,-1.713077,9.682035,-5.355973,-4.079007,-9.069509,2.586251,-7.115836,7.250865,6.832186,6.962086,9.670318,2.307615,2.563839,-5.368870,-4.322250,6.615746,-8.539757,-6.644346,-9.177026,-0.451214,8.305548,3.220125,5.462604,7.929011,2.780148,8.060372,-2.300856,-7.906017,9.198281,1.083585,-4.644390,-5.364996,-0.374568,8.713798,-6.690806,8.700564,3.336246,4.907464,-3.833493,-1.190793,8.971788,-9.147987,-1.256069,8.486256,5.818202,-5.750921,9.651236,-1.916451,0.377393,-6.262714,0.471702,2.363305,3.104009,-0.127404,8.633335,5.838827,-6.350691,-0.074354,-5.516794,-7.216818,-8.352865,8.515991,-0.343651,4.726895,-6.659974,8.676774,-7.940036,-4.110764,0.261171,6.527716,9.171187,0.111039,-1.192123,9.132342,4.236700,-4.592939,-0.948402,9.031633,4.109748,-0.669950,1.932699,4.277987,-4.181282,8.517961,-2.310968,-6.443769,9.896017,3.938312,7.261865,-5.769989,2.610302,-7.831998,8.488646,-3.706733,4.198167,-1.634571,-3.466548,-3.150718,8.420606,-6.105131,-7.272581,-4.952132,-3.641936,5.093195,-2.140960,-0.631936,-0.309112,4.143714,-3.100365,-4.182229,-5.281453,-5.671447,-2.283932,6.502914,-8.145178,-5.134735,-2.301834,-0.879121,-4.398900,-6.894567,-9.544054,-9.399864,1.831523,-2.148943,1.851397,8.299431,2.104083,-6.756705,-9.098002,8.290345,3.359851,4.918291,-1.165701,-0.843906,2.858333,9.102905,9.984492,-4.073257,7.521999,6.388980,4.478847,-7.603888,-7.282934,9.698101,-8.512799,-9.116873,-5.209133,2.764744,5.413521,2.781479,-9.686681,-7.815429,3.511084,5.937617,2.078496,1.008575,1.490219,5.702385,3.679346,3.923890,-8.103447,3.817795,6.592965,0.877293,7.734120,-8.350268,-3.318856,3.670704,2.373307,-7.195653,7.742006,-1.821939,-1.361054,6.314867,-4.986860,4.466091,-7.843922,6.097505,-9.532661,-3.240954,9.127951,7.843218,-1.180810,7.294919,6.211455,-8.764581,-8.397392,-4.215366,8.987520,-1.587197,-4.257199,-3.740548,-7.007933,-0.381820,-4.374358,-4.461806,7.195440,7.241684,8.213748,-2.104239,6.429045,8.755382,2.284199,-0.317698,2.654893,-7.617783,-4.272485,-1.365124,-6.405032,0.758416,-2.628225,-6.310935,-7.991907,0.662272,7.108946,-5.245241,-5.775226,-2.569959,5.566789,-7.285032,6.673637,-2.550401,0.639879,-1.827537,-4.592291,1.321303,-2.520778,-9.239912,7.516127,-7.748210,5.871989,9.305679,-1.813204,0.579825,-8.954780,7.105109,-3.555991,-1.382132,-4.856130,1.400913,-2.795508,8.948157,9.243903,7.491882,9.004614,6.228171,9.117180,0.856268,-0.239087,1.472454,-5.587017,-2.673809,0.758303,1.322818,2.822390,-3.719263,2.962139,-1.821245,3.760552,2.684905,7.097936,-5.474937,-9.355459,3.802628,-0.095974,6.735169,4.421075,-3.747953,-3.474090,-9.808654,-3.870136,-8.508399,4.224290,-5.739582,-6.722589,5.380387,-6.105166,-7.683348,9.411090,8.211813,4.252568,5.299375,-7.042046,5.038204,2.077647,5.077132,-0.534462,8.229558,-3.893438,-6.173158,6.307972,5.850590,4.597124,-9.378273,9.830402,3.294454,4.613065,8.035194,-0.462829,-3.287092,-5.654146,4.803877,1.823638,-9.333069,9.321231,0.590155,7.704436,-1.927804,-7.033748,5.618674,1.487344,-6.248365,2.207559,-6.522424,-1.525681,4.590032,-5.196699,6.289010,5.234345,-1.846945,5.316212,-4.193335,-7.539951,2.994189,8.435682,-6.812573,6.130585,0.434089,-5.143983,-6.629729,1.394063,2.117381,7.830599,0.324173,2.050163,4.946299,5.138383,2.178319,-5.636728,6.680532,4.387129,-6.214858,-3.092429,-2.457718,-8.823066,-8.716045,-8.789139,6.161253,-6.833451,3.077771,-1.661968,-9.137827,-9.795969,7.677821], dtype = "float64")#candidate|9107|(420,)|const|float64
call_9102 = relay.TupleGetItem(func_6172_call(relay.reshape(const_9103.astype('float32'), [3, 3, 13]), relay.reshape(const_9103.astype('float32'), [3, 3, 13]), relay.reshape(const_9104.astype('float32'), [154,]), relay.reshape(var_9105.astype('float64'), [3360,]), relay.reshape(var_9106.astype('uint8'), [315,]), relay.reshape(const_9107.astype('float64'), [210, 2]), ), 5)
call_9108 = relay.TupleGetItem(func_6179_call(relay.reshape(const_9103.astype('float32'), [3, 3, 13]), relay.reshape(const_9103.astype('float32'), [3, 3, 13]), relay.reshape(const_9104.astype('float32'), [154,]), relay.reshape(var_9105.astype('float64'), [3360,]), relay.reshape(var_9106.astype('uint8'), [315,]), relay.reshape(const_9107.astype('float64'), [210, 2]), ), 5)
output = relay.Tuple([call_9052,call_9069,bop_9076,uop_9093,call_9095,const_9096,const_9097,var_9098,call_9100,call_9102,const_9103,const_9104,var_9105,var_9106,const_9107,])
output2 = relay.Tuple([call_9053,call_9071,bop_9076,uop_9093,call_9099,const_9096,const_9097,var_9098,call_9101,call_9108,const_9103,const_9104,var_9105,var_9106,const_9107,])
func_9113 = relay.Function([var_9070,var_9075,var_9098,var_9105,var_9106,], output)
mod['func_9113'] = func_9113
mod = relay.transform.InferType()(mod)
mutated_mod['func_9113'] = func_9113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9113_call = mutated_mod.get_global_var('func_9113')
var_9115 = relay.var("var_9115", dtype = "float32", shape = (3, 198))#candidate|9115|(3, 198)|var|float32
var_9116 = relay.var("var_9116", dtype = "float32", shape = (3, 198))#candidate|9116|(3, 198)|var|float32
var_9117 = relay.var("var_9117", dtype = "uint8", shape = (42,))#candidate|9117|(42,)|var|uint8
var_9118 = relay.var("var_9118", dtype = "float64", shape = (1680, 2))#candidate|9118|(1680, 2)|var|float64
var_9119 = relay.var("var_9119", dtype = "uint8", shape = (315,))#candidate|9119|(315,)|var|uint8
call_9114 = func_9113_call(var_9115,var_9116,var_9117,var_9118,var_9119,)
output = call_9114
func_9120 = relay.Function([var_9115,var_9116,var_9117,var_9118,var_9119,], output)
mutated_mod['func_9120'] = func_9120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7767_call = mod.get_global_var('func_7767')
func_7769_call = mutated_mod.get_global_var('func_7769')
call_9171 = func_7767_call()
call_9172 = func_7767_call()
func_6748_call = mod.get_global_var('func_6748')
func_6750_call = mutated_mod.get_global_var('func_6750')
call_9191 = relay.TupleGetItem(func_6748_call(), 0)
call_9192 = relay.TupleGetItem(func_6750_call(), 0)
output = relay.Tuple([call_9171,call_9191,])
output2 = relay.Tuple([call_9172,call_9192,])
func_9194 = relay.Function([], output)
mod['func_9194'] = func_9194
mod = relay.transform.InferType()(mod)
mutated_mod['func_9194'] = func_9194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9194_call = mutated_mod.get_global_var('func_9194')
call_9195 = func_9194_call()
output = call_9195
func_9196 = relay.Function([], output)
mutated_mod['func_9196'] = func_9196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_9205 = relay.TupleGetItem(func_4899_call(), 0)
call_9206 = relay.TupleGetItem(func_4900_call(), 0)
func_6172_call = mod.get_global_var('func_6172')
func_6179_call = mutated_mod.get_global_var('func_6179')
var_9212 = relay.var("var_9212", dtype = "float32", shape = (117, 1))#candidate|9212|(117, 1)|var|float32
var_9213 = relay.var("var_9213", dtype = "float32", shape = (154, 1))#candidate|9213|(154, 1)|var|float32
var_9214 = relay.var("var_9214", dtype = "float64", shape = (3360,))#candidate|9214|(3360,)|var|float64
const_9215 = relay.const([-9,-7,-10,-8,6,5,3,-5,2,-10,-8,1,9,-7,10,-2,6,1,-10,10,-8,-9,8,10,3,6,10,-7,1,-3,3,-9,5,-4,-8,-10,1,9,-3,-1,1,-8,-7,2,-1,6,-10,-3,-6,9,3,-10,9,6,-8,-8,8,-2,3,10,10,-7,4,5,-7,2,6,-4,9,6,-1,-6,2,-2,3,8,2,4,-3,4,3,-2,7,-3,8,-6,6,7,-2,-3,-3,-8,6,10,1,1,-1,-5,9,-7,-9,-7,4,5,3,1,-10,-2,1,8,-8,-5,4,-9,8,-1,10,-4,-9,2,-10,7,-2,-6,3,-4,-5,-1,-9,-1,8,-3,-9,3,-7,-10,-8,7,-8,-6,9,1,8,-2,-4,-3,-4,-1,3,-10,8,7,9,-9,-9,7,4,-1,-9,9,-7,-6,-1,5,-10,6,7,6,-7,2,-2,3,6,-6,8,-8,10,-9,10,4,-1,8,4,-3,-2,9,3,-8,8,3,1,-3,7,3,6,-5,-10,4,-10,-6,-1,4,9,-4,-8,-2,-10,4,-9,-3,6,1,-3,-9,3,5,4,-7,-5,-9,9,6,10,-7,6,-3,9,8,8,-5,5,-4,-1,-2,-3,-1,-6,-2,-6,-3,-8,-5,-10,-9,2,-1,5,-8,8,5,4,-4,1,-5,6,9,6,-10,-1,-7,4,2,3,8,-1,-3,-8,-3,6,8,-8,5,-3,2,-6,6,5,9,-7,9,9,1,2,6,4,9,1,7,1,-7,-8,-8,9,3,4,4,-6,9,-10,8,-7,7,-3,1,4,4,10,-7,9,7,-1,-5,7,-7,-8], dtype = "uint8")#candidate|9215|(315,)|const|uint8
const_9216 = relay.const([[0.406841,-7.278925,7.906398,-6.310451,-5.384613,6.898567,6.370597,-3.989464,-1.099679,-1.500048,-0.268439,5.712326,-6.518270,6.796106,2.944418,-2.708536,2.848164,8.069591,-9.065538,-5.747387,7.308536,-1.104955,-7.619514,3.465469,-0.831081,-9.139354,1.564044,4.928807,-5.379089,-4.532691,1.933105,-5.508125,-7.572353,-5.603266,-7.247960,7.960856,-9.591435,-4.440182,8.728907,-1.881265,8.162335,-8.510976,-9.931159,-1.291026,-5.499235,-9.085735,6.501642,6.875696,7.406510,3.807602,-8.935621,4.656262,-0.449531,-2.872561,-5.744838,9.069489,4.175487,-4.380941,5.969687,-6.914240,5.971974,4.678018,8.583217,-4.748832,-4.268451,-0.986986,9.533938,-8.185190,-7.574225,3.004402,6.133910,-7.583774,-9.505506,-9.643092,-5.257048,5.238289,6.280888,-3.844254,7.984427,3.176231,-6.354801,6.945442,-6.147174,7.147287,-9.341134,0.501830,2.075159,-2.253541,-2.765328,9.107756,9.325757,-0.040763,-5.761822,5.778583,-9.920481,0.163734,7.665937,-9.840356,-7.398519,-8.440680,-8.057422,-6.617899,1.330723,7.631070,9.171847,-7.435222,8.913862,-1.599346,-5.527005,-2.005582,-8.513313,6.803564,-8.393181,1.020672,-0.374481,5.441150,8.260664,-0.091050,-8.131209,-6.972125,7.566070,-4.673016,-4.366790,-4.701594,-2.079310,9.485217,-6.397390,-5.603036,-5.885137,-6.344684,8.880736,3.783757,9.915686,-3.374931,0.020487,-1.073042,1.560941,1.812535,5.124081,-4.449762,-9.915557,-8.866850,8.449363,3.571159,0.706737,-5.332440,9.484858,6.795418,6.344487,-7.379660,8.090185,8.268909,7.364895,-7.277800,-1.827792,2.919848,-1.524371,-2.113255,-5.689325,8.424057,7.571461,0.607093,2.876440,4.929492,-5.939176,9.154692,-4.860840,-6.914992,7.147141,-9.637192,-9.730825,6.456894,-2.423056,-3.851084,4.178843,-7.837568,3.514395,-0.356922,-3.650347,0.845537,3.919258,-7.327137,-2.338298,-7.068439,4.984056,3.710313,-1.769947,-6.270204,-9.479509,6.316725,-8.249497,-7.429592,0.014673,-0.121608,4.532097,-0.278172,-4.247554,-0.226373,-9.321538,8.010766,-3.854606,0.431957,4.143403,5.669738,-0.561933,9.775721,-7.430584,-0.581804,-8.453861,2.140350,-1.059437,3.859054,2.560811,9.199780,-2.866237,9.928177,-3.012319,8.826155,9.329887,3.957816,3.282629,-9.364967,3.201687,-8.496794,-8.811654,0.964440,2.003709,8.716933,-4.521967,-0.200978,3.897168,1.789478,-5.687610,8.518691,8.732901,8.282245,-8.906062,-7.458819,-7.881437,3.300126,3.084075,-4.063508,5.332774,9.222300,-8.578147,-9.030780,4.406223,7.274539,-6.763078,9.031047,-5.292244,6.231230,3.332975,-8.161441,-4.423487,-7.531743,-2.797878,-2.027583,-5.793789,3.098638,-7.526021,4.328707,-2.579525,7.546127,0.854218,-8.044180,-5.836767,-0.602930,-1.548142,2.757459,7.195480,-1.270756,-2.545625,7.034281,-0.021178,-6.032010,6.433844,-9.848509,-8.783523,-4.121161,9.388023,9.799068,-2.740155,2.611884,-7.919480,4.309901,-8.588095,6.604115,8.938776,5.329627,-7.199478,-6.333488,4.719716,4.273455,-4.742469,-0.049177,-5.269125,0.480942,8.240632,7.840096,-3.923568,5.205999,-3.670415,5.689047,-5.370036,7.197341,-0.190278,-4.908926,2.487865,-2.821797,5.950030,2.614633,-9.062281,0.861626,3.686201,-2.306603,5.380622,-6.099058,-3.095022,5.360936,-1.350550,0.931382,-1.940752,9.652836,6.306807,-7.412783,-3.526259,5.917675,-0.152759,-1.540873,7.610541,7.013080,2.017124,7.798470,-3.985928,-5.647915,1.678142,8.194657,4.432532,9.336207,-1.149309,2.358796,2.596246,-0.661527,3.578663,8.214125,0.056670,-3.102004,-4.038160,-3.600067,-4.466611,-5.654092,4.526162,-8.948644,-7.887552,4.800021,0.558104,6.323192,9.021314,-5.628023,-2.158294,-6.990664,8.006914,-1.585983,-7.062533,-6.152585,6.677899,-7.514505,-2.879474,8.043582,9.197857,-7.581165,-6.602511,2.633722,7.925999,-5.646646,-6.771568,7.792270,5.746927,6.431105,-1.557784,0.815453,-8.082303,-4.619063,-8.665592,6.255071,7.091543,-0.741020,9.148885,5.666287,8.088578,4.362182,-5.504673,0.241962,-5.475286,3.918419,-0.048766,2.145609,8.154334,-0.270132,7.392001,5.576916,6.151179,-0.095210,0.032713,8.045741,-4.089560,-3.672184,9.162566,-5.723685,6.451904,-2.368556,-7.144325,-9.549428,-6.664622,1.287408,8.056767,-4.909892,-0.620863,3.413208]], dtype = "float64")#candidate|9216|(1, 420)|const|float64
call_9211 = relay.TupleGetItem(func_6172_call(relay.reshape(var_9212.astype('float32'), [3, 3, 13]), relay.reshape(var_9212.astype('float32'), [3, 3, 13]), relay.reshape(var_9213.astype('float32'), [154,]), relay.reshape(var_9214.astype('float64'), [3360,]), relay.reshape(const_9215.astype('uint8'), [315,]), relay.reshape(const_9216.astype('float64'), [210, 2]), ), 4)
call_9217 = relay.TupleGetItem(func_6179_call(relay.reshape(var_9212.astype('float32'), [3, 3, 13]), relay.reshape(var_9212.astype('float32'), [3, 3, 13]), relay.reshape(var_9213.astype('float32'), [154,]), relay.reshape(var_9214.astype('float64'), [3360,]), relay.reshape(const_9215.astype('uint8'), [315,]), relay.reshape(const_9216.astype('float64'), [210, 2]), ), 4)
bop_9224 = relay.bitwise_and(const_9215.astype('int32'), var_9212.astype('int32')) # shape=(117, 315)
func_7221_call = mod.get_global_var('func_7221')
func_7223_call = mutated_mod.get_global_var('func_7223')
call_9227 = relay.TupleGetItem(func_7221_call(relay.reshape(var_9213.astype('float32'), [154,])), 2)
call_9228 = relay.TupleGetItem(func_7223_call(relay.reshape(var_9213.astype('float32'), [154,])), 2)
func_9022_call = mod.get_global_var('func_9022')
func_9023_call = mutated_mod.get_global_var('func_9023')
call_9234 = func_9022_call()
call_9235 = func_9022_call()
output = relay.Tuple([call_9205,call_9211,var_9213,var_9214,const_9216,bop_9224,call_9227,call_9234,])
output2 = relay.Tuple([call_9206,call_9217,var_9213,var_9214,const_9216,bop_9224,call_9228,call_9235,])
func_9237 = relay.Function([var_9212,var_9213,var_9214,], output)
mod['func_9237'] = func_9237
mod = relay.transform.InferType()(mod)
mutated_mod['func_9237'] = func_9237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9237_call = mutated_mod.get_global_var('func_9237')
var_9239 = relay.var("var_9239", dtype = "float32", shape = (117, 1))#candidate|9239|(117, 1)|var|float32
var_9240 = relay.var("var_9240", dtype = "float32", shape = (154, 1))#candidate|9240|(154, 1)|var|float32
var_9241 = relay.var("var_9241", dtype = "float64", shape = (3360,))#candidate|9241|(3360,)|var|float64
call_9238 = func_9237_call(var_9239,var_9240,var_9241,)
output = call_9238
func_9242 = relay.Function([var_9239,var_9240,var_9241,], output)
mutated_mod['func_9242'] = func_9242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9365 = relay.var("var_9365", dtype = "bool", shape = (1, 11, 10))#candidate|9365|(1, 11, 10)|var|bool
const_9366 = relay.const([[[True,False,False,True,True,True,True,False,False,False],[True,True,False,True,True,True,True,True,True,False],[True,False,True,True,False,True,False,True,False,True],[True,False,True,False,True,False,True,False,False,False],[True,True,True,True,False,False,True,True,False,False],[False,True,False,True,True,False,False,True,False,False],[False,True,False,True,True,False,True,True,False,True],[True,True,False,False,True,False,True,False,True,True],[False,True,False,False,False,True,True,False,False,True],[True,False,False,True,True,False,True,False,True,False],[True,False,True,True,False,False,True,True,False,True]],[[False,False,False,True,True,True,False,False,True,True],[True,False,True,True,False,True,True,True,True,False],[True,True,False,True,False,True,True,False,False,False],[True,True,False,True,False,True,False,False,True,False],[True,False,False,True,False,False,False,True,False,True],[False,True,False,False,False,True,True,False,True,False],[False,False,True,False,True,True,False,False,True,True],[False,True,False,False,False,False,True,False,True,True],[True,True,False,False,False,True,True,True,True,False],[True,True,False,False,True,True,True,True,True,True],[True,True,False,True,False,False,True,True,False,False]],[[False,True,False,False,True,False,True,False,True,False],[False,True,True,False,True,True,False,True,False,True],[False,True,True,False,False,True,False,True,False,False],[False,False,True,False,False,True,False,False,True,True],[False,False,False,False,False,False,True,False,True,True],[False,True,True,True,True,True,False,True,True,False],[True,True,False,False,True,False,True,True,False,True],[False,True,True,True,True,True,True,False,False,False],[True,False,True,False,True,False,False,True,True,True],[True,False,False,True,False,True,True,False,False,False],[True,False,True,False,True,False,True,False,False,True]],[[False,True,True,True,False,False,True,False,True,False],[True,False,False,True,True,True,False,True,True,False],[True,False,False,False,False,False,False,True,False,False],[True,True,True,False,False,True,True,False,True,False],[False,False,True,True,True,False,False,True,True,True],[True,False,True,False,False,True,False,False,False,False],[False,True,True,False,False,False,True,True,False,True],[True,False,True,False,True,True,True,True,False,False],[False,False,True,True,False,True,False,False,False,True],[False,False,False,False,False,False,False,False,True,False],[True,True,False,False,True,False,True,False,True,False]]], dtype = "bool")#candidate|9366|(4, 11, 10)|const|bool
bop_9367 = relay.logical_and(var_9365.astype('bool'), const_9366.astype('bool')) # shape=(4, 11, 10)
output = bop_9367
output2 = bop_9367
func_9376 = relay.Function([var_9365,], output)
mod['func_9376'] = func_9376
mod = relay.transform.InferType()(mod)
var_9377 = relay.var("var_9377", dtype = "bool", shape = (1, 11, 10))#candidate|9377|(1, 11, 10)|var|bool
output = func_9376(var_9377)
func_9378 = relay.Function([var_9377], output)
mutated_mod['func_9378'] = func_9378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9455 = relay.var("var_9455", dtype = "uint8", shape = (1, 7, 5))#candidate|9455|(1, 7, 5)|var|uint8
var_9456 = relay.var("var_9456", dtype = "uint8", shape = (16, 7, 5))#candidate|9456|(16, 7, 5)|var|uint8
bop_9457 = relay.logical_xor(var_9455.astype('uint8'), var_9456.astype('uint8')) # shape=(16, 7, 5)
output = bop_9457
output2 = bop_9457
func_9461 = relay.Function([var_9455,var_9456,], output)
mod['func_9461'] = func_9461
mod = relay.transform.InferType()(mod)
mutated_mod['func_9461'] = func_9461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9461_call = mutated_mod.get_global_var('func_9461')
var_9463 = relay.var("var_9463", dtype = "uint8", shape = (1, 7, 5))#candidate|9463|(1, 7, 5)|var|uint8
var_9464 = relay.var("var_9464", dtype = "uint8", shape = (16, 7, 5))#candidate|9464|(16, 7, 5)|var|uint8
call_9462 = func_9461_call(var_9463,var_9464,)
output = call_9462
func_9465 = relay.Function([var_9463,var_9464,], output)
mutated_mod['func_9465'] = func_9465
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9472 = relay.const([[[2.038105,7.965149,0.742493,-8.784309,8.569463,9.588243],[-5.855898,-1.005979,8.082709,-4.562531,-3.291128,-3.974899],[6.186749,-9.419744,2.175551,-3.666838,-9.581369,4.458232],[-8.410775,3.589241,8.020637,2.581342,1.902322,-2.415427]],[[-1.142748,-7.364916,1.490234,-0.950259,-0.017362,5.408690],[-8.569204,-1.666691,9.340721,-8.003868,3.710180,-3.608565],[-0.064467,-0.865201,1.498189,-1.920597,8.887087,6.511265],[3.152974,6.410604,-1.363689,8.801568,-4.530702,-7.119594]],[[-4.704456,3.428931,-2.470215,-1.695008,3.426330,7.597225],[6.722487,-1.228541,-4.904205,1.748383,6.086711,9.662446],[8.288630,-4.674209,6.267229,-6.829173,-6.421879,4.613822],[5.536634,1.708954,0.819357,8.151663,4.700877,6.747773]]], dtype = "float32")#candidate|9472|(3, 4, 6)|const|float32
uop_9473 = relay.asin(const_9472.astype('float32')) # shape=(3, 4, 6)
func_5911_call = mod.get_global_var('func_5911')
func_5912_call = mutated_mod.get_global_var('func_5912')
call_9476 = func_5911_call()
call_9477 = func_5911_call()
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
var_9489 = relay.var("var_9489", dtype = "float32", shape = (960,))#candidate|9489|(960,)|var|float32
call_9488 = relay.TupleGetItem(func_3066_call(relay.reshape(var_9489.astype('float32'), [16, 15, 4])), 1)
call_9490 = relay.TupleGetItem(func_3068_call(relay.reshape(var_9489.astype('float32'), [16, 15, 4])), 1)
output = relay.Tuple([uop_9473,call_9476,call_9488,var_9489,])
output2 = relay.Tuple([uop_9473,call_9477,call_9490,var_9489,])
func_9494 = relay.Function([var_9489,], output)
mod['func_9494'] = func_9494
mod = relay.transform.InferType()(mod)
var_9495 = relay.var("var_9495", dtype = "float32", shape = (960,))#candidate|9495|(960,)|var|float32
output = func_9494(var_9495)
func_9496 = relay.Function([var_9495], output)
mutated_mod['func_9496'] = func_9496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8230_call = mod.get_global_var('func_8230')
func_8232_call = mutated_mod.get_global_var('func_8232')
call_9538 = relay.TupleGetItem(func_8230_call(), 1)
call_9539 = relay.TupleGetItem(func_8232_call(), 1)
output = call_9538
output2 = call_9539
func_9561 = relay.Function([], output)
mod['func_9561'] = func_9561
mod = relay.transform.InferType()(mod)
mutated_mod['func_9561'] = func_9561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9561_call = mutated_mod.get_global_var('func_9561')
call_9562 = func_9561_call()
output = call_9562
func_9563 = relay.Function([], output)
mutated_mod['func_9563'] = func_9563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6354_call = mod.get_global_var('func_6354')
func_6355_call = mutated_mod.get_global_var('func_6355')
call_9624 = func_6354_call()
call_9625 = func_6354_call()
func_2086_call = mod.get_global_var('func_2086')
func_2089_call = mutated_mod.get_global_var('func_2089')
const_9627 = relay.const([6,3,4,6,10,-1,7,5,8,7,1,2,2,-6,-4,2,-7,-7,-8,10,-10,4,-7,-3,10,-8,5,5,-8,6,9,1,2,8,3,-9,1,10,2,-4,-5,-5,2,10,2,3,4,9,4,-6,-5,9,8,-5,5,5,10,10,2,4,-6,7,-1,-5,-2,-1,6,5,3,4,-7,-10,1,-1,-10,8,9,7,10,4,-3,-10,-9,4,-5,10,9,1,9,-2,-6,-6,-4,7,-7,7,-8,-10,2,-8,2,8,-9,-1,10,9,2,1,10,-1,8,6,4,4,-2,4,-4,5,-1,2,-10,7,6,-9,5,1,9,-3,7,-1,-2,3,9,-9,-6,4,-10,9,1,2,9,3,-5,3,4,1,10,3,-3,2,3,-7,-8,-1,-6,7,8,-3,4,5,1,7,-9,1,-3,1,-10,1,7,-7,4,-10,3,5,1,-9,-3,4,-7,4,-9,-5,7,6,-7,9,-8,4,-4,1,9,8,4,-6,8,-10,4,5,-1,-5,4,10,5,-5,4,-4,4,7,-5,-9,-10,9,4,7,-3,-4,8,-2,9,-2,1,-6,-10,-5,3,-10,-4,-10,3,6,10,6,7,3,-5,-8,10,3,6,-9,-5,3,9,10,1,-9,-9,10,-3,1,-7,6,3,-7,9,-10,-4,6,6,-5,-3,9,1,9,4,4,8,-7,9,-4,2,3,-6,-1,-6,-1,-3,4,-2,10,2,7,3,-3,-2,1,10,9,-4,2,9,10,6,5,-6,5,-8,7,8,6,-8,3,-2,6,5,7,-3,-5,2,8,5,-5,8,8,2], dtype = "uint8")#candidate|9627|(315,)|const|uint8
call_9626 = relay.TupleGetItem(func_2086_call(relay.reshape(const_9627.astype('uint8'), [3, 7, 15]), relay.reshape(const_9627.astype('uint8'), [3, 7, 15]), ), 0)
call_9628 = relay.TupleGetItem(func_2089_call(relay.reshape(const_9627.astype('uint8'), [3, 7, 15]), relay.reshape(const_9627.astype('uint8'), [3, 7, 15]), ), 0)
bop_9637 = relay.logical_or(call_9626.astype('bool'), relay.reshape(const_9627.astype('bool'), relay.shape_of(call_9626))) # shape=(3, 7, 15)
bop_9640 = relay.logical_or(call_9628.astype('bool'), relay.reshape(const_9627.astype('bool'), relay.shape_of(call_9628))) # shape=(3, 7, 15)
func_7371_call = mod.get_global_var('func_7371')
func_7373_call = mutated_mod.get_global_var('func_7373')
call_9641 = func_7371_call()
call_9642 = func_7371_call()
func_6100_call = mod.get_global_var('func_6100')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_9643 = relay.TupleGetItem(func_6100_call(), 0)
call_9644 = relay.TupleGetItem(func_6101_call(), 0)
uop_9650 = relay.asinh(bop_9637.astype('float32')) # shape=(3, 7, 15)
uop_9652 = relay.asinh(bop_9640.astype('float32')) # shape=(3, 7, 15)
func_6100_call = mod.get_global_var('func_6100')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_9660 = relay.TupleGetItem(func_6100_call(), 0)
call_9661 = relay.TupleGetItem(func_6101_call(), 0)
output = relay.Tuple([call_9624,call_9641,call_9643,uop_9650,call_9660,])
output2 = relay.Tuple([call_9625,call_9642,call_9644,uop_9652,call_9661,])
func_9691 = relay.Function([], output)
mod['func_9691'] = func_9691
mod = relay.transform.InferType()(mod)
mutated_mod['func_9691'] = func_9691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9691_call = mutated_mod.get_global_var('func_9691')
call_9692 = func_9691_call()
output = call_9692
func_9693 = relay.Function([], output)
mutated_mod['func_9693'] = func_9693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9561_call = mod.get_global_var('func_9561')
func_9563_call = mutated_mod.get_global_var('func_9563')
call_9699 = func_9561_call()
call_9700 = func_9561_call()
output = relay.Tuple([call_9699,])
output2 = relay.Tuple([call_9700,])
func_9712 = relay.Function([], output)
mod['func_9712'] = func_9712
mod = relay.transform.InferType()(mod)
output = func_9712()
func_9713 = relay.Function([], output)
mutated_mod['func_9713'] = func_9713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7412_call = mod.get_global_var('func_7412')
func_7414_call = mutated_mod.get_global_var('func_7414')
call_9725 = relay.TupleGetItem(func_7412_call(), 1)
call_9726 = relay.TupleGetItem(func_7414_call(), 1)
func_9494_call = mod.get_global_var('func_9494')
func_9496_call = mutated_mod.get_global_var('func_9496')
const_9730 = relay.const([9.392326,4.733572,1.693231,-8.665744,-1.190802,0.090322,-8.959753,-0.923013,-1.639717,-2.836927,2.236449,-5.328342,-5.925578,2.336602,-7.774552,-1.378049,7.413908,-5.041336,-0.629274,-3.623839,-5.307283,0.372168,9.788610,8.078375,-9.704310,4.752324,-0.976634,-4.190681,2.587058,-7.691619,8.154559,8.573456,-1.850416,-8.866077,-1.731783,-8.104515,-0.129972,7.890048,7.030029,0.743014,9.489452,0.834512,-5.621715,-0.919599,9.392937,1.025883,1.626651,4.678263,-2.020657,-3.567273,4.754797,9.036093,-3.819454,7.991821,-9.704558,1.724887,9.996566,3.394934,-0.551001,0.133023,-1.243364,-9.987537,7.947858,0.450896,8.323625,-0.038798,-9.003271,-0.672017,9.994790,-2.238228,5.840735,5.252341,-9.804171,-9.344243,-5.679214,6.971751,6.015135,-9.097809,3.588516,-5.647183,3.327924,0.013317,0.873574,-0.585571,3.845745,-6.055502,-5.388552,1.580140,-1.491623,7.794803,1.047515,6.295936,-7.065090,7.274738,1.101158,8.197660,8.902805,4.407027,-4.743447,5.009174,-6.244433,-2.831326,2.799226,-0.963066,-7.225700,-8.482653,-5.594310,-9.567309,8.110615,-8.575189,4.685349,9.719190,0.988536,6.930555,-7.778544,8.884617,-6.806352,0.915354,-9.150341,9.630737,1.542276,-9.204783,1.208636,-4.528644,4.949099,-9.049311,-0.941480,7.895695,-4.109051,-0.601148,1.243596,9.691949,4.503430,4.012634,-9.641109,-7.165146,-5.694071,9.435756,2.993627,-3.207924,1.462305,-4.460929,-2.676097,7.123400,-3.183351,3.628825,7.401298,-6.603888,2.997114,-3.875304,-9.402561,2.388472,-7.124204,7.467035,-8.346296,-5.926177,-6.037615,-0.652917,-2.184067,3.480073,2.264943,-0.588857,5.459520,1.909947,-0.712412,5.662483,3.920525,7.130658,2.538171,8.005395,-0.854880,9.516551,-3.048165,6.359842,1.178387,-3.943915,1.525647,-9.912400,4.236761,7.615559,6.281986,-2.445281,3.725781,-2.361765,-3.467260,-2.881379,3.338747,4.736928,0.893292,-0.130529,5.664648,0.259476,3.698486,-4.407328,-4.506755,-5.968499,-6.930111,-7.103731,-8.006748,-7.513209,-5.857974,9.757335,0.062076,-5.057935,6.390433,6.652186,7.523151,3.968702,-3.840980,6.919120,1.025632,6.611548,-2.672473,8.976214,-8.331882,-2.352979,3.544490,6.510208,-9.170193,6.694708,-8.608908,9.946703,-8.490257,3.723517,-3.047050,8.726149,-9.593337,0.946781,-7.252771,-2.691805,-2.613585,8.021542,-6.481498,-1.962963,-5.311914,6.060061,9.623719,-6.220326,9.468838,-8.413296,-5.387243,-3.549303,-4.795190,-6.315956,-7.364127,-3.378392,0.818057,-2.482717,-5.718398,-0.927922,9.539604,1.170030,-1.015467,-0.679373,0.368522,7.169011,-5.304204,1.577987,8.145918,5.356977,-3.810922,6.707215,2.268349,2.780016,-7.726368,6.705641,4.542162,-8.311441,-7.078147,-8.013678,-2.795347,-1.514733,2.917847,2.537339,1.363495,-3.744003,-3.739426,6.235736,-7.385851,7.308568,-3.830793,-5.250337,-1.591335,-1.442794,7.239687,-8.432445,-6.244087,-4.191250,-1.649984,1.573208,-3.961784,7.837801,2.807156,-3.529491,-0.387435,-2.873046,-2.440316,-5.333563,-0.245168,-9.266926,8.076519,0.420852,5.894310,1.800219,9.893350,4.189201,2.972074,3.460916,7.543305,-1.539977,7.743424,-9.588767,9.535442,-7.658594,8.353641,1.325881,-1.019529,6.488792,-9.813380,4.673902,8.542467,5.514722,-8.196862,3.295720,-0.081712,1.309377,-9.496397,-0.711621,-1.252651,7.948919,8.301097,3.093263,5.773200,8.399165,4.782507,-6.797405,7.937081,7.650526,-8.281564,1.771924,-5.360041,-0.688060,-2.665855,-1.518914,-7.406596,9.450229,-1.024441,9.020188,9.232664,6.860745,1.138917,4.406793,1.688864,-0.507970,3.616277,7.986169,-8.768258,-3.778211,-7.118222,-9.560525,1.833895,-8.449472,-3.525135,6.915743,-5.798499,-9.363099,-9.497650,-9.408546,4.199064,7.077050,-6.577404,-2.502677,1.708335,4.362144,-0.454750,-1.002319,2.149935,0.277190,-8.140124,4.098124,-0.872050,-3.334224,7.451331,-9.381377,-4.149917,6.443582,-6.524946,8.601003,7.481113,5.395459,-8.185528,4.163594,-6.944983,0.136915,2.997294,2.213814,1.362724,2.799542,-4.774294,9.354995,9.151249,7.840897,-3.990022,1.489678,-8.783232,5.866030,-4.478801,-4.982212,-3.113799,7.599207,3.378311,1.888886,3.847353,0.573142,-0.202642,-8.514468,-4.178116,-7.614452,-0.996701,-8.373035,-8.341032,-1.294439,-0.021278,-7.349448,-1.516819,-4.090481,-9.662886,-0.002977,-6.090786,-2.579378,-2.543340,5.705668,-7.145725,-1.643578,5.869042,1.086440,-9.883969,3.500074,2.892259,5.671698,4.190676,8.682564,5.441450,0.132878,4.732812,5.149314,-3.503982,-3.238163,-6.839315,-5.898696,6.998505,4.661790,6.793994,-9.235038,-5.935852,-4.928802,-1.316285,-7.712975,-8.711375,8.825295,6.259055,1.755219,6.148517,-7.961767,-4.320896,-3.231095,0.781873,-5.185243,-6.249940,7.642350,-8.571787,-4.552861,0.508506,2.015369,4.967300,7.470888,3.809540,-4.390037,6.352982,-4.116151,8.222937,9.450869,-7.435264,7.011579,7.266130,-6.874929,2.048330,-6.845137,9.053085,-7.389550,-7.757163,6.402707,-7.831380,7.911760,-3.279920,-8.158614,-4.438909,-4.572023,4.208690,2.397834,-4.019041,-0.084584,-2.082486,-3.863471,-0.040472,-2.267086,9.083393,-5.396375,-0.981907,6.200379,4.183741,-3.949072,8.836926,9.370565,9.455699,9.621150,-4.799776,9.866084,-8.489160,-8.360799,-8.473435,-6.395844,-5.248848,3.828049,-7.078349,8.749979,-3.704055,6.213746,6.127094,-5.929837,8.684525,-8.393354,-8.628579,-7.179071,-6.484265,2.828847,-3.244757,-0.075943,4.624972,7.373051,-3.723177,5.656865,-4.031295,-1.225999,0.766913,-9.494728,3.875838,-2.182196,-0.788435,-3.102587,5.941237,5.367629,7.363238,-9.324203,-9.539462,-9.173172,2.479567,9.787601,-8.955231,0.363143,9.158963,-9.566133,-8.366456,-8.509937,-0.962660,5.987567,-0.479513,4.408787,-1.192098,-9.458609,6.706501,5.366360,2.335209,-5.138584,7.143048,2.577132,-7.542140,4.151772,3.714160,9.576067,-5.519107,9.691096,-1.304892,1.005422,7.745358,2.742811,-6.100640,4.293473,5.437627,-2.912322,7.822232,2.576369,6.305937,-3.182744,-7.757344,-2.227803,9.962340,-5.436023,-9.524931,-9.670554,6.973407,-7.693650,9.683310,8.620511,-4.701705,9.103107,-5.813229,6.593876,8.819767,-2.219246,6.114822,-7.735191,-3.172006,-6.032616,-7.469297,-6.056951,-3.595132,-8.039889,-0.033104,4.082175,6.104043,-2.983384,5.038805,8.400777,-8.365914,9.146409,9.454694,-8.059972,-9.715800,-3.593647,8.490269,-6.487100,-0.061775,5.670156,8.363770,4.107402,7.190420,-6.207608,3.192147,7.866945,5.536451,5.500251,7.123855,-6.671009,2.739229,-7.623024,-4.950509,-6.812972,4.397066,4.307248,-0.661368,9.397093,3.634853,0.228656,-5.459598,-9.383715,6.331605,-6.991874,9.249651,-4.891211,5.625833,1.527434,3.104830,-9.419131,-0.790155,9.792832,-5.951977,-5.636014,-3.450039,-1.112892,6.145592,-9.964406,9.468409,9.032918,-0.721382,4.500487,-6.617311,3.783303,-7.868586,0.752688,9.769151,-7.467688,8.937654,9.883473,-1.548903,-5.426555,-0.917523,-1.732848,9.935761,-0.829620,5.141086,-5.245801,9.432029,9.253351,4.231903,-1.650032,-7.553292,5.167813,7.091707,0.850002,-7.498329,3.911145,9.552472,-1.922461,4.607950,-7.953509,-1.516861,0.149596,-1.632699,-1.080819,8.068684,-3.900053,4.858767,3.742893,7.732534,-0.775053,4.240737,-6.751090,8.025726,0.198953,-4.148456,7.168430,-2.981532,-2.459349,3.939092,1.039398,4.241523,-2.841773,4.872887,4.839551,7.262472,-9.836928,-1.703455,1.725544,-2.149024,-7.144190,-9.068469,3.742001,-9.232278,9.665856,-4.102983,-1.013400,-1.138925,-6.643510,2.064895,-0.723665,7.703268,9.948231,-5.170872,0.553955,4.511416,9.979426,0.129845,9.425263,-8.409440,-9.922125,1.110930,-5.630978,1.599636,7.530718,-3.608949,9.349173,-0.851690,3.272963,9.382060,3.063167,7.476223,-3.903557,-3.447704,-5.003341,-6.939925,4.372074,-8.445261,-5.924502,3.390338,-8.103957,2.995899,7.630369,-6.295204,-0.196941,-0.777083,-7.797557,-7.617965,-5.039050,-4.991628,3.768119,5.802653,-2.967542,-6.540267,-4.909704,-2.540698,-7.847656,-1.384886,-0.423053,-6.403121,3.952251,-7.034876,-0.041192,-8.240755,0.910859,-1.877478,-7.181198,-9.257110,6.187359,5.241595,-8.819332,-3.127651,0.644874,-1.083601,5.649693,9.861931,0.583836,-1.118175,-8.948530,7.714197,-9.266775,6.853937,1.239975,7.277382,-2.939048,-6.413285,1.023098,1.703221,-4.434087,-7.261617,7.429392,-2.311675,2.818610,-2.289584,6.015034,-6.510706,0.877612,-0.971434,0.899808,5.253203,-3.566882,-4.076187,-0.515563,8.129976,9.362329,-0.308049,3.139716,-5.146507,-5.339835,-6.829588,-4.642423,4.594455,-4.299279,-4.984692,6.293377,-0.971732,-2.254551,2.854245,-5.876200,4.079831,-2.897009,-7.810614,-5.903718,9.221721,-6.239734,-0.070338,-6.805239,-0.318705,-4.916934,-5.942700,7.129444,3.094169,8.139169,-1.110661,7.282819,7.155472,-4.909246,3.520215,-5.800539,2.614680,9.383312,5.955885,7.255928,-2.862333,1.101721,0.078126,3.221843,-9.078048,-0.861512,6.633282,-8.135809,6.104210,-6.165626,9.509180,6.457215,0.238598,-9.702624,-3.258240,6.345387,6.591979,4.271798,7.234398,-3.676126,6.774867,-3.293954,-1.187508,-0.454342,5.929428,0.213719,0.652622,3.583666,8.222918,-2.569495,9.289205,-9.713881,-1.238112,-2.699753,1.522239,5.952503,6.214594,6.344478,-4.823837,9.310541,-5.442045,-9.181278,-5.675002,0.768632,5.216506,3.690484,1.565130,-0.352187,-1.115762,3.742195,3.687243,-2.918021,-9.356315,-0.180290,5.012573,6.307344,-2.817966,-2.535239,8.374620,-1.412659,3.131177,-8.645921,-2.183048,-5.389640,0.608303,-6.080893,-4.371639,6.148144,-8.227490,1.052443,4.872657,7.904531,-2.816238,-5.362534,1.745950,-6.341959,5.668638,6.877905,0.879883,-3.278184,2.467367,5.296885], dtype = "float32")#candidate|9730|(960,)|const|float32
call_9729 = relay.TupleGetItem(func_9494_call(relay.reshape(const_9730.astype('float32'), [960,])), 2)
call_9731 = relay.TupleGetItem(func_9496_call(relay.reshape(const_9730.astype('float32'), [960,])), 2)
output = relay.Tuple([call_9725,call_9729,const_9730,])
output2 = relay.Tuple([call_9726,call_9731,const_9730,])
func_9742 = relay.Function([], output)
mod['func_9742'] = func_9742
mod = relay.transform.InferType()(mod)
output = func_9742()
func_9743 = relay.Function([], output)
mutated_mod['func_9743'] = func_9743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5704_call = mod.get_global_var('func_5704')
func_5705_call = mutated_mod.get_global_var('func_5705')
call_9871 = func_5704_call()
call_9872 = func_5704_call()
func_8904_call = mod.get_global_var('func_8904')
func_8906_call = mutated_mod.get_global_var('func_8906')
const_9885 = relay.const([-4,-3,8,1,1,-10,-9,9,6,7,-5,-8,4,1,1,8,6,4,-9,7,-8,9,2,5,-3,5,9,1,5,9,-1,-1,-8,3,1,9,9,-9,9,10,-8,10,-8,-5,4,-9,10,-1,7,10,-4,-7,9,5,-10,10,9,7,2,10,-5,10,-1,6,7,-7,-4,-5,10,3,-4,-10,-4,10,-9,3,-9,9,-5,9,-8,-4,-1,-7,10,3,-2,5,-9,3,5,-2,-8,8,6,7,6,-8,2,-9,5,6,-6,5,-8,-5,-6,-9,8,10,-5,-9,8,-7,1,3,-10,3,-2,3,-9,-10,5,-1,-9,8,8,4,-3,8,-8,1,-2,6,-5,1,-7,-10,4,-5,2,4,1,10,10,-1,1,-10,8,-6,-7,8,-1,6,2,6,-5,6,10,-1,5,1,-1,10,7,4,-4,5,3,-1,-3,8,7,3,3,-8,-3,4,-7,5,2,-7,-4,-4,-6,-1,-1,-6,-7,6,2,-6,-2,-2,7,-5,9,-9,-6,1,7,-10,2,-5,-4,7,-4,4,-7,6,-4,-5,3,-7,5,1,-9,-10,-7,-8,-7,-9,-9,-6,-1,-10,-3,9,9,5,3,7,8,-1,-2,6,-5,10,-9,-10,-1,5,-5,10,-10,7,-2,5,2,3,-6,-5,5,7,-6,-4,7,-8,4,8,2,9,-2,6,-2,-1,-9,3,4,7,7,6,1,-8,-2,10,4,2,6,1,6,-8,8,8,-1,3,-8,-2,3,-7,6,10,7,-5,7,-10,-8,9,-2,-10,-4,1,-4,-5,2,-1,-9,10,3,8,-1,-5,9,-7,-1,-3,1,-10,-6,-3,7,7,-7,2,2,9,10,-4,-6,-1,-9,-3,-10,-7,-10,-5,4,-2,10,-10,4,6,1,-5,3,5,2,-4,3,-7,2,9,-3,-9,-5,-5,-8,4,-5,8,7,-9,5,9,5,-10,-9,4,-10,-7,2,5,-5,9,10,-7,3,5,-9,6,2,2,-7,-5,9,-3,4,-1,8,8,-9,6,10,2,6,3,7,1,-2,-4,-6,4,-6,-6,8,4,-8,-1,-2,6,-4,7,-4,7,3,-9,-10,-7,-9,-3,-9,-4,9,-5,-10,-8,10,8,-4,-2,-8,-5,3,5,7,6,-6,4,6,4,-10,2,10,8,7,-10,-10,-5,7,4,7,3,-10,9,-6,-4,7,-8,8,-10,7,-3,-3,9,-8,5,5,-9,4,-3,-10,9,-4,6,-5,10,6,-7,10,10,-3,3,4,-4,-1,1,5,1,-6,-3,3,1,5,-8,-7,2,5,7,9,-8,-10,6,-8,5,3,-5,1,6,7,2,-4,4,-2,-9,-4,-3,-5,-10,-5,-6,-4,7,-8,-3,8,-9,-10,2,-5,4,7,4,8,6,10,4,-5,-3,-7,-10,-2,9,-1,3,-3,5,-8,-3,-4,10,1,2,-8,-2,1,-1,-2,-4,-3,-1,6,6,7,-10,6,-7,-5,-6,-5,-7,-2,-7,9,7,8,8,-6,-10,2,3,8,-9,-2,6,-5,2,-3,2,-10,-4,9,-4,6,7,4,8,-2,6,3,-9,-7,6,10,2,10,-10,-9,3,10,3,-10,5,7,-5,-5,1,-5,-2,6,7,-1,5,5,3,-10,9,-7,-3,6,-9,4,5,-6,6,-2,-9,4,-2,6,2,4,-7,6,9,7,4,-5,-1,-5,-4,2,1,9,-4,-1,-10,-8,9,-4,5,-6,5,8,-4,-4,2,-2,-1,6,-6,2,3,-3,-3,1,-10,-8,8,-2,-1,-1,-2,5,5,-1,-10,9,2,-8,-8,-4,7,5,10,-10,-2,5,7,9,1,5,2,7,-3,-10,5,1,-8,9,-2,10,-1,7,-4,10,-6,-7,6,-4,-8,-1,-10,4,9,-7,-2,4,-5,1,-9,5,5,-6,7,-1,-4,-7,-7,4,6,-6,2,4,-4,5,6,-3,-5,4,-8,-8,-9,9,-7,3,-6,-2,10,-6,-10,10,-2,-9,-1,-10,7,-3,2,-6,7,-10,8,-1,-7,5,-7,-1,7,7,-2,6,2,8,3,3,-3,3,5,2,-9,7,-1,7,10,-5,-1,-4,10,7,7,-1,2,-2,8,-1,10,-4,-10,-8,-5,5,-1,8,-4,-7,6,-3,-2,7,10,8,8,10,3,8,-10,5,-3,-5,8,10,-9,-2,8,2,9,-8,4,-5,-6,8,-8,-9,5,-10,5,-7,-10,7,2,6,1,-8,-1,-3,-8,5,3,-8,8,-1,7,7,-1,-7,-6,-2,-8,4,-5,-10,-10,-8,-9,-1,-4,9,-2,-1,1,-6,3,-3,-10,4,-6,8,-9,10,3,-4,6,8,-10,-1,-9,7,6,-4,-9,-2,3,2,8,-10,3,-10,5,-7,1,5,6,1,-4,-8,3,7,-4,6,10,5,-9,-2,-6,-9,-8,4,-8,6,10,-4,-6,9,-1,1,10,-7,-4,-5,-8,7,1,-10,8,1,-9,-3,8,-4,6,10,-5,6,6,10,-6,-1,-10,-7,6,8,-5,-2,-2,9,4,-7,8,10,7,-9,-9,-1,1,7,8,-5,-6,-3,3,-8,3,10,9,3,-8,-10,-3,5,-8,1,2,8,-3,6,-3,7,-10,-5,-4,6,3,10,6,1,-2,10,8,-1,9,1,4,7,-4,4,5,2,5,-5,9,-4,8,-4,4,-9,3,-4,-5,-10,5,7,-5,7,10,10,8,10,-10,2,10,-8,9,-9,-4,3,4,-1,-10,-8,2,10,3,-4,6,8,7,-8,-7,1,5,-3,6,7,-2,-6,2,4,6,8,-4,-8,2,7,3,3,2,9,9,5,3,-6,7,-2,-10,7,-9,-6,10,-2,-1,-5,10,2,1,3,-9,1,-10,1,5,5,4,5,-3,9,4,7,-7,5,8,-4,-8,-5,7,-8,5,-6,-5,2,-10,1,6,-7,-9,-3,-10,-6,-1,7,-8,-10,-8,-1,-7,-10,8,10,1,7,10,9,-6,-6,-7,-4,-8,7,1,9,-2,3,-2,2,-10,7,10,10,2,-4,9,-3,4,-4,-7,1,6,7,-8,-3,-1,-10,8,-8,6,-9,-10,3,-2,9,4,7,5,-7,-5,3,5,-7,-1,-3,-7,-3,7,-2,-7,-6,-10,-10,-7,8,-9,9,2,7,3,2,4,-8,3,10,1,-10,9,4,7,9,2,-2,-6,-10,8,-8,9,-5,-5,4,-1,7,-6,-5,2,1,-3,-8,9,-7,-10,-3,-10,1,3,3,2,3,2,9,3,-8,2,-7,-6,1,-9,6,3,9,5,-10,-2,4,-3,8,4,4,5,-8,6,-10,-4,-8,-6,-10,9,-9,-3,6,6,1,1,-6,7,-9,3,-1,8,1,6,-6,-1,9,7,-1,-9,-3,-8,-1,2,9,1,-2,1,2,5,4,10,4,-9,10,-5,-2,-1,9,3,9,-10,-3,-4,-10,-1,-9,-8,-10,-7,-6,-3,-7,-9,6,-6,8,-5,9,-5,10,-3,-9,-9,-9,9,-1,2,-5,-4,-5,-7,8,-5,1,4,-6,-8,10,-3,-6,-2,3,4,-7,10,-1,-6,-8,4,10,9,-6,8,6,7,-4,-10,-5,6,5,7,-4,2,5,-1,5,1,-9,-9,10,1,-7,2,5,5,7,-5,6,-3,5,-5,6,-2,-5,-1,9,3,-3,9,5,10,-7,-1,4,3,9,-8,6,-9,-4,-7,4,-10,-5,7,-4,-9,3,5,5,-7,-8,9,-8,4,-9,-7,-1,2,-8,3,7,5,4,-9,8,5,-2,9,-1,4,-3,6,9,-9,6,-3,8,7,9,-2,4,4,-2,-8,7,-4,4,-6,8,4,-9,-1,4,-8,-3,-10,8,5,-9,2,6,6,-7,-4,8,-1,4,4,7,3,-2,9,8,-9,-6,3,-8,5,-1,-10,-9,-6,2,-5,9,1,2,3,-3,-9,3,2,-10,9,-7,10,2,1,3,-5,3,-6,-5,4,-3,-6,6,-10,-6,-8,7,-1,4,-5,5,1,-5,2,10,-7,-1,-9,-4,3,-9,-4,-1,-7,4,-3,-1,6,5,-7,6,-8,-8,5,-8,-1,1,3,-10,-8,2,3,8,-9,-9,-10,10,-5,-6,10,9,1,9,-4,4,-3,-5,-10,-8,-8,5,6,-7,-4,9,5,9,8,1,7,5,-2,8,3,-2,5,-10,-3,-1,-8,-4,8], dtype = "int16")#candidate|9885|(1600,)|const|int16
call_9884 = relay.TupleGetItem(func_8904_call(relay.reshape(const_9885.astype('int16'), [16, 10, 10])), 0)
call_9886 = relay.TupleGetItem(func_8906_call(relay.reshape(const_9885.astype('int16'), [16, 10, 10])), 0)
output = relay.Tuple([call_9871,call_9884,const_9885,])
output2 = relay.Tuple([call_9872,call_9886,const_9885,])
func_9903 = relay.Function([], output)
mod['func_9903'] = func_9903
mod = relay.transform.InferType()(mod)
output = func_9903()
func_9904 = relay.Function([], output)
mutated_mod['func_9904'] = func_9904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9036_call = mod.get_global_var('func_9036')
func_9037_call = mutated_mod.get_global_var('func_9037')
call_9920 = relay.TupleGetItem(func_9036_call(), 0)
call_9921 = relay.TupleGetItem(func_9037_call(), 0)
func_6049_call = mod.get_global_var('func_6049')
func_6052_call = mutated_mod.get_global_var('func_6052')
var_9925 = relay.var("var_9925", dtype = "float64", shape = (112,))#candidate|9925|(112,)|var|float64
const_9926 = relay.const(3, dtype = "uint8")#candidate|9926|()|const|uint8
call_9924 = relay.TupleGetItem(func_6049_call(relay.reshape(var_9925.astype('float64'), [1, 112]), relay.reshape(const_9926.astype('uint8'), []), ), 3)
call_9927 = relay.TupleGetItem(func_6052_call(relay.reshape(var_9925.astype('float64'), [1, 112]), relay.reshape(const_9926.astype('uint8'), []), ), 3)
func_9376_call = mod.get_global_var('func_9376')
func_9378_call = mutated_mod.get_global_var('func_9378')
const_9935 = relay.const([[False,False,False,True,False],[True,True,False,True,True],[True,True,True,False,True],[True,False,True,False,False],[False,True,False,False,True],[False,True,False,True,False],[False,True,False,False,False],[False,False,False,False,True],[True,True,False,False,True],[True,True,True,False,True],[True,False,True,False,False],[False,False,True,False,True],[True,True,True,True,True],[True,True,True,True,True],[False,False,False,False,False],[True,True,False,False,True],[True,False,True,False,False],[False,False,False,True,True],[False,True,False,True,False],[True,False,False,True,False],[True,True,False,False,False],[True,True,True,True,False]], dtype = "bool")#candidate|9935|(22, 5)|const|bool
call_9934 = func_9376_call(relay.reshape(const_9935.astype('bool'), [1, 11, 10]))
call_9936 = func_9376_call(relay.reshape(const_9935.astype('bool'), [1, 11, 10]))
output = relay.Tuple([call_9920,call_9924,var_9925,const_9926,call_9934,const_9935,])
output2 = relay.Tuple([call_9921,call_9927,var_9925,const_9926,call_9936,const_9935,])
func_9941 = relay.Function([var_9925,], output)
mod['func_9941'] = func_9941
mod = relay.transform.InferType()(mod)
var_9942 = relay.var("var_9942", dtype = "float64", shape = (112,))#candidate|9942|(112,)|var|float64
output = func_9941(var_9942)
func_9943 = relay.Function([var_9942], output)
mutated_mod['func_9943'] = func_9943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6748_call = mod.get_global_var('func_6748')
func_6750_call = mutated_mod.get_global_var('func_6750')
call_9948 = relay.TupleGetItem(func_6748_call(), 0)
call_9949 = relay.TupleGetItem(func_6750_call(), 0)
output = call_9948
output2 = call_9949
func_9972 = relay.Function([], output)
mod['func_9972'] = func_9972
mod = relay.transform.InferType()(mod)
mutated_mod['func_9972'] = func_9972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9972_call = mutated_mod.get_global_var('func_9972')
call_9973 = func_9972_call()
output = call_9973
func_9974 = relay.Function([], output)
mutated_mod['func_9974'] = func_9974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5413_call = mod.get_global_var('func_5413')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_10015 = relay.TupleGetItem(func_5413_call(), 0)
call_10016 = relay.TupleGetItem(func_5414_call(), 0)
output = call_10015
output2 = call_10016
func_10031 = relay.Function([], output)
mod['func_10031'] = func_10031
mod = relay.transform.InferType()(mod)
output = func_10031()
func_10032 = relay.Function([], output)
mutated_mod['func_10032'] = func_10032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6730_call = mod.get_global_var('func_6730')
func_6732_call = mutated_mod.get_global_var('func_6732')
call_10041 = relay.TupleGetItem(func_6730_call(), 0)
call_10042 = relay.TupleGetItem(func_6732_call(), 0)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
const_10047 = relay.const([3.162493,5.495934,8.250724,4.115388,7.267662,-3.403675,0.444488,-2.593814,-5.303331,1.098526,1.120168,-3.772221,6.664841,-2.763739,-6.708355,-9.405562,0.366407,-2.346430,8.926538,-2.994484,6.113440,6.878250,-2.028317,2.836269,6.233703,-3.740107,-4.336254,6.357332,1.283447,-6.800700,0.913377,-2.360008,-2.287483,0.743400,-4.372791,-3.362082,-7.820467,-6.696161,0.666540,-0.335709,-7.565693,5.111958,3.578765,-6.510684,7.043700,-7.738518,-3.347147,1.879154,9.585845,-1.568680,2.771673,0.492905,-9.652222,-4.950954,-1.947430,-5.575865,9.856196,8.760214,-6.140532,-8.554992,-7.912333,-1.316198,5.511803,-7.801523,-2.931323,-1.761013,1.376372,-2.560752,-6.193168,-1.566660,9.267454,9.262188,-0.301132,5.994379,1.502268,-2.120718,-9.215007,-2.086031,7.096141,-1.296356,1.226830,6.969528,-7.751826,-7.407081,-2.654047,5.810656,0.635862,2.890742,9.014510,0.850296,-1.160589,9.286710,-0.177432,-6.405695,-8.282024,-0.125747,4.573427,-1.360927,3.134466,-3.871205,1.315630,1.195698,4.689286,7.864364,0.082492,3.993120,-6.846191,-5.283167,-5.746460,-7.456340,3.754155,-6.871972,-4.933158,-7.547980,9.489927,-8.949491,0.620361,1.760549,-8.056498,4.720804,3.062242,5.468467,8.773633,7.463205,-6.637068,-5.171371,-9.837091,-3.352042,-6.330530,-8.848889,-6.168609,-9.435785,-7.983614,-9.986554,-9.009750,-2.682127,-2.045243,-7.311895,4.904914,5.864822,7.272971,4.791758,-0.708608,7.660189,-4.545474,-7.745439,-1.795078,-5.578200,-1.134405,3.016769,0.472580,4.856645,9.331907,7.317129,5.444004,-5.674710,7.580398,-2.547384,8.199178,-7.149745,4.198922,-9.199843,6.932871,-0.608031,7.084338,0.380303,5.326000,-1.987289,-4.673538,7.698999,-7.733311,-3.425780,0.437040,3.950323,-2.310412,-1.542923,-1.797162,4.147888,-4.112877,-4.258580,0.565519,-7.135023,-2.644300,0.613939,-9.400297,-1.393906,-4.113215,-6.705487,6.503953,9.949466,3.710247,8.072761,-7.199981,-2.046786,-3.281137,6.759081,-4.539950,-8.863395,-2.239479,1.546512,-8.392841,-5.499395,-2.163561,-6.222460,-9.125234,-4.132207,3.079782,-2.608357,-2.256864,-0.587503,8.352769,1.322485,9.191115,-7.154688,7.255161,2.839669,4.685076,1.901320,-1.372502,8.605640,1.351942,0.569579,8.486292,-6.905461,-3.167110,-1.751824,-8.236302,7.847493,7.889882,-8.137573,5.726758,-9.931521,6.765987,-7.261930,8.073896,-5.379203,6.742403,7.063698,7.522230,3.463656,7.016326,3.832421,1.974644,2.194810,-6.882517,5.606482,8.898616,-1.011505,9.189217,6.265301,-8.066317,6.368438,5.102493,-6.050568,3.437029,-6.652816,7.115552,-0.497036,-5.114572,0.534885,7.919293,-5.982750,-5.658354,0.076240,1.448431,-8.944771,3.337598,-4.162501,6.595551,5.359441,-9.675613,1.788590,-5.888440,-7.261689,3.201151,6.935301,-3.640687,-0.829586,3.223197,1.850884,-2.956190,-6.445596,0.457319,-0.889770,-1.784736,3.621095,3.905818,-8.981167,2.430882,-7.369826,4.985460,8.030904,6.472427,-4.446002,-2.733733,6.685418,-3.745209,-0.134511,-9.204833,-2.976571,-5.056545,3.210171,-1.708183,2.995671,-4.588902,-0.132981,-9.927460,-9.426963,8.171423,-7.010606,-1.871631,-7.286791,0.970504,-8.788673,4.099849,-7.166928,6.009157,4.285263,-7.731229,5.927827,-6.873789,-8.639724,6.321386,-7.406635,2.866088,-6.325278,3.773103,-8.446625,2.309313,-7.299733,5.545837,2.502285,6.617658,-8.264902,0.835354,-0.551561,-6.378360,-5.654198,1.966472,-4.828431,6.316229,-8.657080,-2.219572,-2.351865,-2.474739,-1.344768,7.194873,-9.677194,3.844150,-2.639078,-3.776876,-6.023478,5.737120,-6.160057,-9.137598,-2.817656,-3.835814,-3.101587,9.490714,-4.333195,9.276741,-2.700236,-9.646280,3.769468,1.773575,3.127052,7.226031,-7.626864,-3.310298,3.597772,-6.154993,9.071924,9.651430,2.655214,-1.914368,-9.274996,-7.099965,-0.491997,5.507583,-8.314356,-4.056066,-6.338712,-1.594818,-1.812451,8.461758,7.748820,5.573415,-0.591523,-4.071936,-5.152182,-9.902676,-2.805252,4.270796,2.740121,3.024038,5.556696,0.545853,1.830146,8.958845,5.126895,5.378761,-0.862708,8.714466,5.436622,-7.912409,-6.461511,-1.081856,9.861235,1.215954,-7.547040,6.677682,-5.644835,4.522484,-0.576357,-2.082438,-6.097058,-8.788568,-1.006026,4.723602,8.471401,9.721518,-4.632367,-7.972345,7.691520,2.576434,-4.762122,-6.379498,5.290214,-8.879238,-0.656970,2.297388,0.290551,3.110527,4.769078,7.122250,-4.274755,-6.954592,4.406146,-0.349279,1.007570,-2.357255,-9.138498,-5.744932,5.399343,4.964929,3.012688,-9.341482,-7.153591,8.981473,-7.002193,-6.670024,4.229394,-1.560033,-2.308515,-1.820023,-3.014707,3.063716,6.608024,-4.776393,4.992306,-6.346309,4.701226,4.592985,-8.402872,8.477870,5.969580,6.815166,6.520416,9.492840,-2.489942,4.436733,0.273711,-3.840665,-7.216764,2.278650,-0.364062,5.971774,-0.376065,-8.181674,6.319572,7.372811,4.357303,0.920500,-5.286333,-0.466655,-8.239432,1.318988,4.485699,-5.261112,0.387681,0.929817,0.542249,8.383374,4.425941,-4.976396,0.724325,7.176732,-1.226833,9.190475,-7.918138,-1.832696,7.658396,-9.049426,0.568409,9.033187,-0.204957,-9.510339,0.777422,8.754108,6.105111,2.842841,8.268685,-4.729820,2.087240,5.556483,8.724941,4.378505,2.380309,9.039386,-1.897679,6.192017,1.189614,6.618841,6.898673,1.310655,-5.574972,-6.936402,-1.409015,-7.442321,-3.995578,9.928326,3.338502,3.982607,-4.551733,4.605947,7.353923,5.296961,-2.222856,2.170124,6.497632,3.676232,4.223824,2.248265,-7.624727,2.808751,5.956072,-4.794011,8.478233,-3.751049,5.642351,6.616010,-0.025530,4.350334,3.990273,1.898928,-9.146603,-3.030129,-2.360829,2.685023,4.008674,7.162853,4.641356,4.448826,9.048545,-5.617545,8.597874,8.079616,-5.110745,2.832832,9.126482,-6.281560,4.765381,6.494648,-0.392556,-6.921896,-6.102050,9.310737,9.275835,-2.161377,-1.327263,9.661106,-6.086614,4.697592,-9.732272,-7.067948,4.522190,6.844138,-7.122536,-3.452572,1.990849,-7.034797,9.481543,5.304662,9.911680], dtype = "float32")#candidate|10047|(594,)|const|float32
call_10046 = func_5870_call(relay.reshape(const_10047.astype('float32'), [11, 9, 6]))
call_10048 = func_5870_call(relay.reshape(const_10047.astype('float32'), [11, 9, 6]))
output = relay.Tuple([call_10041,call_10046,const_10047,])
output2 = relay.Tuple([call_10042,call_10048,const_10047,])
func_10053 = relay.Function([], output)
mod['func_10053'] = func_10053
mod = relay.transform.InferType()(mod)
mutated_mod['func_10053'] = func_10053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10053_call = mutated_mod.get_global_var('func_10053')
call_10054 = func_10053_call()
output = call_10054
func_10055 = relay.Function([], output)
mutated_mod['func_10055'] = func_10055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_10099 = relay.TupleGetItem(func_7093_call(), 1)
call_10100 = relay.TupleGetItem(func_7095_call(), 1)
output = relay.Tuple([call_10099,])
output2 = relay.Tuple([call_10100,])
func_10103 = relay.Function([], output)
mod['func_10103'] = func_10103
mod = relay.transform.InferType()(mod)
mutated_mod['func_10103'] = func_10103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10103_call = mutated_mod.get_global_var('func_10103')
call_10104 = func_10103_call()
output = call_10104
func_10105 = relay.Function([], output)
mutated_mod['func_10105'] = func_10105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10111 = relay.var("var_10111", dtype = "float64", shape = (10, 1, 8))#candidate|10111|(10, 1, 8)|var|float64
var_10112 = relay.var("var_10112", dtype = "float64", shape = (10, 8, 8))#candidate|10112|(10, 8, 8)|var|float64
bop_10113 = relay.minimum(var_10111.astype('float64'), var_10112.astype('float64')) # shape=(10, 8, 8)
func_9022_call = mod.get_global_var('func_9022')
func_9023_call = mutated_mod.get_global_var('func_9023')
call_10117 = func_9022_call()
call_10118 = func_9022_call()
uop_10127 = relay.log2(var_10111.astype('float32')) # shape=(10, 1, 8)
output = relay.Tuple([bop_10113,call_10117,uop_10127,])
output2 = relay.Tuple([bop_10113,call_10118,uop_10127,])
func_10139 = relay.Function([var_10111,var_10112,], output)
mod['func_10139'] = func_10139
mod = relay.transform.InferType()(mod)
mutated_mod['func_10139'] = func_10139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10139_call = mutated_mod.get_global_var('func_10139')
var_10141 = relay.var("var_10141", dtype = "float64", shape = (10, 1, 8))#candidate|10141|(10, 1, 8)|var|float64
var_10142 = relay.var("var_10142", dtype = "float64", shape = (10, 8, 8))#candidate|10142|(10, 8, 8)|var|float64
call_10140 = func_10139_call(var_10141,var_10142,)
output = call_10140
func_10143 = relay.Function([var_10141,var_10142,], output)
mutated_mod['func_10143'] = func_10143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6730_call = mod.get_global_var('func_6730')
func_6732_call = mutated_mod.get_global_var('func_6732')
call_10151 = relay.TupleGetItem(func_6730_call(), 0)
call_10152 = relay.TupleGetItem(func_6732_call(), 0)
output = relay.Tuple([call_10151,])
output2 = relay.Tuple([call_10152,])
func_10172 = relay.Function([], output)
mod['func_10172'] = func_10172
mod = relay.transform.InferType()(mod)
mutated_mod['func_10172'] = func_10172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10172_call = mutated_mod.get_global_var('func_10172')
call_10173 = func_10172_call()
output = call_10173
func_10174 = relay.Function([], output)
mutated_mod['func_10174'] = func_10174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10216 = relay.var("var_10216", dtype = "uint16", shape = (1, 16, 4))#candidate|10216|(1, 16, 4)|var|uint16
var_10217 = relay.var("var_10217", dtype = "uint16", shape = (1, 16, 4))#candidate|10217|(1, 16, 4)|var|uint16
bop_10218 = relay.bitwise_or(var_10216.astype('uint16'), relay.reshape(var_10217.astype('uint16'), relay.shape_of(var_10216))) # shape=(1, 16, 4)
uop_10225 = relay.asinh(var_10216.astype('float32')) # shape=(1, 16, 4)
output = relay.Tuple([bop_10218,uop_10225,])
output2 = relay.Tuple([bop_10218,uop_10225,])
func_10227 = relay.Function([var_10216,var_10217,], output)
mod['func_10227'] = func_10227
mod = relay.transform.InferType()(mod)
mutated_mod['func_10227'] = func_10227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10227_call = mutated_mod.get_global_var('func_10227')
var_10229 = relay.var("var_10229", dtype = "uint16", shape = (1, 16, 4))#candidate|10229|(1, 16, 4)|var|uint16
var_10230 = relay.var("var_10230", dtype = "uint16", shape = (1, 16, 4))#candidate|10230|(1, 16, 4)|var|uint16
call_10228 = func_10227_call(var_10229,var_10230,)
output = call_10228
func_10231 = relay.Function([var_10229,var_10230,], output)
mutated_mod['func_10231'] = func_10231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7412_call = mod.get_global_var('func_7412')
func_7414_call = mutated_mod.get_global_var('func_7414')
call_10363 = relay.TupleGetItem(func_7412_call(), 1)
call_10364 = relay.TupleGetItem(func_7414_call(), 1)
output = relay.Tuple([call_10363,])
output2 = relay.Tuple([call_10364,])
func_10365 = relay.Function([], output)
mod['func_10365'] = func_10365
mod = relay.transform.InferType()(mod)
output = func_10365()
func_10366 = relay.Function([], output)
mutated_mod['func_10366'] = func_10366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9972_call = mod.get_global_var('func_9972')
func_9974_call = mutated_mod.get_global_var('func_9974')
call_10405 = func_9972_call()
call_10406 = func_9972_call()
func_9376_call = mod.get_global_var('func_9376')
func_9378_call = mutated_mod.get_global_var('func_9378')
const_10417 = relay.const([False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True], dtype = "bool")#candidate|10417|(110,)|const|bool
call_10416 = func_9376_call(relay.reshape(const_10417.astype('bool'), [1, 11, 10]))
call_10418 = func_9376_call(relay.reshape(const_10417.astype('bool'), [1, 11, 10]))
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_10443 = relay.TupleGetItem(func_6552_call(), 0)
call_10444 = relay.TupleGetItem(func_6554_call(), 0)
uop_10451 = relay.sin(call_10443.astype('float64')) # shape=(11, 1, 6)
uop_10453 = relay.sin(call_10444.astype('float64')) # shape=(11, 1, 6)
output = relay.Tuple([call_10405,call_10416,const_10417,uop_10451,])
output2 = relay.Tuple([call_10406,call_10418,const_10417,uop_10453,])
func_10454 = relay.Function([], output)
mod['func_10454'] = func_10454
mod = relay.transform.InferType()(mod)
mutated_mod['func_10454'] = func_10454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10454_call = mutated_mod.get_global_var('func_10454')
call_10455 = func_10454_call()
output = call_10455
func_10456 = relay.Function([], output)
mutated_mod['func_10456'] = func_10456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7740_call = mod.get_global_var('func_7740')
func_7741_call = mutated_mod.get_global_var('func_7741')
call_10485 = relay.TupleGetItem(func_7740_call(), 2)
call_10486 = relay.TupleGetItem(func_7741_call(), 2)
output = relay.Tuple([call_10485,])
output2 = relay.Tuple([call_10486,])
func_10493 = relay.Function([], output)
mod['func_10493'] = func_10493
mod = relay.transform.InferType()(mod)
output = func_10493()
func_10494 = relay.Function([], output)
mutated_mod['func_10494'] = func_10494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10501 = relay.var("var_10501", dtype = "float64", shape = (5, 7, 15))#candidate|10501|(5, 7, 15)|var|float64
uop_10502 = relay.sinh(var_10501.astype('float64')) # shape=(5, 7, 15)
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_10505 = relay.TupleGetItem(func_6552_call(), 0)
call_10506 = relay.TupleGetItem(func_6554_call(), 0)
func_6172_call = mod.get_global_var('func_6172')
func_6179_call = mutated_mod.get_global_var('func_6179')
const_10508 = relay.const([[7.889864,-7.921637,9.414437,3.146575,2.070662,-9.323740,-7.518539,-3.662800,-7.441946],[-3.580375,-4.575501,-4.343119,-6.541134,-0.526015,-2.388976,-2.236769,1.019374,4.177962],[6.330209,-6.325656,5.361467,0.712006,6.011654,5.169609,2.930964,-8.790428,8.823423],[-0.764410,7.966696,-4.631216,3.424877,8.785930,-1.775382,5.955514,4.352006,-3.924645],[-8.540362,-5.783373,0.662469,4.261083,7.729019,-7.163586,3.728789,-9.846802,6.069312],[-9.810571,-2.489404,-3.038277,-1.007231,-0.260613,2.356030,4.238142,-2.961118,2.653379],[9.467731,8.300336,4.438855,3.172699,-8.727313,1.246591,-2.332881,-1.101523,1.379406],[0.979371,-2.814935,9.948446,-3.986319,8.530356,5.253449,6.761302,-1.557730,3.735762],[-1.497625,-5.542379,9.150652,3.164671,8.900785,-9.600253,-2.464546,9.871102,2.084490],[-7.814319,1.240284,5.140632,6.045753,6.952567,6.407915,8.225434,1.517483,-5.952320],[2.553855,-8.593996,9.268046,4.164756,2.722713,-4.194197,7.751205,-9.302234,-5.770980],[4.611021,-6.148624,0.016203,-2.016000,-3.178048,-0.697116,-5.393046,-2.500171,4.582703],[4.712824,2.269539,9.190901,9.732700,-0.424112,2.129066,7.725467,-6.326027,7.027062]], dtype = "float32")#candidate|10508|(13, 9)|const|float32
var_10509 = relay.var("var_10509", dtype = "float32", shape = (154,))#candidate|10509|(154,)|var|float32
var_10510 = relay.var("var_10510", dtype = "float64", shape = (3360, 1))#candidate|10510|(3360, 1)|var|float64
var_10511 = relay.var("var_10511", dtype = "uint8", shape = (1, 315))#candidate|10511|(1, 315)|var|uint8
const_10512 = relay.const([-8.699123,0.183828,0.349368,6.429961,2.361559,-8.698260,-0.505395,7.960974,9.222903,4.800532,9.008461,8.118152,7.166031,5.019665,-6.111280,5.263454,4.923201,-5.102407,-2.590610,9.947207,0.169144,-5.385938,6.004111,-8.357783,0.466661,-8.517269,-6.658170,8.348753,-3.562482,-8.531531,4.943055,1.560309,-8.189014,4.760782,1.884702,3.890643,9.156071,5.710686,5.977916,8.329016,5.147259,6.839367,-2.558114,-7.066388,8.870558,2.278180,-7.663786,5.375411,-5.792213,0.831291,0.967992,-3.953559,-8.118382,8.675001,-1.485912,9.487315,-8.096192,3.286523,2.277123,2.293053,-7.650479,3.990006,9.765019,-3.837675,9.653282,-0.930122,-0.787191,3.793025,-7.611112,-6.778211,-0.016855,-3.406759,-6.032766,7.339039,6.911264,-3.920925,0.257042,-0.299328,-1.002536,-7.034587,1.740462,-3.368399,-5.398668,-8.087921,-2.906876,3.323510,-6.493194,0.811077,1.784661,-3.483800,-9.144855,-7.560783,-3.093409,-6.521886,2.146092,0.154701,8.919613,-8.170780,0.700156,-3.979178,8.554569,-6.789330,-7.147260,-6.620811,-4.201012,-4.092486,5.687942,-9.179977,-2.323117,-8.783549,-7.591719,-6.853336,3.506723,7.557527,7.500478,-6.414254,1.006483,4.746617,7.936221,7.567879,-1.956685,-3.460494,-8.367986,-4.766459,5.294324,2.066626,-6.295953,-4.339242,-5.957564,-3.692463,3.969248,0.380435,-7.336356,-1.732702,-6.010022,7.892270,-2.363342,1.409847,3.868165,4.416958,-4.751882,-7.530387,-5.952549,8.709748,-9.965570,-3.365461,-3.350512,-7.688559,-8.396398,-9.388734,-3.630686,-7.065348,0.374964,0.663929,9.330240,-9.815297,2.187830,-7.308944,4.055263,1.787619,3.576777,2.729659,0.241313,-0.792717,9.691296,-1.433978,7.795647,-0.551217,-2.249657,0.815128,-7.087259,-3.353731,-8.995308,0.978820,-0.743550,6.300487,-6.132300,8.242968,-7.192693,-4.768926,7.867818,5.902272,1.509175,3.165278,3.406814,3.116171,-5.371206,-9.175420,-8.710144,-1.118665,-0.314707,-9.861898,6.690542,-8.990004,-1.539797,5.765729,1.730242,-4.680862,-8.193731,3.577325,-3.754470,1.996231,-4.898384,1.582529,5.451886,7.973944,7.046886,-6.658111,6.984628,-5.525046,0.563223,5.312352,-5.794158,6.733485,-3.150747,-3.536871,4.749418,5.611373,9.444104,-6.123518,2.039967,-5.954524,-3.362863,1.563561,0.310122,9.094490,4.864345,-8.751981,-5.909702,-4.678405,-7.866024,6.870906,-9.555211,3.323485,3.660787,-5.982081,1.445449,0.025396,9.450328,6.467057,-2.445059,-5.881346,-3.057968,2.812462,-0.133635,9.969812,-6.103829,9.600735,3.924487,5.609251,-7.618740,1.121719,-3.132357,7.488951,7.924743,5.782408,0.913495,6.947488,-2.695057,-2.161123,-2.522098,7.712165,-4.190407,5.305580,0.146000,-3.311596,-7.838709,0.144742,-8.616906,9.694955,3.922137,2.711051,-5.408987,-1.939268,2.843525,3.300696,-4.857157,6.013723,2.956109,2.336792,8.466582,3.560073,0.104271,-4.273449,3.262457,-0.679010,-6.943043,-1.396125,-5.549826,7.155308,5.419914,-8.065660,1.802180,5.190821,-3.896294,2.837667,-3.881397,-1.894931,3.366055,-2.460933,-2.582729,-2.382656,-7.310719,6.356547,3.606040,5.959113,6.254367,5.587609,0.807472,-9.537652,2.867890,8.533660,-7.436471,2.595567,-4.567779,-7.536144,-1.462032,-5.747502,4.061769,-7.659776,-0.630513,-5.799346,2.102970,5.973043,-5.798429,-3.162191,1.226787,2.285839,5.391278,-1.886638,-5.486135,-7.096828,7.253538,-3.470420,-0.299275,5.267284,-4.355528,4.549075,9.779250,-4.967714,-5.278240,7.384200,-5.705630,4.901853,-6.912497,5.868200,-3.254607,2.026637,-8.412027,6.722293,-7.089813,-9.419317,-1.944719,-2.561987,-7.496100,2.645832,-1.576638,-9.254411,2.179187,-3.679149,3.104819,6.665635,-0.441146,9.847893,-8.915716,8.893940,-3.102459,2.349390,8.061156,-4.880534,-4.318611,-4.004482,4.429578,3.389258,-8.965397,-1.600451,8.003294,-0.396643,-8.849834,0.502500,-0.881135,-7.490675,-5.209680,0.544790,7.524546,8.873065,0.616460,-5.931625,-0.976963,7.831405,-0.217364,8.332699,6.120260,8.847738,5.806343,-5.917907,2.214003,-1.690049,-2.139558,-7.939638,-6.160319,1.232544,1.099665,-6.018981,2.346792,0.697389,5.084741,-6.708413,-1.590679,-2.783633,-2.276259,5.094759,5.734906,8.783908,3.394932,-5.466852,9.239307,1.345407,1.928557,-4.816844], dtype = "float64")#candidate|10512|(420,)|const|float64
call_10507 = relay.TupleGetItem(func_6172_call(relay.reshape(const_10508.astype('float32'), [3, 3, 13]), relay.reshape(const_10508.astype('float32'), [3, 3, 13]), relay.reshape(var_10509.astype('float32'), [154,]), relay.reshape(var_10510.astype('float64'), [3360,]), relay.reshape(var_10511.astype('uint8'), [315,]), relay.reshape(const_10512.astype('float64'), [210, 2]), ), 0)
call_10513 = relay.TupleGetItem(func_6179_call(relay.reshape(const_10508.astype('float32'), [3, 3, 13]), relay.reshape(const_10508.astype('float32'), [3, 3, 13]), relay.reshape(var_10509.astype('float32'), [154,]), relay.reshape(var_10510.astype('float64'), [3360,]), relay.reshape(var_10511.astype('uint8'), [315,]), relay.reshape(const_10512.astype('float64'), [210, 2]), ), 0)
bop_10514 = relay.minimum(var_10509.astype('uint16'), var_10510.astype('uint16')) # shape=(3360, 154)
func_6286_call = mod.get_global_var('func_6286')
func_6287_call = mutated_mod.get_global_var('func_6287')
call_10519 = relay.TupleGetItem(func_6286_call(), 2)
call_10520 = relay.TupleGetItem(func_6287_call(), 2)
output = relay.Tuple([uop_10502,call_10505,call_10507,const_10508,var_10511,const_10512,bop_10514,call_10519,])
output2 = relay.Tuple([uop_10502,call_10506,call_10513,const_10508,var_10511,const_10512,bop_10514,call_10520,])
func_10531 = relay.Function([var_10501,var_10509,var_10510,var_10511,], output)
mod['func_10531'] = func_10531
mod = relay.transform.InferType()(mod)
mutated_mod['func_10531'] = func_10531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10531_call = mutated_mod.get_global_var('func_10531')
var_10533 = relay.var("var_10533", dtype = "float64", shape = (5, 7, 15))#candidate|10533|(5, 7, 15)|var|float64
var_10534 = relay.var("var_10534", dtype = "float32", shape = (154,))#candidate|10534|(154,)|var|float32
var_10535 = relay.var("var_10535", dtype = "float64", shape = (3360, 1))#candidate|10535|(3360, 1)|var|float64
var_10536 = relay.var("var_10536", dtype = "uint8", shape = (1, 315))#candidate|10536|(1, 315)|var|uint8
call_10532 = func_10531_call(var_10533,var_10534,var_10535,var_10536,)
output = call_10532
func_10537 = relay.Function([var_10533,var_10534,var_10535,var_10536,], output)
mutated_mod['func_10537'] = func_10537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9022_call = mod.get_global_var('func_9022')
func_9023_call = mutated_mod.get_global_var('func_9023')
call_10549 = func_9022_call()
call_10550 = func_9022_call()
func_6730_call = mod.get_global_var('func_6730')
func_6732_call = mutated_mod.get_global_var('func_6732')
call_10562 = relay.TupleGetItem(func_6730_call(), 0)
call_10563 = relay.TupleGetItem(func_6732_call(), 0)
func_6049_call = mod.get_global_var('func_6049')
func_6052_call = mutated_mod.get_global_var('func_6052')
const_10588 = relay.const([-1.751784,3.545041,-8.891652,-2.606427,-7.346940,-2.936080,-8.519606,0.275379,-8.172031,3.563347,8.743286,-1.254846,5.886319,5.364837,-4.588948,4.756329,0.702398,8.676383,-0.627465,-9.234268,0.418522,-8.354140,4.147208,-5.657758,-7.848023,-3.038440,4.684920,-1.104672,0.254166,4.086599,-5.329082,-0.003352,4.232452,7.142380,3.434086,6.127453,-1.242829,-6.148102,6.932352,3.921736,6.171394,6.146639,-2.000685,9.352408,2.927933,4.486689,-3.578058,-0.112979,-4.518395,4.247880,9.176590,-9.093161,-5.911804,3.066015,7.119646,8.768117,8.041797,-9.480253,-7.966187,1.433311,-2.759449,2.033423,-3.573010,2.239075,8.851277,4.090598,8.922944,-7.354950,-7.798658,1.752943,-6.427821,-1.776897,-3.742461,9.792725,8.105259,-2.353902,-8.890415,-7.460180,8.631548,9.739794,-8.702115,-9.858678,-2.639406,5.306962,-4.041141,-7.532637,9.392312,-1.416037,2.259349,7.320788,-6.812398,9.680012,6.065619,-9.048897,9.201392,-0.576225,-0.747986,4.243064,3.765040,2.686488,0.511913,2.038350,8.646961,-6.501134,3.345143,0.085920,-8.503470,-7.596003,-6.249523,-1.812644,-5.682605,6.853911], dtype = "float64")#candidate|10588|(112,)|const|float64
const_10589 = relay.const(1, dtype = "uint8")#candidate|10589|()|const|uint8
call_10587 = relay.TupleGetItem(func_6049_call(relay.reshape(const_10588.astype('float64'), [1, 112]), relay.reshape(const_10589.astype('uint8'), []), ), 4)
call_10590 = relay.TupleGetItem(func_6052_call(relay.reshape(const_10588.astype('float64'), [1, 112]), relay.reshape(const_10589.astype('uint8'), []), ), 4)
output = relay.Tuple([call_10549,call_10562,call_10587,const_10588,const_10589,])
output2 = relay.Tuple([call_10550,call_10563,call_10590,const_10588,const_10589,])
func_10596 = relay.Function([], output)
mod['func_10596'] = func_10596
mod = relay.transform.InferType()(mod)
mutated_mod['func_10596'] = func_10596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10596_call = mutated_mod.get_global_var('func_10596')
call_10597 = func_10596_call()
output = call_10597
func_10598 = relay.Function([], output)
mutated_mod['func_10598'] = func_10598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_10630 = relay.TupleGetItem(func_4899_call(), 0)
call_10631 = relay.TupleGetItem(func_4900_call(), 0)
func_7740_call = mod.get_global_var('func_7740')
func_7741_call = mutated_mod.get_global_var('func_7741')
call_10640 = relay.TupleGetItem(func_7740_call(), 0)
call_10641 = relay.TupleGetItem(func_7741_call(), 0)
output = relay.Tuple([call_10630,call_10640,])
output2 = relay.Tuple([call_10631,call_10641,])
func_10654 = relay.Function([], output)
mod['func_10654'] = func_10654
mod = relay.transform.InferType()(mod)
output = func_10654()
func_10655 = relay.Function([], output)
mutated_mod['func_10655'] = func_10655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10704 = relay.var("var_10704", dtype = "float64", shape = (6, 7, 3))#candidate|10704|(6, 7, 3)|var|float64
uop_10705 = relay.asinh(var_10704.astype('float64')) # shape=(6, 7, 3)
func_3538_call = mod.get_global_var('func_3538')
func_3542_call = mutated_mod.get_global_var('func_3542')
var_10713 = relay.var("var_10713", dtype = "uint8", shape = ())#candidate|10713|()|var|uint8
const_10714 = relay.const([[-5],[8],[-5],[9],[6],[5],[7],[-7],[6],[-2],[-3],[7],[10],[7],[-1],[-7],[-7],[8],[-4],[6],[-10],[-6],[-1],[-9],[-3],[5],[-9],[8],[-6],[7],[7],[6],[1],[-7],[-2],[6],[8],[-8],[5],[7],[10],[3]], dtype = "uint8")#candidate|10714|(42, 1)|const|uint8
call_10712 = relay.TupleGetItem(func_3538_call(relay.reshape(var_10713.astype('uint8'), []), relay.reshape(const_10714.astype('uint8'), [3, 1, 14]), ), 0)
call_10715 = relay.TupleGetItem(func_3542_call(relay.reshape(var_10713.astype('uint8'), []), relay.reshape(const_10714.astype('uint8'), [3, 1, 14]), ), 0)
bop_10718 = relay.not_equal(uop_10705.astype('bool'), relay.reshape(var_10704.astype('bool'), relay.shape_of(uop_10705))) # shape=(6, 7, 3)
output = relay.Tuple([call_10712,var_10713,const_10714,bop_10718,])
output2 = relay.Tuple([call_10715,var_10713,const_10714,bop_10718,])
func_10728 = relay.Function([var_10704,var_10713,], output)
mod['func_10728'] = func_10728
mod = relay.transform.InferType()(mod)
mutated_mod['func_10728'] = func_10728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10728_call = mutated_mod.get_global_var('func_10728')
var_10730 = relay.var("var_10730", dtype = "float64", shape = (6, 7, 3))#candidate|10730|(6, 7, 3)|var|float64
var_10731 = relay.var("var_10731", dtype = "uint8", shape = ())#candidate|10731|()|var|uint8
call_10729 = func_10728_call(var_10730,var_10731,)
output = call_10729
func_10732 = relay.Function([var_10730,var_10731,], output)
mutated_mod['func_10732'] = func_10732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_10737 = relay.TupleGetItem(func_6552_call(), 0)
call_10738 = relay.TupleGetItem(func_6554_call(), 0)
output = relay.Tuple([call_10737,])
output2 = relay.Tuple([call_10738,])
func_10752 = relay.Function([], output)
mod['func_10752'] = func_10752
mod = relay.transform.InferType()(mod)
output = func_10752()
func_10753 = relay.Function([], output)
mutated_mod['func_10753'] = func_10753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5295_call = mod.get_global_var('func_5295')
func_5297_call = mutated_mod.get_global_var('func_5297')
call_10756 = relay.TupleGetItem(func_5295_call(), 0)
call_10757 = relay.TupleGetItem(func_5297_call(), 0)
output = call_10756
output2 = call_10757
func_10763 = relay.Function([], output)
mod['func_10763'] = func_10763
mod = relay.transform.InferType()(mod)
mutated_mod['func_10763'] = func_10763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10763_call = mutated_mod.get_global_var('func_10763')
call_10764 = func_10763_call()
output = call_10764
func_10765 = relay.Function([], output)
mutated_mod['func_10765'] = func_10765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8230_call = mod.get_global_var('func_8230')
func_8232_call = mutated_mod.get_global_var('func_8232')
call_10802 = relay.TupleGetItem(func_8230_call(), 0)
call_10803 = relay.TupleGetItem(func_8232_call(), 0)
func_7371_call = mod.get_global_var('func_7371')
func_7373_call = mutated_mod.get_global_var('func_7373')
call_10807 = func_7371_call()
call_10808 = func_7371_call()
output = relay.Tuple([call_10802,call_10807,])
output2 = relay.Tuple([call_10803,call_10808,])
func_10815 = relay.Function([], output)
mod['func_10815'] = func_10815
mod = relay.transform.InferType()(mod)
mutated_mod['func_10815'] = func_10815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10815_call = mutated_mod.get_global_var('func_10815')
call_10816 = func_10815_call()
output = call_10816
func_10817 = relay.Function([], output)
mutated_mod['func_10817'] = func_10817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10596_call = mod.get_global_var('func_10596')
func_10598_call = mutated_mod.get_global_var('func_10598')
call_10818 = relay.TupleGetItem(func_10596_call(), 4)
call_10819 = relay.TupleGetItem(func_10598_call(), 4)
func_3538_call = mod.get_global_var('func_3538')
func_3542_call = mutated_mod.get_global_var('func_3542')
const_10831 = relay.const([4,-7,-5,4,6,4,1,-6,1,1,-5,5,-9,-6,-8,6,-8,-2,-5,9,-8,-5,-2,-5,-2,5,7,1,-10,2,1,10,1,4,-10,9,8,6,7,-3,8,-8], dtype = "uint8")#candidate|10831|(42,)|const|uint8
call_10830 = relay.TupleGetItem(func_3538_call(relay.reshape(call_10818.astype('uint8'), []), relay.reshape(const_10831.astype('uint8'), [3, 1, 14]), ), 0)
call_10832 = relay.TupleGetItem(func_3542_call(relay.reshape(call_10818.astype('uint8'), []), relay.reshape(const_10831.astype('uint8'), [3, 1, 14]), ), 0)
func_4680_call = mod.get_global_var('func_4680')
func_4682_call = mutated_mod.get_global_var('func_4682')
const_10855 = relay.const([7,10,-4,5,3,4,7,7,9,3,-7,9,5,-5,8,-6,9,-5,6,10,-3,3,4,-7,-1,3,9,-3,5,-9,-1,5,3,-3,-4,-10,-7,-7,2,-6,-4,2,2,-8,-3,-7,3,4,-6,5,-10,-6,-6,2,5,-3,-8,2,2,4,-8,10,6,5,3,-9,3,-3,-8,-8,-2,2,8,9,-6,5,-5,5,-3,1,-2,-10,-8,5,8,9,-6,10,-6,4,-2,-8,-8,-8,5,8,4,2,10,7,1,-10,10,-3,-8,8,7,-1,-9,7,-10,1,2,-7,-3,2,2,-2,-3,9,-1,-5,3,7,-5,-5,-9,1,2,-8,2,-10,4,-9,7,8,4,-10,7,10,4,-9,4,6,5,2,4,4,-5,2,-2,4,4,-5,-1,-5,10,8,3,1,-10,7,-6,1,-5,-5,-5,-3,3,2,-10,-1,-10,-4,4,10,8,-7,8,8,-1,2,-4,-5,-2,-2,-3,-5,-1,5,-6,-9,-2,-1,-2,-8,3,-1,5,-7,4,-1,4,1,7,-1,2,-7,4,-7,-8,1,4,-10,7,-6,-7,-7,5,6,-3,4,7,-10,-3,9,-3,-5,-2,6,2,-8,10,-2,3,-6,-7,2,6,-6,2,-10,-6,3,-10,7,2,-5,-1,7,6,-2,8,6,-7,-2,-10,3,-7,-5,-7,1,6,-4,-2,2,-8,1,-8,9,3,-4,6,-8,4,-2,-4,2,10,10,1,-1,6,-3,1,2,5,-7,-1,-4,8,10,10,5,-10,-1,7,-9,4,-1], dtype = "uint16")#candidate|10855|(300,)|const|uint16
call_10854 = relay.TupleGetItem(func_4680_call(relay.reshape(const_10855.astype('uint16'), [6, 10, 5])), 0)
call_10856 = relay.TupleGetItem(func_4682_call(relay.reshape(const_10855.astype('uint16'), [6, 10, 5])), 0)
output = relay.Tuple([call_10818,call_10830,const_10831,call_10854,const_10855,])
output2 = relay.Tuple([call_10819,call_10832,const_10831,call_10856,const_10855,])
func_10863 = relay.Function([], output)
mod['func_10863'] = func_10863
mod = relay.transform.InferType()(mod)
mutated_mod['func_10863'] = func_10863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10863_call = mutated_mod.get_global_var('func_10863')
call_10864 = func_10863_call()
output = call_10864
func_10865 = relay.Function([], output)
mutated_mod['func_10865'] = func_10865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mod.get_global_var('func_7542')
func_7544_call = mutated_mod.get_global_var('func_7544')
call_10877 = relay.TupleGetItem(func_7542_call(), 0)
call_10878 = relay.TupleGetItem(func_7544_call(), 0)
output = relay.Tuple([call_10877,])
output2 = relay.Tuple([call_10878,])
func_10887 = relay.Function([], output)
mod['func_10887'] = func_10887
mod = relay.transform.InferType()(mod)
mutated_mod['func_10887'] = func_10887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10887_call = mutated_mod.get_global_var('func_10887')
call_10888 = func_10887_call()
output = call_10888
func_10889 = relay.Function([], output)
mutated_mod['func_10889'] = func_10889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10887_call = mod.get_global_var('func_10887')
func_10889_call = mutated_mod.get_global_var('func_10889')
call_10939 = relay.TupleGetItem(func_10887_call(), 0)
call_10940 = relay.TupleGetItem(func_10889_call(), 0)
output = call_10939
output2 = call_10940
func_10941 = relay.Function([], output)
mod['func_10941'] = func_10941
mod = relay.transform.InferType()(mod)
output = func_10941()
func_10942 = relay.Function([], output)
mutated_mod['func_10942'] = func_10942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6354_call = mod.get_global_var('func_6354')
func_6355_call = mutated_mod.get_global_var('func_6355')
call_10970 = func_6354_call()
call_10971 = func_6354_call()
output = relay.Tuple([call_10970,])
output2 = relay.Tuple([call_10971,])
func_10978 = relay.Function([], output)
mod['func_10978'] = func_10978
mod = relay.transform.InferType()(mod)
output = func_10978()
func_10979 = relay.Function([], output)
mutated_mod['func_10979'] = func_10979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10763_call = mod.get_global_var('func_10763')
func_10765_call = mutated_mod.get_global_var('func_10765')
call_11000 = func_10763_call()
call_11001 = func_10763_call()
var_11011 = relay.var("var_11011", dtype = "float32", shape = (11, 9, 6))#candidate|11011|(11, 9, 6)|var|float32
bop_11012 = relay.equal(call_11000.astype('bool'), var_11011.astype('bool')) # shape=(11, 9, 6)
bop_11015 = relay.equal(call_11001.astype('bool'), var_11011.astype('bool')) # shape=(11, 9, 6)
output = bop_11012
output2 = bop_11015
func_11023 = relay.Function([var_11011,], output)
mod['func_11023'] = func_11023
mod = relay.transform.InferType()(mod)
var_11024 = relay.var("var_11024", dtype = "float32", shape = (11, 9, 6))#candidate|11024|(11, 9, 6)|var|float32
output = func_11023(var_11024)
func_11025 = relay.Function([var_11024], output)
mutated_mod['func_11025'] = func_11025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10863_call = mod.get_global_var('func_10863')
func_10865_call = mutated_mod.get_global_var('func_10865')
call_11030 = relay.TupleGetItem(func_10863_call(), 1)
call_11031 = relay.TupleGetItem(func_10865_call(), 1)
const_11033 = relay.const([[[2,9,10,-5,-7,1,-6,10,5,-4,-4,3,-6,9]],[[6,5,-3,1,-6,2,-9,-5,9,6,-3,-7,7,-10]],[[-1,-4,3,6,6,1,-6,-7,-5,-10,8,-6,-8,-9]]], dtype = "uint8")#candidate|11033|(3, 1, 14)|const|uint8
bop_11034 = relay.left_shift(call_11030.astype('uint32'), relay.reshape(const_11033.astype('uint32'), relay.shape_of(call_11030))) # shape=(3, 1, 14)
bop_11037 = relay.left_shift(call_11031.astype('uint32'), relay.reshape(const_11033.astype('uint32'), relay.shape_of(call_11031))) # shape=(3, 1, 14)
func_6656_call = mod.get_global_var('func_6656')
func_6658_call = mutated_mod.get_global_var('func_6658')
const_11058 = relay.const([7,-9,-10,4,-2,10,-10,-8,5,-1,-1,-5,-9,-8,8,8,-7,-6,-8,3,-3,-2,2,-3,3,3,-6,-7,-1,2,10,7,-7,-4,-5,4,2,10,-7,-8,8,-4,-2,-9,-6,6,-9,1,6,-2,2,1,-4,-7,4,9,9,-6,6,7,4,-8,-6,2,6,-5,10,4,4,2,9,2,7,-10,-3,5,-10,-4,-3,8,-8,10,8,-1,7,2,7,5,-2,-6,-4,4,-3,-2,-3,-6,5,9,1,-8,3,4,8,3,4,4,-10,4,7,2,8,2,-5,9,-3,4,-10,10,-6,7,4,-10,2,-10,1,2,1,5,7,1,4,9,-4,2,-4,1,-2,2,6,6,7,9,4,-3,-9,-4,-2,6,2,7,9,-3,1,-9,-1,-6,-5,-6,8,-1,-6,7,7,-3,3,4,7,5,5,7,-10,-2,-8,3,10,1,8,3,3,-4,-7,8,-8,-4,-8,-8,-3,-3,-9,-7,2,-4,-5,-4,4,-5,-6,4,8,6,-10,6,5,6,-10,2,10,10,4,6,-4,8,7,-6,2,3,-6,-7,10,6,6,-10,5,-4,8,6,2,-1,-8,4,-1,-5,-5,8,6,5,-2,-10,7,-8,3,-6,-10,4,6,-9,6,-3,-6,8,5,-6,10,-5,-10,-3,-7,-10,8,6,-3,-2,-8,-3,6,-8,7,-9,2,6,-7,6,8,2,1,1,-4,4,7,-6,-9,5,10,2,10,-3,7,-2,5,-2,-3,-10,-7,8,-2,-1,1,-8,10,5], dtype = "uint16")#candidate|11058|(300,)|const|uint16
call_11057 = relay.TupleGetItem(func_6656_call(relay.reshape(const_11058.astype('uint16'), [300,])), 0)
call_11059 = relay.TupleGetItem(func_6658_call(relay.reshape(const_11058.astype('uint16'), [300,])), 0)
func_9022_call = mod.get_global_var('func_9022')
func_9023_call = mutated_mod.get_global_var('func_9023')
call_11062 = func_9022_call()
call_11063 = func_9022_call()
output = relay.Tuple([bop_11034,call_11057,const_11058,call_11062,])
output2 = relay.Tuple([bop_11037,call_11059,const_11058,call_11063,])
func_11073 = relay.Function([], output)
mod['func_11073'] = func_11073
mod = relay.transform.InferType()(mod)
mutated_mod['func_11073'] = func_11073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11073_call = mutated_mod.get_global_var('func_11073')
call_11074 = func_11073_call()
output = call_11074
func_11075 = relay.Function([], output)
mutated_mod['func_11075'] = func_11075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10763_call = mod.get_global_var('func_10763')
func_10765_call = mutated_mod.get_global_var('func_10765')
call_11092 = func_10763_call()
call_11093 = func_10763_call()
output = call_11092
output2 = call_11093
func_11112 = relay.Function([], output)
mod['func_11112'] = func_11112
mod = relay.transform.InferType()(mod)
mutated_mod['func_11112'] = func_11112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11112_call = mutated_mod.get_global_var('func_11112')
call_11113 = func_11112_call()
output = call_11113
func_11114 = relay.Function([], output)
mutated_mod['func_11114'] = func_11114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9194_call = mod.get_global_var('func_9194')
func_9196_call = mutated_mod.get_global_var('func_9196')
call_11118 = relay.TupleGetItem(func_9194_call(), 0)
call_11119 = relay.TupleGetItem(func_9196_call(), 0)
func_10978_call = mod.get_global_var('func_10978')
func_10979_call = mutated_mod.get_global_var('func_10979')
call_11132 = relay.TupleGetItem(func_10978_call(), 0)
call_11133 = relay.TupleGetItem(func_10979_call(), 0)
output = relay.Tuple([call_11118,call_11132,])
output2 = relay.Tuple([call_11119,call_11133,])
func_11134 = relay.Function([], output)
mod['func_11134'] = func_11134
mod = relay.transform.InferType()(mod)
output = func_11134()
func_11135 = relay.Function([], output)
mutated_mod['func_11135'] = func_11135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_11140 = relay.TupleGetItem(func_6552_call(), 0)
call_11141 = relay.TupleGetItem(func_6554_call(), 0)
func_9742_call = mod.get_global_var('func_9742')
func_9743_call = mutated_mod.get_global_var('func_9743')
call_11153 = relay.TupleGetItem(func_9742_call(), 1)
call_11154 = relay.TupleGetItem(func_9743_call(), 1)
output = relay.Tuple([call_11140,call_11153,])
output2 = relay.Tuple([call_11141,call_11154,])
func_11158 = relay.Function([], output)
mod['func_11158'] = func_11158
mod = relay.transform.InferType()(mod)
mutated_mod['func_11158'] = func_11158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11158_call = mutated_mod.get_global_var('func_11158')
call_11159 = func_11158_call()
output = call_11159
func_11160 = relay.Function([], output)
mutated_mod['func_11160'] = func_11160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6554_call = mutated_mod.get_global_var('func_6554')
call_11163 = relay.TupleGetItem(func_6552_call(), 0)
call_11164 = relay.TupleGetItem(func_6554_call(), 0)
output = relay.Tuple([call_11163,])
output2 = relay.Tuple([call_11164,])
func_11178 = relay.Function([], output)
mod['func_11178'] = func_11178
mod = relay.transform.InferType()(mod)
output = func_11178()
func_11179 = relay.Function([], output)
mutated_mod['func_11179'] = func_11179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7767_call = mod.get_global_var('func_7767')
func_7769_call = mutated_mod.get_global_var('func_7769')
call_11191 = func_7767_call()
call_11192 = func_7767_call()
output = relay.Tuple([call_11191,])
output2 = relay.Tuple([call_11192,])
func_11193 = relay.Function([], output)
mod['func_11193'] = func_11193
mod = relay.transform.InferType()(mod)
output = func_11193()
func_11194 = relay.Function([], output)
mutated_mod['func_11194'] = func_11194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mod.get_global_var('func_7542')
func_7544_call = mutated_mod.get_global_var('func_7544')
call_11211 = relay.TupleGetItem(func_7542_call(), 3)
call_11212 = relay.TupleGetItem(func_7544_call(), 3)
output = call_11211
output2 = call_11212
func_11221 = relay.Function([], output)
mod['func_11221'] = func_11221
mod = relay.transform.InferType()(mod)
mutated_mod['func_11221'] = func_11221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11221_call = mutated_mod.get_global_var('func_11221')
call_11222 = func_11221_call()
output = call_11222
func_11223 = relay.Function([], output)
mutated_mod['func_11223'] = func_11223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11073_call = mod.get_global_var('func_11073')
func_11075_call = mutated_mod.get_global_var('func_11075')
call_11327 = relay.TupleGetItem(func_11073_call(), 0)
call_11328 = relay.TupleGetItem(func_11075_call(), 0)
uop_11332 = relay.sinh(call_11327.astype('float32')) # shape=(3, 1, 14)
uop_11334 = relay.sinh(call_11328.astype('float32')) # shape=(3, 1, 14)
func_8290_call = mod.get_global_var('func_8290')
func_8292_call = mutated_mod.get_global_var('func_8292')
var_11344 = relay.var("var_11344", dtype = "float32", shape = (450,))#candidate|11344|(450,)|var|float32
call_11343 = relay.TupleGetItem(func_8290_call(relay.reshape(var_11344.astype('float32'), [5, 9, 10])), 0)
call_11345 = relay.TupleGetItem(func_8292_call(relay.reshape(var_11344.astype('float32'), [5, 9, 10])), 0)
bop_11347 = relay.greater(uop_11332.astype('bool'), relay.reshape(call_11327.astype('bool'), relay.shape_of(uop_11332))) # shape=(3, 1, 14)
bop_11350 = relay.greater(uop_11334.astype('bool'), relay.reshape(call_11328.astype('bool'), relay.shape_of(uop_11334))) # shape=(3, 1, 14)
bop_11361 = relay.floor_mod(uop_11332.astype('float64'), relay.reshape(call_11327.astype('float64'), relay.shape_of(uop_11332))) # shape=(3, 1, 14)
bop_11364 = relay.floor_mod(uop_11334.astype('float64'), relay.reshape(call_11328.astype('float64'), relay.shape_of(uop_11334))) # shape=(3, 1, 14)
output = relay.Tuple([call_11343,var_11344,bop_11347,bop_11361,])
output2 = relay.Tuple([call_11345,var_11344,bop_11350,bop_11364,])
func_11379 = relay.Function([var_11344,], output)
mod['func_11379'] = func_11379
mod = relay.transform.InferType()(mod)
var_11380 = relay.var("var_11380", dtype = "float32", shape = (450,))#candidate|11380|(450,)|var|float32
output = func_11379(var_11380)
func_11381 = relay.Function([var_11380], output)
mutated_mod['func_11381'] = func_11381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10053_call = mod.get_global_var('func_10053')
func_10055_call = mutated_mod.get_global_var('func_10055')
call_11383 = relay.TupleGetItem(func_10053_call(), 0)
call_11384 = relay.TupleGetItem(func_10055_call(), 0)
uop_11387 = relay.sigmoid(call_11383.astype('float64')) # shape=(1, 15, 4)
uop_11389 = relay.sigmoid(call_11384.astype('float64')) # shape=(1, 15, 4)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_11391 = relay.TupleGetItem(func_4899_call(), 0)
call_11392 = relay.TupleGetItem(func_4900_call(), 0)
bop_11395 = relay.left_shift(uop_11387.astype('int8'), relay.reshape(call_11383.astype('int8'), relay.shape_of(uop_11387))) # shape=(1, 15, 4)
bop_11398 = relay.left_shift(uop_11389.astype('int8'), relay.reshape(call_11384.astype('int8'), relay.shape_of(uop_11389))) # shape=(1, 15, 4)
func_10493_call = mod.get_global_var('func_10493')
func_10494_call = mutated_mod.get_global_var('func_10494')
call_11402 = relay.TupleGetItem(func_10493_call(), 0)
call_11403 = relay.TupleGetItem(func_10494_call(), 0)
func_10654_call = mod.get_global_var('func_10654')
func_10655_call = mutated_mod.get_global_var('func_10655')
call_11414 = relay.TupleGetItem(func_10654_call(), 0)
call_11415 = relay.TupleGetItem(func_10655_call(), 0)
func_11073_call = mod.get_global_var('func_11073')
func_11075_call = mutated_mod.get_global_var('func_11075')
call_11420 = relay.TupleGetItem(func_11073_call(), 0)
call_11421 = relay.TupleGetItem(func_11075_call(), 0)
output = relay.Tuple([call_11391,bop_11395,call_11402,call_11414,call_11420,])
output2 = relay.Tuple([call_11392,bop_11398,call_11403,call_11415,call_11421,])
func_11434 = relay.Function([], output)
mod['func_11434'] = func_11434
mod = relay.transform.InferType()(mod)
mutated_mod['func_11434'] = func_11434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11434_call = mutated_mod.get_global_var('func_11434')
call_11435 = func_11434_call()
output = call_11435
func_11436 = relay.Function([], output)
mutated_mod['func_11436'] = func_11436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5704_call = mod.get_global_var('func_5704')
func_5705_call = mutated_mod.get_global_var('func_5705')
call_11442 = func_5704_call()
call_11443 = func_5704_call()
output = relay.Tuple([call_11442,])
output2 = relay.Tuple([call_11443,])
func_11464 = relay.Function([], output)
mod['func_11464'] = func_11464
mod = relay.transform.InferType()(mod)
output = func_11464()
func_11465 = relay.Function([], output)
mutated_mod['func_11465'] = func_11465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11476 = relay.var("var_11476", dtype = "bool", shape = (16, 1, 16))#candidate|11476|(16, 1, 16)|var|bool
var_11477 = relay.var("var_11477", dtype = "bool", shape = (16, 7, 16))#candidate|11477|(16, 7, 16)|var|bool
bop_11478 = relay.logical_and(var_11476.astype('bool'), var_11477.astype('bool')) # shape=(16, 7, 16)
output = bop_11478
output2 = bop_11478
func_11481 = relay.Function([var_11476,var_11477,], output)
mod['func_11481'] = func_11481
mod = relay.transform.InferType()(mod)
var_11482 = relay.var("var_11482", dtype = "bool", shape = (16, 1, 16))#candidate|11482|(16, 1, 16)|var|bool
var_11483 = relay.var("var_11483", dtype = "bool", shape = (16, 7, 16))#candidate|11483|(16, 7, 16)|var|bool
output = func_11481(var_11482,var_11483,)
func_11484 = relay.Function([var_11482,var_11483,], output)
mutated_mod['func_11484'] = func_11484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10654_call = mod.get_global_var('func_10654')
func_10655_call = mutated_mod.get_global_var('func_10655')
call_11499 = relay.TupleGetItem(func_10654_call(), 1)
call_11500 = relay.TupleGetItem(func_10655_call(), 1)
func_11481_call = mod.get_global_var('func_11481')
func_11484_call = mutated_mod.get_global_var('func_11484')
const_11512 = relay.const([False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False], dtype = "bool")#candidate|11512|(256,)|const|bool
const_11513 = relay.const([True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True], dtype = "bool")#candidate|11513|(1792,)|const|bool
call_11511 = func_11481_call(relay.reshape(const_11512.astype('bool'), [16, 1, 16]), relay.reshape(const_11513.astype('bool'), [16, 7, 16]), )
call_11514 = func_11481_call(relay.reshape(const_11512.astype('bool'), [16, 1, 16]), relay.reshape(const_11513.astype('bool'), [16, 7, 16]), )
func_6462_call = mod.get_global_var('func_6462')
func_6464_call = mutated_mod.get_global_var('func_6464')
call_11518 = func_6462_call()
call_11519 = func_6462_call()
output = relay.Tuple([call_11499,call_11511,const_11512,const_11513,call_11518,])
output2 = relay.Tuple([call_11500,call_11514,const_11512,const_11513,call_11519,])
func_11528 = relay.Function([], output)
mod['func_11528'] = func_11528
mod = relay.transform.InferType()(mod)
output = func_11528()
func_11529 = relay.Function([], output)
mutated_mod['func_11529'] = func_11529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10978_call = mod.get_global_var('func_10978')
func_10979_call = mutated_mod.get_global_var('func_10979')
call_11530 = relay.TupleGetItem(func_10978_call(), 0)
call_11531 = relay.TupleGetItem(func_10979_call(), 0)
uop_11552 = relay.cos(call_11530.astype('float64')) # shape=(11, 1, 6)
uop_11554 = relay.cos(call_11531.astype('float64')) # shape=(11, 1, 6)
func_8683_call = mod.get_global_var('func_8683')
func_8684_call = mutated_mod.get_global_var('func_8684')
call_11564 = relay.TupleGetItem(func_8683_call(), 1)
call_11565 = relay.TupleGetItem(func_8684_call(), 1)
output = relay.Tuple([uop_11552,call_11564,])
output2 = relay.Tuple([uop_11554,call_11565,])
func_11568 = relay.Function([], output)
mod['func_11568'] = func_11568
mod = relay.transform.InferType()(mod)
mutated_mod['func_11568'] = func_11568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11568_call = mutated_mod.get_global_var('func_11568')
call_11569 = func_11568_call()
output = call_11569
func_11570 = relay.Function([], output)
mutated_mod['func_11570'] = func_11570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6462_call = mod.get_global_var('func_6462')
func_6464_call = mutated_mod.get_global_var('func_6464')
call_11597 = func_6462_call()
call_11598 = func_6462_call()
func_8333_call = mod.get_global_var('func_8333')
func_8334_call = mutated_mod.get_global_var('func_8334')
call_11606 = relay.TupleGetItem(func_8333_call(), 0)
call_11607 = relay.TupleGetItem(func_8334_call(), 0)
output = relay.Tuple([call_11597,call_11606,])
output2 = relay.Tuple([call_11598,call_11607,])
func_11628 = relay.Function([], output)
mod['func_11628'] = func_11628
mod = relay.transform.InferType()(mod)
mutated_mod['func_11628'] = func_11628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11628_call = mutated_mod.get_global_var('func_11628')
call_11629 = func_11628_call()
output = call_11629
func_11630 = relay.Function([], output)
mutated_mod['func_11630'] = func_11630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9691_call = mod.get_global_var('func_9691')
func_9693_call = mutated_mod.get_global_var('func_9693')
call_11736 = relay.TupleGetItem(func_9691_call(), 3)
call_11737 = relay.TupleGetItem(func_9693_call(), 3)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
const_11747 = relay.const([-7.918568,0.847815,3.790109,1.490721,8.731504,9.827878,9.120084,-6.889087,3.951095,9.651959,-8.640270,-4.620123,4.707403,-3.958651,6.503853,7.679521,-9.141598,-6.994875,-4.321995,-3.355011,-4.631733,-6.195247,-3.511242,-8.068538,4.045808,5.131145,7.037544,4.484017,-5.369854,2.784293,0.858616,0.680314,8.493956,6.746991,7.976297,6.495956,-7.330286,7.069090,-7.808370,-2.602708,0.563936,8.113980,9.603598,-7.285300,-7.077170,-2.965716,-0.610857,2.575695,0.480425,-6.833422,2.309755,-5.977099,9.108957,-0.152147,-0.809797,7.492747,-6.183244,-5.048702,7.139276,5.316749,-7.476643,8.629915,2.456413,1.214788,-9.599186,0.422857,3.814904,7.671226,-1.239237,9.134325,-8.134793,-3.616381,4.499292,-3.309226,1.504568,1.671133,7.103122,0.690888,7.555846,-5.054294,-2.764287,5.201411,7.364268,-2.719659,3.726052,-1.622681,-2.932126,-1.107739,9.960907,-4.416000,7.448012,0.187111,-8.090356,2.799923,7.124616,3.487638,-9.579809,6.814786,5.953124,3.168267,2.560150,-0.031878,-3.498875,-6.649463,-8.189801,1.837986,-1.211834,-4.639140,7.069104,-1.450972,4.223356,-4.589704,4.230358,-0.876597,3.260997,7.794115,4.943576,-6.299678,-8.974173,-8.617377,1.354072,-9.312801,-7.396049,-7.147760,2.783660,-5.356059,2.212133,-6.064572,-6.052349,9.386629,-1.045235,5.140278,0.602125,4.544695,-1.758107,-6.852362,5.998301,7.031293,4.923336,5.412835,-9.324827,-7.355173,-5.353494,-8.473884,0.596845,-0.100589,-2.157882,7.984598,4.374386,-7.959279,-7.822786,2.740154,5.518399,1.857860,2.106263,8.082532,-0.158018,9.489030,-8.304592,-0.534850,3.921203,1.843226,-7.501077,8.798210,-1.655212,1.425802,-8.480953,-4.038403,9.581429,2.906128,0.959419,-9.464612,-9.576485,-5.863594,-2.047612,-9.252800,-7.261091,6.135896,-5.478156,-7.099218,-2.558954,-6.812511,3.021855,2.359364,-1.545338,6.788450,0.909943,-8.639244,4.271417,7.753885,4.596675,0.572170,9.420068,-8.589123,-2.565775,-1.991280,-5.777194,3.419080,-5.419320,-7.134917,5.630882,-0.593832,9.390135,-9.039868,5.097857,-0.023652,9.486853,-7.242461,9.390269,6.090228,-2.169019,-1.580089,-6.941448,-4.137923,-7.883154,5.753014,-5.732083,8.864101,-9.167676,-6.869294,6.980916,-4.156511,-1.829498,6.578445,1.449715,8.609474,0.731505,-1.080218,-7.128935,-7.267642,9.242904,-3.409241,9.907590,-4.835691,-7.708304,0.882990,8.312895,-6.373305,2.912175,4.969533,-9.584922,-4.102754,0.106084,4.594132,3.711932,-6.553609,-1.711236,-5.246864,-6.805618,5.850720,1.071435,-3.318062,7.095522,-7.841652,5.697516,5.799188,5.336307,1.692076,1.732243,-0.987714,-2.058224,7.518931,7.795068,-6.526592,-3.919407,-8.978531,-7.855797,8.914342,-6.438202,-5.834215,6.685205,0.479218,3.363561,0.755607,-3.726713,8.489509,9.657188,9.588130,-1.022610,-5.930510,8.832113,-3.691613,-9.181222,6.461961,-0.618566,-5.506290,-8.575498,-2.594485,-2.707423,-9.837900,8.444538,7.840195,-4.666896,3.458620,-4.015176,-8.831089,2.752413,0.900567,-4.182976,-5.154267,2.308621,-6.942994,-5.977857,4.512167,0.997981,8.715686,-4.955142,6.474413,5.180649,9.243391,-3.198529,-6.125631,7.400271,0.693869,-5.654820,-3.185075,-1.282544,9.998151,1.938834,9.743243,-8.456011,5.963319,0.286311,-0.360807,0.608326,-0.483697,2.572652,1.459239,5.443951,-7.179671,-4.076309,7.535228,2.002235,-4.254706,0.413788,6.754407,-7.411181,-0.091020,9.801864,2.324457,1.172071,2.377683,-4.579461,1.007391,6.938500,6.929130,-8.544693,7.129036,-9.355787,-1.135713,4.120693,6.475690,-4.190710,-5.382926,-2.778267,-3.044209,5.164057,-2.531370,9.718927,9.315731,5.301773,-5.503472,8.032946,-9.838164,8.050623,-3.744203,-3.015158,0.002981,9.093722,8.218561,9.491098,1.824270,8.308152,-3.121733,9.320886,0.683527,-2.685552,-5.325463,2.007741,2.991425,5.058718,-3.105435,-6.418966,-4.894653,1.107630,9.270258,-0.125515,2.912273,9.141729,-2.516517,-2.137727,2.312258,0.143385,-2.565349,-4.663630,-8.468527,3.098333,-4.334579,-4.387885,-6.248002,-2.581380,-7.095421,-2.897750,-1.581689,8.953789,5.557776,-1.032499,-8.819129,-3.482477,0.901999,9.487331,8.980837,-5.013014,-6.328173,-6.766156,-2.603987,-5.468599,8.514929,-8.711965,-1.895231], dtype = "float64")#candidate|11747|(420,)|const|float64
call_11746 = relay.TupleGetItem(func_469_call(relay.reshape(const_11747.astype('float64'), [4, 7, 15]), relay.reshape(const_11747.astype('float64'), [4, 7, 15]), ), 0)
call_11748 = relay.TupleGetItem(func_472_call(relay.reshape(const_11747.astype('float64'), [4, 7, 15]), relay.reshape(const_11747.astype('float64'), [4, 7, 15]), ), 0)
func_9113_call = mod.get_global_var('func_9113')
func_9120_call = mutated_mod.get_global_var('func_9120')
var_11769 = relay.var("var_11769", dtype = "float32", shape = (6, 99))#candidate|11769|(6, 99)|var|float32
const_11770 = relay.const([2,-3,-9,1,-6,-7,-4,8,-2,1,-4,-1,1,9,3,4,-5,6,-10,1,-3,10,-5,-5,-5,-2,9,7,5,3,2,-3,-6,3,8,-9,2,10,10,-2,-4,-4], dtype = "uint8")#candidate|11770|(42,)|const|uint8
var_11771 = relay.var("var_11771", dtype = "float64", shape = (3360,))#candidate|11771|(3360,)|var|float64
call_11768 = relay.TupleGetItem(func_9113_call(relay.reshape(var_11769.astype('float32'), [3, 198]), relay.reshape(var_11769.astype('float32'), [3, 198]), relay.reshape(const_11770.astype('uint8'), [42,]), relay.reshape(var_11771.astype('float64'), [1680, 2]), relay.reshape(call_11736.astype('uint8'), [315,]), ), 11)
call_11772 = relay.TupleGetItem(func_9120_call(relay.reshape(var_11769.astype('float32'), [3, 198]), relay.reshape(var_11769.astype('float32'), [3, 198]), relay.reshape(const_11770.astype('uint8'), [42,]), relay.reshape(var_11771.astype('float64'), [1680, 2]), relay.reshape(call_11736.astype('uint8'), [315,]), ), 11)
output = relay.Tuple([call_11736,call_11746,const_11747,call_11768,var_11769,const_11770,var_11771,])
output2 = relay.Tuple([call_11737,call_11748,const_11747,call_11772,var_11769,const_11770,var_11771,])
func_11781 = relay.Function([var_11769,var_11771,], output)
mod['func_11781'] = func_11781
mod = relay.transform.InferType()(mod)
var_11782 = relay.var("var_11782", dtype = "float32", shape = (6, 99))#candidate|11782|(6, 99)|var|float32
var_11783 = relay.var("var_11783", dtype = "float64", shape = (3360,))#candidate|11783|(3360,)|var|float64
output = func_11781(var_11782,var_11783,)
func_11784 = relay.Function([var_11782,var_11783,], output)
mutated_mod['func_11784'] = func_11784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9712_call = mod.get_global_var('func_9712')
func_9713_call = mutated_mod.get_global_var('func_9713')
call_11798 = relay.TupleGetItem(func_9712_call(), 0)
call_11799 = relay.TupleGetItem(func_9713_call(), 0)
output = relay.Tuple([call_11798,])
output2 = relay.Tuple([call_11799,])
func_11826 = relay.Function([], output)
mod['func_11826'] = func_11826
mod = relay.transform.InferType()(mod)
output = func_11826()
func_11827 = relay.Function([], output)
mutated_mod['func_11827'] = func_11827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7927_call = mod.get_global_var('func_7927')
func_7928_call = mutated_mod.get_global_var('func_7928')
call_11840 = relay.TupleGetItem(func_7927_call(), 6)
call_11841 = relay.TupleGetItem(func_7928_call(), 6)
output = relay.Tuple([call_11840,])
output2 = relay.Tuple([call_11841,])
func_11846 = relay.Function([], output)
mod['func_11846'] = func_11846
mod = relay.transform.InferType()(mod)
mutated_mod['func_11846'] = func_11846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11846_call = mutated_mod.get_global_var('func_11846')
call_11847 = func_11846_call()
output = call_11847
func_11848 = relay.Function([], output)
mutated_mod['func_11848'] = func_11848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10941_call = mod.get_global_var('func_10941')
func_10942_call = mutated_mod.get_global_var('func_10942')
call_11920 = func_10941_call()
call_11921 = func_10941_call()
func_5533_call = mod.get_global_var('func_5533')
func_5535_call = mutated_mod.get_global_var('func_5535')
var_11931 = relay.var("var_11931", dtype = "float32", shape = (960,))#candidate|11931|(960,)|var|float32
call_11930 = relay.TupleGetItem(func_5533_call(relay.reshape(var_11931.astype('float32'), [240, 4])), 1)
call_11932 = relay.TupleGetItem(func_5535_call(relay.reshape(var_11931.astype('float32'), [240, 4])), 1)
output = relay.Tuple([call_11920,call_11930,var_11931,])
output2 = relay.Tuple([call_11921,call_11932,var_11931,])
func_11938 = relay.Function([var_11931,], output)
mod['func_11938'] = func_11938
mod = relay.transform.InferType()(mod)
var_11939 = relay.var("var_11939", dtype = "float32", shape = (960,))#candidate|11939|(960,)|var|float32
output = func_11938(var_11939)
func_11940 = relay.Function([var_11939], output)
mutated_mod['func_11940'] = func_11940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_11991 = func_5285_call()
call_11992 = func_5285_call()
output = call_11991
output2 = call_11992
func_12007 = relay.Function([], output)
mod['func_12007'] = func_12007
mod = relay.transform.InferType()(mod)
mutated_mod['func_12007'] = func_12007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12007_call = mutated_mod.get_global_var('func_12007')
call_12008 = func_12007_call()
output = call_12008
func_12009 = relay.Function([], output)
mutated_mod['func_12009'] = func_12009
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12015 = relay.const([[[6,-2,-5,-2,7,3,10,-5,-2,7,-8,-7,-1,9,-10],[9,-10,-8,-10,-7,4,10,-3,8,5,-5,-4,9,-7,-7],[7,-4,1,-1,4,-9,-7,-2,-3,-6,-8,1,-5,7,3],[10,4,-6,-8,5,4,-10,-2,-1,-5,-3,-10,-4,9,9],[-7,-1,-7,-3,3,-8,-3,-5,-1,2,-3,-8,1,10,-1],[-1,9,9,-6,-2,-2,3,-7,2,7,5,-9,3,-2,10],[-3,4,-3,-2,7,8,-2,-7,-1,8,-5,8,-5,5,-7],[3,-8,-5,-1,-7,-9,-2,-8,-2,9,9,-5,7,-1,9],[9,-7,10,5,-7,4,9,-8,4,-10,-2,-5,7,6,6],[3,9,2,1,3,-2,-7,10,10,5,-4,-10,-3,3,-2],[-7,4,-6,-5,4,9,2,6,9,-5,7,-1,-10,-3,-6],[-2,9,-8,2,4,-1,1,6,7,-3,-2,-4,7,-7,-7],[-5,-7,6,-1,-9,4,9,5,-1,3,-7,-8,7,-2,-6],[-1,-7,7,-2,-2,7,-4,1,4,-2,-10,1,9,-3,-6],[10,-2,-4,2,1,-10,10,-5,-3,-7,-5,5,2,5,3]],[[-6,9,-1,9,8,7,-10,-1,-2,-5,9,-3,-5,-8,-2],[-4,-5,-6,-3,-10,-7,-10,-8,4,-5,-6,-9,1,-7,8],[10,-8,2,-1,-3,7,-10,8,8,-7,-1,9,5,5,9],[-9,-5,5,-3,4,9,-5,-10,6,-5,3,7,7,4,-2],[-7,-5,8,-10,6,6,-7,2,-5,5,3,-7,10,10,8],[-8,-3,-9,-2,-5,-5,2,3,7,-6,8,-10,8,9,-7],[-10,-1,-9,7,1,10,2,-8,-7,2,1,1,-5,3,-8],[10,-7,-2,-3,-6,2,2,7,10,-9,7,4,-1,-8,-2],[5,6,-3,6,9,2,-9,5,4,-10,-8,3,9,-1,-8],[-5,5,5,-10,-5,5,8,2,10,1,-1,8,-2,-5,6],[-8,-6,-10,10,-2,-9,-2,10,2,-10,-1,1,4,-8,8],[2,-5,-8,9,-5,5,-9,10,-1,-1,-7,-1,-2,4,3],[4,-8,6,-3,6,-8,-1,7,10,8,-8,-4,3,-3,-9],[-7,-2,3,-10,4,6,8,3,-1,-3,4,3,-2,5,-1],[2,7,-4,-3,-7,-2,-1,10,-6,-4,-1,-2,-6,9,10]],[[6,-10,7,5,10,-4,-5,-5,-8,-8,-1,9,-1,10,6],[2,3,7,7,7,-4,-4,-8,3,-1,8,-10,-9,-4,3],[-10,-4,-6,-2,-2,2,4,6,4,-9,10,9,4,3,7],[-8,10,2,2,2,-7,-2,2,-4,-7,3,8,-9,10,-10],[9,-7,-7,-6,-7,5,-5,-4,6,3,-10,-3,10,1,-6],[-8,9,4,6,-7,10,-6,2,2,-9,1,1,8,-6,3],[1,4,9,-6,-10,10,6,7,-8,-5,-3,-6,8,8,-4],[5,2,-7,-9,-8,7,-1,1,-10,8,-6,2,7,-6,4],[-8,7,-10,1,-9,-8,-6,-9,8,6,7,-9,3,-8,3],[-1,3,-10,-4,10,-1,-10,-1,4,10,-7,3,5,10,-5],[7,3,-7,1,-6,-7,-1,-4,5,2,-9,4,3,-7,5],[7,9,-10,-4,10,-1,-9,-1,5,-2,-3,5,10,-9,4],[-9,3,-4,-6,3,-10,-10,-9,3,-9,2,-5,-1,7,-4],[-3,-6,2,-9,-8,-2,-9,9,-5,1,-9,-8,-9,1,-1],[1,-7,10,4,-6,4,-5,4,10,-8,5,-5,4,-4,-2]],[[-8,-8,-7,-2,2,7,10,10,6,3,-2,-3,-1,-10,10],[1,4,-2,-10,4,-6,9,-1,-10,-10,2,3,-8,2,1],[-2,1,2,5,-10,5,9,2,2,10,-6,5,-10,8,-2],[6,-1,-8,-2,6,-3,8,6,2,3,-1,4,10,10,-8],[7,6,2,-1,-6,-8,2,1,-7,8,-6,-9,-7,-6,7],[9,9,1,9,8,3,-4,-4,-2,9,9,1,6,6,-6],[6,-8,1,8,1,5,4,8,-6,10,-10,-1,-8,-10,-10],[9,2,-3,-7,2,9,-4,9,-2,2,-10,-1,-5,9,3],[-4,5,10,-8,9,4,7,2,10,3,-5,6,6,-5,9],[-6,2,10,9,8,-7,-9,-10,2,-4,2,10,3,1,10],[-8,4,8,-2,1,-9,2,-7,-7,-4,6,10,6,-9,-3],[-9,-7,-9,-9,4,-10,-2,-10,-7,-10,10,9,-9,5,-3],[10,9,7,4,8,-9,2,-3,10,3,-2,-3,3,7,-3],[6,4,-1,-1,10,5,-2,-1,-1,-6,1,7,1,8,-8],[10,-4,-9,-7,2,-4,5,3,-10,6,-1,5,3,-10,4]],[[3,3,-8,4,3,-1,2,10,3,-2,-7,10,-10,8,5],[9,-5,7,5,7,7,4,7,7,-5,10,1,-3,-2,-5],[2,5,6,-9,1,-8,5,8,-5,1,-3,1,-1,-8,-7],[10,-5,-7,4,2,3,6,10,-1,8,-7,4,-8,4,10],[7,3,4,6,7,5,-8,1,4,4,-5,-4,9,-6,8],[-6,-5,-8,8,-6,2,4,-10,-9,-6,-6,-6,-2,4,9],[3,4,4,-6,8,7,1,9,8,-6,4,7,-4,-4,4],[-8,-9,-6,6,5,-2,-3,6,4,3,10,2,5,4,-2],[-3,7,5,-6,5,-5,6,10,2,-7,4,2,5,-9,9],[9,-4,-5,-2,-9,4,4,2,5,-9,-10,-10,-8,10,-3],[-1,-10,-1,-5,7,9,-8,3,-8,5,-1,-2,-7,-7,8],[-7,-4,-7,3,-7,-3,-4,-1,2,-7,9,-2,-10,-9,-10],[-1,-9,6,-2,-7,-1,-7,-3,2,-8,-2,9,-5,-7,-8],[-5,-3,-5,-2,8,-6,-4,-4,9,-2,-6,-3,-2,-2,7],[3,-10,-8,-7,-2,2,4,10,2,-3,-8,3,-2,2,-2]],[[-7,-2,-5,-1,-3,-5,-10,-2,6,-2,2,-8,3,-10,7],[5,8,8,-10,-6,-4,9,-2,4,8,-9,-8,-5,-8,-4],[-8,-6,6,2,6,8,-8,2,1,10,-4,10,-3,-2,2],[5,-7,-8,8,9,-7,2,8,-7,-3,-8,3,8,-3,-8],[-8,-6,-7,-10,-2,7,-7,-7,4,-6,9,4,2,-2,6],[-1,-5,9,-9,7,7,-3,4,3,-3,6,1,-6,4,9],[7,4,4,4,-4,9,4,8,-1,7,-10,-8,3,-5,1],[6,-1,-4,6,2,-8,3,-2,-1,2,7,-10,-4,-10,-9],[10,-10,8,9,1,-5,-2,-4,-1,-9,2,-6,2,5,-6],[2,-2,10,8,5,3,-10,-10,1,-9,6,-6,-4,-10,-8],[-3,-6,-5,-4,-8,-2,-3,-5,-9,4,-5,-9,-3,-9,4],[-3,10,-4,6,9,9,4,-6,-4,-5,2,9,3,6,6],[1,-9,-9,-7,-2,-10,8,2,-4,10,7,1,3,9,-6],[-1,4,-10,-2,-5,-1,-5,8,-4,4,-2,-8,-8,-9,-2],[1,3,-5,6,8,-2,-8,-10,6,9,-10,2,5,8,-6]]], dtype = "uint32")#candidate|12015|(6, 15, 15)|const|uint32
var_12016 = relay.var("var_12016", dtype = "uint32", shape = (6, 15, 15))#candidate|12016|(6, 15, 15)|var|uint32
bop_12017 = relay.subtract(const_12015.astype('uint32'), relay.reshape(var_12016.astype('uint32'), relay.shape_of(const_12015))) # shape=(6, 15, 15)
func_6286_call = mod.get_global_var('func_6286')
func_6287_call = mutated_mod.get_global_var('func_6287')
call_12034 = relay.TupleGetItem(func_6286_call(), 2)
call_12035 = relay.TupleGetItem(func_6287_call(), 2)
func_10531_call = mod.get_global_var('func_10531')
func_10537_call = mutated_mod.get_global_var('func_10537')
const_12074 = relay.const([-7.188303,7.342252,-7.280139,8.338853,6.232873,7.781886,-0.581443,2.012160,-0.322675,-9.966599,-3.740685,-1.313186,2.902428,6.773896,-8.648835,0.759972,-1.482103,6.793271,7.407149,-7.643631,5.667808,-4.899963,-6.474563,-5.089896,1.406832,-9.577536,8.259336,8.454236,-6.642164,6.479663,-6.580842,7.321355,3.159592,0.030833,4.257617,-7.995615,2.381685,-3.560249,-1.343007,9.339966,4.096490,9.135705,-3.721769,3.451658,2.999113,-2.241315,-3.380594,8.530224,-4.165774,-7.236786,-0.105076,-8.869291,-8.167673,-7.658720,-8.914281,-3.557377,9.975423,-3.149227,-9.292196,-8.503242,-1.680189,7.166841,-2.199338,-6.162160,-1.481662,-0.908133,2.491789,-3.745392,-4.987255,4.086257,-5.315900,-6.083952,9.444302,-6.364689,4.520790,-4.003985,9.009608,-1.674131,-0.598144,-5.722416,1.076403,3.673610,-9.967640,-0.331609,-5.826248,3.061498,7.275401,-3.099108,-3.616582,1.983457,2.345221,4.693974,9.997644,-8.625918,-2.071181,-9.382570,-0.029655,6.759458,-1.998211,6.927018,3.759632,1.437616,-2.368637,3.799648,-2.672664,-0.115237,-5.685060,-1.506433,7.507897,5.711989,-2.699322,-2.367373,-3.311909,1.412406,5.599323,3.413236,4.306219,-5.267692,3.439299,-8.806478,-1.953160,1.082371,-8.663452,-0.188704,7.714410,6.860913,-4.045615,-7.010656,1.673570,7.254445,-2.710426,0.340814,7.319867,7.112020,-5.563897,6.530853,7.702827,8.981610,-1.569171,1.012929,-5.162055,5.765452,-3.046497,9.788420,3.606114,2.656872,0.775126,8.812303,-5.543084,3.034592,-2.449132,4.038045,-0.091862,8.456788,-4.388304,-2.016002,-4.834913,3.833397,8.471980,-6.859447,6.181420,-4.356657,6.461216,-7.426200,-1.619997,-3.057665,-6.130311,-9.000782,-1.455804,0.995311,7.222312,1.645134,-2.926133,-5.594651,2.220217,-2.011695,-3.105048,-4.519968,9.116195,6.650413,-9.914097,-1.744135,7.349260,8.705674,5.101681,7.394020,-3.620362,-7.288035,6.872832,-4.686865,3.490139,-2.057200,1.614454,9.505906,2.734774,1.840180,-4.863674,-4.353079,-8.758427,-6.937277,-1.111371,-0.311550,-8.755639,1.284493,-2.226402,8.485648,7.635099,1.471151,-3.846747,6.931721,-3.611718,9.539188,-8.170676,-4.227860,-0.410452,-2.242365,-4.287277,3.371062,0.245631,8.822275,7.485448,-5.323913,-2.586160,0.550248,-6.349104,-1.567975,4.967638,-7.291900,3.668112,8.756184,7.370549,-2.145283,-9.794125,-1.802814,1.345213,7.268960,-5.911267,4.044818,-7.543632,5.777438,8.153228,4.838442,-4.049238,-2.434159,-2.450396,3.168697,-6.617301,-9.444557,3.169062,-2.103267,-7.954035,1.043167,8.173160,4.431147,-6.555400,1.461045,-9.136002,-7.543485,-1.558537,-4.610824,-4.125579,-2.343884,7.352778,-6.351588,0.211911,9.341880,-1.122579,7.431124,1.611508,0.293466,0.535144,3.341495,5.324880,-8.563423,2.023181,0.353240,-0.748236,-1.780370,-6.219879,0.411842,5.483976,4.474072,6.511582,-3.297815,3.420412,-6.789724,-0.944473,-7.447394,-7.224194,9.155652,7.625961,2.441503,-7.512736,1.600923,-7.327648,-9.056137,-3.542019,-2.147128,-0.498005,-5.736348,-7.123804,7.716525,1.259561,1.175999,-3.647915,1.565111,5.295130,-3.372944,-4.828474,-5.309000,-9.336475,-7.142502,-9.103334,-2.408053,4.673907,-4.452007,-3.400661,-1.994857,8.468381,1.289047,-7.862808,3.483967,0.805690,4.667921,2.935808,9.710532,6.967045,-3.476475,-6.135977,-2.398920,-6.508298,1.180540,-4.641609,-9.832784,1.846073,-1.291776,-7.150254,3.086039,9.341256,8.672946,-7.807365,-5.987939,-3.686324,3.036369,2.767359,5.299945,-6.583153,-8.803631,-2.889820,-3.961458,-7.192621,-4.476892,-7.590448,8.085277,-4.858788,2.550034,0.471638,-3.137157,-7.037168,-8.798672,-4.114956,3.212264,-0.836220,2.178101,-6.966816,6.557869,-7.656795,3.632662,9.535367,-0.174871,9.305008,3.241151,7.404921,0.630997,9.055714,-0.759970,8.969427,5.314913,4.770151,-5.375295,-0.180043,6.586308,6.553331,-6.624590,9.216299,2.441281,-8.058820,8.600319,-5.175077,0.037722,-6.756785,9.265486,-8.753869,2.137542,-7.782637,4.805232,9.365719,2.320093,-0.544379,-9.124958,1.193865,-3.876758,-5.470112,5.246904,-4.238548,-9.763203,-1.923211,-6.007534,-0.726398,9.194715,-2.807763,-4.256957,6.664602,-5.011514,7.680389,7.828595,-9.060945,-5.141159,9.414726,-0.288690,-2.235800,-4.936268,-7.547525,9.957177,-4.833786,3.731815,-4.386319,8.239046,-9.774244,6.011577,-2.404908,-2.794152,-8.770554,4.447546,-4.782549,-7.954215,-5.827559,-0.666264,3.295297,-7.143321,-2.484089,-5.369873,5.534532,-3.036765,-4.851219,9.859801,-1.971922,5.171293,-4.062725,-6.772632,-0.056489,0.552396,7.104503,-6.488044,-0.241728,-9.087556,-9.179543,6.626932,-0.595565,8.772071,6.045172,0.956624,-0.571286,-2.547607,1.799260,-7.013174,2.697473,6.705912,7.311619,-1.660938,-0.831615,-2.465451,3.919785,-9.898740,8.277480,-0.416043,-3.131684,-7.749884,8.120511,5.047677,5.680814,-9.015366,9.224448,5.900028,5.652064,-4.063904,-3.922582,6.750013,-1.525811,-9.478524,8.810709,-4.976763,-2.688170,8.473570,-6.739082,4.607121,-1.704334,-3.827238,1.346994,-1.385325,2.484108,-9.984619,7.044670,-5.305333,0.939925,1.455726,1.658986,-9.547456,-2.531877,4.668971,-9.694536,-5.285328,9.083494,-6.657594,-0.419521,4.506787,-7.131821,2.799158,6.290142,6.220930,-3.881293,-9.840881,9.887502,-2.017569,-6.134654], dtype = "float64")#candidate|12074|(525,)|const|float64
var_12075 = relay.var("var_12075", dtype = "float32", shape = (154,))#candidate|12075|(154,)|var|float32
const_12076 = relay.const([-2.635307,-8.734808,-1.561184,5.977854,-1.869255,2.585109,4.819126,-3.327389,4.538050,-6.858375,9.641768,-6.776641,4.402385,-7.065300,-6.133465,-1.925157,1.993609,-4.575641,9.871480,5.291426,8.224797,-5.551706,0.514890,-3.981947,-3.074100,-4.817097,4.817039,2.387526,5.845662,2.107874,1.334275,-3.397661,-5.564690,-7.229540,-4.543620,2.321990,-7.219547,-6.915772,-9.844714,4.420407,9.193591,-9.739362,-7.075373,5.437397,2.884421,8.073553,-3.634539,7.464429,-7.745401,9.262655,8.548247,-9.693026,-4.011786,7.757612,6.613731,1.642732,-8.287304,9.355544,9.862947,-6.201578,5.288062,9.910854,7.366783,-2.242412,3.477250,-6.790489,-4.223478,-9.105208,3.336447,2.858475,-9.686309,2.236903,-9.673238,7.273385,0.434388,-5.804619,9.642195,3.970123,-9.162491,8.453328,4.720309,1.603336,-2.975088,-2.809532,9.768571,5.525688,-1.452190,2.385166,0.051220,-4.586036,-0.342905,-0.171238,-3.281910,4.088671,9.300539,-7.590184,-1.804573,8.985070,-2.840963,1.351818,2.370446,0.895880,8.777430,7.108323,-4.100187,-6.841970,-7.358013,-3.613962,-7.820276,-0.316061,-6.849956,-6.057938,-1.060154,-5.388961,5.119863,-6.081286,-9.415688,-0.092069,-9.305941,-3.397822,6.982775,-6.774314,9.513391,-2.142240,-7.555490,-2.781419,-9.806120,6.814396,-1.842058,4.328886,3.518579,-6.753865,6.982727,-3.096515,-3.834629,-4.630705,3.741503,-8.459082,-6.536088,-3.241483,0.709936,1.143185,0.014646,-7.687622,-2.558933,7.996985,2.425002,1.352966,-8.104886,3.582456,1.274059,-3.434856,-0.949861,1.699203,3.536048,6.588704,-6.318366,-1.254924,8.200146,4.521740,-8.289233,-6.063547,0.547429,7.849036,4.975905,-0.461212,-1.546207,5.343889,5.450369,2.906910,-4.379925,8.914760,-0.451345,-6.974883,-9.466469,7.732511,-0.515903,7.425355,-4.146894,0.366900,6.855651,-4.963566,-7.305809,-2.089161,-6.040321,-1.608926,-7.476430,-8.309211,-4.751062,-8.681994,-8.739189,8.637222,6.621032,-0.898453,4.392358,8.102768,-3.660431,8.763218,2.289701,-4.010111,3.890695,-9.926857,5.388283,-1.663046,9.471440,-9.247138,4.735707,-2.846539,-5.397002,-2.063199,-6.365154,-8.432059,0.788558,6.187737,4.772000,-8.445305,1.798366,-7.516035,1.475351,-7.227598,-6.226710,4.032801,-3.787757,-7.416900,-6.625934,0.160624,5.075966,6.920970,1.772556,8.210008,2.755297,3.931676,3.251077,9.705976,1.277823,3.691406,-2.849050,6.483719,8.926334,-1.061510,-6.742679,-8.158374,8.538923,-3.910260,3.360257,-0.426163,0.798204,8.337620,5.664003,-4.574378,-1.917547,-8.104880,-1.476588,1.816216,-2.828707,8.098414,3.591127,-3.846314,-8.134966,4.073750,-3.711841,-2.405717,-2.439014,-7.633718,-3.534011,-3.339037,7.906539,1.454242,-2.140661,1.177077,-4.597544,8.146200,-9.480604,2.325134,-0.714183,-4.694502,-7.968294,-1.835234,-1.437190,-1.045040,7.425430,2.650991,-6.134352,-7.813146,-6.115845,9.445741,1.075460,-4.292674,-2.841021,-9.824170,5.985108,5.876465,7.088977,-0.638289,1.221107,-7.031770,6.396723,9.466541,-4.158625,-8.262416,4.507012,-7.192629,-0.870378,-9.309743,-4.438444,3.806163,-9.110708,0.549455,-3.110557,1.032349,-0.678429,5.769737,-0.674100,7.027086,-1.321522,1.655935,5.600456,-0.118360,-1.218478,-5.487345,7.253962,-3.122714,6.330885,1.800060,0.802003,5.294037,-2.363147,7.561040,2.538195,-7.170563,-0.472483,9.127827,7.731018,7.509398,-3.848467,-6.825497,3.886613,9.666198,-8.182541,7.386679,-2.304262,4.173103,8.892835,8.058446,-0.359261,-1.562427,3.323113,-1.250941,-1.304429,-3.796873,-4.536900,-2.567533,-6.053851,-2.693808,3.335165,-0.314255,-9.749769,-9.693356,9.302579,-6.542065,4.599811,-1.950761,-2.571762,1.379084,0.383849,7.779399,-0.018896,6.961689,-2.913853,1.221730,4.361736,8.622880,-1.062769,6.870668,8.547211,8.271233,2.427395,8.137873,-8.698216,-1.135022,-3.763700,8.232012,6.009162,6.606232,-8.575676,9.010511,7.486039,1.877931,3.131872,9.191021,-4.445225,9.743568,-5.529602,3.540402,-7.942574,-0.884264,-7.001584,8.899941,6.180216,3.357034,-3.025638,5.036799,4.910769,7.180534,-4.356336,1.735422,3.543574,-9.313318,8.064064,-6.598987,2.259839,-9.141681,1.818722,0.897318,6.267090,-0.149056,-2.467450,7.315865,6.324074,-9.300435,8.267343,-8.447869,-8.305762,-0.483513,5.853845,3.679255,-9.174276,-9.895680,-2.678023,-4.533427,-9.570218,6.567862,-8.927572,-5.497258,4.798859,1.185633,-9.601388,1.432913,-7.157025,-7.828335,-0.725569,-4.301250,0.794131,-6.837025,6.872691,8.327213,-7.065883,-5.638164,4.192802,-4.828944,2.259682,5.360325,3.984419,-3.042405,9.934081,7.586534,1.279161,-7.046677,-2.769140,-1.224814,4.972623,3.893719,-4.003100,-8.348182,-4.972488,-9.031458,6.440638,1.051320,-1.278566,-1.976171,-6.575983,9.999291,-6.226930,5.022401,8.088796,-0.137709,0.610239,-4.932523,1.022802,-6.427305,1.967498,4.526048,-2.081332,6.329184,-5.937278,-3.378601,-5.188984,-7.130951,3.227930,3.721353,4.670130,6.309858,-5.286487,-3.188155,8.025590,8.979301,4.158360,9.497824,-9.005236,-6.500219,-2.378007,6.317095,0.590161,8.918834,2.673426,2.801588,-7.329650,-0.132164,-1.209174,-0.888227,1.656125,-0.091503,-0.344835,-8.927901,-3.109714,-4.984595,-5.206620,5.405698,4.541737,-3.940895,-4.051141,-5.277652,2.035703,7.370947,0.416449,5.045410,2.378198,-6.569394,6.924929,-0.706739,9.050687,-9.304297,8.684852,0.875074,2.816786,8.525338,5.889017,-3.104236,-8.252017,-4.990284,-6.084903,-2.471682,1.200434,9.883860,-8.790531,2.222930,-3.735393,1.944536,7.955422,2.381312,-1.592521,-1.685475,-0.656636,-8.422908,-9.660145,-4.298064,-5.576392,0.084917,7.027435,-5.951196,-1.650866,-2.271405,-3.872614,-6.470901,-6.500614,-6.312614,6.020110,7.612865,3.958484,-9.823680,-0.928655,-2.127751,-8.118480,7.999855,2.398617,2.962815,0.032622,-4.933356,3.717281,5.923095,-2.001565,-3.948807,9.435479,2.843449,-2.008365,-6.023011,0.999230,1.287222,-9.607397,0.363957,2.053352,-4.444100,-1.612182,-7.047852,4.613652,-4.732685,9.438507,4.131752,-6.870498,7.380334,0.131136,1.091999,7.334121,-7.455363,4.670855,3.331708,-5.530324,7.518202,-1.301777,-1.842397,-9.864826,-3.077311,4.885712,-7.962447,-9.517272,-1.751754,1.469812,-8.178638,9.424615,9.738944,7.948054,9.781146,-9.008844,-8.680184,-0.834505,-0.325219,8.185313,-0.954697,8.987662,-8.445727,-6.436756,5.846830,1.133018,-8.337200,-7.764214,1.033638,-1.198113,6.656781,-6.587937,-2.552887,-7.423173,1.612427,8.065655,-4.643650,-5.065425,-6.209236,-2.576786,-0.809707,-5.679898,-6.519903,-2.926959,-7.812629,-0.630125,9.568307,3.435188,3.974089,3.070776,-7.214858,-1.930703,7.474594,6.820140,4.888128,6.445568,2.511417,5.459063,-3.130470,-6.003221,-7.037696,-2.355965,9.220431,6.720844,1.233021,6.417836,8.692947,-2.233602,-4.628488,0.470973,6.213532,2.160078,-0.792607,-7.732974,1.616540,7.517525,3.453494,0.995765,3.910516,3.182230,9.859263,-5.562321,-2.878926,0.124502,0.628389,0.439303,6.863563,1.840017,2.767936,-2.923017,-9.620408,-3.632407,6.887184,-5.960204,4.633683,5.669363,-6.179418,5.194976,8.934314,0.918434,8.435876,7.762288,-5.080253,-3.424029,1.673281,-8.249109,-4.217569,1.032929,-4.561677,1.514090,-2.167370,2.878466,-9.975784,0.024259,8.368720,-5.923174,8.986255,-1.962069,4.509671,9.750059,0.390665,-6.436009,0.863172,-4.350370,-6.067520,8.537799,-9.058303,7.327492,2.120062,-3.161098,-6.247841,-4.242927,6.656596,3.144290,6.538192,8.401026,-7.084998,2.925721,2.334660,7.048117,6.368018,-7.268883,6.705439,-5.834613,6.867404,-2.640324,-2.457073,4.446947,9.232355,-4.834259,-3.342459,5.607433,1.861904,-5.807329,-6.401733,-3.870176,-6.960277,-7.464727,2.727844,-2.127621,9.529903,-8.937947,0.156833,4.919712,-4.526570,-0.511488,1.545152,9.476524,-2.927358,-4.976237,1.801664,-3.185312,8.858067,-4.796388,9.477884,3.649672,9.198234,-2.148323,-6.635936,4.944608,1.135013,4.383834,6.738475,-5.815013,-9.657617,8.076288,9.893985,5.709264,-1.026741,5.008785,-2.052586,-5.738099,-6.491548,0.548361,9.539642,7.527152,-0.578837,1.680200,2.342338,8.767632,-4.195603,-3.265787,-7.046190,7.971329,7.112049,-1.237037,4.947841,9.761423,-5.353532,-8.967768,1.564822,-4.814196,-7.890974,4.052812,3.488270,1.032449,1.405028,-2.133223,4.344594,-5.212381,-8.088979,9.791840,-2.652967,-9.691108,1.094456,-1.848526,-4.895986,-3.717419,-5.217302,8.160507,-7.307414,-1.427957,-2.032310,4.976724,-1.856780,-3.122255,-3.108069,-2.400224,-1.558056,2.184541,-4.717989,-9.280183,5.197790,4.981643,-4.196096,6.080695,-2.225962,5.918394,-2.028727,-4.735600,-9.992986,-0.078949,-8.362570,8.155003,0.816751,-2.632686,-0.862148,-0.040942,5.993052,-5.194452,-1.467888,-6.355875,6.831534,5.240026,-8.387917,-0.280878,-1.842154,-8.781942,7.384830,2.191371,-5.313142,-5.689783,-7.915118,-9.591516,1.816143,-9.633363,6.925022,-8.990740,-4.339054,-0.916046,3.703714,2.692896,0.247974,3.325061,-1.482673,9.934759,-4.096690,7.443244,3.719864,7.697918,-6.624706,-1.724256,-6.041239,-3.124973,6.143530,-7.957428,0.115470,-9.662169,3.996675,-7.250032,1.173976,-5.413839,6.843855,-0.644134,-5.889305,1.663248,3.705014,-2.997665,-9.259699,-5.555601,7.247453,8.562957,6.494158,-9.132905,0.728794,-3.052704,-9.961301,-4.648780,-1.556676,-7.811116,-3.642564,-5.863835,-8.911920,-6.512433,7.846288,-3.393281,4.536008,-6.036724,0.219351,6.505528,9.657865,8.615096,-3.062510,4.518620,4.661097,0.987029,-4.356215,6.710989,-3.517020,3.152789,1.568937,1.423915,6.709580,3.099854,-5.590718,3.360233,-2.073873,5.443195,2.458573,8.153052,4.394367,-3.699966,-8.810311,-9.752441,5.202140,6.944699,8.027054,1.804659,-7.764036,2.986750,8.758954,-3.786522,-0.069191,4.126723,-4.279849,-9.282366,7.363691,5.305254,-6.846137,4.168337,-5.762874,-2.002269,4.289395,-2.137343,-0.902796,-8.567101,7.578008,5.213387,-6.935798,7.987972,-5.508560,-1.486667,-3.354379,3.118228,8.632376,0.972244,4.329434,5.462303,8.770650,-4.689338,-8.998486,-3.569613,3.371777,0.239047,-5.218524,8.676291,-7.533321,-6.147773,1.818001,0.472760,-5.101024,-2.152511,7.872390,-8.312201,-5.263170,-2.296570,0.836475,-8.087789,3.477265,3.018191,-7.844975,-3.238235,-0.110699,9.162781,-5.604757,3.542375,4.551668,2.221059,3.858275,-4.500930,-6.312902,-5.577537,7.998341,5.430445,-6.743677,-9.406497,0.091762,9.090511,2.214563,5.208881,-2.194859,6.785093,7.618347,-5.273474,-4.040341,-8.087672,0.547315,1.146066,2.646349,1.617768,1.919036,-6.749063,-0.818195,-6.237453,-4.336417,-3.586299,-8.618592,8.433913,-2.576631,0.971848,-0.118374,2.004438,-1.188869,-9.234683,7.763956,-6.000573,8.075972,5.824950,-0.263479,1.272123,-0.460541,0.836838,9.266164,-1.133266,-9.189135,2.271345,5.423008,9.074357,7.049261,9.591323,2.317689,4.355377,-5.794214,7.907107,-8.921700,3.446695,-0.546285,-9.706038,9.418709,4.697580,-7.159601,-4.472865,0.475244,2.437497,3.272929,-1.568999,-7.457124,0.585662,-6.368797,-4.346026,-2.086587,7.824572,-2.053559,-1.170055,-5.299119,-5.946072,-0.882256,-8.402104,-3.185519,-2.974891,-4.790668,-5.224254,-6.455110,2.163736,-3.499470,-1.884585,-2.935798,5.901967,8.985676,-9.848621,8.054336,-5.109318,-0.351806,-3.236589,-7.854370,-7.291395,3.387344,-9.445327,4.491965,-4.544209,0.897142,-5.077120,0.875717,-3.136834,4.797247,-1.732000,0.694119,1.221463,-6.003769,-6.522706,-7.201550,4.914865,-9.534659,-3.879681,-3.522811,9.970910,8.097663,7.494164,-4.154424,8.675253,-1.332429,-3.269846,-1.212805,9.284275,7.172267,1.835833,5.593674,7.939899,-3.935876,5.353499,4.675877,-2.326543,-6.337168,3.132374,-6.831093,-4.491389,-4.759138,-1.989663,-0.840712,6.137144,-9.920763,-8.673500,-2.939905,0.887668,2.390034,2.121886,1.985121,7.664131,8.001145,-1.067843,0.612046,-6.740031,-8.725116,-0.200337,0.503319,-9.558497,-6.749762,7.230104,2.986848,-9.357120,0.032196,8.393250,3.599787,-1.189692,4.374810,-3.777847,0.561298,-2.373116,-6.493442,4.257295,7.618681,0.844444,-9.091254,-6.902442,5.365492,-2.718501,-6.849506,6.859870,-7.639192,-5.377861,8.461540,-9.535669,8.390911,-2.873350,9.315142,8.598708,8.720062,-2.288025,5.145628,1.103802,9.862003,9.932939,2.685137,-9.499267,-5.311858,9.520750,3.331343,3.659272,4.530130,-1.199950,1.314139,2.650267,-3.352950,-9.341061,-0.397302,-0.928731,4.328754,5.040909,8.598943,-4.830047,-4.320315,9.042482,6.431806,-9.327239,-8.325650,1.483621,5.338014,-0.165635,-6.184588,3.783032,6.779931,9.404597,-8.066343,5.108551,-1.148709,3.535299,-1.671909,-0.027567,7.432271,-3.346779,-3.647328,7.516272,-3.427269,0.106973,-8.697761,0.840127,9.457920,-6.509002,8.366679,1.919288,0.090150,-7.194493,1.981979,8.694532,8.789467,-1.941995,6.773093,5.955137,9.325635,4.994242,-3.405865,5.170268,1.084020,5.043809,-7.867928,-4.991103,8.561937,0.365771,7.176135,-0.682254,-6.422050,-8.850663,-0.966050,0.258733,5.431029,-3.243978,4.350175,9.221096,6.411693,4.249861,3.138857,-1.263446,-2.608826,4.770809,-3.549654,-5.337254,-9.424940,3.776741,5.726574,-2.369453,6.791298,-2.990020,1.401315,2.174100,-3.245707,-5.665325,-2.787696,-8.629291,-4.157341,-0.604398,2.902327,1.109446,-9.032489,7.206589,5.176936,-7.615520,-0.860096,5.573865,-6.204220,-9.201824,5.004215,-9.983705,5.078587,-3.282395,-5.759069,8.772944,3.395779,4.856611,2.207341,0.233085,-3.715137,8.134851,-6.760978,-6.942154,2.370750,3.607611,4.258660,-5.494372,1.227703,-4.871463,4.034347,5.480139,-9.057383,-3.215523,1.108302,-4.527511,8.145923,-6.155666,-5.754363,-0.953523,-0.323573,-0.555200,4.186875,-0.518306,5.489701,-2.966524,-1.564941,-2.632871,-8.554960,-2.529228,-4.469530,-4.993693,-7.448937,-3.556217,0.746736,-9.848301,-1.631063,-1.615309,0.990689,-8.322009,8.874734,-0.758480,8.027561,6.266029,3.512342,1.140705,-1.815892,-6.899541,3.129524,-3.375221,1.488418,-1.618600,9.329192,-9.223842,4.999956,-3.285071,1.451175,0.951218,9.946827,1.737963,-2.011844,-4.829651,-8.186242,-3.187953,5.307535,-6.033544,4.105059,6.978243,9.276232,-6.119518,-0.913704,-1.576293,9.852219,-2.180713,-3.483632,1.083012,3.568847,0.538420,-5.013538,5.071300,-3.316482,6.063605,-6.284671,1.275937,-1.679737,-8.863423,-2.434708,-0.271920,-7.554876,-8.670255,-3.328676,-0.273390,9.039794,1.540646,1.301306,-6.863708,0.305521,1.992232,-4.337028,6.015586,-0.983591,4.155865,-9.420311,-1.299123,7.219418,8.470784,0.077330,1.170184,-8.446430,-9.430447,5.172852,0.369800,-8.103156,-0.751983,0.737298,6.234543,5.250646,-1.467570,0.742207,7.665645,9.744004,-3.530827,-1.418411,-7.057040,6.064202,-9.191991,7.065493,3.583993,-0.714592,-5.529460,7.016081,-4.959435,-6.741685,2.129472,7.151694,-0.100263,0.417303,8.350930,-2.558081,-5.991046,7.453096,-1.888086,8.061527,-0.695230,0.630056,1.693399,3.884862,-9.787140,5.451551,8.046757,-6.895237,1.069331,-6.588831,7.793161,-2.340397,-7.170082,-0.568305,-1.892744,-2.891778,0.241716,0.054413,4.401436,-9.642987,3.530412,8.846376,7.539681,-8.373826,1.109412,8.340974,-0.143459,7.792840,8.726918,6.375726,6.949091,8.856890,-4.044321,4.984507,0.361561,8.693217,0.240951,8.616314,-2.445006,-7.909669,-2.878853,-2.186824,6.075359,-2.586319,8.494212,5.331020,4.853467,3.384212,2.170837,2.522770,0.090490,4.624276,7.621162,8.393653,4.813055,-0.879158,4.877227,-5.211952,-6.331357,-7.287979,-3.296500,-3.104470,-4.057762,6.060106,-4.160599,-4.695217,3.561998,7.850188,-0.171107,-3.203461,-9.598340,1.622934,5.389161,-3.988968,-5.399282,8.427073,-5.099543,8.650597,-0.631885,2.861845,4.784898,-9.386881,2.022535,-2.588997,-9.250790,7.163289,3.005444,-3.173148,-6.072498,-4.649890,4.850856,-9.791666,1.235293,-7.453036,-3.084494,-9.261255,1.632103,2.540050,-4.839295,-0.665037,-5.773950,9.451715,5.320449,5.665547,3.278797,-7.991824,8.579102,-2.895085,-4.572711,-2.599105,-0.151116,0.777231,0.484380,8.966519,-4.798628,-1.747303,5.118711,-1.511483,-4.892488,1.013349,5.421461,-8.398701,-8.055210,3.644893,-8.354606,7.712553,-2.967778,-3.884921,9.879564,-3.079452,-8.894752,3.483416,-4.331308,-7.324553,2.002775,-4.216957,3.705735,6.358052,-3.905010,8.804358,5.343684,2.540942,8.242589,3.462902,8.609259,-0.302402,6.998688,-5.779065,4.555522,-8.699120,-4.866296,7.468077,2.288951,9.090075,7.577325,-1.065679,2.147060,-5.007556,-5.589384,-3.664896,5.575995,0.350359,-1.160964,7.850154,-7.271465,-6.485064,-5.306119,-2.134256,-6.327539,2.896321,-3.738199,-2.418118,-2.096304,-4.653548,7.423686,-4.259760,7.574573,3.476243,9.518508,9.063028,-8.251848,-7.733204,6.428258,-5.662543,-1.452765,2.335867,-7.631029,0.272217,3.482371,7.160377,-3.453977,6.178973,3.330192,0.636363,9.016655,-8.201291,-9.503845,1.096339,5.798800,2.785754,1.355069,1.907981,9.026591,-1.179115,-4.552133,1.959034,-1.142747,0.911600,2.169865,-4.086448,6.341068,-9.720297,-0.115772,-0.374465,0.626920,8.861185,-2.496536,-3.676211,0.365239,-6.635329,-4.269584,-6.822634,5.661160,-5.106350,-8.459643,1.852895,1.149943,3.170956,0.922365,-6.644038,-3.234621,-6.510640,-9.686679,-9.080862,8.604821,2.312886,-6.126201,-6.792826,6.362979,-8.694181,-1.833314,-7.439147,3.696781,7.003617,1.318793,7.542593,1.029245,-0.922319,3.463645,-0.056581,-7.859109,-7.374380,0.154941,-8.496829,-1.364201,2.376946,-3.011470,-1.289997,2.932397,0.519751,3.151648,-2.802715,-6.436683,-5.611765,8.282643,-6.517320,1.318026,-5.786989,-4.375403,6.172781,8.264238,6.609379,-2.962289,5.458179,2.270248,-9.779727,-5.430853,6.080668,-7.813810,-2.109636,-9.320094,6.483622,8.044373,6.546341,-4.199407,-5.295716,1.785420,7.731324,-1.279347,5.046084,4.691588,-3.220360,5.641469,-5.930731,-1.299845,4.018577,-9.341941,-6.431439,8.033521,0.028162,-0.814214,3.553026,3.754338,-1.684109,-3.963171,3.157572,6.832895,1.519545,9.998957,-2.999778,-6.952378,2.066210,-2.300849,-9.953812,7.122573,7.365069,-2.205418,3.900374,-7.072257,9.862813,7.984724,-2.741349,-3.372618,4.853568,-0.825216,6.913409,-7.466841,0.344556,-5.076041,-9.390453,6.875617,-3.461861,-6.996030,1.657951,9.988491,7.091415,6.793379,6.939318,4.194287,0.371592,5.625412,-2.542660,4.962126,-3.339751,-9.034499,5.441129,2.231140,8.492361,3.414567,-8.980320,3.694309,-2.748100,4.290854,-0.872950,-1.732890,-4.231908,0.197085,5.028791,-4.768411,-3.116934,-8.278691,-0.507076,7.548736,-0.068562,-1.181349,7.200865,-0.532683,-7.834188,-8.826191,7.306190,1.120574,-0.511473,-0.884157,0.084066,2.195786,1.814242,-0.432251,6.911417,9.973627,-2.608122,-0.017499,5.437355,3.238510,7.041330,1.690416,4.635226,-2.986574,2.051575,0.958554,-1.845743,-8.215840,7.672246,2.723740,5.228019,-3.235934,4.896469,1.103329,7.600012,-2.531235,-5.496421,8.447977,-0.074091,0.374567,7.023946,4.483387,-9.527371,5.592874,-5.690708,-1.221167,-3.555895,3.787625,-8.332373,-9.460313,-3.474787,-0.411891,-1.456395,-2.764609,9.671202,-6.762680,-1.076552,-4.191291,-1.013401,-7.708734,1.356912,-5.120741,1.714790,1.912878,-1.634847,-0.536477,-4.607796,-5.982081,-0.192470,-2.266117,-9.760433,-2.892209,-6.896198,2.726386,5.502631,9.894141,4.088740,-1.459948,5.512221,-1.798147,8.820583,-9.632829,5.587585,7.094628,0.754409,4.634338,-8.181812,0.378275,4.251520,9.710812,-9.405030,5.905832,-4.045807,0.304621,4.072654,-8.084395,-9.386999,-4.428375,0.596370,6.660401,9.799181,-7.714372,9.199214,-1.198765,3.878668,7.544955,-8.710401,4.285818,-7.810306,0.895838,-9.204470,-3.606149,-4.428595,-3.238033,-7.367996,9.241279,-1.837948,-9.766567,3.474826,-9.801112,-4.020575,-6.231840,-8.284934,-2.822035,-4.739121,-2.472454,9.706672,5.819902,-9.915485,7.972696,-5.557181,-1.877840,-4.021909,-1.799873,-1.294158,-6.362299,-5.711038,4.582674,-0.651270,1.901121,0.672186,9.083030,-3.891599,0.838605,-4.117886,-8.689465,1.386880,-0.129156,2.285137,4.182089,8.679193,-7.448100,-7.915157,1.088653,1.680511,-4.618075,-0.137504,3.032692,-3.121129,8.744934,9.685527,2.293896,1.021820,7.141006,-9.578887,-0.765937,-9.229496,0.554038,-6.054726,-2.317726,0.892747,3.841416,-9.563824,3.738141,6.782984,-1.842912,-8.402751,2.056776,2.799506,-2.581186,6.533463,6.301615,8.395975,-9.642849,8.588565,-4.095906,4.380239,5.706626,-0.830348,5.213850,5.938987,7.287332,5.765459,6.167189,1.403618,6.494791,-8.279379,-0.438134,9.420776,-2.848611,3.316327,-2.569007,-0.822950,6.173662,-1.868802,-1.633213,-4.141592,1.151692,-3.638067,-7.159158,-7.517390,-0.321395,-8.935184,-8.485381,6.230970,1.988135,4.999796,-4.363314,7.105737,6.944219,-3.548182,6.592470,8.170426,-1.143720,-6.513366,5.921236,-2.575373,9.310272,-0.631560,6.158390,-1.898696,2.020524,-2.721895,4.924020,4.171568,9.348850,-8.158220,-6.332508,6.018966,1.727917,5.149361,-9.509851,-7.455676,-8.599962,8.409406,5.226171,-1.931090,-7.192292,-7.029588,-6.948888,-3.462528,4.450018,1.705182,-3.083940,-3.345707,-9.477370,-7.729479,-5.295502,-2.877686,6.410436,-3.266558,-6.342764,8.038912,4.526838,-5.280145,4.281010,4.634694,-8.304781,-0.331371,9.042654,-6.389075,-5.282417,-6.157899,-7.050798,-8.253558,-6.906219,-5.182001,2.425204,7.622314,6.706076,8.164587,-6.923201,7.307479,1.868237,8.535291,-4.128165,-4.097345,-1.877344,8.564108,0.903516,9.354341,-4.303289,-5.240048,5.543176,-7.348810,-1.038485,-7.169108,-2.743470,0.948434,3.116704,-5.413247,-3.744929,4.098032,2.817002,3.763320,-5.040895,6.681142,-3.821441,-8.498575,4.850928,-2.133087,-6.018638,9.897254,-6.260394,-8.290977,9.367582,-9.246315,1.793982,7.550108,-2.465244,-3.708872,2.515799,-3.019818,8.481995,9.633285,9.777619,-4.980453,-8.924211,7.395938,-1.687903,3.887998,-1.069955,-9.960450,8.725097,9.747125,-4.824035,-2.543490,3.772375,-9.812738,7.960002,6.683320,9.442599,1.213788,2.037011,2.314650,-8.653155,-8.741912,-0.008737,0.381578,-6.525533,9.596876,-6.390346,-7.462253,-3.983753,-6.450243,-5.859365,5.461877,-5.227435,-4.956939,9.716485,7.300261,-4.347375,-3.430812,-4.428245,-0.332803,-8.667483,-4.297418,3.821638,-1.742918,1.960422,0.775544,0.649007,0.246659,4.727786,0.846235,0.213661,3.911211,-3.561600,-4.028486,8.493049,0.328134,2.020763,-0.758812,-1.635440,-4.636918,0.772492,-5.339449,-8.157432,-1.953562,1.368224,-0.474293,0.799709,-3.298998,-9.719333,-7.307125,7.654422,9.784350,7.096938,5.905477,2.875100,4.763904,3.629821,9.904735,-6.812728,-0.568406,4.209464,-4.213637,-4.485324,4.973314,-1.466945,-7.069937,2.686866,-2.470583,7.743511,6.153034,3.128914,3.353545,-8.074271,6.387779,8.386155,-8.964103,-2.776502,3.406943,1.643190,0.133367,-8.693765,5.828628,-2.044739,3.919875,1.581880,-5.514683,8.698152,5.941906,-9.682650,-6.813636,-6.399015,-1.718992,-6.467662,2.569081,-3.733183,5.394071,-0.548638,8.266873,-6.416282,-8.627791,4.530548,-6.809558,3.099716,-0.918084,-1.630381,9.668399,4.606611,-9.374336,8.158909,3.772120,-8.323195,-8.124129,5.316399,7.749625,-1.992736,0.546229,-9.138553,5.811269,5.499879,5.099670,-4.428538,9.948871,7.622928,5.065463,3.644748,-7.153133,4.423497,0.727520,-8.080041,-9.148481,-1.051738,-0.352703,-1.341462,-2.311254,3.159437,7.057451,-3.809200,2.418235,-9.344701,-5.245492,9.747142,-3.377342,-4.096095,4.638822,-1.432406,1.866850,4.438067,-4.387774,9.763010,-6.688784,-5.352022,6.314098,-4.805955,-1.996778,7.246785,-4.657607,-1.092742,-3.934750,-6.009683,8.934353,6.110197,-3.529052,8.746298,-1.886157,6.283014,7.475347,9.583892,3.768817,-4.745375,-2.605589,-2.075453,-5.902134,0.919888,1.568716,6.685017,9.197328,-7.911497,3.340472,-5.589218,-4.579150,-6.934339,6.853558,-3.147278,0.039730,5.625958,4.755246,5.688953,-9.566262,-2.641694,-7.051645,-8.724084,-4.949537,1.346278,-3.608579,-3.097930,-9.763690,9.593781,-3.228965,-5.137403,-3.895481,3.066666,3.249552,4.293534,-1.691661,-3.164804,3.655901,-3.423018,9.261912,-4.398851,3.618826,-1.260618,9.135604,5.997274,-9.674625,-8.204366,4.153215,-5.644449,-2.399638,-5.827132,9.543556,6.375213,-3.990886,-4.511869,-6.277385,6.838976,4.955806,8.297303,0.328779,-8.732276,-8.480008,-2.635930,6.341656,-2.633635,5.483204,-7.924012,8.161036,2.186668,3.274319,7.606705,-9.835318,3.677583,7.934305,0.996063,7.446985,-1.682579,-4.675895,-5.341597,6.616386,8.073269,6.678463,0.518003,1.656060,-1.311651,-2.677395,-9.153160,6.127726,5.293399,-6.274592,2.263011,-1.707921,5.772901,6.751982,-1.050443,1.033969,1.721682,0.799682,1.798391,8.006963,3.336985,-0.068985,1.911870,3.486473,-2.710385,5.574919,-4.762272,6.557005,-9.422076,0.682159,7.650359,-5.672532,6.737713,1.903267,-5.236089,2.488372,-1.087502,-1.546799,8.496949,-3.357060,6.032514,4.509404,-1.179908,-7.947293,3.499793,4.123425,-2.452776,6.475032,-2.926459,-0.835237,-3.707600,-6.360899,8.896243,-2.798871,8.577102,-4.434822,-0.576956,-2.086147,-5.353817,0.548303,-4.740690,-6.652472,-6.704435,-6.774225,-5.850582,2.543638,-8.076580,-2.355739,-7.579645,-8.442195,0.448325,0.518717,2.554012,-5.841930,-4.882337,1.188034,6.815124,8.646509,-7.826093,-2.547497,-8.257073,2.148637,1.812687,4.247910,-5.083747,5.806807,-3.660660,2.622610,-1.409853,-0.608961,9.434542,7.980441,6.855660,-5.832330,6.753131,5.701774,-4.920190,-8.206976,-3.781930,-6.081410,-3.207670,-8.468851,-0.085419,-4.558038,-9.536482,2.418944,-4.545309,-4.813614,6.138020,5.327503,1.593659,-7.171525,5.674532,7.751559,-5.880895,-5.901714,-3.418265,-6.542181,-1.853066,6.819549,9.773604,-1.215539,-5.632515,0.828769,1.741023,-2.809305,0.951316,4.963550,7.271073,-5.214469,-9.701936,-8.011051,-9.625150,6.530189,4.799540,9.332040,6.739623,2.908942,-9.296156,9.418572,2.425475,-2.004887,-8.124884,-8.288146,-0.566428,-0.753813,3.240616,2.592517,5.016998,0.155981,-0.038298,3.275961,-2.138344,6.222460,5.189337,3.773876,-1.155864,-3.013545,2.566218,-2.672924,7.561296,-5.775158,-8.817389,-2.831998,-0.076597,-0.180982,-7.834745,-8.475955,-5.941069,7.751599,-5.148518,9.682815,-3.956023,6.439936,-9.405816,-1.512326,-0.508389,-7.849746,-6.930725,-7.127267,-4.219699,8.176523,-9.163834,-2.695241,0.554307,3.351226,-5.821275,-9.435853,-5.470510,-3.873081,-2.564446,-2.710701,8.540902,5.385312,-8.404721,-5.762548,-6.503678,6.812706,2.946376,-0.965017,-8.682104,-9.721379,-8.700914,3.567037,-9.738518,0.254467,-4.360511,-3.916285,-3.092899,-3.181596,7.682075,-5.178913,-1.348667,2.743828,0.605072,4.882619,6.102056,-4.497024,-5.082341,-6.249904,5.371991,4.766661,2.413837,1.527207,2.720175,-8.818817,-9.871734,6.099124,5.324168,-8.303611,-5.592446,-8.844492,3.298637,3.401427,-4.108150,-0.036126,1.646765,-0.103394,2.184854,-3.260685,2.729525,-1.025861,1.689944,-1.844919,-7.579211,0.407041,-6.537030,-5.495443,-5.994244,-0.137460,7.991856,-8.785317,-4.783595,2.896649,-1.541356,7.172516,0.830766,9.757633,2.562828,8.208949,-1.553824,-6.551153,-3.320597,-3.177664,-9.500707,3.850053,-6.670907,-1.006765,-8.769890,-7.811184,4.723629,-2.496477,1.088891,-9.159583,-4.801884,-7.681629,-6.873955,2.923979,2.037141,-0.223868,-5.037611,7.281785,9.088000,-8.194234,-3.668149,8.964928,-9.646404,-2.516609,2.196850,-3.174317,-0.869773,9.267681,2.711444,9.838232,-1.954562,-8.272684,6.132878,5.286660,9.555275,8.112039,4.649648,7.122487,-0.908086,5.830730,-4.630835,6.764909,6.791911,-2.960731,-5.426269,7.643946,1.854607,1.504757,-8.374146,1.985210,-7.698306,4.928221,8.574414,6.396763,-6.770924,-3.218160,-7.555849,3.011458,-4.969578,-9.553303,7.061234,7.715992,8.651668,0.615651,-4.477100,6.264973,6.274378,-9.102003,-2.261285,5.872090,-8.086119,7.672402,8.021514,-7.330321,-3.229509,-2.517664,8.942398,-9.429395,1.669440,-0.149616,3.385256,-5.502075,-3.222393,6.840623,2.532559,0.713639,-2.614309,-7.680514,2.814008,9.204505,-6.984080,1.930830,-2.334425,-3.763093,6.026110,9.313912,8.885635,-9.831774,-8.876539,-5.178234,-4.152602,3.746402,-3.197063,-1.587353,9.164447,-5.257258,-2.679123,5.224514,1.257546,-2.586425,-6.931832,4.966355,1.421210,5.042471,-8.426107,6.843032,9.584244,3.405304,4.574807,9.501682,-8.436609,-3.246333,0.572148,8.979405,4.199131,4.377962,2.546109,9.686491,-9.628539,-9.470977,-3.124412,0.322155,-6.368329,-5.419953,2.107187,-9.249468,3.048463,-9.443803,-7.693467,2.406799,8.403946,0.418703,-5.145840,0.004988,8.127257,1.289928,-0.233570,1.930803,6.709919,-7.846553,6.512219,-2.711548,5.059384,7.517178,-4.465915,7.545073,-5.798664,-2.369020,-9.655594,0.496255,6.063309,7.535143,-3.726162,8.229034,-7.267342,-5.846417,-5.059392,-1.712196,6.005017,-4.468555,7.062298,6.150433,-4.133383,-5.369863,8.508605,0.766946,-5.130633,-6.960290,6.401995,-7.920543,5.980775,-7.118879,-7.220062,1.494263,-9.375977,4.805016,-5.520292,7.656099,8.268549,4.117288,-6.878728,5.742527,7.554121,9.650505,9.385747,6.843077,-2.120386,4.285468,-7.675348,-2.458172,-8.358273,-5.511078,-1.633628,8.971935,7.425091,-6.800996,6.996074,-9.222613,-7.617151,-1.783386,-4.933205,-0.037436,1.360417,1.331884,2.871825,-1.628052,4.017530,-4.665171,0.502589,1.811354,-4.017482,-8.929334,-1.833150,-6.527954,-3.372840,-9.908743,-0.272979,0.503462,-2.645508,-2.475665,-6.488309,4.817386,2.898689,2.720389,-1.723002,-8.709629,-7.005829,-3.182406,0.464477,1.049659,0.083572,-7.067008,7.436684,5.893621,-8.172363,2.598221,6.846135,8.285491,-1.108788,4.771070,9.451750,2.669273,-1.561642,-9.256923,-8.382890,6.535793,-3.578460,-8.130394,7.800123,4.217963,0.634954,-5.411635,-0.515764,3.957738,-1.206231,2.621708,-8.038019,8.662971,-1.964042,9.027568,-1.397890,3.778803,-0.135615,-1.022581,0.070403,-8.277823,-9.984815,1.537313,-2.890030,5.888173,5.434054,-8.406465,9.207978,-1.371813,-5.049611,-7.915436,-1.274815,8.052990,1.884247,-9.248232,9.505432,4.817109,1.009563,-2.621503,-6.998818,-1.857304,-8.393826,3.755795,5.550478,-9.492856,0.965229,-7.095434,-3.144751,0.370413,4.626193,-9.525539,-4.909895,-4.951942,0.093264,6.154208,-9.906854,0.518659,-7.459852,-9.225431,5.815449,2.550624,2.051260,-3.612879,1.437601,-5.744159,-0.530560,-0.647382,-0.544848,-0.247531,0.199759,0.611398,-6.214192,7.057960,-7.306762,-0.752171,-6.921669,-4.923409,0.248387,1.232959,-1.060355,9.022535,-0.877831,9.571397,-5.363516,-5.446260,8.930846,3.112125,6.260536,2.871471,-3.917569,8.091261,8.146470,-1.744350,-8.777087,-6.786244,0.890593,9.538347,5.617367,5.196386,0.677944,3.227806,0.385718,-1.890111,6.502853,-6.416653,9.111137,-0.300751,-0.677307,2.598821,-9.522394,2.925179,3.306098,-6.118880,-9.187764,-6.007727,3.028664,-9.373982,-5.665846,1.021688,-4.170307,1.230938,9.506439,2.917155,-2.176159,3.352778,-0.185648,4.860334,6.408374,-0.120162,1.728589,7.923214,-0.977560,6.342374,-3.291450,9.604613,0.226135,-7.591542,-0.717969,-0.877364,-6.184455,-6.554124,-5.152451,-1.027770,6.623027,1.558065,7.991432,2.596071,3.327553,-8.644567,-1.989884,-2.415480,-8.560148,-3.895823,-7.703354,-8.633811,-1.656508,5.184722,-9.326001,3.305177,-9.564436,-2.050574,5.286003,-3.920399,-0.798964,2.925936,-7.046784,-3.365820,-6.358691,7.900527,4.098879,-3.734899,-6.859317,8.200567,3.464969,-1.358324,9.982423,-8.897491,2.515961,2.768825,2.903011,-1.067715,7.771145,2.714054,3.934798,-4.631498,-4.990896,7.840609,2.920792,5.988785,3.617763,-8.118656,-7.846507,2.124563,0.638326,2.023524,4.022017,-9.877889,6.255462,8.906389,5.164620,1.968157,-9.915259,-8.884682,0.024723,-4.450906,-8.145768,-8.158987,4.254869,-6.906311,-4.388455,-4.434517,4.909781,-8.193542,-6.382334,6.794050,-1.918837,4.578480,3.452980,-7.166064,8.027037,8.928538,3.064251,-0.012467,-1.001076,-3.450495,-3.474798,-0.618608,5.502043,-7.396521,-2.974897,6.583657,2.704660,8.281880,3.038933,8.501161,0.933104,-2.333013,-3.246841,8.050815,9.979105,-7.321680,-0.620633,6.822296,4.208540,5.271037,2.659739,-9.355333,7.113222,-6.667218,1.798334,8.278735,-9.573125,-2.243490,-1.398813,8.388644,5.749978,-8.904214,3.773670,7.861005,2.933045,-0.691804,-6.665793,6.366945,1.067077,-8.371085,-3.966715,1.282343,4.794830,9.608647,4.574724,9.122702,-0.470465,6.814410,4.936352,3.473389,5.350663,7.750184,-9.805537,-8.994068,-4.599250,5.866003,-9.341954,-7.961741,-9.501077,-7.102141,-0.070485,-7.497567,5.541633,-0.132873,-3.457574,3.305306,-8.469007,9.577128,-8.626613,-6.926886,-6.462149,6.838037,-0.574298,-4.914406,2.328254,-4.224607,-0.581748,2.702378,-9.339999,-2.095308,6.959055,2.184946,3.929185,-0.846828,-5.745300,-1.713025,-7.260592,9.812976,6.939729,4.463255,-0.240630,9.340929,-8.486566,-2.300610,-8.754584,-8.724299,2.832816,2.928752,-6.875692,-2.045919,-1.975016,-5.550047,-4.741273,3.259532,5.625781,-8.619488,1.026767,2.912261,-9.279525,-4.903343,-2.638676,-3.205808,-1.148569,-2.492162,-4.520882,0.359250,-6.545756,1.948914,-1.707688,-3.243489,-2.296755,9.126030,-0.331799,7.693048,4.150914,-8.206251,-5.594130,9.992763,-5.888458,-9.070886,-5.991459,-2.863223,1.005747,9.900216,-1.396591,3.598636,-8.297924,-4.630856,2.969258,-4.320867,-6.872275,4.337448,7.790571,8.241959,-0.053236,-5.051495,-1.487848,5.872628,5.079686,5.716822,4.463647,-2.334618,4.445379,-8.469805,-8.532260,2.891164,9.652152,-9.052741,5.992177,8.550281,1.162882,-5.393640,-6.715317,5.968247,-7.923462,3.779182,3.127843,-7.321160,8.146378,-6.823005,3.959511,-7.355963,-8.928384,6.310294,-5.725649,5.010541,8.242666,1.522883,-6.479652,3.066099], dtype = "float64")#candidate|12076|(3360,)|const|float64
const_12077 = relay.const([-4,9,-8,8,-10,8,-4,3,9,4,4,-7,1,-2,1,-1,-4,1,-9,-1,10,2,-4,-7,-5,-2,-2,5,1,4,5,-9,4,-10,8,3,-1,-4,-9,9,-4,1,7,1,3,2,-1,-8,-10,9,10,-8,6,-5,2,1,4,-4,-7,-1,-10,-2,-5,-7,9,-4,7,-9,5,10,-7,-5,-2,-3,6,3,6,-9,4,-7,2,-1,5,-4,5,6,-4,4,-2,6,1,-3,3,-10,-8,1,8,10,3,2,9,-9,-10,10,-9,9,-4,-9,-2,5,5,9,9,7,-5,-1,8,9,4,-2,-4,5,1,4,-4,-3,-6,-2,-4,-10,-9,-3,-10,5,-2,8,-7,-5,-8,10,-9,-1,-5,-1,-4,-8,-1,-10,-5,-8,3,4,-9,-6,9,9,9,2,-2,3,-5,7,-3,-8,3,7,2,-3,2,9,5,9,5,10,-4,3,5,7,8,-8,1,-4,9,-5,-7,2,2,8,3,-7,2,-8,2,6,-3,1,-10,-9,4,-1,10,-7,-5,2,-2,6,-8,10,2,-10,-10,8,-9,10,5,-6,-5,7,-7,-1,-7,4,3,-7,-10,9,9,-2,6,-4,1,6,-5,9,4,-3,-7,6,1,-5,2,2,3,2,4,-2,5,5,3,-2,-4,-5,9,10,-7,-2,-1,2,8,5,9,-9,7,2,9,-4,8,3,3,7,2,-2,-4,9,8,6,-3,-10,10,-8,-10,2,-4,-5,-10,-8,4,5,4,-3,-10,-10,5,-1,5,-4,2,3,2,-4,2,7,1,5,-8,10,7,-8,1,7,-9,-1,8,-8,9], dtype = "uint8")#candidate|12077|(315,)|const|uint8
call_12073 = relay.TupleGetItem(func_10531_call(relay.reshape(const_12074.astype('float64'), [5, 7, 15]), relay.reshape(var_12075.astype('float32'), [154,]), relay.reshape(const_12076.astype('float64'), [3360, 1]), relay.reshape(const_12077.astype('uint8'), [1, 315]), ), 4)
call_12078 = relay.TupleGetItem(func_10537_call(relay.reshape(const_12074.astype('float64'), [5, 7, 15]), relay.reshape(var_12075.astype('float32'), [154,]), relay.reshape(const_12076.astype('float64'), [3360, 1]), relay.reshape(const_12077.astype('uint8'), [1, 315]), ), 4)
output = relay.Tuple([bop_12017,call_12034,call_12073,const_12074,var_12075,const_12076,const_12077,])
output2 = relay.Tuple([bop_12017,call_12035,call_12078,const_12074,var_12075,const_12076,const_12077,])
func_12084 = relay.Function([var_12016,var_12075,], output)
mod['func_12084'] = func_12084
mod = relay.transform.InferType()(mod)
var_12085 = relay.var("var_12085", dtype = "uint32", shape = (6, 15, 15))#candidate|12085|(6, 15, 15)|var|uint32
var_12086 = relay.var("var_12086", dtype = "float32", shape = (154,))#candidate|12086|(154,)|var|float32
output = func_12084(var_12085,var_12086,)
func_12087 = relay.Function([var_12085,var_12086,], output)
mutated_mod['func_12087'] = func_12087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11826_call = mod.get_global_var('func_11826')
func_11827_call = mutated_mod.get_global_var('func_11827')
call_12100 = relay.TupleGetItem(func_11826_call(), 0)
call_12101 = relay.TupleGetItem(func_11827_call(), 0)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_12102 = relay.TupleGetItem(func_7331_call(), 0)
call_12103 = relay.TupleGetItem(func_7333_call(), 0)
output = relay.Tuple([call_12100,call_12102,])
output2 = relay.Tuple([call_12101,call_12103,])
func_12118 = relay.Function([], output)
mod['func_12118'] = func_12118
mod = relay.transform.InferType()(mod)
output = func_12118()
func_12119 = relay.Function([], output)
mutated_mod['func_12119'] = func_12119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6748_call = mod.get_global_var('func_6748')
func_6750_call = mutated_mod.get_global_var('func_6750')
call_12122 = relay.TupleGetItem(func_6748_call(), 0)
call_12123 = relay.TupleGetItem(func_6750_call(), 0)
const_12130 = relay.const([[[-1.257903,-6.376220,-9.716730,-9.592038,1.769787,1.281093],[0.900887,-0.345169,2.101754,-0.322762,-8.437730,0.941186],[2.882207,-4.868849,-1.023343,-0.314358,-2.555234,8.664496],[4.579838,1.630925,2.315514,-1.174244,3.676335,-9.515523]],[[4.980134,-2.541276,-9.390200,-5.502878,3.242467,8.097437],[-6.728681,-7.028455,-0.126328,4.746983,4.998572,4.728607],[0.125833,2.605926,-0.235318,8.987506,-5.292327,6.050236],[8.735407,7.378776,-8.942079,8.288117,-1.301723,-4.638094]],[[4.215902,-6.552345,-3.292934,0.053722,-1.643208,7.403330],[-0.907652,-3.789114,-5.104945,2.196080,8.744914,-9.079787],[7.041129,-4.872210,6.107789,8.928764,-1.143521,4.610712],[0.580761,-0.638562,-4.733761,-2.962598,-6.849178,9.175331]],[[-6.991225,-1.753293,3.710908,2.100395,-1.144619,0.907282],[-2.757809,-7.141159,-5.942239,-2.130739,-5.054934,1.298568],[-7.478414,-3.470818,-8.713488,0.492726,-3.826840,-4.761508],[6.387917,6.222476,9.139340,7.732667,4.509243,-1.942137]],[[-8.454860,7.925480,6.339594,7.023939,-8.956462,-3.853872],[3.956897,8.240070,-0.784067,-4.528890,8.200041,5.507939],[-1.582596,8.682508,8.248850,8.813996,-2.912194,-1.484015],[-8.294978,8.986130,2.513317,4.774491,4.815772,5.263901]],[[0.669809,0.691239,5.740063,3.461343,-6.848375,8.680442],[0.420835,6.182077,2.984824,3.680074,9.306249,-7.406223],[7.833757,7.217837,-1.363716,-3.335427,-0.473567,-4.399561],[-7.370238,3.919408,-8.669958,-4.644623,-4.471298,7.695416]],[[-3.489246,0.854328,0.602369,-1.787790,7.501361,-4.184599],[-4.462088,6.501020,-0.290195,-2.951985,-2.775311,2.132818],[-1.636930,-7.019711,9.316734,-9.394260,-7.328760,0.294740],[5.740224,-7.764753,-2.672046,-7.261318,2.384544,7.478753]],[[-1.283314,0.265109,-9.730196,1.892099,-5.375610,5.814698],[-4.619484,4.165092,5.185453,-5.891829,1.636628,3.878811],[2.135652,-7.416605,-7.640111,5.123635,-0.349531,7.628517],[8.262686,5.465914,-7.053639,-5.116835,7.578855,5.444313]],[[-6.340746,6.363530,4.618452,8.276948,0.226388,2.374027],[-3.692647,-9.614691,8.999081,4.850628,-0.471961,1.784125],[1.358643,6.718759,8.972293,2.920188,7.841291,8.033587],[9.745366,5.472041,4.757269,-5.686037,7.538411,-7.582539]],[[-4.852164,-8.255650,-1.984988,8.745061,2.584003,-0.612788],[-2.492494,-6.363077,6.046125,-7.621451,7.848426,4.790888],[-8.343140,-6.916049,-0.042930,6.874272,-5.722842,2.231536],[7.157673,-2.286861,-5.704987,1.420903,-8.498547,-1.729065]],[[-6.374842,-1.615190,-9.892043,-9.687719,-5.613404,3.560924],[6.068643,4.711101,-3.242732,-3.078871,-9.958287,-8.384908],[-8.499849,9.837236,6.167435,-3.829366,-1.774654,9.858508],[-3.539744,8.413584,-5.240625,7.626239,0.506766,1.210673]]], dtype = "float32")#candidate|12130|(11, 4, 6)|const|float32
bop_12131 = relay.power(call_12122.astype('float32'), const_12130.astype('float32')) # shape=(11, 4, 6)
bop_12134 = relay.power(call_12123.astype('float32'), const_12130.astype('float32')) # shape=(11, 4, 6)
func_6376_call = mod.get_global_var('func_6376')
func_6379_call = mutated_mod.get_global_var('func_6379')
var_12139 = relay.var("var_12139", dtype = "uint8", shape = (14, 3))#candidate|12139|(14, 3)|var|uint8
call_12138 = relay.TupleGetItem(func_6376_call(relay.reshape(var_12139.astype('uint8'), [42,])), 1)
call_12140 = relay.TupleGetItem(func_6379_call(relay.reshape(var_12139.astype('uint8'), [42,])), 1)
uop_12141 = relay.rsqrt(bop_12131.astype('float64')) # shape=(11, 4, 6)
uop_12143 = relay.rsqrt(bop_12134.astype('float64')) # shape=(11, 4, 6)
func_10365_call = mod.get_global_var('func_10365')
func_10366_call = mutated_mod.get_global_var('func_10366')
call_12144 = relay.TupleGetItem(func_10365_call(), 0)
call_12145 = relay.TupleGetItem(func_10366_call(), 0)
output = relay.Tuple([call_12138,var_12139,uop_12141,call_12144,])
output2 = relay.Tuple([call_12140,var_12139,uop_12143,call_12145,])
func_12160 = relay.Function([var_12139,], output)
mod['func_12160'] = func_12160
mod = relay.transform.InferType()(mod)
var_12161 = relay.var("var_12161", dtype = "uint8", shape = (14, 3))#candidate|12161|(14, 3)|var|uint8
output = func_12160(var_12161)
func_12162 = relay.Function([var_12161], output)
mutated_mod['func_12162'] = func_12162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9561_call = mod.get_global_var('func_9561')
func_9563_call = mutated_mod.get_global_var('func_9563')
call_12217 = func_9561_call()
call_12218 = func_9561_call()
output = call_12217
output2 = call_12218
func_12248 = relay.Function([], output)
mod['func_12248'] = func_12248
mod = relay.transform.InferType()(mod)
output = func_12248()
func_12249 = relay.Function([], output)
mutated_mod['func_12249'] = func_12249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12256 = relay.var("var_12256", dtype = "float32", shape = (4, 13, 5))#candidate|12256|(4, 13, 5)|var|float32
uop_12257 = relay.asinh(var_12256.astype('float32')) # shape=(4, 13, 5)
output = relay.Tuple([uop_12257,])
output2 = relay.Tuple([uop_12257,])
func_12263 = relay.Function([var_12256,], output)
mod['func_12263'] = func_12263
mod = relay.transform.InferType()(mod)
mutated_mod['func_12263'] = func_12263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12264 = relay.var("var_12264", dtype = "float32", shape = (4, 13, 5))#candidate|12264|(4, 13, 5)|var|float32
func_12263_call = mutated_mod.get_global_var('func_12263')
call_12265 = func_12263_call(var_12264)
output = call_12265
func_12266 = relay.Function([var_12264], output)
mutated_mod['func_12266'] = func_12266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7740_call = mod.get_global_var('func_7740')
func_7741_call = mutated_mod.get_global_var('func_7741')
call_12313 = relay.TupleGetItem(func_7740_call(), 1)
call_12314 = relay.TupleGetItem(func_7741_call(), 1)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
var_12316 = relay.var("var_12316", dtype = "float32", shape = (6, 99))#candidate|12316|(6, 99)|var|float32
call_12315 = func_5870_call(relay.reshape(var_12316.astype('float32'), [11, 9, 6]))
call_12317 = func_5870_call(relay.reshape(var_12316.astype('float32'), [11, 9, 6]))
output = relay.Tuple([call_12313,call_12315,var_12316,])
output2 = relay.Tuple([call_12314,call_12317,var_12316,])
func_12318 = relay.Function([var_12316,], output)
mod['func_12318'] = func_12318
mod = relay.transform.InferType()(mod)
mutated_mod['func_12318'] = func_12318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12319 = relay.var("var_12319", dtype = "float32", shape = (6, 99))#candidate|12319|(6, 99)|var|float32
func_12318_call = mutated_mod.get_global_var('func_12318')
call_12320 = func_12318_call(var_12319)
output = call_12320
func_12321 = relay.Function([var_12319], output)
mutated_mod['func_12321'] = func_12321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11568_call = mod.get_global_var('func_11568')
func_11570_call = mutated_mod.get_global_var('func_11570')
call_12354 = relay.TupleGetItem(func_11568_call(), 1)
call_12355 = relay.TupleGetItem(func_11570_call(), 1)
output = call_12354
output2 = call_12355
func_12356 = relay.Function([], output)
mod['func_12356'] = func_12356
mod = relay.transform.InferType()(mod)
mutated_mod['func_12356'] = func_12356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12356_call = mutated_mod.get_global_var('func_12356')
call_12357 = func_12356_call()
output = call_12357
func_12358 = relay.Function([], output)
mutated_mod['func_12358'] = func_12358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11193_call = mod.get_global_var('func_11193')
func_11194_call = mutated_mod.get_global_var('func_11194')
call_12420 = relay.TupleGetItem(func_11193_call(), 0)
call_12421 = relay.TupleGetItem(func_11194_call(), 0)
output = call_12420
output2 = call_12421
func_12423 = relay.Function([], output)
mod['func_12423'] = func_12423
mod = relay.transform.InferType()(mod)
output = func_12423()
func_12424 = relay.Function([], output)
mutated_mod['func_12424'] = func_12424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4899_call = mod.get_global_var('func_4899')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_12429 = relay.TupleGetItem(func_4899_call(), 0)
call_12430 = relay.TupleGetItem(func_4900_call(), 0)
func_11134_call = mod.get_global_var('func_11134')
func_11135_call = mutated_mod.get_global_var('func_11135')
call_12436 = relay.TupleGetItem(func_11134_call(), 0)
call_12437 = relay.TupleGetItem(func_11135_call(), 0)
bop_12440 = relay.left_shift(call_12429.astype('uint16'), relay.reshape(call_12436.astype('uint16'), relay.shape_of(call_12429))) # shape=(11, 1, 6)
bop_12443 = relay.left_shift(call_12430.astype('uint16'), relay.reshape(call_12437.astype('uint16'), relay.shape_of(call_12430))) # shape=(11, 1, 6)
output = bop_12440
output2 = bop_12443
func_12445 = relay.Function([], output)
mod['func_12445'] = func_12445
mod = relay.transform.InferType()(mod)
output = func_12445()
func_12446 = relay.Function([], output)
mutated_mod['func_12446'] = func_12446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9022_call = mod.get_global_var('func_9022')
func_9023_call = mutated_mod.get_global_var('func_9023')
call_12482 = func_9022_call()
call_12483 = func_9022_call()
func_6376_call = mod.get_global_var('func_6376')
func_6379_call = mutated_mod.get_global_var('func_6379')
var_12513 = relay.var("var_12513", dtype = "uint8", shape = (42,))#candidate|12513|(42,)|var|uint8
call_12512 = relay.TupleGetItem(func_6376_call(relay.reshape(var_12513.astype('uint8'), [42,])), 0)
call_12514 = relay.TupleGetItem(func_6379_call(relay.reshape(var_12513.astype('uint8'), [42,])), 0)
func_11379_call = mod.get_global_var('func_11379')
func_11381_call = mutated_mod.get_global_var('func_11381')
const_12538 = relay.const([7.685523,6.227262,0.918273,1.981962,-7.093033,7.096890,-1.389548,7.886609,5.105532,8.341473,6.417102,-8.719749,-9.709561,6.603463,9.709889,0.850754,2.185645,-0.238266,-0.268174,8.928783,-3.836428,1.861014,4.298840,9.656647,-0.164859,7.735390,4.571349,2.303797,8.463913,9.590625,7.416230,7.387701,4.026713,-3.113757,4.620494,-4.929384,-1.527734,-1.560688,7.409246,-0.223960,-1.622940,0.783996,8.582147,1.839673,0.401049,-3.863337,-9.031660,-9.286379,5.188979,1.026563,-0.884752,-5.725124,5.962261,-3.719233,-4.308397,-8.722643,-2.445137,-9.993883,-4.755982,-6.499006,-4.241986,0.630912,-8.654170,5.600550,-8.659194,2.134378,-7.192954,3.361683,-5.126695,-7.604987,-1.377720,-6.990102,-7.060925,4.310779,-1.907483,8.547266,-6.499536,2.906609,-0.411570,-1.503431,8.419126,5.645024,1.818396,5.127503,5.952390,-6.616669,-7.421295,-3.998782,9.903992,-6.880208,-0.598696,-7.900335,-8.605565,4.221451,-4.280412,1.942381,0.534866,-7.179650,9.772207,7.420677,5.048021,-7.948280,-2.563639,0.072681,-2.841646,3.203194,8.265477,0.187160,-9.090249,-8.195571,-6.375251,-6.056987,-6.856689,-1.645282,0.424344,-4.350064,8.097163,-7.414561,-1.558247,6.610335,9.891255,6.861534,6.667247,-9.647199,7.401689,-1.557325,-9.790202,-1.438729,1.975269,-5.050917,-5.770434,-6.332472,-6.184495,2.483946,-7.727000,8.439290,0.111274,-6.716693,-4.157479,-2.516334,2.874162,0.575175,-6.618717,-8.232320,0.665697,-3.602164,-3.808287,4.536406,2.591732,4.019029,-3.143407,-7.358016,0.961714,-4.582826,4.648396,9.324098,9.749166,6.965902,-4.485217,-3.786105,-9.623091,3.852356,6.333947,3.998890,5.676206,-3.786196,-4.451410,-0.868623,6.130083,9.736250,8.824697,8.889359,5.003201,-7.089061,-1.127482,0.087086,2.397550,6.598719,-0.534109,-7.677401,4.965581,0.762799,7.250231,0.548819,-1.870656,9.050640,-0.771914,-4.422486,9.356753,4.881788,4.749102,2.799586,-8.098206,8.436948,1.411839,-5.400008,-0.945055,-0.939685,8.783014,-1.107563,-4.192615,-6.877244,-0.861713,1.738472,7.971612,-1.355142,0.353698,-5.735365,-5.996144,-4.609140,0.673433,3.765817,-0.864686,6.946155,9.059018,5.820283,3.927430,-0.574482,2.574096,-6.216270,5.004720,2.809992,-8.894790,-0.160999,-2.864639,-2.760641,5.672487,9.857069,-4.305463,-2.526510,4.196548,9.718122,8.584651,-3.763805,7.826923,5.789334,6.242195,-5.873947,-4.375217,6.053369,9.702125,-1.371269,1.958038,9.538474,-3.543860,6.641561,1.821747,6.712596,6.274664,8.696727,-2.168413,1.206829,-8.752788,8.392750,-3.281435,9.092704,-5.343896,-3.044077,2.574667,3.935490,0.276122,7.930269,-7.467798,2.503943,7.046817,-7.937501,-6.538653,1.410414,4.346478,8.928238,3.264188,-8.474837,2.492141,2.106237,-2.007041,-1.894379,-4.115536,-4.702717,-3.768616,-9.412322,8.284966,0.442612,-0.006281,-7.140001,5.094360,3.633661,-9.475182,7.555033,-2.559212,-7.715647,3.519723,8.791713,6.547634,-8.996374,9.499152,2.133844,-8.897274,-7.742242,2.456882,-7.218412,8.984329,-9.339139,0.038056,2.465380,-5.860442,-4.579127,-2.445327,2.602835,-6.131715,-6.206919,-1.987308,-4.366514,-7.429551,2.696547,5.473848,9.589491,2.359460,-7.244967,9.518361,5.250900,5.123734,2.775701,9.686285,5.815069,2.787962,5.357396,4.690882,-8.054301,6.276696,-5.340153,7.968257,5.166617,6.288651,-5.854586,4.188901,-9.417694,3.311647,-1.754325,0.693406,-3.385335,4.198766,-3.332655,6.120615,9.791332,2.893961,6.937940,5.134257,9.512243,-2.870896,1.210551,3.345340,1.277014,6.855886,0.851585,8.703386,9.974744,-5.826323,-4.008999,-9.123310,-6.400422,2.961823,5.735229,-3.251473,3.206554,-1.812714,-2.966541,-1.512022,-0.026896,9.264888,-2.438666,-0.846146,-0.027972,-5.928344,-1.948248,-7.849283,-3.352977,7.233573,-9.919669,-9.506421,-2.583800,-8.388610,8.245243,-7.536180,-9.631697,5.363088,2.733480,0.390194,-0.862791,-3.969008,-9.985671,5.640313,-7.120848,-4.165480,-6.984701,-6.608158,4.912423,5.387608,8.924734,2.164161,-3.631467,0.585643,-7.965755,1.533858,-3.928583,1.052538,-7.796925,8.811080,4.544288,4.524375,-3.927228,6.381428,-3.725238,-8.496178,-0.611581,3.332149,7.935539,-0.645039,4.159123,-1.424669,2.360491,9.639445,7.720258,-4.827083,-4.718688,-5.052575,5.948788,7.244817,9.413376,-6.490926,6.877326,-1.954939,-2.621656,-0.843213,-3.948660,0.147808,-3.234435,5.107587,0.218769,3.503442,6.100467,-7.785172,4.822646,-6.900487,-9.031434,-9.225408,-5.288238,-5.142732,-7.257289,1.646746,5.858257], dtype = "float32")#candidate|12538|(450,)|const|float32
call_12537 = relay.TupleGetItem(func_11379_call(relay.reshape(const_12538.astype('float32'), [450,])), 2)
call_12539 = relay.TupleGetItem(func_11381_call(relay.reshape(const_12538.astype('float32'), [450,])), 2)
output = relay.Tuple([call_12482,call_12512,var_12513,call_12537,const_12538,])
output2 = relay.Tuple([call_12483,call_12514,var_12513,call_12539,const_12538,])
func_12544 = relay.Function([var_12513,], output)
mod['func_12544'] = func_12544
mod = relay.transform.InferType()(mod)
var_12545 = relay.var("var_12545", dtype = "uint8", shape = (42,))#candidate|12545|(42,)|var|uint8
output = func_12544(var_12545)
func_12546 = relay.Function([var_12545], output)
mutated_mod['func_12546'] = func_12546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11178_call = mod.get_global_var('func_11178')
func_11179_call = mutated_mod.get_global_var('func_11179')
call_12588 = relay.TupleGetItem(func_11178_call(), 0)
call_12589 = relay.TupleGetItem(func_11179_call(), 0)
func_12445_call = mod.get_global_var('func_12445')
func_12446_call = mutated_mod.get_global_var('func_12446')
call_12627 = func_12445_call()
call_12628 = func_12445_call()
output = relay.Tuple([call_12588,call_12627,])
output2 = relay.Tuple([call_12589,call_12628,])
func_12630 = relay.Function([], output)
mod['func_12630'] = func_12630
mod = relay.transform.InferType()(mod)
mutated_mod['func_12630'] = func_12630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12630_call = mutated_mod.get_global_var('func_12630')
call_12631 = func_12630_call()
output = call_12631
func_12632 = relay.Function([], output)
mutated_mod['func_12632'] = func_12632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_12639 = relay.TupleGetItem(func_7093_call(), 1)
call_12640 = relay.TupleGetItem(func_7095_call(), 1)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_12669 = func_7045_call()
call_12670 = func_7045_call()
output = relay.Tuple([call_12639,call_12669,])
output2 = relay.Tuple([call_12640,call_12670,])
func_12671 = relay.Function([], output)
mod['func_12671'] = func_12671
mod = relay.transform.InferType()(mod)
output = func_12671()
func_12672 = relay.Function([], output)
mutated_mod['func_12672'] = func_12672
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12778 = relay.var("var_12778", dtype = "uint8", shape = (8, 16, 7))#candidate|12778|(8, 16, 7)|var|uint8
var_12779 = relay.var("var_12779", dtype = "uint8", shape = (8, 16, 7))#candidate|12779|(8, 16, 7)|var|uint8
bop_12780 = relay.maximum(var_12778.astype('uint8'), relay.reshape(var_12779.astype('uint8'), relay.shape_of(var_12778))) # shape=(8, 16, 7)
output = relay.Tuple([bop_12780,])
output2 = relay.Tuple([bop_12780,])
func_12785 = relay.Function([var_12778,var_12779,], output)
mod['func_12785'] = func_12785
mod = relay.transform.InferType()(mod)
mutated_mod['func_12785'] = func_12785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12785_call = mutated_mod.get_global_var('func_12785')
var_12787 = relay.var("var_12787", dtype = "uint8", shape = (8, 16, 7))#candidate|12787|(8, 16, 7)|var|uint8
var_12788 = relay.var("var_12788", dtype = "uint8", shape = (8, 16, 7))#candidate|12788|(8, 16, 7)|var|uint8
call_12786 = func_12785_call(var_12787,var_12788,)
output = call_12786
func_12789 = relay.Function([var_12787,var_12788,], output)
mutated_mod['func_12789'] = func_12789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9022_call = mod.get_global_var('func_9022')
func_9023_call = mutated_mod.get_global_var('func_9023')
call_12827 = func_9022_call()
call_12828 = func_9022_call()
func_9561_call = mod.get_global_var('func_9561')
func_9563_call = mutated_mod.get_global_var('func_9563')
call_12829 = func_9561_call()
call_12830 = func_9561_call()
func_12544_call = mod.get_global_var('func_12544')
func_12546_call = mutated_mod.get_global_var('func_12546')
var_12845 = relay.var("var_12845", dtype = "uint8", shape = (42,))#candidate|12845|(42,)|var|uint8
call_12844 = relay.TupleGetItem(func_12544_call(relay.reshape(var_12845.astype('uint8'), [42,])), 2)
call_12846 = relay.TupleGetItem(func_12546_call(relay.reshape(var_12845.astype('uint8'), [42,])), 2)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_12851 = func_7045_call()
call_12852 = func_7045_call()
output = relay.Tuple([call_12827,call_12829,call_12844,var_12845,call_12851,])
output2 = relay.Tuple([call_12828,call_12830,call_12846,var_12845,call_12852,])
func_12855 = relay.Function([var_12845,], output)
mod['func_12855'] = func_12855
mod = relay.transform.InferType()(mod)
mutated_mod['func_12855'] = func_12855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12856 = relay.var("var_12856", dtype = "uint8", shape = (42,))#candidate|12856|(42,)|var|uint8
func_12855_call = mutated_mod.get_global_var('func_12855')
call_12857 = func_12855_call(var_12856)
output = call_12857
func_12858 = relay.Function([var_12856], output)
mutated_mod['func_12858'] = func_12858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8333_call = mod.get_global_var('func_8333')
func_8334_call = mutated_mod.get_global_var('func_8334')
call_12862 = relay.TupleGetItem(func_8333_call(), 0)
call_12863 = relay.TupleGetItem(func_8334_call(), 0)
output = call_12862
output2 = call_12863
func_12877 = relay.Function([], output)
mod['func_12877'] = func_12877
mod = relay.transform.InferType()(mod)
mutated_mod['func_12877'] = func_12877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12877_call = mutated_mod.get_global_var('func_12877')
call_12878 = func_12877_call()
output = call_12878
func_12879 = relay.Function([], output)
mutated_mod['func_12879'] = func_12879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10863_call = mod.get_global_var('func_10863')
func_10865_call = mutated_mod.get_global_var('func_10865')
call_12886 = relay.TupleGetItem(func_10863_call(), 4)
call_12887 = relay.TupleGetItem(func_10865_call(), 4)
output = relay.Tuple([call_12886,])
output2 = relay.Tuple([call_12887,])
func_12898 = relay.Function([], output)
mod['func_12898'] = func_12898
mod = relay.transform.InferType()(mod)
output = func_12898()
func_12899 = relay.Function([], output)
mutated_mod['func_12899'] = func_12899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7927_call = mod.get_global_var('func_7927')
func_7928_call = mutated_mod.get_global_var('func_7928')
call_12905 = relay.TupleGetItem(func_7927_call(), 4)
call_12906 = relay.TupleGetItem(func_7928_call(), 4)
uop_12913 = relay.acos(call_12905.astype('float64')) # shape=(11, 1, 6)
uop_12915 = relay.acos(call_12906.astype('float64')) # shape=(11, 1, 6)
func_8052_call = mod.get_global_var('func_8052')
func_8056_call = mutated_mod.get_global_var('func_8056')
const_12917 = relay.const([[False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True]], dtype = "bool")#candidate|12917|(1, 960)|const|bool
const_12918 = relay.const([9.154004,-1.516516,0.204727,3.444197,4.840812,-0.655291,-3.737808,-1.709768,1.279837,-8.204005,4.593046,8.094061,9.943033,-3.979184,9.773692,-4.463788,0.123413,-1.552244,7.362225,-6.688028,-7.489239,-4.588130,-0.063607,-2.643196,-4.595880,9.909329,7.831385,7.313488,-8.996734,4.976505,-0.758586,4.585041,-2.602231,-8.189174,1.243992,-3.185100,-4.059993,-5.120874,5.219027,-6.109360,1.376146,6.282574,-9.060143,9.372408,-3.136248,-7.976537,-3.505373,1.712424,5.897628,-4.403253,-9.261421,-3.527986,4.211517,4.043719,-0.324737,6.080793,-5.747272,-9.215691,9.182056,9.074809,-2.748807,-1.680230,4.041813,1.065194,-7.719221,1.743412,-0.328212,2.363731,1.231679,2.245891,-2.427088,4.933589,3.169530,-2.078936,-3.535803,6.651406,0.348550,5.318762,5.324198,-8.117597,7.743158,-7.648253,3.236621,1.063758,-5.047534,-7.558318,9.405463,2.014591,6.036246,-6.571781,-3.906878,-3.412556,1.247192,-1.913546,-2.699887,-4.792746,6.689781,-1.268545,-7.769969,6.245837,-9.993554,-1.786255,2.334255,-3.453224,6.424887,-9.365337,-0.894176,7.698916,4.021360,-9.400401,-4.148409,6.660610,0.880758,7.645601,3.949447,4.605774,-7.932590,-0.384015,0.455050,6.022700,3.200005,-3.843543,-9.334933,0.330596,-1.087581,-3.058734,9.203834,-0.547057,9.790893,-1.087455,-7.451035,-5.670028,8.797678,-3.899769,3.688365,8.972922,-1.325869,7.703369,-1.299605,-4.929176,-9.751312,0.137960,-9.578981,0.729034,1.142843,-5.409627,3.152992,7.933225,4.472547,0.747699,3.462242,9.961619,9.924502,-5.128909,-8.399548,-8.588971,6.752332,-8.439264,3.780482,2.710098,9.525774,-1.144407,-5.423684,-7.480365,9.435909,9.430327,-3.448672,-6.574446,7.242402,6.931959,8.157598,-4.686791,-1.558813,-6.050118,-9.874047,-6.025527,-6.127438,-1.672706,-2.758931,-0.552704,5.995153,-8.148927,0.258812,4.936569,-5.112431,-7.186608,-1.177502,-9.240431,3.381148,-3.585142,1.472939,9.267233,6.121064,-8.747918,-9.837392,2.346552,-9.604518,-3.913498,5.395690,-6.207819,-0.502867,2.057082,-8.683442,2.364003,6.281603,4.464629,1.906021,-8.673451,2.104216,-4.804917,8.327698,0.338992,-4.223977,7.266599,2.163753,7.394030,-3.251372,-8.086878,-5.864267,-3.697148,1.348723,-0.485669,7.220075,0.671180,-4.858559,-1.012022,1.361403,4.502118,5.280226,9.129675,4.773507,2.577092,-9.520592,-9.205423,0.406755,-2.225357,-4.499357,6.563151,0.827134,-5.082127,9.730769,8.487683,-8.367667,-0.506948,-6.692401,-0.430655,-9.941421,6.147678,0.911104,8.507025,5.673692,5.724617,0.571851,5.585422,9.914826,-2.311302,-8.423004,-0.240789,-9.197544,6.444477,-9.863562,-9.429434,7.084136,3.926110,5.595440,4.351749,-0.085608,8.567963,-0.124727,-6.881689,-2.814395,-6.130057,4.077094,-7.711437,1.363608,-2.898478,6.608220,-1.144117,-4.807654,-9.098440,-8.603006,-3.956101,-6.453377,-7.941366,-5.860126,6.524707,5.621746,-3.549758,-0.836101,1.662283,-0.814867,9.055765,-4.336975,-3.442331,-2.224968,7.633810,-8.489315,1.914213,3.762016,1.785346,3.109606,-4.045916,-0.309209,4.432689,3.430979,-8.183578,-4.602335,-2.652844,9.377939,9.570902,1.841061,7.876977,8.662743,-8.536671,-3.837234,-8.253214,-1.498308,3.743751,5.104080,2.932838,4.750620,-0.479106,-7.559223,-4.871283,2.831152,2.691063,-3.741242,5.316911,0.004418,-7.996214], dtype = "float64")#candidate|12918|(330,)|const|float64
call_12916 = relay.TupleGetItem(func_8052_call(relay.reshape(const_12917.astype('bool'), [16, 15, 4]), relay.reshape(const_12918.astype('float64'), [11, 5, 6]), ), 0)
call_12919 = relay.TupleGetItem(func_8056_call(relay.reshape(const_12917.astype('bool'), [16, 15, 4]), relay.reshape(const_12918.astype('float64'), [11, 5, 6]), ), 0)
output = relay.Tuple([uop_12913,call_12916,const_12917,const_12918,])
output2 = relay.Tuple([uop_12915,call_12919,const_12917,const_12918,])
func_12931 = relay.Function([], output)
mod['func_12931'] = func_12931
mod = relay.transform.InferType()(mod)
output = func_12931()
func_12932 = relay.Function([], output)
mutated_mod['func_12932'] = func_12932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5911_call = mod.get_global_var('func_5911')
func_5912_call = mutated_mod.get_global_var('func_5912')
call_12953 = func_5911_call()
call_12954 = func_5911_call()
output = call_12953
output2 = call_12954
func_12960 = relay.Function([], output)
mod['func_12960'] = func_12960
mod = relay.transform.InferType()(mod)
mutated_mod['func_12960'] = func_12960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12960_call = mutated_mod.get_global_var('func_12960')
call_12961 = func_12960_call()
output = call_12961
func_12962 = relay.Function([], output)
mutated_mod['func_12962'] = func_12962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5295_call = mod.get_global_var('func_5295')
func_5297_call = mutated_mod.get_global_var('func_5297')
call_12963 = relay.TupleGetItem(func_5295_call(), 0)
call_12964 = relay.TupleGetItem(func_5297_call(), 0)
output = relay.Tuple([call_12963,])
output2 = relay.Tuple([call_12964,])
func_12987 = relay.Function([], output)
mod['func_12987'] = func_12987
mod = relay.transform.InferType()(mod)
output = func_12987()
func_12988 = relay.Function([], output)
mutated_mod['func_12988'] = func_12988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10053_call = mod.get_global_var('func_10053')
func_10055_call = mutated_mod.get_global_var('func_10055')
call_13005 = relay.TupleGetItem(func_10053_call(), 0)
call_13006 = relay.TupleGetItem(func_10055_call(), 0)
output = relay.Tuple([call_13005,])
output2 = relay.Tuple([call_13006,])
func_13010 = relay.Function([], output)
mod['func_13010'] = func_13010
mod = relay.transform.InferType()(mod)
output = func_13010()
func_13011 = relay.Function([], output)
mutated_mod['func_13011'] = func_13011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5295_call = mod.get_global_var('func_5295')
func_5297_call = mutated_mod.get_global_var('func_5297')
call_13014 = relay.TupleGetItem(func_5295_call(), 0)
call_13015 = relay.TupleGetItem(func_5297_call(), 0)
func_9194_call = mod.get_global_var('func_9194')
func_9196_call = mutated_mod.get_global_var('func_9196')
call_13022 = relay.TupleGetItem(func_9194_call(), 0)
call_13023 = relay.TupleGetItem(func_9196_call(), 0)
output = relay.Tuple([call_13014,call_13022,])
output2 = relay.Tuple([call_13015,call_13023,])
func_13030 = relay.Function([], output)
mod['func_13030'] = func_13030
mod = relay.transform.InferType()(mod)
mutated_mod['func_13030'] = func_13030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13030_call = mutated_mod.get_global_var('func_13030')
call_13031 = func_13030_call()
output = call_13031
func_13032 = relay.Function([], output)
mutated_mod['func_13032'] = func_13032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9903_call = mod.get_global_var('func_9903')
func_9904_call = mutated_mod.get_global_var('func_9904')
call_13038 = relay.TupleGetItem(func_9903_call(), 2)
call_13039 = relay.TupleGetItem(func_9904_call(), 2)
func_7767_call = mod.get_global_var('func_7767')
func_7769_call = mutated_mod.get_global_var('func_7769')
call_13041 = func_7767_call()
call_13042 = func_7767_call()
func_5800_call = mod.get_global_var('func_5800')
func_5804_call = mutated_mod.get_global_var('func_5804')
var_13045 = relay.var("var_13045", dtype = "uint8", shape = (315,))#candidate|13045|(315,)|var|uint8
var_13046 = relay.var("var_13046", dtype = "float32", shape = (968,))#candidate|13046|(968,)|var|float32
var_13047 = relay.var("var_13047", dtype = "float64", shape = (420,))#candidate|13047|(420,)|var|float64
call_13044 = relay.TupleGetItem(func_5800_call(relay.reshape(var_13045.astype('uint8'), [315,]), relay.reshape(var_13046.astype('float32'), [968,]), relay.reshape(var_13047.astype('float64'), [420,]), ), 1)
call_13048 = relay.TupleGetItem(func_5804_call(relay.reshape(var_13045.astype('uint8'), [315,]), relay.reshape(var_13046.astype('float32'), [968,]), relay.reshape(var_13047.astype('float64'), [420,]), ), 1)
output = relay.Tuple([call_13038,call_13041,call_13044,var_13045,var_13046,var_13047,])
output2 = relay.Tuple([call_13039,call_13042,call_13048,var_13045,var_13046,var_13047,])
func_13049 = relay.Function([var_13045,var_13046,var_13047,], output)
mod['func_13049'] = func_13049
mod = relay.transform.InferType()(mod)
var_13050 = relay.var("var_13050", dtype = "uint8", shape = (315,))#candidate|13050|(315,)|var|uint8
var_13051 = relay.var("var_13051", dtype = "float32", shape = (968,))#candidate|13051|(968,)|var|float32
var_13052 = relay.var("var_13052", dtype = "float64", shape = (420,))#candidate|13052|(420,)|var|float64
output = func_13049(var_13050,var_13051,var_13052,)
func_13053 = relay.Function([var_13050,var_13051,var_13052,], output)
mutated_mod['func_13053'] = func_13053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11826_call = mod.get_global_var('func_11826')
func_11827_call = mutated_mod.get_global_var('func_11827')
call_13055 = relay.TupleGetItem(func_11826_call(), 0)
call_13056 = relay.TupleGetItem(func_11827_call(), 0)
func_8631_call = mod.get_global_var('func_8631')
func_8632_call = mutated_mod.get_global_var('func_8632')
call_13057 = func_8631_call()
call_13058 = func_8631_call()
output = relay.Tuple([call_13055,call_13057,])
output2 = relay.Tuple([call_13056,call_13058,])
func_13064 = relay.Function([], output)
mod['func_13064'] = func_13064
mod = relay.transform.InferType()(mod)
output = func_13064()
func_13065 = relay.Function([], output)
mutated_mod['func_13065'] = func_13065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11628_call = mod.get_global_var('func_11628')
func_11630_call = mutated_mod.get_global_var('func_11630')
call_13085 = relay.TupleGetItem(func_11628_call(), 0)
call_13086 = relay.TupleGetItem(func_11630_call(), 0)
func_8904_call = mod.get_global_var('func_8904')
func_8906_call = mutated_mod.get_global_var('func_8906')
const_13100 = relay.const([9,-6,-7,-10,-3,-10,-10,-2,1,2,2,10,-3,7,7,4,5,9,-6,4,5,-4,-10,-4,4,4,-4,-3,1,2,9,8,-6,7,-5,5,4,7,-8,6,-6,8,-5,8,-9,8,8,6,-2,-8,-6,8,-4,4,3,6,2,-1,2,-7,-4,1,-10,6,9,-8,8,-5,-1,8,10,-5,-7,3,8,10,-6,3,-9,-9,-4,-3,5,7,-8,-9,-9,3,1,-5,6,10,-8,10,-2,6,-6,-10,-9,-4,-4,-5,9,8,4,10,1,-3,-3,-6,10,2,-3,6,1,-8,4,7,9,-3,9,4,5,8,-10,4,-8,-9,-9,2,-6,-5,2,-6,-7,8,4,5,1,7,10,5,-10,-7,-9,10,-1,-8,5,8,4,-8,-7,-6,-8,2,-6,6,-3,-4,-3,-10,9,7,-1,-8,10,3,-2,-8,4,8,8,6,6,4,6,4,-1,1,-8,8,8,-5,-10,1,-4,-2,5,-6,7,2,5,9,9,-1,-1,-4,8,-9,4,-10,1,3,-1,-6,-10,-4,-4,-2,-4,-1,1,6,-7,-8,7,1,2,-5,-4,1,-1,10,7,2,4,8,1,5,-1,10,10,7,7,5,6,7,1,5,-9,1,8,-1,5,8,-10,5,2,-2,-5,2,4,-9,7,5,8,-3,7,-7,1,-8,4,1,-7,-4,-1,-6,-6,-10,-8,10,10,6,9,-10,1,-1,3,-2,4,-5,-4,8,5,-6,-4,2,-2,-1,-6,-9,-1,5,-2,-4,-4,-1,-9,10,-8,8,-3,-6,-3,-5,-10,-7,7,-4,-8,5,-5,-2,-5,8,-9,7,-1,8,-10,2,-7,10,8,3,2,7,2,2,2,-3,10,-6,3,-4,6,4,2,9,9,7,-10,9,-4,3,4,-6,6,-5,5,-3,-5,6,2,-9,-7,-10,-9,-1,1,8,10,10,-7,6,-4,4,-7,-5,6,-9,10,-4,-10,1,-8,7,-2,-7,-1,10,-3,3,5,-2,3,7,-3,-2,5,6,-2,-3,-9,-5,3,-6,-10,-10,-8,-7,4,-4,-3,1,10,1,-10,8,5,2,9,-8,-8,5,1,-6,-5,1,5,-8,-1,6,-5,3,-8,-10,4,7,6,-7,-3,1,1,8,8,-2,-4,8,-5,-1,-7,-1,9,-2,-1,4,-10,-3,-9,-9,-8,-3,9,4,-4,6,-6,-2,-4,-1,-3,-10,8,-4,-6,-3,1,-7,-9,4,-5,-7,-9,5,-3,-10,-1,-7,-4,7,3,-2,-8,-9,-1,-2,-5,-9,-8,-10,1,7,-10,1,7,-4,10,9,5,8,-10,4,1,-2,8,-10,-1,2,-3,-7,-3,-1,5,4,7,-9,4,4,5,-4,7,-3,-3,2,-10,-6,-10,-9,-8,-6,-4,-4,8,-4,6,-7,4,-3,-9,-4,-6,3,9,2,6,6,4,-8,10,5,-2,8,6,-6,8,3,2,1,-1,-3,-10,-7,-9,-7,1,-4,6,-10,5,9,-7,9,-2,5,3,10,-6,-8,-4,-5,-8,-9,-3,1,6,-3,-2,-4,-3,8,6,-1,-5,-7,-5,5,3,10,-2,4,-10,-2,-9,7,-7,10,-2,-6,-2,-9,7,-2,7,-6,2,-8,-7,5,9,8,8,1,-8,1,4,-9,-4,-3,3,-10,9,7,2,-2,7,-9,9,-9,9,-9,9,-3,-6,-4,6,-4,-3,1,-7,6,-4,-1,5,1,9,6,-9,1,-5,-6,8,-6,-3,6,-1,-5,9,9,3,7,-4,-10,-4,-8,-5,-2,4,-5,6,-10,4,-3,1,-9,5,-8,1,-10,10,-3,-2,-9,-2,7,6,6,-3,4,-4,8,-9,6,6,-4,-4,1,-4,4,5,-6,1,10,5,-7,7,6,-2,5,-8,4,7,-8,6,-9,-7,1,-8,-9,-6,-2,2,10,-8,-1,5,-8,1,-5,2,-9,10,-5,2,3,-2,1,-1,-7,-8,-7,4,-7,-5,-3,8,-6,-1,-9,6,-10,-5,2,4,6,8,4,1,6,-6,5,-10,-4,-3,-3,-3,7,4,3,-9,-7,-4,-8,4,5,4,4,10,-6,-9,1,-9,-1,8,-10,-4,-5,-10,5,8,2,9,-7,-5,9,-9,7,9,-3,-1,5,2,4,-4,3,-1,3,4,7,10,-3,-6,-8,-8,3,4,5,-9,-7,9,4,-7,-10,-6,10,4,-6,-6,7,-7,-5,8,6,-2,10,-3,3,-1,10,-3,7,4,10,-10,-5,-5,8,4,-1,-7,8,-5,-1,-6,-8,-3,-6,8,8,1,5,-6,1,6,-6,5,4,-5,-8,6,-9,1,-8,1,7,1,-2,-2,7,-5,3,-7,9,2,4,-5,8,10,3,4,-7,-1,-2,-2,-2,-3,8,-2,3,-6,3,-4,5,7,-7,-7,5,-3,-10,-7,-1,-7,-2,8,2,-4,5,-4,-2,-10,3,3,-5,3,1,-10,-2,-3,-6,10,5,1,-4,2,-7,4,10,-7,6,-10,2,1,-7,-6,5,8,-2,10,5,1,-2,3,-4,7,-2,9,9,8,2,6,2,7,-5,9,1,-6,-4,-5,1,10,-10,-7,-7,-4,1,-10,8,-8,-6,-6,6,10,-1,10,-8,5,-9,1,-9,7,-7,-4,4,-9,-10,7,-7,6,1,-9,-6,1,7,1,6,-8,7,-9,8,1,-5,4,5,-9,5,9,2,-7,9,7,-6,-10,10,3,-7,4,7,3,9,10,10,5,9,-3,10,6,8,8,-5,-4,9,4,7,8,1,-1,-7,-5,10,5,-1,-5,-6,4,6,-4,7,1,-7,-1,-6,9,9,-10,-3,9,5,-2,-9,-2,4,1,4,-7,-10,-9,-3,10,2,10,-4,-1,5,9,10,8,-7,-7,-3,-2,-7,9,-7,9,-8,7,10,-10,1,-8,3,5,6,-1,-8,-2,-1,-2,-2,2,-4,4,6,8,5,8,-3,-6,-5,-8,9,8,2,10,3,-6,10,-10,3,-6,7,4,7,8,6,-4,7,5,-4,-5,-5,-5,-10,1,-4,-10,1,10,4,9,-6,-7,7,-6,8,-7,2,-8,-6,6,8,-2,9,-6,-1,-7,7,4,7,-2,-1,10,2,8,8,9,-9,4,2,5,4,2,7,3,6,-10,6,-10,7,8,1,1,8,-10,-7,6,8,-1,4,10,1,6,-10,-8,6,4,1,7,-3,2,3,-9,5,-5,-4,-2,-7,-4,7,-5,6,-10,5,8,8,7,-7,-2,8,5,6,-9,-6,-1,-3,-7,8,-9,9,-2,-9,-8,-7,3,10,7,5,-9,9,7,-8,2,-4,-10,10,9,3,8,-8,7,-8,1,2,-6,10,2,8,4,9,-6,-6,-8,4,10,6,-9,-4,6,10,7,-5,-8,7,4,5,-4,-9,-1,8,-5,1,-9,-4,-8,-8,6,6,-6,-5,-6,2,-3,-2,-4,-8,-9,2,-1,-2,3,-6,3,3,4,2,10,1,7,-2,8,-9,-6,-2,9,9,-7,-1,8,2,3,3,-7,9,-10,4,-10,4,6,-6,-1,9,10,8,5,10,-3,-3,9,-4,-4,8,1,-1,-5,6,-10,6,6,-9,-4,-10,6,-7,9,6,8,-7,-4,-10,5,-7,-10,8,6,8,8,7,5,-9,-5,-8,-6,4,5,-9,9,-7,8,6,5,-4,-3,-7,4,1,-10,4,3,-6,-1,9,10,8,5,3,-7,-3,9,9,5,-5,-8,-10,7,1,10,8,10,-1,-2,-3,1,-1,5,6,-1,-6,9,2,-2,4,5,-4,-1,-7,9,-4,-7,1,-5,3,-7,5,-3,-2,1,6,7,8,7,1,-7,-4,-9,6,3,2,-6,-6,5,5,1,2,5,7,7,-6,4,9,-9,9,-4,-2,7,3,-3,8,2,-5,9,-9,-2,3,6,-1,-6,-5,-1,-5,4,-2,6,2,-9,-7,8,5,10,6,-9,-9,9,-9,2,1,-2,2,3,6,-10,10,-8,8,4,-3,10,10,-9,-2,-3,-6,5,2,1,-10,10,1,-5,-7,-4,4,2,5,-2,-2,-7,-9,6,10,9,10,-10,-9,-9,-3,-7,-9,10,-10,-9,9,-1,-8,-10,-4,-8,8,7,-2,6,-1,2,-1,2,-7,4,-4,-4,1,3,-3,-2,-9,-10,5,-8,-8,4,5,3,-4,-9,3,3,7,1,-8,-1,-10], dtype = "int16")#candidate|13100|(1600,)|const|int16
call_13099 = relay.TupleGetItem(func_8904_call(relay.reshape(const_13100.astype('int16'), [16, 10, 10])), 0)
call_13101 = relay.TupleGetItem(func_8906_call(relay.reshape(const_13100.astype('int16'), [16, 10, 10])), 0)
uop_13104 = relay.atanh(const_13100.astype('float32')) # shape=(1600,)
output = relay.Tuple([call_13085,call_13099,uop_13104,])
output2 = relay.Tuple([call_13086,call_13101,uop_13104,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_147 = relay.var("var_147", dtype = "int16", shape = ())#candidate|147|()|var|int16
var_148 = relay.var("var_148", dtype = "int16", shape = (4, 4, 15))#candidate|148|(4, 4, 15)|var|int16
bop_149 = relay.left_shift(var_147.astype('int16'), var_148.astype('int16')) # shape=(4, 4, 15)
output = relay.Tuple([bop_149,])
output2 = relay.Tuple([bop_149,])
func_155 = relay.Function([var_147,var_148,], output)
mod['func_155'] = func_155
mod = relay.transform.InferType()(mod)
mutated_mod['func_155'] = func_155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_155_call = mutated_mod.get_global_var('func_155')
var_157 = relay.var("var_157", dtype = "int16", shape = ())#candidate|157|()|var|int16
var_158 = relay.var("var_158", dtype = "int16", shape = (4, 4, 15))#candidate|158|(4, 4, 15)|var|int16
call_156 = func_155_call(var_157,var_158,)
output = call_156
func_159 = relay.Function([var_157,var_158,], output)
mutated_mod['func_159'] = func_159
mutated_mod = relay.transform.InferType()(mutated_mod)
const_558 = relay.const(-5.433486, dtype = "float64")#candidate|558|()|const|float64
const_559 = relay.const([[[-4.533281],[6.583089]]], dtype = "float64")#candidate|559|(1, 2, 1)|const|float64
bop_560 = relay.minimum(const_558.astype('float64'), const_559.astype('float64')) # shape=(1, 2, 1)
bop_564 = relay.bitwise_xor(const_558.astype('uint16'), const_559.astype('uint16')) # shape=(1, 2, 1)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
var_570 = relay.var("var_570", dtype = "int16", shape = (240,))#candidate|570|(240,)|var|int16
call_569 = relay.TupleGetItem(func_155_call(relay.reshape(const_558.astype('int16'), []), relay.reshape(var_570.astype('int16'), [4, 4, 15]), ), 0)
call_571 = relay.TupleGetItem(func_159_call(relay.reshape(const_558.astype('int16'), []), relay.reshape(var_570.astype('int16'), [4, 4, 15]), ), 0)
uop_575 = relay.tan(call_569.astype('float64')) # shape=(4, 4, 15)
uop_577 = relay.tan(call_571.astype('float64')) # shape=(4, 4, 15)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
call_586 = relay.TupleGetItem(func_155_call(relay.reshape(const_558.astype('int16'), []), relay.reshape(uop_575.astype('int16'), [4, 4, 15]), ), 0)
call_587 = relay.TupleGetItem(func_159_call(relay.reshape(const_558.astype('int16'), []), relay.reshape(uop_575.astype('int16'), [4, 4, 15]), ), 0)
output = relay.Tuple([bop_560,bop_564,var_570,uop_575,call_586,])
output2 = relay.Tuple([bop_560,bop_564,var_570,uop_577,call_587,])
func_608 = relay.Function([var_570,], output)
mod['func_608'] = func_608
mod = relay.transform.InferType()(mod)
mutated_mod['func_608'] = func_608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_609 = relay.var("var_609", dtype = "int16", shape = (240,))#candidate|609|(240,)|var|int16
func_608_call = mutated_mod.get_global_var('func_608')
call_610 = func_608_call(var_609)
output = call_610
func_611 = relay.Function([var_609], output)
mutated_mod['func_611'] = func_611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_694 = relay.var("var_694", dtype = "uint32", shape = (15, 14, 7))#candidate|694|(15, 14, 7)|var|uint32
var_695 = relay.var("var_695", dtype = "uint32", shape = (15, 14, 7))#candidate|695|(15, 14, 7)|var|uint32
bop_696 = relay.right_shift(var_694.astype('uint32'), relay.reshape(var_695.astype('uint32'), relay.shape_of(var_694))) # shape=(15, 14, 7)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
var_705 = relay.var("var_705", dtype = "int16", shape = ())#candidate|705|()|var|int16
var_706 = relay.var("var_706", dtype = "int16", shape = (240,))#candidate|706|(240,)|var|int16
call_704 = relay.TupleGetItem(func_155_call(relay.reshape(var_705.astype('int16'), []), relay.reshape(var_706.astype('int16'), [4, 4, 15]), ), 0)
call_707 = relay.TupleGetItem(func_159_call(relay.reshape(var_705.astype('int16'), []), relay.reshape(var_706.astype('int16'), [4, 4, 15]), ), 0)
func_608_call = mod.get_global_var('func_608')
func_611_call = mutated_mod.get_global_var('func_611')
call_708 = relay.TupleGetItem(func_608_call(relay.reshape(call_704.astype('int16'), [240,])), 4)
call_709 = relay.TupleGetItem(func_611_call(relay.reshape(call_704.astype('int16'), [240,])), 4)
output = relay.Tuple([bop_696,call_704,var_705,var_706,call_708,])
output2 = relay.Tuple([bop_696,call_707,var_705,var_706,call_709,])
func_723 = relay.Function([var_694,var_695,var_705,var_706,], output)
mod['func_723'] = func_723
mod = relay.transform.InferType()(mod)
var_724 = relay.var("var_724", dtype = "uint32", shape = (15, 14, 7))#candidate|724|(15, 14, 7)|var|uint32
var_725 = relay.var("var_725", dtype = "uint32", shape = (15, 14, 7))#candidate|725|(15, 14, 7)|var|uint32
var_726 = relay.var("var_726", dtype = "int16", shape = ())#candidate|726|()|var|int16
var_727 = relay.var("var_727", dtype = "int16", shape = (240,))#candidate|727|(240,)|var|int16
output = func_723(var_724,var_725,var_726,var_727,)
func_728 = relay.Function([var_724,var_725,var_726,var_727,], output)
mutated_mod['func_728'] = func_728
mutated_mod = relay.transform.InferType()(mutated_mod)
const_868 = relay.const([[[5.861825,5.954617,-6.020415,8.676228,-8.650578,8.964722,-9.112611,-6.402931,3.190948,6.966173,-1.775686,-3.287877],[9.639775,9.785604,-5.135806,7.830837,3.425051,-8.791755,-1.160779,-2.789349,2.617445,1.090295,7.548111,6.921272],[7.899048,-2.747048,-1.591078,7.591972,-4.484632,2.295631,8.376470,-4.628257,7.552237,-5.983795,-3.851724,0.959750],[-1.940462,-0.338542,-7.585984,-8.955235,-0.072649,3.119754,2.146525,-4.499704,-3.561723,2.662688,-8.322379,-2.313184],[-9.650491,6.145954,-3.471519,-7.859599,-1.349662,-0.509005,1.968970,-5.095355,7.248513,-5.769931,7.857005,-5.985184],[6.734535,1.786092,-2.668486,5.929356,8.874169,0.587613,3.160539,-4.073912,-0.150669,0.113429,-5.972326,7.082317],[7.680814,-2.291208,7.263885,-2.284543,-9.666401,-7.116856,-3.542581,0.553340,2.880705,4.303671,6.059176,-0.029063]],[[-5.923389,8.177314,1.274983,-7.723869,-9.877717,9.522858,0.827747,-5.673908,-1.878831,-6.353384,4.676681,-9.183124],[3.029188,7.226319,4.635187,-4.079338,3.016551,-7.011722,1.117053,-2.112165,-3.463210,4.337917,8.464275,9.487029],[-3.162557,-6.804099,-1.720234,-2.680478,-1.893042,-9.030953,8.115089,0.754380,-0.778789,-1.246025,-5.217267,3.469801],[-3.043370,5.155510,4.976184,0.780532,-3.162152,1.717327,-7.498907,-8.949216,4.267090,4.400453,-7.878700,-7.923817],[-5.845355,-4.654937,7.120469,0.691847,-5.804359,3.561892,-4.760927,7.584170,4.578222,9.072454,0.835079,-1.341897],[-9.705061,8.901140,2.418515,6.145631,-8.815272,-8.042393,5.348890,-2.476402,-9.464136,0.438761,-5.822732,-8.716539],[1.587381,-0.921635,0.584520,-1.666404,-9.951107,-2.712141,4.598258,8.197594,2.408686,1.830099,-8.567791,-9.339749]],[[4.076516,9.035921,9.026323,1.135330,8.306033,7.979486,2.893421,-6.320514,5.697081,6.769421,-1.502018,8.470748],[-3.052482,-0.408473,-0.152916,-0.137948,1.048100,2.347103,6.095936,8.171881,-9.795135,0.533521,-7.988841,4.484270],[1.072051,-0.699891,-4.500892,9.621674,-4.844214,8.167053,8.362364,0.264033,7.386989,6.789484,6.742412,4.593421],[0.811357,2.326282,-7.227949,4.439437,4.972783,0.743635,9.702820,2.341436,-4.465020,-9.965494,-5.645458,-5.458080],[7.437675,-2.094078,1.116521,-9.221161,-8.177465,-3.453316,8.389735,-0.054645,-2.304554,-7.674605,2.590051,3.042201],[-2.020344,9.280693,5.890463,-4.926714,6.028657,-5.960787,-9.271511,5.674767,-0.131591,4.493224,6.904021,0.049628],[5.198348,-3.090650,2.397693,-9.735792,2.695222,-1.731159,-7.128562,9.935008,6.485555,-8.170617,0.237841,-6.070931]],[[0.128755,4.670717,-7.967058,-2.543697,-1.879517,-2.854018,9.026622,1.664657,-8.043564,2.809995,-3.826566,-5.120219],[-5.432875,7.003778,-7.916066,-3.362927,7.493356,-2.056284,-4.312426,5.191991,1.061356,-9.926767,-8.797508,-2.887251],[8.407247,1.940123,-7.018599,6.654220,-2.257957,-3.718672,-7.782698,1.120171,-5.138034,8.517769,-8.196983,8.399508],[-8.209629,-5.052592,9.752062,0.494036,7.730570,-9.759951,-1.278801,-3.419161,-3.443758,5.419983,6.360598,-9.796881],[5.997946,-9.590098,-6.837451,3.044020,0.938152,-2.456200,-6.180231,0.245229,-8.987249,-0.148794,7.225209,-9.708124],[9.390266,1.313416,-1.879052,5.159535,4.000672,4.385053,1.432955,2.465506,5.786573,-6.829839,0.220655,2.848097],[9.832709,7.974752,-7.966147,8.971758,9.577874,3.991208,-8.696767,8.899051,-8.835600,-9.172794,-4.356545,0.150801]],[[1.590287,6.874168,3.489505,-0.820333,-4.884405,-2.755027,4.352056,8.064172,-4.463822,-3.925472,2.493298,-9.458971],[6.689124,7.709549,-7.826276,0.425984,-1.890960,4.378842,1.050844,3.002447,9.543595,-3.695749,9.757015,9.920907],[-1.012169,-5.988264,-2.910396,-4.681048,1.872966,7.748148,-3.148730,3.595380,1.328166,-8.652188,2.528583,8.350240],[9.055174,3.494690,9.544908,-9.529446,3.698755,7.321820,-9.802587,1.576260,7.314498,3.462560,3.800078,6.513766],[9.680182,9.928456,1.644696,9.878778,-6.403011,3.155785,-8.084241,-9.065085,-0.645443,1.369777,9.271730,5.558509],[5.593156,-3.344283,2.523422,7.138004,0.169965,2.538221,8.589313,-9.534501,-8.747471,4.597608,2.694675,-3.120373],[8.523085,-3.038841,-1.137626,-8.327571,0.608084,-7.879486,-3.645722,4.213319,-0.030206,-5.809636,-8.526578,7.851716]],[[-8.772244,2.852802,-4.193016,2.157635,2.790904,-2.994684,1.354505,2.097235,3.695810,-4.124544,5.301325,-4.587285],[-1.502602,-4.621644,8.054815,2.036806,-4.102886,0.015814,-7.386752,2.420081,3.156439,5.424453,-2.808626,4.752123],[-0.483242,9.467961,5.723639,6.245036,-0.641602,-0.945855,-6.785209,4.707678,-5.981279,5.407215,6.351916,-2.498408],[3.437697,-1.132648,-5.496315,1.840762,1.320521,2.721187,-6.709446,-0.630203,-8.240403,-7.534797,2.223335,0.212582],[3.428284,-1.527854,0.472421,6.360814,1.501930,-9.537249,2.246010,-2.131204,-0.836968,3.996448,5.266615,8.110827],[3.384285,-6.382627,0.396378,-2.855535,-3.327854,-3.789616,-5.817520,-9.028044,2.762573,4.851126,5.437628,4.508004],[5.545618,-7.057273,-1.060378,-0.976913,-5.756055,-8.121246,6.281882,-6.480235,-4.722929,0.500661,-0.450214,-0.829111]],[[7.037869,-9.710897,6.425955,-1.835864,-9.608244,9.079403,5.966527,-7.933518,-2.736269,3.074780,-5.595178,-3.150492],[-9.295090,2.538599,4.247641,-9.421200,4.927873,8.598799,-9.381925,-9.899377,7.097971,-1.666187,0.945211,-1.384960],[4.332239,8.948667,4.693164,-0.512170,-6.741318,-8.091961,1.495951,-1.435985,6.286748,-5.388041,2.722359,-3.331245],[-1.029779,2.398791,-1.067682,-3.823849,-2.386957,0.632686,1.067057,2.996370,9.902824,7.271099,6.614473,5.673726],[-6.930856,-4.388337,-0.391143,-3.406441,4.773346,6.555843,0.401157,-5.671855,3.506806,7.353414,0.952298,-4.339761],[-9.644891,-3.392547,7.284549,-3.097831,0.652552,-0.320999,8.917085,-7.697877,-3.696616,-0.020051,8.055656,6.404746],[-1.248580,9.015543,-1.945210,-9.529085,-8.833582,-1.839029,1.966385,8.052968,7.244192,-2.356421,-4.776550,-1.760124]],[[-7.412982,-1.403237,5.988894,0.269009,-1.448893,9.132061,-1.433631,2.903395,-3.648298,4.638197,-7.510043,-5.267967],[-5.012811,-6.962893,-0.408680,4.134198,-8.135470,-9.943537,-4.489215,0.861449,5.843030,2.224285,5.868497,-0.641330],[-4.171565,0.460236,-5.368827,-7.776372,-0.903928,9.556389,1.427899,-4.326113,-2.267132,1.338099,-1.094128,2.227986],[-7.009470,5.576900,2.897332,7.729742,6.333465,-4.475634,3.609877,-5.636139,4.376146,-5.824247,1.592865,-2.920841],[5.152546,-0.964338,2.230762,9.846961,-9.596930,8.144628,-0.016449,6.508713,6.276583,3.712929,-7.766587,-6.507233],[8.095433,8.231902,5.409274,-8.155981,7.225212,-9.027658,-9.139107,-2.301501,1.786378,-1.780985,5.795118,6.522469],[7.720418,7.528696,7.676478,-3.544741,-6.834931,4.424706,4.270047,-9.244353,-7.413338,5.008255,2.635107,8.242168]],[[3.991446,-0.586286,4.308305,2.573384,8.955023,-6.325535,9.672922,3.222771,-1.148722,5.981673,5.270274,8.833633],[4.977513,-8.348972,-0.627694,4.936889,-5.728817,-8.339952,9.564827,-3.306929,-8.583508,5.860716,6.244684,8.923947],[0.320586,-5.684859,3.362604,-3.668804,-8.903998,9.371131,-3.999588,9.625606,-6.743314,-2.812993,6.854727,-4.560885],[-1.707010,9.905460,5.658675,6.583249,-8.461951,6.244140,1.639586,-9.797973,-4.224872,1.432850,-0.066945,8.748952],[-9.869089,-9.926194,7.189414,-2.004849,8.687997,9.501086,-3.242336,9.355973,-3.693204,-5.933340,5.441620,-6.143653],[-9.366775,-4.925744,-6.703356,-6.362366,-7.172389,-1.873312,4.850938,1.921074,6.103572,1.654588,0.859040,-3.398214],[5.157680,-8.497576,1.141497,5.028143,-2.110839,-4.797858,7.989015,6.642334,0.695116,9.939965,-2.914984,8.733525]],[[-8.094608,-1.672983,-1.683569,5.274731,5.612148,-2.939484,-9.074029,0.512549,0.310446,5.826151,-7.411000,-7.885767],[6.210367,-6.903124,-1.088406,3.501539,6.132116,4.560472,-0.464029,8.225106,-7.775640,-1.756570,6.571159,9.654607],[6.929749,-7.901992,6.271813,0.363965,-5.323951,8.149462,-3.077290,7.036182,-3.008780,5.655930,-9.633259,-4.583400],[-7.915350,9.801858,-4.418631,-9.123939,-3.456939,0.512621,-8.376464,-4.657099,6.970497,7.723465,-7.980657,4.426888],[0.288656,8.160667,6.447856,-6.775522,-6.411863,-7.094727,-1.390414,-8.981619,3.958448,4.133330,-9.165989,-6.211855],[2.948268,2.438379,5.937540,-6.616405,2.186551,-1.821534,7.105561,-0.764435,-0.361301,8.499993,-6.261911,7.749045],[1.142917,2.622588,-3.252103,4.618849,2.198279,7.779341,1.631976,-8.886723,7.487318,-2.060047,9.047727,-3.532336]],[[5.240205,4.369789,3.613428,1.912561,7.632594,3.369488,-9.521263,7.456503,3.279735,-5.761003,-0.316038,-7.926711],[9.235731,-1.060884,5.725780,6.540834,-6.419884,-4.356778,8.539824,3.097615,-6.475347,6.016228,7.139652,7.555275],[6.501186,-5.094301,-4.662088,-6.418048,7.122726,-4.750262,0.303106,9.424655,-0.142155,-4.603502,8.723272,-9.081337],[-7.940265,-2.056688,-9.293563,-5.960173,-1.385325,9.575253,3.360384,-8.645128,8.305342,-7.544031,-8.800326,-2.968163],[1.188573,5.185675,-0.636082,2.777478,8.085791,6.232297,6.992706,1.381694,-9.288471,-1.267658,-7.837198,-8.014522],[1.879985,4.042141,-5.960906,6.728039,-1.600348,-9.791605,-2.845843,4.091814,8.389677,-0.999674,-6.513864,-9.910492],[-6.525914,0.599042,-4.235464,-9.887599,-9.658496,1.682854,-6.491902,-5.552211,5.537622,7.746723,-7.524614,9.185562]]], dtype = "float32")#candidate|868|(11, 7, 12)|const|float32
uop_869 = relay.sin(const_868.astype('float32')) # shape=(11, 7, 12)
uop_873 = relay.tan(const_868.astype('float64')) # shape=(11, 7, 12)
output = relay.Tuple([uop_869,uop_873,])
output2 = relay.Tuple([uop_869,uop_873,])
func_886 = relay.Function([], output)
mod['func_886'] = func_886
mod = relay.transform.InferType()(mod)
mutated_mod['func_886'] = func_886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mutated_mod.get_global_var('func_886')
call_887 = func_886_call()
output = call_887
func_888 = relay.Function([], output)
mutated_mod['func_888'] = func_888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_906 = relay.TupleGetItem(func_886_call(), 1)
call_907 = relay.TupleGetItem(func_888_call(), 1)
uop_928 = relay.acosh(call_906.astype('float64')) # shape=(11, 7, 12)
uop_930 = relay.acosh(call_907.astype('float64')) # shape=(11, 7, 12)
var_935 = relay.var("var_935", dtype = "float64", shape = (11, 7, 12))#candidate|935|(11, 7, 12)|var|float64
bop_936 = relay.bitwise_or(call_906.astype('uint8'), relay.reshape(var_935.astype('uint8'), relay.shape_of(call_906))) # shape=(11, 7, 12)
bop_939 = relay.bitwise_or(call_907.astype('uint8'), relay.reshape(var_935.astype('uint8'), relay.shape_of(call_907))) # shape=(11, 7, 12)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_947 = relay.TupleGetItem(func_886_call(), 1)
call_948 = relay.TupleGetItem(func_888_call(), 1)
output = relay.Tuple([uop_928,bop_936,call_947,])
output2 = relay.Tuple([uop_930,bop_939,call_948,])
func_954 = relay.Function([var_935,], output)
mod['func_954'] = func_954
mod = relay.transform.InferType()(mod)
var_955 = relay.var("var_955", dtype = "float64", shape = (11, 7, 12))#candidate|955|(11, 7, 12)|var|float64
output = func_954(var_955)
func_956 = relay.Function([var_955], output)
mutated_mod['func_956'] = func_956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_1068 = relay.TupleGetItem(func_886_call(), 1)
call_1069 = relay.TupleGetItem(func_888_call(), 1)
func_723_call = mod.get_global_var('func_723')
func_728_call = mutated_mod.get_global_var('func_728')
var_1074 = relay.var("var_1074", dtype = "uint32", shape = (1470,))#candidate|1074|(1470,)|var|uint32
const_1075 = relay.const(5, dtype = "int16")#candidate|1075|()|const|int16
const_1076 = relay.const([[9,-2],[-1,-3],[5,-9],[-8,3],[8,-4],[1,-2],[-7,3],[-9,7],[-6,5],[2,-6],[-9,7],[-9,-5],[-10,-4],[9,8],[-10,-3],[1,7],[1,-9],[-1,9],[10,-9],[10,6],[5,9],[-5,-9],[7,4],[-4,-9],[4,-9],[3,-6],[7,1],[-9,7],[6,-9],[4,-6],[2,1],[10,4],[-8,-10],[4,-3],[1,-8],[1,-6],[3,8],[5,-8],[-1,-4],[1,-6],[10,9],[3,-5],[-5,7],[-10,3],[-8,1],[-4,-2],[-10,-7],[-4,-9],[10,-10],[-9,9],[10,2],[-9,-3],[5,-2],[-5,-3],[9,-5],[4,7],[3,8],[4,7],[-1,4],[-3,7],[-1,6],[-1,10],[-10,5],[10,-7],[1,4],[-1,9],[-10,-2],[-8,-3],[-7,-4],[8,2],[-10,2],[-1,2],[4,-7],[-6,7],[-9,-3],[9,7],[-2,8],[-6,10],[7,5],[-10,-2],[-2,-1],[5,-8],[-8,-3],[-4,-5],[-1,10],[3,-5],[-3,10],[7,10],[-1,10],[9,-2],[9,-4],[-6,-1],[1,-6],[3,-5],[-2,-10],[9,10],[10,-7],[8,-8],[7,-1],[-10,-1],[6,-3],[1,-5],[-7,3],[6,-5],[5,-7],[-3,1],[-6,2],[7,-5],[1,9],[-10,-6],[-9,10],[-6,4],[-8,6],[6,9],[2,-8],[-5,9],[2,1],[-4,6],[7,1],[-2,-7]], dtype = "int16")#candidate|1076|(120, 2)|const|int16
call_1073 = relay.TupleGetItem(func_723_call(relay.reshape(var_1074.astype('uint32'), [15, 14, 7]), relay.reshape(var_1074.astype('uint32'), [15, 14, 7]), relay.reshape(const_1075.astype('int16'), []), relay.reshape(const_1076.astype('int16'), [240,]), ), 1)
call_1077 = relay.TupleGetItem(func_728_call(relay.reshape(var_1074.astype('uint32'), [15, 14, 7]), relay.reshape(var_1074.astype('uint32'), [15, 14, 7]), relay.reshape(const_1075.astype('int16'), []), relay.reshape(const_1076.astype('int16'), [240,]), ), 1)
output = relay.Tuple([call_1068,call_1073,var_1074,const_1075,const_1076,])
output2 = relay.Tuple([call_1069,call_1077,var_1074,const_1075,const_1076,])
func_1082 = relay.Function([var_1074,], output)
mod['func_1082'] = func_1082
mod = relay.transform.InferType()(mod)
var_1083 = relay.var("var_1083", dtype = "uint32", shape = (1470,))#candidate|1083|(1470,)|var|uint32
output = func_1082(var_1083)
func_1084 = relay.Function([var_1083], output)
mutated_mod['func_1084'] = func_1084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_1103 = relay.TupleGetItem(func_886_call(), 0)
call_1104 = relay.TupleGetItem(func_888_call(), 0)
output = call_1103
output2 = call_1104
func_1109 = relay.Function([], output)
mod['func_1109'] = func_1109
mod = relay.transform.InferType()(mod)
mutated_mod['func_1109'] = func_1109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mutated_mod.get_global_var('func_1109')
call_1110 = func_1109_call()
output = call_1110
func_1111 = relay.Function([], output)
mutated_mod['func_1111'] = func_1111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1152 = func_1109_call()
call_1153 = func_1109_call()
output = call_1152
output2 = call_1153
func_1158 = relay.Function([], output)
mod['func_1158'] = func_1158
mod = relay.transform.InferType()(mod)
mutated_mod['func_1158'] = func_1158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1158_call = mutated_mod.get_global_var('func_1158')
call_1159 = func_1158_call()
output = call_1159
func_1160 = relay.Function([], output)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1166 = func_1109_call()
call_1167 = func_1109_call()
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1175 = func_1109_call()
call_1176 = func_1109_call()
var_1177 = relay.var("var_1177", dtype = "float32", shape = (11, 7, 12))#candidate|1177|(11, 7, 12)|var|float32
bop_1178 = relay.less_equal(call_1175.astype('bool'), relay.reshape(var_1177.astype('bool'), relay.shape_of(call_1175))) # shape=(11, 7, 12)
bop_1181 = relay.less_equal(call_1176.astype('bool'), relay.reshape(var_1177.astype('bool'), relay.shape_of(call_1176))) # shape=(11, 7, 12)
bop_1194 = relay.logical_and(var_1177.astype('bool'), relay.reshape(call_1175.astype('bool'), relay.shape_of(var_1177))) # shape=(11, 7, 12)
bop_1197 = relay.logical_and(var_1177.astype('bool'), relay.reshape(call_1176.astype('bool'), relay.shape_of(var_1177))) # shape=(11, 7, 12)
output = relay.Tuple([call_1166,bop_1178,bop_1194,])
output2 = relay.Tuple([call_1167,bop_1181,bop_1197,])
func_1206 = relay.Function([var_1177,], output)
mod['func_1206'] = func_1206
mod = relay.transform.InferType()(mod)
var_1207 = relay.var("var_1207", dtype = "float32", shape = (11, 7, 12))#candidate|1207|(11, 7, 12)|var|float32
output = func_1206(var_1207)
func_1208 = relay.Function([var_1207], output)
mutated_mod['func_1208'] = func_1208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1221 = func_1109_call()
call_1222 = func_1109_call()
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1224 = func_1158_call()
call_1225 = func_1158_call()
output = relay.Tuple([call_1221,call_1224,])
output2 = relay.Tuple([call_1222,call_1225,])
func_1236 = relay.Function([], output)
mod['func_1236'] = func_1236
mod = relay.transform.InferType()(mod)
output = func_1236()
func_1237 = relay.Function([], output)
mutated_mod['func_1237'] = func_1237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1258 = relay.TupleGetItem(func_1236_call(), 0)
call_1259 = relay.TupleGetItem(func_1237_call(), 0)
uop_1262 = relay.cosh(call_1258.astype('float64')) # shape=(11, 7, 12)
uop_1264 = relay.cosh(call_1259.astype('float64')) # shape=(11, 7, 12)
output = relay.Tuple([uop_1262,])
output2 = relay.Tuple([uop_1264,])
func_1268 = relay.Function([], output)
mod['func_1268'] = func_1268
mod = relay.transform.InferType()(mod)
output = func_1268()
func_1269 = relay.Function([], output)
mutated_mod['func_1269'] = func_1269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1279 = func_1158_call()
call_1280 = func_1158_call()
func_608_call = mod.get_global_var('func_608')
func_611_call = mutated_mod.get_global_var('func_611')
var_1286 = relay.var("var_1286", dtype = "int16", shape = (240,))#candidate|1286|(240,)|var|int16
call_1285 = relay.TupleGetItem(func_608_call(relay.reshape(var_1286.astype('int16'), [240,])), 1)
call_1287 = relay.TupleGetItem(func_611_call(relay.reshape(var_1286.astype('int16'), [240,])), 1)
output = relay.Tuple([call_1279,call_1285,var_1286,])
output2 = relay.Tuple([call_1280,call_1287,var_1286,])
func_1288 = relay.Function([var_1286,], output)
mod['func_1288'] = func_1288
mod = relay.transform.InferType()(mod)
var_1289 = relay.var("var_1289", dtype = "int16", shape = (240,))#candidate|1289|(240,)|var|int16
output = func_1288(var_1289)
func_1290 = relay.Function([var_1289], output)
mutated_mod['func_1290'] = func_1290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1301 = relay.TupleGetItem(func_1236_call(), 1)
call_1302 = relay.TupleGetItem(func_1237_call(), 1)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_1306 = relay.TupleGetItem(func_886_call(), 0)
call_1307 = relay.TupleGetItem(func_888_call(), 0)
output = relay.Tuple([call_1301,call_1306,])
output2 = relay.Tuple([call_1302,call_1307,])
func_1315 = relay.Function([], output)
mod['func_1315'] = func_1315
mod = relay.transform.InferType()(mod)
mutated_mod['func_1315'] = func_1315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mutated_mod.get_global_var('func_1315')
call_1316 = func_1315_call()
output = call_1316
func_1317 = relay.Function([], output)
mutated_mod['func_1317'] = func_1317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1330 = func_1109_call()
call_1331 = func_1109_call()
var_1336 = relay.var("var_1336", dtype = "float32", shape = (11, 7, 12))#candidate|1336|(11, 7, 12)|var|float32
bop_1337 = relay.logical_or(call_1330.astype('bool'), relay.reshape(var_1336.astype('bool'), relay.shape_of(call_1330))) # shape=(11, 7, 12)
bop_1340 = relay.logical_or(call_1331.astype('bool'), relay.reshape(var_1336.astype('bool'), relay.shape_of(call_1331))) # shape=(11, 7, 12)
output = bop_1337
output2 = bop_1340
func_1343 = relay.Function([var_1336,], output)
mod['func_1343'] = func_1343
mod = relay.transform.InferType()(mod)
mutated_mod['func_1343'] = func_1343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1344 = relay.var("var_1344", dtype = "float32", shape = (11, 7, 12))#candidate|1344|(11, 7, 12)|var|float32
func_1343_call = mutated_mod.get_global_var('func_1343')
call_1345 = func_1343_call(var_1344)
output = call_1345
func_1346 = relay.Function([var_1344], output)
mutated_mod['func_1346'] = func_1346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_1368 = relay.TupleGetItem(func_1315_call(), 0)
call_1369 = relay.TupleGetItem(func_1317_call(), 0)
output = relay.Tuple([call_1368,])
output2 = relay.Tuple([call_1369,])
func_1372 = relay.Function([], output)
mod['func_1372'] = func_1372
mod = relay.transform.InferType()(mod)
output = func_1372()
func_1373 = relay.Function([], output)
mutated_mod['func_1373'] = func_1373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_1391 = relay.TupleGetItem(func_886_call(), 1)
call_1392 = relay.TupleGetItem(func_888_call(), 1)
output = relay.Tuple([call_1391,])
output2 = relay.Tuple([call_1392,])
func_1396 = relay.Function([], output)
mod['func_1396'] = func_1396
mod = relay.transform.InferType()(mod)
output = func_1396()
func_1397 = relay.Function([], output)
mutated_mod['func_1397'] = func_1397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1372_call = mod.get_global_var('func_1372')
func_1373_call = mutated_mod.get_global_var('func_1373')
call_1418 = relay.TupleGetItem(func_1372_call(), 0)
call_1419 = relay.TupleGetItem(func_1373_call(), 0)
const_1420 = relay.const([[[6.953010,-7.764232,2.393065,1.768225,-9.770500,-1.586950,-6.385559,2.195589,5.275625,3.073962,3.729925,2.151259],[-4.258309,3.604806,2.014663,9.153440,-2.861527,5.819557,-4.252111,4.459990,-9.167184,-7.754799,-2.583780,-4.889713],[0.045588,-2.914123,-3.743080,-1.540936,0.469595,-5.288367,-2.570346,-8.791723,4.320046,-8.041912,-3.322539,-6.034328],[2.170827,5.002424,-4.716355,7.327885,3.105088,5.033104,4.308711,-0.420290,5.255189,8.360810,-8.970917,-6.419171],[6.601576,-0.853245,-9.129060,-4.551352,0.475127,-1.907855,-5.667595,1.752964,5.670021,2.056298,-4.883236,8.762242],[-9.167792,0.951241,-7.216028,1.268926,-4.594494,4.595740,-4.580648,-5.655568,9.581823,-2.755655,0.658055,6.177683],[-0.138494,0.970309,-1.939155,-5.247817,-6.066587,-0.887137,1.409709,-8.923162,0.027063,-7.768435,-1.034648,1.476737]],[[1.807535,4.851838,2.338306,3.078611,6.226300,5.828869,-2.171704,-8.897373,8.083188,7.241179,-7.069219,3.289869],[-7.333007,-4.474339,-5.871224,-3.342650,8.352609,-5.739226,1.251107,-7.678387,8.810839,-6.540507,7.681704,-5.343852],[5.026138,1.080386,8.785125,7.879778,-1.261580,-4.712658,5.387738,7.529800,-0.715335,-2.848236,5.413297,-7.996323],[-8.974923,-4.654617,-1.710534,-0.449610,3.396740,2.720285,-6.731256,-5.262082,-5.756560,-8.599600,9.488438,-8.170742],[8.052630,1.688832,9.096031,3.455525,3.631104,9.018767,-4.770777,6.607315,5.924094,1.217593,-5.396191,9.485216],[-5.024184,-6.094057,2.679453,-4.806020,0.752362,5.189624,3.951441,-0.153494,4.770206,-1.280125,-1.862557,3.766584],[7.227735,8.836031,-2.352794,-5.437525,-8.519902,-8.506520,-2.070821,2.840177,3.495998,-7.037008,4.630039,9.219507]],[[4.537489,6.298734,8.546097,2.617555,1.583796,-2.891439,2.860780,-7.362107,-7.752613,6.921798,7.947075,-8.337869],[-2.322561,-0.004521,-8.553619,-3.082556,1.930626,0.268735,-0.565461,3.048396,4.124758,0.033798,7.616231,8.264066],[-2.255527,-9.482072,2.527989,-4.986884,4.570758,5.433770,-3.618512,3.865386,9.699049,3.611701,-8.966567,2.044348],[-1.127763,-9.149225,3.394643,3.591244,9.951514,6.507789,1.260141,-3.014306,-4.092719,-8.317701,0.310376,0.130542],[-4.922346,-3.164383,5.573788,-3.321541,-8.382751,9.232703,-4.507912,0.852188,-1.642592,-8.586038,0.367637,3.188830],[9.463915,-0.906616,4.870929,5.911072,-5.361100,-2.626444,-9.090867,-7.075745,-2.685665,-8.333300,-1.162202,-2.511688],[-0.630689,-2.943286,0.349981,-6.002778,5.392332,8.304172,-2.767108,-1.371053,-8.812849,-5.922458,-1.098627,3.572959]],[[9.640195,5.123038,8.980494,-7.174183,6.756545,9.399040,-0.779106,8.646948,9.310173,7.179226,0.561311,-6.525312],[-0.291843,-3.388799,2.339554,3.424041,1.218081,6.086035,-4.562763,1.635188,-3.662078,-4.136171,-3.237437,3.586355],[-6.202226,3.649364,-4.879951,9.709034,-7.964711,3.241754,0.264432,-0.726703,-9.331230,-6.954694,-3.629399,-7.348216],[-0.707882,9.520441,-9.795202,-2.394097,2.018508,-3.133039,-8.088230,7.833776,-9.515347,-6.705453,6.969252,-8.264445],[-7.768848,0.594554,-0.387831,-5.384391,-1.450769,9.556306,-0.113844,-3.934274,6.931121,4.755280,-7.732863,6.058618],[-6.454382,2.056570,-6.815316,3.439423,-1.568206,0.755927,-9.403995,7.077754,-8.688020,7.450736,3.993113,-4.241279],[-4.361212,-8.711486,-9.849134,1.007308,0.781711,3.978272,3.998351,6.403161,8.368290,-1.558251,-4.929035,-4.980032]],[[3.533536,9.216767,6.510289,9.826265,0.929271,1.414584,2.251319,-3.381849,1.559832,6.700729,-5.979806,-7.946226],[3.960341,4.879434,-2.968666,-0.919445,3.966346,-2.307617,-1.793237,4.390920,6.119344,1.994397,0.504501,-7.264076],[4.219827,3.580805,-1.680517,6.010180,6.196886,1.931032,8.760051,2.033936,1.228251,0.962699,9.242569,6.875954],[3.091476,-6.647145,3.566523,7.110296,-0.777333,-7.670859,-8.552147,-8.842993,3.901271,-4.098361,-5.220539,4.425140],[8.182575,2.101297,3.832034,-6.277246,4.099697,-6.152470,4.694412,-4.106006,-9.048645,-1.367241,-4.405737,-2.933933],[-6.778356,-0.925204,-7.656594,-4.926305,0.820361,8.065862,-1.069653,7.582296,-9.265746,-3.287362,-3.835870,0.964888],[-5.287630,3.065027,-9.276725,-2.373884,-6.898801,2.457062,-1.460985,6.715853,3.310876,2.489211,-7.040130,-7.859965]],[[-9.009803,-0.053901,8.254201,2.661169,2.436404,-9.333900,3.663432,-1.514869,-6.465618,-6.250737,6.600397,-0.406136],[-6.403658,-4.268156,-8.788052,8.622748,-8.160486,7.586295,8.852255,1.319634,-7.993680,7.489556,-3.315149,3.536677],[8.910149,9.032461,6.463034,-2.356070,5.142102,-4.627104,7.505771,-6.568646,1.456055,0.520785,5.413586,9.914191],[-6.108457,9.952663,-8.483305,4.213203,-6.384102,-5.971626,-6.724131,-5.947228,-1.354770,-5.565806,-3.235437,5.592120],[-1.057346,6.192096,1.710073,8.212673,9.487420,-7.752796,-0.729526,5.118759,-0.040623,-4.021527,-2.142603,5.563915],[-1.243188,-7.755855,-3.974564,-6.617971,-2.767181,-8.112549,4.827528,-7.877338,-1.096615,-3.240849,-5.088117,-8.139135],[-9.716687,-4.220261,2.479465,2.092163,4.174778,-2.053711,7.313008,-5.660090,-7.957591,8.856956,5.785580,-7.409294]],[[-8.883758,-8.947473,9.053753,7.208265,4.312732,-8.883273,3.114918,-0.349186,-8.087913,9.072099,-4.401176,6.321419],[-1.091107,-4.707383,-0.625300,-5.654289,9.450863,-1.539514,1.378574,-3.421725,6.680292,7.296516,-1.026126,7.001866],[-9.402727,-5.951585,-2.130217,-7.833534,-2.216711,-7.738024,4.229317,8.279921,6.567807,2.766898,-5.503655,-4.553900],[9.317852,-0.478610,0.428634,-7.655254,-5.165351,-1.048611,-2.351802,-9.600562,4.639426,-8.484993,5.095038,-0.133925],[6.971343,8.147104,0.893369,1.111511,4.704983,4.844208,3.182242,-6.898297,-8.585648,-8.081894,1.165384,-4.566449],[-1.411855,-6.805809,-8.055929,-9.412000,-8.724595,6.321454,0.884488,-4.655684,2.121093,-1.415972,5.939152,-5.802797],[0.618221,3.370007,2.246744,-2.682294,-1.416014,3.009748,1.789459,-6.352383,2.892406,2.373906,-3.271814,7.762160]],[[8.517071,-4.030468,8.244815,8.374130,0.176976,2.990608,-4.650607,-4.737838,-0.852138,8.147793,-8.050866,-5.032016],[-1.056878,-2.366570,7.770927,-1.281910,8.185300,-2.760583,3.582164,-5.934998,-6.665887,-6.037248,7.404184,5.375042],[-9.117356,1.857677,-8.357927,2.045841,5.368787,9.497091,5.220734,-8.618628,-2.534353,6.743298,-3.640217,-3.306642],[-8.718670,7.056819,-5.343374,4.412559,4.443353,6.106539,-8.531340,-2.061182,-8.160655,3.543138,1.473606,9.388011],[-8.557787,-2.017120,-6.807448,1.725734,7.638576,-0.508989,5.583786,-9.004489,-0.833045,-9.848806,-8.891522,-9.606036],[-9.110914,4.537402,8.785447,5.687965,2.961964,-6.010255,-4.263618,-0.500423,-3.234643,6.099682,3.762292,2.800145],[3.017782,-7.352167,-0.566718,0.096669,-9.481713,2.481051,2.512070,5.119689,-6.845111,-1.139121,2.531804,-7.724413]],[[3.828559,8.856679,8.890386,-1.283147,-5.623105,1.153040,6.205295,8.019093,4.957636,-3.901639,1.143332,3.655520],[1.241739,3.248625,2.234757,6.088400,7.656810,3.192256,0.436085,-6.494960,-2.650762,-3.173543,-9.506371,-6.348365],[-5.147308,-9.540198,-2.357747,6.415158,6.469986,6.313916,-9.120631,7.477394,8.060696,2.640309,-4.311199,9.803467],[2.216407,-3.176050,6.690697,8.779762,5.256922,-4.493010,0.294357,-5.257731,-6.873365,2.848842,-1.263812,-3.520784],[9.259388,-5.535599,3.223753,8.164334,9.411602,-7.477865,-7.173746,9.540332,5.591494,0.624710,2.528589,5.669832],[7.097992,9.782133,9.913239,-1.332063,5.188965,-3.315170,-3.344144,6.563930,-5.633679,-0.968286,1.413312,-6.216996],[8.909409,8.935502,1.403682,-5.522186,-3.235345,-1.841908,-7.499110,-1.106962,6.756003,-6.611965,-3.959413,-1.522429]],[[-6.117422,0.180005,-1.510087,-7.338918,-3.533362,-7.126157,3.747993,-5.460142,-4.382359,0.994278,4.935753,-0.528226],[4.224690,-0.064213,-0.356402,-0.543255,-2.608804,-4.319689,9.984895,-3.399495,1.455901,-4.088164,-0.714271,-5.689192],[8.257276,6.894888,4.889911,-7.382985,-7.381704,6.956726,5.082282,3.155425,7.858692,-2.606923,3.961833,-0.743382],[8.132991,6.043413,-8.211284,9.247427,2.838797,-8.796990,-0.351334,5.021125,-7.232409,-4.989713,-1.658855,8.008056],[0.715672,3.630849,-9.413615,8.594850,-6.469062,1.905318,-6.756258,-6.787534,9.168051,7.212156,5.348330,1.102552],[7.371137,9.816136,0.354609,3.610523,-0.509098,5.325279,2.394821,7.591339,8.376625,-2.438359,3.728239,-9.702546],[9.806068,-2.241070,-6.167317,-1.861203,3.762720,-6.516357,-8.904829,-6.012892,-7.094311,-9.949784,-2.708642,4.511643]],[[-5.866366,-0.752522,-0.836340,3.829404,-0.323534,7.352355,7.220073,-1.237195,0.297536,5.519664,-2.354705,4.211451],[-7.332484,-6.933932,8.131569,-8.088022,3.753644,5.112211,1.713050,-5.974833,-0.814334,1.471696,8.816936,9.670085],[-1.292547,4.629917,-9.790581,1.207634,-7.270493,4.373383,0.008690,7.917416,-6.391394,-3.514998,0.864471,2.233688],[-8.481167,4.068085,-5.237980,5.161891,-0.032239,-5.981756,5.855997,6.298005,6.149980,0.817979,-3.852624,-8.784679],[9.781007,9.704824,2.524486,-5.879669,0.704866,3.115043,-3.564805,-9.018192,0.642906,8.814135,-5.066307,-4.692801],[-3.648826,-2.034950,5.020421,7.041449,4.524317,5.850757,-5.156355,8.680476,-6.620972,1.907565,5.234854,8.015792],[-0.274614,9.532002,7.041359,7.057981,5.633890,-1.869442,-7.005348,8.044404,-3.645384,-6.874144,-7.705905,-4.825687]]], dtype = "float32")#candidate|1420|(11, 7, 12)|const|float32
bop_1421 = relay.subtract(call_1418.astype('float32'), relay.reshape(const_1420.astype('float32'), relay.shape_of(call_1418))) # shape=(11, 7, 12)
bop_1424 = relay.subtract(call_1419.astype('float32'), relay.reshape(const_1420.astype('float32'), relay.shape_of(call_1419))) # shape=(11, 7, 12)
var_1431 = relay.var("var_1431", dtype = "float32", shape = (11, 7, 12))#candidate|1431|(11, 7, 12)|var|float32
bop_1432 = relay.logical_xor(const_1420.astype('int8'), relay.reshape(var_1431.astype('int8'), relay.shape_of(const_1420))) # shape=(11, 7, 12)
bop_1438 = relay.greater_equal(bop_1421.astype('bool'), relay.reshape(call_1418.astype('bool'), relay.shape_of(bop_1421))) # shape=(11, 7, 12)
bop_1441 = relay.greater_equal(bop_1424.astype('bool'), relay.reshape(call_1419.astype('bool'), relay.shape_of(bop_1424))) # shape=(11, 7, 12)
output = relay.Tuple([bop_1432,bop_1438,])
output2 = relay.Tuple([bop_1432,bop_1441,])
func_1445 = relay.Function([var_1431,], output)
mod['func_1445'] = func_1445
mod = relay.transform.InferType()(mod)
mutated_mod['func_1445'] = func_1445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1446 = relay.var("var_1446", dtype = "float32", shape = (11, 7, 12))#candidate|1446|(11, 7, 12)|var|float32
func_1445_call = mutated_mod.get_global_var('func_1445')
call_1447 = func_1445_call(var_1446)
output = call_1447
func_1448 = relay.Function([var_1446], output)
mutated_mod['func_1448'] = func_1448
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1480 = relay.var("var_1480", dtype = "float32", shape = (15, 6, 5))#candidate|1480|(15, 6, 5)|var|float32
uop_1481 = relay.asinh(var_1480.astype('float32')) # shape=(15, 6, 5)
bop_1488 = relay.minimum(var_1480.astype('uint16'), relay.reshape(uop_1481.astype('uint16'), relay.shape_of(var_1480))) # shape=(15, 6, 5)
func_1206_call = mod.get_global_var('func_1206')
func_1208_call = mutated_mod.get_global_var('func_1208')
var_1494 = relay.var("var_1494", dtype = "float32", shape = (924,))#candidate|1494|(924,)|var|float32
call_1493 = relay.TupleGetItem(func_1206_call(relay.reshape(var_1494.astype('float32'), [11, 7, 12])), 2)
call_1495 = relay.TupleGetItem(func_1208_call(relay.reshape(var_1494.astype('float32'), [11, 7, 12])), 2)
uop_1496 = relay.erf(bop_1488.astype('float32')) # shape=(15, 6, 5)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_1499 = relay.TupleGetItem(func_1315_call(), 1)
call_1500 = relay.TupleGetItem(func_1317_call(), 1)
output = relay.Tuple([call_1493,var_1494,uop_1496,call_1499,])
output2 = relay.Tuple([call_1495,var_1494,uop_1496,call_1500,])
func_1515 = relay.Function([var_1480,var_1494,], output)
mod['func_1515'] = func_1515
mod = relay.transform.InferType()(mod)
var_1516 = relay.var("var_1516", dtype = "float32", shape = (15, 6, 5))#candidate|1516|(15, 6, 5)|var|float32
var_1517 = relay.var("var_1517", dtype = "float32", shape = (924,))#candidate|1517|(924,)|var|float32
output = func_1515(var_1516,var_1517,)
func_1518 = relay.Function([var_1516,var_1517,], output)
mutated_mod['func_1518'] = func_1518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1535 = relay.TupleGetItem(func_1236_call(), 0)
call_1536 = relay.TupleGetItem(func_1237_call(), 0)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1540 = relay.TupleGetItem(func_1236_call(), 1)
call_1541 = relay.TupleGetItem(func_1237_call(), 1)
uop_1561 = relay.sigmoid(call_1540.astype('float64')) # shape=(11, 7, 12)
uop_1563 = relay.sigmoid(call_1541.astype('float64')) # shape=(11, 7, 12)
output = relay.Tuple([call_1535,uop_1561,])
output2 = relay.Tuple([call_1536,uop_1563,])
func_1565 = relay.Function([], output)
mod['func_1565'] = func_1565
mod = relay.transform.InferType()(mod)
mutated_mod['func_1565'] = func_1565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mutated_mod.get_global_var('func_1565')
call_1566 = func_1565_call()
output = call_1566
func_1567 = relay.Function([], output)
mutated_mod['func_1567'] = func_1567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1578 = relay.TupleGetItem(func_1236_call(), 0)
call_1579 = relay.TupleGetItem(func_1237_call(), 0)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1580 = func_1109_call()
call_1581 = func_1109_call()
func_1206_call = mod.get_global_var('func_1206')
func_1208_call = mutated_mod.get_global_var('func_1208')
call_1583 = relay.TupleGetItem(func_1206_call(relay.reshape(call_1578.astype('float32'), [11, 7, 12])), 2)
call_1584 = relay.TupleGetItem(func_1208_call(relay.reshape(call_1578.astype('float32'), [11, 7, 12])), 2)
bop_1591 = relay.minimum(call_1580.astype('uint16'), relay.reshape(call_1583.astype('uint16'), relay.shape_of(call_1580))) # shape=(11, 7, 12)
bop_1594 = relay.minimum(call_1581.astype('uint16'), relay.reshape(call_1584.astype('uint16'), relay.shape_of(call_1581))) # shape=(11, 7, 12)
bop_1600 = relay.bitwise_xor(call_1583.astype('uint8'), relay.reshape(call_1578.astype('uint8'), relay.shape_of(call_1583))) # shape=(11, 7, 12)
bop_1603 = relay.bitwise_xor(call_1584.astype('uint8'), relay.reshape(call_1579.astype('uint8'), relay.shape_of(call_1584))) # shape=(11, 7, 12)
output = relay.Tuple([bop_1591,bop_1600,])
output2 = relay.Tuple([bop_1594,bop_1603,])
func_1605 = relay.Function([], output)
mod['func_1605'] = func_1605
mod = relay.transform.InferType()(mod)
output = func_1605()
func_1606 = relay.Function([], output)
mutated_mod['func_1606'] = func_1606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1268_call = mod.get_global_var('func_1268')
func_1269_call = mutated_mod.get_global_var('func_1269')
call_1625 = relay.TupleGetItem(func_1268_call(), 0)
call_1626 = relay.TupleGetItem(func_1269_call(), 0)
output = relay.Tuple([call_1625,])
output2 = relay.Tuple([call_1626,])
func_1627 = relay.Function([], output)
mod['func_1627'] = func_1627
mod = relay.transform.InferType()(mod)
mutated_mod['func_1627'] = func_1627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1627_call = mutated_mod.get_global_var('func_1627')
call_1628 = func_1627_call()
output = call_1628
func_1629 = relay.Function([], output)
mutated_mod['func_1629'] = func_1629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_1638 = relay.TupleGetItem(func_886_call(), 1)
call_1639 = relay.TupleGetItem(func_888_call(), 1)
output = call_1638
output2 = call_1639
func_1649 = relay.Function([], output)
mod['func_1649'] = func_1649
mod = relay.transform.InferType()(mod)
output = func_1649()
func_1650 = relay.Function([], output)
mutated_mod['func_1650'] = func_1650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_1733 = relay.TupleGetItem(func_1605_call(), 1)
call_1734 = relay.TupleGetItem(func_1606_call(), 1)
output = call_1733
output2 = call_1734
func_1753 = relay.Function([], output)
mod['func_1753'] = func_1753
mod = relay.transform.InferType()(mod)
mutated_mod['func_1753'] = func_1753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1753_call = mutated_mod.get_global_var('func_1753')
call_1754 = func_1753_call()
output = call_1754
func_1755 = relay.Function([], output)
mutated_mod['func_1755'] = func_1755
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1784 = relay.var("var_1784", dtype = "float32", shape = ())#candidate|1784|()|var|float32
var_1785 = relay.var("var_1785", dtype = "float32", shape = (3, 13, 12))#candidate|1785|(3, 13, 12)|var|float32
bop_1786 = relay.mod(var_1784.astype('float32'), var_1785.astype('float32')) # shape=(3, 13, 12)
output = bop_1786
output2 = bop_1786
func_1799 = relay.Function([var_1784,var_1785,], output)
mod['func_1799'] = func_1799
mod = relay.transform.InferType()(mod)
var_1800 = relay.var("var_1800", dtype = "float32", shape = ())#candidate|1800|()|var|float32
var_1801 = relay.var("var_1801", dtype = "float32", shape = (3, 13, 12))#candidate|1801|(3, 13, 12)|var|float32
output = func_1799(var_1800,var_1801,)
func_1802 = relay.Function([var_1800,var_1801,], output)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2004 = func_1109_call()
call_2005 = func_1109_call()
func_1799_call = mod.get_global_var('func_1799')
func_1802_call = mutated_mod.get_global_var('func_1802')
var_2007 = relay.var("var_2007", dtype = "float32", shape = ())#candidate|2007|()|var|float32
var_2008 = relay.var("var_2008", dtype = "float32", shape = (468,))#candidate|2008|(468,)|var|float32
call_2006 = func_1799_call(relay.reshape(var_2007.astype('float32'), []), relay.reshape(var_2008.astype('float32'), [3, 13, 12]), )
call_2009 = func_1799_call(relay.reshape(var_2007.astype('float32'), []), relay.reshape(var_2008.astype('float32'), [3, 13, 12]), )
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_2013 = relay.TupleGetItem(func_886_call(), 0)
call_2014 = relay.TupleGetItem(func_888_call(), 0)
bop_2040 = relay.bitwise_and(call_2013.astype('int32'), var_2007.astype('int32')) # shape=(11, 7, 12)
bop_2043 = relay.bitwise_and(call_2014.astype('int32'), var_2007.astype('int32')) # shape=(11, 7, 12)
func_1799_call = mod.get_global_var('func_1799')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_2047 = func_1799_call(relay.reshape(var_2007.astype('float32'), []), relay.reshape(var_2008.astype('float32'), [3, 13, 12]), )
call_2048 = func_1799_call(relay.reshape(var_2007.astype('float32'), []), relay.reshape(var_2008.astype('float32'), [3, 13, 12]), )
output = relay.Tuple([call_2004,call_2006,var_2008,bop_2040,call_2047,])
output2 = relay.Tuple([call_2005,call_2009,var_2008,bop_2043,call_2048,])
func_2051 = relay.Function([var_2007,var_2008,], output)
mod['func_2051'] = func_2051
mod = relay.transform.InferType()(mod)
var_2052 = relay.var("var_2052", dtype = "float32", shape = ())#candidate|2052|()|var|float32
var_2053 = relay.var("var_2053", dtype = "float32", shape = (468,))#candidate|2053|(468,)|var|float32
output = func_2051(var_2052,var_2053,)
func_2054 = relay.Function([var_2052,var_2053,], output)
mutated_mod['func_2054'] = func_2054
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2107 = relay.var("var_2107", dtype = "int64", shape = (13, 10, 8))#candidate|2107|(13, 10, 8)|var|int64
var_2108 = relay.var("var_2108", dtype = "int64", shape = (13, 10, 8))#candidate|2108|(13, 10, 8)|var|int64
bop_2109 = relay.less_equal(var_2107.astype('bool'), relay.reshape(var_2108.astype('bool'), relay.shape_of(var_2107))) # shape=(13, 10, 8)
uop_2117 = relay.erf(bop_2109.astype('float64')) # shape=(13, 10, 8)
func_2051_call = mod.get_global_var('func_2051')
func_2054_call = mutated_mod.get_global_var('func_2054')
var_2121 = relay.var("var_2121", dtype = "float32", shape = ())#candidate|2121|()|var|float32
const_2122 = relay.const([0.438964,1.132299,-1.607717,7.267866,1.306325,-2.612857,-0.898112,-5.689125,-8.113530,-3.907470,6.904356,-2.327798,4.585996,6.011271,-9.473403,1.381048,-6.361945,1.495706,3.185339,-2.821190,-3.128227,5.719356,-8.698290,1.135027,-2.238239,0.039035,9.589686,-9.752745,-3.990382,4.606808,7.900964,-7.681829,-7.544420,-4.197908,4.800245,-2.897407,9.674019,-1.724496,2.670127,-1.524785,-6.401277,3.978775,9.734383,-1.650723,-4.488837,1.702194,5.563119,8.875159,1.303825,5.488619,-8.772535,-2.565889,-7.061569,-7.077552,0.169904,0.298627,-4.886470,1.905423,-5.061289,5.001297,-7.230668,-7.308776,-6.606492,1.229034,3.591979,-1.090073,-8.723403,-6.242734,-1.590196,-8.309709,8.846347,7.525429,-6.483900,-7.014476,-3.982899,1.468320,-8.992057,-6.851734,9.223192,-5.629103,8.790794,7.998391,-7.452354,-1.233869,-2.108294,-2.639225,-1.599007,3.368583,-4.101782,-4.556961,2.281034,8.328344,8.111291,-7.650710,1.881868,-5.278526,-7.648220,-1.362785,9.339736,1.871626,4.882066,7.046529,0.198590,3.341809,-1.174068,-6.959627,2.138560,1.386948,-8.301010,-0.384511,8.773043,-5.775357,-2.062348,-6.718153,0.896758,5.162306,7.612577,-7.752581,0.845531,-7.019034,4.459124,0.916435,5.838318,-0.910487,-0.808655,7.456770,2.966097,3.429952,7.967015,9.237204,9.658654,5.800041,7.715255,5.932517,6.594468,5.159377,1.748702,-4.083137,3.395905,-7.827527,6.127934,3.380427,6.911906,-3.723330,-5.061725,8.882941,-4.591237,-2.974152,-9.655900,-4.263917,-5.716461,4.129370,-8.057050,-0.746808,-4.472723,8.743945,-3.212363,-4.690591,-7.721959,-1.923668,-5.984494,-7.684307,3.407089,-0.916142,9.036293,0.002504,-1.954042,2.574717,-6.404077,7.610993,-7.723548,-7.729913,8.540631,-3.856268,5.384824,9.080831,-8.876279,-7.679527,-2.152159,2.371573,4.927170,4.251938,0.053576,-4.624014,-0.291003,-6.215304,1.812066,-7.871777,6.736916,-9.089947,1.161706,-5.452536,3.234261,7.749749,-9.527930,4.660858,-0.856002,2.108225,1.976942,5.502349,6.503233,-3.418834,2.317018,-5.748135,0.903353,8.000524,-3.868379,-6.267649,5.317351,4.161598,6.702916,2.042886,-4.223507,0.548028,4.755679,6.982056,4.888207,5.477137,-2.741233,0.053028,-6.260309,6.460891,7.647909,-1.349845,7.165747,-8.595128,7.792961,-6.702478,-3.747495,3.436972,2.164466,8.336987,9.296301,8.068519,-0.178184,1.610478,5.486898,4.499143,9.879455,9.779541,5.109161,1.839156,-7.743236,-9.958233,7.394232,-9.202019,6.074712,4.132503,-7.251121,-8.717549,-5.572013,7.630498,-7.193055,-0.950346,-6.867923,7.605716,9.474722,-1.376987,-5.700029,-0.016477,9.670689,-5.844040,-2.608897,7.977144,-8.037162,0.958176,8.199888,7.373184,3.839763,5.970925,1.235215,-2.544551,1.443864,-7.976750,1.542570,-9.230048,3.121517,9.366269,-1.731571,-3.523730,1.548694,3.330116,-5.679188,-0.215407,-1.009583,-4.138154,-6.731825,-8.473425,1.713556,-3.663409,-7.145971,0.597095,6.113435,1.651739,7.380460,6.722816,-8.126940,-3.261237,4.120572,-8.570881,-5.319021,9.406674,9.157140,9.723838,5.391688,-1.346160,-7.591409,2.914891,-8.552997,7.869448,9.573395,-6.037649,-0.144725,-5.328784,-9.847384,2.286299,4.448824,9.425949,7.644747,-0.126635,-7.864452,-5.316437,-6.487772,4.088136,-6.778261,7.188223,7.353892,1.402569,-2.444993,8.523590,5.652964,0.996060,5.396732,9.968149,3.210542,7.579243,-4.182292,-9.182484,-3.517402,-8.727156,9.777026,-7.352206,3.088902,-5.003608,3.168330,-0.853187,-0.791696,-5.835387,1.271884,-1.276399,6.253616,-9.196971,3.988747,-4.763744,-6.492032,9.710902,-2.680097,-4.750599,3.275268,9.993731,-2.791298,4.701827,-7.251537,7.748369,-1.982607,-0.444491,1.754675,4.261657,-2.079881,-1.608073,-7.273055,-5.291456,0.637631,1.682165,3.079674,-0.652093,-0.790967,-7.304456,7.153523,-0.014181,-6.764184,7.319529,-5.997751,-2.473131,-1.913325,6.691026,-9.046906,-9.680915,6.238913,1.360758,-5.039966,-8.551928,3.775191,2.011090,-1.322411,-8.164355,8.204735,4.318382,0.599505,-0.646643,-4.548768,-2.063314,5.840962,1.873274,-6.163412,2.950130,-8.217627,-6.641708,-0.289306,-8.575229,6.924991,6.231615,-1.153094,-6.426307,7.764426,3.281292,5.968410,-6.924941,-2.422973,6.769985,-5.954707,-7.758728,-7.987627,3.968586,-4.911245,-1.226681,-8.454675,-3.325367,-7.731727,-1.903216,7.041249,7.327699,-5.791666,5.658188,1.750365,7.349541,2.974354,-5.509255,-5.769840,4.791405,7.644940,7.006896,6.640128,-9.728275,-5.564941,4.439638,6.853006,-5.156044,0.689965,-6.249887,-0.461958,-1.736385,4.056776,-2.154583,-3.625270,8.252503,9.958706,-1.388653,-4.759777,-3.583576,8.127614,4.932772,-9.366025,-5.806876,7.813891,5.456678,7.997301,-3.338391], dtype = "float32")#candidate|2122|(468,)|const|float32
call_2120 = relay.TupleGetItem(func_2051_call(relay.reshape(var_2121.astype('float32'), []), relay.reshape(const_2122.astype('float32'), [468,]), ), 2)
call_2123 = relay.TupleGetItem(func_2054_call(relay.reshape(var_2121.astype('float32'), []), relay.reshape(const_2122.astype('float32'), [468,]), ), 2)
output = relay.Tuple([uop_2117,call_2120,var_2121,const_2122,])
output2 = relay.Tuple([uop_2117,call_2123,var_2121,const_2122,])
func_2131 = relay.Function([var_2107,var_2108,var_2121,], output)
mod['func_2131'] = func_2131
mod = relay.transform.InferType()(mod)
mutated_mod['func_2131'] = func_2131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2131_call = mutated_mod.get_global_var('func_2131')
var_2133 = relay.var("var_2133", dtype = "int64", shape = (13, 10, 8))#candidate|2133|(13, 10, 8)|var|int64
var_2134 = relay.var("var_2134", dtype = "int64", shape = (13, 10, 8))#candidate|2134|(13, 10, 8)|var|int64
var_2135 = relay.var("var_2135", dtype = "float32", shape = ())#candidate|2135|()|var|float32
call_2132 = func_2131_call(var_2133,var_2134,var_2135,)
output = call_2132
func_2136 = relay.Function([var_2133,var_2134,var_2135,], output)
mutated_mod['func_2136'] = func_2136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2151 = func_1109_call()
call_2152 = func_1109_call()
output = relay.Tuple([call_2151,])
output2 = relay.Tuple([call_2152,])
func_2167 = relay.Function([], output)
mod['func_2167'] = func_2167
mod = relay.transform.InferType()(mod)
output = func_2167()
func_2168 = relay.Function([], output)
mutated_mod['func_2168'] = func_2168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1627_call = mod.get_global_var('func_1627')
func_1629_call = mutated_mod.get_global_var('func_1629')
call_2192 = relay.TupleGetItem(func_1627_call(), 0)
call_2193 = relay.TupleGetItem(func_1629_call(), 0)
output = relay.Tuple([call_2192,])
output2 = relay.Tuple([call_2193,])
func_2200 = relay.Function([], output)
mod['func_2200'] = func_2200
mod = relay.transform.InferType()(mod)
output = func_2200()
func_2201 = relay.Function([], output)
mutated_mod['func_2201'] = func_2201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_2204 = relay.TupleGetItem(func_886_call(), 1)
call_2205 = relay.TupleGetItem(func_888_call(), 1)
uop_2220 = relay.asinh(call_2204.astype('float64')) # shape=(11, 7, 12)
uop_2222 = relay.asinh(call_2205.astype('float64')) # shape=(11, 7, 12)
func_1082_call = mod.get_global_var('func_1082')
func_1084_call = mutated_mod.get_global_var('func_1084')
const_2228 = relay.const([3,-10,-3,-4,-10,5,5,-6,6,8,8,4,-9,-6,-8,2,2,-2,4,3,7,3,2,5,-9,-6,4,-8,-7,-8,1,6,1,-2,4,-8,3,-2,-9,5,-2,7,-4,-9,-3,-6,8,-10,2,3,-7,-6,10,-9,7,-9,6,-4,-4,1,-9,-2,1,-5,3,-8,9,-3,3,10,-6,8,-6,2,7,-7,-10,-5,-10,3,-8,-4,-4,8,10,7,8,8,10,-5,-3,3,-1,4,9,-7,-8,-6,9,-2,-5,-5,-6,8,-4,3,7,-1,-4,-2,-2,-2,9,5,-5,8,-7,2,7,9,4,7,10,4,4,-9,-4,-9,10,-4,2,-2,5,2,5,-3,5,-4,7,9,3,-10,-6,3,-4,10,9,6,-7,7,-2,-2,-10,2,-4,3,-6,6,1,-9,-8,-10,10,-4,6,8,4,5,-8,-3,5,-10,8,-4,-7,1,-9,-4,-9,-5,-10,3,4,-7,-4,-3,-8,-3,-2,3,-7,7,-7,6,-9,-1,5,-2,3,-9,10,9,6,-4,8,-10,-2,-2,7,-7,10,-5,5,1,-5,-8,-4,-4,-8,1,-6,10,5,8,-1,-8,6,-3,1,8,6,-2,2,3,4,5,-2,-7,10,-10,-2,-9,4,-9,10,10,3,8,-7,7,-4,1,-9,4,-4,10,7,-6,5,-5,-3,1,-6,-3,-10,4,5,2,4,3,4,-5,5,1,5,5,10,5,-4,9,-9,2,8,7,-1,1,-6,-4,6,-10,-1,10,-10,-7,5,2,9,-7,-7,-1,9,-2,8,7,-5,-6,4,8,-3,2,-9,2,-8,8,-7,4,3,-10,-3,-5,-4,5,-1,3,7,1,-10,7,6,-3,-4,-7,-4,8,-4,8,-5,9,5,9,-7,-10,-7,-7,2,-6,-7,-3,-1,-10,3,-6,-10,-4,5,9,-6,-1,5,8,7,4,-8,-7,-10,-6,3,-5,5,8,-5,-3,5,5,-1,-9,-6,4,-2,5,-6,-6,4,-3,-3,10,7,8,-9,-4,-6,9,-6,6,-4,1,-3,-2,-10,-4,6,-8,9,-5,-1,-9,1,-6,2,4,-4,-7,-2,2,4,5,-1,-2,-1,9,7,-8,9,-3,8,9,2,7,-7,-8,-4,-8,9,5,9,1,-5,2,5,-7,5,-4,-5,5,-7,-2,7,8,-2,-6,-9,6,-8,-8,-6,-5,-4,-9,10,-1,-6,-10,5,-9,-10,-7,-3,-3,-3,-5,9,-9,-9,-1,2,-5,-7,1,2,-10,-4,3,1,-8,8,-3,-3,9,-9,-2,4,-9,-4,-4,10,-1,2,2,10,8,-3,-5,1,10,-4,-3,10,1,2,-10,-1,7,-5,-7,-8,2,-3,-10,1,-8,-2,7,-3,-6,6,-9,1,10,-4,-2,1,-6,3,1,-7,10,10,-3,-8,1,-9,10,-6,-5,-5,-5,-10,-1,8,-8,-2,6,8,8,10,-7,-10,6,-5,-8,-5,9,3,-8,-3,-8,5,-9,-3,8,-6,10,-1,-4,7,-9,3,10,7,9,-6,-6,-8,5,-2,5,-7,-4,3,-5,9,5,-3,10,-6,-9,-3,-3,-10,4,-1,-9,-8,-7,10,3,7,1,-6,-9,9,3,4,5,-8,5,-2,8,-7,10,8,-9,5,4,-1,2,-2,4,-4,-2,-9,-2,1,-10,-6,10,-6,-10,8,-2,8,9,-10,-7,-3,7,-6,-5,-8,7,-7,-9,-5,6,4,4,-2,5,7,8,-1,-2,-3,-5,-1,-6,-1,-1,-5,-2,5,-4,-9,10,-1,4,3,-8,-2,-7,7,-9,-10,7,-9,8,-2,-2,-1,7,-3,5,-8,2,8,-10,5,-3,4,-2,-6,-9,-3,1,7,8,-10,6,6,7,9,8,1,-9,-1,9,1,10,-1,10,1,-8,10,1,1,-9,9,4,-1,6,6,-1,-1,3,-4,-10,2,7,1,8,-8,-4,-6,-7,-3,-9,8,6,-3,-3,-3,-1,2,-8,6,9,-5,-10,-1,-8,-10,3,-8,-7,-1,9,5,10,-8,2,-4,-9,-4,-8,6,1,-4,5,-5,-5,5,10,-6,9,1,-9,2,2,6,3,7,-1,-8,4,-1,10,5,-7,-4,-6,-8,8,4,8,-1,4,-2,-2,1,6,7,7,-9,4,3,-6,4,2,5,9,-8,-7,-8,-3,-5,1,6,-5,-4,-8,-8,7,10,1,7,5,-3,-8,-1,9,3,-7,8,3,10,9,6,1,5,-3,-4,-10,1,7,2,-6,-4,3,7,-7,5,-5,4,-9,2,3,-8,-10,-2,1,-2,8,-1,1,-7,5,4,5,9,-7,5,4,3,-4,-2,-9,-1,-2,8,-10,-10,8,-6,2,-6,4,-8,-7,-4,-6,-8,-1,-1,-3,6,5,10,-10,6,-4,2,8,-8,-3,-7,-9,3,4,-2,-5,10,-4,5,9,-9,-8,2,-3,10,-3,4,-2,3,-2,-2,-5,1,3,5,-7,-6,7,10,8,-5,-7,-2,-7,4,4,-8,-8,-8,5,4,2,-7,-8,9,7,7,-5,2,8,3,1,10,-2,-10,-4,9,6,4,-4,-2,-9,4,1,-7,-1,-10,-4,2,9,-3,8,-10,1,-10,7,6,2,9,6,-2,-4,1,-3,6,-7,-4,2,-9,7,7,-1,9,3,-7,-2,9,-3,6,5,5,-10,7,4,6,-3,-5,-6,-8,-2,9,5,-4,10,2,1,-9,8,-6,2,-4,-4,9,-3,8,-1,-1,-7,-3,-4,-4,4,-9,-1,-5,-4,-8,-7,-8,-4,-8,-5,3,6,1,-3,-9,10,9,1,-4,4,5,1,-4,10,-1,-4,7,10,-2,-4,-2,-8,-6,7,-6,-4,-4,6,9,3,1,4,-9,-7,-9,-1,5,-2,-8,3,-9,9,-1,3,-9,9,4,-1,10,-4,-8,10,4,-6,-2,-10,-5,6,2,-5,-6,4,-10,10,10,8,9,-1,1,-7,6,6,4,9,-1,-8,1,-4,-4,10,10,-4,-10,-2,-4,-4,4,-4,-1,-6,-1,9,8,-4,10,8,4,9,-9,-4,7,5,-7,-4,4,-1,6,-7,-3,-7,-7,-5,9,6,4,-2,10,-6,6,7,10,5,8,-8,-6,-6,-2,-5,-6,10,1,-2,-1,7,-8,9,2,2,7,3,-7,-6,1,-1,-10,-6,4,1,-8,-3,5,-2,6,-7,6,-8,-10,-1,6,7,-4,9,4,-3,10,-7,-8,2,-5,-8,-10,3,1,-10,-5,-4,-1,-6,3,-5,5,-10,1,8,-2,6,-5,1,-2,-4,7,7,-1,2,2,6,9,2,-7,-7,-9,10,-1,-3,-9,9,4,-3,9,-8,-3,10,-10,4,-5,6,-4,-9,7,-6,-8,4,3,9,-5,4,-1,9,-1,1,-4,1,3,-2,3,-1,-7,4,-4,-3,-2,-6,3,6,-10,9,4,-3,9,9,5,2,-9,-1,3,-4,9,8,5,8,-1,-9,-7,1,-8,-8,4,-5,10,6,8,-6,9,-2,10,-10,-7,5,3,-9,-8,-6,-1,-5,-8,2,-10,4,-4,4,6,-6,-4,6,9,-10,6,-9,-8,-6,5,4,-8,-3,-5,-10,-10,6,9,3,9,5,1,2,8,8,8,9,8,-10,-10,6,9,5,-3,-6,-2,-8,4,-4,8,8,-2,1,10,7,-4,-1,4,-10,4,9,-6,-1,-7,-5,-5,-10,-1,-10,-4,2,-9,-2,-8,-2,-10,-10,-10,-7,6,-1,-6,-9,-1,9,-4,-5,5,-8,2,9,10,8,-10,6,-8,6,-7,-10,-2,6,-3,2,8,5,7,4,3,9,7,-9,4,1,-10,2,4,-1,8,-5,1,-8,3,-10,-4,-2,-4,-7,6,-2,1,-10,1,-9], dtype = "uint32")#candidate|2228|(1470,)|const|uint32
call_2227 = relay.TupleGetItem(func_1082_call(relay.reshape(const_2228.astype('uint32'), [1470,])), 2)
call_2229 = relay.TupleGetItem(func_1084_call(relay.reshape(const_2228.astype('uint32'), [1470,])), 2)
uop_2234 = relay.log2(call_2204.astype('float32')) # shape=(11, 7, 12)
uop_2236 = relay.log2(call_2205.astype('float32')) # shape=(11, 7, 12)
output = relay.Tuple([uop_2220,call_2227,const_2228,uop_2234,])
output2 = relay.Tuple([uop_2222,call_2229,const_2228,uop_2236,])
func_2237 = relay.Function([], output)
mod['func_2237'] = func_2237
mod = relay.transform.InferType()(mod)
mutated_mod['func_2237'] = func_2237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2237_call = mutated_mod.get_global_var('func_2237')
call_2238 = func_2237_call()
output = call_2238
func_2239 = relay.Function([], output)
mutated_mod['func_2239'] = func_2239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1649_call = mod.get_global_var('func_1649')
func_1650_call = mutated_mod.get_global_var('func_1650')
call_2306 = func_1649_call()
call_2307 = func_1649_call()
output = relay.Tuple([call_2306,])
output2 = relay.Tuple([call_2307,])
func_2308 = relay.Function([], output)
mod['func_2308'] = func_2308
mod = relay.transform.InferType()(mod)
mutated_mod['func_2308'] = func_2308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2308_call = mutated_mod.get_global_var('func_2308')
call_2309 = func_2308_call()
output = call_2309
func_2310 = relay.Function([], output)
mutated_mod['func_2310'] = func_2310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2311 = func_1109_call()
call_2312 = func_1109_call()
func_1445_call = mod.get_global_var('func_1445')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_2316 = relay.TupleGetItem(func_1445_call(relay.reshape(call_2311.astype('float32'), [11, 7, 12])), 0)
call_2317 = relay.TupleGetItem(func_1448_call(relay.reshape(call_2311.astype('float32'), [11, 7, 12])), 0)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2330 = func_1109_call()
call_2331 = func_1109_call()
output = relay.Tuple([call_2311,call_2316,call_2330,])
output2 = relay.Tuple([call_2312,call_2317,call_2331,])
func_2368 = relay.Function([], output)
mod['func_2368'] = func_2368
mod = relay.transform.InferType()(mod)
output = func_2368()
func_2369 = relay.Function([], output)
mutated_mod['func_2369'] = func_2369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2430 = relay.var("var_2430", dtype = "float32", shape = (8, 16, 8))#candidate|2430|(8, 16, 8)|var|float32
uop_2431 = relay.atan(var_2430.astype('float32')) # shape=(8, 16, 8)
const_2433 = relay.const([[[-1.765935,3.445874,-7.550964,-8.824763,1.743865,-3.758832,1.021748,-1.742350],[-8.493614,-7.120987,4.156610,-6.424441,8.870217,-1.724751,2.595882,-3.143308],[-7.647300,1.761615,-4.359544,-2.954593,8.777032,1.458598,2.151240,-0.620624],[-9.196754,-3.584048,-5.080555,7.264818,5.373552,-9.825274,8.194503,6.265319],[-8.451334,-4.606233,-6.493593,-4.596432,0.469894,-7.122487,-3.431144,1.565988],[7.129008,-1.571517,-2.195193,0.709644,-2.159512,-1.442334,4.557728,5.562788],[4.868499,-2.877293,-9.090829,4.403416,-1.338408,-1.573522,-1.968041,-6.417674],[5.195935,8.056071,-1.037626,-1.169558,5.270332,-4.545273,-1.499389,-8.104223],[1.759453,2.309150,-8.650928,-7.917633,-1.427564,8.967739,-2.911040,9.918405],[-9.632884,9.841681,3.587513,2.499677,-2.766853,8.065849,-2.984838,-1.040579],[-0.448947,5.971073,-8.221164,-7.365486,1.093617,9.692805,2.774151,7.169649],[-4.688063,-1.652260,-1.965115,-8.037119,2.009102,4.249791,3.492155,5.212326],[7.336024,-3.564176,-2.023304,3.486086,-5.620325,0.447685,0.331854,-8.405796],[0.475617,0.403331,-5.619794,3.648231,-4.876230,9.382007,-5.205436,8.258321],[-9.065036,-5.970648,-1.172721,-2.930594,-5.087407,-5.130728,-4.451926,3.124690],[2.858433,-1.833241,-4.845245,1.358516,-9.002438,7.189464,-2.425198,2.636518]],[[-5.319729,2.813616,5.421049,-9.299805,-7.472231,6.237537,2.117841,-5.818742],[8.573782,-4.678842,-7.224107,-1.955172,8.836929,-1.875109,0.180872,-0.366548],[1.245125,-3.061341,1.736562,-7.192941,-5.972864,-0.821635,7.516687,-9.441390],[3.055550,-1.440804,5.080791,6.263567,-1.849152,-3.690775,1.171553,-1.548012],[-9.455808,2.053951,3.790469,3.581460,0.891453,2.251456,2.239156,7.306076],[-0.983219,-3.173293,0.452603,-2.798864,4.596856,2.345477,9.219384,6.460700],[-3.680166,3.619405,5.941338,2.326040,3.180279,8.970486,3.631303,0.611160],[-9.297940,6.524458,8.111033,-4.658088,-3.960384,5.713747,0.484634,5.794175],[8.270260,2.799669,-1.212907,4.591490,6.890173,-9.807833,-2.867500,-7.128710],[8.406417,-2.665563,-0.251234,-0.394956,-4.139830,-5.645097,-9.246661,0.255516],[7.585701,-1.554823,-3.116847,0.743757,-7.721745,-7.717520,8.517690,-7.928173],[-9.135942,-9.225503,8.478777,0.754499,-3.471175,1.039933,4.289977,4.594331],[2.756373,-1.006419,7.505138,9.693969,7.808876,-1.672337,-0.283067,-4.944997],[7.197372,0.054875,9.367296,-7.693254,1.092630,-6.055608,5.172932,5.430107],[-7.409233,-9.432086,5.098903,9.281070,3.543547,2.774188,-6.387607,-6.173740],[-2.853208,-6.602750,-8.671709,-7.048172,-0.019888,-5.057373,-4.232300,-0.742594]],[[-0.706957,-9.009680,-7.995545,-1.977123,-2.809525,-9.029326,7.797661,-0.656449],[-2.142415,8.559590,-4.800975,-0.679494,6.307287,-5.433124,-8.551721,-8.737339],[1.020460,-2.724738,-8.842742,2.133980,2.068382,-7.158902,-0.304595,-4.303889],[4.756720,0.436189,0.674299,1.021881,-3.594669,-2.188854,-8.483006,2.927832],[-6.168351,-5.851104,9.474926,5.613025,0.948563,5.198777,-0.571138,-4.234017],[-2.122843,5.760297,-3.901827,-4.250207,-8.338429,2.142703,1.905365,-8.990592],[0.735307,-8.056607,-7.173024,8.038934,3.246149,3.818819,-9.672058,-8.353907],[7.138921,6.820388,-8.877993,8.248815,-6.282542,4.889455,0.624279,8.040794],[-6.658564,6.693349,3.589022,-2.299100,-4.019201,0.165215,-3.667624,8.240511],[1.219644,2.926541,-2.233826,4.947714,9.173653,-5.186356,-9.976118,1.871441],[4.751237,-2.250340,8.611638,-1.986035,-2.232446,9.476611,5.390026,2.136167],[8.048454,-4.170784,5.921256,-0.122583,-3.987397,5.260164,2.795857,-6.032230],[-3.603101,7.536207,1.030402,4.906268,3.163120,-3.423687,7.863076,-8.126773],[-5.584416,-0.497284,-4.463348,7.922166,9.522507,6.732242,8.188939,3.031437],[-0.112531,-2.515655,-5.943720,-7.859656,-0.192447,-6.376878,-9.201998,-3.273343],[9.052788,-5.353088,4.989642,5.081230,-8.179649,7.028143,-0.300987,3.182373]],[[-3.965935,-2.147317,0.469899,-7.522677,-0.288236,3.367105,9.614884,5.235508],[-0.203131,-4.233993,5.074964,-7.240277,0.329191,-9.117586,6.137373,-8.758179],[6.322039,-3.633736,8.361436,-6.710497,-0.929300,-2.176504,8.003125,-9.280712],[4.672504,4.009245,-5.509659,5.568030,-9.658557,2.683223,3.951050,5.963129],[8.933135,-2.036098,-8.429260,-6.329276,-8.087234,0.691746,-9.647155,-1.074638],[-0.890111,7.504074,6.350104,-9.422835,-5.439439,3.622904,-5.849837,-8.363432],[3.010159,-1.756943,7.689106,-8.141099,-1.324685,0.519946,4.543692,-3.041014],[6.860866,0.555405,-3.212235,-4.102885,0.061468,6.123476,-6.434690,0.816508],[-8.701029,-8.920103,-8.578230,4.014095,-6.225233,-5.098339,-4.992061,8.557846],[-5.238622,4.118261,3.504432,9.548208,4.218227,-3.726413,-7.475507,0.241136],[2.638652,-2.996091,-8.007864,-6.488262,-2.387221,9.646515,-3.825401,-1.190355],[8.654584,6.777717,-3.833934,1.473465,4.463227,2.576264,-5.927277,-0.932575],[-9.363708,3.322838,0.859410,3.670118,-9.666232,-4.140247,-0.410011,6.198197],[-2.953010,-0.640354,0.422650,2.438221,4.490561,-4.776961,9.561679,4.723099],[2.083097,2.887507,2.908421,-5.900186,7.154877,-1.778872,-9.106912,8.649960],[-4.959554,3.703404,4.207611,6.521636,1.863382,-3.938591,-0.256619,3.283469]],[[1.208330,-1.741511,1.464527,-6.682774,-1.697315,-1.811856,0.997671,6.699500],[7.087727,4.652106,7.261047,8.693337,3.225383,-0.457105,-3.542707,3.445481],[-0.589151,-7.105627,2.076384,-8.089600,6.431253,-4.858134,-6.114682,-7.846730],[-0.468021,-1.005980,-3.456035,-5.999150,-0.923321,-9.561682,-7.257283,-7.491846],[2.876605,8.271487,0.913121,-6.338787,-4.749407,7.372350,2.324679,0.816638],[-0.313788,7.895753,9.690227,-1.407381,-6.054510,-8.847525,-7.160704,9.702376],[2.665775,-2.560446,-0.082897,3.808055,4.199866,5.316313,1.391833,-6.892197],[2.207747,-0.086804,-5.196997,-3.066430,9.886807,9.351902,7.498812,-5.741305],[6.461692,5.552301,8.543783,0.649287,-9.056865,2.769121,0.129889,9.844404],[-1.182264,1.633574,-6.694279,2.073373,8.919378,7.453312,-7.880795,6.736024],[8.564257,1.879215,-3.186778,9.212236,-8.785298,-6.299493,6.799868,-8.750584],[6.875584,-2.473811,3.479787,-9.863144,-6.279169,3.847976,4.568941,4.611245],[9.641078,6.917566,3.022806,-3.474653,-9.117999,3.188055,-3.379000,5.517379],[8.538301,5.687229,6.364073,0.944067,-9.847718,-1.196226,-0.003284,-1.857251],[2.096282,0.343154,-0.854309,-8.598146,-4.352767,-8.604055,7.055255,-3.305481],[4.899442,1.729923,4.108392,3.485016,2.488916,9.511875,8.199463,5.834611]],[[-2.218004,3.690996,9.629882,2.149970,4.114919,-5.529008,2.298034,5.243203],[4.124834,6.047314,-7.272286,-4.243913,2.206175,9.952097,6.846673,6.322313],[7.822128,-2.372666,-4.379081,-5.460284,-5.656858,-0.302437,5.403446,-0.140172],[-9.037661,-7.292981,-0.565569,-5.700558,-7.378880,-6.836372,-2.091063,3.224199],[-5.232115,-7.242447,8.550364,-9.453615,-1.914548,6.465339,3.961512,-1.635136],[-0.702836,-4.000421,9.294938,-7.720278,-5.422355,6.102241,-0.362083,-0.092184],[-6.890094,2.206400,3.413334,5.907852,-3.876151,4.724326,3.762228,5.946026],[-2.945542,-1.693982,-5.356419,-5.068205,-1.437060,7.645333,-8.591769,1.737504],[5.925323,2.748656,0.688632,-7.830971,1.021406,4.151053,1.885253,-1.360047],[-6.074264,6.945311,2.125028,1.932393,1.556308,-9.217846,-5.343086,-2.618993],[-3.281318,-2.275151,2.333872,0.651198,-4.288528,3.296218,3.885930,-2.484591],[-3.194385,-6.997587,7.639016,9.265602,8.599167,-7.975743,-2.754927,8.551518],[-0.403563,-8.516905,-4.867750,9.980273,-3.354987,-6.838191,-0.828093,0.969051],[-3.438096,1.269152,9.408999,-8.537373,-1.751756,-1.871769,1.549720,-9.712582],[6.606346,1.915911,-9.446646,-7.253237,8.387707,8.306197,5.230728,4.010034],[-9.924005,8.446524,5.107597,-6.852120,9.229101,-5.504729,-5.978916,-6.363530]],[[3.395447,4.800171,-1.689647,-3.714638,-4.108178,-1.850839,-3.592166,3.567382],[-9.897668,-1.259981,-1.073047,8.490191,0.785072,9.450165,-1.734289,2.862996],[4.791192,-4.024842,9.050715,-0.285125,-8.030133,2.212044,-0.113031,6.654586],[-3.828155,-6.360891,8.159557,-9.875235,-9.644554,-6.653170,6.467435,-7.452285],[3.294202,6.464532,-3.563579,-6.249504,-0.157981,8.785179,0.392934,1.849686],[0.930985,-4.675563,9.270800,1.420076,-9.807281,9.842000,-2.438562,8.430254],[-8.075925,-6.817206,-2.202295,4.430116,-5.755893,1.391601,4.535105,1.229064],[-9.457754,3.378042,-2.420634,4.173844,8.770701,2.960488,1.185000,1.472589],[7.595060,-0.627781,-6.550002,-3.052003,-0.273323,-8.702735,-8.582163,-8.094249],[-0.798806,-7.163160,1.300538,3.618609,-8.003086,-9.203388,1.710920,6.440697],[3.530662,-0.386251,5.821596,-2.627477,-4.507283,-2.687559,6.271514,-1.863176],[-3.110748,-1.111020,-6.747702,-3.948861,-4.823731,-6.812238,-1.600626,-0.954583],[2.831708,-4.788565,8.844718,6.364074,4.133250,-2.736952,-3.845294,-1.736947],[-9.799739,-8.827966,1.169733,9.960778,7.017071,7.847696,-6.066990,6.514605],[1.790775,-8.364628,4.596385,-7.526582,4.203179,6.540178,9.734665,5.955841],[-0.634835,2.819257,-4.687879,-5.474706,-3.069991,-4.762836,2.859046,0.928809]],[[9.266296,-1.061658,3.071711,9.867523,7.743356,-9.679065,4.264228,-7.797495],[-1.430052,1.840153,8.945273,-5.198302,4.062451,-1.059432,9.767542,7.160320],[0.998315,9.764259,5.566129,-8.953456,3.799965,2.848232,-2.521792,-5.407703],[0.058654,4.435104,7.692787,9.100792,-3.163009,-1.735540,0.129025,-7.389675],[9.732900,4.617029,9.885490,4.696862,-1.010817,2.663373,2.561520,1.207378],[1.456799,3.113847,6.710885,2.232386,-1.203719,9.453225,-2.745131,-4.236397],[4.465366,-7.513665,0.094645,5.534995,-9.882029,-3.408498,-6.409887,2.570545],[0.310891,9.827375,7.700055,-1.842056,-7.866454,3.979783,-6.411101,-0.130443],[7.877542,-3.328600,-9.129695,-2.456301,-6.095711,-4.948539,6.706524,-0.132327],[-6.338530,8.813727,-1.009927,3.792494,9.043189,8.679414,8.992184,1.858174],[-0.540919,4.142798,9.560508,-1.298382,2.396483,-3.556800,-4.335767,5.407072],[-0.278707,-9.881225,-2.303409,0.277344,-1.973726,1.047090,-2.189746,-0.861751],[-0.466592,-2.263404,0.700711,5.085887,8.312974,0.588296,-5.613618,8.392623],[8.344923,-7.003897,8.585723,1.706920,-9.462749,2.305017,6.613157,-2.272640],[-1.788935,2.789413,5.683136,-2.805204,1.135598,-9.237977,-2.085593,-6.517385],[2.039594,7.266293,3.536590,-4.404625,-0.107287,-6.326880,6.948131,2.078945]]], dtype = "float32")#candidate|2433|(8, 16, 8)|const|float32
bop_2434 = relay.multiply(var_2430.astype('uint32'), relay.reshape(const_2433.astype('uint32'), relay.shape_of(var_2430))) # shape=(8, 16, 8)
bop_2437 = relay.logical_or(uop_2431.astype('bool'), relay.reshape(bop_2434.astype('bool'), relay.shape_of(uop_2431))) # shape=(8, 16, 8)
uop_2445 = relay.log(uop_2431.astype('float64')) # shape=(8, 16, 8)
output = relay.Tuple([bop_2437,uop_2445,])
output2 = relay.Tuple([bop_2437,uop_2445,])
func_2453 = relay.Function([var_2430,], output)
mod['func_2453'] = func_2453
mod = relay.transform.InferType()(mod)
var_2454 = relay.var("var_2454", dtype = "float32", shape = (8, 16, 8))#candidate|2454|(8, 16, 8)|var|float32
output = func_2453(var_2454)
func_2455 = relay.Function([var_2454], output)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2476 = relay.var("var_2476", dtype = "int32", shape = (13, 2, 13))#candidate|2476|(13, 2, 13)|var|int32
var_2477 = relay.var("var_2477", dtype = "int32", shape = (13, 2, 13))#candidate|2477|(13, 2, 13)|var|int32
bop_2478 = relay.add(var_2476.astype('int32'), relay.reshape(var_2477.astype('int32'), relay.shape_of(var_2476))) # shape=(13, 2, 13)
func_2167_call = mod.get_global_var('func_2167')
func_2168_call = mutated_mod.get_global_var('func_2168')
call_2483 = relay.TupleGetItem(func_2167_call(), 0)
call_2484 = relay.TupleGetItem(func_2168_call(), 0)
bop_2485 = relay.bitwise_xor(bop_2478.astype('uint8'), relay.reshape(var_2477.astype('uint8'), relay.shape_of(bop_2478))) # shape=(13, 2, 13)
bop_2492 = relay.multiply(bop_2478.astype('float64'), relay.reshape(var_2477.astype('float64'), relay.shape_of(bop_2478))) # shape=(13, 2, 13)
output = relay.Tuple([call_2483,bop_2485,bop_2492,])
output2 = relay.Tuple([call_2484,bop_2485,bop_2492,])
func_2498 = relay.Function([var_2476,var_2477,], output)
mod['func_2498'] = func_2498
mod = relay.transform.InferType()(mod)
mutated_mod['func_2498'] = func_2498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2498_call = mutated_mod.get_global_var('func_2498')
var_2500 = relay.var("var_2500", dtype = "int32", shape = (13, 2, 13))#candidate|2500|(13, 2, 13)|var|int32
var_2501 = relay.var("var_2501", dtype = "int32", shape = (13, 2, 13))#candidate|2501|(13, 2, 13)|var|int32
call_2499 = func_2498_call(var_2500,var_2501,)
output = call_2499
func_2502 = relay.Function([var_2500,var_2501,], output)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mod.get_global_var('func_1565')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_2567 = relay.TupleGetItem(func_1565_call(), 0)
call_2568 = relay.TupleGetItem(func_1567_call(), 0)
output = call_2567
output2 = call_2568
func_2572 = relay.Function([], output)
mod['func_2572'] = func_2572
mod = relay.transform.InferType()(mod)
mutated_mod['func_2572'] = func_2572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2572_call = mutated_mod.get_global_var('func_2572')
call_2573 = func_2572_call()
output = call_2573
func_2574 = relay.Function([], output)
mutated_mod['func_2574'] = func_2574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_2609 = relay.TupleGetItem(func_1396_call(), 0)
call_2610 = relay.TupleGetItem(func_1397_call(), 0)
output = call_2609
output2 = call_2610
func_2638 = relay.Function([], output)
mod['func_2638'] = func_2638
mod = relay.transform.InferType()(mod)
output = func_2638()
func_2639 = relay.Function([], output)
mutated_mod['func_2639'] = func_2639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2237_call = mod.get_global_var('func_2237')
func_2239_call = mutated_mod.get_global_var('func_2239')
call_2649 = relay.TupleGetItem(func_2237_call(), 1)
call_2650 = relay.TupleGetItem(func_2239_call(), 1)
output = relay.Tuple([call_2649,])
output2 = relay.Tuple([call_2650,])
func_2659 = relay.Function([], output)
mod['func_2659'] = func_2659
mod = relay.transform.InferType()(mod)
mutated_mod['func_2659'] = func_2659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2659_call = mutated_mod.get_global_var('func_2659')
call_2660 = func_2659_call()
output = call_2660
func_2661 = relay.Function([], output)
mutated_mod['func_2661'] = func_2661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2659_call = mod.get_global_var('func_2659')
func_2661_call = mutated_mod.get_global_var('func_2661')
call_2682 = relay.TupleGetItem(func_2659_call(), 0)
call_2683 = relay.TupleGetItem(func_2661_call(), 0)
output = call_2682
output2 = call_2683
func_2702 = relay.Function([], output)
mod['func_2702'] = func_2702
mod = relay.transform.InferType()(mod)
output = func_2702()
func_2703 = relay.Function([], output)
mutated_mod['func_2703'] = func_2703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_2739 = relay.TupleGetItem(func_1315_call(), 0)
call_2740 = relay.TupleGetItem(func_1317_call(), 0)
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_2747 = func_1158_call()
call_2748 = func_1158_call()
output = relay.Tuple([call_2739,call_2747,])
output2 = relay.Tuple([call_2740,call_2748,])
func_2768 = relay.Function([], output)
mod['func_2768'] = func_2768
mod = relay.transform.InferType()(mod)
output = func_2768()
func_2769 = relay.Function([], output)
mutated_mod['func_2769'] = func_2769
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2799 = relay.const([[[-6,-3,-3,8,6,10,3,-2,3,-9,-9,-1,-6],[8,-3,5,-1,10,7,1,-5,-5,-5,7,4,6],[2,10,8,-2,-6,-2,5,-2,-1,-8,-2,-7,3],[6,-2,3,-2,2,3,-2,-10,8,8,10,3,-8],[-2,-3,-8,4,-5,-4,10,-6,-9,-3,-3,-4,3],[10,3,-10,-4,-2,3,-4,3,-5,3,7,10,-1],[-3,3,1,9,-1,3,-1,8,10,-2,10,-5,9],[-5,4,-1,2,-4,-7,-9,1,4,6,7,3,-1],[7,8,-10,2,-8,4,6,5,10,-2,7,-4,-7],[10,-10,-5,-9,-10,5,-4,6,-4,-5,-8,4,-5],[-5,3,9,3,6,-6,-10,-3,-2,-7,6,-3,-10],[-3,10,-5,-6,10,-4,9,-1,-5,3,8,-9,-4],[-6,-4,-7,-3,5,-5,-8,10,-7,4,-4,-1,-10],[-10,3,2,10,-10,-2,-5,2,-2,4,4,9,-1],[8,-9,2,7,-3,5,-6,-10,9,-7,-7,1,1],[5,5,2,-10,4,-10,7,2,7,-8,-10,4,8]],[[-8,-7,4,8,1,-5,-3,-3,1,-6,-4,5,-10],[9,-2,-9,5,7,9,-3,7,1,8,-3,-6,4],[-10,3,1,7,-10,4,-4,7,10,4,-7,-7,1],[-3,-7,-8,-5,-8,-5,-2,1,10,-10,-1,-6,-6],[-1,7,-3,10,9,-6,1,3,-10,10,-4,9,7],[2,4,-8,5,7,-6,-7,-7,1,8,3,-10,1],[3,-6,7,-6,10,-6,-9,-10,-9,2,-1,-3,7],[-8,1,9,-9,-6,4,9,-4,-6,5,-10,2,-2],[2,-3,3,6,-9,8,9,-6,4,7,-8,2,9],[-2,3,4,-9,-6,8,-6,6,-7,-8,10,-6,-3],[-7,10,7,7,-5,-5,9,9,-5,2,-1,-8,2],[2,-2,4,1,7,7,-8,-6,7,6,1,-2,-3],[-4,3,-7,-3,1,-10,3,-10,1,3,1,-1,7],[-8,-4,2,-10,-3,-10,-7,6,-3,7,1,9,5],[3,9,-9,7,-6,3,-3,-4,-5,-4,-10,-9,-8],[5,4,7,8,-7,3,-2,4,6,2,-10,2,-7]],[[1,-9,8,-6,6,2,-1,4,-5,-2,2,6,-9],[2,-2,-6,-8,-2,1,-1,-5,-4,1,10,-4,5],[-2,1,-1,7,-3,6,9,8,-10,-8,1,1,10],[6,-4,8,-5,-1,4,-10,10,10,6,9,6,-10],[1,-9,-3,-3,-7,4,1,-8,3,4,4,3,4],[7,-1,-9,10,-1,2,-3,6,2,-5,4,6,1],[4,1,6,-7,7,-9,-3,-2,-4,-5,4,-10,8],[5,2,6,-2,3,5,6,6,-10,8,4,-9,-4],[6,10,-8,8,2,5,10,-3,9,-6,-5,-6,8],[-6,-10,-8,2,10,2,9,1,8,-3,-6,-10,-1],[-7,-9,6,-2,4,3,-7,-8,-3,4,3,5,5],[-2,4,-2,-8,-7,-4,1,10,-6,8,-7,10,-5],[7,1,-3,-1,-4,-7,-3,9,5,7,-5,-2,6],[-4,-5,3,10,6,-7,-10,9,7,2,-1,-7,2],[-1,5,-8,-8,-9,-6,5,2,-10,-6,10,1,9],[-10,-10,10,-9,-1,-5,1,-9,5,-9,-7,7,-8]],[[-7,10,-2,-4,-3,6,-1,-10,-5,2,-7,8,-2],[-7,-8,-8,7,-3,-6,-1,-3,-2,3,3,-2,10],[10,9,2,-2,2,-7,6,8,-1,3,-6,-10,-7],[-5,-6,2,6,7,-7,10,9,-10,7,8,-9,-2],[6,-3,5,-5,6,6,-7,10,1,5,7,-6,-5],[4,5,-6,8,-7,-9,3,-8,-5,-1,10,5,4],[3,6,-4,10,6,2,5,-8,-2,10,-9,6,10],[-4,3,4,-5,2,3,-9,-7,-5,-2,9,-4,-7],[-3,-3,-9,5,4,-6,4,-10,-1,5,4,2,-1],[-2,-1,-7,2,-5,-6,4,2,3,-9,2,-4,8],[5,5,-3,10,-8,8,7,-2,6,5,8,-5,-2],[7,-3,5,-6,-3,-7,-5,-10,-6,8,9,4,5],[1,8,-8,9,-1,9,-5,8,-7,-9,-8,1,-3],[-2,-4,10,9,-9,3,8,4,-1,2,-1,2,4],[-4,-6,5,5,-6,-5,3,10,1,1,-7,-4,-2],[6,6,-6,6,9,-1,-9,9,2,7,9,-1,-3]],[[3,-5,-2,-10,2,-9,7,10,-2,5,-2,-5,-8],[-6,5,7,-9,-2,7,1,6,-8,10,1,6,5],[-10,8,3,8,5,5,-10,-9,8,6,2,7,3],[-5,-1,-6,9,10,10,-1,5,-1,2,2,1,-4],[-4,-4,8,-6,10,-1,-8,2,-10,2,-8,10,2],[9,-10,8,-3,-10,4,1,8,2,4,-3,-8,10],[8,5,10,5,9,5,-6,5,9,-3,-10,4,-10],[10,1,-3,8,1,5,9,1,-8,-8,-6,-10,5],[-5,-4,7,-2,-2,9,6,1,8,-5,-5,-6,5],[2,-3,3,-8,-3,-1,-3,-2,6,-2,7,-8,-9],[-3,-7,-6,-2,-6,7,4,-10,4,7,-8,2,-9],[-2,-1,-1,5,-5,-7,-10,-3,-8,6,1,3,-6],[10,-3,-10,7,5,8,-8,-10,1,7,-8,1,4],[6,10,10,-1,-1,9,2,8,3,6,-10,-5,1],[1,-7,-5,-4,-4,-7,9,-6,7,-2,2,10,9],[5,6,-7,-1,4,9,3,2,8,7,8,6,1]],[[-7,7,3,-2,-9,6,5,-6,-5,8,8,-9,-4],[10,-8,9,4,-1,-8,-3,-4,-7,-8,3,-1,-3],[9,-3,-8,4,-6,1,-8,4,-5,-5,8,8,-2],[-1,4,-1,5,-7,-8,9,3,-1,-2,9,6,8],[5,-1,-9,-9,8,7,3,-4,-2,-5,3,-7,3],[-4,-1,4,-8,-2,-9,3,10,-9,-1,-6,-6,-9],[-6,-3,4,7,-8,9,8,-7,2,-2,-8,-7,-4],[6,-3,8,-1,8,6,9,8,2,-9,1,-8,6],[-6,9,-6,-9,-7,-8,-5,4,-4,7,-2,8,-7],[5,-3,-5,3,-6,-6,10,1,-4,4,10,-4,10],[6,-9,8,-2,6,8,9,10,1,3,-8,10,6],[10,7,-5,-9,-7,2,-7,-7,10,3,3,10,7],[2,9,-7,9,-2,-8,1,-7,-7,1,-1,9,-3],[-7,-10,-2,-2,-2,2,5,-6,-5,10,-9,-8,10],[3,5,-4,8,7,-6,-1,-7,10,6,-3,-4,-5],[-10,5,-6,9,-2,-4,-7,-10,-9,3,-1,6,-2]],[[10,-3,-1,2,3,4,-9,-9,9,-5,10,8,-10],[8,-10,-6,-4,-7,-2,-3,-9,10,-5,5,4,-3],[-4,8,3,1,-4,-6,-5,-5,4,-5,7,2,-6],[-8,-7,-7,-5,6,-10,-1,-3,7,10,7,2,-8],[9,10,9,8,-8,-8,9,-1,2,-5,9,-4,-4],[4,7,2,3,3,-10,9,-3,1,2,1,5,2],[-8,2,9,7,-7,-2,-2,2,6,-10,-10,-1,6],[-8,-9,-5,-7,8,-3,2,5,2,-10,7,-8,3],[1,-10,-9,8,-1,5,-9,5,-10,-4,2,-2,2],[6,-8,6,6,-8,6,-3,6,4,2,7,-6,-9],[-7,-1,-10,-9,-10,10,2,-1,2,7,1,-3,-3],[-7,3,7,4,-1,9,-3,-6,2,-8,8,6,-8],[-9,10,-3,-8,2,6,-7,10,-6,2,-3,10,1],[1,-3,4,2,-1,10,1,9,8,2,-2,1,10],[2,7,-6,-1,-9,-1,9,-8,-5,5,-4,-2,10],[-7,-1,7,5,-7,2,1,4,-6,6,-4,-1,-7]],[[-1,-3,2,-4,-7,6,-2,-4,-4,-10,9,-1,-8],[-7,5,5,-2,9,-8,-7,-1,-8,10,9,-7,10],[5,-2,-8,3,3,-9,6,-1,8,-1,2,2,-1],[6,2,-3,-7,9,4,-9,9,3,4,2,-1,1],[-2,7,-5,-3,-1,3,3,-3,1,-5,-10,6,4],[5,2,-1,2,10,-1,4,9,-1,-9,-1,-8,1],[-7,-1,-8,6,-4,-4,5,4,7,9,5,-2,4],[-5,10,-10,6,9,8,1,4,-8,1,6,-2,-8],[7,-3,3,-5,5,-1,-7,-4,8,6,-3,1,-8],[6,4,-9,3,-3,-10,-1,-4,-6,5,-5,-5,4],[-7,4,4,7,3,2,-8,4,5,-4,8,-1,2],[-7,-7,5,-8,1,-10,-3,-6,10,-9,-3,10,5],[-9,-2,-10,-8,-1,-3,3,-2,-2,-5,-9,-2,9],[-3,5,6,4,-5,-8,5,7,10,-2,4,-9,-4],[-3,-7,4,-3,9,4,-9,2,-1,9,-3,-7,-5],[-2,-9,-3,3,-9,3,7,-1,-7,-10,-10,-4,-9]],[[9,-5,-7,7,1,2,-1,4,-1,5,-2,2,3],[-4,-10,7,1,4,-7,5,4,-6,8,-8,-1,-1],[-9,-6,5,-9,-5,6,8,-5,2,5,-9,10,10],[-4,-3,5,-8,-4,5,1,10,5,7,3,1,-7],[8,8,7,1,7,-2,9,1,9,-3,9,-7,9],[8,-5,-2,4,2,-2,-1,-1,7,3,3,7,-1],[5,5,-7,5,9,6,9,-5,5,1,3,5,5],[-7,5,1,7,5,8,-5,-9,-2,-3,9,-7,1],[10,5,5,8,-4,-1,6,5,9,-2,-3,9,3],[1,10,-9,9,6,8,5,4,2,-5,5,-7,2],[-3,-5,9,-4,7,1,-9,-1,10,8,-3,5,9],[9,7,7,2,-4,-7,2,-4,-1,10,10,5,4],[-2,5,-9,7,-6,5,6,1,-10,7,-5,-8,8],[5,-8,3,-7,1,-3,-1,-5,-6,-6,2,9,-3],[-8,9,9,-3,-4,6,5,7,-8,-6,7,-1,7],[10,-7,-10,3,2,5,8,-4,-1,4,6,10,-4]],[[-1,9,-2,-4,3,-3,5,-8,-5,-10,-1,-7,-10],[-6,6,-7,-8,-7,-7,-9,-4,9,-2,-10,3,5],[2,8,6,4,7,10,-8,-6,-9,9,7,-5,-5],[3,6,10,9,-1,4,-8,-7,-6,7,-3,-5,2],[-8,-1,1,-1,-4,-4,-10,10,8,-7,-8,1,-5],[4,5,-3,2,-8,-10,7,-1,-6,5,5,4,8],[4,-9,-4,-8,8,5,-5,-10,-3,8,-9,-3,2],[10,9,-10,-9,-2,2,3,-3,-10,3,-3,9,8],[-8,4,10,-6,2,-4,6,6,-7,-8,7,-9,9],[7,-5,-8,8,3,-8,9,-4,2,8,-8,7,5],[5,6,-6,-2,10,2,-5,-9,3,-2,-10,10,4],[-3,5,9,-10,6,10,6,9,9,4,-5,-6,7],[5,4,-5,-2,-4,2,6,1,5,5,5,6,-3],[-8,1,-3,-3,6,3,-8,-7,-3,6,8,-1,-5],[-6,-8,5,-8,-3,3,-9,2,6,-8,-10,-5,-5],[10,-5,-4,8,-2,10,-9,10,-9,-10,-10,2,-1]]], dtype = "int8")#candidate|2799|(10, 16, 13)|const|int8
const_2800 = relay.const([[[6,7,2,6,9,6,-8,-2,-6,7,-4,8,3],[-10,6,4,-7,-3,-2,-7,-9,-3,-1,6,-9,-7],[-8,-10,-3,-5,-4,4,-7,10,-8,-2,-2,-5,-8],[-10,-6,2,4,-6,2,-7,-10,10,9,-1,-9,-5],[-6,3,3,-2,2,4,-8,4,-4,8,3,-3,10],[-9,-7,-1,5,8,7,7,-6,5,1,-3,10,1],[3,-6,-10,-3,7,9,-6,-2,-6,2,7,-5,-7],[-5,4,-2,10,10,-3,4,-5,-4,9,-5,4,-7],[5,1,-2,2,-10,1,-2,-9,-3,7,-7,2,6],[1,5,10,1,5,-8,7,1,8,-8,10,-2,-1],[7,-5,1,4,-5,7,8,7,-8,3,-2,-7,-10],[4,-4,-2,-8,-6,2,-4,-6,5,2,-9,-8,-4],[-5,-3,-5,-8,-1,2,7,8,-9,8,-3,9,-5],[-8,1,3,10,-3,-2,6,1,-5,-9,8,5,-5],[-1,2,5,10,1,-3,9,7,-5,9,2,-4,6],[9,10,-8,10,-8,1,10,1,-2,-9,4,-2,2]],[[8,5,8,5,-7,10,6,-10,-3,-10,6,-5,-1],[-9,-3,-8,-6,4,6,3,-4,-9,-8,9,1,-8],[-1,4,-5,6,-3,-10,7,5,5,7,9,-2,-6],[2,10,6,4,-3,2,-8,4,-6,-2,-6,-6,-6],[8,-4,1,-2,6,10,8,1,-5,-5,-5,-1,1],[-1,10,-2,7,1,-1,-9,-10,9,4,-8,-6,-9],[-5,7,-10,10,8,-8,-7,-5,3,7,2,-3,-5],[7,-5,2,9,-5,8,8,-9,-2,-5,-7,10,-2],[-10,-1,8,-6,-4,-3,8,1,5,-5,-6,-3,4],[9,-3,-8,-8,10,7,-10,-4,6,-3,1,6,10],[-1,-3,2,10,-7,-2,7,2,8,9,-5,6,-1],[5,3,9,10,-10,8,-10,10,9,-4,3,2,-5],[-6,4,10,-5,5,-6,8,7,-7,10,-9,-5,9],[-6,-2,8,6,5,9,6,4,9,9,1,-3,3],[9,6,8,6,6,7,-6,-5,-10,9,4,-9,3],[9,10,-9,-10,4,-8,-7,6,4,6,-7,2,-2]],[[5,1,1,6,-2,10,-10,1,7,-2,-3,7,8],[6,1,8,9,-7,-9,-4,8,2,-10,-5,10,4],[-6,1,-6,-3,4,4,-1,8,4,9,-7,9,4],[6,3,-7,8,2,4,-10,9,6,7,-9,5,2],[-9,-9,6,6,5,10,-1,9,10,-8,5,8,-7],[2,5,3,-6,-6,2,-6,5,-10,10,4,1,8],[5,10,1,3,8,1,-2,6,10,9,-8,4,10],[-8,1,9,-10,-9,2,8,-7,2,5,-3,2,2],[3,-7,-5,6,-1,-5,5,-3,-3,-7,-9,2,-8],[8,-9,9,-8,6,1,3,-10,-2,-10,2,-5,8],[9,-9,6,-9,10,8,-6,3,-8,-9,5,-3,-8],[10,5,9,-9,3,6,10,-1,3,-5,-3,3,1],[-7,2,-1,-1,2,2,-8,7,-10,1,-7,7,3],[5,5,-3,-2,6,-9,2,8,-3,1,-2,10,2],[-10,-9,10,8,-2,6,7,-5,-10,8,-1,4,-4],[4,-10,1,-5,10,6,9,-8,-10,-8,1,-4,-3]],[[3,-8,4,3,10,1,-4,-1,10,8,6,4,5],[-1,8,3,-3,-10,-6,-10,-5,-4,-3,-1,6,2],[-5,7,4,8,-1,-3,3,1,4,-6,2,10,-4],[8,-10,3,9,-7,7,2,4,4,9,-7,-7,-4],[2,6,-6,-7,7,4,-1,8,4,-9,5,8,-1],[9,-7,-8,-10,6,-1,2,4,-3,-5,-4,-10,9],[-6,-1,1,6,-6,10,9,10,8,9,10,-6,2],[5,-3,-9,-1,-6,2,-4,-6,-2,8,-6,-8,8],[-6,2,-4,-8,-3,-6,9,1,-3,10,9,4,-6],[6,7,1,-10,-9,-3,-3,-6,-1,10,6,6,3],[-8,5,-9,-9,4,-8,-6,-1,6,5,1,-6,-9],[4,-6,3,4,-1,6,9,-3,-6,-4,8,-9,1],[-1,2,-9,7,3,-1,-5,-2,-4,5,-6,6,8],[-1,9,10,10,9,-10,7,6,2,2,-6,-3,-4],[4,10,-6,-10,4,4,-1,3,1,7,-10,3,-1],[6,2,4,2,7,-6,2,8,-5,-2,2,-10,3]],[[6,-10,4,4,8,1,3,-9,-6,10,-10,3,-5],[5,4,5,-3,10,3,-5,-1,2,-6,-4,5,-6],[-10,4,6,1,7,-1,-1,2,-2,-4,3,6,10],[-2,5,-7,-7,-8,-2,2,-5,2,1,-9,-10,7],[-10,5,-4,-4,-4,-1,1,3,-10,-5,-5,10,-8],[10,-1,-3,9,-2,4,-1,-6,1,-4,3,9,-7],[-2,2,-6,-9,-1,-10,10,-5,-8,5,9,-1,8],[4,-9,-2,2,2,8,6,4,2,-10,8,-3,9],[-9,-4,-2,4,1,-2,-2,10,-6,1,-4,3,10],[-9,-6,-3,-9,-2,5,-2,-4,1,9,-9,-10,4],[-3,-8,-10,-4,-7,3,-3,-7,-3,-7,5,4,-1],[-8,3,-5,-1,-9,-1,-9,-1,-4,-7,5,4,-6],[1,-3,-3,3,5,2,10,6,6,2,8,-10,-9],[-7,-8,-1,5,1,-7,5,2,-7,-1,-6,10,2],[5,7,10,6,6,-9,1,10,4,-9,5,9,-3],[-4,-4,-3,2,-3,-3,-10,-6,2,7,-7,-7,7]],[[6,-9,2,2,-10,5,4,-4,-6,-7,-1,2,-1],[1,7,2,-8,2,4,8,-8,8,8,8,6,8],[4,-7,9,3,-8,1,5,7,-5,5,-7,-5,5],[-1,-1,-8,9,2,-5,-5,-9,10,8,-1,-2,8],[9,6,-9,5,-6,-6,10,2,-2,-10,-1,-3,8],[6,2,1,7,5,4,5,5,-4,9,10,-1,2],[-1,-3,-9,-2,2,2,1,-3,-7,7,-2,-7,-7],[4,-7,1,3,10,-4,-5,-8,-4,-4,5,9,-3],[3,4,9,7,6,6,4,3,10,4,3,-6,7],[10,5,7,-3,7,10,-8,4,8,-3,5,7,3],[7,8,-3,10,-2,-6,-7,-9,-9,-5,-2,-8,-4],[-10,10,2,5,1,-8,5,-7,5,6,-3,10,5],[-3,-10,-7,9,-6,-5,2,-10,-7,10,-8,10,-8],[8,-2,-3,5,3,4,1,4,-2,4,-7,-8,6],[2,9,-8,-10,-9,5,-6,8,-10,-1,-5,-3,6],[-1,-6,2,3,-10,8,1,-4,-3,-7,-2,10,-3]],[[8,-5,7,1,-4,-3,-4,-10,-4,-10,-9,7,-6],[5,2,-10,-4,-7,2,6,8,-3,-4,-5,-5,-5],[9,-2,-2,-8,3,-7,6,1,3,-2,-7,-3,9],[9,4,8,-7,6,-7,6,-6,-8,8,-8,7,1],[-8,-4,4,-1,-7,-10,1,-6,2,-8,-4,1,-6],[-2,-3,-8,9,8,-7,-10,9,-1,-9,7,-8,2],[-1,-5,-3,9,-1,-7,-9,2,3,2,-5,2,-9],[-5,-4,-8,-1,-2,-9,-10,-10,-9,-1,6,-6,-8],[1,-4,9,-5,8,7,-6,4,2,4,-9,2,5],[-6,6,1,-1,6,-4,-2,6,-2,8,6,9,3],[-2,-10,3,-7,9,4,10,-2,5,-9,-3,3,-10],[-3,-10,9,-9,10,-4,-1,-4,-4,9,1,10,-4],[4,4,6,-2,-2,-10,-9,-5,7,7,4,-8,-9],[-6,-10,2,8,9,-3,-2,-2,-8,-3,4,-2,3],[-6,9,-9,-6,7,-4,-4,-3,-4,2,9,4,4],[4,-3,-3,8,-4,-9,6,8,3,3,-1,-2,2]],[[4,3,-6,-7,6,7,2,-10,2,8,-8,-4,-6],[-9,-9,-10,-6,2,-10,10,6,9,-1,-8,-5,-4],[7,5,2,-4,4,3,-6,2,5,3,1,9,1],[4,-6,-10,-6,-8,8,9,-5,1,-9,-9,-5,6],[-4,-8,6,10,8,-3,-2,5,3,1,-6,9,-5],[2,1,-8,4,-10,7,10,-8,2,-6,-2,-10,-6],[7,-4,6,-6,3,-3,-9,-7,1,-4,4,8,2],[6,-5,8,10,8,-7,2,-8,9,8,-4,7,5],[-5,-9,5,6,-10,5,8,5,-6,7,3,-1,-4],[-7,4,-10,7,3,5,-5,6,4,-1,-9,-7,1],[2,9,9,-7,-10,-2,-6,-2,-6,7,-4,6,-1],[4,-3,8,-9,1,4,10,5,-2,5,-2,-8,-5],[-10,-2,7,-9,-3,4,-3,-9,-3,3,-9,8,9],[-6,-9,-1,-1,-1,1,9,-6,-3,9,10,-8,-1],[7,2,-1,3,9,-10,9,1,1,3,4,-10,7],[-7,10,6,9,-3,6,2,-4,-10,-4,-4,-2,4]],[[-2,-8,-2,-7,-5,2,-9,-6,-1,-2,9,-7,-4],[7,7,-9,6,7,4,-2,7,5,-7,2,-7,4],[-8,-10,3,8,1,-6,-7,-4,-8,-10,-10,-2,-5],[-8,1,-2,-4,-3,10,-4,9,7,-6,-6,9,1],[2,10,-8,-2,10,-1,-4,1,6,-6,-9,2,6],[-10,-6,6,-2,5,-3,-10,1,-9,-6,3,-8,-8],[2,2,9,-2,-1,-3,3,7,-7,10,8,6,-2],[7,-8,8,-6,7,-10,-10,-7,8,-3,5,1,1],[-9,-5,-8,2,9,7,10,-1,-2,3,-6,-9,-5],[-10,-2,-6,-9,-3,-5,-2,-4,-8,-4,-5,9,-8],[-9,5,-3,-10,7,-7,9,3,2,-8,6,-1,4],[9,-3,10,1,-8,10,9,-6,-6,-6,-10,-8,-7],[4,-5,3,6,10,-2,3,7,-7,-3,-5,-1,9],[9,10,10,-1,6,10,4,2,-2,3,10,-6,-5],[1,-9,-7,-6,2,5,-4,1,-5,-5,-10,-1,4],[5,4,8,5,-6,6,3,9,-5,-9,6,-3,2]],[[-5,4,-4,-9,8,4,5,-10,-1,2,9,2,6],[-5,-10,-10,-9,4,5,4,1,9,-7,10,9,9],[-9,-9,10,2,8,4,-6,3,-4,-7,4,-4,4],[-10,-5,-5,3,-7,-6,2,1,-5,8,10,-2,8],[10,6,7,-9,8,-5,7,-3,-3,1,5,-2,-2],[5,-7,2,7,5,6,6,-9,-5,5,1,5,1],[-8,10,-3,-7,-10,-10,-7,-2,-9,8,-1,4,3],[1,7,-7,-5,6,6,10,2,-4,7,3,8,3],[8,-3,-5,10,-8,-9,-8,1,-8,-9,-3,9,-2],[-5,8,8,-7,7,-7,4,-6,10,-7,7,4,-8],[-2,6,-1,-4,2,5,5,1,-10,9,9,-1,10],[4,5,-2,8,1,-10,-8,-9,4,-4,-7,-2,-2],[6,7,-1,-2,2,-5,2,10,3,6,1,-5,7],[-3,10,9,-9,6,9,8,1,-4,7,9,-3,1],[7,3,2,10,-9,10,7,-8,3,2,7,-9,1],[6,2,-8,-7,-10,4,9,-1,3,-4,-8,7,10]]], dtype = "int8")#candidate|2800|(10, 16, 13)|const|int8
bop_2801 = relay.maximum(const_2799.astype('int8'), relay.reshape(const_2800.astype('int8'), relay.shape_of(const_2799))) # shape=(10, 16, 13)
output = relay.Tuple([bop_2801,])
output2 = relay.Tuple([bop_2801,])
func_2804 = relay.Function([], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mutated_mod.get_global_var('func_2804')
call_2805 = func_2804_call()
output = call_2805
func_2806 = relay.Function([], output)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2843 = relay.var("var_2843", dtype = "float64", shape = (14, 16, 15))#candidate|2843|(14, 16, 15)|var|float64
var_2844 = relay.var("var_2844", dtype = "float64", shape = (14, 16, 15))#candidate|2844|(14, 16, 15)|var|float64
bop_2845 = relay.power(var_2843.astype('float64'), relay.reshape(var_2844.astype('float64'), relay.shape_of(var_2843))) # shape=(14, 16, 15)
const_2855 = relay.const([[[-2.507781,-7.213522,3.433903,-4.111178,0.880325,-4.969196,3.757187,9.351811,-7.606176,-8.664317,-3.873543,0.230501,-4.230235,-9.631171,9.694432],[8.847947,9.984843,1.084687,5.337979,4.258796,2.061523,5.322601,-3.006394,-8.727626,1.029291,-8.557388,-9.507840,8.169809,-0.859402,-1.881017],[4.154927,9.726382,-8.154623,-1.957922,-0.226596,-0.508250,0.369871,-1.579850,-7.389661,-9.020640,-9.765214,4.684017,-0.872601,2.290864,-9.253218],[-3.917270,-4.826083,-4.802899,-8.895417,-5.756686,-6.458549,4.021293,-3.331362,2.685240,-9.475075,0.045177,-7.784165,7.909303,8.355340,1.350245],[-8.907752,-7.907756,3.000912,6.226210,8.470123,-8.234934,-7.690216,7.378253,-6.587354,1.598519,-5.609756,0.985371,3.209422,7.401527,6.518396],[-6.261172,-4.819034,-9.574184,-3.715463,-1.661619,-1.481437,9.552412,-1.654151,0.676898,-9.060403,7.601422,1.560254,1.424590,3.796715,-7.801799],[-7.391666,-0.376366,5.419873,-7.563341,1.524278,6.903405,-7.994720,-8.615578,4.144493,4.562369,3.316277,-7.072961,4.893196,0.832510,-2.429117],[9.593382,0.760940,8.450578,9.933345,-5.737807,-7.006727,-7.150433,-0.047312,5.349588,-5.883915,9.955942,1.467951,0.115801,-3.208049,2.165793],[-1.933058,4.165007,2.420800,-5.865549,-3.516431,9.745968,-5.046022,1.874619,-0.269704,-0.349409,9.292816,-8.707663,9.859298,8.308864,0.712375],[-2.235134,-5.408445,5.965480,-8.779886,-2.744495,-8.186505,-5.214680,7.929598,8.766788,-4.616507,-8.445186,-6.338189,6.102270,-8.228825,6.605595],[1.954131,5.780982,1.665579,3.176693,-1.581543,-5.086911,2.717284,6.068580,5.368552,8.466493,-1.666257,5.556078,-5.626463,-6.273813,-7.104943],[-7.213263,6.893376,7.957560,-3.136734,9.919170,-7.863558,8.262606,-8.305749,-1.586103,-2.345928,9.058062,2.143428,8.749194,1.283294,2.616097],[7.050648,-0.560837,2.118615,6.072143,-5.380427,2.495606,-2.537746,2.891453,3.615476,-2.544493,2.885221,7.392489,0.045403,-3.165882,-5.076412],[-7.351015,-7.857341,7.740725,-6.501498,2.218191,3.712994,6.490165,-3.455144,-4.473432,-9.991890,3.862256,-7.564473,-2.846229,9.821655,0.147028],[-4.501092,4.279559,-3.164225,5.313129,9.119011,3.551836,5.338773,-0.462560,2.187582,1.950084,-7.040599,4.973442,8.881888,-9.996462,2.538552],[9.200921,3.997714,-5.434061,4.212063,-5.657468,-3.817326,7.971770,-5.401798,2.014770,-6.520825,4.760921,6.755606,5.474607,-6.308488,4.596271]],[[5.027997,-9.815071,6.211972,-0.040834,-5.591470,7.856782,4.000868,-2.068473,3.643245,3.306359,-1.941214,-3.594128,-2.176249,6.376356,0.857505],[-3.392440,4.025754,6.174373,4.800460,7.403808,-6.127549,-4.398892,4.528257,8.528108,5.237411,-7.249798,6.178210,3.015018,-9.231149,-8.281562],[-0.959032,7.613404,3.939155,-1.576315,-1.971311,-8.984101,2.132422,-6.266673,7.567587,1.476889,6.210275,8.687933,-4.921661,-1.135586,5.323072],[-1.930265,7.252713,1.746550,-7.520061,5.322012,0.950636,9.034565,-8.703250,1.189493,7.590051,-2.730205,-1.370060,5.415157,7.010005,0.815599],[-8.996220,-3.713717,9.191934,1.043663,4.181069,7.488609,-7.456847,7.826535,-8.239000,0.762807,7.341093,-7.060346,2.013440,-0.066759,6.436626],[3.754501,2.006778,4.391479,2.458430,-2.608498,2.193280,9.464192,-1.282264,5.667340,2.119605,-1.571561,-0.251522,-3.563756,-3.443083,-9.589061],[-3.453079,-7.305774,5.219572,7.895664,-3.183537,-0.142131,9.980318,6.889167,-5.802484,-8.220571,8.107314,0.967902,-1.505141,0.543947,-0.622831],[-7.194731,5.722404,8.107831,1.475864,4.291468,-9.434240,4.367220,9.895142,-9.643582,6.571839,6.194434,0.438151,2.800647,-7.767196,3.965396],[-9.774476,-0.227037,-6.412973,5.052188,-0.088426,5.686713,-9.675716,-2.670395,3.334745,1.632580,3.105044,-0.136729,9.016658,-7.083628,-7.784536],[4.518314,-4.251958,2.758596,2.205310,-3.792217,7.685383,-3.332083,-9.570283,-4.291432,5.761374,6.633787,-6.345866,-4.955860,7.270133,-9.803349],[-3.368314,-1.841424,9.542183,1.889090,-9.545282,-1.554201,2.032092,2.803196,8.970896,3.202827,-1.132267,1.649449,-2.311086,-2.568656,5.824124],[-9.795327,-9.618192,-5.109414,-2.808966,-6.831588,1.831091,-8.590266,-6.605778,-0.653953,5.672991,-5.755149,-4.559334,8.952649,2.712084,-3.112129],[-3.636496,-0.969170,-7.287441,-8.868849,-7.479489,1.056925,4.132964,-6.265723,-8.368478,3.149558,4.260526,3.641207,7.303576,-3.691308,-7.753960],[0.220811,4.258741,-4.527831,-8.236380,-7.854299,4.698804,-9.187173,-1.430611,-5.700891,-3.612830,-2.390755,-4.708855,0.404294,-7.892701,-3.387604],[2.278506,4.557660,-1.588024,-3.163094,-1.807850,5.690167,-8.767971,-8.170111,2.970260,8.111910,-7.389128,9.285120,7.835221,4.176486,-5.909514],[4.843756,4.408573,1.651416,-1.570916,6.321702,-8.527530,-3.269660,-4.610984,1.497881,-6.497303,5.826917,9.001965,1.613529,-2.371760,-9.346588]],[[-4.410571,-0.413369,4.005890,1.401529,8.020979,-3.159619,-1.503417,-4.736947,-2.713098,-0.116693,8.776202,0.006351,-3.445869,1.253673,6.338153],[2.115579,5.910717,-0.066514,7.384967,-3.269725,-4.975574,8.133523,-1.143520,8.715730,6.710409,4.579641,-3.663139,9.875393,9.616041,0.801384],[3.040395,-5.317139,-3.066126,7.751361,9.534532,-6.811417,-3.199985,-9.270203,8.442085,5.345476,1.363045,5.242705,-4.343284,-5.444875,-0.138990],[-9.222627,-8.132257,-3.390889,8.524624,8.950566,-4.944390,-7.861428,0.796944,6.357946,3.187563,1.930709,7.642336,-8.155254,-2.777739,0.228782],[-0.071620,-0.531764,-1.209389,9.598373,-5.661833,-2.845262,-2.553903,2.642866,1.386236,-2.812597,-0.912813,9.195997,7.162501,1.439400,-6.178374],[-8.838521,-2.663813,-8.311894,4.418617,2.654349,-2.504428,-6.311182,-4.040851,-9.319911,-8.731017,-9.915638,-1.299912,-7.421204,7.014322,0.763538],[-1.346361,-6.562070,-0.958503,-0.121928,-8.292272,9.873317,7.077076,9.281561,-2.832268,-0.653314,7.954675,5.219139,-4.364393,5.637080,6.964566],[-6.497900,-1.354426,-1.922907,2.852939,-2.300593,-4.647147,-8.787531,-5.830911,-1.358196,5.273365,3.774532,7.100654,-6.735070,6.495322,-9.566866],[6.888360,-2.437095,4.962647,-8.340194,2.096167,2.843754,9.284406,-5.670220,0.818588,-6.756081,0.516751,7.632813,-5.875992,-5.480610,9.998357],[-6.815243,2.843365,-5.932406,6.452896,3.059565,-4.094741,2.206543,-9.564876,3.876945,-5.813597,-1.833351,1.281148,-6.859974,-4.641838,8.157020],[9.273533,-0.526545,8.433777,-9.522199,0.626240,8.885218,-7.978238,6.694449,-4.187717,-3.289277,-7.539460,-9.052448,4.364320,7.904673,-5.298288],[8.782660,-7.142119,-9.139804,5.862350,5.601301,7.147383,-8.512068,7.360634,-7.219430,-9.347687,-4.987792,-9.685555,-3.074821,4.417873,5.330557],[0.676029,-3.275213,-0.180738,6.598909,2.785500,-4.990534,5.131486,-2.227922,0.225218,5.820136,1.071311,-0.807997,-2.693672,8.347881,0.241683],[1.817546,-5.243739,-8.767351,0.924716,-5.849202,-9.591244,1.081182,4.769041,-7.451708,-5.870172,-3.596454,4.792421,1.441800,9.108662,-1.598348],[0.566150,5.131244,6.112540,-0.363472,8.156304,0.692405,-4.604500,-3.495681,-3.498233,-7.017914,-5.181802,-5.974508,9.449996,9.117344,4.031453],[5.305635,-5.498793,-5.985753,0.246189,-7.055800,3.146413,-0.960099,-4.275459,3.150592,-3.448725,7.875571,-3.676557,-4.547075,-5.248141,-4.046227]],[[4.199948,-8.446915,1.480078,9.948846,-1.139628,4.088321,5.322128,4.979292,-6.246497,-4.208394,-2.876813,6.936282,-8.778507,-6.248324,-2.761450],[-5.266705,7.842034,4.898935,6.592407,2.037048,-6.513821,9.917679,-6.238200,2.880086,6.367063,2.872382,9.652501,-5.493389,3.820964,-3.335844],[7.112385,1.358301,-9.376129,1.330435,-6.069387,1.041427,-8.943455,-0.448582,5.230238,5.907474,-4.874785,-7.617236,-6.076091,0.270205,6.257613],[5.835081,-2.084924,5.373928,1.685475,-4.417273,3.336223,-0.827554,-1.833274,5.814695,-9.258235,-9.476673,2.767342,-1.743012,5.740355,7.331531],[-5.993862,7.258596,-2.732876,7.318279,-7.366994,6.069795,5.348470,8.522962,-9.536385,4.892713,3.831110,0.209285,-2.903961,-8.034123,6.227788],[-8.633701,-8.965089,-2.971478,4.611455,-1.091410,7.376013,7.147626,2.617135,-7.199013,7.098266,-6.710638,8.345207,-6.350266,-3.455339,5.667345],[-6.807230,0.642634,-0.087344,6.867199,2.074346,3.208545,6.691171,3.236437,4.460571,3.347166,2.123459,0.457587,1.239886,-4.171700,7.871954],[-9.306963,4.120938,-7.965933,4.449775,2.910826,-9.615265,-0.466621,-4.216926,-2.041173,4.587958,-5.444641,-9.407215,-2.060621,8.908394,2.291383],[-7.519470,8.089838,5.059970,5.866974,6.033852,2.619935,0.913072,-7.598289,0.312220,6.056552,-3.813706,6.712405,-1.038493,-9.124387,-4.559026],[-6.536604,7.247547,-9.012576,6.896914,-4.810813,7.974491,-8.648203,1.458565,-1.271957,-7.681261,2.150766,8.804715,9.919912,-0.752540,-9.156378],[0.359395,-8.442566,-4.993105,7.625485,-5.823940,-7.436066,1.972074,4.158899,0.891784,8.778958,0.058393,-8.197525,1.046527,-5.350329,-5.901463],[-0.207697,1.176423,-7.906334,8.672355,-9.390568,6.215759,6.484692,6.637857,0.035777,-6.419992,-7.353471,-6.287408,3.011484,-9.575521,7.189049],[-7.618920,-0.603778,-3.671829,4.356223,-9.888780,-9.501992,-5.465224,-1.730723,-4.548946,9.071648,-9.265384,-2.199739,-4.290146,-9.904574,-9.987052],[7.182172,5.773041,-6.577782,7.312041,-3.938088,1.662309,9.962257,-7.421275,-6.533245,-6.106911,-3.344024,3.141856,9.564341,-0.266316,4.382426],[7.672976,5.388239,-4.312085,7.182544,9.254405,-7.664826,-5.938398,-4.722289,8.815175,2.229990,-6.447230,1.475034,-7.979270,-8.037602,-0.607220],[9.601629,-1.225274,1.282165,2.717722,-7.302183,-5.396321,4.455321,3.153689,3.538819,-6.086811,-7.478688,-3.872808,9.236951,-1.635777,3.716951]],[[2.699560,-2.945089,6.246165,-7.689969,-5.710802,2.370386,9.466163,6.222540,1.482076,-5.043179,9.473447,-8.302393,-8.773216,7.411287,9.588849],[0.856747,5.947214,1.913494,5.168685,5.493860,-4.135129,-7.278933,-4.222990,-4.241536,2.124791,7.374767,1.332045,-8.122166,9.582639,-9.554507],[8.461788,7.027991,-6.677749,6.474608,0.286535,5.166837,-8.903307,4.493826,-6.008919,-4.957643,-6.321352,-3.283617,1.992636,8.564591,-2.410992],[-8.889116,-9.905990,3.506952,-7.879459,-9.643455,5.198252,2.433927,-9.381752,-9.055769,8.279096,-0.550811,3.733224,5.043996,0.579038,8.038276],[1.553938,0.402733,-8.970319,-0.901211,-9.761247,-1.820121,-6.302571,3.175548,-0.005240,9.433403,-9.705480,-4.889711,2.722717,-5.745208,-1.474780],[-1.545369,6.427323,5.805255,-1.688687,-3.556997,2.831763,3.737093,6.807839,-5.305739,-4.628914,9.403004,5.555014,-2.464521,9.787366,7.461836],[4.598228,1.854049,-3.586298,-6.794079,-4.730747,6.905689,6.776454,-5.218983,5.685248,-6.099480,-9.561850,-2.796458,0.810584,-7.447258,6.364270],[4.638157,-8.284136,-2.566971,1.956087,9.971023,3.800506,9.322185,2.170584,4.541619,-0.814411,6.411173,2.967974,-5.671609,-4.578728,-1.230496],[1.319852,-8.839780,-8.010425,-3.269903,6.516527,-0.774618,-7.437055,5.593418,7.972555,-3.617562,7.345746,-6.187081,4.943902,0.445205,-1.280372],[9.488313,9.692651,7.114479,-9.130317,-4.772182,7.129661,6.928109,-8.611522,-6.814222,5.144117,-9.590970,-4.019604,-6.472138,1.333557,5.222907],[5.428363,2.457283,3.870413,-8.662999,-9.894530,7.085578,3.237633,0.604087,-9.468113,8.325461,-6.816785,-5.189953,9.773783,-6.507035,-4.678136],[-9.247021,3.858631,9.534834,-7.510936,-8.594730,-8.415099,-6.245022,-4.848518,8.093754,3.862490,4.977636,-8.311409,-7.355000,-0.878451,1.049938],[9.531007,-7.430690,1.794446,2.191521,5.244550,9.374019,4.184813,-8.529671,2.604242,-6.790770,-5.058092,1.301258,1.258380,-4.713270,-4.809869],[2.404386,5.710827,-7.227076,3.255677,-0.143475,-6.249347,-9.647005,-4.989788,9.597958,-9.401142,-6.976051,4.601054,-1.492578,-7.751130,-7.919431],[-2.023358,-7.278486,3.228425,-9.439398,-3.746449,-1.707918,-6.387550,-5.175539,9.359265,8.754949,-6.273135,-7.328457,3.352953,-0.394837,-4.363593],[-5.474726,-9.352331,-7.593819,-9.466829,-6.737808,-6.009865,1.756669,1.658668,7.223810,9.953158,1.197729,-9.074482,-0.300845,-1.507369,8.850766]],[[4.954336,6.042065,-3.624867,-9.160512,-9.804513,6.344741,6.273560,-6.478301,0.663793,2.874746,-3.465127,-8.768805,-6.139379,-4.300838,7.586205],[6.934372,4.330032,5.120791,6.255935,-3.916490,-5.816291,-6.792630,-5.181565,7.793016,-0.201003,7.274911,4.023944,3.927025,-7.576903,-7.483435],[-1.133864,-0.929160,-4.848155,6.220006,3.669027,0.154635,-4.752705,2.416520,-9.223234,-4.738982,6.622522,6.299567,7.237230,3.833257,-3.152817],[0.767033,4.822772,3.777137,2.321064,3.051226,-7.949543,8.884315,-2.847373,-6.314876,6.401821,1.186194,-9.778688,2.768752,-7.906818,0.696674],[-2.876971,4.126043,-7.788551,6.592703,8.962052,4.938607,5.280868,-5.010558,8.755332,9.487595,1.914302,-6.834539,3.327905,9.544321,-2.334285],[3.163318,-0.862424,-5.382270,6.415745,-7.173608,8.385781,-3.452130,-8.673373,-4.623124,0.167803,-8.753399,3.768794,-8.405978,-4.201336,-8.618829],[-3.674786,7.946707,-4.429637,-3.866221,8.499642,-7.387169,-6.323011,-6.060549,-3.153481,-5.182429,-0.364880,-5.192978,6.184210,-0.717386,9.143367],[-4.420922,-5.442088,-9.182375,-9.201924,-0.855981,9.922496,-6.182221,-7.693975,9.325396,4.491069,-7.993866,-2.332926,9.842884,-7.756985,-7.668005],[-1.758591,1.713557,-3.901643,8.661482,-9.759910,7.962101,1.376229,5.073554,-2.894331,-1.922565,8.155125,9.597956,6.881306,3.963968,-4.592749],[8.500213,1.007880,-2.782745,-3.711295,-6.961794,9.992082,9.603060,3.271183,-1.267763,9.516084,3.249549,-9.255528,-2.975505,-2.032205,3.417783],[6.905021,0.233473,2.186454,8.764819,-4.057076,1.437780,2.732729,-7.112900,8.583566,-3.163876,5.099391,8.610220,-6.985565,5.487638,-6.653402],[0.810112,-2.664591,-4.342614,-8.299516,3.945317,8.991817,1.718182,6.051041,6.546129,-5.570823,3.304713,6.543267,2.628424,5.102454,-0.994601],[1.675337,4.195199,4.225428,-4.937702,4.740939,-4.383263,-1.327619,2.029564,0.186566,-3.550446,-7.538131,4.391562,6.526696,8.215691,1.864157],[-1.285472,-6.637368,-7.328187,8.403402,9.109910,6.675560,2.572335,6.645560,4.929684,6.261846,9.558932,-0.290810,2.411583,9.749039,-6.057359],[6.846198,-1.217752,-4.724387,5.160791,3.924944,7.818594,-3.632980,-6.765043,7.425341,-6.775471,4.098133,3.890285,-8.066371,5.589118,8.649320],[-3.950072,-9.735159,-7.401546,-3.251246,-0.317346,1.507465,-9.748040,-5.603813,0.450197,-5.406310,-8.567601,3.303095,2.294603,2.808743,-2.240187]],[[-9.086122,1.065556,2.217485,-6.592960,7.001156,4.042451,-1.926048,-3.783917,-7.971746,-0.889373,9.287229,-9.479191,-9.027062,-3.287986,4.982231],[5.541107,2.360344,-9.265013,-8.467419,-3.650833,-0.044326,-5.011902,4.949871,1.465096,9.000583,1.872165,1.213106,1.819745,0.099151,1.637788],[-7.410263,2.280473,3.972392,-7.693522,-5.622020,9.336985,-6.834682,3.061944,-6.416859,8.512617,-3.758260,-9.333127,9.388730,-1.268408,5.222420],[9.234276,-2.767086,6.928021,-3.680780,9.986711,4.196792,8.867126,7.842722,5.552413,-4.347666,5.229102,6.464835,-4.914370,2.305137,-7.257593],[-1.457689,3.050208,-2.944935,-2.311741,-6.912524,3.154605,-7.043417,-5.845926,7.969408,2.613864,-0.751714,-0.029531,-5.998686,-6.532852,1.379616],[-9.017540,-1.591237,-9.795817,-8.457356,-2.561879,3.857669,-9.454316,-3.848765,3.074967,7.865364,1.377400,3.587335,3.899828,-6.367532,1.059838],[-2.152689,3.471771,7.062322,6.982906,-4.531638,0.113948,4.349370,5.231069,-6.508405,0.045701,6.549519,6.227720,4.585890,-4.136672,4.186647],[8.340618,6.997728,-4.482333,2.939740,2.673824,7.092287,0.909347,-5.789226,9.097840,6.452839,-1.062325,0.631136,1.126813,0.740308,6.678014],[0.500094,-8.357318,8.921300,-8.946189,8.466096,4.905855,-1.167769,6.366094,8.482916,5.844477,-7.315715,-9.464803,0.050148,-6.714062,0.136684],[6.624509,-0.519573,-1.867586,1.095286,-9.154389,-7.378768,5.025017,-0.512403,9.843964,6.004977,-2.211994,0.383512,-2.095347,-2.126797,7.874021],[-0.363551,4.237212,-2.444009,-2.006826,-6.391489,-0.548711,-0.783678,5.730745,1.444909,7.611188,9.002285,-9.007370,-8.882031,9.985650,2.256431],[-4.774684,-4.797366,-3.044494,1.027546,-2.727853,-7.285354,-3.672694,-0.741529,8.877252,0.559525,2.971589,3.193382,6.886067,-2.939452,-6.665261],[4.209504,8.317550,-4.397397,-1.893021,-3.637716,0.833901,-0.128213,-3.994788,7.482479,-3.821375,-3.015907,6.958333,9.533315,1.827508,-5.923628],[4.324199,-1.489544,2.244979,-7.047183,9.935724,-8.760249,4.067197,-9.917543,8.650486,-8.586466,-8.471363,8.092212,-8.565796,-3.401811,-9.943877],[8.382719,-7.679978,-3.822668,2.294117,-7.242023,-8.540817,6.315939,8.555403,6.178643,-2.656254,-2.195482,-3.595966,-7.882332,-2.221662,-0.425277],[7.080595,-9.838962,4.281166,4.474470,9.935476,2.926720,-3.923349,-0.230348,9.369746,5.118186,0.967122,-1.764067,3.015911,-5.137384,-2.358553]],[[1.605456,-2.939667,7.750827,-1.017534,-9.538214,-8.184819,4.426506,3.084035,-2.440738,3.166530,-3.956753,6.958570,-2.711350,5.014396,-2.563089],[5.066366,-1.726061,4.353142,-8.353168,-7.528678,-5.686307,-9.991485,-3.623967,9.663091,-9.158161,-2.195838,4.984590,-9.350565,-2.375328,-7.980756],[6.189041,-9.213539,9.162121,1.455871,-5.573835,4.759267,9.141720,-8.059337,6.202326,-6.745936,6.607008,-5.982213,3.201925,-0.168666,-7.715738],[-6.883982,6.523003,0.679228,5.892849,-1.409589,4.996455,-2.323479,4.505310,-6.099475,-9.756483,3.714865,7.344630,-2.506434,-1.329429,-2.540062],[1.219758,-0.915813,-4.306739,4.368495,-8.737437,2.240515,2.542495,-7.319269,-1.801085,9.607695,-2.518218,-1.897326,-4.637948,-1.061879,-8.802098],[-4.100749,4.061714,-1.817147,-4.666980,4.063918,0.185114,-3.757297,-3.708511,7.467114,5.825342,2.054810,7.975423,4.330842,-0.983056,-2.570951],[4.847210,-5.374705,2.996970,-9.238052,4.087634,0.499439,-7.896019,5.003513,-3.533507,0.828713,-9.798066,2.192281,5.887715,5.444606,-2.399984],[-9.878616,-2.512921,7.663380,6.342638,-6.307000,9.509242,3.771575,2.246097,3.764925,4.764263,-9.700667,9.055880,-6.827364,-6.010409,0.492414],[5.402491,-2.350191,-9.870680,-6.009759,5.083754,-9.842206,-2.498420,-7.676525,5.177894,6.812910,1.206077,-4.194071,-4.720610,8.432922,-1.468323],[1.433796,-2.759929,-8.994361,0.454282,-3.235413,0.733907,-2.835714,-6.827161,1.679303,-7.068234,-3.823827,-3.749605,-9.977289,1.483293,-2.965924],[-0.287138,-8.446301,0.119261,-3.392540,6.127136,-9.686373,8.192127,-9.930202,3.997450,9.252299,-7.465065,9.915550,-2.306717,6.271401,3.873887],[-5.367763,-3.886002,-3.679780,8.958466,-1.396158,6.459023,9.097857,2.408437,-3.972595,3.461867,-7.962067,-6.540046,8.278831,-0.672157,-9.603466],[-7.720687,8.286615,8.325008,-3.010476,-5.888529,0.492046,9.655576,7.732046,-1.223708,-1.272857,5.300659,-9.086960,-5.037587,1.068231,-6.051791],[2.195718,-5.477236,6.461576,-5.397746,-9.273865,5.467911,2.216854,-5.075234,8.124665,-3.134139,-0.669612,6.455958,2.592031,-3.769006,-7.413465],[1.483175,1.719374,-3.746642,5.474874,5.317741,-6.776630,-7.550745,5.703983,-0.414779,5.031437,-9.309397,-4.297283,-0.364045,-6.927298,-1.271563],[-7.547719,-3.678644,8.159868,-4.306890,2.213662,-7.708808,-8.956795,5.580587,1.603014,7.184375,2.479221,5.054598,3.833432,1.080962,-9.862952]],[[-0.209779,9.610629,3.529033,6.778206,-2.375297,9.465896,-0.023300,3.109650,6.808351,2.617822,1.272109,3.874078,4.272285,2.624502,-1.095686],[-2.294814,-9.518200,2.038245,0.528904,5.243587,7.959947,-9.568095,7.000545,-4.705297,7.175090,3.478931,-1.621307,7.000921,2.776431,-0.533742],[-6.304671,-8.506706,0.065236,-1.126968,-9.369883,-5.507013,-0.081165,-8.651714,-8.915548,2.361137,-6.360100,-6.065729,0.634170,-4.064989,-4.307575],[-6.455110,-6.402791,8.196295,-4.576055,-5.147164,-5.844065,-4.840435,3.825536,-1.439836,2.862441,9.517306,-5.279918,-3.039887,1.569542,-6.793127],[-8.225594,8.836447,8.458694,-1.680569,-6.748096,-7.893725,7.281135,-4.083937,2.369934,-1.308049,-0.567229,6.221484,3.754700,-1.568238,-8.979514],[4.574297,4.593492,3.446342,2.001258,-5.254791,-3.971223,-4.325970,6.472942,0.845966,8.371398,-2.917172,6.242591,-2.291625,1.709043,-8.346201],[3.329841,-3.159684,-8.643612,5.316071,5.271994,7.551048,3.652646,1.735238,-3.746273,1.423864,-1.187446,9.876620,5.642542,1.271527,-2.441535],[5.790057,3.326371,-1.522196,5.873351,9.707946,9.763261,3.223474,2.156317,-0.238242,4.295379,7.592248,7.332969,6.905084,2.891040,9.210951],[-8.510351,1.177392,3.829658,0.671898,-7.576879,1.191674,-9.179624,-8.010986,-9.576793,8.596680,-7.910623,3.299798,-3.105423,8.620384,1.777197],[3.443825,0.425514,2.912621,3.831802,5.422489,-0.021587,5.725676,7.968056,-1.325270,-3.977873,8.029123,-6.364244,-6.683526,-2.280977,-6.852928],[8.740374,4.565974,0.537284,3.933425,-7.726096,-2.767070,2.114654,2.937589,5.799370,-5.856197,2.846294,-2.018258,7.033921,-0.470026,-5.368821],[5.107097,0.813035,-9.545480,-7.229866,5.060906,3.525357,1.215190,4.875254,8.462349,-9.087798,9.999943,-9.986994,7.608597,-3.019777,3.073809],[9.345343,-2.525162,9.475821,6.388101,-7.670805,-6.683503,-2.215378,0.456642,-1.544904,-4.006243,-7.680553,1.452813,5.406083,-1.718010,-6.999007],[0.565974,9.540683,-4.323952,-2.315063,-0.205928,-5.893018,-8.880400,-6.817207,6.402021,9.435929,1.013435,1.023379,-3.241920,1.763016,-7.459310],[-1.819463,9.457411,-1.027886,-5.771935,3.530178,1.100782,-9.253809,-6.160930,6.539836,1.847619,9.809275,5.374816,7.747556,-1.109653,-5.053418],[6.502453,-3.778296,-3.290851,-2.815673,1.266075,0.626476,-7.383237,0.640798,-6.349974,-4.503403,5.164839,-9.044228,-9.846690,-7.705357,2.287114]],[[0.562689,6.979495,0.869826,-9.111095,-5.670989,-0.661616,8.260369,3.023833,7.710339,8.948562,-7.757828,-3.859993,2.453881,-5.238268,3.313599],[9.926204,-4.501718,-9.388100,-1.693356,-1.385279,-2.122169,3.762164,5.706738,-3.362505,-2.777279,-6.739724,-0.158167,-0.302549,2.067927,4.755179],[-2.762374,0.264308,4.363154,-5.303494,7.465075,5.603450,3.537318,3.338695,1.604303,-0.547689,9.827812,-2.610023,1.609990,-7.866747,-5.187767],[6.408226,-8.174494,0.513906,-3.980190,8.269921,-7.163197,6.999468,6.058242,-0.566254,8.332719,5.844878,5.517729,-7.313846,-2.678228,9.507152],[5.187101,2.939397,-5.875158,2.587639,-0.648339,-0.175889,9.735893,0.237629,-6.277447,-3.898504,-8.431736,-9.741839,0.636400,-5.457732,2.800084],[-4.659395,-0.399975,-0.202770,5.748676,6.085155,0.757200,-0.222712,3.754848,0.346107,-5.825268,7.527380,2.516343,-4.705225,5.464471,-7.267063],[4.668456,7.366072,-1.533104,-8.440529,2.836622,-5.434063,4.921787,-6.045097,-6.051847,-8.792148,9.330739,4.778667,5.330858,3.893618,-8.332801],[-8.691987,0.595904,3.479886,1.452446,8.874492,9.644219,8.752027,-3.890022,6.559302,-7.295152,2.832148,-3.878243,-7.297796,6.388139,-1.558602],[-2.460232,1.126598,-7.054877,1.522734,-5.180922,-9.463838,-7.556990,-6.426635,3.916916,9.641070,8.897911,2.688523,5.584076,2.575313,-5.987590],[-2.897837,-6.301071,-9.991434,-2.810661,2.426277,-7.950162,-4.839654,6.507799,8.814483,5.252970,-1.216084,-0.352565,-6.035318,-1.634635,-1.319583],[5.800290,7.693574,-6.723661,-3.492213,3.193834,2.908307,8.963153,2.537578,-2.335617,-0.405861,6.068804,-3.201075,-3.711955,-3.054286,-2.066177],[7.588348,6.384990,-1.968171,-9.644584,4.172861,-9.640017,3.408580,-9.129194,-7.389162,-3.921921,-3.992130,-6.522167,8.296223,0.787168,0.064020],[-9.601519,2.204734,7.493335,7.218485,-3.180804,0.446223,8.160050,6.556093,9.717887,-5.353805,-6.299752,-3.238132,1.471459,7.522854,2.796586],[-0.246686,-1.998907,9.380588,7.294746,1.590459,6.360226,-4.037147,-4.157342,7.468201,-8.368703,1.163168,-5.143843,6.514349,2.951654,5.728478],[1.827495,-9.341574,9.201504,7.649552,-1.326544,9.780946,8.482268,-7.445551,7.672216,-7.157027,5.140515,-7.867853,1.175868,7.147558,-1.688913],[9.512414,-4.406266,4.154053,1.906714,8.903314,-6.601699,-8.686655,-8.663188,3.044449,-1.316473,3.695305,1.014215,8.338991,2.129978,3.813174]],[[2.137056,2.867188,-8.882198,-6.172496,1.473418,8.291033,-4.704664,-3.174588,-1.471132,-0.891351,8.318728,-9.685120,3.367029,8.887004,-0.427341],[-1.728534,0.494314,2.825953,1.990347,7.567822,4.377465,-2.609035,-4.703997,1.199616,-1.128542,5.009383,4.592260,-7.080929,-9.007283,-7.580116],[-8.039146,-6.459214,-6.116068,1.278343,6.866263,0.512157,4.621234,-8.543367,-7.736192,-0.495047,0.900291,-2.934192,6.296893,1.691300,-3.339175],[-8.927609,3.464959,-9.069803,-8.879590,9.456572,-5.392051,0.667377,-1.472587,-1.350796,5.019978,8.992569,-7.802724,7.582645,-5.719418,9.534216],[-7.010951,1.359972,3.219679,-3.909838,5.407150,6.302494,-8.604718,3.286959,5.284825,4.659362,-4.312106,9.935638,-2.791219,-3.857772,-9.408058],[2.736868,3.592986,-9.699015,-6.452717,-0.847172,-1.036332,0.856878,-7.685213,6.961937,-1.016825,-9.276616,6.006247,-7.868413,1.877606,-0.248072],[-9.140326,-4.932805,-3.518742,-2.747471,8.078253,-0.098896,9.565135,-5.621682,-8.713948,3.939345,-8.747345,9.332151,5.044374,5.705615,-7.011913],[-4.476837,8.525864,-1.976279,5.866516,-4.415842,1.932983,-5.804390,4.926210,7.309048,-2.279762,-8.957737,-4.323022,-9.936210,6.846668,-9.139100],[0.681005,1.743773,-4.720658,-5.348757,-2.849049,-6.658566,6.522019,-8.909489,-4.047878,-1.437232,-2.794442,3.252277,-6.456480,9.073286,-4.692578],[7.589752,-4.872318,-3.145435,-4.486068,5.735853,-7.527205,6.019591,-4.414620,-4.436664,6.952314,-1.726422,8.169706,-2.205935,5.784480,-5.605354],[-3.456504,-6.715308,-2.891954,2.985322,0.250086,6.828577,-6.501438,-5.156527,9.887629,2.175414,9.483884,-2.322110,-6.378987,0.550421,-3.718489],[3.516317,7.191254,-4.992378,-1.372366,7.720335,-2.688957,0.137271,3.461645,8.741099,-0.663783,8.590958,-9.871988,5.727217,-8.096264,9.235378],[-1.928857,9.418651,-9.211687,1.695500,8.250433,-4.870518,5.627204,5.912417,1.282382,8.717545,1.752262,-3.945390,8.287909,-5.232468,-7.443484],[-8.784137,-2.297893,-8.192807,6.183011,-9.224193,-2.274671,-6.530650,-9.479762,-7.108409,0.525769,-4.280682,-2.295263,-5.985551,-4.459983,-0.118802],[-0.321999,2.185714,-3.498704,0.785419,1.011138,4.522841,5.543459,1.771968,6.677268,3.099796,-3.366540,3.285935,-5.388785,-8.531174,0.138268],[7.951111,0.305095,-7.250258,9.708457,-4.183722,4.303649,-5.951766,2.362756,6.311309,-3.767768,8.126589,-3.980276,1.075443,8.236975,6.983249]],[[-9.740691,-7.320546,1.399419,-8.447507,8.346303,6.927834,-0.821936,4.585855,0.177592,-8.913923,6.814015,-3.188359,-9.980242,5.679398,0.661469],[-6.509570,9.474551,-6.194964,-4.599466,7.143098,1.850459,-8.705634,8.683901,2.083301,-3.940503,-3.242206,-6.267519,8.038578,-1.038651,-4.975957],[7.364314,-3.992134,5.814477,5.969489,3.708134,9.648471,6.807713,-5.812835,6.260554,-0.610421,0.613212,-6.352542,0.750833,-6.534879,-0.932677],[-7.811421,-1.336898,-9.419445,5.215447,6.853602,6.561402,8.414225,-1.280079,3.686821,8.162958,-6.679421,-3.073072,-0.012254,-2.989594,9.360499],[3.246302,8.258586,-7.380708,-1.513901,1.702043,-7.968680,-1.846115,-4.590075,8.283975,9.587026,0.251239,4.641722,-4.152046,0.523342,1.971121],[3.748301,-6.548649,-3.414322,-4.115622,-6.159505,-0.360755,-7.565556,-1.589439,1.031580,-7.182380,6.633817,-8.033199,3.723659,-5.901441,-6.680478],[-7.469434,8.238788,-7.665272,8.118694,-5.683696,-0.454022,1.910390,5.602804,2.029685,4.769774,4.788296,2.835308,-7.091785,-2.575485,-5.789258],[-0.380885,-7.639690,1.685158,1.069261,-2.519959,7.533594,-6.157822,1.854870,-1.399287,-1.981838,9.728051,-4.994943,-7.081370,2.211463,-3.689069],[6.418133,-1.995267,-7.940451,-1.865663,5.690304,3.534011,5.975034,0.962376,8.558361,-6.722517,1.303545,-2.192583,-6.235771,-7.139603,6.458269],[5.791648,5.086867,3.664481,-7.641353,5.030617,-5.321245,-0.427883,-7.820637,-9.540013,2.759473,-0.619205,-8.476770,7.461274,9.481178,6.385156],[-6.183849,4.983532,-7.846663,7.521148,-2.718830,-4.653335,8.485349,-3.908986,-6.385831,8.486599,3.256040,4.479991,-6.591775,0.088784,-2.768960],[5.482339,9.070937,1.596153,1.112031,-6.777627,0.597190,-9.453393,2.228171,6.174151,1.250189,-3.738543,-3.437917,5.579566,-2.698120,-6.796079],[2.711191,7.187516,-3.842178,-0.724105,6.049144,0.447300,-6.552586,5.084507,-9.032079,6.211736,7.562940,6.457184,4.828997,1.525299,0.937391],[5.148999,4.405884,2.127604,5.405625,8.885347,7.991091,3.971820,-7.123942,5.155161,5.153153,-7.304809,-0.183360,-1.954069,-4.096882,7.048264],[7.336813,-3.406611,5.749634,-4.049432,-8.750222,1.440886,-1.076797,1.922733,9.767400,-4.762870,5.592588,-6.638018,-5.726698,-1.837800,-7.686768],[-4.811584,-9.962323,-6.136498,-3.621195,-8.408334,-4.844927,-7.665174,-7.891459,0.958082,2.674447,2.935537,-7.618081,-5.072979,-0.590384,-8.716008]],[[3.983054,7.355305,0.854787,0.144611,-6.555029,-7.165273,-0.632605,-5.483500,-9.954154,-8.475937,1.854322,0.197447,8.537000,-7.032715,-9.983346],[-1.314071,5.832514,1.453927,5.221897,-7.096588,-3.549584,-3.280426,-9.142859,5.341091,-4.452800,-2.866672,4.891555,-8.507238,5.846814,2.322082],[5.246393,2.308896,1.190654,3.732577,-2.749857,-6.198944,6.295115,3.440197,2.558529,-0.738588,-9.497704,6.048636,-6.931102,7.923851,-0.417376],[7.662429,-1.321462,-8.733798,5.815817,8.645604,-1.759319,-8.363670,-0.580261,2.686956,4.331009,-0.678450,-6.630419,0.046911,5.402259,-8.102437],[3.956991,3.656905,7.861804,2.073743,8.219433,-2.536668,0.254354,1.682148,-9.235130,5.249463,9.163584,8.887507,-7.453764,-5.210990,8.122858],[4.560733,7.792658,1.104731,5.698456,3.243237,7.940481,-1.201699,3.616203,-8.592722,-7.915470,0.092587,7.977021,0.402419,7.076064,1.168229],[-3.925075,-4.616024,3.486598,-3.659541,-5.753399,-3.144333,6.981612,-7.246982,-1.494819,-0.866922,0.505447,-1.428730,6.528235,-4.481949,-4.705633],[9.303564,-1.516710,-3.105630,8.339313,-8.092584,-7.205573,7.912157,2.655248,-8.798225,2.238382,-3.759170,-5.863061,3.422367,-1.121454,4.423502],[-1.272229,-5.204401,-9.566688,-7.053164,1.116619,3.608996,6.577984,-7.648116,3.835775,0.938656,1.130163,1.192340,-6.456978,7.943856,-2.996045],[6.932628,-6.521045,1.676470,-0.820408,-2.926083,6.615970,-4.416463,8.099202,8.587947,3.193357,9.017546,6.918602,6.598436,8.602815,-0.073061],[7.755132,-5.652290,4.270805,-0.828765,-9.276191,-4.449968,-2.236080,-0.741621,5.352747,-8.276360,-1.588846,7.694165,-1.841554,-7.928247,-0.061655],[5.233460,-3.065143,7.589611,-2.209204,-9.088107,-6.296772,-7.434358,1.670802,-4.839083,-4.292451,2.674219,-1.364426,-4.494327,4.009423,7.751084],[-3.555717,4.588836,-5.803563,-2.803033,-4.753607,5.752136,4.489493,-2.030192,1.551153,6.609686,4.669935,-1.732381,-2.735337,6.683326,2.588309],[1.460135,4.962329,9.059352,7.143612,-8.556625,-5.745339,-4.444667,7.023025,-2.906066,-8.597371,9.000288,-0.676873,3.180033,-0.921489,8.523000],[7.277978,9.940898,4.849519,3.583451,8.551245,1.904872,8.819724,9.114727,-7.480134,8.373254,-0.820665,-4.045470,4.916245,0.207575,-9.089970],[7.558348,3.127431,0.214778,1.736086,2.238697,-0.330384,-3.647620,-7.627859,8.586030,3.401073,5.876451,3.171693,3.934864,-9.084484,-6.534577]],[[3.659121,-3.182122,5.155080,5.909859,-2.740193,4.170074,1.869537,4.580792,6.134526,-0.171311,4.283863,-7.094147,-9.830640,4.777271,-0.660095],[5.319432,-0.231338,-6.991587,9.138207,-2.123738,-7.661828,9.537721,-6.659043,-6.722816,9.488269,-6.508752,-3.247871,7.480591,-5.758640,0.037821],[-8.606452,-5.898694,2.002236,-5.600222,9.315292,-5.106979,-9.822713,6.467916,-1.728148,4.423214,2.684487,9.221130,-7.864905,-4.424520,6.743978],[-4.370416,-0.088439,-2.141036,7.387001,0.390022,-4.199170,4.618272,2.279408,5.870610,-3.479955,8.477144,-1.184347,4.895606,4.821131,-4.655152],[-1.456710,-5.005235,5.967018,-4.418395,-3.217780,0.854509,5.569607,2.056788,-7.661626,7.769683,9.017242,-0.271091,5.071308,0.067778,9.126604],[0.831245,-3.696996,-3.831747,0.173443,-9.036341,-2.485821,-1.358657,-6.949266,-2.221622,-4.937578,1.457708,-8.014772,7.020286,-3.776524,-6.425236],[-1.928927,5.386920,-8.861275,5.466785,-4.224488,4.356364,2.291014,-6.414767,3.249915,-1.513294,-3.231318,-7.860725,7.452082,-4.549476,-7.849416],[8.869039,7.351080,4.433959,7.915063,2.014853,-9.687831,-9.853544,-8.078521,-9.281577,-0.822685,6.776301,-9.086914,8.717967,1.904764,0.055969],[9.597893,0.295724,6.623969,-4.560936,7.216308,-6.065812,-5.000507,5.445603,-1.107559,-4.472715,8.391653,8.299623,0.261572,9.411019,6.269159],[-9.816786,-2.304856,2.988786,-9.648465,-4.288499,7.461205,-1.912569,2.611031,-7.298043,2.123254,-8.879254,-5.307994,-4.058863,3.887111,-2.543283],[0.134157,6.548642,-3.860435,4.868082,-4.889366,-7.558415,0.202550,2.852598,0.802618,-9.752105,-2.111977,1.463398,-8.402013,3.445042,8.249471],[-9.850368,-2.431529,-5.306842,-5.422477,-6.285994,5.094181,-5.763358,6.188801,-2.172704,8.324843,7.094130,9.514098,-7.399383,-3.958801,1.514790],[-0.765183,-6.080775,0.754704,3.952073,1.734762,-7.548005,6.732941,0.499315,-8.721798,2.404883,-6.808666,-5.974357,0.743247,3.468976,-0.348362],[8.730353,0.579301,7.918650,2.524728,-0.802937,-5.839825,8.627499,-8.483219,-3.468768,-9.250987,-3.713435,-9.677588,6.346955,-2.335466,-5.681017],[8.123631,1.034120,7.528661,-8.659031,1.245498,5.334971,3.225465,4.288677,2.728456,0.865427,3.926102,-6.192022,-8.159716,2.478133,1.126809],[8.552033,-0.055587,8.873176,4.234280,-5.374605,-4.813205,7.136774,-1.457861,8.140759,-5.558815,-2.654426,2.459412,-5.420771,-6.665019,-9.941686]]], dtype = "float64")#candidate|2855|(14, 16, 15)|const|float64
bop_2856 = relay.equal(bop_2845.astype('bool'), relay.reshape(const_2855.astype('bool'), relay.shape_of(bop_2845))) # shape=(14, 16, 15)
output = relay.Tuple([bop_2856,])
output2 = relay.Tuple([bop_2856,])
func_2862 = relay.Function([var_2843,var_2844,], output)
mod['func_2862'] = func_2862
mod = relay.transform.InferType()(mod)
mutated_mod['func_2862'] = func_2862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2862_call = mutated_mod.get_global_var('func_2862')
var_2864 = relay.var("var_2864", dtype = "float64", shape = (14, 16, 15))#candidate|2864|(14, 16, 15)|var|float64
var_2865 = relay.var("var_2865", dtype = "float64", shape = (14, 16, 15))#candidate|2865|(14, 16, 15)|var|float64
call_2863 = func_2862_call(var_2864,var_2865,)
output = call_2863
func_2866 = relay.Function([var_2864,var_2865,], output)
mutated_mod['func_2866'] = func_2866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2638_call = mod.get_global_var('func_2638')
func_2639_call = mutated_mod.get_global_var('func_2639')
call_2868 = func_2638_call()
call_2869 = func_2638_call()
output = call_2868
output2 = call_2869
func_2872 = relay.Function([], output)
mod['func_2872'] = func_2872
mod = relay.transform.InferType()(mod)
output = func_2872()
func_2873 = relay.Function([], output)
mutated_mod['func_2873'] = func_2873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1268_call = mod.get_global_var('func_1268')
func_1269_call = mutated_mod.get_global_var('func_1269')
call_2880 = relay.TupleGetItem(func_1268_call(), 0)
call_2881 = relay.TupleGetItem(func_1269_call(), 0)
output = relay.Tuple([call_2880,])
output2 = relay.Tuple([call_2881,])
func_2882 = relay.Function([], output)
mod['func_2882'] = func_2882
mod = relay.transform.InferType()(mod)
output = func_2882()
func_2883 = relay.Function([], output)
mutated_mod['func_2883'] = func_2883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mod.get_global_var('func_1565')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_2891 = relay.TupleGetItem(func_1565_call(), 0)
call_2892 = relay.TupleGetItem(func_1567_call(), 0)
func_2368_call = mod.get_global_var('func_2368')
func_2369_call = mutated_mod.get_global_var('func_2369')
call_2911 = relay.TupleGetItem(func_2368_call(), 1)
call_2912 = relay.TupleGetItem(func_2369_call(), 1)
func_1515_call = mod.get_global_var('func_1515')
func_1518_call = mutated_mod.get_global_var('func_1518')
var_2917 = relay.var("var_2917", dtype = "float32", shape = (450, 1))#candidate|2917|(450, 1)|var|float32
call_2916 = relay.TupleGetItem(func_1515_call(relay.reshape(var_2917.astype('float32'), [15, 6, 5]), relay.reshape(call_2891.astype('float32'), [924,]), ), 0)
call_2918 = relay.TupleGetItem(func_1518_call(relay.reshape(var_2917.astype('float32'), [15, 6, 5]), relay.reshape(call_2891.astype('float32'), [924,]), ), 0)
output = relay.Tuple([call_2891,call_2911,call_2916,var_2917,])
output2 = relay.Tuple([call_2892,call_2912,call_2918,var_2917,])
func_2926 = relay.Function([var_2917,], output)
mod['func_2926'] = func_2926
mod = relay.transform.InferType()(mod)
var_2927 = relay.var("var_2927", dtype = "float32", shape = (450, 1))#candidate|2927|(450, 1)|var|float32
output = func_2926(var_2927)
func_2928 = relay.Function([var_2927], output)
mutated_mod['func_2928'] = func_2928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2659_call = mod.get_global_var('func_2659')
func_2661_call = mutated_mod.get_global_var('func_2661')
call_2969 = relay.TupleGetItem(func_2659_call(), 0)
call_2970 = relay.TupleGetItem(func_2661_call(), 0)
func_2872_call = mod.get_global_var('func_2872')
func_2873_call = mutated_mod.get_global_var('func_2873')
call_2975 = func_2872_call()
call_2976 = func_2872_call()
func_1206_call = mod.get_global_var('func_1206')
func_1208_call = mutated_mod.get_global_var('func_1208')
call_2986 = relay.TupleGetItem(func_1206_call(relay.reshape(call_2975.astype('float32'), [11, 7, 12])), 0)
call_2987 = relay.TupleGetItem(func_1208_call(relay.reshape(call_2975.astype('float32'), [11, 7, 12])), 0)
output = relay.Tuple([call_2969,call_2975,call_2986,])
output2 = relay.Tuple([call_2970,call_2976,call_2987,])
func_2995 = relay.Function([], output)
mod['func_2995'] = func_2995
mod = relay.transform.InferType()(mod)
output = func_2995()
func_2996 = relay.Function([], output)
mutated_mod['func_2996'] = func_2996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2237_call = mod.get_global_var('func_2237')
func_2239_call = mutated_mod.get_global_var('func_2239')
call_3008 = relay.TupleGetItem(func_2237_call(), 1)
call_3009 = relay.TupleGetItem(func_2239_call(), 1)
var_3010 = relay.var("var_3010", dtype = "uint32", shape = (1470,))#candidate|3010|(1470,)|var|uint32
bop_3011 = relay.subtract(call_3008.astype('uint64'), relay.reshape(var_3010.astype('uint64'), relay.shape_of(call_3008))) # shape=(1470,)
bop_3014 = relay.subtract(call_3009.astype('uint64'), relay.reshape(var_3010.astype('uint64'), relay.shape_of(call_3009))) # shape=(1470,)
uop_3015 = relay.exp(bop_3011.astype('float64')) # shape=(1470,)
uop_3017 = relay.exp(bop_3014.astype('float64')) # shape=(1470,)
output = relay.Tuple([uop_3015,])
output2 = relay.Tuple([uop_3017,])
func_3025 = relay.Function([var_3010,], output)
mod['func_3025'] = func_3025
mod = relay.transform.InferType()(mod)
var_3026 = relay.var("var_3026", dtype = "uint32", shape = (1470,))#candidate|3026|(1470,)|var|uint32
output = func_3025(var_3026)
func_3027 = relay.Function([var_3026], output)
mutated_mod['func_3027'] = func_3027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1649_call = mod.get_global_var('func_1649')
func_1650_call = mutated_mod.get_global_var('func_1650')
call_3101 = func_1649_call()
call_3102 = func_1649_call()
output = call_3101
output2 = call_3102
func_3108 = relay.Function([], output)
mod['func_3108'] = func_3108
mod = relay.transform.InferType()(mod)
output = func_3108()
func_3109 = relay.Function([], output)
mutated_mod['func_3109'] = func_3109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mod.get_global_var('func_2882')
func_2883_call = mutated_mod.get_global_var('func_2883')
call_3221 = relay.TupleGetItem(func_2882_call(), 0)
call_3222 = relay.TupleGetItem(func_2883_call(), 0)
const_3236 = relay.const([[[-0.880925,0.864851,-8.391350,-8.333676,-7.091811,3.479463,-9.391373,0.457232,-4.085172,5.159449,4.927599,9.171901],[6.686009,9.291979,-6.983207,9.014150,-5.367942,6.687902,-1.507472,-1.932009,-1.146388,-0.347155,0.148605,-6.728902],[-6.486552,-4.633113,8.958851,-5.701501,-5.290303,4.564360,-6.264199,-9.721935,9.523671,9.849657,8.683703,-1.151520],[2.404705,8.108297,8.602166,-2.277787,4.861425,5.241283,-8.665062,0.586307,-5.928359,-2.680241,4.464605,1.311067],[-8.924979,-0.102025,-5.523537,5.724561,7.289037,-6.170936,-3.081909,3.851922,7.515871,-8.994814,-3.854309,-6.933197],[9.410382,9.796593,0.865201,3.801303,0.680355,-8.855352,1.264956,5.862327,-1.353028,7.562791,-7.219135,-5.605669],[5.950608,2.369868,-6.578972,-4.050090,-9.645826,8.340129,-6.121736,9.879409,-6.083853,7.576969,9.378808,0.968693]],[[-0.369968,2.681450,5.717342,-9.604187,-9.191700,-4.947424,-0.542753,-9.640403,-6.543627,-5.483123,8.945677,-2.874537],[1.904962,7.441810,-7.121151,-4.166950,8.937164,0.637312,1.251320,5.983446,6.214569,4.347853,3.833994,9.095746],[7.922597,-0.953848,3.240667,-0.988972,3.729025,-4.549552,-2.164734,-4.157868,-6.081654,-7.663783,-5.373950,5.029817],[8.083028,9.680683,4.159748,-3.600693,-2.377825,9.877354,2.121163,2.685086,2.999933,-1.079352,-2.212785,7.286666],[-0.513380,3.148382,5.632751,0.270234,1.157559,1.172929,9.663019,8.610665,5.804212,8.364776,-1.544175,5.573273],[-6.991488,-2.908945,-2.168828,9.396916,7.806034,2.338007,-6.729564,-2.639664,0.709405,-2.820183,6.157472,9.055052],[-1.423864,-9.786415,2.802359,-8.727397,1.491507,-3.991594,-2.918739,9.678511,-7.290358,-2.935074,3.527105,-0.429445]],[[0.694270,6.886258,-5.373164,3.576045,9.530227,-0.293856,8.564806,7.674764,9.325567,-3.396622,2.266729,6.624034],[6.036296,-3.825024,-4.279690,1.881613,6.065791,5.820569,4.185067,-6.920247,-5.519655,0.309109,5.393731,-1.095396],[8.659413,-4.589802,-1.948395,-7.482754,-4.485362,-5.806871,-4.321426,-9.192975,-1.167082,7.464043,-9.370304,4.259174],[-7.818500,-5.979819,8.593312,-9.550940,6.556873,2.271490,7.782009,9.265534,5.080905,-3.330110,-1.227098,2.076460],[-9.089166,-6.927087,5.933104,7.640290,2.086444,2.359468,9.443093,9.023373,7.356636,-6.443112,-1.118050,-5.006319],[-5.563323,7.344634,3.431350,5.136773,-6.980422,-5.937984,8.478003,0.540549,1.087901,9.533660,3.815604,1.085537],[-9.081456,0.033163,-8.004071,-0.870605,-4.205890,2.198233,-8.317196,-8.740088,-8.788231,-1.812495,-5.758426,-6.333345]],[[6.219251,-5.595467,-6.123963,7.450649,-3.631659,-9.702597,-6.452875,4.152311,-8.102495,-2.890135,3.755741,7.096186],[1.888449,-7.403479,-4.549231,8.138216,-3.671629,-3.375897,9.035188,4.762778,-7.274106,-0.851399,-3.713660,0.584116],[-0.912634,-0.690369,-1.445624,-3.841496,3.161691,-9.039684,7.435286,0.189738,2.942252,3.317688,3.363109,-1.049474],[-6.834447,-9.293418,-6.247941,2.054027,6.251873,2.545423,-7.775269,4.929625,-0.166225,7.948802,0.555416,4.378943],[-4.406073,-7.546566,-1.860950,3.889345,4.048452,8.397714,3.072530,4.417910,-2.644487,3.059180,-9.595113,7.516334],[-1.873107,-5.622874,0.541056,-2.845440,-8.673590,-0.928481,-9.705003,0.589860,7.546228,9.709475,-9.402109,-5.091735],[9.677328,1.669118,-8.471518,-6.936932,0.127214,5.241584,1.851930,-3.061545,-5.613892,-9.852579,-6.943283,-2.295265]],[[-7.378706,-1.461214,-5.365611,-7.641050,-6.268990,5.523377,-8.756614,2.444455,0.963838,-2.900006,5.043268,-3.921754],[8.299073,-7.669477,5.637005,-2.545985,-1.332808,-8.736263,1.400363,5.031070,-3.919317,-1.795674,-7.569884,-7.329602],[-2.117559,-7.062027,0.537367,2.408371,0.162301,-1.917440,7.132386,9.537941,1.564895,-7.761989,-6.182259,4.810273],[4.248993,8.632227,1.676409,5.771551,-9.910306,3.273857,-1.904984,7.369564,-8.754418,-0.546165,-5.221169,-8.866713],[9.723853,-3.927487,-0.146613,-1.234680,0.453325,5.099178,6.674357,9.952211,8.238364,8.428326,7.975273,9.372145],[-5.543967,0.143790,4.323385,2.287711,1.947875,-3.546676,6.882342,0.284840,-3.016746,9.966677,0.370736,-1.585762],[-1.177048,-6.871047,-3.845355,3.525369,-5.465608,0.971802,-0.624032,-3.702631,-2.138685,6.422888,-5.988830,-8.549740]],[[-6.584473,-0.950746,-0.035698,-9.919252,9.442585,4.877089,-6.508236,-7.936742,4.339280,1.964644,-7.694001,0.035248],[-1.712745,-0.516742,6.299380,-2.898200,1.375162,9.256221,1.886923,-1.546480,7.344984,-7.138969,-2.887145,-6.735761],[-0.586669,-4.803126,9.692593,4.995923,-9.211191,-0.001448,-6.821228,7.019225,-9.218176,-7.823041,-9.453772,-6.311582],[-7.125707,-7.713350,8.906863,-9.385627,-1.815191,6.153814,4.068877,4.957778,-9.965653,7.683293,-6.159559,-4.973182],[-7.674616,-3.621422,3.044080,-8.188904,1.320918,3.905476,0.935242,-2.758712,-2.062839,8.097339,-2.267346,1.613030],[5.411362,-9.985841,-2.238039,-7.698171,6.760553,6.145201,4.492874,-4.277181,-0.782787,9.970313,5.400892,5.240033],[1.547927,6.117000,-4.873721,0.085465,-9.217921,6.631689,-5.817705,9.986394,5.787927,9.344574,-4.041059,8.321509]],[[8.526032,-2.836564,7.912895,-9.613618,-2.446638,-9.326112,-9.737510,-0.524371,3.503844,6.126974,7.270143,8.849091],[-8.726012,6.772374,-8.945506,2.310473,-7.590338,2.879590,-5.890443,-9.859839,9.163254,9.688589,-5.429112,-9.655383],[0.304897,-4.000065,-6.501255,7.588266,-3.072271,3.095386,-0.623171,-5.501236,-5.746105,-4.064770,9.912206,-8.995607],[4.050878,-6.287143,3.616569,-1.762078,6.433556,-2.142896,-0.735296,-7.113130,-5.048616,-3.169463,-1.578402,8.849109],[-8.579742,2.263707,4.202332,-6.693858,5.867253,-8.164551,-6.561794,-7.623947,2.022693,2.448501,-3.774650,-1.593601],[-8.628321,1.114680,0.611684,7.080019,-7.660324,8.296413,-9.687651,4.411480,4.746758,2.055891,-9.399573,8.698637],[-2.936499,1.866562,-2.429685,5.317294,-2.092708,7.701469,-8.398404,4.831612,-4.239047,-1.200132,0.790286,-5.914547]],[[3.263416,-7.041069,4.847177,-8.001191,-2.086846,2.981864,0.404029,2.995651,5.080950,-8.529056,-3.684791,9.101303],[-0.832249,2.214313,7.466617,-4.182742,9.915755,-0.837104,-3.796625,-8.877010,-0.322895,6.478970,2.125503,-2.263994],[-5.365933,-6.760277,-5.133856,6.517272,5.987273,-2.498911,-2.157232,9.446664,2.286370,1.672620,-5.672941,4.268915],[7.876322,2.816183,1.189816,6.613227,-2.011576,-4.738858,2.561977,9.043756,8.448176,8.998958,8.731120,6.358379],[-7.628646,-6.551366,0.854630,-0.130325,6.090601,1.293394,4.889198,-0.687177,-3.831285,-0.895015,-6.889947,-3.392672],[-1.455768,6.040446,-2.548016,-4.978592,3.270561,-5.695775,-1.240556,3.007707,-7.629020,7.707012,-8.045558,9.859447],[-6.573960,-3.678737,4.433858,-3.640705,9.926314,1.627104,6.124522,-5.734088,7.970217,3.313141,4.408875,8.667090]],[[8.784738,3.626669,-3.724452,-8.767577,4.944411,4.869107,8.807036,-7.853330,1.051676,-8.652749,8.125191,-7.147838],[9.816205,8.304559,-3.593989,-6.828665,5.305659,9.177588,-0.748024,-1.546436,1.596953,0.571487,-4.674599,0.648264],[0.682396,-1.014844,-9.103378,3.673321,-6.628965,2.918594,0.822943,-0.430239,3.370557,-6.424619,5.559531,0.141212],[-7.844351,2.310050,-5.082639,4.636235,-6.737689,2.168803,-9.680429,1.025693,0.533320,2.563720,-0.977476,4.054221],[-9.066863,-8.896949,-7.850106,-0.616708,-4.276528,3.438717,-9.083631,-9.691729,-6.212816,4.473994,9.616314,9.897693],[2.436963,2.080189,-6.341634,-8.801369,1.428998,-9.262635,-1.434205,-7.613303,-1.374162,-0.226078,-8.510191,-3.352441],[-3.087547,3.365032,-2.751308,-2.478675,-8.870645,0.364196,-1.315166,0.532031,-6.093300,5.578004,-7.294684,1.975950]],[[-0.023800,3.999603,9.345940,6.136026,5.275541,4.137995,-9.958105,-8.428966,7.533371,4.525318,8.138074,6.727393],[0.287279,-8.001039,0.040114,-3.487944,2.293037,-7.137519,6.678465,-6.968810,0.153694,-4.429378,3.595456,-6.047860],[5.268815,-3.005855,-2.536951,-4.684412,6.352551,8.183166,7.465725,-3.731843,5.353199,0.464146,-6.662023,8.546065],[5.859467,2.858773,-7.962067,0.906682,-2.331732,-4.158285,-0.130782,-2.774018,-1.351940,-2.455379,2.322842,-7.341829],[9.269753,-3.813253,-2.492507,0.794158,2.261086,-7.317838,-2.395611,8.270953,-4.920259,7.858023,0.976657,-3.177359],[1.278358,4.126817,0.794812,5.432720,5.386619,-9.903944,-8.675473,0.090938,9.515185,6.944022,7.119497,-1.435468],[9.925406,-6.500632,4.271399,-7.448371,1.921989,7.728729,6.007923,-4.991472,-9.431513,-7.352333,-8.743014,8.935352]],[[-4.657600,-7.648865,8.957788,0.560203,-2.433588,6.189909,-6.702490,3.204760,5.834803,-8.887083,5.301540,5.002101],[2.036934,-4.469232,1.737783,2.411574,2.720806,-5.740150,-2.616087,6.473749,3.828109,-3.914693,-1.522827,-2.216973],[6.222476,-3.240144,7.057332,-4.786172,-0.096136,-6.614970,-5.167716,7.830159,0.926298,4.917987,3.946433,4.771925],[8.882097,-3.012160,8.964903,-4.828375,7.667852,8.843384,-0.822639,8.197174,3.766116,6.289937,-3.331640,1.430501],[-9.551969,4.805076,0.907890,-3.647633,1.159837,-1.498414,2.094827,1.317708,8.166993,8.483629,-5.318235,-8.001999],[4.398341,-1.943443,-4.024359,8.353068,-4.161300,-8.850324,3.965447,-3.410487,6.210254,8.895561,7.823913,4.794377],[-2.249828,5.037279,-3.051651,-3.509127,6.029620,4.513564,-6.071015,-4.771373,3.997103,-1.472398,7.326140,1.814350]]], dtype = "float64")#candidate|3236|(11, 7, 12)|const|float64
bop_3237 = relay.right_shift(call_3221.astype('int8'), relay.reshape(const_3236.astype('int8'), relay.shape_of(call_3221))) # shape=(11, 7, 12)
bop_3240 = relay.right_shift(call_3222.astype('int8'), relay.reshape(const_3236.astype('int8'), relay.shape_of(call_3222))) # shape=(11, 7, 12)
func_1799_call = mod.get_global_var('func_1799')
func_1802_call = mutated_mod.get_global_var('func_1802')
var_3258 = relay.var("var_3258", dtype = "float32", shape = ())#candidate|3258|()|var|float32
const_3259 = relay.const([5.220916,-5.099437,-8.176450,-3.354716,-7.155063,7.629065,0.536024,-1.713496,-5.657073,-5.328627,3.733877,-3.590430,-6.047344,-5.482610,2.261810,1.182032,6.877493,9.318274,-5.322044,-1.606769,3.882153,5.939231,-5.520891,-9.334606,5.027205,0.989457,1.047953,-9.744913,-7.987806,1.150702,2.273419,-4.769468,-9.016772,-3.844236,2.139212,2.107046,-5.987564,6.207227,-3.145080,-1.688397,8.207761,-8.880011,4.598678,-1.589179,-3.962886,-0.143917,-1.236243,-6.028399,-0.750534,1.148730,2.634200,-3.604791,4.017124,3.711479,-6.897250,0.626993,3.053063,-5.178027,-3.869042,-2.676721,-2.998515,-3.171000,3.189172,4.360405,0.051593,-3.743410,-1.287147,-2.551495,-6.333341,3.651241,4.028947,-3.855512,3.897297,-6.956088,0.596149,-2.070601,6.388446,-2.516051,7.329208,-7.733546,-5.876871,4.540573,-6.201028,-6.516437,8.768867,9.487863,-7.965239,1.572209,-3.256625,3.495771,-5.652547,5.920956,-8.524779,3.332321,3.852315,-5.259175,-5.161594,-9.627382,-0.976999,4.357676,6.399763,-1.792215,8.685441,1.706320,5.675504,5.570610,-9.306894,9.014316,3.452004,-3.919714,6.268955,-0.619146,-5.931645,-5.159427,-6.522545,5.027731,-5.937237,1.730118,4.216045,7.782601,-3.670149,8.497596,8.989620,1.162136,0.229289,1.170952,4.901252,-7.130061,8.093268,-3.315468,-9.005447,9.574326,3.217764,-9.139284,2.722928,-7.169210,8.468790,-8.618035,-1.230720,9.530896,0.061160,-0.784870,-8.060904,-7.110122,4.741011,1.109664,-7.774427,-3.805470,-2.600121,8.534647,-3.027564,1.052241,4.187602,-4.349782,6.980102,2.154703,8.493611,9.169471,-0.574212,5.779568,-5.587991,8.510086,8.633072,9.361471,5.146369,1.287792,-3.665966,8.308048,-3.553749,1.075708,6.087633,-5.115440,8.581429,-4.665414,2.573675,2.881848,8.306568,7.013709,7.983364,-8.712753,4.663545,-2.125939,-4.006835,0.664249,-8.051347,-0.315293,4.104949,-3.202944,1.858725,-9.711155,-3.302774,-7.608695,-7.025849,-4.274525,-9.933872,-1.882659,-2.483578,2.904877,-6.450030,3.361961,-5.183783,-8.236449,-7.173490,-9.256199,-7.478003,-8.035408,-5.120452,-0.847502,-6.469026,-2.146600,0.460509,-3.346582,-7.049212,-2.594472,-7.351721,9.900266,6.079385,-4.824008,-0.054301,9.982810,3.641723,3.810941,0.049698,1.077251,-9.199766,-6.317270,-4.015088,0.487556,5.756172,-7.839416,9.415705,-2.922033,6.417666,-9.825248,8.329288,-6.188988,5.282546,-1.641446,7.283472,6.551442,-9.440844,3.768771,-3.757174,6.650308,-0.676602,-6.614004,1.156257,6.140184,9.156875,-2.005678,6.311857,-1.303603,-9.646338,9.756361,-4.714949,3.053663,1.481670,9.828945,2.241265,3.208235,-2.958945,3.065119,-8.322868,9.617745,-0.418998,-8.156915,-2.911994,-2.768391,3.835226,3.348939,-6.437191,-3.242776,6.241603,-1.031705,-4.070243,6.847069,5.391163,-0.574751,0.136209,8.484311,4.681093,2.608587,-1.236390,-0.646078,-2.370203,4.788167,-3.513277,-7.986755,-4.856822,-0.581586,-3.325396,2.184123,-5.927802,7.120281,8.407999,0.515653,-0.723610,5.072183,9.014271,-6.808298,9.268941,-6.888261,-5.226364,8.878528,3.918998,3.463692,5.179864,9.389498,4.404815,6.698592,-0.289798,3.120885,-2.207378,1.979695,0.209623,4.351727,-7.798463,-1.437005,-4.522788,3.039660,-2.766668,6.741708,0.817310,2.638182,9.484093,-9.092599,-7.013800,-5.001155,-5.168069,-3.933359,7.010272,-3.388796,0.501987,-8.075383,-1.000658,-8.736484,7.408378,8.823884,-2.229389,0.812802,5.168286,0.224456,6.754910,-5.367370,-3.141681,1.791318,-5.444672,2.714989,6.288309,3.636172,2.112755,-2.041764,2.471883,6.811335,-0.752717,8.444458,-4.284141,8.178728,-6.487092,2.946582,-9.858533,2.695288,-5.534454,2.244855,-8.435082,-3.498619,-9.776622,-3.446252,-5.010791,0.123687,-2.204421,-0.342111,-0.340470,9.633464,-5.679284,0.951447,0.405528,0.746760,9.076207,9.651490,-9.592183,6.994827,-1.647675,-1.103408,5.333329,-7.029523,9.292258,3.482321,-5.064597,-3.120022,1.851160,-6.267017,-7.119881,2.311868,-0.815280,-0.999813,-4.333722,5.742189,0.744857,0.180864,9.708356,4.770578,-9.152236,-7.645972,9.427922,2.845495,-8.079354,3.103971,-6.052306,-5.951763,-8.520913,4.649927,-1.282182,9.204612,-8.567270,8.589758,-9.177329,-6.239054,8.013342,-3.399671,-0.630961,8.077743,0.968156,7.678920,3.187217,-0.743262,-8.143975,-7.594705,-1.718969,3.962511,-9.394710,-3.941197,8.634220,-8.804121,-2.083573,9.501987,-6.621698,5.088621,4.480413,1.841915,5.797498,-2.711771,9.886066,-2.673182,5.349769,4.571587,-7.193085,-9.125812,-1.903893,-1.441260,2.139791,0.856699,5.629566,9.998536,-9.219247,6.399200,-7.766221,3.226135,8.949941,3.972394,6.813561,-2.467477,4.158276,0.953204,2.357899,-7.559602,7.591072,7.228635], dtype = "float32")#candidate|3259|(468,)|const|float32
call_3257 = func_1799_call(relay.reshape(var_3258.astype('float32'), []), relay.reshape(const_3259.astype('float32'), [3, 13, 12]), )
call_3260 = func_1799_call(relay.reshape(var_3258.astype('float32'), []), relay.reshape(const_3259.astype('float32'), [3, 13, 12]), )
output = relay.Tuple([bop_3237,call_3257,var_3258,const_3259,])
output2 = relay.Tuple([bop_3240,call_3260,var_3258,const_3259,])
func_3281 = relay.Function([var_3258,], output)
mod['func_3281'] = func_3281
mod = relay.transform.InferType()(mod)
var_3282 = relay.var("var_3282", dtype = "float32", shape = ())#candidate|3282|()|var|float32
output = func_3281(var_3282)
func_3283 = relay.Function([var_3282], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2572_call = mod.get_global_var('func_2572')
func_2574_call = mutated_mod.get_global_var('func_2574')
call_3301 = func_2572_call()
call_3302 = func_2572_call()
output = call_3301
output2 = call_3302
func_3303 = relay.Function([], output)
mod['func_3303'] = func_3303
mod = relay.transform.InferType()(mod)
output = func_3303()
func_3304 = relay.Function([], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3308 = relay.var("var_3308", dtype = "float64", shape = (13, 2, 7))#candidate|3308|(13, 2, 7)|var|float64
uop_3309 = relay.cos(var_3308.astype('float64')) # shape=(13, 2, 7)
func_2453_call = mod.get_global_var('func_2453')
func_2455_call = mutated_mod.get_global_var('func_2455')
var_3312 = relay.var("var_3312", dtype = "float32", shape = (1024,))#candidate|3312|(1024,)|var|float32
call_3311 = relay.TupleGetItem(func_2453_call(relay.reshape(var_3312.astype('float32'), [8, 16, 8])), 1)
call_3313 = relay.TupleGetItem(func_2455_call(relay.reshape(var_3312.astype('float32'), [8, 16, 8])), 1)
func_2882_call = mod.get_global_var('func_2882')
func_2883_call = mutated_mod.get_global_var('func_2883')
call_3318 = relay.TupleGetItem(func_2882_call(), 0)
call_3319 = relay.TupleGetItem(func_2883_call(), 0)
var_3324 = relay.var("var_3324", dtype = "float64", shape = (13, 2, 7))#candidate|3324|(13, 2, 7)|var|float64
bop_3325 = relay.floor_mod(uop_3309.astype('float32'), relay.reshape(var_3324.astype('float32'), relay.shape_of(uop_3309))) # shape=(13, 2, 7)
bop_3348 = relay.floor_divide(bop_3325.astype('float32'), relay.reshape(var_3308.astype('float32'), relay.shape_of(bop_3325))) # shape=(13, 2, 7)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_3361 = relay.TupleGetItem(func_2804_call(), 0)
call_3362 = relay.TupleGetItem(func_2806_call(), 0)
output = relay.Tuple([call_3311,var_3312,call_3318,bop_3348,call_3361,])
output2 = relay.Tuple([call_3313,var_3312,call_3319,bop_3348,call_3362,])
func_3366 = relay.Function([var_3308,var_3312,var_3324,], output)
mod['func_3366'] = func_3366
mod = relay.transform.InferType()(mod)
mutated_mod['func_3366'] = func_3366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3366_call = mutated_mod.get_global_var('func_3366')
var_3368 = relay.var("var_3368", dtype = "float64", shape = (13, 2, 7))#candidate|3368|(13, 2, 7)|var|float64
var_3369 = relay.var("var_3369", dtype = "float32", shape = (1024,))#candidate|3369|(1024,)|var|float32
var_3370 = relay.var("var_3370", dtype = "float64", shape = (13, 2, 7))#candidate|3370|(13, 2, 7)|var|float64
call_3367 = func_3366_call(var_3368,var_3369,var_3370,)
output = call_3367
func_3371 = relay.Function([var_3368,var_3369,var_3370,], output)
mutated_mod['func_3371'] = func_3371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3303_call = mod.get_global_var('func_3303')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_3380 = func_3303_call()
call_3381 = func_3303_call()
func_1445_call = mod.get_global_var('func_1445')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_3397 = relay.TupleGetItem(func_1445_call(relay.reshape(call_3380.astype('float32'), [11, 7, 12])), 0)
call_3398 = relay.TupleGetItem(func_1448_call(relay.reshape(call_3380.astype('float32'), [11, 7, 12])), 0)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_3401 = relay.TupleGetItem(func_1396_call(), 0)
call_3402 = relay.TupleGetItem(func_1397_call(), 0)
output = relay.Tuple([call_3380,call_3397,call_3401,])
output2 = relay.Tuple([call_3381,call_3398,call_3402,])
func_3404 = relay.Function([], output)
mod['func_3404'] = func_3404
mod = relay.transform.InferType()(mod)
output = func_3404()
func_3405 = relay.Function([], output)
mutated_mod['func_3405'] = func_3405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_3406 = relay.TupleGetItem(func_2200_call(), 0)
call_3407 = relay.TupleGetItem(func_2201_call(), 0)
output = relay.Tuple([call_3406,])
output2 = relay.Tuple([call_3407,])
func_3411 = relay.Function([], output)
mod['func_3411'] = func_3411
mod = relay.transform.InferType()(mod)
output = func_3411()
func_3412 = relay.Function([], output)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3477 = relay.var("var_3477", dtype = "float32", shape = (2, 16, 6))#candidate|3477|(2, 16, 6)|var|float32
var_3478 = relay.var("var_3478", dtype = "float32", shape = (2, 16, 6))#candidate|3478|(2, 16, 6)|var|float32
bop_3479 = relay.add(var_3477.astype('float32'), relay.reshape(var_3478.astype('float32'), relay.shape_of(var_3477))) # shape=(2, 16, 6)
output = bop_3479
output2 = bop_3479
func_3482 = relay.Function([var_3477,var_3478,], output)
mod['func_3482'] = func_3482
mod = relay.transform.InferType()(mod)
var_3483 = relay.var("var_3483", dtype = "float32", shape = (2, 16, 6))#candidate|3483|(2, 16, 6)|var|float32
var_3484 = relay.var("var_3484", dtype = "float32", shape = (2, 16, 6))#candidate|3484|(2, 16, 6)|var|float32
output = func_3482(var_3483,var_3484,)
func_3485 = relay.Function([var_3483,var_3484,], output)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2572_call = mod.get_global_var('func_2572')
func_2574_call = mutated_mod.get_global_var('func_2574')
call_3495 = func_2572_call()
call_3496 = func_2572_call()
output = call_3495
output2 = call_3496
func_3507 = relay.Function([], output)
mod['func_3507'] = func_3507
mod = relay.transform.InferType()(mod)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mutated_mod.get_global_var('func_3507')
call_3508 = func_3507_call()
output = call_3508
func_3509 = relay.Function([], output)
mutated_mod['func_3509'] = func_3509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2638_call = mod.get_global_var('func_2638')
func_2639_call = mutated_mod.get_global_var('func_2639')
call_3515 = func_2638_call()
call_3516 = func_2638_call()
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_3518 = func_2702_call()
call_3519 = func_2702_call()
func_2453_call = mod.get_global_var('func_2453')
func_2455_call = mutated_mod.get_global_var('func_2455')
const_3521 = relay.const([[8.060034,4.135706],[1.644260,2.638512],[-1.274895,9.330370],[6.298410,5.146367],[4.840478,6.850130],[6.611638,-1.300583],[-7.583877,-4.933954],[4.695984,-1.088379],[7.777553,-0.294259],[9.788790,7.945361],[-9.357203,-4.120030],[8.212356,-0.616537],[-0.377479,-2.817601],[7.783518,5.907347],[-2.772970,2.530398],[-6.384250,-7.331046],[9.029581,3.247782],[0.165800,-9.782008],[7.301266,2.539172],[-5.094172,-6.802691],[-4.073905,1.310287],[6.929429,4.886124],[-2.826235,7.939309],[-8.343467,-0.958128],[-2.237094,-1.107424],[8.641120,6.315484],[1.273972,7.832298],[7.130558,6.820930],[-4.438739,7.609658],[2.438108,3.595727],[7.172860,-4.523381],[-8.484974,6.777980],[-0.689075,-9.412207],[-3.929016,2.216137],[6.981751,-3.782685],[-1.632243,-8.313943],[-5.153146,-6.979554],[-2.620543,8.276680],[-3.194961,-2.526665],[0.221774,3.692593],[0.918091,7.531333],[-4.941518,-8.641134],[4.081825,-2.406265],[-8.589797,-8.600569],[-8.606293,-2.208344],[-9.320633,4.921948],[5.350565,0.877095],[5.408435,1.353417],[0.151228,9.761305],[2.928992,7.280471],[-7.700714,-6.720697],[-1.540561,2.395602],[0.308407,4.039991],[2.080827,-6.575384],[-6.147985,3.445194],[-1.686520,7.391423],[0.601932,3.715120],[-5.765776,8.331707],[-2.645071,5.043721],[-0.744908,-1.072253],[-7.139692,6.560915],[-9.486748,-5.082957],[-0.007213,-1.062781],[-6.855179,-2.665778],[-3.219789,-9.526099],[-9.835354,7.171482],[3.596593,9.678030],[2.191603,4.203604],[8.276369,-7.794992],[-2.929322,0.786174],[-9.296375,-8.472261],[0.745089,4.027828],[-1.420883,-9.148221],[9.446760,-7.343543],[-3.853770,1.162764],[7.086225,0.002762],[6.485190,-0.255469],[-2.428801,-6.067820],[3.614160,-8.611724],[5.914189,6.161723],[4.082681,-8.900788],[8.316558,-7.012236],[-9.941951,-8.474916],[-5.163973,3.058082],[7.336281,-8.196378],[0.175305,-4.475301],[9.887691,8.431491],[-4.353865,-2.620978],[-2.518529,6.762691],[6.786583,9.596347],[7.640838,1.902478],[6.805679,3.088600],[-4.358452,-7.516295],[8.473992,7.499798],[4.681797,5.330498],[9.529509,-0.721340],[2.810204,2.414626],[3.680190,-1.061441],[-6.075732,-0.532751],[-3.754957,-3.069608],[5.502904,-9.122975],[-0.340235,8.115442],[-5.735590,3.758355],[7.640708,9.789522],[9.744288,0.634596],[0.908013,3.384885],[-9.245076,5.398472],[-9.954805,6.426480],[5.915899,-5.177377],[7.685478,7.928669],[-7.972326,0.068995],[-3.971417,-4.564612],[-5.475578,-3.990741],[-6.050222,8.497804],[-1.097011,3.939842],[2.019011,-7.078657],[6.261012,-4.876092],[4.968144,-5.156004],[-5.061183,3.129846],[0.049540,1.853397],[9.937670,3.386143],[9.140885,-0.113303],[-0.262535,-4.745708],[6.784660,-4.847955],[0.790745,6.980469],[-3.164488,3.387111],[-0.222424,-7.480962],[-6.402694,4.600396],[7.480443,4.210369],[1.238500,-8.396365],[-3.348301,4.656267],[-8.732331,-7.018636],[-6.511228,-6.844477],[4.402511,-6.545618],[-6.728319,7.644298],[-7.126773,-4.684872],[-1.838935,-0.099590],[-5.647451,4.990461],[-2.655705,-0.309440],[-3.882102,-2.863060],[-4.395974,8.936821],[-3.534115,1.050751],[-0.236439,-7.873077],[8.436682,1.347428],[-6.682417,-4.945025],[-9.355716,0.845379],[-0.579964,1.816676],[-9.804921,-1.287668],[-8.667183,4.334000],[5.442304,5.245423],[2.609180,-8.678783],[2.437522,-4.775043],[5.900847,-5.177029],[-5.469844,-4.881122],[2.266295,9.145412],[-2.358291,-1.412240],[-1.292565,1.933929],[6.604969,5.307560],[-0.128040,5.435883],[0.771972,-3.630600],[-4.889337,7.143430],[-0.784592,-3.622596],[4.287574,-3.975819],[3.480776,3.675350],[-3.657064,2.992113],[7.409912,-4.107167],[-5.569501,1.791118],[-6.306574,-4.913439],[-8.641975,0.159347],[-4.382424,-3.196434],[-5.188364,8.509787],[-3.679717,6.144694],[3.558613,-4.210241],[1.644886,5.213208],[-5.953300,-2.819183],[-8.206619,-4.008116],[-3.300277,1.877567],[5.668196,-5.175446],[-6.490236,9.926979],[-7.674100,4.050035],[4.684130,3.114826],[4.200927,-1.213141],[8.143131,-8.898411],[6.777892,2.439846],[-9.371447,-5.345673],[-7.546075,4.075837],[-1.393760,8.284438],[8.264503,0.977775],[-4.737148,-5.041886],[8.850958,-1.905576],[9.709158,-0.219293],[3.221863,-2.979606],[-2.010336,8.106580],[8.290311,-3.511668],[4.259853,0.845068],[-9.592262,4.124402],[0.481713,-0.711892],[-3.577571,8.349204],[0.244174,-5.513990],[4.276430,4.243929],[-1.521845,5.307827],[8.991555,8.199144],[3.449395,-1.293556],[1.272076,1.672341],[5.641189,6.229420],[-2.495741,5.677475],[-7.574839,-1.683031],[-8.278878,-4.309412],[-3.292331,-5.644098],[1.754332,-2.693599],[-5.852632,-0.662907],[-0.436467,-7.985978],[-5.624977,7.772902],[3.567218,-4.057040],[-5.687549,8.463120],[-3.657011,3.805445],[7.083182,9.931626],[-5.425311,-6.009420],[-2.373985,-7.870262],[-5.842890,-8.734156],[4.888450,5.978857],[-7.351005,-7.440692],[-5.409343,3.153936],[9.378947,5.236196],[-2.807554,8.663020],[-7.586610,-0.664434],[3.664689,9.900267],[7.070700,-9.282372],[4.867454,1.273448],[4.260137,-7.784228],[-4.842845,7.788922],[2.326007,-8.664223],[4.992075,-4.211090],[7.194344,-1.292375],[6.513849,-3.822963],[5.384806,1.231185],[-9.207499,-5.096906],[3.254680,6.296500],[-9.251666,9.246090],[0.284634,2.796780],[-2.278535,-5.280560],[-7.993727,-6.478788],[-2.263178,1.607976],[5.338544,-7.077626],[8.168234,6.432922],[-5.500722,-2.736863],[8.076864,-4.440322],[-4.711469,0.185840],[4.457401,-5.147544],[-4.589330,5.689542],[-0.744378,-4.015713],[-1.092685,0.685528],[7.513287,-0.099096],[-0.633956,-4.156738],[-7.643374,-5.065593],[1.158449,4.511199],[-0.756191,-1.119170],[-5.566583,2.832821],[-5.068749,-9.663771],[6.884598,1.997796],[6.355042,-4.430190],[-2.004666,7.696931],[0.740549,2.530639],[-6.608329,9.483084],[3.992824,8.530608],[6.440451,-1.283054],[3.344871,-4.578280],[-9.754172,2.338416],[2.283355,8.670487],[3.173784,9.945856],[0.805052,3.823034],[7.306231,-9.923439],[-9.622106,4.971482],[-2.424075,-5.788823],[-2.270264,-9.066576],[-8.301586,-5.367482],[2.848269,5.294843],[4.949057,1.905379],[-7.799601,-0.384897],[3.400228,-4.736591],[-5.091591,-0.990622],[6.073523,-3.452391],[2.632714,-8.507943],[9.995927,-4.965175],[5.937108,3.775153],[-2.139188,2.359022],[2.866406,-5.758178],[-6.559424,-7.972234],[-6.315410,8.950668],[5.328178,-0.231363],[8.357214,-6.366689],[1.118588,0.767641],[0.757825,1.778339],[-6.629610,-8.777764],[-8.836240,-1.741590],[0.011265,-2.780805],[6.863082,4.819494],[2.473766,-8.921297],[-7.119109,6.578088],[2.044788,-2.446378],[6.020019,-6.019407],[-5.996680,9.927566],[0.697292,1.060176],[9.845440,2.379764],[-0.769167,5.147040],[-4.846479,-6.296548],[3.061329,-9.869808],[-0.623081,4.727723],[3.230573,4.650109],[-5.260673,-4.870315],[7.243636,-0.455324],[3.497302,2.555464],[-7.739642,-7.277966],[-4.749371,3.892231],[-8.569484,-7.144651],[4.333372,3.442346],[3.948499,-1.754618],[0.257970,-1.707989],[0.542493,3.801207],[-4.856654,-2.346469],[-0.433398,4.112565],[2.836393,-6.776816],[-5.568219,-9.831982],[-4.238416,-1.429366],[7.291342,7.378946],[-9.634410,1.087994],[-5.459342,-0.072943],[4.563825,9.362580],[3.284753,1.650415],[2.998777,7.166299],[-0.186682,9.746961],[9.256588,9.923393],[4.165292,9.775210],[-8.655634,1.670791],[-5.856020,3.668575],[-0.827421,5.537853],[4.829544,-0.643904],[-5.725303,-1.883078],[1.597832,8.759230],[-7.903853,8.059008],[3.837994,0.378947],[0.116690,-9.212016],[-2.466546,-4.861031],[-5.999757,1.435038],[-0.811096,-1.893474],[0.405228,2.921181],[1.630149,0.788101],[3.855527,3.985204],[7.340790,-5.279287],[9.913550,-9.036436],[-6.605192,-3.642623],[-9.821665,-4.635694],[4.600828,6.864048],[-9.666214,0.306502],[9.100934,8.716191],[-8.950784,5.717190],[3.952084,-4.877523],[-5.016783,-0.937069],[0.056631,3.804594],[-5.899743,-6.871876],[4.972740,-3.859016],[0.306854,8.628641],[-3.738605,4.689737],[1.986483,4.508841],[6.047928,7.451646],[-4.193034,-0.579515],[-4.479091,-7.809130],[-3.932171,-8.504274],[-7.591535,0.231555],[-1.620701,1.262353],[6.439258,6.807760],[7.394433,8.357346],[2.865496,0.966650],[-4.463355,1.221253],[5.958360,-2.018804],[3.789974,8.965468],[3.363945,1.887698],[9.570939,7.914616],[1.818472,6.954349],[8.405430,6.236618],[5.626893,-5.679693],[8.781564,-5.055131],[5.460234,-9.268895],[5.285657,5.798364],[-6.826845,0.483505],[0.427478,-8.921303],[0.542313,2.114087],[-9.592503,6.680026],[4.411165,9.042494],[-0.169362,-4.989457],[-0.691594,-2.025928],[-5.955114,5.707520],[-9.970304,8.297811],[7.848963,-1.293029],[6.036176,0.157105],[0.270386,-4.624515],[-5.279616,3.653178],[6.791800,3.992751],[-1.185817,-7.975474],[6.507156,6.153644],[-1.881191,6.575800],[-1.096946,-9.476849],[7.733298,4.296094],[5.368644,-9.356532],[2.437261,-1.363579],[1.609602,9.578988],[7.046506,-3.910731],[7.013187,-6.635116],[-1.550301,1.071444],[3.668504,4.265506],[2.098380,1.567995],[-8.103449,-4.843383],[2.545692,-8.676442],[-1.997965,-3.450622],[8.117221,-1.652439],[-2.917973,-6.359925],[-8.666427,1.129306],[-4.892502,9.046394],[6.216513,-5.592568],[-4.085253,-8.120797],[1.682497,-9.797659],[-0.621487,0.587559],[6.328132,-5.141021],[-2.789201,5.907378],[-1.124089,-2.696822],[0.989753,-1.502150],[9.344648,-6.690922],[4.185260,1.431146],[2.583539,2.596063],[0.953253,-1.451904],[-2.258465,-0.355567],[3.416332,-3.122039],[9.910125,-8.329773],[-1.394859,1.365403],[6.237349,6.463113],[-1.471169,2.669183],[-7.993092,1.990265],[4.570869,-0.105831],[-7.084201,-6.569095],[-8.976802,7.559342],[-4.152342,-2.511435],[-1.890153,-1.167515],[0.659718,8.695932],[-8.170421,-4.955970],[6.148496,-2.295503],[6.873068,-6.758030],[-4.044344,4.344477],[0.603525,-1.511238],[4.717129,-9.953943],[-0.715971,1.165231],[-3.673030,-6.056319],[-6.468926,7.672245],[-5.232679,-6.548509],[2.306540,-2.198531],[-9.306227,-4.520087],[-2.931261,7.931143],[-5.707103,-7.346116],[-3.595139,-7.195370],[-1.725761,8.161100],[0.247023,-3.756216],[9.368441,2.118965],[0.730772,-8.256350],[-3.831879,-9.133045],[0.847804,-7.558469],[4.613102,-3.671125],[-0.880148,8.436386],[5.220279,5.346077],[6.046744,0.255379],[9.221490,0.039779],[-5.297968,-6.650487],[7.366547,3.339660],[-2.746830,-1.238824],[-0.759608,2.051239],[1.675407,3.526796],[7.655649,-0.398831],[-8.595995,6.947227],[-5.586247,2.197044],[-8.371319,3.329304],[-0.775477,-7.109780],[-0.107449,-8.134347],[-0.249083,-9.817913],[-2.901026,-3.708626],[-8.801655,8.787338],[-1.877571,-4.759627],[5.795861,6.007654],[9.818447,9.954102],[-9.828199,-7.021606],[-7.599447,9.633209],[-0.602273,5.545894],[-0.141939,2.465072],[-5.484606,4.007831],[1.579514,6.472279],[6.209956,2.154256],[-2.816577,-2.573109],[-2.214529,2.809991],[-4.436846,9.471440],[-9.591146,0.565014],[2.025232,-5.172165],[7.525658,-7.462113],[7.797943,-7.791486],[7.545740,-3.349176],[-3.528510,-1.898368],[8.713450,-3.858725],[-5.858486,5.327108],[-2.485464,7.117203],[3.245588,0.080994],[-6.108531,8.423773],[7.264427,-8.342159],[6.626900,-3.118670],[-4.580450,0.531471],[3.306261,0.324807],[4.406386,-9.801446]], dtype = "float32")#candidate|3521|(512, 2)|const|float32
call_3520 = relay.TupleGetItem(func_2453_call(relay.reshape(const_3521.astype('float32'), [8, 16, 8])), 0)
call_3522 = relay.TupleGetItem(func_2455_call(relay.reshape(const_3521.astype('float32'), [8, 16, 8])), 0)
func_3507_call = mod.get_global_var('func_3507')
func_3509_call = mutated_mod.get_global_var('func_3509')
call_3530 = func_3507_call()
call_3531 = func_3507_call()
func_1627_call = mod.get_global_var('func_1627')
func_1629_call = mutated_mod.get_global_var('func_1629')
call_3545 = relay.TupleGetItem(func_1627_call(), 0)
call_3546 = relay.TupleGetItem(func_1629_call(), 0)
var_3547 = relay.var("var_3547", dtype = "float32", shape = (512, 2))#candidate|3547|(512, 2)|var|float32
bop_3548 = relay.logical_and(const_3521.astype('bool'), relay.reshape(var_3547.astype('bool'), relay.shape_of(const_3521))) # shape=(512, 2)
const_3556 = relay.const([[-4.254728,7.658211],[-5.448208,-9.078207],[-0.894435,8.554429],[-9.814213,1.856140],[-8.684577,7.820756],[-4.491082,-1.560272],[-2.070890,3.706039],[-0.406155,1.375990],[-9.427806,-9.331994],[-4.081590,9.540076],[-4.871233,2.362042],[5.836026,-1.424064],[-6.639555,4.301403],[-9.761990,-6.341313],[1.992112,8.112457],[1.289165,-7.473094],[0.393100,-4.294661],[-9.265169,0.166129],[-0.896228,5.676297],[2.079717,-8.800270],[2.451070,-6.528595],[4.192475,6.798347],[-5.478085,-3.498327],[4.931729,3.823280],[1.965422,-2.600102],[-9.165552,-3.572232],[-6.850068,-2.400597],[9.729663,5.082531],[-4.735102,-3.638651],[5.352738,-4.256485],[3.624635,0.768402],[1.153283,1.931021],[-7.471375,-2.874981],[5.269567,-5.591905],[-1.859215,-4.594459],[5.658029,8.388386],[3.087568,3.259012],[9.109700,6.146671],[-1.953939,6.750789],[5.017523,-3.548622],[-5.184672,-4.299971],[3.250913,6.078786],[7.467017,-8.688724],[9.652415,-7.533728],[4.214299,3.606828],[0.538653,3.122567],[7.940913,-0.228913],[-9.957381,7.319289],[4.290279,-8.355846],[-2.031882,2.286820],[6.610506,-7.964743],[5.517805,-9.394195],[-5.657819,9.389545],[-0.009327,4.181567],[1.377339,-6.163675],[-7.147353,-1.373744],[-6.601919,-1.456599],[-7.046946,-6.397062],[8.086339,-3.036812],[-0.131322,-7.968332],[6.899383,-6.528598],[-6.181593,5.480195],[2.600981,2.853589],[2.540143,-2.249946],[3.975937,-9.835057],[-2.425090,2.596792],[9.689408,-9.657713],[-4.747975,-2.940694],[-7.839589,7.730542],[-8.854568,-3.810412],[5.251272,4.420931],[9.359943,-7.152293],[5.892065,-6.614898],[4.967044,5.155921],[0.417492,-1.720979],[-0.052458,0.549113],[-5.820525,-3.603146],[-0.355326,-5.532994],[-5.299582,-2.187497],[1.503313,-3.597320],[-3.244966,-8.941358],[1.984957,-3.444971],[2.727722,-2.483598],[-4.452124,-0.783867],[3.198743,8.027909],[9.593250,8.578722],[-1.922359,1.827164],[-4.383565,-6.225578],[-0.598299,-0.812589],[-6.103413,2.623971],[-9.128879,-3.745914],[8.650384,6.215537],[5.133281,-5.658184],[-8.202704,-0.635492],[-2.668555,5.530610],[-3.325841,2.691766],[-9.131755,-9.289734],[-0.557286,7.532885],[1.505627,8.900753],[-9.731138,4.029025],[-1.721340,0.290211],[2.099614,8.609251],[2.743715,-5.077270],[-6.373762,7.870647],[-5.835750,8.481964],[0.109041,5.457644],[-8.497967,3.904254],[4.098283,-5.859643],[9.159663,-8.975122],[-6.845512,-1.634227],[-0.019023,1.829056],[-8.265632,-2.299746],[-6.196209,9.975433],[-6.714146,-2.990727],[-5.760717,9.967580],[0.766765,3.490476],[7.880574,0.742620],[6.940744,-8.243211],[7.565407,-1.602449],[-4.609529,-9.023458],[-9.512240,-8.179910],[-9.097426,-0.227134],[-3.487901,-3.820679],[7.088357,-3.511945],[0.081667,-5.555604],[3.937498,2.907274],[-6.888060,-7.662057],[-7.004791,9.590210],[9.800348,5.553183],[0.069617,-1.480393],[1.582934,0.345397],[-0.210107,-6.556792],[1.906314,-2.973408],[2.116038,7.496656],[4.780160,-2.222333],[-3.895556,-1.876882],[4.743685,2.504139],[0.954374,-9.969786],[-5.530979,-3.396573],[-5.377240,3.651058],[8.172902,-4.656527],[9.517651,2.508624],[-4.846703,-6.498606],[8.471931,-5.963642],[-4.922157,4.182094],[6.165272,-6.550601],[7.135857,-5.797929],[7.720108,-9.161039],[9.549301,3.085554],[-5.202952,8.705126],[-2.226290,-0.163300],[-5.512478,-3.281702],[-0.185466,7.371251],[-4.220275,-1.964317],[-6.364325,0.092345],[-8.855805,-1.488617],[-4.498988,-1.300730],[-0.758748,3.301335],[7.395583,8.633915],[-9.743021,-1.584527],[7.025469,-7.221536],[3.730009,-1.884851],[8.640542,-0.235759],[0.032332,8.429096],[-0.090449,-9.910855],[5.731213,-8.464651],[5.680999,2.194989],[0.229287,2.628856],[7.071314,-4.387859],[-9.909896,-6.104442],[-1.348052,9.845158],[7.481350,-7.312945],[-2.180386,2.209249],[-2.459914,-3.178463],[1.622243,-4.272181],[2.809536,8.997484],[7.267317,6.737294],[-5.146493,-9.291792],[-4.410801,-3.250857],[-6.639296,-7.200673],[-1.697472,2.175385],[6.534482,-9.859543],[7.522743,6.465415],[-9.919370,3.737576],[8.636721,2.540303],[-5.439751,-0.672080],[2.927098,-2.064829],[7.125601,-1.206136],[-7.654879,8.541166],[2.021948,-0.056615],[-3.276778,8.369747],[2.905868,-1.586281],[-2.763258,-6.912123],[5.121164,6.037724],[-8.182998,0.002596],[-6.653173,0.134010],[1.424306,-3.521623],[-4.790370,9.523284],[0.326299,-7.432155],[3.268916,5.413629],[-3.825841,-3.220388],[-5.495458,1.236346],[1.200781,7.083912],[-6.188448,2.665854],[5.004042,9.341368],[-3.293797,-6.368929],[0.269973,-9.088943],[3.296879,-4.648281],[-1.818884,-3.645385],[3.902264,8.981159],[-0.322994,-8.260903],[5.103419,-2.257380],[-5.861375,-6.465322],[-3.210460,-8.456990],[0.943108,-7.803793],[-8.791160,7.122884],[6.797744,2.828441],[3.013955,4.106143],[3.280507,-0.144640],[8.938577,3.031420],[-4.355804,1.504656],[-2.273668,8.489896],[-2.719695,5.605148],[-1.139078,2.050336],[-3.021519,-4.850374],[8.838060,1.811439],[-2.326387,1.474008],[-0.346761,2.678918],[3.042554,4.920496],[-3.339680,6.818408],[-8.248502,1.416026],[6.947067,-5.539403],[9.832219,9.736046],[-5.050195,-4.839578],[5.178293,3.114898],[-4.445733,-4.748290],[6.474704,-5.384124],[-0.784934,-8.608004],[-7.822515,-4.910586],[6.002549,1.118098],[7.548723,3.443337],[2.840743,-5.093132],[-7.434422,-8.068418],[-5.539763,-7.883587],[-6.880426,3.958779],[-2.259308,5.694374],[4.908500,4.939791],[-1.890880,-9.827080],[3.610220,1.093865],[7.366523,0.743083],[0.644380,-6.857127],[5.695366,4.403505],[0.266206,-1.471619],[6.443331,-6.604444],[7.860084,5.273123],[-3.274881,-7.264256],[1.133174,-5.347791],[1.472359,-3.563317],[2.134248,8.147511],[4.935379,-1.818766],[1.452901,9.394732],[-4.753005,-7.997493],[0.027072,5.117328],[1.818831,4.733078],[-1.833939,2.601452],[-2.478372,-0.868973],[-2.572776,-2.275245],[8.634873,1.239568],[0.009470,0.844340],[-0.233556,-0.253209],[8.171342,-7.857204],[3.308999,9.005936],[2.009944,6.495663],[6.927177,-2.020624],[5.044846,7.679323],[6.552214,-8.402552],[6.608302,2.517909],[5.540157,4.287626],[7.344761,2.585087],[-9.717794,-2.387786],[3.379843,0.448356],[-7.059057,-4.947963],[-4.612946,-0.649287],[-8.324464,-1.591330],[-1.463005,-7.289339],[0.639734,-3.935294],[9.565894,4.639237],[-6.785760,4.472492],[-2.964741,-3.743479],[-6.398496,-5.573325],[1.112124,2.557671],[2.022145,4.507266],[1.817338,4.774453],[-4.340608,4.243442],[2.296947,9.063460],[2.288476,4.431612],[4.062311,-4.837148],[0.961267,-3.588323],[7.955811,-0.978066],[1.459571,-7.985853],[7.663315,-1.788988],[9.614627,9.579765],[-6.584195,-2.622908],[-9.787763,5.368332],[-0.755599,6.736233],[9.754290,-8.081951],[0.900002,9.916020],[-2.800262,1.799720],[-0.268320,5.847603],[-4.612322,-2.118261],[9.459072,-3.826237],[2.507469,2.747792],[7.034035,0.772037],[-4.666837,3.955979],[-8.811879,9.936080],[-7.224301,2.505246],[-7.703208,-3.491231],[9.094181,0.263780],[8.482468,-8.455776],[-1.428925,-8.886070],[0.347822,-1.736501],[3.148443,1.253533],[-1.512457,8.500298],[-3.511632,6.381692],[9.830752,5.040336],[2.900880,-8.439733],[-5.274087,1.773779],[-8.630906,-4.189976],[1.910352,-8.657640],[-0.740465,-6.907641],[-6.565192,2.407299],[-9.052218,0.180131],[-9.893854,2.406167],[2.824008,-8.428649],[-4.600249,-1.349440],[-0.018557,-8.117925],[5.953146,-7.558669],[8.151225,0.212498],[-0.800892,-1.594222],[8.567644,2.154358],[-8.387226,3.706290],[-8.016662,7.458221],[3.204368,2.315535],[-4.909216,2.374103],[-2.450819,1.430854],[5.624470,1.067077],[4.764123,-7.933223],[5.281315,-4.982770],[-9.314069,-9.936399],[7.261558,-9.266114],[4.253328,-6.894056],[4.938281,-8.652551],[-0.561990,3.213473],[-9.628416,5.101456],[-6.023216,-1.547826],[7.449014,1.847998],[0.920492,-9.260128],[4.332549,4.500893],[8.877510,-8.374099],[-4.040573,-8.637583],[-0.084879,-0.067110],[5.540739,-5.680978],[7.113403,0.324922],[3.075589,9.895838],[-2.009904,-3.561480],[-7.978956,6.337233],[9.442246,-0.453608],[-1.554766,-6.709867],[1.299219,8.328973],[7.328423,-1.636936],[-4.444707,8.133623],[7.990771,-0.192111],[4.844750,6.546672],[3.026542,9.642882],[1.655878,-1.307794],[-0.029743,-0.548160],[3.984411,-8.957269],[-1.991156,0.247777],[6.236211,-1.215519],[7.305940,-4.338078],[2.293634,-0.235350],[-7.865933,-4.975623],[-6.029727,3.573572],[4.810422,-3.869012],[6.677690,9.687727],[7.489221,4.431980],[-4.923704,6.024828],[-6.328801,-2.834204],[-8.387546,-6.649671],[-6.838917,-1.238212],[3.006696,2.010269],[2.164796,6.140529],[9.259076,-0.006090],[-5.744449,3.578438],[-7.567060,-3.830344],[-9.109443,-4.430107],[-1.080562,-2.876112],[4.814283,8.523316],[-9.783704,-4.157869],[-8.267678,1.202902],[-9.023417,-3.656631],[5.054835,3.686325],[2.348271,-8.260732],[-3.206039,-8.783018],[-7.745157,7.162891],[4.457229,-3.659924],[-6.454428,0.303010],[2.586432,-1.866805],[7.149927,-9.471718],[-2.488712,-4.170132],[8.078034,7.956781],[5.501596,-4.599182],[-4.613894,-8.572176],[-4.628076,-2.703835],[6.707698,2.654187],[-5.405867,-4.446195],[4.298698,-7.833835],[2.904651,7.512066],[4.756522,-1.705690],[-1.676435,-2.505438],[4.347226,-4.037123],[-7.832541,-9.426512],[-8.274416,-1.177021],[4.137494,-7.877310],[5.324016,-4.346560],[8.113909,5.482039],[-1.874849,-8.873361],[8.711458,-1.376383],[8.566005,-2.427534],[1.736590,6.132714],[0.643416,-1.009227],[-1.695546,2.181823],[9.777513,-8.930616],[4.310850,9.394976],[-7.790422,-6.388110],[0.400641,-7.828034],[3.751013,-6.682453],[8.212374,-3.821538],[4.553970,4.381880],[-6.582604,9.543789],[-4.896237,-9.656430],[0.821639,0.068648],[5.668712,4.276441],[-1.621582,0.521676],[3.197602,-2.551451],[1.884015,1.104326],[2.485880,0.874247],[1.295526,0.280472],[-1.594378,8.733006],[-0.238385,0.044412],[-6.020154,-8.079238],[-1.544917,-0.142541],[9.098347,-6.596531],[4.499121,9.236875],[-5.293311,-2.500214],[3.529402,6.743598],[-0.573479,3.601976],[-8.275541,-1.351673],[-2.830143,2.164890],[5.147116,-9.054270],[4.110017,4.276001],[-9.502672,9.308994],[7.413602,-3.665435],[-0.312932,6.013228],[-3.928095,8.476541],[5.976896,9.983801],[-4.193275,2.072888],[-2.979124,-8.016474],[-2.813766,-2.333828],[-2.055163,-3.526310],[-7.722793,-4.928184],[-4.049155,5.841157],[-1.779766,6.833729],[-9.219855,5.538477],[-3.522846,-6.002631],[-5.823614,-8.446876],[4.584046,6.575049],[-5.072494,8.312554],[-0.815681,3.743907],[8.401965,6.153777],[8.403131,-6.677941],[8.930191,-8.342570],[-4.006858,-1.206396],[9.389850,1.321020],[-7.081365,-7.686291],[-9.746322,5.014587],[3.731596,-6.847214],[8.832184,5.366827],[-9.544708,-1.697565],[0.457692,8.263593],[-5.072869,5.767524],[-0.723075,-7.114879],[6.029892,-5.134745],[-5.571695,3.166124],[-8.230845,0.598570],[9.645543,5.888597],[-8.230674,-3.818460],[-6.953664,0.149343],[4.768294,5.208233],[6.071636,-8.190579],[-1.413493,1.618784],[-1.187474,9.894884],[-0.231655,-4.633710],[5.749682,9.627755],[-3.769167,8.911065],[-4.814498,2.165038],[7.098204,6.414158],[-5.101997,-6.467658],[-9.980019,7.578117],[-2.397199,-4.461462],[2.028333,-9.397913],[-4.691010,-9.249195]], dtype = "float32")#candidate|3556|(512, 2)|const|float32
bop_3557 = relay.logical_or(var_3547.astype('bool'), relay.reshape(const_3556.astype('bool'), relay.shape_of(var_3547))) # shape=(512, 2)
output = relay.Tuple([call_3515,call_3518,call_3520,call_3530,call_3545,bop_3548,bop_3557,])
output2 = relay.Tuple([call_3516,call_3519,call_3522,call_3531,call_3546,bop_3548,bop_3557,])
func_3563 = relay.Function([var_3547,], output)
mod['func_3563'] = func_3563
mod = relay.transform.InferType()(mod)
var_3564 = relay.var("var_3564", dtype = "float32", shape = (512, 2))#candidate|3564|(512, 2)|var|float32
output = func_3563(var_3564)
func_3565 = relay.Function([var_3564], output)
mutated_mod['func_3565'] = func_3565
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3659 = relay.const([[[9.522480,-5.921102,-2.036809,6.827520,-2.566534,4.483598,-0.369351,-5.738701,8.826719,-0.409787,-2.431966,3.579856,-7.972602,-8.492315,-3.396771,8.338833],[0.232633,-1.216144,-6.065871,-5.824934,-9.646849,0.583866,1.952043,5.001576,4.912610,4.900069,-8.247373,8.260860,6.640400,-5.661781,5.296059,-7.072087],[2.412354,-7.978266,-3.205093,-0.484268,-0.376391,4.711618,2.858864,-8.240323,3.374765,2.313119,-1.673191,-3.974925,-3.562226,-4.115171,-9.054260,-6.734508],[0.964831,-9.708450,3.536455,-4.930347,-0.461306,3.912895,7.080003,-9.082418,3.162791,-9.701819,-3.968650,-3.492210,5.767997,-3.807738,8.673250,6.671354],[4.749270,-2.234841,-0.256740,7.441210,7.852680,4.850482,-4.606462,0.019253,9.266005,-5.853263,-8.064617,-1.443017,4.397290,-7.906798,-3.304535,2.540806],[2.069892,-2.743658,9.879600,-9.415424,7.332407,0.326053,-5.074850,6.762003,-0.056120,0.526233,-3.008517,2.949039,3.214222,-2.705279,6.463243,5.356546],[-0.435062,5.603961,1.909132,-6.276939,2.807527,3.629071,-9.488186,3.280370,-1.921317,4.065161,-3.392908,-1.211863,-5.707377,2.898238,-0.553969,-0.312488],[1.832722,-1.573618,-2.756406,1.001144,-3.102400,0.736540,6.963234,-2.799955,0.815422,7.879604,-5.097804,5.844591,-5.490642,-2.656243,-6.166711,1.302091],[-1.265429,-6.169926,-9.526854,-4.018388,-5.296750,2.846091,-6.534670,7.316325,-5.508418,-5.231414,-2.515697,3.626445,-5.608775,-7.374022,1.892821,-4.579926]],[[8.045800,-4.388299,-6.293627,0.381897,-6.737719,5.142337,-5.019233,-3.908395,1.462826,1.784882,4.785679,-7.052581,-3.757780,-7.131867,1.500760,-9.158591],[5.147349,-8.193538,3.355194,8.695219,7.286367,4.279421,5.731372,-3.251132,-9.978706,4.859681,-0.254738,7.328772,-1.686397,-5.717278,9.933959,-3.217356],[3.595284,-4.227476,-0.578281,-2.842977,-8.297355,7.487956,-1.191561,-1.488131,3.028469,-7.948220,-8.763587,0.990673,9.623329,-4.830002,-2.054420,6.945867],[1.804236,-3.493685,7.181095,3.181814,-9.280685,-0.820800,-7.161594,7.919829,-5.885376,-0.007850,-3.513274,4.462949,6.474622,-9.511406,-0.160372,-6.243200],[7.608271,-8.216089,4.664292,3.794505,-2.550560,-6.160061,-0.661517,4.607402,8.559877,8.293185,7.202819,9.945284,-6.810478,-1.805184,-2.669613,6.063187],[4.635637,-2.123131,8.014226,4.999288,1.443835,9.344938,7.028029,-2.798108,-7.815298,-0.282346,-4.407892,-2.332757,3.704366,-7.519519,0.846817,-1.693424],[8.670958,-7.561228,-7.894360,-7.695960,1.107867,5.737882,-6.050302,-6.389094,-9.682917,-1.877801,-9.045984,7.573498,8.084263,1.758463,3.259838,-4.004892],[2.478304,-1.282370,-1.656105,0.429387,-2.579244,-8.125152,5.391348,4.393588,-8.033523,-6.039819,-7.443224,-9.376166,2.217859,6.960458,8.732713,9.342881],[-0.428885,-6.503527,3.430721,-0.410019,5.012618,-8.213271,8.864984,-7.786599,-7.679967,3.690868,-7.216688,-2.972806,6.858865,2.390899,1.540567,6.858138]],[[-4.533466,-5.312985,-5.973678,6.938592,-1.030893,-6.456632,6.312242,8.003271,5.608944,-7.104803,-9.393656,-8.842948,-5.086700,2.785188,-3.141506,6.392126],[-1.630743,-5.968046,7.564336,-4.358521,-6.415019,2.465185,7.023252,5.474843,0.422920,9.463251,-5.787032,-4.309482,3.783480,9.031502,-5.348076,-6.789938],[-4.382444,2.091779,-5.447382,9.951649,-3.555767,-0.374149,0.195103,2.273456,3.232882,1.777707,-6.413904,4.284353,2.125982,4.687575,6.940675,-3.851468],[4.826925,2.128370,-1.608417,-8.553176,-9.766891,-4.004566,-2.872072,-2.798422,-9.508276,0.175246,2.306274,-0.520922,2.908022,5.372620,1.700779,1.764171],[7.522893,-1.774833,0.964444,1.585990,6.455559,-0.506701,3.195905,-7.032770,-8.750854,-3.724061,-5.834647,-5.511129,-9.184217,-8.461501,9.249542,-6.987439],[3.860944,-5.996656,9.608398,-6.200351,-9.790486,-9.582235,4.531927,6.938149,3.247029,-7.852111,5.792109,9.140365,-5.461675,7.999122,1.993671,-2.693073],[4.021860,-4.429219,-4.833723,4.127191,2.699057,-5.690574,-9.968536,-3.032495,1.081682,5.445804,6.150444,3.749789,5.546003,3.242378,-2.320341,5.374328],[3.364187,3.287177,-8.572828,-8.673268,-9.567429,-1.373170,-4.215906,-9.340147,8.098859,-0.926497,2.355717,-9.720127,8.232950,1.289606,-4.258735,7.506754],[-3.982640,5.343954,7.734647,-6.144401,1.272505,6.331777,3.936437,6.293689,9.265455,9.112657,1.562090,6.236943,-7.587033,9.368680,7.896380,-7.446821]],[[2.454947,-3.029052,8.387652,-0.242608,-4.413733,-2.142516,-2.629811,-9.093410,-3.071790,-8.646769,-8.115147,-0.446385,-5.045652,6.553476,-1.462970,-6.224390],[5.453017,-2.653079,3.326200,6.256844,-6.640565,-1.158620,-4.965067,1.032495,-3.852606,-7.965963,6.209530,2.410023,-2.748155,-3.718389,-3.149355,-6.337985],[4.789623,-1.748741,-6.456045,-8.261090,-8.888413,1.806290,-2.772297,2.081225,-1.744283,3.347543,-5.925244,1.672133,4.782331,7.318055,-7.158426,1.766831],[-1.744121,0.593995,-7.340525,-7.800245,-0.057446,1.814095,-1.437695,5.173314,-3.718560,-8.854572,-0.982396,-4.987443,1.850986,1.730329,7.419517,-6.760277],[1.232580,-7.180308,3.057843,-3.262455,-6.160377,-6.821948,-8.761403,1.769238,-8.242376,9.361012,-9.743303,-0.906077,0.484146,7.751086,3.089119,-5.317670],[3.981866,-5.624697,4.998628,-5.706713,-9.044329,-5.373026,8.411421,4.970455,-3.779718,-2.784975,-7.916492,-1.520382,-1.828140,0.905802,5.424247,-1.747793],[-5.131574,-2.195098,4.164098,-9.202643,2.870884,-0.163471,-0.968700,4.022673,-3.755689,0.799056,-3.371789,-3.929246,-6.897388,-5.878251,-5.071726,-4.345289],[4.387416,-5.556358,-4.251032,-8.902284,-8.649024,-5.332700,4.895127,8.112739,7.760134,-5.469709,-3.160358,-9.283711,-1.772857,7.691704,-5.124489,-0.532148],[-0.996966,-9.131777,7.439787,-2.995250,-2.128312,-9.807759,-0.269671,8.423665,6.923817,-9.765297,7.127597,-0.126948,4.745410,-9.050704,2.802021,-3.868148]],[[0.311504,-3.397315,2.988515,-3.279747,4.998846,3.331111,-3.301785,3.355814,1.636689,-4.227238,6.397166,-1.599563,-3.361519,-2.322271,7.479148,5.931388],[6.936713,7.039074,-3.885200,-2.110080,0.125176,-7.829665,4.973629,0.535373,9.280349,5.503504,-6.148898,1.768133,-9.772541,-9.734279,-9.967428,-5.423891],[-6.526559,1.804054,-5.309622,-3.110840,3.813398,3.195421,2.833957,2.103586,-8.556839,4.824230,9.923657,0.161191,-0.305149,8.197564,9.992742,-5.349725],[-0.326089,1.766590,-5.471064,-4.301610,-5.961608,-9.628319,-4.450212,-5.587272,-2.115412,6.986325,-1.215586,7.551568,-3.063357,-3.604378,-0.695569,9.087681],[-2.932931,2.695934,5.600810,-9.969704,-8.755826,3.424460,6.759851,8.267335,4.767499,8.943132,-9.252594,-1.338895,0.376511,-6.101173,6.650078,-1.418168],[-5.899589,-3.563890,5.491599,3.601041,0.670236,-1.368859,-2.556682,-2.443135,-5.689008,-6.708148,-7.326753,-8.092601,3.708966,-6.290983,-1.070733,-5.245553],[-6.353796,-9.202571,2.003844,5.865446,-7.209296,7.412635,-5.129841,-7.449498,8.864910,8.925637,8.823482,-5.851938,-5.016521,-8.400341,5.494387,-4.253956],[5.936202,-7.078060,-9.364672,-3.492243,6.165510,-9.734695,1.315879,6.488569,8.876178,5.195718,-9.686565,6.238961,-3.418336,3.806781,-7.128672,2.585174],[1.435802,-7.209334,-2.533311,-0.486866,3.911005,1.668340,-5.895904,2.606582,0.800645,-7.760241,-5.459397,-9.165632,5.628908,7.416530,0.973793,-6.863607]],[[-1.017862,4.565377,1.462905,-3.323277,-2.289948,3.626600,-4.275567,-8.002370,8.064904,8.313694,-7.908980,-6.990900,-5.775766,3.983981,8.553800,-7.294847],[-4.468154,-7.852727,3.494521,-2.629113,-7.631274,-1.190394,8.506059,-9.359568,-7.683203,-5.741229,9.217708,-7.931331,-5.766599,-5.494987,8.816264,3.078227],[-0.228513,2.082353,1.873007,7.323542,-5.603716,-5.580301,-1.255889,-4.144227,8.043998,1.308032,-8.507250,-1.173117,1.424449,-2.152974,3.939592,-6.846188],[0.861970,4.375048,-1.517845,-0.106944,0.733640,-5.705937,6.725293,-2.793158,9.362797,8.875020,1.631002,4.444924,-2.398276,-7.893929,1.610192,4.767381],[-4.093663,2.188939,6.764837,5.934437,8.116921,-3.832506,0.763036,9.233811,-2.111682,-6.110120,-6.954459,-3.877830,1.749452,-2.906711,-0.812566,3.276951],[-5.561835,0.728835,-4.010883,-1.983320,-5.094695,-0.833912,9.454539,-6.262221,-2.636538,-6.465216,-9.288696,-4.904464,4.156714,4.293929,-1.808173,-9.903171],[1.281186,2.676566,1.844793,9.187257,-4.295486,6.584613,0.076662,-6.876754,-4.212003,-2.903545,7.820541,-6.810262,0.821003,-5.504721,-2.404123,3.694872],[-5.537427,5.469688,-3.361824,3.662955,-1.004112,4.679626,5.717831,0.564896,-8.552849,-7.783443,-1.569645,-5.769699,-5.270286,-4.880835,0.025873,7.699871],[-2.162025,5.412351,2.460834,3.743720,2.545990,-8.422813,-9.255832,-2.438613,2.607796,0.282572,1.569769,-7.118424,-1.919123,-8.219258,-2.257353,-6.059404]],[[-8.861677,0.105155,-5.112698,0.433538,5.817718,-8.501584,-1.967795,-4.373681,-6.235155,6.906717,4.782288,5.303308,-5.920113,-8.299761,0.746072,4.084494],[-8.911650,-1.651924,-7.054548,7.347009,5.804732,8.516071,-3.722377,4.158988,4.083660,5.721100,-1.032088,2.687059,-7.731715,1.940487,-2.124664,-7.695018],[-3.197667,8.021180,-5.751785,-1.716474,4.978661,5.170008,-2.309739,-4.343582,-2.894643,-7.522144,-2.012516,4.309692,1.258741,5.741665,-9.535206,8.480456],[-7.519678,5.434385,0.613955,-5.888513,3.532497,-4.163983,-9.321532,-9.294407,-6.767952,-7.543400,-8.687207,-4.265723,-7.942732,8.655863,4.077684,7.863232],[7.980808,-2.601002,1.458905,4.811629,1.557119,-6.899501,-1.957610,-8.003277,5.248151,-3.367404,-2.153040,-6.315414,-3.890034,0.401578,-4.174297,4.063789],[8.304375,-7.996630,-4.448449,-1.614878,0.030866,6.928116,1.331238,4.954751,-8.227119,-4.580953,-4.473826,-3.676894,-3.203244,-6.238553,-8.404990,-7.363964],[2.060664,-4.845613,5.405149,9.811876,2.368705,-2.439706,-4.305660,-9.172742,1.735189,-2.469669,0.458061,-5.153350,-8.810973,-3.546175,-4.468954,2.672923],[1.583013,1.736811,-0.991558,0.904578,-6.626343,-6.469293,9.522096,8.302798,8.623974,-1.938211,-8.486705,-2.626036,7.706306,-3.350178,6.724955,-3.955117],[9.916744,4.283321,-5.227588,-1.716048,8.172399,-9.085469,7.754505,4.972745,1.429788,9.457006,9.766667,-7.988278,-2.136852,-9.322692,-9.488411,-9.621752]]], dtype = "float64")#candidate|3659|(7, 9, 16)|const|float64
uop_3660 = relay.asinh(const_3659.astype('float64')) # shape=(7, 9, 16)
uop_3662 = relay.log2(uop_3660.astype('float32')) # shape=(7, 9, 16)
bop_3666 = relay.power(uop_3662.astype('float32'), relay.reshape(uop_3660.astype('float32'), relay.shape_of(uop_3662))) # shape=(7, 9, 16)
output = bop_3666
output2 = bop_3666
func_3672 = relay.Function([], output)
mod['func_3672'] = func_3672
mod = relay.transform.InferType()(mod)
output = func_3672()
func_3673 = relay.Function([], output)
mutated_mod['func_3673'] = func_3673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_3676 = func_1109_call()
call_3677 = func_1109_call()
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_3687 = relay.TupleGetItem(func_1605_call(), 0)
call_3688 = relay.TupleGetItem(func_1606_call(), 0)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_3712 = relay.TupleGetItem(func_954_call(relay.reshape(call_3676.astype('float64'), [11, 7, 12])), 2)
call_3713 = relay.TupleGetItem(func_956_call(relay.reshape(call_3676.astype('float64'), [11, 7, 12])), 2)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_3720 = relay.TupleGetItem(func_2200_call(), 0)
call_3721 = relay.TupleGetItem(func_2201_call(), 0)
func_3672_call = mod.get_global_var('func_3672')
func_3673_call = mutated_mod.get_global_var('func_3673')
call_3726 = func_3672_call()
call_3727 = func_3672_call()
output = relay.Tuple([call_3676,call_3687,call_3712,call_3720,call_3726,])
output2 = relay.Tuple([call_3677,call_3688,call_3713,call_3721,call_3727,])
func_3743 = relay.Function([], output)
mod['func_3743'] = func_3743
mod = relay.transform.InferType()(mod)
output = func_3743()
func_3744 = relay.Function([], output)
mutated_mod['func_3744'] = func_3744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2659_call = mod.get_global_var('func_2659')
func_2661_call = mutated_mod.get_global_var('func_2661')
call_3753 = relay.TupleGetItem(func_2659_call(), 0)
call_3754 = relay.TupleGetItem(func_2661_call(), 0)
output = relay.Tuple([call_3753,])
output2 = relay.Tuple([call_3754,])
func_3757 = relay.Function([], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mutated_mod.get_global_var('func_3757')
call_3758 = func_3757_call()
output = call_3758
func_3759 = relay.Function([], output)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3760 = relay.var("var_3760", dtype = "float64", shape = (5, 10, 4))#candidate|3760|(5, 10, 4)|var|float64
uop_3761 = relay.log2(var_3760.astype('float64')) # shape=(5, 10, 4)
func_723_call = mod.get_global_var('func_723')
func_728_call = mutated_mod.get_global_var('func_728')
var_3773 = relay.var("var_3773", dtype = "uint32", shape = (1470,))#candidate|3773|(1470,)|var|uint32
const_3774 = relay.const(6, dtype = "int16")#candidate|3774|()|const|int16
const_3775 = relay.const([-10,-8,7,5,-3,8,-1,-9,-4,9,-3,-2,-8,-7,10,-4,8,1,-5,5,9,8,-6,10,5,3,-6,4,-2,8,-7,-4,6,10,4,-9,-9,-6,5,6,-5,-7,6,5,-2,-1,9,4,3,-7,1,3,-5,6,4,2,-3,-2,-10,-8,-2,-3,-6,-6,-3,9,1,4,8,-9,-4,-4,10,7,-3,-4,3,7,4,-10,8,-1,-1,8,8,4,6,10,-3,10,1,-2,3,6,3,-6,-7,-4,3,8,7,3,1,3,-10,10,7,6,1,7,7,-7,-10,3,-2,7,4,-5,3,8,1,5,-2,-5,-2,-7,4,5,6,9,10,9,6,-10,-2,-4,-8,10,-1,-3,7,-4,-3,-7,9,-8,2,5,-1,-8,-3,7,-3,-1,2,-5,-3,10,-10,-6,-2,7,4,-1,5,2,-4,-9,-6,9,-4,8,5,-5,4,-3,-8,2,2,-6,5,-7,7,-3,-8,-2,7,2,-8,9,10,2,-2,-9,8,-5,3,1,10,2,6,-2,6,7,3,-9,7,1,6,6,-5,-6,-3,-6,-10,-10,-6,3,6,-9,-7,-2,-10,4,2,9,-2,-4,3,-7,2,-3,-2,2,6,7,-10,8,3,-7], dtype = "int16")#candidate|3775|(240,)|const|int16
call_3772 = relay.TupleGetItem(func_723_call(relay.reshape(var_3773.astype('uint32'), [15, 14, 7]), relay.reshape(var_3773.astype('uint32'), [15, 14, 7]), relay.reshape(const_3774.astype('int16'), []), relay.reshape(const_3775.astype('int16'), [240,]), ), 1)
call_3776 = relay.TupleGetItem(func_728_call(relay.reshape(var_3773.astype('uint32'), [15, 14, 7]), relay.reshape(var_3773.astype('uint32'), [15, 14, 7]), relay.reshape(const_3774.astype('int16'), []), relay.reshape(const_3775.astype('int16'), [240,]), ), 1)
output = relay.Tuple([uop_3761,call_3772,var_3773,const_3774,const_3775,])
output2 = relay.Tuple([uop_3761,call_3776,var_3773,const_3774,const_3775,])
func_3780 = relay.Function([var_3760,var_3773,], output)
mod['func_3780'] = func_3780
mod = relay.transform.InferType()(mod)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3780_call = mutated_mod.get_global_var('func_3780')
var_3782 = relay.var("var_3782", dtype = "float64", shape = (5, 10, 4))#candidate|3782|(5, 10, 4)|var|float64
var_3783 = relay.var("var_3783", dtype = "uint32", shape = (1470,))#candidate|3783|(1470,)|var|uint32
call_3781 = func_3780_call(var_3782,var_3783,)
output = call_3781
func_3784 = relay.Function([var_3782,var_3783,], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mod.get_global_var('func_2882')
func_2883_call = mutated_mod.get_global_var('func_2883')
call_3811 = relay.TupleGetItem(func_2882_call(), 0)
call_3812 = relay.TupleGetItem(func_2883_call(), 0)
uop_3835 = relay.acos(call_3811.astype('float64')) # shape=(11, 7, 12)
uop_3837 = relay.acos(call_3812.astype('float64')) # shape=(11, 7, 12)
output = relay.Tuple([uop_3835,])
output2 = relay.Tuple([uop_3837,])
func_3848 = relay.Function([], output)
mod['func_3848'] = func_3848
mod = relay.transform.InferType()(mod)
output = func_3848()
func_3849 = relay.Function([], output)
mutated_mod['func_3849'] = func_3849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3860 = relay.var("var_3860", dtype = "uint64", shape = (3, 16, 14))#candidate|3860|(3, 16, 14)|var|uint64
var_3861 = relay.var("var_3861", dtype = "uint64", shape = (3, 16, 14))#candidate|3861|(3, 16, 14)|var|uint64
bop_3862 = relay.bitwise_or(var_3860.astype('uint64'), relay.reshape(var_3861.astype('uint64'), relay.shape_of(var_3860))) # shape=(3, 16, 14)
func_1206_call = mod.get_global_var('func_1206')
func_1208_call = mutated_mod.get_global_var('func_1208')
const_3866 = relay.const([6.514413,3.401591,-9.978072,3.679330,7.989038,-7.477187,8.336806,4.973313,-9.983530,-0.428679,-4.201995,-1.052639,-8.141869,8.809244,-9.015417,9.180461,-7.852449,-8.589236,4.311804,-8.585667,-0.705764,-6.772185,6.857311,0.004058,2.756885,-5.593069,1.706103,-8.444668,5.722449,4.823259,7.997315,0.471288,-8.819943,-5.199633,-2.810270,-7.510609,1.877603,-5.403808,0.045787,-7.208290,7.311494,-6.137094,-5.620681,4.788127,2.055836,6.779722,1.507140,-0.704676,7.464421,3.183458,6.483074,-2.169431,-1.827529,0.690823,1.931776,-3.201243,3.286608,6.852570,2.215588,7.627537,6.119763,2.732261,2.801117,-3.337835,2.185755,-7.912886,-9.630405,9.906784,-8.344987,-8.457601,4.418301,-1.622358,9.050513,-0.605682,-2.329108,6.009879,-5.451176,9.077584,2.168078,-8.740072,9.734533,0.847489,-6.422830,0.539773,-3.029657,-2.560398,-6.108783,-4.178843,-9.792934,0.710897,-0.945291,-5.394412,0.662789,-3.847255,-2.064155,3.680133,-2.464546,3.873573,-1.498738,4.952694,-4.992155,-5.810943,-7.272440,-4.914627,4.372489,-3.204056,4.672241,-1.407774,-6.666121,9.879415,-9.298216,-4.563156,2.912315,0.101508,-7.271774,-2.742067,-5.608531,-1.057949,9.926125,7.863818,-3.185379,-6.067485,-9.790239,-9.525096,-7.286343,3.221682,1.858667,3.021691,4.341705,-4.707582,5.209748,-5.864550,8.159472,-0.018474,-4.532877,6.651868,5.415252,-3.897929,-3.548728,-7.494219,-0.063942,7.205966,-6.959346,-1.985708,3.736107,9.385470,-8.822987,-2.123037,-9.607443,-0.159397,-5.098209,3.597129,-5.493014,-2.245852,0.678552,0.981207,-8.445142,1.017153,3.482595,0.229710,-5.772407,0.189395,-7.027352,-1.464037,-6.516616,7.346299,-7.202580,6.879590,-4.115135,1.700625,-6.568364,2.817811,-8.089738,1.314545,1.996805,-9.420961,-8.792506,-1.978793,-7.707142,4.817200,2.666437,0.256748,-0.533540,-7.594357,-1.680348,-4.139822,-2.841434,-7.437961,-4.968009,-3.551001,-1.695053,2.819996,-9.973238,5.120711,-5.331044,-7.183804,-5.076298,2.548719,-0.901225,1.989078,4.760650,1.803506,-4.300024,-3.798905,-7.002402,-4.876189,-9.174866,2.124751,4.164227,4.159763,1.242838,9.094945,3.009117,-1.337453,3.035201,4.034050,7.859874,-0.365333,-6.992190,-6.730020,-5.326683,5.487486,-8.060205,2.446563,7.012005,2.707017,-4.135346,-0.851528,2.537574,2.215614,1.944051,-0.708015,-1.926822,-2.720485,1.843346,4.718199,5.635568,-7.477718,4.886417,5.748758,-5.751517,4.392667,2.702514,6.214076,8.795281,1.995267,2.011425,4.227512,9.119812,-6.870211,0.482944,-7.920464,-9.053190,-9.457356,-3.375284,-3.942050,3.567363,-2.302746,-7.047887,8.303713,-4.179303,-6.279615,-8.779713,4.149181,0.342360,5.975855,9.884562,1.629973,-4.951766,0.563343,7.239266,-4.293366,-9.010882,0.435966,-8.788254,-5.383905,-9.692037,-9.287078,-3.463337,-7.353496,2.737958,-2.903024,0.901615,-8.866069,-6.331815,-8.972592,0.362223,-9.576423,8.447989,-7.383455,-6.265239,4.766786,5.091581,-3.096093,9.913370,4.959014,-0.304299,-8.907895,8.959912,6.743262,-6.744039,1.446447,-3.829267,1.162429,-6.836593,3.186984,-2.523522,3.088809,-4.311442,-5.187497,-2.756708,-1.203014,8.269464,-6.085532,7.539985,-7.452111,7.994174,-1.940032,7.160022,-0.079808,7.769462,6.614465,-8.904610,-6.675186,-7.376699,-3.849853,-3.089343,7.653502,9.643373,4.092861,5.082937,9.962213,6.218707,6.062941,7.790630,-0.799273,6.776995,4.064977,-8.783153,0.721914,-0.818817,5.498164,-0.849550,-0.323559,-4.903021,7.518493,-9.488710,3.683748,-8.806486,-2.898537,-3.616030,-5.364433,-9.988589,8.354449,5.688003,6.102627,-1.257710,9.146082,5.559867,1.642310,6.398038,-5.716105,1.648388,2.784460,-2.278021,2.983550,6.746593,-0.433265,2.430216,-4.616097,-9.709114,-6.672384,5.689633,-5.666721,-0.141932,-6.131540,-4.994945,9.922231,-3.699465,1.054002,-8.103714,3.496548,-2.429302,-6.140880,4.293544,2.027186,-4.292961,0.817217,2.465144,5.822728,1.705155,2.266245,-6.362003,6.729987,1.262703,6.891369,4.907295,5.258980,-6.489154,-9.127787,2.342091,-3.908051,6.081534,6.173238,2.130101,-3.921982,-9.843527,-4.205996,-6.473677,-4.129482,-6.878941,-6.847340,-5.592912,8.783600,5.929742,3.757362,8.116277,-1.917310,8.093784,0.671261,-8.525945,7.064790,6.692045,7.619311,6.721563,-6.781921,7.994744,5.662080,-9.179717,5.966123,-6.602919,-5.972056,-7.635831,7.262877,-2.589581,-6.471044,-3.763209,-1.545837,1.559655,-6.236956,9.169267,-9.668954,1.380175,-9.865871,-5.875887,8.653775,-6.808561,6.374564,-1.946605,-7.101646,8.954049,-1.534809,-1.427891,-6.399242,-1.349042,-4.510810,9.894354,4.823212,6.619807,-4.205135,1.302453,-2.092474,-4.915429,-1.018786,-1.742193,5.655862,5.500183,-2.032767,-6.943993,7.323953,5.515062,-2.698296,-2.428887,0.496381,-2.419895,2.169745,1.733967,6.395937,4.656150,-6.285772,7.786866,-9.721298,8.625011,-4.466784,8.015269,2.188182,-3.427930,9.588317,6.929321,-4.845340,-7.974680,0.392712,0.480150,1.446283,-2.126815,9.129554,-4.063573,-5.906517,-1.167075,3.632039,-8.037829,-6.441123,7.611522,0.015539,-8.975917,-4.335511,3.167840,-6.339326,-9.997039,-6.178230,9.914889,-2.863690,4.625878,-5.443023,-8.326605,9.838937,-7.301074,4.942742,3.289723,-7.230787,-7.457055,-4.721071,-4.224964,-6.144023,0.543694,0.778551,-4.286081,-1.224696,-9.942823,5.368352,-7.657208,9.903199,-5.361579,-6.010576,2.714860,9.650871,7.096863,6.339397,-8.643559,4.941615,-8.990216,7.213869,-6.364161,-6.851251,-1.503746,7.779002,-1.662536,4.705582,7.214961,-5.725610,-2.880377,-1.477194,-0.810674,2.838070,-3.015702,-9.917083,4.513763,2.954322,4.359046,-9.775933,-8.775419,-4.082430,-2.815107,0.925598,-2.843823,-9.068028,-2.296840,-5.724566,-5.462659,6.087755,-9.387382,-2.147491,9.881418,-0.150090,4.522985,-9.903875,-2.616592,2.445334,-6.335152,8.823238,-4.956730,8.318813,-3.243920,6.055293,7.215003,8.187149,-3.369564,5.745278,-9.270658,-0.037949,-9.980934,4.550774,-5.380243,5.611650,9.930653,7.546788,-8.528642,-8.094308,-0.585089,-8.849743,8.845692,-8.574520,6.895329,9.117954,4.399899,2.331750,1.255533,-7.607262,3.816155,-9.439960,-4.823028,7.582267,3.496763,-4.160046,9.924609,2.222330,-4.691194,3.152542,-6.933319,3.454764,-7.000679,9.099653,2.352202,7.774983,-1.810328,-5.526941,5.839640,2.059462,6.233578,1.758011,-3.361279,0.126813,-9.515721,-9.693089,-8.869749,-2.701908,4.836489,-9.669392,5.146451,8.238599,6.034392,9.722484,1.708065,5.476306,-1.723292,-8.512431,-0.430413,0.879172,-0.982195,5.696209,-0.918559,8.189811,5.382188,-7.171335,-7.789934,-8.361781,2.995683,-8.232060,1.707587,-6.376230,-1.796150,-4.609003,-4.337781,7.291919,-9.763068,9.936305,-1.789806,-9.626961,-8.689042,8.678941,-7.478499,1.716925,4.093495,7.187374,2.909148,-4.104291,-2.308912,-2.304017,-0.997399,0.794286,-9.621019,5.058170,5.064806,5.858235,1.059134,-4.757581,-1.756104,1.388913,-1.108195,-1.827992,-5.376798,1.739801,-8.000561,-0.517054,-8.479257,5.769259,-4.486993,2.319552,-6.315310,-1.646756,0.382018,4.482735,-9.858184,9.810539,2.400445,-3.433778,-5.212736,-0.183976,-6.410301,-6.769199,-5.446602,3.858745,-8.935878,0.049706,7.036070,-0.795786,-6.691249,3.869665,3.013358,9.922707,-1.340712,-6.825846,-1.760137,4.904632,0.820457,5.416850,1.154789,4.376301,2.272544,-8.272418,-9.412254,-0.611426,7.330283,9.445662,-1.282032,2.291221,-2.194139,-9.359596,4.934398,2.442008,0.728253,-2.304975,-5.580945,-8.957656,-3.660509,-7.470547,-4.845696,-5.229194,-7.428957,-7.381586,-0.544496,-7.052417,5.353821,1.081474,-4.270441,-9.479898,4.508389,7.165758,-8.088193,-0.524110,-9.907966,6.721664,7.774122,-4.623781,5.398080,-3.700097,8.530870,-4.020775,6.936038,7.292221,0.324593,9.715569,-4.884888,-7.454901,8.058026,-9.236891,9.181778,-0.085814,1.747214,6.183900,3.923977,-6.843594,-3.573876,1.500722,3.761894,5.614175,-1.496194,7.863224,4.495592,8.451573,-2.972205,7.978883,6.639864,-9.780402,-6.829006,7.138649,-4.215328,-2.239576,4.152894,-8.666660,-5.109533,9.236496,1.544543,-4.339213,-1.677558,0.958214,2.560916,-7.131397,-3.373820,5.112146,-4.013489,-4.728585,-0.715039,7.599287,-0.525561,-1.965513,-4.462843,-8.816025,4.895323,-8.818032,-5.567583,-3.562937,-6.888262,6.048005,-3.763755,-6.837722,1.193729,4.713839,8.329326,9.249206,-6.961009,2.735745,9.126011,-5.595933,-9.569787,-7.042809,-8.471318,-3.199145,-8.543823,6.356335,-4.027393,8.797164,-9.346206,5.062590,-3.361461,-9.715293,6.822996,9.843851,7.284487,5.449099,-3.080971,-0.466385,-4.622162,-7.330919,-0.975036,6.855784,6.808531,7.221871,0.888503,0.436502,6.554891,8.911967,5.757163,-0.548582,-6.143217,-1.642113,6.505093,-7.891655,0.317588,-3.386628,-7.961743,-2.414377,7.791089,-9.918998,6.279212,-4.661704,3.165446,8.404973,-9.476927,5.713937,1.302759,3.891820,-1.557540,-4.760214,-6.937731,-9.783636,5.630743,-8.323603,-6.838093,0.272807,2.589890,-0.474429,8.309755,0.082598,9.700940,8.086366,2.935197,-5.302431,-6.290142,7.344555,5.933077,5.199733,5.736496,5.252381,-2.140000,0.549706,-1.058180,-6.599389,0.675994,9.748120,-7.236907,6.452151,-2.273853,-0.609168,-2.547290,6.580258,8.564190,-2.667593,2.180594,-6.809017,5.956141,4.828074,0.159891,5.476887], dtype = "float32")#candidate|3866|(924,)|const|float32
call_3865 = relay.TupleGetItem(func_1206_call(relay.reshape(const_3866.astype('float32'), [11, 7, 12])), 1)
call_3867 = relay.TupleGetItem(func_1208_call(relay.reshape(const_3866.astype('float32'), [11, 7, 12])), 1)
bop_3876 = relay.greater_equal(bop_3862.astype('bool'), relay.reshape(var_3860.astype('bool'), relay.shape_of(bop_3862))) # shape=(3, 16, 14)
var_3884 = relay.var("var_3884", dtype = "bool", shape = (3, 16, 14))#candidate|3884|(3, 16, 14)|var|bool
bop_3885 = relay.less(bop_3876.astype('bool'), relay.reshape(var_3884.astype('bool'), relay.shape_of(bop_3876))) # shape=(3, 16, 14)
func_3563_call = mod.get_global_var('func_3563')
func_3565_call = mutated_mod.get_global_var('func_3565')
var_3890 = relay.var("var_3890", dtype = "float32", shape = (1024,))#candidate|3890|(1024,)|var|float32
call_3889 = relay.TupleGetItem(func_3563_call(relay.reshape(var_3890.astype('float32'), [512, 2])), 4)
call_3891 = relay.TupleGetItem(func_3565_call(relay.reshape(var_3890.astype('float32'), [512, 2])), 4)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_3902 = relay.TupleGetItem(func_886_call(), 0)
call_3903 = relay.TupleGetItem(func_888_call(), 0)
output = relay.Tuple([call_3865,const_3866,bop_3885,call_3889,var_3890,call_3902,])
output2 = relay.Tuple([call_3867,const_3866,bop_3885,call_3891,var_3890,call_3903,])
func_3923 = relay.Function([var_3860,var_3861,var_3884,var_3890,], output)
mod['func_3923'] = func_3923
mod = relay.transform.InferType()(mod)
mutated_mod['func_3923'] = func_3923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3923_call = mutated_mod.get_global_var('func_3923')
var_3925 = relay.var("var_3925", dtype = "uint64", shape = (3, 16, 14))#candidate|3925|(3, 16, 14)|var|uint64
var_3926 = relay.var("var_3926", dtype = "uint64", shape = (3, 16, 14))#candidate|3926|(3, 16, 14)|var|uint64
var_3927 = relay.var("var_3927", dtype = "bool", shape = (3, 16, 14))#candidate|3927|(3, 16, 14)|var|bool
var_3928 = relay.var("var_3928", dtype = "float32", shape = (1024,))#candidate|3928|(1024,)|var|float32
call_3924 = func_3923_call(var_3925,var_3926,var_3927,var_3928,)
output = call_3924
func_3929 = relay.Function([var_3925,var_3926,var_3927,var_3928,], output)
mutated_mod['func_3929'] = func_3929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3992 = relay.var("var_3992", dtype = "float64", shape = (8, 5, 9))#candidate|3992|(8, 5, 9)|var|float64
uop_3993 = relay.erf(var_3992.astype('float64')) # shape=(8, 5, 9)
output = relay.Tuple([uop_3993,])
output2 = relay.Tuple([uop_3993,])
func_3996 = relay.Function([var_3992,], output)
mod['func_3996'] = func_3996
mod = relay.transform.InferType()(mod)
var_3997 = relay.var("var_3997", dtype = "float64", shape = (8, 5, 9))#candidate|3997|(8, 5, 9)|var|float64
output = func_3996(var_3997)
func_3998 = relay.Function([var_3997], output)
mutated_mod['func_3998'] = func_3998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4136 = relay.var("var_4136", dtype = "int16", shape = ())#candidate|4136|()|var|int16
var_4137 = relay.var("var_4137", dtype = "int16", shape = (16, 11, 8))#candidate|4137|(16, 11, 8)|var|int16
bop_4138 = relay.left_shift(var_4136.astype('int16'), var_4137.astype('int16')) # shape=(16, 11, 8)
output = relay.Tuple([bop_4138,])
output2 = relay.Tuple([bop_4138,])
func_4141 = relay.Function([var_4136,var_4137,], output)
mod['func_4141'] = func_4141
mod = relay.transform.InferType()(mod)
var_4142 = relay.var("var_4142", dtype = "int16", shape = ())#candidate|4142|()|var|int16
var_4143 = relay.var("var_4143", dtype = "int16", shape = (16, 11, 8))#candidate|4143|(16, 11, 8)|var|int16
output = func_4141(var_4142,var_4143,)
func_4144 = relay.Function([var_4142,var_4143,], output)
mutated_mod['func_4144'] = func_4144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_4149 = relay.TupleGetItem(func_2804_call(), 0)
call_4150 = relay.TupleGetItem(func_2806_call(), 0)
output = relay.Tuple([call_4149,])
output2 = relay.Tuple([call_4150,])
func_4164 = relay.Function([], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
output = func_4164()
func_4165 = relay.Function([], output)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3109_call = mutated_mod.get_global_var('func_3109')
call_4184 = func_3108_call()
call_4185 = func_3108_call()
func_3281_call = mod.get_global_var('func_3281')
func_3283_call = mutated_mod.get_global_var('func_3283')
const_4187 = relay.const(4.980273, dtype = "float32")#candidate|4187|()|const|float32
call_4186 = relay.TupleGetItem(func_3281_call(relay.reshape(const_4187.astype('float32'), [])), 1)
call_4188 = relay.TupleGetItem(func_3283_call(relay.reshape(const_4187.astype('float32'), [])), 1)
bop_4193 = relay.multiply(call_4186.astype('int8'), const_4187.astype('int8')) # shape=(3, 13, 12)
bop_4196 = relay.multiply(call_4188.astype('int8'), const_4187.astype('int8')) # shape=(3, 13, 12)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_4209 = relay.TupleGetItem(func_2200_call(), 0)
call_4210 = relay.TupleGetItem(func_2201_call(), 0)
output = relay.Tuple([call_4184,bop_4193,call_4209,])
output2 = relay.Tuple([call_4185,bop_4196,call_4210,])
func_4226 = relay.Function([], output)
mod['func_4226'] = func_4226
mod = relay.transform.InferType()(mod)
output = func_4226()
func_4227 = relay.Function([], output)
mutated_mod['func_4227'] = func_4227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4275 = relay.var("var_4275", dtype = "uint32", shape = ())#candidate|4275|()|var|uint32
const_4276 = relay.const([[[3,-3,7,-9,4,8,-8,2,6],[9,-2,-7,-3,5,9,3,7,10],[6,4,7,-5,-7,-4,-4,-7,7],[1,-10,-6,-2,2,7,-5,3,2],[-1,4,3,9,2,4,-1,-9,-5],[1,-6,-7,6,7,-9,-7,5,8],[-1,9,-4,-3,10,-7,9,-2,-2],[-9,9,6,-4,-8,-6,8,3,1],[10,4,7,7,-1,10,-8,-10,2],[6,-8,-4,-1,2,-2,3,6,-6],[-9,7,-3,-3,-6,9,10,-6,10],[-3,-6,6,7,-2,5,3,10,-5]],[[-1,-6,-5,6,10,4,-6,2,-1],[10,6,-10,-1,-6,-7,5,-3,-6],[6,2,6,6,4,-3,-6,4,8],[-2,10,-1,-1,4,7,-2,2,9],[-9,-1,4,-9,-9,-2,-6,-6,-2],[-3,3,-9,-7,-3,5,8,-8,-9],[3,3,-1,-10,9,3,-3,6,-6],[-6,6,-6,3,6,-5,4,-3,1],[-1,-10,7,2,2,5,5,-2,3],[3,-2,-7,-8,-4,-9,-4,5,9],[-9,-1,-10,-8,-10,-9,6,10,5],[-4,10,3,-10,8,-2,7,-9,-4]],[[-9,-8,-3,-3,-9,9,-2,-4,-9],[-2,5,-6,8,-8,-6,-9,-7,3],[4,-10,-8,-8,4,-3,-10,-5,4],[9,7,-2,-2,-7,8,8,5,-6],[9,-3,7,-9,10,9,5,9,-9],[-6,-2,7,-2,-3,-5,2,-4,-8],[-1,-7,10,7,7,-7,5,-5,-6],[-8,-9,5,-3,-9,-2,-9,3,3],[5,9,4,-8,7,7,-10,-2,-7],[5,6,8,-1,10,-4,-9,3,-10],[-2,-7,6,4,8,-4,-7,-6,3],[10,10,1,-4,-2,6,5,4,9]],[[-5,-3,3,1,-8,-2,10,6,3],[-3,-6,6,-9,-2,-5,1,5,7],[3,7,-5,-2,-10,-3,6,2,1],[7,-10,-2,-9,-5,9,2,9,1],[8,-7,4,1,-5,3,2,-7,9],[7,2,-4,-3,-3,6,4,-9,-2],[10,4,-10,-3,-9,5,8,7,6],[-3,8,3,1,-9,8,-5,9,-8],[-10,-9,9,-6,10,1,5,-6,1],[8,-7,-4,8,-5,-1,-6,-4,-10],[3,-4,-9,8,8,-6,1,10,-1],[-3,4,-8,3,-7,-8,-1,-3,1]],[[-9,-6,1,5,6,-10,-8,5,-2],[-8,-6,-1,-2,-3,-7,-6,5,1],[-6,10,2,10,-2,3,-8,7,5],[-8,10,1,8,-2,-3,-1,-1,-2],[8,2,-9,-1,5,-2,-8,9,-4],[5,-2,-6,-4,-4,5,-6,10,-2],[3,7,-5,-10,9,-1,2,6,-5],[-8,9,-3,-2,9,7,2,-7,7],[9,-5,9,-3,3,4,2,-8,6],[5,-2,-9,-8,-10,9,6,-7,8],[8,6,1,-1,3,-3,-3,-8,-5],[-6,9,7,-3,8,8,5,-5,9]],[[-10,8,2,-4,-2,-1,-1,-9,3],[8,10,6,-10,-4,-2,1,-3,-7],[10,1,-6,-6,-1,5,10,-10,9],[-6,6,4,-3,2,-3,1,10,5],[6,3,8,-1,-1,-9,-8,-9,-5],[4,9,-3,3,-6,-8,1,6,-3],[-3,-3,7,7,6,-2,9,10,2],[-10,9,-9,1,-3,5,-9,2,3],[3,7,-5,2,-4,4,8,-2,4],[-4,-5,-1,-4,-9,4,8,-1,9],[-3,-4,5,-5,-3,-10,10,1,-2],[6,-5,-2,6,-6,-4,-4,8,-6]],[[-5,-6,9,5,-1,-5,-9,8,-3],[-2,-4,-5,-5,-7,-5,6,5,-8],[7,2,-10,-2,7,4,4,-6,-6],[7,9,4,9,4,1,6,5,-7],[-6,-3,-9,-2,5,-9,8,4,-10],[-3,-10,2,-1,9,-8,-1,3,9],[3,5,9,10,-2,7,5,-10,7],[4,2,-3,10,-7,8,-7,7,-8],[7,-4,-2,-10,10,-10,2,6,9],[-6,-3,-6,-9,1,-4,-4,7,-10],[10,-4,10,1,9,-5,9,9,-4],[-5,7,-3,-7,4,5,-10,1,-9]],[[-7,-4,10,-3,3,-2,-7,2,-5],[7,-1,3,-4,-3,7,8,2,8],[-1,10,-5,1,-1,7,7,7,4],[6,-3,5,-2,-1,4,6,-2,-9],[1,10,4,-8,-3,9,-5,7,5],[-9,4,-1,1,4,-6,-2,-3,-10],[10,-10,-3,2,5,9,9,4,9],[-2,5,-6,6,-9,-10,8,7,3],[-8,-9,4,2,5,9,-3,6,4],[8,-2,3,-6,-2,-10,2,-1,8],[8,-1,7,-8,-8,8,-10,3,5],[-4,6,3,-4,-1,-3,-2,-10,5]],[[2,10,10,1,-6,2,10,-2,3],[-2,8,3,4,-4,8,-4,3,-10],[1,2,8,9,-1,4,-4,-4,10],[6,3,-10,7,1,9,-4,-7,-10],[-2,2,-7,1,5,-6,3,8,-9],[-6,6,8,-1,10,9,-4,8,-6],[4,-8,1,3,5,-9,-4,3,-4],[-7,-3,4,8,3,-4,1,-6,-7],[5,10,-3,-6,-4,7,10,-3,-3],[-5,5,-7,8,-6,-8,-1,3,3],[-10,3,8,2,-5,10,-3,1,6],[-6,-5,-9,5,6,-1,6,-9,-7]],[[-10,-2,-5,-5,1,6,-3,2,-5],[10,2,10,4,7,6,10,-5,10],[-7,2,-10,-5,-3,10,-9,9,-4],[-5,4,4,7,5,6,-6,2,-1],[6,-5,5,6,6,5,4,-10,3],[-10,8,6,1,-7,10,5,-5,7],[-8,6,-8,-5,1,3,-1,-6,-8],[-1,2,4,-7,10,-1,-4,9,4],[10,-2,-7,7,-9,7,3,8,7],[9,-1,7,-5,-3,-2,-2,6,-5],[10,-3,3,6,-7,5,-6,-9,5],[-1,7,-7,-10,-3,-4,1,8,-4]],[[-1,1,7,-3,10,2,-8,-8,-6],[5,-3,-2,5,-2,5,-6,-6,-6],[2,-8,1,-2,2,3,-4,-1,5],[5,-7,4,4,-10,-8,-5,-8,-7],[-2,10,-6,3,-1,8,-10,-7,1],[-8,-3,5,-7,-4,-3,7,-7,-1],[-10,-4,9,-9,6,-5,-9,-3,-3],[6,1,6,10,-9,-10,3,-7,1],[10,6,-7,-2,-3,-1,-5,6,-6],[8,-8,6,-9,8,-5,-3,-10,-10],[7,-3,6,7,-10,7,-7,-5,-4],[-3,-9,1,1,-8,1,7,-9,10]],[[-6,-9,2,-4,1,-4,-10,1,7],[3,8,-8,-7,-8,-7,2,-7,-2],[6,-6,7,3,-8,-7,8,2,3],[-6,-6,9,-5,9,-1,-1,-6,6],[-8,1,5,10,1,-9,3,-5,2],[-2,-4,-10,-1,3,-9,-3,10,-2],[3,8,3,8,-5,-5,-8,7,-10],[-8,8,-8,-2,4,4,-7,-8,-3],[-2,-9,8,5,2,8,9,-3,-9],[3,-4,3,3,-7,5,-1,2,4],[-3,6,1,7,9,-6,-3,-2,-6],[-2,-7,9,10,-6,10,-4,9,8]],[[3,-1,-5,3,-5,-2,-1,1,7],[9,10,2,7,4,-8,-7,8,-7],[4,1,-6,2,1,-7,-5,-6,4],[-6,-5,-9,3,-8,-6,3,7,-1],[9,4,9,8,10,1,-1,-4,-9],[3,-3,-10,8,-8,9,1,3,8],[9,-5,10,-2,5,9,-3,4,5],[-2,1,-9,-9,10,8,-3,-4,5],[-6,-4,6,-5,-6,-4,6,4,-8],[-8,5,-1,6,9,4,-3,-2,-1],[2,7,6,-9,-7,-8,7,-4,-3],[-5,-8,-8,-10,-3,8,1,2,8]]], dtype = "uint32")#candidate|4276|(13, 12, 9)|const|uint32
bop_4277 = relay.multiply(var_4275.astype('uint32'), const_4276.astype('uint32')) # shape=(13, 12, 9)
bop_4293 = relay.power(bop_4277.astype('float64'), var_4275.astype('float64')) # shape=(13, 12, 9)
output = relay.Tuple([bop_4293,])
output2 = relay.Tuple([bop_4293,])
func_4297 = relay.Function([var_4275,], output)
mod['func_4297'] = func_4297
mod = relay.transform.InferType()(mod)
mutated_mod['func_4297'] = func_4297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4298 = relay.var("var_4298", dtype = "uint32", shape = ())#candidate|4298|()|var|uint32
func_4297_call = mutated_mod.get_global_var('func_4297')
call_4299 = func_4297_call(var_4298)
output = call_4299
func_4300 = relay.Function([var_4298], output)
mutated_mod['func_4300'] = func_4300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2659_call = mod.get_global_var('func_2659')
func_2661_call = mutated_mod.get_global_var('func_2661')
call_4313 = relay.TupleGetItem(func_2659_call(), 0)
call_4314 = relay.TupleGetItem(func_2661_call(), 0)
output = call_4313
output2 = call_4314
func_4327 = relay.Function([], output)
mod['func_4327'] = func_4327
mod = relay.transform.InferType()(mod)
mutated_mod['func_4327'] = func_4327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4327_call = mutated_mod.get_global_var('func_4327')
call_4328 = func_4327_call()
output = call_4328
func_4329 = relay.Function([], output)
mutated_mod['func_4329'] = func_4329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_4339 = relay.TupleGetItem(func_1605_call(), 1)
call_4340 = relay.TupleGetItem(func_1606_call(), 1)
output = call_4339
output2 = call_4340
func_4358 = relay.Function([], output)
mod['func_4358'] = func_4358
mod = relay.transform.InferType()(mod)
output = func_4358()
func_4359 = relay.Function([], output)
mutated_mod['func_4359'] = func_4359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_4398 = relay.TupleGetItem(func_1396_call(), 0)
call_4399 = relay.TupleGetItem(func_1397_call(), 0)
output = call_4398
output2 = call_4399
func_4415 = relay.Function([], output)
mod['func_4415'] = func_4415
mod = relay.transform.InferType()(mod)
output = func_4415()
func_4416 = relay.Function([], output)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4466 = relay.var("var_4466", dtype = "float32", shape = (2, 14, 13))#candidate|4466|(2, 14, 13)|var|float32
uop_4467 = relay.rsqrt(var_4466.astype('float32')) # shape=(2, 14, 13)
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_4472 = func_1158_call()
call_4473 = func_1158_call()
output = relay.Tuple([uop_4467,call_4472,])
output2 = relay.Tuple([uop_4467,call_4473,])
func_4476 = relay.Function([var_4466,], output)
mod['func_4476'] = func_4476
mod = relay.transform.InferType()(mod)
var_4477 = relay.var("var_4477", dtype = "float32", shape = (2, 14, 13))#candidate|4477|(2, 14, 13)|var|float32
output = func_4476(var_4477)
func_4478 = relay.Function([var_4477], output)
mutated_mod['func_4478'] = func_4478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4505 = relay.TupleGetItem(func_3411_call(), 0)
call_4506 = relay.TupleGetItem(func_3412_call(), 0)
func_3563_call = mod.get_global_var('func_3563')
func_3565_call = mutated_mod.get_global_var('func_3565')
const_4523 = relay.const([-0.393562,4.065045,3.273539,-5.541485,7.208808,8.514653,5.910936,-1.107587,5.186712,-5.619587,-4.595470,7.604516,-5.180111,2.671740,-1.630121,-3.159530,-0.910204,-5.683789,5.011152,-6.505972,-0.295063,0.532091,-2.666350,7.835865,-4.791964,-5.537237,8.876896,-0.306882,-6.762469,2.628087,3.862066,-1.192211,-5.886543,4.819221,2.891528,-4.729064,5.406624,7.026567,1.690624,0.157278,-2.300843,6.539932,4.505303,1.636681,4.485987,-0.956361,7.796350,-3.553550,-1.349649,3.664378,-2.180329,2.041985,8.689283,6.170561,9.521377,-9.171389,-5.909275,7.499947,2.040456,2.660629,-4.837502,-1.770953,-0.102906,5.302940,-3.240847,-5.125101,-5.800292,5.234883,4.118370,-4.771782,7.230400,-8.263364,-7.092876,-3.805538,1.913976,0.204658,3.458147,8.506285,-0.216081,-2.631232,9.583230,5.223528,-6.943078,-4.776357,3.383229,-3.030725,2.366299,-2.221293,7.485790,-0.755163,8.318359,-4.299196,8.950634,-3.364393,-2.181509,-3.367649,-3.514667,9.612532,-4.705115,-6.362045,-3.170688,1.177205,7.537961,-3.492535,-7.022127,0.759281,-4.242675,-9.626162,0.625973,7.178950,-5.687274,-0.135965,-4.799203,1.796561,4.358894,-4.041049,8.644171,9.681491,-1.787406,6.043864,-0.249330,-5.591305,-2.646835,-8.014305,7.134790,8.006911,-8.613547,-1.766719,8.213006,3.161221,4.766413,-3.076459,1.658476,-8.356436,4.029708,-6.337952,-8.347749,-0.811543,-4.782258,6.005579,0.596233,6.272884,-9.454191,-8.933381,5.039533,-2.213070,3.352812,2.577815,-9.227623,-8.368665,6.826276,-7.728061,1.561193,-3.407686,2.161579,-6.483032,-0.029591,-4.796225,4.162931,-2.165353,9.412987,-9.750171,-3.153186,6.103325,6.973841,-7.038704,3.035006,-9.552425,-6.608073,-5.692622,-4.425473,-9.646358,-3.926225,0.110005,0.731146,-2.386802,-7.700958,9.797593,9.569591,-9.901741,1.179634,8.983149,9.717092,9.491126,8.287373,8.806592,-7.837294,-5.195025,2.107022,3.658745,-6.929766,1.282809,-5.954891,6.207573,7.028471,-1.986196,-1.901470,9.822320,7.377388,8.150467,-7.530023,1.164705,-6.495437,2.864113,0.041136,-9.768515,6.878010,5.671428,5.634330,0.953175,-5.590944,0.103320,3.837158,-0.032372,6.463749,1.558771,-8.476694,2.116215,8.871266,-6.231136,6.016474,-5.625169,-8.303409,-2.131851,-5.016355,6.048765,7.078911,1.137924,5.800891,9.406808,-4.084130,7.769078,3.296541,9.075128,9.585740,-1.897714,0.668908,3.715178,-1.188902,6.793499,9.473472,7.754792,8.747460,-8.859944,-7.630358,7.975552,-1.591724,6.535304,5.497358,-1.111836,2.081967,1.706297,8.067625,-0.431090,-5.709256,-8.090048,-6.488384,-1.970405,7.711672,0.033218,9.548535,-9.737754,2.696894,3.694836,-9.277676,3.726581,-3.966224,-9.788655,-5.744875,0.813868,-3.244358,-4.734114,1.083878,-8.213235,1.124394,-5.416476,3.960243,7.024954,5.960376,0.580190,-0.893755,4.164612,-6.629056,4.688176,-4.768626,1.370053,-3.342523,-2.157446,9.804620,-3.154423,-3.736547,9.422349,3.687993,-6.017376,8.188193,3.246996,-9.192836,9.085353,-1.439861,9.363764,4.579873,-0.501286,2.187509,-3.209492,5.226889,5.724914,2.060704,3.653449,5.650862,7.568653,-6.020180,2.837797,0.515603,7.320449,5.115914,9.120368,5.814687,-0.717568,-8.125442,8.899949,-5.509617,4.709361,9.933199,-1.520397,-8.419074,-0.524934,-2.171540,5.449762,-3.189748,-1.477555,-0.301022,-5.590822,1.543049,-7.479477,3.416981,2.768789,-3.200393,-2.287747,-9.062405,4.733853,-2.665797,7.272995,4.869589,7.016691,2.577052,0.028007,1.215960,9.771295,-4.856446,-7.938205,-9.484220,0.744997,-1.252292,-6.030176,2.453492,3.853645,7.169103,-6.441027,5.870687,-4.575009,2.004277,-7.502698,-3.309208,6.671225,1.888824,-8.919934,-3.234054,9.912875,3.239575,6.062226,4.949035,9.332593,2.402519,8.846101,2.434364,0.872922,4.985832,3.925611,8.284435,-2.610900,-2.748596,-3.460332,1.156570,6.622831,-7.054628,5.862997,7.166058,-5.939314,-5.415377,7.366430,-0.373110,0.717886,4.085366,8.835392,0.664436,6.916435,-9.210012,-4.152651,7.601489,3.392380,-4.569960,5.270732,3.734835,-8.793102,6.978175,8.075467,-9.482989,3.927874,4.740413,7.371145,0.115548,-5.314489,-8.059904,6.931674,-8.730293,9.672947,2.400467,-4.092791,9.976378,-2.860863,-2.784435,-3.552397,-8.741086,-6.321612,-6.540090,9.732002,7.694532,5.371939,-7.409537,0.370834,4.956394,-8.872872,-2.798386,7.517612,3.178725,-6.632166,4.918033,1.808250,3.780809,7.093040,9.973143,5.664189,-3.369759,-3.509590,8.564395,0.981176,3.493431,9.765665,-5.027310,4.692088,-6.083172,-7.612532,-5.412266,-2.303970,6.380348,4.173725,-3.132024,5.753525,1.978719,0.368408,-5.500631,-9.622479,-6.460762,3.433115,-6.495450,2.020136,-6.691499,2.338059,7.198742,-1.979894,5.779005,6.960481,-7.088249,7.225951,-2.818909,-6.251040,7.794296,-3.411230,-2.431976,5.672317,-2.452825,-9.737584,-6.687752,8.567184,7.644513,-5.054520,7.084886,-1.404117,2.040851,-1.521817,-4.810128,-1.817295,0.382263,-1.837832,-9.575702,-5.347074,-2.270310,3.632806,-5.089892,-3.833907,9.330265,0.871273,-7.397456,-1.268821,3.785345,0.512735,-7.753919,6.424024,0.020401,1.379449,1.777387,-8.300973,-7.817839,-5.948082,4.401347,-0.389722,-7.733830,0.304053,0.972631,-8.506174,-2.391318,4.546439,4.285549,-7.755582,-3.856321,-4.956488,-4.671655,7.577606,-1.812040,0.881904,-7.830574,-7.856054,7.326753,6.340062,-8.735909,2.556107,1.340958,7.966205,-6.640742,8.769191,5.285646,-9.719872,5.677863,0.956113,-1.083312,1.524882,-2.661360,4.110403,2.104146,0.420035,-9.459495,9.547003,2.368332,-9.764479,-7.283479,-8.595730,3.354944,3.632588,-8.174946,-5.205175,-6.546017,4.373477,-8.591544,-3.414899,4.598240,4.456150,3.295136,4.751367,2.429098,-7.438128,-1.350815,7.649422,5.049083,-5.255475,8.834984,-2.838275,-5.174448,2.181988,-1.350941,-3.228433,7.106387,3.286077,-9.508801,9.149947,-4.456710,-2.189019,-9.890886,-8.468921,-8.841602,9.328378,-5.618118,1.779828,3.393507,2.404925,3.238959,1.358249,0.115538,4.219788,0.651522,9.208836,-6.885838,-8.170621,7.904815,-0.246445,0.226343,-6.899700,-7.852177,-9.286740,-4.839448,8.496667,-2.776440,-9.736160,-3.055406,2.193226,-4.354337,4.899429,-4.642998,8.466193,2.260147,-6.255350,0.142211,-8.550663,-3.277200,3.849602,-0.020267,-5.449240,3.966647,-2.384005,-0.191559,9.639037,-6.620494,1.849400,9.943947,-6.742458,4.313380,5.470499,7.212119,-3.718724,7.442201,-6.860850,-4.189630,-4.570887,7.283835,9.750185,-4.725038,-2.917440,-6.610364,-3.661559,-7.761124,-6.603264,7.227635,-3.331064,5.797183,-4.165628,-5.870115,-9.738487,-5.617334,-1.361665,1.921242,9.309758,1.709155,-6.141114,-3.559291,7.610733,3.736749,-4.677769,8.912560,-0.472432,2.413383,8.338720,5.034640,-6.566705,-1.355746,-6.443852,5.665349,-4.113465,0.068457,-6.588008,0.198855,6.952542,0.209479,9.645800,-8.279382,3.885511,-1.540600,-6.528966,-2.559457,2.367800,8.493866,-6.426752,-9.310022,6.106896,8.263945,3.490816,9.551533,4.416760,-0.136333,-4.270377,-4.723819,-7.026521,-5.186921,1.189856,6.467843,-9.575463,-6.642163,4.715045,1.470988,-5.899926,-4.151184,2.294836,-6.136461,-0.324852,2.758569,-9.704773,-0.505999,-2.265846,9.292363,9.921362,0.378306,2.255140,-2.279638,-7.703278,-5.664779,-0.089616,-5.448358,-7.601632,8.069291,8.843132,5.982162,-4.223436,-5.256381,1.863775,-6.845443,-2.596676,-7.824660,2.011516,0.367156,-3.047842,2.898518,-9.245826,-4.488843,-3.734842,-6.569393,-0.228791,1.677971,8.412646,2.110822,0.093990,-8.813730,5.846953,-6.958939,6.235141,-4.788734,2.532167,6.128743,3.366506,-1.112882,4.701575,1.220416,2.898667,-6.991088,-1.305277,9.181282,-5.419214,-1.853666,-5.963253,-9.086746,-5.964524,8.144866,-5.091833,3.730255,-1.157058,-4.534665,-0.420451,1.525483,-6.129437,3.658956,1.005006,1.402132,-5.669647,-9.539053,-5.105543,-8.113340,2.091403,-6.862942,-3.652471,-6.741574,5.666745,-3.652263,-6.626429,6.888429,-8.322472,-6.694043,0.358453,7.959387,2.774300,-5.563764,-1.452939,-1.781346,-8.489953,-1.640399,-9.868543,3.405492,5.341146,-1.422599,5.322841,-2.632292,-1.091902,-4.651083,-3.274436,8.549175,2.907674,7.017988,-1.065513,7.469637,-3.856767,-6.559253,-1.679446,3.197931,5.655222,-0.478265,5.122487,-6.809788,6.932260,-3.220614,-9.600258,3.462531,5.694892,-9.770375,-6.555418,4.638221,0.954217,4.383622,1.241724,0.901082,-2.593388,-2.779752,-3.735369,6.198063,5.030912,-5.657540,4.349986,3.020983,-4.758157,7.960301,6.944870,-7.004757,-7.355707,8.745264,-2.985061,-6.629091,-9.772005,-4.735798,-7.626671,-3.003384,0.747776,0.517637,-9.967655,-1.640593,-5.562021,6.938399,-0.310161,-9.566921,0.019580,-2.641908,-7.695572,5.198942,2.790960,-5.670810,6.611881,7.861788,1.047256,-1.652634,6.954979,-3.965748,-9.925995,-4.390373,5.241569,2.031049,-3.320254,-3.128655,-2.879437,8.099342,-0.357943,0.387511,-0.118416,-2.617962,-8.569664,7.530331,8.857030,5.456708,7.038728,-2.423263,1.365648,0.359304,-8.443717,-6.706399,8.549655,-9.978722,8.593243,-6.790773,2.659633,5.355974,7.789881,9.796588,4.454475,-3.780777,-8.690828,1.708333,-9.288058,2.521478,2.269895,6.080197,8.022747,-1.146019,-6.827139,-5.265988,4.674689,4.091044,-1.216333,-4.151751,0.456500,-4.674762,8.990510,5.749450,2.076556,-6.810644,5.856284,7.663253,-9.321982,2.628524,-8.052023,-2.218049,-0.791938,-9.482107,-7.111731,-2.904920,1.719407,-4.663420,-9.371890,-5.730474,-2.250938,-7.210194,8.921532,0.826871,7.063639,-7.089098,-3.868908,-7.661690,-3.026893,-7.611863,0.878254,-3.290430,0.874197,2.379654,2.998847,3.267986,9.675065,5.642126,-4.926174,-3.946791,2.897912,3.569331,0.401860,-3.776507,1.747900,-7.519869,0.038808,2.790275,7.691389,3.364996,3.267926,7.857467,-7.401531,7.880440,0.848744,1.874580,-1.592651,-4.111496,-7.462314,9.404695,8.797863,-7.688235,-0.263248,-1.107689,-5.761743,-5.587334,-3.554391,-3.263785,-9.131469,9.292695,0.324051,6.491266,-6.646162,4.870678,-1.989773,-3.113445,7.207450,0.421182,-0.123237,2.493003,3.798507,-3.982864,0.494335,-8.623438,-0.932233,6.951813,-8.224592,6.000491,8.485300,0.283194,2.273664,1.233921,-4.047515,1.504956,-1.902077,-5.032652,-4.518280,-4.242331,3.764927,-7.808931,-0.801357,-2.833876,-9.703546], dtype = "float32")#candidate|4523|(1024,)|const|float32
call_4522 = relay.TupleGetItem(func_3563_call(relay.reshape(const_4523.astype('float32'), [512, 2])), 5)
call_4524 = relay.TupleGetItem(func_3565_call(relay.reshape(const_4523.astype('float32'), [512, 2])), 5)
output = relay.Tuple([call_4505,call_4522,const_4523,])
output2 = relay.Tuple([call_4506,call_4524,const_4523,])
func_4525 = relay.Function([], output)
mod['func_4525'] = func_4525
mod = relay.transform.InferType()(mod)
output = func_4525()
func_4526 = relay.Function([], output)
mutated_mod['func_4526'] = func_4526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1649_call = mod.get_global_var('func_1649')
func_1650_call = mutated_mod.get_global_var('func_1650')
call_4577 = func_1649_call()
call_4578 = func_1649_call()
func_2051_call = mod.get_global_var('func_2051')
func_2054_call = mutated_mod.get_global_var('func_2054')
const_4583 = relay.const(-1.490976, dtype = "float32")#candidate|4583|()|const|float32
const_4584 = relay.const([-3.097950,8.346266,1.005174,4.843900,8.605587,0.180819,9.246991,1.185139,0.597622,-7.107737,-8.655365,9.103618,-0.249497,-3.233373,-4.746059,-4.829043,-6.521900,6.484936,2.315893,0.196451,7.067533,-4.579042,4.930593,5.766320,-8.924820,7.773045,3.287871,9.070244,-5.068508,-5.936784,-9.907720,9.055580,-5.416579,-0.135882,-6.665761,-8.852690,-9.899979,-9.335258,-5.226380,-0.305640,6.516448,2.877988,-3.671046,-9.584722,4.646384,0.984620,8.217115,-3.596818,5.031241,0.470199,-2.960395,2.109772,5.547456,-8.719905,1.664390,-6.901921,6.979124,-9.673595,-9.852144,-6.390760,8.081572,7.317750,8.788093,-0.518941,-5.592999,-3.123632,0.581969,7.708490,3.943617,1.415131,-5.456963,9.541821,4.381436,4.983065,-9.494592,9.708243,4.680896,-3.508983,0.039982,1.565627,4.623088,-6.484683,8.184573,7.839021,-8.346818,-7.551987,-7.276949,-2.287103,2.864562,-7.303765,2.236118,0.173578,-9.335417,9.258816,-7.958856,-1.808537,-1.827498,-7.894220,-9.764892,-7.356065,-3.648108,-3.492352,-6.362746,3.172575,-8.594343,7.662890,4.573195,3.788065,5.787378,9.518765,3.305913,9.254242,8.611851,-8.426713,3.488981,-0.780165,2.511749,-2.175993,9.454075,5.851866,8.863158,2.690666,2.078022,2.194681,-3.133495,-5.338499,-3.220406,1.859096,3.526516,6.775236,0.387034,2.912485,-9.292466,-4.410662,4.327143,-4.821348,2.581837,4.577093,-4.724172,6.312010,-5.840907,-8.154590,3.772751,-3.681203,0.669409,9.798047,3.478051,2.786517,-6.949524,0.428990,1.848470,3.998819,9.468265,7.471705,5.538886,-9.025459,-1.099663,-8.179027,2.243742,7.716740,-3.835180,7.892125,2.877515,-8.034471,-0.191581,0.936978,3.525564,-3.023387,7.545675,-9.800323,-6.352898,-3.351528,1.772988,-8.740939,1.680542,-6.670038,-3.725721,3.125350,-8.496143,-8.117161,1.985698,1.911646,-9.484429,-7.081864,0.264238,-0.596963,2.207839,8.854653,4.455629,3.507403,0.673336,-8.716666,3.294288,4.174644,8.514424,4.653510,4.026381,9.460938,-9.461965,5.394136,-7.727599,-1.085025,2.447699,4.088198,2.816110,8.070686,-2.683021,0.792157,-3.506662,2.716971,-0.451104,-9.782373,3.515331,1.099918,8.975092,-4.680785,-0.223228,-1.478761,-2.990561,-2.674559,-1.996692,-5.259105,3.234429,8.598918,-2.890299,-3.412380,4.871608,-1.526136,-5.827703,-8.604554,-6.663703,-6.916455,0.308513,-9.270622,-1.459005,-7.660012,7.650999,3.208693,-0.691043,-2.850810,3.652802,1.786537,1.393986,-9.657739,4.693491,-1.000200,2.788972,-8.034248,3.797918,-5.755697,4.004443,-2.248687,7.915012,6.161556,-9.726525,-6.289487,-4.426907,-0.688404,9.323918,-2.013999,-0.816244,-7.167458,9.397686,-3.194724,-8.688998,-8.901305,7.890138,-5.562784,-3.744966,-2.856379,5.591205,-5.155006,-4.287595,6.095096,6.689638,-8.182491,-4.414976,3.393150,9.673937,-5.181396,-6.782240,4.077089,-7.448456,-3.585995,-0.836875,1.887972,8.587446,7.495457,8.862239,4.149361,-5.366673,-0.404827,6.809661,-2.113928,5.826955,-9.397780,9.755320,-7.409249,9.046431,-7.098904,7.883548,2.566475,-9.213035,5.415219,3.207632,-7.420103,-6.528021,6.944337,9.966558,2.270046,-8.723000,-9.182535,7.877213,6.180675,-9.665849,-0.906993,-4.897454,-1.161961,8.501747,-7.274149,7.642650,-2.093788,5.166952,6.657652,-0.562212,1.766950,-9.153802,-6.864867,-6.528787,-7.331339,-3.155560,8.291505,-8.199719,6.592269,6.148864,-3.758729,-8.186239,-3.980406,-5.797217,-7.813725,-7.908788,-6.262202,-3.060945,8.080006,-1.777910,6.561378,-2.716554,7.715259,-9.066762,-1.502989,-5.951738,-0.656362,-8.795150,-0.106816,-3.930980,0.672981,6.020750,7.589646,-6.814759,-8.523719,-6.502095,7.543229,-2.746249,6.169835,9.382141,-5.800316,8.598690,6.843135,-6.070329,-9.732335,-4.055498,7.320446,7.953708,7.211327,9.824123,7.429307,7.151933,3.666477,4.918571,1.161711,-4.645156,4.128969,-4.248174,4.045093,-4.815038,-4.593771,7.430600,-4.238251,-8.664366,3.369844,-1.184220,-3.931762,8.559640,8.871089,-1.546242,-6.535965,8.989737,-0.148016,-8.771464,-3.706540,-9.466817,6.396333,-0.026942,-6.546506,-8.075809,6.169201,-6.311883,-5.308669,7.176106,8.142835,-2.040111,-0.700529,7.960468,-4.474834,7.929371,-4.680210,0.205878,2.648243,-3.751472,-7.050805,3.051872,9.061511,5.175609,-0.632383,1.485841,9.228803,9.025370,7.031384,-7.193886,-4.467777,-7.450343,5.412882,-0.276623,-2.785411,8.512876,5.497579,-8.406165,-3.694324,8.755994,-3.470178,-5.410727,-7.091749,3.162312,-1.537835,9.629726,3.937487,-7.340835,7.915798,-7.632883,6.771947,8.800120,-2.926196,6.454005,4.832003,3.300596,2.145286,7.311010,6.404321,-6.627815,7.555433,-9.185299,6.786055,9.165396,-2.274895,-9.601902,3.367962,-4.937647,9.738888], dtype = "float32")#candidate|4584|(468,)|const|float32
call_4582 = relay.TupleGetItem(func_2051_call(relay.reshape(const_4583.astype('float32'), []), relay.reshape(const_4584.astype('float32'), [468,]), ), 0)
call_4585 = relay.TupleGetItem(func_2054_call(relay.reshape(const_4583.astype('float32'), []), relay.reshape(const_4584.astype('float32'), [468,]), ), 0)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_4587 = relay.TupleGetItem(func_954_call(relay.reshape(call_4582.astype('float64'), [11, 7, 12])), 2)
call_4588 = relay.TupleGetItem(func_956_call(relay.reshape(call_4582.astype('float64'), [11, 7, 12])), 2)
func_2051_call = mod.get_global_var('func_2051')
func_2054_call = mutated_mod.get_global_var('func_2054')
call_4593 = relay.TupleGetItem(func_2051_call(relay.reshape(const_4583.astype('float32'), []), relay.reshape(const_4584.astype('float32'), [468,]), ), 3)
call_4594 = relay.TupleGetItem(func_2054_call(relay.reshape(const_4583.astype('float32'), []), relay.reshape(const_4584.astype('float32'), [468,]), ), 3)
output = relay.Tuple([call_4577,call_4582,const_4583,const_4584,call_4587,call_4593,])
output2 = relay.Tuple([call_4578,call_4585,const_4583,const_4584,call_4588,call_4594,])
func_4600 = relay.Function([], output)
mod['func_4600'] = func_4600
mod = relay.transform.InferType()(mod)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4600_call = mutated_mod.get_global_var('func_4600')
call_4601 = func_4600_call()
output = call_4601
func_4602 = relay.Function([], output)
mutated_mod['func_4602'] = func_4602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4625 = relay.TupleGetItem(func_3411_call(), 0)
call_4626 = relay.TupleGetItem(func_3412_call(), 0)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_4647 = relay.TupleGetItem(func_1315_call(), 1)
call_4648 = relay.TupleGetItem(func_1317_call(), 1)
func_4600_call = mod.get_global_var('func_4600')
func_4602_call = mutated_mod.get_global_var('func_4602')
call_4664 = relay.TupleGetItem(func_4600_call(), 4)
call_4665 = relay.TupleGetItem(func_4602_call(), 4)
output = relay.Tuple([call_4625,call_4647,call_4664,])
output2 = relay.Tuple([call_4626,call_4648,call_4665,])
func_4672 = relay.Function([], output)
mod['func_4672'] = func_4672
mod = relay.transform.InferType()(mod)
output = func_4672()
func_4673 = relay.Function([], output)
mutated_mod['func_4673'] = func_4673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_4681 = relay.TupleGetItem(func_2804_call(), 0)
call_4682 = relay.TupleGetItem(func_2806_call(), 0)
func_2368_call = mod.get_global_var('func_2368')
func_2369_call = mutated_mod.get_global_var('func_2369')
call_4687 = relay.TupleGetItem(func_2368_call(), 0)
call_4688 = relay.TupleGetItem(func_2369_call(), 0)
output = relay.Tuple([call_4681,call_4687,])
output2 = relay.Tuple([call_4682,call_4688,])
func_4691 = relay.Function([], output)
mod['func_4691'] = func_4691
mod = relay.transform.InferType()(mod)
output = func_4691()
func_4692 = relay.Function([], output)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_4718 = relay.TupleGetItem(func_2804_call(), 0)
call_4719 = relay.TupleGetItem(func_2806_call(), 0)
output = call_4718
output2 = call_4719
func_4723 = relay.Function([], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
output = func_4723()
func_4724 = relay.Function([], output)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4600_call = mod.get_global_var('func_4600')
func_4602_call = mutated_mod.get_global_var('func_4602')
call_4762 = relay.TupleGetItem(func_4600_call(), 4)
call_4763 = relay.TupleGetItem(func_4602_call(), 4)
uop_4781 = relay.cos(call_4762.astype('float64')) # shape=(11, 7, 12)
uop_4783 = relay.cos(call_4763.astype('float64')) # shape=(11, 7, 12)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_4798 = relay.TupleGetItem(func_1396_call(), 0)
call_4799 = relay.TupleGetItem(func_1397_call(), 0)
bop_4805 = relay.divide(uop_4781.astype('float64'), relay.reshape(call_4762.astype('float64'), relay.shape_of(uop_4781))) # shape=(11, 7, 12)
bop_4808 = relay.divide(uop_4783.astype('float64'), relay.reshape(call_4763.astype('float64'), relay.shape_of(uop_4783))) # shape=(11, 7, 12)
output = relay.Tuple([call_4798,bop_4805,])
output2 = relay.Tuple([call_4799,bop_4808,])
func_4818 = relay.Function([], output)
mod['func_4818'] = func_4818
mod = relay.transform.InferType()(mod)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4818_call = mutated_mod.get_global_var('func_4818')
call_4819 = func_4818_call()
output = call_4819
func_4820 = relay.Function([], output)
mutated_mod['func_4820'] = func_4820
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4891 = relay.var("var_4891", dtype = "uint64", shape = (1, 2, 2))#candidate|4891|(1, 2, 2)|var|uint64
var_4892 = relay.var("var_4892", dtype = "uint64", shape = (15, 2, 2))#candidate|4892|(15, 2, 2)|var|uint64
bop_4893 = relay.less(var_4891.astype('bool'), var_4892.astype('bool')) # shape=(15, 2, 2)
uop_4902 = relay.asinh(var_4891.astype('float32')) # shape=(1, 2, 2)
func_723_call = mod.get_global_var('func_723')
func_728_call = mutated_mod.get_global_var('func_728')
var_4918 = relay.var("var_4918", dtype = "uint32", shape = (1470,))#candidate|4918|(1470,)|var|uint32
var_4919 = relay.var("var_4919", dtype = "int16", shape = ())#candidate|4919|()|var|int16
const_4920 = relay.const([[-3,-3,4,-3,1,-1,9,-8,-5,-6,10,-6,4,3,-9,10,-5,-5,6,3,-5,8,2,-1,-8,-1,2,7,7,5],[10,9,8,-6,3,-6,4,10,-2,5,8,6,3,10,-7,5,-8,-3,-8,5,-8,8,4,10,-1,-6,2,10,7,-5],[-3,-2,-5,-1,3,6,6,-5,-4,-8,1,3,-6,-9,3,9,-2,-10,5,-4,7,2,-4,6,2,-10,-6,6,-7,6],[7,-9,6,10,1,2,1,-1,-10,10,1,-5,-4,8,6,-3,-1,3,-10,-3,-4,10,10,8,-8,-2,-2,-5,-9,-10],[-9,7,-3,-1,3,7,8,1,-9,-10,1,8,-10,-10,8,-6,-2,8,5,-2,3,4,-5,1,-7,-2,2,2,3,-3],[-1,-7,-3,-8,-4,5,-10,-1,5,8,3,-10,10,-1,3,3,4,-7,-4,-5,7,-8,-10,-1,-2,-7,-1,-4,-7,5],[10,4,-9,-10,7,-5,-5,9,-3,10,-1,2,2,-4,-2,10,10,-3,6,4,-9,6,-2,-1,7,-2,-6,2,-2,-10],[-7,6,4,-6,3,4,9,-9,-6,7,2,4,6,8,4,2,-8,-1,-8,-5,-9,6,-10,10,-3,-1,-6,5,-5,-2]], dtype = "int16")#candidate|4920|(8, 30)|const|int16
call_4917 = relay.TupleGetItem(func_723_call(relay.reshape(var_4918.astype('uint32'), [15, 14, 7]), relay.reshape(var_4918.astype('uint32'), [15, 14, 7]), relay.reshape(var_4919.astype('int16'), []), relay.reshape(const_4920.astype('int16'), [240,]), ), 0)
call_4921 = relay.TupleGetItem(func_728_call(relay.reshape(var_4918.astype('uint32'), [15, 14, 7]), relay.reshape(var_4918.astype('uint32'), [15, 14, 7]), relay.reshape(var_4919.astype('int16'), []), relay.reshape(const_4920.astype('int16'), [240,]), ), 0)
uop_4922 = relay.sqrt(uop_4902.astype('float64')) # shape=(1, 2, 2)
uop_4924 = relay.sigmoid(uop_4922.astype('float64')) # shape=(1, 2, 2)
uop_4927 = relay.erf(uop_4902.astype('float64')) # shape=(1, 2, 2)
const_4931 = relay.const([[4,-5,-3,-4,-9,7,6,2,-5,-8,3,-9,-7,-8,2,9,3,2,-6,-9,5,7,-1,-7,-3,7,5,5,-6,-4],[-5,6,-9,-6,-7,10,-10,3,-9,8,-7,5,3,-3,7,9,4,-9,-6,-10,9,6,8,-1,-2,-8,-7,1,5,1],[5,3,7,-4,9,7,5,-7,5,-9,-8,7,2,-7,6,-8,-10,-2,-4,-2,-2,3,4,-10,10,7,-6,5,-6,6],[10,3,-6,-7,-1,7,7,1,-10,10,2,-9,-6,8,-5,-2,-10,-5,9,-9,10,-8,-4,8,-1,5,10,4,6,-5],[-8,-8,-3,-3,2,5,-7,-8,-3,8,-7,-7,-5,-2,-5,-4,4,-9,4,1,7,-7,-10,-9,3,5,8,-8,5,8],[7,-2,3,-7,-7,-4,-6,-9,7,-7,3,10,-6,-8,8,-2,7,5,-7,-10,3,-7,2,5,-3,-10,4,2,10,-10],[6,-3,-6,-7,-5,7,9,-6,1,-2,4,3,-4,8,4,2,2,5,8,-2,8,-10,3,-8,7,-1,2,9,-10,9],[6,6,-9,-7,4,7,-7,7,-2,6,-4,2,-2,1,-7,8,2,-3,-6,9,8,-1,2,6,-2,-5,1,4,8,5]], dtype = "int16")#candidate|4931|(8, 30)|const|int16
bop_4932 = relay.logical_xor(const_4920.astype('int32'), relay.reshape(const_4931.astype('int32'), relay.shape_of(const_4920))) # shape=(8, 30)
func_1627_call = mod.get_global_var('func_1627')
func_1629_call = mutated_mod.get_global_var('func_1629')
call_4937 = relay.TupleGetItem(func_1627_call(), 0)
call_4938 = relay.TupleGetItem(func_1629_call(), 0)
uop_4943 = relay.cos(uop_4922.astype('float64')) # shape=(1, 2, 2)
output = relay.Tuple([bop_4893,call_4917,var_4918,var_4919,uop_4924,uop_4927,bop_4932,call_4937,uop_4943,])
output2 = relay.Tuple([bop_4893,call_4921,var_4918,var_4919,uop_4924,uop_4927,bop_4932,call_4938,uop_4943,])
func_4945 = relay.Function([var_4891,var_4892,var_4918,var_4919,], output)
mod['func_4945'] = func_4945
mod = relay.transform.InferType()(mod)
var_4946 = relay.var("var_4946", dtype = "uint64", shape = (1, 2, 2))#candidate|4946|(1, 2, 2)|var|uint64
var_4947 = relay.var("var_4947", dtype = "uint64", shape = (15, 2, 2))#candidate|4947|(15, 2, 2)|var|uint64
var_4948 = relay.var("var_4948", dtype = "uint32", shape = (1470,))#candidate|4948|(1470,)|var|uint32
var_4949 = relay.var("var_4949", dtype = "int16", shape = ())#candidate|4949|()|var|int16
output = func_4945(var_4946,var_4947,var_4948,var_4949,)
func_4950 = relay.Function([var_4946,var_4947,var_4948,var_4949,], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1753_call = mod.get_global_var('func_1753')
func_1755_call = mutated_mod.get_global_var('func_1755')
call_4952 = func_1753_call()
call_4953 = func_1753_call()
output = call_4952
output2 = call_4953
func_4976 = relay.Function([], output)
mod['func_4976'] = func_4976
mod = relay.transform.InferType()(mod)
output = func_4976()
func_4977 = relay.Function([], output)
mutated_mod['func_4977'] = func_4977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5019 = relay.var("var_5019", dtype = "float32", shape = (3, 16, 7))#candidate|5019|(3, 16, 7)|var|float32
uop_5020 = relay.atan(var_5019.astype('float32')) # shape=(3, 16, 7)
uop_5028 = relay.sinh(var_5019.astype('float64')) # shape=(3, 16, 7)
func_4818_call = mod.get_global_var('func_4818')
func_4820_call = mutated_mod.get_global_var('func_4820')
call_5041 = relay.TupleGetItem(func_4818_call(), 0)
call_5042 = relay.TupleGetItem(func_4820_call(), 0)
uop_5062 = relay.cos(uop_5020.astype('float32')) # shape=(3, 16, 7)
output = relay.Tuple([uop_5028,call_5041,uop_5062,])
output2 = relay.Tuple([uop_5028,call_5042,uop_5062,])
func_5067 = relay.Function([var_5019,], output)
mod['func_5067'] = func_5067
mod = relay.transform.InferType()(mod)
mutated_mod['func_5067'] = func_5067
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5068 = relay.var("var_5068", dtype = "float32", shape = (3, 16, 7))#candidate|5068|(3, 16, 7)|var|float32
func_5067_call = mutated_mod.get_global_var('func_5067')
call_5069 = func_5067_call(var_5068)
output = call_5069
func_5070 = relay.Function([var_5068], output)
mutated_mod['func_5070'] = func_5070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mod.get_global_var('func_4723')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_5074 = func_4723_call()
call_5075 = func_4723_call()
uop_5077 = relay.erf(call_5074.astype('float64')) # shape=(10, 16, 13)
uop_5079 = relay.erf(call_5075.astype('float64')) # shape=(10, 16, 13)
bop_5080 = relay.not_equal(uop_5077.astype('bool'), relay.reshape(call_5074.astype('bool'), relay.shape_of(uop_5077))) # shape=(10, 16, 13)
bop_5083 = relay.not_equal(uop_5079.astype('bool'), relay.reshape(call_5075.astype('bool'), relay.shape_of(uop_5079))) # shape=(10, 16, 13)
output = bop_5080
output2 = bop_5083
func_5089 = relay.Function([], output)
mod['func_5089'] = func_5089
mod = relay.transform.InferType()(mod)
mutated_mod['func_5089'] = func_5089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5089_call = mutated_mod.get_global_var('func_5089')
call_5090 = func_5089_call()
output = call_5090
func_5091 = relay.Function([], output)
mutated_mod['func_5091'] = func_5091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2237_call = mod.get_global_var('func_2237')
func_2239_call = mutated_mod.get_global_var('func_2239')
call_5103 = relay.TupleGetItem(func_2237_call(), 2)
call_5104 = relay.TupleGetItem(func_2239_call(), 2)
uop_5139 = relay.sigmoid(call_5103.astype('float64')) # shape=(1470,)
uop_5141 = relay.sigmoid(call_5104.astype('float64')) # shape=(1470,)
func_5089_call = mod.get_global_var('func_5089')
func_5091_call = mutated_mod.get_global_var('func_5091')
call_5146 = func_5089_call()
call_5147 = func_5089_call()
func_1565_call = mod.get_global_var('func_1565')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_5152 = relay.TupleGetItem(func_1565_call(), 0)
call_5153 = relay.TupleGetItem(func_1567_call(), 0)
func_1753_call = mod.get_global_var('func_1753')
func_1755_call = mutated_mod.get_global_var('func_1755')
call_5154 = func_1753_call()
call_5155 = func_1753_call()
func_2872_call = mod.get_global_var('func_2872')
func_2873_call = mutated_mod.get_global_var('func_2873')
call_5183 = func_2872_call()
call_5184 = func_2872_call()
bop_5210 = relay.left_shift(uop_5139.astype('uint16'), relay.reshape(call_5103.astype('uint16'), relay.shape_of(uop_5139))) # shape=(1470,)
bop_5213 = relay.left_shift(uop_5141.astype('uint16'), relay.reshape(call_5104.astype('uint16'), relay.shape_of(uop_5141))) # shape=(1470,)
func_1082_call = mod.get_global_var('func_1082')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_5217 = relay.TupleGetItem(func_1082_call(relay.reshape(call_5103.astype('uint32'), [1470,])), 2)
call_5218 = relay.TupleGetItem(func_1084_call(relay.reshape(call_5103.astype('uint32'), [1470,])), 2)
func_2131_call = mod.get_global_var('func_2131')
func_2136_call = mutated_mod.get_global_var('func_2136')
var_5227 = relay.var("var_5227", dtype = "int64", shape = (1040,))#candidate|5227|(1040,)|var|int64
var_5228 = relay.var("var_5228", dtype = "float32", shape = ())#candidate|5228|()|var|float32
call_5226 = relay.TupleGetItem(func_2131_call(relay.reshape(var_5227.astype('int64'), [13, 10, 8]), relay.reshape(var_5227.astype('int64'), [13, 10, 8]), relay.reshape(var_5228.astype('float32'), []), ), 3)
call_5229 = relay.TupleGetItem(func_2136_call(relay.reshape(var_5227.astype('int64'), [13, 10, 8]), relay.reshape(var_5227.astype('int64'), [13, 10, 8]), relay.reshape(var_5228.astype('float32'), []), ), 3)
const_5230 = relay.const([-2,-9,2,4,2,5,10,-6,-5,1,-7,2,-2,6,-1,2,-3,10,4,-7,9,-8,-3,3,-5,-7,-5,-8,10,-9,-6,4,1,-7,9,3,9,8,4,-10,-4,-5,10,6,-9,10,-7,7,2,4,1,1,9,-1,-9,-5,-10,3,-6,-9,-5,2,-5,1,4,-9,3,6,9,6,-10,4,1,-9,8,4,7,7,-5,-9,2,-8,10,-8,3,9,-4,3,-10,-4,8,-4,-4,-7,7,-9,-6,5,-1,4,-8,-7,-8,10,1,-8,10,6,-1,2,-10,9,10,-9,1,-6,8,1,-2,-4,3,-3,-4,-6,3,2,-10,7,-9,2,-4,8,10,10,8,-6,-7,-5,-2,-3,10,-6,10,-10,-4,8,-9,-1,-4,2,6,7,10,2,5,-5,-3,-7,8,2,10,-1,-6,1,-5,4,-2,5,-4,-2,-2,-6,-1,10,10,1,-3,10,-7,9,-3,-3,7,7,-5,-10,9,6,9,-7,-9,9,-3,1,-2,-1,-7,-10,-4,-6,9,8,4,-7,-9,1,3,1,-9,-5,5,5,-2,-6,5,7,-10,1,-8,-6,-3,8,5,3,2,-6,-7,8,-8,-8,-6,7,10,9,-6,-7,-10,-6,-2,10,10,10,-6,7,-5,-7,7,-9,1,5,3,-10,-6,-9,-7,4,-6,5,5,8,-6,-4,-8,-2,-1,8,-10,8,-5,4,-7,-1,5,8,7,-1,-8,6,8,-5,-4,2,1,9,8,-10,-2,-1,-9,8,-3,-9,-5,-9,2,1,-6,1,4,5,-3,-8,-10,-3,-6,-4,-1,-1,7,-9,-3,8,-5,1,9,3,3,-7,10,9,-3,8,6,-4,1,-6,6,-6,-5,4,2,-3,9,-7,4,-9,-1,-4,-6,1,-2,2,3,10,-6,1,2,-3,6,3,6,-8,9,-3,8,2,5,9,3,-5,4,7,9,-10,-9,-6,3,3,6,6,-4,-6,-4,6,-4,6,-6,-7,-2,4,8,-8,4,4,9,-3,-10,-9,-4,2,5,-8,-9,-10,10,2,-3,-2,2,-8,7,4,-10,2,8,-2,9,6,4,9,-9,5,-3,-1,-10,6,2,-5,-2,6,8,-3,-9,7,2,-9,-8,4,-9,6,6,9,3,8,-10,3,4,6,-2,9,10,-6,-2,10,7,-5,10,-9,-9,-6,5,8,7,3,9,-7,9,7,-4,-7,5,-4,-5,7,3,-2,5,8,-5,3,-4,-5,4,6,-1,10,4,-10,-8,2,10,-10,7,-1,8,8,-4,4,-7,7,3,3,-5,6,-9,5,-6,6,-2,6,1,-3,-9,5,9,-3,3,-4,8,-2,-10,-8,-3,-8,3,8,-9,3,9,-1,1,-5,-1,-3,-8,-8,1,5,-2,2,8,-1,10,-5,1,-9,2,-7,10,-4,4,-7,7,10,6,7,9,-2,-2,-9,-3,-5,10,-9,-1,-1,4,9,-3,-3,8,-4,7,-7,-1,2,-5,-10,-1,7,10,9,9,5,7,-10,7,-6,-10,-3,-9,6,4,-9,2,6,-8,-6,-3,9,-9,6,3,-10,5,3,-8,10,-2,4,-6,8,7,1,6,-3,10,-3,-1,5,6,-4,6,6,-4,4,5,4,-7,-4,-6,2,-6,9,9,7,-4,10,6,10,8,-10,7,5,-10,8,7,3,6,5,8,1,-5,-9,-8,-1,-4,-1,4,6,-8,1,6,-1,6,6,-9,5,9,-5,3,-5,-6,8,4,-3,8,-8,-5,-7,-4,-6,-1,9,5,8,9,-6,2,4,-8,8,8,-10,-4,8,9,3,5,9,5,9,-1,-10,9,-8,-10,2,-2,-4,9,-6,-6,-8,2,-4,-7,2,7,10,7,-4,-6,-8,-3,9,-4,2,-6,4,10,-7,-8,4,3,5,5,9,-10,-4,-9,6,-7,-3,1,-1,3,9,-6,-1,8,-1,9,-6,6,1,10,9,8,-2,-9,-1,10,-8,-4,7,6,6,-9,4,2,-1,5,-2,3,-1,7,-7,-3,-7,-5,-8,4,6,-6,-9,6,-3,-1,3,10,-6,-7,8,-7,4,1,3,-5,7,9,-2,-7,5,3,-9,5,4,8,1,-8,7,8,3,7,7,-7,1,7,1,8,-4,5,5,1,9,1,-7,6,-2,-3,10,-9,5,1,-5,5,-1,1,-6,-2,-2,-10,9,10,-10,-10,6,-1,5,-6,-10,2,-5,-7,-5,-3,1,-5,-9,2,1,-10,-1,-7,-3,-7,-6,-6,5,-10,-2,7,-8,6,9,-9,-9,-5,-9,9,7,-7,-8,-4,8,-1,-8,-6,1,6,-7,10,3,8,-10,-4,-2,8,5,1,9,-4,2,-5,-9,3,-5,3,10,8,10,-5,-6,-2,-8,-4,7,-3,-7,2,-9,-5,-1,10,2,1,3,-4,-10,10,1,4,6,-9,-4,-1,9,7,4,1,-7,-10,10,-9,-10,10,-7,-1,2,5,10,-8,4,9,3,6,2,-2,9,5,-4,-3,9,-3,-4,6,-6,5,2,-10,3,6,-3,2,-2,3,1,-7,2,3,10,-3,4,8,1,-10,7,4,4,2,-2,-2,-3,-5,-8,-2,-8,7,-3,7,-7,10,4,-4,1,-4,2,-8,-4,-1,-1,-3,10,-8,-8,-8,-3,7,-4,6,6,10,8,5,9,8,-3,-7,-2,-7,-4,-5,5,4,4,7,-4,10,-3,5,4,-3,4,-9,7,-9,3,7,8,7,3,-4,9,10,10,5,9,-1,8,-1,8,-7,4,6,7,-3,-7,9,10,1,5,4,-6,6,6,10,-5,-4,-10,10,6,-8,-8,-1,4,-8,8,2,-6,-9,-4,-6,-5,-8,5,-10,9,5,5,-6,8,10,6,3,8,4,-8,-1,-5,5,6,10,-5,5,-3,-9,-4,10,-8,-2,2,10,-8,-2,-1,2,4,5,9,9,10,4,6,-6,6,3,-5,7,-4,-8,-7,2,-6,-3,4,8,10,10,5,-10,-5,8,-4,5,5,-2,-8,6,-1,1,-2,1,-1,6,8,-9,-9,-3,4,-10,3,-1,-6,5,7,3,4,-1,-7,-5,5,6,-2,6,8,5,1,4,-5,5,6,-3,-5,7,3,7,-7,1,-3,-5,4,6,-8,-3,1,8,9,2,-6,-6,-3,7,7,9,-5,-4,-6,4,-1,8,-8,-1,-8,1,-4,-2,-1,6,9,9,-10,2,-1,8,7,6,-2,10,-2,3,9,2,6,-9,1,-8,-3,7,-1,8,2,-1,2,2,4,9,-1,-5,-7,2,6,-1,2,-3,-4,9,6,8,-1,2,-8,-1,2,-7,-4,-8,-1,-9,6,6,-2,6,6,6,6,5,6,2,3,6,-8,-8,-5,2,9,-1,-2,1,-1,-7,4,3,-7,-10,4,-2,2,3,-8,-7,2,10,-7,4,-9,-6,-3,2,4,4,8,2,5,7,8,-2,4,-6,4,-8,1,3,1,-5,7,-2,-3,-7,10,4,8,10,-10,10,8,-5,1,2,5,-6,-7,9,7,-10,8,6,-2,7,-5,-5,6,-2,10,-9,-3,9,-7,10,4,10,-8,9,5,1,6,2,6,9,10,-10,6,3,-10,7,6,10,-6,-3,7,-2,2,5,10,5,-1,-4,-6,10,3,10,9,-3,-8,-7,-2,8,-4,3,4,-7,3,-3,10,5,-5,3,4,8,-2,-7,-5,-2,7,-5,3,9,3,7,7,9,6,5,-9,3,1,8,6,-7,5,-5,3,-6,-8,-2,-4,9,4,-9,-1,6,2,-10,-4,-3,-8,-9,4,7,-6,-1,3,-10,5,2,2,10,2,4,4,6,8,2,1,-6,-10,7,6,-2,7], dtype = "uint16")#candidate|5230|(1470,)|const|uint16
bop_5231 = relay.equal(bop_5210.astype('bool'), relay.reshape(const_5230.astype('bool'), relay.shape_of(bop_5210))) # shape=(1470,)
bop_5234 = relay.equal(bop_5213.astype('bool'), relay.reshape(const_5230.astype('bool'), relay.shape_of(bop_5213))) # shape=(1470,)
output = relay.Tuple([call_5146,call_5152,call_5154,call_5183,call_5217,call_5226,var_5227,var_5228,bop_5231,])
output2 = relay.Tuple([call_5147,call_5153,call_5155,call_5184,call_5218,call_5229,var_5227,var_5228,bop_5234,])
func_5237 = relay.Function([var_5227,var_5228,], output)
mod['func_5237'] = func_5237
mod = relay.transform.InferType()(mod)
mutated_mod['func_5237'] = func_5237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5237_call = mutated_mod.get_global_var('func_5237')
var_5239 = relay.var("var_5239", dtype = "int64", shape = (1040,))#candidate|5239|(1040,)|var|int64
var_5240 = relay.var("var_5240", dtype = "float32", shape = ())#candidate|5240|()|var|float32
call_5238 = func_5237_call(var_5239,var_5240,)
output = call_5238
func_5241 = relay.Function([var_5239,var_5240,], output)
mutated_mod['func_5241'] = func_5241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_5293 = relay.TupleGetItem(func_3411_call(), 0)
call_5294 = relay.TupleGetItem(func_3412_call(), 0)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
const_5305 = relay.const([[-2,-3,-9,2,-10,1,-5,10,-1,5,-5,-5,-2,-1,-2,-10,7,9,-4,3,1,-5,-10,-6,5,3,8,-7,8,-3,-10,-7,8,4,-6,5,10,6,6,3,5,5,3,-6,-9,-3,3,7,-5,1,-9,-1,-6,-3,8,8,-1,9,-5,6,5,5,9,-9,-7,6,-9,-7,3,-1,-5,6,-2,-1,-9,2,-6,2,-1,8,3,5,2,-9,1,3,9,-1,4,9,-9,-7,-10,-8,4,-8,-1,-1,5,7,-1,4,-10,10,-7,9,-10,10,-7,-10,6,8,-2,-2,10,-5,-10,1,-3,5,-10,5,3,1,-8,1,-10,5,1,-9,7,-1,2,-10,-5,-5,1,6,-9,-4,-7,-1,5,6,-3,6,-10,8,9,7,5,10,3,-8,2,-7,6,-3,-4,-6,6,9,-8,-10,-7,2,8,-5,-7,-1,-6,5,8,4,9,-9,3,2,6,-10,-8,2,4,7,2,-8,8,-4,-3,10,-10,8,-8,-5,-4,-5,7,10,-7,-1,-7,-9,2,3,2,9,2,-5,10,3,3,8,-5,9,3,1,9,-5,5,-8,1,1,5,-2,-4,-8,-4,6,3,1,5,8,-4,-7,-10,8,-2,-5,-2,9,3,-4,-4,-6,6,-4,1,-7,4,-6,10,-8,-2,7,-9,2,6,8,-4,6,4,-5,4,2,7,-4,3,-9,-4,-10,5,-6,-8,8,1,-6,-5,-1,-2,-7,-4,-5,-5,-1,3,6,5,-6,8,-7,-9,7,-3,-5,3,3,4,-4,4,-10,9,4,9,9,7,6,10,-2,-2,-7,8,2,-7,3,-2,-10,-10,-6,-8,6,-10,3,-6,2,-1,-4,-8,3,5,-9,-10,9,-7,10,-10,1,9,-2,9,4,5,-1,8,-8,-1,-1,8,-2,7,-10,-8,-8,5,1,-6,-5,5,-3,1,6,-8,4,7,1,-10,10,2,-5,10,4,-1,8,-7,10,2,-2,3,8,-6,5,-10,3,4,10,4,-3,-2,-2,6,9,-10,-10,-8,6,-7,-9,-7,-8,10,9,1,10,5,-4,-6,8,-3,10,7,3,-6,-9,-5,-3,5,9,-4,-1,1,-9,-6,2,7,1,7,-10,-8,-7,7,8,-4,8,-5,8,-4,-4,5,-10,-9,8,6,-10,-8,5,-7,-7,-9,-8,4,2,-2,-8,2,1,10,-7,9,3,2,-3,3,7,-3,-8,-10,6,-7,-3,4,-8,5,-5,1,-4,-5,2,-4,-10,6,5,8,-2,-8,4,10,8,-7,2,10,3,-2,3,-7,-5,3,-3,-3,-6,9,-5,-3,-4,8,10,-3,-3,-1,-3,9,1,9,-3,-8,-5,2,-6,3,-5,10,-8,2,10,-10,-10,-2,-1,7,-5,-4,2,10,-10,9,-5,5,-2,7,-10,6,5,3,8,1,-4,2,2,-3,-7,2,-1,-7,3,6,2,5,9,3,-9,9,-3,9,-6,-10,5,5,6,-1,-8,4,9,7,-9,-5,7,2,-8,-5,-3,5,4,6,-4,3,-3,1,-6,2,-9,4,3,-7,-8,5,-7,1,-2,5,3,-9,-3,-2,9,6,3,5,7,6,4,7,2,5,5,2,-6,-8,-1,1,4,-7,7,-10,-6,10,-8,1,4,-5,-6,7,-8,-2,-5,9,8,4,-2,2,5,-7,-10,4,-6,3,8,1,-6,6,-6,1,-5,-1,-1,2,-6,8,9,10,-3,-5,-2,8,1,-9,1,3,3,2,7,-2,4,1,-2,-9,1,-7,-4,10,10,-4,-7,6,1,8,3,4,-7,-3,3,5,9,8,-6,-1,-8,-7,4,-7,-1,-4,2,-4,-1,10,-8,-10,7,-10,-6,9,-8,9,2,-6,2,9,-7,4,7,-4,1,4,1,2,5,-1,10,4,9,-4,1,4,-4,6,4,-10,5,2,-8,-3,-8,7,-6,7,-2,-6,-4,-10,1,-4,7,2,6,6,-8,6,-5,3,5,-1,-3,-1,-9,7,-7,7,-3,-6,2,-2,2,8,4,-3,3,7,10,3,10,-1,9,3,-6,-2,10,9,-5,-3,10,7,9,7,3,-1,10,-2,-8,2,3,-2,-7,6,10,10,-7,-3,-2,-6,-10,9,-8,8,3,2,3,8,-7,-3,-6,-8,9,-9,-2,7,-3,4,5,-7,-4,-4,-3,9,1,-8,5,9,-7,-7,3,-1,-8,8,-6,2,6,-7,10,-10,7,7,-3,-6,-5,9,6,-4,6,-8,9,-4,-7,7,-6,10,6,-5,-4,-1,-5,6,-10,-6,6,-9,-3,1,4,9,4,3,-7,-1,1,-1,-10,-8,9,9,9,2,2,3,-1,6,-2,-7,7,-1,8,7,-8,10,-10,-5,-8,-10,-10,6,5,-9,1,9,4,8,-3,1,9,-1,2,-5,-10,-1,-8,-4,-9,4,-8,7,7,3,-10,1,6,6,9,10,-8,2,8,-1,-8,6,-1,8,-8,-6,-3,-8,3,9,-9,1,-10,3,8,4,2,2,2,-9,-10,1,-6,-4,-6,10,2,3,6,-9,-2,10,4,5,-1,8,-1,-5,-1,5,2,5,9,-5,3,-9,8,7,3,-9,8,4,-10,8,7,-1,1,4,-3,6,4,1,7,5,-1,2,4,1,-6,3,2,-4,-9,4,-9,8,-8,-7,-6,-2,-9,-6,-4,-4,6,6,3,-3,-10,4,9,-5,2,9,6,-5,-10,7,10,2,1,3,8,6,-3,9,4,-9,8,4,-3,-3,4,5,-1,9,7,-6,8,-6,2,-2,-1,-5,-1,5,2,7,7,-1,10,-10,1,-5,8,9,7,10,-4,-7,6,1,9,5,9,-4,-5,8,-2,5,6,-2,7,1,9,-10,-9,4,-6,-3,4,-4,6,4,-8,-10,3,5,5,5,3,8,6,-1,-2,7,-4,6,-6,-7,-9,9,8,6,-2,-7,8,-9,9,9,4,1,1,-9,-10,-1,5,5,-4,9,3,2,-3,-8,-1,-8,-2,-5,6,10,-4,5,3,-7,10,-4,3,-4,7,3,-8,-2,-9,5,-5,-9,8,-10,-5,-7,-2,8,8,-6,-6,10,-9,6,1,1,-6,5,-8,4,-2,8,3,1,-10,6,-5,1,9,2,-9,-6,-5,1,-5,-7,-8,-1,3,-4,-1,10,-9,2,10,-9,-8,6,-7,-9,3,-9,10,-6,6,-5,-2,-6,8,8,1,7,-2,5,1,2,-7,-7,-5,-2,-2,-9,-4,5,3,7,1,-5,8,-4,1,3,1,7,-2,6,-7,-8,9,2,7,8,-5,2,-1,2,-4,-2,-6,10,9,2,4,9,-5,5,-2,1,6,-3,-2,10,4,1,-2,-6,1,-1,9,-8,2,-6,8,4,-1,-2,-5,-8,-4,-7,-4,-1,2,-7,1,5,1,-10,1,3,-4,-4,7,6,-5,-2,-7,-3,5,1,-7,1,-2,-7,6,4,6,9,-3,7,-9,6,-1,8,-9,2,-9,-4,-2,3,-2,8,-6,1,1,7,8,7,-10,-3,-3,-5,-8,3,-1,-7,-3,10,3,9,3,3,7,1,6,8,-9,-4,-3,6,-3,-6,-10,-6,-10,-7,10,2,-4,9,-7,9,-10,-4,10,-7,-4,9,-9,-9,1,10,7,-3,7,1,8,9,-3,-3,4,5,-4,4,-1,-4,10,-6,-8,-10,-10,6,-10,-8,-9,-7,-2,10,9,9,8,2,7,-5,-6,9,-5,-4,3,2,-2,6,-3,9,-2,-4,4,-8,-4,8,-7,8,6,-9,-3,-3,-1,-8,-7,8,5,-2,8,10,5,5,-6,6,-4,-1,9,1,-2,4,-6,-1,-6,2,4,-7,-1,-3,-3,1,7,4,5]], dtype = "uint32")#candidate|5305|(1, 1470)|const|uint32
call_5304 = relay.TupleGetItem(func_3025_call(relay.reshape(const_5305.astype('uint32'), [1470,])), 0)
call_5306 = relay.TupleGetItem(func_3027_call(relay.reshape(const_5305.astype('uint32'), [1470,])), 0)
uop_5323 = relay.acosh(call_5304.astype('float32')) # shape=(1470,)
uop_5325 = relay.acosh(call_5306.astype('float32')) # shape=(1470,)
func_4945_call = mod.get_global_var('func_4945')
func_4950_call = mutated_mod.get_global_var('func_4950')
const_5331 = relay.const([[4],[8],[2],[-7]], dtype = "uint64")#candidate|5331|(4, 1)|const|uint64
var_5332 = relay.var("var_5332", dtype = "uint64", shape = (60,))#candidate|5332|(60,)|var|uint64
var_5333 = relay.var("var_5333", dtype = "int16", shape = ())#candidate|5333|()|var|int16
call_5330 = relay.TupleGetItem(func_4945_call(relay.reshape(const_5331.astype('uint64'), [1, 2, 2]), relay.reshape(var_5332.astype('uint64'), [15, 2, 2]), relay.reshape(call_5304.astype('uint32'), [1470,]), relay.reshape(var_5333.astype('int16'), []), ), 5)
call_5334 = relay.TupleGetItem(func_4950_call(relay.reshape(const_5331.astype('uint64'), [1, 2, 2]), relay.reshape(var_5332.astype('uint64'), [15, 2, 2]), relay.reshape(call_5304.astype('uint32'), [1470,]), relay.reshape(var_5333.astype('int16'), []), ), 5)
output = relay.Tuple([call_5293,const_5305,uop_5323,call_5330,const_5331,var_5332,var_5333,])
output2 = relay.Tuple([call_5294,const_5305,uop_5325,call_5334,const_5331,var_5332,var_5333,])
func_5338 = relay.Function([var_5332,var_5333,], output)
mod['func_5338'] = func_5338
mod = relay.transform.InferType()(mod)
var_5339 = relay.var("var_5339", dtype = "uint64", shape = (60,))#candidate|5339|(60,)|var|uint64
var_5340 = relay.var("var_5340", dtype = "int16", shape = ())#candidate|5340|()|var|int16
output = func_5338(var_5339,var_5340,)
func_5341 = relay.Function([var_5339,var_5340,], output)
mutated_mod['func_5341'] = func_5341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2768_call = mod.get_global_var('func_2768')
func_2769_call = mutated_mod.get_global_var('func_2769')
call_5357 = relay.TupleGetItem(func_2768_call(), 1)
call_5358 = relay.TupleGetItem(func_2769_call(), 1)
func_4164_call = mod.get_global_var('func_4164')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_5361 = relay.TupleGetItem(func_4164_call(), 0)
call_5362 = relay.TupleGetItem(func_4165_call(), 0)
output = relay.Tuple([call_5357,call_5361,])
output2 = relay.Tuple([call_5358,call_5362,])
func_5366 = relay.Function([], output)
mod['func_5366'] = func_5366
mod = relay.transform.InferType()(mod)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5366_call = mutated_mod.get_global_var('func_5366')
call_5367 = func_5366_call()
output = call_5367
func_5368 = relay.Function([], output)
mutated_mod['func_5368'] = func_5368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_5429 = func_1158_call()
call_5430 = func_1158_call()
output = relay.Tuple([call_5429,])
output2 = relay.Tuple([call_5430,])
func_5431 = relay.Function([], output)
mod['func_5431'] = func_5431
mod = relay.transform.InferType()(mod)
output = func_5431()
func_5432 = relay.Function([], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_5482 = relay.TupleGetItem(func_1236_call(), 1)
call_5483 = relay.TupleGetItem(func_1237_call(), 1)
output = call_5482
output2 = call_5483
func_5519 = relay.Function([], output)
mod['func_5519'] = func_5519
mod = relay.transform.InferType()(mod)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5519_call = mutated_mod.get_global_var('func_5519')
call_5520 = func_5519_call()
output = call_5520
func_5521 = relay.Function([], output)
mutated_mod['func_5521'] = func_5521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5089_call = mod.get_global_var('func_5089')
func_5091_call = mutated_mod.get_global_var('func_5091')
call_5538 = func_5089_call()
call_5539 = func_5089_call()
var_5563 = relay.var("var_5563", dtype = "bool", shape = (10, 16, 13))#candidate|5563|(10, 16, 13)|var|bool
bop_5564 = relay.less_equal(call_5538.astype('bool'), relay.reshape(var_5563.astype('bool'), relay.shape_of(call_5538))) # shape=(10, 16, 13)
bop_5567 = relay.less_equal(call_5539.astype('bool'), relay.reshape(var_5563.astype('bool'), relay.shape_of(call_5539))) # shape=(10, 16, 13)
output = bop_5564
output2 = bop_5567
func_5569 = relay.Function([var_5563,], output)
mod['func_5569'] = func_5569
mod = relay.transform.InferType()(mod)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5570 = relay.var("var_5570", dtype = "bool", shape = (10, 16, 13))#candidate|5570|(10, 16, 13)|var|bool
func_5569_call = mutated_mod.get_global_var('func_5569')
call_5571 = func_5569_call(var_5570)
output = call_5571
func_5572 = relay.Function([var_5570], output)
mutated_mod['func_5572'] = func_5572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4226_call = mod.get_global_var('func_4226')
func_4227_call = mutated_mod.get_global_var('func_4227')
call_5597 = relay.TupleGetItem(func_4226_call(), 1)
call_5598 = relay.TupleGetItem(func_4227_call(), 1)
func_2368_call = mod.get_global_var('func_2368')
func_2369_call = mutated_mod.get_global_var('func_2369')
call_5599 = relay.TupleGetItem(func_2368_call(), 0)
call_5600 = relay.TupleGetItem(func_2369_call(), 0)
output = relay.Tuple([call_5597,call_5599,])
output2 = relay.Tuple([call_5598,call_5600,])
func_5619 = relay.Function([], output)
mod['func_5619'] = func_5619
mod = relay.transform.InferType()(mod)
output = func_5619()
func_5620 = relay.Function([], output)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2167_call = mod.get_global_var('func_2167')
func_2168_call = mutated_mod.get_global_var('func_2168')
call_5685 = relay.TupleGetItem(func_2167_call(), 0)
call_5686 = relay.TupleGetItem(func_2168_call(), 0)
output = call_5685
output2 = call_5686
func_5697 = relay.Function([], output)
mod['func_5697'] = func_5697
mod = relay.transform.InferType()(mod)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5697_call = mutated_mod.get_global_var('func_5697')
call_5698 = func_5697_call()
output = call_5698
func_5699 = relay.Function([], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4976_call = mod.get_global_var('func_4976')
func_4977_call = mutated_mod.get_global_var('func_4977')
call_5700 = func_4976_call()
call_5701 = func_4976_call()
uop_5715 = relay.erf(call_5700.astype('float32')) # shape=(11, 7, 12)
uop_5717 = relay.erf(call_5701.astype('float32')) # shape=(11, 7, 12)
func_4164_call = mod.get_global_var('func_4164')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_5721 = relay.TupleGetItem(func_4164_call(), 0)
call_5722 = relay.TupleGetItem(func_4165_call(), 0)
output = relay.Tuple([uop_5715,call_5721,])
output2 = relay.Tuple([uop_5717,call_5722,])
func_5738 = relay.Function([], output)
mod['func_5738'] = func_5738
mod = relay.transform.InferType()(mod)
output = func_5738()
func_5739 = relay.Function([], output)
mutated_mod['func_5739'] = func_5739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3109_call = mutated_mod.get_global_var('func_3109')
call_5745 = func_3108_call()
call_5746 = func_3108_call()
func_2659_call = mod.get_global_var('func_2659')
func_2661_call = mutated_mod.get_global_var('func_2661')
call_5769 = relay.TupleGetItem(func_2659_call(), 0)
call_5770 = relay.TupleGetItem(func_2661_call(), 0)
output = relay.Tuple([call_5745,call_5769,])
output2 = relay.Tuple([call_5746,call_5770,])
func_5795 = relay.Function([], output)
mod['func_5795'] = func_5795
mod = relay.transform.InferType()(mod)
output = func_5795()
func_5796 = relay.Function([], output)
mutated_mod['func_5796'] = func_5796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4525_call = mod.get_global_var('func_4525')
func_4526_call = mutated_mod.get_global_var('func_4526')
call_5852 = relay.TupleGetItem(func_4525_call(), 0)
call_5853 = relay.TupleGetItem(func_4526_call(), 0)
func_4297_call = mod.get_global_var('func_4297')
func_4300_call = mutated_mod.get_global_var('func_4300')
const_5855 = relay.const(2, dtype = "uint32")#candidate|5855|()|const|uint32
call_5854 = relay.TupleGetItem(func_4297_call(relay.reshape(const_5855.astype('uint32'), [])), 0)
call_5856 = relay.TupleGetItem(func_4300_call(relay.reshape(const_5855.astype('uint32'), [])), 0)
output = relay.Tuple([call_5852,call_5854,const_5855,])
output2 = relay.Tuple([call_5853,call_5856,const_5855,])
func_5860 = relay.Function([], output)
mod['func_5860'] = func_5860
mod = relay.transform.InferType()(mod)
output = func_5860()
func_5861 = relay.Function([], output)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4525_call = mod.get_global_var('func_4525')
func_4526_call = mutated_mod.get_global_var('func_4526')
call_5865 = relay.TupleGetItem(func_4525_call(), 1)
call_5866 = relay.TupleGetItem(func_4526_call(), 1)
output = call_5865
output2 = call_5866
func_5874 = relay.Function([], output)
mod['func_5874'] = func_5874
mod = relay.transform.InferType()(mod)
output = func_5874()
func_5875 = relay.Function([], output)
mutated_mod['func_5875'] = func_5875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_6009 = relay.TupleGetItem(func_2804_call(), 0)
call_6010 = relay.TupleGetItem(func_2806_call(), 0)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
const_6012 = relay.const([[7.509711,3.921337,7.732000,-5.508441,7.027427,3.054512],[7.084159,-0.473907,-0.417158,-8.535530,7.372663,1.940842],[9.227929,2.781988,-7.109766,-0.372295,-6.090295,7.956286],[2.973545,6.406767,-1.959418,-4.432090,0.022899,6.321046],[-0.528680,1.054556,0.759811,5.317588,-7.318301,0.583996],[8.682892,-6.856303,8.650028,5.690323,8.732473,-7.596123],[2.152683,-4.263648,7.264521,-4.109853,9.454878,6.518358],[0.256944,9.618269,5.070717,-4.238513,6.281109,-0.027012],[-2.776654,6.252266,6.432185,6.591202,-7.973371,2.113131],[4.427910,8.418535,-4.198140,-0.229908,-7.749923,4.202977],[-3.615433,-9.177706,-8.100785,-4.303384,-3.918106,-4.407480],[2.728793,-5.465551,7.141127,-5.390722,4.630768,7.914425],[-8.261012,6.211361,-5.437625,0.269114,0.074324,-2.570122],[-8.823106,-3.542912,-7.887518,-3.598320,2.748097,7.197963],[1.894438,2.261139,9.734987,-6.241441,-3.054842,-1.205144],[-6.452316,6.405413,8.466703,8.656850,1.806783,-7.543312],[-4.665711,6.188964,7.234767,5.013263,-8.223029,-1.647818],[1.043701,-6.802119,-7.770605,-4.923718,-6.306903,-4.617082],[1.882904,2.275854,-6.272262,-8.745571,4.078136,-5.933027],[-7.218490,6.742427,-5.125489,4.125733,-1.750154,-4.476110],[-9.172634,7.669247,-2.278391,8.171631,2.622872,-6.672623],[-9.843550,-4.412553,1.027712,0.778489,-9.213385,-6.262309],[-6.541935,0.716027,0.199686,5.222774,-7.264374,-5.236026],[8.749001,5.220234,6.460377,-1.514285,-5.161571,3.257130],[0.700614,-0.209331,6.826427,-3.778658,-9.730228,-5.997578],[0.115813,8.010249,-6.796857,3.879904,9.131291,-0.042680],[-8.108659,4.002642,4.329599,-8.433926,6.179119,3.339023],[-4.160238,-2.436921,3.599060,-6.806540,-6.927491,-8.510961],[-6.735429,-8.632475,-3.608022,-0.495758,2.236014,-3.144675],[-6.049784,6.472151,6.590001,-5.870238,2.966394,-8.832380],[9.656772,2.873971,-6.214626,-6.709112,8.451887,3.568643],[9.761935,7.184261,0.303194,6.476753,-2.052946,1.202985],[9.383539,4.308233,-5.686131,8.418236,3.502766,4.281453],[9.820738,-9.449773,3.445677,-4.081378,1.835097,9.527653],[7.608151,-7.294168,-9.857589,4.810396,2.051579,-0.135977],[-5.596494,4.127986,-2.627614,-3.178682,-3.298784,8.136782],[-4.019116,-8.953103,1.195262,-5.730976,-7.825580,-8.466038],[-0.009372,5.275598,8.398963,7.133484,9.439292,5.115390],[6.128985,1.549459,-5.758828,2.325111,7.063313,-6.198087],[-9.105440,7.547811,9.224425,5.674434,-1.332941,1.219824],[-7.010576,0.600963,4.442603,9.151817,-8.397101,-1.526655],[2.064644,7.401178,8.315001,8.786062,-2.932439,-9.477410],[9.854441,6.377769,-4.260790,1.816140,3.553436,6.296912],[1.323377,-3.744324,0.418156,-3.739185,-9.752071,4.299323],[2.554931,0.216581,-4.082431,4.209789,5.435973,6.747160],[3.717466,-5.117005,7.504781,5.834133,9.864177,4.171980],[-4.450301,1.757574,7.025585,-4.386278,-7.759444,1.399151],[1.591077,-8.823647,6.017795,6.148293,-9.201034,-7.946176],[1.497213,-9.602752,2.538592,4.926015,3.983315,-4.141237],[-5.034198,0.957653,8.709504,9.833628,3.405358,6.458847],[3.905334,7.526668,0.558273,5.039123,7.471529,5.118582],[4.596531,-6.973470,3.503504,-4.626295,5.223767,-4.766238],[-9.424886,2.624401,0.581748,-2.520924,1.922704,-7.708222],[4.135047,6.975776,9.401032,5.371259,-1.312222,4.244376],[0.306867,9.063500,7.600841,9.128210,1.863249,0.060985],[1.605755,6.773964,8.066909,2.805240,8.581432,3.529658],[1.307982,-4.236320,-0.458083,-4.770374,1.333773,-8.121865],[7.254209,-5.102135,1.187290,-3.094314,9.936904,2.986346],[0.616932,-3.021116,-7.982602,-9.489456,-4.326953,7.403072],[-0.254977,-6.146595,4.662611,3.127255,-9.216862,6.691852],[3.832220,7.983675,5.079112,-6.521325,7.416981,5.717986],[-6.830586,-0.813542,-3.589722,-6.736045,5.431330,-7.650513],[9.264920,7.312929,4.840463,9.348515,-0.446762,-3.490024],[-9.023151,1.899060,8.836172,0.190221,-6.949312,-4.757891],[7.230283,8.877263,-2.746476,9.988104,0.509359,4.902986],[1.179034,-6.295918,0.955390,0.006643,0.577518,-3.677928],[0.163421,-3.847633,9.726958,1.439021,8.950483,2.361693],[-8.145307,-4.788375,9.368205,5.135068,-0.527301,8.785734],[-4.117776,6.151622,7.370692,-3.502331,4.942433,-4.873033],[4.824264,7.948037,-1.072845,-9.570758,2.415075,6.819047],[2.758436,0.161329,-7.074736,4.449289,6.386296,-4.695918],[-2.569333,-2.728396,6.311983,-5.670199,-5.000106,-1.449667],[-1.416846,5.021431,0.958940,1.301386,2.807701,-8.534752],[3.422990,-7.249769,4.964028,1.522380,1.048985,8.131934],[-4.090286,-8.363660,-6.901124,2.167735,5.392708,-3.942962],[2.617321,0.321845,5.712373,-5.865454,-4.934235,6.721824],[1.872324,9.206208,-4.106588,-1.775798,9.446338,8.480631],[8.334553,-2.974238,-8.334976,8.698913,-8.578909,-6.829086],[-0.563432,-3.102859,-8.049401,-0.941647,-7.697711,-7.362149],[0.867441,1.461821,1.468861,-5.696523,-0.350016,-4.676180],[0.393324,-4.601547,-7.138576,2.193618,-7.909095,7.529723],[-7.611130,-4.639361,-1.874361,1.181904,7.760674,-2.306829],[-0.057259,0.849510,5.945770,3.422880,4.932346,7.863313],[-7.612722,9.791250,-4.493710,9.986418,-1.514690,-9.406697],[2.290239,-0.819522,-9.405397,5.490548,7.446505,2.063005],[-9.788236,-7.293888,4.301945,-2.004473,-3.034272,-9.696527],[-1.187297,7.780964,5.082530,1.379909,-9.338844,-2.256910],[-5.934488,1.785344,-7.131056,2.731661,0.970113,4.063204],[3.694003,-2.289248,6.378083,-5.435526,8.346529,-7.815914],[2.034778,3.489433,-5.551744,0.308966,9.483182,-2.613622],[2.774993,9.932346,7.205249,0.097382,-3.804321,6.037834],[-5.039174,6.272937,3.097463,6.703591,-4.837316,-0.094605],[-1.181720,1.152662,-3.051478,0.079416,9.967419,-5.762751],[3.257929,5.887434,-4.278722,9.291355,4.676663,-6.561412],[5.991130,8.386441,-7.160797,-3.838010,3.340855,-6.709739],[4.587787,-3.983600,-4.676833,-5.603781,-3.484871,5.237660],[-5.188136,-8.349623,-7.536974,-3.662507,-9.261990,3.876344],[-4.775141,6.128639,9.922545,0.312240,0.064054,-3.221698],[4.068377,-7.936838,-6.843496,-0.335511,-7.145963,-3.704032],[6.886376,-3.829287,0.112054,-6.669670,0.818274,3.277374],[5.331986,-8.771679,-6.938026,2.935434,9.670265,-0.903862],[0.971282,-7.318453,7.837256,-7.299145,7.235213,-8.241314],[-3.789179,-3.365892,-9.116938,6.772903,2.039513,-7.785662],[-3.952973,9.951309,2.248828,8.472752,-8.752064,2.444994],[8.096530,-6.195730,-7.185682,1.966506,8.065646,4.671133],[5.572506,1.394560,-9.494233,9.442970,4.501786,-5.758911],[-8.764481,-7.557767,0.987299,-1.112775,7.146236,7.582918],[1.448881,0.343097,3.939748,-1.521986,0.699008,1.138824],[8.927125,-7.637101,2.235836,-8.543810,-1.935874,-6.540600],[-2.813214,-7.046153,9.861006,5.733051,-3.563296,0.069023],[6.627755,6.796839,4.470453,-5.465878,2.029872,-7.577409],[1.113737,-7.428266,1.430328,4.516606,9.859841,2.806128],[-8.310888,4.221453,1.841370,-0.829396,-7.758046,8.528972],[-7.465216,-6.806776,-4.728267,-0.135734,8.382452,-2.801951],[1.748146,-6.548042,9.115145,4.038949,8.556263,9.738143],[7.198773,3.218618,2.422560,0.793226,6.856173,8.530224],[-0.186430,0.554863,-4.112216,-9.626785,-6.104792,-7.212955],[8.358181,5.798198,-4.235165,7.141040,-3.779797,1.085415],[-9.721480,1.762017,-0.670515,6.343055,-0.007997,2.867076],[-3.727876,-6.336197,-9.695058,9.848748,-9.716205,-9.570848],[7.905768,-6.440681,6.198893,8.597240,-9.088689,1.595734],[8.039270,-1.183482,4.153255,-9.839416,8.770790,-3.942780],[3.951089,5.676615,-0.542297,-3.574031,-0.352414,8.531378],[-0.820557,9.623970,8.843726,3.805242,4.570321,-5.004681],[6.104929,1.199248,7.427258,4.963256,6.895373,-1.537935],[-0.654315,3.580425,1.530915,-3.556291,6.393086,9.963770],[-5.485821,1.001524,-2.153984,0.862268,-4.799857,-9.026548],[-2.557119,-7.042752,0.961832,-9.872165,4.252802,-6.495900],[-1.535725,-0.443361,-6.648917,0.698234,-1.900734,-6.474797],[-3.724100,2.598835,-3.995783,1.735339,1.784321,-7.160367],[-1.565009,-9.525061,-2.400810,9.600304,-1.482754,-8.411638],[5.384379,4.434612,-3.161548,-2.385527,3.564669,0.854222],[8.140666,8.955340,-1.045057,8.622416,-1.379642,-7.743227],[-6.627615,4.996404,6.430426,2.593694,9.073972,9.862899],[0.560314,2.288651,3.612431,-0.625648,5.280789,5.838254],[-6.363610,-5.864426,-3.880736,1.838196,-7.245107,2.911495],[8.866408,-3.929868,-7.161573,-7.607506,4.424730,-1.593791],[0.012204,-5.449488,-0.943845,-7.061008,-5.899003,2.581699],[-0.368892,-6.379105,-5.122318,-0.975840,-1.294923,-6.402718],[-8.571985,-7.036241,-6.768065,-8.829462,-8.962030,-6.681784],[-5.650481,9.461520,-6.642824,-8.836510,3.608142,3.344443],[-9.389700,9.982935,8.404537,2.256561,1.723391,1.272180],[7.575682,9.063742,-2.987570,-8.255380,-0.117457,-6.519684],[6.348354,3.831325,3.301609,-1.641310,2.301525,-0.993685],[9.603441,-3.246560,-6.365770,2.856222,-1.103786,9.761026],[-8.102324,8.995092,5.905070,4.580066,-0.878491,7.009915],[-5.495870,-7.527683,-4.891425,-6.984891,-6.579104,-2.510874],[-1.850352,-4.732362,-5.041076,-3.592150,-0.917401,0.866125],[8.084184,-0.590578,-0.033320,5.340079,8.385768,-4.467404],[-6.552940,6.898992,3.886466,3.905660,4.983482,-9.761984],[7.225903,3.923476,5.910597,9.732175,2.775482,-1.943701],[-7.027569,-7.899046,9.062342,6.494667,1.625441,5.969158],[-3.803361,2.526536,-6.180282,2.950199,-0.195450,4.594808],[0.603060,-8.796334,-7.081676,-1.541537,-2.873433,-6.277916]], dtype = "float64")#candidate|6012|(154, 6)|const|float64
call_6011 = relay.TupleGetItem(func_954_call(relay.reshape(const_6012.astype('float64'), [11, 7, 12])), 1)
call_6013 = relay.TupleGetItem(func_956_call(relay.reshape(const_6012.astype('float64'), [11, 7, 12])), 1)
output = relay.Tuple([call_6009,call_6011,const_6012,])
output2 = relay.Tuple([call_6010,call_6013,const_6012,])
func_6015 = relay.Function([], output)
mod['func_6015'] = func_6015
mod = relay.transform.InferType()(mod)
mutated_mod['func_6015'] = func_6015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6015_call = mutated_mod.get_global_var('func_6015')
call_6016 = func_6015_call()
output = call_6016
func_6017 = relay.Function([], output)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6026 = relay.var("var_6026", dtype = "float32", shape = (8, 3, 16))#candidate|6026|(8, 3, 16)|var|float32
uop_6027 = relay.log10(var_6026.astype('float32')) # shape=(8, 3, 16)
output = relay.Tuple([uop_6027,])
output2 = relay.Tuple([uop_6027,])
func_6031 = relay.Function([var_6026,], output)
mod['func_6031'] = func_6031
mod = relay.transform.InferType()(mod)
var_6032 = relay.var("var_6032", dtype = "float32", shape = (8, 3, 16))#candidate|6032|(8, 3, 16)|var|float32
output = func_6031(var_6032)
func_6033 = relay.Function([var_6032], output)
mutated_mod['func_6033'] = func_6033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5795_call = mod.get_global_var('func_5795')
func_5796_call = mutated_mod.get_global_var('func_5796')
call_6088 = relay.TupleGetItem(func_5795_call(), 1)
call_6089 = relay.TupleGetItem(func_5796_call(), 1)
func_4600_call = mod.get_global_var('func_4600')
func_4602_call = mutated_mod.get_global_var('func_4602')
call_6095 = relay.TupleGetItem(func_4600_call(), 5)
call_6096 = relay.TupleGetItem(func_4602_call(), 5)
output = relay.Tuple([call_6088,call_6095,])
output2 = relay.Tuple([call_6089,call_6096,])
func_6101 = relay.Function([], output)
mod['func_6101'] = func_6101
mod = relay.transform.InferType()(mod)
output = func_6101()
func_6102 = relay.Function([], output)
mutated_mod['func_6102'] = func_6102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3848_call = mod.get_global_var('func_3848')
func_3849_call = mutated_mod.get_global_var('func_3849')
call_6118 = relay.TupleGetItem(func_3848_call(), 0)
call_6119 = relay.TupleGetItem(func_3849_call(), 0)
output = call_6118
output2 = call_6119
func_6121 = relay.Function([], output)
mod['func_6121'] = func_6121
mod = relay.transform.InferType()(mod)
output = func_6121()
func_6122 = relay.Function([], output)
mutated_mod['func_6122'] = func_6122
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6137 = relay.const([[[-1.366701,-4.848620,-2.928872,-7.444751,9.981659,-6.712750,7.068339,-6.226608,3.073155,-5.312776,7.543484,0.574914,-0.580784,5.809589],[6.124554,0.633773,7.660775,8.153501,4.970008,4.112455,6.975300,6.170049,2.702555,-5.567816,1.295242,-8.494291,9.421953,6.413999],[7.135960,-5.931144,8.973172,-3.303639,1.849956,-6.883097,-7.459604,9.575320,8.230707,-1.582822,7.111273,3.570080,8.810594,7.193361],[5.100304,-1.926173,2.729061,5.686434,-7.165743,4.949945,5.769754,6.571380,-5.960334,-3.900823,9.442571,-4.898850,3.693366,9.384758],[6.694830,-0.709719,5.836941,8.568293,5.403051,4.779984,6.857980,-5.241876,-5.611540,-1.905674,-7.354478,-9.186049,9.051093,-9.903483],[-9.769601,-0.691516,-2.311283,-9.241053,8.641376,-3.673324,2.808737,3.977356,6.215934,7.089879,2.765635,-2.083020,-9.680103,9.482591],[6.252719,4.138458,3.064939,3.405054,-5.000707,0.670264,7.962840,-8.893598,8.160342,2.448765,8.758934,-1.890108,-8.556019,0.286314],[3.883227,9.466942,-1.571744,-2.628800,-6.342386,-0.090779,9.872336,-3.842219,5.915171,1.911805,-8.124039,5.144587,-9.324756,-9.601205]],[[-8.483795,5.443565,-0.626199,-9.597813,1.678102,-5.822773,-9.602960,-0.823895,-4.336844,1.087059,-5.365997,-9.274922,8.022857,-2.487102],[4.255551,5.145320,-5.865080,4.980493,4.920909,-8.046340,-8.965288,-7.047383,7.588324,1.377079,8.754150,0.013261,6.979365,9.319162],[-1.567131,-9.195675,-4.477745,2.422879,9.546915,-8.513140,2.028862,0.248610,6.101659,-0.810192,4.595020,1.686962,-6.937450,-7.491220],[-7.114833,4.722048,8.208257,2.289687,3.814151,8.586291,8.682874,9.086284,-3.942717,3.575207,-3.531877,-8.074186,8.895578,-7.239594],[-7.506755,5.613720,-0.132409,7.744940,7.567674,-3.962895,-1.271491,7.182544,5.024185,-0.763205,5.788591,4.353368,9.330393,6.907538],[2.850978,9.538995,-5.613049,9.917487,0.162961,3.644037,7.952996,0.202947,7.109673,9.506999,3.898625,-1.026926,7.960481,-1.130687],[3.415879,5.545819,1.395743,-5.050702,-5.127326,1.343583,4.653156,-8.446785,-3.380418,-5.878174,-5.651223,-9.895329,8.468209,-5.228938],[-5.469409,1.152040,9.691643,3.164920,8.850739,-7.325463,3.378327,7.119465,-2.593739,2.637177,4.661050,-6.627500,9.054859,1.537562]],[[8.607650,-6.070169,-6.473532,1.836557,-5.905814,6.170509,1.028082,3.078974,9.582563,9.805232,-9.753216,-5.749988,-9.875533,6.365236],[1.948132,-5.046538,4.137137,-0.559269,-0.561605,9.483997,-5.943320,3.353688,-6.121441,-5.108042,1.665256,-5.234615,-3.862771,-6.996489],[4.035591,4.153025,-3.197761,-7.541193,-2.182802,-8.109538,-9.036318,0.655844,-5.621270,-3.881999,-9.214564,-6.659650,-1.481388,2.936039],[3.680930,5.044704,-2.529692,1.135932,-8.999536,-2.563614,-8.090931,-2.687023,-1.505254,-0.959317,-1.586459,5.190078,5.488301,-3.589874],[-1.777257,0.095749,3.874658,1.889950,8.708930,1.869362,-7.572651,-0.599937,-3.647100,3.731326,-2.640633,9.412922,6.738800,4.327737],[-9.205730,-6.764928,-7.570143,-3.880683,5.440416,6.342567,-9.351379,-3.229225,-7.268114,8.635439,2.811349,9.224481,-1.351833,-7.590328],[0.675256,2.916096,-0.312237,1.965621,1.930213,-6.379196,5.193825,8.377747,-3.642416,-6.128379,-5.452937,7.531378,-8.457875,8.553487],[0.049267,-8.153390,-7.218036,-8.805998,-0.588974,6.813967,1.493113,-5.637553,5.746202,-0.836158,5.842519,-0.427692,7.941474,-4.597051]],[[-2.024620,-4.798093,5.942465,-7.844192,-2.994145,-1.627268,-0.296740,-2.141967,-8.971068,-5.673329,-7.707063,4.626451,0.391188,7.470100],[-7.471290,7.524079,-9.665502,-6.017089,-8.928647,7.326369,-5.121546,5.138732,5.667009,-7.188920,-3.979223,2.718799,-8.479780,8.971770],[-9.335852,-5.705881,-6.056779,4.693424,7.751334,-3.700292,-3.030844,6.593254,-0.793001,-9.768629,-2.027194,8.003012,4.562315,-9.766930],[4.378796,-9.964290,-4.704064,-8.073727,-8.020817,7.467607,-3.661745,3.248330,0.127227,4.704216,-6.309027,7.500592,-3.875989,6.487984],[2.200983,1.642704,3.168114,-6.851862,-9.804379,-5.684578,-8.858872,1.604434,-8.651532,-3.815127,5.606631,2.476071,5.920208,-4.644522],[1.421658,7.970383,3.945663,9.222102,-6.132498,4.460407,7.900101,1.118673,2.383044,-2.271375,-6.975135,-4.505927,-7.223175,7.537219],[-4.475719,3.310027,7.001646,9.563789,-4.592018,-0.818678,-3.112746,2.546285,6.197767,-9.467161,9.541656,-8.354091,9.728055,4.699833],[-8.110589,5.467777,5.502879,-0.766252,6.852406,8.631685,1.605781,9.552420,9.106488,9.568968,4.549683,-4.297996,-3.560165,-1.244800]],[[6.512130,5.299179,-9.027638,-7.179345,9.642879,6.490035,-5.689705,-8.668274,-8.439501,-6.837804,5.843286,-1.540056,1.266228,2.728646],[-4.425130,0.476316,-3.762641,8.597462,9.702677,-0.919721,9.890745,2.039987,-0.516021,1.270882,0.758033,9.210429,8.489803,-0.103163],[-2.073623,-3.579598,8.011264,-3.261109,-9.708858,4.198747,7.819936,-0.392181,8.749870,8.200427,-6.881148,-2.089685,-8.906619,-3.779922],[7.134452,-5.767786,-2.994552,-0.349565,-9.230377,6.402048,2.563155,-7.014972,-1.839341,3.417980,-9.272930,-9.477162,5.800486,0.239700],[-0.195932,4.151840,-5.505863,6.602367,-0.879016,-2.694879,-3.505488,7.580958,-5.810772,-1.303983,-2.329204,-7.666288,-2.521610,8.818813],[3.622995,0.372317,-4.608245,-2.071916,-8.282130,-4.172573,0.158898,1.731267,-2.802977,4.448886,-2.438173,-8.689624,2.099530,-5.275765],[0.984004,2.341217,-5.651582,-0.864604,3.614672,8.630357,-0.944363,-9.344955,-4.651460,4.747892,-7.186466,-1.541035,-6.746327,-2.378600],[6.708874,-1.124802,-3.066166,-2.567021,-7.048756,-1.010088,0.568375,-1.658146,9.796124,6.928632,-2.366409,-1.944197,-8.713313,-0.548386]]], dtype = "float32")#candidate|6137|(5, 8, 14)|const|float32
uop_6138 = relay.cosh(const_6137.astype('float32')) # shape=(5, 8, 14)
func_5795_call = mod.get_global_var('func_5795')
func_5796_call = mutated_mod.get_global_var('func_5796')
call_6141 = relay.TupleGetItem(func_5795_call(), 0)
call_6142 = relay.TupleGetItem(func_5796_call(), 0)
func_5338_call = mod.get_global_var('func_5338')
func_5341_call = mutated_mod.get_global_var('func_5341')
const_6153 = relay.const([-7,8,1,5,9,-6,1,8,6,-9,8,-5,4,-10,7,8,-10,8,-6,-9,-8,-2,4,3,4,4,-3,-8,3,1,9,5,-4,1,3,-6,9,-2,-8,3,-6,5,-8,-8,4,10,-9,-5,6,-4,5,4,10,7,10,1,8,7,10,6], dtype = "uint64")#candidate|6153|(60,)|const|uint64
const_6154 = relay.const(5, dtype = "int16")#candidate|6154|()|const|int16
call_6152 = relay.TupleGetItem(func_5338_call(relay.reshape(const_6153.astype('uint64'), [60,]), relay.reshape(const_6154.astype('int16'), []), ), 6)
call_6155 = relay.TupleGetItem(func_5341_call(relay.reshape(const_6153.astype('uint64'), [60,]), relay.reshape(const_6154.astype('int16'), []), ), 6)
bop_6158 = relay.less(uop_6138.astype('bool'), relay.reshape(const_6137.astype('bool'), relay.shape_of(uop_6138))) # shape=(5, 8, 14)
func_4600_call = mod.get_global_var('func_4600')
func_4602_call = mutated_mod.get_global_var('func_4602')
call_6164 = relay.TupleGetItem(func_4600_call(), 4)
call_6165 = relay.TupleGetItem(func_4602_call(), 4)
output = relay.Tuple([call_6141,call_6152,const_6153,const_6154,bop_6158,call_6164,])
output2 = relay.Tuple([call_6142,call_6155,const_6153,const_6154,bop_6158,call_6165,])
func_6168 = relay.Function([], output)
mod['func_6168'] = func_6168
mod = relay.transform.InferType()(mod)
mutated_mod['func_6168'] = func_6168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6168_call = mutated_mod.get_global_var('func_6168')
call_6169 = func_6168_call()
output = call_6169
func_6170 = relay.Function([], output)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3303_call = mod.get_global_var('func_3303')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_6190 = func_3303_call()
call_6191 = func_3303_call()
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_6211 = func_1109_call()
call_6212 = func_1109_call()
output = relay.Tuple([call_6190,call_6211,])
output2 = relay.Tuple([call_6191,call_6212,])
func_6237 = relay.Function([], output)
mod['func_6237'] = func_6237
mod = relay.transform.InferType()(mod)
output = func_6237()
func_6238 = relay.Function([], output)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mod.get_global_var('func_4723')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_6246 = func_4723_call()
call_6247 = func_4723_call()
var_6256 = relay.var("var_6256", dtype = "int8", shape = (10, 16, 13))#candidate|6256|(10, 16, 13)|var|int8
bop_6257 = relay.less(call_6246.astype('bool'), relay.reshape(var_6256.astype('bool'), relay.shape_of(call_6246))) # shape=(10, 16, 13)
bop_6260 = relay.less(call_6247.astype('bool'), relay.reshape(var_6256.astype('bool'), relay.shape_of(call_6247))) # shape=(10, 16, 13)
output = relay.Tuple([bop_6257,])
output2 = relay.Tuple([bop_6260,])
func_6263 = relay.Function([var_6256,], output)
mod['func_6263'] = func_6263
mod = relay.transform.InferType()(mod)
mutated_mod['func_6263'] = func_6263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6264 = relay.var("var_6264", dtype = "int8", shape = (10, 16, 13))#candidate|6264|(10, 16, 13)|var|int8
func_6263_call = mutated_mod.get_global_var('func_6263')
call_6265 = func_6263_call(var_6264)
output = call_6265
func_6266 = relay.Function([var_6264], output)
mutated_mod['func_6266'] = func_6266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6305 = relay.var("var_6305", dtype = "float32", shape = (11, 1, 7))#candidate|6305|(11, 1, 7)|var|float32
uop_6306 = relay.log2(var_6305.astype('float32')) # shape=(11, 1, 7)
output = relay.Tuple([uop_6306,])
output2 = relay.Tuple([uop_6306,])
func_6316 = relay.Function([var_6305,], output)
mod['func_6316'] = func_6316
mod = relay.transform.InferType()(mod)
mutated_mod['func_6316'] = func_6316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6317 = relay.var("var_6317", dtype = "float32", shape = (11, 1, 7))#candidate|6317|(11, 1, 7)|var|float32
func_6316_call = mutated_mod.get_global_var('func_6316')
call_6318 = func_6316_call(var_6317)
output = call_6318
func_6319 = relay.Function([var_6317], output)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_6336 = relay.TupleGetItem(func_1315_call(), 0)
call_6337 = relay.TupleGetItem(func_1317_call(), 0)
uop_6352 = relay.log(call_6336.astype('float64')) # shape=(11, 7, 12)
uop_6354 = relay.log(call_6337.astype('float64')) # shape=(11, 7, 12)
output = relay.Tuple([uop_6352,])
output2 = relay.Tuple([uop_6354,])
func_6360 = relay.Function([], output)
mod['func_6360'] = func_6360
mod = relay.transform.InferType()(mod)
output = func_6360()
func_6361 = relay.Function([], output)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1627_call = mod.get_global_var('func_1627')
func_1629_call = mutated_mod.get_global_var('func_1629')
call_6408 = relay.TupleGetItem(func_1627_call(), 0)
call_6409 = relay.TupleGetItem(func_1629_call(), 0)
output = relay.Tuple([call_6408,])
output2 = relay.Tuple([call_6409,])
func_6411 = relay.Function([], output)
mod['func_6411'] = func_6411
mod = relay.transform.InferType()(mod)
output = func_6411()
func_6412 = relay.Function([], output)
mutated_mod['func_6412'] = func_6412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6411_call = mod.get_global_var('func_6411')
func_6412_call = mutated_mod.get_global_var('func_6412')
call_6481 = relay.TupleGetItem(func_6411_call(), 0)
call_6482 = relay.TupleGetItem(func_6412_call(), 0)
output = call_6481
output2 = call_6482
func_6494 = relay.Function([], output)
mod['func_6494'] = func_6494
mod = relay.transform.InferType()(mod)
output = func_6494()
func_6495 = relay.Function([], output)
mutated_mod['func_6495'] = func_6495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_6533 = relay.TupleGetItem(func_2200_call(), 0)
call_6534 = relay.TupleGetItem(func_2201_call(), 0)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_6555 = relay.TupleGetItem(func_2200_call(), 0)
call_6556 = relay.TupleGetItem(func_2201_call(), 0)
func_2131_call = mod.get_global_var('func_2131')
func_2136_call = mutated_mod.get_global_var('func_2136')
var_6562 = relay.var("var_6562", dtype = "int64", shape = (1040,))#candidate|6562|(1040,)|var|int64
var_6563 = relay.var("var_6563", dtype = "float32", shape = ())#candidate|6563|()|var|float32
call_6561 = relay.TupleGetItem(func_2131_call(relay.reshape(var_6562.astype('int64'), [13, 10, 8]), relay.reshape(var_6562.astype('int64'), [13, 10, 8]), relay.reshape(var_6563.astype('float32'), []), ), 1)
call_6564 = relay.TupleGetItem(func_2136_call(relay.reshape(var_6562.astype('int64'), [13, 10, 8]), relay.reshape(var_6562.astype('int64'), [13, 10, 8]), relay.reshape(var_6563.astype('float32'), []), ), 1)
func_886_call = mod.get_global_var('func_886')
func_888_call = mutated_mod.get_global_var('func_888')
call_6566 = relay.TupleGetItem(func_886_call(), 0)
call_6567 = relay.TupleGetItem(func_888_call(), 0)
func_4945_call = mod.get_global_var('func_4945')
func_4950_call = mutated_mod.get_global_var('func_4950')
const_6569 = relay.const([-9,8,-3,7], dtype = "uint64")#candidate|6569|(4,)|const|uint64
const_6570 = relay.const([-2,-8,8,-5,-8,5,-10,4,9,4,-7,6,-9,4,4,-9,-2,-1,7,-3,7,-8,-2,8,-10,5,3,3,-4,-10,-2,-7,4,-7,6,-5,-7,-9,7,10,10,-5,1,-7,-4,-3,5,-3,2,1,9,10,-1,6,-8,5,4,-1,9,9], dtype = "uint64")#candidate|6570|(60,)|const|uint64
var_6571 = relay.var("var_6571", dtype = "uint32", shape = (98, 15))#candidate|6571|(98, 15)|var|uint32
call_6568 = relay.TupleGetItem(func_4945_call(relay.reshape(const_6569.astype('uint64'), [1, 2, 2]), relay.reshape(const_6570.astype('uint64'), [15, 2, 2]), relay.reshape(var_6571.astype('uint32'), [1470,]), relay.reshape(var_6563.astype('int16'), []), ), 2)
call_6572 = relay.TupleGetItem(func_4950_call(relay.reshape(const_6569.astype('uint64'), [1, 2, 2]), relay.reshape(const_6570.astype('uint64'), [15, 2, 2]), relay.reshape(var_6571.astype('uint32'), [1470,]), relay.reshape(var_6563.astype('int16'), []), ), 2)
var_6584 = relay.var("var_6584", dtype = "int64", shape = (1040,))#candidate|6584|(1040,)|var|int64
bop_6585 = relay.left_shift(var_6562.astype('int8'), relay.reshape(var_6584.astype('int8'), relay.shape_of(var_6562))) # shape=(1040,)
output = relay.Tuple([call_6533,call_6555,call_6561,var_6563,call_6566,call_6568,const_6569,const_6570,var_6571,bop_6585,])
output2 = relay.Tuple([call_6534,call_6556,call_6564,var_6563,call_6567,call_6572,const_6569,const_6570,var_6571,bop_6585,])
func_6595 = relay.Function([var_6562,var_6563,var_6571,var_6584,], output)
mod['func_6595'] = func_6595
mod = relay.transform.InferType()(mod)
mutated_mod['func_6595'] = func_6595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6595_call = mutated_mod.get_global_var('func_6595')
var_6597 = relay.var("var_6597", dtype = "int64", shape = (1040,))#candidate|6597|(1040,)|var|int64
var_6598 = relay.var("var_6598", dtype = "float32", shape = ())#candidate|6598|()|var|float32
var_6599 = relay.var("var_6599", dtype = "uint32", shape = (98, 15))#candidate|6599|(98, 15)|var|uint32
var_6600 = relay.var("var_6600", dtype = "int64", shape = (1040,))#candidate|6600|(1040,)|var|int64
call_6596 = func_6595_call(var_6597,var_6598,var_6599,var_6600,)
output = call_6596
func_6601 = relay.Function([var_6597,var_6598,var_6599,var_6600,], output)
mutated_mod['func_6601'] = func_6601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4226_call = mod.get_global_var('func_4226')
func_4227_call = mutated_mod.get_global_var('func_4227')
call_6663 = relay.TupleGetItem(func_4226_call(), 1)
call_6664 = relay.TupleGetItem(func_4227_call(), 1)
func_3923_call = mod.get_global_var('func_3923')
func_3929_call = mutated_mod.get_global_var('func_3929')
const_6692 = relay.const([-1,8,7,-4,-1,6,-2,-10,1,-10,4,-8,9,7,2,8,-7,1,6,-4,2,2,2,-2,-10,5,-6,-4,-5,-10,-4,-2,5,-6,1,-7,-1,-6,2,5,-10,-7,-3,3,1,7,-2,-6,-6,-7,2,7,-6,6,3,-2,-2,-1,-10,-5,10,6,-4,-10,-5,-7,-4,2,-9,9,-2,5,10,10,-2,2,-10,-3,-1,5,1,-6,-8,4,7,-1,2,4,4,3,9,-8,-2,-3,6,-2,2,10,6,-9,-7,3,-6,3,-9,6,10,8,4,8,3,-7,-7,5,2,8,4,-1,6,-8,2,6,-7,7,-8,-1,6,6,-4,-9,-6,-8,-8,-9,-4,-1,3,10,4,3,-2,-4,2,-2,-2,-5,-9,1,1,-2,-8,-3,4,3,1,-1,8,-1,-7,9,5,-10,-6,-2,10,3,-8,-1,10,-10,9,3,-7,10,-1,-3,-4,3,-5,-8,-10,7,5,-10,-3,5,-6,-1,-7,8,1,-4,-6,6,1,-8,-5,9,-2,-7,3,-7,2,-1,1,5,-1,-9,-6,-8,-9,8,-1,3,5,-8,-2,5,-5,5,6,-7,10,1,1,5,-8,-3,9,4,-6,2,9,5,6,1,-9,8,-6,-7,10,8,-4,-9,-9,-7,-5,-4,-10,2,7,7,-2,9,-4,5,-10,-4,-6,-7,7,-7,-7,-9,-9,1,4,6,-5,-6,-1,4,5,-8,-2,3,1,2,-2,4,-3,9,-5,3,-10,-10,9,-6,4,5,-9,7,-8,-9,-1,-4,-10,-2,-10,4,2,-4,-7,-7,-2,-9,9,-4,-5,9,-8,10,8,10,7,-7,-9,1,-1,7,9,8,-9,6,5,-2,10,10,6,-5,5,1,5,10,-10,-1,10,-10,-2,-7,-4,2,10,2,-2,-8,-9,9,-1,-9,-5,-4,10,7,10,8,10,-8,2,8,-6,-8,-5,10,7,1,-2,8,8,-3,-7,4,1,-10,1,6,4,6,-5,9,8,4,4,-9,5,-3,-2,-10,9,9,-9,9,1,5,2,7,-2,9,3,10,-9,-10,2,-8,-1,-10,2,-4,-7,-8,-2,8,-6,-2,4,-8,-9,-7,-10,9,-2,2,10,-6,6,5,-10,2,1,-4,-7,9,-1,-4,-9,-4,4,4,3,-3,3,5,-5,9,10,-1,8,-5,-6,1,4,6,-3,-3,10,3,8,-9,6,8,-3,-5,9,-3,-8,10,-10,-9,-9,-9,-2,4,-10,-2,-3,4,-1,9,8,-5,-6,8,3,1,2,1,-2,-6,8,-9,-8,6,-2,9,7,-8,-1,9,4,6,-7,3,-3,-2,-7,-3,5,-4,6,-9,-9,4,-3,-6,4,-4,8,-10,6,-4,-6,8,6,-10,-7,-3,-6,-8,3,-8,5,-8,9,6,2,8,4,-7,10,-3,8,5,7,5,-9,-5,-4,7,-10,1,-2,-8,-7,-7,6,-5,-7,8,-8,-4,-3,1,-3,-3,1,5,-4,-10,-9,7,-8,-10,7,-1,-1,1,-5,3,1,10,-9,5,-7,-2,1,-4,6,-8,-1,9,5,6,-10,-9,-5,3,4,-7,3,9,-3,-7,-6,3,5,7,-9,1,4,-2,-10,4,3,7,1,1,1,-2,-2,-4,4,-6,-8,4,-8,-2,-3,4,-10,-3,-1,6,2,-8,-2,1,6,2,-6,-6,5,5,-6,4,-4,-6,1,6,9,-8,-6,10,-8,-6,9,9,9,3,-2,1,4,-10,9,-10,10,1,9,-10,4,-1,7,10], dtype = "uint64")#candidate|6692|(672,)|const|uint64
const_6693 = relay.const([-8.983427,-6.789743,9.678331,5.449270,-9.502589,8.151291,-7.976869,-7.217322,4.601349,-3.109512,5.966882,-8.464921,-4.953698,-2.367963,8.236807,-6.265872,-9.341167,-9.712357,-2.900230,8.884296,-7.326786,-6.001263,-3.902536,-8.924836,7.683446,2.412118,-7.877886,5.446329,-7.606461,9.272802,2.200204,6.979397,-8.794408,-2.730262,9.581220,3.254362,-9.002332,4.125819,-9.238892,-4.794754,-4.768296,6.082128,-1.782016,6.995796,-9.577409,-0.752549,6.472055,2.307857,0.166239,-2.612691,8.834578,-4.636097,1.856490,-8.184443,0.303522,0.187420,-0.981954,-3.347455,-3.695610,1.297780,-9.881499,-9.251808,-1.172009,6.987080,2.561974,-2.545590,8.399269,-8.920110,-4.314217,3.058592,-4.089191,6.380035,3.317132,2.021707,-3.449992,-1.441819,-5.178774,-6.905300,-5.784814,-5.535950,4.512961,-4.162651,9.284864,4.118295,9.783538,9.293506,-3.727383,-7.556478,-5.516269,7.904363,-8.569164,-4.150194,-7.901743,3.009719,-8.898584,4.569461,1.056482,6.633365,-4.067068,-8.769886,9.023897,9.276805,2.254082,9.895032,2.459902,-7.135922,-3.659506,-1.159044,4.826865,7.358969,9.820856,6.043564,-3.475553,4.835498,8.301110,-8.057961,4.719614,-6.175225,1.494287,8.088362,-2.151848,-8.304928,-2.649003,-8.673069,3.116564,7.496915,-1.446746,8.237160,1.685108,9.373828,-1.355272,0.004903,-4.977026,-2.912999,1.595943,-6.924483,4.628836,-2.364457,-3.930311,4.409632,-3.941943,-0.955407,6.231852,3.707794,3.053206,-8.306441,-0.814957,4.023710,9.739498,-5.307372,1.591579,9.714917,-0.251254,-0.255187,-7.317629,-4.220004,5.700749,3.333931,-6.263762,4.954992,3.972358,4.420231,-3.465704,-0.803495,1.044787,-0.365287,-1.153050,8.016101,-8.587643,3.320365,-3.115710,4.004616,-9.096249,-2.142829,-7.833143,-0.443070,8.328093,3.673840,3.099002,-6.964819,6.227387,4.597345,-9.326267,-3.254720,8.311316,9.007845,6.855505,1.500047,2.836632,-2.206617,4.256207,0.120364,-5.188418,-2.470069,5.662530,-7.698785,-0.567362,-7.746840,3.517566,0.109352,-5.707407,-7.318488,5.691421,5.905392,1.472339,-1.471647,1.301640,-6.299785,7.376175,0.459869,6.264626,4.061276,9.411050,-5.475609,-4.972986,8.413040,-3.119144,-4.639473,6.139192,-9.472927,7.406908,-4.115750,-5.890805,-7.419013,0.177095,-0.741275,-8.171689,-8.075144,5.695257,-2.705334,-5.405331,-4.906545,1.644964,7.235043,7.339209,8.756163,-5.515849,5.068425,-4.456727,-2.764802,5.116174,-5.082246,-6.729219,9.117502,3.652718,2.871382,-7.482660,-7.201978,-6.732768,-6.239756,0.136745,-4.182726,2.009181,5.655478,-7.756464,-3.315988,-1.202741,9.347669,0.098385,1.382177,-1.205693,7.804903,-3.002259,-3.075199,9.302325,-1.287886,-4.719324,-0.012786,-1.682033,-4.009290,-9.951378,-9.548150,4.894021,1.106506,2.914140,-8.143400,-2.023248,-9.062024,8.351454,7.128956,8.105724,-3.249282,9.043108,-2.292910,-0.640039,-9.257242,4.850498,5.744383,-2.301352,1.356145,2.001653,7.350989,3.350651,1.784585,-1.575530,4.717767,-4.172570,4.965742,7.450604,-1.648493,-9.334886,-6.063271,3.886290,0.418537,-4.120908,2.083241,-8.680135,9.883146,-8.086617,-4.719650,-6.773301,7.383059,9.492985,-5.761517,-4.628505,-9.291515,1.355663,-0.189439,5.627051,-9.830208,-1.475422,1.140102,-4.148073,6.002659,6.806161,9.752004,5.381382,2.948508,5.290027,1.399037,-5.884392,2.104218,-7.800463,-4.600255,3.540520,-2.396259,2.488084,-8.418991,-2.763215,-3.037787,9.949400,7.507413,-5.304352,-6.590425,-3.981585,0.932220,3.232845,-5.555770,-5.289444,0.355557,6.970944,-2.847738,-6.432608,-8.640829,-2.588050,-1.850802,-4.916489,-7.523438,-4.146518,2.910446,9.399334,6.072739,2.527546,-9.910218,0.288565,6.848233,0.084973,1.544530,-4.682809,8.323984,-1.649142,-3.069162,6.314545,-3.604773,8.975193,0.839324,-3.316481,-1.956737,-2.645048,-2.571437,-8.855702,0.708890,4.684034,1.927576,-2.543462,-1.003495,9.786591,-7.986419,5.285444,-8.826910,-0.994471,1.892254,7.044931,-3.238160,3.427608,3.901538,-1.712487,3.240819,0.122100,8.191989,1.942733,-5.190059,-6.641709,-1.722705,3.696776,7.737384,-5.430433,1.895414,-9.032198,0.192833,-8.285313,8.792626,2.841479,-3.085855,-5.641324,1.634332,9.742176,-5.488110,-2.250280,2.710226,4.556977,6.413321,-2.461615,8.279804,-8.080846,-2.476051,9.038242,4.307855,-2.559282,0.945511,0.890556,5.298471,7.513295,-6.050452,-9.807317,1.768080,-0.462526,8.453598,1.985228,5.344845,9.537077,-3.937271,-2.649829,-6.143868,8.367881,2.783405,-3.985307,5.355226,-3.948434,5.255317,-2.405928,-3.470360,1.911835,2.942808,2.508914,-0.629313,-1.182067,2.303508,-9.669677,9.010362,-1.506756,-4.258834,5.885799,-0.015273,6.215614,-7.897456,-3.970674,9.907783,-2.601238,1.810243,9.558580,2.741925,-8.273907,-3.802732,-3.444423,0.973792,-2.906738,4.842554,5.759440,1.773318,8.767280,-7.400886,9.785580,1.981654,-4.830496,1.832409,-8.593954,7.782693,4.261739,2.862228,-6.003830,-8.887641,-6.184520,-1.752953,5.562157,-4.155683,-7.908712,2.889930,-6.519859,4.448381,1.289372,3.240431,1.136190,-5.571408,-7.884536,-3.439993,-6.165124,-5.349762,-7.176846,0.609321,-5.787469,-0.814165,-5.404816,-8.308869,-3.963911,-4.360950,-9.603859,7.455715,-0.802137,7.322212,8.304784,3.695661,-3.608184,-3.789564,0.334448,0.101522,-2.145527,-2.499249,1.191460,2.738105,-7.448750,7.737451,9.890510,1.317179,-6.414130,7.379170,-3.492829,-2.723728,-1.572870,-9.355000,-6.523343,5.229649,1.479661,7.776704,9.152579,5.437873,-1.139056,-5.662959,2.489440,-2.557432,-3.026350,-3.190745,-1.258714,-7.006364,9.459056,-9.959753,-5.691410,-1.080881,2.588805,-4.994311,0.532852,5.658479,-2.326261,9.190989,7.558217,7.206362,1.097886,-3.554864,-3.538984,-5.216800,1.529696,8.423154,3.235539,-9.534710,-7.759495,1.090831,-9.737862,6.165044,-6.361947,-5.378993,-0.428277,-6.816761,3.521288,-5.300850,0.081856,-4.601590,7.997649,-2.148129,4.617071,-1.403552,5.341218,5.542033,-7.012607,-2.144165,-7.515182,-5.069596,-0.256550,-9.678009,9.048550,-0.418575,-7.140779,-8.056629,-6.408906,-5.787774,8.194564,4.816544,-7.416437,-0.546520,-1.066140,1.268860,3.873647,6.992073,-1.824703,-4.307162,-5.201751,-9.663058,2.810767,7.066938,3.628247,2.391541,-5.396576,8.028190,-1.188842,3.380813,-1.503604,2.547959,-9.210344,-9.352282,-2.506234,-5.563473,6.601431,1.585542,0.319743,-1.783726,-5.136745,8.766614,5.167768,0.880073,-5.213353,-4.635498,-1.720817,6.808057,-1.425065,0.028891,-2.798061,-4.440787,7.899398,-5.312906,-6.566861,9.701841,-7.191460,8.483462,-7.048039,9.803655,4.462095,9.808477,9.783546,-1.723125,-9.135054,9.902512,6.532909,-7.609595,8.901040,-2.451357,-7.572398,4.816691,-6.010191,-0.406654,7.734130,-8.281447,3.244760,-7.449917,-5.550293,-5.090379,0.265986,9.517382,7.581571,9.506237,-1.365719,-2.414716,8.826042,7.088222,-4.360715,-8.997209,-2.677873,-5.589225,1.226881,-1.656924,5.835742,-0.745493,-8.584750,-2.930720,-7.496853,6.664818,9.700352,7.861415,8.283646,-1.539439,-7.750630,0.738787,1.475224,-6.644978,0.490574,-4.021439,5.812261,7.613712,-8.463707,-9.640115,1.572512,2.024043,2.374090,5.925774,-0.692722,4.997083,9.139320,2.875684,-9.649146,7.492126,-6.154454,3.515951,-7.155598,-0.475776,-7.923964,1.324351,-6.176296,-3.950303,8.076633,-2.211353,9.933840,-3.512848,-5.019643,-9.216223,6.806459,-7.339881,7.311432,-7.520931,-4.678891,7.464106,1.157608,-6.091398,8.755040,7.497027,0.480501,-5.678392,8.173652,0.556430,-3.348652,2.110647,2.465444,-9.062852,3.645671,-7.399843,4.724309,-2.620998,3.115276,-7.612756,2.986271,5.917405,5.554802,3.597905,9.996690,-5.831014,-3.338221,7.465534,-0.867020,5.395926,-6.935140,5.052499,4.381189,-1.407736,7.790812,5.778827,4.283721,8.727604,6.727841,8.636131,5.315434,-2.900900,8.297563,9.618110,2.906508,5.975308,-1.574397,2.889485,-3.735449,-7.494686,-8.575418,-6.785775,2.295374,-8.019199,9.965397,3.891992,-6.034746,-0.866292,5.173712,1.601804,-6.658993,7.518803,4.509319,-6.759324,-3.808690,9.959367,3.944827,-3.881256,3.601651,3.196404,0.903561,7.012610,-0.083789,7.257943,9.803428,2.812367,-4.940406,7.253008,2.691477,7.394090,-8.776597,7.879749,5.053452,-1.387558,-7.153389,2.687926,-6.094470,0.660112,-2.063972,0.657883,1.123612,-1.601806,5.330811,-5.731130,9.489718,-4.479083,-7.733156,1.350586,-6.879024,5.689803,2.767087,-3.070661,1.292296,6.030333,-5.436385,-6.081891,2.984481,2.678039,-8.513988,0.606421,-1.678992,9.631218,5.121409,-1.026070,1.653176,5.898947,-5.965151,-8.513876,4.885274,7.683966,-3.662284,-2.671929,-0.651351,-2.370550,3.273302,9.256742,-9.536650,-3.891735,7.638066,8.868116,-6.066071,-4.709314,-7.378222,4.519583,-1.080886,5.706187,-5.769408,-9.562788,-9.510666,8.148796,-7.821403,6.867720,6.457482,5.990094,-2.413267,8.553460,6.485160,7.244665,0.067819,9.838556,8.528069,-8.351240,-3.803246,8.636234,-8.183886,-5.989023,1.267617,5.367237,-2.852014,9.349276,1.718484,8.179377,-6.522096,-4.238006,2.108225,4.587418,-5.806945,-0.674213,-4.853140,4.942737,-1.644602,-8.985983,2.012628,6.439083,-3.454397,-4.275892,0.913614,-8.861216,-7.053941,9.414995,-8.391820,7.326370,5.468414,-9.334487,7.851715,-3.809062,7.305581,7.939954,-3.611848,-2.693424,7.408218,-0.245399,6.077733,2.539741,4.120982,2.795156,1.252598,-0.162870,2.980818,7.515437,4.282833,-2.034747,-9.646029,9.989687,-2.475222,9.449613,8.987022,2.835088,-2.065902,-4.475719,4.451280,2.947350,-9.627374,6.300811,-2.476909,-4.104347,-8.281387,7.375107,-7.876754,1.295419,-7.058850,5.784084,-7.765815,-7.788833,3.912855,-3.878068,1.289398,3.213694,-2.129036,8.566065,5.024803,-6.738364,-3.722036,-0.759737,-0.036102,-9.133738,-1.207309,-7.233892,-7.952005,9.453757,-3.097678,-3.224626,-0.046324,9.253758,3.243142,6.985059,1.788592,-9.104105,7.035839,-4.997339,0.223248,9.804976,-5.804864,-9.592775,-1.337450,-5.689229,-4.233590,-5.766437,8.282610,2.675242,-8.987910,6.190450,-2.992545,-9.489699,9.705609,1.590382,0.864020,-3.225856,3.768483,-5.167635,9.756543,-4.158441,0.422731,-5.034695,-9.080432,0.722172,-4.774187,-1.252235,1.692697,4.201558,-3.730442,0.327864,4.494535,0.070816,-1.346205,-3.614798,5.587875,2.441736], dtype = "float32")#candidate|6693|(1024,)|const|float32
call_6691 = relay.TupleGetItem(func_3923_call(relay.reshape(const_6692.astype('uint64'), [3, 16, 14]), relay.reshape(const_6692.astype('uint64'), [3, 16, 14]), relay.reshape(const_6692.astype('bool'), [3, 16, 14]), relay.reshape(const_6693.astype('float32'), [1024,]), ), 3)
call_6694 = relay.TupleGetItem(func_3929_call(relay.reshape(const_6692.astype('uint64'), [3, 16, 14]), relay.reshape(const_6692.astype('uint64'), [3, 16, 14]), relay.reshape(const_6692.astype('bool'), [3, 16, 14]), relay.reshape(const_6693.astype('float32'), [1024,]), ), 3)
func_4672_call = mod.get_global_var('func_4672')
func_4673_call = mutated_mod.get_global_var('func_4673')
call_6696 = relay.TupleGetItem(func_4672_call(), 2)
call_6697 = relay.TupleGetItem(func_4673_call(), 2)
bop_6714 = relay.greater(call_6691.astype('bool'), relay.reshape(call_6696.astype('bool'), relay.shape_of(call_6691))) # shape=(11, 7, 12)
bop_6717 = relay.greater(call_6694.astype('bool'), relay.reshape(call_6697.astype('bool'), relay.shape_of(call_6694))) # shape=(11, 7, 12)
func_6494_call = mod.get_global_var('func_6494')
func_6495_call = mutated_mod.get_global_var('func_6495')
call_6718 = func_6494_call()
call_6719 = func_6494_call()
output = relay.Tuple([call_6663,const_6692,const_6693,bop_6714,call_6718,])
output2 = relay.Tuple([call_6664,const_6692,const_6693,bop_6717,call_6719,])
func_6732 = relay.Function([], output)
mod['func_6732'] = func_6732
mod = relay.transform.InferType()(mod)
output = func_6732()
func_6733 = relay.Function([], output)
mutated_mod['func_6733'] = func_6733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_6741 = relay.TupleGetItem(func_1236_call(), 0)
call_6742 = relay.TupleGetItem(func_1237_call(), 0)
func_4525_call = mod.get_global_var('func_4525')
func_4526_call = mutated_mod.get_global_var('func_4526')
call_6743 = relay.TupleGetItem(func_4525_call(), 2)
call_6744 = relay.TupleGetItem(func_4526_call(), 2)
uop_6747 = relay.sigmoid(call_6743.astype('float64')) # shape=(1024,)
uop_6749 = relay.sigmoid(call_6744.astype('float64')) # shape=(1024,)
output = relay.Tuple([call_6741,uop_6747,])
output2 = relay.Tuple([call_6742,uop_6749,])
func_6756 = relay.Function([], output)
mod['func_6756'] = func_6756
mod = relay.transform.InferType()(mod)
output = func_6756()
func_6757 = relay.Function([], output)
mutated_mod['func_6757'] = func_6757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2167_call = mod.get_global_var('func_2167')
func_2168_call = mutated_mod.get_global_var('func_2168')
call_6835 = relay.TupleGetItem(func_2167_call(), 0)
call_6836 = relay.TupleGetItem(func_2168_call(), 0)
output = relay.Tuple([call_6835,])
output2 = relay.Tuple([call_6836,])
func_6838 = relay.Function([], output)
mod['func_6838'] = func_6838
mod = relay.transform.InferType()(mod)
output = func_6838()
func_6839 = relay.Function([], output)
mutated_mod['func_6839'] = func_6839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4600_call = mod.get_global_var('func_4600')
func_4602_call = mutated_mod.get_global_var('func_4602')
call_6840 = relay.TupleGetItem(func_4600_call(), 2)
call_6841 = relay.TupleGetItem(func_4602_call(), 2)
output = call_6840
output2 = call_6841
func_6847 = relay.Function([], output)
mod['func_6847'] = func_6847
mod = relay.transform.InferType()(mod)
mutated_mod['func_6847'] = func_6847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6847_call = mutated_mod.get_global_var('func_6847')
call_6848 = func_6847_call()
output = call_6848
func_6849 = relay.Function([], output)
mutated_mod['func_6849'] = func_6849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2768_call = mod.get_global_var('func_2768')
func_2769_call = mutated_mod.get_global_var('func_2769')
call_6863 = relay.TupleGetItem(func_2768_call(), 1)
call_6864 = relay.TupleGetItem(func_2769_call(), 1)
func_5237_call = mod.get_global_var('func_5237')
func_5241_call = mutated_mod.get_global_var('func_5241')
var_6870 = relay.var("var_6870", dtype = "int64", shape = (1040,))#candidate|6870|(1040,)|var|int64
var_6871 = relay.var("var_6871", dtype = "float32", shape = ())#candidate|6871|()|var|float32
call_6869 = relay.TupleGetItem(func_5237_call(relay.reshape(var_6870.astype('int64'), [1040,]), relay.reshape(var_6871.astype('float32'), []), ), 6)
call_6872 = relay.TupleGetItem(func_5241_call(relay.reshape(var_6870.astype('int64'), [1040,]), relay.reshape(var_6871.astype('float32'), []), ), 6)
output = relay.Tuple([call_6863,call_6869,var_6870,var_6871,])
output2 = relay.Tuple([call_6864,call_6872,var_6870,var_6871,])
func_6873 = relay.Function([var_6870,var_6871,], output)
mod['func_6873'] = func_6873
mod = relay.transform.InferType()(mod)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mutated_mod.get_global_var('func_6873')
var_6875 = relay.var("var_6875", dtype = "int64", shape = (1040,))#candidate|6875|(1040,)|var|int64
var_6876 = relay.var("var_6876", dtype = "float32", shape = ())#candidate|6876|()|var|float32
call_6874 = func_6873_call(var_6875,var_6876,)
output = call_6874
func_6877 = relay.Function([var_6875,var_6876,], output)
mutated_mod['func_6877'] = func_6877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_6884 = relay.TupleGetItem(func_4691_call(), 1)
call_6885 = relay.TupleGetItem(func_4692_call(), 1)
func_723_call = mod.get_global_var('func_723')
func_728_call = mutated_mod.get_global_var('func_728')
var_6887 = relay.var("var_6887", dtype = "uint32", shape = (1470,))#candidate|6887|(1470,)|var|uint32
const_6888 = relay.const(7, dtype = "int16")#candidate|6888|()|const|int16
const_6889 = relay.const([[7,10,5,2,9,6,-5,-1,8,-9,1,-9,4,-2,5,6,8,-1,-2,-2,-1,6,-5,8,-5,4,-8,-2,-7,1],[10,6,-1,-1,-2,-5,-1,-6,10,-2,10,-10,-8,-3,9,-1,-1,-9,5,-5,-4,7,-5,-4,8,-1,1,-9,4,-4],[-5,-1,1,9,9,3,6,9,-5,-8,8,-3,1,-5,-5,-5,5,7,6,-4,-1,8,-8,-1,-9,-8,-8,-5,-5,1],[3,-10,-4,6,4,4,-6,-3,9,-7,-2,-7,-8,-9,-5,2,-8,8,-1,9,4,-1,4,-7,7,-3,-1,-9,-5,1],[-9,-9,5,-7,10,4,-1,-6,-6,-10,-9,1,-3,8,-9,9,-1,-4,-4,5,-9,9,3,-7,-10,-3,9,-10,4,-2],[8,10,-10,10,-7,9,5,8,-7,8,-9,8,-6,-2,-10,-3,6,2,8,-9,8,-1,-7,-10,1,4,10,9,2,-6],[6,3,-3,-5,6,7,3,6,6,-6,7,-8,2,2,-1,-8,-8,-8,-5,-3,8,-6,8,2,-9,3,-8,2,-10,-6],[5,-9,-7,5,9,-7,-9,-1,3,3,2,8,6,-2,6,-9,-3,3,3,-6,-9,-3,-3,5,8,10,1,1,-9,6]], dtype = "int16")#candidate|6889|(8, 30)|const|int16
call_6886 = relay.TupleGetItem(func_723_call(relay.reshape(var_6887.astype('uint32'), [15, 14, 7]), relay.reshape(var_6887.astype('uint32'), [15, 14, 7]), relay.reshape(const_6888.astype('int16'), []), relay.reshape(const_6889.astype('int16'), [240,]), ), 3)
call_6890 = relay.TupleGetItem(func_728_call(relay.reshape(var_6887.astype('uint32'), [15, 14, 7]), relay.reshape(var_6887.astype('uint32'), [15, 14, 7]), relay.reshape(const_6888.astype('int16'), []), relay.reshape(const_6889.astype('int16'), [240,]), ), 3)
bop_6906 = relay.left_shift(call_6884.astype('uint16'), const_6888.astype('uint16')) # shape=(11, 7, 12)
bop_6909 = relay.left_shift(call_6885.astype('uint16'), const_6888.astype('uint16')) # shape=(11, 7, 12)
func_2368_call = mod.get_global_var('func_2368')
func_2369_call = mutated_mod.get_global_var('func_2369')
call_6911 = relay.TupleGetItem(func_2368_call(), 1)
call_6912 = relay.TupleGetItem(func_2369_call(), 1)
func_6316_call = mod.get_global_var('func_6316')
func_6319_call = mutated_mod.get_global_var('func_6319')
const_6916 = relay.const([[2.129780,-8.007615,-6.453243,1.992392,7.605074,-6.971073,8.543987],[1.664818,-9.022215,-2.893613,4.482321,8.857800,8.539718,-6.830196],[-1.102597,-8.099831,7.119162,-5.278959,4.421055,1.454193,-3.570592],[-0.213983,-2.772501,5.617955,-4.471517,-5.408009,8.966676,-2.599265],[-1.491992,9.811405,8.499710,3.946827,-6.550520,2.049606,6.814096],[6.781673,-7.440738,6.388663,1.323731,-2.442892,1.425983,-3.989884],[-7.260224,1.552081,9.015772,5.466452,-9.296809,2.042054,-2.984578],[-1.220196,5.176272,1.533830,-5.004045,4.197733,-3.557410,4.091203],[-9.755393,-5.638291,-3.304836,5.569297,-9.090330,-0.912353,9.077109],[-4.643028,-8.125969,-8.747828,-3.716260,-4.842858,-7.598090,-6.036025],[1.156062,-6.366098,1.564076,-3.232189,-8.868372,7.191550,-8.018560]], dtype = "float32")#candidate|6916|(11, 7)|const|float32
call_6915 = relay.TupleGetItem(func_6316_call(relay.reshape(const_6916.astype('float32'), [11, 1, 7])), 0)
call_6917 = relay.TupleGetItem(func_6319_call(relay.reshape(const_6916.astype('float32'), [11, 1, 7])), 0)
var_6928 = relay.var("var_6928", dtype = "int16", shape = (8, 30))#candidate|6928|(8, 30)|var|int16
bop_6929 = relay.equal(const_6889.astype('bool'), relay.reshape(var_6928.astype('bool'), relay.shape_of(const_6889))) # shape=(8, 30)
output = relay.Tuple([call_6886,var_6887,bop_6906,call_6911,call_6915,const_6916,bop_6929,])
output2 = relay.Tuple([call_6890,var_6887,bop_6909,call_6912,call_6917,const_6916,bop_6929,])
func_6934 = relay.Function([var_6887,var_6928,], output)
mod['func_6934'] = func_6934
mod = relay.transform.InferType()(mod)
mutated_mod['func_6934'] = func_6934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6934_call = mutated_mod.get_global_var('func_6934')
var_6936 = relay.var("var_6936", dtype = "uint32", shape = (1470,))#candidate|6936|(1470,)|var|uint32
var_6937 = relay.var("var_6937", dtype = "int16", shape = (8, 30))#candidate|6937|(8, 30)|var|int16
call_6935 = func_6934_call(var_6936,var_6937,)
output = call_6935
func_6938 = relay.Function([var_6936,var_6937,], output)
mutated_mod['func_6938'] = func_6938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6015_call = mod.get_global_var('func_6015')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6957 = relay.TupleGetItem(func_6015_call(), 0)
call_6958 = relay.TupleGetItem(func_6017_call(), 0)
var_6970 = relay.var("var_6970", dtype = "int8", shape = (10, 16, 13))#candidate|6970|(10, 16, 13)|var|int8
bop_6971 = relay.add(call_6957.astype('int64'), relay.reshape(var_6970.astype('int64'), relay.shape_of(call_6957))) # shape=(10, 16, 13)
bop_6974 = relay.add(call_6958.astype('int64'), relay.reshape(var_6970.astype('int64'), relay.shape_of(call_6958))) # shape=(10, 16, 13)
bop_6975 = relay.logical_and(bop_6971.astype('bool'), relay.reshape(call_6957.astype('bool'), relay.shape_of(bop_6971))) # shape=(10, 16, 13)
bop_6978 = relay.logical_and(bop_6974.astype('bool'), relay.reshape(call_6958.astype('bool'), relay.shape_of(bop_6974))) # shape=(10, 16, 13)
output = relay.Tuple([bop_6975,])
output2 = relay.Tuple([bop_6978,])
func_6983 = relay.Function([var_6970,], output)
mod['func_6983'] = func_6983
mod = relay.transform.InferType()(mod)
var_6984 = relay.var("var_6984", dtype = "int8", shape = (10, 16, 13))#candidate|6984|(10, 16, 13)|var|int8
output = func_6983(var_6984)
func_6985 = relay.Function([var_6984], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6411_call = mod.get_global_var('func_6411')
func_6412_call = mutated_mod.get_global_var('func_6412')
call_7033 = relay.TupleGetItem(func_6411_call(), 0)
call_7034 = relay.TupleGetItem(func_6412_call(), 0)
func_3672_call = mod.get_global_var('func_3672')
func_3673_call = mutated_mod.get_global_var('func_3673')
call_7035 = func_3672_call()
call_7036 = func_3672_call()
uop_7053 = relay.sigmoid(call_7035.astype('float32')) # shape=(7, 9, 16)
uop_7055 = relay.sigmoid(call_7036.astype('float32')) # shape=(7, 9, 16)
func_1627_call = mod.get_global_var('func_1627')
func_1629_call = mutated_mod.get_global_var('func_1629')
call_7059 = relay.TupleGetItem(func_1627_call(), 0)
call_7060 = relay.TupleGetItem(func_1629_call(), 0)
uop_7066 = relay.log10(call_7035.astype('float32')) # shape=(7, 9, 16)
uop_7068 = relay.log10(call_7036.astype('float32')) # shape=(7, 9, 16)
func_1565_call = mod.get_global_var('func_1565')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_7071 = relay.TupleGetItem(func_1565_call(), 0)
call_7072 = relay.TupleGetItem(func_1567_call(), 0)
bop_7077 = relay.bitwise_or(uop_7053.astype('int32'), relay.reshape(call_7035.astype('int32'), relay.shape_of(uop_7053))) # shape=(7, 9, 16)
bop_7080 = relay.bitwise_or(uop_7055.astype('int32'), relay.reshape(call_7036.astype('int32'), relay.shape_of(uop_7055))) # shape=(7, 9, 16)
uop_7092 = relay.log(bop_7077.astype('float32')) # shape=(7, 9, 16)
uop_7094 = relay.log(bop_7080.astype('float32')) # shape=(7, 9, 16)
func_6031_call = mod.get_global_var('func_6031')
func_6033_call = mutated_mod.get_global_var('func_6033')
var_7121 = relay.var("var_7121", dtype = "float32", shape = (48, 8))#candidate|7121|(48, 8)|var|float32
call_7120 = relay.TupleGetItem(func_6031_call(relay.reshape(var_7121.astype('float32'), [8, 3, 16])), 0)
call_7122 = relay.TupleGetItem(func_6033_call(relay.reshape(var_7121.astype('float32'), [8, 3, 16])), 0)
func_3848_call = mod.get_global_var('func_3848')
func_3849_call = mutated_mod.get_global_var('func_3849')
call_7125 = relay.TupleGetItem(func_3848_call(), 0)
call_7126 = relay.TupleGetItem(func_3849_call(), 0)
bop_7144 = relay.logical_or(call_7120.astype('bool'), relay.reshape(var_7121.astype('bool'), relay.shape_of(call_7120))) # shape=(8, 3, 16)
bop_7147 = relay.logical_or(call_7122.astype('bool'), relay.reshape(var_7121.astype('bool'), relay.shape_of(call_7122))) # shape=(8, 3, 16)
func_2498_call = mod.get_global_var('func_2498')
func_2502_call = mutated_mod.get_global_var('func_2502')
var_7149 = relay.var("var_7149", dtype = "int32", shape = (338,))#candidate|7149|(338,)|var|int32
call_7148 = relay.TupleGetItem(func_2498_call(relay.reshape(var_7149.astype('int32'), [13, 2, 13]), relay.reshape(var_7149.astype('int32'), [13, 2, 13]), ), 0)
call_7150 = relay.TupleGetItem(func_2502_call(relay.reshape(var_7149.astype('int32'), [13, 2, 13]), relay.reshape(var_7149.astype('int32'), [13, 2, 13]), ), 0)
func_2498_call = mod.get_global_var('func_2498')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_7158 = relay.TupleGetItem(func_2498_call(relay.reshape(var_7149.astype('int32'), [13, 2, 13]), relay.reshape(var_7149.astype('int32'), [13, 2, 13]), ), 1)
call_7159 = relay.TupleGetItem(func_2502_call(relay.reshape(var_7149.astype('int32'), [13, 2, 13]), relay.reshape(var_7149.astype('int32'), [13, 2, 13]), ), 1)
func_6732_call = mod.get_global_var('func_6732')
func_6733_call = mutated_mod.get_global_var('func_6733')
call_7172 = relay.TupleGetItem(func_6732_call(), 4)
call_7173 = relay.TupleGetItem(func_6733_call(), 4)
func_4164_call = mod.get_global_var('func_4164')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_7177 = relay.TupleGetItem(func_4164_call(), 0)
call_7178 = relay.TupleGetItem(func_4165_call(), 0)
func_2926_call = mod.get_global_var('func_2926')
func_2928_call = mutated_mod.get_global_var('func_2928')
const_7183 = relay.const([-6.583037,4.122755,-0.359789,-0.982900,-5.834681,2.144950,9.292211,8.562101,7.397236,1.134961,3.297183,2.796376,-4.032050,-8.356484,8.331318,-4.475290,0.144321,4.006095,6.637136,1.907012,1.888690,-1.851052,0.839620,-5.277166,-1.569411,-2.058219,-5.460146,8.009523,1.419824,-7.487389,-2.524310,-6.684158,-8.723941,8.109277,-3.636499,6.051126,-2.131812,-7.141687,-9.804066,-9.105327,-3.610381,-6.668149,-3.305619,9.723307,9.439238,2.208572,9.507421,2.784040,5.047260,5.797871,2.841961,2.642509,-1.270498,8.513565,7.769890,-8.113562,-1.574184,-6.889636,-7.061919,-4.050798,1.575909,5.113821,4.334372,9.049890,3.868633,-3.180677,8.708373,-2.290501,8.549047,-3.880433,6.784317,-1.623083,0.309590,5.553070,0.429514,6.636558,8.951021,0.928009,2.877117,0.587488,0.159370,8.229889,6.558866,7.861050,5.513809,5.756894,-5.617984,-4.855818,-4.322122,5.269542,4.714825,0.239942,5.769371,-3.658316,8.399051,5.530096,0.498616,6.225805,4.380055,-0.664172,9.994527,0.072687,0.048714,7.284893,6.993630,0.668103,-5.865550,9.084125,4.363963,-6.001312,3.408164,-5.790585,0.729030,-7.072194,-4.577082,0.067146,-3.614120,1.845894,4.193222,-2.772356,3.821090,9.539355,-0.868127,1.430226,-5.039879,-1.408468,3.574434,7.739032,-9.321789,7.922081,-6.951773,-1.660149,-9.267838,-6.938934,4.758341,-9.916161,8.224217,-6.324015,2.428929,7.899580,1.066884,4.767761,-2.874195,8.455969,-7.647656,1.601911,-7.644913,-4.122727,3.171910,-5.691298,3.759809,9.232749,-0.257925,-4.386177,2.044679,-0.628480,7.350277,-6.776774,-1.099040,-3.333116,-5.281715,2.761718,-6.515999,6.109227,-4.678706,-5.254907,4.700569,-5.330929,8.496899,0.063146,3.066898,1.308103,9.158807,-1.084116,-8.234301,9.142387,6.567175,8.766530,-2.917870,6.602383,-3.770713,-4.806593,-7.986268,9.505361,2.999438,-8.818807,-6.855208,7.405596,2.319354,4.868888,-8.374581,4.318387,0.076755,5.472850,1.726167,2.013921,-1.408773,0.098823,-3.424873,-2.639192,1.378015,-7.261297,2.751263,-7.293171,-0.362565,-9.145003,-4.831612,-2.959464,-9.490376,4.742343,-4.481314,6.329882,-8.646086,0.394549,4.085811,-8.704141,4.434557,5.369991,-6.983569,5.551825,9.033167,7.835522,6.344284,-9.655508,-8.913675,-2.263898,-0.239411,2.885391,-3.265982,8.950470,8.697428,3.882835,2.009753,9.170109,-4.816203,-4.917089,-7.760251,2.826563,7.868466,3.559274,1.497241,-9.016653,3.454821,-8.476984,7.398699,8.301751,3.834468,2.291914,6.420673,-4.590960,4.323696,-4.154352,-5.593893,-3.348343,4.845247,4.576611,1.843732,-7.882141,-1.795908,-8.772172,-9.035126,-4.714758,-8.555403,-2.094562,-1.726990,8.614806,8.024194,1.884882,4.345979,2.864178,0.590252,3.989292,0.084292,0.337616,-9.005349,3.139328,1.675236,-1.413883,2.381679,-4.568675,3.907536,1.372555,7.905287,8.481396,-4.202859,8.924798,1.710992,-4.049057,-8.095378,-9.618021,-6.079966,9.761077,5.912302,4.172249,0.312564,-0.881893,-8.771489,4.553742,-3.079399,-9.747118,-9.580875,-6.927618,2.994147,-4.226505,-7.819870,-6.623681,-6.581476,7.889317,-0.388774,-7.829516,-7.975265,-6.987018,-4.900741,-9.650405,-0.111458,-4.563356,-8.147932,3.139736,4.940677,7.793089,-4.353307,-7.051651,4.521907,0.565810,5.569040,9.568227,-3.685366,-7.022567,-5.253788,-7.101306,9.035217,1.645965,7.907543,6.112789,-8.704725,7.666357,7.399943,0.581944,5.068297,-6.282331,-3.502188,-1.096647,0.783356,1.960267,5.050649,8.768623,-7.418196,-7.755743,9.515454,1.077269,-8.712933,-1.541316,-2.712385,-5.436162,-3.474542,-3.263503,4.424197,-9.766077,7.206735,-0.951088,2.239805,-1.802686,-2.071670,2.449802,-1.928390,1.703763,9.600591,-9.809934,5.823468,6.824817,4.665848,-9.868325,-6.449401,-5.376509,-6.134021,-2.559705,-6.736652,-9.061643,0.090097,-7.924104,-8.900379,-4.192865,9.115619,9.107713,-3.821846,4.002910,5.818756,-4.517963,-2.398117,2.273504,8.338527,-8.140323,-6.671218,-5.556547,-2.227242,-8.368526,-4.227240,3.482720,3.903287,-3.093843,3.665127,-7.902578,6.650500,4.392679,7.134530,-8.833915,-4.372719,-2.892337,0.815065,3.997250,5.747037,-7.008857,-4.904675,3.070590,1.117701,6.676152,1.181513,9.279485,-6.248241,-0.493013,2.338194,-0.892508,4.548233,2.974784,4.071638,1.437662,-3.433484,-2.820059,6.515114,-0.869273,9.743528,9.643442,0.004841,8.822481,1.091260,4.798960,6.627298,0.614479,-2.052736,2.633111,6.127789,-7.586250,8.352898,-1.471416,9.588852,2.129833,3.948698,3.858010,7.831104,-1.351266], dtype = "float32")#candidate|7183|(450,)|const|float32
call_7182 = relay.TupleGetItem(func_2926_call(relay.reshape(const_7183.astype('float32'), [450, 1])), 1)
call_7184 = relay.TupleGetItem(func_2928_call(relay.reshape(const_7183.astype('float32'), [450, 1])), 1)
output = relay.Tuple([call_7033,call_7059,uop_7066,call_7071,uop_7092,call_7125,bop_7144,call_7148,var_7149,call_7158,call_7172,call_7177,call_7182,const_7183,])
output2 = relay.Tuple([call_7034,call_7060,uop_7068,call_7072,uop_7094,call_7126,bop_7147,call_7150,var_7149,call_7159,call_7173,call_7178,call_7184,const_7183,])
func_7186 = relay.Function([var_7121,var_7149,], output)
mod['func_7186'] = func_7186
mod = relay.transform.InferType()(mod)
var_7187 = relay.var("var_7187", dtype = "float32", shape = (48, 8))#candidate|7187|(48, 8)|var|float32
var_7188 = relay.var("var_7188", dtype = "int32", shape = (338,))#candidate|7188|(338,)|var|int32
output = func_7186(var_7187,var_7188,)
func_7189 = relay.Function([var_7187,var_7188,], output)
mutated_mod['func_7189'] = func_7189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6168_call = mod.get_global_var('func_6168')
func_6170_call = mutated_mod.get_global_var('func_6170')
call_7225 = relay.TupleGetItem(func_6168_call(), 4)
call_7226 = relay.TupleGetItem(func_6170_call(), 4)
func_2308_call = mod.get_global_var('func_2308')
func_2310_call = mutated_mod.get_global_var('func_2310')
call_7233 = relay.TupleGetItem(func_2308_call(), 0)
call_7234 = relay.TupleGetItem(func_2310_call(), 0)
output = relay.Tuple([call_7225,call_7233,])
output2 = relay.Tuple([call_7226,call_7234,])
func_7239 = relay.Function([], output)
mod['func_7239'] = func_7239
mod = relay.transform.InferType()(mod)
mutated_mod['func_7239'] = func_7239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7239_call = mutated_mod.get_global_var('func_7239')
call_7240 = func_7239_call()
output = call_7240
func_7241 = relay.Function([], output)
mutated_mod['func_7241'] = func_7241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4600_call = mod.get_global_var('func_4600')
func_4602_call = mutated_mod.get_global_var('func_4602')
call_7276 = relay.TupleGetItem(func_4600_call(), 4)
call_7277 = relay.TupleGetItem(func_4602_call(), 4)
var_7285 = relay.var("var_7285", dtype = "float64", shape = (11, 7, 12))#candidate|7285|(11, 7, 12)|var|float64
bop_7286 = relay.not_equal(call_7276.astype('bool'), relay.reshape(var_7285.astype('bool'), relay.shape_of(call_7276))) # shape=(11, 7, 12)
bop_7289 = relay.not_equal(call_7277.astype('bool'), relay.reshape(var_7285.astype('bool'), relay.shape_of(call_7277))) # shape=(11, 7, 12)
output = bop_7286
output2 = bop_7289
F = relay.Function([var_7285,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7285,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

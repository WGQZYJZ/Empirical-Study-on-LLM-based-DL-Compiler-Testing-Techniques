==========mod==========
#[version = "0.0.5"]
def @func_5237(%var_5227: Tensor[(1040), int64], %var_5228: float32) -> (Tensor[(10, 16, 13), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(468), float32], Tensor[(1040), int64], float32, Tensor[(1470), bool]) {
  %0 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %1 = @func_2237() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) */;
  %2 = %1.2;
  %3 = cast(%2, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %4 = reshape(%3, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %5 = @func_1082(%4) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) */;
  %6 = cast(%var_5227, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %7 = cast(%var_5227, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %8 = cast(%var_5228, dtype="float32") /* ty=float32 */;
  %9 = reshape(%6, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %10 = reshape(%7, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %11 = reshape(%8, newshape=[]) /* ty=float32 */;
  %12 = @func_2131(%9, %10, %11) /* ty=(Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) */;
  %13 = cast(%2, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %14 = sigmoid(%13) /* ty=Tensor[(1470), float64] */;
  %15 = cast(%2, dtype="uint16") /* ty=Tensor[(1470), uint16] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(1), int32] */;
  %17 = cast(%14, dtype="uint16") /* ty=Tensor[(1470), uint16] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %19 = left_shift(%17, %18) /* ty=Tensor[(1470), uint16] */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(1470), uint16] */, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(1), int32] */;
  %22 = cast(%19, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?), bool] */;
  %24 = @func_5089() /* ty=Tensor[(10, 16, 13), bool] */;
  %25 = %0.0;
  %26 = @func_1753() /* ty=Tensor[(11, 7, 12), uint8] */;
  %27 = @func_2872() /* ty=Tensor[(11, 7, 12), float64] */;
  %28 = %5.2;
  %29 = %12.3;
  %30 = equal(%22, %23) /* ty=Tensor[(1470), bool] */;
  (%24, %25, %26, %27, %28, %29, %var_5227, %var_5228, %30)
}

def @func_4818() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64]) {
  %31 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %32 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %33 = %32.4;
  %34 = cast(%33, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %35 = cos(%34) /* ty=Tensor[(11, 7, 12), float64] */;
  %36 = cast(%33, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %40 = %31.0;
  %41 = divide(%38, %39) /* ty=Tensor[(11, 7, 12), float64] */;
  (%40, %41)
}

def @func_6360() -> (Tensor[(11, 7, 12), float64],) {
  %42 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %45 = log(%44) /* ty=Tensor[(11, 7, 12), float64] */;
  (%45,)
}

def @func_3411() -> (Tensor[(11, 7, 12), float64],) {
  %46 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %47 = %46.0;
  (%47,)
}

def @func_6411() -> (Tensor[(11, 7, 12), float64],) {
  %48 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %49 = %48.0;
  (%49,)
}

def @func_3996(%var_3992: Tensor[(8, 5, 9), float64]) -> (Tensor[(8, 5, 9), float64],) {
  %50 = cast(%var_3992, dtype="float64") /* ty=Tensor[(8, 5, 9), float64] */;
  %51 = erf(%50) /* ty=Tensor[(8, 5, 9), float64] */;
  (%51,)
}

def @func_6983(%var_6970: Tensor[(10, 16, 13), int8]) -> (Tensor[(10, 16, 13), bool],) {
  %52 = @func_6015() /* ty=(Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), uint8], Tensor[(154, 6), float64]) */;
  %53 = %52.0;
  %54 = cast(%var_6970, dtype="int64") /* ty=Tensor[(10, 16, 13), int64] */;
  %55 = shape_of(%53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%53, dtype="int64") /* ty=Tensor[(10, 16, 13), int64] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %58 = add(%56, %57) /* ty=Tensor[(10, 16, 13), int64] */;
  %59 = cast(%53, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = logical_and(%61, %62) /* ty=Tensor[(10, 16, 13), bool] */;
  (%63,)
}

def @func_3281(%var_3258: float32) -> (Tensor[(11, 7, 12), int8], Tensor[(3, 13, 12), float32], float32, Tensor[(468), float32]) {
  %64 = @func_2882() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %65 = %64.0;
  %66 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 7, 12), float64] */, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%65, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %70 = cast(%var_3258, dtype="float32") /* ty=float32 */;
  %71 = cast(meta[relay.Constant][2] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %72 = reshape(%70, newshape=[]) /* ty=float32 */;
  %73 = reshape(%71, newshape=[3, 13, 12]) /* ty=Tensor[(3, 13, 12), float32] */;
  %74 = right_shift(%68, %69) /* ty=Tensor[(11, 7, 12), int8] */;
  %75 = @func_1799(%72, %73) /* ty=Tensor[(3, 13, 12), float32] */;
  (%74, %75, %var_3258, meta[relay.Constant][2] /* ty=Tensor[(468), float32] */)
}

def @func_2453(%var_2430: Tensor[(8, 16, 8), float32]) -> (Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) {
  %76 = cast(%var_2430, dtype="float32") /* ty=Tensor[(8, 16, 8), float32] */;
  %77 = atan(%76) /* ty=Tensor[(8, 16, 8), float32] */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 16, 8), float32] */, dtype="uint32") /* ty=Tensor[(8, 16, 8), uint32] */;
  %79 = shape_of(%var_2430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_2430, dtype="uint32") /* ty=Tensor[(8, 16, 8), uint32] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %82 = multiply(%80, %81) /* ty=Tensor[(8, 16, 8), uint32] */;
  %83 = cast(%82, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
  %84 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%77, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = cast(%77, dtype="float64") /* ty=Tensor[(8, 16, 8), float64] */;
  %88 = logical_or(%85, %86) /* ty=Tensor[(8, 16, 8), bool] */;
  %89 = log(%87) /* ty=Tensor[(8, 16, 8), float64] */;
  (%88, %89)
}

def @func_1627() -> (Tensor[(11, 7, 12), float64],) {
  %90 = @func_1268() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %91 = %90.0;
  (%91,)
}

def @func_3672() -> Tensor[(7, 9, 16), float32] {
  %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 16), float64] */;
  %93 = asinh(%92) /* ty=Tensor[(7, 9, 16), float64] */;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
  %95 = log2(%94) /* ty=Tensor[(7, 9, 16), float32] */;
  %96 = cast(%93, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%98, %99) /* ty=Tensor[(7, 9, 16), float32] */
}

def @func_1565() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  %100 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %101 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %102 = %101.1;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %104 = %100.0;
  %105 = sigmoid(%103) /* ty=Tensor[(11, 7, 12), float64] */;
  (%104, %105)
}

def @func_5519() -> Tensor[(11, 7, 12), float32] {
  %106 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %106.1
}

def @func_6263(%var_6256: Tensor[(10, 16, 13), int8]) -> (Tensor[(10, 16, 13), bool],) {
  %107 = @func_4723() /* ty=Tensor[(10, 16, 13), int8] */;
  %108 = cast(%var_6256, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%107, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %112 = less(%110, %111) /* ty=Tensor[(10, 16, 13), bool] */;
  (%112,)
}

def @func_1206(%var_1177: Tensor[(11, 7, 12), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) {
  %113 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %114 = cast(%var_1177, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%113, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %118 = cast(%113, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %119 = shape_of(%var_1177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_1177, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %122 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %123 = less_equal(%116, %117) /* ty=Tensor[(11, 7, 12), bool] */;
  %124 = logical_and(%120, %121) /* ty=Tensor[(11, 7, 12), bool] */;
  (%122, %123, %124)
}

def @func_3025(%var_3010: Tensor[(1470), uint32]) -> (Tensor[(1470), float64],) {
  %125 = @func_2237() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) */;
  %126 = %125.1;
  %127 = cast(%var_3010, dtype="uint64") /* ty=Tensor[(1470), uint64] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(1), int32] */;
  %129 = cast(%126, dtype="uint64") /* ty=Tensor[(1470), uint64] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %131 = subtract(%129, %130) /* ty=Tensor[(1470), uint64] */;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %133 = exp(%132) /* ty=Tensor[(1470), float64] */;
  (%133,)
}

def @func_1753() -> Tensor[(11, 7, 12), uint8] {
  %134 = @func_1605() /* ty=(Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) */;
  %134.1
}

def @func_1236() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %135 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %136 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
  (%135, %136)
}

def @func_2167() -> (Tensor[(11, 7, 12), float32],) {
  %137 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  (%137,)
}

def @func_5619() -> (Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float32]) {
  %138 = @func_4226() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) */;
  %139 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
  %140 = %138.1;
  %141 = %139.0;
  (%140, %141)
}

def @func_6031(%var_6026: Tensor[(8, 3, 16), float32]) -> (Tensor[(8, 3, 16), float32],) {
  %142 = cast(%var_6026, dtype="float32") /* ty=Tensor[(8, 3, 16), float32] */;
  %143 = log10(%142) /* ty=Tensor[(8, 3, 16), float32] */;
  (%143,)
}

def @func_6494() -> Tensor[(11, 7, 12), float64] {
  %144 = @func_6411() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %144.0
}

def @func_7186(%var_7121: Tensor[(48, 8), float32], %var_7149: Tensor[(338), int32]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float32], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float64], Tensor[(8, 3, 16), bool], Tensor[(11, 7, 12), float32], Tensor[(338), int32], Tensor[(13, 2, 13), uint8], Tensor[(11, 7, 12), float64], Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), int8], Tensor[(450), float32]) {
  %145 = @func_6411() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %146 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %147 = @func_3672() /* ty=Tensor[(7, 9, 16), float32] */;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
  %149 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %150 = cast(%147, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
  %151 = sigmoid(%150) /* ty=Tensor[(7, 9, 16), float32] */;
  %152 = cast(%147, dtype="int32") /* ty=Tensor[(7, 9, 16), int32] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%151, dtype="int32") /* ty=Tensor[(7, 9, 16), int32] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %156 = bitwise_or(%154, %155) /* ty=Tensor[(7, 9, 16), int32] */;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
  %158 = @func_3848() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %159 = cast(%var_7121, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %160 = reshape(%159, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
  %161 = @func_6031(%160) /* ty=(Tensor[(8, 3, 16), float32],) */;
  %162 = %161.0;
  %163 = cast(%var_7121, dtype="bool") /* ty=Tensor[(48, 8), bool] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="bool") /* ty=Tensor[(8, 3, 16), bool] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %167 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
  %168 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
  %169 = reshape(%167, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
  %170 = reshape(%168, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
  %171 = @func_2498(%169, %170) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) */;
  %172 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
  %173 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
  %174 = reshape(%172, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
  %175 = reshape(%173, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
  %176 = @func_2498(%174, %175) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) */;
  %177 = @func_6732() /* ty=(Tensor[(3, 13, 12), int8], Tensor[(672), uint64], Tensor[(1024), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), float64]) */;
  %178 = @func_4164() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %179 = cast(meta[relay.Constant][5] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %180 = reshape(%179, newshape=[450, 1]) /* ty=Tensor[(450, 1), float32] */;
  %181 = @func_2926(%180) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool], Tensor[(450, 1), float32]) */;
  %182 = %145.0;
  %183 = %146.0;
  %184 = log10(%148) /* ty=Tensor[(7, 9, 16), float32] */;
  %185 = %149.0;
  %186 = log(%157) /* ty=Tensor[(7, 9, 16), float32] */;
  %187 = %158.0;
  %188 = logical_or(%165, %166) /* ty=Tensor[(8, 3, 16), bool] */;
  %189 = %171.0;
  %190 = %176.1;
  %191 = %177.4;
  %192 = %178.0;
  %193 = %181.1;
  (%182, %183, %184, %185, %186, %187, %188, %189, %var_7149, %190, %191, %192, %193, meta[relay.Constant][5] /* ty=Tensor[(450), float32] */)
}

def @func_5338(%var_5332: Tensor[(60), uint64], %var_5333: int16) -> (Tensor[(11, 7, 12), float64], Tensor[(1, 1470), uint32], Tensor[(1470), float32], Tensor[(1, 2, 2), float64], Tensor[(4, 1), uint64], Tensor[(60), uint64], int16) {
  %194 = @func_3411() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %195 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 1470), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1470), uint32] */;
  %196 = reshape(%195, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %197 = @func_3025(%196) /* ty=(Tensor[(1470), float64],) */;
  %198 = %197.0;
  %199 = cast(%198, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %200 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 1), uint64] */;
  %201 = cast(%var_5332, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %202 = cast(%198, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %203 = cast(%var_5333, dtype="int16") /* ty=int16 */;
  %204 = reshape(%200, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), uint64] */;
  %205 = reshape(%201, newshape=[15, 2, 2]) /* ty=Tensor[(15, 2, 2), uint64] */;
  %206 = reshape(%202, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %207 = reshape(%203, newshape=[]) /* ty=int16 */;
  %208 = @func_4945(%204, %205, %206, %207) /* ty=(Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) */;
  %209 = %194.0;
  %210 = acosh(%199) /* ty=Tensor[(1470), float32] */;
  %211 = %208.5;
  (%209, meta[relay.Constant][6] /* ty=Tensor[(1, 1470), uint32] */, %210, %211, meta[relay.Constant][7] /* ty=Tensor[(4, 1), uint64] */, %var_5332, %var_5333)
}

def @func_3563(%var_3547: Tensor[(512, 2), float32]) -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) {
  %212 = cast(meta[relay.Constant][8] /* ty=Tensor[(512, 2), float32] */, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
  %213 = reshape(%212, newshape=[8, 16, 8]) /* ty=Tensor[(8, 16, 8), float32] */;
  %214 = @func_2453(%213) /* ty=(Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) */;
  %215 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %216 = cast(%var_3547, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
  %217 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(512, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %218 = cast(meta[relay.Constant][8] /* ty=Tensor[(512, 2), float32] */, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %220 = cast(meta[relay.Constant][9] /* ty=Tensor[(512, 2), float32] */, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
  %221 = shape_of(%var_3547, dtype="int32") /* ty=Tensor[(2), int32] */;
  %222 = cast(%var_3547, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %224 = @func_2638() /* ty=Tensor[(11, 7, 12), float64] */;
  %225 = @func_2702() /* ty=Tensor[(1470), uint32] */;
  %226 = %214.0;
  %227 = @func_3507() /* ty=Tensor[(11, 7, 12), float32] */;
  %228 = %215.0;
  %229 = logical_and(%218, %219) /* ty=Tensor[(512, 2), bool] */;
  %230 = logical_or(%222, %223) /* ty=Tensor[(512, 2), bool] */;
  (%224, %225, %226, %227, %228, %229, %230)
}

def @func_5795() -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) {
  %231 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
  %232 = @func_3108() /* ty=Tensor[(11, 7, 12), float64] */;
  %233 = %231.0;
  (%232, %233)
}

def @func_2200() -> (Tensor[(11, 7, 12), float64],) {
  %234 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %235 = %234.0;
  (%235,)
}

def @func_7239() -> (Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) {
  %236 = @func_6168() /* ty=(Tensor[(11, 7, 12), float64], int16, Tensor[(60), uint64], int16, Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) */;
  %237 = @func_2308() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %238 = %236.4;
  %239 = %237.0;
  (%238, %239)
}

def @func_4327() -> Tensor[(1470), uint32] {
  %240 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
  %240.0
}

def @func_3108() -> Tensor[(11, 7, 12), float64] {
  @func_1649() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_2051(%var_2007: float32, %var_2008: Tensor[(468), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) {
  %241 = cast(%var_2007, dtype="float32") /* ty=float32 */;
  %242 = cast(%var_2008, dtype="float32") /* ty=Tensor[(468), float32] */;
  %243 = reshape(%241, newshape=[]) /* ty=float32 */;
  %244 = reshape(%242, newshape=[3, 13, 12]) /* ty=Tensor[(3, 13, 12), float32] */;
  %245 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %246 = %245.0;
  %247 = cast(%246, dtype="int32") /* ty=Tensor[(11, 7, 12), int32] */;
  %248 = cast(%var_2007, dtype="int32") /* ty=int32 */;
  %249 = cast(%var_2007, dtype="float32") /* ty=float32 */;
  %250 = cast(%var_2008, dtype="float32") /* ty=Tensor[(468), float32] */;
  %251 = reshape(%249, newshape=[]) /* ty=float32 */;
  %252 = reshape(%250, newshape=[3, 13, 12]) /* ty=Tensor[(3, 13, 12), float32] */;
  %253 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %254 = @func_1799(%243, %244) /* ty=Tensor[(3, 13, 12), float32] */;
  %255 = bitwise_and(%247, %248) /* ty=Tensor[(11, 7, 12), int32] */;
  %256 = @func_1799(%251, %252) /* ty=Tensor[(3, 13, 12), float32] */;
  (%253, %254, %var_2008, %255, %256)
}

def @func_1315() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %257 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %258 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %259 = %257.1;
  %260 = %258.0;
  (%259, %260)
}

def @func_3303() -> Tensor[(11, 7, 12), float32] {
  @func_2572() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_6847() -> float32 {
  %261 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %261.2
}

def @func_3507() -> Tensor[(11, 7, 12), float32] {
  @func_2572() /* ty=Tensor[(11, 7, 12), float32] */
}

def @main(%var_7285: Tensor[(11, 7, 12), float64]) -> Tensor[(11, 7, 12), bool] {
  %262 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %263 = %262.4;
  %264 = cast(%var_7285, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%266, %267) /* ty=Tensor[(11, 7, 12), bool] */
}

def @func_4358() -> Tensor[(11, 7, 12), uint8] {
  %268 = @func_1605() /* ty=(Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) */;
  %268.1
}

def @func_1649() -> Tensor[(11, 7, 12), float64] {
  %269 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %269.1
}

def @func_1343(%var_1336: Tensor[(11, 7, 12), float32]) -> Tensor[(11, 7, 12), bool] {
  %270 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %271 = cast(%var_1336, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%273, %274) /* ty=Tensor[(11, 7, 12), bool] */
}

def @func_6316(%var_6305: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, 1, 7), float32],) {
  %275 = cast(%var_6305, dtype="float32") /* ty=Tensor[(11, 1, 7), float32] */;
  %276 = log2(%275) /* ty=Tensor[(11, 1, 7), float32] */;
  (%276,)
}

def @func_2572() -> Tensor[(11, 7, 12), float32] {
  %277 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %277.0
}

def @func_5431() -> (Tensor[(11, 7, 12), float32],) {
  %278 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
  (%278,)
}

def @func_3848() -> (Tensor[(11, 7, 12), float64],) {
  %279 = @func_2882() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %282 = acos(%281) /* ty=Tensor[(11, 7, 12), float64] */;
  (%282,)
}

def @func_1288(%var_1286: Tensor[(240), int16]) -> (Tensor[(11, 7, 12), float32], Tensor[(1, 2, 1), uint16], Tensor[(240), int16]) {
  %283 = cast(%var_1286, dtype="int16") /* ty=Tensor[(240), int16] */;
  %284 = reshape(%283, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %285 = @func_608(%284) /* ty=(Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) */;
  %286 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
  %287 = %285.1;
  (%286, %287, %var_1286)
}

def @func_5067(%var_5019: Tensor[(3, 16, 7), float32]) -> (Tensor[(3, 16, 7), float64], Tensor[(11, 7, 12), float64], Tensor[(3, 16, 7), float32]) {
  %288 = cast(%var_5019, dtype="float64") /* ty=Tensor[(3, 16, 7), float64] */;
  %289 = @func_4818() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64]) */;
  %290 = cast(%var_5019, dtype="float32") /* ty=Tensor[(3, 16, 7), float32] */;
  %291 = atan(%290) /* ty=Tensor[(3, 16, 7), float32] */;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(3, 16, 7), float32] */;
  %293 = sinh(%288) /* ty=Tensor[(3, 16, 7), float64] */;
  %294 = %289.0;
  %295 = cos(%292) /* ty=Tensor[(3, 16, 7), float32] */;
  (%293, %294, %295)
}

def @func_6756() -> (Tensor[(11, 7, 12), float32], Tensor[(1024), float64]) {
  %296 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %297 = @func_4525() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) */;
  %298 = %297.2;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %300 = %296.0;
  %301 = sigmoid(%299) /* ty=Tensor[(1024), float64] */;
  (%300, %301)
}

def @func_608(%var_570: Tensor[(240), int16]) -> (Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) {
  %302 = cast(-5.43349f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %303 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 1), float64] */;
  %304 = cast(-5.43349f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
  %305 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 2, 1), float64] */, dtype="uint16") /* ty=Tensor[(1, 2, 1), uint16] */;
  %306 = cast(-5.43349f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
  %307 = cast(%var_570, dtype="int16") /* ty=Tensor[(240), int16] */;
  %308 = reshape(%306, newshape=[]) /* ty=int16 */;
  %309 = reshape(%307, newshape=[4, 4, 15]) /* ty=Tensor[(4, 4, 15), int16] */;
  %310 = @func_155(%308, %309) /* ty=(Tensor[(4, 4, 15), int16],) */;
  %311 = %310.0;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(4, 4, 15), float64] */;
  %313 = cast(-5.43349f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
  %314 = tan(%312) /* ty=Tensor[(4, 4, 15), float64] */;
  %315 = cast(%314, dtype="int16") /* ty=Tensor[(4, 4, 15), int16] */;
  %316 = reshape(%313, newshape=[]) /* ty=int16 */;
  %317 = reshape(%315, newshape=[4, 4, 15]) /* ty=Tensor[(4, 4, 15), int16] */;
  %318 = @func_155(%316, %317) /* ty=(Tensor[(4, 4, 15), int16],) */;
  %319 = minimum(%302, %303) /* ty=Tensor[(1, 2, 1), float64] */;
  %320 = bitwise_xor(%304, %305) /* ty=Tensor[(1, 2, 1), uint16] */;
  %321 = %318.0;
  (%319, %320, %var_570, %314, %321)
}

def @func_2131(%var_2107: Tensor[(13, 10, 8), int64], %var_2108: Tensor[(13, 10, 8), int64], %var_2121: float32) -> (Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) {
  %322 = cast(%var_2108, dtype="bool") /* ty=Tensor[(13, 10, 8), bool] */;
  %323 = shape_of(%var_2107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_2107, dtype="bool") /* ty=Tensor[(13, 10, 8), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %326 = less_equal(%324, %325) /* ty=Tensor[(13, 10, 8), bool] */;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(13, 10, 8), float64] */;
  %328 = cast(%var_2121, dtype="float32") /* ty=float32 */;
  %329 = cast(meta[relay.Constant][11] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %330 = reshape(%328, newshape=[]) /* ty=float32 */;
  %331 = reshape(%329, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %332 = @func_2051(%330, %331) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) */;
  %333 = erf(%327) /* ty=Tensor[(13, 10, 8), float64] */;
  %334 = %332.2;
  (%333, %334, %var_2121, meta[relay.Constant][11] /* ty=Tensor[(468), float32] */)
}

def @func_2308() -> (Tensor[(11, 7, 12), float64],) {
  %335 = @func_1649() /* ty=Tensor[(11, 7, 12), float64] */;
  (%335,)
}

def @func_6838() -> (Tensor[(11, 7, 12), float32],) {
  %336 = @func_2167() /* ty=(Tensor[(11, 7, 12), float32],) */;
  %337 = %336.0;
  (%337,)
}

def @func_2659() -> (Tensor[(1470), uint32],) {
  %338 = @func_2237() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) */;
  %339 = %338.1;
  (%339,)
}

def @func_2638() -> Tensor[(11, 7, 12), float64] {
  %340 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %340.0
}

def @func_2768() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %341 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %342 = %341.0;
  %343 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
  (%342, %343)
}

def @func_4476(%var_4466: Tensor[(2, 14, 13), float32]) -> (Tensor[(2, 14, 13), float32], Tensor[(11, 7, 12), float32]) {
  %344 = cast(%var_4466, dtype="float32") /* ty=Tensor[(2, 14, 13), float32] */;
  %345 = rsqrt(%344) /* ty=Tensor[(2, 14, 13), float32] */;
  %346 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
  (%345, %346)
}

def @func_6237() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %347 = @func_3303() /* ty=Tensor[(11, 7, 12), float32] */;
  %348 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  (%347, %348)
}

def @func_4525() -> (Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) {
  %349 = @func_3411() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %350 = cast(meta[relay.Constant][12] /* ty=Tensor[(1024), float32] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %351 = reshape(%350, newshape=[512, 2]) /* ty=Tensor[(512, 2), float32] */;
  %352 = @func_3563(%351) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) */;
  %353 = %349.0;
  %354 = %352.5;
  (%353, %354, meta[relay.Constant][12] /* ty=Tensor[(1024), float32] */)
}

def @func_1445(%var_1431: Tensor[(11, 7, 12), float32]) -> (Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) {
  %355 = cast(%var_1431, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
  %356 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(11, 7, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 7, 12), float32] */, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %359 = @func_1372() /* ty=(Tensor[(11, 7, 12), float32],) */;
  %360 = %359.0;
  %361 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 7, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%360, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %365 = subtract(%363, %364) /* ty=Tensor[(11, 7, 12), float32] */;
  %366 = cast(%360, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %370 = logical_xor(%357, %358) /* ty=Tensor[(11, 7, 12), int8] */;
  %371 = greater_equal(%368, %369) /* ty=Tensor[(11, 7, 12), bool] */;
  (%370, %371)
}

def @func_1109() -> Tensor[(11, 7, 12), float32] {
  %372 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %372.0
}

def @func_3482(%var_3477: Tensor[(2, 16, 6), float32], %var_3478: Tensor[(2, 16, 6), float32]) -> Tensor[(2, 16, 6), float32] {
  %373 = cast(%var_3478, dtype="float32") /* ty=Tensor[(2, 16, 6), float32] */;
  %374 = shape_of(%var_3477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%var_3477, dtype="float32") /* ty=Tensor[(2, 16, 6), float32] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%375, %376) /* ty=Tensor[(2, 16, 6), float32] */
}

def @func_954(%var_935: Tensor[(11, 7, 12), float64]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) {
  %377 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %378 = %377.1;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %380 = cast(%var_935, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
  %381 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%378, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %384 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %385 = acosh(%379) /* ty=Tensor[(11, 7, 12), float64] */;
  %386 = bitwise_or(%382, %383) /* ty=Tensor[(11, 7, 12), uint8] */;
  %387 = %384.1;
  (%385, %386, %387)
}

def @func_4415() -> Tensor[(11, 7, 12), float64] {
  %388 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %388.0
}

def @func_6121() -> Tensor[(11, 7, 12), float64] {
  %389 = @func_3848() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %389.0
}

def @func_886() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  %390 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 7, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %391 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 7, 12), float32] */, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %392 = sin(%390) /* ty=Tensor[(11, 7, 12), float32] */;
  %393 = tan(%391) /* ty=Tensor[(11, 7, 12), float64] */;
  (%392, %393)
}

def @func_2882() -> (Tensor[(11, 7, 12), float64],) {
  %394 = @func_1268() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %395 = %394.0;
  (%395,)
}

def @func_3923(%var_3860: Tensor[(3, 16, 14), uint64], %var_3861: Tensor[(3, 16, 14), uint64], %var_3884: Tensor[(3, 16, 14), bool], %var_3890: Tensor[(1024), float32]) -> (Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(3, 16, 14), bool], Tensor[(11, 7, 12), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float32]) {
  %396 = cast(meta[relay.Constant][15] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %397 = reshape(%396, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
  %398 = @func_1206(%397) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
  %399 = cast(%var_3861, dtype="uint64") /* ty=Tensor[(3, 16, 14), uint64] */;
  %400 = shape_of(%var_3860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%var_3860, dtype="uint64") /* ty=Tensor[(3, 16, 14), uint64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %403 = bitwise_or(%401, %402) /* ty=Tensor[(3, 16, 14), uint64] */;
  %404 = cast(%var_3860, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%403, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %408 = greater_equal(%406, %407) /* ty=Tensor[(3, 16, 14), bool] */;
  %409 = cast(%var_3884, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %413 = cast(%var_3890, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %414 = reshape(%413, newshape=[512, 2]) /* ty=Tensor[(512, 2), float32] */;
  %415 = @func_3563(%414) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) */;
  %416 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %417 = %398.1;
  %418 = less(%411, %412) /* ty=Tensor[(3, 16, 14), bool] */;
  %419 = %415.4;
  %420 = %416.0;
  (%417, meta[relay.Constant][15] /* ty=Tensor[(924), float32] */, %418, %419, %var_3890, %420)
}

def @func_6015() -> (Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), uint8], Tensor[(154, 6), float64]) {
  %421 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %422 = cast(meta[relay.Constant][16] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %423 = reshape(%422, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float64] */;
  %424 = @func_954(%423) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) */;
  %425 = %421.0;
  %426 = %424.1;
  (%425, %426, meta[relay.Constant][16] /* ty=Tensor[(154, 6), float64] */)
}

def @func_6934(%var_6887: Tensor[(1470), uint32], %var_6928: Tensor[(8, 30), int16]) -> (Tensor[(240), int16], Tensor[(1470), uint32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), int8], Tensor[(11, 1, 7), float32], Tensor[(11, 7), float32], Tensor[(8, 30), bool]) {
  %427 = cast(%var_6887, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %428 = cast(%var_6887, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %429 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %430 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 30), int16] */, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %431 = reshape(%427, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %432 = reshape(%428, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %433 = reshape(%429, newshape=[]) /* ty=int16 */;
  %434 = reshape(%430, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %435 = @func_723(%431, %432, %433, %434) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
  %436 = @func_4691() /* ty=(Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), float32]) */;
  %437 = %436.1;
  %438 = cast(%437, dtype="uint16") /* ty=Tensor[(11, 7, 12), uint16] */;
  %439 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="uint16") /* ty=uint16 */;
  %440 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
  %441 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %442 = reshape(%441, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), float32] */;
  %443 = @func_6316(%442) /* ty=(Tensor[(11, 1, 7), float32],) */;
  %444 = cast(%var_6928, dtype="bool") /* ty=Tensor[(8, 30), bool] */;
  %445 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %446 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 30), int16] */, dtype="bool") /* ty=Tensor[(8, 30), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %448 = %435.3;
  %449 = left_shift(%438, %439) /* ty=Tensor[(11, 7, 12), uint16] */;
  %450 = %440.1;
  %451 = %443.0;
  %452 = equal(%446, %447) /* ty=Tensor[(8, 30), bool] */;
  (%448, %var_6887, %449, %450, %451, meta[relay.Constant][19] /* ty=Tensor[(11, 7), float32] */, %452)
}

def @func_4976() -> Tensor[(11, 7, 12), uint8] {
  @func_1753() /* ty=Tensor[(11, 7, 12), uint8] */
}

def @func_5697() -> Tensor[(11, 7, 12), float32] {
  %453 = @func_2167() /* ty=(Tensor[(11, 7, 12), float32],) */;
  %453.0
}

def @func_4945(%var_4891: Tensor[(1, 2, 2), uint64], %var_4892: Tensor[(15, 2, 2), uint64], %var_4918: Tensor[(1470), uint32], %var_4919: int16) -> (Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) {
  %454 = cast(%var_4891, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %455 = cast(%var_4892, dtype="bool") /* ty=Tensor[(15, 2, 2), bool] */;
  %456 = cast(%var_4918, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %457 = cast(%var_4918, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %458 = cast(%var_4919, dtype="int16") /* ty=int16 */;
  %459 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 30), int16] */, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %460 = reshape(%456, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %461 = reshape(%457, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %462 = reshape(%458, newshape=[]) /* ty=int16 */;
  %463 = reshape(%459, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %464 = @func_723(%460, %461, %462, %463) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
  %465 = cast(%var_4891, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %466 = asinh(%465) /* ty=Tensor[(1, 2, 2), float32] */;
  %467 = cast(%466, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %468 = sqrt(%467) /* ty=Tensor[(1, 2, 2), float64] */;
  %469 = cast(%468, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %470 = cast(%466, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %471 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
  %472 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %473 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %475 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %476 = cast(%468, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %477 = less(%454, %455) /* ty=Tensor[(15, 2, 2), bool] */;
  %478 = %464.0;
  %479 = sigmoid(%469) /* ty=Tensor[(1, 2, 2), float64] */;
  %480 = erf(%470) /* ty=Tensor[(1, 2, 2), float64] */;
  %481 = logical_xor(%473, %474) /* ty=Tensor[(8, 30), int32] */;
  %482 = %475.0;
  %483 = cos(%476) /* ty=Tensor[(1, 2, 2), float64] */;
  (%477, %478, %var_4918, %var_4919, %479, %480, %481, %482, %483)
}

def @func_3404() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float64]) {
  %484 = @func_3303() /* ty=Tensor[(11, 7, 12), float32] */;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %486 = reshape(%485, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
  %487 = @func_1445(%486) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) */;
  %488 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %489 = %487.0;
  %490 = %488.0;
  (%484, %489, %490)
}

def @func_3743() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32]) {
  %491 = @func_1605() /* ty=(Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) */;
  %492 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %493 = cast(%492, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %494 = reshape(%493, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float64] */;
  %495 = @func_954(%494) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) */;
  %496 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %497 = %491.0;
  %498 = %495.2;
  %499 = %496.0;
  %500 = @func_3672() /* ty=Tensor[(7, 9, 16), float32] */;
  (%492, %497, %498, %499, %500)
}

def @func_723(%var_694: Tensor[(15, 14, 7), uint32], %var_695: Tensor[(15, 14, 7), uint32], %var_705: int16, %var_706: Tensor[(240), int16]) -> (Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) {
  %501 = cast(%var_695, dtype="uint32") /* ty=Tensor[(15, 14, 7), uint32] */;
  %502 = shape_of(%var_694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%var_694, dtype="uint32") /* ty=Tensor[(15, 14, 7), uint32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %505 = cast(%var_705, dtype="int16") /* ty=int16 */;
  %506 = cast(%var_706, dtype="int16") /* ty=Tensor[(240), int16] */;
  %507 = reshape(%505, newshape=[]) /* ty=int16 */;
  %508 = reshape(%506, newshape=[4, 4, 15]) /* ty=Tensor[(4, 4, 15), int16] */;
  %509 = @func_155(%507, %508) /* ty=(Tensor[(4, 4, 15), int16],) */;
  %510 = %509.0;
  %511 = cast(%510, dtype="int16") /* ty=Tensor[(4, 4, 15), int16] */;
  %512 = reshape(%511, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %513 = @func_608(%512) /* ty=(Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) */;
  %514 = right_shift(%503, %504) /* ty=Tensor[(15, 14, 7), uint32] */;
  %515 = %513.4;
  (%514, %510, %var_705, %var_706, %515)
}

def @func_2702() -> Tensor[(1470), uint32] {
  %516 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
  %516.0
}

def @func_1515(%var_1480: Tensor[(15, 6, 5), float32], %var_1494: Tensor[(924), float32]) -> (Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(15, 6, 5), float32], Tensor[(11, 7, 12), float32]) {
  %517 = cast(%var_1494, dtype="float32") /* ty=Tensor[(924), float32] */;
  %518 = reshape(%517, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
  %519 = @func_1206(%518) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
  %520 = cast(%var_1480, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %521 = asinh(%520) /* ty=Tensor[(15, 6, 5), float32] */;
  %522 = cast(%521, dtype="uint16") /* ty=Tensor[(15, 6, 5), uint16] */;
  %523 = shape_of(%var_1480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%var_1480, dtype="uint16") /* ty=Tensor[(15, 6, 5), uint16] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %526 = minimum(%524, %525) /* ty=Tensor[(15, 6, 5), uint16] */;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %528 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %529 = %519.2;
  %530 = erf(%527) /* ty=Tensor[(15, 6, 5), float32] */;
  %531 = %528.1;
  (%529, %var_1494, %530, %531)
}

def @func_1605() -> (Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) {
  %532 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %533 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %534 = %533.0;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %536 = reshape(%535, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
  %537 = @func_1206(%536) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
  %538 = %537.2;
  %539 = cast(%538, dtype="uint16") /* ty=Tensor[(11, 7, 12), uint16] */;
  %540 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%532, dtype="uint16") /* ty=Tensor[(11, 7, 12), uint16] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %543 = cast(%534, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
  %544 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%538, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %547 = minimum(%541, %542) /* ty=Tensor[(11, 7, 12), uint16] */;
  %548 = bitwise_xor(%545, %546) /* ty=Tensor[(11, 7, 12), uint8] */;
  (%547, %548)
}

def @func_4672() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  %549 = @func_3411() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %550 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %551 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %552 = %549.0;
  %553 = %550.1;
  %554 = %551.4;
  (%552, %553, %554)
}

def @func_4226() -> (Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) {
  %555 = cast(4.98027f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %556 = reshape(%555, newshape=[]) /* ty=float32 */;
  %557 = @func_3281(%556) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(3, 13, 12), float32], float32, Tensor[(468), float32]) */;
  %558 = %557.1;
  %559 = cast(%558, dtype="int8") /* ty=Tensor[(3, 13, 12), int8] */;
  %560 = cast(4.98027f /* ty=float32 */, dtype="int8") /* ty=int8 */;
  %561 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %562 = @func_3108() /* ty=Tensor[(11, 7, 12), float64] */;
  %563 = multiply(%559, %560) /* ty=Tensor[(3, 13, 12), int8] */;
  %564 = %561.0;
  (%562, %563, %564)
}

def @func_2804() -> (Tensor[(10, 16, 13), int8],) {
  %565 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 16, 13), int8] */, dtype="int8") /* ty=Tensor[(10, 16, 13), int8] */;
  %566 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(10, 16, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 16, 13), int8] */, dtype="int8") /* ty=Tensor[(10, 16, 13), int8] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %569 = maximum(%567, %568) /* ty=Tensor[(10, 16, 13), int8] */;
  (%569,)
}

def @func_1268() -> (Tensor[(11, 7, 12), float64],) {
  %570 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %571 = %570.0;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %573 = cosh(%572) /* ty=Tensor[(11, 7, 12), float64] */;
  (%573,)
}

def @func_5874() -> Tensor[(512, 2), bool] {
  %574 = @func_4525() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) */;
  %574.1
}

def @func_6873(%var_6870: Tensor[(1040), int64], %var_6871: float32) -> (Tensor[(11, 7, 12), float32], Tensor[(1040), int64], Tensor[(1040), int64], float32) {
  %575 = @func_2768() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %576 = cast(%var_6870, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %577 = cast(%var_6871, dtype="float32") /* ty=float32 */;
  %578 = reshape(%576, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %579 = reshape(%577, newshape=[]) /* ty=float32 */;
  %580 = @func_5237(%578, %579) /* ty=(Tensor[(10, 16, 13), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(468), float32], Tensor[(1040), int64], float32, Tensor[(1470), bool]) */;
  %581 = %575.1;
  %582 = %580.6;
  (%581, %582, %var_6870, %var_6871)
}

def @func_2872() -> Tensor[(11, 7, 12), float64] {
  @func_2638() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_1396() -> (Tensor[(11, 7, 12), float64],) {
  %583 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %584 = %583.1;
  (%584,)
}

def @func_2862(%var_2843: Tensor[(14, 16, 15), float64], %var_2844: Tensor[(14, 16, 15), float64]) -> (Tensor[(14, 16, 15), bool],) {
  %585 = cast(%var_2844, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %586 = shape_of(%var_2843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_2843, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %589 = power(%587, %588) /* ty=Tensor[(14, 16, 15), float64] */;
  %590 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 16, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %594 = equal(%592, %593) /* ty=Tensor[(14, 16, 15), bool] */;
  (%594,)
}

def @func_4691() -> (Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), float32]) {
  %595 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %596 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
  %597 = %595.0;
  %598 = %596.0;
  (%597, %598)
}

def @func_6595(%var_6562: Tensor[(1040), int64], %var_6563: float32, %var_6571: Tensor[(98, 15), uint32], %var_6584: Tensor[(1040), int64]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(468), float32], float32, Tensor[(11, 7, 12), float32], Tensor[(1470), uint32], Tensor[(4), uint64], Tensor[(60), uint64], Tensor[(98, 15), uint32], Tensor[(1040), int8]) {
  %599 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %600 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %601 = cast(%var_6562, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %602 = cast(%var_6562, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %603 = cast(%var_6563, dtype="float32") /* ty=float32 */;
  %604 = reshape(%601, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %605 = reshape(%602, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %606 = reshape(%603, newshape=[]) /* ty=float32 */;
  %607 = @func_2131(%604, %605, %606) /* ty=(Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) */;
  %608 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %609 = cast(meta[relay.Constant][25] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %610 = cast(meta[relay.Constant][26] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %611 = cast(%var_6571, dtype="uint32") /* ty=Tensor[(98, 15), uint32] */;
  %612 = cast(%var_6563, dtype="int16") /* ty=int16 */;
  %613 = reshape(%609, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), uint64] */;
  %614 = reshape(%610, newshape=[15, 2, 2]) /* ty=Tensor[(15, 2, 2), uint64] */;
  %615 = reshape(%611, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %616 = reshape(%612, newshape=[]) /* ty=int16 */;
  %617 = @func_4945(%613, %614, %615, %616) /* ty=(Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) */;
  %618 = cast(%var_6584, dtype="int8") /* ty=Tensor[(1040), int8] */;
  %619 = shape_of(%var_6562, dtype="int32") /* ty=Tensor[(1), int32] */;
  %620 = cast(%var_6562, dtype="int8") /* ty=Tensor[(1040), int8] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?), int8] */;
  %622 = %599.0;
  %623 = %600.0;
  %624 = %607.1;
  %625 = %608.0;
  %626 = %617.2;
  %627 = left_shift(%620, %621) /* ty=Tensor[(1040), int8] */;
  (%622, %623, %624, %var_6563, %625, %626, meta[relay.Constant][25] /* ty=Tensor[(4), uint64] */, meta[relay.Constant][26] /* ty=Tensor[(60), uint64] */, %var_6571, %627)
}

def @func_1372() -> (Tensor[(11, 7, 12), float32],) {
  %628 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %629 = %628.0;
  (%629,)
}

def @func_4141(%var_4136: int16, %var_4137: Tensor[(16, 11, 8), int16]) -> (Tensor[(16, 11, 8), int16],) {
  %630 = cast(%var_4136, dtype="int16") /* ty=int16 */;
  %631 = cast(%var_4137, dtype="int16") /* ty=Tensor[(16, 11, 8), int16] */;
  %632 = left_shift(%630, %631) /* ty=Tensor[(16, 11, 8), int16] */;
  (%632,)
}

def @func_155(%var_147: int16, %var_148: Tensor[(4, 4, 15), int16]) -> (Tensor[(4, 4, 15), int16],) {
  %633 = cast(%var_147, dtype="int16") /* ty=int16 */;
  %634 = cast(%var_148, dtype="int16") /* ty=Tensor[(4, 4, 15), int16] */;
  %635 = left_shift(%633, %634) /* ty=Tensor[(4, 4, 15), int16] */;
  (%635,)
}

def @func_3366(%var_3308: Tensor[(13, 2, 7), float64], %var_3312: Tensor[(1024), float32], %var_3324: Tensor[(13, 2, 7), float64]) -> (Tensor[(8, 16, 8), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float64], Tensor[(13, 2, 7), float32], Tensor[(10, 16, 13), int8]) {
  %636 = cast(%var_3312, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %637 = reshape(%636, newshape=[8, 16, 8]) /* ty=Tensor[(8, 16, 8), float32] */;
  %638 = @func_2453(%637) /* ty=(Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) */;
  %639 = @func_2882() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %640 = cast(%var_3308, dtype="float64") /* ty=Tensor[(13, 2, 7), float64] */;
  %641 = cos(%640) /* ty=Tensor[(13, 2, 7), float64] */;
  %642 = cast(%var_3324, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%641, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %646 = floor_mod(%644, %645) /* ty=Tensor[(13, 2, 7), float32] */;
  %647 = cast(%var_3308, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%646, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %651 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %652 = %638.1;
  %653 = %639.0;
  %654 = floor_divide(%649, %650) /* ty=Tensor[(13, 2, 7), float32] */;
  %655 = %651.0;
  (%652, %var_3312, %653, %654, %655)
}

def @func_1799(%var_1784: float32, %var_1785: Tensor[(3, 13, 12), float32]) -> Tensor[(3, 13, 12), float32] {
  %656 = cast(%var_1784, dtype="float32") /* ty=float32 */;
  %657 = cast(%var_1785, dtype="float32") /* ty=Tensor[(3, 13, 12), float32] */;
  mod(%656, %657) /* ty=Tensor[(3, 13, 12), float32] */
}

def @func_5569(%var_5563: Tensor[(10, 16, 13), bool]) -> Tensor[(10, 16, 13), bool] {
  %658 = @func_5089() /* ty=Tensor[(10, 16, 13), bool] */;
  %659 = cast(%var_5563, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%658, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%661, %662) /* ty=Tensor[(10, 16, 13), bool] */
}

def @func_5366() -> (Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) {
  %663 = @func_2768() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %664 = @func_4164() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %665 = %663.1;
  %666 = %664.0;
  (%665, %666)
}

def @func_4164() -> (Tensor[(10, 16, 13), int8],) {
  %667 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %668 = %667.0;
  (%668,)
}

def @func_6732() -> (Tensor[(3, 13, 12), int8], Tensor[(672), uint64], Tensor[(1024), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), float64]) {
  %669 = @func_4226() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) */;
  %670 = cast(meta[relay.Constant][27] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %671 = cast(meta[relay.Constant][27] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %672 = cast(meta[relay.Constant][27] /* ty=Tensor[(672), uint64] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %673 = cast(meta[relay.Constant][28] /* ty=Tensor[(1024), float32] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %674 = reshape(%670, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), uint64] */;
  %675 = reshape(%671, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), uint64] */;
  %676 = reshape(%672, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), bool] */;
  %677 = reshape(%673, newshape=[1024]) /* ty=Tensor[(1024), float32] */;
  %678 = @func_3923(%674, %675, %676, %677) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(3, 16, 14), bool], Tensor[(11, 7, 12), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float32]) */;
  %679 = %678.3;
  %680 = @func_4672() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %681 = %680.2;
  %682 = cast(%681, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %683 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%679, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = %669.1;
  %687 = greater(%684, %685) /* ty=Tensor[(11, 7, 12), bool] */;
  %688 = @func_6494() /* ty=Tensor[(11, 7, 12), float64] */;
  (%686, meta[relay.Constant][27] /* ty=Tensor[(672), uint64] */, meta[relay.Constant][28] /* ty=Tensor[(1024), float32] */, %687, %688)
}

def @func_2926(%var_2917: Tensor[(450, 1), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool], Tensor[(450, 1), float32]) {
  %689 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %690 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
  %691 = cast(%var_2917, dtype="float32") /* ty=Tensor[(450, 1), float32] */;
  %692 = %689.0;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %694 = reshape(%691, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
  %695 = reshape(%693, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %696 = @func_1515(%694, %695) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(15, 6, 5), float32], Tensor[(11, 7, 12), float32]) */;
  %697 = %690.1;
  %698 = %696.0;
  (%692, %697, %698, %var_2917)
}

def @func_2368() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) {
  %699 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %701 = reshape(%700, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
  %702 = @func_1445(%701) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) */;
  %703 = %702.0;
  %704 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  (%699, %703, %704)
}

def @func_1158() -> Tensor[(11, 7, 12), float32] {
  @func_1109() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_3757() -> (Tensor[(1470), uint32],) {
  %705 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
  %706 = %705.0;
  (%706,)
}

def @func_1082(%var_1074: Tensor[(1470), uint32]) -> (Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) {
  %707 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %708 = cast(%var_1074, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %709 = cast(%var_1074, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %710 = cast(meta[relay.Constant][29] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %711 = cast(meta[relay.Constant][30] /* ty=Tensor[(120, 2), int16] */, dtype="int16") /* ty=Tensor[(120, 2), int16] */;
  %712 = reshape(%708, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %713 = reshape(%709, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %714 = reshape(%710, newshape=[]) /* ty=int16 */;
  %715 = reshape(%711, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %716 = @func_723(%712, %713, %714, %715) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
  %717 = %707.1;
  %718 = %716.1;
  (%717, %718, %var_1074, meta[relay.Constant][29] /* ty=int16 */, meta[relay.Constant][30] /* ty=Tensor[(120, 2), int16] */)
}

def @func_4723() -> Tensor[(10, 16, 13), int8] {
  %719 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %719.0
}

def @func_2237() -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) {
  %720 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %721 = %720.1;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %723 = cast(meta[relay.Constant][31] /* ty=Tensor[(1470), uint32] */, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %724 = reshape(%723, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %725 = @func_1082(%724) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) */;
  %726 = cast(%721, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %727 = asinh(%722) /* ty=Tensor[(11, 7, 12), float64] */;
  %728 = %725.2;
  %729 = log2(%726) /* ty=Tensor[(11, 7, 12), float32] */;
  (%727, %728, meta[relay.Constant][31] /* ty=Tensor[(1470), uint32] */, %729)
}

def @func_2498(%var_2476: Tensor[(13, 2, 13), int32], %var_2477: Tensor[(13, 2, 13), int32]) -> (Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) {
  %730 = @func_2167() /* ty=(Tensor[(11, 7, 12), float32],) */;
  %731 = cast(%var_2477, dtype="int32") /* ty=Tensor[(13, 2, 13), int32] */;
  %732 = shape_of(%var_2476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%var_2476, dtype="int32") /* ty=Tensor[(13, 2, 13), int32] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %735 = add(%733, %734) /* ty=Tensor[(13, 2, 13), int32] */;
  %736 = cast(%var_2477, dtype="uint8") /* ty=Tensor[(13, 2, 13), uint8] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="uint8") /* ty=Tensor[(13, 2, 13), uint8] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %740 = cast(%var_2477, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
  %741 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%735, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %744 = %730.0;
  %745 = bitwise_xor(%738, %739) /* ty=Tensor[(13, 2, 13), uint8] */;
  %746 = multiply(%742, %743) /* ty=Tensor[(13, 2, 13), float64] */;
  (%744, %745, %746)
}

def @func_4600() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) {
  %747 = cast(-1.49098f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %748 = cast(meta[relay.Constant][32] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %749 = reshape(%747, newshape=[]) /* ty=float32 */;
  %750 = reshape(%748, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %751 = @func_2051(%749, %750) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) */;
  %752 = %751.0;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %754 = reshape(%753, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float64] */;
  %755 = @func_954(%754) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) */;
  %756 = cast(-1.49098f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %757 = cast(meta[relay.Constant][32] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %758 = reshape(%756, newshape=[]) /* ty=float32 */;
  %759 = reshape(%757, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %760 = @func_2051(%758, %759) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) */;
  %761 = @func_1649() /* ty=Tensor[(11, 7, 12), float64] */;
  %762 = %755.2;
  %763 = %760.3;
  (%761, %752, -1.49098f /* ty=float32 */, meta[relay.Constant][32] /* ty=Tensor[(468), float32] */, %762, %763)
}

def @func_4297(%var_4275: uint32) -> (Tensor[(13, 12, 9), float64],) {
  %764 = cast(%var_4275, dtype="uint32") /* ty=uint32 */;
  %765 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 12, 9), uint32] */, dtype="uint32") /* ty=Tensor[(13, 12, 9), uint32] */;
  %766 = multiply(%764, %765) /* ty=Tensor[(13, 12, 9), uint32] */;
  %767 = cast(%766, dtype="float64") /* ty=Tensor[(13, 12, 9), float64] */;
  %768 = cast(%var_4275, dtype="float64") /* ty=float64 */;
  %769 = power(%767, %768) /* ty=Tensor[(13, 12, 9), float64] */;
  (%769,)
}

def @func_5860() -> (Tensor[(11, 7, 12), float64], Tensor[(13, 12, 9), float64], uint32) {
  %770 = @func_4525() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) */;
  %771 = cast(meta[relay.Constant][34] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %772 = reshape(%771, newshape=[]) /* ty=uint32 */;
  %773 = @func_4297(%772) /* ty=(Tensor[(13, 12, 9), float64],) */;
  %774 = %770.0;
  %775 = %773.0;
  (%774, %775, meta[relay.Constant][34] /* ty=uint32 */)
}

def @func_6101() -> (Tensor[(1470), uint32], Tensor[(11, 7, 12), int32]) {
  %776 = @func_5795() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) */;
  %777 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %778 = %776.1;
  %779 = %777.5;
  (%778, %779)
}

def @func_3780(%var_3760: Tensor[(5, 10, 4), float64], %var_3773: Tensor[(1470), uint32]) -> (Tensor[(5, 10, 4), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(240), int16]) {
  %780 = cast(%var_3760, dtype="float64") /* ty=Tensor[(5, 10, 4), float64] */;
  %781 = cast(%var_3773, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %782 = cast(%var_3773, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %783 = cast(meta[relay.Constant][35] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %784 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %785 = reshape(%781, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %786 = reshape(%782, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %787 = reshape(%783, newshape=[]) /* ty=int16 */;
  %788 = reshape(%784, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %789 = @func_723(%785, %786, %787, %788) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
  %790 = log2(%780) /* ty=Tensor[(5, 10, 4), float64] */;
  %791 = %789.1;
  (%790, %791, %var_3773, meta[relay.Constant][35] /* ty=int16 */, meta[relay.Constant][36] /* ty=Tensor[(240), int16] */)
}

def @func_2995() -> (Tensor[(1470), uint32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32]) {
  %792 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
  %793 = @func_2872() /* ty=Tensor[(11, 7, 12), float64] */;
  %794 = cast(%793, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %795 = reshape(%794, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
  %796 = @func_1206(%795) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
  %797 = %792.0;
  %798 = %796.0;
  (%797, %793, %798)
}

def @func_6168() -> (Tensor[(11, 7, 12), float64], int16, Tensor[(60), uint64], int16, Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) {
  %799 = @func_5795() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) */;
  %800 = cast(meta[relay.Constant][37] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %801 = cast(meta[relay.Constant][38] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %802 = reshape(%800, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %803 = reshape(%801, newshape=[]) /* ty=int16 */;
  %804 = @func_5338(%802, %803) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1, 1470), uint32], Tensor[(1470), float32], Tensor[(1, 2, 2), float64], Tensor[(4, 1), uint64], Tensor[(60), uint64], int16) */;
  %805 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 14), float32] */;
  %806 = cosh(%805) /* ty=Tensor[(5, 8, 14), float32] */;
  %807 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 8, 14), float32] */, dtype="bool") /* ty=Tensor[(5, 8, 14), bool] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="bool") /* ty=Tensor[(5, 8, 14), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %811 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %812 = %799.0;
  %813 = %804.6;
  %814 = less(%809, %810) /* ty=Tensor[(5, 8, 14), bool] */;
  %815 = %811.4;
  (%812, %813, meta[relay.Constant][37] /* ty=Tensor[(60), uint64] */, meta[relay.Constant][38] /* ty=int16 */, %814, %815)
}

def @func_5738() -> (Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) {
  %816 = @func_4976() /* ty=Tensor[(11, 7, 12), uint8] */;
  %817 = cast(%816, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %818 = @func_4164() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %819 = erf(%817) /* ty=Tensor[(11, 7, 12), float32] */;
  %820 = %818.0;
  (%819, %820)
}

def @func_5089() -> Tensor[(10, 16, 13), bool] {
  %821 = @func_4723() /* ty=Tensor[(10, 16, 13), int8] */;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(10, 16, 13), float64] */;
  %823 = erf(%822) /* ty=Tensor[(10, 16, 13), float64] */;
  %824 = cast(%821, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%826, %827) /* ty=Tensor[(10, 16, 13), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5569(%var_5563: Tensor[(10, 16, 13), bool]) -> Tensor[(10, 16, 13), bool] {
  %0 = @func_5089() /* ty=Tensor[(10, 16, 13), bool] */;
  %1 = cast(%var_5563, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%3, %4) /* ty=Tensor[(10, 16, 13), bool] */
}

def @func_3507() -> Tensor[(11, 7, 12), float32] {
  @func_2572() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_3485(%var_3483: Tensor[(2, 16, 6), float32], %var_3484: Tensor[(2, 16, 6), float32]) -> Tensor[(2, 16, 6), float32] {
  %9 = fn (%var_3477: Tensor[(2, 16, 6), float32], %var_3478: Tensor[(2, 16, 6), float32]) -> Tensor[(2, 16, 6), float32] {
    %5 = cast(%var_3478, dtype="float32") /* ty=Tensor[(2, 16, 6), float32] */;
    %6 = shape_of(%var_3477, dtype="int32") /* ty=Tensor[(3), int32] */;
    %7 = cast(%var_3477, dtype="float32") /* ty=Tensor[(2, 16, 6), float32] */;
    %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    add(%7, %8) /* ty=Tensor[(2, 16, 6), float32] */
  };
  %9(%var_3483, %var_3484) /* ty=Tensor[(2, 16, 6), float32] */
}

def @func_4227() -> (Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) {
  %20 = fn () -> (Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) {
    %10 = cast(4.98027f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %11 = reshape(%10, newshape=[]) /* ty=float32 */;
    %12 = @func_3281(%11) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(3, 13, 12), float32], float32, Tensor[(468), float32]) */;
    %13 = %12.1;
    %14 = cast(%13, dtype="int8") /* ty=Tensor[(3, 13, 12), int8] */;
    %15 = cast(4.98027f /* ty=float32 */, dtype="int8") /* ty=int8 */;
    %16 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %17 = @func_3108() /* ty=Tensor[(11, 7, 12), float64] */;
    %18 = multiply(%14, %15) /* ty=Tensor[(3, 13, 12), int8] */;
    %19 = %16.0;
    (%17, %18, %19)
  };
  %20() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) */
}

def @func_4673() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  %27 = fn () -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
    %21 = @func_3411() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %22 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %23 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
    %24 = %21.0;
    %25 = %22.1;
    %26 = %23.4;
    (%24, %25, %26)
  };
  %27() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */
}

def @func_4297(%var_4275: uint32) -> (Tensor[(13, 12, 9), float64],) {
  %28 = cast(%var_4275, dtype="uint32") /* ty=uint32 */;
  %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 12, 9), uint32] */, dtype="uint32") /* ty=Tensor[(13, 12, 9), uint32] */;
  %30 = multiply(%28, %29) /* ty=Tensor[(13, 12, 9), uint32] */;
  %31 = cast(%30, dtype="float64") /* ty=Tensor[(13, 12, 9), float64] */;
  %32 = cast(%var_4275, dtype="float64") /* ty=float64 */;
  %33 = power(%31, %32) /* ty=Tensor[(13, 12, 9), float64] */;
  (%33,)
}

def @func_1802(%var_1800: float32, %var_1801: Tensor[(3, 13, 12), float32]) -> Tensor[(3, 13, 12), float32] {
  %36 = fn (%var_1784: float32, %var_1785: Tensor[(3, 13, 12), float32]) -> Tensor[(3, 13, 12), float32] {
    %34 = cast(%var_1784, dtype="float32") /* ty=float32 */;
    %35 = cast(%var_1785, dtype="float32") /* ty=Tensor[(3, 13, 12), float32] */;
    mod(%34, %35) /* ty=Tensor[(3, 13, 12), float32] */
  };
  %36(%var_1800, %var_1801) /* ty=Tensor[(3, 13, 12), float32] */
}

def @func_1629() -> (Tensor[(11, 7, 12), float64],) {
  @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_3027(%var_3026: Tensor[(1470), uint32]) -> (Tensor[(1470), float64],) {
  %46 = fn (%var_3010: Tensor[(1470), uint32]) -> (Tensor[(1470), float64],) {
    %37 = @func_2237() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) */;
    %38 = %37.1;
    %39 = cast(%var_3010, dtype="uint64") /* ty=Tensor[(1470), uint64] */;
    %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(1), int32] */;
    %41 = cast(%38, dtype="uint64") /* ty=Tensor[(1470), uint64] */;
    %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %43 = subtract(%41, %42) /* ty=Tensor[(1470), uint64] */;
    %44 = cast(%43, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %45 = exp(%44) /* ty=Tensor[(1470), float64] */;
    (%45,)
  };
  %46(%var_3026) /* ty=(Tensor[(1470), float64],) */
}

def @func_6495() -> Tensor[(11, 7, 12), float64] {
  %48 = fn () -> Tensor[(11, 7, 12), float64] {
    %47 = @func_6411() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %47.0
  };
  %48() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_886() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 7, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 7, 12), float32] */, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %51 = sin(%49) /* ty=Tensor[(11, 7, 12), float32] */;
  %52 = tan(%50) /* ty=Tensor[(11, 7, 12), float64] */;
  (%51, %52)
}

def @func_6015() -> (Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), uint8], Tensor[(154, 6), float64]) {
  %53 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %55 = reshape(%54, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float64] */;
  %56 = @func_954(%55) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) */;
  %57 = %53.0;
  %58 = %56.1;
  (%57, %58, meta[relay.Constant][2] /* ty=Tensor[(154, 6), float64] */)
}

def @func_2502(%var_2500: Tensor[(13, 2, 13), int32], %var_2501: Tensor[(13, 2, 13), int32]) -> (Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) {
  @func_2498(%var_2500, %var_2501) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) */
}

def @func_3744() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32]) {
  %69 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32]) {
    %59 = @func_1605() /* ty=(Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) */;
    %60 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    %61 = cast(%60, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
    %62 = reshape(%61, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float64] */;
    %63 = @func_954(%62) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) */;
    %64 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %65 = %59.0;
    %66 = %63.2;
    %67 = %64.0;
    %68 = @func_3672() /* ty=Tensor[(7, 9, 16), float32] */;
    (%60, %65, %66, %67, %68)
  };
  %69() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32]) */
}

def @func_2996() -> (Tensor[(1470), uint32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32]) {
  %77 = fn () -> (Tensor[(1470), uint32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32]) {
    %70 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
    %71 = @func_2872() /* ty=Tensor[(11, 7, 12), float64] */;
    %72 = cast(%71, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
    %73 = reshape(%72, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
    %74 = @func_1206(%73) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
    %75 = %70.0;
    %76 = %74.0;
    (%75, %71, %76)
  };
  %77() /* ty=(Tensor[(1470), uint32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32]) */
}

def @func_1565() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  %78 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %79 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %80 = %79.1;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %82 = %78.0;
  %83 = sigmoid(%81) /* ty=Tensor[(11, 7, 12), float64] */;
  (%82, %83)
}

def @func_5697() -> Tensor[(11, 7, 12), float32] {
  %84 = @func_2167() /* ty=(Tensor[(11, 7, 12), float32],) */;
  %84.0
}

def @func_1346(%var_1344: Tensor[(11, 7, 12), float32]) -> Tensor[(11, 7, 12), bool] {
  @func_1343(%var_1344) /* ty=Tensor[(11, 7, 12), bool] */
}

def @func_5089() -> Tensor[(10, 16, 13), bool] {
  %85 = @func_4723() /* ty=Tensor[(10, 16, 13), int8] */;
  %86 = cast(%85, dtype="float64") /* ty=Tensor[(10, 16, 13), float64] */;
  %87 = erf(%86) /* ty=Tensor[(10, 16, 13), float64] */;
  %88 = cast(%85, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%90, %91) /* ty=Tensor[(10, 16, 13), bool] */
}

def @func_3371(%var_3368: Tensor[(13, 2, 7), float64], %var_3369: Tensor[(1024), float32], %var_3370: Tensor[(13, 2, 7), float64]) -> (Tensor[(8, 16, 8), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float64], Tensor[(13, 2, 7), float32], Tensor[(10, 16, 13), int8]) {
  @func_3366(%var_3368, %var_3369, %var_3370) /* ty=(Tensor[(8, 16, 8), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float64], Tensor[(13, 2, 7), float32], Tensor[(10, 16, 13), int8]) */
}

def @func_2769() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %95 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
    %92 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %93 = %92.0;
    %94 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
    (%93, %94)
  };
  %95() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */
}

def @func_6266(%var_6264: Tensor[(10, 16, 13), int8]) -> (Tensor[(10, 16, 13), bool],) {
  @func_6263(%var_6264) /* ty=(Tensor[(10, 16, 13), bool],) */
}

def @func_4602() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) {
  @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */
}

def @func_6316(%var_6305: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, 1, 7), float32],) {
  %96 = cast(%var_6305, dtype="float32") /* ty=Tensor[(11, 1, 7), float32] */;
  %97 = log2(%96) /* ty=Tensor[(11, 1, 7), float32] */;
  (%97,)
}

def @func_5875() -> Tensor[(512, 2), bool] {
  %99 = fn () -> Tensor[(512, 2), bool] {
    %98 = @func_4525() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) */;
    %98.1
  };
  %99() /* ty=Tensor[(512, 2), bool] */
}

def @func_3304() -> Tensor[(11, 7, 12), float32] {
  %100 = fn () -> Tensor[(11, 7, 12), float32] {
    @func_2572() /* ty=Tensor[(11, 7, 12), float32] */
  };
  %100() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_4724() -> Tensor[(10, 16, 13), int8] {
  %102 = fn () -> Tensor[(10, 16, 13), int8] {
    %101 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
    %101.0
  };
  %102() /* ty=Tensor[(10, 16, 13), int8] */
}

def @func_6847() -> float32 {
  %103 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %103.2
}

def @func_5368() -> (Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) {
  @func_5366() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) */
}

def @func_1084(%var_1083: Tensor[(1470), uint32]) -> (Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) {
  %116 = fn (%var_1074: Tensor[(1470), uint32]) -> (Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) {
    %104 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %105 = cast(%var_1074, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
    %106 = cast(%var_1074, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
    %107 = cast(meta[relay.Constant][3] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %108 = cast(meta[relay.Constant][4] /* ty=Tensor[(120, 2), int16] */, dtype="int16") /* ty=Tensor[(120, 2), int16] */;
    %109 = reshape(%105, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
    %110 = reshape(%106, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
    %111 = reshape(%107, newshape=[]) /* ty=int16 */;
    %112 = reshape(%108, newshape=[240]) /* ty=Tensor[(240), int16] */;
    %113 = @func_723(%109, %110, %111, %112) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
    %114 = %104.1;
    %115 = %113.1;
    (%114, %115, %var_1074, meta[relay.Constant][3] /* ty=int16 */, meta[relay.Constant][4] /* ty=Tensor[(120, 2), int16] */)
  };
  %116(%var_1083) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) */
}

def @func_159(%var_157: int16, %var_158: Tensor[(4, 4, 15), int16]) -> (Tensor[(4, 4, 15), int16],) {
  @func_155(%var_157, %var_158) /* ty=(Tensor[(4, 4, 15), int16],) */
}

def @func_2131(%var_2107: Tensor[(13, 10, 8), int64], %var_2108: Tensor[(13, 10, 8), int64], %var_2121: float32) -> (Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) {
  %117 = cast(%var_2108, dtype="bool") /* ty=Tensor[(13, 10, 8), bool] */;
  %118 = shape_of(%var_2107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%var_2107, dtype="bool") /* ty=Tensor[(13, 10, 8), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = less_equal(%119, %120) /* ty=Tensor[(13, 10, 8), bool] */;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(13, 10, 8), float64] */;
  %123 = cast(%var_2121, dtype="float32") /* ty=float32 */;
  %124 = cast(meta[relay.Constant][5] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %125 = reshape(%123, newshape=[]) /* ty=float32 */;
  %126 = reshape(%124, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %127 = @func_2051(%125, %126) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) */;
  %128 = erf(%122) /* ty=Tensor[(13, 10, 8), float64] */;
  %129 = %127.2;
  (%128, %129, %var_2121, meta[relay.Constant][5] /* ty=Tensor[(468), float32] */)
}

def @func_6017() -> (Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), uint8], Tensor[(154, 6), float64]) {
  @func_6015() /* ty=(Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), uint8], Tensor[(154, 6), float64]) */
}

def @func_2239() -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) {
  @func_2237() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) */
}

def @func_3109() -> Tensor[(11, 7, 12), float64] {
  %130 = fn () -> Tensor[(11, 7, 12), float64] {
    @func_1649() /* ty=Tensor[(11, 7, 12), float64] */
  };
  %130() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_6985(%var_6984: Tensor[(10, 16, 13), int8]) -> (Tensor[(10, 16, 13), bool],) {
  %143 = fn (%var_6970: Tensor[(10, 16, 13), int8]) -> (Tensor[(10, 16, 13), bool],) {
    %131 = @func_6015() /* ty=(Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), uint8], Tensor[(154, 6), float64]) */;
    %132 = %131.0;
    %133 = cast(%var_6970, dtype="int64") /* ty=Tensor[(10, 16, 13), int64] */;
    %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
    %135 = cast(%132, dtype="int64") /* ty=Tensor[(10, 16, 13), int64] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %137 = add(%135, %136) /* ty=Tensor[(10, 16, 13), int64] */;
    %138 = cast(%132, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
    %139 = shape_of(%137, dtype="int32") /* ty=Tensor[(3), int32] */;
    %140 = cast(%137, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
    %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %142 = logical_and(%140, %141) /* ty=Tensor[(10, 16, 13), bool] */;
    (%142,)
  };
  %143(%var_6984) /* ty=(Tensor[(10, 16, 13), bool],) */
}

def @func_2054(%var_2052: float32, %var_2053: Tensor[(468), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) {
  %160 = fn (%var_2007: float32, %var_2008: Tensor[(468), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) {
    %144 = cast(%var_2007, dtype="float32") /* ty=float32 */;
    %145 = cast(%var_2008, dtype="float32") /* ty=Tensor[(468), float32] */;
    %146 = reshape(%144, newshape=[]) /* ty=float32 */;
    %147 = reshape(%145, newshape=[3, 13, 12]) /* ty=Tensor[(3, 13, 12), float32] */;
    %148 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %149 = %148.0;
    %150 = cast(%149, dtype="int32") /* ty=Tensor[(11, 7, 12), int32] */;
    %151 = cast(%var_2007, dtype="int32") /* ty=int32 */;
    %152 = cast(%var_2007, dtype="float32") /* ty=float32 */;
    %153 = cast(%var_2008, dtype="float32") /* ty=Tensor[(468), float32] */;
    %154 = reshape(%152, newshape=[]) /* ty=float32 */;
    %155 = reshape(%153, newshape=[3, 13, 12]) /* ty=Tensor[(3, 13, 12), float32] */;
    %156 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    %157 = @func_1799(%146, %147) /* ty=Tensor[(3, 13, 12), float32] */;
    %158 = bitwise_and(%150, %151) /* ty=Tensor[(11, 7, 12), int32] */;
    %159 = @func_1799(%154, %155) /* ty=Tensor[(3, 13, 12), float32] */;
    (%156, %157, %var_2008, %158, %159)
  };
  %160(%var_2052, %var_2053) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) */
}

def @func_611(%var_609: Tensor[(240), int16]) -> (Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) {
  @func_608(%var_609) /* ty=(Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) */
}

def @func_4300(%var_4298: uint32) -> (Tensor[(13, 12, 9), float64],) {
  @func_4297(%var_4298) /* ty=(Tensor[(13, 12, 9), float64],) */
}

def @func_6102() -> (Tensor[(1470), uint32], Tensor[(11, 7, 12), int32]) {
  %165 = fn () -> (Tensor[(1470), uint32], Tensor[(11, 7, 12), int32]) {
    %161 = @func_5795() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) */;
    %162 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
    %163 = %161.1;
    %164 = %162.5;
    (%163, %164)
  };
  %165() /* ty=(Tensor[(1470), uint32], Tensor[(11, 7, 12), int32]) */
}

def @func_4478(%var_4477: Tensor[(2, 14, 13), float32]) -> (Tensor[(2, 14, 13), float32], Tensor[(11, 7, 12), float32]) {
  %169 = fn (%var_4466: Tensor[(2, 14, 13), float32]) -> (Tensor[(2, 14, 13), float32], Tensor[(11, 7, 12), float32]) {
    %166 = cast(%var_4466, dtype="float32") /* ty=Tensor[(2, 14, 13), float32] */;
    %167 = rsqrt(%166) /* ty=Tensor[(2, 14, 13), float32] */;
    %168 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
    (%167, %168)
  };
  %169(%var_4477) /* ty=(Tensor[(2, 14, 13), float32], Tensor[(11, 7, 12), float32]) */
}

def @func_1160() -> Tensor[(11, 7, 12), float32] {
  @func_1158() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_5091() -> Tensor[(10, 16, 13), bool] {
  @func_5089() /* ty=Tensor[(10, 16, 13), bool] */
}

def @func_2572() -> Tensor[(11, 7, 12), float32] {
  %170 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %170.0
}

def @func_2639() -> Tensor[(11, 7, 12), float64] {
  %172 = fn () -> Tensor[(11, 7, 12), float64] {
    %171 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %171.0
  };
  %172() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_5861() -> (Tensor[(11, 7, 12), float64], Tensor[(13, 12, 9), float64], uint32) {
  %179 = fn () -> (Tensor[(11, 7, 12), float64], Tensor[(13, 12, 9), float64], uint32) {
    %173 = @func_4525() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) */;
    %174 = cast(meta[relay.Constant][6] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %175 = reshape(%174, newshape=[]) /* ty=uint32 */;
    %176 = @func_4297(%175) /* ty=(Tensor[(13, 12, 9), float64],) */;
    %177 = %173.0;
    %178 = %176.0;
    (%177, %178, meta[relay.Constant][6] /* ty=uint32 */)
  };
  %179() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(13, 12, 9), float64], uint32) */
}

def @func_1397() -> (Tensor[(11, 7, 12), float64],) {
  %182 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %180 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %181 = %180.1;
    (%181,)
  };
  %182() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_728(%var_724: Tensor[(15, 14, 7), uint32], %var_725: Tensor[(15, 14, 7), uint32], %var_726: int16, %var_727: Tensor[(240), int16]) -> (Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) {
  %198 = fn (%var_694: Tensor[(15, 14, 7), uint32], %var_695: Tensor[(15, 14, 7), uint32], %var_705: int16, %var_706: Tensor[(240), int16]) -> (Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) {
    %183 = cast(%var_695, dtype="uint32") /* ty=Tensor[(15, 14, 7), uint32] */;
    %184 = shape_of(%var_694, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%var_694, dtype="uint32") /* ty=Tensor[(15, 14, 7), uint32] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %187 = cast(%var_705, dtype="int16") /* ty=int16 */;
    %188 = cast(%var_706, dtype="int16") /* ty=Tensor[(240), int16] */;
    %189 = reshape(%187, newshape=[]) /* ty=int16 */;
    %190 = reshape(%188, newshape=[4, 4, 15]) /* ty=Tensor[(4, 4, 15), int16] */;
    %191 = @func_155(%189, %190) /* ty=(Tensor[(4, 4, 15), int16],) */;
    %192 = %191.0;
    %193 = cast(%192, dtype="int16") /* ty=Tensor[(4, 4, 15), int16] */;
    %194 = reshape(%193, newshape=[240]) /* ty=Tensor[(240), int16] */;
    %195 = @func_608(%194) /* ty=(Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) */;
    %196 = right_shift(%185, %186) /* ty=Tensor[(15, 14, 7), uint32] */;
    %197 = %195.4;
    (%196, %192, %var_705, %var_706, %197)
  };
  %198(%var_724, %var_725, %var_726, %var_727) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */
}

def @func_6361() -> (Tensor[(11, 7, 12), float64],) {
  %203 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %199 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %200 = %199.0;
    %201 = cast(%200, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
    %202 = log(%201) /* ty=Tensor[(11, 7, 12), float64] */;
    (%202,)
  };
  %203() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_1650() -> Tensor[(11, 7, 12), float64] {
  %205 = fn () -> Tensor[(11, 7, 12), float64] {
    %204 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %204.1
  };
  %205() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_3849() -> (Tensor[(11, 7, 12), float64],) {
  %210 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %206 = @func_2882() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %207 = %206.0;
    %208 = cast(%207, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
    %209 = acos(%208) /* ty=Tensor[(11, 7, 12), float64] */;
    (%209,)
  };
  %210() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_6839() -> (Tensor[(11, 7, 12), float32],) {
  %213 = fn () -> (Tensor[(11, 7, 12), float32],) {
    %211 = @func_2167() /* ty=(Tensor[(11, 7, 12), float32],) */;
    %212 = %211.0;
    (%212,)
  };
  %213() /* ty=(Tensor[(11, 7, 12), float32],) */
}

def @func_3509() -> Tensor[(11, 7, 12), float32] {
  @func_3507() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_7241() -> (Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) {
  @func_7239() /* ty=(Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) */
}

def @func_4144(%var_4142: int16, %var_4143: Tensor[(16, 11, 8), int16]) -> (Tensor[(16, 11, 8), int16],) {
  %217 = fn (%var_4136: int16, %var_4137: Tensor[(16, 11, 8), int16]) -> (Tensor[(16, 11, 8), int16],) {
    %214 = cast(%var_4136, dtype="int16") /* ty=int16 */;
    %215 = cast(%var_4137, dtype="int16") /* ty=Tensor[(16, 11, 8), int16] */;
    %216 = left_shift(%214, %215) /* ty=Tensor[(16, 11, 8), int16] */;
    (%216,)
  };
  %217(%var_4142, %var_4143) /* ty=(Tensor[(16, 11, 8), int16],) */
}

def @func_1755() -> Tensor[(11, 7, 12), uint8] {
  @func_1753() /* ty=Tensor[(11, 7, 12), uint8] */
}

def @func_6170() -> (Tensor[(11, 7, 12), float64], int16, Tensor[(60), uint64], int16, Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) {
  @func_6168() /* ty=(Tensor[(11, 7, 12), float64], int16, Tensor[(60), uint64], int16, Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) */
}

def @func_5739() -> (Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) {
  %223 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) {
    %218 = @func_4976() /* ty=Tensor[(11, 7, 12), uint8] */;
    %219 = cast(%218, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
    %220 = @func_4164() /* ty=(Tensor[(10, 16, 13), int8],) */;
    %221 = erf(%219) /* ty=Tensor[(11, 7, 12), float32] */;
    %222 = %220.0;
    (%221, %222)
  };
  %223() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) */
}

def @func_4327() -> Tensor[(1470), uint32] {
  %224 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
  %224.0
}

def @func_6934(%var_6887: Tensor[(1470), uint32], %var_6928: Tensor[(8, 30), int16]) -> (Tensor[(240), int16], Tensor[(1470), uint32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), int8], Tensor[(11, 1, 7), float32], Tensor[(11, 7), float32], Tensor[(8, 30), bool]) {
  %225 = cast(%var_6887, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %226 = cast(%var_6887, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %227 = cast(meta[relay.Constant][7] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %228 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 30), int16] */, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %229 = reshape(%225, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %230 = reshape(%226, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %231 = reshape(%227, newshape=[]) /* ty=int16 */;
  %232 = reshape(%228, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %233 = @func_723(%229, %230, %231, %232) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
  %234 = @func_4691() /* ty=(Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), float32]) */;
  %235 = %234.1;
  %236 = cast(%235, dtype="uint16") /* ty=Tensor[(11, 7, 12), uint16] */;
  %237 = cast(meta[relay.Constant][7] /* ty=int16 */, dtype="uint16") /* ty=uint16 */;
  %238 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
  %239 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %240 = reshape(%239, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), float32] */;
  %241 = @func_6316(%240) /* ty=(Tensor[(11, 1, 7), float32],) */;
  %242 = cast(%var_6928, dtype="bool") /* ty=Tensor[(8, 30), bool] */;
  %243 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %244 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 30), int16] */, dtype="bool") /* ty=Tensor[(8, 30), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %246 = %233.3;
  %247 = left_shift(%236, %237) /* ty=Tensor[(11, 7, 12), uint16] */;
  %248 = %238.1;
  %249 = %241.0;
  %250 = equal(%244, %245) /* ty=Tensor[(8, 30), bool] */;
  (%246, %var_6887, %247, %248, %249, meta[relay.Constant][9] /* ty=Tensor[(11, 7), float32] */, %250)
}

def @func_3929(%var_3925: Tensor[(3, 16, 14), uint64], %var_3926: Tensor[(3, 16, 14), uint64], %var_3927: Tensor[(3, 16, 14), bool], %var_3928: Tensor[(1024), float32]) -> (Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(3, 16, 14), bool], Tensor[(11, 7, 12), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float32]) {
  @func_3923(%var_3925, %var_3926, %var_3927, %var_3928) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(3, 16, 14), bool], Tensor[(11, 7, 12), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float32]) */
}

def @func_1109() -> Tensor[(11, 7, 12), float32] {
  %251 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %251.0
}

def @func_1606() -> (Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) {
  %269 = fn () -> (Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) {
    %252 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    %253 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %254 = %253.0;
    %255 = cast(%254, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
    %256 = reshape(%255, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
    %257 = @func_1206(%256) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
    %258 = %257.2;
    %259 = cast(%258, dtype="uint16") /* ty=Tensor[(11, 7, 12), uint16] */;
    %260 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(%252, dtype="uint16") /* ty=Tensor[(11, 7, 12), uint16] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %263 = cast(%254, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
    %264 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
    %265 = cast(%258, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
    %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %267 = minimum(%261, %262) /* ty=Tensor[(11, 7, 12), uint16] */;
    %268 = bitwise_xor(%265, %266) /* ty=Tensor[(11, 7, 12), uint8] */;
    (%267, %268)
  };
  %269() /* ty=(Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) */
}

def @func_6873(%var_6870: Tensor[(1040), int64], %var_6871: float32) -> (Tensor[(11, 7, 12), float32], Tensor[(1040), int64], Tensor[(1040), int64], float32) {
  %270 = @func_2768() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %271 = cast(%var_6870, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %272 = cast(%var_6871, dtype="float32") /* ty=float32 */;
  %273 = reshape(%271, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %274 = reshape(%272, newshape=[]) /* ty=float32 */;
  %275 = @func_5237(%273, %274) /* ty=(Tensor[(10, 16, 13), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(468), float32], Tensor[(1040), int64], float32, Tensor[(1470), bool]) */;
  %276 = %270.1;
  %277 = %275.6;
  (%276, %277, %var_6870, %var_6871)
}

def @func_6849() -> float32 {
  @func_6847() /* ty=float32 */
}

def @func_4600() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) {
  %278 = cast(-1.49098f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %279 = cast(meta[relay.Constant][10] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %280 = reshape(%278, newshape=[]) /* ty=float32 */;
  %281 = reshape(%279, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %282 = @func_2051(%280, %281) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) */;
  %283 = %282.0;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %285 = reshape(%284, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float64] */;
  %286 = @func_954(%285) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) */;
  %287 = cast(-1.49098f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %288 = cast(meta[relay.Constant][10] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %289 = reshape(%287, newshape=[]) /* ty=float32 */;
  %290 = reshape(%288, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %291 = @func_2051(%289, %290) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(3, 13, 12), float32], Tensor[(468), float32], Tensor[(11, 7, 12), int32], Tensor[(3, 13, 12), float32]) */;
  %292 = @func_1649() /* ty=Tensor[(11, 7, 12), float64] */;
  %293 = %286.2;
  %294 = %291.3;
  (%292, %283, -1.49098f /* ty=float32 */, meta[relay.Constant][10] /* ty=Tensor[(468), float32] */, %293, %294)
}

def @func_4359() -> Tensor[(11, 7, 12), uint8] {
  %296 = fn () -> Tensor[(11, 7, 12), uint8] {
    %295 = @func_1605() /* ty=(Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) */;
    %295.1
  };
  %296() /* ty=Tensor[(11, 7, 12), uint8] */
}

def @func_4165() -> (Tensor[(10, 16, 13), int8],) {
  %299 = fn () -> (Tensor[(10, 16, 13), int8],) {
    %297 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
    %298 = %297.0;
    (%298,)
  };
  %299() /* ty=(Tensor[(10, 16, 13), int8],) */
}

def @main(%var_7285: Tensor[(11, 7, 12), float64]) -> Tensor[(11, 7, 12), bool] {
  %300 = @func_4602() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %301 = %300.4;
  %302 = cast(%var_7285, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%304, %305) /* ty=Tensor[(11, 7, 12), bool] */
}

def @func_3673() -> Tensor[(7, 9, 16), float32] {
  %314 = fn () -> Tensor[(7, 9, 16), float32] {
    %306 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 16), float64] */;
    %307 = asinh(%306) /* ty=Tensor[(7, 9, 16), float64] */;
    %308 = cast(%307, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
    %309 = log2(%308) /* ty=Tensor[(7, 9, 16), float32] */;
    %310 = cast(%307, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
    %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%309, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%312, %313) /* ty=Tensor[(7, 9, 16), float32] */
  };
  %314() /* ty=Tensor[(7, 9, 16), float32] */
}

def @func_2866(%var_2864: Tensor[(14, 16, 15), float64], %var_2865: Tensor[(14, 16, 15), float64]) -> (Tensor[(14, 16, 15), bool],) {
  @func_2862(%var_2864, %var_2865) /* ty=(Tensor[(14, 16, 15), bool],) */
}

def @func_6033(%var_6032: Tensor[(8, 3, 16), float32]) -> (Tensor[(8, 3, 16), float32],) {
  %317 = fn (%var_6026: Tensor[(8, 3, 16), float32]) -> (Tensor[(8, 3, 16), float32],) {
    %315 = cast(%var_6026, dtype="float32") /* ty=Tensor[(8, 3, 16), float32] */;
    %316 = log10(%315) /* ty=Tensor[(8, 3, 16), float32] */;
    (%316,)
  };
  %317(%var_6032) /* ty=(Tensor[(8, 3, 16), float32],) */
}

def @func_3412() -> (Tensor[(11, 7, 12), float64],) {
  %320 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %318 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %319 = %318.0;
    (%319,)
  };
  %320() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_1518(%var_1516: Tensor[(15, 6, 5), float32], %var_1517: Tensor[(924), float32]) -> (Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(15, 6, 5), float32], Tensor[(11, 7, 12), float32]) {
  %336 = fn (%var_1480: Tensor[(15, 6, 5), float32], %var_1494: Tensor[(924), float32]) -> (Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(15, 6, 5), float32], Tensor[(11, 7, 12), float32]) {
    %321 = cast(%var_1494, dtype="float32") /* ty=Tensor[(924), float32] */;
    %322 = reshape(%321, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
    %323 = @func_1206(%322) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
    %324 = cast(%var_1480, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
    %325 = asinh(%324) /* ty=Tensor[(15, 6, 5), float32] */;
    %326 = cast(%325, dtype="uint16") /* ty=Tensor[(15, 6, 5), uint16] */;
    %327 = shape_of(%var_1480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %328 = cast(%var_1480, dtype="uint16") /* ty=Tensor[(15, 6, 5), uint16] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %330 = minimum(%328, %329) /* ty=Tensor[(15, 6, 5), uint16] */;
    %331 = cast(%330, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
    %332 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %333 = %323.2;
    %334 = erf(%331) /* ty=Tensor[(15, 6, 5), float32] */;
    %335 = %332.1;
    (%333, %var_1494, %334, %335)
  };
  %336(%var_1516, %var_1517) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(15, 6, 5), float32], Tensor[(11, 7, 12), float32]) */
}

def @func_1158() -> Tensor[(11, 7, 12), float32] {
  @func_1109() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_2883() -> (Tensor[(11, 7, 12), float64],) {
  %339 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %337 = @func_1268() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %338 = %337.0;
    (%338,)
  };
  %339() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_5241(%var_5239: Tensor[(1040), int64], %var_5240: float32) -> (Tensor[(10, 16, 13), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(468), float32], Tensor[(1040), int64], float32, Tensor[(1470), bool]) {
  @func_5237(%var_5239, %var_5240) /* ty=(Tensor[(10, 16, 13), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(468), float32], Tensor[(1040), int64], float32, Tensor[(1470), bool]) */
}

def @func_6168() -> (Tensor[(11, 7, 12), float64], int16, Tensor[(60), uint64], int16, Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) {
  %340 = @func_5795() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) */;
  %341 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %342 = cast(meta[relay.Constant][13] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %343 = reshape(%341, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %344 = reshape(%342, newshape=[]) /* ty=int16 */;
  %345 = @func_5338(%343, %344) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1, 1470), uint32], Tensor[(1470), float32], Tensor[(1, 2, 2), float64], Tensor[(4, 1), uint64], Tensor[(60), uint64], int16) */;
  %346 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 14), float32] */;
  %347 = cosh(%346) /* ty=Tensor[(5, 8, 14), float32] */;
  %348 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 8, 14), float32] */, dtype="bool") /* ty=Tensor[(5, 8, 14), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(5, 8, 14), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %353 = %340.0;
  %354 = %345.6;
  %355 = less(%350, %351) /* ty=Tensor[(5, 8, 14), bool] */;
  %356 = %352.4;
  (%353, %354, meta[relay.Constant][12] /* ty=Tensor[(60), uint64] */, meta[relay.Constant][13] /* ty=int16 */, %355, %356)
}

def @func_2201() -> (Tensor[(11, 7, 12), float64],) {
  %359 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %357 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %358 = %357.0;
    (%358,)
  };
  %359() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_1373() -> (Tensor[(11, 7, 12), float32],) {
  %362 = fn () -> (Tensor[(11, 7, 12), float32],) {
    %360 = @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %361 = %360.0;
    (%361,)
  };
  %362() /* ty=(Tensor[(11, 7, 12), float32],) */
}

def @func_2804() -> (Tensor[(10, 16, 13), int8],) {
  %363 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 16, 13), int8] */, dtype="int8") /* ty=Tensor[(10, 16, 13), int8] */;
  %364 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(10, 16, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 16, 13), int8] */, dtype="int8") /* ty=Tensor[(10, 16, 13), int8] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %367 = maximum(%365, %366) /* ty=Tensor[(10, 16, 13), int8] */;
  (%367,)
}

def @func_2310() -> (Tensor[(11, 7, 12), float64],) {
  @func_2308() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_956(%var_955: Tensor[(11, 7, 12), float64]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) {
  %379 = fn (%var_935: Tensor[(11, 7, 12), float64]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) {
    %368 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %369 = %368.1;
    %370 = cast(%369, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
    %371 = cast(%var_935, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
    %372 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %373 = cast(%369, dtype="uint8") /* ty=Tensor[(11, 7, 12), uint8] */;
    %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %375 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %376 = acosh(%370) /* ty=Tensor[(11, 7, 12), float64] */;
    %377 = bitwise_or(%373, %374) /* ty=Tensor[(11, 7, 12), uint8] */;
    %378 = %375.1;
    (%376, %377, %378)
  };
  %379(%var_955) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64]) */
}

def @func_1290(%var_1289: Tensor[(240), int16]) -> (Tensor[(11, 7, 12), float32], Tensor[(1, 2, 1), uint16], Tensor[(240), int16]) {
  %385 = fn (%var_1286: Tensor[(240), int16]) -> (Tensor[(11, 7, 12), float32], Tensor[(1, 2, 1), uint16], Tensor[(240), int16]) {
    %380 = cast(%var_1286, dtype="int16") /* ty=Tensor[(240), int16] */;
    %381 = reshape(%380, newshape=[240]) /* ty=Tensor[(240), int16] */;
    %382 = @func_608(%381) /* ty=(Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) */;
    %383 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
    %384 = %382.1;
    (%383, %384, %var_1286)
  };
  %385(%var_1289) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(1, 2, 1), uint16], Tensor[(240), int16]) */
}

def @func_2574() -> Tensor[(11, 7, 12), float32] {
  @func_2572() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_2703() -> Tensor[(1470), uint32] {
  %387 = fn () -> Tensor[(1470), uint32] {
    %386 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
    %386.0
  };
  %387() /* ty=Tensor[(1470), uint32] */
}

def @func_6601(%var_6597: Tensor[(1040), int64], %var_6598: float32, %var_6599: Tensor[(98, 15), uint32], %var_6600: Tensor[(1040), int64]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(468), float32], float32, Tensor[(11, 7, 12), float32], Tensor[(1470), uint32], Tensor[(4), uint64], Tensor[(60), uint64], Tensor[(98, 15), uint32], Tensor[(1040), int8]) {
  @func_6595(%var_6597, %var_6598, %var_6599, %var_6600) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(468), float32], float32, Tensor[(11, 7, 12), float32], Tensor[(1470), uint32], Tensor[(4), uint64], Tensor[(60), uint64], Tensor[(98, 15), uint32], Tensor[(1040), int8]) */
}

def @func_5070(%var_5068: Tensor[(3, 16, 7), float32]) -> (Tensor[(3, 16, 7), float64], Tensor[(11, 7, 12), float64], Tensor[(3, 16, 7), float32]) {
  @func_5067(%var_5068) /* ty=(Tensor[(3, 16, 7), float64], Tensor[(11, 7, 12), float64], Tensor[(3, 16, 7), float32]) */
}

def @func_5237(%var_5227: Tensor[(1040), int64], %var_5228: float32) -> (Tensor[(10, 16, 13), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), uint8], Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(468), float32], Tensor[(1040), int64], float32, Tensor[(1470), bool]) {
  %388 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %389 = @func_2237() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) */;
  %390 = %389.2;
  %391 = cast(%390, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %392 = reshape(%391, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %393 = @func_1082(%392) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) */;
  %394 = cast(%var_5227, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %395 = cast(%var_5227, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %396 = cast(%var_5228, dtype="float32") /* ty=float32 */;
  %397 = reshape(%394, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %398 = reshape(%395, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %399 = reshape(%396, newshape=[]) /* ty=float32 */;
  %400 = @func_2131(%397, %398, %399) /* ty=(Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) */;
  %401 = cast(%390, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %402 = sigmoid(%401) /* ty=Tensor[(1470), float64] */;
  %403 = cast(%390, dtype="uint16") /* ty=Tensor[(1470), uint16] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(1), int32] */;
  %405 = cast(%402, dtype="uint16") /* ty=Tensor[(1470), uint16] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %407 = left_shift(%405, %406) /* ty=Tensor[(1470), uint16] */;
  %408 = cast(meta[relay.Constant][17] /* ty=Tensor[(1470), uint16] */, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(1), int32] */;
  %410 = cast(%407, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?), bool] */;
  %412 = @func_5089() /* ty=Tensor[(10, 16, 13), bool] */;
  %413 = %388.0;
  %414 = @func_1753() /* ty=Tensor[(11, 7, 12), uint8] */;
  %415 = @func_2872() /* ty=Tensor[(11, 7, 12), float64] */;
  %416 = %393.2;
  %417 = %400.3;
  %418 = equal(%410, %411) /* ty=Tensor[(1470), bool] */;
  (%412, %413, %414, %415, %416, %417, %var_5227, %var_5228, %418)
}

def @func_5521() -> Tensor[(11, 7, 12), float32] {
  @func_5519() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_2806() -> (Tensor[(10, 16, 13), int8],) {
  @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */
}

def @func_6122() -> Tensor[(11, 7, 12), float64] {
  %420 = fn () -> Tensor[(11, 7, 12), float64] {
    %419 = @func_3848() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %419.0
  };
  %420() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_5699() -> Tensor[(11, 7, 12), float32] {
  @func_5697() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_5572(%var_5570: Tensor[(10, 16, 13), bool]) -> Tensor[(10, 16, 13), bool] {
  @func_5569(%var_5570) /* ty=Tensor[(10, 16, 13), bool] */
}

def @func_2661() -> (Tensor[(1470), uint32],) {
  @func_2659() /* ty=(Tensor[(1470), uint32],) */
}

def @func_5366() -> (Tensor[(11, 7, 12), float32], Tensor[(10, 16, 13), int8]) {
  %421 = @func_2768() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %422 = @func_4164() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %423 = %421.1;
  %424 = %422.0;
  (%423, %424)
}

def @func_4950(%var_4946: Tensor[(1, 2, 2), uint64], %var_4947: Tensor[(15, 2, 2), uint64], %var_4948: Tensor[(1470), uint32], %var_4949: int16) -> (Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) {
  %455 = fn (%var_4891: Tensor[(1, 2, 2), uint64], %var_4892: Tensor[(15, 2, 2), uint64], %var_4918: Tensor[(1470), uint32], %var_4919: int16) -> (Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) {
    %425 = cast(%var_4891, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
    %426 = cast(%var_4892, dtype="bool") /* ty=Tensor[(15, 2, 2), bool] */;
    %427 = cast(%var_4918, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
    %428 = cast(%var_4918, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
    %429 = cast(%var_4919, dtype="int16") /* ty=int16 */;
    %430 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 30), int16] */, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
    %431 = reshape(%427, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
    %432 = reshape(%428, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
    %433 = reshape(%429, newshape=[]) /* ty=int16 */;
    %434 = reshape(%430, newshape=[240]) /* ty=Tensor[(240), int16] */;
    %435 = @func_723(%431, %432, %433, %434) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
    %436 = cast(%var_4891, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
    %437 = asinh(%436) /* ty=Tensor[(1, 2, 2), float32] */;
    %438 = cast(%437, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
    %439 = sqrt(%438) /* ty=Tensor[(1, 2, 2), float64] */;
    %440 = cast(%439, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
    %441 = cast(%437, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
    %442 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
    %443 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %444 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 30), int16] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %446 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %447 = cast(%439, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
    %448 = less(%425, %426) /* ty=Tensor[(15, 2, 2), bool] */;
    %449 = %435.0;
    %450 = sigmoid(%440) /* ty=Tensor[(1, 2, 2), float64] */;
    %451 = erf(%441) /* ty=Tensor[(1, 2, 2), float64] */;
    %452 = logical_xor(%444, %445) /* ty=Tensor[(8, 30), int32] */;
    %453 = %446.0;
    %454 = cos(%447) /* ty=Tensor[(1, 2, 2), float64] */;
    (%448, %449, %var_4918, %var_4919, %450, %451, %452, %453, %454)
  };
  %455(%var_4946, %var_4947, %var_4948, %var_4949) /* ty=(Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) */
}

def @func_7189(%var_7187: Tensor[(48, 8), float32], %var_7188: Tensor[(338), int32]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float32], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float64], Tensor[(8, 3, 16), bool], Tensor[(11, 7, 12), float32], Tensor[(338), int32], Tensor[(13, 2, 13), uint8], Tensor[(11, 7, 12), float64], Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), int8], Tensor[(450), float32]) {
  %505 = fn (%var_7121: Tensor[(48, 8), float32], %var_7149: Tensor[(338), int32]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float32], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float64], Tensor[(8, 3, 16), bool], Tensor[(11, 7, 12), float32], Tensor[(338), int32], Tensor[(13, 2, 13), uint8], Tensor[(11, 7, 12), float64], Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), int8], Tensor[(450), float32]) {
    %456 = @func_6411() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %457 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %458 = @func_3672() /* ty=Tensor[(7, 9, 16), float32] */;
    %459 = cast(%458, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
    %460 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %461 = cast(%458, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
    %462 = sigmoid(%461) /* ty=Tensor[(7, 9, 16), float32] */;
    %463 = cast(%458, dtype="int32") /* ty=Tensor[(7, 9, 16), int32] */;
    %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
    %465 = cast(%462, dtype="int32") /* ty=Tensor[(7, 9, 16), int32] */;
    %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %467 = bitwise_or(%465, %466) /* ty=Tensor[(7, 9, 16), int32] */;
    %468 = cast(%467, dtype="float32") /* ty=Tensor[(7, 9, 16), float32] */;
    %469 = @func_3848() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %470 = cast(%var_7121, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
    %471 = reshape(%470, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
    %472 = @func_6031(%471) /* ty=(Tensor[(8, 3, 16), float32],) */;
    %473 = %472.0;
    %474 = cast(%var_7121, dtype="bool") /* ty=Tensor[(48, 8), bool] */;
    %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%473, dtype="bool") /* ty=Tensor[(8, 3, 16), bool] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %478 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
    %479 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
    %480 = reshape(%478, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
    %481 = reshape(%479, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
    %482 = @func_2498(%480, %481) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) */;
    %483 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
    %484 = cast(%var_7149, dtype="int32") /* ty=Tensor[(338), int32] */;
    %485 = reshape(%483, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
    %486 = reshape(%484, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), int32] */;
    %487 = @func_2498(%485, %486) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) */;
    %488 = @func_6732() /* ty=(Tensor[(3, 13, 12), int8], Tensor[(672), uint64], Tensor[(1024), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), float64]) */;
    %489 = @func_4164() /* ty=(Tensor[(10, 16, 13), int8],) */;
    %490 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %491 = reshape(%490, newshape=[450, 1]) /* ty=Tensor[(450, 1), float32] */;
    %492 = @func_2926(%491) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool], Tensor[(450, 1), float32]) */;
    %493 = %456.0;
    %494 = %457.0;
    %495 = log10(%459) /* ty=Tensor[(7, 9, 16), float32] */;
    %496 = %460.0;
    %497 = log(%468) /* ty=Tensor[(7, 9, 16), float32] */;
    %498 = %469.0;
    %499 = logical_or(%476, %477) /* ty=Tensor[(8, 3, 16), bool] */;
    %500 = %482.0;
    %501 = %487.1;
    %502 = %488.4;
    %503 = %489.0;
    %504 = %492.1;
    (%493, %494, %495, %496, %497, %498, %499, %500, %var_7149, %501, %502, %503, %504, meta[relay.Constant][20] /* ty=Tensor[(450), float32] */)
  };
  %505(%var_7187, %var_7188) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float32], Tensor[(7, 9, 16), float32], Tensor[(11, 7, 12), float64], Tensor[(8, 3, 16), bool], Tensor[(11, 7, 12), float32], Tensor[(338), int32], Tensor[(13, 2, 13), uint8], Tensor[(11, 7, 12), float64], Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), int8], Tensor[(450), float32]) */
}

def @func_5067(%var_5019: Tensor[(3, 16, 7), float32]) -> (Tensor[(3, 16, 7), float64], Tensor[(11, 7, 12), float64], Tensor[(3, 16, 7), float32]) {
  %506 = cast(%var_5019, dtype="float64") /* ty=Tensor[(3, 16, 7), float64] */;
  %507 = @func_4818() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64]) */;
  %508 = cast(%var_5019, dtype="float32") /* ty=Tensor[(3, 16, 7), float32] */;
  %509 = atan(%508) /* ty=Tensor[(3, 16, 7), float32] */;
  %510 = cast(%509, dtype="float32") /* ty=Tensor[(3, 16, 7), float32] */;
  %511 = sinh(%506) /* ty=Tensor[(3, 16, 7), float64] */;
  %512 = %507.0;
  %513 = cos(%510) /* ty=Tensor[(3, 16, 7), float32] */;
  (%511, %512, %513)
}

def @func_6238() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %516 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
    %514 = @func_3303() /* ty=Tensor[(11, 7, 12), float32] */;
    %515 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    (%514, %515)
  };
  %516() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */
}

def @func_6412() -> (Tensor[(11, 7, 12), float64],) {
  %519 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %517 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %518 = %517.0;
    (%518,)
  };
  %519() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_6877(%var_6875: Tensor[(1040), int64], %var_6876: float32) -> (Tensor[(11, 7, 12), float32], Tensor[(1040), int64], Tensor[(1040), int64], float32) {
  @func_6873(%var_6875, %var_6876) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(1040), int64], Tensor[(1040), int64], float32) */
}

def @func_1111() -> Tensor[(11, 7, 12), float32] {
  @func_1109() /* ty=Tensor[(11, 7, 12), float32] */
}

def @func_4692() -> (Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), float32]) {
  %524 = fn () -> (Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), float32]) {
    %520 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
    %521 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
    %522 = %520.0;
    %523 = %521.0;
    (%522, %523)
  };
  %524() /* ty=(Tensor[(10, 16, 13), int8], Tensor[(11, 7, 12), float32]) */
}

def @func_7239() -> (Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) {
  %525 = @func_6168() /* ty=(Tensor[(11, 7, 12), float64], int16, Tensor[(60), uint64], int16, Tensor[(5, 8, 14), bool], Tensor[(11, 7, 12), float64]) */;
  %526 = @func_2308() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %527 = %525.4;
  %528 = %526.0;
  (%527, %528)
}

def @func_1753() -> Tensor[(11, 7, 12), uint8] {
  %529 = @func_1605() /* ty=(Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), uint8]) */;
  %529.1
}

def @func_4526() -> (Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) {
  %536 = fn () -> (Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) {
    %530 = @func_3411() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %531 = cast(meta[relay.Constant][21] /* ty=Tensor[(1024), float32] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
    %532 = reshape(%531, newshape=[512, 2]) /* ty=Tensor[(512, 2), float32] */;
    %533 = @func_3563(%532) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) */;
    %534 = %530.0;
    %535 = %533.5;
    (%534, %535, meta[relay.Constant][21] /* ty=Tensor[(1024), float32] */)
  };
  %536() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) */
}

def @func_1237() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %539 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
    %537 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    %538 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
    (%537, %538)
  };
  %539() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */
}

def @func_2237() -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) {
  %540 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %541 = %540.1;
  %542 = cast(%541, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %543 = cast(meta[relay.Constant][22] /* ty=Tensor[(1470), uint32] */, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %544 = reshape(%543, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %545 = @func_1082(%544) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(120, 2), int16]) */;
  %546 = cast(%541, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %547 = asinh(%542) /* ty=Tensor[(11, 7, 12), float64] */;
  %548 = %545.2;
  %549 = log2(%546) /* ty=Tensor[(11, 7, 12), float32] */;
  (%547, %548, meta[relay.Constant][22] /* ty=Tensor[(1470), uint32] */, %549)
}

def @func_888() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */
}

def @func_3283(%var_3282: float32) -> (Tensor[(11, 7, 12), int8], Tensor[(3, 13, 12), float32], float32, Tensor[(468), float32]) {
  %562 = fn (%var_3258: float32) -> (Tensor[(11, 7, 12), int8], Tensor[(3, 13, 12), float32], float32, Tensor[(468), float32]) {
    %550 = @func_2882() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %551 = %550.0;
    %552 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 7, 12), float64] */, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
    %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(%551, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %556 = cast(%var_3258, dtype="float32") /* ty=float32 */;
    %557 = cast(meta[relay.Constant][24] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
    %558 = reshape(%556, newshape=[]) /* ty=float32 */;
    %559 = reshape(%557, newshape=[3, 13, 12]) /* ty=Tensor[(3, 13, 12), float32] */;
    %560 = right_shift(%554, %555) /* ty=Tensor[(11, 7, 12), int8] */;
    %561 = @func_1799(%558, %559) /* ty=Tensor[(3, 13, 12), float32] */;
    (%560, %561, %var_3258, meta[relay.Constant][24] /* ty=Tensor[(468), float32] */)
  };
  %562(%var_3282) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(3, 13, 12), float32], float32, Tensor[(468), float32]) */
}

def @func_1445(%var_1431: Tensor[(11, 7, 12), float32]) -> (Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) {
  %563 = cast(%var_1431, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
  %564 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(11, 7, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 7, 12), float32] */, dtype="int8") /* ty=Tensor[(11, 7, 12), int8] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %567 = @func_1372() /* ty=(Tensor[(11, 7, 12), float32],) */;
  %568 = %567.0;
  %569 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 7, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%568, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %573 = subtract(%571, %572) /* ty=Tensor[(11, 7, 12), float32] */;
  %574 = cast(%568, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %578 = logical_xor(%565, %566) /* ty=Tensor[(11, 7, 12), int8] */;
  %579 = greater_equal(%576, %577) /* ty=Tensor[(11, 7, 12), bool] */;
  (%578, %579)
}

def @func_1343(%var_1336: Tensor[(11, 7, 12), float32]) -> Tensor[(11, 7, 12), bool] {
  %580 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
  %581 = cast(%var_1336, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%583, %584) /* ty=Tensor[(11, 7, 12), bool] */
}

def @func_2369() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) {
  %591 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) {
    %585 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    %586 = cast(%585, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
    %587 = reshape(%586, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
    %588 = @func_1445(%587) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) */;
    %589 = %588.0;
    %590 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    (%585, %589, %590)
  };
  %591() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */
}

def @func_3565(%var_3564: Tensor[(512, 2), float32]) -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) {
  %611 = fn (%var_3547: Tensor[(512, 2), float32]) -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) {
    %592 = cast(meta[relay.Constant][26] /* ty=Tensor[(512, 2), float32] */, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
    %593 = reshape(%592, newshape=[8, 16, 8]) /* ty=Tensor[(8, 16, 8), float32] */;
    %594 = @func_2453(%593) /* ty=(Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) */;
    %595 = @func_1627() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %596 = cast(%var_3547, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
    %597 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(512, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %598 = cast(meta[relay.Constant][26] /* ty=Tensor[(512, 2), float32] */, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %600 = cast(meta[relay.Constant][27] /* ty=Tensor[(512, 2), float32] */, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
    %601 = shape_of(%var_3547, dtype="int32") /* ty=Tensor[(2), int32] */;
    %602 = cast(%var_3547, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
    %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %604 = @func_2638() /* ty=Tensor[(11, 7, 12), float64] */;
    %605 = @func_2702() /* ty=Tensor[(1470), uint32] */;
    %606 = %594.0;
    %607 = @func_3507() /* ty=Tensor[(11, 7, 12), float32] */;
    %608 = %595.0;
    %609 = logical_and(%598, %599) /* ty=Tensor[(512, 2), bool] */;
    %610 = logical_or(%602, %603) /* ty=Tensor[(512, 2), bool] */;
    (%604, %605, %606, %607, %608, %609, %610)
  };
  %611(%var_3564) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) */
}

def @func_1627() -> (Tensor[(11, 7, 12), float64],) {
  %612 = @func_1268() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %613 = %612.0;
  (%613,)
}

def @func_1567() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) {
  @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */
}

def @func_3366(%var_3308: Tensor[(13, 2, 7), float64], %var_3312: Tensor[(1024), float32], %var_3324: Tensor[(13, 2, 7), float64]) -> (Tensor[(8, 16, 8), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float64], Tensor[(13, 2, 7), float32], Tensor[(10, 16, 13), int8]) {
  %614 = cast(%var_3312, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %615 = reshape(%614, newshape=[8, 16, 8]) /* ty=Tensor[(8, 16, 8), float32] */;
  %616 = @func_2453(%615) /* ty=(Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) */;
  %617 = @func_2882() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %618 = cast(%var_3308, dtype="float64") /* ty=Tensor[(13, 2, 7), float64] */;
  %619 = cos(%618) /* ty=Tensor[(13, 2, 7), float64] */;
  %620 = cast(%var_3324, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%619, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %624 = floor_mod(%622, %623) /* ty=Tensor[(13, 2, 7), float32] */;
  %625 = cast(%var_3308, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%624, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %629 = @func_2804() /* ty=(Tensor[(10, 16, 13), int8],) */;
  %630 = %616.1;
  %631 = %617.0;
  %632 = floor_divide(%627, %628) /* ty=Tensor[(13, 2, 7), float32] */;
  %633 = %629.0;
  (%630, %var_3312, %631, %632, %633)
}

def @func_3757() -> (Tensor[(1470), uint32],) {
  %634 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
  %635 = %634.0;
  (%635,)
}

def @func_2873() -> Tensor[(11, 7, 12), float64] {
  %636 = fn () -> Tensor[(11, 7, 12), float64] {
    @func_2638() /* ty=Tensor[(11, 7, 12), float64] */
  };
  %636() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_2862(%var_2843: Tensor[(14, 16, 15), float64], %var_2844: Tensor[(14, 16, 15), float64]) -> (Tensor[(14, 16, 15), bool],) {
  %637 = cast(%var_2844, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %638 = shape_of(%var_2843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%var_2843, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %641 = power(%639, %640) /* ty=Tensor[(14, 16, 15), float64] */;
  %642 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 16, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%641, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %646 = equal(%644, %645) /* ty=Tensor[(14, 16, 15), bool] */;
  (%646,)
}

def @func_1269() -> (Tensor[(11, 7, 12), float64],) {
  %651 = fn () -> (Tensor[(11, 7, 12), float64],) {
    %647 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %648 = %647.0;
    %649 = cast(%648, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
    %650 = cosh(%649) /* ty=Tensor[(11, 7, 12), float64] */;
    (%650,)
  };
  %651() /* ty=(Tensor[(11, 7, 12), float64],) */
}

def @func_5620() -> (Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float32]) {
  %656 = fn () -> (Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float32]) {
    %652 = @func_4226() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) */;
    %653 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
    %654 = %652.1;
    %655 = %653.0;
    (%654, %655)
  };
  %656() /* ty=(Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float32]) */
}

def @func_3784(%var_3782: Tensor[(5, 10, 4), float64], %var_3783: Tensor[(1470), uint32]) -> (Tensor[(5, 10, 4), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(240), int16]) {
  @func_3780(%var_3782, %var_3783) /* ty=(Tensor[(5, 10, 4), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(240), int16]) */
}

def @func_4818() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64]) {
  %657 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %658 = @func_4600() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], float32, Tensor[(468), float32], Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), int32]) */;
  %659 = %658.4;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %661 = cos(%660) /* ty=Tensor[(11, 7, 12), float64] */;
  %662 = cast(%659, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%661, dtype="float64") /* ty=Tensor[(11, 7, 12), float64] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %666 = %657.0;
  %667 = divide(%664, %665) /* ty=Tensor[(11, 7, 12), float64] */;
  (%666, %667)
}

def @func_2498(%var_2476: Tensor[(13, 2, 13), int32], %var_2477: Tensor[(13, 2, 13), int32]) -> (Tensor[(11, 7, 12), float32], Tensor[(13, 2, 13), uint8], Tensor[(13, 2, 13), float64]) {
  %668 = @func_2167() /* ty=(Tensor[(11, 7, 12), float32],) */;
  %669 = cast(%var_2477, dtype="int32") /* ty=Tensor[(13, 2, 13), int32] */;
  %670 = shape_of(%var_2476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%var_2476, dtype="int32") /* ty=Tensor[(13, 2, 13), int32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %673 = add(%671, %672) /* ty=Tensor[(13, 2, 13), int32] */;
  %674 = cast(%var_2477, dtype="uint8") /* ty=Tensor[(13, 2, 13), uint8] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%673, dtype="uint8") /* ty=Tensor[(13, 2, 13), uint8] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %678 = cast(%var_2477, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
  %679 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%673, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %682 = %668.0;
  %683 = bitwise_xor(%676, %677) /* ty=Tensor[(13, 2, 13), uint8] */;
  %684 = multiply(%680, %681) /* ty=Tensor[(13, 2, 13), float64] */;
  (%682, %683, %684)
}

def @func_1208(%var_1207: Tensor[(11, 7, 12), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) {
  %697 = fn (%var_1177: Tensor[(11, 7, 12), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) {
    %685 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    %686 = cast(%var_1177, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
    %687 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
    %688 = cast(%685, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
    %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %690 = cast(%685, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
    %691 = shape_of(%var_1177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%var_1177, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %694 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    %695 = less_equal(%688, %689) /* ty=Tensor[(11, 7, 12), bool] */;
    %696 = logical_and(%692, %693) /* ty=Tensor[(11, 7, 12), bool] */;
    (%694, %695, %696)
  };
  %697(%var_1207) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */
}

def @func_4416() -> Tensor[(11, 7, 12), float64] {
  %699 = fn () -> Tensor[(11, 7, 12), float64] {
    %698 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %698.0
  };
  %699() /* ty=Tensor[(11, 7, 12), float64] */
}

def @func_6938(%var_6936: Tensor[(1470), uint32], %var_6937: Tensor[(8, 30), int16]) -> (Tensor[(240), int16], Tensor[(1470), uint32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), int8], Tensor[(11, 1, 7), float32], Tensor[(11, 7), float32], Tensor[(8, 30), bool]) {
  @func_6934(%var_6936, %var_6937) /* ty=(Tensor[(240), int16], Tensor[(1470), uint32], Tensor[(11, 7, 12), uint16], Tensor[(11, 7, 12), int8], Tensor[(11, 1, 7), float32], Tensor[(11, 7), float32], Tensor[(8, 30), bool]) */
}

def @func_6595(%var_6562: Tensor[(1040), int64], %var_6563: float32, %var_6571: Tensor[(98, 15), uint32], %var_6584: Tensor[(1040), int64]) -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64], Tensor[(468), float32], float32, Tensor[(11, 7, 12), float32], Tensor[(1470), uint32], Tensor[(4), uint64], Tensor[(60), uint64], Tensor[(98, 15), uint32], Tensor[(1040), int8]) {
  %700 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %701 = @func_2200() /* ty=(Tensor[(11, 7, 12), float64],) */;
  %702 = cast(%var_6562, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %703 = cast(%var_6562, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %704 = cast(%var_6563, dtype="float32") /* ty=float32 */;
  %705 = reshape(%702, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %706 = reshape(%703, newshape=[13, 10, 8]) /* ty=Tensor[(13, 10, 8), int64] */;
  %707 = reshape(%704, newshape=[]) /* ty=float32 */;
  %708 = @func_2131(%705, %706, %707) /* ty=(Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) */;
  %709 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %710 = cast(meta[relay.Constant][29] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %711 = cast(meta[relay.Constant][30] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %712 = cast(%var_6571, dtype="uint32") /* ty=Tensor[(98, 15), uint32] */;
  %713 = cast(%var_6563, dtype="int16") /* ty=int16 */;
  %714 = reshape(%710, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), uint64] */;
  %715 = reshape(%711, newshape=[15, 2, 2]) /* ty=Tensor[(15, 2, 2), uint64] */;
  %716 = reshape(%712, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
  %717 = reshape(%713, newshape=[]) /* ty=int16 */;
  %718 = @func_4945(%714, %715, %716, %717) /* ty=(Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) */;
  %719 = cast(%var_6584, dtype="int8") /* ty=Tensor[(1040), int8] */;
  %720 = shape_of(%var_6562, dtype="int32") /* ty=Tensor[(1), int32] */;
  %721 = cast(%var_6562, dtype="int8") /* ty=Tensor[(1040), int8] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?), int8] */;
  %723 = %700.0;
  %724 = %701.0;
  %725 = %708.1;
  %726 = %709.0;
  %727 = %718.2;
  %728 = left_shift(%721, %722) /* ty=Tensor[(1040), int8] */;
  (%723, %724, %725, %var_6563, %726, %727, meta[relay.Constant][29] /* ty=Tensor[(4), uint64] */, meta[relay.Constant][30] /* ty=Tensor[(60), uint64] */, %var_6571, %728)
}

def @func_5519() -> Tensor[(11, 7, 12), float32] {
  %729 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %729.1
}

def @func_2136(%var_2133: Tensor[(13, 10, 8), int64], %var_2134: Tensor[(13, 10, 8), int64], %var_2135: float32) -> (Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) {
  @func_2131(%var_2133, %var_2134, %var_2135) /* ty=(Tensor[(13, 10, 8), float64], Tensor[(468), float32], float32, Tensor[(468), float32]) */
}

def @func_4820() -> (Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64]) {
  @func_4818() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float64]) */
}

def @func_3923(%var_3860: Tensor[(3, 16, 14), uint64], %var_3861: Tensor[(3, 16, 14), uint64], %var_3884: Tensor[(3, 16, 14), bool], %var_3890: Tensor[(1024), float32]) -> (Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(3, 16, 14), bool], Tensor[(11, 7, 12), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float32]) {
  %730 = cast(meta[relay.Constant][31] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %731 = reshape(%730, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
  %732 = @func_1206(%731) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), bool]) */;
  %733 = cast(%var_3861, dtype="uint64") /* ty=Tensor[(3, 16, 14), uint64] */;
  %734 = shape_of(%var_3860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%var_3860, dtype="uint64") /* ty=Tensor[(3, 16, 14), uint64] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %737 = bitwise_or(%735, %736) /* ty=Tensor[(3, 16, 14), uint64] */;
  %738 = cast(%var_3860, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %742 = greater_equal(%740, %741) /* ty=Tensor[(3, 16, 14), bool] */;
  %743 = cast(%var_3884, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%742, dtype="bool") /* ty=Tensor[(3, 16, 14), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %747 = cast(%var_3890, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %748 = reshape(%747, newshape=[512, 2]) /* ty=Tensor[(512, 2), float32] */;
  %749 = @func_3563(%748) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(8, 16, 8), bool], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(512, 2), bool]) */;
  %750 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %751 = %732.1;
  %752 = less(%745, %746) /* ty=Tensor[(3, 16, 14), bool] */;
  %753 = %749.4;
  %754 = %750.0;
  (%751, meta[relay.Constant][31] /* ty=Tensor[(924), float32] */, %752, %753, %var_3890, %754)
}

def @func_6319(%var_6317: Tensor[(11, 1, 7), float32]) -> (Tensor[(11, 1, 7), float32],) {
  @func_6316(%var_6317) /* ty=(Tensor[(11, 1, 7), float32],) */
}

def @func_608(%var_570: Tensor[(240), int16]) -> (Tensor[(1, 2, 1), float64], Tensor[(1, 2, 1), uint16], Tensor[(240), int16], Tensor[(4, 4, 15), float64], Tensor[(4, 4, 15), int16]) {
  %755 = cast(-5.43349f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %756 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 1), float64] */;
  %757 = cast(-5.43349f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
  %758 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 2, 1), float64] */, dtype="uint16") /* ty=Tensor[(1, 2, 1), uint16] */;
  %759 = cast(-5.43349f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
  %760 = cast(%var_570, dtype="int16") /* ty=Tensor[(240), int16] */;
  %761 = reshape(%759, newshape=[]) /* ty=int16 */;
  %762 = reshape(%760, newshape=[4, 4, 15]) /* ty=Tensor[(4, 4, 15), int16] */;
  %763 = @func_155(%761, %762) /* ty=(Tensor[(4, 4, 15), int16],) */;
  %764 = %763.0;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(4, 4, 15), float64] */;
  %766 = cast(-5.43349f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
  %767 = tan(%765) /* ty=Tensor[(4, 4, 15), float64] */;
  %768 = cast(%767, dtype="int16") /* ty=Tensor[(4, 4, 15), int16] */;
  %769 = reshape(%766, newshape=[]) /* ty=int16 */;
  %770 = reshape(%768, newshape=[4, 4, 15]) /* ty=Tensor[(4, 4, 15), int16] */;
  %771 = @func_155(%769, %770) /* ty=(Tensor[(4, 4, 15), int16],) */;
  %772 = minimum(%755, %756) /* ty=Tensor[(1, 2, 1), float64] */;
  %773 = bitwise_xor(%757, %758) /* ty=Tensor[(1, 2, 1), uint16] */;
  %774 = %771.0;
  (%772, %773, %var_570, %767, %774)
}

def @func_5796() -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) {
  %778 = fn () -> (Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) {
    %775 = @func_2659() /* ty=(Tensor[(1470), uint32],) */;
    %776 = @func_3108() /* ty=Tensor[(11, 7, 12), float64] */;
    %777 = %775.0;
    (%776, %777)
  };
  %778() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32]) */
}

def @func_4977() -> Tensor[(11, 7, 12), uint8] {
  %779 = fn () -> Tensor[(11, 7, 12), uint8] {
    @func_1753() /* ty=Tensor[(11, 7, 12), uint8] */
  };
  %779() /* ty=Tensor[(11, 7, 12), uint8] */
}

def @func_2659() -> (Tensor[(1470), uint32],) {
  %780 = @func_2237() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1470), uint32], Tensor[(1470), uint32], Tensor[(11, 7, 12), float32]) */;
  %781 = %780.1;
  (%781,)
}

def @func_5341(%var_5339: Tensor[(60), uint64], %var_5340: int16) -> (Tensor[(11, 7, 12), float64], Tensor[(1, 1470), uint32], Tensor[(1470), float32], Tensor[(1, 2, 2), float64], Tensor[(4, 1), uint64], Tensor[(60), uint64], int16) {
  %800 = fn (%var_5332: Tensor[(60), uint64], %var_5333: int16) -> (Tensor[(11, 7, 12), float64], Tensor[(1, 1470), uint32], Tensor[(1470), float32], Tensor[(1, 2, 2), float64], Tensor[(4, 1), uint64], Tensor[(60), uint64], int16) {
    %782 = @func_3411() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %783 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 1470), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1470), uint32] */;
    %784 = reshape(%783, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
    %785 = @func_3025(%784) /* ty=(Tensor[(1470), float64],) */;
    %786 = %785.0;
    %787 = cast(%786, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %788 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 1), uint64] */;
    %789 = cast(%var_5332, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %790 = cast(%786, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
    %791 = cast(%var_5333, dtype="int16") /* ty=int16 */;
    %792 = reshape(%788, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), uint64] */;
    %793 = reshape(%789, newshape=[15, 2, 2]) /* ty=Tensor[(15, 2, 2), uint64] */;
    %794 = reshape(%790, newshape=[1470]) /* ty=Tensor[(1470), uint32] */;
    %795 = reshape(%791, newshape=[]) /* ty=int16 */;
    %796 = @func_4945(%792, %793, %794, %795) /* ty=(Tensor[(15, 2, 2), bool], Tensor[(15, 14, 7), uint32], Tensor[(1470), uint32], int16, Tensor[(1, 2, 2), float64], Tensor[(1, 2, 2), float64], Tensor[(8, 30), int32], Tensor[(11, 7, 12), float64], Tensor[(1, 2, 2), float64]) */;
    %797 = %782.0;
    %798 = acosh(%787) /* ty=Tensor[(1470), float32] */;
    %799 = %796.5;
    (%797, meta[relay.Constant][33] /* ty=Tensor[(1, 1470), uint32] */, %798, %799, meta[relay.Constant][34] /* ty=Tensor[(4, 1), uint64] */, %var_5332, %var_5333)
  };
  %800(%var_5339, %var_5340) /* ty=(Tensor[(11, 7, 12), float64], Tensor[(1, 1470), uint32], Tensor[(1470), float32], Tensor[(1, 2, 2), float64], Tensor[(4, 1), uint64], Tensor[(60), uint64], int16) */
}

def @func_6733() -> (Tensor[(3, 13, 12), int8], Tensor[(672), uint64], Tensor[(1024), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), float64]) {
  %821 = fn () -> (Tensor[(3, 13, 12), int8], Tensor[(672), uint64], Tensor[(1024), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), float64]) {
    %801 = @func_4226() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(3, 13, 12), int8], Tensor[(11, 7, 12), float64]) */;
    %802 = cast(meta[relay.Constant][35] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %803 = cast(meta[relay.Constant][35] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %804 = cast(meta[relay.Constant][35] /* ty=Tensor[(672), uint64] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %805 = cast(meta[relay.Constant][36] /* ty=Tensor[(1024), float32] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
    %806 = reshape(%802, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), uint64] */;
    %807 = reshape(%803, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), uint64] */;
    %808 = reshape(%804, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), bool] */;
    %809 = reshape(%805, newshape=[1024]) /* ty=Tensor[(1024), float32] */;
    %810 = @func_3923(%806, %807, %808, %809) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(3, 16, 14), bool], Tensor[(11, 7, 12), float64], Tensor[(1024), float32], Tensor[(11, 7, 12), float32]) */;
    %811 = %810.3;
    %812 = @func_4672() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %813 = %812.2;
    %814 = cast(%813, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
    %815 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
    %816 = cast(%811, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
    %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %818 = %801.1;
    %819 = greater(%816, %817) /* ty=Tensor[(11, 7, 12), bool] */;
    %820 = @func_6494() /* ty=Tensor[(11, 7, 12), float64] */;
    (%818, meta[relay.Constant][35] /* ty=Tensor[(672), uint64] */, meta[relay.Constant][36] /* ty=Tensor[(1024), float32] */, %819, %820)
  };
  %821() /* ty=(Tensor[(3, 13, 12), int8], Tensor[(672), uint64], Tensor[(1024), float32], Tensor[(11, 7, 12), bool], Tensor[(11, 7, 12), float64]) */
}

def @func_3405() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float64]) {
  %829 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float64]) {
    %822 = @func_3303() /* ty=Tensor[(11, 7, 12), float32] */;
    %823 = cast(%822, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
    %824 = reshape(%823, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), float32] */;
    %825 = @func_1445(%824) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) */;
    %826 = @func_1396() /* ty=(Tensor[(11, 7, 12), float64],) */;
    %827 = %825.0;
    %828 = %826.0;
    (%822, %827, %828)
  };
  %829() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float64]) */
}

def @func_3780(%var_3760: Tensor[(5, 10, 4), float64], %var_3773: Tensor[(1470), uint32]) -> (Tensor[(5, 10, 4), float64], Tensor[(4, 4, 15), int16], Tensor[(1470), uint32], int16, Tensor[(240), int16]) {
  %830 = cast(%var_3760, dtype="float64") /* ty=Tensor[(5, 10, 4), float64] */;
  %831 = cast(%var_3773, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %832 = cast(%var_3773, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %833 = cast(meta[relay.Constant][37] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %834 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %835 = reshape(%831, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %836 = reshape(%832, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), uint32] */;
  %837 = reshape(%833, newshape=[]) /* ty=int16 */;
  %838 = reshape(%834, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %839 = @func_723(%835, %836, %837, %838) /* ty=(Tensor[(15, 14, 7), uint32], Tensor[(4, 4, 15), int16], int16, Tensor[(240), int16], Tensor[(4, 4, 15), int16]) */;
  %840 = log2(%830) /* ty=Tensor[(5, 10, 4), float64] */;
  %841 = %839.1;
  (%840, %841, %var_3773, meta[relay.Constant][37] /* ty=int16 */, meta[relay.Constant][38] /* ty=Tensor[(240), int16] */)
}

def @func_2168() -> (Tensor[(11, 7, 12), float32],) {
  %843 = fn () -> (Tensor[(11, 7, 12), float32],) {
    %842 = @func_1109() /* ty=Tensor[(11, 7, 12), float32] */;
    (%842,)
  };
  %843() /* ty=(Tensor[(11, 7, 12), float32],) */
}

def @func_3998(%var_3997: Tensor[(8, 5, 9), float64]) -> (Tensor[(8, 5, 9), float64],) {
  %846 = fn (%var_3992: Tensor[(8, 5, 9), float64]) -> (Tensor[(8, 5, 9), float64],) {
    %844 = cast(%var_3992, dtype="float64") /* ty=Tensor[(8, 5, 9), float64] */;
    %845 = erf(%844) /* ty=Tensor[(8, 5, 9), float64] */;
    (%845,)
  };
  %846(%var_3997) /* ty=(Tensor[(8, 5, 9), float64],) */
}

def @func_1315() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  %847 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
  %848 = @func_886() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
  %849 = %847.1;
  %850 = %848.0;
  (%849, %850)
}

def @func_1317() -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) {
  @func_1315() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */
}

def @func_155(%var_147: int16, %var_148: Tensor[(4, 4, 15), int16]) -> (Tensor[(4, 4, 15), int16],) {
  %851 = cast(%var_147, dtype="int16") /* ty=int16 */;
  %852 = cast(%var_148, dtype="int16") /* ty=Tensor[(4, 4, 15), int16] */;
  %853 = left_shift(%851, %852) /* ty=Tensor[(4, 4, 15), int16] */;
  (%853,)
}

def @func_2455(%var_2454: Tensor[(8, 16, 8), float32]) -> (Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) {
  %868 = fn (%var_2430: Tensor[(8, 16, 8), float32]) -> (Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) {
    %854 = cast(%var_2430, dtype="float32") /* ty=Tensor[(8, 16, 8), float32] */;
    %855 = atan(%854) /* ty=Tensor[(8, 16, 8), float32] */;
    %856 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 16, 8), float32] */, dtype="uint32") /* ty=Tensor[(8, 16, 8), uint32] */;
    %857 = shape_of(%var_2430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %858 = cast(%var_2430, dtype="uint32") /* ty=Tensor[(8, 16, 8), uint32] */;
    %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %860 = multiply(%858, %859) /* ty=Tensor[(8, 16, 8), uint32] */;
    %861 = cast(%860, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
    %862 = shape_of(%855, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(%855, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %865 = cast(%855, dtype="float64") /* ty=Tensor[(8, 16, 8), float64] */;
    %866 = logical_or(%863, %864) /* ty=Tensor[(8, 16, 8), bool] */;
    %867 = log(%865) /* ty=Tensor[(8, 16, 8), float64] */;
    (%866, %867)
  };
  %868(%var_2454) /* ty=(Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) */
}

def @func_4329() -> Tensor[(1470), uint32] {
  @func_4327() /* ty=Tensor[(1470), uint32] */
}

def @func_1448(%var_1446: Tensor[(11, 7, 12), float32]) -> (Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) {
  @func_1445(%var_1446) /* ty=(Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool]) */
}

def @func_2928(%var_2927: Tensor[(450, 1), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool], Tensor[(450, 1), float32]) {
  %879 = fn (%var_2917: Tensor[(450, 1), float32]) -> (Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool], Tensor[(450, 1), float32]) {
    %869 = @func_1565() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float64]) */;
    %870 = @func_2368() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), float32]) */;
    %871 = cast(%var_2917, dtype="float32") /* ty=Tensor[(450, 1), float32] */;
    %872 = %869.0;
    %873 = cast(%872, dtype="float32") /* ty=Tensor[(11, 7, 12), float32] */;
    %874 = reshape(%871, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
    %875 = reshape(%873, newshape=[924]) /* ty=Tensor[(924), float32] */;
    %876 = @func_1515(%874, %875) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(924), float32], Tensor[(15, 6, 5), float32], Tensor[(11, 7, 12), float32]) */;
    %877 = %870.1;
    %878 = %876.0;
    (%872, %877, %878, %var_2917)
  };
  %879(%var_2927) /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), int8], Tensor[(11, 7, 12), bool], Tensor[(450, 1), float32]) */
}

def @func_6263(%var_6256: Tensor[(10, 16, 13), int8]) -> (Tensor[(10, 16, 13), bool],) {
  %880 = @func_4723() /* ty=Tensor[(10, 16, 13), int8] */;
  %881 = cast(%var_6256, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="bool") /* ty=Tensor[(10, 16, 13), bool] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %885 = less(%883, %884) /* ty=Tensor[(10, 16, 13), bool] */;
  (%885,)
}

def @func_3759() -> (Tensor[(1470), uint32],) {
  @func_3757() /* ty=(Tensor[(1470), uint32],) */
}

def @func_6757() -> (Tensor[(11, 7, 12), float32], Tensor[(1024), float64]) {
  %892 = fn () -> (Tensor[(11, 7, 12), float32], Tensor[(1024), float64]) {
    %886 = @func_1236() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(11, 7, 12), float32]) */;
    %887 = @func_4525() /* ty=(Tensor[(11, 7, 12), float64], Tensor[(512, 2), bool], Tensor[(1024), float32]) */;
    %888 = %887.2;
    %889 = cast(%888, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %890 = %886.0;
    %891 = sigmoid(%889) /* ty=Tensor[(1024), float64] */;
    (%890, %891)
  };
  %892() /* ty=(Tensor[(11, 7, 12), float32], Tensor[(1024), float64]) */
}

def @func_2308() -> (Tensor[(11, 7, 12), float64],) {
  %893 = @func_1649() /* ty=Tensor[(11, 7, 12), float64] */;
  (%893,)
}

def @func_5432() -> (Tensor[(11, 7, 12), float32],) {
  %895 = fn () -> (Tensor[(11, 7, 12), float32],) {
    %894 = @func_1158() /* ty=Tensor[(11, 7, 12), float32] */;
    (%894,)
  };
  %895() /* ty=(Tensor[(11, 7, 12), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

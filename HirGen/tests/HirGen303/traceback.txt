==========mod==========
#[version = "0.0.5"]
def @func_9675(%var_9648: Tensor[(1, 5, 2), float32], %var_9649: Tensor[(3, 5, 2), float32]) -> (Tensor[(3, 5, 2), float32], Tensor[(10, 6, 13), int8]) {
  %0 = cast(%var_9648, dtype="float32") /* ty=Tensor[(1, 5, 2), float32] */;
  %1 = cast(%var_9649, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %2 = power(%0, %1) /* ty=Tensor[(3, 5, 2), float32] */;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %4 = shape_of(%var_9649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_9649, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %7 = subtract(%5, %6) /* ty=Tensor[(3, 5, 2), float32] */;
  %8 = @func_8233() /* ty=Tensor[(10, 6, 13), int8] */;
  (%7, %8)
}

def @func_1695(%var_1668: Tensor[(3, 1, 12), float64]) -> Tensor[(3, 1, 12), float64] {
  %9 = cast(%var_1668, dtype="float64") /* ty=Tensor[(3, 1, 12), float64] */;
  cos(%9) /* ty=Tensor[(3, 1, 12), float64] */
}

def @func_11652() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8]) {
  %10 = @func_6631() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %11 = @func_10486() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %12 = %10.0;
  %13 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %14 = %11.0;
  %15 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  %16 = @func_7722() /* ty=Tensor[(10, 6, 13), int8] */;
  (%12, %13, %14, %15, %16)
}

def @func_2103(%var_2093: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) {
  %17 = cast(%var_2093, dtype="float64") /* ty=Tensor[(528), float64] */;
  %18 = reshape(%17, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), float64] */;
  %19 = @func_1019(%18) /* ty=(Tensor[(11, 3, 16), float64],) */;
  %20 = @func_1850() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) */;
  %21 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
  %22 = %19.0;
  %23 = %20.1;
  (%21, %22, %var_2093, %23)
}

def @func_8179() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %24 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
  %25 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  (%24, %25)
}

def @func_8357() -> (Tensor[(10, 6, 13), float32],) {
  %26 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %27 = %26.1;
  (%27,)
}

def @func_3800(%var_3748: Tensor[(12, 3, 10), bool], %var_3749: Tensor[(12, 3, 10), bool]) -> (Tensor[(10, 6, 13), float32], Tensor[(540, 2), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(12, 3, 10), uint8]) {
  %28 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %29 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %30 = @func_3194() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %31 = cast(%var_3749, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %32 = shape_of(%var_3748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%var_3748, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = logical_and(%33, %34) /* ty=Tensor[(12, 3, 10), bool] */;
  %36 = cast(%var_3748, dtype="uint8") /* ty=Tensor[(12, 3, 10), uint8] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="uint8") /* ty=Tensor[(12, 3, 10), uint8] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %40 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  %41 = %28.4;
  %42 = @func_2137() /* ty=Tensor[(10, 6, 13), int8] */;
  %43 = %29.0;
  %44 = %30.0;
  %45 = maximum(%38, %39) /* ty=Tensor[(12, 3, 10), uint8] */;
  (%40, %41, %42, %43, %44, %45)
}

def @func_8940() -> (Tensor[(10, 6, 13), float64],) {
  %46 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %47 = %46.1;
  (%47,)
}

def @func_9122() -> Tensor[(10, 6, 13), float32] {
  @func_8333() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_6329() -> Tensor[(10, 6, 13), float32] {
  %48 = @func_4917() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %48.1
}

def @func_7350(%var_7293: Tensor[(9, 4, 1), float32], %var_7294: Tensor[(9, 4, 15), float32], %var_7344: Tensor[(9, 4, 15), float64]) -> (Tensor[(9, 4, 15), bool], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 1), float32], Tensor[(10, 6, 13), int8], Tensor[(9, 4, 15), bool]) {
  %49 = cast(%var_7293, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
  %50 = cast(%var_7294, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
  %51 = divide(%49, %50) /* ty=Tensor[(9, 4, 15), float32] */;
  %52 = cast(%51, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %53 = shape_of(%var_7294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%var_7294, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %56 = @func_3244() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) */;
  %57 = cast(%var_7293, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
  %58 = tan(%57) /* ty=Tensor[(9, 4, 1), float32] */;
  %59 = cast(%58, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
  %60 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %61 = cast(%51, dtype="float64") /* ty=Tensor[(9, 4, 15), float64] */;
  %62 = sinh(%61) /* ty=Tensor[(9, 4, 15), float64] */;
  %63 = cast(%var_7344, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%62, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %67 = logical_and(%54, %55) /* ty=Tensor[(9, 4, 15), bool] */;
  %68 = %56.0;
  %69 = log2(%59) /* ty=Tensor[(9, 4, 1), float32] */;
  %70 = %60.0;
  %71 = equal(%65, %66) /* ty=Tensor[(9, 4, 15), bool] */;
  (%67, %68, %69, %70, %71)
}

def @func_9752(%var_9740: Tensor[(12, 13, 1), int16], %var_9741: Tensor[(12, 13, 12), int16]) -> Tensor[(12, 13, 12), int16] {
  %72 = cast(%var_9740, dtype="int16") /* ty=Tensor[(12, 13, 1), int16] */;
  %73 = cast(%var_9741, dtype="int16") /* ty=Tensor[(12, 13, 12), int16] */;
  minimum(%72, %73) /* ty=Tensor[(12, 13, 12), int16] */
}

def @func_2842() -> Tensor[(10, 6, 13), int8] {
  @func_650() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_3347() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %74 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %75 = @func_3092() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %76 = @func_3244() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) */;
  %77 = %74.0;
  %78 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %79 = %75.0;
  %80 = %76.0;
  (%77, %78, %79, %80)
}

def @func_5260() -> Tensor[(10, 6, 13), int8] {
  @func_1535() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9003() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %81 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %82 = %81.0;
  %83 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
  (%82, %83)
}

def @func_6631() -> (Tensor[(10, 6, 13), int8],) {
  %84 = @func_3622() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) */;
  %85 = %84.0;
  (%85,)
}

def @func_11912() -> (Tensor[(10, 6, 13), float32],) {
  %86 = @func_10443() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %87 = %86.1;
  (%87,)
}

def @func_7410() -> Tensor[(10, 6, 13), float32] {
  %88 = @func_3194() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %88.0
}

def @func_11716(%var_11703: Tensor[(30), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  %89 = cast(%var_11703, dtype="float64") /* ty=Tensor[(30), float64] */;
  %90 = reshape(%89, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %91 = @func_1213(%90) /* ty=(Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) */;
  %92 = @func_4695() /* ty=Tensor[(10, 6, 13), int8] */;
  %93 = %91.1;
  (%92, %93, %var_11703)
}

def @func_1144() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) {
  %94 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %95 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  %96 = %94.0;
  (%95, %96)
}

def @func_11063(%var_11048: Tensor[(96, 1), uint64]) -> (Tensor[(10, 6, 13), float32], Tensor[(780), int8], Tensor[(96, 1), uint64], Tensor[(6, 4, 4), float32]) {
  %97 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %98 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %99 = %97.1;
  %100 = cast(%99, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %101 = reshape(%98, newshape=[]) /* ty=uint16 */;
  %102 = reshape(%100, newshape=[780]) /* ty=Tensor[(780), int8] */;
  %103 = @func_7197(%101, %102) /* ty=(Tensor[(8, 15, 7), uint16], Tensor[(10, 6, 13), uint64], Tensor[(780), int8]) */;
  %104 = cast(%var_11048, dtype="uint64") /* ty=Tensor[(96, 1), uint64] */;
  %105 = reshape(%104, newshape=[6, 4, 4]) /* ty=Tensor[(6, 4, 4), uint64] */;
  %106 = @func_9503(%105) /* ty=Tensor[(6, 4, 4), uint64] */;
  %107 = cast(%106, dtype="float32") /* ty=Tensor[(6, 4, 4), float32] */;
  %108 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %109 = %103.2;
  %110 = power(%107, %108) /* ty=Tensor[(6, 4, 4), float32] */;
  (%99, %109, %var_11048, %110)
}

def @func_9143() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %111 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %112 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
  %113 = %111.0;
  %114 = %112.1;
  (%113, %114)
}

def @func_11369() -> (Tensor[(540, 2), float32], Tensor[(10, 6, 13), float32]) {
  %115 = @func_5084() /* ty=(Tensor[(540, 2), float32],) */;
  %116 = %115.0;
  %117 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  (%116, %117)
}

def @func_866() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) {
  %118 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %119 = cast(%118, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %120 = reshape(%119, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %121 = @func_684(%120) /* ty=Tensor[(10, 6, 13), uint64] */;
  %122 = cast(%121, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %123 = reshape(%122, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %124 = cast(meta[relay.Constant][1] /* ty=Tensor[(540, 2), float32] */, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %125 = reshape(%124, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %126 = @func_281(%125) /* ty=(Tensor[(9, 12, 10), float32],) */;
  %127 = @func_684(%123) /* ty=Tensor[(10, 6, 13), uint64] */;
  %128 = %126.0;
  (%118, %121, %127, %128, meta[relay.Constant][1] /* ty=Tensor[(540, 2), float32] */)
}

def @func_6973() -> Tensor[(10, 6, 13), int8] {
  @func_2489() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_7158(%var_7144: uint32, %var_7145: Tensor[(432), uint32]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 12), uint32], uint32, Tensor[(432), uint32], Tensor[(10, 6, 13), float64]) {
  %129 = @func_4445() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %130 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %131 = cast(%var_7144, dtype="uint32") /* ty=uint32 */;
  %132 = cast(%var_7145, dtype="uint32") /* ty=Tensor[(432), uint32] */;
  %133 = reshape(%131, newshape=[]) /* ty=uint32 */;
  %134 = reshape(%132, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), uint32] */;
  %135 = %129.0;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %137 = reshape(%136, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %138 = @func_2181(%137) /* ty=(Tensor[(10, 6, 13), float64],) */;
  %139 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
  %140 = %130.0;
  %141 = @func_6603(%133, %134) /* ty=Tensor[(9, 4, 12), uint32] */;
  %142 = %138.0;
  (%135, %139, %140, %141, %var_7144, %var_7145, %142)
}

def @func_7197(%var_7163: uint16, %var_7191: Tensor[(780), int8]) -> (Tensor[(8, 15, 7), uint16], Tensor[(10, 6, 13), uint64], Tensor[(780), int8]) {
  %143 = cast(%var_7163, dtype="uint16") /* ty=uint16 */;
  %144 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 15, 7), uint16] */, dtype="uint16") /* ty=Tensor[(8, 15, 7), uint16] */;
  %145 = cast(%var_7191, dtype="int8") /* ty=Tensor[(780), int8] */;
  %146 = reshape(%145, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %147 = bitwise_xor(%143, %144) /* ty=Tensor[(8, 15, 7), uint16] */;
  %148 = @func_684(%146) /* ty=Tensor[(10, 6, 13), uint64] */;
  (%147, %148, %var_7191)
}

def @func_9604(%var_9552: Tensor[(3, 4, 15), float64], %var_9553: Tensor[(3, 4, 15), float64]) -> (Tensor[(3, 4, 15), float64], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %149 = cast(%var_9553, dtype="float64") /* ty=Tensor[(3, 4, 15), float64] */;
  %150 = shape_of(%var_9552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%var_9552, dtype="float64") /* ty=Tensor[(3, 4, 15), float64] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %153 = cast(meta[relay.Constant][3] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %154 = reshape(%153, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %155 = @func_842(%154) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
  %156 = @func_8852() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %157 = floor_mod(%151, %152) /* ty=Tensor[(3, 4, 15), float64] */;
  %158 = %155.1;
  %159 = %156.0;
  %160 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
  (%157, %158, meta[relay.Constant][3] /* ty=Tensor[(224), int16] */, %159, %160)
}

def @func_1802() -> (Tensor[(10, 6, 13), float32],) {
  %161 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %162 = cast(%161, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %163 = cosh(%162) /* ty=Tensor[(10, 6, 13), float32] */;
  (%163,)
}

def @func_2731(%var_2683: Tensor[(4, 1, 7), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) {
  %164 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %165 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 132), float64] */, dtype="float64") /* ty=Tensor[(4, 132), float64] */;
  %166 = reshape(%165, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %167 = @func_2103(%166) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %168 = cast(%var_2683, dtype="float64") /* ty=Tensor[(4, 1, 7), float64] */;
  %169 = asin(%168) /* ty=Tensor[(4, 1, 7), float64] */;
  %170 = cast(%var_2683, dtype="uint32") /* ty=Tensor[(4, 1, 7), uint32] */;
  %171 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%169, dtype="uint32") /* ty=Tensor[(4, 1, 7), uint32] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %174 = cast(%var_2683, dtype="bool") /* ty=Tensor[(4, 1, 7), bool] */;
  %175 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%169, dtype="bool") /* ty=Tensor[(4, 1, 7), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = %164.0;
  %179 = %167.3;
  %180 = bitwise_or(%172, %173) /* ty=Tensor[(4, ?, 7), uint32] */;
  %181 = logical_and(%176, %177) /* ty=Tensor[(4, ?, 7), bool] */;
  (%178, %179, meta[relay.Constant][4] /* ty=Tensor[(4, 132), float64] */, %180, %181)
}

def @func_10885() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %182 = cast(meta[relay.Constant][5] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %183 = reshape(%182, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %184 = @func_2103(%183) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %185 = @func_4739() /* ty=Tensor[(10, 6, 13), float32] */;
  %186 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
  %187 = @func_8769() /* ty=Tensor[(10, 6, 13), float64] */;
  %188 = %184.2;
  %189 = @func_2530() /* ty=Tensor[(10, 6, 13), int8] */;
  %190 = @func_9122() /* ty=Tensor[(10, 6, 13), float32] */;
  (%185, %186, %187, %188, meta[relay.Constant][5] /* ty=Tensor[(528), float64] */, %189, %190)
}

def @func_5573(%var_5564: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(528), float64]) {
  %191 = cast(%var_5564, dtype="float64") /* ty=Tensor[(528), float64] */;
  %192 = reshape(%191, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %193 = @func_2103(%192) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %194 = @func_2137() /* ty=Tensor[(10, 6, 13), int8] */;
  %195 = %193.2;
  (%194, %195, %var_5564)
}

def @func_7710() -> (Tensor[(528), float64],) {
  %196 = @func_7037() /* ty=Tensor[(528), float64] */;
  (%196,)
}

def @func_8689() -> Tensor[(10, 6, 13), int8] {
  %197 = @func_2976() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %197.0
}

def @func_2203(%var_2185: Tensor[(7, 3, 8), float32]) -> (Tensor[(7, 3, 8), float32],) {
  %198 = cast(%var_2185, dtype="float32") /* ty=Tensor[(7, 3, 8), float32] */;
  %199 = cosh(%198) /* ty=Tensor[(7, 3, 8), float32] */;
  (%199,)
}

def @func_6481(%var_6449: Tensor[(1080), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(1, 168), float32], Tensor[(1080), float32], Tensor[(560), bool], Tensor[(1080), float64]) {
  %200 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %201 = %200.3;
  %202 = cast(%201, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %203 = reshape(%202, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %204 = @func_2181(%203) /* ty=(Tensor[(10, 6, 13), float64],) */;
  %205 = %204.0;
  %206 = cast(%205, dtype="uint64") /* ty=Tensor[(10, 6, 13), uint64] */;
  %207 = reshape(%206, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), uint64] */;
  %208 = @func_4318(%207) /* ty=(Tensor[(10, 6, 13), bool], Tensor[(7, 3, 8), float32], Tensor[(1, 168), float32]) */;
  %209 = cast(meta[relay.Constant][6] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %210 = cast(%var_6449, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %211 = reshape(%209, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), bool] */;
  %212 = reshape(%210, newshape=[540, 2]) /* ty=Tensor[(540, 2), float64] */;
  %213 = @func_2451(%211, %212) /* ty=(Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) */;
  %214 = %208.2;
  %215 = %213.1;
  (%201, %205, %214, %215, meta[relay.Constant][6] /* ty=Tensor[(560), bool] */, %var_6449)
}

def @func_3544(%var_3524: Tensor[(224), int16]) -> (Tensor[(10, 6, 2), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) {
  %216 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 6, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 2), float64] */;
  %217 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %218 = cast(%var_3524, dtype="int16") /* ty=Tensor[(224), int16] */;
  %219 = reshape(%218, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %220 = @func_1892(%219) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) */;
  %221 = sqrt(%216) /* ty=Tensor[(10, 6, 2), float64] */;
  %222 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
  %223 = %217.0;
  %224 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
  %225 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
  %226 = %220.5;
  (%221, %222, %223, %224, %225, %226, %var_3524)
}

def @func_7989() -> (Tensor[(12, 5, 10), uint64], Tensor[(10, 6, 13), int8], Tensor[(12, 5, 10), float64]) {
  %227 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %228 = acosh(%227) /* ty=Tensor[(12, 5, 10), float64] */;
  %229 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 5, 10), float64] */, dtype="uint64") /* ty=Tensor[(12, 5, 10), uint64] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="uint64") /* ty=Tensor[(12, 5, 10), uint64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %233 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %234 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  %235 = sqrt(%234) /* ty=Tensor[(12, 5, 10), float32] */;
  %236 = cast(%235, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %237 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(12, 5, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %240 = multiply(%231, %232) /* ty=Tensor[(12, 5, 10), uint64] */;
  %241 = %233.0;
  %242 = floor_mod(%238, %239) /* ty=Tensor[(12, 5, 10), float64] */;
  (%240, %241, %242)
}

def @func_9457(%var_9433: uint32, %var_9434: Tensor[(12, 5, 2), uint32], %var_9440: Tensor[(1, 224), int16]) -> (Tensor[(12, 5, 2), uint32], Tensor[(9, 12, 10), float32], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int8]) {
  %243 = cast(%var_9433, dtype="uint32") /* ty=uint32 */;
  %244 = cast(%var_9434, dtype="uint32") /* ty=Tensor[(12, 5, 2), uint32] */;
  %245 = cast(%var_9440, dtype="int16") /* ty=Tensor[(1, 224), int16] */;
  %246 = reshape(%245, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %247 = @func_842(%246) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
  %248 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %249 = add(%243, %244) /* ty=Tensor[(12, 5, 2), uint32] */;
  %250 = %247.1;
  %251 = %248.0;
  (%249, %250, %var_9440, %251)
}

def @func_5912() -> Tensor[(10, 6, 13), float32] {
  %252 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %252.0
}

def @func_10137(%var_10110: Tensor[(1, 6, 8), uint32]) -> (Tensor[(1, 6, 8), uint32], Tensor[(10, 6, 13), float32]) {
  %253 = cast(meta[relay.Constant][10] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %254 = cast(%var_10110, dtype="uint32") /* ty=Tensor[(1, 6, 8), uint32] */;
  %255 = bitwise_xor(%253, %254) /* ty=Tensor[(1, 6, 8), uint32] */;
  %256 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  (%255, %256)
}

def @func_2114() -> Tensor[(10, 6, 13), float32] {
  %257 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %257.0
}

def @func_9072() -> Tensor[(10, 6, 13), int8] {
  @func_2544() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_1720() -> Tensor[(10, 6, 13), int8] {
  @func_1535() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_1367() -> (Tensor[(10, 6, 13), int8],) {
  %258 = @func_1305() /* ty=Tensor[(10, 6, 13), float32] */;
  %259 = cast(%258, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %260 = acosh(%259) /* ty=Tensor[(10, 6, 13), float32] */;
  %261 = cast(%258, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %265 = right_shift(%263, %264) /* ty=Tensor[(10, 6, 13), int8] */;
  (%265,)
}

def @func_7061() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %266 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %267 = %266.0;
  %268 = @func_2544() /* ty=Tensor[(10, 6, 13), int8] */;
  (%267, %268)
}

def @func_10262() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %269 = @func_4084() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %270 = @func_8438() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %271 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %272 = @func_8233() /* ty=Tensor[(10, 6, 13), int8] */;
  %273 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %274 = %269.0;
  %275 = %270.0;
  %276 = %271.1;
  (%272, %273, %274, %275, %276)
}

def @func_11469() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %277 = @func_8852() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %278 = %277.0;
  %279 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  (%278, %279)
}

def @func_3092() -> (Tensor[(10, 6, 13), float32],) {
  %280 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
  (%280,)
}

def @func_762(%var_730: Tensor[(4, 4, 14), int16]) -> (Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) {
  %281 = cast(%var_730, dtype="int16") /* ty=Tensor[(4, 4, 14), int16] */;
  %282 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(4, 4, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 4, 14), int16] */, dtype="int16") /* ty=Tensor[(4, 4, 14), int16] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %285 = cast(meta[relay.Constant][12] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %286 = reshape(%285, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %287 = @func_281(%286) /* ty=(Tensor[(9, 12, 10), float32],) */;
  %288 = cast(meta[relay.Constant][12] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %289 = reshape(%288, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %290 = @func_281(%289) /* ty=(Tensor[(9, 12, 10), float32],) */;
  %291 = cast(meta[relay.Constant][12] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %292 = reshape(%291, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %293 = @func_281(%292) /* ty=(Tensor[(9, 12, 10), float32],) */;
  %294 = multiply(%283, %284) /* ty=Tensor[(4, 4, 14), int16] */;
  %295 = %287.0;
  %296 = %290.0;
  %297 = %293.0;
  (%294, %295, meta[relay.Constant][12] /* ty=Tensor[(1080), float32] */, %296, %297)
}

def @func_6162() -> (Tensor[(10, 6, 13), int8],) {
  %298 = @func_4084() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %299 = %298.0;
  (%299,)
}

def @func_1767() -> Tensor[(10, 6, 13), float32] {
  %300 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %300.1
}

def @func_10014() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(4, 56), float32], Tensor[(4, 56), float32]) {
  %301 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 56), int16] */, dtype="int16") /* ty=Tensor[(4, 56), int16] */;
  %302 = reshape(%301, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %303 = @func_5017(%302) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %304 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 56), int16] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %305 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 56), int16] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %306 = acosh(%305) /* ty=Tensor[(4, 56), float32] */;
  %307 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 56), float32] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(2), int32] */;
  %309 = cast(%306, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %311 = @func_8214() /* ty=Tensor[(10, 6, 13), float64] */;
  %312 = %303.3;
  %313 = sigmoid(%304) /* ty=Tensor[(4, 56), float32] */;
  %314 = add(%309, %310) /* ty=Tensor[(4, 56), float32] */;
  (%311, %312, %313, %314)
}

def @func_1019(%var_1013: Tensor[(11, 3, 16), float64]) -> (Tensor[(11, 3, 16), float64],) {
  %315 = cast(%var_1013, dtype="float64") /* ty=Tensor[(11, 3, 16), float64] */;
  %316 = log10(%315) /* ty=Tensor[(11, 3, 16), float64] */;
  (%316,)
}

def @func_4318(%var_4294: Tensor[(10, 6, 13), uint64]) -> (Tensor[(10, 6, 13), bool], Tensor[(7, 3, 8), float32], Tensor[(1, 168), float32]) {
  %317 = @func_3622() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) */;
  %318 = %317.1;
  %319 = cast(%var_4294, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%318, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %323 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %324 = reshape(%323, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
  %325 = @func_2203(%324) /* ty=(Tensor[(7, 3, 8), float32],) */;
  %326 = less(%321, %322) /* ty=Tensor[(10, 6, 13), bool] */;
  %327 = %325.0;
  (%326, %327, meta[relay.Constant][15] /* ty=Tensor[(1, 168), float32] */)
}

def @func_2181(%var_2158: Tensor[(10, 6, 13), float32]) -> (Tensor[(10, 6, 13), float64],) {
  %328 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
  %329 = cast(%var_2158, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %333 = floor_divide(%331, %332) /* ty=Tensor[(10, 6, 13), float64] */;
  (%333,)
}

def @func_9778() -> (Tensor[(15, 9, 16), float32], Tensor[(10, 6, 13), int8]) {
  %334 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
  %335 = @func_9316() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %336 = rsqrt(%334) /* ty=Tensor[(15, 9, 16), float32] */;
  %337 = %335.1;
  (%336, %337)
}

def @func_11882() -> Tensor[(10, 6, 13), float64] {
  %338 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
  %338.1
}

def @func_1045() -> Tensor[(10, 6, 13), float64] {
  %339 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %340 = cast(%339, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
  rsqrt(%340) /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_1615() -> Tensor[(10, 6, 13), float32] {
  @func_1399() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_5500(%var_5495: Tensor[(9, 13, 15), float32], %var_5496: Tensor[(9, 13, 15), float32]) -> (Tensor[(9, 13, 15), float32],) {
  %341 = cast(%var_5496, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %342 = shape_of(%var_5495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_5495, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %345 = floor_mod(%343, %344) /* ty=Tensor[(9, 13, 15), float32] */;
  (%345,)
}

def @func_1850() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) {
  %346 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  %347 = cast(%346, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %348 = reshape(%347, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %349 = @func_684(%348) /* ty=Tensor[(10, 6, 13), uint64] */;
  %350 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
  (%346, %349, %350)
}

def @func_9503(%var_9492: Tensor[(6, 4, 4), uint64]) -> Tensor[(6, 4, 4), uint64] {
  %351 = cast(%var_9492, dtype="uint64") /* ty=Tensor[(6, 4, 4), uint64] */;
  %352 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(6, 4, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 4, 4), uint64] */, dtype="uint64") /* ty=Tensor[(6, 4, 4), uint64] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%353, %354) /* ty=Tensor[(6, 4, 4), uint64] */
}

def @func_10796() -> (Tensor[(10, 6, 13), float64],) {
  %355 = @func_8940() /* ty=(Tensor[(10, 6, 13), float64],) */;
  %356 = %355.0;
  (%356,)
}

def @func_12243() -> (Tensor[(10, 6, 13), float64],) {
  %357 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %358 = %357.0;
  (%358,)
}

def @func_2976() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %359 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %360 = %359.0;
  %361 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  (%360, %361)
}

def @func_4032(%var_4007: Tensor[(8, 1, 6), int64], %var_4026: Tensor[(8, 6, 6), uint32]) -> (Tensor[(8, 6, 6), bool],) {
  %362 = cast(%var_4007, dtype="int64") /* ty=Tensor[(8, 1, 6), int64] */;
  %363 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 6, 6), int64] */, dtype="int64") /* ty=Tensor[(8, 6, 6), int64] */;
  %364 = multiply(%362, %363) /* ty=Tensor[(8, 6, 6), int64] */;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
  %366 = tan(%365) /* ty=Tensor[(8, 6, 6), float64] */;
  %367 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 6, 6), int64] */, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %371 = add(%369, %370) /* ty=Tensor[(8, 6, 6), uint32] */;
  %372 = cast(%var_4026, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%371, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %376 = greater_equal(%374, %375) /* ty=Tensor[(8, 6, 6), bool] */;
  (%376,)
}

def @func_3826(%var_3809: Tensor[(10, 6, 13), float64]) -> (Tensor[(10, 6, 13), int16],) {
  %377 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  %378 = cast(%var_3809, dtype="int16") /* ty=Tensor[(10, 6, 13), int16] */;
  %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%377, dtype="int16") /* ty=Tensor[(10, 6, 13), int16] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %382 = bitwise_or(%380, %381) /* ty=Tensor[(10, 6, 13), int16] */;
  (%382,)
}

def @func_1305() -> Tensor[(10, 6, 13), float32] {
  %383 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  sqrt(%384) /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_2071() -> Tensor[(10, 6, 13), float64] {
  %385 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %385.0
}

def @func_3105() -> Tensor[(10, 6, 13), float32] {
  @func_2114() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_9735() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %386 = @func_8852() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %387 = @func_5452() /* ty=Tensor[(10, 6, 13), float32] */;
  %388 = %386.0;
  (%387, %388)
}

def @func_650() -> Tensor[(10, 6, 13), int8] {
  %389 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 6, 13), int8] */, dtype="int8") /* ty=Tensor[(1, 6, 13), int8] */;
  %390 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 6, 13), int8] */, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  maximum(%389, %390) /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2399(%var_2376: Tensor[(1080, 1), float32], %var_2385: Tensor[(1080, 12), float32]) -> (Tensor[(10, 6, 13), int8], Tensor[(540, 2), bool], Tensor[(1080, 12), int8], Tensor[(1080, 12), float32], Tensor[(11, 3, 16), float64], Tensor[(528), float64]) {
  %391 = cast(%var_2376, dtype="float32") /* ty=Tensor[(1080, 1), float32] */;
  %392 = reshape(%391, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %393 = @func_1267(%392) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), float64]) */;
  %394 = cast(%var_2376, dtype="int8") /* ty=Tensor[(1080, 1), int8] */;
  %395 = cast(%var_2385, dtype="int8") /* ty=Tensor[(1080, 12), int8] */;
  %396 = cast(%var_2376, dtype="float32") /* ty=Tensor[(1080, 1), float32] */;
  %397 = cast(%var_2385, dtype="float32") /* ty=Tensor[(1080, 12), float32] */;
  %398 = cast(meta[relay.Constant][21] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %399 = reshape(%398, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), float64] */;
  %400 = @func_1019(%399) /* ty=(Tensor[(11, 3, 16), float64],) */;
  %401 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %402 = %393.0;
  %403 = bitwise_and(%394, %395) /* ty=Tensor[(1080, 12), int8] */;
  %404 = floor_mod(%396, %397) /* ty=Tensor[(1080, 12), float32] */;
  %405 = %400.0;
  (%401, %402, %403, %404, %405, meta[relay.Constant][21] /* ty=Tensor[(528), float64] */)
}

def @func_9470() -> Tensor[(10, 6, 13), float32] {
  %406 = @func_9404() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %406.1
}

def @func_2451(%var_2417: Tensor[(7, 5, 16), bool], %var_2432: Tensor[(540, 2), float64]) -> (Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) {
  %407 = cast(%var_2417, dtype="bool") /* ty=Tensor[(7, 5, 16), bool] */;
  %408 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(7, 5, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 5, 16), bool] */, dtype="bool") /* ty=Tensor[(7, 5, 16), bool] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %411 = cast(meta[relay.Constant][23] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %412 = reshape(%411, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %413 = @func_1267(%412) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), float64]) */;
  %414 = %413.1;
  %415 = cast(%var_2432, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(2), int32] */;
  %417 = cast(%414, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %419 = logical_and(%409, %410) /* ty=Tensor[(7, 5, 16), bool] */;
  %420 = divide(%417, %418) /* ty=Tensor[(540, 2), float32] */;
  (%419, meta[relay.Constant][23] /* ty=Tensor[(1080), float32] */, %420)
}

def @func_8233() -> Tensor[(10, 6, 13), int8] {
  @func_2544() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_7532(%var_7520: Tensor[(28), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(28), float64]) {
  %421 = @func_5333() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %422 = cast(%var_7520, dtype="float64") /* ty=Tensor[(28), float64] */;
  %423 = reshape(%422, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), float64] */;
  %424 = @func_2731(%423) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) */;
  %425 = %421.0;
  %426 = %424.1;
  (%425, %426, %var_7520)
}

def @func_5127(%var_5118: Tensor[(8, 16, 15), uint32]) -> (Tensor[(8, 16, 15), bool],) {
  %427 = cast(%var_5118, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
  %428 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(8, 16, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 16, 15), uint32] */, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %431 = less_equal(%429, %430) /* ty=Tensor[(8, 16, 15), bool] */;
  (%431,)
}

def @func_9256(%var_9215: Tensor[(30), float64]) -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32], Tensor[(30), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(7, 3, 8), float32], Tensor[(168), float32]) {
  %432 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %433 = %432.0;
  %434 = cast(%433, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %435 = reshape(%434, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %436 = cast(%var_9215, dtype="float64") /* ty=Tensor[(30), float64] */;
  %437 = reshape(%436, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %438 = @func_3415(%437) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) */;
  %439 = @func_7556() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %440 = cast(meta[relay.Constant][25] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %441 = reshape(%440, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
  %442 = @func_2203(%441) /* ty=(Tensor[(7, 3, 8), float32],) */;
  %443 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %444 = @func_684(%435) /* ty=Tensor[(10, 6, 13), uint64] */;
  %445 = %438.4;
  %446 = %439.0;
  %447 = @func_5260() /* ty=Tensor[(10, 6, 13), int8] */;
  %448 = %442.0;
  (%443, %433, %444, %445, %var_9215, %446, %447, %448, meta[relay.Constant][25] /* ty=Tensor[(168), float32] */)
}

def @func_2137() -> Tensor[(10, 6, 13), int8] {
  @func_650() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_6038() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) {
  %449 = @func_3058() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %450 = cast(meta[relay.Constant][26] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %451 = reshape(%450, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %452 = @func_2103(%451) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %453 = %449.1;
  %454 = %452.3;
  (%453, %454, meta[relay.Constant][26] /* ty=Tensor[(528), float64] */)
}

def @func_5598() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %455 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %456 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  %457 = %455.0;
  (%456, %457)
}

def @func_3907(%var_3867: float64, %var_3868: Tensor[(14, 13, 5), float64], %var_3897: Tensor[(224), int16]) -> (Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) {
  %458 = cast(%var_3867, dtype="float64") /* ty=float64 */;
  %459 = cast(%var_3868, dtype="float64") /* ty=Tensor[(14, 13, 5), float64] */;
  %460 = cast(meta[relay.Constant][27] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %461 = reshape(%460, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %462 = @func_281(%461) /* ty=(Tensor[(9, 12, 10), float32],) */;
  %463 = cast(%var_3897, dtype="int16") /* ty=Tensor[(224), int16] */;
  %464 = reshape(%463, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), int16] */;
  %465 = @func_762(%464) /* ty=(Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) */;
  %466 = multiply(%458, %459) /* ty=Tensor[(14, 13, 5), float64] */;
  %467 = %462.0;
  %468 = %465.4;
  (%466, %467, meta[relay.Constant][27] /* ty=Tensor[(1080), float32] */, %468, %var_3897)
}

def @func_1892(%var_1890: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) {
  %469 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %470 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %471 = %469.0;
  %472 = cast(%471, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %473 = reshape(%472, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %474 = cast(%var_1890, dtype="int16") /* ty=Tensor[(224), int16] */;
  %475 = reshape(%474, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %476 = @func_842(%475) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
  %477 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
  %478 = %470.0;
  %479 = @func_684(%473) /* ty=Tensor[(10, 6, 13), uint64] */;
  %480 = %476.2;
  (%477, %471, %478, %479, %480, %var_1890)
}

def @func_4084() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %481 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %482 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %483 = %481.0;
  %484 = %482.0;
  (%483, %484)
}

def @func_5084() -> (Tensor[(540, 2), float32],) {
  %485 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %486 = %485.4;
  (%486,)
}

def @func_7819() -> Tensor[(10, 6, 13), int8] {
  @func_5260() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_3058() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %487 = @func_2842() /* ty=Tensor[(10, 6, 13), int8] */;
  %488 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  (%487, %488)
}

def @func_877() -> Tensor[(10, 6, 13), int8] {
  @func_650() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_1985(%var_1979: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32]) {
  %489 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
  %490 = cast(%489, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %491 = cast(%var_1979, dtype="int16") /* ty=Tensor[(224), int16] */;
  %492 = reshape(%491, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %493 = @func_1892(%492) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) */;
  %494 = %493.0;
  %495 = cast(%494, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %496 = reshape(%495, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %497 = @func_1663(%496) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %498 = atanh(%490) /* ty=Tensor[(10, 6, 13), float32] */;
  %499 = %497.1;
  (%498, %494, %var_1979, %499)
}

def @func_5828(%var_5808: Tensor[(2, 264), float64], %var_5822: Tensor[(1, 910), float64], %var_5823: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(2, 264), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(1, 910), float64], Tensor[(224), int16]) {
  %500 = @func_1802() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %501 = cast(%var_5808, dtype="float64") /* ty=Tensor[(2, 264), float64] */;
  %502 = reshape(%501, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %503 = @func_5573(%502) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(528), float64]) */;
  %504 = @func_2976() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %505 = cast(%var_5822, dtype="float64") /* ty=Tensor[(1, 910), float64] */;
  %506 = cast(%var_5823, dtype="int16") /* ty=Tensor[(224), int16] */;
  %507 = reshape(%505, newshape=[1, 910]) /* ty=Tensor[(1, 910), float64] */;
  %508 = reshape(%506, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %509 = @func_5193(%507, %508) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) */;
  %510 = %500.0;
  %511 = %503.0;
  %512 = %504.1;
  %513 = %509.0;
  (%510, %511, %var_5808, %512, %513, %var_5822, %var_5823)
}

def @func_2512() -> (Tensor[(10, 6, 13), float32],) {
  %514 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %515 = %514.1;
  (%515,)
}

def @func_11357() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %516 = @func_8346() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %517 = @func_9646() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %518 = @func_9267() /* ty=Tensor[(10, 6, 13), int8] */;
  %519 = %516.0;
  %520 = @func_8194() /* ty=Tensor[(10, 6, 13), float32] */;
  %521 = %517.0;
  (%518, %519, %520, %521)
}

def @func_4695() -> Tensor[(10, 6, 13), int8] {
  @func_877() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2544() -> Tensor[(10, 6, 13), int8] {
  %522 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %522.0
}

def @func_4376(%var_4365: Tensor[(2, 12, 16), float64]) -> (Tensor[(2, 12, 16), float64],) {
  %523 = cast(%var_4365, dtype="float64") /* ty=Tensor[(2, 12, 16), float64] */;
  %524 = cosh(%523) /* ty=Tensor[(2, 12, 16), float64] */;
  (%524,)
}

def @func_6603(%var_6593: uint32, %var_6594: Tensor[(9, 4, 12), uint32]) -> Tensor[(9, 4, 12), uint32] {
  %525 = cast(%var_6593, dtype="uint32") /* ty=uint32 */;
  %526 = cast(%var_6594, dtype="uint32") /* ty=Tensor[(9, 4, 12), uint32] */;
  bitwise_xor(%525, %526) /* ty=Tensor[(9, 4, 12), uint32] */
}

def @func_7443() -> Tensor[(528), float64] {
  %527 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
  %527.2
}

def @func_11112() -> (Tensor[(10, 6, 13), float32],) {
  %528 = @func_8194() /* ty=Tensor[(10, 6, 13), float32] */;
  (%528,)
}

def @func_9620() -> Tensor[(10, 6, 13), int8] {
  @func_5144() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_281(%var_272: Tensor[(9, 12, 10), float32]) -> (Tensor[(9, 12, 10), float32],) {
  %529 = cast(%var_272, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
  %530 = sinh(%529) /* ty=Tensor[(9, 12, 10), float32] */;
  (%530,)
}

def @func_2923(%var_2915: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), bool] {
  %531 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  %532 = cast(%var_2915, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%531, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%534, %535) /* ty=Tensor[(10, 6, 13), bool] */
}

def @func_8464() -> (Tensor[(10, 6, 13), int8],) {
  %536 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %537 = %536.0;
  (%537,)
}

def @func_8277(%var_8236: Tensor[(5, 16, 10), bool], %var_8237: Tensor[(5, 16, 10), bool], %var_8261: Tensor[(910), float64]) -> (Tensor[(5, 16, 10), bool], Tensor[(5, 16, 10), float64], Tensor[(9, 12, 10), float32], float64, Tensor[(910), float64], Tensor[(112, 2), int16]) {
  %538 = cast(%var_8237, dtype="bool") /* ty=Tensor[(5, 16, 10), bool] */;
  %539 = shape_of(%var_8236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%var_8236, dtype="bool") /* ty=Tensor[(5, 16, 10), bool] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %542 = cast(%var_8236, dtype="float32") /* ty=Tensor[(5, 16, 10), float32] */;
  %543 = asinh(%542) /* ty=Tensor[(5, 16, 10), float32] */;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(5, 16, 10), float64] */;
  %545 = cast(-2.71982f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %546 = cast(%var_8261, dtype="float64") /* ty=Tensor[(910), float64] */;
  %547 = cast(meta[relay.Constant][28] /* ty=Tensor[(112, 2), int16] */, dtype="int16") /* ty=Tensor[(112, 2), int16] */;
  %548 = reshape(%545, newshape=[]) /* ty=float64 */;
  %549 = reshape(%546, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float64] */;
  %550 = reshape(%547, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %551 = @func_3907(%548, %549, %550) /* ty=(Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) */;
  %552 = logical_and(%540, %541) /* ty=Tensor[(5, 16, 10), bool] */;
  %553 = cosh(%544) /* ty=Tensor[(5, 16, 10), float64] */;
  %554 = %551.3;
  (%552, %553, %554, -2.71982f64 /* ty=float64 */, %var_8261, meta[relay.Constant][28] /* ty=Tensor[(112, 2), int16] */)
}

def @func_11663() -> Tensor[(5, 5, 10), float64] {
  %555 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  sinh(%555) /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_684(%var_678: Tensor[(10, 6, 13), int8]) -> Tensor[(10, 6, 13), uint64] {
  %556 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %557 = cast(%var_678, dtype="uint64") /* ty=Tensor[(10, 6, 13), uint64] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%556, dtype="uint64") /* ty=Tensor[(10, 6, 13), uint64] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%559, %560) /* ty=Tensor[(10, 6, 13), uint64] */
}

def @func_1267(%var_1240: Tensor[(540, 2), float32]) -> (Tensor[(540, 2), bool], Tensor[(540, 2), float64]) {
  %561 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %562 = %561.4;
  %563 = cast(%var_1240, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(2), int32] */;
  %565 = cast(%562, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %567 = cast(%var_1240, dtype="float64") /* ty=Tensor[(540, 2), float64] */;
  %568 = logical_or(%565, %566) /* ty=Tensor[(540, 2), bool] */;
  %569 = sqrt(%567) /* ty=Tensor[(540, 2), float64] */;
  (%568, %569)
}

def @func_3415(%var_3381: Tensor[(10, 3), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) {
  %570 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %571 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %572 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %573 = cast(%var_3381, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %574 = reshape(%573, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %575 = @func_1213(%574) /* ty=(Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
  %578 = %570.3;
  %579 = %571.3;
  %580 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
  %581 = %572.0;
  %582 = cosh(%577) /* ty=Tensor[(3, 2, 5), float32] */;
  (%578, %579, %var_3381, %580, %581, %582)
}

def @func_1535() -> Tensor[(10, 6, 13), int8] {
  %583 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %583.0
}

def @func_12382() -> Tensor[(528), float64] {
  @func_7037() /* ty=Tensor[(528), float64] */
}

def @func_12140(%var_12092: Tensor[(60), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(1920), bool], Tensor[(10, 6, 13), int8], Tensor[(4, 1, 15), float32], Tensor[(60), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %584 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %585 = cast(meta[relay.Constant][30] /* ty=Tensor[(1920), uint32] */, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
  %586 = reshape(%585, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), uint32] */;
  %587 = @func_5127(%586) /* ty=(Tensor[(8, 16, 15), bool],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
  %590 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(1920), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %591 = cast(meta[relay.Constant][30] /* ty=Tensor[(1920), uint32] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?), bool] */;
  %593 = cast(%var_12092, dtype="float32") /* ty=Tensor[(60), float32] */;
  %594 = reshape(%593, newshape=[4, 1, 15]) /* ty=Tensor[(4, 1, 15), float32] */;
  %595 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %596 = @func_8414() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %597 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  %598 = @func_4739() /* ty=Tensor[(10, 6, 13), float32] */;
  %599 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  %600 = %584.0;
  %601 = greater(%591, %592) /* ty=Tensor[(1920), bool] */;
  %602 = @func_7819() /* ty=Tensor[(10, 6, 13), int8] */;
  %603 = @func_7283(%594) /* ty=Tensor[(4, 1, 15), float32] */;
  %604 = %595.3;
  %605 = %596.0;
  (%597, %598, %599, %600, %601, %602, %603, %var_12092, %604, %605)
}

def @func_3710() -> (Tensor[(10, 6, 13), float64],) {
  %606 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  (%606,)
}

def @func_5737(%var_5698: Tensor[(40, 14), bool], %var_5732: Tensor[(288), uint32]) -> (Tensor[(10, 6, 13), float64], Tensor[(224), int16], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int16], Tensor[(7, 5, 16), bool], Tensor[(40, 14), bool], Tensor[(1080), float64], Tensor[(540, 2), float32], Tensor[(8, 6, 6), bool], Tensor[(1, 48), int64], Tensor[(288), uint32], Tensor[(10, 6, 13), int8]) {
  %607 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 224), int16] */, dtype="int16") /* ty=Tensor[(1, 224), int16] */;
  %608 = reshape(%607, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %609 = @func_1985(%608) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32]) */;
  %610 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %611 = cast(%610, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
  %612 = reshape(%611, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float64] */;
  %613 = @func_3826(%612) /* ty=(Tensor[(10, 6, 13), int16],) */;
  %614 = cast(%var_5698, dtype="bool") /* ty=Tensor[(40, 14), bool] */;
  %615 = cast(meta[relay.Constant][32] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %616 = reshape(%614, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), bool] */;
  %617 = reshape(%615, newshape=[540, 2]) /* ty=Tensor[(540, 2), float64] */;
  %618 = @func_2451(%616, %617) /* ty=(Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) */;
  %619 = @func_5084() /* ty=(Tensor[(540, 2), float32],) */;
  %620 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 48), int64] */, dtype="int64") /* ty=Tensor[(1, 48), int64] */;
  %621 = cast(%var_5732, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %622 = reshape(%620, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), int64] */;
  %623 = reshape(%621, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), uint32] */;
  %624 = @func_4032(%622, %623) /* ty=(Tensor[(8, 6, 6), bool],) */;
  %625 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %626 = %609.2;
  %627 = %613.0;
  %628 = %618.0;
  %629 = %619.0;
  %630 = %624.0;
  %631 = %625.0;
  (%610, %626, meta[relay.Constant][31] /* ty=Tensor[(1, 224), int16] */, %627, %628, %var_5698, meta[relay.Constant][32] /* ty=Tensor[(1080), float64] */, %629, %630, meta[relay.Constant][33] /* ty=Tensor[(1, 48), int64] */, %var_5732, %631)
}

def @func_5521() -> Tensor[(10, 6, 13), float32] {
  %632 = @func_3092() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %632.0
}

def @func_5956() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %633 = @func_4246() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %634 = @func_5333() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %635 = %633.0;
  %636 = %634.0;
  (%635, %636)
}

def @func_5017(%var_4939: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %637 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %638 = cast(%var_4939, dtype="int16") /* ty=Tensor[(224), int16] */;
  %639 = reshape(%638, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %640 = @func_1892(%639) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) */;
  %641 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %642 = cast(%var_4939, dtype="int16") /* ty=Tensor[(224), int16] */;
  %643 = reshape(%642, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %644 = @func_842(%643) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
  %645 = %637.0;
  %646 = %640.1;
  %647 = %641.1;
  %648 = @func_1535() /* ty=Tensor[(10, 6, 13), int8] */;
  %649 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
  %650 = %644.0;
  (%645, %646, %var_4939, %647, %648, %649, %650)
}

def @func_1213(%var_1186: Tensor[(3, 2, 5), float64]) -> (Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) {
  %651 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
  %652 = asin(%651) /* ty=Tensor[(3, 2, 5), float32] */;
  %653 = cast(%652, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %654 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(3, 2, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 2, 5), float32] */, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %657 = divide(%655, %656) /* ty=Tensor[(3, 2, 5), float64] */;
  %658 = cast(%var_1186, dtype="uint64") /* ty=Tensor[(3, 2, 5), uint64] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="uint64") /* ty=Tensor[(3, 2, 5), uint64] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %662 = cast(%var_1186, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %663 = bitwise_and(%660, %661) /* ty=Tensor[(3, 2, 5), uint64] */;
  %664 = atanh(%662) /* ty=Tensor[(3, 2, 5), float64] */;
  (%663, %664)
}

def @func_8414() -> (Tensor[(10, 6, 13), float32],) {
  %665 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %666 = %665.1;
  (%666,)
}

def @func_9429(%var_9424: Tensor[(1, 7, 12), float64]) -> Tensor[(1, 7, 12), float64] {
  %667 = cast(%var_9424, dtype="float64") /* ty=Tensor[(1, 7, 12), float64] */;
  cos(%667) /* ty=Tensor[(1, 7, 12), float64] */
}

def @func_6374(%var_6366: Tensor[(1, 10, 7), float64]) -> Tensor[(1, 10, 7), float64] {
  %668 = cast(%var_6366, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  erf(%668) /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_2323() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %669 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %670 = %669.1;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
  %672 = @func_1535() /* ty=Tensor[(10, 6, 13), int8] */;
  %673 = log10(%671) /* ty=Tensor[(10, 6, 13), float64] */;
  (%672, %673)
}

def @func_4406() -> (Tensor[(10, 6, 13), int8],) {
  %674 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %675 = %674.0;
  (%675,)
}

def @func_6841() -> (Tensor[(10, 6, 13), int8],) {
  %676 = @func_4695() /* ty=Tensor[(10, 6, 13), int8] */;
  (%676,)
}

def @func_6879() -> (Tensor[(10, 6, 13), float32],) {
  %677 = @func_5956() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %678 = %677.1;
  (%678,)
}

def @func_7037() -> Tensor[(528), float64] {
  @func_6765() /* ty=Tensor[(528), float64] */
}

def @func_9064() -> (Tensor[(10, 6, 13), int8],) {
  %679 = @func_8637() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %680 = %679.4;
  (%680,)
}

def @func_7786() -> Tensor[(10, 6, 13), float32] {
  %681 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %681.0
}

def @func_8769() -> Tensor[(10, 6, 13), float64] {
  %682 = @func_4624() /* ty=(Tensor[(10, 6, 13), float64],) */;
  %682.0
}

def @func_11429() -> Tensor[(10, 6, 13), int8] {
  %683 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %683.0
}

def @func_2855() -> (Tensor[(10, 6, 13), float32],) {
  %684 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
  (%684,)
}

def @func_8031() -> (Tensor[(10, 6, 13), int8],) {
  %685 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %686 = %685.0;
  (%686,)
}

def @func_10677() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) {
  %687 = @func_1802() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %688 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %689 = %687.0;
  %690 = %688.1;
  (%689, %690)
}

def @func_4137() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %691 = @func_1802() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %692 = @func_1850() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) */;
  %693 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %694 = %691.0;
  %695 = %692.0;
  %696 = %693.0;
  (%694, %695, %696)
}

def @func_5452() -> Tensor[(10, 6, 13), float32] {
  @func_4739() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_4662() -> Tensor[(10, 6, 13), float32] {
  %697 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %697.0
}

def @func_11254(%var_11252: Tensor[(800), bool]) -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(224), int16], Tensor[(7, 130), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(910), float64], Tensor[(800), bool]) {
  %698 = @func_8940() /* ty=(Tensor[(10, 6, 13), float64],) */;
  %699 = @func_7754() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %700 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
  %701 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 130), float64] */, dtype="float64") /* ty=Tensor[(7, 130), float64] */;
  %702 = cast(meta[relay.Constant][36] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %703 = reshape(%701, newshape=[1, 910]) /* ty=Tensor[(1, 910), float64] */;
  %704 = reshape(%702, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %705 = @func_5193(%703, %704) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) */;
  %706 = @func_7061() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %707 = cast(%var_11252, dtype="bool") /* ty=Tensor[(800), bool] */;
  %708 = cast(%var_11252, dtype="bool") /* ty=Tensor[(800), bool] */;
  %709 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 130), float64] */, dtype="float64") /* ty=Tensor[(7, 130), float64] */;
  %710 = reshape(%707, newshape=[5, 16, 10]) /* ty=Tensor[(5, 16, 10), bool] */;
  %711 = reshape(%708, newshape=[5, 16, 10]) /* ty=Tensor[(5, 16, 10), bool] */;
  %712 = reshape(%709, newshape=[910]) /* ty=Tensor[(910), float64] */;
  %713 = @func_8277(%710, %711, %712) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(5, 16, 10), float64], Tensor[(9, 12, 10), float32], float64, Tensor[(910), float64], Tensor[(112, 2), int16]) */;
  %714 = %698.0;
  %715 = @func_4695() /* ty=Tensor[(10, 6, 13), int8] */;
  %716 = %699.0;
  %717 = %700.2;
  %718 = %705.1;
  %719 = %706.0;
  %720 = %713.4;
  (%714, %715, %716, %717, %718, meta[relay.Constant][35] /* ty=Tensor[(7, 130), float64] */, meta[relay.Constant][36] /* ty=Tensor[(224), int16] */, %719, %720, %var_11252)
}

def @func_9267() -> Tensor[(10, 6, 13), int8] {
  %721 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %721.0
}

def @func_8503() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %722 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
  %723 = @func_2530() /* ty=Tensor[(10, 6, 13), int8] */;
  %724 = @func_2489() /* ty=Tensor[(10, 6, 13), int8] */;
  (%722, %723, %724)
}

def @func_10486() -> (Tensor[(10, 6, 13), int8],) {
  %725 = @func_6162() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %726 = %725.0;
  (%726,)
}

def @func_1451() -> Tensor[(10, 6, 13), float32] {
  @func_1305() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_8637() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %727 = @func_6879() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %728 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %730 = reshape(%729, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %731 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %732 = @func_8464() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %733 = %727.0;
  %734 = @func_2923(%730) /* ty=Tensor[(10, 6, 13), bool] */;
  %735 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  %736 = %731.0;
  %737 = %732.0;
  %738 = @func_5144() /* ty=Tensor[(10, 6, 13), int8] */;
  %739 = @func_4739() /* ty=Tensor[(10, 6, 13), float32] */;
  (%728, %733, %734, %735, %736, %737, %738, %739)
}

def @func_3852(%var_3846: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), bool] {
  %740 = @func_1305() /* ty=Tensor[(10, 6, 13), float32] */;
  %741 = cast(%var_3846, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%740, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%743, %744) /* ty=Tensor[(10, 6, 13), bool] */
}

def @func_4246() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %745 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %746 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %747 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  %748 = %745.0;
  %749 = %746.1;
  (%747, %748, %749)
}

def @func_9646() -> (Tensor[(10, 6, 13), float32],) {
  %750 = @func_8346() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %751 = %750.0;
  (%751,)
}

def @func_8333() -> Tensor[(10, 6, 13), float32] {
  %752 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %752.1
}

def @func_10427() -> (Tensor[(10, 6, 13), float32], Tensor[(15, 9, 16), float32]) {
  %753 = @func_9778() /* ty=(Tensor[(15, 9, 16), float32], Tensor[(10, 6, 13), int8]) */;
  %754 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
  %755 = %753.0;
  (%754, %755)
}

def @func_10279() -> Tensor[(10, 6, 13), float64] {
  @func_1045() /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_11135() -> (Tensor[(10, 6, 13), float32],) {
  %756 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
  (%756,)
}

def @func_5996() -> Tensor[(10, 6, 13), int8] {
  %757 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %757.0
}

def @func_7754() -> (Tensor[(10, 6, 13), int8],) {
  %758 = @func_5144() /* ty=Tensor[(10, 6, 13), int8] */;
  (%758,)
}

def @func_7722() -> Tensor[(10, 6, 13), int8] {
  @func_5260() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_4876() -> (Tensor[(10, 6, 13), int8],) {
  %759 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  (%759,)
}

def @func_8155() -> (Tensor[(10, 6, 13), int8],) {
  %760 = @func_2976() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %761 = %760.1;
  (%761,)
}

def @func_6676(%var_6638: int16, %var_6639: Tensor[(11, 11, 7), int16], %var_6652: Tensor[(130, 6), float32], %var_6655: Tensor[(130, 6), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(130, 6), uint16], Tensor[(130, 6), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(11, 11, 7), int16]) {
  %762 = cast(%var_6652, dtype="float32") /* ty=Tensor[(130, 6), float32] */;
  %763 = reshape(%762, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %764 = @func_1663(%763) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %765 = cast(%var_6655, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %766 = shape_of(%var_6652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %767 = cast(%var_6652, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %769 = cast(%var_6652, dtype="float32") /* ty=Tensor[(130, 6), float32] */;
  %770 = cast(meta[relay.Constant][37] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %771 = reshape(%770, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), int16] */;
  %772 = @func_762(%771) /* ty=(Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) */;
  %773 = cast(%var_6639, dtype="float32") /* ty=Tensor[(11, 11, 7), float32] */;
  %774 = sqrt(%773) /* ty=Tensor[(11, 11, 7), float32] */;
  %775 = cast(%774, dtype="int64") /* ty=Tensor[(11, 11, 7), int64] */;
  %776 = shape_of(%var_6639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_6639, dtype="int64") /* ty=Tensor[(11, 11, 7), int64] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %779 = logical_xor(%777, %778) /* ty=Tensor[(11, 11, 7), int64] */;
  %780 = cast(%var_6638, dtype="int16") /* ty=int16 */;
  %781 = cast(%var_6639, dtype="int16") /* ty=Tensor[(11, 11, 7), int16] */;
  %782 = bitwise_and(%780, %781) /* ty=Tensor[(11, 11, 7), int16] */;
  %783 = cast(%782, dtype="int16") /* ty=Tensor[(11, 11, 7), int16] */;
  %784 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%779, dtype="int16") /* ty=Tensor[(11, 11, 7), int16] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %787 = %764.0;
  %788 = subtract(%767, %768) /* ty=Tensor[(130, 6), uint16] */;
  %789 = sigmoid(%769) /* ty=Tensor[(130, 6), float32] */;
  %790 = %772.4;
  %791 = bitwise_xor(%785, %786) /* ty=Tensor[(11, 11, 7), int16] */;
  (%787, %788, %789, %790, meta[relay.Constant][37] /* ty=Tensor[(224), int16] */, %791)
}

def @func_6537() -> Tensor[(10, 6, 13), int8] {
  %792 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %792.0
}

def @func_12371() -> Tensor[(10, 6, 13), float32] {
  %793 = @func_4137() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %793.1
}

def @func_8438() -> (Tensor[(10, 6, 13), int8],) {
  %794 = @func_7754() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %795 = %794.0;
  (%795,)
}

def @func_2476(%var_2471: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), uint16] {
  %796 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
  %797 = cast(%var_2471, dtype="uint16") /* ty=Tensor[(10, 6, 13), uint16] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="uint16") /* ty=Tensor[(10, 6, 13), uint16] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%799, %800) /* ty=Tensor[(10, 6, 13), uint16] */
}

def @func_842(%var_835: Tensor[(2, 112), int16]) -> (Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) {
  %801 = cast(%var_835, dtype="int16") /* ty=Tensor[(2, 112), int16] */;
  %802 = reshape(%801, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), int16] */;
  %803 = @func_762(%802) /* ty=(Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) */;
  %804 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %805 = %803.1;
  (%804, %805, %var_835)
}

def @main(%var_12477: Tensor[(6, 14, 12), int8]) -> Tensor[(6, 14, 12), int8] {
  %806 = cast(%var_12477, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
  %807 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(6, 14, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 14, 12), int8] */, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%808, %809) /* ty=Tensor[(6, 14, 12), int8] */
}

def @func_8852() -> (Tensor[(10, 6, 13), float32],) {
  %810 = @func_5912() /* ty=Tensor[(10, 6, 13), float32] */;
  (%810,)
}

def @func_12277() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64]) {
  %811 = @func_5521() /* ty=Tensor[(10, 6, 13), float32] */;
  %812 = cast(%811, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %813 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %814 = asinh(%812) /* ty=Tensor[(10, 6, 13), float32] */;
  %815 = %813.1;
  (%814, %815)
}

def @func_4917() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %816 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %817 = @func_2544() /* ty=Tensor[(10, 6, 13), int8] */;
  %818 = @func_1305() /* ty=Tensor[(10, 6, 13), float32] */;
  %819 = %816.0;
  (%817, %818, %819)
}

def @func_3194() -> (Tensor[(10, 6, 13), float32],) {
  %820 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
  (%820,)
}

def @func_9316() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %821 = @func_9122() /* ty=Tensor[(10, 6, 13), float32] */;
  %822 = @func_7722() /* ty=Tensor[(10, 6, 13), int8] */;
  %823 = @func_5144() /* ty=Tensor[(10, 6, 13), int8] */;
  (%821, %822, %823)
}

def @func_1399() -> Tensor[(10, 6, 13), float32] {
  %824 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %825 = %824.0;
  %826 = cast(%825, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  cos(%826) /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_5642(%var_5622: Tensor[(528), float64]) -> (Tensor[(4, ?, 7), bool], Tensor[(28), float64], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %827 = cast(meta[relay.Constant][39] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %828 = reshape(%827, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), float64] */;
  %829 = @func_2731(%828) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) */;
  %830 = cast(%var_5622, dtype="float64") /* ty=Tensor[(528), float64] */;
  %831 = reshape(%830, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), float64] */;
  %832 = @func_1019(%831) /* ty=(Tensor[(11, 3, 16), float64],) */;
  %833 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %834 = %833.0;
  %835 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
  %836 = cast(%835, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %837 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%834, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %840 = cast(%834, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %841 = reshape(%840, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %842 = @func_1663(%841) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %843 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %844 = %829.4;
  %845 = %832.0;
  %846 = greater(%838, %839) /* ty=Tensor[(10, 6, 13), bool] */;
  %847 = %842.1;
  %848 = %843.0;
  (%844, meta[relay.Constant][39] /* ty=Tensor[(28), float64] */, %845, %var_5622, %846, %847, %848)
}

def @func_8895(%var_8892: Tensor[(7, 5, 9), float64]) -> (Tensor[(7, 5, 9), float64],) {
  %849 = cast(%var_8892, dtype="float64") /* ty=Tensor[(7, 5, 9), float64] */;
  %850 = sin(%849) /* ty=Tensor[(7, 5, 9), float64] */;
  (%850,)
}

def @func_4624() -> (Tensor[(10, 6, 13), float64],) {
  %851 = @func_3710() /* ty=(Tensor[(10, 6, 13), float64],) */;
  %852 = %851.0;
  (%852,)
}

def @func_11782() -> (Tensor[(10, 6, 13), int8],) {
  %853 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %854 = %853.0;
  (%854,)
}

def @func_3304() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %855 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %856 = %855.0;
  %857 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  %858 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
  (%856, %857, %858)
}

def @func_9404() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %859 = @func_7754() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %860 = %859.0;
  %861 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  (%860, %861)
}

def @func_3622() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) {
  %862 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %863 = @func_2544() /* ty=Tensor[(10, 6, 13), int8] */;
  %864 = %862.2;
  (%863, %864)
}

def @func_5333() -> (Tensor[(10, 6, 13), float32],) {
  %865 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
  (%865,)
}

def @func_6765() -> Tensor[(528), float64] {
  %866 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
  %866.2
}

def @func_10443() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %867 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %868 = @func_8346() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %869 = %867.0;
  %870 = %868.0;
  (%869, %870)
}

def @func_8214() -> Tensor[(10, 6, 13), float64] {
  %871 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
  %871.0
}

def @func_7283(%var_7270: Tensor[(4, 1, 15), float32]) -> Tensor[(4, 1, 15), float32] {
  %872 = cast(%var_7270, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  asinh(%872) /* ty=Tensor[(4, 1, 15), float32] */
}

def @func_9348(%var_9329: Tensor[(7, 10, 9), int16], %var_9330: Tensor[(7, 10, 9), int16], %var_9343: Tensor[(12960), float32]) -> (Tensor[(7, 10, 9), int16], Tensor[(1080, 12), float32], Tensor[(1080), float32], Tensor[(12960), float32]) {
  %873 = cast(%var_9330, dtype="int16") /* ty=Tensor[(7, 10, 9), int16] */;
  %874 = shape_of(%var_9329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%var_9329, dtype="int16") /* ty=Tensor[(7, 10, 9), int16] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %877 = cast(meta[relay.Constant][40] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %878 = cast(%var_9343, dtype="float32") /* ty=Tensor[(12960), float32] */;
  %879 = reshape(%877, newshape=[1080, 1]) /* ty=Tensor[(1080, 1), float32] */;
  %880 = reshape(%878, newshape=[1080, 12]) /* ty=Tensor[(1080, 12), float32] */;
  %881 = @func_2399(%879, %880) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(540, 2), bool], Tensor[(1080, 12), int8], Tensor[(1080, 12), float32], Tensor[(11, 3, 16), float64], Tensor[(528), float64]) */;
  %882 = subtract(%875, %876) /* ty=Tensor[(7, 10, 9), int16] */;
  %883 = %881.3;
  (%882, %883, meta[relay.Constant][40] /* ty=Tensor[(1080), float32] */, %var_9343)
}

def @func_9536(%var_9517: Tensor[(2, 8, 2), float64]) -> (Tensor[(2, 8, 2), float64], Tensor[(10, 6, 13), float64]) {
  %884 = cast(%var_9517, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %885 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(2, 8, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 8, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %888 = @func_3058() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %889 = floor_mod(%886, %887) /* ty=Tensor[(2, 8, 2), float64] */;
  %890 = %888.1;
  (%889, %890)
}

def @func_12001() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) {
  %891 = @func_9143() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %892 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %893 = @func_8414() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %894 = @func_9316() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %895 = cast(meta[relay.Constant][42] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %896 = reshape(%895, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %897 = @func_3544(%896) /* ty=(Tensor[(10, 6, 2), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) */;
  %898 = %891.1;
  %899 = %892.0;
  %900 = @func_5521() /* ty=Tensor[(10, 6, 13), float32] */;
  %901 = %893.0;
  %902 = %894.2;
  %903 = %897.5;
  (%898, %899, %900, %901, %902, %903, meta[relay.Constant][42] /* ty=Tensor[(224), int16] */)
}

def @func_2489() -> Tensor[(10, 6, 13), int8] {
  @func_1720() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_12463(%var_12458: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(9, 4, 12), uint32], uint32, Tensor[(2, 216), uint32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), float64]) {
  %904 = cast(meta[relay.Constant][43] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %905 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 216), uint32] */, dtype="uint32") /* ty=Tensor[(2, 216), uint32] */;
  %906 = reshape(%904, newshape=[]) /* ty=uint32 */;
  %907 = reshape(%905, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), uint32] */;
  %908 = cast(%var_12458, dtype="float64") /* ty=Tensor[(528), float64] */;
  %909 = reshape(%908, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %910 = @func_2103(%909) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %911 = @func_2489() /* ty=Tensor[(10, 6, 13), int8] */;
  %912 = @func_6603(%906, %907) /* ty=Tensor[(9, 4, 12), uint32] */;
  %913 = %910.2;
  %914 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  (%911, %912, meta[relay.Constant][43] /* ty=uint32 */, meta[relay.Constant][44] /* ty=Tensor[(2, 216), uint32] */, %913, %var_12458, %914)
}

def @func_8346() -> (Tensor[(10, 6, 13), float32],) {
  %915 = @func_4137() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %916 = %915.1;
  (%916,)
}

def @func_3244() -> (Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) {
  %917 = cast(meta[relay.Constant][45] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %918 = reshape(%917, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
  %919 = @func_2203(%918) /* ty=(Tensor[(7, 3, 8), float32],) */;
  %920 = %919.0;
  %921 = cast(%920, dtype="float64") /* ty=Tensor[(7, 3, 8), float64] */;
  %922 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
  %923 = log(%921) /* ty=Tensor[(7, 3, 8), float64] */;
  (%922, meta[relay.Constant][45] /* ty=Tensor[(168), float32] */, %923)
}

def @func_2579() -> Tensor[(10, 6, 13), float32] {
  @func_2114() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_5144() -> Tensor[(10, 6, 13), int8] {
  %924 = @func_4917() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %924.0
}

def @func_6272() -> Tensor[(10, 6, 13), int8] {
  @func_2137() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_5193(%var_5188: Tensor[(1, 910), float64], %var_5189: Tensor[(2, 112), int16]) -> (Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) {
  %925 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
  %926 = cast(-7.26904f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %927 = cast(%var_5188, dtype="float64") /* ty=Tensor[(1, 910), float64] */;
  %928 = cast(%var_5189, dtype="int16") /* ty=Tensor[(2, 112), int16] */;
  %929 = reshape(%926, newshape=[]) /* ty=float64 */;
  %930 = reshape(%927, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float64] */;
  %931 = reshape(%928, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %932 = @func_3907(%929, %930, %931) /* ty=(Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) */;
  %933 = %925.1;
  %934 = %932.4;
  (%933, %934, -7.26904f64 /* ty=float64 */, %var_5188, %var_5189)
}

def @func_3693() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) {
  %935 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
  %936 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  (%935, %936)
}

def @func_10371(%var_10351: Tensor[(528), float64], %var_10352: Tensor[(455, 2), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(528), float64], Tensor[(455, 2), float64], Tensor[(224), int16]) {
  %937 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %938 = %937.1;
  %939 = cast(%938, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %940 = reshape(%939, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %941 = @func_1663(%940) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %942 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %943 = @func_9316() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %944 = cast(%var_10351, dtype="float64") /* ty=Tensor[(528), float64] */;
  %945 = cast(%var_10352, dtype="float64") /* ty=Tensor[(455, 2), float64] */;
  %946 = cast(meta[relay.Constant][46] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %947 = reshape(%944, newshape=[2, 264]) /* ty=Tensor[(2, 264), float64] */;
  %948 = reshape(%945, newshape=[1, 910]) /* ty=Tensor[(1, 910), float64] */;
  %949 = reshape(%946, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %950 = @func_5828(%947, %948, %949) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(2, 264), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(1, 910), float64], Tensor[(224), int16]) */;
  %951 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  %952 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %953 = %941.1;
  %954 = %942.0;
  %955 = %943.0;
  %956 = %950.6;
  (%951, %952, %938, %953, %954, %955, %956, %var_10351, %var_10352, meta[relay.Constant][46] /* ty=Tensor[(224), int16] */)
}

def @func_7556() -> (Tensor[(10, 6, 13), float32],) {
  %957 = @func_3194() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %958 = %957.0;
  (%958,)
}

def @func_3955(%var_3946: Tensor[(1, 30), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(1, 30), float64]) {
  %959 = cast(%var_3946, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
  %960 = reshape(%959, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %961 = @func_3415(%960) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) */;
  %962 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  %963 = %961.1;
  (%962, %963, %var_3946)
}

def @func_8815(%var_8796: Tensor[(168), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) {
  %964 = cast(%var_8796, dtype="float32") /* ty=Tensor[(168), float32] */;
  %965 = reshape(%964, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
  %966 = @func_2203(%965) /* ty=(Tensor[(7, 3, 8), float32],) */;
  %967 = %966.0;
  %968 = cast(%967, dtype="float64") /* ty=Tensor[(7, 3, 8), float64] */;
  %969 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
  %970 = acosh(%968) /* ty=Tensor[(7, 3, 8), float64] */;
  (%969, %var_8796, %970)
}

def @func_4739() -> Tensor[(10, 6, 13), float32] {
  %971 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %971.3
}

def @func_11838() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %972 = @func_10796() /* ty=(Tensor[(10, 6, 13), float64],) */;
  %973 = @func_8233() /* ty=Tensor[(10, 6, 13), int8] */;
  %974 = %972.0;
  (%973, %974)
}

def @func_10100(%var_10086: Tensor[(910, 1), float64], %var_10094: Tensor[(14, 13, 5), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], float64, Tensor[(910, 1), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(14, 13, 5), int8]) {
  %975 = @func_3622() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) */;
  %976 = @func_7061() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %977 = cast(-7.59807f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %978 = cast(%var_10086, dtype="float64") /* ty=Tensor[(910, 1), float64] */;
  %979 = cast(meta[relay.Constant][47] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %980 = reshape(%977, newshape=[]) /* ty=float64 */;
  %981 = reshape(%978, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float64] */;
  %982 = reshape(%979, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %983 = @func_3907(%980, %981, %982) /* ty=(Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) */;
  %984 = %983.0;
  %985 = cast(%var_10094, dtype="int8") /* ty=Tensor[(14, 13, 5), int8] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%984, dtype="int8") /* ty=Tensor[(14, 13, 5), int8] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %989 = %975.0;
  %990 = %976.0;
  %991 = @func_7819() /* ty=Tensor[(10, 6, 13), int8] */;
  %992 = left_shift(%987, %988) /* ty=Tensor[(14, 13, 5), int8] */;
  (%989, %990, -7.59807f64 /* ty=float64 */, %var_10086, meta[relay.Constant][47] /* ty=Tensor[(224), int16] */, %991, %992)
}

def @func_8131(%var_8082: Tensor[(16, 8, 11), uint32]) -> (Tensor[(16, 8, 11), uint32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(16, 8, 11), float32]) {
  %993 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 8, 11), uint32] */, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
  %994 = shape_of(%var_8082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%var_8082, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %997 = @func_7061() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %998 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 8, 11), uint32] */, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
  %999 = right_shift(%995, %996) /* ty=Tensor[(16, 8, 11), uint32] */;
  %1000 = @func_5452() /* ty=Tensor[(10, 6, 13), float32] */;
  %1001 = %997.1;
  %1002 = sinh(%998) /* ty=Tensor[(16, 8, 11), float32] */;
  (%999, %1000, %1001, %1002)
}

def @func_10188() -> Tensor[(10, 6, 13), int8] {
  %1003 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %1003.0
}

def @func_8194() -> Tensor[(10, 6, 13), float32] {
  %1004 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %1004.0
}

def @func_4558(%var_4520: Tensor[(12, 3, 4), int64], %var_4550: Tensor[(30), float64]) -> (Tensor[(12, 3, 4), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  %1005 = cast(%var_4520, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %1006 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(12, 3, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 3, 4), int64] */, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1009 = @func_4137() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %1010 = %1009.2;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %1012 = reshape(%1011, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %1013 = cast(%var_4550, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1014 = reshape(%1013, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %1015 = @func_1213(%1014) /* ty=(Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) */;
  %1016 = greater(%1007, %1008) /* ty=Tensor[(12, 3, 4), bool] */;
  %1017 = @func_3852(%1012) /* ty=Tensor[(10, 6, 13), bool] */;
  %1018 = %1015.1;
  (%1016, %1010, %1017, %1018, %var_4550)
}

def @func_10964() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(528), float64]) {
  %1019 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
  %1020 = %1019.0;
  %1021 = @func_2137() /* ty=Tensor[(10, 6, 13), int8] */;
  %1022 = @func_7443() /* ty=Tensor[(528), float64] */;
  (%1020, %1021, %1022)
}

def @func_1663(%var_1633: Tensor[(10, 6, 13), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %1023 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  %1024 = cast(%var_1633, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %1025 = shape_of(%1023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1026 = cast(%1023, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1028 = mod(%1026, %1027) /* ty=Tensor[(10, 6, 13), float32] */;
  %1029 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  (%1028, %1029)
}

def @func_957() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %1030 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  %1031 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  %1032 = cast(%1031, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %1033 = sin(%1032) /* ty=Tensor[(10, 6, 13), float32] */;
  %1034 = cast(%1033, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %1035 = shape_of(%1030, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%1030, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1038 = divide(%1036, %1037) /* ty=Tensor[(10, 6, 13), float32] */;
  %1039 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  (%1038, %1039)
}

def @func_6308(%var_6303: Tensor[(11, 7, 5), float64], %var_6304: Tensor[(11, 7, 5), float64]) -> (Tensor[(11, 7, 5), bool],) {
  %1040 = cast(%var_6304, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %1041 = shape_of(%var_6303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%var_6303, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1044 = less(%1042, %1043) /* ty=Tensor[(11, 7, 5), bool] */;
  (%1044,)
}

def @func_4445() -> (Tensor[(10, 6, 13), int8],) {
  %1045 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  (%1045,)
}

def @func_2530() -> Tensor[(10, 6, 13), int8] {
  %1046 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %1046.0
}

def @func_9895() -> (Tensor[(10, 6, 13), int8],) {
  %1047 = @func_4876() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %1048 = %1047.0;
  (%1048,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2114() -> Tensor[(10, 6, 13), float32] {
  %0 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %0.0
}

def @func_3092() -> (Tensor[(10, 6, 13), float32],) {
  %1 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
  (%1,)
}

def @func_7787() -> Tensor[(10, 6, 13), float32] {
  %3 = fn () -> Tensor[(10, 6, 13), float32] {
    %2 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %2.0
  };
  %3() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_2580() -> Tensor[(10, 6, 13), float32] {
  %4 = fn () -> Tensor[(10, 6, 13), float32] {
    @func_2114() /* ty=Tensor[(10, 6, 13), float32] */
  };
  %4() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_5500(%var_5495: Tensor[(9, 13, 15), float32], %var_5496: Tensor[(9, 13, 15), float32]) -> (Tensor[(9, 13, 15), float32],) {
  %5 = cast(%var_5496, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %6 = shape_of(%var_5495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_5495, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %9 = floor_mod(%7, %8) /* ty=Tensor[(9, 13, 15), float32] */;
  (%9,)
}

def @func_8032() -> (Tensor[(10, 6, 13), int8],) {
  %12 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %10 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %11 = %10.0;
    (%11,)
  };
  %12() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_5645(%var_5643: Tensor[(528), float64]) -> (Tensor[(4, ?, 7), bool], Tensor[(28), float64], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  @func_5642(%var_5643) /* ty=(Tensor[(4, ?, 7), bool], Tensor[(28), float64], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */
}

def @func_6607(%var_6605: uint32, %var_6606: Tensor[(9, 4, 12), uint32]) -> Tensor[(9, 4, 12), uint32] {
  @func_6603(%var_6605, %var_6606) /* ty=Tensor[(9, 4, 12), uint32] */
}

def @func_5523() -> Tensor[(10, 6, 13), float32] {
  @func_5521() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_8214() -> Tensor[(10, 6, 13), float64] {
  %13 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
  %13.0
}

def @func_10137(%var_10110: Tensor[(1, 6, 8), uint32]) -> (Tensor[(1, 6, 8), uint32], Tensor[(10, 6, 13), float32]) {
  %14 = cast(meta[relay.Constant][0] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %15 = cast(%var_10110, dtype="uint32") /* ty=Tensor[(1, 6, 8), uint32] */;
  %16 = bitwise_xor(%14, %15) /* ty=Tensor[(1, 6, 8), uint32] */;
  %17 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  (%16, %17)
}

def @func_4663() -> Tensor[(10, 6, 13), float32] {
  %19 = fn () -> Tensor[(10, 6, 13), float32] {
    %18 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %18.0
  };
  %19() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_1047() -> Tensor[(10, 6, 13), float64] {
  @func_1045() /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_9267() -> Tensor[(10, 6, 13), int8] {
  %20 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %20.0
}

def @func_12463(%var_12458: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(9, 4, 12), uint32], uint32, Tensor[(2, 216), uint32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), float64]) {
  %21 = cast(meta[relay.Constant][1] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 216), uint32] */, dtype="uint32") /* ty=Tensor[(2, 216), uint32] */;
  %23 = reshape(%21, newshape=[]) /* ty=uint32 */;
  %24 = reshape(%22, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), uint32] */;
  %25 = cast(%var_12458, dtype="float64") /* ty=Tensor[(528), float64] */;
  %26 = reshape(%25, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %27 = @func_2103(%26) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %28 = @func_2489() /* ty=Tensor[(10, 6, 13), int8] */;
  %29 = @func_6603(%23, %24) /* ty=Tensor[(9, 4, 12), uint32] */;
  %30 = %27.2;
  %31 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  (%28, %29, meta[relay.Constant][1] /* ty=uint32 */, meta[relay.Constant][2] /* ty=Tensor[(2, 216), uint32] */, %30, %var_12458, %31)
}

def @func_283(%var_282: Tensor[(9, 12, 10), float32]) -> (Tensor[(9, 12, 10), float32],) {
  %34 = fn (%var_272: Tensor[(9, 12, 10), float32]) -> (Tensor[(9, 12, 10), float32],) {
    %32 = cast(%var_272, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
    %33 = sinh(%32) /* ty=Tensor[(9, 12, 10), float32] */;
    (%33,)
  };
  %34(%var_282) /* ty=(Tensor[(9, 12, 10), float32],) */
}

def @func_1451() -> Tensor[(10, 6, 13), float32] {
  @func_1305() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_2455(%var_2453: Tensor[(7, 5, 16), bool], %var_2454: Tensor[(540, 2), float64]) -> (Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) {
  @func_2451(%var_2453, %var_2454) /* ty=(Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) */
}

def @func_2476(%var_2471: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), uint16] {
  %35 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
  %36 = cast(%var_2471, dtype="uint16") /* ty=Tensor[(10, 6, 13), uint16] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="uint16") /* ty=Tensor[(10, 6, 13), uint16] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%38, %39) /* ty=Tensor[(10, 6, 13), uint16] */
}

def @func_5998() -> Tensor[(10, 6, 13), int8] {
  @func_5996() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_8853() -> (Tensor[(10, 6, 13), float32],) {
  %41 = fn () -> (Tensor[(10, 6, 13), float32],) {
    %40 = @func_5912() /* ty=Tensor[(10, 6, 13), float32] */;
    (%40,)
  };
  %41() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_8942() -> (Tensor[(10, 6, 13), float64],) {
  @func_8940() /* ty=(Tensor[(10, 6, 13), float64],) */
}

def @func_1535() -> Tensor[(10, 6, 13), int8] {
  %42 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %42.0
}

def @func_5573(%var_5564: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(528), float64]) {
  %43 = cast(%var_5564, dtype="float64") /* ty=Tensor[(528), float64] */;
  %44 = reshape(%43, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %45 = @func_2103(%44) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %46 = @func_2137() /* ty=Tensor[(10, 6, 13), int8] */;
  %47 = %45.2;
  (%46, %47, %var_5564)
}

def @func_2545() -> Tensor[(10, 6, 13), int8] {
  %49 = fn () -> Tensor[(10, 6, 13), int8] {
    %48 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %48.0
  };
  %49() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_5642(%var_5622: Tensor[(528), float64]) -> (Tensor[(4, ?, 7), bool], Tensor[(28), float64], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %51 = reshape(%50, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), float64] */;
  %52 = @func_2731(%51) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) */;
  %53 = cast(%var_5622, dtype="float64") /* ty=Tensor[(528), float64] */;
  %54 = reshape(%53, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), float64] */;
  %55 = @func_1019(%54) /* ty=(Tensor[(11, 3, 16), float64],) */;
  %56 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %57 = %56.0;
  %58 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
  %59 = cast(%58, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %60 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%57, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = cast(%57, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %64 = reshape(%63, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %65 = @func_1663(%64) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %66 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %67 = %52.4;
  %68 = %55.0;
  %69 = greater(%61, %62) /* ty=Tensor[(10, 6, 13), bool] */;
  %70 = %65.1;
  %71 = %66.0;
  (%67, meta[relay.Constant][3] /* ty=Tensor[(28), float64] */, %68, %var_5622, %69, %70, %71)
}

def @func_1615() -> Tensor[(10, 6, 13), float32] {
  @func_1399() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_6682(%var_6678: int16, %var_6679: Tensor[(11, 11, 7), int16], %var_6680: Tensor[(130, 6), float32], %var_6681: Tensor[(130, 6), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(130, 6), uint16], Tensor[(130, 6), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(11, 11, 7), int16]) {
  @func_6676(%var_6678, %var_6679, %var_6680, %var_6681) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(130, 6), uint16], Tensor[(130, 6), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(11, 11, 7), int16]) */
}

def @func_11782() -> (Tensor[(10, 6, 13), int8],) {
  %72 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %73 = %72.0;
  (%73,)
}

def @func_1045() -> Tensor[(10, 6, 13), float64] {
  %74 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
  rsqrt(%75) /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_6676(%var_6638: int16, %var_6639: Tensor[(11, 11, 7), int16], %var_6652: Tensor[(130, 6), float32], %var_6655: Tensor[(130, 6), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(130, 6), uint16], Tensor[(130, 6), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(11, 11, 7), int16]) {
  %76 = cast(%var_6652, dtype="float32") /* ty=Tensor[(130, 6), float32] */;
  %77 = reshape(%76, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %78 = @func_1663(%77) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %79 = cast(%var_6655, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %80 = shape_of(%var_6652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %81 = cast(%var_6652, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %83 = cast(%var_6652, dtype="float32") /* ty=Tensor[(130, 6), float32] */;
  %84 = cast(meta[relay.Constant][4] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %85 = reshape(%84, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), int16] */;
  %86 = @func_762(%85) /* ty=(Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) */;
  %87 = cast(%var_6639, dtype="float32") /* ty=Tensor[(11, 11, 7), float32] */;
  %88 = sqrt(%87) /* ty=Tensor[(11, 11, 7), float32] */;
  %89 = cast(%88, dtype="int64") /* ty=Tensor[(11, 11, 7), int64] */;
  %90 = shape_of(%var_6639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_6639, dtype="int64") /* ty=Tensor[(11, 11, 7), int64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %93 = logical_xor(%91, %92) /* ty=Tensor[(11, 11, 7), int64] */;
  %94 = cast(%var_6638, dtype="int16") /* ty=int16 */;
  %95 = cast(%var_6639, dtype="int16") /* ty=Tensor[(11, 11, 7), int16] */;
  %96 = bitwise_and(%94, %95) /* ty=Tensor[(11, 11, 7), int16] */;
  %97 = cast(%96, dtype="int16") /* ty=Tensor[(11, 11, 7), int16] */;
  %98 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%93, dtype="int16") /* ty=Tensor[(11, 11, 7), int16] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %101 = %78.0;
  %102 = subtract(%81, %82) /* ty=Tensor[(130, 6), uint16] */;
  %103 = sigmoid(%83) /* ty=Tensor[(130, 6), float32] */;
  %104 = %86.4;
  %105 = bitwise_xor(%99, %100) /* ty=Tensor[(11, 11, 7), int16] */;
  (%101, %102, %103, %104, meta[relay.Constant][4] /* ty=Tensor[(224), int16] */, %105)
}

def @func_2734(%var_2732: Tensor[(4, 1, 7), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) {
  @func_2731(%var_2732) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) */
}

def @func_9144() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %110 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
    %106 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %107 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
    %108 = %106.0;
    %109 = %107.1;
    (%108, %109)
  };
  %110() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */
}

def @func_1987(%var_1986: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32]) {
  %122 = fn (%var_1979: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32]) {
    %111 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
    %112 = cast(%111, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
    %113 = cast(%var_1979, dtype="int16") /* ty=Tensor[(224), int16] */;
    %114 = reshape(%113, newshape=[224]) /* ty=Tensor[(224), int16] */;
    %115 = @func_1892(%114) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) */;
    %116 = %115.0;
    %117 = cast(%116, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
    %118 = reshape(%117, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
    %119 = @func_1663(%118) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %120 = atanh(%112) /* ty=Tensor[(10, 6, 13), float32] */;
    %121 = %119.1;
    (%120, %116, %var_1979, %121)
  };
  %122(%var_1986) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32]) */
}

def @func_11371() -> (Tensor[(540, 2), float32], Tensor[(10, 6, 13), float32]) {
  @func_11369() /* ty=(Tensor[(540, 2), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_3058() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %123 = @func_2842() /* ty=Tensor[(10, 6, 13), int8] */;
  %124 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  (%123, %124)
}

def @func_8359() -> (Tensor[(10, 6, 13), float32],) {
  @func_8357() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_5335() -> (Tensor[(10, 6, 13), float32],) {
  @func_5333() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_2183(%var_2182: Tensor[(10, 6, 13), float32]) -> (Tensor[(10, 6, 13), float64],) {
  %131 = fn (%var_2158: Tensor[(10, 6, 13), float32]) -> (Tensor[(10, 6, 13), float64],) {
    %125 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
    %126 = cast(%var_2158, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
    %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
    %128 = cast(%125, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
    %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %130 = floor_divide(%128, %129) /* ty=Tensor[(10, 6, 13), float64] */;
    (%130,)
  };
  %131(%var_2182) /* ty=(Tensor[(10, 6, 13), float64],) */
}

def @func_842(%var_835: Tensor[(2, 112), int16]) -> (Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) {
  %132 = cast(%var_835, dtype="int16") /* ty=Tensor[(2, 112), int16] */;
  %133 = reshape(%132, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), int16] */;
  %134 = @func_762(%133) /* ty=(Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) */;
  %135 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %136 = %134.1;
  (%135, %136, %var_835)
}

def @func_2842() -> Tensor[(10, 6, 13), int8] {
  @func_650() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2531() -> Tensor[(10, 6, 13), int8] {
  %138 = fn () -> Tensor[(10, 6, 13), int8] {
    %137 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %137.0
  };
  %138() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9124() -> Tensor[(10, 6, 13), float32] {
  @func_9122() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_4739() -> Tensor[(10, 6, 13), float32] {
  %139 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %139.3
}

def @func_11358() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %146 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
    %140 = @func_8346() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %141 = @func_9646() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %142 = @func_9267() /* ty=Tensor[(10, 6, 13), int8] */;
    %143 = %140.0;
    %144 = @func_8194() /* ty=Tensor[(10, 6, 13), float32] */;
    %145 = %141.0;
    (%142, %143, %144, %145)
  };
  %146() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_10014() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(4, 56), float32], Tensor[(4, 56), float32]) {
  %147 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 56), int16] */, dtype="int16") /* ty=Tensor[(4, 56), int16] */;
  %148 = reshape(%147, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %149 = @func_5017(%148) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 56), int16] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %151 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 56), int16] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %152 = acosh(%151) /* ty=Tensor[(4, 56), float32] */;
  %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 56), float32] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(2), int32] */;
  %155 = cast(%152, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %157 = @func_8214() /* ty=Tensor[(10, 6, 13), float64] */;
  %158 = %149.3;
  %159 = sigmoid(%150) /* ty=Tensor[(4, 56), float32] */;
  %160 = add(%155, %156) /* ty=Tensor[(4, 56), float32] */;
  (%157, %158, %159, %160)
}

def @func_2844() -> Tensor[(10, 6, 13), int8] {
  @func_2842() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_7724() -> Tensor[(10, 6, 13), int8] {
  @func_7722() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_10371(%var_10351: Tensor[(528), float64], %var_10352: Tensor[(455, 2), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(528), float64], Tensor[(455, 2), float64], Tensor[(224), int16]) {
  %161 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %162 = %161.1;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %164 = reshape(%163, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %165 = @func_1663(%164) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %166 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %167 = @func_9316() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %168 = cast(%var_10351, dtype="float64") /* ty=Tensor[(528), float64] */;
  %169 = cast(%var_10352, dtype="float64") /* ty=Tensor[(455, 2), float64] */;
  %170 = cast(meta[relay.Constant][7] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %171 = reshape(%168, newshape=[2, 264]) /* ty=Tensor[(2, 264), float64] */;
  %172 = reshape(%169, newshape=[1, 910]) /* ty=Tensor[(1, 910), float64] */;
  %173 = reshape(%170, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %174 = @func_5828(%171, %172, %173) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(2, 264), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(1, 910), float64], Tensor[(224), int16]) */;
  %175 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  %176 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %177 = %165.1;
  %178 = %166.0;
  %179 = %167.0;
  %180 = %174.6;
  (%175, %176, %162, %177, %178, %179, %180, %var_10351, %var_10352, meta[relay.Constant][7] /* ty=Tensor[(224), int16] */)
}

def @func_11653() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8]) {
  %188 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8]) {
    %181 = @func_6631() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %182 = @func_10486() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %183 = %181.0;
    %184 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
    %185 = %182.0;
    %186 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
    %187 = @func_7722() /* ty=Tensor[(10, 6, 13), int8] */;
    (%183, %184, %185, %186, %187)
  };
  %188() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8]) */
}

def @func_7821() -> Tensor[(10, 6, 13), int8] {
  @func_7819() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_867() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) {
  %200 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) {
    %189 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
    %190 = cast(%189, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
    %191 = reshape(%190, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
    %192 = @func_684(%191) /* ty=Tensor[(10, 6, 13), uint64] */;
    %193 = cast(%192, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
    %194 = reshape(%193, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
    %195 = cast(meta[relay.Constant][8] /* ty=Tensor[(540, 2), float32] */, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
    %196 = reshape(%195, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
    %197 = @func_281(%196) /* ty=(Tensor[(9, 12, 10), float32],) */;
    %198 = @func_684(%194) /* ty=Tensor[(10, 6, 13), uint64] */;
    %199 = %197.0;
    (%189, %192, %198, %199, meta[relay.Constant][8] /* ty=Tensor[(540, 2), float32] */)
  };
  %200() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */
}

def @func_2103(%var_2093: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) {
  %201 = cast(%var_2093, dtype="float64") /* ty=Tensor[(528), float64] */;
  %202 = reshape(%201, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), float64] */;
  %203 = @func_1019(%202) /* ty=(Tensor[(11, 3, 16), float64],) */;
  %204 = @func_1850() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) */;
  %205 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
  %206 = %203.0;
  %207 = %204.1;
  (%205, %206, %var_2093, %207)
}

def @func_11469() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %208 = @func_8852() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %209 = %208.0;
  %210 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  (%209, %210)
}

def @func_957() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %211 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  %212 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  %213 = cast(%212, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %214 = sin(%213) /* ty=Tensor[(10, 6, 13), float32] */;
  %215 = cast(%214, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %216 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%211, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %219 = divide(%217, %218) /* ty=Tensor[(10, 6, 13), float32] */;
  %220 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  (%219, %220)
}

def @func_2926(%var_2924: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), bool] {
  @func_2923(%var_2924) /* ty=Tensor[(10, 6, 13), bool] */
}

def @func_6330() -> Tensor[(10, 6, 13), float32] {
  %222 = fn () -> Tensor[(10, 6, 13), float32] {
    %221 = @func_4917() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
    %221.1
  };
  %222() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_1894(%var_1893: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) {
  %235 = fn (%var_1890: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) {
    %223 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
    %224 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
    %225 = %223.0;
    %226 = cast(%225, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
    %227 = reshape(%226, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
    %228 = cast(%var_1890, dtype="int16") /* ty=Tensor[(224), int16] */;
    %229 = reshape(%228, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
    %230 = @func_842(%229) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
    %231 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
    %232 = %224.0;
    %233 = @func_684(%227) /* ty=Tensor[(10, 6, 13), uint64] */;
    %234 = %230.2;
    (%231, %225, %232, %233, %234, %var_1890)
  };
  %235(%var_1893) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) */
}

def @func_2138() -> Tensor[(10, 6, 13), int8] {
  %236 = fn () -> Tensor[(10, 6, 13), int8] {
    @func_650() /* ty=Tensor[(10, 6, 13), int8] */
  };
  %236() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_8465() -> (Tensor[(10, 6, 13), int8],) {
  %239 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %237 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %238 = %237.0;
    (%238,)
  };
  %239() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_11719(%var_11717: Tensor[(30), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  @func_11716(%var_11717) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */
}

def @func_2203(%var_2185: Tensor[(7, 3, 8), float32]) -> (Tensor[(7, 3, 8), float32],) {
  %240 = cast(%var_2185, dtype="float32") /* ty=Tensor[(7, 3, 8), float32] */;
  %241 = cosh(%240) /* ty=Tensor[(7, 3, 8), float32] */;
  (%241,)
}

def @func_1305() -> Tensor[(10, 6, 13), float32] {
  %242 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  %243 = cast(%242, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  sqrt(%243) /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_8134(%var_8132: Tensor[(16, 8, 11), uint32]) -> (Tensor[(16, 8, 11), uint32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(16, 8, 11), float32]) {
  @func_8131(%var_8132) /* ty=(Tensor[(16, 8, 11), uint32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(16, 8, 11), float32]) */
}

def @func_9679(%var_9677: Tensor[(1, 5, 2), float32], %var_9678: Tensor[(3, 5, 2), float32]) -> (Tensor[(3, 5, 2), float32], Tensor[(10, 6, 13), int8]) {
  @func_9675(%var_9677, %var_9678) /* ty=(Tensor[(3, 5, 2), float32], Tensor[(10, 6, 13), int8]) */
}

def @func_650() -> Tensor[(10, 6, 13), int8] {
  %244 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 6, 13), int8] */, dtype="int8") /* ty=Tensor[(1, 6, 13), int8] */;
  %245 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 6, 13), int8] */, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  maximum(%244, %245) /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_1146() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) {
  @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */
}

def @func_9647() -> (Tensor[(10, 6, 13), float32],) {
  %248 = fn () -> (Tensor[(10, 6, 13), float32],) {
    %246 = @func_8346() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %247 = %246.0;
    (%247,)
  };
  %248() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_6880() -> (Tensor[(10, 6, 13), float32],) {
  %251 = fn () -> (Tensor[(10, 6, 13), float32],) {
    %249 = @func_5956() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %250 = %249.1;
    (%250,)
  };
  %251() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_8131(%var_8082: Tensor[(16, 8, 11), uint32]) -> (Tensor[(16, 8, 11), uint32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(16, 8, 11), float32]) {
  %252 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 8, 11), uint32] */, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
  %253 = shape_of(%var_8082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%var_8082, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %256 = @func_7061() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %257 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 8, 11), uint32] */, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
  %258 = right_shift(%254, %255) /* ty=Tensor[(16, 8, 11), uint32] */;
  %259 = @func_5452() /* ty=Tensor[(10, 6, 13), float32] */;
  %260 = %256.1;
  %261 = sinh(%257) /* ty=Tensor[(16, 8, 11), float32] */;
  (%258, %259, %260, %261)
}

def @func_2976() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %262 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %263 = %262.0;
  %264 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  (%263, %264)
}

def @func_11429() -> Tensor[(10, 6, 13), int8] {
  %265 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %265.0
}

def @func_8897(%var_8896: Tensor[(7, 5, 9), float64]) -> (Tensor[(7, 5, 9), float64],) {
  %268 = fn (%var_8892: Tensor[(7, 5, 9), float64]) -> (Tensor[(7, 5, 9), float64],) {
    %266 = cast(%var_8892, dtype="float64") /* ty=Tensor[(7, 5, 9), float64] */;
    %267 = sin(%266) /* ty=Tensor[(7, 5, 9), float64] */;
    (%267,)
  };
  %268(%var_8896) /* ty=(Tensor[(7, 5, 9), float64],) */
}

def @func_6841() -> (Tensor[(10, 6, 13), int8],) {
  %269 = @func_4695() /* ty=Tensor[(10, 6, 13), int8] */;
  (%269,)
}

def @func_3623() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) {
  %273 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) {
    %270 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
    %271 = @func_2544() /* ty=Tensor[(10, 6, 13), int8] */;
    %272 = %270.2;
    (%271, %272)
  };
  %273() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) */
}

def @func_4321(%var_4319: Tensor[(10, 6, 13), uint64]) -> (Tensor[(10, 6, 13), bool], Tensor[(7, 3, 8), float32], Tensor[(1, 168), float32]) {
  @func_4318(%var_4319) /* ty=(Tensor[(10, 6, 13), bool], Tensor[(7, 3, 8), float32], Tensor[(1, 168), float32]) */
}

def @func_7039() -> Tensor[(528), float64] {
  @func_7037() /* ty=Tensor[(528), float64] */
}

def @func_2403(%var_2401: Tensor[(1080, 1), float32], %var_2402: Tensor[(1080, 12), float32]) -> (Tensor[(10, 6, 13), int8], Tensor[(540, 2), bool], Tensor[(1080, 12), int8], Tensor[(1080, 12), float32], Tensor[(11, 3, 16), float64], Tensor[(528), float64]) {
  @func_2399(%var_2401, %var_2402) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(540, 2), bool], Tensor[(1080, 12), int8], Tensor[(1080, 12), float32], Tensor[(11, 3, 16), float64], Tensor[(528), float64]) */
}

def @func_9259(%var_9257: Tensor[(30), float64]) -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32], Tensor[(30), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(7, 3, 8), float32], Tensor[(168), float32]) {
  @func_9256(%var_9257) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32], Tensor[(30), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(7, 3, 8), float32], Tensor[(168), float32]) */
}

def @func_11369() -> (Tensor[(540, 2), float32], Tensor[(10, 6, 13), float32]) {
  %274 = @func_5084() /* ty=(Tensor[(540, 2), float32],) */;
  %275 = %274.0;
  %276 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  (%275, %276)
}

def @func_3107() -> Tensor[(10, 6, 13), float32] {
  @func_3105() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_6038() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) {
  %277 = @func_3058() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %278 = cast(meta[relay.Constant][12] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %279 = reshape(%278, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %280 = @func_2103(%279) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %281 = %277.1;
  %282 = %280.3;
  (%281, %282, meta[relay.Constant][12] /* ty=Tensor[(528), float64] */)
}

def @func_11912() -> (Tensor[(10, 6, 13), float32],) {
  %283 = @func_10443() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %284 = %283.1;
  (%284,)
}

def @func_4558(%var_4520: Tensor[(12, 3, 4), int64], %var_4550: Tensor[(30), float64]) -> (Tensor[(12, 3, 4), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  %285 = cast(%var_4520, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %286 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(12, 3, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 3, 4), int64] */, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %289 = @func_4137() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %290 = %289.2;
  %291 = cast(%290, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %292 = reshape(%291, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %293 = cast(%var_4550, dtype="float64") /* ty=Tensor[(30), float64] */;
  %294 = reshape(%293, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %295 = @func_1213(%294) /* ty=(Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) */;
  %296 = greater(%287, %288) /* ty=Tensor[(12, 3, 4), bool] */;
  %297 = @func_3852(%292) /* ty=Tensor[(10, 6, 13), bool] */;
  %298 = %295.1;
  (%296, %290, %297, %298, %var_4550)
}

def @func_1369() -> (Tensor[(10, 6, 13), int8],) {
  @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_6164() -> (Tensor[(10, 6, 13), int8],) {
  @func_6162() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_7556() -> (Tensor[(10, 6, 13), float32],) {
  %299 = @func_3194() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %300 = %299.0;
  (%300,)
}

def @func_10443() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %301 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %302 = @func_8346() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %303 = %301.0;
  %304 = %302.0;
  (%303, %304)
}

def @func_3349() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_9503(%var_9492: Tensor[(6, 4, 4), uint64]) -> Tensor[(6, 4, 4), uint64] {
  %305 = cast(%var_9492, dtype="uint64") /* ty=Tensor[(6, 4, 4), uint64] */;
  %306 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(6, 4, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 4, 4), uint64] */, dtype="uint64") /* ty=Tensor[(6, 4, 4), uint64] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%307, %308) /* ty=Tensor[(6, 4, 4), uint64] */
}

def @func_12142(%var_12141: Tensor[(60), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(1920), bool], Tensor[(10, 6, 13), int8], Tensor[(4, 1, 15), float32], Tensor[(60), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %331 = fn (%var_12092: Tensor[(60), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(1920), bool], Tensor[(10, 6, 13), int8], Tensor[(4, 1, 15), float32], Tensor[(60), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
    %309 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %310 = cast(meta[relay.Constant][15] /* ty=Tensor[(1920), uint32] */, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
    %311 = reshape(%310, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), uint32] */;
    %312 = @func_5127(%311) /* ty=(Tensor[(8, 16, 15), bool],) */;
    %313 = %312.0;
    %314 = cast(%313, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
    %315 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(1920), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %316 = cast(meta[relay.Constant][15] /* ty=Tensor[(1920), uint32] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?), bool] */;
    %318 = cast(%var_12092, dtype="float32") /* ty=Tensor[(60), float32] */;
    %319 = reshape(%318, newshape=[4, 1, 15]) /* ty=Tensor[(4, 1, 15), float32] */;
    %320 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %321 = @func_8414() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %322 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
    %323 = @func_4739() /* ty=Tensor[(10, 6, 13), float32] */;
    %324 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
    %325 = %309.0;
    %326 = greater(%316, %317) /* ty=Tensor[(1920), bool] */;
    %327 = @func_7819() /* ty=Tensor[(10, 6, 13), int8] */;
    %328 = @func_7283(%319) /* ty=Tensor[(4, 1, 15), float32] */;
    %329 = %320.3;
    %330 = %321.0;
    (%322, %323, %324, %325, %326, %327, %328, %var_12092, %329, %330)
  };
  %331(%var_12141) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(1920), bool], Tensor[(10, 6, 13), int8], Tensor[(4, 1, 15), float32], Tensor[(60), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_4697() -> Tensor[(10, 6, 13), int8] {
  @func_4695() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_12245() -> (Tensor[(10, 6, 13), float64],) {
  @func_12243() /* ty=(Tensor[(10, 6, 13), float64],) */
}

def @main(%var_12477: Tensor[(6, 14, 12), int8]) -> Tensor[(6, 14, 12), int8] {
  %332 = cast(%var_12477, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
  %333 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(6, 14, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 14, 12), int8] */, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%334, %335) /* ty=Tensor[(6, 14, 12), int8] */
}

def @func_10965() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(528), float64]) {
  %340 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(528), float64]) {
    %336 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
    %337 = %336.0;
    %338 = @func_2137() /* ty=Tensor[(10, 6, 13), int8] */;
    %339 = @func_7443() /* ty=Tensor[(528), float64] */;
    (%337, %338, %339)
  };
  %340() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(528), float64]) */
}

def @func_3695() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) {
  @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */
}

def @func_6272() -> Tensor[(10, 6, 13), int8] {
  @func_2137() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9073() -> Tensor[(10, 6, 13), int8] {
  %341 = fn () -> Tensor[(10, 6, 13), int8] {
    @func_2544() /* ty=Tensor[(10, 6, 13), int8] */
  };
  %341() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2106(%var_2104: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) {
  @func_2103(%var_2104) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */
}

def @func_5085() -> (Tensor[(540, 2), float32],) {
  %344 = fn () -> (Tensor[(540, 2), float32],) {
    %342 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
    %343 = %342.4;
    (%343,)
  };
  %344() /* ty=(Tensor[(540, 2), float32],) */
}

def @func_5146() -> Tensor[(10, 6, 13), int8] {
  @func_5144() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9472() -> Tensor[(10, 6, 13), float32] {
  @func_9470() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_11840() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  @func_11838() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */
}

def @func_7037() -> Tensor[(528), float64] {
  @func_6765() /* ty=Tensor[(528), float64] */
}

def @func_8181() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  @func_8179() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_10445() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  @func_10443() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */
}

def @func_1666(%var_1664: Tensor[(10, 6, 13), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  @func_1663(%var_1664) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_1697(%var_1696: Tensor[(3, 1, 12), float64]) -> Tensor[(3, 1, 12), float64] {
  %346 = fn (%var_1668: Tensor[(3, 1, 12), float64]) -> Tensor[(3, 1, 12), float64] {
    %345 = cast(%var_1668, dtype="float64") /* ty=Tensor[(3, 1, 12), float64] */;
    cos(%345) /* ty=Tensor[(3, 1, 12), float64] */
  };
  %346(%var_1696) /* ty=Tensor[(3, 1, 12), float64] */
}

def @func_1537() -> Tensor[(10, 6, 13), int8] {
  @func_1535() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9405() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %350 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
    %347 = @func_7754() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %348 = %347.0;
    %349 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
    (%348, %349)
  };
  %350() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */
}

def @func_9470() -> Tensor[(10, 6, 13), float32] {
  %351 = @func_9404() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %351.1
}

def @func_6376(%var_6375: Tensor[(1, 10, 7), float64]) -> Tensor[(1, 10, 7), float64] {
  %353 = fn (%var_6366: Tensor[(1, 10, 7), float64]) -> Tensor[(1, 10, 7), float64] {
    %352 = cast(%var_6366, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    erf(%352) /* ty=Tensor[(1, 10, 7), float64] */
  };
  %353(%var_6375) /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_7444() -> Tensor[(528), float64] {
  %355 = fn () -> Tensor[(528), float64] {
    %354 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
    %354.2
  };
  %355() /* ty=Tensor[(528), float64] */
}

def @func_1803() -> (Tensor[(10, 6, 13), float32],) {
  %359 = fn () -> (Tensor[(10, 6, 13), float32],) {
    %356 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
    %357 = cast(%356, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
    %358 = cosh(%357) /* ty=Tensor[(10, 6, 13), float32] */;
    (%358,)
  };
  %359() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_2116() -> Tensor[(10, 6, 13), float32] {
  @func_2114() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_6040() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) {
  @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */
}

def @func_6484(%var_6482: Tensor[(1080), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(1, 168), float32], Tensor[(1080), float32], Tensor[(560), bool], Tensor[(1080), float64]) {
  @func_6481(%var_6482) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(1, 168), float32], Tensor[(1080), float32], Tensor[(560), bool], Tensor[(1080), float64]) */
}

def @func_11914() -> (Tensor[(10, 6, 13), float32],) {
  @func_11912() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_10016() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(4, 56), float32], Tensor[(4, 56), float32]) {
  @func_10014() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(4, 56), float32], Tensor[(4, 56), float32]) */
}

def @func_7722() -> Tensor[(10, 6, 13), int8] {
  @func_5260() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_5914() -> Tensor[(10, 6, 13), float32] {
  @func_5912() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_5130(%var_5128: Tensor[(8, 16, 15), uint32]) -> (Tensor[(8, 16, 15), bool],) {
  @func_5127(%var_5128) /* ty=(Tensor[(8, 16, 15), bool],) */
}

def @func_652() -> Tensor[(10, 6, 13), int8] {
  @func_650() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9065() -> (Tensor[(10, 6, 13), int8],) {
  %362 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %360 = @func_8637() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
    %361 = %360.4;
    (%361,)
  };
  %362() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_1617() -> Tensor[(10, 6, 13), float32] {
  @func_1615() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_7411() -> Tensor[(10, 6, 13), float32] {
  %364 = fn () -> Tensor[(10, 6, 13), float32] {
    %363 = @func_3194() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %363.0
  };
  %364() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_1851() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) {
  %370 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) {
    %365 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
    %366 = cast(%365, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
    %367 = reshape(%366, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
    %368 = @func_684(%367) /* ty=Tensor[(10, 6, 13), uint64] */;
    %369 = @func_1399() /* ty=Tensor[(10, 6, 13), float32] */;
    (%365, %368, %369)
  };
  %370() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) */
}

def @func_3828(%var_3827: Tensor[(10, 6, 13), float64]) -> (Tensor[(10, 6, 13), int16],) {
  %377 = fn (%var_3809: Tensor[(10, 6, 13), float64]) -> (Tensor[(10, 6, 13), int16],) {
    %371 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
    %372 = cast(%var_3809, dtype="int16") /* ty=Tensor[(10, 6, 13), int16] */;
    %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
    %374 = cast(%371, dtype="int16") /* ty=Tensor[(10, 6, 13), int16] */;
    %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %376 = bitwise_or(%374, %375) /* ty=Tensor[(10, 6, 13), int16] */;
    (%376,)
  };
  %377(%var_3827) /* ty=(Tensor[(10, 6, 13), int16],) */
}

def @func_7197(%var_7163: uint16, %var_7191: Tensor[(780), int8]) -> (Tensor[(8, 15, 7), uint16], Tensor[(10, 6, 13), uint64], Tensor[(780), int8]) {
  %378 = cast(%var_7163, dtype="uint16") /* ty=uint16 */;
  %379 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 15, 7), uint16] */, dtype="uint16") /* ty=Tensor[(8, 15, 7), uint16] */;
  %380 = cast(%var_7191, dtype="int8") /* ty=Tensor[(780), int8] */;
  %381 = reshape(%380, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %382 = bitwise_xor(%378, %379) /* ty=Tensor[(8, 15, 7), uint16] */;
  %383 = @func_684(%381) /* ty=Tensor[(10, 6, 13), uint64] */;
  (%382, %383, %var_7191)
}

def @func_11716(%var_11703: Tensor[(30), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  %384 = cast(%var_11703, dtype="float64") /* ty=Tensor[(30), float64] */;
  %385 = reshape(%384, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %386 = @func_1213(%385) /* ty=(Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) */;
  %387 = @func_4695() /* ty=Tensor[(10, 6, 13), int8] */;
  %388 = %386.1;
  (%387, %388, %var_11703)
}

def @func_3094() -> (Tensor[(10, 6, 13), float32],) {
  @func_3092() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_4876() -> (Tensor[(10, 6, 13), int8],) {
  %389 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
  (%389,)
}

def @func_10189() -> Tensor[(10, 6, 13), int8] {
  %391 = fn () -> Tensor[(10, 6, 13), int8] {
    %390 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %390.0
  };
  %391() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_1768() -> Tensor[(10, 6, 13), float32] {
  %393 = fn () -> Tensor[(10, 6, 13), float32] {
    %392 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
    %392.1
  };
  %393() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_3418(%var_3416: Tensor[(10, 3), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) {
  @func_3415(%var_3416) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) */
}

def @func_7201(%var_7199: uint16, %var_7200: Tensor[(780), int8]) -> (Tensor[(8, 15, 7), uint16], Tensor[(10, 6, 13), uint64], Tensor[(780), int8]) {
  @func_7197(%var_7199, %var_7200) /* ty=(Tensor[(8, 15, 7), uint16], Tensor[(10, 6, 13), uint64], Tensor[(780), int8]) */
}

def @func_9431(%var_9430: Tensor[(1, 7, 12), float64]) -> Tensor[(1, 7, 12), float64] {
  %395 = fn (%var_9424: Tensor[(1, 7, 12), float64]) -> Tensor[(1, 7, 12), float64] {
    %394 = cast(%var_9424, dtype="float64") /* ty=Tensor[(1, 7, 12), float64] */;
    cos(%394) /* ty=Tensor[(1, 7, 12), float64] */
  };
  %395(%var_9430) /* ty=Tensor[(1, 7, 12), float64] */
}

def @func_9457(%var_9433: uint32, %var_9434: Tensor[(12, 5, 2), uint32], %var_9440: Tensor[(1, 224), int16]) -> (Tensor[(12, 5, 2), uint32], Tensor[(9, 12, 10), float32], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int8]) {
  %396 = cast(%var_9433, dtype="uint32") /* ty=uint32 */;
  %397 = cast(%var_9434, dtype="uint32") /* ty=Tensor[(12, 5, 2), uint32] */;
  %398 = cast(%var_9440, dtype="int16") /* ty=Tensor[(1, 224), int16] */;
  %399 = reshape(%398, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %400 = @func_842(%399) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
  %401 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %402 = add(%396, %397) /* ty=Tensor[(12, 5, 2), uint32] */;
  %403 = %400.1;
  %404 = %401.0;
  (%402, %403, %var_9440, %404)
}

def @func_1401() -> Tensor[(10, 6, 13), float32] {
  @func_1399() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_2923(%var_2915: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), bool] {
  %405 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  %406 = cast(%var_2915, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%405, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%408, %409) /* ty=Tensor[(10, 6, 13), bool] */
}

def @func_5599() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %413 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
    %410 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
    %411 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
    %412 = %410.0;
    (%411, %412)
  };
  %413() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_7819() -> Tensor[(10, 6, 13), int8] {
  @func_5260() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2978() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  @func_2976() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */
}

def @func_3957(%var_3956: Tensor[(1, 30), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(1, 30), float64]) {
  %419 = fn (%var_3946: Tensor[(1, 30), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(1, 30), float64]) {
    %414 = cast(%var_3946, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
    %415 = reshape(%414, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
    %416 = @func_3415(%415) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) */;
    %417 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
    %418 = %416.1;
    (%417, %418, %var_3946)
  };
  %419(%var_3956) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(1, 30), float64]) */
}

def @func_8195() -> Tensor[(10, 6, 13), float32] {
  %421 = fn () -> Tensor[(10, 6, 13), float32] {
    %420 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %420.0
  };
  %421() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_4741() -> Tensor[(10, 6, 13), float32] {
  @func_4739() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_8334() -> Tensor[(10, 6, 13), float32] {
  %423 = fn () -> Tensor[(10, 6, 13), float32] {
    %422 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
    %422.1
  };
  %423() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_8504() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %427 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
    %424 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
    %425 = @func_2530() /* ty=Tensor[(10, 6, 13), int8] */;
    %426 = @func_2489() /* ty=Tensor[(10, 6, 13), int8] */;
    (%424, %425, %426)
  };
  %427() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */
}

def @func_3415(%var_3381: Tensor[(10, 3), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) {
  %428 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %429 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %430 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %431 = cast(%var_3381, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %432 = reshape(%431, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %433 = @func_1213(%432) /* ty=(Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
  %436 = %428.3;
  %437 = %429.3;
  %438 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
  %439 = %430.0;
  %440 = cosh(%435) /* ty=Tensor[(3, 2, 5), float32] */;
  (%436, %437, %var_3381, %438, %439, %440)
}

def @func_8940() -> (Tensor[(10, 6, 13), float64],) {
  %441 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %442 = %441.1;
  (%442,)
}

def @func_4407() -> (Tensor[(10, 6, 13), int8],) {
  %445 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %443 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %444 = %443.0;
    (%444,)
  };
  %445() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_6538() -> Tensor[(10, 6, 13), int8] {
  %447 = fn () -> Tensor[(10, 6, 13), int8] {
    %446 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %446.0
  };
  %447() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_3105() -> Tensor[(10, 6, 13), float32] {
  @func_2114() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_8439() -> (Tensor[(10, 6, 13), int8],) {
  %450 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %448 = @func_7754() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %449 = %448.0;
    (%449,)
  };
  %450() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_5504(%var_5502: Tensor[(9, 13, 15), float32], %var_5503: Tensor[(9, 13, 15), float32]) -> (Tensor[(9, 13, 15), float32],) {
  @func_5500(%var_5502, %var_5503) /* ty=(Tensor[(9, 13, 15), float32],) */
}

def @func_8282(%var_8279: Tensor[(5, 16, 10), bool], %var_8280: Tensor[(5, 16, 10), bool], %var_8281: Tensor[(910), float64]) -> (Tensor[(5, 16, 10), bool], Tensor[(5, 16, 10), float64], Tensor[(9, 12, 10), float32], float64, Tensor[(910), float64], Tensor[(112, 2), int16]) {
  @func_8277(%var_8279, %var_8280, %var_8281) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(5, 16, 10), float64], Tensor[(9, 12, 10), float32], float64, Tensor[(910), float64], Tensor[(112, 2), int16]) */
}

def @func_10428() -> (Tensor[(10, 6, 13), float32], Tensor[(15, 9, 16), float32]) {
  %454 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(15, 9, 16), float32]) {
    %451 = @func_9778() /* ty=(Tensor[(15, 9, 16), float32], Tensor[(10, 6, 13), int8]) */;
    %452 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
    %453 = %451.0;
    (%452, %453)
  };
  %454() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(15, 9, 16), float32]) */
}

def @func_8638() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %468 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
    %455 = @func_6879() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %456 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
    %457 = cast(%456, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
    %458 = reshape(%457, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
    %459 = @func_8155() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %460 = @func_8464() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %461 = %455.0;
    %462 = @func_2923(%458) /* ty=Tensor[(10, 6, 13), bool] */;
    %463 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
    %464 = %459.0;
    %465 = %460.0;
    %466 = @func_5144() /* ty=Tensor[(10, 6, 13), int8] */;
    %467 = @func_4739() /* ty=Tensor[(10, 6, 13), float32] */;
    (%456, %461, %462, %463, %464, %465, %466, %467)
  };
  %468() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */
}

def @func_9779() -> (Tensor[(15, 9, 16), float32], Tensor[(10, 6, 13), int8]) {
  %473 = fn () -> (Tensor[(15, 9, 16), float32], Tensor[(10, 6, 13), int8]) {
    %469 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
    %470 = @func_9316() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
    %471 = rsqrt(%469) /* ty=Tensor[(15, 9, 16), float32] */;
    %472 = %470.1;
    (%471, %472)
  };
  %473() /* ty=(Tensor[(15, 9, 16), float32], Tensor[(10, 6, 13), int8]) */
}

def @func_11431() -> Tensor[(10, 6, 13), int8] {
  @func_11429() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2514() -> (Tensor[(10, 6, 13), float32],) {
  @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_12278() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64]) {
  %479 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64]) {
    %474 = @func_5521() /* ty=Tensor[(10, 6, 13), float32] */;
    %475 = cast(%474, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
    %476 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
    %477 = asinh(%475) /* ty=Tensor[(10, 6, 13), float32] */;
    %478 = %476.1;
    (%477, %478)
  };
  %479() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64]) */
}

def @func_12372() -> Tensor[(10, 6, 13), float32] {
  %481 = fn () -> Tensor[(10, 6, 13), float32] {
    %480 = @func_4137() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %480.1
  };
  %481() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_11135() -> (Tensor[(10, 6, 13), float32],) {
  %482 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
  (%482,)
}

def @func_6311(%var_6309: Tensor[(11, 7, 5), float64], %var_6310: Tensor[(11, 7, 5), float64]) -> (Tensor[(11, 7, 5), bool],) {
  %488 = fn (%var_6303: Tensor[(11, 7, 5), float64], %var_6304: Tensor[(11, 7, 5), float64]) -> (Tensor[(11, 7, 5), bool],) {
    %483 = cast(%var_6304, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
    %484 = shape_of(%var_6303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%var_6303, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %487 = less(%485, %486) /* ty=Tensor[(11, 7, 5), bool] */;
    (%487,)
  };
  %488(%var_6309, %var_6310) /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_1399() -> Tensor[(10, 6, 13), float32] {
  %489 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %490 = %489.0;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  cos(%491) /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_5127(%var_5118: Tensor[(8, 16, 15), uint32]) -> (Tensor[(8, 16, 15), bool],) {
  %492 = cast(%var_5118, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
  %493 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(8, 16, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 16, 15), uint32] */, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %496 = less_equal(%494, %495) /* ty=Tensor[(8, 16, 15), bool] */;
  (%496,)
}

def @func_7354(%var_7351: Tensor[(9, 4, 1), float32], %var_7352: Tensor[(9, 4, 15), float32], %var_7353: Tensor[(9, 4, 15), float64]) -> (Tensor[(9, 4, 15), bool], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 1), float32], Tensor[(10, 6, 13), int8], Tensor[(9, 4, 15), bool]) {
  %520 = fn (%var_7293: Tensor[(9, 4, 1), float32], %var_7294: Tensor[(9, 4, 15), float32], %var_7344: Tensor[(9, 4, 15), float64]) -> (Tensor[(9, 4, 15), bool], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 1), float32], Tensor[(10, 6, 13), int8], Tensor[(9, 4, 15), bool]) {
    %497 = cast(%var_7293, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
    %498 = cast(%var_7294, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
    %499 = divide(%497, %498) /* ty=Tensor[(9, 4, 15), float32] */;
    %500 = cast(%499, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
    %501 = shape_of(%var_7294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %502 = cast(%var_7294, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
    %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %504 = @func_3244() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) */;
    %505 = cast(%var_7293, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
    %506 = tan(%505) /* ty=Tensor[(9, 4, 1), float32] */;
    %507 = cast(%506, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
    %508 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %509 = cast(%499, dtype="float64") /* ty=Tensor[(9, 4, 15), float64] */;
    %510 = sinh(%509) /* ty=Tensor[(9, 4, 15), float64] */;
    %511 = cast(%var_7344, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
    %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
    %513 = cast(%510, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
    %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %515 = logical_and(%502, %503) /* ty=Tensor[(9, 4, 15), bool] */;
    %516 = %504.0;
    %517 = log2(%507) /* ty=Tensor[(9, 4, 1), float32] */;
    %518 = %508.0;
    %519 = equal(%513, %514) /* ty=Tensor[(9, 4, 15), bool] */;
    (%515, %516, %517, %518, %519)
  };
  %520(%var_7351, %var_7352, %var_7353) /* ty=(Tensor[(9, 4, 15), bool], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 1), float32], Tensor[(10, 6, 13), int8], Tensor[(9, 4, 15), bool]) */
}

def @func_8179() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %521 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
  %522 = @func_7786() /* ty=Tensor[(10, 6, 13), float32] */;
  (%521, %522)
}

def @func_7061() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %523 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %524 = %523.0;
  %525 = @func_2544() /* ty=Tensor[(10, 6, 13), int8] */;
  (%524, %525)
}

def @func_11114() -> (Tensor[(10, 6, 13), float32],) {
  @func_11112() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_9538(%var_9537: Tensor[(2, 8, 2), float64]) -> (Tensor[(2, 8, 2), float64], Tensor[(10, 6, 13), float64]) {
  %533 = fn (%var_9517: Tensor[(2, 8, 2), float64]) -> (Tensor[(2, 8, 2), float64], Tensor[(10, 6, 13), float64]) {
    %526 = cast(%var_9517, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
    %527 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(2, 8, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %528 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 8, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
    %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %530 = @func_3058() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
    %531 = floor_mod(%528, %529) /* ty=Tensor[(2, 8, 2), float64] */;
    %532 = %530.1;
    (%531, %532)
  };
  %533(%var_9537) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(10, 6, 13), float64]) */
}

def @func_1721() -> Tensor[(10, 6, 13), int8] {
  %534 = fn () -> Tensor[(10, 6, 13), int8] {
    @func_1535() /* ty=Tensor[(10, 6, 13), int8] */
  };
  %534() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9506(%var_9504: Tensor[(6, 4, 4), uint64]) -> Tensor[(6, 4, 4), uint64] {
  @func_9503(%var_9504) /* ty=Tensor[(6, 4, 4), uint64] */
}

def @func_11256(%var_11255: Tensor[(800), bool]) -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(224), int16], Tensor[(7, 130), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(910), float64], Tensor[(800), bool]) {
  %558 = fn (%var_11252: Tensor[(800), bool]) -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(224), int16], Tensor[(7, 130), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(910), float64], Tensor[(800), bool]) {
    %535 = @func_8940() /* ty=(Tensor[(10, 6, 13), float64],) */;
    %536 = @func_7754() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %537 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
    %538 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 130), float64] */, dtype="float64") /* ty=Tensor[(7, 130), float64] */;
    %539 = cast(meta[relay.Constant][22] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
    %540 = reshape(%538, newshape=[1, 910]) /* ty=Tensor[(1, 910), float64] */;
    %541 = reshape(%539, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
    %542 = @func_5193(%540, %541) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) */;
    %543 = @func_7061() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
    %544 = cast(%var_11252, dtype="bool") /* ty=Tensor[(800), bool] */;
    %545 = cast(%var_11252, dtype="bool") /* ty=Tensor[(800), bool] */;
    %546 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 130), float64] */, dtype="float64") /* ty=Tensor[(7, 130), float64] */;
    %547 = reshape(%544, newshape=[5, 16, 10]) /* ty=Tensor[(5, 16, 10), bool] */;
    %548 = reshape(%545, newshape=[5, 16, 10]) /* ty=Tensor[(5, 16, 10), bool] */;
    %549 = reshape(%546, newshape=[910]) /* ty=Tensor[(910), float64] */;
    %550 = @func_8277(%547, %548, %549) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(5, 16, 10), float64], Tensor[(9, 12, 10), float32], float64, Tensor[(910), float64], Tensor[(112, 2), int16]) */;
    %551 = %535.0;
    %552 = @func_4695() /* ty=Tensor[(10, 6, 13), int8] */;
    %553 = %536.0;
    %554 = %537.2;
    %555 = %542.1;
    %556 = %543.0;
    %557 = %550.4;
    (%551, %552, %553, %554, %555, meta[relay.Constant][21] /* ty=Tensor[(7, 130), float64] */, meta[relay.Constant][22] /* ty=Tensor[(224), int16] */, %556, %557, %var_11252)
  };
  %558(%var_11255) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(224), int16], Tensor[(7, 130), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(910), float64], Tensor[(800), bool]) */
}

def @func_5193(%var_5188: Tensor[(1, 910), float64], %var_5189: Tensor[(2, 112), int16]) -> (Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) {
  %559 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
  %560 = cast(-7.26904f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %561 = cast(%var_5188, dtype="float64") /* ty=Tensor[(1, 910), float64] */;
  %562 = cast(%var_5189, dtype="int16") /* ty=Tensor[(2, 112), int16] */;
  %563 = reshape(%560, newshape=[]) /* ty=float64 */;
  %564 = reshape(%561, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float64] */;
  %565 = reshape(%562, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %566 = @func_3907(%563, %564, %565) /* ty=(Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) */;
  %567 = %559.1;
  %568 = %566.4;
  (%567, %568, -7.26904f64 /* ty=float64 */, %var_5188, %var_5189)
}

def @func_7161(%var_7159: uint32, %var_7160: Tensor[(432), uint32]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 12), uint32], uint32, Tensor[(432), uint32], Tensor[(10, 6, 13), float64]) {
  %583 = fn (%var_7144: uint32, %var_7145: Tensor[(432), uint32]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 12), uint32], uint32, Tensor[(432), uint32], Tensor[(10, 6, 13), float64]) {
    %569 = @func_4445() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %570 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %571 = cast(%var_7144, dtype="uint32") /* ty=uint32 */;
    %572 = cast(%var_7145, dtype="uint32") /* ty=Tensor[(432), uint32] */;
    %573 = reshape(%571, newshape=[]) /* ty=uint32 */;
    %574 = reshape(%572, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), uint32] */;
    %575 = %569.0;
    %576 = cast(%575, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
    %577 = reshape(%576, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
    %578 = @func_2181(%577) /* ty=(Tensor[(10, 6, 13), float64],) */;
    %579 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
    %580 = %570.0;
    %581 = @func_6603(%573, %574) /* ty=Tensor[(9, 4, 12), uint32] */;
    %582 = %578.0;
    (%575, %579, %580, %581, %var_7144, %var_7145, %582)
  };
  %583(%var_7159, %var_7160) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(9, 4, 12), uint32], uint32, Tensor[(432), uint32], Tensor[(10, 6, 13), float64]) */
}

def @func_8415() -> (Tensor[(10, 6, 13), float32],) {
  %586 = fn () -> (Tensor[(10, 6, 13), float32],) {
    %584 = @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %585 = %584.1;
    (%585,)
  };
  %586() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_7990() -> (Tensor[(12, 5, 10), uint64], Tensor[(10, 6, 13), int8], Tensor[(12, 5, 10), float64]) {
  %603 = fn () -> (Tensor[(12, 5, 10), uint64], Tensor[(10, 6, 13), int8], Tensor[(12, 5, 10), float64]) {
    %587 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
    %588 = acosh(%587) /* ty=Tensor[(12, 5, 10), float64] */;
    %589 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 5, 10), float64] */, dtype="uint64") /* ty=Tensor[(12, 5, 10), uint64] */;
    %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
    %591 = cast(%588, dtype="uint64") /* ty=Tensor[(12, 5, 10), uint64] */;
    %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %593 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %594 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
    %595 = sqrt(%594) /* ty=Tensor[(12, 5, 10), float32] */;
    %596 = cast(%595, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
    %597 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(12, 5, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %598 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %600 = multiply(%591, %592) /* ty=Tensor[(12, 5, 10), uint64] */;
    %601 = %593.0;
    %602 = floor_mod(%598, %599) /* ty=Tensor[(12, 5, 10), float64] */;
    (%600, %601, %602)
  };
  %603() /* ty=(Tensor[(12, 5, 10), uint64], Tensor[(10, 6, 13), int8], Tensor[(12, 5, 10), float64]) */
}

def @func_8156() -> (Tensor[(10, 6, 13), int8],) {
  %606 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %604 = @func_2976() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
    %605 = %604.1;
    (%605,)
  };
  %606() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_8817(%var_8816: Tensor[(168), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) {
  %614 = fn (%var_8796: Tensor[(168), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) {
    %607 = cast(%var_8796, dtype="float32") /* ty=Tensor[(168), float32] */;
    %608 = reshape(%607, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
    %609 = @func_2203(%608) /* ty=(Tensor[(7, 3, 8), float32],) */;
    %610 = %609.0;
    %611 = cast(%610, dtype="float64") /* ty=Tensor[(7, 3, 8), float64] */;
    %612 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
    %613 = acosh(%611) /* ty=Tensor[(7, 3, 8), float64] */;
    (%612, %var_8796, %613)
  };
  %614(%var_8816) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) */
}

def @func_959() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */
}

def @func_5996() -> Tensor[(10, 6, 13), int8] {
  %615 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %615.0
}

def @func_3911(%var_3908: float64, %var_3909: Tensor[(14, 13, 5), float64], %var_3910: Tensor[(224), int16]) -> (Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) {
  %627 = fn (%var_3867: float64, %var_3868: Tensor[(14, 13, 5), float64], %var_3897: Tensor[(224), int16]) -> (Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) {
    %616 = cast(%var_3867, dtype="float64") /* ty=float64 */;
    %617 = cast(%var_3868, dtype="float64") /* ty=Tensor[(14, 13, 5), float64] */;
    %618 = cast(meta[relay.Constant][25] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %619 = reshape(%618, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
    %620 = @func_281(%619) /* ty=(Tensor[(9, 12, 10), float32],) */;
    %621 = cast(%var_3897, dtype="int16") /* ty=Tensor[(224), int16] */;
    %622 = reshape(%621, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), int16] */;
    %623 = @func_762(%622) /* ty=(Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) */;
    %624 = multiply(%616, %617) /* ty=Tensor[(14, 13, 5), float64] */;
    %625 = %620.0;
    %626 = %623.4;
    (%624, %625, meta[relay.Constant][25] /* ty=Tensor[(1080), float32] */, %626, %var_3897)
  };
  %627(%var_3908, %var_3909, %var_3910) /* ty=(Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) */
}

def @func_9756(%var_9754: Tensor[(12, 13, 1), int16], %var_9755: Tensor[(12, 13, 12), int16]) -> Tensor[(12, 13, 12), int16] {
  @func_9752(%var_9754, %var_9755) /* ty=Tensor[(12, 13, 12), int16] */
}

def @func_4378(%var_4377: Tensor[(2, 12, 16), float64]) -> (Tensor[(2, 12, 16), float64],) {
  %630 = fn (%var_4365: Tensor[(2, 12, 16), float64]) -> (Tensor[(2, 12, 16), float64],) {
    %628 = cast(%var_4365, dtype="float64") /* ty=Tensor[(2, 12, 16), float64] */;
    %629 = cosh(%628) /* ty=Tensor[(2, 12, 16), float64] */;
    (%629,)
  };
  %630(%var_4377) /* ty=(Tensor[(2, 12, 16), float64],) */
}

def @func_1453() -> Tensor[(10, 6, 13), float32] {
  @func_1451() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_5260() -> Tensor[(10, 6, 13), int8] {
  @func_1535() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_5262() -> Tensor[(10, 6, 13), int8] {
  @func_5260() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2324() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %636 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
    %631 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
    %632 = %631.1;
    %633 = cast(%632, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
    %634 = @func_1535() /* ty=Tensor[(10, 6, 13), int8] */;
    %635 = log10(%633) /* ty=Tensor[(10, 6, 13), float64] */;
    (%634, %635)
  };
  %636() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */
}

def @func_5521() -> Tensor[(10, 6, 13), float32] {
  %637 = @func_3092() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %637.0
}

def @func_686(%var_685: Tensor[(10, 6, 13), int8]) -> Tensor[(10, 6, 13), uint64] {
  %643 = fn (%var_678: Tensor[(10, 6, 13), int8]) -> Tensor[(10, 6, 13), uint64] {
    %638 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
    %639 = cast(%var_678, dtype="uint64") /* ty=Tensor[(10, 6, 13), uint64] */;
    %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
    %641 = cast(%638, dtype="uint64") /* ty=Tensor[(10, 6, 13), uint64] */;
    %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    add(%641, %642) /* ty=Tensor[(10, 6, 13), uint64] */
  };
  %643(%var_685) /* ty=Tensor[(10, 6, 13), uint64] */
}

def @func_5576(%var_5574: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(528), float64]) {
  @func_5573(%var_5574) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(528), float64]) */
}

def @func_5740(%var_5738: Tensor[(40, 14), bool], %var_5739: Tensor[(288), uint32]) -> (Tensor[(10, 6, 13), float64], Tensor[(224), int16], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int16], Tensor[(7, 5, 16), bool], Tensor[(40, 14), bool], Tensor[(1080), float64], Tensor[(540, 2), float32], Tensor[(8, 6, 6), bool], Tensor[(1, 48), int64], Tensor[(288), uint32], Tensor[(10, 6, 13), int8]) {
  %669 = fn (%var_5698: Tensor[(40, 14), bool], %var_5732: Tensor[(288), uint32]) -> (Tensor[(10, 6, 13), float64], Tensor[(224), int16], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int16], Tensor[(7, 5, 16), bool], Tensor[(40, 14), bool], Tensor[(1080), float64], Tensor[(540, 2), float32], Tensor[(8, 6, 6), bool], Tensor[(1, 48), int64], Tensor[(288), uint32], Tensor[(10, 6, 13), int8]) {
    %644 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 224), int16] */, dtype="int16") /* ty=Tensor[(1, 224), int16] */;
    %645 = reshape(%644, newshape=[224]) /* ty=Tensor[(224), int16] */;
    %646 = @func_1985(%645) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32]) */;
    %647 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
    %648 = cast(%647, dtype="float64") /* ty=Tensor[(10, 6, 13), float64] */;
    %649 = reshape(%648, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float64] */;
    %650 = @func_3826(%649) /* ty=(Tensor[(10, 6, 13), int16],) */;
    %651 = cast(%var_5698, dtype="bool") /* ty=Tensor[(40, 14), bool] */;
    %652 = cast(meta[relay.Constant][27] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %653 = reshape(%651, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), bool] */;
    %654 = reshape(%652, newshape=[540, 2]) /* ty=Tensor[(540, 2), float64] */;
    %655 = @func_2451(%653, %654) /* ty=(Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) */;
    %656 = @func_5084() /* ty=(Tensor[(540, 2), float32],) */;
    %657 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 48), int64] */, dtype="int64") /* ty=Tensor[(1, 48), int64] */;
    %658 = cast(%var_5732, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %659 = reshape(%657, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), int64] */;
    %660 = reshape(%658, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), uint32] */;
    %661 = @func_4032(%659, %660) /* ty=(Tensor[(8, 6, 6), bool],) */;
    %662 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
    %663 = %646.2;
    %664 = %650.0;
    %665 = %655.0;
    %666 = %656.0;
    %667 = %661.0;
    %668 = %662.0;
    (%647, %663, meta[relay.Constant][26] /* ty=Tensor[(1, 224), int16] */, %664, %665, %var_5698, meta[relay.Constant][27] /* ty=Tensor[(1080), float64] */, %666, %667, meta[relay.Constant][28] /* ty=Tensor[(1, 48), int64] */, %var_5732, %668)
  };
  %669(%var_5738, %var_5739) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(224), int16], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int16], Tensor[(7, 5, 16), bool], Tensor[(40, 14), bool], Tensor[(1080), float64], Tensor[(540, 2), float32], Tensor[(8, 6, 6), bool], Tensor[(1, 48), int64], Tensor[(288), uint32], Tensor[(10, 6, 13), int8]) */
}

def @func_6766() -> Tensor[(528), float64] {
  %671 = fn () -> Tensor[(528), float64] {
    %670 = @func_6038() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), uint64], Tensor[(528), float64]) */;
    %670.2
  };
  %671() /* ty=Tensor[(528), float64] */
}

def @func_9675(%var_9648: Tensor[(1, 5, 2), float32], %var_9649: Tensor[(3, 5, 2), float32]) -> (Tensor[(3, 5, 2), float32], Tensor[(10, 6, 13), int8]) {
  %672 = cast(%var_9648, dtype="float32") /* ty=Tensor[(1, 5, 2), float32] */;
  %673 = cast(%var_9649, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %674 = power(%672, %673) /* ty=Tensor[(3, 5, 2), float32] */;
  %675 = cast(%674, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %676 = shape_of(%var_9649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_9649, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %679 = subtract(%677, %678) /* ty=Tensor[(3, 5, 2), float32] */;
  %680 = @func_8233() /* ty=Tensor[(10, 6, 13), int8] */;
  (%679, %680)
}

def @func_9604(%var_9552: Tensor[(3, 4, 15), float64], %var_9553: Tensor[(3, 4, 15), float64]) -> (Tensor[(3, 4, 15), float64], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %681 = cast(%var_9553, dtype="float64") /* ty=Tensor[(3, 4, 15), float64] */;
  %682 = shape_of(%var_9552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%var_9552, dtype="float64") /* ty=Tensor[(3, 4, 15), float64] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %685 = cast(meta[relay.Constant][29] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %686 = reshape(%685, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
  %687 = @func_842(%686) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
  %688 = @func_8852() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %689 = floor_mod(%683, %684) /* ty=Tensor[(3, 4, 15), float64] */;
  %690 = %687.1;
  %691 = %688.0;
  %692 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
  (%689, %690, meta[relay.Constant][29] /* ty=Tensor[(224), int16] */, %691, %692)
}

def @func_11137() -> (Tensor[(10, 6, 13), float32],) {
  @func_11135() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_11883() -> Tensor[(10, 6, 13), float64] {
  %694 = fn () -> Tensor[(10, 6, 13), float64] {
    %693 = @func_3693() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */;
    %693.1
  };
  %694() /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_3306() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  @func_3304() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_8770() -> Tensor[(10, 6, 13), float64] {
  %696 = fn () -> Tensor[(10, 6, 13), float64] {
    %695 = @func_4624() /* ty=(Tensor[(10, 6, 13), float64],) */;
    %695.0
  };
  %696() /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_5912() -> Tensor[(10, 6, 13), float32] {
  %697 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %697.0
}

def @func_8691() -> Tensor[(10, 6, 13), int8] {
  @func_8689() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_1367() -> (Tensor[(10, 6, 13), int8],) {
  %698 = @func_1305() /* ty=Tensor[(10, 6, 13), float32] */;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %700 = acosh(%699) /* ty=Tensor[(10, 6, 13), float32] */;
  %701 = cast(%698, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%700, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %705 = right_shift(%703, %704) /* ty=Tensor[(10, 6, 13), int8] */;
  (%705,)
}

def @func_6274() -> Tensor[(10, 6, 13), int8] {
  @func_6272() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_3854(%var_3853: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), bool] {
  %711 = fn (%var_3846: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), bool] {
    %706 = @func_1305() /* ty=Tensor[(10, 6, 13), float32] */;
    %707 = cast(%var_3846, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
    %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
    %709 = cast(%706, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
    %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%709, %710) /* ty=Tensor[(10, 6, 13), bool] */
  };
  %711(%var_3853) /* ty=Tensor[(10, 6, 13), bool] */
}

def @func_2206(%var_2204: Tensor[(7, 3, 8), float32]) -> (Tensor[(7, 3, 8), float32],) {
  @func_2203(%var_2204) /* ty=(Tensor[(7, 3, 8), float32],) */
}

def @func_11838() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %712 = @func_10796() /* ty=(Tensor[(10, 6, 13), float64],) */;
  %713 = @func_8233() /* ty=Tensor[(10, 6, 13), int8] */;
  %714 = %712.0;
  (%713, %714)
}

def @func_8347() -> (Tensor[(10, 6, 13), float32],) {
  %717 = fn () -> (Tensor[(10, 6, 13), float32],) {
    %715 = @func_4137() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %716 = %715.1;
    (%716,)
  };
  %717() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_10263() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %726 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
    %718 = @func_4084() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
    %719 = @func_8438() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %720 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %721 = @func_8233() /* ty=Tensor[(10, 6, 13), int8] */;
    %722 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
    %723 = %718.0;
    %724 = %719.0;
    %725 = %720.1;
    (%721, %722, %723, %724, %725)
  };
  %726() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */
}

def @func_8233() -> Tensor[(10, 6, 13), int8] {
  @func_2544() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2491() -> Tensor[(10, 6, 13), int8] {
  @func_2489() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2451(%var_2417: Tensor[(7, 5, 16), bool], %var_2432: Tensor[(540, 2), float64]) -> (Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) {
  %727 = cast(%var_2417, dtype="bool") /* ty=Tensor[(7, 5, 16), bool] */;
  %728 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(7, 5, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 5, 16), bool] */, dtype="bool") /* ty=Tensor[(7, 5, 16), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %731 = cast(meta[relay.Constant][31] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %732 = reshape(%731, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %733 = @func_1267(%732) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), float64]) */;
  %734 = %733.1;
  %735 = cast(%var_2432, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(2), int32] */;
  %737 = cast(%734, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %739 = logical_and(%729, %730) /* ty=Tensor[(7, 5, 16), bool] */;
  %740 = divide(%737, %738) /* ty=Tensor[(540, 2), float32] */;
  (%739, meta[relay.Constant][31] /* ty=Tensor[(1080), float32] */, %740)
}

def @func_2855() -> (Tensor[(10, 6, 13), float32],) {
  %741 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
  (%741,)
}

def @func_5019(%var_5018: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %756 = fn (%var_4939: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
    %742 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %743 = cast(%var_4939, dtype="int16") /* ty=Tensor[(224), int16] */;
    %744 = reshape(%743, newshape=[224]) /* ty=Tensor[(224), int16] */;
    %745 = @func_1892(%744) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) */;
    %746 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
    %747 = cast(%var_4939, dtype="int16") /* ty=Tensor[(224), int16] */;
    %748 = reshape(%747, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
    %749 = @func_842(%748) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */;
    %750 = %742.0;
    %751 = %745.1;
    %752 = %746.1;
    %753 = @func_1535() /* ty=Tensor[(10, 6, 13), int8] */;
    %754 = @func_2579() /* ty=Tensor[(10, 6, 13), float32] */;
    %755 = %749.0;
    (%750, %751, %var_4939, %752, %753, %754, %755)
  };
  %756(%var_5018) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */
}

def @func_3195() -> (Tensor[(10, 6, 13), float32],) {
  %758 = fn () -> (Tensor[(10, 6, 13), float32],) {
    %757 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
    (%757,)
  };
  %758() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_12466(%var_12464: Tensor[(528), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(9, 4, 12), uint32], uint32, Tensor[(2, 216), uint32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), float64]) {
  @func_12463(%var_12464) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 4, 12), uint32], uint32, Tensor[(2, 216), uint32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), float64]) */
}

def @func_9608(%var_9606: Tensor[(3, 4, 15), float64], %var_9607: Tensor[(3, 4, 15), float64]) -> (Tensor[(3, 4, 15), float64], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  @func_9604(%var_9606, %var_9607) /* ty=(Tensor[(3, 4, 15), float64], Tensor[(9, 12, 10), float32], Tensor[(224), int16], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_9122() -> Tensor[(10, 6, 13), float32] {
  @func_8333() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_3804(%var_3802: Tensor[(12, 3, 10), bool], %var_3803: Tensor[(12, 3, 10), bool]) -> (Tensor[(10, 6, 13), float32], Tensor[(540, 2), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(12, 3, 10), uint8]) {
  @func_3800(%var_3802, %var_3803) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(540, 2), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(12, 3, 10), uint8]) */
}

def @func_10375(%var_10373: Tensor[(528), float64], %var_10374: Tensor[(455, 2), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(528), float64], Tensor[(455, 2), float64], Tensor[(224), int16]) {
  @func_10371(%var_10373, %var_10374) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(224), int16], Tensor[(528), float64], Tensor[(455, 2), float64], Tensor[(224), int16]) */
}

def @func_4032(%var_4007: Tensor[(8, 1, 6), int64], %var_4026: Tensor[(8, 6, 6), uint32]) -> (Tensor[(8, 6, 6), bool],) {
  %759 = cast(%var_4007, dtype="int64") /* ty=Tensor[(8, 1, 6), int64] */;
  %760 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 6, 6), int64] */, dtype="int64") /* ty=Tensor[(8, 6, 6), int64] */;
  %761 = multiply(%759, %760) /* ty=Tensor[(8, 6, 6), int64] */;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
  %763 = tan(%762) /* ty=Tensor[(8, 6, 6), float64] */;
  %764 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 6, 6), int64] */, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %768 = add(%766, %767) /* ty=Tensor[(8, 6, 6), uint32] */;
  %769 = cast(%var_4026, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%768, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %773 = greater_equal(%771, %772) /* ty=Tensor[(8, 6, 6), bool] */;
  (%773,)
}

def @func_8216() -> Tensor[(10, 6, 13), float64] {
  @func_8214() /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_2399(%var_2376: Tensor[(1080, 1), float32], %var_2385: Tensor[(1080, 12), float32]) -> (Tensor[(10, 6, 13), int8], Tensor[(540, 2), bool], Tensor[(1080, 12), int8], Tensor[(1080, 12), float32], Tensor[(11, 3, 16), float64], Tensor[(528), float64]) {
  %774 = cast(%var_2376, dtype="float32") /* ty=Tensor[(1080, 1), float32] */;
  %775 = reshape(%774, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %776 = @func_1267(%775) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), float64]) */;
  %777 = cast(%var_2376, dtype="int8") /* ty=Tensor[(1080, 1), int8] */;
  %778 = cast(%var_2385, dtype="int8") /* ty=Tensor[(1080, 12), int8] */;
  %779 = cast(%var_2376, dtype="float32") /* ty=Tensor[(1080, 1), float32] */;
  %780 = cast(%var_2385, dtype="float32") /* ty=Tensor[(1080, 12), float32] */;
  %781 = cast(meta[relay.Constant][33] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %782 = reshape(%781, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), float64] */;
  %783 = @func_1019(%782) /* ty=(Tensor[(11, 3, 16), float64],) */;
  %784 = @func_650() /* ty=Tensor[(10, 6, 13), int8] */;
  %785 = %776.0;
  %786 = bitwise_and(%777, %778) /* ty=Tensor[(1080, 12), int8] */;
  %787 = floor_mod(%779, %780) /* ty=Tensor[(1080, 12), float32] */;
  %788 = %783.0;
  (%784, %785, %786, %787, %788, meta[relay.Constant][33] /* ty=Tensor[(528), float64] */)
}

def @func_11063(%var_11048: Tensor[(96, 1), uint64]) -> (Tensor[(10, 6, 13), float32], Tensor[(780), int8], Tensor[(96, 1), uint64], Tensor[(6, 4, 4), float32]) {
  %789 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %790 = cast(meta[relay.Constant][34] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %791 = %789.1;
  %792 = cast(%791, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %793 = reshape(%790, newshape=[]) /* ty=uint16 */;
  %794 = reshape(%792, newshape=[780]) /* ty=Tensor[(780), int8] */;
  %795 = @func_7197(%793, %794) /* ty=(Tensor[(8, 15, 7), uint16], Tensor[(10, 6, 13), uint64], Tensor[(780), int8]) */;
  %796 = cast(%var_11048, dtype="uint64") /* ty=Tensor[(96, 1), uint64] */;
  %797 = reshape(%796, newshape=[6, 4, 4]) /* ty=Tensor[(6, 4, 4), uint64] */;
  %798 = @func_9503(%797) /* ty=Tensor[(6, 4, 4), uint64] */;
  %799 = cast(%798, dtype="float32") /* ty=Tensor[(6, 4, 4), float32] */;
  %800 = cast(meta[relay.Constant][34] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %801 = %795.2;
  %802 = power(%799, %800) /* ty=Tensor[(6, 4, 4), float32] */;
  (%791, %801, %var_11048, %802)
}

def @func_2489() -> Tensor[(10, 6, 13), int8] {
  @func_1720() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_2857() -> (Tensor[(10, 6, 13), float32],) {
  @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_7755() -> (Tensor[(10, 6, 13), int8],) {
  %804 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %803 = @func_5144() /* ty=Tensor[(10, 6, 13), int8] */;
    (%803,)
  };
  %804() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_4247() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  %810 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
    %805 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %806 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
    %807 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
    %808 = %805.0;
    %809 = %806.1;
    (%807, %808, %809)
  };
  %810() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */
}

def @func_1269(%var_1268: Tensor[(540, 2), float32]) -> (Tensor[(540, 2), bool], Tensor[(540, 2), float64]) {
  %820 = fn (%var_1240: Tensor[(540, 2), float32]) -> (Tensor[(540, 2), bool], Tensor[(540, 2), float64]) {
    %811 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
    %812 = %811.4;
    %813 = cast(%var_1240, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
    %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(2), int32] */;
    %815 = cast(%812, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %817 = cast(%var_1240, dtype="float64") /* ty=Tensor[(540, 2), float64] */;
    %818 = logical_or(%815, %816) /* ty=Tensor[(540, 2), bool] */;
    %819 = sqrt(%817) /* ty=Tensor[(540, 2), float64] */;
    (%818, %819)
  };
  %820(%var_1268) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), float64]) */
}

def @func_4446() -> (Tensor[(10, 6, 13), int8],) {
  %822 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %821 = @func_877() /* ty=Tensor[(10, 6, 13), int8] */;
    (%821,)
  };
  %822() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_11665() -> Tensor[(5, 5, 10), float64] {
  @func_11663() /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_10488() -> (Tensor[(10, 6, 13), int8],) {
  @func_10486() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_6973() -> Tensor[(10, 6, 13), int8] {
  @func_2489() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_764(%var_763: Tensor[(4, 4, 14), int16]) -> (Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) {
  %840 = fn (%var_730: Tensor[(4, 4, 14), int16]) -> (Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) {
    %823 = cast(%var_730, dtype="int16") /* ty=Tensor[(4, 4, 14), int16] */;
    %824 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(4, 4, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %825 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 4, 14), int16] */, dtype="int16") /* ty=Tensor[(4, 4, 14), int16] */;
    %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %827 = cast(meta[relay.Constant][36] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %828 = reshape(%827, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
    %829 = @func_281(%828) /* ty=(Tensor[(9, 12, 10), float32],) */;
    %830 = cast(meta[relay.Constant][36] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %831 = reshape(%830, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
    %832 = @func_281(%831) /* ty=(Tensor[(9, 12, 10), float32],) */;
    %833 = cast(meta[relay.Constant][36] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %834 = reshape(%833, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
    %835 = @func_281(%834) /* ty=(Tensor[(9, 12, 10), float32],) */;
    %836 = multiply(%825, %826) /* ty=Tensor[(4, 4, 14), int16] */;
    %837 = %829.0;
    %838 = %832.0;
    %839 = %835.0;
    (%836, %837, meta[relay.Constant][36] /* ty=Tensor[(1080), float32] */, %838, %839)
  };
  %840(%var_763) /* ty=(Tensor[(4, 4, 14), int16], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(9, 12, 10), float32]) */
}

def @func_10280() -> Tensor[(10, 6, 13), float64] {
  %841 = fn () -> Tensor[(10, 6, 13), float64] {
    @func_1045() /* ty=Tensor[(10, 6, 13), float64] */
  };
  %841() /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_1215(%var_1214: Tensor[(3, 2, 5), float64]) -> (Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) {
  %856 = fn (%var_1186: Tensor[(3, 2, 5), float64]) -> (Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) {
    %842 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
    %843 = asin(%842) /* ty=Tensor[(3, 2, 5), float32] */;
    %844 = cast(%843, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
    %845 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(3, 2, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %846 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 2, 5), float32] */, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
    %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %848 = divide(%846, %847) /* ty=Tensor[(3, 2, 5), float64] */;
    %849 = cast(%var_1186, dtype="uint64") /* ty=Tensor[(3, 2, 5), uint64] */;
    %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%848, dtype="uint64") /* ty=Tensor[(3, 2, 5), uint64] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %853 = cast(%var_1186, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
    %854 = bitwise_and(%851, %852) /* ty=Tensor[(3, 2, 5), uint64] */;
    %855 = atanh(%853) /* ty=Tensor[(3, 2, 5), float64] */;
    (%854, %855)
  };
  %856(%var_1214) /* ty=(Tensor[(3, 2, 5), uint64], Tensor[(3, 2, 5), float64]) */
}

def @func_4138() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %863 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
    %857 = @func_1802() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %858 = @func_1850() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32]) */;
    %859 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %860 = %857.0;
    %861 = %858.0;
    %862 = %859.0;
    (%860, %861, %862)
  };
  %863() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_1307() -> Tensor[(10, 6, 13), float32] {
  @func_1305() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_7711() -> (Tensor[(528), float64],) {
  %865 = fn () -> (Tensor[(528), float64],) {
    %864 = @func_7037() /* ty=Tensor[(528), float64] */;
    (%864,)
  };
  %865() /* ty=(Tensor[(528), float64],) */
}

def @func_3304() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %866 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %867 = %866.0;
  %868 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  %869 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
  (%867, %868, %869)
}

def @func_3546(%var_3545: Tensor[(224), int16]) -> (Tensor[(10, 6, 2), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) {
  %881 = fn (%var_3524: Tensor[(224), int16]) -> (Tensor[(10, 6, 2), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) {
    %870 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 6, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 2), float64] */;
    %871 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %872 = cast(%var_3524, dtype="int16") /* ty=Tensor[(224), int16] */;
    %873 = reshape(%872, newshape=[224]) /* ty=Tensor[(224), int16] */;
    %874 = @func_1892(%873) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(2, 112), int16], Tensor[(224), int16]) */;
    %875 = sqrt(%870) /* ty=Tensor[(10, 6, 2), float64] */;
    %876 = @func_1767() /* ty=Tensor[(10, 6, 13), float32] */;
    %877 = %871.0;
    %878 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
    %879 = @func_1720() /* ty=Tensor[(10, 6, 13), int8] */;
    %880 = %874.5;
    (%875, %876, %877, %878, %879, %880, %var_3524)
  };
  %881(%var_3545) /* ty=(Tensor[(10, 6, 2), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) */
}

def @func_4318(%var_4294: Tensor[(10, 6, 13), uint64]) -> (Tensor[(10, 6, 13), bool], Tensor[(7, 3, 8), float32], Tensor[(1, 168), float32]) {
  %882 = @func_3622() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) */;
  %883 = %882.1;
  %884 = cast(%var_4294, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%883, dtype="bool") /* ty=Tensor[(10, 6, 13), bool] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %888 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %889 = reshape(%888, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
  %890 = @func_2203(%889) /* ty=(Tensor[(7, 3, 8), float32],) */;
  %891 = less(%886, %887) /* ty=Tensor[(10, 6, 13), bool] */;
  %892 = %890.0;
  (%891, %892, meta[relay.Constant][39] /* ty=Tensor[(1, 168), float32] */)
}

def @func_10679() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) {
  @func_10677() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) */
}

def @func_7285(%var_7284: Tensor[(4, 1, 15), float32]) -> Tensor[(4, 1, 15), float32] {
  %894 = fn (%var_7270: Tensor[(4, 1, 15), float32]) -> Tensor[(4, 1, 15), float32] {
    %893 = cast(%var_7270, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
    asinh(%893) /* ty=Tensor[(4, 1, 15), float32] */
  };
  %894(%var_7284) /* ty=Tensor[(4, 1, 15), float32] */
}

def @func_3693() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) {
  %895 = @func_2114() /* ty=Tensor[(10, 6, 13), float32] */;
  %896 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  (%895, %896)
}

def @func_4085() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %901 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
    %897 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
    %898 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %899 = %897.0;
    %900 = %898.0;
    (%899, %900)
  };
  %901() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */
}

def @func_10140(%var_10138: Tensor[(1, 6, 8), uint32]) -> (Tensor[(1, 6, 8), uint32], Tensor[(10, 6, 13), float32]) {
  @func_10137(%var_10138) /* ty=(Tensor[(1, 6, 8), uint32], Tensor[(10, 6, 13), float32]) */
}

def @func_11471() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  @func_11469() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */
}

def @func_6603(%var_6593: uint32, %var_6594: Tensor[(9, 4, 12), uint32]) -> Tensor[(9, 4, 12), uint32] {
  %902 = cast(%var_6593, dtype="uint32") /* ty=uint32 */;
  %903 = cast(%var_6594, dtype="uint32") /* ty=Tensor[(9, 4, 12), uint32] */;
  bitwise_xor(%902, %903) /* ty=Tensor[(9, 4, 12), uint32] */
}

def @func_11663() -> Tensor[(5, 5, 10), float64] {
  %904 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  sinh(%904) /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_9736() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %908 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
    %905 = @func_8852() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %906 = @func_5452() /* ty=Tensor[(10, 6, 13), float32] */;
    %907 = %905.0;
    (%906, %907)
  };
  %908() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_12243() -> (Tensor[(10, 6, 13), float64],) {
  %909 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %910 = %909.0;
  (%910,)
}

def @func_4625() -> (Tensor[(10, 6, 13), float64],) {
  %913 = fn () -> (Tensor[(10, 6, 13), float64],) {
    %911 = @func_3710() /* ty=(Tensor[(10, 6, 13), float64],) */;
    %912 = %911.0;
    (%912,)
  };
  %913() /* ty=(Tensor[(10, 6, 13), float64],) */
}

def @func_8357() -> (Tensor[(10, 6, 13), float32],) {
  %914 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %915 = %914.1;
  (%915,)
}

def @func_9462(%var_9459: uint32, %var_9460: Tensor[(12, 5, 2), uint32], %var_9461: Tensor[(1, 224), int16]) -> (Tensor[(12, 5, 2), uint32], Tensor[(9, 12, 10), float32], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int8]) {
  @func_9457(%var_9459, %var_9460, %var_9461) /* ty=(Tensor[(12, 5, 2), uint32], Tensor[(9, 12, 10), float32], Tensor[(1, 224), int16], Tensor[(10, 6, 13), int8]) */
}

def @func_3060() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) {
  @func_3058() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */
}

def @func_3246() -> (Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) {
  @func_3244() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) */
}

def @func_12383() -> Tensor[(528), float64] {
  %916 = fn () -> Tensor[(528), float64] {
    @func_7037() /* ty=Tensor[(528), float64] */
  };
  %916() /* ty=Tensor[(528), float64] */
}

def @func_6975() -> Tensor[(10, 6, 13), int8] {
  @func_6973() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9895() -> (Tensor[(10, 6, 13), int8],) {
  %917 = @func_4876() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %918 = %917.0;
  (%918,)
}

def @func_7063() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  @func_7061() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */
}

def @func_11784() -> (Tensor[(10, 6, 13), int8],) {
  @func_11782() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_10486() -> (Tensor[(10, 6, 13), int8],) {
  %919 = @func_6162() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %920 = %919.0;
  (%920,)
}

def @func_7534(%var_7533: Tensor[(28), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(28), float64]) {
  %927 = fn (%var_7520: Tensor[(28), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(28), float64]) {
    %921 = @func_5333() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %922 = cast(%var_7520, dtype="float64") /* ty=Tensor[(28), float64] */;
    %923 = reshape(%922, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), float64] */;
    %924 = @func_2731(%923) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) */;
    %925 = %921.0;
    %926 = %924.1;
    (%925, %926, %var_7520)
  };
  %927(%var_7533) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(28), float64]) */
}

def @func_879() -> Tensor[(10, 6, 13), int8] {
  @func_877() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_11112() -> (Tensor[(10, 6, 13), float32],) {
  %928 = @func_8194() /* ty=Tensor[(10, 6, 13), float32] */;
  (%928,)
}

def @func_4918() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
  %933 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) {
    %929 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %930 = @func_2544() /* ty=Tensor[(10, 6, 13), int8] */;
    %931 = @func_1305() /* ty=Tensor[(10, 6, 13), float32] */;
    %932 = %929.0;
    (%930, %931, %932)
  };
  %933() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */
}

def @func_6481(%var_6449: Tensor[(1080), float64]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(1, 168), float32], Tensor[(1080), float32], Tensor[(560), bool], Tensor[(1080), float64]) {
  %934 = @func_3347() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */;
  %935 = %934.3;
  %936 = cast(%935, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %937 = reshape(%936, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), float32] */;
  %938 = @func_2181(%937) /* ty=(Tensor[(10, 6, 13), float64],) */;
  %939 = %938.0;
  %940 = cast(%939, dtype="uint64") /* ty=Tensor[(10, 6, 13), uint64] */;
  %941 = reshape(%940, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), uint64] */;
  %942 = @func_4318(%941) /* ty=(Tensor[(10, 6, 13), bool], Tensor[(7, 3, 8), float32], Tensor[(1, 168), float32]) */;
  %943 = cast(meta[relay.Constant][41] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %944 = cast(%var_6449, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %945 = reshape(%943, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), bool] */;
  %946 = reshape(%944, newshape=[540, 2]) /* ty=Tensor[(540, 2), float64] */;
  %947 = @func_2451(%945, %946) /* ty=(Tensor[(7, 5, 16), bool], Tensor[(1080), float32], Tensor[(540, 2), float32]) */;
  %948 = %942.2;
  %949 = %947.1;
  (%935, %939, %948, %949, meta[relay.Constant][41] /* ty=Tensor[(560), bool] */, %var_6449)
}

def @func_9256(%var_9215: Tensor[(30), float64]) -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), float32], Tensor[(30), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(7, 3, 8), float32], Tensor[(168), float32]) {
  %950 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %951 = %950.0;
  %952 = cast(%951, dtype="int8") /* ty=Tensor[(10, 6, 13), int8] */;
  %953 = reshape(%952, newshape=[10, 6, 13]) /* ty=Tensor[(10, 6, 13), int8] */;
  %954 = cast(%var_9215, dtype="float64") /* ty=Tensor[(30), float64] */;
  %955 = reshape(%954, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %956 = @func_3415(%955) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 3), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(3, 2, 5), float32]) */;
  %957 = @func_7556() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %958 = cast(meta[relay.Constant][42] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %959 = reshape(%958, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
  %960 = @func_2203(%959) /* ty=(Tensor[(7, 3, 8), float32],) */;
  %961 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %962 = @func_684(%953) /* ty=Tensor[(10, 6, 13), uint64] */;
  %963 = %956.4;
  %964 = %957.0;
  %965 = @func_5260() /* ty=Tensor[(10, 6, 13), int8] */;
  %966 = %960.0;
  (%961, %951, %962, %963, %var_9215, %964, %965, %966, meta[relay.Constant][42] /* ty=Tensor[(168), float32] */)
}

def @func_5957() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %971 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
    %967 = @func_4246() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
    %968 = @func_5333() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %969 = %967.0;
    %970 = %968.0;
    (%969, %970)
  };
  %971() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) */
}

def @func_9318() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  @func_9316() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */
}

def @func_10103(%var_10101: Tensor[(910, 1), float64], %var_10102: Tensor[(14, 13, 5), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], float64, Tensor[(910, 1), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(14, 13, 5), int8]) {
  %990 = fn (%var_10086: Tensor[(910, 1), float64], %var_10094: Tensor[(14, 13, 5), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], float64, Tensor[(910, 1), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(14, 13, 5), int8]) {
    %972 = @func_3622() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) */;
    %973 = @func_7061() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
    %974 = cast(-7.59807f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %975 = cast(%var_10086, dtype="float64") /* ty=Tensor[(910, 1), float64] */;
    %976 = cast(meta[relay.Constant][43] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
    %977 = reshape(%974, newshape=[]) /* ty=float64 */;
    %978 = reshape(%975, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float64] */;
    %979 = reshape(%976, newshape=[224]) /* ty=Tensor[(224), int16] */;
    %980 = @func_3907(%977, %978, %979) /* ty=(Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) */;
    %981 = %980.0;
    %982 = cast(%var_10094, dtype="int8") /* ty=Tensor[(14, 13, 5), int8] */;
    %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
    %984 = cast(%981, dtype="int8") /* ty=Tensor[(14, 13, 5), int8] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %986 = %972.0;
    %987 = %973.0;
    %988 = @func_7819() /* ty=Tensor[(10, 6, 13), int8] */;
    %989 = left_shift(%984, %985) /* ty=Tensor[(14, 13, 5), int8] */;
    (%986, %987, -7.59807f64 /* ty=float64 */, %var_10086, meta[relay.Constant][43] /* ty=Tensor[(224), int16] */, %988, %989)
  };
  %990(%var_10101, %var_10102) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8], float64, Tensor[(910, 1), float64], Tensor[(224), int16], Tensor[(10, 6, 13), int8], Tensor[(14, 13, 5), int8]) */
}

def @func_5144() -> Tensor[(10, 6, 13), int8] {
  %991 = @func_4917() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %991.0
}

def @func_4878() -> (Tensor[(10, 6, 13), int8],) {
  @func_4876() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_10797() -> (Tensor[(10, 6, 13), float64],) {
  %994 = fn () -> (Tensor[(10, 6, 13), float64],) {
    %992 = @func_8940() /* ty=(Tensor[(10, 6, 13), float64],) */;
    %993 = %992.0;
    (%993,)
  };
  %994() /* ty=(Tensor[(10, 6, 13), float64],) */
}

def @func_1663(%var_1633: Tensor[(10, 6, 13), float32]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %995 = @func_1451() /* ty=Tensor[(10, 6, 13), float32] */;
  %996 = cast(%var_1633, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %997 = shape_of(%995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%995, dtype="float32") /* ty=Tensor[(10, 6, 13), float32] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1000 = mod(%998, %999) /* ty=Tensor[(10, 6, 13), float32] */;
  %1001 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  (%1000, %1001)
}

def @func_3347() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32]) {
  %1002 = @func_2855() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %1003 = @func_3092() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %1004 = @func_3244() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) */;
  %1005 = %1002.0;
  %1006 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
  %1007 = %1003.0;
  %1008 = %1004.0;
  (%1005, %1006, %1007, %1008)
}

def @func_6843() -> (Tensor[(10, 6, 13), int8],) {
  @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_4036(%var_4034: Tensor[(8, 1, 6), int64], %var_4035: Tensor[(8, 6, 6), uint32]) -> (Tensor[(8, 6, 6), bool],) {
  @func_4032(%var_4034, %var_4035) /* ty=(Tensor[(8, 6, 6), bool],) */
}

def @func_5333() -> (Tensor[(10, 6, 13), float32],) {
  %1009 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
  (%1009,)
}

def @func_3800(%var_3748: Tensor[(12, 3, 10), bool], %var_3749: Tensor[(12, 3, 10), bool]) -> (Tensor[(10, 6, 13), float32], Tensor[(540, 2), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(12, 3, 10), uint8]) {
  %1010 = @func_866() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(10, 6, 13), uint64], Tensor[(9, 12, 10), float32], Tensor[(540, 2), float32]) */;
  %1011 = @func_2512() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %1012 = @func_3194() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %1013 = cast(%var_3749, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %1014 = shape_of(%var_3748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%var_3748, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1017 = logical_and(%1015, %1016) /* ty=Tensor[(12, 3, 10), bool] */;
  %1018 = cast(%var_3748, dtype="uint8") /* ty=Tensor[(12, 3, 10), uint8] */;
  %1019 = shape_of(%1017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(%1017, dtype="uint8") /* ty=Tensor[(12, 3, 10), uint8] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1022 = @func_1615() /* ty=Tensor[(10, 6, 13), float32] */;
  %1023 = %1010.4;
  %1024 = @func_2137() /* ty=Tensor[(10, 6, 13), int8] */;
  %1025 = %1011.0;
  %1026 = %1012.0;
  %1027 = maximum(%1020, %1021) /* ty=Tensor[(12, 3, 10), uint8] */;
  (%1022, %1023, %1024, %1025, %1026, %1027)
}

def @func_2479(%var_2477: Tensor[(10, 6, 13), float32]) -> Tensor[(10, 6, 13), uint16] {
  @func_2476(%var_2477) /* ty=Tensor[(10, 6, 13), uint16] */
}

def @func_2512() -> (Tensor[(10, 6, 13), float32],) {
  %1028 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
  %1029 = %1028.1;
  (%1029,)
}

def @func_8235() -> Tensor[(10, 6, 13), int8] {
  @func_8233() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_10677() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64]) {
  %1030 = @func_1802() /* ty=(Tensor[(10, 6, 13), float32],) */;
  %1031 = @func_2323() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
  %1032 = %1030.0;
  %1033 = %1031.1;
  (%1032, %1033)
}

def @func_9316() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) {
  %1034 = @func_9122() /* ty=Tensor[(10, 6, 13), float32] */;
  %1035 = @func_7722() /* ty=Tensor[(10, 6, 13), int8] */;
  %1036 = @func_5144() /* ty=Tensor[(10, 6, 13), int8] */;
  (%1034, %1035, %1036)
}

def @func_877() -> Tensor[(10, 6, 13), int8] {
  @func_650() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9621() -> Tensor[(10, 6, 13), int8] {
  %1037 = fn () -> Tensor[(10, 6, 13), int8] {
    @func_5144() /* ty=Tensor[(10, 6, 13), int8] */
  };
  %1037() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_9348(%var_9329: Tensor[(7, 10, 9), int16], %var_9330: Tensor[(7, 10, 9), int16], %var_9343: Tensor[(12960), float32]) -> (Tensor[(7, 10, 9), int16], Tensor[(1080, 12), float32], Tensor[(1080), float32], Tensor[(12960), float32]) {
  %1038 = cast(%var_9330, dtype="int16") /* ty=Tensor[(7, 10, 9), int16] */;
  %1039 = shape_of(%var_9329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%var_9329, dtype="int16") /* ty=Tensor[(7, 10, 9), int16] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1042 = cast(meta[relay.Constant][44] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1043 = cast(%var_9343, dtype="float32") /* ty=Tensor[(12960), float32] */;
  %1044 = reshape(%1042, newshape=[1080, 1]) /* ty=Tensor[(1080, 1), float32] */;
  %1045 = reshape(%1043, newshape=[1080, 12]) /* ty=Tensor[(1080, 12), float32] */;
  %1046 = @func_2399(%1044, %1045) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(540, 2), bool], Tensor[(1080, 12), int8], Tensor[(1080, 12), float32], Tensor[(11, 3, 16), float64], Tensor[(528), float64]) */;
  %1047 = subtract(%1040, %1041) /* ty=Tensor[(7, 10, 9), int16] */;
  %1048 = %1046.3;
  (%1047, %1048, meta[relay.Constant][44] /* ty=Tensor[(1080), float32] */, %var_9343)
}

def @func_1021(%var_1020: Tensor[(11, 3, 16), float64]) -> (Tensor[(11, 3, 16), float64],) {
  %1051 = fn (%var_1013: Tensor[(11, 3, 16), float64]) -> (Tensor[(11, 3, 16), float64],) {
    %1049 = cast(%var_1013, dtype="float64") /* ty=Tensor[(11, 3, 16), float64] */;
    %1050 = log10(%1049) /* ty=Tensor[(11, 3, 16), float64] */;
    (%1050,)
  };
  %1051(%var_1020) /* ty=(Tensor[(11, 3, 16), float64],) */
}

def @func_5453() -> Tensor[(10, 6, 13), float32] {
  %1052 = fn () -> Tensor[(10, 6, 13), float32] {
    @func_4739() /* ty=Tensor[(10, 6, 13), float32] */
  };
  %1052() /* ty=Tensor[(10, 6, 13), float32] */
}

def @func_6632() -> (Tensor[(10, 6, 13), int8],) {
  %1055 = fn () -> (Tensor[(10, 6, 13), int8],) {
    %1053 = @func_3622() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64]) */;
    %1054 = %1053.0;
    (%1054,)
  };
  %1055() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_8277(%var_8236: Tensor[(5, 16, 10), bool], %var_8237: Tensor[(5, 16, 10), bool], %var_8261: Tensor[(910), float64]) -> (Tensor[(5, 16, 10), bool], Tensor[(5, 16, 10), float64], Tensor[(9, 12, 10), float32], float64, Tensor[(910), float64], Tensor[(112, 2), int16]) {
  %1056 = cast(%var_8237, dtype="bool") /* ty=Tensor[(5, 16, 10), bool] */;
  %1057 = shape_of(%var_8236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1058 = cast(%var_8236, dtype="bool") /* ty=Tensor[(5, 16, 10), bool] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1060 = cast(%var_8236, dtype="float32") /* ty=Tensor[(5, 16, 10), float32] */;
  %1061 = asinh(%1060) /* ty=Tensor[(5, 16, 10), float32] */;
  %1062 = cast(%1061, dtype="float64") /* ty=Tensor[(5, 16, 10), float64] */;
  %1063 = cast(-2.71982f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1064 = cast(%var_8261, dtype="float64") /* ty=Tensor[(910), float64] */;
  %1065 = cast(meta[relay.Constant][45] /* ty=Tensor[(112, 2), int16] */, dtype="int16") /* ty=Tensor[(112, 2), int16] */;
  %1066 = reshape(%1063, newshape=[]) /* ty=float64 */;
  %1067 = reshape(%1064, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float64] */;
  %1068 = reshape(%1065, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %1069 = @func_3907(%1066, %1067, %1068) /* ty=(Tensor[(14, 13, 5), float64], Tensor[(9, 12, 10), float32], Tensor[(1080), float32], Tensor[(9, 12, 10), float32], Tensor[(224), int16]) */;
  %1070 = logical_and(%1058, %1059) /* ty=Tensor[(5, 16, 10), bool] */;
  %1071 = cosh(%1062) /* ty=Tensor[(5, 16, 10), float64] */;
  %1072 = %1069.3;
  (%1070, %1071, %1072, -2.71982f64 /* ty=float64 */, %var_8261, meta[relay.Constant][45] /* ty=Tensor[(112, 2), int16] */)
}

def @func_9897() -> (Tensor[(10, 6, 13), int8],) {
  @func_9895() /* ty=(Tensor[(10, 6, 13), int8],) */
}

def @func_3711() -> (Tensor[(10, 6, 13), float64],) {
  %1074 = fn () -> (Tensor[(10, 6, 13), float64],) {
    %1073 = @func_2071() /* ty=Tensor[(10, 6, 13), float64] */;
    (%1073,)
  };
  %1074() /* ty=(Tensor[(10, 6, 13), float64],) */
}

def @func_9353(%var_9350: Tensor[(7, 10, 9), int16], %var_9351: Tensor[(7, 10, 9), int16], %var_9352: Tensor[(12960), float32]) -> (Tensor[(7, 10, 9), int16], Tensor[(1080, 12), float32], Tensor[(1080), float32], Tensor[(12960), float32]) {
  @func_9348(%var_9350, %var_9351, %var_9352) /* ty=(Tensor[(7, 10, 9), int16], Tensor[(1080, 12), float32], Tensor[(1080), float32], Tensor[(12960), float32]) */
}

def @func_8689() -> Tensor[(10, 6, 13), int8] {
  %1075 = @func_2976() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
  %1075.0
}

def @func_11066(%var_11064: Tensor[(96, 1), uint64]) -> (Tensor[(10, 6, 13), float32], Tensor[(780), int8], Tensor[(96, 1), uint64], Tensor[(6, 4, 4), float32]) {
  @func_11063(%var_11064) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(780), int8], Tensor[(96, 1), uint64], Tensor[(6, 4, 4), float32]) */
}

def @func_12002() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) {
  %1089 = fn () -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) {
    %1076 = @func_9143() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64]) */;
    %1077 = @func_6841() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %1078 = @func_8414() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %1079 = @func_9316() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
    %1080 = cast(meta[relay.Constant][46] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
    %1081 = reshape(%1080, newshape=[224]) /* ty=Tensor[(224), int16] */;
    %1082 = @func_3544(%1081) /* ty=(Tensor[(10, 6, 2), float64], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) */;
    %1083 = %1076.1;
    %1084 = %1077.0;
    %1085 = @func_5521() /* ty=Tensor[(10, 6, 13), float32] */;
    %1086 = %1078.0;
    %1087 = %1079.2;
    %1088 = %1082.5;
    (%1083, %1084, %1085, %1086, %1087, %1088, meta[relay.Constant][46] /* ty=Tensor[(224), int16] */)
  };
  %1089() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(224), int16], Tensor[(224), int16]) */
}

def @func_4695() -> Tensor[(10, 6, 13), int8] {
  @func_877() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_845(%var_843: Tensor[(2, 112), int16]) -> (Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) {
  @func_842(%var_843) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(9, 12, 10), float32], Tensor[(2, 112), int16]) */
}

def @func_4562(%var_4560: Tensor[(12, 3, 4), int64], %var_4561: Tensor[(30), float64]) -> (Tensor[(12, 3, 4), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  @func_4558(%var_4560, %var_4561) /* ty=(Tensor[(12, 3, 4), bool], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), bool], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */
}

def @func_3244() -> (Tensor[(10, 6, 13), float32], Tensor[(168), float32], Tensor[(7, 3, 8), float64]) {
  %1090 = cast(meta[relay.Constant][47] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1091 = reshape(%1090, newshape=[7, 3, 8]) /* ty=Tensor[(7, 3, 8), float32] */;
  %1092 = @func_2203(%1091) /* ty=(Tensor[(7, 3, 8), float32],) */;
  %1093 = %1092.0;
  %1094 = cast(%1093, dtype="float64") /* ty=Tensor[(7, 3, 8), float64] */;
  %1095 = @func_3105() /* ty=Tensor[(10, 6, 13), float32] */;
  %1096 = log(%1094) /* ty=Tensor[(7, 3, 8), float64] */;
  (%1095, meta[relay.Constant][47] /* ty=Tensor[(168), float32] */, %1096)
}

def @func_2072() -> Tensor[(10, 6, 13), float64] {
  %1098 = fn () -> Tensor[(10, 6, 13), float64] {
    %1097 = @func_1144() /* ty=(Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) */;
    %1097.0
  };
  %1098() /* ty=Tensor[(10, 6, 13), float64] */
}

def @func_2731(%var_2683: Tensor[(4, 1, 7), float64]) -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), uint64], Tensor[(4, 132), float64], Tensor[(4, ?, 7), uint32], Tensor[(4, ?, 7), bool]) {
  %1099 = @func_1367() /* ty=(Tensor[(10, 6, 13), int8],) */;
  %1100 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 132), float64] */, dtype="float64") /* ty=Tensor[(4, 132), float64] */;
  %1101 = reshape(%1100, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1102 = @func_2103(%1101) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
  %1103 = cast(%var_2683, dtype="float64") /* ty=Tensor[(4, 1, 7), float64] */;
  %1104 = asin(%1103) /* ty=Tensor[(4, 1, 7), float64] */;
  %1105 = cast(%var_2683, dtype="uint32") /* ty=Tensor[(4, 1, 7), uint32] */;
  %1106 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1107 = cast(%1104, dtype="uint32") /* ty=Tensor[(4, 1, 7), uint32] */;
  %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1109 = cast(%var_2683, dtype="bool") /* ty=Tensor[(4, 1, 7), bool] */;
  %1110 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1111 = cast(%1104, dtype="bool") /* ty=Tensor[(4, 1, 7), bool] */;
  %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1113 = %1099.0;
  %1114 = %1102.3;
  %1115 = bitwise_or(%1107, %1108) /* ty=Tensor[(4, ?, 7), uint32] */;
  %1116 = logical_and(%1111, %1112) /* ty=Tensor[(4, ?, 7), bool] */;
  (%1113, %1114, meta[relay.Constant][48] /* ty=Tensor[(4, 132), float64] */, %1115, %1116)
}

def @func_9752(%var_9740: Tensor[(12, 13, 1), int16], %var_9741: Tensor[(12, 13, 12), int16]) -> Tensor[(12, 13, 12), int16] {
  %1117 = cast(%var_9740, dtype="int16") /* ty=Tensor[(12, 13, 1), int16] */;
  %1118 = cast(%var_9741, dtype="int16") /* ty=Tensor[(12, 13, 12), int16] */;
  minimum(%1117, %1118) /* ty=Tensor[(12, 13, 12), int16] */
}

def @func_10886() -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %1128 = fn () -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
    %1119 = cast(meta[relay.Constant][49] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %1120 = reshape(%1119, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %1121 = @func_2103(%1120) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(11, 3, 16), float64], Tensor[(528), float64], Tensor[(10, 6, 13), uint64]) */;
    %1122 = @func_4739() /* ty=Tensor[(10, 6, 13), float32] */;
    %1123 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
    %1124 = @func_8769() /* ty=Tensor[(10, 6, 13), float64] */;
    %1125 = %1121.2;
    %1126 = @func_2530() /* ty=Tensor[(10, 6, 13), int8] */;
    %1127 = @func_9122() /* ty=Tensor[(10, 6, 13), float32] */;
    (%1122, %1123, %1124, %1125, meta[relay.Constant][49] /* ty=Tensor[(528), float64] */, %1126, %1127)
  };
  %1128() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */
}

def @func_9004() -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
  %1132 = fn () -> (Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) {
    %1129 = @func_4406() /* ty=(Tensor[(10, 6, 13), int8],) */;
    %1130 = %1129.0;
    %1131 = @func_4662() /* ty=Tensor[(10, 6, 13), float32] */;
    (%1130, %1131)
  };
  %1132() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */
}

def @func_9269() -> Tensor[(10, 6, 13), int8] {
  @func_9267() /* ty=Tensor[(10, 6, 13), int8] */
}

def @func_5832(%var_5829: Tensor[(2, 264), float64], %var_5830: Tensor[(1, 910), float64], %var_5831: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(2, 264), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(1, 910), float64], Tensor[(224), int16]) {
  %1147 = fn (%var_5808: Tensor[(2, 264), float64], %var_5822: Tensor[(1, 910), float64], %var_5823: Tensor[(224), int16]) -> (Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(2, 264), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(1, 910), float64], Tensor[(224), int16]) {
    %1133 = @func_1802() /* ty=(Tensor[(10, 6, 13), float32],) */;
    %1134 = cast(%var_5808, dtype="float64") /* ty=Tensor[(2, 264), float64] */;
    %1135 = reshape(%1134, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %1136 = @func_5573(%1135) /* ty=(Tensor[(10, 6, 13), int8], Tensor[(528), float64], Tensor[(528), float64]) */;
    %1137 = @func_2976() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), int8]) */;
    %1138 = cast(%var_5822, dtype="float64") /* ty=Tensor[(1, 910), float64] */;
    %1139 = cast(%var_5823, dtype="int16") /* ty=Tensor[(224), int16] */;
    %1140 = reshape(%1138, newshape=[1, 910]) /* ty=Tensor[(1, 910), float64] */;
    %1141 = reshape(%1139, newshape=[2, 112]) /* ty=Tensor[(2, 112), int16] */;
    %1142 = @func_5193(%1140, %1141) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) */;
    %1143 = %1133.0;
    %1144 = %1136.0;
    %1145 = %1137.1;
    %1146 = %1142.0;
    (%1143, %1144, %var_5808, %1145, %1146, %var_5822, %var_5823)
  };
  %1147(%var_5829, %var_5830, %var_5831) /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8], Tensor[(2, 264), float64], Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float64], Tensor[(1, 910), float64], Tensor[(224), int16]) */
}

def @func_7558() -> (Tensor[(10, 6, 13), float32],) {
  @func_7556() /* ty=(Tensor[(10, 6, 13), float32],) */
}

def @func_1144() -> (Tensor[(10, 6, 13), float64], Tensor[(10, 6, 13), float32]) {
  %1148 = @func_957() /* ty=(Tensor[(10, 6, 13), float32], Tensor[(10, 6, 13), int8]) */;
  %1149 = @func_1045() /* ty=Tensor[(10, 6, 13), float64] */;
  %1150 = %1148.0;
  (%1149, %1150)
}

def @func_5197(%var_5195: Tensor[(1, 910), float64], %var_5196: Tensor[(2, 112), int16]) -> (Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) {
  @func_5193(%var_5195, %var_5196) /* ty=(Tensor[(10, 6, 13), float64], Tensor[(224), int16], float64, Tensor[(1, 910), float64], Tensor[(2, 112), int16]) */
}

def @func_6162() -> (Tensor[(10, 6, 13), int8],) {
  %1151 = @func_4084() /* ty=(Tensor[(10, 6, 13), int8], Tensor[(10, 6, 13), float32]) */;
  %1152 = %1151.0;
  (%1152,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen303/build/output.py:4187: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen303/build/output.py", line 4192, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1008) tvmgen_default_fused_reshape_add_kernel0(signed char* __restrict__ T_add, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_add[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] + placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


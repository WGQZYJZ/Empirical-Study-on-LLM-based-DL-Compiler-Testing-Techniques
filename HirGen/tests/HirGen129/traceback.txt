==========mod==========
#[version = "0.0.5"]
def @func_6135(%var_6059: Tensor[(294), int64], %var_6065: Tensor[(100, 2), int8], %var_6108: Tensor[(660), float64]) -> (Tensor[(4, 9, 6), int8], Tensor[(6, 15), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64], Tensor[(10, 2, 10), bool], Tensor[(10, 3, 7), float64], Tensor[(35, 6), float64], Tensor[(100, 2), float64], Tensor[(15, 11, 4), float64], Tensor[(660), float64], Tensor[(4, 9, 6), int64], Tensor[(8, 4, 1), float64], Tensor[(8, 4), float64], Tensor[(6, 15), float64]) {
  %0 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 9, 6), bool] */, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %5 = cast(%var_6059, dtype="int64") /* ty=Tensor[(294), int64] */;
  %6 = cast(%var_6059, dtype="int64") /* ty=Tensor[(294), int64] */;
  %7 = cast(%var_6059, dtype="float32") /* ty=Tensor[(294), float32] */;
  %8 = reshape(%5, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %9 = reshape(%6, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %10 = reshape(%7, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %11 = @func_1534(%8, %9, %10) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %12 = cast(%var_6065, dtype="int8") /* ty=Tensor[(100, 2), int8] */;
  %13 = cast(%var_6065, dtype="int8") /* ty=Tensor[(100, 2), int8] */;
  %14 = reshape(%12, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %15 = reshape(%13, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %16 = @func_1786(%14, %15) /* ty=(Tensor[(10, 2, 10), bool],) */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %18 = reshape(%17, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %19 = cast(%var_6065, dtype="float64") /* ty=Tensor[(100, 2), float64] */;
  %20 = cast(%var_6108, dtype="float64") /* ty=Tensor[(660), float64] */;
  %21 = reshape(%20, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float64] */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 9, 6), bool] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %23 = reshape(%22, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %24 = @func_5679(%23) /* ty=(Tensor[(4, 9, 6), int64],) */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 4), float64] */;
  %26 = reshape(%25, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), float64] */;
  %27 = bitwise_or(%3, %4) /* ty=Tensor[(4, 9, 6), int8] */;
  %28 = @func_6014() /* ty=Tensor[(6, 15), float64] */;
  %29 = %11.2;
  %30 = %16.0;
  %31 = @func_1576(%18) /* ty=Tensor[(10, 3, 7), float64] */;
  %32 = sqrt(%19) /* ty=Tensor[(100, 2), float64] */;
  %33 = @func_4063(%21) /* ty=Tensor[(15, 11, 4), float64] */;
  %34 = %24.0;
  %35 = @func_2523(%26) /* ty=Tensor[(8, 4, 1), float64] */;
  %36 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%27, %28, %29, %var_6059, %30, %31, meta[relay.Constant][1] /* ty=Tensor[(35, 6), float64] */, %32, %33, %var_6108, %34, %35, meta[relay.Constant][2] /* ty=Tensor[(8, 4), float64] */, %36)
}

def @func_2921(%var_2909: Tensor[(16, 7, 1), int16], %var_2910: Tensor[(16, 7, 7), int16]) -> Tensor[(16, 7, 7), bool] {
  %37 = cast(%var_2909, dtype="bool") /* ty=Tensor[(16, 7, 1), bool] */;
  %38 = cast(%var_2910, dtype="bool") /* ty=Tensor[(16, 7, 7), bool] */;
  less(%37, %38) /* ty=Tensor[(16, 7, 7), bool] */
}

def @func_3437(%var_3374: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %39 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %40 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %41 = cast(%var_3374, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %45 = power(%43, %44) /* ty=Tensor[(4, 9, 6), float64] */;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %47 = asinh(%46) /* ty=Tensor[(4, 9, 6), float64] */;
  %48 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %49 = cast(%48, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %50 = shape_of(%47, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%47, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %53 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %54 = %39.0;
  %55 = @func_3046() /* ty=Tensor[(6, 15), float64] */;
  %56 = logical_and(%51, %52) /* ty=Tensor[(4, 9, 6), bool] */;
  %57 = %53.1;
  (%54, %55, %56, %57)
}

def @func_7071() -> Tensor[(6, 15), float64] {
  %58 = @func_4468() /* ty=(Tensor[(6, 15), float64],) */;
  %58.0
}

def @func_2162() -> Tensor[(6, 15), float64] {
  %59 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %59.0
}

def @func_1728() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) {
  %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 15), float64] */, dtype="float64") /* ty=Tensor[(6, 15), float64] */;
  %61 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), int8] */, dtype="int8") /* ty=Tensor[(216), int8] */;
  %62 = reshape(%61, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
  %63 = @func_1286(%62) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
  %64 = log10(%60) /* ty=Tensor[(6, 15), float64] */;
  %65 = %63.1;
  (%64, %65, meta[relay.Constant][4] /* ty=Tensor[(216), int8] */)
}

def @func_5451(%var_5442: Tensor[(16, 16, 12), uint32], %var_5443: Tensor[(16, 16, 12), uint32], %var_5448: Tensor[(1, 130), float64], %var_5449: Tensor[(216), bool]) -> (Tensor[(16, 16, 12), uint32], Tensor[(6, 15), float64], Tensor[(1, 130), float64], Tensor[(216), bool]) {
  %66 = cast(%var_5443, dtype="uint32") /* ty=Tensor[(16, 16, 12), uint32] */;
  %67 = shape_of(%var_5442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%var_5442, dtype="uint32") /* ty=Tensor[(16, 16, 12), uint32] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %70 = cast(%var_5448, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
  %71 = cast(%var_5449, dtype="bool") /* ty=Tensor[(216), bool] */;
  %72 = reshape(%70, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %73 = reshape(%71, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %74 = @func_4115(%72, %73) /* ty=(Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) */;
  %75 = bitwise_and(%68, %69) /* ty=Tensor[(16, 16, 12), uint32] */;
  %76 = %74.0;
  (%75, %76, %var_5448, %var_5449)
}

def @func_2491(%var_2412: Tensor[(6, 16, 1), float32], %var_2416: Tensor[(6, 16, 15), float32], %var_2424: Tensor[(6, 16, 15), float64], %var_2486: Tensor[(294), int64]) -> (Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) {
  %77 = cast(%var_2412, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
  %78 = acos(%77) /* ty=Tensor[(6, 16, 1), float32] */;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
  %80 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 70), float64] */, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
  %82 = reshape(%81, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), float64] */;
  %83 = @func_235(%82) /* ty=(Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */;
  %84 = cast(%var_2412, dtype="float64") /* ty=Tensor[(6, 16, 1), float64] */;
  %85 = cast(%var_2416, dtype="float64") /* ty=Tensor[(6, 16, 15), float64] */;
  %86 = floor_mod(%84, %85) /* ty=Tensor[(6, 16, 15), float64] */;
  %87 = cast(%var_2424, dtype="float32") /* ty=Tensor[(6, 16, 15), float32] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="float32") /* ty=Tensor[(6, 16, 15), float32] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %91 = mod(%89, %90) /* ty=Tensor[(6, 16, 15), float32] */;
  %92 = cast(%78, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
  %93 = cast(%91, dtype="bool") /* ty=Tensor[(6, 16, 15), bool] */;
  %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(416, 1), float64] */, dtype="float64") /* ty=Tensor[(416, 1), float64] */;
  %95 = %80.2;
  %96 = cast(%95, dtype="int8") /* ty=Tensor[(216), int8] */;
  %97 = reshape(%94, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %98 = reshape(%96, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %99 = @func_2245(%97, %98) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %100 = cast(%var_2486, dtype="int64") /* ty=Tensor[(294), int64] */;
  %101 = cast(%var_2486, dtype="int64") /* ty=Tensor[(294), int64] */;
  %102 = cast(%var_2486, dtype="float32") /* ty=Tensor[(294), float32] */;
  %103 = reshape(%100, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %104 = reshape(%101, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %105 = reshape(%102, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %106 = @func_1534(%103, %104, %105) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %107 = rsqrt(%79) /* ty=Tensor[(6, 16, 1), float32] */;
  %108 = %83.1;
  %109 = less_equal(%92, %93) /* ty=Tensor[(6, 16, 15), bool] */;
  %110 = %99.0;
  %111 = %106.1;
  (%107, %95, %108, meta[relay.Constant][5] /* ty=Tensor[(1, 70), float64] */, %109, %110, meta[relay.Constant][6] /* ty=Tensor[(416, 1), float64] */, %111, %var_2486)
}

def @func_4139() -> Tensor[(4, 9, 6), bool] {
  %112 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %112.0
}

def @func_6258() -> (Tensor[(4, 9, 6), bool],) {
  %113 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
  (%113,)
}

def @func_7404() -> (Tensor[(6, 15), float64], Tensor[(14, ?, 9), bool], Tensor[(14, ?, 9), float64], Tensor[(14, 1, 9), float32]) {
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  %115 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %118 = equal(%116, %117) /* ty=Tensor[(14, ?, 9), bool] */;
  %119 = cast(%118, dtype="bool") /* ty=Tensor[(14, ?, 9), bool] */;
  %120 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %123 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="float64") /* ty=Tensor[(14, 1, 9), float64] */;
  %124 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="float64") /* ty=Tensor[(14, 1, 9), float64] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="float32") /* ty=Tensor[(14, 1, 9), float32] */;
  %128 = @func_2595() /* ty=Tensor[(6, 15), float64] */;
  %129 = greater(%121, %122) /* ty=Tensor[(14, ?, 9), bool] */;
  %130 = power(%125, %126) /* ty=Tensor[(14, ?, 9), float64] */;
  %131 = acos(%127) /* ty=Tensor[(14, 1, 9), float32] */;
  (%128, %129, %130, %131)
}

def @func_8397(%var_8390: Tensor[(8, 6, 4), bool]) -> (Tensor[(8, 6, 4), bool],) {
  %132 = cast(%var_8390, dtype="bool") /* ty=Tensor[(8, 6, 4), bool] */;
  %133 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(8, 6, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 6, 4), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 4), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %136 = logical_or(%134, %135) /* ty=Tensor[(8, 6, 4), bool] */;
  (%136,)
}

def @func_5418() -> (Tensor[(216), int8],) {
  %137 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %138 = %137.0;
  (%138,)
}

def @func_4543() -> (Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) {
  %139 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %140 = @func_4512() /* ty=(Tensor[(6, 15), float64],) */;
  %141 = %139.0;
  %142 = %140.0;
  (%141, %142)
}

def @func_7494() -> (Tensor[(6, 15), float64],) {
  %143 = @func_3833() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
  %144 = %143.1;
  (%144,)
}

def @func_1903() -> Tensor[(4, 9, 6), bool] {
  %145 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %145.1
}

def @func_1286(%var_1266: Tensor[(4, 9, 6), int8]) -> (Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) {
  %146 = cast(%var_1266, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %147 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(4, 9, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 9, 6), int8] */, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %150 = cast(%var_1266, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %151 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(4, 9, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 9, 6), int8] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %154 = cast(%var_1266, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %155 = logical_xor(%148, %149) /* ty=Tensor[(4, 9, 6), int8] */;
  %156 = less_equal(%152, %153) /* ty=Tensor[(4, 9, 6), bool] */;
  %157 = sqrt(%154) /* ty=Tensor[(4, 9, 6), float64] */;
  (%155, %156, %157)
}

def @func_5679(%var_5664: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), int64],) {
  %158 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
  %159 = cast(%var_5664, dtype="int64") /* ty=Tensor[(4, 9, 6), int64] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="int64") /* ty=Tensor[(4, 9, 6), int64] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %163 = multiply(%161, %162) /* ty=Tensor[(4, 9, 6), int64] */;
  (%163,)
}

def @func_8932() -> Tensor[(7, 3, 14), bool] {
  %164 = @func_4641() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) */;
  %164.1
}

def @func_3046() -> Tensor[(6, 15), float64] {
  %165 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %165.0
}

def @func_7885() -> Tensor[(4, 9, 6), float32] {
  @func_7323() /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_235(%var_161: Tensor[(1, 10, 7), float64]) -> (Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) {
  %166 = cast(%var_161, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %167 = log2(%166) /* ty=Tensor[(1, 10, 7), float64] */;
  %168 = cast(%167, dtype="int64") /* ty=Tensor[(1, 10, 7), int64] */;
  %169 = shape_of(%var_161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_161, dtype="int64") /* ty=Tensor[(1, 10, 7), int64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %172 = bitwise_xor(%170, %171) /* ty=Tensor[(?, 10, 7), int64] */;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(?, 10, 7), float64] */;
  %174 = cos(%173) /* ty=Tensor[(?, 10, 7), float64] */;
  %175 = cast(%var_161, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%174, dtype="int8") /* ty=Tensor[(?, 10, 7), int8] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %179 = right_shift(%177, %178) /* ty=Tensor[(?, 10, 7), int8] */;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(?, 10, 7), float64] */;
  %181 = cast(%174, dtype="float32") /* ty=Tensor[(?, 10, 7), float32] */;
  %182 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%179, dtype="float32") /* ty=Tensor[(?, 10, 7), float32] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %185 = cast(meta[relay.Constant][11] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %186 = reshape(%185, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %187 = @func_50(%186) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %188 = cast(meta[relay.Constant][11] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %189 = reshape(%188, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %190 = @func_50(%189) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %191 = tan(%180) /* ty=Tensor[(?, 10, 7), float64] */;
  %192 = power(%183, %184) /* ty=Tensor[(?, 10, 7), float32] */;
  %193 = %187.0;
  %194 = %190.0;
  (%191, %192, %193, meta[relay.Constant][11] /* ty=Tensor[(130), float64] */, %194)
}

def @func_8808() -> (Tensor[(216), int8],) {
  %195 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %196 = %195.0;
  (%196,)
}

def @func_6967() -> (Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) {
  %197 = @func_4641() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) */;
  %198 = @func_4641() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) */;
  %199 = %197.2;
  %200 = cast(%199, dtype="int64") /* ty=Tensor[(294), int64] */;
  %201 = reshape(%200, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %202 = @func_3724(%201) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
  %203 = %198.0;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %205 = reshape(%204, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %206 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %207 = reshape(%206, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %208 = @func_50(%207) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %209 = %202.4;
  %210 = @func_1885(%205) /* ty=Tensor[(3, 12, 6), float32] */;
  %211 = %208.0;
  (%199, %203, %209, %210, %211, meta[relay.Constant][12] /* ty=Tensor[(13, 10), float64] */)
}

def @func_7323() -> Tensor[(4, 9, 6), float32] {
  %212 = @func_5940() /* ty=Tensor[(4, 9, 6), bool] */;
  %213 = cast(%212, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  sinh(%213) /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_6846() -> (Tensor[(6, 15), float64],) {
  %214 = @func_2646() /* ty=Tensor[(6, 15), float64] */;
  (%214,)
}

def @func_6681(%var_6670: Tensor[(2, 10, 9), float32]) -> Tensor[(2, 10, 9), float32] {
  %215 = cast(%var_6670, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
  asin(%215) /* ty=Tensor[(2, 10, 9), float32] */
}

def @func_7139(%var_7132: Tensor[(200), int8]) -> (Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) {
  %216 = cast(%var_7132, dtype="int8") /* ty=Tensor[(200), int8] */;
  %217 = cast(%var_7132, dtype="int8") /* ty=Tensor[(200), int8] */;
  %218 = reshape(%216, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %219 = reshape(%217, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %220 = @func_1786(%218, %219) /* ty=(Tensor[(10, 2, 10), bool],) */;
  %221 = @func_4440() /* ty=Tensor[(6, 15), float64] */;
  %222 = %220.0;
  (%221, %222, %var_7132)
}

def @func_7552(%var_7540: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), uint64],) {
  %223 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %224 = cast(%var_7540, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%223, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %228 = subtract(%226, %227) /* ty=Tensor[(4, 9, 6), uint64] */;
  (%228,)
}

def @func_8089(%var_8076: Tensor[(70), float64]) -> (Tensor[(216), int8], Tensor[(?, 10, 7), float64], Tensor[(70), float64]) {
  %229 = @func_7824() /* ty=(Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
  %230 = cast(%var_8076, dtype="float64") /* ty=Tensor[(70), float64] */;
  %231 = reshape(%230, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), float64] */;
  %232 = @func_235(%231) /* ty=(Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */;
  %233 = %229.0;
  %234 = %232.0;
  (%233, %234, %var_8076)
}

def @func_3833() -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64]) {
  %235 = @func_2707() /* ty=(Tensor[(6, 15), float64],) */;
  %236 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %237 = %235.0;
  %238 = %236.0;
  (%237, %238)
}

def @func_4468() -> (Tensor[(6, 15), float64],) {
  %239 = @func_3046() /* ty=Tensor[(6, 15), float64] */;
  (%239,)
}

def @func_8893() -> (Tensor[(4, 9, 6), bool], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) {
  %240 = @func_8426() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %241 = cast(meta[relay.Constant][13] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %242 = cast(meta[relay.Constant][13] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %243 = reshape(%241, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %244 = reshape(%242, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %245 = @func_1786(%243, %244) /* ty=(Tensor[(10, 2, 10), bool],) */;
  %246 = %240.0;
  %247 = %245.0;
  (%246, %247, meta[relay.Constant][13] /* ty=Tensor[(200), int8] */)
}

def @func_2194(%var_2179: Tensor[(5, 10, 13), float32], %var_2180: Tensor[(5, 10, 13), float32]) -> Tensor[(5, 10, 13), float32] {
  %248 = cast(%var_2180, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %249 = shape_of(%var_2179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%var_2179, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %252 = divide(%250, %251) /* ty=Tensor[(5, 10, 13), float32] */;
  %253 = cast(%252, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  log2(%253) /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_3638() -> (Tensor[(6, 15), float64],) {
  %254 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%254,)
}

def @func_3246(%var_3139: Tensor[(216), int8], %var_3178: Tensor[(1, 200), int8], %var_3185: Tensor[(26, 5), float64]) -> (Tensor[(6, 15), float64], Tensor[(216), uint32], Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(1, 200), int8], Tensor[(1, 130), float64], Tensor[(26, 5), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %255 = @func_2707() /* ty=(Tensor[(6, 15), float64],) */;
  %256 = @func_2987() /* ty=(Tensor[(6, 15), float64], Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
  %257 = %256.1;
  %258 = cast(%var_3139, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(1), int32] */;
  %260 = cast(%257, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %262 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %263 = cast(%var_3178, dtype="int8") /* ty=Tensor[(1, 200), int8] */;
  %264 = cast(%var_3178, dtype="int8") /* ty=Tensor[(1, 200), int8] */;
  %265 = reshape(%263, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %266 = reshape(%264, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %267 = @func_1786(%265, %266) /* ty=(Tensor[(10, 2, 10), bool],) */;
  %268 = cast(%var_3185, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %269 = reshape(%268, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %270 = @func_2403(%269) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) */;
  %271 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %272 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %273 = %255.0;
  %274 = subtract(%260, %261) /* ty=Tensor[(216), uint32] */;
  %275 = %262.2;
  %276 = %267.0;
  %277 = %270.3;
  %278 = %271.0;
  %279 = %272.0;
  (%273, %274, %275, %276, %var_3178, %277, %var_3185, %278, %279)
}

def @func_50(%var_33: Tensor[(13, 10, 1), float64]) -> (Tensor[(13, 10, 9), float64],) {
  %280 = cast(%var_33, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
  %281 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %282 = add(%280, %281) /* ty=Tensor[(13, 10, 9), float64] */;
  (%282,)
}

def @func_1786(%var_1779: Tensor[(10, 2, 10), int8], %var_1780: Tensor[(10, 2, 10), int8]) -> (Tensor[(10, 2, 10), bool],) {
  %283 = cast(%var_1780, dtype="bool") /* ty=Tensor[(10, 2, 10), bool] */;
  %284 = shape_of(%var_1779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%var_1779, dtype="bool") /* ty=Tensor[(10, 2, 10), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = not_equal(%285, %286) /* ty=Tensor[(10, 2, 10), bool] */;
  (%287,)
}

def @func_4948(%var_4925: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) {
  %288 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %289 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  %290 = cast(%var_4925, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %294 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %295 = %288.0;
  %296 = less(%292, %293) /* ty=Tensor[(4, 9, 6), bool] */;
  %297 = %294.0;
  (%295, %296, %297)
}

def @func_4381() -> Tensor[(4, 9, 6), bool] {
  %298 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %298.0
}

def @func_4986(%var_4975: Tensor[(5, 15, 5), uint32]) -> Tensor[(5, 15, 5), uint32] {
  %299 = cast(%var_4975, dtype="uint32") /* ty=Tensor[(5, 15, 5), uint32] */;
  %300 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(5, 15, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 15, 5), uint32] */, dtype="uint32") /* ty=Tensor[(5, 15, 5), uint32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%301, %302) /* ty=Tensor[(5, 15, 5), uint32] */
}

def @func_8648() -> (Tensor[(6, 15), float64],) {
  %303 = @func_7494() /* ty=(Tensor[(6, 15), float64],) */;
  %304 = %303.0;
  (%304,)
}

def @func_3102() -> (Tensor[(6, 15), float64],) {
  %305 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %306 = %305.0;
  (%306,)
}

def @func_7824() -> (Tensor[(216), int8], Tensor[(4, 9, 6), bool]) {
  %307 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %308 = @func_4661() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %309 = %307.2;
  %310 = %308.0;
  (%309, %310)
}

def @func_4969() -> (Tensor[(6, 15), float64],) {
  %311 = @func_2707() /* ty=(Tensor[(6, 15), float64],) */;
  %312 = %311.0;
  (%312,)
}

def @func_8426() -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %313 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  %314 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  (%313, %314)
}

def @func_8360() -> (Tensor[(6, 15), float64],) {
  %315 = @func_7035() /* ty=Tensor[(6, 15), float64] */;
  (%315,)
}

def @func_5940() -> Tensor[(4, 9, 6), bool] {
  %316 = @func_5215() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %316.0
}

def @func_4777(%var_4709: Tensor[(650), float32], %var_4737: Tensor[(5, 10, 13), float32], %var_4746: Tensor[(294), int64]) -> (Tensor[(4, 9, 6), bool], Tensor[(5, 10, 13), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(5, 10, 13), float32]) {
  %317 = cast(%var_4709, dtype="float32") /* ty=Tensor[(650), float32] */;
  %318 = cast(%var_4709, dtype="float32") /* ty=Tensor[(650), float32] */;
  %319 = reshape(%317, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %320 = reshape(%318, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %321 = @func_2194(%319, %320) /* ty=Tensor[(5, 10, 13), float32] */;
  %322 = cast(%var_4709, dtype="float32") /* ty=Tensor[(650), float32] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %326 = cast(%var_4746, dtype="int64") /* ty=Tensor[(294), int64] */;
  %327 = reshape(%326, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %328 = @func_3724(%327) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
  %329 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %330 = cast(%var_4737, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %331 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%321, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %334 = maximum(%332, %333) /* ty=Tensor[(5, 10, 13), float64] */;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %336 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  %337 = floor_mod(%324, %325) /* ty=Tensor[(5, 10, 13), float32] */;
  %338 = %328.2;
  %339 = %329.0;
  %340 = cos(%335) /* ty=Tensor[(5, 10, 13), float32] */;
  (%336, %337, %338, %var_4746, %339, %340)
}

def @func_8605(%var_8591: Tensor[(5, 234), float64]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32], Tensor[(216), float32], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(5, 234), float32]) {
  %341 = @func_4468() /* ty=(Tensor[(6, 15), float64],) */;
  %342 = @func_7425() /* ty=(Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) */;
  %343 = cast(meta[relay.Constant][16] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %344 = reshape(%343, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %345 = cast(meta[relay.Constant][16] /* ty=Tensor[(216), float32] */, dtype="int8") /* ty=Tensor[(216), int8] */;
  %346 = reshape(%345, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
  %347 = @func_1286(%346) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
  %348 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 234), float64] */, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %349 = reshape(%348, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %350 = @func_8057(%349) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float32]) */;
  %351 = cast(%var_8591, dtype="bool") /* ty=Tensor[(5, 234), bool] */;
  %352 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(5, 234), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %353 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 234), float64] */, dtype="bool") /* ty=Tensor[(5, 234), bool] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %355 = less_equal(%353, %354) /* ty=Tensor[(5, 234), bool] */;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(5, 234), float32] */;
  %357 = %341.0;
  %358 = %342.0;
  %359 = @func_1885(%344) /* ty=Tensor[(3, 12, 6), float32] */;
  %360 = %347.2;
  %361 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %362 = %350.1;
  %363 = log2(%356) /* ty=Tensor[(5, 234), float32] */;
  (%357, %358, %359, meta[relay.Constant][16] /* ty=Tensor[(216), float32] */, %360, %361, %362, %363)
}

def @func_5009() -> Tensor[(4, 9, 6), bool] {
  %364 = @func_4661() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %364.0
}

def @func_7671() -> (Tensor[(6, 15), float64], Tensor[(216), int8]) {
  %365 = @func_5418() /* ty=(Tensor[(216), int8],) */;
  %366 = @func_5156() /* ty=Tensor[(6, 15), float64] */;
  %367 = %365.0;
  (%366, %367)
}

def @func_5073(%var_5061: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), int32],) {
  %368 = @func_5009() /* ty=Tensor[(4, 9, 6), bool] */;
  %369 = cast(%var_5061, dtype="int32") /* ty=Tensor[(4, 9, 6), int32] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="int32") /* ty=Tensor[(4, 9, 6), int32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %373 = maximum(%371, %372) /* ty=Tensor[(4, 9, 6), int32] */;
  (%373,)
}

def @func_6661(%var_6655: Tensor[(10, 45), uint16], %var_6657: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(660), float64], Tensor[(10, 45), uint16], Tensor[(216), int8], Tensor[(294), int64], Tensor[(96), float32]) {
  %374 = @func_3833() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
  %375 = cast(%var_6655, dtype="uint16") /* ty=Tensor[(10, 45), uint16] */;
  %376 = cast(meta[relay.Constant][18] /* ty=Tensor[(216), int8] */, dtype="int8") /* ty=Tensor[(216), int8] */;
  %377 = cast(%var_6657, dtype="int64") /* ty=Tensor[(294), int64] */;
  %378 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %379 = reshape(%375, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), uint16] */;
  %380 = reshape(%376, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %381 = reshape(%377, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %382 = reshape(%378, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %383 = @func_6454(%379, %380, %381, %382) /* ty=(Tensor[(15, 10, 3), bool], Tensor[(4, 9, 6), bool], Tensor[(16, 26), float64], Tensor[(36, 6), int8], Tensor[(15, 10, 3), uint64], Tensor[(660), float64], Tensor[(294), int64], Tensor[(10, 20), int8], Tensor[(660), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(2, 48), float32]) */;
  %384 = %374.1;
  %385 = %383.5;
  (%384, %385, %var_6655, meta[relay.Constant][18] /* ty=Tensor[(216), int8] */, %var_6657, meta[relay.Constant][19] /* ty=Tensor[(96), float32] */)
}

def @func_7522(%var_7497: Tensor[(6, 5, 10), float64]) -> Tensor[(6, 5, 10), float64] {
  %386 = cast(%var_7497, dtype="float64") /* ty=Tensor[(6, 5, 10), float64] */;
  sigmoid(%386) /* ty=Tensor[(6, 5, 10), float64] */
}

def @func_4241() -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), bool]) {
  %387 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %388 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %389 = cast(meta[relay.Constant][20] /* ty=Tensor[(216), bool] */, dtype="bool") /* ty=Tensor[(216), bool] */;
  %390 = reshape(%389, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %391 = @func_3437(%390) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %392 = %387.0;
  %393 = %388.0;
  %394 = %391.3;
  (%392, %393, %394, meta[relay.Constant][20] /* ty=Tensor[(216), bool] */)
}

def @func_3630() -> (Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) {
  %395 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %396 = cast(meta[relay.Constant][21] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %397 = reshape(%396, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %398 = @func_50(%397) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %399 = %398.0;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %401 = %395.0;
  %402 = tan(%400) /* ty=Tensor[(13, 10, 9), float64] */;
  (%401, meta[relay.Constant][21] /* ty=Tensor[(130), float64] */, %402)
}

def @func_1534(%var_1487: Tensor[(7, 3, 14), int64], %var_1488: Tensor[(7, 3, 14), int64], %var_1530: Tensor[(7, 3, 14), float32]) -> (Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) {
  %403 = cast(%var_1488, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %404 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_1487, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %407 = not_equal(%405, %406) /* ty=Tensor[(7, 3, 14), bool] */;
  %408 = cast(%407, dtype="int32") /* ty=Tensor[(7, 3, 14), int32] */;
  %409 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_1487, dtype="int32") /* ty=Tensor[(7, 3, 14), int32] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %412 = cast(%var_1487, dtype="uint16") /* ty=Tensor[(7, 3, 14), uint16] */;
  %413 = shape_of(%var_1488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_1488, dtype="uint16") /* ty=Tensor[(7, 3, 14), uint16] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %416 = logical_xor(%414, %415) /* ty=Tensor[(7, 3, 14), uint16] */;
  %417 = cast(%407, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %421 = cast(%var_1488, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %422 = cosh(%421) /* ty=Tensor[(7, 3, 14), float32] */;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %424 = cast(%var_1530, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %425 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%422, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %428 = bitwise_or(%410, %411) /* ty=Tensor[(7, 3, 14), int32] */;
  %429 = power(%419, %420) /* ty=Tensor[(7, 3, 14), float32] */;
  %430 = asin(%423) /* ty=Tensor[(7, 3, 14), float32] */;
  %431 = greater(%426, %427) /* ty=Tensor[(7, 3, 14), bool] */;
  (%428, %429, %430, %431)
}

def @func_2595() -> Tensor[(6, 15), float64] {
  @func_2162() /* ty=Tensor[(6, 15), float64] */
}

def @func_1576(%var_1573: Tensor[(10, 3, 7), float64]) -> Tensor[(10, 3, 7), float64] {
  %432 = cast(%var_1573, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  atan(%432) /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_5347(%var_5329: Tensor[(416), float64]) -> Tensor[(416), float64] {
  %433 = @func_4697() /* ty=(Tensor[(216), int8], Tensor[(416), float64], Tensor[(1, 416), float64]) */;
  %434 = %433.1;
  %435 = cast(%var_5329, dtype="float64") /* ty=Tensor[(416), float64] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(1), int32] */;
  %437 = cast(%434, dtype="float64") /* ty=Tensor[(416), float64] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?), float64] */;
  divide(%437, %438) /* ty=Tensor[(416), float64] */
}

def @func_6769() -> (Tensor[(216), int8], Tensor[(216), int8], Tensor[(130, 1), float64], Tensor[(13, 10), float64]) {
  %439 = @func_5418() /* ty=(Tensor[(216), int8],) */;
  %440 = @func_5418() /* ty=(Tensor[(216), int8],) */;
  %441 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %442 = reshape(%441, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %443 = @func_1956(%442) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
  %444 = %439.0;
  %445 = %440.0;
  %446 = %443.2;
  (%444, %445, %446, meta[relay.Constant][22] /* ty=Tensor[(13, 10), float64] */)
}

def @func_1885(%var_1849: Tensor[(3, 12, 6), float32]) -> Tensor[(3, 12, 6), float32] {
  %447 = cast(%var_1849, dtype="float32") /* ty=Tensor[(3, 12, 6), float32] */;
  asinh(%447) /* ty=Tensor[(3, 12, 6), float32] */
}

def @func_4697() -> (Tensor[(216), int8], Tensor[(416), float64], Tensor[(1, 416), float64]) {
  %448 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %449 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 416), float64] */, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
  %450 = reshape(%449, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %451 = @func_3805(%450) /* ty=(Tensor[(4, 9, 6), float32], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64]) */;
  %452 = %448.0;
  %453 = %451.2;
  (%452, %453, meta[relay.Constant][23] /* ty=Tensor[(1, 416), float64] */)
}

def @func_8147() -> Tensor[(6, 15), float64] {
  @func_2162() /* ty=Tensor[(6, 15), float64] */
}

def @func_3979(%var_3948: Tensor[(5, 13, 6), float32], %var_3949: Tensor[(5, 13, 6), float32]) -> (Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) {
  %454 = cast(%var_3949, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %455 = shape_of(%var_3948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%var_3948, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %458 = cast(%var_3948, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %459 = floor_divide(%456, %457) /* ty=Tensor[(5, 13, 6), float32] */;
  %460 = sin(%458) /* ty=Tensor[(5, 13, 6), float32] */;
  (%459, %460)
}

def @func_8829() -> (Tensor[(9, 6, 5), float32],) {
  %461 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 6, 5), float32] */;
  %462 = atanh(%461) /* ty=Tensor[(9, 6, 5), float32] */;
  (%462,)
}

def @func_8732() -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %463 = @func_7824() /* ty=(Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
  %464 = %463.1;
  %465 = cast(%464, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %466 = reshape(%465, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %467 = @func_7552(%466) /* ty=(Tensor[(4, 9, 6), uint64],) */;
  %468 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %469 = %467.0;
  %470 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
  %471 = %468.0;
  (%464, %469, %470, %471)
}

def @func_5287(%var_5255: Tensor[(65, 6), float32], %var_5268: Tensor[(65, 6), float32]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(4, 9, 6), bool], Tensor[(65, 6), float64]) {
  %472 = @func_3638() /* ty=(Tensor[(6, 15), float64],) */;
  %473 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %474 = cast(%var_5255, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
  %475 = cast(%var_5255, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
  %476 = reshape(%474, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), float32] */;
  %477 = reshape(%475, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), float32] */;
  %478 = @func_3979(%476, %477) /* ty=(Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) */;
  %479 = cast(%var_5268, dtype="uint64") /* ty=Tensor[(65, 6), uint64] */;
  %480 = shape_of(%var_5255, dtype="int32") /* ty=Tensor[(2), int32] */;
  %481 = cast(%var_5255, dtype="uint64") /* ty=Tensor[(65, 6), uint64] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %483 = left_shift(%481, %482) /* ty=Tensor[(65, 6), uint64] */;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
  %485 = sinh(%484) /* ty=Tensor[(65, 6), float32] */;
  %486 = cast(%485, dtype="float64") /* ty=Tensor[(65, 6), float64] */;
  %487 = %472.0;
  %488 = %473.1;
  %489 = %478.1;
  %490 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %491 = exp(%486) /* ty=Tensor[(65, 6), float64] */;
  (%487, %488, %489, %490, %491)
}

def @func_5859(%var_5786: Tensor[(416), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64], Tensor[(130), float64], Tensor[(6, 15), float64], Tensor[(10, 3, 7), float64], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64], Tensor[(13, 10, 9), float64], Tensor[(6, 15), float64], Tensor[(294), int64], Tensor[(4, 9, 6), bool], Tensor[(130, ?), float64], Tensor[(130, 210), float64]) {
  %492 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
  %493 = cast(%492, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %494 = log(%493) /* ty=Tensor[(4, 9, 6), float64] */;
  %495 = cast(%494, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %496 = reshape(%495, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %497 = @func_3437(%496) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %498 = cast(meta[relay.Constant][26] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %499 = reshape(%498, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %500 = cast(%var_5786, dtype="float64") /* ty=Tensor[(416), float64] */;
  %501 = cast(%494, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %502 = reshape(%500, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %503 = reshape(%501, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %504 = @func_2245(%502, %503) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %505 = @func_4468() /* ty=(Tensor[(6, 15), float64],) */;
  %506 = cast(meta[relay.Constant][25] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %507 = reshape(%506, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %508 = @func_50(%507) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %509 = cast(meta[relay.Constant][27] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %510 = reshape(%509, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %511 = @func_2071(%510) /* ty=(Tensor[(6, 15), float64], Tensor[(7, 3, 14), bool], Tensor[(294), int64]) */;
  %512 = cast(meta[relay.Constant][25] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %513 = cast(%494, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %514 = reshape(%512, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %515 = reshape(%513, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %516 = @func_4115(%514, %515) /* ty=(Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) */;
  %517 = %516.1;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %519 = acos(%518) /* ty=Tensor[(130, 1), float64] */;
  %520 = cast(%517, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(2), int32] */;
  %522 = cast(%519, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %524 = cast(%519, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %525 = cosh(%524) /* ty=Tensor[(130, 1), float32] */;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %527 = cast(meta[relay.Constant][26] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %528 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %529 = %497.1;
  %530 = @func_1576(%499) /* ty=Tensor[(10, 3, 7), float64] */;
  %531 = %504.2;
  %532 = %505.0;
  %533 = %508.0;
  %534 = %511.0;
  %535 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %536 = floor_divide(%522, %523) /* ty=Tensor[(130, ?), float64] */;
  %537 = divide(%526, %527) /* ty=Tensor[(130, 210), float64] */;
  (%528, %494, meta[relay.Constant][25] /* ty=Tensor[(130), float64] */, %529, %530, %531, %var_5786, %532, %533, %534, meta[relay.Constant][27] /* ty=Tensor[(294), int64] */, %535, %536, %537)
}

def @func_2536() -> (Tensor[(6, 15), float64],) {
  %538 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%538,)
}

def @func_2523(%var_2517: Tensor[(8, 4, 1), float64]) -> Tensor[(8, 4, 1), float64] {
  %539 = cast(%var_2517, dtype="float64") /* ty=Tensor[(8, 4, 1), float64] */;
  cosh(%539) /* ty=Tensor[(8, 4, 1), float64] */
}

def @func_8672() -> (Tensor[(4, 9, 6), bool],) {
  %540 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  (%540,)
}

def @func_3505(%var_3464: Tensor[(784), int16]) -> (Tensor[(16, 7, 7), bool], Tensor[(28, 4), int16], Tensor[(784), int16], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint32]) {
  %541 = cast(meta[relay.Constant][28] /* ty=Tensor[(28, 4), int16] */, dtype="int16") /* ty=Tensor[(28, 4), int16] */;
  %542 = cast(%var_3464, dtype="int16") /* ty=Tensor[(784), int16] */;
  %543 = reshape(%541, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), int16] */;
  %544 = reshape(%542, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), int16] */;
  %545 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %546 = cast(%545, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %547 = sigmoid(%546) /* ty=Tensor[(4, 9, 6), float64] */;
  %548 = cast(%547, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %549 = reshape(%548, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
  %550 = @func_1286(%549) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
  %551 = cast(%545, dtype="uint32") /* ty=Tensor[(4, 9, 6), uint32] */;
  %552 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%547, dtype="uint32") /* ty=Tensor[(4, 9, 6), uint32] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %555 = @func_2921(%543, %544) /* ty=Tensor[(16, 7, 7), bool] */;
  %556 = %550.1;
  %557 = minimum(%553, %554) /* ty=Tensor[(4, 9, 6), uint32] */;
  (%555, meta[relay.Constant][28] /* ty=Tensor[(28, 4), int16] */, %var_3464, %556, %557)
}

def @func_8976(%var_8966: Tensor[(96), float32], %var_8967: Tensor[(1440), float32], %var_8972: Tensor[(216), float32]) -> (Tensor[(130, 12), float64], Tensor[(416, 1), float64], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(147, 2), int64], Tensor[(3, 12, 6), float32], Tensor[(216), float32]) {
  %558 = @func_6769() /* ty=(Tensor[(216), int8], Tensor[(216), int8], Tensor[(130, 1), float64], Tensor[(13, 10), float64]) */;
  %559 = %558.2;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %561 = cast(meta[relay.Constant][29] /* ty=Tensor[(130, 12), float64] */, dtype="float64") /* ty=Tensor[(130, 12), float64] */;
  %562 = cast(%var_8966, dtype="float32") /* ty=Tensor[(96), float32] */;
  %563 = cast(%var_8967, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %564 = cast(%var_8967, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %565 = cast(meta[relay.Constant][30] /* ty=Tensor[(147, 2), int64] */, dtype="int64") /* ty=Tensor[(147, 2), int64] */;
  %566 = reshape(%562, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), float32] */;
  %567 = reshape(%563, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float32] */;
  %568 = reshape(%564, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float64] */;
  %569 = reshape(%565, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %570 = @func_2491(%566, %567, %568, %569) /* ty=(Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) */;
  %571 = cast(%var_8972, dtype="float32") /* ty=Tensor[(216), float32] */;
  %572 = reshape(%571, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %573 = power(%560, %561) /* ty=Tensor[(130, 12), float64] */;
  %574 = %570.6;
  %575 = @func_1885(%572) /* ty=Tensor[(3, 12, 6), float32] */;
  (%573, %574, %var_8966, %var_8967, meta[relay.Constant][30] /* ty=Tensor[(147, 2), int64] */, %575, %var_8972)
}

def @func_2987() -> (Tensor[(6, 15), float64], Tensor[(216), int8], Tensor[(4, 9, 6), bool]) {
  %576 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %577 = @func_2646() /* ty=Tensor[(6, 15), float64] */;
  %578 = %576.0;
  %579 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  (%577, %578, %579)
}

def @func_9038() -> Tensor[(6, 15), float64] {
  @func_2595() /* ty=Tensor[(6, 15), float64] */
}

def @func_3309(%var_3290: Tensor[(112), int16], %var_3305: Tensor[(416), float64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(16, 7, 7), bool], Tensor[(112), int16], Tensor[(784), int16], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(416), float64]) {
  %580 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %581 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %582 = cast(%var_3290, dtype="int16") /* ty=Tensor[(112), int16] */;
  %583 = cast(meta[relay.Constant][31] /* ty=Tensor[(784), int16] */, dtype="int16") /* ty=Tensor[(784), int16] */;
  %584 = reshape(%582, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), int16] */;
  %585 = reshape(%583, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), int16] */;
  %586 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %587 = cast(%var_3305, dtype="float64") /* ty=Tensor[(416), float64] */;
  %588 = %581.0;
  %589 = cast(%588, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %590 = reshape(%587, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %591 = reshape(%589, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %592 = @func_2245(%590, %591) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %593 = %580.0;
  %594 = @func_2921(%584, %585) /* ty=Tensor[(16, 7, 7), bool] */;
  %595 = %586.2;
  %596 = %592.1;
  (%593, %588, %594, %var_3290, meta[relay.Constant][31] /* ty=Tensor[(784), int16] */, %595, %596, %var_3305)
}

def @func_1845() -> Tensor[(4, 9, 6), bool] {
  %597 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %597.1
}

def @func_2071(%var_2063: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(7, 3, 14), bool], Tensor[(294), int64]) {
  %598 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %599 = cast(%var_2063, dtype="int64") /* ty=Tensor[(294), int64] */;
  %600 = cast(%var_2063, dtype="int64") /* ty=Tensor[(294), int64] */;
  %601 = cast(%var_2063, dtype="float32") /* ty=Tensor[(294), float32] */;
  %602 = reshape(%599, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %603 = reshape(%600, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %604 = reshape(%601, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %605 = @func_1534(%602, %603, %604) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %606 = %598.0;
  %607 = %605.3;
  (%606, %607, %var_2063)
}

def @func_1956(%var_1951: Tensor[(130, 1), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) {
  %608 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %609 = cast(%var_1951, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %610 = reshape(%609, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %611 = @func_50(%610) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %612 = %608.1;
  %613 = %611.0;
  (%612, %613, %var_1951)
}

def @func_2027() -> (Tensor[(4, 9, 6), bool],) {
  %614 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  (%614,)
}

def @func_2707() -> (Tensor[(6, 15), float64],) {
  %615 = @func_2646() /* ty=Tensor[(6, 15), float64] */;
  (%615,)
}

def @func_4661() -> (Tensor[(4, 9, 6), bool],) {
  %616 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  (%616,)
}

def @func_7425() -> (Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) {
  %617 = @func_6967() /* ty=(Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) */;
  %618 = @func_6014() /* ty=Tensor[(6, 15), float64] */;
  %619 = %617.3;
  (%618, %619)
}

def @func_2245(%var_2233: Tensor[(13, 16, 2), float64], %var_2241: Tensor[(36, 6), int8]) -> (Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) {
  %620 = cast(%var_2233, dtype="float64") /* ty=Tensor[(13, 16, 2), float64] */;
  %621 = cast(%var_2241, dtype="int8") /* ty=Tensor[(36, 6), int8] */;
  %622 = reshape(%621, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
  %623 = @func_1286(%622) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
  %624 = sinh(%620) /* ty=Tensor[(13, 16, 2), float64] */;
  %625 = %623.1;
  (%624, %625, %var_2241)
}

def @func_2646() -> Tensor[(6, 15), float64] {
  @func_2162() /* ty=Tensor[(6, 15), float64] */
}

def @func_8211(%var_8186: Tensor[(216), bool], %var_8205: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), int64], Tensor[(216), bool], Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64]) {
  %626 = cast(%var_8186, dtype="bool") /* ty=Tensor[(216), bool] */;
  %627 = reshape(%626, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %628 = @func_5679(%627) /* ty=(Tensor[(4, 9, 6), int64],) */;
  %629 = cast(%var_8205, dtype="int64") /* ty=Tensor[(294), int64] */;
  %630 = cast(%var_8205, dtype="int64") /* ty=Tensor[(294), int64] */;
  %631 = cast(%var_8205, dtype="float32") /* ty=Tensor[(294), float32] */;
  %632 = reshape(%629, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %633 = reshape(%630, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %634 = reshape(%631, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %635 = @func_1534(%632, %633, %634) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %636 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  %637 = %628.0;
  %638 = @func_7035() /* ty=Tensor[(6, 15), float64] */;
  %639 = %635.0;
  (%636, %637, %var_8186, %638, %639, %var_8205)
}

def @func_5215() -> (Tensor[(4, 9, 6), bool],) {
  %640 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %641 = %640.0;
  (%641,)
}

def @func_6279() -> Tensor[(6, 15), float64] {
  @func_6224() /* ty=Tensor[(6, 15), float64] */
}

def @func_6325() -> (Tensor[(6, 15), float64],) {
  %642 = @func_6279() /* ty=Tensor[(6, 15), float64] */;
  (%642,)
}

def @func_4440() -> Tensor[(6, 15), float64] {
  @func_4290() /* ty=Tensor[(6, 15), float64] */
}

def @func_6852() -> Tensor[(6, 15), float64] {
  @func_4440() /* ty=Tensor[(6, 15), float64] */
}

def @func_4290() -> Tensor[(6, 15), float64] {
  @func_2646() /* ty=Tensor[(6, 15), float64] */
}

def @func_6517() -> Tensor[(4, 9, 6), bool] {
  @func_4139() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_4115(%var_4092: Tensor[(130, 1), float64], %var_4096: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) {
  %643 = @func_3102() /* ty=(Tensor[(6, 15), float64],) */;
  %644 = cast(%var_4092, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %645 = reshape(%644, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %646 = @func_2403(%645) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) */;
  %647 = %646.0;
  %648 = cast(%var_4096, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %649 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%647, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %652 = %643.0;
  %653 = bitwise_xor(%650, %651) /* ty=Tensor[(4, 9, 6), uint64] */;
  (%652, %var_4092, %653)
}

def @func_6014() -> Tensor[(6, 15), float64] {
  %654 = @func_3833() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
  %654.1
}

def @func_8057(%var_8052: Tensor[(13, 10, 9), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float32]) {
  %655 = @func_7824() /* ty=(Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
  %656 = cast(meta[relay.Constant][32] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %657 = reshape(%656, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %658 = @func_50(%657) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %659 = %658.0;
  %660 = cast(%var_8052, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %664 = @func_5940() /* ty=Tensor[(4, 9, 6), bool] */;
  %665 = %655.0;
  %666 = multiply(%662, %663) /* ty=Tensor[(13, 10, 9), float32] */;
  (%664, %665, meta[relay.Constant][32] /* ty=Tensor[(130), float64] */, %666)
}

def @func_7779() -> (Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(13, 10), float64], Tensor[(4, 9, 6), bool]) {
  %667 = @func_4661() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %668 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %669 = @func_6967() /* ty=(Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) */;
  %670 = %667.0;
  %671 = cast(%670, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %672 = reshape(%671, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %673 = @func_3437(%672) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %674 = %668.0;
  %675 = %669.5;
  %676 = %673.3;
  (%670, %674, %675, %676)
}

def @func_4371(%var_4325: Tensor[(130), float64], %var_4331: Tensor[(650), float32]) -> (Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(5, 10, 13), float32], Tensor[(650), float32], Tensor[(216), int8], Tensor[(130, 1), float64]) {
  %677 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %678 = cast(%var_4331, dtype="float32") /* ty=Tensor[(650), float32] */;
  %679 = cast(%var_4331, dtype="float32") /* ty=Tensor[(650), float32] */;
  %680 = reshape(%678, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %681 = reshape(%679, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %682 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %683 = cast(%var_4325, dtype="float64") /* ty=Tensor[(130), float64] */;
  %684 = reshape(%683, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %685 = @func_1956(%684) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
  %686 = %685.2;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %688 = atanh(%687) /* ty=Tensor[(130, 1), float32] */;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %690 = %677.0;
  %691 = @func_2194(%680, %681) /* ty=Tensor[(5, 10, 13), float32] */;
  %692 = %682.0;
  %693 = sinh(%689) /* ty=Tensor[(130, 1), float64] */;
  (%690, %var_4325, %691, %var_4331, %692, %693)
}

def @func_2840() -> (Tensor[(4, 9, 6), bool],) {
  %694 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
  (%694,)
}

def @func_5156() -> Tensor[(6, 15), float64] {
  @func_2162() /* ty=Tensor[(6, 15), float64] */
}

def @func_8529(%var_8483: int32, %var_8484: Tensor[(1, 12, 3), int32], %var_8508: Tensor[(32), float64]) -> (Tensor[(1, 12, 3), bool], Tensor[(8, 4, 1), float64], Tensor[(32), float64]) {
  %695 = cast(%var_8483, dtype="bool") /* ty=bool */;
  %696 = cast(%var_8484, dtype="bool") /* ty=Tensor[(1, 12, 3), bool] */;
  %697 = cast(%var_8508, dtype="float64") /* ty=Tensor[(32), float64] */;
  %698 = reshape(%697, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), float64] */;
  %699 = not_equal(%695, %696) /* ty=Tensor[(1, 12, 3), bool] */;
  %700 = @func_2523(%698) /* ty=Tensor[(8, 4, 1), float64] */;
  (%699, %700, %var_8508)
}

def @func_6224() -> Tensor[(6, 15), float64] {
  %701 = @func_4969() /* ty=(Tensor[(6, 15), float64],) */;
  %701.0
}

def @func_6605(%var_6586: Tensor[(130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(4, 9, 6), uint32], Tensor[(130), float64], Tensor[(15, 11, 4), bool], Tensor[(4, 9, 6), int64]) {
  %702 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %703 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %704 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
  %705 = cast(%704, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %706 = reshape(%705, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %707 = cast(%var_6586, dtype="float64") /* ty=Tensor[(130), float64] */;
  %708 = reshape(%707, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %709 = @func_4884(%708) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(4, 9, 6), uint32], Tensor[(6, 15), float64], Tensor[(4, 196), bool], Tensor[(6, 15), float64], Tensor[(4, 196), float32]) */;
  %710 = cast(meta[relay.Constant][33] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %711 = reshape(%710, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float64] */;
  %712 = @func_4063(%711) /* ty=Tensor[(15, 11, 4), float64] */;
  %713 = cast(meta[relay.Constant][33] /* ty=Tensor[(660), float64] */, dtype="bool") /* ty=Tensor[(660), bool] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="bool") /* ty=Tensor[(15, 11, 4), bool] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %717 = @func_1885(%706) /* ty=Tensor[(3, 12, 6), float32] */;
  %718 = cast(%717, dtype="bool") /* ty=Tensor[(3, 12, 6), bool] */;
  %719 = reshape(%718, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %720 = @func_5679(%719) /* ty=(Tensor[(4, 9, 6), int64],) */;
  %721 = %702.0;
  %722 = %703.1;
  %723 = %709.3;
  %724 = equal(%715, %716) /* ty=Tensor[(15, 11, 4), bool] */;
  %725 = %720.0;
  (%704, %721, %722, %717, %723, %var_6586, %724, %725)
}

def @func_2620() -> Tensor[(4, 9, 6), bool] {
  %726 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %726.1
}

def @func_8863() -> Tensor[(3, 12, 6), float32] {
  %727 = @func_7425() /* ty=(Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) */;
  %727.1
}

def @func_4641() -> (Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) {
  %728 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %729 = cast(meta[relay.Constant][34] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %730 = reshape(%729, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %731 = @func_3724(%730) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
  %732 = cast(meta[relay.Constant][34] /* ty=Tensor[(294), int64] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %733 = %728.1;
  %734 = %731.6;
  %735 = asinh(%732) /* ty=Tensor[(294), float32] */;
  %736 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  (%733, %734, %735, %736)
}

def @func_3592(%var_3537: Tensor[(416), float64], %var_3547: Tensor[(96), float32]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(416), float64], Tensor[(6, 16, 15), bool], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(6, 15), float64]) {
  %737 = cast(%var_3537, dtype="float64") /* ty=Tensor[(416), float64] */;
  %738 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %739 = cast(%738, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %740 = reshape(%737, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %741 = reshape(%739, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %742 = @func_2245(%740, %741) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %743 = cast(%var_3547, dtype="float32") /* ty=Tensor[(96), float32] */;
  %744 = cast(meta[relay.Constant][35] /* ty=Tensor[(1440), float32] */, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %745 = cast(meta[relay.Constant][35] /* ty=Tensor[(1440), float32] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %746 = cast(meta[relay.Constant][36] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %747 = reshape(%743, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), float32] */;
  %748 = reshape(%744, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float32] */;
  %749 = reshape(%745, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float64] */;
  %750 = reshape(%746, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %751 = @func_2491(%747, %748, %749, %750) /* ty=(Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) */;
  %752 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %753 = %742.1;
  %754 = %751.4;
  %755 = %752.0;
  %756 = @func_2595() /* ty=Tensor[(6, 15), float64] */;
  (%738, %753, %var_3537, %754, %var_3547, meta[relay.Constant][35] /* ty=Tensor[(1440), float32] */, meta[relay.Constant][36] /* ty=Tensor[(294), int64] */, %755, %756)
}

def @func_7190(%var_7175: Tensor[(1, 1, 3), float32]) -> (Tensor[(1, 1, 3), float64],) {
  %757 = cast(%var_7175, dtype="float32") /* ty=Tensor[(1, 1, 3), float32] */;
  %758 = log2(%757) /* ty=Tensor[(1, 1, 3), float32] */;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(1, 1, 3), float64] */;
  %760 = cos(%759) /* ty=Tensor[(1, 1, 3), float64] */;
  (%760,)
}

def @func_3026() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) {
  %761 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %762 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %763 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  %764 = %761.0;
  %765 = %762.0;
  (%763, %764, %765)
}

def @func_2570() -> (Tensor[(216), int8],) {
  %766 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %767 = %766.2;
  (%767,)
}

def @func_6454(%var_6404: Tensor[(15, 10, 3), uint16], %var_6426: Tensor[(36, 6), int8], %var_6439: Tensor[(294), int64], %var_6452: Tensor[(2, 48), float32]) -> (Tensor[(15, 10, 3), bool], Tensor[(4, 9, 6), bool], Tensor[(16, 26), float64], Tensor[(36, 6), int8], Tensor[(15, 10, 3), uint64], Tensor[(660), float64], Tensor[(294), int64], Tensor[(10, 20), int8], Tensor[(660), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(2, 48), float32]) {
  %768 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 10, 3), uint16] */, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %769 = shape_of(%var_6404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%var_6404, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %772 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 26), float64] */, dtype="float64") /* ty=Tensor[(16, 26), float64] */;
  %773 = cast(%var_6426, dtype="int8") /* ty=Tensor[(36, 6), int8] */;
  %774 = reshape(%772, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %775 = reshape(%773, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %776 = @func_2245(%774, %775) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %777 = cast(%var_6404, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %778 = exp(%777) /* ty=Tensor[(15, 10, 3), float32] */;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %780 = atan(%779) /* ty=Tensor[(15, 10, 3), float64] */;
  %781 = cast(%var_6404, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %782 = rsqrt(%781) /* ty=Tensor[(15, 10, 3), float32] */;
  %783 = cast(%782, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
  %784 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%780, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %787 = cast(%var_6439, dtype="int64") /* ty=Tensor[(294), int64] */;
  %788 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 20), int8] */, dtype="int8") /* ty=Tensor[(10, 20), int8] */;
  %789 = cast(meta[relay.Constant][40] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %790 = reshape(%787, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %791 = reshape(%788, newshape=[100, 2]) /* ty=Tensor[(100, 2), int8] */;
  %792 = reshape(%789, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %793 = @func_6135(%790, %791, %792) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(6, 15), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64], Tensor[(10, 2, 10), bool], Tensor[(10, 3, 7), float64], Tensor[(35, 6), float64], Tensor[(100, 2), float64], Tensor[(15, 11, 4), float64], Tensor[(660), float64], Tensor[(4, 9, 6), int64], Tensor[(8, 4, 1), float64], Tensor[(8, 4), float64], Tensor[(6, 15), float64]) */;
  %794 = @func_3102() /* ty=(Tensor[(6, 15), float64],) */;
  %795 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 26), float64] */, dtype="float64") /* ty=Tensor[(16, 26), float64] */;
  %796 = cast(%var_6452, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %797 = reshape(%795, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %798 = reshape(%796, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %799 = @func_3592(%797, %798) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(416), float64], Tensor[(6, 16, 15), bool], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
  %800 = not_equal(%770, %771) /* ty=Tensor[(15, 10, 3), bool] */;
  %801 = %776.1;
  %802 = maximum(%785, %786) /* ty=Tensor[(15, 10, 3), uint64] */;
  %803 = %793.9;
  %804 = %794.0;
  %805 = %799.1;
  (%800, %801, meta[relay.Constant][38] /* ty=Tensor[(16, 26), float64] */, %var_6426, %802, %803, %var_6439, meta[relay.Constant][39] /* ty=Tensor[(10, 20), int8] */, meta[relay.Constant][40] /* ty=Tensor[(660), float64] */, %804, %805, %var_6452)
}

def @func_2403(%var_2398: Tensor[(1, 130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) {
  %806 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %808 = reshape(%807, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %809 = cast(%var_2398, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
  %810 = reshape(%809, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %811 = @func_1956(%810) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
  %812 = @func_1885(%808) /* ty=Tensor[(3, 12, 6), float32] */;
  %813 = %811.1;
  %814 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%806, %812, %813, %var_2398, %814)
}

def @func_7871() -> Tensor[(14, ?, 9), float64] {
  %815 = @func_7404() /* ty=(Tensor[(6, 15), float64], Tensor[(14, ?, 9), bool], Tensor[(14, ?, 9), float64], Tensor[(14, 1, 9), float32]) */;
  %816 = %815.2;
  %817 = cast(%816, dtype="float32") /* ty=Tensor[(14, ?, 9), float32] */;
  %818 = sin(%817) /* ty=Tensor[(14, ?, 9), float32] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(14, ?, 9), float64] */;
  acosh(%819) /* ty=Tensor[(14, ?, 9), float64] */
}

def @func_7946() -> (Tensor[(6, 15), float64],) {
  %820 = @func_6852() /* ty=Tensor[(6, 15), float64] */;
  (%820,)
}

def @func_2884() -> (Tensor[(6, 15), float64],) {
  %821 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%821,)
}

def @func_3724(%var_3702: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) {
  %822 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
  %823 = cast(%822, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %824 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %825 = cast(%var_3702, dtype="int64") /* ty=Tensor[(294), int64] */;
  %826 = cast(meta[relay.Constant][41] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %827 = reshape(%825, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %828 = reshape(%826, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %829 = @func_2338(%827, %828) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) */;
  %830 = cast(%var_3702, dtype="int64") /* ty=Tensor[(294), int64] */;
  %831 = cast(%var_3702, dtype="int64") /* ty=Tensor[(294), int64] */;
  %832 = %829.4;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(294), float32] */;
  %834 = reshape(%830, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %835 = reshape(%831, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %836 = reshape(%833, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %837 = @func_1534(%834, %835, %836) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %838 = @func_3102() /* ty=(Tensor[(6, 15), float64],) */;
  %839 = @func_3046() /* ty=Tensor[(6, 15), float64] */;
  %840 = acos(%823) /* ty=Tensor[(4, 9, 6), float64] */;
  %841 = %824.0;
  %842 = %837.3;
  %843 = %838.0;
  (%839, %840, %841, %832, %var_3702, meta[relay.Constant][41] /* ty=Tensor[(130), float64] */, %842, %843)
}

def @func_7035() -> Tensor[(6, 15), float64] {
  @func_3046() /* ty=Tensor[(6, 15), float64] */
}

def @func_7119(%var_7117: Tensor[(130), float64]) -> (Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64], Tensor[(130), float64]) {
  %844 = cast(meta[relay.Constant][42] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %845 = cast(%var_7117, dtype="float64") /* ty=Tensor[(130), float64] */;
  %846 = reshape(%844, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %847 = reshape(%845, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %848 = @func_2338(%846, %847) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) */;
  %849 = @func_6279() /* ty=Tensor[(6, 15), float64] */;
  %850 = %848.1;
  (%849, %850, meta[relay.Constant][42] /* ty=Tensor[(294), int64] */, %var_7117)
}

def @func_7158() -> Tensor[(6, 15), float64] {
  @func_6355() /* ty=Tensor[(6, 15), float64] */
}

def @main() -> (Tensor[(11, 11, 8), float64],) {
  %851 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 8), float64] */;
  %852 = atanh(%851) /* ty=Tensor[(11, 11, 8), float64] */;
  (%852,)
}

def @func_6355() -> Tensor[(6, 15), float64] {
  %853 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %853.0
}

def @func_4512() -> (Tensor[(6, 15), float64],) {
  %854 = @func_3638() /* ty=(Tensor[(6, 15), float64],) */;
  %855 = %854.0;
  (%855,)
}

def @func_2784() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %856 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %857 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  %858 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
  %859 = %856.0;
  (%857, %858, %859)
}

def @func_3805(%var_3744: Tensor[(416), float64]) -> (Tensor[(4, 9, 6), float32], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64]) {
  %860 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %861 = %860.2;
  %862 = cast(%861, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %863 = cast(%var_3744, dtype="float64") /* ty=Tensor[(416), float64] */;
  %864 = atan(%862) /* ty=Tensor[(4, 9, 6), float32] */;
  %865 = cast(%864, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %866 = reshape(%863, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %867 = reshape(%865, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %868 = @func_2245(%866, %867) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %869 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %870 = %868.2;
  %871 = %869.0;
  (%864, %870, %var_3744, %871)
}

def @func_2338(%var_2315: Tensor[(294), int64], %var_2322: Tensor[(130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) {
  %872 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %873 = cast(%var_2315, dtype="int64") /* ty=Tensor[(294), int64] */;
  %874 = cast(%var_2315, dtype="int64") /* ty=Tensor[(294), int64] */;
  %875 = cast(%var_2315, dtype="float32") /* ty=Tensor[(294), float32] */;
  %876 = reshape(%873, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %877 = reshape(%874, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %878 = reshape(%875, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %879 = @func_1534(%876, %877, %878) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %880 = cast(%var_2322, dtype="float64") /* ty=Tensor[(130), float64] */;
  %881 = reshape(%880, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %882 = @func_1956(%881) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
  %883 = cast(%var_2315, dtype="float32") /* ty=Tensor[(294), float32] */;
  %884 = %872.0;
  %885 = %879.0;
  %886 = %882.2;
  %887 = exp(%883) /* ty=Tensor[(294), float32] */;
  (%884, %885, %886, %var_2322, %887)
}

def @func_5643(%var_5606: Tensor[(294, 11), int64]) -> (Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(294, 11), bool], Tensor[(4, 9, 6), bool], Tensor[(130), float64], Tensor[(4, 9, 6), bool]) {
  %888 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %889 = cast(meta[relay.Constant][44] /* ty=Tensor[(294, 1), int64] */, dtype="int64") /* ty=Tensor[(294, 1), int64] */;
  %890 = reshape(%889, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %891 = @func_3724(%890) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
  %892 = cast(meta[relay.Constant][44] /* ty=Tensor[(294, 1), int64] */, dtype="bool") /* ty=Tensor[(294, 1), bool] */;
  %893 = cast(%var_5606, dtype="bool") /* ty=Tensor[(294, 11), bool] */;
  %894 = @func_5215() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %895 = @func_3630() /* ty=(Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */;
  %896 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %897 = %888.0;
  %898 = %891.5;
  %899 = logical_and(%892, %893) /* ty=Tensor[(294, 11), bool] */;
  %900 = %894.0;
  %901 = %895.1;
  %902 = %896.2;
  (%897, %898, %899, %900, %901, %902)
}

def @func_7736() -> (Tensor[(6, 15), float64],) {
  %903 = @func_6224() /* ty=Tensor[(6, 15), float64] */;
  (%903,)
}

def @func_4884(%var_4844: Tensor[(130), float64]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(4, 9, 6), uint32], Tensor[(6, 15), float64], Tensor[(4, 196), bool], Tensor[(6, 15), float64], Tensor[(4, 196), float32]) {
  %904 = @func_4512() /* ty=(Tensor[(6, 15), float64],) */;
  %905 = cast(%var_4844, dtype="float64") /* ty=Tensor[(130), float64] */;
  %906 = reshape(%905, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %907 = @func_2403(%906) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) */;
  %908 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 196), int16] */, dtype="int16") /* ty=Tensor[(4, 196), int16] */;
  %909 = reshape(%908, newshape=[784]) /* ty=Tensor[(784), int16] */;
  %910 = @func_3505(%909) /* ty=(Tensor[(16, 7, 7), bool], Tensor[(28, 4), int16], Tensor[(784), int16], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint32]) */;
  %911 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %912 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 196), int16] */, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
  %913 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(4, 196), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %914 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 196), int16] */, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %916 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %917 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 196), int16] */, dtype="float32") /* ty=Tensor[(4, 196), float32] */;
  %918 = %904.0;
  %919 = %907.4;
  %920 = %910.4;
  %921 = %911.0;
  %922 = greater(%914, %915) /* ty=Tensor[(4, 196), bool] */;
  %923 = %916.0;
  %924 = sqrt(%917) /* ty=Tensor[(4, 196), float32] */;
  (%918, %919, %var_4844, %920, %921, %922, %923, %924)
}

def @func_8625() -> (Tensor[(6, 15), float64],) {
  %925 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%925,)
}

def @func_4063(%var_4055: Tensor[(15, 11, 4), float64]) -> Tensor[(15, 11, 4), float64] {
  %926 = cast(%var_4055, dtype="float64") /* ty=Tensor[(15, 11, 4), float64] */;
  sqrt(%926) /* ty=Tensor[(15, 11, 4), float64] */
}

def @func_9003() -> (Tensor[(4, 9, 6), bool],) {
  %927 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %928 = %927.0;
  (%928,)
}

def @func_3075(%var_3064: Tensor[(1, 16, 10), float64]) -> Tensor[(?, 16, 10), uint16] {
  %929 = cast(%var_3064, dtype="float64") /* ty=Tensor[(1, 16, 10), float64] */;
  %930 = log10(%929) /* ty=Tensor[(1, 16, 10), float64] */;
  %931 = cast(%var_3064, dtype="uint16") /* ty=Tensor[(1, 16, 10), uint16] */;
  %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%930, dtype="uint16") /* ty=Tensor[(1, 16, 10), uint16] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%933, %934) /* ty=Tensor[(?, 16, 10), uint16] */
}

def @func_5147(%var_5127: Tensor[(12, 16, 10), float32]) -> (Tensor[(12, 16, 10), float32],) {
  %935 = cast(%var_5127, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
  %936 = cosh(%935) /* ty=Tensor[(12, 16, 10), float32] */;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
  %938 = shape_of(%var_5127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%var_5127, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %941 = maximum(%939, %940) /* ty=Tensor[(12, 16, 10), float32] */;
  (%941,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4442() -> Tensor[(6, 15), float64] {
  @func_4440() /* ty=Tensor[(6, 15), float64] */
}

def @func_7404() -> (Tensor[(6, 15), float64], Tensor[(14, ?, 9), bool], Tensor[(14, ?, 9), float64], Tensor[(14, 1, 9), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  %1 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = equal(%2, %3) /* ty=Tensor[(14, ?, 9), bool] */;
  %5 = cast(%4, dtype="bool") /* ty=Tensor[(14, ?, 9), bool] */;
  %6 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="float64") /* ty=Tensor[(14, 1, 9), float64] */;
  %10 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="float64") /* ty=Tensor[(14, 1, 9), float64] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 1, 9), uint16] */, dtype="float32") /* ty=Tensor[(14, 1, 9), float32] */;
  %14 = @func_2595() /* ty=Tensor[(6, 15), float64] */;
  %15 = greater(%7, %8) /* ty=Tensor[(14, ?, 9), bool] */;
  %16 = power(%11, %12) /* ty=Tensor[(14, ?, 9), float64] */;
  %17 = acos(%13) /* ty=Tensor[(14, 1, 9), float32] */;
  (%14, %15, %16, %17)
}

def @func_8829() -> (Tensor[(9, 6, 5), float32],) {
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 6, 5), float32] */;
  %19 = atanh(%18) /* ty=Tensor[(9, 6, 5), float32] */;
  (%19,)
}

def @func_3077(%var_3076: Tensor[(1, 16, 10), float64]) -> Tensor[(?, 16, 10), uint16] {
  %26 = fn (%var_3064: Tensor[(1, 16, 10), float64]) -> Tensor[(?, 16, 10), uint16] {
    %20 = cast(%var_3064, dtype="float64") /* ty=Tensor[(1, 16, 10), float64] */;
    %21 = log10(%20) /* ty=Tensor[(1, 16, 10), float64] */;
    %22 = cast(%var_3064, dtype="uint16") /* ty=Tensor[(1, 16, 10), uint16] */;
    %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%21, dtype="uint16") /* ty=Tensor[(1, 16, 10), uint16] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    right_shift(%24, %25) /* ty=Tensor[(?, 16, 10), uint16] */
  };
  %26(%var_3076) /* ty=Tensor[(?, 16, 10), uint16] */
}

def @func_7780() -> (Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(13, 10), float64], Tensor[(4, 9, 6), bool]) {
  %37 = fn () -> (Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(13, 10), float64], Tensor[(4, 9, 6), bool]) {
    %27 = @func_4661() /* ty=(Tensor[(4, 9, 6), bool],) */;
    %28 = @func_2570() /* ty=(Tensor[(216), int8],) */;
    %29 = @func_6967() /* ty=(Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) */;
    %30 = %27.0;
    %31 = cast(%30, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
    %32 = reshape(%31, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
    %33 = @func_3437(%32) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
    %34 = %28.0;
    %35 = %29.5;
    %36 = %33.3;
    (%30, %34, %35, %36)
  };
  %37() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(13, 10), float64], Tensor[(4, 9, 6), bool]) */
}

def @func_5646(%var_5644: Tensor[(294, 11), int64]) -> (Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(294, 11), bool], Tensor[(4, 9, 6), bool], Tensor[(130), float64], Tensor[(4, 9, 6), bool]) {
  @func_5643(%var_5644) /* ty=(Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(294, 11), bool], Tensor[(4, 9, 6), bool], Tensor[(130), float64], Tensor[(4, 9, 6), bool]) */
}

def @func_8980(%var_8977: Tensor[(96), float32], %var_8978: Tensor[(1440), float32], %var_8979: Tensor[(216), float32]) -> (Tensor[(130, 12), float64], Tensor[(416, 1), float64], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(147, 2), int64], Tensor[(3, 12, 6), float32], Tensor[(216), float32]) {
  %56 = fn (%var_8966: Tensor[(96), float32], %var_8967: Tensor[(1440), float32], %var_8972: Tensor[(216), float32]) -> (Tensor[(130, 12), float64], Tensor[(416, 1), float64], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(147, 2), int64], Tensor[(3, 12, 6), float32], Tensor[(216), float32]) {
    %38 = @func_6769() /* ty=(Tensor[(216), int8], Tensor[(216), int8], Tensor[(130, 1), float64], Tensor[(13, 10), float64]) */;
    %39 = %38.2;
    %40 = cast(%39, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %41 = cast(meta[relay.Constant][3] /* ty=Tensor[(130, 12), float64] */, dtype="float64") /* ty=Tensor[(130, 12), float64] */;
    %42 = cast(%var_8966, dtype="float32") /* ty=Tensor[(96), float32] */;
    %43 = cast(%var_8967, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %44 = cast(%var_8967, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(147, 2), int64] */, dtype="int64") /* ty=Tensor[(147, 2), int64] */;
    %46 = reshape(%42, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), float32] */;
    %47 = reshape(%43, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float32] */;
    %48 = reshape(%44, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float64] */;
    %49 = reshape(%45, newshape=[294]) /* ty=Tensor[(294), int64] */;
    %50 = @func_2491(%46, %47, %48, %49) /* ty=(Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) */;
    %51 = cast(%var_8972, dtype="float32") /* ty=Tensor[(216), float32] */;
    %52 = reshape(%51, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
    %53 = power(%40, %41) /* ty=Tensor[(130, 12), float64] */;
    %54 = %50.6;
    %55 = @func_1885(%52) /* ty=Tensor[(3, 12, 6), float32] */;
    (%53, %54, %var_8966, %var_8967, meta[relay.Constant][4] /* ty=Tensor[(147, 2), int64] */, %55, %var_8972)
  };
  %56(%var_8977, %var_8978, %var_8979) /* ty=(Tensor[(130, 12), float64], Tensor[(416, 1), float64], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(147, 2), int64], Tensor[(3, 12, 6), float32], Tensor[(216), float32]) */
}

def @func_8534(%var_8531: int32, %var_8532: Tensor[(1, 12, 3), int32], %var_8533: Tensor[(32), float64]) -> (Tensor[(1, 12, 3), bool], Tensor[(8, 4, 1), float64], Tensor[(32), float64]) {
  @func_8529(%var_8531, %var_8532, %var_8533) /* ty=(Tensor[(1, 12, 3), bool], Tensor[(8, 4, 1), float64], Tensor[(32), float64]) */
}

def @func_6683(%var_6682: Tensor[(2, 10, 9), float32]) -> Tensor[(2, 10, 9), float32] {
  %58 = fn (%var_6670: Tensor[(2, 10, 9), float32]) -> Tensor[(2, 10, 9), float32] {
    %57 = cast(%var_6670, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
    asin(%57) /* ty=Tensor[(2, 10, 9), float32] */
  };
  %58(%var_6682) /* ty=Tensor[(2, 10, 9), float32] */
}

def @func_3437(%var_3374: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %59 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %60 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %61 = cast(%var_3374, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%60, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %65 = power(%63, %64) /* ty=Tensor[(4, 9, 6), float64] */;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %67 = asinh(%66) /* ty=Tensor[(4, 9, 6), float64] */;
  %68 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %69 = cast(%68, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %70 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%67, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %73 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %74 = %59.0;
  %75 = @func_3046() /* ty=Tensor[(6, 15), float64] */;
  %76 = logical_and(%71, %72) /* ty=Tensor[(4, 9, 6), bool] */;
  %77 = %73.1;
  (%74, %75, %76, %77)
}

def @func_3102() -> (Tensor[(6, 15), float64],) {
  %78 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %79 = %78.0;
  (%79,)
}

def @func_1786(%var_1779: Tensor[(10, 2, 10), int8], %var_1780: Tensor[(10, 2, 10), int8]) -> (Tensor[(10, 2, 10), bool],) {
  %80 = cast(%var_1780, dtype="bool") /* ty=Tensor[(10, 2, 10), bool] */;
  %81 = shape_of(%var_1779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%var_1779, dtype="bool") /* ty=Tensor[(10, 2, 10), bool] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %84 = not_equal(%82, %83) /* ty=Tensor[(10, 2, 10), bool] */;
  (%84,)
}

def @func_2784() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %85 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %86 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  %87 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
  %88 = %85.0;
  (%86, %87, %88)
}

def @func_2526(%var_2524: Tensor[(8, 4, 1), float64]) -> Tensor[(8, 4, 1), float64] {
  @func_2523(%var_2524) /* ty=Tensor[(8, 4, 1), float64] */
}

def @func_5215() -> (Tensor[(4, 9, 6), bool],) {
  %89 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %90 = %89.0;
  (%90,)
}

def @func_237(%var_236: Tensor[(1, 10, 7), float64]) -> (Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) {
  %120 = fn (%var_161: Tensor[(1, 10, 7), float64]) -> (Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) {
    %91 = cast(%var_161, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    %92 = log2(%91) /* ty=Tensor[(1, 10, 7), float64] */;
    %93 = cast(%92, dtype="int64") /* ty=Tensor[(1, 10, 7), int64] */;
    %94 = shape_of(%var_161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %95 = cast(%var_161, dtype="int64") /* ty=Tensor[(1, 10, 7), int64] */;
    %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %97 = bitwise_xor(%95, %96) /* ty=Tensor[(?, 10, 7), int64] */;
    %98 = cast(%97, dtype="float64") /* ty=Tensor[(?, 10, 7), float64] */;
    %99 = cos(%98) /* ty=Tensor[(?, 10, 7), float64] */;
    %100 = cast(%var_161, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
    %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%99, dtype="int8") /* ty=Tensor[(?, 10, 7), int8] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %104 = right_shift(%102, %103) /* ty=Tensor[(?, 10, 7), int8] */;
    %105 = cast(%104, dtype="float64") /* ty=Tensor[(?, 10, 7), float64] */;
    %106 = cast(%99, dtype="float32") /* ty=Tensor[(?, 10, 7), float32] */;
    %107 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
    %108 = cast(%104, dtype="float32") /* ty=Tensor[(?, 10, 7), float32] */;
    %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %110 = cast(meta[relay.Constant][5] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %111 = reshape(%110, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
    %112 = @func_50(%111) /* ty=(Tensor[(13, 10, 9), float64],) */;
    %113 = cast(meta[relay.Constant][5] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %114 = reshape(%113, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
    %115 = @func_50(%114) /* ty=(Tensor[(13, 10, 9), float64],) */;
    %116 = tan(%105) /* ty=Tensor[(?, 10, 7), float64] */;
    %117 = power(%108, %109) /* ty=Tensor[(?, 10, 7), float32] */;
    %118 = %112.0;
    %119 = %115.0;
    (%116, %117, %118, meta[relay.Constant][5] /* ty=Tensor[(130), float64] */, %119)
  };
  %120(%var_236) /* ty=(Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */
}

def @func_7555(%var_7553: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), uint64],) {
  @func_7552(%var_7553) /* ty=(Tensor[(4, 9, 6), uint64],) */
}

def @func_8608(%var_8606: Tensor[(5, 234), float64]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32], Tensor[(216), float32], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(5, 234), float32]) {
  @func_8605(%var_8606) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32], Tensor[(216), float32], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(5, 234), float32]) */
}

def @func_4115(%var_4092: Tensor[(130, 1), float64], %var_4096: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) {
  %121 = @func_3102() /* ty=(Tensor[(6, 15), float64],) */;
  %122 = cast(%var_4092, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %123 = reshape(%122, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %124 = @func_2403(%123) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) */;
  %125 = %124.0;
  %126 = cast(%var_4096, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%125, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %130 = %121.0;
  %131 = bitwise_xor(%128, %129) /* ty=Tensor[(4, 9, 6), uint64] */;
  (%130, %var_4092, %131)
}

def @func_4290() -> Tensor[(6, 15), float64] {
  @func_2646() /* ty=Tensor[(6, 15), float64] */
}

def @func_4371(%var_4325: Tensor[(130), float64], %var_4331: Tensor[(650), float32]) -> (Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(5, 10, 13), float32], Tensor[(650), float32], Tensor[(216), int8], Tensor[(130, 1), float64]) {
  %132 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %133 = cast(%var_4331, dtype="float32") /* ty=Tensor[(650), float32] */;
  %134 = cast(%var_4331, dtype="float32") /* ty=Tensor[(650), float32] */;
  %135 = reshape(%133, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %136 = reshape(%134, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %137 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %138 = cast(%var_4325, dtype="float64") /* ty=Tensor[(130), float64] */;
  %139 = reshape(%138, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %140 = @func_1956(%139) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
  %141 = %140.2;
  %142 = cast(%141, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %143 = atanh(%142) /* ty=Tensor[(130, 1), float32] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %145 = %132.0;
  %146 = @func_2194(%135, %136) /* ty=Tensor[(5, 10, 13), float32] */;
  %147 = %137.0;
  %148 = sinh(%144) /* ty=Tensor[(130, 1), float64] */;
  (%145, %var_4325, %146, %var_4331, %147, %148)
}

def @func_7826() -> (Tensor[(216), int8], Tensor[(4, 9, 6), bool]) {
  @func_7824() /* ty=(Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */
}

def @func_4512() -> (Tensor[(6, 15), float64],) {
  %149 = @func_3638() /* ty=(Tensor[(6, 15), float64],) */;
  %150 = %149.0;
  (%150,)
}

def @func_5679(%var_5664: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), int64],) {
  %151 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
  %152 = cast(%var_5664, dtype="int64") /* ty=Tensor[(4, 9, 6), int64] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%151, dtype="int64") /* ty=Tensor[(4, 9, 6), int64] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %156 = multiply(%154, %155) /* ty=Tensor[(4, 9, 6), int64] */;
  (%156,)
}

def @func_3440(%var_3438: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  @func_3437(%var_3438) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */
}

def @func_6259() -> (Tensor[(4, 9, 6), bool],) {
  %158 = fn () -> (Tensor[(4, 9, 6), bool],) {
    %157 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
    (%157,)
  };
  %158() /* ty=(Tensor[(4, 9, 6), bool],) */
}

def @func_5859(%var_5786: Tensor[(416), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64], Tensor[(130), float64], Tensor[(6, 15), float64], Tensor[(10, 3, 7), float64], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64], Tensor[(13, 10, 9), float64], Tensor[(6, 15), float64], Tensor[(294), int64], Tensor[(4, 9, 6), bool], Tensor[(130, ?), float64], Tensor[(130, 210), float64]) {
  %159 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %161 = log(%160) /* ty=Tensor[(4, 9, 6), float64] */;
  %162 = cast(%161, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %163 = reshape(%162, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %164 = @func_3437(%163) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %165 = cast(meta[relay.Constant][7] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %166 = reshape(%165, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %167 = cast(%var_5786, dtype="float64") /* ty=Tensor[(416), float64] */;
  %168 = cast(%161, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %169 = reshape(%167, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %170 = reshape(%168, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %171 = @func_2245(%169, %170) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %172 = @func_4468() /* ty=(Tensor[(6, 15), float64],) */;
  %173 = cast(meta[relay.Constant][6] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %174 = reshape(%173, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %175 = @func_50(%174) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %176 = cast(meta[relay.Constant][8] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %177 = reshape(%176, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %178 = @func_2071(%177) /* ty=(Tensor[(6, 15), float64], Tensor[(7, 3, 14), bool], Tensor[(294), int64]) */;
  %179 = cast(meta[relay.Constant][6] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %180 = cast(%161, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %181 = reshape(%179, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %182 = reshape(%180, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %183 = @func_4115(%181, %182) /* ty=(Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) */;
  %184 = %183.1;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %186 = acos(%185) /* ty=Tensor[(130, 1), float64] */;
  %187 = cast(%184, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(2), int32] */;
  %189 = cast(%186, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %191 = cast(%186, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %192 = cosh(%191) /* ty=Tensor[(130, 1), float32] */;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %194 = cast(meta[relay.Constant][7] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %195 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %196 = %164.1;
  %197 = @func_1576(%166) /* ty=Tensor[(10, 3, 7), float64] */;
  %198 = %171.2;
  %199 = %172.0;
  %200 = %175.0;
  %201 = %178.0;
  %202 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %203 = floor_divide(%189, %190) /* ty=Tensor[(130, ?), float64] */;
  %204 = divide(%193, %194) /* ty=Tensor[(130, 210), float64] */;
  (%195, %161, meta[relay.Constant][6] /* ty=Tensor[(130), float64] */, %196, %197, %198, %var_5786, %199, %200, %201, meta[relay.Constant][8] /* ty=Tensor[(294), int64] */, %202, %203, %204)
}

def @func_6846() -> (Tensor[(6, 15), float64],) {
  %205 = @func_2646() /* ty=Tensor[(6, 15), float64] */;
  (%205,)
}

def @func_1578(%var_1577: Tensor[(10, 3, 7), float64]) -> Tensor[(10, 3, 7), float64] {
  %207 = fn (%var_1573: Tensor[(10, 3, 7), float64]) -> Tensor[(10, 3, 7), float64] {
    %206 = cast(%var_1573, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    atan(%206) /* ty=Tensor[(10, 3, 7), float64] */
  };
  %207(%var_1577) /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_2925(%var_2923: Tensor[(16, 7, 1), int16], %var_2924: Tensor[(16, 7, 7), int16]) -> Tensor[(16, 7, 7), bool] {
  @func_2921(%var_2923, %var_2924) /* ty=Tensor[(16, 7, 7), bool] */
}

def @func_6280() -> Tensor[(6, 15), float64] {
  %208 = fn () -> Tensor[(6, 15), float64] {
    @func_6224() /* ty=Tensor[(6, 15), float64] */
  };
  %208() /* ty=Tensor[(6, 15), float64] */
}

def @func_7072() -> Tensor[(6, 15), float64] {
  %210 = fn () -> Tensor[(6, 15), float64] {
    %209 = @func_4468() /* ty=(Tensor[(6, 15), float64],) */;
    %209.0
  };
  %210() /* ty=Tensor[(6, 15), float64] */
}

def @func_2405(%var_2404: Tensor[(1, 130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) {
  %220 = fn (%var_2398: Tensor[(1, 130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) {
    %211 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
    %212 = cast(%211, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
    %213 = reshape(%212, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
    %214 = cast(%var_2398, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
    %215 = reshape(%214, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
    %216 = @func_1956(%215) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
    %217 = @func_1885(%213) /* ty=Tensor[(3, 12, 6), float32] */;
    %218 = %216.1;
    %219 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
    (%211, %217, %218, %var_2398, %219)
  };
  %220(%var_2404) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) */
}

def @func_2596() -> Tensor[(6, 15), float64] {
  %221 = fn () -> Tensor[(6, 15), float64] {
    @func_2162() /* ty=Tensor[(6, 15), float64] */
  };
  %221() /* ty=Tensor[(6, 15), float64] */
}

def @func_3592(%var_3537: Tensor[(416), float64], %var_3547: Tensor[(96), float32]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(416), float64], Tensor[(6, 16, 15), bool], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(6, 15), float64]) {
  %222 = cast(%var_3537, dtype="float64") /* ty=Tensor[(416), float64] */;
  %223 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %224 = cast(%223, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %225 = reshape(%222, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %226 = reshape(%224, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %227 = @func_2245(%225, %226) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %228 = cast(%var_3547, dtype="float32") /* ty=Tensor[(96), float32] */;
  %229 = cast(meta[relay.Constant][9] /* ty=Tensor[(1440), float32] */, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %230 = cast(meta[relay.Constant][9] /* ty=Tensor[(1440), float32] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %231 = cast(meta[relay.Constant][10] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %232 = reshape(%228, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), float32] */;
  %233 = reshape(%229, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float32] */;
  %234 = reshape(%230, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), float64] */;
  %235 = reshape(%231, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %236 = @func_2491(%232, %233, %234, %235) /* ty=(Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) */;
  %237 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %238 = %227.1;
  %239 = %236.4;
  %240 = %237.0;
  %241 = @func_2595() /* ty=Tensor[(6, 15), float64] */;
  (%223, %238, %var_3537, %239, %var_3547, meta[relay.Constant][9] /* ty=Tensor[(1440), float32] */, meta[relay.Constant][10] /* ty=Tensor[(294), int64] */, %240, %241)
}

def @func_7122(%var_7120: Tensor[(130), float64]) -> (Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64], Tensor[(130), float64]) {
  @func_7119(%var_7120) /* ty=(Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64], Tensor[(130), float64]) */
}

def @func_6605(%var_6586: Tensor[(130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(4, 9, 6), uint32], Tensor[(130), float64], Tensor[(15, 11, 4), bool], Tensor[(4, 9, 6), int64]) {
  %242 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %243 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %244 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %246 = reshape(%245, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %247 = cast(%var_6586, dtype="float64") /* ty=Tensor[(130), float64] */;
  %248 = reshape(%247, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %249 = @func_4884(%248) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(4, 9, 6), uint32], Tensor[(6, 15), float64], Tensor[(4, 196), bool], Tensor[(6, 15), float64], Tensor[(4, 196), float32]) */;
  %250 = cast(meta[relay.Constant][11] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %251 = reshape(%250, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float64] */;
  %252 = @func_4063(%251) /* ty=Tensor[(15, 11, 4), float64] */;
  %253 = cast(meta[relay.Constant][11] /* ty=Tensor[(660), float64] */, dtype="bool") /* ty=Tensor[(660), bool] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="bool") /* ty=Tensor[(15, 11, 4), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %257 = @func_1885(%246) /* ty=Tensor[(3, 12, 6), float32] */;
  %258 = cast(%257, dtype="bool") /* ty=Tensor[(3, 12, 6), bool] */;
  %259 = reshape(%258, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %260 = @func_5679(%259) /* ty=(Tensor[(4, 9, 6), int64],) */;
  %261 = %242.0;
  %262 = %243.1;
  %263 = %249.3;
  %264 = equal(%255, %256) /* ty=Tensor[(15, 11, 4), bool] */;
  %265 = %260.0;
  (%244, %261, %262, %257, %263, %var_6586, %264, %265)
}

def @func_8933() -> Tensor[(7, 3, 14), bool] {
  %267 = fn () -> Tensor[(7, 3, 14), bool] {
    %266 = @func_4641() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) */;
    %266.1
  };
  %267() /* ty=Tensor[(7, 3, 14), bool] */
}

def @func_8529(%var_8483: int32, %var_8484: Tensor[(1, 12, 3), int32], %var_8508: Tensor[(32), float64]) -> (Tensor[(1, 12, 3), bool], Tensor[(8, 4, 1), float64], Tensor[(32), float64]) {
  %268 = cast(%var_8483, dtype="bool") /* ty=bool */;
  %269 = cast(%var_8484, dtype="bool") /* ty=Tensor[(1, 12, 3), bool] */;
  %270 = cast(%var_8508, dtype="float64") /* ty=Tensor[(32), float64] */;
  %271 = reshape(%270, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), float64] */;
  %272 = not_equal(%268, %269) /* ty=Tensor[(1, 12, 3), bool] */;
  %273 = @func_2523(%271) /* ty=Tensor[(8, 4, 1), float64] */;
  (%272, %273, %var_8508)
}

def @func_1888(%var_1886: Tensor[(3, 12, 6), float32]) -> Tensor[(3, 12, 6), float32] {
  @func_1885(%var_1886) /* ty=Tensor[(3, 12, 6), float32] */
}

def @func_5418() -> (Tensor[(216), int8],) {
  %274 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %275 = %274.0;
  (%275,)
}

def @func_8089(%var_8076: Tensor[(70), float64]) -> (Tensor[(216), int8], Tensor[(?, 10, 7), float64], Tensor[(70), float64]) {
  %276 = @func_7824() /* ty=(Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
  %277 = cast(%var_8076, dtype="float64") /* ty=Tensor[(70), float64] */;
  %278 = reshape(%277, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), float64] */;
  %279 = @func_235(%278) /* ty=(Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */;
  %280 = %276.0;
  %281 = %279.0;
  (%280, %281, %var_8076)
}

def @func_3313(%var_3311: Tensor[(112), int16], %var_3312: Tensor[(416), float64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(16, 7, 7), bool], Tensor[(112), int16], Tensor[(784), int16], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(416), float64]) {
  @func_3309(%var_3311, %var_3312) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(16, 7, 7), bool], Tensor[(112), int16], Tensor[(784), int16], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(416), float64]) */
}

def @func_3104() -> (Tensor[(6, 15), float64],) {
  @func_3102() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_8360() -> (Tensor[(6, 15), float64],) {
  %282 = @func_7035() /* ty=Tensor[(6, 15), float64] */;
  (%282,)
}

def @func_1289(%var_1287: Tensor[(4, 9, 6), int8]) -> (Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) {
  @func_1286(%var_1287) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */
}

def @func_2842() -> (Tensor[(4, 9, 6), bool],) {
  @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */
}

def @func_6224() -> Tensor[(6, 15), float64] {
  %283 = @func_4969() /* ty=(Tensor[(6, 15), float64],) */;
  %283.0
}

def @func_4469() -> (Tensor[(6, 15), float64],) {
  %285 = fn () -> (Tensor[(6, 15), float64],) {
    %284 = @func_3046() /* ty=Tensor[(6, 15), float64] */;
    (%284,)
  };
  %285() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_2537() -> (Tensor[(6, 15), float64],) {
  %287 = fn () -> (Tensor[(6, 15), float64],) {
    %286 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
    (%286,)
  };
  %287() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_2198(%var_2196: Tensor[(5, 10, 13), float32], %var_2197: Tensor[(5, 10, 13), float32]) -> Tensor[(5, 10, 13), float32] {
  @func_2194(%var_2196, %var_2197) /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_7672() -> (Tensor[(6, 15), float64], Tensor[(216), int8]) {
  %291 = fn () -> (Tensor[(6, 15), float64], Tensor[(216), int8]) {
    %288 = @func_5418() /* ty=(Tensor[(216), int8],) */;
    %289 = @func_5156() /* ty=Tensor[(6, 15), float64] */;
    %290 = %288.0;
    (%289, %290)
  };
  %291() /* ty=(Tensor[(6, 15), float64], Tensor[(216), int8]) */
}

def @func_6969() -> (Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) {
  @func_6967() /* ty=(Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) */
}

def @func_4986(%var_4975: Tensor[(5, 15, 5), uint32]) -> Tensor[(5, 15, 5), uint32] {
  %292 = cast(%var_4975, dtype="uint32") /* ty=Tensor[(5, 15, 5), uint32] */;
  %293 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(5, 15, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 15, 5), uint32] */, dtype="uint32") /* ty=Tensor[(5, 15, 5), uint32] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%294, %295) /* ty=Tensor[(5, 15, 5), uint32] */
}

def @func_2786() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */
}

def @func_2523(%var_2517: Tensor[(8, 4, 1), float64]) -> Tensor[(8, 4, 1), float64] {
  %296 = cast(%var_2517, dtype="float64") /* ty=Tensor[(8, 4, 1), float64] */;
  cosh(%296) /* ty=Tensor[(8, 4, 1), float64] */
}

def @func_4699() -> (Tensor[(216), int8], Tensor[(416), float64], Tensor[(1, 416), float64]) {
  @func_4697() /* ty=(Tensor[(216), int8], Tensor[(416), float64], Tensor[(1, 416), float64]) */
}

def @func_4782(%var_4779: Tensor[(650), float32], %var_4780: Tensor[(5, 10, 13), float32], %var_4781: Tensor[(294), int64]) -> (Tensor[(4, 9, 6), bool], Tensor[(5, 10, 13), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(5, 10, 13), float32]) {
  @func_4777(%var_4779, %var_4780, %var_4781) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(5, 10, 13), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(5, 10, 13), float32]) */
}

def @func_2029() -> (Tensor[(4, 9, 6), bool],) {
  @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */
}

def @func_6967() -> (Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) {
  %297 = @func_4641() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) */;
  %298 = @func_4641() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) */;
  %299 = %297.2;
  %300 = cast(%299, dtype="int64") /* ty=Tensor[(294), int64] */;
  %301 = reshape(%300, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %302 = @func_3724(%301) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
  %303 = %298.0;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %305 = reshape(%304, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %306 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %307 = reshape(%306, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
  %308 = @func_50(%307) /* ty=(Tensor[(13, 10, 9), float64],) */;
  %309 = %302.4;
  %310 = @func_1885(%305) /* ty=Tensor[(3, 12, 6), float32] */;
  %311 = %308.0;
  (%299, %303, %309, %310, %311, meta[relay.Constant][13] /* ty=Tensor[(13, 10), float64] */)
}

def @func_5287(%var_5255: Tensor[(65, 6), float32], %var_5268: Tensor[(65, 6), float32]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(4, 9, 6), bool], Tensor[(65, 6), float64]) {
  %312 = @func_3638() /* ty=(Tensor[(6, 15), float64],) */;
  %313 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %314 = cast(%var_5255, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
  %315 = cast(%var_5255, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
  %316 = reshape(%314, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), float32] */;
  %317 = reshape(%315, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), float32] */;
  %318 = @func_3979(%316, %317) /* ty=(Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) */;
  %319 = cast(%var_5268, dtype="uint64") /* ty=Tensor[(65, 6), uint64] */;
  %320 = shape_of(%var_5255, dtype="int32") /* ty=Tensor[(2), int32] */;
  %321 = cast(%var_5255, dtype="uint64") /* ty=Tensor[(65, 6), uint64] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %323 = left_shift(%321, %322) /* ty=Tensor[(65, 6), uint64] */;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
  %325 = sinh(%324) /* ty=Tensor[(65, 6), float32] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(65, 6), float64] */;
  %327 = %312.0;
  %328 = %313.1;
  %329 = %318.1;
  %330 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %331 = exp(%326) /* ty=Tensor[(65, 6), float64] */;
  (%327, %328, %329, %330, %331)
}

def @func_7948() -> (Tensor[(6, 15), float64],) {
  @func_7946() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_6853() -> Tensor[(6, 15), float64] {
  %332 = fn () -> Tensor[(6, 15), float64] {
    @func_4440() /* ty=Tensor[(6, 15), float64] */
  };
  %332() /* ty=Tensor[(6, 15), float64] */
}

def @func_52(%var_51: Tensor[(13, 10, 1), float64]) -> (Tensor[(13, 10, 9), float64],) {
  %336 = fn (%var_33: Tensor[(13, 10, 1), float64]) -> (Tensor[(13, 10, 9), float64],) {
    %333 = cast(%var_33, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
    %334 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %335 = add(%333, %334) /* ty=Tensor[(13, 10, 9), float64] */;
    (%335,)
  };
  %336(%var_51) /* ty=(Tensor[(13, 10, 9), float64],) */
}

def @func_1539(%var_1536: Tensor[(7, 3, 14), int64], %var_1537: Tensor[(7, 3, 14), int64], %var_1538: Tensor[(7, 3, 14), float32]) -> (Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) {
  @func_1534(%var_1536, %var_1537, %var_1538) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */
}

def @func_4243() -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), bool]) {
  @func_4241() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), bool]) */
}

def @func_2708() -> (Tensor[(6, 15), float64],) {
  %338 = fn () -> (Tensor[(6, 15), float64],) {
    %337 = @func_2646() /* ty=Tensor[(6, 15), float64] */;
    (%337,)
  };
  %338() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_5941() -> Tensor[(4, 9, 6), bool] {
  %340 = fn () -> Tensor[(4, 9, 6), bool] {
    %339 = @func_5215() /* ty=(Tensor[(4, 9, 6), bool],) */;
    %339.0
  };
  %340() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_7119(%var_7117: Tensor[(130), float64]) -> (Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64], Tensor[(130), float64]) {
  %341 = cast(meta[relay.Constant][15] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %342 = cast(%var_7117, dtype="float64") /* ty=Tensor[(130), float64] */;
  %343 = reshape(%341, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %344 = reshape(%342, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %345 = @func_2338(%343, %344) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) */;
  %346 = @func_6279() /* ty=Tensor[(6, 15), float64] */;
  %347 = %345.1;
  (%346, %347, meta[relay.Constant][15] /* ty=Tensor[(294), int64] */, %var_7117)
}

def @func_7427() -> (Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) {
  @func_7425() /* ty=(Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) */
}

def @func_6664(%var_6662: Tensor[(10, 45), uint16], %var_6663: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(660), float64], Tensor[(10, 45), uint16], Tensor[(216), int8], Tensor[(294), int64], Tensor[(96), float32]) {
  %360 = fn (%var_6655: Tensor[(10, 45), uint16], %var_6657: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(660), float64], Tensor[(10, 45), uint16], Tensor[(216), int8], Tensor[(294), int64], Tensor[(96), float32]) {
    %348 = @func_3833() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
    %349 = cast(%var_6655, dtype="uint16") /* ty=Tensor[(10, 45), uint16] */;
    %350 = cast(meta[relay.Constant][16] /* ty=Tensor[(216), int8] */, dtype="int8") /* ty=Tensor[(216), int8] */;
    %351 = cast(%var_6657, dtype="int64") /* ty=Tensor[(294), int64] */;
    %352 = cast(meta[relay.Constant][17] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %353 = reshape(%349, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), uint16] */;
    %354 = reshape(%350, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
    %355 = reshape(%351, newshape=[294]) /* ty=Tensor[(294), int64] */;
    %356 = reshape(%352, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
    %357 = @func_6454(%353, %354, %355, %356) /* ty=(Tensor[(15, 10, 3), bool], Tensor[(4, 9, 6), bool], Tensor[(16, 26), float64], Tensor[(36, 6), int8], Tensor[(15, 10, 3), uint64], Tensor[(660), float64], Tensor[(294), int64], Tensor[(10, 20), int8], Tensor[(660), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(2, 48), float32]) */;
    %358 = %348.1;
    %359 = %357.5;
    (%358, %359, %var_6655, meta[relay.Constant][16] /* ty=Tensor[(216), int8] */, %var_6657, meta[relay.Constant][17] /* ty=Tensor[(96), float32] */)
  };
  %360(%var_6662, %var_6663) /* ty=(Tensor[(6, 15), float64], Tensor[(660), float64], Tensor[(10, 45), uint16], Tensor[(216), int8], Tensor[(294), int64], Tensor[(96), float32]) */
}

def @func_7552(%var_7540: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), uint64],) {
  %361 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  %362 = cast(%var_7540, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="uint64") /* ty=Tensor[(4, 9, 6), uint64] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %366 = subtract(%364, %365) /* ty=Tensor[(4, 9, 6), uint64] */;
  (%366,)
}

def @func_1958(%var_1957: Tensor[(130, 1), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) {
  %373 = fn (%var_1951: Tensor[(130, 1), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) {
    %367 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
    %368 = cast(%var_1951, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %369 = reshape(%368, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
    %370 = @func_50(%369) /* ty=(Tensor[(13, 10, 9), float64],) */;
    %371 = %367.1;
    %372 = %370.0;
    (%371, %372, %var_1951)
  };
  %373(%var_1957) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */
}

def @func_8397(%var_8390: Tensor[(8, 6, 4), bool]) -> (Tensor[(8, 6, 4), bool],) {
  %374 = cast(%var_8390, dtype="bool") /* ty=Tensor[(8, 6, 4), bool] */;
  %375 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(8, 6, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 6, 4), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 4), bool] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %378 = logical_or(%376, %377) /* ty=Tensor[(8, 6, 4), bool] */;
  (%378,)
}

def @func_4544() -> (Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) {
  %383 = fn () -> (Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) {
    %379 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
    %380 = @func_4512() /* ty=(Tensor[(6, 15), float64],) */;
    %381 = %379.0;
    %382 = %380.0;
    (%381, %382)
  };
  %383() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */
}

def @func_5009() -> Tensor[(4, 9, 6), bool] {
  %384 = @func_4661() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %384.0
}

def @func_5149(%var_5148: Tensor[(12, 16, 10), float32]) -> (Tensor[(12, 16, 10), float32],) {
  %392 = fn (%var_5127: Tensor[(12, 16, 10), float32]) -> (Tensor[(12, 16, 10), float32],) {
    %385 = cast(%var_5127, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
    %386 = cosh(%385) /* ty=Tensor[(12, 16, 10), float32] */;
    %387 = cast(%386, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
    %388 = shape_of(%var_5127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %389 = cast(%var_5127, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
    %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %391 = maximum(%389, %390) /* ty=Tensor[(12, 16, 10), float32] */;
    (%391,)
  };
  %392(%var_5148) /* ty=(Tensor[(12, 16, 10), float32],) */
}

def @func_6518() -> Tensor[(4, 9, 6), bool] {
  %393 = fn () -> Tensor[(4, 9, 6), bool] {
    @func_4139() /* ty=Tensor[(4, 9, 6), bool] */
  };
  %393() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_8627() -> (Tensor[(6, 15), float64],) {
  @func_8625() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_6327() -> (Tensor[(6, 15), float64],) {
  @func_6325() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_4887(%var_4885: Tensor[(130), float64]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(4, 9, 6), uint32], Tensor[(6, 15), float64], Tensor[(4, 196), bool], Tensor[(6, 15), float64], Tensor[(4, 196), float32]) {
  @func_4884(%var_4885) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(4, 9, 6), uint32], Tensor[(6, 15), float64], Tensor[(4, 196), bool], Tensor[(6, 15), float64], Tensor[(4, 196), float32]) */
}

def @func_8673() -> (Tensor[(4, 9, 6), bool],) {
  %395 = fn () -> (Tensor[(4, 9, 6), bool],) {
    %394 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
    (%394,)
  };
  %395() /* ty=(Tensor[(4, 9, 6), bool],) */
}

def @func_8059(%var_8058: Tensor[(13, 10, 9), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float32]) {
  %408 = fn (%var_8052: Tensor[(13, 10, 9), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float32]) {
    %396 = @func_7824() /* ty=(Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
    %397 = cast(meta[relay.Constant][19] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %398 = reshape(%397, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
    %399 = @func_50(%398) /* ty=(Tensor[(13, 10, 9), float64],) */;
    %400 = %399.0;
    %401 = cast(%var_8052, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
    %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
    %403 = cast(%400, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
    %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %405 = @func_5940() /* ty=Tensor[(4, 9, 6), bool] */;
    %406 = %396.0;
    %407 = multiply(%403, %404) /* ty=Tensor[(13, 10, 9), float32] */;
    (%405, %406, meta[relay.Constant][19] /* ty=Tensor[(130), float64] */, %407)
  };
  %408(%var_8058) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float32]) */
}

def @func_7406() -> (Tensor[(6, 15), float64], Tensor[(14, ?, 9), bool], Tensor[(14, ?, 9), float64], Tensor[(14, 1, 9), float32]) {
  @func_7404() /* ty=(Tensor[(6, 15), float64], Tensor[(14, ?, 9), bool], Tensor[(14, ?, 9), float64], Tensor[(14, 1, 9), float32]) */
}

def @main() -> (Tensor[(11, 11, 8), float64],) {
  %409 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 8), float64] */;
  %410 = atanh(%409) /* ty=Tensor[(11, 11, 8), float64] */;
  (%410,)
}

def @func_4375(%var_4373: Tensor[(130), float64], %var_4374: Tensor[(650), float32]) -> (Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(5, 10, 13), float32], Tensor[(650), float32], Tensor[(216), int8], Tensor[(130, 1), float64]) {
  @func_4371(%var_4373, %var_4374) /* ty=(Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(5, 10, 13), float32], Tensor[(650), float32], Tensor[(216), int8], Tensor[(130, 1), float64]) */
}

def @func_5862(%var_5860: Tensor[(416), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64], Tensor[(130), float64], Tensor[(6, 15), float64], Tensor[(10, 3, 7), float64], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64], Tensor[(13, 10, 9), float64], Tensor[(6, 15), float64], Tensor[(294), int64], Tensor[(4, 9, 6), bool], Tensor[(130, ?), float64], Tensor[(130, 210), float64]) {
  @func_5859(%var_5860) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64], Tensor[(130), float64], Tensor[(6, 15), float64], Tensor[(10, 3, 7), float64], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64], Tensor[(13, 10, 9), float64], Tensor[(6, 15), float64], Tensor[(294), int64], Tensor[(4, 9, 6), bool], Tensor[(130, ?), float64], Tensor[(130, 210), float64]) */
}

def @func_4884(%var_4844: Tensor[(130), float64]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(4, 9, 6), uint32], Tensor[(6, 15), float64], Tensor[(4, 196), bool], Tensor[(6, 15), float64], Tensor[(4, 196), float32]) {
  %411 = @func_4512() /* ty=(Tensor[(6, 15), float64],) */;
  %412 = cast(%var_4844, dtype="float64") /* ty=Tensor[(130), float64] */;
  %413 = reshape(%412, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %414 = @func_2403(%413) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) */;
  %415 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 196), int16] */, dtype="int16") /* ty=Tensor[(4, 196), int16] */;
  %416 = reshape(%415, newshape=[784]) /* ty=Tensor[(784), int16] */;
  %417 = @func_3505(%416) /* ty=(Tensor[(16, 7, 7), bool], Tensor[(28, 4), int16], Tensor[(784), int16], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint32]) */;
  %418 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %419 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 196), int16] */, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
  %420 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(4, 196), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %421 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 196), int16] */, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %423 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %424 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 196), int16] */, dtype="float32") /* ty=Tensor[(4, 196), float32] */;
  %425 = %411.0;
  %426 = %414.4;
  %427 = %417.4;
  %428 = %418.0;
  %429 = greater(%421, %422) /* ty=Tensor[(4, 196), bool] */;
  %430 = %423.0;
  %431 = sqrt(%424) /* ty=Tensor[(4, 196), float32] */;
  (%425, %426, %var_4844, %427, %428, %429, %430, %431)
}

def @func_6771() -> (Tensor[(216), int8], Tensor[(216), int8], Tensor[(130, 1), float64], Tensor[(13, 10), float64]) {
  @func_6769() /* ty=(Tensor[(216), int8], Tensor[(216), int8], Tensor[(130, 1), float64], Tensor[(13, 10), float64]) */
}

def @func_5073(%var_5061: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), int32],) {
  %432 = @func_5009() /* ty=Tensor[(4, 9, 6), bool] */;
  %433 = cast(%var_5061, dtype="int32") /* ty=Tensor[(4, 9, 6), int32] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="int32") /* ty=Tensor[(4, 9, 6), int32] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %437 = maximum(%435, %436) /* ty=Tensor[(4, 9, 6), int32] */;
  (%437,)
}

def @func_2989() -> (Tensor[(6, 15), float64], Tensor[(216), int8], Tensor[(4, 9, 6), bool]) {
  @func_2987() /* ty=(Tensor[(6, 15), float64], Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */
}

def @func_6016() -> Tensor[(6, 15), float64] {
  @func_6014() /* ty=Tensor[(6, 15), float64] */
}

def @func_7323() -> Tensor[(4, 9, 6), float32] {
  %438 = @func_5940() /* ty=Tensor[(4, 9, 6), bool] */;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  sinh(%439) /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_6608(%var_6606: Tensor[(130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(4, 9, 6), uint32], Tensor[(130), float64], Tensor[(15, 11, 4), bool], Tensor[(4, 9, 6), int64]) {
  @func_6605(%var_6606) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(4, 9, 6), uint32], Tensor[(130), float64], Tensor[(15, 11, 4), bool], Tensor[(4, 9, 6), int64]) */
}

def @func_1730() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) {
  @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */
}

def @func_3631() -> (Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) {
  %448 = fn () -> (Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) {
    %440 = @func_2570() /* ty=(Tensor[(216), int8],) */;
    %441 = cast(meta[relay.Constant][23] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %442 = reshape(%441, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), float64] */;
    %443 = @func_50(%442) /* ty=(Tensor[(13, 10, 9), float64],) */;
    %444 = %443.0;
    %445 = cast(%444, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %446 = %440.0;
    %447 = tan(%445) /* ty=Tensor[(13, 10, 9), float64] */;
    (%446, meta[relay.Constant][23] /* ty=Tensor[(130), float64] */, %447)
  };
  %448() /* ty=(Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */
}

def @func_2921(%var_2909: Tensor[(16, 7, 1), int16], %var_2910: Tensor[(16, 7, 7), int16]) -> Tensor[(16, 7, 7), bool] {
  %449 = cast(%var_2909, dtype="bool") /* ty=Tensor[(16, 7, 1), bool] */;
  %450 = cast(%var_2910, dtype="bool") /* ty=Tensor[(16, 7, 7), bool] */;
  less(%449, %450) /* ty=Tensor[(16, 7, 7), bool] */
}

def @func_1534(%var_1487: Tensor[(7, 3, 14), int64], %var_1488: Tensor[(7, 3, 14), int64], %var_1530: Tensor[(7, 3, 14), float32]) -> (Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) {
  %451 = cast(%var_1488, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %452 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%var_1487, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = not_equal(%453, %454) /* ty=Tensor[(7, 3, 14), bool] */;
  %456 = cast(%455, dtype="int32") /* ty=Tensor[(7, 3, 14), int32] */;
  %457 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%var_1487, dtype="int32") /* ty=Tensor[(7, 3, 14), int32] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %460 = cast(%var_1487, dtype="uint16") /* ty=Tensor[(7, 3, 14), uint16] */;
  %461 = shape_of(%var_1488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_1488, dtype="uint16") /* ty=Tensor[(7, 3, 14), uint16] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %464 = logical_xor(%462, %463) /* ty=Tensor[(7, 3, 14), uint16] */;
  %465 = cast(%455, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %469 = cast(%var_1488, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %470 = cosh(%469) /* ty=Tensor[(7, 3, 14), float32] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %472 = cast(%var_1530, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %473 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%470, dtype="bool") /* ty=Tensor[(7, 3, 14), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %476 = bitwise_or(%458, %459) /* ty=Tensor[(7, 3, 14), int32] */;
  %477 = power(%467, %468) /* ty=Tensor[(7, 3, 14), float32] */;
  %478 = asin(%471) /* ty=Tensor[(7, 3, 14), float32] */;
  %479 = greater(%474, %475) /* ty=Tensor[(7, 3, 14), bool] */;
  (%476, %477, %478, %479)
}

def @func_1885(%var_1849: Tensor[(3, 12, 6), float32]) -> Tensor[(3, 12, 6), float32] {
  %480 = cast(%var_1849, dtype="float32") /* ty=Tensor[(3, 12, 6), float32] */;
  asinh(%480) /* ty=Tensor[(3, 12, 6), float32] */
}

def @func_5011() -> Tensor[(4, 9, 6), bool] {
  @func_5009() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_3026() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) {
  %481 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %482 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %483 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  %484 = %481.0;
  %485 = %482.0;
  (%483, %484, %485)
}

def @func_3251(%var_3248: Tensor[(216), int8], %var_3249: Tensor[(1, 200), int8], %var_3250: Tensor[(26, 5), float64]) -> (Tensor[(6, 15), float64], Tensor[(216), uint32], Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(1, 200), int8], Tensor[(1, 130), float64], Tensor[(26, 5), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  @func_3246(%var_3248, %var_3249, %var_3250) /* ty=(Tensor[(6, 15), float64], Tensor[(216), uint32], Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(1, 200), int8], Tensor[(1, 130), float64], Tensor[(26, 5), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */
}

def @func_5456(%var_5452: Tensor[(16, 16, 12), uint32], %var_5453: Tensor[(16, 16, 12), uint32], %var_5454: Tensor[(1, 130), float64], %var_5455: Tensor[(216), bool]) -> (Tensor[(16, 16, 12), uint32], Tensor[(6, 15), float64], Tensor[(1, 130), float64], Tensor[(216), bool]) {
  %497 = fn (%var_5442: Tensor[(16, 16, 12), uint32], %var_5443: Tensor[(16, 16, 12), uint32], %var_5448: Tensor[(1, 130), float64], %var_5449: Tensor[(216), bool]) -> (Tensor[(16, 16, 12), uint32], Tensor[(6, 15), float64], Tensor[(1, 130), float64], Tensor[(216), bool]) {
    %486 = cast(%var_5443, dtype="uint32") /* ty=Tensor[(16, 16, 12), uint32] */;
    %487 = shape_of(%var_5442, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(%var_5442, dtype="uint32") /* ty=Tensor[(16, 16, 12), uint32] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %490 = cast(%var_5448, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
    %491 = cast(%var_5449, dtype="bool") /* ty=Tensor[(216), bool] */;
    %492 = reshape(%490, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
    %493 = reshape(%491, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
    %494 = @func_4115(%492, %493) /* ty=(Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) */;
    %495 = bitwise_and(%488, %489) /* ty=Tensor[(16, 16, 12), uint32] */;
    %496 = %494.0;
    (%495, %496, %var_5448, %var_5449)
  };
  %497(%var_5452, %var_5453, %var_5454, %var_5455) /* ty=(Tensor[(16, 16, 12), uint32], Tensor[(6, 15), float64], Tensor[(1, 130), float64], Tensor[(216), bool]) */
}

def @func_1904() -> Tensor[(4, 9, 6), bool] {
  %499 = fn () -> Tensor[(4, 9, 6), bool] {
    %498 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
    %498.1
  };
  %499() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_7946() -> (Tensor[(6, 15), float64],) {
  %500 = @func_6852() /* ty=Tensor[(6, 15), float64] */;
  (%500,)
}

def @func_9038() -> Tensor[(6, 15), float64] {
  @func_2595() /* ty=Tensor[(6, 15), float64] */
}

def @func_9003() -> (Tensor[(4, 9, 6), bool],) {
  %501 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %502 = %501.0;
  (%502,)
}

def @func_3596(%var_3594: Tensor[(416), float64], %var_3595: Tensor[(96), float32]) -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(416), float64], Tensor[(6, 16, 15), bool], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(6, 15), float64]) {
  @func_3592(%var_3594, %var_3595) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(416), float64], Tensor[(6, 16, 15), bool], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */
}

def @func_3835() -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64]) {
  @func_3833() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */
}

def @func_3047() -> Tensor[(6, 15), float64] {
  %504 = fn () -> Tensor[(6, 15), float64] {
    %503 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
    %503.0
  };
  %504() /* ty=Tensor[(6, 15), float64] */
}

def @func_8362() -> (Tensor[(6, 15), float64],) {
  @func_8360() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_5643(%var_5606: Tensor[(294, 11), int64]) -> (Tensor[(6, 15), float64], Tensor[(130), float64], Tensor[(294, 11), bool], Tensor[(4, 9, 6), bool], Tensor[(130), float64], Tensor[(4, 9, 6), bool]) {
  %505 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %506 = cast(meta[relay.Constant][24] /* ty=Tensor[(294, 1), int64] */, dtype="int64") /* ty=Tensor[(294, 1), int64] */;
  %507 = reshape(%506, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %508 = @func_3724(%507) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
  %509 = cast(meta[relay.Constant][24] /* ty=Tensor[(294, 1), int64] */, dtype="bool") /* ty=Tensor[(294, 1), bool] */;
  %510 = cast(%var_5606, dtype="bool") /* ty=Tensor[(294, 11), bool] */;
  %511 = @func_5215() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %512 = @func_3630() /* ty=(Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */;
  %513 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %514 = %505.0;
  %515 = %508.5;
  %516 = logical_and(%509, %510) /* ty=Tensor[(294, 11), bool] */;
  %517 = %511.0;
  %518 = %512.1;
  %519 = %513.2;
  (%514, %515, %516, %517, %518, %519)
}

def @func_7496() -> (Tensor[(6, 15), float64],) {
  @func_7494() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_7887() -> Tensor[(4, 9, 6), float32] {
  @func_7885() /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_4661() -> (Tensor[(4, 9, 6), bool],) {
  %520 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  (%520,)
}

def @func_7160() -> Tensor[(6, 15), float64] {
  @func_7158() /* ty=Tensor[(6, 15), float64] */
}

def @func_3979(%var_3948: Tensor[(5, 13, 6), float32], %var_3949: Tensor[(5, 13, 6), float32]) -> (Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) {
  %521 = cast(%var_3949, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %522 = shape_of(%var_3948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%var_3948, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %525 = cast(%var_3948, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %526 = floor_divide(%523, %524) /* ty=Tensor[(5, 13, 6), float32] */;
  %527 = sin(%525) /* ty=Tensor[(5, 13, 6), float32] */;
  (%526, %527)
}

def @func_2884() -> (Tensor[(6, 15), float64],) {
  %528 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%528,)
}

def @func_7524(%var_7523: Tensor[(6, 5, 10), float64]) -> Tensor[(6, 5, 10), float64] {
  %530 = fn (%var_7497: Tensor[(6, 5, 10), float64]) -> Tensor[(6, 5, 10), float64] {
    %529 = cast(%var_7497, dtype="float64") /* ty=Tensor[(6, 5, 10), float64] */;
    sigmoid(%529) /* ty=Tensor[(6, 5, 10), float64] */
  };
  %530(%var_7523) /* ty=Tensor[(6, 5, 10), float64] */
}

def @func_2840() -> (Tensor[(4, 9, 6), bool],) {
  %531 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
  (%531,)
}

def @func_5347(%var_5329: Tensor[(416), float64]) -> Tensor[(416), float64] {
  %532 = @func_4697() /* ty=(Tensor[(216), int8], Tensor[(416), float64], Tensor[(1, 416), float64]) */;
  %533 = %532.1;
  %534 = cast(%var_5329, dtype="float64") /* ty=Tensor[(416), float64] */;
  %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(1), int32] */;
  %536 = cast(%533, dtype="float64") /* ty=Tensor[(416), float64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?), float64] */;
  divide(%536, %537) /* ty=Tensor[(416), float64] */
}

def @func_8809() -> (Tensor[(216), int8],) {
  %540 = fn () -> (Tensor[(216), int8],) {
    %538 = @func_2570() /* ty=(Tensor[(216), int8],) */;
    %539 = %538.0;
    (%539,)
  };
  %540() /* ty=(Tensor[(216), int8],) */
}

def @func_2027() -> (Tensor[(4, 9, 6), bool],) {
  %541 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  (%541,)
}

def @func_6139(%var_6136: Tensor[(294), int64], %var_6137: Tensor[(100, 2), int8], %var_6138: Tensor[(660), float64]) -> (Tensor[(4, 9, 6), int8], Tensor[(6, 15), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64], Tensor[(10, 2, 10), bool], Tensor[(10, 3, 7), float64], Tensor[(35, 6), float64], Tensor[(100, 2), float64], Tensor[(15, 11, 4), float64], Tensor[(660), float64], Tensor[(4, 9, 6), int64], Tensor[(8, 4, 1), float64], Tensor[(8, 4), float64], Tensor[(6, 15), float64]) {
  %579 = fn (%var_6059: Tensor[(294), int64], %var_6065: Tensor[(100, 2), int8], %var_6108: Tensor[(660), float64]) -> (Tensor[(4, 9, 6), int8], Tensor[(6, 15), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64], Tensor[(10, 2, 10), bool], Tensor[(10, 3, 7), float64], Tensor[(35, 6), float64], Tensor[(100, 2), float64], Tensor[(15, 11, 4), float64], Tensor[(660), float64], Tensor[(4, 9, 6), int64], Tensor[(8, 4, 1), float64], Tensor[(8, 4), float64], Tensor[(6, 15), float64]) {
    %542 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
    %543 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 9, 6), bool] */, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
    %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
    %545 = cast(%542, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
    %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %547 = cast(%var_6059, dtype="int64") /* ty=Tensor[(294), int64] */;
    %548 = cast(%var_6059, dtype="int64") /* ty=Tensor[(294), int64] */;
    %549 = cast(%var_6059, dtype="float32") /* ty=Tensor[(294), float32] */;
    %550 = reshape(%547, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %551 = reshape(%548, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %552 = reshape(%549, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
    %553 = @func_1534(%550, %551, %552) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
    %554 = cast(%var_6065, dtype="int8") /* ty=Tensor[(100, 2), int8] */;
    %555 = cast(%var_6065, dtype="int8") /* ty=Tensor[(100, 2), int8] */;
    %556 = reshape(%554, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
    %557 = reshape(%555, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
    %558 = @func_1786(%556, %557) /* ty=(Tensor[(10, 2, 10), bool],) */;
    %559 = cast(meta[relay.Constant][26] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
    %560 = reshape(%559, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
    %561 = cast(%var_6065, dtype="float64") /* ty=Tensor[(100, 2), float64] */;
    %562 = cast(%var_6108, dtype="float64") /* ty=Tensor[(660), float64] */;
    %563 = reshape(%562, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), float64] */;
    %564 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 9, 6), bool] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
    %565 = reshape(%564, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
    %566 = @func_5679(%565) /* ty=(Tensor[(4, 9, 6), int64],) */;
    %567 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 4), float64] */;
    %568 = reshape(%567, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), float64] */;
    %569 = bitwise_or(%545, %546) /* ty=Tensor[(4, 9, 6), int8] */;
    %570 = @func_6014() /* ty=Tensor[(6, 15), float64] */;
    %571 = %553.2;
    %572 = %558.0;
    %573 = @func_1576(%560) /* ty=Tensor[(10, 3, 7), float64] */;
    %574 = sqrt(%561) /* ty=Tensor[(100, 2), float64] */;
    %575 = @func_4063(%563) /* ty=Tensor[(15, 11, 4), float64] */;
    %576 = %566.0;
    %577 = @func_2523(%568) /* ty=Tensor[(8, 4, 1), float64] */;
    %578 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
    (%569, %570, %571, %var_6059, %572, %573, meta[relay.Constant][26] /* ty=Tensor[(35, 6), float64] */, %574, %575, %var_6108, %576, %577, meta[relay.Constant][27] /* ty=Tensor[(8, 4), float64] */, %578)
  };
  %579(%var_6136, %var_6137, %var_6138) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(6, 15), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64], Tensor[(10, 2, 10), bool], Tensor[(10, 3, 7), float64], Tensor[(35, 6), float64], Tensor[(100, 2), float64], Tensor[(15, 11, 4), float64], Tensor[(660), float64], Tensor[(4, 9, 6), int64], Tensor[(8, 4, 1), float64], Tensor[(8, 4), float64], Tensor[(6, 15), float64]) */
}

def @func_2074(%var_2072: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(7, 3, 14), bool], Tensor[(294), int64]) {
  @func_2071(%var_2072) /* ty=(Tensor[(6, 15), float64], Tensor[(7, 3, 14), bool], Tensor[(294), int64]) */
}

def @func_2622() -> Tensor[(4, 9, 6), bool] {
  @func_2620() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_6014() -> Tensor[(6, 15), float64] {
  %580 = @func_3833() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
  %580.1
}

def @func_7036() -> Tensor[(6, 15), float64] {
  %581 = fn () -> Tensor[(6, 15), float64] {
    @func_3046() /* ty=Tensor[(6, 15), float64] */
  };
  %581() /* ty=Tensor[(6, 15), float64] */
}

def @func_8148() -> Tensor[(6, 15), float64] {
  %582 = fn () -> Tensor[(6, 15), float64] {
    @func_2162() /* ty=Tensor[(6, 15), float64] */
  };
  %582() /* ty=Tensor[(6, 15), float64] */
}

def @func_3505(%var_3464: Tensor[(784), int16]) -> (Tensor[(16, 7, 7), bool], Tensor[(28, 4), int16], Tensor[(784), int16], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint32]) {
  %583 = cast(meta[relay.Constant][28] /* ty=Tensor[(28, 4), int16] */, dtype="int16") /* ty=Tensor[(28, 4), int16] */;
  %584 = cast(%var_3464, dtype="int16") /* ty=Tensor[(784), int16] */;
  %585 = reshape(%583, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), int16] */;
  %586 = reshape(%584, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), int16] */;
  %587 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %589 = sigmoid(%588) /* ty=Tensor[(4, 9, 6), float64] */;
  %590 = cast(%589, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %591 = reshape(%590, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
  %592 = @func_1286(%591) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
  %593 = cast(%587, dtype="uint32") /* ty=Tensor[(4, 9, 6), uint32] */;
  %594 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%589, dtype="uint32") /* ty=Tensor[(4, 9, 6), uint32] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %597 = @func_2921(%585, %586) /* ty=Tensor[(16, 7, 7), bool] */;
  %598 = %592.1;
  %599 = minimum(%595, %596) /* ty=Tensor[(4, 9, 6), uint32] */;
  (%597, meta[relay.Constant][28] /* ty=Tensor[(28, 4), int16] */, %var_3464, %598, %599)
}

def @func_4989(%var_4987: Tensor[(5, 15, 5), uint32]) -> Tensor[(5, 15, 5), uint32] {
  @func_4986(%var_4987) /* ty=Tensor[(5, 15, 5), uint32] */
}

def @func_2342(%var_2340: Tensor[(294), int64], %var_2341: Tensor[(130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) {
  @func_2338(%var_2340, %var_2341) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) */
}

def @func_4382() -> Tensor[(4, 9, 6), bool] {
  %601 = fn () -> Tensor[(4, 9, 6), bool] {
    %600 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
    %600.0
  };
  %601() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_1790(%var_1788: Tensor[(10, 2, 10), int8], %var_1789: Tensor[(10, 2, 10), int8]) -> (Tensor[(10, 2, 10), bool],) {
  @func_1786(%var_1788, %var_1789) /* ty=(Tensor[(10, 2, 10), bool],) */
}

def @func_2163() -> Tensor[(6, 15), float64] {
  %603 = fn () -> Tensor[(6, 15), float64] {
    %602 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
    %602.0
  };
  %603() /* ty=Tensor[(6, 15), float64] */
}

def @func_3983(%var_3981: Tensor[(5, 13, 6), float32], %var_3982: Tensor[(5, 13, 6), float32]) -> (Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) {
  @func_3979(%var_3981, %var_3982) /* ty=(Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) */
}

def @func_8605(%var_8591: Tensor[(5, 234), float64]) -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32], Tensor[(216), float32], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(5, 234), float32]) {
  %604 = @func_4468() /* ty=(Tensor[(6, 15), float64],) */;
  %605 = @func_7425() /* ty=(Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) */;
  %606 = cast(meta[relay.Constant][29] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %607 = reshape(%606, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), float32] */;
  %608 = cast(meta[relay.Constant][29] /* ty=Tensor[(216), float32] */, dtype="int8") /* ty=Tensor[(216), int8] */;
  %609 = reshape(%608, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
  %610 = @func_1286(%609) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
  %611 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 234), float64] */, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %612 = reshape(%611, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %613 = @func_8057(%612) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(216), int8], Tensor[(130), float64], Tensor[(13, 10, 9), float32]) */;
  %614 = cast(%var_8591, dtype="bool") /* ty=Tensor[(5, 234), bool] */;
  %615 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(5, 234), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %616 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 234), float64] */, dtype="bool") /* ty=Tensor[(5, 234), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %618 = less_equal(%616, %617) /* ty=Tensor[(5, 234), bool] */;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(5, 234), float32] */;
  %620 = %604.0;
  %621 = %605.0;
  %622 = @func_1885(%607) /* ty=Tensor[(3, 12, 6), float32] */;
  %623 = %610.2;
  %624 = @func_1845() /* ty=Tensor[(4, 9, 6), bool] */;
  %625 = %613.1;
  %626 = log2(%619) /* ty=Tensor[(5, 234), float32] */;
  (%620, %621, %622, meta[relay.Constant][29] /* ty=Tensor[(216), float32] */, %623, %624, %625, %626)
}

def @func_8831() -> (Tensor[(9, 6, 5), float32],) {
  @func_8829() /* ty=(Tensor[(9, 6, 5), float32],) */
}

def @func_8650() -> (Tensor[(6, 15), float64],) {
  @func_8648() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_4950(%var_4949: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) {
  %637 = fn (%var_4925: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) {
    %627 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
    %628 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
    %629 = cast(%var_4925, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
    %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(%628, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %633 = @func_2570() /* ty=(Tensor[(216), int8],) */;
    %634 = %627.0;
    %635 = less(%631, %632) /* ty=Tensor[(4, 9, 6), bool] */;
    %636 = %633.0;
    (%634, %635, %636)
  };
  %637(%var_4949) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */
}

def @func_8894() -> (Tensor[(4, 9, 6), bool], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) {
  %646 = fn () -> (Tensor[(4, 9, 6), bool], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) {
    %638 = @func_8426() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
    %639 = cast(meta[relay.Constant][31] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
    %640 = cast(meta[relay.Constant][31] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
    %641 = reshape(%639, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
    %642 = reshape(%640, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
    %643 = @func_1786(%641, %642) /* ty=(Tensor[(10, 2, 10), bool],) */;
    %644 = %638.0;
    %645 = %643.0;
    (%644, %645, meta[relay.Constant][31] /* ty=Tensor[(200), int8] */)
  };
  %646() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) */
}

def @func_3640() -> (Tensor[(6, 15), float64],) {
  @func_3638() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_4440() -> Tensor[(6, 15), float64] {
  @func_4290() /* ty=Tensor[(6, 15), float64] */
}

def @func_5156() -> Tensor[(6, 15), float64] {
  @func_2162() /* ty=Tensor[(6, 15), float64] */
}

def @func_7872() -> Tensor[(14, ?, 9), float64] {
  %652 = fn () -> Tensor[(14, ?, 9), float64] {
    %647 = @func_7404() /* ty=(Tensor[(6, 15), float64], Tensor[(14, ?, 9), bool], Tensor[(14, ?, 9), float64], Tensor[(14, 1, 9), float32]) */;
    %648 = %647.2;
    %649 = cast(%648, dtype="float32") /* ty=Tensor[(14, ?, 9), float32] */;
    %650 = sin(%649) /* ty=Tensor[(14, ?, 9), float32] */;
    %651 = cast(%650, dtype="float64") /* ty=Tensor[(14, ?, 9), float64] */;
    acosh(%651) /* ty=Tensor[(14, ?, 9), float64] */
  };
  %652() /* ty=Tensor[(14, ?, 9), float64] */
}

def @func_7885() -> Tensor[(4, 9, 6), float32] {
  @func_7323() /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_2248(%var_2246: Tensor[(13, 16, 2), float64], %var_2247: Tensor[(36, 6), int8]) -> (Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) {
  %659 = fn (%var_2233: Tensor[(13, 16, 2), float64], %var_2241: Tensor[(36, 6), int8]) -> (Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) {
    %653 = cast(%var_2233, dtype="float64") /* ty=Tensor[(13, 16, 2), float64] */;
    %654 = cast(%var_2241, dtype="int8") /* ty=Tensor[(36, 6), int8] */;
    %655 = reshape(%654, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
    %656 = @func_1286(%655) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
    %657 = sinh(%653) /* ty=Tensor[(13, 16, 2), float64] */;
    %658 = %656.1;
    (%657, %658, %var_2241)
  };
  %659(%var_2246, %var_2247) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */
}

def @func_2194(%var_2179: Tensor[(5, 10, 13), float32], %var_2180: Tensor[(5, 10, 13), float32]) -> Tensor[(5, 10, 13), float32] {
  %660 = cast(%var_2180, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %661 = shape_of(%var_2179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%var_2179, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %664 = divide(%662, %663) /* ty=Tensor[(5, 10, 13), float32] */;
  %665 = cast(%664, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  log2(%665) /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_4066(%var_4064: Tensor[(15, 11, 4), float64]) -> Tensor[(15, 11, 4), float64] {
  @func_4063(%var_4064) /* ty=Tensor[(15, 11, 4), float64] */
}

def @func_7139(%var_7132: Tensor[(200), int8]) -> (Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) {
  %666 = cast(%var_7132, dtype="int8") /* ty=Tensor[(200), int8] */;
  %667 = cast(%var_7132, dtype="int8") /* ty=Tensor[(200), int8] */;
  %668 = reshape(%666, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %669 = reshape(%667, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %670 = @func_1786(%668, %669) /* ty=(Tensor[(10, 2, 10), bool],) */;
  %671 = @func_4440() /* ty=Tensor[(6, 15), float64] */;
  %672 = %670.0;
  (%671, %672, %var_7132)
}

def @func_4119(%var_4117: Tensor[(130, 1), float64], %var_4118: Tensor[(4, 9, 6), bool]) -> (Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) {
  @func_4115(%var_4117, %var_4118) /* ty=(Tensor[(6, 15), float64], Tensor[(130, 1), float64], Tensor[(4, 9, 6), uint64]) */
}

def @func_8625() -> (Tensor[(6, 15), float64],) {
  %673 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%673,)
}

def @func_3638() -> (Tensor[(6, 15), float64],) {
  %674 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
  (%674,)
}

def @func_5158() -> Tensor[(6, 15), float64] {
  @func_5156() /* ty=Tensor[(6, 15), float64] */
}

def @func_2571() -> (Tensor[(216), int8],) {
  %677 = fn () -> (Tensor[(216), int8],) {
    %675 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
    %676 = %675.2;
    (%676,)
  };
  %677() /* ty=(Tensor[(216), int8],) */
}

def @func_3028() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) {
  @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */
}

def @func_8733() -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %687 = fn () -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
    %678 = @func_7824() /* ty=(Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
    %679 = %678.1;
    %680 = cast(%679, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
    %681 = reshape(%680, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
    %682 = @func_7552(%681) /* ty=(Tensor[(4, 9, 6), uint64],) */;
    %683 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
    %684 = %682.0;
    %685 = @func_4381() /* ty=Tensor[(4, 9, 6), bool] */;
    %686 = %683.0;
    (%679, %684, %685, %686)
  };
  %687() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */
}

def @func_7425() -> (Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) {
  %688 = @func_6967() /* ty=(Tensor[(294), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(13, 10), float64]) */;
  %689 = @func_6014() /* ty=Tensor[(6, 15), float64] */;
  %690 = %688.3;
  (%689, %690)
}

def @func_4063(%var_4055: Tensor[(15, 11, 4), float64]) -> Tensor[(15, 11, 4), float64] {
  %691 = cast(%var_4055, dtype="float64") /* ty=Tensor[(15, 11, 4), float64] */;
  sqrt(%691) /* ty=Tensor[(15, 11, 4), float64] */
}

def @func_7824() -> (Tensor[(216), int8], Tensor[(4, 9, 6), bool]) {
  %692 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %693 = @func_4661() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %694 = %692.2;
  %695 = %693.0;
  (%694, %695)
}

def @func_2338(%var_2315: Tensor[(294), int64], %var_2322: Tensor[(130), float64]) -> (Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) {
  %696 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %697 = cast(%var_2315, dtype="int64") /* ty=Tensor[(294), int64] */;
  %698 = cast(%var_2315, dtype="int64") /* ty=Tensor[(294), int64] */;
  %699 = cast(%var_2315, dtype="float32") /* ty=Tensor[(294), float32] */;
  %700 = reshape(%697, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %701 = reshape(%698, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %702 = reshape(%699, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %703 = @func_1534(%700, %701, %702) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %704 = cast(%var_2322, dtype="float64") /* ty=Tensor[(130), float64] */;
  %705 = reshape(%704, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %706 = @func_1956(%705) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
  %707 = cast(%var_2315, dtype="float32") /* ty=Tensor[(294), float32] */;
  %708 = %696.0;
  %709 = %703.0;
  %710 = %706.2;
  %711 = exp(%707) /* ty=Tensor[(294), float32] */;
  (%708, %709, %710, %var_2322, %711)
}

def @func_4663() -> (Tensor[(4, 9, 6), bool],) {
  @func_4661() /* ty=(Tensor[(4, 9, 6), bool],) */
}

def @func_6325() -> (Tensor[(6, 15), float64],) {
  %712 = @func_6279() /* ty=Tensor[(6, 15), float64] */;
  (%712,)
}

def @func_2496(%var_2492: Tensor[(6, 16, 1), float32], %var_2493: Tensor[(6, 16, 15), float32], %var_2494: Tensor[(6, 16, 15), float64], %var_2495: Tensor[(294), int64]) -> (Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) {
  %748 = fn (%var_2412: Tensor[(6, 16, 1), float32], %var_2416: Tensor[(6, 16, 15), float32], %var_2424: Tensor[(6, 16, 15), float64], %var_2486: Tensor[(294), int64]) -> (Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) {
    %713 = cast(%var_2412, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
    %714 = acos(%713) /* ty=Tensor[(6, 16, 1), float32] */;
    %715 = cast(%714, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
    %716 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
    %717 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 70), float64] */, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
    %718 = reshape(%717, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), float64] */;
    %719 = @func_235(%718) /* ty=(Tensor[(?, 10, 7), float64], Tensor[(?, 10, 7), float32], Tensor[(13, 10, 9), float64], Tensor[(130), float64], Tensor[(13, 10, 9), float64]) */;
    %720 = cast(%var_2412, dtype="float64") /* ty=Tensor[(6, 16, 1), float64] */;
    %721 = cast(%var_2416, dtype="float64") /* ty=Tensor[(6, 16, 15), float64] */;
    %722 = floor_mod(%720, %721) /* ty=Tensor[(6, 16, 15), float64] */;
    %723 = cast(%var_2424, dtype="float32") /* ty=Tensor[(6, 16, 15), float32] */;
    %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
    %725 = cast(%722, dtype="float32") /* ty=Tensor[(6, 16, 15), float32] */;
    %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %727 = mod(%725, %726) /* ty=Tensor[(6, 16, 15), float32] */;
    %728 = cast(%714, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
    %729 = cast(%727, dtype="bool") /* ty=Tensor[(6, 16, 15), bool] */;
    %730 = cast(meta[relay.Constant][33] /* ty=Tensor[(416, 1), float64] */, dtype="float64") /* ty=Tensor[(416, 1), float64] */;
    %731 = %716.2;
    %732 = cast(%731, dtype="int8") /* ty=Tensor[(216), int8] */;
    %733 = reshape(%730, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
    %734 = reshape(%732, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
    %735 = @func_2245(%733, %734) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
    %736 = cast(%var_2486, dtype="int64") /* ty=Tensor[(294), int64] */;
    %737 = cast(%var_2486, dtype="int64") /* ty=Tensor[(294), int64] */;
    %738 = cast(%var_2486, dtype="float32") /* ty=Tensor[(294), float32] */;
    %739 = reshape(%736, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %740 = reshape(%737, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %741 = reshape(%738, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
    %742 = @func_1534(%739, %740, %741) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
    %743 = rsqrt(%715) /* ty=Tensor[(6, 16, 1), float32] */;
    %744 = %719.1;
    %745 = less_equal(%728, %729) /* ty=Tensor[(6, 16, 15), bool] */;
    %746 = %735.0;
    %747 = %742.1;
    (%743, %731, %744, meta[relay.Constant][32] /* ty=Tensor[(1, 70), float64] */, %745, %746, meta[relay.Constant][33] /* ty=Tensor[(416, 1), float64] */, %747, %var_2486)
  };
  %748(%var_2492, %var_2493, %var_2494, %var_2495) /* ty=(Tensor[(6, 16, 1), float32], Tensor[(216), int8], Tensor[(?, 10, 7), float32], Tensor[(1, 70), float64], Tensor[(6, 16, 15), bool], Tensor[(13, 16, 2), float64], Tensor[(416, 1), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64]) */
}

def @func_5420() -> (Tensor[(216), int8],) {
  @func_5418() /* ty=(Tensor[(216), int8],) */
}

def @func_8214(%var_8212: Tensor[(216), bool], %var_8213: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), int64], Tensor[(216), bool], Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64]) {
  %763 = fn (%var_8186: Tensor[(216), bool], %var_8205: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), int64], Tensor[(216), bool], Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64]) {
    %749 = cast(%var_8186, dtype="bool") /* ty=Tensor[(216), bool] */;
    %750 = reshape(%749, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
    %751 = @func_5679(%750) /* ty=(Tensor[(4, 9, 6), int64],) */;
    %752 = cast(%var_8205, dtype="int64") /* ty=Tensor[(294), int64] */;
    %753 = cast(%var_8205, dtype="int64") /* ty=Tensor[(294), int64] */;
    %754 = cast(%var_8205, dtype="float32") /* ty=Tensor[(294), float32] */;
    %755 = reshape(%752, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %756 = reshape(%753, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %757 = reshape(%754, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
    %758 = @func_1534(%755, %756, %757) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
    %759 = @func_2162() /* ty=Tensor[(6, 15), float64] */;
    %760 = %751.0;
    %761 = @func_7035() /* ty=Tensor[(6, 15), float64] */;
    %762 = %758.0;
    (%759, %760, %var_8186, %761, %762, %var_8205)
  };
  %763(%var_8212, %var_8213) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), int64], Tensor[(216), bool], Tensor[(6, 15), float64], Tensor[(7, 3, 14), int32], Tensor[(294), int64]) */
}

def @func_8092(%var_8090: Tensor[(70), float64]) -> (Tensor[(216), int8], Tensor[(?, 10, 7), float64], Tensor[(70), float64]) {
  @func_8089(%var_8090) /* ty=(Tensor[(216), int8], Tensor[(?, 10, 7), float64], Tensor[(70), float64]) */
}

def @func_7192(%var_7191: Tensor[(1, 1, 3), float32]) -> (Tensor[(1, 1, 3), float64],) {
  %768 = fn (%var_7175: Tensor[(1, 1, 3), float32]) -> (Tensor[(1, 1, 3), float64],) {
    %764 = cast(%var_7175, dtype="float32") /* ty=Tensor[(1, 1, 3), float32] */;
    %765 = log2(%764) /* ty=Tensor[(1, 1, 3), float32] */;
    %766 = cast(%765, dtype="float64") /* ty=Tensor[(1, 1, 3), float64] */;
    %767 = cos(%766) /* ty=Tensor[(1, 1, 3), float64] */;
    (%767,)
  };
  %768(%var_7191) /* ty=(Tensor[(1, 1, 3), float64],) */
}

def @func_7738() -> (Tensor[(6, 15), float64],) {
  @func_7736() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_6848() -> (Tensor[(6, 15), float64],) {
  @func_6846() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_4970() -> (Tensor[(6, 15), float64],) {
  %771 = fn () -> (Tensor[(6, 15), float64],) {
    %769 = @func_2707() /* ty=(Tensor[(6, 15), float64],) */;
    %770 = %769.0;
    (%770,)
  };
  %771() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_3807(%var_3806: Tensor[(416), float64]) -> (Tensor[(4, 9, 6), float32], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64]) {
  %784 = fn (%var_3744: Tensor[(416), float64]) -> (Tensor[(4, 9, 6), float32], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64]) {
    %772 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
    %773 = %772.2;
    %774 = cast(%773, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
    %775 = cast(%var_3744, dtype="float64") /* ty=Tensor[(416), float64] */;
    %776 = atan(%774) /* ty=Tensor[(4, 9, 6), float32] */;
    %777 = cast(%776, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
    %778 = reshape(%775, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
    %779 = reshape(%777, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
    %780 = @func_2245(%778, %779) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
    %781 = @func_2784() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
    %782 = %780.2;
    %783 = %781.0;
    (%776, %782, %var_3744, %783)
  };
  %784(%var_3806) /* ty=(Tensor[(4, 9, 6), float32], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64]) */
}

def @func_8863() -> Tensor[(3, 12, 6), float32] {
  %785 = @func_7425() /* ty=(Tensor[(6, 15), float64], Tensor[(3, 12, 6), float32]) */;
  %785.1
}

def @func_9040() -> Tensor[(6, 15), float64] {
  @func_9038() /* ty=Tensor[(6, 15), float64] */
}

def @func_5217() -> (Tensor[(4, 9, 6), bool],) {
  @func_5215() /* ty=(Tensor[(4, 9, 6), bool],) */
}

def @func_1286(%var_1266: Tensor[(4, 9, 6), int8]) -> (Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) {
  %786 = cast(%var_1266, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %787 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(4, 9, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 9, 6), int8] */, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %790 = cast(%var_1266, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %791 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(4, 9, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 9, 6), int8] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %794 = cast(%var_1266, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %795 = logical_xor(%788, %789) /* ty=Tensor[(4, 9, 6), int8] */;
  %796 = less_equal(%792, %793) /* ty=Tensor[(4, 9, 6), bool] */;
  %797 = sqrt(%794) /* ty=Tensor[(4, 9, 6), float64] */;
  (%795, %796, %797)
}

def @func_1728() -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) {
  %798 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 15), float64] */, dtype="float64") /* ty=Tensor[(6, 15), float64] */;
  %799 = cast(meta[relay.Constant][36] /* ty=Tensor[(216), int8] */, dtype="int8") /* ty=Tensor[(216), int8] */;
  %800 = reshape(%799, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), int8] */;
  %801 = @func_1286(%800) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), float64]) */;
  %802 = log10(%798) /* ty=Tensor[(6, 15), float64] */;
  %803 = %801.1;
  (%802, %803, meta[relay.Constant][36] /* ty=Tensor[(216), int8] */)
}

def @func_3309(%var_3290: Tensor[(112), int16], %var_3305: Tensor[(416), float64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(16, 7, 7), bool], Tensor[(112), int16], Tensor[(784), int16], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(416), float64]) {
  %804 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %805 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %806 = cast(%var_3290, dtype="int16") /* ty=Tensor[(112), int16] */;
  %807 = cast(meta[relay.Constant][37] /* ty=Tensor[(784), int16] */, dtype="int16") /* ty=Tensor[(784), int16] */;
  %808 = reshape(%806, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), int16] */;
  %809 = reshape(%807, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), int16] */;
  %810 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %811 = cast(%var_3305, dtype="float64") /* ty=Tensor[(416), float64] */;
  %812 = %805.0;
  %813 = cast(%812, dtype="int8") /* ty=Tensor[(4, 9, 6), int8] */;
  %814 = reshape(%811, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
  %815 = reshape(%813, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
  %816 = @func_2245(%814, %815) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
  %817 = %804.0;
  %818 = @func_2921(%808, %809) /* ty=Tensor[(16, 7, 7), bool] */;
  %819 = %810.2;
  %820 = %816.1;
  (%817, %812, %818, %var_3290, meta[relay.Constant][37] /* ty=Tensor[(784), int16] */, %819, %820, %var_3305)
}

def @func_7494() -> (Tensor[(6, 15), float64],) {
  %821 = @func_3833() /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
  %822 = %821.1;
  (%822,)
}

def @func_8400(%var_8398: Tensor[(8, 6, 4), bool]) -> (Tensor[(8, 6, 4), bool],) {
  @func_8397(%var_8398) /* ty=(Tensor[(8, 6, 4), bool],) */
}

def @func_7158() -> Tensor[(6, 15), float64] {
  @func_6355() /* ty=Tensor[(6, 15), float64] */
}

def @func_9005() -> (Tensor[(4, 9, 6), bool],) {
  @func_9003() /* ty=(Tensor[(4, 9, 6), bool],) */
}

def @func_3833() -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64]) {
  %823 = @func_2707() /* ty=(Tensor[(6, 15), float64],) */;
  %824 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %825 = %823.0;
  %826 = %824.0;
  (%825, %826)
}

def @func_2987() -> (Tensor[(6, 15), float64], Tensor[(216), int8], Tensor[(4, 9, 6), bool]) {
  %827 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %828 = @func_2646() /* ty=Tensor[(6, 15), float64] */;
  %829 = %827.0;
  %830 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
  (%828, %829, %830)
}

def @func_5350(%var_5348: Tensor[(416), float64]) -> Tensor[(416), float64] {
  @func_5347(%var_5348) /* ty=Tensor[(416), float64] */
}

def @func_6226() -> Tensor[(6, 15), float64] {
  @func_6224() /* ty=Tensor[(6, 15), float64] */
}

def @func_3508(%var_3506: Tensor[(784), int16]) -> (Tensor[(16, 7, 7), bool], Tensor[(28, 4), int16], Tensor[(784), int16], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint32]) {
  @func_3505(%var_3506) /* ty=(Tensor[(16, 7, 7), bool], Tensor[(28, 4), int16], Tensor[(784), int16], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), uint32]) */
}

def @func_2647() -> Tensor[(6, 15), float64] {
  %831 = fn () -> Tensor[(6, 15), float64] {
    @func_2162() /* ty=Tensor[(6, 15), float64] */
  };
  %831() /* ty=Tensor[(6, 15), float64] */
}

def @func_7736() -> (Tensor[(6, 15), float64],) {
  %832 = @func_6224() /* ty=Tensor[(6, 15), float64] */;
  (%832,)
}

def @func_8865() -> Tensor[(3, 12, 6), float32] {
  @func_8863() /* ty=Tensor[(3, 12, 6), float32] */
}

def @func_3726(%var_3725: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) {
  %855 = fn (%var_3702: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) {
    %833 = @func_2620() /* ty=Tensor[(4, 9, 6), bool] */;
    %834 = cast(%833, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
    %835 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
    %836 = cast(%var_3702, dtype="int64") /* ty=Tensor[(294), int64] */;
    %837 = cast(meta[relay.Constant][38] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %838 = reshape(%836, newshape=[294]) /* ty=Tensor[(294), int64] */;
    %839 = reshape(%837, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %840 = @func_2338(%838, %839) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), int32], Tensor[(130, 1), float64], Tensor[(130), float64], Tensor[(294), float32]) */;
    %841 = cast(%var_3702, dtype="int64") /* ty=Tensor[(294), int64] */;
    %842 = cast(%var_3702, dtype="int64") /* ty=Tensor[(294), int64] */;
    %843 = %840.4;
    %844 = cast(%843, dtype="float32") /* ty=Tensor[(294), float32] */;
    %845 = reshape(%841, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %846 = reshape(%842, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
    %847 = reshape(%844, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
    %848 = @func_1534(%845, %846, %847) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
    %849 = @func_3102() /* ty=(Tensor[(6, 15), float64],) */;
    %850 = @func_3046() /* ty=Tensor[(6, 15), float64] */;
    %851 = acos(%834) /* ty=Tensor[(4, 9, 6), float64] */;
    %852 = %835.0;
    %853 = %848.3;
    %854 = %849.0;
    (%850, %851, %852, %843, %var_3702, meta[relay.Constant][38] /* ty=Tensor[(130), float64] */, %853, %854)
  };
  %855(%var_3725) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */
}

def @func_7325() -> Tensor[(4, 9, 6), float32] {
  @func_7323() /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_3246(%var_3139: Tensor[(216), int8], %var_3178: Tensor[(1, 200), int8], %var_3185: Tensor[(26, 5), float64]) -> (Tensor[(6, 15), float64], Tensor[(216), uint32], Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(1, 200), int8], Tensor[(1, 130), float64], Tensor[(26, 5), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %856 = @func_2707() /* ty=(Tensor[(6, 15), float64],) */;
  %857 = @func_2987() /* ty=(Tensor[(6, 15), float64], Tensor[(216), int8], Tensor[(4, 9, 6), bool]) */;
  %858 = %857.1;
  %859 = cast(%var_3139, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(1), int32] */;
  %861 = cast(%858, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %863 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
  %864 = cast(%var_3178, dtype="int8") /* ty=Tensor[(1, 200), int8] */;
  %865 = cast(%var_3178, dtype="int8") /* ty=Tensor[(1, 200), int8] */;
  %866 = reshape(%864, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %867 = reshape(%865, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), int8] */;
  %868 = @func_1786(%866, %867) /* ty=(Tensor[(10, 2, 10), bool],) */;
  %869 = cast(%var_3185, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %870 = reshape(%869, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %871 = @func_2403(%870) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(3, 12, 6), float32], Tensor[(13, 10, 9), float64], Tensor[(1, 130), float64], Tensor[(6, 15), float64]) */;
  %872 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %873 = @func_2840() /* ty=(Tensor[(4, 9, 6), bool],) */;
  %874 = %856.0;
  %875 = subtract(%861, %862) /* ty=Tensor[(216), uint32] */;
  %876 = %863.2;
  %877 = %868.0;
  %878 = %871.3;
  %879 = %872.0;
  %880 = %873.0;
  (%874, %875, %876, %877, %var_3178, %878, %var_3185, %879, %880)
}

def @func_6356() -> Tensor[(6, 15), float64] {
  %882 = fn () -> Tensor[(6, 15), float64] {
    %881 = @func_3026() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(6, 15), float64]) */;
    %881.0
  };
  %882() /* ty=Tensor[(6, 15), float64] */
}

def @func_7142(%var_7140: Tensor[(200), int8]) -> (Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) {
  @func_7139(%var_7140) /* ty=(Tensor[(6, 15), float64], Tensor[(10, 2, 10), bool], Tensor[(200), int8]) */
}

def @func_2620() -> Tensor[(4, 9, 6), bool] {
  %883 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %883.1
}

def @func_5682(%var_5680: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), int64],) {
  @func_5679(%var_5680) /* ty=(Tensor[(4, 9, 6), int64],) */
}

def @func_5291(%var_5289: Tensor[(65, 6), float32], %var_5290: Tensor[(65, 6), float32]) -> (Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(4, 9, 6), bool], Tensor[(65, 6), float64]) {
  @func_5287(%var_5289, %var_5290) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(4, 9, 6), bool], Tensor[(65, 6), float64]) */
}

def @func_6459(%var_6455: Tensor[(15, 10, 3), uint16], %var_6456: Tensor[(36, 6), int8], %var_6457: Tensor[(294), int64], %var_6458: Tensor[(2, 48), float32]) -> (Tensor[(15, 10, 3), bool], Tensor[(4, 9, 6), bool], Tensor[(16, 26), float64], Tensor[(36, 6), int8], Tensor[(15, 10, 3), uint64], Tensor[(660), float64], Tensor[(294), int64], Tensor[(10, 20), int8], Tensor[(660), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(2, 48), float32]) {
  %922 = fn (%var_6404: Tensor[(15, 10, 3), uint16], %var_6426: Tensor[(36, 6), int8], %var_6439: Tensor[(294), int64], %var_6452: Tensor[(2, 48), float32]) -> (Tensor[(15, 10, 3), bool], Tensor[(4, 9, 6), bool], Tensor[(16, 26), float64], Tensor[(36, 6), int8], Tensor[(15, 10, 3), uint64], Tensor[(660), float64], Tensor[(294), int64], Tensor[(10, 20), int8], Tensor[(660), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(2, 48), float32]) {
    %884 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 10, 3), uint16] */, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %885 = shape_of(%var_6404, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%var_6404, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %888 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 26), float64] */, dtype="float64") /* ty=Tensor[(16, 26), float64] */;
    %889 = cast(%var_6426, dtype="int8") /* ty=Tensor[(36, 6), int8] */;
    %890 = reshape(%888, newshape=[13, 16, 2]) /* ty=Tensor[(13, 16, 2), float64] */;
    %891 = reshape(%889, newshape=[36, 6]) /* ty=Tensor[(36, 6), int8] */;
    %892 = @func_2245(%890, %891) /* ty=(Tensor[(13, 16, 2), float64], Tensor[(4, 9, 6), bool], Tensor[(36, 6), int8]) */;
    %893 = cast(%var_6404, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
    %894 = exp(%893) /* ty=Tensor[(15, 10, 3), float32] */;
    %895 = cast(%894, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %896 = atan(%895) /* ty=Tensor[(15, 10, 3), float64] */;
    %897 = cast(%var_6404, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
    %898 = rsqrt(%897) /* ty=Tensor[(15, 10, 3), float32] */;
    %899 = cast(%898, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
    %900 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
    %901 = cast(%896, dtype="uint64") /* ty=Tensor[(15, 10, 3), uint64] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %903 = cast(%var_6439, dtype="int64") /* ty=Tensor[(294), int64] */;
    %904 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 20), int8] */, dtype="int8") /* ty=Tensor[(10, 20), int8] */;
    %905 = cast(meta[relay.Constant][42] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %906 = reshape(%903, newshape=[294]) /* ty=Tensor[(294), int64] */;
    %907 = reshape(%904, newshape=[100, 2]) /* ty=Tensor[(100, 2), int8] */;
    %908 = reshape(%905, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %909 = @func_6135(%906, %907, %908) /* ty=(Tensor[(4, 9, 6), int8], Tensor[(6, 15), float64], Tensor[(7, 3, 14), float32], Tensor[(294), int64], Tensor[(10, 2, 10), bool], Tensor[(10, 3, 7), float64], Tensor[(35, 6), float64], Tensor[(100, 2), float64], Tensor[(15, 11, 4), float64], Tensor[(660), float64], Tensor[(4, 9, 6), int64], Tensor[(8, 4, 1), float64], Tensor[(8, 4), float64], Tensor[(6, 15), float64]) */;
    %910 = @func_3102() /* ty=(Tensor[(6, 15), float64],) */;
    %911 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 26), float64] */, dtype="float64") /* ty=Tensor[(16, 26), float64] */;
    %912 = cast(%var_6452, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
    %913 = reshape(%911, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %914 = reshape(%912, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %915 = @func_3592(%913, %914) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool], Tensor[(416), float64], Tensor[(6, 16, 15), bool], Tensor[(96), float32], Tensor[(1440), float32], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(6, 15), float64]) */;
    %916 = not_equal(%886, %887) /* ty=Tensor[(15, 10, 3), bool] */;
    %917 = %892.1;
    %918 = maximum(%901, %902) /* ty=Tensor[(15, 10, 3), uint64] */;
    %919 = %909.9;
    %920 = %910.0;
    %921 = %915.1;
    (%916, %917, meta[relay.Constant][40] /* ty=Tensor[(16, 26), float64] */, %var_6426, %918, %919, %var_6439, meta[relay.Constant][41] /* ty=Tensor[(10, 20), int8] */, meta[relay.Constant][42] /* ty=Tensor[(660), float64] */, %920, %921, %var_6452)
  };
  %922(%var_6455, %var_6456, %var_6457, %var_6458) /* ty=(Tensor[(15, 10, 3), bool], Tensor[(4, 9, 6), bool], Tensor[(16, 26), float64], Tensor[(36, 6), int8], Tensor[(15, 10, 3), uint64], Tensor[(660), float64], Tensor[(294), int64], Tensor[(10, 20), int8], Tensor[(660), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(2, 48), float32]) */
}

def @func_2071(%var_2063: Tensor[(294), int64]) -> (Tensor[(6, 15), float64], Tensor[(7, 3, 14), bool], Tensor[(294), int64]) {
  %923 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
  %924 = cast(%var_2063, dtype="int64") /* ty=Tensor[(294), int64] */;
  %925 = cast(%var_2063, dtype="int64") /* ty=Tensor[(294), int64] */;
  %926 = cast(%var_2063, dtype="float32") /* ty=Tensor[(294), float32] */;
  %927 = reshape(%924, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %928 = reshape(%925, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), int64] */;
  %929 = reshape(%926, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %930 = @func_1534(%927, %928, %929) /* ty=(Tensor[(7, 3, 14), int32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), float32], Tensor[(7, 3, 14), bool]) */;
  %931 = %923.0;
  %932 = %930.3;
  (%931, %932, %var_2063)
}

def @func_5076(%var_5074: Tensor[(4, 9, 6), bool]) -> (Tensor[(4, 9, 6), int32],) {
  @func_5073(%var_5074) /* ty=(Tensor[(4, 9, 6), int32],) */
}

def @func_4140() -> Tensor[(4, 9, 6), bool] {
  %934 = fn () -> Tensor[(4, 9, 6), bool] {
    %933 = @func_2027() /* ty=(Tensor[(4, 9, 6), bool],) */;
    %933.0
  };
  %934() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_6769() -> (Tensor[(216), int8], Tensor[(216), int8], Tensor[(130, 1), float64], Tensor[(13, 10), float64]) {
  %935 = @func_5418() /* ty=(Tensor[(216), int8],) */;
  %936 = @func_5418() /* ty=(Tensor[(216), int8],) */;
  %937 = cast(meta[relay.Constant][43] /* ty=Tensor[(13, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %938 = reshape(%937, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %939 = @func_1956(%938) /* ty=(Tensor[(4, 9, 6), bool], Tensor[(13, 10, 9), float64], Tensor[(130, 1), float64]) */;
  %940 = %935.0;
  %941 = %936.0;
  %942 = %939.2;
  (%940, %941, %942, meta[relay.Constant][43] /* ty=Tensor[(13, 10), float64] */)
}

def @func_2886() -> (Tensor[(6, 15), float64],) {
  @func_2884() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_1846() -> Tensor[(4, 9, 6), bool] {
  %944 = fn () -> Tensor[(4, 9, 6), bool] {
    %943 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
    %943.1
  };
  %944() /* ty=Tensor[(4, 9, 6), bool] */
}

def @func_4292() -> Tensor[(6, 15), float64] {
  @func_4290() /* ty=Tensor[(6, 15), float64] */
}

def @func_4241() -> (Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), bool]) {
  %945 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %946 = @func_2884() /* ty=(Tensor[(6, 15), float64],) */;
  %947 = cast(meta[relay.Constant][44] /* ty=Tensor[(216), bool] */, dtype="bool") /* ty=Tensor[(216), bool] */;
  %948 = reshape(%947, newshape=[4, 9, 6]) /* ty=Tensor[(4, 9, 6), bool] */;
  %949 = @func_3437(%948) /* ty=(Tensor[(6, 15), float64], Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */;
  %950 = %945.0;
  %951 = %946.0;
  %952 = %949.3;
  (%950, %951, %952, meta[relay.Constant][44] /* ty=Tensor[(216), bool] */)
}

def @func_4697() -> (Tensor[(216), int8], Tensor[(416), float64], Tensor[(1, 416), float64]) {
  %953 = @func_2570() /* ty=(Tensor[(216), int8],) */;
  %954 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 416), float64] */, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
  %955 = reshape(%954, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %956 = @func_3805(%955) /* ty=(Tensor[(4, 9, 6), float32], Tensor[(36, 6), int8], Tensor[(416), float64], Tensor[(6, 15), float64]) */;
  %957 = %953.0;
  %958 = %956.2;
  (%957, %958, meta[relay.Constant][45] /* ty=Tensor[(1, 416), float64] */)
}

def @func_8648() -> (Tensor[(6, 15), float64],) {
  %959 = @func_7494() /* ty=(Tensor[(6, 15), float64],) */;
  %960 = %959.0;
  (%960,)
}

def @func_4777(%var_4709: Tensor[(650), float32], %var_4737: Tensor[(5, 10, 13), float32], %var_4746: Tensor[(294), int64]) -> (Tensor[(4, 9, 6), bool], Tensor[(5, 10, 13), float32], Tensor[(4, 9, 6), bool], Tensor[(294), int64], Tensor[(6, 15), float64], Tensor[(5, 10, 13), float32]) {
  %961 = cast(%var_4709, dtype="float32") /* ty=Tensor[(650), float32] */;
  %962 = cast(%var_4709, dtype="float32") /* ty=Tensor[(650), float32] */;
  %963 = reshape(%961, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %964 = reshape(%962, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %965 = @func_2194(%963, %964) /* ty=Tensor[(5, 10, 13), float32] */;
  %966 = cast(%var_4709, dtype="float32") /* ty=Tensor[(650), float32] */;
  %967 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(%965, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %970 = cast(%var_4746, dtype="int64") /* ty=Tensor[(294), int64] */;
  %971 = reshape(%970, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %972 = @func_3724(%971) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
  %973 = @func_2536() /* ty=(Tensor[(6, 15), float64],) */;
  %974 = cast(%var_4737, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %975 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%965, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %978 = maximum(%976, %977) /* ty=Tensor[(5, 10, 13), float64] */;
  %979 = cast(%978, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %980 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
  %981 = floor_mod(%968, %969) /* ty=Tensor[(5, 10, 13), float32] */;
  %982 = %972.2;
  %983 = %973.0;
  %984 = cos(%979) /* ty=Tensor[(5, 10, 13), float32] */;
  (%980, %981, %982, %var_4746, %983, %984)
}

def @func_8427() -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
  %987 = fn () -> (Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) {
    %985 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
    %986 = @func_1903() /* ty=Tensor[(4, 9, 6), bool] */;
    (%985, %986)
  };
  %987() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(4, 9, 6), bool]) */
}

def @func_4514() -> (Tensor[(6, 15), float64],) {
  @func_4512() /* ty=(Tensor[(6, 15), float64],) */
}

def @func_4642() -> (Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) {
  %997 = fn () -> (Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) {
    %988 = @func_1728() /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), bool], Tensor[(216), int8]) */;
    %989 = cast(meta[relay.Constant][46] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
    %990 = reshape(%989, newshape=[294]) /* ty=Tensor[(294), int64] */;
    %991 = @func_3724(%990) /* ty=(Tensor[(6, 15), float64], Tensor[(4, 9, 6), float64], Tensor[(4, 9, 6), bool], Tensor[(294), float32], Tensor[(294), int64], Tensor[(130), float64], Tensor[(7, 3, 14), bool], Tensor[(6, 15), float64]) */;
    %992 = cast(meta[relay.Constant][46] /* ty=Tensor[(294), int64] */, dtype="float32") /* ty=Tensor[(294), float32] */;
    %993 = %988.1;
    %994 = %991.6;
    %995 = asinh(%992) /* ty=Tensor[(294), float32] */;
    %996 = @func_4139() /* ty=Tensor[(4, 9, 6), bool] */;
    (%993, %994, %995, %996)
  };
  %997() /* ty=(Tensor[(4, 9, 6), bool], Tensor[(7, 3, 14), bool], Tensor[(294), float32], Tensor[(4, 9, 6), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen129/build/output.py:2885: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen129/build/output.py:2890: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen129/build/output.py:2919: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen129/build/output.py:2924: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen129/build/output.py:2929: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen129/build/output.py:2934: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
type GradCell[T] {
  Raw(T),
  One(fn () -> T),
  Zero(fn () -> T),
}

def @main() -> ((Tensor[(11, 11, 8), float64],), ()) {
  %0 = (meta[relay.Constant][0] /* ty=Tensor[(11, 11, 8), float64] */,);
  %1 = ();
  (%0, %1)
}

def @AddGradCell[T](%add: fn (T, T) -> T, %l: GradCell[T], %r: GradCell[T]) -> GradCell[T] {
  %2 = (%l, %r);
  match (%2) {
    (Zero(_), _) => {
      %r
    },
    (_, Zero(_)) => {
      %l
    },
    _ => {
      %3 = match (%l) {
        Raw(%x: T) => {
          %x
        },
        One(%x1: fn () -> T) => {
          %x1() /* ty=T */
        },
        Zero(%x2: fn () -> T) => {
          %x2() /* ty=T */
        },
      };
      %4 = match (%r) {
        Raw(%x3: T) => {
          %x3
        },
        One(%x4: fn () -> T) => {
          %x4() /* ty=T */
        },
        Zero(%x5: fn () -> T) => {
          %x5() /* ty=T */
        },
      };
      %5 = %add(%3, %4) /* ty=T */;
      Raw(%5) /* ty=GradCell[T] */
    },
  }
}

def @FromGradCell[T](%g: GradCell[T]) -> T {
  match (%g) {
    Raw(%x6: T) => {
      %x6
    },
    One(%x7: fn () -> T) => {
      %x7() /* ty=T */
    },
    Zero(%x8: fn () -> T) => {
      %x8() /* ty=T */
    },
  }
}

def @MultiplyGradCell[T](%multiply: fn (T, T) -> T, %l1: GradCell[T], %r1: GradCell[T]) -> GradCell[T] {
  %6 = (%l1, %r1);
  match (%6) {
    (Zero(_), _) => {
      %l1
    },
    (_, Zero(_)) => {
      %r1
    },
    (One(_), _) => {
      %r1
    },
    (_, One(_)) => {
      %l1
    },
    _ => {
      %7 = match (%l1) {
        Raw(%x9: T) => {
          %x9
        },
        One(%x10: fn () -> T) => {
          %x10() /* ty=T */
        },
        Zero(%x11: fn () -> T) => {
          %x11() /* ty=T */
        },
      };
      %8 = match (%r1) {
        Raw(%x12: T) => {
          %x12
        },
        One(%x13: fn () -> T) => {
          %x13() /* ty=T */
        },
        Zero(%x14: fn () -> T) => {
          %x14() /* ty=T */
        },
      };
      %9 = %multiply(%7, %8) /* ty=T */;
      Raw(%9) /* ty=GradCell[T] */
    },
  }
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

==========mod==========
#[version = "0.0.5"]
def @func_7101(%var_7069: Tensor[(1386), bool], %var_7072: Tensor[(4, 15, 3), float32]) -> (Tensor[(4, 15, 3), bool], Tensor[(1386), int16], Tensor[(14, 99), bool]) {
  %0 = @func_2585() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1 = %0.0;
  %2 = cast(%var_7072, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %6 = cast(%var_7069, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %7 = reshape(%6, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %8 = @func_4016(%7) /* ty=(Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
  %9 = %8.4;
  %10 = cast(%9, dtype="int16") /* ty=Tensor[(14, 11, 9), int16] */;
  %11 = shape_of(%var_7069, dtype="int32") /* ty=Tensor[(1), int32] */;
  %12 = cast(%var_7069, dtype="int16") /* ty=Tensor[(1386), int16] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?), int16] */;
  %14 = greater(%4, %5) /* ty=Tensor[(4, 15, 3), bool] */;
  %15 = bitwise_xor(%12, %13) /* ty=Tensor[(1386), int16] */;
  %16 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  (%14, %15, %16)
}

def @func_2015() -> Tensor[(14, 11, 9), float32] {
  %17 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %17.0
}

def @func_5059() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %18 = @func_4858() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %19 = %18.1;
  %20 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
  (%19, %20)
}

def @func_7669() -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %21 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %23 = reshape(%22, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %24 = @func_6842(%23) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %25 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %26 = %21.0;
  %27 = %24.2;
  %28 = %25.1;
  %29 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
  (%26, %27, meta[relay.Constant][0] /* ty=Tensor[(260), float64] */, %28, %29)
}

def @func_12327() -> (Tensor[(14, 11, 9), float32],) {
  %30 = @func_8595() /* ty=Tensor[(14, 11, 9), float32] */;
  (%30,)
}

def @func_6675() -> (Tensor[(14, 11, 9), float32],) {
  %31 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %32 = %31.0;
  (%32,)
}

def @func_13406() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %33 = @func_13269() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float32]) */;
  %34 = @func_10593() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %35 = %33.2;
  %36 = %34.0;
  (%35, %36)
}

def @func_6539(%var_6522: Tensor[(980), float64]) -> (Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) {
  %37 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %38 = cast(%var_6522, dtype="float64") /* ty=Tensor[(980), float64] */;
  %39 = cast(%var_6522, dtype="float64") /* ty=Tensor[(980), float64] */;
  %40 = reshape(%38, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
  %41 = reshape(%39, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
  %42 = @func_4689(%40, %41) /* ty=(Tensor[(7, 10, 14), float64], Tensor[(14, 99), int16], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %43 = %37.2;
  %44 = %42.0;
  (%43, %44, %var_6522)
}

def @func_16192() -> (Tensor[(4, 15, 3), float64],) {
  %45 = @func_9748() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_4619() -> Tensor[(14, 11, 9), float32] {
  @func_1489() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_3310() -> (Tensor[(14, 11, 9), float32],) {
  %47 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  (%47,)
}

def @func_10927() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %48 = @func_4392() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %49 = %48.0;
  %50 = cast(%49, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %51 = reshape(%50, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %52 = @func_876(%51) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %53 = %52.3;
  (%49, %53)
}

def @func_316(%var_269: Tensor[(14, 11, 9), bool]) -> (Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %54 = cast(%var_269, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %55 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 11, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 11, 9), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %58 = logical_and(%56, %57) /* ty=Tensor[(14, 11, 9), bool] */;
  %59 = cast(%58, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %60 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 11, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 11, 9), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = cast(%var_269, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %64 = less_equal(%61, %62) /* ty=Tensor[(14, 11, 9), bool] */;
  %65 = cosh(%63) /* ty=Tensor[(14, 11, 9), float32] */;
  (%64, %65)
}

def @func_6895() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
  %66 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
  %67 = cast(%66, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %68 = reshape(%67, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
  %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %70 = reshape(%69, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
  %71 = @func_2764(%68) /* ty=Tensor[(14, 99), uint64] */;
  %72 = @func_4742(%70) /* ty=Tensor[(6, 2, 11), uint64] */;
  (%66, %71, %72, meta[relay.Constant][2] /* ty=Tensor[(132), uint64] */)
}

def @func_15662() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) {
  %73 = @func_11378() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %74 = @func_15006() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %75 = @func_15491() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %76 = %73.3;
  %77 = %74.0;
  %78 = %75.0;
  (%76, %77, %78)
}

def @func_8034() -> (Tensor[(14, 11, 9), float32],) {
  %79 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %80 = %79.0;
  (%80,)
}

def @func_11836() -> Tensor[(2, 13, 10), float64] {
  %81 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
  %81.0
}

def @func_17271() -> (Tensor[(1, 4, 10), uint8], Tensor[(2, 13, 10), float64]) {
  %82 = cast(meta[relay.Constant][3] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %83 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 4, 10), uint8] */, dtype="uint8") /* ty=Tensor[(1, 4, 10), uint8] */;
  %84 = @func_10301() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %85 = right_shift(%82, %83) /* ty=Tensor[(1, 4, 10), uint8] */;
  %86 = %84.0;
  (%85, %86)
}

def @func_11319() -> (Tensor[(14, 99), bool],) {
  %87 = @func_7171() /* ty=(Tensor[(14, 99), float64],) */;
  %88 = %87.0;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %90 = sin(%89) /* ty=Tensor[(14, 99), float64] */;
  %91 = cast(%90, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %92 = shape_of(%88, dtype="int32") /* ty=Tensor[(2), int32] */;
  %93 = cast(%88, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %95 = less(%93, %94) /* ty=Tensor[(14, 99), bool] */;
  (%95,)
}

def @func_19152() -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %96 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %97 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
  %98 = %96.0;
  %99 = %97.2;
  %100 = @func_7149() /* ty=Tensor[(14, 11, 9), float32] */;
  (%98, %99, %100)
}

def @func_5246() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 392), float32]) {
  %101 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 392), float32] */, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %103 = reshape(%102, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %104 = @func_3352(%103) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
  %105 = %101.0;
  %106 = %104.1;
  (%105, %106, meta[relay.Constant][5] /* ty=Tensor[(2, 392), float32] */)
}

def @func_8940() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %107 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %108 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %109 = %107.0;
  %110 = %108.0;
  (%109, %110)
}

def @func_14399() -> (Tensor[(4, 15, 3), float32],) {
  %111 = @func_10863() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %112 = %111.0;
  (%112,)
}

def @func_19467(%var_19459: Tensor[(16, 3, 3), float64], %var_19460: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64],) {
  %113 = cast(%var_19460, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %114 = shape_of(%var_19459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_19459, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %117 = multiply(%115, %116) /* ty=Tensor[(16, 3, 3), float64] */;
  (%117,)
}

def @func_16669(%var_16659: Tensor[(2, 180), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 180), int16]) {
  %118 = @func_11991() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %119 = cast(%var_16659, dtype="int16") /* ty=Tensor[(2, 180), int16] */;
  %120 = reshape(%119, newshape=[180, 2]) /* ty=Tensor[(180, 2), int16] */;
  %121 = @func_2647(%120) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) */;
  %122 = %118.0;
  %123 = %121.1;
  (%122, %123, %var_16659)
}

def @func_13746() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
  %124 = @func_9160() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %125 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
  %126 = %124.0;
  (%125, %126)
}

def @func_8595() -> Tensor[(14, 11, 9), float32] {
  %127 = @func_5522() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %127.0
}

def @func_13205(%var_13198: Tensor[(14, 99), float32]) -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
  %128 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %129 = %128.1;
  %130 = cast(%var_13198, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(2), int32] */;
  %132 = cast(%129, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %134 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
  %135 = greater_equal(%132, %133) /* ty=Tensor[(14, 99), bool] */;
  %136 = %134.1;
  (%135, %136)
}

def @func_17143() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(7, 198), int8], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) {
  %137 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %138 = @func_11562() /* ty=(Tensor[(14, 99), bool],) */;
  %139 = @func_1678() /* ty=(Tensor[(7, 198), bool], Tensor[(7, 198), int8]) */;
  %140 = @func_10378() /* ty=(Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) */;
  %141 = @func_10628() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %142 = %137.1;
  %143 = %138.0;
  %144 = %139.1;
  %145 = %140.0;
  %146 = %141.0;
  (%142, %143, %144, %145, %146)
}

def @func_4946(%var_4927: Tensor[(14, 99), int16]) -> (Tensor[(14, 99), float64], Tensor[(7, 198), bool]) {
  %147 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
  %148 = %147.1;
  %149 = cast(%var_4927, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(2), int32] */;
  %151 = cast(%148, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %153 = logical_and(%151, %152) /* ty=Tensor[(14, 99), bool] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %155 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %156 = asinh(%154) /* ty=Tensor[(14, 99), float64] */;
  %157 = %155.2;
  (%156, %157)
}

def @func_6274() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %158 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %159 = @func_5701() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %160 = %158.0;
  %161 = %159.1;
  (%160, %161)
}

def @func_5522() -> (Tensor[(14, 11, 9), float32],) {
  %162 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%162,)
}

def @func_7500() -> Tensor[(14, 11, 9), float32] {
  %163 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %163.3
}

def @func_10593() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
  %164 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %165 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %166 = %164.0;
  %167 = %165.0;
  (%166, %167)
}

def @func_13567() -> Tensor[(14, 11, 9), float32] {
  %168 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %168.1
}

def @func_4320() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %169 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %170 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %171 = %169.0;
  %172 = %170.0;
  (%171, %172)
}

def @func_19930() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), bool], Tensor[(260), float64]) {
  %173 = @func_11562() /* ty=(Tensor[(14, 99), bool],) */;
  %174 = @func_12302() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %175 = cast(meta[relay.Constant][6] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %176 = reshape(%175, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %177 = %173.0;
  %178 = %174.1;
  %179 = @func_14446(%176) /* ty=Tensor[(2, 13, 10), bool] */;
  (%177, %178, %179, meta[relay.Constant][6] /* ty=Tensor[(260), float64] */)
}

def @func_8148(%var_8139: Tensor[(260), float64]) -> (Tensor[(14, 99), float64], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) {
  %180 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %182 = cast(%var_8139, dtype="float64") /* ty=Tensor[(260), float64] */;
  %183 = reshape(%182, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %184 = @func_6842(%183) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %185 = erf(%181) /* ty=Tensor[(14, 99), float64] */;
  %186 = %184.2;
  (%185, %186, %var_8139)
}

def @func_11791() -> (Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), bool]) {
  %187 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %188 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %189 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %190 = %187.0;
  %191 = %188.1;
  %192 = %189.2;
  (%190, %191, %192)
}

def @func_13936() -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float32], Tensor[(14, 11, 9), float32]) {
  %193 = @func_13406() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %194 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %195 = %194.2;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %197 = %193.1;
  %198 = sin(%196) /* ty=Tensor[(2, 13, 10), float32] */;
  %199 = @func_7454() /* ty=Tensor[(14, 11, 9), float32] */;
  (%197, %198, %199)
}

def @func_2519() -> Tensor[(14, 99), float32] {
  %200 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %200.1
}

def @func_1693() -> Tensor[(14, 11, 9), float32] {
  @func_1489() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_7752() -> Tensor[(14, 11, 9), float32] {
  %201 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %201.0
}

def @func_3352(%var_3340: Tensor[(4, 14, 14), float32]) -> (Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) {
  %202 = cast(%var_3340, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
  %203 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %204 = acosh(%202) /* ty=Tensor[(4, 14, 14), float32] */;
  %205 = %203.0;
  (%204, %205)
}

def @func_6436() -> Tensor[(14, 99), bool] {
  %206 = @func_5586() /* ty=(Tensor[(14, 99), float64],) */;
  %207 = %206.0;
  %208 = @func_4542() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %209 = %208.2;
  %210 = cast(%209, dtype="int64") /* ty=Tensor[(14, 11, 9), int64] */;
  %211 = shape_of(%207, dtype="int32") /* ty=Tensor[(2), int32] */;
  %212 = cast(%207, dtype="int64") /* ty=Tensor[(14, 99), int64] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %214 = bitwise_or(%212, %213) /* ty=Tensor[(14, 99), int64] */;
  %215 = cast(%214, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %216 = shape_of(%207, dtype="int32") /* ty=Tensor[(2), int32] */;
  %217 = cast(%207, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  equal(%217, %218) /* ty=Tensor[(14, 99), bool] */
}

def @func_14214() -> (Tensor[(132), uint64], Tensor[(7, 198), float64]) {
  %219 = @func_10752() /* ty=(Tensor[(132), uint64], Tensor[(14, 99), float32], Tensor[(6, 2, 11), uint64]) */;
  %220 = @func_12569() /* ty=(Tensor[(14, 99), float64], Tensor[(7, 198), float64]) */;
  %221 = %219.0;
  %222 = %220.1;
  (%221, %222)
}

def @func_12775() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) {
  %223 = @func_3861() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) */;
  %224 = %223.0;
  %225 = @func_11116() /* ty=Tensor[(14, 99), float64] */;
  (%224, %225)
}

def @func_14446(%var_14410: Tensor[(2, 13, 10), float64]) -> Tensor[(2, 13, 10), bool] {
  %226 = @func_10635() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %227 = %226.0;
  %228 = cast(%var_14410, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
  %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%227, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%230, %231) /* ty=Tensor[(2, 13, 10), bool] */
}

def @func_6795() -> (Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) {
  %232 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %233 = %232.0;
  %234 = cast(%233, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %235 = @func_5167() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %236 = cosh(%234) /* ty=Tensor[(14, 99), float64] */;
  %237 = %235.1;
  (%236, %237)
}

def @func_1508() -> (Tensor[(14, 11, 9), float32],) {
  %238 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %239 = %238.0;
  (%239,)
}

def @func_10321() -> Tensor[(14, 11, 9), float32] {
  %240 = @func_9929() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %240.0
}

def @func_17389() -> (Tensor[(14, 99), float32],) {
  %241 = @func_10593() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %242 = %241.1;
  (%242,)
}

def @func_3793(%var_3776: Tensor[(3, 2, 6), float64], %var_3777: Tensor[(3, 2, 6), float64]) -> (Tensor[(3, 2, 6), float64],) {
  %243 = cast(%var_3777, dtype="float64") /* ty=Tensor[(3, 2, 6), float64] */;
  %244 = shape_of(%var_3776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%var_3776, dtype="float64") /* ty=Tensor[(3, 2, 6), float64] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %247 = power(%245, %246) /* ty=Tensor[(3, 2, 6), float64] */;
  (%247,)
}

def @func_11991() -> (Tensor[(14, 11, 9), float32],) {
  %248 = @func_6372() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %249 = %248.0;
  (%249,)
}

def @func_11228() -> (Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %250 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
  %251 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %252 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %253 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %254 = %250.1;
  %255 = %251.0;
  %256 = %252.1;
  %257 = %253.1;
  (%254, %255, %256, %257)
}

def @func_1678() -> (Tensor[(7, 198), bool], Tensor[(7, 198), int8]) {
  %258 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %259 = %258.2;
  %260 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 198), bool] */, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(2), int32] */;
  %262 = cast(%259, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %264 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 198), bool] */, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %265 = shape_of(%259, dtype="int32") /* ty=Tensor[(2), int32] */;
  %266 = cast(%259, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %268 = minimum(%266, %267) /* ty=Tensor[(7, 198), int8] */;
  %269 = cast(%259, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(2), int32] */;
  %271 = cast(%268, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %273 = greater_equal(%262, %263) /* ty=Tensor[(7, 198), bool] */;
  %274 = left_shift(%271, %272) /* ty=Tensor[(7, 198), int8] */;
  (%273, %274)
}

def @func_9160() -> (Tensor[(14, 11, 9), float32],) {
  %275 = @func_7854() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %276 = %275.3;
  (%276,)
}

def @func_17733() -> Tensor[(14, 11, 9), float32] {
  %277 = @func_15491() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %277.0
}

def @func_14288() -> (Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
  %278 = @func_12196() /* ty=(Tensor[(7, 198), bool],) */;
  %279 = %278.0;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
  %281 = reshape(%280, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
  %282 = @func_13205(%281) /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */;
  %283 = %282.1;
  (%279, %283)
}

def @func_20005() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %284 = @func_16814() /* ty=Tensor[(14, 11, 9), float32] */;
  %285 = @func_13123() /* ty=Tensor[(4, 15, 3), float64] */;
  (%284, %285)
}

def @func_11013() -> Tensor[(14, 11, 9), float32] {
  %286 = @func_9423() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %286.0
}

def @func_11420() -> Tensor[(14, 11, 9), float32] {
  %287 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
  %287.1
}

def @func_10449() -> (Tensor[(14, 11, 9), float32],) {
  %288 = @func_4858() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %289 = %288.0;
  (%289,)
}

def @func_17007() -> (Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), bool]) {
  %290 = @func_5701() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %291 = @func_14723() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %292 = @func_11378() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %293 = %290.0;
  %294 = %291.0;
  %295 = %292.0;
  (%293, %294, %295)
}

def @func_15949() -> (Tensor[(14, 99), bool], Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) {
  %296 = @func_11520() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) */;
  %297 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %298 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %299 = %296.5;
  %300 = %297.2;
  %301 = %298.0;
  (%299, %300, %301)
}

def @func_18956() -> Tensor[(14, 99), float64] {
  @func_12338() /* ty=Tensor[(14, 99), float64] */
}

def @func_14606(%var_14598: Tensor[(7, 3, 16), uint8], %var_14599: Tensor[(7, 3, 16), uint8]) -> (Tensor[(7, 3, 16), uint8], Tensor[(14, 11, 9), float32]) {
  %302 = cast(%var_14599, dtype="uint8") /* ty=Tensor[(7, 3, 16), uint8] */;
  %303 = shape_of(%var_14598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_14598, dtype="uint8") /* ty=Tensor[(7, 3, 16), uint8] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %306 = @func_10187() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %307 = multiply(%304, %305) /* ty=Tensor[(7, 3, 16), uint8] */;
  %308 = %306.0;
  (%307, %308)
}

def @func_14886() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %309 = @func_6636() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) */;
  %310 = @func_11157() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %311 = @func_12601() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %312 = @func_9160() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %313 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %314 = @func_5059() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %315 = %309.1;
  %316 = %310.1;
  %317 = @func_8510() /* ty=Tensor[(14, 11, 9), float32] */;
  %318 = %311.1;
  %319 = %312.0;
  %320 = %313.2;
  %321 = @func_10321() /* ty=Tensor[(14, 11, 9), float32] */;
  %322 = %314.1;
  (%315, %316, %317, %318, %319, %320, %321, %322)
}

def @func_18464() -> (Tensor[(14, 11, 9), float32], Tensor[(260, ?), float32], Tensor[(14, 11, 9), float32]) {
  %323 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %324 = cast(meta[relay.Constant][8] /* ty=Tensor[(260, 1), float64] */, dtype="float64") /* ty=Tensor[(260, 1), float64] */;
  %325 = reshape(%324, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %326 = @func_8404(%325) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) */;
  %327 = %326.1;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %329 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(260, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %330 = cast(meta[relay.Constant][8] /* ty=Tensor[(260, 1), float64] */, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %332 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %333 = %323.0;
  %334 = power(%330, %331) /* ty=Tensor[(260, ?), float32] */;
  %335 = %332.4;
  (%333, %334, %335)
}

def @func_8357() -> (Tensor[(14, 11, 9), float32],) {
  %336 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %337 = %336.0;
  (%337,)
}

def @func_19768() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %338 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %339 = %338.0;
  %340 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
  (%339, %340)
}

def @func_16095() -> (Tensor[(4, 15, 3), float32],) {
  %341 = @func_5019() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %342 = %341.0;
  (%342,)
}

def @func_5657() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) {
  %343 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %344 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %345 = cast(%344, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %346 = reshape(%345, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %347 = @func_3672(%346) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) */;
  %348 = %343.0;
  %349 = @func_5222() /* ty=Tensor[(14, 11, 9), float32] */;
  %350 = %347.2;
  (%348, %344, %349, %350)
}

def @func_16519() -> (Tensor[(14, 11, 9), float32],) {
  %351 = @func_11064() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %352 = %351.0;
  (%352,)
}

def @func_1073(%var_1057: Tensor[(10, 6, 6), int16], %var_1058: Tensor[(10, 6, 6), int16], %var_1066: Tensor[(1386), bool]) -> (Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) {
  %353 = cast(%var_1058, dtype="int16") /* ty=Tensor[(10, 6, 6), int16] */;
  %354 = shape_of(%var_1057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%var_1057, dtype="int16") /* ty=Tensor[(10, 6, 6), int16] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %357 = cast(%var_1066, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %358 = reshape(%357, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %359 = @func_876(%358) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %360 = %359.3;
  %361 = cast(%360, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %362 = reshape(%361, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %363 = @func_876(%362) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %364 = bitwise_or(%355, %356) /* ty=Tensor[(10, 6, 6), int16] */;
  %365 = %363.3;
  (%364, %360, %var_1066, %365)
}

def @func_4016(%var_3971: Tensor[(7, 198), bool]) -> (Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
  %366 = @func_1678() /* ty=(Tensor[(7, 198), bool], Tensor[(7, 198), int8]) */;
  %367 = %366.0;
  %368 = cast(%var_3971, dtype="uint8") /* ty=Tensor[(7, 198), uint8] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(2), int32] */;
  %370 = cast(%367, dtype="uint8") /* ty=Tensor[(7, 198), uint8] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %372 = cast(%var_3971, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
  %373 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %374 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
  %375 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %376 = logical_xor(%370, %371) /* ty=Tensor[(7, 198), uint8] */;
  %377 = log2(%372) /* ty=Tensor[(7, 198), float32] */;
  %378 = %373.0;
  %379 = %374.3;
  %380 = %375.2;
  (%376, %377, %378, %379, %380)
}

def @func_7537() -> Tensor[(14, 11, 9), float32] {
  @func_7149() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_3256() -> (Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) {
  %381 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %382 = %381.0;
  %383 = cast(%382, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %384 = cast(%382, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %385 = sqrt(%384) /* ty=Tensor[(2, 13, 10), float32] */;
  %386 = cast(%382, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%385, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %390 = multiply(%388, %389) /* ty=Tensor[(2, 13, 10), float64] */;
  %391 = cast(%390, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %392 = cast(%390, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %393 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %394 = log2(%383) /* ty=Tensor[(2, 13, 10), float64] */;
  %395 = cos(%391) /* ty=Tensor[(2, 13, 10), float32] */;
  %396 = erf(%392) /* ty=Tensor[(2, 13, 10), float64] */;
  %397 = %393.0;
  (%394, %395, %396, %397)
}

def @func_5463(%var_5453: Tensor[(6, 2, 8), uint32]) -> (Tensor[(6, 2, 8), bool], Tensor[(14, 11, 9), float32]) {
  %398 = cast(%var_5453, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %399 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(6, 2, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 2, 8), uint32] */, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %402 = @func_4858() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %403 = equal(%400, %401) /* ty=Tensor[(6, 2, 8), bool] */;
  %404 = %402.1;
  (%403, %404)
}

def @func_15719() -> (Tensor[(14, 11, 9), float32],) {
  %405 = @func_12601() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %406 = %405.1;
  (%406,)
}

def @func_5167() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %407 = cast(meta[relay.Constant][10] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %408 = reshape(%407, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %409 = @func_3352(%408) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
  %410 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  %411 = cast(%410, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %412 = reshape(%411, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %413 = @func_3672(%412) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) */;
  %414 = %413.1;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %416 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  %417 = cast(%416, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %418 = reshape(%417, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %419 = @func_316(%418) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %420 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %421 = %409.0;
  %422 = tan(%415) /* ty=Tensor[(7, 198), float64] */;
  %423 = %419.0;
  %424 = %420.0;
  (%410, %416, %421, meta[relay.Constant][10] /* ty=Tensor[(784), float32] */, %422, %423, %424)
}

def @func_15203() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %425 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %426 = @func_8174() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) */;
  %427 = %425.0;
  %428 = %426.0;
  (%427, %428)
}

def @func_17516() -> (Tensor[(2, 13, 10), float64],) {
  %429 = @func_11228() /* ty=(Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %430 = %429.1;
  (%430,)
}

def @func_17819() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %431 = @func_9332() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */;
  %432 = @func_13294() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %433 = %431.0;
  %434 = %432.0;
  (%433, %434)
}

def @func_9735() -> (Tensor[(14, 11, 9), float32],) {
  %435 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
  %436 = %435.2;
  (%436,)
}

def @func_10992() -> (Tensor[(14, 11, 9), float32],) {
  %437 = @func_9019() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %438 = %437.0;
  (%438,)
}

def @func_12338() -> Tensor[(14, 99), float64] {
  %439 = @func_3765() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) */;
  %439.1
}

def @func_18785(%var_18754: Tensor[(9, 15, 8), int32], %var_18755: Tensor[(9, 15, 8), int32]) -> (Tensor[(9, 15, 8), int32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %440 = cast(%var_18755, dtype="int32") /* ty=Tensor[(9, 15, 8), int32] */;
  %441 = shape_of(%var_18754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%var_18754, dtype="int32") /* ty=Tensor[(9, 15, 8), int32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %444 = multiply(%442, %443) /* ty=Tensor[(9, 15, 8), int32] */;
  %445 = @func_7537() /* ty=Tensor[(14, 11, 9), float32] */;
  %446 = @func_16814() /* ty=Tensor[(14, 11, 9), float32] */;
  (%444, %445, %446)
}

def @func_4392() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %447 = @func_2387() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %448 = %447.0;
  %449 = cast(%448, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %450 = reshape(%449, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %451 = @func_2692(%450) /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
  %452 = %451.0;
  (%448, %452)
}

def @func_8174() -> (Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) {
  %453 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %454 = cast(meta[relay.Constant][11] /* ty=Tensor[(980), float64] */, dtype="float64") /* ty=Tensor[(980), float64] */;
  %455 = reshape(%454, newshape=[980]) /* ty=Tensor[(980), float64] */;
  %456 = @func_6539(%455) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) */;
  %457 = %453.0;
  %458 = %456.2;
  (%457, %458, meta[relay.Constant][11] /* ty=Tensor[(980), float64] */)
}

def @func_7171() -> (Tensor[(14, 99), float64],) {
  %459 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %460 = %459.2;
  (%460,)
}

def @func_2692(%var_2685: Tensor[(1386), bool]) -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) {
  %461 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %462 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %463 = cast(%var_2685, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %464 = reshape(%461, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
  %465 = reshape(%462, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
  %466 = reshape(%463, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %467 = @func_1073(%464, %465, %466) /* ty=(Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
  %468 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %469 = @func_2469() /* ty=Tensor[(4, 15, 3), float64] */;
  %470 = %467.1;
  %471 = %468.0;
  (%469, %470, meta[relay.Constant][12] /* ty=Tensor[(360), int16] */, %var_2685, %471)
}

def @func_18625() -> Tensor[(14, 11, 9), float32] {
  %472 = @func_16259() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %472.0
}

def @func_6741() -> (Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %473 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %474 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
  %475 = %473.1;
  %476 = %474.0;
  %477 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
  (%475, %476, %477)
}

def @func_1177() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
  %478 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  %479 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 198), bool] */, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %480 = reshape(%479, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %481 = @func_876(%480) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %482 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 198), bool] */, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %483 = reshape(%482, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %484 = @func_316(%483) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %485 = log2(%478) /* ty=Tensor[(4, 15, 3), float32] */;
  %486 = %481.4;
  %487 = %484.1;
  (%485, %486, meta[relay.Constant][14] /* ty=Tensor[(7, 198), bool] */, %487)
}

def @func_9929() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %488 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %489 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %490 = %488.1;
  %491 = %489.0;
  (%490, %491)
}

def @func_12853() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
  %492 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %493 = @func_12682() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %494 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %495 = %492.0;
  %496 = @func_7537() /* ty=Tensor[(14, 11, 9), float32] */;
  %497 = %493.1;
  %498 = @func_7454() /* ty=Tensor[(14, 11, 9), float32] */;
  %499 = %494.0;
  (%495, %496, %497, %498, %499)
}

def @func_5019() -> (Tensor[(4, 15, 3), float32],) {
  %500 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %501 = %500.0;
  (%501,)
}

def @func_5417() -> Tensor[(14, 11, 9), float32] {
  %502 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %502.0
}

def @func_15569() -> (Tensor[(14, 99), uint64],) {
  %503 = @func_10119() /* ty=(Tensor[(14, 99), float32],) */;
  %504 = %503.0;
  %505 = @func_6381() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %506 = %505.0;
  %507 = cast(%506, dtype="uint64") /* ty=Tensor[(14, 11, 9), uint64] */;
  %508 = shape_of(%504, dtype="int32") /* ty=Tensor[(2), int32] */;
  %509 = cast(%504, dtype="uint64") /* ty=Tensor[(14, 99), uint64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %511 = multiply(%509, %510) /* ty=Tensor[(14, 99), uint64] */;
  (%511,)
}

def @func_16031() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
  %512 = @func_10148() /* ty=Tensor[(14, 11, 9), float32] */;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %514 = reshape(%513, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
  %515 = @func_13205(%514) /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */;
  %516 = @func_7537() /* ty=Tensor[(14, 11, 9), float32] */;
  %517 = %515.0;
  %518 = @func_4119() /* ty=Tensor[(14, 11, 9), float32] */;
  (%512, %516, %517, %518)
}

def @func_10669() -> (Tensor[(14, 11, 9), float32],) {
  %519 = @func_10628() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %520 = %519.0;
  (%520,)
}

def @func_3765() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) {
  %521 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %522 = @func_3291() /* ty=Tensor[(14, 99), int16] */;
  %523 = cast(%522, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %524 = asin(%523) /* ty=Tensor[(14, 99), float32] */;
  %525 = cast(%524, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %526 = %521.0;
  %527 = tan(%525) /* ty=Tensor[(14, 99), float64] */;
  (%526, %527)
}

def @func_3481() -> (Tensor[(14, 11, 9), float32],) {
  %528 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %529 = %528.0;
  (%529,)
}

def @func_13186(%var_13137: Tensor[(132), uint64], %var_13162: Tensor[(429, 1), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64], Tensor[(11, 13, 3), float32], Tensor[(429, 1), float32], Tensor[(14, 11, 9), float32]) {
  %530 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %531 = cast(%var_13137, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %532 = reshape(%531, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
  %533 = cast(%var_13162, dtype="float32") /* ty=Tensor[(429, 1), float32] */;
  %534 = reshape(%533, newshape=[11, 13, 3]) /* ty=Tensor[(11, 13, 3), float32] */;
  %535 = @func_8659(%534) /* ty=(Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %536 = @func_7246() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %537 = %530.0;
  %538 = @func_4742(%532) /* ty=Tensor[(6, 2, 11), uint64] */;
  %539 = %535.0;
  %540 = %536.3;
  (%537, %538, %var_13137, %539, %var_13162, %540)
}

def @func_1489() -> Tensor[(14, 11, 9), float32] {
  %541 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %541.0
}

def @func_3291() -> Tensor[(14, 99), int16] {
  %542 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %543 = %542.1;
  %544 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 99), float32] */, dtype="int16") /* ty=Tensor[(14, 99), int16] */;
  %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(2), int32] */;
  %546 = cast(%543, dtype="int16") /* ty=Tensor[(14, 99), int16] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  bitwise_xor(%546, %547) /* ty=Tensor[(14, 99), int16] */
}

def @func_10628() -> (Tensor[(14, 11, 9), float32],) {
  %548 = @func_4392() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %549 = %548.0;
  (%549,)
}

def @func_10752() -> (Tensor[(132), uint64], Tensor[(14, 99), float32], Tensor[(6, 2, 11), uint64]) {
  %550 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %551 = @func_10119() /* ty=(Tensor[(14, 99), float32],) */;
  %552 = %550.3;
  %553 = cast(%552, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %554 = reshape(%553, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
  %555 = %551.0;
  %556 = @func_4742(%554) /* ty=Tensor[(6, 2, 11), uint64] */;
  (%552, %555, %556)
}

def @func_13269() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float32]) {
  %557 = @func_10133() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %558 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %559 = %557.0;
  %560 = %558.1;
  %561 = @func_5391() /* ty=Tensor[(4, 15, 3), float32] */;
  (%559, %560, %561)
}

def @func_14682() -> (Tensor[(2, 13, 10), float64],) {
  %562 = @func_11836() /* ty=Tensor[(2, 13, 10), float64] */;
  (%562,)
}

def @func_16814() -> Tensor[(14, 11, 9), float32] {
  %563 = @func_12853() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %563.0
}

def @func_2493() -> (Tensor[(14, 11, 9), float32],) {
  %564 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %565 = %564.0;
  (%565,)
}

def @func_10863() -> (Tensor[(4, 15, 3), float32],) {
  %566 = @func_5391() /* ty=Tensor[(4, 15, 3), float32] */;
  (%566,)
}

def @func_14707() -> Tensor[(4, 15, 3), float32] {
  %567 = @func_14399() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %567.0
}

def @func_1364() -> (Tensor[(14, 11, 9), float32],) {
  %568 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %569 = %568.0;
  (%569,)
}

def @func_1538() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
  %570 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %571 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 99), bool] */, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %572 = reshape(%571, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %573 = @func_316(%572) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %574 = %573.1;
  %575 = cast(%574, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %576 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(14, 99), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %577 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 99), bool] */, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %579 = %570.0;
  %580 = minimum(%577, %578) /* ty=Tensor[(14, 99), float32] */;
  (%579, %580)
}

def @func_20164() -> (Tensor[(4, 15, 3), float32],) {
  %581 = @func_18578() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %582 = %581.0;
  (%582,)
}

def @func_4858() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %583 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %584 = @func_3481() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %585 = %583.0;
  %586 = %584.0;
  (%585, %586)
}

def @func_5770() -> (Tensor[(14, 11, 9), float32],) {
  %587 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %588 = %587.0;
  (%588,)
}

def @func_17226() -> (Tensor[(14, 11, 9), float32],) {
  %589 = @func_10321() /* ty=Tensor[(14, 11, 9), float32] */;
  (%589,)
}

def @func_1321() -> (Tensor[(14, 11, 9), float32],) {
  %590 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %591 = %590.1;
  (%591,)
}

def @func_2469() -> Tensor[(4, 15, 3), float64] {
  %592 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %592.0
}

def @func_7126() -> Tensor[(7, 198), float32] {
  %593 = @func_6919() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) */;
  %593.1
}

def @func_10635() -> (Tensor[(2, 13, 10), float64],) {
  %594 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  (%594,)
}

def @func_9674() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %595 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %596 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %597 = %595.0;
  %598 = %596.0;
  (%597, %598)
}

def @func_13123() -> Tensor[(4, 15, 3), float64] {
  %599 = @func_10378() /* ty=(Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) */;
  %600 = %599.1;
  %601 = cast(%600, dtype="float64") /* ty=Tensor[(4, 15, 3), float64] */;
  log10(%601) /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_14127() -> (Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
  %602 = @func_9332() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */;
  %603 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %604 = @func_5701() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %605 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %606 = %602.1;
  %607 = %603.0;
  %608 = %604.0;
  %609 = %605.0;
  (%606, %607, %608, %609)
}

def @func_18980() -> (Tensor[(7, 198), float64],) {
  %610 = @func_12569() /* ty=(Tensor[(14, 99), float64], Tensor[(7, 198), float64]) */;
  %611 = %610.1;
  %612 = cast(%611, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %613 = atan(%612) /* ty=Tensor[(7, 198), float64] */;
  (%613,)
}

def @func_2647(%var_2640: Tensor[(180, 2), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) {
  %614 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %616 = reshape(%615, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %617 = @func_2200(%616) /* ty=(Tensor[(14, 11, 9), float64],) */;
  %618 = cast(%var_2640, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
  %619 = reshape(%618, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %620 = @func_1977(%619) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %621 = %617.0;
  %622 = %620.0;
  %623 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%614, %621, %622, %var_2640, %623)
}

def @func_11622() -> (Tensor[(14, 11, 9), float32],) {
  %624 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %625 = %624.0;
  (%625,)
}

def @func_12196() -> (Tensor[(7, 198), bool],) {
  %626 = @func_8879() /* ty=(Tensor[(7, 198), bool],) */;
  %627 = %626.0;
  (%627,)
}

def @func_11884() -> (Tensor[(14, 11, 9), float32],) {
  %628 = @func_10593() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %629 = %628.0;
  (%629,)
}

def @func_15786() -> (Tensor[(14, 11, 9), float32], Tensor[(3, 2, 6), float64], Tensor[(3, 12), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %630 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %631 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 12), float64] */;
  %632 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 12), float64] */;
  %633 = reshape(%631, newshape=[3, 2, 6]) /* ty=Tensor[(3, 2, 6), float64] */;
  %634 = reshape(%632, newshape=[3, 2, 6]) /* ty=Tensor[(3, 2, 6), float64] */;
  %635 = @func_3793(%633, %634) /* ty=(Tensor[(3, 2, 6), float64],) */;
  %636 = @func_12302() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %637 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %638 = %630.0;
  %639 = %635.0;
  %640 = %636.2;
  %641 = %637.1;
  (%638, %639, meta[relay.Constant][17] /* ty=Tensor[(3, 12), float64] */, %640, %641)
}

def @func_19359(%var_19325: Tensor[(260), float64], %var_19346: Tensor[(132), uint64], %var_19347: Tensor[(13, 33), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(132), uint64], Tensor[(13, 33), float32]) {
  %642 = @func_17226() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %643 = cast(%var_19325, dtype="float64") /* ty=Tensor[(260), float64] */;
  %644 = reshape(%643, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %645 = @func_6842(%644) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %646 = cast(%var_19346, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %647 = cast(%var_19347, dtype="float32") /* ty=Tensor[(13, 33), float32] */;
  %648 = reshape(%646, newshape=[132]) /* ty=Tensor[(132), uint64] */;
  %649 = reshape(%647, newshape=[429, 1]) /* ty=Tensor[(429, 1), float32] */;
  %650 = @func_13186(%648, %649) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64], Tensor[(11, 13, 3), float32], Tensor[(429, 1), float32], Tensor[(14, 11, 9), float32]) */;
  %651 = %642.0;
  %652 = %645.3;
  %653 = %650.0;
  (%651, %652, %var_19325, %653, %var_19346, %var_19347)
}

def @func_6636() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) {
  %654 = @func_2585() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %655 = %654.0;
  %656 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  (%655, %656)
}

def @func_7246() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %657 = @func_3861() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) */;
  %658 = @func_5365() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) */;
  %659 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %660 = @func_5246() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 392), float32]) */;
  %661 = %657.0;
  %662 = %658.2;
  %663 = %659.0;
  %664 = %660.0;
  (%661, %662, %663, %664)
}

def @func_19903() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), uint32], Tensor[(4, 15, 3), float64]) {
  %665 = @func_17271() /* ty=(Tensor[(1, 4, 10), uint8], Tensor[(2, 13, 10), float64]) */;
  %666 = @func_15006() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %667 = @func_10836() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %668 = %665.1;
  %669 = %666.0;
  %670 = %667.0;
  (%668, %669, %670)
}

def @func_9332() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) {
  %671 = @func_8571() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */;
  %672 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
  %673 = %671.1;
  (%672, %673)
}

def @func_6134() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %674 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %675 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %676 = @func_4119() /* ty=Tensor[(14, 11, 9), float32] */;
  %677 = %674.0;
  %678 = %675.1;
  (%676, %677, %678)
}

def @func_18354() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(429), float32]) {
  %679 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %680 = cast(meta[relay.Constant][18] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %681 = reshape(%680, newshape=[11, 13, 3]) /* ty=Tensor[(11, 13, 3), float32] */;
  %682 = @func_8659(%681) /* ty=(Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %683 = %679.0;
  %684 = %682.1;
  (%683, %684, meta[relay.Constant][18] /* ty=Tensor[(429), float32] */)
}

def @func_18055() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %685 = @func_6675() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %686 = @func_10669() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %687 = %685.0;
  %688 = %686.0;
  (%687, %688)
}

def @func_20202() -> Tensor[(14, 11, 9), uint32] {
  %689 = @func_16456() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %689.0
}

def @func_13356() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %690 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %691 = %690.0;
  %692 = @func_7025() /* ty=Tensor[(14, 11, 9), float32] */;
  (%691, %692)
}

def @func_15280() -> Tensor[(14, 11, 9), float32] {
  %693 = @func_9423() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %693.0
}

def @func_15056() -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64]) {
  %694 = @func_14001() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %695 = @func_13866() /* ty=Tensor[(14, 11, 9), float32] */;
  %696 = %694.1;
  (%695, %696)
}

def @func_20359(%var_20339: uint32) -> (Tensor[(8, 12, 5), uint32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
  %697 = cast(%var_20339, dtype="uint32") /* ty=uint32 */;
  %698 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 12, 5), uint32] */, dtype="uint32") /* ty=Tensor[(8, 12, 5), uint32] */;
  %699 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %700 = @func_14127() /* ty=(Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %701 = right_shift(%697, %698) /* ty=Tensor[(8, 12, 5), uint32] */;
  %702 = %699.0;
  %703 = %700.3;
  (%701, %702, %703)
}

def @func_10836() -> (Tensor[(4, 15, 3), float64],) {
  %704 = @func_9541() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
  %705 = %704.0;
  (%705,)
}

def @func_12884() -> (Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(14, 99), int32]) {
  %706 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %707 = reshape(%706, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %708 = @func_9622(%707) /* ty=(Tensor[(15, 2, 15), float32],) */;
  %709 = @func_7171() /* ty=(Tensor[(14, 99), float64],) */;
  %710 = %709.0;
  %711 = @func_9019() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %712 = %711.0;
  %713 = cast(%712, dtype="int32") /* ty=Tensor[(14, 11, 9), int32] */;
  %714 = shape_of(%710, dtype="int32") /* ty=Tensor[(2), int32] */;
  %715 = cast(%710, dtype="int32") /* ty=Tensor[(14, 99), int32] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %717 = %708.0;
  %718 = maximum(%715, %716) /* ty=Tensor[(14, 99), int32] */;
  (%717, meta[relay.Constant][20] /* ty=Tensor[(450), float32] */, %718)
}

def @func_2585() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %719 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %720 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %721 = %719.0;
  %722 = %720.0;
  (%721, %722)
}

def @func_17031() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %723 = @func_12853() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %724 = @func_8980() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %725 = %723.3;
  %726 = %724.0;
  (%725, %726)
}

def @func_20076() -> Tensor[(14, 99), bool] {
  %727 = @func_11562() /* ty=(Tensor[(14, 99), bool],) */;
  %727.0
}

def @func_16456() -> (Tensor[(14, 11, 9), uint32],) {
  %728 = @func_15006() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %729 = %728.0;
  (%729,)
}

def @func_9541() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
  %730 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %731 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
  %732 = %730.0;
  %733 = %731.2;
  (%732, %733)
}

def @func_12682() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %734 = @func_9396() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %735 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
  %736 = %734.0;
  (%735, %736)
}

def @func_19908() -> Tensor[(2, 13, 10), float64] {
  %737 = @func_11228() /* ty=(Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %737.1
}

def @func_14723() -> (Tensor[(4, 15, 3), float64],) {
  %738 = @func_8477() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %739 = %738.0;
  (%739,)
}

def @func_13548() -> (Tensor[(4, 15, 3), float64],) {
  %740 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %741 = %740.0;
  (%741,)
}

def @func_18208() -> Tensor[(14, 11, 9), float32] {
  %742 = @func_11378() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %742.3
}

def @func_11562() -> (Tensor[(14, 99), bool],) {
  %743 = @func_8576() /* ty=(Tensor[(14, 99), bool],) */;
  %744 = %743.0;
  (%744,)
}

def @func_13007() -> (Tensor[(14, 11, 9), float32],) {
  %745 = @func_12775() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) */;
  %746 = %745.0;
  (%746,)
}

def @func_15871() -> Tensor[(7, 198), bool] {
  %747 = @func_10965() /* ty=(Tensor[(7, 198), bool], Tensor[(14, 99), float64]) */;
  %747.0
}

def @func_7025() -> Tensor[(14, 11, 9), float32] {
  %748 = @func_3861() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) */;
  %748.0
}

def @func_13979(%var_13955: Tensor[(14, 70), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(14, 70), float64]) {
  %749 = cast(%var_13955, dtype="float64") /* ty=Tensor[(14, 70), float64] */;
  %750 = reshape(%749, newshape=[980]) /* ty=Tensor[(980), float64] */;
  %751 = @func_6539(%750) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) */;
  %752 = @func_11420() /* ty=Tensor[(14, 11, 9), float32] */;
  %753 = %751.2;
  (%752, %753, %var_13955)
}

def @func_11064() -> (Tensor[(14, 11, 9), float32],) {
  %754 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %755 = %754.0;
  (%755,)
}

def @func_2140() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
  %756 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %757 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %758 = %756.0;
  %759 = %757.1;
  (%758, %759)
}

def @func_17851() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32]) {
  %760 = @func_17031() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %761 = @func_14399() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %762 = %760.1;
  %763 = %761.0;
  (%762, %763)
}

def @func_19540() -> (Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32]) {
  %764 = @func_7126() /* ty=Tensor[(7, 198), float32] */;
  %765 = @func_16699() /* ty=Tensor[(14, 11, 9), float32] */;
  (%764, %765)
}

def @func_19521() -> (Tensor[(2, 13, 10), float64],) {
  %766 = @func_11836() /* ty=Tensor[(2, 13, 10), float64] */;
  (%766,)
}

def @func_14925() -> Tensor[(14, 11, 9), float32] {
  %767 = @func_10541() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %767.0
}

def @func_19445(%var_19377: Tensor[(1, 10, 5), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(?, 10, 5), bool]) {
  %768 = @func_14350() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %769 = %768.0;
  %770 = cast(%769, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %771 = reshape(%770, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %772 = @func_3672(%771) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) */;
  %773 = cast(%var_19377, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
  %774 = log(%773) /* ty=Tensor[(1, 10, 5), float64] */;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(1, 10, 5), float32] */;
  %776 = sin(%775) /* ty=Tensor[(1, 10, 5), float32] */;
  %777 = cast(%776, dtype="int32") /* ty=Tensor[(1, 10, 5), int32] */;
  %778 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%774, dtype="int32") /* ty=Tensor[(1, 10, 5), int32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %781 = minimum(%779, %780) /* ty=Tensor[(?, 10, 5), int32] */;
  %782 = cast(%774, dtype="bool") /* ty=Tensor[(1, 10, 5), bool] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%781, dtype="bool") /* ty=Tensor[(?, 10, 5), bool] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %786 = logical_and(%784, %785) /* ty=Tensor[(?, 10, 5), bool] */;
  %787 = cast(%786, dtype="bool") /* ty=Tensor[(?, 10, 5), bool] */;
  %788 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%774, dtype="bool") /* ty=Tensor[(1, 10, 5), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = %772.0;
  %792 = logical_or(%789, %790) /* ty=Tensor[(?, 10, 5), bool] */;
  (%769, %791, %792)
}

def @func_15094() -> Tensor[(14, 11, 9), float32] {
  @func_2304() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_13866() -> Tensor[(14, 11, 9), float32] {
  @func_9139() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_8576() -> (Tensor[(14, 99), bool],) {
  %793 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  (%793,)
}

def @func_15435() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %794 = @func_13406() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %795 = @func_8357() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %796 = @func_12062() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %797 = %794.0;
  %798 = %795.0;
  %799 = %796.0;
  (%797, %798, %799)
}

def @func_18674() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %800 = @func_12327() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %801 = @func_18625() /* ty=Tensor[(14, 11, 9), float32] */;
  %802 = %800.0;
  (%801, %802)
}

def @func_16856() -> (Tensor[(7, 198), float32],) {
  %803 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %804 = %803.3;
  %805 = cast(%804, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
  %806 = log(%805) /* ty=Tensor[(7, 198), float32] */;
  (%806,)
}

def @func_10187() -> (Tensor[(14, 11, 9), float32],) {
  %807 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %808 = %807.0;
  (%808,)
}

def @func_3136() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) {
  %809 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %810 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %811 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %812 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %813 = %809.0;
  %814 = cast(%813, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %815 = reshape(%814, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %816 = @func_2692(%815) /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
  %817 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %818 = cast(meta[relay.Constant][21] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %819 = reshape(%818, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %820 = @func_1977(%819) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %821 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %822 = %810.0;
  %823 = %811.0;
  %824 = %812.2;
  %825 = %816.4;
  %826 = %817.1;
  %827 = %820.0;
  %828 = %821.0;
  (%813, %822, %823, %824, %825, %826, %827, meta[relay.Constant][21] /* ty=Tensor[(360), int16] */, %828)
}

def @func_13591() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %829 = @func_5019() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %830 = @func_7669() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %831 = %829.0;
  %832 = %830.0;
  (%831, %832)
}

def @func_2117() -> (Tensor[(4, 15, 3), float64],) {
  %833 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %834 = %833.0;
  %835 = cast(%834, dtype="float64") /* ty=Tensor[(4, 15, 3), float64] */;
  %836 = atanh(%835) /* ty=Tensor[(4, 15, 3), float64] */;
  %837 = cast(%836, dtype="float64") /* ty=Tensor[(4, 15, 3), float64] */;
  %838 = sin(%837) /* ty=Tensor[(4, 15, 3), float64] */;
  (%838,)
}

def @func_1763() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) {
  %839 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %840 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %841 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %842 = %839.0;
  %843 = %840.2;
  (%841, %842, %843)
}

def @func_19692() -> (Tensor[(7, 198), int32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float64]) {
  %844 = @func_14288() /* ty=(Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %845 = %844.0;
  %846 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 198), bool] */, dtype="int32") /* ty=Tensor[(7, 198), int32] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(2), int32] */;
  %848 = cast(%845, dtype="int32") /* ty=Tensor[(7, 198), int32] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %850 = @func_11157() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %851 = cast(meta[relay.Constant][23] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %852 = reshape(%851, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %853 = @func_3352(%852) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
  %854 = @func_12775() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) */;
  %855 = subtract(%848, %849) /* ty=Tensor[(7, 198), int32] */;
  %856 = %850.1;
  %857 = %853.0;
  %858 = %854.1;
  (%855, %856, %857, meta[relay.Constant][23] /* ty=Tensor[(784), float32] */, %858)
}

def @func_16699() -> Tensor[(14, 11, 9), float32] {
  %859 = @func_14556() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %859.1
}

def @func_18166() -> Tensor[(4, 15, 3), float64] {
  @func_6468() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_6842(%var_6815: Tensor[(2, 13, 10), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) {
  %860 = @func_4542() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %861 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %862 = %861.0;
  %863 = cast(%var_6815, dtype="int32") /* ty=Tensor[(2, 13, 10), int32] */;
  %864 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%862, dtype="int32") /* ty=Tensor[(2, 13, 10), int32] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %867 = cast(%862, dtype="uint64") /* ty=Tensor[(2, 13, 10), uint64] */;
  %868 = shape_of(%var_6815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%var_6815, dtype="uint64") /* ty=Tensor[(2, 13, 10), uint64] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %871 = @func_6381() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %872 = %860.3;
  %873 = logical_xor(%865, %866) /* ty=Tensor[(2, 13, 10), int32] */;
  %874 = bitwise_and(%869, %870) /* ty=Tensor[(2, 13, 10), uint64] */;
  %875 = %871.0;
  (%872, %873, %874, %875)
}

def @func_12302() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) {
  %876 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %877 = @func_6372() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %878 = %876.0;
  %879 = cast(%878, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %880 = reshape(%879, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %881 = @func_3464(%880) /* ty=(Tensor[(14, 11, 9), bool],) */;
  %882 = %877.0;
  %883 = %881.0;
  (%878, %882, %883)
}

def @func_4689(%var_4641: Tensor[(7, 10, 14), float64], %var_4642: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), float64], Tensor[(14, 99), int16], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %884 = cast(%var_4642, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
  %885 = shape_of(%var_4641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%var_4641, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %888 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %889 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %890 = divide(%886, %887) /* ty=Tensor[(7, 10, 14), float64] */;
  %891 = @func_3291() /* ty=Tensor[(14, 99), int16] */;
  %892 = %888.0;
  %893 = %889.0;
  (%890, %891, %892, %893)
}

def @func_16259() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %894 = @func_15719() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %895 = @func_9836() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %896 = @func_15719() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %897 = %894.0;
  %898 = %895.0;
  %899 = %896.0;
  (%897, %898, %899)
}

def @func_7001(%var_6984: Tensor[(260), float64]) -> (Tensor[(14, 99), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) {
  %900 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %901 = %900.0;
  %902 = cast(%901, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %903 = exp(%902) /* ty=Tensor[(14, 99), float32] */;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %905 = log10(%904) /* ty=Tensor[(14, 99), float32] */;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %907 = shape_of(%903, dtype="int32") /* ty=Tensor[(2), int32] */;
  %908 = cast(%903, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %910 = cast(%var_6984, dtype="float64") /* ty=Tensor[(260), float64] */;
  %911 = reshape(%910, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %912 = @func_6842(%911) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %913 = @func_5522() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %914 = mod(%908, %909) /* ty=Tensor[(14, 99), float32] */;
  %915 = cast(%914, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %916 = reshape(%915, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %917 = @func_4016(%916) /* ty=(Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
  %918 = %912.1;
  %919 = %913.0;
  %920 = %917.1;
  (%914, %918, %var_6984, %919, %920)
}

def @func_6468() -> Tensor[(4, 15, 3), float64] {
  @func_2469() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_5613() -> (Tensor[(784), float32],) {
  %921 = @func_5167() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %922 = %921.3;
  (%922,)
}

def @func_2304() -> Tensor[(14, 11, 9), float32] {
  @func_1693() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_2200(%var_2183: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), float64],) {
  %923 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %924 = %923.0;
  %925 = cast(%var_2183, dtype="float64") /* ty=Tensor[(14, 11, 9), float64] */;
  %926 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%924, dtype="float64") /* ty=Tensor[(14, 11, 9), float64] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %929 = floor_divide(%927, %928) /* ty=Tensor[(14, 11, 9), float64] */;
  (%929,)
}

def @func_13294() -> (Tensor[(14, 11, 9), float32],) {
  %930 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
  %931 = %930.2;
  (%931,)
}

def @func_15903() -> (Tensor[(14, 11, 9), float32],) {
  %932 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %933 = %932.0;
  (%933,)
}

def @func_16573(%var_16537: Tensor[(360), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(6, 2, 11), uint64], Tensor[(4, 15, 3), float32]) {
  %934 = @func_12062() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %935 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %936 = cast(%var_16537, dtype="int16") /* ty=Tensor[(360), int16] */;
  %937 = reshape(%936, newshape=[180, 2]) /* ty=Tensor[(180, 2), int16] */;
  %938 = @func_2647(%937) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) */;
  %939 = @func_14723() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %940 = %939.0;
  %941 = cast(%940, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  %942 = %934.0;
  %943 = %935.0;
  %944 = %938.0;
  %945 = @func_14255() /* ty=Tensor[(6, 2, 11), uint64] */;
  %946 = sqrt(%941) /* ty=Tensor[(4, 15, 3), float32] */;
  (%942, %943, %944, %var_16537, %945, %946)
}

def @func_3672(%var_3610: Tensor[(7, 198), bool]) -> (Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) {
  %947 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %948 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %949 = %948.2;
  %950 = cast(%var_3610, dtype="int64") /* ty=Tensor[(7, 198), int64] */;
  %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(2), int32] */;
  %952 = cast(%949, dtype="int64") /* ty=Tensor[(7, 198), int64] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %954 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 198), bool] */, dtype="int16") /* ty=Tensor[(7, 198), int16] */;
  %955 = shape_of(%949, dtype="int32") /* ty=Tensor[(2), int32] */;
  %956 = cast(%949, dtype="int16") /* ty=Tensor[(7, 198), int16] */;
  %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %958 = %947.0;
  %959 = add(%952, %953) /* ty=Tensor[(7, 198), int64] */;
  %960 = bitwise_or(%956, %957) /* ty=Tensor[(7, 198), int16] */;
  (%958, %959, %960)
}

def @func_5701() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %961 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %962 = %961.0;
  %963 = @func_5222() /* ty=Tensor[(14, 11, 9), float32] */;
  (%962, %963)
}

def @func_11520() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) {
  %964 = @func_8940() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %965 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %966 = %965.2;
  %967 = cast(%966, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %968 = reshape(%967, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %969 = @func_2692(%968) /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
  %970 = @func_10119() /* ty=(Tensor[(14, 99), float32],) */;
  %971 = %970.0;
  %972 = cast(%971, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %973 = @func_10551() /* ty=(Tensor[(14, 99), bool],) */;
  %974 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
  %975 = %964.0;
  %976 = %969.3;
  %977 = log(%972) /* ty=Tensor[(14, 99), float64] */;
  %978 = %973.0;
  (%974, %975, %966, %976, %977, %978)
}

def @func_19945() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %979 = @func_13746() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
  %980 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %981 = %979.0;
  %982 = %980.0;
  %983 = @func_18208() /* ty=Tensor[(14, 11, 9), float32] */;
  (%981, %982, %983)
}

def @func_7149() -> Tensor[(14, 11, 9), float32] {
  %984 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %984.0
}

def @func_14001() -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
  %985 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %986 = cast(meta[relay.Constant][25] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %987 = reshape(%986, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
  %988 = %985.3;
  %989 = @func_4742(%987) /* ty=Tensor[(6, 2, 11), uint64] */;
  (%988, %989, meta[relay.Constant][25] /* ty=Tensor[(132), uint64] */)
}

def @func_9748() -> (Tensor[(4, 15, 3), float64],) {
  %990 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %991 = %990.0;
  (%991,)
}

def @func_2720() -> (Tensor[(14, 11, 9), float32],) {
  %992 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%992,)
}

def @func_2930() -> (Tensor[(14, 11, 9), float32],) {
  %993 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  %994 = cast(%993, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %995 = tan(%994) /* ty=Tensor[(14, 11, 9), float32] */;
  (%995,)
}

def @func_14556() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %996 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %997 = %996.0;
  %998 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
  (%997, %998)
}

def @func_9423() -> (Tensor[(14, 11, 9), float32],) {
  %999 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %1000 = %999.0;
  (%1000,)
}

def @func_13624() -> (Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32]) {
  %1001 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
  %1002 = %1001.0;
  %1003 = @func_7025() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1002, %1003)
}

def @func_10301() -> (Tensor[(2, 13, 10), float64],) {
  %1004 = @func_5365() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) */;
  %1005 = %1004.0;
  (%1005,)
}

def @func_10119() -> (Tensor[(14, 99), float32],) {
  %1006 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  %1007 = cast(%1006, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1008 = cos(%1007) /* ty=Tensor[(14, 99), float32] */;
  (%1008,)
}

def @func_18729() -> (Tensor[(14, 11, 9), float32],) {
  %1009 = @func_11013() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1009,)
}

def @func_17100() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float32], Tensor[(14, 11, 9), float32]) {
  %1010 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %1011 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %1012 = cast(meta[relay.Constant][26] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %1013 = reshape(%1012, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %1014 = @func_3352(%1013) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
  %1015 = @func_14127() /* ty=(Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %1016 = @func_13356() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1017 = %1010.0;
  %1018 = %1011.0;
  %1019 = %1014.0;
  %1020 = %1015.3;
  %1021 = %1016.0;
  (%1017, %1018, %1019, meta[relay.Constant][26] /* ty=Tensor[(784), float32] */, %1020, %1021)
}

def @func_19735() -> Tensor[(14, 11, 9), float32] {
  %1022 = @func_16897() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1022.0
}

def @func_11941(%var_11907: int8, %var_11908: Tensor[(2, 9, 1), int8]) -> (Tensor[(2, 9, ?), float32],) {
  %1023 = cast(%var_11907, dtype="int8") /* ty=int8 */;
  %1024 = cast(%var_11908, dtype="int8") /* ty=Tensor[(2, 9, 1), int8] */;
  %1025 = right_shift(%1023, %1024) /* ty=Tensor[(2, 9, 1), int8] */;
  %1026 = cast(%1025, dtype="float32") /* ty=Tensor[(2, 9, 1), float32] */;
  %1027 = shape_of(%var_11908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%var_11908, dtype="float32") /* ty=Tensor[(2, 9, 1), float32] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1030 = floor_mod(%1028, %1029) /* ty=Tensor[(2, 9, ?), float32] */;
  (%1030,)
}

def @func_15006() -> (Tensor[(14, 11, 9), uint32],) {
  %1031 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1032 = %1031.1;
  (%1032,)
}

def @func_9139() -> Tensor[(14, 11, 9), float32] {
  @func_7500() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_14044() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), int16]) {
  %1033 = @func_11228() /* ty=(Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1034 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1035 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
  %1036 = %1033.3;
  %1037 = %1034.0;
  %1038 = %1035.1;
  (%1036, %1037, %1038)
}

def @func_16164() -> (Tensor[(132), uint64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), int8]) {
  %1039 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %1040 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1041 = %1040.4;
  %1042 = @func_5522() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1043 = %1042.0;
  %1044 = cast(%1043, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1045 = shape_of(%1041, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1046 = cast(%1041, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1048 = less_equal(%1046, %1047) /* ty=Tensor[(7, 198), bool] */;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %1050 = sinh(%1049) /* ty=Tensor[(7, 198), float64] */;
  %1051 = @func_11622() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1052 = %1051.0;
  %1053 = cast(%1052, dtype="float64") /* ty=Tensor[(14, 11, 9), float64] */;
  %1054 = shape_of(%1050, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1055 = cast(%1050, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1057 = mod(%1055, %1056) /* ty=Tensor[(7, 198), float64] */;
  %1058 = cast(%1050, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %1059 = shape_of(%1057, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1060 = cast(%1057, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1062 = %1039.3;
  %1063 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  %1064 = bitwise_and(%1060, %1061) /* ty=Tensor[(7, 198), int8] */;
  (%1062, %1063, %1064)
}

def @func_16897() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1065 = @func_12327() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1066 = @func_13624() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32]) */;
  %1067 = %1065.0;
  %1068 = %1066.1;
  (%1067, %1068)
}

def @func_8571() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) {
  %1069 = @func_4542() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1070 = %1069.3;
  %1071 = cast(%1070, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1072 = reshape(%1071, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %1073 = @func_4016(%1072) /* ty=(Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
  %1074 = %1073.0;
  (%1070, %1074)
}

def @func_16220() -> (Tensor[(14, 11, 9), float32],) {
  %1075 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1076 = %1075.0;
  (%1076,)
}

def @func_11195() -> (Tensor[(980), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1077 = @func_8174() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) */;
  %1078 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %1079 = %1077.2;
  %1080 = %1078.4;
  %1081 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1079, %1080, %1081)
}

def @func_9215(%var_9204: Tensor[(11, 5, 9), float64]) -> (Tensor[(11, 5, 9), float64],) {
  %1082 = cast(%var_9204, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  %1083 = atanh(%1082) /* ty=Tensor[(11, 5, 9), float64] */;
  (%1083,)
}

def @func_6381() -> (Tensor[(14, 11, 9), float32],) {
  %1084 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1084,)
}

def @func_10551() -> (Tensor[(14, 99), bool],) {
  %1085 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  (%1085,)
}

def @func_11807() -> (Tensor[(14, 99), float64],) {
  %1086 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
  %1087 = %1086.0;
  (%1087,)
}

def @func_10148() -> Tensor[(14, 11, 9), float32] {
  %1088 = @func_9836() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1088.0
}

def @func_13033() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %1089 = @func_6372() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1090 = %1089.0;
  %1091 = @func_2469() /* ty=Tensor[(4, 15, 3), float64] */;
  (%1090, %1091)
}

def @func_6372() -> (Tensor[(14, 11, 9), float32],) {
  %1092 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1093 = %1092.0;
  (%1093,)
}

def @func_14775() -> Tensor[(14, 11, 9), float32] {
  @func_7752() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_16314() -> (Tensor[(14, 99), float32],) {
  %1094 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %1095 = %1094.1;
  (%1095,)
}

def @func_4162() -> (Tensor[(14, 11, 9), float32],) {
  %1096 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1097 = %1096.0;
  (%1097,)
}

def @func_10378() -> (Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) {
  %1098 = @func_5586() /* ty=(Tensor[(14, 99), float64],) */;
  %1099 = %1098.0;
  %1100 = @func_2469() /* ty=Tensor[(4, 15, 3), float64] */;
  (%1099, %1100)
}

def @func_6919() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) {
  %1101 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %1102 = %1101.1;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
  %1104 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %1105 = sin(%1103) /* ty=Tensor[(7, 198), float32] */;
  (%1104, %1105)
}

def @func_8980() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1106 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
  %1107 = @func_8940() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %1108 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %1109 = %1106.1;
  %1110 = %1107.0;
  %1111 = %1108.0;
  (%1109, %1110, %1111)
}

def @func_4598() -> (Tensor[(14, 11, 9), float32],) {
  %1112 = @func_4162() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1113 = %1112.0;
  (%1113,)
}

def @func_8510() -> Tensor[(14, 11, 9), float32] {
  @func_7149() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_9836() -> (Tensor[(14, 11, 9), float32],) {
  %1114 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1115 = %1114.0;
  (%1115,)
}

def @func_2544() -> (Tensor[(2, 13, 10), float64],) {
  %1116 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %1117 = exp(%1116) /* ty=Tensor[(2, 13, 10), float64] */;
  (%1117,)
}

def @func_4742(%var_4729: Tensor[(6, 2, 11), uint64]) -> Tensor[(6, 2, 11), uint64] {
  %1118 = cast(%var_4729, dtype="uint64") /* ty=Tensor[(6, 2, 11), uint64] */;
  %1119 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(6, 2, 11), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 2, 11), uint64] */, dtype="uint64") /* ty=Tensor[(6, 2, 11), uint64] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%1120, %1121) /* ty=Tensor[(6, 2, 11), uint64] */
}

def @func_4358() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) {
  %1122 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %1124 = reshape(%1123, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %1125 = @func_2200(%1124) /* ty=(Tensor[(14, 11, 9), float64],) */;
  %1126 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
  %1127 = %1125.0;
  %1128 = %1126.0;
  (%1122, %1127, %1128)
}

def @func_876(%var_835: Tensor[(1386), bool]) -> (Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1129 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 15), float32] */;
  %1130 = cast(%var_835, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %1131 = reshape(%1130, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %1132 = @func_316(%1131) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %1133 = %1132.1;
  %1134 = cast(%1133, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1135 = reshape(%1134, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %1136 = @func_316(%1135) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %1137 = cast(%var_835, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %1138 = reshape(%1137, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %1139 = @func_316(%1138) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %1140 = cast(%var_835, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %1141 = reshape(%1140, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %1142 = @func_316(%1141) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %1143 = sinh(%1129) /* ty=Tensor[(10, 10, 15), float32] */;
  %1144 = %1136.1;
  %1145 = %1139.1;
  %1146 = %1142.1;
  (%1143, %1133, %var_835, %1144, %1145, %1146)
}

def @func_17956() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), float64]) {
  %1147 = @func_10449() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1148 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1149 = @func_11807() /* ty=(Tensor[(14, 99), float64],) */;
  %1150 = %1147.0;
  %1151 = %1148.0;
  %1152 = %1149.0;
  (%1150, %1151, %1152)
}

def @func_9396() -> (Tensor[(14, 11, 9), float32],) {
  %1153 = @func_7500() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1153,)
}

def @func_2764(%var_2754: Tensor[(14, 99), float32]) -> Tensor[(14, 99), uint64] {
  %1154 = @func_2519() /* ty=Tensor[(14, 99), float32] */;
  %1155 = cast(%var_2754, dtype="uint64") /* ty=Tensor[(14, 99), uint64] */;
  %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1157 = cast(%1154, dtype="uint64") /* ty=Tensor[(14, 99), uint64] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  add(%1157, %1158) /* ty=Tensor[(14, 99), uint64] */
}

def @func_17680() -> (Tensor[(14, 11, 9), float32],) {
  %1159 = @func_16259() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1160 = %1159.0;
  (%1160,)
}

def @func_6698() -> (Tensor[(14, 99), float32],) {
  %1161 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %1162 = %1161.1;
  (%1162,)
}

def @func_18311() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %1163 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1164 = @func_13294() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1165 = @func_14886() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %1166 = %1163.1;
  %1167 = %1164.0;
  %1168 = %1165.7;
  (%1166, %1167, %1168)
}

def @func_13497() -> Tensor[(14, 11, 9), float32] {
  @func_7752() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_18578() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %1169 = @func_5019() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %1170 = @func_11991() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1171 = %1169.0;
  %1172 = %1170.0;
  (%1171, %1172)
}

def @func_18084() -> (Tensor[(14, 11, 9), float32],) {
  %1173 = @func_12853() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %1174 = %1173.3;
  (%1174,)
}

def @func_8549() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(980), float64]) {
  %1175 = @func_2585() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1176 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1177 = @func_8174() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) */;
  %1178 = %1175.1;
  %1179 = %1176.0;
  %1180 = %1177.1;
  (%1178, %1179, %1180)
}

def @func_2331() -> Tensor[(4, 15, 3), float64] {
  %1181 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %1181.0
}

def @func_9522(%var_9467: Tensor[(132), uint64]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
  %1182 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %1183 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %1184 = cast(%var_9467, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %1185 = reshape(%1184, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
  %1186 = %1182.0;
  %1187 = %1183.1;
  %1188 = @func_8595() /* ty=Tensor[(14, 11, 9), float32] */;
  %1189 = @func_4742(%1185) /* ty=Tensor[(6, 2, 11), uint64] */;
  (%1186, %1187, %1188, %1189, %var_9467)
}

def @func_20257() -> Tensor[(14, 11, 9), float32] {
  %1190 = @func_10187() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1190.0
}

def @func_15087(%var_15076: Tensor[(260), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64]) {
  %1191 = @func_2387() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1192 = cast(%var_15076, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1193 = reshape(%1192, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %1194 = @func_6842(%1193) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %1195 = %1191.0;
  %1196 = %1194.1;
  (%1195, %1196, %var_15076)
}

def @func_4492() -> Tensor[(2, 13, 10), float64] {
  %1197 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %1197.2
}

def @func_4542() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1198 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1199 = @func_3481() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1200 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1201 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1202 = %1198.0;
  %1203 = %1199.0;
  %1204 = %1200.0;
  %1205 = %1201.0;
  (%1202, %1203, %1204, %1205)
}

def @func_3464(%var_3457: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), bool],) {
  %1206 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1207 = %1206.0;
  %1208 = cast(%var_3457, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1209 = shape_of(%1207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1210 = cast(%1207, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1212 = less(%1210, %1211) /* ty=Tensor[(14, 11, 9), bool] */;
  (%1212,)
}

def @func_7854() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1213 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
  %1214 = %1213.2;
  %1215 = cast(%1214, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %1216 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1217 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %1218 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1219 = atan(%1215) /* ty=Tensor[(2, 13, 10), float64] */;
  %1220 = %1216.0;
  %1221 = %1217.1;
  %1222 = %1218.0;
  (%1219, %1220, %1221, %1222)
}

def @func_8477() -> (Tensor[(4, 15, 3), float64],) {
  %1223 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %1224 = %1223.0;
  (%1224,)
}

def @func_19238() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %1225 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %1226 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1227 = %1225.0;
  %1228 = %1226.0;
  (%1227, %1228)
}

def @func_5365() -> (Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) {
  %1229 = cast(meta[relay.Constant][30] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %1230 = reshape(%1229, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
  %1231 = @func_2764(%1230) /* ty=Tensor[(14, 99), uint64] */;
  %1232 = cast(%1231, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1233 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  %1234 = acosh(%1232) /* ty=Tensor[(14, 99), float64] */;
  (%1233, meta[relay.Constant][30] /* ty=Tensor[(1386), float32] */, %1234)
}

def @func_8879() -> (Tensor[(7, 198), bool],) {
  %1235 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %1236 = %1235.3;
  (%1236,)
}

def @func_16297() -> (Tensor[(14, 11, 9), float32],) {
  %1237 = @func_15629() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */;
  %1238 = %1237.0;
  (%1238,)
}

def @func_4119() -> Tensor[(14, 11, 9), float32] {
  @func_1693() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_8404(%var_8402: Tensor[(260), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) {
  %1239 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1240 = cast(%var_8402, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1241 = reshape(%1240, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1242 = @func_8148(%1241) /* ty=(Tensor[(14, 99), float64], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) */;
  %1243 = %1239.2;
  %1244 = %1242.1;
  (%1243, %1244, %var_8402)
}

def @func_17493() -> (Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) {
  %1245 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1246 = @func_14255() /* ty=Tensor[(6, 2, 11), uint64] */;
  %1247 = %1245.1;
  (%1246, %1247)
}

def @func_14255() -> Tensor[(6, 2, 11), uint64] {
  %1248 = @func_14001() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %1248.1
}

def @func_2422() -> (Tensor[(14, 11, 9), float32],) {
  %1249 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1249,)
}

def @func_18262() -> Tensor[(2, 13, 10), float32] {
  %1250 = @func_13936() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float32], Tensor[(14, 11, 9), float32]) */;
  %1250.1
}

def @func_2387() -> (Tensor[(14, 11, 9), float32],) {
  %1251 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1251,)
}

def @func_5222() -> Tensor[(14, 11, 9), float32] {
  %1252 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1252.0
}

def @func_9622(%var_9608: Tensor[(15, 2, 15), float32]) -> (Tensor[(15, 2, 15), float32],) {
  %1253 = cast(%var_9608, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %1254 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(15, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1255 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1257 = floor_mod(%1255, %1256) /* ty=Tensor[(15, 2, 15), float32] */;
  (%1257,)
}

def @func_11157() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1258 = @func_10541() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1259 = @func_10321() /* ty=Tensor[(14, 11, 9), float32] */;
  %1260 = %1258.2;
  (%1259, %1260)
}

def @func_11116() -> Tensor[(14, 99), float64] {
  %1261 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
  %1261.0
}

def @func_1442(%var_1425: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) {
  %1262 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1263 = %1262.3;
  %1264 = cast(%var_1425, dtype="uint32") /* ty=Tensor[(14, 11, 9), uint32] */;
  %1265 = shape_of(%1263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1266 = cast(%1263, dtype="uint32") /* ty=Tensor[(14, 11, 9), uint32] */;
  %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1268 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1269 = minimum(%1266, %1267) /* ty=Tensor[(14, 11, 9), uint32] */;
  %1270 = %1268.0;
  (%1269, %1270)
}

def @func_10420() -> Tensor[(14, 11, 9), float32] {
  %1271 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1271.0
}

def @func_4998() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) {
  %1272 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1273 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1274 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  %1275 = cast(%1274, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %1276 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %1277 = %1272.0;
  %1278 = %1273.0;
  %1279 = sinh(%1275) /* ty=Tensor[(2, 13, 10), float64] */;
  %1280 = %1276.2;
  (%1277, %1278, %1279, %1280)
}

def @func_9019() -> (Tensor[(14, 11, 9), float32],) {
  %1281 = @func_7246() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1282 = %1281.0;
  (%1282,)
}

def @func_8659(%var_8617: Tensor[(11, 13, 3), float32]) -> (Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) {
  %1283 = cast(%var_8617, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
  %1284 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(11, 13, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1285 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
  %1286 = dyn.reshape(%1283, %1284, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1287 = floor_mod(%1285, %1286) /* ty=Tensor[(11, 13, 3), float32] */;
  %1288 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1287, %1288)
}

def @func_10133() -> (Tensor[(14, 11, 9), float32],) {
  %1289 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1290 = %1289.0;
  (%1290,)
}

def @func_10541() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1291 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %1292 = @func_4162() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1293 = %1291.0;
  %1294 = @func_4619() /* ty=Tensor[(14, 11, 9), float32] */;
  %1295 = %1292.0;
  (%1293, %1294, %1295)
}

def @func_1977(%var_1939: Tensor[(360), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) {
  %1296 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1297 = cast(%var_1939, dtype="int16") /* ty=Tensor[(360), int16] */;
  %1298 = cast(%var_1939, dtype="int16") /* ty=Tensor[(360), int16] */;
  %1299 = %1296.0;
  %1300 = cast(%1299, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1301 = reshape(%1297, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
  %1302 = reshape(%1298, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
  %1303 = reshape(%1300, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %1304 = @func_1073(%1301, %1302, %1303) /* ty=(Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
  %1305 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1306 = %1304.1;
  %1307 = %1305.0;
  (%1299, %1306, %var_1939, %1307)
}

def @func_1805() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) {
  %1308 = @func_1678() /* ty=(Tensor[(7, 198), bool], Tensor[(7, 198), int8]) */;
  %1309 = @func_1489() /* ty=Tensor[(14, 11, 9), float32] */;
  %1310 = %1308.0;
  (%1309, %1310)
}

def @func_19607() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %1311 = @func_17516() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %1312 = @func_9019() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1313 = %1311.0;
  %1314 = %1312.0;
  (%1313, %1314)
}

def @func_6024() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
  %1315 = @func_3765() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) */;
  %1316 = %1315.1;
  %1317 = cast(%1316, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1318 = reshape(%1317, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %1319 = @func_1442(%1318) /* ty=(Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) */;
  %1320 = cast(%1316, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1321 = sinh(%1320) /* ty=Tensor[(14, 99), float32] */;
  %1322 = cast(%1316, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1323 = shape_of(%1321, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1324 = cast(%1321, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1325 = dyn.reshape(%1322, %1323, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1326 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
  %1327 = %1326.2;
  %1328 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  %1329 = cast(%1328, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %1330 = shape_of(%1327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1331 = cast(%1327, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %1332 = dyn.reshape(%1329, %1330, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1333 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1334 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1335 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
  %1336 = %1319.0;
  %1337 = subtract(%1324, %1325) /* ty=Tensor[(14, 99), float64] */;
  %1338 = divide(%1331, %1332) /* ty=Tensor[(2, 13, 10), float64] */;
  %1339 = %1333.2;
  %1340 = %1334.1;
  (%1335, %1336, %1337, %1338, %1339, %1340)
}

def @func_20044(%var_20028: Tensor[(14, 99), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), int8]) {
  %1341 = @func_8940() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %1342 = @func_2519() /* ty=Tensor[(14, 99), float32] */;
  %1343 = cast(%var_20028, dtype="int8") /* ty=Tensor[(14, 99), int8] */;
  %1344 = shape_of(%1342, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1345 = cast(%1342, dtype="int8") /* ty=Tensor[(14, 99), int8] */;
  %1346 = dyn.reshape(%1343, %1344, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1347 = %1341.0;
  %1348 = right_shift(%1345, %1346) /* ty=Tensor[(14, 99), int8] */;
  (%1347, %1348)
}

def @func_14350() -> (Tensor[(14, 11, 9), float32],) {
  %1349 = @func_12327() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1350 = %1349.0;
  (%1350,)
}

def @func_4907() -> (Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) {
  %1351 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %1352 = %1351.1;
  %1353 = @func_3291() /* ty=Tensor[(14, 99), int16] */;
  (%1352, %1353)
}

def @func_17576(%var_17538: Tensor[(2, 12, 1), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 12, ?), int64]) {
  %1354 = @func_14350() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1355 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1356 = @func_16856() /* ty=(Tensor[(7, 198), float32],) */;
  %1357 = @func_4162() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1358 = cast(%var_17538, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
  %1359 = atan(%1358) /* ty=Tensor[(2, 12, 1), float64] */;
  %1360 = cast(%var_17538, dtype="int64") /* ty=Tensor[(2, 12, 1), int64] */;
  %1361 = shape_of(%1359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1362 = cast(%1359, dtype="int64") /* ty=Tensor[(2, 12, 1), int64] */;
  %1363 = dyn.reshape(%1360, %1361, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1364 = %1354.0;
  %1365 = %1355.1;
  %1366 = %1356.0;
  %1367 = %1357.0;
  %1368 = bitwise_or(%1362, %1363) /* ty=Tensor[(2, 12, ?), int64] */;
  (%1364, %1365, %1366, %1367, %1368)
}

def @func_12601() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1369 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %1370 = cast(%1369, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %1371 = reshape(%1370, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %1372 = @func_1442(%1371) /* ty=(Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) */;
  %1373 = %1372.1;
  (%1369, %1373)
}

def @func_2841() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %1374 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %1375 = %1374.0;
  %1376 = cast(%1375, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1377 = reshape(%1376, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %1378 = @func_316(%1377) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %1379 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %1380 = %1378.0;
  %1381 = @func_1489() /* ty=Tensor[(14, 11, 9), float32] */;
  %1382 = %1379.0;
  %1383 = @func_1489() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1375, %1380, %1381, %1382, %1383)
}

def @func_18377() -> (Tensor[(14, 11, 9), float32],) {
  %1384 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1384,)
}

def @func_16081() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64]) {
  %1385 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %1386 = @func_15903() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1387 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %1388 = @func_7669() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %1389 = %1385.4;
  %1390 = %1386.0;
  %1391 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  %1392 = %1387.2;
  %1393 = @func_7025() /* ty=Tensor[(14, 11, 9), float32] */;
  %1394 = %1388.2;
  (%1389, %1390, %1391, %1392, %1393, %1394)
}

def @func_19062() -> (Tensor[(16, 7, 14), float32], Tensor[(14, 11, 9), float32]) {
  %1395 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 7, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 14), float32] */;
  %1396 = @func_18674() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1397 = atan(%1395) /* ty=Tensor[(16, 7, 14), float32] */;
  %1398 = %1396.1;
  (%1397, %1398)
}

def @func_3861() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) {
  %1399 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1400 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1401 = %1399.0;
  %1402 = cast(%1401, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1403 = reshape(%1402, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %1404 = @func_876(%1403) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1405 = %1400.0;
  %1406 = %1404.0;
  (%1401, %1405, %1406)
}

def @func_12569() -> (Tensor[(14, 99), float64], Tensor[(7, 198), float64]) {
  %1407 = @func_12196() /* ty=(Tensor[(7, 198), bool],) */;
  %1408 = %1407.0;
  %1409 = cast(%1408, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %1410 = @func_12338() /* ty=Tensor[(14, 99), float64] */;
  %1411 = erf(%1409) /* ty=Tensor[(7, 198), float64] */;
  (%1410, %1411)
}

def @func_19242() -> (Tensor[(14, 99), float32],) {
  %1412 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
  %1413 = %1412.0;
  (%1413,)
}

def @func_18887(%var_18796: float64) -> (Tensor[(6, 1, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1414 = cast(%var_18796, dtype="float64") /* ty=float64 */;
  %1415 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 1, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 3), float64] */;
  %1416 = @func_8980() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1417 = add(%1414, %1415) /* ty=Tensor[(6, 1, 3), float64] */;
  %1418 = %1416.1;
  %1419 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1417, %1418, %1419)
}

def @func_10965() -> (Tensor[(7, 198), bool], Tensor[(14, 99), float64]) {
  %1420 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1421 = @func_5586() /* ty=(Tensor[(14, 99), float64],) */;
  %1422 = %1420.2;
  %1423 = %1421.0;
  (%1422, %1423)
}

def @func_7978(%var_7961: Tensor[(14, 99), float64], %var_7973: Tensor[(14, 99), int32]) -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) {
  %1424 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1425 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %1426 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
  %1427 = %1426.0;
  %1428 = cast(%var_7961, dtype="int32") /* ty=Tensor[(14, 99), int32] */;
  %1429 = shape_of(%1427, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1430 = cast(%1427, dtype="int32") /* ty=Tensor[(14, 99), int32] */;
  %1431 = dyn.reshape(%1428, %1429, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1432 = bitwise_and(%1430, %1431) /* ty=Tensor[(14, 99), int32] */;
  %1433 = cast(%var_7973, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %1434 = shape_of(%1432, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1435 = cast(%1432, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %1436 = dyn.reshape(%1433, %1434, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1437 = %1424.3;
  %1438 = %1425.1;
  %1439 = greater(%1435, %1436) /* ty=Tensor[(14, 99), bool] */;
  (%1437, %1438, %1439)
}

def @func_19477() -> (Tensor[(14, 11, 9), float32],) {
  %1440 = @func_8510() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1440,)
}

def @func_15491() -> (Tensor[(14, 11, 9), float32],) {
  %1441 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1442 = %1441.0;
  (%1442,)
}

def @func_11378() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1443 = @func_10551() /* ty=(Tensor[(14, 99), bool],) */;
  %1444 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1445 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1446 = %1443.0;
  %1447 = @func_9139() /* ty=Tensor[(14, 11, 9), float32] */;
  %1448 = %1444.0;
  %1449 = %1445.0;
  (%1446, %1447, %1448, %1449)
}

def @func_19845() -> (Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64], Tensor[(2, 13, 10), float64]) {
  %1450 = @func_11520() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) */;
  %1451 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1452 = @func_3765() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) */;
  %1453 = %1450.4;
  %1454 = cast(%1453, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1455 = %1451.2;
  %1456 = cast(%1455, dtype="int32") /* ty=Tensor[(14, 11, 9), int32] */;
  %1457 = reshape(%1454, newshape=[14, 99]) /* ty=Tensor[(14, 99), float64] */;
  %1458 = reshape(%1456, newshape=[14, 99]) /* ty=Tensor[(14, 99), int32] */;
  %1459 = @func_7978(%1457, %1458) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) */;
  %1460 = @func_19521() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %1461 = %1452.1;
  %1462 = %1459.0;
  %1463 = @func_6468() /* ty=Tensor[(4, 15, 3), float64] */;
  %1464 = %1460.0;
  (%1453, %1455, %1461, %1462, %1463, %1464)
}

def @func_3395() -> (Tensor[(14, 11, 9), float32],) {
  %1465 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1466 = %1465.0;
  (%1466,)
}

def @func_15629() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
  %1467 = @func_4119() /* ty=Tensor[(14, 11, 9), float32] */;
  %1468 = @func_7454() /* ty=Tensor[(14, 11, 9), float32] */;
  %1469 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  %1470 = @func_5222() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1467, %1468, %1469, %1470)
}

def @func_6779() -> Tensor[(14, 11, 9), float32] {
  %1471 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1471.0
}

def @func_3945() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) {
  %1472 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1473 = @func_3481() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1474 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1475 = %1472.0;
  %1476 = %1473.0;
  %1477 = %1474.1;
  (%1475, %1476, %1477)
}

def @func_5391() -> Tensor[(4, 15, 3), float32] {
  %1478 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1478.0
}

def @main(%var_20380: Tensor[(2, 12, 10), float32]) -> (Tensor[(2, 12, 10), float32],) {
  %1479 = cast(%var_20380, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %1480 = asin(%1479) /* ty=Tensor[(2, 12, 10), float32] */;
  (%1480,)
}

def @func_7454() -> Tensor[(14, 11, 9), float32] {
  %1481 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1481.1
}

def @func_12062() -> (Tensor[(14, 11, 9), float32],) {
  %1482 = @func_11520() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) */;
  %1483 = %1482.1;
  (%1483,)
}

def @func_8268() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) {
  %1484 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1485 = @func_6636() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) */;
  %1486 = %1484.0;
  %1487 = %1485.1;
  (%1486, %1487)
}

def @func_5586() -> (Tensor[(14, 99), float64],) {
  %1488 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
  %1489 = %1488.1;
  %1490 = cast(%1489, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1491 = atan(%1490) /* ty=Tensor[(14, 99), float64] */;
  (%1491,)
}

def @func_19295() -> Tensor[(14, 11, 9), float32] {
  %1492 = @func_9929() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1492.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6895() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
  %0 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
  %1 = cast(%0, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %2 = reshape(%1, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %4 = reshape(%3, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
  %5 = @func_2764(%2) /* ty=Tensor[(14, 99), uint64] */;
  %6 = @func_4742(%4) /* ty=Tensor[(6, 2, 11), uint64] */;
  (%0, %5, %6, meta[relay.Constant][0] /* ty=Tensor[(132), uint64] */)
}

def @func_5417() -> Tensor[(14, 11, 9), float32] {
  %7 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %7.0
}

def @func_2203(%var_2201: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), float64],) {
  @func_2200(%var_2201) /* ty=(Tensor[(14, 11, 9), float64],) */
}

def @func_3256() -> (Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) {
  %8 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %9 = %8.0;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %11 = cast(%9, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %12 = sqrt(%11) /* ty=Tensor[(2, 13, 10), float32] */;
  %13 = cast(%9, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %17 = multiply(%15, %16) /* ty=Tensor[(2, 13, 10), float64] */;
  %18 = cast(%17, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %19 = cast(%17, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %20 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %21 = log2(%10) /* ty=Tensor[(2, 13, 10), float64] */;
  %22 = cos(%18) /* ty=Tensor[(2, 13, 10), float32] */;
  %23 = erf(%19) /* ty=Tensor[(2, 13, 10), float64] */;
  %24 = %20.0;
  (%21, %22, %23, %24)
}

def @func_20047(%var_20045: Tensor[(14, 99), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), int8]) {
  @func_20044(%var_20045) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), int8]) */
}

def @func_3312() -> (Tensor[(14, 11, 9), float32],) {
  @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_12327() -> (Tensor[(14, 11, 9), float32],) {
  %25 = @func_8595() /* ty=Tensor[(14, 11, 9), float32] */;
  (%25,)
}

def @func_9748() -> (Tensor[(4, 15, 3), float64],) {
  %26 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %27 = %26.0;
  (%27,)
}

def @func_6795() -> (Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) {
  %28 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %29 = %28.0;
  %30 = cast(%29, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %31 = @func_5167() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %32 = cosh(%30) /* ty=Tensor[(14, 99), float64] */;
  %33 = %31.1;
  (%32, %33)
}

def @func_3483() -> (Tensor[(14, 11, 9), float32],) {
  @func_3481() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_11563() -> (Tensor[(14, 99), bool],) {
  %36 = fn () -> (Tensor[(14, 99), bool],) {
    %34 = @func_8576() /* ty=(Tensor[(14, 99), bool],) */;
    %35 = %34.0;
    (%35,)
  };
  %36() /* ty=(Tensor[(14, 99), bool],) */
}

def @func_15788() -> (Tensor[(14, 11, 9), float32], Tensor[(3, 2, 6), float64], Tensor[(3, 12), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  @func_15786() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(3, 2, 6), float64], Tensor[(3, 12), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_13499() -> Tensor[(14, 11, 9), float32] {
  @func_13497() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_4119() -> Tensor[(14, 11, 9), float32] {
  @func_1693() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_6842(%var_6815: Tensor[(2, 13, 10), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) {
  %37 = @func_4542() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %38 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %39 = %38.0;
  %40 = cast(%var_6815, dtype="int32") /* ty=Tensor[(2, 13, 10), int32] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="int32") /* ty=Tensor[(2, 13, 10), int32] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %44 = cast(%39, dtype="uint64") /* ty=Tensor[(2, 13, 10), uint64] */;
  %45 = shape_of(%var_6815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%var_6815, dtype="uint64") /* ty=Tensor[(2, 13, 10), uint64] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %48 = @func_6381() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %49 = %37.3;
  %50 = logical_xor(%42, %43) /* ty=Tensor[(2, 13, 10), int32] */;
  %51 = bitwise_and(%46, %47) /* ty=Tensor[(2, 13, 10), uint64] */;
  %52 = %48.0;
  (%49, %50, %51, %52)
}

def @func_13569() -> Tensor[(14, 11, 9), float32] {
  @func_13567() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_1489() -> Tensor[(14, 11, 9), float32] {
  %53 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %53.0
}

def @func_19521() -> (Tensor[(2, 13, 10), float64],) {
  %54 = @func_11836() /* ty=Tensor[(2, 13, 10), float64] */;
  (%54,)
}

def @func_2469() -> Tensor[(4, 15, 3), float64] {
  %55 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %55.0
}

def @func_10187() -> (Tensor[(14, 11, 9), float32],) {
  %56 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %57 = %56.0;
  (%57,)
}

def @func_12775() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) {
  %58 = @func_3861() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) */;
  %59 = %58.0;
  %60 = @func_11116() /* ty=Tensor[(14, 99), float64] */;
  (%59, %60)
}

def @func_13747() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
  %64 = fn () -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
    %61 = @func_9160() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %62 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
    %63 = %61.0;
    (%62, %63)
  };
  %64() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_2650(%var_2648: Tensor[(180, 2), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) {
  @func_2647(%var_2648) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) */
}

def @func_1678() -> (Tensor[(7, 198), bool], Tensor[(7, 198), int8]) {
  %65 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %66 = %65.2;
  %67 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 198), bool] */, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(2), int32] */;
  %69 = cast(%66, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %71 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 198), bool] */, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %72 = shape_of(%66, dtype="int32") /* ty=Tensor[(2), int32] */;
  %73 = cast(%66, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %75 = minimum(%73, %74) /* ty=Tensor[(7, 198), int8] */;
  %76 = cast(%66, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(2), int32] */;
  %78 = cast(%75, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %80 = greater_equal(%69, %70) /* ty=Tensor[(7, 198), bool] */;
  %81 = left_shift(%78, %79) /* ty=Tensor[(7, 198), int8] */;
  (%80, %81)
}

def @func_1445(%var_1443: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) {
  @func_1442(%var_1443) /* ty=(Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) */
}

def @func_1980(%var_1978: Tensor[(360), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) {
  @func_1977(%var_1978) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */
}

def @func_4745(%var_4743: Tensor[(6, 2, 11), uint64]) -> Tensor[(6, 2, 11), uint64] {
  @func_4742(%var_4743) /* ty=Tensor[(6, 2, 11), uint64] */
}

def @func_18627() -> Tensor[(14, 11, 9), float32] {
  @func_18625() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_14216() -> (Tensor[(132), uint64], Tensor[(7, 198), float64]) {
  @func_14214() /* ty=(Tensor[(132), uint64], Tensor[(7, 198), float64]) */
}

def @func_16298() -> (Tensor[(14, 11, 9), float32],) {
  %84 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %82 = @func_15629() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */;
    %83 = %82.0;
    (%83,)
  };
  %84() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_2720() -> (Tensor[(14, 11, 9), float32],) {
  %85 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%85,)
}

def @func_13035() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  @func_13033() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_16164() -> (Tensor[(132), uint64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), int8]) {
  %86 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %87 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %88 = %87.4;
  %89 = @func_5522() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %90 = %89.0;
  %91 = cast(%90, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %92 = shape_of(%88, dtype="int32") /* ty=Tensor[(2), int32] */;
  %93 = cast(%88, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %95 = less_equal(%93, %94) /* ty=Tensor[(7, 198), bool] */;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %97 = sinh(%96) /* ty=Tensor[(7, 198), float64] */;
  %98 = @func_11622() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %99 = %98.0;
  %100 = cast(%99, dtype="float64") /* ty=Tensor[(14, 11, 9), float64] */;
  %101 = shape_of(%97, dtype="int32") /* ty=Tensor[(2), int32] */;
  %102 = cast(%97, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %104 = mod(%102, %103) /* ty=Tensor[(7, 198), float64] */;
  %105 = cast(%97, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(2), int32] */;
  %107 = cast(%104, dtype="int8") /* ty=Tensor[(7, 198), int8] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %109 = %86.3;
  %110 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  %111 = bitwise_and(%107, %108) /* ty=Tensor[(7, 198), int8] */;
  (%109, %110, %111)
}

def @func_15437() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_15435() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_12885() -> (Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(14, 99), int32]) {
  %125 = fn () -> (Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(14, 99), int32]) {
    %112 = cast(meta[relay.Constant][2] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %113 = reshape(%112, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
    %114 = @func_9622(%113) /* ty=(Tensor[(15, 2, 15), float32],) */;
    %115 = @func_7171() /* ty=(Tensor[(14, 99), float64],) */;
    %116 = %115.0;
    %117 = @func_9019() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %118 = %117.0;
    %119 = cast(%118, dtype="int32") /* ty=Tensor[(14, 11, 9), int32] */;
    %120 = shape_of(%116, dtype="int32") /* ty=Tensor[(2), int32] */;
    %121 = cast(%116, dtype="int32") /* ty=Tensor[(14, 99), int32] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %123 = %114.0;
    %124 = maximum(%121, %122) /* ty=Tensor[(14, 99), int32] */;
    (%123, meta[relay.Constant][2] /* ty=Tensor[(450), float32] */, %124)
  };
  %125() /* ty=(Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(14, 99), int32]) */
}

def @func_11837() -> Tensor[(2, 13, 10), float64] {
  %127 = fn () -> Tensor[(2, 13, 10), float64] {
    %126 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
    %126.0
  };
  %127() /* ty=Tensor[(2, 13, 10), float64] */
}

def @func_9215(%var_9204: Tensor[(11, 5, 9), float64]) -> (Tensor[(11, 5, 9), float64],) {
  %128 = cast(%var_9204, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  %129 = atanh(%128) /* ty=Tensor[(11, 5, 9), float64] */;
  (%129,)
}

def @func_2141() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
  %134 = fn () -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
    %130 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %131 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %132 = %130.0;
    %133 = %131.1;
    (%132, %133)
  };
  %134() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */
}

def @func_19932() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), bool], Tensor[(260), float64]) {
  @func_19930() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), bool], Tensor[(260), float64]) */
}

def @func_18263() -> Tensor[(2, 13, 10), float32] {
  %136 = fn () -> Tensor[(2, 13, 10), float32] {
    %135 = @func_13936() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float32], Tensor[(14, 11, 9), float32]) */;
    %135.1
  };
  %136() /* ty=Tensor[(2, 13, 10), float32] */
}

def @func_17228() -> (Tensor[(14, 11, 9), float32],) {
  @func_17226() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_5587() -> (Tensor[(14, 99), float64],) {
  %141 = fn () -> (Tensor[(14, 99), float64],) {
    %137 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
    %138 = %137.1;
    %139 = cast(%138, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
    %140 = atan(%139) /* ty=Tensor[(14, 99), float64] */;
    (%140,)
  };
  %141() /* ty=(Tensor[(14, 99), float64],) */
}

def @func_7500() -> Tensor[(14, 11, 9), float32] {
  %142 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %142.3
}

def @func_1977(%var_1939: Tensor[(360), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) {
  %143 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %144 = cast(%var_1939, dtype="int16") /* ty=Tensor[(360), int16] */;
  %145 = cast(%var_1939, dtype="int16") /* ty=Tensor[(360), int16] */;
  %146 = %143.0;
  %147 = cast(%146, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %148 = reshape(%144, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
  %149 = reshape(%145, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
  %150 = reshape(%147, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %151 = @func_1073(%148, %149, %150) /* ty=(Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
  %152 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %153 = %151.1;
  %154 = %152.0;
  (%146, %153, %var_1939, %154)
}

def @func_5703() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  @func_5701() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_6897() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
  @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */
}

def @func_5658() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) {
  %163 = fn () -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) {
    %155 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
    %156 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
    %157 = cast(%156, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %158 = reshape(%157, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
    %159 = @func_3672(%158) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) */;
    %160 = %155.0;
    %161 = @func_5222() /* ty=Tensor[(14, 11, 9), float32] */;
    %162 = %159.2;
    (%160, %156, %161, %162)
  };
  %163() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */
}

def @func_2931() -> (Tensor[(14, 11, 9), float32],) {
  %167 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %164 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
    %165 = cast(%164, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
    %166 = tan(%165) /* ty=Tensor[(14, 11, 9), float32] */;
    (%166,)
  };
  %167() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_3396() -> (Tensor[(14, 11, 9), float32],) {
  %170 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %168 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %169 = %168.0;
    (%169,)
  };
  %170() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_10629() -> (Tensor[(14, 11, 9), float32],) {
  %173 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %171 = @func_4392() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
    %172 = %171.0;
    (%172,)
  };
  %173() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_13406() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %174 = @func_13269() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float32]) */;
  %175 = @func_10593() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %176 = %174.2;
  %177 = %175.0;
  (%176, %177)
}

def @func_13592() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %182 = fn () -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
    %178 = @func_5019() /* ty=(Tensor[(4, 15, 3), float32],) */;
    %179 = @func_7669() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
    %180 = %178.0;
    %181 = %179.0;
    (%180, %181)
  };
  %182() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_17957() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), float64]) {
  %189 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), float64]) {
    %183 = @func_10449() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %184 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %185 = @func_11807() /* ty=(Tensor[(14, 99), float64],) */;
    %186 = %183.0;
    %187 = %184.0;
    %188 = %185.0;
    (%186, %187, %188)
  };
  %189() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), float64]) */
}

def @func_4494() -> Tensor[(2, 13, 10), float64] {
  @func_4492() /* ty=Tensor[(2, 13, 10), float64] */
}

def @func_4322() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_9737() -> (Tensor[(14, 11, 9), float32],) {
  @func_9735() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_6781() -> Tensor[(14, 11, 9), float32] {
  @func_6779() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_8577() -> (Tensor[(14, 99), bool],) {
  %191 = fn () -> (Tensor[(14, 99), bool],) {
    %190 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
    (%190,)
  };
  %191() /* ty=(Tensor[(14, 99), bool],) */
}

def @func_17271() -> (Tensor[(1, 4, 10), uint8], Tensor[(2, 13, 10), float64]) {
  %192 = cast(meta[relay.Constant][3] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %193 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 4, 10), uint8] */, dtype="uint8") /* ty=Tensor[(1, 4, 10), uint8] */;
  %194 = @func_10301() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %195 = right_shift(%192, %193) /* ty=Tensor[(1, 4, 10), uint8] */;
  %196 = %194.0;
  (%195, %196)
}

def @func_3481() -> (Tensor[(14, 11, 9), float32],) {
  %197 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %198 = %197.0;
  (%198,)
}

def @func_18312() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %205 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
    %199 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %200 = @func_13294() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %201 = @func_14886() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
    %202 = %199.1;
    %203 = %200.0;
    %204 = %201.7;
    (%202, %203, %204)
  };
  %205() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_14002() -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
  %211 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
    %206 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %207 = cast(meta[relay.Constant][5] /* ty=Tensor[(132), uint64] */, dtype="uint64") /* ty=Tensor[(132), uint64] */;
    %208 = reshape(%207, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
    %209 = %206.3;
    %210 = @func_4742(%208) /* ty=Tensor[(6, 2, 11), uint64] */;
    (%209, %210, meta[relay.Constant][5] /* ty=Tensor[(132), uint64] */)
  };
  %211() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */
}

def @func_3138() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) {
  @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */
}

def @func_7754() -> Tensor[(14, 11, 9), float32] {
  @func_7752() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_9930() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %216 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %212 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
    %213 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %214 = %212.1;
    %215 = %213.0;
    (%214, %215)
  };
  %216() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_3674(%var_3673: Tensor[(7, 198), bool]) -> (Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) {
  %231 = fn (%var_3610: Tensor[(7, 198), bool]) -> (Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) {
    %217 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %218 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %219 = %218.2;
    %220 = cast(%var_3610, dtype="int64") /* ty=Tensor[(7, 198), int64] */;
    %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(2), int32] */;
    %222 = cast(%219, dtype="int64") /* ty=Tensor[(7, 198), int64] */;
    %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %224 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 198), bool] */, dtype="int16") /* ty=Tensor[(7, 198), int16] */;
    %225 = shape_of(%219, dtype="int32") /* ty=Tensor[(2), int32] */;
    %226 = cast(%219, dtype="int16") /* ty=Tensor[(7, 198), int16] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %228 = %217.0;
    %229 = add(%222, %223) /* ty=Tensor[(7, 198), int64] */;
    %230 = bitwise_or(%226, %227) /* ty=Tensor[(7, 198), int16] */;
    (%228, %229, %230)
  };
  %231(%var_3673) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) */
}

def @func_10595() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
  @func_10593() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */
}

def @func_1508() -> (Tensor[(14, 11, 9), float32],) {
  %232 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %233 = %232.0;
  (%233,)
}

def @func_16315() -> (Tensor[(14, 99), float32],) {
  %236 = fn () -> (Tensor[(14, 99), float32],) {
    %234 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %235 = %234.1;
    (%235,)
  };
  %236() /* ty=(Tensor[(14, 99), float32],) */
}

def @func_2304() -> Tensor[(14, 11, 9), float32] {
  @func_1693() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_17273() -> (Tensor[(1, 4, 10), uint8], Tensor[(2, 13, 10), float64]) {
  @func_17271() /* ty=(Tensor[(1, 4, 10), uint8], Tensor[(2, 13, 10), float64]) */
}

def @func_10451() -> (Tensor[(14, 11, 9), float32],) {
  @func_10449() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_14289() -> (Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
  %243 = fn () -> (Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
    %237 = @func_12196() /* ty=(Tensor[(7, 198), bool],) */;
    %238 = %237.0;
    %239 = cast(%238, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
    %240 = reshape(%239, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
    %241 = @func_13205(%240) /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */;
    %242 = %241.1;
    (%238, %242)
  };
  %243() /* ty=(Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_18168() -> Tensor[(4, 15, 3), float64] {
  @func_18166() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_4598() -> (Tensor[(14, 11, 9), float32],) {
  %244 = @func_4162() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %245 = %244.0;
  (%245,)
}

def @func_19477() -> (Tensor[(14, 11, 9), float32],) {
  %246 = @func_8510() /* ty=Tensor[(14, 11, 9), float32] */;
  (%246,)
}

def @func_13190(%var_13188: Tensor[(132), uint64], %var_13189: Tensor[(429, 1), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64], Tensor[(11, 13, 3), float32], Tensor[(429, 1), float32], Tensor[(14, 11, 9), float32]) {
  @func_13186(%var_13188, %var_13189) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64], Tensor[(11, 13, 3), float32], Tensor[(429, 1), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_14256() -> Tensor[(6, 2, 11), uint64] {
  %248 = fn () -> Tensor[(6, 2, 11), uint64] {
    %247 = @func_14001() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
    %247.1
  };
  %248() /* ty=Tensor[(6, 2, 11), uint64] */
}

def @func_5247() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 392), float32]) {
  %255 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 392), float32]) {
    %249 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %250 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 392), float32] */, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
    %251 = reshape(%250, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
    %252 = @func_3352(%251) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
    %253 = %249.0;
    %254 = %252.1;
    (%253, %254, meta[relay.Constant][7] /* ty=Tensor[(2, 392), float32] */)
  };
  %255() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 392), float32]) */
}

def @func_12329() -> (Tensor[(14, 11, 9), float32],) {
  @func_12327() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_15949() -> (Tensor[(14, 99), bool], Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) {
  %256 = @func_11520() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) */;
  %257 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %258 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %259 = %256.5;
  %260 = %257.2;
  %261 = %258.0;
  (%259, %260, %261)
}

def @func_20005() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %262 = @func_16814() /* ty=Tensor[(14, 11, 9), float32] */;
  %263 = @func_13123() /* ty=Tensor[(4, 15, 3), float64] */;
  (%262, %263)
}

def @func_3464(%var_3457: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), bool],) {
  %264 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %265 = %264.0;
  %266 = cast(%var_3457, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %270 = less(%268, %269) /* ty=Tensor[(14, 11, 9), bool] */;
  (%270,)
}

def @func_3292() -> Tensor[(14, 99), int16] {
  %277 = fn () -> Tensor[(14, 99), int16] {
    %271 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %272 = %271.1;
    %273 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 99), float32] */, dtype="int16") /* ty=Tensor[(14, 99), int16] */;
    %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(2), int32] */;
    %275 = cast(%272, dtype="int16") /* ty=Tensor[(14, 99), int16] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    bitwise_xor(%275, %276) /* ty=Tensor[(14, 99), int16] */
  };
  %277() /* ty=Tensor[(14, 99), int16] */
}

def @func_7026() -> Tensor[(14, 11, 9), float32] {
  %279 = fn () -> Tensor[(14, 11, 9), float32] {
    %278 = @func_3861() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) */;
    %278.0
  };
  %279() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_18208() -> Tensor[(14, 11, 9), float32] {
  %280 = @func_11378() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %280.3
}

def @func_15905() -> (Tensor[(14, 11, 9), float32],) {
  @func_15903() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_16669(%var_16659: Tensor[(2, 180), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 180), int16]) {
  %281 = @func_11991() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %282 = cast(%var_16659, dtype="int16") /* ty=Tensor[(2, 180), int16] */;
  %283 = reshape(%282, newshape=[180, 2]) /* ty=Tensor[(180, 2), int16] */;
  %284 = @func_2647(%283) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) */;
  %285 = %281.0;
  %286 = %284.1;
  (%285, %286, %var_16659)
}

def @func_6374() -> (Tensor[(14, 11, 9), float32],) {
  @func_6372() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_16814() -> Tensor[(14, 11, 9), float32] {
  %287 = @func_12853() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %287.0
}

def @func_11015() -> Tensor[(14, 11, 9), float32] {
  @func_11013() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_10189() -> (Tensor[(14, 11, 9), float32],) {
  @func_10187() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_16816() -> Tensor[(14, 11, 9), float32] {
  @func_16814() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_876(%var_835: Tensor[(1386), bool]) -> (Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %288 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 15), float32] */;
  %289 = cast(%var_835, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %290 = reshape(%289, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %291 = @func_316(%290) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %292 = %291.1;
  %293 = cast(%292, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %294 = reshape(%293, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %295 = @func_316(%294) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %296 = cast(%var_835, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %297 = reshape(%296, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %298 = @func_316(%297) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %299 = cast(%var_835, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %300 = reshape(%299, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %301 = @func_316(%300) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %302 = sinh(%288) /* ty=Tensor[(10, 10, 15), float32] */;
  %303 = %295.1;
  %304 = %298.1;
  %305 = %301.1;
  (%302, %292, %var_835, %303, %304, %305)
}

def @func_8511() -> Tensor[(14, 11, 9), float32] {
  %306 = fn () -> Tensor[(14, 11, 9), float32] {
    @func_7149() /* ty=Tensor[(14, 11, 9), float32] */
  };
  %306() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_17101() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float32], Tensor[(14, 11, 9), float32]) {
  %319 = fn () -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float32], Tensor[(14, 11, 9), float32]) {
    %307 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %308 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %309 = cast(meta[relay.Constant][10] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
    %310 = reshape(%309, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
    %311 = @func_3352(%310) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
    %312 = @func_14127() /* ty=(Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %313 = @func_13356() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %314 = %307.0;
    %315 = %308.0;
    %316 = %311.0;
    %317 = %312.3;
    %318 = %313.0;
    (%314, %315, %316, meta[relay.Constant][10] /* ty=Tensor[(784), float32] */, %317, %318)
  };
  %319() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_2017() -> Tensor[(14, 11, 9), float32] {
  @func_2015() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_7502() -> Tensor[(14, 11, 9), float32] {
  @func_7500() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_2767(%var_2765: Tensor[(14, 99), float32]) -> Tensor[(14, 99), uint64] {
  @func_2764(%var_2765) /* ty=Tensor[(14, 99), uint64] */
}

def @func_17226() -> (Tensor[(14, 11, 9), float32],) {
  %320 = @func_10321() /* ty=Tensor[(14, 11, 9), float32] */;
  (%320,)
}

def @func_4948(%var_4947: Tensor[(14, 99), int16]) -> (Tensor[(14, 99), float64], Tensor[(7, 198), bool]) {
  %332 = fn (%var_4927: Tensor[(14, 99), int16]) -> (Tensor[(14, 99), float64], Tensor[(7, 198), bool]) {
    %321 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
    %322 = %321.1;
    %323 = cast(%var_4927, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %324 = shape_of(%322, dtype="int32") /* ty=Tensor[(2), int32] */;
    %325 = cast(%322, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %327 = logical_and(%325, %326) /* ty=Tensor[(14, 99), bool] */;
    %328 = cast(%327, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
    %329 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %330 = asinh(%328) /* ty=Tensor[(14, 99), float64] */;
    %331 = %329.2;
    (%330, %331)
  };
  %332(%var_4947) /* ty=(Tensor[(14, 99), float64], Tensor[(7, 198), bool]) */
}

def @func_14886() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %333 = @func_6636() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) */;
  %334 = @func_11157() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %335 = @func_12601() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %336 = @func_9160() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %337 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %338 = @func_5059() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %339 = %333.1;
  %340 = %334.1;
  %341 = @func_8510() /* ty=Tensor[(14, 11, 9), float32] */;
  %342 = %335.1;
  %343 = %336.0;
  %344 = %337.2;
  %345 = @func_10321() /* ty=Tensor[(14, 11, 9), float32] */;
  %346 = %338.1;
  (%339, %340, %341, %342, %343, %344, %345, %346)
}

def @func_15492() -> (Tensor[(14, 11, 9), float32],) {
  %349 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %347 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %348 = %347.0;
    (%348,)
  };
  %349() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_19737() -> Tensor[(14, 11, 9), float32] {
  @func_19735() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_2519() -> Tensor[(14, 99), float32] {
  %350 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %350.1
}

def @func_7247() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %359 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %351 = @func_3861() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) */;
    %352 = @func_5365() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) */;
    %353 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %354 = @func_5246() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 392), float32]) */;
    %355 = %351.0;
    %356 = %352.2;
    %357 = %353.0;
    %358 = %354.0;
    (%355, %356, %357, %358)
  };
  %359() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_16081() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64]) {
  %360 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %361 = @func_15903() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %362 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %363 = @func_7669() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %364 = %360.4;
  %365 = %361.0;
  %366 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  %367 = %362.2;
  %368 = @func_7025() /* ty=Tensor[(14, 11, 9), float32] */;
  %369 = %363.2;
  (%364, %365, %366, %367, %368, %369)
}

def @func_10321() -> Tensor[(14, 11, 9), float32] {
  %370 = @func_9929() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %370.0
}

def @func_18788(%var_18786: Tensor[(9, 15, 8), int32], %var_18787: Tensor[(9, 15, 8), int32]) -> (Tensor[(9, 15, 8), int32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %378 = fn (%var_18754: Tensor[(9, 15, 8), int32], %var_18755: Tensor[(9, 15, 8), int32]) -> (Tensor[(9, 15, 8), int32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %371 = cast(%var_18755, dtype="int32") /* ty=Tensor[(9, 15, 8), int32] */;
    %372 = shape_of(%var_18754, dtype="int32") /* ty=Tensor[(3), int32] */;
    %373 = cast(%var_18754, dtype="int32") /* ty=Tensor[(9, 15, 8), int32] */;
    %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %375 = multiply(%373, %374) /* ty=Tensor[(9, 15, 8), int32] */;
    %376 = @func_7537() /* ty=Tensor[(14, 11, 9), float32] */;
    %377 = @func_16814() /* ty=Tensor[(14, 11, 9), float32] */;
    (%375, %376, %377)
  };
  %378(%var_18786, %var_18787) /* ty=(Tensor[(9, 15, 8), int32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_13186(%var_13137: Tensor[(132), uint64], %var_13162: Tensor[(429, 1), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64], Tensor[(11, 13, 3), float32], Tensor[(429, 1), float32], Tensor[(14, 11, 9), float32]) {
  %379 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %380 = cast(%var_13137, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %381 = reshape(%380, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
  %382 = cast(%var_13162, dtype="float32") /* ty=Tensor[(429, 1), float32] */;
  %383 = reshape(%382, newshape=[11, 13, 3]) /* ty=Tensor[(11, 13, 3), float32] */;
  %384 = @func_8659(%383) /* ty=(Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %385 = @func_7246() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %386 = %379.0;
  %387 = @func_4742(%381) /* ty=Tensor[(6, 2, 11), uint64] */;
  %388 = %384.0;
  %389 = %385.3;
  (%386, %387, %var_13137, %388, %var_13162, %389)
}

def @func_18210() -> Tensor[(14, 11, 9), float32] {
  @func_18208() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_14609(%var_14607: Tensor[(7, 3, 16), uint8], %var_14608: Tensor[(7, 3, 16), uint8]) -> (Tensor[(7, 3, 16), uint8], Tensor[(14, 11, 9), float32]) {
  %397 = fn (%var_14598: Tensor[(7, 3, 16), uint8], %var_14599: Tensor[(7, 3, 16), uint8]) -> (Tensor[(7, 3, 16), uint8], Tensor[(14, 11, 9), float32]) {
    %390 = cast(%var_14599, dtype="uint8") /* ty=Tensor[(7, 3, 16), uint8] */;
    %391 = shape_of(%var_14598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %392 = cast(%var_14598, dtype="uint8") /* ty=Tensor[(7, 3, 16), uint8] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %394 = @func_10187() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %395 = multiply(%392, %393) /* ty=Tensor[(7, 3, 16), uint8] */;
    %396 = %394.0;
    (%395, %396)
  };
  %397(%var_14607, %var_14608) /* ty=(Tensor[(7, 3, 16), uint8], Tensor[(14, 11, 9), float32]) */
}

def @func_2471() -> Tensor[(4, 15, 3), float64] {
  @func_2469() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_4542() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %398 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %399 = @func_3481() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %400 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %401 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %402 = %398.0;
  %403 = %399.0;
  %404 = %400.0;
  %405 = %401.0;
  (%402, %403, %404, %405)
}

def @func_19359(%var_19325: Tensor[(260), float64], %var_19346: Tensor[(132), uint64], %var_19347: Tensor[(13, 33), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(132), uint64], Tensor[(13, 33), float32]) {
  %406 = @func_17226() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %407 = cast(%var_19325, dtype="float64") /* ty=Tensor[(260), float64] */;
  %408 = reshape(%407, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %409 = @func_6842(%408) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %410 = cast(%var_19346, dtype="uint64") /* ty=Tensor[(132), uint64] */;
  %411 = cast(%var_19347, dtype="float32") /* ty=Tensor[(13, 33), float32] */;
  %412 = reshape(%410, newshape=[132]) /* ty=Tensor[(132), uint64] */;
  %413 = reshape(%411, newshape=[429, 1]) /* ty=Tensor[(429, 1), float32] */;
  %414 = @func_13186(%412, %413) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64], Tensor[(11, 13, 3), float32], Tensor[(429, 1), float32], Tensor[(14, 11, 9), float32]) */;
  %415 = %406.0;
  %416 = %409.3;
  %417 = %414.0;
  (%415, %416, %var_19325, %417, %var_19346, %var_19347)
}

def @func_17493() -> (Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) {
  %418 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %419 = @func_14255() /* ty=Tensor[(6, 2, 11), uint64] */;
  %420 = %418.1;
  (%419, %420)
}

def @func_19445(%var_19377: Tensor[(1, 10, 5), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(?, 10, 5), bool]) {
  %421 = @func_14350() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %422 = %421.0;
  %423 = cast(%422, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %424 = reshape(%423, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %425 = @func_3672(%424) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) */;
  %426 = cast(%var_19377, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
  %427 = log(%426) /* ty=Tensor[(1, 10, 5), float64] */;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(1, 10, 5), float32] */;
  %429 = sin(%428) /* ty=Tensor[(1, 10, 5), float32] */;
  %430 = cast(%429, dtype="int32") /* ty=Tensor[(1, 10, 5), int32] */;
  %431 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%427, dtype="int32") /* ty=Tensor[(1, 10, 5), int32] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %434 = minimum(%432, %433) /* ty=Tensor[(?, 10, 5), int32] */;
  %435 = cast(%427, dtype="bool") /* ty=Tensor[(1, 10, 5), bool] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="bool") /* ty=Tensor[(?, 10, 5), bool] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %439 = logical_and(%437, %438) /* ty=Tensor[(?, 10, 5), bool] */;
  %440 = cast(%439, dtype="bool") /* ty=Tensor[(?, 10, 5), bool] */;
  %441 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%427, dtype="bool") /* ty=Tensor[(1, 10, 5), bool] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %444 = %425.0;
  %445 = logical_or(%442, %443) /* ty=Tensor[(?, 10, 5), bool] */;
  (%422, %444, %445)
}

def @func_19909() -> Tensor[(2, 13, 10), float64] {
  %447 = fn () -> Tensor[(2, 13, 10), float64] {
    %446 = @func_11228() /* ty=(Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %446.1
  };
  %447() /* ty=Tensor[(2, 13, 10), float64] */
}

def @func_10541() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %448 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %449 = @func_4162() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %450 = %448.0;
  %451 = @func_4619() /* ty=Tensor[(14, 11, 9), float32] */;
  %452 = %449.0;
  (%450, %451, %452)
}

def @func_7752() -> Tensor[(14, 11, 9), float32] {
  %453 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %453.0
}

def @func_8269() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) {
  %458 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) {
    %454 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %455 = @func_6636() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) */;
    %456 = %454.0;
    %457 = %455.1;
    (%456, %457)
  };
  %458() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) */
}

def @func_19735() -> Tensor[(14, 11, 9), float32] {
  %459 = @func_16897() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %459.0
}

def @func_15090(%var_15088: Tensor[(260), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64]) {
  @func_15087(%var_15088) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64]) */
}

def @func_9424() -> (Tensor[(14, 11, 9), float32],) {
  %462 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %460 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
    %461 = %460.0;
    (%461,)
  };
  %462() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_18956() -> Tensor[(14, 99), float64] {
  @func_12338() /* ty=Tensor[(14, 99), float64] */
}

def @func_12682() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %463 = @func_9396() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %464 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
  %465 = %463.0;
  (%464, %465)
}

def @func_16031() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
  %466 = @func_10148() /* ty=Tensor[(14, 11, 9), float32] */;
  %467 = cast(%466, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %468 = reshape(%467, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
  %469 = @func_13205(%468) /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */;
  %470 = @func_7537() /* ty=Tensor[(14, 11, 9), float32] */;
  %471 = %469.0;
  %472 = @func_4119() /* ty=Tensor[(14, 11, 9), float32] */;
  (%466, %470, %471, %472)
}

def @func_1807() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) {
  @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */
}

def @func_12684() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_12682() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_4162() -> (Tensor[(14, 11, 9), float32],) {
  %473 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %474 = %473.0;
  (%474,)
}

def @func_5168() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %493 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
    %475 = cast(meta[relay.Constant][11] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
    %476 = reshape(%475, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
    %477 = @func_3352(%476) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
    %478 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
    %479 = cast(%478, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %480 = reshape(%479, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
    %481 = @func_3672(%480) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(7, 198), int64], Tensor[(7, 198), int16]) */;
    %482 = %481.1;
    %483 = cast(%482, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
    %484 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
    %485 = cast(%484, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %486 = reshape(%485, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
    %487 = @func_316(%486) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
    %488 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %489 = %477.0;
    %490 = tan(%483) /* ty=Tensor[(7, 198), float64] */;
    %491 = %487.0;
    %492 = %488.0;
    (%478, %484, %489, meta[relay.Constant][11] /* ty=Tensor[(784), float32] */, %490, %491, %492)
  };
  %493() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_1805() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) {
  %494 = @func_1678() /* ty=(Tensor[(7, 198), bool], Tensor[(7, 198), int8]) */;
  %495 = @func_1489() /* ty=Tensor[(14, 11, 9), float32] */;
  %496 = %494.0;
  (%495, %496)
}

def @func_11118() -> Tensor[(14, 99), float64] {
  @func_11116() /* ty=Tensor[(14, 99), float64] */
}

def @func_11066() -> (Tensor[(14, 11, 9), float32],) {
  @func_11064() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_5465(%var_5464: Tensor[(6, 2, 8), uint32]) -> (Tensor[(6, 2, 8), bool], Tensor[(14, 11, 9), float32]) {
  %504 = fn (%var_5453: Tensor[(6, 2, 8), uint32]) -> (Tensor[(6, 2, 8), bool], Tensor[(14, 11, 9), float32]) {
    %497 = cast(%var_5453, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
    %498 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(6, 2, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %499 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 2, 8), uint32] */, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %501 = @func_4858() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %502 = equal(%499, %500) /* ty=Tensor[(6, 2, 8), bool] */;
    %503 = %501.1;
    (%502, %503)
  };
  %504(%var_5464) /* ty=(Tensor[(6, 2, 8), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_16096() -> (Tensor[(4, 15, 3), float32],) {
  %507 = fn () -> (Tensor[(4, 15, 3), float32],) {
    %505 = @func_5019() /* ty=(Tensor[(4, 15, 3), float32],) */;
    %506 = %505.0;
    (%506,)
  };
  %507() /* ty=(Tensor[(4, 15, 3), float32],) */
}

def @func_5701() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %508 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %509 = %508.0;
  %510 = @func_5222() /* ty=Tensor[(14, 11, 9), float32] */;
  (%509, %510)
}

def @func_17391() -> (Tensor[(14, 99), float32],) {
  @func_17389() /* ty=(Tensor[(14, 99), float32],) */
}

def @func_18625() -> Tensor[(14, 11, 9), float32] {
  %511 = @func_16259() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %511.0
}

def @func_4600() -> (Tensor[(14, 11, 9), float32],) {
  @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_7004(%var_7002: Tensor[(260), float64]) -> (Tensor[(14, 99), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) {
  @func_7001(%var_7002) /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) */
}

def @func_18729() -> (Tensor[(14, 11, 9), float32],) {
  %512 = @func_11013() /* ty=Tensor[(14, 11, 9), float32] */;
  (%512,)
}

def @func_14557() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %516 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %513 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %514 = %513.0;
    %515 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
    (%514, %515)
  };
  %516() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_20361(%var_20360: uint32) -> (Tensor[(8, 12, 5), uint32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
  %524 = fn (%var_20339: uint32) -> (Tensor[(8, 12, 5), uint32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
    %517 = cast(%var_20339, dtype="uint32") /* ty=uint32 */;
    %518 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 12, 5), uint32] */, dtype="uint32") /* ty=Tensor[(8, 12, 5), uint32] */;
    %519 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %520 = @func_14127() /* ty=(Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %521 = right_shift(%517, %518) /* ty=Tensor[(8, 12, 5), uint32] */;
    %522 = %519.0;
    %523 = %520.3;
    (%521, %522, %523)
  };
  %524(%var_20360) /* ty=(Tensor[(8, 12, 5), uint32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */
}

def @func_2387() -> (Tensor[(14, 11, 9), float32],) {
  %525 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%525,)
}

def @func_8551() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(980), float64]) {
  @func_8549() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(980), float64]) */
}

def @func_16221() -> (Tensor[(14, 11, 9), float32],) {
  %528 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %526 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %527 = %526.0;
    (%527,)
  };
  %528() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_10929() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_10927() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_17516() -> (Tensor[(2, 13, 10), float64],) {
  %529 = @func_11228() /* ty=(Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %530 = %529.1;
  (%530,)
}

def @func_2764(%var_2754: Tensor[(14, 99), float32]) -> Tensor[(14, 99), uint64] {
  %531 = @func_2519() /* ty=Tensor[(14, 99), float32] */;
  %532 = cast(%var_2754, dtype="uint64") /* ty=Tensor[(14, 99), uint64] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(2), int32] */;
  %534 = cast(%531, dtype="uint64") /* ty=Tensor[(14, 99), uint64] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  add(%534, %535) /* ty=Tensor[(14, 99), uint64] */
}

def @func_17819() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %536 = @func_9332() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */;
  %537 = @func_13294() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %538 = %536.0;
  %539 = %537.0;
  (%538, %539)
}

def @func_8478() -> (Tensor[(4, 15, 3), float64],) {
  %542 = fn () -> (Tensor[(4, 15, 3), float64],) {
    %540 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %541 = %540.0;
    (%541,)
  };
  %542() /* ty=(Tensor[(4, 15, 3), float64],) */
}

def @func_10422() -> Tensor[(14, 11, 9), float32] {
  @func_10420() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_2545() -> (Tensor[(2, 13, 10), float64],) {
  %545 = fn () -> (Tensor[(2, 13, 10), float64],) {
    %543 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
    %544 = exp(%543) /* ty=Tensor[(2, 13, 10), float64] */;
    (%544,)
  };
  %545() /* ty=(Tensor[(2, 13, 10), float64],) */
}

def @func_17734() -> Tensor[(14, 11, 9), float32] {
  %547 = fn () -> Tensor[(14, 11, 9), float32] {
    %546 = @func_15491() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %546.0
  };
  %547() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_11993() -> (Tensor[(14, 11, 9), float32],) {
  @func_11991() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_19946() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %553 = fn () -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %548 = @func_13746() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
    %549 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %550 = %548.0;
    %551 = %549.0;
    %552 = @func_18208() /* ty=Tensor[(14, 11, 9), float32] */;
    (%550, %551, %552)
  };
  %553() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_5771() -> (Tensor[(14, 11, 9), float32],) {
  %556 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %554 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %555 = %554.0;
    (%555,)
  };
  %556() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_17008() -> (Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), bool]) {
  %563 = fn () -> (Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), bool]) {
    %557 = @func_5701() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %558 = @func_14723() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %559 = @func_11378() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %560 = %557.0;
    %561 = %558.0;
    %562 = %559.0;
    (%560, %561, %562)
  };
  %563() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 99), bool]) */
}

def @func_17495() -> (Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) {
  @func_17493() /* ty=(Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) */
}

def @func_20044(%var_20028: Tensor[(14, 99), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), int8]) {
  %564 = @func_8940() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %565 = @func_2519() /* ty=Tensor[(14, 99), float32] */;
  %566 = cast(%var_20028, dtype="int8") /* ty=Tensor[(14, 99), int8] */;
  %567 = shape_of(%565, dtype="int32") /* ty=Tensor[(2), int32] */;
  %568 = cast(%565, dtype="int8") /* ty=Tensor[(14, 99), int8] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %570 = %564.0;
  %571 = right_shift(%568, %569) /* ty=Tensor[(14, 99), int8] */;
  (%570, %571)
}

def @func_4860() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_4858() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_10993() -> (Tensor[(14, 11, 9), float32],) {
  %574 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %572 = @func_9019() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %573 = %572.0;
    (%573,)
  };
  %574() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_18465() -> (Tensor[(14, 11, 9), float32], Tensor[(260, ?), float32], Tensor[(14, 11, 9), float32]) {
  %588 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(260, ?), float32], Tensor[(14, 11, 9), float32]) {
    %575 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %576 = cast(meta[relay.Constant][15] /* ty=Tensor[(260, 1), float64] */, dtype="float64") /* ty=Tensor[(260, 1), float64] */;
    %577 = reshape(%576, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %578 = @func_8404(%577) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) */;
    %579 = %578.1;
    %580 = cast(%579, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
    %581 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(260, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %582 = cast(meta[relay.Constant][15] /* ty=Tensor[(260, 1), float64] */, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
    %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %584 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
    %585 = %575.0;
    %586 = power(%582, %583) /* ty=Tensor[(260, ?), float32] */;
    %587 = %584.4;
    (%585, %586, %587)
  };
  %588() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(260, ?), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_1538() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
  %589 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %590 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 99), bool] */, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %591 = reshape(%590, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %592 = @func_316(%591) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %593 = %592.1;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %595 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(14, 99), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %596 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 99), bool] */, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %598 = %589.0;
  %599 = minimum(%596, %597) /* ty=Tensor[(14, 99), float32] */;
  (%598, %599)
}

def @func_13207(%var_13206: Tensor[(14, 99), float32]) -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
  %609 = fn (%var_13198: Tensor[(14, 99), float32]) -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
    %600 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %601 = %600.1;
    %602 = cast(%var_13198, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(2), int32] */;
    %604 = cast(%601, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %606 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
    %607 = greater_equal(%604, %605) /* ty=Tensor[(14, 99), bool] */;
    %608 = %606.1;
    (%607, %608)
  };
  %609(%var_13206) /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_20204() -> Tensor[(14, 11, 9), uint32] {
  @func_20202() /* ty=Tensor[(14, 11, 9), uint32] */
}

def @func_8175() -> (Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) {
  %616 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) {
    %610 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %611 = cast(meta[relay.Constant][17] /* ty=Tensor[(980), float64] */, dtype="float64") /* ty=Tensor[(980), float64] */;
    %612 = reshape(%611, newshape=[980]) /* ty=Tensor[(980), float64] */;
    %613 = @func_6539(%612) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) */;
    %614 = %610.0;
    %615 = %613.2;
    (%614, %615, meta[relay.Constant][17] /* ty=Tensor[(980), float64] */)
  };
  %616() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) */
}

def @func_6372() -> (Tensor[(14, 11, 9), float32],) {
  %617 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %618 = %617.0;
  (%618,)
}

def @func_11064() -> (Tensor[(14, 11, 9), float32],) {
  %619 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %620 = %619.0;
  (%620,)
}

def @func_5019() -> (Tensor[(4, 15, 3), float32],) {
  %621 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %622 = %621.0;
  (%622,)
}

def @func_16083() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64]) {
  @func_16081() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64]) */
}

def @func_15662() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) {
  %623 = @func_11378() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %624 = @func_15006() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %625 = @func_15491() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %626 = %623.3;
  %627 = %624.0;
  %628 = %625.0;
  (%626, %627, %628)
}

def @func_5392() -> Tensor[(4, 15, 3), float32] {
  %630 = fn () -> Tensor[(4, 15, 3), float32] {
    %629 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %629.0
  };
  %630() /* ty=Tensor[(4, 15, 3), float32] */
}

def @func_6135() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %636 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
    %631 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %632 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %633 = @func_4119() /* ty=Tensor[(14, 11, 9), float32] */;
    %634 = %631.0;
    %635 = %632.1;
    (%633, %634, %635)
  };
  %636() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_14888() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  @func_14886() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_9543() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
  @func_9541() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_1763() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) {
  %637 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %638 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %639 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %640 = %637.0;
  %641 = %638.2;
  (%639, %640, %641)
}

def @func_13936() -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float32], Tensor[(14, 11, 9), float32]) {
  %642 = @func_13406() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %643 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %644 = %643.2;
  %645 = cast(%644, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %646 = %642.1;
  %647 = sin(%645) /* ty=Tensor[(2, 13, 10), float32] */;
  %648 = @func_7454() /* ty=Tensor[(14, 11, 9), float32] */;
  (%646, %647, %648)
}

def @func_15569() -> (Tensor[(14, 99), uint64],) {
  %649 = @func_10119() /* ty=(Tensor[(14, 99), float32],) */;
  %650 = %649.0;
  %651 = @func_6381() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %652 = %651.0;
  %653 = cast(%652, dtype="uint64") /* ty=Tensor[(14, 11, 9), uint64] */;
  %654 = shape_of(%650, dtype="int32") /* ty=Tensor[(2), int32] */;
  %655 = cast(%650, dtype="uint64") /* ty=Tensor[(14, 99), uint64] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %657 = multiply(%655, %656) /* ty=Tensor[(14, 99), uint64] */;
  (%657,)
}

def @func_19479() -> (Tensor[(14, 11, 9), float32],) {
  @func_19477() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_2694(%var_2693: Tensor[(1386), bool]) -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) {
  %669 = fn (%var_2685: Tensor[(1386), bool]) -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) {
    %658 = cast(meta[relay.Constant][18] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
    %659 = cast(meta[relay.Constant][18] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
    %660 = cast(%var_2685, dtype="bool") /* ty=Tensor[(1386), bool] */;
    %661 = reshape(%658, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
    %662 = reshape(%659, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), int16] */;
    %663 = reshape(%660, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
    %664 = @func_1073(%661, %662, %663) /* ty=(Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
    %665 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %666 = @func_2469() /* ty=Tensor[(4, 15, 3), float64] */;
    %667 = %664.1;
    %668 = %665.0;
    (%666, %667, meta[relay.Constant][18] /* ty=Tensor[(360), int16] */, %var_2685, %668)
  };
  %669(%var_2693) /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_2843() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_6541(%var_6540: Tensor[(980), float64]) -> (Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) {
  %678 = fn (%var_6522: Tensor[(980), float64]) -> (Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) {
    %670 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
    %671 = cast(%var_6522, dtype="float64") /* ty=Tensor[(980), float64] */;
    %672 = cast(%var_6522, dtype="float64") /* ty=Tensor[(980), float64] */;
    %673 = reshape(%671, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
    %674 = reshape(%672, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
    %675 = @func_4689(%673, %674) /* ty=(Tensor[(7, 10, 14), float64], Tensor[(14, 99), int16], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
    %676 = %670.2;
    %677 = %675.0;
    (%676, %677, %var_6522)
  };
  %678(%var_6540) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) */
}

def @func_14128() -> (Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
  %687 = fn () -> (Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
    %679 = @func_9332() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */;
    %680 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %681 = @func_5701() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %682 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
    %683 = %679.1;
    %684 = %680.0;
    %685 = %681.0;
    %686 = %682.0;
    (%683, %684, %685, %686)
  };
  %687() /* ty=(Tensor[(7, 198), uint8], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */
}

def @func_2494() -> (Tensor[(14, 11, 9), float32],) {
  %690 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %688 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %689 = %688.0;
    (%689,)
  };
  %690() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_16672(%var_16670: Tensor[(2, 180), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 180), int16]) {
  @func_16669(%var_16670) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 180), int16]) */
}

def @func_19364(%var_19361: Tensor[(260), float64], %var_19362: Tensor[(132), uint64], %var_19363: Tensor[(13, 33), float32]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(132), uint64], Tensor[(13, 33), float32]) {
  @func_19359(%var_19361, %var_19362, %var_19363) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(132), uint64], Tensor[(13, 33), float32]) */
}

def @func_15786() -> (Tensor[(14, 11, 9), float32], Tensor[(3, 2, 6), float64], Tensor[(3, 12), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %691 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %692 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 12), float64] */;
  %693 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 12), float64] */;
  %694 = reshape(%692, newshape=[3, 2, 6]) /* ty=Tensor[(3, 2, 6), float64] */;
  %695 = reshape(%693, newshape=[3, 2, 6]) /* ty=Tensor[(3, 2, 6), float64] */;
  %696 = @func_3793(%694, %695) /* ty=(Tensor[(3, 2, 6), float64],) */;
  %697 = @func_12302() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %698 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %699 = %691.0;
  %700 = %696.0;
  %701 = %697.2;
  %702 = %698.1;
  (%699, %700, meta[relay.Constant][19] /* ty=Tensor[(3, 12), float64] */, %701, %702)
}

def @func_1491() -> Tensor[(14, 11, 9), float32] {
  @func_1489() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_3793(%var_3776: Tensor[(3, 2, 6), float64], %var_3777: Tensor[(3, 2, 6), float64]) -> (Tensor[(3, 2, 6), float64],) {
  %703 = cast(%var_3777, dtype="float64") /* ty=Tensor[(3, 2, 6), float64] */;
  %704 = shape_of(%var_3776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%var_3776, dtype="float64") /* ty=Tensor[(3, 2, 6), float64] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %707 = power(%705, %706) /* ty=Tensor[(3, 2, 6), float64] */;
  (%707,)
}

def @func_12064() -> (Tensor[(14, 11, 9), float32],) {
  @func_12062() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_8151(%var_8149: Tensor[(260), float64]) -> (Tensor[(14, 99), float64], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) {
  @func_8148(%var_8149) /* ty=(Tensor[(14, 99), float64], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) */
}

def @func_8549() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(980), float64]) {
  %708 = @func_2585() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %709 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %710 = @func_8174() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) */;
  %711 = %708.1;
  %712 = %709.0;
  %713 = %710.1;
  (%711, %712, %713)
}

def @func_7150() -> Tensor[(14, 11, 9), float32] {
  %715 = fn () -> Tensor[(14, 11, 9), float32] {
    %714 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %714.0
  };
  %715() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_4320() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %716 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %717 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %718 = %716.0;
  %719 = %717.0;
  (%718, %719)
}

def @func_11380() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_11378() /* ty=(Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_11791() -> (Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), bool]) {
  %720 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %721 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %722 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %723 = %720.0;
  %724 = %721.1;
  %725 = %722.2;
  (%723, %724, %725)
}

def @func_11991() -> (Tensor[(14, 11, 9), float32],) {
  %726 = @func_6372() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %727 = %726.0;
  (%727,)
}

def @func_10420() -> Tensor[(14, 11, 9), float32] {
  %728 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %728.0
}

def @func_14926() -> Tensor[(14, 11, 9), float32] {
  %730 = fn () -> Tensor[(14, 11, 9), float32] {
    %729 = @func_10541() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %729.0
  };
  %730() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_6274() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %731 = @func_3310() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %732 = @func_5701() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %733 = %731.0;
  %734 = %732.1;
  (%733, %734)
}

def @func_2332() -> Tensor[(4, 15, 3), float64] {
  %736 = fn () -> Tensor[(4, 15, 3), float64] {
    %735 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %735.0
  };
  %736() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_1510() -> (Tensor[(14, 11, 9), float32],) {
  @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_19296() -> Tensor[(14, 11, 9), float32] {
  %738 = fn () -> Tensor[(14, 11, 9), float32] {
    %737 = @func_9929() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %737.0
  };
  %738() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_1321() -> (Tensor[(14, 11, 9), float32],) {
  %739 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %740 = %739.1;
  (%740,)
}

def @func_5000() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) {
  @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */
}

def @func_4620() -> Tensor[(14, 11, 9), float32] {
  %741 = fn () -> Tensor[(14, 11, 9), float32] {
    @func_1489() /* ty=Tensor[(14, 11, 9), float32] */
  };
  %741() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_9675() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %746 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %742 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %743 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %744 = %742.0;
    %745 = %743.0;
    (%744, %745)
  };
  %746() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_13866() -> Tensor[(14, 11, 9), float32] {
  @func_9139() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_12062() -> (Tensor[(14, 11, 9), float32],) {
  %747 = @func_11520() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) */;
  %748 = %747.1;
  (%748,)
}

def @func_13294() -> (Tensor[(14, 11, 9), float32],) {
  %749 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
  %750 = %749.2;
  (%750,)
}

def @func_6845(%var_6843: Tensor[(2, 13, 10), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) {
  @func_6842(%var_6843) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */
}

def @func_19448(%var_19446: Tensor[(1, 10, 5), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(?, 10, 5), bool]) {
  @func_19445(%var_19446) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(?, 10, 5), bool]) */
}

def @func_13009() -> (Tensor[(14, 11, 9), float32],) {
  @func_13007() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_16166() -> (Tensor[(132), uint64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), int8]) {
  @func_16164() /* ty=(Tensor[(132), uint64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), int8]) */
}

def @func_4121() -> Tensor[(14, 11, 9), float32] {
  @func_4119() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_8572() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) {
  %757 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) {
    %751 = @func_4542() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %752 = %751.3;
    %753 = cast(%752, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %754 = reshape(%753, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
    %755 = @func_4016(%754) /* ty=(Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
    %756 = %755.0;
    (%752, %756)
  };
  %757() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */
}

def @func_1179() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
  @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_11622() -> (Tensor[(14, 11, 9), float32],) {
  %758 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %759 = %758.0;
  (%759,)
}

def @func_6470() -> Tensor[(4, 15, 3), float64] {
  @func_6468() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_19768() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %760 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
  %761 = %760.0;
  %762 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
  (%761, %762)
}

def @func_10543() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_10541() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_9020() -> (Tensor[(14, 11, 9), float32],) {
  %765 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %763 = @func_7246() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %764 = %763.0;
    (%764,)
  };
  %765() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_14399() -> (Tensor[(4, 15, 3), float32],) {
  %766 = @func_10863() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %767 = %766.0;
  (%767,)
}

def @func_10553() -> (Tensor[(14, 99), bool],) {
  @func_10551() /* ty=(Tensor[(14, 99), bool],) */
}

def @func_17389() -> (Tensor[(14, 99), float32],) {
  %768 = @func_10593() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %769 = %768.1;
  (%769,)
}

def @func_3797(%var_3795: Tensor[(3, 2, 6), float64], %var_3796: Tensor[(3, 2, 6), float64]) -> (Tensor[(3, 2, 6), float64],) {
  @func_3793(%var_3795, %var_3796) /* ty=(Tensor[(3, 2, 6), float64],) */
}

def @func_17144() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(7, 198), int8], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) {
  %780 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(7, 198), int8], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) {
    %770 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
    %771 = @func_11562() /* ty=(Tensor[(14, 99), bool],) */;
    %772 = @func_1678() /* ty=(Tensor[(7, 198), bool], Tensor[(7, 198), int8]) */;
    %773 = @func_10378() /* ty=(Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) */;
    %774 = @func_10628() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %775 = %770.1;
    %776 = %771.0;
    %777 = %772.1;
    %778 = %773.0;
    %779 = %774.0;
    (%775, %776, %777, %778, %779)
  };
  %780() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(7, 198), int8], Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_2306() -> Tensor[(14, 11, 9), float32] {
  @func_2304() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_8596() -> Tensor[(14, 11, 9), float32] {
  %782 = fn () -> Tensor[(14, 11, 9), float32] {
    %781 = @func_5522() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %781.0
  };
  %782() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_6437() -> Tensor[(14, 99), bool] {
  %796 = fn () -> Tensor[(14, 99), bool] {
    %783 = @func_5586() /* ty=(Tensor[(14, 99), float64],) */;
    %784 = %783.0;
    %785 = @func_4542() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %786 = %785.2;
    %787 = cast(%786, dtype="int64") /* ty=Tensor[(14, 11, 9), int64] */;
    %788 = shape_of(%784, dtype="int32") /* ty=Tensor[(2), int32] */;
    %789 = cast(%784, dtype="int64") /* ty=Tensor[(14, 99), int64] */;
    %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %791 = bitwise_or(%789, %790) /* ty=Tensor[(14, 99), int64] */;
    %792 = cast(%791, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %793 = shape_of(%784, dtype="int32") /* ty=Tensor[(2), int32] */;
    %794 = cast(%784, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    equal(%794, %795) /* ty=Tensor[(14, 99), bool] */
  };
  %796() /* ty=Tensor[(14, 99), bool] */
}

def @func_16858() -> (Tensor[(7, 198), float32],) {
  @func_16856() /* ty=(Tensor[(7, 198), float32],) */
}

def @func_17852() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32]) {
  %801 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32]) {
    %797 = @func_17031() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %798 = @func_14399() /* ty=(Tensor[(4, 15, 3), float32],) */;
    %799 = %797.1;
    %800 = %798.0;
    (%799, %800)
  };
  %801() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32]) */
}

def @func_6677() -> (Tensor[(14, 11, 9), float32],) {
  @func_6675() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_2422() -> (Tensor[(14, 11, 9), float32],) {
  %802 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
  (%802,)
}

def @func_10966() -> (Tensor[(7, 198), bool], Tensor[(14, 99), float64]) {
  %807 = fn () -> (Tensor[(7, 198), bool], Tensor[(14, 99), float64]) {
    %803 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %804 = @func_5586() /* ty=(Tensor[(14, 99), float64],) */;
    %805 = %803.2;
    %806 = %804.0;
    (%805, %806)
  };
  %807() /* ty=(Tensor[(7, 198), bool], Tensor[(14, 99), float64]) */
}

def @func_18055() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %808 = @func_6675() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %809 = @func_10669() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %810 = %808.0;
  %811 = %809.0;
  (%810, %811)
}

def @func_14045() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), int16]) {
  %818 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), int16]) {
    %812 = @func_11228() /* ty=(Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %813 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %814 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
    %815 = %812.3;
    %816 = %813.0;
    %817 = %814.1;
    (%815, %816, %817)
  };
  %818() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), int16]) */
}

def @func_17682() -> (Tensor[(14, 11, 9), float32],) {
  @func_17680() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_1177() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
  %819 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  %820 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 198), bool] */, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %821 = reshape(%820, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %822 = @func_876(%821) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %823 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 198), bool] */, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
  %824 = reshape(%823, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %825 = @func_316(%824) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %826 = log2(%819) /* ty=Tensor[(4, 15, 3), float32] */;
  %827 = %822.4;
  %828 = %825.1;
  (%826, %827, meta[relay.Constant][21] /* ty=Tensor[(7, 198), bool] */, %828)
}

def @func_7981(%var_7979: Tensor[(14, 99), float64], %var_7980: Tensor[(14, 99), int32]) -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) {
  %845 = fn (%var_7961: Tensor[(14, 99), float64], %var_7973: Tensor[(14, 99), int32]) -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) {
    %829 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %830 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
    %831 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
    %832 = %831.0;
    %833 = cast(%var_7961, dtype="int32") /* ty=Tensor[(14, 99), int32] */;
    %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(2), int32] */;
    %835 = cast(%832, dtype="int32") /* ty=Tensor[(14, 99), int32] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %837 = bitwise_and(%835, %836) /* ty=Tensor[(14, 99), int32] */;
    %838 = cast(%var_7973, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(2), int32] */;
    %840 = cast(%837, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %842 = %829.3;
    %843 = %830.1;
    %844 = greater(%840, %841) /* ty=Tensor[(14, 99), bool] */;
    (%842, %843, %844)
  };
  %845(%var_7979, %var_7980) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) */
}

def @func_2521() -> Tensor[(14, 99), float32] {
  @func_2519() /* ty=Tensor[(14, 99), float32] */
}

def @func_19903() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), uint32], Tensor[(4, 15, 3), float64]) {
  %846 = @func_17271() /* ty=(Tensor[(1, 4, 10), uint8], Tensor[(2, 13, 10), float64]) */;
  %847 = @func_15006() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %848 = @func_10836() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %849 = %846.1;
  %850 = %847.0;
  %851 = %848.0;
  (%849, %850, %851)
}

def @func_5021() -> (Tensor[(4, 15, 3), float32],) {
  @func_5019() /* ty=(Tensor[(4, 15, 3), float32],) */
}

def @func_4692(%var_4690: Tensor[(7, 10, 14), float64], %var_4691: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), float64], Tensor[(14, 99), int16], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %862 = fn (%var_4641: Tensor[(7, 10, 14), float64], %var_4642: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), float64], Tensor[(14, 99), int16], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
    %852 = cast(%var_4642, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
    %853 = shape_of(%var_4641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %854 = cast(%var_4641, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %856 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
    %857 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %858 = divide(%854, %855) /* ty=Tensor[(7, 10, 14), float64] */;
    %859 = @func_3291() /* ty=Tensor[(14, 99), int16] */;
    %860 = %856.0;
    %861 = %857.0;
    (%858, %859, %860, %861)
  };
  %862(%var_4690, %var_4691) /* ty=(Tensor[(7, 10, 14), float64], Tensor[(14, 99), int16], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_4544() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_4542() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_8358() -> (Tensor[(14, 11, 9), float32],) {
  %865 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %863 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %864 = %863.0;
    (%864,)
  };
  %865() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_9218(%var_9216: Tensor[(11, 5, 9), float64]) -> (Tensor[(11, 5, 9), float64],) {
  @func_9215(%var_9216) /* ty=(Tensor[(11, 5, 9), float64],) */
}

def @func_14350() -> (Tensor[(14, 11, 9), float32],) {
  %866 = @func_12327() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %867 = %866.0;
  (%867,)
}

def @func_6743() -> (Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_8036() -> (Tensor[(14, 11, 9), float32],) {
  @func_8034() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_9735() -> (Tensor[(14, 11, 9), float32],) {
  %868 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
  %869 = %868.2;
  (%869,)
}

def @func_15664() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) {
  @func_15662() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) */
}

def @func_9141() -> Tensor[(14, 11, 9), float32] {
  @func_9139() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_11420() -> Tensor[(14, 11, 9), float32] {
  %870 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
  %870.1
}

def @func_11422() -> Tensor[(14, 11, 9), float32] {
  @func_11420() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_16700() -> Tensor[(14, 11, 9), float32] {
  %872 = fn () -> Tensor[(14, 11, 9), float32] {
    %871 = @func_14556() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %871.1
  };
  %872() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_7539() -> Tensor[(14, 11, 9), float32] {
  @func_7537() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_14401() -> (Tensor[(4, 15, 3), float32],) {
  @func_14399() /* ty=(Tensor[(4, 15, 3), float32],) */
}

def @func_11197() -> (Tensor[(980), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_11195() /* ty=(Tensor[(980), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_1078(%var_1075: Tensor[(10, 6, 6), int16], %var_1076: Tensor[(10, 6, 6), int16], %var_1077: Tensor[(1386), bool]) -> (Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) {
  @func_1073(%var_1075, %var_1076, %var_1077) /* ty=(Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_2647(%var_2640: Tensor[(180, 2), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) {
  %873 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  %874 = cast(%873, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %875 = reshape(%874, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %876 = @func_2200(%875) /* ty=(Tensor[(14, 11, 9), float64],) */;
  %877 = cast(%var_2640, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
  %878 = reshape(%877, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %879 = @func_1977(%878) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %880 = %876.0;
  %881 = %879.0;
  %882 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%873, %880, %881, %var_2640, %882)
}

def @func_5522() -> (Tensor[(14, 11, 9), float32],) {
  %883 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  (%883,)
}

def @func_4908() -> (Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) {
  %887 = fn () -> (Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) {
    %884 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
    %885 = %884.1;
    %886 = @func_3291() /* ty=Tensor[(14, 99), int16] */;
    (%885, %886)
  };
  %887() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */
}

def @func_19542() -> (Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32]) {
  @func_19540() /* ty=(Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_10670() -> (Tensor[(14, 11, 9), float32],) {
  %890 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %888 = @func_10628() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %889 = %888.0;
    (%889,)
  };
  %890() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_11228() -> (Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %891 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
  %892 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %893 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %894 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %895 = %891.1;
  %896 = %892.0;
  %897 = %893.1;
  %898 = %894.1;
  (%895, %896, %897, %898)
}

def @func_11158() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %902 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %899 = @func_10541() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %900 = @func_10321() /* ty=Tensor[(14, 11, 9), float32] */;
    %901 = %899.2;
    (%900, %901)
  };
  %902() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_11884() -> (Tensor[(14, 11, 9), float32],) {
  %903 = @func_10593() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
  %904 = %903.0;
  (%904,)
}

def @func_15095() -> Tensor[(14, 11, 9), float32] {
  %905 = fn () -> Tensor[(14, 11, 9), float32] {
    @func_2304() /* ty=Tensor[(14, 11, 9), float32] */
  };
  %905() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_8034() -> (Tensor[(14, 11, 9), float32],) {
  %906 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %907 = %906.0;
  (%907,)
}

def @func_16194() -> (Tensor[(4, 15, 3), float64],) {
  @func_16192() /* ty=(Tensor[(4, 15, 3), float64],) */
}

def @func_10927() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %908 = @func_4392() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
  %909 = %908.0;
  %910 = cast(%909, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %911 = reshape(%910, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %912 = @func_876(%911) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %913 = %912.3;
  (%909, %913)
}

def @func_13271() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float32]) {
  @func_13269() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float32]) */
}

def @func_3136() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) {
  %914 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %915 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %916 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %917 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %918 = %914.0;
  %919 = cast(%918, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %920 = reshape(%919, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %921 = @func_2692(%920) /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
  %922 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %923 = cast(meta[relay.Constant][22] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %924 = reshape(%923, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %925 = @func_1977(%924) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %926 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %927 = %915.0;
  %928 = %916.0;
  %929 = %917.2;
  %930 = %921.4;
  %931 = %922.1;
  %932 = %925.0;
  %933 = %926.0;
  (%918, %927, %928, %929, %930, %931, %932, meta[relay.Constant][22] /* ty=Tensor[(360), int16] */, %933)
}

def @func_10449() -> (Tensor[(14, 11, 9), float32],) {
  %934 = @func_4858() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %935 = %934.0;
  (%935,)
}

def @func_9524(%var_9523: Tensor[(132), uint64]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
  %944 = fn (%var_9467: Tensor[(132), uint64]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) {
    %936 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
    %937 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
    %938 = cast(%var_9467, dtype="uint64") /* ty=Tensor[(132), uint64] */;
    %939 = reshape(%938, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
    %940 = %936.0;
    %941 = %937.1;
    %942 = @func_8595() /* ty=Tensor[(14, 11, 9), float32] */;
    %943 = @func_4742(%939) /* ty=Tensor[(6, 2, 11), uint64] */;
    (%940, %941, %942, %943, %var_9467)
  };
  %944(%var_9523) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */
}

def @func_318(%var_317: Tensor[(14, 11, 9), bool]) -> (Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %957 = fn (%var_269: Tensor[(14, 11, 9), bool]) -> (Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
    %945 = cast(%var_269, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %946 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(14, 11, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %947 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 11, 9), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %949 = logical_and(%947, %948) /* ty=Tensor[(14, 11, 9), bool] */;
    %950 = cast(%949, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %951 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(14, 11, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %952 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 11, 9), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %954 = cast(%var_269, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
    %955 = less_equal(%952, %953) /* ty=Tensor[(14, 11, 9), bool] */;
    %956 = cosh(%954) /* ty=Tensor[(14, 11, 9), float32] */;
    (%955, %956)
  };
  %957(%var_317) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_2424() -> (Tensor[(14, 11, 9), float32],) {
  @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_10636() -> (Tensor[(2, 13, 10), float64],) {
  %959 = fn () -> (Tensor[(2, 13, 10), float64],) {
    %958 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
    (%958,)
  };
  %959() /* ty=(Tensor[(2, 13, 10), float64],) */
}

def @func_2841() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %960 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
  %961 = %960.0;
  %962 = cast(%961, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %963 = reshape(%962, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), bool] */;
  %964 = @func_316(%963) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
  %965 = @func_2140() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %966 = %964.0;
  %967 = @func_1489() /* ty=Tensor[(14, 11, 9), float32] */;
  %968 = %965.0;
  %969 = @func_1489() /* ty=Tensor[(14, 11, 9), float32] */;
  (%961, %966, %967, %968, %969)
}

def @func_2389() -> (Tensor[(14, 11, 9), float32],) {
  @func_2387() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_7537() -> Tensor[(14, 11, 9), float32] {
  @func_7149() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_9625(%var_9623: Tensor[(15, 2, 15), float32]) -> (Tensor[(15, 2, 15), float32],) {
  @func_9622(%var_9623) /* ty=(Tensor[(15, 2, 15), float32],) */
}

def @func_13549() -> (Tensor[(4, 15, 3), float64],) {
  %972 = fn () -> (Tensor[(4, 15, 3), float64],) {
    %970 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %971 = %970.0;
    (%971,)
  };
  %972() /* ty=(Tensor[(4, 15, 3), float64],) */
}

def @func_4164() -> (Tensor[(14, 11, 9), float32],) {
  @func_4162() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_13124() -> Tensor[(4, 15, 3), float64] {
  %976 = fn () -> Tensor[(4, 15, 3), float64] {
    %973 = @func_10378() /* ty=(Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) */;
    %974 = %973.1;
    %975 = cast(%974, dtype="float64") /* ty=Tensor[(4, 15, 3), float64] */;
    log10(%975) /* ty=Tensor[(4, 15, 3), float64] */
  };
  %976() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_6025() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
  %1003 = fn () -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) {
    %977 = @func_3765() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) */;
    %978 = %977.1;
    %979 = cast(%978, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
    %980 = reshape(%979, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
    %981 = @func_1442(%980) /* ty=(Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) */;
    %982 = cast(%978, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
    %983 = sinh(%982) /* ty=Tensor[(14, 99), float32] */;
    %984 = cast(%978, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
    %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(2), int32] */;
    %986 = cast(%983, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %988 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
    %989 = %988.2;
    %990 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
    %991 = cast(%990, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
    %992 = shape_of(%989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %993 = cast(%989, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
    %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %995 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %996 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %997 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
    %998 = %981.0;
    %999 = subtract(%986, %987) /* ty=Tensor[(14, 99), float64] */;
    %1000 = divide(%993, %994) /* ty=Tensor[(2, 13, 10), float64] */;
    %1001 = %995.2;
    %1002 = %996.1;
    (%997, %998, %999, %1000, %1001, %1002)
  };
  %1003() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_1364() -> (Tensor[(14, 11, 9), float32],) {
  %1004 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1005 = %1004.0;
  (%1005,)
}

def @func_5524() -> (Tensor[(14, 11, 9), float32],) {
  @func_5522() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_5061() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  @func_5059() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_879(%var_877: Tensor[(1386), bool]) -> (Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_876(%var_877) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_10593() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
  %1006 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1007 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %1008 = %1006.0;
  %1009 = %1007.0;
  (%1008, %1009)
}

def @func_5223() -> Tensor[(14, 11, 9), float32] {
  %1011 = fn () -> Tensor[(14, 11, 9), float32] {
    %1010 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1010.0
  };
  %1011() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_9139() -> Tensor[(14, 11, 9), float32] {
  @func_7500() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_9161() -> (Tensor[(14, 11, 9), float32],) {
  %1014 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %1012 = @func_7854() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %1013 = %1012.3;
    (%1013,)
  };
  %1014() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_3258() -> (Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) {
  @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */
}

def @func_14683() -> (Tensor[(2, 13, 10), float64],) {
  %1016 = fn () -> (Tensor[(2, 13, 10), float64],) {
    %1015 = @func_11836() /* ty=Tensor[(2, 13, 10), float64] */;
    (%1015,)
  };
  %1016() /* ty=(Tensor[(2, 13, 10), float64],) */
}

def @func_11013() -> Tensor[(14, 11, 9), float32] {
  %1017 = @func_9423() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1017.0
}

def @func_16261() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_16259() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_16456() -> (Tensor[(14, 11, 9), uint32],) {
  %1018 = @func_15006() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %1019 = %1018.0;
  (%1019,)
}

def @func_10863() -> (Tensor[(4, 15, 3), float32],) {
  %1020 = @func_5391() /* ty=Tensor[(4, 15, 3), float32] */;
  (%1020,)
}

def @func_12603() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_12601() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_2118() -> (Tensor[(4, 15, 3), float64],) {
  %1027 = fn () -> (Tensor[(4, 15, 3), float64],) {
    %1021 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %1022 = %1021.0;
    %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(4, 15, 3), float64] */;
    %1024 = atanh(%1023) /* ty=Tensor[(4, 15, 3), float64] */;
    %1025 = cast(%1024, dtype="float64") /* ty=Tensor[(4, 15, 3), float64] */;
    %1026 = sin(%1025) /* ty=Tensor[(4, 15, 3), float64] */;
    (%1026,)
  };
  %1027() /* ty=(Tensor[(4, 15, 3), float64],) */
}

def @func_4360() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) {
  @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */
}

def @func_8661(%var_8660: Tensor[(11, 13, 3), float32]) -> (Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) {
  %1034 = fn (%var_8617: Tensor[(11, 13, 3), float32]) -> (Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) {
    %1028 = cast(%var_8617, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
    %1029 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(11, 13, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1030 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
    %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1032 = floor_mod(%1030, %1031) /* ty=Tensor[(11, 13, 3), float32] */;
    %1033 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
    (%1032, %1033)
  };
  %1034(%var_8660) /* ty=(Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_14776() -> Tensor[(14, 11, 9), float32] {
  %1035 = fn () -> Tensor[(14, 11, 9), float32] {
    @func_7752() /* ty=Tensor[(14, 11, 9), float32] */
  };
  %1035() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_9622(%var_9608: Tensor[(15, 2, 15), float32]) -> (Tensor[(15, 2, 15), float32],) {
  %1036 = cast(%var_9608, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %1037 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(15, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1040 = floor_mod(%1038, %1039) /* ty=Tensor[(15, 2, 15), float32] */;
  (%1040,)
}

def @func_1540() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) {
  @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */
}

def @func_6797() -> (Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) {
  @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_11521() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) {
  %1056 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) {
    %1041 = @func_8940() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
    %1042 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %1043 = %1042.2;
    %1044 = cast(%1043, dtype="bool") /* ty=Tensor[(7, 198), bool] */;
    %1045 = reshape(%1044, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
    %1046 = @func_2692(%1045) /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
    %1047 = @func_10119() /* ty=(Tensor[(14, 99), float32],) */;
    %1048 = %1047.0;
    %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
    %1050 = @func_10551() /* ty=(Tensor[(14, 99), bool],) */;
    %1051 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
    %1052 = %1041.0;
    %1053 = %1046.3;
    %1054 = log(%1049) /* ty=Tensor[(14, 99), float64] */;
    %1055 = %1050.0;
    (%1051, %1052, %1043, %1053, %1054, %1055)
  };
  %1056() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) */
}

def @func_11945(%var_11943: int8, %var_11944: Tensor[(2, 9, 1), int8]) -> (Tensor[(2, 9, ?), float32],) {
  @func_11941(%var_11943, %var_11944) /* ty=(Tensor[(2, 9, ?), float32],) */
}

def @func_13567() -> Tensor[(14, 11, 9), float32] {
  %1057 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %1057.1
}

def @func_15007() -> (Tensor[(14, 11, 9), uint32],) {
  %1060 = fn () -> (Tensor[(14, 11, 9), uint32],) {
    %1058 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %1059 = %1058.1;
    (%1059,)
  };
  %1060() /* ty=(Tensor[(14, 11, 9), uint32],) */
}

def @func_11793() -> (Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), bool]) {
  @func_11791() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), bool]) */
}

def @func_17680() -> (Tensor[(14, 11, 9), float32],) {
  %1061 = @func_16259() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1062 = %1061.0;
  (%1062,)
}

def @func_13981(%var_13980: Tensor[(14, 70), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(14, 70), float64]) {
  %1068 = fn (%var_13955: Tensor[(14, 70), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(14, 70), float64]) {
    %1063 = cast(%var_13955, dtype="float64") /* ty=Tensor[(14, 70), float64] */;
    %1064 = reshape(%1063, newshape=[980]) /* ty=Tensor[(980), float64] */;
    %1065 = @func_6539(%1064) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(7, 10, 14), float64], Tensor[(980), float64]) */;
    %1066 = @func_11420() /* ty=Tensor[(14, 11, 9), float32] */;
    %1067 = %1065.2;
    (%1066, %1067, %var_13955)
  };
  %1068(%var_13980) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(14, 70), float64]) */
}

def @func_19153() -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %1074 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
    %1069 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %1070 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
    %1071 = %1069.0;
    %1072 = %1070.2;
    %1073 = @func_7149() /* ty=Tensor[(14, 11, 9), float32] */;
    (%1071, %1072, %1073)
  };
  %1074() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_17032() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1079 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %1075 = @func_12853() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
    %1076 = @func_8980() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %1077 = %1075.3;
    %1078 = %1076.0;
    (%1077, %1078)
  };
  %1079() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_1366() -> (Tensor[(14, 11, 9), float32],) {
  @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_2587() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  @func_2585() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_3946() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) {
  %1086 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) {
    %1080 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1081 = @func_3481() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1082 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %1083 = %1080.0;
    %1084 = %1081.0;
    %1085 = %1082.1;
    (%1083, %1084, %1085)
  };
  %1086() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */
}

def @func_13408() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  @func_13406() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_15630() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
  %1091 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
    %1087 = @func_4119() /* ty=Tensor[(14, 11, 9), float32] */;
    %1088 = @func_7454() /* ty=Tensor[(14, 11, 9), float32] */;
    %1089 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
    %1090 = @func_5222() /* ty=Tensor[(14, 11, 9), float32] */;
    (%1087, %1088, %1089, %1090)
  };
  %1091() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_2722() -> (Tensor[(14, 11, 9), float32],) {
  @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_4358() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) {
  %1092 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %1093 = cast(%1092, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %1094 = reshape(%1093, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %1095 = @func_2200(%1094) /* ty=(Tensor[(14, 11, 9), float64],) */;
  %1096 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
  %1097 = %1095.0;
  %1098 = %1096.0;
  (%1092, %1097, %1098)
}

def @func_12777() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) {
  @func_12775() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) */
}

def @func_3862() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) {
  %1107 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) {
    %1099 = @func_2930() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1100 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1101 = %1099.0;
    %1102 = cast(%1101, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %1103 = reshape(%1102, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
    %1104 = @func_876(%1103) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %1105 = %1100.0;
    %1106 = %1104.0;
    (%1101, %1105, %1106)
  };
  %1107() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(10, 10, 15), float32]) */
}

def @func_18355() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(429), float32]) {
  %1114 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(429), float32]) {
    %1108 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1109 = cast(meta[relay.Constant][26] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
    %1110 = reshape(%1109, newshape=[11, 13, 3]) /* ty=Tensor[(11, 13, 3), float32] */;
    %1111 = @func_8659(%1110) /* ty=(Tensor[(11, 13, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %1112 = %1108.0;
    %1113 = %1111.1;
    (%1112, %1113, meta[relay.Constant][26] /* ty=Tensor[(429), float32] */)
  };
  %1114() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(429), float32]) */
}

def @func_18731() -> (Tensor[(14, 11, 9), float32],) {
  @func_18729() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_5614() -> (Tensor[(784), float32],) {
  %1117 = fn () -> (Tensor[(784), float32],) {
    %1115 = @func_5167() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(7, 198), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */;
    %1116 = %1115.3;
    (%1116,)
  };
  %1117() /* ty=(Tensor[(784), float32],) */
}

def @func_18057() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_18055() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_9398() -> (Tensor[(14, 11, 9), float32],) {
  @func_9396() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_13868() -> Tensor[(14, 11, 9), float32] {
  @func_13866() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_15057() -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64]) {
  %1121 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64]) {
    %1118 = @func_14001() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
    %1119 = @func_13866() /* ty=Tensor[(14, 11, 9), float32] */;
    %1120 = %1118.1;
    (%1119, %1120)
  };
  %1121() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(6, 2, 11), uint64]) */
}

def @func_14724() -> (Tensor[(4, 15, 3), float64],) {
  %1124 = fn () -> (Tensor[(4, 15, 3), float64],) {
    %1122 = @func_8477() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %1123 = %1122.0;
    (%1123,)
  };
  %1124() /* ty=(Tensor[(4, 15, 3), float64],) */
}

def @func_15951() -> (Tensor[(14, 99), bool], Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) {
  @func_15949() /* ty=(Tensor[(14, 99), bool], Tensor[(6, 2, 11), uint64], Tensor[(14, 11, 9), float32]) */
}

def @func_18379() -> (Tensor[(14, 11, 9), float32],) {
  @func_18377() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_18085() -> (Tensor[(14, 11, 9), float32],) {
  %1127 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %1125 = @func_12853() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */;
    %1126 = %1125.3;
    (%1126,)
  };
  %1127() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_8981() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1134 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %1128 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
    %1129 = @func_8940() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */;
    %1130 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %1131 = %1128.1;
    %1132 = %1129.0;
    %1133 = %1130.0;
    (%1131, %1132, %1133)
  };
  %1134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_15435() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1135 = @func_13406() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1136 = @func_8357() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1137 = @func_12062() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1138 = %1135.0;
  %1139 = %1136.0;
  %1140 = %1137.0;
  (%1138, %1139, %1140)
}

def @func_4393() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %1147 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
    %1141 = @func_2387() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1142 = %1141.0;
    %1143 = cast(%1142, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
    %1144 = reshape(%1143, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
    %1145 = @func_2692(%1144) /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) */;
    %1146 = %1145.0;
    (%1142, %1146)
  };
  %1147() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_15203() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1148 = @func_3945() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %1149 = @func_8174() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) */;
  %1150 = %1148.0;
  %1151 = %1149.0;
  (%1150, %1151)
}

def @func_2585() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %1152 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1153 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1154 = %1152.0;
  %1155 = %1153.0;
  (%1154, %1155)
}

def @func_16898() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1160 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %1156 = @func_12327() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1157 = @func_13624() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32]) */;
    %1158 = %1156.0;
    %1159 = %1157.1;
    (%1158, %1159)
  };
  %1160() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_18580() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  @func_18578() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_14448(%var_14447: Tensor[(2, 13, 10), float64]) -> Tensor[(2, 13, 10), bool] {
  %1167 = fn (%var_14410: Tensor[(2, 13, 10), float64]) -> Tensor[(2, 13, 10), bool] {
    %1161 = @func_10635() /* ty=(Tensor[(2, 13, 10), float64],) */;
    %1162 = %1161.0;
    %1163 = cast(%var_14410, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
    %1164 = shape_of(%1162, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1165 = cast(%1162, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
    %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%1165, %1166) /* ty=Tensor[(2, 13, 10), bool] */
  };
  %1167(%var_14447) /* ty=Tensor[(2, 13, 10), bool] */
}

def @func_11230() -> (Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_11228() /* ty=(Tensor[(14, 99), int16], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_11378() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1168 = @func_10551() /* ty=(Tensor[(14, 99), bool],) */;
  %1169 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1170 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1171 = %1168.0;
  %1172 = @func_9139() /* ty=Tensor[(14, 11, 9), float32] */;
  %1173 = %1169.0;
  %1174 = %1170.0;
  (%1171, %1172, %1173, %1174)
}

def @func_13033() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %1175 = @func_6372() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1176 = %1175.0;
  %1177 = @func_2469() /* ty=Tensor[(4, 15, 3), float64] */;
  (%1176, %1177)
}

def @func_6381() -> (Tensor[(14, 11, 9), float32],) {
  %1178 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1178,)
}

def @func_17518() -> (Tensor[(2, 13, 10), float64],) {
  @func_17516() /* ty=(Tensor[(2, 13, 10), float64],) */
}

def @func_16033() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) {
  @func_16031() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_15281() -> Tensor[(14, 11, 9), float32] {
  %1180 = fn () -> Tensor[(14, 11, 9), float32] {
    %1179 = @func_9423() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1179.0
  };
  %1180() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_15903() -> (Tensor[(14, 11, 9), float32],) {
  %1181 = @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_9541() -> (Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
  %1183 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %1184 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
  %1185 = %1183.0;
  %1186 = %1184.2;
  (%1185, %1186)
}

def @func_15571() -> (Tensor[(14, 99), uint64],) {
  @func_15569() /* ty=(Tensor[(14, 99), uint64],) */
}

def @func_18980() -> (Tensor[(7, 198), float64],) {
  %1187 = @func_12569() /* ty=(Tensor[(14, 99), float64], Tensor[(7, 198), float64]) */;
  %1188 = %1187.1;
  %1189 = cast(%1188, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
  %1190 = atan(%1189) /* ty=Tensor[(7, 198), float64] */;
  (%1190,)
}

def @func_7670() -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
  %1200 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) {
    %1191 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1192 = cast(meta[relay.Constant][27] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %1193 = reshape(%1192, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
    %1194 = @func_6842(%1193) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
    %1195 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %1196 = %1191.0;
    %1197 = %1194.2;
    %1198 = %1195.1;
    %1199 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
    (%1196, %1197, meta[relay.Constant][27] /* ty=Tensor[(260), float64] */, %1198, %1199)
  };
  %1200() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32]) */
}

def @func_11624() -> (Tensor[(14, 11, 9), float32],) {
  @func_11622() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_16520() -> (Tensor[(14, 11, 9), float32],) {
  %1203 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %1201 = @func_11064() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1202 = %1201.0;
    (%1202,)
  };
  %1203() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_5365() -> (Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) {
  %1204 = cast(meta[relay.Constant][28] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %1205 = reshape(%1204, newshape=[14, 99]) /* ty=Tensor[(14, 99), float32] */;
  %1206 = @func_2764(%1205) /* ty=Tensor[(14, 99), uint64] */;
  %1207 = cast(%1206, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1208 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  %1209 = acosh(%1207) /* ty=Tensor[(14, 99), float64] */;
  (%1208, meta[relay.Constant][28] /* ty=Tensor[(1386), float32] */, %1209)
}

def @func_15719() -> (Tensor[(14, 11, 9), float32],) {
  %1210 = @func_12601() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1211 = %1210.1;
  (%1211,)
}

def @func_18675() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1215 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %1212 = @func_12327() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1213 = @func_18625() /* ty=Tensor[(14, 11, 9), float32] */;
    %1214 = %1212.0;
    (%1213, %1214)
  };
  %1215() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_18578() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) {
  %1216 = @func_5019() /* ty=(Tensor[(4, 15, 3), float32],) */;
  %1217 = @func_11991() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1218 = %1216.0;
  %1219 = %1217.0;
  (%1218, %1219)
}

def @func_3467(%var_3465: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), bool],) {
  @func_3464(%var_3465) /* ty=(Tensor[(14, 11, 9), bool],) */
}

def @func_7455() -> Tensor[(14, 11, 9), float32] {
  %1221 = fn () -> Tensor[(14, 11, 9), float32] {
    %1220 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %1220.1
  };
  %1221() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_8941() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %1226 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
    %1222 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1223 = @func_2117() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %1224 = %1222.0;
    %1225 = %1223.0;
    (%1224, %1225)
  };
  %1226() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_7001(%var_6984: Tensor[(260), float64]) -> (Tensor[(14, 99), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) {
  %1227 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
  %1228 = %1227.0;
  %1229 = cast(%1228, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1230 = exp(%1229) /* ty=Tensor[(14, 99), float32] */;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1232 = log10(%1231) /* ty=Tensor[(14, 99), float32] */;
  %1233 = cast(%1232, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1234 = shape_of(%1230, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1235 = cast(%1230, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1237 = cast(%var_6984, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1238 = reshape(%1237, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %1239 = @func_6842(%1238) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %1240 = @func_5522() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1241 = mod(%1235, %1236) /* ty=Tensor[(14, 99), float32] */;
  %1242 = cast(%1241, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
  %1243 = reshape(%1242, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %1244 = @func_4016(%1243) /* ty=(Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
  %1245 = %1239.1;
  %1246 = %1240.0;
  %1247 = %1244.1;
  (%1241, %1245, %var_6984, %1246, %1247)
}

def @func_8404(%var_8402: Tensor[(260), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) {
  %1248 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1249 = cast(%var_8402, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1250 = reshape(%1249, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1251 = @func_8148(%1250) /* ty=(Tensor[(14, 99), float64], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) */;
  %1252 = %1248.2;
  %1253 = %1251.1;
  (%1252, %1253, %var_8402)
}

def @func_13497() -> Tensor[(14, 11, 9), float32] {
  @func_7752() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_16458() -> (Tensor[(14, 11, 9), uint32],) {
  @func_16456() /* ty=(Tensor[(14, 11, 9), uint32],) */
}

def @func_10323() -> Tensor[(14, 11, 9), float32] {
  @func_10321() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_13938() -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float32], Tensor[(14, 11, 9), float32]) {
  @func_13936() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_10379() -> (Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) {
  %1257 = fn () -> (Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) {
    %1254 = @func_5586() /* ty=(Tensor[(14, 99), float64],) */;
    %1255 = %1254.0;
    %1256 = @func_2469() /* ty=Tensor[(4, 15, 3), float64] */;
    (%1255, %1256)
  };
  %1257() /* ty=(Tensor[(14, 99), float64], Tensor[(4, 15, 3), float64]) */
}

def @func_12339() -> Tensor[(14, 99), float64] {
  %1259 = fn () -> Tensor[(14, 99), float64] {
    %1258 = @func_3765() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) */;
    %1258.1
  };
  %1259() /* ty=Tensor[(14, 99), float64] */
}

def @func_19692() -> (Tensor[(7, 198), int32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float64]) {
  %1260 = @func_14288() /* ty=(Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1261 = %1260.0;
  %1262 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 198), bool] */, dtype="int32") /* ty=Tensor[(7, 198), int32] */;
  %1263 = shape_of(%1261, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1264 = cast(%1261, dtype="int32") /* ty=Tensor[(7, 198), int32] */;
  %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1266 = @func_11157() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1267 = cast(meta[relay.Constant][30] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %1268 = reshape(%1267, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %1269 = @func_3352(%1268) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */;
  %1270 = @func_12775() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) */;
  %1271 = subtract(%1264, %1265) /* ty=Tensor[(7, 198), int32] */;
  %1272 = %1266.1;
  %1273 = %1269.0;
  %1274 = %1270.1;
  (%1271, %1272, %1273, meta[relay.Constant][30] /* ty=Tensor[(784), float32] */, %1274)
}

def @func_19523() -> (Tensor[(2, 13, 10), float64],) {
  @func_19521() /* ty=(Tensor[(2, 13, 10), float64],) */
}

def @func_19847() -> (Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64], Tensor[(2, 13, 10), float64]) {
  @func_19845() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64], Tensor[(2, 13, 10), float64]) */
}

def @func_8148(%var_8139: Tensor[(260), float64]) -> (Tensor[(14, 99), float64], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) {
  %1275 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  %1276 = cast(%1275, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1277 = cast(%var_8139, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1278 = reshape(%1277, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %1279 = @func_6842(%1278) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %1280 = erf(%1276) /* ty=Tensor[(14, 99), float64] */;
  %1281 = %1279.2;
  (%1280, %1281, %var_8139)
}

def @func_19694() -> (Tensor[(7, 198), int32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float64]) {
  @func_19692() /* ty=(Tensor[(7, 198), int32], Tensor[(14, 11, 9), float32], Tensor[(4, 14, 14), float32], Tensor[(784), float32], Tensor[(14, 99), float64]) */
}

def @func_9396() -> (Tensor[(14, 11, 9), float32],) {
  %1282 = @func_7500() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1282,)
}

def @func_19540() -> (Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32]) {
  %1283 = @func_7126() /* ty=Tensor[(7, 198), float32] */;
  %1284 = @func_16699() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1283, %1284)
}

def @func_9750() -> (Tensor[(4, 15, 3), float64],) {
  @func_9748() /* ty=(Tensor[(4, 15, 3), float64],) */
}

def @func_19064() -> (Tensor[(16, 7, 14), float32], Tensor[(14, 11, 9), float32]) {
  @func_19062() /* ty=(Tensor[(16, 7, 14), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_7127() -> Tensor[(7, 198), float32] {
  %1286 = fn () -> Tensor[(7, 198), float32] {
    %1285 = @func_6919() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) */;
    %1285.1
  };
  %1286() /* ty=Tensor[(7, 198), float32] */
}

def @func_15721() -> (Tensor[(14, 11, 9), float32],) {
  @func_15719() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_1680() -> (Tensor[(7, 198), bool], Tensor[(7, 198), int8]) {
  @func_1678() /* ty=(Tensor[(7, 198), bool], Tensor[(7, 198), int8]) */
}

def @func_1695() -> Tensor[(14, 11, 9), float32] {
  @func_1693() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_1442(%var_1425: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) {
  %1287 = @func_1177() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
  %1288 = %1287.3;
  %1289 = cast(%var_1425, dtype="uint32") /* ty=Tensor[(14, 11, 9), uint32] */;
  %1290 = shape_of(%1288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1291 = cast(%1288, dtype="uint32") /* ty=Tensor[(14, 11, 9), uint32] */;
  %1292 = dyn.reshape(%1289, %1290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1293 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1294 = minimum(%1291, %1292) /* ty=Tensor[(14, 11, 9), uint32] */;
  %1295 = %1293.0;
  (%1294, %1295)
}

def @func_5059() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  %1296 = @func_4858() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1297 = %1296.1;
  %1298 = @func_2331() /* ty=Tensor[(4, 15, 3), float64] */;
  (%1297, %1298)
}

def @func_19770() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  @func_19768() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_11320() -> (Tensor[(14, 99), bool],) {
  %1308 = fn () -> (Tensor[(14, 99), bool],) {
    %1299 = @func_7171() /* ty=(Tensor[(14, 99), float64],) */;
    %1300 = %1299.0;
    %1301 = cast(%1300, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
    %1302 = sin(%1301) /* ty=Tensor[(14, 99), float64] */;
    %1303 = cast(%1302, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %1304 = shape_of(%1300, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1305 = cast(%1300, dtype="bool") /* ty=Tensor[(14, 99), bool] */;
    %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1307 = less(%1305, %1306) /* ty=Tensor[(14, 99), bool] */;
    (%1307,)
  };
  %1308() /* ty=(Tensor[(14, 99), bool],) */
}

def @func_2200(%var_2183: Tensor[(14, 11, 9), float32]) -> (Tensor[(14, 11, 9), float64],) {
  %1309 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1310 = %1309.0;
  %1311 = cast(%var_2183, dtype="float64") /* ty=Tensor[(14, 11, 9), float64] */;
  %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1313 = cast(%1310, dtype="float64") /* ty=Tensor[(14, 11, 9), float64] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1315 = floor_divide(%1313, %1314) /* ty=Tensor[(14, 11, 9), float64] */;
  (%1315,)
}

def @func_6699() -> (Tensor[(14, 99), float32],) {
  %1318 = fn () -> (Tensor[(14, 99), float32],) {
    %1316 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
    %1317 = %1316.1;
    (%1317,)
  };
  %1318() /* ty=(Tensor[(14, 99), float32],) */
}

def @func_4858() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1319 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1320 = @func_3481() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1321 = %1319.0;
  %1322 = %1320.0;
  (%1321, %1322)
}

def @func_3767() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) {
  @func_3765() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) */
}

def @func_10753() -> (Tensor[(132), uint64], Tensor[(14, 99), float32], Tensor[(6, 2, 11), uint64]) {
  %1330 = fn () -> (Tensor[(132), uint64], Tensor[(14, 99), float32], Tensor[(6, 2, 11), uint64]) {
    %1323 = @func_6895() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), uint64], Tensor[(6, 2, 11), uint64], Tensor[(132), uint64]) */;
    %1324 = @func_10119() /* ty=(Tensor[(14, 99), float32],) */;
    %1325 = %1323.3;
    %1326 = cast(%1325, dtype="uint64") /* ty=Tensor[(132), uint64] */;
    %1327 = reshape(%1326, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint64] */;
    %1328 = %1324.0;
    %1329 = @func_4742(%1327) /* ty=Tensor[(6, 2, 11), uint64] */;
    (%1325, %1328, %1329)
  };
  %1330() /* ty=(Tensor[(132), uint64], Tensor[(14, 99), float32], Tensor[(6, 2, 11), uint64]) */
}

def @func_10837() -> (Tensor[(4, 15, 3), float64],) {
  %1333 = fn () -> (Tensor[(4, 15, 3), float64],) {
    %1331 = @func_9541() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
    %1332 = %1331.0;
    (%1332,)
  };
  %1333() /* ty=(Tensor[(4, 15, 3), float64],) */
}

def @func_8880() -> (Tensor[(7, 198), bool],) {
  %1336 = fn () -> (Tensor[(7, 198), bool],) {
    %1334 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
    %1335 = %1334.3;
    (%1335,)
  };
  %1336() /* ty=(Tensor[(7, 198), bool],) */
}

def @func_14352() -> (Tensor[(14, 11, 9), float32],) {
  @func_14350() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_6276() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_6274() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_12601() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1337 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
  %1338 = cast(%1337, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
  %1339 = reshape(%1338, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
  %1340 = @func_1442(%1339) /* ty=(Tensor[(14, 11, 9), uint32], Tensor[(14, 11, 9), float32]) */;
  %1341 = %1340.1;
  (%1337, %1341)
}

def @func_16192() -> (Tensor[(4, 15, 3), float64],) {
  %1342 = @func_9748() /* ty=(Tensor[(4, 15, 3), float64],) */;
  %1343 = %1342.0;
  (%1343,)
}

def @func_19470(%var_19468: Tensor[(16, 3, 3), float64], %var_19469: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64],) {
  %1349 = fn (%var_19459: Tensor[(16, 3, 3), float64], %var_19460: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64],) {
    %1344 = cast(%var_19460, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
    %1345 = shape_of(%var_19459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1346 = cast(%var_19459, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
    %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1348 = multiply(%1346, %1347) /* ty=Tensor[(16, 3, 3), float64] */;
    (%1348,)
  };
  %1349(%var_19468, %var_19469) /* ty=(Tensor[(16, 3, 3), float64],) */
}

def @func_19930() -> (Tensor[(14, 99), bool], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), bool], Tensor[(260), float64]) {
  %1350 = @func_11562() /* ty=(Tensor[(14, 99), bool],) */;
  %1351 = @func_12302() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */;
  %1352 = cast(meta[relay.Constant][31] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1353 = reshape(%1352, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %1354 = %1350.0;
  %1355 = %1351.1;
  %1356 = @func_14446(%1353) /* ty=Tensor[(2, 13, 10), bool] */;
  (%1354, %1355, %1356, meta[relay.Constant][31] /* ty=Tensor[(260), float64] */)
}

def @func_20258() -> Tensor[(14, 11, 9), float32] {
  %1358 = fn () -> Tensor[(14, 11, 9), float32] {
    %1357 = @func_10187() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1357.0
  };
  %1358() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_11116() -> Tensor[(14, 99), float64] {
  %1359 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
  %1359.0
}

def @func_11886() -> (Tensor[(14, 11, 9), float32],) {
  @func_11884() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_17821() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_17819() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_1073(%var_1057: Tensor[(10, 6, 6), int16], %var_1058: Tensor[(10, 6, 6), int16], %var_1066: Tensor[(1386), bool]) -> (Tensor[(10, 6, 6), int16], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32]) {
  %1360 = cast(%var_1058, dtype="int16") /* ty=Tensor[(10, 6, 6), int16] */;
  %1361 = shape_of(%var_1057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1362 = cast(%var_1057, dtype="int16") /* ty=Tensor[(10, 6, 6), int16] */;
  %1363 = dyn.reshape(%1360, %1361, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1364 = cast(%var_1066, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %1365 = reshape(%1364, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %1366 = @func_876(%1365) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1367 = %1366.3;
  %1368 = cast(%1367, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %1369 = reshape(%1368, newshape=[1386]) /* ty=Tensor[(1386), bool] */;
  %1370 = @func_876(%1369) /* ty=(Tensor[(10, 10, 15), float32], Tensor[(14, 11, 9), float32], Tensor[(1386), bool], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1371 = bitwise_or(%1362, %1363) /* ty=Tensor[(10, 6, 6), int16] */;
  %1372 = %1370.3;
  (%1371, %1367, %var_1066, %1372)
}

def @func_4742(%var_4729: Tensor[(6, 2, 11), uint64]) -> Tensor[(6, 2, 11), uint64] {
  %1373 = cast(%var_4729, dtype="uint64") /* ty=Tensor[(6, 2, 11), uint64] */;
  %1374 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(6, 2, 11), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1375 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 2, 11), uint64] */, dtype="uint64") /* ty=Tensor[(6, 2, 11), uint64] */;
  %1376 = dyn.reshape(%1373, %1374, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%1375, %1376) /* ty=Tensor[(6, 2, 11), uint64] */
}

def @func_20077() -> Tensor[(14, 99), bool] {
  %1378 = fn () -> Tensor[(14, 99), bool] {
    %1377 = @func_11562() /* ty=(Tensor[(14, 99), bool],) */;
    %1377.0
  };
  %1378() /* ty=Tensor[(14, 99), bool] */
}

def @func_13357() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1382 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %1379 = @func_1364() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1380 = %1379.0;
    %1381 = @func_7025() /* ty=Tensor[(14, 11, 9), float32] */;
    (%1380, %1381)
  };
  %1382() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_10134() -> (Tensor[(14, 11, 9), float32],) {
  %1385 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %1383 = @func_4598() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1384 = %1383.0;
    (%1384,)
  };
  %1385() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_6779() -> Tensor[(14, 11, 9), float32] {
  %1386 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1386.0
}

def @func_16575(%var_16574: Tensor[(360), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(6, 2, 11), uint64], Tensor[(4, 15, 3), float32]) {
  %1400 = fn (%var_16537: Tensor[(360), int16]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(6, 2, 11), uint64], Tensor[(4, 15, 3), float32]) {
    %1387 = @func_12062() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1388 = @func_5770() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1389 = cast(%var_16537, dtype="int16") /* ty=Tensor[(360), int16] */;
    %1390 = reshape(%1389, newshape=[180, 2]) /* ty=Tensor[(180, 2), int16] */;
    %1391 = @func_2647(%1390) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32], Tensor[(180, 2), int16], Tensor[(14, 11, 9), float32]) */;
    %1392 = @func_14723() /* ty=(Tensor[(4, 15, 3), float64],) */;
    %1393 = %1392.0;
    %1394 = cast(%1393, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
    %1395 = %1387.0;
    %1396 = %1388.0;
    %1397 = %1391.0;
    %1398 = @func_14255() /* ty=Tensor[(6, 2, 11), uint64] */;
    %1399 = sqrt(%1394) /* ty=Tensor[(4, 15, 3), float32] */;
    (%1395, %1396, %1397, %var_16537, %1398, %1399)
  };
  %1400(%var_16574) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(6, 2, 11), uint64], Tensor[(4, 15, 3), float32]) */
}

def @func_1693() -> Tensor[(14, 11, 9), float32] {
  @func_1489() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_11195() -> (Tensor[(980), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1401 = @func_8174() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(980), float64], Tensor[(980), float64]) */;
  %1402 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
  %1403 = %1401.2;
  %1404 = %1402.4;
  %1405 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1403, %1404, %1405)
}

def @func_16259() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1406 = @func_15719() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1407 = @func_9836() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1408 = @func_15719() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1409 = %1406.0;
  %1410 = %1407.0;
  %1411 = %1408.0;
  (%1409, %1410, %1411)
}

def @func_6383() -> (Tensor[(14, 11, 9), float32],) {
  @func_6381() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_7101(%var_7069: Tensor[(1386), bool], %var_7072: Tensor[(4, 15, 3), float32]) -> (Tensor[(4, 15, 3), bool], Tensor[(1386), int16], Tensor[(14, 99), bool]) {
  %1412 = @func_2585() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1413 = %1412.0;
  %1414 = cast(%var_7072, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %1415 = shape_of(%1413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1416 = cast(%1413, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %1417 = dyn.reshape(%1414, %1415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1418 = cast(%var_7069, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %1419 = reshape(%1418, newshape=[7, 198]) /* ty=Tensor[(7, 198), bool] */;
  %1420 = @func_4016(%1419) /* ty=(Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */;
  %1421 = %1420.4;
  %1422 = cast(%1421, dtype="int16") /* ty=Tensor[(14, 11, 9), int16] */;
  %1423 = shape_of(%var_7069, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1424 = cast(%var_7069, dtype="int16") /* ty=Tensor[(1386), int16] */;
  %1425 = dyn.reshape(%1422, %1423, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1426 = greater(%1416, %1417) /* ty=Tensor[(4, 15, 3), bool] */;
  %1427 = bitwise_xor(%1424, %1425) /* ty=Tensor[(1386), int16] */;
  %1428 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  (%1426, %1427, %1428)
}

def @func_20007() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) {
  @func_20005() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64]) */
}

def @func_20202() -> Tensor[(14, 11, 9), uint32] {
  %1429 = @func_16456() /* ty=(Tensor[(14, 11, 9), uint32],) */;
  %1429.0
}

def @func_7172() -> (Tensor[(14, 99), float64],) {
  %1432 = fn () -> (Tensor[(14, 99), float64],) {
    %1430 = @func_6024() /* ty=(Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), uint32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32]) */;
    %1431 = %1430.2;
    (%1431,)
  };
  %1432() /* ty=(Tensor[(14, 99), float64],) */
}

def @func_19905() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), uint32], Tensor[(4, 15, 3), float64]) {
  @func_19903() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), uint32], Tensor[(4, 15, 3), float64]) */
}

def @func_8407(%var_8405: Tensor[(260), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) {
  @func_8404(%var_8405) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), uint64], Tensor[(260), float64]) */
}

def @func_7105(%var_7103: Tensor[(1386), bool], %var_7104: Tensor[(4, 15, 3), float32]) -> (Tensor[(4, 15, 3), bool], Tensor[(1386), int16], Tensor[(14, 99), bool]) {
  @func_7101(%var_7103, %var_7104) /* ty=(Tensor[(4, 15, 3), bool], Tensor[(1386), int16], Tensor[(14, 99), bool]) */
}

def @func_10120() -> (Tensor[(14, 99), float32],) {
  %1436 = fn () -> (Tensor[(14, 99), float32],) {
    %1433 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
    %1434 = cast(%1433, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
    %1435 = cos(%1434) /* ty=Tensor[(14, 99), float32] */;
    (%1435,)
  };
  %1436() /* ty=(Tensor[(14, 99), float32],) */
}

def @func_1323() -> (Tensor[(14, 11, 9), float32],) {
  @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_7855() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1447 = fn () -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
    %1437 = @func_4998() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) */;
    %1438 = %1437.2;
    %1439 = cast(%1438, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
    %1440 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1441 = @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %1442 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1443 = atan(%1439) /* ty=Tensor[(2, 13, 10), float64] */;
    %1444 = %1440.0;
    %1445 = %1441.1;
    %1446 = %1442.0;
    (%1443, %1444, %1445, %1446)
  };
  %1447() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_12570() -> (Tensor[(14, 99), float64], Tensor[(7, 198), float64]) {
  %1453 = fn () -> (Tensor[(14, 99), float64], Tensor[(7, 198), float64]) {
    %1448 = @func_12196() /* ty=(Tensor[(7, 198), bool],) */;
    %1449 = %1448.0;
    %1450 = cast(%1449, dtype="float64") /* ty=Tensor[(7, 198), float64] */;
    %1451 = @func_12338() /* ty=Tensor[(14, 99), float64] */;
    %1452 = erf(%1450) /* ty=Tensor[(7, 198), float64] */;
    (%1451, %1452)
  };
  %1453() /* ty=(Tensor[(14, 99), float64], Tensor[(7, 198), float64]) */
}

def @func_20165() -> (Tensor[(4, 15, 3), float32],) {
  %1456 = fn () -> (Tensor[(4, 15, 3), float32],) {
    %1454 = @func_18578() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %1455 = %1454.0;
    (%1455,)
  };
  %1456() /* ty=(Tensor[(4, 15, 3), float32],) */
}

def @func_12198() -> (Tensor[(7, 198), bool],) {
  @func_12196() /* ty=(Tensor[(7, 198), bool],) */
}

def @func_9837() -> (Tensor[(14, 11, 9), float32],) {
  %1459 = fn () -> (Tensor[(14, 11, 9), float32],) {
    %1457 = @func_2422() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1458 = %1457.0;
    (%1458,)
  };
  %1459() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_4998() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float64]) {
  %1460 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1461 = @func_3395() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1462 = @func_4492() /* ty=Tensor[(2, 13, 10), float64] */;
  %1463 = cast(%1462, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %1464 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %1465 = %1460.0;
  %1466 = %1461.0;
  %1467 = sinh(%1463) /* ty=Tensor[(2, 13, 10), float64] */;
  %1468 = %1464.2;
  (%1465, %1466, %1467, %1468)
}

def @func_13625() -> (Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32]) {
  %1472 = fn () -> (Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32]) {
    %1469 = @func_4907() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 99), int16]) */;
    %1470 = %1469.0;
    %1471 = @func_7025() /* ty=Tensor[(14, 11, 9), float32] */;
    (%1470, %1471)
  };
  %1472() /* ty=(Tensor[(14, 11, 9), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_19608() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %1477 = fn () -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
    %1473 = @func_17516() /* ty=(Tensor[(2, 13, 10), float64],) */;
    %1474 = @func_9019() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1475 = %1473.0;
    %1476 = %1474.0;
    (%1475, %1476)
  };
  %1477() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_18890(%var_18888: float64) -> (Tensor[(6, 1, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_18887(%var_18888) /* ty=(Tensor[(6, 1, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @main(%var_20380: Tensor[(2, 12, 10), float32]) -> (Tensor[(2, 12, 10), float32],) {
  %1478 = cast(%var_20380, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %1479 = asin(%1478) /* ty=Tensor[(2, 12, 10), float32] */;
  (%1479,)
}

def @func_13269() -> (Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(4, 15, 3), float32]) {
  %1480 = @func_10133() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1481 = @func_6134() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1482 = %1480.0;
  %1483 = %1481.1;
  %1484 = @func_5391() /* ty=Tensor[(4, 15, 3), float32] */;
  (%1482, %1483, %1484)
}

def @func_3354(%var_3353: Tensor[(4, 14, 14), float32]) -> (Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) {
  %1489 = fn (%var_3340: Tensor[(4, 14, 14), float32]) -> (Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) {
    %1485 = cast(%var_3340, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
    %1486 = @func_1321() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1487 = acosh(%1485) /* ty=Tensor[(4, 14, 14), float32] */;
    %1488 = %1486.0;
    (%1487, %1488)
  };
  %1489(%var_3353) /* ty=(Tensor[(4, 14, 14), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_3310() -> (Tensor[(14, 11, 9), float32],) {
  %1490 = @func_2015() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1490,)
}

def @func_15205() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  @func_15203() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */
}

def @func_9333() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) {
  %1494 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) {
    %1491 = @func_8571() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */;
    %1492 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
    %1493 = %1491.1;
    (%1492, %1493)
  };
  %1494() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), uint8]) */
}

def @func_13296() -> (Tensor[(14, 11, 9), float32],) {
  @func_13294() /* ty=(Tensor[(14, 11, 9), float32],) */
}

def @func_6637() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) {
  %1498 = fn () -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) {
    %1495 = @func_2585() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
    %1496 = %1495.0;
    %1497 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
    (%1496, %1497)
  };
  %1498() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), bool]) */
}

def @func_14214() -> (Tensor[(132), uint64], Tensor[(7, 198), float64]) {
  %1499 = @func_10752() /* ty=(Tensor[(132), uint64], Tensor[(14, 99), float32], Tensor[(6, 2, 11), uint64]) */;
  %1500 = @func_12569() /* ty=(Tensor[(14, 99), float64], Tensor[(7, 198), float64]) */;
  %1501 = %1499.0;
  %1502 = %1500.1;
  (%1501, %1502)
}

def @func_16856() -> (Tensor[(7, 198), float32],) {
  %1503 = @func_5657() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), int16]) */;
  %1504 = %1503.3;
  %1505 = cast(%1504, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
  %1506 = log(%1505) /* ty=Tensor[(7, 198), float32] */;
  (%1506,)
}

def @func_1765() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) {
  @func_1763() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */
}

def @func_4018(%var_4017: Tensor[(7, 198), bool]) -> (Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
  %1522 = fn (%var_3971: Tensor[(7, 198), bool]) -> (Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) {
    %1507 = @func_1678() /* ty=(Tensor[(7, 198), bool], Tensor[(7, 198), int8]) */;
    %1508 = %1507.0;
    %1509 = cast(%var_3971, dtype="uint8") /* ty=Tensor[(7, 198), uint8] */;
    %1510 = shape_of(%1508, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1511 = cast(%1508, dtype="uint8") /* ty=Tensor[(7, 198), uint8] */;
    %1512 = dyn.reshape(%1509, %1510, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1513 = cast(%var_3971, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
    %1514 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1515 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
    %1516 = @func_3136() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(14, 11, 9), float32], Tensor[(360), int16], Tensor[(14, 11, 9), float32]) */;
    %1517 = logical_xor(%1511, %1512) /* ty=Tensor[(7, 198), uint8] */;
    %1518 = log2(%1513) /* ty=Tensor[(7, 198), float32] */;
    %1519 = %1514.0;
    %1520 = %1515.3;
    %1521 = %1516.2;
    (%1517, %1518, %1519, %1520, %1521)
  };
  %1522(%var_4017) /* ty=(Tensor[(7, 198), uint8], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_5419() -> Tensor[(14, 11, 9), float32] {
  @func_5417() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_11941(%var_11907: int8, %var_11908: Tensor[(2, 9, 1), int8]) -> (Tensor[(2, 9, ?), float32],) {
  %1523 = cast(%var_11907, dtype="int8") /* ty=int8 */;
  %1524 = cast(%var_11908, dtype="int8") /* ty=Tensor[(2, 9, 1), int8] */;
  %1525 = right_shift(%1523, %1524) /* ty=Tensor[(2, 9, 1), int8] */;
  %1526 = cast(%1525, dtype="float32") /* ty=Tensor[(2, 9, 1), float32] */;
  %1527 = shape_of(%var_11908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1528 = cast(%var_11908, dtype="float32") /* ty=Tensor[(2, 9, 1), float32] */;
  %1529 = dyn.reshape(%1526, %1527, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1530 = floor_mod(%1528, %1529) /* ty=Tensor[(2, 9, ?), float32] */;
  (%1530,)
}

def @func_19062() -> (Tensor[(16, 7, 14), float32], Tensor[(14, 11, 9), float32]) {
  %1531 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 7, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 14), float32] */;
  %1532 = @func_18674() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1533 = atan(%1531) /* ty=Tensor[(16, 7, 14), float32] */;
  %1534 = %1532.1;
  (%1533, %1534)
}

def @func_13007() -> (Tensor[(14, 11, 9), float32],) {
  %1535 = @func_12775() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64]) */;
  %1536 = %1535.0;
  (%1536,)
}

def @func_14708() -> Tensor[(4, 15, 3), float32] {
  %1538 = fn () -> Tensor[(4, 15, 3), float32] {
    %1537 = @func_14399() /* ty=(Tensor[(4, 15, 3), float32],) */;
    %1537.0
  };
  %1538() /* ty=Tensor[(4, 15, 3), float32] */
}

def @func_18887(%var_18796: float64) -> (Tensor[(6, 1, 3), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) {
  %1539 = cast(%var_18796, dtype="float64") /* ty=float64 */;
  %1540 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 1, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 3), float64] */;
  %1541 = @func_8980() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
  %1542 = add(%1539, %1540) /* ty=Tensor[(6, 1, 3), float64] */;
  %1543 = %1541.1;
  %1544 = @func_2304() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1542, %1543, %1544)
}

def @func_6468() -> Tensor[(4, 15, 3), float64] {
  @func_2469() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_19243() -> (Tensor[(14, 99), float32],) {
  %1547 = fn () -> (Tensor[(14, 99), float32],) {
    %1545 = @func_6741() /* ty=(Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */;
    %1546 = %1545.0;
    (%1546,)
  };
  %1547() /* ty=(Tensor[(14, 99), float32],) */
}

def @func_10865() -> (Tensor[(4, 15, 3), float32],) {
  @func_10863() /* ty=(Tensor[(4, 15, 3), float32],) */
}

def @func_3765() -> (Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) {
  %1548 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %1549 = @func_3291() /* ty=Tensor[(14, 99), int16] */;
  %1550 = cast(%1549, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %1551 = asin(%1550) /* ty=Tensor[(14, 99), float32] */;
  %1552 = cast(%1551, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1553 = %1548.0;
  %1554 = tan(%1552) /* ty=Tensor[(14, 99), float64] */;
  (%1553, %1554)
}

def @func_6920() -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) {
  %1560 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) {
    %1555 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %1556 = %1555.1;
    %1557 = cast(%1556, dtype="float32") /* ty=Tensor[(7, 198), float32] */;
    %1558 = @func_1693() /* ty=Tensor[(14, 11, 9), float32] */;
    %1559 = sin(%1557) /* ty=Tensor[(7, 198), float32] */;
    (%1558, %1559)
  };
  %1560() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32]) */
}

def @func_18958() -> Tensor[(14, 99), float64] {
  @func_18956() /* ty=Tensor[(14, 99), float64] */
}

def @func_6675() -> (Tensor[(14, 11, 9), float32],) {
  %1561 = @func_2493() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1562 = %1561.0;
  (%1562,)
}

def @func_15872() -> Tensor[(7, 198), bool] {
  %1564 = fn () -> Tensor[(7, 198), bool] {
    %1563 = @func_10965() /* ty=(Tensor[(7, 198), bool], Tensor[(14, 99), float64]) */;
    %1563.0
  };
  %1564() /* ty=Tensor[(7, 198), bool] */
}

def @func_18166() -> Tensor[(4, 15, 3), float64] {
  @func_6468() /* ty=Tensor[(4, 15, 3), float64] */
}

def @func_10551() -> (Tensor[(14, 99), bool],) {
  %1565 = @func_6436() /* ty=Tensor[(14, 99), bool] */;
  (%1565,)
}

def @func_4492() -> Tensor[(2, 13, 10), float64] {
  %1566 = @func_4358() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float64], Tensor[(2, 13, 10), float64]) */;
  %1566.2
}

def @func_11808() -> (Tensor[(14, 99), float64],) {
  %1569 = fn () -> (Tensor[(14, 99), float64],) {
    %1567 = @func_6795() /* ty=(Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32]) */;
    %1568 = %1567.0;
    (%1568,)
  };
  %1569() /* ty=(Tensor[(14, 99), float64],) */
}

def @func_19239() -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %1574 = fn () -> (Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
    %1570 = @func_2544() /* ty=(Tensor[(2, 13, 10), float64],) */;
    %1571 = @func_2720() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1572 = %1570.0;
    %1573 = %1571.0;
    (%1572, %1573)
  };
  %1574() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) */
}

def @func_10149() -> Tensor[(14, 11, 9), float32] {
  %1576 = fn () -> Tensor[(14, 11, 9), float32] {
    %1575 = @func_9836() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1575.0
  };
  %1576() /* ty=Tensor[(14, 11, 9), float32] */
}

def @func_12854() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
  %1585 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) {
    %1577 = @func_1805() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool]) */;
    %1578 = @func_12682() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %1579 = @func_6698() /* ty=(Tensor[(14, 99), float32],) */;
    %1580 = %1577.0;
    %1581 = @func_7537() /* ty=Tensor[(14, 11, 9), float32] */;
    %1582 = %1578.1;
    %1583 = @func_7454() /* ty=Tensor[(14, 11, 9), float32] */;
    %1584 = %1579.0;
    (%1580, %1581, %1582, %1583, %1584)
  };
  %1585() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float32]) */
}

def @func_12303() -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) {
  %1594 = fn () -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) {
    %1586 = @func_10992() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1587 = @func_6372() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1588 = %1586.0;
    %1589 = cast(%1588, dtype="float32") /* ty=Tensor[(14, 11, 9), float32] */;
    %1590 = reshape(%1589, newshape=[14, 11, 9]) /* ty=Tensor[(14, 11, 9), float32] */;
    %1591 = @func_3464(%1590) /* ty=(Tensor[(14, 11, 9), bool],) */;
    %1592 = %1587.0;
    %1593 = %1591.0;
    (%1588, %1592, %1593)
  };
  %1594() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool]) */
}

def @func_10302() -> (Tensor[(2, 13, 10), float64],) {
  %1597 = fn () -> (Tensor[(2, 13, 10), float64],) {
    %1595 = @func_5365() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) */;
    %1596 = %1595.0;
    (%1596,)
  };
  %1597() /* ty=(Tensor[(2, 13, 10), float64],) */
}

def @func_17578(%var_17577: Tensor[(2, 12, 1), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 12, ?), int64]) {
  %1613 = fn (%var_17538: Tensor[(2, 12, 1), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 12, ?), int64]) {
    %1598 = @func_14350() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1599 = @func_4320() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32]) */;
    %1600 = @func_16856() /* ty=(Tensor[(7, 198), float32],) */;
    %1601 = @func_4162() /* ty=(Tensor[(14, 11, 9), float32],) */;
    %1602 = cast(%var_17538, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
    %1603 = atan(%1602) /* ty=Tensor[(2, 12, 1), float64] */;
    %1604 = cast(%var_17538, dtype="int64") /* ty=Tensor[(2, 12, 1), int64] */;
    %1605 = shape_of(%1603, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1606 = cast(%1603, dtype="int64") /* ty=Tensor[(2, 12, 1), int64] */;
    %1607 = dyn.reshape(%1604, %1605, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1608 = %1598.0;
    %1609 = %1599.1;
    %1610 = %1600.0;
    %1611 = %1601.0;
    %1612 = bitwise_or(%1606, %1607) /* ty=Tensor[(2, 12, ?), int64] */;
    (%1608, %1609, %1610, %1611, %1612)
  };
  %1613(%var_17577) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), float32], Tensor[(14, 11, 9), float32], Tensor[(2, 12, ?), int64]) */
}

def @func_18982() -> (Tensor[(7, 198), float64],) {
  @func_18980() /* ty=(Tensor[(7, 198), float64],) */
}

def @func_18377() -> (Tensor[(14, 11, 9), float32],) {
  %1614 = @func_6779() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1614,)
}

def @func_6741() -> (Tensor[(14, 99), float32], Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32]) {
  %1615 = @func_1538() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float32]) */;
  %1616 = @func_3256() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(2, 13, 10), float32], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64]) */;
  %1617 = %1615.1;
  %1618 = %1616.0;
  %1619 = @func_5417() /* ty=Tensor[(14, 11, 9), float32] */;
  (%1617, %1618, %1619)
}

def @func_5367() -> (Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) {
  @func_5365() /* ty=(Tensor[(2, 13, 10), float64], Tensor[(1386), float32], Tensor[(14, 99), float64]) */
}

def @func_12196() -> (Tensor[(7, 198), bool],) {
  %1620 = @func_8879() /* ty=(Tensor[(7, 198), bool],) */;
  %1621 = %1620.0;
  (%1621,)
}

def @func_19845() -> (Tensor[(14, 99), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), float64], Tensor[(2, 13, 10), float64], Tensor[(4, 15, 3), float64], Tensor[(2, 13, 10), float64]) {
  %1622 = @func_11520() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), float32], Tensor[(7, 198), bool], Tensor[(1386), bool], Tensor[(14, 99), float64], Tensor[(14, 99), bool]) */;
  %1623 = @func_2841() /* ty=(Tensor[(14, 11, 9), float32], Tensor[(14, 11, 9), bool], Tensor[(14, 11, 9), float32], Tensor[(4, 15, 3), float32], Tensor[(14, 11, 9), float32]) */;
  %1624 = @func_3765() /* ty=(Tensor[(4, 15, 3), float32], Tensor[(14, 99), float64]) */;
  %1625 = %1622.4;
  %1626 = cast(%1625, dtype="float64") /* ty=Tensor[(14, 99), float64] */;
  %1627 = %1623.2;
  %1628 = cast(%1627, dtype="int32") /* ty=Tensor[(14, 11, 9), int32] */;
  %1629 = reshape(%1626, newshape=[14, 99]) /* ty=Tensor[(14, 99), float64] */;
  %1630 = reshape(%1628, newshape=[14, 99]) /* ty=Tensor[(14, 99), int32] */;
  %1631 = @func_7978(%1629, %1630) /* ty=(Tensor[(2, 13, 10), float64], Tensor[(14, 11, 9), float32], Tensor[(14, 99), bool]) */;
  %1632 = @func_19521() /* ty=(Tensor[(2, 13, 10), float64],) */;
  %1633 = %1624.1;
  %1634 = %1631.0;
  %1635 = @func_6468() /* ty=Tensor[(4, 15, 3), float64] */;
  %1636 = %1632.0;
  (%1625, %1627, %1633, %1634, %1635, %1636)
}

def @func_15087(%var_15076: Tensor[(260), float64]) -> (Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(260), float64]) {
  %1637 = @func_2387() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1638 = cast(%var_15076, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1639 = reshape(%1638, newshape=[2, 13, 10]) /* ty=Tensor[(2, 13, 10), float64] */;
  %1640 = @func_6842(%1639) /* ty=(Tensor[(14, 11, 9), float32], Tensor[(2, 13, 10), int32], Tensor[(2, 13, 10), uint64], Tensor[(14, 11, 9), float32]) */;
  %1641 = %1637.0;
  %1642 = %1640.1;
  (%1641, %1642, %var_15076)
}

def @func_2015() -> Tensor[(14, 11, 9), float32] {
  %1643 = @func_1508() /* ty=(Tensor[(14, 11, 9), float32],) */;
  %1643.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen948/build/output.py:6208: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen948/build/output.py", line 6213, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(240) tvmgen_default_fused_asin_kernel0(float* __restrict__ T_asin, float* __restrict__ placeholder) {
  T_asin[(((int)threadIdx.x))] = asinf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


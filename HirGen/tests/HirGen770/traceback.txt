==========mod==========
#[version = "0.0.5"]
def @func_3251(%var_3239: Tensor[(6, 11, 1), float32]) -> (Tensor[(6, 11, ?), bool],) {
  %0 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %1 = %0.2;
  %2 = cast(%var_3239, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %6 = logical_or(%4, %5) /* ty=Tensor[(6, 11, ?), bool] */;
  (%6,)
}

def @func_7416() -> Tensor[(1, 16, 16), float32] {
  @func_6467() /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_6681() -> Tensor[(1, 16, 16), float64] {
  %7 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %7.6
}

def @func_8670() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %8 = @func_3727() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */;
  %9 = %8.0;
  %10 = @func_3812() /* ty=Tensor[(1, 16, 16), float64] */;
  (%9, %10)
}

def @func_9715() -> (Tensor[(1, 16, 16), float64],) {
  %11 = @func_9247() /* ty=(Tensor[(6, 11, ?), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %12 = %11.1;
  (%12,)
}

def @func_10080() -> (Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64]) {
  %13 = @func_6390() /* ty=(Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
  %14 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %15 = %13.1;
  %16 = %14.3;
  (%15, %16)
}

def @func_10624(%var_10597: Tensor[(3, 1, 14), float64]) -> (Tensor[(3, 1, 14), float64], Tensor[(700), uint64]) {
  %17 = cast(%var_10597, dtype="float64") /* ty=Tensor[(3, 1, 14), float64] */;
  %18 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
  %19 = cos(%17) /* ty=Tensor[(3, 1, 14), float64] */;
  %20 = %18.2;
  (%19, %20)
}

def @func_6028() -> (Tensor[(1, 16, 16), float64],) {
  %21 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %22 = %21.0;
  (%22,)
}

def @func_4327() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %23 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %24 = @func_3812() /* ty=Tensor[(1, 16, 16), float64] */;
  %25 = %23.0;
  (%24, %25)
}

def @func_4605(%var_4600: Tensor[(12, 3, 6), float64]) -> (Tensor[(12, 3, 6), float64],) {
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 6), float64] */;
  %27 = shape_of(%var_4600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%var_4600, dtype="float64") /* ty=Tensor[(12, 3, 6), float64] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %30 = floor_divide(%28, %29) /* ty=Tensor[(12, 3, 6), float64] */;
  (%30,)
}

def @func_10303() -> (Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) {
  %31 = @func_5092() /* ty=(Tensor[(6, 11, 1), float64],) */;
  %32 = %31.0;
  %33 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
  %34 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  (%32, %33, %34)
}

def @func_8360() -> (Tensor[(6, 11, ?), float64],) {
  %35 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %36 = %35.0;
  (%36,)
}

def @func_8250() -> Tensor[(6, 11, 1), float64] {
  @func_3055() /* ty=Tensor[(6, 11, 1), float64] */
}

def @func_2948() -> (Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %37 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %38 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %39 = %38.1;
  %40 = cast(%39, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
  %41 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%37, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %44 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %46 = reshape(%45, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %47 = @func_1527(%46) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
  %48 = equal(%42, %43) /* ty=Tensor[(?, 16, 16), bool] */;
  %49 = %47.0;
  (%48, %44, %49)
}

def @func_2620(%var_2612: Tensor[(15, 16, 16), float64]) -> Tensor[(15, 16, 16), uint16] {
  %50 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
  %51 = cast(%50, dtype="uint16") /* ty=Tensor[(1, 16, 16), uint16] */;
  %52 = cast(%var_2612, dtype="uint16") /* ty=Tensor[(15, 16, 16), uint16] */;
  add(%51, %52) /* ty=Tensor[(15, 16, 16), uint16] */
}

def @func_9910() -> (Tensor[(1, 16, 16), float32],) {
  %53 = @func_7652() /* ty=Tensor[(1, 16, 16), float32] */;
  (%53,)
}

def @func_6390() -> (Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %54 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  %55 = cast(%54, dtype="int32") /* ty=Tensor[(6, 11, 1), int32] */;
  %56 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 11, 2), float64] */, dtype="int32") /* ty=Tensor[(6, 11, 2), int32] */;
  %57 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 2), float64] */;
  %58 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %59 = left_shift(%55, %56) /* ty=Tensor[(6, 11, 2), int32] */;
  %60 = log(%57) /* ty=Tensor[(6, 11, 2), float64] */;
  %61 = @func_5263() /* ty=Tensor[(1, 16, 16), float64] */;
  %62 = @func_5359() /* ty=Tensor[(1, 16, 16), float64] */;
  %63 = %58.0;
  %64 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  (%59, %60, %61, %62, %63, %64)
}

def @func_7242(%var_7211: float32, %var_7212: Tensor[(2, 12, 16), float32]) -> (Tensor[(2, 12, 16), float32],) {
  %65 = cast(%var_7211, dtype="float32") /* ty=float32 */;
  %66 = cast(%var_7212, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %67 = add(%65, %66) /* ty=Tensor[(2, 12, 16), float32] */;
  (%67,)
}

def @func_10472() -> Tensor[(1, 16, 16), float64] {
  %68 = @func_10113() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %68.0
}

def @func_8611(%var_8555: Tensor[(15, 1, 11), uint16], %var_8556: Tensor[(15, 14, 11), uint16]) -> (Tensor[(15, 14, 11), uint16], Tensor[(?, 16, 16), float32], Tensor[(15, 14, 11), float32]) {
  %69 = cast(%var_8555, dtype="uint16") /* ty=Tensor[(15, 1, 11), uint16] */;
  %70 = cast(%var_8556, dtype="uint16") /* ty=Tensor[(15, 14, 11), uint16] */;
  %71 = @func_7521() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) */;
  %72 = cast(%var_8556, dtype="float32") /* ty=Tensor[(15, 14, 11), float32] */;
  %73 = left_shift(%69, %70) /* ty=Tensor[(15, 14, 11), uint16] */;
  %74 = %71.2;
  %75 = sqrt(%72) /* ty=Tensor[(15, 14, 11), float32] */;
  (%73, %74, %75)
}

def @func_4657() -> (Tensor[(22, 3), float64],) {
  %76 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %77 = %76.8;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(22, 3), float64] */;
  %79 = sin(%78) /* ty=Tensor[(22, 3), float64] */;
  (%79,)
}

def @func_11526() -> (Tensor[(66), float32], Tensor[(350, 2), uint64], Tensor[(700), uint64]) {
  %80 = @func_9297() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32]) */;
  %81 = cast(meta[relay.Constant][2] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %82 = reshape(%81, newshape=[350, 2]) /* ty=Tensor[(350, 2), uint64] */;
  %83 = @func_1238(%82) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) */;
  %84 = %80.2;
  %85 = %83.3;
  (%84, %85, meta[relay.Constant][2] /* ty=Tensor[(700), uint64] */)
}

def @func_6939(%var_6869: Tensor[(6, 10, 14), uint64], %var_6870: Tensor[(6, 10, 14), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 10, 14), uint8], Tensor[(6, 10, 14), bool], Tensor[(1, 16, 16), float64]) {
  %86 = @func_4428() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %87 = @func_5937() /* ty=(Tensor[(?, 16, 16), uint16], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
  %88 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %89 = cast(%var_6870, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %90 = shape_of(%var_6869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_6869, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %93 = logical_xor(%91, %92) /* ty=Tensor[(6, 10, 14), uint64] */;
  %94 = cast(%93, dtype="uint8") /* ty=Tensor[(6, 10, 14), uint8] */;
  %95 = shape_of(%var_6869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%var_6869, dtype="uint8") /* ty=Tensor[(6, 10, 14), uint8] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %98 = cast(%var_6870, dtype="float64") /* ty=Tensor[(6, 10, 14), float64] */;
  %99 = acos(%98) /* ty=Tensor[(6, 10, 14), float64] */;
  %100 = cast(%var_6870, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%99, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %104 = right_shift(%102, %103) /* ty=Tensor[(6, 10, 14), uint64] */;
  %105 = cast(%93, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %109 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %110 = %86.1;
  %111 = %87.2;
  %112 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
  %113 = %88.0;
  %114 = bitwise_or(%96, %97) /* ty=Tensor[(6, 10, 14), uint8] */;
  %115 = less(%107, %108) /* ty=Tensor[(6, 10, 14), bool] */;
  %116 = %109.0;
  (%110, %111, %112, %113, %114, %115, %116)
}

def @func_7290() -> Tensor[(22, 3), float64] {
  %117 = @func_4657() /* ty=(Tensor[(22, 3), float64],) */;
  %117.0
}

def @func_11142(%var_10996: Tensor[(9, 5, 10), float64]) -> (Tensor[(9, 5, 10), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 120), bool], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %118 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 10), float64] */;
  %119 = shape_of(%var_10996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_10996, dtype="float64") /* ty=Tensor[(9, 5, 10), float64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %122 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %123 = @func_9564() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %124 = @func_3727() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */;
  %125 = cast(meta[relay.Constant][4] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %126 = reshape(%125, newshape=[15, 8, 1]) /* ty=Tensor[(15, 8, 1), float64] */;
  %127 = @func_8813(%126) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 1), float32]) */;
  %128 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %129 = %128.2;
  %130 = cast(%129, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %131 = cast(meta[relay.Constant][4] /* ty=Tensor[(120), float64] */, dtype="bool") /* ty=Tensor[(120), bool] */;
  %132 = @func_10786() /* ty=(Tensor[(66), float32], Tensor[(6, 11, 1), float64]) */;
  %133 = floor_divide(%120, %121) /* ty=Tensor[(9, 5, 10), float64] */;
  %134 = %122.0;
  %135 = %123.0;
  %136 = %124.0;
  %137 = %127.1;
  %138 = greater_equal(%130, %131) /* ty=Tensor[(6, 11, 120), bool] */;
  %139 = %132.0;
  %140 = @func_10373() /* ty=Tensor[(1, 16, 16), float64] */;
  (%133, %134, %135, %136, %137, %138, %139, %140)
}

def @func_1259() -> Tensor[(1, 16, 16), float64] {
  %141 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %141.0
}

def @func_1609() -> (Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) {
  %142 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %143 = cast(meta[relay.Constant][5] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %144 = reshape(%143, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
  %145 = @func_1202(%144) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
  %146 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %147 = cast(meta[relay.Constant][6] /* ty=Tensor[(22, 3), float32] */, dtype="float32") /* ty=Tensor[(22, 3), float32] */;
  %148 = reshape(%147, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %149 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %150 = %142.5;
  %151 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %152 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %153 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %154 = %145.2;
  %155 = %146.0;
  %156 = @func_685(%148) /* ty=Tensor[(6, 11, 1), float32] */;
  %157 = %149.0;
  (%150, %151, %152, %153, %154, meta[relay.Constant][5] /* ty=Tensor[(700), uint64] */, %155, %156, meta[relay.Constant][6] /* ty=Tensor[(22, 3), float32] */, %157)
}

def @func_11724(%var_11701: Tensor[(6, 14, 3), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) {
  %158 = @func_9564() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %159 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
  %160 = cast(%var_11701, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %164 = @func_4955() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64], Tensor[(6, 11, ?), float64], Tensor[(?, 16, 16), bool]) */;
  %165 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %166 = @func_10373() /* ty=Tensor[(1, 16, 16), float64] */;
  %167 = @func_3263() /* ty=Tensor[(1, 16, 16), float64] */;
  %168 = %158.0;
  %169 = minimum(%162, %163) /* ty=Tensor[(6, 14, 3), float32] */;
  %170 = %164.0;
  (%165, %166, %167, %168, %169, %170)
}

def @func_7615() -> (Tensor[(?, 16, 16), int16], Tensor[(1, 16, 16), float64]) {
  %171 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %172 = %171.4;
  %173 = @func_7407() /* ty=Tensor[(1, 16, 16), float64] */;
  (%172, %173)
}

def @func_7326() -> Tensor[(1, 16, 16), float64] {
  @func_2061() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_11253(%var_11242: Tensor[(14, 42), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(7, 7, 12), int8], Tensor[(14, 42), float32]) {
  %174 = @func_7270() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %175 = @func_3376() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) */;
  %176 = @func_3785() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) */;
  %177 = cast(%var_11242, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %178 = reshape(%177, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %179 = @func_10425(%178) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(?, 16, 16), bool], Tensor[(7, 7, 12), int8]) */;
  %180 = %174.0;
  %181 = %175.0;
  %182 = %176.0;
  %183 = %179.3;
  (%180, %181, %182, %183, %var_11242)
}

def @func_3727() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) {
  %184 = @func_3160() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %185 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
  %186 = %184.0;
  %187 = %185.0;
  (%186, %187)
}

def @func_9024() -> (Tensor[(1, 16, 16), float64],) {
  %188 = @func_8974() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %189 = %188.1;
  (%189,)
}

def @func_1735() -> (Tensor[(1, 16, 16), float64],) {
  %190 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %191 = %190.0;
  (%191,)
}

def @func_5070(%var_5016: Tensor[(13, 4, 10), float32]) -> (Tensor[(13, 4, 10), float64],) {
  %192 = cast(%var_5016, dtype="float32") /* ty=Tensor[(13, 4, 10), float32] */;
  %193 = sqrt(%192) /* ty=Tensor[(13, 4, 10), float32] */;
  %194 = cast(%193, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
  %195 = acosh(%194) /* ty=Tensor[(13, 4, 10), float64] */;
  (%195,)
}

def @func_7802() -> Tensor[(66), float32] {
  %196 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %196.0
}

def @func_9160() -> (Tensor[(6, 14, 3), float32], Tensor[(12, 6, 7), float64], Tensor[(504), float32], Tensor[(66), float32]) {
  %197 = cast(meta[relay.Constant][7] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %198 = cast(meta[relay.Constant][8] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %199 = reshape(%197, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %200 = reshape(%198, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %201 = @func_2349(%199, %200) /* ty=(Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) */;
  %202 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
  %203 = %201.0;
  (%202, %203, meta[relay.Constant][7] /* ty=Tensor[(504), float32] */, meta[relay.Constant][8] /* ty=Tensor[(66), float32] */)
}

def @func_10553() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(1, 16, 16), float64]) {
  %204 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %205 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %206 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %207 = @func_9090() /* ty=Tensor[(1, 16, 16), float64] */;
  %208 = %204.0;
  %209 = %205.1;
  %210 = %206.0;
  (%207, %208, %209, %210)
}

def @func_9631() -> (Tensor[(1, 16, 16), float64],) {
  %211 = @func_5206() /* ty=Tensor[(1, 16, 16), float64] */;
  (%211,)
}

def @func_10923() -> Tensor[(1, 16, 16), float64] {
  %212 = @func_10303() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %212.2
}

def @func_6998() -> Tensor[(1, 16, 16), float64] {
  @func_5206() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_3055() -> Tensor[(6, 11, 1), float64] {
  @func_2019() /* ty=Tensor[(6, 11, 1), float64] */
}

def @func_2019() -> Tensor[(6, 11, 1), float64] {
  %213 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %213.3
}

def @func_2683() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %214 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %215 = @func_2576() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %216 = %214.0;
  %217 = %215.0;
  (%216, %217)
}

def @func_10354() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) {
  %218 = @func_9631() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %219 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %221 = %218.0;
  %222 = sigmoid(%220) /* ty=Tensor[(6, 14, 3), float64] */;
  (%221, %222)
}

def @func_4759() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) {
  %223 = @func_4280() /* ty=(Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) */;
  %224 = cast(meta[relay.Constant][9] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %225 = reshape(%224, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
  %226 = @func_1202(%225) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
  %227 = cast(meta[relay.Constant][10] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %228 = reshape(%227, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %229 = @func_3454(%228) /* ty=(Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) */;
  %230 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %231 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %232 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %233 = %232.0;
  %234 = cast(%233, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %235 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 16, 16), float64] */;
  %236 = %223.1;
  %237 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  %238 = %226.4;
  %239 = %229.2;
  %240 = %230.0;
  %241 = %231.0;
  %242 = power(%234, %235) /* ty=Tensor[(8, 16, 16), float64] */;
  (%236, %237, %238, meta[relay.Constant][9] /* ty=Tensor[(700), uint64] */, %239, meta[relay.Constant][10] /* ty=Tensor[(66), float32] */, %240, %241, %242)
}

def @func_7154(%var_7128: Tensor[(5, 4, 11), float32]) -> (Tensor[(5, 4, 11), float32], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %243 = cast(%var_7128, dtype="float32") /* ty=Tensor[(5, 4, 11), float32] */;
  %244 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %245 = rsqrt(%243) /* ty=Tensor[(5, 4, 11), float32] */;
  %246 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  %247 = %244.0;
  (%245, %246, %247)
}

def @func_7401() -> (Tensor[(1, 16, 16), float64],) {
  %248 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  (%248,)
}

def @func_7652() -> Tensor[(1, 16, 16), float32] {
  @func_6467() /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_2349(%var_2306: Tensor[(12, 6, 7), float32], %var_2326: Tensor[(66), float32]) -> (Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) {
  %249 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 6, 7), float32] */, dtype="bool") /* ty=Tensor[(12, 6, 7), bool] */;
  %250 = shape_of(%var_2306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%var_2306, dtype="bool") /* ty=Tensor[(12, 6, 7), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %253 = equal(%251, %252) /* ty=Tensor[(12, 6, 7), bool] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(12, 6, 7), float64] */;
  %255 = cast(%var_2326, dtype="float32") /* ty=Tensor[(66), float32] */;
  %256 = reshape(%255, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %257 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 70), uint64] */, dtype="uint64") /* ty=Tensor[(10, 70), uint64] */;
  %258 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 70), uint64] */, dtype="uint64") /* ty=Tensor[(10, 70), uint64] */;
  %259 = reshape(%257, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %260 = reshape(%258, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %261 = @func_440(%259, %260) /* ty=(Tensor[(14, 5, 10), uint64],) */;
  %262 = atanh(%254) /* ty=Tensor[(12, 6, 7), float64] */;
  %263 = @func_685(%256) /* ty=Tensor[(6, 11, 1), float32] */;
  %264 = %261.0;
  %265 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  (%262, %263, %var_2326, %264, meta[relay.Constant][13] /* ty=Tensor[(10, 70), uint64] */, %265)
}

def @func_6092(%var_6044: Tensor[(9, 16, 16), float64]) -> (Tensor[(9, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(9, 16, 16), float32]) {
  %266 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %267 = %266.0;
  %268 = cast(%267, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %269 = cast(%var_6044, dtype="bool") /* ty=Tensor[(9, 16, 16), bool] */;
  %270 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %271 = cast(%var_6044, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
  %272 = erf(%271) /* ty=Tensor[(9, 16, 16), float32] */;
  %273 = cast(%272, dtype="float64") /* ty=Tensor[(9, 16, 16), float64] */;
  %274 = atan(%273) /* ty=Tensor[(9, 16, 16), float64] */;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
  %276 = cast(%267, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %277 = less(%268, %269) /* ty=Tensor[(9, 16, 16), bool] */;
  %278 = %270.0;
  %279 = divide(%275, %276) /* ty=Tensor[(9, 16, 16), float32] */;
  (%277, %278, %279)
}

def @func_1238(%var_1219: Tensor[(350, 2), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) {
  %280 = cast(%var_1219, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
  %281 = cast(%var_1219, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
  %282 = reshape(%280, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %283 = reshape(%281, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %284 = @func_440(%282, %283) /* ty=(Tensor[(14, 5, 10), uint64],) */;
  %285 = cast(%var_1219, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
  %286 = reshape(%285, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
  %287 = @func_1202(%286) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
  %288 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %289 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %290 = %284.0;
  %291 = %287.4;
  (%288, %289, %290, %var_1219, %291)
}

def @func_6844() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) {
  %292 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %293 = @func_5803() /* ty=(Tensor[(6, 14, 3), float64], Tensor[(66), float32], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(6, 14, 3), float64]) */;
  %294 = %292.1;
  %295 = %293.4;
  (%294, %295)
}

def @func_11509() -> (Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32]) {
  %296 = @func_9321() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %297 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %298 = %296.0;
  %299 = %297.1;
  (%298, %299)
}

def @func_2411() -> (Tensor[(1, 16, 16), float64],) {
  %300 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %301 = %300.0;
  (%301,)
}

def @func_9649() -> Tensor[(1, 16, 16), float64] {
  %302 = @func_7937() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %302.0
}

def @func_10425(%var_10375: Tensor[(7, 7, 12), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(?, 16, 16), bool], Tensor[(7, 7, 12), int8]) {
  %303 = @func_10113() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %304 = @func_2948() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %305 = @func_8974() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %306 = cast(%var_10375, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
  %307 = acosh(%306) /* ty=Tensor[(7, 7, 12), float32] */;
  %308 = cast(%var_10375, dtype="int8") /* ty=Tensor[(7, 7, 12), int8] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="int8") /* ty=Tensor[(7, 7, 12), int8] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %312 = %303.0;
  %313 = %304.0;
  %314 = %305.5;
  %315 = bitwise_xor(%310, %311) /* ty=Tensor[(7, 7, 12), int8] */;
  (%312, %313, %314, %315)
}

def @func_5154() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %316 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
  %317 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %318 = %316.7;
  %319 = %317.0;
  (%318, %319)
}

def @func_7983() -> (Tensor[(1, 16, 16), float64], Tensor[(11, 2, 16), float32]) {
  %320 = @func_4280() /* ty=(Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) */;
  %321 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %322 = %320.0;
  (%321, %322)
}

def @func_7521() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) {
  %323 = @func_7401() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %324 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %325 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %326 = %325.0;
  %327 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %330 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%326, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %333 = %323.0;
  %334 = %324.3;
  %335 = floor_divide(%331, %332) /* ty=Tensor[(?, 16, 16), float32] */;
  (%333, %334, %335)
}

def @func_8643() -> Tensor[(1, 16, 16), float64] {
  %336 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
  %336.1
}

def @func_9615() -> Tensor[(6, 11, 2), float64] {
  %337 = @func_6390() /* ty=(Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
  %337.1
}

def @func_5359() -> Tensor[(1, 16, 16), float64] {
  %338 = @func_2683() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %338.0
}

def @func_6858(%var_6854: Tensor[(8, 7, 5), float32]) -> (Tensor[(8, 7, 5), float32],) {
  %339 = cast(%var_6854, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
  %340 = acos(%339) /* ty=Tensor[(8, 7, 5), float32] */;
  (%340,)
}

def @func_9672() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 700), int64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %341 = @func_4546() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %342 = cast(meta[relay.Constant][14] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %343 = reshape(%342, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %344 = @func_1527(%343) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
  %345 = @func_6390() /* ty=(Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
  %346 = %341.0;
  %347 = %344.5;
  %348 = %345.2;
  (%346, %347, meta[relay.Constant][14] /* ty=Tensor[(66), float32] */, %348)
}

def @func_4231() -> (Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %349 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
  %350 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %351 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %352 = %351.0;
  %353 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %354 = %353.1;
  %355 = cast(%354, dtype="uint8") /* ty=Tensor[(?, 16, 16), uint8] */;
  %356 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%352, dtype="uint8") /* ty=Tensor[(1, 16, 16), uint8] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %359 = right_shift(%357, %358) /* ty=Tensor[(?, 16, 16), uint8] */;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(?, 16, 16), float64] */;
  %361 = log2(%360) /* ty=Tensor[(?, 16, 16), float64] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %366 = less_equal(%364, %365) /* ty=Tensor[(?, 16, 16), bool] */;
  %367 = cast(%354, dtype="uint16") /* ty=Tensor[(?, 16, 16), uint16] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="uint16") /* ty=Tensor[(?, 16, 16), uint16] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %371 = @func_3190() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %372 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %373 = %372.0;
  %374 = cast(%373, dtype="int16") /* ty=Tensor[(1, 16, 16), int16] */;
  %375 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%366, dtype="int16") /* ty=Tensor[(?, 16, 16), int16] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %378 = @func_3190() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %379 = %349.0;
  %380 = %350.2;
  %381 = add(%369, %370) /* ty=Tensor[(?, 16, 16), uint16] */;
  %382 = %371.0;
  %383 = left_shift(%376, %377) /* ty=Tensor[(?, 16, 16), int16] */;
  %384 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
  %385 = %378.0;
  (%379, %380, %381, %382, %383, %384, %385)
}

def @func_3785() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) {
  %386 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %387 = %386.2;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %389 = reshape(%388, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %390 = @func_3454(%389) /* ty=(Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) */;
  %391 = cast(%387, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %392 = %390.1;
  %393 = atan(%391) /* ty=Tensor[(6, 11, 1), float32] */;
  (%392, %393)
}

def @func_1202(%var_1171: Tensor[(70, 10), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) {
  %394 = cast(%var_1171, dtype="uint64") /* ty=Tensor[(70, 10), uint64] */;
  %395 = cast(%var_1171, dtype="uint64") /* ty=Tensor[(70, 10), uint64] */;
  %396 = reshape(%394, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %397 = reshape(%395, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %398 = @func_440(%396, %397) /* ty=(Tensor[(14, 5, 10), uint64],) */;
  %399 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 624), float32] */, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
  %400 = reshape(%399, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %401 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 624), float32] */, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
  %402 = reshape(%401, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %403 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %404 = %398.0;
  %405 = @func_286(%400) /* ty=Tensor[(4, 12, 13), float32] */;
  %406 = @func_286(%402) /* ty=Tensor[(4, 12, 13), float32] */;
  (%403, %404, %var_1171, %405, meta[relay.Constant][15] /* ty=Tensor[(1, 624), float32] */, %406)
}

def @func_4635(%var_4616: Tensor[(14, 13, 12), float64], %var_4621: Tensor[(1, 3840), float64]) -> (Tensor[(15, 16, 16), uint16], Tensor[(1, 3840), float64], Tensor[(14, 13, 12), float32], Tensor[(14, 13, 12), float64]) {
  %407 = cast(%var_4621, dtype="float64") /* ty=Tensor[(1, 3840), float64] */;
  %408 = reshape(%407, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
  %409 = cast(%var_4616, dtype="float32") /* ty=Tensor[(14, 13, 12), float32] */;
  %410 = cast(%var_4616, dtype="float64") /* ty=Tensor[(14, 13, 12), float64] */;
  %411 = log2(%410) /* ty=Tensor[(14, 13, 12), float64] */;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(14, 13, 12), float64] */;
  %413 = @func_2620(%408) /* ty=Tensor[(15, 16, 16), uint16] */;
  %414 = rsqrt(%409) /* ty=Tensor[(14, 13, 12), float32] */;
  %415 = log10(%412) /* ty=Tensor[(14, 13, 12), float64] */;
  (%413, %var_4621, %414, %415)
}

def @func_7937() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %416 = @func_6998() /* ty=Tensor[(1, 16, 16), float64] */;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %418 = @func_6028() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %419 = @func_4831() /* ty=Tensor[(1, 16, 16), float64] */;
  %420 = atan(%417) /* ty=Tensor[(1, 16, 16), float64] */;
  %421 = %418.0;
  (%419, %420, %421)
}

def @func_3376() -> (Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) {
  %422 = @func_2948() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %423 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
  %424 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %425 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %426 = %422.0;
  %427 = %423.1;
  %428 = %424.1;
  %429 = %425.1;
  (%426, %427, %428, %429)
}

def @func_2563() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %430 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %431 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %432 = %430.0;
  %433 = %431.3;
  (%432, %433)
}

def @func_4340(%var_4335: Tensor[(16, 7, 2), float64]) -> (Tensor[(16, 7, 2), float64],) {
  %434 = cast(-8.79117f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %435 = cast(%var_4335, dtype="float64") /* ty=Tensor[(16, 7, 2), float64] */;
  %436 = floor_divide(%434, %435) /* ty=Tensor[(16, 7, 2), float64] */;
  (%436,)
}

def @func_8331() -> (Tensor[(6, 11, ?), float64],) {
  %437 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %438 = %437.0;
  (%438,)
}

def @func_1866() -> (Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) {
  %439 = cast(meta[relay.Constant][16] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %440 = cast(meta[relay.Constant][16] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %441 = reshape(%439, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %442 = reshape(%440, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %443 = @func_440(%441, %442) /* ty=(Tensor[(14, 5, 10), uint64],) */;
  %444 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %445 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %446 = %443.0;
  %447 = %444.5;
  (%445, %446, meta[relay.Constant][16] /* ty=Tensor[(700), uint64] */, %447)
}

def @func_6613(%var_6609: Tensor[(350, 2), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64]) {
  %448 = @func_3113() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */;
  %449 = cast(%var_6609, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
  %450 = cast(%var_6609, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
  %451 = reshape(%449, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %452 = reshape(%450, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %453 = @func_440(%451, %452) /* ty=(Tensor[(14, 5, 10), uint64],) */;
  %454 = %448.0;
  %455 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
  %456 = %453.0;
  (%454, %455, %456, %var_6609)
}

def @func_7407() -> Tensor[(1, 16, 16), float64] {
  %457 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %457.0
}

def @func_2061() -> Tensor[(1, 16, 16), float64] {
  %458 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %458.0
}

def @func_6656() -> (Tensor[(252, 2), float32], Tensor[(6, 11, 1), float32], Tensor[(66, 1), float32]) {
  %459 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %460 = cast(meta[relay.Constant][17] /* ty=Tensor[(66, 1), float32] */, dtype="float32") /* ty=Tensor[(66, 1), float32] */;
  %461 = reshape(%460, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %462 = %459.3;
  %463 = @func_685(%461) /* ty=Tensor[(6, 11, 1), float32] */;
  (%462, %463, meta[relay.Constant][17] /* ty=Tensor[(66, 1), float32] */)
}

def @func_5263() -> Tensor[(1, 16, 16), float64] {
  %464 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
  %464.6
}

def @func_2005() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) {
  %465 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %466 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %467 = %466.1;
  %468 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %469 = %468.0;
  %470 = cast(%467, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %474 = divide(%472, %473) /* ty=Tensor[(?, 16, 16), float32] */;
  %475 = cast(%474, dtype="int8") /* ty=Tensor[(?, 16, 16), int8] */;
  %476 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%467, dtype="int8") /* ty=Tensor[(1, 16, 16), int8] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %479 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %480 = %465.0;
  %481 = minimum(%477, %478) /* ty=Tensor[(?, 16, 16), int8] */;
  %482 = %479.3;
  (%480, %481, %482)
}

def @func_6113() -> Tensor[(6, 14, 3), float32] {
  %483 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
  %483.0
}

def @func_10585() -> (Tensor[(1, 16, 16), float64],) {
  %484 = @func_3263() /* ty=Tensor[(1, 16, 16), float64] */;
  (%484,)
}

def @func_1937() -> (Tensor[(1, 16, 16), float64],) {
  %485 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %486 = %485.9;
  (%486,)
}

def @func_3571() -> (Tensor[(?, 16, 16), bool], Tensor[(4, 12, 13), float32], Tensor[(6, 11, 624), float32], Tensor[(1, 16, 16), float64]) {
  %487 = @func_3376() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) */;
  %488 = %487.0;
  %489 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %490 = %489.0;
  %491 = cast(%490, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %492 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%488, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %495 = cast(meta[relay.Constant][18] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %496 = reshape(%495, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %497 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %499 = cast(meta[relay.Constant][18] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %500 = greater_equal(%493, %494) /* ty=Tensor[(?, 16, 16), bool] */;
  %501 = @func_286(%496) /* ty=Tensor[(4, 12, 13), float32] */;
  %502 = mod(%498, %499) /* ty=Tensor[(6, 11, 624), float32] */;
  %503 = @func_2299() /* ty=Tensor[(1, 16, 16), float64] */;
  (%500, %501, %502, %503)
}

def @func_6318() -> (Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) {
  %504 = @func_3955() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="int8") /* ty=Tensor[(1, 16, 16), int8] */;
  %507 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 16, 16), float64] */, dtype="int8") /* ty=Tensor[(8, 16, 16), int8] */;
  %508 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %509 = logical_xor(%506, %507) /* ty=Tensor[(8, 16, 16), int8] */;
  %510 = %508.2;
  (%509, %510)
}

def @func_2889() -> (Tensor[(1, 16, 16), float64],) {
  %511 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
  (%511,)
}

def @func_2576() -> (Tensor[(1, 16, 16), float64],) {
  %512 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %513 = %512.0;
  (%513,)
}

def @func_3113() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  %514 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %515 = @func_2411() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %516 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  %517 = %514.1;
  %518 = %515.0;
  (%516, %517, %518)
}

def @func_9503() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %519 = @func_8974() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %520 = @func_5359() /* ty=Tensor[(1, 16, 16), float64] */;
  %521 = %519.4;
  (%520, %521)
}

def @func_3629() -> (Tensor[(6, 14, 3), float32],) {
  %522 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
  %523 = rsqrt(%522) /* ty=Tensor[(6, 14, 3), float32] */;
  (%523,)
}

def @func_4084() -> (Tensor[(6, 11, ?), float64],) {
  %524 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %525 = %524.3;
  %526 = cast(%525, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %527 = reshape(%526, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %528 = @func_685(%527) /* ty=Tensor[(6, 11, 1), float32] */;
  %529 = cast(%525, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%528, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %533 = equal(%531, %532) /* ty=Tensor[(6, 11, ?), bool] */;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(6, 11, ?), float64] */;
  %535 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%528, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %538 = divide(%536, %537) /* ty=Tensor[(6, 11, ?), float64] */;
  (%538,)
}

def @func_5803() -> (Tensor[(6, 14, 3), float64], Tensor[(66), float32], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(6, 14, 3), float64]) {
  %539 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
  %540 = %539.0;
  %541 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%540, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %545 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %546 = cast(meta[relay.Constant][22] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %547 = reshape(%546, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %548 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %549 = power(%543, %544) /* ty=Tensor[(6, 14, 3), float64] */;
  %550 = %545.2;
  %551 = @func_286(%547) /* ty=Tensor[(4, 12, 13), float32] */;
  %552 = atan(%548) /* ty=Tensor[(6, 14, 3), float64] */;
  (%549, %550, %551, meta[relay.Constant][22] /* ty=Tensor[(624), float32] */, %552)
}

def @func_2299() -> Tensor[(1, 16, 16), float64] {
  @func_2061() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_3317() -> (Tensor[(1, 16, 16), float64],) {
  %553 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %554 = %553.0;
  (%554,)
}

def @func_9564() -> (Tensor[(1, 16, 16), float64],) {
  %555 = @func_7983() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(11, 2, 16), float32]) */;
  %556 = %555.0;
  (%556,)
}

def @func_10786() -> (Tensor[(66), float32], Tensor[(6, 11, 1), float64]) {
  %557 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %558 = %557.0;
  %559 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  (%558, %559)
}

def @func_11645() -> (Tensor[(6, 14, 3), float32], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) {
  %560 = @func_10303() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %561 = cast(meta[relay.Constant][23] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %562 = reshape(%561, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
  %563 = %560.1;
  %564 = @func_7387(%562) /* ty=Tensor[(7, 11, 13), float32] */;
  (%563, %564, meta[relay.Constant][23] /* ty=Tensor[(1001), float32] */)
}

def @func_9247() -> (Tensor[(6, 11, ?), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %565 = @func_8331() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %566 = %565.0;
  %567 = @func_6681() /* ty=Tensor[(1, 16, 16), float64] */;
  %568 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
  (%566, %567, %568)
}

def @func_3150() -> (Tensor[(66), float32], Tensor[(624), float32]) {
  %569 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %570 = %569.4;
  %571 = cast(%570, dtype="float32") /* ty=Tensor[(66), float32] */;
  %572 = reshape(%571, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %573 = @func_1527(%572) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
  %574 = %573.3;
  (%570, %574)
}

def @func_5565() -> (Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %575 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(66), float32] */;
  %578 = @func_4327() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %579 = sinh(%577) /* ty=Tensor[(66), float32] */;
  %580 = %578.1;
  (%579, %580)
}

def @func_3263() -> Tensor[(1, 16, 16), float64] {
  %581 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %581.0
}

def @func_6990() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), uint16]) {
  %582 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %583 = @func_5206() /* ty=Tensor[(1, 16, 16), float64] */;
  %584 = %582.2;
  (%583, %584)
}

def @func_685(%var_675: Tensor[(6, 11, 1), float32]) -> Tensor[(6, 11, 1), float32] {
  %585 = cast(%var_675, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  sin(%585) /* ty=Tensor[(6, 11, 1), float32] */
}

def @func_10373() -> Tensor[(1, 16, 16), float64] {
  @func_2978() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_9989(%var_9941: Tensor[(8, 9, 3), float32]) -> (Tensor[(8, 9, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %586 = cast(%var_9941, dtype="float32") /* ty=Tensor[(8, 9, 3), float32] */;
  %587 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %588 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %589 = cos(%586) /* ty=Tensor[(8, 9, 3), float32] */;
  %590 = %587.0;
  %591 = @func_5377() /* ty=Tensor[(1, 16, 16), float64] */;
  %592 = %588.0;
  (%589, %590, %591, %592)
}

def @func_8813(%var_8794: Tensor[(15, 8, 1), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 1), float32]) {
  %593 = cast(%var_8794, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %594 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
  %595 = @func_3785() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) */;
  %596 = log(%593) /* ty=Tensor[(15, 8, 1), float64] */;
  %597 = %594.1;
  %598 = %595.1;
  (%596, %597, %598)
}

def @func_9410() -> Tensor[(1, 16, 16), float64] {
  @func_3263() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_11389() -> Tensor[(1, 16, 16), float64] {
  %599 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %599.0
}

def @func_2463() -> (Tensor[(624), float32], Tensor[(1, 16, 16), float32]) {
  %600 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %601 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %602 = %600.0;
  %603 = %601.5;
  (%602, %603)
}

def @func_7447() -> Tensor[(6, 11, 1), float32] {
  %604 = @func_6656() /* ty=(Tensor[(252, 2), float32], Tensor[(6, 11, 1), float32], Tensor[(66, 1), float32]) */;
  %604.1
}

def @func_10245(%var_10200: Tensor[(165), uint16], %var_10201: Tensor[(2310), uint16], %var_10225: Tensor[(15, 14, 11), float32]) -> (Tensor[(6, 11, 1), float32], Tensor[(165), uint16], Tensor[(2310), uint16], Tensor[(15, 14, 11), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %605 = cast(%var_10200, dtype="uint16") /* ty=Tensor[(165), uint16] */;
  %606 = cast(%var_10201, dtype="uint16") /* ty=Tensor[(2310), uint16] */;
  %607 = reshape(%605, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), uint16] */;
  %608 = reshape(%606, newshape=[15, 14, 11]) /* ty=Tensor[(15, 14, 11), uint16] */;
  %609 = @func_8611(%607, %608) /* ty=(Tensor[(15, 14, 11), uint16], Tensor[(?, 16, 16), float32], Tensor[(15, 14, 11), float32]) */;
  %610 = %609.2;
  %611 = cast(%var_10225, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %615 = @func_9503() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %616 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %617 = @func_7447() /* ty=Tensor[(6, 11, 1), float32] */;
  %618 = mod(%613, %614) /* ty=Tensor[(15, 14, 11), float64] */;
  %619 = %615.1;
  %620 = %616.1;
  (%617, %var_10200, %var_10201, %618, %619, %620)
}

def @func_4029() -> (Tensor[(1, 16, 16), float64],) {
  %621 = @func_3160() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %622 = %621.0;
  (%622,)
}

def @func_11575() -> (Tensor[(1, 16, 16), float64],) {
  %623 = @func_8670() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %624 = %623.0;
  (%624,)
}

def @func_5206() -> Tensor[(1, 16, 16), float64] {
  @func_1259() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_6713(%var_6700: float64, %var_6701: Tensor[(3, 3, 12), float64]) -> (Tensor[(3, 3, 12), float64],) {
  %625 = cast(%var_6700, dtype="float64") /* ty=float64 */;
  %626 = cast(%var_6701, dtype="float64") /* ty=Tensor[(3, 3, 12), float64] */;
  %627 = power(%625, %626) /* ty=Tensor[(3, 3, 12), float64] */;
  (%627,)
}

def @func_7270() -> (Tensor[(1, 16, 16), float64],) {
  %628 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %629 = %628.0;
  (%629,)
}

def @func_9297() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32]) {
  %630 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %631 = @func_9160() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(12, 6, 7), float64], Tensor[(504), float32], Tensor[(66), float32]) */;
  %632 = %630.0;
  %633 = @func_6681() /* ty=Tensor[(1, 16, 16), float64] */;
  %634 = %631.3;
  (%632, %633, %634)
}

def @func_11415() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %635 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %636 = @func_4245() /* ty=(Tensor[(6, 11, 1), float64],) */;
  %637 = %635.0;
  %638 = %636.0;
  (%637, %638)
}

def @func_10113() -> (Tensor[(1, 16, 16), float64],) {
  %639 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %640 = %639.0;
  (%640,)
}

def @func_8213() -> Tensor[(6, 11, 1), float32] {
  %641 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  rsqrt(%642) /* ty=Tensor[(6, 11, 1), float32] */
}

def @func_4020() -> (Tensor[(1, 16, 16), float64],) {
  %643 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  (%643,)
}

def @func_4245() -> (Tensor[(6, 11, 1), float64],) {
  %644 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  (%644,)
}

def @func_10948() -> (Tensor[(14, 5, 10), uint64], Tensor[(1, 16, 16), float64], Tensor[(22, 3), float64]) {
  %645 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
  %646 = @func_4657() /* ty=(Tensor[(22, 3), float64],) */;
  %647 = %645.1;
  %648 = @func_2299() /* ty=Tensor[(1, 16, 16), float64] */;
  %649 = %646.0;
  (%647, %648, %649)
}

def @func_3160() -> (Tensor[(1, 16, 16), float64],) {
  %650 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %651 = %650.0;
  (%651,)
}

def @func_1816() -> (Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %652 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %653 = %652.4;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
  %655 = reshape(%654, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %656 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %657 = %656.0;
  %658 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %659 = %658.0;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %661 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%657, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %665 = @func_286(%655) /* ty=Tensor[(4, 12, 13), float32] */;
  %666 = subtract(%662, %663) /* ty=Tensor[(?, 16, 16), float64] */;
  %667 = %664.0;
  (%653, %665, %666, %667)
}

def @func_440(%var_406: Tensor[(14, 5, 10), uint64], %var_407: Tensor[(14, 5, 10), uint64]) -> (Tensor[(14, 5, 10), uint64],) {
  %668 = cast(%var_407, dtype="uint64") /* ty=Tensor[(14, 5, 10), uint64] */;
  %669 = shape_of(%var_406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%var_406, dtype="uint64") /* ty=Tensor[(14, 5, 10), uint64] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %672 = left_shift(%670, %671) /* ty=Tensor[(14, 5, 10), uint64] */;
  (%672,)
}

def @func_5479() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %673 = @func_3190() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %674 = cast(meta[relay.Constant][24] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %675 = reshape(%674, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %676 = @func_1527(%675) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
  %677 = %673.0;
  %678 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  %679 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  %680 = %676.0;
  %681 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
  (%677, %678, %679, %680, meta[relay.Constant][24] /* ty=Tensor[(66), float32] */, %681)
}

def @func_4546() -> (Tensor[(1, 16, 16), float64],) {
  %682 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %683 = %682.0;
  (%683,)
}

def @func_4566() -> (Tensor[(16, 16, 16), bool],) {
  %684 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
  %685 = cast(%684, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %686 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 16, 16), float64] */, dtype="bool") /* ty=Tensor[(16, 16, 16), bool] */;
  %687 = less_equal(%685, %686) /* ty=Tensor[(16, 16, 16), bool] */;
  (%687,)
}

def @func_8974() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) {
  %688 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %689 = @func_4280() /* ty=(Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) */;
  %690 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %691 = @func_3955() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %692 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %693 = %692.0;
  %694 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %695 = %694.0;
  %696 = cast(%695, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %697 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%693, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %700 = %688.1;
  %701 = %689.1;
  %702 = %690.0;
  %703 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
  %704 = %691.0;
  %705 = logical_or(%698, %699) /* ty=Tensor[(?, 16, 16), bool] */;
  (%700, %701, %702, %703, %704, %705)
}

def @func_4955() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64], Tensor[(6, 11, ?), float64], Tensor[(?, 16, 16), bool]) {
  %706 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %707 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %708 = @func_4901() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) */;
  %709 = @func_3376() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) */;
  %710 = %706.0;
  %711 = %707.0;
  %712 = %708.3;
  %713 = %709.0;
  (%710, %711, %712, %713)
}

def @func_5092() -> (Tensor[(6, 11, 1), float64],) {
  %714 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  (%714,)
}

def @func_4996(%var_4987: Tensor[(4, 16, 16), uint16]) -> Tensor[(4, 16, 16), bool] {
  %715 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %716 = %715.2;
  %717 = cast(%716, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
  %718 = cast(%var_4987, dtype="bool") /* ty=Tensor[(4, 16, 16), bool] */;
  less(%717, %718) /* ty=Tensor[(4, 16, 16), bool] */
}

def @func_6231() -> Tensor[(?, 16, 16), float64] {
  %719 = @func_2299() /* ty=Tensor[(1, 16, 16), float64] */;
  %720 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %721 = %720.1;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(?, 16, 16), float64] */;
  %723 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%719, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%724, %725) /* ty=Tensor[(?, 16, 16), float64] */
}

def @func_10191() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %726 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %727 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %728 = @func_7521() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) */;
  %729 = %726.0;
  %730 = %727.3;
  %731 = %728.0;
  (%729, %730, %731)
}

def @func_3955() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %732 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %733 = %732.0;
  %734 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  (%733, %734)
}

def @func_10818() -> (Tensor[(1, 16, 16), float64], Tensor[(3, 1, 14), float64], Tensor[(42), float64]) {
  %735 = cast(meta[relay.Constant][26] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %736 = reshape(%735, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float64] */;
  %737 = @func_10624(%736) /* ty=(Tensor[(3, 1, 14), float64], Tensor[(700), uint64]) */;
  %738 = @func_9410() /* ty=Tensor[(1, 16, 16), float64] */;
  %739 = %737.0;
  (%738, %739, meta[relay.Constant][26] /* ty=Tensor[(42), float64] */)
}

def @func_1246() -> (Tensor[(1, 16, 16), float64],) {
  %740 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  (%740,)
}

def @func_2077() -> Tensor[(1, 16, 16), float64] {
  @func_2061() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_7387(%var_7350: Tensor[(7, 11, 13), float32]) -> Tensor[(7, 11, 13), float32] {
  %741 = cast(%var_7350, dtype="float32") /* ty=Tensor[(7, 11, 13), float32] */;
  asinh(%741) /* ty=Tensor[(7, 11, 13), float32] */
}

def @func_2142(%var_2117: Tensor[(5, 16, 16), float64]) -> (Tensor[(5, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  %742 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %743 = cast(%742, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %744 = cast(%var_2117, dtype="bool") /* ty=Tensor[(5, 16, 16), bool] */;
  %745 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %746 = logical_or(%743, %744) /* ty=Tensor[(5, 16, 16), bool] */;
  %747 = %745.0;
  (%746, %747)
}

def @func_4428() -> (Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %748 = @func_4245() /* ty=(Tensor[(6, 11, 1), float64],) */;
  %749 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %750 = %748.0;
  %751 = %749.6;
  (%750, %751)
}

def @func_5661() -> (Tensor[(6, 11, ?), float64], Tensor[(2, 8, 10), float32], Tensor[(1, 16, 16), float64], Tensor[(700), uint64]) {
  %752 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %753 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 10), float64] */;
  %754 = erf(%753) /* ty=Tensor[(2, 8, 10), float64] */;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(2, 8, 10), float64] */;
  %756 = rsqrt(%755) /* ty=Tensor[(2, 8, 10), float64] */;
  %757 = cast(%754, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %761 = cast(meta[relay.Constant][28] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %762 = reshape(%761, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
  %763 = @func_1202(%762) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
  %764 = %752.0;
  %765 = floor_divide(%759, %760) /* ty=Tensor[(2, 8, 10), float32] */;
  %766 = %763.0;
  (%764, %765, %766, meta[relay.Constant][28] /* ty=Tensor[(700), uint64] */)
}

def @func_8541() -> Tensor[(1, 16, 16), float64] {
  %767 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %767.6
}

def @func_3812() -> Tensor[(1, 16, 16), float64] {
  %768 = @func_3113() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */;
  %768.0
}

def @func_9073(%var_9065: Tensor[(3840), float64]) -> (Tensor[(1, 16, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(3840), float64], Tensor[(?, 16, 16), bool]) {
  %769 = @func_4499() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) */;
  %770 = cast(%var_9065, dtype="float64") /* ty=Tensor[(3840), float64] */;
  %771 = reshape(%770, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
  %772 = @func_2683() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %773 = %772.0;
  %774 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %775 = %774.0;
  %776 = cast(%775, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %777 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%773, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %780 = %769.2;
  %781 = @func_2620(%771) /* ty=Tensor[(15, 16, 16), uint16] */;
  %782 = less(%778, %779) /* ty=Tensor[(?, 16, 16), bool] */;
  (%780, %781, %var_9065, %782)
}

def @func_2391() -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) {
  %783 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %784 = cast(meta[relay.Constant][29] /* ty=Tensor[(252, 2), float32] */, dtype="float32") /* ty=Tensor[(252, 2), float32] */;
  %785 = cast(meta[relay.Constant][30] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %786 = reshape(%784, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %787 = reshape(%785, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %788 = @func_2349(%786, %787) /* ty=(Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) */;
  %789 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %790 = %789.0;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %792 = rsqrt(%791) /* ty=Tensor[(1, 16, 16), float32] */;
  %793 = cast(%792, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %794 = %783.1;
  %795 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  %796 = %788.1;
  %797 = exp(%793) /* ty=Tensor[(1, 16, 16), float32] */;
  (%794, %795, %796, meta[relay.Constant][29] /* ty=Tensor[(252, 2), float32] */, meta[relay.Constant][30] /* ty=Tensor[(66), float32] */, %797)
}

def @func_10463() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) {
  %798 = @func_2683() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %799 = %798.0;
  %800 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
  (%799, %800)
}

def @func_9468() -> (Tensor[(?, 16, 16), int16], Tensor[(3, 3, 12), float64], float64, Tensor[(108), float64], Tensor[(1, 16, 16), float64]) {
  %801 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %802 = cast(-6.44816f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %803 = cast(meta[relay.Constant][31] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %804 = reshape(%802, newshape=[]) /* ty=float64 */;
  %805 = reshape(%803, newshape=[3, 3, 12]) /* ty=Tensor[(3, 3, 12), float64] */;
  %806 = @func_6713(%804, %805) /* ty=(Tensor[(3, 3, 12), float64],) */;
  %807 = @func_4546() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %808 = %801.4;
  %809 = %806.0;
  %810 = %807.0;
  (%808, %809, -6.44816f64 /* ty=float64 */, meta[relay.Constant][31] /* ty=Tensor[(108), float64] */, %810)
}

def @func_1367() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) {
  %811 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %812 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %813 = cast(meta[relay.Constant][32] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %814 = reshape(%813, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %815 = @func_685(%814) /* ty=Tensor[(6, 11, 1), float32] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
  %817 = cast(meta[relay.Constant][33] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %818 = reshape(%817, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %819 = %811.0;
  %820 = %812.0;
  %821 = acosh(%816) /* ty=Tensor[(6, 11, 1), float64] */;
  %822 = @func_286(%818) /* ty=Tensor[(4, 12, 13), float32] */;
  (%819, %820, meta[relay.Constant][32] /* ty=Tensor[(66), float32] */, %821, %822, meta[relay.Constant][33] /* ty=Tensor[(624), float32] */)
}

def @func_4499() -> (Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) {
  %823 = @func_4428() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %824 = %823.0;
  %825 = cast(%824, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %826 = reshape(%825, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %827 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %828 = @func_685(%826) /* ty=Tensor[(6, 11, 1), float32] */;
  %829 = %827.0;
  (%824, %828, %829)
}

def @func_5937() -> (Tensor[(?, 16, 16), uint16], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %830 = @func_2463() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float32]) */;
  %831 = %830.1;
  %832 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
  %833 = cast(%832, dtype="uint16") /* ty=Tensor[(1, 16, 16), uint16] */;
  %834 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%831, dtype="uint16") /* ty=Tensor[(1, 16, 16), uint16] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %837 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
  %838 = bitwise_and(%835, %836) /* ty=Tensor[(?, 16, 16), uint16] */;
  %839 = %837.5;
  %840 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  (%838, %839, %840)
}

def @main(%var_11752: Tensor[(8, 16, 16), float64]) -> Tensor[(8, 16, 16), float64] {
  %841 = @func_9631() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %842 = %841.0;
  %843 = cast(%842, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %844 = cast(%var_11752, dtype="bool") /* ty=Tensor[(8, 16, 16), bool] */;
  %845 = logical_and(%843, %844) /* ty=Tensor[(8, 16, 16), bool] */;
  %846 = cast(%845, dtype="float64") /* ty=Tensor[(8, 16, 16), float64] */;
  sinh(%846) /* ty=Tensor[(8, 16, 16), float64] */
}

def @func_3883(%var_3878: Tensor[(1, 16, 16), float64]) -> Tensor[(?, 16, 16), bool] {
  %847 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
  %848 = cast(%var_3878, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%847, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%850, %851) /* ty=Tensor[(?, 16, 16), bool] */
}

def @func_286(%var_283: Tensor[(4, 12, 13), float32]) -> Tensor[(4, 12, 13), float32] {
  %852 = cast(%var_283, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
  asin(%852) /* ty=Tensor[(4, 12, 13), float32] */
}

def @func_6467() -> Tensor[(1, 16, 16), float32] {
  %853 = @func_2576() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %854 = %853.0;
  %855 = cast(%854, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  sigmoid(%855) /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_1527(%var_1502: Tensor[(66), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) {
  %856 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %857 = cast(meta[relay.Constant][34] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %858 = reshape(%857, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
  %859 = @func_1202(%858) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
  %860 = cast(meta[relay.Constant][35] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %861 = reshape(%860, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %862 = cast(%var_1502, dtype="float32") /* ty=Tensor[(66), float32] */;
  %863 = reshape(%862, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %864 = @func_685(%863) /* ty=Tensor[(6, 11, 1), float32] */;
  %865 = cast(meta[relay.Constant][34] /* ty=Tensor[(700), uint64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %866 = cast(%864, dtype="int64") /* ty=Tensor[(6, 11, 1), int64] */;
  %867 = cast(meta[relay.Constant][34] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %868 = reshape(%867, newshape=[350, 2]) /* ty=Tensor[(350, 2), uint64] */;
  %869 = @func_1238(%868) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) */;
  %870 = %869.3;
  %871 = cast(%870, dtype="float32") /* ty=Tensor[(350, 2), float32] */;
  %872 = %856.0;
  %873 = %859.0;
  %874 = @func_286(%861) /* ty=Tensor[(4, 12, 13), float32] */;
  %875 = right_shift(%865, %866) /* ty=Tensor[(6, 11, 700), int64] */;
  %876 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %877 = log2(%871) /* ty=Tensor[(350, 2), float32] */;
  (%872, %873, %874, meta[relay.Constant][35] /* ty=Tensor[(624), float32] */, %var_1502, %875, %876, %877)
}

def @func_2962() -> Tensor[(1, 16, 16), float64] {
  @func_2077() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_4280() -> (Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) {
  %878 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 2, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %879 = log10(%878) /* ty=Tensor[(11, 2, 16), float32] */;
  %880 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  (%879, %880)
}

def @func_5579() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %881 = @func_3571() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(4, 12, 13), float32], Tensor[(6, 11, 624), float32], Tensor[(1, 16, 16), float64]) */;
  %882 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
  %883 = %881.3;
  (%882, %883)
}

def @func_9356(%var_9341: Tensor[(8, 16, 16), float64]) -> Tensor[(8, 16, 16), bool] {
  %884 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %885 = %884.0;
  %886 = cast(%885, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %887 = cast(%var_9341, dtype="bool") /* ty=Tensor[(8, 16, 16), bool] */;
  less_equal(%886, %887) /* ty=Tensor[(8, 16, 16), bool] */
}

def @func_4831() -> Tensor[(1, 16, 16), float64] {
  %888 = @func_3160() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %888.0
}

def @func_5141() -> (Tensor[(1, 16, 16), float64],) {
  %889 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %890 = %889.0;
  (%890,)
}

def @func_9321() -> (Tensor[(1, 16, 16), float64],) {
  %891 = @func_6318() /* ty=(Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) */;
  %892 = %891.1;
  (%892,)
}

def @func_3190() -> (Tensor[(1, 16, 16), float64],) {
  %893 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  (%893,)
}

def @func_8282() -> Tensor[(6, 14, 3), float32] {
  %894 = @func_4901() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) */;
  %894.0
}

def @func_1376() -> (Tensor[(1, 16, 16), float64],) {
  %895 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %896 = %895.0;
  (%896,)
}

def @func_10734(%var_10686: Tensor[(3, 7, 6), int32], %var_10687: Tensor[(3, 7, 6), int32], %var_10702: float32) -> (Tensor[(3, 7, 6), int32], Tensor[(6, 11, 1), float64], Tensor[(2, 12, 16), float32], float32, Tensor[(12, 32), float32], Tensor[(13, 4, 10), float64], Tensor[(520), float32], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), bool], Tensor[(2048, 1), float64], Tensor[(8, 16, 16), int8]) {
  %897 = cast(%var_10687, dtype="int32") /* ty=Tensor[(3, 7, 6), int32] */;
  %898 = shape_of(%var_10686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%var_10686, dtype="int32") /* ty=Tensor[(3, 7, 6), int32] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %901 = @func_4428() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %902 = cast(%var_10702, dtype="float32") /* ty=float32 */;
  %903 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 32), float32] */, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
  %904 = reshape(%902, newshape=[]) /* ty=float32 */;
  %905 = reshape(%903, newshape=[2, 12, 16]) /* ty=Tensor[(2, 12, 16), float32] */;
  %906 = @func_7242(%904, %905) /* ty=(Tensor[(2, 12, 16), float32],) */;
  %907 = cast(meta[relay.Constant][38] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %908 = reshape(%907, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
  %909 = @func_5070(%908) /* ty=(Tensor[(13, 4, 10), float64],) */;
  %910 = @func_6318() /* ty=(Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) */;
  %911 = cast(meta[relay.Constant][39] /* ty=Tensor[(2048, 1), float64] */, dtype="float64") /* ty=Tensor[(2048, 1), float64] */;
  %912 = reshape(%911, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), float64] */;
  %913 = @func_6318() /* ty=(Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) */;
  %914 = subtract(%899, %900) /* ty=Tensor[(3, 7, 6), int32] */;
  %915 = %901.0;
  %916 = %906.0;
  %917 = %909.0;
  %918 = %910.1;
  %919 = @func_9356(%912) /* ty=Tensor[(8, 16, 16), bool] */;
  %920 = %913.0;
  (%914, %915, %916, %var_10702, meta[relay.Constant][37] /* ty=Tensor[(12, 32), float32] */, %917, meta[relay.Constant][38] /* ty=Tensor[(520), float32] */, %918, %919, meta[relay.Constant][39] /* ty=Tensor[(2048, 1), float64] */, %920)
}

def @func_9894() -> (Tensor[(1, 16, 16), float64],) {
  %921 = @func_6990() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), uint16]) */;
  %922 = %921.0;
  (%922,)
}

def @func_1134() -> Tensor[(1, 16, 16), float64] {
  %923 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  atanh(%923) /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_10838() -> Tensor[(6, 11, ?), float64] {
  %924 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %924.0
}

def @func_3454(%var_3394: Tensor[(66), float32]) -> (Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) {
  %925 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %926 = %925.0;
  %927 = cast(%var_3394, dtype="uint32") /* ty=Tensor[(66), uint32] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(1), int32] */;
  %929 = cast(%926, dtype="uint32") /* ty=Tensor[(66), uint32] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %931 = bitwise_and(%929, %930) /* ty=Tensor[(66), uint32] */;
  %932 = cast(%931, dtype="int16") /* ty=Tensor[(66), int16] */;
  %933 = shape_of(%var_3394, dtype="int32") /* ty=Tensor[(1), int32] */;
  %934 = cast(%var_3394, dtype="int16") /* ty=Tensor[(66), int16] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?), int16] */;
  %936 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %937 = %936.0;
  %938 = cast(%937, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %939 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %940 = minimum(%934, %935) /* ty=Tensor[(66), int16] */;
  %941 = erf(%938) /* ty=Tensor[(1, 16, 16), float64] */;
  %942 = %939.1;
  (%940, %941, %942)
}

def @func_9090() -> Tensor[(1, 16, 16), float64] {
  %943 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %943.0
}

def @func_8088(%var_8052: Tensor[(700), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(700), uint64], Tensor[(5, 4, 11), float32], Tensor[(220), float32]) {
  %944 = cast(%var_8052, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %945 = reshape(%944, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
  %946 = @func_1202(%945) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
  %947 = cast(meta[relay.Constant][41] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %948 = reshape(%947, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
  %949 = @func_7154(%948) /* ty=(Tensor[(5, 4, 11), float32], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %950 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  %951 = %946.3;
  %952 = %949.0;
  (%950, %951, %var_8052, %952, meta[relay.Constant][41] /* ty=Tensor[(220), float32] */)
}

def @func_6510() -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  %953 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %954 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %955 = cast(%954, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %956 = shape_of(%953, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%953, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %959 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  %960 = cast(%959, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %961 = greater(%957, %958) /* ty=Tensor[(?, 16, 16), bool] */;
  %962 = acosh(%960) /* ty=Tensor[(1, 16, 16), float64] */;
  (%961, %962)
}

def @func_4901() -> (Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) {
  %963 = @func_3727() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */;
  %964 = @func_2576() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %965 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %966 = %965.1;
  %967 = cast(%966, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
  %968 = log(%967) /* ty=Tensor[(6, 11, 1), float64] */;
  %969 = cast(%968, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %970 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%966, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %973 = not_equal(%971, %972) /* ty=Tensor[(6, 11, ?), bool] */;
  %974 = cast(%966, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
  %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%973, dtype="float64") /* ty=Tensor[(6, 11, ?), float64] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %978 = %963.1;
  %979 = @func_4831() /* ty=Tensor[(1, 16, 16), float64] */;
  %980 = %964.0;
  %981 = mod(%976, %977) /* ty=Tensor[(6, 11, ?), float64] */;
  (%978, %979, %980, %981)
}

def @func_5377() -> Tensor[(1, 16, 16), float64] {
  @func_2299() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_7116() -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(624), float32]) {
  %982 = @func_3113() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */;
  %983 = @func_5154() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %984 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %985 = %982.1;
  %986 = %983.1;
  %987 = %984.1;
  (%985, %986, %987)
}

def @func_4530() -> Tensor[(1, 16, 16), float64] {
  %988 = @func_4499() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) */;
  %988.2
}

def @func_1840() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) {
  %989 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %990 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %991 = %990.0;
  %992 = cast(%991, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %993 = log(%992) /* ty=Tensor[(1, 16, 16), float32] */;
  %994 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 16, 16), float32] */, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %998 = %989.0;
  %999 = not_equal(%996, %997) /* ty=Tensor[(?, 16, 16), bool] */;
  (%998, %999)
}

def @func_2978() -> Tensor[(1, 16, 16), float64] {
  %1000 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %1001 = %1000.0;
  %1002 = cast(%1001, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  cos(%1002) /* ty=Tensor[(1, 16, 16), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4657() -> (Tensor[(22, 3), float64],) {
  %0 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %1 = %0.8;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(22, 3), float64] */;
  %3 = sin(%2) /* ty=Tensor[(22, 3), float64] */;
  (%3,)
}

def @func_6469() -> Tensor[(1, 16, 16), float32] {
  @func_6467() /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_11389() -> Tensor[(1, 16, 16), float64] {
  %4 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %4.0
}

def @func_6392() -> (Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  @func_6390() /* ty=(Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_11645() -> (Tensor[(6, 14, 3), float32], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) {
  %5 = @func_10303() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %7 = reshape(%6, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
  %8 = %5.1;
  %9 = @func_7387(%7) /* ty=Tensor[(7, 11, 13), float32] */;
  (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(1001), float32] */)
}

def @func_7270() -> (Tensor[(1, 16, 16), float64],) {
  %10 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %11 = %10.0;
  (%11,)
}

def @func_9358(%var_9357: Tensor[(8, 16, 16), float64]) -> Tensor[(8, 16, 16), bool] {
  %16 = fn (%var_9341: Tensor[(8, 16, 16), float64]) -> Tensor[(8, 16, 16), bool] {
    %12 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %13 = %12.0;
    %14 = cast(%13, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %15 = cast(%var_9341, dtype="bool") /* ty=Tensor[(8, 16, 16), bool] */;
    less_equal(%14, %15) /* ty=Tensor[(8, 16, 16), bool] */
  };
  %16(%var_9357) /* ty=Tensor[(8, 16, 16), bool] */
}

def @func_687(%var_686: Tensor[(6, 11, 1), float32]) -> Tensor[(6, 11, 1), float32] {
  %18 = fn (%var_675: Tensor[(6, 11, 1), float32]) -> Tensor[(6, 11, 1), float32] {
    %17 = cast(%var_675, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
    sin(%17) /* ty=Tensor[(6, 11, 1), float32] */
  };
  %18(%var_686) /* ty=Tensor[(6, 11, 1), float32] */
}

def @func_3885(%var_3884: Tensor[(1, 16, 16), float64]) -> Tensor[(?, 16, 16), bool] {
  %24 = fn (%var_3878: Tensor[(1, 16, 16), float64]) -> Tensor[(?, 16, 16), bool] {
    %19 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
    %20 = cast(%var_3878, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%19, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%22, %23) /* ty=Tensor[(?, 16, 16), bool] */
  };
  %24(%var_3884) /* ty=Tensor[(?, 16, 16), bool] */
}

def @func_4020() -> (Tensor[(1, 16, 16), float64],) {
  %25 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  (%25,)
}

def @func_9299() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32]) {
  @func_9297() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32]) */
}

def @func_9076(%var_9074: Tensor[(3840), float64]) -> (Tensor[(1, 16, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(3840), float64], Tensor[(?, 16, 16), bool]) {
  @func_9073(%var_9074) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(3840), float64], Tensor[(?, 16, 16), bool]) */
}

def @func_4342(%var_4341: Tensor[(16, 7, 2), float64]) -> (Tensor[(16, 7, 2), float64],) {
  %29 = fn (%var_4335: Tensor[(16, 7, 2), float64]) -> (Tensor[(16, 7, 2), float64],) {
    %26 = cast(-8.79117f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %27 = cast(%var_4335, dtype="float64") /* ty=Tensor[(16, 7, 2), float64] */;
    %28 = floor_divide(%26, %27) /* ty=Tensor[(16, 7, 2), float64] */;
    (%28,)
  };
  %29(%var_4341) /* ty=(Tensor[(16, 7, 2), float64],) */
}

def @func_11415() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %30 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %31 = @func_4245() /* ty=(Tensor[(6, 11, 1), float64],) */;
  %32 = %30.0;
  %33 = %31.0;
  (%32, %33)
}

def @func_8215() -> Tensor[(6, 11, 1), float32] {
  @func_8213() /* ty=Tensor[(6, 11, 1), float32] */
}

def @func_6716(%var_6714: float64, %var_6715: Tensor[(3, 3, 12), float64]) -> (Tensor[(3, 3, 12), float64],) {
  %37 = fn (%var_6700: float64, %var_6701: Tensor[(3, 3, 12), float64]) -> (Tensor[(3, 3, 12), float64],) {
    %34 = cast(%var_6700, dtype="float64") /* ty=float64 */;
    %35 = cast(%var_6701, dtype="float64") /* ty=Tensor[(3, 3, 12), float64] */;
    %36 = power(%34, %35) /* ty=Tensor[(3, 3, 12), float64] */;
    (%36,)
  };
  %37(%var_6714, %var_6715) /* ty=(Tensor[(3, 3, 12), float64],) */
}

def @func_3727() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) {
  %38 = @func_3160() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %39 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
  %40 = %38.0;
  %41 = %39.0;
  (%40, %41)
}

def @func_4638(%var_4636: Tensor[(14, 13, 12), float64], %var_4637: Tensor[(1, 3840), float64]) -> (Tensor[(15, 16, 16), uint16], Tensor[(1, 3840), float64], Tensor[(14, 13, 12), float32], Tensor[(14, 13, 12), float64]) {
  %51 = fn (%var_4616: Tensor[(14, 13, 12), float64], %var_4621: Tensor[(1, 3840), float64]) -> (Tensor[(15, 16, 16), uint16], Tensor[(1, 3840), float64], Tensor[(14, 13, 12), float32], Tensor[(14, 13, 12), float64]) {
    %42 = cast(%var_4621, dtype="float64") /* ty=Tensor[(1, 3840), float64] */;
    %43 = reshape(%42, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
    %44 = cast(%var_4616, dtype="float32") /* ty=Tensor[(14, 13, 12), float32] */;
    %45 = cast(%var_4616, dtype="float64") /* ty=Tensor[(14, 13, 12), float64] */;
    %46 = log2(%45) /* ty=Tensor[(14, 13, 12), float64] */;
    %47 = cast(%46, dtype="float64") /* ty=Tensor[(14, 13, 12), float64] */;
    %48 = @func_2620(%43) /* ty=Tensor[(15, 16, 16), uint16] */;
    %49 = rsqrt(%44) /* ty=Tensor[(14, 13, 12), float32] */;
    %50 = log10(%47) /* ty=Tensor[(14, 13, 12), float64] */;
    (%48, %var_4621, %49, %50)
  };
  %51(%var_4636, %var_4637) /* ty=(Tensor[(15, 16, 16), uint16], Tensor[(1, 3840), float64], Tensor[(14, 13, 12), float32], Tensor[(14, 13, 12), float64]) */
}

def @func_10356() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) {
  @func_10354() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) */
}

def @func_4499() -> (Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) {
  %52 = @func_4428() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %53 = %52.0;
  %54 = cast(%53, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %55 = reshape(%54, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %56 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %57 = @func_685(%55) /* ty=Tensor[(6, 11, 1), float32] */;
  %58 = %56.0;
  (%53, %57, %58)
}

def @func_7154(%var_7128: Tensor[(5, 4, 11), float32]) -> (Tensor[(5, 4, 11), float32], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %59 = cast(%var_7128, dtype="float32") /* ty=Tensor[(5, 4, 11), float32] */;
  %60 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %61 = rsqrt(%59) /* ty=Tensor[(5, 4, 11), float32] */;
  %62 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  %63 = %60.0;
  (%61, %62, %63)
}

def @func_8614(%var_8612: Tensor[(15, 1, 11), uint16], %var_8613: Tensor[(15, 14, 11), uint16]) -> (Tensor[(15, 14, 11), uint16], Tensor[(?, 16, 16), float32], Tensor[(15, 14, 11), float32]) {
  %71 = fn (%var_8555: Tensor[(15, 1, 11), uint16], %var_8556: Tensor[(15, 14, 11), uint16]) -> (Tensor[(15, 14, 11), uint16], Tensor[(?, 16, 16), float32], Tensor[(15, 14, 11), float32]) {
    %64 = cast(%var_8555, dtype="uint16") /* ty=Tensor[(15, 1, 11), uint16] */;
    %65 = cast(%var_8556, dtype="uint16") /* ty=Tensor[(15, 14, 11), uint16] */;
    %66 = @func_7521() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) */;
    %67 = cast(%var_8556, dtype="float32") /* ty=Tensor[(15, 14, 11), float32] */;
    %68 = left_shift(%64, %65) /* ty=Tensor[(15, 14, 11), uint16] */;
    %69 = %66.2;
    %70 = sqrt(%67) /* ty=Tensor[(15, 14, 11), float32] */;
    (%68, %69, %70)
  };
  %71(%var_8612, %var_8613) /* ty=(Tensor[(15, 14, 11), uint16], Tensor[(?, 16, 16), float32], Tensor[(15, 14, 11), float32]) */
}

def @func_7390(%var_7388: Tensor[(7, 11, 13), float32]) -> Tensor[(7, 11, 13), float32] {
  @func_7387(%var_7388) /* ty=Tensor[(7, 11, 13), float32] */
}

def @func_9297() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32]) {
  %72 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %73 = @func_9160() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(12, 6, 7), float64], Tensor[(504), float32], Tensor[(66), float32]) */;
  %74 = %72.0;
  %75 = @func_6681() /* ty=Tensor[(1, 16, 16), float64] */;
  %76 = %73.3;
  (%74, %75, %76)
}

def @func_2392() -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) {
  %92 = fn () -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) {
    %77 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %78 = cast(meta[relay.Constant][1] /* ty=Tensor[(252, 2), float32] */, dtype="float32") /* ty=Tensor[(252, 2), float32] */;
    %79 = cast(meta[relay.Constant][2] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %80 = reshape(%78, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
    %81 = reshape(%79, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %82 = @func_2349(%80, %81) /* ty=(Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) */;
    %83 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %84 = %83.0;
    %85 = cast(%84, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %86 = rsqrt(%85) /* ty=Tensor[(1, 16, 16), float32] */;
    %87 = cast(%86, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %88 = %77.1;
    %89 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
    %90 = %82.1;
    %91 = exp(%87) /* ty=Tensor[(1, 16, 16), float32] */;
    (%88, %89, %90, meta[relay.Constant][1] /* ty=Tensor[(252, 2), float32] */, meta[relay.Constant][2] /* ty=Tensor[(66), float32] */, %91)
  };
  %92() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */
}

def @func_5263() -> Tensor[(1, 16, 16), float64] {
  %93 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
  %93.6
}

def @func_3631() -> (Tensor[(6, 14, 3), float32],) {
  @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */
}

def @func_5566() -> (Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %100 = fn () -> (Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
    %94 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
    %95 = %94.0;
    %96 = cast(%95, dtype="float32") /* ty=Tensor[(66), float32] */;
    %97 = @func_4327() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
    %98 = sinh(%96) /* ty=Tensor[(66), float32] */;
    %99 = %97.1;
    (%98, %99)
  };
  %100() /* ty=(Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_9991(%var_9990: Tensor[(8, 9, 3), float32]) -> (Tensor[(8, 9, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %108 = fn (%var_9941: Tensor[(8, 9, 3), float32]) -> (Tensor[(8, 9, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
    %101 = cast(%var_9941, dtype="float32") /* ty=Tensor[(8, 9, 3), float32] */;
    %102 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %103 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %104 = cos(%101) /* ty=Tensor[(8, 9, 3), float32] */;
    %105 = %102.0;
    %106 = @func_5377() /* ty=Tensor[(1, 16, 16), float64] */;
    %107 = %103.0;
    (%104, %105, %106, %107)
  };
  %108(%var_9990) /* ty=(Tensor[(8, 9, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_1736() -> (Tensor[(1, 16, 16), float64],) {
  %111 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %109 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %110 = %109.0;
    (%110,)
  };
  %111() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_7327() -> Tensor[(1, 16, 16), float64] {
  %112 = fn () -> Tensor[(1, 16, 16), float64] {
    @func_2061() /* ty=Tensor[(1, 16, 16), float64] */
  };
  %112() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_1240(%var_1239: Tensor[(350, 2), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) {
  %125 = fn (%var_1219: Tensor[(350, 2), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) {
    %113 = cast(%var_1219, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
    %114 = cast(%var_1219, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
    %115 = reshape(%113, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %116 = reshape(%114, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %117 = @func_440(%115, %116) /* ty=(Tensor[(14, 5, 10), uint64],) */;
    %118 = cast(%var_1219, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
    %119 = reshape(%118, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
    %120 = @func_1202(%119) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
    %121 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    %122 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    %123 = %117.0;
    %124 = %120.4;
    (%121, %122, %123, %var_1219, %124)
  };
  %125(%var_1239) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) */
}

def @func_2464() -> (Tensor[(624), float32], Tensor[(1, 16, 16), float32]) {
  %130 = fn () -> (Tensor[(624), float32], Tensor[(1, 16, 16), float32]) {
    %126 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
    %127 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
    %128 = %126.0;
    %129 = %127.5;
    (%128, %129)
  };
  %130() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float32]) */
}

def @func_10820() -> (Tensor[(1, 16, 16), float64], Tensor[(3, 1, 14), float64], Tensor[(42), float64]) {
  @func_10818() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(3, 1, 14), float64], Tensor[(42), float64]) */
}

def @func_1529(%var_1528: Tensor[(66), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) {
  %153 = fn (%var_1502: Tensor[(66), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) {
    %131 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %132 = cast(meta[relay.Constant][3] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %133 = reshape(%132, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
    %134 = @func_1202(%133) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
    %135 = cast(meta[relay.Constant][4] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %136 = reshape(%135, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
    %137 = cast(%var_1502, dtype="float32") /* ty=Tensor[(66), float32] */;
    %138 = reshape(%137, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
    %139 = @func_685(%138) /* ty=Tensor[(6, 11, 1), float32] */;
    %140 = cast(meta[relay.Constant][3] /* ty=Tensor[(700), uint64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
    %141 = cast(%139, dtype="int64") /* ty=Tensor[(6, 11, 1), int64] */;
    %142 = cast(meta[relay.Constant][3] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %143 = reshape(%142, newshape=[350, 2]) /* ty=Tensor[(350, 2), uint64] */;
    %144 = @func_1238(%143) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) */;
    %145 = %144.3;
    %146 = cast(%145, dtype="float32") /* ty=Tensor[(350, 2), float32] */;
    %147 = %131.0;
    %148 = %134.0;
    %149 = @func_286(%136) /* ty=Tensor[(4, 12, 13), float32] */;
    %150 = right_shift(%140, %141) /* ty=Tensor[(6, 11, 700), int64] */;
    %151 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
    %152 = log2(%146) /* ty=Tensor[(350, 2), float32] */;
    (%147, %148, %149, meta[relay.Constant][4] /* ty=Tensor[(624), float32] */, %var_1502, %150, %151, %152)
  };
  %153(%var_1528) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */
}

def @func_10191() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %154 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %155 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %156 = @func_7521() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) */;
  %157 = %154.0;
  %158 = %155.3;
  %159 = %156.0;
  (%157, %158, %159)
}

def @func_3956() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %163 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
    %160 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
    %161 = %160.0;
    %162 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
    (%161, %162)
  };
  %163() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */
}

def @func_2300() -> Tensor[(1, 16, 16), float64] {
  %164 = fn () -> Tensor[(1, 16, 16), float64] {
    @func_2061() /* ty=Tensor[(1, 16, 16), float64] */
  };
  %164() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_8283() -> Tensor[(6, 14, 3), float32] {
  %166 = fn () -> Tensor[(6, 14, 3), float32] {
    %165 = @func_4901() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) */;
    %165.0
  };
  %166() /* ty=Tensor[(6, 14, 3), float32] */
}

def @func_3265() -> Tensor[(1, 16, 16), float64] {
  @func_3263() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_7418() -> Tensor[(1, 16, 16), float32] {
  @func_7416() /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_7447() -> Tensor[(6, 11, 1), float32] {
  %167 = @func_6656() /* ty=(Tensor[(252, 2), float32], Tensor[(6, 11, 1), float32], Tensor[(66, 1), float32]) */;
  %167.1
}

def @func_4547() -> (Tensor[(1, 16, 16), float64],) {
  %170 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %168 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %169 = %168.0;
    (%169,)
  };
  %170() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_10738(%var_10735: Tensor[(3, 7, 6), int32], %var_10736: Tensor[(3, 7, 6), int32], %var_10737: float32) -> (Tensor[(3, 7, 6), int32], Tensor[(6, 11, 1), float64], Tensor[(2, 12, 16), float32], float32, Tensor[(12, 32), float32], Tensor[(13, 4, 10), float64], Tensor[(520), float32], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), bool], Tensor[(2048, 1), float64], Tensor[(8, 16, 16), int8]) {
  %195 = fn (%var_10686: Tensor[(3, 7, 6), int32], %var_10687: Tensor[(3, 7, 6), int32], %var_10702: float32) -> (Tensor[(3, 7, 6), int32], Tensor[(6, 11, 1), float64], Tensor[(2, 12, 16), float32], float32, Tensor[(12, 32), float32], Tensor[(13, 4, 10), float64], Tensor[(520), float32], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), bool], Tensor[(2048, 1), float64], Tensor[(8, 16, 16), int8]) {
    %171 = cast(%var_10687, dtype="int32") /* ty=Tensor[(3, 7, 6), int32] */;
    %172 = shape_of(%var_10686, dtype="int32") /* ty=Tensor[(3), int32] */;
    %173 = cast(%var_10686, dtype="int32") /* ty=Tensor[(3, 7, 6), int32] */;
    %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %175 = @func_4428() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
    %176 = cast(%var_10702, dtype="float32") /* ty=float32 */;
    %177 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 32), float32] */, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
    %178 = reshape(%176, newshape=[]) /* ty=float32 */;
    %179 = reshape(%177, newshape=[2, 12, 16]) /* ty=Tensor[(2, 12, 16), float32] */;
    %180 = @func_7242(%178, %179) /* ty=(Tensor[(2, 12, 16), float32],) */;
    %181 = cast(meta[relay.Constant][6] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
    %182 = reshape(%181, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
    %183 = @func_5070(%182) /* ty=(Tensor[(13, 4, 10), float64],) */;
    %184 = @func_6318() /* ty=(Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) */;
    %185 = cast(meta[relay.Constant][7] /* ty=Tensor[(2048, 1), float64] */, dtype="float64") /* ty=Tensor[(2048, 1), float64] */;
    %186 = reshape(%185, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), float64] */;
    %187 = @func_6318() /* ty=(Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) */;
    %188 = subtract(%173, %174) /* ty=Tensor[(3, 7, 6), int32] */;
    %189 = %175.0;
    %190 = %180.0;
    %191 = %183.0;
    %192 = %184.1;
    %193 = @func_9356(%186) /* ty=Tensor[(8, 16, 16), bool] */;
    %194 = %187.0;
    (%188, %189, %190, %var_10702, meta[relay.Constant][5] /* ty=Tensor[(12, 32), float32] */, %191, meta[relay.Constant][6] /* ty=Tensor[(520), float32] */, %192, %193, meta[relay.Constant][7] /* ty=Tensor[(2048, 1), float64] */, %194)
  };
  %195(%var_10735, %var_10736, %var_10737) /* ty=(Tensor[(3, 7, 6), int32], Tensor[(6, 11, 1), float64], Tensor[(2, 12, 16), float32], float32, Tensor[(12, 32), float32], Tensor[(13, 4, 10), float64], Tensor[(520), float32], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), bool], Tensor[(2048, 1), float64], Tensor[(8, 16, 16), int8]) */
}

def @func_7402() -> (Tensor[(1, 16, 16), float64],) {
  %197 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %196 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
    (%196,)
  };
  %197() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_5581() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  @func_5579() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_9412() -> Tensor[(1, 16, 16), float64] {
  @func_9410() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_10374() -> Tensor[(1, 16, 16), float64] {
  %198 = fn () -> Tensor[(1, 16, 16), float64] {
    @func_2978() /* ty=Tensor[(1, 16, 16), float64] */
  };
  %198() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_5579() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %199 = @func_3571() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(4, 12, 13), float32], Tensor[(6, 11, 624), float32], Tensor[(1, 16, 16), float64]) */;
  %200 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
  %201 = %199.3;
  (%200, %201)
}

def @func_4247() -> (Tensor[(6, 11, 1), float64],) {
  @func_4245() /* ty=(Tensor[(6, 11, 1), float64],) */
}

def @func_3161() -> (Tensor[(1, 16, 16), float64],) {
  %204 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %202 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %203 = %202.0;
    (%203,)
  };
  %204() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_4280() -> (Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) {
  %205 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 2, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %206 = log10(%205) /* ty=Tensor[(11, 2, 16), float32] */;
  %207 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  (%206, %207)
}

def @func_2142(%var_2117: Tensor[(5, 16, 16), float64]) -> (Tensor[(5, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  %208 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %209 = cast(%208, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %210 = cast(%var_2117, dtype="bool") /* ty=Tensor[(5, 16, 16), bool] */;
  %211 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %212 = logical_or(%209, %210) /* ty=Tensor[(5, 16, 16), bool] */;
  %213 = %211.0;
  (%212, %213)
}

def @func_9717() -> (Tensor[(1, 16, 16), float64],) {
  @func_9715() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_7116() -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(624), float32]) {
  %214 = @func_3113() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */;
  %215 = @func_5154() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %216 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %217 = %214.1;
  %218 = %215.1;
  %219 = %216.1;
  (%217, %218, %219)
}

def @func_11647() -> (Tensor[(6, 14, 3), float32], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) {
  @func_11645() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) */
}

def @func_9504() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %223 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
    %220 = @func_8974() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %221 = @func_5359() /* ty=Tensor[(1, 16, 16), float64] */;
    %222 = %220.4;
    (%221, %222)
  };
  %223() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_10427(%var_10426: Tensor[(7, 7, 12), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(?, 16, 16), bool], Tensor[(7, 7, 12), int8]) {
  %237 = fn (%var_10375: Tensor[(7, 7, 12), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(?, 16, 16), bool], Tensor[(7, 7, 12), int8]) {
    %224 = @func_10113() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %225 = @func_2948() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
    %226 = @func_8974() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %227 = cast(%var_10375, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
    %228 = acosh(%227) /* ty=Tensor[(7, 7, 12), float32] */;
    %229 = cast(%var_10375, dtype="int8") /* ty=Tensor[(7, 7, 12), int8] */;
    %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
    %231 = cast(%228, dtype="int8") /* ty=Tensor[(7, 7, 12), int8] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %233 = %224.0;
    %234 = %225.0;
    %235 = %226.5;
    %236 = bitwise_xor(%231, %232) /* ty=Tensor[(7, 7, 12), int8] */;
    (%233, %234, %235, %236)
  };
  %237(%var_10426) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(?, 16, 16), bool], Tensor[(7, 7, 12), int8]) */
}

def @func_4902() -> (Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) {
  %257 = fn () -> (Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) {
    %238 = @func_3727() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */;
    %239 = @func_2576() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %240 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
    %241 = %240.1;
    %242 = cast(%241, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
    %243 = log(%242) /* ty=Tensor[(6, 11, 1), float64] */;
    %244 = cast(%243, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
    %245 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
    %246 = cast(%241, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
    %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %248 = not_equal(%246, %247) /* ty=Tensor[(6, 11, ?), bool] */;
    %249 = cast(%241, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
    %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(%248, dtype="float64") /* ty=Tensor[(6, 11, ?), float64] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %253 = %238.1;
    %254 = @func_4831() /* ty=Tensor[(1, 16, 16), float64] */;
    %255 = %239.0;
    %256 = mod(%251, %252) /* ty=Tensor[(6, 11, ?), float64] */;
    (%253, %254, %255, %256)
  };
  %257() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) */
}

def @func_7653() -> Tensor[(1, 16, 16), float32] {
  %258 = fn () -> Tensor[(1, 16, 16), float32] {
    @func_6467() /* ty=Tensor[(1, 16, 16), float32] */
  };
  %258() /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_10474() -> Tensor[(1, 16, 16), float64] {
  @func_10472() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_4999(%var_4997: Tensor[(4, 16, 16), uint16]) -> Tensor[(4, 16, 16), bool] {
  @func_4996(%var_4997) /* ty=Tensor[(4, 16, 16), bool] */
}

def @func_10627(%var_10625: Tensor[(3, 1, 14), float64]) -> (Tensor[(3, 1, 14), float64], Tensor[(700), uint64]) {
  @func_10624(%var_10625) /* ty=(Tensor[(3, 1, 14), float64], Tensor[(700), uint64]) */
}

def @func_1369() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) {
  @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */
}

def @func_5377() -> Tensor[(1, 16, 16), float64] {
  @func_2299() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_3785() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) {
  %259 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %260 = %259.2;
  %261 = cast(%260, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %262 = reshape(%261, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %263 = @func_3454(%262) /* ty=(Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) */;
  %264 = cast(%260, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %265 = %263.1;
  %266 = atan(%264) /* ty=Tensor[(6, 11, 1), float32] */;
  (%265, %266)
}

def @func_6860(%var_6859: Tensor[(8, 7, 5), float32]) -> (Tensor[(8, 7, 5), float32],) {
  %269 = fn (%var_6854: Tensor[(8, 7, 5), float32]) -> (Tensor[(8, 7, 5), float32],) {
    %267 = cast(%var_6854, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
    %268 = acos(%267) /* ty=Tensor[(8, 7, 5), float32] */;
    (%268,)
  };
  %269(%var_6859) /* ty=(Tensor[(8, 7, 5), float32],) */
}

def @func_3573() -> (Tensor[(?, 16, 16), bool], Tensor[(4, 12, 13), float32], Tensor[(6, 11, 624), float32], Tensor[(1, 16, 16), float64]) {
  @func_3571() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(4, 12, 13), float32], Tensor[(6, 11, 624), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_3251(%var_3239: Tensor[(6, 11, 1), float32]) -> (Tensor[(6, 11, ?), bool],) {
  %270 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %271 = %270.2;
  %272 = cast(%var_3239, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%271, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %276 = logical_or(%274, %275) /* ty=Tensor[(6, 11, ?), bool] */;
  (%276,)
}

def @func_2006() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) {
  %295 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) {
    %277 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %278 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %279 = %278.1;
    %280 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %281 = %280.0;
    %282 = cast(%279, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %284 = cast(%281, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %286 = divide(%284, %285) /* ty=Tensor[(?, 16, 16), float32] */;
    %287 = cast(%286, dtype="int8") /* ty=Tensor[(?, 16, 16), int8] */;
    %288 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(%279, dtype="int8") /* ty=Tensor[(1, 16, 16), int8] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %291 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %292 = %277.0;
    %293 = minimum(%289, %290) /* ty=Tensor[(?, 16, 16), int8] */;
    %294 = %291.3;
    (%292, %293, %294)
  };
  %295() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */
}

def @func_1611() -> (Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) {
  @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_9651() -> Tensor[(1, 16, 16), float64] {
  @func_9649() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_6390() -> (Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %296 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  %297 = cast(%296, dtype="int32") /* ty=Tensor[(6, 11, 1), int32] */;
  %298 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 11, 2), float64] */, dtype="int32") /* ty=Tensor[(6, 11, 2), int32] */;
  %299 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 2), float64] */;
  %300 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %301 = left_shift(%297, %298) /* ty=Tensor[(6, 11, 2), int32] */;
  %302 = log(%299) /* ty=Tensor[(6, 11, 2), float64] */;
  %303 = @func_5263() /* ty=Tensor[(1, 16, 16), float64] */;
  %304 = @func_5359() /* ty=Tensor[(1, 16, 16), float64] */;
  %305 = %300.0;
  %306 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  (%301, %302, %303, %304, %305, %306)
}

def @func_8213() -> Tensor[(6, 11, 1), float32] {
  %307 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  rsqrt(%308) /* ty=Tensor[(6, 11, 1), float32] */
}

def @func_2020() -> Tensor[(6, 11, 1), float64] {
  %310 = fn () -> Tensor[(6, 11, 1), float64] {
    %309 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %309.3
  };
  %310() /* ty=Tensor[(6, 11, 1), float64] */
}

def @func_9410() -> Tensor[(1, 16, 16), float64] {
  @func_3263() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_10787() -> (Tensor[(66), float32], Tensor[(6, 11, 1), float64]) {
  %314 = fn () -> (Tensor[(66), float32], Tensor[(6, 11, 1), float64]) {
    %311 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
    %312 = %311.0;
    %313 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
    (%312, %313)
  };
  %314() /* ty=(Tensor[(66), float32], Tensor[(6, 11, 1), float64]) */
}

def @func_10949() -> (Tensor[(14, 5, 10), uint64], Tensor[(1, 16, 16), float64], Tensor[(22, 3), float64]) {
  %320 = fn () -> (Tensor[(14, 5, 10), uint64], Tensor[(1, 16, 16), float64], Tensor[(22, 3), float64]) {
    %315 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
    %316 = @func_4657() /* ty=(Tensor[(22, 3), float64],) */;
    %317 = %315.1;
    %318 = @func_2299() /* ty=Tensor[(1, 16, 16), float64] */;
    %319 = %316.0;
    (%317, %318, %319)
  };
  %320() /* ty=(Tensor[(14, 5, 10), uint64], Tensor[(1, 16, 16), float64], Tensor[(22, 3), float64]) */
}

def @func_9321() -> (Tensor[(1, 16, 16), float64],) {
  %321 = @func_6318() /* ty=(Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) */;
  %322 = %321.1;
  (%322,)
}

def @func_2352(%var_2350: Tensor[(12, 6, 7), float32], %var_2351: Tensor[(66), float32]) -> (Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) {
  %340 = fn (%var_2306: Tensor[(12, 6, 7), float32], %var_2326: Tensor[(66), float32]) -> (Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) {
    %323 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 6, 7), float32] */, dtype="bool") /* ty=Tensor[(12, 6, 7), bool] */;
    %324 = shape_of(%var_2306, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%var_2306, dtype="bool") /* ty=Tensor[(12, 6, 7), bool] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %327 = equal(%325, %326) /* ty=Tensor[(12, 6, 7), bool] */;
    %328 = cast(%327, dtype="float64") /* ty=Tensor[(12, 6, 7), float64] */;
    %329 = cast(%var_2326, dtype="float32") /* ty=Tensor[(66), float32] */;
    %330 = reshape(%329, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
    %331 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 70), uint64] */, dtype="uint64") /* ty=Tensor[(10, 70), uint64] */;
    %332 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 70), uint64] */, dtype="uint64") /* ty=Tensor[(10, 70), uint64] */;
    %333 = reshape(%331, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %334 = reshape(%332, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %335 = @func_440(%333, %334) /* ty=(Tensor[(14, 5, 10), uint64],) */;
    %336 = atanh(%328) /* ty=Tensor[(12, 6, 7), float64] */;
    %337 = @func_685(%330) /* ty=Tensor[(6, 11, 1), float32] */;
    %338 = %335.0;
    %339 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
    (%336, %337, %var_2326, %338, meta[relay.Constant][11] /* ty=Tensor[(10, 70), uint64] */, %339)
  };
  %340(%var_2350, %var_2351) /* ty=(Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) */
}

def @func_6682() -> Tensor[(1, 16, 16), float64] {
  %342 = fn () -> Tensor[(1, 16, 16), float64] {
    %341 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
    %341.6
  };
  %342() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_5479() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %343 = @func_3190() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %344 = cast(meta[relay.Constant][12] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %345 = reshape(%344, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %346 = @func_1527(%345) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
  %347 = %343.0;
  %348 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  %349 = @func_2061() /* ty=Tensor[(1, 16, 16), float64] */;
  %350 = %346.0;
  %351 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
  (%347, %348, %349, %350, meta[relay.Constant][12] /* ty=Tensor[(66), float32] */, %351)
}

def @func_8543() -> Tensor[(1, 16, 16), float64] {
  @func_8541() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_2683() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %352 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %353 = @func_2576() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %354 = %352.0;
  %355 = %353.0;
  (%354, %355)
}

def @func_10924() -> Tensor[(1, 16, 16), float64] {
  %357 = fn () -> Tensor[(1, 16, 16), float64] {
    %356 = @func_10303() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) */;
    %356.2
  };
  %357() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_2564() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %362 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
    %358 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %359 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %360 = %358.0;
    %361 = %359.3;
    (%360, %361)
  };
  %362() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */
}

def @func_7000() -> Tensor[(1, 16, 16), float64] {
  @func_6998() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_2145(%var_2143: Tensor[(5, 16, 16), float64]) -> (Tensor[(5, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  @func_2142(%var_2143) /* ty=(Tensor[(5, 16, 16), bool], Tensor[(1, 16, 16), float64]) */
}

def @func_11142(%var_10996: Tensor[(9, 5, 10), float64]) -> (Tensor[(9, 5, 10), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 120), bool], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %363 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 10), float64] */;
  %364 = shape_of(%var_10996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%var_10996, dtype="float64") /* ty=Tensor[(9, 5, 10), float64] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %367 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %368 = @func_9564() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %369 = @func_3727() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */;
  %370 = cast(meta[relay.Constant][14] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %371 = reshape(%370, newshape=[15, 8, 1]) /* ty=Tensor[(15, 8, 1), float64] */;
  %372 = @func_8813(%371) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 1), float32]) */;
  %373 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %374 = %373.2;
  %375 = cast(%374, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
  %376 = cast(meta[relay.Constant][14] /* ty=Tensor[(120), float64] */, dtype="bool") /* ty=Tensor[(120), bool] */;
  %377 = @func_10786() /* ty=(Tensor[(66), float32], Tensor[(6, 11, 1), float64]) */;
  %378 = floor_divide(%365, %366) /* ty=Tensor[(9, 5, 10), float64] */;
  %379 = %367.0;
  %380 = %368.0;
  %381 = %369.0;
  %382 = %372.1;
  %383 = greater_equal(%375, %376) /* ty=Tensor[(6, 11, 120), bool] */;
  %384 = %377.0;
  %385 = @func_10373() /* ty=Tensor[(1, 16, 16), float64] */;
  (%378, %379, %380, %381, %382, %383, %384, %385)
}

def @func_5208() -> Tensor[(1, 16, 16), float64] {
  @func_5206() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_6320() -> (Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) {
  @func_6318() /* ty=(Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) */
}

def @func_8975() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) {
  %404 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) {
    %386 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
    %387 = @func_4280() /* ty=(Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) */;
    %388 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %389 = @func_3955() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
    %390 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %391 = %390.0;
    %392 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %393 = %392.0;
    %394 = cast(%393, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %395 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
    %396 = cast(%391, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %398 = %386.1;
    %399 = %387.1;
    %400 = %388.0;
    %401 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
    %402 = %389.0;
    %403 = logical_or(%396, %397) /* ty=Tensor[(?, 16, 16), bool] */;
    (%398, %399, %400, %401, %402, %403)
  };
  %404() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */
}

def @func_288(%var_287: Tensor[(4, 12, 13), float32]) -> Tensor[(4, 12, 13), float32] {
  %406 = fn (%var_283: Tensor[(4, 12, 13), float32]) -> Tensor[(4, 12, 13), float32] {
    %405 = cast(%var_283, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
    asin(%405) /* ty=Tensor[(4, 12, 13), float32] */
  };
  %406(%var_287) /* ty=Tensor[(4, 12, 13), float32] */
}

def @func_10114() -> (Tensor[(1, 16, 16), float64],) {
  %409 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %407 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %408 = %407.0;
    (%408,)
  };
  %409() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_4501() -> (Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) {
  @func_4499() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_3115() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  @func_3113() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */
}

def @func_2980() -> Tensor[(1, 16, 16), float64] {
  @func_2978() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_4659() -> (Tensor[(22, 3), float64],) {
  @func_4657() /* ty=(Tensor[(22, 3), float64],) */
}

def @func_10082() -> (Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64]) {
  @func_10080() /* ty=(Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_10463() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) {
  %410 = @func_2683() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %411 = %410.0;
  %412 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
  (%411, %412)
}

def @func_2949() -> (Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %426 = fn () -> (Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
    %413 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
    %414 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %415 = %414.1;
    %416 = cast(%415, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
    %417 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
    %418 = cast(%413, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %420 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
    %421 = cast(%420, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
    %422 = reshape(%421, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %423 = @func_1527(%422) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
    %424 = equal(%418, %419) /* ty=Tensor[(?, 16, 16), bool] */;
    %425 = %423.0;
    (%424, %420, %425)
  };
  %426() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_7937() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %427 = @func_6998() /* ty=Tensor[(1, 16, 16), float64] */;
  %428 = cast(%427, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %429 = @func_6028() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %430 = @func_4831() /* ty=Tensor[(1, 16, 16), float64] */;
  %431 = atan(%428) /* ty=Tensor[(1, 16, 16), float64] */;
  %432 = %429.0;
  (%430, %431, %432)
}

def @func_2078() -> Tensor[(1, 16, 16), float64] {
  %433 = fn () -> Tensor[(1, 16, 16), float64] {
    @func_2061() /* ty=Tensor[(1, 16, 16), float64] */
  };
  %433() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_5481() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  @func_5479() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_9025() -> (Tensor[(1, 16, 16), float64],) {
  %436 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %434 = @func_8974() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %435 = %434.1;
    (%435,)
  };
  %436() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_11510() -> (Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32]) {
  %441 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32]) {
    %437 = @func_9321() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %438 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
    %439 = %437.0;
    %440 = %438.1;
    (%439, %440)
  };
  %441() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32]) */
}

def @func_4282() -> (Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) {
  @func_4280() /* ty=(Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_7617() -> (Tensor[(?, 16, 16), int16], Tensor[(1, 16, 16), float64]) {
  @func_7615() /* ty=(Tensor[(?, 16, 16), int16], Tensor[(1, 16, 16), float64]) */
}

def @func_9468() -> (Tensor[(?, 16, 16), int16], Tensor[(3, 3, 12), float64], float64, Tensor[(108), float64], Tensor[(1, 16, 16), float64]) {
  %442 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %443 = cast(-6.44816f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %444 = cast(meta[relay.Constant][15] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %445 = reshape(%443, newshape=[]) /* ty=float64 */;
  %446 = reshape(%444, newshape=[3, 3, 12]) /* ty=Tensor[(3, 3, 12), float64] */;
  %447 = @func_6713(%445, %446) /* ty=(Tensor[(3, 3, 12), float64],) */;
  %448 = @func_4546() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %449 = %442.4;
  %450 = %447.0;
  %451 = %448.0;
  (%449, %450, -6.44816f64 /* ty=float64 */, meta[relay.Constant][15] /* ty=Tensor[(108), float64] */, %451)
}

def @func_9565() -> (Tensor[(1, 16, 16), float64],) {
  %454 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %452 = @func_7983() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(11, 2, 16), float32]) */;
    %453 = %452.0;
    (%453,)
  };
  %454() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_6844() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) {
  %455 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %456 = @func_5803() /* ty=(Tensor[(6, 14, 3), float64], Tensor[(66), float32], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(6, 14, 3), float64]) */;
  %457 = %455.1;
  %458 = %456.4;
  (%457, %458)
}

def @func_3457(%var_3455: Tensor[(66), float32]) -> (Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) {
  @func_3454(%var_3455) /* ty=(Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) */
}

def @func_4530() -> Tensor[(1, 16, 16), float64] {
  %459 = @func_4499() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) */;
  %459.2
}

def @func_4608(%var_4606: Tensor[(12, 3, 6), float64]) -> (Tensor[(12, 3, 6), float64],) {
  @func_4605(%var_4606) /* ty=(Tensor[(12, 3, 6), float64],) */
}

def @func_5070(%var_5016: Tensor[(13, 4, 10), float32]) -> (Tensor[(13, 4, 10), float64],) {
  %460 = cast(%var_5016, dtype="float32") /* ty=Tensor[(13, 4, 10), float32] */;
  %461 = sqrt(%460) /* ty=Tensor[(13, 4, 10), float32] */;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
  %463 = acosh(%462) /* ty=Tensor[(13, 4, 10), float64] */;
  (%463,)
}

def @func_5361() -> Tensor[(1, 16, 16), float64] {
  @func_5359() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_6318() -> (Tensor[(8, 16, 16), int8], Tensor[(1, 16, 16), float64]) {
  %464 = @func_3955() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="int8") /* ty=Tensor[(1, 16, 16), int8] */;
  %467 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 16, 16), float64] */, dtype="int8") /* ty=Tensor[(8, 16, 16), int8] */;
  %468 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %469 = logical_xor(%466, %467) /* ty=Tensor[(8, 16, 16), int8] */;
  %470 = %468.2;
  (%469, %470)
}

def @func_7983() -> (Tensor[(1, 16, 16), float64], Tensor[(11, 2, 16), float32]) {
  %471 = @func_4280() /* ty=(Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) */;
  %472 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %473 = %471.0;
  (%472, %473)
}

def @func_1247() -> (Tensor[(1, 16, 16), float64],) {
  %475 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %474 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    (%474,)
  };
  %475() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_9161() -> (Tensor[(6, 14, 3), float32], Tensor[(12, 6, 7), float64], Tensor[(504), float32], Tensor[(66), float32]) {
  %483 = fn () -> (Tensor[(6, 14, 3), float32], Tensor[(12, 6, 7), float64], Tensor[(504), float32], Tensor[(66), float32]) {
    %476 = cast(meta[relay.Constant][17] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %477 = cast(meta[relay.Constant][18] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %478 = reshape(%476, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
    %479 = reshape(%477, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %480 = @func_2349(%478, %479) /* ty=(Tensor[(12, 6, 7), float64], Tensor[(6, 11, 1), float32], Tensor[(66), float32], Tensor[(14, 5, 10), uint64], Tensor[(10, 70), uint64], Tensor[(1, 16, 16), float64]) */;
    %481 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
    %482 = %480.0;
    (%481, %482, meta[relay.Constant][17] /* ty=Tensor[(504), float32] */, meta[relay.Constant][18] /* ty=Tensor[(66), float32] */)
  };
  %483() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(12, 6, 7), float64], Tensor[(504), float32], Tensor[(66), float32]) */
}

def @func_9896() -> (Tensor[(1, 16, 16), float64],) {
  @func_9894() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_3377() -> (Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) {
  %492 = fn () -> (Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) {
    %484 = @func_2948() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
    %485 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
    %486 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
    %487 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
    %488 = %484.0;
    %489 = %485.1;
    %490 = %486.1;
    %491 = %487.1;
    (%488, %489, %490, %491)
  };
  %492() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) */
}

def @func_6114() -> Tensor[(6, 14, 3), float32] {
  %494 = fn () -> Tensor[(6, 14, 3), float32] {
    %493 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
    %493.0
  };
  %494() /* ty=Tensor[(6, 14, 3), float32] */
}

def @func_9673() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 700), int64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %503 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 700), int64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
    %495 = @func_4546() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %496 = cast(meta[relay.Constant][19] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %497 = reshape(%496, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %498 = @func_1527(%497) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
    %499 = @func_6390() /* ty=(Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
    %500 = %495.0;
    %501 = %498.5;
    %502 = %499.2;
    (%500, %501, meta[relay.Constant][19] /* ty=Tensor[(66), float32] */, %502)
  };
  %503() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 700), int64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_3571() -> (Tensor[(?, 16, 16), bool], Tensor[(4, 12, 13), float32], Tensor[(6, 11, 624), float32], Tensor[(1, 16, 16), float64]) {
  %504 = @func_3376() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) */;
  %505 = %504.0;
  %506 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %507 = %506.0;
  %508 = cast(%507, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %509 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%505, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = cast(meta[relay.Constant][20] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %513 = reshape(%512, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %514 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
  %515 = cast(%514, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %516 = cast(meta[relay.Constant][20] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %517 = greater_equal(%510, %511) /* ty=Tensor[(?, 16, 16), bool] */;
  %518 = @func_286(%513) /* ty=Tensor[(4, 12, 13), float32] */;
  %519 = mod(%515, %516) /* ty=Tensor[(6, 11, 624), float32] */;
  %520 = @func_2299() /* ty=Tensor[(1, 16, 16), float64] */;
  (%517, %518, %519, %520)
}

def @func_8090(%var_8089: Tensor[(700), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(700), uint64], Tensor[(5, 4, 11), float32], Tensor[(220), float32]) {
  %530 = fn (%var_8052: Tensor[(700), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(700), uint64], Tensor[(5, 4, 11), float32], Tensor[(220), float32]) {
    %521 = cast(%var_8052, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %522 = reshape(%521, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
    %523 = @func_1202(%522) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
    %524 = cast(meta[relay.Constant][21] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %525 = reshape(%524, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
    %526 = @func_7154(%525) /* ty=(Tensor[(5, 4, 11), float32], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
    %527 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
    %528 = %523.3;
    %529 = %526.0;
    (%527, %528, %var_8052, %529, meta[relay.Constant][21] /* ty=Tensor[(220), float32] */)
  };
  %530(%var_8089) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(700), uint64], Tensor[(5, 4, 11), float32], Tensor[(220), float32]) */
}

def @func_3151() -> (Tensor[(66), float32], Tensor[(624), float32]) {
  %537 = fn () -> (Tensor[(66), float32], Tensor[(624), float32]) {
    %531 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
    %532 = %531.4;
    %533 = cast(%532, dtype="float32") /* ty=Tensor[(66), float32] */;
    %534 = reshape(%533, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %535 = @func_1527(%534) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(66), float32], Tensor[(6, 11, 700), int64], Tensor[(1, 16, 16), float64], Tensor[(350, 2), float32]) */;
    %536 = %535.3;
    (%532, %536)
  };
  %537() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */
}

def @func_7118() -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(624), float32]) {
  @func_7116() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(624), float32]) */
}

def @func_1841() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) {
  %549 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) {
    %538 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %539 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %540 = %539.0;
    %541 = cast(%540, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %542 = log(%541) /* ty=Tensor[(1, 16, 16), float32] */;
    %543 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 16, 16), float32] */, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
    %545 = cast(%542, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %547 = %538.0;
    %548 = not_equal(%545, %546) /* ty=Tensor[(?, 16, 16), bool] */;
    (%547, %548)
  };
  %549() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */
}

def @func_5142() -> (Tensor[(1, 16, 16), float64],) {
  %552 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %550 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %551 = %550.0;
    (%551,)
  };
  %552() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_10472() -> Tensor[(1, 16, 16), float64] {
  %553 = @func_10113() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %553.0
}

def @func_6467() -> Tensor[(1, 16, 16), float32] {
  %554 = @func_2576() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %555 = %554.0;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  sigmoid(%556) /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_4567() -> (Tensor[(16, 16, 16), bool],) {
  %561 = fn () -> (Tensor[(16, 16, 16), bool],) {
    %557 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
    %558 = cast(%557, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %559 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 16, 16), float64] */, dtype="bool") /* ty=Tensor[(16, 16, 16), bool] */;
    %560 = less_equal(%558, %559) /* ty=Tensor[(16, 16, 16), bool] */;
    (%560,)
  };
  %561() /* ty=(Tensor[(16, 16, 16), bool],) */
}

def @func_2962() -> Tensor[(1, 16, 16), float64] {
  @func_2077() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_8332() -> (Tensor[(6, 11, ?), float64],) {
  %564 = fn () -> (Tensor[(6, 11, ?), float64],) {
    %562 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
    %563 = %562.0;
    (%563,)
  };
  %564() /* ty=(Tensor[(6, 11, ?), float64],) */
}

def @func_440(%var_406: Tensor[(14, 5, 10), uint64], %var_407: Tensor[(14, 5, 10), uint64]) -> (Tensor[(14, 5, 10), uint64],) {
  %565 = cast(%var_407, dtype="uint64") /* ty=Tensor[(14, 5, 10), uint64] */;
  %566 = shape_of(%var_406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%var_406, dtype="uint64") /* ty=Tensor[(14, 5, 10), uint64] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %569 = left_shift(%567, %568) /* ty=Tensor[(14, 5, 10), uint64] */;
  (%569,)
}

def @func_3319() -> (Tensor[(1, 16, 16), float64],) {
  @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_9249() -> (Tensor[(6, 11, ?), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  @func_9247() /* ty=(Tensor[(6, 11, ?), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_2576() -> (Tensor[(1, 16, 16), float64],) {
  %570 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %571 = %570.0;
  (%571,)
}

def @func_5094() -> (Tensor[(6, 11, 1), float64],) {
  @func_5092() /* ty=(Tensor[(6, 11, 1), float64],) */
}

def @func_2578() -> (Tensor[(1, 16, 16), float64],) {
  @func_2576() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_4996(%var_4987: Tensor[(4, 16, 16), uint16]) -> Tensor[(4, 16, 16), bool] {
  %572 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %573 = %572.2;
  %574 = cast(%573, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
  %575 = cast(%var_4987, dtype="bool") /* ty=Tensor[(4, 16, 16), bool] */;
  less(%574, %575) /* ty=Tensor[(4, 16, 16), bool] */
}

def @func_7387(%var_7350: Tensor[(7, 11, 13), float32]) -> Tensor[(7, 11, 13), float32] {
  %576 = cast(%var_7350, dtype="float32") /* ty=Tensor[(7, 11, 13), float32] */;
  asinh(%576) /* ty=Tensor[(7, 11, 13), float32] */
}

def @func_3454(%var_3394: Tensor[(66), float32]) -> (Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) {
  %577 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
  %578 = %577.0;
  %579 = cast(%var_3394, dtype="uint32") /* ty=Tensor[(66), uint32] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(1), int32] */;
  %581 = cast(%578, dtype="uint32") /* ty=Tensor[(66), uint32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %583 = bitwise_and(%581, %582) /* ty=Tensor[(66), uint32] */;
  %584 = cast(%583, dtype="int16") /* ty=Tensor[(66), int16] */;
  %585 = shape_of(%var_3394, dtype="int32") /* ty=Tensor[(1), int32] */;
  %586 = cast(%var_3394, dtype="int16") /* ty=Tensor[(66), int16] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?), int16] */;
  %588 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %589 = %588.0;
  %590 = cast(%589, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %591 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %592 = minimum(%586, %587) /* ty=Tensor[(66), int16] */;
  %593 = erf(%590) /* ty=Tensor[(1, 16, 16), float64] */;
  %594 = %591.1;
  (%592, %593, %594)
}

def @func_6991() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), uint16]) {
  %598 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), uint16]) {
    %595 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
    %596 = @func_5206() /* ty=Tensor[(1, 16, 16), float64] */;
    %597 = %595.2;
    (%596, %597)
  };
  %598() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), uint16]) */
}

def @func_10465() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) {
  @func_10463() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */
}

def @func_4232() -> (Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %636 = fn () -> (Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
    %599 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
    %600 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
    %601 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %602 = %601.0;
    %603 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %604 = %603.1;
    %605 = cast(%604, dtype="uint8") /* ty=Tensor[(?, 16, 16), uint8] */;
    %606 = shape_of(%602, dtype="int32") /* ty=Tensor[(3), int32] */;
    %607 = cast(%602, dtype="uint8") /* ty=Tensor[(1, 16, 16), uint8] */;
    %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %609 = right_shift(%607, %608) /* ty=Tensor[(?, 16, 16), uint8] */;
    %610 = cast(%609, dtype="float64") /* ty=Tensor[(?, 16, 16), float64] */;
    %611 = log2(%610) /* ty=Tensor[(?, 16, 16), float64] */;
    %612 = cast(%609, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
    %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
    %614 = cast(%611, dtype="bool") /* ty=Tensor[(?, 16, 16), bool] */;
    %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %616 = less_equal(%614, %615) /* ty=Tensor[(?, 16, 16), bool] */;
    %617 = cast(%604, dtype="uint16") /* ty=Tensor[(?, 16, 16), uint16] */;
    %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
    %619 = cast(%616, dtype="uint16") /* ty=Tensor[(?, 16, 16), uint16] */;
    %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %621 = @func_3190() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %622 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %623 = %622.0;
    %624 = cast(%623, dtype="int16") /* ty=Tensor[(1, 16, 16), int16] */;
    %625 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%616, dtype="int16") /* ty=Tensor[(?, 16, 16), int16] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %628 = @func_3190() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %629 = %599.0;
    %630 = %600.2;
    %631 = add(%619, %620) /* ty=Tensor[(?, 16, 16), uint16] */;
    %632 = %621.0;
    %633 = left_shift(%626, %627) /* ty=Tensor[(?, 16, 16), int16] */;
    %634 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
    %635 = %628.0;
    (%629, %630, %631, %632, %633, %634, %635)
  };
  %636() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_3191() -> (Tensor[(1, 16, 16), float64],) {
  %638 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %637 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
    (%637,)
  };
  %638() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_6846() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) {
  @func_6844() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) */
}

def @func_11726(%var_11725: Tensor[(6, 14, 3), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) {
  %652 = fn (%var_11701: Tensor[(6, 14, 3), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) {
    %639 = @func_9564() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %640 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
    %641 = cast(%var_11701, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
    %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%640, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %645 = @func_4955() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64], Tensor[(6, 11, ?), float64], Tensor[(?, 16, 16), bool]) */;
    %646 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    %647 = @func_10373() /* ty=Tensor[(1, 16, 16), float64] */;
    %648 = @func_3263() /* ty=Tensor[(1, 16, 16), float64] */;
    %649 = %639.0;
    %650 = minimum(%643, %644) /* ty=Tensor[(6, 14, 3), float32] */;
    %651 = %645.0;
    (%646, %647, %648, %649, %650, %651)
  };
  %652(%var_11725) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_7416() -> Tensor[(1, 16, 16), float32] {
  @func_6467() /* ty=Tensor[(1, 16, 16), float32] */
}

def @func_4532() -> Tensor[(1, 16, 16), float64] {
  @func_4530() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_10554() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(1, 16, 16), float64]) {
  %660 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(1, 16, 16), float64]) {
    %653 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %654 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
    %655 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %656 = @func_9090() /* ty=Tensor[(1, 16, 16), float64] */;
    %657 = %653.0;
    %658 = %654.1;
    %659 = %655.0;
    (%656, %657, %658, %659)
  };
  %660() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(1, 16, 16), float64]) */
}

def @func_2964() -> Tensor[(1, 16, 16), float64] {
  @func_2962() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_10818() -> (Tensor[(1, 16, 16), float64], Tensor[(3, 1, 14), float64], Tensor[(42), float64]) {
  %661 = cast(meta[relay.Constant][24] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %662 = reshape(%661, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float64] */;
  %663 = @func_10624(%662) /* ty=(Tensor[(3, 1, 14), float64], Tensor[(700), uint64]) */;
  %664 = @func_9410() /* ty=Tensor[(1, 16, 16), float64] */;
  %665 = %663.0;
  (%664, %665, meta[relay.Constant][24] /* ty=Tensor[(42), float64] */)
}

def @func_5805() -> (Tensor[(6, 14, 3), float64], Tensor[(66), float32], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(6, 14, 3), float64]) {
  @func_5803() /* ty=(Tensor[(6, 14, 3), float64], Tensor[(66), float32], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(6, 14, 3), float64]) */
}

def @func_10193() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  @func_10191() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_3787() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) {
  @func_3785() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) */
}

def @func_10249(%var_10246: Tensor[(165), uint16], %var_10247: Tensor[(2310), uint16], %var_10248: Tensor[(15, 14, 11), float32]) -> (Tensor[(6, 11, 1), float32], Tensor[(165), uint16], Tensor[(2310), uint16], Tensor[(15, 14, 11), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  %682 = fn (%var_10200: Tensor[(165), uint16], %var_10201: Tensor[(2310), uint16], %var_10225: Tensor[(15, 14, 11), float32]) -> (Tensor[(6, 11, 1), float32], Tensor[(165), uint16], Tensor[(2310), uint16], Tensor[(15, 14, 11), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
    %666 = cast(%var_10200, dtype="uint16") /* ty=Tensor[(165), uint16] */;
    %667 = cast(%var_10201, dtype="uint16") /* ty=Tensor[(2310), uint16] */;
    %668 = reshape(%666, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), uint16] */;
    %669 = reshape(%667, newshape=[15, 14, 11]) /* ty=Tensor[(15, 14, 11), uint16] */;
    %670 = @func_8611(%668, %669) /* ty=(Tensor[(15, 14, 11), uint16], Tensor[(?, 16, 16), float32], Tensor[(15, 14, 11), float32]) */;
    %671 = %670.2;
    %672 = cast(%var_10225, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
    %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %674 = cast(%671, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %676 = @func_9503() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
    %677 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
    %678 = @func_7447() /* ty=Tensor[(6, 11, 1), float32] */;
    %679 = mod(%674, %675) /* ty=Tensor[(15, 14, 11), float64] */;
    %680 = %676.1;
    %681 = %677.1;
    (%678, %var_10200, %var_10201, %679, %680, %681)
  };
  %682(%var_10246, %var_10247, %var_10248) /* ty=(Tensor[(6, 11, 1), float32], Tensor[(165), uint16], Tensor[(2310), uint16], Tensor[(15, 14, 11), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */
}

def @func_7272() -> (Tensor[(1, 16, 16), float64],) {
  @func_7270() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_4022() -> (Tensor[(1, 16, 16), float64],) {
  @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_1867() -> (Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) {
  %692 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) {
    %683 = cast(meta[relay.Constant][25] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %684 = cast(meta[relay.Constant][25] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %685 = reshape(%683, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %686 = reshape(%684, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %687 = @func_440(%685, %686) /* ty=(Tensor[(14, 5, 10), uint64],) */;
    %688 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %689 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
    %690 = %687.0;
    %691 = %688.5;
    (%689, %690, meta[relay.Constant][25] /* ty=Tensor[(700), uint64] */, %691)
  };
  %692() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */
}

def @func_10304() -> (Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) {
  %697 = fn () -> (Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) {
    %693 = @func_5092() /* ty=(Tensor[(6, 11, 1), float64],) */;
    %694 = %693.0;
    %695 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
    %696 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
    (%694, %695, %696)
  };
  %697() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_3113() -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  %698 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
  %699 = @func_2411() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %700 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
  %701 = %698.1;
  %702 = %699.0;
  (%700, %701, %702)
}

def @func_5803() -> (Tensor[(6, 14, 3), float64], Tensor[(66), float32], Tensor[(4, 12, 13), float32], Tensor[(624), float32], Tensor[(6, 14, 3), float64]) {
  %703 = @func_3629() /* ty=(Tensor[(6, 14, 3), float32],) */;
  %704 = %703.0;
  %705 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %709 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %710 = cast(meta[relay.Constant][27] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %711 = reshape(%710, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %712 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %713 = power(%707, %708) /* ty=Tensor[(6, 14, 3), float64] */;
  %714 = %709.2;
  %715 = @func_286(%711) /* ty=Tensor[(4, 12, 13), float32] */;
  %716 = atan(%712) /* ty=Tensor[(6, 14, 3), float64] */;
  (%713, %714, %715, meta[relay.Constant][27] /* ty=Tensor[(624), float32] */, %716)
}

def @func_7407() -> Tensor[(1, 16, 16), float64] {
  %717 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %717.0
}

def @func_7409() -> Tensor[(1, 16, 16), float64] {
  @func_7407() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_11253(%var_11242: Tensor[(14, 42), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(7, 7, 12), int8], Tensor[(14, 42), float32]) {
  %718 = @func_7270() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %719 = @func_3376() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) */;
  %720 = @func_3785() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) */;
  %721 = cast(%var_11242, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %722 = reshape(%721, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %723 = @func_10425(%722) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(?, 16, 16), bool], Tensor[(7, 7, 12), int8]) */;
  %724 = %718.0;
  %725 = %719.0;
  %726 = %720.0;
  %727 = %723.3;
  (%724, %725, %726, %727, %var_11242)
}

def @func_9091() -> Tensor[(1, 16, 16), float64] {
  %729 = fn () -> Tensor[(1, 16, 16), float64] {
    %728 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %728.0
  };
  %729() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_7242(%var_7211: float32, %var_7212: Tensor[(2, 12, 16), float32]) -> (Tensor[(2, 12, 16), float32],) {
  %730 = cast(%var_7211, dtype="float32") /* ty=float32 */;
  %731 = cast(%var_7212, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %732 = add(%730, %731) /* ty=Tensor[(2, 12, 16), float32] */;
  (%732,)
}

def @func_9470() -> (Tensor[(?, 16, 16), int16], Tensor[(3, 3, 12), float64], float64, Tensor[(108), float64], Tensor[(1, 16, 16), float64]) {
  @func_9468() /* ty=(Tensor[(?, 16, 16), int16], Tensor[(3, 3, 12), float64], float64, Tensor[(108), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_11391() -> Tensor[(1, 16, 16), float64] {
  @func_11389() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_6998() -> Tensor[(1, 16, 16), float64] {
  @func_5206() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_9632() -> (Tensor[(1, 16, 16), float64],) {
  %734 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %733 = @func_5206() /* ty=Tensor[(1, 16, 16), float64] */;
    (%733,)
  };
  %734() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_1136() -> Tensor[(1, 16, 16), float64] {
  @func_1134() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_11417() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) {
  @func_11415() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */
}

def @func_3729() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) {
  @func_3727() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */
}

def @func_8815(%var_8814: Tensor[(15, 8, 1), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 1), float32]) {
  %741 = fn (%var_8794: Tensor[(15, 8, 1), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 1), float32]) {
    %735 = cast(%var_8794, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
    %736 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
    %737 = @func_3785() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32]) */;
    %738 = log(%735) /* ty=Tensor[(15, 8, 1), float64] */;
    %739 = %736.1;
    %740 = %737.1;
    (%738, %739, %740)
  };
  %741(%var_8814) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 1), float32]) */
}

def @func_2889() -> (Tensor[(1, 16, 16), float64],) {
  %742 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
  (%742,)
}

def @func_9649() -> Tensor[(1, 16, 16), float64] {
  %743 = @func_7937() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %743.0
}

def @func_9894() -> (Tensor[(1, 16, 16), float64],) {
  %744 = @func_6990() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), uint16]) */;
  %745 = %744.0;
  (%745,)
}

def @func_7449() -> Tensor[(6, 11, 1), float32] {
  @func_7447() /* ty=Tensor[(6, 11, 1), float32] */
}

def @func_11528() -> (Tensor[(66), float32], Tensor[(350, 2), uint64], Tensor[(700), uint64]) {
  @func_11526() /* ty=(Tensor[(66), float32], Tensor[(350, 2), uint64], Tensor[(700), uint64]) */
}

def @func_7522() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) {
  %759 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) {
    %746 = @func_7401() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %747 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
    %748 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %749 = %748.0;
    %750 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
    %751 = %750.0;
    %752 = cast(%751, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %753 = shape_of(%749, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(%749, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %756 = %746.0;
    %757 = %747.3;
    %758 = floor_divide(%754, %755) /* ty=Tensor[(?, 16, 16), float32] */;
    (%756, %757, %758)
  };
  %759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), float32]) */
}

def @func_6939(%var_6869: Tensor[(6, 10, 14), uint64], %var_6870: Tensor[(6, 10, 14), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 10, 14), uint8], Tensor[(6, 10, 14), bool], Tensor[(1, 16, 16), float64]) {
  %760 = @func_4428() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %761 = @func_5937() /* ty=(Tensor[(?, 16, 16), uint16], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
  %762 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %763 = cast(%var_6870, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %764 = shape_of(%var_6869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%var_6869, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %767 = logical_xor(%765, %766) /* ty=Tensor[(6, 10, 14), uint64] */;
  %768 = cast(%767, dtype="uint8") /* ty=Tensor[(6, 10, 14), uint8] */;
  %769 = shape_of(%var_6869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%var_6869, dtype="uint8") /* ty=Tensor[(6, 10, 14), uint8] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %772 = cast(%var_6870, dtype="float64") /* ty=Tensor[(6, 10, 14), float64] */;
  %773 = acos(%772) /* ty=Tensor[(6, 10, 14), float64] */;
  %774 = cast(%var_6870, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="uint64") /* ty=Tensor[(6, 10, 14), uint64] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %778 = right_shift(%776, %777) /* ty=Tensor[(6, 10, 14), uint64] */;
  %779 = cast(%767, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%778, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %783 = @func_3317() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %784 = %760.1;
  %785 = %761.2;
  %786 = @func_2019() /* ty=Tensor[(6, 11, 1), float64] */;
  %787 = %762.0;
  %788 = bitwise_or(%770, %771) /* ty=Tensor[(6, 10, 14), uint8] */;
  %789 = less(%781, %782) /* ty=Tensor[(6, 10, 14), bool] */;
  %790 = %783.0;
  (%784, %785, %786, %787, %788, %789, %790)
}

def @func_4030() -> (Tensor[(1, 16, 16), float64],) {
  %793 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %791 = @func_3160() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %792 = %791.0;
    (%792,)
  };
  %793() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_2891() -> (Tensor[(1, 16, 16), float64],) {
  @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_1260() -> Tensor[(1, 16, 16), float64] {
  %795 = fn () -> Tensor[(1, 16, 16), float64] {
    %794 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %794.0
  };
  %795() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_4956() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64], Tensor[(6, 11, ?), float64], Tensor[(?, 16, 16), bool]) {
  %804 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64], Tensor[(6, 11, ?), float64], Tensor[(?, 16, 16), bool]) {
    %796 = @func_2563() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64]) */;
    %797 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
    %798 = @func_4901() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64]) */;
    %799 = @func_3376() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(14, 5, 10), uint64], Tensor[(624), float32], Tensor[(?, 16, 16), int8]) */;
    %800 = %796.0;
    %801 = %797.0;
    %802 = %798.3;
    %803 = %799.0;
    (%800, %801, %802, %803)
  };
  %804() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 11, ?), float64], Tensor[(6, 11, ?), float64], Tensor[(?, 16, 16), bool]) */
}

def @func_8360() -> (Tensor[(6, 11, ?), float64],) {
  %805 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %806 = %805.0;
  (%806,)
}

def @func_6615(%var_6614: Tensor[(350, 2), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64]) {
  %816 = fn (%var_6609: Tensor[(350, 2), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64]) {
    %807 = @func_3113() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */;
    %808 = cast(%var_6609, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
    %809 = cast(%var_6609, dtype="uint64") /* ty=Tensor[(350, 2), uint64] */;
    %810 = reshape(%808, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %811 = reshape(%809, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %812 = @func_440(%810, %811) /* ty=(Tensor[(14, 5, 10), uint64],) */;
    %813 = %807.0;
    %814 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
    %815 = %812.0;
    (%813, %814, %815, %var_6609)
  };
  %816(%var_6614) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64]) */
}

def @func_4085() -> (Tensor[(6, 11, ?), float64],) {
  %832 = fn () -> (Tensor[(6, 11, ?), float64],) {
    %817 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %818 = %817.3;
    %819 = cast(%818, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
    %820 = reshape(%819, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
    %821 = @func_685(%820) /* ty=Tensor[(6, 11, 1), float32] */;
    %822 = cast(%818, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
    %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
    %824 = cast(%821, dtype="bool") /* ty=Tensor[(6, 11, 1), bool] */;
    %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %826 = equal(%824, %825) /* ty=Tensor[(6, 11, ?), bool] */;
    %827 = cast(%826, dtype="float64") /* ty=Tensor[(6, 11, ?), float64] */;
    %828 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
    %829 = cast(%821, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
    %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %831 = divide(%829, %830) /* ty=Tensor[(6, 11, ?), float64] */;
    (%831,)
  };
  %832() /* ty=(Tensor[(6, 11, ?), float64],) */
}

def @func_8541() -> Tensor[(1, 16, 16), float64] {
  %833 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
  %833.6
}

def @func_5206() -> Tensor[(1, 16, 16), float64] {
  @func_1259() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_7985() -> (Tensor[(1, 16, 16), float64], Tensor[(11, 2, 16), float32]) {
  @func_7983() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(11, 2, 16), float32]) */
}

def @func_9323() -> (Tensor[(1, 16, 16), float64],) {
  @func_9321() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_1377() -> (Tensor[(1, 16, 16), float64],) {
  %836 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %834 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %835 = %834.0;
    (%835,)
  };
  %836() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_10586() -> (Tensor[(1, 16, 16), float64],) {
  %838 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %837 = @func_3263() /* ty=Tensor[(1, 16, 16), float64] */;
    (%837,)
  };
  %838() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_5265() -> Tensor[(1, 16, 16), float64] {
  @func_5263() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_9910() -> (Tensor[(1, 16, 16), float32],) {
  %839 = @func_7652() /* ty=Tensor[(1, 16, 16), float32] */;
  (%839,)
}

def @func_7157(%var_7155: Tensor[(5, 4, 11), float32]) -> (Tensor[(5, 4, 11), float32], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  @func_7154(%var_7155) /* ty=(Tensor[(5, 4, 11), float32], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_6094(%var_6093: Tensor[(9, 16, 16), float64]) -> (Tensor[(9, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(9, 16, 16), float32]) {
  %854 = fn (%var_6044: Tensor[(9, 16, 16), float64]) -> (Tensor[(9, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(9, 16, 16), float32]) {
    %840 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %841 = %840.0;
    %842 = cast(%841, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %843 = cast(%var_6044, dtype="bool") /* ty=Tensor[(9, 16, 16), bool] */;
    %844 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %845 = cast(%var_6044, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
    %846 = erf(%845) /* ty=Tensor[(9, 16, 16), float32] */;
    %847 = cast(%846, dtype="float64") /* ty=Tensor[(9, 16, 16), float64] */;
    %848 = atan(%847) /* ty=Tensor[(9, 16, 16), float64] */;
    %849 = cast(%848, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
    %850 = cast(%841, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %851 = less(%842, %843) /* ty=Tensor[(9, 16, 16), bool] */;
    %852 = %844.0;
    %853 = divide(%849, %850) /* ty=Tensor[(9, 16, 16), float32] */;
    (%851, %852, %853)
  };
  %854(%var_6093) /* ty=(Tensor[(9, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(9, 16, 16), float32]) */
}

def @func_10624(%var_10597: Tensor[(3, 1, 14), float64]) -> (Tensor[(3, 1, 14), float64], Tensor[(700), uint64]) {
  %855 = cast(%var_10597, dtype="float64") /* ty=Tensor[(3, 1, 14), float64] */;
  %856 = @func_1866() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(700), uint64], Tensor[(624), float32]) */;
  %857 = cos(%855) /* ty=Tensor[(3, 1, 14), float64] */;
  %858 = %856.2;
  (%857, %858)
}

def @func_6511() -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
  %869 = fn () -> (Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) {
    %859 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    %860 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    %861 = cast(%860, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %862 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(%859, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %865 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
    %866 = cast(%865, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
    %867 = greater(%863, %864) /* ty=Tensor[(?, 16, 16), bool] */;
    %868 = acosh(%866) /* ty=Tensor[(1, 16, 16), float64] */;
    (%867, %868)
  };
  %869() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */
}

def @func_11576() -> (Tensor[(1, 16, 16), float64],) {
  %872 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %870 = @func_8670() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
    %871 = %870.0;
    (%871,)
  };
  %872() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_3317() -> (Tensor[(1, 16, 16), float64],) {
  %873 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %874 = %873.0;
  (%874,)
}

def @func_4832() -> Tensor[(1, 16, 16), float64] {
  %876 = fn () -> Tensor[(1, 16, 16), float64] {
    %875 = @func_3160() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %875.0
  };
  %876() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_7615() -> (Tensor[(?, 16, 16), int16], Tensor[(1, 16, 16), float64]) {
  %877 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
  %878 = %877.4;
  %879 = @func_7407() /* ty=Tensor[(1, 16, 16), float64] */;
  (%878, %879)
}

def @func_4328() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %883 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
    %880 = @func_4020() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %881 = @func_3812() /* ty=Tensor[(1, 16, 16), float64] */;
    %882 = %880.0;
    (%881, %882)
  };
  %883() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_3057() -> Tensor[(6, 11, 1), float64] {
  @func_3055() /* ty=Tensor[(6, 11, 1), float64] */
}

def @func_3263() -> Tensor[(1, 16, 16), float64] {
  %884 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %884.0
}

def @func_9247() -> (Tensor[(6, 11, ?), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %885 = @func_8331() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %886 = %885.0;
  %887 = @func_6681() /* ty=Tensor[(1, 16, 16), float64] */;
  %888 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
  (%886, %887, %888)
}

def @func_3813() -> Tensor[(1, 16, 16), float64] {
  %890 = fn () -> Tensor[(1, 16, 16), float64] {
    %889 = @func_3113() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64]) */;
    %889.0
  };
  %890() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_10080() -> (Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64]) {
  %891 = @func_6390() /* ty=(Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
  %892 = @func_1816() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %893 = %891.1;
  %894 = %892.3;
  (%893, %894)
}

def @func_3629() -> (Tensor[(6, 14, 3), float32],) {
  %895 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
  %896 = rsqrt(%895) /* ty=Tensor[(6, 14, 3), float32] */;
  (%896,)
}

def @func_8671() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %900 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
    %897 = @func_3727() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float32]) */;
    %898 = %897.0;
    %899 = @func_3812() /* ty=Tensor[(1, 16, 16), float64] */;
    (%898, %899)
  };
  %900() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_5938() -> (Tensor[(?, 16, 16), uint16], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  %912 = fn () -> (Tensor[(?, 16, 16), uint16], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
    %901 = @func_2463() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float32]) */;
    %902 = %901.1;
    %903 = @func_2978() /* ty=Tensor[(1, 16, 16), float64] */;
    %904 = cast(%903, dtype="uint16") /* ty=Tensor[(1, 16, 16), uint16] */;
    %905 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
    %906 = cast(%902, dtype="uint16") /* ty=Tensor[(1, 16, 16), uint16] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %908 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
    %909 = bitwise_and(%906, %907) /* ty=Tensor[(?, 16, 16), uint16] */;
    %910 = %908.5;
    %911 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    (%909, %910, %911)
  };
  %912() /* ty=(Tensor[(?, 16, 16), uint16], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_5156() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  @func_5154() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_2061() -> Tensor[(1, 16, 16), float64] {
  %913 = @func_2005() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8], Tensor[(6, 11, 1), float64]) */;
  %913.0
}

def @func_9912() -> (Tensor[(1, 16, 16), float32],) {
  @func_9910() /* ty=(Tensor[(1, 16, 16), float32],) */
}

def @func_2412() -> (Tensor[(1, 16, 16), float64],) {
  %916 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %914 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %915 = %914.0;
    (%915,)
  };
  %916() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_11256(%var_11254: Tensor[(14, 42), float32]) -> (Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(7, 7, 12), int8], Tensor[(14, 42), float32]) {
  @func_11253(%var_11254) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(7, 7, 12), int8], Tensor[(14, 42), float32]) */
}

def @func_2063() -> Tensor[(1, 16, 16), float64] {
  @func_2061() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_1367() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) {
  %917 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %918 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %919 = cast(meta[relay.Constant][29] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %920 = reshape(%919, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %921 = @func_685(%920) /* ty=Tensor[(6, 11, 1), float32] */;
  %922 = cast(%921, dtype="float64") /* ty=Tensor[(6, 11, 1), float64] */;
  %923 = cast(meta[relay.Constant][30] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %924 = reshape(%923, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %925 = %917.0;
  %926 = %918.0;
  %927 = acosh(%922) /* ty=Tensor[(6, 11, 1), float64] */;
  %928 = @func_286(%924) /* ty=Tensor[(4, 12, 13), float32] */;
  (%925, %926, meta[relay.Constant][29] /* ty=Tensor[(66), float32] */, %927, %928, meta[relay.Constant][30] /* ty=Tensor[(624), float32] */)
}

def @func_8251() -> Tensor[(6, 11, 1), float64] {
  %929 = fn () -> Tensor[(6, 11, 1), float64] {
    @func_3055() /* ty=Tensor[(6, 11, 1), float64] */
  };
  %929() /* ty=Tensor[(6, 11, 1), float64] */
}

def @func_4760() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) {
  %950 = fn () -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) {
    %930 = @func_4280() /* ty=(Tensor[(11, 2, 16), float32], Tensor[(1, 16, 16), float64]) */;
    %931 = cast(meta[relay.Constant][31] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %932 = reshape(%931, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
    %933 = @func_1202(%932) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
    %934 = cast(meta[relay.Constant][32] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %935 = reshape(%934, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %936 = @func_3454(%935) /* ty=(Tensor[(66), int16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int8]) */;
    %937 = @func_1937() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %938 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %939 = @func_4029() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %940 = %939.0;
    %941 = cast(%940, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
    %942 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 16, 16), float64] */;
    %943 = %930.1;
    %944 = @func_2962() /* ty=Tensor[(1, 16, 16), float64] */;
    %945 = %933.4;
    %946 = %936.2;
    %947 = %937.0;
    %948 = %938.0;
    %949 = power(%941, %942) /* ty=Tensor[(8, 16, 16), float64] */;
    (%943, %944, %945, meta[relay.Constant][31] /* ty=Tensor[(700), uint64] */, %946, meta[relay.Constant][32] /* ty=Tensor[(66), float32] */, %947, %948, %949)
  };
  %950() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */
}

def @func_8645() -> Tensor[(1, 16, 16), float64] {
  @func_8643() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_5359() -> Tensor[(1, 16, 16), float64] {
  %951 = @func_2683() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %951.0
}

def @func_1609() -> (Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) {
  %952 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
  %953 = cast(meta[relay.Constant][34] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %954 = reshape(%953, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
  %955 = @func_1202(%954) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
  %956 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %957 = cast(meta[relay.Constant][35] /* ty=Tensor[(22, 3), float32] */, dtype="float32") /* ty=Tensor[(22, 3), float32] */;
  %958 = reshape(%957, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %959 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %960 = %952.5;
  %961 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %962 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
  %963 = @func_1259() /* ty=Tensor[(1, 16, 16), float64] */;
  %964 = %955.2;
  %965 = %956.0;
  %966 = @func_685(%958) /* ty=Tensor[(6, 11, 1), float32] */;
  %967 = %959.0;
  (%960, %961, %962, %963, %964, meta[relay.Constant][34] /* ty=Tensor[(700), uint64] */, %965, %966, meta[relay.Constant][35] /* ty=Tensor[(22, 3), float32] */, %967)
}

def @func_5073(%var_5071: Tensor[(13, 4, 10), float32]) -> (Tensor[(13, 4, 10), float64],) {
  @func_5070(%var_5071) /* ty=(Tensor[(13, 4, 10), float64],) */
}

def @func_6943(%var_6941: Tensor[(6, 10, 14), uint64], %var_6942: Tensor[(6, 10, 14), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 10, 14), uint8], Tensor[(6, 10, 14), bool], Tensor[(1, 16, 16), float64]) {
  @func_6939(%var_6941, %var_6942) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64], Tensor[(6, 10, 14), uint8], Tensor[(6, 10, 14), bool], Tensor[(1, 16, 16), float64]) */
}

def @func_7290() -> Tensor[(22, 3), float64] {
  %968 = @func_4657() /* ty=(Tensor[(22, 3), float64],) */;
  %968.0
}

def @func_2622(%var_2621: Tensor[(15, 16, 16), float64]) -> Tensor[(15, 16, 16), uint16] {
  %972 = fn (%var_2612: Tensor[(15, 16, 16), float64]) -> Tensor[(15, 16, 16), uint16] {
    %969 = @func_2077() /* ty=Tensor[(1, 16, 16), float64] */;
    %970 = cast(%969, dtype="uint16") /* ty=Tensor[(1, 16, 16), uint16] */;
    %971 = cast(%var_2612, dtype="uint16") /* ty=Tensor[(15, 16, 16), uint16] */;
    add(%970, %971) /* ty=Tensor[(15, 16, 16), uint16] */
  };
  %972(%var_2621) /* ty=Tensor[(15, 16, 16), uint16] */
}

def @func_9715() -> (Tensor[(1, 16, 16), float64],) {
  %973 = @func_9247() /* ty=(Tensor[(6, 11, ?), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %974 = %973.1;
  (%974,)
}

def @func_9073(%var_9065: Tensor[(3840), float64]) -> (Tensor[(1, 16, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(3840), float64], Tensor[(?, 16, 16), bool]) {
  %975 = @func_4499() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(6, 11, 1), float32], Tensor[(1, 16, 16), float64]) */;
  %976 = cast(%var_9065, dtype="float64") /* ty=Tensor[(3840), float64] */;
  %977 = reshape(%976, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
  %978 = @func_2683() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */;
  %979 = %978.0;
  %980 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %981 = %980.0;
  %982 = cast(%981, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %983 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%979, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %986 = %975.2;
  %987 = @func_2620(%977) /* ty=Tensor[(15, 16, 16), uint16] */;
  %988 = less(%984, %985) /* ty=Tensor[(?, 16, 16), bool] */;
  (%986, %987, %var_9065, %988)
}

def @func_10838() -> Tensor[(6, 11, ?), float64] {
  %989 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
  %989.0
}

def @func_6656() -> (Tensor[(252, 2), float32], Tensor[(6, 11, 1), float32], Tensor[(66, 1), float32]) {
  %990 = @func_2391() /* ty=(Tensor[(?, 16, 16), bool], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(252, 2), float32], Tensor[(66), float32], Tensor[(1, 16, 16), float32]) */;
  %991 = cast(meta[relay.Constant][36] /* ty=Tensor[(66, 1), float32] */, dtype="float32") /* ty=Tensor[(66, 1), float32] */;
  %992 = reshape(%991, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %993 = %990.3;
  %994 = @func_685(%992) /* ty=Tensor[(6, 11, 1), float32] */;
  (%993, %994, meta[relay.Constant][36] /* ty=Tensor[(66, 1), float32] */)
}

def @main(%var_11752: Tensor[(8, 16, 16), float64]) -> Tensor[(8, 16, 16), float64] {
  %995 = @func_9632() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %996 = %995.0;
  %997 = cast(%996, dtype="bool") /* ty=Tensor[(1, 16, 16), bool] */;
  %998 = cast(%var_11752, dtype="bool") /* ty=Tensor[(8, 16, 16), bool] */;
  %999 = logical_and(%997, %998) /* ty=Tensor[(8, 16, 16), bool] */;
  %1000 = cast(%999, dtype="float64") /* ty=Tensor[(8, 16, 16), float64] */;
  sinh(%1000) /* ty=Tensor[(8, 16, 16), float64] */
}

def @func_5379() -> Tensor[(1, 16, 16), float64] {
  @func_5377() /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_5662() -> (Tensor[(6, 11, ?), float64], Tensor[(2, 8, 10), float32], Tensor[(1, 16, 16), float64], Tensor[(700), uint64]) {
  %1016 = fn () -> (Tensor[(6, 11, ?), float64], Tensor[(2, 8, 10), float32], Tensor[(1, 16, 16), float64], Tensor[(700), uint64]) {
    %1001 = @func_4084() /* ty=(Tensor[(6, 11, ?), float64],) */;
    %1002 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 10), float64] */;
    %1003 = erf(%1002) /* ty=Tensor[(2, 8, 10), float64] */;
    %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(2, 8, 10), float64] */;
    %1005 = rsqrt(%1004) /* ty=Tensor[(2, 8, 10), float64] */;
    %1006 = cast(%1003, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
    %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1008 = cast(%1005, dtype="float32") /* ty=Tensor[(2, 8, 10), float32] */;
    %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1010 = cast(meta[relay.Constant][38] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %1011 = reshape(%1010, newshape=[70, 10]) /* ty=Tensor[(70, 10), uint64] */;
    %1012 = @func_1202(%1011) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */;
    %1013 = %1001.0;
    %1014 = floor_divide(%1008, %1009) /* ty=Tensor[(2, 8, 10), float32] */;
    %1015 = %1012.0;
    (%1013, %1014, %1015, meta[relay.Constant][38] /* ty=Tensor[(700), uint64] */)
  };
  %1016() /* ty=(Tensor[(6, 11, ?), float64], Tensor[(2, 8, 10), float32], Tensor[(1, 16, 16), float64], Tensor[(700), uint64]) */
}

def @func_1204(%var_1203: Tensor[(70, 10), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) {
  %1030 = fn (%var_1171: Tensor[(70, 10), uint64]) -> (Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) {
    %1017 = cast(%var_1171, dtype="uint64") /* ty=Tensor[(70, 10), uint64] */;
    %1018 = cast(%var_1171, dtype="uint64") /* ty=Tensor[(70, 10), uint64] */;
    %1019 = reshape(%1017, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %1020 = reshape(%1018, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %1021 = @func_440(%1019, %1020) /* ty=(Tensor[(14, 5, 10), uint64],) */;
    %1022 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 624), float32] */, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
    %1023 = reshape(%1022, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
    %1024 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 624), float32] */, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
    %1025 = reshape(%1024, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
    %1026 = @func_1134() /* ty=Tensor[(1, 16, 16), float64] */;
    %1027 = %1021.0;
    %1028 = @func_286(%1023) /* ty=Tensor[(4, 12, 13), float32] */;
    %1029 = @func_286(%1025) /* ty=Tensor[(4, 12, 13), float32] */;
    (%1026, %1027, %var_1171, %1028, meta[relay.Constant][39] /* ty=Tensor[(1, 624), float32] */, %1029)
  };
  %1030(%var_1203) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(70, 10), uint64], Tensor[(4, 12, 13), float32], Tensor[(1, 624), float32], Tensor[(4, 12, 13), float32]) */
}

def @func_1938() -> (Tensor[(1, 16, 16), float64],) {
  %1033 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %1031 = @func_1609() /* ty=(Tensor[(624), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(70, 10), uint64], Tensor[(700), uint64], Tensor[(1, 16, 16), float64], Tensor[(6, 11, 1), float32], Tensor[(22, 3), float32], Tensor[(1, 16, 16), float64]) */;
    %1032 = %1031.9;
    (%1032,)
  };
  %1033() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_7939() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  @func_7937() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_10840() -> Tensor[(6, 11, ?), float64] {
  @func_10838() /* ty=Tensor[(6, 11, ?), float64] */
}

def @func_1134() -> Tensor[(1, 16, 16), float64] {
  %1034 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  atanh(%1034) /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_9616() -> Tensor[(6, 11, 2), float64] {
  %1036 = fn () -> Tensor[(6, 11, 2), float64] {
    %1035 = @func_6390() /* ty=(Tensor[(6, 11, 2), int32], Tensor[(6, 11, 2), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */;
    %1035.1
  };
  %1036() /* ty=Tensor[(6, 11, 2), float64] */
}

def @func_6658() -> (Tensor[(252, 2), float32], Tensor[(6, 11, 1), float32], Tensor[(66, 1), float32]) {
  @func_6656() /* ty=(Tensor[(252, 2), float32], Tensor[(6, 11, 1), float32], Tensor[(66, 1), float32]) */
}

def @func_5092() -> (Tensor[(6, 11, 1), float64],) {
  %1037 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  (%1037,)
}

def @func_5154() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %1038 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
  %1039 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %1040 = %1038.7;
  %1041 = %1039.0;
  (%1040, %1041)
}

def @func_444(%var_442: Tensor[(14, 5, 10), uint64], %var_443: Tensor[(14, 5, 10), uint64]) -> (Tensor[(14, 5, 10), uint64],) {
  @func_440(%var_442, %var_443) /* ty=(Tensor[(14, 5, 10), uint64],) */
}

def @func_3055() -> Tensor[(6, 11, 1), float64] {
  @func_2019() /* ty=Tensor[(6, 11, 1), float64] */
}

def @func_4429() -> (Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
  %1046 = fn () -> (Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) {
    %1042 = @func_4245() /* ty=(Tensor[(6, 11, 1), float64],) */;
    %1043 = @func_4231() /* ty=(Tensor[(6, 14, 3), float32], Tensor[(6, 11, 1), float64], Tensor[(?, 16, 16), uint16], Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), int16], Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */;
    %1044 = %1042.0;
    %1045 = %1043.6;
    (%1044, %1045)
  };
  %1046() /* ty=(Tensor[(6, 11, 1), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_6232() -> Tensor[(?, 16, 16), float64] {
  %1054 = fn () -> Tensor[(?, 16, 16), float64] {
    %1047 = @func_2299() /* ty=Tensor[(1, 16, 16), float64] */;
    %1048 = @func_1840() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(?, 16, 16), bool]) */;
    %1049 = %1048.1;
    %1050 = cast(%1049, dtype="float64") /* ty=Tensor[(?, 16, 16), float64] */;
    %1051 = shape_of(%1047, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1052 = cast(%1047, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
    %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%1052, %1053) /* ty=Tensor[(?, 16, 16), float64] */
  };
  %1054() /* ty=Tensor[(?, 16, 16), float64] */
}

def @func_7246(%var_7244: float32, %var_7245: Tensor[(2, 12, 16), float32]) -> (Tensor[(2, 12, 16), float32],) {
  @func_7242(%var_7244, %var_7245) /* ty=(Tensor[(2, 12, 16), float32],) */
}

def @func_8362() -> (Tensor[(6, 11, ?), float64],) {
  @func_8360() /* ty=(Tensor[(6, 11, ?), float64],) */
}

def @func_8643() -> Tensor[(1, 16, 16), float64] {
  %1055 = @func_4759() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 624), float32], Tensor[(700), uint64], Tensor[(?, 16, 16), int8], Tensor[(66), float32], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(8, 16, 16), float64]) */;
  %1055.1
}

def @func_11145(%var_11143: Tensor[(9, 5, 10), float64]) -> (Tensor[(9, 5, 10), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 120), bool], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) {
  @func_11142(%var_11143) /* ty=(Tensor[(9, 5, 10), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(6, 11, 120), bool], Tensor[(66), float32], Tensor[(1, 16, 16), float64]) */
}

def @func_6029() -> (Tensor[(1, 16, 16), float64],) {
  %1058 = fn () -> (Tensor[(1, 16, 16), float64],) {
    %1056 = @func_2889() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %1057 = %1056.0;
    (%1057,)
  };
  %1058() /* ty=(Tensor[(1, 16, 16), float64],) */
}

def @func_1817() -> (Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  %1075 = fn () -> (Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
    %1059 = @func_1367() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32], Tensor[(6, 11, 1), float64], Tensor[(4, 12, 13), float32], Tensor[(624), float32]) */;
    %1060 = %1059.4;
    %1061 = cast(%1060, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
    %1062 = reshape(%1061, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
    %1063 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %1064 = %1063.0;
    %1065 = @func_1735() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %1066 = %1065.0;
    %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
    %1068 = shape_of(%1064, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1069 = cast(%1064, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
    %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1071 = @func_1376() /* ty=(Tensor[(1, 16, 16), float64],) */;
    %1072 = @func_286(%1062) /* ty=Tensor[(4, 12, 13), float32] */;
    %1073 = subtract(%1069, %1070) /* ty=Tensor[(?, 16, 16), float64] */;
    %1074 = %1071.0;
    (%1060, %1072, %1073, %1074)
  };
  %1075() /* ty=(Tensor[(4, 12, 13), float32], Tensor[(4, 12, 13), float32], Tensor[(?, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_4605(%var_4600: Tensor[(12, 3, 6), float64]) -> (Tensor[(12, 3, 6), float64],) {
  %1076 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 6), float64] */;
  %1077 = shape_of(%var_4600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1078 = cast(%var_4600, dtype="float64") /* ty=Tensor[(12, 3, 6), float64] */;
  %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1080 = floor_divide(%1078, %1079) /* ty=Tensor[(12, 3, 6), float64] */;
  (%1080,)
}

def @func_11526() -> (Tensor[(66), float32], Tensor[(350, 2), uint64], Tensor[(700), uint64]) {
  %1081 = @func_9297() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(66), float32]) */;
  %1082 = cast(meta[relay.Constant][42] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %1083 = reshape(%1082, newshape=[350, 2]) /* ty=Tensor[(350, 2), uint64] */;
  %1084 = @func_1238(%1083) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64], Tensor[(14, 5, 10), uint64], Tensor[(350, 2), uint64], Tensor[(1, 624), float32]) */;
  %1085 = %1081.2;
  %1086 = %1084.3;
  (%1085, %1086, meta[relay.Constant][42] /* ty=Tensor[(700), uint64] */)
}

def @func_7292() -> Tensor[(22, 3), float64] {
  @func_7290() /* ty=Tensor[(22, 3), float64] */
}

def @func_2685() -> (Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) {
  @func_2683() /* ty=(Tensor[(1, 16, 16), float64], Tensor[(1, 16, 16), float64]) */
}

def @func_2978() -> Tensor[(1, 16, 16), float64] {
  %1087 = @func_1246() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %1088 = %1087.0;
  %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  cos(%1089) /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_4245() -> (Tensor[(6, 11, 1), float64],) {
  %1090 = @func_3055() /* ty=Tensor[(6, 11, 1), float64] */;
  (%1090,)
}

def @func_3254(%var_3252: Tensor[(6, 11, 1), float32]) -> (Tensor[(6, 11, ?), bool],) {
  @func_3251(%var_3252) /* ty=(Tensor[(6, 11, ?), bool],) */
}

def @func_10354() -> (Tensor[(1, 16, 16), float64], Tensor[(6, 14, 3), float64]) {
  %1091 = @func_9631() /* ty=(Tensor[(1, 16, 16), float64],) */;
  %1092 = @func_8282() /* ty=Tensor[(6, 14, 3), float32] */;
  %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %1094 = %1091.0;
  %1095 = sigmoid(%1093) /* ty=Tensor[(6, 14, 3), float64] */;
  (%1094, %1095)
}

def @func_7803() -> Tensor[(66), float32] {
  %1097 = fn () -> Tensor[(66), float32] {
    %1096 = @func_3150() /* ty=(Tensor[(66), float32], Tensor[(624), float32]) */;
    %1096.0
  };
  %1097() /* ty=Tensor[(66), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_19096(%var_19069: Tensor[(13, 9, 9), float32], %var_19075: Tensor[(1008), uint32]) -> (Tensor[(13, 9, 9), float32], Tensor[(14, 6, 12), uint32], uint32, Tensor[(1008), uint32]) {
  %0 = cast(%var_19069, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  %1 = cast(meta[relay.Constant][0] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %2 = cast(%var_19075, dtype="uint32") /* ty=Tensor[(1008), uint32] */;
  %3 = reshape(%1, newshape=[]) /* ty=uint32 */;
  %4 = reshape(%2, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), uint32] */;
  %5 = @func_7448(%3, %4) /* ty=(Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) */;
  %6 = tan(%0) /* ty=Tensor[(13, 9, 9), float32] */;
  %7 = %5.0;
  (%6, %7, meta[relay.Constant][0] /* ty=uint32 */, %var_19075)
}

def @func_1031(%var_996: Tensor[(14, 11, 2), uint8], %var_1020: Tensor[(234), bool]) -> (Tensor[(14, 11, 2), uint8], Tensor[(14, 11, 2), float32], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(1716), uint64], Tensor[(11, 12, 13), float32], Tensor[(6, 3, 13), bool]) {
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 11, 2), uint8] */, dtype="uint8") /* ty=Tensor[(14, 11, 2), uint8] */;
  %9 = shape_of(%var_996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_996, dtype="uint8") /* ty=Tensor[(14, 11, 2), uint8] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %12 = cast(%var_996, dtype="float32") /* ty=Tensor[(14, 11, 2), float32] */;
  %13 = cast(%var_1020, dtype="bool") /* ty=Tensor[(234), bool] */;
  %14 = cast(%var_1020, dtype="bool") /* ty=Tensor[(234), bool] */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %16 = reshape(%13, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %17 = reshape(%14, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %18 = reshape(%15, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %19 = @func_593(%16, %17, %18) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %20 = %19.0;
  %21 = cast(%20, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
  %22 = cast(%20, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %24 = reshape(%21, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %25 = reshape(%22, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %26 = reshape(%23, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %27 = @func_593(%24, %25, %26) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %28 = cast(%20, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
  %29 = cast(%20, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %31 = reshape(%28, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %32 = reshape(%29, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %33 = reshape(%30, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %34 = @func_593(%31, %32, %33) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %35 = add(%10, %11) /* ty=Tensor[(14, 11, 2), uint8] */;
  %36 = sin(%12) /* ty=Tensor[(14, 11, 2), float32] */;
  %37 = %27.1;
  %38 = %34.0;
  (%35, %36, %20, %var_1020, meta[relay.Constant][2] /* ty=Tensor[(1716), uint64] */, %37, %38)
}

def @func_3884() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %39 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %40 = @func_3162() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %41 = %39.0;
  %42 = %40.0;
  (%41, %42)
}

def @func_4767(%var_4757: Tensor[(2, 16, 5), uint32]) -> (Tensor[(2, 16, 5), bool], Tensor[(8, 4, 11), float64]) {
  %43 = cast(%var_4757, dtype="bool") /* ty=Tensor[(2, 16, 5), bool] */;
  %44 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(2, 16, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 16, 5), uint32] */, dtype="bool") /* ty=Tensor[(2, 16, 5), bool] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %47 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %48 = greater_equal(%45, %46) /* ty=Tensor[(2, 16, 5), bool] */;
  %49 = %47.1;
  (%48, %49)
}

def @func_16119() -> Tensor[(11, 156), uint64] {
  @func_11371() /* ty=Tensor[(11, 156), uint64] */
}

def @func_3669() -> Tensor[(8, 4, 11), float64] {
  %50 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %50.1
}

def @func_19997() -> Tensor[(8, 4, 11), float64] {
  @func_10896() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_16670() -> (Tensor[(8, 4, 11), float64],) {
  %51 = @func_15851() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(234), bool], Tensor[(112), float64], Tensor[(858, 2), uint64]) */;
  %52 = %51.0;
  (%52,)
}

def @func_1791() -> Tensor[(8, 4, 11), float64] {
  @func_1613() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_9687() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %53 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %54 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
  %55 = %53.0;
  %56 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %57 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
  %58 = %54.0;
  (%55, %56, %57, %58)
}

def @func_6945(%var_6937: bool, %var_6938: Tensor[(15, 1), bool]) -> Tensor[(15, 1), bool] {
  %59 = cast(%var_6937, dtype="bool") /* ty=bool */;
  %60 = cast(%var_6938, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
  logical_or(%59, %60) /* ty=Tensor[(15, 1), bool] */
}

def @func_3162() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %61 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %63 = reshape(%62, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %64 = @func_3130(%63) /* ty=Tensor[(8, 4, 11), float64] */;
  (%61, %64)
}

def @func_1767() -> Tensor[(8, 4, 11), float64] {
  %65 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  sinh(%66) /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_6128(%var_6125: float64) -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(1, 4), float64]) {
  %67 = cast(%var_6125, dtype="float64") /* ty=float64 */;
  %68 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
  %69 = reshape(%67, newshape=[]) /* ty=float64 */;
  %70 = reshape(%68, newshape=[1, 4, 1]) /* ty=Tensor[(1, 4, 1), float64] */;
  %71 = @func_3669() /* ty=Tensor[(8, 4, 11), float64] */;
  %72 = @func_3703(%69, %70) /* ty=Tensor[(1, 4, 1), float64] */;
  (%71, %72, %var_6125, meta[relay.Constant][4] /* ty=Tensor[(1, 4), float64] */)
}

def @func_8044() -> (Tensor[(8, 4, 11), float64],) {
  %73 = @func_3959() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %74 = %73.2;
  (%74,)
}

def @func_1456() -> (Tensor[(8, 4, 11), float64],) {
  %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 1, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 11), float64] */;
  %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %77 = power(%75, %76) /* ty=Tensor[(8, 4, 11), float64] */;
  (%77,)
}

def @func_15828() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %78 = @func_6383() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %79 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %80 = @func_12360() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %81 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
  %82 = %78.0;
  %83 = %79.0;
  %84 = %80.0;
  (%81, %82, %83, %84)
}

def @func_5665() -> (Tensor[(8, 4, 11), float64],) {
  %85 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %86 = %85.2;
  (%86,)
}

def @func_8515() -> Tensor[(11, 156), uint64] {
  %87 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %87.1
}

def @func_11838() -> (Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) {
  %88 = @func_8422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) */;
  %89 = %88.1;
  %90 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
  (%89, %90)
}

def @func_4428() -> (Tensor[(8, 4, 11), float64],) {
  %91 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %92 = %91.0;
  (%92,)
}

def @func_5573() -> Tensor[(8, 4, 11), float64] {
  @func_1791() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_12694() -> Tensor[(8, 4, 11), float64] {
  %93 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %93.0
}

def @func_3959() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %94 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %95 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %96 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %97 = %94.0;
  %98 = %95.2;
  %99 = %96.1;
  %100 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
  (%97, %98, %99, %100)
}

def @func_17908() -> (Tensor[(8, 4, 11), float64],) {
  %101 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %102 = %101.1;
  (%102,)
}

def @func_19947() -> (Tensor[(8, 4, 11), float64],) {
  %103 = @func_8131() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %104 = %103.0;
  (%104,)
}

def @func_4620() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %105 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %106 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  %107 = %105.0;
  (%106, %107)
}

def @func_11801(%var_11786: Tensor[(1008), uint32]) -> (Tensor[(8, 4, 11), float64], Tensor[(14, 6, 12), bool], uint32, Tensor[(1008), uint32]) {
  %108 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %109 = cast(meta[relay.Constant][7] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %110 = cast(%var_11786, dtype="uint32") /* ty=Tensor[(1008), uint32] */;
  %111 = reshape(%109, newshape=[]) /* ty=uint32 */;
  %112 = reshape(%110, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), uint32] */;
  %113 = @func_7448(%111, %112) /* ty=(Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) */;
  %114 = %108.1;
  %115 = %113.1;
  (%114, %115, meta[relay.Constant][7] /* ty=uint32 */, %var_11786)
}

def @func_10604() -> (Tensor[(8, 4, 11), float64],) {
  %116 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %117 = %116.0;
  (%117,)
}

def @func_12741() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %118 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %119 = @func_9548() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %120 = %118.0;
  %121 = %119.2;
  (%120, %121)
}

def @func_6560(%var_6555: Tensor[(56, 2), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) {
  %122 = @func_5051() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %123 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %124 = cast(%var_6555, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
  %125 = reshape(%124, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
  %126 = @func_1823(%125) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(1, 112), float64], Tensor[(1716), uint64]) */;
  %127 = %122.0;
  %128 = %123.2;
  %129 = %126.1;
  (%127, %128, %129, %var_6555)
}

def @func_2532(%var_2423: Tensor[(13, 7, 3), bool], %var_2498: Tensor[(4, 28), float64], %var_2518: Tensor[(13, 7, 3), int64]) -> (Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) {
  %130 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 7, 3), bool] */, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %131 = shape_of(%var_2423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%var_2423, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %134 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
  %135 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %136 = cast(%135, dtype="int8") /* ty=Tensor[(8, 4, 11), int8] */;
  %137 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%134, dtype="int8") /* ty=Tensor[(8, 4, 11), int8] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %140 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 7, 3), bool] */, dtype="float64") /* ty=Tensor[(13, 7, 3), float64] */;
  %141 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %142 = cast(%var_2498, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %143 = cast(meta[relay.Constant][9] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %144 = reshape(%142, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %145 = reshape(%143, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %146 = @func_866(%144, %145) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
  %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 7, 3), bool] */, dtype="float32") /* ty=Tensor[(13, 7, 3), float32] */;
  %148 = erf(%147) /* ty=Tensor[(13, 7, 3), float32] */;
  %149 = cast(%var_2423, dtype="int64") /* ty=Tensor[(13, 7, 3), int64] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%148, dtype="int64") /* ty=Tensor[(13, 7, 3), int64] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %153 = right_shift(%151, %152) /* ty=Tensor[(13, 7, 3), int64] */;
  %154 = cast(%var_2518, dtype="uint8") /* ty=Tensor[(13, 7, 3), uint8] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%153, dtype="uint8") /* ty=Tensor[(13, 7, 3), uint8] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %158 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %159 = logical_and(%132, %133) /* ty=Tensor[(13, 7, 3), bool] */;
  %160 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
  %161 = add(%138, %139) /* ty=Tensor[(8, 4, 11), int8] */;
  %162 = sqrt(%140) /* ty=Tensor[(13, 7, 3), float64] */;
  %163 = %141.0;
  %164 = %146.0;
  %165 = subtract(%156, %157) /* ty=Tensor[(13, 7, 3), uint8] */;
  %166 = %158.0;
  (%159, %160, %161, %162, %163, %164, %var_2498, meta[relay.Constant][9] /* ty=Tensor[(1716), uint64] */, %165, %166)
}

def @func_3521() -> Tensor[(8, 4, 11), float64] {
  %167 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %167.0
}

def @func_11674(%var_11654: float64, %var_11655: Tensor[(6, 15, 7), float64]) -> (Tensor[(6, 15, 7), float64],) {
  %168 = cast(%var_11654, dtype="float64") /* ty=float64 */;
  %169 = cast(%var_11655, dtype="float64") /* ty=Tensor[(6, 15, 7), float64] */;
  %170 = mod(%168, %169) /* ty=Tensor[(6, 15, 7), float64] */;
  (%170,)
}

def @func_12111() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %171 = @func_11507() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %172 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %173 = %171.1;
  %174 = %172.0;
  %175 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
  (%173, %174, %175)
}

def @func_17221() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %176 = @func_12382() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %177 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  %178 = %176.0;
  (%177, %178)
}

def @func_6651(%var_6591: Tensor[(3, 6, 3), float32], %var_6592: Tensor[(3, 6, 3), float32]) -> (Tensor[(3, 6, 3), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %179 = cast(%var_6592, dtype="float32") /* ty=Tensor[(3, 6, 3), float32] */;
  %180 = shape_of(%var_6591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_6591, dtype="float32") /* ty=Tensor[(3, 6, 3), float32] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %183 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %184 = @func_3884() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %185 = floor_mod(%181, %182) /* ty=Tensor[(3, 6, 3), float32] */;
  %186 = %183.0;
  %187 = %184.1;
  (%185, %186, %187)
}

def @func_12889() -> (Tensor[(1, 3, 16), float64],) {
  %188 = @func_11838() /* ty=(Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) */;
  %189 = %188.0;
  (%189,)
}

def @func_17836() -> (Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(550), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  %190 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %191 = cast(meta[relay.Constant][10] /* ty=Tensor[(550), float64] */, dtype="float64") /* ty=Tensor[(550), float64] */;
  %192 = reshape(%191, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), float64] */;
  %193 = @func_13662(%192) /* ty=(Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) */;
  %194 = @func_12360() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %195 = %190.0;
  %196 = %193.1;
  %197 = %194.1;
  %198 = @func_6065() /* ty=Tensor[(8, 4, 11), float64] */;
  (%195, %196, meta[relay.Constant][10] /* ty=Tensor[(550), float64] */, %197, %198)
}

def @func_10689() -> (Tensor[(8, 4, 11), float64],) {
  %199 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  (%199,)
}

def @func_6151() -> (Tensor[(8, 4, 11), float64],) {
  %200 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %201 = %200.4;
  (%201,)
}

def @func_18498() -> Tensor[(8, 4, 11), float64] {
  %202 = @func_16375() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %202.0
}

def @func_14321() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %203 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %204 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %205 = %203.0;
  %206 = %204.0;
  (%205, %206)
}

def @func_7327() -> (Tensor[(11, 156), uint64],) {
  %207 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %208 = %207.0;
  (%208,)
}

def @func_7505() -> Tensor[(8, 4, 11), float64] {
  @func_7307() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_4124(%var_4108: Tensor[(364), float64]) -> (Tensor[(13, 7, 4), float64], Tensor[(364), float64], Tensor[(11, 156), float32]) {
  %209 = cast(%var_4108, dtype="float64") /* ty=Tensor[(364), float64] */;
  %210 = reshape(%209, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
  %211 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
  %212 = %211.0;
  %213 = cast(%212, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %214 = @func_1408(%210) /* ty=Tensor[(13, 7, 4), float64] */;
  %215 = erf(%213) /* ty=Tensor[(11, 156), float32] */;
  (%214, %var_4108, %215)
}

def @func_14422() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %216 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %217 = @func_9432() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %218 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %219 = %216.0;
  %220 = %217.1;
  %221 = %218.0;
  (%219, %220, %221)
}

def @func_13209() -> Tensor[(8, 4, 11), float64] {
  %222 = @func_12908() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %222.0
}

def @func_11331() -> Tensor[(8, 4, 11), float64] {
  %223 = @func_5498() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %223.0
}

def @func_3553() -> (Tensor[(8, 4, 11), float64],) {
  %224 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %225 = %224.0;
  (%225,)
}

def @func_18334() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64]) {
  %226 = @func_15828() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %227 = @func_11716() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %228 = %226.3;
  %229 = @func_8562() /* ty=Tensor[(11, 156), bool] */;
  %230 = %227.0;
  (%228, %229, %230)
}

def @func_19958() -> (Tensor[(8, 4, 11), float64],) {
  %231 = @func_14321() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %232 = %231.1;
  (%232,)
}

def @func_18980() -> Tensor[(8, 4, 11), float64] {
  %233 = @func_5665() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %233.0
}

def @func_5498() -> (Tensor[(8, 4, 11), float64],) {
  %234 = @func_5231() /* ty=Tensor[(8, 4, 11), float64] */;
  (%234,)
}

def @func_2614() -> (Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  %235 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %236 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %237 = %235.1;
  %238 = %236.0;
  (%237, %238)
}

def @func_18797() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %239 = @func_6740() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %240 = @func_12395() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %241 = %239.0;
  %242 = %240.0;
  (%241, %242)
}

def @func_11859(%var_11843: Tensor[(3, 1, 6), float32]) -> Tensor[(3, 7, 6), bool] {
  %243 = cast(%var_11843, dtype="bool") /* ty=Tensor[(3, 1, 6), bool] */;
  %244 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  greater(%243, %244) /* ty=Tensor[(3, 7, 6), bool] */
}

def @func_14478() -> Tensor[(8, 4, 11), float64] {
  %245 = @func_5665() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %245.0
}

def @func_19962() -> Tensor[(8, 4, 11), float64] {
  %246 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %246.0
}

def @func_3422() -> (Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %247 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %248 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %249 = %247.4;
  %250 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %251 = %248.0;
  (%249, %250, %251)
}

def @func_9986() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %252 = @func_9595() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %253 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %254 = @func_7241() /* ty=Tensor[(8, 4, 11), float64] */;
  %255 = %252.1;
  %256 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  %257 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
  %258 = %253.2;
  (%254, %255, %256, %257, %258)
}

def @func_8037(%var_8035: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64], Tensor[(112), float64]) {
  %259 = cast(%var_8035, dtype="float64") /* ty=Tensor[(112), float64] */;
  %260 = reshape(%259, newshape=[56, 2]) /* ty=Tensor[(56, 2), float64] */;
  %261 = @func_6560(%260) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) */;
  %262 = @func_5231() /* ty=Tensor[(8, 4, 11), float64] */;
  %263 = %261.3;
  (%262, %263, %var_8035)
}

def @func_18673() -> Tensor[(8, 4, 11), float64] {
  %264 = @func_12817() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %264.0
}

def @func_6933() -> (Tensor[(8, 4, 11), float64],) {
  %265 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %266 = %265.0;
  (%266,)
}

def @func_7307() -> Tensor[(8, 4, 11), float64] {
  %267 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %267.1
}

def @func_5021() -> (Tensor[(8, 4, 11), float64],) {
  %268 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  (%268,)
}

def @func_17409(%var_17391: Tensor[(1120), float64], %var_17392: Tensor[(858, 2), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(1120), float64], Tensor[(858, 2), float64]) {
  %269 = @func_6818() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %270 = cast(%var_17391, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %271 = cast(%var_17392, dtype="float32") /* ty=Tensor[(858, 2), float32] */;
  %272 = reshape(%270, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float64] */;
  %273 = reshape(%271, newshape=[11, 156]) /* ty=Tensor[(11, 156), float32] */;
  %274 = @func_4885(%272, %273) /* ty=(Tensor[(364), float64], Tensor[(8, 14, 10), bool], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %275 = cast(%var_17392, dtype="float64") /* ty=Tensor[(858, 2), float64] */;
  %276 = %269.0;
  %277 = %274.5;
  %278 = erf(%275) /* ty=Tensor[(858, 2), float64] */;
  (%276, %277, %var_17391, %278)
}

def @func_3052() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) {
  %279 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %280 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %281 = %280.0;
  %282 = cast(%281, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %283 = acos(%282) /* ty=Tensor[(11, 156), float32] */;
  %284 = cast(%281, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(2), int32] */;
  %286 = cast(%283, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %288 = equal(%286, %287) /* ty=Tensor[(11, 156), bool] */;
  %289 = cast(%283, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %290 = shape_of(%288, dtype="int32") /* ty=Tensor[(2), int32] */;
  %291 = cast(%288, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %293 = cast(%288, dtype="uint8") /* ty=Tensor[(11, 156), uint8] */;
  %294 = shape_of(%283, dtype="int32") /* ty=Tensor[(2), int32] */;
  %295 = cast(%283, dtype="uint8") /* ty=Tensor[(11, 156), uint8] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %297 = multiply(%295, %296) /* ty=Tensor[(11, 156), uint8] */;
  %298 = cast(%297, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %299 = shape_of(%288, dtype="int32") /* ty=Tensor[(2), int32] */;
  %300 = cast(%288, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %302 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  %303 = %279.0;
  %304 = logical_or(%291, %292) /* ty=Tensor[(11, 156), bool] */;
  %305 = divide(%300, %301) /* ty=Tensor[(11, 156), float64] */;
  (%302, %303, %304, %305)
}

def @func_13399() -> Tensor[(8, 4, 11), float64] {
  %306 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %306.0
}

def @func_10304(%var_10301: Tensor[(13, 21), bool], %var_10302: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) {
  %307 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %308 = cast(meta[relay.Constant][12] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %309 = reshape(%308, newshape=[1, 1716]) /* ty=Tensor[(1, 1716), uint64] */;
  %310 = @func_1709(%309) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) */;
  %311 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %312 = cast(%var_10301, dtype="bool") /* ty=Tensor[(13, 21), bool] */;
  %313 = cast(%var_10302, dtype="float64") /* ty=Tensor[(112), float64] */;
  %314 = reshape(%312, newshape=[273]) /* ty=Tensor[(273), bool] */;
  %315 = reshape(%313, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %316 = @func_5520(%314, %315) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) */;
  %317 = %307.1;
  %318 = %310.2;
  %319 = %311.0;
  %320 = %316.2;
  (%317, %318, meta[relay.Constant][12] /* ty=Tensor[(1716), uint64] */, %319, %320, %var_10301, %var_10302)
}

def @func_16151() -> Tensor[(8, 4, 11), float64] {
  %321 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %321.1
}

def @func_6249() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) {
  %322 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %323 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %324 = @func_6005() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %325 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %326 = cast(meta[relay.Constant][13] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %327 = reshape(%326, newshape=[1, 1716]) /* ty=Tensor[(1, 1716), uint64] */;
  %328 = @func_1709(%327) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) */;
  %329 = %322.1;
  %330 = %323.1;
  %331 = %324.0;
  %332 = %325.2;
  %333 = %328.1;
  (%329, %330, %331, %332, %333, meta[relay.Constant][13] /* ty=Tensor[(1716), uint64] */)
}

def @func_4983() -> Tensor[(8, 4, 11), float64] {
  %334 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %334.0
}

def @func_20152() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %335 = @func_8044() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %336 = @func_4620() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %337 = %335.0;
  %338 = %336.0;
  (%337, %338)
}

def @func_15984(%var_15979: Tensor[(1, 8, 4), uint32], %var_15980: Tensor[(9, 8, 4), uint32]) -> (Tensor[(9, 8, 4), bool],) {
  %339 = cast(%var_15979, dtype="bool") /* ty=Tensor[(1, 8, 4), bool] */;
  %340 = cast(%var_15980, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
  %341 = greater(%339, %340) /* ty=Tensor[(9, 8, 4), bool] */;
  (%341,)
}

def @func_16876() -> (Tensor[(1, 3, 16), float64], Tensor[(11, 156), float64]) {
  %342 = @func_12889() /* ty=(Tensor[(1, 3, 16), float64],) */;
  %343 = @func_8562() /* ty=Tensor[(11, 156), bool] */;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %345 = %342.0;
  %346 = exp(%344) /* ty=Tensor[(11, 156), float64] */;
  (%345, %346)
}

def @func_5157() -> Tensor[(8, 4, 11), float64] {
  %347 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %347.1
}

def @func_5418() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %348 = @func_5051() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %349 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %350 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %351 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %352 = %348.0;
  %353 = %349.0;
  %354 = %350.0;
  %355 = %351.0;
  (%352, %353, %354, %355)
}

def @func_5215() -> Tensor[(8, 4, 11), float64] {
  %356 = @func_3837() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %356.0
}

def @func_2108() -> Tensor[(8, 4, 11), float64] {
  @func_1791() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_7971() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %357 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  %358 = @func_7307() /* ty=Tensor[(8, 4, 11), float64] */;
  %359 = @func_7307() /* ty=Tensor[(8, 4, 11), float64] */;
  (%357, %358, %359)
}

def @func_14071() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %360 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %361 = @func_5185() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %362 = %360.1;
  %363 = %361.0;
  %364 = @func_8823() /* ty=Tensor[(8, 4, 11), float64] */;
  (%362, %363, %364)
}

def @func_8112() -> (Tensor[(8, 4, 11), float32],) {
  %365 = @func_3244() /* ty=Tensor[(8, 4, 11), float32] */;
  (%365,)
}

def @func_18640(%var_18629: float64) -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(11, 156), float64], Tensor[(5, 16, 11), float32]) {
  %366 = cast(%var_18629, dtype="float64") /* ty=float64 */;
  %367 = reshape(%366, newshape=[]) /* ty=float64 */;
  %368 = @func_6128(%367) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(1, 4), float64]) */;
  %369 = @func_13328() /* ty=(Tensor[(11, 156), float32],) */;
  %370 = %369.0;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %372 = @func_7505() /* ty=Tensor[(8, 4, 11), float64] */;
  %373 = %368.1;
  %374 = log2(%371) /* ty=Tensor[(11, 156), float64] */;
  %375 = @func_13851() /* ty=Tensor[(5, 16, 11), float32] */;
  (%372, %373, %var_18629, %374, %375)
}

def @func_4901() -> (Tensor[(1, 3, 16), float64],) {
  %376 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 3, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %377 = sinh(%376) /* ty=Tensor[(1, 3, 16), float64] */;
  (%377,)
}

def @func_15447(%var_15423: Tensor[(234), bool], %var_15424: Tensor[(1716, 1), uint64], %var_15436: Tensor[(1716, 5), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(8, 4, 11), float64], Tensor[(1716, 5), int32]) {
  %378 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %379 = @func_14071() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %380 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %381 = cast(%var_15423, dtype="bool") /* ty=Tensor[(234), bool] */;
  %382 = cast(%var_15423, dtype="bool") /* ty=Tensor[(234), bool] */;
  %383 = cast(%var_15424, dtype="uint64") /* ty=Tensor[(1716, 1), uint64] */;
  %384 = reshape(%381, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %385 = reshape(%382, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %386 = reshape(%383, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %387 = @func_593(%384, %385, %386) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %388 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %389 = cast(%var_15424, dtype="int32") /* ty=Tensor[(1716, 1), int32] */;
  %390 = cast(%var_15436, dtype="int32") /* ty=Tensor[(1716, 5), int32] */;
  %391 = %378.0;
  %392 = %379.1;
  %393 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
  %394 = %380.0;
  %395 = %387.0;
  %396 = %388.1;
  %397 = bitwise_xor(%389, %390) /* ty=Tensor[(1716, 5), int32] */;
  (%391, %392, %393, %394, %395, %var_15423, %396, %397)
}

def @func_16954(%var_16922: Tensor[(36), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(36), float32], Tensor[(8, 4, 11), float64]) {
  %398 = @func_9687() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %399 = cast(%var_16922, dtype="float32") /* ty=Tensor[(36), float32] */;
  %400 = reshape(%399, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
  %401 = @func_15162(%400) /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(9, 4), float32], Tensor[(273, 1), bool]) */;
  %402 = @func_12555() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(?, 8, 5), float64]) */;
  %403 = %398.0;
  %404 = %401.1;
  %405 = %402.1;
  (%403, %404, %var_16922, %405)
}

def @func_4191() -> (Tensor[(8, 4, 11), float64],) {
  %406 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %407 = %406.1;
  (%407,)
}

def @func_13662(%var_13647: Tensor[(10, 11, 5), float64]) -> (Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) {
  %408 = cast(%var_13647, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
  %409 = cast(meta[relay.Constant][15] /* ty=Tensor[(273), bool] */, dtype="bool") /* ty=Tensor[(273), bool] */;
  %410 = cast(meta[relay.Constant][16] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %411 = reshape(%409, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
  %412 = reshape(%410, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %413 = @func_10304(%411, %412) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
  %414 = log2(%408) /* ty=Tensor[(10, 11, 5), float64] */;
  %415 = %413.6;
  (%414, %415, meta[relay.Constant][15] /* ty=Tensor[(273), bool] */, meta[relay.Constant][16] /* ty=Tensor[(112), float64] */)
}

def @func_12360() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %416 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %417 = %416.2;
  %418 = @func_8515() /* ty=Tensor[(11, 156), uint64] */;
  (%417, %418)
}

def @func_4282() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %419 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %420 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %421 = %419.0;
  %422 = %420.0;
  (%421, %422)
}

def @func_5185() -> (Tensor[(8, 4, 11), float64],) {
  %423 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %424 = %423.0;
  (%424,)
}

def @func_9826(%var_9822: Tensor[(2, 8, 1), float64]) -> Tensor[(2, 8, 1), float64] {
  %425 = cast(%var_9822, dtype="float64") /* ty=Tensor[(2, 8, 1), float64] */;
  sqrt(%425) /* ty=Tensor[(2, 8, 1), float64] */
}

def @func_15973() -> Tensor[(11, 156), float32] {
  %426 = @func_13328() /* ty=(Tensor[(11, 156), float32],) */;
  %426.0
}

def @func_13431() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(154), float32]) {
  %427 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %428 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %429 = cast(meta[relay.Constant][17] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %430 = reshape(%429, newshape=[11, 1, 14]) /* ty=Tensor[(11, 1, 14), float32] */;
  %431 = @func_10586(%430) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %432 = %427.0;
  %433 = %428.0;
  %434 = %431.0;
  (%432, %433, %434, meta[relay.Constant][17] /* ty=Tensor[(154), float32] */)
}

def @func_10697() -> (Tensor[(11, 156), bool], Tensor[(1716), uint64]) {
  %435 = @func_6249() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %436 = @func_8562() /* ty=Tensor[(11, 156), bool] */;
  %437 = %435.5;
  (%436, %437)
}

def @func_12420() -> (Tensor[(8, 4, 11), float64],) {
  %438 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %439 = %438.0;
  (%439,)
}

def @func_13075() -> (Tensor[(8, 14, 10), float64],) {
  %440 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %441 = %440.3;
  (%441,)
}

def @func_10987(%var_10968: Tensor[(234), bool], %var_10969: Tensor[(286, 6), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(286, 6), uint64], Tensor[(11, 156), float32]) {
  %442 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %443 = cast(%var_10968, dtype="bool") /* ty=Tensor[(234), bool] */;
  %444 = cast(%var_10968, dtype="bool") /* ty=Tensor[(234), bool] */;
  %445 = cast(%var_10969, dtype="uint64") /* ty=Tensor[(286, 6), uint64] */;
  %446 = reshape(%443, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %447 = reshape(%444, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %448 = reshape(%445, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %449 = @func_593(%446, %447, %448) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %450 = @func_8752() /* ty=(Tensor[(11, 156), float32],) */;
  %451 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
  %452 = %442.0;
  %453 = %449.1;
  %454 = %450.0;
  (%451, %452, %453, %var_10968, %var_10969, %454)
}

def @func_4885(%var_4809: Tensor[(8, 14, 10), float64], %var_4831: Tensor[(11, 156), float32]) -> (Tensor[(364), float64], Tensor[(8, 14, 10), bool], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %455 = @func_3580() /* ty=(Tensor[(112), float64], Tensor[(8, 14, 10), float64]) */;
  %456 = %455.1;
  %457 = cast(%var_4809, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %461 = cast(meta[relay.Constant][18] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %462 = reshape(%461, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %463 = @func_4124(%462) /* ty=(Tensor[(13, 7, 4), float64], Tensor[(364), float64], Tensor[(11, 156), float32]) */;
  %464 = %463.2;
  %465 = cast(%var_4831, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(2), int32] */;
  %467 = cast(%464, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %469 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 156), float32] */, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %470 = shape_of(%464, dtype="int32") /* ty=Tensor[(2), int32] */;
  %471 = cast(%464, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %473 = less(%459, %460) /* ty=Tensor[(8, 14, 10), bool] */;
  %474 = less(%467, %468) /* ty=Tensor[(11, 156), bool] */;
  %475 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  %476 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
  %477 = logical_and(%471, %472) /* ty=Tensor[(11, 156), bool] */;
  (meta[relay.Constant][18] /* ty=Tensor[(364), float64] */, %473, %474, %475, %476, %477)
}

def @func_6065() -> Tensor[(8, 4, 11), float64] {
  %478 = @func_3837() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %478.0
}

def @func_6055() -> Tensor[(8, 4, 11), float64] {
  %479 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %479.0
}

def @func_4174() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %480 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %481 = %480.2;
  %482 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  (%481, %482)
}

def @func_1916(%var_1899: Tensor[(8, 14, 10), float64]) -> (Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) {
  %483 = cast(%var_1899, dtype="float64") /* ty=Tensor[(8, 14, 10), float64] */;
  %484 = cast(meta[relay.Constant][20] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %485 = reshape(%484, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
  %486 = sqrt(%483) /* ty=Tensor[(8, 14, 10), float64] */;
  %487 = @func_1408(%485) /* ty=Tensor[(13, 7, 4), float64] */;
  (%486, %487, meta[relay.Constant][20] /* ty=Tensor[(364), float64] */)
}

def @func_12477(%var_12470: Tensor[(273), bool]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) {
  %488 = @func_8112() /* ty=(Tensor[(8, 4, 11), float32],) */;
  %489 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %490 = cast(%var_12470, dtype="bool") /* ty=Tensor[(273), bool] */;
  %491 = cast(meta[relay.Constant][21] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %492 = reshape(%490, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
  %493 = reshape(%491, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %494 = @func_10304(%492, %493) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
  %495 = %488.0;
  %496 = %489.1;
  %497 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  %498 = %494.2;
  (%495, %496, %497, %498, %var_12470, meta[relay.Constant][21] /* ty=Tensor[(112), float64] */)
}

def @func_2904(%var_2880: Tensor[(1, 4, 9), float32]) -> (Tensor[(?, 4, 9), bool],) {
  %499 = cast(%var_2880, dtype="float32") /* ty=Tensor[(1, 4, 9), float32] */;
  %500 = cosh(%499) /* ty=Tensor[(1, 4, 9), float32] */;
  %501 = cast(%var_2880, dtype="bool") /* ty=Tensor[(1, 4, 9), bool] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(1, 4, 9), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %505 = logical_and(%503, %504) /* ty=Tensor[(?, 4, 9), bool] */;
  (%505,)
}

def @func_12817() -> (Tensor[(8, 4, 11), float64],) {
  %506 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %507 = %506.0;
  (%507,)
}

def @func_13749() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %508 = @func_12111() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %509 = @func_12314() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %510 = %508.1;
  %511 = %509.0;
  (%510, %511)
}

def @func_2572() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %512 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %513 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %514 = %512.0;
  %515 = %513.1;
  (%514, %515)
}

def @func_19857() -> Tensor[(8, 4, 11), float64] {
  %516 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %516.0
}

def @func_7714(%var_7688: Tensor[(10, 13, 8), uint64], %var_7689: Tensor[(10, 13, 8), uint64]) -> (Tensor[(10, 13, 8), uint64], Tensor[(10, 13, 8), float64], Tensor[(8, 4, 11), float64]) {
  %517 = cast(%var_7689, dtype="uint64") /* ty=Tensor[(10, 13, 8), uint64] */;
  %518 = shape_of(%var_7688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_7688, dtype="uint64") /* ty=Tensor[(10, 13, 8), uint64] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %521 = cast(%var_7688, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %522 = @func_7633() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %523 = logical_xor(%519, %520) /* ty=Tensor[(10, 13, 8), uint64] */;
  %524 = rsqrt(%521) /* ty=Tensor[(10, 13, 8), float64] */;
  %525 = %522.0;
  (%523, %524, %525)
}

def @func_9595() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %526 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %527 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  %528 = %526.0;
  (%527, %528)
}

def @func_18397() -> (Tensor[(8, 4, 11), float64], Tensor[(550, ?), uint64], Tensor[(8, 4, 11), float64], Tensor[(550, 273), bool]) {
  %529 = @func_4174() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %530 = cast(meta[relay.Constant][22] /* ty=Tensor[(550, 1), float64] */, dtype="float64") /* ty=Tensor[(550, 1), float64] */;
  %531 = cosh(%530) /* ty=Tensor[(550, 1), float64] */;
  %532 = cast(meta[relay.Constant][22] /* ty=Tensor[(550, 1), float64] */, dtype="uint64") /* ty=Tensor[(550, 1), uint64] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(2), int32] */;
  %534 = cast(%531, dtype="uint64") /* ty=Tensor[(550, 1), uint64] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %536 = @func_6249() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %537 = cast(%531, dtype="float32") /* ty=Tensor[(550, 1), float32] */;
  %538 = sigmoid(%537) /* ty=Tensor[(550, 1), float32] */;
  %539 = cast(meta[relay.Constant][22] /* ty=Tensor[(550, 1), float64] */, dtype="float64") /* ty=Tensor[(550, 1), float64] */;
  %540 = reshape(%539, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), float64] */;
  %541 = @func_13662(%540) /* ty=(Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) */;
  %542 = %541.2;
  %543 = cast(%538, dtype="bool") /* ty=Tensor[(550, 1), bool] */;
  %544 = cast(%542, dtype="bool") /* ty=Tensor[(273), bool] */;
  %545 = %529.0;
  %546 = right_shift(%534, %535) /* ty=Tensor[(550, ?), uint64] */;
  %547 = %536.2;
  %548 = less(%543, %544) /* ty=Tensor[(550, 273), bool] */;
  (%545, %546, %547, %548)
}

def @func_9776() -> Tensor[(8, 4, 11), float64] {
  %549 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %549.0
}

def @func_15851() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(234), bool], Tensor[(112), float64], Tensor[(858, 2), uint64]) {
  %550 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %551 = @func_8674() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %552 = cast(meta[relay.Constant][23] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %553 = cast(meta[relay.Constant][24] /* ty=Tensor[(858, 2), uint64] */, dtype="uint64") /* ty=Tensor[(858, 2), uint64] */;
  %554 = reshape(%552, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %555 = reshape(%553, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %556 = @func_866(%554, %555) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
  %557 = %550.0;
  %558 = %551.1;
  %559 = %556.2;
  (%557, %558, %559, meta[relay.Constant][23] /* ty=Tensor[(112), float64] */, meta[relay.Constant][24] /* ty=Tensor[(858, 2), uint64] */)
}

def @func_4511() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %560 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %561 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %562 = %560.0;
  %563 = %561.0;
  (%562, %563)
}

def @func_6005() -> (Tensor[(8, 4, 11), float64],) {
  %564 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %565 = %564.0;
  (%565,)
}

def @func_3580() -> (Tensor[(112), float64], Tensor[(8, 14, 10), float64]) {
  %566 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %567 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %568 = %566.2;
  %569 = %567.3;
  (%568, %569)
}

def @func_13714() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) {
  %570 = @func_13075() /* ty=(Tensor[(8, 14, 10), float64],) */;
  %571 = @func_9124() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %572 = %570.0;
  %573 = %571.1;
  (%572, %573)
}

def @func_2822() -> (Tensor[(8, 4, 11), float64],) {
  %574 = @func_2702() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %575 = %574.2;
  (%575,)
}

def @func_6818() -> (Tensor[(8, 4, 11), float64],) {
  %576 = @func_3837() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %577 = %576.0;
  (%577,)
}

def @func_6459() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %578 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %579 = @func_5185() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %580 = %578.2;
  %581 = %579.0;
  (%580, %581)
}

def @func_10445(%var_10381: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) {
  %582 = @func_8131() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %583 = @func_9124() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %584 = cast(meta[relay.Constant][25] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %585 = cast(%var_10381, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %586 = reshape(%584, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %587 = reshape(%585, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %588 = @func_1558(%586, %587) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) */;
  %589 = %582.0;
  %590 = %583.0;
  %591 = %588.1;
  (%589, %590, %591, meta[relay.Constant][25] /* ty=Tensor[(112), float64] */, %var_10381)
}

def @func_10745() -> Tensor[(8, 4, 11), float64] {
  %592 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %592.0
}

def @func_19122() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %593 = @func_6390() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %594 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  %595 = %593.0;
  (%594, %595)
}

def @func_18140() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(2, 16, 5), bool], Tensor[(160), uint32]) {
  %596 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %597 = @func_12019() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %598 = %597.0;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(8, 14, 10), float64] */;
  %600 = cast(meta[relay.Constant][26] /* ty=Tensor[(160), uint32] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %601 = reshape(%600, newshape=[2, 16, 5]) /* ty=Tensor[(2, 16, 5), uint32] */;
  %602 = @func_4767(%601) /* ty=(Tensor[(2, 16, 5), bool], Tensor[(8, 4, 11), float64]) */;
  %603 = %596.0;
  %604 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
  %605 = acosh(%599) /* ty=Tensor[(8, 14, 10), float64] */;
  %606 = %602.0;
  (%603, %604, %605, %606, meta[relay.Constant][26] /* ty=Tensor[(160), uint32] */)
}

def @func_8752() -> (Tensor[(11, 156), float32],) {
  %607 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
  %608 = %607.0;
  %609 = cast(%608, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %610 = sinh(%609) /* ty=Tensor[(11, 156), float32] */;
  (%610,)
}

def @func_5886(%var_5839: Tensor[(3, 12), float32], %var_5875: Tensor[(273), bool]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(?, 4, 9), bool], Tensor[(3, 12), float32], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(1, 8, 5), float64], Tensor[(40), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64]) {
  %611 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %612 = cast(%var_5839, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
  %613 = reshape(%612, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), float32] */;
  %614 = @func_2904(%613) /* ty=(Tensor[(?, 4, 9), bool],) */;
  %615 = cast(meta[relay.Constant][27] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %616 = cast(meta[relay.Constant][27] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %617 = %611.1;
  %618 = cast(%617, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %619 = reshape(%615, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %620 = reshape(%616, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %621 = reshape(%618, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %622 = @func_593(%619, %620, %621) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %623 = cast(meta[relay.Constant][28] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %624 = reshape(%623, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %625 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %626 = cast(%var_5875, dtype="bool") /* ty=Tensor[(273), bool] */;
  %627 = cast(meta[relay.Constant][29] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %628 = cast(%var_5875, dtype="int64") /* ty=Tensor[(273), int64] */;
  %629 = reshape(%626, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), bool] */;
  %630 = reshape(%627, newshape=[4, 28]) /* ty=Tensor[(4, 28), float64] */;
  %631 = reshape(%628, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %632 = @func_2532(%629, %630, %631) /* ty=(Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) */;
  %633 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
  %634 = %614.0;
  %635 = %622.1;
  %636 = @func_3898(%624) /* ty=Tensor[(1, 8, 5), float64] */;
  %637 = %625.0;
  %638 = %632.9;
  (%633, %617, %634, %var_5839, %635, meta[relay.Constant][27] /* ty=Tensor[(234), bool] */, %636, meta[relay.Constant][28] /* ty=Tensor[(40), float64] */, %637, %638, %var_5875, meta[relay.Constant][29] /* ty=Tensor[(112), float64] */)
}

def @func_13117() -> Tensor[(8, 4, 11), float64] {
  %639 = @func_11716() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %639.0
}

def @func_18956() -> Tensor[(8, 4, 11), float64] {
  @func_18498() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_10016() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %640 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %641 = @func_8422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) */;
  %642 = %640.1;
  %643 = %641.0;
  %644 = @func_7677() /* ty=Tensor[(8, 4, 11), float64] */;
  (%642, %643, %644)
}

def @func_20447() -> (Tensor[(8, 4, 11), float32],) {
  %645 = @func_14445() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %646 = %645.0;
  (%646,)
}

def @func_15712(%var_15704: Tensor[(1, 154), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(1, 154), float32]) {
  %647 = @func_9548() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %648 = cast(%var_15704, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
  %649 = reshape(%648, newshape=[11, 1, 14]) /* ty=Tensor[(11, 1, 14), float32] */;
  %650 = @func_10586(%649) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %651 = %647.2;
  %652 = %650.0;
  (%651, %652, %var_15704)
}

def @func_3130(%var_3124: Tensor[(8, 4, 11), float64]) -> Tensor[(8, 4, 11), float64] {
  %653 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %654 = cast(%var_3124, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %655 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%653, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%656, %657) /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8674() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %658 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %659 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
  %660 = %658.0;
  (%659, %660)
}

def @func_8783() -> Tensor[(8, 4, 11), float64] {
  @func_5231() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_20410() -> Tensor[(8, 4, 11), float64] {
  @func_12694() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8899() -> (Tensor[(112), float64],) {
  %661 = @func_3580() /* ty=(Tensor[(112), float64], Tensor[(8, 14, 10), float64]) */;
  %662 = %661.0;
  (%662,)
}

def @func_19748() -> Tensor[(8, 14, 10), float64] {
  %663 = @func_6905() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) */;
  %663.0
}

def @func_3207(%var_3205: Tensor[(11, 156), uint64]) -> (Tensor[(8, 4, 11), float32], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64]) {
  %664 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %665 = %664.0;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  %667 = cast(%var_3205, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %668 = reshape(%667, newshape=[1, 1716]) /* ty=Tensor[(1, 1716), uint64] */;
  %669 = @func_1709(%668) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) */;
  %670 = log2(%666) /* ty=Tensor[(8, 4, 11), float32] */;
  %671 = %669.1;
  (%670, %671, %var_3205)
}

def @func_5520(%var_5507: Tensor[(273), bool], %var_5508: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) {
  %672 = cast(%var_5507, dtype="bool") /* ty=Tensor[(273), bool] */;
  %673 = cast(%var_5508, dtype="float64") /* ty=Tensor[(112), float64] */;
  %674 = cast(%var_5507, dtype="int64") /* ty=Tensor[(273), int64] */;
  %675 = reshape(%672, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), bool] */;
  %676 = reshape(%673, newshape=[4, 28]) /* ty=Tensor[(4, 28), float64] */;
  %677 = reshape(%674, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %678 = @func_2532(%675, %676, %677) /* ty=(Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) */;
  %679 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %680 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  %681 = %678.4;
  %682 = %679.1;
  (%680, %681, %var_5507, %var_5508, %682)
}

def @func_7241() -> Tensor[(8, 4, 11), float64] {
  @func_4352() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_17023() -> (Tensor[(8, 4, 11), float64],) {
  %683 = @func_5231() /* ty=Tensor[(8, 4, 11), float64] */;
  (%683,)
}

def @func_5231() -> Tensor[(8, 4, 11), float64] {
  %684 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %684.0
}

def @func_14795() -> Tensor[(8, 4, 11), float64] {
  @func_4983() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_2209() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %685 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %688 = reshape(%687, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %689 = @func_1521(%688) /* ty=(Tensor[(8, 4, 11), int64], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64], Tensor[(13, 7, 4), float64], Tensor[(364), float32], Tensor[(13, 7, 4), float64]) */;
  %690 = %689.2;
  (%686, %690)
}

def @func_13756() -> Tensor[(8, 4, 11), float64] {
  %691 = @func_8674() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %691.1
}

def @func_16516() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %692 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %693 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %694 = %692.1;
  %695 = %693.0;
  (%694, %695)
}

def @func_2926() -> (Tensor[(8, 4, 11), float64],) {
  %696 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  (%696,)
}

def @func_15332() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %697 = @func_14596() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %698 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %699 = @func_12420() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %700 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %701 = %697.1;
  %702 = @func_5215() /* ty=Tensor[(8, 4, 11), float64] */;
  %703 = %698.0;
  %704 = %699.0;
  %705 = %700.0;
  (%701, %702, %703, %704, %705)
}

def @func_2306() -> Tensor[(8, 4, 11), float64] {
  %706 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
  %707 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%709, %710) /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_18726() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %711 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %712 = @func_18397() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(550, ?), uint64], Tensor[(8, 4, 11), float64], Tensor[(550, 273), bool]) */;
  %713 = @func_14478() /* ty=Tensor[(8, 4, 11), float64] */;
  %714 = %711.1;
  %715 = %712.0;
  (%713, %714, %715)
}

def @func_4685() -> (Tensor[(8, 4, 11), float64],) {
  %716 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %717 = %716.0;
  (%717,)
}

def @func_20434() -> Tensor[(8, 4, 11), float64] {
  %718 = @func_8422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) */;
  %718.0
}

def @func_15162(%var_15137: Tensor[(9, 4), float32]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(9, 4), float32], Tensor[(273, 1), bool]) {
  %719 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %720 = cast(%var_15137, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
  %721 = cast(meta[relay.Constant][31] /* ty=Tensor[(273, 1), bool] */, dtype="bool") /* ty=Tensor[(273, 1), bool] */;
  %722 = reshape(%720, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
  %723 = reshape(%721, newshape=[273]) /* ty=Tensor[(273), bool] */;
  %724 = @func_5886(%722, %723) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(?, 4, 9), bool], Tensor[(3, 12), float32], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(1, 8, 5), float64], Tensor[(40), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64]) */;
  %725 = @func_12057() /* ty=Tensor[(8, 4, 11), float32] */;
  %726 = %719.0;
  %727 = %724.10;
  (%725, %726, %727, %var_15137, meta[relay.Constant][31] /* ty=Tensor[(273, 1), bool] */)
}

def @func_5314() -> (Tensor[(11, 156), float64],) {
  %728 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %729 = %728.4;
  (%729,)
}

def @func_2336() -> (Tensor[(8, 4, 11), float64],) {
  %730 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
  (%730,)
}

def @func_1823(%var_1815: Tensor[(1, 112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(1, 112), float64], Tensor[(1716), uint64]) {
  %731 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %732 = cast(%var_1815, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %733 = cast(meta[relay.Constant][32] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %734 = reshape(%732, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %735 = reshape(%733, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %736 = @func_866(%734, %735) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
  %737 = %731.0;
  %738 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %739 = %736.0;
  (%737, %738, %739, %var_1815, meta[relay.Constant][32] /* ty=Tensor[(1716), uint64] */)
}

def @func_19833() -> (Tensor[(8, 4, 11), float64],) {
  %740 = @func_6005() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %741 = %740.0;
  (%741,)
}

def @func_15574() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) {
  %742 = @func_11838() /* ty=(Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) */;
  %743 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
  %744 = @func_13010() /* ty=Tensor[(8, 4, 11), float32] */;
  %745 = %742.0;
  %746 = @func_13756() /* ty=Tensor[(8, 4, 11), float64] */;
  (%743, %744, %745, %746)
}

def @func_17099() -> Tensor[(8, 4, 11), float64] {
  @func_8769() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_15073() -> (Tensor[(8, 4, 11), float64],) {
  %747 = @func_10016() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %748 = %747.2;
  (%748,)
}

def @func_5674(%var_5672: Tensor[(1120), float64]) -> (Tensor[(11, 156), bool], Tensor[(13, 7, 4), float64], Tensor[(1120), float64]) {
  %749 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %750 = cast(%var_5672, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %751 = reshape(%750, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float64] */;
  %752 = @func_1916(%751) /* ty=(Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) */;
  %753 = %749.2;
  %754 = %752.1;
  (%753, %754, %var_5672)
}

def @func_19615() -> (Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  %755 = @func_13749() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %756 = @func_16119() /* ty=Tensor[(11, 156), uint64] */;
  %757 = %755.1;
  (%756, %757)
}

def @func_12057() -> Tensor[(8, 4, 11), float32] {
  %758 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %758.2
}

def @func_10896() -> Tensor[(8, 4, 11), float64] {
  %759 = @func_5665() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %759.0
}

def @func_17036() -> (Tensor[(8, 4, 11), float64],) {
  %760 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  (%760,)
}

def @func_13273() -> (Tensor[(8, 4, 11), float64],) {
  %761 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %762 = %761.0;
  (%762,)
}

def @func_10344(%var_10329: Tensor[(4, 4, 16), float64]) -> (Tensor[(4, 4, 16), float64], Tensor[(8, 4, 11), float64]) {
  %763 = cast(%var_10329, dtype="float64") /* ty=Tensor[(4, 4, 16), float64] */;
  %764 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %765 = log(%763) /* ty=Tensor[(4, 4, 16), float64] */;
  %766 = %764.3;
  (%765, %766)
}

def @func_8275() -> Tensor[(8, 4, 11), float64] {
  %767 = @func_8044() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %767.0
}

def @func_13472() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %768 = @func_3959() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %769 = @func_9687() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %770 = %768.0;
  %771 = %769.1;
  (%770, %771)
}

def @func_4723() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %772 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %773 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  %774 = %772.0;
  (%773, %774)
}

def @func_14445() -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %775 = @func_8112() /* ty=(Tensor[(8, 4, 11), float32],) */;
  %776 = @func_9986() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %777 = %775.0;
  %778 = %776.1;
  (%777, %778)
}

def @func_5051() -> (Tensor[(8, 4, 11), float64],) {
  %779 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %780 = %779.0;
  (%780,)
}

def @func_8312() -> Tensor[(8, 4, 11), float64] {
  %781 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %781.1
}

def @func_13809(%var_13800: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) {
  %782 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %783 = cast(%var_13800, dtype="float64") /* ty=Tensor[(112), float64] */;
  %784 = reshape(%783, newshape=[56, 2]) /* ty=Tensor[(56, 2), float64] */;
  %785 = @func_6560(%784) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) */;
  %786 = @func_13346() /* ty=Tensor[(8, 4, 11), float64] */;
  %787 = %782.0;
  %788 = %785.0;
  (%786, %787, %788, %var_13800)
}

def @func_13236(%var_13233: Tensor[(273), bool], %var_13234: Tensor[(56, 2), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(13, 21), bool], Tensor[(273), bool], Tensor[(56, 2), float64]) {
  %789 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %790 = cast(%var_13233, dtype="bool") /* ty=Tensor[(273), bool] */;
  %791 = cast(%var_13234, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
  %792 = reshape(%790, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
  %793 = reshape(%791, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %794 = @func_10304(%792, %793) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
  %795 = %789.0;
  %796 = %794.5;
  (%795, %796, %var_13233, %var_13234)
}

def @func_2035() -> Tensor[(8, 4, 11), float64] {
  %797 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %797.0
}

def @func_11716() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %798 = @func_9432() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %799 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
  %800 = %798.1;
  %801 = %799.0;
  (%800, %801)
}

def @func_2006(%var_1997: Tensor[(8, 4, 11), float64]) -> (Tensor[(8, 4, 11), float32],) {
  %802 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %803 = %802.0;
  %804 = cast(%var_1997, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%803, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %808 = divide(%806, %807) /* ty=Tensor[(8, 4, 11), float32] */;
  (%808,)
}

def @func_4472() -> (Tensor[(8, 4, 11), float64],) {
  %809 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %810 = %809.0;
  (%810,)
}

def @func_7633() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %811 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %812 = @func_6740() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %813 = %811.0;
  %814 = @func_7241() /* ty=Tensor[(8, 4, 11), float64] */;
  %815 = %812.0;
  (%813, %814, %815)
}

def @func_8071() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %816 = @func_4685() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %817 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
  %818 = %816.0;
  (%817, %818)
}

def @func_11108() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %819 = @func_6740() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %820 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %821 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %822 = @func_7327() /* ty=(Tensor[(11, 156), uint64],) */;
  %823 = @func_7633() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %824 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %825 = %819.0;
  %826 = %820.0;
  %827 = %821.2;
  %828 = %822.0;
  %829 = %823.2;
  %830 = %824.0;
  (%825, %826, %827, %828, %829, %830)
}

def @func_17146(%var_17109: Tensor[(6, 14, 12), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(6, 14, 12), bool], Tensor[(6, 14, 12), bool]) {
  %831 = @func_7032() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %832 = cast(%var_17109, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %833 = sin(%832) /* ty=Tensor[(6, 14, 12), float32] */;
  %834 = cast(%833, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %835 = log(%834) /* ty=Tensor[(6, 14, 12), float32] */;
  %836 = cast(%var_17109, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%835, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %840 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 14, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %841 = shape_of(%833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%833, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %844 = %831.0;
  %845 = less_equal(%838, %839) /* ty=Tensor[(6, 14, 12), bool] */;
  %846 = greater(%842, %843) /* ty=Tensor[(6, 14, 12), bool] */;
  (%844, %845, %846)
}

def @func_8131() -> (Tensor[(8, 4, 11), float64],) {
  %847 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
  (%847,)
}

def @func_10586(%var_10581: Tensor[(11, 1, 14), float32]) -> (Tensor[(11, 7, 14), bool],) {
  %848 = cast(%var_10581, dtype="bool") /* ty=Tensor[(11, 1, 14), bool] */;
  %849 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 7, 14), float32] */, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %850 = less_equal(%848, %849) /* ty=Tensor[(11, 7, 14), bool] */;
  (%850,)
}

def @func_3987() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) {
  %851 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %852 = @func_3884() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %853 = %852.0;
  %854 = cast(%853, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  %855 = %851.0;
  %856 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
  %857 = cos(%854) /* ty=Tensor[(8, 4, 11), float32] */;
  (%855, %856, %857)
}

def @func_6383() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %858 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %859 = @func_5630() /* ty=Tensor[(8, 4, 11), float64] */;
  %860 = %858.0;
  (%859, %860)
}

def @func_1709(%var_1692: Tensor[(1, 1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) {
  %861 = cast(meta[relay.Constant][35] /* ty=Tensor[(39, 6), bool] */, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %862 = cast(meta[relay.Constant][35] /* ty=Tensor[(39, 6), bool] */, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %863 = cast(%var_1692, dtype="uint64") /* ty=Tensor[(1, 1716), uint64] */;
  %864 = reshape(%861, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %865 = reshape(%862, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %866 = reshape(%863, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %867 = @func_593(%864, %865, %866) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %868 = cast(%var_1692, dtype="uint64") /* ty=Tensor[(1, 1716), uint64] */;
  %869 = %867.1;
  %870 = cast(%869, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %871 = reshape(%868, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %872 = reshape(%870, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %873 = @func_54(%871, %872) /* ty=(Tensor[(11, 12, 13), float32],) */;
  %874 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %875 = %873.0;
  (%874, %869, meta[relay.Constant][35] /* ty=Tensor[(39, 6), bool] */, %var_1692, %875)
}

def @func_9124() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %876 = @func_4685() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %877 = @func_5215() /* ty=Tensor[(8, 4, 11), float64] */;
  %878 = %876.0;
  (%877, %878)
}

def @func_12177(%var_12168: Tensor[(2, 3, 11), uint64], %var_12169: Tensor[(2, 3, 11), uint64]) -> (Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) {
  %879 = cast(%var_12169, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %880 = shape_of(%var_12168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%var_12168, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %883 = cast(%var_12168, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %884 = greater_equal(%881, %882) /* ty=Tensor[(2, 3, 11), bool] */;
  %885 = log2(%883) /* ty=Tensor[(2, 3, 11), float64] */;
  (%884, %885)
}

def @func_20334() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %886 = @func_13431() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(154), float32]) */;
  %887 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %888 = %886.1;
  %889 = %887.0;
  (%888, %889)
}

def @func_12555() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(?, 8, 5), float64]) {
  %890 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %891 = @func_6383() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %892 = cast(meta[relay.Constant][36] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %893 = reshape(%892, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %894 = @func_3898(%893) /* ty=Tensor[(1, 8, 5), float64] */;
  %895 = cast(meta[relay.Constant][36] /* ty=Tensor[(40), float64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="int64") /* ty=Tensor[(1, 8, 5), int64] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %899 = left_shift(%897, %898) /* ty=Tensor[(?, 8, 5), int64] */;
  %900 = cast(%894, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%899, dtype="float64") /* ty=Tensor[(?, 8, 5), float64] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %904 = %890.0;
  %905 = %891.0;
  %906 = divide(%902, %903) /* ty=Tensor[(?, 8, 5), float64] */;
  (%904, %905, %906)
}

def @func_11507() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %907 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %908 = %907.2;
  %909 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
  (%908, %909)
}

def @func_9548() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %910 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %911 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %912 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %913 = %910.1;
  %914 = %911.0;
  %915 = @func_8312() /* ty=Tensor[(8, 4, 11), float64] */;
  (%912, %913, %914, %915)
}

def @func_2093() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) {
  %916 = cast(meta[relay.Constant][37] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %917 = reshape(%916, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float64] */;
  %918 = @func_1916(%917) /* ty=(Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) */;
  %919 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %920 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  %921 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %922 = %918.0;
  (%919, %920, %921, %922, meta[relay.Constant][37] /* ty=Tensor[(1120), float64] */)
}

def @func_20239() -> (Tensor[(8, 4, 11), float64],) {
  %923 = @func_3959() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %924 = %923.0;
  (%924,)
}

def @func_7677() -> Tensor[(8, 4, 11), float64] {
  %925 = @func_4174() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %925.0
}

def @func_16190() -> Tensor[(8, 4, 11), float32] {
  %926 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %926.2
}

def @func_7108(%var_7089: Tensor[(15, 1, 7), float64]) -> (Tensor[(15, 1, 7), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %927 = cast(%var_7089, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
  %928 = tan(%927) /* ty=Tensor[(15, 1, 7), float64] */;
  %929 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
  %930 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
  (%928, %929, %930)
}

def @func_11955() -> (Tensor[(8, 4, 11), float64],) {
  %931 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %932 = %931.1;
  (%932,)
}

def @func_8562() -> Tensor[(11, 156), bool] {
  %933 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
  %933.0
}

def @func_13346() -> Tensor[(8, 4, 11), float64] {
  %934 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %934.0
}

def @func_17331() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %935 = @func_10604() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %936 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %937 = %935.0;
  %938 = %936.1;
  (%937, %938)
}

def @func_19547() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %939 = @func_9986() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %940 = @func_14422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %941 = @func_14422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %942 = %939.3;
  %943 = %940.2;
  %944 = %941.2;
  %945 = @func_18498() /* ty=Tensor[(8, 4, 11), float64] */;
  (%942, %943, %944, %945)
}

def @func_3080() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) {
  %946 = cast(meta[relay.Constant][38] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %947 = cast(meta[relay.Constant][39] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %948 = reshape(%946, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %949 = reshape(%947, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %950 = @func_1558(%948, %949) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) */;
  %951 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %952 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
  %953 = %950.0;
  %954 = %951.3;
  (%952, %953, meta[relay.Constant][38] /* ty=Tensor[(112), float64] */, meta[relay.Constant][39] /* ty=Tensor[(1716), uint64] */, %954)
}

def @func_11458() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64]) {
  %955 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %956 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
  %957 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  %958 = %955.0;
  %959 = %956.0;
  (%957, %958, %959)
}

def @func_8823() -> Tensor[(8, 4, 11), float64] {
  @func_2035() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_15793(%var_15759: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) {
  %960 = cast(meta[relay.Constant][40] /* ty=Tensor[(273), bool] */, dtype="bool") /* ty=Tensor[(273), bool] */;
  %961 = cast(%var_15759, dtype="float64") /* ty=Tensor[(112), float64] */;
  %962 = reshape(%960, newshape=[273]) /* ty=Tensor[(273), bool] */;
  %963 = reshape(%961, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %964 = @func_14888(%962, %963) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), bool], Tensor[(66), uint64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) */;
  %965 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %966 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
  %967 = %964.5;
  %968 = %965.0;
  (%966, %967, meta[relay.Constant][40] /* ty=Tensor[(273), bool] */, %var_15759, %968)
}

def @func_14183() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %969 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %970 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %971 = %969.0;
  %972 = %970.2;
  (%971, %972)
}

def @func_12382() -> (Tensor[(8, 4, 11), float64],) {
  %973 = @func_8312() /* ty=Tensor[(8, 4, 11), float64] */;
  (%973,)
}

def @func_19894() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %974 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %975 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %976 = %974.2;
  %977 = %975.1;
  (%976, %977)
}

def @func_19575() -> (Tensor[(8, 4, 11), float64],) {
  %978 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %979 = %978.0;
  (%979,)
}

def @func_9311() -> (Tensor[(8, 4, 11), float64],) {
  %980 = @func_7307() /* ty=Tensor[(8, 4, 11), float64] */;
  (%980,)
}

def @func_7860(%var_7818: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64], Tensor[(11, 156), float64]) {
  %981 = @func_5498() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %982 = cast(%var_7818, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %983 = cast(%var_7818, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %984 = reshape(%982, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %985 = reshape(%983, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %986 = @func_54(%984, %985) /* ty=(Tensor[(11, 12, 13), float32],) */;
  %987 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %988 = %981.0;
  %989 = %986.0;
  %990 = %987.0;
  (%988, %989, %var_7818, %990)
}

def @func_12136(%var_12125: Tensor[(3, 16, 9), float32], %var_12126: Tensor[(3, 16, 9), float32]) -> Tensor[(3, 16, 9), float32] {
  %991 = cast(%var_12126, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %992 = shape_of(%var_12125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %993 = cast(%var_12125, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %995 = less_equal(%993, %994) /* ty=Tensor[(3, 16, 9), bool] */;
  %996 = cast(%995, dtype="float32") /* ty=Tensor[(3, 16, 9), float32] */;
  atan(%996) /* ty=Tensor[(3, 16, 9), float32] */
}

def @func_15965(%var_15944: Tensor[(105), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(105), float64], Tensor[(8, 4, 11), float64]) {
  %997 = @func_12111() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %998 = cast(%var_15944, dtype="float64") /* ty=Tensor[(105), float64] */;
  %999 = reshape(%998, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float64] */;
  %1000 = @func_7108(%999) /* ty=(Tensor[(15, 1, 7), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1001 = %997.2;
  %1002 = %1000.1;
  %1003 = @func_8783() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1001, %1002, %var_15944, %1003)
}

def @func_19174() -> Tensor[(3, 9, 5), uint64] {
  %1004 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 9, 5), uint64] */, dtype="uint64") /* ty=Tensor[(3, 9, 5), uint64] */;
  %1005 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(3, 9, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1006 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 9, 5), uint64] */, dtype="uint64") /* ty=Tensor[(3, 9, 5), uint64] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%1006, %1007) /* ty=Tensor[(3, 9, 5), uint64] */
}

def @func_12225(%var_12215: Tensor[(66), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), float64], Tensor[(66), uint64]) {
  %1008 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %1009 = cast(%var_12215, dtype="uint64") /* ty=Tensor[(66), uint64] */;
  %1010 = cast(%var_12215, dtype="uint64") /* ty=Tensor[(66), uint64] */;
  %1011 = reshape(%1009, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
  %1012 = reshape(%1010, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
  %1013 = @func_12177(%1011, %1012) /* ty=(Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) */;
  %1014 = %1008.2;
  %1015 = %1013.1;
  (%1014, %1015, %var_12215)
}

def @func_14246() -> (Tensor[(8, 14, 10), float64], Tensor[(11, 12, 13), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1016 = @func_13075() /* ty=(Tensor[(8, 14, 10), float64],) */;
  %1017 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %1018 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %1019 = reshape(%1017, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1020 = reshape(%1018, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1021 = @func_54(%1019, %1020) /* ty=(Tensor[(11, 12, 13), float32],) */;
  %1022 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1023 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 156), uint64] */, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1024 = cosh(%1023) /* ty=Tensor[(11, 156), float32] */;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1026 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1027 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1028 = %1016.0;
  %1029 = %1021.0;
  %1030 = %1022.0;
  %1031 = tan(%1025) /* ty=Tensor[(11, 156), float32] */;
  %1032 = %1026.0;
  %1033 = %1027.0;
  (%1028, %1029, %1030, %1031, %1032, %1033)
}

def @func_7550() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) {
  %1034 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1035 = @func_5215() /* ty=Tensor[(8, 4, 11), float64] */;
  %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %1037 = reshape(%1036, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %1038 = @func_2006(%1037) /* ty=(Tensor[(8, 4, 11), float32],) */;
  %1039 = %1034.0;
  %1040 = %1038.0;
  (%1035, %1039, %1040)
}

def @func_8808() -> (Tensor[(8, 4, 11), float64],) {
  %1041 = @func_7550() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %1042 = %1041.1;
  (%1042,)
}

def @func_13851() -> Tensor[(5, 16, 11), float32] {
  @func_12853() /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_1613() -> Tensor[(8, 4, 11), float64] {
  %1043 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1044 = %1043.0;
  %1045 = cast(%1044, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  acosh(%1045) /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_6740() -> (Tensor[(8, 4, 11), float64],) {
  %1046 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1046,)
}

def @func_18284() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1047 = @func_14183() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %1048 = @func_12111() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1049 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1050 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  %1051 = %1047.0;
  %1052 = %1048.0;
  %1053 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %1054 = %1049.0;
  (%1050, %1051, %1052, %1053, %1054)
}

def @func_9432() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1055 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1056 = @func_4723() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1057 = %1055.0;
  %1058 = %1056.1;
  (%1057, %1058)
}

def @func_16375() -> (Tensor[(8, 4, 11), float64],) {
  %1059 = @func_9595() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1060 = %1059.1;
  (%1060,)
}

def @func_8254() -> Tensor[(8, 4, 11), float64] {
  %1061 = @func_5498() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1061.0
}

def @func_2702() -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %1062 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1063 = %1062.0;
  %1064 = cast(%1063, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %1065 = reshape(%1064, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %1066 = @func_2006(%1065) /* ty=(Tensor[(8, 4, 11), float32],) */;
  %1067 = cast(%1063, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  %1068 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %1069 = %1066.0;
  %1070 = erf(%1067) /* ty=Tensor[(8, 4, 11), float32] */;
  %1071 = %1068.0;
  (%1069, %1070, %1071)
}

def @func_11249() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1072 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1073 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %1074 = %1072.0;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_13010() -> Tensor[(8, 4, 11), float32] {
  %1076 = @func_10628() /* ty=(Tensor[(8, 4, 11), float32],) */;
  %1076.0
}

def @func_12973() -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(4), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1077 = cast(5.65398f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1078 = cast(meta[relay.Constant][44] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %1079 = reshape(%1077, newshape=[]) /* ty=float64 */;
  %1080 = reshape(%1078, newshape=[1, 4, 1]) /* ty=Tensor[(1, 4, 1), float64] */;
  %1081 = @func_12420() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1082 = @func_12019() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1083 = @func_6151() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1084 = @func_6005() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1085 = @func_9091() /* ty=Tensor[(8, 4, 11), float64] */;
  %1086 = @func_3703(%1079, %1080) /* ty=Tensor[(1, 4, 1), float64] */;
  %1087 = %1081.0;
  %1088 = %1082.2;
  %1089 = %1083.0;
  %1090 = %1084.0;
  (%1085, %1086, 5.65398f64 /* ty=float64 */, meta[relay.Constant][44] /* ty=Tensor[(4), float64] */, %1087, %1088, %1089, %1090)
}

def @func_7032() -> (Tensor[(8, 4, 11), float64],) {
  %1091 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1092 = %1091.2;
  (%1092,)
}

def @func_1521(%var_1463: Tensor[(8, 4, 11), float64]) -> (Tensor[(8, 4, 11), int64], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64], Tensor[(13, 7, 4), float64], Tensor[(364), float32], Tensor[(13, 7, 4), float64]) {
  %1093 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1094 = %1093.0;
  %1095 = cast(%var_1463, dtype="int64") /* ty=Tensor[(8, 4, 11), int64] */;
  %1096 = shape_of(%1094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1097 = cast(%1094, dtype="int64") /* ty=Tensor[(8, 4, 11), int64] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1099 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %1100 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %1101 = reshape(%1099, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1102 = reshape(%1100, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1103 = @func_54(%1101, %1102) /* ty=(Tensor[(11, 12, 13), float32],) */;
  %1104 = cast(meta[relay.Constant][46] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1105 = reshape(%1104, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
  %1106 = cast(meta[relay.Constant][46] /* ty=Tensor[(364), float64] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %1107 = cast(meta[relay.Constant][46] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1108 = reshape(%1107, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
  %1109 = subtract(%1097, %1098) /* ty=Tensor[(8, 4, 11), int64] */;
  %1110 = %1103.0;
  %1111 = @func_1408(%1105) /* ty=Tensor[(13, 7, 4), float64] */;
  %1112 = acos(%1106) /* ty=Tensor[(364), float32] */;
  %1113 = @func_1408(%1108) /* ty=Tensor[(13, 7, 4), float64] */;
  (%1109, %1110, meta[relay.Constant][45] /* ty=Tensor[(11, 156), uint64] */, %1111, %1112, %1113)
}

def @func_2761() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1114 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1115 = %1114.0;
  %1116 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  %1117 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1115, %1116, %1117)
}

def @func_7448(%var_7434: uint32, %var_7435: Tensor[(14, 6, 12), uint32]) -> (Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) {
  %1118 = cast(%var_7434, dtype="uint32") /* ty=uint32 */;
  %1119 = cast(%var_7435, dtype="uint32") /* ty=Tensor[(14, 6, 12), uint32] */;
  %1120 = cast(%var_7434, dtype="bool") /* ty=bool */;
  %1121 = cast(%var_7435, dtype="bool") /* ty=Tensor[(14, 6, 12), bool] */;
  %1122 = bitwise_and(%1118, %1119) /* ty=Tensor[(14, 6, 12), uint32] */;
  %1123 = less(%1120, %1121) /* ty=Tensor[(14, 6, 12), bool] */;
  (%1122, %1123)
}

def @func_18183() -> (Tensor[(8, 4, 11), float64],) {
  %1124 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_5447() -> (Tensor[(8, 4, 11), float64],) {
  %1126 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_13225() -> Tensor[(1716), uint64] {
  %1128 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %1128.3
}

def @func_11583(%var_11569: Tensor[(3, 4, 9), float32]) -> (Tensor[(3, 4, 9), float32], Tensor[(3, 4, 9), uint32]) {
  %1129 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 4, 9), float32] */, dtype="float32") /* ty=Tensor[(3, 4, 9), float32] */;
  %1130 = cast(%var_11569, dtype="uint32") /* ty=Tensor[(3, 4, 9), uint32] */;
  %1131 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(3, 4, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1132 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 4, 9), float32] */, dtype="uint32") /* ty=Tensor[(3, 4, 9), uint32] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1134 = log10(%1129) /* ty=Tensor[(3, 4, 9), float32] */;
  %1135 = minimum(%1132, %1133) /* ty=Tensor[(3, 4, 9), uint32] */;
  (%1134, %1135)
}

def @func_3898(%var_3895: Tensor[(1, 8, 5), float64]) -> Tensor[(1, 8, 5), float64] {
  %1136 = cast(%var_3895, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
  acosh(%1136) /* ty=Tensor[(1, 8, 5), float64] */
}

def @func_8769() -> Tensor[(8, 4, 11), float64] {
  %1137 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1137.0
}

def @func_11371() -> Tensor[(11, 156), uint64] {
  @func_8515() /* ty=Tensor[(11, 156), uint64] */
}

def @func_13628() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1138 = @func_11507() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1139 = @func_8254() /* ty=Tensor[(8, 4, 11), float64] */;
  %1140 = %1138.1;
  (%1139, %1140)
}

def @func_866(%var_843: Tensor[(2, 4, 14), float64], %var_854: Tensor[(1716), uint64]) -> (Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) {
  %1141 = cast(%var_843, dtype="float64") /* ty=Tensor[(2, 4, 14), float64] */;
  %1142 = cast(meta[relay.Constant][48] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %1143 = cast(meta[relay.Constant][48] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %1144 = cast(%var_854, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %1145 = reshape(%1142, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %1146 = reshape(%1143, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %1147 = reshape(%1144, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %1148 = @func_593(%1145, %1146, %1147) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %1149 = log2(%1141) /* ty=Tensor[(2, 4, 14), float64] */;
  %1150 = %1148.2;
  (%1149, %1150, meta[relay.Constant][48] /* ty=Tensor[(234), bool] */, %var_854)
}

def @func_10628() -> (Tensor[(8, 4, 11), float32],) {
  %1151 = @func_2702() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1152 = %1151.0;
  (%1152,)
}

def @func_11925() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1153 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1154 = %1153.0;
  %1155 = @func_10896() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1154, %1155)
}

def @func_5940(%var_5936: Tensor[(15, 10, 5), float64]) -> (Tensor[(15, 10, 5), float64],) {
  %1156 = cast(%var_5936, dtype="float64") /* ty=Tensor[(15, 10, 5), float64] */;
  %1157 = log2(%1156) /* ty=Tensor[(15, 10, 5), float64] */;
  (%1157,)
}

def @func_18484() -> Tensor[(8, 4, 11), float64] {
  %1158 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1158.0
}

def @func_3837() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1159 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %1160 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %1161 = %1159.0;
  (%1160, %1161)
}

def @func_6670() -> Tensor[(8, 4, 11), float64] {
  %1162 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1162.0
}

def @func_16657() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %1163 = @func_13756() /* ty=Tensor[(8, 4, 11), float64] */;
  %1164 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
  %1165 = @func_11371() /* ty=Tensor[(11, 156), uint64] */;
  (%1163, %1164, %1165)
}

def @func_54(%var_38: Tensor[(11, 12, 13), uint64], %var_39: Tensor[(11, 12, 13), uint64]) -> (Tensor[(11, 12, 13), float32],) {
  %1166 = cast(%var_39, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %1167 = shape_of(%var_38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1168 = cast(%var_38, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %1169 = dyn.reshape(%1166, %1167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1170 = bitwise_and(%1168, %1169) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1171 = cast(%1170, dtype="float32") /* ty=Tensor[(11, 12, 13), float32] */;
  %1172 = tan(%1171) /* ty=Tensor[(11, 12, 13), float32] */;
  (%1172,)
}

def @func_12314() -> (Tensor[(8, 4, 11), float64],) {
  %1173 = @func_9986() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1174 = %1173.2;
  (%1174,)
}

def @func_14888(%var_14883: Tensor[(273), bool], %var_14884: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), bool], Tensor[(66), uint64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) {
  %1175 = @func_7550() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %1176 = cast(meta[relay.Constant][49] /* ty=Tensor[(66), uint64] */, dtype="uint64") /* ty=Tensor[(66), uint64] */;
  %1177 = cast(meta[relay.Constant][49] /* ty=Tensor[(66), uint64] */, dtype="uint64") /* ty=Tensor[(66), uint64] */;
  %1178 = reshape(%1176, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
  %1179 = reshape(%1177, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
  %1180 = @func_12177(%1178, %1179) /* ty=(Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) */;
  %1181 = cast(%var_14883, dtype="bool") /* ty=Tensor[(273), bool] */;
  %1182 = cast(%var_14884, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1183 = reshape(%1181, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
  %1184 = reshape(%1182, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %1185 = @func_10304(%1183, %1184) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
  %1186 = %1175.1;
  %1187 = %1180.0;
  %1188 = %1185.2;
  (%1186, %1187, meta[relay.Constant][49] /* ty=Tensor[(66), uint64] */, %1188, %var_14883, %var_14884)
}

def @func_3305() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %1189 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %1190 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %1191 = %1190.3;
  %1192 = cast(%1191, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %1193 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %1194 = %1193.0;
  %1195 = cast(%1194, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %1196 = reshape(%1195, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %1197 = @func_2006(%1196) /* ty=(Tensor[(8, 4, 11), float32],) */;
  %1198 = %1197.0;
  %1199 = cast(%1198, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %1200 = reshape(%1199, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %1201 = %1189.0;
  %1202 = atanh(%1192) /* ty=Tensor[(11, 156), float64] */;
  %1203 = @func_3130(%1200) /* ty=Tensor[(8, 4, 11), float64] */;
  (%1201, %1202, %1194, %1198, %1203)
}

def @func_15110(%var_15099: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) {
  %1204 = @func_4723() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1205 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1206 = cast(%var_15099, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1207 = reshape(%1206, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %1208 = @func_13809(%1207) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) */;
  %1209 = %1204.0;
  %1210 = %1205.0;
  %1211 = %1208.2;
  (%1209, %1210, %1211, %var_15099)
}

def @func_8422() -> (Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) {
  %1212 = @func_3162() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1213 = @func_4901() /* ty=(Tensor[(1, 3, 16), float64],) */;
  %1214 = %1212.1;
  %1215 = %1213.0;
  (%1214, %1215)
}

def @func_3703(%var_3694: float64, %var_3695: Tensor[(1, 4, 1), float64]) -> Tensor[(1, 4, 1), float64] {
  %1216 = cast(%var_3694, dtype="float64") /* ty=float64 */;
  %1217 = cast(%var_3695, dtype="float64") /* ty=Tensor[(1, 4, 1), float64] */;
  floor_mod(%1216, %1217) /* ty=Tensor[(1, 4, 1), float64] */
}

def @func_15502(%var_15490: Tensor[(8, 9, 1), bool], %var_15491: Tensor[(8, 9, 16), bool]) -> Tensor[(8, 9, 16), bool] {
  %1218 = cast(%var_15490, dtype="bool") /* ty=Tensor[(8, 9, 1), bool] */;
  %1219 = cast(%var_15491, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
  logical_and(%1218, %1219) /* ty=Tensor[(8, 9, 16), bool] */
}

def @func_14596() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1220 = @func_8071() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1221 = @func_12908() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1222 = %1220.1;
  %1223 = %1221.0;
  (%1222, %1223)
}

def @main(%var_20542: Tensor[(4, 5, 10), float32]) -> Tensor[(4, 5, 10), float32] {
  %1224 = cast(%var_20542, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  asin(%1224) /* ty=Tensor[(4, 5, 10), float32] */
}

def @func_16056() -> (Tensor[(8, 4, 11), float64],) {
  %1225 = @func_7032() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1226 = %1225.0;
  (%1226,)
}

def @func_4352() -> Tensor[(8, 4, 11), float64] {
  %1227 = @func_3884() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1227.1
}

def @func_3244() -> Tensor[(8, 4, 11), float32] {
  %1228 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1229 = %1228.0;
  %1230 = cast(%1229, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  tan(%1230) /* ty=Tensor[(8, 4, 11), float32] */
}

def @func_3508(%var_3449: Tensor[(11, 156), uint64]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(11, 156), uint16]) {
  %1231 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1232 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %1233 = %1232.0;
  %1234 = cast(%var_3449, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1235 = shape_of(%1233, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1236 = cast(%1233, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1237 = dyn.reshape(%1234, %1235, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1238 = cast(%var_3449, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1239 = sin(%1238) /* ty=Tensor[(11, 156), float32] */;
  %1240 = cast(%var_3449, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %1241 = shape_of(%1239, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1242 = cast(%1239, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %1243 = dyn.reshape(%1240, %1241, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1244 = not_equal(%1242, %1243) /* ty=Tensor[(11, 156), bool] */;
  %1245 = cast(%1239, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1246 = shape_of(%1244, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1247 = cast(%1244, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1248 = dyn.reshape(%1245, %1246, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1249 = @func_3244() /* ty=Tensor[(8, 4, 11), float32] */;
  %1250 = %1231.0;
  %1251 = floor_mod(%1236, %1237) /* ty=Tensor[(11, 156), float32] */;
  %1252 = right_shift(%1247, %1248) /* ty=Tensor[(11, 156), uint16] */;
  (%1249, %1250, %1251, %1252)
}

def @func_13512() -> (Tensor[(8, 4, 11), float64],) {
  %1253 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1253,)
}

def @func_1950() -> (Tensor[(8, 4, 11), float64],) {
  %1254 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1254,)
}

def @func_13898(%var_13896: Tensor[(4, 64), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(4, 4, 16), float64], Tensor[(4, 64), float64]) {
  %1255 = @func_9687() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %1256 = cast(%var_13896, dtype="float64") /* ty=Tensor[(4, 64), float64] */;
  %1257 = reshape(%1256, newshape=[4, 4, 16]) /* ty=Tensor[(4, 4, 16), float64] */;
  %1258 = @func_10344(%1257) /* ty=(Tensor[(4, 4, 16), float64], Tensor[(8, 4, 11), float64]) */;
  %1259 = %1255.2;
  %1260 = %1258.0;
  (%1259, %1260, %var_13896)
}

def @func_12908() -> (Tensor[(8, 4, 11), float64],) {
  %1261 = @func_6065() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1261,)
}

def @func_16005(%var_16002: Tensor[(1040), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1040), uint64]) {
  %1262 = @func_12360() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %1263 = cast(%var_16002, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
  %1264 = cast(%var_16002, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
  %1265 = reshape(%1263, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint64] */;
  %1266 = reshape(%1264, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint64] */;
  %1267 = @func_7714(%1265, %1266) /* ty=(Tensor[(10, 13, 8), uint64], Tensor[(10, 13, 8), float64], Tensor[(8, 4, 11), float64]) */;
  %1268 = %1262.0;
  %1269 = %1267.2;
  (%1268, %1269, %var_16002)
}

def @func_6390() -> (Tensor[(8, 4, 11), float64],) {
  %1270 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1271 = %1270.2;
  (%1271,)
}

def @func_1848() -> (Tensor[(8, 4, 11), float64],) {
  %1272 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1273 = %1272.0;
  (%1273,)
}

def @func_16768() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(5, 16, 11), float32]) {
  %1274 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1275 = @func_16151() /* ty=Tensor[(8, 4, 11), float64] */;
  %1276 = %1274.0;
  %1277 = @func_12853() /* ty=Tensor[(5, 16, 11), float32] */;
  (%1275, %1276, %1277)
}

def @func_12853() -> Tensor[(5, 16, 11), float32] {
  %1278 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 16, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %1279 = cos(%1278) /* ty=Tensor[(5, 16, 11), float32] */;
  %1280 = cast(%1279, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  rsqrt(%1280) /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_593(%var_563: Tensor[(6, 3, 13), bool], %var_564: Tensor[(6, 3, 13), bool], %var_573: Tensor[(1716), uint64]) -> (Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) {
  %1281 = cast(%var_564, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
  %1282 = shape_of(%var_563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1283 = cast(%var_563, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
  %1284 = dyn.reshape(%1281, %1282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1285 = cast(%var_573, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %1286 = cast(%var_573, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %1287 = reshape(%1285, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1288 = reshape(%1286, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1289 = @func_54(%1287, %1288) /* ty=(Tensor[(11, 12, 13), float32],) */;
  %1290 = logical_and(%1283, %1284) /* ty=Tensor[(6, 3, 13), bool] */;
  %1291 = %1289.0;
  (%1290, %1291, %var_573)
}

def @func_13328() -> (Tensor[(11, 156), float32],) {
  %1292 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
  %1293 = %1292.0;
  %1294 = cast(%1293, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1295 = asinh(%1294) /* ty=Tensor[(11, 156), float32] */;
  (%1295,)
}

def @func_18938(%var_18907: Tensor[(11, 156), float64], %var_18935: Tensor[(432), float32]) -> (Tensor[(11, 156), float32], Tensor[(11, 156), uint16], Tensor[(11, 156), bool], Tensor[(3, 16, 9), float32], Tensor[(432), float32]) {
  %1296 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
  %1297 = %1296.0;
  %1298 = cast(%var_18907, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1299 = shape_of(%1297, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1300 = cast(%1297, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1302 = cast(%var_18907, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1303 = shape_of(%1297, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1304 = cast(%1297, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1305 = dyn.reshape(%1302, %1303, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1306 = cast(meta[relay.Constant][51] /* ty=Tensor[(11, 156), float64] */, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %1307 = shape_of(%1297, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1308 = cast(%1297, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1310 = cast(%var_18935, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1311 = cast(%var_18935, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1312 = reshape(%1310, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), float32] */;
  %1313 = reshape(%1311, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), float32] */;
  %1314 = mod(%1300, %1301) /* ty=Tensor[(11, 156), float32] */;
  %1315 = subtract(%1304, %1305) /* ty=Tensor[(11, 156), uint16] */;
  %1316 = greater_equal(%1308, %1309) /* ty=Tensor[(11, 156), bool] */;
  %1317 = @func_12136(%1312, %1313) /* ty=Tensor[(3, 16, 9), float32] */;
  (%1314, %1315, %1316, %1317, %var_18935)
}

def @func_8656() -> (Tensor[(8, 4, 11), float64],) {
  %1318 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1319 = %1318.2;
  (%1319,)
}

def @func_3692() -> (Tensor[(11, 156), bool],) {
  %1320 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %1321 = %1320.2;
  (%1321,)
}

def @func_9091() -> Tensor[(8, 4, 11), float64] {
  @func_7241() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_6105() -> (Tensor[(11, 156), int8],) {
  %1322 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1323 = %1322.1;
  %1324 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 156), float64] */, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1325 = shape_of(%1323, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1326 = cast(%1323, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1327 = dyn.reshape(%1324, %1325, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1328 = logical_xor(%1326, %1327) /* ty=Tensor[(11, 156), uint16] */;
  %1329 = cast(%1323, dtype="int8") /* ty=Tensor[(11, 156), int8] */;
  %1330 = shape_of(%1328, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1331 = cast(%1328, dtype="int8") /* ty=Tensor[(11, 156), int8] */;
  %1332 = dyn.reshape(%1329, %1330, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1333 = bitwise_xor(%1331, %1332) /* ty=Tensor[(11, 156), int8] */;
  (%1333,)
}

def @func_6905() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) {
  %1334 = @func_3580() /* ty=(Tensor[(112), float64], Tensor[(8, 14, 10), float64]) */;
  %1335 = @func_5051() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1336 = %1334.1;
  %1337 = %1335.0;
  (%1336, %1337)
}

def @func_12019() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1338 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %1339 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1340 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1341 = %1338.3;
  %1342 = %1339.0;
  %1343 = %1340.0;
  (%1341, %1342, %1343)
}

def @func_5630() -> Tensor[(8, 4, 11), float64] {
  @func_1791() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_19208() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1344 = @func_8044() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1345 = %1344.0;
  %1346 = @func_18498() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1345, %1346)
}

def @func_1408(%var_1384: Tensor[(13, 7, 4), float64]) -> Tensor[(13, 7, 4), float64] {
  %1347 = cast(%var_1384, dtype="float64") /* ty=Tensor[(13, 7, 4), float64] */;
  sinh(%1347) /* ty=Tensor[(13, 7, 4), float64] */
}

def @func_17698() -> Tensor[(11, 156), uint64] {
  @func_11371() /* ty=Tensor[(11, 156), uint64] */
}

def @func_19441(%var_19428: Tensor[(234), bool], %var_19429: Tensor[(1, 1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(234), bool], Tensor[(1, 1716), uint64]) {
  %1348 = cast(%var_19428, dtype="bool") /* ty=Tensor[(234), bool] */;
  %1349 = cast(%var_19429, dtype="uint64") /* ty=Tensor[(1, 1716), uint64] */;
  %1350 = reshape(%1348, newshape=[234]) /* ty=Tensor[(234), bool] */;
  %1351 = reshape(%1349, newshape=[286, 6]) /* ty=Tensor[(286, 6), uint64] */;
  %1352 = @func_10987(%1350, %1351) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(286, 6), uint64], Tensor[(11, 156), float32]) */;
  %1353 = @func_13399() /* ty=Tensor[(8, 4, 11), float64] */;
  %1354 = @func_8312() /* ty=Tensor[(8, 4, 11), float64] */;
  %1355 = %1352.5;
  (%1353, %1354, %1355, %var_19428, %var_19429)
}

def @func_12395() -> (Tensor[(8, 4, 11), float64],) {
  %1356 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1357 = %1356.0;
  (%1357,)
}

def @func_14987() -> (Tensor[(?, 3, 16), bool], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %1358 = @func_12889() /* ty=(Tensor[(1, 3, 16), float64],) */;
  %1359 = %1358.0;
  %1360 = cast(%1359, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %1361 = asin(%1360) /* ty=Tensor[(1, 3, 16), float64] */;
  %1362 = cast(%1361, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
  %1363 = shape_of(%1359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1364 = cast(%1359, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
  %1365 = dyn.reshape(%1362, %1363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1366 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1367 = less(%1364, %1365) /* ty=Tensor[(?, 3, 16), bool] */;
  %1368 = %1366.3;
  %1369 = @func_8783() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1367, %1368, %1369)
}

def @func_1558(%var_1553: Tensor[(112), float64], %var_1554: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) {
  %1370 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1371 = cast(%var_1553, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1372 = cast(%var_1554, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %1373 = reshape(%1371, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %1374 = reshape(%1372, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %1375 = @func_866(%1373, %1374) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
  %1376 = %1370.0;
  %1377 = %1375.3;
  (%1376, %1377, %var_1553, %var_1554)
}

def @func_10563(%var_10543: bool, %var_10544: Tensor[(15), bool]) -> (Tensor[(8, 4, 11), float64], Tensor[(15, 1), bool], bool, Tensor[(15), bool], Tensor[(8, 4, 11), float64]) {
  %1378 = @func_8674() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1379 = cast(%var_10543, dtype="bool") /* ty=bool */;
  %1380 = cast(%var_10544, dtype="bool") /* ty=Tensor[(15), bool] */;
  %1381 = reshape(%1379, newshape=[]) /* ty=bool */;
  %1382 = reshape(%1380, newshape=[15, 1]) /* ty=Tensor[(15, 1), bool] */;
  %1383 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1384 = %1378.0;
  %1385 = @func_6945(%1381, %1382) /* ty=Tensor[(15, 1), bool] */;
  %1386 = %1383.0;
  (%1384, %1385, %var_10543, %var_10544, %1386)
}

def @func_9804(%var_9785: Tensor[(5, 6, 15), uint16], %var_9797: Tensor[(7, 44), uint8], %var_9798: Tensor[(234), bool]) -> (Tensor[(5, 6, 15), uint16], Tensor[(56, 2), float64], Tensor[(112), float64], Tensor[(6, 3, 13), bool], Tensor[(7, 44), uint8], Tensor[(234), bool]) {
  %1387 = cast(%var_9785, dtype="uint16") /* ty=Tensor[(5, 6, 15), uint16] */;
  %1388 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(5, 6, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1389 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 6, 15), uint16] */, dtype="uint16") /* ty=Tensor[(5, 6, 15), uint16] */;
  %1390 = dyn.reshape(%1387, %1388, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1391 = cast(meta[relay.Constant][54] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1392 = reshape(%1391, newshape=[56, 2]) /* ty=Tensor[(56, 2), float64] */;
  %1393 = @func_6560(%1392) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) */;
  %1394 = cast(%var_9797, dtype="uint8") /* ty=Tensor[(7, 44), uint8] */;
  %1395 = cast(%var_9798, dtype="bool") /* ty=Tensor[(234), bool] */;
  %1396 = reshape(%1394, newshape=[14, 11, 2]) /* ty=Tensor[(14, 11, 2), uint8] */;
  %1397 = reshape(%1395, newshape=[234]) /* ty=Tensor[(234), bool] */;
  %1398 = @func_1031(%1396, %1397) /* ty=(Tensor[(14, 11, 2), uint8], Tensor[(14, 11, 2), float32], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(1716), uint64], Tensor[(11, 12, 13), float32], Tensor[(6, 3, 13), bool]) */;
  %1399 = bitwise_xor(%1389, %1390) /* ty=Tensor[(5, 6, 15), uint16] */;
  %1400 = %1393.3;
  %1401 = %1398.2;
  (%1399, %1400, meta[relay.Constant][54] /* ty=Tensor[(112), float64] */, %1401, %var_9797, %var_9798)
}

def @func_7342() -> (Tensor[(8, 4, 11), float64],) {
  %1402 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1403 = %1402.0;
  (%1403,)
}

def @func_11548() -> (Tensor[(8, 4, 11), float64],) {
  %1404 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1404,)
}

def @func_14358() -> (Tensor[(8, 4, 11), float64],) {
  %1405 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1405,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_19547() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %0 = @func_9986() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1 = @func_14422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %2 = @func_14422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %3 = %0.3;
  %4 = %1.2;
  %5 = %2.2;
  %6 = @func_18498() /* ty=Tensor[(8, 4, 11), float64] */;
  (%3, %4, %5, %6)
}

def @func_18485() -> Tensor[(8, 4, 11), float64] {
  %8 = fn () -> Tensor[(8, 4, 11), float64] {
    %7 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %7.0
  };
  %8() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_3082() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) {
  @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */
}

def @func_18674() -> Tensor[(8, 4, 11), float64] {
  %10 = fn () -> Tensor[(8, 4, 11), float64] {
    %9 = @func_12817() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %9.0
  };
  %10() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8132() -> (Tensor[(8, 4, 11), float64],) {
  %12 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %11 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
    (%11,)
  };
  %12() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_5631() -> Tensor[(8, 4, 11), float64] {
  %13 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_1791() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %13() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_5420() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_12422() -> (Tensor[(8, 4, 11), float64],) {
  @func_12420() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_11956() -> (Tensor[(8, 4, 11), float64],) {
  %16 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %14 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %15 = %14.1;
    (%15,)
  };
  %16() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_4354() -> Tensor[(8, 4, 11), float64] {
  @func_4352() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_19748() -> Tensor[(8, 14, 10), float64] {
  %17 = @func_6905() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) */;
  %17.0
}

def @func_4175() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %21 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %18 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %19 = %18.2;
    %20 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
    (%19, %20)
  };
  %21() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_8254() -> Tensor[(8, 4, 11), float64] {
  %22 = @func_5498() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %22.0
}

def @func_18727() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %28 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %23 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %24 = @func_18397() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(550, ?), uint64], Tensor[(8, 4, 11), float64], Tensor[(550, 273), bool]) */;
    %25 = @func_14478() /* ty=Tensor[(8, 4, 11), float64] */;
    %26 = %23.1;
    %27 = %24.0;
    (%25, %26, %27)
  };
  %28() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_8515() -> Tensor[(11, 156), uint64] {
  %29 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %29.1
}

def @func_6949(%var_6947: bool, %var_6948: Tensor[(15, 1), bool]) -> Tensor[(15, 1), bool] {
  @func_6945(%var_6947, %var_6948) /* ty=Tensor[(15, 1), bool] */
}

def @func_1523(%var_1522: Tensor[(8, 4, 11), float64]) -> (Tensor[(8, 4, 11), int64], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64], Tensor[(13, 7, 4), float64], Tensor[(364), float32], Tensor[(13, 7, 4), float64]) {
  %51 = fn (%var_1463: Tensor[(8, 4, 11), float64]) -> (Tensor[(8, 4, 11), int64], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64], Tensor[(13, 7, 4), float64], Tensor[(364), float32], Tensor[(13, 7, 4), float64]) {
    %30 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %31 = %30.0;
    %32 = cast(%var_1463, dtype="int64") /* ty=Tensor[(8, 4, 11), int64] */;
    %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
    %34 = cast(%31, dtype="int64") /* ty=Tensor[(8, 4, 11), int64] */;
    %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %36 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
    %37 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
    %38 = reshape(%36, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %39 = reshape(%37, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %40 = @func_54(%38, %39) /* ty=(Tensor[(11, 12, 13), float32],) */;
    %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %42 = reshape(%41, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
    %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(364), float64] */, dtype="float32") /* ty=Tensor[(364), float32] */;
    %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %45 = reshape(%44, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
    %46 = subtract(%34, %35) /* ty=Tensor[(8, 4, 11), int64] */;
    %47 = %40.0;
    %48 = @func_1408(%42) /* ty=Tensor[(13, 7, 4), float64] */;
    %49 = acos(%43) /* ty=Tensor[(364), float32] */;
    %50 = @func_1408(%45) /* ty=Tensor[(13, 7, 4), float64] */;
    (%46, %47, meta[relay.Constant][0] /* ty=Tensor[(11, 156), uint64] */, %48, %49, %50)
  };
  %51(%var_1522) /* ty=(Tensor[(8, 4, 11), int64], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64], Tensor[(13, 7, 4), float64], Tensor[(364), float32], Tensor[(13, 7, 4), float64]) */
}

def @func_8313() -> Tensor[(8, 4, 11), float64] {
  %53 = fn () -> Tensor[(8, 4, 11), float64] {
    %52 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %52.1
  };
  %53() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_10016() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %54 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %55 = @func_8422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) */;
  %56 = %54.1;
  %57 = %55.0;
  %58 = @func_7677() /* ty=Tensor[(8, 4, 11), float64] */;
  (%56, %57, %58)
}

def @func_4192() -> (Tensor[(8, 4, 11), float64],) {
  %61 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %59 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %60 = %59.1;
    (%60,)
  };
  %61() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_3306() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %77 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
    %62 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
    %63 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
    %64 = %63.3;
    %65 = cast(%64, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
    %66 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %67 = %66.0;
    %68 = cast(%67, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
    %69 = reshape(%68, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
    %70 = @func_2006(%69) /* ty=(Tensor[(8, 4, 11), float32],) */;
    %71 = %70.0;
    %72 = cast(%71, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
    %73 = reshape(%72, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
    %74 = %62.0;
    %75 = atanh(%65) /* ty=Tensor[(11, 156), float64] */;
    %76 = @func_3130(%73) /* ty=Tensor[(8, 4, 11), float64] */;
    (%74, %75, %67, %71, %76)
  };
  %77() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */
}

def @func_3424() -> (Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_5051() -> (Tensor[(8, 4, 11), float64],) {
  %78 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %79 = %78.0;
  (%79,)
}

def @func_12741() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %80 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %81 = @func_9548() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %82 = %80.0;
  %83 = %81.2;
  (%82, %83)
}

def @func_1952() -> (Tensor[(8, 4, 11), float64],) {
  @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_19750() -> Tensor[(8, 14, 10), float64] {
  @func_19748() /* ty=Tensor[(8, 14, 10), float64] */
}

def @func_8769() -> Tensor[(8, 4, 11), float64] {
  %84 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %84.0
}

def @func_2703() -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %95 = fn () -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
    %85 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %86 = %85.0;
    %87 = cast(%86, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
    %88 = reshape(%87, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
    %89 = @func_2006(%88) /* ty=(Tensor[(8, 4, 11), float32],) */;
    %90 = cast(%86, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
    %91 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %92 = %89.0;
    %93 = erf(%90) /* ty=Tensor[(8, 4, 11), float32] */;
    %94 = %91.0;
    (%92, %93, %94)
  };
  %95() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */
}

def @func_6460() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %100 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %96 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %97 = @func_5185() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %98 = %96.2;
    %99 = %97.0;
    (%98, %99)
  };
  %100() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_7862(%var_7861: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64], Tensor[(11, 156), float64]) {
  %111 = fn (%var_7818: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64], Tensor[(11, 156), float64]) {
    %101 = @func_5498() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %102 = cast(%var_7818, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %103 = cast(%var_7818, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %104 = reshape(%102, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %105 = reshape(%103, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %106 = @func_54(%104, %105) /* ty=(Tensor[(11, 12, 13), float32],) */;
    %107 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %108 = %101.0;
    %109 = %106.0;
    %110 = %107.0;
    (%108, %109, %var_7818, %110)
  };
  %111(%var_7861) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */
}

def @func_14183() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %112 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %113 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %114 = %112.0;
  %115 = %113.2;
  (%114, %115)
}

def @func_4725() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_4723() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_3523() -> Tensor[(8, 4, 11), float64] {
  @func_3521() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_15715(%var_15713: Tensor[(1, 154), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(1, 154), float32]) {
  @func_15712(%var_15713) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(1, 154), float32]) */
}

def @func_17700() -> Tensor[(11, 156), uint64] {
  @func_17698() /* ty=Tensor[(11, 156), uint64] */
}

def @func_19100(%var_19098: Tensor[(13, 9, 9), float32], %var_19099: Tensor[(1008), uint32]) -> (Tensor[(13, 9, 9), float32], Tensor[(14, 6, 12), uint32], uint32, Tensor[(1008), uint32]) {
  @func_19096(%var_19098, %var_19099) /* ty=(Tensor[(13, 9, 9), float32], Tensor[(14, 6, 12), uint32], uint32, Tensor[(1008), uint32]) */
}

def @func_4687() -> (Tensor[(8, 4, 11), float64],) {
  @func_4685() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_3900(%var_3899: Tensor[(1, 8, 5), float64]) -> Tensor[(1, 8, 5), float64] {
  %117 = fn (%var_3895: Tensor[(1, 8, 5), float64]) -> Tensor[(1, 8, 5), float64] {
    %116 = cast(%var_3895, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
    acosh(%116) /* ty=Tensor[(1, 8, 5), float64] */
  };
  %117(%var_3899) /* ty=Tensor[(1, 8, 5), float64] */
}

def @func_13750() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %122 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %118 = @func_12111() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %119 = @func_12314() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %120 = %118.1;
    %121 = %119.0;
    (%120, %121)
  };
  %122() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_8423() -> (Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) {
  %127 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) {
    %123 = @func_3162() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %124 = @func_4901() /* ty=(Tensor[(1, 3, 16), float64],) */;
    %125 = %123.1;
    %126 = %124.0;
    (%125, %126)
  };
  %127() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) */
}

def @func_5217() -> Tensor[(8, 4, 11), float64] {
  @func_5215() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_18799() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_18797() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_14478() -> Tensor[(8, 4, 11), float64] {
  %128 = @func_5665() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %128.0
}

def @func_14248() -> (Tensor[(8, 14, 10), float64], Tensor[(11, 12, 13), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_14246() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(11, 12, 13), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_18285() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %137 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %129 = @func_14183() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
    %130 = @func_12111() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %131 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %132 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
    %133 = %129.0;
    %134 = %130.0;
    %135 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
    %136 = %131.0;
    (%132, %133, %134, %135, %136)
  };
  %137() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_20334() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %138 = @func_13431() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(154), float32]) */;
  %139 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %140 = %138.1;
  %141 = %139.0;
  (%140, %141)
}

def @func_13811(%var_13810: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) {
  %149 = fn (%var_13800: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) {
    %142 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %143 = cast(%var_13800, dtype="float64") /* ty=Tensor[(112), float64] */;
    %144 = reshape(%143, newshape=[56, 2]) /* ty=Tensor[(56, 2), float64] */;
    %145 = @func_6560(%144) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) */;
    %146 = @func_13346() /* ty=Tensor[(8, 4, 11), float64] */;
    %147 = %142.0;
    %148 = %145.0;
    (%146, %147, %148, %var_13800)
  };
  %149(%var_13810) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) */
}

def @func_3246() -> Tensor[(8, 4, 11), float32] {
  @func_3244() /* ty=Tensor[(8, 4, 11), float32] */
}

def @func_6391() -> (Tensor[(8, 4, 11), float64],) {
  %152 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %150 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
    %151 = %150.2;
    (%151,)
  };
  %152() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_6818() -> (Tensor[(8, 4, 11), float64],) {
  %153 = @func_3837() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %154 = %153.0;
  (%154,)
}

def @func_1849() -> (Tensor[(8, 4, 11), float64],) {
  %157 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %155 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %156 = %155.0;
    (%156,)
  };
  %157() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_6654(%var_6652: Tensor[(3, 6, 3), float32], %var_6653: Tensor[(3, 6, 3), float32]) -> (Tensor[(3, 6, 3), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %167 = fn (%var_6591: Tensor[(3, 6, 3), float32], %var_6592: Tensor[(3, 6, 3), float32]) -> (Tensor[(3, 6, 3), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %158 = cast(%var_6592, dtype="float32") /* ty=Tensor[(3, 6, 3), float32] */;
    %159 = shape_of(%var_6591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%var_6591, dtype="float32") /* ty=Tensor[(3, 6, 3), float32] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %162 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %163 = @func_3884() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %164 = floor_mod(%160, %161) /* ty=Tensor[(3, 6, 3), float32] */;
    %165 = %162.0;
    %166 = %163.1;
    (%164, %165, %166)
  };
  %167(%var_6652, %var_6653) /* ty=(Tensor[(3, 6, 3), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_866(%var_843: Tensor[(2, 4, 14), float64], %var_854: Tensor[(1716), uint64]) -> (Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) {
  %168 = cast(%var_843, dtype="float64") /* ty=Tensor[(2, 4, 14), float64] */;
  %169 = cast(meta[relay.Constant][2] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %170 = cast(meta[relay.Constant][2] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %171 = cast(%var_854, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %172 = reshape(%169, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %173 = reshape(%170, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %174 = reshape(%171, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %175 = @func_593(%172, %173, %174) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %176 = log2(%168) /* ty=Tensor[(2, 4, 14), float64] */;
  %177 = %175.2;
  (%176, %177, meta[relay.Constant][2] /* ty=Tensor[(234), bool] */, %var_854)
}

def @func_8900() -> (Tensor[(112), float64],) {
  %180 = fn () -> (Tensor[(112), float64],) {
    %178 = @func_3580() /* ty=(Tensor[(112), float64], Tensor[(8, 14, 10), float64]) */;
    %179 = %178.0;
    (%179,)
  };
  %180() /* ty=(Tensor[(112), float64],) */
}

def @func_19124() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_19122() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_18958() -> Tensor[(8, 4, 11), float64] {
  @func_18956() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_11859(%var_11843: Tensor[(3, 1, 6), float32]) -> Tensor[(3, 7, 6), bool] {
  %181 = cast(%var_11843, dtype="bool") /* ty=Tensor[(3, 1, 6), bool] */;
  %182 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  greater(%181, %182) /* ty=Tensor[(3, 7, 6), bool] */
}

def @func_12477(%var_12470: Tensor[(273), bool]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) {
  %183 = @func_8112() /* ty=(Tensor[(8, 4, 11), float32],) */;
  %184 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %185 = cast(%var_12470, dtype="bool") /* ty=Tensor[(273), bool] */;
  %186 = cast(meta[relay.Constant][4] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %187 = reshape(%185, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
  %188 = reshape(%186, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %189 = @func_10304(%187, %188) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
  %190 = %183.0;
  %191 = %184.1;
  %192 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  %193 = %189.2;
  (%190, %191, %192, %193, %var_12470, meta[relay.Constant][4] /* ty=Tensor[(112), float64] */)
}

def @func_13119() -> Tensor[(8, 4, 11), float64] {
  @func_13117() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_5520(%var_5507: Tensor[(273), bool], %var_5508: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) {
  %194 = cast(%var_5507, dtype="bool") /* ty=Tensor[(273), bool] */;
  %195 = cast(%var_5508, dtype="float64") /* ty=Tensor[(112), float64] */;
  %196 = cast(%var_5507, dtype="int64") /* ty=Tensor[(273), int64] */;
  %197 = reshape(%194, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), bool] */;
  %198 = reshape(%195, newshape=[4, 28]) /* ty=Tensor[(4, 28), float64] */;
  %199 = reshape(%196, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %200 = @func_2532(%197, %198, %199) /* ty=(Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) */;
  %201 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %202 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  %203 = %200.4;
  %204 = %201.1;
  (%202, %203, %var_5507, %var_5508, %204)
}

def @func_4511() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %205 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %206 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %207 = %205.0;
  %208 = %206.0;
  (%207, %208)
}

def @func_6065() -> Tensor[(8, 4, 11), float64] {
  %209 = @func_3837() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %209.0
}

def @func_11839() -> (Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) {
  %213 = fn () -> (Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) {
    %210 = @func_8422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) */;
    %211 = %210.1;
    %212 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
    (%211, %212)
  };
  %213() /* ty=(Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_5940(%var_5936: Tensor[(15, 10, 5), float64]) -> (Tensor[(15, 10, 5), float64],) {
  %214 = cast(%var_5936, dtype="float64") /* ty=Tensor[(15, 10, 5), float64] */;
  %215 = log2(%214) /* ty=Tensor[(15, 10, 5), float64] */;
  (%215,)
}

def @func_10629() -> (Tensor[(8, 4, 11), float32],) {
  %218 = fn () -> (Tensor[(8, 4, 11), float32],) {
    %216 = @func_2702() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
    %217 = %216.0;
    (%217,)
  };
  %218() /* ty=(Tensor[(8, 4, 11), float32],) */
}

def @func_13431() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(154), float32]) {
  %219 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %220 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %221 = cast(meta[relay.Constant][5] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %222 = reshape(%221, newshape=[11, 1, 14]) /* ty=Tensor[(11, 1, 14), float32] */;
  %223 = @func_10586(%222) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %224 = %219.0;
  %225 = %220.0;
  %226 = %223.0;
  (%224, %225, %226, meta[relay.Constant][5] /* ty=Tensor[(154), float32] */)
}

def @func_14423() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %233 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %227 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %228 = @func_9432() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %229 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %230 = %227.0;
    %231 = %228.1;
    %232 = %229.0;
    (%230, %231, %232)
  };
  %233() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_7551() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) {
  %241 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) {
    %234 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %235 = @func_5215() /* ty=Tensor[(8, 4, 11), float64] */;
    %236 = cast(%235, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
    %237 = reshape(%236, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
    %238 = @func_2006(%237) /* ty=(Tensor[(8, 4, 11), float32],) */;
    %239 = %234.0;
    %240 = %238.0;
    (%235, %239, %240)
  };
  %241() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */
}

def @func_15712(%var_15704: Tensor[(1, 154), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(1, 154), float32]) {
  %242 = @func_9548() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %243 = cast(%var_15704, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
  %244 = reshape(%243, newshape=[11, 1, 14]) /* ty=Tensor[(11, 1, 14), float32] */;
  %245 = @func_10586(%244) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %246 = %242.2;
  %247 = %245.0;
  (%246, %247, %var_15704)
}

def @func_11548() -> (Tensor[(8, 4, 11), float64],) {
  %248 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
  (%248,)
}

def @func_7327() -> (Tensor[(11, 156), uint64],) {
  %249 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %250 = %249.0;
  (%250,)
}

def @func_16152() -> Tensor[(8, 4, 11), float64] {
  %252 = fn () -> Tensor[(8, 4, 11), float64] {
    %251 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %251.1
  };
  %252() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_5158() -> Tensor[(8, 4, 11), float64] {
  %254 = fn () -> Tensor[(8, 4, 11), float64] {
    %253 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
    %253.1
  };
  %254() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_6672() -> Tensor[(8, 4, 11), float64] {
  @func_6670() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8808() -> (Tensor[(8, 4, 11), float64],) {
  %255 = @func_7550() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %256 = %255.1;
  (%256,)
}

def @func_10344(%var_10329: Tensor[(4, 4, 16), float64]) -> (Tensor[(4, 4, 16), float64], Tensor[(8, 4, 11), float64]) {
  %257 = cast(%var_10329, dtype="float64") /* ty=Tensor[(4, 4, 16), float64] */;
  %258 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %259 = log(%257) /* ty=Tensor[(4, 4, 16), float64] */;
  %260 = %258.3;
  (%259, %260)
}

def @func_7329() -> (Tensor[(11, 156), uint64],) {
  @func_7327() /* ty=(Tensor[(11, 156), uint64],) */
}

def @func_9988() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_9986() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_20239() -> (Tensor[(8, 4, 11), float64],) {
  %261 = @func_3959() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %262 = %261.0;
  (%262,)
}

def @func_9124() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %263 = @func_4685() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %264 = @func_5215() /* ty=Tensor[(8, 4, 11), float64] */;
  %265 = %263.0;
  (%264, %265)
}

def @func_16956(%var_16955: Tensor[(36), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(36), float32], Tensor[(8, 4, 11), float64]) {
  %274 = fn (%var_16922: Tensor[(36), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(36), float32], Tensor[(8, 4, 11), float64]) {
    %266 = @func_9687() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
    %267 = cast(%var_16922, dtype="float32") /* ty=Tensor[(36), float32] */;
    %268 = reshape(%267, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
    %269 = @func_15162(%268) /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(9, 4), float32], Tensor[(273, 1), bool]) */;
    %270 = @func_12555() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(?, 8, 5), float64]) */;
    %271 = %266.0;
    %272 = %269.1;
    %273 = %270.1;
    (%271, %272, %var_16922, %273)
  };
  %274(%var_16955) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(36), float32], Tensor[(8, 4, 11), float64]) */
}

def @func_10747() -> Tensor[(8, 4, 11), float64] {
  @func_10745() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_4769(%var_4768: Tensor[(2, 16, 5), uint32]) -> (Tensor[(2, 16, 5), bool], Tensor[(8, 4, 11), float64]) {
  %282 = fn (%var_4757: Tensor[(2, 16, 5), uint32]) -> (Tensor[(2, 16, 5), bool], Tensor[(8, 4, 11), float64]) {
    %275 = cast(%var_4757, dtype="bool") /* ty=Tensor[(2, 16, 5), bool] */;
    %276 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(2, 16, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %277 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 16, 5), uint32] */, dtype="bool") /* ty=Tensor[(2, 16, 5), bool] */;
    %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %279 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
    %280 = greater_equal(%277, %278) /* ty=Tensor[(2, 16, 5), bool] */;
    %281 = %279.1;
    (%280, %281)
  };
  %282(%var_4768) /* ty=(Tensor[(2, 16, 5), bool], Tensor[(8, 4, 11), float64]) */
}

def @func_7507() -> Tensor[(8, 4, 11), float64] {
  @func_7505() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_7344() -> (Tensor[(8, 4, 11), float64],) {
  @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_9828(%var_9827: Tensor[(2, 8, 1), float64]) -> Tensor[(2, 8, 1), float64] {
  %284 = fn (%var_9822: Tensor[(2, 8, 1), float64]) -> Tensor[(2, 8, 1), float64] {
    %283 = cast(%var_9822, dtype="float64") /* ty=Tensor[(2, 8, 1), float64] */;
    sqrt(%283) /* ty=Tensor[(2, 8, 1), float64] */
  };
  %284(%var_9827) /* ty=Tensor[(2, 8, 1), float64] */
}

def @func_13664(%var_13663: Tensor[(10, 11, 5), float64]) -> (Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) {
  %293 = fn (%var_13647: Tensor[(10, 11, 5), float64]) -> (Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) {
    %285 = cast(%var_13647, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
    %286 = cast(meta[relay.Constant][7] /* ty=Tensor[(273), bool] */, dtype="bool") /* ty=Tensor[(273), bool] */;
    %287 = cast(meta[relay.Constant][8] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %288 = reshape(%286, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
    %289 = reshape(%287, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %290 = @func_10304(%288, %289) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
    %291 = log2(%285) /* ty=Tensor[(10, 11, 5), float64] */;
    %292 = %290.6;
    (%291, %292, meta[relay.Constant][7] /* ty=Tensor[(273), bool] */, meta[relay.Constant][8] /* ty=Tensor[(112), float64] */)
  };
  %293(%var_13663) /* ty=(Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) */
}

def @func_2009(%var_2007: Tensor[(8, 4, 11), float64]) -> (Tensor[(8, 4, 11), float32],) {
  @func_2006(%var_2007) /* ty=(Tensor[(8, 4, 11), float32],) */
}

def @func_10018() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_10016() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_11373() -> Tensor[(11, 156), uint64] {
  @func_11371() /* ty=Tensor[(11, 156), uint64] */
}

def @func_3510(%var_3509: Tensor[(11, 156), uint64]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(11, 156), uint16]) {
  %316 = fn (%var_3449: Tensor[(11, 156), uint64]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(11, 156), uint16]) {
    %294 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %295 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
    %296 = %295.0;
    %297 = cast(%var_3449, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
    %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(2), int32] */;
    %299 = cast(%296, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
    %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %301 = cast(%var_3449, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
    %302 = sin(%301) /* ty=Tensor[(11, 156), float32] */;
    %303 = cast(%var_3449, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
    %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(2), int32] */;
    %305 = cast(%302, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
    %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %307 = not_equal(%305, %306) /* ty=Tensor[(11, 156), bool] */;
    %308 = cast(%302, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
    %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(2), int32] */;
    %310 = cast(%307, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %312 = @func_3244() /* ty=Tensor[(8, 4, 11), float32] */;
    %313 = %294.0;
    %314 = floor_mod(%299, %300) /* ty=Tensor[(11, 156), float32] */;
    %315 = right_shift(%310, %311) /* ty=Tensor[(11, 156), uint16] */;
    (%312, %313, %314, %315)
  };
  %316(%var_3509) /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(11, 156), uint16]) */
}

def @func_6250() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) {
  %329 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) {
    %317 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
    %318 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %319 = @func_6005() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %320 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %321 = cast(meta[relay.Constant][9] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %322 = reshape(%321, newshape=[1, 1716]) /* ty=Tensor[(1, 1716), uint64] */;
    %323 = @func_1709(%322) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) */;
    %324 = %317.1;
    %325 = %318.1;
    %326 = %319.0;
    %327 = %320.2;
    %328 = %323.1;
    (%324, %325, %326, %327, %328, meta[relay.Constant][9] /* ty=Tensor[(1716), uint64] */)
  };
  %329() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */
}

def @func_10347(%var_10345: Tensor[(4, 4, 16), float64]) -> (Tensor[(4, 4, 16), float64], Tensor[(8, 4, 11), float64]) {
  @func_10344(%var_10345) /* ty=(Tensor[(4, 4, 16), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_3133(%var_3131: Tensor[(8, 4, 11), float64]) -> Tensor[(8, 4, 11), float64] {
  @func_3130(%var_3131) /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_10604() -> (Tensor[(8, 4, 11), float64],) {
  %330 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %331 = %330.0;
  (%331,)
}

def @func_12819() -> (Tensor[(8, 4, 11), float64],) {
  @func_12817() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @main(%var_20542: Tensor[(4, 5, 10), float32]) -> Tensor[(4, 5, 10), float32] {
  %332 = cast(%var_20542, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  asin(%332) /* ty=Tensor[(4, 5, 10), float32] */
}

def @func_5316() -> (Tensor[(11, 156), float64],) {
  @func_5314() /* ty=(Tensor[(11, 156), float64],) */
}

def @func_14988() -> (Tensor[(?, 3, 16), bool], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %345 = fn () -> (Tensor[(?, 3, 16), bool], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
    %333 = @func_12889() /* ty=(Tensor[(1, 3, 16), float64],) */;
    %334 = %333.0;
    %335 = cast(%334, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
    %336 = asin(%335) /* ty=Tensor[(1, 3, 16), float64] */;
    %337 = cast(%336, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
    %338 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
    %339 = cast(%334, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
    %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %341 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
    %342 = less(%339, %340) /* ty=Tensor[(?, 3, 16), bool] */;
    %343 = %341.3;
    %344 = @func_8783() /* ty=Tensor[(8, 4, 11), float64] */;
    (%342, %343, %344)
  };
  %345() /* ty=(Tensor[(?, 3, 16), bool], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */
}

def @func_15165(%var_15163: Tensor[(9, 4), float32]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(9, 4), float32], Tensor[(273, 1), bool]) {
  @func_15162(%var_15163) /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(9, 4), float32], Tensor[(273, 1), bool]) */
}

def @func_15793(%var_15759: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) {
  %346 = cast(meta[relay.Constant][10] /* ty=Tensor[(273), bool] */, dtype="bool") /* ty=Tensor[(273), bool] */;
  %347 = cast(%var_15759, dtype="float64") /* ty=Tensor[(112), float64] */;
  %348 = reshape(%346, newshape=[273]) /* ty=Tensor[(273), bool] */;
  %349 = reshape(%347, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %350 = @func_14888(%348, %349) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), bool], Tensor[(66), uint64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) */;
  %351 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %352 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
  %353 = %350.5;
  %354 = %351.0;
  (%352, %353, meta[relay.Constant][10] /* ty=Tensor[(273), bool] */, %var_15759, %354)
}

def @func_1916(%var_1899: Tensor[(8, 14, 10), float64]) -> (Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) {
  %355 = cast(%var_1899, dtype="float64") /* ty=Tensor[(8, 14, 10), float64] */;
  %356 = cast(meta[relay.Constant][11] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %357 = reshape(%356, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
  %358 = sqrt(%355) /* ty=Tensor[(8, 14, 10), float64] */;
  %359 = @func_1408(%357) /* ty=Tensor[(13, 7, 4), float64] */;
  (%358, %359, meta[relay.Constant][11] /* ty=Tensor[(364), float64] */)
}

def @func_14892(%var_14890: Tensor[(273), bool], %var_14891: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), bool], Tensor[(66), uint64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) {
  @func_14888(%var_14890, %var_14891) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), bool], Tensor[(66), uint64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) */
}

def @func_18397() -> (Tensor[(8, 4, 11), float64], Tensor[(550, ?), uint64], Tensor[(8, 4, 11), float64], Tensor[(550, 273), bool]) {
  %360 = @func_4174() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %361 = cast(meta[relay.Constant][12] /* ty=Tensor[(550, 1), float64] */, dtype="float64") /* ty=Tensor[(550, 1), float64] */;
  %362 = cosh(%361) /* ty=Tensor[(550, 1), float64] */;
  %363 = cast(meta[relay.Constant][12] /* ty=Tensor[(550, 1), float64] */, dtype="uint64") /* ty=Tensor[(550, 1), uint64] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(2), int32] */;
  %365 = cast(%362, dtype="uint64") /* ty=Tensor[(550, 1), uint64] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %367 = @func_6249() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %368 = cast(%362, dtype="float32") /* ty=Tensor[(550, 1), float32] */;
  %369 = sigmoid(%368) /* ty=Tensor[(550, 1), float32] */;
  %370 = cast(meta[relay.Constant][12] /* ty=Tensor[(550, 1), float64] */, dtype="float64") /* ty=Tensor[(550, 1), float64] */;
  %371 = reshape(%370, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), float64] */;
  %372 = @func_13662(%371) /* ty=(Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) */;
  %373 = %372.2;
  %374 = cast(%369, dtype="bool") /* ty=Tensor[(550, 1), bool] */;
  %375 = cast(%373, dtype="bool") /* ty=Tensor[(273), bool] */;
  %376 = %360.0;
  %377 = right_shift(%365, %366) /* ty=Tensor[(550, ?), uint64] */;
  %378 = %367.2;
  %379 = less(%374, %375) /* ty=Tensor[(550, 273), bool] */;
  (%376, %377, %378, %379)
}

def @func_7714(%var_7688: Tensor[(10, 13, 8), uint64], %var_7689: Tensor[(10, 13, 8), uint64]) -> (Tensor[(10, 13, 8), uint64], Tensor[(10, 13, 8), float64], Tensor[(8, 4, 11), float64]) {
  %380 = cast(%var_7689, dtype="uint64") /* ty=Tensor[(10, 13, 8), uint64] */;
  %381 = shape_of(%var_7688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_7688, dtype="uint64") /* ty=Tensor[(10, 13, 8), uint64] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %384 = cast(%var_7688, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %385 = @func_7633() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %386 = logical_xor(%382, %383) /* ty=Tensor[(10, 13, 8), uint64] */;
  %387 = rsqrt(%384) /* ty=Tensor[(10, 13, 8), float64] */;
  %388 = %385.0;
  (%386, %387, %388)
}

def @func_8112() -> (Tensor[(8, 4, 11), float32],) {
  %389 = @func_3244() /* ty=Tensor[(8, 4, 11), float32] */;
  (%389,)
}

def @func_15974() -> Tensor[(11, 156), float32] {
  %391 = fn () -> Tensor[(11, 156), float32] {
    %390 = @func_13328() /* ty=(Tensor[(11, 156), float32],) */;
    %390.0
  };
  %391() /* ty=Tensor[(11, 156), float32] */
}

def @func_2904(%var_2880: Tensor[(1, 4, 9), float32]) -> (Tensor[(?, 4, 9), bool],) {
  %392 = cast(%var_2880, dtype="float32") /* ty=Tensor[(1, 4, 9), float32] */;
  %393 = cosh(%392) /* ty=Tensor[(1, 4, 9), float32] */;
  %394 = cast(%var_2880, dtype="bool") /* ty=Tensor[(1, 4, 9), bool] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="bool") /* ty=Tensor[(1, 4, 9), bool] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %398 = logical_and(%396, %397) /* ty=Tensor[(?, 4, 9), bool] */;
  (%398,)
}

def @func_7110(%var_7109: Tensor[(15, 1, 7), float64]) -> (Tensor[(15, 1, 7), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %403 = fn (%var_7089: Tensor[(15, 1, 7), float64]) -> (Tensor[(15, 1, 7), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %399 = cast(%var_7089, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
    %400 = tan(%399) /* ty=Tensor[(15, 1, 7), float64] */;
    %401 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
    %402 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
    (%400, %401, %402)
  };
  %403(%var_7109) /* ty=(Tensor[(15, 1, 7), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_15853() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(234), bool], Tensor[(112), float64], Tensor[(858, 2), uint64]) {
  @func_15851() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(234), bool], Tensor[(112), float64], Tensor[(858, 2), uint64]) */
}

def @func_19894() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %404 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %405 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %406 = %404.2;
  %407 = %405.1;
  (%406, %407)
}

def @func_5573() -> Tensor[(8, 4, 11), float64] {
  @func_1791() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_3988() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) {
  %415 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) {
    %408 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %409 = @func_3884() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %410 = %409.0;
    %411 = cast(%410, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
    %412 = %408.0;
    %413 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
    %414 = cos(%411) /* ty=Tensor[(8, 4, 11), float32] */;
    (%412, %413, %414)
  };
  %415() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */
}

def @func_8753() -> (Tensor[(11, 156), float32],) {
  %420 = fn () -> (Tensor[(11, 156), float32],) {
    %416 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
    %417 = %416.0;
    %418 = cast(%417, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
    %419 = sinh(%418) /* ty=Tensor[(11, 156), float32] */;
    (%419,)
  };
  %420() /* ty=(Tensor[(11, 156), float32],) */
}

def @func_10606() -> (Tensor[(8, 4, 11), float64],) {
  @func_10604() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_8046() -> (Tensor[(8, 4, 11), float64],) {
  @func_8044() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_12362() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  @func_12360() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */
}

def @func_3521() -> Tensor[(8, 4, 11), float64] {
  %421 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %421.0
}

def @func_4127(%var_4125: Tensor[(364), float64]) -> (Tensor[(13, 7, 4), float64], Tensor[(364), float64], Tensor[(11, 156), float32]) {
  @func_4124(%var_4125) /* ty=(Tensor[(13, 7, 4), float64], Tensor[(364), float64], Tensor[(11, 156), float32]) */
}

def @func_15112(%var_15111: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) {
  %430 = fn (%var_15099: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) {
    %422 = @func_4723() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %423 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %424 = cast(%var_15099, dtype="float64") /* ty=Tensor[(112), float64] */;
    %425 = reshape(%424, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %426 = @func_13809(%425) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) */;
    %427 = %422.0;
    %428 = %423.0;
    %429 = %426.2;
    (%427, %428, %429, %var_15099)
  };
  %430(%var_15111) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64]) */
}

def @func_16658() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %434 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
    %431 = @func_13756() /* ty=Tensor[(8, 4, 11), float64] */;
    %432 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
    %433 = @func_11371() /* ty=Tensor[(11, 156), uint64] */;
    (%431, %432, %433)
  };
  %434() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */
}

def @func_18336() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64]) {
  @func_18334() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64]) */
}

def @func_6560(%var_6555: Tensor[(56, 2), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) {
  %435 = @func_5051() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %436 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %437 = cast(%var_6555, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
  %438 = reshape(%437, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
  %439 = @func_1823(%438) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(1, 112), float64], Tensor[(1716), uint64]) */;
  %440 = %435.0;
  %441 = %436.2;
  %442 = %439.1;
  (%440, %441, %442, %var_6555)
}

def @func_9688() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %449 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
    %443 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %444 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
    %445 = %443.0;
    %446 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
    %447 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
    %448 = %444.0;
    (%445, %446, %447, %448)
  };
  %449() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */
}

def @func_58(%var_56: Tensor[(11, 12, 13), uint64], %var_57: Tensor[(11, 12, 13), uint64]) -> (Tensor[(11, 12, 13), float32],) {
  @func_54(%var_56, %var_57) /* ty=(Tensor[(11, 12, 13), float32],) */
}

def @func_10697() -> (Tensor[(11, 156), bool], Tensor[(1716), uint64]) {
  %450 = @func_6249() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %451 = @func_8562() /* ty=Tensor[(11, 156), bool] */;
  %452 = %450.5;
  (%451, %452)
}

def @func_14322() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %457 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %453 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %454 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %455 = %453.0;
    %456 = %454.0;
    (%455, %456)
  };
  %457() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_19122() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %458 = @func_6390() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %459 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_19617() -> (Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  @func_19615() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */
}

def @func_9548() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %461 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %462 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %463 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %464 = %461.1;
  %465 = %462.0;
  %466 = @func_8312() /* ty=Tensor[(8, 4, 11), float64] */;
  (%463, %464, %465, %466)
}

def @func_7972() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %470 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %467 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
    %468 = @func_7307() /* ty=Tensor[(8, 4, 11), float64] */;
    %469 = @func_7307() /* ty=Tensor[(8, 4, 11), float64] */;
    (%467, %468, %469)
  };
  %470() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_16377() -> (Tensor[(8, 4, 11), float64],) {
  @func_16375() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_5943(%var_5941: Tensor[(15, 10, 5), float64]) -> (Tensor[(15, 10, 5), float64],) {
  @func_5940(%var_5941) /* ty=(Tensor[(15, 10, 5), float64],) */
}

def @func_3960() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %478 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %471 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %472 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %473 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %474 = %471.0;
    %475 = %472.2;
    %476 = %473.1;
    %477 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
    (%474, %475, %476, %477)
  };
  %478() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_6907() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) {
  @func_6905() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_12557() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(?, 8, 5), float64]) {
  @func_12555() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(?, 8, 5), float64]) */
}

def @func_12383() -> (Tensor[(8, 4, 11), float64],) {
  %480 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %479 = @func_8312() /* ty=Tensor[(8, 4, 11), float64] */;
    (%479,)
  };
  %480() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_9808(%var_9805: Tensor[(5, 6, 15), uint16], %var_9806: Tensor[(7, 44), uint8], %var_9807: Tensor[(234), bool]) -> (Tensor[(5, 6, 15), uint16], Tensor[(56, 2), float64], Tensor[(112), float64], Tensor[(6, 3, 13), bool], Tensor[(7, 44), uint8], Tensor[(234), bool]) {
  %496 = fn (%var_9785: Tensor[(5, 6, 15), uint16], %var_9797: Tensor[(7, 44), uint8], %var_9798: Tensor[(234), bool]) -> (Tensor[(5, 6, 15), uint16], Tensor[(56, 2), float64], Tensor[(112), float64], Tensor[(6, 3, 13), bool], Tensor[(7, 44), uint8], Tensor[(234), bool]) {
    %481 = cast(%var_9785, dtype="uint16") /* ty=Tensor[(5, 6, 15), uint16] */;
    %482 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(5, 6, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %483 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 6, 15), uint16] */, dtype="uint16") /* ty=Tensor[(5, 6, 15), uint16] */;
    %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %485 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %486 = reshape(%485, newshape=[56, 2]) /* ty=Tensor[(56, 2), float64] */;
    %487 = @func_6560(%486) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) */;
    %488 = cast(%var_9797, dtype="uint8") /* ty=Tensor[(7, 44), uint8] */;
    %489 = cast(%var_9798, dtype="bool") /* ty=Tensor[(234), bool] */;
    %490 = reshape(%488, newshape=[14, 11, 2]) /* ty=Tensor[(14, 11, 2), uint8] */;
    %491 = reshape(%489, newshape=[234]) /* ty=Tensor[(234), bool] */;
    %492 = @func_1031(%490, %491) /* ty=(Tensor[(14, 11, 2), uint8], Tensor[(14, 11, 2), float32], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(1716), uint64], Tensor[(11, 12, 13), float32], Tensor[(6, 3, 13), bool]) */;
    %493 = bitwise_xor(%483, %484) /* ty=Tensor[(5, 6, 15), uint16] */;
    %494 = %487.3;
    %495 = %492.2;
    (%493, %494, meta[relay.Constant][14] /* ty=Tensor[(112), float64] */, %495, %var_9797, %var_9798)
  };
  %496(%var_9805, %var_9806, %var_9807) /* ty=(Tensor[(5, 6, 15), uint16], Tensor[(56, 2), float64], Tensor[(112), float64], Tensor[(6, 3, 13), bool], Tensor[(7, 44), uint8], Tensor[(234), bool]) */
}

def @func_20448() -> (Tensor[(8, 4, 11), float32],) {
  %499 = fn () -> (Tensor[(8, 4, 11), float32],) {
    %497 = @func_14445() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
    %498 = %497.0;
    (%498,)
  };
  %499() /* ty=(Tensor[(8, 4, 11), float32],) */
}

def @func_3244() -> Tensor[(8, 4, 11), float32] {
  %500 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %501 = %500.0;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  tan(%502) /* ty=Tensor[(8, 4, 11), float32] */
}

def @func_19176() -> Tensor[(3, 9, 5), uint64] {
  @func_19174() /* ty=Tensor[(3, 9, 5), uint64] */
}

def @func_1410(%var_1409: Tensor[(13, 7, 4), float64]) -> Tensor[(13, 7, 4), float64] {
  %504 = fn (%var_1384: Tensor[(13, 7, 4), float64]) -> Tensor[(13, 7, 4), float64] {
    %503 = cast(%var_1384, dtype="float64") /* ty=Tensor[(13, 7, 4), float64] */;
    sinh(%503) /* ty=Tensor[(13, 7, 4), float64] */
  };
  %504(%var_1409) /* ty=Tensor[(13, 7, 4), float64] */
}

def @func_12974() -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(4), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %519 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(4), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %505 = cast(5.65398f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %506 = cast(meta[relay.Constant][15] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
    %507 = reshape(%505, newshape=[]) /* ty=float64 */;
    %508 = reshape(%506, newshape=[1, 4, 1]) /* ty=Tensor[(1, 4, 1), float64] */;
    %509 = @func_12420() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %510 = @func_12019() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %511 = @func_6151() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %512 = @func_6005() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %513 = @func_9091() /* ty=Tensor[(8, 4, 11), float64] */;
    %514 = @func_3703(%507, %508) /* ty=Tensor[(1, 4, 1), float64] */;
    %515 = %509.0;
    %516 = %510.2;
    %517 = %511.0;
    %518 = %512.0;
    (%513, %514, 5.65398f64 /* ty=float64 */, meta[relay.Constant][15] /* ty=Tensor[(4), float64] */, %515, %516, %517, %518)
  };
  %519() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(4), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_4282() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %520 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %521 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %522 = %520.0;
  %523 = %521.0;
  (%522, %523)
}

def @func_18956() -> Tensor[(8, 4, 11), float64] {
  @func_18498() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_2536(%var_2533: Tensor[(13, 7, 3), bool], %var_2534: Tensor[(4, 28), float64], %var_2535: Tensor[(13, 7, 3), int64]) -> (Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) {
  %561 = fn (%var_2423: Tensor[(13, 7, 3), bool], %var_2498: Tensor[(4, 28), float64], %var_2518: Tensor[(13, 7, 3), int64]) -> (Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) {
    %524 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 7, 3), bool] */, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
    %525 = shape_of(%var_2423, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(%var_2423, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %528 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
    %529 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
    %530 = cast(%529, dtype="int8") /* ty=Tensor[(8, 4, 11), int8] */;
    %531 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(%528, dtype="int8") /* ty=Tensor[(8, 4, 11), int8] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %534 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 7, 3), bool] */, dtype="float64") /* ty=Tensor[(13, 7, 3), float64] */;
    %535 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %536 = cast(%var_2498, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %537 = cast(meta[relay.Constant][17] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %538 = reshape(%536, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
    %539 = reshape(%537, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %540 = @func_866(%538, %539) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
    %541 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 7, 3), bool] */, dtype="float32") /* ty=Tensor[(13, 7, 3), float32] */;
    %542 = erf(%541) /* ty=Tensor[(13, 7, 3), float32] */;
    %543 = cast(%var_2423, dtype="int64") /* ty=Tensor[(13, 7, 3), int64] */;
    %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
    %545 = cast(%542, dtype="int64") /* ty=Tensor[(13, 7, 3), int64] */;
    %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %547 = right_shift(%545, %546) /* ty=Tensor[(13, 7, 3), int64] */;
    %548 = cast(%var_2518, dtype="uint8") /* ty=Tensor[(13, 7, 3), uint8] */;
    %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
    %550 = cast(%547, dtype="uint8") /* ty=Tensor[(13, 7, 3), uint8] */;
    %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %552 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %553 = logical_and(%526, %527) /* ty=Tensor[(13, 7, 3), bool] */;
    %554 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
    %555 = add(%532, %533) /* ty=Tensor[(8, 4, 11), int8] */;
    %556 = sqrt(%534) /* ty=Tensor[(13, 7, 3), float64] */;
    %557 = %535.0;
    %558 = %540.0;
    %559 = subtract(%550, %551) /* ty=Tensor[(13, 7, 3), uint8] */;
    %560 = %552.0;
    (%553, %554, %555, %556, %557, %558, %var_2498, meta[relay.Constant][17] /* ty=Tensor[(1716), uint64] */, %559, %560)
  };
  %561(%var_2533, %var_2534, %var_2535) /* ty=(Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) */
}

def @func_18980() -> Tensor[(8, 4, 11), float64] {
  %562 = @func_5665() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %562.0
}

def @func_8563() -> Tensor[(11, 156), bool] {
  %564 = fn () -> Tensor[(11, 156), bool] {
    %563 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
    %563.0
  };
  %564() /* ty=Tensor[(11, 156), bool] */
}

def @func_13433() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(154), float32]) {
  @func_13431() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 7, 14), bool], Tensor[(154), float32]) */
}

def @func_17036() -> (Tensor[(8, 4, 11), float64],) {
  %565 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  (%565,)
}

def @func_5418() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %566 = @func_5051() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %567 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %568 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %569 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %570 = %566.0;
  %571 = %567.0;
  %572 = %568.0;
  %573 = %569.0;
  (%570, %571, %572, %573)
}

def @func_8275() -> Tensor[(8, 4, 11), float64] {
  %574 = @func_8044() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %574.0
}

def @func_1614() -> Tensor[(8, 4, 11), float64] {
  %578 = fn () -> Tensor[(8, 4, 11), float64] {
    %575 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %576 = %575.0;
    %577 = cast(%576, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
    acosh(%577) /* ty=Tensor[(8, 4, 11), float64] */
  };
  %578() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_10447(%var_10446: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) {
  %589 = fn (%var_10381: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) {
    %579 = @func_8131() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %580 = @func_9124() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %581 = cast(meta[relay.Constant][18] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %582 = cast(%var_10381, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %583 = reshape(%581, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %584 = reshape(%582, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %585 = @func_1558(%583, %584) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) */;
    %586 = %579.0;
    %587 = %580.0;
    %588 = %585.1;
    (%586, %587, %588, meta[relay.Constant][18] /* ty=Tensor[(112), float64] */, %var_10381)
  };
  %589(%var_10446) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) */
}

def @func_11717() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %594 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
    %590 = @func_9432() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %591 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
    %592 = %590.1;
    %593 = %591.0;
    (%592, %593)
  };
  %594() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */
}

def @func_2211() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */
}

def @func_2616() -> (Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */
}

def @func_16190() -> Tensor[(8, 4, 11), float32] {
  %595 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %595.2
}

def @func_2928() -> (Tensor[(8, 4, 11), float64],) {
  @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_2109() -> Tensor[(8, 4, 11), float64] {
  %596 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_1791() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %596() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_17223() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_7679() -> Tensor[(8, 4, 11), float64] {
  @func_7677() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_4124(%var_4108: Tensor[(364), float64]) -> (Tensor[(13, 7, 4), float64], Tensor[(364), float64], Tensor[(11, 156), float32]) {
  %597 = cast(%var_4108, dtype="float64") /* ty=Tensor[(364), float64] */;
  %598 = reshape(%597, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), float64] */;
  %599 = @func_3692() /* ty=(Tensor[(11, 156), bool],) */;
  %600 = %599.0;
  %601 = cast(%600, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %602 = @func_1408(%598) /* ty=Tensor[(13, 7, 4), float64] */;
  %603 = erf(%601) /* ty=Tensor[(11, 156), float32] */;
  (%602, %var_4108, %603)
}

def @func_9596() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %607 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %604 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %605 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
    %606 = %604.0;
    (%605, %606)
  };
  %607() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_19549() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_19547() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_14246() -> (Tensor[(8, 14, 10), float64], Tensor[(11, 12, 13), float32], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %608 = @func_13075() /* ty=(Tensor[(8, 14, 10), float64],) */;
  %609 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %610 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 156), uint64] */, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %611 = reshape(%609, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %612 = reshape(%610, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %613 = @func_54(%611, %612) /* ty=(Tensor[(11, 12, 13), float32],) */;
  %614 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %615 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 156), uint64] */, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %616 = cosh(%615) /* ty=Tensor[(11, 156), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %618 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %619 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %620 = %608.0;
  %621 = %613.0;
  %622 = %614.0;
  %623 = tan(%617) /* ty=Tensor[(11, 156), float32] */;
  %624 = %618.0;
  %625 = %619.0;
  (%620, %621, %622, %623, %624, %625)
}

def @func_19896() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_19894() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_16058() -> (Tensor[(8, 4, 11), float64],) {
  @func_16056() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_3706(%var_3704: float64, %var_3705: Tensor[(1, 4, 1), float64]) -> Tensor[(1, 4, 1), float64] {
  %628 = fn (%var_3694: float64, %var_3695: Tensor[(1, 4, 1), float64]) -> Tensor[(1, 4, 1), float64] {
    %626 = cast(%var_3694, dtype="float64") /* ty=float64 */;
    %627 = cast(%var_3695, dtype="float64") /* ty=Tensor[(1, 4, 1), float64] */;
    floor_mod(%626, %627) /* ty=Tensor[(1, 4, 1), float64] */
  };
  %628(%var_3704, %var_3705) /* ty=Tensor[(1, 4, 1), float64] */
}

def @func_11585(%var_11584: Tensor[(3, 4, 9), float32]) -> (Tensor[(3, 4, 9), float32], Tensor[(3, 4, 9), uint32]) {
  %636 = fn (%var_11569: Tensor[(3, 4, 9), float32]) -> (Tensor[(3, 4, 9), float32], Tensor[(3, 4, 9), uint32]) {
    %629 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 4, 9), float32] */, dtype="float32") /* ty=Tensor[(3, 4, 9), float32] */;
    %630 = cast(%var_11569, dtype="uint32") /* ty=Tensor[(3, 4, 9), uint32] */;
    %631 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(3, 4, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %632 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 4, 9), float32] */, dtype="uint32") /* ty=Tensor[(3, 4, 9), uint32] */;
    %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %634 = log10(%629) /* ty=Tensor[(3, 4, 9), float32] */;
    %635 = minimum(%632, %633) /* ty=Tensor[(3, 4, 9), uint32] */;
    (%634, %635)
  };
  %636(%var_11584) /* ty=(Tensor[(3, 4, 9), float32], Tensor[(3, 4, 9), uint32]) */
}

def @func_4472() -> (Tensor[(8, 4, 11), float64],) {
  %637 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %638 = %637.0;
  (%638,)
}

def @func_12908() -> (Tensor[(8, 4, 11), float64],) {
  %639 = @func_6065() /* ty=Tensor[(8, 4, 11), float64] */;
  (%639,)
}

def @func_16670() -> (Tensor[(8, 4, 11), float64],) {
  %640 = @func_15851() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(234), bool], Tensor[(112), float64], Tensor[(858, 2), uint64]) */;
  %641 = %640.0;
  (%641,)
}

def @func_5215() -> Tensor[(8, 4, 11), float64] {
  %642 = @func_3837() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %642.0
}

def @func_13011() -> Tensor[(8, 4, 11), float32] {
  %644 = fn () -> Tensor[(8, 4, 11), float32] {
    %643 = @func_10628() /* ty=(Tensor[(8, 4, 11), float32],) */;
    %643.0
  };
  %644() /* ty=Tensor[(8, 4, 11), float32] */
}

def @func_19096(%var_19069: Tensor[(13, 9, 9), float32], %var_19075: Tensor[(1008), uint32]) -> (Tensor[(13, 9, 9), float32], Tensor[(14, 6, 12), uint32], uint32, Tensor[(1008), uint32]) {
  %645 = cast(%var_19069, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  %646 = cast(meta[relay.Constant][21] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %647 = cast(%var_19075, dtype="uint32") /* ty=Tensor[(1008), uint32] */;
  %648 = reshape(%646, newshape=[]) /* ty=uint32 */;
  %649 = reshape(%647, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), uint32] */;
  %650 = @func_7448(%648, %649) /* ty=(Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) */;
  %651 = tan(%645) /* ty=Tensor[(13, 9, 9), float32] */;
  %652 = %650.0;
  (%651, %652, meta[relay.Constant][21] /* ty=uint32 */, %var_19075)
}

def @func_18797() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %653 = @func_6740() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %654 = @func_12395() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %655 = %653.0;
  %656 = %654.0;
  (%655, %656)
}

def @func_15451(%var_15448: Tensor[(234), bool], %var_15449: Tensor[(1716, 1), uint64], %var_15450: Tensor[(1716, 5), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(8, 4, 11), float64], Tensor[(1716, 5), int32]) {
  %677 = fn (%var_15423: Tensor[(234), bool], %var_15424: Tensor[(1716, 1), uint64], %var_15436: Tensor[(1716, 5), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(8, 4, 11), float64], Tensor[(1716, 5), int32]) {
    %657 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %658 = @func_14071() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %659 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %660 = cast(%var_15423, dtype="bool") /* ty=Tensor[(234), bool] */;
    %661 = cast(%var_15423, dtype="bool") /* ty=Tensor[(234), bool] */;
    %662 = cast(%var_15424, dtype="uint64") /* ty=Tensor[(1716, 1), uint64] */;
    %663 = reshape(%660, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %664 = reshape(%661, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %665 = reshape(%662, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %666 = @func_593(%663, %664, %665) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
    %667 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %668 = cast(%var_15424, dtype="int32") /* ty=Tensor[(1716, 1), int32] */;
    %669 = cast(%var_15436, dtype="int32") /* ty=Tensor[(1716, 5), int32] */;
    %670 = %657.0;
    %671 = %658.1;
    %672 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
    %673 = %659.0;
    %674 = %666.0;
    %675 = %667.1;
    %676 = bitwise_xor(%668, %669) /* ty=Tensor[(1716, 5), int32] */;
    (%670, %671, %672, %673, %674, %var_15423, %675, %676)
  };
  %677(%var_15448, %var_15449, %var_15450) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(8, 4, 11), float64], Tensor[(1716, 5), int32]) */
}

def @func_18942(%var_18940: Tensor[(11, 156), float64], %var_18941: Tensor[(432), float32]) -> (Tensor[(11, 156), float32], Tensor[(11, 156), uint16], Tensor[(11, 156), bool], Tensor[(3, 16, 9), float32], Tensor[(432), float32]) {
  @func_18938(%var_18940, %var_18941) /* ty=(Tensor[(11, 156), float32], Tensor[(11, 156), uint16], Tensor[(11, 156), bool], Tensor[(3, 16, 9), float32], Tensor[(432), float32]) */
}

def @func_13473() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %682 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %678 = @func_3959() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %679 = @func_9687() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
    %680 = %678.0;
    %681 = %679.1;
    (%680, %681)
  };
  %682() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_11250() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %687 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %683 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %684 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
    %685 = %683.0;
    %686 = %684.0;
    (%685, %686)
  };
  %687() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_7309() -> Tensor[(8, 4, 11), float64] {
  @func_7307() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8810() -> (Tensor[(8, 4, 11), float64],) {
  @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_8114() -> (Tensor[(8, 4, 11), float32],) {
  @func_8112() /* ty=(Tensor[(8, 4, 11), float32],) */
}

def @func_15968(%var_15966: Tensor[(105), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(105), float64], Tensor[(8, 4, 11), float64]) {
  @func_15965(%var_15966) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(105), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_12855() -> Tensor[(5, 16, 11), float32] {
  @func_12853() /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_2093() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) {
  %688 = cast(meta[relay.Constant][22] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %689 = reshape(%688, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float64] */;
  %690 = @func_1916(%689) /* ty=(Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) */;
  %691 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %692 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  %693 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %694 = %690.0;
  (%691, %692, %693, %694, meta[relay.Constant][22] /* ty=Tensor[(1120), float64] */)
}

def @func_1823(%var_1815: Tensor[(1, 112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(1, 112), float64], Tensor[(1716), uint64]) {
  %695 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %696 = cast(%var_1815, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %697 = cast(meta[relay.Constant][23] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %698 = reshape(%696, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %699 = reshape(%697, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %700 = @func_866(%698, %699) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
  %701 = %695.0;
  %702 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %703 = %700.0;
  (%701, %702, %703, %var_1815, meta[relay.Constant][23] /* ty=Tensor[(1716), uint64] */)
}

def @func_8825() -> Tensor[(8, 4, 11), float64] {
  @func_8823() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_10589(%var_10587: Tensor[(11, 1, 14), float32]) -> (Tensor[(11, 7, 14), bool],) {
  @func_10586(%var_10587) /* ty=(Tensor[(11, 7, 14), bool],) */
}

def @func_17221() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %704 = @func_12382() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %705 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  %706 = %704.0;
  (%705, %706)
}

def @func_5233() -> Tensor[(8, 4, 11), float64] {
  @func_5231() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_9550() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_9548() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_2307() -> Tensor[(8, 4, 11), float64] {
  %712 = fn () -> Tensor[(8, 4, 11), float64] {
    %707 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
    %708 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
    %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
    %710 = cast(%707, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%710, %711) /* ty=Tensor[(8, 4, 11), float64] */
  };
  %712() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_12480(%var_12478: Tensor[(273), bool]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) {
  @func_12477(%var_12478) /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) */
}

def @func_14598() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_14596() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_6128(%var_6125: float64) -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(1, 4), float64]) {
  %713 = cast(%var_6125, dtype="float64") /* ty=float64 */;
  %714 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
  %715 = reshape(%713, newshape=[]) /* ty=float64 */;
  %716 = reshape(%714, newshape=[1, 4, 1]) /* ty=Tensor[(1, 4, 1), float64] */;
  %717 = @func_3669() /* ty=Tensor[(8, 4, 11), float64] */;
  %718 = @func_3703(%715, %716) /* ty=Tensor[(1, 4, 1), float64] */;
  (%717, %718, %var_6125, meta[relay.Constant][25] /* ty=Tensor[(1, 4), float64] */)
}

def @func_11926() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %722 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %719 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %720 = %719.0;
    %721 = @func_10896() /* ty=Tensor[(8, 4, 11), float64] */;
    (%720, %721)
  };
  %722() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_7634() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %728 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %723 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %724 = @func_6740() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %725 = %723.0;
    %726 = @func_7241() /* ty=Tensor[(8, 4, 11), float64] */;
    %727 = %724.0;
    (%725, %726, %727)
  };
  %728() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_10699() -> (Tensor[(11, 156), bool], Tensor[(1716), uint64]) {
  @func_10697() /* ty=(Tensor[(11, 156), bool], Tensor[(1716), uint64]) */
}

def @func_12910() -> (Tensor[(8, 4, 11), float64],) {
  @func_12908() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_11109() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %741 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %729 = @func_6740() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %730 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %731 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %732 = @func_7327() /* ty=(Tensor[(11, 156), uint64],) */;
    %733 = @func_7633() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %734 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %735 = %729.0;
    %736 = %730.0;
    %737 = %731.2;
    %738 = %732.0;
    %739 = %733.2;
    %740 = %734.0;
    (%735, %736, %737, %738, %739, %740)
  };
  %741() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_15965(%var_15944: Tensor[(105), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(105), float64], Tensor[(8, 4, 11), float64]) {
  %742 = @func_12111() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %743 = cast(%var_15944, dtype="float64") /* ty=Tensor[(105), float64] */;
  %744 = reshape(%743, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float64] */;
  %745 = @func_7108(%744) /* ty=(Tensor[(15, 1, 7), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %746 = %742.2;
  %747 = %745.1;
  %748 = @func_8783() /* ty=Tensor[(8, 4, 11), float64] */;
  (%746, %747, %var_15944, %748)
}

def @func_7032() -> (Tensor[(8, 4, 11), float64],) {
  %749 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %750 = %749.2;
  (%750,)
}

def @func_6067() -> Tensor[(8, 4, 11), float64] {
  @func_6065() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_18499() -> Tensor[(8, 4, 11), float64] {
  %752 = fn () -> Tensor[(8, 4, 11), float64] {
    %751 = @func_16375() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %751.0
  };
  %752() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_7242() -> Tensor[(8, 4, 11), float64] {
  %753 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_4352() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %753() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_6131(%var_6129: float64) -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(1, 4), float64]) {
  @func_6128(%var_6129) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(1, 4), float64]) */
}

def @func_14480() -> Tensor[(8, 4, 11), float64] {
  @func_14478() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_13274() -> (Tensor[(8, 4, 11), float64],) {
  %756 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %754 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %755 = %754.0;
    (%755,)
  };
  %756() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_1034(%var_1032: Tensor[(14, 11, 2), uint8], %var_1033: Tensor[(234), bool]) -> (Tensor[(14, 11, 2), uint8], Tensor[(14, 11, 2), float32], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(1716), uint64], Tensor[(11, 12, 13), float32], Tensor[(6, 3, 13), bool]) {
  %788 = fn (%var_996: Tensor[(14, 11, 2), uint8], %var_1020: Tensor[(234), bool]) -> (Tensor[(14, 11, 2), uint8], Tensor[(14, 11, 2), float32], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(1716), uint64], Tensor[(11, 12, 13), float32], Tensor[(6, 3, 13), bool]) {
    %757 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 11, 2), uint8] */, dtype="uint8") /* ty=Tensor[(14, 11, 2), uint8] */;
    %758 = shape_of(%var_996, dtype="int32") /* ty=Tensor[(3), int32] */;
    %759 = cast(%var_996, dtype="uint8") /* ty=Tensor[(14, 11, 2), uint8] */;
    %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %761 = cast(%var_996, dtype="float32") /* ty=Tensor[(14, 11, 2), float32] */;
    %762 = cast(%var_1020, dtype="bool") /* ty=Tensor[(234), bool] */;
    %763 = cast(%var_1020, dtype="bool") /* ty=Tensor[(234), bool] */;
    %764 = cast(meta[relay.Constant][27] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %765 = reshape(%762, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %766 = reshape(%763, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %767 = reshape(%764, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %768 = @func_593(%765, %766, %767) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
    %769 = %768.0;
    %770 = cast(%769, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
    %771 = cast(%769, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
    %772 = cast(meta[relay.Constant][27] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %773 = reshape(%770, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %774 = reshape(%771, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %775 = reshape(%772, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %776 = @func_593(%773, %774, %775) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
    %777 = cast(%769, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
    %778 = cast(%769, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
    %779 = cast(meta[relay.Constant][27] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %780 = reshape(%777, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %781 = reshape(%778, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %782 = reshape(%779, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %783 = @func_593(%780, %781, %782) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
    %784 = add(%759, %760) /* ty=Tensor[(14, 11, 2), uint8] */;
    %785 = sin(%761) /* ty=Tensor[(14, 11, 2), float32] */;
    %786 = %776.1;
    %787 = %783.0;
    (%784, %785, %769, %var_1020, meta[relay.Constant][27] /* ty=Tensor[(1716), uint64] */, %786, %787)
  };
  %788(%var_1032, %var_1033) /* ty=(Tensor[(14, 11, 2), uint8], Tensor[(14, 11, 2), float32], Tensor[(6, 3, 13), bool], Tensor[(234), bool], Tensor[(1716), uint64], Tensor[(11, 12, 13), float32], Tensor[(6, 3, 13), bool]) */
}

def @func_10586(%var_10581: Tensor[(11, 1, 14), float32]) -> (Tensor[(11, 7, 14), bool],) {
  %789 = cast(%var_10581, dtype="bool") /* ty=Tensor[(11, 1, 14), bool] */;
  %790 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 7, 14), float32] */, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %791 = less_equal(%789, %790) /* ty=Tensor[(11, 7, 14), bool] */;
  (%791,)
}

def @func_15851() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(234), bool], Tensor[(112), float64], Tensor[(858, 2), uint64]) {
  %792 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %793 = @func_8674() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %794 = cast(meta[relay.Constant][29] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %795 = cast(meta[relay.Constant][30] /* ty=Tensor[(858, 2), uint64] */, dtype="uint64") /* ty=Tensor[(858, 2), uint64] */;
  %796 = reshape(%794, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %797 = reshape(%795, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %798 = @func_866(%796, %797) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
  %799 = %792.0;
  %800 = %793.1;
  %801 = %798.2;
  (%799, %800, %801, meta[relay.Constant][29] /* ty=Tensor[(112), float64] */, meta[relay.Constant][30] /* ty=Tensor[(858, 2), uint64] */)
}

def @func_3052() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) {
  %802 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %803 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
  %804 = %803.0;
  %805 = cast(%804, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %806 = acos(%805) /* ty=Tensor[(11, 156), float32] */;
  %807 = cast(%804, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(2), int32] */;
  %809 = cast(%806, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %811 = equal(%809, %810) /* ty=Tensor[(11, 156), bool] */;
  %812 = cast(%806, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(2), int32] */;
  %814 = cast(%811, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %816 = cast(%811, dtype="uint8") /* ty=Tensor[(11, 156), uint8] */;
  %817 = shape_of(%806, dtype="int32") /* ty=Tensor[(2), int32] */;
  %818 = cast(%806, dtype="uint8") /* ty=Tensor[(11, 156), uint8] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %820 = multiply(%818, %819) /* ty=Tensor[(11, 156), uint8] */;
  %821 = cast(%820, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %822 = shape_of(%811, dtype="int32") /* ty=Tensor[(2), int32] */;
  %823 = cast(%811, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %825 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  %826 = %802.0;
  %827 = logical_or(%814, %815) /* ty=Tensor[(11, 156), bool] */;
  %828 = divide(%823, %824) /* ty=Tensor[(11, 156), float64] */;
  (%825, %826, %827, %828)
}

def @func_6106() -> (Tensor[(11, 156), int8],) {
  %841 = fn () -> (Tensor[(11, 156), int8],) {
    %829 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
    %830 = %829.1;
    %831 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 156), float64] */, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
    %832 = shape_of(%830, dtype="int32") /* ty=Tensor[(2), int32] */;
    %833 = cast(%830, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
    %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %835 = logical_xor(%833, %834) /* ty=Tensor[(11, 156), uint16] */;
    %836 = cast(%830, dtype="int8") /* ty=Tensor[(11, 156), int8] */;
    %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(2), int32] */;
    %838 = cast(%835, dtype="int8") /* ty=Tensor[(11, 156), int8] */;
    %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %840 = bitwise_xor(%838, %839) /* ty=Tensor[(11, 156), int8] */;
    (%840,)
  };
  %841() /* ty=(Tensor[(11, 156), int8],) */
}

def @func_4984() -> Tensor[(8, 4, 11), float64] {
  %843 = fn () -> Tensor[(8, 4, 11), float64] {
    %842 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %842.0
  };
  %843() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_7452(%var_7450: uint32, %var_7451: Tensor[(14, 6, 12), uint32]) -> (Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) {
  @func_7448(%var_7450, %var_7451) /* ty=(Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) */
}

def @func_11550() -> (Tensor[(8, 4, 11), float64],) {
  @func_11548() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_6383() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %844 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %845 = @func_5630() /* ty=Tensor[(8, 4, 11), float64] */;
  %846 = %844.0;
  (%845, %846)
}

def @func_8675() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %850 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %847 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
    %848 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
    %849 = %847.0;
    (%848, %849)
  };
  %850() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_12140(%var_12138: Tensor[(3, 16, 9), float32], %var_12139: Tensor[(3, 16, 9), float32]) -> Tensor[(3, 16, 9), float32] {
  @func_12136(%var_12138, %var_12139) /* ty=Tensor[(3, 16, 9), float32] */
}

def @func_11508() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %854 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %851 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %852 = %851.2;
    %853 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
    (%852, %853)
  };
  %854() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_4723() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %855 = @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %856 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
  %857 = %855.0;
  (%856, %857)
}

def @func_3580() -> (Tensor[(112), float64], Tensor[(8, 14, 10), float64]) {
  %858 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %859 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %860 = %858.2;
  %861 = %859.3;
  (%860, %861)
}

def @func_6905() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) {
  %862 = @func_3580() /* ty=(Tensor[(112), float64], Tensor[(8, 14, 10), float64]) */;
  %863 = @func_5051() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %864 = %862.1;
  %865 = %863.0;
  (%864, %865)
}

def @func_10745() -> Tensor[(8, 4, 11), float64] {
  %866 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %866.0
}

def @func_10307(%var_10305: Tensor[(13, 21), bool], %var_10306: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) {
  %881 = fn (%var_10301: Tensor[(13, 21), bool], %var_10302: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) {
    %867 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %868 = cast(meta[relay.Constant][32] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %869 = reshape(%868, newshape=[1, 1716]) /* ty=Tensor[(1, 1716), uint64] */;
    %870 = @func_1709(%869) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) */;
    %871 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
    %872 = cast(%var_10301, dtype="bool") /* ty=Tensor[(13, 21), bool] */;
    %873 = cast(%var_10302, dtype="float64") /* ty=Tensor[(112), float64] */;
    %874 = reshape(%872, newshape=[273]) /* ty=Tensor[(273), bool] */;
    %875 = reshape(%873, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %876 = @func_5520(%874, %875) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) */;
    %877 = %867.1;
    %878 = %870.2;
    %879 = %871.0;
    %880 = %876.2;
    (%877, %878, meta[relay.Constant][32] /* ty=Tensor[(1716), uint64] */, %879, %880, %var_10301, %var_10302)
  };
  %881(%var_10305, %var_10306) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */
}

def @func_1769() -> Tensor[(8, 4, 11), float64] {
  @func_1767() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8073() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_8071() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_12315() -> (Tensor[(8, 4, 11), float64],) {
  %884 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %882 = @func_9986() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %883 = %882.2;
    (%883,)
  };
  %884() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_12420() -> (Tensor[(8, 4, 11), float64],) {
  %885 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %886 = %885.0;
  (%886,)
}

def @func_13851() -> Tensor[(5, 16, 11), float32] {
  @func_12853() /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_2822() -> (Tensor[(8, 4, 11), float64],) {
  %887 = @func_2702() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %888 = %887.2;
  (%888,)
}

def @func_3130(%var_3124: Tensor[(8, 4, 11), float64]) -> Tensor[(8, 4, 11), float64] {
  %889 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %890 = cast(%var_3124, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %891 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(%889, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%892, %893) /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_6741() -> (Tensor[(8, 4, 11), float64],) {
  %895 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %894 = @func_6055() /* ty=Tensor[(8, 4, 11), float64] */;
    (%894,)
  };
  %895() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_17099() -> Tensor[(8, 4, 11), float64] {
  @func_8769() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_3670() -> Tensor[(8, 4, 11), float64] {
  %897 = fn () -> Tensor[(8, 4, 11), float64] {
    %896 = @func_3422() /* ty=(Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %896.1
  };
  %897() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_18399() -> (Tensor[(8, 4, 11), float64], Tensor[(550, ?), uint64], Tensor[(8, 4, 11), float64], Tensor[(550, 273), bool]) {
  @func_18397() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(550, ?), uint64], Tensor[(8, 4, 11), float64], Tensor[(550, 273), bool]) */
}

def @func_13900(%var_13899: Tensor[(4, 64), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(4, 4, 16), float64], Tensor[(4, 64), float64]) {
  %904 = fn (%var_13896: Tensor[(4, 64), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(4, 4, 16), float64], Tensor[(4, 64), float64]) {
    %898 = @func_9687() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
    %899 = cast(%var_13896, dtype="float64") /* ty=Tensor[(4, 64), float64] */;
    %900 = reshape(%899, newshape=[4, 4, 16]) /* ty=Tensor[(4, 4, 16), float64] */;
    %901 = @func_10344(%900) /* ty=(Tensor[(4, 4, 16), float64], Tensor[(8, 4, 11), float64]) */;
    %902 = %898.2;
    %903 = %901.0;
    (%902, %903, %var_13896)
  };
  %904(%var_13899) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(4, 4, 16), float64], Tensor[(4, 64), float64]) */
}

def @func_16518() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_16516() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_6152() -> (Tensor[(8, 4, 11), float64],) {
  %907 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %905 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
    %906 = %905.4;
    (%906,)
  };
  %907() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_14360() -> (Tensor[(8, 4, 11), float64],) {
  @func_14358() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_13328() -> (Tensor[(11, 156), float32],) {
  %908 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
  %909 = %908.0;
  %910 = cast(%909, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %911 = asinh(%910) /* ty=Tensor[(11, 156), float32] */;
  (%911,)
}

def @func_12743() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_12741() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_20152() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %912 = @func_8044() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %913 = @func_4620() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %914 = %912.0;
  %915 = %913.0;
  (%914, %915)
}

def @func_9778() -> Tensor[(8, 4, 11), float64] {
  @func_9776() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_17149(%var_17147: Tensor[(6, 14, 12), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(6, 14, 12), bool], Tensor[(6, 14, 12), bool]) {
  @func_17146(%var_17147) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(6, 14, 12), bool], Tensor[(6, 14, 12), bool]) */
}

def @func_18640(%var_18629: float64) -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(11, 156), float64], Tensor[(5, 16, 11), float32]) {
  %916 = cast(%var_18629, dtype="float64") /* ty=float64 */;
  %917 = reshape(%916, newshape=[]) /* ty=float64 */;
  %918 = @func_6128(%917) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(1, 4), float64]) */;
  %919 = @func_13328() /* ty=(Tensor[(11, 156), float32],) */;
  %920 = %919.0;
  %921 = cast(%920, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %922 = @func_7505() /* ty=Tensor[(8, 4, 11), float64] */;
  %923 = %918.1;
  %924 = log2(%921) /* ty=Tensor[(11, 156), float64] */;
  %925 = @func_13851() /* ty=Tensor[(5, 16, 11), float32] */;
  (%922, %923, %var_18629, %924, %925)
}

def @func_19858() -> Tensor[(8, 4, 11), float64] {
  %927 = fn () -> Tensor[(8, 4, 11), float64] {
    %926 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %926.0
  };
  %927() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_17698() -> Tensor[(11, 156), uint64] {
  @func_11371() /* ty=Tensor[(11, 156), uint64] */
}

def @func_2338() -> (Tensor[(8, 4, 11), float64],) {
  @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_5676(%var_5675: Tensor[(1120), float64]) -> (Tensor[(11, 156), bool], Tensor[(13, 7, 4), float64], Tensor[(1120), float64]) {
  %934 = fn (%var_5672: Tensor[(1120), float64]) -> (Tensor[(11, 156), bool], Tensor[(13, 7, 4), float64], Tensor[(1120), float64]) {
    %928 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
    %929 = cast(%var_5672, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %930 = reshape(%929, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float64] */;
    %931 = @func_1916(%930) /* ty=(Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) */;
    %932 = %928.2;
    %933 = %931.1;
    (%932, %933, %var_5672)
  };
  %934(%var_5675) /* ty=(Tensor[(11, 156), bool], Tensor[(13, 7, 4), float64], Tensor[(1120), float64]) */
}

def @func_19444(%var_19442: Tensor[(234), bool], %var_19443: Tensor[(1, 1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(234), bool], Tensor[(1, 1716), uint64]) {
  %943 = fn (%var_19428: Tensor[(234), bool], %var_19429: Tensor[(1, 1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(234), bool], Tensor[(1, 1716), uint64]) {
    %935 = cast(%var_19428, dtype="bool") /* ty=Tensor[(234), bool] */;
    %936 = cast(%var_19429, dtype="uint64") /* ty=Tensor[(1, 1716), uint64] */;
    %937 = reshape(%935, newshape=[234]) /* ty=Tensor[(234), bool] */;
    %938 = reshape(%936, newshape=[286, 6]) /* ty=Tensor[(286, 6), uint64] */;
    %939 = @func_10987(%937, %938) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(286, 6), uint64], Tensor[(11, 156), float32]) */;
    %940 = @func_13399() /* ty=Tensor[(8, 4, 11), float64] */;
    %941 = @func_8312() /* ty=Tensor[(8, 4, 11), float64] */;
    %942 = %939.5;
    (%940, %941, %942, %var_19428, %var_19429)
  };
  %943(%var_19442, %var_19443) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float32], Tensor[(234), bool], Tensor[(1, 1716), uint64]) */
}

def @func_12227(%var_12226: Tensor[(66), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), float64], Tensor[(66), uint64]) {
  %952 = fn (%var_12215: Tensor[(66), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), float64], Tensor[(66), uint64]) {
    %944 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
    %945 = cast(%var_12215, dtype="uint64") /* ty=Tensor[(66), uint64] */;
    %946 = cast(%var_12215, dtype="uint64") /* ty=Tensor[(66), uint64] */;
    %947 = reshape(%945, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
    %948 = reshape(%946, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
    %949 = @func_12177(%947, %948) /* ty=(Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) */;
    %950 = %944.2;
    %951 = %949.1;
    (%950, %951, %var_12215)
  };
  %952(%var_12226) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), float64], Tensor[(66), uint64]) */
}

def @func_9986() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %953 = @func_9595() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %954 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %955 = @func_7241() /* ty=Tensor[(8, 4, 11), float64] */;
  %956 = %953.1;
  %957 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  %958 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
  %959 = %954.2;
  (%955, %956, %957, %958, %959)
}

def @func_19963() -> Tensor[(8, 4, 11), float64] {
  %961 = fn () -> Tensor[(8, 4, 11), float64] {
    %960 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %960.0
  };
  %961() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_16877() -> (Tensor[(1, 3, 16), float64], Tensor[(11, 156), float64]) {
  %967 = fn () -> (Tensor[(1, 3, 16), float64], Tensor[(11, 156), float64]) {
    %962 = @func_12889() /* ty=(Tensor[(1, 3, 16), float64],) */;
    %963 = @func_8562() /* ty=Tensor[(11, 156), bool] */;
    %964 = cast(%963, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
    %965 = %962.0;
    %966 = exp(%964) /* ty=Tensor[(11, 156), float64] */;
    (%965, %966)
  };
  %967() /* ty=(Tensor[(1, 3, 16), float64], Tensor[(11, 156), float64]) */
}

def @func_17146(%var_17109: Tensor[(6, 14, 12), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(6, 14, 12), bool], Tensor[(6, 14, 12), bool]) {
  %968 = @func_7032() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %969 = cast(%var_17109, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %970 = sin(%969) /* ty=Tensor[(6, 14, 12), float32] */;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %972 = log(%971) /* ty=Tensor[(6, 14, 12), float32] */;
  %973 = cast(%var_17109, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%972, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %977 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 14, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %978 = shape_of(%970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%970, dtype="bool") /* ty=Tensor[(6, 14, 12), bool] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %981 = %968.0;
  %982 = less_equal(%975, %976) /* ty=Tensor[(6, 14, 12), bool] */;
  %983 = greater(%979, %980) /* ty=Tensor[(6, 14, 12), bool] */;
  (%981, %982, %983)
}

def @func_15506(%var_15504: Tensor[(8, 9, 1), bool], %var_15505: Tensor[(8, 9, 16), bool]) -> Tensor[(8, 9, 16), bool] {
  @func_15502(%var_15504, %var_15505) /* ty=Tensor[(8, 9, 16), bool] */
}

def @func_13400() -> Tensor[(8, 4, 11), float64] {
  %985 = fn () -> Tensor[(8, 4, 11), float64] {
    %984 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %984.0
  };
  %985() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_20154() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_20152() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_5231() -> Tensor[(8, 4, 11), float64] {
  %986 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %986.0
}

def @func_9092() -> Tensor[(8, 4, 11), float64] {
  %987 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_7241() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %987() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_18184() -> (Tensor[(8, 4, 11), float64],) {
  %990 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %988 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %989 = %988.0;
    (%989,)
  };
  %990() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_14447() -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  @func_14445() /* ty=(Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */
}

def @func_6670() -> Tensor[(8, 4, 11), float64] {
  %991 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %991.0
}

def @func_4352() -> Tensor[(8, 4, 11), float64] {
  %992 = @func_3884() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %992.1
}

def @func_12136(%var_12125: Tensor[(3, 16, 9), float32], %var_12126: Tensor[(3, 16, 9), float32]) -> Tensor[(3, 16, 9), float32] {
  %993 = cast(%var_12126, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %994 = shape_of(%var_12125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%var_12125, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %997 = less_equal(%995, %996) /* ty=Tensor[(3, 16, 9), bool] */;
  %998 = cast(%997, dtype="float32") /* ty=Tensor[(3, 16, 9), float32] */;
  atan(%998) /* ty=Tensor[(3, 16, 9), float32] */
}

def @func_2209() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %999 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1000 = %999.0;
  %1001 = cast(%1000, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %1002 = reshape(%1001, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %1003 = @func_1521(%1002) /* ty=(Tensor[(8, 4, 11), int64], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64], Tensor[(13, 7, 4), float64], Tensor[(364), float32], Tensor[(13, 7, 4), float64]) */;
  %1004 = %1003.2;
  (%1000, %1004)
}

def @func_19576() -> (Tensor[(8, 4, 11), float64],) {
  %1007 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1005 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1006 = %1005.0;
    (%1006,)
  };
  %1007() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_8771() -> Tensor[(8, 4, 11), float64] {
  @func_8769() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_16007(%var_16006: Tensor[(1040), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1040), uint64]) {
  %1016 = fn (%var_16002: Tensor[(1040), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1040), uint64]) {
    %1008 = @func_12360() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %1009 = cast(%var_16002, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
    %1010 = cast(%var_16002, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
    %1011 = reshape(%1009, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint64] */;
    %1012 = reshape(%1010, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint64] */;
    %1013 = @func_7714(%1011, %1012) /* ty=(Tensor[(10, 13, 8), uint64], Tensor[(10, 13, 8), float64], Tensor[(8, 4, 11), float64]) */;
    %1014 = %1008.0;
    %1015 = %1013.2;
    (%1014, %1015, %var_16002)
  };
  %1016(%var_16006) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(1040), uint64]) */
}

def @func_597(%var_594: Tensor[(6, 3, 13), bool], %var_595: Tensor[(6, 3, 13), bool], %var_596: Tensor[(1716), uint64]) -> (Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) {
  %1028 = fn (%var_563: Tensor[(6, 3, 13), bool], %var_564: Tensor[(6, 3, 13), bool], %var_573: Tensor[(1716), uint64]) -> (Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) {
    %1017 = cast(%var_564, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
    %1018 = shape_of(%var_563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1019 = cast(%var_563, dtype="bool") /* ty=Tensor[(6, 3, 13), bool] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1021 = cast(%var_573, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %1022 = cast(%var_573, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %1023 = reshape(%1021, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %1024 = reshape(%1022, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %1025 = @func_54(%1023, %1024) /* ty=(Tensor[(11, 12, 13), float32],) */;
    %1026 = logical_and(%1019, %1020) /* ty=Tensor[(6, 3, 13), bool] */;
    %1027 = %1025.0;
    (%1026, %1027, %var_573)
  };
  %1028(%var_594, %var_595, %var_596) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */
}

def @func_3162() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1029 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  %1030 = cast(%1029, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %1031 = reshape(%1030, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), float64] */;
  %1032 = @func_3130(%1031) /* ty=Tensor[(8, 4, 11), float64] */;
  (%1029, %1032)
}

def @func_4474() -> (Tensor[(8, 4, 11), float64],) {
  @func_4472() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_18982() -> Tensor[(8, 4, 11), float64] {
  @func_18980() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_5575() -> Tensor[(8, 4, 11), float64] {
  @func_5573() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_3554() -> (Tensor[(8, 4, 11), float64],) {
  %1035 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1033 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %1034 = %1033.0;
    (%1034,)
  };
  %1035() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_1458() -> (Tensor[(8, 4, 11), float64],) {
  @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_17909() -> (Tensor[(8, 4, 11), float64],) {
  %1038 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1036 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1037 = %1036.1;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_20435() -> Tensor[(8, 4, 11), float64] {
  %1040 = fn () -> Tensor[(8, 4, 11), float64] {
    %1039 = @func_8422() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 3, 16), float64]) */;
    %1039.0
  };
  %1040() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_6934() -> (Tensor[(8, 4, 11), float64],) {
  %1043 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1041 = @func_1950() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1042 = %1041.0;
    (%1042,)
  };
  %1043() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_16672() -> (Tensor[(8, 4, 11), float64],) {
  @func_16670() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_8044() -> (Tensor[(8, 4, 11), float64],) {
  %1044 = @func_3959() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1045 = %1044.2;
  (%1045,)
}

def @func_5886(%var_5839: Tensor[(3, 12), float32], %var_5875: Tensor[(273), bool]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(?, 4, 9), bool], Tensor[(3, 12), float32], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(1, 8, 5), float64], Tensor[(40), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64]) {
  %1046 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %1047 = cast(%var_5839, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
  %1048 = reshape(%1047, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), float32] */;
  %1049 = @func_2904(%1048) /* ty=(Tensor[(?, 4, 9), bool],) */;
  %1050 = cast(meta[relay.Constant][34] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %1051 = cast(meta[relay.Constant][34] /* ty=Tensor[(234), bool] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %1052 = %1046.1;
  %1053 = cast(%1052, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
  %1054 = reshape(%1050, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %1055 = reshape(%1051, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
  %1056 = reshape(%1053, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %1057 = @func_593(%1054, %1055, %1056) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
  %1058 = cast(meta[relay.Constant][35] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %1059 = reshape(%1058, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %1060 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1061 = cast(%var_5875, dtype="bool") /* ty=Tensor[(273), bool] */;
  %1062 = cast(meta[relay.Constant][36] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1063 = cast(%var_5875, dtype="int64") /* ty=Tensor[(273), int64] */;
  %1064 = reshape(%1061, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), bool] */;
  %1065 = reshape(%1062, newshape=[4, 28]) /* ty=Tensor[(4, 28), float64] */;
  %1066 = reshape(%1063, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %1067 = @func_2532(%1064, %1065, %1066) /* ty=(Tensor[(13, 7, 3), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), int8], Tensor[(13, 7, 3), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(4, 28), float64], Tensor[(1716), uint64], Tensor[(13, 7, 3), uint8], Tensor[(8, 4, 11), float64]) */;
  %1068 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
  %1069 = %1049.0;
  %1070 = %1057.1;
  %1071 = @func_3898(%1059) /* ty=Tensor[(1, 8, 5), float64] */;
  %1072 = %1060.0;
  %1073 = %1067.9;
  (%1068, %1052, %1069, %var_5839, %1070, meta[relay.Constant][34] /* ty=Tensor[(234), bool] */, %1071, meta[relay.Constant][35] /* ty=Tensor[(40), float64] */, %1072, %1073, %var_5875, meta[relay.Constant][36] /* ty=Tensor[(112), float64] */)
}

def @func_16770() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(5, 16, 11), float32]) {
  @func_16768() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(5, 16, 11), float32]) */
}

def @func_13512() -> (Tensor[(8, 4, 11), float64],) {
  %1074 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1074,)
}

def @func_7677() -> Tensor[(8, 4, 11), float64] {
  %1075 = @func_4174() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1075.0
}

def @func_13210() -> Tensor[(8, 4, 11), float64] {
  %1077 = fn () -> Tensor[(8, 4, 11), float64] {
    %1076 = @func_12908() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1076.0
  };
  %1077() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_12020() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1084 = fn () -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1078 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
    %1079 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1080 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1081 = %1078.3;
    %1082 = %1079.0;
    %1083 = %1080.0;
    (%1081, %1082, %1083)
  };
  %1084() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_15987(%var_15985: Tensor[(1, 8, 4), uint32], %var_15986: Tensor[(9, 8, 4), uint32]) -> (Tensor[(9, 8, 4), bool],) {
  %1088 = fn (%var_15979: Tensor[(1, 8, 4), uint32], %var_15980: Tensor[(9, 8, 4), uint32]) -> (Tensor[(9, 8, 4), bool],) {
    %1085 = cast(%var_15979, dtype="bool") /* ty=Tensor[(1, 8, 4), bool] */;
    %1086 = cast(%var_15980, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
    %1087 = greater(%1085, %1086) /* ty=Tensor[(9, 8, 4), bool] */;
    (%1087,)
  };
  %1088(%var_15985, %var_15986) /* ty=(Tensor[(9, 8, 4), bool],) */
}

def @func_12695() -> Tensor[(8, 4, 11), float64] {
  %1090 = fn () -> Tensor[(8, 4, 11), float64] {
    %1089 = @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1089.0
  };
  %1090() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_3164() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_3162() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_10990(%var_10988: Tensor[(234), bool], %var_10989: Tensor[(286, 6), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(286, 6), uint64], Tensor[(11, 156), float32]) {
  %1104 = fn (%var_10968: Tensor[(234), bool], %var_10969: Tensor[(286, 6), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(286, 6), uint64], Tensor[(11, 156), float32]) {
    %1091 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1092 = cast(%var_10968, dtype="bool") /* ty=Tensor[(234), bool] */;
    %1093 = cast(%var_10968, dtype="bool") /* ty=Tensor[(234), bool] */;
    %1094 = cast(%var_10969, dtype="uint64") /* ty=Tensor[(286, 6), uint64] */;
    %1095 = reshape(%1092, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %1096 = reshape(%1093, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %1097 = reshape(%1094, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %1098 = @func_593(%1095, %1096, %1097) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
    %1099 = @func_8752() /* ty=(Tensor[(11, 156), float32],) */;
    %1100 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
    %1101 = %1091.0;
    %1102 = %1098.1;
    %1103 = %1099.0;
    (%1100, %1101, %1102, %var_10968, %var_10969, %1103)
  };
  %1104(%var_10988, %var_10989) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(286, 6), uint64], Tensor[(11, 156), float32]) */
}

def @func_14445() -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) {
  %1105 = @func_8112() /* ty=(Tensor[(8, 4, 11), float32],) */;
  %1106 = @func_9986() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1107 = %1105.0;
  %1108 = %1106.1;
  (%1107, %1108)
}

def @func_9432() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1109 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1110 = @func_4723() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1111 = %1109.0;
  %1112 = %1110.1;
  (%1111, %1112)
}

def @func_11677(%var_11675: float64, %var_11676: Tensor[(6, 15, 7), float64]) -> (Tensor[(6, 15, 7), float64],) {
  %1116 = fn (%var_11654: float64, %var_11655: Tensor[(6, 15, 7), float64]) -> (Tensor[(6, 15, 7), float64],) {
    %1113 = cast(%var_11654, dtype="float64") /* ty=float64 */;
    %1114 = cast(%var_11655, dtype="float64") /* ty=Tensor[(6, 15, 7), float64] */;
    %1115 = mod(%1113, %1114) /* ty=Tensor[(6, 15, 7), float64] */;
    (%1115,)
  };
  %1116(%var_11675, %var_11676) /* ty=(Tensor[(6, 15, 7), float64],) */
}

def @func_17101() -> Tensor[(8, 4, 11), float64] {
  @func_17099() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_15575() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) {
  %1122 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) {
    %1117 = @func_11838() /* ty=(Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) */;
    %1118 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
    %1119 = @func_13010() /* ty=Tensor[(8, 4, 11), float32] */;
    %1120 = %1117.0;
    %1121 = @func_13756() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1118, %1119, %1120, %1121)
  };
  %1122() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_20336() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_20334() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_19949() -> (Tensor[(8, 4, 11), float64],) {
  @func_19947() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_9126() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_9124() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_20241() -> (Tensor[(8, 4, 11), float64],) {
  @func_20239() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_13629() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1126 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1123 = @func_11507() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1124 = @func_8254() /* ty=Tensor[(8, 4, 11), float64] */;
    %1125 = %1123.1;
    (%1124, %1125)
  };
  %1126() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_1919(%var_1917: Tensor[(8, 14, 10), float64]) -> (Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) {
  @func_1916(%var_1917) /* ty=(Tensor[(8, 14, 10), float64], Tensor[(13, 7, 4), float64], Tensor[(364), float64]) */
}

def @func_9776() -> Tensor[(8, 4, 11), float64] {
  %1127 = @func_6933() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1127.0
}

def @func_6945(%var_6937: bool, %var_6938: Tensor[(15, 1), bool]) -> Tensor[(15, 1), bool] {
  %1128 = cast(%var_6937, dtype="bool") /* ty=bool */;
  %1129 = cast(%var_6938, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
  logical_or(%1128, %1129) /* ty=Tensor[(15, 1), bool] */
}

def @func_8784() -> Tensor[(8, 4, 11), float64] {
  %1130 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_5231() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %1130() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8071() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1131 = @func_4685() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1132 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
  %1133 = %1131.0;
  (%1132, %1133)
}

def @func_5666() -> (Tensor[(8, 4, 11), float64],) {
  %1136 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1134 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1135 = %1134.2;
    (%1135,)
  };
  %1136() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_14185() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  @func_14183() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */
}

def @func_4902() -> (Tensor[(1, 3, 16), float64],) {
  %1139 = fn () -> (Tensor[(1, 3, 16), float64],) {
    %1137 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 3, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
    %1138 = sinh(%1137) /* ty=Tensor[(1, 3, 16), float64] */;
    (%1138,)
  };
  %1139() /* ty=(Tensor[(1, 3, 16), float64],) */
}

def @func_3209(%var_3208: Tensor[(11, 156), uint64]) -> (Tensor[(8, 4, 11), float32], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64]) {
  %1148 = fn (%var_3205: Tensor[(11, 156), uint64]) -> (Tensor[(8, 4, 11), float32], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64]) {
    %1140 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1141 = %1140.0;
    %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
    %1143 = cast(%var_3205, dtype="uint64") /* ty=Tensor[(11, 156), uint64] */;
    %1144 = reshape(%1143, newshape=[1, 1716]) /* ty=Tensor[(1, 1716), uint64] */;
    %1145 = @func_1709(%1144) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) */;
    %1146 = log2(%1142) /* ty=Tensor[(8, 4, 11), float32] */;
    %1147 = %1145.1;
    (%1146, %1147, %var_3205)
  };
  %1148(%var_3208) /* ty=(Tensor[(8, 4, 11), float32], Tensor[(11, 12, 13), float32], Tensor[(11, 156), uint64]) */
}

def @func_10691() -> (Tensor[(8, 4, 11), float64],) {
  @func_10689() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_14596() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1149 = @func_8071() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1150 = @func_12908() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1151 = %1149.1;
  %1152 = %1150.0;
  (%1151, %1152)
}

def @func_10689() -> (Tensor[(8, 4, 11), float64],) {
  %1153 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1153,)
}

def @func_15162(%var_15137: Tensor[(9, 4), float32]) -> (Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(9, 4), float32], Tensor[(273, 1), bool]) {
  %1154 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1155 = cast(%var_15137, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
  %1156 = cast(meta[relay.Constant][38] /* ty=Tensor[(273, 1), bool] */, dtype="bool") /* ty=Tensor[(273, 1), bool] */;
  %1157 = reshape(%1155, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
  %1158 = reshape(%1156, newshape=[273]) /* ty=Tensor[(273), bool] */;
  %1159 = @func_5886(%1157, %1158) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(?, 4, 9), bool], Tensor[(3, 12), float32], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(1, 8, 5), float64], Tensor[(40), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64]) */;
  %1160 = @func_12057() /* ty=Tensor[(8, 4, 11), float32] */;
  %1161 = %1154.0;
  %1162 = %1159.10;
  (%1160, %1161, %1162, %var_15137, meta[relay.Constant][38] /* ty=Tensor[(273, 1), bool] */)
}

def @func_4284() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_11803(%var_11802: Tensor[(1008), uint32]) -> (Tensor[(8, 4, 11), float64], Tensor[(14, 6, 12), bool], uint32, Tensor[(1008), uint32]) {
  %1171 = fn (%var_11786: Tensor[(1008), uint32]) -> (Tensor[(8, 4, 11), float64], Tensor[(14, 6, 12), bool], uint32, Tensor[(1008), uint32]) {
    %1163 = @func_2614() /* ty=(Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */;
    %1164 = cast(meta[relay.Constant][39] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1165 = cast(%var_11786, dtype="uint32") /* ty=Tensor[(1008), uint32] */;
    %1166 = reshape(%1164, newshape=[]) /* ty=uint32 */;
    %1167 = reshape(%1165, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), uint32] */;
    %1168 = @func_7448(%1166, %1167) /* ty=(Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) */;
    %1169 = %1163.1;
    %1170 = %1168.1;
    (%1169, %1170, meta[relay.Constant][39] /* ty=uint32 */, %var_11786)
  };
  %1171(%var_11802) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(14, 6, 12), bool], uint32, Tensor[(1008), uint32]) */
}

def @func_20411() -> Tensor[(8, 4, 11), float64] {
  %1172 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_12694() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %1172() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_19947() -> (Tensor[(8, 4, 11), float64],) {
  %1173 = @func_8131() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1174 = %1173.0;
  (%1174,)
}

def @func_6006() -> (Tensor[(8, 4, 11), float64],) {
  %1177 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1175 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1176 = %1175.0;
    (%1176,)
  };
  %1177() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_19959() -> (Tensor[(8, 4, 11), float64],) {
  %1180 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1178 = @func_14321() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1179 = %1178.1;
    (%1179,)
  };
  %1180() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_12057() -> Tensor[(8, 4, 11), float32] {
  %1181 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %1181.2
}

def @func_4685() -> (Tensor[(8, 4, 11), float64],) {
  %1182 = @func_2336() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1183 = %1182.0;
  (%1183,)
}

def @func_12112() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1189 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1184 = @func_11507() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1185 = @func_3987() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
    %1186 = %1184.1;
    %1187 = %1185.0;
    %1188 = @func_4983() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1186, %1187, %1188)
  };
  %1189() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_17412(%var_17410: Tensor[(1120), float64], %var_17411: Tensor[(858, 2), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(1120), float64], Tensor[(858, 2), float64]) {
  %1200 = fn (%var_17391: Tensor[(1120), float64], %var_17392: Tensor[(858, 2), float32]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(1120), float64], Tensor[(858, 2), float64]) {
    %1190 = @func_6818() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1191 = cast(%var_17391, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %1192 = cast(%var_17392, dtype="float32") /* ty=Tensor[(858, 2), float32] */;
    %1193 = reshape(%1191, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float64] */;
    %1194 = reshape(%1192, newshape=[11, 156]) /* ty=Tensor[(11, 156), float32] */;
    %1195 = @func_4885(%1193, %1194) /* ty=(Tensor[(364), float64], Tensor[(8, 14, 10), bool], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
    %1196 = cast(%var_17392, dtype="float64") /* ty=Tensor[(858, 2), float64] */;
    %1197 = %1190.0;
    %1198 = %1195.5;
    %1199 = erf(%1196) /* ty=Tensor[(858, 2), float64] */;
    (%1197, %1198, %var_17391, %1199)
  };
  %1200(%var_17410, %var_17411) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(1120), float64], Tensor[(858, 2), float64]) */
}

def @func_11371() -> Tensor[(11, 156), uint64] {
  @func_8515() /* ty=Tensor[(11, 156), uint64] */
}

def @func_14358() -> (Tensor[(8, 4, 11), float64],) {
  %1201 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1201,)
}

def @func_2036() -> Tensor[(8, 4, 11), float64] {
  %1203 = fn () -> Tensor[(8, 4, 11), float64] {
    %1202 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1202.0
  };
  %1203() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_2006(%var_1997: Tensor[(8, 4, 11), float64]) -> (Tensor[(8, 4, 11), float32],) {
  %1204 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1205 = %1204.0;
  %1206 = cast(%var_1997, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  %1207 = shape_of(%1205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(%1205, dtype="float32") /* ty=Tensor[(8, 4, 11), float32] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1210 = divide(%1208, %1209) /* ty=Tensor[(8, 4, 11), float32] */;
  (%1210,)
}

def @func_8823() -> Tensor[(8, 4, 11), float64] {
  @func_2035() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_3080() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) {
  %1211 = cast(meta[relay.Constant][40] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1212 = cast(meta[relay.Constant][41] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %1213 = reshape(%1211, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %1214 = reshape(%1212, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %1215 = @func_1558(%1213, %1214) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) */;
  %1216 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %1217 = @func_1767() /* ty=Tensor[(8, 4, 11), float64] */;
  %1218 = %1215.0;
  %1219 = %1216.3;
  (%1217, %1218, meta[relay.Constant][40] /* ty=Tensor[(112), float64] */, meta[relay.Constant][41] /* ty=Tensor[(1716), uint64] */, %1219)
}

def @func_15502(%var_15490: Tensor[(8, 9, 1), bool], %var_15491: Tensor[(8, 9, 16), bool]) -> Tensor[(8, 9, 16), bool] {
  %1220 = cast(%var_15490, dtype="bool") /* ty=Tensor[(8, 9, 1), bool] */;
  %1221 = cast(%var_15491, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
  logical_and(%1220, %1221) /* ty=Tensor[(8, 9, 16), bool] */
}

def @func_3422() -> (Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1222 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %1223 = @func_2761() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1224 = %1222.4;
  %1225 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %1226 = %1223.0;
  (%1224, %1225, %1226)
}

def @func_15332() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1227 = @func_14596() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1228 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1229 = @func_12420() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1230 = @func_2926() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1231 = %1227.1;
  %1232 = @func_5215() /* ty=Tensor[(8, 4, 11), float64] */;
  %1233 = %1228.0;
  %1234 = %1229.0;
  %1235 = %1230.0;
  (%1231, %1232, %1233, %1234, %1235)
}

def @func_9312() -> (Tensor[(8, 4, 11), float64],) {
  %1237 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1236 = @func_7307() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1236,)
  };
  %1237() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_6563(%var_6561: Tensor[(56, 2), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) {
  @func_6560(%var_6561) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) */
}

def @func_8658() -> (Tensor[(8, 4, 11), float64],) {
  @func_8656() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_6056() -> Tensor[(8, 4, 11), float64] {
  %1239 = fn () -> Tensor[(8, 4, 11), float64] {
    %1238 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %1238.0
  };
  %1239() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_7342() -> (Tensor[(8, 4, 11), float64],) {
  %1240 = @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1241 = %1240.0;
  (%1241,)
}

def @func_13514() -> (Tensor[(8, 4, 11), float64],) {
  @func_13512() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_16375() -> (Tensor[(8, 4, 11), float64],) {
  %1242 = @func_9595() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1243 = %1242.1;
  (%1243,)
}

def @func_12817() -> (Tensor[(8, 4, 11), float64],) {
  %1244 = @func_6459() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1245 = %1244.0;
  (%1245,)
}

def @func_15074() -> (Tensor[(8, 4, 11), float64],) {
  %1248 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1246 = @func_10016() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1247 = %1246.2;
    (%1247,)
  };
  %1248() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_12853() -> Tensor[(5, 16, 11), float32] {
  %1249 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 16, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %1250 = cos(%1249) /* ty=Tensor[(5, 16, 11), float32] */;
  %1251 = cast(%1250, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  rsqrt(%1251) /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_2762() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1256 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1252 = @func_1848() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1253 = %1252.0;
    %1254 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
    %1255 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1253, %1254, %1255)
  };
  %1256() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_2614() -> (Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  %1257 = @func_2572() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
  %1258 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1259 = %1257.1;
  %1260 = %1258.0;
  (%1259, %1260)
}

def @func_13239(%var_13237: Tensor[(273), bool], %var_13238: Tensor[(56, 2), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(13, 21), bool], Tensor[(273), bool], Tensor[(56, 2), float64]) {
  %1269 = fn (%var_13233: Tensor[(273), bool], %var_13234: Tensor[(56, 2), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(13, 21), bool], Tensor[(273), bool], Tensor[(56, 2), float64]) {
    %1261 = @func_8808() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1262 = cast(%var_13233, dtype="bool") /* ty=Tensor[(273), bool] */;
    %1263 = cast(%var_13234, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
    %1264 = reshape(%1262, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
    %1265 = reshape(%1263, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %1266 = @func_10304(%1264, %1265) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
    %1267 = %1261.0;
    %1268 = %1266.5;
    (%1267, %1268, %var_13233, %var_13234)
  };
  %1269(%var_13237, %var_13238) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(13, 21), bool], Tensor[(273), bool], Tensor[(56, 2), float64]) */
}

def @func_3837() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1270 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
  %1271 = @func_1791() /* ty=Tensor[(8, 4, 11), float64] */;
  %1272 = %1270.0;
  (%1271, %1272)
}

def @func_3839() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_3837() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_10566(%var_10564: bool, %var_10565: Tensor[(15), bool]) -> (Tensor[(8, 4, 11), float64], Tensor[(15, 1), bool], bool, Tensor[(15), bool], Tensor[(8, 4, 11), float64]) {
  %1282 = fn (%var_10543: bool, %var_10544: Tensor[(15), bool]) -> (Tensor[(8, 4, 11), float64], Tensor[(15, 1), bool], bool, Tensor[(15), bool], Tensor[(8, 4, 11), float64]) {
    %1273 = @func_8674() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1274 = cast(%var_10543, dtype="bool") /* ty=bool */;
    %1275 = cast(%var_10544, dtype="bool") /* ty=Tensor[(15), bool] */;
    %1276 = reshape(%1274, newshape=[]) /* ty=bool */;
    %1277 = reshape(%1275, newshape=[15, 1]) /* ty=Tensor[(15, 1), bool] */;
    %1278 = @func_3553() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1279 = %1273.0;
    %1280 = @func_6945(%1276, %1277) /* ty=Tensor[(15, 1), bool] */;
    %1281 = %1278.0;
    (%1279, %1280, %var_10543, %var_10544, %1281)
  };
  %1282(%var_10564, %var_10565) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(15, 1), bool], bool, Tensor[(15), bool], Tensor[(8, 4, 11), float64]) */
}

def @func_6820() -> (Tensor[(8, 4, 11), float64],) {
  @func_6818() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_5022() -> (Tensor[(8, 4, 11), float64],) {
  %1284 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1283 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1283,)
  };
  %1284() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_5524(%var_5522: Tensor[(273), bool], %var_5523: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) {
  @func_5520(%var_5522, %var_5523) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_2824() -> (Tensor[(8, 4, 11), float64],) {
  @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_1456() -> (Tensor[(8, 4, 11), float64],) {
  %1285 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 1, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 11), float64] */;
  %1286 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  %1287 = power(%1285, %1286) /* ty=Tensor[(8, 4, 11), float64] */;
  (%1287,)
}

def @func_1826(%var_1824: Tensor[(1, 112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(1, 112), float64], Tensor[(1716), uint64]) {
  @func_1823(%var_1824) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(2, 4, 14), float64], Tensor[(1, 112), float64], Tensor[(1716), uint64]) */
}

def @func_13756() -> Tensor[(8, 4, 11), float64] {
  %1288 = @func_8674() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1288.1
}

def @func_18141() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(2, 16, 5), bool], Tensor[(160), uint32]) {
  %1300 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(2, 16, 5), bool], Tensor[(160), uint32]) {
    %1289 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1290 = @func_12019() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1291 = %1290.0;
    %1292 = cast(%1291, dtype="float64") /* ty=Tensor[(8, 14, 10), float64] */;
    %1293 = cast(meta[relay.Constant][45] /* ty=Tensor[(160), uint32] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
    %1294 = reshape(%1293, newshape=[2, 16, 5]) /* ty=Tensor[(2, 16, 5), uint32] */;
    %1295 = @func_4767(%1294) /* ty=(Tensor[(2, 16, 5), bool], Tensor[(8, 4, 11), float64]) */;
    %1296 = %1289.0;
    %1297 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
    %1298 = acosh(%1292) /* ty=Tensor[(8, 14, 10), float64] */;
    %1299 = %1295.0;
    (%1296, %1297, %1298, %1299, meta[relay.Constant][45] /* ty=Tensor[(160), uint32] */)
  };
  %1300() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(2, 16, 5), bool], Tensor[(160), uint32]) */
}

def @func_8256() -> Tensor[(8, 4, 11), float64] {
  @func_8254() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_4888(%var_4886: Tensor[(8, 14, 10), float64], %var_4887: Tensor[(11, 156), float32]) -> (Tensor[(364), float64], Tensor[(8, 14, 10), bool], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
  %1324 = fn (%var_4809: Tensor[(8, 14, 10), float64], %var_4831: Tensor[(11, 156), float32]) -> (Tensor[(364), float64], Tensor[(8, 14, 10), bool], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) {
    %1301 = @func_3580() /* ty=(Tensor[(112), float64], Tensor[(8, 14, 10), float64]) */;
    %1302 = %1301.1;
    %1303 = cast(%var_4809, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
    %1304 = shape_of(%1302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1305 = cast(%1302, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
    %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1307 = cast(meta[relay.Constant][46] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %1308 = reshape(%1307, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %1309 = @func_4124(%1308) /* ty=(Tensor[(13, 7, 4), float64], Tensor[(364), float64], Tensor[(11, 156), float32]) */;
    %1310 = %1309.2;
    %1311 = cast(%var_4831, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
    %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1313 = cast(%1310, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
    %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1315 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 156), float32] */, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
    %1316 = shape_of(%1310, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1317 = cast(%1310, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
    %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1319 = less(%1305, %1306) /* ty=Tensor[(8, 14, 10), bool] */;
    %1320 = less(%1313, %1314) /* ty=Tensor[(11, 156), bool] */;
    %1321 = @func_4352() /* ty=Tensor[(8, 4, 11), float64] */;
    %1322 = @func_3521() /* ty=Tensor[(8, 4, 11), float64] */;
    %1323 = logical_and(%1317, %1318) /* ty=Tensor[(11, 156), bool] */;
    (meta[relay.Constant][46] /* ty=Tensor[(364), float64] */, %1319, %1320, %1321, %1322, %1323)
  };
  %1324(%var_4886, %var_4887) /* ty=(Tensor[(364), float64], Tensor[(8, 14, 10), bool], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */
}

def @func_3885() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1329 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1325 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1326 = @func_3162() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1327 = %1325.0;
    %1328 = %1326.0;
    (%1327, %1328)
  };
  %1329() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_15829() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1337 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1330 = @func_6383() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1331 = @func_7342() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1332 = @func_12360() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %1333 = @func_13117() /* ty=Tensor[(8, 4, 11), float64] */;
    %1334 = %1330.0;
    %1335 = %1331.0;
    %1336 = %1332.0;
    (%1333, %1334, %1335, %1336)
  };
  %1337() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_2095() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) {
  @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */
}

def @func_3582() -> (Tensor[(112), float64], Tensor[(8, 14, 10), float64]) {
  @func_3580() /* ty=(Tensor[(112), float64], Tensor[(8, 14, 10), float64]) */
}

def @func_16056() -> (Tensor[(8, 4, 11), float64],) {
  %1338 = @func_7032() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1339 = %1338.0;
  (%1339,)
}

def @func_4513() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_4511() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_16119() -> Tensor[(11, 156), uint64] {
  @func_11371() /* ty=Tensor[(11, 156), uint64] */
}

def @func_4621() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1343 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1340 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
    %1341 = @func_2306() /* ty=Tensor[(8, 4, 11), float64] */;
    %1342 = %1340.0;
    (%1341, %1342)
  };
  %1343() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_7448(%var_7434: uint32, %var_7435: Tensor[(14, 6, 12), uint32]) -> (Tensor[(14, 6, 12), uint32], Tensor[(14, 6, 12), bool]) {
  %1344 = cast(%var_7434, dtype="uint32") /* ty=uint32 */;
  %1345 = cast(%var_7435, dtype="uint32") /* ty=Tensor[(14, 6, 12), uint32] */;
  %1346 = cast(%var_7434, dtype="bool") /* ty=bool */;
  %1347 = cast(%var_7435, dtype="bool") /* ty=Tensor[(14, 6, 12), bool] */;
  %1348 = bitwise_and(%1344, %1345) /* ty=Tensor[(14, 6, 12), uint32] */;
  %1349 = less(%1346, %1347) /* ty=Tensor[(14, 6, 12), bool] */;
  (%1348, %1349)
}

def @func_4430() -> (Tensor[(8, 4, 11), float64],) {
  @func_4428() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_6385() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_6383() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_2907(%var_2905: Tensor[(1, 4, 9), float32]) -> (Tensor[(?, 4, 9), bool],) {
  @func_2904(%var_2905) /* ty=(Tensor[(?, 4, 9), bool],) */
}

def @func_14888(%var_14883: Tensor[(273), bool], %var_14884: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(2, 3, 11), bool], Tensor[(66), uint64], Tensor[(1716), uint64], Tensor[(273), bool], Tensor[(112), float64]) {
  %1350 = @func_7550() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32]) */;
  %1351 = cast(meta[relay.Constant][48] /* ty=Tensor[(66), uint64] */, dtype="uint64") /* ty=Tensor[(66), uint64] */;
  %1352 = cast(meta[relay.Constant][48] /* ty=Tensor[(66), uint64] */, dtype="uint64") /* ty=Tensor[(66), uint64] */;
  %1353 = reshape(%1351, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
  %1354 = reshape(%1352, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), uint64] */;
  %1355 = @func_12177(%1353, %1354) /* ty=(Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) */;
  %1356 = cast(%var_14883, dtype="bool") /* ty=Tensor[(273), bool] */;
  %1357 = cast(%var_14884, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1358 = reshape(%1356, newshape=[13, 21]) /* ty=Tensor[(13, 21), bool] */;
  %1359 = reshape(%1357, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %1360 = @func_10304(%1358, %1359) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(39, 6), bool], Tensor[(1716), uint64], Tensor[(11, 156), uint64], Tensor[(273), bool], Tensor[(13, 21), bool], Tensor[(112), float64]) */;
  %1361 = %1350.1;
  %1362 = %1355.0;
  %1363 = %1360.2;
  (%1361, %1362, meta[relay.Constant][48] /* ty=Tensor[(66), uint64] */, %1363, %var_14883, %var_14884)
}

def @func_3054() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) {
  @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */
}

def @func_5314() -> (Tensor[(11, 156), float64],) {
  %1364 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %1365 = %1364.4;
  (%1365,)
}

def @func_13716() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) {
  @func_13714() /* ty=(Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_13077() -> (Tensor[(8, 14, 10), float64],) {
  @func_13075() /* ty=(Tensor[(8, 14, 10), float64],) */
}

def @func_19615() -> (Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  %1366 = @func_13749() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1367 = @func_16119() /* ty=Tensor[(11, 156), uint64] */;
  %1368 = %1366.1;
  (%1367, %1368)
}

def @func_5890(%var_5888: Tensor[(3, 12), float32], %var_5889: Tensor[(273), bool]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(?, 4, 9), bool], Tensor[(3, 12), float32], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(1, 8, 5), float64], Tensor[(40), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64]) {
  @func_5886(%var_5888, %var_5889) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64], Tensor[(?, 4, 9), bool], Tensor[(3, 12), float32], Tensor[(11, 12, 13), float32], Tensor[(234), bool], Tensor[(1, 8, 5), float64], Tensor[(40), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(273), bool], Tensor[(112), float64]) */
}

def @func_13075() -> (Tensor[(8, 14, 10), float64],) {
  %1369 = @func_2093() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 14, 10), float64], Tensor[(1120), float64]) */;
  %1370 = %1369.3;
  (%1370,)
}

def @func_7505() -> Tensor[(8, 4, 11), float64] {
  @func_7307() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_1950() -> (Tensor[(8, 4, 11), float64],) {
  %1371 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1371,)
}

def @func_16121() -> Tensor[(11, 156), uint64] {
  @func_16119() /* ty=Tensor[(11, 156), uint64] */
}

def @func_12181(%var_12179: Tensor[(2, 3, 11), uint64], %var_12180: Tensor[(2, 3, 11), uint64]) -> (Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) {
  @func_12177(%var_12179, %var_12180) /* ty=(Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) */
}

def @func_2926() -> (Tensor[(8, 4, 11), float64],) {
  %1372 = @func_2035() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1372,)
}

def @func_12177(%var_12168: Tensor[(2, 3, 11), uint64], %var_12169: Tensor[(2, 3, 11), uint64]) -> (Tensor[(2, 3, 11), bool], Tensor[(2, 3, 11), float64]) {
  %1373 = cast(%var_12169, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %1374 = shape_of(%var_12168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1375 = cast(%var_12168, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %1376 = dyn.reshape(%1373, %1374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1377 = cast(%var_12168, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %1378 = greater_equal(%1375, %1376) /* ty=Tensor[(2, 3, 11), bool] */;
  %1379 = log2(%1377) /* ty=Tensor[(2, 3, 11), float64] */;
  (%1378, %1379)
}

def @func_870(%var_868: Tensor[(2, 4, 14), float64], %var_869: Tensor[(1716), uint64]) -> (Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) {
  @func_866(%var_868, %var_869) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */
}

def @func_1562(%var_1560: Tensor[(112), float64], %var_1561: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) {
  @func_1558(%var_1560, %var_1561) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) */
}

def @func_12889() -> (Tensor[(1, 3, 16), float64],) {
  %1380 = @func_11838() /* ty=(Tensor[(1, 3, 16), float64], Tensor[(8, 4, 11), float64]) */;
  %1381 = %1380.0;
  (%1381,)
}

def @func_18643(%var_18641: float64) -> (Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(11, 156), float64], Tensor[(5, 16, 11), float32]) {
  @func_18640(%var_18641) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(1, 4, 1), float64], float64, Tensor[(11, 156), float64], Tensor[(5, 16, 11), float32]) */
}

def @func_5053() -> (Tensor[(8, 4, 11), float64],) {
  @func_5051() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_17332() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1386 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1382 = @func_10604() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1383 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1384 = %1382.0;
    %1385 = %1383.1;
    (%1384, %1385)
  };
  %1386() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_8656() -> (Tensor[(8, 4, 11), float64],) {
  %1387 = @func_3305() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float32], Tensor[(8, 4, 11), float64]) */;
  %1388 = %1387.2;
  (%1388,)
}

def @func_11332() -> Tensor[(8, 4, 11), float64] {
  %1390 = fn () -> Tensor[(8, 4, 11), float64] {
    %1389 = @func_5498() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1389.0
  };
  %1390() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_5187() -> (Tensor[(8, 4, 11), float64],) {
  @func_5185() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_16516() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1391 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1392 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1393 = %1391.1;
  %1394 = %1392.0;
  (%1393, %1394)
}

def @func_13853() -> Tensor[(5, 16, 11), float32] {
  @func_13851() /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_12555() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(?, 8, 5), float64]) {
  %1395 = @func_2822() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1396 = @func_6383() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1397 = cast(meta[relay.Constant][49] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %1398 = reshape(%1397, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %1399 = @func_3898(%1398) /* ty=Tensor[(1, 8, 5), float64] */;
  %1400 = cast(meta[relay.Constant][49] /* ty=Tensor[(40), float64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1401 = shape_of(%1399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1402 = cast(%1399, dtype="int64") /* ty=Tensor[(1, 8, 5), int64] */;
  %1403 = dyn.reshape(%1400, %1401, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1404 = left_shift(%1402, %1403) /* ty=Tensor[(?, 8, 5), int64] */;
  %1405 = cast(%1399, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
  %1406 = shape_of(%1404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1407 = cast(%1404, dtype="float64") /* ty=Tensor[(?, 8, 5), float64] */;
  %1408 = dyn.reshape(%1405, %1406, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1409 = %1395.0;
  %1410 = %1396.0;
  %1411 = divide(%1407, %1408) /* ty=Tensor[(?, 8, 5), float64] */;
  (%1409, %1410, %1411)
}

def @func_5185() -> (Tensor[(8, 4, 11), float64],) {
  %1412 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1413 = %1412.0;
  (%1413,)
}

def @func_9434() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_9432() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_10897() -> Tensor[(8, 4, 11), float64] {
  %1415 = fn () -> Tensor[(8, 4, 11), float64] {
    %1414 = @func_5665() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1414.0
  };
  %1415() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_1792() -> Tensor[(8, 4, 11), float64] {
  %1416 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_1613() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %1416() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_1767() -> Tensor[(8, 4, 11), float64] {
  %1417 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
  %1418 = cast(%1417, dtype="float64") /* ty=Tensor[(8, 4, 11), float64] */;
  sinh(%1418) /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_5499() -> (Tensor[(8, 4, 11), float64],) {
  %1420 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1419 = @func_5231() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1419,)
  };
  %1420() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_16768() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(5, 16, 11), float32]) {
  %1421 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1422 = @func_16151() /* ty=Tensor[(8, 4, 11), float64] */;
  %1423 = %1421.0;
  %1424 = @func_12853() /* ty=Tensor[(5, 16, 11), float32] */;
  (%1422, %1423, %1424)
}

def @func_12059() -> Tensor[(8, 4, 11), float32] {
  @func_12057() /* ty=Tensor[(8, 4, 11), float32] */
}

def @func_16192() -> Tensor[(8, 4, 11), float32] {
  @func_16190() /* ty=Tensor[(8, 4, 11), float32] */
}

def @func_2573() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %1429 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
    %1425 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1426 = @func_2209() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %1427 = %1425.0;
    %1428 = %1426.1;
    (%1427, %1428)
  };
  %1429() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */
}

def @func_19834() -> (Tensor[(8, 4, 11), float64],) {
  %1432 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1430 = @func_6005() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1431 = %1430.0;
    (%1431,)
  };
  %1432() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_13347() -> Tensor[(8, 4, 11), float64] {
  %1434 = fn () -> Tensor[(8, 4, 11), float64] {
    %1433 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1433.0
  };
  %1434() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_11458() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64]) {
  %1435 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1436 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
  %1437 = @func_6670() /* ty=Tensor[(8, 4, 11), float64] */;
  %1438 = %1435.0;
  %1439 = %1436.0;
  (%1437, %1438, %1439)
}

def @func_12396() -> (Tensor[(8, 4, 11), float64],) {
  %1442 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1440 = @func_4191() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1441 = %1440.0;
    (%1441,)
  };
  %1442() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_17837() -> (Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(550), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
  %1452 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(550), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) {
    %1443 = @func_17221() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1444 = cast(meta[relay.Constant][50] /* ty=Tensor[(550), float64] */, dtype="float64") /* ty=Tensor[(550), float64] */;
    %1445 = reshape(%1444, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), float64] */;
    %1446 = @func_13662(%1445) /* ty=(Tensor[(10, 11, 5), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64]) */;
    %1447 = @func_12360() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) */;
    %1448 = %1443.0;
    %1449 = %1446.1;
    %1450 = %1447.1;
    %1451 = @func_6065() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1448, %1449, meta[relay.Constant][50] /* ty=Tensor[(550), float64] */, %1450, %1451)
  };
  %1452() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(550), float64], Tensor[(11, 156), uint64], Tensor[(8, 4, 11), float64]) */
}

def @func_3693() -> (Tensor[(11, 156), bool],) {
  %1455 = fn () -> (Tensor[(11, 156), bool],) {
    %1453 = @func_3052() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(11, 156), float64]) */;
    %1454 = %1453.2;
    (%1454,)
  };
  %1455() /* ty=(Tensor[(11, 156), bool],) */
}

def @func_13226() -> Tensor[(1716), uint64] {
  %1457 = fn () -> Tensor[(1716), uint64] {
    %1456 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
    %1456.3
  };
  %1457() /* ty=Tensor[(1716), uint64] */
}

def @func_13117() -> Tensor[(8, 4, 11), float64] {
  %1458 = @func_11716() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %1458.0
}

def @func_11862(%var_11860: Tensor[(3, 1, 6), float32]) -> Tensor[(3, 7, 6), bool] {
  @func_11859(%var_11860) /* ty=Tensor[(3, 7, 6), bool] */
}

def @func_13758() -> Tensor[(8, 4, 11), float64] {
  @func_13756() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_1558(%var_1553: Tensor[(112), float64], %var_1554: Tensor[(1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(1716), uint64], Tensor[(112), float64], Tensor[(1716), uint64]) {
  %1459 = @func_1456() /* ty=(Tensor[(8, 4, 11), float64],) */;
  %1460 = cast(%var_1553, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1461 = cast(%var_1554, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %1462 = reshape(%1460, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %1463 = reshape(%1461, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %1464 = @func_866(%1462, %1463) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(1716), uint64], Tensor[(234), bool], Tensor[(1716), uint64]) */;
  %1465 = %1459.0;
  %1466 = %1464.3;
  (%1465, %1466, %var_1553, %var_1554)
}

def @func_1711(%var_1710: Tensor[(1, 1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) {
  %1482 = fn (%var_1692: Tensor[(1, 1716), uint64]) -> (Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) {
    %1467 = cast(meta[relay.Constant][51] /* ty=Tensor[(39, 6), bool] */, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
    %1468 = cast(meta[relay.Constant][51] /* ty=Tensor[(39, 6), bool] */, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
    %1469 = cast(%var_1692, dtype="uint64") /* ty=Tensor[(1, 1716), uint64] */;
    %1470 = reshape(%1467, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %1471 = reshape(%1468, newshape=[6, 3, 13]) /* ty=Tensor[(6, 3, 13), bool] */;
    %1472 = reshape(%1469, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %1473 = @func_593(%1470, %1471, %1472) /* ty=(Tensor[(6, 3, 13), bool], Tensor[(11, 12, 13), float32], Tensor[(1716), uint64]) */;
    %1474 = cast(%var_1692, dtype="uint64") /* ty=Tensor[(1, 1716), uint64] */;
    %1475 = %1473.1;
    %1476 = cast(%1475, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
    %1477 = reshape(%1474, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %1478 = reshape(%1476, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %1479 = @func_54(%1477, %1478) /* ty=(Tensor[(11, 12, 13), float32],) */;
    %1480 = @func_1613() /* ty=Tensor[(8, 4, 11), float64] */;
    %1481 = %1479.0;
    (%1480, %1475, meta[relay.Constant][51] /* ty=Tensor[(39, 6), bool] */, %var_1692, %1481)
  };
  %1482(%var_1710) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 12, 13), float32], Tensor[(39, 6), bool], Tensor[(1, 1716), uint64], Tensor[(11, 12, 13), float32]) */
}

def @func_7034() -> (Tensor[(8, 4, 11), float64],) {
  @func_7032() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_19174() -> Tensor[(3, 9, 5), uint64] {
  %1483 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 9, 5), uint64] */, dtype="uint64") /* ty=Tensor[(3, 9, 5), uint64] */;
  %1484 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(3, 9, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1485 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 9, 5), uint64] */, dtype="uint64") /* ty=Tensor[(3, 9, 5), uint64] */;
  %1486 = dyn.reshape(%1483, %1484, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%1485, %1486) /* ty=Tensor[(3, 9, 5), uint64] */
}

def @func_19998() -> Tensor[(8, 4, 11), float64] {
  %1487 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_10896() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %1487() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_8039(%var_8038: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64], Tensor[(112), float64]) {
  %1493 = fn (%var_8035: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64], Tensor[(112), float64]) {
    %1488 = cast(%var_8035, dtype="float64") /* ty=Tensor[(112), float64] */;
    %1489 = reshape(%1488, newshape=[56, 2]) /* ty=Tensor[(56, 2), float64] */;
    %1490 = @func_6560(%1489) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64]) */;
    %1491 = @func_5231() /* ty=Tensor[(8, 4, 11), float64] */;
    %1492 = %1490.3;
    (%1491, %1492, %var_8035)
  };
  %1493(%var_8038) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(56, 2), float64], Tensor[(112), float64]) */
}

def @func_18938(%var_18907: Tensor[(11, 156), float64], %var_18935: Tensor[(432), float32]) -> (Tensor[(11, 156), float32], Tensor[(11, 156), uint16], Tensor[(11, 156), bool], Tensor[(3, 16, 9), float32], Tensor[(432), float32]) {
  %1494 = @func_5314() /* ty=(Tensor[(11, 156), float64],) */;
  %1495 = %1494.0;
  %1496 = cast(%var_18907, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1497 = shape_of(%1495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1498 = cast(%1495, dtype="float32") /* ty=Tensor[(11, 156), float32] */;
  %1499 = dyn.reshape(%1496, %1497, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1500 = cast(%var_18907, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1501 = shape_of(%1495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1502 = cast(%1495, dtype="uint16") /* ty=Tensor[(11, 156), uint16] */;
  %1503 = dyn.reshape(%1500, %1501, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1504 = cast(meta[relay.Constant][54] /* ty=Tensor[(11, 156), float64] */, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %1505 = shape_of(%1495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1506 = cast(%1495, dtype="bool") /* ty=Tensor[(11, 156), bool] */;
  %1507 = dyn.reshape(%1504, %1505, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1508 = cast(%var_18935, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1509 = cast(%var_18935, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1510 = reshape(%1508, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), float32] */;
  %1511 = reshape(%1509, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), float32] */;
  %1512 = mod(%1498, %1499) /* ty=Tensor[(11, 156), float32] */;
  %1513 = subtract(%1502, %1503) /* ty=Tensor[(11, 156), uint16] */;
  %1514 = greater_equal(%1506, %1507) /* ty=Tensor[(11, 156), bool] */;
  %1515 = @func_12136(%1510, %1511) /* ty=Tensor[(3, 16, 9), float32] */;
  (%1512, %1513, %1514, %1515, %var_18935)
}

def @func_11460() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64]) {
  @func_11458() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(11, 156), float64]) */
}

def @func_12891() -> (Tensor[(1, 3, 16), float64],) {
  @func_12889() /* ty=(Tensor[(1, 3, 16), float64],) */
}

def @func_8277() -> Tensor[(8, 4, 11), float64] {
  @func_8275() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_15796(%var_15794: Tensor[(112), float64]) -> (Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) {
  @func_15793(%var_15794) /* ty=(Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(273), bool], Tensor[(112), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_12360() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), uint64]) {
  %1516 = @func_7971() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1517 = %1516.2;
  %1518 = @func_8515() /* ty=Tensor[(11, 156), uint64] */;
  (%1517, %1518)
}

def @func_17024() -> (Tensor[(8, 4, 11), float64],) {
  %1520 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1519 = @func_5231() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1519,)
  };
  %1520() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_4428() -> (Tensor[(8, 4, 11), float64],) {
  %1521 = @func_4282() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1522 = %1521.0;
  (%1522,)
}

def @func_14796() -> Tensor[(8, 4, 11), float64] {
  %1523 = fn () -> Tensor[(8, 4, 11), float64] {
    @func_4983() /* ty=Tensor[(8, 4, 11), float64] */
  };
  %1523() /* ty=Tensor[(8, 4, 11), float64] */
}

def @func_7307() -> Tensor[(8, 4, 11), float64] {
  %1524 = @func_3080() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(112), float64], Tensor[(1716), uint64], Tensor[(11, 156), float64]) */;
  %1524.1
}

def @func_14072() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1530 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1525 = @func_5418() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
    %1526 = @func_5185() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1527 = %1525.1;
    %1528 = %1526.0;
    %1529 = @func_8823() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1527, %1528, %1529)
  };
  %1530() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_13714() -> (Tensor[(8, 14, 10), float64], Tensor[(8, 4, 11), float64]) {
  %1531 = @func_13075() /* ty=(Tensor[(8, 14, 10), float64],) */;
  %1532 = @func_9124() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1533 = %1531.0;
  %1534 = %1532.1;
  (%1533, %1534)
}

def @func_17038() -> (Tensor[(8, 4, 11), float64],) {
  @func_17036() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_13330() -> (Tensor[(11, 156), float32],) {
  @func_13328() /* ty=(Tensor[(11, 156), float32],) */
}

def @func_7718(%var_7716: Tensor[(10, 13, 8), uint64], %var_7717: Tensor[(10, 13, 8), uint64]) -> (Tensor[(10, 13, 8), uint64], Tensor[(10, 13, 8), float64], Tensor[(8, 4, 11), float64]) {
  @func_7714(%var_7716, %var_7717) /* ty=(Tensor[(10, 13, 8), uint64], Tensor[(10, 13, 8), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_54(%var_38: Tensor[(11, 12, 13), uint64], %var_39: Tensor[(11, 12, 13), uint64]) -> (Tensor[(11, 12, 13), float32],) {
  %1535 = cast(%var_39, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %1536 = shape_of(%var_38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1537 = cast(%var_38, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %1538 = dyn.reshape(%1535, %1536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1539 = bitwise_and(%1537, %1538) /* ty=Tensor[(11, 12, 13), uint64] */;
  %1540 = cast(%1539, dtype="float32") /* ty=Tensor[(11, 12, 13), float32] */;
  %1541 = tan(%1540) /* ty=Tensor[(11, 12, 13), float32] */;
  (%1541,)
}

def @func_15334() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  @func_15332() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_2336() -> (Tensor[(8, 4, 11), float64],) {
  %1542 = @func_2108() /* ty=Tensor[(8, 4, 11), float64] */;
  (%1542,)
}

def @func_8517() -> Tensor[(11, 156), uint64] {
  @func_8515() /* ty=Tensor[(11, 156), uint64] */
}

def @func_5448() -> (Tensor[(8, 4, 11), float64],) {
  %1545 = fn () -> (Tensor[(8, 4, 11), float64],) {
    %1543 = @func_5021() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1544 = %1543.0;
    (%1544,)
  };
  %1545() /* ty=(Tensor[(8, 4, 11), float64],) */
}

def @func_19209() -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
  %1549 = fn () -> (Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) {
    %1546 = @func_8044() /* ty=(Tensor[(8, 4, 11), float64],) */;
    %1547 = %1546.0;
    %1548 = @func_18498() /* ty=Tensor[(8, 4, 11), float64] */;
    (%1547, %1548)
  };
  %1549() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */
}

def @func_18334() -> (Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool], Tensor[(8, 4, 11), float64]) {
  %1550 = @func_15828() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64], Tensor[(8, 4, 11), float64]) */;
  %1551 = @func_11716() /* ty=(Tensor[(8, 4, 11), float64], Tensor[(11, 156), bool]) */;
  %1552 = %1550.3;
  %1553 = @func_8562() /* ty=Tensor[(11, 156), bool] */;
  %1554 = %1551.0;
  (%1552, %1553, %1554)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen856/build/output.py:5792: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen856/build/output.py", line 5797, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(200) tvmgen_default_fused_asin_kernel0(float* __restrict__ T_asin, float* __restrict__ placeholder) {
  T_asin[(((int)threadIdx.x))] = asinf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

